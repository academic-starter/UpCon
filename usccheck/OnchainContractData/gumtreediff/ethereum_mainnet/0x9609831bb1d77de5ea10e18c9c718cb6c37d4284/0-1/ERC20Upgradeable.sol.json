{
  "matches": [
    {
      "src": ",: , [5620,5621]",
      "dest": ",: , [5620,5621]"
    },
    {
      "src": "identifier: _update [7834,7841]",
      "dest": "identifier: _update [7834,7841]"
    },
    {
      "src": "): ) [1650,1651]",
      "dest": "): ) [1650,1651]"
    },
    {
      "src": "call_argument [5607,5611]",
      "dest": "call_argument [5607,5611]"
    },
    {
      "src": "identifier: __ERC20_init_unchained [2178,2200]",
      "dest": "identifier: __ERC20_init_unchained [2178,2200]"
    },
    {
      "src": "identifier: name_ [2215,2220]",
      "dest": "identifier: name_ [2215,2220]"
    },
    {
      "src": "number_literal: 0 [8272,8273]",
      "dest": "number_literal: 0 [8272,8273]"
    },
    {
      "src": "primitive_type [1684,1691]",
      "dest": "primitive_type [1684,1691]"
    },
    {
      "src": "identifier: require [8394,8401]",
      "dest": "identifier: require [8394,8401]"
    },
    {
      "src": "type_name [6854,6861]",
      "dest": "type_name [6854,6861]"
    },
    {
      "src": "!=: != [10053,10055]",
      "dest": "!=: != [10053,10055]"
    },
    {
      "src": "visibility [1724,1731]",
      "dest": "visibility [1724,1731]"
    },
    {
      "src": "parameter [4005,4019]",
      "dest": "parameter [4005,4019]"
    },
    {
      "src": "\": \" [11486,11487]",
      "dest": "\": \" [11486,11487]"
    },
    {
      "src": "inheritance_specifier [1592,1617]",
      "dest": "inheritance_specifier [1592,1617]"
    },
    {
      "src": "array_access [9043,9056]",
      "dest": "array_access [9043,9056]"
    },
    {
      "src": "call_expression [9538,9603]",
      "dest": "call_expression [9538,9603]"
    },
    {
      "src": "primitive_type [11226,11233]",
      "dest": "primitive_type [11226,11233]"
    },
    {
      "src": "bool: bool [6177,6181]",
      "dest": "bool: bool [6177,6181]"
    },
    {
      "src": ",: , [7784,7785]",
      "dest": ",: , [7784,7785]"
    },
    {
      "src": "array_access [8588,8603]",
      "dest": "array_access [8588,8603]"
    },
    {
      "src": "identifier: _allowances [1732,1743]",
      "dest": "identifier: _allowances [1732,1743]"
    },
    {
      "src": ",: , [11239,11240]",
      "dest": ",: , [11239,11240]"
    },
    {
      "src": "type_name [1811,1817]",
      "dest": "type_name [1811,1817]"
    },
    {
      "src": "): ) [2673,2674]",
      "dest": "): ) [2673,2674]"
    },
    {
      "src": "primitive_type [7698,7705]",
      "dest": "primitive_type [7698,7705]"
    },
    {
      "src": ",: , [2220,2221]",
      "dest": ",: , [2220,2221]"
    },
    {
      "src": "variable_declaration [6919,6932]",
      "dest": "variable_declaration [6919,6932]"
    },
    {
      "src": "uint256: uint256 [4005,4012]",
      "dest": "uint256: uint256 [4005,4012]"
    },
    {
      "src": "identifier: to [7643,7645]",
      "dest": "identifier: to [7643,7645]"
    },
    {
      "src": "primitive_type [6854,6861]",
      "dest": "primitive_type [6854,6861]"
    },
    {
      "src": "expression_statement [10830,10867]",
      "dest": "expression_statement [10830,10867]"
    },
    {
      "src": "type_cast_expression [8264,8274]",
      "dest": "type_cast_expression [8264,8274]"
    },
    {
      "src": "): ) [2243,2244]",
      "dest": "): ) [2243,2244]"
    },
    {
      "src": "(: ( [4053,4054]",
      "dest": "(: ( [4053,4054]"
    },
    {
      "src": "identifier: symbol [2613,2619]",
      "dest": "identifier: symbol [2613,2619]"
    },
    {
      "src": "string [10068,10103]",
      "dest": "string [10068,10103]"
    },
    {
      "src": "string_literal [7786,7823]",
      "dest": "string_literal [7786,7823]"
    },
    {
      "src": "(: ( [11225,11226]",
      "dest": "(: ( [11225,11226]"
    },
    {
      "src": "identifier: ContextUpgradeable [1553,1571]",
      "dest": "identifier: ContextUpgradeable [1553,1571]"
    },
    {
      "src": "state_variable_declaration [1624,1670]",
      "dest": "state_variable_declaration [1624,1670]"
    },
    {
      "src": "=: = [8604,8605]",
      "dest": "=: = [8604,8605]"
    },
    {
      "src": "string: string [2038,2044]",
      "dest": "string: string [2038,2044]"
    },
    {
      "src": "primitive_type [1632,1639]",
      "dest": "primitive_type [1632,1639]"
    },
    {
      "src": "identifier: spender [11546,11553]",
      "dest": "identifier: spender [11546,11553]"
    },
    {
      "src": "private: private [1724,1731]",
      "dest": "private: private [1724,1731]"
    },
    {
      "src": "bool: bool [4054,4058]",
      "dest": "bool: bool [4054,4058]"
    },
    {
      "src": "expression_statement [9043,9067]",
      "dest": "expression_statement [9043,9067]"
    },
    {
      "src": "contract: contract [1509,1517]",
      "dest": "contract: contract [1509,1517]"
    },
    {
      "src": "address: address [4241,4248]",
      "dest": "address: address [4241,4248]"
    },
    {
      "src": "{: { [8242,8243]",
      "dest": "{: { [8242,8243]"
    },
    {
      "src": "parameter [10598,10611]",
      "dest": "parameter [10598,10611]"
    },
    {
      "src": "}: } [10919,10920]",
      "dest": "}: } [10919,10920]"
    },
    {
      "src": "visibility [2245,2253]",
      "dest": "visibility [2245,2253]"
    },
    {
      "src": "identifier: spender [6845,6852]",
      "dest": "identifier: spender [6845,6852]"
    },
    {
      "src": "identifier: to [4125,4127]",
      "dest": "identifier: to [4125,4127]"
    },
    {
      "src": "function_body [2675,2706]",
      "dest": "function_body [2675,2706]"
    },
    {
      "src": "+=: += [8303,8305]",
      "dest": "+=: += [8303,8305]"
    },
    {
      "src": "(: ( [3727,3728]",
      "dest": "(: ( [3727,3728]"
    },
    {
      "src": "\": \" [7064,7065]",
      "dest": "\": \" [7064,7065]"
    },
    {
      "src": ",: , [9119,9120]",
      "dest": ",: , [9119,9120]"
    },
    {
      "src": "call_argument [7064,7103]",
      "dest": "call_argument [7064,7103]"
    },
    {
      "src": ",: , [8423,8424]",
      "dest": ",: , [8423,8424]"
    },
    {
      "src": "return: return [2685,2691]",
      "dest": "return: return [2685,2691]"
    },
    {
      "src": "type_name [4778,4785]",
      "dest": "type_name [4778,4785]"
    },
    {
      "src": "!=: != [9554,9556]",
      "dest": "!=: != [9554,9556]"
    },
    {
      "src": "primitive_type [6133,6140]",
      "dest": "primitive_type [6133,6140]"
    },
    {
      "src": "): ) [1722,1723]",
      "dest": "): ) [1722,1723]"
    },
    {
      "src": "return_statement [3570,3590]",
      "dest": "return_statement [3570,3590]"
    },
    {
      "src": "[: [ [11884,11885]",
      "dest": "[: [ [11884,11885]"
    },
    {
      "src": "return_type_definition [4753,4767]",
      "dest": "return_type_definition [4753,4767]"
    },
    {
      "src": "parameter [5486,5500]",
      "dest": "parameter [5486,5500]"
    },
    {
      "src": "parameter [11226,11239]",
      "dest": "parameter [11226,11239]"
    },
    {
      "src": "return_statement [7219,7231]",
      "dest": "return_statement [7219,7231]"
    },
    {
      "src": "): ) [11580,11581]",
      "dest": "): ) [11580,11581]"
    },
    {
      "src": ",: , [2146,2147]",
      "dest": ",: , [2146,2147]"
    },
    {
      "src": "call_expression [4794,4806]",
      "dest": "call_expression [4794,4806]"
    },
    {
      "src": "type_cast_expression [10690,10700]",
      "dest": "type_cast_expression [10690,10700]"
    },
    {
      "src": "): ) [3511,3512]",
      "dest": "): ) [3511,3512]"
    },
    {
      "src": "): ) [10149,10150]",
      "dest": "): ) [10149,10150]"
    },
    {
      "src": "type_name [4256,4263]",
      "dest": "type_name [4256,4263]"
    },
    {
      "src": "}: } [10156,10157]",
      "dest": "}: } [10156,10157]"
    },
    {
      "src": "return_type_definition [5526,5540]",
      "dest": "return_type_definition [5526,5540]"
    },
    {
      "src": "{: { [2462,2463]",
      "dest": "{: { [2462,2463]"
    },
    {
      "src": "call_argument [5659,5665]",
      "dest": "call_argument [5659,5665]"
    },
    {
      "src": "function_definition [5438,5694]",
      "dest": "function_definition [5438,5694]"
    },
    {
      "src": "call_expression [11530,11581]",
      "dest": "call_expression [11530,11581]"
    },
    {
      "src": "identifier: amount [4841,4847]",
      "dest": "identifier: amount [4841,4847]"
    },
    {
      "src": "true: true [7226,7230]",
      "dest": "true: true [7226,7230]"
    },
    {
      "src": "string [11456,11487]",
      "dest": "string [11456,11487]"
    },
    {
      "src": "call_argument [4118,4123]",
      "dest": "call_argument [4118,4123]"
    },
    {
      "src": "return_type_definition [6168,6182]",
      "dest": "return_type_definition [6168,6182]"
    },
    {
      "src": "view: view [2629,2633]",
      "dest": "view: view [2629,2633]"
    },
    {
      "src": "call_argument [10139,10140]",
      "dest": "call_argument [10139,10140]"
    },
    {
      "src": "function: function [11201,11209]",
      "dest": "function: function [11201,11209]"
    },
    {
      "src": "returns: returns [2651,2658]",
      "dest": "returns: returns [2651,2658]"
    },
    {
      "src": "identifier: max [11401,11404]",
      "dest": "identifier: max [11401,11404]"
    },
    {
      "src": "(: ( [6836,6837]",
      "dest": "(: ( [6836,6837]"
    },
    {
      "src": "type_name [4311,4318]",
      "dest": "type_name [4311,4318]"
    },
    {
      "src": "primitive_type [10770,10777]",
      "dest": "primitive_type [10770,10777]"
    },
    {
      "src": "function_body [3560,3596]",
      "dest": "function_body [3560,3596]"
    },
    {
      "src": "type_name [4054,4058]",
      "dest": "type_name [4054,4058]"
    },
    {
      "src": "function: function [6089,6097]",
      "dest": "function: function [6089,6097]"
    },
    {
      "src": "): ) [6181,6182]",
      "dest": "): ) [6181,6182]"
    },
    {
      "src": ",: , [10611,10612]",
      "dest": ",: , [10611,10612]"
    },
    {
      "src": "string: string [2447,2453]",
      "dest": "string: string [2447,2453]"
    },
    {
      "src": "type_name [8197,8204]",
      "dest": "type_name [8197,8204]"
    },
    {
      "src": "parameter [7635,7645]",
      "dest": "parameter [7635,7645]"
    },
    {
      "src": "address: address [7698,7705]",
      "dest": "address: address [7698,7705]"
    },
    {
      "src": "binary_expression [11428,11454]",
      "dest": "binary_expression [11428,11454]"
    },
    {
      "src": "type_name [4696,4703]",
      "dest": "type_name [4696,4703]"
    },
    {
      "src": "expression_statement [11420,11489]",
      "dest": "expression_statement [11420,11489]"
    },
    {
      "src": "identifier: spender [10849,10856]",
      "dest": "identifier: spender [10849,10856]"
    },
    {
      "src": "state_variable_declaration [1750,1779]",
      "dest": "state_variable_declaration [1750,1779]"
    },
    {
      "src": "{: { [2108,2109]",
      "dest": "{: { [2108,2109]"
    },
    {
      "src": "identifier: to [8665,8667]",
      "dest": "identifier: to [8665,8667]"
    },
    {
      "src": "return_statement [4330,4365]",
      "dest": "return_statement [4330,4365]"
    },
    {
      "src": ",: , [6245,6246]",
      "dest": ",: , [6245,6246]"
    },
    {
      "src": ",: , [6271,6272]",
      "dest": ",: , [6271,6272]"
    },
    {
      "src": "identifier: spender [6273,6280]",
      "dest": "identifier: spender [6273,6280]"
    },
    {
      "src": "type_name [11877,11884]",
      "dest": "type_name [11877,11884]"
    },
    {
      "src": "number_literal: 45 [11885,11887]",
      "dest": "number_literal: 45 [11885,11887]"
    },
    {
      "src": "): ) [1721,1722]",
      "dest": "): ) [1721,1722]"
    },
    {
      "src": "]: ] [8379,8380]",
      "dest": "]: ] [8379,8380]"
    },
    {
      "src": "type_name [1750,1757]",
      "dest": "type_name [1750,1757]"
    },
    {
      "src": "return: return [3570,3576]",
      "dest": "return: return [3570,3576]"
    },
    {
      "src": "comment: /**      * @dev Creates `amount` tokens and assigns them to `account`, by transferring it from address(0).      * Relies on the `_update` mechanism      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * NOTE: This function is not virtual, {_update} should be overridden instead.      */ [9145,9466]",
      "dest": "comment: /**      * @dev Creates `amount` tokens and assigns them to `account`, by transferring it from address(0).      * Relies on the `_update` mechanism      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * NOTE: This function is not virtual, {_update} should be overridden instead.      */ [9145,9466]"
    },
    {
      "src": "{: { [6183,6184]",
      "dest": "{: { [6183,6184]"
    },
    {
      "src": ",: , [4254,4255]",
      "dest": ",: , [4254,4255]"
    },
    {
      "src": "): ) [4805,4806]",
      "dest": "): ) [4805,4806]"
    },
    {
      "src": "type_cast_expression [9621,9631]",
      "dest": "type_cast_expression [9621,9631]"
    },
    {
      "src": "(: ( [10063,10064]",
      "dest": "(: ( [10063,10064]"
    },
    {
      "src": "): ) [3735,3736]",
      "dest": "): ) [3735,3736]"
    },
    {
      "src": ",: , [5472,5473]",
      "dest": ",: , [5472,5473]"
    },
    {
      "src": "virtual: virtual [2421,2428]",
      "dest": "virtual: virtual [2421,2428]"
    },
    {
      "src": "type_name [11301,11308]",
      "dest": "type_name [11301,11308]"
    },
    {
      "src": "): ) [8274,8275]",
      "dest": "): ) [8274,8275]"
    },
    {
      "src": "call_argument [8425,8465]",
      "dest": "call_argument [8425,8465]"
    },
    {
      "src": "type_name [4713,4720]",
      "dest": "type_name [4713,4720]"
    },
    {
      "src": "primitive_type [5474,5481]",
      "dest": "primitive_type [5474,5481]"
    },
    {
      "src": "call_argument [11338,11343]",
      "dest": "call_argument [11338,11343]"
    },
    {
      "src": "primitive_type [1703,1710]",
      "dest": "primitive_type [1703,1710]"
    },
    {
      "src": "identifier: owner [11338,11343]",
      "dest": "identifier: owner [11338,11343]"
    },
    {
      "src": "type_name [1676,1723]",
      "dest": "type_name [1676,1723]"
    },
    {
      "src": "): ) [9648,9649]",
      "dest": "): ) [9648,9649]"
    },
    {
      "src": "type_name [9985,9992]",
      "dest": "type_name [9985,9992]"
    },
    {
      "src": "private: private [1758,1765]",
      "dest": "private: private [1758,1765]"
    },
    {
      "src": "address: address [8264,8271]",
      "dest": "address: address [8264,8271]"
    },
    {
      "src": "import_directive [236,263]",
      "dest": "import_directive [236,263]"
    },
    {
      "src": "parameter [4241,4254]",
      "dest": "parameter [4241,4254]"
    },
    {
      "src": "user_defined_type [1538,1551]",
      "dest": "user_defined_type [1538,1551]"
    },
    {
      "src": "mapping: mapping [1624,1631]",
      "dest": "mapping: mapping [1624,1631]"
    },
    {
      "src": "(: ( [2659,2660]",
      "dest": "(: ( [2659,2660]"
    },
    {
      "src": "identifier: _spendAllowance [5591,5606]",
      "dest": "identifier: _spendAllowance [5591,5606]"
    },
    {
      "src": "type_name [10630,10637]",
      "dest": "type_name [10630,10637]"
    },
    {
      "src": "primitive_type [3397,3402]",
      "dest": "primitive_type [3397,3402]"
    },
    {
      "src": "primitive_type [6903,6907]",
      "dest": "primitive_type [6903,6907]"
    },
    {
      "src": "primitive_type [8209,8216]",
      "dest": "primitive_type [8209,8216]"
    },
    {
      "src": "(: ( [2446,2447]",
      "dest": "(: ( [2446,2447]"
    },
    {
      "src": "identifier: to [5655,5657]",
      "dest": "identifier: to [5655,5657]"
    },
    {
      "src": "): ) [4135,4136]",
      "dest": "): ) [4135,4136]"
    },
    {
      "src": "identifier: amount [8620,8626]",
      "dest": "identifier: amount [8620,8626]"
    },
    {
      "src": "uint256: uint256 [4311,4318]",
      "dest": "uint256: uint256 [4311,4318]"
    },
    {
      "src": "override: override [3710,3718]",
      "dest": "override: override [3710,3718]"
    },
    {
      "src": "returns: returns [6894,6901]",
      "dest": "returns: returns [6894,6901]"
    },
    {
      "src": "function_body [3737,3779]",
      "dest": "function_body [3737,3779]"
    },
    {
      "src": "): ) [7783,7784]",
      "dest": "): ) [7783,7784]"
    },
    {
      "src": "}: } [4370,4371]",
      "dest": "}: } [4370,4371]"
    },
    {
      "src": "identifier: owner [4078,4083]",
      "dest": "identifier: owner [4078,4083]"
    },
    {
      "src": "parameter [6116,6131]",
      "dest": "parameter [6116,6131]"
    },
    {
      "src": "]: ] [10856,10857]",
      "dest": "]: ] [10856,10857]"
    },
    {
      "src": "\": \" [7102,7103]",
      "dest": "\": \" [7102,7103]"
    },
    {
      "src": "\": \" [9569,9570]",
      "dest": "\": \" [9569,9570]"
    },
    {
      "src": "(: ( [1683,1684]",
      "dest": "(: ( [1683,1684]"
    },
    {
      "src": "virtual: virtual [4285,4292]",
      "dest": "virtual: virtual [4285,4292]"
    },
    {
      "src": "primitive_type [6193,6200]",
      "dest": "primitive_type [6193,6200]"
    },
    {
      "src": "string_literal [9569,9602]",
      "dest": "string_literal [9569,9602]"
    },
    {
      "src": "{: { [8907,8908]",
      "dest": "{: { [8907,8908]"
    },
    {
      "src": "identifier: Approval [10881,10889]",
      "dest": "identifier: Approval [10881,10889]"
    },
    {
      "src": "[: [ [4348,4349]",
      "dest": "[: [ [4348,4349]"
    },
    {
      "src": "string_literal [11456,11487]",
      "dest": "string_literal [11456,11487]"
    },
    {
      "src": "identifier: spender [6247,6254]",
      "dest": "identifier: spender [6247,6254]"
    },
    {
      "src": ",: , [6852,6853]",
      "dest": ",: , [6852,6853]"
    },
    {
      "src": "-=: -= [8843,8845]",
      "dest": "-=: -= [8843,8845]"
    },
    {
      "src": "identifier: owner [4118,4123]",
      "dest": "identifier: owner [4118,4123]"
    },
    {
      "src": "\": \" [7786,7787]",
      "dest": "\": \" [7786,7787]"
    },
    {
      "src": "(: ( [11366,11367]",
      "dest": "(: ( [11366,11367]"
    },
    {
      "src": "override_specifier [4036,4044]",
      "dest": "override_specifier [4036,4044]"
    },
    {
      "src": "primitive_type [8183,8190]",
      "dest": "primitive_type [8183,8190]"
    },
    {
      "src": "identifier: from [7690,7694]",
      "dest": "identifier: from [7690,7694]"
    },
    {
      "src": "}: } [2327,2328]",
      "dest": "}: } [2327,2328]"
    },
    {
      "src": "identifier: name_ [2141,2146]",
      "dest": "identifier: name_ [2141,2146]"
    },
    {
      "src": "primitive_type [5460,5467]",
      "dest": "primitive_type [5460,5467]"
    },
    {
      "src": "virtual: virtual [6160,6167]",
      "dest": "virtual: virtual [6160,6167]"
    },
    {
      "src": "string [138,161]",
      "dest": "string [138,161]"
    },
    {
      "src": "function_body [8242,9139]",
      "dest": "function_body [8242,9139]"
    },
    {
      "src": "import: import [131,137]",
      "dest": "import: import [131,137]"
    },
    {
      "src": "(: ( [3672,3673]",
      "dest": "(: ( [3672,3673]"
    },
    {
      "src": "call_expression [11420,11488]",
      "dest": "call_expression [11420,11488]"
    },
    {
      "src": "binary_expression [11555,11580]",
      "dest": "binary_expression [11555,11580]"
    },
    {
      "src": "visibility [10646,10654]",
      "dest": "visibility [10646,10654]"
    },
    {
      "src": "primitive_type [2447,2453]",
      "dest": "primitive_type [2447,2453]"
    },
    {
      "src": "parameter [5474,5484]",
      "dest": "parameter [5474,5484]"
    },
    {
      "src": "return_statement [2685,2700]",
      "dest": "return_statement [2685,2700]"
    },
    {
      "src": "identifier: _transfer [7611,7620]",
      "dest": "identifier: _transfer [7611,7620]"
    },
    {
      "src": "expression_statement [5639,5667]",
      "dest": "expression_statement [5639,5667]"
    },
    {
      "src": "): ) [10140,10141]",
      "dest": "): ) [10140,10141]"
    },
    {
      "src": "address: address [3993,4000]",
      "dest": "address: address [3993,4000]"
    },
    {
      "src": "identifier: _balances [3754,3763]",
      "dest": "identifier: _balances [3754,3763]"
    },
    {
      "src": "parameter [3551,3558]",
      "dest": "parameter [3551,3558]"
    },
    {
      "src": "=: = [6982,6983]",
      "dest": "=: = [6982,6983]"
    },
    {
      "src": "call_argument [9629,9630]",
      "dest": "call_argument [9629,9630]"
    },
    {
      "src": "returns: returns [3542,3549]",
      "dest": "returns: returns [3542,3549]"
    },
    {
      "src": "identifier: amount [5659,5665]",
      "dest": "identifier: amount [5659,5665]"
    },
    {
      "src": "state_variable_declaration [11877,11903]",
      "dest": "state_variable_declaration [11877,11903]"
    },
    {
      "src": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [5700,6084]",
      "dest": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [5700,6084]"
    },
    {
      "src": "identifier: approve [4688,4695]",
      "dest": "identifier: approve [4688,4695]"
    },
    {
      "src": "identifier: IERC20MetadataUpgradeable [1592,1617]",
      "dest": "identifier: IERC20MetadataUpgradeable [1592,1617]"
    },
    {
      "src": "(: ( [7841,7842]",
      "dest": "(: ( [7841,7842]"
    },
    {
      "src": "call_argument [9633,9640]",
      "dest": "call_argument [9633,9640]"
    },
    {
      "src": "identifier: _burn [9979,9984]",
      "dest": "identifier: _burn [9979,9984]"
    },
    {
      "src": "type_name [11258,11265]",
      "dest": "type_name [11258,11265]"
    },
    {
      "src": "parameter [10630,10644]",
      "dest": "parameter [10630,10644]"
    },
    {
      "src": "override: override [3533,3541]",
      "dest": "override: override [3533,3541]"
    },
    {
      "src": "primitive_type [8343,8350]",
      "dest": "primitive_type [8343,8350]"
    },
    {
      "src": "call_argument [2148,2155]",
      "dest": "call_argument [2148,2155]"
    },
    {
      "src": "(: ( [4240,4241]",
      "dest": "(: ( [4240,4241]"
    },
    {
      "src": "function_definition [2393,2491]",
      "dest": "function_definition [2393,2491]"
    },
    {
      "src": "): ) [7661,7662]",
      "dest": "): ) [7661,7662]"
    },
    {
      "src": "visibility [3513,3519]",
      "dest": "visibility [3513,3519]"
    },
    {
      "src": "identifier: _transfer [5639,5648]",
      "dest": "identifier: _transfer [5639,5648]"
    },
    {
      "src": "(: ( [9485,9486]",
      "dest": "(: ( [9485,9486]"
    },
    {
      "src": "): ) [4318,4319]",
      "dest": "): ) [4318,4319]"
    },
    {
      "src": "identifier: _allowances [10830,10841]",
      "dest": "identifier: _allowances [10830,10841]"
    },
    {
      "src": "memory: memory [2066,2072]",
      "dest": "memory: memory [2066,2072]"
    },
    {
      "src": "function_definition [9970,10157]",
      "dest": "function_definition [9970,10157]"
    },
    {
      "src": "{: { [3404,3405]",
      "dest": "{: { [3404,3405]"
    },
    {
      "src": "boolean_literal [4865,4869]",
      "dest": "boolean_literal [4865,4869]"
    },
    {
      "src": "function_definition [9471,9656]",
      "dest": "function_definition [9471,9656]"
    },
    {
      "src": "return_statement [6305,6317]",
      "dest": "return_statement [6305,6317]"
    },
    {
      "src": "solidity: solidity [112,120]",
      "dest": "solidity: solidity [112,120]"
    },
    {
      "src": "string [170,201]",
      "dest": "string [170,201]"
    },
    {
      "src": ",: , [1551,1552]",
      "dest": ",: , [1551,1552]"
    },
    {
      "src": "identifier: require [10751,10758]",
      "dest": "identifier: require [10751,10758]"
    },
    {
      "src": "(: ( [1702,1703]",
      "dest": "(: ( [1702,1703]"
    },
    {
      "src": "}: } [3778,3779]",
      "dest": "}: } [3778,3779]"
    },
    {
      "src": "override_specifier [3710,3718]",
      "dest": "override_specifier [3710,3718]"
    },
    {
      "src": "primitive_type [7621,7628]",
      "dest": "primitive_type [7621,7628]"
    },
    {
      "src": "primitive_type [7774,7781]",
      "dest": "primitive_type [7774,7781]"
    },
    {
      "src": "type_name [2660,2666]",
      "dest": "type_name [2660,2666]"
    },
    {
      "src": "): ) [3402,3403]",
      "dest": "): ) [3402,3403]"
    },
    {
      "src": "): ) [6294,6295]",
      "dest": "): ) [6294,6295]"
    },
    {
      "src": "type_name [10598,10605]",
      "dest": "type_name [10598,10605]"
    },
    {
      "src": "): ) [2407,2408]",
      "dest": "): ) [2407,2408]"
    },
    {
      "src": "view: view [4280,4284]",
      "dest": "view: view [4280,4284]"
    },
    {
      "src": "): ) [10740,10741]",
      "dest": "): ) [10740,10741]"
    },
    {
      "src": "(: ( [3510,3511]",
      "dest": "(: ( [3510,3511]"
    },
    {
      "src": "{: { [6909,6910]",
      "dest": "{: { [6909,6910]"
    },
    {
      "src": "}: } [9138,9139]",
      "dest": "}: } [9138,9139]"
    },
    {
      "src": "visibility [2409,2415]",
      "dest": "visibility [2409,2415]"
    },
    {
      "src": "identifier: _msgSender [6209,6219]",
      "dest": "identifier: _msgSender [6209,6219]"
    },
    {
      "src": "expression_statement [9538,9604]",
      "dest": "expression_statement [9538,9604]"
    },
    {
      "src": "override_specifier [2642,2650]",
      "dest": "override_specifier [2642,2650]"
    },
    {
      "src": "string_literal [8425,8465]",
      "dest": "string_literal [8425,8465]"
    },
    {
      "src": "parameter [6837,6852]",
      "dest": "parameter [6837,6852]"
    },
    {
      "src": "=: = [2312,2313]",
      "dest": "=: = [2312,2313]"
    },
    {
      "src": "primitive_type [11258,11265]",
      "dest": "primitive_type [11258,11265]"
    },
    {
      "src": "call_argument [11456,11487]",
      "dest": "call_argument [11456,11487]"
    },
    {
      "src": "call_argument [6266,6271]",
      "dest": "call_argument [6266,6271]"
    },
    {
      "src": "identifier: require [10673,10680]",
      "dest": "identifier: require [10673,10680]"
    },
    {
      "src": "variable_declaration_statement [11301,11354]",
      "dest": "variable_declaration_statement [11301,11354]"
    },
    {
      "src": ",: , [4127,4128]",
      "dest": ",: , [4127,4128]"
    },
    {
      "src": "function: function [4679,4687]",
      "dest": "function: function [4679,4687]"
    },
    {
      "src": "call_argument [10131,10141]",
      "dest": "call_argument [10131,10141]"
    },
    {
      "src": "primitive_type [10598,10605]",
      "dest": "primitive_type [10598,10605]"
    },
    {
      "src": "(: ( [8255,8256]",
      "dest": "(: ( [8255,8256]"
    },
    {
      "src": "override_specifier [2429,2437]",
      "dest": "override_specifier [2429,2437]"
    },
    {
      "src": "(: ( [6176,6177]",
      "dest": "(: ( [6176,6177]"
    },
    {
      "src": ",: , [4830,4831]",
      "dest": ",: , [4830,4831]"
    },
    {
      "src": "function_definition [8166,9139]",
      "dest": "function_definition [8166,9139]"
    },
    {
      "src": "primitive_type [4005,4012]",
      "dest": "primitive_type [4005,4012]"
    },
    {
      "src": "function_definition [6089,6323]",
      "dest": "function_definition [6089,6323]"
    },
    {
      "src": "call_argument [10897,10904]",
      "dest": "call_argument [10897,10904]"
    },
    {
      "src": "primitive_type [6919,6926]",
      "dest": "primitive_type [6919,6926]"
    },
    {
      "src": "identifier: fromBalance [8402,8413]",
      "dest": "identifier: fromBalance [8402,8413]"
    },
    {
      "src": "expression_statement [8588,8627]",
      "dest": "expression_statement [8588,8627]"
    },
    {
      "src": "address: address [8183,8190]",
      "dest": "address: address [8183,8190]"
    },
    {
      "src": "identifier: currentAllowance [11555,11571]",
      "dest": "identifier: currentAllowance [11555,11571]"
    },
    {
      "src": ",: , [7645,7646]",
      "dest": ",: , [7645,7646]"
    },
    {
      "src": "(: ( [9628,9629]",
      "dest": "(: ( [9628,9629]"
    },
    {
      "src": "primitive_type [11241,11248]",
      "dest": "primitive_type [11241,11248]"
    },
    {
      "src": "call_argument [10143,10149]",
      "dest": "call_argument [10143,10149]"
    },
    {
      "src": "expression_statement [2281,2295]",
      "dest": "expression_statement [2281,2295]"
    },
    {
      "src": "identifier: from [7629,7633]",
      "dest": "identifier: from [7629,7633]"
    },
    {
      "src": "identifier: from [8191,8195]",
      "dest": "identifier: from [8191,8195]"
    },
    {
      "src": "parameter [2660,2673]",
      "dest": "parameter [2660,2673]"
    },
    {
      "src": "identifier: account [3681,3688]",
      "dest": "identifier: account [3681,3688]"
    },
    {
      "src": "identifier: _totalSupply [3577,3589]",
      "dest": "identifier: _totalSupply [3577,3589]"
    },
    {
      "src": "true [6312,6316]",
      "dest": "true [6312,6316]"
    },
    {
      "src": "function_definition [2169,2328]",
      "dest": "function_definition [2169,2328]"
    },
    {
      "src": ",: , [9640,9641]",
      "dest": ",: , [9640,9641]"
    },
    {
      "src": "\": \" [10068,10069]",
      "dest": "\": \" [10068,10069]"
    },
    {
      "src": "): ) [8223,8224]",
      "dest": "): ) [8223,8224]"
    },
    {
      "src": "(: ( [10138,10139]",
      "dest": "(: ( [10138,10139]"
    },
    {
      "src": "identifier: spender [11249,11256]",
      "dest": "identifier: spender [11249,11256]"
    },
    {
      "src": "): ) [11272,11273]",
      "dest": "): ) [11272,11273]"
    },
    {
      "src": "call_expression [9613,9649]",
      "dest": "call_expression [9613,9649]"
    },
    {
      "src": "override: override [2642,2650]",
      "dest": "override: override [2642,2650]"
    },
    {
      "src": "): ) [5628,5629]",
      "dest": "): ) [5628,5629]"
    },
    {
      "src": "identifier: currentAllowance [7027,7043]",
      "dest": "identifier: currentAllowance [7027,7043]"
    },
    {
      "src": "identifier: subtractedValue [6862,6877]",
      "dest": "identifier: subtractedValue [6862,6877]"
    },
    {
      "src": "identifier: amount [8217,8223]",
      "dest": "identifier: amount [8217,8223]"
    },
    {
      "src": "identifier: _approve [7138,7146]",
      "dest": "identifier: _approve [7138,7146]"
    },
    {
      "src": "type_cast_expression [10056,10066]",
      "dest": "type_cast_expression [10056,10066]"
    },
    {
      "src": "return_statement [3414,3424]",
      "dest": "return_statement [3414,3424]"
    },
    {
      "src": "}: } [3429,3430]",
      "dest": "}: } [3429,3430]"
    },
    {
      "src": "identifier: spender [11345,11352]",
      "dest": "identifier: spender [11345,11352]"
    },
    {
      "src": "type_name [1785,1791]",
      "dest": "type_name [1785,1791]"
    },
    {
      "src": ",: , [7850,7851]",
      "dest": ",: , [7850,7851]"
    },
    {
      "src": "memory: memory [2454,2460]",
      "dest": "memory: memory [2454,2460]"
    },
    {
      "src": "identifier: spender [7001,7008]",
      "dest": "identifier: spender [7001,7008]"
    },
    {
      "src": "): ) [9602,9603]",
      "dest": "): ) [9602,9603]"
    },
    {
      "src": "(: ( [9620,9621]",
      "dest": "(: ( [9620,9621]"
    },
    {
      "src": "return: return [2472,2478]",
      "dest": "return: return [2472,2478]"
    },
    {
      "src": "): ) [8465,8466]",
      "dest": "): ) [8465,8466]"
    },
    {
      "src": "identifier: currentAllowance [11428,11444]",
      "dest": "identifier: currentAllowance [11428,11444]"
    },
    {
      "src": "call_expression [4108,4136]",
      "dest": "call_expression [4108,4136]"
    },
    {
      "src": "call_argument [7163,7197]",
      "dest": "call_argument [7163,7197]"
    },
    {
      "src": "call_expression [7760,7824]",
      "dest": "call_expression [7760,7824]"
    },
    {
      "src": "primitive_type [5551,5558]",
      "dest": "primitive_type [5551,5558]"
    },
    {
      "src": ",: , [9631,9632]",
      "dest": ",: , [9631,9632]"
    },
    {
      "src": ",: , [6131,6132]",
      "dest": ",: , [6131,6132]"
    },
    {
      "src": "identifier: owner [10890,10895]",
      "dest": "identifier: owner [10890,10895]"
    },
    {
      "src": "expression_statement [8830,8853]",
      "dest": "expression_statement [8830,8853]"
    },
    {
      "src": "import: import [163,169]",
      "dest": "import: import [163,169]"
    },
    {
      "src": "primitive_type [9503,9510]",
      "dest": "primitive_type [9503,9510]"
    },
    {
      "src": "virtual: virtual [2634,2641]",
      "dest": "virtual: virtual [2634,2641]"
    },
    {
      "src": "): ) [5500,5501]",
      "dest": "): ) [5500,5501]"
    },
    {
      "src": ",: , [9123,9124]",
      "dest": ",: , [9123,9124]"
    },
    {
      "src": "type_cast_expression [7698,7708]",
      "dest": "type_cast_expression [7698,7708]"
    },
    {
      "src": "call_expression [7682,7750]",
      "dest": "call_expression [7682,7750]"
    },
    {
      "src": "call_argument [10122,10129]",
      "dest": "call_argument [10122,10129]"
    },
    {
      "src": "!=: != [10687,10689]",
      "dest": "!=: != [10687,10689]"
    },
    {
      "src": "(: ( [4310,4311]",
      "dest": "(: ( [4310,4311]"
    },
    {
      "src": "parameter [4762,4766]",
      "dest": "parameter [4762,4766]"
    },
    {
      "src": "): ) [2620,2621]",
      "dest": "): ) [2620,2621]"
    },
    {
      "src": "state_mutability [3520,3524]",
      "dest": "state_mutability [3520,3524]"
    },
    {
      "src": ".: . [11400,11401]",
      "dest": ".: . [11400,11401]"
    },
    {
      "src": "): ) [6907,6908]",
      "dest": "): ) [6907,6908]"
    },
    {
      "src": "augmented_assignment_expression [8830,8852]",
      "dest": "augmented_assignment_expression [8830,8852]"
    },
    {
      "src": "]: ] [9055,9056]",
      "dest": "]: ] [9055,9056]"
    },
    {
      "src": "identifier: amount [8306,8312]",
      "dest": "identifier: amount [8306,8312]"
    },
    {
      "src": "state_mutability [3366,3370]",
      "dest": "state_mutability [3366,3370]"
    },
    {
      "src": "parameter [4054,4058]",
      "dest": "parameter [4054,4058]"
    },
    {
      "src": "{: { [5541,5542]",
      "dest": "{: { [5541,5542]"
    },
    {
      "src": "state_mutability [2416,2420]",
      "dest": "state_mutability [2416,2420]"
    },
    {
      "src": "): ) [9517,9518]",
      "dest": "): ) [9517,9518]"
    },
    {
      "src": "public: public [6879,6885]",
      "dest": "public: public [6879,6885]"
    },
    {
      "src": "visibility [1818,1825]",
      "dest": "visibility [1818,1825]"
    },
    {
      "src": "type_name [6837,6844]",
      "dest": "type_name [6837,6844]"
    },
    {
      "src": "identifier: decreaseAllowance [6819,6836]",
      "dest": "identifier: decreaseAllowance [6819,6836]"
    },
    {
      "src": "}: } [8650,8651]",
      "dest": "}: } [8650,8651]"
    },
    {
      "src": "identifier: _totalSupply [1766,1778]",
      "dest": "identifier: _totalSupply [1766,1778]"
    },
    {
      "src": "}: } [5693,5694]",
      "dest": "}: } [5693,5694]"
    },
    {
      "src": "expression_statement [10037,10105]",
      "dest": "expression_statement [10037,10105]"
    },
    {
      "src": "primitive_type [10002,10009]",
      "dest": "primitive_type [10002,10009]"
    },
    {
      "src": "visibility [1792,1799]",
      "dest": "visibility [1792,1799]"
    },
    {
      "src": "identifier: name_ [2289,2294]",
      "dest": "identifier: name_ [2289,2294]"
    },
    {
      "src": "(: ( [10680,10681]",
      "dest": "(: ( [10680,10681]"
    },
    {
      "src": "virtual: virtual [10655,10662]",
      "dest": "virtual: virtual [10655,10662]"
    },
    {
      "src": "function: function [2393,2401]",
      "dest": "function: function [2393,2401]"
    },
    {
      "src": "visibility [5502,5508]",
      "dest": "visibility [5502,5508]"
    },
    {
      "src": "type_cast_expression [10770,10780]",
      "dest": "type_cast_expression [10770,10780]"
    },
    {
      "src": "identifier: owner [4786,4791]",
      "dest": "identifier: owner [4786,4791]"
    },
    {
      "src": ",: , [5657,5658]",
      "dest": ",: , [5657,5658]"
    },
    {
      "src": "identifier: subtractedValue [7182,7197]",
      "dest": "identifier: subtractedValue [7182,7197]"
    },
    {
      "src": "virtual: virtual [5509,5516]",
      "dest": "virtual: virtual [5509,5516]"
    },
    {
      "src": "function: function [3975,3983]",
      "dest": "function: function [3975,3983]"
    },
    {
      "src": "[: [ [4355,4356]",
      "dest": "[: [ [4355,4356]"
    },
    {
      "src": "call_expression [7138,7198]",
      "dest": "call_expression [7138,7198]"
    },
    {
      "src": "identifier: account [10045,10052]",
      "dest": "identifier: account [10045,10052]"
    },
    {
      "src": ",: , [4123,4124]",
      "dest": ",: , [4123,4124]"
    },
    {
      "src": "function_body [7672,7866]",
      "dest": "function_body [7672,7866]"
    },
    {
      "src": "identifier: to [4001,4003]",
      "dest": "identifier: to [4001,4003]"
    },
    {
      "src": "visibility [2622,2628]",
      "dest": "visibility [2622,2628]"
    },
    {
      "src": "type_name [11392,11399]",
      "dest": "type_name [11392,11399]"
    },
    {
      "src": "): ) [2080,2081]",
      "dest": "): ) [2080,2081]"
    },
    {
      "src": "call_expression [10751,10819]",
      "dest": "call_expression [10751,10819]"
    },
    {
      "src": "{: { [8683,8684]",
      "dest": "{: { [8683,8684]"
    },
    {
      "src": "=: = [6933,6934]",
      "dest": "=: = [6933,6934]"
    },
    {
      "src": "type_name [6919,6926]",
      "dest": "type_name [6919,6926]"
    },
    {
      "src": "variable_declaration [4070,4083]",
      "dest": "variable_declaration [4070,4083]"
    },
    {
      "src": "emit_statement [10876,10914]",
      "dest": "emit_statement [10876,10914]"
    },
    {
      "src": "(: ( [10889,10890]",
      "dest": "(: ( [10889,10890]"
    },
    {
      "src": "address: address [10613,10620]",
      "dest": "address: address [10613,10620]"
    },
    {
      "src": "(: ( [4096,4097]",
      "dest": "(: ( [4096,4097]"
    },
    {
      "src": "}: } [7208,7209]",
      "dest": "}: } [7208,7209]"
    },
    {
      "src": "number_literal: 0 [7782,7783]",
      "dest": "number_literal: 0 [7782,7783]"
    },
    {
      "src": "parameter [3673,3688]",
      "dest": "parameter [3673,3688]"
    },
    {
      "src": "}: } [4875,4876]",
      "dest": "}: } [4875,4876]"
    },
    {
      "src": "block_statement [8883,9091]",
      "dest": "block_statement [8883,9091]"
    },
    {
      "src": "mapping: mapping [1676,1683]",
      "dest": "mapping: mapping [1676,1683]"
    },
    {
      "src": ",: , [8207,8208]",
      "dest": ",: , [8207,8208]"
    },
    {
      "src": "binary_expression [9546,9567]",
      "dest": "binary_expression [9546,9567]"
    },
    {
      "src": "address: address [1703,1710]",
      "dest": "address: address [1703,1710]"
    },
    {
      "src": "]: ] [3771,3772]",
      "dest": "]: ] [3771,3772]"
    },
    {
      "src": "comment: // Overflow not possible: amount <= fromBalance <= totalSupply. [8508,8571]",
      "dest": "comment: // Overflow not possible: amount <= fromBalance <= totalSupply. [8508,8571]"
    },
    {
      "src": "array_access [4337,4355]",
      "dest": "array_access [4337,4355]"
    },
    {
      "src": "(: ( [4761,4762]",
      "dest": "(: ( [4761,4762]"
    },
    {
      "src": "call_argument [11345,11352]",
      "dest": "call_argument [11345,11352]"
    },
    {
      "src": "identifier: from [5468,5472]",
      "dest": "identifier: from [5468,5472]"
    },
    {
      "src": "visibility [4729,4735]",
      "dest": "visibility [4729,4735]"
    },
    {
      "src": "identifier: _approve [6231,6239]",
      "dest": "identifier: _approve [6231,6239]"
    },
    {
      "src": "parameter [4256,4271]",
      "dest": "parameter [4256,4271]"
    },
    {
      "src": "function: function [6810,6818]",
      "dest": "function: function [6810,6818]"
    },
    {
      "src": "type_name [6903,6907]",
      "dest": "type_name [6903,6907]"
    },
    {
      "src": "function_definition [3975,4164]",
      "dest": "function_definition [3975,4164]"
    },
    {
      "src": "): ) [6946,6947]",
      "dest": "): ) [6946,6947]"
    },
    {
      "src": "binary_expression [7768,7784]",
      "dest": "binary_expression [7768,7784]"
    },
    {
      "src": "}: } [3595,3596]",
      "dest": "}: } [3595,3596]"
    },
    {
      "src": "number_literal: 0 [10064,10065]",
      "dest": "number_literal: 0 [10064,10065]"
    },
    {
      "src": ",: , [8195,8196]",
      "dest": ",: , [8195,8196]"
    },
    {
      "src": "assignment_expression [2281,2294]",
      "dest": "assignment_expression [2281,2294]"
    },
    {
      "src": "parameter [3728,3735]",
      "dest": "parameter [3728,3735]"
    },
    {
      "src": "address: address [5474,5481]",
      "dest": "address: address [5474,5481]"
    },
    {
      "src": "(: ( [11538,11539]",
      "dest": "(: ( [11538,11539]"
    },
    {
      "src": "}: } [2705,2706]",
      "dest": "}: } [2705,2706]"
    },
    {
      "src": "binary_expression [8606,8626]",
      "dest": "binary_expression [8606,8626]"
    },
    {
      "src": "identifier: require [7019,7026]",
      "dest": "identifier: require [7019,7026]"
    },
    {
      "src": "call_argument [5622,5628]",
      "dest": "call_argument [5622,5628]"
    },
    {
      "src": "if_statement [11363,11606]",
      "dest": "if_statement [11363,11606]"
    },
    {
      "src": "else: else [8324,8328]",
      "dest": "else: else [8324,8328]"
    },
    {
      "src": "visibility [6879,6885]",
      "dest": "visibility [6879,6885]"
    },
    {
      "src": "modifier_invocation [2254,2270]",
      "dest": "modifier_invocation [2254,2270]"
    },
    {
      "src": "primitive_type [4054,4058]",
      "dest": "primitive_type [4054,4058]"
    },
    {
      "src": "identifier: owner [6927,6932]",
      "dest": "identifier: owner [6927,6932]"
    },
    {
      "src": "{: { [11406,11407]",
      "dest": "{: { [11406,11407]"
    },
    {
      "src": "identifier: owner [4349,4354]",
      "dest": "identifier: owner [4349,4354]"
    },
    {
      "src": "number_literal: 0 [9565,9566]",
      "dest": "number_literal: 0 [9565,9566]"
    },
    {
      "src": "string [7710,7749]",
      "dest": "string [7710,7749]"
    },
    {
      "src": "(: ( [9984,9985]",
      "dest": "(: ( [9984,9985]"
    },
    {
      "src": "visibility [11889,11896]",
      "dest": "visibility [11889,11896]"
    },
    {
      "src": "true [4865,4869]",
      "dest": "true [4865,4869]"
    },
    {
      "src": "visibility [3359,3365]",
      "dest": "visibility [3359,3365]"
    },
    {
      "src": "{: { [2271,2272]",
      "dest": "{: { [2271,2272]"
    },
    {
      "src": "call_argument [7001,7008]",
      "dest": "call_argument [7001,7008]"
    },
    {
      "src": "number_literal: 0 [8679,8680]",
      "dest": "number_literal: 0 [8679,8680]"
    },
    {
      "src": "string [9569,9602]",
      "dest": "string [9569,9602]"
    },
    {
      "src": "identifier: allowance [4231,4240]",
      "dest": "identifier: allowance [4231,4240]"
    },
    {
      "src": "uint256: uint256 [8343,8350]",
      "dest": "uint256: uint256 [8343,8350]"
    },
    {
      "src": "identifier: _spendAllowance [11210,11225]",
      "dest": "identifier: _spendAllowance [11210,11225]"
    },
    {
      "src": "identifier: _symbol [2692,2699]",
      "dest": "identifier: _symbol [2692,2699]"
    },
    {
      "src": "type_name [11226,11233]",
      "dest": "type_name [11226,11233]"
    },
    {
      "src": "): ) [11487,11488]",
      "dest": "): ) [11487,11488]"
    },
    {
      "src": "variable_declaration_statement [6193,6222]",
      "dest": "variable_declaration_statement [6193,6222]"
    },
    {
      "src": "visibility [2082,2090]",
      "dest": "visibility [2082,2090]"
    },
    {
      "src": "public: public [2409,2415]",
      "dest": "public: public [2409,2415]"
    },
    {
      "src": "parameter [3993,4003]",
      "dest": "parameter [3993,4003]"
    },
    {
      "src": "call_argument [10782,10818]",
      "dest": "call_argument [10782,10818]"
    },
    {
      "src": "return_type_definition [3542,3559]",
      "dest": "return_type_definition [3542,3559]"
    },
    {
      "src": "view: view [3697,3701]",
      "dest": "view: view [3697,3701]"
    },
    {
      "src": "): ) [4097,4098]",
      "dest": "): ) [4097,4098]"
    },
    {
      "src": "solidity_pragma_token [112,128]",
      "dest": "solidity_pragma_token [112,128]"
    },
    {
      "src": "identifier: _update [9613,9620]",
      "dest": "identifier: _update [9613,9620]"
    },
    {
      "src": "function_body [6183,6323]",
      "dest": "function_body [6183,6323]"
    },
    {
      "src": "array_access [8365,8380]",
      "dest": "array_access [8365,8380]"
    },
    {
      "src": "{: { [8329,8330]",
      "dest": "{: { [8329,8330]"
    },
    {
      "src": "): ) [4847,4848]",
      "dest": "): ) [4847,4848]"
    },
    {
      "src": "identifier: amount [10906,10912]",
      "dest": "identifier: amount [10906,10912]"
    },
    {
      "src": "(: ( [9114,9115]",
      "dest": "(: ( [9114,9115]"
    },
    {
      "src": "identifier: spender [4356,4363]",
      "dest": "identifier: spender [4356,4363]"
    },
    {
      "src": "true [5683,5687]",
      "dest": "true [5683,5687]"
    },
    {
      "src": "parameter [6903,6907]",
      "dest": "parameter [6903,6907]"
    },
    {
      "src": "return: return [6305,6311]",
      "dest": "return: return [6305,6311]"
    },
    {
      "src": "}: } [4163,4164]",
      "dest": "}: } [4163,4164]"
    },
    {
      "src": "identifier: Initializable [1538,1551]",
      "dest": "identifier: Initializable [1538,1551]"
    },
    {
      "src": "emit: emit [10876,10880]",
      "dest": "emit: emit [10876,10880]"
    },
    {
      "src": "function_body [2462,2491]",
      "dest": "function_body [2462,2491]"
    },
    {
      "src": "call_argument [10698,10699]",
      "dest": "call_argument [10698,10699]"
    },
    {
      "src": "function_body [2271,2328]",
      "dest": "function_body [2271,2328]"
    },
    {
      "src": "identifier: onlyInitializing [2091,2107]",
      "dest": "identifier: onlyInitializing [2091,2107]"
    },
    {
      "src": "comment: /**      * @dev Sets the values for {name} and {symbol}.      *      * All two of these values are immutable: they can only be set once during      * construction.      */ [1840,2011]",
      "dest": "comment: /**      * @dev Sets the values for {name} and {symbol}.      *      * All two of these values are immutable: they can only be set once during      * construction.      */ [1840,2011]"
    },
    {
      "src": "expression_statement [7682,7751]",
      "dest": "expression_statement [7682,7751]"
    },
    {
      "src": "[: [ [10841,10842]",
      "dest": "[: [ [10841,10842]"
    },
    {
      "src": "public: public [2622,2628]",
      "dest": "public: public [2622,2628]"
    },
    {
      "src": "import: import [236,242]",
      "dest": "import: import [236,242]"
    },
    {
      "src": "primitive_type [9985,9992]",
      "dest": "primitive_type [9985,9992]"
    },
    {
      "src": "\": \" [210,211]",
      "dest": "\": \" [210,211]"
    },
    {
      "src": "parameter [4713,4727]",
      "dest": "parameter [4713,4727]"
    },
    {
      "src": "[: [ [8597,8598]",
      "dest": "[: [ [8597,8598]"
    },
    {
      "src": "primitive_type [1785,1791]",
      "dest": "primitive_type [1785,1791]"
    },
    {
      "src": "identifier: owner [6266,6271]",
      "dest": "identifier: owner [6266,6271]"
    },
    {
      "src": "function_definition [10580,10920]",
      "dest": "function_definition [10580,10920]"
    },
    {
      "src": "function: function [8166,8174]",
      "dest": "function: function [8166,8174]"
    },
    {
      "src": "variable_declaration_statement [4778,4807]",
      "dest": "variable_declaration_statement [4778,4807]"
    },
    {
      "src": "(: ( [8182,8183]",
      "dest": "(: ( [8182,8183]"
    },
    {
      "src": "}: } [11611,11612]",
      "dest": "}: } [11611,11612]"
    },
    {
      "src": "binary_expression [10045,10066]",
      "dest": "binary_expression [10045,10066]"
    },
    {
      "src": "if_statement [8252,8651]",
      "dest": "if_statement [8252,8651]"
    },
    {
      "src": "}: } [11605,11606]",
      "dest": "}: } [11605,11606]"
    },
    {
      "src": "call_argument [6247,6254]",
      "dest": "call_argument [6247,6254]"
    },
    {
      "src": "variable_declaration_statement [4070,4099]",
      "dest": "variable_declaration_statement [4070,4099]"
    },
    {
      "src": "string: string [1785,1791]",
      "dest": "string: string [1785,1791]"
    },
    {
      "src": "primitive_type [4256,4263]",
      "dest": "primitive_type [4256,4263]"
    },
    {
      "src": "returns: returns [6168,6175]",
      "dest": "returns: returns [6168,6175]"
    },
    {
      "src": "type_name [5486,5493]",
      "dest": "type_name [5486,5493]"
    },
    {
      "src": "): ) [10818,10819]",
      "dest": "): ) [10818,10819]"
    },
    {
      "src": "primitive_type [1811,1817]",
      "dest": "primitive_type [1811,1817]"
    },
    {
      "src": "primitive_type [10613,10620]",
      "dest": "primitive_type [10613,10620]"
    },
    {
      "src": "binary_expression [8402,8423]",
      "dest": "binary_expression [8402,8423]"
    },
    {
      "src": "identifier: from [8598,8602]",
      "dest": "identifier: from [8598,8602]"
    },
    {
      "src": "(: ( [10597,10598]",
      "dest": "(: ( [10597,10598]"
    },
    {
      "src": "type_name [3397,3402]",
      "dest": "type_name [3397,3402]"
    },
    {
      "src": "=: = [4792,4793]",
      "dest": "=: = [4792,4793]"
    },
    {
      "src": "=>: => [1692,1694]",
      "dest": "=>: => [1692,1694]"
    },
    {
      "src": "address: address [4256,4263]",
      "dest": "address: address [4256,4263]"
    },
    {
      "src": "=>: => [1711,1713]",
      "dest": "=>: => [1711,1713]"
    },
    {
      "src": "\": \" [7822,7823]",
      "dest": "\": \" [7822,7823]"
    },
    {
      "src": "identifier: from [8375,8379]",
      "dest": "identifier: from [8375,8379]"
    },
    {
      "src": "\": \" [10739,10740]",
      "dest": "\": \" [10739,10740]"
    },
    {
      "src": "memory: memory [2208,2214]",
      "dest": "memory: memory [2208,2214]"
    },
    {
      "src": "-: - [11572,11573]",
      "dest": "-: - [11572,11573]"
    },
    {
      "src": "(: ( [7705,7706]",
      "dest": "(: ( [7705,7706]"
    },
    {
      "src": "==: == [8261,8263]",
      "dest": "==: == [8261,8263]"
    },
    {
      "src": "uint256: uint256 [7647,7654]",
      "dest": "uint256: uint256 [7647,7654]"
    },
    {
      "src": "call_argument [6256,6294]",
      "dest": "call_argument [6256,6294]"
    },
    {
      "src": "(: ( [8271,8272]",
      "dest": "(: ( [8271,8272]"
    },
    {
      "src": "return_type_definition [6894,6908]",
      "dest": "return_type_definition [6894,6908]"
    },
    {
      "src": ",: , [10000,10001]",
      "dest": ",: , [10000,10001]"
    },
    {
      "src": "type_name [5460,5467]",
      "dest": "type_name [5460,5467]"
    },
    {
      "src": "address: address [7774,7781]",
      "dest": "address: address [7774,7781]"
    },
    {
      "src": "identifier: spender [4704,4711]",
      "dest": "identifier: spender [4704,4711]"
    },
    {
      "src": "binary_expression [7163,7197]",
      "dest": "binary_expression [7163,7197]"
    },
    {
      "src": "identifier: spender [4832,4839]",
      "dest": "identifier: spender [4832,4839]"
    },
    {
      "src": "uint256: uint256 [10002,10009]",
      "dest": "uint256: uint256 [10002,10009]"
    },
    {
      "src": "internal: internal [7663,7671]",
      "dest": "internal: internal [7663,7671]"
    },
    {
      "src": "contract_declaration [1509,11905]",
      "dest": "contract_declaration [1509,11905]"
    },
    {
      "src": "variable_declaration [6193,6206]",
      "dest": "variable_declaration [6193,6206]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` of tokens from `from` to `to`.      *      * This internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * NOTE: This function is not virtual, {_update} should be overridden instead.      */ [7243,7597]",
      "dest": "comment: /**      * @dev Moves `amount` of tokens from `from` to `to`.      *      * This internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * NOTE: This function is not virtual, {_update} should be overridden instead.      */ [7243,7597]"
    },
    {
      "src": "{: { [4768,4769]",
      "dest": "{: { [4768,4769]"
    },
    {
      "src": "\": \" [160,161]",
      "dest": "\": \" [160,161]"
    },
    {
      "src": "function_definition [7602,7866]",
      "dest": "function_definition [7602,7866]"
    },
    {
      "src": "internal: internal [2082,2090]",
      "dest": "internal: internal [2082,2090]"
    },
    {
      "src": "identifier: owner [10681,10686]",
      "dest": "identifier: owner [10681,10686]"
    },
    {
      "src": "(: ( [5606,5607]",
      "dest": "(: ( [5606,5607]"
    },
    {
      "src": "internal: internal [10018,10026]",
      "dest": "internal: internal [10018,10026]"
    },
    {
      "src": "\": \" [138,139]",
      "dest": "\": \" [138,139]"
    },
    {
      "src": "primitive_type [1750,1757]",
      "dest": "primitive_type [1750,1757]"
    },
    {
      "src": "type_name [1643,1650]",
      "dest": "type_name [1643,1650]"
    },
    {
      "src": "identifier: name [2402,2406]",
      "dest": "identifier: name [2402,2406]"
    },
    {
      "src": "override_specifier [5517,5525]",
      "dest": "override_specifier [5517,5525]"
    },
    {
      "src": "string [7064,7103]",
      "dest": "string [7064,7103]"
    },
    {
      "src": "address: address [10598,10605]",
      "dest": "address: address [10598,10605]"
    },
    {
      "src": "uint256: uint256 [3728,3735]",
      "dest": "uint256: uint256 [3728,3735]"
    },
    {
      "src": "address: address [4778,4785]",
      "dest": "address: address [4778,4785]"
    },
    {
      "src": "identifier: amount [9125,9131]",
      "dest": "identifier: amount [9125,9131]"
    },
    {
      "src": "block_statement [7114,7209]",
      "dest": "block_statement [7114,7209]"
    },
    {
      "src": "\": \" [200,201]",
      "dest": "\": \" [200,201]"
    },
    {
      "src": "binary_expression [8256,8274]",
      "dest": "binary_expression [8256,8274]"
    },
    {
      "src": "(: ( [6902,6903]",
      "dest": "(: ( [6902,6903]"
    },
    {
      "src": "identifier: totalSupply [3499,3510]",
      "dest": "identifier: totalSupply [3499,3510]"
    },
    {
      "src": "primitive_type [6837,6844]",
      "dest": "primitive_type [6837,6844]"
    },
    {
      "src": "identifier: require [10037,10044]",
      "dest": "identifier: require [10037,10044]"
    },
    {
      "src": "number_literal: 0 [7706,7707]",
      "dest": "number_literal: 0 [7706,7707]"
    },
    {
      "src": "type_name [3551,3558]",
      "dest": "type_name [3551,3558]"
    },
    {
      "src": "array_access [10830,10848]",
      "dest": "array_access [10830,10848]"
    },
    {
      "src": "meta_type_expression [11387,11400]",
      "dest": "meta_type_expression [11387,11400]"
    },
    {
      "src": "identifier: _balances [1660,1669]",
      "dest": "identifier: _balances [1660,1669]"
    },
    {
      "src": "type_name [8343,8350]",
      "dest": "type_name [8343,8350]"
    },
    {
      "src": ",: , [7708,7709]",
      "dest": ",: , [7708,7709]"
    },
    {
      "src": "): ) [9131,9132]",
      "dest": "): ) [9131,9132]"
    },
    {
      "src": "(: ( [10777,10778]",
      "dest": "(: ( [10777,10778]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-totalSupply}.      */ [3436,3485]",
      "dest": "comment: /**      * @dev See {IERC20-totalSupply}.      */ [3436,3485]"
    },
    {
      "src": "expression_statement [6231,6296]",
      "dest": "expression_statement [6231,6296]"
    },
    {
      "src": "identifier: allowance [6984,6993]",
      "dest": "identifier: allowance [6984,6993]"
    },
    {
      "src": "address: address [4070,4077]",
      "dest": "address: address [4070,4077]"
    },
    {
      "src": "): ) [7103,7104]",
      "dest": "): ) [7103,7104]"
    },
    {
      "src": "string_literal [10782,10818]",
      "dest": "string_literal [10782,10818]"
    },
    {
      "src": "primitive_type [3551,3558]",
      "dest": "primitive_type [3551,3558]"
    },
    {
      "src": "bool: bool [5535,5539]",
      "dest": "bool: bool [5535,5539]"
    },
    {
      "src": "identifier: fromBalance [8606,8617]",
      "dest": "identifier: fromBalance [8606,8617]"
    },
    {
      "src": "=: = [2287,2288]",
      "dest": "=: = [2287,2288]"
    },
    {
      "src": "modifier_invocation [2091,2107]",
      "dest": "modifier_invocation [2091,2107]"
    },
    {
      "src": "identifier: amount [11266,11272]",
      "dest": "identifier: amount [11266,11272]"
    },
    {
      "src": "): ) [6220,6221]",
      "dest": "): ) [6220,6221]"
    },
    {
      "src": "address: address [11241,11248]",
      "dest": "address: address [11241,11248]"
    },
    {
      "src": "call_expression [5639,5666]",
      "dest": "call_expression [5639,5666]"
    },
    {
      "src": "call_argument [11428,11454]",
      "dest": "call_argument [11428,11454]"
    },
    {
      "src": "identifier: account [3764,3771]",
      "dest": "identifier: account [3764,3771]"
    },
    {
      "src": "(: ( [4117,4118]",
      "dest": "(: ( [4117,4118]"
    },
    {
      "src": "call_expression [6935,6947]",
      "dest": "call_expression [6935,6947]"
    },
    {
      "src": "parameter [11241,11256]",
      "dest": "parameter [11241,11256]"
    },
    {
      "src": "(: ( [9564,9565]",
      "dest": "(: ( [9564,9565]"
    },
    {
      "src": "variable_declaration [5551,5566]",
      "dest": "variable_declaration [5551,5566]"
    },
    {
      "src": "identifier: spender [4264,4271]",
      "dest": "identifier: spender [4264,4271]"
    },
    {
      "src": "function_definition [3654,3779]",
      "dest": "function_definition [3654,3779]"
    },
    {
      "src": "type_name [6193,6200]",
      "dest": "type_name [6193,6200]"
    },
    {
      "src": "primitive_type [9486,9493]",
      "dest": "primitive_type [9486,9493]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-approve}.      *      * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on      * `transferFrom`. This is semantically equivalent to an infinite approval.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [4377,4674]",
      "dest": "comment: /**      * @dev See {IERC20-approve}.      *      * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on      * `transferFrom`. This is semantically equivalent to an infinite approval.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [4377,4674]"
    },
    {
      "src": "import_directive [131,162]",
      "dest": "import_directive [131,162]"
    },
    {
      "src": "type_name [4070,4077]",
      "dest": "type_name [4070,4077]"
    },
    {
      "src": "call_expression [6231,6295]",
      "dest": "call_expression [6231,6295]"
    },
    {
      "src": "internal: internal [2245,2253]",
      "dest": "internal: internal [2245,2253]"
    },
    {
      "src": "string: string [2660,2666]",
      "dest": "string: string [2660,2666]"
    },
    {
      "src": "call_expression [6209,6221]",
      "dest": "call_expression [6209,6221]"
    },
    {
      "src": "function: function [4222,4230]",
      "dest": "function: function [4222,4230]"
    },
    {
      "src": "comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [2497,2599]",
      "dest": "comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [2497,2599]"
    },
    {
      "src": "view: view [2416,2420]",
      "dest": "view: view [2416,2420]"
    },
    {
      "src": "is: is [1535,1537]",
      "dest": "is: is [1535,1537]"
    },
    {
      "src": "parameter [9985,10000]",
      "dest": "parameter [9985,10000]"
    },
    {
      "src": "(: ( [6993,6994]",
      "dest": "(: ( [6993,6994]"
    },
    {
      "src": "primitive_type [10131,10138]",
      "dest": "primitive_type [10131,10138]"
    },
    {
      "src": ",: , [1571,1572]",
      "dest": ",: , [1571,1572]"
    },
    {
      "src": "identifier: spender [5559,5566]",
      "dest": "identifier: spender [5559,5566]"
    },
    {
      "src": "primitive_type [4696,4703]",
      "dest": "primitive_type [4696,4703]"
    },
    {
      "src": "): ) [7008,7009]",
      "dest": "): ) [7008,7009]"
    },
    {
      "src": "type_name [2059,2065]",
      "dest": "type_name [2059,2065]"
    },
    {
      "src": "identifier: spender [10759,10766]",
      "dest": "identifier: spender [10759,10766]"
    },
    {
      "src": "identifier: currentAllowance [11367,11383]",
      "dest": "identifier: currentAllowance [11367,11383]"
    },
    {
      "src": "comment: // Overflow not possible: amount <= totalSupply or amount <= fromBalance <= totalSupply. [8725,8813]",
      "dest": "comment: // Overflow not possible: amount <= totalSupply or amount <= fromBalance <= totalSupply. [8725,8813]"
    },
    {
      "src": "(: ( [6239,6240]",
      "dest": "(: ( [6239,6240]"
    },
    {
      "src": "source_file [0,11906]",
      "dest": "source_file [0,11906]"
    },
    {
      "src": "]: ] [11887,11888]",
      "dest": "]: ] [11887,11888]"
    },
    {
      "src": "expression_statement [2118,2157]",
      "dest": "expression_statement [2118,2157]"
    },
    {
      "src": "returns: returns [4302,4309]",
      "dest": "returns: returns [4302,4309]"
    },
    {
      "src": "number_literal: 0 [9629,9630]",
      "dest": "number_literal: 0 [9629,9630]"
    },
    {
      "src": "function: function [3490,3498]",
      "dest": "function: function [3490,3498]"
    },
    {
      "src": "identifier: amount [9511,9517]",
      "dest": "identifier: amount [9511,9517]"
    },
    {
      "src": "uint256: uint256 [10630,10637]",
      "dest": "uint256: uint256 [10630,10637]"
    },
    {
      "src": "identifier: amount [5494,5500]",
      "dest": "identifier: amount [5494,5500]"
    },
    {
      "src": "}: } [11595,11596]",
      "dest": "}: } [11595,11596]"
    },
    {
      "src": "private: private [1792,1799]",
      "dest": "private: private [1792,1799]"
    },
    {
      "src": ">=: >= [11445,11447]",
      "dest": ">=: >= [11445,11447]"
    },
    {
      "src": "view: view [3366,3370]",
      "dest": "view: view [3366,3370]"
    },
    {
      "src": "call_argument [8272,8273]",
      "dest": "call_argument [8272,8273]"
    },
    {
      "src": "call_argument [10890,10895]",
      "dest": "call_argument [10890,10895]"
    },
    {
      "src": "primitive_type [7647,7654]",
      "dest": "primitive_type [7647,7654]"
    },
    {
      "src": "(: ( [7781,7782]",
      "dest": "(: ( [7781,7782]"
    },
    {
      "src": "identifier: amount [7852,7858]",
      "dest": "identifier: amount [7852,7858]"
    },
    {
      "src": "identifier: amount [8846,8852]",
      "dest": "identifier: amount [8846,8852]"
    },
    {
      "src": "call_argument [11555,11580]",
      "dest": "call_argument [11555,11580]"
    },
    {
      "src": "string [210,234]",
      "dest": "string [210,234]"
    },
    {
      "src": "string_literal [7064,7103]",
      "dest": "string_literal [7064,7103]"
    },
    {
      "src": "identifier: onlyInitializing [2254,2270]",
      "dest": "identifier: onlyInitializing [2254,2270]"
    },
    {
      "src": "{: { [11291,11292]",
      "dest": "{: { [11291,11292]"
    },
    {
      "src": "virtual: virtual [6886,6893]",
      "dest": "virtual: virtual [6886,6893]"
    },
    {
      "src": "visibility [11274,11282]",
      "dest": "visibility [11274,11282]"
    },
    {
      "src": "(: ( [2200,2201]",
      "dest": "(: ( [2200,2201]"
    },
    {
      "src": "uint8: uint8 [3397,3402]",
      "dest": "uint8: uint8 [3397,3402]"
    },
    {
      "src": "call_expression [4086,4098]",
      "dest": "call_expression [4086,4098]"
    },
    {
      "src": "variable_declaration_statement [8343,8381]",
      "dest": "variable_declaration_statement [8343,8381]"
    },
    {
      "src": "call_argument [10778,10779]",
      "dest": "call_argument [10778,10779]"
    },
    {
      "src": "visibility [7663,7671]",
      "dest": "visibility [7663,7671]"
    },
    {
      "src": "call_expression [8394,8466]",
      "dest": "call_expression [8394,8466]"
    },
    {
      "src": "type_name [2201,2207]",
      "dest": "type_name [2201,2207]"
    },
    {
      "src": "call_expression [5569,5581]",
      "dest": "call_expression [5569,5581]"
    },
    {
      "src": "identifier: amount [11448,11454]",
      "dest": "identifier: amount [11448,11454]"
    },
    {
      "src": "{: { [2675,2676]",
      "dest": "{: { [2675,2676]"
    },
    {
      "src": "identifier: amount [10860,10866]",
      "dest": "identifier: amount [10860,10866]"
    },
    {
      "src": "identifier: _approve [4816,4824]",
      "dest": "identifier: _approve [4816,4824]"
    },
    {
      "src": "!=: != [7695,7697]",
      "dest": "!=: != [7695,7697]"
    },
    {
      "src": "identifier: currentAllowance [7163,7179]",
      "dest": "identifier: currentAllowance [7163,7179]"
    },
    {
      "src": "import: import [203,209]",
      "dest": "import: import [203,209]"
    },
    {
      "src": "{: { [11512,11513]",
      "dest": "{: { [11512,11513]"
    },
    {
      "src": "primitive_type [8197,8204]",
      "dest": "primitive_type [8197,8204]"
    },
    {
      "src": "): ) [9566,9567]",
      "dest": "): ) [9566,9567]"
    },
    {
      "src": "identifier: _msgSender [6935,6945]",
      "dest": "identifier: _msgSender [6935,6945]"
    },
    {
      "src": "(: ( [10758,10759]",
      "dest": "(: ( [10758,10759]"
    },
    {
      "src": "expression_statement [8290,8313]",
      "dest": "expression_statement [8290,8313]"
    },
    {
      "src": "(: ( [9545,9546]",
      "dest": "(: ( [9545,9546]"
    },
    {
      "src": "call_argument [10702,10740]",
      "dest": "call_argument [10702,10740]"
    },
    {
      "src": "\": \" [7710,7711]",
      "dest": "\": \" [7710,7711]"
    },
    {
      "src": "identifier: to [8205,8207]",
      "dest": "identifier: to [8205,8207]"
    },
    {
      "src": ",: , [10141,10142]",
      "dest": ",: , [10141,10142]"
    },
    {
      "src": "import_directive [163,202]",
      "dest": "import_directive [163,202]"
    },
    {
      "src": "call_expression [11328,11353]",
      "dest": "call_expression [11328,11353]"
    },
    {
      "src": "}: } [9080,9081]",
      "dest": "}: } [9080,9081]"
    },
    {
      "src": "): ) [10065,10066]",
      "dest": "): ) [10065,10066]"
    },
    {
      "src": "boolean_literal [4153,4157]",
      "dest": "boolean_literal [4153,4157]"
    },
    {
      "src": "call_argument [6273,6280]",
      "dest": "call_argument [6273,6280]"
    },
    {
      "src": "[: [ [8374,8375]",
      "dest": "[: [ [8374,8375]"
    },
    {
      "src": "type_name [5535,5539]",
      "dest": "type_name [5535,5539]"
    },
    {
      "src": "true [7226,7230]",
      "dest": "true [7226,7230]"
    },
    {
      "src": "call_expression [7834,7859]",
      "dest": "call_expression [7834,7859]"
    },
    {
      "src": "primitive_type [4070,4077]",
      "dest": "primitive_type [4070,4077]"
    },
    {
      "src": "uint256: uint256 [1714,1721]",
      "dest": "uint256: uint256 [1714,1721]"
    },
    {
      "src": "address: address [9557,9564]",
      "dest": "address: address [9557,9564]"
    },
    {
      "src": "assignment_expression [2304,2321]",
      "dest": "assignment_expression [2304,2321]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "dest": "comment: // SPDX-License-Identifier: MIT [0,31]"
    },
    {
      "src": ",: , [6999,7000]",
      "dest": ",: , [6999,7000]"
    },
    {
      "src": "primitive_type [11301,11308]",
      "dest": "primitive_type [11301,11308]"
    },
    {
      "src": "[: [ [9052,9053]",
      "dest": "[: [ [9052,9053]"
    },
    {
      "src": "public: public [3690,3696]",
      "dest": "public: public [3690,3696]"
    },
    {
      "src": "type_name [2038,2044]",
      "dest": "type_name [2038,2044]"
    },
    {
      "src": "parameter [5460,5472]",
      "dest": "parameter [5460,5472]"
    },
    {
      "src": "parameter [5535,5539]",
      "dest": "parameter [5535,5539]"
    },
    {
      "src": "assignment_expression [8588,8626]",
      "dest": "assignment_expression [8588,8626]"
    },
    {
      "src": "state_variable_declaration [1785,1806]",
      "dest": "state_variable_declaration [1785,1806]"
    },
    {
      "src": "function_body [3404,3430]",
      "dest": "function_body [3404,3430]"
    },
    {
      "src": "call_expression [6984,7009]",
      "dest": "call_expression [6984,7009]"
    },
    {
      "src": "identifier: owner [11234,11239]",
      "dest": "identifier: owner [11234,11239]"
    },
    {
      "src": "): ) [3558,3559]",
      "dest": "): ) [3558,3559]"
    },
    {
      "src": "identifier: to [7848,7850]",
      "dest": "identifier: to [7848,7850]"
    },
    {
      "src": "emit: emit [9101,9105]",
      "dest": "emit: emit [9101,9105]"
    },
    {
      "src": "identifier: require [11420,11427]",
      "dest": "identifier: require [11420,11427]"
    },
    {
      "src": "type_name [7621,7628]",
      "dest": "type_name [7621,7628]"
    },
    {
      "src": "identifier: _msgSender [4794,4804]",
      "dest": "identifier: _msgSender [4794,4804]"
    },
    {
      "src": "identifier: owner [10842,10847]",
      "dest": "identifier: owner [10842,10847]"
    },
    {
      "src": "identifier: owner [6240,6245]",
      "dest": "identifier: owner [6240,6245]"
    },
    {
      "src": "identifier: _update [8175,8182]",
      "dest": "identifier: _update [8175,8182]"
    },
    {
      "src": "(: ( [6265,6266]",
      "dest": "(: ( [6265,6266]"
    },
    {
      "src": "(: ( [7620,7621]",
      "dest": "(: ( [7620,7621]"
    },
    {
      "src": "identifier: name_ [2052,2057]",
      "dest": "identifier: name_ [2052,2057]"
    },
    {
      "src": "identifier: ERC20Upgradeable [1518,1534]",
      "dest": "identifier: ERC20Upgradeable [1518,1534]"
    },
    {
      "src": "public: public [5502,5508]",
      "dest": "public: public [5502,5508]"
    },
    {
      "src": "identifier: allowance [6256,6265]",
      "dest": "identifier: allowance [6256,6265]"
    },
    {
      "src": "block_statement [8697,8867]",
      "dest": "block_statement [8697,8867]"
    },
    {
      "src": "type_name [7635,7642]",
      "dest": "type_name [7635,7642]"
    },
    {
      "src": ",: , [7846,7847]",
      "dest": ",: , [7846,7847]"
    },
    {
      "src": "assignment_expression [10830,10866]",
      "dest": "assignment_expression [10830,10866]"
    },
    {
      "src": "address: address [10690,10697]",
      "dest": "address: address [10690,10697]"
    },
    {
      "src": "return: return [4330,4336]",
      "dest": "return: return [4330,4336]"
    },
    {
      "src": "parameter [8183,8195]",
      "dest": "parameter [8183,8195]"
    },
    {
      "src": "comment: /**      * @dev This empty reserved space is put in place to allow future versions to add new      * variables without shifting down storage in the inheritance chain.      * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps      */ [11618,11872]",
      "dest": "comment: /**      * @dev This empty reserved space is put in place to allow future versions to add new      * variables without shifting down storage in the inheritance chain.      * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps      */ [11618,11872]"
    },
    {
      "src": "visibility [1652,1659]",
      "dest": "visibility [1652,1659]"
    },
    {
      "src": "visibility [9519,9527]",
      "dest": "visibility [9519,9527]"
    },
    {
      "src": "visibility [3690,3696]",
      "dest": "visibility [3690,3696]"
    },
    {
      "src": ",: , [5611,5612]",
      "dest": ",: , [5611,5612]"
    },
    {
      "src": "variable_declaration [8343,8362]",
      "dest": "variable_declaration [8343,8362]"
    },
    {
      "src": "function_body [4768,4876]",
      "dest": "function_body [4768,4876]"
    },
    {
      "src": "string [7786,7823]",
      "dest": "string [7786,7823]"
    },
    {
      "src": "primitive_type [10630,10637]",
      "dest": "primitive_type [10630,10637]"
    },
    {
      "src": "address: address [9985,9992]",
      "dest": "address: address [9985,9992]"
    },
    {
      "src": "identifier: amount [9060,9066]",
      "dest": "identifier: amount [9060,9066]"
    },
    {
      "src": "inheritance_specifier [1538,1551]",
      "dest": "inheritance_specifier [1538,1551]"
    },
    {
      "src": "type_name [1624,1651]",
      "dest": "type_name [1624,1651]"
    },
    {
      "src": "identifier: currentAllowance [6965,6981]",
      "dest": "identifier: currentAllowance [6965,6981]"
    },
    {
      "src": "uint256: uint256 [11301,11308]",
      "dest": "uint256: uint256 [11301,11308]"
    },
    {
      "src": "identifier: amount [10010,10016]",
      "dest": "identifier: amount [10010,10016]"
    },
    {
      "src": "function: function [9970,9978]",
      "dest": "function: function [9970,9978]"
    },
    {
      "src": "identifier: from [7842,7846]",
      "dest": "identifier: from [7842,7846]"
    },
    {
      "src": "override_specifier [4744,4752]",
      "dest": "override_specifier [4744,4752]"
    },
    {
      "src": "state_variable_declaration [1811,1834]",
      "dest": "state_variable_declaration [1811,1834]"
    },
    {
      "src": "identifier: _msgSender [4086,4096]",
      "dest": "identifier: _msgSender [4086,4096]"
    },
    {
      "src": "\": \" [11456,11457]",
      "dest": "\": \" [11456,11457]"
    },
    {
      "src": "override: override [4293,4301]",
      "dest": "override: override [4293,4301]"
    },
    {
      "src": "public: public [6153,6159]",
      "dest": "public: public [6153,6159]"
    },
    {
      "src": "primitive_type [3673,3680]",
      "dest": "primitive_type [3673,3680]"
    },
    {
      "src": "{: { [8883,8884]",
      "dest": "{: { [8883,8884]"
    },
    {
      "src": "address: address [4696,4703]",
      "dest": "address: address [4696,4703]"
    },
    {
      "src": "(: ( [6945,6946]",
      "dest": "(: ( [6945,6946]"
    },
    {
      "src": "visibility [10018,10026]",
      "dest": "visibility [10018,10026]"
    },
    {
      "src": "type_name [5474,5481]",
      "dest": "type_name [5474,5481]"
    },
    {
      "src": "identifier: __gap [11897,11902]",
      "dest": "identifier: __gap [11897,11902]"
    },
    {
      "src": "parameter [2059,2080]",
      "dest": "parameter [2059,2080]"
    },
    {
      "src": "state_mutability [3697,3701]",
      "dest": "state_mutability [3697,3701]"
    },
    {
      "src": "): ) [2155,2156]",
      "dest": "): ) [2155,2156]"
    },
    {
      "src": "call_argument [10759,10780]",
      "dest": "call_argument [10759,10780]"
    },
    {
      "src": "return_type_definition [4045,4059]",
      "dest": "return_type_definition [4045,4059]"
    },
    {
      "src": "return: return [4146,4152]",
      "dest": "return: return [4146,4152]"
    },
    {
      "src": "(: ( [6219,6220]",
      "dest": "(: ( [6219,6220]"
    },
    {
      "src": "{: { [7124,7125]",
      "dest": "{: { [7124,7125]"
    },
    {
      "src": "(: ( [5648,5649]",
      "dest": "(: ( [5648,5649]"
    },
    {
      "src": "return_type_definition [3388,3403]",
      "dest": "return_type_definition [3388,3403]"
    },
    {
      "src": "virtual: virtual [4028,4035]",
      "dest": "virtual: virtual [4028,4035]"
    },
    {
      "src": "): ) [7858,7859]",
      "dest": "): ) [7858,7859]"
    },
    {
      "src": "virtual: virtual [3525,3532]",
      "dest": "virtual: virtual [3525,3532]"
    },
    {
      "src": "(: ( [3992,3993]",
      "dest": "(: ( [3992,3993]"
    },
    {
      "src": "return: return [5676,5682]",
      "dest": "return: return [5676,5682]"
    },
    {
      "src": "type_name [9503,9510]",
      "dest": "type_name [9503,9510]"
    },
    {
      "src": "pragma: pragma [105,111]",
      "dest": "pragma: pragma [105,111]"
    },
    {
      "src": "): ) [6877,6878]",
      "dest": "): ) [6877,6878]"
    },
    {
      "src": "primitive_type [2660,2666]",
      "dest": "primitive_type [2660,2666]"
    },
    {
      "src": "primitive_type [3993,4000]",
      "dest": "primitive_type [3993,4000]"
    },
    {
      "src": ",: , [10129,10130]",
      "dest": ",: , [10129,10130]"
    },
    {
      "src": "identifier: addedValue [6284,6294]",
      "dest": "identifier: addedValue [6284,6294]"
    },
    {
      "src": "function_definition [6810,7237]",
      "dest": "function_definition [6810,7237]"
    },
    {
      "src": "identifier: spender [10621,10628]",
      "dest": "identifier: spender [10621,10628]"
    },
    {
      "src": "identifier: allowance [11328,11337]",
      "dest": "identifier: allowance [11328,11337]"
    },
    {
      "src": "state_mutability [4280,4284]",
      "dest": "state_mutability [4280,4284]"
    },
    {
      "src": "expression_statement [10673,10742]",
      "dest": "expression_statement [10673,10742]"
    },
    {
      "src": "uint256: uint256 [6133,6140]",
      "dest": "uint256: uint256 [6133,6140]"
    },
    {
      "src": "binary_expression [7027,7062]",
      "dest": "binary_expression [7027,7062]"
    },
    {
      "src": "): ) [4058,4059]",
      "dest": "): ) [4058,4059]"
    },
    {
      "src": "call_argument [7842,7846]",
      "dest": "call_argument [7842,7846]"
    },
    {
      "src": "identifier: _symbol [1826,1833]",
      "dest": "identifier: _symbol [1826,1833]"
    },
    {
      "src": "]: ] [4363,4364]",
      "dest": "]: ] [4363,4364]"
    },
    {
      "src": "primitive_type [2059,2065]",
      "dest": "primitive_type [2059,2065]"
    },
    {
      "src": "function: function [7602,7610]",
      "dest": "function: function [7602,7610]"
    },
    {
      "src": "string: string [2222,2228]",
      "dest": "string: string [2222,2228]"
    },
    {
      "src": "public: public [3513,3519]",
      "dest": "public: public [3513,3519]"
    },
    {
      "src": ",: , [4711,4712]",
      "dest": ",: , [4711,4712]"
    },
    {
      "src": "identifier: to [7768,7770]",
      "dest": "identifier: to [7768,7770]"
    },
    {
      "src": "(: ( [7146,7147]",
      "dest": "(: ( [7146,7147]"
    },
    {
      "src": "identifier: _totalSupply [8290,8302]",
      "dest": "identifier: _totalSupply [8290,8302]"
    },
    {
      "src": "identifier: from [5607,5611]",
      "dest": "identifier: from [5607,5611]"
    },
    {
      "src": "block_statement [8329,8651]",
      "dest": "block_statement [8329,8651]"
    },
    {
      "src": "override: override [5517,5525]",
      "dest": "override: override [5517,5525]"
    },
    {
      "src": "else: else [8878,8882]",
      "dest": "else: else [8878,8882]"
    },
    {
      "src": "view: view [3520,3524]",
      "dest": "view: view [3520,3524]"
    },
    {
      "src": "identifier: to [9053,9055]",
      "dest": "identifier: to [9053,9055]"
    },
    {
      "src": "(: ( [11427,11428]",
      "dest": "(: ( [11427,11428]"
    },
    {
      "src": "+: + [6282,6283]",
      "dest": "+: + [6282,6283]"
    },
    {
      "src": "): ) [10103,10104]",
      "dest": "): ) [10103,10104]"
    },
    {
      "src": "boolean_literal [5683,5687]",
      "dest": "boolean_literal [5683,5687]"
    },
    {
      "src": "type_name [6177,6181]",
      "dest": "type_name [6177,6181]"
    },
    {
      "src": "identifier: account [10122,10129]",
      "dest": "identifier: account [10122,10129]"
    },
    {
      "src": "): ) [2460,2461]",
      "dest": "): ) [2460,2461]"
    },
    {
      "src": "}: } [8866,8867]",
      "dest": "}: } [8866,8867]"
    },
    {
      "src": "address: address [5551,5558]",
      "dest": "address: address [5551,5558]"
    },
    {
      "src": "primitive_type [6116,6123]",
      "dest": "primitive_type [6116,6123]"
    },
    {
      "src": "call_argument [9569,9602]",
      "dest": "call_argument [9569,9602]"
    },
    {
      "src": "+=: += [9057,9059]",
      "dest": "+=: += [9057,9059]"
    },
    {
      "src": "): ) [9630,9631]",
      "dest": "): ) [9630,9631]"
    },
    {
      "src": ",: , [11256,11257]",
      "dest": ",: , [11256,11257]"
    },
    {
      "src": "\": \" [8464,8465]",
      "dest": "\": \" [8464,8465]"
    },
    {
      "src": "{: { [8490,8491]",
      "dest": "{: { [8490,8491]"
    },
    {
      "src": "state_variable_declaration [1676,1744]",
      "dest": "state_variable_declaration [1676,1744]"
    },
    {
      "src": "): ) [10644,10645]",
      "dest": "): ) [10644,10645]"
    },
    {
      "src": "user_defined_type [1573,1590]",
      "dest": "user_defined_type [1573,1590]"
    },
    {
      "src": "virtual: virtual [11283,11290]",
      "dest": "virtual: virtual [11283,11290]"
    },
    {
      "src": ",: , [11343,11344]",
      "dest": ",: , [11343,11344]"
    },
    {
      "src": "call_expression [4816,4848]",
      "dest": "call_expression [4816,4848]"
    },
    {
      "src": "call_argument [10906,10912]",
      "dest": "call_argument [10906,10912]"
    },
    {
      "src": "memory: memory [2229,2235]",
      "dest": "memory: memory [2229,2235]"
    },
    {
      "src": "identifier: amount [4721,4727]",
      "dest": "identifier: amount [4721,4727]"
    },
    {
      "src": "{: { [8707,8708]",
      "dest": "{: { [8707,8708]"
    },
    {
      "src": "address: address [8197,8204]",
      "dest": "address: address [8197,8204]"
    },
    {
      "src": "}: } [8322,8323]",
      "dest": "}: } [8322,8323]"
    },
    {
      "src": ",: , [10780,10781]",
      "dest": ",: , [10780,10781]"
    },
    {
      "src": "parameter [11258,11272]",
      "dest": "parameter [11258,11272]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-balanceOf}.      */ [3602,3649]",
      "dest": "comment: /**      * @dev See {IERC20-balanceOf}.      */ [3602,3649]"
    },
    {
      "src": "address: address [6919,6926]",
      "dest": "address: address [6919,6926]"
    },
    {
      "src": "-: - [7180,7181]",
      "dest": "-: - [7180,7181]"
    },
    {
      "src": "boolean_literal [7226,7230]",
      "dest": "boolean_literal [7226,7230]"
    },
    {
      "src": "override_specifier [4293,4301]",
      "dest": "override_specifier [4293,4301]"
    },
    {
      "src": "binary_expression [10681,10700]",
      "dest": "binary_expression [10681,10700]"
    },
    {
      "src": "]: ] [8602,8603]",
      "dest": "]: ] [8602,8603]"
    },
    {
      "src": "(: ( [6115,6116]",
      "dest": "(: ( [6115,6116]"
    },
    {
      "src": "primitive_type [1714,1721]",
      "dest": "primitive_type [1714,1721]"
    },
    {
      "src": "expression_statement [2304,2322]",
      "dest": "expression_statement [2304,2322]"
    },
    {
      "src": "expression_statement [4108,4137]",
      "dest": "expression_statement [4108,4137]"
    },
    {
      "src": "comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  *  * TIP: For a detailed writeup see our guide  * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * The default value of {decimals} is 18. To change this, you should override  * this function so it returns a different value.  *  * We have followed general OpenZeppelin Contracts guidelines: functions revert  * instead returning `false` on failure. This behavior is nonetheless  * conventional and does not conflict with the expectations of ERC20  * applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [265,1508]",
      "dest": "comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  *  * TIP: For a detailed writeup see our guide  * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * The default value of {decimals} is 18. To change this, you should override  * this function so it returns a different value.  *  * We have followed general OpenZeppelin Contracts guidelines: functions revert  * instead returning `false` on failure. This behavior is nonetheless  * conventional and does not conflict with the expectations of ERC20  * applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [265,1508]"
    },
    {
      "src": "binary_expression [7690,7708]",
      "dest": "binary_expression [7690,7708]"
    },
    {
      "src": "type_name [6133,6140]",
      "dest": "type_name [6133,6140]"
    },
    {
      "src": ",: , [11454,11455]",
      "dest": ",: , [11454,11455]"
    },
    {
      "src": "address: address [10056,10063]",
      "dest": "address: address [10056,10063]"
    },
    {
      "src": "type_name [8183,8190]",
      "dest": "type_name [8183,8190]"
    },
    {
      "src": "identifier: amount [9642,9648]",
      "dest": "identifier: amount [9642,9648]"
    },
    {
      "src": "(: ( [2140,2141]",
      "dest": "(: ( [2140,2141]"
    },
    {
      "src": "parameter [8209,8223]",
      "dest": "parameter [8209,8223]"
    },
    {
      "src": "return_type_definition [4302,4319]",
      "dest": "return_type_definition [4302,4319]"
    },
    {
      "src": "): ) [3357,3358]",
      "dest": "): ) [3357,3358]"
    },
    {
      "src": ",: , [10904,10905]",
      "dest": ",: , [10904,10905]"
    },
    {
      "src": "emit_statement [9101,9133]",
      "dest": "emit_statement [9101,9133]"
    },
    {
      "src": "override_specifier [3379,3387]",
      "dest": "override_specifier [3379,3387]"
    },
    {
      "src": "call_argument [4832,4839]",
      "dest": "call_argument [4832,4839]"
    },
    {
      "src": "virtual: virtual [3371,3378]",
      "dest": "virtual: virtual [3371,3378]"
    },
    {
      "src": "): ) [10699,10700]",
      "dest": "): ) [10699,10700]"
    },
    {
      "src": "if_statement [8661,9091]",
      "dest": "if_statement [8661,9091]"
    },
    {
      "src": "identifier: _msgSender [5569,5579]",
      "dest": "identifier: _msgSender [5569,5579]"
    },
    {
      "src": "type_name [6116,6123]",
      "dest": "type_name [6116,6123]"
    },
    {
      "src": "call_argument [8679,8680]",
      "dest": "call_argument [8679,8680]"
    },
    {
      "src": "identifier: _update [10114,10121]",
      "dest": "identifier: _update [10114,10121]"
    },
    {
      "src": "function_body [10663,10920]",
      "dest": "function_body [10663,10920]"
    },
    {
      "src": "): ) [5539,5540]",
      "dest": "): ) [5539,5540]"
    },
    {
      "src": "call_argument [8402,8423]",
      "dest": "call_argument [8402,8423]"
    },
    {
      "src": "uint256: uint256 [8209,8216]",
      "dest": "uint256: uint256 [8209,8216]"
    },
    {
      "src": "function_body [2108,2163]",
      "dest": "function_body [2108,2163]"
    },
    {
      "src": ",: , [4839,4840]",
      "dest": ",: , [4839,4840]"
    },
    {
      "src": "string_literal [7710,7749]",
      "dest": "string_literal [7710,7749]"
    },
    {
      "src": "call_argument [11546,11553]",
      "dest": "call_argument [11546,11553]"
    },
    {
      "src": "identifier: account [9633,9640]",
      "dest": "identifier: account [9633,9640]"
    },
    {
      "src": "if: if [8661,8663]",
      "dest": "if: if [8661,8663]"
    },
    {
      "src": "\": \" [10102,10103]",
      "dest": "\": \" [10102,10103]"
    },
    {
      "src": "type_name [2222,2228]",
      "dest": "type_name [2222,2228]"
    },
    {
      "src": "uint256: uint256 [6854,6861]",
      "dest": "uint256: uint256 [6854,6861]"
    },
    {
      "src": "string [10782,10818]",
      "dest": "string [10782,10818]"
    },
    {
      "src": "return_statement [3747,3773]",
      "dest": "return_statement [3747,3773]"
    },
    {
      "src": "call_argument [5613,5620]",
      "dest": "call_argument [5613,5620]"
    },
    {
      "src": "virtual: virtual [8234,8241]",
      "dest": "virtual: virtual [8234,8241]"
    },
    {
      "src": "identifier: account [9494,9501]",
      "dest": "identifier: account [9494,9501]"
    },
    {
      "src": "variable_declaration_statement [5551,5582]",
      "dest": "variable_declaration_statement [5551,5582]"
    },
    {
      "src": "identifier: owner [11539,11544]",
      "dest": "identifier: owner [11539,11544]"
    },
    {
      "src": "{: { [3560,3561]",
      "dest": "{: { [3560,3561]"
    },
    {
      "src": "function_body [10027,10157]",
      "dest": "function_body [10027,10157]"
    },
    {
      "src": "primitive_type [10056,10063]",
      "dest": "primitive_type [10056,10063]"
    },
    {
      "src": "identifier: _symbol [2304,2311]",
      "dest": "identifier: _symbol [2304,2311]"
    },
    {
      "src": "}: } [6322,6323]",
      "dest": "}: } [6322,6323]"
    },
    {
      "src": "augmented_assignment_expression [8290,8312]",
      "dest": "augmented_assignment_expression [8290,8312]"
    },
    {
      "src": "parameter [10613,10628]",
      "dest": "parameter [10613,10628]"
    },
    {
      "src": "internal: internal [11274,11282]",
      "dest": "internal: internal [11274,11282]"
    },
    {
      "src": "identifier: require [7682,7689]",
      "dest": "identifier: require [7682,7689]"
    },
    {
      "src": "identifier: symbol_ [2073,2080]",
      "dest": "identifier: symbol_ [2073,2080]"
    },
    {
      "src": "primitive_type [8671,8678]",
      "dest": "primitive_type [8671,8678]"
    },
    {
      "src": ",: , [10895,10896]",
      "dest": ",: , [10895,10896]"
    },
    {
      "src": "identifier: _name [1800,1805]",
      "dest": "identifier: _name [1800,1805]"
    },
    {
      "src": "(: ( [8678,8679]",
      "dest": "(: ( [8678,8679]"
    },
    {
      "src": "=: = [8363,8364]",
      "dest": "=: = [8363,8364]"
    },
    {
      "src": "function_body [5541,5694]",
      "dest": "function_body [5541,5694]"
    },
    {
      "src": "expression_statement [4816,4849]",
      "dest": "expression_statement [4816,4849]"
    },
    {
      "src": ",: , [7152,7153]",
      "dest": ",: , [7152,7153]"
    },
    {
      "src": "call_argument [9642,9648]",
      "dest": "call_argument [9642,9648]"
    },
    {
      "src": "type_name [11877,11888]",
      "dest": "type_name [11877,11888]"
    },
    {
      "src": "\": \" [8425,8426]",
      "dest": "\": \" [8425,8426]"
    },
    {
      "src": "array_access [10830,10857]",
      "dest": "array_access [10830,10857]"
    },
    {
      "src": "block_statement [8480,8641]",
      "dest": "block_statement [8480,8641]"
    },
    {
      "src": "uint256: uint256 [4713,4720]",
      "dest": "uint256: uint256 [4713,4720]"
    },
    {
      "src": "parameter [6854,6877]",
      "dest": "parameter [6854,6877]"
    },
    {
      "src": "uint256: uint256 [5486,5493]",
      "dest": "uint256: uint256 [5486,5493]"
    },
    {
      "src": "identifier: amount [10638,10644]",
      "dest": "identifier: amount [10638,10644]"
    },
    {
      "src": "\": \" [7748,7749]",
      "dest": "\": \" [7748,7749]"
    },
    {
      "src": "(: ( [5459,5460]",
      "dest": "(: ( [5459,5460]"
    },
    {
      "src": "primitive_type [6177,6181]",
      "dest": "primitive_type [6177,6181]"
    },
    {
      "src": "function_body [6909,7237]",
      "dest": "function_body [6909,7237]"
    },
    {
      "src": "primitive_type [4762,4766]",
      "dest": "primitive_type [4762,4766]"
    },
    {
      "src": "identifier: from [5649,5653]",
      "dest": "identifier: from [5649,5653]"
    },
    {
      "src": ",: , [5484,5485]",
      "dest": ",: , [5484,5485]"
    },
    {
      "src": "): ) [3688,3689]",
      "dest": "): ) [3688,3689]"
    },
    {
      "src": "!=: != [11384,11386]",
      "dest": "!=: != [11384,11386]"
    },
    {
      "src": "function: function [10580,10588]",
      "dest": "function: function [10580,10588]"
    },
    {
      "src": "comment: /**      * @dev Returns the name of the token.      */ [2334,2388]",
      "dest": "comment: /**      * @dev Returns the name of the token.      */ [2334,2388]"
    },
    {
      "src": "binary_expression [6256,6294]",
      "dest": "binary_expression [6256,6294]"
    },
    {
      "src": ",: , [1590,1591]",
      "dest": ",: , [1590,1591]"
    },
    {
      "src": "true: true [6312,6316]",
      "dest": "true: true [6312,6316]"
    },
    {
      "src": "internal: internal [8225,8233]",
      "dest": "internal: internal [8225,8233]"
    },
    {
      "src": "type: type [11387,11391]",
      "dest": "type: type [11387,11391]"
    },
    {
      "src": "address: address [6193,6200]",
      "dest": "address: address [6193,6200]"
    },
    {
      "src": "(: ( [2037,2038]",
      "dest": "(: ( [2037,2038]"
    },
    {
      "src": "call_argument [7852,7858]",
      "dest": "call_argument [7852,7858]"
    },
    {
      "src": "call_argument [5655,5657]",
      "dest": "call_argument [5655,5657]"
    },
    {
      "src": "): ) [11399,11400]",
      "dest": "): ) [11399,11400]"
    },
    {
      "src": "{: { [9528,9529]",
      "dest": "{: { [9528,9529]"
    },
    {
      "src": "import_directive [203,235]",
      "dest": "import_directive [203,235]"
    },
    {
      "src": "): ) [8681,8682]",
      "dest": "): ) [8681,8682]"
    },
    {
      "src": "\": \" [261,262]",
      "dest": "\": \" [261,262]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.      *      * This internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [10163,10575]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.      *      * This internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [10163,10575]"
    },
    {
      "src": "boolean_literal [6312,6316]",
      "dest": "boolean_literal [6312,6316]"
    },
    {
      "src": "identifier: balanceOf [3663,3672]",
      "dest": "identifier: balanceOf [3663,3672]"
    },
    {
      "src": "type_name [7647,7654]",
      "dest": "type_name [7647,7654]"
    },
    {
      "src": "identifier: _transfer [4108,4117]",
      "dest": "identifier: _transfer [4108,4117]"
    },
    {
      "src": "public: public [4729,4735]",
      "dest": "public: public [4729,4735]"
    },
    {
      "src": "parameter [8197,8207]",
      "dest": "parameter [8197,8207]"
    },
    {
      "src": "identifier: account [9546,9553]",
      "dest": "identifier: account [9546,9553]"
    },
    {
      "src": "{: { [1618,1619]",
      "dest": "{: { [1618,1619]"
    },
    {
      "src": "function: function [2604,2612]",
      "dest": "function: function [2604,2612]"
    },
    {
      "src": "public: public [4273,4279]",
      "dest": "public: public [4273,4279]"
    },
    {
      "src": ",: , [6254,6255]",
      "dest": ",: , [6254,6255]"
    },
    {
      "src": "address: address [9621,9628]",
      "dest": "address: address [9621,9628]"
    },
    {
      "src": "block_statement [11502,11596]",
      "dest": "block_statement [11502,11596]"
    },
    {
      "src": "): ) [4271,4272]",
      "dest": "): ) [4271,4272]"
    },
    {
      "src": "identifier: from [8256,8260]",
      "dest": "identifier: from [8256,8260]"
    },
    {
      "src": "override: override [4744,4752]",
      "dest": "override: override [4744,4752]"
    },
    {
      "src": "expression_statement [11530,11582]",
      "dest": "expression_statement [11530,11582]"
    },
    {
      "src": "contract_body [1618,11905]",
      "dest": "contract_body [1618,11905]"
    },
    {
      "src": ">=: >= [7044,7046]",
      "dest": ">=: >= [7044,7046]"
    },
    {
      "src": ",: , [5653,5654]",
      "dest": ",: , [5653,5654]"
    },
    {
      "src": "identifier: _balances [8365,8374]",
      "dest": "identifier: _balances [8365,8374]"
    },
    {
      "src": "identifier: owner [7147,7152]",
      "dest": "identifier: owner [7147,7152]"
    },
    {
      "src": "private: private [1818,1825]",
      "dest": "private: private [1818,1825]"
    },
    {
      "src": "array_access [4337,4364]",
      "dest": "array_access [4337,4364]"
    },
    {
      "src": "parameter [2201,2220]",
      "dest": "parameter [2201,2220]"
    },
    {
      "src": "memory: memory [2667,2673]",
      "dest": "memory: memory [2667,2673]"
    },
    {
      "src": "identifier: _totalSupply [8830,8842]",
      "dest": "identifier: _totalSupply [8830,8842]"
    },
    {
      "src": "call_expression [6256,6281]",
      "dest": "call_expression [6256,6281]"
    },
    {
      "src": "returns: returns [2438,2445]",
      "dest": "returns: returns [2438,2445]"
    },
    {
      "src": "binary_expression [8665,8681]",
      "dest": "binary_expression [8665,8681]"
    },
    {
      "src": "): ) [7707,7708]",
      "dest": "): ) [7707,7708]"
    },
    {
      "src": "}: } [8876,8877]",
      "dest": "}: } [8876,8877]"
    },
    {
      "src": "pragma_directive [105,129]",
      "dest": "pragma_directive [105,129]"
    },
    {
      "src": "type_name [8209,8216]",
      "dest": "type_name [8209,8216]"
    },
    {
      "src": "uint256: uint256 [11258,11265]",
      "dest": "uint256: uint256 [11258,11265]"
    },
    {
      "src": "uint256: uint256 [11392,11399]",
      "dest": "uint256: uint256 [11392,11399]"
    },
    {
      "src": "parameter [3397,3402]",
      "dest": "parameter [3397,3402]"
    },
    {
      "src": "{: { [4320,4321]",
      "dest": "{: { [4320,4321]"
    },
    {
      "src": "): ) [6280,6281]",
      "dest": "): ) [6280,6281]"
    },
    {
      "src": "variable_declaration_statement [6919,6948]",
      "dest": "variable_declaration_statement [6919,6948]"
    },
    {
      "src": "type_name [6957,6964]",
      "dest": "type_name [6957,6964]"
    },
    {
      "src": "^:  ^ [120,122]",
      "dest": "^:  ^ [120,122]"
    },
    {
      "src": "return: return [3747,3753]",
      "dest": "return: return [3747,3753]"
    },
    {
      "src": "call_argument [9621,9631]",
      "dest": "call_argument [9621,9631]"
    },
    {
      "src": "identifier: symbol_ [2148,2155]",
      "dest": "identifier: symbol_ [2148,2155]"
    },
    {
      "src": "): ) [10912,10913]",
      "dest": "): ) [10912,10913]"
    },
    {
      "src": "expression_statement [8394,8467]",
      "dest": "expression_statement [8394,8467]"
    },
    {
      "src": "{: { [10027,10028]",
      "dest": "{: { [10027,10028]"
    },
    {
      "src": "binary_expression [10759,10780]",
      "dest": "binary_expression [10759,10780]"
    },
    {
      "src": "): ) [11404,11405]",
      "dest": "): ) [11404,11405]"
    },
    {
      "src": ",: , [9567,9568]",
      "dest": ",: , [9567,9568]"
    },
    {
      "src": "=: = [6207,6208]",
      "dest": "=: = [6207,6208]"
    },
    {
      "src": "(: ( [11391,11392]",
      "dest": "(: ( [11391,11392]"
    },
    {
      "src": "{: { [10663,10664]",
      "dest": "{: { [10663,10664]"
    },
    {
      "src": "identifier: owner [6994,6999]",
      "dest": "identifier: owner [6994,6999]"
    },
    {
      "src": "identifier: transfer [3984,3992]",
      "dest": "identifier: transfer [3984,3992]"
    },
    {
      "src": "call_argument [4125,4127]",
      "dest": "call_argument [4125,4127]"
    },
    {
      "src": "(: ( [4824,4825]",
      "dest": "(: ( [4824,4825]"
    },
    {
      "src": "primitive_type [2201,2207]",
      "dest": "primitive_type [2201,2207]"
    },
    {
      "src": "return: return [7219,7225]",
      "dest": "return: return [7219,7225]"
    },
    {
      "src": "call_expression [10114,10150]",
      "dest": "call_expression [10114,10150]"
    },
    {
      "src": "(: ( [10044,10045]",
      "dest": "(: ( [10044,10045]"
    },
    {
      "src": "type_name [10613,10620]",
      "dest": "type_name [10613,10620]"
    },
    {
      "src": "call_argument [2141,2146]",
      "dest": "call_argument [2141,2146]"
    },
    {
      "src": "function_definition [4222,4371]",
      "dest": "function_definition [4222,4371]"
    },
    {
      "src": "returns: returns [5526,5533]",
      "dest": "returns: returns [5526,5533]"
    },
    {
      "src": "parameter [7647,7661]",
      "dest": "parameter [7647,7661]"
    },
    {
      "src": "override_specifier [3533,3541]",
      "dest": "override_specifier [3533,3541]"
    },
    {
      "src": "identifier: owner [6201,6206]",
      "dest": "identifier: owner [6201,6206]"
    },
    {
      "src": "): ) [7197,7198]",
      "dest": "): ) [7197,7198]"
    },
    {
      "src": "type_name [5551,5558]",
      "dest": "type_name [5551,5558]"
    },
    {
      "src": "identifier: decimals [3348,3356]",
      "dest": "identifier: decimals [3348,3356]"
    },
    {
      "src": "return_statement [5676,5688]",
      "dest": "return_statement [5676,5688]"
    },
    {
      "src": "type_cast_expression [9557,9567]",
      "dest": "type_cast_expression [9557,9567]"
    },
    {
      "src": "string [243,262]",
      "dest": "string [243,262]"
    },
    {
      "src": "type_name [4762,4766]",
      "dest": "type_name [4762,4766]"
    },
    {
      "src": "function_definition [11201,11612]",
      "dest": "function_definition [11201,11612]"
    },
    {
      "src": "function_definition [3490,3596]",
      "dest": "function_definition [3490,3596]"
    },
    {
      "src": ",: , [7062,7063]",
      "dest": ",: , [7062,7063]"
    },
    {
      "src": "identifier: _name [2281,2286]",
      "dest": "identifier: _name [2281,2286]"
    },
    {
      "src": "identifier: _allowances [4337,4348]",
      "dest": "identifier: _allowances [4337,4348]"
    },
    {
      "src": "call_argument [6240,6245]",
      "dest": "call_argument [6240,6245]"
    },
    {
      "src": "function_definition [4679,4876]",
      "dest": "function_definition [4679,4876]"
    },
    {
      "src": "address: address [6837,6844]",
      "dest": "address: address [6837,6844]"
    },
    {
      "src": "identifier: amount [4013,4019]",
      "dest": "identifier: amount [4013,4019]"
    },
    {
      "src": "true: true [5683,5687]",
      "dest": "true: true [5683,5687]"
    },
    {
      "src": "): ) [10016,10017]",
      "dest": "): ) [10016,10017]"
    },
    {
      "src": "call_argument [7154,7161]",
      "dest": "call_argument [7154,7161]"
    },
    {
      "src": "primitive_type [6957,6964]",
      "dest": "primitive_type [6957,6964]"
    },
    {
      "src": "primitive_type [11392,11399]",
      "dest": "primitive_type [11392,11399]"
    },
    {
      "src": "call_argument [7027,7062]",
      "dest": "call_argument [7027,7062]"
    },
    {
      "src": "identifier: _mint [9480,9485]",
      "dest": "identifier: _mint [9480,9485]"
    },
    {
      "src": "identifier: currentAllowance [11309,11325]",
      "dest": "identifier: currentAllowance [11309,11325]"
    },
    {
      "src": "true: true [4865,4869]",
      "dest": "true: true [4865,4869]"
    },
    {
      "src": "call_argument [11539,11544]",
      "dest": "call_argument [11539,11544]"
    },
    {
      "src": "address: address [11226,11233]",
      "dest": "address: address [11226,11233]"
    },
    {
      "src": "}: } [2490,2491]",
      "dest": "}: } [2490,2491]"
    },
    {
      "src": "}: } [9090,9091]",
      "dest": "}: } [9090,9091]"
    },
    {
      "src": "parameter [2222,2243]",
      "dest": "parameter [2222,2243]"
    },
    {
      "src": "call_expression [10037,10104]",
      "dest": "call_expression [10037,10104]"
    },
    {
      "src": "identifier: amount [5622,5628]",
      "dest": "identifier: amount [5622,5628]"
    },
    {
      "src": "address: address [5460,5467]",
      "dest": "address: address [5460,5467]"
    },
    {
      "src": "identifier: increaseAllowance [6098,6115]",
      "dest": "identifier: increaseAllowance [6098,6115]"
    },
    {
      "src": "function: function [2169,2177]",
      "dest": "function: function [2169,2177]"
    },
    {
      "src": "address: address [1632,1639]",
      "dest": "address: address [1632,1639]"
    },
    {
      "src": "override: override [3379,3387]",
      "dest": "override: override [3379,3387]"
    },
    {
      "src": "\": \" [9601,9602]",
      "dest": "\": \" [9601,9602]"
    },
    {
      "src": "parameter [6133,6151]",
      "dest": "parameter [6133,6151]"
    },
    {
      "src": "!=: != [10767,10769]",
      "dest": "!=: != [10767,10769]"
    },
    {
      "src": ",: , [2057,2058]",
      "dest": ",: , [2057,2058]"
    },
    {
      "src": "primitive_type [4311,4318]",
      "dest": "primitive_type [4311,4318]"
    },
    {
      "src": "identifier: spender [7154,7161]",
      "dest": "identifier: spender [7154,7161]"
    },
    {
      "src": "[: [ [10848,10849]",
      "dest": "[: [ [10848,10849]"
    },
    {
      "src": "call_argument [7690,7708]",
      "dest": "call_argument [7690,7708]"
    },
    {
      "src": "identifier: spender [10897,10904]",
      "dest": "identifier: spender [10897,10904]"
    },
    {
      "src": "visibility [8225,8233]",
      "dest": "visibility [8225,8233]"
    },
    {
      "src": "address: address [10770,10777]",
      "dest": "address: address [10770,10777]"
    },
    {
      "src": ",: , [11544,11545]",
      "dest": ",: , [11544,11545]"
    },
    {
      "src": "identifier: amount [10143,10149]",
      "dest": "identifier: amount [10143,10149]"
    },
    {
      "src": "internal: internal [9519,9527]",
      "dest": "internal: internal [9519,9527]"
    },
    {
      "src": "primitive_type [5486,5493]",
      "dest": "primitive_type [5486,5493]"
    },
    {
      "src": "number_literal: 0 [10778,10779]",
      "dest": "number_literal: 0 [10778,10779]"
    },
    {
      "src": "true [4153,4157]",
      "dest": "true [4153,4157]"
    },
    {
      "src": "): ) [11352,11353]",
      "dest": "): ) [11352,11353]"
    },
    {
      "src": "return_type_definition [2438,2461]",
      "dest": "return_type_definition [2438,2461]"
    },
    {
      "src": "identifier: spender [6124,6131]",
      "dest": "identifier: spender [6124,6131]"
    },
    {
      "src": "identifier: spender [5613,5620]",
      "dest": "identifier: spender [5613,5620]"
    },
    {
      "src": "\": \" [170,171]",
      "dest": "\": \" [170,171]"
    },
    {
      "src": "identifier: amount [11574,11580]",
      "dest": "identifier: amount [11574,11580]"
    },
    {
      "src": "type_name [10002,10009]",
      "dest": "type_name [10002,10009]"
    },
    {
      "src": "identifier: require [7760,7767]",
      "dest": "identifier: require [7760,7767]"
    },
    {
      "src": "type_name [1695,1722]",
      "dest": "type_name [1695,1722]"
    },
    {
      "src": "identifier: symbol_ [2314,2321]",
      "dest": "identifier: symbol_ [2314,2321]"
    },
    {
      "src": "parameter [4696,4711]",
      "dest": "parameter [4696,4711]"
    },
    {
      "src": "!=: != [7771,7773]",
      "dest": "!=: != [7771,7773]"
    },
    {
      "src": "type_name [3728,3735]",
      "dest": "type_name [3728,3735]"
    },
    {
      "src": "true: true [4153,4157]",
      "dest": "true: true [4153,4157]"
    },
    {
      "src": "call_expression [5591,5629]",
      "dest": "call_expression [5591,5629]"
    },
    {
      "src": "primitive_type [9557,9564]",
      "dest": "primitive_type [9557,9564]"
    },
    {
      "src": "function: function [5438,5446]",
      "dest": "function: function [5438,5446]"
    },
    {
      "src": "}: } [9655,9656]",
      "dest": "}: } [9655,9656]"
    },
    {
      "src": "uint256: uint256 [6957,6964]",
      "dest": "uint256: uint256 [6957,6964]"
    },
    {
      "src": "function_body [4320,4371]",
      "dest": "function_body [4320,4371]"
    },
    {
      "src": "function_body [11291,11612]",
      "dest": "function_body [11291,11612]"
    },
    {
      "src": "return: return [3414,3420]",
      "dest": "return: return [3414,3420]"
    },
    {
      "src": "private: private [11889,11896]",
      "dest": "private: private [11889,11896]"
    },
    {
      "src": "function_definition [3339,3430]",
      "dest": "function_definition [3339,3430]"
    },
    {
      "src": "=>: => [1640,1642]",
      "dest": "=>: => [1640,1642]"
    },
    {
      "src": "identifier: __ERC20_init_unchained [2118,2140]",
      "dest": "identifier: __ERC20_init_unchained [2118,2140]"
    },
    {
      "src": "public: public [3359,3365]",
      "dest": "public: public [3359,3365]"
    },
    {
      "src": "type_cast_expression [8671,8681]",
      "dest": "type_cast_expression [8671,8681]"
    },
    {
      "src": "augmented_assignment_expression [9043,9066]",
      "dest": "augmented_assignment_expression [9043,9066]"
    },
    {
      "src": "address: address [9486,9493]",
      "dest": "address: address [9486,9493]"
    },
    {
      "src": "returns: returns [4045,4052]",
      "dest": "returns: returns [4045,4052]"
    },
    {
      "src": "identifier: to [9121,9123]",
      "dest": "identifier: to [9121,9123]"
    },
    {
      "src": "variable_declaration [4778,4791]",
      "dest": "variable_declaration [4778,4791]"
    },
    {
      "src": "identifier: account [9993,10000]",
      "dest": "identifier: account [9993,10000]"
    },
    {
      "src": "parameter [4311,4318]",
      "dest": "parameter [4311,4318]"
    },
    {
      "src": "(: ( [8401,8402]",
      "dest": "(: ( [8401,8402]"
    },
    {
      "src": "expression_statement [7019,7105]",
      "dest": "expression_statement [7019,7105]"
    },
    {
      "src": "(: ( [10697,10698]",
      "dest": "(: ( [10697,10698]"
    },
    {
      "src": "comment: /**      * @dev Updates `owner` s allowance for `spender` based on spent `amount`.      *      * Does not update the allowance amount in case of infinite allowance.      * Revert if not enough allowance is available.      *      * Might emit an {Approval} event.      */ [10926,11196]",
      "dest": "comment: /**      * @dev Updates `owner` s allowance for `spender` based on spent `amount`.      *      * Does not update the allowance amount in case of infinite allowance.      * Revert if not enough allowance is available.      *      * Might emit an {Approval} event.      */ [10926,11196]"
    },
    {
      "src": "call_argument [7768,7784]",
      "dest": "call_argument [7768,7784]"
    },
    {
      "src": "parameter [2038,2057]",
      "dest": "parameter [2038,2057]"
    },
    {
      "src": "identifier: _balances [9043,9052]",
      "dest": "identifier: _balances [9043,9052]"
    },
    {
      "src": "member_expression [11367,11404]",
      "dest": "member_expression [11367,11404]"
    },
    {
      "src": ",: , [9501,9502]",
      "dest": ",: , [9501,9502]"
    },
    {
      "src": "override: override [4036,4044]",
      "dest": "override: override [4036,4044]"
    },
    {
      "src": "inheritance_specifier [1553,1571]",
      "dest": "inheritance_specifier [1553,1571]"
    },
    {
      "src": "\": \" [233,234]",
      "dest": "\": \" [233,234]"
    },
    {
      "src": "call_argument [10068,10103]",
      "dest": "call_argument [10068,10103]"
    },
    {
      "src": "primitive_type [10690,10697]",
      "dest": "primitive_type [10690,10697]"
    },
    {
      "src": "): ) [8273,8274]",
      "dest": "): ) [8273,8274]"
    },
    {
      "src": "call_argument [7706,7707]",
      "dest": "call_argument [7706,7707]"
    },
    {
      "src": "uint256: uint256 [1750,1757]",
      "dest": "uint256: uint256 [1750,1757]"
    },
    {
      "src": "private: private [1652,1659]",
      "dest": "private: private [1652,1659]"
    },
    {
      "src": "comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5.05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the default value returned by this function, unless      * it's overridden.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [2712,3334]",
      "dest": "comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5.05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the default value returned by this function, unless      * it's overridden.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [2712,3334]"
    },
    {
      "src": "state_mutability [2629,2633]",
      "dest": "state_mutability [2629,2633]"
    },
    {
      "src": "identifier: amount [4129,4135]",
      "dest": "identifier: amount [4129,4135]"
    },
    {
      "src": "=: = [10858,10859]",
      "dest": "=: = [10858,10859]"
    },
    {
      "src": "{: { [8276,8277]",
      "dest": "{: { [8276,8277]"
    },
    {
      "src": "): ) [4019,4020]",
      "dest": "): ) [4019,4020]"
    },
    {
      "src": "{: { [7672,7673]",
      "dest": "{: { [7672,7673]"
    },
    {
      "src": "identifier: amount [8417,8423]",
      "dest": "identifier: amount [8417,8423]"
    },
    {
      "src": "(: ( [1631,1632]",
      "dest": "(: ( [1631,1632]"
    },
    {
      "src": "block_statement [8897,9081]",
      "dest": "block_statement [8897,9081]"
    },
    {
      "src": ">=: >= [8414,8416]",
      "dest": ">=: >= [8414,8416]"
    },
    {
      "src": "string_literal [10702,10740]",
      "dest": "string_literal [10702,10740]"
    },
    {
      "src": "parameter [6177,6181]",
      "dest": "parameter [6177,6181]"
    },
    {
      "src": ",: , [10628,10629]",
      "dest": ",: , [10628,10629]"
    },
    {
      "src": "(: ( [7026,7027]",
      "dest": "(: ( [7026,7027]"
    },
    {
      "src": "]: ] [4354,4355]",
      "dest": "]: ] [4354,4355]"
    },
    {
      "src": "type_name [2447,2453]",
      "dest": "type_name [2447,2453]"
    },
    {
      "src": "(: ( [5579,5580]",
      "dest": "(: ( [5579,5580]"
    },
    {
      "src": "public: public [4021,4027]",
      "dest": "public: public [4021,4027]"
    },
    {
      "src": "uint256: uint256 [11877,11884]",
      "dest": "uint256: uint256 [11877,11884]"
    },
    {
      "src": "return_statement [4858,4870]",
      "dest": "return_statement [4858,4870]"
    },
    {
      "src": "address: address [1684,1691]",
      "dest": "address: address [1684,1691]"
    },
    {
      "src": "function_definition [2604,2706]",
      "dest": "function_definition [2604,2706]"
    },
    {
      "src": "primitive_type [2038,2044]",
      "dest": "primitive_type [2038,2044]"
    },
    {
      "src": "block_statement [8683,8877]",
      "dest": "block_statement [8683,8877]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol) [32,103]",
      "dest": "comment: // OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol) [32,103]"
    },
    {
      "src": "call_argument [7147,7152]",
      "dest": "call_argument [7147,7152]"
    },
    {
      "src": "binary_expression [11367,11400]",
      "dest": "binary_expression [11367,11400]"
    },
    {
      "src": "[: [ [3763,3764]",
      "dest": "[: [ [3763,3764]"
    },
    {
      "src": "number_literal: 0 [10139,10140]",
      "dest": "number_literal: 0 [10139,10140]"
    },
    {
      "src": "call_argument [10064,10065]",
      "dest": "call_argument [10064,10065]"
    },
    {
      "src": "parameter [9486,9501]",
      "dest": "parameter [9486,9501]"
    },
    {
      "src": "override: override [2429,2437]",
      "dest": "override: override [2429,2437]"
    },
    {
      "src": "(: ( [4695,4696]",
      "dest": "(: ( [4695,4696]"
    },
    {
      "src": "primitive_type [5535,5539]",
      "dest": "primitive_type [5535,5539]"
    },
    {
      "src": "primitive_type [4778,4785]",
      "dest": "primitive_type [4778,4785]"
    },
    {
      "src": "call_argument [7782,7783]",
      "dest": "call_argument [7782,7783]"
    },
    {
      "src": "number_literal: 0 [10698,10699]",
      "dest": "number_literal: 0 [10698,10699]"
    },
    {
      "src": "string: string [1811,1817]",
      "dest": "string: string [1811,1817]"
    },
    {
      "src": "): ) [10779,10780]",
      "dest": "): ) [10779,10780]"
    },
    {
      "src": "type_name [3993,4000]",
      "dest": "type_name [3993,4000]"
    },
    {
      "src": "\": \" [10817,10818]",
      "dest": "\": \" [10817,10818]"
    },
    {
      "src": "call_argument [5649,5653]",
      "dest": "call_argument [5649,5653]"
    },
    {
      "src": "string_literal [10068,10103]",
      "dest": "string_literal [10068,10103]"
    },
    {
      "src": "(: ( [4804,4805]",
      "dest": "(: ( [4804,4805]"
    },
    {
      "src": "if: if [11363,11365]",
      "dest": "if: if [11363,11365]"
    },
    {
      "src": ",: , [4003,4004]",
      "dest": ",: , [4003,4004]"
    },
    {
      "src": "returns: returns [4753,4760]",
      "dest": "returns: returns [4753,4760]"
    },
    {
      "src": "function_body [4060,4164]",
      "dest": "function_body [4060,4164]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20}.      *      * NOTE: Does not update the allowance if the current allowance      * is the maximum `uint256`.      *      * Requirements:      *      * - `from` and `to` cannot be the zero address.      * - `from` must have a balance of at least `amount`.      * - the caller must have allowance for ``from``'s tokens of at least      * `amount`.      */ [4882,5433]",
      "dest": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20}.      *      * NOTE: Does not update the allowance if the current allowance      * is the maximum `uint256`.      *      * Requirements:      *      * - `from` and `to` cannot be the zero address.      * - `from` must have a balance of at least `amount`.      * - the caller must have allowance for ``from``'s tokens of at least      * `amount`.      */ [4882,5433]"
    },
    {
      "src": "number_literal: 18 [3421,3423]",
      "dest": "number_literal: 18 [3421,3423]"
    },
    {
      "src": "call_argument [9546,9567]",
      "dest": "call_argument [9546,9567]"
    },
    {
      "src": "}: } [11904,11905]",
      "dest": "}: } [11904,11905]"
    },
    {
      "src": "uint256: uint256 [3551,3558]",
      "dest": "uint256: uint256 [3551,3558]"
    },
    {
      "src": "\": \" [243,244]",
      "dest": "\": \" [243,244]"
    },
    {
      "src": ",: , [11553,11554]",
      "dest": ",: , [11553,11554]"
    },
    {
      "src": "(: ( [2406,2407]",
      "dest": "(: ( [2406,2407]"
    },
    {
      "src": "virtual: virtual [3702,3709]",
      "dest": "virtual: virtual [3702,3709]"
    },
    {
      "src": "identifier: subtractedValue [7047,7062]",
      "dest": "identifier: subtractedValue [7047,7062]"
    },
    {
      "src": "identifier: Transfer [9106,9114]",
      "dest": "identifier: Transfer [9106,9114]"
    },
    {
      "src": "primitive_type [11877,11884]",
      "dest": "primitive_type [11877,11884]"
    },
    {
      "src": "uint256: uint256 [1643,1650]",
      "dest": "uint256: uint256 [1643,1650]"
    },
    {
      "src": "identifier: from [9115,9119]",
      "dest": "identifier: from [9115,9119]"
    },
    {
      "src": "call_argument [10681,10700]",
      "dest": "call_argument [10681,10700]"
    },
    {
      "src": "==: == [8668,8670]",
      "dest": "==: == [8668,8670]"
    },
    {
      "src": "identifier: symbol_ [2236,2243]",
      "dest": "identifier: symbol_ [2236,2243]"
    },
    {
      "src": "call_argument [7710,7749]",
      "dest": "call_argument [7710,7749]"
    },
    {
      "src": "}: } [8640,8641]",
      "dest": "}: } [8640,8641]"
    },
    {
      "src": "\": \" [10702,10703]",
      "dest": "\": \" [10702,10703]"
    },
    {
      "src": "identifier: IERC20Upgradeable [1573,1590]",
      "dest": "identifier: IERC20Upgradeable [1573,1590]"
    },
    {
      "src": "}: } [7236,7237]",
      "dest": "}: } [7236,7237]"
    },
    {
      "src": "primitive_type [8264,8271]",
      "dest": "primitive_type [8264,8271]"
    },
    {
      "src": "address: address [10131,10138]",
      "dest": "address: address [10131,10138]"
    },
    {
      "src": ",: , [7161,7162]",
      "dest": ",: , [7161,7162]"
    },
    {
      "src": "): ) [7823,7824]",
      "dest": "): ) [7823,7824]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-allowance}.      */ [4170,4217]",
      "dest": "comment: /**      * @dev See {IERC20-allowance}.      */ [4170,4217]"
    },
    {
      "src": "solidity_version: 0.8.19 [122,128]",
      "dest": "solidity_version: 0.8.19 [122,128]"
    },
    {
      "src": "identifier: _approve [10589,10597]",
      "dest": "identifier: _approve [10589,10597]"
    },
    {
      "src": "identifier: transferFrom [5447,5459]",
      "dest": "identifier: transferFrom [5447,5459]"
    },
    {
      "src": "(: ( [5534,5535]",
      "dest": "(: ( [5534,5535]"
    },
    {
      "src": "identifier: _approve [11530,11538]",
      "dest": "identifier: _approve [11530,11538]"
    },
    {
      "src": "address: address [6116,6123]",
      "dest": "address: address [6116,6123]"
    },
    {
      "src": "memory: memory [2045,2051]",
      "dest": "memory: memory [2045,2051]"
    },
    {
      "src": "primitive_type [9621,9628]",
      "dest": "primitive_type [9621,9628]"
    },
    {
      "src": "): ) [6151,6152]",
      "dest": "): ) [6151,6152]"
    },
    {
      "src": "bool: bool [6903,6907]",
      "dest": "bool: bool [6903,6907]"
    },
    {
      "src": "(: ( [3356,3357]",
      "dest": "(: ( [3356,3357]"
    },
    {
      "src": "identifier: _balances [8588,8597]",
      "dest": "identifier: _balances [8588,8597]"
    },
    {
      "src": "{: { [3737,3738]",
      "dest": "{: { [3737,3738]"
    },
    {
      "src": "(: ( [7689,7690]",
      "dest": "(: ( [7689,7690]"
    },
    {
      "src": "comment: /**      * @dev Destroys `amount` tokens from `account`, by transferring it to address(0).      * Relies on the `_update` mechanism.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * NOTE: This function is not virtual, {_update} should be overridden instead      */ [9662,9965]",
      "dest": "comment: /**      * @dev Destroys `amount` tokens from `account`, by transferring it to address(0).      * Relies on the `_update` mechanism.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * NOTE: This function is not virtual, {_update} should be overridden instead      */ [9662,9965]"
    },
    {
      "src": "(: ( [2619,2620]",
      "dest": "(: ( [2619,2620]"
    },
    {
      "src": "identifier: fromBalance [8351,8362]",
      "dest": "identifier: fromBalance [8351,8362]"
    },
    {
      "src": "identifier: require [9538,9545]",
      "dest": "identifier: require [9538,9545]"
    },
    {
      "src": "identifier: __ERC20_init [2025,2037]",
      "dest": "identifier: __ERC20_init [2025,2037]"
    },
    {
      "src": "call_expression [10673,10741]",
      "dest": "call_expression [10673,10741]"
    },
    {
      "src": "visibility [4021,4027]",
      "dest": "visibility [4021,4027]"
    },
    {
      "src": "visibility [4273,4279]",
      "dest": "visibility [4273,4279]"
    },
    {
      "src": "function_definition [2016,2163]",
      "dest": "function_definition [2016,2163]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `to` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [3785,3970]",
      "dest": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `to` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [3785,3970]"
    },
    {
      "src": "mapping: mapping [1695,1702]",
      "dest": "mapping: mapping [1695,1702]"
    },
    {
      "src": "expression_statement [7138,7199]",
      "dest": "expression_statement [7138,7199]"
    },
    {
      "src": "primitive_type [3728,3735]",
      "dest": "primitive_type [3728,3735]"
    },
    {
      "src": "expression_statement [10114,10151]",
      "dest": "expression_statement [10114,10151]"
    },
    {
      "src": "=: = [5567,5568]",
      "dest": "=: = [5567,5568]"
    },
    {
      "src": "): ) [4766,4767]",
      "dest": "): ) [4766,4767]"
    },
    {
      "src": "user_defined_type [1553,1571]",
      "dest": "user_defined_type [1553,1571]"
    },
    {
      "src": "parameter [2447,2460]",
      "dest": "parameter [2447,2460]"
    },
    {
      "src": "call_argument [4825,4830]",
      "dest": "call_argument [4825,4830]"
    },
    {
      "src": "{: { [4060,4061]",
      "dest": "{: { [4060,4061]"
    },
    {
      "src": "-: - [8618,8619]",
      "dest": "-: - [8618,8619]"
    },
    {
      "src": ",: , [10066,10067]",
      "dest": ",: , [10066,10067]"
    },
    {
      "src": "(: ( [10121,10122]",
      "dest": "(: ( [10121,10122]"
    },
    {
      "src": "internal: internal [10646,10654]",
      "dest": "internal: internal [10646,10654]"
    },
    {
      "src": "expression_statement [7834,7860]",
      "dest": "expression_statement [7834,7860]"
    },
    {
      "src": "type_name [4005,4012]",
      "dest": "type_name [4005,4012]"
    },
    {
      "src": "type_cast_expression [10131,10141]",
      "dest": "type_cast_expression [10131,10141]"
    },
    {
      "src": "identifier: to [5482,5484]",
      "dest": "identifier: to [5482,5484]"
    },
    {
      "src": "function: function [2016,2024]",
      "dest": "function: function [2016,2024]"
    },
    {
      "src": "expression_statement [9613,9650]",
      "dest": "expression_statement [9613,9650]"
    },
    {
      "src": "}: } [7865,7866]",
      "dest": "}: } [7865,7866]"
    },
    {
      "src": "(: ( [11337,11338]",
      "dest": "(: ( [11337,11338]"
    },
    {
      "src": "type_name [3673,3680]",
      "dest": "type_name [3673,3680]"
    },
    {
      "src": "function: function [3339,3347]",
      "dest": "function: function [3339,3347]"
    },
    {
      "src": "variable_declaration_statement [6957,7010]",
      "dest": "variable_declaration_statement [6957,7010]"
    },
    {
      "src": "return_statement [4146,4158]",
      "dest": "return_statement [4146,4158]"
    },
    {
      "src": "call_argument [9115,9119]",
      "dest": "call_argument [9115,9119]"
    },
    {
      "src": "}: } [2162,2163]",
      "dest": "}: } [2162,2163]"
    },
    {
      "src": "call_argument [6994,6999]",
      "dest": "call_argument [6994,6999]"
    },
    {
      "src": "type_name [4241,4248]",
      "dest": "type_name [4241,4248]"
    },
    {
      "src": ",: , [7633,7634]",
      "dest": ",: , [7633,7634]"
    },
    {
      "src": "return_type_definition [3719,3736]",
      "dest": "return_type_definition [3719,3736]"
    },
    {
      "src": "primitive_type [2222,2228]",
      "dest": "primitive_type [2222,2228]"
    },
    {
      "src": "returns: returns [3388,3395]",
      "dest": "returns: returns [3388,3395]"
    },
    {
      "src": "expression_statement [7760,7825]",
      "dest": "expression_statement [7760,7825]"
    },
    {
      "src": "call_argument [7848,7850]",
      "dest": "call_argument [7848,7850]"
    },
    {
      "src": "call_expression [2118,2156]",
      "dest": "call_expression [2118,2156]"
    },
    {
      "src": "primitive_type [1643,1650]",
      "dest": "primitive_type [1643,1650]"
    },
    {
      "src": "returns: returns [3719,3726]",
      "dest": "returns: returns [3719,3726]"
    },
    {
      "src": "call_expression [7019,7104]",
      "dest": "call_expression [7019,7104]"
    },
    {
      "src": "(: ( [7767,7768]",
      "dest": "(: ( [7767,7768]"
    },
    {
      "src": "call_argument [7786,7823]",
      "dest": "call_argument [7786,7823]"
    },
    {
      "src": "address: address [8671,8678]",
      "dest": "address: address [8671,8678]"
    },
    {
      "src": "=: = [4084,4085]",
      "dest": "=: = [4084,4085]"
    },
    {
      "src": "parameter [7621,7633]",
      "dest": "parameter [7621,7633]"
    },
    {
      "src": "type_name [1714,1721]",
      "dest": "type_name [1714,1721]"
    },
    {
      "src": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [6329,6805]",
      "dest": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [6329,6805]"
    },
    {
      "src": "parameter [10002,10016]",
      "dest": "parameter [10002,10016]"
    },
    {
      "src": "array_access [3754,3772]",
      "dest": "array_access [3754,3772]"
    },
    {
      "src": "call_argument [4129,4135]",
      "dest": "call_argument [4129,4135]"
    },
    {
      "src": "variable_declaration [6957,6981]",
      "dest": "variable_declaration [6957,6981]"
    },
    {
      "src": "return_statement [2472,2485]",
      "dest": "return_statement [2472,2485]"
    },
    {
      "src": "user_defined_type [1592,1617]",
      "dest": "user_defined_type [1592,1617]"
    },
    {
      "src": "=: = [11326,11327]",
      "dest": "=: = [11326,11327]"
    },
    {
      "src": "variable_declaration [11301,11325]",
      "dest": "variable_declaration [11301,11325]"
    },
    {
      "src": "type_cast_expression [7774,7784]",
      "dest": "type_cast_expression [7774,7784]"
    },
    {
      "src": "primitive_type [4713,4720]",
      "dest": "primitive_type [4713,4720]"
    },
    {
      "src": "block_statement [11406,11606]",
      "dest": "block_statement [11406,11606]"
    },
    {
      "src": "address: address [3673,3680]",
      "dest": "address: address [3673,3680]"
    },
    {
      "src": "call_argument [9121,9123]",
      "dest": "call_argument [9121,9123]"
    },
    {
      "src": "function_body [9528,9656]",
      "dest": "function_body [9528,9656]"
    },
    {
      "src": "\": \" [10782,10783]",
      "dest": "\": \" [10782,10783]"
    },
    {
      "src": "(: ( [3550,3551]",
      "dest": "(: ( [3550,3551]"
    },
    {
      "src": "): ) [7749,7750]",
      "dest": "): ) [7749,7750]"
    },
    {
      "src": "string [8425,8465]",
      "dest": "string [8425,8465]"
    },
    {
      "src": "expression_statement [5591,5630]",
      "dest": "expression_statement [5591,5630]"
    },
    {
      "src": "): ) [4727,4728]",
      "dest": "): ) [4727,4728]"
    },
    {
      "src": "primitive_type [4241,4248]",
      "dest": "primitive_type [4241,4248]"
    },
    {
      "src": "block_statement [8276,8323]",
      "dest": "block_statement [8276,8323]"
    },
    {
      "src": "(: ( [8664,8665]",
      "dest": "(: ( [8664,8665]"
    },
    {
      "src": "visibility [1758,1765]",
      "dest": "visibility [1758,1765]"
    },
    {
      "src": "identifier: owner [4825,4830]",
      "dest": "identifier: owner [4825,4830]"
    },
    {
      "src": "comment: /**      * @dev Transfers `amount` of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is      * the zero address. All customizations to transfers, mints, and burns should be done by overriding this function.      *      * Emits a {Transfer} event.      */ [7872,8161]",
      "dest": "comment: /**      * @dev Transfers `amount` of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is      * the zero address. All customizations to transfers, mints, and burns should be done by overriding this function.      *      * Emits a {Transfer} event.      */ [7872,8161]"
    },
    {
      "src": "if: if [8252,8254]",
      "dest": "if: if [8252,8254]"
    },
    {
      "src": "primitive_type [7635,7642]",
      "dest": "primitive_type [7635,7642]"
    },
    {
      "src": "identifier: addedValue [6141,6151]",
      "dest": "identifier: addedValue [6141,6151]"
    },
    {
      "src": "virtual: virtual [4736,4743]",
      "dest": "virtual: virtual [4736,4743]"
    },
    {
      "src": "string: string [2201,2207]",
      "dest": "string: string [2201,2207]"
    },
    {
      "src": "address: address [7635,7642]",
      "dest": "address: address [7635,7642]"
    },
    {
      "src": "]: ] [10847,10848]",
      "dest": "]: ] [10847,10848]"
    },
    {
      "src": "inheritance_specifier [1573,1590]",
      "dest": "inheritance_specifier [1573,1590]"
    },
    {
      "src": ",: , [10700,10701]",
      "dest": ",: , [10700,10701]"
    },
    {
      "src": "string: string [2059,2065]",
      "dest": "string: string [2059,2065]"
    },
    {
      "src": "uint256: uint256 [9503,9510]",
      "dest": "uint256: uint256 [9503,9510]"
    },
    {
      "src": "bool: bool [4762,4766]",
      "dest": "bool: bool [4762,4766]"
    },
    {
      "src": "solidity_version_comparison_operator [120,122]",
      "dest": "solidity_version_comparison_operator [120,122]"
    },
    {
      "src": "call_argument [9565,9566]",
      "dest": "call_argument [9565,9566]"
    },
    {
      "src": "identifier: amount [7655,7661]",
      "dest": "identifier: amount [7655,7661]"
    },
    {
      "src": "comment: // Overflow not possible: balance + amount is at most totalSupply, which we know fits into a uint256. [8925,9026]",
      "dest": "comment: // Overflow not possible: balance + amount is at most totalSupply, which we know fits into a uint256. [8925,9026]"
    },
    {
      "src": "): ) [5665,5666]",
      "dest": "): ) [5665,5666]"
    },
    {
      "src": "function: function [3654,3662]",
      "dest": "function: function [3654,3662]"
    },
    {
      "src": "call_argument [10045,10066]",
      "dest": "call_argument [10045,10066]"
    },
    {
      "src": "call_argument [4841,4847]",
      "dest": "call_argument [4841,4847]"
    },
    {
      "src": "expression_statement [10751,10820]",
      "dest": "expression_statement [10751,10820]"
    },
    {
      "src": "identifier: owner [4249,4254]",
      "dest": "identifier: owner [4249,4254]"
    },
    {
      "src": "parameter [9503,9517]",
      "dest": "parameter [9503,9517]"
    },
    {
      "src": "): ) [8680,8681]",
      "dest": "): ) [8680,8681]"
    },
    {
      "src": "type_name [11241,11248]",
      "dest": "type_name [11241,11248]"
    },
    {
      "src": "function: function [9471,9479]",
      "dest": "function: function [9471,9479]"
    },
    {
      "src": "identifier: owner [10606,10611]",
      "dest": "identifier: owner [10606,10611]"
    },
    {
      "src": "identifier: _name [2479,2484]",
      "dest": "identifier: _name [2479,2484]"
    },
    {
      "src": "(: ( [3396,3397]",
      "dest": "(: ( [3396,3397]"
    },
    {
      "src": "type_name [9486,9493]",
      "dest": "type_name [9486,9493]"
    },
    {
      "src": "string [10702,10740]",
      "dest": "string [10702,10740]"
    },
    {
      "src": "return_type_definition [2651,2674]",
      "dest": "return_type_definition [2651,2674]"
    },
    {
      "src": "visibility [6153,6159]",
      "dest": "visibility [6153,6159]"
    },
    {
      "src": "return: return [4858,4864]",
      "dest": "return: return [4858,4864]"
    },
    {
      "src": "call_argument [9125,9131]",
      "dest": "call_argument [9125,9131]"
    },
    {
      "src": "address: address [7621,7628]",
      "dest": "address: address [7621,7628]"
    },
    {
      "src": "): ) [5580,5581]",
      "dest": "): ) [5580,5581]"
    }
  ],
  "actions": []
}