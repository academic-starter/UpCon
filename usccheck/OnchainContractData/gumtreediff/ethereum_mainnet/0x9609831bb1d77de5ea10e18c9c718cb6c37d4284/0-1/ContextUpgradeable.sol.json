{
  "matches": [
    {
      "src": "inheritance_specifier [677,690]",
      "dest": "inheritance_specifier [677,690]"
    },
    {
      "src": "(: ( [888,889]",
      "dest": "(: ( [888,889]"
    },
    {
      "src": "}: } [1036,1037]",
      "dest": "}: } [1036,1037]"
    },
    {
      "src": "comment: /**      * @dev This empty reserved space is put in place to allow future versions to add new      * variables without shifting down storage in the inheritance chain.      * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps      */ [1043,1297]",
      "dest": "comment: /**      * @dev This empty reserved space is put in place to allow future versions to add new      * variables without shifting down storage in the inheritance chain.      * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps      */ [1043,1297]"
    },
    {
      "src": "return_statement [908,926]",
      "dest": "return_statement [908,926]"
    },
    {
      "src": "bytes: bytes [989,994]",
      "dest": "bytes: bytes [989,994]"
    },
    {
      "src": "visibility [723,731]",
      "dest": "visibility [723,731]"
    },
    {
      "src": "(: ( [955,956]",
      "dest": "(: ( [955,956]"
    },
    {
      "src": "state_mutability [967,971]",
      "dest": "state_mutability [967,971]"
    },
    {
      "src": "return_statement [1015,1031]",
      "dest": "return_statement [1015,1031]"
    },
    {
      "src": "): ) [721,722]",
      "dest": "): ) [721,722]"
    },
    {
      "src": "{: { [898,899]",
      "dest": "{: { [898,899]"
    },
    {
      "src": "comment: /**  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [140,636]",
      "dest": "comment: /**  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [140,636]"
    },
    {
      "src": "function_body [824,831]",
      "dest": "function_body [824,831]"
    },
    {
      "src": "identifier: __Context_init [706,720]",
      "dest": "identifier: __Context_init [706,720]"
    },
    {
      "src": "virtual: virtual [972,979]",
      "dest": "virtual: virtual [972,979]"
    },
    {
      "src": "returns: returns [880,887]",
      "dest": "returns: returns [880,887]"
    },
    {
      "src": "\": \" [136,137]",
      "dest": "\": \" [136,137]"
    },
    {
      "src": ".: . [1025,1026]",
      "dest": ".: . [1025,1026]"
    },
    {
      "src": "modifier_invocation [807,823]",
      "dest": "modifier_invocation [807,823]"
    },
    {
      "src": "): ) [956,957]",
      "dest": "): ) [956,957]"
    },
    {
      "src": "\": \" [118,119]",
      "dest": "\": \" [118,119]"
    },
    {
      "src": "string [118,137]",
      "dest": "string [118,137]"
    },
    {
      "src": "(: ( [988,989]",
      "dest": "(: ( [988,989]"
    },
    {
      "src": "import: import [111,117]",
      "dest": "import: import [111,117]"
    },
    {
      "src": "function: function [697,705]",
      "dest": "function: function [697,705]"
    },
    {
      "src": "virtual: virtual [872,879]",
      "dest": "virtual: virtual [872,879]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "dest": "comment: // SPDX-License-Identifier: MIT [0,31]"
    },
    {
      "src": "identifier: ContextUpgradeable [655,673]",
      "dest": "identifier: ContextUpgradeable [655,673]"
    },
    {
      "src": "solidity_version: 0.8.19 [103,109]",
      "dest": "solidity_version: 0.8.19 [103,109]"
    },
    {
      "src": "visibility [1314,1321]",
      "dest": "visibility [1314,1321]"
    },
    {
      "src": "(: ( [795,796]",
      "dest": "(: ( [795,796]"
    },
    {
      "src": "identifier: _msgSender [845,855]",
      "dest": "identifier: _msgSender [845,855]"
    },
    {
      "src": "calldata: calldata [995,1003]",
      "dest": "calldata: calldata [995,1003]"
    },
    {
      "src": "}: } [1329,1330]",
      "dest": "}: } [1329,1330]"
    },
    {
      "src": "function_body [898,932]",
      "dest": "function_body [898,932]"
    },
    {
      "src": "identifier: __gap [1322,1327]",
      "dest": "identifier: __gap [1322,1327]"
    },
    {
      "src": "internal: internal [858,866]",
      "dest": "internal: internal [858,866]"
    },
    {
      "src": "}: } [830,831]",
      "dest": "}: } [830,831]"
    },
    {
      "src": "function_definition [938,1037]",
      "dest": "function_definition [938,1037]"
    },
    {
      "src": "view: view [967,971]",
      "dest": "view: view [967,971]"
    },
    {
      "src": "internal: internal [723,731]",
      "dest": "internal: internal [723,731]"
    },
    {
      "src": "primitive_type [889,896]",
      "dest": "primitive_type [889,896]"
    },
    {
      "src": "modifier_invocation [732,748]",
      "dest": "modifier_invocation [732,748]"
    },
    {
      "src": "[: [ [1309,1310]",
      "dest": "[: [ [1309,1310]"
    },
    {
      "src": "state_mutability [867,871]",
      "dest": "state_mutability [867,871]"
    },
    {
      "src": "primitive_type [1302,1309]",
      "dest": "primitive_type [1302,1309]"
    },
    {
      "src": ".: . [918,919]",
      "dest": ".: . [918,919]"
    },
    {
      "src": "internal: internal [958,966]",
      "dest": "internal: internal [958,966]"
    },
    {
      "src": "solidity: solidity [93,101]",
      "dest": "solidity: solidity [93,101]"
    },
    {
      "src": "abstract: abstract [637,645]",
      "dest": "abstract: abstract [637,645]"
    },
    {
      "src": "function_definition [762,831]",
      "dest": "function_definition [762,831]"
    },
    {
      "src": "parameter [889,896]",
      "dest": "parameter [889,896]"
    },
    {
      "src": "identifier: sender [919,925]",
      "dest": "identifier: sender [919,925]"
    },
    {
      "src": "member_expression [1022,1030]",
      "dest": "member_expression [1022,1030]"
    },
    {
      "src": "identifier: __Context_init_unchained [771,795]",
      "dest": "identifier: __Context_init_unchained [771,795]"
    },
    {
      "src": "contract: contract [646,654]",
      "dest": "contract: contract [646,654]"
    },
    {
      "src": "identifier: msg [915,918]",
      "dest": "identifier: msg [915,918]"
    },
    {
      "src": "function_body [749,756]",
      "dest": "function_body [749,756]"
    },
    {
      "src": "(: ( [855,856]",
      "dest": "(: ( [855,856]"
    },
    {
      "src": "uint256: uint256 [1302,1309]",
      "dest": "uint256: uint256 [1302,1309]"
    },
    {
      "src": "solidity_pragma_token [93,109]",
      "dest": "solidity_pragma_token [93,109]"
    },
    {
      "src": "identifier: msg [1022,1025]",
      "dest": "identifier: msg [1022,1025]"
    },
    {
      "src": "import_directive [111,138]",
      "dest": "import_directive [111,138]"
    },
    {
      "src": "view: view [867,871]",
      "dest": "view: view [867,871]"
    },
    {
      "src": "identifier: onlyInitializing [807,823]",
      "dest": "identifier: onlyInitializing [807,823]"
    },
    {
      "src": "number_literal: 50 [1310,1312]",
      "dest": "number_literal: 50 [1310,1312]"
    },
    {
      "src": "is: is [674,676]",
      "dest": "is: is [674,676]"
    },
    {
      "src": "}: } [755,756]",
      "dest": "}: } [755,756]"
    },
    {
      "src": "identifier: onlyInitializing [732,748]",
      "dest": "identifier: onlyInitializing [732,748]"
    },
    {
      "src": "return_type_definition [880,897]",
      "dest": "return_type_definition [880,897]"
    },
    {
      "src": "(: ( [720,721]",
      "dest": "(: ( [720,721]"
    },
    {
      "src": "identifier: _msgData [947,955]",
      "dest": "identifier: _msgData [947,955]"
    },
    {
      "src": "): ) [796,797]",
      "dest": "): ) [796,797]"
    },
    {
      "src": "type_name [1302,1309]",
      "dest": "type_name [1302,1309]"
    },
    {
      "src": "{: { [824,825]",
      "dest": "{: { [824,825]"
    },
    {
      "src": "return_type_definition [980,1004]",
      "dest": "return_type_definition [980,1004]"
    },
    {
      "src": "function_definition [697,756]",
      "dest": "function_definition [697,756]"
    },
    {
      "src": "visibility [958,966]",
      "dest": "visibility [958,966]"
    },
    {
      "src": "returns: returns [980,987]",
      "dest": "returns: returns [980,987]"
    },
    {
      "src": "source_file [0,1331]",
      "dest": "source_file [0,1331]"
    },
    {
      "src": "pragma: pragma [86,92]",
      "dest": "pragma: pragma [86,92]"
    },
    {
      "src": "]: ] [1312,1313]",
      "dest": "]: ] [1312,1313]"
    },
    {
      "src": "identifier: Initializable [677,690]",
      "dest": "identifier: Initializable [677,690]"
    },
    {
      "src": "function_body [1005,1037]",
      "dest": "function_body [1005,1037]"
    },
    {
      "src": "function: function [836,844]",
      "dest": "function: function [836,844]"
    },
    {
      "src": "function: function [762,770]",
      "dest": "function: function [762,770]"
    },
    {
      "src": "type_name [1302,1313]",
      "dest": "type_name [1302,1313]"
    },
    {
      "src": "contract_body [691,1330]",
      "dest": "contract_body [691,1330]"
    },
    {
      "src": "parameter [989,1003]",
      "dest": "parameter [989,1003]"
    },
    {
      "src": "type_name [889,896]",
      "dest": "type_name [889,896]"
    },
    {
      "src": "type_name [989,994]",
      "dest": "type_name [989,994]"
    },
    {
      "src": "): ) [1003,1004]",
      "dest": "): ) [1003,1004]"
    },
    {
      "src": "function_definition [836,932]",
      "dest": "function_definition [836,932]"
    },
    {
      "src": "{: { [1005,1006]",
      "dest": "{: { [1005,1006]"
    },
    {
      "src": "return: return [1015,1021]",
      "dest": "return: return [1015,1021]"
    },
    {
      "src": "state_variable_declaration [1302,1328]",
      "dest": "state_variable_declaration [1302,1328]"
    },
    {
      "src": "visibility [858,866]",
      "dest": "visibility [858,866]"
    },
    {
      "src": "identifier: data [1026,1030]",
      "dest": "identifier: data [1026,1030]"
    },
    {
      "src": "visibility [798,806]",
      "dest": "visibility [798,806]"
    },
    {
      "src": "}: } [931,932]",
      "dest": "}: } [931,932]"
    },
    {
      "src": "): ) [896,897]",
      "dest": "): ) [896,897]"
    },
    {
      "src": "primitive_type [989,994]",
      "dest": "primitive_type [989,994]"
    },
    {
      "src": "user_defined_type [677,690]",
      "dest": "user_defined_type [677,690]"
    },
    {
      "src": "solidity_version_comparison_operator [101,103]",
      "dest": "solidity_version_comparison_operator [101,103]"
    },
    {
      "src": "{: { [691,692]",
      "dest": "{: { [691,692]"
    },
    {
      "src": "contract_declaration [637,1330]",
      "dest": "contract_declaration [637,1330]"
    },
    {
      "src": "member_expression [915,925]",
      "dest": "member_expression [915,925]"
    },
    {
      "src": "{: { [749,750]",
      "dest": "{: { [749,750]"
    },
    {
      "src": "): ) [856,857]",
      "dest": "): ) [856,857]"
    },
    {
      "src": "function: function [938,946]",
      "dest": "function: function [938,946]"
    },
    {
      "src": "pragma_directive [86,110]",
      "dest": "pragma_directive [86,110]"
    },
    {
      "src": "return: return [908,914]",
      "dest": "return: return [908,914]"
    },
    {
      "src": "private: private [1314,1321]",
      "dest": "private: private [1314,1321]"
    },
    {
      "src": "address: address [889,896]",
      "dest": "address: address [889,896]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts v4.4.1 (utils/Context.sol) [32,84]",
      "dest": "comment: // OpenZeppelin Contracts v4.4.1 (utils/Context.sol) [32,84]"
    },
    {
      "src": "^:  ^ [101,103]",
      "dest": "^:  ^ [101,103]"
    },
    {
      "src": "internal: internal [798,806]",
      "dest": "internal: internal [798,806]"
    }
  ],
  "actions": []
}