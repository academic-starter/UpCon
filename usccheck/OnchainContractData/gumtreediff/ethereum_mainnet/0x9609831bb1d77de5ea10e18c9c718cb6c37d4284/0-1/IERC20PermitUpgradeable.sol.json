{
  "matches": [
    {
      "src": "parameter [1492,1505]",
      "dest": "parameter [1492,1505]"
    },
    {
      "src": "): ) [1639,1640]",
      "dest": "): ) [1639,1640]"
    },
    {
      "src": "primitive_type [2261,2268]",
      "dest": "primitive_type [2261,2268]"
    },
    {
      "src": "bytes32: bytes32 [2261,2268]",
      "dest": "bytes32: bytes32 [2261,2268]"
    },
    {
      "src": "parameter [1971,1984]",
      "dest": "parameter [1971,1984]"
    },
    {
      "src": "(: ( [2235,2236]",
      "dest": "(: ( [2235,2236]"
    },
    {
      "src": "identifier: spender [1523,1530]",
      "dest": "identifier: spender [1523,1530]"
    },
    {
      "src": "return_type_definition [2000,2017]",
      "dest": "return_type_definition [2000,2017]"
    },
    {
      "src": "type_name [2009,2016]",
      "dest": "type_name [2009,2016]"
    },
    {
      "src": "view: view [2247,2251]",
      "dest": "view: view [2247,2251]"
    },
    {
      "src": "address: address [1515,1522]",
      "dest": "address: address [1515,1522]"
    },
    {
      "src": "(: ( [1970,1971]",
      "dest": "(: ( [1970,1971]"
    },
    {
      "src": "{: { [664,665]",
      "dest": "{: { [664,665]"
    },
    {
      "src": "primitive_type [1589,1594]",
      "dest": "primitive_type [1589,1594]"
    },
    {
      "src": "type_name [1515,1522]",
      "dest": "type_name [1515,1522]"
    },
    {
      "src": "uint256: uint256 [2009,2016]",
      "dest": "uint256: uint256 [2009,2016]"
    },
    {
      "src": "identifier: s [1633,1634]",
      "dest": "identifier: s [1633,1634]"
    },
    {
      "src": "contract_body [664,2272]",
      "dest": "contract_body [664,2272]"
    },
    {
      "src": "parameter [2261,2268]",
      "dest": "parameter [2261,2268]"
    },
    {
      "src": "parameter [1589,1596]",
      "dest": "parameter [1589,1596]"
    },
    {
      "src": "returns: returns [2000,2007]",
      "dest": "returns: returns [2000,2007]"
    },
    {
      "src": "identifier: IERC20PermitUpgradeable [640,663]",
      "dest": "identifier: IERC20PermitUpgradeable [640,663]"
    },
    {
      "src": "interface: interface [630,639]",
      "dest": "interface: interface [630,639]"
    },
    {
      "src": "comment: // solhint-disable-next-line func-name-mixedcase [2157,2205]",
      "dest": "comment: // solhint-disable-next-line func-name-mixedcase [2157,2205]"
    },
    {
      "src": "interface_declaration [630,2272]",
      "dest": "interface_declaration [630,2272]"
    },
    {
      "src": "parameter [1515,1530]",
      "dest": "parameter [1515,1530]"
    },
    {
      "src": "primitive_type [1625,1632]",
      "dest": "primitive_type [1625,1632]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "dest": "comment: // SPDX-License-Identifier: MIT [0,31]"
    },
    {
      "src": "identifier: permit [1476,1482]",
      "dest": "identifier: permit [1476,1482]"
    },
    {
      "src": "solidity_version: 0.8.19 [140,146]",
      "dest": "solidity_version: 0.8.19 [140,146]"
    },
    {
      "src": "primitive_type [1563,1570]",
      "dest": "primitive_type [1563,1570]"
    },
    {
      "src": "type_name [1606,1613]",
      "dest": "type_name [1606,1613]"
    },
    {
      "src": "): ) [2236,2237]",
      "dest": "): ) [2236,2237]"
    },
    {
      "src": "identifier: nonces [1964,1970]",
      "dest": "identifier: nonces [1964,1970]"
    },
    {
      "src": ",: , [1615,1616]",
      "dest": ",: , [1615,1616]"
    },
    {
      "src": "identifier: v [1595,1596]",
      "dest": "identifier: v [1595,1596]"
    },
    {
      "src": "external: external [1986,1994]",
      "dest": "external: external [1986,1994]"
    },
    {
      "src": "primitive_type [2009,2016]",
      "dest": "primitive_type [2009,2016]"
    },
    {
      "src": ",: , [1530,1531]",
      "dest": ",: , [1530,1531]"
    },
    {
      "src": "comment: /**      * @dev Returns the current nonce for `owner`. This value must be      * included whenever a signature is generated for {permit}.      *      * Every successful call to {permit} increases ``owner``'s nonce by one. This      * prevents a signature from being used multiple times.      */ [1656,1950]",
      "dest": "comment: /**      * @dev Returns the current nonce for `owner`. This value must be      * included whenever a signature is generated for {permit}.      *      * Every successful call to {permit} increases ``owner``'s nonce by one. This      * prevents a signature from being used multiple times.      */ [1656,1950]"
    },
    {
      "src": "parameter [1540,1553]",
      "dest": "parameter [1540,1553]"
    },
    {
      "src": "parameter [1625,1634]",
      "dest": "parameter [1625,1634]"
    },
    {
      "src": "identifier: owner [1979,1984]",
      "dest": "identifier: owner [1979,1984]"
    },
    {
      "src": "parameter [2009,2016]",
      "dest": "parameter [2009,2016]"
    },
    {
      "src": "solidity: solidity [130,138]",
      "dest": "solidity: solidity [130,138]"
    },
    {
      "src": "function_definition [1467,1650]",
      "dest": "function_definition [1467,1650]"
    },
    {
      "src": ",: , [1553,1554]",
      "dest": ",: , [1553,1554]"
    },
    {
      "src": "visibility [1641,1649]",
      "dest": "visibility [1641,1649]"
    },
    {
      "src": "): ) [1984,1985]",
      "dest": "): ) [1984,1985]"
    },
    {
      "src": "returns: returns [2252,2259]",
      "dest": "returns: returns [2252,2259]"
    },
    {
      "src": "type_name [1563,1570]",
      "dest": "type_name [1563,1570]"
    },
    {
      "src": "function: function [1467,1475]",
      "dest": "function: function [1467,1475]"
    },
    {
      "src": "address: address [1971,1978]",
      "dest": "address: address [1971,1978]"
    },
    {
      "src": "primitive_type [1540,1547]",
      "dest": "primitive_type [1540,1547]"
    },
    {
      "src": "primitive_type [1606,1613]",
      "dest": "primitive_type [1606,1613]"
    },
    {
      "src": "solidity_pragma_token [130,146]",
      "dest": "solidity_pragma_token [130,146]"
    },
    {
      "src": "(: ( [2260,2261]",
      "dest": "(: ( [2260,2261]"
    },
    {
      "src": "comment: /**  * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in  * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].  *  * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by  * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't  * need to send a transaction, and thus is not required to hold Ether at all.  */ [149,629]",
      "dest": "comment: /**  * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in  * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].  *  * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by  * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't  * need to send a transaction, and thus is not required to hold Ether at all.  */ [149,629]"
    },
    {
      "src": "type_name [1625,1632]",
      "dest": "type_name [1625,1632]"
    },
    {
      "src": "type_name [1589,1594]",
      "dest": "type_name [1589,1594]"
    },
    {
      "src": "(: ( [1482,1483]",
      "dest": "(: ( [1482,1483]"
    },
    {
      "src": "identifier: value [1548,1553]",
      "dest": "identifier: value [1548,1553]"
    },
    {
      "src": "type_name [1540,1547]",
      "dest": "type_name [1540,1547]"
    },
    {
      "src": "bytes32: bytes32 [1625,1632]",
      "dest": "bytes32: bytes32 [1625,1632]"
    },
    {
      "src": "primitive_type [1515,1522]",
      "dest": "primitive_type [1515,1522]"
    },
    {
      "src": "view: view [1995,1999]",
      "dest": "view: view [1995,1999]"
    },
    {
      "src": "uint256: uint256 [1563,1570]",
      "dest": "uint256: uint256 [1563,1570]"
    },
    {
      "src": "uint8: uint8 [1589,1594]",
      "dest": "uint8: uint8 [1589,1594]"
    },
    {
      "src": "): ) [2016,2017]",
      "dest": "): ) [2016,2017]"
    },
    {
      "src": ",: , [1505,1506]",
      "dest": ",: , [1505,1506]"
    },
    {
      "src": "(: ( [2008,2009]",
      "dest": "(: ( [2008,2009]"
    },
    {
      "src": "comment: /**      * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.      */ [2024,2152]",
      "dest": "comment: /**      * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.      */ [2024,2152]"
    },
    {
      "src": "source_file [0,2273]",
      "dest": "source_file [0,2273]"
    },
    {
      "src": "pragma: pragma [123,129]",
      "dest": "pragma: pragma [123,129]"
    },
    {
      "src": "primitive_type [1492,1499]",
      "dest": "primitive_type [1492,1499]"
    },
    {
      "src": "external: external [2238,2246]",
      "dest": "external: external [2238,2246]"
    },
    {
      "src": "parameter [1606,1615]",
      "dest": "parameter [1606,1615]"
    },
    {
      "src": "parameter [1563,1579]",
      "dest": "parameter [1563,1579]"
    },
    {
      "src": "}: } [2271,2272]",
      "dest": "}: } [2271,2272]"
    },
    {
      "src": "address: address [1492,1499]",
      "dest": "address: address [1492,1499]"
    },
    {
      "src": "function_definition [2210,2270]",
      "dest": "function_definition [2210,2270]"
    },
    {
      "src": "external: external [1641,1649]",
      "dest": "external: external [1641,1649]"
    },
    {
      "src": "function: function [2210,2218]",
      "dest": "function: function [2210,2218]"
    },
    {
      "src": "visibility [2238,2246]",
      "dest": "visibility [2238,2246]"
    },
    {
      "src": ",: , [1596,1597]",
      "dest": ",: , [1596,1597]"
    },
    {
      "src": "state_mutability [2247,2251]",
      "dest": "state_mutability [2247,2251]"
    },
    {
      "src": "return_type_definition [2252,2269]",
      "dest": "return_type_definition [2252,2269]"
    },
    {
      "src": "): ) [2268,2269]",
      "dest": "): ) [2268,2269]"
    },
    {
      "src": "identifier: r [1614,1615]",
      "dest": "identifier: r [1614,1615]"
    },
    {
      "src": "type_name [2261,2268]",
      "dest": "type_name [2261,2268]"
    },
    {
      "src": "identifier: deadline [1571,1579]",
      "dest": "identifier: deadline [1571,1579]"
    },
    {
      "src": "visibility [1986,1994]",
      "dest": "visibility [1986,1994]"
    },
    {
      "src": "function: function [1955,1963]",
      "dest": "function: function [1955,1963]"
    },
    {
      "src": "identifier: DOMAIN_SEPARATOR [2219,2235]",
      "dest": "identifier: DOMAIN_SEPARATOR [2219,2235]"
    },
    {
      "src": "type_name [1492,1499]",
      "dest": "type_name [1492,1499]"
    },
    {
      "src": "solidity_version_comparison_operator [138,140]",
      "dest": "solidity_version_comparison_operator [138,140]"
    },
    {
      "src": "identifier: owner [1500,1505]",
      "dest": "identifier: owner [1500,1505]"
    },
    {
      "src": "comment: /**      * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,      * given ``owner``'s signed approval.      *      * IMPORTANT: The same issues {IERC20-approve} has related to transaction      * ordering also apply here.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `deadline` must be a timestamp in the future.      * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`      * over the EIP712-formatted function arguments.      * - the signature must use ``owner``'s current nonce (see {nonces}).      *      * For more information on the signature format, see the      * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP      * section].      */ [670,1462]",
      "dest": "comment: /**      * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,      * given ``owner``'s signed approval.      *      * IMPORTANT: The same issues {IERC20-approve} has related to transaction      * ordering also apply here.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `deadline` must be a timestamp in the future.      * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`      * over the EIP712-formatted function arguments.      * - the signature must use ``owner``'s current nonce (see {nonces}).      *      * For more information on the signature format, see the      * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP      * section].      */ [670,1462]"
    },
    {
      "src": "primitive_type [1971,1978]",
      "dest": "primitive_type [1971,1978]"
    },
    {
      "src": "uint256: uint256 [1540,1547]",
      "dest": "uint256: uint256 [1540,1547]"
    },
    {
      "src": "bytes32: bytes32 [1606,1613]",
      "dest": "bytes32: bytes32 [1606,1613]"
    },
    {
      "src": "state_mutability [1995,1999]",
      "dest": "state_mutability [1995,1999]"
    },
    {
      "src": "pragma_directive [123,147]",
      "dest": "pragma_directive [123,147]"
    },
    {
      "src": "type_name [1971,1978]",
      "dest": "type_name [1971,1978]"
    },
    {
      "src": "function_definition [1955,2018]",
      "dest": "function_definition [1955,2018]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol) [32,121]",
      "dest": "comment: // OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol) [32,121]"
    },
    {
      "src": "^:  ^ [138,140]",
      "dest": "^:  ^ [138,140]"
    },
    {
      "src": ",: , [1579,1580]",
      "dest": ",: , [1579,1580]"
    }
  ],
  "actions": []
}