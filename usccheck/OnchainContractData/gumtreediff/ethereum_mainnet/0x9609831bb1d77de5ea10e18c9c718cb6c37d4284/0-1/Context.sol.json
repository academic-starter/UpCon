{
  "matches": [
    {
      "src": "): ) [661,662]",
      "dest": "): ) [661,662]"
    },
    {
      "src": "): ) [808,809]",
      "dest": "): ) [808,809]"
    },
    {
      "src": "solidity_pragma_token [93,109]",
      "dest": "solidity_pragma_token [93,109]"
    },
    {
      "src": "identifier: data [831,835]",
      "dest": "identifier: data [831,835]"
    },
    {
      "src": "type_name [694,701]",
      "dest": "type_name [694,701]"
    },
    {
      "src": "comment: /**  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [112,608]",
      "dest": "comment: /**  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [112,608]"
    },
    {
      "src": "type_name [794,799]",
      "dest": "type_name [794,799]"
    },
    {
      "src": "parameter [694,701]",
      "dest": "parameter [694,701]"
    },
    {
      "src": ".: . [830,831]",
      "dest": ".: . [830,831]"
    },
    {
      "src": "contract_body [635,844]",
      "dest": "contract_body [635,844]"
    },
    {
      "src": "(: ( [760,761]",
      "dest": "(: ( [760,761]"
    },
    {
      "src": "identifier: _msgData [752,760]",
      "dest": "identifier: _msgData [752,760]"
    },
    {
      "src": "returns: returns [685,692]",
      "dest": "returns: returns [685,692]"
    },
    {
      "src": "calldata: calldata [800,808]",
      "dest": "calldata: calldata [800,808]"
    },
    {
      "src": "identifier: Context [627,634]",
      "dest": "identifier: Context [627,634]"
    },
    {
      "src": "(: ( [660,661]",
      "dest": "(: ( [660,661]"
    },
    {
      "src": "return_statement [713,731]",
      "dest": "return_statement [713,731]"
    },
    {
      "src": "): ) [701,702]",
      "dest": "): ) [701,702]"
    },
    {
      "src": "bytes: bytes [794,799]",
      "dest": "bytes: bytes [794,799]"
    },
    {
      "src": "(: ( [693,694]",
      "dest": "(: ( [693,694]"
    },
    {
      "src": "function: function [743,751]",
      "dest": "function: function [743,751]"
    },
    {
      "src": "contract: contract [618,626]",
      "dest": "contract: contract [618,626]"
    },
    {
      "src": "abstract: abstract [609,617]",
      "dest": "abstract: abstract [609,617]"
    },
    {
      "src": "contract_declaration [609,844]",
      "dest": "contract_declaration [609,844]"
    },
    {
      "src": "return_type_definition [685,702]",
      "dest": "return_type_definition [685,702]"
    },
    {
      "src": "primitive_type [794,799]",
      "dest": "primitive_type [794,799]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "dest": "comment: // SPDX-License-Identifier: MIT [0,31]"
    },
    {
      "src": "identifier: sender [724,730]",
      "dest": "identifier: sender [724,730]"
    },
    {
      "src": "): ) [761,762]",
      "dest": "): ) [761,762]"
    },
    {
      "src": "identifier: _msgSender [650,660]",
      "dest": "identifier: _msgSender [650,660]"
    },
    {
      "src": "solidity_version: 0.8.19 [103,109]",
      "dest": "solidity_version: 0.8.19 [103,109]"
    },
    {
      "src": "virtual: virtual [677,684]",
      "dest": "virtual: virtual [677,684]"
    },
    {
      "src": "source_file [0,845]",
      "dest": "source_file [0,845]"
    },
    {
      "src": "pragma: pragma [86,92]",
      "dest": "pragma: pragma [86,92]"
    },
    {
      "src": "internal: internal [663,671]",
      "dest": "internal: internal [663,671]"
    },
    {
      "src": ".: . [723,724]",
      "dest": ".: . [723,724]"
    },
    {
      "src": "view: view [772,776]",
      "dest": "view: view [772,776]"
    },
    {
      "src": "state_mutability [772,776]",
      "dest": "state_mutability [772,776]"
    },
    {
      "src": "identifier: msg [827,830]",
      "dest": "identifier: msg [827,830]"
    },
    {
      "src": "member_expression [720,730]",
      "dest": "member_expression [720,730]"
    },
    {
      "src": "state_mutability [672,676]",
      "dest": "state_mutability [672,676]"
    },
    {
      "src": "(: ( [793,794]",
      "dest": "(: ( [793,794]"
    },
    {
      "src": "visibility [763,771]",
      "dest": "visibility [763,771]"
    },
    {
      "src": "primitive_type [694,701]",
      "dest": "primitive_type [694,701]"
    },
    {
      "src": "{: { [810,811]",
      "dest": "{: { [810,811]"
    },
    {
      "src": "return_statement [820,836]",
      "dest": "return_statement [820,836]"
    },
    {
      "src": "internal: internal [763,771]",
      "dest": "internal: internal [763,771]"
    },
    {
      "src": "address: address [694,701]",
      "dest": "address: address [694,701]"
    },
    {
      "src": "returns: returns [785,792]",
      "dest": "returns: returns [785,792]"
    },
    {
      "src": "}: } [736,737]",
      "dest": "}: } [736,737]"
    },
    {
      "src": "member_expression [827,835]",
      "dest": "member_expression [827,835]"
    },
    {
      "src": "parameter [794,808]",
      "dest": "parameter [794,808]"
    },
    {
      "src": "visibility [663,671]",
      "dest": "visibility [663,671]"
    },
    {
      "src": "solidity_version_comparison_operator [101,103]",
      "dest": "solidity_version_comparison_operator [101,103]"
    },
    {
      "src": "view: view [672,676]",
      "dest": "view: view [672,676]"
    },
    {
      "src": "solidity: solidity [93,101]",
      "dest": "solidity: solidity [93,101]"
    },
    {
      "src": "{: { [635,636]",
      "dest": "{: { [635,636]"
    },
    {
      "src": "function_definition [641,737]",
      "dest": "function_definition [641,737]"
    },
    {
      "src": "return: return [713,719]",
      "dest": "return: return [713,719]"
    },
    {
      "src": "function_body [810,842]",
      "dest": "function_body [810,842]"
    },
    {
      "src": "}: } [843,844]",
      "dest": "}: } [843,844]"
    },
    {
      "src": "{: { [703,704]",
      "dest": "{: { [703,704]"
    },
    {
      "src": "return_type_definition [785,809]",
      "dest": "return_type_definition [785,809]"
    },
    {
      "src": "pragma_directive [86,110]",
      "dest": "pragma_directive [86,110]"
    },
    {
      "src": "identifier: msg [720,723]",
      "dest": "identifier: msg [720,723]"
    },
    {
      "src": "}: } [841,842]",
      "dest": "}: } [841,842]"
    },
    {
      "src": "function: function [641,649]",
      "dest": "function: function [641,649]"
    },
    {
      "src": "return: return [820,826]",
      "dest": "return: return [820,826]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts v4.4.1 (utils/Context.sol) [32,84]",
      "dest": "comment: // OpenZeppelin Contracts v4.4.1 (utils/Context.sol) [32,84]"
    },
    {
      "src": "^:  ^ [101,103]",
      "dest": "^:  ^ [101,103]"
    },
    {
      "src": "function_body [703,737]",
      "dest": "function_body [703,737]"
    },
    {
      "src": "function_definition [743,842]",
      "dest": "function_definition [743,842]"
    },
    {
      "src": "virtual: virtual [777,784]",
      "dest": "virtual: virtual [777,784]"
    }
  ],
  "actions": []
}