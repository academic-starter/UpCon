{
  "matches": [
    {
      "src": "returns: returns [993,1000]",
      "dest": "returns: returns [993,1000]"
    },
    {
      "src": "identifier: success [1888,1895]",
      "dest": "identifier: success [1888,1895]"
    },
    {
      "src": "(: ( [1001,1002]",
      "dest": "(: ( [1001,1002]"
    },
    {
      "src": "(: ( [1930,1931]",
      "dest": "(: ( [1930,1931]"
    },
    {
      "src": "uint256: uint256 [1018,1025]",
      "dest": "uint256: uint256 [1018,1025]"
    },
    {
      "src": "return_statement [1110,1126]",
      "dest": "return_statement [1110,1126]"
    },
    {
      "src": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]",
      "dest": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]"
    },
    {
      "src": "string: string [1897,1903]",
      "dest": "string: string [1897,1903]"
    },
    {
      "src": "pragma: pragma [636,642]",
      "dest": "pragma: pragma [636,642]"
    },
    {
      "src": "parameter [1651,1672]",
      "dest": "parameter [1651,1672]"
    },
    {
      "src": "if: if [1927,1929]",
      "dest": "if: if [1927,1929]"
    },
    {
      "src": "binary_expression [1931,1952]",
      "dest": "binary_expression [1931,1952]"
    },
    {
      "src": "member_expression [1843,1860]",
      "dest": "member_expression [1843,1860]"
    },
    {
      "src": "expression_statement [1880,1917]",
      "dest": "expression_statement [1880,1917]"
    },
    {
      "src": "call_argument [2008,2032]",
      "dest": "call_argument [2008,2032]"
    },
    {
      "src": "call_argument [1999,2005]",
      "dest": "call_argument [1999,2005]"
    },
    {
      "src": ":=: := [1068,1070]",
      "dest": ":=: := [1068,1070]"
    },
    {
      "src": "bytes: bytes [1816,1821]",
      "dest": "bytes: bytes [1816,1821]"
    },
    {
      "src": "): ) [1235,1236]",
      "dest": "): ) [1235,1236]"
    },
    {
      "src": "parameter [962,977]",
      "dest": "parameter [962,977]"
    },
    {
      "src": "function: function [1598,1606]",
      "dest": "function: function [1598,1606]"
    },
    {
      "src": "type_name [1802,1806]",
      "dest": "type_name [1802,1806]"
    },
    {
      "src": "): ) [1746,1747]",
      "dest": "): ) [1746,1747]"
    },
    {
      "src": "binary_expression [1117,1125]",
      "dest": "binary_expression [1117,1125]"
    },
    {
      "src": "function_definition [942,1132]",
      "dest": "function_definition [942,1132]"
    },
    {
      "src": "{: { [1049,1050]",
      "dest": "{: { [1049,1050]"
    },
    {
      "src": "(: ( [1986,1987]",
      "dest": "(: ( [1986,1987]"
    },
    {
      "src": "solidity_version_comparison_operator [651,653]",
      "dest": "solidity_version_comparison_operator [651,653]"
    },
    {
      "src": "if_statement [1220,1244]",
      "dest": "if_statement [1220,1244]"
    },
    {
      "src": "bytes: bytes [1651,1656]",
      "dest": "bytes: bytes [1651,1656]"
    },
    {
      "src": "primitive_type [1629,1636]",
      "dest": "primitive_type [1629,1636]"
    },
    {
      "src": "library: library [732,739]",
      "dest": "library: library [732,739]"
    },
    {
      "src": "primitive_type [2000,2004]",
      "dest": "primitive_type [2000,2004]"
    },
    {
      "src": "visibility [1201,1209]",
      "dest": "visibility [1201,1209]"
    },
    {
      "src": "): ) [2005,2006]",
      "dest": "): ) [2005,2006]"
    },
    {
      "src": "identifier: length [1942,1948]",
      "dest": "identifier: length [1942,1948]"
    },
    {
      "src": "function: function [942,950]",
      "dest": "function: function [942,950]"
    },
    {
      "src": "address: address [1629,1636]",
      "dest": "address: address [1629,1636]"
    },
    {
      "src": "}: } [1131,1132]",
      "dest": "}: } [1131,1132]"
    },
    {
      "src": "call_argument [1861,1869]",
      "dest": "call_argument [1861,1869]"
    },
    {
      "src": "): ) [1724,1725]",
      "dest": "): ) [1724,1725]"
    },
    {
      "src": "identifier: returndata [1987,1997]",
      "dest": "identifier: returndata [1987,1997]"
    },
    {
      "src": "parenthesized_expression [1999,2005]",
      "dest": "parenthesized_expression [1999,2005]"
    },
    {
      "src": "assembly: assembly [1040,1048]",
      "dest": "assembly: assembly [1040,1048]"
    },
    {
      "src": "==: == [1231,1233]",
      "dest": "==: == [1231,1233]"
    },
    {
      "src": "primitive_type [1651,1656]",
      "dest": "primitive_type [1651,1656]"
    },
    {
      "src": ",: , [1725,1726]",
      "dest": ",: , [1725,1726]"
    },
    {
      "src": "if: if [1220,1222]",
      "dest": "if: if [1220,1222]"
    },
    {
      "src": "call_expression [1843,1870]",
      "dest": "call_expression [1843,1870]"
    },
    {
      "src": "visibility [979,987]",
      "dest": "visibility [979,987]"
    },
    {
      "src": "identifier: call [1856,1860]",
      "dest": "identifier: call [1856,1860]"
    },
    {
      "src": "identifier: tokenAddress [1843,1855]",
      "dest": "identifier: tokenAddress [1843,1855]"
    },
    {
      "src": "): ) [1268,1269]",
      "dest": "): ) [1268,1269]"
    },
    {
      "src": "{: { [750,751]",
      "dest": "{: { [750,751]"
    },
    {
      "src": "yul_identifier [1083,1090]",
      "dest": "yul_identifier [1083,1090]"
    },
    {
      "src": "return: return [1110,1116]",
      "dest": "return: return [1110,1116]"
    },
    {
      "src": "): ) [1839,1840]",
      "dest": "): ) [1839,1840]"
    },
    {
      "src": "comment: /*   Common Utility Libraries.   I. Addresses (extending address). */ [662,731]",
      "dest": "comment: /*   Common Utility Libraries.   I. Addresses (extending address). */ [662,731]"
    },
    {
      "src": "call_argument [1351,1358]",
      "dest": "call_argument [1351,1358]"
    },
    {
      "src": "return_type_definition [993,1007]",
      "dest": "return_type_definition [993,1007]"
    },
    {
      "src": "(: ( [1860,1861]",
      "dest": "(: ( [1860,1861]"
    },
    {
      "src": "identifier: size [1117,1121]",
      "dest": "identifier: size [1117,1121]"
    },
    {
      "src": "identifier: isContract [1701,1711]",
      "dest": "identifier: isContract [1701,1711]"
    },
    {
      "src": "if_statement [1927,2044]",
      "dest": "if_statement [1927,2044]"
    },
    {
      "src": "function_definition [1138,1389]",
      "dest": "function_definition [1138,1389]"
    },
    {
      "src": "source_file [0,2053]",
      "dest": "source_file [0,2053]"
    },
    {
      "src": ",: , [2006,2007]",
      "dest": ",: , [2006,2007]"
    },
    {
      "src": "primitive_type [1185,1192]",
      "dest": "primitive_type [1185,1192]"
    },
    {
      "src": "variable_declaration_statement [1253,1306]",
      "dest": "variable_declaration_statement [1253,1306]"
    },
    {
      "src": "primitive_type [1166,1173]",
      "dest": "primitive_type [1166,1173]"
    },
    {
      "src": "bool: bool [1002,1006]",
      "dest": "bool: bool [1002,1006]"
    },
    {
      "src": "^:  ^ [651,653]",
      "dest": "^:  ^ [651,653]"
    },
    {
      "src": "}: } [1300,1301]",
      "dest": "}: } [1300,1301]"
    },
    {
      "src": "comment: // NOLINT: low-level-calls. [1307,1334]",
      "dest": "comment: // NOLINT: low-level-calls. [1307,1334]"
    },
    {
      "src": "identifier: require [1880,1887]",
      "dest": "identifier: require [1880,1887]"
    },
    {
      "src": "{: { [1954,1955]",
      "dest": "{: { [1954,1955]"
    },
    {
      "src": "string [2008,2032]",
      "dest": "string [2008,2032]"
    },
    {
      "src": "string_literal [1302,1304]",
      "dest": "string_literal [1302,1304]"
    },
    {
      "src": "(: ( [1082,1083]",
      "dest": "(: ( [1082,1083]"
    },
    {
      "src": "string_literal [1360,1381]",
      "dest": "string_literal [1360,1381]"
    },
    {
      "src": "}: } [2049,2050]",
      "dest": "}: } [2049,2050]"
    },
    {
      "src": "(: ( [1223,1224]",
      "dest": "(: ( [1223,1224]"
    },
    {
      "src": "comment: /*       Safe wrapper around ERC20/ERC721 calls.       This is required because many deployed ERC20 contracts don't return a value.       See https://github.com/ethereum/solidity/issues/4116.     */ [1395,1593]",
      "dest": "comment: /*       Safe wrapper around ERC20/ERC721 calls.       This is required because many deployed ERC20 contracts don't return a value.       See https://github.com/ethereum/solidity/issues/4116.     */ [1395,1593]"
    },
    {
      "src": "): ) [1090,1091]",
      "dest": "): ) [1090,1091]"
    },
    {
      "src": "identifier: tokenAddress [1712,1724]",
      "dest": "identifier: tokenAddress [1712,1724]"
    },
    {
      "src": "{: { [1008,1009]",
      "dest": "{: { [1008,1009]"
    },
    {
      "src": ".: . [1855,1856]",
      "dest": ".: . [1855,1856]"
    },
    {
      "src": ".: . [1281,1282]",
      "dest": ".: . [1281,1282]"
    },
    {
      "src": "number_literal: 0 [1234,1235]",
      "dest": "number_literal: 0 [1234,1235]"
    },
    {
      "src": "): ) [1304,1305]",
      "dest": "): ) [1304,1305]"
    },
    {
      "src": "\": \" [2031,2032]",
      "dest": "\": \" [2031,2032]"
    },
    {
      "src": "identifier: require [1693,1700]",
      "dest": "identifier: require [1693,1700]"
    },
    {
      "src": "bool: bool [1802,1806]",
      "dest": "bool: bool [1802,1806]"
    },
    {
      "src": "parameter [1629,1649]",
      "dest": "parameter [1629,1649]"
    },
    {
      "src": "identifier: abi [1976,1979]",
      "dest": "identifier: abi [1976,1979]"
    },
    {
      "src": "(: ( [1253,1254]",
      "dest": "(: ( [1253,1254]"
    },
    {
      "src": "parameter [1166,1183]",
      "dest": "parameter [1166,1183]"
    },
    {
      "src": "type_name [1002,1006]",
      "dest": "type_name [1002,1006]"
    },
    {
      "src": "comment: // NOLINTNEXTLINE: low-level-calls. [1757,1792]",
      "dest": "comment: // NOLINTNEXTLINE: low-level-calls. [1757,1792]"
    },
    {
      "src": "primitive_type [1002,1006]",
      "dest": "primitive_type [1002,1006]"
    },
    {
      "src": "member_expression [1272,1286]",
      "dest": "member_expression [1272,1286]"
    },
    {
      "src": "yul_function_call [1071,1091]",
      "dest": "yul_function_call [1071,1091]"
    },
    {
      "src": ",: , [1358,1359]",
      "dest": ",: , [1358,1359]"
    },
    {
      "src": "member_expression [1976,1986]",
      "dest": "member_expression [1976,1986]"
    },
    {
      "src": "extcodesize: extcodesize [1071,1082]",
      "dest": "extcodesize: extcodesize [1071,1082]"
    },
    {
      "src": "call_argument [1712,1724]",
      "dest": "call_argument [1712,1724]"
    },
    {
      "src": "identifier: tokenAddress [1637,1649]",
      "dest": "identifier: tokenAddress [1637,1649]"
    },
    {
      "src": "}: } [2051,2052]",
      "dest": "}: } [2051,2052]"
    },
    {
      "src": "identifier: value [1287,1292]",
      "dest": "identifier: value [1287,1292]"
    },
    {
      "src": "identifier: Addresses [740,749]",
      "dest": "identifier: Addresses [740,749]"
    },
    {
      "src": "): ) [977,978]",
      "dest": "): ) [977,978]"
    },
    {
      "src": ",: , [1183,1184]",
      "dest": ",: , [1183,1184]"
    },
    {
      "src": "): ) [1952,1953]",
      "dest": "): ) [1952,1953]"
    },
    {
      "src": "block_statement [1954,2044]",
      "dest": "block_statement [1954,2044]"
    },
    {
      "src": "identifier: isContract [951,961]",
      "dest": "identifier: isContract [951,961]"
    },
    {
      "src": "identifier: amount [1294,1300]",
      "dest": "identifier: amount [1294,1300]"
    },
    {
      "src": "internal: internal [979,987]",
      "dest": "internal: internal [979,987]"
    },
    {
      "src": "return: return [1237,1243]",
      "dest": "return: return [1237,1243]"
    },
    {
      "src": "yul_identifier [1063,1067]",
      "dest": "yul_identifier [1063,1067]"
    },
    {
      "src": "string [1727,1746]",
      "dest": "string [1727,1746]"
    },
    {
      "src": "(: ( [1700,1701]",
      "dest": "(: ( [1700,1701]"
    },
    {
      "src": "call_expression [1976,2006]",
      "dest": "call_expression [1976,2006]"
    },
    {
      "src": "{: { [1286,1287]",
      "dest": "{: { [1286,1287]"
    },
    {
      "src": "type_cast_expression [1897,1915]",
      "dest": "type_cast_expression [1897,1915]"
    },
    {
      "src": "state_mutability [988,992]",
      "dest": "state_mutability [988,992]"
    },
    {
      "src": "return_statement [1237,1244]",
      "dest": "return_statement [1237,1244]"
    },
    {
      "src": ".: . [1941,1942]",
      "dest": ".: . [1941,1942]"
    },
    {
      "src": "identifier: success [1259,1266]",
      "dest": "identifier: success [1259,1266]"
    },
    {
      "src": "identifier: recipient [1272,1281]",
      "dest": "identifier: recipient [1272,1281]"
    },
    {
      "src": "identifier: require [1343,1350]",
      "dest": "identifier: require [1343,1350]"
    },
    {
      "src": "}: } [1388,1389]",
      "dest": "}: } [1388,1389]"
    },
    {
      "src": "primitive_type [1802,1806]",
      "dest": "primitive_type [1802,1806]"
    },
    {
      "src": "call_expression [1701,1725]",
      "dest": "call_expression [1701,1725]"
    },
    {
      "src": "library_declaration [732,2052]",
      "dest": "library_declaration [732,2052]"
    },
    {
      "src": "struct_field_assignment [1287,1300]",
      "dest": "struct_field_assignment [1287,1300]"
    },
    {
      "src": "identifier: callData [1861,1869]",
      "dest": "identifier: callData [1861,1869]"
    },
    {
      "src": "\": \" [1360,1361]",
      "dest": "\": \" [1360,1361]"
    },
    {
      "src": "(: ( [1711,1712]",
      "dest": "(: ( [1711,1712]"
    },
    {
      "src": "bool: bool [2000,2004]",
      "dest": "bool: bool [2000,2004]"
    },
    {
      "src": "yul_path [1083,1090]",
      "dest": "yul_path [1083,1090]"
    },
    {
      "src": "): ) [1006,1007]",
      "dest": "): ) [1006,1007]"
    },
    {
      "src": "): ) [2004,2005]",
      "dest": "): ) [2004,2005]"
    },
    {
      "src": "function: function [1138,1146]",
      "dest": "function: function [1138,1146]"
    },
    {
      "src": "(: ( [1975,1976]",
      "dest": "(: ( [1975,1976]"
    },
    {
      "src": "identifier: returndata [1829,1839]",
      "dest": "identifier: returndata [1829,1839]"
    },
    {
      "src": "variable_declaration_statement [1018,1031]",
      "dest": "variable_declaration_statement [1018,1031]"
    },
    {
      "src": "(: ( [1165,1166]",
      "dest": "(: ( [1165,1166]"
    },
    {
      "src": "\": \" [1303,1304]",
      "dest": "\": \" [1303,1304]"
    },
    {
      "src": "address: address [1166,1173]",
      "dest": "address: address [1166,1173]"
    },
    {
      "src": "(: ( [1801,1802]",
      "dest": "(: ( [1801,1802]"
    },
    {
      "src": "number_literal: 0 [1124,1125]",
      "dest": "number_literal: 0 [1124,1125]"
    },
    {
      "src": "memory: memory [1657,1663]",
      "dest": "memory: memory [1657,1663]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]",
      "dest": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]"
    },
    {
      "src": "(: ( [961,962]",
      "dest": "(: ( [961,962]"
    },
    {
      "src": "(: ( [1903,1904]",
      "dest": "(: ( [1903,1904]"
    },
    {
      "src": "variable_declaration_tuple [1801,1840]",
      "dest": "variable_declaration_tuple [1801,1840]"
    },
    {
      "src": "type_name [1254,1258]",
      "dest": "type_name [1254,1258]"
    },
    {
      "src": "identifier: success [1807,1814]",
      "dest": "identifier: success [1807,1814]"
    },
    {
      "src": "call_argument [1727,1746]",
      "dest": "call_argument [1727,1746]"
    },
    {
      "src": "memory: memory [1822,1828]",
      "dest": "memory: memory [1822,1828]"
    },
    {
      "src": "member_expression [1931,1948]",
      "dest": "member_expression [1931,1948]"
    },
    {
      "src": "assembly_statement [1040,1101]",
      "dest": "assembly_statement [1040,1101]"
    },
    {
      "src": "yul_assignment [1063,1091]",
      "dest": "yul_assignment [1063,1091]"
    },
    {
      "src": "(: ( [1628,1629]",
      "dest": "(: ( [1628,1629]"
    },
    {
      "src": "binary_expression [1224,1235]",
      "dest": "binary_expression [1224,1235]"
    },
    {
      "src": "identifier: returndata [1904,1914]",
      "dest": "identifier: returndata [1904,1914]"
    },
    {
      "src": "type_name [1185,1192]",
      "dest": "type_name [1185,1192]"
    },
    {
      "src": "contract_body [750,2052]",
      "dest": "contract_body [750,2052]"
    },
    {
      "src": "primitive_type [1018,1025]",
      "dest": "primitive_type [1018,1025]"
    },
    {
      "src": "string_literal [2008,2032]",
      "dest": "string_literal [2008,2032]"
    },
    {
      "src": "identifier: require [1968,1975]",
      "dest": "identifier: require [1968,1975]"
    },
    {
      "src": "identifier: amount [1193,1199]",
      "dest": "identifier: amount [1193,1199]"
    },
    {
      "src": "{: { [1210,1211]",
      "dest": "{: { [1210,1211]"
    },
    {
      "src": "solidity: solidity [643,651]",
      "dest": "solidity: solidity [643,651]"
    },
    {
      "src": "call_argument [1302,1304]",
      "dest": "call_argument [1302,1304]"
    },
    {
      "src": "primitive_type [1816,1821]",
      "dest": "primitive_type [1816,1821]"
    },
    {
      "src": "identifier: size [1026,1030]",
      "dest": "identifier: size [1026,1030]"
    },
    {
      "src": "struct_expression [1272,1301]",
      "dest": "struct_expression [1272,1301]"
    },
    {
      "src": "identifier: success [1351,1358]",
      "dest": "identifier: success [1351,1358]"
    },
    {
      "src": "\": \" [1745,1746]",
      "dest": "\": \" [1745,1746]"
    },
    {
      "src": "type_name [1166,1173]",
      "dest": "type_name [1166,1173]"
    },
    {
      "src": "yul_path [1063,1067]",
      "dest": "yul_path [1063,1067]"
    },
    {
      "src": "type_name [1018,1025]",
      "dest": "type_name [1018,1025]"
    },
    {
      "src": "call_argument [1888,1895]",
      "dest": "call_argument [1888,1895]"
    },
    {
      "src": ":: : [1292,1293]",
      "dest": ":: : [1292,1293]"
    },
    {
      "src": "}: } [2043,2044]",
      "dest": "}: } [2043,2044]"
    },
    {
      "src": "expression_statement [1968,2034]",
      "dest": "expression_statement [1968,2034]"
    },
    {
      "src": "): ) [1915,1916]",
      "dest": "): ) [1915,1916]"
    },
    {
      "src": "(: ( [1350,1351]",
      "dest": "(: ( [1350,1351]"
    },
    {
      "src": "number_literal: 0 [1951,1952]",
      "dest": "number_literal: 0 [1951,1952]"
    },
    {
      "src": "{: { [1683,1684]",
      "dest": "{: { [1683,1684]"
    },
    {
      "src": "function_body [1008,1132]",
      "dest": "function_body [1008,1132]"
    },
    {
      "src": "primitive_type [962,969]",
      "dest": "primitive_type [962,969]"
    },
    {
      "src": "internal: internal [1201,1209]",
      "dest": "internal: internal [1201,1209]"
    },
    {
      "src": ">: > [1122,1123]",
      "dest": ">: > [1122,1123]"
    },
    {
      "src": "type_name [1629,1636]",
      "dest": "type_name [1629,1636]"
    },
    {
      "src": "string [1302,1304]",
      "dest": "string [1302,1304]"
    },
    {
      "src": "\": \" [1302,1303]",
      "dest": "\": \" [1302,1303]"
    },
    {
      "src": "call_argument [1976,2006]",
      "dest": "call_argument [1976,2006]"
    },
    {
      "src": "identifier: performEthTransfer [1147,1165]",
      "dest": "identifier: performEthTransfer [1147,1165]"
    },
    {
      "src": ",: , [1266,1267]",
      "dest": ",: , [1266,1267]"
    },
    {
      "src": "visibility [1674,1682]",
      "dest": "visibility [1674,1682]"
    },
    {
      "src": "variable_declaration [1802,1814]",
      "dest": "variable_declaration [1802,1814]"
    },
    {
      "src": "(: ( [1887,1888]",
      "dest": "(: ( [1887,1888]"
    },
    {
      "src": "\": \" [1380,1381]",
      "dest": "\": \" [1380,1381]"
    },
    {
      "src": "bool: bool [1254,1258]",
      "dest": "bool: bool [1254,1258]"
    },
    {
      "src": "call_expression [1343,1382]",
      "dest": "call_expression [1343,1382]"
    },
    {
      "src": "variable_declaration_statement [1801,1871]",
      "dest": "variable_declaration_statement [1801,1871]"
    },
    {
      "src": "solidity_pragma_token [643,659]",
      "dest": "solidity_pragma_token [643,659]"
    },
    {
      "src": "identifier: size [1063,1067]",
      "dest": "identifier: size [1063,1067]"
    },
    {
      "src": "identifier: decode [1980,1986]",
      "dest": "identifier: decode [1980,1986]"
    },
    {
      "src": "(: ( [1999,2000]",
      "dest": "(: ( [1999,2000]"
    },
    {
      "src": "call_argument [1701,1725]",
      "dest": "call_argument [1701,1725]"
    },
    {
      "src": "primitive_type [1254,1258]",
      "dest": "primitive_type [1254,1258]"
    },
    {
      "src": ".: . [1979,1980]",
      "dest": ".: . [1979,1980]"
    },
    {
      "src": "type_name [1816,1821]",
      "dest": "type_name [1816,1821]"
    },
    {
      "src": ",: , [1649,1650]",
      "dest": ",: , [1649,1650]"
    },
    {
      "src": "view: view [988,992]",
      "dest": "view: view [988,992]"
    },
    {
      "src": "): ) [1381,1382]",
      "dest": "): ) [1381,1382]"
    },
    {
      "src": "variable_declaration [1254,1266]",
      "dest": "variable_declaration [1254,1266]"
    },
    {
      "src": "identifier: callData [1664,1672]",
      "dest": "identifier: callData [1664,1672]"
    },
    {
      "src": "): ) [1199,1200]",
      "dest": "): ) [1199,1200]"
    },
    {
      "src": "type_name [962,969]",
      "dest": "type_name [962,969]"
    },
    {
      "src": "string [1360,1381]",
      "dest": "string [1360,1381]"
    },
    {
      "src": "function_definition [1598,2050]",
      "dest": "function_definition [1598,2050]"
    },
    {
      "src": "call_argument [1904,1914]",
      "dest": "call_argument [1904,1914]"
    },
    {
      "src": "call_expression [1880,1916]",
      "dest": "call_expression [1880,1916]"
    },
    {
      "src": "function_body [1683,2050]",
      "dest": "function_body [1683,2050]"
    },
    {
      "src": "uint256: uint256 [1185,1192]",
      "dest": "uint256: uint256 [1185,1192]"
    },
    {
      "src": ",: , [1814,1815]",
      "dest": ",: , [1814,1815]"
    },
    {
      "src": "comment: /*       Note: isContract function has some known limitation.       See https://github.com/OpenZeppelin/       openzeppelin-contracts/blob/master/contracts/utils/Address.sol.     */ [756,937]",
      "dest": "comment: /*       Note: isContract function has some known limitation.       See https://github.com/OpenZeppelin/       openzeppelin-contracts/blob/master/contracts/utils/Address.sol.     */ [756,937]"
    },
    {
      "src": "identifier: amount [1224,1230]",
      "dest": "identifier: amount [1224,1230]"
    },
    {
      "src": "primitive_type [1897,1903]",
      "dest": "primitive_type [1897,1903]"
    },
    {
      "src": "identifier: account [970,977]",
      "dest": "identifier: account [970,977]"
    },
    {
      "src": "): ) [1869,1870]",
      "dest": "): ) [1869,1870]"
    },
    {
      "src": "): ) [1914,1915]",
      "dest": "): ) [1914,1915]"
    },
    {
      "src": "call_expression [1968,2033]",
      "dest": "call_expression [1968,2033]"
    },
    {
      "src": "identifier: call [1282,1286]",
      "dest": "identifier: call [1282,1286]"
    },
    {
      "src": "call_argument [1987,1997]",
      "dest": "call_argument [1987,1997]"
    },
    {
      "src": "=: = [1841,1842]",
      "dest": "=: = [1841,1842]"
    },
    {
      "src": "variable_declaration [1018,1030]",
      "dest": "variable_declaration [1018,1030]"
    },
    {
      "src": "=: = [1270,1271]",
      "dest": "=: = [1270,1271]"
    },
    {
      "src": "string_literal [1727,1746]",
      "dest": "string_literal [1727,1746]"
    },
    {
      "src": "identifier: safeTokenContractCall [1607,1628]",
      "dest": "identifier: safeTokenContractCall [1607,1628]"
    },
    {
      "src": "parameter [1002,1006]",
      "dest": "parameter [1002,1006]"
    },
    {
      "src": ",: , [1895,1896]",
      "dest": ",: , [1895,1896]"
    },
    {
      "src": "expression_statement [1343,1383]",
      "dest": "expression_statement [1343,1383]"
    },
    {
      "src": "variable_declaration_tuple [1253,1269]",
      "dest": "variable_declaration_tuple [1253,1269]"
    },
    {
      "src": "\": \" [2008,2009]",
      "dest": "\": \" [2008,2009]"
    },
    {
      "src": "call_expression [1693,1747]",
      "dest": "call_expression [1693,1747]"
    },
    {
      "src": "internal: internal [1674,1682]",
      "dest": "internal: internal [1674,1682]"
    },
    {
      "src": "(: ( [1301,1302]",
      "dest": "(: ( [1301,1302]"
    },
    {
      "src": "): ) [2032,2033]",
      "dest": "): ) [2032,2033]"
    },
    {
      "src": ">: > [1949,1950]",
      "dest": ">: > [1949,1950]"
    },
    {
      "src": "}: } [1100,1101]",
      "dest": "}: } [1100,1101]"
    },
    {
      "src": "): ) [1672,1673]",
      "dest": "): ) [1672,1673]"
    },
    {
      "src": "yul_evm_builtin [1071,1082]",
      "dest": "yul_evm_builtin [1071,1082]"
    },
    {
      "src": "\": \" [1727,1728]",
      "dest": "\": \" [1727,1728]"
    },
    {
      "src": "function_body [1210,1389]",
      "dest": "function_body [1210,1389]"
    },
    {
      "src": "expression_statement [1693,1748]",
      "dest": "expression_statement [1693,1748]"
    },
    {
      "src": "call_argument [1897,1915]",
      "dest": "call_argument [1897,1915]"
    },
    {
      "src": "identifier: returndata [1931,1941]",
      "dest": "identifier: returndata [1931,1941]"
    },
    {
      "src": "call_argument [1360,1381]",
      "dest": "call_argument [1360,1381]"
    },
    {
      "src": "identifier: recipient [1174,1183]",
      "dest": "identifier: recipient [1174,1183]"
    },
    {
      "src": "identifier: account [1083,1090]",
      "dest": "identifier: account [1083,1090]"
    },
    {
      "src": "parameter [1185,1199]",
      "dest": "parameter [1185,1199]"
    },
    {
      "src": ",: , [1997,1998]",
      "dest": ",: , [1997,1998]"
    },
    {
      "src": "solidity_version: 0.6.12 [653,659]",
      "dest": "solidity_version: 0.6.12 [653,659]"
    },
    {
      "src": "call_expression [1272,1305]",
      "dest": "call_expression [1272,1305]"
    },
    {
      "src": "variable_declaration [1816,1839]",
      "dest": "variable_declaration [1816,1839]"
    },
    {
      "src": "pragma_directive [636,660]",
      "dest": "pragma_directive [636,660]"
    },
    {
      "src": "address: address [962,969]",
      "dest": "address: address [962,969]"
    },
    {
      "src": "type_name [1651,1656]",
      "dest": "type_name [1651,1656]"
    }
  ],
  "actions": []
}