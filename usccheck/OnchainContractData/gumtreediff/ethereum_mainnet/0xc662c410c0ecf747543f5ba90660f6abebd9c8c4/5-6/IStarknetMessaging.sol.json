{
  "matches": [
    {
      "src": "state_mutability [896,900]",
      "dest": "state_mutability [896,900]"
    },
    {
      "src": "pure: pure [896,900]",
      "dest": "pure: pure [896,900]"
    },
    {
      "src": "identifier: sendMessageToL2 [1128,1143]",
      "dest": "identifier: sendMessageToL2 [1128,1143]"
    },
    {
      "src": "[: [ [1213,1214]",
      "dest": "[: [ [1213,1214]"
    },
    {
      "src": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]",
      "dest": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]"
    },
    {
      "src": "pragma: pragma [636,642]",
      "dest": "pragma: pragma [636,642]"
    },
    {
      "src": "primitive_type [2022,2029]",
      "dest": "primitive_type [2022,2029]"
    },
    {
      "src": "type_name [1180,1187]",
      "dest": "type_name [1180,1187]"
    },
    {
      "src": "type_name [2543,2550]",
      "dest": "type_name [2543,2550]"
    },
    {
      "src": "type_name [1455,1464]",
      "dest": "type_name [1455,1464]"
    },
    {
      "src": "identifier: IStarknetMessagingEvents [734,758]",
      "dest": "identifier: IStarknetMessagingEvents [734,758]"
    },
    {
      "src": "identifier: nonce [1992,1997]",
      "dest": "identifier: nonce [1992,1997]"
    },
    {
      "src": "identifier: nonce [2513,2518]",
      "dest": "identifier: nonce [2513,2518]"
    },
    {
      "src": "identifier: payload [2488,2495]",
      "dest": "identifier: payload [2488,2495]"
    },
    {
      "src": "calldata: calldata [1216,1224]",
      "dest": "calldata: calldata [1216,1224]"
    },
    {
      "src": "identifier: IStarknetMessaging [712,730]",
      "dest": "identifier: IStarknetMessaging [712,730]"
    },
    {
      "src": "primitive_type [1153,1160]",
      "dest": "primitive_type [1153,1160]"
    },
    {
      "src": "solidity_version_comparison_operator [651,653]",
      "dest": "solidity_version_comparison_operator [651,653]"
    },
    {
      "src": "parameter [1434,1453]",
      "dest": "parameter [1434,1453]"
    },
    {
      "src": "comment: /**       Cancels an L1 to L2 message, this function should be called at least       messageCancellationDelay() seconds after the call to startL1ToL2MessageCancellation().       A message may only be cancelled by its sender.       If the message is missing, the call will revert.        Note that the message fee is not refunded.     */ [2037,2373]",
      "dest": "comment: /**       Cancels an L1 to L2 message, this function should be called at least       messageCancellationDelay() seconds after the call to startL1ToL2MessageCancellation().       A message may only be cancelled by its sender.       If the message is missing, the call will revert.        Note that the message fee is not refunded.     */ [2037,2373]"
    },
    {
      "src": "returns: returns [2013,2020]",
      "dest": "returns: returns [2013,2020]"
    },
    {
      "src": "string [669,699]",
      "dest": "string [669,699]"
    },
    {
      "src": "function_definition [1404,1526]",
      "dest": "function_definition [1404,1526]"
    },
    {
      "src": "is: is [731,733]",
      "dest": "is: is [731,733]"
    },
    {
      "src": "(: ( [2021,2022]",
      "dest": "(: ( [2021,2022]"
    },
    {
      "src": "external: external [1239,1247]",
      "dest": "external: external [1239,1247]"
    },
    {
      "src": "type_name [2469,2478]",
      "dest": "type_name [2469,2478]"
    },
    {
      "src": "type_name [1153,1160]",
      "dest": "type_name [1153,1160]"
    },
    {
      "src": ",: , [1453,1454]",
      "dest": ",: , [1453,1454]"
    },
    {
      "src": "): ) [2029,2030]",
      "dest": "): ) [2029,2030]"
    },
    {
      "src": "type_name [2469,2476]",
      "dest": "type_name [2469,2476]"
    },
    {
      "src": "type_name [1434,1441]",
      "dest": "type_name [1434,1441]"
    },
    {
      "src": "identifier: getMaxL1MsgFee [870,884]",
      "dest": "identifier: getMaxL1MsgFee [870,884]"
    },
    {
      "src": "returns: returns [1508,1515]",
      "dest": "returns: returns [1508,1515]"
    },
    {
      "src": "interface_declaration [702,2554]",
      "dest": "interface_declaration [702,2554]"
    },
    {
      "src": "type_name [1206,1215]",
      "dest": "type_name [1206,1215]"
    },
    {
      "src": "]: ] [1214,1215]",
      "dest": "]: ] [1214,1215]"
    },
    {
      "src": "): ) [2550,2551]",
      "dest": "): ) [2550,2551]"
    },
    {
      "src": "import_directive [662,700]",
      "dest": "import_directive [662,700]"
    },
    {
      "src": "type_name [1948,1955]",
      "dest": "type_name [1948,1955]"
    },
    {
      "src": "external: external [887,895]",
      "dest": "external: external [887,895]"
    },
    {
      "src": "identifier: payload [1225,1232]",
      "dest": "identifier: payload [1225,1232]"
    },
    {
      "src": "uint256: uint256 [2443,2450]",
      "dest": "uint256: uint256 [2443,2450]"
    },
    {
      "src": "state_mutability [1248,1255]",
      "dest": "state_mutability [1248,1255]"
    },
    {
      "src": "source_file [0,2555]",
      "dest": "source_file [0,2555]"
    },
    {
      "src": "primitive_type [1274,1281]",
      "dest": "primitive_type [1274,1281]"
    },
    {
      "src": "uint256: uint256 [1455,1462]",
      "dest": "uint256: uint256 [1455,1462]"
    },
    {
      "src": "type_name [1265,1272]",
      "dest": "type_name [1265,1272]"
    },
    {
      "src": "parameter [910,917]",
      "dest": "parameter [910,917]"
    },
    {
      "src": "^:  ^ [651,653]",
      "dest": "^:  ^ [651,653]"
    },
    {
      "src": "type_name [1895,1902]",
      "dest": "type_name [1895,1902]"
    },
    {
      "src": "uint256: uint256 [1922,1929]",
      "dest": "uint256: uint256 [1922,1929]"
    },
    {
      "src": "identifier: toAddress [1903,1912]",
      "dest": "identifier: toAddress [1903,1912]"
    },
    {
      "src": ",: , [1196,1197]",
      "dest": ",: , [1196,1197]"
    },
    {
      "src": "]: ] [1956,1957]",
      "dest": "]: ] [1956,1957]"
    },
    {
      "src": "primitive_type [1434,1441]",
      "dest": "primitive_type [1434,1441]"
    },
    {
      "src": "primitive_type [1984,1991]",
      "dest": "primitive_type [1984,1991]"
    },
    {
      "src": "primitive_type [1206,1213]",
      "dest": "primitive_type [1206,1213]"
    },
    {
      "src": "parameter [2469,2495]",
      "dest": "parameter [2469,2495]"
    },
    {
      "src": "uint256: uint256 [910,917]",
      "dest": "uint256: uint256 [910,917]"
    },
    {
      "src": "): ) [1524,1525]",
      "dest": "): ) [1524,1525]"
    },
    {
      "src": "parameter [1455,1481]",
      "dest": "parameter [1455,1481]"
    },
    {
      "src": "primitive_type [1922,1929]",
      "dest": "primitive_type [1922,1929]"
    },
    {
      "src": ",: , [2433,2434]",
      "dest": ",: , [2433,2434]"
    },
    {
      "src": "visibility [2525,2533]",
      "dest": "visibility [2525,2533]"
    },
    {
      "src": "external: external [2004,2012]",
      "dest": "external: external [2004,2012]"
    },
    {
      "src": "]: ] [1463,1464]",
      "dest": "]: ] [1463,1464]"
    },
    {
      "src": "(: ( [1264,1265]",
      "dest": "(: ( [1264,1265]"
    },
    {
      "src": "returns: returns [901,908]",
      "dest": "returns: returns [901,908]"
    },
    {
      "src": ",: , [2495,2496]",
      "dest": ",: , [2495,2496]"
    },
    {
      "src": "(: ( [909,910]",
      "dest": "(: ( [909,910]"
    },
    {
      "src": "primitive_type [1517,1524]",
      "dest": "primitive_type [1517,1524]"
    },
    {
      "src": "primitive_type [1180,1187]",
      "dest": "primitive_type [1180,1187]"
    },
    {
      "src": "uint256: uint256 [1948,1955]",
      "dest": "uint256: uint256 [1948,1955]"
    },
    {
      "src": "identifier: selector [1188,1196]",
      "dest": "identifier: selector [1188,1196]"
    },
    {
      "src": ",: , [2459,2460]",
      "dest": ",: , [2459,2460]"
    },
    {
      "src": "parameter [2022,2029]",
      "dest": "parameter [2022,2029]"
    },
    {
      "src": "identifier: startL1ToL2MessageCancellation [1855,1885]",
      "dest": "identifier: startL1ToL2MessageCancellation [1855,1885]"
    },
    {
      "src": "\": \" [669,670]",
      "dest": "\": \" [669,670]"
    },
    {
      "src": "function: function [861,869]",
      "dest": "function: function [861,869]"
    },
    {
      "src": ",: , [1272,1273]",
      "dest": ",: , [1272,1273]"
    },
    {
      "src": "inheritance_specifier [734,758]",
      "dest": "inheritance_specifier [734,758]"
    },
    {
      "src": "parameter [1895,1912]",
      "dest": "parameter [1895,1912]"
    },
    {
      "src": "(: ( [884,885]",
      "dest": "(: ( [884,885]"
    },
    {
      "src": "primitive_type [1455,1462]",
      "dest": "primitive_type [1455,1462]"
    },
    {
      "src": ",: , [1170,1171]",
      "dest": ",: , [1170,1171]"
    },
    {
      "src": "[: [ [2476,2477]",
      "dest": "[: [ [2476,2477]"
    },
    {
      "src": "parameter [2443,2459]",
      "dest": "parameter [2443,2459]"
    },
    {
      "src": "function_definition [1846,2031]",
      "dest": "function_definition [1846,2031]"
    },
    {
      "src": "): ) [885,886]",
      "dest": "): ) [885,886]"
    },
    {
      "src": "type_name [1455,1462]",
      "dest": "type_name [1455,1462]"
    },
    {
      "src": "external: external [1491,1499]",
      "dest": "external: external [1491,1499]"
    },
    {
      "src": "bytes32: bytes32 [1517,1524]",
      "dest": "bytes32: bytes32 [1517,1524]"
    },
    {
      "src": "parameter [1948,1974]",
      "dest": "parameter [1948,1974]"
    },
    {
      "src": "type_name [1984,1991]",
      "dest": "type_name [1984,1991]"
    },
    {
      "src": "): ) [2523,2524]",
      "dest": "): ) [2523,2524]"
    },
    {
      "src": "primitive_type [2443,2450]",
      "dest": "primitive_type [2443,2450]"
    },
    {
      "src": "import: import [662,668]",
      "dest": "import: import [662,668]"
    },
    {
      "src": "function: function [1846,1854]",
      "dest": "function: function [1846,1854]"
    },
    {
      "src": "identifier: payload [1967,1974]",
      "dest": "identifier: payload [1967,1974]"
    },
    {
      "src": "identifier: selector [2451,2459]",
      "dest": "identifier: selector [2451,2459]"
    },
    {
      "src": "parameter [1206,1232]",
      "dest": "parameter [1206,1232]"
    },
    {
      "src": "type_name [910,917]",
      "dest": "type_name [910,917]"
    },
    {
      "src": "payable: payable [1248,1255]",
      "dest": "payable: payable [1248,1255]"
    },
    {
      "src": "bytes32: bytes32 [2543,2550]",
      "dest": "bytes32: bytes32 [2543,2550]"
    },
    {
      "src": "): ) [917,918]",
      "dest": "): ) [917,918]"
    },
    {
      "src": "returns: returns [1256,1263]",
      "dest": "returns: returns [1256,1263]"
    },
    {
      "src": "type_name [1922,1929]",
      "dest": "type_name [1922,1929]"
    },
    {
      "src": "primitive_type [1265,1272]",
      "dest": "primitive_type [1265,1272]"
    },
    {
      "src": "primitive_type [2505,2512]",
      "dest": "primitive_type [2505,2512]"
    },
    {
      "src": "visibility [1239,1247]",
      "dest": "visibility [1239,1247]"
    },
    {
      "src": "function_definition [2378,2552]",
      "dest": "function_definition [2378,2552]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]",
      "dest": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]"
    },
    {
      "src": "user_defined_type [734,758]",
      "dest": "user_defined_type [734,758]"
    },
    {
      "src": "type_name [2505,2512]",
      "dest": "type_name [2505,2512]"
    },
    {
      "src": "identifier: payload [1474,1481]",
      "dest": "identifier: payload [1474,1481]"
    },
    {
      "src": "external: external [2525,2533]",
      "dest": "external: external [2525,2533]"
    },
    {
      "src": "primitive_type [2469,2476]",
      "dest": "primitive_type [2469,2476]"
    },
    {
      "src": "primitive_type [2543,2550]",
      "dest": "primitive_type [2543,2550]"
    },
    {
      "src": "parameter [1153,1170]",
      "dest": "parameter [1153,1170]"
    },
    {
      "src": "uint256: uint256 [1153,1160]",
      "dest": "uint256: uint256 [1153,1160]"
    },
    {
      "src": "visibility [2004,2012]",
      "dest": "visibility [2004,2012]"
    },
    {
      "src": "uint256: uint256 [1434,1441]",
      "dest": "uint256: uint256 [1434,1441]"
    },
    {
      "src": "type_name [1274,1281]",
      "dest": "type_name [1274,1281]"
    },
    {
      "src": "\": \" [698,699]",
      "dest": "\": \" [698,699]"
    },
    {
      "src": "function: function [1119,1127]",
      "dest": "function: function [1119,1127]"
    },
    {
      "src": "): ) [1281,1282]",
      "dest": "): ) [1281,1282]"
    },
    {
      "src": "(: ( [1433,1434]",
      "dest": "(: ( [1433,1434]"
    },
    {
      "src": "solidity: solidity [643,651]",
      "dest": "solidity: solidity [643,651]"
    },
    {
      "src": "uint256: uint256 [1895,1902]",
      "dest": "uint256: uint256 [1895,1902]"
    },
    {
      "src": "parameter [2543,2550]",
      "dest": "parameter [2543,2550]"
    },
    {
      "src": "(: ( [1143,1144]",
      "dest": "(: ( [1143,1144]"
    },
    {
      "src": "type_name [1517,1524]",
      "dest": "type_name [1517,1524]"
    },
    {
      "src": "primitive_type [1948,1955]",
      "dest": "primitive_type [1948,1955]"
    },
    {
      "src": "calldata: calldata [2479,2487]",
      "dest": "calldata: calldata [2479,2487]"
    },
    {
      "src": "parameter [1265,1272]",
      "dest": "parameter [1265,1272]"
    },
    {
      "src": "identifier: toAddress [1161,1170]",
      "dest": "identifier: toAddress [1161,1170]"
    },
    {
      "src": "function_definition [1119,1283]",
      "dest": "function_definition [1119,1283]"
    },
    {
      "src": "(: ( [1885,1886]",
      "dest": "(: ( [1885,1886]"
    },
    {
      "src": "type_name [1948,1957]",
      "dest": "type_name [1948,1957]"
    },
    {
      "src": "primitive_type [2416,2423]",
      "dest": "primitive_type [2416,2423]"
    },
    {
      "src": "primitive_type [910,917]",
      "dest": "primitive_type [910,917]"
    },
    {
      "src": "{: { [759,760]",
      "dest": "{: { [759,760]"
    },
    {
      "src": "function: function [1404,1412]",
      "dest": "function: function [1404,1412]"
    },
    {
      "src": "): ) [1237,1238]",
      "dest": "): ) [1237,1238]"
    },
    {
      "src": "return_type_definition [2013,2030]",
      "dest": "return_type_definition [2013,2030]"
    },
    {
      "src": ",: , [1912,1913]",
      "dest": ",: , [1912,1913]"
    },
    {
      "src": "parameter [1922,1938]",
      "dest": "parameter [1922,1938]"
    },
    {
      "src": "return_type_definition [1256,1282]",
      "dest": "return_type_definition [1256,1282]"
    },
    {
      "src": "return_type_definition [1508,1525]",
      "dest": "return_type_definition [1508,1525]"
    },
    {
      "src": "(: ( [2406,2407]",
      "dest": "(: ( [2406,2407]"
    },
    {
      "src": "uint256: uint256 [2505,2512]",
      "dest": "uint256: uint256 [2505,2512]"
    },
    {
      "src": ",: , [1974,1975]",
      "dest": ",: , [1974,1975]"
    },
    {
      "src": "visibility [1491,1499]",
      "dest": "visibility [1491,1499]"
    },
    {
      "src": ",: , [1938,1939]",
      "dest": ",: , [1938,1939]"
    },
    {
      "src": "parameter [2505,2518]",
      "dest": "parameter [2505,2518]"
    },
    {
      "src": "solidity_pragma_token [643,659]",
      "dest": "solidity_pragma_token [643,659]"
    },
    {
      "src": "parameter [1180,1196]",
      "dest": "parameter [1180,1196]"
    },
    {
      "src": "type_name [2443,2450]",
      "dest": "type_name [2443,2450]"
    },
    {
      "src": "): ) [1481,1482]",
      "dest": "): ) [1481,1482]"
    },
    {
      "src": "(: ( [2542,2543]",
      "dest": "(: ( [2542,2543]"
    },
    {
      "src": "type_name [2022,2029]",
      "dest": "type_name [2022,2029]"
    },
    {
      "src": "visibility [887,895]",
      "dest": "visibility [887,895]"
    },
    {
      "src": "parameter [1984,1997]",
      "dest": "parameter [1984,1997]"
    },
    {
      "src": "calldata: calldata [1465,1473]",
      "dest": "calldata: calldata [1465,1473]"
    },
    {
      "src": "function: function [2378,2386]",
      "dest": "function: function [2378,2386]"
    },
    {
      "src": "comment: /**       Consumes a message that was sent from an L2 contract.        Returns the hash of the message.     */ [1289,1399]",
      "dest": "comment: /**       Consumes a message that was sent from an L2 contract.        Returns the hash of the message.     */ [1289,1399]"
    },
    {
      "src": "contract_body [759,2554]",
      "dest": "contract_body [759,2554]"
    },
    {
      "src": "calldata: calldata [1958,1966]",
      "dest": "calldata: calldata [1958,1966]"
    },
    {
      "src": "uint256: uint256 [1984,1991]",
      "dest": "uint256: uint256 [1984,1991]"
    },
    {
      "src": "type_name [2416,2423]",
      "dest": "type_name [2416,2423]"
    },
    {
      "src": "uint256: uint256 [1274,1281]",
      "dest": "uint256: uint256 [1274,1281]"
    },
    {
      "src": "return_type_definition [2534,2551]",
      "dest": "return_type_definition [2534,2551]"
    },
    {
      "src": "interface: interface [702,711]",
      "dest": "interface: interface [702,711]"
    },
    {
      "src": "identifier: fromAddress [1442,1453]",
      "dest": "identifier: fromAddress [1442,1453]"
    },
    {
      "src": "function_definition [861,919]",
      "dest": "function_definition [861,919]"
    },
    {
      "src": "comment: /**       Starts the cancellation of an L1 to L2 message.       A message can be canceled messageCancellationDelay() seconds after this function is called.        Note: This function may only be called for a message that is currently pending and the caller       must be the sender of the that message.     */ [1532,1841]",
      "dest": "comment: /**       Starts the cancellation of an L1 to L2 message.       A message can be canceled messageCancellationDelay() seconds after this function is called.        Note: This function may only be called for a message that is currently pending and the caller       must be the sender of the that message.     */ [1532,1841]"
    },
    {
      "src": "}: } [2553,2554]",
      "dest": "}: } [2553,2554]"
    },
    {
      "src": "comment: /**       Sends a message to an L2 contract.       This function is payable, the payed amount is the message fee.        Returns the hash of the message and the nonce of the message.     */ [925,1114]",
      "dest": "comment: /**       Sends a message to an L2 contract.       This function is payable, the payed amount is the message fee.        Returns the hash of the message and the nonce of the message.     */ [925,1114]"
    },
    {
      "src": "(: ( [1516,1517]",
      "dest": "(: ( [1516,1517]"
    },
    {
      "src": "uint256: uint256 [2469,2476]",
      "dest": "uint256: uint256 [2469,2476]"
    },
    {
      "src": "): ) [2002,2003]",
      "dest": "): ) [2002,2003]"
    },
    {
      "src": "return_type_definition [901,918]",
      "dest": "return_type_definition [901,918]"
    },
    {
      "src": "identifier: selector [1930,1938]",
      "dest": "identifier: selector [1930,1938]"
    },
    {
      "src": "[: [ [1462,1463]",
      "dest": "[: [ [1462,1463]"
    },
    {
      "src": "identifier: toAddress [2424,2433]",
      "dest": "identifier: toAddress [2424,2433]"
    },
    {
      "src": "parameter [2416,2433]",
      "dest": "parameter [2416,2433]"
    },
    {
      "src": "primitive_type [1895,1902]",
      "dest": "primitive_type [1895,1902]"
    },
    {
      "src": "uint256: uint256 [1206,1213]",
      "dest": "uint256: uint256 [1206,1213]"
    },
    {
      "src": "identifier: cancelL1ToL2Message [2387,2406]",
      "dest": "identifier: cancelL1ToL2Message [2387,2406]"
    },
    {
      "src": "uint256: uint256 [1180,1187]",
      "dest": "uint256: uint256 [1180,1187]"
    },
    {
      "src": "]: ] [2477,2478]",
      "dest": "]: ] [2477,2478]"
    },
    {
      "src": "identifier: consumeMessageFromL2 [1413,1433]",
      "dest": "identifier: consumeMessageFromL2 [1413,1433]"
    },
    {
      "src": "uint256: uint256 [2416,2423]",
      "dest": "uint256: uint256 [2416,2423]"
    },
    {
      "src": "[: [ [1955,1956]",
      "dest": "[: [ [1955,1956]"
    },
    {
      "src": "bytes32: bytes32 [1265,1272]",
      "dest": "bytes32: bytes32 [1265,1272]"
    },
    {
      "src": "type_name [1206,1213]",
      "dest": "type_name [1206,1213]"
    },
    {
      "src": "parameter [1274,1281]",
      "dest": "parameter [1274,1281]"
    },
    {
      "src": "solidity_version: 0.6.12 [653,659]",
      "dest": "solidity_version: 0.6.12 [653,659]"
    },
    {
      "src": "parameter [1517,1524]",
      "dest": "parameter [1517,1524]"
    },
    {
      "src": "returns: returns [2534,2541]",
      "dest": "returns: returns [2534,2541]"
    },
    {
      "src": "pragma_directive [636,660]",
      "dest": "pragma_directive [636,660]"
    },
    {
      "src": "comment: /**       Returns the max fee (in Wei) that StarkNet will accept per single message.     */ [765,856]",
      "dest": "comment: /**       Returns the max fee (in Wei) that StarkNet will accept per single message.     */ [765,856]"
    },
    {
      "src": "bytes32: bytes32 [2022,2029]",
      "dest": "bytes32: bytes32 [2022,2029]"
    }
  ],
  "actions": []
}