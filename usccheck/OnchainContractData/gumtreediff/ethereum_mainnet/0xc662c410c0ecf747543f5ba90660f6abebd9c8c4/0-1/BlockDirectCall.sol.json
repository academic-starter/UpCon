{
  "matches": [
    {
      "src": "type_name [1106,1113]",
      "dest": "type_name [510,517]"
    },
    {
      "src": "expression_statement [1766,1821]",
      "dest": "expression_statement [1170,1225]"
    },
    {
      "src": "call_expression [1322,1377]",
      "dest": "call_expression [726,781]"
    },
    {
      "src": "solidity_pragma_token [643,659]",
      "dest": "solidity_pragma_token [47,63]"
    },
    {
      "src": "identifier: keccak256 [1322,1331]",
      "dest": "identifier: keccak256 [726,735]"
    },
    {
      "src": "assignment_expression [1387,1415]",
      "dest": "assignment_expression [791,819]"
    },
    {
      "src": "identifier: abi [1332,1335]",
      "dest": "identifier: abi [736,739]"
    },
    {
      "src": "call_argument [1349,1364]",
      "dest": "call_argument [753,768]"
    },
    {
      "src": "identifier: slot [1455,1459]",
      "dest": "identifier: slot [859,863]"
    },
    {
      "src": "assembly: assembly [1425,1433]",
      "dest": "assembly: assembly [829,837]"
    },
    {
      "src": "(: ( [1342,1343]",
      "dest": "(: ( [746,747]"
    },
    {
      "src": "yul_decimal_number: 42 [1461,1463]",
      "dest": "yul_decimal_number: 42 [865,867]"
    },
    {
      "src": "contract_declaration [1066,1850]",
      "dest": "contract_declaration [470,1254]"
    },
    {
      "src": "call_argument [1795,1819]",
      "dest": "call_argument [1199,1223]"
    },
    {
      "src": "modifier_definition [1486,1848]",
      "dest": "modifier_definition [890,1252]"
    },
    {
      "src": "(: ( [1454,1455]",
      "dest": "(: ( [858,859]"
    },
    {
      "src": "): ) [1193,1194]",
      "dest": "): ) [597,598]"
    },
    {
      "src": "yul_assignment [1710,1739]",
      "dest": "yul_assignment [1114,1143]"
    },
    {
      "src": "(: ( [1373,1374]",
      "dest": "(: ( [777,778]"
    },
    {
      "src": "bytes32: bytes32 [1633,1640]",
      "dest": "bytes32: bytes32 [1037,1044]"
    },
    {
      "src": "internal: internal [1195,1203]",
      "dest": "internal: internal [599,607]"
    },
    {
      "src": "yul_function_call [1448,1464]",
      "dest": "yul_function_call [852,868]"
    },
    {
      "src": "constructor_definition [1181,1480]",
      "dest": "constructor_definition [585,884]"
    },
    {
      "src": "identifier: block [1349,1354]",
      "dest": "identifier: block [753,758]"
    },
    {
      "src": "identifier: timestamp [1355,1364]",
      "dest": "identifier: timestamp [759,768]"
    },
    {
      "src": "identifier: BlockDirectCall [1084,1099]",
      "dest": "identifier: BlockDirectCall [488,503]"
    },
    {
      "src": ",: , [1364,1365]",
      "dest": ",: , [768,769]"
    },
    {
      "src": "primitive_type [1597,1604]",
      "dest": "primitive_type [1001,1008]"
    },
    {
      "src": "variable_declaration_statement [1633,1670]",
      "dest": "variable_declaration_statement [1037,1074]"
    },
    {
      "src": "): ) [1513,1514]",
      "dest": "): ) [917,918]"
    },
    {
      "src": "immutable: immutable [1114,1123]",
      "dest": "immutable: immutable [518,527]"
    },
    {
      "src": "primitive_type [1106,1113]",
      "dest": "primitive_type [510,517]"
    },
    {
      "src": ",: , [1347,1348]",
      "dest": ",: , [751,752]"
    },
    {
      "src": "block_statement [1525,1831]",
      "dest": "block_statement [929,1235]"
    },
    {
      "src": "type_name [1597,1604]",
      "dest": "type_name [1001,1008]"
    },
    {
      "src": "comment: // Prevent too many local variables in stack. [1539,1584]",
      "dest": "comment: // Prevent too many local variables in stack. [943,988]"
    },
    {
      "src": "contract: contract [1075,1083]",
      "dest": "contract: contract [479,487]"
    },
    {
      "src": "constructor: constructor [1181,1192]",
      "dest": "constructor: constructor [585,596]"
    },
    {
      "src": "identifier: safeGuardValue [1774,1788]",
      "dest": "identifier: safeGuardValue [1178,1192]"
    },
    {
      "src": "member_expression [1349,1364]",
      "dest": "member_expression [753,768]"
    },
    {
      "src": "(: ( [1733,1734]",
      "dest": "(: ( [1137,1138]"
    },
    {
      "src": "yul_path [1455,1459]",
      "dest": "yul_path [859,863]"
    },
    {
      "src": "identifier: _ [1840,1841]",
      "dest": "identifier: _ [1244,1245]"
    },
    {
      "src": "}: } [1473,1474]",
      "dest": "}: } [877,878]"
    },
    {
      "src": "call_argument [1366,1375]",
      "dest": "call_argument [770,779]"
    },
    {
      "src": ".: . [1354,1355]",
      "dest": ".: . [758,759]"
    },
    {
      "src": "type_name [1633,1640]",
      "dest": "type_name [1037,1044]"
    },
    {
      "src": "identifier: this [1343,1347]",
      "dest": "identifier: this [747,751]"
    },
    {
      "src": "identifier: require [1766,1773]",
      "dest": "identifier: require [1170,1177]"
    },
    {
      "src": "uint256: uint256 [1597,1604]",
      "dest": "uint256: uint256 [1001,1008]"
    },
    {
      "src": "type_name [1307,1314]",
      "dest": "type_name [711,718]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]",
      "dest": "comment: // SPDX-License-Identifier: Apache-2.0. [0,39]"
    },
    {
      "src": "yul_function_call [1728,1739]",
      "dest": "yul_function_call [1132,1143]"
    },
    {
      "src": "}: } [1830,1831]",
      "dest": "}: } [1234,1235]"
    },
    {
      "src": "identifier: UNIQUE_SAFEGUARD_SLOT [1124,1145]",
      "dest": "identifier: UNIQUE_SAFEGUARD_SLOT [528,549]"
    },
    {
      "src": "identifier: UNIQUE_SAFEGUARD_SLOT [1387,1408]",
      "dest": "identifier: UNIQUE_SAFEGUARD_SLOT [791,812]"
    },
    {
      "src": "{: { [1434,1435]",
      "dest": "{: { [838,839]"
    },
    {
      "src": "state_variable_declaration [1106,1146]",
      "dest": "state_variable_declaration [510,550]"
    },
    {
      "src": "expression_statement [1840,1842]",
      "dest": "expression_statement [1244,1246]"
    },
    {
      "src": "=: = [1320,1321]",
      "dest": "=: = [724,725]"
    },
    {
      "src": ".: . [1335,1336]",
      "dest": ".: . [739,740]"
    },
    {
      "src": "{: { [1204,1205]",
      "dest": "{: { [608,609]"
    },
    {
      "src": "variable_declaration_statement [1597,1620]",
      "dest": "variable_declaration_statement [1001,1024]"
    },
    {
      "src": "yul_evm_builtin [1448,1454]",
      "dest": "yul_evm_builtin [852,858]"
    },
    {
      "src": "sstore: sstore [1448,1454]",
      "dest": "sstore: sstore [852,858]"
    },
    {
      "src": "yul_identifier [1455,1459]",
      "dest": "yul_identifier [859,863]"
    },
    {
      "src": "number_literal: 0 [1792,1793]",
      "dest": "number_literal: 0 [1196,1197]"
    },
    {
      "src": ",: , [1793,1794]",
      "dest": ",: , [1197,1198]"
    },
    {
      "src": ",: , [1459,1460]",
      "dest": ",: , [863,864]"
    },
    {
      "src": ":=: := [1725,1727]",
      "dest": ":=: := [1129,1131]"
    },
    {
      "src": "comment: /*   This contract provides means to block direct call of an external function.   A derived contract (e.g. MainDispatcherBase) should decorate sensitive functions with the   notCalledDirectly modifier, thereby preventing it from being called directly, and allowing only calling   using delegate_call.    This Guard contract uses pseudo-random slot, So each deployed contract would have its own guard. */ [662,1065]",
      "dest": "comment: /*   This contract provides means to block direct call of an external function.   A derived contract (e.g. MainDispatcherBase) should decorate sensitive functions with the   notCalledDirectly modifier, thereby preventing it from being called directly, and allowing only calling   using delegate_call.    This Guard contract uses pseudo-random slot, So each deployed contract would have its own guard. */ [66,469]"
    },
    {
      "src": "solidity: solidity [643,651]",
      "dest": "solidity: solidity [47,55]"
    },
    {
      "src": "yul_identifier [1710,1724]",
      "dest": "yul_identifier [1114,1128]"
    },
    {
      "src": "\": \" [1818,1819]",
      "dest": "\": \" [1222,1223]"
    },
    {
      "src": "abstract: abstract [1066,1074]",
      "dest": "abstract: abstract [470,478]"
    },
    {
      "src": "function_body [1515,1848]",
      "dest": "function_body [919,1252]"
    },
    {
      "src": "identifier: gasleft [1366,1373]",
      "dest": "identifier: gasleft [770,777]"
    },
    {
      "src": "identifier: UNIQUE_SAFEGUARD_SLOT [1648,1669]",
      "dest": "identifier: UNIQUE_SAFEGUARD_SLOT [1052,1073]"
    },
    {
      "src": "}: } [1479,1480]",
      "dest": "}: } [883,884]"
    },
    {
      "src": "member_expression [1332,1342]",
      "dest": "member_expression [736,746]"
    },
    {
      "src": "contract_body [1100,1850]",
      "dest": "contract_body [504,1254]"
    },
    {
      "src": "yul_path [1710,1724]",
      "dest": "yul_path [1114,1128]"
    },
    {
      "src": "call_argument [1774,1793]",
      "dest": "call_argument [1178,1197]"
    },
    {
      "src": "string [1795,1819]",
      "dest": "string [1199,1223]"
    },
    {
      "src": "identifier: slot [1315,1319]",
      "dest": "identifier: slot [719,723]"
    },
    {
      "src": "solidity_version_comparison_operator [651,653]",
      "dest": "solidity_version_comparison_operator [55,57]"
    },
    {
      "src": "{: { [1692,1693]",
      "dest": "{: { [1096,1097]"
    },
    {
      "src": "==: == [1789,1791]",
      "dest": "==: == [1193,1195]"
    },
    {
      "src": "expression_statement [1387,1416]",
      "dest": "expression_statement [791,820]"
    },
    {
      "src": "{: { [1525,1526]",
      "dest": "{: { [929,930]"
    },
    {
      "src": "pragma_directive [636,660]",
      "dest": "pragma_directive [40,64]"
    },
    {
      "src": "function_body [1204,1480]",
      "dest": "function_body [608,884]"
    },
    {
      "src": "pragma: pragma [636,642]",
      "dest": "pragma: pragma [40,46]"
    },
    {
      "src": "identifier: safeGuardValue [1605,1619]",
      "dest": "identifier: safeGuardValue [1009,1023]"
    },
    {
      "src": "solidity_version: 0.6.12 [653,659]",
      "dest": "solidity_version: 0.6.12 [57,63]"
    },
    {
      "src": "identifier: slot [1411,1415]",
      "dest": "identifier: slot [815,819]"
    },
    {
      "src": "identifier: encode [1336,1342]",
      "dest": "identifier: encode [740,746]"
    },
    {
      "src": "{: { [1515,1516]",
      "dest": "{: { [919,920]"
    },
    {
      "src": "identifier: slot [1734,1738]",
      "dest": "identifier: slot [1138,1142]"
    },
    {
      "src": "primitive_type [1633,1640]",
      "dest": "primitive_type [1037,1044]"
    },
    {
      "src": "comment: // NOLINT naming-convention. [1147,1175]",
      "dest": "comment: // NOLINT naming-convention. [551,579]"
    },
    {
      "src": "string_literal [1795,1819]",
      "dest": "string_literal [1199,1223]"
    },
    {
      "src": "source_file [0,1851]",
      "dest": "source_file [0,1255]"
    },
    {
      "src": "variable_declaration [1633,1645]",
      "dest": "variable_declaration [1037,1049]"
    },
    {
      "src": "variable_declaration_statement [1307,1378]",
      "dest": "variable_declaration_statement [711,782]"
    },
    {
      "src": "assembly: assembly [1683,1691]",
      "dest": "assembly: assembly [1087,1095]"
    },
    {
      "src": "): ) [1463,1464]",
      "dest": "): ) [867,868]"
    },
    {
      "src": "call_argument [1332,1376]",
      "dest": "call_argument [736,780]"
    },
    {
      "src": "): ) [1738,1739]",
      "dest": "): ) [1142,1143]"
    },
    {
      "src": "call_expression [1332,1376]",
      "dest": "call_expression [736,780]"
    },
    {
      "src": "yul_path [1734,1738]",
      "dest": "yul_path [1138,1142]"
    },
    {
      "src": "): ) [1374,1375]",
      "dest": "): ) [778,779]"
    },
    {
      "src": "}: } [1847,1848]",
      "dest": "}: } [1251,1252]"
    },
    {
      "src": "call_argument [1343,1347]",
      "dest": "call_argument [747,751]"
    },
    {
      "src": "): ) [1376,1377]",
      "dest": "): ) [780,781]"
    },
    {
      "src": "yul_evm_builtin [1728,1733]",
      "dest": "yul_evm_builtin [1132,1137]"
    },
    {
      "src": "(: ( [1331,1332]",
      "dest": "(: ( [735,736]"
    },
    {
      "src": "call_expression [1766,1820]",
      "dest": "call_expression [1170,1224]"
    },
    {
      "src": "\": \" [1795,1796]",
      "dest": "\": \" [1199,1200]"
    },
    {
      "src": "assembly_statement [1683,1753]",
      "dest": "assembly_statement [1087,1157]"
    },
    {
      "src": "bytes32: bytes32 [1106,1113]",
      "dest": "bytes32: bytes32 [510,517]"
    },
    {
      "src": "variable_declaration [1307,1319]",
      "dest": "variable_declaration [711,723]"
    },
    {
      "src": "identifier: notCalledDirectly [1495,1512]",
      "dest": "identifier: notCalledDirectly [899,916]"
    },
    {
      "src": "binary_expression [1774,1793]",
      "dest": "binary_expression [1178,1197]"
    },
    {
      "src": "(: ( [1192,1193]",
      "dest": "(: ( [596,597]"
    },
    {
      "src": "(: ( [1773,1774]",
      "dest": "(: ( [1177,1178]"
    },
    {
      "src": "primitive_type [1307,1314]",
      "dest": "primitive_type [711,718]"
    },
    {
      "src": "assembly_statement [1425,1474]",
      "dest": "assembly_statement [829,878]"
    },
    {
      "src": "=: = [1646,1647]",
      "dest": "=: = [1050,1051]"
    },
    {
      "src": "call_expression [1366,1375]",
      "dest": "call_expression [770,779]"
    },
    {
      "src": "): ) [1375,1376]",
      "dest": "): ) [779,780]"
    },
    {
      "src": "variable_declaration [1597,1619]",
      "dest": "variable_declaration [1001,1023]"
    },
    {
      "src": "}: } [1752,1753]",
      "dest": "}: } [1156,1157]"
    },
    {
      "src": "}: } [1849,1850]",
      "dest": "}: } [1253,1254]"
    },
    {
      "src": "modifier: modifier [1486,1494]",
      "dest": "modifier: modifier [890,898]"
    },
    {
      "src": "bytes32: bytes32 [1307,1314]",
      "dest": "bytes32: bytes32 [711,718]"
    },
    {
      "src": "identifier: slot [1641,1645]",
      "dest": "identifier: slot [1045,1049]"
    },
    {
      "src": "=: = [1409,1410]",
      "dest": "=: = [813,814]"
    },
    {
      "src": "(: ( [1512,1513]",
      "dest": "(: ( [916,917]"
    },
    {
      "src": "identifier: safeGuardValue [1710,1724]",
      "dest": "identifier: safeGuardValue [1114,1128]"
    },
    {
      "src": "{: { [1100,1101]",
      "dest": "{: { [504,505]"
    },
    {
      "src": "yul_identifier [1734,1738]",
      "dest": "yul_identifier [1138,1142]"
    },
    {
      "src": "): ) [1819,1820]",
      "dest": "): ) [1223,1224]"
    },
    {
      "src": "^:  ^ [651,653]",
      "dest": "^:  ^ [55,57]"
    },
    {
      "src": "sload: sload [1728,1733]",
      "dest": "sload: sload [1132,1137]"
    },
    {
      "src": "comment: // The slot is pseudo-random to allow hierarchy of contracts with guarded functions. [1214,1298]",
      "dest": "comment: // The slot is pseudo-random to allow hierarchy of contracts with guarded functions. [618,702]"
    }
  ],
  "actions": [
    {
      "action": "delete-node",
      "tree": "comment: /*   Copyright 2019-2021 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]"
    }
  ]
}