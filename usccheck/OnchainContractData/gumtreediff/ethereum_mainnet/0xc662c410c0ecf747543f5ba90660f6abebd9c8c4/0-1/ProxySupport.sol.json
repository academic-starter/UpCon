{
  "matches": [
    {
      "src": "call_argument [3603,3613]",
      "dest": "call_argument [3007,3017]"
    },
    {
      "src": "): ) [3613,3614]",
      "dest": "): ) [3017,3018]"
    },
    {
      "src": "call_argument [3248,3268]",
      "dest": "call_argument [2652,2672]"
    },
    {
      "src": "function: function [1340,1348]",
      "dest": "function: function [744,752]"
    },
    {
      "src": "\": \" [3248,3249]",
      "dest": "\": \" [2652,2653]"
    },
    {
      "src": "identifier: isFrozen [1349,1357]",
      "dest": "identifier: isFrozen [753,761]"
    },
    {
      "src": "expression_statement [2823,2877]",
      "dest": "expression_statement [2227,2281]"
    },
    {
      "src": "type_name [3364,3369]",
      "dest": "type_name [2768,2773]"
    },
    {
      "src": "(: ( [3602,3603]",
      "dest": "(: ( [3006,3007]"
    },
    {
      "src": "identifier: externalInitializerAddr [3123,3146]",
      "dest": "identifier: externalInitializerAddr [2527,2550]"
    },
    {
      "src": "identifier: length [2840,2846]",
      "dest": "identifier: length [2244,2250]"
    },
    {
      "src": "identifier: eicAddress [2726,2736]",
      "dest": "identifier: eicAddress [2130,2140]"
    },
    {
      "src": "(: ( [3057,3058]",
      "dest": "(: ( [2461,2462]"
    },
    {
      "src": "false [1414,1419]",
      "dest": "false [818,823]"
    },
    {
      "src": "+: + [2217,2218]",
      "dest": "+: + [1621,1622]"
    },
    {
      "src": "{: { [1217,1218]",
      "dest": "{: { [621,622]"
    },
    {
      "src": "variable_declaration_statement [2391,2446]",
      "dest": "variable_declaration_statement [1795,1850]"
    },
    {
      "src": "primitive_type [2674,2681]",
      "dest": "primitive_type [2078,2085]"
    },
    {
      "src": "calldata: calldata [2074,2082]",
      "dest": "calldata: calldata [1478,1486]"
    },
    {
      "src": "identifier: returndata [3542,3552]",
      "dest": "identifier: returndata [2946,2956]"
    },
    {
      "src": "identifier: ProxySupport [1152,1164]",
      "dest": "identifier: ProxySupport [556,568]"
    },
    {
      "src": "identifier: require [3202,3209]",
      "dest": "identifier: require [2606,2613]"
    },
    {
      "src": "calldata: calldata [2397,2405]",
      "dest": "calldata: calldata [1801,1809]"
    },
    {
      "src": "call_expression [3564,3615]",
      "dest": "call_expression [2968,3019]"
    },
    {
      "src": ",: , [1178,1179]",
      "dest": ",: , [582,583]"
    },
    {
      "src": "\": \" [3267,3268]",
      "dest": "\": \" [2671,2672]"
    },
    {
      "src": "call_expression [3518,3554]",
      "dest": "call_expression [2922,2958]"
    },
    {
      "src": "user_defined_type [1197,1216]",
      "dest": "user_defined_type [601,620]"
    },
    {
      "src": "identifier: subContractAddresses [2406,2426]",
      "dest": "identifier: subContractAddresses [1810,1830]"
    },
    {
      "src": "return_statement [2761,2768]",
      "dest": "return_statement [2165,2172]"
    },
    {
      "src": "binary_expression [2207,2221]",
      "dest": "binary_expression [1611,1625]"
    },
    {
      "src": ":: : [2434,2435]",
      "dest": ":: : [1838,1839]"
    },
    {
      "src": "[: [ [2546,2547]",
      "dest": "[: [ [1950,1951]"
    },
    {
      "src": "): ) [3553,3554]",
      "dest": "): ) [2957,2958]"
    },
    {
      "src": "variable_declaration_tuple [3349,3388]",
      "dest": "variable_declaration_tuple [2753,2792]"
    },
    {
      "src": "\": \" [669,670]",
      "dest": "\": \" [98,99]"
    },
    {
      "src": "type_name [1243,1250]",
      "dest": "type_name [647,654]"
    },
    {
      "src": ",: , [3533,3534]",
      "dest": ",: , [2937,2938]"
    },
    {
      "src": "identifier: BlockDirectCall [1180,1195]",
      "dest": "identifier: BlockDirectCall [584,599]"
    },
    {
      "src": "identifier: callExternalInitializer [2702,2725]",
      "dest": "identifier: callExternalInitializer [2106,2129]"
    },
    {
      "src": "identifier: eicOffset [2341,2350]",
      "dest": "identifier: eicOffset [1745,1754]"
    },
    {
      "src": "primitive_type [3596,3602]",
      "dest": "primitive_type [3000,3006]"
    },
    {
      "src": "expression_statement [3518,3555]",
      "dest": "expression_statement [2922,2959]"
    },
    {
      "src": "visibility [3180,3187]",
      "dest": "visibility [2584,2591]"
    },
    {
      "src": "): ) [2746,2747]",
      "dest": "): ) [2150,2151]"
    },
    {
      "src": "member_expression [2831,2846]",
      "dest": "member_expression [2235,2250]"
    },
    {
      "src": "identifier: eicData [3163,3170]",
      "dest": "identifier: eicData [2567,2574]"
    },
    {
      "src": "modifier_invocation [2098,2115]",
      "dest": "modifier_invocation [1502,1519]"
    },
    {
      "src": "solidity: solidity [643,651]",
      "dest": "solidity: solidity [47,55]"
    },
    {
      "src": "import: import [662,668]",
      "dest": "import: import [91,97]"
    },
    {
      "src": "private: private [3180,3187]",
      "dest": "private: private [2584,2591]"
    },
    {
      "src": "identifier: initGovernance [3043,3057]",
      "dest": "identifier: initGovernance [2447,2461]"
    },
    {
      "src": "number_literal: 32 [2146,2148]",
      "dest": "number_literal: 32 [1550,1552]"
    },
    {
      "src": "external: external [1360,1368]",
      "dest": "external: external [764,772]"
    },
    {
      "src": "address: address [2304,2311]",
      "dest": "address: address [1708,1715]"
    },
    {
      "src": "(: ( [2335,2336]",
      "dest": "(: ( [1739,1740]"
    },
    {
      "src": "}: } [3069,3070]",
      "dest": "}: } [2473,2474]"
    },
    {
      "src": "call_expression [2325,2380]",
      "dest": "call_expression [1729,1784]"
    },
    {
      "src": ",: , [2368,2369]",
      "dest": ",: , [1772,1773]"
    },
    {
      "src": "uint256: uint256 [2180,2187]",
      "dest": "uint256: uint256 [1584,1591]"
    },
    {
      "src": "): ) [2378,2379]",
      "dest": "): ) [1782,1783]"
    },
    {
      "src": "(: ( [3209,3210]",
      "dest": "(: ( [2613,2614]"
    },
    {
      "src": "call_argument [2738,2746]",
      "dest": "call_argument [2142,2150]"
    },
    {
      "src": "identifier: eicOffset [2207,2216]",
      "dest": "identifier: eicOffset [1611,1620]"
    },
    {
      "src": "identifier: decode [2329,2335]",
      "dest": "identifier: decode [1733,1739]"
    },
    {
      "src": "function_definition [3082,3622]",
      "dest": "function_definition [2486,3026]"
    },
    {
      "src": "variable_declaration [2516,2539]",
      "dest": "variable_declaration [1920,1943]"
    },
    {
      "src": "(: ( [2681,2682]",
      "dest": "(: ( [2085,2086]"
    },
    {
      "src": "(: ( [2238,2239]",
      "dest": "(: ( [1642,1643]"
    },
    {
      "src": "variable_declaration_statement [2126,2171]",
      "dest": "variable_declaration_statement [1530,1575]"
    },
    {
      "src": "identifier: delegatecall [3415,3427]",
      "dest": "identifier: delegatecall [2819,2831]"
    },
    {
      "src": "): ) [1358,1359]",
      "dest": "): ) [762,763]"
    },
    {
      "src": "(: ( [2659,2660]",
      "dest": "(: ( [2063,2064]"
    },
    {
      "src": "visibility [1360,1368]",
      "dest": "visibility [764,772]"
    },
    {
      "src": "identifier: isContract [3234,3244]",
      "dest": "identifier: isContract [2638,2648]"
    },
    {
      "src": "false: false [1414,1419]",
      "dest": "false: false [818,823]"
    },
    {
      "src": "call_argument [3490,3497]",
      "dest": "call_argument [2894,2901]"
    },
    {
      "src": "comment: /*       The initialize() function serves as an alternative constructor for a proxied deployment.        Flow and notes:       1. This function cannot be called directly on the deployed contract, but only via          delegate call.       2. If an EIC is provided - init is passed onto EIC and the standard init flow is skipped.          This true for both first intialization or a later one.       3. The data passed to this function is as follows:          [sub_contracts addresses, eic address, initData].           When calling on an initialized contract (no EIC scenario), initData.length must be 0.     */ [1432,2043]",
      "dest": "comment: /*       The initialize() function serves as an alternative constructor for a proxied deployment.        Flow and notes:       1. This function cannot be called directly on the deployed contract, but only via          delegate call.       2. If an EIC is provided - init is passed onto EIC and the standard init flow is skipped.          This true for both first intialization or a later one.       3. The data passed to this function is as follows:          [sub_contracts addresses, eic address, initData].           When calling on an initialized contract (no EIC scenario), initData.length must be 0.     */ [836,1447]"
    },
    {
      "src": "=: = [2540,2541]",
      "dest": "=: = [1944,1945]"
    },
    {
      "src": "import: import [708,714]",
      "dest": "import: import [142,148]"
    },
    {
      "src": ".: . [3444,3445]",
      "dest": ".: . [2848,2849]"
    },
    {
      "src": "calldata: calldata [3154,3162]",
      "dest": "calldata: calldata [2558,2566]"
    },
    {
      "src": "variable_declaration [2304,2322]",
      "dest": "variable_declaration [1708,1726]"
    },
    {
      "src": "identifier: encodeWithSelector [3445,3463]",
      "dest": "identifier: encodeWithSelector [2849,2867]"
    },
    {
      "src": "inheritance_specifier [1180,1195]",
      "dest": "inheritance_specifier [584,599]"
    },
    {
      "src": "identifier: eicOffset [2134,2143]",
      "dest": "identifier: eicOffset [1538,1547]"
    },
    {
      "src": "\": \" [2853,2854]",
      "dest": "\": \" [2257,2258]"
    },
    {
      "src": "primitive_type [2304,2311]",
      "dest": "primitive_type [1708,1715]"
    },
    {
      "src": ".: . [3233,3234]",
      "dest": ".: . [2637,2638]"
    },
    {
      "src": "primitive_type [1243,1250]",
      "dest": "primitive_type [647,654]"
    },
    {
      "src": "variable_declaration_statement [3349,3509]",
      "dest": "variable_declaration_statement [2753,2913]"
    },
    {
      "src": "primitive_type [3535,3541]",
      "dest": "primitive_type [2939,2945]"
    },
    {
      "src": "return: return [1407,1413]",
      "dest": "return: return [811,817]"
    },
    {
      "src": "identifier: abi [3441,3444]",
      "dest": "identifier: abi [2845,2848]"
    },
    {
      "src": "expression_statement [2956,2983]",
      "dest": "expression_statement [2360,2387]"
    },
    {
      "src": "identifier: require [3564,3571]",
      "dest": "identifier: require [2968,2975]"
    },
    {
      "src": "}: } [3621,3622]",
      "dest": "}: } [3025,3026]"
    },
    {
      "src": "): ) [2293,2294]",
      "dest": "): ) [1697,1698]"
    },
    {
      "src": "number_literal: 32 [2219,2221]",
      "dest": "number_literal: 32 [1623,1625]"
    },
    {
      "src": ".: . [2243,2244]",
      "dest": ".: . [1647,1648]"
    },
    {
      "src": "string [2272,2293]",
      "dest": "string [1676,1697]"
    },
    {
      "src": ",: , [3488,3489]",
      "dest": ",: , [2892,2893]"
    },
    {
      "src": "identifier: data [2336,2340]",
      "dest": "identifier: data [1740,1744]"
    },
    {
      "src": "address: address [2371,2378]",
      "dest": "address: address [1775,1782]"
    },
    {
      "src": "==: == [3590,3592]",
      "dest": "==: == [2994,2996]"
    },
    {
      "src": "address: address [2674,2681]",
      "dest": "address: address [2078,2085]"
    },
    {
      "src": "call_argument [3464,3488]",
      "dest": "call_argument [2868,2892]"
    },
    {
      "src": "\": \" [735,736]",
      "dest": "\": \" [173,174]"
    },
    {
      "src": "identifier: Governance [1168,1178]",
      "dest": "identifier: Governance [572,582]"
    },
    {
      "src": "variable_declaration_statement [2304,2381]",
      "dest": "variable_declaration_statement [1708,1785]"
    },
    {
      "src": "parenthesized_expression [2370,2379]",
      "dest": "parenthesized_expression [1774,1783]"
    },
    {
      "src": "identifier: initData [2531,2539]",
      "dest": "identifier: initData [1935,1943]"
    },
    {
      "src": "): ) [3028,3029]",
      "dest": "): ) [2432,2433]"
    },
    {
      "src": "function: function [2048,2056]",
      "dest": "function: function [1452,1460]"
    },
    {
      "src": "expression_statement [3202,3270]",
      "dest": "expression_statement [2606,2674]"
    },
    {
      "src": "expression_statement [3043,3060]",
      "dest": "expression_statement [2447,2464]"
    },
    {
      "src": ".: . [3582,3583]",
      "dest": ".: . [2986,2987]"
    },
    {
      "src": "identifier: notCalledDirectly [2098,2115]",
      "dest": "identifier: notCalledDirectly [1502,1519]"
    },
    {
      "src": ".: . [2328,2329]",
      "dest": ".: . [1732,1733]"
    },
    {
      "src": "primitive_type [2126,2133]",
      "dest": "primitive_type [1530,1537]"
    },
    {
      "src": "visibility [2089,2097]",
      "dest": "visibility [1493,1501]"
    },
    {
      "src": "]: ] [2444,2445]",
      "dest": "]: ] [1848,1849]"
    },
    {
      "src": "(: ( [3541,3542]",
      "dest": "(: ( [2945,2946]"
    },
    {
      "src": "call_expression [2823,2876]",
      "dest": "call_expression [2227,2280]"
    },
    {
      "src": "identifier: eicAddress [2660,2670]",
      "dest": "identifier: eicAddress [2064,2074]"
    },
    {
      "src": "): ) [3268,3269]",
      "dest": "): ) [2672,2673]"
    },
    {
      "src": "call_argument [2682,2685]",
      "dest": "call_argument [2086,2089]"
    },
    {
      "src": "expression_statement [2702,2748]",
      "dest": "expression_statement [2106,2152]"
    },
    {
      "src": "==: == [2847,2849]",
      "dest": "==: == [2251,2253]"
    },
    {
      "src": "identifier: expectedBaseSize [2188,2204]",
      "dest": "identifier: expectedBaseSize [1592,1608]"
    },
    {
      "src": "(: ( [2830,2831]",
      "dest": "(: ( [2234,2235]"
    },
    {
      "src": "binary_expression [2146,2170]",
      "dest": "binary_expression [1550,1574]"
    },
    {
      "src": "block_statement [2893,3070]",
      "dest": "block_statement [2297,2474]"
    },
    {
      "src": "variable_declaration [2180,2204]",
      "dest": "variable_declaration [1584,1608]"
    },
    {
      "src": "member_expression [3391,3427]",
      "dest": "member_expression [2795,2831]"
    },
    {
      "src": "call_argument [2272,2293]",
      "dest": "call_argument [1676,1697]"
    },
    {
      "src": "if_statement [2656,2778]",
      "dest": "if_statement [2060,2182]"
    },
    {
      "src": "}: } [3623,3624]",
      "dest": "}: } [3027,3028]"
    },
    {
      "src": "return_statement [1407,1420]",
      "dest": "return_statement [811,824]"
    },
    {
      "src": "call_expression [3202,3269]",
      "dest": "call_expression [2606,2673]"
    },
    {
      "src": "identifier: isInitialized [2792,2805]",
      "dest": "identifier: isInitialized [2196,2209]"
    },
    {
      "src": "bool: bool [3350,3354]",
      "dest": "bool: bool [2754,2758]"
    },
    {
      "src": "solidity_version_comparison_operator [651,653]",
      "dest": "solidity_version_comparison_operator [55,57]"
    },
    {
      "src": "type_name [2304,2311]",
      "dest": "type_name [1708,1715]"
    },
    {
      "src": "string_literal [3248,3268]",
      "dest": "string_literal [2652,2672]"
    },
    {
      "src": "identifier: callExternalInitializer [3091,3114]",
      "dest": "identifier: callExternalInitializer [2495,2518]"
    },
    {
      "src": "call_expression [3210,3246]",
      "dest": "call_expression [2614,2650]"
    },
    {
      "src": "binary_expression [2831,2851]",
      "dest": "binary_expression [2235,2255]"
    },
    {
      "src": "[: [ [2340,2341]",
      "dest": "[: [ [1744,1745]"
    },
    {
      "src": "identifier: subContractAddresses [2484,2504]",
      "dest": "identifier: subContractAddresses [1888,1908]"
    },
    {
      "src": "view: view [1369,1373]",
      "dest": "view: view [773,777]"
    },
    {
      "src": "{: { [3192,3193]",
      "dest": "{: { [2596,2597]"
    },
    {
      "src": "using: using [1223,1228]",
      "dest": "using: using [627,632]"
    },
    {
      "src": "): ) [2169,2170]",
      "dest": "): ) [1573,1574]"
    },
    {
      "src": "\": \" [715,716]",
      "dest": "\": \" [149,150]"
    },
    {
      "src": "member_expression [3464,3479]",
      "dest": "member_expression [2868,2883]"
    },
    {
      "src": "identifier: abi [2325,2328]",
      "dest": "identifier: abi [1729,1732]"
    },
    {
      "src": "identifier: this [3464,3468]",
      "dest": "identifier: this [2868,2872]"
    },
    {
      "src": "comment: // Contract was not initialized yet. [2907,2943]",
      "dest": "comment: // Contract was not initialized yet. [2311,2347]"
    },
    {
      "src": "\": \" [769,770]",
      "dest": "\": \" [88,89]"
    },
    {
      "src": "identifier: processSubContractAddresses [2456,2483]",
      "dest": "identifier: processSubContractAddresses [1860,1887]"
    },
    {
      "src": "call_expression [2792,2807]",
      "dest": "call_expression [2196,2211]"
    },
    {
      "src": "slice_access [2336,2368]",
      "dest": "slice_access [1740,1772]"
    },
    {
      "src": ".: . [3468,3469]",
      "dest": ".: . [2872,2873]"
    },
    {
      "src": "abstract: abstract [1134,1142]",
      "dest": "abstract: abstract [538,546]"
    },
    {
      "src": "call_argument [2973,2981]",
      "dest": "call_argument [2377,2385]"
    },
    {
      "src": "bytes: bytes [3148,3153]",
      "dest": "bytes: bytes [2552,2557]"
    },
    {
      "src": "primitive_type [2516,2521]",
      "dest": "primitive_type [1920,1925]"
    },
    {
      "src": "): ) [3387,3388]",
      "dest": "): ) [2791,2792]"
    },
    {
      "src": "member_expression [2239,2250]",
      "dest": "member_expression [1643,1654]"
    },
    {
      "src": "(: ( [2972,2973]",
      "dest": "(: ( [2376,2377]"
    },
    {
      "src": "comment: // The two function below (isFrozen & initialize) needed to bind to the Proxy. [1257,1335]",
      "dest": "comment: // The two function below (isFrozen & initialize) needed to bind to the Proxy. [661,739]"
    },
    {
      "src": "primitive_type [2371,2378]",
      "dest": "primitive_type [1775,1782]"
    },
    {
      "src": "call_argument [2370,2379]",
      "dest": "call_argument [1774,1783]"
    },
    {
      "src": "): ) [2379,2380]",
      "dest": "): ) [1783,1784]"
    },
    {
      "src": "if: if [2788,2790]",
      "dest": "if: if [2192,2194]"
    },
    {
      "src": "number_literal: 0x0 [2682,2685]",
      "dest": "number_literal: 0x0 [2086,2089]"
    },
    {
      "src": "\": \" [694,695]",
      "dest": "\": \" [119,120]"
    },
    {
      "src": "{: { [2809,2810]",
      "dest": "{: { [2213,2214]"
    },
    {
      "src": "identifier: Addresses [1229,1238]",
      "dest": "identifier: Addresses [633,642]"
    },
    {
      "src": "}: } [2777,2778]",
      "dest": "}: } [2181,2182]"
    },
    {
      "src": "solidity_pragma_token [643,659]",
      "dest": "solidity_pragma_token [47,63]"
    },
    {
      "src": "): ) [2981,2982]",
      "dest": "): ) [2385,2386]"
    },
    {
      "src": "string [669,685]",
      "dest": "string [98,110]"
    },
    {
      "src": ":: : [2563,2564]",
      "dest": ":: : [1967,1968]"
    },
    {
      "src": "(: ( [1357,1358]",
      "dest": "(: ( [761,762]"
    },
    {
      "src": "identifier: require [2231,2238]",
      "dest": "identifier: require [1635,1642]"
    },
    {
      "src": "}: } [3075,3076]",
      "dest": "}: } [2479,2480]"
    },
    {
      "src": "type_name [3115,3122]",
      "dest": "type_name [2519,2526]"
    },
    {
      "src": "variable_declaration_statement [2516,2566]",
      "dest": "variable_declaration_statement [1920,1970]"
    },
    {
      "src": "(: ( [2483,2484]",
      "dest": "(: ( [1887,1888]"
    },
    {
      "src": "identifier: eicAddress [2312,2322]",
      "dest": "identifier: eicAddress [1716,1726]"
    },
    {
      "src": "function: function [3082,3090]",
      "dest": "function: function [2486,2494]"
    },
    {
      "src": "call_expression [2456,2505]",
      "dest": "call_expression [1860,1909]"
    },
    {
      "src": "}: } [1425,1426]",
      "dest": "}: } [829,830]"
    },
    {
      "src": "primitive_type [3115,3122]",
      "dest": "primitive_type [2519,2526]"
    },
    {
      "src": "): ) [3507,3508]",
      "dest": "): ) [2911,2912]"
    },
    {
      "src": "variable_declaration_statement [2180,2222]",
      "dest": "variable_declaration_statement [1584,1626]"
    },
    {
      "src": "): ) [2504,2505]",
      "dest": "): ) [1908,1909]"
    },
    {
      "src": "): ) [2807,2808]",
      "dest": "): ) [2211,2212]"
    },
    {
      "src": "string [745,770]",
      "dest": "string [73,89]"
    },
    {
      "src": "number_literal: 0 [2850,2851]",
      "dest": "number_literal: 0 [2254,2255]"
    },
    {
      "src": "identifier: externalInitializerAddr [3210,3233]",
      "dest": "identifier: externalInitializerAddr [2614,2637]"
    },
    {
      "src": "]: ] [2367,2368]",
      "dest": "]: ] [1771,1772]"
    },
    {
      "src": "=: = [2144,2145]",
      "dest": "=: = [1548,1549]"
    },
    {
      "src": "call_expression [2996,3029]",
      "dest": "call_expression [2400,2433]"
    },
    {
      "src": "inheritance_specifier [1168,1178]",
      "dest": "inheritance_specifier [572,582]"
    },
    {
      "src": "primitive_type [3148,3153]",
      "dest": "primitive_type [2552,2557]"
    },
    {
      "src": ",: , [2270,2271]",
      "dest": ",: , [1674,1675]"
    },
    {
      "src": "string: string [3596,3602]",
      "dest": "string: string [3000,3006]"
    },
    {
      "src": "): ) [2685,2686]",
      "dest": "): ) [2089,2090]"
    },
    {
      "src": "(: ( [2805,2806]",
      "dest": "(: ( [2209,2210]"
    },
    {
      "src": ".: . [2839,2840]",
      "dest": ".: . [2243,2244]"
    },
    {
      "src": "type_name [1391,1395]",
      "dest": "type_name [795,799]"
    },
    {
      "src": "primitive_type [2068,2073]",
      "dest": "primitive_type [1472,1477]"
    },
    {
      "src": "contract_declaration [1134,3624]",
      "dest": "contract_declaration [538,3028]"
    },
    {
      "src": "(: ( [3463,3464]",
      "dest": "(: ( [2867,2868]"
    },
    {
      "src": "identifier: data [2429,2433]",
      "dest": "identifier: data [1833,1837]"
    },
    {
      "src": "function_body [3192,3622]",
      "dest": "function_body [2596,3026]"
    },
    {
      "src": "identifier: initData [2831,2839]",
      "dest": "identifier: initData [2235,2243]"
    },
    {
      "src": "if_statement [2788,3070]",
      "dest": "if_statement [2192,2474]"
    },
    {
      "src": "call_argument [3572,3594]",
      "dest": "call_argument [2976,2998]"
    },
    {
      "src": "identifier: initializeContractState [2996,3019]",
      "dest": "identifier: initializeContractState [2400,2423]"
    },
    {
      "src": "\": \" [745,746]",
      "dest": "\": \" [73,74]"
    },
    {
      "src": "{: { [2688,2689]",
      "dest": "{: { [2092,2093]"
    },
    {
      "src": ",: , [3362,3363]",
      "dest": ",: , [2766,2767]"
    },
    {
      "src": "call_argument [3535,3553]",
      "dest": "call_argument [2939,2957]"
    },
    {
      "src": "variable_declaration [3350,3362]",
      "dest": "variable_declaration [2754,2766]"
    },
    {
      "src": "primitive_type [3350,3354]",
      "dest": "primitive_type [2754,2758]"
    },
    {
      "src": "if: if [2656,2658]",
      "dest": "if: if [2060,2062]"
    },
    {
      "src": "call_argument [3441,3498]",
      "dest": "call_argument [2845,2902]"
    },
    {
      "src": "inheritance_specifier [1197,1216]",
      "dest": "inheritance_specifier [601,620]"
    },
    {
      "src": "function_body [1397,1426]",
      "dest": "function_body [801,830]"
    },
    {
      "src": "identifier: initData [2973,2981]",
      "dest": "identifier: initData [2377,2385]"
    },
    {
      "src": "type_name [2180,2187]",
      "dest": "type_name [1584,1591]"
    },
    {
      "src": "identifier: eicOffset [2435,2444]",
      "dest": "identifier: eicOffset [1839,1848]"
    },
    {
      "src": "identifier: initData [3020,3028]",
      "dest": "identifier: initData [2424,2432]"
    },
    {
      "src": "(: ( [2168,2169]",
      "dest": "(: ( [1572,1573]"
    },
    {
      "src": "call_expression [3043,3059]",
      "dest": "call_expression [2447,2463]"
    },
    {
      "src": "import: import [738,744]",
      "dest": "import: import [66,72]"
    },
    {
      "src": "call_argument [2853,2875]",
      "dest": "call_argument [2257,2279]"
    },
    {
      "src": "external: external [2089,2097]",
      "dest": "external: external [1493,1501]"
    },
    {
      "src": "string [694,706]",
      "dest": "string [119,140]"
    },
    {
      "src": "(: ( [3349,3350]",
      "dest": "(: ( [2753,2754]"
    },
    {
      "src": "(: ( [3571,3572]",
      "dest": "(: ( [2975,2976]"
    },
    {
      "src": "identifier: data [2542,2546]",
      "dest": "identifier: data [1946,1950]"
    },
    {
      "src": "type_cast_expression [3596,3614]",
      "dest": "type_cast_expression [3000,3018]"
    },
    {
      "src": "expression_statement [2996,3030]",
      "dest": "expression_statement [2400,2434]"
    },
    {
      "src": "(: ( [3019,3020]",
      "dest": "(: ( [2423,2424]"
    },
    {
      "src": "): ) [1395,1396]",
      "dest": "): ) [799,800]"
    },
    {
      "src": "bytes: bytes [3364,3369]",
      "dest": "bytes: bytes [2768,2773]"
    },
    {
      "src": "primitive_type [2180,2187]",
      "dest": "primitive_type [1584,1591]"
    },
    {
      "src": "call_argument [2726,2736]",
      "dest": "call_argument [2130,2140]"
    },
    {
      "src": "identifier: initData [2738,2746]",
      "dest": "identifier: initData [2142,2150]"
    },
    {
      "src": ",: , [2736,2737]",
      "dest": ",: , [2140,2141]"
    },
    {
      "src": "comment: // NOLINTNEXTLINE: low-level-calls, controlled-delegatecall. [3280,3340]",
      "dest": "comment: // NOLINTNEXTLINE: low-level-calls, controlled-delegatecall. [2684,2744]"
    },
    {
      "src": "memory: memory [3370,3376]",
      "dest": "memory: memory [2774,2780]"
    },
    {
      "src": ">=: >= [2251,2253]",
      "dest": ">=: >= [1655,1657]"
    },
    {
      "src": "identifier: initialize [2057,2067]",
      "dest": "identifier: initialize [1461,1471]"
    },
    {
      "src": "bytes: bytes [2068,2073]",
      "dest": "bytes: bytes [1472,1477]"
    },
    {
      "src": "user_defined_type [1168,1178]",
      "dest": "user_defined_type [572,582]"
    },
    {
      "src": "call_argument [3542,3552]",
      "dest": "call_argument [2946,2956]"
    },
    {
      "src": "function_definition [1340,1426]",
      "dest": "function_definition [744,830]"
    },
    {
      "src": "identifier: data [2083,2087]",
      "dest": "identifier: data [1487,1491]"
    },
    {
      "src": "calldata: calldata [2522,2530]",
      "dest": "calldata: calldata [1926,1934]"
    },
    {
      "src": "pragma: pragma [636,642]",
      "dest": "pragma: pragma [40,46]"
    },
    {
      "src": "member_expression [3572,3589]",
      "dest": "member_expression [2976,2993]"
    },
    {
      "src": "call_argument [3210,3246]",
      "dest": "call_argument [2614,2650]"
    },
    {
      "src": "number_literal: 0 [3593,3594]",
      "dest": "number_literal: 0 [2997,2998]"
    },
    {
      "src": "identifier: require [3518,3525]",
      "dest": "identifier: require [2922,2929]"
    },
    {
      "src": "call_expression [2231,2294]",
      "dest": "call_expression [1635,1698]"
    },
    {
      "src": "type_name [2126,2133]",
      "dest": "type_name [1530,1537]"
    },
    {
      "src": "solidity_version: 0.6.12 [653,659]",
      "dest": "solidity_version: 0.6.12 [57,63]"
    },
    {
      "src": "(: ( [3244,3245]",
      "dest": "(: ( [2648,2649]"
    },
    {
      "src": "is: is [1165,1167]",
      "dest": "is: is [569,571]"
    },
    {
      "src": "(: ( [2791,2792]",
      "dest": "(: ( [2195,2196]"
    },
    {
      "src": "): ) [2875,2876]",
      "dest": "): ) [2279,2280]"
    },
    {
      "src": "call_argument [3526,3533]",
      "dest": "call_argument [2930,2937]"
    },
    {
      "src": "): ) [3614,3615]",
      "dest": "): ) [3018,3019]"
    },
    {
      "src": "function_definition [2048,3076]",
      "dest": "function_definition [1452,2480]"
    },
    {
      "src": "(: ( [3114,3115]",
      "dest": "(: ( [2518,2519]"
    },
    {
      "src": "=: = [3389,3390]",
      "dest": "=: = [2793,2794]"
    },
    {
      "src": ".: . [3479,3480]",
      "dest": ".: . [2883,2884]"
    },
    {
      "src": "parameter [2068,2087]",
      "dest": "parameter [1472,1491]"
    },
    {
      "src": "slice_access [2542,2565]",
      "dest": "slice_access [1946,1969]"
    },
    {
      "src": "virtual: virtual [1374,1381]",
      "dest": "virtual: virtual [778,785]"
    },
    {
      "src": "\": \" [2272,2273]",
      "dest": "\": \" [1676,1677]"
    },
    {
      "src": "parameter [3148,3170]",
      "dest": "parameter [2552,2574]"
    },
    {
      "src": "): ) [3497,3498]",
      "dest": "): ) [2901,2902]"
    },
    {
      "src": "primitive_type [2391,2396]",
      "dest": "primitive_type [1795,1800]"
    },
    {
      "src": "identifier: validateInitData [2956,2972]",
      "dest": "identifier: validateInitData [2360,2376]"
    },
    {
      "src": "string_literal [2272,2293]",
      "dest": "string_literal [1676,1697]"
    },
    {
      "src": "identifier: expectedBaseSize [2351,2367]",
      "dest": "identifier: expectedBaseSize [1755,1771]"
    },
    {
      "src": "call_expression [2956,2982]",
      "dest": "call_expression [2360,2386]"
    },
    {
      "src": "member_expression [3210,3244]",
      "dest": "member_expression [2614,2648]"
    },
    {
      "src": "=: = [2427,2428]",
      "dest": "=: = [1831,1832]"
    },
    {
      "src": "import_directive [687,707]",
      "dest": "import_directive [112,141]"
    },
    {
      "src": "parameter [3115,3146]",
      "dest": "parameter [2519,2550]"
    },
    {
      "src": "for: for [1239,1242]",
      "dest": "for: for [643,646]"
    },
    {
      "src": "\": \" [2874,2875]",
      "dest": "\": \" [2278,2279]"
    },
    {
      "src": "identifier: ContractInitializer [1197,1216]",
      "dest": "identifier: ContractInitializer [601,620]"
    },
    {
      "src": "identifier: length [3583,3589]",
      "dest": "identifier: length [2987,2993]"
    },
    {
      "src": "expression_statement [2231,2295]",
      "dest": "expression_statement [1635,1699]"
    },
    {
      "src": "import_directive [738,771]",
      "dest": "import_directive [66,90]"
    },
    {
      "src": "]: ] [2564,2565]",
      "dest": "]: ] [1968,1969]"
    },
    {
      "src": "type_name [2516,2521]",
      "dest": "type_name [1920,1925]"
    },
    {
      "src": "block_statement [2809,2887]",
      "dest": "block_statement [2213,2291]"
    },
    {
      "src": "address: address [1243,1250]",
      "dest": "address: address [647,654]"
    },
    {
      "src": ",: , [2851,2852]",
      "dest": ",: , [2255,2256]"
    },
    {
      "src": "bytes: bytes [2516,2521]",
      "dest": "bytes: bytes [1920,1925]"
    },
    {
      "src": "^:  ^ [651,653]",
      "dest": "^:  ^ [55,57]"
    },
    {
      "src": "call_expression [3391,3508]",
      "dest": "call_expression [2795,2912]"
    },
    {
      "src": "return: return [2761,2767]",
      "dest": "return: return [2165,2171]"
    },
    {
      "src": "identifier: returndata [3572,3582]",
      "dest": "identifier: returndata [2976,2986]"
    },
    {
      "src": "binary_expression [3572,3594]",
      "dest": "binary_expression [2976,2998]"
    },
    {
      "src": "state_mutability [1369,1373]",
      "dest": "state_mutability [773,777]"
    },
    {
      "src": "{: { [2893,2894]",
      "dest": "{: { [2297,2298]"
    },
    {
      "src": "call_expression [3441,3498]",
      "dest": "call_expression [2845,2902]"
    },
    {
      "src": "\": \" [684,685]",
      "dest": "\": \" [109,110]"
    },
    {
      "src": "call_expression [2702,2747]",
      "dest": "call_expression [2106,2151]"
    },
    {
      "src": "identifier: initialize [3469,3479]",
      "dest": "identifier: initialize [2873,2883]"
    },
    {
      "src": "string [3248,3268]",
      "dest": "string [2652,2672]"
    },
    {
      "src": "return_type_definition [1382,1396]",
      "dest": "return_type_definition [786,800]"
    },
    {
      "src": "): ) [3552,3553]",
      "dest": "): ) [2956,2957]"
    },
    {
      "src": "comment: /**   This contract contains the code commonly needed for a contract to be deployed behind   an upgradability proxy.   It perform the required semantics of the proxy pattern,   but in a generic manner.   Instantiation of the Governance and of the ContractInitializer, that are the app specific   part of initialization, has to be done by the using contract. */ [773,1133]",
      "dest": "comment: /**   This contract contains the code commonly needed for a contract to be deployed behind   an upgradability proxy.   It perform the required semantics of the proxy pattern,   but in a generic manner.   Instantiation of the Governance and of the ContractInitializer, that are the app specific   part of initialization, has to be done by the using contract. */ [177,537]"
    },
    {
      "src": "{: { [2116,2117]",
      "dest": "{: { [1520,1521]"
    },
    {
      "src": "variable_declaration [3364,3387]",
      "dest": "variable_declaration [2768,2791]"
    },
    {
      "src": "!=: != [2671,2673]",
      "dest": "!=: != [2075,2077]"
    },
    {
      "src": "identifier: returndata [3603,3613]",
      "dest": "identifier: returndata [3007,3017]"
    },
    {
      "src": "contract_body [1217,3624]",
      "dest": "contract_body [621,3028]"
    },
    {
      "src": "binary_expression [2239,2270]",
      "dest": "binary_expression [1643,1674]"
    },
    {
      "src": "identifier: eicData [3490,3497]",
      "dest": "identifier: eicData [2894,2901]"
    },
    {
      "src": "identifier: returndata [3377,3387]",
      "dest": "identifier: returndata [2781,2791]"
    },
    {
      "src": "(: ( [3427,3428]",
      "dest": "(: ( [2831,2832]"
    },
    {
      "src": "identifier: expectedBaseSize [2547,2563]",
      "dest": "identifier: expectedBaseSize [1951,1967]"
    },
    {
      "src": ".: . [3414,3415]",
      "dest": ".: . [2818,2819]"
    },
    {
      "src": "string: string [3535,3541]",
      "dest": "string: string [2939,2945]"
    },
    {
      "src": "bool: bool [1391,1395]",
      "dest": "bool: bool [795,799]"
    },
    {
      "src": "type_cast_expression [3535,3553]",
      "dest": "type_cast_expression [2939,2957]"
    },
    {
      "src": "{: { [1397,1398]",
      "dest": "{: { [801,802]"
    },
    {
      "src": "type_name [2391,2396]",
      "dest": "type_name [1795,1800]"
    },
    {
      "src": "user_defined_type [1180,1195]",
      "dest": "user_defined_type [584,599]"
    },
    {
      "src": ",: , [3246,3247]",
      "dest": ",: , [2650,2651]"
    },
    {
      "src": "parameter [1391,1395]",
      "dest": "parameter [795,799]"
    },
    {
      "src": "): ) [3058,3059]",
      "dest": "): ) [2462,2463]"
    },
    {
      "src": "call_expression [2151,2170]",
      "dest": "call_expression [1555,1574]"
    },
    {
      "src": "contract: contract [1143,1151]",
      "dest": "contract: contract [547,555]"
    },
    {
      "src": "=: = [2323,2324]",
      "dest": "=: = [1727,1728]"
    },
    {
      "src": "block_statement [2688,2778]",
      "dest": "block_statement [2092,2182]"
    },
    {
      "src": "primitive_type [1391,1395]",
      "dest": "primitive_type [795,799]"
    },
    {
      "src": ":: : [2350,2351]",
      "dest": ":: : [1754,1755]"
    },
    {
      "src": "variable_declaration [2126,2143]",
      "dest": "variable_declaration [1530,1547]"
    },
    {
      "src": "identifier: selector [3480,3488]",
      "dest": "identifier: selector [2884,2892]"
    },
    {
      "src": "(: ( [1390,1391]",
      "dest": "(: ( [794,795]"
    },
    {
      "src": "}: } [2886,2887]",
      "dest": "}: } [2290,2291]"
    },
    {
      "src": "string [2853,2875]",
      "dest": "string [2257,2279]"
    },
    {
      "src": "call_argument [3596,3614]",
      "dest": "call_argument [3000,3018]"
    },
    {
      "src": "): ) [2087,2088]",
      "dest": "): ) [1491,1492]"
    },
    {
      "src": "bytes: bytes [2391,2396]",
      "dest": "bytes: bytes [1795,1800]"
    },
    {
      "src": "identifier: externalInitializerAddr [3391,3414]",
      "dest": "identifier: externalInitializerAddr [2795,2818]"
    },
    {
      "src": "expression_statement [3564,3616]",
      "dest": "expression_statement [2968,3020]"
    },
    {
      "src": "member_expression [2325,2335]",
      "dest": "member_expression [1729,1739]"
    },
    {
      "src": "function_body [2116,3076]",
      "dest": "function_body [1520,2480]"
    },
    {
      "src": "identifier: length [2244,2250]",
      "dest": "identifier: length [1648,1654]"
    },
    {
      "src": "type_cast_expression [2674,2686]",
      "dest": "type_cast_expression [2078,2090]"
    },
    {
      "src": "(: ( [2370,2371]",
      "dest": "(: ( [1774,1775]"
    },
    {
      "src": "identifier: data [2239,2243]",
      "dest": "identifier: data [1643,1647]"
    },
    {
      "src": "binary_expression [2660,2686]",
      "dest": "binary_expression [2064,2090]"
    },
    {
      "src": "boolean_literal [1414,1419]",
      "dest": "boolean_literal [818,823]"
    },
    {
      "src": "type_name [3148,3153]",
      "dest": "type_name [2552,2557]"
    },
    {
      "src": "call_argument [3020,3028]",
      "dest": "call_argument [2424,2432]"
    },
    {
      "src": ",: , [3594,3595]",
      "dest": ",: , [2998,2999]"
    },
    {
      "src": "): ) [2686,2687]",
      "dest": "): ) [2090,2091]"
    },
    {
      "src": "member_expression [3441,3463]",
      "dest": "member_expression [2845,2867]"
    },
    {
      "src": "slice_access [2429,2445]",
      "dest": "slice_access [1833,1849]"
    },
    {
      "src": "call_argument [2239,2270]",
      "dest": "call_argument [1643,1674]"
    },
    {
      "src": "expression_statement [2456,2506]",
      "dest": "expression_statement [1860,1910]"
    },
    {
      "src": "): ) [3170,3171]",
      "dest": "): ) [2574,2575]"
    },
    {
      "src": "identifier: numOfSubContracts [2151,2168]",
      "dest": "identifier: numOfSubContracts [1555,1572]"
    },
    {
      "src": "using_directive [1223,1251]",
      "dest": "using_directive [627,655]"
    },
    {
      "src": "import_directive [708,737]",
      "dest": "import_directive [142,175]"
    },
    {
      "src": "identifier: require [2823,2830]",
      "dest": "identifier: require [2227,2234]"
    },
    {
      "src": "(: ( [3525,3526]",
      "dest": "(: ( [2929,2930]"
    },
    {
      "src": "call_argument [2484,2504]",
      "dest": "call_argument [1888,1908]"
    },
    {
      "src": "): ) [3245,3246]",
      "dest": "): ) [2649,2650]"
    },
    {
      "src": "*: * [2149,2150]",
      "dest": "*: * [1553,1554]"
    },
    {
      "src": ",: , [1195,1196]",
      "dest": ",: , [599,600]"
    },
    {
      "src": "source_file [0,3625]",
      "dest": "source_file [0,3029]"
    },
    {
      "src": "=: = [2205,2206]",
      "dest": "=: = [1609,1610]"
    },
    {
      "src": "string [715,736]",
      "dest": "string [149,174]"
    },
    {
      "src": "call_argument [2831,2851]",
      "dest": "call_argument [2235,2255]"
    },
    {
      "src": "identifier: success [3355,3362]",
      "dest": "identifier: success [2759,2766]"
    },
    {
      "src": "else: else [2888,2892]",
      "dest": "else: else [2292,2296]"
    },
    {
      "src": "\": \" [2292,2293]",
      "dest": "\": \" [1696,1697]"
    },
    {
      "src": "import: import [687,693]",
      "dest": "import: import [112,118]"
    },
    {
      "src": "(: ( [2725,2726]",
      "dest": "(: ( [2129,2130]"
    },
    {
      "src": "returns: returns [1382,1389]",
      "dest": "returns: returns [786,793]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]",
      "dest": "comment: // SPDX-License-Identifier: Apache-2.0. [0,39]"
    },
    {
      "src": "identifier: expectedBaseSize [2254,2270]",
      "dest": "identifier: expectedBaseSize [1658,1674]"
    },
    {
      "src": "variable_declaration [2391,2426]",
      "dest": "variable_declaration [1795,1830]"
    },
    {
      "src": "identifier: success [3526,3533]",
      "dest": "identifier: success [2930,2937]"
    },
    {
      "src": "member_expression [3464,3488]",
      "dest": "member_expression [2868,2892]"
    },
    {
      "src": "\": \" [705,706]",
      "dest": "\": \" [139,140]"
    },
    {
      "src": "): ) [2806,2807]",
      "dest": "): ) [2210,2211]"
    },
    {
      "src": "address: address [3115,3122]",
      "dest": "address: address [2519,2526]"
    },
    {
      "src": "call_argument [2336,2368]",
      "dest": "call_argument [1740,1772]"
    },
    {
      "src": "type_name [3350,3354]",
      "dest": "type_name [2754,2758]"
    },
    {
      "src": "string_literal [2853,2875]",
      "dest": "string_literal [2257,2279]"
    },
    {
      "src": "type_name [2068,2073]",
      "dest": "type_name [1472,1477]"
    },
    {
      "src": "pragma_directive [636,660]",
      "dest": "pragma_directive [40,64]"
    },
    {
      "src": "import_directive [662,686]",
      "dest": "import_directive [91,111]"
    },
    {
      "src": "comment: // EIC Provided - Pass initData to EIC and the skip standard init flow. [2576,2647]",
      "dest": "comment: // EIC Provided - Pass initData to EIC and the skip standard init flow. [1980,2051]"
    },
    {
      "src": "primitive_type [3364,3369]",
      "dest": "primitive_type [2768,2773]"
    },
    {
      "src": "uint256: uint256 [2126,2133]",
      "dest": "uint256: uint256 [1530,1537]"
    },
    {
      "src": "(: ( [2067,2068]",
      "dest": "(: ( [1471,1472]"
    },
    {
      "src": ",: , [3146,3147]",
      "dest": ",: , [2550,2551]"
    },
    {
      "src": "type_alias [1229,1238]",
      "dest": "type_alias [633,642]"
    },
    {
      "src": "[: [ [2433,2434]",
      "dest": "[: [ [1837,1838]"
    }
  ],
  "actions": [
    {
      "action": "move-tree",
      "tree": "import_directive [738,771]",
      "parent": "source_file [0,3029]",
      "at": 3
    },
    {
      "action": "delete-node",
      "tree": "comment: /*   Copyright 2019-2021 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]"
    }
  ]
}