{
  "matches": [
    {
      "src": "member_expression [1636,1674]",
      "dest": "member_expression [1042,1080]"
    },
    {
      "src": "identifier: State [832,837]",
      "dest": "identifier: State [233,238]"
    },
    {
      "src": "identifier: state [825,830]",
      "dest": "identifier: state [226,231]"
    },
    {
      "src": "function_body [865,978]",
      "dest": "function_body [266,373]"
    },
    {
      "src": "identifier: starknetOutput [1234,1248]",
      "dest": "identifier: starknetOutput [578,592]"
    },
    {
      "src": "string_literal [1712,1735]",
      "dest": "string_literal [1118,1141]"
    },
    {
      "src": ".: . [1800,1801]",
      "dest": ".: . [1206,1207]"
    },
    {
      "src": "number_literal: 1 [1399,1400]",
      "dest": "number_literal: 1 [732,733]"
    },
    {
      "src": "identifier: commitment_tree_update [1812,1834]",
      "dest": "identifier: commitment_tree_update [1218,1240]"
    },
    {
      "src": "identifier: sequenceNumber [1381,1395]",
      "dest": "identifier: blockNumber [717,728]"
    },
    {
      "src": "call_argument [1712,1735]",
      "dest": "call_argument [1118,1141]"
    },
    {
      "src": "calldata: calldata [1225,1233]",
      "dest": "calldata: calldata [569,577]"
    },
    {
      "src": "member_expression [1616,1632]",
      "dest": "member_expression [1022,1038]"
    },
    {
      "src": "identifier: commitment_tree_update [1514,1536]",
      "dest": "identifier: commitment_tree_update [920,942]"
    },
    {
      "src": "library_declaration [684,1844]",
      "dest": "library_declaration [88,1250]"
    },
    {
      "src": "): ) [1697,1698]",
      "dest": "): ) [1103,1104]"
    },
    {
      "src": "pragma_directive [636,660]",
      "dest": "pragma_directive [40,64]"
    },
    {
      "src": "binary_expression [1616,1698]",
      "dest": "binary_expression [1022,1104]"
    },
    {
      "src": "{: { [865,866]",
      "dest": "{: { [266,267]"
    },
    {
      "src": "}: } [1841,1842]",
      "dest": "}: } [1247,1248]"
    },
    {
      "src": "visibility [1255,1263]",
      "dest": "visibility [594,602]"
    },
    {
      "src": "member_expression [924,944]",
      "dest": "member_expression [325,342]"
    },
    {
      "src": "]: ] [1503,1504]",
      "dest": "]: ] [909,910]"
    },
    {
      "src": "identifier: getNewRoot [1801,1811]",
      "dest": "identifier: getNewRoot [1207,1217]"
    },
    {
      "src": "call_argument [1616,1698]",
      "dest": "call_argument [1022,1104]"
    },
    {
      "src": "(: ( [1602,1603]",
      "dest": "(: ( [1008,1009]"
    },
    {
      "src": ".: . [903,904]",
      "dest": ".: . [304,305]"
    },
    {
      "src": "call_argument [1418,1456]",
      "dest": "call_argument [764,844]"
    },
    {
      "src": "identifier: require [1595,1602]",
      "dest": "identifier: require [1001,1008]"
    },
    {
      "src": "identifier: commitment_tree_update [1675,1697]",
      "dest": "identifier: commitment_tree_update [1081,1103]"
    },
    {
      "src": "expression_statement [1755,1836]",
      "dest": "expression_statement [1161,1242]"
    },
    {
      "src": "(: ( [1417,1418]",
      "dest": "(: ( [750,751]"
    },
    {
      "src": "internal: internal [856,864]",
      "dest": "internal: internal [257,265]"
    },
    {
      "src": "member_expression [875,891]",
      "dest": "member_expression [276,292]"
    },
    {
      "src": "==: == [1633,1635]",
      "dest": "==: == [1039,1041]"
    },
    {
      "src": "user_defined_type [811,816]",
      "dest": "user_defined_type [212,217]"
    },
    {
      "src": "{: { [1264,1265]",
      "dest": "{: { [603,604]"
    },
    {
      "src": "{: { [706,707]",
      "dest": "{: { [110,111]"
    },
    {
      "src": "type_name [1495,1502]",
      "dest": "type_name [901,908]"
    },
    {
      "src": "struct_member [763,785]",
      "dest": "struct_member [167,186]"
    },
    {
      "src": "function_body [1264,1842]",
      "dest": "function_body [603,1248]"
    },
    {
      "src": ".: . [1553,1554]",
      "dest": ".: . [959,960]"
    },
    {
      "src": "]: ] [1223,1224]",
      "dest": "]: ] [567,568]"
    },
    {
      "src": "identifier: starknetOutput [1570,1584]",
      "dest": "identifier: starknetOutput [976,990]"
    },
    {
      "src": "call_expression [1539,1585]",
      "dest": "call_expression [945,991]"
    },
    {
      "src": "call_expression [1774,1835]",
      "dest": "call_expression [1180,1241]"
    },
    {
      "src": "): ) [1834,1835]",
      "dest": "): ) [1240,1241]"
    },
    {
      "src": "expression_statement [924,972]",
      "dest": "expression_statement [325,367]"
    },
    {
      "src": "expression_statement [1375,1401]",
      "dest": "expression_statement [711,734]"
    },
    {
      "src": "string [1712,1735]",
      "dest": "string [1118,1141]"
    },
    {
      "src": "primitive_type [1215,1222]",
      "dest": "primitive_type [559,566]"
    },
    {
      "src": "function_definition [1130,1842]",
      "dest": "function_definition [522,1248]"
    },
    {
      "src": "identifier: globalRoot [743,753]",
      "dest": "identifier: globalRoot [147,157]"
    },
    {
      "src": "solidity: solidity [643,651]",
      "dest": "solidity: solidity [47,55]"
    },
    {
      "src": "storage: storage [817,824]",
      "dest": "storage: storage [218,225]"
    },
    {
      "src": "identifier: State [811,816]",
      "dest": "identifier: State [212,217]"
    },
    {
      "src": "member_expression [1375,1395]",
      "dest": "member_expression [711,728]"
    },
    {
      "src": "\": \" [1712,1713]",
      "dest": "\": \" [1118,1119]"
    },
    {
      "src": "): ) [1584,1585]",
      "dest": "): ) [990,991]"
    },
    {
      "src": "primitive_type [763,769]",
      "dest": "primitive_type [167,173]"
    },
    {
      "src": "): ) [1253,1254]",
      "dest": "): ) [592,593]"
    },
    {
      "src": "}: } [977,978]",
      "dest": "}: } [372,373]"
    },
    {
      "src": ".: . [1760,1761]",
      "dest": ".: . [1166,1167]"
    },
    {
      "src": "call_argument [1812,1834]",
      "dest": "call_argument [1218,1240]"
    },
    {
      "src": "identifier: stateFrom [845,854]",
      "dest": "identifier: stateFrom [246,255]"
    },
    {
      "src": ".: . [1621,1622]",
      "dest": ".: . [1027,1028]"
    },
    {
      "src": "type_name [1215,1224]",
      "dest": "type_name [559,568]"
    },
    {
      "src": "identifier: globalRoot [1761,1771]",
      "dest": "identifier: globalRoot [1167,1177]"
    },
    {
      "src": "type_name [1155,1160]",
      "dest": "type_name [538,543]"
    },
    {
      "src": "identifier: state [1375,1380]",
      "dest": "identifier: state [711,716]"
    },
    {
      "src": "identifier: copy [806,810]",
      "dest": "identifier: copy [207,211]"
    },
    {
      "src": "type_name [1495,1504]",
      "dest": "type_name [901,910]"
    },
    {
      "src": "\": \" [1482,1483]",
      "dest": "\": \" [879,880]"
    },
    {
      "src": "identifier: globalRoot [1622,1632]",
      "dest": "identifier: globalRoot [1028,1038]"
    },
    {
      "src": "identifier: state [1755,1760]",
      "dest": "identifier: state [1161,1166]"
    },
    {
      "src": ",: , [1456,1457]",
      "dest": ",: , [844,845]"
    },
    {
      "src": "visibility [856,864]",
      "dest": "visibility [257,265]"
    },
    {
      "src": "): ) [1744,1745]",
      "dest": "): ) [1150,1151]"
    },
    {
      "src": "identifier: getMerkleUpdate [1554,1569]",
      "dest": "identifier: getMerkleUpdate [960,975]"
    },
    {
      "src": "parameter [832,854]",
      "dest": "parameter [233,255]"
    },
    {
      "src": "augmented_assignment_expression [1375,1400]",
      "dest": "augmented_assignment_expression [711,733]"
    },
    {
      "src": "type_name [811,816]",
      "dest": "type_name [212,217]"
    },
    {
      "src": "type_name [763,769]",
      "dest": "type_name [167,173]"
    },
    {
      "src": "assignment_expression [924,971]",
      "dest": "assignment_expression [325,366]"
    },
    {
      "src": "\": \" [1458,1459]",
      "dest": "\": \" [858,859]"
    },
    {
      "src": "user_defined_type [1155,1160]",
      "dest": "user_defined_type [538,543]"
    },
    {
      "src": ".: . [956,957]",
      "dest": ".: . [354,355]"
    },
    {
      "src": "call_expression [1595,1745]",
      "dest": "call_expression [1001,1151]"
    },
    {
      "src": "\": \" [680,681]",
      "dest": "\": \" [84,85]"
    },
    {
      "src": "struct_declaration [712,791]",
      "dest": "struct_declaration [116,192]"
    },
    {
      "src": "string_literal [1458,1483]",
      "dest": "string_literal [858,880]"
    },
    {
      "src": "identifier: stateFrom [947,956]",
      "dest": "identifier: stateFrom [345,354]"
    },
    {
      "src": "contract_body [706,1844]",
      "dest": "contract_body [110,1250]"
    },
    {
      "src": "calldata: calldata [1505,1513]",
      "dest": "calldata: calldata [911,919]"
    },
    {
      "src": "identifier: globalRoot [881,891]",
      "dest": "identifier: globalRoot [282,292]"
    },
    {
      "src": "identifier: update [1139,1145]",
      "dest": "identifier: update [531,537]"
    },
    {
      "src": "library: library [684,691]",
      "dest": "library: library [88,95]"
    },
    {
      "src": "}: } [1843,1844]",
      "dest": "}: } [1249,1250]"
    },
    {
      "src": "+=: += [1396,1398]",
      "dest": "+=: += [729,731]"
    },
    {
      "src": "expression_statement [1595,1746]",
      "dest": "expression_statement [1001,1152]"
    },
    {
      "src": "identifier: globalRoot [904,914]",
      "dest": "identifier: globalRoot [305,315]"
    },
    {
      "src": "primitive_type [735,742]",
      "dest": "primitive_type [139,146]"
    },
    {
      "src": "=: = [945,946]",
      "dest": "=: = [343,344]"
    },
    {
      "src": "call_expression [1636,1698]",
      "dest": "call_expression [1042,1104]"
    },
    {
      "src": "variable_declaration_statement [1495,1586]",
      "dest": "variable_declaration_statement [901,992]"
    },
    {
      "src": "\": \" [669,670]",
      "dest": "\": \" [73,74]"
    },
    {
      "src": "\": \" [1734,1735]",
      "dest": "\": \" [1140,1141]"
    },
    {
      "src": "call_expression [1410,1484]",
      "dest": "call_expression [743,890]"
    },
    {
      "src": ",: , [1698,1699]",
      "dest": ",: , [1104,1105]"
    },
    {
      "src": "identifier: stateFrom [894,903]",
      "dest": "identifier: stateFrom [295,304]"
    },
    {
      "src": "import_directive [662,682]",
      "dest": "import_directive [66,86]"
    },
    {
      "src": "function: function [1130,1138]",
      "dest": "function: function [522,530]"
    },
    {
      "src": "identifier: sequenceNumber [770,784]",
      "dest": "identifier: blockNumber [174,185]"
    },
    {
      "src": "parameter [1215,1248]",
      "dest": "parameter [559,592]"
    },
    {
      "src": "parameter [1155,1174]",
      "dest": "parameter [538,557]"
    },
    {
      "src": "identifier: state [1169,1174]",
      "dest": "identifier: state [552,557]"
    },
    {
      "src": "identifier: CommitmentTreeUpdateOutput [1774,1800]",
      "dest": "identifier: CommitmentTreeUpdateOutput [1180,1206]"
    },
    {
      "src": "primitive_type [1495,1502]",
      "dest": "primitive_type [901,908]"
    },
    {
      "src": "): ) [1483,1484]",
      "dest": "): ) [889,890]"
    },
    {
      "src": "=: = [1537,1538]",
      "dest": "=: = [943,944]"
    },
    {
      "src": ".: . [929,930]",
      "dest": ".: . [330,331]"
    },
    {
      "src": ",: , [1174,1175]",
      "dest": ",: , [557,558]"
    },
    {
      "src": "import: import [662,668]",
      "dest": "import: import [66,72]"
    },
    {
      "src": "solidity_version: 0.6.12 [653,659]",
      "dest": "solidity_version: 0.6.12 [57,63]"
    },
    {
      "src": "identifier: state [924,929]",
      "dest": "identifier: state [325,330]"
    },
    {
      "src": "call_argument [1675,1697]",
      "dest": "call_argument [1081,1103]"
    },
    {
      "src": "(: ( [1811,1812]",
      "dest": "(: ( [1217,1218]"
    },
    {
      "src": "assignment_expression [875,914]",
      "dest": "assignment_expression [276,315]"
    },
    {
      "src": "parameter [811,830]",
      "dest": "parameter [212,231]"
    },
    {
      "src": "source_file [0,1845]",
      "dest": "source_file [0,1251]"
    },
    {
      "src": ".: . [1662,1663]",
      "dest": ".: . [1068,1069]"
    },
    {
      "src": "comment: // Check the sequenceNumber first as the error is less ambiguous then INVALID_PREVIOUS_ROOT. [1274,1366]",
      "dest": "comment: // Check the blockNumber first as the error is less ambiguous then INVALID_PREVIOUS_ROOT. [613,702]"
    },
    {
      "src": "identifier: StarknetOutput [1539,1553]",
      "dest": "identifier: StarknetOutput [945,959]"
    },
    {
      "src": "): ) [854,855]",
      "dest": "): ) [255,256]"
    },
    {
      "src": "member_expression [894,914]",
      "dest": "member_expression [295,315]"
    },
    {
      "src": "string [669,681]",
      "dest": "string [73,85]"
    },
    {
      "src": "variable_declaration [1495,1536]",
      "dest": "variable_declaration [901,942]"
    },
    {
      "src": "identifier: getPrevRoot [1663,1674]",
      "dest": "identifier: getPrevRoot [1069,1080]"
    },
    {
      "src": "(: ( [810,811]",
      "dest": "(: ( [211,212]"
    },
    {
      "src": "type_name [832,837]",
      "dest": "type_name [233,238]"
    },
    {
      "src": "expression_statement [875,915]",
      "dest": "expression_statement [276,316]"
    },
    {
      "src": "solidity_version_comparison_operator [651,653]",
      "dest": "solidity_version_comparison_operator [55,57]"
    },
    {
      "src": "expression_statement [1410,1485]",
      "dest": "expression_statement [743,891]"
    },
    {
      "src": "type_name [1215,1222]",
      "dest": "type_name [559,566]"
    },
    {
      "src": "identifier: State [719,724]",
      "dest": "identifier: State [123,128]"
    },
    {
      "src": "comment: /**       Validates that the 'sequenceNumber' and the previous root are consistent with the       current state and updates the state.     */ [984,1125]",
      "dest": "comment: /**       Validates that the 'blockNumber' and the previous root are consistent with the       current state and updates the state.     */ [379,517]"
    },
    {
      "src": "member_expression [947,971]",
      "dest": "member_expression [345,366]"
    },
    {
      "src": "identifier: sequenceNumber [930,944]",
      "dest": "identifier: blockNumber [331,342]"
    },
    {
      "src": "struct_member [735,754]",
      "dest": "struct_member [139,158]"
    },
    {
      "src": "member_expression [1539,1569]",
      "dest": "member_expression [945,975]"
    },
    {
      "src": "pragma: pragma [636,642]",
      "dest": "pragma: pragma [40,46]"
    },
    {
      "src": "call_argument [1570,1584]",
      "dest": "call_argument [976,990]"
    },
    {
      "src": "memory: memory [838,844]",
      "dest": "memory: memory [239,245]"
    },
    {
      "src": "uint256: uint256 [1495,1502]",
      "dest": "uint256: uint256 [901,908]"
    },
    {
      "src": "=: = [1772,1773]",
      "dest": "=: = [1178,1179]"
    },
    {
      "src": "=: = [892,893]",
      "dest": "=: = [293,294]"
    },
    {
      "src": "[: [ [1222,1223]",
      "dest": "[: [ [566,567]"
    },
    {
      "src": "identifier: StarknetState [692,705]",
      "dest": "identifier: StarknetState [96,109]"
    },
    {
      "src": "internal: internal [1255,1263]",
      "dest": "internal: internal [594,602]"
    },
    {
      "src": "storage: storage [1161,1168]",
      "dest": "storage: storage [544,551]"
    },
    {
      "src": "uint256: uint256 [735,742]",
      "dest": "uint256: uint256 [139,146]"
    },
    {
      "src": "identifier: CommitmentTreeUpdateOutput [1636,1662]",
      "dest": "identifier: CommitmentTreeUpdateOutput [1042,1068]"
    },
    {
      "src": "type_name [735,742]",
      "dest": "type_name [139,146]"
    },
    {
      "src": "(: ( [1674,1675]",
      "dest": "(: ( [1080,1081]"
    },
    {
      "src": "identifier: state [1616,1621]",
      "dest": "identifier: state [1022,1027]"
    },
    {
      "src": ".: . [880,881]",
      "dest": ".: . [281,282]"
    },
    {
      "src": "member_expression [1755,1771]",
      "dest": "member_expression [1161,1177]"
    },
    {
      "src": "identifier: sequenceNumber [957,971]",
      "dest": "identifier: blockNumber [355,366]"
    },
    {
      "src": "(: ( [1145,1146]",
      "dest": "(: ( [537,538]"
    },
    {
      "src": "(: ( [1569,1570]",
      "dest": "(: ( [975,976]"
    },
    {
      "src": "function_definition [797,978]",
      "dest": "function_definition [198,373]"
    },
    {
      "src": "member_expression [1774,1811]",
      "dest": "member_expression [1180,1217]"
    },
    {
      "src": "identifier: State [1155,1160]",
      "dest": "identifier: State [538,543]"
    },
    {
      "src": "call_argument [1458,1483]",
      "dest": "call_argument [858,880]"
    },
    {
      "src": "struct: struct [712,718]",
      "dest": "struct: struct [116,122]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]",
      "dest": "comment: // SPDX-License-Identifier: Apache-2.0. [0,39]"
    },
    {
      "src": "assignment_expression [1755,1835]",
      "dest": "assignment_expression [1161,1241]"
    },
    {
      "src": "int256: int256 [763,769]",
      "dest": "int256: int256 [167,173]"
    },
    {
      "src": "function: function [797,805]",
      "dest": "function: function [198,206]"
    },
    {
      "src": ".: . [1380,1381]",
      "dest": ".: . [716,717]"
    },
    {
      "src": "{: { [725,726]",
      "dest": "{: { [129,130]"
    },
    {
      "src": "user_defined_type [832,837]",
      "dest": "user_defined_type [233,238]"
    },
    {
      "src": "uint256: uint256 [1215,1222]",
      "dest": "uint256: uint256 [559,566]"
    },
    {
      "src": "identifier: state [875,880]",
      "dest": "identifier: state [276,281]"
    },
    {
      "src": "string [1458,1483]",
      "dest": "string [858,880]"
    },
    {
      "src": "}: } [790,791]",
      "dest": "}: } [191,192]"
    },
    {
      "src": "[: [ [1502,1503]",
      "dest": "[: [ [908,909]"
    },
    {
      "src": "^:  ^ [651,653]",
      "dest": "^:  ^ [55,57]"
    },
    {
      "src": ",: , [830,831]",
      "dest": ",: , [231,232]"
    },
    {
      "src": "solidity_pragma_token [643,659]",
      "dest": "solidity_pragma_token [47,63]"
    },
    {
      "src": "identifier: require [1410,1417]",
      "dest": "identifier: require [743,750]"
    }
  ],
  "actions": [
    {
      "action": "update-node",
      "tree": "comment: /**       Validates that the 'sequenceNumber' and the previous root are consistent with the       current state and updates the state.     */ [984,1125]",
      "label": "/**       Validates that the 'blockNumber' and the previous root are consistent with the       current state and updates the state.     */"
    },
    {
      "action": "update-node",
      "tree": "identifier: sequenceNumber [770,784]",
      "label": "blockNumber"
    },
    {
      "action": "update-node",
      "tree": "comment: // Check the sequenceNumber first as the error is less ambiguous then INVALID_PREVIOUS_ROOT. [1274,1366]",
      "label": "// Check the blockNumber first as the error is less ambiguous then INVALID_PREVIOUS_ROOT."
    },
    {
      "action": "update-node",
      "tree": "identifier: sequenceNumber [930,944]",
      "label": "blockNumber"
    },
    {
      "action": "update-node",
      "tree": "identifier: sequenceNumber [957,971]",
      "label": "blockNumber"
    },
    {
      "action": "update-node",
      "tree": "identifier: sequenceNumber [1381,1395]",
      "label": "blockNumber"
    },
    {
      "action": "insert-tree",
      "tree": "array_access [764,844]",
      "parent": "call_argument [764,844]",
      "at": 0
    },
    {
      "action": "delete-node",
      "tree": "comment: /*   Copyright 2019-2021 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [1184,1205]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [1205,1206]"
    },
    {
      "action": "delete-tree",
      "tree": "binary_expression [1418,1456]"
    }
  ]
}