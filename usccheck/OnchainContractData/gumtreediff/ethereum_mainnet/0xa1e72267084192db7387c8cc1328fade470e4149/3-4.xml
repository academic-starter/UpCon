<?xml version="1.0" ?>
<matches>
  <match src="return_type_definition [25392,25407]" dest="return_type_definition [25442,25457]"/>
  <match src="returns: returns [34758,34765]" dest="returns: returns [34962,34969]"/>
  <match src="(: ( [34919,34920]" dest="(: ( [35123,35124]"/>
  <match src="identifier: roughCurveTokenAmount [58126,58147]" dest="identifier: roughCurveTokenAmount [63292,63313]"/>
  <match src=",: , [16104,16105]" dest=",: , [16154,16155]"/>
  <match src="identifier: _owner [34941,34947]" dest="identifier: _owner [35145,35151]"/>
  <match src="primitive_type [37556,37562]" dest="primitive_type [37760,37766]"/>
  <match src="parenthesized_expression [42371,42427]" dest="parenthesized_expression [42655,42711]"/>
  <match src="identifier: a [8828,8829]" dest="identifier: a [8878,8879]"/>
  <match src="{: { [10928,10929]" dest="{: { [10978,10979]"/>
  <match src=".: . [48329,48330]" dest=".: . [52824,52825]"/>
  <match src="type_name [21794,21801]" dest="type_name [21844,21851]"/>
  <match src="contract_body [7658,12360]" dest="contract_body [7708,12410]"/>
  <match src="override_specifier [25538,25546]" dest="override_specifier [25588,25596]"/>
  <match src="primitive_type [24470,24476]" dest="primitive_type [24520,24526]"/>
  <match src="comment: // Dependency file: @openzeppelin/contracts/utils/Address.sol [12366,12427]" dest="comment: // Dependency file: @openzeppelin/contracts/utils/Address.sol [12416,12477]"/>
  <match src="member_expression [53509,53532]" dest="member_expression [58901,58924]"/>
  <match src="number_literal: 0 [54824,54825]" dest="number_literal: 0 [60253,60254]"/>
  <match src="identifier: Flushed [45524,45531]" dest="identifier: Flushed [47232,47239]"/>
  <match src="): ) [47360,47361]" dest="): ) [66065,66066]"/>
  <match src="identifier: _curvePool [58194,58204]" dest="identifier: _curvePool [63360,63370]"/>
  <match src="identifier: amount [52935,52941]" dest="identifier: amount [58327,58333]"/>
  <match src="{: { [56970,56971]" dest="{: { [62403,62404]"/>
  <match src="{: { [19141,19142]" dest="{: { [19191,19192]"/>
  <match src="identifier: owner [32247,32252]" dest="identifier: owner [32297,32302]"/>
  <match src="user_defined_type [37023,37029]" dest="user_defined_type [37227,37233]"/>
  <match src="modifier_invocation [58692,58702]" dest="modifier_invocation [63858,63868]"/>
  <match src="): ) [36797,36798]" dest="): ) [37001,37002]"/>
  <match src="type_name [27214,27221]" dest="type_name [27264,27271]"/>
  <match src="number_literal: 0 [32132,32133]" dest="number_literal: 0 [32182,32183]"/>
  <match src="variable_declaration_statement [41102,41116]" dest="variable_declaration_statement [41386,41400]"/>
  <match src="call_argument [50578,50590]" dest="call_argument [68474,68486]"/>
  <match src="primitive_type [4239,4246]" dest="primitive_type [4289,4296]"/>
  <match src="call_argument [49845,49855]" dest="call_argument [55096,55106]"/>
  <match src="}: } [48546,48547]" dest="}: } [53407,53408]"/>
  <match src=".: . [58204,58205]" dest=".: . [63370,63371]"/>
  <match src="identifier: repay [58644,58649]" dest="identifier: repay [63810,63815]"/>
  <match src="&quot;: &quot; [52846,52847]" dest="&quot;: &quot; [58238,58239]"/>
  <match src="call_argument [49671,49674]" dest="call_argument [54922,54925]"/>
  <match src="(: ( [6064,6065]" dest="(: ( [6114,6115]"/>
  <match src="comment: // import {ITrueFiPool} from &quot;contracts/truefi/interface/ITrueFiPool.sol&quot;; [43009,43083]" dest="comment: // import {ITrueFiPool} from &quot;contracts/truefi/interface/ITrueFiPool.sol&quot;; [43575,43649]"/>
  <match src="): ) [16750,16751]" dest="): ) [16800,16801]"/>
  <match src="parameter [29505,29519]" dest="parameter [29555,29569]"/>
  <match src="identifier: recipient [29697,29706]" dest="identifier: recipient [29747,29756]"/>
  <match src="call_argument [30437,30470]" dest="call_argument [30487,30520]"/>
  <match src="call_argument [50768,50774]" dest="call_argument [55738,55744]"/>
  <match src=",: , [50751,50752]" dest=",: , [55721,55722]"/>
  <match src="expression_statement [41525,41534]" dest="expression_statement [41809,41818]"/>
  <match src=",: , [57666,57667]" dest=",: , [55789,55790]"/>
  <match src="identifier: amount [30526,30532]" dest="identifier: amount [30576,30582]"/>
  <match src="number_literal: 0x4 [41588,41591]" dest="number_literal: 0x4 [41872,41875]"/>
  <match src="(: ( [56602,56603]" dest="(: ( [62049,62050]"/>
  <match src="identifier: __uniRouter [46915,46926]" dest="identifier: __uniRouter [48809,48820]"/>
  <match src="): ) [26677,26678]" dest="): ) [26727,26728]"/>
  <match src="identifier: require [53373,53380]" dest="identifier: require [58765,58772]"/>
  <match src=",: , [39255,39256]" dest=",: , [39539,39540]"/>
  <match src="call_argument [49546,49558]" dest="call_argument [54797,54809]"/>
  <match src="expression_statement [29935,29991]" dest="expression_statement [29985,30041]"/>
  <match src="call_argument [53381,53418]" dest="call_argument [58773,58810]"/>
  <match src="type_name [30345,30352]" dest="type_name [30395,30402]"/>
  <match src="primitive_type [36824,36831]" dest="primitive_type [37028,37035]"/>
  <match src="): ) [48109,48110]" dest="): ) [52455,52456]"/>
  <match src="identifier: _curvePool [52274,52284]" dest="identifier: _curvePool [57402,57412]"/>
  <match src="emit_statement [55971,56000]" dest="emit_statement [61409,61438]"/>
  <match src="if_statement [41661,41685]" dest="if_statement [41945,41969]"/>
  <match src="identifier: account [1887,1894]" dest="identifier: account [1937,1944]"/>
  <match src="visibility [47794,47800]" dest="visibility [50623,50629]"/>
  <match src="call_expression [55615,55674]" dest="call_expression [61053,61112]"/>
  <match src="call_argument [47002,47010]" dest="call_argument [48961,48969]"/>
  <match src="primitive_type [7928,7935]" dest="primitive_type [7978,7985]"/>
  <match src="call_expression [54885,54917]" dest="call_expression [60314,60346]"/>
  <match src="type_name [38964,38971]" dest="type_name [39248,39255]"/>
  <match src="type_cast_expression [58762,58775]" dest="type_cast_expression [63928,63941]"/>
  <match src="=: = [41933,41934]" dest="=: = [42217,42218]"/>
  <match src="returns: returns [17566,17573]" dest="returns: returns [17616,17623]"/>
  <match src="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [26400,26533]" dest="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [26450,26583]"/>
  <match src="function: function [32610,32618]" dest="function: function [32660,32668]"/>
  <match src="): ) [52400,52401]" dest="): ) [57719,57720]"/>
  <match src="call_argument [16792,16798]" dest="call_argument [16842,16848]"/>
  <match src="return: return [24496,24502]" dest="return: return [24546,24552]"/>
  <match src=".: . [54098,54099]" dest=".: . [59490,59491]"/>
  <match src="(: ( [34766,34767]" dest="(: ( [34970,34971]"/>
  <match src="identifier: div [51696,51699]" dest="identifier: div [56666,56669]"/>
  <match src="identifier: msg [50801,50804]" dest="identifier: msg [62814,62817]"/>
  <match src="}: } [60367,60368]" dest="}: } [66555,66556]"/>
  <match src="member_expression [48798,48815]" dest="member_expression [53726,53743]"/>
  <match src="&quot;: &quot; [30437,30438]" dest="&quot;: &quot; [30487,30488]"/>
  <match src="identifier: msg [51761,51764]" dest="identifier: msg [56889,56892]"/>
  <match src="identifier: _symbol [23818,23825]" dest="identifier: _symbol [23868,23875]"/>
  <match src="}: } [54928,54929]" dest="}: } [60357,60358]"/>
  <match src="parameter [16125,16151]" dest="parameter [16175,16201]"/>
  <match src="(: ( [53239,53240]" dest="(: ( [58631,58632]"/>
  <match src="}: } [25789,25790]" dest="}: } [25839,25840]"/>
  <match src="type_name [3341,3345]" dest="type_name [3391,3395]"/>
  <match src="}: } [18329,18330]" dest="}: } [18379,18380]"/>
  <match src="uint256: uint256 [12204,12211]" dest="uint256: uint256 [12254,12261]"/>
  <match src="identifier: div [54472,54475]" dest="identifier: div [59864,59867]"/>
  <match src=",: , [30360,30361]" dest=",: , [30410,30411]"/>
  <match src="primitive_type [3687,3694]" dest="primitive_type [3737,3744]"/>
  <match src="identifier: amountToWithdraw [57730,57746]" dest="identifier: amountToWithdraw [62896,62912]"/>
  <match src="=: = [31371,31372]" dest="=: = [31421,31422]"/>
  <match src="address: address [3954,3961]" dest="address: address [4004,4011]"/>
  <match src="(: ( [59000,59001]" dest="(: ( [64175,64176]"/>
  <match src="identifier: _currencyToken [50713,50727]" dest="identifier: _currencyToken [55683,55697]"/>
  <match src="expression_statement [29773,29821]" dest="expression_statement [29823,29871]"/>
  <match src="(: ( [47544,47545]" dest="(: ( [49429,49430]"/>
  <match src="parameter [3722,3736]" dest="parameter [3772,3786]"/>
  <match src="type_name [51344,51351]" dest="type_name [56314,56321]"/>
  <match src="identifier: sub [53335,53338]" dest="identifier: sub [58727,58730]"/>
  <match src="call_argument [20744,20792]" dest="call_argument [20794,20842]"/>
  <match src="override: override [27304,27312]" dest="override: override [27354,27362]"/>
  <match src="(: ( [51948,51949]" dest="(: ( [57076,57077]"/>
  <match src="identifier: c [8018,8019]" dest="identifier: c [8068,8069]"/>
  <match src="}: } [17878,17879]" dest="}: } [17928,17929]"/>
  <match src="): ) [53918,53919]" dest="): ) [59310,59311]"/>
  <match src="type_name [31055,31062]" dest="type_name [31105,31112]"/>
  <match src="string_literal [52846,52878]" dest="string_literal [58238,58270]"/>
  <match src="identifier: sender [29513,29519]" dest="identifier: sender [29563,29569]"/>
  <match src="primitive_type [42044,42050]" dest="primitive_type [42328,42334]"/>
  <match src="external: external [37567,37575]" dest="external: external [37771,37779]"/>
  <match src="identifier: increaseAllowance [27955,27972]" dest="identifier: increaseAllowance [28005,28022]"/>
  <match src="identifier: averageExitPenalty [54588,54606]" dest="identifier: averageExitPenalty [60017,60035]"/>
  <match src="identifier: exit [51082,51086]" dest="identifier: exit [56052,56056]"/>
  <match src="type_name [38341,38348]" dest="type_name [38638,38645]"/>
  <match src="(: ( [17607,17608]" dest="(: ( [17657,17658]"/>
  <match src="{: { [20676,20677]" dest="{: { [20726,20727]"/>
  <match src="using: using [23542,23547]" dest="using: using [23592,23597]"/>
  <match src="parameter [17512,17528]" dest="parameter [17562,17578]"/>
  <match src="visibility [44535,44541]" dest="visibility [45282,45288]"/>
  <match src="returns: returns [40683,40690]" dest="returns: returns [40967,40974]"/>
  <match src="call_argument [49560,49609]" dest="call_argument [54811,54860]"/>
  <match src="augmented_assignment_expression [41900,41908]" dest="augmented_assignment_expression [42184,42192]"/>
  <match src="type_cast_expression [47399,47418]" dest="type_cast_expression [66143,66156]"/>
  <match src="type_name [2228,2232]" dest="type_name [2278,2282]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [1936,2151]" dest="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [1986,2201]"/>
  <match src="string_literal [14804,14806]" dest="string_literal [14854,14856]"/>
  <match src=",: , [29547,29548]" dest=",: , [29597,29598]"/>
  <match src="): ) [17587,17588]" dest="): ) [17637,17638]"/>
  <match src="identifier: self [21664,21668]" dest="identifier: self [21714,21718]"/>
  <match src="call_argument [47566,47596]" dest="call_argument [49451,49481]"/>
  <match src="primitive_type [21562,21569]" dest="primitive_type [21612,21619]"/>
  <match src="comment: // https://eips.ethereum.org/EIPS/eip-2200) [6875,6918]" dest="comment: // https://eips.ethereum.org/EIPS/eip-2200) [6925,6968]"/>
  <match src="type_name [2175,2182]" dest="type_name [2225,2232]"/>
  <match src=",: , [57975,57976]" dest=",: , [63141,63142]"/>
  <match src=",: , [26669,26670]" dest=",: , [26719,26720]"/>
  <match src="(: ( [27348,27349]" dest="(: ( [27398,27399]"/>
  <match src="string_literal [57314,57368]" dest="string_literal [62629,62683]"/>
  <match src="call_expression [58714,58793]" dest="call_expression [63880,63959]"/>
  <match src="call_argument [31302,31308]" dest="call_argument [31352,31358]"/>
  <match src="assignment_expression [52972,53059]" dest="assignment_expression [58364,58451]"/>
  <match src="primitive_type [44572,44579]" dest="primitive_type [45319,45326]"/>
  <match src="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [2242,2512]" dest="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [2292,2562]"/>
  <match src="): ) [57614,57615]" dest="): ) [62788,62789]"/>
  <match src="identifier: _allowances [28849,28860]" dest="identifier: _allowances [28899,28910]"/>
  <match src="): ) [17556,17557]" dest="): ) [17606,17607]"/>
  <match src="primitive_type [58275,58282]" dest="primitive_type [63441,63448]"/>
  <match src="comment: /**      * @dev Emitted when funds are borrowed from pool      * @param borrower Borrower address      * @param amount Amount of funds borrowed from pool      * @param fee Fees collected from this transaction      */ [45722,45943]" dest="comment: /**      * @dev Emitted when funds are borrowed from pool      * @param borrower Borrower address      * @param amount Amount of funds borrowed from pool      * @param fee Fees collected from this transaction      */ [47430,47651]"/>
  <match src="(: ( [40657,40658]" dest="(: ( [40941,40942]"/>
  <match src="uint256: uint256 [36732,36739]" dest="uint256: uint256 [36936,36943]"/>
  <match src="emit_statement [32233,32271]" dest="emit_statement [32283,32321]"/>
  <match src="function_body [56272,56690]" dest="function_body [61719,62137]"/>
  <match src="type_name [56902,56909]" dest="type_name [62348,62355]"/>
  <match src="call_argument [11665,11666]" dest="call_argument [11715,11716]"/>
  <match src="yul_function_call [18267,18311]" dest="yul_function_call [18317,18361]"/>
  <match src="(: ( [31054,31055]" dest="(: ( [31104,31105]"/>
  <match src=",: , [18280,18281]" dest=",: , [18330,18331]"/>
  <match src="augmented_assignment_expression [41631,41639]" dest="augmented_assignment_expression [41915,41923]"/>
  <match src="call_argument [57597,57613]" dest="call_argument [62772,62787]"/>
  <match src="(: ( [49325,49326]" dest="(: ( [54576,54577]"/>
  <match src=".: . [60815,60816]" dest=".: . [67064,67065]"/>
  <match src="}: } [42442,42443]" dest="}: } [42726,42727]"/>
  <match src="uint256: uint256 [36824,36831]" dest="uint256: uint256 [37028,37035]"/>
  <match src="identifier: b [8460,8461]" dest="identifier: b [8510,8511]"/>
  <match src="identifier: amountToDeposit [50476,50491]" dest="identifier: depositedAmount [68372,68387]"/>
  <match src="call_expression [58722,58792]" dest="call_expression [63888,63958]"/>
  <match src="visibility [1896,1904]" dest="visibility [1946,1954]"/>
  <match src="state_variable_declaration [21794,21824]" dest="state_variable_declaration [21844,21874]"/>
  <match src="identifier: currencyBalance [53401,53416]" dest="identifier: currencyBalance [58793,58808]"/>
  <match src="mload: mload [18228,18233]" dest="mload: mload [18278,18283]"/>
  <match src="primitive_type [17512,17519]" dest="primitive_type [17562,17569]"/>
  <match src="call_expression [49932,49983]" dest="call_expression [55183,55234]"/>
  <match src="address: address [23690,23697]" dest="address: address [23740,23747]"/>
  <match src="comment: /**      * @dev Remove liquidity from curve      * @param yAmount amount of curve pool tokens      * @param minCurrencyAmount minimum amount of tokens to withdraw      */ [56015,56189]" dest="comment: /**      * @dev Remove liquidity from curve      * @param yAmount amount of curve pool tokens      * @param minCurrencyAmount minimum amount of tokens to withdraw      */ [61453,61627]"/>
  <match src="call_argument [47399,47418]" dest="call_argument [66143,66156]"/>
  <match src="call_expression [50458,50509]" dest="call_expression [68354,68405]"/>
  <match src="identifier: to [54963,54965]" dest="identifier: to [60392,60394]"/>
  <match src="(: ( [54031,54032]" dest="(: ( [59423,59424]"/>
  <match src="binary_expression [50409,50426]" dest="binary_expression [68305,68322]"/>
  <match src="type_name [46400,46407]" dest="type_name [48108,48115]"/>
  <match src="call_argument [54971,54993]" dest="call_argument [60400,60422]"/>
  <match src="virtual: virtual [31097,31104]" dest="virtual: virtual [31147,31154]"/>
  <match src="memory: memory [17209,17215]" dest="memory: memory [17259,17265]"/>
  <match src="number_literal: 999 [58365,58368]" dest="number_literal: 999 [63531,63534]"/>
  <match src="is: is [23501,23503]" dest="is: is [23551,23553]"/>
  <match src="parameter [36690,36707]" dest="parameter [36894,36911]"/>
  <match src="number_literal: 0 [60258,60259]" dest="number_literal: 0 [66446,66447]"/>
  <match src="function_definition [3273,3347]" dest="function_definition [3323,3397]"/>
  <match src="return_type_definition [26080,26094]" dest="return_type_definition [26130,26144]"/>
  <match src="identifier: a [8926,8927]" dest="identifier: a [8976,8977]"/>
  <match src="call_expression [31196,31245]" dest="call_expression [31246,31295]"/>
  <match src="user_defined_type [46768,46778]" dest="user_defined_type [48662,48672]"/>
  <match src="parameter [37089,37114]" dest="parameter [37293,37318]"/>
  <match src="view: view [25723,25727]" dest="view: view [25773,25777]"/>
  <match src="(: ( [30639,30640]" dest="(: ( [30689,30690]"/>
  <match src="&lt;=: &lt;= [53398,53400]" dest="&lt;=: &lt;= [58790,58792]"/>
  <match src="member_expression [28849,28887]" dest="member_expression [28899,28937]"/>
  <match src="call_expression [48290,48308]" dest="call_expression [52785,52803]"/>
  <match src="bytes: bytes [17248,17253]" dest="bytes: bytes [17298,17303]"/>
  <match src=",: , [54619,54620]" dest=",: , [60048,60049]"/>
  <match src="(: ( [36764,36765]" dest="(: ( [36968,36969]"/>
  <match src="identifier: b [7936,7937]" dest="identifier: b [7986,7987]"/>
  <match src="member_expression [27417,27454]" dest="member_expression [27467,27504]"/>
  <match src="internal: internal [9293,9301]" dest="internal: internal [9343,9351]"/>
  <match src="number_literal: 64 [41758,41760]" dest="number_literal: 64 [42042,42044]"/>
  <match src="internal: internal [8403,8411]" dest="internal: internal [8453,8461]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [41528,41531]" dest="&gt;&gt;=: &gt;&gt;= [41812,41815]"/>
  <match src="function_definition [24433,24516]" dest="function_definition [24483,24566]"/>
  <match src="identifier: currencyAmount [55557,55571]" dest="identifier: currencyAmount [60995,61009]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [31466,31892]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [31516,31942]"/>
  <match src="uint256: uint256 [40658,40665]" dest="uint256: uint256 [40942,40949]"/>
  <match src="contract_declaration [20286,21827]" dest="contract_declaration [20336,21877]"/>
  <match src="identifier: require [52266,52273]" dest="identifier: require [57394,57401]"/>
  <match src="identifier: _allowances [27417,27428]" dest="identifier: _allowances [27467,27478]"/>
  <match src="parameter [11634,11641]" dest="parameter [11684,11691]"/>
  <match src="type_name [1763,1770]" dest="type_name [1813,1820]"/>
  <match src="comment: /**      * @dev See {IERC20-balanceOf}.      */ [25616,25665]" dest="comment: /**      * @dev See {IERC20-balanceOf}.      */ [25666,25715]"/>
  <match src="expression_statement [58714,58794]" dest="expression_statement [63880,63960]"/>
  <match src="identifier: amountWithoutFee [56910,56926]" dest="identifier: fee [62356,62359]"/>
  <match src="member_expression [17775,17786]" dest="member_expression [17825,17836]"/>
  <match src="inheritance_specifier [43897,43912]" dest="inheritance_specifier [44644,44659]"/>
  <match src="member_expression [53318,53338]" dest="member_expression [58710,58730]"/>
  <match src="(: ( [36556,36557]" dest="(: ( [36760,36761]"/>
  <match src="call_argument [48096,48109]" dest="call_argument [52442,52455]"/>
  <match src="call_expression [57157,57174]" dest="call_expression [62488,62505]"/>
  <match src="visibility [2569,2577]" dest="visibility [2619,2627]"/>
  <match src="bytes: bytes [17748,17753]" dest="bytes: bytes [17798,17803]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [16272,16633]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [16322,16683]"/>
  <match src=",: , [2192,2193]" dest=",: , [2242,2243]"/>
  <match src="identifier: curveLiquidityAmountToTransfer [52220,52250]" dest="identifier: curveLiquidityAmountToTransfer [57348,57378]"/>
  <match src="member_expression [14772,14786]" dest="member_expression [14822,14836]"/>
  <match src="type_name [51087,51094]" dest="type_name [56057,56064]"/>
  <match src="parameter [37254,37272]" dest="parameter [37458,37476]"/>
  <match src="state_mutability [41017,41021]" dest="state_mutability [41301,41305]"/>
  <match src="external: external [38576,38584]" dest="external: external [38873,38881]"/>
  <match src="identifier: xc [41525,41527]" dest="identifier: xc [41809,41811]"/>
  <match src="&quot;: &quot; [31181,31182]" dest="&quot;: &quot; [31231,31232]"/>
  <match src="{: { [33426,33427]" dest="{: { [33476,33477]"/>
  <match src="return_type_definition [11625,11642]" dest="return_type_definition [11675,11692]"/>
  <match src="identifier: transfer [57576,57584]" dest="identifier: transfer [62751,62759]"/>
  <match src="number_literal: 0 [42342,42343]" dest="number_literal: 0 [42626,42627]"/>
  <match src="}: } [50520,50521]" dest="}: } [68416,68417]"/>
  <match src="call_argument [59964,59977]" dest="call_argument [65148,65161]"/>
  <match src="identifier: _msgSender [27403,27413]" dest="identifier: _msgSender [27453,27463]"/>
  <match src="return_statement [54140,54223]" dest="return_statement [59532,59615]"/>
  <match src="identifier: onlyLender [47534,47544]" dest="identifier: onlyLender [49419,49429]"/>
  <match src="event_paramater [4214,4237]" dest="event_paramater [4264,4287]"/>
  <match src="primitive_type [36520,36524]" dest="primitive_type [36724,36728]"/>
  <match src="address: address [34767,34774]" dest="address: address [34971,34978]"/>
  <match src=".: . [53048,53049]" dest=".: . [58440,58441]"/>
  <match src=",: , [29811,29812]" dest=",: , [29861,29862]"/>
  <match src="uint256: uint256 [42372,42379]" dest="uint256: uint256 [42656,42663]"/>
  <match src="identifier: joiningFee [50216,50226]" dest="identifier: joiningFee [55484,55494]"/>
  <match src="type_name [24674,24680]" dest="type_name [24724,24730]"/>
  <match src="number_literal: 10000 [54032,54037]" dest="number_literal: 10000 [59424,59429]"/>
  <match src="call_expression [48816,48831]" dest="call_expression [54068,54083]"/>
  <match src="(: ( [30344,30345]" dest="(: ( [30394,30395]"/>
  <match src="variable_declaration_statement [49156,49235]" dest="variable_declaration_statement [54407,54486]"/>
  <match src="(: ( [59705,59706]" dest="(: ( [64880,64881]"/>
  <match src="assignment_expression [47277,47292]" dest="assignment_expression [49302,49317]"/>
  <match src="(: ( [54903,54904]" dest="(: ( [60332,60333]"/>
  <match src="}: } [11110,11111]" dest="}: } [11160,11161]"/>
  <match src="address: address [29530,29537]" dest="address: address [29580,29587]"/>
  <match src="expression_statement [31358,31398]" dest="expression_statement [31408,31448]"/>
  <match src="string [15797,15829]" dest="string [15847,15879]"/>
  <match src="view: view [37398,37402]" dest="view: view [37602,37606]"/>
  <match src="primitive_type [16738,16743]" dest="primitive_type [16788,16793]"/>
  <match src="parameter [54654,54661]" dest="parameter [60083,60090]"/>
  <match src="=: = [47207,47208]" dest="=: = [49166,49167]"/>
  <match src="call_argument [61632,61645]" dest="call_argument [67881,67894]"/>
  <match src="memory: memory [24224,24230]" dest="memory: memory [24274,24280]"/>
  <match src="inline_array_expression [55547,55572]" dest="inline_array_expression [60985,61010]"/>
  <match src="(: ( [48518,48519]" dest="(: ( [53379,53380]"/>
  <match src="primitive_type [26573,26580]" dest="primitive_type [26623,26630]"/>
  <match src="return: return [11095,11101]" dest="return: return [11145,11151]"/>
  <match src="call_argument [14597,14628]" dest="call_argument [14647,14678]"/>
  <match src="member_expression [31373,31389]" dest="member_expression [31423,31439]"/>
  <match src="state_variable_declaration [23739,23768]" dest="state_variable_declaration [23789,23818]"/>
  <match src="): ) [58359,58360]" dest="): ) [63525,63526]"/>
  <match src="(: ( [38179,38180]" dest="(: ( [38383,38384]"/>
  <match src="}: } [21050,21051]" dest="}: } [21100,21101]"/>
  <match src="identifier: require [51994,52001]" dest="identifier: require [57122,57129]"/>
  <match src="identifier: amount [38972,38978]" dest="identifier: amount [39256,39262]"/>
  <match src="{: { [27328,27329]" dest="{: { [27378,27379]"/>
  <match src="external: external [51103,51111]" dest="external: external [56073,56081]"/>
  <match src="{: { [23535,23536]" dest="{: { [23585,23586]"/>
  <match src="identifier: _currencyToken [47305,47319]" dest="identifier: _stakeToken [66016,66027]"/>
  <match src="function: function [54579,54587]" dest="function: function [60008,60016]"/>
  <match src="primitive_type [49898,49905]" dest="primitive_type [55149,55156]"/>
  <match src="expression_statement [35893,35911]" dest="expression_statement [36097,36115]"/>
  <match src="identifier: _totalSupply [31373,31385]" dest="identifier: _totalSupply [31423,31435]"/>
  <match src="): ) [47830,47831]" dest="): ) [50659,50660]"/>
  <match src="call_argument [56989,57023]" dest="call_argument [68681,68697]"/>
  <match src="variable_declaration [20806,20825]" dest="variable_declaration [20856,20875]"/>
  <match src="): ) [6065,6066]" dest="): ) [6115,6116]"/>
  <match src="identifier: sender [53592,53598]" dest="identifier: sender [58984,58990]"/>
  <match src=",: , [49558,49559]" dest=",: , [54809,54810]"/>
  <match src="array_access [30617,30635]" dest="array_access [30667,30685]"/>
  <match src="&gt;=: &gt;= [41585,41587]" dest="&gt;=: &gt;= [41869,41871]"/>
  <match src="): ) [53562,53563]" dest="): ) [58954,58955]"/>
  <match src="state_mutability [37576,37580]" dest="state_mutability [37780,37784]"/>
  <match src="virtual: virtual [26063,26070]" dest="virtual: virtual [26113,26120]"/>
  <match src="(: ( [30577,30578]" dest="(: ( [30627,30628]"/>
  <match src="!=: != [35772,35774]" dest="!=: != [35976,35978]"/>
  <match src="): ) [29719,29720]" dest="): ) [29769,29770]"/>
  <match src="identifier: token [36992,36997]" dest="identifier: token [37196,37201]"/>
  <match src="(: ( [13525,13526]" dest="(: ( [13575,13576]"/>
  <match src="(: ( [52946,52947]" dest="(: ( [58338,58339]"/>
  <match src="identifier: _beforeTokenTransfer [31196,31216]" dest="identifier: _beforeTokenTransfer [31246,31266]"/>
  <match src="&quot;: &quot; [8494,8495]" dest="&quot;: &quot; [8544,8545]"/>
  <match src="address: address [36951,36958]" dest="address: address [37155,37162]"/>
  <match src="primitive_type [35501,35508]" dest="primitive_type [35705,35712]"/>
  <match src="{: { [56272,56273]" dest="{: { [61719,61720]"/>
  <match src="call_argument [57640,57650]" dest="call_argument [55771,55781]"/>
  <match src="identifier: min_mint_amount [37124,37139]" dest="identifier: min_mint_amount [37328,37343]"/>
  <match src="identifier: value [39132,39137]" dest="identifier: value [39416,39421]"/>
  <match src="): ) [54220,54221]" dest="): ) [59612,59613]"/>
  <match src="view: view [60716,60720]" dest="view: view [66965,66969]"/>
  <match src="type_name [54341,54348]" dest="type_name [59733,59740]"/>
  <match src="identifier: x [54448,54449]" dest="identifier: x [59840,59841]"/>
  <match src=",: , [8461,8462]" dest=",: , [8511,8512]"/>
  <match src="call_expression [16770,16857]" dest="call_expression [16820,16907]"/>
  <match src="binary_expression [31124,31145]" dest="binary_expression [31174,31195]"/>
  <match src="): ) [46932,46933]" dest="): ) [48891,48892]"/>
  <match src="): ) [26587,26588]" dest="): ) [26637,26638]"/>
  <match src="type_name [45697,45704]" dest="type_name [47405,47412]"/>
  <match src="return: return [17365,17371]" dest="return: return [17415,17421]"/>
  <match src="pure: pure [10905,10909]" dest="pure: pure [10955,10959]"/>
  <match src="address: address [31135,31142]" dest="address: address [31185,31192]"/>
  <match src=".: . [49889,49890]" dest=".: . [55140,55141]"/>
  <match src="): ) [57174,57175]" dest="): ) [62505,62506]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [3770,3933]" dest="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [3820,3983]"/>
  <match src="=: = [53906,53907]" dest="=: = [59298,59299]"/>
  <match src="identifier: _totalSupply [51352,51364]" dest="identifier: _totalSupply [56322,56334]"/>
  <match src="binary_expression [29616,29636]" dest="binary_expression [29666,29686]"/>
  <match src="identifier: nonReentrant [56946,56958]" dest="identifier: nonReentrant [62379,62391]"/>
  <match src="user_defined_type [38180,38186]" dest="user_defined_type [38384,38390]"/>
  <match src="call_argument [14630,14661]" dest="call_argument [14680,14711]"/>
  <match src="identifier: functionCallWithValue [16770,16791]" dest="identifier: functionCallWithValue [16820,16841]"/>
  <match src="external: external [2569,2577]" dest="external: external [2619,2627]"/>
  <match src="identifier: account [13175,13182]" dest="identifier: account [13225,13232]"/>
  <match src="}: } [17804,17805]" dest="}: } [17854,17855]"/>
  <match src="identifier: div [48330,48333]" dest="identifier: div [52825,52828]"/>
  <match src="call_argument [54091,54097]" dest="call_argument [59483,59489]"/>
  <match src="(: ( [31233,31234]" dest="(: ( [31283,31284]"/>
  <match src="identifier: calc_withdraw_one_coin [37333,37355]" dest="identifier: calc_withdraw_one_coin [37537,37559]"/>
  <match src="(: ( [41791,41792]" dest="(: ( [42075,42076]"/>
  <match src="=: = [49189,49190]" dest="=: = [54440,54441]"/>
  <match src="identifier: IERC20 [38180,38186]" dest="identifier: IERC20 [38384,38390]"/>
  <match src="(: ( [57250,57251]" dest="(: ( [62573,62574]"/>
  <match src="identifier: Repaid [58809,58815]" dest="identifier: Repaid [63975,63981]"/>
  <match src="user_defined_type [46801,46812]" dest="user_defined_type [48695,48706]"/>
  <match src="public: public [47794,47800]" dest="public: public [50623,50629]"/>
  <match src="type_name [28694,28701]" dest="type_name [28744,28751]"/>
  <match src="call_expression [52002,52063]" dest="call_expression [57130,57191]"/>
  <match src="call_expression [51994,52064]" dest="call_expression [57122,57192]"/>
  <match src="identifier: amountIn [59878,59886]" dest="identifier: amountIn [65062,65070]"/>
  <match src="primitive_type [39578,39585]" dest="primitive_type [39862,39869]"/>
  <match src="expression_statement [41172,41182]" dest="expression_statement [41456,41466]"/>
  <match src=",: , [35871,35872]" dest=",: , [36075,36076]"/>
  <match src="(: ( [26555,26556]" dest="(: ( [26605,26606]"/>
  <match src="call_argument [54043,54045]" dest="call_argument [59435,59437]"/>
  <match src="call_argument [49220,49233]" dest="call_argument [54471,54484]"/>
  <match src="identifier: N_TOKENS [60915,60923]" dest="identifier: N_TOKENS [67164,67172]"/>
  <match src="parameter [7928,7937]" dest="parameter [7978,7987]"/>
  <match src="(: ( [40718,40719]" dest="(: ( [41002,41003]"/>
  <match src="identifier: fee [50636,50639]" dest="identifier: fee [55606,55609]"/>
  <match src="type_name [44226,44236]" dest="type_name [44973,44983]"/>
  <match src="call_argument [54185,54201]" dest="call_argument [59577,59593]"/>
  <match src="primitive_type [31950,31957]" dest="primitive_type [32000,32007]"/>
  <match src="uint256: uint256 [3722,3729]" dest="uint256: uint256 [3772,3779]"/>
  <match src="call_argument [31431,31441]" dest="call_argument [31481,31491]"/>
  <match src="call_expression [59898,60005]" dest="call_expression [65082,65189]"/>
  <match src="emit: emit [60380,60384]" dest="emit: emit [66568,66572]"/>
  <match src="event_paramater [45113,45135]" dest="event_paramater [46821,46843]"/>
  <match src="function: function [21144,21152]" dest="function: function [21194,21202]"/>
  <match src="call_argument [58722,58792]" dest="call_argument [63888,63958]"/>
  <match src="type_name [37356,37363]" dest="type_name [37560,37567]"/>
  <match src="event: event [3939,3944]" dest="event: event [3989,3994]"/>
  <match src="): ) [24447,24448]" dest="): ) [24497,24498]"/>
  <match src="parameter [52644,52658]" dest="parameter [58031,58045]"/>
  <match src="(: ( [59846,59847]" dest="(: ( [65030,65031]"/>
  <match src="identifier: staker [45129,45135]" dest="identifier: staker [46837,46843]"/>
  <match src="returns: returns [8417,8424]" dest="returns: returns [8467,8474]"/>
  <match src="identifier: amount [60408,60414]" dest="identifier: amount [66596,66602]"/>
  <match src="function_body [28040,28164]" dest="function_body [28090,28214]"/>
  <match src="comment: /**      * @dev join pool      * 1. Transfer TUSD from sender      * 2. Mint pool tokens based on value to sender      */ [38196,38321]" dest="comment: /**      * @dev join pool      * 1. Transfer TUSD from sender      * 2. Mint pool tokens based on value to sender      */ [38493,38618]"/>
  <match src="(: ( [56315,56316]" dest="(: ( [61762,61763]"/>
  <match src="call_expression [56302,56317]" dest="call_expression [61749,61764]"/>
  <match src="identifier: ITrueLender [44333,44344]" dest="identifier: ITrueLender [45080,45091]"/>
  <match src="uint256: uint256 [36186,36193]" dest="uint256: uint256 [36390,36397]"/>
  <match src="variable_declaration [7982,7991]" dest="variable_declaration [8032,8041]"/>
  <match src="identifier: amount [52394,52400]" dest="identifier: amount [57713,57719]"/>
  <match src=",: , [10855,10856]" dest=",: , [10905,10906]"/>
  <match src="identifier: token [49943,49948]" dest="identifier: token [55194,55199]"/>
  <match src="]: ] [50678,50679]" dest="]: ] [55648,55649]"/>
  <match src="address: address [35501,35508]" dest="address: address [35705,35712]"/>
  <match src="): ) [61035,61036]" dest="): ) [67284,67285]"/>
  <match src="): ) [6523,6524]" dest="): ) [6573,6574]"/>
  <match src="expression_statement [17600,17661]" dest="expression_statement [17650,17711]"/>
  <match src="&gt;: &gt; [53257,53258]" dest="&gt;: &gt; [58649,58650]"/>
  <match src="identifier: IERC20 [37469,37475]" dest="identifier: IERC20 [37673,37679]"/>
  <match src="uint256: uint256 [23739,23746]" dest="uint256: uint256 [23789,23796]"/>
  <match src="): ) [56681,56682]" dest="): ) [62128,62129]"/>
  <match src="(: ( [20980,20981]" dest="(: ( [21030,21031]"/>
  <match src="{: { [15754,15755]" dest="{: { [15804,15805]"/>
  <match src="primitive_type [33343,33350]" dest="primitive_type [33393,33400]"/>
  <match src="(: ( [32633,32634]" dest="(: ( [32683,32684]"/>
  <match src="(: ( [53380,53381]" dest="(: ( [58772,58773]"/>
  <match src="identifier: errorMessage [12240,12252]" dest="identifier: errorMessage [12290,12302]"/>
  <match src="return_type_definition [54364,54381]" dest="return_type_definition [59756,59773]"/>
  <match src="(: ( [51533,51534]" dest="(: ( [56503,56504]"/>
  <match src="(: ( [25560,25561]" dest="(: ( [25610,25611]"/>
  <match src="primitive_type [47580,47587]" dest="primitive_type [49465,49472]"/>
  <match src="): ) [27374,27375]" dest="): ) [27424,27425]"/>
  <match src="variable_declaration_statement [13415,13428]" dest="variable_declaration_statement [13465,13478]"/>
  <match src="): ) [58211,58212]" dest="): ) [63377,63378]"/>
  <match src="call_argument [48290,48328]" dest="call_argument [52785,52823]"/>
  <match src="=: = [9626,9627]" dest="=: = [9676,9677]"/>
  <match src="parameter [29558,29572]" dest="parameter [29608,29622]"/>
  <match src="): ) [54753,54754]" dest="): ) [60182,60183]"/>
  <match src="(: ( [60729,60730]" dest="(: ( [66978,66979]"/>
  <match src="parameter [7962,7969]" dest="parameter [8012,8019]"/>
  <match src="number_literal: 127 [41806,41809]" dest="number_literal: 127 [42090,42093]"/>
  <match src="call_argument [58384,58391]" dest="call_argument [63550,63557]"/>
  <match src="]: ] [29977,29978]" dest="]: ] [30027,30028]"/>
  <match src="identifier: joiningFee [49621,49631]" dest="identifier: joiningFee [54872,54882]"/>
  <match src="function_body [33426,33428]" dest="function_body [33476,33478]"/>
  <match src="call_argument [31439,31440]" dest="call_argument [31489,31490]"/>
  <match src="expression_statement [52189,52252]" dest="expression_statement [57317,57380]"/>
  <match src="memory: memory [8849,8855]" dest="memory: memory [8899,8905]"/>
  <match src="state_variable_declaration [44298,44327]" dest="state_variable_declaration [45045,45074]"/>
  <match src="call_argument [53216,53222]" dest="call_argument [58608,58614]"/>
  <match src="(: ( [48475,48476]" dest="(: ( [53336,53337]"/>
  <match src="call_argument [54155,54160]" dest="call_argument [59547,59552]"/>
  <match src="(: ( [39162,39163]" dest="(: ( [39446,39447]"/>
  <match src="view: view [34753,34757]" dest="view: view [34957,34961]"/>
  <match src="primitive_type [17734,17738]" dest="primitive_type [17784,17788]"/>
  <match src="&quot;: &quot; [14660,14661]" dest="&quot;: &quot; [14710,14711]"/>
  <match src="uint256: uint256 [54341,54348]" dest="uint256: uint256 [59733,59740]"/>
  <match src=",: , [17414,17415]" dest=",: , [17464,17465]"/>
  <match src="return_type_definition [21182,21196]" dest="return_type_definition [21232,21246]"/>
  <match src="(: ( [48242,48243]" dest="(: ( [52665,52666]"/>
  <match src="identifier: amount [50813,50819]" dest="identifier: amount [62826,62832]"/>
  <match src="primitive_type [39599,39606]" dest="primitive_type [39883,39890]"/>
  <match src="): ) [61328,61329]" dest="): ) [67577,67578]"/>
  <match src="parameter [16090,16104]" dest="parameter [16140,16154]"/>
  <match src="}: } [52408,52409]" dest="}: } [57727,57728]"/>
  <match src="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [30716,31034]" dest="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [30766,31084]"/>
  <match src="comment: // pragma solidity 0.6.10; [39877,39903]" dest="comment: // pragma solidity 0.6.10; [40161,40187]"/>
  <match src="member_expression [48816,48829]" dest="member_expression [54068,54081]"/>
  <match src=",: , [10295,10296]" dest=",: , [10345,10346]"/>
  <match src="type_name [54607,54614]" dest="type_name [60036,60043]"/>
  <match src="): ) [26626,26627]" dest="): ) [26676,26677]"/>
  <match src="uint256: uint256 [16705,16712]" dest="uint256: uint256 [16755,16762]"/>
  <match src="comment: // No need to shift xc anymore [41686,41716]" dest="comment: // No need to shift xc anymore [41970,42000]"/>
  <match src="visibility [57748,57756]" dest="visibility [62914,62922]"/>
  <match src=",: , [59962,59963]" dest=",: , [65146,65147]"/>
  <match src="return: return [60977,60983]" dest="return: return [67226,67232]"/>
  <match src="expression_statement [14818,14897]" dest="expression_statement [14868,14947]"/>
  <match src="): ) [53222,53223]" dest="): ) [58614,58615]"/>
  <match src="]: ] [27449,27450]" dest="]: ] [27499,27500]"/>
  <match src="bool: bool [20806,20810]" dest="bool: bool [20856,20860]"/>
  <match src="): ) [26147,26148]" dest="): ) [26197,26198]"/>
  <match src="member_expression [48270,48289]" dest="member_expression [52765,52784]"/>
  <match src=".: . [28117,28118]" dest=".: . [28167,28168]"/>
  <match src="): ) [60414,60415]" dest="): ) [66602,66603]"/>
  <match src="&quot;: &quot; [47002,47003]" dest="&quot;: &quot; [48961,48962]"/>
  <match src="parameter [46801,46825]" dest="parameter [48695,48719]"/>
  <match src="identifier: data [19406,19410]" dest="identifier: data [19456,19460]"/>
  <match src="identifier: amount [2202,2208]" dest="identifier: amount [2252,2258]"/>
  <match src=",: , [46825,46826]" dest=",: , [48719,48720]"/>
  <match src="expression_statement [56283,56371]" dest="expression_statement [61730,61818]"/>
  <match src="address: address [34520,34527]" dest="address: address [34724,34731]"/>
  <match src="(: ( [49494,49495]" dest="(: ( [54745,54746]"/>
  <match src="number_literal: 0 [30513,30514]" dest="number_literal: 0 [30563,30564]"/>
  <match src="=&gt;: =&gt; [44580,44582]" dest="=&gt;: =&gt; [45327,45329]"/>
  <match src="identifier: _currencyToken [44312,44326]" dest="identifier: _currencyToken [45059,45073]"/>
  <match src="internal: internal [16720,16728]" dest="internal: internal [16770,16778]"/>
  <match src="uint256: uint256 [31976,31983]" dest="uint256: uint256 [32026,32033]"/>
  <match src="identifier: token [56510,56515]" dest="identifier: token [61957,61962]"/>
  <match src="call_argument [50232,50237]" dest="call_argument [55500,55505]"/>
  <match src="expression_statement [30406,30472]" dest="expression_statement [30456,30522]"/>
  <match src="return_type_definition [24665,24688]" dest="return_type_definition [24715,24738]"/>
  <match src="identifier: onlyOwner [35415,35424]" dest="identifier: onlyOwner [35619,35628]"/>
  <match src="identifier: approve [49829,49836]" dest="identifier: approve [55080,55087]"/>
  <match src="&quot;: &quot; [14804,14805]" dest="&quot;: &quot; [14854,14855]"/>
  <match src="(: ( [51699,51700]" dest="(: ( [56669,56670]"/>
  <match src="state_mutability [24660,24664]" dest="state_mutability [24710,24714]"/>
  <match src=".: . [52942,52943]" dest=".: . [58334,58335]"/>
  <match src="!=: != [32040,32042]" dest="!=: != [32090,32092]"/>
  <match src="binary_expression [10947,10952]" dest="binary_expression [10997,11002]"/>
  <match src="comment: /**  * Smart contract library of mathematical functions operating with signed  * 64.64-bit fixed point numbers.  Signed 64.64-bit fixed point number is  * basically a simple fraction whose numerator is signed 128-bit integer and  * denominator is 2^64.  As long as denominator is always the same, there is no  * need to store it, thus in Solidity signed 64.64-bit fixed point numbers are  * represented by int128 type holding only the numerator.  */ [39907,40363]" dest="comment: /**  * Smart contract library of mathematical functions operating with signed  * 64.64-bit fixed point numbers.  Signed 64.64-bit fixed point number is  * basically a simple fraction whose numerator is signed 128-bit integer and  * denominator is 2^64.  As long as denominator is always the same, there is no  * need to store it, thus in Solidity signed 64.64-bit fixed point numbers are  * represented by int128 type holding only the numerator.  */ [40191,40647]"/>
  <match src="{: { [24689,24690]" dest="{: { [24739,24740]"/>
  <match src="identifier: msb [41464,41467]" dest="identifier: msb [41748,41751]"/>
  <match src="pure: pure [54640,54644]" dest="pure: pure [60069,60073]"/>
  <match src="): ) [28132,28133]" dest="): ) [28182,28183]"/>
  <match src="type_name [10229,10236]" dest="type_name [10279,10286]"/>
  <match src="call_expression [50618,50640]" dest="call_expression [55588,55610]"/>
  <match src="}: } [42065,42066]" dest="}: } [42349,42350]"/>
  <match src="return_type_definition [36177,36194]" dest="return_type_definition [36381,36398]"/>
  <match src="): ) [41063,41064]" dest="): ) [41347,41348]"/>
  <match src="member_expression [51654,51699]" dest="member_expression [56624,56669]"/>
  <match src="address: address [31926,31933]" dest="address: address [31976,31983]"/>
  <match src="identifier: name [24231,24235]" dest="identifier: name [24281,24285]"/>
  <match src="(: ( [58769,58770]" dest="(: ( [63935,63936]"/>
  <match src="identifier: yAmount [56547,56554]" dest="identifier: yAmount [61994,62001]"/>
  <match src="identifier: add [48521,48524]" dest="identifier: add [53382,53385]"/>
  <match src="&quot;: &quot; [16813,16814]" dest="&quot;: &quot; [16863,16864]"/>
  <match src="return_type_definition [37460,37476]" dest="return_type_definition [37664,37680]"/>
  <match src="event: event [45684,45689]" dest="event: event [47392,47397]"/>
  <match src="number_literal: 1000 [58374,58378]" dest="number_literal: 1000 [63540,63544]"/>
  <match src="binary_expression [8965,8970]" dest="binary_expression [9015,9020]"/>
  <match src=",: , [17491,17492]" dest=",: , [17541,17542]"/>
  <match src="contract: contract [43854,43862]" dest="contract: contract [44601,44609]"/>
  <match src="variable_declaration [41102,41111]" dest="variable_declaration [41386,41395]"/>
  <match src="member_expression [57863,57910]" dest="member_expression [63029,63076]"/>
  <match src="): ) [41424,41425]" dest="): ) [41708,41709]"/>
  <match src="private: private [20402,20409]" dest="private: private [20452,20459]"/>
  <match src="visibility [44273,44279]" dest="visibility [45020,45026]"/>
  <match src="primitive_type [59857,59864]" dest="primitive_type [65041,65048]"/>
  <match src="comment: /**      * @dev Exit pool only with liquid tokens      * This function will withdraw TUSD but with a small penalty      * @param amount amount of pool tokens to redeem for underlying tokens      */ [52417,52618]" dest="comment: // allow pausing of deposits [45773,45801]"/>
  <match src="identifier: minMintAmount [55719,55732]" dest="identifier: minMintAmount [61157,61170]"/>
  <match src="): ) [52793,52794]" dest="): ) [58185,58186]"/>
  <match src="comment: // Dependency file: contracts/truefi/interface/IYToken.sol [35927,35985]" dest="comment: // Dependency file: contracts/truefi/interface/IYToken.sol [36131,36189]"/>
  <match src="identifier: _balances [30596,30605]" dest="identifier: _balances [30646,30655]"/>
  <match src="call_argument [57216,57253]" dest="call_argument [62547,62576]"/>
  <match src="variable_declaration_statement [41923,41945]" dest="variable_declaration_statement [42207,42229]"/>
  <match src="constructor: constructor [6052,6063]" dest="constructor: constructor [6102,6113]"/>
  <match src="identifier: _curvePool [56566,56576]" dest="identifier: _curvePool [62013,62023]"/>
  <match src="(: ( [60684,60685]" dest="(: ( [66933,66934]"/>
  <match src="yul_identifier [18234,18244]" dest="yul_identifier [18284,18294]"/>
  <match src="=&gt;: =&gt; [23679,23681]" dest="=&gt;: =&gt; [23729,23731]"/>
  <match src="identifier: require [17600,17607]" dest="identifier: require [17650,17657]"/>
  <match src="primitive_type [46400,46407]" dest="primitive_type [48108,48115]"/>
  <match src="identifier: fee [50199,50202]" dest="identifier: fee [55467,55470]"/>
  <match src="identifier: currentlyAvailableAmount [49249,49273]" dest="identifier: currentlyAvailableAmount [54500,54524]"/>
  <match src="call_argument [26662,26669]" dest="call_argument [26712,26719]"/>
  <match src="identifier: value [4247,4252]" dest="identifier: value [4297,4302]"/>
  <match src="identifier: recipient [29538,29547]" dest="identifier: recipient [29588,29597]"/>
  <match src="&gt;: &gt; [17989,17990]" dest="&gt;: &gt; [18039,18040]"/>
  <match src="call_argument [28827,28834]" dest="call_argument [28877,28884]"/>
  <match src="string_literal [17628,17659]" dest="string_literal [17678,17709]"/>
  <match src="(: ( [49905,49906]" dest="(: ( [55156,55157]"/>
  <match src="identifier: JoiningFeeChanged [44860,44877]" dest="identifier: JoiningFeeChanged [46568,46585]"/>
  <match src="number_literal: 2 [54476,54477]" dest="number_literal: 2 [59868,59869]"/>
  <match src="primitive_type [59716,59723]" dest="primitive_type [64891,64898]"/>
  <match src="internal: internal [7939,7947]" dest="internal: internal [7989,7997]"/>
  <match src="emit_statement [35436,35482]" dest="emit_statement [35640,35686]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [10345,10827]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [10395,10877]"/>
  <match src="parameter [36951,36964]" dest="parameter [37155,37168]"/>
  <match src="type_name [37203,37210]" dest="type_name [37407,37414]"/>
  <match src="string_literal [47002,47010]" dest="string_literal [48961,48969]"/>
  <match src="identifier: remove_liquidity_one_coin [58414,58439]" dest="identifier: remove_liquidity_one_coin [63580,63605]"/>
  <match src="external: external [39140,39148]" dest="external: external [39424,39432]"/>
  <match src="call_expression [50409,50422]" dest="call_expression [68305,68318]"/>
  <match src="identifier: msb [41631,41634]" dest="identifier: msb [41915,41918]"/>
  <match src="call_expression [60311,60355]" dest="call_expression [66499,66543]"/>
  <match src="&gt;: &gt; [52169,52170]" dest="&gt;: &gt; [57297,57298]"/>
  <match src="type_name [4214,4221]" dest="type_name [4264,4271]"/>
  <match src="identifier: sub [8377,8380]" dest="identifier: sub [8427,8430]"/>
  <match src="return: return [11654,11660]" dest="return: return [11704,11710]"/>
  <match src="string [47002,47010]" dest="string [48961,48969]"/>
  <match src="identifier: transfer [52017,52025]" dest="identifier: transfer [57145,57153]"/>
  <match src="identifier: account [30517,30524]" dest="identifier: account [30567,30574]"/>
  <match src="parameter [3687,3701]" dest="parameter [3737,3751]"/>
  <match src="call_argument [35787,35827]" dest="call_argument [35991,36031]"/>
  <match src="}: } [60012,60013]" dest="}: } [65196,65197]"/>
  <match src="primitive_type [40998,41004]" dest="primitive_type [41282,41288]"/>
  <match src="call_argument [60861,60871]" dest="call_argument [67110,67120]"/>
  <match src="emit_statement [49648,49676]" dest="emit_statement [54899,54927]"/>
  <match src="public: public [34746,34752]" dest="public: public [34950,34956]"/>
  <match src="call_expression [49871,49921]" dest="call_expression [55122,55172]"/>
  <match src="): ) [49134,49135]" dest="): ) [54385,54386]"/>
  <match src="identifier: sender [27395,27401]" dest="identifier: sender [27445,27451]"/>
  <match src="comment: /**      * @dev Leaves the contract without owner. It will not be possible to call      * `onlyOwner` functions anymore. Can only be called by the current owner.      *      * NOTE: Renouncing ownership will leave the contract without an owner,      * thereby removing any functionality that is only available to the owner.      */ [35028,35365]" dest="comment: /**      * @dev Leaves the contract without owner. It will not be possible to call      * `onlyOwner` functions anymore. Can only be called by the current owner.      *      * NOTE: Renouncing ownership will leave the contract without an owner,      * thereby removing any functionality that is only available to the owner.      */ [35232,35569]"/>
  <match src="(: ( [17574,17575]" dest="(: ( [17624,17625]"/>
  <match src="function_body [56970,57680]" dest="function_body [62403,62846]"/>
  <match src="identifier: initialized [20921,20932]" dest="identifier: initialized [20971,20982]"/>
  <match src="identifier: transfer [60326,60334]" dest="identifier: transfer [66514,66522]"/>
  <match src="function: function [50132,50140]" dest="function: function [55383,55391]"/>
  <match src="return_type_definition [37403,37420]" dest="return_type_definition [37607,37624]"/>
  <match src="public: public [25531,25537]" dest="public: public [25581,25587]"/>
  <match src="identifier: div [50493,50496]" dest="identifier: div [68389,68392]"/>
  <match src="identifier: a [11597,11598]" dest="identifier: a [11647,11648]"/>
  <match src="): ) [47976,47977]" dest="): ) [52322,52323]"/>
  <match src="returns: returns [2583,2590]" dest="returns: returns [2633,2640]"/>
  <match src="external: external [36767,36775]" dest="external: external [36971,36979]"/>
  <match src="identifier: size [13506,13510]" dest="identifier: size [13556,13560]"/>
  <match src="{: { [17262,17263]" dest="{: { [17312,17313]"/>
  <match src="(: ( [37411,37412]" dest="(: ( [37615,37616]"/>
  <match src="(: ( [20673,20674]" dest="(: ( [20723,20724]"/>
  <match src="parameter [54607,54619]" dest="parameter [60036,60048]"/>
  <match src="parameter [36824,36838]" dest="parameter [37028,37042]"/>
  <match src="call_argument [52813,52844]" dest="call_argument [58205,58236]"/>
  <match src="identifier: __ERC20_initialize [24198,24216]" dest="identifier: __ERC20_initialize [24248,24266]"/>
  <match src="identifier: require [8913,8920]" dest="identifier: require [8963,8970]"/>
  <match src="): ) [47010,47011]" dest="): ) [48969,48970]"/>
  <match src="): ) [44892,44893]" dest="): ) [46600,46601]"/>
  <match src="type_cast_expression [40761,40776]" dest="type_cast_expression [41045,41060]"/>
  <match src="parameter [21191,21195]" dest="parameter [21241,21245]"/>
  <match src="call_argument [53339,53356]" dest="call_argument [58731,58748]"/>
  <match src="address: address [27239,27246]" dest="address: address [27289,27296]"/>
  <match src=",: , [39502,39503]" dest=",: , [39786,39787]"/>
  <match src=",: , [43888,43889]" dest=",: , [44635,44636]"/>
  <match src="primitive_type [31135,31142]" dest="primitive_type [31185,31192]"/>
  <match src="): ) [44590,44591]" dest="): ) [45337,45338]"/>
  <match src="using_directive [23575,23601]" dest="using_directive [23625,23651]"/>
  <match src="!=: != [29707,29709]" dest="!=: != [29757,29759]"/>
  <match src="identifier: add [7913,7916]" dest="identifier: add [7963,7966]"/>
  <match src="): ) [46007,46008]" dest="): ) [47715,47716]"/>
  <match src="identifier: div [60826,60829]" dest="identifier: div [67075,67078]"/>
  <match src="return: return [47843,47849]" dest="return: return [50672,50678]"/>
  <match src="): ) [14567,14568]" dest="): ) [14617,14618]"/>
  <match src="function_definition [36131,36195]" dest="function_definition [36335,36399]"/>
  <match src="parameter [17168,17185]" dest="parameter [17218,17235]"/>
  <match src="identifier: path [39563,39567]" dest="identifier: path [39847,39851]"/>
  <match src="parameter [3756,3760]" dest="parameter [3806,3810]"/>
  <match src="call_argument [52833,52843]" dest="call_argument [58225,58235]"/>
  <match src="virtual: virtual [26596,26603]" dest="virtual: virtual [26646,26653]"/>
  <match src="call_argument [27357,27366]" dest="call_argument [27407,27416]"/>
  <match src="(: ( [52832,52833]" dest="(: ( [58224,58225]"/>
  <match src="=: = [24351,24352]" dest="=: = [24401,24402]"/>
  <match src="): ) [58338,58339]" dest="): ) [63504,63505]"/>
  <match src="string_literal [27463,27505]" dest="string_literal [27513,27555]"/>
  <match src="function_definition [37158,37316]" dest="function_definition [37362,37520]"/>
  <match src="(: ( [49248,49249]" dest="(: ( [54499,54500]"/>
  <match src="identifier: _ [47655,47656]" dest="identifier: _ [49533,49534]"/>
  <match src="uint256: uint256 [36493,36500]" dest="uint256: uint256 [36697,36704]"/>
  <match src="{: { [41510,41511]" dest="{: { [41794,41795]"/>
  <match src="type_name [9616,9623]" dest="type_name [9666,9673]"/>
  <match src="return_statement [54878,54918]" dest="return_statement [60307,60347]"/>
  <match src="expression_statement [60242,60260]" dest="expression_statement [66430,66448]"/>
  <match src="(: ( [37524,37525]" dest="(: ( [37728,37729]"/>
  <match src="address: address [1879,1886]" dest="address: address [1929,1936]"/>
  <match src="}: } [41398,41399]" dest="}: } [41682,41683]"/>
  <match src=".: . [58379,58380]" dest=".: . [63545,63546]"/>
  <match src="identifier: recipient [26029,26038]" dest="identifier: recipient [26079,26088]"/>
  <match src=",: , [14628,14629]" dest=",: , [14678,14679]"/>
  <match src="primitive_type [48771,48778]" dest="primitive_type [53631,53638]"/>
  <match src="identifier: amounts [37107,37114]" dest="identifier: amounts [37311,37318]"/>
  <match src="}: } [61656,61657]" dest="}: } [68718,68719]"/>
  <match src="identifier: msg [19402,19405]" dest="identifier: msg [19452,19455]"/>
  <match src="function_definition [12191,12357]" dest="function_definition [12241,12407]"/>
  <match src="expression_statement [47170,47189]" dest="expression_statement [49129,49148]"/>
  <match src="identifier: amount [50154,50160]" dest="identifier: amount [55405,55411]"/>
  <match src="&gt;&gt;: &gt;&gt; [42428,42430]" dest="&gt;&gt;: &gt;&gt; [42712,42714]"/>
  <match src="function_definition [56195,56690]" dest="function_definition [61633,62137]"/>
  <match src="): ) [17992,17993]" dest="): ) [18042,18043]"/>
  <match src="=: = [53869,53870]" dest="=: = [59261,59262]"/>
  <match src="call_argument [61391,61401]" dest="call_argument [67640,67650]"/>
  <match src="comment: // Booleans are more expensive than uint256 or any type that takes up a full [5167,5243]" dest="comment: // Booleans are more expensive than uint256 or any type that takes up a full [5217,5293]"/>
  <match src="parameter [36785,36797]" dest="parameter [36989,37001]"/>
  <match src="&quot;: &quot; [17352,17353]" dest="&quot;: &quot; [17402,17403]"/>
  <match src="identifier: require [35755,35762]" dest="identifier: require [35959,35966]"/>
  <match src="parameter [49114,49134]" dest="parameter [54365,54385]"/>
  <match src="internal: internal [10240,10248]" dest="internal: internal [10290,10298]"/>
  <match src="&quot;: &quot; [32136,32137]" dest="&quot;: &quot; [32186,32187]"/>
  <match src="primitive_type [60150,60157]" dest="primitive_type [66329,66336]"/>
  <match src="[: [ [55519,55520]" dest="[: [ [60957,60958]"/>
  <match src=",: , [57023,57024]" dest=",: , [68697,68698]"/>
  <match src="(: ( [1762,1763]" dest="(: ( [1812,1813]"/>
  <match src="internal: internal [13184,13192]" dest="internal: internal [13234,13242]"/>
  <match src="parameter [41031,41037]" dest="parameter [41315,41321]"/>
  <match src="parameter [53801,53815]" dest="parameter [59193,59207]"/>
  <match src="return: return [13546,13552]" dest="return: return [13596,13602]"/>
  <match src="comment: // Dependency file: contracts/truefi/Log.sol [39676,39720]" dest="comment: // Dependency file: contracts/truefi/Log.sol [39960,40004]"/>
  <match src="function_definition [49472,49683]" dest="function_definition [54723,54934]"/>
  <match src="call_argument [53053,53058]" dest="call_argument [58445,58450]"/>
  <match src="address: address [45337,45344]" dest="address: address [47045,47052]"/>
  <match src="identifier: yTokenBalance [57960,57973]" dest="identifier: yTokenBalance [63126,63139]"/>
  <match src="identifier: approve [55879,55886]" dest="identifier: approve [61317,61324]"/>
  <match src="identifier: amount [14561,14567]" dest="identifier: amount [14611,14617]"/>
  <match src="return_statement [24496,24509]" dest="return_statement [24546,24559]"/>
  <match src="identifier: add [48070,48073]" dest="identifier: add [52416,52419]"/>
  <match src="primitive_type [54373,54380]" dest="primitive_type [59765,59772]"/>
  <match src="(: ( [45531,45532]" dest="(: ( [47239,47240]"/>
  <match src="type_name [52644,52651]" dest="type_name [58031,58038]"/>
  <match src="function_definition [40640,40784]" dest="function_definition [40924,41068]"/>
  <match src="visibility [49508,49516]" dest="visibility [54759,54767]"/>
  <match src="state_variable_declaration [23609,23655]" dest="state_variable_declaration [23659,23705]"/>
  <match src="primitive_type [3976,3983]" dest="primitive_type [4026,4033]"/>
  <match src="primitive_type [39544,39551]" dest="primitive_type [39828,39835]"/>
  <match src="expression_statement [41441,41450]" dest="expression_statement [41725,41734]"/>
  <match src="string_literal [30437,30470]" dest="string_literal [30487,30520]"/>
  <match src="): ) [50774,50775]" dest="): ) [55744,55745]"/>
  <match src="function_body [60739,61044]" dest="function_body [66988,67293]"/>
  <match src="visibility [33409,33417]" dest="visibility [33459,33467]"/>
  <match src="function: function [24635,24643]" dest="function: function [24685,24693]"/>
  <match src="returns: returns [16729,16736]" dest="returns: returns [16779,16786]"/>
  <match src="function_definition [31040,31458]" dest="function_definition [31090,31508]"/>
  <match src="member_expression [19402,19410]" dest="member_expression [19452,19460]"/>
  <match src="address: address [32043,32050]" dest="address: address [32093,32100]"/>
  <match src="identifier: fee [57451,57454]" dest="identifier: balance [53016,53023]"/>
  <match src="primitive_type [23803,23809]" dest="primitive_type [23853,23859]"/>
  <match src="binary_expression [41966,41973]" dest="binary_expression [42250,42257]"/>
  <match src="yul_function_call [13514,13534]" dest="yul_function_call [13564,13584]"/>
  <match src="return: return [17850,17856]" dest="return: return [17900,17906]"/>
  <match src="variable_declaration_statement [21562,21591]" dest="variable_declaration_statement [21612,21641]"/>
  <match src="member_expression [48026,48042]" dest="member_expression [52372,52388]"/>
  <match src="memory: memory [15709,15715]" dest="memory: memory [15759,15765]"/>
  <match src=".: . [17781,17782]" dest=".: . [17831,17832]"/>
  <match src="call_argument [60395,60406]" dest="call_argument [66583,66594]"/>
  <match src="identifier: transferFrom [50728,50740]" dest="identifier: transferFrom [55698,55710]"/>
  <match src="number_literal: 64 [41751,41753]" dest="number_literal: 64 [42035,42037]"/>
  <match src="revert_statement [18370,18391]" dest="revert_statement [18420,18441]"/>
  <match src="visibility [54352,54358]" dest="visibility [59744,59750]"/>
  <match src="interface_declaration [38061,38992]" dest="interface_declaration [38265,39276]"/>
  <match src=",: , [58240,58241]" dest=",: , [63406,63407]"/>
  <match src="number_literal: 8 [41448,41449]" dest="number_literal: 8 [41732,41733]"/>
  <match src="identifier: totalSupply [52947,52958]" dest="identifier: totalSupply [58339,58350]"/>
  <match src="address: address [48055,48062]" dest="address: address [52401,52408]"/>
  <match src="uint256: uint256 [52892,52899]" dest="uint256: uint256 [58284,58291]"/>
  <match src="binary_expression [41231,41248]" dest="binary_expression [41515,41532]"/>
  <match src=".: . [48069,48070]" dest=".: . [52415,52416]"/>
  <match src="(: ( [49844,49845]" dest="(: ( [55095,55096]"/>
  <match src="primitive_type [38341,38348]" dest="primitive_type [38638,38645]"/>
  <match src="(: ( [21584,21585]" dest="(: ( [21634,21635]"/>
  <match src="&quot;: &quot; [29638,29639]" dest="&quot;: &quot; [29688,29689]"/>
  <match src="identifier: amountOutMin [59944,59956]" dest="identifier: amountOutMin [65128,65140]"/>
  <match src="user_defined_type [34214,34227]" dest="user_defined_type [34418,34431]"/>
  <match src="identifier: newOwner [35709,35717]" dest="identifier: newOwner [35913,35921]"/>
  <match src="member_expression [54448,54453]" dest="member_expression [59840,59845]"/>
  <match src="identifier: repay [38958,38963]" dest="identifier: repay [39242,39247]"/>
  <match src="call_argument [58440,58461]" dest="call_argument [63606,63627]"/>
  <match src="identifier: data [16234,16238]" dest="identifier: data [16284,16288]"/>
  <match src="parameter [16705,16718]" dest="parameter [16755,16768]"/>
  <match src="member_expression [54904,54912]" dest="member_expression [60333,60341]"/>
  <match src="(: ( [26115,26116]" dest="(: ( [26165,26166]"/>
  <match src="{: { [21631,21632]" dest="{: { [21681,21682]"/>
  <match src="(: ( [32033,32034]" dest="(: ( [32083,32084]"/>
  <match src="(: ( [53052,53053]" dest="(: ( [58444,58445]"/>
  <match src="identifier: _totalSupply [25588,25600]" dest="identifier: _totalSupply [25638,25650]"/>
  <match src="function_body [48485,48547]" dest="function_body [53346,53408]"/>
  <match src="identifier: ITrueLender [46869,46880]" dest="identifier: ITrueLender [48763,48774]"/>
  <match src="): ) [34962,34963]" dest="): ) [35166,35167]"/>
  <match src="string [31310,31346]" dest="string [31360,31396]"/>
  <match src="*: * [9630,9631]" dest="*: * [9680,9681]"/>
  <match src="primitive_type [54400,54407]" dest="primitive_type [59792,59799]"/>
  <match src="return: return [15763,15769]" dest="return: return [15813,15819]"/>
  <match src="&gt;=: &gt;= [14619,14621]" dest="&gt;=: &gt;= [14669,14671]"/>
  <match src="number_literal: 50 [54454,54456]" dest="number_literal: 50 [59846,59848]"/>
  <match src="expression_statement [58403,58493]" dest="expression_statement [63569,63659]"/>
  <match src=".: . [49828,49829]" dest=".: . [55079,55080]"/>
  <match src="expression_statement [47127,47160]" dest="expression_statement [49086,49119]"/>
  <match src="primitive_type [59743,59750]" dest="primitive_type [64918,64925]"/>
  <match src="override_specifier [50171,50179]" dest="override_specifier [55422,55430]"/>
  <match src="identifier: data [16119,16123]" dest="identifier: data [16169,16173]"/>
  <match src="identifier: a [12344,12345]" dest="identifier: a [12394,12395]"/>
  <match src="(: ( [54447,54448]" dest="(: ( [59839,59840]"/>
  <match src="override_specifier [47801,47809]" dest="override_specifier [50630,50638]"/>
  <match src="parameter [2592,2599]" dest="parameter [2642,2649]"/>
  <match src="state_mutability [48462,48466]" dest="state_mutability [53323,53327]"/>
  <match src="}: } [9603,9604]" dest="}: } [9653,9654]"/>
  <match src="identifier: ensureEnoughTokensAreAvailable [52189,52219]" dest="identifier: ensureEnoughTokensAreAvailable [57317,57347]"/>
  <match src="visibility [24653,24659]" dest="visibility [24703,24709]"/>
  <match src="identifier: liquidRatioBefore [54005,54022]" dest="identifier: liquidRatioBefore [59397,59414]"/>
  <match src="identifier: amount [31080,31086]" dest="identifier: amount [31130,31136]"/>
  <match src="=: = [32681,32682]" dest="=: = [32731,32732]"/>
  <match src="identifier: msb [41812,41815]" dest="identifier: msb [42096,42099]"/>
  <match src="string [32136,32172]" dest="string [32186,32222]"/>
  <match src="(: ( [54464,54465]" dest="(: ( [59856,59857]"/>
  <match src="type_name [39641,39650]" dest="type_name [39925,39934]"/>
  <match src="identifier: Ownable [34203,34210]" dest="identifier: Ownable [34407,34414]"/>
  <match src="return_statement [12337,12350]" dest="return_statement [12387,12400]"/>
  <match src="returns: returns [12268,12275]" dest="returns: returns [12318,12325]"/>
  <match src="uint256: uint256 [9616,9623]" dest="uint256: uint256 [9666,9673]"/>
  <match src="type_name [44693,44698]" dest="type_name [45920,45925]"/>
  <match src="return_type_definition [25728,25745]" dest="return_type_definition [25778,25795]"/>
  <match src="external: external [36603,36611]" dest="external: external [36807,36815]"/>
  <match src="struct_expression [14772,14803]" dest="struct_expression [14822,14853]"/>
  <match src="{: { [25408,25409]" dest="{: { [25458,25459]"/>
  <match src="identifier: value [17788,17793]" dest="identifier: value [17838,17843]"/>
  <match src="public: public [27289,27295]" dest="public: public [27339,27345]"/>
  <match src="identifier: sender [58820,58826]" dest="identifier: sender [63986,63992]"/>
  <match src="): ) [52959,52960]" dest="): ) [58351,58352]"/>
  <match src="uint256: uint256 [31072,31079]" dest="uint256: uint256 [31122,31129]"/>
  <match src="function_definition [61511,61654]" dest="function_definition [67760,67903]"/>
  <match src="call_argument [53030,53046]" dest="call_argument [58422,58438]"/>
  <match src="expression_statement [41050,41065]" dest="expression_statement [41334,41349]"/>
  <match src="parameter [31976,31990]" dest="parameter [32026,32040]"/>
  <match src="identifier: ICurvePool [44226,44236]" dest="identifier: ICurvePool [44973,44983]"/>
  <match src="(: ( [36874,36875]" dest="(: ( [37078,37079]"/>
  <match src="primitive_type [30672,30679]" dest="primitive_type [30722,30729]"/>
  <match src="function_definition [38546,38585]" dest="function_definition [38843,38882]"/>
  <match src="identifier: add [54450,54453]" dest="identifier: add [59842,59845]"/>
  <match src="expression_statement [58988,59023]" dest="expression_statement [64163,64198]"/>
  <match src="[: [ [21801,21802]" dest="[: [ [21851,21852]"/>
  <match src=".: . [52735,52736]" dest=".: . [58127,58128]"/>
  <match src="&quot;: &quot; [29883,29884]" dest="&quot;: &quot; [29933,29934]"/>
  <match src="]: ] [32212,32213]" dest="]: ] [32262,32263]"/>
  <match src="comment: /**      * @dev Get total balance of curve.fi pool tokens      */ [47880,47947]" dest="comment: // cache values during sync for gas optimization [45397,45445]"/>
  <match src="uint256: uint256 [21794,21801]" dest="uint256: uint256 [21844,21851]"/>
  <match src="type_name [46869,46880]" dest="type_name [48763,48774]"/>
  <match src="state_variable_declaration [44400,44433]" dest="state_variable_declaration [45147,45180]"/>
  <match src="primitive_type [3341,3345]" dest="primitive_type [3391,3395]"/>
  <match src="call_argument [53545,53561]" dest="call_argument [58937,58953]"/>
  <match src="): ) [57368,57369]" dest="): ) [62683,62684]"/>
  <match src="string [9664,9699]" dest="string [9714,9749]"/>
  <match src="identifier: amount [31443,31449]" dest="identifier: amount [31493,31499]"/>
  <match src="identifier: amount [14795,14801]" dest="identifier: amount [14845,14851]"/>
  <match src="(: ( [19090,19091]" dest="(: ( [19140,19141]"/>
  <match src="expression_statement [55685,55734]" dest="expression_statement [61123,61172]"/>
  <match src="function: function [54315,54323]" dest="function: function [59707,59715]"/>
  <match src="call_argument [54103,54108]" dest="call_argument [59495,59500]"/>
  <match src="(: ( [56877,56878]" dest="(: ( [62331,62332]"/>
  <match src="(: ( [29793,29794]" dest="(: ( [29843,29844]"/>
  <match src="call_expression [50560,50591]" dest="call_expression [68456,68487]"/>
  <match src="(: ( [35508,35509]" dest="(: ( [35712,35713]"/>
  <match src="identifier: sender [27429,27435]" dest="identifier: sender [27479,27485]"/>
  <match src="function_definition [25360,25443]" dest="function_definition [25410,25493]"/>
  <match src="uint256: uint256 [8426,8433]" dest="uint256: uint256 [8476,8483]"/>
  <match src="): ) [42388,42389]" dest="): ) [42672,42673]"/>
  <match src="(: ( [57560,57561]" dest="(: ( [62735,62736]"/>
  <match src="private: private [23810,23817]" dest="private: private [23860,23867]"/>
  <match src="type_name [40998,41004]" dest="type_name [41282,41288]"/>
  <match src="type_name [23739,23746]" dest="type_name [23789,23796]"/>
  <match src="visibility [28736,28742]" dest="visibility [28786,28792]"/>
  <match src="event_definition [46163,46215]" dest="event_definition [47871,47923]"/>
  <match src="): ) [48043,48044]" dest="): ) [52389,52390]"/>
  <match src="identifier: target [17619,17625]" dest="identifier: target [17669,17675]"/>
  <match src="comment: // pragma solidity ^0.6.0; [4338,4364]" dest="comment: // pragma solidity ^0.6.0; [4388,4414]"/>
  <match src="visibility [23747,23754]" dest="visibility [23797,23804]"/>
  <match src="member_expression [57863,57900]" dest="member_expression [63029,63066]"/>
  <match src="if_statement [9557,9604]" dest="if_statement [9607,9654]"/>
  <match src="internal: internal [24259,24267]" dest="internal: internal [24309,24317]"/>
  <match src="binary_expression [41806,41815]" dest="binary_expression [42090,42099]"/>
  <match src="identifier: calcTokenAmount [60669,60684]" dest="identifier: calcTokenAmount [66918,66933]"/>
  <match src="comment: // pragma solidity 0.6.10; [19622,19648]" dest="comment: // pragma solidity 0.6.10; [19672,19698]"/>
  <match src="type_cast_expression [48096,48109]" dest="type_cast_expression [52442,52455]"/>
  <match src="{: { [20872,20873]" dest="{: { [20922,20923]"/>
  <match src="uint256: uint256 [10263,10270]" dest="uint256: uint256 [10313,10320]"/>
  <match src="(: ( [53800,53801]" dest="(: ( [59192,59193]"/>
  <match src="view: view [36718,36722]" dest="view: view [36922,36926]"/>
  <match src="string: string [17202,17208]" dest="string: string [17252,17258]"/>
  <match src="call_expression [52266,52346]" dest="call_expression [57394,57474]"/>
  <match src="identifier: success [14826,14833]" dest="identifier: success [14876,14883]"/>
  <match src="): ) [18310,18311]" dest="): ) [18360,18361]"/>
  <match src="type_name [44261,44272]" dest="type_name [45008,45019]"/>
  <match src="}: } [49380,49381]" dest="}: } [54631,54632]"/>
  <match src="return_type_definition [2219,2233]" dest="return_type_definition [2269,2283]"/>
  <match src="identifier: remove_liquidity_one_coin [37167,37192]" dest="identifier: remove_liquidity_one_coin [37371,37396]"/>
  <match src="): ) [54108,54109]" dest="): ) [59500,59501]"/>
  <match src="return_type_definition [61552,61569]" dest="return_type_definition [67801,67818]"/>
  <match src="call_argument [30517,30524]" dest="call_argument [30567,30574]"/>
  <match src="member_expression [54025,54042]" dest="member_expression [59417,59434]"/>
  <match src="call_argument [30433,30434]" dest="call_argument [30483,30484]"/>
  <match src=".: . [54449,54450]" dest=".: . [59841,59842]"/>
  <match src="identifier: call [14782,14786]" dest="identifier: call [14832,14836]"/>
  <match src="modifier_invocation [52669,52681]" dest="modifier_invocation [58056,58068]"/>
  <match src="{: { [48780,48781]" dest="{: { [53640,53641]"/>
  <match src=",: , [8390,8391]" dest=",: , [8440,8441]"/>
  <match src="uint256: uint256 [39266,39273]" dest="uint256: uint256 [39550,39557]"/>
  <match src="): ) [54724,54725]" dest="): ) [60153,60154]"/>
  <match src="(: ( [54424,54425]" dest="(: ( [59816,59817]"/>
  <match src="primitive_type [53858,53865]" dest="primitive_type [59250,59257]"/>
  <match src="public: public [61300,61306]" dest="public: public [67549,67555]"/>
  <match src="call_expression [52189,52251]" dest="call_expression [57317,57379]"/>
  <match src=",: , [14766,14767]" dest=",: , [14816,14817]"/>
  <match src="identifier: functionCallWithValue [17130,17151]" dest="identifier: functionCallWithValue [17180,17201]"/>
  <match src="): ) [55917,55918]" dest="): ) [61355,61356]"/>
  <match src="return_type_definition [3332,3346]" dest="return_type_definition [3382,3396]"/>
  <match src="type_name [45156,45163]" dest="type_name [46864,46871]"/>
  <match src="identifier: functionCall [15770,15782]" dest="identifier: functionCall [15820,15832]"/>
  <match src="identifier: IERC20 [37023,37029]" dest="identifier: IERC20 [37227,37233]"/>
  <match src="&quot;: &quot; [11696,11697]" dest="&quot;: &quot; [11746,11747]"/>
  <match src="primitive_type [56526,56533]" dest="primitive_type [61973,61980]"/>
  <match src="(: ( [45112,45113]" dest="(: ( [46820,46821]"/>
  <match src="=: = [20826,20827]" dest="=: = [20876,20877]"/>
  <match src="identifier: amountOutMin [59751,59763]" dest="identifier: amountOutMin [64926,64938]"/>
  <match src="identifier: Flushed [55976,55983]" dest="identifier: Flushed [61414,61421]"/>
  <match src="visibility [23783,23790]" dest="visibility [23833,23840]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11119,11570]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11169,11620]"/>
  <match src="address: address [39578,39585]" dest="address: address [39862,39869]"/>
  <match src="member_expression [59833,59846]" dest="member_expression [65017,65030]"/>
  <match src="): ) [16856,16857]" dest="): ) [16906,16907]"/>
  <match src="identifier: amount [51773,51779]" dest="identifier: amount [56901,56907]"/>
  <match src="identifier: amountToMint [50309,50321]" dest="identifier: stakeTokenAmountToTransfer [56749,56775]"/>
  <match src="identifier: div [54039,54042]" dest="identifier: div [59431,59434]"/>
  <match src="identifier: data [16699,16703]" dest="identifier: data [16749,16753]"/>
  <match src=",: , [59732,59733]" dest=",: , [64907,64908]"/>
  <match src="identifier: yTokenBalance [48270,48283]" dest="identifier: yTokenBalance [52765,52778]"/>
  <match src="uint256: uint256 [39486,39493]" dest="uint256: uint256 [39770,39777]"/>
  <match src="return_type_definition [17566,17588]" dest="return_type_definition [17616,17638]"/>
  <match src="expression_statement [57504,57543]" dest="expression_statement [62708,62718]"/>
  <match src="call_argument [49228,49232]" dest="call_argument [54479,54483]"/>
  <match src="identifier: swapExactTokensForTokens [59909,59933]" dest="identifier: swapExactTokensForTokens [65093,65117]"/>
  <match src="call_argument [16806,16811]" dest="call_argument [16856,16861]"/>
  <match src="call_argument [58762,58775]" dest="call_argument [63928,63941]"/>
  <match src="binary_expression [41665,41674]" dest="binary_expression [41949,41958]"/>
  <match src="address: address [61613,61620]" dest="address: address [67862,67869]"/>
  <match src="string_literal [8026,8055]" dest="string_literal [8076,8105]"/>
  <match src="): ) [55011,55012]" dest="): ) [60440,60441]"/>
  <match src="call_expression [50713,50775]" dest="call_expression [55683,55745]"/>
  <match src="&quot;: &quot; [52745,52746]" dest="&quot;: &quot; [58137,58138]"/>
  <match src="comment: // import {Ownable} from &quot;contracts/truefi/common/UpgradeableOwnable.sol&quot;; [42836,42910]" dest="comment: // import {Ownable} from &quot;contracts/truefi/common/UpgradeableOwnable.sol&quot;; [43402,43476]"/>
  <match src="returns: returns [48467,48474]" dest="returns: returns [53328,53335]"/>
  <match src="identifier: currencyBalance [61520,61535]" dest="identifier: currencyBalance [67769,67784]"/>
  <match src="address: address [25690,25697]" dest="address: address [25740,25747]"/>
  <match src="uint8: uint8 [44727,44732]" dest="uint8: uint8 [45954,45959]"/>
  <match src="identifier: borrower [45970,45978]" dest="identifier: borrower [47678,47686]"/>
  <match src="identifier: ln [54422,54424]" dest="identifier: ln [59814,59816]"/>
  <match src="type_name [16705,16712]" dest="type_name [16755,16762]"/>
  <match src="binary_expression [53934,53946]" dest="binary_expression [59326,59338]"/>
  <match src="(: ( [3289,3290]" dest="(: ( [3339,3340]"/>
  <match src="identifier: div [58380,58383]" dest="identifier: div [63546,63549]"/>
  <match src="parameter [27973,27988]" dest="parameter [28023,28038]"/>
  <match src="{: { [34922,34923]" dest="{: { [35126,35127]"/>
  <match src="state_variable_declaration [23803,23826]" dest="state_variable_declaration [23853,23876]"/>
  <match src="}: } [24721,24722]" dest="}: } [24771,24772]"/>
  <match src="bytes: bytes [15740,15745]" dest="bytes: bytes [15790,15795]"/>
  <match src="external: external [50162,50170]" dest="external: external [55413,55421]"/>
  <match src="identifier: currencyBalance [53259,53274]" dest="identifier: currencyBalance [58651,58666]"/>
  <match src="return_statement [54393,54483]" dest="return_statement [59785,59875]"/>
  <match src="(: ( [57310,57311]" dest="(: ( [62625,62626]"/>
  <match src="identifier: recipient [39218,39227]" dest="identifier: recipient [39502,39511]"/>
  <match src="address: address [36690,36697]" dest="address: address [36894,36901]"/>
  <match src="comment: // benefit is lost if 'b' is also tested. [9425,9466]" dest="comment: // benefit is lost if 'b' is also tested. [9475,9516]"/>
  <match src="): ) [11609,11610]" dest="): ) [11659,11660]"/>
  <match src="public: public [26056,26062]" dest="public: public [26106,26112]"/>
  <match src="identifier: _currencyToken [57561,57575]" dest="identifier: _currencyToken [62736,62750]"/>
  <match src="): ) [8868,8869]" dest="): ) [8918,8919]"/>
  <match src="identifier: amount [51867,51873]" dest="identifier: amount [56995,57001]"/>
  <match src="): ) [54097,54098]" dest="): ) [59489,59490]"/>
  <match src="{: { [39435,39436]" dest="{: { [39719,39720]"/>
  <match src="number_unit [58386,58391]" dest="number_unit [63552,63557]"/>
  <match src=",: , [38766,38767]" dest=",: , [39063,39064]"/>
  <match src="type_name [17168,17173]" dest="type_name [17218,17223]"/>
  <match src="assignment_expression [34563,34581]" dest="assignment_expression [34767,34785]"/>
  <match src="identifier: mul [54099,54102]" dest="identifier: mul [59491,59494]"/>
  <match src="(: ( [60310,60311]" dest="(: ( [66498,66499]"/>
  <match src="identifier: msb [41745,41748]" dest="identifier: msb [42029,42032]"/>
  <match src="(: ( [24446,24447]" dest="(: ( [24496,24497]"/>
  <match src=",: , [49979,49980]" dest=",: , [55230,55231]"/>
  <match src=",: , [57312,57313]" dest=",: , [62627,62628]"/>
  <match src="call_argument [55835,55848]" dest="call_argument [61273,61286]"/>
  <match src="member_expression [49871,49887]" dest="member_expression [55122,55138]"/>
  <match src="=: = [5964,5965]" dest="=: = [6014,6015]"/>
  <match src="call_argument [59958,59962]" dest="call_argument [65142,65146]"/>
  <match src="call_expression [53012,53047]" dest="call_expression [58404,58439]"/>
  <match src="type_cast_expression [35501,35511]" dest="type_cast_expression [35705,35715]"/>
  <match src="override: override [58683,58691]" dest="override: override [63849,63857]"/>
  <match src="member_expression [50205,50231]" dest="member_expression [55473,55499]"/>
  <match src="type_name [60201,60208]" dest="type_name [66389,66396]"/>
  <match src="member_expression [58321,58357]" dest="member_expression [63487,63523]"/>
  <match src="identifier: _allowances [26357,26368]" dest="identifier: _allowances [26407,26418]"/>
  <match src="binary_expression [20695,20726]" dest="binary_expression [20745,20776]"/>
  <match src="{: { [53278,53279]" dest="{: { [58670,58671]"/>
  <match src="call_argument [30578,30584]" dest="call_argument [30628,30634]"/>
  <match src="(: ( [48747,48748]" dest="(: ( [53607,53608]"/>
  <match src="augmented_assignment_expression [41172,41181]" dest="augmented_assignment_expression [41456,41465]"/>
  <match src="identifier: account [31289,31296]" dest="identifier: account [31339,31346]"/>
  <match src="primitive_type [36875,36882]" dest="primitive_type [37079,37086]"/>
  <match src="identifier: origin [51188,51194]" dest="identifier: origin [56158,56164]"/>
  <match src=",: , [10227,10228]" dest=",: , [10277,10278]"/>
  <match src="primitive_type [50146,50153]" dest="primitive_type [55397,55404]"/>
  <match src=",: , [12224,12225]" dest=",: , [12274,12275]"/>
  <match src="string [57314,57368]" dest="string [62629,62683]"/>
  <match src="function_definition [52624,53625]" dest="function_definition [58011,59017]"/>
  <match src="return_statement [42357,42436]" dest="return_statement [42641,42720]"/>
  <match src="internal: internal [49136,49144]" dest="internal: internal [54387,54395]"/>
  <match src="): ) [26337,26338]" dest="): ) [26387,26388]"/>
  <match src="address: address [31226,31233]" dest="address: address [31276,31283]"/>
  <match src="(: ( [52958,52959]" dest="(: ( [58350,58351]"/>
  <match src="identifier: mul [58317,58320]" dest="identifier: mul [63483,63486]"/>
  <match src="call_argument [54114,54128]" dest="call_argument [59506,59520]"/>
  <match src=".: . [60994,60995]" dest=".: . [67243,67244]"/>
  <match src="expression_statement [56981,57063]" dest="expression_statement [68655,68709]"/>
  <match src="(: ( [47587,47588]" dest="(: ( [49472,49473]"/>
  <match src="identifier: returndata [17857,17867]" dest="identifier: returndata [17907,17917]"/>
  <match src="indexed: indexed [34310,34317]" dest="indexed: indexed [34514,34521]"/>
  <match src="identifier: sub [61628,61631]" dest="identifier: sub [67877,67880]"/>
  <match src="expression_statement [35755,35829]" dest="expression_statement [35959,36033]"/>
  <match src="primitive_type [16090,16097]" dest="primitive_type [16140,16147]"/>
  <match src="parameter [57722,57746]" dest="parameter [62888,62912]"/>
  <match src="call_expression [34540,34552]" dest="call_expression [34744,34756]"/>
  <match src="): ) [58792,58793]" dest="): ) [63958,63959]"/>
  <match src="string [49560,49609]" dest="string [54811,54860]"/>
  <match src="internal: internal [17230,17238]" dest="internal: internal [17280,17288]"/>
  <match src="): ) [23709,23710]" dest="): ) [23759,23760]"/>
  <match src="expression_statement [53293,53359]" dest="expression_statement [58685,58751]"/>
  <match src="call_argument [53509,53562]" dest="call_argument [58901,58954]"/>
  <match src="function_definition [37429,37477]" dest="function_definition [37633,37681]"/>
  <match src="type_name [25690,25697]" dest="type_name [25740,25747]"/>
  <match src="return_statement [8446,8497]" dest="return_statement [8496,8547]"/>
  <match src="(: ( [11588,11589]" dest="(: ( [11638,11639]"/>
  <match src="expression_statement [57191,57255]" dest="expression_statement [62522,62578]"/>
  <match src="(: ( [51284,51285]" dest="(: ( [56254,56255]"/>
  <match src="): ) [50508,50509]" dest="): ) [68404,68405]"/>
  <match src="address: address [17281,17288]" dest="address: address [17331,17338]"/>
  <match src="(: ( [35461,35462]" dest="(: ( [35665,35666]"/>
  <match src="(: ( [11633,11634]" dest="(: ( [11683,11684]"/>
  <match src="expression_statement [53501,53564]" dest="expression_statement [58893,58956]"/>
  <match src="identifier: msg [52833,52836]" dest="identifier: msg [58225,58228]"/>
  <match src="(: ( [30413,30414]" dest="(: ( [30463,30464]"/>
  <match src="call_argument [55949,55957]" dest="call_argument [61387,61395]"/>
  <match src="expression_statement [41265,41275]" dest="expression_statement [41549,41559]"/>
  <match src="call_expression [54400,54471]" dest="call_expression [59792,59863]"/>
  <match src="identifier: div [58370,58373]" dest="identifier: div [63536,63539]"/>
  <match src="call_expression [53293,53358]" dest="call_expression [58685,58750]"/>
  <match src="(: ( [41831,41832]" dest="(: ( [42115,42116]"/>
  <match src=",: , [59977,59978]" dest=",: , [65161,65162]"/>
  <match src="parameter [26573,26587]" dest="parameter [26623,26637]"/>
  <match src="visibility [38794,38802]" dest="visibility [39078,39086]"/>
  <match src="number_literal: 64 [41203,41205]" dest="number_literal: 64 [41487,41489]"/>
  <match src="primitive_type [32124,32131]" dest="primitive_type [32174,32181]"/>
  <match src="member_expression [57640,57650]" dest="member_expression [55771,55781]"/>
  <match src="): ) [53561,53562]" dest="): ) [58953,58954]"/>
  <match src="primitive_type [50753,50760]" dest="primitive_type [55723,55730]"/>
  <match src="state_variable_declaration [44261,44292]" dest="state_variable_declaration [45008,45039]"/>
  <match src="[: [ [36500,36501]" dest="[: [ [36704,36705]"/>
  <match src="identifier: log_2 [42380,42385]" dest="identifier: log_2 [42664,42669]"/>
  <match src="&quot;: &quot; [47642,47643]" dest="&quot;: &quot; [49520,49521]"/>
  <match src="function_body [26095,26178]" dest="function_body [26145,26228]"/>
  <match src="identifier: onlyOwner [35734,35743]" dest="identifier: onlyOwner [35938,35947]"/>
  <match src="visibility [27289,27295]" dest="visibility [27339,27345]"/>
  <match src="primitive_type [44878,44885]" dest="primitive_type [46586,46593]"/>
  <match src="): ) [38186,38187]" dest="): ) [38390,38391]"/>
  <match src=",: , [12311,12312]" dest=",: , [12361,12362]"/>
  <match src="): ) [39665,39666]" dest="): ) [39949,39950]"/>
  <match src="type_name [39163,39170]" dest="type_name [39447,39454]"/>
  <match src="identifier: account [30414,30421]" dest="identifier: account [30464,30471]"/>
  <match src="function_body [10928,11111]" dest="function_body [10978,11161]"/>
  <match src="event: event [44854,44859]" dest="event: event [46562,46567]"/>
  <match src="{: { [60288,60289]" dest="{: { [66476,66477]"/>
  <match src="identifier: recipient [29945,29954]" dest="identifier: recipient [29995,30004]"/>
  <match src="type_name [39513,39520]" dest="type_name [39797,39804]"/>
  <match src="parameter [38964,38978]" dest="parameter [39248,39262]"/>
  <match src="function_definition [49074,49388]" dest="function_definition [54325,54639]"/>
  <match src="contract_body [19064,19421]" dest="contract_body [19114,19471]"/>
  <match src="pure: pure [40678,40682]" dest="pure: pure [40962,40966]"/>
  <match src="identifier: removeLiquidityFromCurve [53293,53317]" dest="identifier: removeLiquidityFromCurve [58685,58709]"/>
  <match src="uint256: uint256 [41923,41930]" dest="uint256: uint256 [42207,42214]"/>
  <match src="number_literal: 10000 [54748,54753]" dest="number_literal: 10000 [60177,60182]"/>
  <match src="function_definition [36983,37031]" dest="function_definition [37187,37235]"/>
  <match src="member_expression [59898,59933]" dest="member_expression [65082,65117]"/>
  <match src=":=: := [21649,21651]" dest=":=: := [21699,21701]"/>
  <match src="member_expression [49326,49342]" dest="member_expression [54577,54593]"/>
  <match src="call_argument [54425,54458]" dest="call_argument [59817,59850]"/>
  <match src="=: = [47251,47252]" dest="=: = [49210,49211]"/>
  <match src="parameter [8831,8840]" dest="parameter [8881,8890]"/>
  <match src="view: view [36543,36547]" dest="view: view [36747,36751]"/>
  <match src="mapping: mapping [23663,23670]" dest="mapping: mapping [23713,23720]"/>
  <match src="comment: /**      * @dev See {IERC20-allowance}.      */ [26186,26235]" dest="comment: /**      * @dev See {IERC20-allowance}.      */ [26236,26285]"/>
  <match src="): ) [38978,38979]" dest="): ) [39262,39263]"/>
  <match src="): ) [57613,57614]" dest="): ) [62787,62788]"/>
  <match src="identifier: amount [3730,3736]" dest="identifier: amount [3780,3786]"/>
  <match src="): ) [17833,17834]" dest="): ) [17883,17884]"/>
  <match src="(: ( [57910,57911]" dest="(: ( [63076,63077]"/>
  <match src="(: ( [54970,54971]" dest="(: ( [60399,60400]"/>
  <match src="(: ( [60149,60150]" dest="(: ( [66328,66329]"/>
  <match src="yul_assignment [21646,21669]" dest="yul_assignment [21696,21719]"/>
  <match src="modifier: modifier [6501,6509]" dest="modifier: modifier [6551,6559]"/>
  <match src="identifier: _NOT_ENTERED [6938,6950]" dest="identifier: _NOT_ENTERED [6988,7000]"/>
  <match src=".: . [54471,54472]" dest=".: . [59863,59864]"/>
  <match src="): ) [14768,14769]" dest="): ) [14818,14819]"/>
  <match src=",: , [26273,26274]" dest=",: , [26323,26324]"/>
  <match src="): ) [42426,42427]" dest="): ) [42710,42711]"/>
  <match src="parameter [17152,17166]" dest="parameter [17202,17216]"/>
  <match src="return: return [42357,42363]" dest="return: return [42641,42647]"/>
  <match src="string_literal [46989,47000]" dest="string_literal [48948,48959]"/>
  <match src="comment: /**      * @dev Join the pool by depositing currency tokens      * @param amount amount of currency token to deposit      */ [49999,50126]" dest="comment: /**      * @dev Join the pool by depositing currency tokens      * @param amount amount of currency token to deposit      */ [55250,55377]"/>
  <match src="(: ( [52928,52929]" dest="(: ( [58320,58321]"/>
  <match src="(: ( [38559,38560]" dest="(: ( [38856,38857]"/>
  <match src="private: private [21169,21176]" dest="private: private [21219,21226]"/>
  <match src="{: { [28766,28767]" dest="{: { [28816,28817]"/>
  <match src="primitive_type [29505,29512]" dest="primitive_type [29555,29562]"/>
  <match src=",: , [29881,29882]" dest=",: , [29931,29932]"/>
  <match src="identifier: sender [57589,57595]" dest="identifier: sender [62764,62770]"/>
  <match src="assignment_expression [50653,50694]" dest="assignment_expression [55623,55664]"/>
  <match src="(: ( [15739,15740]" dest="(: ( [15789,15790]"/>
  <match src="boolean_literal [21027,21032]" dest="boolean_literal [21077,21082]"/>
  <match src="call_expression [48290,48328]" dest="call_expression [52785,52823]"/>
  <match src="type_name [26573,26580]" dest="type_name [26623,26630]"/>
  <match src="uint256: uint256 [23628,23635]" dest="uint256: uint256 [23678,23685]"/>
  <match src="primitive_type [31072,31079]" dest="primitive_type [31122,31129]"/>
  <match src="call_expression [29608,29678]" dest="call_expression [29658,29728]"/>
  <match src="returns: returns [36548,36555]" dest="returns: returns [36752,36759]"/>
  <match src="expression_statement [27339,27376]" dest="expression_statement [27389,27426]"/>
  <match src="}: } [54836,54837]" dest="}: } [60265,60266]"/>
  <match src="=: = [34538,34539]" dest="=: = [34742,34743]"/>
  <match src="identifier: amountToWithdraw [53600,53616]" dest="identifier: amountToWithdraw [58992,59008]"/>
  <match src="&quot;: &quot; [57060,57061]" dest="&quot;: &quot; [68706,68707]"/>
  <match src="}: } [25607,25608]" dest="}: } [25657,25658]"/>
  <match src="return_statement [47843,47865]" dest="return_statement [50672,50694]"/>
  <match src="function_definition [15665,15838]" dest="function_definition [15715,15888]"/>
  <match src="call_expression [51654,51695]" dest="call_expression [56624,56665]"/>
  <match src="view: view [48462,48466]" dest="view: view [53323,53327]"/>
  <match src="type_name [50191,50198]" dest="type_name [55459,55466]"/>
  <match src="modifier_invocation [24268,24279]" dest="modifier_invocation [24318,24329]"/>
  <match src="uint256: uint256 [46429,46436]" dest="uint256: uint256 [48137,48144]"/>
  <match src="uint256: uint256 [39513,39520]" dest="uint256: uint256 [39797,39804]"/>
  <match src="primitive_type [45532,45539]" dest="primitive_type [47240,47247]"/>
  <match src="indexed: indexed [46184,46191]" dest="indexed: indexed [47892,47899]"/>
  <match src="[: [ [29967,29968]" dest="[: [ [30017,30018]"/>
  <match src="type_name [47999,48006]" dest="type_name [52345,52352]"/>
  <match src="identifier: _mint [30339,30344]" dest="identifier: _mint [30389,30394]"/>
  <match src="uint256: uint256 [56878,56885]" dest="uint256: uint256 [68055,68062]"/>
  <match src="view: view [37576,37580]" dest="view: view [37780,37784]"/>
  <match src="(: ( [48326,48327]" dest="(: ( [52821,52822]"/>
  <match src="variable_declaration [21562,21574]" dest="variable_declaration [21612,21624]"/>
  <match src="(: ( [49670,49671]" dest="(: ( [54921,54922]"/>
  <match src="type_name [26556,26563]" dest="type_name [26606,26613]"/>
  <match src="identifier: amount [52652,52658]" dest="identifier: amount [58039,58045]"/>
  <match src="}: } [36902,36903]" dest="}: } [37106,37107]"/>
  <match src="call_expression [14818,14896]" dest="call_expression [14868,14946]"/>
  <match src="(: ( [55637,55638]" dest="(: ( [61075,61076]"/>
  <match src="primitive_type [17202,17208]" dest="primitive_type [17252,17258]"/>
  <match src="): ) [17228,17229]" dest="): ) [17278,17279]"/>
  <match src="if_statement [50405,50521]" dest="if_statement [68301,68417]"/>
  <match src="calldata: calldata [39554,39562]" dest="calldata: calldata [39838,39846]"/>
  <match src="(: ( [20855,20856]" dest="(: ( [20905,20906]"/>
  <match src="(: ( [61612,61613]" dest="(: ( [67861,67862]"/>
  <match src="primitive_type [27322,27326]" dest="primitive_type [27372,27376]"/>
  <match src="function_body [34776,34808]" dest="function_body [34980,35012]"/>
  <match src="member_expression [54885,54903]" dest="member_expression [60314,60332]"/>
  <match src="identifier: staker [45353,45359]" dest="identifier: staker [47061,47067]"/>
  <match src="comment: // ========= IN STORAGE CORRUPTION =========== [44172,44218]" dest="comment: // ========= IN STORAGE CORRUPTION =========== [44919,44965]"/>
  <match src="binary_expression [14597,14628]" dest="binary_expression [14647,14678]"/>
  <match src="expression_statement [41354,41364]" dest="expression_statement [41638,41648]"/>
  <match src="): ) [55823,55824]" dest="): ) [61261,61262]"/>
  <match src="type_name [23561,23568]" dest="type_name [23611,23618]"/>
  <match src="): ) [26054,26055]" dest="): ) [26104,26105]"/>
  <match src="function_definition [38736,38803]" dest="function_definition [39033,39087]"/>
  <match src="parameter [16670,16684]" dest="parameter [16720,16734]"/>
  <match src="identifier: data [15791,15795]" dest="identifier: data [15841,15845]"/>
  <match src="identifier: Initializable [20295,20308]" dest="identifier: Initializable [20345,20358]"/>
  <match src="type_name [45532,45539]" dest="type_name [47240,47247]"/>
  <match src="type_name [21191,21195]" dest="type_name [21241,21245]"/>
  <match src="(: ( [21190,21191]" dest="(: ( [21240,21241]"/>
  <match src="primitive_type [41923,41930]" dest="primitive_type [42207,42214]"/>
  <match src="member_expression [55685,55709]" dest="member_expression [61123,61147]"/>
  <match src="string_literal [6637,6670]" dest="string_literal [6687,6720]"/>
  <match src="variable_declaration_statement [58275,58393]" dest="variable_declaration_statement [63441,63559]"/>
  <match src="variable_declaration_statement [41771,41817]" dest="variable_declaration_statement [42055,42101]"/>
  <match src="primitive_type [55333,55340]" dest="primitive_type [60762,60769]"/>
  <match src="call_expression [8453,8496]" dest="call_expression [8503,8546]"/>
  <match src="identifier: Pulled [56667,56673]" dest="identifier: Pulled [62114,62120]"/>
  <match src="identifier: _owner [35865,35871]" dest="identifier: _owner [36069,36075]"/>
  <match src="comment: // import {Context} from &quot;@openzeppelin/contracts/GSN/Context.sol&quot;; [22002,22069]" dest="comment: // import {Context} from &quot;@openzeppelin/contracts/GSN/Context.sol&quot;; [22052,22119]"/>
  <match src="assembly: assembly [13495,13503]" dest="assembly: assembly [13545,13553]"/>
  <match src="number_literal: 1000 [57911,57915]" dest="number_literal: 1000 [63077,63081]"/>
  <match src="): ) [60286,60287]" dest="): ) [66474,66475]"/>
  <match src="call_argument [54988,54992]" dest="call_argument [60417,60421]"/>
  <match src="primitive_type [48055,48062]" dest="primitive_type [52401,52408]"/>
  <match src="comment: /// @dev pool token (TUSD) [38100,38126]" dest="comment: /// @dev pool token (TUSD) [38304,38330]"/>
  <match src="primitive_type [27214,27221]" dest="primitive_type [27264,27271]"/>
  <match src="): ) [54459,54460]" dest="): ) [59851,59852]"/>
  <match src="state_mutability [61547,61551]" dest="state_mutability [67796,67800]"/>
  <match src="identifier: add_liquidity [55696,55709]" dest="identifier: add_liquidity [61134,61147]"/>
  <match src="primitive_type [26556,26563]" dest="primitive_type [26606,26613]"/>
  <match src=".: . [48823,48824]" dest=".: . [54075,54076]"/>
  <match src="(: ( [58749,58750]" dest="(: ( [63915,63916]"/>
  <match src="identifier: amount [29813,29819]" dest="identifier: amount [29863,29869]"/>
  <match src="function: function [37066,37074]" dest="function: function [37270,37278]"/>
  <match src="function: function [36937,36945]" dest="function: function [37141,37149]"/>
  <match src="return_type_definition [7953,7970]" dest="return_type_definition [8003,8020]"/>
  <match src="primitive_type [1879,1886]" dest="primitive_type [1929,1936]"/>
  <match src="): ) [60894,60895]" dest="): ) [67143,67144]"/>
  <match src="(: ( [23670,23671]" dest="(: ( [23720,23721]"/>
  <match src="external: external [1740,1748]" dest="external: external [1790,1798]"/>
  <match src="): ) [16183,16184]" dest="): ) [16233,16234]"/>
  <match src="function: function [61254,61262]" dest="function: function [67503,67511]"/>
  <match src="revert: revert [18370,18376]" dest="revert: revert [18420,18426]"/>
  <match src="call_argument [15797,15829]" dest="call_argument [15847,15879]"/>
  <match src="identifier: approve [47320,47327]" dest="identifier: approve [66028,66035]"/>
  <match src="identifier: yAmounts [61021,61029]" dest="identifier: yAmounts [67270,67278]"/>
  <match src="]: ] [31275,31276]" dest="]: ] [31325,31326]"/>
  <match src=",: , [31429,31430]" dest=",: , [31479,31480]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [15846,16062]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [15896,16112]"/>
  <match src="comment: // By storing the original value once again, a refund is triggered (see [6794,6865]" dest="comment: // By storing the original value once again, a refund is triggered (see [6844,6915]"/>
  <match src="call_argument [49858,49859]" dest="call_argument [55109,55110]"/>
  <match src="return_statement [42037,42059]" dest="return_statement [42321,42343]"/>
  <match src="address: address [59774,59781]" dest="address: address [64949,64956]"/>
  <match src="state_variable_declaration [20529,20555]" dest="state_variable_declaration [20579,20605]"/>
  <match src="==: == [47577,47579]" dest="==: == [49462,49464]"/>
  <match src="identifier: expectedAmount [57216,57230]" dest="identifier: amount [62547,62553]"/>
  <match src=".: . [59848,59849]" dest=".: . [65032,65033]"/>
  <match src="identifier: errorMessage [17216,17228]" dest="identifier: errorMessage [17266,17278]"/>
  <match src="): ) [34551,34552]" dest="): ) [34755,34756]"/>
  <match src="parameter [8820,8829]" dest="parameter [8870,8879]"/>
  <match src="identifier: functionCall [16077,16089]" dest="identifier: functionCall [16127,16139]"/>
  <match src="identifier: subtractedValue [28719,28734]" dest="identifier: subtractedValue [28769,28784]"/>
  <match src="member_expression [52382,52392]" dest="member_expression [57701,57711]"/>
  <match src="call_argument [30414,30435]" dest="call_argument [30464,30485]"/>
  <match src="call_argument [27403,27415]" dest="call_argument [27453,27465]"/>
  <match src="string: string [24237,24243]" dest="string: string [24287,24293]"/>
  <match src="identifier: amount [26141,26147]" dest="identifier: amount [26191,26197]"/>
  <match src="call_argument [28074,28081]" dest="call_argument [28124,28131]"/>
  <match src="identifier: initializing [20829,20841]" dest="identifier: initializing [20879,20891]"/>
  <match src="event_definition [45324,45377]" dest="event_definition [47032,47085]"/>
  <match src=",: , [28903,28904]" dest=",: , [28953,28954]"/>
  <match src="): ) [36964,36965]" dest="): ) [37168,37169]"/>
  <match src="primitive_type [37203,37210]" dest="primitive_type [37407,37414]"/>
  <match src="identifier: liquidExit [52633,52643]" dest="identifier: liquidExit [58020,58030]"/>
  <match src="override_specifier [58683,58691]" dest="override_specifier [63849,63857]"/>
  <match src="(: ( [50565,50566]" dest="(: ( [68461,68462]"/>
  <match src="uint256: uint256 [1763,1770]" dest="uint256: uint256 [1813,1820]"/>
  <match src="type_name [37379,37385]" dest="type_name [37583,37589]"/>
  <match src="call_expression [57863,57906]" dest="call_expression [63029,63072]"/>
  <match src="identifier: averageExitPenalty [54166,54184]" dest="identifier: averageExitPenalty [59558,59576]"/>
  <match src="address: address [21577,21584]" dest="address: address [21627,21634]"/>
  <match src="comment: /**  * @dev Contract module which provides a basic access control mechanism, where  * there is an account (an owner) that can be granted exclusive access to  * specific functions.  *  * By default, the owner account will be the one that deploys the contract. This  * can later be changed with {transferOwnership}.  *  * This module is used through inheritance. It will make available the modifier  * `onlyOwner`, which can be applied to your functions to restrict their use to  * the owner.  */ [33687,34192]" dest="comment: /**  * @dev Contract module which provides a basic access control mechanism, where  * there is an account (an owner) that can be granted exclusive access to  * specific functions.  *  * By default, the owner account will be the one that deploys the contract. This  * can later be changed with {transferOwnership}.  *  * This module is used through inheritance. It will make available the modifier  * `onlyOwner`, which can be applied to your functions to restrict their use to  * the owner.  */ [33891,34396]"/>
  <match src="string [20744,20792]" dest="string [20794,20842]"/>
  <match src="function_definition [38949,38989]" dest="function_definition [39233,39273]"/>
  <match src="type_name [17530,17536]" dest="type_name [17580,17586]"/>
  <match src="return_type_definition [38171,38187]" dest="return_type_definition [38375,38391]"/>
  <match src="comment: // calculate amount of curve.fi pool tokens [51560,51603]" dest="comment: // calculate amount of curve.fi pool tokens [56530,56573]"/>
  <match src="uint256: uint256 [7928,7935]" dest="uint256: uint256 [7978,7985]"/>
  <match src="function: function [53774,53782]" dest="function: function [59166,59174]"/>
  <match src="&quot;: &quot; [29922,29923]" dest="&quot;: &quot; [29972,29973]"/>
  <match src="primitive_type [55357,55364]" dest="primitive_type [60786,60793]"/>
  <match src="call_argument [54913,54915]" dest="call_argument [60342,60344]"/>
  <match src="view: view [36172,36176]" dest="view: view [36376,36380]"/>
  <match src="{: { [57757,57758]" dest="{: { [62923,62924]"/>
  <match src="+=: += [41293,41295]" dest="+=: += [41577,41579]"/>
  <match src="): ) [53883,53884]" dest="): ) [59275,59276]"/>
  <match src="*: * [42002,42003]" dest="*: * [42286,42287]"/>
  <match src="binary_expression [53240,53276]" dest="binary_expression [58632,58668]"/>
  <match src="expression_statement [47305,47362]" dest="expression_statement [66016,66067]"/>
  <match src="primitive_type [45156,45163]" dest="primitive_type [46864,46871]"/>
  <match src="identifier: initializing [20887,20899]" dest="identifier: initializing [20937,20949]"/>
  <match src="type_name [31976,31983]" dest="type_name [32026,32033]"/>
  <match src="function: function [27182,27190]" dest="function: function [27232,27240]"/>
  <match src="function_body [15754,15838]" dest="function_body [15804,15888]"/>
  <match src="uint256: uint256 [8392,8399]" dest="uint256: uint256 [8442,8449]"/>
  <match src="parameter [47824,47830]" dest="parameter [50653,50659]"/>
  <match src="identifier: depositor [36698,36707]" dest="identifier: depositor [36902,36911]"/>
  <match src="uint256: uint256 [6020,6027]" dest="uint256: uint256 [6070,6077]"/>
  <match src="variable_declaration [60201,60215]" dest="variable_declaration [66389,66403]"/>
  <match src="identifier: currencyAmount [45540,45554]" dest="identifier: currencyAmount [47248,47262]"/>
  <match src="identifier: OwnershipTransferred [34597,34617]" dest="identifier: OwnershipTransferred [34801,34821]"/>
  <match src="identifier: msg [52026,52029]" dest="identifier: msg [57154,57157]"/>
  <match src="address: address [49837,49844]" dest="address: address [55088,55095]"/>
  <match src="call_argument [27417,27506]" dest="call_argument [27467,27556]"/>
  <match src="): ) [48006,48007]" dest="): ) [52352,52353]"/>
  <match src="expression_statement [31116,31184]" dest="expression_statement [31166,31234]"/>
  <match src="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * // importANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [13577,14501]" dest="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * // importANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [13627,14551]"/>
  <match src="function_body [61330,61410]" dest="function_body [67579,67659]"/>
  <match src="address: address [26275,26282]" dest="address: address [26325,26332]"/>
  <match src="internal: internal [31998,32006]" dest="internal: internal [32048,32056]"/>
  <match src="expression_statement [57927,58050]" dest="expression_statement [63093,63216]"/>
  <match src="type_name [27973,27980]" dest="type_name [28023,28030]"/>
  <match src="parameter [9271,9280]" dest="parameter [9321,9330]"/>
  <match src="indexed: indexed [45121,45128]" dest="indexed: indexed [46829,46836]"/>
  <match src="primitive_type [41771,41778]" dest="primitive_type [42055,42062]"/>
  <match src="variable_declaration [13415,13427]" dest="variable_declaration [13465,13477]"/>
  <match src="=: = [44753,44754]" dest="=: = [45980,45981]"/>
  <match src="(: ( [29615,29616]" dest="(: ( [29665,29666]"/>
  <match src="{: { [36930,36931]" dest="{: { [37134,37135]"/>
  <match src="public: public [54352,54358]" dest="public: public [59744,59750]"/>
  <match src="uint256: uint256 [51613,51620]" dest="uint256: uint256 [56583,56590]"/>
  <match src="return_type_definition [53829,53846]" dest="return_type_definition [59221,59238]"/>
  <match src="): ) [30514,30515]" dest="): ) [30564,30565]"/>
  <match src="parameter [15740,15752]" dest="parameter [15790,15802]"/>
  <match src="call_argument [21585,21589]" dest="call_argument [21635,21639]"/>
  <match src="&quot;: &quot; [29758,29759]" dest="&quot;: &quot; [29808,29809]"/>
  <match src=",: , [10866,10867]" dest=",: , [10916,10917]"/>
  <match src="primitive_type [49959,49966]" dest="primitive_type [55210,55217]"/>
  <match src="call_argument [32247,32252]" dest="call_argument [32297,32302]"/>
  <match src="string: string [23776,23782]" dest="string: string [23826,23832]"/>
  <match src="}: } [18423,18424]" dest="}: } [18473,18474]"/>
  <match src="function_definition [9258,9729]" dest="function_definition [9308,9779]"/>
  <match src="): ) [15829,15830]" dest="): ) [15879,15880]"/>
  <match src="type_name [37412,37419]" dest="type_name [37616,37623]"/>
  <match src="comment: /**      * Convert unsigned 256-bit integer number into signed 64.64-bit fixed point      * number.  Revert on overflow.      *      * @param x unsigned 256-bit integer number      * @return signed 64.64-bit fixed point number      */ [40394,40634]" dest="comment: /**      * Convert unsigned 256-bit integer number into signed 64.64-bit fixed point      * number.  Revert on overflow.      *      * @param x unsigned 256-bit integer number      * @return signed 64.64-bit fixed point number      */ [40678,40918]"/>
  <match src="type_name [19236,19241]" dest="type_name [19286,19291]"/>
  <match src="(: ( [48095,48096]" dest="(: ( [52441,52442]"/>
  <match src="primitive_type [54607,54614]" dest="primitive_type [60036,60043]"/>
  <match src="int128: int128 [37556,37562]" dest="int128: int128 [37760,37766]"/>
  <match src="(: ( [8920,8921]" dest="(: ( [8970,8971]"/>
  <match src="returns: returns [38171,38178]" dest="returns: returns [38375,38382]"/>
  <match src="uint256: uint256 [56902,56909]" dest="uint256: uint256 [62348,62355]"/>
  <match src="parameter [3341,3345]" dest="parameter [3391,3395]"/>
  <match src="call_expression [28861,28873]" dest="call_expression [28911,28923]"/>
  <match src="return_statement [9713,9722]" dest="return_statement [9763,9772]"/>
  <match src="identifier: sender [47570,47576]" dest="identifier: sender [49455,49461]"/>
  <match src="return_type_definition [26321,26338]" dest="return_type_definition [26371,26388]"/>
  <match src="identifier: curveLiquidityAmountToTransfer [52138,52168]" dest="identifier: curveLiquidityAmountToTransfer [57266,57296]"/>
  <match src="number_literal: 0 [29718,29719]" dest="number_literal: 0 [29768,29769]"/>
  <match src="): ) [49855,49856]" dest="): ) [55106,55107]"/>
  <match src="(: ( [53338,53339]" dest="(: ( [58730,58731]"/>
  <match src="primitive_type [28760,28764]" dest="primitive_type [28810,28814]"/>
  <match src="primitive_type [34302,34309]" dest="primitive_type [34506,34513]"/>
  <match src="identifier: poolValue [50497,50506]" dest="identifier: poolValue [68393,68402]"/>
  <match src="identifier: Address [12542,12549]" dest="identifier: Address [12592,12599]"/>
  <match src="identifier: data [17181,17185]" dest="identifier: data [17231,17235]"/>
  <match src="comment: // ======= STORAGE DECLARATION END ============ [44616,44663]" dest="comment: // ======= STORAGE DECLARATION END ============ [45843,45890]"/>
  <match src="function: function [49472,49480]" dest="function: function [54723,54731]"/>
  <match src="identifier: amountToWithdraw [53030,53046]" dest="identifier: amountToWithdraw [58422,58438]"/>
  <match src="parameter [37203,37224]" dest="parameter [37407,37428]"/>
  <match src="external: external [37307,37315]" dest="external: external [37511,37519]"/>
  <match src="identifier: removeLiquidityFromCurve [57191,57215]" dest="identifier: removeLiquidityFromCurve [62522,62546]"/>
  <match src="identifier: __ERC20_initialize [46970,46988]" dest="identifier: __ERC20_initialize [48929,48947]"/>
  <match src="visibility [31088,31096]" dest="visibility [31138,31146]"/>
  <match src="contract_body [37059,37602]" dest="contract_body [37263,37806]"/>
  <match src="member_expression [60801,60819]" dest="member_expression [67050,67068]"/>
  <match src="function: function [42266,42274]" dest="function: function [42550,42558]"/>
  <match src="identifier: amounts [36511,36518]" dest="identifier: amounts [36715,36722]"/>
  <match src="type_name [24217,24223]" dest="type_name [24267,24273]"/>
  <match src="identifier: spender [3298,3305]" dest="identifier: spender [3348,3355]"/>
  <match src="identifier: onlyOwner [60180,60189]" dest="identifier: onlyOwnerOrManager [66359,66377]"/>
  <match src="): ) [13182,13183]" dest="): ) [13232,13233]"/>
  <match src="call_argument [53012,53047]" dest="call_argument [58404,58439]"/>
  <match src="}: } [35920,35921]" dest="}: } [36124,36125]"/>
  <match src="[: [ [27436,27437]" dest="[: [ [27486,27487]"/>
  <match src="type_name [24470,24476]" dest="type_name [24520,24526]"/>
  <match src="}: } [18405,18406]" dest="}: } [18455,18456]"/>
  <match src="(: ( [10262,10263]" dest="(: ( [10312,10313]"/>
  <match src="identifier: this [59972,59976]" dest="identifier: this [65156,65160]"/>
  <match src="call_expression [54946,54994]" dest="call_expression [60375,60423]"/>
  <match src=",: , [52844,52845]" dest=",: , [58236,58237]"/>
  <match src="returns: returns [25728,25735]" dest="returns: returns [25778,25785]"/>
  <match src="number_literal: 10000 [50232,50237]" dest="number_literal: 10000 [55500,55505]"/>
  <match src="}: } [16864,16865]" dest="}: } [16914,16915]"/>
  <match src="call_argument [50476,50491]" dest="call_argument [68372,68387]"/>
  <match src="variable_declaration_statement [57831,57917]" dest="variable_declaration_statement [62997,63083]"/>
  <match src="call_argument [57235,57252]" dest="call_argument [62558,62575]"/>
  <match src="type_name [6020,6027]" dest="type_name [6070,6077]"/>
  <match src="comment: // import {ReentrancyGuard} from &quot;@openzeppelin/contracts/utils/ReentrancyGuard.sol&quot;; [42603,42688]" dest="comment: // import {ReentrancyGuard} from &quot;@openzeppelin/contracts/utils/ReentrancyGuard.sol&quot;; [43169,43254]"/>
  <match src="yul_function_call [18274,18293]" dest="yul_function_call [18324,18343]"/>
  <match src="=: = [6936,6937]" dest="=: = [6986,6987]"/>
  <match src="call_argument [60348,60354]" dest="call_argument [66536,66542]"/>
  <match src="): ) [28764,28765]" dest="): ) [28814,28815]"/>
  <match src="{: { [17786,17787]" dest="{: { [17836,17837]"/>
  <match src="number_literal: 3 [44755,44756]" dest="number_literal: 3 [45982,45983]"/>
  <match src="call_argument [48334,48341]" dest="call_argument [52829,52836]"/>
  <match src="block_statement [17885,18417]" dest="block_statement [17935,18467]"/>
  <match src="identifier: token [55817,55822]" dest="identifier: token [61255,61260]"/>
  <match src="returns: returns [39154,39161]" dest="returns: returns [39438,39445]"/>
  <match src="return_statement [48791,48833]" dest="return_statement [53719,53758]"/>
  <match src="identifier: sub [54967,54970]" dest="identifier: sub [60396,60399]"/>
  <match src="(: ( [52812,52813]" dest="(: ( [58204,58205]"/>
  <match src="string: string [10868,10874]" dest="string: string [10918,10924]"/>
  <match src="parameter [38560,38574]" dest="parameter [38857,38871]"/>
  <match src="&quot;: &quot; [34998,34999]" dest="&quot;: &quot; [35202,35203]"/>
  <match src="{: { [54755,54756]" dest="{: { [60184,60185]"/>
  <match src="{: { [49527,49528]" dest="{: { [54778,54779]"/>
  <match src="address: address [17152,17159]" dest="address: address [17202,17209]"/>
  <match src="parameter [12215,12224]" dest="parameter [12265,12274]"/>
  <match src="identifier: swapExactTokensForTokens [39451,39475]" dest="identifier: swapExactTokensForTokens [39735,39759]"/>
  <match src=".: . [48520,48521]" dest=".: . [53381,53382]"/>
  <match src="primitive_type [15687,15694]" dest="primitive_type [15737,15744]"/>
  <match src="type_name [59774,59783]" dest="type_name [64949,64958]"/>
  <match src="comment: // if currency remaining, transfer [51901,51935]" dest="comment: // if currency remaining, transfer [57029,57063]"/>
  <match src=",: , [8840,8841]" dest=",: , [8890,8891]"/>
  <match src="type_cast_expression [30425,30435]" dest="type_cast_expression [30475,30485]"/>
  <match src="public: public [44415,44421]" dest="public: public [45162,45168]"/>
  <match src="identifier: recipient [30023,30032]" dest="identifier: recipient [30073,30082]"/>
  <match src="(: ( [25400,25401]" dest="(: ( [25450,25451]"/>
  <match src="variable_declaration_statement [57443,57494]" dest="variable_declaration_statement [53008,53046]"/>
  <match src="parameter [61321,61328]" dest="parameter [67570,67577]"/>
  <match src="identifier: Address [23581,23588]" dest="identifier: Address [23631,23638]"/>
  <match src="event_definition [44854,44894]" dest="event_definition [46562,46602]"/>
  <match src="call_expression [54946,55012]" dest="call_expression [60375,60441]"/>
  <match src="override: override [26604,26612]" dest="override: override [26654,26662]"/>
  <match src=",: , [46790,46791]" dest=",: , [48684,48685]"/>
  <match src="): ) [41591,41592]" dest="): ) [41875,41876]"/>
  <match src="&quot;: &quot; [20744,20745]" dest="&quot;: &quot; [20794,20795]"/>
  <match src="type_name [42278,42284]" dest="type_name [42562,42568]"/>
  <match src="identifier: sendValue [14516,14525]" dest="identifier: sendValue [14566,14575]"/>
  <match src="(: ( [52290,52291]" dest="(: ( [57418,57419]"/>
  <match src="identifier: sender [57644,57650]" dest="identifier: sender [55775,55781]"/>
  <match src="contract_body [36124,36198]" dest="contract_body [36328,36402]"/>
  <match src="variable_declaration [41771,41781]" dest="variable_declaration [42055,42065]"/>
  <match src=".: . [49201,49202]" dest=".: . [54452,54453]"/>
  <match src=".: . [49209,49210]" dest=".: . [54460,54461]"/>
  <match src="parameter [25561,25568]" dest="parameter [25611,25618]"/>
  <match src="&quot;: &quot; [29722,29723]" dest="&quot;: &quot; [29772,29773]"/>
  <match src="state_mutability [8412,8416]" dest="state_mutability [8462,8466]"/>
  <match src="pure: pure [42297,42301]" dest="pure: pure [42581,42585]"/>
  <match src="{: { [58977,58978]" dest="{: { [64152,64153]"/>
  <match src="identifier: _currencyToken [47127,47141]" dest="identifier: _currencyToken [49086,49100]"/>
  <match src="}: } [35019,35020]" dest="}: } [35223,35224]"/>
  <match src="identifier: exit [38555,38559]" dest="identifier: exit [38852,38856]"/>
  <match src="struct_field_assignment [14788,14801]" dest="struct_field_assignment [14838,14851]"/>
  <match src="function: function [39180,39188]" dest="function: function [39464,39472]"/>
  <match src="number_literal: 0 [60944,60945]" dest="number_literal: 0 [67193,67194]"/>
  <match src="parameter [47999,48006]" dest="parameter [52345,52352]"/>
  <match src="uint256: uint256 [3996,4003]" dest="uint256: uint256 [4046,4053]"/>
  <match src="call_argument [17289,17293]" dest="call_argument [17339,17343]"/>
  <match src="binary_expression [54740,54753]" dest="binary_expression [60169,60182]"/>
  <match src="identifier: _curveGauge [47090,47101]" dest="identifier: _curveGauge [49049,49060]"/>
  <match src="comment: // address returns the current address. Since the code is still not [21286,21353]" dest="comment: // address returns the current address. Since the code is still not [21336,21403]"/>
  <match src="): ) [30532,30533]" dest="): ) [30582,30583]"/>
  <match src="identifier: _status [6749,6756]" dest="identifier: _status [6799,6806]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [8512,8801]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [8562,8851]"/>
  <match src="=: = [52917,52918]" dest="=: = [58309,58310]"/>
  <match src="[: [ [39551,39552]" dest="[: [ [39835,39836]"/>
  <match src="type_cast_expression [55887,55907]" dest="type_cast_expression [61325,61345]"/>
  <match src="return_type_definition [36617,36634]" dest="return_type_definition [36821,36838]"/>
  <match src="): ) [18292,18293]" dest="): ) [18342,18343]"/>
  <match src="identifier: Repaid [46169,46175]" dest="identifier: Repaid [47877,47883]"/>
  <match src="parameter [38768,38792]" dest="parameter [39065,39076]"/>
  <match src="identifier: xc [41130,41132]" dest="identifier: xc [41414,41416]"/>
  <match src=".: . [28883,28884]" dest=".: . [28933,28934]"/>
  <match src="identifier: _msgSender [34951,34961]" dest="identifier: _msgSender [35155,35165]"/>
  <match src="primitive_type [4191,4198]" dest="primitive_type [4241,4248]"/>
  <match src="function_body [30395,30708]" dest="function_body [30445,30758]"/>
  <match src="function_body [12286,12357]" dest="function_body [12336,12407]"/>
  <match src="): ) [51712,51713]" dest="): ) [56682,56683]"/>
  <match src="primitive_type [2175,2182]" dest="primitive_type [2225,2232]"/>
  <match src="member_expression [56566,56602]" dest="member_expression [62013,62049]"/>
  <match src="expression_statement [8010,8057]" dest="expression_statement [8060,8107]"/>
  <match src="identifier: yAmount [56443,56450]" dest="identifier: yAmount [61890,61897]"/>
  <match src="): ) [61645,61646]" dest="): ) [67894,67895]"/>
  <match src="visibility [34488,34496]" dest="visibility [34692,34700]"/>
  <match src="comment: // Root file: contracts/truefi/TrueFiPool.sol [42452,42497]" dest="comment: // Root file: contracts/truefi/TrueFiPool.sol [43018,43063]"/>
  <match src="internal: internal [8870,8878]" dest="internal: internal [8920,8928]"/>
  <match src="primitive_type [42372,42379]" dest="primitive_type [42656,42663]"/>
  <match src="identifier: newOwner [35873,35881]" dest="identifier: newOwner [36077,36085]"/>
  <match src="(: ( [32050,32051]" dest="(: ( [32100,32101]"/>
  <match src="visibility [5934,5941]" dest="visibility [5984,5991]"/>
  <match src="type_name [54621,54628]" dest="type_name [60050,60057]"/>
  <match src="type_name [41832,41838]" dest="type_name [42116,42122]"/>
  <match src="string_literal [9664,9699]" dest="string_literal [9714,9749]"/>
  <match src="string [57025,57061]" dest="string [68699,68707]"/>
  <match src="uint256: uint256 [41771,41778]" dest="uint256: uint256 [42055,42062]"/>
  <match src="]: ] [39552,39553]" dest="]: ] [39836,39837]"/>
  <match src="identifier: balanceOf [25680,25689]" dest="identifier: balanceOf [25730,25739]"/>
  <match src="(: ( [30504,30505]" dest="(: ( [30554,30555]"/>
  <match src="identifier: sub [27451,27454]" dest="identifier: sub [27501,27504]"/>
  <match src="identifier: OwnershipTransferred [35844,35864]" dest="identifier: OwnershipTransferred [36048,36068]"/>
  <match src="int256: int256 [42004,42010]" dest="int256: int256 [42288,42294]"/>
  <match src="): ) [37597,37598]" dest="): ) [37801,37802]"/>
  <match src="): ) [3760,3761]" dest="): ) [3810,3811]"/>
  <match src="(: ( [57234,57235]" dest="(: ( [62557,62558]"/>
  <match src="expression_statement [41959,41974]" dest="expression_statement [42243,42258]"/>
  <match src="primitive_type [7982,7989]" dest="primitive_type [8032,8039]"/>
  <match src="(: ( [45696,45697]" dest="(: ( [47404,47405]"/>
  <match src="visibility [30378,30386]" dest="visibility [30428,30436]"/>
  <match src="expression_statement [26106,26149]" dest="expression_statement [26156,26199]"/>
  <match src="): ) [33407,33408]" dest="): ) [33457,33458]"/>
  <match src="visibility [20534,20541]" dest="visibility [20584,20591]"/>
  <match src="): ) [61536,61537]" dest="): ) [67785,67786]"/>
  <match src="bool: bool [21191,21195]" dest="bool: bool [21241,21245]"/>
  <match src="=: = [31277,31278]" dest="=: = [31327,31328]"/>
  <match src="number_literal: 0 [60285,60286]" dest="number_literal: 0 [66473,66474]"/>
  <match src="identifier: owner [2545,2550]" dest="identifier: owner [2595,2600]"/>
  <match src="call_expression [52991,53048]" dest="call_expression [58383,58440]"/>
  <match src="identifier: Ownable [43914,43921]" dest="identifier: Ownable [44661,44668]"/>
  <match src="binary_expression [41498,41508]" dest="binary_expression [41782,41792]"/>
  <match src="uint256: uint256 [59743,59750]" dest="uint256: uint256 [64918,64925]"/>
  <match src="identifier: returndata [18234,18244]" dest="identifier: returndata [18284,18294]"/>
  <match src="call_expression [32105,32173]" dest="call_expression [32155,32223]"/>
  <match src="&quot;: &quot; [51298,51299]" dest="&quot;: &quot; [56268,56269]"/>
  <match src="yul_identifier [13526,13533]" dest="yul_identifier [13576,13583]"/>
  <match src="number_literal: 0x10000 [41330,41337]" dest="number_literal: 0x10000 [41614,41621]"/>
  <match src="bytes: bytes [16171,16176]" dest="bytes: bytes [16221,16226]"/>
  <match src="identifier: calc_token_amount [36475,36492]" dest="identifier: calc_token_amount [36679,36696]"/>
  <match src="): ) [53815,53816]" dest="): ) [59207,59208]"/>
  <match src="primitive_type [29558,29565]" dest="primitive_type [29608,29615]"/>
  <match src=",: , [37272,37273]" dest=",: , [37476,37477]"/>
  <match src="): ) [14895,14896]" dest="): ) [14945,14946]"/>
  <match src="visibility [3323,3331]" dest="visibility [3373,3381]"/>
  <match src="expression_statement [17273,17355]" dest="expression_statement [17323,17405]"/>
  <match src="(: ( [20724,20725]" dest="(: ( [20774,20775]"/>
  <match src="call_expression [57960,57975]" dest="call_expression [63126,63141]"/>
  <match src="identifier: owner [32198,32203]" dest="identifier: owner [32248,32253]"/>
  <match src="identifier: min_amount [37262,37272]" dest="identifier: min_amount [37466,37476]"/>
  <match src="]: ] [28116,28117]" dest="]: ] [28166,28167]"/>
  <match src="-: - [41810,41811]" dest="-: - [42094,42095]"/>
  <match src="type_name [26089,26093]" dest="type_name [26139,26143]"/>
  <match src="call_expression [51486,51529]" dest="call_expression [56456,56499]"/>
  <match src="event_paramater [3954,3974]" dest="event_paramater [4004,4024]"/>
  <match src="uint256: uint256 [58650,58657]" dest="uint256: uint256 [63816,63823]"/>
  <match src="identifier: isContract [17608,17618]" dest="identifier: isContract [17658,17668]"/>
  <match src="call_argument [41792,41793]" dest="call_argument [42076,42077]"/>
  <match src="modifier_invocation [35415,35424]" dest="modifier_invocation [35619,35628]"/>
  <match src="(: ( [57934,57935]" dest="(: ( [63100,63101]"/>
  <match src="call_expression [60801,60896]" dest="call_expression [67050,67145]"/>
  <match src="identifier: TUSD_INDEX [56612,56622]" dest="identifier: TUSD_INDEX [62059,62069]"/>
  <match src="function: function [17445,17453]" dest="function: function [17495,17503]"/>
  <match src="address: address [48096,48103]" dest="address: address [52442,52449]"/>
  <match src="public: public [25707,25713]" dest="public: public [25757,25763]"/>
  <match src="expression_statement [58194,58265]" dest="expression_statement [63360,63431]"/>
  <match src="return: return [26159,26165]" dest="return: return [26209,26215]"/>
  <match src="visibility [59805,59811]" dest="visibility [64980,64986]"/>
  <match src="function: function [39123,39131]" dest="function: function [39407,39415]"/>
  <match src="call_expression [53339,53356]" dest="call_expression [58731,58748]"/>
  <match src="internal: internal [61538,61546]" dest="internal: internal [67787,67795]"/>
  <match src="member_expression [58750,58760]" dest="member_expression [63916,63926]"/>
  <match src="&lt;&lt;: &lt;&lt; [41795,41797]" dest="&lt;&lt;: &lt;&lt; [42079,42081]"/>
  <match src="call_argument [17403,17407]" dest="call_argument [17453,17457]"/>
  <match src="call_argument [51875,51887]" dest="call_argument [57003,57015]"/>
  <match src="comment: /**      * @notice Expected amount of minted Curve.fi yDAI/yUSDC/yUSDT/yTUSD tokens.      * Can be used to control slippage      * Called in flush() function      * @param currencyAmount amount to calculate for      */ [60431,60654]" dest="comment: /**      * @dev Emitted when funds manager is changed      * @param newManager New manager address      */ [46304,46413]"/>
  <match src="state_variable_declaration [34244,34267]" dest="state_variable_declaration [34448,34471]"/>
  <match src=".: . [52284,52285]" dest=".: . [57412,57413]"/>
  <match src=",: , [60346,60347]" dest=",: , [66534,66535]"/>
  <match src="number_literal: 0 [16240,16241]" dest="number_literal: 0 [16290,16291]"/>
  <match src="number_literal: 50 [21802,21804]" dest="number_literal: 50 [21852,21854]"/>
  <match src="call_expression [53198,53223]" dest="call_expression [58590,58615]"/>
  <match src="identifier: x [41792,41793]" dest="identifier: x [42076,42077]"/>
  <match src="}: } [19420,19421]" dest="}: } [19470,19471]"/>
  <match src="pragma: pragma [42501,42507]" dest="pragma: pragma [43067,43073]"/>
  <match src="}: } [49387,49388]" dest="}: } [54638,54639]"/>
  <match src="private: private [5934,5941]" dest="private: private [5984,5991]"/>
  <match src="=: = [30559,30560]" dest="=: = [30609,30610]"/>
  <match src="(: ( [23616,23617]" dest="(: ( [23666,23667]"/>
  <match src="external: external [38357,38365]" dest="external: external [38654,38662]"/>
  <match src="parameter [53838,53845]" dest="parameter [59230,59237]"/>
  <match src="}: } [18416,18417]" dest="}: } [18466,18467]"/>
  <match src="identifier: roughCurveTokenAmount [58242,58263]" dest="identifier: roughCurveTokenAmount [63408,63429]"/>
  <match src="internal: internal [42288,42296]" dest="internal: internal [42572,42580]"/>
  <match src="identifier: from [54682,54686]" dest="identifier: from [60111,60115]"/>
  <match src="): ) [49916,49917]" dest="): ) [55167,55168]"/>
  <match src="): ) [59803,59804]" dest="): ) [64978,64979]"/>
  <match src="[: [ [39648,39649]" dest="[: [ [39932,39933]"/>
  <match src="identifier: token [59841,59846]" dest="identifier: token [65025,65030]"/>
  <match src="call_argument [42338,42343]" dest="call_argument [42622,42627]"/>
  <match src="}: } [18426,18427]" dest="}: } [18476,18477]"/>
  <match src="): ) [51330,51331]" dest="): ) [56300,56301]"/>
  <match src="=: = [47102,47103]" dest="=: = [49061,49062]"/>
  <match src="identifier: require [14818,14825]" dest="identifier: require [14868,14875]"/>
  <match src="&quot;: &quot; [8026,8027]" dest="&quot;: &quot; [8076,8077]"/>
  <match src="identifier: sender [58754,58760]" dest="identifier: sender [63920,63926]"/>
  <match src="primitive_type [1763,1770]" dest="primitive_type [1813,1820]"/>
  <match src="primitive_type [55887,55894]" dest="primitive_type [61325,61332]"/>
  <match src="identifier: claimableFees [50602,50615]" dest="identifier: claimableFees [55572,55585]"/>
  <match src="call_argument [35783,35784]" dest="call_argument [35987,35988]"/>
  <match src=".: . [52016,52017]" dest=".: . [57144,57145]"/>
  <match src="external: external [3323,3331]" dest="external: external [3373,3381]"/>
  <match src="): ) [20674,20675]" dest="): ) [20724,20725]"/>
  <match src="visibility [61300,61306]" dest="visibility [67549,67555]"/>
  <match src="number_literal: 0x10 [41504,41508]" dest="number_literal: 0x10 [41788,41792]"/>
  <match src="identifier: SafeMath [7649,7657]" dest="identifier: SafeMath [7699,7707]"/>
  <match src="function_definition [2518,2601]" dest="function_definition [2568,2651]"/>
  <match src="returns: returns [17239,17246]" dest="returns: returns [17289,17296]"/>
  <match src="emit: emit [35839,35843]" dest="emit: emit [36043,36047]"/>
  <match src="{: { [13213,13214]" dest="{: { [13263,13264]"/>
  <match src="identifier: payer [46192,46197]" dest="identifier: payer [47900,47905]"/>
  <match src="parameter [36875,36889]" dest="parameter [37079,37093]"/>
  <match src="call_argument [59001,59021]" dest="call_argument [64176,64196]"/>
  <match src="yul_identifier [13506,13510]" dest="yul_identifier [13556,13560]"/>
  <match src="expression_statement [58095,58149]" dest="expression_statement [63261,63315]"/>
  <match src="): ) [12284,12285]" dest="): ) [12334,12335]"/>
  <match src="(: ( [52025,52026]" dest="(: ( [57153,57154]"/>
  <match src="comment: /**      * @dev Emitted when fees are collected      * @param beneficiary Account to receive fees      * @param amount Amount of fees collected      */ [46223,46378]" dest="comment: /**      * @dev Emitted when fees are collected      * @param beneficiary Account to receive fees      * @param amount Amount of fees collected      */ [47931,48086]"/>
  <match src="parameter [37412,37419]" dest="parameter [37616,37623]"/>
  <match src="identifier: amount [50205,50211]" dest="identifier: amount [55473,55479]"/>
  <match src="}: } [61409,61410]" dest="}: } [67658,67659]"/>
  <match src="array_access [32186,32204]" dest="array_access [32236,32254]"/>
  <match src="function_body [25570,25608]" dest="function_body [25620,25658]"/>
  <match src="{: { [39116,39117]" dest="{: { [39400,39401]"/>
  <match src="call_expression [12297,12326]" dest="call_expression [12347,12376]"/>
  <match src="call_argument [60335,60346]" dest="call_argument [66523,66534]"/>
  <match src="identifier: add [50632,50635]" dest="identifier: add [55602,55605]"/>
  <match src="&quot;: &quot; [35826,35827]" dest="&quot;: &quot; [36030,36031]"/>
  <match src="uint256: uint256 [9271,9278]" dest="uint256: uint256 [9321,9328]"/>
  <match src="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [42528,42601]" dest="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [43094,43167]"/>
  <match src="member_expression [61588,61631]" dest="member_expression [67837,67880]"/>
  <match src="comment: /**  * @dev Collection of functions related to the address type  */ [12463,12532]" dest="comment: /**  * @dev Collection of functions related to the address type  */ [12513,12582]"/>
  <match src="{: { [12286,12287]" dest="{: { [12336,12337]"/>
  <match src="identifier: _approve [31907,31915]" dest="identifier: _approve [31957,31965]"/>
  <match src="): ) [21668,21669]" dest="): ) [21718,21719]"/>
  <match src="string [29638,29677]" dest="string [29688,29727]"/>
  <match src="binary_expression [54682,54692]" dest="binary_expression [60111,60121]"/>
  <match src="visibility [32651,32659]" dest="visibility [32701,32709]"/>
  <match src="type_name [36557,36564]" dest="type_name [36761,36768]"/>
  <match src="call_argument [10294,10295]" dest="call_argument [10344,10345]"/>
  <match src="): ) [29635,29636]" dest="): ) [29685,29686]"/>
  <match src=".: . [48044,48045]" dest=".: . [52390,52391]"/>
  <match src="if: if [49245,49247]" dest="if: if [54496,54498]"/>
  <match src="): ) [3345,3346]" dest="): ) [3395,3396]"/>
  <match src="): ) [56251,56252]" dest="): ) [61689,61690]"/>
  <match src="uint256: uint256 [37116,37123]" dest="uint256: uint256 [37320,37327]"/>
  <match src="true [26696,26700]" dest="true [26746,26750]"/>
  <match src="member_expression [58722,58749]" dest="member_expression [63888,63915]"/>
  <match src="type_name [37116,37123]" dest="type_name [37320,37327]"/>
  <match src="mapping: mapping [44564,44571]" dest="mapping: mapping [45311,45318]"/>
  <match src="type_name [45361,45368]" dest="type_name [47069,47076]"/>
  <match src="(: ( [57639,57640]" dest="(: ( [55770,55771]"/>
  <match src="uint256: uint256 [8831,8838]" dest="uint256: uint256 [8881,8888]"/>
  <match src="number_literal: 0 [35509,35510]" dest="number_literal: 0 [35713,35714]"/>
  <match src="primitive_type [48096,48103]" dest="primitive_type [52442,52449]"/>
  <match src="bool: bool [13207,13211]" dest="bool: bool [13257,13261]"/>
  <match src="call_argument [30526,30532]" dest="call_argument [30576,30582]"/>
  <match src="expression_statement [41865,41873]" dest="expression_statement [42149,42157]"/>
  <match src="call_argument [32263,32269]" dest="call_argument [32313,32319]"/>
  <match src="call_expression [54448,54457]" dest="call_expression [59840,59849]"/>
  <match src="type_name [3756,3760]" dest="type_name [3806,3810]"/>
  <match src="return_statement [61341,61403]" dest="return_statement [67590,67652]"/>
  <match src="primitive_type [53997,54004]" dest="primitive_type [59389,59396]"/>
  <match src="): ) [60824,60825]" dest="): ) [67073,67074]"/>
  <match src="true [28152,28156]" dest="true [28202,28206]"/>
  <match src="): ) [30681,30682]" dest="): ) [30731,30732]"/>
  <match src="[: [ [55547,55548]" dest="[: [ [60985,60986]"/>
  <match src="}: } [24362,24363]" dest="}: } [24412,24413]"/>
  <match src="state_variable_declaration [6020,6044]" dest="state_variable_declaration [6070,6094]"/>
  <match src="type_name [12215,12222]" dest="type_name [12265,12272]"/>
  <match src="identifier: a [10294,10295]" dest="identifier: a [10344,10345]"/>
  <match src="): ) [54965,54966]" dest="): ) [60394,60395]"/>
  <match src="primitive_type [48243,48250]" dest="primitive_type [52666,52673]"/>
  <match src="): ) [8433,8434]" dest="): ) [8483,8484]"/>
  <match src="primitive_type [59001,59008]" dest="primitive_type [64176,64183]"/>
  <match src="function: function [36574,36582]" dest="function: function [36778,36786]"/>
  <match src="bytes: bytes [17168,17173]" dest="bytes: bytes [17218,17223]"/>
  <match src="function: function [25671,25679]" dest="function: function [25721,25729]"/>
  <match src="(: ( [61020,61021]" dest="(: ( [67269,67270]"/>
  <match src="identifier: from [54904,54908]" dest="identifier: from [60333,60337]"/>
  <match src="&quot;: &quot; [56319,56320]" dest="&quot;: &quot; [61766,61767]"/>
  <match src="string [54694,54724]" dest="string [60123,60153]"/>
  <match src="type_cast_expression [55638,55657]" dest="type_cast_expression [61076,61095]"/>
  <match src="&lt;=: &lt;= [53095,53097]" dest="&lt;=: &lt;= [58487,58489]"/>
  <match src="(: ( [55451,55452]" dest="(: ( [60889,60890]"/>
  <match src="=&gt;: =&gt; [23698,23700]" dest="=&gt;: =&gt; [23748,23750]"/>
  <match src="emit_statement [35839,35883]" dest="emit_statement [36043,36087]"/>
  <match src="call_argument [54999,55011]" dest="call_argument [60428,60440]"/>
  <match src="returns: returns [1910,1917]" dest="returns: returns [1960,1967]"/>
  <match src="identifier: this [48104,48108]" dest="identifier: this [52450,52454]"/>
  <match src="call_expression [32026,32094]" dest="call_expression [32076,32144]"/>
  <match src="expression_statement [47655,47657]" dest="expression_statement [49533,49535]"/>
  <match src="identifier: lv [53866,53868]" dest="identifier: lv [59258,59260]"/>
  <match src="call_expression [27339,27375]" dest="call_expression [27389,27425]"/>
  <match src="identifier: tx [52733,52735]" dest="identifier: tx [58125,58127]"/>
  <match src="identifier: fee [46004,46007]" dest="identifier: fee [47712,47715]"/>
  <match src="(: ( [49781,49782]" dest="(: ( [55032,55033]"/>
  <match src=",: , [26128,26129]" dest=",: , [26178,26179]"/>
  <match src="if_statement [41578,41651]" dest="if_statement [41862,41935]"/>
  <match src="(: ( [60394,60395]" dest="(: ( [66582,66583]"/>
  <match src="call_expression [54025,54038]" dest="call_expression [59417,59430]"/>
  <match src="=: = [34570,34571]" dest="=: = [34774,34775]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [7064,7639]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [7114,7689]"/>
  <match src="event_paramater [45980,45994]" dest="event_paramater [47688,47702]"/>
  <match src="identifier: add [48812,48815]" dest="identifier: add [53740,53743]"/>
  <match src="address: address [55638,55645]" dest="address: address [61076,61083]"/>
  <match src="return_statement [10283,10330]" dest="return_statement [10333,10380]"/>
  <match src="binary_expression [52813,52844]" dest="binary_expression [58205,58236]"/>
  <match src="using_directive [23542,23569]" dest="using_directive [23592,23619]"/>
  <match src="identifier: currencyAmount [58658,58672]" dest="identifier: currencyAmount [63824,63838]"/>
  <match src="primitive_type [16705,16712]" dest="primitive_type [16755,16762]"/>
  <match src="assignment_expression [6749,6767]" dest="assignment_expression [6799,6817]"/>
  <match src="): ) [48831,48832]" dest="): ) [53756,53757]"/>
  <match src="visibility [37446,37454]" dest="visibility [37650,37658]"/>
  <match src="identifier: sender [27222,27228]" dest="identifier: sender [27272,27278]"/>
  <match src="expression_statement [60303,60357]" dest="expression_statement [66491,66545]"/>
  <match src="=: = [24322,24323]" dest="=: = [24372,24373]"/>
  <match src="): ) [17659,17660]" dest="): ) [17709,17710]"/>
  <match src="): ) [52291,52292]" dest="): ) [57419,57420]"/>
  <match src=",: , [2550,2551]" dest=",: , [2600,2601]"/>
  <match src="primitive_type [53838,53845]" dest="primitive_type [59230,59237]"/>
  <match src="(: ( [8456,8457]" dest="(: ( [8506,8507]"/>
  <match src="identifier: errorMessage [12313,12325]" dest="identifier: errorMessage [12363,12375]"/>
  <match src="(: ( [32131,32132]" dest="(: ( [32181,32182]"/>
  <match src="(: ( [15782,15783]" dest="(: ( [15832,15833]"/>
  <match src="type_name [44878,44885]" dest="type_name [46586,46593]"/>
  <match src="comment: // pragma solidity 0.6.10; [21901,21927]" dest="comment: // pragma solidity 0.6.10; [21951,21977]"/>
  <match src="{: { [59822,59823]" dest="{: { [65006,65007]"/>
  <match src="(: ( [26621,26622]" dest="(: ( [26671,26672]"/>
  <match src="uint256: uint256 [55512,55519]" dest="uint256: uint256 [60950,60957]"/>
  <match src="): ) [47228,47229]" dest="): ) [49187,49188]"/>
  <match src="identifier: msg [57585,57588]" dest="identifier: msg [62760,62763]"/>
  <match src="type_name [2552,2559]" dest="type_name [2602,2609]"/>
  <match src="user_defined_type [37590,37597]" dest="user_defined_type [37794,37801]"/>
  <match src="function_definition [26241,26392]" dest="function_definition [26291,26442]"/>
  <match src="primitive_type [42004,42010]" dest="primitive_type [42288,42294]"/>
  <match src="identifier: require [53070,53077]" dest="identifier: require [58462,58469]"/>
  <match src="call_argument [26648,26660]" dest="call_argument [26698,26710]"/>
  <match src="primitive_type [45962,45969]" dest="primitive_type [47670,47677]"/>
  <match src="=: = [21575,21576]" dest="=: = [21625,21626]"/>
  <match src="identifier: cs [21646,21648]" dest="identifier: cs [21696,21698]"/>
  <match src="identifier: sender [3695,3701]" dest="identifier: sender [3745,3751]"/>
  <match src="): ) [48110,48111]" dest="): ) [52456,52457]"/>
  <match src="call_expression [60984,61002]" dest="call_expression [67233,67251]"/>
  <match src="function_body [32660,32700]" dest="function_body [32710,32750]"/>
  <match src=",: , [53598,53599]" dest=",: , [58990,58991]"/>
  <match src="uint256: uint256 [48771,48778]" dest="uint256: uint256 [53631,53638]"/>
  <match src="visibility [41008,41016]" dest="visibility [41292,41300]"/>
  <match src="comment: /**      * @dev borrow from pool      * 1. Transfer TUSD to sender      * 2. Only lending pool should be allowed to call this      */ [38593,38730]" dest="comment: /**      * @dev borrow from pool      * 1. Transfer TUSD to sender      * 2. Only lending pool should be allowed to call this      */ [38890,39027]"/>
  <match src="(: ( [46757,46758]" dest="(: ( [48651,48652]"/>
  <match src="assignment_expression [35893,35910]" dest="assignment_expression [36097,36114]"/>
  <match src="parameter [59716,59732]" dest="parameter [64891,64907]"/>
  <match src="primitive_type [20397,20401]" dest="primitive_type [20447,20451]"/>
  <match src=".: . [54966,54967]" dest=".: . [60395,60396]"/>
  <match src="call_argument [59972,59976]" dest="call_argument [65156,65160]"/>
  <match src="augmented_assignment_expression [41525,41533]" dest="augmented_assignment_expression [41809,41817]"/>
  <match src="state_mutability [48229,48233]" dest="state_mutability [52652,52656]"/>
  <match src="type_name [41102,41108]" dest="type_name [41386,41392]"/>
  <match src="call_expression [52919,52930]" dest="call_expression [58311,58322]"/>
  <match src="type_name [40692,40698]" dest="type_name [40976,40982]"/>
  <match src="member_expression [55929,55948]" dest="member_expression [61367,61386]"/>
  <match src="false: false [21027,21032]" dest="false: false [21077,21082]"/>
  <match src=".: . [46969,46970]" dest=".: . [48928,48929]"/>
  <match src="call_argument [17628,17659]" dest="call_argument [17678,17709]"/>
  <match src="call_argument [54166,54221]" dest="call_argument [59558,59613]"/>
  <match src="call_argument [26671,26677]" dest="call_argument [26721,26727]"/>
  <match src="type_name [29558,29565]" dest="type_name [29608,29615]"/>
  <match src=",: , [27988,27989]" dest=",: , [28038,28039]"/>
  <match src="!: ! [20730,20731]" dest="!: ! [20780,20781]"/>
  <match src="(: ( [30432,30433]" dest="(: ( [30482,30483]"/>
  <match src="identifier: _balances [29958,29967]" dest="identifier: _balances [30008,30017]"/>
  <match src="&quot;: &quot; [9664,9665]" dest="&quot;: &quot; [9714,9715]"/>
  <match src="visibility [39623,39631]" dest="visibility [39907,39915]"/>
  <match src="parameter [38341,38355]" dest="parameter [38638,38652]"/>
  <match src="identifier: mul [57897,57900]" dest="identifier: mul [63063,63066]"/>
  <match src="identifier: amount [51095,51101]" dest="identifier: amount [56065,56071]"/>
  <match src="identifier: currencyAmount [55418,55432]" dest="identifier: currencyAmount [60856,60870]"/>
  <match src="primitive_type [50191,50198]" dest="primitive_type [55459,55466]"/>
  <match src="function: function [37541,37549]" dest="function: function [37745,37753]"/>
  <match src="primitive_type [51451,51458]" dest="primitive_type [56421,56428]"/>
  <match src="&quot;: &quot; [9698,9699]" dest="&quot;: &quot; [9748,9749]"/>
  <match src="): ) [23635,23636]" dest="): ) [23685,23686]"/>
  <match src="interface_declaration [1619,4257]" dest="interface_declaration [1669,4307]"/>
  <match src="function: function [38546,38554]" dest="function: function [38843,38851]"/>
  <match src="identifier: calcTokenAmount [57863,57878]" dest="identifier: calcTokenAmount [63029,63044]"/>
  <match src="identifier: _currencyToken [53509,53523]" dest="identifier: _currencyToken [58901,58915]"/>
  <match src=".: . [59908,59909]" dest=".: . [65092,65093]"/>
  <match src="function: function [35674,35682]" dest="function: function [35878,35886]"/>
  <match src="if: if [53930,53932]" dest="if: if [59322,59324]"/>
  <match src="expression_statement [30484,30534]" dest="expression_statement [30534,30584]"/>
  <match src="): ) [54631,54632]" dest="): ) [60060,60061]"/>
  <match src="variable_declaration_statement [55512,55573]" dest="variable_declaration_statement [60950,61011]"/>
  <match src="identifier: sender [19163,19169]" dest="identifier: sender [19213,19219]"/>
  <match src=".: . [54109,54110]" dest=".: . [59501,59502]"/>
  <match src="uint256: uint256 [53838,53845]" dest="uint256: uint256 [59230,59237]"/>
  <match src="): ) [60737,60738]" dest="): ) [66986,66987]"/>
  <match src="(: ( [17476,17477]" dest="(: ( [17526,17527]"/>
  <match src="primitive_type [49837,49844]" dest="primitive_type [55088,55095]"/>
  <match src="variable_declaration_statement [50249,50291]" dest="variable_declaration_statement [55517,55562]"/>
  <match src="call_argument [52026,52036]" dest="call_argument [57154,57164]"/>
  <match src="(: ( [12276,12277]" dest="(: ( [12326,12327]"/>
  <match src="): ) [48328,48329]" dest="): ) [52823,52824]"/>
  <match src="type_name [17493,17498]" dest="type_name [17543,17548]"/>
  <match src="comment: // Copied from https://github.com/OpenZeppelin/openzeppelin-contracts-ethereum-package/blob/v3.0.0/contracts/Initializable.sol [19492,19618]" dest="comment: // Copied from https://github.com/OpenZeppelin/openzeppelin-contracts-ethereum-package/blob/v3.0.0/contracts/Initializable.sol [19542,19668]"/>
  <match src="address: address [29505,29512]" dest="address: address [29555,29562]"/>
  <match src="if: if [60272,60274]" dest="if: if [66460,66462]"/>
  <match src="identifier: decreaseAllowance [28676,28693]" dest="identifier: decreaseAllowance [28726,28743]"/>
  <match src="(: ( [20694,20695]" dest="(: ( [20744,20745]"/>
  <match src="identifier: from [33351,33355]" dest="identifier: from [33401,33405]"/>
  <match src="(: ( [54165,54166]" dest="(: ( [59557,59558]"/>
  <match src="identifier: _currencyToken [58722,58736]" dest="identifier: _currencyToken [63888,63902]"/>
  <match src="(: ( [39199,39200]" dest="(: ( [39483,39484]"/>
  <match src=",: , [28081,28082]" dest=",: , [28131,28132]"/>
  <match src="identifier: liquidValue [53098,53109]" dest="identifier: liquidValue [58490,58501]"/>
  <match src="): ) [51379,51380]" dest="): ) [56349,56350]"/>
  <match src="call_argument [27455,27461]" dest="call_argument [27505,27511]"/>
  <match src="identifier: roughCurveTokenAmount [57935,57956]" dest="identifier: roughCurveTokenAmount [63101,63122]"/>
  <match src="internal: internal [19093,19101]" dest="internal: internal [19143,19151]"/>
  <match src="parameter [2228,2232]" dest="parameter [2278,2282]"/>
  <match src="identifier: sub [31298,31301]" dest="identifier: sub [31348,31351]"/>
  <match src="identifier: amount [26048,26054]" dest="identifier: amount [26098,26104]"/>
  <match src="call_expression [58321,58339]" dest="call_expression [63487,63505]"/>
  <match src=",: , [37114,37115]" dest=",: , [37318,37319]"/>
  <match src="identifier: errorMessage [8856,8868]" dest="identifier: errorMessage [8906,8918]"/>
  <match src="internal: internal [12254,12262]" dest="internal: internal [12304,12312]"/>
  <match src="member_expression [52833,52843]" dest="member_expression [58225,58235]"/>
  <match src="identifier: join [50141,50145]" dest="identifier: join [55392,55396]"/>
  <match src="{: { [57176,57177]" dest="{: { [62507,62508]"/>
  <match src="call_expression [54674,54725]" dest="call_expression [60103,60154]"/>
  <match src="call_argument [16226,16232]" dest="call_argument [16276,16282]"/>
  <match src="}: } [12356,12357]" dest="}: } [12406,12407]"/>
  <match src="(: ( [58125,58126]" dest="(: ( [63291,63292]"/>
  <match src="type_cast_expression [54885,54899]" dest="type_cast_expression [60314,60328]"/>
  <match src="): ) [3321,3322]" dest="): ) [3371,3372]"/>
  <match src="}: } [39304,39305]" dest="}: } [39588,39589]"/>
  <match src="function_definition [26003,26178]" dest="function_definition [26053,26228]"/>
  <match src="uint256: uint256 [60907,60914]" dest="uint256: uint256 [67156,67163]"/>
  <match src="identifier: div [51530,51533]" dest="identifier: div [56500,56503]"/>
  <match src="parameter [19124,19139]" dest="parameter [19174,19189]"/>
  <match src="}: } [41650,41651]" dest="}: } [41934,41935]"/>
  <match src=".: . [47220,47221]" dest=".: . [49179,49180]"/>
  <match src="number_literal: 32 [41272,41274]" dest="number_literal: 32 [41556,41558]"/>
  <match src="string [16813,16856]" dest="string [16863,16906]"/>
  <match src="call_expression [56499,56517]" dest="call_expression [61946,61964]"/>
  <match src="identifier: b [9632,9633]" dest="identifier: b [9682,9683]"/>
  <match src="identifier: success [17739,17746]" dest="identifier: success [17789,17796]"/>
  <match src="number_literal: 0 [12310,12311]" dest="number_literal: 0 [12360,12361]"/>
  <match src="external: external [56928,56936]" dest="external: external [62361,62369]"/>
  <match src="type_name [3687,3694]" dest="type_name [3737,3744]"/>
  <match src="identifier: _uniRouter [59865,59875]" dest="identifier: _uniRouter [65049,65059]"/>
  <match src=",: , [57650,57651]" dest=",: , [55781,55782]"/>
  <match src="variable_declaration [41832,41842]" dest="variable_declaration [42116,42126]"/>
  <match src="}: } [54489,54490]" dest="}: } [59881,59882]"/>
  <match src=",: , [3305,3306]" dest=",: , [3355,3356]"/>
  <match src="type_name [53997,54004]" dest="type_name [59389,59396]"/>
  <match src="type_name [56209,56216]" dest="type_name [61647,61654]"/>
  <match src="call_argument [56612,56622]" dest="call_argument [62059,62069]"/>
  <match src="identifier: __lender [46881,46889]" dest="identifier: __lender [48775,48783]"/>
  <match src="call_expression [29773,29820]" dest="call_expression [29823,29870]"/>
  <match src="identifier: _owner [34794,34800]" dest="identifier: _owner [34998,35004]"/>
  <match src="[: [ [28874,28875]" dest="[: [ [28924,28925]"/>
  <match src="uint256: uint256 [26040,26047]" dest="uint256: uint256 [26090,26097]"/>
  <match src="address: address [26021,26028]" dest="address: address [26071,26078]"/>
  <match src="view: view [37009,37013]" dest="view: view [37213,37217]"/>
  <match src="parameter [33343,33355]" dest="parameter [33393,33405]"/>
  <match src="call_expression [55929,55958]" dest="call_expression [61367,61396]"/>
  <match src="int256: int256 [41077,41083]" dest="int256: int256 [41361,41367]"/>
  <match src="}: } [47663,47664]" dest="}: } [49541,49542]"/>
  <match src="}: } [17436,17437]" dest="}: } [17486,17487]"/>
  <match src="(: ( [53317,53318]" dest="(: ( [58709,58710]"/>
  <match src="{: { [14786,14787]" dest="{: { [14836,14837]"/>
  <match src="assembly: assembly [18173,18181]" dest="assembly: assembly [18223,18231]"/>
  <match src="if_statement [20852,20951]" dest="if_statement [20902,21001]"/>
  <match src="parameter [37235,37243]" dest="parameter [37439,37447]"/>
  <match src="member_expression [47305,47327]" dest="member_expression [66016,66035]"/>
  <match src="expression_statement [6087,6110]" dest="expression_statement [6137,6160]"/>
  <match src="number_literal: 4 [36501,36502]" dest="number_literal: 4 [36705,36706]"/>
  <match src="block_statement [17994,18345]" dest="block_statement [18044,18395]"/>
  <match src="identifier: yBalance [55949,55957]" dest="identifier: yBalance [61387,61395]"/>
  <match src="visibility [48750,48756]" dest="visibility [53610,53616]"/>
  <match src="(: ( [52934,52935]" dest="(: ( [58326,58327]"/>
  <match src="memory: memory [19242,19248]" dest="memory: memory [19292,19298]"/>
  <match src="||: || [20708,20710]" dest="||: || [20758,20760]"/>
  <match src="identifier: to [54629,54631]" dest="identifier: to [60058,60060]"/>
  <match src="type_name [2194,2201]" dest="type_name [2244,2251]"/>
  <match src="identifier: _lender [47588,47595]" dest="identifier: _lender [49473,49480]"/>
  <match src="call_argument [51153,51195]" dest="call_argument [56123,56165]"/>
  <match src="call_argument [31390,31396]" dest="call_argument [31440,31446]"/>
  <match src="return_type_definition [47815,47831]" dest="return_type_definition [50644,50660]"/>
  <match src="): ) [27287,27288]" dest="): ) [27337,27338]"/>
  <match src="(: ( [2174,2175]" dest="(: ( [2224,2225]"/>
  <match src="]: ] [28107,28108]" dest="]: ] [28157,28158]"/>
  <match src="(: ( [58815,58816]" dest="(: ( [63981,63982]"/>
  <match src="assignment_expression [24314,24330]" dest="assignment_expression [24364,24380]"/>
  <match src="]: ] [51194,51195]" dest="]: ] [56164,56165]"/>
  <match src="identifier: a [10854,10855]" dest="identifier: a [10904,10905]"/>
  <match src="parameter [37356,37377]" dest="parameter [37560,37581]"/>
  <match src="commentdest="comment
  <match src="type_name [46836,46842]" dest="type_name [48730,48736]"/>
  <match src="identifier: timestamp [59985,59994]" dest="identifier: timestamp [65169,65178]"/>
  <match src="call_argument [52745,52793]" dest="call_argument [58137,58185]"/>
  <match src="call_expression [52947,52960]" dest="call_expression [58339,58352]"/>
  <match src="(: ( [30014,30015]" dest="(: ( [30064,30065]"/>
  <match src="binary_expression [49249,49288]" dest="binary_expression [54500,54539]"/>
  <match src="uint256: uint256 [54654,54661]" dest="uint256: uint256 [60083,60090]"/>
  <match src="modifier: modifier [20653,20661]" dest="modifier: modifier [20703,20711]"/>
  <match src="expression_statement [50602,50641]" dest="expression_statement [55572,55611]"/>
  <match src="primitive_type [2537,2544]" dest="primitive_type [2587,2594]"/>
  <match src="return_statement [28967,28979]" dest="return_statement [29017,29029]"/>
  <match src=",: , [61029,61030]" dest=",: , [67278,67279]"/>
  <match src="state_mutability [60716,60720]" dest="state_mutability [66965,66969]"/>
  <match src="(: ( [48829,48830]" dest="(: ( [54081,54082]"/>
  <match src="boolean_literal [61031,61035]" dest="boolean_literal [67280,67284]"/>
  <match src="identifier: b [42011,42012]" dest="identifier: b [42295,42296]"/>
  <match src="identifier: Pulled [45690,45696]" dest="identifier: Pulled [47398,47404]"/>
  <match src="&gt;: &gt; [60283,60284]" dest="&gt;: &gt; [66471,66472]"/>
  <match src="call_argument [57668,57671]" dest="call_argument [62834,62837]"/>
  <match src="(: ( [50760,50761]" dest="(: ( [55730,55731]"/>
  <match src=",: , [16232,16233]" dest=",: , [16282,16283]"/>
  <match src="number_literal: 64 [54479,54481]" dest="number_literal: 64 [59871,59873]"/>
  <match src="type_name [8893,8900]" dest="type_name [8943,8950]"/>
  <match src="number_unit [48336,48341]" dest="number_unit [52831,52836]"/>
  <match src="bool: bool [26089,26093]" dest="bool: bool [26139,26143]"/>
  <match src="identifier: require [34933,34940]" dest="identifier: require [35137,35144]"/>
  <match src=",: , [17407,17408]" dest=",: , [17457,17458]"/>
  <match src="emit: emit [50789,50793]" dest="emit: emit [62802,62806]"/>
  <match src="return_type_definition [10910,10927]" dest="return_type_definition [10960,10977]"/>
  <match src="assignment_expression [24341,24355]" dest="assignment_expression [24391,24405]"/>
  <match src="visibility [28010,28016]" dest="visibility [28060,28066]"/>
  <match src="primitive_type [43948,43955]" dest="primitive_type [44695,44702]"/>
  <match src="): ) [21589,21590]" dest="): ) [21639,21640]"/>
  <match src="assignment_expression [47170,47188]" dest="assignment_expression [49129,49147]"/>
  <match src="}: } [18344,18345]" dest="}: } [18394,18395]"/>
  <match src="interface: interface [36642,36651]" dest="interface: interface [36846,36855]"/>
  <match src="parameter [54373,54380]" dest="parameter [59765,59772]"/>
  <match src="parameter [3290,3305]" dest="parameter [3340,3355]"/>
  <match src="): ) [25744,25745]" dest="): ) [25794,25795]"/>
  <match src="identifier: sub [31386,31389]" dest="identifier: sub [31436,31439]"/>
  <match src="(: ( [54681,54682]" dest="(: ( [60110,60111]"/>
  <match src="&quot;: &quot; [56368,56369]" dest="&quot;: &quot; [61815,61816]"/>
  <match src="return_type_definition [12268,12285]" dest="return_type_definition [12318,12335]"/>
  <match src="number_literal: 0 [21703,21704]" dest="number_literal: 0 [21753,21754]"/>
  <match src="type_name [27267,27274]" dest="type_name [27317,27324]"/>
  <match src="string_literal [52745,52793]" dest="string_literal [58137,58185]"/>
  <match src="identifier: claimableFees [50618,50631]" dest="identifier: claimableFees [55588,55601]"/>
  <match src="parameter [40998,41006]" dest="parameter [41282,41290]"/>
  <match src="): ) [38792,38793]" dest="): ) [39076,39077]"/>
  <match src="): ) [34774,34775]" dest="): ) [34978,34979]"/>
  <match src="type_name [23663,23710]" dest="type_name [23713,23760]"/>
  <match src="assignment_expression [31358,31397]" dest="assignment_expression [31408,31447]"/>
  <match src="identifier: b [11668,11669]" dest="identifier: b [11718,11719]"/>
  <match src="primitive_type [13415,13422]" dest="primitive_type [13465,13472]"/>
  <match src="identifier: _balances [30617,30626]" dest="identifier: _balances [30667,30676]"/>
  <match src="external: external [37141,37149]" dest="external: external [37345,37353]"/>
  <match src="call_expression [54084,54098]" dest="call_expression [59476,59490]"/>
  <match src="state_variable_declaration [44527,44556]" dest="state_variable_declaration [45274,45303]"/>
  <match src="(: ( [41412,41413]" dest="(: ( [41696,41697]"/>
  <match src="parameter [25737,25744]" dest="parameter [25787,25794]"/>
  <match src="type_name [3976,3983]" dest="type_name [4026,4033]"/>
  <match src="identifier: xc [41172,41174]" dest="identifier: xc [41456,41458]"/>
  <match src="identifier: value [14788,14793]" dest="identifier: value [14838,14843]"/>
  <match src="public: public [44237,44243]" dest="public: public [44984,44990]"/>
  <match src="identifier: ICurve [37525,37531]" dest="identifier: ICurve [37729,37735]"/>
  <match src="function_definition [36671,36741]" dest="function_definition [36875,36945]"/>
  <match src="call_expression [51486,51547]" dest="call_expression [56456,56517]"/>
  <match src="(: ( [3340,3341]" dest="(: ( [3390,3391]"/>
  <match src="string [56319,56369]" dest="string [61766,61816]"/>
  <match src="variable_declaration_statement [41077,41092]" dest="variable_declaration_statement [41361,41376]"/>
  <match src="identifier: _lender [44352,44359]" dest="identifier: _lender [45099,45106]"/>
  <match src="): ) [27505,27506]" dest="): ) [27555,27556]"/>
  <match src="primitive_type [45361,45368]" dest="primitive_type [47069,47076]"/>
  <match src="parameter [54341,54350]" dest="parameter [59733,59742]"/>
  <match src="visibility [15722,15730]" dest="visibility [15772,15780]"/>
  <match src="number_literal: 0 [9591,9592]" dest="number_literal: 0 [9641,9642]"/>
  <match src="call_argument [29722,29759]" dest="call_argument [29772,29809]"/>
  <match src=".: . [58316,58317]" dest=".: . [63482,63483]"/>
  <match src=".: . [58753,58754]" dest=".: . [63919,63920]"/>
  <match src="function: function [14507,14515]" dest="function: function [14557,14565]"/>
  <match src="): ) [55452,55453]" dest="): ) [60890,60891]"/>
  <match src="comment: // Dependency file: contracts/truefi/common/UpgradeableERC20.sol [21833,21897]" dest="comment: // Dependency file: contracts/truefi/common/UpgradeableERC20.sol [21883,21947]"/>
  <match src="function_body [41039,42066]" dest="function_body [41323,42350]"/>
  <match src="parameter [17248,17260]" dest="parameter [17298,17310]"/>
  <match src="(: ( [21663,21664]" dest="(: ( [21713,21714]"/>
  <match src="uint256: uint256 [53997,54004]" dest="uint256: uint256 [59389,59396]"/>
  <match src="identifier: amount [45988,45994]" dest="identifier: amount [47696,47702]"/>
  <match src="expression_statement [49871,49922]" dest="expression_statement [55122,55173]"/>
  <match src="primitive_type [49220,49227]" dest="primitive_type [54471,54478]"/>
  <match src="&quot;: &quot; [53154,53155]" dest="&quot;: &quot; [58546,58547]"/>
  <match src="internal: internal [40669,40677]" dest="internal: internal [40953,40961]"/>
  <match src="{: { [41250,41251]" dest="{: { [41534,41535]"/>
  <match src="(: ( [24216,24217]" dest="(: ( [24266,24267]"/>
  <match src="expression_statement [41378,41388]" dest="expression_statement [41662,41672]"/>
  <match src="(: ( [30671,30672]" dest="(: ( [30721,30722]"/>
  <match src="primitive_type [8842,8848]" dest="primitive_type [8892,8898]"/>
  <match src="(: ( [53011,53012]" dest="(: ( [58403,58404]"/>
  <match src="function_definition [2157,2234]" dest="function_definition [2207,2284]"/>
  <match src="virtual: virtual [33418,33425]" dest="virtual: virtual [33468,33475]"/>
  <match src="identifier: a [8965,8966]" dest="identifier: a [9015,9016]"/>
  <match src="): ) [45170,45171]" dest="): ) [46878,46879]"/>
  <match src="if_statement [53930,53987]" dest="if_statement [59322,59379]"/>
  <match src="identifier: sender [51859,51865]" dest="identifier: sender [56987,56993]"/>
  <match src="contract_body [43922,61657]" dest="contract_body [44669,68719]"/>
  <match src="(: ( [48103,48104]" dest="(: ( [52449,52450]"/>
  <match src="identifier: distribute [51844,51854]" dest="identifier: distribute [56972,56982]"/>
  <match src="parameter [36626,36633]" dest="parameter [36830,36837]"/>
  <match src=".: . [49942,49943]" dest=".: . [55193,55194]"/>
  <match src="identifier: ensureEnoughTokensAreAvailable [56412,56442]" dest="identifier: ensureEnoughTokensAreAvailable [61859,61889]"/>
  <match src="private: private [5982,5989]" dest="private: private [6032,6039]"/>
  <match src="identifier: b [8839,8840]" dest="identifier: b [8889,8890]"/>
  <match src="expression_statement [51836,51889]" dest="expression_statement [56964,57017]"/>
  <match src="comment: /**  * @dev Contract module that helps prevent reentrant calls to a function.  *  * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier  * available, which can be applied to functions to make sure there are no nested  * (reentrant) calls to them.  *  * Note that because there is a single `nonReentrant` guard, functions marked as  * `nonReentrant` may not call one another. This can be worked around by making  * those functions `private`, and then adding `external` `nonReentrant` entry  * points to them.  *  * TIP: If you would like to learn more about reentrancy and alternative ways  * to protect against it, check out our blog post  * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].  */ [4368,5133]" dest="comment: /**  * @dev Contract module that helps prevent reentrant calls to a function.  *  * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier  * available, which can be applied to functions to make sure there are no nested  * (reentrant) calls to them.  *  * Note that because there is a single `nonReentrant` guard, functions marked as  * `nonReentrant` may not call one another. This can be worked around by making  * those functions `private`, and then adding `external` `nonReentrant` entry  * points to them.  *  * TIP: If you would like to learn more about reentrancy and alternative ways  * to protect against it, check out our blog post  * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].  */ [4418,5183]"/>
  <match src="): ) [30699,30700]" dest="): ) [30749,30750]"/>
  <match src="call_expression [56981,57062]" dest="call_expression [68655,68708]"/>
  <match src="external: external [39623,39631]" dest="external: external [39907,39915]"/>
  <match src="[: [ [31267,31268]" dest="[: [ [31317,31318]"/>
  <match src="=: = [7992,7993]" dest="=: = [8042,8043]"/>
  <match src="member_expression [53204,53214]" dest="member_expression [58596,58606]"/>
  <match src="expression_statement [40711,40744]" dest="expression_statement [40995,41028]"/>
  <match src="function: function [37158,37166]" dest="function: function [37362,37370]"/>
  <match src="function_body [9325,9729]" dest="function_body [9375,9779]"/>
  <match src="parameter [24217,24235]" dest="parameter [24267,24285]"/>
  <match src="(: ( [34301,34302]" dest="(: ( [34505,34506]"/>
  <match src="type_cast_expression [49220,49233]" dest="type_cast_expression [54471,54484]"/>
  <match src="visibility [23711,23718]" dest="visibility [23761,23768]"/>
  <match src="comment: /**      * @dev Initializes the contract setting the deployer as the initial owner.      */ [34367,34460]" dest="comment: /**      * @dev Initializes the contract setting the deployer as the initial owner.      */ [34571,34664]"/>
  <match src=".: . [53207,53208]" dest=".: . [58599,58600]"/>
  <match src="modifier_invocation [55389,55398]" dest="modifier_invocation [51045,51054]"/>
  <match src="internal: internal [57748,57756]" dest="internal: internal [62914,62922]"/>
  <match src="call_argument [26116,26128]" dest="call_argument [26166,26178]"/>
  <match src="function_definition [30330,30708]" dest="function_definition [30380,30758]"/>
  <match src="array_access [29853,29870]" dest="array_access [29903,29920]"/>
  <match src="return_statement [19395,19411]" dest="return_statement [19445,19461]"/>
  <match src="identifier: balanceOf [61603,61612]" dest="identifier: balanceOf [67852,67861]"/>
  <match src="identifier: name [24299,24303]" dest="identifier: name [24349,24353]"/>
  <match src="uint256: uint256 [51344,51351]" dest="uint256: uint256 [56314,56321]"/>
  <match src="call_expression [54971,54993]" dest="call_expression [60400,60422]"/>
  <match src="identifier: errorMessage [16139,16151]" dest="identifier: errorMessage [16189,16201]"/>
  <match src="array_access [27417,27436]" dest="array_access [27467,27486]"/>
  <match src="(: ( [54154,54155]" dest="(: ( [59546,59547]"/>
  <match src="visibility [44345,44351]" dest="visibility [45092,45098]"/>
  <match src="): ) [55848,55849]" dest="): ) [61286,61287]"/>
  <match src="identifier: msg [47566,47569]" dest="identifier: msg [49451,49454]"/>
  <match src="call_argument [51761,51771]" dest="call_argument [56889,56899]"/>
  <match src="call_expression [48525,48538]" dest="call_expression [53386,53399]"/>
  <match src="type_name [57443,57450]" dest="type_name [53008,53015]"/>
  <match src="variable_declaration [51344,51364]" dest="variable_declaration [56314,56334]"/>
  <match src="return: return [28145,28151]" dest="return: return [28195,28201]"/>
  <match src="return: return [8069,8075]" dest="return: return [8119,8125]"/>
  <match src="): ) [29677,29678]" dest="): ) [29727,29728]"/>
  <match src=",: , [34628,34629]" dest=",: , [34832,34833]"/>
  <match src="parameter [27322,27326]" dest="parameter [27372,27376]"/>
  <match src=".: . [50804,50805]" dest=".: . [62817,62818]"/>
  <match src="call_expression [54166,54221]" dest="call_expression [59558,59613]"/>
  <match src="type_name [43948,43955]" dest="type_name [44695,44702]"/>
  <match src="call_argument [58777,58791]" dest="call_argument [63943,63957]"/>
  <match src="{: { [48008,48009]" dest="{: { [52354,52355]"/>
  <match src="): ) [17353,17354]" dest="): ) [17403,17404]"/>
  <match src="member_expression [60844,60893]" dest="member_expression [67093,67142]"/>
  <match src="assignment_expression [29833,29924]" dest="assignment_expression [29883,29974]"/>
  <match src="string: string [24674,24680]" dest="string: string [24724,24730]"/>
  <match src="state_mutability [38166,38170]" dest="state_mutability [38370,38374]"/>
  <match src="): ) [36765,36766]" dest="): ) [36969,36970]"/>
  <match src="binary_expression [6616,6635]" dest="binary_expression [6666,6685]"/>
  <match src="type_name [54654,54661]" dest="type_name [60083,60090]"/>
  <match src="{: { [41885,41886]" dest="{: { [42169,42170]"/>
  <match src="inheritance_specifier [36117,36123]" dest="inheritance_specifier [36321,36327]"/>
  <match src="identifier: __currencyToken [47144,47159]" dest="identifier: __currencyToken [49103,49118]"/>
  <match src="uint256: uint256 [30362,30369]" dest="uint256: uint256 [30412,30419]"/>
  <match src=",: , [54201,54202]" dest=",: , [59593,59594]"/>
  <match src="visibility [38980,38988]" dest="visibility [39264,39272]"/>
  <match src="(: ( [54184,54185]" dest="(: ( [59576,59577]"/>
  <match src="inheritance_specifier [38086,38092]" dest="inheritance_specifier [38290,38296]"/>
  <match src="{: { [41039,41040]" dest="{: { [41323,41324]"/>
  <match src="uint256: uint256 [39163,39170]" dest="uint256: uint256 [39447,39454]"/>
  <match src="function_definition [48199,48350]" dest="function_definition [52622,52845]"/>
  <match src="primitive_type [3703,3710]" dest="primitive_type [3753,3760]"/>
  <match src="{: { [17885,17886]" dest="{: { [17935,17936]"/>
  <match src="event_definition [46384,46445]" dest="event_definition [48092,48153]"/>
  <match src="=: = [29851,29852]" dest="=: = [29901,29902]"/>
  <match src="(: ( [59971,59972]" dest="(: ( [65155,65156]"/>
  <match src="identifier: amountToWithdraw [52991,53007]" dest="identifier: amountToWithdraw [58383,58399]"/>
  <match src=",: , [17166,17167]" dest=",: , [17216,17217]"/>
  <match src="type_name [27239,27246]" dest="type_name [27289,27296]"/>
  <match src="parameter [2537,2550]" dest="parameter [2587,2600]"/>
  <match src=".: . [55629,55630]" dest=".: . [61067,61068]"/>
  <match src="identifier: c [8076,8077]" dest="identifier: c [8126,8127]"/>
  <match src="variable_declaration_statement [34520,34553]" dest="variable_declaration_statement [34724,34757]"/>
  <match src="identifier: ln [42275,42277]" dest="identifier: ln [42559,42561]"/>
  <match src="augmented_assignment_expression [41289,41298]" dest="augmented_assignment_expression [41573,41582]"/>
  <match src=".: . [51764,51765]" dest=".: . [56892,56893]"/>
  <match src="): ) [20995,20996]" dest="): ) [21045,21046]"/>
  <match src="identifier: balanceOf [36680,36689]" dest="identifier: balanceOf [36884,36893]"/>
  <match src="primitive_type [14754,14758]" dest="primitive_type [14804,14808]"/>
  <match src="interface: interface [36442,36451]" dest="interface: interface [36646,36655]"/>
  <match src="identifier: from [55006,55010]" dest="identifier: from [60435,60439]"/>
  <match src="&quot;: &quot; [46999,47000]" dest="&quot;: &quot; [48958,48959]"/>
  <match src="(: ( [58210,58211]" dest="(: ( [63376,63377]"/>
  <match src="number_literal: 0 [41090,41091]" dest="number_literal: 0 [41374,41375]"/>
  <match src="library_declaration [12534,18427]" dest="library_declaration [12584,18477]"/>
  <match src="function_definition [37485,37533]" dest="function_definition [37689,37737]"/>
  <match src="function_definition [28667,28986]" dest="function_definition [28717,29036]"/>
  <match src="parameter [17187,17200]" dest="parameter [17237,17250]"/>
  <match src="type_cast_expression [17281,17294]" dest="type_cast_expression [17331,17344]"/>
  <match src="{: { [25570,25571]" dest="{: { [25620,25621]"/>
  <match src="identifier: to [54690,54692]" dest="identifier: to [60119,60121]"/>
  <match src="block_statement [41250,41310]" dest="block_statement [41534,41594]"/>
  <match src="return: return [48496,48502]" dest="return: return [53357,53363]"/>
  <match src="): ) [10926,10927]" dest="): ) [10976,10977]"/>
  <match src="uint256: uint256 [39641,39648]" dest="uint256: uint256 [39925,39932]"/>
  <match src="&lt;=: &lt;= [49550,49552]" dest="&lt;=: &lt;= [54801,54803]"/>
  <match src="identifier: sub [50282,50285]" dest="identifier: sub [55552,55555]"/>
  <match src="[: [ [31288,31289]" dest="[: [ [31338,31339]"/>
  <match src="expression_statement [54674,54726]" dest="expression_statement [60103,60155]"/>
  <match src="): ) [50421,50422]" dest="): ) [68317,68318]"/>
  <match src="parameter [61283,61298]" dest="parameter [67532,67547]"/>
  <match src="}: } [48839,48840]" dest="}: } [53764,53765]"/>
  <match src="(: ( [36689,36690]" dest="(: ( [36893,36894]"/>
  <match src="number_literal: 0x100 [41419,41424]" dest="number_literal: 0x100 [41703,41708]"/>
  <match src="variable_declaration [41923,41932]" dest="variable_declaration [42207,42216]"/>
  <match src="address: address [3703,3710]" dest="address: address [3753,3760]"/>
  <match src="{: { [11643,11644]" dest="{: { [11693,11694]"/>
  <match src="primitive_type [3996,4003]" dest="primitive_type [4046,4053]"/>
  <match src="return_statement [21690,21705]" dest="return_statement [21740,21755]"/>
  <match src="identifier: div [54110,54113]" dest="identifier: div [59502,59505]"/>
  <match src="function_definition [21144,21712]" dest="function_definition [21194,21762]"/>
  <match src="view: view [21177,21181]" dest="view: view [21227,21231]"/>
  <match src="identifier: _curvePool [61348,61358]" dest="identifier: _curvePool [67597,67607]"/>
  <match src=".: . [47319,47320]" dest=".: . [66027,66028]"/>
  <match src="identifier: recipient [29968,29977]" dest="identifier: recipient [30018,30027]"/>
  <match src="call_argument [56624,56641]" dest="call_argument [62071,62088]"/>
  <match src=",: , [35468,35469]" dest=",: , [35672,35673]"/>
  <match src="identifier: b [9661,9662]" dest="identifier: b [9711,9712]"/>
  <match src="): ) [31182,31183]" dest="): ) [31232,31233]"/>
  <match src="): ) [31244,31245]" dest="): ) [31294,31295]"/>
  <match src="function_definition [32610,32700]" dest="function_definition [32660,32750]"/>
  <match src="uint256: uint256 [45532,45539]" dest="uint256: uint256 [47240,47247]"/>
  <match src="identifier: minted [45164,45170]" dest="identifier: minted [46872,46878]"/>
  <match src="{: { [8435,8436]" dest="{: { [8485,8486]"/>
  <match src="is: is [36114,36116]" dest="is: is [36318,36320]"/>
  <match src="array_access [31258,31276]" dest="array_access [31308,31326]"/>
  <match src="): ) [52344,52345]" dest="): ) [57472,57473]"/>
  <match src="type_name [12277,12284]" dest="type_name [12327,12334]"/>
  <match src="primitive_type [23690,23697]" dest="primitive_type [23740,23747]"/>
  <match src="view: view [37455,37459]" dest="view: view [37659,37663]"/>
  <match src=",: , [39227,39228]" dest=",: , [39511,39512]"/>
  <match src="override: override [26071,26079]" dest="override: override [26121,26129]"/>
  <match src="primitive_type [8893,8900]" dest="primitive_type [8943,8950]"/>
  <match src=".: . [50744,50745]" dest=".: . [55714,55715]"/>
  <match src="number_literal: 0 [50425,50426]" dest="number_literal: 0 [68321,68322]"/>
  <match src="call_argument [54465,54470]" dest="call_argument [59857,59862]"/>
  <match src="variable_declaration [17748,17771]" dest="variable_declaration [17798,17821]"/>
  <match src="interface: interface [37038,37047]" dest="interface: interface [37242,37251]"/>
  <match src="identifier: Context [19056,19063]" dest="identifier: Context [19106,19113]"/>
  <match src="primitive_type [15740,15745]" dest="primitive_type [15790,15795]"/>
  <match src=",: , [9662,9663]" dest=",: , [9712,9713]"/>
  <match src="uint256: uint256 [39238,39245]" dest="uint256: uint256 [39522,39529]"/>
  <match src="call_expression [42380,42388]" dest="call_expression [42664,42672]"/>
  <match src="state_mutability [2578,2582]" dest="state_mutability [2628,2632]"/>
  <match src="virtual: virtual [35726,35733]" dest="virtual: virtual [35930,35937]"/>
  <match src="external: external [49784,49792]" dest="external: external [55035,55043]"/>
  <match src="returns: returns [3332,3339]" dest="returns: returns [3382,3389]"/>
  <match src="+=: += [41468,41470]" dest="+=: += [41752,41754]"/>
  <match src="identifier: coins [60855,60860]" dest="identifier: coins [67104,67109]"/>
  <match src="identifier: _curveGauge [47209,47220]" dest="identifier: _curveGauge [49168,49179]"/>
  <match src="type_name [44333,44344]" dest="type_name [45080,45091]"/>
  <match src="return_statement [53963,53976]" dest="return_statement [59355,59368]"/>
  <match src="parameter [55333,55355]" dest="parameter [60762,60784]"/>
  <match src="address: address [3687,3694]" dest="address: address [3737,3744]"/>
  <match src="(: ( [36185,36186]" dest="(: ( [36389,36390]"/>
  <match src="number_literal: 4 [41555,41556]" dest="number_literal: 4 [41839,41840]"/>
  <match src="): ) [51295,51296]" dest="): ) [56265,56266]"/>
  <match src="contract_body [38093,38992]" dest="contract_body [38297,39276]"/>
  <match src="call_argument [11671,11697]" dest="call_argument [11721,11747]"/>
  <match src=",: , [47000,47001]" dest=",: , [48959,48960]"/>
  <match src="identifier: onlyOwner [55389,55398]" dest="identifier: onlyOwner [51045,51054]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [8093,8362]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [8143,8412]"/>
  <match src="type_cast_expression [30672,30682]" dest="type_cast_expression [30722,30732]"/>
  <match src="string [17628,17659]" dest="string [17678,17709]"/>
  <match src=".: . [55870,55871]" dest=".: . [61308,61309]"/>
  <match src="member_expression [50205,50215]" dest="member_expression [55473,55483]"/>
  <match src=".: . [51529,51530]" dest=".: . [56499,56500]"/>
  <match src="identifier: Context [34229,34236]" dest="identifier: Context [34433,34440]"/>
  <match src="inline_array_expression [60943,60966]" dest="inline_array_expression [67192,67215]"/>
  <match src="comment: // remove TUSD from curve [56464,56489]" dest="comment: // remove TUSD from curve [61911,61936]"/>
  <match src="(: ( [30512,30513]" dest="(: ( [30562,30563]"/>
  <match src="variable_declaration_statement [51613,51714]" dest="variable_declaration_statement [56583,56684]"/>
  <match src="identifier: fromUInt [40649,40657]" dest="identifier: fromUInt [40933,40941]"/>
  <match src="(: ( [51526,51527]" dest="(: ( [56496,56497]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20PresetMinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [22299,23484]" dest="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20PresetMinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [22349,23534]"/>
  <match src="string_literal [54694,54724]" dest="string_literal [60123,60153]"/>
  <match src="(: ( [50231,50232]" dest="(: ( [55499,55500]"/>
  <match src="primitive_type [46199,46206]" dest="primitive_type [47907,47914]"/>
  <match src="expression_statement [9644,9701]" dest="expression_statement [9694,9751]"/>
  <match src="address: address [35775,35782]" dest="address: address [35979,35986]"/>
  <match src="): ) [60707,60708]" dest="): ) [66956,66957]"/>
  <match src="false [56643,56648]" dest="false [62090,62095]"/>
  <match src="identifier: c [10986,10987]" dest="identifier: c [11036,11037]"/>
  <match src="function_definition [42266,42443]" dest="function_definition [42550,42727]"/>
  <match src="type_name [55512,55519]" dest="type_name [60950,60957]"/>
  <match src="primitive_type [9616,9623]" dest="primitive_type [9666,9673]"/>
  <match src="call_expression [51679,51694]" dest="call_expression [56649,56664]"/>
  <match src="}: } [56689,56690]" dest="}: } [62136,62137]"/>
  <match src="): ) [30040,30041]" dest="): ) [30090,30091]"/>
  <match src="call_expression [56412,56451]" dest="call_expression [61859,61898]"/>
  <match src="parameter [40692,40698]" dest="parameter [40976,40982]"/>
  <match src="!=: != [31132,31134]" dest="!=: != [31182,31184]"/>
  <match src="function_body [16185,16264]" dest="function_body [16235,16314]"/>
  <match src="call_expression [57553,57615]" dest="call_expression [62728,62789]"/>
  <match src="identifier: _balances [29833,29842]" dest="identifier: _balances [29883,29892]"/>
  <match src="function_definition [24635,24722]" dest="function_definition [24685,24772]"/>
  <match src="call_expression [51511,51528]" dest="call_expression [56481,56498]"/>
  <match src="member_expression [61588,61612]" dest="member_expression [67837,67861]"/>
  <match src="return: return [27518,27524]" dest="return: return [27568,27574]"/>
  <match src="}: } [21826,21827]" dest="}: } [21876,21877]"/>
  <match src="call_expression [8010,8056]" dest="call_expression [8060,8106]"/>
  <match src=",: , [52392,52393]" dest=",: , [57711,57712]"/>
  <match src="call_argument [48074,48110]" dest="call_argument [52420,52456]"/>
  <match src="function_definition [25508,25608]" dest="function_definition [25558,25658]"/>
  <match src="uint256: uint256 [45697,45704]" dest="uint256: uint256 [47405,47412]"/>
  <match src="primitive_type [37254,37261]" dest="primitive_type [37458,37465]"/>
  <match src="(: ( [51854,51855]" dest="(: ( [56982,56983]"/>
  <match src="||: || [20727,20729]" dest="||: || [20777,20779]"/>
  <match src="state_variable_declaration [44366,44394]" dest="state_variable_declaration [45113,45141]"/>
  <match src="call_expression [17775,17811]" dest="call_expression [17825,17861]"/>
  <match src="): ) [21167,21168]" dest="): ) [21217,21218]"/>
  <match src="{: { [41339,41340]" dest="{: { [41623,41624]"/>
  <match src="address: address [47580,47587]" dest="address: address [49465,49472]"/>
  <match src="identifier: amount [31390,31396]" dest="identifier: amount [31440,31446]"/>
  <match src="array_access [28083,28117]" dest="array_access [28133,28167]"/>
  <match src="variable_declaration [53858,53868]" dest="variable_declaration [59250,59260]"/>
  <match src="type_name [45137,45144]" dest="type_name [46845,46852]"/>
  <match src="visibility [44379,44385]" dest="visibility [45126,45132]"/>
  <match src="identifier: isConstructor [20711,20724]" dest="identifier: isConstructor [20761,20774]"/>
  <match src="identifier: Exited [45330,45336]" dest="identifier: Exited [47038,47044]"/>
  <match src="): ) [47431,47432]" dest="): ) [66183,66184]"/>
  <match src="return_type_definition [9307,9324]" dest="return_type_definition [9357,9374]"/>
  <match src="member_expression [52919,52946]" dest="member_expression [58311,58338]"/>
  <match src="(: ( [47791,47792]" dest="(: ( [50620,50621]"/>
  <match src=",: , [37224,37225]" dest=",: , [37428,37429]"/>
  <match src="identifier: sender [30015,30021]" dest="identifier: sender [30065,30071]"/>
  <match src="block_statement [49290,49381]" dest="block_statement [54541,54632]"/>
  <match src="function: function [33303,33311]" dest="function: function [33353,33361]"/>
  <match src="call_argument [42380,42388]" dest="call_argument [42664,42672]"/>
  <match src="): ) [35510,35511]" dest="): ) [35714,35715]"/>
  <match src="call_argument [6637,6670]" dest="call_argument [6687,6720]"/>
  <match src="identifier: amount [36832,36838]" dest="identifier: amount [37036,37042]"/>
  <match src="uint256: uint256 [43948,43955]" dest="uint256: uint256 [44695,44702]"/>
  <match src="function: function [25508,25516]" dest="function: function [25558,25566]"/>
  <match src="external: external [2210,2218]" dest="external: external [2260,2268]"/>
  <match src="identifier: token [52285,52290]" dest="identifier: token [57413,57418]"/>
  <match src="): ) [37444,37445]" dest="): ) [37648,37649]"/>
  <match src="(: ( [49545,49546]" dest="(: ( [54796,54797]"/>
  <match src="): ) [52929,52930]" dest="): ) [58321,58322]"/>
  <match src="yul_identifier [18295,18310]" dest="yul_identifier [18345,18360]"/>
  <match src="(: ( [47327,47328]" dest="(: ( [66035,66036]"/>
  <match src="address: address [45962,45969]" dest="address: address [47670,47677]"/>
  <match src="type_name [42311,42317]" dest="type_name [42595,42601]"/>
  <match src="identifier: _currencyToken [47850,47864]" dest="identifier: _currencyToken [50679,50693]"/>
  <match src="type_name [44466,44473]" dest="type_name [45213,45220]"/>
  <match src="primitive_type [41784,41791]" dest="primitive_type [42068,42075]"/>
  <match src="memory: memory [24477,24483]" dest="memory: memory [24527,24533]"/>
  <match src="comment: /**      * @dev Hook that is called before any transfer of tokens. This includes      * minting and burning.      *      * Calling conditions:      *      * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens      * will be to transferred to `to`.      * - when `from` is zero, `amount` tokens will be minted for `to`.      * - when `to` is zero, `amount` of ``from``'s tokens will be burned.      * - `from` and `to` are never both zero.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [32708,33297]" dest="comment: /**      * @dev Hook that is called before any transfer of tokens. This includes      * minting and burning.      *      * Calling conditions:      *      * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens      * will be to transferred to `to`.      * - when `from` is zero, `amount` tokens will be minted for `to`.      * - when `to` is zero, `amount` of ``from``'s tokens will be burned.      * - `from` and `to` are never both zero.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [32758,33347]"/>
  <match src="primitive_type [10263,10270]" dest="primitive_type [10313,10320]"/>
  <match src="interface_declaration [36642,36903]" dest="interface_declaration [36846,37107]"/>
  <match src="{: { [28040,28041]" dest="{: { [28090,28091]"/>
  <match src="call_argument [58229,58239]" dest="call_argument [63395,63405]"/>
  <match src="state_mutability [13193,13197]" dest="state_mutability [13243,13247]"/>
  <match src="function_definition [8368,8504]" dest="function_definition [8418,8554]"/>
  <match src="identifier: borrow [38745,38751]" dest="identifier: borrow [39042,39048]"/>
  <match src="): ) [28811,28812]" dest="): ) [28861,28862]"/>
  <match src="{: { [38093,38094]" dest="{: { [38297,38298]"/>
  <match src="int128: int128 [40761,40767]" dest="int128: int128 [41045,41051]"/>
  <match src="assignment_expression [6087,6109]" dest="assignment_expression [6137,6159]"/>
  <match src="call_argument [54682,54692]" dest="call_argument [60111,60121]"/>
  <match src="bool: bool [26622,26626]" dest="bool: bool [26672,26676]"/>
  <match src="identifier: amountToWithdraw [57879,57895]" dest="identifier: amountToWithdraw [63045,63061]"/>
  <match src="type_cast_expression [41784,41794]" dest="type_cast_expression [42068,42078]"/>
  <match src="{: { [35425,35426]" dest="{: { [35629,35630]"/>
  <match src="}: } [4256,4257]" dest="}: } [4306,4307]"/>
  <match src="function_body [60190,60423]" dest="function_body [66378,66611]"/>
  <match src="identifier: returndata_size [18209,18224]" dest="identifier: returndata_size [18259,18274]"/>
  <match src="identifier: deposit [36816,36823]" dest="identifier: deposit [37020,37027]"/>
  <match src="primitive_type [40692,40698]" dest="primitive_type [40976,40982]"/>
  <match src="internal: internal [6067,6075]" dest="internal: internal [6117,6125]"/>
  <match src="{: { [52682,52683]" dest="{: { [58074,58075]"/>
  <match src=",: , [56224,56225]" dest=",: , [61662,61663]"/>
  <match src="call_argument [59878,59886]" dest="call_argument [65062,65070]"/>
  <match src="function: function [25360,25368]" dest="function: function [25410,25418]"/>
  <match src="return: return [54393,54399]" dest="return: return [59785,59791]"/>
  <match src="identifier: sender [52306,52312]" dest="identifier: sender [57434,57440]"/>
  <match src="): ) [29923,29924]" dest="): ) [29973,29974]"/>
  <match src="(: ( [55822,55823]" dest="(: ( [61260,61261]"/>
  <match src="): ) [35717,35718]" dest="): ) [35921,35922]"/>
  <match src="expression_statement [8913,8943]" dest="expression_statement [8963,8993]"/>
  <match src="uint256: uint256 [48243,48250]" dest="uint256: uint256 [52666,52673]"/>
  <match src="expression_statement [51755,51781]" dest="expression_statement [56883,56909]"/>
  <match src="parameter [9282,9291]" dest="parameter [9332,9341]"/>
  <match src="identifier: remove_liquidity_one_coin [56577,56602]" dest="identifier: remove_liquidity_one_coin [62024,62049]"/>
  <match src="event_paramater [44878,44892]" dest="event_paramater [46586,46600]"/>
  <match src="primitive_type [39486,39493]" dest="primitive_type [39770,39777]"/>
  <match src="call_argument [49959,49979]" dest="call_argument [55210,55230]"/>
  <match src="=: = [44717,44718]" dest="=: = [45944,45945]"/>
  <match src="identifier: amount [3315,3321]" dest="identifier: amount [3365,3371]"/>
  <match src="): ) [59875,59876]" dest="): ) [65059,65060]"/>
  <match src="member_expression [60801,60829]" dest="member_expression [67050,67078]"/>
  <match src="primitive_type [23832,23837]" dest="primitive_type [23882,23887]"/>
  <match src="uint256: uint256 [26330,26337]" dest="uint256: uint256 [26380,26387]"/>
  <match src="=: = [41742,41743]" dest="=: = [42026,42027]"/>
  <match src="expression_statement [53198,53224]" dest="expression_statement [58590,58616]"/>
  <match src="(: ( [8819,8820]" dest="(: ( [8869,8870]"/>
  <match src="function_definition [39123,39172]" dest="function_definition [39407,39456]"/>
  <match src="identifier: balanceOf [49210,49219]" dest="identifier: balanceOf [54461,54470]"/>
  <match src="): ) [55656,55657]" dest="): ) [61094,61095]"/>
  <match src="call_argument [14826,14833]" dest="call_argument [14876,14883]"/>
  <match src="): ) [40667,40668]" dest="): ) [40951,40952]"/>
  <match src="identifier: ux [41906,41908]" dest="identifier: ux [42190,42192]"/>
  <match src="identifier: withdraw [36866,36874]" dest="identifier: withdraw [37070,37078]"/>
  <match src="inheritance_specifier [23504,23517]" dest="inheritance_specifier [23554,23567]"/>
  <match src="uint256: uint256 [56209,56216]" dest="uint256: uint256 [61647,61654]"/>
  <match src=",: , [46427,46428]" dest=",: , [48135,48136]"/>
  <match src="function: function [9258,9266]" dest="function: function [9308,9316]"/>
  <match src="function_body [42319,42443]" dest="function_body [42603,42727]"/>
  <match src="&gt;: &gt; [42340,42341]" dest="&gt;: &gt; [42624,42625]"/>
  <match src="expression_statement [51994,52065]" dest="expression_statement [57122,57193]"/>
  <match src="parameter [10263,10270]" dest="parameter [10313,10320]"/>
  <match src="identifier: msgSender [34630,34639]" dest="identifier: msgSender [34834,34843]"/>
  <match src="call_argument [56603,56610]" dest="call_argument [62050,62057]"/>
  <match src="member_expression [57216,57234]" dest="member_expression [62547,62557]"/>
  <match src="type_name [59743,59750]" dest="type_name [64918,64925]"/>
  <match src="): ) [42317,42318]" dest="): ) [42601,42602]"/>
  <match src="identifier: target [17485,17491]" dest="identifier: target [17535,17541]"/>
  <match src="call_argument [58816,58826]" dest="call_argument [63982,63992]"/>
  <match src="identifier: to [33374,33376]" dest="identifier: to [33424,33426]"/>
  <match src="(: ( [50496,50497]" dest="(: ( [68392,68393]"/>
  <match src="(: ( [53917,53918]" dest="(: ( [59309,59310]"/>
  <match src="=: = [51365,51366]" dest="=: = [56335,56336]"/>
  <match src="mapping: mapping [23682,23689]" dest="mapping: mapping [23732,23739]"/>
  <match src="call_expression [55860,55918]" dest="call_expression [61298,61356]"/>
  <match src="comment: /**      * @dev get currency token address      * @return currency token address      */ [47672,47763]" dest="comment: /**      * @dev get currency token address      * @return currency token address      */ [50501,50592]"/>
  <match src="function_body [59822,60013]" dest="function_body [65006,65197]"/>
  <match src="parameter [26021,26038]" dest="parameter [26071,26088]"/>
  <match src="identifier: amountToWithdraw [53240,53256]" dest="identifier: amountToWithdraw [58632,58648]"/>
  <match src="identifier: fee [49503,49506]" dest="identifier: fee [54754,54757]"/>
  <match src="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [24524,24629]" dest="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [24574,24679]"/>
  <match src="comment: /**      * @dev Returns the address of the current owner.      */ [34656,34723]" dest="comment: /**      * @dev Returns the address of the current owner.      */ [34860,34927]"/>
  <match src="identifier: currencyAmount [60693,60707]" dest="identifier: currencyAmount [66942,66956]"/>
  <match src="number_literal: 50000 [54893,54898]" dest="number_literal: 50000 [60322,60327]"/>
  <match src="type_cast_expression [35775,35785]" dest="type_cast_expression [35979,35989]"/>
  <match src=",: , [15795,15796]" dest=",: , [15845,15846]"/>
  <match src="variable_declaration [50249,50272]" dest="variable_declaration [55517,55537]"/>
  <match src="}: } [42445,42446]" dest="}: } [42729,42730]"/>
  <match src="binary_expression [13553,13561]" dest="binary_expression [13603,13611]"/>
  <match src="call_argument [53078,53111]" dest="call_argument [58470,58503]"/>
  <match src="&quot;: &quot; [49560,49561]" dest="&quot;: &quot; [54811,54812]"/>
  <match src=",: , [50576,50577]" dest=",: , [68472,68473]"/>
  <match src="string_literal [11671,11697]" dest="string_literal [11721,11747]"/>
  <match src="(: ( [58228,58229]" dest="(: ( [63394,63395]"/>
  <match src="address: address [14597,14604]" dest="address: address [14647,14654]"/>
  <match src="{: { [30395,30396]" dest="{: { [30445,30446]"/>
  <match src="identifier: data [17403,17407]" dest="identifier: data [17453,17457]"/>
  <match src="identifier: _ENTERED [6759,6767]" dest="identifier: _ENTERED [6809,6817]"/>
  <match src="call_expression [8913,8942]" dest="call_expression [8963,8992]"/>
  <match src="(: ( [48219,48220]" dest="(: ( [52642,52643]"/>
  <match src="): ) [10238,10239]" dest="): ) [10288,10289]"/>
  <match src="identifier: deposited [45145,45154]" dest="identifier: deposited [46853,46862]"/>
  <match src="identifier: mul [51661,51664]" dest="identifier: mul [56631,56634]"/>
  <match src="call_argument [56319,56369]" dest="call_argument [61766,61816]"/>
  <match src="state_mutability [19102,19106]" dest="state_mutability [19152,19156]"/>
  <match src="call_argument [35462,35468]" dest="call_argument [35666,35672]"/>
  <match src="function: function [29476,29484]" dest="function: function [29526,29534]"/>
  <match src="): ) [56926,56927]" dest="): ) [62359,62360]"/>
  <match src="constant: constant [5990,5998]" dest="constant: constant [6040,6048]"/>
  <match src="identifier: currencyBalance [57157,57172]" dest="identifier: currencyBalance [62488,62503]"/>
  <match src="function: function [30330,30338]" dest="function: function [30380,30388]"/>
  <match src="primitive_type [35470,35477]" dest="primitive_type [35674,35681]"/>
  <match src="function_body [27328,27537]" dest="function_body [27378,27587]"/>
  <match src=",: , [46858,46859]" dest=",: , [48752,48753]"/>
  <match src="string_literal [28905,28944]" dest="string_literal [28955,28994]"/>
  <match src="visibility [44415,44421]" dest="visibility [45162,45168]"/>
  <match src="identifier: _ENTERED [6627,6635]" dest="identifier: _ENTERED [6677,6685]"/>
  <match src="variable_declaration [17734,17746]" dest="variable_declaration [17784,17796]"/>
  <match src="identifier: require [52693,52700]" dest="identifier: require [58085,58092]"/>
  <match src="identifier: require [55410,55417]" dest="identifier: require [60848,60855]"/>
  <match src="type_name [17477,17484]" dest="type_name [17527,17534]"/>
  <match src="identifier: require [8010,8017]" dest="identifier: require [8060,8067]"/>
  <match src="call_expression [55410,55499]" dest="call_expression [60848,60937]"/>
  <match src="return_type_definition [24461,24484]" dest="return_type_definition [24511,24534]"/>
  <match src="address: address [34302,34309]" dest="address: address [34506,34513]"/>
  <match src="): ) [6670,6671]" dest="): ) [6720,6721]"/>
  <match src="address: address [21562,21569]" dest="address: address [21612,21619]"/>
  <match src="(: ( [48536,48537]" dest="(: ( [53397,53398]"/>
  <match src="(: ( [36823,36824]" dest="(: ( [37027,37028]"/>
  <match src="type_name [26260,26267]" dest="type_name [26310,26317]"/>
  <match src="parameter [1879,1894]" dest="parameter [1929,1944]"/>
  <match src="expression_statement [50653,50695]" dest="expression_statement [55623,55665]"/>
  <match src="identifier: ITrueLender [39104,39115]" dest="identifier: ITrueLender [39388,39399]"/>
  <match src="(: ( [3953,3954]" dest="(: ( [4003,4004]"/>
  <match src="(: ( [52301,52302]" dest="(: ( [57429,57430]"/>
  <match src="identifier: div [54995,54998]" dest="identifier: div [60424,60427]"/>
  <match src="returns: returns [9307,9314]" dest="returns: returns [9357,9364]"/>
  <match src="): ) [54221,54222]" dest="): ) [59613,59614]"/>
  <match src="parameter [1919,1926]" dest="parameter [1969,1976]"/>
  <match src="{: { [7658,7659]" dest="{: { [7708,7709]"/>
  <match src="binary_expression [42371,42434]" dest="binary_expression [42655,42718]"/>
  <match src="comment: /**      * @dev Indicates that the contract has been initialized.      */ [20316,20391]" dest="comment: /**      * @dev Indicates that the contract has been initialized.      */ [20366,20441]"/>
  <match src="parameter [28694,28709]" dest="parameter [28744,28759]"/>
  <match src="type_name [23682,23709]" dest="type_name [23732,23759]"/>
  <match src="uint256: uint256 [50191,50198]" dest="uint256: uint256 [55459,55466]"/>
  <match src="=: = [47066,47067]" dest="=: = [49025,49026]"/>
  <match src=",: , [51873,51874]" dest=",: , [57001,57002]"/>
  <match src="): ) [14661,14662]" dest="): ) [14711,14712]"/>
  <match src="): ) [36601,36602]" dest="): ) [36805,36806]"/>
  <match src="array_access [52701,52743]" dest="array_access [58093,58135]"/>
  <match src="expression_statement [41548,41557]" dest="expression_statement [41832,41841]"/>
  <match src="call_argument [28849,28945]" dest="call_argument [28899,28995]"/>
  <match src="binary_expression [41745,41753]" dest="binary_expression [42029,42037]"/>
  <match src="if_statement [20977,21044]" dest="if_statement [21027,21094]"/>
  <match src="identifier: b [10297,10298]" dest="identifier: b [10347,10348]"/>
  <match src="(: ( [29633,29634]" dest="(: ( [29683,29684]"/>
  <match src="identifier: currencyAmount [55659,55673]" dest="identifier: currencyAmount [61097,61111]"/>
  <match src="primitive_type [36493,36500]" dest="primitive_type [36697,36704]"/>
  <match src="): ) [34920,34921]" dest="): ) [35124,35125]"/>
  <match src="identifier: data [15716,15720]" dest="identifier: data [15766,15770]"/>
  <match src="call_argument [61621,61625]" dest="call_argument [67870,67874]"/>
  <match src="member_expression [52991,53052]" dest="member_expression [58383,58444]"/>
  <match src="): ) [52941,52942]" dest="): ) [58333,58334]"/>
  <match src="call_expression [48026,48111]" dest="call_expression [52372,52457]"/>
  <match src="parameter [17530,17556]" dest="parameter [17580,17606]"/>
  <match src="parameter [10857,10866]" dest="parameter [10907,10916]"/>
  <match src="): ) [50160,50161]" dest="): ) [55411,55412]"/>
  <match src="(: ( [37443,37444]" dest="(: ( [37647,37648]"/>
  <match src="address: address [3976,3983]" dest="address: address [4026,4033]"/>
  <match src="): ) [51693,51694]" dest="): ) [56663,56664]"/>
  <match src="binary_expression [40719,40742]" dest="binary_expression [41003,41026]"/>
  <match src="(: ( [54987,54988]" dest="(: ( [60416,60417]"/>
  <match src="&quot;: &quot; [6637,6638]" dest="&quot;: &quot; [6687,6688]"/>
  <match src="identifier: require [57553,57560]" dest="identifier: require [62728,62735]"/>
  <match src="identifier: id [37563,37565]" dest="identifier: id [37767,37769]"/>
  <match src="member_expression [54425,54447]" dest="member_expression [59817,59839]"/>
  <match src="primitive_type [12226,12232]" dest="primitive_type [12276,12282]"/>
  <match src="identifier: ICurveGauge [36652,36663]" dest="identifier: ICurveGauge [36856,36867]"/>
  <match src="identifier: ERC20 [43890,43895]" dest="identifier: ERC20 [44637,44642]"/>
  <match src="uint256: uint256 [8820,8827]" dest="uint256: uint256 [8870,8877]"/>
  <match src="{: { [51979,51980]" dest="{: { [57107,57108]"/>
  <match src="): ) [2599,2600]" dest="): ) [2649,2650]"/>
  <match src="type_name [35701,35708]" dest="type_name [35905,35912]"/>
  <match src="member_expression [60984,61000]" dest="member_expression [67233,67249]"/>
  <match src="function_body [58977,59030]" dest="function_body [64152,64205]"/>
  <match src="return_type_definition [60721,60738]" dest="return_type_definition [66970,66987]"/>
  <match src="type_name [36690,36697]" dest="type_name [36894,36901]"/>
  <match src="(: ( [36160,36161]" dest="(: ( [36364,36365]"/>
  <match src="identifier: amount [46207,46213]" dest="identifier: amount [47915,47921]"/>
  <match src="(: ( [8425,8426]" dest="(: ( [8475,8476]"/>
  <match src="return_statement [11095,11104]" dest="return_statement [11145,11154]"/>
  <match src="identifier: _status [6616,6623]" dest="identifier: _status [6666,6673]"/>
  <match src="private: private [21806,21813]" dest="private: private [21856,21863]"/>
  <match src="member_expression [58295,58364]" dest="member_expression [63461,63530]"/>
  <match src="&quot;: &quot; [55497,55498]" dest="&quot;: &quot; [60935,60936]"/>
  <match src=",: , [16684,16685]" dest=",: , [16734,16735]"/>
  <match src="comment: /**      * @dev exit pool      * 1. Transfer pool tokens from sender      * 2. Burn pool tokens      * 3. Transfer value of pool tokens in TUSD to sender      */ [38374,38540]" dest="comment: /**      * @dev exit pool      * 1. Transfer pool tokens from sender      * 2. Burn pool tokens      * 3. Transfer value of pool tokens in TUSD to sender      */ [38671,38837]"/>
  <match src="visibility [25380,25386]" dest="visibility [25430,25436]"/>
  <match src="state_variable_declaration [5926,5968]" dest="state_variable_declaration [5976,6018]"/>
  <match src="identifier: amountToMint [50443,50455]" dest="identifier: mintedAmount [68339,68351]"/>
  <match src="): ) [59886,59887]" dest="): ) [65070,65071]"/>
  <match src="type_name [46900,46914]" dest="type_name [48794,48808]"/>
  <match src="identifier: _minter [59833,59840]" dest="identifier: _minter [65017,65024]"/>
  <match src="call_argument [50741,50751]" dest="call_argument [55711,55721]"/>
  <match src="call_expression [50458,50471]" dest="call_expression [68354,68367]"/>
  <match src="state_mutability [26316,26320]" dest="state_mutability [26366,26370]"/>
  <match src="primitive_type [17187,17194]" dest="primitive_type [17237,17244]"/>
  <match src="contract_declaration [23486,33431]" dest="contract_declaration [23536,33635]"/>
  <match src=",: , [51771,51772]" dest=",: , [56899,56900]"/>
  <match src="return_type_definition [37516,37532]" dest="return_type_definition [37720,37736]"/>
  <match src="function: function [38132,38140]" dest="function: function [38336,38344]"/>
  <match src="call_argument [30684,30691]" dest="call_argument [30734,30741]"/>
  <match src="identifier: denominator [39274,39285]" dest="identifier: denominator [39558,39569]"/>
  <match src="call_argument [50566,50576]" dest="call_argument [68462,68472]"/>
  <match src="parameter [60150,60169]" dest="parameter [66329,66348]"/>
  <match src="address: address [58762,58769]" dest="address: address [63928,63935]"/>
  <match src="call_expression [17372,17429]" dest="call_expression [17422,17479]"/>
  <match src=".: . [60825,60826]" dest=".: . [67074,67075]"/>
  <match src="call_argument [57652,57666]" dest="call_argument [55783,55789]"/>
  <match src="primitive_type [41798,41805]" dest="primitive_type [42082,42089]"/>
  <match src="identifier: currencyBalance [53339,53354]" dest="identifier: currencyBalance [58731,58746]"/>
  <match src=".: . [55816,55817]" dest=".: . [61254,61255]"/>
  <match src="member_expression [51486,51533]" dest="member_expression [56456,56503]"/>
  <match src="override: override [25538,25546]" dest="override: override [25588,25596]"/>
  <match src="identifier: b [11608,11609]" dest="identifier: b [11658,11659]"/>
  <match src="identifier: approve [47391,47398]" dest="identifier: _uniRouter [66077,66087]"/>
  <match src="number_literal: 4 [41532,41533]" dest="number_literal: 4 [41816,41817]"/>
  <match src="comment: // The easiest way to bubble the revert reason is using memory via assembly [18013,18088]" dest="comment: // The easiest way to bubble the revert reason is using memory via assembly [18063,18138]"/>
  <match src="primitive_type [38560,38567]" dest="primitive_type [38857,38864]"/>
  <match src="assignment_expression [50602,50640]" dest="assignment_expression [55572,55610]"/>
  <match src="uint256: uint256 [27990,27997]" dest="uint256: uint256 [28040,28047]"/>
  <match src="call_expression [6608,6671]" dest="call_expression [6658,6721]"/>
  <match src="call_expression [28777,28956]" dest="call_expression [28827,29006]"/>
  <match src="): ) [50639,50640]" dest="): ) [55609,55610]"/>
  <match src="if: if [41409,41411]" dest="if: if [41693,41695]"/>
  <match src="call_argument [56443,56450]" dest="call_argument [61890,61897]"/>
  <match src=":=: := [13511,13513]" dest=":=: := [13561,13563]"/>
  <match src="(: ( [28033,28034]" dest="(: ( [28083,28084]"/>
  <match src=",: , [39588,39589]" dest=",: , [39872,39873]"/>
  <match src="): ) [51694,51695]" dest="): ) [56664,56665]"/>
  <match src="(: ( [37088,37089]" dest="(: ( [37292,37293]"/>
  <match src="uint256: uint256 [57443,57450]" dest="uint256: uint256 [53008,53015]"/>
  <match src="comment: // import {SafeMath} from &quot;@openzeppelin/contracts/math/SafeMath.sol&quot;; [22146,22216]" dest="comment: // import {SafeMath} from &quot;@openzeppelin/contracts/math/SafeMath.sol&quot;; [22196,22266]"/>
  <match src=".: . [58331,58332]" dest=".: . [63497,63498]"/>
  <match src="parameter [39238,39255]" dest="parameter [39522,39539]"/>
  <match src="type_name [60778,60785]" dest="type_name [67027,67034]"/>
  <match src="binary_expression [41935,41944]" dest="binary_expression [42219,42228]"/>
  <match src="&quot;: &quot; [58047,58048]" dest="&quot;: &quot; [63213,63214]"/>
  <match src="memory: memory [37100,37106]" dest="memory: memory [37304,37310]"/>
  <match src=",: , [58473,58474]" dest=",: , [63639,63640]"/>
  <match src="): ) [19203,19204]" dest="): ) [19253,19254]"/>
  <match src="struct_expression [17775,17805]" dest="struct_expression [17825,17855]"/>
  <match src="identifier: ITrueFiPool [43877,43888]" dest="identifier: ITrueFiPool [44624,44635]"/>
  <match src="&quot;: &quot; [11671,11672]" dest="&quot;: &quot; [11721,11722]"/>
  <match src="identifier: require [32026,32033]" dest="identifier: require [32076,32083]"/>
  <match src="function_body [24280,24363]" dest="function_body [24330,24413]"/>
  <match src="number_literal: 18 [24353,24355]" dest="number_literal: 18 [24403,24405]"/>
  <match src="number_literal: 0 [52171,52172]" dest="number_literal: 0 [57299,57300]"/>
  <match src="struct_field_assignment [17788,17803]" dest="struct_field_assignment [17838,17853]"/>
  <match src="): ) [36161,36162]" dest="): ) [36365,36366]"/>
  <match src="(: ( [41230,41231]" dest="(: ( [41514,41515]"/>
  <match src="bool: bool [36520,36524]" dest="bool: bool [36724,36728]"/>
  <match src="&gt;: &gt; [10949,10950]" dest="&gt;: &gt; [10999,11000]"/>
  <match src="(: ( [19202,19203]" dest="(: ( [19252,19253]"/>
  <match src="(: ( [14753,14754]" dest="(: ( [14803,14804]"/>
  <match src="&quot;: &quot; [28943,28944]" dest="&quot;: &quot; [28993,28994]"/>
  <match src="identifier: _symbol [24707,24714]" dest="identifier: _symbol [24757,24764]"/>
  <match src="identifier: success [14759,14766]" dest="identifier: success [14809,14816]"/>
  <match src="=: = [6757,6758]" dest="=: = [6807,6808]"/>
  <match src=",: , [35785,35786]" dest=",: , [35989,35990]"/>
  <match src="): ) [37475,37476]" dest="): ) [37679,37680]"/>
  <match src="(: ( [47040,47041]" dest="(: ( [48999,49000]"/>
  <match src="type_name [9271,9278]" dest="type_name [9321,9328]"/>
  <match src="!=: != [52714,52716]" dest="!=: != [58106,58108]"/>
  <match src=",: , [4237,4238]" dest=",: , [4287,4288]"/>
  <match src="(: ( [53882,53883]" dest="(: ( [59274,59275]"/>
  <match src="int128: int128 [37379,37385]" dest="int128: int128 [37583,37589]"/>
  <match src="(: ( [47975,47976]" dest="(: ( [52321,52322]"/>
  <match src="identifier: mul [48286,48289]" dest="identifier: mul [52781,52784]"/>
  <match src="visibility [37567,37575]" dest="visibility [37771,37779]"/>
  <match src="expression_statement [50443,50510]" dest="expression_statement [68339,68406]"/>
  <match src="primitive_type [55787,55794]" dest="primitive_type [61225,61232]"/>
  <match src="primitive_type [41077,41083]" dest="primitive_type [41361,41367]"/>
  <match src="type_name [24237,24243]" dest="type_name [24287,24293]"/>
  <match src="identifier: TUSD_INDEX [44742,44752]" dest="identifier: TUSD_INDEX [45969,45979]"/>
  <match src="): ) [38355,38356]" dest="): ) [38652,38653]"/>
  <match src="call_expression [9644,9700]" dest="call_expression [9694,9750]"/>
  <match src="member_expression [59979,59994]" dest="member_expression [65163,65178]"/>
  <match src="=: = [21025,21026]" dest="=: = [21075,21076]"/>
  <match src="function_definition [26539,26708]" dest="function_definition [26589,26758]"/>
  <match src="(: ( [29982,29983]" dest="(: ( [30032,30033]"/>
  <match src="): ) [48067,48068]" dest="): ) [52413,52414]"/>
  <match src="type_name [14754,14758]" dest="type_name [14804,14808]"/>
  <match src="number_literal: 1 [5966,5967]" dest="number_literal: 1 [6016,6017]"/>
  <match src=",: , [11666,11667]" dest=",: , [11716,11717]"/>
  <match src="member_expression [54084,54113]" dest="member_expression [59476,59505]"/>
  <match src="expression_statement [30596,30648]" dest="expression_statement [30646,30698]"/>
  <match src="event_paramater [4191,4212]" dest="event_paramater [4241,4262]"/>
  <match src="if_statement [52134,52358]" dest="if_statement [57262,57486]"/>
  <match src="&quot;: &quot; [31345,31346]" dest="&quot;: &quot; [31395,31396]"/>
  <match src="string_literal [16813,16856]" dest="string_literal [16863,16906]"/>
  <match src="type_name [38180,38186]" dest="type_name [38384,38390]"/>
  <match src="function_body [19250,19418]" dest="function_body [19300,19468]"/>
  <match src="member_expression [60844,60860]" dest="member_expression [67093,67109]"/>
  <match src="type_cast_expression [55835,55848]" dest="type_cast_expression [61273,61286]"/>
  <match src="comment: /**      * @dev Virtual value of liquid assets in the pool      */ [48358,48426]" dest="comment: // fund manager can call functions to help manage pool funds [45620,45680]"/>
  <match src="visibility [31998,32006]" dest="visibility [32048,32056]"/>
  <match src="else: else [17880,17884]" dest="else: else [17930,17934]"/>
  <match src="primitive_type [61613,61620]" dest="primitive_type [67862,67869]"/>
  <match src="primitive_type [28711,28718]" dest="primitive_type [28761,28768]"/>
  <match src="identifier: from [54740,54744]" dest="identifier: from [60169,60173]"/>
  <match src="bytes: bytes [16686,16691]" dest="bytes: bytes [16736,16741]"/>
  <match src="): ) [50237,50238]" dest="): ) [55505,55506]"/>
  <match src="string_literal [31147,31182]" dest="string_literal [31197,31232]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [18528,19036]" dest="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [18578,19086]"/>
  <match src="identifier: mod [11661,11664]" dest="identifier: mod [11711,11714]"/>
  <match src="string_literal [55455,55498]" dest="string_literal [60893,60936]"/>
  <match src="identifier: xc [41413,41415]" dest="identifier: xc [41697,41699]"/>
  <match src="identifier: roughCurveTokenAmount [58295,58316]" dest="identifier: roughCurveTokenAmount [63461,63482]"/>
  <match src="(: ( [41664,41665]" dest="(: ( [41948,41949]"/>
  <match src="identifier: newOwner [34349,34357]" dest="identifier: newOwner [34553,34561]"/>
  <match src="parameter [37525,37531]" dest="parameter [37729,37735]"/>
  <match src="(: ( [9560,9561]" dest="(: ( [9610,9611]"/>
  <match src=",: , [56317,56318]" dest=",: , [61764,61765]"/>
  <match src="(: ( [61620,61621]" dest="(: ( [67869,67870]"/>
  <match src="member_expression [59833,59856]" dest="member_expression [65017,65040]"/>
  <match src="identifier: yAmount [61291,61298]" dest="identifier: yAmount [67540,67547]"/>
  <match src="return_type_definition [37581,37598]" dest="return_type_definition [37785,37802]"/>
  <match src="call_argument [55455,55498]" dest="call_argument [60893,60936]"/>
  <match src="call_argument [51197,51245]" dest="call_argument [56167,56215]"/>
  <match src="call_expression [30617,30647]" dest="call_expression [30667,30697]"/>
  <match src="identifier: amount [36883,36889]" dest="identifier: amount [37087,37093]"/>
  <match src="call_argument [50497,50508]" dest="call_argument [68393,68404]"/>
  <match src="call_argument [52038,52062]" dest="call_argument [57166,57190]"/>
  <match src="}: } [10336,10337]" dest="}: } [10386,10387]"/>
  <match src="parameter [59743,59763]" dest="parameter [64918,64938]"/>
  <match src="type_name [23701,23708]" dest="type_name [23751,23758]"/>
  <match src="identifier: claimableFees [61632,61645]" dest="identifier: claimableFees [67881,67894]"/>
  <match src="member_expression [58194,58210]" dest="member_expression [63360,63376]"/>
  <match src="{: { [34776,34777]" dest="{: { [34980,34981]"/>
  <match src="primitive_type [38964,38971]" dest="primitive_type [39248,39255]"/>
  <match src="call_argument [35873,35881]" dest="call_argument [36077,36085]"/>
  <match src="return: return [16196,16202]" dest="return: return [16246,16252]"/>
  <match src="user_defined_type [44400,44414]" dest="user_defined_type [45147,45161]"/>
  <match src="visibility [34746,34752]" dest="visibility [34950,34956]"/>
  <match src="call_argument [31147,31182]" dest="call_argument [31197,31232]"/>
  <match src="yul_evm_builtin [13514,13525]" dest="yul_evm_builtin [13564,13575]"/>
  <match src="function_definition [34466,34648]" dest="function_definition [34670,34852]"/>
  <match src="function_definition [47769,47872]" dest="function_definition [50598,50701]"/>
  <match src="binary_expression [41784,41816]" dest="binary_expression [42068,42100]"/>
  <match src="true [61031,61035]" dest="true [67280,67284]"/>
  <match src=".: . [54161,54162]" dest=".: . [59553,59554]"/>
  <match src="type_name [50301,50308]" dest="type_name [56741,56748]"/>
  <match src="): ) [25406,25407]" dest="): ) [25456,25457]"/>
  <match src="call_expression [26106,26148]" dest="call_expression [26156,26198]"/>
  <match src="modifier_definition [47525,47664]" dest="modifier_definition [49410,49542]"/>
  <match src="{: { [7971,7972]" dest="{: { [8021,8022]"/>
  <match src="identifier: get_virtual_price [58340,58357]" dest="identifier: get_virtual_price [63506,63523]"/>
  <match src="function_definition [16068,16264]" dest="function_definition [16118,16314]"/>
  <match src="call_argument [53533,53543]" dest="call_argument [58925,58935]"/>
  <match src="state_mutability [19214,19218]" dest="state_mutability [19264,19268]"/>
  <match src="(: ( [50712,50713]" dest="(: ( [55682,55683]"/>
  <match src=",: , [46889,46890]" dest=",: , [48783,48784]"/>
  <match src="expression_statement [20687,20794]" dest="expression_statement [20737,20844]"/>
  <match src="visibility [52660,52668]" dest="visibility [58047,58055]"/>
  <match src="&gt;: &gt; [41060,41061]" dest="&gt;: &gt; [41344,41345]"/>
  <match src="type_name [1919,1926]" dest="type_name [1969,1976]"/>
  <match src="state_variable_declaration [44693,44721]" dest="state_variable_declaration [45920,45948]"/>
  <match src="call_argument [12305,12311]" dest="call_argument [12355,12361]"/>
  <match src="type_cast_expression [49837,49856]" dest="type_cast_expression [55088,55107]"/>
  <match src="(: ( [50635,50636]" dest="(: ( [55605,55606]"/>
  <match src="call_expression [31373,31397]" dest="call_expression [31423,31447]"/>
  <match src="comment: /**      * @dev Initialize pool      * @param __curvePool curve pool address      * @param __curveGauge curve gauge address      * @param __currencyToken curve pool underlying token      * @param __lender TrueLender address      * @param __uniRouter Uniswap router      */ [46453,46732]" dest="comment: /**      * @dev Initialize pool      * @param __curvePool curve pool address      * @param __curveGauge curve gauge address      * @param __currencyToken curve pool underlying token      * @param __lender TrueLender address      * @param __uniRouter Uniswap router      */ [48347,48626]"/>
  <match src="call_argument [35865,35871]" dest="call_argument [36069,36075]"/>
  <match src="function_definition [8807,8999]" dest="function_definition [8857,9049]"/>
  <match src="identifier: require [41050,41057]" dest="identifier: require [41334,41341]"/>
  <match src="identifier: require [51257,51264]" dest="identifier: require [56227,56234]"/>
  <match src="{: { [26339,26340]" dest="{: { [26389,26390]"/>
  <match src="uint256: uint256 [23701,23708]" dest="uint256: uint256 [23751,23758]"/>
  <match src="member_expression [58403,58439]" dest="member_expression [63569,63605]"/>
  <match src="identifier: _uniRouter [47240,47250]" dest="identifier: _uniRouter [49199,49209]"/>
  <match src="}: } [41216,41217]" dest="}: } [41500,41501]"/>
  <match src="function: function [60660,60668]" dest="function: function [66909,66917]"/>
  <match src="(: ( [47398,47399]" dest="(: ( [66112,66113]"/>
  <match src="emit_statement [52370,52402]" dest="emit_statement [57689,57721]"/>
  <match src="type_name [46176,46183]" dest="type_name [47884,47891]"/>
  <match src="visibility [13184,13192]" dest="visibility [13234,13242]"/>
  <match src="identifier: OwnershipTransferred [35441,35461]" dest="identifier: OwnershipTransferred [35645,35665]"/>
  <match src="identifier: calc_withdraw_one_coin [61359,61381]" dest="identifier: calc_withdraw_one_coin [67608,67630]"/>
  <match src="primitive_type [61283,61290]" dest="primitive_type [67532,67539]"/>
  <match src="call_argument [49343,49367]" dest="call_argument [54594,54618]"/>
  <match src="identifier: sender [53208,53214]" dest="identifier: sender [58600,58606]"/>
  <match src="emit: emit [58804,58808]" dest="emit: emit [63970,63974]"/>
  <match src="==: == [34948,34950]" dest="==: == [35152,35154]"/>
  <match src="function_definition [1717,1772]" dest="function_definition [1767,1822]"/>
  <match src="return_type_definition [36776,36798]" dest="return_type_definition [36980,37002]"/>
  <match src="binary_expression [54851,54861]" dest="binary_expression [60280,60290]"/>
  <match src="block_statement [50428,50521]" dest="block_statement [68324,68417]"/>
  <match src="comment: // pragma solidity 0.6.10; [35989,36015]" dest="comment: // pragma solidity 0.6.10; [36193,36219]"/>
  <match src="call_argument [16240,16241]" dest="call_argument [16290,16291]"/>
  <match src="identifier: _status [6036,6043]" dest="identifier: _status [6086,6093]"/>
  <match src="(: ( [61560,61561]" dest="(: ( [67809,67810]"/>
  <match src="binary_expression [54476,54481]" dest="binary_expression [59868,59873]"/>
  <match src="identifier: x [42338,42339]" dest="identifier: x [42622,42623]"/>
  <match src="identifier: msb [41196,41199]" dest="identifier: msb [41480,41483]"/>
  <match src="assignment_expression [20921,20939]" dest="assignment_expression [20971,20989]"/>
  <match src="(: ( [1878,1879]" dest="(: ( [1928,1929]"/>
  <match src="call_argument [48525,48538]" dest="call_argument [53386,53399]"/>
  <match src=".: . [50227,50228]" dest=".: . [55495,55496]"/>
  <match src="identifier: _totalSupply [30561,30573]" dest="identifier: _totalSupply [30611,30623]"/>
  <match src="external: external [3738,3746]" dest="external: external [3788,3796]"/>
  <match src="identifier: expectedAmount [57277,57291]" dest="identifier: amount [62600,62606]"/>
  <match src="private: private [6028,6035]" dest="private: private [6078,6085]"/>
  <match src="member_expression [48290,48306]" dest="member_expression [52785,52801]"/>
  <match src="primitive_type [29626,29633]" dest="primitive_type [29676,29683]"/>
  <match src="primitive_type [16125,16131]" dest="primitive_type [16175,16181]"/>
  <match src="(: ( [54090,54091]" dest="(: ( [59482,59483]"/>
  <match src="primitive_type [12215,12222]" dest="primitive_type [12265,12272]"/>
  <match src="true [27525,27529]" dest="true [27575,27579]"/>
  <match src="primitive_type [47399,47406]" dest="primitive_type [66143,66150]"/>
  <match src="variable_declaration [57443,57454]" dest="variable_declaration [53008,53023]"/>
  <match src="identifier: _minter [47199,47206]" dest="identifier: _minter [49158,49165]"/>
  <match src="identifier: _msgSender [28095,28105]" dest="identifier: _msgSender [28145,28155]"/>
  <match src="}: } [47871,47872]" dest="}: } [50700,50701]"/>
  <match src="virtual: virtual [32007,32014]" dest="virtual: virtual [32057,32064]"/>
  <match src="call_argument [54963,54965]" dest="call_argument [60392,60394]"/>
  <match src="member_expression [51486,51496]" dest="member_expression [56456,56466]"/>
  <match src="function_body [14578,14904]" dest="function_body [14628,14954]"/>
  <match src=".: . [48308,48309]" dest=".: . [52803,52804]"/>
  <match src="function: function [48199,48207]" dest="function: function [52622,52630]"/>
  <match src="identifier: ux [41900,41902]" dest="identifier: ux [42184,42186]"/>
  <match src="assignment_expression [21012,21032]" dest="assignment_expression [21062,21082]"/>
  <match src="call_argument [61382,61389]" dest="call_argument [67631,67638]"/>
  <match src="(: ( [47335,47336]" dest="(: ( [66043,66044]"/>
  <match src="(: ( [48770,48771]" dest="(: ( [53630,53631]"/>
  <match src="primitive_type [17748,17753]" dest="primitive_type [17798,17803]"/>
  <match src="identifier: errorMessage [16243,16255]" dest="identifier: errorMessage [16293,16305]"/>
  <match src="&lt;: &lt; [49274,49275]" dest="&lt;: &lt; [54525,54526]"/>
  <match src=",: , [16798,16799]" dest=",: , [16848,16849]"/>
  <match src="identifier: liquidExitPenalty [53783,53800]" dest="identifier: liquidExitPenalty [59175,59192]"/>
  <match src="return: return [16763,16769]" dest="return: return [16813,16819]"/>
  <match src="{: { [32015,32016]" dest="{: { [32065,32066]"/>
  <match src="primitive_type [14526,14541]" dest="primitive_type [14576,14591]"/>
  <match src="uint256: uint256 [5926,5933]" dest="uint256: uint256 [5976,5983]"/>
  <match src="visibility [38157,38165]" dest="visibility [38361,38369]"/>
  <match src="function_body [58703,58851]" dest="function_body [63869,64017]"/>
  <match src="identifier: recipient [3711,3720]" dest="identifier: recipient [3761,3770]"/>
  <match src="): ) [41815,41816]" dest="): ) [42099,42100]"/>
  <match src="expression_statement [19261,19266]" dest="expression_statement [19311,19316]"/>
  <match src="(: ( [55834,55835]" dest="(: ( [61272,61273]"/>
  <match src="==: == [21700,21702]" dest="==: == [21750,21752]"/>
  <match src="identifier: amount [32263,32269]" dest="identifier: amount [32313,32319]"/>
  <match src="uint256: uint256 [8953,8960]" dest="uint256: uint256 [9003,9010]"/>
  <match src="let: let [18205,18208]" dest="let: let [18255,18258]"/>
  <match src="(: ( [16170,16171]" dest="(: ( [16220,16221]"/>
  <match src="identifier: nonReentrant [52669,52681]" dest="identifier: nonReentrant [58056,58068]"/>
  <match src="): ) [32269,32270]" dest="): ) [32319,32320]"/>
  <match src=",: , [56641,56642]" dest=",: , [62088,62089]"/>
  <match src="call_argument [41058,41063]" dest="call_argument [41342,41347]"/>
  <match src="identifier: amount [32216,32222]" dest="identifier: amount [32266,32272]"/>
  <match src="(: ( [28871,28872]" dest="(: ( [28921,28922]"/>
  <match src="function_definition [36807,36849]" dest="function_definition [37011,37053]"/>
  <match src=".: . [58339,58340]" dest=".: . [63505,63506]"/>
  <match src="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [9476,9547]" dest="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [9526,9597]"/>
  <match src="(: ( [3755,3756]" dest="(: ( [3805,3806]"/>
  <match src="variable_declaration_statement [52892,52962]" dest="variable_declaration_statement [58284,58354]"/>
  <match src="identifier: ICurvePool [46768,46778]" dest="identifier: ICurvePool [48662,48672]"/>
  <match src="(: ( [59856,59857]" dest="(: ( [65040,65041]"/>
  <match src="identifier: ABDKMath64x64 [54425,54438]" dest="identifier: ABDKMath64x64 [59817,59830]"/>
  <match src="function_body [34509,34648]" dest="function_body [34713,34852]"/>
  <match src="bool: bool [28760,28764]" dest="bool: bool [28810,28814]"/>
  <match src="&quot;: &quot; [10327,10328]" dest="&quot;: &quot; [10377,10378]"/>
  <match src="parameter [31950,31965]" dest="parameter [32000,32015]"/>
  <match src="call_argument [54448,54457]" dest="call_argument [59840,59849]"/>
  <match src=",: , [16703,16704]" dest=",: , [16753,16754]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [41268,41271]" dest="&gt;&gt;=: &gt;&gt;= [41552,41555]"/>
  <match src="type_name [39544,39551]" dest="type_name [39828,39835]"/>
  <match src="view: view [61307,61311]" dest="view: view [67556,67560]"/>
  <match src="): ) [24483,24484]" dest="): ) [24533,24534]"/>
  <match src="return_statement [27518,27530]" dest="return_statement [27568,27580]"/>
  <match src="return_type_definition [48234,48251]" dest="return_type_definition [52657,52674]"/>
  <match src="expression_statement [34933,35001]" dest="expression_statement [35137,35205]"/>
  <match src="primitive_type [32043,32050]" dest="primitive_type [32093,32100]"/>
  <match src="return: return [8446,8452]" dest="return: return [8496,8502]"/>
  <match src="identifier: recipient [29802,29811]" dest="identifier: recipient [29852,29861]"/>
  <match src="comment: // Dependency file: @openzeppelin/contracts/token/ERC20/IERC20.sol [1410,1476]" dest="comment: // Dependency file: @openzeppelin/contracts/token/ERC20/IERC20.sol [1460,1526]"/>
  <match src="parameter [11600,11609]" dest="parameter [11650,11659]"/>
  <match src="(: ( [50145,50146]" dest="(: ( [55396,55397]"/>
  <match src="abstract: abstract [19038,19046]" dest="abstract: abstract [19088,19096]"/>
  <match src="identifier: yAmount [56217,56224]" dest="identifier: yAmount [61655,61662]"/>
  <match src="+: + [41970,41971]" dest="+: + [42254,42255]"/>
  <match src="identifier: pv [53903,53905]" dest="identifier: pv [59295,59297]"/>
  <match src="identifier: currencyAmountToTransfer [52038,52062]" dest="identifier: currencyAmountToTransfer [57166,57190]"/>
  <match src="function_body [40700,40784]" dest="function_body [40984,41068]"/>
  <match src="(: ( [6615,6616]" dest="(: ( [6665,6666]"/>
  <match src="visibility [39140,39148]" dest="visibility [39424,39432]"/>
  <match src="call_expression [52274,52345]" dest="call_expression [57402,57473]"/>
  <match src="): ) [34486,34487]" dest="): ) [34690,34691]"/>
  <match src="identifier: totalSupply [50409,50420]" dest="identifier: totalSupply [68305,68316]"/>
  <match src="true: true [20935,20939]" dest="true: true [20985,20989]"/>
  <match src="expression_statement [52266,52347]" dest="expression_statement [57394,57475]"/>
  <match src=",: , [23517,23518]" dest=",: , [23567,23568]"/>
  <match src="type_name [20397,20401]" dest="type_name [20447,20451]"/>
  <match src="external: external [49508,49516]" dest="external: external [54759,54767]"/>
  <match src="expression_statement [49305,49370]" dest="expression_statement [54556,54621]"/>
  <match src="]: ] [55571,55572]" dest="]: ] [61009,61010]"/>
  <match src="function: function [26241,26249]" dest="function: function [26291,26299]"/>
  <match src="state_variable_declaration [20397,20422]" dest="state_variable_declaration [20447,20472]"/>
  <match src="member_expression [29853,29874]" dest="member_expression [29903,29924]"/>
  <match src="address: address [23617,23624]" dest="address: address [23667,23674]"/>
  <match src="(: ( [31438,31439]" dest="(: ( [31488,31489]"/>
  <match src="call_expression [57235,57252]" dest="call_expression [62558,62575]"/>
  <match src="identifier: bit [41998,42001]" dest="identifier: bit [42282,42285]"/>
  <match src="{: { [9325,9326]" dest="{: { [9375,9376]"/>
  <match src="comment: /**      * @dev ensure enough curve.fi pool tokens are available      * Check if current available amount of TUSD is enough and      * withdraw remainder from gauge      * @param neededAmount amount required      */ [48848,49068]" dest="comment: /**      * @dev ensure enough curve.fi pool tokens are available      * Check if current available amount of TUSD is enough and      * withdraw remainder from gauge      * @param neededAmount amount required      */ [54099,54319]"/>
  <match src="call_argument [47328,47347]" dest="call_argument [66036,66055]"/>
  <match src="identifier: account [25698,25705]" dest="identifier: account [25748,25755]"/>
  <match src="member_expression [52701,52713]" dest="member_expression [58093,58105]"/>
  <match src="comment: // import {Initializable} from &quot;contracts/truefi/common/Initializable.sol&quot;; [33608,33683]" dest="comment: // import {Initializable} from &quot;contracts/truefi/common/Initializable.sol&quot;; [33812,33887]"/>
  <match src=".: . [58369,58370]" dest=".: . [63535,63536]"/>
  <match src="identifier: target [17775,17781]" dest="identifier: target [17825,17831]"/>
  <match src="(: ( [47998,47999]" dest="(: ( [52344,52345]"/>
  <match src="identifier: spender [26376,26383]" dest="identifier: spender [26426,26433]"/>
  <match src="call_expression [60801,60825]" dest="call_expression [67050,67074]"/>
  <match src="identifier: recipient [14542,14551]" dest="identifier: recipient [14592,14601]"/>
  <match src="binary_expression [12344,12349]" dest="binary_expression [12394,12399]"/>
  <match src="expression_statement [41464,41473]" dest="expression_statement [41748,41757]"/>
  <match src="uint256: uint256 [60685,60692]" dest="uint256: uint256 [66934,66941]"/>
  <match src="identifier: _ [6780,6781]" dest="identifier: _ [6830,6831]"/>
  <match src="primitive_type [42311,42317]" dest="primitive_type [42595,42601]"/>
  <match src="identifier: sellCrv [59698,59705]" dest="identifier: sellCrv [64873,64880]"/>
  <match src="function: function [49758,49766]" dest="function: function [55009,55017]"/>
  <match src="event_paramater [45137,45154]" dest="event_paramater [46845,46862]"/>
  <match src="&quot;: &quot; [32092,32093]" dest="&quot;: &quot; [32142,32143]"/>
  <match src="call_argument [31143,31144]" dest="call_argument [31193,31194]"/>
  <match src="primitive_type [60907,60914]" dest="primitive_type [67156,67163]"/>
  <match src="function_body [35425,35519]" dest="function_body [35629,35723]"/>
  <match src="]: ] [29869,29870]" dest="]: ] [29919,29920]"/>
  <match src="if: if [51945,51947]" dest="if: if [57073,57075]"/>
  <match src="call_expression [31116,31183]" dest="call_expression [31166,31233]"/>
  <match src="member_expression [51285,51295]" dest="member_expression [56255,56265]"/>
  <match src="comment: // ================ WARNING ================== [43964,44010]" dest="comment: // ================ WARNING ================== [44711,44757]"/>
  <match src="function_definition [58936,59030]" dest="function_definition [64102,64205]"/>
  <match src="call_expression [17273,17354]" dest="call_expression [17323,17404]"/>
  <match src="(: ( [57475,57476]" dest="(: ( [53043,53044]"/>
  <match src="uint256: uint256 [11600,11607]" dest="uint256: uint256 [11650,11657]"/>
  <match src="identifier: approve [56518,56525]" dest="identifier: approve [61965,61972]"/>
  <match src="call_expression [53373,53477]" dest="call_expression [58765,58869]"/>
  <match src="): ) [42387,42388]" dest="): ) [42671,42672]"/>
  <match src=",: , [27228,27229]" dest=",: , [27278,27279]"/>
  <match src="identifier: decimals_ [32683,32692]" dest="identifier: decimals_ [32733,32742]"/>
  <match src="call_argument [11668,11669]" dest="call_argument [11718,11719]"/>
  <match src="expression_statement [6749,6768]" dest="expression_statement [6799,6818]"/>
  <match src="string_literal [51298,51330]" dest="string_literal [56268,56300]"/>
  <match src="block_statement [41426,41484]" dest="block_statement [41710,41768]"/>
  <match src="identifier: amounts [39658,39665]" dest="identifier: amounts [39942,39949]"/>
  <match src="(: ( [51086,51087]" dest="(: ( [56056,56057]"/>
  <match src="return_statement [48496,48540]" dest="return_statement [53357,53401]"/>
  <match src="expression_statement [20887,20907]" dest="expression_statement [20937,20957]"/>
  <match src="&quot;: &quot; [29676,29677]" dest="&quot;: &quot; [29726,29727]"/>
  <match src="expression_statement [28051,28135]" dest="expression_statement [28101,28185]"/>
  <match src="}: } [37033,37034]" dest="}: } [37237,37238]"/>
  <match src="variable_declaration_statement [53895,53920]" dest="variable_declaration_statement [59287,59312]"/>
  <match src="function_definition [60129,60423]" dest="function_definition [66308,66611]"/>
  <match src="): ) [60895,60896]" dest="): ) [67144,67145]"/>
  <match src="&gt;=: &gt;= [41327,41329]" dest="&gt;=: &gt;= [41611,41613]"/>
  <match src="memory: memory [16692,16698]" dest="memory: memory [16742,16748]"/>
  <match src="type_name [10978,10985]" dest="type_name [11028,11035]"/>
  <match src="(: ( [18376,18377]" dest="(: ( [18426,18427]"/>
  <match src=".: . [50471,50472]" dest=".: . [68367,68368]"/>
  <match src="(: ( [57973,57974]" dest="(: ( [63139,63140]"/>
  <match src="visibility [9293,9301]" dest="visibility [9343,9351]"/>
  <match src="binary_expression [41998,42013]" dest="binary_expression [42282,42297]"/>
  <match src="(: ( [54340,54341]" dest="(: ( [59732,59733]"/>
  <match src="event: event [46163,46168]" dest="event: event [47871,47876]"/>
  <match src="): ) [50491,50492]" dest="): ) [68387,68388]"/>
  <match src="identifier: result [41735,41741]" dest="identifier: result [42019,42025]"/>
  <match src="identifier: block [51153,51158]" dest="identifier: block [56123,56128]"/>
  <match src=".: . [51187,51188]" dest=".: . [56157,56158]"/>
  <match src="number_literal [58384,58391]" dest="number_literal [63550,63557]"/>
  <match src="): ) [24687,24688]" dest="): ) [24737,24738]"/>
  <match src="identifier: _curvePool [49191,49201]" dest="identifier: _curvePool [54442,54452]"/>
  <match src="primitive_type [27239,27246]" dest="primitive_type [27289,27296]"/>
  <match src="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [1545,1617]" dest="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [1595,1667]"/>
  <match src="): ) [41006,41007]" dest="): ) [41290,41291]"/>
  <match src="member_expression [60311,60334]" dest="member_expression [66499,66522]"/>
  <match src="(: ( [29696,29697]" dest="(: ( [29746,29747]"/>
  <match src="identifier: neededAmount [49276,49288]" dest="identifier: neededAmount [54527,54539]"/>
  <match src="type_cast_expression [56526,56545]" dest="type_cast_expression [61973,61992]"/>
  <match src="identifier: Transfer [31413,31421]" dest="identifier: Transfer [31463,31471]"/>
  <match src="identifier: xc [41441,41443]" dest="identifier: xc [41725,41727]"/>
  <match src="identifier: this [61621,61625]" dest="identifier: this [67870,67874]"/>
  <match src="return_statement [25581,25601]" dest="return_statement [25631,25651]"/>
  <match src="member_expression [17281,17302]" dest="member_expression [17331,17352]"/>
  <match src="): ) [49288,49289]" dest="): ) [54539,54540]"/>
  <match src="comment: /**  * @title TrueFi Pool  * @dev Lending pool which uses curve.fi to store idle funds  * Earn high interest rates on currency deposits through uncollateralized loans  *  * Funds deposited in this pool are NOT LIQUID!  * Exiting the pool will withdraw a basket of LoanTokens backing the pool  * After exiting, an account will need to wait for LoanTokens to expire and burn them  * It is recommended to perform a zap or swap tokens on Uniswap for liquidity  *  * Funds are managed through an external function to save gas on deposits  */ [43305,43852]" dest="comment: // https://github.com/trusttoken/smart-contracts [1410,1458]"/>
  <match src="string [52745,52793]" dest="string [58137,58185]"/>
  <match src="}: } [15837,15838]" dest="}: } [15887,15888]"/>
  <match src="{: { [14578,14579]" dest="{: { [14628,14629]"/>
  <match src="override: override [51112,51120]" dest="override: override [56082,56090]"/>
  <match src="event_paramater [45532,45554]" dest="event_paramater [47240,47262]"/>
  <match src="uint256: uint256 [38560,38567]" dest="uint256: uint256 [38857,38864]"/>
  <match src="uint256: uint256 [49156,49163]" dest="uint256: uint256 [54407,54414]"/>
  <match src="(: ( [33332,33333]" dest="(: ( [33382,33383]"/>
  <match src="string_literal [32136,32172]" dest="string_literal [32186,32222]"/>
  <match src="expression_statement [42330,42345]" dest="expression_statement [42614,42629]"/>
  <match src="visibility [51103,51111]" dest="visibility [56073,56081]"/>
  <match src="parameter [51087,51101]" dest="parameter [56057,56071]"/>
  <match src="call_argument [34626,34627]" dest="call_argument [34830,34831]"/>
  <match src="type_name [50249,50256]" dest="type_name [55517,55524]"/>
  <match src="identifier: x [40768,40769]" dest="identifier: x [41052,41053]"/>
  <match src="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [4019,4170]" dest="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [4069,4220]"/>
  <match src="member_expression [61348,61381]" dest="member_expression [67597,67630]"/>
  <match src="): ) [19248,19249]" dest="): ) [19298,19299]"/>
  <match src="true: true [26696,26700]" dest="true: true [26746,26750]"/>
  <match src="): ) [51245,51246]" dest="): ) [56215,56216]"/>
  <match src="visibility [19205,19213]" dest="visibility [19255,19263]"/>
  <match src="call_expression [54147,54222]" dest="call_expression [59539,59614]"/>
  <match src="parameter [17493,17510]" dest="parameter [17543,17560]"/>
  <match src="type_name [36626,36633]" dest="type_name [36830,36837]"/>
  <match src="visibility [17558,17565]" dest="visibility [17608,17615]"/>
  <match src="number_literal: 0 [31143,31144]" dest="number_literal: 0 [31193,31194]"/>
  <match src="event_paramater [3996,4009]" dest="event_paramater [4046,4059]"/>
  <match src="block_statement [20997,21044]" dest="block_statement [21047,21094]"/>
  <match src="identifier: initializer [34497,34508]" dest="identifier: initializer [34701,34712]"/>
  <match src="member_expression [47566,47576]" dest="member_expression [49451,49461]"/>
  <match src="state_mutability [34753,34757]" dest="state_mutability [34957,34961]"/>
  <match src="): ) [8055,8056]" dest="): ) [8105,8106]"/>
  <match src="type_name [55512,55529]" dest="type_name [60950,60967]"/>
  <match src="returns: returns [24665,24672]" dest="returns: returns [24715,24722]"/>
  <match src="address: address [34618,34625]" dest="address: address [34822,34829]"/>
  <match src="identifier: div [10842,10845]" dest="identifier: div [10892,10895]"/>
  <match src="function_definition [1860,1928]" dest="function_definition [1910,1978]"/>
  <match src="visibility [36603,36611]" dest="visibility [36807,36815]"/>
  <match src="call_argument [58750,58760]" dest="call_argument [63916,63926]"/>
  <match src="return: return [40754,40760]" dest="return: return [41038,41044]"/>
  <match src="(: ( [42337,42338]" dest="(: ( [42621,42622]"/>
  <match src="identifier: sender [29794,29800]" dest="identifier: sender [29844,29850]"/>
  <match src="}: } [20950,20951]" dest="}: } [21000,21001]"/>
  <match src="memory: memory [17499,17505]" dest="memory: memory [17549,17555]"/>
  <match src="identifier: claimableFees [60218,60231]" dest="identifier: claimableFees [66406,66419]"/>
  <match src="member_expression [48290,48326]" dest="member_expression [52785,52821]"/>
  <match src="(: ( [18273,18274]" dest="(: ( [18323,18324]"/>
  <match src="type_cast_expression [42372,42389]" dest="type_cast_expression [42656,42673]"/>
  <match src="array_access [51153,51195]" dest="array_access [56123,56165]"/>
  <match src="expression_statement [20921,20940]" dest="expression_statement [20971,20990]"/>
  <match src="member_expression [50741,50751]" dest="member_expression [55711,55721]"/>
  <match src="call_argument [34618,34628]" dest="call_argument [34822,34832]"/>
  <match src="uint256: uint256 [54607,54614]" dest="uint256: uint256 [60036,60043]"/>
  <match src="{: { [18351,18352]" dest="{: { [18401,18402]"/>
  <match src="function: function [38736,38744]" dest="function: function [39033,39041]"/>
  <match src="member_expression [50713,50740]" dest="member_expression [55683,55710]"/>
  <match src="identifier: sender [51765,51771]" dest="identifier: sender [56893,56899]"/>
  <match src="type_name [53801,53808]" dest="type_name [59193,59200]"/>
  <match src="return_type_definition [13198,13212]" dest="return_type_definition [13248,13262]"/>
  <match src="parameter [27990,28008]" dest="parameter [28040,28058]"/>
  <match src="identifier: expectedAmount [57140,57154]" dest="identifier: amount [62479,62485]"/>
  <match src="identifier: TrueFiPool [43863,43873]" dest="identifier: TrueFiPool [44610,44620]"/>
  <match src="external: external [39293,39301]" dest="external: external [39577,39585]"/>
  <match src="(: ( [16669,16670]" dest="(: ( [16719,16720]"/>
  <match src="state_mutability [61307,61311]" dest="state_mutability [67556,67560]"/>
  <match src="call_expression [28095,28107]" dest="call_expression [28145,28157]"/>
  <match src="identifier: b [10237,10238]" dest="identifier: b [10287,10288]"/>
  <match src="string [51197,51245]" dest="string [56167,56215]"/>
  <match src="identifier: sender [29863,29869]" dest="identifier: sender [29913,29919]"/>
  <match src="visibility [20402,20409]" dest="visibility [20452,20459]"/>
  <match src="(: ( [61000,61001]" dest="(: ( [67249,67250]"/>
  <match src="): ) [25529,25530]" dest="): ) [25579,25580]"/>
  <match src="parameter [36186,36193]" dest="parameter [36390,36397]"/>
  <match src="uint256: uint256 [49495,49502]" dest="uint256: uint256 [54746,54753]"/>
  <match src="comment: // pragma solidity ^0.6.0; [1515,1541]" dest="comment: // pragma solidity ^0.6.0; [1565,1591]"/>
  <match src="(: ( [58357,58358]" dest="(: ( [63523,63524]"/>
  <match src="): ) [53046,53047]" dest="): ) [58438,58439]"/>
  <match src=",: , [56622,56623]" dest=",: , [62069,62070]"/>
  <match src="returns: returns [3747,3754]" dest="returns: returns [3797,3804]"/>
  <match src="identifier: roughCurveTokenAmount [58440,58461]" dest="identifier: roughCurveTokenAmount [63606,63627]"/>
  <match src="comment: // withdraw basket of loan tokens [51793,51826]" dest="comment: // withdraw basket of loan tokens [56921,56954]"/>
  <match src="identifier: spender [28875,28882]" dest="identifier: spender [28925,28932]"/>
  <match src="=: = [58293,58294]" dest="=: = [63459,63460]"/>
  <match src="assignment_expression [60242,60259]" dest="assignment_expression [66430,66447]"/>
  <match src="identifier: _token_amount [37364,37377]" dest="identifier: _token_amount [37568,37581]"/>
  <match src="): ) [26290,26291]" dest="): ) [26340,26341]"/>
  <match src="): ) [42343,42344]" dest="): ) [42627,42628]"/>
  <match src="&gt;=: &gt;= [17303,17305]" dest="&gt;=: &gt;= [17353,17355]"/>
  <match src=",: , [36518,36519]" dest=",: , [36722,36723]"/>
  <match src=",: , [60945,60946]" dest=",: , [67194,67195]"/>
  <match src="string [55455,55498]" dest="string [60893,60936]"/>
  <match src="type_name [56226,56233]" dest="type_name [61664,61671]"/>
  <match src="member_expression [52274,52290]" dest="member_expression [57402,57418]"/>
  <match src="uint256: uint256 [51087,51094]" dest="uint256: uint256 [56057,56064]"/>
  <match src="type_name [59716,59723]" dest="type_name [64891,64898]"/>
  <match src="identifier: onlyOwner [49793,49802]" dest="identifier: onlyOwner [55044,55053]"/>
  <match src="primitive_type [44693,44698]" dest="primitive_type [45920,45925]"/>
  <match src="identifier: account [13526,13533]" dest="identifier: account [13576,13583]"/>
  <match src="event: event [45949,45954]" dest="event: event [47657,47662]"/>
  <match src="call_argument [60311,60355]" dest="call_argument [66499,66543]"/>
  <match src="{: { [47832,47833]" dest="{: { [50661,50662]"/>
  <match src="identifier: require [14589,14596]" dest="identifier: require [14639,14646]"/>
  <match src="identifier: calcWithdrawOneCoin [61263,61282]" dest="identifier: calcWithdrawOneCoin [67512,67531]"/>
  <match src="primitive_type [10868,10874]" dest="primitive_type [10918,10924]"/>
  <match src="library: library [12534,12541]" dest="library: library [12584,12591]"/>
  <match src="): ) [42434,42435]" dest="): ) [42718,42719]"/>
  <match src="call_expression [51275,51296]" dest="call_expression [56245,56266]"/>
  <match src="identifier: xc [41109,41111]" dest="identifier: xc [41393,41395]"/>
  <match src="primitive_type [17575,17580]" dest="primitive_type [17625,17630]"/>
  <match src="&gt;=: &gt;= [41133,41135]" dest="&gt;=: &gt;= [41417,41419]"/>
  <match src="}: } [13535,13536]" dest="}: } [13585,13586]"/>
  <match src="primitive_type [46429,46436]" dest="primitive_type [48137,48144]"/>
  <match src=",: , [27256,27257]" dest=",: , [27306,27307]"/>
  <match src="=: = [47178,47179]" dest="=: = [49137,49138]"/>
  <match src="comment: /**      * @dev Emitted when borrower repays the pool      * @param payer Address of borrower      * @param amount Amount repaid      */ [46017,46157]" dest="comment: /**      * @dev Emitted when borrower repays the pool      * @param payer Address of borrower      * @param amount Amount repaid      */ [47725,47865]"/>
  <match src="type_name [45996,46003]" dest="type_name [47704,47711]"/>
  <match src=",: , [34331,34332]" dest=",: , [34535,34536]"/>
  <match src="return: return [8983,8989]" dest="return: return [9033,9039]"/>
  <match src="block_statement [18351,18406]" dest="block_statement [18401,18456]"/>
  <match src="indexed: indexed [46408,46415]" dest="indexed: indexed [48116,48123]"/>
  <match src="binary_expression [8018,8024]" dest="binary_expression [8068,8074]"/>
  <match src="&gt;=: &gt;= [41501,41503]" dest="&gt;=: &gt;= [41785,41787]"/>
  <match src="identifier: c [9652,9653]" dest="identifier: c [9702,9703]"/>
  <match src="true: true [27525,27529]" dest="true: true [27575,27579]"/>
  <match src="returns: returns [41022,41029]" dest="returns: returns [41306,41313]"/>
  <match src="): ) [20725,20726]" dest="): ) [20775,20776]"/>
  <match src="function: function [15665,15673]" dest="function: function [15715,15723]"/>
  <match src="internal: internal [19205,19213]" dest="internal: internal [19255,19263]"/>
  <match src="): ) [58391,58392]" dest="): ) [63557,63558]"/>
  <match src="identifier: owner [32034,32039]" dest="identifier: owner [32084,32089]"/>
  <match src="): ) [52250,52251]" dest="): ) [57378,57379]"/>
  <match src="{: { [46953,46954]" dest="{: { [48912,48913]"/>
  <match src="binary_expression [41413,41424]" dest="binary_expression [41697,41708]"/>
  <match src="comment: // === STORAGE VARIABLES ARE DECLARED BELOW == [44068,44114]" dest="comment: // === STORAGE VARIABLES ARE DECLARED BELOW == [44815,44861]"/>
  <match src="identifier: currencyAmount [55341,55355]" dest="identifier: currencyAmount [60770,60784]"/>
  <match src="(: ( [58439,58440]" dest="(: ( [63605,63606]"/>
  <match src="call_argument [57025,57061]" dest="call_argument [68699,68707]"/>
  <match src="call_expression [48026,48044]" dest="call_expression [52372,52390]"/>
  <match src="yul_variable_declaration [18205,18245]" dest="yul_variable_declaration [18255,18295]"/>
  <match src="): ) [57915,57916]" dest="): ) [63081,63082]"/>
  <match src="constant: constant [5942,5950]" dest="constant: constant [5992,6000]"/>
  <match src="(: ( [54653,54654]" dest="(: ( [60082,60083]"/>
  <match src="identifier: amount [30034,30040]" dest="identifier: amount [30084,30090]"/>
  <match src="number_literal: 0 [17991,17992]" dest="number_literal: 0 [18041,18042]"/>
  <match src=",: , [59763,59764]" dest=",: , [64938,64939]"/>
  <match src="identifier: add [54909,54912]" dest="identifier: add [60338,60341]"/>
  <match src="=: = [60216,60217]" dest="=: = [66404,66405]"/>
  <match src="(: ( [27972,27973]" dest="(: ( [28022,28023]"/>
  <match src="identifier: add [28118,28121]" dest="identifier: add [28168,28171]"/>
  <match src="address: address [34244,34251]" dest="address: address [34448,34455]"/>
  <match src="emit_statement [34592,34641]" dest="emit_statement [34796,34845]"/>
  <match src="identifier: c [9720,9721]" dest="identifier: c [9770,9771]"/>
  <match src="parameter [39641,39665]" dest="parameter [39925,39949]"/>
  <match src=".: . [58212,58213]" dest=".: . [63378,63379]"/>
  <match src="call_expression [50205,50227]" dest="call_expression [55473,55495]"/>
  <match src="function_definition [25671,25790]" dest="function_definition [25721,25840]"/>
  <match src="call_expression [52991,53059]" dest="call_expression [58383,58451]"/>
  <match src="): ) [31346,31347]" dest="): ) [31396,31397]"/>
  <match src="call_argument [54694,54724]" dest="call_argument [60123,60153]"/>
  <match src="block_statement [17835,17879]" dest="block_statement [17885,17929]"/>
  <match src="): ) [51977,51978]" dest="): ) [57105,57106]"/>
  <match src="returns: returns [54364,54371]" dest="returns: returns [59756,59763]"/>
  <match src="type_name [16171,16176]" dest="type_name [16221,16226]"/>
  <match src="function_body [57757,58500]" dest="function_body [62923,63666]"/>
  <match src="identifier: Joined [50794,50800]" dest="identifier: Borrow [62807,62813]"/>
  <match src="identifier: _NOT_ENTERED [5951,5963]" dest="identifier: _NOT_ENTERED [6001,6013]"/>
  <match src="member_expression [47209,47227]" dest="member_expression [49168,49186]"/>
  <match src="&quot;: &quot; [53475,53476]" dest="&quot;: &quot; [58867,58868]"/>
  <match src="address: address [32124,32131]" dest="address: address [32174,32181]"/>
  <match src="}: } [33430,33431]" dest="}: } [33634,33635]"/>
  <match src="identifier: spender [28074,28081]" dest="identifier: spender [28124,28131]"/>
  <match src=",: , [29800,29801]" dest=",: , [29850,29851]"/>
  <match src="}: } [48349,48350]" dest="}: } [52844,52845]"/>
  <match src="): ) [17810,17811]" dest="): ) [17860,17861]"/>
  <match src="array_access [30596,30614]" dest="array_access [30646,30664]"/>
  <match src="primitive_type [16171,16176]" dest="primitive_type [16221,16226]"/>
  <match src="string_literal [10300,10328]" dest="string_literal [10350,10378]"/>
  <match src="]: ] [28873,28874]" dest="]: ] [28923,28924]"/>
  <match src="return_type_definition [36723,36740]" dest="return_type_definition [36927,36944]"/>
  <match src="number_literal: 32 [41296,41298]" dest="number_literal: 32 [41580,41582]"/>
  <match src="type_name [36732,36739]" dest="type_name [36936,36943]"/>
  <match src="type_name [37023,37029]" dest="type_name [37227,37233]"/>
  <match src="(: ( [28810,28811]" dest="(: ( [28860,28861]"/>
  <match src="visibility [42288,42296]" dest="visibility [42572,42580]"/>
  <match src=".: . [53523,53524]" dest=".: . [58915,58916]"/>
  <match src="primitive_type [37283,37287]" dest="primitive_type [37487,37491]"/>
  <match src="address: address [23671,23678]" dest="address: address [23721,23728]"/>
  <match src="identifier: minMintAmount [55365,55378]" dest="identifier: minMintAmount [60794,60807]"/>
  <match src="identifier: ITrueFiPool [38071,38082]" dest="identifier: ITrueFiPool [38275,38286]"/>
  <match src="function_definition [48729,48840]" dest="function_definition [53589,53765]"/>
  <match src="identifier: b [7998,7999]" dest="identifier: b [8048,8049]"/>
  <match src="number_literal: 0 [49919,49920]" dest="number_literal: 0 [55170,55171]"/>
  <match src="visibility [23838,23845]" dest="visibility [23888,23895]"/>
  <match src="address: address [47399,47406]" dest="address: address [66143,66150]"/>
  <match src="type_name [11600,11607]" dest="type_name [11650,11657]"/>
  <match src="}: } [55019,55020]" dest="}: } [60448,60449]"/>
  <match src="(: ( [45961,45962]" dest="(: ( [47669,47670]"/>
  <match src="assembly: assembly [21622,21630]" dest="assembly: assembly [21672,21680]"/>
  <match src="identifier: _curvePool [47336,47346]" dest="identifier: _uniRouter [66044,66054]"/>
  <match src="parameter [26089,26093]" dest="parameter [26139,26143]"/>
  <match src="identifier: _allowances [32186,32197]" dest="identifier: _allowances [32236,32247]"/>
  <match src="(: ( [55005,55006]" dest="(: ( [60434,60435]"/>
  <match src="string [17313,17353]" dest="string [17363,17403]"/>
  <match src="uint256: uint256 [12277,12284]" dest="uint256: uint256 [12327,12334]"/>
  <match src="(: ( [61535,61536]" dest="(: ( [67784,67785]"/>
  <match src="parameter [3703,3720]" dest="parameter [3753,3770]"/>
  <match src="variable_declaration_statement [20806,20842]" dest="variable_declaration_statement [20856,20892]"/>
  <match src=",: , [55907,55908]" dest=",: , [61345,61346]"/>
  <match src="): ) [19139,19140]" dest="): ) [19189,19190]"/>
  <match src="identifier: currencyAmount [60801,60815]" dest="identifier: currencyAmount [67050,67064]"/>
  <match src="identifier: neededAmount [49122,49134]" dest="identifier: neededAmount [54373,54385]"/>
  <match src="bool: bool [3341,3345]" dest="bool: bool [3391,3395]"/>
  <match src="identifier: mod [12200,12203]" dest="identifier: mod [12250,12253]"/>
  <match src="(: ( [42385,42386]" dest="(: ( [42669,42670]"/>
  <match src=",: , [31441,31442]" dest=",: , [31491,31492]"/>
  <match src="identifier: amount [14622,14628]" dest="identifier: amount [14672,14678]"/>
  <match src="identifier: sender [52030,52036]" dest="identifier: sender [57158,57164]"/>
  <match src="call_argument [49837,49856]" dest="call_argument [55088,55107]"/>
  <match src="emit: emit [31408,31412]" dest="emit: emit [31458,31462]"/>
  <match src="identifier: pull [56204,56208]" dest="identifier: pull [61642,61646]"/>
  <match src="call_expression [55685,55733]" dest="call_expression [61123,61171]"/>
  <match src="primitive_type [61321,61328]" dest="primitive_type [67570,67577]"/>
  <match src="type_name [8381,8388]" dest="type_name [8431,8438]"/>
  <match src="comment: /**      * @dev repay debt by transferring tokens to the contract      * @param currencyAmount amount to repay      */ [58508,58629]" dest="comment: /**      * @dev repay debt by transferring tokens to the contract      * @param currencyAmount amount to repay      */ [63674,63795]"/>
  <match src="if_statement [41126,41217]" dest="if_statement [41410,41501]"/>
  <match src="primitive_type [53895,53902]" dest="primitive_type [59287,59294]"/>
  <match src="function_body [52682,53625]" dest="function_body [58074,59017]"/>
  <match src="identifier: value [4004,4009]" dest="identifier: value [4054,4059]"/>
  <match src="call_argument [53600,53616]" dest="call_argument [58992,59008]"/>
  <match src="{: { [50428,50429]" dest="{: { [68324,68325]"/>
  <match src="function_body [34922,35020]" dest="function_body [35126,35224]"/>
  <match src="(: ( [18233,18234]" dest="(: ( [18283,18284]"/>
  <match src="inheritance_specifier [23519,23526]" dest="inheritance_specifier [23569,23576]"/>
  <match src="type_name [27990,27997]" dest="type_name [28040,28047]"/>
  <match src="=: = [10988,10989]" dest="=: = [11038,11039]"/>
  <match src="member_expression [54084,54090]" dest="member_expression [59476,59482]"/>
  <match src="&quot;: &quot; [27504,27505]" dest="&quot;: &quot; [27554,27555]"/>
  <match src="internal: internal [41008,41016]" dest="internal: internal [41292,41300]"/>
  <match src="): ) [48307,48308]" dest="): ) [52802,52803]"/>
  <match src="function: function [1860,1868]" dest="function: function [1910,1918]"/>
  <match src="event_paramater [46400,46427]" dest="event_paramater [48108,48135]"/>
  <match src="variable_declaration_statement [51451,51548]" dest="variable_declaration_statement [56421,56518]"/>
  <match src="string [28905,28944]" dest="string [28955,28994]"/>
  <match src="): ) [32133,32134]" dest="): ) [32183,32184]"/>
  <match src="identifier: sub [57231,57234]" dest="identifier: sub [62554,62557]"/>
  <match src="return_type_definition [25552,25569]" dest="return_type_definition [25602,25619]"/>
  <match src="return_statement [48263,48343]" dest="return_statement [52758,52838]"/>
  <match src="number_literal: 2 [6010,6011]" dest="number_literal: 2 [6060,6061]"/>
  <match src="member_expression [49871,49897]" dest="member_expression [55122,55148]"/>
  <match src="primitive_type [37235,37241]" dest="primitive_type [37439,37445]"/>
  <match src="parameter [26622,26626]" dest="parameter [26672,26676]"/>
  <match src="{: { [20309,20310]" dest="{: { [20359,20360]"/>
  <match src="(: ( [53416,53417]" dest="(: ( [58808,58809]"/>
  <match src="function: function [19185,19193]" dest="function: function [19235,19243]"/>
  <match src="comment: // back. This is the compiler's defense against contract upgrades and [5412,5481]" dest="comment: // back. This is the compiler's defense against contract upgrades and [5462,5531]"/>
  <match src="call_argument [47336,47346]" dest="call_argument [66044,66054]"/>
  <match src="(: ( [50475,50476]" dest="(: ( [68371,68372]"/>
  <match src="view: view [47985,47989]" dest="view: view [52331,52335]"/>
  <match src=",: , [29519,29520]" dest=",: , [29569,29570]"/>
  <match src="type_name [28034,28038]" dest="type_name [28084,28088]"/>
  <match src="call_expression [54400,54482]" dest="call_expression [59792,59874]"/>
  <match src="primitive_type [17281,17288]" dest="primitive_type [17331,17338]"/>
  <match src="call_argument [55646,55656]" dest="call_argument [61084,61094]"/>
  <match src="identifier: _NOT_ENTERED [6097,6109]" dest="identifier: _NOT_ENTERED [6147,6159]"/>
  <match src="function_definition [47953,48119]" dest="function_definition [52299,52465]"/>
  <match src="primitive_type [17493,17498]" dest="primitive_type [17543,17548]"/>
  <match src="state_mutability [25547,25551]" dest="state_mutability [25597,25601]"/>
  <match src="returns: returns [13198,13205]" dest="returns: returns [13248,13255]"/>
  <match src="unary_expression [20730,20742]" dest="unary_expression [20780,20792]"/>
  <match src="primitive_type [30362,30369]" dest="primitive_type [30412,30419]"/>
  <match src="identifier: sender [52386,52392]" dest="identifier: sender [57705,57711]"/>
  <match src="function_definition [3665,3762]" dest="function_definition [3715,3812]"/>
  <match src="): ) [52062,52063]" dest="): ) [57190,57191]"/>
  <match src="uint256: uint256 [45156,45163]" dest="uint256: uint256 [46864,46871]"/>
  <match src="identifier: _curveGauge [44280,44291]" dest="identifier: _curveGauge [45027,45038]"/>
  <match src="uint256: uint256 [44583,44590]" dest="uint256: uint256 [45330,45337]"/>
  <match src="returns: returns [28751,28758]" dest="returns: returns [28801,28808]"/>
  <match src="modifier_invocation [56946,56958]" dest="modifier_invocation [62379,62391]"/>
  <match src="identifier: liquidExitPenalty [53012,53029]" dest="identifier: liquidExitPenalty [58404,58421]"/>
  <match src="primitive_type [31926,31933]" dest="primitive_type [31976,31983]"/>
  <match src="expression_statement [56499,56556]" dest="expression_statement [61946,62003]"/>
  <match src="false [21027,21032]" dest="false [21077,21082]"/>
  <match src="expression_statement [14589,14663]" dest="expression_statement [14639,14713]"/>
  <match src="comment: // add TUSD to curve [55585,55605]" dest="comment: // add TUSD to curve [61023,61043]"/>
  <match src="call_expression [58095,58148]" dest="call_expression [63261,63314]"/>
  <match src=".: . [55001,55002]" dest=".: . [60430,60431]"/>
  <match src="yul_path [13526,13533]" dest="yul_path [13576,13583]"/>
  <match src="uint256: uint256 [38768,38775]" dest="uint256: uint256 [39065,39072]"/>
  <match src="type_name [36520,36524]" dest="type_name [36724,36728]"/>
  <match src="function: function [56862,56870]" dest="function: function [62316,62324]"/>
  <match src="}: } [61653,61654]" dest="}: } [67902,67903]"/>
  <match src="public: public [24449,24455]" dest="public: public [24499,24505]"/>
  <match src="identifier: returndata [17761,17771]" dest="identifier: returndata [17811,17821]"/>
  <match src="emit_statement [58804,58844]" dest="emit_statement [63970,64010]"/>
  <match src="(: ( [37192,37193]" dest="(: ( [37396,37397]"/>
  <match src="function_definition [19185,19418]" dest="function_definition [19235,19468]"/>
  <match src="variable_declaration_statement [60201,60232]" dest="variable_declaration_statement [66389,66420]"/>
  <match src="call_expression [48503,48539]" dest="call_expression [53364,53400]"/>
  <match src="(: ( [58721,58722]" dest="(: ( [63887,63888]"/>
  <match src="primitive_type [59964,59971]" dest="primitive_type [65148,65155]"/>
  <match src="type_name [26330,26337]" dest="type_name [26380,26387]"/>
  <match src="identifier: _approve [28051,28059]" dest="identifier: _approve [28101,28109]"/>
  <match src="primitive_type [36732,36739]" dest="primitive_type [36936,36943]"/>
  <match src="identifier: size [13553,13557]" dest="identifier: size [13603,13607]"/>
  <match src="identifier: spender [26662,26669]" dest="identifier: spender [26712,26719]"/>
  <match src="identifier: __uniRouter [47253,47264]" dest="identifier: __uniRouter [49212,49223]"/>
  <match src="call_argument [32254,32261]" dest="call_argument [32304,32311]"/>
  <match src="visibility [58674,58682]" dest="visibility [63840,63848]"/>
  <match src="function_definition [59689,60013]" dest="function_definition [64864,65197]"/>
  <match src="{: { [10272,10273]" dest="{: { [10322,10323]"/>
  <match src="call_argument [55887,55907]" dest="call_argument [61325,61345]"/>
  <match src="primitive_type [5926,5933]" dest="primitive_type [5976,5983]"/>
  <match src="=: = [60256,60257]" dest="=: = [66444,66445]"/>
  <match src="}: } [58499,58500]" dest="}: } [63665,63666]"/>
  <match src="identifier: ICurve [36452,36458]" dest="identifier: ICurve [36656,36662]"/>
  <match src="for: for [43944,43947]" dest="for: for [44691,44694]"/>
  <match src="call_expression [54084,54129]" dest="call_expression [59476,59521]"/>
  <match src="(: ( [50285,50286]" dest="(: ( [55555,55556]"/>
  <match src="event_paramater [4239,4252]" dest="event_paramater [4289,4302]"/>
  <match src="block_statement [54755,54837]" dest="block_statement [60184,60266]"/>
  <match src="comment: /**      * @dev Currency token balance      * @return Currency token balance      */ [61418,61505]" dest="comment: /**      * @dev Currency token balance      * @return Currency token balance      */ [67667,67754]"/>
  <match src="member_expression [50566,50576]" dest="member_expression [68462,68472]"/>
  <match src="member_expression [60984,61020]" dest="member_expression [67233,67269]"/>
  <match src="(: ( [57139,57140]" dest="(: ( [62478,62479]"/>
  <match src="state_mutability [24456,24460]" dest="state_mutability [24506,24510]"/>
  <match src="(: ( [46988,46989]" dest="(: ( [48947,48948]"/>
  <match src="{: { [8902,8903]" dest="{: { [8952,8953]"/>
  <match src="identifier: b [8921,8922]" dest="identifier: b [8971,8972]"/>
  <match src="parameter [38752,38766]" dest="parameter [39049,39063]"/>
  <match src="call_argument [54454,54456]" dest="call_argument [59846,59848]"/>
  <match src="identifier: recipient [26130,26139]" dest="identifier: recipient [26180,26189]"/>
  <match src="function_definition [17121,17437]" dest="function_definition [17171,17487]"/>
  <match src="primitive_type [41832,41838]" dest="primitive_type [42116,42122]"/>
  <match src="address: address [27214,27221]" dest="address: address [27264,27271]"/>
  <match src="[: [ [28860,28861]" dest="[: [ [28910,28911]"/>
  <match src="call_argument [57585,57595]" dest="call_argument [62760,62770]"/>
  <match src="identifier: liquidRatioBefore [54203,54220]" dest="identifier: liquidRatioBefore [59595,59612]"/>
  <match src="internal: internal [29580,29588]" dest="internal: internal [29630,29638]"/>
  <match src="identifier: approve [3282,3289]" dest="identifier: approve [3332,3339]"/>
  <match src="address: address [2175,2182]" dest="address: address [2225,2232]"/>
  <match src="return_type_definition [61312,61329]" dest="return_type_definition [67561,67578]"/>
  <match src="identifier: _msgSender [26116,26126]" dest="identifier: _msgSender [26166,26176]"/>
  <match src="function_definition [35371,35519]" dest="function_definition [35575,35723]"/>
  <match src="primitive_type [7917,7924]" dest="primitive_type [7967,7974]"/>
  <match src="call_argument [29983,29989]" dest="call_argument [30033,30039]"/>
  <match src="identifier: _curvePool [55685,55695]" dest="identifier: _curvePool [61123,61133]"/>
  <match src="parameter [7917,7926]" dest="parameter [7967,7976]"/>
  <match src="contract_declaration [19038,19421]" dest="contract_declaration [19088,19471]"/>
  <match src="primitive_type [35701,35708]" dest="primitive_type [35905,35912]"/>
  <match src="uint256: uint256 [61321,61328]" dest="uint256: uint256 [67570,67577]"/>
  <match src="function_body [25408,25443]" dest="function_body [25458,25493]"/>
  <match src="parameter [39578,39588]" dest="parameter [39862,39872]"/>
  <match src="type_name [41077,41083]" dest="type_name [41361,41367]"/>
  <match src="primitive_type [39210,39217]" dest="primitive_type [39494,39501]"/>
  <match src="augmented_assignment_expression [41874,41883]" dest="augmented_assignment_expression [42158,42167]"/>
  <match src="type_name [3996,4003]" dest="type_name [4046,4053]"/>
  <match src="primitive_type [37116,37123]" dest="primitive_type [37320,37327]"/>
  <match src="visibility [5982,5989]" dest="visibility [6032,6039]"/>
  <match src="(: ( [54912,54913]" dest="(: ( [60341,60342]"/>
  <match src="function: function [1717,1725]" dest="function: function [1767,1775]"/>
  <match src="function: function [37485,37493]" dest="function: function [37689,37697]"/>
  <match src="visibility [48455,48461]" dest="visibility [53316,53322]"/>
  <match src="identifier: b [41972,41973]" dest="identifier: b [42256,42257]"/>
  <match src="type_name [3703,3710]" dest="type_name [3753,3760]"/>
  <match src="address: address [59001,59008]" dest="address: address [64176,64183]"/>
  <match src="): ) [48250,48251]" dest="): ) [52673,52674]"/>
  <match src="): ) [19091,19092]" dest="): ) [19141,19142]"/>
  <match src="emit: emit [34592,34596]" dest="emit: emit [34796,34800]"/>
  <match src=".: . [57906,57907]" dest=".: . [63072,63073]"/>
  <match src="function_definition [14507,14904]" dest="function_definition [14557,14954]"/>
  <match src="identifier: numerator [39246,39255]" dest="identifier: numerator [39530,39539]"/>
  <match src="}: } [26177,26178]" dest="}: } [26227,26228]"/>
  <match src="type_name [23628,23635]" dest="type_name [23678,23685]"/>
  <match src="primitive_type [44466,44473]" dest="primitive_type [45213,45220]"/>
  <match src=",: , [8458,8459]" dest=",: , [8508,8509]"/>
  <match src="internal: internal [34488,34496]" dest="internal: internal [34692,34700]"/>
  <match src=".: . [54899,54900]" dest=".: . [60328,60329]"/>
  <match src="identifier: amountToWithdraw [52900,52916]" dest="identifier: amountToWithdraw [58292,58308]"/>
  <match src="identifier: value [16713,16718]" dest="identifier: value [16763,16768]"/>
  <match src="type_name [28711,28718]" dest="type_name [28761,28768]"/>
  <match src="returns: returns [26321,26328]" dest="returns: returns [26371,26378]"/>
  <match src="type_name [7982,7989]" dest="type_name [8032,8039]"/>
  <match src="public: public [44305,44311]" dest="public: public [45052,45058]"/>
  <match src="identifier: sub [28884,28887]" dest="identifier: sub [28934,28937]"/>
  <match src="parameter [60730,60737]" dest="parameter [66979,66986]"/>
  <match src="primitive_type [17248,17253]" dest="primitive_type [17298,17303]"/>
  <match src="identifier: _curvePool [48026,48036]" dest="identifier: _curvePool [52372,52382]"/>
  <match src="identifier: _currencyToken [61588,61602]" dest="identifier: _currencyToken [67837,67851]"/>
  <match src="state_mutability [37398,37402]" dest="state_mutability [37602,37606]"/>
  <match src="): ) [48830,48831]" dest="): ) [54082,54083]"/>
  <match src="visibility [16153,16161]" dest="visibility [16203,16211]"/>
  <match src="): ) [36532,36533]" dest="): ) [36736,36737]"/>
  <match src="call_argument [27349,27355]" dest="call_argument [27399,27405]"/>
  <match src="member_expression [54408,54424]" dest="member_expression [59800,59816]"/>
  <match src="(: ( [53532,53533]" dest="(: ( [58924,58925]"/>
  <match src=".: . [50727,50728]" dest=".: . [55697,55698]"/>
  <match src="function: function [16639,16647]" dest="function: function [16689,16697]"/>
  <match src="(: ( [55842,55843]" dest="(: ( [61280,61281]"/>
  <match src="function: function [36131,36139]" dest="function: function [36335,36343]"/>
  <match src="return_statement [25419,25436]" dest="return_statement [25469,25486]"/>
  <match src="identifier: require [40711,40718]" dest="identifier: require [40995,41002]"/>
  <match src="-: - [8967,8968]" dest="-: - [9017,9018]"/>
  <match src="type_name [5974,5981]" dest="type_name [6024,6031]"/>
  <match src="(: ( [49207,49208]" dest="(: ( [54458,54459]"/>
  <match src=".: . [31297,31298]" dest=".: . [31347,31348]"/>
  <match src="expression_statement [57553,57616]" dest="expression_statement [62728,62790]"/>
  <match src=".: . [61627,61628]" dest=".: . [67876,67877]"/>
  <match src="(: ( [54998,54999]" dest="(: ( [60427,60428]"/>
  <match src="visibility [3738,3746]" dest="visibility [3788,3796]"/>
  <match src="number_literal: 10000 [54155,54160]" dest="number_literal: 10000 [59547,59552]"/>
  <match src=",: , [53111,53112]" dest=",: , [58503,58504]"/>
  <match src="emit_statement [53576,53618]" dest="emit_statement [58968,59010]"/>
  <match src="type_name [37089,37096]" dest="type_name [37293,37300]"/>
  <match src="identifier: require [29608,29615]" dest="identifier: require [29658,29665]"/>
  <match src="): ) [29989,29990]" dest="): ) [30039,30040]"/>
  <match src="): ) [48538,48539]" dest="): ) [53399,53400]"/>
  <match src="uint8: uint8 [25401,25406]" dest="uint8: uint8 [25451,25456]"/>
  <match src="identifier: expectedAmount [57652,57666]" dest="identifier: amount [55783,55789]"/>
  <match src="type_name [47824,47830]" dest="type_name [50653,50659]"/>
  <match src="assignment_expression [30596,30647]" dest="assignment_expression [30646,30697]"/>
  <match src="address: address [31431,31438]" dest="address: address [31481,31488]"/>
  <match src="function_definition [7904,8085]" dest="function_definition [7954,8135]"/>
  <match src="number_literal: 255 [41941,41944]" dest="number_literal: 255 [42225,42228]"/>
  <match src="call_argument [30672,30682]" dest="call_argument [30722,30732]"/>
  <match src="&quot;: &quot; [28905,28906]" dest="&quot;: &quot; [28955,28956]"/>
  <match src="(: ( [31301,31302]" dest="(: ( [31351,31352]"/>
  <match src="): ) [26093,26094]" dest="): ) [26143,26144]"/>
  <match src="type_name [15703,15708]" dest="type_name [15753,15758]"/>
  <match src="function_body [49803,49991]" dest="function_body [55054,55242]"/>
  <match src="block_statement [20872,20951]" dest="block_statement [20922,21001]"/>
  <match src="(: ( [60860,60861]" dest="(: ( [67109,67110]"/>
  <match src="(: ( [34940,34941]" dest="(: ( [35144,35145]"/>
  <match src="string: string [12226,12232]" dest="string: string [12276,12282]"/>
  <match src="(: ( [17805,17806]" dest="(: ( [17855,17856]"/>
  <match src="uint256: uint256 [36557,36564]" dest="uint256: uint256 [36761,36768]"/>
  <match src="int256: int256 [41832,41838]" dest="int256: int256 [42116,42122]"/>
  <match src="): ) [15720,15721]" dest="): ) [15770,15771]"/>
  <match src="&quot;: &quot; [17313,17314]" dest="&quot;: &quot; [17363,17364]"/>
  <match src="override_specifier [26071,26079]" dest="override_specifier [26121,26129]"/>
  <match src="variable_declaration [55512,55544]" dest="variable_declaration [60950,60982]"/>
  <match src="string [53420,53476]" dest="string [58812,58868]"/>
  <match src=".: . [51858,51859]" dest=".: . [56986,56987]"/>
  <match src="identifier: spender [32113,32120]" dest="identifier: spender [32163,32170]"/>
  <match src="type_name [7962,7969]" dest="type_name [8012,8019]"/>
  <match src="identifier: amount [29983,29989]" dest="identifier: amount [30033,30039]"/>
  <match src="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [28172,28661]" dest="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [28222,28711]"/>
  <match src=",: , [16238,16239]" dest=",: , [16288,16289]"/>
  <match src="call_argument [55006,55010]" dest="call_argument [60435,60439]"/>
  <match src="member_expression [17971,17988]" dest="member_expression [18021,18038]"/>
  <match src="expression_statement [41608,41617]" dest="expression_statement [41892,41901]"/>
  <match src="identifier: onlyOwner [49517,49526]" dest="identifier: onlyOwner [54768,54777]"/>
  <match src="): ) [51546,51547]" dest="): ) [56516,56517]"/>
  <match src="call_argument [49326,49368]" dest="call_argument [54577,54619]"/>
  <match src="primitive_type [25690,25697]" dest="primitive_type [25740,25747]"/>
  <match src="): ) [56648,56649]" dest="): ) [62095,62096]"/>
  <match src="): ) [54045,54046]" dest="): ) [59437,59438]"/>
  <match src="identifier: getPricePerFullShare [60873,60893]" dest="identifier: getPricePerFullShare [67122,67142]"/>
  <match src="identifier: spender [31958,31965]" dest="identifier: spender [32008,32015]"/>
  <match src="function_body [26339,26392]" dest="function_body [26389,26442]"/>
  <match src="call_expression [51755,51780]" dest="call_expression [56883,56908]"/>
  <match src="): ) [38155,38156]" dest="): ) [38359,38360]"/>
  <match src="identifier: IERC20 [44298,44304]" dest="identifier: IERC20 [45045,45051]"/>
  <match src="event_paramater [45361,45375]" dest="event_paramater [47069,47083]"/>
  <match src="memory: memory [24681,24687]" dest="memory: memory [24731,24737]"/>
  <match src="(: ( [57878,57879]" dest="(: ( [63044,63045]"/>
  <match src="): ) [16255,16256]" dest="): ) [16305,16306]"/>
  <match src="expression_statement [59833,59888]" dest="expression_statement [65017,65072]"/>
  <match src="): ) [57173,57174]" dest="): ) [62504,62505]"/>
  <match src="=: = [57455,57456]" dest="=: = [53024,53025]"/>
  <match src="&gt;=: &gt;= [8020,8022]" dest="&gt;=: &gt;= [8070,8072]"/>
  <match src="): ) [59020,59021]" dest="): ) [64195,64196]"/>
  <match src="string [27463,27505]" dest="string [27513,27555]"/>
  <match src="): ) [57311,57312]" dest="): ) [62626,62627]"/>
  <match src="private: private [23838,23845]" dest="private: private [23888,23895]"/>
  <match src=",: , [30435,30436]" dest=",: , [30485,30486]"/>
  <match src="identifier: _minter [44386,44393]" dest="identifier: _minter [45133,45140]"/>
  <match src="variable_declaration [21601,21611]" dest="variable_declaration [21651,21661]"/>
  <match src="identifier: IERC20 [46836,46842]" dest="identifier: IERC20 [48730,48736]"/>
  <match src="virtual: virtual [26299,26306]" dest="virtual: virtual [26349,26356]"/>
  <match src="): ) [34357,34358]" dest="): ) [34561,34562]"/>
  <match src="if_statement [41320,41399]" dest="if_statement [41604,41683]"/>
  <match src="(: ( [49836,49837]" dest="(: ( [55087,55088]"/>
  <match src="call_expression [54425,54458]" dest="call_expression [59817,59850]"/>
  <match src="}: } [54229,54230]" dest="}: } [59621,59622]"/>
  <match src="[: [ [32197,32198]" dest="[: [ [32247,32248]"/>
  <match src="function_definition [19071,19177]" dest="function_definition [19121,19227]"/>
  <match src="type_cast_expression [32043,32053]" dest="type_cast_expression [32093,32103]"/>
  <match src="primitive_type [34333,34340]" dest="primitive_type [34537,34544]"/>
  <match src="string_literal [51197,51245]" dest="string_literal [56167,56215]"/>
  <match src="emit: emit [49648,49652]" dest="emit: emit [54899,54903]"/>
  <match src="(: ( [24469,24470]" dest="(: ( [24519,24520]"/>
  <match src="comment: // pragma solidity ^0.6.0; [18498,18524]" dest="comment: // pragma solidity ^0.6.0; [18548,18574]"/>
  <match src="interface_declaration [36096,36198]" dest="interface_declaration [36300,36402]"/>
  <match src="identifier: from [54851,54855]" dest="identifier: from [60280,60284]"/>
  <match src="function: function [26539,26547]" dest="function: function [26589,26597]"/>
  <match src="external: external [37000,37008]" dest="external: external [37204,37212]"/>
  <match src="(: ( [8380,8381]" dest="(: ( [8430,8431]"/>
  <match src="identifier: msb [41378,41381]" dest="identifier: msb [41662,41665]"/>
  <match src="yul_evm_builtin [21652,21663]" dest="yul_evm_builtin [21702,21713]"/>
  <match src="type_cast_expression [49959,49979]" dest="type_cast_expression [55210,55230]"/>
  <match src="int128: int128 [40998,41004]" dest="int128: int128 [41282,41288]"/>
  <match src="visibility [17230,17238]" dest="visibility [17280,17288]"/>
  <match src="uint256: uint256 [29558,29565]" dest="uint256: uint256 [29608,29615]"/>
  <match src="call_expression [57269,57369]" dest="call_expression [62592,62684]"/>
  <match src="identifier: Borrow [57633,57639]" dest="identifier: Joined [55764,55770]"/>
  <match src="comment: // import {Context} from &quot;@openzeppelin/contracts/GSN/Context.sol&quot;; [33537,33604]" dest="comment: // import {Context} from &quot;@openzeppelin/contracts/GSN/Context.sol&quot;; [33741,33808]"/>
  <match src="identifier: cs [21697,21699]" dest="identifier: cs [21747,21749]"/>
  <match src="): ) [27506,27507]" dest="): ) [27556,27557]"/>
  <match src="): ) [54128,54129]" dest="): ) [59520,59521]"/>
  <match src="identifier: a [12212,12213]" dest="identifier: a [12262,12263]"/>
  <match src="(: ( [17618,17619]" dest="(: ( [17668,17669]"/>
  <match src="number_literal: 64 [41179,41181]" dest="number_literal: 64 [41463,41465]"/>
  <match src="call_expression [59833,59848]" dest="call_expression [65017,65032]"/>
  <match src="external: external [37502,37510]" dest="external: external [37706,37714]"/>
  <match src="): ) [31440,31441]" dest="): ) [31490,31491]"/>
  <match src="uint256: uint256 [38341,38348]" dest="uint256: uint256 [38638,38645]"/>
  <match src="): ) [55957,55958]" dest="): ) [61395,61396]"/>
  <match src="primitive_type [59774,59781]" dest="primitive_type [64949,64956]"/>
  <match src="array_access [27417,27450]" dest="array_access [27467,27500]"/>
  <match src="(: ( [42050,42051]" dest="(: ( [42334,42335]"/>
  <match src="call_expression [29853,29924]" dest="call_expression [29903,29974]"/>
  <match src="uint256: uint256 [56226,56233]" dest="uint256: uint256 [61664,61671]"/>
  <match src="parameter [11589,11598]" dest="parameter [11639,11648]"/>
  <match src="pure: pure [7948,7952]" dest="pure: pure [7998,8002]"/>
  <match src="parameter [28760,28764]" dest="parameter [28810,28814]"/>
  <match src="internal: internal [31088,31096]" dest="internal: internal [31138,31146]"/>
  <match src="parameter [12226,12252]" dest="parameter [12276,12302]"/>
  <match src="type_cast_expression [58221,58240]" dest="type_cast_expression [63387,63406]"/>
  <match src="(: ( [54892,54893]" dest="(: ( [60321,60322]"/>
  <match src="memory: memory [55530,55536]" dest="memory: memory [60968,60974]"/>
  <match src="identifier: amountWithoutFee [38776,38792]" dest="identifier: fee [39073,39076]"/>
  <match src="function_definition [51073,52409]" dest="function_definition [56043,57728]"/>
  <match src="): ) [49782,49783]" dest="): ) [55033,55034]"/>
  <match src="): ) [26659,26660]" dest="): ) [26709,26710]"/>
  <match src="call_argument [31217,31224]" dest="call_argument [31267,31274]"/>
  <match src="call_expression [61348,61402]" dest="call_expression [67597,67651]"/>
  <match src="contract_body [36459,36638]" dest="contract_body [36663,36842]"/>
  <match src="type_name [41728,41734]" dest="type_name [42012,42018]"/>
  <match src="): ) [10270,10271]" dest="): ) [10320,10321]"/>
  <match src="identifier: require [20687,20694]" dest="identifier: require [20737,20744]"/>
  <match src="primitive_type [11600,11607]" dest="primitive_type [11650,11657]"/>
  <match src="call_argument [57901,57905]" dest="call_argument [63067,63071]"/>
  <match src="return: return [24700,24706]" dest="return: return [24750,24756]"/>
  <match src="call_argument [51867,51873]" dest="call_argument [56995,57001]"/>
  <match src="type_name [3290,3297]" dest="type_name [3340,3347]"/>
  <match src="): ) [36739,36740]" dest="): ) [36943,36944]"/>
  <match src="parameter [39266,39285]" dest="parameter [39550,39569]"/>
  <match src="): ) [1894,1895]" dest="): ) [1944,1945]"/>
  <match src="parameter [30345,30360]" dest="parameter [30395,30410]"/>
  <match src="==: == [53941,53943]" dest="==: == [59333,59335]"/>
  <match src="for: for [41827,41830]" dest="for: for [42111,42114]"/>
  <match src="returns: returns [48762,48769]" dest="returns: returns [53622,53629]"/>
  <match src="expression_statement [31196,31246]" dest="expression_statement [31246,31296]"/>
  <match src="augmented_assignment_expression [41378,41387]" dest="augmented_assignment_expression [41662,41671]"/>
  <match src="primitive_type [10229,10236]" dest="primitive_type [10279,10286]"/>
  <match src="visibility [24259,24267]" dest="visibility [24309,24317]"/>
  <match src="call_argument [9664,9699]" dest="call_argument [9714,9749]"/>
  <match src="): ) [28106,28107]" dest="): ) [28156,28157]"/>
  <match src="identifier: _currencyToken [55615,55629]" dest="identifier: _currencyToken [61053,61067]"/>
  <match src="uint256: uint256 [9316,9323]" dest="uint256: uint256 [9366,9373]"/>
  <match src="interface_declaration [37038,37602]" dest="interface_declaration [37242,37806]"/>
  <match src="identifier: this [17289,17293]" dest="identifier: this [17339,17343]"/>
  <match src="identifier: require [58714,58721]" dest="identifier: require [63880,63887]"/>
  <match src="primitive_type [60685,60692]" dest="primitive_type [66934,66941]"/>
  <match src="identifier: _lender [47170,47177]" dest="identifier: _lender [49129,49136]"/>
  <match src="{: { [26628,26629]" dest="{: { [26678,26679]"/>
  <match src="function: function [34729,34737]" dest="function: function [34933,34941]"/>
  <match src="call_argument [50636,50639]" dest="call_argument [55606,55609]"/>
  <match src=",: , [61389,61390]" dest=",: , [67638,67639]"/>
  <match src=".: . [48036,48037]" dest=".: . [52382,52383]"/>
  <match src="function_definition [36937,36975]" dest="function_definition [37141,37179]"/>
  <match src="type_name [39238,39245]" dest="type_name [39522,39529]"/>
  <match src=".: . [58995,58996]" dest=".: . [64170,64171]"/>
  <match src="address: address [60150,60157]" dest="address: address [66329,66336]"/>
  <match src=",: , [34963,34964]" dest=",: , [35167,35168]"/>
  <match src="call_argument [51855,51865]" dest="call_argument [56983,56993]"/>
  <match src=",: , [45135,45136]" dest=",: , [46843,46844]"/>
  <match src=",: , [49917,49918]" dest=",: , [55168,55169]"/>
  <match src="&quot;: &quot; [32171,32172]" dest="&quot;: &quot; [32221,32222]"/>
  <match src="call_argument [51511,51528]" dest="call_argument [56481,56498]"/>
  <match src="identifier: _approve [26639,26647]" dest="identifier: _approve [26689,26697]"/>
  <match src="returns: returns [26080,26087]" dest="returns: returns [26130,26137]"/>
  <match src=",: , [24235,24236]" dest=",: , [24285,24286]"/>
  <match src="identifier: errorMessage [18377,18389]" dest="identifier: errorMessage [18427,18439]"/>
  <match src="(: ( [48289,48290]" dest="(: ( [52784,52785]"/>
  <match src="variable_declaration [41077,41087]" dest="variable_declaration [41361,41371]"/>
  <match src="identifier: from [3970,3974]" dest="identifier: from [4020,4024]"/>
  <match src="): ) [46443,46444]" dest="): ) [48151,48152]"/>
  <match src="): ) [9291,9292]" dest="): ) [9341,9342]"/>
  <match src="]: ] [26374,26375]" dest="]: ] [26424,26425]"/>
  <match src="identifier: recipient [2183,2192]" dest="identifier: recipient [2233,2242]"/>
  <match src="visibility [37307,37315]" dest="visibility [37511,37519]"/>
  <match src="block_statement [53278,53489]" dest="block_statement [58670,58881]"/>
  <match src="identifier: yTokenValue [48525,48536]" dest="identifier: yTokenValue [53386,53397]"/>
  <match src="event_definition [45100,45172]" dest="event_definition [46808,46880]"/>
  <match src="identifier: _curvePool [44244,44254]" dest="identifier: _curvePool [44991,45001]"/>
  <match src="bool: bool [17734,17738]" dest="bool: bool [17784,17788]"/>
  <match src="(: ( [35864,35865]" dest="(: ( [36068,36069]"/>
  <match src="primitive_type [13207,13211]" dest="primitive_type [13257,13261]"/>
  <match src="address: address [4214,4221]" dest="address: address [4264,4271]"/>
  <match src="bool: bool [20529,20533]" dest="bool: bool [20579,20583]"/>
  <match src="visibility [37141,37149]" dest="visibility [37345,37353]"/>
  <match src="primitive_type [54654,54661]" dest="primitive_type [60083,60090]"/>
  <match src="identifier: _curveGauge [55929,55940]" dest="identifier: _curveGauge [61367,61378]"/>
  <match src=",: , [52312,52313]" dest=",: , [57440,57441]"/>
  <match src="): ) [57895,57896]" dest="): ) [63061,63062]"/>
  <match src="return: return [54817,54823]" dest="return: return [60246,60252]"/>
  <match src="}: } [16263,16264]" dest="}: } [16313,16314]"/>
  <match src="(: ( [29874,29875]" dest="(: ( [29924,29925]"/>
  <match src="visibility [23810,23817]" dest="visibility [23860,23867]"/>
  <match src="parameter [29530,29547]" dest="parameter [29580,29597]"/>
  <match src="call_argument [56643,56648]" dest="call_argument [62090,62095]"/>
  <match src="identifier: Approval [32238,32246]" dest="identifier: Approval [32288,32296]"/>
  <match src="call_argument [56526,56545]" dest="call_argument [61973,61992]"/>
  <match src=",: , [56900,56901]" dest=",: , [62346,62347]"/>
  <match src="int128: int128 [41031,41037]" dest="int128: int128 [41315,41321]"/>
  <match src="block_statement [41593,41651]" dest="block_statement [41877,41935]"/>
  <match src="user_defined_type [37525,37531]" dest="user_defined_type [37729,37735]"/>
  <match src="expression_statement [41676,41685]" dest="expression_statement [41960,41969]"/>
  <match src="visibility [38357,38365]" dest="visibility [38654,38662]"/>
  <match src="type_name [58275,58282]" dest="type_name [63441,63448]"/>
  <match src="type_name [16738,16743]" dest="type_name [16788,16793]"/>
  <match src="(: ( [51152,51153]" dest="(: ( [56122,56123]"/>
  <match src="state_variable_declaration [44226,44255]" dest="state_variable_declaration [44973,45002]"/>
  <match src="): ) [30470,30471]" dest="): ) [30520,30521]"/>
  <match src="state_variable_declaration [44333,44360]" dest="state_variable_declaration [45080,45107]"/>
  <match src="primitive_type [54885,54892]" dest="primitive_type [60314,60321]"/>
  <match src="identifier: ABDKMath64x64 [54408,54421]" dest="identifier: ABDKMath64x64 [59800,59813]"/>
  <match src="identifier: integrateAtPoint [54946,54962]" dest="identifier: integrateAtPoint [60375,60391]"/>
  <match src="): ) [8401,8402]" dest="): ) [8451,8452]"/>
  <match src="library: library [7641,7648]" dest="library: library [7691,7698]"/>
  <match src="view: view [25387,25391]" dest="view: view [25437,25441]"/>
  <match src=".: . [59840,59841]" dest=".: . [65024,65025]"/>
  <match src="string: string [17530,17536]" dest="string: string [17580,17586]"/>
  <match src="function_definition [48432,48547]" dest="function_definition [53293,53408]"/>
  <match src="(: ( [32112,32113]" dest="(: ( [32162,32163]"/>
  <match src="augmented_assignment_expression [41959,41973]" dest="augmented_assignment_expression [42243,42257]"/>
  <match src="assignment_expression [32671,32692]" dest="assignment_expression [32721,32742]"/>
  <match src="int128: int128 [37235,37241]" dest="int128: int128 [37439,37445]"/>
  <match src="return_type_definition [48762,48779]" dest="return_type_definition [53622,53639]"/>
  <match src=".: . [58413,58414]" dest=".: . [63579,63580]"/>
  <match src="comment: // When all liquid, dont penalize [54770,54803]" dest="comment: // When all liquid, dont penalize [60199,60232]"/>
  <match src="parameter [16171,16183]" dest="parameter [16221,16233]"/>
  <match src="parameter [37283,37299]" dest="parameter [37487,37503]"/>
  <match src="identifier: block [50682,50687]" dest="identifier: block [55652,55657]"/>
  <match src="returns: returns [37403,37410]" dest="returns: returns [37607,37614]"/>
  <match src="type_name [48243,48250]" dest="type_name [52666,52673]"/>
  <match src="uint256: uint256 [7962,7969]" dest="uint256: uint256 [8012,8019]"/>
  <match src="type_name [59774,59781]" dest="type_name [64949,64956]"/>
  <match src="return: return [28967,28973]" dest="return: return [29017,29023]"/>
  <match src="identifier: msb [41548,41551]" dest="identifier: msb [41832,41835]"/>
  <match src="member_expression [58295,58320]" dest="member_expression [63461,63486]"/>
  <match src="primitive_type [41102,41108]" dest="primitive_type [41386,41392]"/>
  <match src="function: function [28667,28675]" dest="function: function [28717,28725]"/>
  <match src="call_expression [55860,55878]" dest="call_expression [61298,61316]"/>
  <match src="): ) [25705,25706]" dest="): ) [25755,25756]"/>
  <match src=",: , [30682,30683]" dest=",: , [30732,30733]"/>
  <match src="call_argument [17416,17428]" dest="call_argument [17466,17478]"/>
  <match src="}: } [14802,14803]" dest="}: } [14852,14853]"/>
  <match src="address: address [26260,26267]" dest="address: address [26310,26317]"/>
  <match src="visibility [61538,61546]" dest="visibility [67787,67795]"/>
  <match src="identifier: this [50761,50765]" dest="identifier: this [55731,55735]"/>
  <match src="identifier: amounts [55710,55717]" dest="identifier: amounts [61148,61155]"/>
  <match src="public: public [44379,44385]" dest="public: public [45126,45132]"/>
  <match src="function_definition [13147,13569]" dest="function_definition [13197,13619]"/>
  <match src="parameter [50146,50160]" dest="parameter [55397,55411]"/>
  <match src="binary_expression [12305,12311]" dest="binary_expression [12355,12361]"/>
  <match src="comment: // import {Address} from &quot;@openzeppelin/contracts/utils/Address.sol&quot;; [21931,22000]" dest="comment: // import {Address} from &quot;@openzeppelin/contracts/utils/Address.sol&quot;; [21981,22050]"/>
  <match src="identifier: minAmount [58475,58484]" dest="identifier: minAmount [63641,63650]"/>
  <match src="variable_declaration_statement [14753,14808]" dest="variable_declaration_statement [14803,14858]"/>
  <match src="): ) [40775,40776]" dest="): ) [41059,41060]"/>
  <match src="parameter [13207,13211]" dest="parameter [13257,13261]"/>
  <match src="identifier: errorMessage [8929,8941]" dest="identifier: errorMessage [8979,8991]"/>
  <match src="return: return [19152,19158]" dest="return: return [19202,19208]"/>
  <match src="expression_statement [49538,49611]" dest="expression_statement [54789,54862]"/>
  <match src="member_expression [28083,28121]" dest="member_expression [28133,28171]"/>
  <match src="member_expression [51761,51771]" dest="member_expression [56889,56899]"/>
  <match src="primitive_type [57443,57450]" dest="primitive_type [53008,53015]"/>
  <match src="primitive_type [61561,61568]" dest="primitive_type [67810,67817]"/>
  <match src="comment: /**      * @dev only lender can perform borrowing or repaying      */ [47448,47519]" dest="comment: /**      * @dev only lender can perform borrowing or repaying      */ [49333,49404]"/>
  <match src="type_name [37525,37531]" dest="type_name [37729,37735]"/>
  <match src="(: ( [44877,44878]" dest="(: ( [46585,46586]"/>
  <match src="call_argument [54904,54916]" dest="call_argument [60333,60345]"/>
  <match src=".: . [30635,30636]" dest=".: . [30685,30686]"/>
  <match src="boolean_literal [20902,20906]" dest="boolean_literal [20952,20956]"/>
  <match src=".: . [58736,58737]" dest=".: . [63902,63903]"/>
  <match src="return_type_definition [40683,40699]" dest="return_type_definition [40967,40983]"/>
  <match src="public: public [46934,46940]" dest="public: public [48893,48899]"/>
  <match src="for_statement [41827,42025]" dest="for_statement [42111,42309]"/>
  <match src="): ) [50775,50776]" dest="): ) [55745,55746]"/>
  <match src="binary_expression [32034,32053]" dest="binary_expression [32084,32103]"/>
  <match src=",: , [14833,14834]" dest=",: , [14883,14884]"/>
  <match src="visibility [54633,54639]" dest="visibility [60062,60068]"/>
  <match src="call_argument [10300,10328]" dest="call_argument [10350,10378]"/>
  <match src="emit_statement [30658,30701]" dest="emit_statement [30708,30751]"/>
  <match src="primitive_type [11589,11596]" dest="primitive_type [11639,11646]"/>
  <match src="{: { [24280,24281]" dest="{: { [24330,24331]"/>
  <match src="binary_expression [57277,57312]" dest="binary_expression [62600,62627]"/>
  <match src="identifier: block [59979,59984]" dest="identifier: block [65163,65168]"/>
  <match src="(: ( [35762,35763]" dest="(: ( [35966,35967]"/>
  <match src="): ) [3736,3737]" dest="): ) [3786,3787]"/>
  <match src="parameter [36520,36532]" dest="parameter [36724,36736]"/>
  <match src=",: , [55657,55658]" dest=",: , [61095,61096]"/>
  <match src="{: { [60190,60191]" dest="{: { [66378,66379]"/>
  <match src="identifier: yAmount [61382,61389]" dest="identifier: yAmount [67631,67638]"/>
  <match src="}: } [8998,8999]" dest="}: } [9048,9049]"/>
  <match src="{: { [52174,52175]" dest="{: { [57302,57303]"/>
  <match src="comment: /**      * @dev Emitted when someone exits the pool      * @param staker Account exiting      * @param amount Amount unstaking      */ [45180,45318]" dest="comment: /**      * @dev Emitted when someone exits the pool      * @param staker Account exiting      * @param amount Amount unstaking      */ [46888,47026]"/>
  <match src="identifier: _curvePool [58321,58331]" dest="identifier: _curvePool [63487,63497]"/>
  <match src="false: false [56643,56648]" dest="false: false [62090,62095]"/>
  <match src="number_literal: 0 [55548,55549]" dest="number_literal: 0 [60986,60987]"/>
  <match src="identifier: __lender [47180,47188]" dest="identifier: __lender [49139,49147]"/>
  <match src="call_expression [56499,56555]" dest="call_expression [61946,62002]"/>
  <match src="comment: // prettier-ignore [60750,60768]" dest="comment: // prettier-ignore [66999,67017]"/>
  <match src=",: , [59942,59943]" dest=",: , [65126,65127]"/>
  <match src="identifier: minter [47221,47227]" dest="identifier: minter [49180,49186]"/>
  <match src="identifier: mul [54461,54464]" dest="identifier: mul [59853,59856]"/>
  <match src="return: return [48791,48797]" dest="return: return [53719,53725]"/>
  <match src="): ) [37305,37306]" dest="): ) [37509,37510]"/>
  <match src="call_expression [41050,41064]" dest="call_expression [41334,41348]"/>
  <match src="type_name [44727,44732]" dest="type_name [45954,45959]"/>
  <match src=".: . [14781,14782]" dest=".: . [14831,14832]"/>
  <match src="(: ( [54739,54740]" dest="(: ( [60168,60169]"/>
  <match src="number_literal: 128 [42431,42434]" dest="number_literal: 128 [42715,42718]"/>
  <match src="identifier: Collected [46390,46399]" dest="identifier: Collected [48098,48107]"/>
  <match src="): ) [37139,37140]" dest="): ) [37343,37344]"/>
  <match src="]: ] [36502,36503]" dest="]: ] [36706,36707]"/>
  <match src="): ) [54916,54917]" dest="): ) [60345,60346]"/>
  <match src="call_argument [8463,8495]" dest="call_argument [8513,8545]"/>
  <match src="): ) [53275,53276]" dest="): ) [58667,58668]"/>
  <match src="): ) [1770,1771]" dest="): ) [1820,1821]"/>
  <match src="payable: payable [19132,19139]" dest="payable: payable [19182,19189]"/>
  <match src=",: , [27355,27356]" dest=",: , [27405,27406]"/>
  <match src=",: , [60406,60407]" dest=",: , [66594,66595]"/>
  <match src="function_definition [57688,58500]" dest="function_definition [62854,63666]"/>
  <match src="parameter [60685,60707]" dest="parameter [66934,66956]"/>
  <match src="type_name [25401,25406]" dest="type_name [25451,25456]"/>
  <match src="return_type_definition [39154,39171]" dest="return_type_definition [39438,39455]"/>
  <match src="view: view [53824,53828]" dest="view: view [59216,59220]"/>
  <match src="(: ( [56290,56291]" dest="(: ( [61737,61738]"/>
  <match src="returns: returns [21182,21189]" dest="returns: returns [21232,21239]"/>
  <match src="uint256: uint256 [54147,54154]" dest="uint256: uint256 [59539,59546]"/>
  <match src="primitive_type [10218,10225]" dest="primitive_type [10268,10275]"/>
  <match src="is: is [38083,38085]" dest="is: is [38287,38289]"/>
  <match src="(: ( [39475,39476]" dest="(: ( [39759,39760]"/>
  <match src="): ) [47545,47546]" dest="): ) [49430,49431]"/>
  <match src="}: } [40783,40784]" dest="}: } [41067,41068]"/>
  <match src="type_name [13415,13422]" dest="type_name [13465,13472]"/>
  <match src="comment: // constructor execution. [13378,13403]" dest="comment: // constructor execution. [13428,13453]"/>
  <match src=",: , [16123,16124]" dest=",: , [16173,16174]"/>
  <match src=",: , [60951,60952]" dest=",: , [67200,67201]"/>
  <match src="string [31147,31182]" dest="string [31197,31232]"/>
  <match src="(: ( [55876,55877]" dest="(: ( [61314,61315]"/>
  <match src="if: if [41578,41580]" dest="if: if [41862,41864]"/>
  <match src="): ) [36998,36999]" dest="): ) [37202,37203]"/>
  <match src="{: { [34237,34238]" dest="{: { [34441,34442]"/>
  <match src="uint256: uint256 [11589,11596]" dest="uint256: uint256 [11639,11646]"/>
  <match src="type_name [2592,2599]" dest="type_name [2642,2649]"/>
  <match src="member_expression [55860,55886]" dest="member_expression [61298,61324]"/>
  <match src="primitive_type [29710,29717]" dest="primitive_type [29760,29767]"/>
  <match src="(: ( [25736,25737]" dest="(: ( [25786,25787]"/>
  <match src="expression_statement [12297,12327]" dest="expression_statement [12347,12377]"/>
  <match src="identifier: msb [41289,41292]" dest="identifier: msb [41573,41576]"/>
  <match src=",: , [17528,17529]" dest=",: , [17578,17579]"/>
  <match src="identifier: _curveGauge [59009,59020]" dest="identifier: _curveGauge [64184,64195]"/>
  <match src="function_body [28766,28986]" dest="function_body [28816,29036]"/>
  <match src="identifier: token [37438,37443]" dest="identifier: token [37642,37647]"/>
  <match src="): ) [25378,25379]" dest="): ) [25428,25429]"/>
  <match src="identifier: Exited [53581,53587]" dest="identifier: Exited [58973,58979]"/>
  <match src="identifier: _beforeTokenTransfer [30484,30504]" dest="identifier: _beforeTokenTransfer [30534,30554]"/>
  <match src="primitive_type [23701,23708]" dest="primitive_type [23751,23758]"/>
  <match src="uint256: uint256 [38752,38759]" dest="uint256: uint256 [39049,39056]"/>
  <match src="{: { [48252,48253]" dest="{: { [52675,52676]"/>
  <match src="returns: returns [37581,37588]" dest="returns: returns [37785,37792]"/>
  <match src="expression_statement [29689,29761]" dest="expression_statement [29739,29811]"/>
  <match src="identifier: data [17506,17510]" dest="identifier: data [17556,17560]"/>
  <match src="primitive_type [1919,1926]" dest="primitive_type [1969,1976]"/>
  <match src="primitive_type [26622,26626]" dest="primitive_type [26672,26676]"/>
  <match src="identifier: _transfer [26106,26115]" dest="identifier: _transfer [26156,26165]"/>
  <match src="primitive_type [52644,52651]" dest="primitive_type [58031,58038]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [18108,18155]" dest="comment: // solhint-disable-next-line no-inline-assembly [18158,18205]"/>
  <match src="=: = [32214,32215]" dest="=: = [32264,32265]"/>
  <match src="identifier: xc [41354,41356]" dest="identifier: xc [41638,41640]"/>
  <match src="): ) [37387,37388]" dest="): ) [37591,37592]"/>
  <match src="emit_statement [31408,31451]" dest="emit_statement [31458,31501]"/>
  <match src="&quot;: &quot; [46989,46990]" dest="&quot;: &quot; [48948,48949]"/>
  <match src="identifier: sub [54117,54120]" dest="identifier: sub [59509,59512]"/>
  <match src="type_name [38752,38759]" dest="type_name [39049,39056]"/>
  <match src=".: . [54086,54087]" dest=".: . [59478,59479]"/>
  <match src="uint256: uint256 [47999,48006]" dest="uint256: uint256 [52345,52352]"/>
  <match src="): ) [50289,50290]" dest="): ) [55559,55560]"/>
  <match src=",: , [55717,55718]" dest=",: , [61155,61156]"/>
  <match src="}: } [28985,28986]" dest="}: } [29035,29036]"/>
  <match src="!=: != [12307,12309]" dest="!=: != [12357,12359]"/>
  <match src="visibility [47978,47984]" dest="visibility [52324,52330]"/>
  <match src="parameter [31926,31939]" dest="parameter [31976,31989]"/>
  <match src="}: } [47439,47440]" dest="}: } [49324,49325]"/>
  <match src="uint256: uint256 [10218,10225]" dest="uint256: uint256 [10268,10275]"/>
  <match src="(: ( [58649,58650]" dest="(: ( [63815,63816]"/>
  <match src="): ) [48810,48811]" dest="): ) [53738,53739]"/>
  <match src=",: , [3974,3975]" dest=",: , [4024,4025]"/>
  <match src="(: ( [35477,35478]" dest="(: ( [35681,35682]"/>
  <match src="{: { [61330,61331]" dest="{: { [67579,67580]"/>
  <match src="(: ( [53274,53275]" dest="(: ( [58666,58667]"/>
  <match src="event_paramater [34302,34331]" dest="event_paramater [34506,34535]"/>
  <match src="): ) [54458,54459]" dest="): ) [59850,59851]"/>
  <match src="memory: memory [10875,10881]" dest="memory: memory [10925,10931]"/>
  <match src="comment: // import {ITrueLender} from &quot;contracts/truefi/interface/ITrueLender.sol&quot;; [43085,43159]" dest="comment: // import {ITrueLender} from &quot;contracts/truefi/interface/ITrueLender.sol&quot;; [43651,43725]"/>
  <match src=".: . [55940,55941]" dest=".: . [61378,61379]"/>
  <match src="identifier: approve [49890,49897]" dest="identifier: approve [55141,55148]"/>
  <match src="identifier: fromUInt [54439,54447]" dest="identifier: fromUInt [59831,59839]"/>
  <match src="type_name [7928,7935]" dest="type_name [7978,7985]"/>
  <match src="identifier: beneficiary [60335,60346]" dest="identifier: beneficiary [66523,66534]"/>
  <match src="): ) [47792,47793]" dest="): ) [50621,50622]"/>
  <match src="primitive_type [26275,26282]" dest="primitive_type [26325,26332]"/>
  <match src="=: = [60941,60942]" dest="=: = [67190,67191]"/>
  <match src="): ) [36889,36890]" dest="): ) [37093,37094]"/>
  <match src="binary_expression [52138,52172]" dest="binary_expression [57266,57300]"/>
  <match src="string_literal [29722,29759]" dest="string_literal [29772,29809]"/>
  <match src="&lt;&lt;: &lt;&lt; [40770,40772]" dest="&lt;&lt;: &lt;&lt; [41054,41056]"/>
  <match src="identifier: onlyOwner [58967,58976]" dest="identifier: onlyOwner [51527,51536]"/>
  <match src=".: . [58819,58820]" dest=".: . [63985,63986]"/>
  <match src="): ) [53356,53357]" dest="): ) [58748,58749]"/>
  <match src="function_body [11643,11706]" dest="function_body [11693,11756]"/>
  <match src=".: . [60854,60855]" dest=".: . [67103,67104]"/>
  <match src="call_argument [35478,35479]" dest="call_argument [35682,35683]"/>
  <match src="identifier: decimals_ [32640,32649]" dest="identifier: decimals_ [32690,32699]"/>
  <match src="call_argument [55984,55998]" dest="call_argument [61422,61436]"/>
  <match src="variable_declaration [34520,34537]" dest="variable_declaration [34724,34741]"/>
  <match src="variable_declaration [60907,60940]" dest="variable_declaration [67156,67189]"/>
  <match src="(: ( [2591,2592]" dest="(: ( [2641,2642]"/>
  <match src="comment: // fee for deposits [44441,44460]" dest="comment: // fee for deposits [45188,45207]"/>
  <match src="parameter [17202,17228]" dest="parameter [17252,17278]"/>
  <match src="user_defined_type [46869,46880]" dest="user_defined_type [48763,48774]"/>
  <match src="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [25798,25997]" dest="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [25848,26047]"/>
  <match src="identifier: _symbol [24314,24321]" dest="identifier: _symbol [24364,24371]"/>
  <match src="identifier: value [17195,17200]" dest="identifier: value [17245,17250]"/>
  <match src="(: ( [55645,55646]" dest="(: ( [61083,61084]"/>
  <match src="variable_declaration [41728,41741]" dest="variable_declaration [42012,42025]"/>
  <match src="identifier: curveLiquidityAmountToTransfer [52314,52344]" dest="identifier: curveLiquidityAmountToTransfer [57442,57472]"/>
  <match src="call_argument [50801,50811]" dest="call_argument [62814,62824]"/>
  <match src="=: = [47288,47289]" dest="=: = [49313,49314]"/>
  <match src="identifier: isConstructor [21153,21166]" dest="identifier: isConstructor [21203,21216]"/>
  <match src="parameter [10218,10227]" dest="parameter [10268,10277]"/>
  <match src="[: [ [30626,30627]" dest="[: [ [30676,30677]"/>
  <match src="identifier: currencyAmountToTransfer [51949,51973]" dest="identifier: currencyAmountToTransfer [57077,57101]"/>
  <match src="comment: // Dependency file: contracts/truefi/interface/IUniswapRouter.sol [39311,39376]" dest="comment: // Dependency file: contracts/truefi/interface/IUniswapRouter.sol [39595,39660]"/>
  <match src="identifier: _msgSender [28861,28871]" dest="identifier: _msgSender [28911,28921]"/>
  <match src="): ) [52658,52659]" dest="): ) [58045,58046]"/>
  <match src="call_expression [48798,48832]" dest="call_expression [53726,53757]"/>
  <match src="variable_declaration [53895,53905]" dest="variable_declaration [59287,59297]"/>
  <match src="identifier: a [9656,9657]" dest="identifier: a [9706,9707]"/>
  <match src="): ) [9699,9700]" dest="): ) [9749,9750]"/>
  <match src="contract_body [5160,6961]" dest="contract_body [5210,7011]"/>
  <match src=".: . [49316,49317]" dest=".: . [54567,54568]"/>
  <match src="identifier: calc_token_amount [61003,61020]" dest="identifier: calc_token_amount [67252,67269]"/>
  <match src="address: address [30672,30679]" dest="address: address [30722,30729]"/>
  <match src="(: ( [50215,50216]" dest="(: ( [55483,55484]"/>
  <match src=".: . [52305,52306]" dest=".: . [57433,57434]"/>
  <match src="type_name [40658,40665]" dest="type_name [40942,40949]"/>
  <match src="number_literal: 0 [41871,41872]" dest="number_literal: 0 [42155,42156]"/>
  <match src="uint256: uint256 [55787,55794]" dest="uint256: uint256 [61225,61232]"/>
  <match src="type_name [21794,21805]" dest="type_name [21844,21855]"/>
  <match src="identifier: xc [41665,41667]" dest="identifier: xc [41949,41951]"/>
  <match src="expression_statement [57269,57370]" dest="expression_statement [62592,62685]"/>
  <match src="identifier: Collected [60385,60394]" dest="identifier: Collected [66573,66582]"/>
  <match src="call_argument [61613,61626]" dest="call_argument [67862,67875]"/>
  <match src="memory: memory [17754,17760]" dest="memory: memory [17804,17810]"/>
  <match src="call_argument [28800,28812]" dest="call_argument [28850,28862]"/>
  <match src="call_argument [58374,58378]" dest="call_argument [63540,63544]"/>
  <match src="string_literal [34965,34999]" dest="string_literal [35169,35203]"/>
  <match src="identifier: xc [41324,41326]" dest="identifier: xc [41608,41610]"/>
  <match src="identifier: currencyAmountToTransfer [51459,51483]" dest="identifier: currencyAmountToTransfer [56429,56453]"/>
  <match src="state_mutability [12263,12267]" dest="state_mutability [12313,12317]"/>
  <match src="call_argument [8018,8024]" dest="call_argument [8068,8074]"/>
  <match src="type_name [37089,37099]" dest="type_name [37293,37303]"/>
  <match src="address: address [30345,30352]" dest="address: address [30395,30402]"/>
  <match src="identifier: _balances [31279,31288]" dest="identifier: _balances [31329,31338]"/>
  <match src="identifier: from [54615,54619]" dest="identifier: from [60044,60048]"/>
  <match src="identifier: SafeMath [43935,43943]" dest="identifier: SafeMath [44682,44690]"/>
  <match src="{: { [50180,50181]" dest="{: { [55448,55449]"/>
  <match src="call_argument [30693,30699]" dest="call_argument [30743,30749]"/>
  <match src="return_type_definition [10254,10271]" dest="return_type_definition [10304,10321]"/>
  <match src="&lt;=: &lt;= [8923,8925]" dest="&lt;=: &lt;= [8973,8975]"/>
  <match src="(: ( [61631,61632]" dest="(: ( [67880,67881]"/>
  <match src="call_expression [58295,58379]" dest="call_expression [63461,63545]"/>
  <match src=".: . [27450,27451]" dest=".: . [27500,27501]"/>
  <match src="(: ( [31216,31217]" dest="(: ( [31266,31267]"/>
  <match src="bytes: bytes [16106,16111]" dest="bytes: bytes [16156,16161]"/>
  <match src="identifier: this [49228,49232]" dest="identifier: this [54479,54483]"/>
  <match src="modifier_invocation [60180,60189]" dest="modifier_invocation [66359,66377]"/>
  <match src="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [14912,15659]" dest="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [14962,15709]"/>
  <match src="parameter [27239,27256]" dest="parameter [27289,27306]"/>
  <match src="uint256: uint256 [53895,53902]" dest="uint256: uint256 [59287,59294]"/>
  <match src="identifier: amount [53934,53940]" dest="identifier: amount [59326,59332]"/>
  <match src="identifier: ICurveMinter [36785,36797]" dest="identifier: ICurveMinter [36989,37001]"/>
  <match src="function: function [36671,36679]" dest="function: function [36875,36883]"/>
  <match src="contract: contract [23486,23494]" dest="contract: contract [23536,23544]"/>
  <match src="call_expression [54114,54128]" dest="call_expression [59506,59520]"/>
  <match src="comment: // if there is not enough TUSD, withdraw from curve [57075,57126]" dest="comment: // if there is not enough TUSD, withdraw from curve [62414,62465]"/>
  <match src="bytes: bytes [15703,15708]" dest="bytes: bytes [15753,15758]"/>
  <match src="call_argument [52394,52400]" dest="call_argument [57713,57719]"/>
  <match src="returns: returns [2219,2226]" dest="returns: returns [2269,2276]"/>
  <match src="identifier: _curvePool [56499,56509]" dest="identifier: _curvePool [61946,61956]"/>
  <match src="yul_path [18234,18244]" dest="yul_path [18284,18294]"/>
  <match src="binary_expression [41865,41872]" dest="binary_expression [42149,42156]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [9737,10199]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [9787,10249]"/>
  <match src="private: private [23747,23754]" dest="private: private [23797,23804]"/>
  <match src="parameter [8426,8433]" dest="parameter [8476,8483]"/>
  <match src="primitive_type [15703,15708]" dest="primitive_type [15753,15758]"/>
  <match src="{: { [13504,13505]" dest="{: { [13554,13555]"/>
  <match src="expression_statement [53070,53157]" dest="expression_statement [58462,58549]"/>
  <match src="library: library [40365,40372]" dest="library: library [40649,40656]"/>
  <match src="(: ( [36492,36493]" dest="(: ( [36696,36697]"/>
  <match src="identifier: c [7990,7991]" dest="identifier: c [8040,8041]"/>
  <match src="=: = [50273,50274]" dest="=: = [55538,55539]"/>
  <match src="function: function [46738,46746]" dest="function: function [48632,48640]"/>
  <match src="(: ( [58320,58321]" dest="(: ( [63486,63487]"/>
  <match src="): ) [10966,10967]" dest="): ) [11016,11017]"/>
  <match src="external: external [55380,55388]" dest="external: external [60809,60817]"/>
  <match src="[: [ [60943,60944]" dest="[: [ [67192,67193]"/>
  <match src="): ) [55906,55907]" dest="): ) [61344,61345]"/>
  <match src="uint256: uint256 [60201,60208]" dest="uint256: uint256 [66389,66396]"/>
  <match src="(: ( [52273,52274]" dest="(: ( [57401,57402]"/>
  <match src="primitive_type [3722,3729]" dest="primitive_type [3772,3779]"/>
  <match src="identifier: _lender [51836,51843]" dest="identifier: _lender [56964,56971]"/>
  <match src="(: ( [38751,38752]" dest="(: ( [39048,39049]"/>
  <match src="identifier: x [54349,54350]" dest="identifier: x [59741,59742]"/>
  <match src="call_expression [61588,61627]" dest="call_expression [67837,67876]"/>
  <match src="): ) [29819,29820]" dest="): ) [29869,29870]"/>
  <match src="state_mutability [47810,47814]" dest="state_mutability [50639,50643]"/>
  <match src="return_statement [16763,16858]" dest="return_statement [16813,16908]"/>
  <match src="]: ] [25781,25782]" dest="]: ] [25831,25832]"/>
  <match src="type_cast_expression [35470,35480]" dest="type_cast_expression [35674,35684]"/>
  <match src="&quot;: &quot; [17628,17629]" dest="&quot;: &quot; [17678,17679]"/>
  <match src="(: ( [27447,27448]" dest="(: ( [27497,27498]"/>
  <match src="[: [ [32204,32205]" dest="[: [ [32254,32255]"/>
  <match src="*: * [42390,42391]" dest="*: * [42674,42675]"/>
  <match src="): ) [16718,16719]" dest="): ) [16768,16769]"/>
  <match src="type_name [39544,39553]" dest="type_name [39828,39837]"/>
  <match src="): ) [49920,49921]" dest="): ) [55171,55172]"/>
  <match src="identifier: msb [41084,41087]" dest="identifier: msb [41368,41371]"/>
  <match src="): ) [41793,41794]" dest="): ) [42077,42078]"/>
  <match src="identifier: IERC20 [36117,36123]" dest="identifier: IERC20 [36321,36327]"/>
  <match src="identifier: sub [54087,54090]" dest="identifier: sub [59479,59482]"/>
  <match src="call_argument [52701,52743]" dest="call_argument [58093,58135]"/>
  <match src="function_body [24485,24516]" dest="function_body [24535,24566]"/>
  <match src="primitive_type [45137,45144]" dest="primitive_type [46845,46852]"/>
  <match src="state_variable_declaration [23776,23797]" dest="state_variable_declaration [23826,23847]"/>
  <match src="=: = [57861,57862]" dest="=: = [63027,63028]"/>
  <match src="identifier: _allowances [28083,28094]" dest="identifier: _allowances [28133,28144]"/>
  <match src=".: . [53591,53592]" dest=".: . [58983,58984]"/>
  <match src="identifier: amountToWithdraw [53078,53094]" dest="identifier: amountToWithdraw [58470,58486]"/>
  <match src="call_argument [52947,52960]" dest="call_argument [58339,58352]"/>
  <match src="type_name [37556,37562]" dest="type_name [37760,37766]"/>
  <match src="}: } [21679,21680]" dest="}: } [21729,21730]"/>
  <match src="type_name [41771,41778]" dest="type_name [42055,42062]"/>
  <match src="(: ( [26020,26021]" dest="(: ( [26070,26071]"/>
  <match src="(: ( [41030,41031]" dest="(: ( [41314,41315]"/>
  <match src="string [29883,29923]" dest="string [29933,29973]"/>
  <match src="view: view [37511,37515]" dest="view: view [37715,37719]"/>
  <match src="identifier: _msgData [19194,19202]" dest="identifier: _msgData [19244,19252]"/>
  <match src="{: { [6525,6526]" dest="{: { [6575,6576]"/>
  <match src="&quot;: &quot; [32055,32056]" dest="&quot;: &quot; [32105,32106]"/>
  <match src="comment: // Dependency file: @openzeppelin/contracts/GSN/Context.sol [18433,18492]" dest="comment: // Dependency file: @openzeppelin/contracts/GSN/Context.sol [18483,18542]"/>
  <match src="state_mutability [21177,21181]" dest="state_mutability [21227,21231]"/>
  <match src="uint8: uint8 [44693,44698]" dest="uint8: uint8 [45920,45925]"/>
  <match src="(: ( [54475,54476]" dest="(: ( [59867,59868]"/>
  <match src="function_body [10272,10337]" dest="function_body [10322,10387]"/>
  <match src="parameter [39486,39502]" dest="parameter [39770,39786]"/>
  <match src="address: address [47328,47335]" dest="address: address [66036,66043]"/>
  <match src="if_statement [41409,41484]" dest="if_statement [41693,41768]"/>
  <match src="address: address [28694,28701]" dest="address: address [28744,28751]"/>
  <match src="call_argument [52302,52312]" dest="call_argument [57430,57440]"/>
  <match src="call_argument [31226,31236]" dest="call_argument [31276,31286]"/>
  <match src="]: ] [52742,52743]" dest="]: ] [58134,58135]"/>
  <match src="): ) [47643,47644]" dest="): ) [49521,49522]"/>
  <match src="call_expression [40711,40743]" dest="call_expression [40995,41027]"/>
  <match src="expression_statement [52972,53060]" dest="expression_statement [58364,58452]"/>
  <match src="(: ( [36731,36732]" dest="(: ( [36935,36936]"/>
  <match src="type_name [13207,13211]" dest="type_name [13257,13261]"/>
  <match src="identifier: b [12223,12224]" dest="identifier: b [12273,12274]"/>
  <match src="&quot;: &quot; [52877,52878]" dest="&quot;: &quot; [58269,58270]"/>
  <match src="solidity_pragma_token [42508,42523]" dest="solidity_pragma_token [43074,43089]"/>
  <match src="&quot;: &quot; [47598,47599]" dest="&quot;: &quot; [49483,49484]"/>
  <match src=",: , [31939,31940]" dest=",: , [31989,31990]"/>
  <match src="identifier: amount [51486,51492]" dest="identifier: amount [56456,56462]"/>
  <match src="identifier: sub [49339,49342]" dest="identifier: sub [54590,54593]"/>
  <match src="binary_expression [53078,53111]" dest="binary_expression [58470,58503]"/>
  <match src="): ) [54992,54993]" dest="): ) [60421,60422]"/>
  <match src="call_argument [16243,16255]" dest="call_argument [16293,16305]"/>
  <match src="identifier: minAmount [58283,58292]" dest="identifier: minAmount [63449,63458]"/>
  <match src="primitive_type [41031,41037]" dest="primitive_type [41315,41321]"/>
  <match src="identifier: weiValue [17795,17803]" dest="identifier: weiValue [17845,17853]"/>
  <match src="parameter [2194,2208]" dest="parameter [2244,2258]"/>
  <match src="primitive_type [21794,21801]" dest="primitive_type [21844,21851]"/>
  <match src="}: } [8084,8085]" dest="}: } [8134,8135]"/>
  <match src="(: ( [47565,47566]" dest="(: ( [49450,49451]"/>
  <match src="state_mutability [40678,40682]" dest="state_mutability [40962,40966]"/>
  <match src="number_literal: 0x10000000000000000 [41136,41155]" dest="number_literal: 0x10000000000000000 [41420,41439]"/>
  <match src="(: ( [38154,38155]" dest="(: ( [38358,38359]"/>
  <match src="return_statement [26159,26171]" dest="return_statement [26209,26221]"/>
  <match src="): ) [42012,42013]" dest="): ) [42296,42297]"/>
  <match src="): ) [53417,53418]" dest="): ) [58809,58810]"/>
  <match src="primitive_type [4214,4221]" dest="primitive_type [4264,4271]"/>
  <match src="parameter [2175,2192]" dest="parameter [2225,2242]"/>
  <match src="identifier: owner [4207,4212]" dest="identifier: owner [4257,4262]"/>
  <match src="primitive_type [56902,56909]" dest="primitive_type [62348,62355]"/>
  <match src="function_body [8435,8504]" dest="function_body [8485,8554]"/>
  <match src=",: , [32252,32253]" dest=",: , [32302,32303]"/>
  <match src="yul_identifier [21664,21668]" dest="yul_identifier [21714,21718]"/>
  <match src="parameter [54621,54631]" dest="parameter [60050,60060]"/>
  <match src="identifier: fee [49546,49549]" dest="identifier: fee [54797,54800]"/>
  <match src="call_expression [58321,58359]" dest="call_expression [63487,63525]"/>
  <match src="comment: /**      * @dev Claim fees from the pool      * @param beneficiary account to send funds to      */ [60021,60123]" dest="comment: /**      * @dev Claim fees from the pool      * @param beneficiary account to send funds to      */ [66200,66302]"/>
  <match src="=: = [20900,20901]" dest="=: = [20950,20951]"/>
  <match src="{: { [43922,43923]" dest="{: { [44669,44670]"/>
  <match src="external: external [36840,36848]" dest="external: external [37044,37052]"/>
  <match src="identifier: amount [54121,54127]" dest="identifier: amount [59513,59519]"/>
  <match src="uint256: uint256 [44878,44885]" dest="uint256: uint256 [46586,46593]"/>
  <match src="external: external [56253,56261]" dest="external: external [61691,61699]"/>
  <match src="external: external [36891,36899]" dest="external: external [37095,37103]"/>
  <match src="uint256: uint256 [60730,60737]" dest="uint256: uint256 [66979,66986]"/>
  <match src="state_mutability [9302,9306]" dest="state_mutability [9352,9356]"/>
  <match src="): ) [61401,61402]" dest="): ) [67650,67651]"/>
  <match src=".: . [49881,49882]" dest=".: . [55132,55133]"/>
  <match src=",: , [31145,31146]" dest=",: , [31195,31196]"/>
  <match src="call_argument [60844,60895]" dest="call_argument [67093,67144]"/>
  <match src="}: } [41567,41568]" dest="}: } [41851,41852]"/>
  <match src="&quot;: &quot; [14835,14836]" dest="&quot;: &quot; [14885,14886]"/>
  <match src=".: . [50281,50282]" dest=".: . [55551,55552]"/>
  <match src="primitive_type [45996,46003]" dest="primitive_type [47704,47711]"/>
  <match src="call_expression [29958,29990]" dest="call_expression [30008,30040]"/>
  <match src="primitive_type [31055,31062]" dest="primitive_type [31105,31112]"/>
  <match src="identifier: IUniswapRouter [39420,39434]" dest="identifier: IUniswapRouter [39704,39718]"/>
  <match src="(: ( [38963,38964]" dest="(: ( [39247,39248]"/>
  <match src="): ) [37531,37532]" dest="): ) [37735,37736]"/>
  <match src="primitive_type [16106,16111]" dest="primitive_type [16156,16161]"/>
  <match src=".: . [61358,61359]" dest=".: . [67607,67608]"/>
  <match src="boolean_literal [58486,58491]" dest="boolean_literal [63652,63657]"/>
  <match src="call_argument [55843,55847]" dest="call_argument [61281,61285]"/>
  <match src="{: { [19250,19251]" dest="{: { [19300,19301]"/>
  <match src=".: . [57643,57644]" dest=".: . [55774,55775]"/>
  <match src="identifier: amount [26671,26677]" dest="identifier: amount [26721,26727]"/>
  <match src="call_argument [54476,54481]" dest="call_argument [59868,59873]"/>
  <match src="}: } [32699,32700]" dest="}: } [32749,32750]"/>
  <match src="identifier: balanceOf [55825,55834]" dest="identifier: balanceOf [61263,61272]"/>
  <match src="identifier: balance [14611,14618]" dest="identifier: balance [14661,14668]"/>
  <match src="{: { [36459,36460]" dest="{: { [36663,36664]"/>
  <match src="identifier: a [9628,9629]" dest="identifier: a [9678,9679]"/>
  <match src="&gt;: &gt; [50423,50424]" dest="&gt;: &gt; [68319,68320]"/>
  <match src="identifier: isTopLevelCall [20981,20995]" dest="identifier: isTopLevelCall [21031,21045]"/>
  <match src="&quot;: &quot; [57367,57368]" dest="&quot;: &quot; [62682,62683]"/>
  <match src="primitive_type [3290,3297]" dest="primitive_type [3340,3347]"/>
  <match src="(: ( [48809,48810]" dest="(: ( [53737,53738]"/>
  <match src="string_literal [57025,57061]" dest="string_literal [68699,68707]"/>
  <match src="expression_statement [47277,47293]" dest="expression_statement [49302,49318]"/>
  <match src="state_mutability [11620,11624]" dest="state_mutability [11670,11674]"/>
  <match src="type_name [53895,53902]" dest="type_name [59287,59294]"/>
  <match src="}: } [13568,13569]" dest="}: } [13618,13619]"/>
  <match src="call_argument [8921,8927]" dest="call_argument [8971,8977]"/>
  <match src="identifier: owner [31934,31939]" dest="identifier: owner [31984,31989]"/>
  <match src="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is      * called.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [24730,25354]" dest="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is      * called.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [24780,25404]"/>
  <match src="parameter [46768,46790]" dest="parameter [48662,48684]"/>
  <match src="identifier: require [31116,31123]" dest="identifier: require [31166,31173]"/>
  <match src="primitive_type [7962,7969]" dest="primitive_type [8012,8019]"/>
  <match src="variable_declaration_statement [41832,41864]" dest="variable_declaration_statement [42116,42148]"/>
  <match src="identifier: c [9624,9625]" dest="identifier: c [9674,9675]"/>
  <match src="(: ( [53077,53078]" dest="(: ( [58469,58470]"/>
  <match src="(: ( [60334,60335]" dest="(: ( [66522,66523]"/>
  <match src="identifier: totalSupply [1726,1737]" dest="identifier: totalSupply [1776,1787]"/>
  <match src="}: } [60422,60423]" dest="}: } [66610,66611]"/>
  <match src="call_expression [27417,27506]" dest="call_expression [27467,27556]"/>
  <match src="primitive_type [34520,34527]" dest="primitive_type [34724,34731]"/>
  <match src="): ) [8941,8942]" dest="): ) [8991,8992]"/>
  <match src="identifier: _status [6928,6935]" dest="identifier: _status [6978,6985]"/>
  <match src=",: , [55453,55454]" dest=",: , [60891,60892]"/>
  <match src="}: } [49990,49991]" dest="}: } [55241,55242]"/>
  <match src="primitive_type [45697,45704]" dest="primitive_type [47405,47412]"/>
  <match src="type_name [8820,8827]" dest="type_name [8870,8877]"/>
  <match src="primitive_type [12277,12284]" dest="primitive_type [12327,12334]"/>
  <match src="): ) [54456,54457]" dest="): ) [59848,59849]"/>
  <match src="call_argument [34941,34963]" dest="call_argument [35145,35167]"/>
  <match src="identifier: require [6608,6615]" dest="identifier: require [6658,6665]"/>
  <match src="call_expression [49305,49369]" dest="call_expression [54556,54620]"/>
  <match src="member_expression [50618,50635]" dest="member_expression [55588,55605]"/>
  <match src="): ) [50833,50834]" dest="): ) [62837,62838]"/>
  <match src="visibility [26589,26595]" dest="visibility [26639,26645]"/>
  <match src="): ) [54127,54128]" dest="): ) [59519,59520]"/>
  <match src="primitive_type [58221,58228]" dest="primitive_type [63387,63394]"/>
  <match src="identifier: amount [51654,51660]" dest="identifier: amount [56624,56630]"/>
  <match src="identifier: TUSD_INDEX [61391,61401]" dest="identifier: TUSD_INDEX [67640,67650]"/>
  <match src=".: . [56576,56577]" dest=".: . [62023,62024]"/>
  <match src="identifier: beneficiary [46416,46427]" dest="identifier: beneficiary [48124,48135]"/>
  <match src="expression_statement [6608,6672]" dest="expression_statement [6658,6722]"/>
  <match src="emit: emit [30001,30005]" dest="emit: emit [30051,30055]"/>
  <match src="type_name [8953,8960]" dest="type_name [9003,9010]"/>
  <match src="comment: /**      * @dev Emitted when fee is changed      * @param newFee New fee      */ [44765,44848]" dest="comment: /**      * @dev Emitted when fee is changed      * @param newFee New fee      */ [46473,46556]"/>
  <match src="{: { [41426,41427]" dest="{: { [41710,41711]"/>
  <match src="identifier: subtractedValue [28888,28903]" dest="identifier: subtractedValue [28938,28953]"/>
  <match src="identifier: token [58205,58210]" dest="identifier: token [63371,63376]"/>
  <match src=",: , [8927,8928]" dest=",: , [8977,8978]"/>
  <match src=",: , [45359,45360]" dest=",: , [47067,47068]"/>
  <match src="call_expression [53318,53357]" dest="call_expression [58710,58749]"/>
  <match src="identifier: curve [58332,58337]" dest="identifier: curve [63498,63503]"/>
  <match src="primitive_type [26040,26047]" dest="primitive_type [26090,26097]"/>
  <match src="identifier: initialize [47030,47040]" dest="identifier: initialize [48989,48999]"/>
  <match src="): ) [4252,4253]" dest="): ) [4302,4303]"/>
  <match src="emit: emit [55971,55975]" dest="emit: emit [61409,61413]"/>
  <match src="return_type_definition [27313,27327]" dest="return_type_definition [27363,27377]"/>
  <match src="(: ( [60893,60894]" dest="(: ( [67142,67143]"/>
  <match src="identifier: b [12348,12349]" dest="identifier: b [12398,12399]"/>
  <match src=",: , [11669,11670]" dest=",: , [11719,11720]"/>
  <match src="array_access [25764,25782]" dest="array_access [25814,25832]"/>
  <match src="type_name [38560,38567]" dest="type_name [38857,38864]"/>
  <match src="identifier: joiningFee [47277,47287]" dest="identifier: joiningFee [49302,49312]"/>
  <match src="member_expression [19159,19169]" dest="member_expression [19209,19219]"/>
  <match src="{: { [25746,25747]" dest="{: { [25796,25797]"/>
  <match src="(: ( [42277,42278]" dest="(: ( [42561,42562]"/>
  <match src="binary_expression [59979,60004]" dest="binary_expression [65163,65188]"/>
  <match src="identifier: withdraw [49317,49325]" dest="identifier: withdraw [54568,54576]"/>
  <match src="(: ( [34743,34744]" dest="(: ( [34947,34948]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [9007,9252]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [9057,9302]"/>
  <match src="identifier: sender [29616,29622]" dest="identifier: sender [29666,29672]"/>
  <match src="(: ( [59008,59009]" dest="(: ( [64183,64184]"/>
  <match src="function: function [40640,40648]" dest="function: function [40924,40932]"/>
  <match src="uint256: uint256 [10857,10864]" dest="uint256: uint256 [10907,10914]"/>
  <match src="visibility [10240,10248]" dest="visibility [10290,10298]"/>
  <match src="&lt;&lt;: &lt;&lt; [41755,41757]" dest="&lt;&lt;: &lt;&lt; [42039,42041]"/>
  <match src="state_mutability [36172,36176]" dest="state_mutability [36376,36380]"/>
  <match src="returns: returns [25392,25399]" dest="returns: returns [25442,25449]"/>
  <match src="call_argument [58828,58842]" dest="call_argument [63994,64008]"/>
  <match src="identifier: spender [32205,32212]" dest="identifier: spender [32255,32262]"/>
  <match src="(: ( [14825,14826]" dest="(: ( [14875,14876]"/>
  <match src="call_expression [48798,48811]" dest="call_expression [53726,53739]"/>
  <match src="user_defined_type [44298,44304]" dest="user_defined_type [45045,45051]"/>
  <match src="assignment_expression [32186,32222]" dest="assignment_expression [32236,32272]"/>
  <match src="yul_decimal_number: 32 [18278,18280]" dest="yul_decimal_number: 32 [18328,18330]"/>
  <match src="binary_expression [41130,41155]" dest="binary_expression [41414,41439]"/>
  <match src="&quot;: &quot; [15797,15798]" dest="&quot;: &quot; [15847,15848]"/>
  <match src="comment: // amount. Since refunds are capped to a percentage of the total [5703,5767]" dest="comment: // amount. Since refunds are capped to a percentage of the total [5753,5817]"/>
  <match src="(: ( [29494,29495]" dest="(: ( [29544,29545]"/>
  <match src="primitive_type [9271,9278]" dest="primitive_type [9321,9328]"/>
  <match src="call_argument [51534,51546]" dest="call_argument [56504,56516]"/>
  <match src="expression_statement [51257,51332]" dest="expression_statement [56227,56302]"/>
  <match src="pure: pure [11620,11624]" dest="pure: pure [11670,11674]"/>
  <match src="(: ( [25689,25690]" dest="(: ( [25739,25740]"/>
  <match src="number_literal: 1e18 [60820,60824]" dest="number_literal: 1e18 [67069,67073]"/>
  <match src="expression_statement [55860,55919]" dest="expression_statement [61298,61357]"/>
  <match src="type_name [56878,56885]" dest="type_name [68055,68062]"/>
  <match src="type_name [60685,60692]" dest="type_name [66934,66941]"/>
  <match src="type_name [26275,26282]" dest="type_name [26325,26332]"/>
  <match src="identifier: sender [53537,53543]" dest="identifier: sender [58929,58935]"/>
  <match src="comment: /**      * @dev Prevents a contract from calling itself, directly or indirectly.      * Calling a `nonReentrant` function from another `nonReentrant`      * function is not supported. It is possible to prevent this from happening      * by making the `nonReentrant` function external, and make it call a      * `private` function that does the actual work.      */ [6125,6495]" dest="comment: /**      * @dev Prevents a contract from calling itself, directly or indirectly.      * Calling a `nonReentrant` function from another `nonReentrant`      * function is not supported. It is possible to prevent this from happening      * by making the `nonReentrant` function external, and make it call a      * `private` function that does the actual work.      */ [6175,6545]"/>
  <match src="): ) [56369,56370]" dest="): ) [61816,61817]"/>
  <match src="primitive_type [26260,26267]" dest="primitive_type [26310,26317]"/>
  <match src="parameter [12204,12213]" dest="parameter [12254,12263]"/>
  <match src="(: ( [28693,28694]" dest="(: ( [28743,28744]"/>
  <match src="): ) [37500,37501]" dest="): ) [37704,37705]"/>
  <match src="identifier: account [30684,30691]" dest="identifier: account [30734,30741]"/>
  <match src="binary_expression [32113,32134]" dest="binary_expression [32163,32184]"/>
  <match src="parameter [26275,26290]" dest="parameter [26325,26340]"/>
  <match src="using_directive [43929,43956]" dest="using_directive [44676,44703]"/>
  <match src="return_statement [19152,19170]" dest="return_statement [19202,19220]"/>
  <match src="parameter [37590,37597]" dest="parameter [37794,37801]"/>
  <match src="if_statement [51945,52076]" dest="if_statement [57073,57204]"/>
  <match src="identifier: Transfer [30006,30014]" dest="identifier: Transfer [30056,30064]"/>
  <match src="returns: returns [61552,61559]" dest="returns: returns [67801,67808]"/>
  <match src="primitive_type [37356,37363]" dest="primitive_type [37560,37567]"/>
  <match src="array_access [32186,32213]" dest="array_access [32236,32263]"/>
  <match src="event: event [45518,45523]" dest="event: event [47226,47231]"/>
  <match src="{: { [17835,17836]" dest="{: { [17885,17886]"/>
  <match src=",: , [26571,26572]" dest=",: , [26621,26622]"/>
  <match src="{: { [48485,48486]" dest="{: { [53346,53347]"/>
  <match src="string [14835,14895]" dest="string [14885,14945]"/>
  <match src="): ) [49982,49983]" dest="): ) [55233,55234]"/>
  <match src="variable_declaration [54057,54081]" dest="variable_declaration [59449,59473]"/>
  <match src="call_expression [53908,53919]" dest="call_expression [59300,59311]"/>
  <match src="uint256: uint256 [55357,55364]" dest="uint256: uint256 [60786,60793]"/>
  <match src="(: ( [57900,57901]" dest="(: ( [63066,63067]"/>
  <match src="type_name [36186,36193]" dest="type_name [36390,36397]"/>
  <match src="): ) [28008,28009]" dest="): ) [28058,28059]"/>
  <match src="function_body [35744,35918]" dest="function_body [35948,36122]"/>
  <match src="event_paramater [46176,46197]" dest="event_paramater [47884,47905]"/>
  <match src="(: ( [48062,48063]" dest="(: ( [52408,52409]"/>
  <match src="+=: += [41552,41554]" dest="+=: += [41836,41838]"/>
  <match src="): ) [29759,29760]" dest="): ) [29809,29810]"/>
  <match src="): ) [54898,54899]" dest="): ) [60327,60328]"/>
  <match src="{: { [17589,17590]" dest="{: { [17639,17640]"/>
  <match src="(: ( [28105,28106]" dest="(: ( [28155,28156]"/>
  <match src=".: . [54438,54439]" dest=".: . [59830,59831]"/>
  <match src="}: } [26707,26708]" dest="}: } [26757,26758]"/>
  <match src=",: , [17311,17312]" dest=",: , [17361,17362]"/>
  <match src="type_name [10263,10270]" dest="type_name [10313,10320]"/>
  <match src=",: , [55555,55556]" dest=",: , [60993,60994]"/>
  <match src="uint256: uint256 [51451,51458]" dest="uint256: uint256 [56421,56428]"/>
  <match src="identifier: msg [50566,50569]" dest="identifier: msg [68462,68465]"/>
  <match src="primitive_type [51087,51094]" dest="primitive_type [56057,56064]"/>
  <match src="external: external [58674,58682]" dest="external: external [63840,63848]"/>
  <match src="function_body [48780,48840]" dest="function_body [53640,53765]"/>
  <match src=".: . [54116,54117]" dest=".: . [59508,59509]"/>
  <match src="number_literal [59997,60004]" dest="number_literal [65181,65188]"/>
  <match src="identifier: pv [53944,53946]" dest="identifier: pv [59336,59338]"/>
  <match src="member_expression [51654,51664]" dest="member_expression [56624,56634]"/>
  <match src="identifier: mul [52931,52934]" dest="identifier: mul [58323,58326]"/>
  <match src="call_expression [30484,30533]" dest="call_expression [30534,30583]"/>
  <match src="boolean_literal [56643,56648]" dest="boolean_literal [62090,62095]"/>
  <match src="call_argument [27395,27401]" dest="call_argument [27445,27451]"/>
  <match src="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [19267,19385]" dest="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [19317,19435]"/>
  <match src="type_name [33387,33394]" dest="type_name [33437,33444]"/>
  <match src="member_expression [56499,56515]" dest="member_expression [61946,61962]"/>
  <match src="modifier_invocation [35734,35743]" dest="modifier_invocation [35938,35947]"/>
  <match src="): ) [49674,49675]" dest="): ) [54925,54926]"/>
  <match src="(: ( [24650,24651]" dest="(: ( [24700,24701]"/>
  <match src="identifier: amount [51265,51271]" dest="identifier: amount [56235,56241]"/>
  <match src=".: . [54908,54909]" dest=".: . [60337,60338]"/>
  <match src="identifier: number [51159,51165]" dest="identifier: number [56129,56135]"/>
  <match src="primitive_type [6020,6027]" dest="primitive_type [6070,6077]"/>
  <match src="uint256: uint256 [45137,45144]" dest="uint256: uint256 [46845,46852]"/>
  <match src="identifier: add [30636,30639]" dest="identifier: add [30686,30689]"/>
  <match src="uint256: uint256 [7982,7989]" dest="uint256: uint256 [8032,8039]"/>
  <match src="primitive_type [8426,8433]" dest="primitive_type [8476,8483]"/>
  <match src="identifier: amount [30640,30646]" dest="identifier: amount [30690,30696]"/>
  <match src=",: , [47418,47419]" dest=",: , [66121,66122]"/>
  <match src="identifier: amount [31238,31244]" dest="identifier: amount [31288,31294]"/>
  <match src="call_expression [58194,58212]" dest="call_expression [63360,63378]"/>
  <match src="return_statement [28145,28157]" dest="return_statement [28195,28207]"/>
  <match src="function: function [55318,55326]" dest="function: function [60747,60755]"/>
  <match src="modifier_invocation [49517,49526]" dest="modifier_invocation [54768,54777]"/>
  <match src="call_argument [28060,28072]" dest="call_argument [28110,28122]"/>
  <match src="comment: /*  * ABDK Math 64.64 Smart Contract Library.  Copyright © 2019 by ABDK Consulting.  * Author: Mikhail Vladimirov &lt;mikhail.vladimirov@gmail.com&gt;  */ [39724,39875]" dest="comment: /*  * ABDK Math 64.64 Smart Contract Library.  Copyright © 2019 by ABDK Consulting.  * Author: Mikhail Vladimirov &lt;mikhail.vladimirov@gmail.com&gt;  */ [40008,40159]"/>
  <match src="number_literal: 127 [41966,41969]" dest="number_literal: 127 [42250,42253]"/>
  <match src="identifier: account [30353,30360]" dest="identifier: account [30403,30410]"/>
  <match src="function: function [38327,38335]" dest="function: function [38624,38632]"/>
  <match src="return_statement [11654,11699]" dest="return_statement [11704,11749]"/>
  <match src="member_expression [49191,49207]" dest="member_expression [54442,54458]"/>
  <match src="uint256: uint256 [54621,54628]" dest="uint256: uint256 [60050,60057]"/>
  <match src="address: address [34333,34340]" dest="address: address [34537,34544]"/>
  <match src="return_statement [9584,9593]" dest="return_statement [9634,9643]"/>
  <match src="(: ( [51760,51761]" dest="(: ( [56888,56889]"/>
  <match src="string_literal [32055,32093]" dest="string_literal [32105,32143]"/>
  <match src="identifier: a [10990,10991]" dest="identifier: a [11040,11041]"/>
  <match src="identifier: TUSD_INDEX [58463,58473]" dest="identifier: TUSD_INDEX [63629,63639]"/>
  <match src="call_argument [58463,58473]" dest="call_argument [63629,63639]"/>
  <match src=",: , [30021,30022]" dest=",: , [30071,30072]"/>
  <match src="identifier: _curvePool [49932,49942]" dest="identifier: _curvePool [55183,55193]"/>
  <match src="member_expression [50275,50285]" dest="member_expression [55545,55555]"/>
  <match src="function_definition [34729,34808]" dest="function_definition [34933,35012]"/>
  <match src="(: ( [16225,16226]" dest="(: ( [16275,16276]"/>
  <match src="): ) [35479,35480]" dest="): ) [35683,35684]"/>
  <match src="{: { [36124,36125]" dest="{: { [36328,36329]"/>
  <match src="call_expression [47558,47644]" dest="call_expression [49443,49522]"/>
  <match src="(: ( [36950,36951]" dest="(: ( [37154,37155]"/>
  <match src="identifier: this [19261,19265]" dest="identifier: this [19311,19315]"/>
  <match src="identifier: mul [50212,50215]" dest="identifier: mul [55480,55483]"/>
  <match src="identifier: IERC20 [47824,47830]" dest="identifier: IERC20 [50653,50659]"/>
  <match src="identifier: a [8023,8024]" dest="identifier: a [8073,8074]"/>
  <match src="identifier: mod [11585,11588]" dest="identifier: mod [11635,11638]"/>
  <match src="identifier: require [51145,51152]" dest="identifier: require [56115,56122]"/>
  <match src="=: = [35900,35901]" dest="=: = [36104,36105]"/>
  <match src="identifier: require [12297,12304]" dest="identifier: require [12347,12354]"/>
  <match src="identifier: require [56283,56290]" dest="identifier: require [61730,61737]"/>
  <match src="identifier: _burn [53198,53203]" dest="identifier: _burn [58590,58595]"/>
  <match src=",: , [45994,45995]" dest=",: , [47702,47703]"/>
  <match src="call_argument [60408,60414]" dest="call_argument [66596,66602]"/>
  <match src="type_name [44564,44591]" dest="type_name [45311,45338]"/>
  <match src="function: function [16068,16076]" dest="function: function [16118,16126]"/>
  <match src="): ) [45554,45555]" dest="): ) [47262,47263]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [1480,1511]" dest="comment: // SPDX-License-Identifier: MIT [1530,1561]"/>
  <match src="view: view [38166,38170]" dest="view: view [38370,38374]"/>
  <match src="identifier: this [58770,58774]" dest="identifier: this [63936,63940]"/>
  <match src="): ) [48341,48342]" dest="): ) [52836,52837]"/>
  <match src="identifier: SafeMath [23548,23556]" dest="identifier: SafeMath [23598,23606]"/>
  <match src="assignment_expression [47090,47116]" dest="assignment_expression [49049,49075]"/>
  <match src="}: } [8503,8504]" dest="}: } [8553,8554]"/>
  <match src="(: ( [48452,48453]" dest="(: ( [53313,53314]"/>
  <match src="primitive_type [2592,2599]" dest="primitive_type [2642,2649]"/>
  <match src="primitive_type [17530,17536]" dest="primitive_type [17580,17586]"/>
  <match src="memory: memory [60925,60931]" dest="memory: memory [67174,67180]"/>
  <match src="identifier: latestJoinBlock [44592,44607]" dest="identifier: latestJoinBlock [45339,45354]"/>
  <match src="(: ( [52137,52138]" dest="(: ( [57265,57266]"/>
  <match src="{: { [49803,49804]" dest="{: { [55054,55055]"/>
  <match src="string [47598,47643]" dest="string [49483,49521]"/>
  <match src="call_argument [8929,8941]" dest="call_argument [8979,8991]"/>
  <match src="(: ( [17151,17152]" dest="(: ( [17201,17202]"/>
  <match src="identifier: N_TOKENS [44708,44716]" dest="identifier: N_TOKENS [45935,45943]"/>
  <match src="state_mutability [54359,54363]" dest="state_mutability [59751,59755]"/>
  <match src="): ) [30584,30585]" dest="): ) [30634,30635]"/>
  <match src="primitive_type [8831,8838]" dest="primitive_type [8881,8888]"/>
  <match src="boolean_literal [26696,26700]" dest="boolean_literal [26746,26750]"/>
  <match src="expression_statement [46964,47012]" dest="expression_statement [48923,48971]"/>
  <match src="if_statement [49245,49381]" dest="if_statement [54496,54632]"/>
  <match src="call_expression [48026,48069]" dest="call_expression [52372,52415]"/>
  <match src="call_argument [30513,30514]" dest="call_argument [30563,30564]"/>
  <match src="user_defined_type [44261,44272]" dest="user_defined_type [45008,45019]"/>
  <match src="true [20935,20939]" dest="true [20985,20989]"/>
  <match src="identifier: onlyLender [58692,58702]" dest="identifier: onlyLender [63858,63868]"/>
  <match src="parameter [49495,49506]" dest="parameter [54746,54757]"/>
  <match src="(: ( [48333,48334]" dest="(: ( [52828,52829]"/>
  <match src="identifier: onlyOwner [59812,59821]" dest="identifier: onlyOwnerOrManager [64987,65005]"/>
  <match src="(: ( [49897,49898]" dest="(: ( [55148,55149]"/>
  <match src="visibility [49784,49792]" dest="visibility [55035,55043]"/>
  <match src="event_paramater [45156,45170]" dest="event_paramater [46864,46878]"/>
  <match src="call_argument [55909,55917]" dest="call_argument [61347,61355]"/>
  <match src="primitive_type [3307,3314]" dest="primitive_type [3357,3364]"/>
  <match src="bool: bool [20397,20401]" dest="bool: bool [20447,20451]"/>
  <match src="if: if [20852,20854]" dest="if: if [20902,20904]"/>
  <match src="number_literal: 0 [55554,55555]" dest="number_literal: 0 [60992,60993]"/>
  <match src="identifier: add_liquidity [37075,37088]" dest="identifier: add_liquidity [37279,37292]"/>
  <match src=",: , [15701,15702]" dest=",: , [15751,15752]"/>
  <match src="call_expression [27386,27507]" dest="call_expression [27436,27557]"/>
  <match src="parameter [55357,55378]" dest="parameter [60786,60807]"/>
  <match src="identifier: require [47558,47565]" dest="identifier: require [49443,49450]"/>
  <match src="int128: int128 [42311,42317]" dest="int128: int128 [42595,42601]"/>
  <match src="!=: != [51166,51168]" dest="!=: != [56136,56138]"/>
  <match src="call_expression [34933,35000]" dest="call_expression [35137,35204]"/>
  <match src="type_name [3307,3314]" dest="type_name [3357,3364]"/>
  <match src="}: } [36637,36638]" dest="}: } [36841,36842]"/>
  <match src="function_definition [46738,47440]" dest="function_definition [48632,49325]"/>
  <match src="call_argument [57977,58048]" dest="call_argument [63143,63214]"/>
  <match src="view: view [26316,26320]" dest="view: view [26366,26370]"/>
  <match src="modifier_invocation [56959,56969]" dest="modifier_invocation [62392,62402]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [41611,41614]" dest="&gt;&gt;=: &gt;&gt;= [41895,41898]"/>
  <match src="return: return [9584,9590]" dest="return: return [9634,9640]"/>
  <match src=",: , [50766,50767]" dest=",: , [55736,55737]"/>
  <match src="): ) [55498,55499]" dest="): ) [60936,60937]"/>
  <match src="call_argument [10297,10298]" dest="call_argument [10347,10348]"/>
  <match src="bytes: bytes [19236,19241]" dest="bytes: bytes [19286,19291]"/>
  <match src="string [11671,11697]" dest="string [11721,11747]"/>
  <match src="&quot;: &quot; [6669,6670]" dest="&quot;: &quot; [6719,6720]"/>
  <match src="primitive_type [37379,37385]" dest="primitive_type [37583,37589]"/>
  <match src="identifier: _balances [25764,25773]" dest="identifier: _balances [25814,25823]"/>
  <match src="uint256: uint256 [25561,25568]" dest="uint256: uint256 [25611,25618]"/>
  <match src="*=: *= [41903,41905]" dest="*=: *= [42187,42189]"/>
  <match src="identifier: _transfer [27339,27348]" dest="identifier: _transfer [27389,27398]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens in existence.      */ [1643,1711]" dest="comment: /**      * @dev Returns the amount of tokens in existence.      */ [1693,1761]"/>
  <match src="parameter [38180,38186]" dest="parameter [38384,38390]"/>
  <match src="call_expression [54025,54046]" dest="call_expression [59417,59438]"/>
  <match src="call_argument [52002,52063]" dest="call_argument [57130,57191]"/>
  <match src="): ) [45712,45713]" dest="): ) [47420,47421]"/>
  <match src="true: true [28974,28978]" dest="true: true [29024,29028]"/>
  <match src="type_name [20529,20533]" dest="type_name [20579,20583]"/>
  <match src="call_argument [51700,51712]" dest="call_argument [56670,56682]"/>
  <match src="number_literal: 10000 [53970,53975]" dest="number_literal: 10000 [59362,59367]"/>
  <match src="visibility [36709,36717]" dest="visibility [36913,36921]"/>
  <match src="visibility [23637,23644]" dest="visibility [23687,23694]"/>
  <match src="): ) [37419,37420]" dest="): ) [37623,37624]"/>
  <match src="call_argument [16800,16804]" dest="call_argument [16850,16854]"/>
  <match src="identifier: neededAmount [49326,49338]" dest="identifier: neededAmount [54577,54589]"/>
  <match src="yul_identifier [18209,18224]" dest="yul_identifier [18259,18274]"/>
  <match src="visibility [55380,55388]" dest="visibility [60809,60817]"/>
  <match src="constructor_definition [6052,6117]" dest="constructor_definition [6102,6167]"/>
  <match src="type_cast_expression [50753,50766]" dest="type_cast_expression [55723,55736]"/>
  <match src="return_statement [17365,17430]" dest="return_statement [17415,17480]"/>
  <match src="): ) [61625,61626]" dest="): ) [67874,67875]"/>
  <match src="type_name [17202,17208]" dest="type_name [17252,17258]"/>
  <match src=".: . [52385,52386]" dest=".: . [57704,57705]"/>
  <match src=".: . [17981,17982]" dest=".: . [18031,18032]"/>
  <match src="}: } [6957,6958]" dest="}: } [7007,7008]"/>
  <match src="uint256: uint256 [17512,17519]" dest="uint256: uint256 [17562,17569]"/>
  <match src="address: address [56526,56533]" dest="address: address [61973,61980]"/>
  <match src="uint256: uint256 [46199,46206]" dest="uint256: uint256 [47907,47914]"/>
  <match src="comment: /**      * @dev join pool      * 1. Transfer TUSD from sender      * 2. Only lending pool should be allowed to call this      */ [38811,38943]" dest="comment: /**      * @dev join pool      * 1. Transfer TUSD from sender      * 2. Only lending pool should be allowed to call this      */ [39095,39227]"/>
  <match src="primitive_type [2552,2559]" dest="primitive_type [2602,2609]"/>
  <match src="variable_declaration [51613,51651]" dest="variable_declaration [56583,56621]"/>
  <match src="(: ( [37555,37556]" dest="(: ( [37759,37760]"/>
  <match src="parameter [1763,1770]" dest="parameter [1813,1820]"/>
  <match src="(: ( [37589,37590]" dest="(: ( [37793,37794]"/>
  <match src="identifier: curve [60995,61000]" dest="identifier: curve [67244,67249]"/>
  <match src="identifier: require [10939,10946]" dest="identifier: require [10989,10996]"/>
  <match src=".: . [19405,19406]" dest=".: . [19455,19456]"/>
  <match src="number_literal: 0 [34626,34627]" dest="number_literal: 0 [34830,34831]"/>
  <match src="number_literal: 10000 [54103,54108]" dest="number_literal: 10000 [59495,59500]"/>
  <match src="true [28974,28978]" dest="true [29024,29028]"/>
  <match src="type_name [31950,31957]" dest="type_name [32000,32007]"/>
  <match src="parameter [3307,3321]" dest="parameter [3357,3371]"/>
  <match src="(: ( [46175,46176]" dest="(: ( [47883,47884]"/>
  <match src="parameter [16106,16123]" dest="parameter [16156,16173]"/>
  <match src="primitive_type [34618,34625]" dest="primitive_type [34822,34829]"/>
  <match src="member_expression [52002,52025]" dest="member_expression [57130,57153]"/>
  <match src="variable_declaration_statement [17733,17812]" dest="variable_declaration_statement [17783,17862]"/>
  <match src=",: , [4212,4213]" dest=",: , [4262,4263]"/>
  <match src="call_argument [59934,59942]" dest="call_argument [65118,65126]"/>
  <match src="(: ( [3686,3687]" dest="(: ( [3736,3737]"/>
  <match src="): ) [28944,28945]" dest="): ) [28994,28995]"/>
  <match src="external: external [36966,36974]" dest="external: external [37170,37178]"/>
  <match src="boolean_literal [28974,28978]" dest="boolean_literal [29024,29028]"/>
  <match src="primitive_type [39513,39520]" dest="primitive_type [39797,39804]"/>
  <match src="identifier: add [29979,29982]" dest="identifier: add [30029,30032]"/>
  <match src="): ) [28872,28873]" dest="): ) [28922,28923]"/>
  <match src="(: ( [56208,56209]" dest="(: ( [61646,61647]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11714,12185]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11764,12235]"/>
  <match src="call_argument [51298,51330]" dest="call_argument [56268,56300]"/>
  <match src="solidity_version:  0.6.10 [42516,42523]" dest="solidity_version:  0.6.10 [43082,43089]"/>
  <match src="(: ( [54372,54373]" dest="(: ( [59764,59765]"/>
  <match src="identifier: fee [57668,57671]" dest="identifier: fee [62834,62837]"/>
  <match src="+=: += [41200,41202]" dest="+=: += [41484,41486]"/>
  <match src="if_statement [53236,53489]" dest="if_statement [58628,58881]"/>
  <match src="type_name [37590,37597]" dest="type_name [37794,37801]"/>
  <match src="number_literal: 0 [32051,32052]" dest="number_literal: 0 [32101,32102]"/>
  <match src="return: return [9713,9719]" dest="return: return [9763,9769]"/>
  <match src="identifier: symbol [24324,24330]" dest="identifier: symbol [24374,24380]"/>
  <match src="user_defined_type [43890,43895]" dest="user_defined_type [44637,44642]"/>
  <match src="}: } [6116,6117]" dest="}: } [6166,6167]"/>
  <match src="call_argument [56534,56544]" dest="call_argument [61981,61991]"/>
  <match src="call_expression [53871,53884]" dest="call_expression [59263,59276]"/>
  <match src="=: = [6008,6009]" dest="=: = [6058,6059]"/>
  <match src="function_body [53847,54230]" dest="function_body [59239,59622]"/>
  <match src=",: , [37377,37378]" dest=",: , [37581,37582]"/>
  <match src="(: ( [58337,58338]" dest="(: ( [63503,63504]"/>
  <match src="type_name [28760,28764]" dest="type_name [28810,28814]"/>
  <match src="): ) [56450,56451]" dest="): ) [61897,61898]"/>
  <match src="function: function [3665,3673]" dest="function: function [3715,3723]"/>
  <match src="indexed: indexed [3984,3991]" dest="indexed: indexed [4034,4041]"/>
  <match src="member_expression [53588,53598]" dest="member_expression [58980,58990]"/>
  <match src="type_name [10846,10853]" dest="type_name [10896,10903]"/>
  <match src=".: . [47029,47030]" dest=".: . [48988,48989]"/>
  <match src="(: ( [17733,17734]" dest="(: ( [17783,17784]"/>
  <match src="identifier: claimableFees [44542,44555]" dest="identifier: claimableFees [45289,45302]"/>
  <match src="hours: hours [59999,60004]" dest="hours: hours [65183,65188]"/>
  <match src="[: [ [26375,26376]" dest="[: [ [26425,26426]"/>
  <match src="emit_statement [50789,50835]" dest="emit_statement [62802,62839]"/>
  <match src="parenthesized_expression [18376,18390]" dest="parenthesized_expression [18426,18440]"/>
  <match src=".: . [57230,57231]" dest=".: . [62553,62554]"/>
  <match src="contract_body [40387,42446]" dest="contract_body [40671,42730]"/>
  <match src="identifier: target [17160,17166]" dest="identifier: target [17210,17216]"/>
  <match src="[: [ [60914,60915]" dest="[: [ [67163,67164]"/>
  <match src="returns: returns [19115,19122]" dest="returns: returns [19165,19172]"/>
  <match src="(: ( [28887,28888]" dest="(: ( [28937,28938]"/>
  <match src="visibility [37389,37397]" dest="visibility [37593,37601]"/>
  <match src="return: return [54939,54945]" dest="return: return [60368,60374]"/>
  <match src="call_argument [10947,10952]" dest="call_argument [10997,11002]"/>
  <match src=",: , [17746,17747]" dest=",: , [17796,17797]"/>
  <match src="call_argument [48816,48831]" dest="call_argument [53744,53756]"/>
  <match src="(: ( [55886,55887]" dest="(: ( [61324,61325]"/>
  <match src="type_name [21601,21608]" dest="type_name [21651,21658]"/>
  <match src="function: function [36857,36865]" dest="function: function [37061,37069]"/>
  <match src="): ) [53276,53277]" dest="): ) [58668,58669]"/>
  <match src="(: ( [1918,1919]" dest="(: ( [1968,1969]"/>
  <match src="binary_expression [57140,57174]" dest="binary_expression [62479,62505]"/>
  <match src="&gt;=: &gt;= [41234,41236]" dest="&gt;=: &gt;= [41518,41520]"/>
  <match src="parameter [8392,8401]" dest="parameter [8442,8451]"/>
  <match src="parameter [31055,31070]" dest="parameter [31105,31120]"/>
  <match src="identifier: _msgSender [34540,34550]" dest="identifier: _msgSender [34744,34754]"/>
  <match src="identifier: _approve [27386,27394]" dest="identifier: _approve [27436,27444]"/>
  <match src="[: [ [26368,26369]" dest="[: [ [26418,26419]"/>
  <match src="expression_statement [49621,49638]" dest="expression_statement [54872,54889]"/>
  <match src="indexed: indexed [4222,4229]" dest="indexed: indexed [4272,4279]"/>
  <match src="primitive_type [39163,39170]" dest="primitive_type [39447,39454]"/>
  <match src="=: = [20933,20934]" dest="=: = [20983,20984]"/>
  <match src="augmented_assignment_expression [41988,42013]" dest="augmented_assignment_expression [42272,42297]"/>
  <match src="identifier: div [54900,54903]" dest="identifier: div [60329,60332]"/>
  <match src="type_cast_expression [31431,31441]" dest="type_cast_expression [31481,31491]"/>
  <match src="assignment_expression [47240,47264]" dest="assignment_expression [49199,49223]"/>
  <match src="{: { [61570,61571]" dest="{: { [67819,67820]"/>
  <match src="call_argument [35470,35480]" dest="call_argument [35674,35684]"/>
  <match src="expression_statement [27386,27508]" dest="expression_statement [27436,27558]"/>
  <match src="primitive_type [30425,30432]" dest="primitive_type [30475,30482]"/>
  <match src=".: . [50492,50493]" dest=".: . [68388,68389]"/>
  <match src="inheritance_specifier [23528,23534]" dest="inheritance_specifier [23578,23584]"/>
  <match src="assembly_statement [13495,13536]" dest="assembly_statement [13545,13586]"/>
  <match src="identifier: __currencyToken [46843,46858]" dest="identifier: __currencyToken [48737,48752]"/>
  <match src="return: return [12337,12343]" dest="return: return [12387,12393]"/>
  <match src="): ) [39621,39622]" dest="): ) [39905,39906]"/>
  <match src="function: function [40983,40991]" dest="function: function [41267,41275]"/>
  <match src="call_argument [28122,28132]" dest="call_argument [28172,28182]"/>
  <match src="type_name [4239,4246]" dest="type_name [4289,4296]"/>
  <match src="}: } [12359,12360]" dest="}: } [12409,12410]"/>
  <match src=".: . [57575,57576]" dest=".: . [62750,62751]"/>
  <match src="): ) [48483,48484]" dest="): ) [53344,53345]"/>
  <match src="event: event [46384,46389]" dest="event: event [48092,48097]"/>
  <match src="call_argument [17608,17626]" dest="call_argument [17658,17676]"/>
  <match src="call_expression [48074,48110]" dest="call_expression [52420,52456]"/>
  <match src="returns: returns [36177,36184]" dest="returns: returns [36381,36388]"/>
  <match src="primitive_type [54057,54064]" dest="primitive_type [59449,59456]"/>
  <match src="call_argument [31124,31145]" dest="call_argument [31174,31195]"/>
  <match src="identifier: approve [55630,55637]" dest="identifier: approve [61068,61075]"/>
  <match src="call_argument [50286,50289]" dest="call_argument [55556,55559]"/>
  <match src="override_specifier [56937,56945]" dest="override_specifier [62370,62378]"/>
  <match src="): ) [36633,36634]" dest="): ) [36837,36838]"/>
  <match src="+: + [7996,7997]" dest="+: + [8046,8047]"/>
  <match src="=: = [54082,54083]" dest="=: = [59474,59475]"/>
  <match src="bytes: bytes [16738,16743]" dest="bytes: bytes [16788,16793]"/>
  <match src=",: , [60948,60949]" dest=",: , [67197,67198]"/>
  <match src="expression_statement [21012,21033]" dest="expression_statement [21062,21083]"/>
  <match src="uint256: uint256 [4239,4246]" dest="uint256: uint256 [4289,4296]"/>
  <match src="(: ( [51664,51665]" dest="(: ( [56634,56635]"/>
  <match src="call_expression [58194,58264]" dest="call_expression [63360,63430]"/>
  <match src="type_name [51451,51458]" dest="type_name [56421,56428]"/>
  <match src="function: function [61511,61519]" dest="function: function [67760,67768]"/>
  <match src="function: function [13147,13155]" dest="function: function [13197,13205]"/>
  <match src="yul_path [18295,18310]" dest="yul_path [18345,18360]"/>
  <match src="call_expression [47305,47361]" dest="call_expression [66016,66066]"/>
  <match src="if: if [41494,41496]" dest="if: if [41778,41780]"/>
  <match src=",: , [47347,47348]" dest=",: , [66055,66056]"/>
  <match src="}: } [24515,24516]" dest="}: } [24565,24566]"/>
  <match src="primitive_type [45980,45987]" dest="primitive_type [47688,47695]"/>
  <match src="call_argument [54121,54127]" dest="call_argument [59513,59519]"/>
  <match src=",: , [32134,32135]" dest=",: , [32184,32185]"/>
  <match src="identifier: msg [53204,53207]" dest="identifier: msg [58596,58599]"/>
  <match src="(: ( [48283,48284]" dest="(: ( [52778,52779]"/>
  <match src="returns: returns [15731,15738]" dest="returns: returns [15781,15788]"/>
  <match src="&lt;=: &lt;= [57292,57294]" dest="&lt;=: &lt;= [62607,62609]"/>
  <match src="): ) [48108,48109]" dest="): ) [52454,52455]"/>
  <match src="): ) [50765,50766]" dest="): ) [55735,55736]"/>
  <match src="{: { [58703,58704]" dest="{: { [63869,63870]"/>
  <match src="override: override [56937,56945]" dest="override: override [62370,62378]"/>
  <match src="type_name [50146,50153]" dest="type_name [55397,55404]"/>
  <match src="]: ] [60923,60924]" dest="]: ] [67172,67173]"/>
  <match src=",: , [17185,17186]" dest=",: , [17235,17236]"/>
  <match src="primitive_type [8381,8388]" dest="primitive_type [8431,8438]"/>
  <match src=",: , [10298,10299]" dest=",: , [10348,10349]"/>
  <match src="public: public [48455,48461]" dest="public: public [53316,53322]"/>
  <match src="type_name [30362,30369]" dest="type_name [30412,30419]"/>
  <match src="identifier: currencyBalance [48503,48518]" dest="identifier: currencyBalance [53364,53379]"/>
  <match src="public: public [28736,28742]" dest="public: public [28786,28792]"/>
  <match src="identifier: _functionCallWithValue [17372,17394]" dest="identifier: _functionCallWithValue [17422,17444]"/>
  <match src="identifier: spender [26283,26290]" dest="identifier: spender [26333,26340]"/>
  <match src="&lt;=: &lt;= [54687,54689]" dest="&lt;=: &lt;= [60116,60118]"/>
  <match src="interface_declaration [39094,39305]" dest="interface_declaration [39378,39589]"/>
  <match src="identifier: amount [31984,31990]" dest="identifier: amount [32034,32040]"/>
  <match src="bool: bool [37283,37287]" dest="bool: bool [37487,37491]"/>
  <match src="yul_evm_builtin [18228,18233]" dest="yul_evm_builtin [18278,18283]"/>
  <match src="identifier: yAmount [56291,56298]" dest="identifier: yAmount [61738,61745]"/>
  <match src="): ) [34639,34640]" dest="): ) [34843,34844]"/>
  <match src="}: } [53488,53489]" dest="}: } [58880,58881]"/>
  <match src=",: , [58484,58485]" dest=",: , [63650,63651]"/>
  <match src="): ) [58368,58369]" dest="): ) [63534,63535]"/>
  <match src="identifier: result [41988,41994]" dest="identifier: result [42272,42278]"/>
  <match src="function_body [32015,32278]" dest="function_body [32065,32328]"/>
  <match src="): ) [35480,35481]" dest="): ) [35684,35685]"/>
  <match src="(: ( [56673,56674]" dest="(: ( [62120,62121]"/>
  <match src="(: ( [54453,54454]" dest="(: ( [59845,59846]"/>
  <match src="(: ( [54120,54121]" dest="(: ( [59512,59513]"/>
  <match src="{: { [51134,51135]" dest="{: { [56104,56105]"/>
  <match src="): ) [1738,1739]" dest="): ) [1788,1789]"/>
  <match src="variable_declaration [51451,51483]" dest="variable_declaration [56421,56453]"/>
  <match src="identifier: sender [29843,29849]" dest="identifier: sender [29893,29899]"/>
  <match src="identifier: latestJoinBlock [51169,51184]" dest="identifier: latestJoinBlock [56139,56154]"/>
  <match src="view: view [61547,61551]" dest="view: view [67796,67800]"/>
  <match src="identifier: mul [60816,60819]" dest="identifier: mul [67065,67068]"/>
  <match src=":=: := [18225,18227]" dest=":=: := [18275,18277]"/>
  <match src="): ) [57671,57672]" dest="): ) [55803,55804]"/>
  <match src="identifier: lv [54025,54027]" dest="identifier: lv [59417,59419]"/>
  <match src="variable_declaration [50301,50321]" dest="variable_declaration [56741,56775]"/>
  <match src="private: private [20534,20541]" dest="private: private [20584,20591]"/>
  <match src="): ) [35881,35882]" dest="): ) [36085,36086]"/>
  <match src="parameter [61561,61568]" dest="parameter [67810,67817]"/>
  <match src="expression_statement [56566,56650]" dest="expression_statement [62013,62097]"/>
  <match src="call_argument [58770,58774]" dest="call_argument [63936,63940]"/>
  <match src="): ) [60871,60872]" dest="): ) [67120,67121]"/>
  <match src="public: public [53817,53823]" dest="public: public [59209,59215]"/>
  <match src="identifier: require [54674,54681]" dest="identifier: require [60103,60110]"/>
  <match src="primitive_type [14553,14560]" dest="primitive_type [14603,14610]"/>
  <match src=".: . [54994,54995]" dest=".: . [60423,60424]"/>
  <match src="type_name [4191,4198]" dest="type_name [4241,4248]"/>
  <match src="identifier: initializer [24268,24279]" dest="identifier: initializer [24318,24329]"/>
  <match src="user_defined_type [43897,43912]" dest="user_defined_type [44644,44659]"/>
  <match src=",: , [27415,27416]" dest=",: , [27465,27466]"/>
  <match src="{: { [31105,31106]" dest="{: { [31155,31156]"/>
  <match src="(: ( [34625,34626]" dest="(: ( [34829,34830]"/>
  <match src="solidity: solidity [42508,42516]" dest="solidity: solidity [43074,43082]"/>
  <match src="if_statement [17822,18417]" dest="if_statement [17872,18467]"/>
  <match src="using: using [23575,23580]" dest="using: using [23625,23630]"/>
  <match src="modifier_invocation [59812,59821]" dest="modifier_invocation [64987,65005]"/>
  <match src="primitive_type [27973,27980]" dest="primitive_type [28023,28030]"/>
  <match src=",: , [29636,29637]" dest=",: , [29686,29687]"/>
  <match src="member_expression [58988,59000]" dest="member_expression [64163,64175]"/>
  <match src="virtual: virtual [28017,28024]" dest="virtual: virtual [28067,28074]"/>
  <match src="=&gt;: =&gt; [23625,23627]" dest="=&gt;: =&gt; [23675,23677]"/>
  <match src="): ) [48284,48285]" dest="): ) [52779,52780]"/>
  <match src="function_definition [56862,57680]" dest="function_definition [62316,62846]"/>
  <match src="]: ] [37098,37099]" dest="]: ] [37302,37303]"/>
  <match src="function: function [36749,36757]" dest="function: function [36953,36961]"/>
  <match src="identifier: origin [52736,52742]" dest="identifier: origin [58128,58134]"/>
  <match src="identifier: errorMessage [17544,17556]" dest="identifier: errorMessage [17594,17606]"/>
  <match src="): ) [28734,28735]" dest="): ) [28784,28785]"/>
  <match src="member_expression [48026,48073]" dest="member_expression [52372,52419]"/>
  <match src="expression_statement [47022,47043]" dest="expression_statement [48981,49002]"/>
  <match src="(: ( [12203,12204]" dest="(: ( [12253,12254]"/>
  <match src="expression_statement [41196,41206]" dest="expression_statement [41480,41490]"/>
  <match src="(: ( [61381,61382]" dest="(: ( [67630,67631]"/>
  <match src="emit_statement [57628,57673]" dest="emit_statement [55759,55805]"/>
  <match src="(: ( [26088,26089]" dest="(: ( [26138,26139]"/>
  <match src="call_argument [31443,31449]" dest="call_argument [31493,31499]"/>
  <match src="uint256: uint256 [45996,46003]" dest="uint256: uint256 [47704,47711]"/>
  <match src="string: string [8842,8848]" dest="string: string [8892,8898]"/>
  <match src=".: . [55824,55825]" dest=".: . [61262,61263]"/>
  <match src="return_statement [13546,13562]" dest="return_statement [13596,13612]"/>
  <match src=",: , [51296,51297]" dest=",: , [56266,56267]"/>
  <match src="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [30057,30324]" dest="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [30107,30374]"/>
  <match src="state_mutability [37511,37515]" dest="state_mutability [37715,37719]"/>
  <match src="): ) [24651,24652]" dest="): ) [24701,24702]"/>
  <match src="identifier: weiValue [17520,17528]" dest="identifier: weiValue [17570,17578]"/>
  <match src="view: view [25547,25551]" dest="view: view [25597,25601]"/>
  <match src="return_statement [26350,26385]" dest="return_statement [26400,26435]"/>
  <match src="expression_statement [41900,41909]" dest="expression_statement [42184,42193]"/>
  <match src="return: return [61341,61347]" dest="return: return [67590,67596]"/>
  <match src="&gt;: &gt; [13558,13559]" dest="&gt;: &gt; [13608,13609]"/>
  <match src="identifier: require [50705,50712]" dest="identifier: require [55675,55682]"/>
  <match src=",: , [30515,30516]" dest=",: , [30565,30566]"/>
  <match src="(: ( [49227,49228]" dest="(: ( [54478,54479]"/>
  <match src="identifier: Borrow [45955,45961]" dest="identifier: Borrow [47663,47669]"/>
  <match src="identifier: initializing [20542,20554]" dest="identifier: initializing [20592,20604]"/>
  <match src="int128: int128 [40692,40698]" dest="int128: int128 [40976,40982]"/>
  <match src="=: = [41088,41089]" dest="=: = [41372,41373]"/>
  <match src="): ) [35398,35399]" dest="): ) [35602,35603]"/>
  <match src="): ) [54993,54994]" dest="): ) [60422,60423]"/>
  <match src="type_alias [23548,23556]" dest="type_alias [23598,23606]"/>
  <match src="identifier: JoiningFeeChanged [49653,49670]" dest="identifier: JoiningFeeChanged [54904,54921]"/>
  <match src="using: using [43929,43934]" dest="using: using [44676,44681]"/>
  <match src=".: . [14610,14611]" dest=".: . [14660,14661]"/>
  <match src="identifier: number [52707,52713]" dest="identifier: number [58099,58105]"/>
  <match src=".: . [29870,29871]" dest=".: . [29920,29921]"/>
  <match src="call_argument [54893,54898]" dest="call_argument [60322,60327]"/>
  <match src="return_statement [26689,26701]" dest="return_statement [26739,26751]"/>
  <match src="(: ( [57721,57722]" dest="(: ( [62887,62888]"/>
  <match src=",: , [31070,31071]" dest=",: , [31120,31121]"/>
  <match src="call_argument [57935,57975]" dest="call_argument [63101,63141]"/>
  <match src="parameter [37023,37029]" dest="parameter [37227,37233]"/>
  <match src="member_expression [47372,47398]" dest="member_expression [66077,66112]"/>
  <match src="call_argument [53318,53357]" dest="call_argument [58710,58749]"/>
  <match src="primitive_type [2194,2201]" dest="primitive_type [2244,2251]"/>
  <match src="}: } [42024,42025]" dest="}: } [42308,42309]"/>
  <match src=",: , [51865,51866]" dest=",: , [56993,56994]"/>
  <match src="{: { [41593,41594]" dest="{: { [41877,41878]"/>
  <match src="): ) [20870,20871]" dest="): ) [20920,20921]"/>
  <match src="int256: int256 [41728,41734]" dest="int256: int256 [42012,42018]"/>
  <match src="): ) [1926,1927]" dest="): ) [1976,1977]"/>
  <match src="member_expression [58295,58383]" dest="member_expression [63461,63549]"/>
  <match src="identifier: previousOwner [34318,34331]" dest="identifier: previousOwner [34522,34535]"/>
  <match src="yul_identifier [18282,18292]" dest="yul_identifier [18332,18342]"/>
  <match src="returns: returns [8884,8891]" dest="returns: returns [8934,8941]"/>
  <match src="binary_expression [41744,41760]" dest="binary_expression [42028,42044]"/>
  <match src="call_argument [27368,27374]" dest="call_argument [27418,27424]"/>
  <match src="primitive_type [5974,5981]" dest="primitive_type [6024,6031]"/>
  <match src="identifier: mul [51493,51496]" dest="identifier: mul [56463,56466]"/>
  <match src="address: address [31055,31062]" dest="address: address [31105,31112]"/>
  <match src="number_literal: 0 [49981,49982]" dest="number_literal: 0 [55232,55233]"/>
  <match src=",: , [6635,6636]" dest=",: , [6685,6686]"/>
  <match src="user_defined_type [37469,37475]" dest="user_defined_type [37673,37679]"/>
  <match src="identifier: yTokenBalance [56302,56315]" dest="identifier: yTokenBalance [61749,61762]"/>
  <match src="function_definition [29476,30049]" dest="function_definition [29526,30099]"/>
  <match src="false [58486,58491]" dest="false [63652,63657]"/>
  <match src="parameter [15703,15720]" dest="parameter [15753,15770]"/>
  <match src=".: . [51158,51159]" dest=".: . [56128,56129]"/>
  <match src="number_literal: 16 [41361,41363]" dest="number_literal: 16 [41645,41647]"/>
  <match src="modifier_invocation [34497,34508]" dest="modifier_invocation [34701,34712]"/>
  <match src="(: ( [25528,25529]" dest="(: ( [25578,25579]"/>
  <match src="variable_declaration_statement [21601,21612]" dest="variable_declaration_statement [21651,21662]"/>
  <match src="(: ( [47823,47824]" dest="(: ( [50652,50653]"/>
  <match src="public: public [54633,54639]" dest="public: public [60062,60068]"/>
  <match src="call_expression [56283,56370]" dest="call_expression [61730,61817]"/>
  <match src="call_expression [47372,47432]" dest="call_expression [66077,66184]"/>
  <match src="): ) [58791,58792]" dest="): ) [63957,63958]"/>
  <match src="(: ( [56525,56526]" dest="(: ( [61972,61973]"/>
  <match src="type_name [52892,52899]" dest="type_name [58284,58291]"/>
  <match src="(: ( [49948,49949]" dest="(: ( [55199,55200]"/>
  <match src="true: true [61031,61035]" dest="true: true [67280,67284]"/>
  <match src=".: . [54460,54461]" dest=".: . [59852,59853]"/>
  <match src="(: ( [28785,28786]" dest="(: ( [28835,28836]"/>
  <match src="identifier: yAmounts [60932,60940]" dest="identifier: yAmounts [67181,67189]"/>
  <match src="identifier: x [42285,42286]" dest="identifier: x [42569,42570]"/>
  <match src="call_argument [60820,60824]" dest="call_argument [67069,67073]"/>
  <match src="identifier: errorMessage [10882,10894]" dest="identifier: errorMessage [10932,10944]"/>
  <match src="string [30437,30470]" dest="string [30487,30520]"/>
  <match src="mapping: mapping [23609,23616]" dest="mapping: mapping [23659,23666]"/>
  <match src="identifier: decimals [25369,25377]" dest="identifier: decimals [25419,25427]"/>
  <match src=".: . [54038,54039]" dest=".: . [59430,59431]"/>
  <match src="identifier: bit [41865,41868]" dest="identifier: bit [42149,42152]"/>
  <match src="uint256: uint256 [49114,49121]" dest="uint256: uint256 [54365,54372]"/>
  <match src="for: for [23589,23592]" dest="for: for [23639,23642]"/>
  <match src="variable_declaration_statement [50191,50239]" dest="variable_declaration_statement [55459,55507]"/>
  <match src="identifier: _curvePool [47055,47065]" dest="identifier: _curvePool [49014,49024]"/>
  <match src="primitive_type [37089,37096]" dest="primitive_type [37293,37300]"/>
  <match src="primitive_type [13167,13174]" dest="primitive_type [13217,13224]"/>
  <match src="event: event [34275,34280]" dest="event: event [34479,34484]"/>
  <match src="primitive_type [8392,8399]" dest="primitive_type [8442,8449]"/>
  <match src=",: , [28709,28710]" dest=",: , [28759,28760]"/>
  <match src=",: , [58775,58776]" dest=",: , [63941,63942]"/>
  <match src="(: ( [47227,47228]" dest="(: ( [49186,49187]"/>
  <match src="identifier: amount [52813,52819]" dest="identifier: amount [58205,58211]"/>
  <match src="memory: memory [17254,17260]" dest="memory: memory [17304,17310]"/>
  <match src="): ) [53946,53947]" dest="): ) [59338,59339]"/>
  <match src="(: ( [37499,37500]" dest="(: ( [37703,37704]"/>
  <match src="returns: returns [61312,61319]" dest="returns: returns [67561,67568]"/>
  <match src="=: = [47142,47143]" dest="=: = [49101,49102]"/>
  <match src="pure: pure [10249,10253]" dest="pure: pure [10299,10303]"/>
  <match src="primitive_type [38768,38775]" dest="primitive_type [39065,39072]"/>
  <match src=".: . [59984,59985]" dest=".: . [65168,65169]"/>
  <match src="type_name [8392,8399]" dest="type_name [8442,8449]"/>
  <match src="identifier: data [16800,16804]" dest="identifier: data [16850,16854]"/>
  <match src="call_argument [59944,59956]" dest="call_argument [65128,65140]"/>
  <match src="visibility [35400,35406]" dest="visibility [35604,35610]"/>
  <match src="function_body [24689,24722]" dest="function_body [24739,24772]"/>
  <match src="event_paramater [45337,45359]" dest="event_paramater [47045,47067]"/>
  <match src="): ) [54350,54351]" dest="): ) [59742,59743]"/>
  <match src="]: ] [30634,30635]" dest="]: ] [30684,30685]"/>
  <match src="(: ( [12304,12305]" dest="(: ( [12354,12355]"/>
  <match src="): ) [58491,58492]" dest="): ) [63657,63658]"/>
  <match src="primitive_type [44583,44590]" dest="primitive_type [45330,45337]"/>
  <match src="type_name [17748,17753]" dest="type_name [17798,17803]"/>
  <match src="returns: returns [1754,1761]" dest="returns: returns [1804,1811]"/>
  <match src="returns: returns [36723,36730]" dest="returns: returns [36927,36934]"/>
  <match src="call_argument [58365,58368]" dest="call_argument [63531,63534]"/>
  <match src="type_name [31926,31933]" dest="type_name [31976,31983]"/>
  <match src="): ) [58239,58240]" dest="): ) [63405,63406]"/>
  <match src="(: ( [26647,26648]" dest="(: ( [26697,26698]"/>
  <match src="string_literal [53420,53476]" dest="string_literal [58812,58868]"/>
  <match src="returns: returns [42302,42309]" dest="returns: returns [42586,42593]"/>
  <match src="string [29722,29759]" dest="string [29772,29809]"/>
  <match src="identifier: _decimals [24341,24350]" dest="identifier: _decimals [24391,24400]"/>
  <match src="}: } [57380,57381]" dest="}: } [62695,62696]"/>
  <match src="call_argument [14835,14895]" dest="call_argument [14885,14945]"/>
  <match src="identifier: b [41931,41932]" dest="identifier: b [42215,42216]"/>
  <match src="): ) [34627,34628]" dest="): ) [34831,34832]"/>
  <match src="function_body [54663,55020]" dest="function_body [60092,60449]"/>
  <match src="): ) [8495,8496]" dest="): ) [8545,8546]"/>
  <match src="parameter [37556,37565]" dest="parameter [37760,37769]"/>
  <match src="): ) [26127,26128]" dest="): ) [26177,26178]"/>
  <match src=".: . [47569,47570]" dest=".: . [49454,49455]"/>
  <match src="number_literal: 0 [31439,31440]" dest="number_literal: 0 [31489,31490]"/>
  <match src="): ) [51779,51780]" dest="): ) [56907,56908]"/>
  <match src="type_name [60150,60157]" dest="type_name [66329,66336]"/>
  <match src="number_literal: 0 [35478,35479]" dest="number_literal: 0 [35682,35683]"/>
  <match src="(: ( [25377,25378]" dest="(: ( [25427,25428]"/>
  <match src="return: return [10283,10289]" dest="return: return [10333,10339]"/>
  <match src="function: function [8807,8815]" dest="function: function [8857,8865]"/>
  <match src="comment: // Any calls to nonReentrant after this point will fail [6684,6739]" dest="comment: // Any calls to nonReentrant after this point will fail [6734,6789]"/>
  <match src="&quot;: &quot; [57977,57978]" dest="&quot;: &quot; [63143,63144]"/>
  <match src="function_body [17262,17437]" dest="function_body [17312,17487]"/>
  <match src="function_definition [17445,18424]" dest="function_definition [17495,18474]"/>
  <match src="number_literal: 4 [44719,44720]" dest="number_literal: 4 [45946,45947]"/>
  <match src="primitive_type [50301,50308]" dest="primitive_type [56741,56748]"/>
  <match src="modifier_invocation [46941,46952]" dest="modifier_invocation [48900,48911]"/>
  <match src="=: = [50680,50681]" dest="=: = [55650,55651]"/>
  <match src="external: external [58958,58966]" dest="external: external [64124,64132]"/>
  <match src="type_cast_expression [29710,29720]" dest="type_cast_expression [29760,29770]"/>
  <match src="identifier: amount [53809,53815]" dest="identifier: amount [59201,59207]"/>
  <match src="type_name [44366,44378]" dest="type_name [45113,45125]"/>
  <match src="type_name [37254,37261]" dest="type_name [37458,37465]"/>
  <match src="): ) [52345,52346]" dest="): ) [57473,57474]"/>
  <match src="identifier: approve [59849,59856]" dest="identifier: approve [65033,65040]"/>
  <match src="identifier: __curveGauge [46813,46825]" dest="identifier: __curveGauge [48707,48719]"/>
  <match src="call_argument [31234,31235]" dest="call_argument [31284,31285]"/>
  <match src="override_specifier [25714,25722]" dest="override_specifier [25764,25772]"/>
  <match src=",: , [56545,56546]" dest=",: , [61992,61993]"/>
  <match src="parameter [31072,31086]" dest="parameter [31122,31136]"/>
  <match src=",: , [33376,33377]" dest=",: , [33426,33427]"/>
  <match src="number_literal: 0 [49858,49859]" dest="number_literal: 0 [55109,55110]"/>
  <match src="uint256: uint256 [41798,41805]" dest="uint256: uint256 [42082,42089]"/>
  <match src="string [52846,52878]" dest="string [58238,58270]"/>
  <match src="return: return [26350,26356]" dest="return: return [26400,26406]"/>
  <match src="&quot;: &quot; [16855,16856]" dest="&quot;: &quot; [16905,16906]"/>
  <match src="primitive_type [31976,31983]" dest="primitive_type [32026,32033]"/>
  <match src="call_expression [55806,55824]" dest="call_expression [61244,61262]"/>
  <match src="binary_expression [20695,20742]" dest="binary_expression [20745,20792]"/>
  <match src="identifier: token [49202,49207]" dest="identifier: token [54453,54458]"/>
  <match src="(: ( [37022,37023]" dest="(: ( [37226,37227]"/>
  <match src="emit_statement [60380,60416]" dest="emit_statement [66568,66604]"/>
  <match src="type_name [49156,49163]" dest="type_name [54407,54414]"/>
  <match src="expression_statement [35011,35013]" dest="expression_statement [35215,35217]"/>
  <match src="uint256: uint256 [11634,11641]" dest="uint256: uint256 [11684,11691]"/>
  <match src="expression_statement [26639,26679]" dest="expression_statement [26689,26729]"/>
  <match src="comment: /**      * @dev Exit pool      * This function will withdraw a basket of currencies backing the pool value      * @param amount amount of pool tokens to redeem for underlying tokens      */ [50874,51067]" dest="comment: /**      * @dev Exit pool      * This function will withdraw a basket of currencies backing the pool value      * @param amount amount of pool tokens to redeem for underlying tokens      */ [55844,56037]"/>
  <match src="return_type_definition [2583,2600]" dest="return_type_definition [2633,2650]"/>
  <match src=",: , [43895,43896]" dest=",: , [44642,44643]"/>
  <match src="): ) [12252,12253]" dest="): ) [12302,12303]"/>
  <match src="type_name [11634,11641]" dest="type_name [11684,11691]"/>
  <match src="binary_expression [9628,9633]" dest="binary_expression [9678,9683]"/>
  <match src="member_expression [50682,50694]" dest="member_expression [55652,55664]"/>
  <match src="(: ( [4190,4191]" dest="(: ( [4240,4241]"/>
  <match src="if: if [20977,20979]" dest="if: if [21027,21029]"/>
  <match src="binary_expression [29697,29720]" dest="binary_expression [29747,29770]"/>
  <match src="=: = [55545,55546]" dest="=: = [60983,60984]"/>
  <match src="(: ( [61282,61283]" dest="(: ( [67531,67532]"/>
  <match src="call_expression [17608,17626]" dest="call_expression [17658,17676]"/>
  <match src="virtual: virtual [27296,27303]" dest="virtual: virtual [27346,27353]"/>
  <match src="address: address [29626,29633]" dest="address: address [29676,29683]"/>
  <match src="call_expression [57216,57253]" dest="call_expression [62547,62576]"/>
  <match src="expression_statement [32105,32174]" dest="expression_statement [32155,32224]"/>
  <match src="identifier: minCurrencyAmount [56624,56641]" dest="identifier: minCurrencyAmount [62071,62088]"/>
  <match src="comment: // Dependency file: contracts/truefi/interface/ITrueFiPool.sol [37608,37670]" dest="comment: // Dependency file: contracts/truefi/interface/ITrueFiPool.sol [37812,37874]"/>
  <match src="): ) [58358,58359]" dest="): ) [63524,63525]"/>
  <match src="uint256: uint256 [61561,61568]" dest="uint256: uint256 [67810,67817]"/>
  <match src="): ) [9323,9324]" dest="): ) [9373,9374]"/>
  <match src=".: . [60872,60873]" dest=".: . [67121,67122]"/>
  <match src=",: , [30524,30525]" dest=",: , [30574,30575]"/>
  <match src="returns: returns [24461,24468]" dest="returns: returns [24511,24518]"/>
  <match src="modifier_invocation [56262,56271]" dest="modifier_invocation [51255,51264]"/>
  <match src="comment: // Reserved storage space to allow for layout changes in the future. [21720,21788]" dest="comment: // Reserved storage space to allow for layout changes in the future. [21770,21838]"/>
  <match src="binary_expression [55418,55453]" dest="binary_expression [60856,60891]"/>
  <match src="identifier: fee [50286,50289]" dest="identifier: fee [55556,55559]"/>
  <match src="comment: /**      * @dev Collect CRV tokens minted by staking at gauge      */ [58859,58930]" dest="comment: /**      * @dev Collect CRV tokens minted by staking at gauge      */ [64025,64096]"/>
  <match src="for: for [23557,23560]" dest="for: for [23607,23610]"/>
  <match src="identifier: _owner [34563,34569]" dest="identifier: _owner [34767,34773]"/>
  <match src="parameter [25690,25705]" dest="parameter [25740,25755]"/>
  <match src="variable_declaration [10978,10987]" dest="variable_declaration [11028,11037]"/>
  <match src="identifier: yTokenAmount [60953,60965]" dest="identifier: yTokenAmount [67202,67214]"/>
  <match src="uint256: uint256 [59716,59723]" dest="uint256: uint256 [64891,64898]"/>
  <match src="expression_statement [20963,20965]" dest="expression_statement [21013,21015]"/>
  <match src="identifier: require [29689,29696]" dest="identifier: require [29739,29746]"/>
  <match src=".: . [50687,50688]" dest=".: . [55657,55658]"/>
  <match src="bool: bool [3756,3760]" dest="bool: bool [3806,3810]"/>
  <match src="identifier: amount [30578,30584]" dest="identifier: amount [30628,30634]"/>
  <match src="): ) [35827,35828]" dest="): ) [36031,36032]"/>
  <match src="=: = [30615,30616]" dest="=: = [30665,30666]"/>
  <match src="type_name [9316,9323]" dest="type_name [9366,9373]"/>
  <match src="call_argument [47588,47595]" dest="call_argument [49473,49480]"/>
  <match src="visibility [58958,58966]" dest="visibility [64124,64132]"/>
  <match src=".: . [60325,60326]" dest=".: . [66513,66514]"/>
  <match src="address: address [19124,19131]" dest="address: address [19174,19181]"/>
  <match src="type_name [49495,49502]" dest="type_name [54746,54753]"/>
  <match src="identifier: renounceOwnership [35380,35397]" dest="identifier: renounceOwnership [35584,35601]"/>
  <match src="variable_declaration [9616,9625]" dest="variable_declaration [9666,9675]"/>
  <match src="parenthesized_expression [41744,41754]" dest="parenthesized_expression [42028,42038]"/>
  <match src="primitive_type [26330,26337]" dest="primitive_type [26380,26387]"/>
  <match src="public: public [24653,24659]" dest="public: public [24703,24709]"/>
  <match src="return_type_definition [54645,54662]" dest="return_type_definition [60074,60091]"/>
  <match src="variable_declaration_statement [10978,10996]" dest="variable_declaration_statement [11028,11046]"/>
  <match src="return_type_definition [26613,26627]" dest="return_type_definition [26663,26677]"/>
  <match src="&quot;: &quot; [14630,14631]" dest="&quot;: &quot; [14680,14681]"/>
  <match src="{: { [9569,9570]" dest="{: { [9619,9620]"/>
  <match src="&gt;=: &gt;= [41668,41670]" dest="&gt;=: &gt;= [41952,41954]"/>
  <match src="): ) [55673,55674]" dest="): ) [61111,61112]"/>
  <match src="identifier: approve [58213,58220]" dest="identifier: approve [63379,63386]"/>
  <match src="type_name [34767,34774]" dest="type_name [34971,34978]"/>
  <match src="identifier: amountIn [39494,39502]" dest="identifier: amountIn [39778,39786]"/>
  <match src=".: . [29978,29979]" dest=".: . [30028,30029]"/>
  <match src="(: ( [53933,53934]" dest="(: ( [59325,59326]"/>
  <match src="identifier: amountToWithdraw [53381,53397]" dest="identifier: amountToWithdraw [58773,58789]"/>
  <match src="comment: /**      * @dev Sell collected CRV on Uniswap      * - Selling CRV is managed by the contract owner      * - Calculations can be made off-chain and called based on market conditions      * - Need to pass path of exact pairs to go through while executing exchange      * For example, CRV -&gt; WETH -&gt; TUSD      *      * @param amountIn see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      * @param amountOutMin see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      * @param path see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      */ [59038,59683]" dest="comment: /**      * @dev Sell collected CRV on Uniswap      * - Selling CRV is managed by the contract owner      * - Calculations can be made off-chain and called based on market conditions      * - Need to pass path of exact pairs to go through while executing exchange      * For example, CRV -&gt; WETH -&gt; TUSD      *      * @param amountIn see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      * @param amountOutMin see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      * @param path see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      */ [64213,64858]"/>
  <match src="virtual: virtual [19219,19226]" dest="virtual: virtual [19269,19276]"/>
  <match src="call_argument [40768,40775]" dest="call_argument [41052,41059]"/>
  <match src="contract_declaration [43854,61657]" dest="contract_declaration [44601,68719]"/>
  <match src="): ) [30376,30377]" dest="): ) [30426,30427]"/>
  <match src="if: if [41661,41663]" dest="if: if [41945,41947]"/>
  <match src="state_mutability [36718,36722]" dest="state_mutability [36922,36926]"/>
  <match src="(: ( [32246,32247]" dest="(: ( [32296,32297]"/>
  <match src="variable_declaration [60778,60798]" dest="variable_declaration [67027,67047]"/>
  <match src="contract: contract [20286,20294]" dest="contract: contract [20336,20344]"/>
  <match src="identifier: xc [41231,41233]" dest="identifier: xc [41515,41517]"/>
  <match src="comment: /**      * @dev Calculates average penalty on interval [from; to]      */ [54498,54573]" dest="comment: /**      * @dev Emitted when stake token address      * @param token New stake token address      */ [45992,46095]"/>
  <match src="(: ( [19123,19124]" dest="(: ( [19173,19174]"/>
  <match src="identifier: amountIn [59934,59942]" dest="identifier: amountIn [65118,65126]"/>
  <match src="expression_statement [6780,6782]" dest="expression_statement [6830,6832]"/>
  <match src="): ) [8900,8901]" dest="): ) [8950,8951]"/>
  <match src="member_expression [29958,29982]" dest="member_expression [30008,30032]"/>
  <match src="call_argument [29718,29719]" dest="call_argument [29768,29769]"/>
  <match src="assignment_expression [29935,29990]" dest="assignment_expression [29985,30040]"/>
  <match src="[: [ [28094,28095]" dest="[: [ [28144,28145]"/>
  <match src="call_expression [55436,55453]" dest="call_expression [60874,60891]"/>
  <match src="emit: emit [32233,32237]" dest="emit: emit [32283,32287]"/>
  <match src="identifier: require [57927,57934]" dest="identifier: require [63093,63100]"/>
  <match src=".: . [30573,30574]" dest=".: . [30623,30624]"/>
  <match src="assignment_expression [20887,20906]" dest="assignment_expression [20937,20956]"/>
  <match src="function_definition [60660,61044]" dest="function_definition [66909,67293]"/>
  <match src="call_argument [35763,35785]" dest="call_argument [35967,35989]"/>
  <match src="override_specifier [27304,27312]" dest="override_specifier [27354,27362]"/>
  <match src="(: ( [17288,17289]" dest="(: ( [17338,17339]"/>
  <match src="view: view [19214,19218]" dest="view: view [19264,19268]"/>
  <match src="parameter [24674,24687]" dest="parameter [24724,24737]"/>
  <match src="function: function [35371,35379]" dest="function: function [35575,35583]"/>
  <match src=",: , [30691,30692]" dest=",: , [30741,30742]"/>
  <match src="identifier: require [53501,53508]" dest="identifier: require [58893,58900]"/>
  <match src="identifier: this [21585,21589]" dest="identifier: this [21635,21639]"/>
  <match src="contract_body [34237,35921]" dest="contract_body [34441,36125]"/>
  <match src="uint256: uint256 [5974,5981]" dest="uint256: uint256 [6024,6031]"/>
  <match src=",: , [51195,51196]" dest=",: , [56165,56166]"/>
  <match src="return_type_definition [15731,15753]" dest="return_type_definition [15781,15803]"/>
  <match src="): ) [55732,55733]" dest="): ) [61170,61171]"/>
  <match src="): ) [49506,49507]" dest="): ) [54757,54758]"/>
  <match src="type_name [37469,37475]" dest="type_name [37673,37679]"/>
  <match src="uint256: uint256 [50146,50153]" dest="uint256: uint256 [55397,55404]"/>
  <match src="(: ( [34485,34486]" dest="(: ( [34689,34690]"/>
  <match src="visibility [7939,7947]" dest="visibility [7989,7997]"/>
  <match src="identifier: _curvePool [55860,55870]" dest="identifier: _curvePool [61298,61308]"/>
  <match src="memory: memory [17537,17543]" dest="memory: memory [17587,17593]"/>
  <match src="member_expression [54147,54165]" dest="member_expression [59539,59557]"/>
  <match src="call_expression [51145,51246]" dest="call_expression [56115,56216]"/>
  <match src="comment: // Dependency file: contracts/truefi/common/UpgradeableOwnable.sol [33437,33503]" dest="comment: // Dependency file: contracts/truefi/common/UpgradeableOwnable.sol [33641,33707]"/>
  <match src="internal: internal [30378,30386]" dest="internal: internal [30428,30436]"/>
  <match src="}: } [9728,9729]" dest="}: } [9778,9779]"/>
  <match src="=: = [54023,54024]" dest="=: = [59415,59416]"/>
  <match src="type_name [61321,61328]" dest="type_name [67570,67577]"/>
  <match src="function: function [37429,37437]" dest="function: function [37633,37641]"/>
  <match src="identifier: Transfer [30663,30671]" dest="identifier: Transfer [30713,30721]"/>
  <match src="returns: returns [7953,7960]" dest="returns: returns [8003,8010]"/>
  <match src="variable_declaration_statement [41728,41761]" dest="variable_declaration_statement [42012,42045]"/>
  <match src="=: = [14770,14771]" dest="=: = [14820,14821]"/>
  <match src="assignment_expression [6928,6950]" dest="assignment_expression [6978,7000]"/>
  <match src="identifier: transferOwnership [35683,35700]" dest="identifier: transferOwnership [35887,35904]"/>
  <match src="identifier: mint [36946,36950]" dest="identifier: mint [37150,37154]"/>
  <match src="call_argument [49919,49920]" dest="call_argument [55170,55171]"/>
  <match src="uint256: uint256 [50249,50256]" dest="uint256: uint256 [55517,55524]"/>
  <match src="visibility [1740,1748]" dest="visibility [1790,1798]"/>
  <match src="identifier: value [17306,17311]" dest="identifier: value [17356,17361]"/>
  <match src=",: , [28812,28813]" dest=",: , [28862,28863]"/>
  <match src="function_definition [37066,37150]" dest="function_definition [37270,37354]"/>
  <match src="identifier: pv [54043,54045]" dest="identifier: pv [59435,59437]"/>
  <match src="identifier: Ownable [47022,47029]" dest="identifier: Ownable [48981,48988]"/>
  <match src="{: { [47547,47548]" dest="{: { [49432,49433]"/>
  <match src="string_literal [20744,20792]" dest="string_literal [20794,20842]"/>
  <match src="primitive_type [47328,47335]" dest="primitive_type [66036,66043]"/>
  <match src="call_argument [50753,50766]" dest="call_argument [55723,55736]"/>
  <match src="{: { [49290,49291]" dest="{: { [54541,54542]"/>
  <match src="primitive_type [54341,54348]" dest="primitive_type [59733,59740]"/>
  <match src="type_name [38768,38775]" dest="type_name [39065,39072]"/>
  <match src="address: address [55887,55894]" dest="address: address [61325,61332]"/>
  <match src="uint256: uint256 [53858,53865]" dest="uint256: uint256 [59250,59257]"/>
  <match src="block_statement [52174,52358]" dest="block_statement [57302,57486]"/>
  <match src="address: address [30425,30432]" dest="address: address [30475,30482]"/>
  <match src="binary_expression [41582,41591]" dest="binary_expression [41866,41875]"/>
  <match src="function_definition [36857,36900]" dest="function_definition [37061,37104]"/>
  <match src="identifier: deadline [39607,39615]" dest="identifier: deadline [39891,39899]"/>
  <match src="block_statement [51979,52076]" dest="block_statement [57107,57204]"/>
  <match src="): ) [54661,54662]" dest="): ) [60090,60091]"/>
  <match src="=: = [51652,51653]" dest="=: = [56622,56623]"/>
  <match src="(: ( [40691,40692]" dest="(: ( [40975,40976]"/>
  <match src="): ) [9567,9568]" dest="): ) [9617,9618]"/>
  <match src="function_definition [58635,58851]" dest="function_definition [63801,64017]"/>
  <match src="identifier: Exited [52375,52381]" dest="identifier: Exited [57694,57700]"/>
  <match src="call_expression [57457,57493]" dest="call_expression [53026,53045]"/>
  <match src="identifier: _currencyToken [60311,60325]" dest="identifier: _currencyToken [66499,66513]"/>
  <match src="identifier: call [17782,17786]" dest="identifier: call [17832,17836]"/>
  <match src="): ) [7937,7938]" dest="): ) [7987,7988]"/>
  <match src="type_name [36493,36503]" dest="type_name [36697,36707]"/>
  <match src="visibility [36534,36542]" dest="visibility [36738,36746]"/>
  <match src="uint256: uint256 [25737,25744]" dest="uint256: uint256 [25787,25794]"/>
  <match src="identifier: msg [57640,57643]" dest="identifier: msg [55771,55774]"/>
  <match src="identifier: _ [35011,35012]" dest="identifier: _ [35215,35216]"/>
  <match src="string [8463,8495]" dest="string [8513,8545]"/>
  <match src="primitive_type [26089,26093]" dest="primitive_type [26139,26143]"/>
  <match src="uint256: uint256 [13415,13422]" dest="uint256: uint256 [13465,13472]"/>
  <match src="external: external [52660,52668]" dest="external: external [58047,58055]"/>
  <match src="function_definition [27946,28164]" dest="function_definition [27996,28214]"/>
  <match src="(: ( [31389,31390]" dest="(: ( [31439,31440]"/>
  <match src="type_name [36493,36500]" dest="type_name [36697,36704]"/>
  <match src="[: [ [30605,30606]" dest="[: [ [30655,30656]"/>
  <match src="identifier: account [30606,30613]" dest="identifier: account [30656,30663]"/>
  <match src="identifier: a [9279,9280]" dest="identifier: a [9329,9330]"/>
  <match src="call_argument [53204,53214]" dest="call_argument [58596,58606]"/>
  <match src="string [51298,51330]" dest="string [56268,56300]"/>
  <match src="call_expression [57927,58049]" dest="call_expression [63093,63215]"/>
  <match src=".: . [61002,61003]" dest=".: . [67251,67252]"/>
  <match src="expression_statement [59898,60006]" dest="expression_statement [65082,65190]"/>
  <match src="function_definition [33303,33428]" dest="function_definition [33353,33478]"/>
  <match src="(: ( [53587,53588]" dest="(: ( [58979,58980]"/>
  <match src="address: address [49959,49966]" dest="address: address [55210,55217]"/>
  <match src="string: string [23803,23809]" dest="string: string [23853,23859]"/>
  <match src="identifier: value [16806,16811]" dest="identifier: value [16856,16861]"/>
  <match src="return_type_definition [48467,48484]" dest="return_type_definition [53328,53345]"/>
  <match src="uint256: uint256 [8381,8388]" dest="uint256: uint256 [8431,8438]"/>
  <match src="type_name [54057,54064]" dest="type_name [59449,59456]"/>
  <match src="is: is [43874,43876]" dest="is: is [44621,44623]"/>
  <match src="call_expression [52823,52844]" dest="call_expression [58215,58236]"/>
  <match src="identifier: beneficiary [60158,60169]" dest="identifier: beneficiary [66337,66348]"/>
  <match src="function: function [2157,2165]" dest="function: function [2207,2215]"/>
  <match src="): ) [58378,58379]" dest="): ) [63544,63545]"/>
  <match src="expression_statement [50705,50777]" dest="expression_statement [55675,55747]"/>
  <match src="primitive_type [23628,23635]" dest="primitive_type [23678,23685]"/>
  <match src="parameter [37469,37475]" dest="parameter [37673,37679]"/>
  <match src="function_definition [37324,37421]" dest="function_definition [37528,37625]"/>
  <match src="call_argument [41806,41815]" dest="call_argument [42090,42099]"/>
  <match src="): ) [57905,57906]" dest="): ) [63071,63072]"/>
  <match src="modifier: modifier [34901,34909]" dest="modifier: modifier [35105,35113]"/>
  <match src="type_name [45980,45987]" dest="type_name [47688,47695]"/>
  <match src="identifier: functionCallWithValue [16648,16669]" dest="identifier: functionCallWithValue [16698,16719]"/>
  <match src="identifier: amount [29566,29572]" dest="identifier: amount [29616,29622]"/>
  <match src="(: ( [54850,54851]" dest="(: ( [60279,60280]"/>
  <match src="identifier: _decimals [25426,25435]" dest="identifier: _decimals [25476,25485]"/>
  <match src="(: ( [10217,10218]" dest="(: ( [10267,10268]"/>
  <match src="==: == [54856,54858]" dest="==: == [60285,60287]"/>
  <match src="address: address [35701,35708]" dest="address: address [35905,35912]"/>
  <match src="call_expression [30406,30471]" dest="call_expression [30456,30521]"/>
  <match src="if_statement [60272,60368]" dest="if_statement [66460,66556]"/>
  <match src="user_defined_type [36785,36797]" dest="user_defined_type [36989,37001]"/>
  <match src="call_expression [54946,54966]" dest="call_expression [60375,60395]"/>
  <match src="identifier: msg [52302,52305]" dest="identifier: msg [57430,57433]"/>
  <match src="identifier: add [30574,30577]" dest="identifier: add [30624,30627]"/>
  <match src="visibility [14569,14577]" dest="visibility [14619,14627]"/>
  <match src="comment: // unstake in gauge [56383,56402]" dest="comment: // unstake in gauge [61830,61849]"/>
  <match src="address: address [16670,16677]" dest="address: address [16720,16727]"/>
  <match src="identifier: b [10947,10948]" dest="identifier: b [10997,10998]"/>
  <match src="identifier: curveLiquidityAmountToTransfer [51621,51651]" dest="identifier: curveLiquidityAmountToTransfer [56591,56621]"/>
  <match src="function_body [29597,30049]" dest="function_body [29647,30099]"/>
  <match src="uint256: uint256 [21601,21608]" dest="uint256: uint256 [21651,21658]"/>
  <match src="function_definition [55318,56007]" dest="function_definition [60747,61445]"/>
  <match src="expression_statement [24314,24331]" dest="expression_statement [24364,24381]"/>
  <match src="function: function [10833,10841]" dest="function: function [10883,10891]"/>
  <match src=",: , [26038,26039]" dest=",: , [26088,26089]"/>
  <match src="call_argument [47407,47417]" dest="call_argument [66151,66155]"/>
  <match src="call_argument [20695,20742]" dest="call_argument [20745,20792]"/>
  <match src="primitive_type [44727,44732]" dest="primitive_type [45954,45959]"/>
  <match src="address: address [59857,59864]" dest="address: address [65041,65048]"/>
  <match src="=: = [60799,60800]" dest="=: = [67048,67049]"/>
  <match src="member_expression [52991,53011]" dest="member_expression [58383,58403]"/>
  <match src="primitive_type [19236,19241]" dest="primitive_type [19286,19291]"/>
  <match src="identifier: liquidValue [48441,48452]" dest="identifier: liquidValue [53302,53313]"/>
  <match src="number_literal: 0 [30433,30434]" dest="number_literal: 0 [30483,30484]"/>
  <match src="primitive_type [29530,29537]" dest="primitive_type [29580,29587]"/>
  <match src="member_expression [58816,58826]" dest="member_expression [63982,63992]"/>
  <match src="identifier: _ENTERED [5999,6007]" dest="identifier: _ENTERED [6049,6057]"/>
  <match src="type_name [17187,17194]" dest="type_name [17237,17244]"/>
  <match src="type_name [23593,23600]" dest="type_name [23643,23650]"/>
  <match src="call_argument [15783,15789]" dest="call_argument [15833,15839]"/>
  <match src="=: = [50616,50617]" dest="=: = [55586,55587]"/>
  <match src="]: ] [32203,32204]" dest="]: ] [32253,32254]"/>
  <match src="external: external [37389,37397]" dest="external: external [37593,37601]"/>
  <match src="identifier: require [49538,49545]" dest="identifier: require [54789,54796]"/>
  <match src="(: ( [14803,14804]" dest="(: ( [14853,14854]"/>
  <match src="memory: memory [17174,17180]" dest="memory: memory [17224,17230]"/>
  <match src="binary_expression [52701,52732]" dest="binary_expression [58093,58124]"/>
  <match src="emit_statement [30001,30042]" dest="emit_statement [30051,30092]"/>
  <match src="expression_statement [51145,51247]" dest="expression_statement [56115,56217]"/>
  <match src="member_expression [48270,48333]" dest="member_expression [52765,52828]"/>
  <match src="&gt;: &gt; [57155,57156]" dest="&gt;: &gt; [62486,62487]"/>
  <match src="return_type_definition [28751,28765]" dest="return_type_definition [28801,28815]"/>
  <match src="indexed: indexed [34341,34348]" dest="indexed: indexed [34545,34552]"/>
  <match src="returns: returns [26613,26620]" dest="returns: returns [26663,26670]"/>
  <match src="&lt;=: &lt;= [52820,52822]" dest="&lt;=: &lt;= [58212,58214]"/>
  <match src="member_expression [54946,54970]" dest="member_expression [60375,60399]"/>
  <match src="}: } [25442,25443]" dest="}: } [25492,25493]"/>
  <match src="expression_statement [55410,55500]" dest="expression_statement [60848,60938]"/>
  <match src="return_type_definition [42302,42318]" dest="return_type_definition [42586,42602]"/>
  <match src="&lt;=: &lt;= [56299,56301]" dest="&lt;=: &lt;= [61746,61748]"/>
  <match src="primitive_type [38752,38759]" dest="primitive_type [39049,39056]"/>
  <match src="]: ] [28882,28883]" dest="]: ] [28932,28933]"/>
  <match src="call_expression [59833,59887]" dest="call_expression [65017,65071]"/>
  <match src="function_definition [16639,16865]" dest="function_definition [16689,16915]"/>
  <match src=",: , [14551,14552]" dest=",: , [14601,14602]"/>
  <match src="memory: memory [24244,24250]" dest="memory: memory [24294,24300]"/>
  <match src="number_literal: 16 [41385,41387]" dest="number_literal: 16 [41669,41671]"/>
  <match src="event_definition [45684,45714]" dest="event_definition [47392,47422]"/>
  <match src="comment: // burn tokens sent [53169,53188]" dest="comment: // burn tokens sent [58561,58580]"/>
  <match src="(: ( [50740,50741]" dest="(: ( [55710,55711]"/>
  <match src="&quot;: &quot; [15828,15829]" dest="&quot;: &quot; [15878,15879]"/>
  <match src="{: { [37059,37060]" dest="{: { [37263,37264]"/>
  <match src="(: ( [27413,27414]" dest="(: ( [27463,27464]"/>
  <match src=",: , [56610,56611]" dest=",: , [62057,62058]"/>
  <match src="function_body [19141,19177]" dest="function_body [19191,19227]"/>
  <match src="expression_statement [24291,24304]" dest="expression_statement [24341,24354]"/>
  <match src="return_statement [54817,54826]" dest="return_statement [60246,60255]"/>
  <match src="function: function [37324,37332]" dest="function: function [37528,37536]"/>
  <match src="identifier: _decimals [23846,23855]" dest="identifier: _decimals [23896,23905]"/>
  <match src="binary_expression [17281,17311]" dest="binary_expression [17331,17361]"/>
  <match src=".: . [47390,47391]" dest=".: . [66087,66088]"/>
  <match src="number_literal: 10000 [49553,49558]" dest="number_literal: 10000 [54804,54809]"/>
  <match src="identifier: mint [58996,59000]" dest="identifier: mint [64171,64175]"/>
  <match src="primitive_type [21601,21608]" dest="primitive_type [21651,21658]"/>
  <match src="+=: += [41995,41997]" dest="+=: += [42279,42281]"/>
  <match src="identifier: coins [37550,37555]" dest="identifier: coins [37754,37759]"/>
  <match src="{: { [12550,12551]" dest="{: { [12600,12601]"/>
  <match src="parameter [10229,10238]" dest="parameter [10279,10288]"/>
  <match src="uint8: uint8 [32634,32639]" dest="uint8: uint8 [32684,32689]"/>
  <match src="(: ( [27321,27322]" dest="(: ( [27371,27372]"/>
  <match src="view: view [24660,24664]" dest="view: view [24710,24714]"/>
  <match src="number_literal: 1005 [57901,57905]" dest="number_literal: 1005 [63067,63071]"/>
  <match src="comment: /**  * TruePool is an ERC20 which represents a share of a pool  *  * This contract can be used to wrap opportunities to be compatible  * with TrueFi and allow users to directly opt-in through the TUSD contract  *  * Each TruePool is also a staking opportunity for TRU  */ [37781,38059]" dest="comment: /**  * TruePool is an ERC20 which represents a share of a pool  *  * This contract can be used to wrap opportunities to be compatible  * with TrueFi and allow users to directly opt-in through the TUSD contract  *  * Each TruePool is also a staking opportunity for TRU  */ [37985,38263]"/>
  <match src="(: ( [40767,40768]" dest="(: ( [41051,41052]"/>
  <match src="comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      * Can only be called by the current owner.      */ [35527,35668]" dest="comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      * Can only be called by the current owner.      */ [35731,35872]"/>
  <match src="): ) [17771,17772]" dest="): ) [17821,17822]"/>
  <match src="virtual: virtual [29589,29596]" dest="virtual: virtual [29639,29646]"/>
  <match src="identifier: ReentrancyGuard [5144,5159]" dest="identifier: ReentrancyGuard [5194,5209]"/>
  <match src="view: view [48757,48761]" dest="view: view [53617,53621]"/>
  <match src="identifier: latestJoinBlock [52717,52732]" dest="identifier: latestJoinBlock [58109,58124]"/>
  <match src="identifier: sender [50745,50751]" dest="identifier: sender [55715,55721]"/>
  <match src="bytes: bytes [17575,17580]" dest="bytes: bytes [17625,17630]"/>
  <match src="call_argument [17619,17625]" dest="call_argument [17669,17675]"/>
  <match src="visibility [46934,46940]" dest="visibility [48893,48899]"/>
  <match src="address: address [2552,2559]" dest="address: address [2602,2609]"/>
  <match src="(: ( [51692,51693]" dest="(: ( [56662,56663]"/>
  <match src="primitive_type [40658,40665]" dest="primitive_type [40942,40949]"/>
  <match src="bool: bool [14754,14758]" dest="bool: bool [14804,14808]"/>
  <match src="parameter [26556,26571]" dest="parameter [26606,26621]"/>
  <match src="}: } [50841,50842]" dest="}: } [55811,55812]"/>
  <match src="identifier: x [40666,40667]" dest="identifier: x [40950,40951]"/>
  <match src="call_argument [52382,52392]" dest="call_argument [57701,57711]"/>
  <match src="identifier: msg [52382,52385]" dest="identifier: msg [57701,57704]"/>
  <match src="): ) [49368,49369]" dest="): ) [54619,54620]"/>
  <match src=",: , [32053,32054]" dest=",: , [32103,32104]"/>
  <match src="&quot;: &quot; [31310,31311]" dest="&quot;: &quot; [31360,31361]"/>
  <match src="primitive_type [58762,58769]" dest="primitive_type [63928,63935]"/>
  <match src="true: true [26166,26170]" dest="true: true [26216,26220]"/>
  <match src="type_cast_expression [59001,59021]" dest="type_cast_expression [64176,64196]"/>
  <match src="identifier: msg [50741,50744]" dest="identifier: msg [55711,55714]"/>
  <match src="function_body [61570,61654]" dest="function_body [67819,67903]"/>
  <match src="pure: pure [8412,8416]" dest="pure: pure [8462,8466]"/>
  <match src="visibility [16720,16728]" dest="visibility [16770,16778]"/>
  <match src="identifier: currentlyAvailableAmount [49164,49188]" dest="identifier: currentlyAvailableAmount [54415,54439]"/>
  <match src="identifier: amount [26581,26587]" dest="identifier: amount [26631,26637]"/>
  <match src="memory: memory [16132,16138]" dest="memory: memory [16182,16188]"/>
  <match src="external: external [36534,36542]" dest="external: external [36738,36746]"/>
  <match src="return_type_definition [8884,8901]" dest="return_type_definition [8934,8951]"/>
  <match src="identifier: b [8400,8401]" dest="identifier: b [8450,8451]"/>
  <match src="(: ( [11664,11665]" dest="(: ( [11714,11715]"/>
  <match src="string: string [24470,24476]" dest="string: string [24520,24526]"/>
  <match src="primitive_type [58650,58657]" dest="primitive_type [63816,63823]"/>
  <match src=":: : [17793,17794]" dest=":: : [17843,17844]"/>
  <match src="call_argument [61031,61035]" dest="call_argument [67280,67284]"/>
  <match src="): ) [60354,60355]" dest="): ) [66542,66543]"/>
  <match src=",: , [26660,26661]" dest=",: , [26710,26711]"/>
  <match src="]: ] [27435,27436]" dest="]: ] [27485,27486]"/>
  <match src="(: ( [51378,51379]" dest="(: ( [56348,56349]"/>
  <match src="if: if [54736,54738]" dest="if: if [60165,60167]"/>
  <match src="identifier: path [59958,59962]" dest="identifier: path [65142,65146]"/>
  <match src="function_body [54382,54490]" dest="function_body [59774,59882]"/>
  <match src="view: view [19102,19106]" dest="view: view [19152,19156]"/>
  <match src="identifier: amount [45369,45375]" dest="identifier: amount [47077,47083]"/>
  <match src="address: address [45113,45120]" dest="address: address [46821,46828]"/>
  <match src="): ) [49949,49950]" dest="): ) [55200,55201]"/>
  <match src="uint256: uint256 [10919,10926]" dest="uint256: uint256 [10969,10976]"/>
  <match src="primitive_type [51344,51351]" dest="primitive_type [56314,56321]"/>
  <match src="uint256: uint256 [37356,37363]" dest="uint256: uint256 [37560,37567]"/>
  <match src="user_defined_type [44226,44236]" dest="user_defined_type [44973,44983]"/>
  <match src="user_defined_type [23528,23534]" dest="user_defined_type [23578,23584]"/>
  <match src="call_expression [49191,49234]" dest="call_expression [54442,54485]"/>
  <match src=".: . [53334,53335]" dest=".: . [58726,58727]"/>
  <match src="call_expression [48270,48329]" dest="call_expression [52765,52824]"/>
  <match src="call_argument [30034,30040]" dest="call_argument [30084,30090]"/>
  <match src="): ) [24257,24258]" dest="): ) [24307,24308]"/>
  <match src="primitive_type [23593,23600]" dest="primitive_type [23643,23650]"/>
  <match src="identifier: _burn [51755,51760]" dest="identifier: _burn [56883,56888]"/>
  <match src="{: { [60739,60740]" dest="{: { [66988,66989]"/>
  <match src="(: ( [54606,54607]" dest="(: ( [60035,60036]"/>
  <match src="uint256: uint256 [60778,60785]" dest="uint256: uint256 [67027,67034]"/>
  <match src="}: } [58850,58851]" dest="}: } [64016,64017]"/>
  <match src="call_expression [60303,60356]" dest="call_expression [66491,66544]"/>
  <match src="(: ( [50506,50507]" dest="(: ( [68402,68403]"/>
  <match src="type_cast_expression [54147,54161]" dest="type_cast_expression [59539,59553]"/>
  <match src="primitive_type [19124,19139]" dest="primitive_type [19174,19189]"/>
  <match src="): ) [61626,61627]" dest="): ) [67875,67876]"/>
  <match src="call_expression [48503,48520]" dest="call_expression [53364,53381]"/>
  <match src="string [14630,14661]" dest="string [14680,14711]"/>
  <match src="): ) [17260,17261]" dest="): ) [17310,17311]"/>
  <match src="): ) [7969,7970]" dest="): ) [8019,8020]"/>
  <match src="call_expression [52693,52794]" dest="call_expression [58085,58186]"/>
  <match src="binary_expression [42372,42426]" dest="binary_expression [42656,42710]"/>
  <match src="identifier: msgSender [34572,34581]" dest="identifier: msgSender [34776,34785]"/>
  <match src="uint256: uint256 [33387,33394]" dest="uint256: uint256 [33437,33444]"/>
  <match src="identifier: a [10226,10227]" dest="identifier: a [10276,10277]"/>
  <match src="call_expression [26639,26678]" dest="call_expression [26689,26728]"/>
  <match src="type_name [36785,36797]" dest="type_name [36989,37001]"/>
  <match src="constant: constant [44699,44707]" dest="constant: constant [45926,45934]"/>
  <match src="primitive_type [23561,23568]" dest="primitive_type [23611,23618]"/>
  <match src="yul_evm_builtin [18274,18277]" dest="yul_evm_builtin [18324,18327]"/>
  <match src="uint256: uint256 [52644,52651]" dest="uint256: uint256 [58031,58038]"/>
  <match src="identifier: initializing [20695,20707]" dest="identifier: initializing [20745,20757]"/>
  <match src="identifier: IERC20 [38086,38092]" dest="identifier: IERC20 [38290,38296]"/>
  <match src="identifier: claimableFees [60242,60255]" dest="identifier: claimableFees [66430,66443]"/>
  <match src="variable_declaration [57831,57860]" dest="variable_declaration [62997,63026]"/>
  <match src=".: . [53536,53537]" dest=".: . [58928,58929]"/>
  <match src="primitive_type [49495,49502]" dest="primitive_type [54746,54753]"/>
  <match src="(: ( [48073,48074]" dest="(: ( [52419,52420]"/>
  <match src="): ) [16151,16152]" dest="): ) [16201,16202]"/>
  <match src="): ) [49367,49368]" dest="): ) [54618,54619]"/>
  <match src="(: ( [41497,41498]" dest="(: ( [41781,41782]"/>
  <match src="): ) [28071,28072]" dest="): ) [28121,28122]"/>
  <match src="comment: // pragma solidity 0.6.10; [36265,36291]" dest="comment: // pragma solidity 0.6.10; [36469,36495]"/>
  <match src="function: function [36983,36991]" dest="function: function [37187,37195]"/>
  <match src="): ) [21195,21196]" dest="): ) [21245,21246]"/>
  <match src="comment: // Dependency file: contracts/truefi/interface/ICurve.sol [36204,36261]" dest="comment: // Dependency file: contracts/truefi/interface/ICurve.sol [36408,36465]"/>
  <match src="function_definition [31898,32278]" dest="function_definition [31948,32328]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [41878,41881]" dest="&gt;&gt;=: &gt;&gt;= [42162,42165]"/>
  <match src="primitive_type [10978,10985]" dest="primitive_type [11028,11035]"/>
  <match src="visibility [26292,26298]" dest="visibility [26342,26348]"/>
  <match src="{: { [53847,53848]" dest="{: { [59239,59240]"/>
  <match src="identifier: account [30627,30634]" dest="identifier: account [30677,30684]"/>
  <match src="address: address [39210,39217]" dest="address: address [39494,39501]"/>
  <match src="int128: int128 [42044,42050]" dest="int128: int128 [42328,42334]"/>
  <match src="uint256: uint256 [10229,10236]" dest="uint256: uint256 [10279,10286]"/>
  <match src="): ) [56554,56555]" dest="): ) [62001,62002]"/>
  <match src="&quot;: &quot; [10300,10301]" dest="&quot;: &quot; [10350,10351]"/>
  <match src="): ) [32052,32053]" dest="): ) [32102,32103]"/>
  <match src="event_paramater [45996,46007]" dest="event_paramater [47704,47715]"/>
  <match src="interface: interface [39094,39103]" dest="interface: interface [39378,39387]"/>
  <match src="identifier: _owner [35462,35468]" dest="identifier: _owner [35666,35672]"/>
  <match src="(: ( [48524,48525]" dest="(: ( [53385,53386]"/>
  <match src="call_argument [59009,59020]" dest="call_argument [64184,64195]"/>
  <match src="type_name [37283,37287]" dest="type_name [37487,37491]"/>
  <match src="uint256: uint256 [7917,7924]" dest="uint256: uint256 [7967,7974]"/>
  <match src="}: } [52357,52358]" dest="}: } [57485,57486]"/>
  <match src="type_name [44527,44534]" dest="type_name [45274,45281]"/>
  <match src="function_body [49145,49388]" dest="function_body [54396,54639]"/>
  <match src="function_definition [49758,49991]" dest="function_definition [55009,55242]"/>
  <match src="function: function [8368,8376]" dest="function: function [8418,8426]"/>
  <match src="identifier: _msgSender [28800,28810]" dest="identifier: _msgSender [28850,28860]"/>
  <match src="(: ( [60829,60830]" dest="(: ( [67078,67079]"/>
  <match src="): ) [45375,45376]" dest="): ) [47083,47084]"/>
  <match src="(: ( [16089,16090]" dest="(: ( [16139,16140]"/>
  <match src="type_name [27322,27326]" dest="type_name [27372,27376]"/>
  <match src="=: = [24297,24298]" dest="=: = [24347,24348]"/>
  <match src="call_argument [55659,55673]" dest="call_argument [61097,61111]"/>
  <match src="identifier: spender [28109,28116]" dest="identifier: spender [28159,28166]"/>
  <match src="identifier: ICurveMinter [36917,36929]" dest="identifier: ICurveMinter [37121,37133]"/>
  <match src="): ) [57061,57062]" dest="): ) [68707,68708]"/>
  <match src="call_argument [49898,49917]" dest="call_argument [55149,55168]"/>
  <match src="external: external [36709,36717]" dest="external: external [36913,36921]"/>
  <match src="identifier: balanceOf [52823,52832]" dest="identifier: balanceOf [58215,58224]"/>
  <match src="call_argument [55719,55732]" dest="call_argument [61157,61170]"/>
  <match src="identifier: isContract [13156,13166]" dest="identifier: isContract [13206,13216]"/>
  <match src="yul_path [21664,21668]" dest="yul_path [21714,21718]"/>
  <match src="emit: emit [56662,56666]" dest="emit: emit [62109,62113]"/>
  <match src="call_argument [10954,10966]" dest="call_argument [11004,11016]"/>
  <match src="assignment_expression [35492,35511]" dest="assignment_expression [35696,35715]"/>
  <match src="interface_declaration [36907,37034]" dest="interface_declaration [37111,37238]"/>
  <match src="call_argument [32113,32134]" dest="call_argument [32163,32184]"/>
  <match src="(: ( [10918,10919]" dest="(: ( [10968,10969]"/>
  <match src="is: is [34211,34213]" dest="is: is [34415,34417]"/>
  <match src="identifier: IYToken [37590,37597]" dest="identifier: IYToken [37794,37801]"/>
  <match src="identifier: approve [49951,49958]" dest="identifier: approve [55202,55209]"/>
  <match src="(: ( [28070,28071]" dest="(: ( [28120,28121]"/>
  <match src="visibility [60171,60179]" dest="visibility [66350,66358]"/>
  <match src="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [27545,27940]" dest="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [27595,27990]"/>
  <match src="parameter [17477,17491]" dest="parameter [17527,17541]"/>
  <match src="identifier: require [32105,32112]" dest="identifier: require [32155,32162]"/>
  <match src="(: ( [37355,37356]" dest="(: ( [37559,37560]"/>
  <match src="number_literal: 0x100000000 [41237,41248]" dest="number_literal: 0x100000000 [41521,41532]"/>
  <match src="=: = [41782,41783]" dest="=: = [42066,42067]"/>
  <match src="contract: contract [34194,34202]" dest="contract: contract [34398,34406]"/>
  <match src="): ) [13533,13534]" dest="): ) [13583,13584]"/>
  <match src="&quot;: &quot; [54723,54724]" dest="&quot;: &quot; [60152,60153]"/>
  <match src="): ) [38574,38575]" dest="): ) [38871,38872]"/>
  <match src="identifier: _curvePool [58403,58413]" dest="identifier: _curvePool [63569,63579]"/>
  <match src="call_argument [34630,34639]" dest="call_argument [34834,34843]"/>
  <match src="comment: // construction, since the code is only stored at the end of the [13304,13368]" dest="comment: // construction, since the code is only stored at the end of the [13354,13418]"/>
  <match src="call_expression [56566,56649]" dest="call_expression [62013,62096]"/>
  <match src="&quot;: &quot; [51329,51330]" dest="&quot;: &quot; [56299,56300]"/>
  <match src="parameter [42278,42286]" dest="parameter [42562,42570]"/>
  <match src="uint256: uint256 [45361,45368]" dest="uint256: uint256 [47069,47076]"/>
  <match src=",: , [18293,18294]" dest=",: , [18343,18344]"/>
  <match src="identifier: tx [51185,51187]" dest="identifier: tx [56155,56157]"/>
  <match src="number_literal: 0x2 [41671,41674]" dest="number_literal: 0x2 [41955,41958]"/>
  <match src="identifier: div [10290,10293]" dest="identifier: div [10340,10343]"/>
  <match src="expression_statement [28777,28957]" dest="expression_statement [28827,29007]"/>
  <match src="visibility [25707,25713]" dest="visibility [25757,25763]"/>
  <match src=",: , [27366,27367]" dest=",: , [27416,27417]"/>
  <match src="expression_statement [55615,55675]" dest="expression_statement [61053,61113]"/>
  <match src="comment: // remove TUSD from curve [58159,58184]" dest="comment: // remove TUSD from curve [63325,63350]"/>
  <match src="call_argument [53420,53476]" dest="call_argument [58812,58868]"/>
  <match src="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [36019,36092]" dest="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [36223,36296]"/>
  <match src="): ) [53155,53156]" dest="): ) [58547,58548]"/>
  <match src="string [46989,47000]" dest="string [48948,48959]"/>
  <match src="identifier: amountToWithdraw [53318,53334]" dest="identifier: amountToWithdraw [58710,58726]"/>
  <match src="): ) [50590,50591]" dest="): ) [68486,68487]"/>
  <match src="interface_declaration [36442,36638]" dest="interface_declaration [36646,36842]"/>
  <match src="primitive_type [54621,54628]" dest="primitive_type [60050,60057]"/>
  <match src="identifier: get_virtual_price [36583,36600]" dest="identifier: get_virtual_price [36787,36804]"/>
  <match src="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [22071,22144]" dest="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [22121,22194]"/>
  <match src="visibility [25531,25537]" dest="visibility [25581,25587]"/>
  <match src="state_variable_declaration [44564,44608]" dest="state_variable_declaration [45311,45355]"/>
  <match src="function: function [17121,17129]" dest="function: function [17171,17179]"/>
  <match src="expression_statement [32186,32223]" dest="expression_statement [32236,32273]"/>
  <match src="address: address [4191,4198]" dest="address: address [4241,4248]"/>
  <match src="): ) [56544,56545]" dest="): ) [61991,61992]"/>
  <match src="identifier: msb [41676,41679]" dest="identifier: msb [41960,41963]"/>
  <match src="identifier: require [17273,17280]" dest="identifier: require [17323,17330]"/>
  <match src="function_definition [53774,54230]" dest="function_definition [59166,59622]"/>
  <match src="parameter [13167,13182]" dest="parameter [13217,13232]"/>
  <match src="override: override [50171,50179]" dest="override: override [55422,55430]"/>
  <match src="(: ( [18277,18278]" dest="(: ( [18327,18328]"/>
  <match src="]: ] [39649,39650]" dest="]: ] [39933,39934]"/>
  <match src="}: } [30048,30049]" dest="}: } [30098,30099]"/>
  <match src="): ) [57253,57254]" dest="): ) [62576,62577]"/>
  <match src="identifier: donate_dust [37288,37299]" dest="identifier: donate_dust [37492,37503]"/>
  <match src="identifier: sub [8816,8819]" dest="identifier: sub [8866,8869]"/>
  <match src="type_name [19124,19139]" dest="type_name [19174,19189]"/>
  <match src="identifier: this [48063,48067]" dest="identifier: this [52409,52413]"/>
  <match src="&quot;: &quot; [27463,27464]" dest="&quot;: &quot; [27513,27514]"/>
  <match src="source_file [0,61657]" dest="source_file [0,68719]"/>
  <match src="(: ( [27203,27204]" dest="(: ( [27253,27254]"/>
  <match src="return: return [19395,19401]" dest="return: return [19445,19451]"/>
  <match src="identifier: _curvePool [49871,49881]" dest="identifier: _curvePool [55122,55132]"/>
  <match src="true: true [20902,20906]" dest="true: true [20952,20956]"/>
  <match src="boolean_literal [28152,28156]" dest="boolean_literal [28202,28206]"/>
  <match src="{: { [16752,16753]" dest="{: { [16802,16803]"/>
  <match src="primitive_type [24674,24680]" dest="primitive_type [24724,24730]"/>
  <match src="variable_declaration_statement [53858,53885]" dest="variable_declaration_statement [59250,59277]"/>
  <match src="identifier: currencyBalance [57295,57310]" dest="identifier: currencyBalance [62610,62625]"/>
  <match src="user_defined_type [34229,34236]" dest="user_defined_type [34433,34440]"/>
  <match src="identifier: TUSD_INDEX [60861,60871]" dest="identifier: TUSD_INDEX [67110,67120]"/>
  <match src="(: ( [13206,13207]" dest="(: ( [13256,13257]"/>
  <match src="address: address [39544,39551]" dest="address: address [39828,39835]"/>
  <match src="): ) [55877,55878]" dest="): ) [61315,61316]"/>
  <match src="function: function [52624,52632]" dest="function: function [58011,58019]"/>
  <match src="identifier: tx [50669,50671]" dest="identifier: tx [55639,55641]"/>
  <match src="identifier: transfer [52293,52301]" dest="identifier: transfer [57421,57429]"/>
  <match src="yul_function_call [21652,21669]" dest="yul_function_call [21702,21719]"/>
  <match src="type_name [51613,51620]" dest="type_name [56583,56590]"/>
  <match src="call_argument [57879,57895]" dest="call_argument [63045,63061]"/>
  <match src="address: address [55835,55842]" dest="address: address [61273,61280]"/>
  <match src="identifier: newOwner [35902,35910]" dest="identifier: newOwner [36106,36114]"/>
  <match src="): ) [48778,48779]" dest="): ) [53638,53639]"/>
  <match src="&quot;: &quot; [8463,8464]" dest="&quot;: &quot; [8513,8514]"/>
  <match src="unary_expression [20828,20841]" dest="unary_expression [20878,20891]"/>
  <match src="identifier: errorMessage [17416,17428]" dest="identifier: errorMessage [17466,17478]"/>
  <match src="primitive_type [36557,36564]" dest="primitive_type [36761,36768]"/>
  <match src="address: address [31950,31957]" dest="address: address [32000,32007]"/>
  <match src="call_expression [50705,50776]" dest="call_expression [55675,55746]"/>
  <match src="call_expression [50205,50238]" dest="call_expression [55473,55506]"/>
  <match src="call_expression [48270,48285]" dest="call_expression [52765,52780]"/>
  <match src="call_argument [32051,32052]" dest="call_argument [32101,32102]"/>
  <match src=".: . [58360,58361]" dest=".: . [63526,63527]"/>
  <match src="identifier: amountIn [59724,59732]" dest="identifier: amountIn [64899,64907]"/>
  <match src="): ) [53845,53846]" dest="): ) [59237,59238]"/>
  <match src="(: ( [24673,24674]" dest="(: ( [24723,24724]"/>
  <match src="user_defined_type [23519,23526]" dest="user_defined_type [23569,23576]"/>
  <match src="}: } [61043,61044]" dest="}: } [67292,67293]"/>
  <match src="): ) [47595,47596]" dest="): ) [49480,49481]"/>
  <match src="}: } [6960,6961]" dest="}: } [7010,7011]"/>
  <match src="(: ( [34961,34962]" dest="(: ( [35165,35166]"/>
  <match src="assignment_expression [47127,47159]" dest="assignment_expression [49086,49118]"/>
  <match src="address: address [29710,29717]" dest="address: address [29760,29767]"/>
  <match src=".: . [56509,56510]" dest=".: . [61956,61957]"/>
  <match src="[: [ [29842,29843]" dest="[: [ [29892,29893]"/>
  <match src="yul_path [13506,13510]" dest="yul_path [13556,13560]"/>
  <match src="uint256: uint256 [54885,54892]" dest="uint256: uint256 [60314,60321]"/>
  <match src="function: function [10205,10213]" dest="function: function [10255,10263]"/>
  <match src="function_definition [36466,36566]" dest="function_definition [36670,36770]"/>
  <match src="call_argument [17409,17414]" dest="call_argument [17459,17464]"/>
  <match src="visibility [37000,37008]" dest="visibility [37204,37212]"/>
  <match src="public: public [44273,44279]" dest="public: public [45020,45026]"/>
  <match src="(: ( [41581,41582]" dest="(: ( [41865,41866]"/>
  <match src="(: ( [26259,26260]" dest="(: ( [26309,26310]"/>
  <match src="): ) [54037,54038]" dest="): ) [59429,59430]"/>
  <match src="identifier: bit [41874,41877]" dest="identifier: bit [42158,42161]"/>
  <match src="(: ( [51264,51265]" dest="(: ( [56234,56235]"/>
  <match src="if: if [52134,52136]" dest="if: if [57262,57264]"/>
  <match src="]: ] [31296,31297]" dest="]: ] [31346,31347]"/>
  <match src="uint256: uint256 [54373,54380]" dest="uint256: uint256 [59765,59772]"/>
  <match src="private: private [23637,23644]" dest="private: private [23687,23694]"/>
  <match src="(: ( [31142,31143]" dest="(: ( [31192,31193]"/>
  <match src="call_argument [16234,16238]" dest="call_argument [16284,16288]"/>
  <match src="public: public [25380,25386]" dest="public: public [25430,25436]"/>
  <match src="string_literal [14630,14661]" dest="string_literal [14680,14711]"/>
  <match src="(: ( [49887,49888]" dest="(: ( [55138,55139]"/>
  <match src="number_literal: 0 [13560,13561]" dest="number_literal: 0 [13610,13611]"/>
  <match src="(: ( [28121,28122]" dest="(: ( [28171,28172]"/>
  <match src="function: function [7904,7912]" dest="function: function [7954,7962]"/>
  <match src="bytes: bytes [17493,17498]" dest="bytes: bytes [17543,17548]"/>
  <match src="primitive_type [20529,20533]" dest="primitive_type [20579,20583]"/>
  <match src="identifier: initialize [34475,34485]" dest="identifier: initialize [34679,34689]"/>
  <match src="identifier: _beforeTokenTransfer [33312,33332]" dest="identifier: _beforeTokenTransfer [33362,33382]"/>
  <match src="external: external [60171,60179]" dest="external: external [66350,66358]"/>
  <match src="call_argument [29883,29923]" dest="call_argument [29933,29973]"/>
  <match src="identifier: amount [29875,29881]" dest="identifier: amount [29925,29931]"/>
  <match src="identifier: msg [51855,51858]" dest="identifier: msg [56983,56986]"/>
  <match src="identifier: currencyAmount [58777,58791]" dest="identifier: currencyAmount [63943,63957]"/>
  <match src="address: address [49220,49227]" dest="address: address [54471,54478]"/>
  <match src="call_argument [30680,30681]" dest="call_argument [30730,30731]"/>
  <match src="+=: += [41680,41682]" dest="+=: += [41964,41966]"/>
  <match src="identifier: value [48824,48829]" dest="identifier: value [54076,54081]"/>
  <match src="identifier: collectCrv [58945,58955]" dest="identifier: collectCrv [64111,64121]"/>
  <match src="comment: // pragma solidity ^0.6.2; [12433,12459]" dest="comment: // pragma solidity ^0.6.2; [12483,12509]"/>
  <match src="override_specifier [51112,51120]" dest="override_specifier [56082,56090]"/>
  <match src="return_type_definition [17239,17261]" dest="return_type_definition [17289,17311]"/>
  <match src="): ) [11641,11642]" dest="): ) [11691,11692]"/>
  <match src="library_declaration [7641,12360]" dest="library_declaration [7691,12410]"/>
  <match src="external: external [38980,38988]" dest="external: external [39264,39272]"/>
  <match src="(: ( [2227,2228]" dest="(: ( [2277,2278]"/>
  <match src="identifier: totalSupply [25517,25528]" dest="identifier: totalSupply [25567,25578]"/>
  <match src="visibility [49136,49144]" dest="visibility [54387,54395]"/>
  <match src="): ) [58842,58843]" dest="): ) [64008,64009]"/>
  <match src="identifier: sub [55002,55005]" dest="identifier: sub [60431,60434]"/>
  <match src="primitive_type [17152,17159]" dest="primitive_type [17202,17209]"/>
  <match src="primitive_type [54147,54154]" dest="primitive_type [59539,59546]"/>
  <match src="return_statement [60977,61037]" dest="return_statement [67226,67286]"/>
  <match src="identifier: block [52701,52706]" dest="identifier: block [58093,58098]"/>
  <match src="call_expression [52919,52961]" dest="call_expression [58311,58353]"/>
  <match src="visibility [50162,50170]" dest="visibility [55413,55421]"/>
  <match src="event_definition [45518,45556]" dest="event_definition [47226,47264]"/>
  <match src="number_literal: 10000 [53053,53058]" dest="number_literal: 10000 [58445,58450]"/>
  <match src="if: if [41320,41322]" dest="if: if [41604,41606]"/>
  <match src="if: if [53236,53238]" dest="if: if [58628,58630]"/>
  <match src="): ) [52960,52961]" dest="): ) [58352,58353]"/>
  <match src="identifier: amount [38349,38355]" dest="identifier: amount [38646,38652]"/>
  <match src="return_type_definition [41022,41038]" dest="return_type_definition [41306,41322]"/>
  <match src="): ) [54470,54471]" dest="): ) [59862,59863]"/>
  <match src="identifier: yAmount [45705,45712]" dest="identifier: yAmount [47413,47420]"/>
  <match src="&quot;: &quot; [52792,52793]" dest="&quot;: &quot; [58184,58185]"/>
  <match src="function: function [56195,56203]" dest="function: function [61633,61641]"/>
  <match src="): ) [32649,32650]" dest="): ) [32699,32700]"/>
  <match src="call_argument [32136,32172]" dest="call_argument [32186,32222]"/>
  <match src="identifier: integrateAtPoint [54971,54987]" dest="identifier: integrateAtPoint [60400,60416]"/>
  <match src="): ) [52172,52173]" dest="): ) [57300,57301]"/>
  <match src="primitive_type [45337,45344]" dest="primitive_type [47045,47052]"/>
  <match src="identifier: beneficiary [60395,60406]" dest="identifier: beneficiary [66583,66594]"/>
  <match src="parameter [59774,59797]" dest="parameter [64949,64972]"/>
  <match src="{: { [34509,34510]" dest="{: { [34713,34714]"/>
  <match src="=: = [35499,35500]" dest="=: = [35703,35704]"/>
  <match src="member_expression [50458,50475]" dest="member_expression [68354,68371]"/>
  <match src="visibility [36840,36848]" dest="visibility [37044,37052]"/>
  <match src="call_expression [51257,51331]" dest="call_expression [56227,56301]"/>
  <match src="type_name [44298,44304]" dest="type_name [45045,45051]"/>
  <match src="private: private [23783,23790]" dest="private: private [23833,23840]"/>
  <match src="event_definition [3939,4011]" dest="event_definition [3989,4061]"/>
  <match src="comment: /**      * @dev Remove liquidity from curve and transfer to borrower      * @param expectedAmount expected amount to borrow      */ [56722,56856]" dest="comment: /**      * @dev Emitted oracle was changed      * @param newOracle New oracle address      */ [46147,46243]"/>
  <match src="payable: payable [14534,14541]" dest="payable: payable [14584,14591]"/>
  <match src="(: ( [1737,1738]" dest="(: ( [1787,1788]"/>
  <match src="type_name [26021,26028]" dest="type_name [26071,26078]"/>
  <match src="identifier: addedValue [27998,28008]" dest="identifier: addedValue [28048,28058]"/>
  <match src="call_argument [48055,48068]" dest="call_argument [52401,52414]"/>
  <match src="state_variable_declaration [23663,23731]" dest="state_variable_declaration [23713,23781]"/>
  <match src="type_name [8842,8848]" dest="type_name [8892,8898]"/>
  <match src="interface: interface [1619,1628]" dest="interface: interface [1669,1678]"/>
  <match src="comment: // get share of currency tokens kept in the pool [51393,51441]" dest="comment: // get share of currency tokens kept in the pool [56363,56411]"/>
  <match src="return: return [48263,48269]" dest="return: return [52758,52764]"/>
  <match src="(: ( [41129,41130]" dest="(: ( [41413,41414]"/>
  <match src="function_definition [36574,36635]" dest="function_definition [36778,36839]"/>
  <match src="(: ( [14525,14526]" dest="(: ( [14575,14576]"/>
  <match src="state_mutability [37455,37459]" dest="state_mutability [37659,37663]"/>
  <match src="function_body [31105,31458]" dest="function_body [31155,31508]"/>
  <match src="): ) [55378,55379]" dest="): ) [60807,60808]"/>
  <match src="call_argument [29697,29720]" dest="call_argument [29747,29770]"/>
  <match src="call_argument [57561,57614]" dest="call_argument [62736,62788]"/>
  <match src="number_literal [48334,48341]" dest="number_literal [52829,52836]"/>
  <match src="call_argument [53588,53598]" dest="call_argument [58980,58990]"/>
  <match src="modifier_definition [20653,21051]" dest="modifier_definition [20703,21101]"/>
  <match src="parameter [10868,10894]" dest="parameter [10918,10944]"/>
  <match src="return_statement [40754,40777]" dest="return_statement [41038,41061]"/>
  <match src="identifier: _curvePool [60984,60994]" dest="identifier: _curvePool [67233,67243]"/>
  <match src="expression_statement [47055,47080]" dest="expression_statement [49014,49039]"/>
  <match src="type_name [55333,55340]" dest="type_name [60762,60769]"/>
  <match src="function_body [16752,16865]" dest="function_body [16802,16915]"/>
  <match src="call_argument [17806,17810]" dest="call_argument [17856,17860]"/>
  <match src="type_cast_expression [29626,29636]" dest="type_cast_expression [29676,29686]"/>
  <match src="identifier: IUniswapRouter [46900,46914]" dest="identifier: IUniswapRouter [48794,48808]"/>
  <match src="identifier: a [8389,8390]" dest="identifier: a [8439,8440]"/>
  <match src="state_mutability [37009,37013]" dest="state_mutability [37213,37217]"/>
  <match src="identifier: account [31063,31070]" dest="identifier: account [31113,31120]"/>
  <match src="type_name [49114,49121]" dest="type_name [54365,54372]"/>
  <match src="comment: // import {IYToken} from &quot;contracts/truefi/interface/IYToken.sol&quot;; [36372,36438]" dest="comment: // import {IYToken} from &quot;contracts/truefi/interface/IYToken.sol&quot;; [36576,36642]"/>
  <match src="interface: interface [38061,38070]" dest="interface: interface [38265,38274]"/>
  <match src="): ) [41508,41509]" dest="): ) [41792,41793]"/>
  <match src="return_statement [17850,17868]" dest="return_statement [17900,17918]"/>
  <match src="call_expression [54408,54459]" dest="call_expression [59800,59851]"/>
  <match src="function_body [26628,26708]" dest="function_body [26678,26758]"/>
  <match src="}: } [48118,48119]" dest="}: } [52464,52465]"/>
  <match src="call_argument [29802,29811]" dest="call_argument [29852,29861]"/>
  <match src="augmented_assignment_expression [41548,41556]" dest="augmented_assignment_expression [41832,41840]"/>
  <match src="function_definition [54315,54490]" dest="function_definition [59707,59882]"/>
  <match src="{: { [49145,49146]" dest="{: { [54396,54397]"/>
  <match src="): ) [53357,53358]" dest="): ) [58749,58750]"/>
  <match src="call_argument [29794,29800]" dest="call_argument [29844,29850]"/>
  <match src="indexed: indexed [45345,45352]" dest="indexed: indexed [47053,47060]"/>
  <match src="identifier: mul [53008,53011]" dest="identifier: mul [58400,58403]"/>
  <match src="override: override [26307,26315]" dest="override: override [26357,26365]"/>
  <match src="expression_statement [29608,29679]" dest="expression_statement [29658,29729]"/>
  <match src="identifier: _totalSupply [23755,23767]" dest="identifier: _totalSupply [23805,23817]"/>
  <match src="uint256: uint256 [53801,53808]" dest="uint256: uint256 [59193,59200]"/>
  <match src="type_name [8426,8433]" dest="type_name [8476,8483]"/>
  <match src=",: , [39533,39534]" dest=",: , [39817,39818]"/>
  <match src="identifier: account [31124,31131]" dest="identifier: account [31174,31181]"/>
  <match src="function_body [21197,21712]" dest="function_body [21247,21762]"/>
  <match src="number_literal: 4 [37097,37098]" dest="number_literal: 4 [37301,37302]"/>
  <match src="}: } [57679,57680]" dest="}: } [62845,62846]"/>
  <match src="yul_path [21646,21648]" dest="yul_path [21696,21698]"/>
  <match src="function: function [47953,47961]" dest="function: function [52299,52307]"/>
  <match src="number_unit [59999,60004]" dest="number_unit [65183,65188]"/>
  <match src=",: , [58760,58761]" dest=",: , [63926,63927]"/>
  <match src="): ) [58048,58049]" dest="): ) [63214,63215]"/>
  <match src="return_statement [15763,15831]" dest="return_statement [15813,15881]"/>
  <match src="variable_declaration [52892,52916]" dest="variable_declaration [58284,58308]"/>
  <match src="uint256: uint256 [28711,28718]" dest="uint256: uint256 [28761,28768]"/>
  <match src="type_name [17152,17159]" dest="type_name [17202,17209]"/>
  <match src="identifier: removeLiquidityFromCurve [57697,57721]" dest="identifier: removeLiquidityFromCurve [62863,62887]"/>
  <match src="number_literal: 0 [9566,9567]" dest="number_literal: 0 [9616,9617]"/>
  <match src="): ) [14609,14610]" dest="): ) [14659,14660]"/>
  <match src="identifier: Initializable [34214,34227]" dest="identifier: Initializable [34418,34431]"/>
  <match src="type_cast_expression [61613,61626]" dest="type_cast_expression [67862,67875]"/>
  <match src="identifier: spender [32254,32261]" dest="identifier: spender [32304,32311]"/>
  <match src="(: ( [55983,55984]" dest="(: ( [61421,61422]"/>
  <match src="identifier: _curvePool [49845,49855]" dest="identifier: _curvePool [55096,55106]"/>
  <match src="comment: /**  * @title Initializable  *  * @dev Helper contract to support initializer functions. To use it, replace  * the constructor with a function that has the `initializer` modifier.  * WARNING: Unlike constructors, initializer functions must be manually  * invoked. This applies both to deploying an Initializable contract, as well  * as extending an Initializable contract via inheritance.  * WARNING: When used with inheritance, manual care must be taken to not invoke  * a parent initializer twice, or ensure that all initializers are idempotent,  * because this is not dealt with automatically as with constructors.  */ [19652,20284]" dest="comment: /**  * @title Initializable  *  * @dev Helper contract to support initializer functions. To use it, replace  * the constructor with a function that has the `initializer` modifier.  * WARNING: Unlike constructors, initializer functions must be manually  * invoked. This applies both to deploying an Initializable contract, as well  * as extending an Initializable contract via inheritance.  * WARNING: When used with inheritance, manual care must be taken to not invoke  * a parent initializer twice, or ensure that all initializers are idempotent,  * because this is not dealt with automatically as with constructors.  */ [19702,20334]"/>
  <match src="(: ( [10845,10846]" dest="(: ( [10895,10896]"/>
  <match src="(: ( [54407,54408]" dest="(: ( [59799,59800]"/>
  <match src="identifier: yTokenBalance [47962,47975]" dest="identifier: yTokenBalance [52308,52321]"/>
  <match src="(: ( [55709,55710]" dest="(: ( [61147,61148]"/>
  <match src=".: . [48285,48286]" dest=".: . [52780,52781]"/>
  <match src=".: . [57896,57897]" dest=".: . [63062,63063]"/>
  <match src="(: ( [10946,10947]" dest="(: ( [10996,10997]"/>
  <match src="=: = [50203,50204]" dest="=: = [55471,55472]"/>
  <match src="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [26716,27176]" dest="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [26766,27226]"/>
  <match src="call_argument [47349,47360]" dest="call_argument [66057,66065]"/>
  <match src="identifier: join [38336,38340]" dest="identifier: join [38633,38637]"/>
  <match src="pure: pure [8879,8883]" dest="pure: pure [8929,8933]"/>
  <match src="call_argument [15791,15795]" dest="call_argument [15841,15845]"/>
  <match src="(: ( [34550,34551]" dest="(: ( [34754,34755]"/>
  <match src="(: ( [54113,54114]" dest="(: ( [59505,59506]"/>
  <match src="function_body [7971,8085]" dest="function_body [8021,8135]"/>
  <match src="): ) [30646,30647]" dest="): ) [30696,30697]"/>
  <match src="comment: /**      * @dev Calculate pool value in TUSD      * &quot;virtual price&quot; of entire pool - LoanTokens, TUSD, curve y pool tokens      * @return pool value in TUSD      */ [48555,48723]" dest="comment: // fund manager can be set to 0 or governance [45686,45731]"/>
  <match src="call_argument [32055,32093]" dest="call_argument [32105,32143]"/>
  <match src="binary_expression [30414,30435]" dest="binary_expression [30464,30485]"/>
  <match src="): ) [57974,57975]" dest="): ) [63140,63141]"/>
  <match src="comment: /**      * @dev Virtual value of yCRV tokens in the pool      */ [48127,48193]" dest="comment: // TRU price oracle [45556,45575]"/>
  <match src="function: function [36466,36474]" dest="function: function [36670,36678]"/>
  <match src="primitive_type [60730,60737]" dest="primitive_type [66979,66986]"/>
  <match src="&quot;: &quot; [17658,17659]" dest="&quot;: &quot; [17708,17709]"/>
  <match src="call_expression [28051,28134]" dest="call_expression [28101,28184]"/>
  <match src="call_argument [6616,6635]" dest="call_argument [6666,6685]"/>
  <match src="call_expression [46964,47011]" dest="call_expression [48923,48970]"/>
  <match src="parameter [40658,40667]" dest="parameter [40942,40951]"/>
  <match src="identifier: spender [28827,28834]" dest="identifier: spender [28877,28884]"/>
  <match src="state_mutability [47985,47989]" dest="state_mutability [52331,52335]"/>
  <match src="{: { [1636,1637]" dest="{: { [1686,1687]"/>
  <match src="identifier: token [49882,49887]" dest="identifier: token [55133,55138]"/>
  <match src="comment: // pointer aliasing, and it cannot be disabled. [5487,5534]" dest="comment: // pointer aliasing, and it cannot be disabled. [5537,5584]"/>
  <match src="(: ( [9315,9316]" dest="(: ( [9365,9366]"/>
  <match src="{: { [53948,53949]" dest="{: { [59340,59341]"/>
  <match src="identifier: amount [33395,33401]" dest="identifier: amount [33445,33451]"/>
  <match src="augmented_assignment_expression [41676,41684]" dest="augmented_assignment_expression [41960,41968]"/>
  <match src="): ) [20792,20793]" dest="): ) [20842,20843]"/>
  <match src="constant: constant [44733,44741]" dest="constant: constant [45960,45968]"/>
  <match src="calldata: calldata [59784,59792]" dest="calldata: calldata [64959,64967]"/>
  <match src="(: ( [7961,7962]" dest="(: ( [8011,8012]"/>
  <match src="}: } [38991,38992]" dest="}: } [39275,39276]"/>
  <match src="&quot;: &quot; [51197,51198]" dest="&quot;: &quot; [56167,56168]"/>
  <match src="variable_declaration_statement [55787,55850]" dest="variable_declaration_statement [61225,61288]"/>
  <match src="parameter [48771,48778]" dest="parameter [53631,53638]"/>
  <match src="identifier: mul [58361,58364]" dest="identifier: mul [63527,63530]"/>
  <match src="return_statement [48019,48112]" dest="return_statement [52365,52458]"/>
  <match src="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [11006,11083]" dest="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [11056,11133]"/>
  <match src="call_expression [49871,49889]" dest="call_expression [55122,55140]"/>
  <match src="returns: returns [39632,39639]" dest="returns: returns [39916,39923]"/>
  <match src="(: ( [49219,49220]" dest="(: ( [54470,54471]"/>
  <match src="string [8026,8055]" dest="string [8076,8105]"/>
  <match src="comment: // pragma solidity 0.6.10; [37674,37700]" dest="comment: // pragma solidity 0.6.10; [37878,37904]"/>
  <match src="call_expression [27403,27415]" dest="call_expression [27453,27465]"/>
  <match src="(: ( [48815,48816]" dest="(: ( [53743,53744]"/>
  <match src="+=: += [41382,41384]" dest="+=: += [41666,41668]"/>
  <match src="primitive_type [42278,42284]" dest="primitive_type [42562,42568]"/>
  <match src="): ) [12325,12326]" dest="): ) [12375,12376]"/>
  <match src="=: = [52989,52990]" dest="=: = [58381,58382]"/>
  <match src="): ) [51528,51529]" dest="): ) [56498,56499]"/>
  <match src="inheritance_specifier [43914,43921]" dest="inheritance_specifier [44661,44668]"/>
  <match src="state_mutability [10249,10253]" dest="state_mutability [10299,10303]"/>
  <match src=".: . [54027,54028]" dest=".: . [59419,59420]"/>
  <match src="expression_statement [41289,41299]" dest="expression_statement [41573,41583]"/>
  <match src="function: function [24189,24197]" dest="function: function [24239,24247]"/>
  <match src="{: { [26095,26096]" dest="{: { [26145,26146]"/>
  <match src="(: ( [56988,56989]" dest="(: ( [68680,68681]"/>
  <match src="]: ] [55528,55529]" dest="]: ] [60966,60967]"/>
  <match src="): ) [53616,53617]" dest="): ) [59008,59009]"/>
  <match src="[: [ [29944,29945]" dest="[: [ [29994,29995]"/>
  <match src="call_argument [9652,9662]" dest="call_argument [9702,9712]"/>
  <match src="type_name [44583,44590]" dest="type_name [45330,45337]"/>
  <match src="identifier: to [54999,55001]" dest="identifier: to [60428,60430]"/>
  <match src="call_expression [49932,49950]" dest="call_expression [55183,55201]"/>
  <match src="if_statement [41494,41568]" dest="if_statement [41778,41852]"/>
  <match src="==: == [9658,9660]" dest="==: == [9708,9710]"/>
  <match src="variable_declaration [55787,55803]" dest="variable_declaration [61225,61241]"/>
  <match src="identifier: _name [23791,23796]" dest="identifier: _name [23841,23846]"/>
  <match src="parameter [48243,48250]" dest="parameter [52666,52673]"/>
  <match src="primitive_type [49114,49121]" dest="primitive_type [54365,54372]"/>
  <match src="identifier: spender [26564,26571]" dest="identifier: spender [26614,26621]"/>
  <match src="comment: // Dependency file: contracts/truefi/interface/ITrueLender.sol [38998,39060]" dest="comment: // Dependency file: contracts/truefi/interface/ITrueLender.sol [39282,39344]"/>
  <match src="primitive_type [37412,37419]" dest="primitive_type [37616,37623]"/>
  <match src=".: . [52292,52293]" dest=".: . [57420,57421]"/>
  <match src="(: ( [60275,60276]" dest="(: ( [66463,66464]"/>
  <match src="visibility [21806,21813]" dest="visibility [21856,21863]"/>
  <match src="call_argument [8026,8055]" dest="call_argument [8076,8105]"/>
  <match src="call_expression [49814,49860]" dest="call_expression [55065,55111]"/>
  <match src="function_body [17589,18424]" dest="function_body [17639,18474]"/>
  <match src="type_name [3954,3961]" dest="type_name [4004,4011]"/>
  <match src="call_expression [58295,58360]" dest="call_expression [63461,63526]"/>
  <match src="function_body [48008,48119]" dest="function_body [52354,52465]"/>
  <match src="external: external [1896,1904]" dest="external: external [1946,1954]"/>
  <match src=".: . [31385,31386]" dest=".: . [31435,31436]"/>
  <match src="if: if [41126,41128]" dest="if: if [41410,41412]"/>
  <match src="number_literal: 0 [30680,30681]" dest="number_literal: 0 [30730,30731]"/>
  <match src="): ) [51527,51528]" dest="): ) [56497,56498]"/>
  <match src="comment: // The values being non-zero value makes deployment a bit more expensive, [5542,5615]" dest="comment: // The values being non-zero value makes deployment a bit more expensive, [5592,5665]"/>
  <match src="}: } [35518,35519]" dest="}: } [35722,35723]"/>
  <match src="if_statement [17967,18406]" dest="if_statement [18017,18456]"/>
  <match src="emit: emit [53576,53580]" dest="emit: emit [58968,58972]"/>
  <match src=",: , [23526,23527]" dest=",: , [23576,23577]"/>
  <match src="call_argument [42371,42434]" dest="call_argument [42655,42718]"/>
  <match src="uint256: uint256 [55333,55340]" dest="uint256: uint256 [60762,60769]"/>
  <match src="(: ( [48042,48043]" dest="(: ( [52388,52389]"/>
  <match src="identifier: sender [50805,50811]" dest="identifier: sender [62818,62824]"/>
  <match src="(: ( [14604,14605]" dest="(: ( [14654,14655]"/>
  <match src="type_cast_expression [49898,49917]" dest="type_cast_expression [55149,55168]"/>
  <match src="parameter [39163,39170]" dest="parameter [39447,39454]"/>
  <match src="identifier: distribute [39189,39199]" dest="identifier: distribute [39473,39483]"/>
  <match src="): ) [30434,30435]" dest="): ) [30484,30485]"/>
  <match src="member_expression [30617,30639]" dest="member_expression [30667,30689]"/>
  <match src="identifier: x [40719,40720]" dest="identifier: x [41003,41004]"/>
  <match src="return_type_definition [19227,19249]" dest="return_type_definition [19277,19299]"/>
  <match src="function: function [12191,12199]" dest="function: function [12241,12249]"/>
  <match src="returns: returns [28025,28032]" dest="returns: returns [28075,28082]"/>
  <match src="parameter [56878,56900]" dest="parameter [68055,68078]"/>
  <match src="parameter [39599,39615]" dest="parameter [39883,39899]"/>
  <match src="call_argument [51679,51694]" dest="call_argument [56649,56664]"/>
  <match src="contract_body [39116,39305]" dest="contract_body [39400,39589]"/>
  <match src="call_argument [30640,30646]" dest="call_argument [30690,30696]"/>
  <match src="identifier: fee [49671,49674]" dest="identifier: fee [54922,54925]"/>
  <match src="visibility [11611,11619]" dest="visibility [11661,11669]"/>
  <match src="boolean_literal [27525,27529]" dest="boolean_literal [27575,27579]"/>
  <match src="uint256: uint256 [44527,44534]" dest="uint256: uint256 [45274,45281]"/>
  <match src="state_variable_declaration [44466,44492]" dest="state_variable_declaration [45213,45239]"/>
  <match src="identifier: _lender [48816,48823]" dest="identifier: _lender [54068,54075]"/>
  <match src="call_argument [29875,29881]" dest="call_argument [29925,29931]"/>
  <match src="comment: /**      * @dev Converts the value of a single yCRV into an underlying asset      * @param yAmount amount of curve pool tokens to calculate for      * @return Value of one y pool token      */ [61052,61248]" dest="comment: /**      * @dev Converts the value of a single yCRV into an underlying asset      * @param yAmount amount of curve pool tokens to calculate for      * @return Value of one y pool token      */ [67301,67497]"/>
  <match src="identifier: ______gap [21814,21823]" dest="identifier: ______gap [21864,21873]"/>
  <match src="type_name [31072,31079]" dest="type_name [31122,31129]"/>
  <match src="identifier: number [50688,50694]" dest="identifier: number [55658,55664]"/>
  <match src="uint256: uint256 [39599,39606]" dest="uint256: uint256 [39883,39890]"/>
  <match src="): ) [58263,58264]" dest="): ) [63429,63430]"/>
  <match src="string_literal [47598,47643]" dest="string_literal [49483,49521]"/>
  <match src="return: return [53963,53969]" dest="return: return [59355,59361]"/>
  <match src="type_cast_expression [54400,54460]" dest="type_cast_expression [59792,59852]"/>
  <match src="{: { [42319,42320]" dest="{: { [42603,42604]"/>
  <match src="[: [ [27428,27429]" dest="[: [ [27478,27479]"/>
  <match src="expression_statement [49932,49984]" dest="expression_statement [55183,55235]"/>
  <match src="(: ( [16791,16792]" dest="(: ( [16841,16842]"/>
  <match src="uint256: uint256 [58275,58282]" dest="uint256: uint256 [63441,63448]"/>
  <match src="]: ] [21804,21805]" dest="]: ] [21854,21855]"/>
  <match src="member_expression [55860,55876]" dest="member_expression [61298,61314]"/>
  <match src=",: , [45154,45155]" dest=",: , [46862,46863]"/>
  <match src="array_access [29833,29850]" dest="array_access [29883,29900]"/>
  <match src="identifier: IYToken [36106,36113]" dest="identifier: IYToken [36310,36317]"/>
  <match src="identifier: totalSupply [50458,50469]" dest="identifier: totalSupply [68354,68365]"/>
  <match src=".: . [53007,53008]" dest=".: . [58399,58400]"/>
  <match src="override_specifier [26307,26315]" dest="override_specifier [26357,26365]"/>
  <match src="(: ( [53029,53030]" dest="(: ( [58421,58422]"/>
  <match src="): ) [17625,17626]" dest="): ) [17675,17676]"/>
  <match src="identifier: recipient [27247,27256]" dest="identifier: recipient [27297,27306]"/>
  <match src="identifier: curve [48301,48306]" dest="identifier: curve [52796,52801]"/>
  <match src="augmented_assignment_expression [41196,41205]" dest="augmented_assignment_expression [41480,41489]"/>
  <match src="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [37704,37777]" dest="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [37908,37981]"/>
  <match src="(: ( [41057,41058]" dest="(: ( [41341,41342]"/>
  <match src="binary_expression [35763,35785]" dest="binary_expression [35967,35989]"/>
  <match src="identifier: owner [34738,34743]" dest="identifier: owner [34942,34947]"/>
  <match src="identifier: returndata [17971,17981]" dest="identifier: returndata [18021,18031]"/>
  <match src="identifier: IUniswapRouter [44400,44414]" dest="identifier: IUniswapRouter [45147,45161]"/>
  <match src="assignment_expression [30546,30585]" dest="assignment_expression [30596,30635]"/>
  <match src="returns: returns [48234,48241]" dest="returns: returns [52657,52664]"/>
  <match src="parameter [39513,39533]" dest="parameter [39797,39817]"/>
  <match src="type_name [10919,10926]" dest="type_name [10969,10976]"/>
  <match src="uint256: uint256 [14553,14560]" dest="uint256: uint256 [14603,14610]"/>
  <match src="visibility [24449,24455]" dest="visibility [24499,24505]"/>
  <match src="(: ( [17247,17248]" dest="(: ( [17297,17298]"/>
  <match src="member_expression [51855,51865]" dest="member_expression [56983,56993]"/>
  <match src="call_expression [50497,50508]" dest="call_expression [68393,68404]"/>
  <match src="function: function [26003,26011]" dest="function: function [26053,26061]"/>
  <match src="parameter [56902,56926]" dest="parameter [62348,62359]"/>
  <match src="(: ( [58220,58221]" dest="(: ( [63386,63387]"/>
  <match src=",: , [11598,11599]" dest=",: , [11648,11649]"/>
  <match src="{: { [24485,24486]" dest="{: { [24535,24536]"/>
  <match src=",: , [33355,33356]" dest=",: , [33405,33406]"/>
  <match src="identifier: a [8457,8458]" dest="identifier: a [8507,8508]"/>
  <match src="function_definition [39180,39302]" dest="function_definition [39464,39586]"/>
  <match src="member_expression [53533,53543]" dest="member_expression [58925,58935]"/>
  <match src="type_name [53838,53845]" dest="type_name [59230,59237]"/>
  <match src="function_body [13213,13569]" dest="function_body [13263,13619]"/>
  <match src="function: function [38949,38957]" dest="function: function [39233,39241]"/>
  <match src="state_mutability [48757,48761]" dest="state_mutability [53617,53621]"/>
  <match src="visibility [56928,56936]" dest="visibility [62361,62369]"/>
  <match src="comment: /**      * @dev Emitted when someone joins the pool      * @param staker Account staking      * @param deposited Amount deposited      * @param minted Amount of pool tokens minted      */ [44902,45094]" dest="comment: /**      * @dev Emitted when someone joins the pool      * @param staker Account staking      * @param deposited Amount deposited      * @param minted Amount of pool tokens minted      */ [46610,46802]"/>
  <match src="identifier: transfer [26012,26020]" dest="identifier: transfer [26062,26070]"/>
  <match src="}: } [33427,33428]" dest="}: } [33477,33478]"/>
  <match src="{: { [40387,40388]" dest="{: { [40671,40672]"/>
  <match src="primitive_type [27267,27274]" dest="primitive_type [27317,27324]"/>
  <match src="call_argument [30015,30021]" dest="call_argument [30065,30071]"/>
  <match src="variable_declaration_statement [60907,60967]" dest="variable_declaration_statement [67156,67216]"/>
  <match src="type_name [36951,36958]" dest="type_name [37155,37162]"/>
  <match src="call_argument [56291,56317]" dest="call_argument [61738,61764]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [41962,41965]" dest="&gt;&gt;=: &gt;&gt;= [42246,42249]"/>
  <match src="binary_expression [17971,17992]" dest="binary_expression [18021,18042]"/>
  <match src="(: ( [36600,36601]" dest="(: ( [36804,36805]"/>
  <match src="): ) [37565,37566]" dest="): ) [37769,37770]"/>
  <match src="(: ( [58364,58365]" dest="(: ( [63530,63531]"/>
  <match src="parameter [46869,46889]" dest="parameter [48763,48783]"/>
  <match src="type_name [46801,46812]" dest="type_name [48695,48706]"/>
  <match src="state_variable_declaration [5974,6012]" dest="state_variable_declaration [6024,6062]"/>
  <match src="): ) [48220,48221]" dest="): ) [52643,52644]"/>
  <match src="member_expression [30561,30577]" dest="member_expression [30611,30627]"/>
  <match src="array_access [29958,29978]" dest="array_access [30008,30028]"/>
  <match src="return_type_definition [8417,8434]" dest="return_type_definition [8467,8484]"/>
  <match src="&lt;=: &lt;= [51272,51274]" dest="&lt;=: &lt;= [56242,56244]"/>
  <match src="parameter [48476,48483]" dest="parameter [53337,53344]"/>
  <match src="type_name [12204,12211]" dest="type_name [12254,12261]"/>
  <match src="]: ] [60965,60966]" dest="]: ] [67214,67215]"/>
  <match src="identifier: poolValue [52919,52928]" dest="identifier: poolValue [58311,58320]"/>
  <match src="public: public [44345,44351]" dest="public: public [45092,45098]"/>
  <match src="visibility [44305,44311]" dest="visibility [45052,45058]"/>
  <match src="binary_expression [9652,9662]" dest="binary_expression [9702,9712]"/>
  <match src="event_paramater [45697,45712]" dest="event_paramater [47405,47420]"/>
  <match src="}: } [27536,27537]" dest="}: } [27586,27587]"/>
  <match src="): ) [57746,57747]" dest="): ) [62912,62913]"/>
  <match src="comment: // get rough estimate of how much yCRV we should sell [57768,57821]" dest="comment: // get rough estimate of how much yCRV we should sell [62934,62987]"/>
  <match src="address: address [58221,58228]" dest="address: address [63387,63394]"/>
  <match src="type_cast_expression [30505,30515]" dest="type_cast_expression [30555,30565]"/>
  <match src="uint256: uint256 [61283,61290]" dest="uint256: uint256 [67532,67539]"/>
  <match src=".: . [50569,50570]" dest=".: . [68465,68466]"/>
  <match src="type_name [34333,34340]" dest="type_name [34537,34544]"/>
  <match src="identifier: xc [41582,41584]" dest="identifier: xc [41866,41868]"/>
  <match src="parameter [26260,26273]" dest="parameter [26310,26323]"/>
  <match src="call_argument [34965,34999]" dest="call_argument [35169,35203]"/>
  <match src=",: , [3994,3995]" dest=",: , [4044,4045]"/>
  <match src="primitive_type [55835,55842]" dest="primitive_type [61273,61280]"/>
  <match src="&gt;=: &gt;= [41416,41418]" dest="&gt;=: &gt;= [41700,41702]"/>
  <match src="uint256: uint256 [36626,36633]" dest="uint256: uint256 [36830,36837]"/>
  <match src="primitive_type [47999,48006]" dest="primitive_type [52345,52352]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [41175,41178]" dest="&gt;&gt;=: &gt;&gt;= [41459,41462]"/>
  <match src=",: , [32261,32262]" dest=",: , [32311,32312]"/>
  <match src="member_expression [49932,49958]" dest="member_expression [55183,55209]"/>
  <match src="if: if [17967,17969]" dest="if: if [18017,18019]"/>
  <match src="(: ( [52381,52382]" dest="(: ( [57700,57701]"/>
  <match src="binary_expression [9652,9657]" dest="binary_expression [9702,9707]"/>
  <match src="&lt;=: &lt;= [40721,40723]" dest="&lt;=: &lt;= [41005,41007]"/>
  <match src="): ) [41674,41675]" dest="): ) [41958,41959]"/>
  <match src="!=: != [29623,29625]" dest="!=: != [29673,29675]"/>
  <match src="call_expression [54084,54109]" dest="call_expression [59476,59501]"/>
  <match src="(: ( [34617,34618]" dest="(: ( [34821,34822]"/>
  <match src="primitive_type [31431,31438]" dest="primitive_type [31481,31488]"/>
  <match src="identifier: amount [27455,27461]" dest="identifier: amount [27505,27511]"/>
  <match src="internal: internal [16153,16161]" dest="internal: internal [16203,16211]"/>
  <match src="function_body [20676,21051]" dest="function_body [20726,21101]"/>
  <match src="block_statement [54863,54929]" dest="block_statement [60292,60358]"/>
  <match src="expression_statement [32026,32095]" dest="expression_statement [32076,32145]"/>
  <match src="primitive_type [41728,41734]" dest="primitive_type [42012,42018]"/>
  <match src="type_name [60730,60737]" dest="type_name [66979,66986]"/>
  <match src="comment: /**      * @dev Returns true if `account` is a contract.      *      * [// importANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [12557,13141]" dest="comment: /**      * @dev Returns true if `account` is a contract.      *      * [// importANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [12607,13191]"/>
  <match src="identifier: initializing [21012,21024]" dest="identifier: initializing [21062,21074]"/>
  <match src="interface: interface [39410,39419]" dest="interface: interface [39694,39703]"/>
  <match src="): ) [49208,49209]" dest="): ) [54459,54460]"/>
  <match src="call_argument [58221,58240]" dest="call_argument [63387,63406]"/>
  <match src="identifier: _curvePool [55806,55816]" dest="identifier: _curvePool [61244,61254]"/>
  <match src="comment: // burn tokens sent [51726,51745]" dest="comment: // burn tokens sent [56854,56873]"/>
  <match src="primitive_type [48476,48483]" dest="primitive_type [53337,53344]"/>
  <match src="(: ( [56442,56443]" dest="(: ( [61889,61890]"/>
  <match src="type_cast_expression [32124,32134]" dest="type_cast_expression [32174,32184]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * // importANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [2609,3267]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * // importANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [2659,3317]"/>
  <match src="call_argument [54203,54220]" dest="call_argument [59595,59612]"/>
  <match src="call_argument [55710,55717]" dest="call_argument [61148,61155]"/>
  <match src="identifier: minCurrencyAmount [56234,56251]" dest="identifier: minCurrencyAmount [61672,61689]"/>
  <match src="=: = [29956,29957]" dest="=: = [30006,30007]"/>
  <match src="public: public [35719,35725]" dest="public: public [35923,35929]"/>
  <match src="variable_declaration [8953,8962]" dest="variable_declaration [9003,9012]"/>
  <match src="identifier: Context [23519,23526]" dest="identifier: Context [23569,23576]"/>
  <match src="assignment_expression [31258,31347]" dest="assignment_expression [31308,31397]"/>
  <match src="view: view [13193,13197]" dest="view: view [13243,13247]"/>
  <match src="visibility [56253,56261]" dest="visibility [61691,61699]"/>
  <match src="identifier: mul [54028,54031]" dest="identifier: mul [59420,59423]"/>
  <match src="primitive_type [33387,33394]" dest="primitive_type [33437,33444]"/>
  <match src="primitive_type [31226,31233]" dest="primitive_type [31276,31283]"/>
  <match src="return: return [54878,54884]" dest="return: return [60307,60313]"/>
  <match src="visibility [26056,26062]" dest="visibility [26106,26112]"/>
  <match src="expression_statement [32671,32693]" dest="expression_statement [32721,32743]"/>
  <match src="call_argument [31310,31346]" dest="call_argument [31360,31396]"/>
  <match src="call_expression [55806,55849]" dest="call_expression [61244,61287]"/>
  <match src="identifier: ICurveGauge [46801,46812]" dest="identifier: ICurveGauge [48695,48706]"/>
  <match src="{: { [29597,29598]" dest="{: { [29647,29648]"/>
  <match src="variable_declaration [49156,49188]" dest="variable_declaration [54407,54439]"/>
  <match src="override: override [47801,47809]" dest="override: override [50630,50638]"/>
  <match src="call_expression [42330,42344]" dest="call_expression [42614,42628]"/>
  <match src="view: view [48229,48233]" dest="view: view [52652,52656]"/>
  <match src="return_statement [25757,25783]" dest="return_statement [25807,25833]"/>
  <match src="address: address [23593,23600]" dest="address: address [23643,23650]"/>
  <match src="(: ( [52001,52002]" dest="(: ( [57129,57130]"/>
  <match src="comment: // Look for revert reason and bubble it up if present [17900,17953]" dest="comment: // Look for revert reason and bubble it up if present [17950,18003]"/>
  <match src="function: function [58635,58643]" dest="function: function [63801,63809]"/>
  <match src="call_argument [52220,52250]" dest="call_argument [57348,57378]"/>
  <match src="identifier: transfer [2166,2174]" dest="identifier: transfer [2216,2224]"/>
  <match src="type_name [54373,54380]" dest="type_name [59765,59772]"/>
  <match src="function: function [27946,27954]" dest="function: function [27996,28004]"/>
  <match src="}: } [41483,41484]" dest="}: } [41767,41768]"/>
  <match src="): ) [32172,32173]" dest="): ) [32222,32223]"/>
  <match src="(: ( [42310,42311]" dest="(: ( [42594,42595]"/>
  <match src="identifier: _uniRouter [44422,44432]" dest="identifier: _uniRouter [45169,45179]"/>
  <match src="expression_statement [24341,24356]" dest="expression_statement [24391,24406]"/>
  <match src="identifier: from [54988,54992]" dest="identifier: from [60417,60421]"/>
  <match src="int128: int128 [42278,42284]" dest="int128: int128 [42562,42568]"/>
  <match src="int256: int256 [41102,41108]" dest="int256: int256 [41386,41392]"/>
  <match src="}: } [34807,34808]" dest="}: } [35011,35012]"/>
  <match src="call_argument [32132,32133]" dest="call_argument [32182,32183]"/>
  <match src="-: - [41749,41750]" dest="-: - [42033,42034]"/>
  <match src="identifier: symbol [24644,24650]" dest="identifier: symbol [24694,24700]"/>
  <match src="type_name [23776,23782]" dest="type_name [23826,23832]"/>
  <match src="uint256: uint256 [57831,57838]" dest="uint256: uint256 [62997,63004]"/>
  <match src="(: ( [39137,39138]" dest="(: ( [39421,39422]"/>
  <match src="visibility [19093,19101]" dest="visibility [19143,19151]"/>
  <match src="[: [ [28108,28109]" dest="[: [ [28158,28159]"/>
  <match src="binary_expression [47566,47596]" dest="binary_expression [49451,49481]"/>
  <match src=",: , [39567,39568]" dest=",: , [39851,39852]"/>
  <match src="expression_statement [10939,10968]" dest="expression_statement [10989,11018]"/>
  <match src="return_type_definition [34758,34775]" dest="return_type_definition [34962,34979]"/>
  <match src="ether: ether [48336,48341]" dest="ether: ether [52831,52836]"/>
  <match src="identifier: latestJoinBlock [50653,50668]" dest="identifier: latestJoinBlock [55623,55638]"/>
  <match src="member_expression [57561,57584]" dest="member_expression [62736,62759]"/>
  <match src="if: if [54847,54849]" dest="if: if [60276,60278]"/>
  <match src="call_argument [27463,27505]" dest="call_argument [27513,27555]"/>
  <match src="type_name [48476,48483]" dest="type_name [53337,53344]"/>
  <match src="comment: // On the first call to nonReentrant, _notEntered will be true [6536,6598]" dest="comment: // On the first call to nonReentrant, _notEntered will be true [6586,6648]"/>
  <match src="primitive_type [39266,39273]" dest="primitive_type [39550,39557]"/>
  <match src="function: function [34466,34474]" dest="function: function [34670,34678]"/>
  <match src="internal: internal [14569,14577]" dest="internal: internal [14619,14627]"/>
  <match src="member_expression [48026,48054]" dest="member_expression [52372,52400]"/>
  <match src="): ) [17293,17294]" dest="): ) [17343,17344]"/>
  <match src="memory: memory [12233,12239]" dest="memory: memory [12283,12289]"/>
  <match src="type_name [34244,34251]" dest="type_name [34448,34455]"/>
  <match src="call_argument [29634,29635]" dest="call_argument [29684,29685]"/>
  <match src="+=: += [41635,41637]" dest="+=: += [41919,41921]"/>
  <match src="type_name [3722,3729]" dest="type_name [3772,3779]"/>
  <match src="identifier: require [57269,57276]" dest="identifier: require [62592,62599]"/>
  <match src="call_expression [14589,14662]" dest="call_expression [14639,14712]"/>
  <match src="{: { [54382,54383]" dest="{: { [59774,59775]"/>
  <match src="member_expression [49305,49325]" dest="member_expression [54556,54576]"/>
  <match src=",: , [49856,49857]" dest=",: , [55107,55108]"/>
  <match src="return: return [42037,42043]" dest="return: return [42321,42327]"/>
  <match src="primitive_type [35775,35782]" dest="primitive_type [35979,35986]"/>
  <match src=",: , [53418,53419]" dest=",: , [58810,58811]"/>
  <match src="identifier: liquidValue [48798,48809]" dest="identifier: liquidValue [53726,53737]"/>
  <match src=",: , [9280,9281]" dest=",: , [9330,9331]"/>
  <match src="): ) [55847,55848]" dest="): ) [61285,61286]"/>
  <match src="identifier: addedValue [28122,28132]" dest="identifier: addedValue [28172,28182]"/>
  <match src="return: return [61581,61587]" dest="return: return [67830,67836]"/>
  <match src="primitive_type [8953,8960]" dest="primitive_type [9003,9010]"/>
  <match src="): ) [50226,50227]" dest="): ) [55494,55495]"/>
  <match src="type_name [57722,57729]" dest="type_name [62888,62895]"/>
  <match src="variable_declaration [58275,58292]" dest="variable_declaration [63441,63458]"/>
  <match src="identifier: self [21570,21574]" dest="identifier: self [21620,21624]"/>
  <match src="type_name [23803,23809]" dest="type_name [23853,23859]"/>
  <match src="return_type_definition [19115,19140]" dest="return_type_definition [19165,19190]"/>
  <match src="identifier: size [13423,13427]" dest="identifier: size [13473,13477]"/>
  <match src="primitive_type [2228,2232]" dest="primitive_type [2278,2282]"/>
  <match src="identifier: _mint [50560,50565]" dest="identifier: _mint [68456,68461]"/>
  <match src="function: function [58936,58944]" dest="function: function [64102,64110]"/>
  <match src="state_mutability [10905,10909]" dest="state_mutability [10955,10959]"/>
  <match src="virtual: virtual [35407,35414]" dest="virtual: virtual [35611,35618]"/>
  <match src="private: private [34252,34259]" dest="private: private [34456,34463]"/>
  <match src="identifier: transferFrom [27191,27203]" dest="identifier: transferFrom [27241,27253]"/>
  <match src="primitive_type [39238,39245]" dest="primitive_type [39522,39529]"/>
  <match src="(: ( [8892,8893]" dest="(: ( [8942,8943]"/>
  <match src="identifier: spender [2560,2567]" dest="identifier: spender [2610,2617]"/>
  <match src="primitive_type [53801,53808]" dest="primitive_type [59193,59200]"/>
  <match src="): ) [50470,50471]" dest="): ) [68366,68367]"/>
  <match src="comment: /**      * @dev Throws if called by any account other than the owner.      */ [34816,34895]" dest="comment: /**      * @dev Throws if called by any account other than the owner.      */ [35020,35099]"/>
  <match src="external: external [37446,37454]" dest="external: external [37650,37658]"/>
  <match src="primitive_type [36690,36697]" dest="primitive_type [36894,36901]"/>
  <match src="identifier: account [31217,31224]" dest="identifier: account [31267,31274]"/>
  <match src="user_defined_type [44333,44344]" dest="user_defined_type [45080,45091]"/>
  <match src="identifier: IERC20 [23528,23534]" dest="identifier: IERC20 [23578,23584]"/>
  <match src="return_statement [54939,55013]" dest="return_statement [60368,60442]"/>
  <match src="primitive_type [60778,60785]" dest="primitive_type [67027,67034]"/>
  <match src=",: , [27401,27402]" dest=",: , [27451,27452]"/>
  <match src="(: ( [31915,31916]" dest="(: ( [31965,31966]"/>
  <match src="expression_statement [29833,29925]" dest="expression_statement [29883,29975]"/>
  <match src="comment: /**      * Calculate natural logarithm of x.  Revert if x &lt;= 0.      *      * @param x signed 64.64-bit fixed point number      * @return signed 64.64-bit fixed point number      */ [42074,42260]" dest="comment: /**      * Calculate natural logarithm of x.  Revert if x &lt;= 0.      *      * @param x signed 64.64-bit fixed point number      * @return signed 64.64-bit fixed point number      */ [42358,42544]"/>
  <match src="&gt;: &gt; [41869,41870]" dest="&gt;: &gt; [42153,42154]"/>
  <match src="call_argument [49981,49982]" dest="call_argument [55232,55233]"/>
  <match src="call_argument [51773,51779]" dest="call_argument [56901,56907]"/>
  <match src="}: } [41309,41310]" dest="}: } [41593,41594]"/>
  <match src=".: . [51492,51493]" dest=".: . [56462,56463]"/>
  <match src="identifier: _owner [35492,35498]" dest="identifier: _owner [35696,35702]"/>
  <match src="uint256: uint256 [3307,3314]" dest="uint256: uint256 [3357,3364]"/>
  <match src="identifier: integrateAtPoint [54324,54340]" dest="identifier: integrateAtPoint [59716,59732]"/>
  <match src="call_argument [56547,56554]" dest="call_argument [61994,62001]"/>
  <match src=",: , [37243,37244]" dest=",: , [37447,37448]"/>
  <match src="identifier: currencyBalance [57235,57250]" dest="identifier: currencyBalance [62558,62573]"/>
  <match src="): ) [48068,48069]" dest="): ) [52414,52415]"/>
  <match src="identifier: result [42051,42057]" dest="identifier: result [42335,42341]"/>
  <match src="identifier: _balances [29853,29862]" dest="identifier: _balances [29903,29912]"/>
  <match src="identifier: amount [30370,30376]" dest="identifier: amount [30420,30426]"/>
  <match src="): ) [41248,41249]" dest="): ) [41532,41533]"/>
  <match src="): ) [31144,31145]" dest="): ) [31194,31195]"/>
  <match src="visibility [44237,44243]" dest="visibility [44984,44990]"/>
  <match src="call_expression [26648,26660]" dest="call_expression [26698,26710]"/>
  <match src="primitive_type [21577,21584]" dest="primitive_type [21627,21634]"/>
  <match src="call_expression [52805,52879]" dest="call_expression [58197,58271]"/>
  <match src="return: return [26689,26695]" dest="return: return [26739,26745]"/>
  <match src="call_argument [54408,54459]" dest="call_argument [59800,59851]"/>
  <match src="augmented_assignment_expression [41464,41472]" dest="augmented_assignment_expression [41748,41756]"/>
  <match src="): ) [54160,54161]" dest="): ) [59552,59553]"/>
  <match src=",: , [12213,12214]" dest=",: , [12263,12264]"/>
  <match src="identifier: minter [36758,36764]" dest="identifier: minter [36962,36968]"/>
  <match src="private: private [23711,23718]" dest="private: private [23761,23768]"/>
  <match src="external: external [38794,38802]" dest="external: external [39078,39086]"/>
  <match src="state_mutability [53824,53828]" dest="state_mutability [59216,59220]"/>
  <match src="identifier: currencyToken [47778,47791]" dest="identifier: currencyToken [50607,50620]"/>
  <match src="type_name [17248,17253]" dest="type_name [17298,17303]"/>
  <match src="{: { [32660,32661]" dest="{: { [32710,32711]"/>
  <match src="(: ( [26126,26127]" dest="(: ( [26176,26177]"/>
  <match src="): ) [49233,49234]" dest="): ) [54484,54485]"/>
  <match src="primitive_type [55638,55645]" dest="primitive_type [61076,61083]"/>
  <match src=",: , [58461,58462]" dest=",: , [63627,63628]"/>
  <match src="string_literal [31310,31346]" dest="string_literal [31360,31396]"/>
  <match src=",: , [50811,50812]" dest=",: , [62824,62825]"/>
  <match src="call_expression [14772,14807]" dest="call_expression [14822,14857]"/>
  <match src="identifier: ICurveMinter [44366,44378]" dest="identifier: ICurveMinter [45113,45125]"/>
  <match src="identifier: balanceOf [48045,48054]" dest="identifier: balanceOf [52391,52400]"/>
  <match src="identifier: _curveGauge [48074,48085]" dest="identifier: _curveGauge [52420,52431]"/>
  <match src="identifier: OwnershipTransferred [34281,34301]" dest="identifier: OwnershipTransferred [34485,34505]"/>
  <match src="parameter [24470,24483]" dest="parameter [24520,24533]"/>
  <match src="(: ( [27454,27455]" dest="(: ( [27504,27505]"/>
  <match src="binary_expression [53381,53418]" dest="binary_expression [58773,58810]"/>
  <match src="identifier: sub [54162,54165]" dest="identifier: sub [59554,59557]"/>
  <match src="): ) [46213,46214]" dest="): ) [47921,47922]"/>
  <match src="(: ( [35397,35398]" dest="(: ( [35601,35602]"/>
  <match src="(: ( [57584,57585]" dest="(: ( [62759,62760]"/>
  <match src="comment: // pull tokens from gauge [58060,58085]" dest="comment: // pull tokens from gauge [63226,63251]"/>
  <match src="identifier: mul [50472,50475]" dest="identifier: mul [68368,68371]"/>
  <match src="(: ( [49342,49343]" dest="(: ( [54593,54594]"/>
  <match src="call_argument [28905,28944]" dest="call_argument [28955,28994]"/>
  <match src="type_name [23609,23636]" dest="type_name [23659,23686]"/>
  <match src="{: { [54863,54864]" dest="{: { [60292,60293]"/>
  <match src="return_statement [61581,61647]" dest="return_statement [67830,67896]"/>
  <match src="identifier: setJoiningFee [49481,49494]" dest="identifier: setJoiningFee [54732,54745]"/>
  <match src="}: } [53624,53625]" dest="}: } [59016,59017]"/>
  <match src="public: public [60709,60715]" dest="public: public [66958,66964]"/>
  <match src="parameter [15687,15701]" dest="parameter [15737,15751]"/>
  <match src="array_access [31279,31297]" dest="array_access [31329,31347]"/>
  <match src="extcodesize: extcodesize [21652,21663]" dest="extcodesize: extcodesize [21702,21713]"/>
  <match src="string_literal [49560,49609]" dest="string_literal [54811,54860]"/>
  <match src="if: if [57136,57138]" dest="if: if [62475,62477]"/>
  <match src="type_name [39641,39648]" dest="type_name [39925,39932]"/>
  <match src="expression_statement [47090,47117]" dest="expression_statement [49049,49076]"/>
  <match src="return_type_definition [16729,16751]" dest="return_type_definition [16779,16801]"/>
  <match src="inheritance_specifier [43877,43888]" dest="inheritance_specifier [44624,44635]"/>
  <match src="(: ( [9270,9271]" dest="(: ( [9320,9321]"/>
  <match src="if: if [41227,41229]" dest="if: if [41511,41513]"/>
  <match src="): ) [53047,53048]" dest="): ) [58439,58440]"/>
  <match src="): ) [48327,48328]" dest="): ) [52822,52823]"/>
  <match src="primitive_type [24237,24243]" dest="primitive_type [24287,24293]"/>
  <match src="identifier: x [41114,41115]" dest="identifier: x [41398,41399]"/>
  <match src="returns: returns [19227,19234]" dest="returns: returns [19277,19284]"/>
  <match src="interface: interface [36096,36105]" dest="interface: interface [36300,36309]"/>
  <match src="function: function [60129,60137]" dest="function: function [66308,66316]"/>
  <match src="&quot;: &quot; [20791,20792]" dest="&quot;: &quot; [20841,20842]"/>
  <match src="(: ( [53837,53838]" dest="(: ( [59229,59230]"/>
  <match src="block_statement [60288,60368]" dest="block_statement [66476,66556]"/>
  <match src="): ) [36564,36565]" dest="): ) [36768,36769]"/>
  <match src="address: address [13167,13174]" dest="address: address [13217,13224]"/>
  <match src="parameter [16738,16750]" dest="parameter [16788,16800]"/>
  <match src=",: , [55552,55553]" dest=",: , [60990,60991]"/>
  <match src="parameter [14526,14551]" dest="parameter [14576,14601]"/>
  <match src=",: , [53543,53544]" dest=",: , [58935,58936]"/>
  <match src="address: address [33366,33373]" dest="address: address [33416,33423]"/>
  <match src="identifier: _currencyToken [52002,52016]" dest="identifier: _currencyToken [57130,57144]"/>
  <match src=".: . [51660,51661]" dest=".: . [56630,56631]"/>
  <match src="identifier: c [8961,8962]" dest="identifier: c [9011,9012]"/>
  <match src="(: ( [55332,55333]" dest="(: ( [60761,60762]"/>
  <match src="identifier: amountToWithdraw [52972,52988]" dest="identifier: amountToWithdraw [58364,58380]"/>
  <match src="emit_statement [56662,56683]" dest="emit_statement [62109,62130]"/>
  <match src="&quot;: &quot; [14894,14895]" dest="&quot;: &quot; [14944,14945]"/>
  <match src="identifier: fee [49634,49637]" dest="identifier: fee [54885,54888]"/>
  <match src="parameter [33366,33376]" dest="parameter [33416,33426]"/>
  <match src="primitive_type [40761,40767]" dest="primitive_type [41045,41051]"/>
  <match src="identifier: msg [53588,53591]" dest="identifier: msg [58980,58983]"/>
  <match src="identifier: amount [60348,60354]" dest="identifier: amount [66536,66542]"/>
  <match src="identifier: sender [52837,52843]" dest="identifier: sender [58229,58235]"/>
  <match src="member_expression [54400,54475]" dest="member_expression [59792,59867]"/>
  <match src="type_name [58650,58657]" dest="type_name [63816,63823]"/>
  <match src="type_name [13167,13174]" dest="type_name [13217,13224]"/>
  <match src="): ) [31235,31236]" dest="): ) [31285,31286]"/>
  <match src="(: ( [44571,44572]" dest="(: ( [45318,45319]"/>
  <match src="identifier: _curvePool [56534,56544]" dest="identifier: _curvePool [61981,61991]"/>
  <match src="): ) [41337,41338]" dest="): ) [41621,41622]"/>
  <match src="identifier: _uniRouter [59898,59908]" dest="identifier: _uniRouter [65082,65092]"/>
  <match src="(: ( [49958,49959]" dest="(: ( [55209,55210]"/>
  <match src="primitive_type [16686,16691]" dest="primitive_type [16736,16741]"/>
  <match src="string_literal [17313,17353]" dest="string_literal [17363,17403]"/>
  <match src="expression_statement [50560,50592]" dest="expression_statement [68456,68488]"/>
  <match src="function_body [47547,47664]" dest="function_body [49432,49542]"/>
  <match src="identifier: ICurveGauge [44261,44272]" dest="identifier: ICurveGauge [45008,45019]"/>
  <match src="identifier: c [11102,11103]" dest="identifier: c [11152,11153]"/>
  <match src="string_literal [57977,58048]" dest="string_literal [63143,63214]"/>
  <match src="/: / [10992,10993]" dest="/: / [11042,11043]"/>
  <match src="&quot;: &quot; [54694,54695]" dest="&quot;: &quot; [60123,60124]"/>
  <match src="type_name [41031,41037]" dest="type_name [41315,41321]"/>
  <match src="): ) [59847,59848]" dest="): ) [65031,65032]"/>
  <match src="(: ( [35700,35701]" dest="(: ( [35904,35905]"/>
  <match src="variable_declaration_statement [7982,8000]" dest="variable_declaration_statement [8032,8050]"/>
  <match src="visibility [35719,35725]" dest="visibility [35923,35929]"/>
  <match src="identifier: returndata_size [18295,18310]" dest="identifier: returndata_size [18345,18360]"/>
  <match src="): ) [13211,13212]" dest="): ) [13261,13262]"/>
  <match src="string [14804,14806]" dest="string [14854,14856]"/>
  <match src="state_mutability [1749,1753]" dest="state_mutability [1799,1803]"/>
  <match src="member_expression [58194,58220]" dest="member_expression [63360,63386]"/>
  <match src="number_literal: 8 [41471,41472]" dest="number_literal: 8 [41755,41756]"/>
  <match src=",: , [15789,15790]" dest=",: , [15839,15840]"/>
  <match src="}: } [52075,52076]" dest="}: } [57203,57204]"/>
  <match src="): ) [49978,49979]" dest="): ) [55229,55230]"/>
  <match src="parameter [16686,16703]" dest="parameter [16736,16753]"/>
  <match src="event_paramater [3976,3994]" dest="event_paramater [4026,4044]"/>
  <match src="type_name [48771,48778]" dest="type_name [53631,53638]"/>
  <match src="): ) [53476,53477]" dest="): ) [58868,58869]"/>
  <match src="return_type_definition [3747,3761]" dest="return_type_definition [3797,3811]"/>
  <match src="string [10300,10328]" dest="string [10350,10378]"/>
  <match src="function: function [48432,48440]" dest="function: function [53293,53301]"/>
  <match src=",: , [29720,29721]" dest=",: , [29770,29771]"/>
  <match src="): ) [59976,59977]" dest="): ) [65160,65161]"/>
  <match src="identifier: amount [38568,38574]" dest="identifier: amount [38865,38871]"/>
  <match src="parameter [36493,36518]" dest="parameter [36697,36722]"/>
  <match src="(: ( [41805,41806]" dest="(: ( [42089,42090]"/>
  <match src="uint256: uint256 [17187,17194]" dest="uint256: uint256 [17237,17244]"/>
  <match src="): ) [49232,49233]" dest="): ) [54483,54484]"/>
  <match src="member_expression [54946,54998]" dest="member_expression [60375,60427]"/>
  <match src="add: add [18274,18277]" dest="add: add [18324,18327]"/>
  <match src=".: . [57588,57589]" dest=".: . [62763,62764]"/>
  <match src="call_argument [31422,31429]" dest="call_argument [31472,31479]"/>
  <match src=".: . [49950,49951]" dest=".: . [55201,55202]"/>
  <match src="call_argument [48063,48067]" dest="call_argument [52409,52413]"/>
  <match src="}: } [11705,11706]" dest="}: } [11755,11756]"/>
  <match src="): ) [41155,41156]" dest="): ) [41439,41440]"/>
  <match src="): ) [51887,51888]" dest="): ) [57015,57016]"/>
  <match src="identifier: msg [19159,19162]" dest="identifier: msg [19209,19212]"/>
  <match src="/: / [9654,9655]" dest="/: / [9704,9705]"/>
  <match src="(: ( [51496,51497]" dest="(: ( [56466,56467]"/>
  <match src="identifier: spender [28702,28709]" dest="identifier: spender [28752,28759]"/>
  <match src="member_expression [54999,55005]" dest="member_expression [60428,60434]"/>
  <match src="identifier: _transfer [29485,29494]" dest="identifier: _transfer [29535,29544]"/>
  <match src="identifier: allowance [26250,26259]" dest="identifier: allowance [26300,26309]"/>
  <match src="address: address [33343,33350]" dest="address: address [33393,33400]"/>
  <match src="member_expression [55806,55834]" dest="member_expression [61244,61272]"/>
  <match src="type_name [39486,39493]" dest="type_name [39770,39777]"/>
  <match src="): ) [47346,47347]" dest="): ) [66054,66055]"/>
  <match src=",: , [31224,31225]" dest=",: , [31274,31275]"/>
  <match src="expression_statement [47372,47433]" dest="expression_statement [66077,66185]"/>
  <match src="comment: // import {ICurveGauge, ICurveMinter, ICurvePool} from &quot;contracts/truefi/interface/ICurve.sol&quot;; [42912,43007]" dest="comment: // import {ICurveGauge, ICurveMinter, ICurvePool} from &quot;contracts/truefi/interface/ICurve.sol&quot;; [43478,43573]"/>
  <match src="primitive_type [50249,50256]" dest="primitive_type [55517,55524]"/>
  <match src="identifier: target [15695,15701]" dest="identifier: target [15745,15751]"/>
  <match src="block_statement [41339,41399]" dest="block_statement [41623,41683]"/>
  <match src="identifier: _name [24291,24296]" dest="identifier: _name [24341,24346]"/>
  <match src="primitive_type [23617,23624]" dest="primitive_type [23667,23674]"/>
  <match src="member_expression [50458,50496]" dest="member_expression [68354,68392]"/>
  <match src="type_name [16106,16111]" dest="type_name [16156,16161]"/>
  <match src="): ) [32093,32094]" dest="): ) [32143,32144]"/>
  <match src="modifier_invocation [51121,51133]" dest="modifier_invocation [56091,56103]"/>
  <match src="call_expression [20687,20793]" dest="call_expression [20737,20843]"/>
  <match src="): ) [58672,58673]" dest="): ) [63838,63839]"/>
  <match src="): ) [31996,31997]" dest="): ) [32046,32047]"/>
  <match src="call_argument [16813,16856]" dest="call_argument [16863,16906]"/>
  <match src="identifier: IERC20 [1629,1635]" dest="identifier: IERC20 [1679,1685]"/>
  <match src="visibility [36767,36775]" dest="visibility [36971,36979]"/>
  <match src="identifier: amount [38760,38766]" dest="identifier: amount [39057,39063]"/>
  <match src="string [32055,32093]" dest="string [32105,32143]"/>
  <match src="): ) [52878,52879]" dest="): ) [58270,58271]"/>
  <match src="identifier: _curvePool [58229,58239]" dest="identifier: _curvePool [63395,63405]"/>
  <match src="identifier: target [15783,15789]" dest="identifier: target [15833,15839]"/>
  <match src="[: [ [51184,51185]" dest="[: [ [56154,56155]"/>
  <match src="member_expression [14597,14618]" dest="member_expression [14647,14668]"/>
  <match src="public: public [28010,28016]" dest="public: public [28060,28066]"/>
  <match src="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [36295,36368]" dest="comment: // import {IERC20} from &quot;@openzeppelin/contracts/token/ERC20/IERC20.sol&quot;; [36499,36572]"/>
  <match src="contract_body [1636,4257]" dest="contract_body [1686,4307]"/>
  <match src="string: string [16125,16131]" dest="string: string [16175,16181]"/>
  <match src="number_literal: 0 [29634,29635]" dest="number_literal: 0 [29684,29685]"/>
  <match src=",: , [7926,7927]" dest=",: , [7976,7977]"/>
  <match src="): ) [41753,41754]" dest="): ) [42037,42038]"/>
  <match src="!: ! [20828,20829]" dest="!: ! [20878,20879]"/>
  <match src="identifier: _setupDecimals [32619,32633]" dest="identifier: _setupDecimals [32669,32683]"/>
  <match src="call_expression [17600,17660]" dest="call_expression [17650,17710]"/>
  <match src="address: address [46176,46183]" dest="address: address [47884,47891]"/>
  <match src="number_literal: 1 [41683,41684]" dest="number_literal: 1 [41967,41968]"/>
  <match src="number_literal: 0xB17217F7D1CF79ABC9E3B39803F2F6AF [42392,42426]" dest="number_literal: 0xB17217F7D1CF79ABC9E3B39803F2F6AF [42676,42710]"/>
  <match src="contract_body [36664,36903]" dest="contract_body [36868,37107]"/>
  <match src="event_paramater [46199,46213]" dest="event_paramater [47907,47921]"/>
  <match src="member_expression [57585,57595]" dest="member_expression [62760,62770]"/>
  <match src="identifier: token [48037,48042]" dest="identifier: token [52383,52388]"/>
  <match src=".: . [54421,54422]" dest=".: . [59813,59814]"/>
  <match src="identifier: balanceOf [48086,48095]" dest="identifier: balanceOf [52432,52441]"/>
  <match src="identifier: errorMessage [10954,10966]" dest="identifier: errorMessage [11004,11016]"/>
  <match src="(: ( [49113,49114]" dest="(: ( [54364,54365]"/>
  <match src="returns: returns [60721,60728]" dest="returns: returns [66970,66977]"/>
  <match src="&quot;: &quot; [49608,49609]" dest="&quot;: &quot; [54859,54860]"/>
  <match src="function_body [6525,6958]" dest="function_body [6575,7008]"/>
  <match src="): ) [39291,39292]" dest="): ) [39575,39576]"/>
  <match src="[: [ [52732,52733]" dest="[: [ [58124,58125]"/>
  <match src="): ) [60355,60356]" dest="): ) [66543,66544]"/>
  <match src="): ) [41883,41884]" dest="): ) [42167,42168]"/>
  <match src="interface: interface [36907,36916]" dest="interface: interface [37111,37120]"/>
  <match src="view: view [39149,39153]" dest="view: view [39433,39437]"/>
  <match src="identifier: _balances [31258,31267]" dest="identifier: _balances [31308,31317]"/>
  <match src=",: , [3720,3721]" dest=",: , [3770,3771]"/>
  <match src="type_name [11589,11596]" dest="type_name [11639,11646]"/>
  <match src="identifier: require [42330,42337]" dest="identifier: require [42614,42621]"/>
  <match src="): ) [31396,31397]" dest="): ) [31446,31447]"/>
  <match src="(: ( [50408,50409]" dest="(: ( [68304,68305]"/>
  <match src="(: ( [55894,55895]" dest="(: ( [61332,61333]"/>
  <match src="primitive_type [49156,49163]" dest="primitive_type [54407,54414]"/>
  <match src="): ) [50426,50427]" dest="): ) [68322,68323]"/>
  <match src="return: return [25581,25587]" dest="return: return [25631,25637]"/>
  <match src="uint256: uint256 [12215,12222]" dest="uint256: uint256 [12265,12272]"/>
  <match src="parameter [56209,56224]" dest="parameter [61647,61662]"/>
  <match src="type_name [60907,60914]" dest="type_name [67156,67163]"/>
  <match src="identifier: functionCall [15674,15686]" dest="identifier: functionCall [15724,15736]"/>
  <match src="): ) [53058,53059]" dest="): ) [58450,58451]"/>
  <match src="(: ( [36625,36626]" dest="(: ( [36829,36830]"/>
  <match src="(: ( [50420,50421]" dest="(: ( [68316,68317]"/>
  <match src="}: } [39669,39670]" dest="}: } [39953,39954]"/>
  <match src="parameter [37379,37387]" dest="parameter [37583,37591]"/>
  <match src="): ) [42286,42287]" dest="): ) [42570,42571]"/>
  <match src="call_expression [28849,28945]" dest="call_expression [28899,28995]"/>
  <match src="return_type_definition [36548,36565]" dest="return_type_definition [36752,36769]"/>
  <match src="identifier: amountToDeposit [50257,50272]" dest="identifier: mintedAmount [55525,55537]"/>
  <match src="type_name [39599,39606]" dest="type_name [39883,39890]"/>
  <match src="number_literal: 1 [41882,41883]" dest="number_literal: 1 [42166,42167]"/>
  <match src="return: return [25419,25425]" dest="return: return [25469,25475]"/>
  <match src="{: { [35744,35745]" dest="{: { [35948,35949]"/>
  <match src="primitive_type [34244,34251]" dest="primitive_type [34448,34455]"/>
  <match src="return_statement [8069,8078]" dest="return_statement [8119,8128]"/>
  <match src="primitive_type [8820,8827]" dest="primitive_type [8870,8877]"/>
  <match src="identifier: token [55871,55876]" dest="identifier: token [61309,61314]"/>
  <match src="state_mutability [42297,42301]" dest="state_mutability [42581,42585]"/>
  <match src="identifier: spender [27981,27988]" dest="identifier: spender [28031,28038]"/>
  <match src="comment: // under construction or not. [21523,21552]" dest="comment: // under construction or not. [21573,21602]"/>
  <match src=",: , [52743,52744]" dest=",: , [58135,58136]"/>
  <match src="identifier: ICurvePool [37048,37058]" dest="identifier: ICurvePool [37252,37262]"/>
  <match src="identifier: resetApprovals [49767,49781]" dest="identifier: resetApprovals [55018,55032]"/>
  <match src="comment: // ===== THIS CONTRACT IS INITIALIZABLE ====== [44016,44062]" dest="comment: // ===== THIS CONTRACT IS INITIALIZABLE ====== [44763,44809]"/>
  <match src="contract_declaration [5135,6961]" dest="contract_declaration [5185,7011]"/>
  <match src="): ) [27414,27415]" dest="): ) [27464,27465]"/>
  <match src="event: event [45324,45329]" dest="event: event [47032,47037]"/>
  <match src="): ) [39138,39139]" dest="): ) [39422,39423]"/>
  <match src="identifier: transferFrom [3674,3686]" dest="identifier: transferFrom [3724,3736]"/>
  <match src="}: } [53986,53987]" dest="}: } [59378,59379]"/>
  <match src="parameter [17575,17587]" dest="parameter [17625,17637]"/>
  <match src="function: function [48729,48737]" dest="function: function [53589,53597]"/>
  <match src="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [28994,29470]" dest="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [29044,29520]"/>
  <match src="primitive_type [17168,17173]" dest="primitive_type [17218,17223]"/>
  <match src="comment: /**      * @dev Deposit idle funds into curve.fi pool and stake in gauge      * Called by owner to help manage funds in pool and save on gas for deposits      * @param currencyAmount Amount of funds to deposit into curve      * @param minMintAmount Minimum amount to mint      */ [55028,55312]" dest="comment: /**      * @dev Deposit idle funds into curve.fi pool and stake in gauge      * Called by owner to help manage funds in pool and save on gas for deposits      * @param currencyAmount Amount of funds to deposit into curve      * @param minMintAmount Minimum amount to mint      */ [60457,60741]"/>
  <match src="identifier: initialized [20731,20742]" dest="identifier: initialized [20781,20792]"/>
  <match src="boolean_literal [20935,20939]" dest="boolean_literal [20985,20989]"/>
  <match src="}: } [59029,59030]" dest="}: } [64204,64205]"/>
  <match src="type_name [45962,45969]" dest="type_name [47670,47677]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [7665,7898]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [7715,7948]"/>
  <match src="call_argument [59857,59876]" dest="call_argument [65041,65060]"/>
  <match src="int128: int128 [42364,42370]" dest="int128: int128 [42648,42654]"/>
  <match src="identifier: deposit [55941,55948]" dest="identifier: deposit [61379,61386]"/>
  <match src="binary_expression [41058,41063]" dest="binary_expression [41342,41347]"/>
  <match src="type_name [41923,41930]" dest="type_name [42207,42214]"/>
  <match src="call_argument [17313,17353]" dest="call_argument [17363,17403]"/>
  <match src=",: , [46197,46198]" dest=",: , [47905,47906]"/>
  <match src="member_expression [55615,55637]" dest="member_expression [61053,61075]"/>
  <match src="identifier: yTokenValue [48208,48219]" dest="identifier: yTokenValue [52631,52642]"/>
  <match src="(: ( [59864,59865]" dest="(: ( [65048,65049]"/>
  <match src="comment: // prettier-ignore [56698,56716]" dest="comment: // prettier-ignore [62145,62163]"/>
  <match src="call_argument [59979,60004]" dest="call_argument [65163,65188]"/>
  <match src="&quot;: &quot; [30469,30470]" dest="&quot;: &quot; [30519,30520]"/>
  <match src="expression_statement [56412,56452]" dest="expression_statement [61859,61899]"/>
  <match src="modifier_definition [6501,6958]" dest="modifier_definition [6551,7008]"/>
  <match src="comment: /**      * @dev Emitted when funds are flushed into curve.fi      * @param currencyAmount Amount of tokens deposited      */ [45385,45512]" dest="comment: /**      * @dev Emitted when funds are flushed into curve.fi      * @param currencyAmount Amount of tokens deposited      */ [47093,47220]"/>
  <match src="returns: returns [53829,53836]" dest="returns: returns [59221,59228]"/>
  <match src="uint256: uint256 [54057,54064]" dest="uint256: uint256 [59449,59456]"/>
  <match src="modifier: modifier [47525,47533]" dest="modifier: modifier [49410,49418]"/>
  <match src="inheritance_specifier [43890,43895]" dest="inheritance_specifier [44637,44642]"/>
  <match src="(: ( [53354,53355]" dest="(: ( [58746,58747]"/>
  <match src="identifier: mul [9267,9270]" dest="identifier: mul [9317,9320]"/>
  <match src="assignment_expression [47199,47229]" dest="assignment_expression [49158,49188]"/>
  <match src="type_name [33366,33373]" dest="type_name [33416,33423]"/>
  <match src="call_expression [28800,28812]" dest="call_expression [28850,28862]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [41357,41360]" dest="&gt;&gt;=: &gt;&gt;= [41641,41644]"/>
  <match src="=: = [49632,49633]" dest="=: = [54883,54884]"/>
  <match src="uint256: uint256 [38964,38971]" dest="uint256: uint256 [39248,39255]"/>
  <match src="primitive_type [14597,14604]" dest="primitive_type [14647,14654]"/>
  <match src="binary_expression [49546,49558]" dest="binary_expression [54797,54809]"/>
  <match src="(: ( [45336,45337]" dest="(: ( [47044,47045]"/>
  <match src="(: ( [61320,61321]" dest="(: ( [67569,67570]"/>
  <match src="identifier: allowance [2527,2536]" dest="identifier: allowance [2577,2586]"/>
  <match src="identifier: ux [41959,41961]" dest="identifier: ux [42243,42245]"/>
  <match src="identifier: bit [41839,41842]" dest="identifier: bit [42123,42126]"/>
  <match src="assignment_expression [24291,24303]" dest="assignment_expression [24341,24353]"/>
  <match src="number_literal: 50000 [54465,54470]" dest="number_literal: 50000 [59857,59862]"/>
  <match src="identifier: msgSender [34528,34537]" dest="identifier: msgSender [34732,34741]"/>
  <match src="call_argument [54032,54037]" dest="call_argument [59424,59429]"/>
  <match src="primitive_type [25737,25744]" dest="primitive_type [25787,25794]"/>
  <match src="inheritance_specifier [34214,34227]" dest="inheritance_specifier [34418,34431]"/>
  <match src="parameter [28711,28734]" dest="parameter [28761,28784]"/>
  <match src="parameter [8381,8390]" dest="parameter [8431,8440]"/>
  <match src="identifier: ABDKMath64x64 [40373,40386]" dest="identifier: ABDKMath64x64 [40657,40670]"/>
  <match src="user_defined_type [23504,23517]" dest="user_defined_type [23554,23567]"/>
  <match src="expression_statement [52805,52880]" dest="expression_statement [58197,58272]"/>
  <match src="string [53113,53155]" dest="string [58505,58547]"/>
  <match src="returns: returns [47815,47822]" dest="returns: returns [50644,50651]"/>
  <match src="call_expression [58403,58492]" dest="call_expression [63569,63658]"/>
  <match src="call_expression [51654,51713]" dest="call_expression [56624,56683]"/>
  <match src="member_expression [52274,52301]" dest="member_expression [57402,57429]"/>
  <match src="call_argument [55895,55906]" dest="call_argument [61333,61344]"/>
  <match src="identifier: _curvePool [47407,47417]" dest="identifier: this [66151,66155]"/>
  <match src="identifier: b [10994,10995]" dest="identifier: b [11044,11045]"/>
  <match src="visibility [36966,36974]" dest="visibility [37170,37178]"/>
  <match src="augmented_assignment_expression [41354,41363]" dest="augmented_assignment_expression [41638,41647]"/>
  <match src="(: ( [27394,27395]" dest="(: ( [27444,27445]"/>
  <match src="identifier: account [31422,31429]" dest="identifier: account [31472,31479]"/>
  <match src=",: , [31236,31237]" dest=",: , [31286,31287]"/>
  <match src="number_literal: 50 [54913,54915]" dest="number_literal: 50 [60342,60344]"/>
  <match src="call_expression [10290,10329]" dest="call_expression [10340,10379]"/>
  <match src="parameter [24237,24257]" dest="parameter [24287,24307]"/>
  <match src="parameter [56226,56251]" dest="parameter [61664,61689]"/>
  <match src="type_name [36824,36831]" dest="type_name [37028,37035]"/>
  <match src="primitive_type [46176,46183]" dest="primitive_type [47884,47891]"/>
  <match src="expression_statement [34563,34582]" dest="expression_statement [34767,34786]"/>
  <match src="primitive_type [9282,9289]" dest="primitive_type [9332,9339]"/>
  <match src="(: ( [35782,35783]" dest="(: ( [35986,35987]"/>
  <match src="identifier: amount [53216,53222]" dest="identifier: amount [58608,58614]"/>
  <match src="parameter [36732,36739]" dest="parameter [36936,36943]"/>
  <match src="): ) [29578,29579]" dest="): ) [29628,29629]"/>
  <match src="primitive_type [3756,3760]" dest="primitive_type [3806,3810]"/>
  <match src="identifier: amount [27368,27374]" dest="identifier: amount [27418,27424]"/>
  <match src="primitive_type [57722,57729]" dest="primitive_type [62888,62895]"/>
  <match src="expression_statement [35492,35512]" dest="expression_statement [35696,35716]"/>
  <match src="call_argument [61021,61029]" dest="call_argument [67270,67278]"/>
  <match src="): ) [58774,58775]" dest="): ) [63940,63941]"/>
  <match src="function_body [46953,47440]" dest="function_body [48912,49325]"/>
  <match src="identifier: currencyBalance [51511,51526]" dest="identifier: currencyBalance [56481,56496]"/>
  <match src="primitive_type [56226,56233]" dest="primitive_type [61664,61671]"/>
  <match src="): ) [53110,53111]" dest="): ) [58502,58503]"/>
  <match src="memory: memory [17581,17587]" dest="memory: memory [17631,17637]"/>
  <match src="return: return [34787,34793]" dest="return: return [34991,34997]"/>
  <match src="number_literal: 0 [41062,41063]" dest="number_literal: 0 [41346,41347]"/>
  <match src="type_name [33343,33350]" dest="type_name [33393,33400]"/>
  <match src="): ) [18389,18390]" dest="): ) [18439,18440]"/>
  <match src=",: , [17510,17511]" dest=",: , [17560,17561]"/>
  <match src="uint256: uint256 [10846,10853]" dest="uint256: uint256 [10896,10903]"/>
  <match src="&gt;&gt;=: &gt;&gt;= [41444,41447]" dest="&gt;&gt;=: &gt;&gt;= [41728,41731]"/>
  <match src="{: { [36664,36665]" dest="{: { [36868,36869]"/>
  <match src="identifier: roughCurveTokenAmount [57839,57860]" dest="identifier: roughCurveTokenAmount [63005,63026]"/>
  <match src="): ) [17428,17429]" dest="): ) [17478,17479]"/>
  <match src=",: , [59876,59877]" dest=",: , [65060,65061]"/>
  <match src="identifier: _curveGauge [55895,55906]" dest="identifier: _curveGauge [61333,61344]"/>
  <match src="returns: returns [36776,36783]" dest="returns: returns [36980,36987]"/>
  <match src="returns: returns [54645,54652]" dest="returns: returns [60074,60081]"/>
  <match src="comment: /**      * @dev sets all token allowances used to 0      */ [49691,49752]" dest="comment: /**      * @dev sets all token allowances used to 0      */ [54942,55003]"/>
  <match src="binary_expression [40768,40775]" dest="binary_expression [41052,41059]"/>
  <match src=",: , [28072,28073]" dest=",: , [28122,28123]"/>
  <match src="memory: memory [16744,16750]" dest="memory: memory [16794,16800]"/>
  <match src="identifier: require [52805,52812]" dest="identifier: require [58197,58204]"/>
  <match src="uint256: uint256 [50301,50308]" dest="uint256: uint256 [56741,56748]"/>
  <match src="): ) [28038,28039]" dest="): ) [28088,28089]"/>
  <match src="memory: memory [15746,15752]" dest="memory: memory [15796,15802]"/>
  <match src="if_statement [54736,54837]" dest="if_statement [60165,60266]"/>
  <match src=".: . [51288,51289]" dest=".: . [56258,56259]"/>
  <match src="): ) [59021,59022]" dest="): ) [64196,64197]"/>
  <match src="primitive_type [3954,3961]" dest="primitive_type [4004,4011]"/>
  <match src="call_expression [50275,50290]" dest="call_expression [55545,55560]"/>
  <match src="address: address [49898,49905]" dest="address: address [55149,55156]"/>
  <match src="(: ( [53203,53204]" dest="(: ( [58595,58596]"/>
  <match src="string [34965,34999]" dest="string [35169,35203]"/>
  <match src="=: = [6095,6096]" dest="=: = [6145,6146]"/>
  <match src="(: ( [6522,6523]" dest="(: ( [6572,6573]"/>
  <match src="type_name [1879,1886]" dest="type_name [1929,1936]"/>
  <match src="comment: // if curve tokens remaining, transfer [52086,52124]" dest="comment: // if curve tokens remaining, transfer [57214,57252]"/>
  <match src="(: ( [17280,17281]" dest="(: ( [17330,17331]"/>
  <match src="assembly_statement [21622,21680]" dest="assembly_statement [21672,21730]"/>
  <match src="(: ( [49966,49967]" dest="(: ( [55217,55218]"/>
  <match src="function_definition [61254,61410]" dest="function_definition [67503,67659]"/>
  <match src="uint256: uint256 [9282,9289]" dest="uint256: uint256 [9332,9339]"/>
  <match src="identifier: isTopLevelCall [20811,20825]" dest="identifier: isTopLevelCall [20861,20875]"/>
  <match src="type_name [61561,61568]" dest="type_name [67810,67817]"/>
  <match src="binary_expression [60276,60286]" dest="binary_expression [66464,66474]"/>
  <match src="variable_declaration_statement [54057,54130]" dest="variable_declaration_statement [59449,59522]"/>
  <match src="primitive_type [10846,10853]" dest="primitive_type [10896,10903]"/>
  <match src="identifier: yTokenAmount [60786,60798]" dest="identifier: yTokenAmount [67035,67047]"/>
  <match src="number_literal: 2 [41615,41616]" dest="number_literal: 2 [41899,41900]"/>
  <match src="type_cast_expression [59964,59977]" dest="type_cast_expression [65148,65161]"/>
  <match src="(: ( [36997,36998]" dest="(: ( [37201,37202]"/>
  <match src="return_type_definition [39632,39666]" dest="return_type_definition [39916,39950]"/>
  <match src="primitive_type [17477,17484]" dest="primitive_type [17527,17534]"/>
  <match src="function_definition [27182,27537]" dest="function_definition [27232,27587]"/>
  <match src="(: ( [41744,41745]" dest="(: ( [42028,42029]"/>
  <match src="internal: internal [32651,32659]" dest="internal: internal [32701,32709]"/>
  <match src="(: ( [29717,29718]" dest="(: ( [29767,29768]"/>
  <match src="number_literal: 0x7FFFFFFFFFFFFFFF [40724,40742]" dest="number_literal: 0x7FFFFFFFFFFFFFFF [41008,41026]"/>
  <match src="identifier: _msgSender [28060,28070]" dest="identifier: _msgSender [28110,28120]"/>
  <match src="&quot;: &quot; [51244,51245]" dest="&quot;: &quot; [56214,56215]"/>
  <match src="identifier: b [10865,10866]" dest="identifier: b [10915,10916]"/>
  <match src="identifier: nonReentrant [6510,6522]" dest="identifier: nonReentrant [6560,6572]"/>
  <match src="call_argument [50813,50819]" dest="call_argument [62826,62832]"/>
  <match src="identifier: account [31268,31275]" dest="identifier: account [31318,31325]"/>
  <match src="augmented_assignment_expression [41265,41274]" dest="augmented_assignment_expression [41549,41558]"/>
  <match src="number_literal: 64 [40773,40775]" dest="number_literal: 64 [41057,41059]"/>
  <match src="parameter [37116,37139]" dest="parameter [37320,37343]"/>
  <match src="comment: // prettier-ignore [50850,50868]" dest="comment: // prettier-ignore [55820,55838]"/>
  <match src="uint256: uint256 [36875,36882]" dest="uint256: uint256 [37079,37086]"/>
  <match src=".: . [17294,17295]" dest=".: . [17344,17345]"/>
  <match src="identifier: x [41005,41006]" dest="identifier: x [41289,41290]"/>
  <match src="call_expression [27437,27449]" dest="call_expression [27487,27499]"/>
  <match src="comment: /**      * @dev Indicates that the contract is in the process of being initialized.      */ [20430,20523]" dest="comment: /**      * @dev Indicates that the contract is in the process of being initialized.      */ [20480,20573]"/>
  <match src="function_definition [39442,39667]" dest="function_definition [39726,39951]"/>
  <match src=".: . [48085,48086]" dest=".: . [52431,52432]"/>
  <match src="identifier: gauge [36959,36964]" dest="identifier: gauge [37163,37168]"/>
  <match src=",: , [8024,8025]" dest=",: , [8074,8075]"/>
  <match src="}: } [19176,19177]" dest="}: } [19226,19227]"/>
  <match src="(: ( [7916,7917]" dest="(: ( [7966,7967]"/>
  <match src="event: event [45100,45105]" dest="event: event [46808,46813]"/>
  <match src=",: , [47596,47597]" dest=",: , [49481,49482]"/>
  <match src="function_body [48252,48350]" dest="function_body [52675,52845]"/>
  <match src=".: . [49338,49339]" dest=".: . [54589,54590]"/>
  <match src="identifier: amount [60276,60282]" dest="identifier: amount [66464,66470]"/>
  <match src="emit: emit [52370,52374]" dest="emit: emit [57689,57693]"/>
  <match src="expression_statement [47240,47265]" dest="expression_statement [49199,49224]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [14675,14743]" dest="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [14725,14793]"/>
  <match src="(: ( [53508,53509]" dest="(: ( [58900,58901]"/>
  <match src="identifier: xc [41498,41500]" dest="identifier: xc [41782,41784]"/>
  <match src="expression_statement [41631,41640]" dest="expression_statement [41915,41924]"/>
  <match src="expression_statement [41988,42014]" dest="expression_statement [42272,42298]"/>
  <match src="call_argument [8457,8458]" dest="call_argument [8507,8508]"/>
  <match src="identifier: div [57907,57910]" dest="identifier: div [63073,63076]"/>
  <match src="identifier: _beforeTokenTransfer [29773,29793]" dest="identifier: _beforeTokenTransfer [29823,29843]"/>
  <match src="primitive_type [23671,23678]" dest="primitive_type [23721,23728]"/>
  <match src="call_argument [26130,26139]" dest="call_argument [26180,26189]"/>
  <match src="type_name [26040,26047]" dest="type_name [26090,26097]"/>
  <match src="call_argument [53113,53155]" dest="call_argument [58505,58547]"/>
  <match src="type_name [45337,45344]" dest="type_name [47045,47052]"/>
  <match src="}: } [21043,21044]" dest="}: } [21093,21094]"/>
  <match src="identifier: _curveGauge [49967,49978]" dest="identifier: _curveGauge [55218,55229]"/>
  <match src=".: . [55878,55879]" dest=".: . [61316,61317]"/>
  <match src="type_name [46199,46206]" dest="type_name [47907,47914]"/>
  <match src="event_paramater [46429,46443]" dest="event_paramater [48137,48151]"/>
  <match src="primitive_type [9316,9323]" dest="primitive_type [9366,9373]"/>
  <match src="primitive_type [60201,60208]" dest="primitive_type [66389,66396]"/>
  <match src="return_type_definition [47990,48007]" dest="return_type_definition [52336,52353]"/>
  <match src="=: = [41843,41844]" dest="=: = [42127,42128]"/>
  <match src="call_argument [14804,14806]" dest="call_argument [14854,14856]"/>
  <match src="identifier: i [37386,37387]" dest="identifier: i [37590,37591]"/>
  <match src=".: . [51695,51696]" dest=".: . [56665,56666]"/>
  <match src="type_name [37235,37241]" dest="type_name [37439,37445]"/>
  <match src="override_specifier [26604,26612]" dest="override_specifier [26654,26662]"/>
  <match src="identifier: target [17395,17401]" dest="identifier: target [17445,17451]"/>
  <match src="member_expression [46964,46988]" dest="member_expression [48923,48947]"/>
  <match src="=: = [8963,8964]" dest="=: = [9013,9014]"/>
  <match src="returns: returns [10254,10261]" dest="returns: returns [10304,10311]"/>
  <match src="binary_expression [10990,10995]" dest="binary_expression [11040,11045]"/>
  <match src="call_argument [42011,42012]" dest="call_argument [42295,42296]"/>
  <match src="(: ( [52700,52701]" dest="(: ( [58092,58093]"/>
  <match src="identifier: _totalSupply [51534,51546]" dest="identifier: _totalSupply [56504,56516]"/>
  <match src="primitive_type [57831,57838]" dest="primitive_type [62997,63004]"/>
  <match src="state_mutability [54640,54644]" dest="state_mutability [60069,60073]"/>
  <match src="): ) [58147,58148]" dest="): ) [63313,63314]"/>
  <match src="type_cast_expression [31226,31236]" dest="type_cast_expression [31276,31286]"/>
  <match src="): ) [57252,57253]" dest="): ) [62575,62576]"/>
  <match src="(: ( [42371,42372]" dest="(: ( [42655,42656]"/>
  <match src="primitive_type [25561,25568]" dest="primitive_type [25611,25618]"/>
  <match src="address: address [3290,3297]" dest="address: address [3340,3347]"/>
  <match src="type_cast_expression [21577,21590]" dest="type_cast_expression [21627,21640]"/>
  <match src="==: == [9563,9565]" dest="==: == [9613,9615]"/>
  <match src="indexed: indexed [4199,4206]" dest="indexed: indexed [4249,4256]"/>
  <match src="identifier: nonReentrant [51121,51133]" dest="identifier: nonReentrant [56091,56103]"/>
  <match src="primitive_type [12204,12211]" dest="primitive_type [12254,12261]"/>
  <match src="): ) [48748,48749]" dest="): ) [53608,53609]"/>
  <match src="(: ( [56533,56534]" dest="(: ( [61980,61981]"/>
  <match src="memory: memory [16177,16183]" dest="memory: memory [16227,16233]"/>
  <match src="&quot;: &quot; [53420,53421]" dest="&quot;: &quot; [58812,58813]"/>
  <match src="call_expression [53509,53562]" dest="call_expression [58901,58954]"/>
  <match src="type_name [10218,10225]" dest="type_name [10268,10275]"/>
  <match src="call_expression [48270,48342]" dest="call_expression [52765,52837]"/>
  <match src="function: function [57688,57696]" dest="function: function [62854,62862]"/>
  <match src=".: . [50631,50632]" dest=".: . [55601,55602]"/>
  <match src="internal: internal [15722,15730]" dest="internal: internal [15772,15780]"/>
  <match src="(: ( [42370,42371]" dest="(: ( [42654,42655]"/>
  <match src="return: return [21690,21696]" dest="return: return [21740,21746]"/>
  <match src="public: public [48222,48228]" dest="public: public [52645,52651]"/>
  <match src="(: ( [58383,58384]" dest="(: ( [63549,63550]"/>
  <match src="type_name [25561,25568]" dest="type_name [25611,25618]"/>
  <match src="identifier: _totalSupply [30546,30558]" dest="identifier: _totalSupply [30596,30608]"/>
  <match src="(: ( [31123,31124]" dest="(: ( [31173,31174]"/>
  <match src="type_name [25737,25744]" dest="type_name [25787,25794]"/>
  <match src="identifier: msg [51285,51288]" dest="identifier: msg [56255,56258]"/>
  <match src="}: } [28163,28164]" dest="}: } [28213,28214]"/>
  <match src="): ) [54481,54482]" dest="): ) [59873,59874]"/>
  <match src="call_expression [34951,34963]" dest="call_expression [35155,35167]"/>
  <match src="identifier: amountOutMin [39521,39533]" dest="identifier: amountOutMin [39805,39817]"/>
  <match src="primitive_type [36951,36958]" dest="primitive_type [37155,37162]"/>
  <match src="{: { [18182,18183]" dest="{: { [18232,18233]"/>
  <match src="function: function [49074,49082]" dest="function: function [54325,54333]"/>
  <match src="call_argument [8460,8461]" dest="call_argument [8510,8511]"/>
  <match src="function_definition [37541,37599]" dest="function_definition [37745,37803]"/>
  <match src="(: ( [38340,38341]" dest="(: ( [38637,38638]"/>
  <match src="binary_expression [9561,9567]" dest="binary_expression [9611,9617]"/>
  <match src=",: , [45978,45979]" dest=",: , [47686,47687]"/>
  <match src="identifier: sender [50570,50576]" dest="identifier: sender [68466,68472]"/>
  <match src="): ) [36707,36708]" dest="): ) [36911,36912]"/>
  <match src="internal: internal [11611,11619]" dest="internal: internal [11661,11669]"/>
  <match src=",: , [57595,57596]" dest=",: , [62770,62771]"/>
  <match src="call_expression [10939,10967]" dest="call_expression [10989,11017]"/>
  <match src="type_name [9282,9289]" dest="type_name [9332,9339]"/>
  <match src="comment: /**      * @dev See {IERC20-totalSupply}.      */ [25451,25502]" dest="comment: /**      * @dev See {IERC20-totalSupply}.      */ [25501,25552]"/>
  <match src="identifier: ux [41779,41781]" dest="identifier: ux [42063,42065]"/>
  <match src="type_name [21562,21569]" dest="type_name [21612,21619]"/>
  <match src="address: address [27973,27980]" dest="address: address [28023,28030]"/>
  <match src="comment: // yield zero, making it an effective way to detect if a contract is [21445,21513]" dest="comment: // yield zero, making it an effective way to detect if a contract is [21495,21563]"/>
  <match src="parameter [32634,32649]" dest="parameter [32684,32699]"/>
  <match src="member_expression [54114,54120]" dest="member_expression [59506,59512]"/>
  <match src="): ) [55010,55011]" dest="): ) [60439,60440]"/>
  <match src="type_name [26622,26626]" dest="type_name [26672,26676]"/>
  <match src="comment: // stake yCurve tokens in gauge [55746,55777]" dest="comment: // stake yCurve tokens in gauge [61184,61215]"/>
  <match src="variable_declaration_statement [53997,54047]" dest="variable_declaration_statement [59389,59439]"/>
  <match src="event: event [4176,4181]" dest="event: event [4226,4231]"/>
  <match src="expression_statement [53373,53478]" dest="expression_statement [58765,58870]"/>
  <match src="identifier: totalSupply [51367,51378]" dest="identifier: totalSupply [56337,56348]"/>
  <match src="identifier: amount [50275,50281]" dest="identifier: amount [55545,55551]"/>
  <match src="visibility [38576,38584]" dest="visibility [38873,38881]"/>
  <match src="array_access [29935,29955]" dest="array_access [29985,30005]"/>
  <match src="returns: returns [37014,37021]" dest="returns: returns [37218,37225]"/>
  <match src="indexed: indexed [3962,3969]" dest="indexed: indexed [4012,4019]"/>
  <match src="string [6637,6670]" dest="string [6687,6720]"/>
  <match src="identifier: ReentrancyGuard [43897,43912]" dest="identifier: ReentrancyGuard [44644,44659]"/>
  <match src="(: ( [15686,15687]" dest="(: ( [15736,15737]"/>
  <match src="modifier_invocation [58967,58976]" dest="modifier_invocation [51527,51536]"/>
  <match src="event_definition [34275,34359]" dest="event_definition [34479,34563]"/>
  <match src="identifier: _owner [35893,35899]" dest="identifier: _owner [36097,36103]"/>
  <match src="type_name [12226,12232]" dest="type_name [12276,12282]"/>
  <match src="parameter [42311,42317]" dest="parameter [42595,42601]"/>
  <match src="call_argument [29638,29677]" dest="call_argument [29688,29727]"/>
  <match src="{: { [40700,40701]" dest="{: { [40984,40985]"/>
  <match src="returns: returns [37516,37523]" dest="returns: returns [37720,37727]"/>
  <match src="return_type_definition [1910,1927]" dest="return_type_definition [1960,1977]"/>
  <match src="array_access [28083,28108]" dest="array_access [28133,28158]"/>
  <match src="(: ( [40997,40998]" dest="(: ( [41281,41282]"/>
  <match src="parameter [9316,9323]" dest="parameter [9366,9373]"/>
  <match src="identifier: symbol [24251,24257]" dest="identifier: symbol [24301,24307]"/>
  <match src="}: } [30707,30708]" dest="}: } [30757,30758]"/>
  <match src="virtual: virtual [30387,30394]" dest="virtual: virtual [30437,30444]"/>
  <match src="identifier: sub [29871,29874]" dest="identifier: sub [29921,29924]"/>
  <match src="call_expression [15770,15830]" dest="call_expression [15820,15880]"/>
  <match src="): ) [10328,10329]" dest="): ) [10378,10379]"/>
  <match src="identifier: approve [26548,26555]" dest="identifier: approve [26598,26605]"/>
  <match src="identifier: sender [51289,51295]" dest="identifier: sender [56259,56265]"/>
  <match src="(: ( [56515,56516]" dest="(: ( [61962,61963]"/>
  <match src="comment: // import {IUniswapRouter} from &quot;contracts/truefi/interface/IUniswapRouter.sol&quot;; [43161,43241]" dest="comment: // import {IUniswapRouter} from &quot;contracts/truefi/interface/IUniswapRouter.sol&quot;; [43727,43807]"/>
  <match src="identifier: i [37242,37243]" dest="identifier: i [37446,37447]"/>
  <match src="): ) [15752,15753]" dest="): ) [15802,15803]"/>
  <match src="): ) [25568,25569]" dest="): ) [25618,25619]"/>
  <match src=".: . [50671,50672]" dest=".: . [55641,55642]"/>
  <match src="binary_expression [21697,21704]" dest="binary_expression [21747,21754]"/>
  <match src=",: , [34227,34228]" dest=",: , [34431,34432]"/>
  <match src="call_argument [12313,12325]" dest="call_argument [12363,12375]"/>
  <match src="identifier: yBalance [55795,55803]" dest="identifier: yBalance [61233,61241]"/>
  <match src="(: ( [50469,50470]" dest="(: ( [68365,68366]"/>
  <match src="]: ] [30613,30614]" dest="]: ] [30663,30664]"/>
  <match src="(: ( [55417,55418]" dest="(: ( [60855,60856]"/>
  <match src="call_argument [59865,59875]" dest="call_argument [65049,65059]"/>
  <match src="member_expression [51836,51854]" dest="member_expression [56964,56982]"/>
  <match src="comment: /**      * @dev Sets {decimals} to a value other than the default one of 18.      *      * WARNING: This function should only be called from the constructor. Most      * applications that interact with token contracts will not expect      * {decimals} to ever change, and may work incorrectly if it does.      */ [32286,32604]" dest="comment: /**      * @dev Sets {decimals} to a value other than the default one of 18.      *      * WARNING: This function should only be called from the constructor. Most      * applications that interact with token contracts will not expect      * {decimals} to ever change, and may work incorrectly if it does.      */ [32336,32654]"/>
  <match src="block_statement [41885,42025]" dest="block_statement [42169,42309]"/>
  <match src="call_expression [53070,53156]" dest="call_expression [58462,58548]"/>
  <match src="uint256: uint256 [37254,37261]" dest="uint256: uint256 [37458,37465]"/>
  <match src="return_statement [16196,16257]" dest="return_statement [16246,16307]"/>
  <match src="}: } [36197,36198]" dest="}: } [36401,36402]"/>
  <match src="uint256: uint256 [2194,2201]" dest="uint256: uint256 [2244,2251]"/>
  <match src="identifier: recipient [14772,14781]" dest="identifier: recipient [14822,14831]"/>
  <match src="&quot;: &quot; [47009,47010]" dest="&quot;: &quot; [48968,48969]"/>
  <match src="}: } [32277,32278]" dest="}: } [32327,32328]"/>
  <match src="comment: // pragma solidity ^0.6.0; [7034,7060]" dest="comment: // pragma solidity ^0.6.0; [7084,7110]"/>
  <match src="call_expression [57295,57312]" dest="call_expression [62610,62627]"/>
  <match src="function: function [11576,11584]" dest="function: function [11626,11634]"/>
  <match src="&quot;: &quot; [57314,57315]" dest="&quot;: &quot; [62629,62630]"/>
  <match src="&gt;&gt;: &gt;&gt; [41938,41940]" dest="&gt;&gt;: &gt;&gt; [42222,42224]"/>
  <match src="assignment_expression [50443,50509]" dest="assignment_expression [68339,68405]"/>
  <match src="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [9336,9415]" dest="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [9386,9465]"/>
  <match src="identifier: collectFees [60138,60149]" dest="identifier: collectFees [66317,66328]"/>
  <match src="comment: /**      * @dev Penalty (in % * 100) applied if liquid exit is performed with this amount      * returns 10000 if no penalty      */ [53633,53768]" dest="comment: /**      * @dev Penalty (in % * 100) applied if liquid exit is performed with this amount      * returns 10000 if no penalty      */ [59025,59160]"/>
  <match src="primitive_type [45113,45120]" dest="primitive_type [46821,46828]"/>
  <match src="primitive_type [16670,16677]" dest="primitive_type [16720,16727]"/>
  <match src="member_expression [54084,54102]" dest="member_expression [59476,59494]"/>
  <match src="primitive_type [21191,21195]" dest="primitive_type [21241,21245]"/>
  <match src="}: } [14903,14904]" dest="}: } [14953,14954]"/>
  <match src="call_argument [56674,56681]" dest="call_argument [62121,62128]"/>
  <match src="call_argument [58242,58263]" dest="call_argument [63408,63429]"/>
  <match src=",: , [54692,54693]" dest=",: , [60121,60122]"/>
  <match src="interface_declaration [39410,39670]" dest="interface_declaration [39694,39954]"/>
  <match src="identifier: msg [58750,58753]" dest="identifier: msg [63916,63919]"/>
  <match src="address: address [50753,50760]" dest="address: address [55723,55730]"/>
  <match src="call_argument [47598,47643]" dest="call_argument [49483,49521]"/>
  <match src="visibility [36891,36899]" dest="visibility [37095,37103]"/>
  <match src="comment: // import {ABDKMath64x64} from &quot;contracts/truefi/Log.sol&quot;; [43243,43301]" dest="comment: // import {ABDKMath64x64} from &quot;contracts/truefi/Log.sol&quot;; [43809,43867]"/>
  <match src="): ) [18244,18245]" dest="): ) [18294,18295]"/>
  <match src="identifier: _burn [31049,31054]" dest="identifier: _burn [31099,31104]"/>
  <match src=".: . [19162,19163]" dest=".: . [19212,19213]"/>
  <match src="parameter [8893,8900]" dest="parameter [8943,8950]"/>
  <match src="primitive_type [44527,44534]" dest="primitive_type [45274,45281]"/>
  <match src="(: ( [55948,55949]" dest="(: ( [61386,61387]"/>
  <match src="array_access [28849,28874]" dest="array_access [28899,28924]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [1780,1854]" dest="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [1830,1904]"/>
  <match src="call_argument [31238,31244]" dest="call_argument [31288,31294]"/>
  <match src="call_argument [17281,17311]" dest="call_argument [17331,17361]"/>
  <match src="library_declaration [40365,42446]" dest="library_declaration [40649,42730]"/>
  <match src="identifier: target [16792,16798]" dest="identifier: target [16842,16848]"/>
  <match src="return_statement [24700,24715]" dest="return_statement [24750,24765]"/>
  <match src="pure: pure [41017,41021]" dest="pure: pure [41301,41305]"/>
  <match src="): ) [31449,31450]" dest="): ) [31499,31500]"/>
  <match src="identifier: spender [4230,4237]" dest="identifier: spender [4280,4287]"/>
  <match src="primitive_type [30345,30352]" dest="primitive_type [30395,30402]"/>
  <match src="type_name [14526,14541]" dest="type_name [14576,14591]"/>
  <match src="): ) [2232,2233]" dest="): ) [2282,2283]"/>
  <match src="call_expression [53098,53111]" dest="call_expression [58490,58503]"/>
  <match src="identifier: amount [54091,54097]" dest="identifier: amount [59483,59489]"/>
  <match src="&gt;: &gt; [51974,51975]" dest="&gt;: &gt; [57102,57103]"/>
  <match src="): ) [42057,42058]" dest="): ) [42341,42342]"/>
  <match src="type_name [16125,16131]" dest="type_name [16175,16181]"/>
  <match src="): ) [36838,36839]" dest="): ) [37042,37043]"/>
  <match src="parameter [28034,28038]" dest="parameter [28084,28088]"/>
  <match src="augmented_assignment_expression [41441,41449]" dest="augmented_assignment_expression [41725,41733]"/>
  <match src="visibility [53817,53823]" dest="visibility [59209,59215]"/>
  <match src="type_cast_expression [42004,42013]" dest="type_cast_expression [42288,42297]"/>
  <match src=".: . [48811,48812]" dest=".: . [53739,53740]"/>
  <match src="binary_expression [34941,34963]" dest="binary_expression [35145,35167]"/>
  <match src="call_argument [48104,48108]" dest="call_argument [52450,52454]"/>
  <match src="call_expression [53401,53418]" dest="call_expression [58793,58810]"/>
  <match src="parameter [46836,46858]" dest="parameter [48730,48752]"/>
  <match src="return_type_definition [16162,16184]" dest="return_type_definition [16212,16234]"/>
  <match src="true: true [28152,28156]" dest="true: true [28202,28206]"/>
  <match src="variable_declaration_statement [60778,60897]" dest="variable_declaration_statement [67027,67146]"/>
  <match src="call_argument [51285,51295]" dest="call_argument [56255,56265]"/>
  <match src="call_expression [35755,35828]" dest="call_expression [35959,36032]"/>
  <match src="address: address [14526,14533]" dest="address: address [14576,14583]"/>
  <match src="identifier: require [9644,9651]" dest="identifier: require [9694,9701]"/>
  <match src="(: ( [58373,58374]" dest="(: ( [63539,63540]"/>
  <match src="call_expression [31279,31347]" dest="call_expression [31329,31397]"/>
  <match src="&lt;=: &lt;= [55433,55435]" dest="&lt;=: &lt;= [60871,60873]"/>
  <match src="string_literal [8463,8495]" dest="string_literal [8513,8545]"/>
  <match src="}: } [19417,19418]" dest="}: } [19467,19468]"/>
  <match src="type_cast_expression [31135,31145]" dest="type_cast_expression [31185,31195]"/>
  <match src="identifier: _currencyToken [49814,49828]" dest="identifier: _currencyToken [55065,55079]"/>
  <match src="identifier: owner [26369,26374]" dest="identifier: owner [26419,26424]"/>
  <match src="comment: // but in exchange the refund on every call to nonReentrant will be lower in [5621,5697]" dest="comment: // but in exchange the refund on every call to nonReentrant will be lower in [5671,5747]"/>
  <match src="): ) [52843,52844]" dest="): ) [58235,58236]"/>
  <match src="primitive_type [34767,34774]" dest="primitive_type [34971,34978]"/>
  <match src=",: , [17401,17402]" dest=",: , [17451,17452]"/>
  <match src="emit: emit [35436,35440]" dest="emit: emit [35640,35644]"/>
  <match src="comment: // slot's contents, replace the bits taken up by the boolean, and then write [5330,5406]" dest="comment: // slot's contents, replace the bits taken up by the boolean, and then write [5380,5456]"/>
  <match src="{: { [54663,54664]" dest="{: { [60092,60093]"/>
  <match src="binary_expression [56291,56317]" dest="binary_expression [61738,61764]"/>
  <match src="visibility [12254,12262]" dest="visibility [12304,12312]"/>
  <match src="type_name [53858,53865]" dest="type_name [59250,59257]"/>
  <match src="member_expression [58321,58337]" dest="member_expression [63487,63503]"/>
  <match src="uint256: uint256 [10978,10985]" dest="uint256: uint256 [11028,11035]"/>
  <match src="state_mutability [36612,36616]" dest="state_mutability [36816,36820]"/>
  <match src="block_statement [41157,41217]" dest="block_statement [41441,41501]"/>
  <match src="extcodesize: extcodesize [13514,13525]" dest="extcodesize: extcodesize [13564,13575]"/>
  <match src="variable_declaration_tuple [14753,14769]" dest="variable_declaration_tuple [14803,14819]"/>
  <match src="public: public [44535,44541]" dest="public: public [45282,45288]"/>
  <match src="function: function [36807,36815]" dest="function: function [37011,37019]"/>
  <match src="expression_statement [6928,6951]" dest="expression_statement [6978,7001]"/>
  <match src="expression_statement [30546,30586]" dest="expression_statement [30596,30636]"/>
  <match src="call_argument [50216,50226]" dest="call_argument [55484,55494]"/>
  <match src="state_mutability [36543,36547]" dest="state_mutability [36747,36751]"/>
  <match src=",: , [26139,26140]" dest=",: , [26189,26190]"/>
  <match src="event_definition [4176,4254]" dest="event_definition [4226,4304]"/>
  <match src="function_definition [50132,50842]" dest="function_definition [55383,55812]"/>
  <match src="identifier: this [14605,14609]" dest="identifier: this [14655,14659]"/>
  <match src="address: address [17477,17484]" dest="address: address [17527,17534]"/>
  <match src=",: , [28834,28835]" dest=",: , [28884,28885]"/>
  <match src="visibility [48222,48228]" dest="visibility [52645,52651]"/>
  <match src=".: . [52930,52931]" dest=".: . [58322,58323]"/>
  <match src="identifier: Joined [45106,45112]" dest="identifier: Joined [46814,46820]"/>
  <match src="comment: /**      * @dev Sets the values for {name} and {symbol}, initializes {decimals} with      * a default value of 18.      *      * To select a different value for {decimals}, use {_setupDecimals}.      *      * All three of these values are immutable: they can only be set once during      * construction.      */ [23864,24183]" dest="comment: /**      * @dev Sets the values for {name} and {symbol}, initializes {decimals} with      * a default value of 18.      *      * To select a different value for {decimals}, use {_setupDecimals}.      *      * All three of these values are immutable: they can only be set once during      * construction.      */ [23914,24233]"/>
  <match src="return_statement [34787,34801]" dest="return_statement [34991,35005]"/>
  <match src="modifier_definition [34901,35020]" dest="modifier_definition [35105,35224]"/>
  <match src="): ) [4009,4010]" dest="): ) [4059,4060]"/>
  <match src="visibility [8403,8411]" dest="visibility [8453,8461]"/>
  <match src="(: ( [19235,19236]" dest="(: ( [19285,19286]"/>
  <match src="uint256: uint256 [37412,37419]" dest="uint256: uint256 [37616,37623]"/>
  <match src="string_literal [56319,56369]" dest="string_literal [61766,61816]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [16873,17115]" dest="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [16923,17165]"/>
  <match src="(: ( [42379,42380]" dest="(: ( [42663,42664]"/>
  <match src="identifier: _balances [29935,29944]" dest="identifier: _balances [29985,29994]"/>
  <match src="type_cast_expression [42364,42435]" dest="type_cast_expression [42648,42719]"/>
  <match src="call_expression [16203,16256]" dest="call_expression [16253,16306]"/>
  <match src="comment: // Dependency file: @openzeppelin/contracts/math/SafeMath.sol [6967,7028]" dest="comment: // Dependency file: @openzeppelin/contracts/math/SafeMath.sol [7017,7078]"/>
  <match src="): ) [60004,60005]" dest="): ) [65188,65189]"/>
  <match src="(: ( [48306,48307]" dest="(: ( [52801,52802]"/>
  <match src="call_argument [52314,52344]" dest="call_argument [57442,57472]"/>
  <match src=",: , [17626,17627]" dest=",: , [17676,17677]"/>
  <match src="identifier: get_virtual_price [48309,48326]" dest="identifier: get_virtual_price [52804,52821]"/>
  <match src="uint256: uint256 [1919,1926]" dest="uint256: uint256 [1969,1976]"/>
  <match src=".: . [50211,50212]" dest=".: . [55479,55480]"/>
  <match src="state_mutability [8879,8883]" dest="state_mutability [8929,8933]"/>
  <match src="expression_statement [49814,49861]" dest="expression_statement [55065,55112]"/>
  <match src="comment: /**      * @dev Calculates integral of 5/(x+50)dx times 10000      */ [54238,54309]" dest="comment: /**      * @dev Calculates integral of 5/(x+50)dx times 10000      */ [59630,59701]"/>
  <match src="parameter [58650,58672]" dest="parameter [63816,63838]"/>
  <match src="identifier: amount [31302,31308]" dest="identifier: amount [31352,31358]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [3355,3659]" dest="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [3405,3709]"/>
  <match src="primitive_type [51613,51620]" dest="primitive_type [56583,56590]"/>
  <match src="call_argument [17395,17401]" dest="call_argument [17445,17451]"/>
  <match src="parameter [46900,46926]" dest="parameter [48794,48820]"/>
  <match src="type_alias [23581,23588]" dest="type_alias [23631,23638]"/>
  <match src="identifier: _approve [28777,28785]" dest="identifier: _approve [28827,28835]"/>
  <match src="call_argument [29813,29819]" dest="call_argument [29863,29869]"/>
  <match src="member_expression [31279,31301]" dest="member_expression [31329,31351]"/>
  <match src="): ) [34744,34745]" dest="): ) [34948,34949]"/>
  <match src="type_name [16686,16691]" dest="type_name [16736,16741]"/>
  <match src="): ) [48453,48454]" dest="): ) [53314,53315]"/>
  <match src="address: address [15687,15694]" dest="address: address [15737,15744]"/>
  <match src="): ) [50507,50508]" dest="): ) [68403,68404]"/>
  <match src="): ) [49859,49860]" dest="): ) [55110,55111]"/>
  <match src="identifier: _totalSupply [51700,51712]" dest="identifier: _totalSupply [56670,56682]"/>
  <match src="primitive_type [28034,28038]" dest="primitive_type [28084,28088]"/>
  <match src="function_body [25746,25790]" dest="function_body [25796,25840]"/>
  <match src="identifier: x [42386,42387]" dest="identifier: x [42670,42671]"/>
  <match src="contract: contract [5135,5143]" dest="contract: contract [5185,5193]"/>
  <match src="type_name [5926,5933]" dest="type_name [5976,5983]"/>
  <match src="block_statement [57176,57381]" dest="block_statement [62507,62696]"/>
  <match src="identifier: value [17409,17414]" dest="identifier: value [17459,17464]"/>
  <match src="comment: /**      * Calculate binary logarithm of x.  Revert if x &lt;= 0.      *      * @param x signed 64.64-bit fixed point number      * @return signed 64.64-bit fixed point number      */ [40792,40977]" dest="comment: /**      * Calculate binary logarithm of x.  Revert if x &lt;= 0.      *      * @param x signed 64.64-bit fixed point number      * @return signed 64.64-bit fixed point number      */ [41076,41261]"/>
  <match src="event_definition [45949,46009]" dest="event_definition [47657,47717]"/>
  <match src="number_literal: 0x8000000000000000 [41845,41863]" dest="number_literal: 0x8000000000000000 [42129,42147]"/>
  <match src="call_argument [46989,47000]" dest="call_argument [48948,48959]"/>
  <match src="call_argument [49906,49916]" dest="call_argument [55157,55167]"/>
  <match src="identifier: a [9561,9562]" dest="identifier: a [9611,9612]"/>
  <match src="primitive_type [10919,10926]" dest="primitive_type [10969,10976]"/>
  <match src="identifier: poolValue [48738,48747]" dest="identifier: poolValue [53598,53607]"/>
  <match src="type_name [29505,29512]" dest="type_name [29555,29562]"/>
  <match src="&quot;: &quot; [35787,35788]" dest="&quot;: &quot; [35991,35992]"/>
  <match src="(: ( [36784,36785]" dest="(: ( [36988,36989]"/>
  <match src="identifier: _name [24503,24508]" dest="identifier: _name [24553,24558]"/>
  <match src=",: , [17200,17201]" dest=",: , [17250,17251]"/>
  <match src="assembly_statement [18173,18330]" dest="assembly_statement [18223,18380]"/>
  <match src="parameter [33387,33401]" dest="parameter [33437,33451]"/>
  <match src="ether: ether [58386,58391]" dest="ether: ether [63552,63557]"/>
  <match src="variable_declaration_statement [9616,9634]" dest="variable_declaration_statement [9666,9684]"/>
  <match src="identifier: currencyAmount [55984,55998]" dest="identifier: currencyAmount [61422,61436]"/>
  <match src="primitive_type [20806,20810]" dest="primitive_type [20856,20860]"/>
  <match src="(: ( [10293,10294]" dest="(: ( [10343,10344]"/>
  <match src="user_defined_type [47824,47830]" dest="user_defined_type [50653,50659]"/>
  <match src="binary_expression [51949,51977]" dest="binary_expression [57077,57105]"/>
  <match src="type_name [39266,39273]" dest="type_name [39550,39557]"/>
  <match src="call_argument [28083,28133]" dest="call_argument [28133,28183]"/>
  <match src="function_body [8902,8999]" dest="function_body [8952,9049]"/>
  <match src="identifier: expectedAmount [56886,56900]" dest="identifier: depositedAmount [68063,68078]"/>
  <match src="number_literal: 0 [10951,10952]" dest="number_literal: 0 [11001,11002]"/>
  <match src="call_argument [42386,42387]" dest="call_argument [42670,42671]"/>
  <match src="identifier: _balances [23645,23654]" dest="identifier: _balances [23695,23704]"/>
  <match src="function: function [2518,2526]" dest="function: function [2568,2576]"/>
  <match src="identifier: amount [30693,30699]" dest="identifier: amount [30743,30749]"/>
  <match src="call_argument [49967,49978]" dest="call_argument [55218,55229]"/>
  <match src="member_expression [54400,54464]" dest="member_expression [59792,59856]"/>
  <match src="!=: != [6624,6626]" dest="!=: != [6674,6676]"/>
  <match src="variable_declaration_tuple [17733,17772]" dest="variable_declaration_tuple [17783,17822]"/>
  <match src="): ) [10894,10895]" dest="): ) [10944,10945]"/>
  <match src="parameter [26040,26054]" dest="parameter [26090,26104]"/>
  <match src="call_expression [47022,47042]" dest="call_expression [48981,49001]"/>
  <match src="number_literal: 0 [55551,55552]" dest="number_literal: 0 [60989,60990]"/>
  <match src="identifier: div [53049,53052]" dest="identifier: div [58441,58444]"/>
  <match src="expression_statement [31258,31348]" dest="expression_statement [31308,31398]"/>
  <match src="parameter [39544,39567]" dest="parameter [39828,39851]"/>
  <match src="string_literal [14835,14895]" dest="string_literal [14885,14945]"/>
  <match src="(: ( [48054,48055]" dest="(: ( [52400,52401]"/>
  <match src="identifier: initializer [20662,20673]" dest="identifier: initializer [20712,20723]"/>
  <match src="(: ( [17394,17395]" dest="(: ( [17444,17445]"/>
  <match src="identifier: to [39586,39588]" dest="identifier: to [39870,39872]"/>
  <match src="view: view [1905,1909]" dest="view: view [1955,1959]"/>
  <match src="identifier: Transfer [3945,3953]" dest="identifier: Transfer [3995,4003]"/>
  <match src="parameter [8842,8868]" dest="parameter [8892,8918]"/>
  <match src="identifier: account [25774,25781]" dest="identifier: account [25824,25831]"/>
  <match src="): ) [2567,2568]" dest="): ) [2617,2618]"/>
  <match src="type_name [17575,17580]" dest="type_name [17625,17630]"/>
  <match src="}: } [37601,37602]" dest="}: } [37805,37806]"/>
  <match src="string [35787,35827]" dest="string [35991,36031]"/>
  <match src="function_definition [54579,55020]" dest="function_definition [60008,60449]"/>
  <match src="internal: internal [10896,10904]" dest="internal: internal [10946,10954]"/>
  <match src="function: function [19071,19079]" dest="function: function [19121,19129]"/>
  <match src="view: view [24456,24460]" dest="view: view [24506,24510]"/>
  <match src="type_name [23832,23837]" dest="type_name [23882,23887]"/>
  <match src="identifier: newOwner [35763,35771]" dest="identifier: newOwner [35967,35975]"/>
  <match src="&quot;: &quot; [8054,8055]" dest="&quot;: &quot; [8104,8105]"/>
  <match src="identifier: _allowances [23719,23730]" dest="identifier: _allowances [23769,23780]"/>
  <match src=":: : [14793,14794]" dest=":: : [14843,14844]"/>
  <match src="type_name [16090,16097]" dest="type_name [16140,16147]"/>
  <match src="call_argument [58126,58147]" dest="call_argument [63292,63313]"/>
  <match src="identifier: _ [20963,20964]" dest="identifier: _ [21013,21014]"/>
  <match src="type_name [45113,45120]" dest="type_name [46821,46828]"/>
  <match src="identifier: Approval [4182,4190]" dest="identifier: Approval [4232,4240]"/>
  <match src=",: , [27461,27462]" dest=",: , [27511,27512]"/>
  <match src="user_defined_type [43877,43888]" dest="user_defined_type [44624,44635]"/>
  <match src="): ) [34999,35000]" dest="): ) [35203,35204]"/>
  <match src="call_expression [29689,29760]" dest="call_expression [29739,29810]"/>
  <match src="[: [ [25773,25774]" dest="[: [ [25823,25824]"/>
  <match src="call_argument [52274,52345]" dest="call_argument [57402,57473]"/>
  <match src="identifier: msg [53533,53536]" dest="identifier: msg [58925,58928]"/>
  <match src="): ) [11697,11698]" dest="): ) [11747,11748]"/>
  <match src=",: , [50819,50820]" dest=",: , [62832,62833]"/>
  <match src="memory: memory [36504,36510]" dest="memory: memory [36708,36714]"/>
  <match src="): ) [47417,47418]" dest="): ) [66155,66156]"/>
  <match src="pure: pure [12263,12267]" dest="pure: pure [12313,12317]"/>
  <match src="comment: // deployed when running a constructor, any checks on its code size will [21363,21435]" dest="comment: // deployed when running a constructor, any checks on its code size will [21413,21485]"/>
  <match src="}: } [35917,35918]" dest="}: } [36121,36122]"/>
  <match src="type_name [39210,39217]" dest="type_name [39494,39501]"/>
  <match src="identifier: newFee [44886,44892]" dest="identifier: newFee [46594,46600]"/>
  <match src=",: , [53214,53215]" dest=",: , [58606,58607]"/>
  <match src="identifier: _msgSender [19080,19090]" dest="identifier: _msgSender [19130,19140]"/>
  <match src="private: private [17558,17565]" dest="private: private [17608,17615]"/>
  <match src="call_argument [52935,52941]" dest="call_argument [58327,58333]"/>
  <match src="member_expression [52026,52036]" dest="member_expression [57154,57164]"/>
  <match src="identifier: log_2 [40992,40997]" dest="identifier: log_2 [41276,41281]"/>
  <match src="identifier: sender [27349,27355]" dest="identifier: sender [27399,27405]"/>
  <match src=".: . [51843,51844]" dest=".: . [56971,56972]"/>
  <match src="type_name [44400,44414]" dest="type_name [45147,45161]"/>
  <match src="primitive_type [42364,42370]" dest="primitive_type [42648,42654]"/>
  <match src="identifier: curve [37494,37499]" dest="identifier: curve [37698,37703]"/>
  <match src="user_defined_type [43914,43921]" dest="user_defined_type [44661,44668]"/>
  <match src="function_body [47832,47872]" dest="function_body [50661,50701]"/>
  <match src="assignment_expression [47055,47079]" dest="assignment_expression [49014,49038]"/>
  <match src="if: if [50405,50407]" dest="if: if [68301,68303]"/>
  <match src="identifier: success [17826,17833]" dest="identifier: success [17876,17883]"/>
  <match src="call_argument [30023,30032]" dest="call_argument [30073,30082]"/>
  <match src="}: } [26391,26392]" dest="}: } [26441,26442]"/>
  <match src="number_literal: 0 [35783,35784]" dest="number_literal: 0 [35987,35988]"/>
  <match src="identifier: c [8990,8991]" dest="identifier: c [9040,9041]"/>
  <match src="identifier: _curvePool [55646,55656]" dest="identifier: _curvePool [61084,61094]"/>
  <match src="): ) [53355,53356]" dest="): ) [58747,58748]"/>
  <match src="(: ( [21166,21167]" dest="(: ( [21216,21217]"/>
  <match src="state_variable_declaration [44727,44757]" dest="state_variable_declaration [45954,45984]"/>
  <match src="parameter [27267,27281]" dest="parameter [27317,27331]"/>
  <match src="array_access [50653,50679]" dest="array_access [55623,55649]"/>
  <match src="identifier: div [10214,10217]" dest="identifier: div [10264,10267]"/>
  <match src="revert: revert [18267,18273]" dest="revert: revert [18317,18323]"/>
  <match src="address: address [2537,2544]" dest="address: address [2587,2594]"/>
  <match src="call_expression [20711,20726]" dest="call_expression [20761,20776]"/>
  <match src="pure: pure [9302,9306]" dest="pure: pure [9352,9356]"/>
  <match src="visibility [2210,2218]" dest="visibility [2260,2268]"/>
  <match src="type_name [8831,8838]" dest="type_name [8881,8888]"/>
  <match src="yul_function_call [18228,18245]" dest="yul_function_call [18278,18295]"/>
  <match src="type_cast_expression [41798,41816]" dest="type_cast_expression [42082,42100]"/>
  <match src="=: = [50456,50457]" dest="=: = [68352,68353]"/>
  <match src="): ) [54861,54862]" dest="): ) [60290,60291]"/>
  <match src="variable_declaration_statement [8953,8971]" dest="variable_declaration_statement [9003,9021]"/>
  <match src="user_defined_type [38086,38092]" dest="user_defined_type [38290,38296]"/>
  <match src="type_cast_expression [42044,42058]" dest="type_cast_expression [42328,42342]"/>
  <match src="identifier: yTokenBalance [51679,51692]" dest="identifier: yTokenBalance [56649,56662]"/>
  <match src="function_body [55399,56007]" dest="function_body [60837,61445]"/>
  <match src="visibility [39293,39301]" dest="visibility [39577,39585]"/>
  <match src="identifier: amount [50768,50774]" dest="identifier: amount [55738,55744]"/>
  <match src="string_literal [35787,35827]" dest="string_literal [35991,36031]"/>
  <match src="visibility [29580,29588]" dest="visibility [29630,29638]"/>
  <match src="identifier: ERC20 [46964,46969]" dest="identifier: ERC20 [48923,48928]"/>
  <match src="=: = [41112,41113]" dest="=: = [41396,41397]"/>
  <match src="view: view [2578,2582]" dest="view: view [2628,2632]"/>
  <match src="primitive_type [10857,10864]" dest="primitive_type [10907,10914]"/>
  <match src="type_name [61283,61290]" dest="type_name [67532,67539]"/>
  <match src="}: } [31457,31458]" dest="}: } [31507,31508]"/>
  <match src="member_expression [55806,55822]" dest="member_expression [61244,61260]"/>
  <match src="comment: // transaction's gas, it is best to keep them low in cases like this one, to [5773,5849]" dest="comment: // transaction's gas, it is best to keep them low in cases like this one, to [5823,5899]"/>
  <match src="event_paramater [45962,45978]" dest="event_paramater [47670,47686]"/>
  <match src="state_mutability [7948,7952]" dest="state_mutability [7998,8002]"/>
  <match src="call_expression [58295,58392]" dest="call_expression [63461,63558]"/>
  <match src="return_type_definition [37014,37030]" dest="return_type_definition [37218,37234]"/>
  <match src="state_mutability [25723,25727]" dest="state_mutability [25773,25777]"/>
  <match src="primitive_type [25401,25406]" dest="primitive_type [25451,25456]"/>
  <match src="member_expression [50669,50678]" dest="member_expression [55639,55648]"/>
  <match src="comment: // curve.fi data [44671,44687]" dest="comment: // curve.fi data [45898,45914]"/>
  <match src="comment: // import {Initializable} from &quot;contracts/truefi/common/Initializable.sol&quot;; [22220,22295]" dest="comment: // import {Initializable} from &quot;contracts/truefi/common/Initializable.sol&quot;; [22270,22345]"/>
  <match src="visibility [44474,44480]" dest="visibility [45221,45227]"/>
  <match src="identifier: a [7925,7926]" dest="identifier: a [7975,7976]"/>
  <match src="array_access [26357,26384]" dest="array_access [26407,26434]"/>
  <match src="call_argument [57277,57312]" dest="call_argument [62600,62627]"/>
  <match src="modifier_invocation [49793,49802]" dest="modifier_invocation [55044,55053]"/>
  <match src="function_body [6076,6117]" dest="function_body [6126,6167]"/>
  <match src="call_expression [53501,53563]" dest="call_expression [58893,58955]"/>
  <match src="): ) [51101,51102]" dest="): ) [56071,56072]"/>
  <match src="comment: // track claimable fees [44498,44521]" dest="comment: // track claimable fees [45245,45268]"/>
  <match src="if_statement [57136,57381]" dest="if_statement [62475,62696]"/>
  <match src="): ) [39170,39171]" dest="): ) [39454,39455]"/>
  <match src="call_expression [49326,49368]" dest="call_expression [54577,54619]"/>
  <match src="call_argument [57314,57368]" dest="call_argument [62629,62683]"/>
  <match src="user_defined_type [44366,44378]" dest="user_defined_type [45113,45125]"/>
  <match src="binary_expression [57935,57975]" dest="binary_expression [63101,63141]"/>
  <match src="type_name [46429,46436]" dest="type_name [48137,48144]"/>
  <match src="identifier: Initializable [23504,23517]" dest="identifier: Initializable [23554,23567]"/>
  <match src="identifier: initializer [46941,46952]" dest="identifier: initializer [48900,48911]"/>
  <match src=",: , [55549,55550]" dest=",: , [60987,60988]"/>
  <match src="identifier: isTopLevelCall [20856,20870]" dest="identifier: isTopLevelCall [20906,20920]"/>
  <match src="function: function [47769,47777]" dest="function: function [50598,50606]"/>
  <match src="function: function [31040,31048]" dest="function: function [31090,31098]"/>
  <match src="(: ( [17970,17971]" dest="(: ( [18020,18021]"/>
  <match src="address: address [35470,35477]" dest="address: address [35674,35681]"/>
  <match src="state_mutability [25387,25391]" dest="state_mutability [25437,25441]"/>
  <match src="}: } [56006,56007]" dest="}: } [61444,61445]"/>
  <match src="identifier: ensureEnoughTokensAreAvailable [49083,49113]" dest="identifier: ensureEnoughTokensAreAvailable [54334,54364]"/>
  <match src="identifier: amountToWithdraw [53545,53561]" dest="identifier: amountToWithdraw [58937,58953]"/>
  <match src="call_argument [50713,50775]" dest="call_argument [55683,55745]"/>
  <match src="%: % [12346,12347]" dest="%: % [12396,12397]"/>
  <match src="virtual: virtual [28743,28750]" dest="virtual: virtual [28793,28800]"/>
  <match src="(: ( [54042,54043]" dest="(: ( [59434,59435]"/>
  <match src="false: false [58486,58491]" dest="false: false [63652,63657]"/>
  <match src="function: function [39442,39450]" dest="function: function [39726,39734]"/>
  <match src="identifier: amount [60209,60215]" dest="identifier: amount [66397,66403]"/>
  <match src="): ) [54915,54916]" dest="): ) [60344,60345]"/>
  <match src="identifier: target [16098,16104]" dest="identifier: target [16148,16154]"/>
  <match src="uint256: uint256 [23561,23568]" dest="uint256: uint256 [23611,23618]"/>
  <match src="contract_body [36930,37034]" dest="contract_body [37134,37238]"/>
  <match src="identifier: xc [41608,41610]" dest="identifier: xc [41892,41894]"/>
  <match src="call_argument [14605,14609]" dest="call_argument [14655,14659]"/>
  <match src="returns: returns [10910,10917]" dest="returns: returns [10960,10967]"/>
  <match src="pure: pure [54359,54363]" dest="pure: pure [59751,59755]"/>
  <match src="array_access [28849,28883]" dest="array_access [28899,28933]"/>
  <match src="}: } [21711,21712]" dest="}: } [21761,21762]"/>
  <match src="}: } [34647,34648]" dest="}: } [34851,34852]"/>
  <match src="identifier: balanceOf [51275,51284]" dest="identifier: balanceOf [56245,56254]"/>
  <match src="contract_body [12550,18427]" dest="contract_body [12600,18477]"/>
  <match src="call_expression [52274,52292]" dest="call_expression [57402,57420]"/>
  <match src="&quot;: &quot; [53113,53114]" dest="&quot;: &quot; [58505,58506]"/>
  <match src="type_name [17512,17519]" dest="type_name [17562,17569]"/>
  <match src="returns: returns [37460,37467]" dest="returns: returns [37664,37671]"/>
  <match src="identifier: this [55843,55847]" dest="identifier: this [61281,61285]"/>
  <match src="(: ( [37468,37469]" dest="(: ( [37672,37673]"/>
  <match src="type_name [20806,20810]" dest="type_name [20856,20860]"/>
  <match src="identifier: currencyToken [38141,38154]" dest="identifier: currencyToken [38345,38358]"/>
  <match src="identifier: liquidRatioAfter [54185,54201]" dest="identifier: liquidRatioAfter [59577,59593]"/>
  <match src="event_paramater [34333,34357]" dest="event_paramater [34537,34561]"/>
  <match src="function: function [24433,24441]" dest="function: function [24483,24491]"/>
  <match src="uint256: uint256 [45980,45987]" dest="uint256: uint256 [47688,47695]"/>
  <match src="address: address [46400,46407]" dest="address: address [48108,48115]"/>
  <match src="**: ** [54477,54479]" dest="**: ** [59869,59871]"/>
  <match src="identifier: b [9290,9291]" dest="identifier: b [9340,9341]"/>
  <match src="type_name [29530,29537]" dest="type_name [29580,29587]"/>
  <match src="(: ( [58955,58956]" dest="(: ( [64121,64122]"/>
  <match src="primitive_type [56878,56885]" dest="primitive_type [68055,68062]"/>
  <match src="identifier: returndata [18282,18292]" dest="identifier: returndata [18332,18342]"/>
  <match src="(: ( [28759,28760]" dest="(: ( [28809,28810]"/>
  <match src="identifier: to [3992,3994]" dest="identifier: to [4042,4044]"/>
  <match src="visibility [36163,36171]" dest="visibility [36367,36375]"/>
  <match src="returns: returns [16162,16169]" dest="returns: returns [16212,16219]"/>
  <match src="): ) [55998,55999]" dest="): ) [61436,61437]"/>
  <match src="type_name [46768,46778]" dest="type_name [48662,48672]"/>
  <match src="number_literal: 25 [47290,47292]" dest="number_literal: 25 [49315,49317]"/>
  <match src="call_expression [54904,54916]" dest="call_expression [60333,60345]"/>
  <match src="visibility [10896,10904]" dest="visibility [10946,10954]"/>
  <match src="identifier: yAmount [56674,56681]" dest="identifier: yAmount [62121,62128]"/>
  <match src="if_statement [54847,54929]" dest="if_statement [60276,60358]"/>
  <match src="uint256: uint256 [44466,44473]" dest="uint256: uint256 [45213,45220]"/>
  <match src="): ) [47041,47042]" dest="): ) [49000,49001]"/>
  <match src="returns: returns [36617,36624]" dest="returns: returns [36821,36828]"/>
  <match src="if: if [9557,9559]" dest="if: if [9607,9609]"/>
  <match src="): ) [28955,28956]" dest="): ) [29005,29006]"/>
  <match src="): ) [23708,23709]" dest="): ) [23758,23759]"/>
  <match src="block_statement [9569,9604]" dest="block_statement [9619,9654]"/>
  <match src="): ) [48519,48520]" dest="): ) [53380,53381]"/>
  <match src="&quot;: &quot; [14805,14806]" dest="&quot;: &quot; [14855,14856]"/>
  <match src="if: if [17822,17824]" dest="if: if [17872,17874]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [17673,17723]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [17723,17773]"/>
  <match src="primitive_type [28694,28701]" dest="primitive_type [28744,28751]"/>
  <match src="call_argument [26141,26147]" dest="call_argument [26191,26197]"/>
  <match src="identifier: currencyBalance [55436,55451]" dest="identifier: currencyBalance [60874,60889]"/>
  <match src="): ) [28133,28134]" dest="): ) [28183,28184]"/>
  <match src="): ) [61568,61569]" dest="): ) [67817,67818]"/>
  <match src="state_variable_declaration [23832,23856]" dest="state_variable_declaration [23882,23906]"/>
  <match src="function: function [3273,3281]" dest="function: function [3323,3331]"/>
  <match src="(: ( [53109,53110]" dest="(: ( [58501,58502]"/>
  <match src="]: ] [29954,29955]" dest="]: ] [30004,30005]"/>
  <match src="block_statement [41510,41568]" dest="block_statement [41794,41852]"/>
  <match src="pragma_directive [42501,42524]" dest="pragma_directive [43067,43090]"/>
  <match src="type_name [57831,57838]" dest="type_name [62997,63004]"/>
  <match src="): ) [40742,40743]" dest="): ) [41026,41027]"/>
  <match src="): ) [27448,27449]" dest="): ) [27498,27499]"/>
  <match src="identifier: b [8969,8970]" dest="identifier: b [9019,9020]"/>
  <match src="expression_statement [55929,55959]" dest="expression_statement [61367,61397]"/>
  <match src="if_statement [41227,41310]" dest="if_statement [41511,41594]"/>
  <match src="external: external [38157,38165]" dest="external: external [38361,38369]"/>
  <match src="identifier: initialize [46747,46757]" dest="identifier: initialize [48641,48651]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [13438,13485]" dest="comment: // solhint-disable-next-line no-inline-assembly [13488,13535]"/>
  <match src="parameter [30362,30376]" dest="parameter [30412,30426]"/>
  <match src="identifier: N_TOKENS [55520,55528]" dest="identifier: N_TOKENS [60958,60966]"/>
  <match src="string: string [24217,24223]" dest="string: string [24267,24273]"/>
  <match src="call_argument [58475,58484]" dest="call_argument [63641,63650]"/>
  <match src="call_argument [30505,30515]" dest="call_argument [30555,30565]"/>
  <match src="primitive_type [24217,24223]" dest="primitive_type [24267,24273]"/>
  <match src="identifier: currencyAmount [58828,58842]" dest="identifier: currencyAmount [63994,64008]"/>
  <match src="(: ( [8017,8018]" dest="(: ( [8067,8068]"/>
  <match src="binary_expression [8921,8927]" dest="binary_expression [8971,8977]"/>
  <match src="string_literal [53113,53155]" dest="string_literal [58505,58547]"/>
  <match src="return_type_definition [1754,1771]" dest="return_type_definition [1804,1821]"/>
  <match src="function_definition [38132,38188]" dest="function_definition [38336,38392]"/>
  <match src="parameter [19236,19248]" dest="parameter [19286,19298]"/>
  <match src=",: , [59956,59957]" dest=",: , [65140,65141]"/>
  <match src="): ) [41037,41038]" dest="): ) [41321,41322]"/>
  <match src="+: + [59995,59996]" dest="+: + [65179,65180]"/>
  <match src="binary_expression [41324,41337]" dest="binary_expression [41608,41621]"/>
  <match src="member_expression [56499,56525]" dest="member_expression [61946,61972]"/>
  <match src="identifier: __curvePool [47068,47079]" dest="identifier: __curvePool [49027,49038]"/>
  <match src="type_name [34520,34527]" dest="type_name [34724,34731]"/>
  <match src="yul_assignment [13506,13534]" dest="yul_assignment [13556,13584]"/>
  <match src=".: . [48300,48301]" dest=".: . [52795,52796]"/>
  <match src="primitive_type [56209,56216]" dest="primitive_type [61647,61654]"/>
  <match src="string_literal [15797,15829]" dest="string_literal [15847,15879]"/>
  <match src="member_expression [52733,52742]" dest="member_expression [58125,58134]"/>
  <match src="(: ( [50800,50801]" dest="(: ( [62813,62814]"/>
  <match src="comment: // extcodesize checks the size of the code stored in an address, and [21208,21276]" dest="comment: // extcodesize checks the size of the code stored in an address, and [21258,21326]"/>
  <match src="type_name [10857,10864]" dest="type_name [10907,10914]"/>
  <match src="): ) [2208,2209]" dest="): ) [2258,2259]"/>
  <match src="yul_identifier [21646,21648]" dest="yul_identifier [21696,21698]"/>
  <match src="type_cast_expression [47580,47596]" dest="type_cast_expression [49465,49481]"/>
  <match src="identifier: _functionCallWithValue [17454,17476]" dest="identifier: _functionCallWithValue [17504,17526]"/>
  <match src="comment: /**      * @dev set pool join fee      * @param fee new fee      */ [49396,49466]" dest="comment: /**      * @dev set pool join fee      * @param fee new fee      */ [54647,54717]"/>
  <match src="call_argument [58321,58359]" dest="call_argument [63487,63525]"/>
  <match src="identifier: target [16678,16684]" dest="identifier: target [16728,16734]"/>
  <match src="member_expression [51185,51194]" dest="member_expression [56155,56164]"/>
  <match src="visibility [34252,34259]" dest="visibility [34456,34463]"/>
  <match src="true [26166,26170]" dest="true [26216,26220]"/>
  <match src="uint8: uint8 [23832,23837]" dest="uint8: uint8 [23882,23887]"/>
  <match src="]: ] [26383,26384]" dest="]: ] [26433,26434]"/>
  <match src="member_expression [54025,54031]" dest="member_expression [59417,59423]"/>
  <match src="return_type_definition [28025,28039]" dest="return_type_definition [28075,28089]"/>
  <match src="member_expression [52919,52934]" dest="member_expression [58311,58326]"/>
  <match src="): ) [54457,54458]" dest="): ) [59849,59850]"/>
  <match src="(: ( [26658,26659]" dest="(: ( [26708,26709]"/>
  <match src="true [20902,20906]" dest="true [20952,20956]"/>
  <match src="else: else [18346,18350]" dest="else: else [18396,18400]"/>
  <match src="(: ( [57172,57173]" dest="(: ( [62503,62504]"/>
  <match src="augmented_assignment_expression [41608,41616]" dest="augmented_assignment_expression [41892,41900]"/>
  <match src="(: ( [2536,2537]" dest="(: ( [2586,2587]"/>
  <match src="type_name [15687,15694]" dest="type_name [15737,15744]"/>
  <match src="identifier: transfer [53524,53532]" dest="identifier: transfer [58916,58924]"/>
  <match src="identifier: _curvePool [60844,60854]" dest="identifier: _curvePool [67093,67103]"/>
  <match src="identifier: ux [41935,41937]" dest="identifier: ux [42219,42221]"/>
  <match src="{: { [20997,20998]" dest="{: { [21047,21048]"/>
  <match src="contract_declaration [34194,35921]" dest="contract_declaration [34398,36125]"/>
  <match src="function: function [59689,59697]" dest="function: function [64864,64872]"/>
  <match src="member_expression [52302,52312]" dest="member_expression [57430,57440]"/>
  <match src="public: public [35400,35406]" dest="public: public [35604,35610]"/>
  <match src="identifier: _msgSender [27437,27447]" dest="identifier: _msgSender [27487,27497]"/>
  <match src="=: = [55804,55805]" dest="=: = [61242,61243]"/>
  <match src="member_expression [51153,51165]" dest="member_expression [56123,56135]"/>
  <match src="variable_declaration_statement [51344,51381]" dest="variable_declaration_statement [56314,56351]"/>
  <match src="external: external [36163,36171]" dest="external: external [36367,36375]"/>
  <match src="emit: emit [57628,57632]" dest="emit: emit [55759,55763]"/>
  <match src="identifier: length [17982,17988]" dest="identifier: length [18032,18038]"/>
  <match src="type_name [34302,34309]" dest="type_name [34506,34513]"/>
  <match src="function_definition [10833,11111]" dest="function_definition [10883,11161]"/>
  <match src="(: ( [16737,16738]" dest="(: ( [16787,16788]"/>
  <match src="identifier: amounts [55537,55544]" dest="identifier: amounts [60975,60982]"/>
  <match src="identifier: _functionCallWithValue [16203,16225]" dest="identifier: _functionCallWithValue [16253,16275]"/>
  <match src=".: . [52029,52030]" dest=".: . [57157,57158]"/>
  <match src="address: address [26556,26563]" dest="address: address [26606,26613]"/>
  <match src="bool: bool [2228,2232]" dest="bool: bool [2278,2282]"/>
  <match src=",: , [16241,16242]" dest=",: , [16291,16292]"/>
  <match src="number_literal: 2 [41638,41639]" dest="number_literal: 2 [41922,41923]"/>
  <match src="parameter [35701,35717]" dest="parameter [35905,35921]"/>
  <match src="{: { [19064,19065]" dest="{: { [19114,19115]"/>
  <match src="(: ( [23689,23690]" dest="(: ( [23739,23740]"/>
  <match src=",: , [43912,43913]" dest=",: , [44659,44660]"/>
  <match src="call_expression [50458,50492]" dest="call_expression [68354,68388]"/>
  <match src=".: . [52706,52707]" dest=".: . [58098,58099]"/>
  <match src="!=: != [32121,32123]" dest="!=: != [32171,32173]"/>
  <match src="identifier: ERC20 [23495,23500]" dest="identifier: ERC20 [23545,23550]"/>
  <match src="comment: // REMOVAL OR REORDER OF VARIABLES WILL RESULT [44120,44166]" dest="comment: // REMOVAL OR REORDER OF VARIABLES WILL RESULT [44867,44913]"/>
  <match src="comment: // pragma solidity 0.6.10; [39064,39090]" dest="comment: // pragma solidity 0.6.10; [39348,39374]"/>
  <match src="identifier: _totalSupply [31358,31370]" dest="identifier: _totalSupply [31408,31420]"/>
  <match src="): ) [49888,49889]" dest="): ) [55139,55140]"/>
  <match src="public: public [47978,47984]" dest="public: public [52324,52330]"/>
  <match src="): ) [40698,40699]" dest="): ) [40982,40983]"/>
  <match src="uint256: uint256 [48476,48483]" dest="uint256: uint256 [53337,53344]"/>
  <match src="identifier: __curveGauge [47104,47116]" dest="identifier: __curveGauge [49063,49075]"/>
  <match src="member_expression [50801,50811]" dest="member_expression [62814,62824]"/>
  <match src="member_expression [49814,49836]" dest="member_expression [55065,55087]"/>
  <match src="user_defined_type [46836,46842]" dest="user_defined_type [48730,48736]"/>
  <match src="binary_expression [42338,42343]" dest="binary_expression [42622,42627]"/>
  <match src="identifier: amount [46437,46443]" dest="identifier: amount [48145,48151]"/>
  <match src="string_literal [29883,29923]" dest="string_literal [29933,29973]"/>
  <match src="assignment_expression [49621,49637]" dest="assignment_expression [54872,54888]"/>
  <match src="parameter [26330,26337]" dest="parameter [26380,26387]"/>
  <match src="address: address [59964,59971]" dest="address: address [65148,65155]"/>
  <match src="call_argument [57911,57915]" dest="call_argument [63077,63081]"/>
  <match src="identifier: _owner [34260,34266]" dest="identifier: _owner [34464,34470]"/>
  <match src="public: public [26589,26595]" dest="public: public [26639,26645]"/>
  <match src="call_expression [60844,60872]" dest="call_expression [67093,67121]"/>
  <match src="(: ( [17825,17826]" dest="(: ( [17875,17876]"/>
  <match src="comment: // Dependency file: contracts/truefi/common/Initializable.sol [19427,19488]" dest="comment: // Dependency file: contracts/truefi/common/Initializable.sol [19477,19538]"/>
  <match src="type_name [60907,60924]" dest="type_name [67156,67173]"/>
  <match src="function_definition [35674,35918]" dest="function_definition [35878,36122]"/>
  <match src="return_statement [8983,8992]" dest="return_statement [9033,9042]"/>
  <match src="function: function [51073,51081]" dest="function: function [56043,56051]"/>
  <match src="function_definition [11576,11706]" dest="function_definition [11626,11756]"/>
  <match src="identifier: transferFrom [58737,58749]" dest="identifier: transferFrom [63903,63915]"/>
  <match src="primitive_type [26021,26028]" dest="primitive_type [26071,26078]"/>
  <match src="(: ( [42010,42011]" dest="(: ( [42294,42295]"/>
  <match src=".: . [55695,55696]" dest=".: . [61133,61134]"/>
  <match src="): ) [27326,27327]" dest="): ) [27376,27377]"/>
  <match src="comment: // import {SafeMath} from &quot;@openzeppelin/contracts/math/SafeMath.sol&quot;; [42690,42760]" dest="comment: // import {SafeMath} from &quot;@openzeppelin/contracts/math/SafeMath.sol&quot;; [43256,43326]"/>
  <match src="identifier: sub [8453,8456]" dest="identifier: sub [8503,8506]"/>
  <match src="function_body [49527,49683]" dest="function_body [54778,54934]"/>
  <match src="identifier: borrow [56871,56877]" dest="identifier: borrow [62325,62331]"/>
  <match src="identifier: a [7994,7995]" dest="identifier: a [8044,8045]"/>
  <match src="]: ] [59782,59783]" dest="]: ] [64957,64958]"/>
  <match src="parameter [25401,25406]" dest="parameter [25451,25456]"/>
  <match src="expression_statement [47558,47645]" dest="expression_statement [49443,49523]"/>
  <match src="primitive_type [39641,39648]" dest="primitive_type [39925,39932]"/>
  <match src="primitive_type [55512,55519]" dest="primitive_type [60950,60957]"/>
  <match src="): ) [54380,54381]" dest="): ) [59772,59773]"/>
  <match src="returns: returns [47990,47997]" dest="returns: returns [52336,52343]"/>
  <match src="(: ( [30679,30680]" dest="(: ( [30729,30730]"/>
  <match src="inheritance_specifier [34229,34236]" dest="inheritance_specifier [34433,34440]"/>
  <match src="call_expression [54999,55011]" dest="call_expression [60428,60440]"/>
  <match src="identifier: _token_amount [37211,37224]" dest="identifier: _token_amount [37415,37428]"/>
  <match src="contract: contract [19047,19055]" dest="contract: contract [19097,19105]"/>
  <match src="comment: // word because each write operation emits an extra SLOAD to first read the [5249,5324]" dest="comment: // word because each write operation emits an extra SLOAD to first read the [5299,5374]"/>
  <match src="{: { [41157,41158]" dest="{: { [41441,41442]"/>
  <match src="call_expression [49538,49610]" dest="call_expression [54789,54861]"/>
  <match src="[: [ [37096,37097]" dest="[: [ [37300,37301]"/>
  <match src="&quot;: &quot; [57025,57026]" dest="&quot;: &quot; [68699,68700]"/>
  <match src="view: view [36612,36616]" dest="view: view [36816,36820]"/>
  <match src="identifier: pv [54114,54116]" dest="identifier: pv [59506,59508]"/>
  <match src="(: ( [9651,9652]" dest="(: ( [9701,9702]"/>
  <match src="number_literal: 0 [51976,51977]" dest="number_literal: 0 [57104,57105]"/>
  <match src="(: ( [41323,41324]" dest="(: ( [41607,41608]"/>
  <match src="): ) [35784,35785]" dest="): ) [35988,35989]"/>
  <match src="state_mutability [39149,39153]" dest="state_mutability [39433,39437]"/>
  <match src="type_name [15740,15745]" dest="type_name [15790,15795]"/>
  <match src="call_expression [58988,59022]" dest="call_expression [64163,64197]"/>
  <match src="(: ( [26329,26330]" dest="(: ( [26379,26380]"/>
  <match src="identifier: flush [55327,55332]" dest="identifier: flush [60756,60761]"/>
  <match src="): ) [61001,61002]" dest="): ) [67250,67251]"/>
  <match src="public: public [48750,48756]" dest="public: public [53610,53616]"/>
  <match src="call_expression [57863,57916]" dest="call_expression [63029,63082]"/>
  <match src="identifier: joiningFee [44481,44491]" dest="identifier: joiningFee [45228,45238]"/>
  <match src="identifier: path [59793,59797]" dest="identifier: path [64968,64972]"/>
  <match src="type_name [16670,16677]" dest="type_name [16720,16727]"/>
  <match src="parameter [10919,10926]" dest="parameter [10969,10976]"/>
  <match src="(: ( [52643,52644]" dest="(: ( [58030,58031]"/>
  <match src="identifier: target [16226,16232]" dest="identifier: target [16276,16282]"/>
  <match src=",: , [10952,10953]" dest=",: , [11002,11003]"/>
  <match src="call_argument [35509,35510]" dest="call_argument [35713,35714]"/>
  <match src="yul_evm_builtin [18267,18273]" dest="yul_evm_builtin [18317,18323]"/>
  <match src="call_argument [58486,58491]" dest="call_argument [63652,63657]"/>
  <match src="visibility [6028,6035]" dest="visibility [6078,6085]"/>
  <match src="function_definition [24189,24363]" dest="function_definition [24239,24413]"/>
  <match src="identifier: div [50228,50231]" dest="identifier: div [55496,55499]"/>
  <match src="identifier: b [12305,12306]" dest="identifier: b [12355,12356]"/>
  <match src="expression_statement [52693,52795]" dest="expression_statement [58085,58187]"/>
  <match src="call_expression [57191,57254]" dest="call_expression [62522,62577]"/>
  <match src="(: ( [59933,59934]" dest="(: ( [65117,65118]"/>
  <match src="identifier: require [30406,30413]" dest="identifier: require [30456,30463]"/>
  <match src="): ) [49609,49610]" dest="): ) [54860,54861]"/>
  <match src="address: address [16090,16097]" dest="address: address [16140,16147]"/>
  <match src="call_argument [55638,55657]" dest="call_argument [61076,61095]"/>
  <match src="primitive_type [52892,52899]" dest="primitive_type [58284,58291]"/>
  <match src="=: = [17773,17774]" dest="=: = [17823,17824]"/>
  <match src="number_literal: 0 [31234,31235]" dest="number_literal: 0 [31284,31285]"/>
  <match src="visibility [37502,37510]" dest="visibility [37706,37714]"/>
  <match src="function_body [50180,50842]" dest="function_body [55448,55812]"/>
  <match src="function: function [31898,31906]" dest="function: function [31948,31956]"/>
  <match src="identifier: amountToMint [50578,50590]" dest="identifier: mintedAmount [68474,68486]"/>
  <match src="call_argument [42051,42057]" dest="call_argument [42335,42341]"/>
  <match src=".: . [56517,56518]" dest=".: . [61964,61965]"/>
  <match src="identifier: cs [21609,21611]" dest="identifier: cs [21659,21661]"/>
  <match src="primitive_type [32634,32639]" dest="primitive_type [32684,32689]"/>
  <match src="identifier: ensureEnoughTokensAreAvailable [58095,58125]" dest="identifier: ensureEnoughTokensAreAvailable [63261,63291]"/>
  <match src="member_expression [49932,49948]" dest="member_expression [55183,55199]"/>
  <match src="(: ( [46399,46400]" dest="(: ( [48107,48108]"/>
  <match src="(: ( [28059,28060]" dest="(: ( [28109,28110]"/>
  <match src="identifier: currentlyAvailableAmount [49343,49367]" dest="identifier: currentlyAvailableAmount [54594,54618]"/>
  <match src="primitive_type [27990,27997]" dest="primitive_type [28040,28047]"/>
  <match src="identifier: deposit [36525,36532]" dest="identifier: deposit [36729,36736]"/>
  <match src="identifier: yAmount [56603,56610]" dest="identifier: yAmount [62050,62057]"/>
  <match src="identifier: _decimals [32671,32680]" dest="identifier: _decimals [32721,32730]"/>
  <match src="visibility [40669,40677]" dest="visibility [40953,40961]"/>
  <match src="call_expression [30561,30585]" dest="call_expression [30611,30635]"/>
  <match src="primitive_type [36186,36193]" dest="primitive_type [36390,36397]"/>
  <match src="return: return [25757,25763]" dest="return: return [25807,25813]"/>
  <match src="{: { [55399,55400]" dest="{: { [60837,60838]"/>
  <match src="identifier: yBalance [55909,55917]" dest="identifier: yBalance [61347,61355]"/>
  <match src="identifier: msg [58816,58819]" dest="identifier: msg [63982,63985]"/>
  <match src="address: address [44572,44579]" dest="address: address [45319,45326]"/>
  <match src="(: ( [52219,52220]" dest="(: ( [57347,57348]"/>
  <match src="type_name [2537,2544]" dest="type_name [2587,2594]"/>
  <match src="call_argument [52846,52878]" dest="call_argument [58238,58270]"/>
  <match src="(: ( [13166,13167]" dest="(: ( [13216,13217]"/>
  <match src="call_expression [28060,28072]" dest="call_expression [28110,28122]"/>
  <match src="variable_declaration [50191,50202]" dest="variable_declaration [55459,55470]"/>
  <match src="uint256: uint256 [8893,8900]" dest="uint256: uint256 [8943,8950]"/>
  <match src="identifier: balanceOf [1869,1878]" dest="identifier: balanceOf [1919,1928]"/>
  <match src="call_expression [57561,57614]" dest="call_expression [62736,62788]"/>
  <match src=",: , [31965,31966]" dest=",: , [32015,32016]"/>
  <match src="uint256: uint256 [27267,27274]" dest="uint256: uint256 [27317,27324]"/>
  <match src="identifier: a [11665,11666]" dest="identifier: a [11715,11716]"/>
  <match src="identifier: to [54859,54861]" dest="identifier: to [60288,60290]"/>
  <match src="identifier: div [52943,52946]" dest="identifier: div [58335,58338]"/>
  <match src="comment: // increase the likelihood of the full refund coming into effect. [5855,5920]" dest="comment: // increase the likelihood of the full refund coming into effect. [5905,5970]"/>
  <match src="identifier: require [60303,60310]" dest="identifier: require [66491,66498]"/>
  <match src="call_expression [58295,58369]" dest="call_expression [63461,63535]"/>
  <match src="{: { [6076,6077]" dest="{: { [6126,6127]"/>
  <match src="returns: returns [11625,11632]" dest="returns: returns [11675,11682]"/>
  <match src="identifier: balance [17295,17302]" dest="identifier: balance [17345,17352]"/>
  <match src="identifier: name [24442,24446]" dest="identifier: name [24492,24496]"/>
  <match src=",: , [52036,52037]" dest=",: , [57164,57165]"/>
  <match src="): ) [48537,48538]" dest="): ) [53398,53399]"/>
  <match src="call_expression [51836,51888]" dest="call_expression [56964,57016]"/>
  <match src="comment: // pragma solidity 0.6.10; [33507,33533]" dest="comment: // pragma solidity 0.6.10; [33711,33737]"/>
  <match src="function_definition [40983,42066]" dest="function_definition [41267,42350]"/>
  <match src="number_literal: 0 [60947,60948]" dest="number_literal: 0 [67196,67197]"/>
  <match src="address: address [30505,30512]" dest="address: address [30555,30562]"/>
  <match src="call_expression [53259,53276]" dest="call_expression [58651,58668]"/>
  <match src="internal: internal [33409,33417]" dest="internal: internal [33459,33467]"/>
  <match src="): ) [52063,52064]" dest="): ) [57191,57192]"/>
  <match src="identifier: onlyOwner [56262,56271]" dest="identifier: onlyOwner [51255,51264]"/>
  <match src=",: , [58826,58827]" dest=",: , [63992,63993]"/>
  <match src="returns: returns [25552,25559]" dest="returns: returns [25602,25609]"/>
  <match src="identifier: getPricePerFullShare [36140,36160]" dest="identifier: getPricePerFullShare [36344,36364]"/>
  <match src="call_expression [26116,26128]" dest="call_expression [26166,26178]"/>
  <match src="parameter [12277,12284]" dest="parameter [12327,12334]"/>
  <match src="&lt;=: &lt;= [57957,57959]" dest="&lt;=: &lt;= [63123,63125]"/>
  <match src="identifier: owner [26268,26273]" dest="identifier: owner [26318,26323]"/>
  <match src="[: [ [59781,59782]" dest="[: [ [64956,64957]"/>
  <match src=".: . [52836,52837]" dest=".: . [58228,58229]"/>
  <match src="(: ( [57276,57277]" dest="(: ( [62599,62600]"/>
  <match src=",: , [16811,16812]" dest=",: , [16861,16862]"/>
  <match src="comment: // Dependency file: @openzeppelin/contracts/utils/ReentrancyGuard.sol [4263,4332]" dest="comment: // Dependency file: @openzeppelin/contracts/utils/ReentrancyGuard.sol [4313,4382]"/>
  <match src="primitive_type [33366,33373]" dest="primitive_type [33416,33423]"/>
  <match src="uint256: uint256 [37089,37096]" dest="uint256: uint256 [37293,37300]"/>
  <match src="contract_body [23535,33431]" dest="contract_body [23585,33635]"/>
  <match src="type_cast_expression [59857,59876]" dest="type_cast_expression [65041,65060]"/>
  <match src="parameter [36557,36564]" dest="parameter [36761,36768]"/>
  <match src="parameter [27214,27228]" dest="parameter [27264,27278]"/>
  <match src="): ) [31086,31087]" dest="): ) [31136,31137]"/>
  <match src="{: { [17994,17995]" dest="{: { [18044,18045]"/>
  <match src="call_argument [29616,29636]" dest="call_argument [29666,29686]"/>
  <match src="identifier: _msgSender [26648,26658]" dest="identifier: _msgSender [26698,26708]"/>
  <match src="block_statement [53948,53987]" dest="block_statement [59340,59379]"/>
  <match src="): ) [57492,57493]" dest="): ) [53044,53045]"/>
  <match src="view: view [1749,1753]" dest="view: view [1799,1803]"/>
  <match src="bool: bool [28034,28038]" dest="bool: bool [28084,28088]"/>
  <match src="(: ( [54102,54103]" dest="(: ( [59494,59495]"/>
  <match src="identifier: recipient [27357,27366]" dest="identifier: recipient [27407,27416]"/>
  <match src="==: == [54745,54747]" dest="==: == [60174,60176]"/>
  <match src="comment: /// @dev Returns true if and only if the function is running in the constructor [21059,21138]" dest="comment: /// @dev Returns true if and only if the function is running in the constructor [21109,21188]"/>
  <match src="primitive_type [30505,30512]" dest="primitive_type [30555,30562]"/>
  <match src="memory: memory [39651,39657]" dest="memory: memory [39935,39941]"/>
  <match src="(: ( [60819,60820]" dest="(: ( [67068,67069]"/>
  <match src="uint256: uint256 [26573,26580]" dest="uint256: uint256 [26623,26630]"/>
  <match src="call_expression [49191,49209]" dest="call_expression [54442,54460]"/>
  <match src="virtual: virtual [19107,19114]" dest="virtual: virtual [19157,19164]"/>
  <match src="primitive_type [23776,23782]" dest="primitive_type [23826,23832]"/>
  <match src="override: override [25714,25722]" dest="override: override [25764,25772]"/>
  <match src="): ) [36193,36194]" dest="): ) [36397,36398]"/>
  <match src="type_name [55787,55794]" dest="type_name [61225,61232]"/>
  <match src="type_name [32634,32639]" dest="type_name [32684,32689]"/>
  <match src="call_argument [50761,50765]" dest="call_argument [55731,55735]"/>
  <match src="identifier: x [41058,41059]" dest="identifier: x [41342,41343]"/>
  <match src="user_defined_type [36117,36123]" dest="user_defined_type [36321,36327]"/>
  <match src="(: ( [14596,14597]" dest="(: ( [14646,14647]"/>
  <match src="type_alias [43935,43943]" dest="type_alias [44682,44690]"/>
  <match src="memory: memory [16112,16118]" dest="memory: memory [16162,16168]"/>
  <match src="parameter [34767,34774]" dest="parameter [34971,34978]"/>
  <match src="member_expression [48074,48095]" dest="member_expression [52420,52441]"/>
  <match src="]: ] [29849,29850]" dest="]: ] [29899,29900]"/>
  <match src="member_expression [49191,49219]" dest="member_expression [54442,54470]"/>
  <match src="identifier: lv [54084,54086]" dest="identifier: lv [59476,59478]"/>
  <match src="return: return [54140,54146]" dest="return: return [59532,59538]"/>
  <match src="): ) [60169,60170]" dest="): ) [66348,66349]"/>
  <match src="public: public [59805,59811]" dest="public: public [64980,64986]"/>
  <match src="array_access [26357,26375]" dest="array_access [26407,26425]"/>
  <match src="(: ( [57215,57216]" dest="(: ( [62546,62547]"/>
  <match src="view: view [47810,47814]" dest="view: view [50639,50643]"/>
  <match src="(: ( [39640,39641]" dest="(: ( [39924,39925]"/>
  <match src="primitive_type [36626,36633]" dest="primitive_type [36830,36837]"/>
  <match src=",: , [30032,30033]" dest=",: , [30082,30083]"/>
  <match src="call_expression [60984,61036]" dest="call_expression [67233,67285]"/>
  <match src="member_expression [47022,47040]" dest="member_expression [48981,48999]"/>
  <match src=",: , [16804,16805]" dest=",: , [16854,16855]"/>
  <match src="call_expression [60844,60895]" dest="call_expression [67093,67144]"/>
  <match src="member_expression [58295,58373]" dest="member_expression [63461,63539]"/>
  <match src="uint256: uint256 [41784,41791]" dest="uint256: uint256 [42068,42075]"/>
  <match src="identifier: data [17806,17810]" dest="identifier: data [17856,17860]"/>
  <match src="type_name [39578,39585]" dest="type_name [39862,39869]"/>
  <match src="=: = [51484,51485]" dest="=: = [56454,56455]"/>
  <match src="call_argument [51265,51296]" dest="call_argument [56235,56266]"/>
  <match src="call_argument [28888,28903]" dest="call_argument [28938,28953]"/>
  <match src="comment: // This method relies in extcodesize, which returns 0 for contracts in [13224,13294]" dest="comment: // This method relies in extcodesize, which returns 0 for contracts in [13274,13344]"/>
  <match src="contract_body [20309,21827]" dest="contract_body [20359,21877]"/>
  <match src="&quot;: &quot; [34965,34966]" dest="&quot;: &quot; [35169,35170]"/>
  <match src="binary_expression [7994,7999]" dest="binary_expression [8044,8049]"/>
  <match src="parameter [39210,39227]" dest="parameter [39494,39511]"/>
  <match src="function_body [51134,52409]" dest="function_body [56104,57728]"/>
  <match src="): ) [57251,57252]" dest="): ) [62574,62575]"/>
  <match src="call_expression [11661,11698]" dest="call_expression [11711,11748]"/>
  <match src="{: { [21197,21198]" dest="{: { [21247,21248]"/>
  <match src="function_definition [10205,10337]" dest="function_definition [10255,10387]"/>
  <match src="bool: bool [27322,27326]" dest="bool: bool [27372,27376]"/>
  <match src=",: , [8829,8830]" dest=",: , [8879,8880]"/>
  <match src="type_cast_expression [14597,14610]" dest="type_cast_expression [14647,14660]"/>
  <match src=".: . [61602,61603]" dest=".: . [67851,67852]"/>
  <match src="comment: /**      * @dev Modifier to use in the initializer function of a contract.      */ [20563,20647]" dest="comment: /**      * @dev Modifier to use in the initializer function of a contract.      */ [20613,20697]"/>
  <match src="uint256: uint256 [37203,37210]" dest="uint256: uint256 [37407,37414]"/>
  <match src="visibility [8870,8878]" dest="visibility [8920,8928]"/>
  <match src=",: , [20742,20743]" dest=",: , [20792,20793]"/>
  <match src="identifier: poolValue [53908,53917]" dest="identifier: poolValue [59300,59309]"/>
  <match src="type_cast_expression [34618,34628]" dest="type_cast_expression [34822,34832]"/>
  <match src="returns: returns [27313,27320]" dest="returns: returns [27363,27370]"/>
  <match src="boolean_literal [26166,26170]" dest="boolean_literal [26216,26220]"/>
  <match src="function_definition [36749,36799]" dest="function_definition [36953,37003]"/>
  <match src="identifier: onlyLender [56959,56969]" dest="identifier: onlyLender [62392,62402]"/>
  <match src="call_expression [47209,47229]" dest="call_expression [49168,49188]"/>
  <match src="call_expression [51367,51380]" dest="call_expression [56337,56350]"/>
  <match src="parameter [10846,10855]" dest="parameter [10896,10905]"/>
  <match src="uint256: uint256 [54400,54407]" dest="uint256: uint256 [59792,59799]"/>
  <match src="type_cast_expression [48055,48068]" dest="type_cast_expression [52401,52414]"/>
  <match src="uint256: uint256 [2592,2599]" dest="uint256: uint256 [2642,2649]"/>
  <match src="{: { [16185,16186]" dest="{: { [16235,16236]"/>
  <match src="type_name [7917,7924]" dest="type_name [7967,7974]"/>
  <match src="state_mutability [1905,1909]" dest="state_mutability [1955,1959]"/>
  <match src="user_defined_type [46900,46914]" dest="user_defined_type [48794,48808]"/>
  <match src="identifier: _curveGauge [49305,49316]" dest="identifier: _curveGauge [54556,54567]"/>
  <match src="identifier: liquidValue [53871,53882]" dest="identifier: liquidValue [59263,59274]"/>
  <match src="type_name [10868,10874]" dest="type_name [10918,10924]"/>
  <match src="primitive_type [11634,11641]" dest="primitive_type [11684,11691]"/>
  <match src="comment: // import {ERC20} from &quot;contracts/truefi/common/UpgradeableERC20.sol&quot;; [42764,42834]" dest="comment: // import {ERC20} from &quot;contracts/truefi/common/UpgradeableERC20.sol&quot;; [43330,43400]"/>
  <match src="call_expression [57863,57896]" dest="call_expression [63029,63062]"/>
  <match src="comment: /**      * @dev Emitted when funds are pulled from curve.fi      * @param yAmount Amount of pool tokens      */ [45564,45678]" dest="comment: /**      * @dev Emitted when funds are pulled from curve.fi      * @param yAmount Amount of pool tokens      */ [47272,47386]"/>
  <match src="call_argument [55418,55453]" dest="call_argument [60856,60891]"/>
  <match src="&quot;: &quot; [31147,31148]" dest="&quot;: &quot; [31197,31198]"/>
  <match src="identifier: origin [50672,50678]" dest="identifier: origin [55642,55648]"/>
  <match src="&quot;: &quot; [55455,55456]" dest="&quot;: &quot; [60893,60894]"/>
  <match src="string [57977,58048]" dest="string [63143,63214]"/>
  <match src="string_literal [29638,29677]" dest="string_literal [29688,29727]"/>
  <match src="contract_body [39435,39670]" dest="contract_body [39719,39954]"/>
  <match src="): ) [58956,58957]" dest="): ) [64122,64123]"/>
  <match src="call_expression [61588,61646]" dest="call_expression [67837,67895]"/>
  <match src="call_expression [28083,28133]" dest="call_expression [28133,28183]"/>
  <match src="primitive_type [23739,23746]" dest="primitive_type [23789,23796]"/>
  <match src="): ) [14806,14807]" dest="): ) [14856,14857]"/>
  <match src="identifier: liquidRatioAfter [54065,54081]" dest="identifier: liquidRatioAfter [59457,59473]"/>
  <match src="identifier: _curvePool [48290,48300]" dest="identifier: _curvePool [52785,52795]"/>
  <match src="binary_expression [51265,51296]" dest="binary_expression [56235,56266]"/>
  <match src="public: public [44474,44480]" dest="public: public [45221,45227]"/>
  <match src="variable_declaration [14754,14766]" dest="variable_declaration [14804,14816]"/>
  <match src="function_definition [38327,38366]" dest="function_definition [38624,38663]"/>
  <match src="member_expression [48503,48524]" dest="member_expression [53364,53385]"/>
  <match src="identifier: __curvePool [46779,46790]" dest="identifier: __curvePool [48673,48684]"/>
  <match src=",: , [55355,55356]" dest=",: , [60784,60785]"/>
  <match src="{: { [5160,5161]" dest="{: { [5210,5211]"/>
  <match src="expression_statement [47199,47230]" dest="expression_statement [49158,49189]"/>
  <match src="comment: /**      * @dev Returns the name of the token.      */ [24371,24427]" dest="comment: /**      * @dev Returns the name of the token.      */ [24421,24477]"/>
  <match src=",: , [3701,3702]" dest=",: , [3751,3752]"/>
  <match src="): ) [61298,61299]" dest="): ) [67547,67548]"/>
  <match src="(: ( [31421,31422]" dest="(: ( [31471,31472]"/>
  <match src="): ) [56516,56517]" dest="): ) [61963,61964]"/>
  <match src="variable_declaration [53997,54022]" dest="variable_declaration [59389,59414]"/>
  <match src="identifier: _curvePool [49906,49916]" dest="identifier: _curvePool [55157,55167]"/>
  <match src="(: ( [47406,47407]" dest="(: ( [66150,66151]"/>
  <match src="yul_path [18282,18292]" dest="yul_path [18332,18342]"/>
  <match src="identifier: onlyOwner [34910,34919]" dest="identifier: onlyOwner [35114,35123]"/>
  <match src="identifier: _minter [58988,58995]" dest="identifier: _minter [64163,64170]"/>
  <match src="identifier: _totalSupply [51875,51887]" dest="identifier: _totalSupply [57003,57015]"/>
  <match src="[: [ [50668,50669]" dest="[: [ [55638,55639]"/>
  <match src="emit: emit [30658,30662]" dest="emit: emit [30708,30712]"/>
  <match src="[: [ [29862,29863]" dest="[: [ [29912,29913]"/>
  <match src="): ) [37029,37030]" dest="): ) [37233,37234]"/>
  <match src="binary_expression [51153,51184]" dest="binary_expression [56123,56154]"/>
  <match src="identifier: xc [41265,41267]" dest="identifier: xc [41549,41551]"/>
  <match src="public: public [26292,26298]" dest="public: public [26342,26348]"/>
  <match src="uint256: uint256 [57722,57729]" dest="uint256: uint256 [62888,62895]"/>
  <match src="parameter [14553,14567]" dest="parameter [14603,14617]"/>
  <match src="}: } [49682,49683]" dest="}: } [54933,54934]"/>
  <match src="type_name [36875,36882]" dest="type_name [37079,37086]"/>
  <match src="type_cast_expression [47328,47347]" dest="type_cast_expression [66036,66055]"/>
  <match src="type_name [14553,14560]" dest="type_name [14603,14610]"/>
  <match src="): ) [56316,56317]" dest="): ) [61763,61764]"/>
  <match src="identifier: _status [6087,6094]" dest="identifier: _status [6137,6144]"/>
  <match src="number_literal: 0 [60950,60951]" dest="number_literal: 0 [67199,67200]"/>
  <match src="call_argument [32034,32053]" dest="call_argument [32084,32103]"/>
  <match src="type_name [17734,17738]" dest="type_name [17784,17788]"/>
  <match src="parameter [2552,2567]" dest="parameter [2602,2617]"/>
  <match src="call_expression [52919,52942]" dest="call_expression [58311,58334]"/>
  <match src=",: , [31308,31309]" dest=",: , [31358,31359]"/>
  <match src="return: return [48019,48025]" dest="return: return [52365,52371]"/>
  <match src="call_argument [40719,40742]" dest="call_argument [41003,41026]"/>
  <match src="visibility [60709,60715]" dest="visibility [66958,66964]"/>
  <match src="comment: // pragma solidity 0.6.10; [39380,39406]" dest="comment: // pragma solidity 0.6.10; [39664,39690]"/>
  <match src="!=: != [30422,30424]" dest="!=: != [30472,30474]"/>
  <match src="type_name [55357,55364]" dest="type_name [60786,60793]"/>
  <match src="(: ( [54962,54963]" dest="(: ( [60391,60392]"/>
  <match src="identifier: initialized [20410,20421]" dest="identifier: initialized [20460,20471]"/>
  <match src="visibility [21169,21176]" dest="visibility [21219,21226]"/>
  <match src="identifier: amount [27275,27281]" dest="identifier: amount [27325,27331]"/>
</matches>
<actions>
  <move-tree tree="comment: /**  * @title TrueFi Pool  * @dev Lending pool which uses curve.fi to store idle funds  * Earn high interest rates on currency deposits through uncollateralized loans  *  * Funds deposited in this pool are NOT LIQUID!  * Exiting the pool will withdraw a basket of LoanTokens backing the pool  * After exiting, an account will need to wait for LoanTokens to expire and burn them  * It is recommended to perform a zap or swap tokens on Uniswap for liquidity  *  * Funds are managed through an external function to save gas on deposits  */ [43305,43852]" parent="source_file [0,68719]" at="1"/>
  <update-node tree="comment: /**  * @title TrueFi Pool  * @dev Lending pool which uses curve.fi to store idle funds  * Earn high interest rates on currency deposits through uncollateralized loans  *  * Funds deposited in this pool are NOT LIQUID!  * Exiting the pool will withdraw a basket of LoanTokens backing the pool  * After exiting, an account will need to wait for LoanTokens to expire and burn them  * It is recommended to perform a zap or swap tokens on Uniswap for liquidity  *  * Funds are managed through an external function to save gas on deposits  */ [43305,43852]" label="// https://github.com/trusttoken/smart-contracts"/>
  <insert-node tree="comment: // Dependency file: contracts/truefi/interface/ITruPriceOracle.sol [42736,42802]" parent="source_file [0,68719]" at="71"/>
  <insert-node tree="comment: // pragma solidity 0.6.10; [42806,42832]" parent="source_file [0,68719]" at="72"/>
  <insert-tree tree="interface_declaration [42836,43012]" parent="source_file [0,68719]" at="73"/>
  <insert-node tree="comment: // import {ITruPriceOracle} from &quot;contracts/truefi/interface/ITruPriceOracle.sol&quot;; [43869,43951]" parent="source_file [0,68719]" at="86"/>
  <insert-node tree="comment: /**  * @title TrueFi Pool  * @dev Lending pool which uses curve.fi to store idle funds  * Earn high interest rates on currency deposits through uncollateralized loans  *  * Funds deposited in this pool are not fully liquid. Luqidity  * Exiting the pool has 2 options:  * - withdraw a basket of LoanTokens backing the pool  * - take an exit penallty depending on pool liquidity  * After exiting, an account will need to wait for LoanTokens to expire and burn them  * It is recommended to perform a zap or swap tokens on Uniswap for increased liquidity  *  * Funds are managed through an external function to save gas on deposits  */ [43955,44599]" parent="source_file [0,68719]" at="87"/>
  <move-tree tree="comment: /**      * @dev Get total balance of curve.fi pool tokens      */ [47880,47947]" parent="contract_body [44669,68719]" at="18"/>
  <move-tree tree="comment: /**      * @dev Virtual value of yCRV tokens in the pool      */ [48127,48193]" parent="contract_body [44669,68719]" at="19"/>
  <move-tree tree="comment: /**      * @dev Virtual value of liquid assets in the pool      */ [48358,48426]" parent="contract_body [44669,68719]" at="20"/>
  <move-tree tree="comment: /**      * @dev Calculate pool value in TUSD      * &quot;virtual price&quot; of entire pool - LoanTokens, TUSD, curve y pool tokens      * @return pool value in TUSD      */ [48555,48723]" parent="contract_body [44669,68719]" at="21"/>
  <move-tree tree="comment: /**      * @dev Exit pool only with liquid tokens      * This function will withdraw TUSD but with a small penalty      * @param amount amount of pool tokens to redeem for underlying tokens      */ [52417,52618]" parent="contract_body [44669,68719]" at="22"/>
  <move-tree tree="comment: /**      * @dev Calculates average penalty on interval [from; to]      */ [54498,54573]" parent="contract_body [44669,68719]" at="27"/>
  <move-tree tree="comment: /**      * @dev Remove liquidity from curve and transfer to borrower      * @param expectedAmount expected amount to borrow      */ [56722,56856]" parent="contract_body [44669,68719]" at="28"/>
  <move-tree tree="comment: /**      * @notice Expected amount of minted Curve.fi yDAI/yUSDC/yUSDT/yTUSD tokens.      * Can be used to control slippage      * Called in flush() function      * @param currencyAmount amount to calculate for      */ [60431,60654]" parent="contract_body [44669,68719]" at="29"/>
  <insert-tree tree="function_definition [33486,33632]" parent="contract_body [23585,33635]" at="45"/>
  <insert-node tree="comment: /// @dev stake token (TRU) [38400,38426]" parent="contract_body [38297,39276]" at="3"/>
  <insert-tree tree="function_definition [38432,38485]" parent="contract_body [38297,39276]" at="4"/>
  <insert-tree tree="state_variable_declaration [45363,45389]" parent="contract_body [44669,68719]" at="18"/>
  <update-node tree="comment: /**      * @dev Get total balance of curve.fi pool tokens      */ [47880,47947]" label="// cache values during sync for gas optimization"/>
  <insert-tree tree="state_variable_declaration [45451,45471]" parent="contract_body [44669,68719]" at="20"/>
  <insert-tree tree="state_variable_declaration [45477,45510]" parent="contract_body [44669,68719]" at="21"/>
  <insert-tree tree="state_variable_declaration [45516,45548]" parent="contract_body [44669,68719]" at="22"/>
  <update-node tree="comment: /**      * @dev Virtual value of yCRV tokens in the pool      */ [48127,48193]" label="// TRU price oracle"/>
  <insert-tree tree="state_variable_declaration [45581,45612]" parent="contract_body [44669,68719]" at="24"/>
  <update-node tree="comment: /**      * @dev Virtual value of liquid assets in the pool      */ [48358,48426]" label="// fund manager can call functions to help manage pool funds"/>
  <update-node tree="comment: /**      * @dev Calculate pool value in TUSD      * &quot;virtual price&quot; of entire pool - LoanTokens, TUSD, curve y pool tokens      * @return pool value in TUSD      */ [48555,48723]" label="// fund manager can be set to 0 or governance"/>
  <insert-tree tree="state_variable_declaration [45737,45765]" parent="contract_body [44669,68719]" at="27"/>
  <update-node tree="comment: /**      * @dev Exit pool only with liquid tokens      * This function will withdraw TUSD but with a small penalty      * @param amount amount of pool tokens to redeem for underlying tokens      */ [52417,52618]" label="// allow pausing of deposits"/>
  <insert-tree tree="state_variable_declaration [45807,45835]" parent="contract_body [44669,68719]" at="29"/>
  <update-node tree="comment: /**      * @dev Calculates average penalty on interval [from; to]      */ [54498,54573]" label="/**      * @dev Emitted when stake token address      * @param token New stake token address      */"/>
  <insert-tree tree="event_definition [46101,46139]" parent="contract_body [44669,68719]" at="35"/>
  <update-node tree="comment: /**      * @dev Remove liquidity from curve and transfer to borrower      * @param expectedAmount expected amount to borrow      */ [56722,56856]" label="/**      * @dev Emitted oracle was changed      * @param newOracle New oracle address      */"/>
  <insert-tree tree="event_definition [46249,46296]" parent="contract_body [44669,68719]" at="37"/>
  <update-node tree="comment: /**      * @notice Expected amount of minted Curve.fi yDAI/yUSDC/yUSDT/yTUSD tokens.      * Can be used to control slippage      * Called in flush() function      * @param currencyAmount amount to calculate for      */ [60431,60654]" label="/**      * @dev Emitted when funds manager is changed      * @param newManager New manager address      */"/>
  <insert-tree tree="event_definition [46419,46465]" parent="contract_body [44669,68719]" at="39"/>
  <insert-node tree="comment: /**      * @dev Emitted when joining is paused or unpaused      * @param isJoiningPaused New pausing status      */ [48161,48279]" parent="contract_body [44669,68719]" at="56"/>
  <insert-tree tree="event_definition [48285,48339]" parent="contract_body [44669,68719]" at="57"/>
  <insert-node tree="comment: /**      * @dev pool can only be joined when it's unpaused      */ [49550,49618]" parent="contract_body [44669,68719]" at="62"/>
  <insert-tree tree="modifier_definition [49624,49750]" parent="contract_body [44669,68719]" at="63"/>
  <insert-node tree="comment: /**      * @dev only lender can perform borrowing or repaying      */ [49758,49829]" parent="contract_body [44669,68719]" at="64"/>
  <insert-tree tree="modifier_definition [49835,50013]" parent="contract_body [44669,68719]" at="65"/>
  <insert-node tree="comment: /**      * Sync values to avoid making expensive calls multiple times      * Will set inSync to true, allowing getter functions to return cached values      * Wipes cached values to save gas      */ [50021,50223]" parent="contract_body [44669,68719]" at="66"/>
  <insert-tree tree="modifier_definition [50229,50493]" parent="contract_body [44669,68719]" at="67"/>
  <insert-node tree="comment: /**      * @dev get stake token address      * @return stake token address      */ [50709,50794]" parent="contract_body [44669,68719]" at="70"/>
  <insert-tree tree="function_definition [50800,50897]" parent="contract_body [44669,68719]" at="71"/>
  <insert-node tree="comment: /**      * @dev set stake token address      * @param token stake token address      */ [50905,50995]" parent="contract_body [44669,68719]" at="72"/>
  <insert-node tree="function_definition [51001,51133]" parent="contract_body [44669,68719]" at="73"/>
  <insert-node tree="comment: /**      * @dev set funds manager address      */ [51141,51192]" parent="contract_body [44669,68719]" at="74"/>
  <insert-node tree="function_definition [51198,51366]" parent="contract_body [44669,68719]" at="75"/>
  <insert-node tree="comment: /**      * @dev set oracle token address      * @param newOracle new oracle address      */ [51374,51468]" parent="contract_body [44669,68719]" at="76"/>
  <insert-node tree="function_definition [51474,51615]" parent="contract_body [44669,68719]" at="77"/>
  <insert-node tree="comment: /**      * @dev Allow pausing of deposits in case of emergency      * @param status New deposit status      */ [51623,51736]" parent="contract_body [44669,68719]" at="78"/>
  <insert-tree tree="function_definition [51742,51909]" parent="contract_body [44669,68719]" at="79"/>
  <insert-node tree="comment: /**      * @dev Get total balance of stake tokens      * @return Balance of stake tokens in this contract      */ [51917,52033]" parent="contract_body [44669,68719]" at="80"/>
  <insert-tree tree="function_definition [52039,52160]" parent="contract_body [44669,68719]" at="81"/>
  <insert-node tree="comment: /**      * @dev Get total balance of curve.fi pool tokens      * @return Balance of y pool tokens in this contract      */ [52168,52293]" parent="contract_body [44669,68719]" at="82"/>
  <insert-node tree="comment: /**      * @dev Virtual value of yCRV tokens in the pool      * Will return sync value if inSync      * @return yTokenValue in USD.      */ [52473,52616]" parent="contract_body [44669,68719]" at="84"/>
  <insert-node tree="comment: /**      * @dev Price of TRU in USD      * @return Oracle price of TRU in USD      */ [52853,52941]" parent="contract_body [44669,68719]" at="86"/>
  <insert-node tree="function_definition [52947,53159]" parent="contract_body [44669,68719]" at="87"/>
  <insert-node tree="comment: /**      * @dev Virtual value of liquid assets in the pool      * @return Virtual liquid value of pool assets      */ [53167,53287]" parent="contract_body [44669,68719]" at="88"/>
  <insert-node tree="comment: /**      * @dev Calculate pool value in TUSD      * &quot;virtual price&quot; of entire pool - LoanTokens, TUSD, curve y pool tokens      * @return pool value in USD      */ [53416,53583]" parent="contract_body [44669,68719]" at="90"/>
  <insert-node tree="comment: /**      * @dev Virtual value of loan assets in the pool      * Will return cached value if inSync      * @return Value of loans in pool      */ [53773,53921]" parent="contract_body [44669,68719]" at="92"/>
  <insert-node tree="function_definition [53927,54091]" parent="contract_body [44669,68719]" at="93"/>
  <insert-node tree="comment: /**      * @dev Exit pool only with liquid tokens      * This function will withdraw TUSD but with a small penalty      * Uses the sync() modifier to reduce gas costs of using curve      * @param amount amount of pool tokens to redeem for underlying tokens      */ [57736,58005]" parent="contract_body [44669,68719]" at="105"/>
  <insert-node tree="comment: /**      * @dev Calculates average penalty on interval [from; to]      * @return average exit penalty      */ [59890,60002]" parent="contract_body [44669,68719]" at="111"/>
  <insert-node tree="comment: /**      * @dev Remove liquidity from curve if necessary and transfer to lender      * @param amount amount for lender to withdraw      */ [62169,62310]" parent="contract_body [44669,68719]" at="118"/>
  <insert-node tree="comment: /**      * @dev Sell collected TRU on Uniswap      * - Selling TRU is managed by the contract owner      * - Calculations can be made off-chain and called based on market conditions      * - Need to pass path of exact pairs to go through while executing exchange      * For example, CRV -&gt; WETH -&gt; TUSD      *      * @param amountIn see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      * @param amountOutMin see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      * @param path see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      */ [65205,65850]" parent="contract_body [44669,68719]" at="127"/>
  <insert-node tree="function_definition [65856,66192]" parent="contract_body [44669,68719]" at="128"/>
  <insert-node tree="comment: /**      * @notice Expected amount of minted Curve.fi yDAI/yUSDC/yUSDT/yTUSD tokens.      * Can be used to control slippage      * Called in flush() function      * @param currencyAmount amount to calculate for      * @return expected amount minted given currency amount      */ [66619,66903]" parent="contract_body [44669,68719]" at="131"/>
  <insert-node tree="comment: /**      * @param depositedAmount Amount of currency deposited      * @return amount minted from this transaction      */ [67911,68035]" parent="contract_body [44669,68719]" at="137"/>
  <insert-node tree="function_definition [68041,68527]" parent="contract_body [44669,68719]" at="138"/>
  <insert-node tree="comment: /**      * @dev Update name and symbol of this contract      */ [68535,68600]" parent="contract_body [44669,68719]" at="139"/>
  <insert-node tree="function_definition [68606,68716]" parent="contract_body [44669,68719]" at="140"/>
  <insert-node tree=",: , [48820,48821]" parent="function_definition [48632,49325]" at="12"/>
  <insert-tree tree="parameter [48831,48850]" parent="function_definition [48632,49325]" at="13"/>
  <insert-node tree=",: , [48850,48851]" parent="function_definition [48632,49325]" at="14"/>
  <insert-tree tree="parameter [48861,48885]" parent="function_definition [48632,49325]" at="15"/>
  <insert-node tree="function: function [51001,51009]" parent="function_definition [51001,51133]" at="0"/>
  <insert-node tree="identifier: setStakeToken [51010,51023]" parent="function_definition [51001,51133]" at="1"/>
  <insert-node tree="(: ( [51023,51024]" parent="function_definition [51001,51133]" at="2"/>
  <insert-tree tree="parameter [51024,51036]" parent="function_definition [51001,51133]" at="3"/>
  <insert-node tree="): ) [51036,51037]" parent="function_definition [51001,51133]" at="4"/>
  <insert-tree tree="visibility [51038,51044]" parent="function_definition [51001,51133]" at="5"/>
  <move-tree tree="modifier_invocation [55389,55398]" parent="function_definition [51001,51133]" at="6"/>
  <insert-tree tree="function_body [51055,51133]" parent="function_definition [51001,51133]" at="7"/>
  <insert-node tree="function: function [51198,51206]" parent="function_definition [51198,51366]" at="0"/>
  <insert-node tree="identifier: setFundsManager [51207,51222]" parent="function_definition [51198,51366]" at="1"/>
  <insert-node tree="(: ( [51222,51223]" parent="function_definition [51198,51366]" at="2"/>
  <insert-tree tree="parameter [51223,51246]" parent="function_definition [51198,51366]" at="3"/>
  <insert-node tree="): ) [51246,51247]" parent="function_definition [51198,51366]" at="4"/>
  <insert-tree tree="visibility [51248,51254]" parent="function_definition [51198,51366]" at="5"/>
  <move-tree tree="modifier_invocation [56262,56271]" parent="function_definition [51198,51366]" at="6"/>
  <insert-tree tree="function_body [51265,51366]" parent="function_definition [51198,51366]" at="7"/>
  <insert-node tree="function: function [51474,51482]" parent="function_definition [51474,51615]" at="0"/>
  <insert-node tree="identifier: setOracle [51483,51492]" parent="function_definition [51474,51615]" at="1"/>
  <insert-node tree="(: ( [51492,51493]" parent="function_definition [51474,51615]" at="2"/>
  <insert-tree tree="parameter [51493,51518]" parent="function_definition [51474,51615]" at="3"/>
  <insert-node tree="): ) [51518,51519]" parent="function_definition [51474,51615]" at="4"/>
  <insert-tree tree="visibility [51520,51526]" parent="function_definition [51474,51615]" at="5"/>
  <move-tree tree="modifier_invocation [58967,58976]" parent="function_definition [51474,51615]" at="6"/>
  <insert-tree tree="function_body [51537,51615]" parent="function_definition [51474,51615]" at="7"/>
  <insert-node tree="function: function [52947,52955]" parent="function_definition [52947,53159]" at="0"/>
  <insert-node tree="identifier: truValue [52956,52964]" parent="function_definition [52947,53159]" at="1"/>
  <insert-node tree="(: ( [52964,52965]" parent="function_definition [52947,53159]" at="2"/>
  <insert-node tree="): ) [52965,52966]" parent="function_definition [52947,53159]" at="3"/>
  <insert-tree tree="visibility [52967,52973]" parent="function_definition [52947,53159]" at="4"/>
  <insert-tree tree="state_mutability [52974,52978]" parent="function_definition [52947,53159]" at="5"/>
  <insert-tree tree="return_type_definition [52979,52996]" parent="function_definition [52947,53159]" at="6"/>
  <insert-node tree="function_body [52997,53159]" parent="function_definition [52947,53159]" at="7"/>
  <insert-node tree="function: function [53927,53935]" parent="function_definition [53927,54091]" at="0"/>
  <insert-node tree="identifier: loansValue [53936,53946]" parent="function_definition [53927,54091]" at="1"/>
  <insert-node tree="(: ( [53946,53947]" parent="function_definition [53927,54091]" at="2"/>
  <insert-node tree="): ) [53947,53948]" parent="function_definition [53927,54091]" at="3"/>
  <insert-tree tree="visibility [53949,53955]" parent="function_definition [53927,54091]" at="4"/>
  <insert-tree tree="state_mutability [53956,53960]" parent="function_definition [53927,54091]" at="5"/>
  <insert-tree tree="return_type_definition [53961,53978]" parent="function_definition [53927,54091]" at="6"/>
  <insert-node tree="function_body [53979,54091]" parent="function_definition [53927,54091]" at="7"/>
  <insert-tree tree="modifier_invocation [55431,55447]" parent="function_definition [55383,55812]" at="7"/>
  <insert-tree tree="modifier_invocation [58069,58073]" parent="function_definition [58011,59017]" at="7"/>
  <insert-tree tree="modifier_invocation [60818,60836]" parent="function_definition [60747,61445]" at="8"/>
  <insert-tree tree="modifier_invocation [61700,61718]" parent="function_definition [61633,62137]" at="8"/>
  <insert-tree tree="parameter [62332,62346]" parent="function_definition [62316,62846]" at="3"/>
  <insert-tree tree="modifier_invocation [64133,64151]" parent="function_definition [64102,64205]" at="5"/>
  <insert-node tree="function: function [65856,65864]" parent="function_definition [65856,66192]" at="0"/>
  <insert-node tree="identifier: sellStakeToken [65865,65879]" parent="function_definition [65856,66192]" at="1"/>
  <insert-node tree="(: ( [65879,65880]" parent="function_definition [65856,66192]" at="2"/>
  <insert-tree tree="parameter [65890,65906]" parent="function_definition [65856,66192]" at="3"/>
  <insert-node tree=",: , [65906,65907]" parent="function_definition [65856,66192]" at="4"/>
  <insert-tree tree="parameter [65917,65937]" parent="function_definition [65856,66192]" at="5"/>
  <insert-node tree=",: , [65937,65938]" parent="function_definition [65856,66192]" at="6"/>
  <insert-tree tree="parameter [65948,65971]" parent="function_definition [65856,66192]" at="7"/>
  <insert-node tree="): ) [65977,65978]" parent="function_definition [65856,66192]" at="8"/>
  <insert-tree tree="visibility [65979,65985]" parent="function_definition [65856,66192]" at="9"/>
  <insert-tree tree="modifier_invocation [65986,66004]" parent="function_definition [65856,66192]" at="10"/>
  <insert-node tree="function_body [66005,66192]" parent="function_definition [65856,66192]" at="11"/>
  <insert-node tree="function: function [68041,68049]" parent="function_definition [68041,68527]" at="0"/>
  <insert-node tree="identifier: mint [68050,68054]" parent="function_definition [68041,68527]" at="1"/>
  <insert-node tree="(: ( [68054,68055]" parent="function_definition [68041,68527]" at="2"/>
  <move-tree tree="parameter [56878,56900]" parent="function_definition [68041,68527]" at="3"/>
  <insert-node tree="): ) [68078,68079]" parent="function_definition [68041,68527]" at="4"/>
  <insert-tree tree="visibility [68080,68088]" parent="function_definition [68041,68527]" at="5"/>
  <insert-tree tree="return_type_definition [68089,68106]" parent="function_definition [68041,68527]" at="6"/>
  <insert-node tree="function_body [68107,68527]" parent="function_definition [68041,68527]" at="7"/>
  <insert-node tree="function: function [68606,68614]" parent="function_definition [68606,68716]" at="0"/>
  <insert-node tree="identifier: updateNameAndSymbol [68615,68634]" parent="function_definition [68606,68716]" at="1"/>
  <insert-node tree="(: ( [68634,68635]" parent="function_definition [68606,68716]" at="2"/>
  <insert-node tree="): ) [68635,68636]" parent="function_definition [68606,68716]" at="3"/>
  <insert-tree tree="visibility [68637,68643]" parent="function_definition [68606,68716]" at="4"/>
  <insert-node tree="function_body [68644,68716]" parent="function_definition [68606,68716]" at="5"/>
  <update-node tree="identifier: amountWithoutFee [38776,38792]" label="fee"/>
  <insert-tree tree="expression_statement [49234,49261]" parent="function_body [48912,49325]" at="9"/>
  <insert-tree tree="expression_statement [49271,49290]" parent="function_body [48912,49325]" at="10"/>
  <insert-tree tree="if_statement [52686,52748]" parent="function_body [52675,52845]" at="1"/>
  <insert-node tree="{: { [52997,52998]" parent="function_body [52997,53159]" at="0"/>
  <move-tree tree="variable_declaration_statement [57443,57494]" parent="function_body [52997,53159]" at="1"/>
  <insert-tree tree="if_statement [53056,53109]" parent="function_body [52997,53159]" at="2"/>
  <insert-tree tree="return_statement [53119,53152]" parent="function_body [52997,53159]" at="3"/>
  <insert-node tree="}: } [53158,53159]" parent="function_body [52997,53159]" at="4"/>
  <insert-node tree="comment: // this assumes defaulted loans are worth their full value [53651,53709]" parent="function_body [53640,53765]" at="1"/>
  <insert-node tree="{: { [53979,53980]" parent="function_body [53979,54091]" at="0"/>
  <insert-tree tree="if_statement [53990,54051]" parent="function_body [53979,54091]" at="1"/>
  <insert-node tree="return_statement [54061,54084]" parent="function_body [53979,54091]" at="2"/>
  <insert-node tree="}: } [54090,54091]" parent="function_body [53979,54091]" at="3"/>
  <move-tree tree="emit_statement [57628,57673]" parent="function_body [55448,55812]" at="11"/>
  <insert-node tree="comment: // calculate amount of stake tokens [56696,56731]" parent="function_body [56104,57728]" at="8"/>
  <insert-node tree="variable_declaration_statement [56741,56842]" parent="function_body [56104,57728]" at="9"/>
  <insert-node tree="comment: // if stake token remaining, transfer [57498,57535]" parent="function_body [56104,57728]" at="18"/>
  <insert-tree tree="if_statement [57545,57677]" parent="function_body [56104,57728]" at="19"/>
  <update-node tree="identifier: amountWithoutFee [56910,56926]" label="fee"/>
  <move-tree tree="emit_statement [50789,50835]" parent="function_body [62403,62846]" at="7"/>
  <update-node tree="identifier: onlyOwner [59812,59821]" label="onlyOwnerOrManager"/>
  <insert-node tree="{: { [66005,66006]" parent="function_body [66005,66192]" at="0"/>
  <move-tree tree="expression_statement [47305,47362]" parent="function_body [66005,66192]" at="1"/>
  <move-tree tree="expression_statement [47372,47433]" parent="function_body [66005,66192]" at="2"/>
  <insert-node tree="}: } [66191,66192]" parent="function_body [66005,66192]" at="3"/>
  <update-node tree="identifier: onlyOwner [60180,60189]" label="onlyOwnerOrManager"/>
  <update-node tree="identifier: expectedAmount [56886,56900]" label="depositedAmount"/>
  <insert-node tree="{: { [68107,68108]" parent="function_body [68107,68527]" at="0"/>
  <insert-tree tree="variable_declaration_statement [68118,68157]" parent="function_body [68107,68527]" at="1"/>
  <insert-tree tree="if_statement [68167,68236]" parent="function_body [68107,68527]" at="2"/>
  <insert-node tree="comment: // first staker mints same amount deposited [68248,68291]" parent="function_body [68107,68527]" at="3"/>
  <move-tree tree="if_statement [50405,50521]" parent="function_body [68107,68527]" at="4"/>
  <insert-node tree="comment: // mint pool tokens [68427,68446]" parent="function_body [68107,68527]" at="5"/>
  <move-tree tree="expression_statement [50560,50592]" parent="function_body [68107,68527]" at="6"/>
  <insert-tree tree="return_statement [68500,68520]" parent="function_body [68107,68527]" at="7"/>
  <insert-node tree="}: } [68526,68527]" parent="function_body [68107,68527]" at="8"/>
  <insert-node tree="{: { [68644,68645]" parent="function_body [68644,68716]" at="0"/>
  <move-tree tree="expression_statement [56981,57063]" parent="function_body [68644,68716]" at="1"/>
  <insert-node tree="}: } [68715,68716]" parent="function_body [68644,68716]" at="2"/>
  <insert-node tree="return: return [54061,54067]" parent="return_statement [54061,54084]" at="0"/>
  <move-tree tree="call_expression [48816,48831]" parent="return_statement [54061,54084]" at="1"/>
  <insert-node tree="call_expression [55540,55561]" parent="variable_declaration_statement [55517,55562]" at="2"/>
  <update-node tree="identifier: Borrow [57633,57639]" label="Joined"/>
  <insert-tree tree="call_argument [55791,55803]" parent="emit_statement [55759,55805]" at="7"/>
  <move-tree tree="variable_declaration [50301,50321]" parent="variable_declaration_statement [56741,56842]" at="0"/>
  <insert-node tree="=: = [56776,56777]" parent="variable_declaration_statement [56741,56842]" at="1"/>
  <insert-tree tree="call_expression [56778,56841]" parent="variable_declaration_statement [56741,56842]" at="2"/>
  <insert-tree tree="call_expression [62708,62717]" parent="expression_statement [62708,62718]" at="0"/>
  <update-node tree="identifier: Joined [50794,50800]" label="Borrow"/>
  <move-tree tree="call_argument [57668,57671]" parent="emit_statement [62802,62839]" at="7"/>
  <move-tree tree="call_argument [47399,47418]" parent="call_expression [66077,66184]" at="3"/>
  <update-node tree="identifier: fee [57451,57454]" label="balance"/>
  <insert-node tree="identifier: stakeTokenBalance [53026,53043]" parent="call_expression [53026,53045]" at="0"/>
  <update-node tree="identifier: amountToDeposit [50257,50272]" label="mintedAmount"/>
  <insert-node tree="identifier: mint [55540,55544]" parent="call_expression [55540,55561]" at="0"/>
  <insert-node tree="(: ( [55544,55545]" parent="call_expression [55540,55561]" at="1"/>
  <insert-node tree="call_argument [55545,55560]" parent="call_expression [55540,55561]" at="2"/>
  <insert-node tree="): ) [55560,55561]" parent="call_expression [55540,55561]" at="3"/>
  <update-node tree="identifier: expectedAmount [57652,57666]" label="amount"/>
  <update-node tree="identifier: amountToMint [50309,50321]" label="stakeTokenAmountToTransfer"/>
  <update-node tree="identifier: expectedAmount [57140,57154]" label="amount"/>
  <move-tree tree=".: . [47390,47391]" parent="member_expression [66077,66112]" at="2"/>
  <insert-tree tree="call_argument [66113,66121]" parent="call_expression [66077,66184]" at="2"/>
  <insert-tree tree="call_argument [66123,66135]" parent="call_expression [66077,66184]" at="4"/>
  <insert-node tree=",: , [66135,66136]" parent="call_expression [66077,66184]" at="5"/>
  <insert-tree tree="call_argument [66137,66141]" parent="call_expression [66077,66184]" at="6"/>
  <insert-node tree=",: , [66141,66142]" parent="call_expression [66077,66184]" at="7"/>
  <insert-node tree=",: , [66156,66157]" parent="call_expression [66077,66184]" at="9"/>
  <insert-tree tree="call_argument [66158,66183]" parent="call_expression [66077,66184]" at="10"/>
  <insert-tree tree="member_expression [68655,68680]" parent="call_expression [68655,68708]" at="0"/>
  <insert-tree tree="call_expression [53744,53756]" parent="call_argument [53744,53756]" at="0"/>
  <move-tree tree="call_expression [50275,50290]" parent="call_argument [55545,55560]" at="0"/>
  <update-node tree="identifier: _currencyToken [47305,47319]" label="_stakeToken"/>
  <insert-node tree="identifier: amountIn [66057,66065]" parent="call_argument [66057,66065]" at="0"/>
  <update-node tree="identifier: approve [47391,47398]" label="_uniRouter"/>
  <insert-node tree="identifier: swapExactTokensForTokens [66088,66112]" parent="member_expression [66077,66112]" at="2"/>
  <update-node tree="identifier: amountToMint [50578,50590]" label="mintedAmount"/>
  <insert-tree tree="string_literal [68681,68697]" parent="call_argument [68681,68697]" at="0"/>
  <update-node tree="identifier: amountToMint [50443,50455]" label="mintedAmount"/>
  <insert-tree tree="call_expression [62772,62787]" parent="call_argument [62772,62787]" at="0"/>
  <update-node tree="identifier: _curvePool [47336,47346]" label="_uniRouter"/>
  <update-node tree="identifier: _curvePool [47407,47417]" label="this"/>
  <update-node tree="identifier: expectedAmount [57277,57291]" label="amount"/>
  <update-node tree="identifier: expectedAmount [57216,57230]" label="amount"/>
  <update-node tree="identifier: amountToDeposit [50476,50491]" label="depositedAmount"/>
  <delete-tree tree="member_expression [57457,57475]"/>
  <delete-tree tree="call_argument [57476,57492]"/>
  <delete-node tree="=: = [50322,50323]"/>
  <delete-node tree="identifier: amountToDeposit [50324,50339]"/>
  <delete-node tree="variable_declaration_statement [50301,50340]"/>
  <delete-node tree="comment: // first staker mints same amount deposited [50352,50395]"/>
  <delete-node tree="comment: // mint pool tokens [50531,50550]"/>
  <delete-node tree="comment: // calculate fees and transfer remainder [57393,57433]"/>
  <delete-tree tree="assignment_expression [57504,57542]"/>
  <delete-node tree="identifier: amountWithoutFee [57597,57613]"/>
  <delete-tree tree="call_argument [50821,50833]"/>
  <delete-tree tree="type_cast_expression [47349,47360]"/>
  <delete-tree tree="call_expression [47372,47390]"/>
  <delete-tree tree="call_argument [47420,47431]"/>
  <delete-node tree="identifier: require [56981,56988]"/>
  <delete-tree tree="binary_expression [56989,57023]"/>
</actions>
