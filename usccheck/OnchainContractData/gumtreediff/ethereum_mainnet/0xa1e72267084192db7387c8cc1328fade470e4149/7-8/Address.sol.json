{
  "matches": [
    {
      "src": "type_name [738,745]",
      "dest": "type_name [738,745]"
    },
    {
      "src": "yul_path [5695,5705]",
      "dest": "yul_path [5695,5705]"
    },
    {
      "src": "yul_path [1090,1097]",
      "dest": "yul_path [1090,1097]"
    },
    {
      "src": ":=: := [5686,5688]",
      "dest": ":=: := [5686,5688]"
    },
    {
      "src": "call_argument [2341,2343]",
      "dest": "call_argument [2341,2343]"
    },
    {
      "src": "call_expression [2354,2432]",
      "dest": "call_expression [2354,2432]"
    },
    {
      "src": "identifier: size [1116,1120]",
      "dest": "identifier: size [1116,1120]"
    },
    {
      "src": "identifier: recipient [2083,2092]",
      "dest": "identifier: recipient [2083,2092]"
    },
    {
      "src": "primitive_type [4632,4639]",
      "dest": "primitive_type [4632,4639]"
    },
    {
      "src": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [148,713]",
      "dest": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [148,713]"
    },
    {
      "src": "uint256: uint256 [981,988]",
      "dest": "uint256: uint256 [981,988]"
    },
    {
      "src": "parameter [2094,2108]",
      "dest": "parameter [2094,2108]"
    },
    {
      "src": "(: ( [4767,4768]",
      "dest": "(: ( [4767,4768]"
    },
    {
      "src": "member_expression [2137,2158]",
      "dest": "member_expression [2137,2158]"
    },
    {
      "src": "primitive_type [3611,3616]",
      "dest": "primitive_type [3611,3616]"
    },
    {
      "src": "identifier: require [2354,2361]",
      "dest": "identifier: require [2354,2361]"
    },
    {
      "src": "if: if [5433,5435]",
      "dest": "if: if [5433,5435]"
    },
    {
      "src": ",: , [4646,4647]",
      "dest": ",: , [4646,4647]"
    },
    {
      "src": "visibility [4710,4718]",
      "dest": "visibility [4710,4718]"
    },
    {
      "src": "primitive_type [2067,2082]",
      "dest": "primitive_type [2067,2082]"
    },
    {
      "src": "address: address [3202,3209]",
      "dest": "address: address [3202,3209]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "dest": "comment: // SPDX-License-Identifier: MIT [0,31]"
    },
    {
      "src": "string [2371,2431]",
      "dest": "string [2371,2431]"
    },
    {
      "src": "primitive_type [4667,4674]",
      "dest": "primitive_type [4667,4674]"
    },
    {
      "src": "string [3311,3343]",
      "dest": "string [3311,3343]"
    },
    {
      "src": "type_name [4228,4233]",
      "dest": "type_name [4228,4233]"
    },
    {
      "src": ",: , [2168,2169]",
      "dest": ",: , [2168,2169]"
    },
    {
      "src": "identifier: call [5253,5257]",
      "dest": "identifier: call [5253,5257]"
    },
    {
      "src": "if_statement [5433,5862]",
      "dest": "if_statement [5433,5862]"
    },
    {
      "src": "comment: // construction, since the code is only stored at the end of the [873,937]",
      "dest": "comment: // construction, since the code is only stored at the end of the [873,937]"
    },
    {
      "src": "{: { [1068,1069]",
      "dest": "{: { [1068,1069]"
    },
    {
      "src": "function_body [2119,2439]",
      "dest": "function_body [2119,2439]"
    },
    {
      "src": "identifier: _functionCallWithValue [3707,3729]",
      "dest": "identifier: _functionCallWithValue [3707,3729]"
    },
    {
      "src": "string_literal [2170,2201]",
      "dest": "string_literal [2170,2201]"
    },
    {
      "src": "identifier: size [1070,1074]",
      "dest": "identifier: size [1070,1074]"
    },
    {
      "src": "parameter [4176,4193]",
      "dest": "parameter [4176,4193]"
    },
    {
      "src": ",: , [2092,2093]",
      "dest": ",: , [2092,2093]"
    },
    {
      "src": "parameter [4682,4708]",
      "dest": "parameter [4682,4708]"
    },
    {
      "src": "(: ( [777,778]",
      "dest": "(: ( [777,778]"
    },
    {
      "src": "\": \" [4792,4793]",
      "dest": "\": \" [4792,4793]"
    },
    {
      "src": "string [5102,5133]",
      "dest": "string [5102,5133]"
    },
    {
      "src": "\": \" [2371,2372]",
      "dest": "\": \" [2371,2372]"
    },
    {
      "src": "(: ( [4759,4760]",
      "dest": "(: ( [4759,4760]"
    },
    {
      "src": "\": \" [2170,2171]",
      "dest": "\": \" [2170,2171]"
    },
    {
      "src": "bytes: bytes [3611,3616]",
      "dest": "bytes: bytes [3611,3616]"
    },
    {
      "src": "parameter [778,782]",
      "dest": "parameter [778,782]"
    },
    {
      "src": "return: return [5319,5325]",
      "dest": "return: return [5319,5325]"
    },
    {
      "src": "return: return [4252,4258]",
      "dest": "return: return [4252,4258]"
    },
    {
      "src": ",: , [3628,3629]",
      "dest": ",: , [3628,3629]"
    },
    {
      "src": "call_argument [5093,5099]",
      "dest": "call_argument [5093,5099]"
    },
    {
      "src": "}: } [5877,5878]",
      "dest": "}: } [5877,5878]"
    },
    {
      "src": "payable: payable [2075,2082]",
      "dest": "payable: payable [2075,2082]"
    },
    {
      "src": "bytes: bytes [4176,4181]",
      "dest": "bytes: bytes [4176,4181]"
    },
    {
      "src": "primitive_type [4952,4959]",
      "dest": "primitive_type [4952,4959]"
    },
    {
      "src": "yul_identifier [1090,1097]",
      "dest": "yul_identifier [1090,1097]"
    },
    {
      "src": "memory: memory [5056,5062]",
      "dest": "memory: memory [5056,5062]"
    },
    {
      "src": "if: if [5292,5294]",
      "dest": "if: if [5292,5294]"
    },
    {
      "src": "parameter [4228,4240]",
      "dest": "parameter [4228,4240]"
    },
    {
      "src": "yul_evm_builtin [5689,5694]",
      "dest": "yul_evm_builtin [5689,5694]"
    },
    {
      "src": "call_argument [5082,5100]",
      "dest": "call_argument [5082,5100]"
    },
    {
      "src": "{: { [2323,2324]",
      "dest": "{: { [2323,2324]"
    },
    {
      "src": "string_literal [5102,5133]",
      "dest": "string_literal [5102,5133]"
    },
    {
      "src": "primitive_type [778,782]",
      "dest": "primitive_type [778,782]"
    },
    {
      "src": "yul_assignment [1070,1098]",
      "dest": "yul_assignment [1070,1098]"
    },
    {
      "src": "call_argument [3747,3759]",
      "dest": "call_argument [3747,3759]"
    },
    {
      "src": "return: return [4843,4849]",
      "dest": "return: return [4843,4849]"
    },
    {
      "src": "block_statement [5353,5872]",
      "dest": "block_statement [5353,5872]"
    },
    {
      "src": "primitive_type [5050,5055]",
      "dest": "primitive_type [5050,5055]"
    },
    {
      "src": "call_argument [3297,3303]",
      "dest": "call_argument [3297,3303]"
    },
    {
      "src": "binary_expression [2137,2168]",
      "dest": "binary_expression [2137,2168]"
    },
    {
      "src": "parameter [4728,4740]",
      "dest": "parameter [4728,4740]"
    },
    {
      "src": "yul_path [5742,5752]",
      "dest": "yul_path [5742,5752]"
    },
    {
      "src": "identifier: value [4887,4892]",
      "dest": "identifier: value [4887,4892]"
    },
    {
      "src": "struct_expression [5246,5276]",
      "dest": "struct_expression [5246,5276]"
    },
    {
      "src": "variable_declaration [5219,5242]",
      "dest": "variable_declaration [5219,5242]"
    },
    {
      "src": "internal: internal [4210,4218]",
      "dest": "internal: internal [4210,4218]"
    },
    {
      "src": "{: { [4742,4743]",
      "dest": "{: { [4742,4743]"
    },
    {
      "src": "primitive_type [5005,5011]",
      "dest": "primitive_type [5005,5011]"
    },
    {
      "src": "function_definition [3573,3767]",
      "dest": "function_definition [3573,3767]"
    },
    {
      "src": "(: ( [5276,5277]",
      "dest": "(: ( [5276,5277]"
    },
    {
      "src": "): ) [2201,2202]",
      "dest": "): ) [2201,2202]"
    },
    {
      "src": "primitive_type [4228,4233]",
      "dest": "primitive_type [4228,4233]"
    },
    {
      "src": "type_name [3595,3602]",
      "dest": "type_name [3595,3602]"
    },
    {
      "src": ":: : [2330,2331]",
      "dest": ":: : [2330,2331]"
    },
    {
      "src": "parameter [4667,4680]",
      "dest": "parameter [4667,4680]"
    },
    {
      "src": "address: address [4760,4767]",
      "dest": "address: address [4760,4767]"
    },
    {
      "src": "}: } [4913,4914]",
      "dest": "}: } [4913,4914]"
    },
    {
      "src": "(: ( [5733,5734]",
      "dest": "(: ( [5733,5734]"
    },
    {
      "src": "bytes: bytes [3676,3681]",
      "dest": "bytes: bytes [3676,3681]"
    },
    {
      "src": "memory: memory [4654,4660]",
      "dest": "memory: memory [4654,4660]"
    },
    {
      "src": "type_name [4176,4181]",
      "dest": "type_name [4176,4181]"
    },
    {
      "src": "identifier: value [4675,4680]",
      "dest": "identifier: value [4675,4680]"
    },
    {
      "src": "else: else [5804,5808]",
      "dest": "else: else [5804,5808]"
    },
    {
      "src": "function_definition [4129,4353]",
      "dest": "function_definition [4129,4353]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [4359,4596]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [4359,4596]"
    },
    {
      "src": ",: , [5753,5754]",
      "dest": ",: , [5753,5754]"
    },
    {
      "src": "return: return [3277,3283]",
      "dest": "return: return [3277,3283]"
    },
    {
      "src": "parameter [5005,5031]",
      "dest": "parameter [5005,5031]"
    },
    {
      "src": "type_name [2094,2101]",
      "dest": "type_name [2094,2101]"
    },
    {
      "src": "=: = [2307,2308]",
      "dest": "=: = [2307,2308]"
    },
    {
      "src": "type_name [4952,4959]",
      "dest": "type_name [4952,4959]"
    },
    {
      "src": "address: address [2067,2074]",
      "dest": "address: address [2067,2074]"
    },
    {
      "src": "primitive_type [2094,2101]",
      "dest": "primitive_type [2094,2101]"
    },
    {
      "src": "solidity_pragma_token [40,55]",
      "dest": "solidity_pragma_token [40,55]"
    },
    {
      "src": ",: , [3609,3610]",
      "dest": ",: , [3609,3610]"
    },
    {
      "src": "memory: memory [4182,4188]",
      "dest": "memory: memory [4182,4188]"
    },
    {
      "src": "identifier: functionCallWithValue [4610,4631]",
      "dest": "identifier: functionCallWithValue [4610,4631]"
    },
    {
      "src": "call_argument [4881,4885]",
      "dest": "call_argument [4881,4885]"
    },
    {
      "src": "}: } [5879,5880]",
      "dest": "}: } [5879,5880]"
    },
    {
      "src": "type_name [4682,4688]",
      "dest": "type_name [4682,4688]"
    },
    {
      "src": "): ) [4832,4833]",
      "dest": "): ) [4832,4833]"
    },
    {
      "src": "\": \" [5132,5133]",
      "dest": "\": \" [5132,5133]"
    },
    {
      "src": "call_argument [2145,2149]",
      "dest": "call_argument [2145,2149]"
    },
    {
      "src": "identifier: data [4981,4985]",
      "dest": "identifier: data [4981,4985]"
    },
    {
      "src": "variable_declaration_statement [2290,2345]",
      "dest": "variable_declaration_statement [2290,2345]"
    },
    {
      "src": ",: , [2369,2370]",
      "dest": ",: , [2369,2370]"
    },
    {
      "src": "): ) [3759,3760]",
      "dest": "): ) [3759,3760]"
    },
    {
      "src": "identifier: target [4281,4287]",
      "dest": "identifier: target [4281,4287]"
    },
    {
      "src": "identifier: weiValue [5266,5274]",
      "dest": "identifier: weiValue [5266,5274]"
    },
    {
      "src": "memory: memory [5012,5018]",
      "dest": "memory: memory [5012,5018]"
    },
    {
      "src": "parameter [3255,3267]",
      "dest": "parameter [3255,3267]"
    },
    {
      "src": "yul_function_call [5689,5706]",
      "dest": "yul_function_call [5689,5706]"
    },
    {
      "src": "): ) [5031,5032]",
      "dest": "): ) [5031,5032]"
    },
    {
      "src": "else: else [5348,5352]",
      "dest": "else: else [5348,5352]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [3773,4124]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [3773,4124]"
    },
    {
      "src": "call_argument [5277,5281]",
      "dest": "call_argument [5277,5281]"
    },
    {
      "src": "function: function [2048,2056]",
      "dest": "function: function [2048,2056]"
    },
    {
      "src": "return_statement [1109,1125]",
      "dest": "return_statement [1109,1125]"
    },
    {
      "src": "visibility [2110,2118]",
      "dest": "visibility [2110,2118]"
    },
    {
      "src": "yul_path [5755,5770]",
      "dest": "yul_path [5755,5770]"
    },
    {
      "src": "identifier: functionCall [3284,3296]",
      "dest": "identifier: functionCall [3284,3296]"
    },
    {
      "src": "): ) [753,754]",
      "dest": "): ) [753,754]"
    },
    {
      "src": "block_statement [5460,5803]",
      "dest": "block_statement [5460,5803]"
    },
    {
      "src": "parenthesized_expression [5833,5847]",
      "dest": "parenthesized_expression [5833,5847]"
    },
    {
      "src": "call_argument [4792,4832]",
      "dest": "call_argument [4792,4832]"
    },
    {
      "src": "bool: bool [778,782]",
      "dest": "bool: bool [778,782]"
    },
    {
      "src": "yul_path [1070,1074]",
      "dest": "yul_path [1070,1074]"
    },
    {
      "src": "primitive_type [3595,3602]",
      "dest": "primitive_type [3595,3602]"
    },
    {
      "src": "yul_identifier [5670,5685]",
      "dest": "yul_identifier [5670,5685]"
    },
    {
      "src": "return_statement [3700,3761]",
      "dest": "return_statement [3700,3761]"
    },
    {
      "src": "): ) [3267,3268]",
      "dest": "): ) [3267,3268]"
    },
    {
      "src": "yul_decimal_number: 32 [5738,5740]",
      "dest": "yul_decimal_number: 32 [5738,5740]"
    },
    {
      "src": "type_cast_expression [4760,4773]",
      "dest": "type_cast_expression [4760,4773]"
    },
    {
      "src": "function: function [4920,4928]",
      "dest": "function: function [4920,4928]"
    },
    {
      "src": "}: } [1099,1100]",
      "dest": "}: } [1099,1100]"
    },
    {
      "src": "function_body [4242,4353]",
      "dest": "function_body [4242,4353]"
    },
    {
      "src": "variable_declaration [981,993]",
      "dest": "variable_declaration [981,993]"
    },
    {
      "src": ",: , [4287,4288]",
      "dest": ",: , [4287,4288]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls [5145,5195]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls [5145,5195]"
    },
    {
      "src": ",: , [4985,4986]",
      "dest": ",: , [4985,4986]"
    },
    {
      "src": "call_argument [2371,2431]",
      "dest": "call_argument [2371,2431]"
    },
    {
      "src": "return_type_definition [5041,5063]",
      "dest": "return_type_definition [5041,5063]"
    },
    {
      "src": "return_type_definition [4719,4741]",
      "dest": "return_type_definition [4719,4741]"
    },
    {
      "src": "parameter [4195,4208]",
      "dest": "parameter [4195,4208]"
    },
    {
      "src": "call_argument [4887,4892]",
      "dest": "call_argument [4887,4892]"
    },
    {
      "src": "revert_statement [5827,5848]",
      "dest": "revert_statement [5827,5848]"
    },
    {
      "src": "{: { [5809,5810]",
      "dest": "{: { [5809,5810]"
    },
    {
      "src": "type_name [2067,2082]",
      "dest": "type_name [2067,2082]"
    },
    {
      "src": "primitive_type [3202,3209]",
      "dest": "primitive_type [3202,3209]"
    },
    {
      "src": "bytes: bytes [4728,4733]",
      "dest": "bytes: bytes [4728,4733]"
    },
    {
      "src": "return_type_definition [769,783]",
      "dest": "return_type_definition [769,783]"
    },
    {
      "src": "binary_expression [1116,1124]",
      "dest": "binary_expression [1116,1124]"
    },
    {
      "src": ",: , [4885,4886]",
      "dest": ",: , [4885,4886]"
    },
    {
      "src": "parameter [4968,4985]",
      "dest": "parameter [4968,4985]"
    },
    {
      "src": "}: } [5871,5872]",
      "dest": "}: } [5871,5872]"
    },
    {
      "src": "expression_statement [4752,4834]",
      "dest": "expression_statement [4752,4834]"
    },
    {
      "src": "identifier: data [4661,4665]",
      "dest": "identifier: data [4661,4665]"
    },
    {
      "src": "type_name [3218,3223]",
      "dest": "type_name [3218,3223]"
    },
    {
      "src": "identifier: recipient [2309,2318]",
      "dest": "identifier: recipient [2309,2318]"
    },
    {
      "src": "identifier: call [2319,2323]",
      "dest": "identifier: call [2319,2323]"
    },
    {
      "src": "struct_field_assignment [5259,5274]",
      "dest": "struct_field_assignment [5259,5274]"
    },
    {
      "src": ",: , [4892,4893]",
      "dest": ",: , [4892,4893]"
    },
    {
      "src": "identifier: Address [134,141]",
      "dest": "identifier: Address [134,141]"
    },
    {
      "src": "visibility [3658,3666]",
      "dest": "visibility [3658,3666]"
    },
    {
      "src": "library: library [126,133]",
      "dest": "library: library [126,133]"
    },
    {
      "src": "identifier: value [4203,4208]",
      "dest": "identifier: value [4203,4208]"
    },
    {
      "src": "return_statement [3277,3345]",
      "dest": "return_statement [3277,3345]"
    },
    {
      "src": "}: } [5275,5276]",
      "dest": "}: } [5275,5276]"
    },
    {
      "src": "identifier: data [3624,3628]",
      "dest": "identifier: data [3624,3628]"
    },
    {
      "src": "type_name [3676,3681]",
      "dest": "type_name [3676,3681]"
    },
    {
      "src": "primitive_type [5205,5209]",
      "dest": "primitive_type [5205,5209]"
    },
    {
      "src": "parameter [3676,3688]",
      "dest": "parameter [3676,3688]"
    },
    {
      "src": "yul_function_call [5727,5771]",
      "dest": "yul_function_call [5727,5771]"
    },
    {
      "src": "assembly_statement [5635,5789]",
      "dest": "assembly_statement [5635,5789]"
    },
    {
      "src": "(: ( [4631,4632]",
      "dest": "(: ( [4631,4632]"
    },
    {
      "src": "identifier: value [4295,4300]",
      "dest": "identifier: value [4295,4300]"
    },
    {
      "src": "primitive_type [4160,4167]",
      "dest": "primitive_type [4160,4167]"
    },
    {
      "src": "revert: revert [5827,5833]",
      "dest": "revert: revert [5827,5833]"
    },
    {
      "src": "parameter [4160,4174]",
      "dest": "parameter [4160,4174]"
    },
    {
      "src": "yul_identifier [5742,5752]",
      "dest": "yul_identifier [5742,5752]"
    },
    {
      "src": "member_expression [5437,5454]",
      "dest": "member_expression [5437,5454]"
    },
    {
      "src": "}: } [5788,5789]",
      "dest": "}: } [5788,5789]"
    },
    {
      "src": "): ) [2305,2306]",
      "dest": "): ) [2305,2306]"
    },
    {
      "src": "uint256: uint256 [4987,4994]",
      "dest": "uint256: uint256 [4987,4994]"
    },
    {
      "src": "identifier: success [5210,5217]",
      "dest": "identifier: success [5210,5217]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [1003,1050]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [1003,1050]"
    },
    {
      "src": "call_argument [2362,2369]",
      "dest": "call_argument [2362,2369]"
    },
    {
      "src": "identifier: data [4289,4293]",
      "dest": "identifier: data [4289,4293]"
    },
    {
      "src": "identifier: functionCallWithValue [4138,4159]",
      "dest": "identifier: functionCallWithValue [4138,4159]"
    },
    {
      "src": "mload: mload [5689,5694]",
      "dest": "mload: mload [5689,5694]"
    },
    {
      "src": "struct_field_assignment [2325,2338]",
      "dest": "struct_field_assignment [2325,2338]"
    },
    {
      "src": ",: , [4790,4791]",
      "dest": ",: , [4790,4791]"
    },
    {
      "src": "bytes: bytes [3218,3223]",
      "dest": "bytes: bytes [3218,3223]"
    },
    {
      "src": "identifier: length [5448,5454]",
      "dest": "identifier: length [5448,5454]"
    },
    {
      "src": "identifier: errorMessage [3747,3759]",
      "dest": "identifier: errorMessage [3747,3759]"
    },
    {
      "src": "primitive_type [4176,4181]",
      "dest": "primitive_type [4176,4181]"
    },
    {
      "src": "revert: revert [5727,5733]",
      "dest": "revert: revert [5727,5733]"
    },
    {
      "src": "identifier: _functionCallWithValue [4929,4951]",
      "dest": "identifier: _functionCallWithValue [4929,4951]"
    },
    {
      "src": "(: ( [2290,2291]",
      "dest": "(: ( [2290,2291]"
    },
    {
      "src": "identifier: target [3210,3216]",
      "dest": "identifier: target [3210,3216]"
    },
    {
      "src": "(: ( [3729,3730]",
      "dest": "(: ( [3729,3730]"
    },
    {
      "src": "memory: memory [5225,5231]",
      "dest": "memory: memory [5225,5231]"
    },
    {
      "src": "solidity_version_comparison_operator [48,50]",
      "dest": "solidity_version_comparison_operator [48,50]"
    },
    {
      "src": "function: function [718,726]",
      "dest": "function: function [718,726]"
    },
    {
      "src": "function_body [784,1131]",
      "dest": "function_body [784,1131]"
    },
    {
      "src": "function_definition [2048,2439]",
      "dest": "function_definition [2048,2439]"
    },
    {
      "src": "string [4302,4345]",
      "dest": "string [4302,4345]"
    },
    {
      "src": "): ) [4240,4241]",
      "dest": "): ) [4240,4241]"
    },
    {
      "src": "variable_declaration [2291,2303]",
      "dest": "variable_declaration [2291,2303]"
    },
    {
      "src": "identifier: target [3603,3609]",
      "dest": "identifier: target [3603,3609]"
    },
    {
      "src": "call_argument [2137,2168]",
      "dest": "call_argument [2137,2168]"
    },
    {
      "src": "call_expression [3707,3760]",
      "dest": "call_expression [3707,3760]"
    },
    {
      "src": "visibility [3237,3245]",
      "dest": "visibility [3237,3245]"
    },
    {
      "src": "identifier: data [4881,4885]",
      "dest": "identifier: data [4881,4885]"
    },
    {
      "src": ",: , [3745,3746]",
      "dest": ",: , [3745,3746]"
    },
    {
      "src": "identifier: returndata [5437,5447]",
      "dest": "identifier: returndata [5437,5447]"
    },
    {
      "src": "internal: internal [3237,3245]",
      "dest": "internal: internal [3237,3245]"
    },
    {
      "src": "): ) [5133,5134]",
      "dest": "): ) [5133,5134]"
    },
    {
      "src": "identifier: functionCall [3582,3594]",
      "dest": "identifier: functionCall [3582,3594]"
    },
    {
      "src": ",: , [3216,3217]",
      "dest": ",: , [3216,3217]"
    },
    {
      "src": "private: private [5033,5040]",
      "dest": "private: private [5033,5040]"
    },
    {
      "src": "): ) [5303,5304]",
      "dest": "): ) [5303,5304]"
    },
    {
      "src": "call_argument [4760,4790]",
      "dest": "call_argument [4760,4790]"
    },
    {
      "src": "primitive_type [4987,4994]",
      "dest": "primitive_type [4987,4994]"
    },
    {
      "src": "type_name [3255,3260]",
      "dest": "type_name [3255,3260]"
    },
    {
      "src": ".: . [5252,5253]",
      "dest": ".: . [5252,5253]"
    },
    {
      "src": "type_name [5205,5209]",
      "dest": "type_name [5205,5209]"
    },
    {
      "src": "identifier: target [4640,4646]",
      "dest": "identifier: target [4640,4646]"
    },
    {
      "src": "}: } [5802,5803]",
      "dest": "}: } [5802,5803]"
    },
    {
      "src": "call_expression [5074,5134]",
      "dest": "call_expression [5074,5134]"
    },
    {
      "src": "yul_evm_builtin [5734,5737]",
      "dest": "yul_evm_builtin [5734,5737]"
    },
    {
      "src": "if_statement [5292,5872]",
      "dest": "if_statement [5292,5872]"
    },
    {
      "src": "(: ( [4227,4228]",
      "dest": "(: ( [4227,4228]"
    },
    {
      "src": "primitive_type [3218,3223]",
      "dest": "primitive_type [3218,3223]"
    },
    {
      "src": "primitive_type [981,988]",
      "dest": "primitive_type [981,988]"
    },
    {
      "src": ">=: >= [2159,2161]",
      "dest": ">=: >= [2159,2161]"
    },
    {
      "src": "(: ( [5737,5738]",
      "dest": "(: ( [5737,5738]"
    },
    {
      "src": "parameter [738,753]",
      "dest": "parameter [738,753]"
    },
    {
      "src": "view: view [764,768]",
      "dest": "view: view [764,768]"
    },
    {
      "src": "function: function [3180,3188]",
      "dest": "function: function [3180,3188]"
    },
    {
      "src": "address: address [3595,3602]",
      "dest": "address: address [3595,3602]"
    },
    {
      "src": "returns: returns [4219,4226]",
      "dest": "returns: returns [4219,4226]"
    },
    {
      "src": "identifier: data [4189,4193]",
      "dest": "identifier: data [4189,4193]"
    },
    {
      "src": "}: } [2339,2340]",
      "dest": "}: } [2339,2340]"
    },
    {
      "src": "uint256: uint256 [4195,4202]",
      "dest": "uint256: uint256 [4195,4202]"
    },
    {
      "src": "): ) [4740,4741]",
      "dest": "): ) [4740,4741]"
    },
    {
      "src": "parameter [5050,5062]",
      "dest": "parameter [5050,5062]"
    },
    {
      "src": "assembly: assembly [1059,1067]",
      "dest": "assembly: assembly [1059,1067]"
    },
    {
      "src": "(: ( [3594,3595]",
      "dest": "(: ( [3594,3595]"
    },
    {
      "src": "): ) [5705,5706]",
      "dest": "): ) [5705,5706]"
    },
    {
      "src": "string_literal [3311,3343]",
      "dest": "string_literal [3311,3343]"
    },
    {
      "src": ",: , [4879,4880]",
      "dest": ",: , [4879,4880]"
    },
    {
      "src": "call_argument [3730,3736]",
      "dest": "call_argument [3730,3736]"
    },
    {
      "src": "call_argument [3738,3742]",
      "dest": "call_argument [3738,3742]"
    },
    {
      "src": "call_argument [4873,4879]",
      "dest": "call_argument [4873,4879]"
    },
    {
      "src": "bytes: bytes [5050,5055]",
      "dest": "bytes: bytes [5050,5055]"
    },
    {
      "src": "{: { [2119,2120]",
      "dest": "{: { [2119,2120]"
    },
    {
      "src": "assembly_statement [1059,1100]",
      "dest": "assembly_statement [1059,1100]"
    },
    {
      "src": "call_expression [3284,3344]",
      "dest": "call_expression [3284,3344]"
    },
    {
      "src": "add: add [5734,5737]",
      "dest": "add: add [5734,5737]"
    },
    {
      "src": "(: ( [2144,2145]",
      "dest": "(: ( [2144,2145]"
    },
    {
      "src": ",: , [3303,3304]",
      "dest": ",: , [3303,3304]"
    },
    {
      "src": "memory: memory [4734,4740]",
      "dest": "memory: memory [4734,4740]"
    },
    {
      "src": "address: address [4952,4959]",
      "dest": "address: address [4952,4959]"
    },
    {
      "src": "string [2341,2343]",
      "dest": "string [2341,2343]"
    },
    {
      "src": "type_name [3611,3616]",
      "dest": "type_name [3611,3616]"
    },
    {
      "src": "): ) [5458,5459]",
      "dest": "): ) [5458,5459]"
    },
    {
      "src": "): ) [5846,5847]",
      "dest": "): ) [5846,5847]"
    },
    {
      "src": "memory: memory [3261,3267]",
      "dest": "memory: memory [3261,3267]"
    },
    {
      "src": "function_definition [718,1131]",
      "dest": "function_definition [718,1131]"
    },
    {
      "src": "function: function [3573,3581]",
      "dest": "function: function [3573,3581]"
    },
    {
      "src": "{: { [5305,5306]",
      "dest": "{: { [5305,5306]"
    },
    {
      "src": "pragma: pragma [33,39]",
      "dest": "pragma: pragma [33,39]"
    },
    {
      "src": "function_body [3690,3767]",
      "dest": "function_body [3690,3767]"
    },
    {
      "src": "identifier: errorMessage [4894,4906]",
      "dest": "identifier: errorMessage [4894,4906]"
    },
    {
      "src": "parameter [4952,4966]",
      "dest": "parameter [4952,4966]"
    },
    {
      "src": "{: { [5064,5065]",
      "dest": "{: { [5064,5065]"
    },
    {
      "src": "solidity_version: 0.6.2 [50,55]",
      "dest": "solidity_version: 0.6.2 [50,55]"
    },
    {
      "src": "\": \" [3342,3343]",
      "dest": "\": \" [3342,3343]"
    },
    {
      "src": "}: } [3766,3767]",
      "dest": "}: } [3766,3767]"
    },
    {
      "src": ",: , [4293,4294]",
      "dest": ",: , [4293,4294]"
    },
    {
      "src": "identifier: value [2325,2330]",
      "dest": "identifier: value [2325,2330]"
    },
    {
      "src": "returns: returns [3667,3674]",
      "dest": "returns: returns [3667,3674]"
    },
    {
      "src": "uint256: uint256 [4667,4674]",
      "dest": "uint256: uint256 [4667,4674]"
    },
    {
      "src": ".: . [5447,5448]",
      "dest": ".: . [5447,5448]"
    },
    {
      "src": "returns: returns [3246,3253]",
      "dest": "returns: returns [3246,3253]"
    },
    {
      "src": "address: address [2137,2144]",
      "dest": "address: address [2137,2144]"
    },
    {
      "src": "internal: internal [2110,2118]",
      "dest": "internal: internal [2110,2118]"
    },
    {
      "src": "): ) [5770,5771]",
      "dest": "): ) [5770,5771]"
    },
    {
      "src": "identifier: require [2129,2136]",
      "dest": "identifier: require [2129,2136]"
    },
    {
      "src": "type_name [3202,3209]",
      "dest": "type_name [3202,3209]"
    },
    {
      "src": "}: } [4352,4353]",
      "dest": "}: } [4352,4353]"
    },
    {
      "src": "identifier: require [4752,4759]",
      "dest": "identifier: require [4752,4759]"
    },
    {
      "src": "variable_declaration_tuple [5204,5243]",
      "dest": "variable_declaration_tuple [5204,5243]"
    },
    {
      "src": "\": \" [2342,2343]",
      "dest": "\": \" [2342,2343]"
    },
    {
      "src": "memory: memory [3224,3230]",
      "dest": "memory: memory [3224,3230]"
    },
    {
      "src": "return_statement [5319,5337]",
      "dest": "return_statement [5319,5337]"
    },
    {
      "src": ",: , [5100,5101]",
      "dest": ",: , [5100,5101]"
    },
    {
      "src": ".: . [2318,2319]",
      "dest": ".: . [2318,2319]"
    },
    {
      "src": "identifier: balance [4774,4781]",
      "dest": "identifier: balance [4774,4781]"
    },
    {
      "src": ",: , [5740,5741]",
      "dest": ",: , [5740,5741]"
    },
    {
      "src": "{: { [5353,5354]",
      "dest": "{: { [5353,5354]"
    },
    {
      "src": "function: function [4129,4137]",
      "dest": "function: function [4129,4137]"
    },
    {
      "src": "identifier: returndata [5326,5336]",
      "dest": "identifier: returndata [5326,5336]"
    },
    {
      "src": "): ) [4345,4346]",
      "dest": "): ) [4345,4346]"
    },
    {
      "src": "bytes: bytes [4968,4973]",
      "dest": "bytes: bytes [4968,4973]"
    },
    {
      "src": "number_literal: 0 [5457,5458]",
      "dest": "number_literal: 0 [5457,5458]"
    },
    {
      "src": "call_expression [4752,4833]",
      "dest": "call_expression [4752,4833]"
    },
    {
      "src": "identifier: errorMessage [3644,3656]",
      "dest": "identifier: errorMessage [3644,3656]"
    },
    {
      "src": "): ) [5752,5753]",
      "dest": "): ) [5752,5753]"
    },
    {
      "src": "internal: internal [755,763]",
      "dest": "internal: internal [755,763]"
    },
    {
      "src": "parameter [4632,4646]",
      "dest": "parameter [4632,4646]"
    },
    {
      "src": "expression_statement [5074,5135]",
      "dest": "expression_statement [5074,5135]"
    },
    {
      "src": ",: , [3742,3743]",
      "dest": ",: , [3742,3743]"
    },
    {
      "src": "): ) [3343,3344]",
      "dest": "): ) [3343,3344]"
    },
    {
      "src": "type_name [2291,2295]",
      "dest": "type_name [2291,2295]"
    },
    {
      "src": "identifier: errorMessage [4696,4708]",
      "dest": "identifier: errorMessage [4696,4708]"
    },
    {
      "src": "(: ( [3201,3202]",
      "dest": "(: ( [3201,3202]"
    },
    {
      "src": "type_name [4728,4733]",
      "dest": "type_name [4728,4733]"
    },
    {
      "src": ",: , [4966,4967]",
      "dest": ",: , [4966,4967]"
    },
    {
      "src": "type_name [4987,4994]",
      "dest": "type_name [4987,4994]"
    },
    {
      "src": "parameter [4648,4665]",
      "dest": "parameter [4648,4665]"
    },
    {
      "src": "identifier: returndata_size [5755,5770]",
      "dest": "identifier: returndata_size [5755,5770]"
    },
    {
      "src": "): ) [4208,4209]",
      "dest": "): ) [4208,4209]"
    },
    {
      "src": "=: = [5244,5245]",
      "dest": "=: = [5244,5245]"
    },
    {
      "src": "return: return [1109,1115]",
      "dest": "return: return [1109,1115]"
    },
    {
      "src": "identifier: sendValue [2057,2066]",
      "dest": "identifier: sendValue [2057,2066]"
    },
    {
      "src": "string_literal [4302,4345]",
      "dest": "string_literal [4302,4345]"
    },
    {
      "src": "identifier: target [4960,4966]",
      "dest": "identifier: target [4960,4966]"
    },
    {
      "src": "function_body [5064,5878]",
      "dest": "function_body [5064,5878]"
    },
    {
      "src": "): ) [5242,5243]",
      "dest": "): ) [5242,5243]"
    },
    {
      "src": "identifier: data [3305,3309]",
      "dest": "identifier: data [3305,3309]"
    },
    {
      "src": ":: : [5264,5265]",
      "dest": ":: : [5264,5265]"
    },
    {
      "src": "(: ( [5049,5050]",
      "dest": "(: ( [5049,5050]"
    },
    {
      "src": "return_statement [4843,4908]",
      "dest": "return_statement [4843,4908]"
    },
    {
      "src": "(: ( [2361,2362]",
      "dest": "(: ( [2361,2362]"
    },
    {
      "src": "\": \" [4344,4345]",
      "dest": "\": \" [4344,4345]"
    },
    {
      "src": "identifier: returndata [5695,5705]",
      "dest": "identifier: returndata [5695,5705]"
    },
    {
      "src": "identifier: value [5259,5264]",
      "dest": "identifier: value [5259,5264]"
    },
    {
      "src": "block_statement [5809,5862]",
      "dest": "block_statement [5809,5862]"
    },
    {
      "src": "(: ( [2340,2341]",
      "dest": "(: ( [2340,2341]"
    },
    {
      "src": ",: , [4193,4194]",
      "dest": ",: , [4193,4194]"
    },
    {
      "src": ":=: := [1075,1077]",
      "dest": ":=: := [1075,1077]"
    },
    {
      "src": "primitive_type [3676,3681]",
      "dest": "primitive_type [3676,3681]"
    },
    {
      "src": "identifier: functionCall [3189,3201]",
      "dest": "identifier: functionCall [3189,3201]"
    },
    {
      "src": "call_expression [4259,4346]",
      "dest": "call_expression [4259,4346]"
    },
    {
      "src": "identifier: data [5277,5281]",
      "dest": "identifier: data [5277,5281]"
    },
    {
      "src": "}: } [5861,5862]",
      "dest": "}: } [5861,5862]"
    },
    {
      "src": "\": \" [2200,2201]",
      "dest": "\": \" [2200,2201]"
    },
    {
      "src": "type_name [3630,3636]",
      "dest": "type_name [3630,3636]"
    },
    {
      "src": "function_definition [4920,5878]",
      "dest": "function_definition [4920,5878]"
    },
    {
      "src": "yul_identifier [5695,5705]",
      "dest": "yul_identifier [5695,5705]"
    },
    {
      "src": "): ) [2431,2432]",
      "dest": "): ) [2431,2432]"
    },
    {
      "src": ",: , [4680,4681]",
      "dest": ",: , [4680,4681]"
    },
    {
      "src": "identifier: success [5296,5303]",
      "dest": "identifier: success [5296,5303]"
    },
    {
      "src": "call_argument [4768,4772]",
      "dest": "call_argument [4768,4772]"
    },
    {
      "src": "type_name [4968,4973]",
      "dest": "type_name [4968,4973]"
    },
    {
      "src": "bytes: bytes [3255,3260]",
      "dest": "bytes: bytes [3255,3260]"
    },
    {
      "src": "identifier: errorMessage [5834,5846]",
      "dest": "identifier: errorMessage [5834,5846]"
    },
    {
      "src": "(: ( [5694,5695]",
      "dest": "(: ( [5694,5695]"
    },
    {
      "src": "identifier: isContract [727,737]",
      "dest": "identifier: isContract [727,737]"
    },
    {
      "src": "identifier: returndata [5232,5242]",
      "dest": "identifier: returndata [5232,5242]"
    },
    {
      "src": "internal: internal [3658,3666]",
      "dest": "internal: internal [3658,3666]"
    },
    {
      "src": "function_definition [3180,3351]",
      "dest": "function_definition [3180,3351]"
    },
    {
      "src": "}: } [1130,1131]",
      "dest": "}: } [1130,1131]"
    },
    {
      "src": "parameter [3218,3235]",
      "dest": "parameter [3218,3235]"
    },
    {
      "src": ",: , [5003,5004]",
      "dest": ",: , [5003,5004]"
    },
    {
      "src": "identifier: value [4785,4790]",
      "dest": "identifier: value [4785,4790]"
    },
    {
      "src": "identifier: functionCallWithValue [4259,4280]",
      "dest": "identifier: functionCallWithValue [4259,4280]"
    },
    {
      "src": "identifier: this [4768,4772]",
      "dest": "identifier: this [4768,4772]"
    },
    {
      "src": "let: let [5666,5669]",
      "dest": "let: let [5666,5669]"
    },
    {
      "src": "parameter [3630,3656]",
      "dest": "parameter [3630,3656]"
    },
    {
      "src": "member_expression [5246,5257]",
      "dest": "member_expression [5246,5257]"
    },
    {
      "src": "primitive_type [2291,2295]",
      "dest": "primitive_type [2291,2295]"
    },
    {
      "src": "return_type_definition [3246,3268]",
      "dest": "return_type_definition [3246,3268]"
    },
    {
      "src": "function_definition [4601,4914]",
      "dest": "function_definition [4601,4914]"
    },
    {
      "src": "(: ( [4951,4952]",
      "dest": "(: ( [4951,4952]"
    },
    {
      "src": "identifier: target [3730,3736]",
      "dest": "identifier: target [3730,3736]"
    },
    {
      "src": "(: ( [4159,4160]",
      "dest": "(: ( [4159,4160]"
    },
    {
      "src": "bytes: bytes [4228,4233]",
      "dest": "bytes: bytes [4228,4233]"
    },
    {
      "src": "primitive_type [4728,4733]",
      "dest": "primitive_type [4728,4733]"
    },
    {
      "src": "solidity: solidity [40,48]",
      "dest": "solidity: solidity [40,48]"
    },
    {
      "src": "string: string [3630,3636]",
      "dest": "string: string [3630,3636]"
    },
    {
      "src": "type_name [5219,5224]",
      "dest": "type_name [5219,5224]"
    },
    {
      "src": "yul_function_call [1078,1098]",
      "dest": "yul_function_call [1078,1098]"
    },
    {
      "src": "member_expression [2309,2323]",
      "dest": "member_expression [2309,2323]"
    },
    {
      "src": "return_type_definition [3667,3689]",
      "dest": "return_type_definition [3667,3689]"
    },
    {
      "src": "memory: memory [4974,4980]",
      "dest": "memory: memory [4974,4980]"
    },
    {
      "src": "type_name [4667,4674]",
      "dest": "type_name [4667,4674]"
    },
    {
      "src": "yul_identifier [5755,5770]",
      "dest": "yul_identifier [5755,5770]"
    },
    {
      "src": "(: ( [5092,5093]",
      "dest": "(: ( [5092,5093]"
    },
    {
      "src": "): ) [4772,4773]",
      "dest": "): ) [4772,4773]"
    },
    {
      "src": "): ) [4906,4907]",
      "dest": "): ) [4906,4907]"
    },
    {
      "src": "): ) [782,783]",
      "dest": "): ) [782,783]"
    },
    {
      "src": "(: ( [3296,3297]",
      "dest": "(: ( [3296,3297]"
    },
    {
      "src": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [2445,3175]",
      "dest": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [2445,3175]"
    },
    {
      "src": ",: , [2303,2304]",
      "dest": ",: , [2303,2304]"
    },
    {
      "src": "identifier: this [2145,2149]",
      "dest": "identifier: this [2145,2149]"
    },
    {
      "src": "}: } [3350,3351]",
      "dest": "}: } [3350,3351]"
    },
    {
      "src": "visibility [755,763]",
      "dest": "visibility [755,763]"
    },
    {
      "src": "identifier: amount [2162,2168]",
      "dest": "identifier: amount [2162,2168]"
    },
    {
      "src": "address: address [738,745]",
      "dest": "address: address [738,745]"
    },
    {
      "src": "identifier: errorMessage [5019,5031]",
      "dest": "identifier: errorMessage [5019,5031]"
    },
    {
      "src": "expression_statement [2129,2203]",
      "dest": "expression_statement [2129,2203]"
    },
    {
      "src": ",: , [4665,4666]",
      "dest": ",: , [4665,4666]"
    },
    {
      "src": "{: { [784,785]",
      "dest": "{: { [784,785]"
    },
    {
      "src": "identifier: account [746,753]",
      "dest": "identifier: account [746,753]"
    },
    {
      "src": "identifier: amount [2102,2108]",
      "dest": "identifier: amount [2102,2108]"
    },
    {
      "src": "identifier: account [1090,1097]",
      "dest": "identifier: account [1090,1097]"
    },
    {
      "src": "primitive_type [3630,3636]",
      "dest": "primitive_type [3630,3636]"
    },
    {
      "src": "identifier: isContract [5082,5092]",
      "dest": "identifier: isContract [5082,5092]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [3357,3568]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [3357,3568]"
    },
    {
      "src": "member_expression [4760,4781]",
      "dest": "member_expression [4760,4781]"
    },
    {
      "src": "memory: memory [4689,4695]",
      "dest": "memory: memory [4689,4695]"
    },
    {
      "src": "call_expression [2129,2202]",
      "dest": "call_expression [2129,2202]"
    },
    {
      "src": "call_expression [4850,4907]",
      "dest": "call_expression [4850,4907]"
    },
    {
      "src": "type_name [4648,4653]",
      "dest": "type_name [4648,4653]"
    },
    {
      "src": "(: ( [5295,5296]",
      "dest": "(: ( [5295,5296]"
    },
    {
      "src": "yul_identifier [1070,1074]",
      "dest": "yul_identifier [1070,1074]"
    },
    {
      "src": "type_cast_expression [2137,2150]",
      "dest": "type_cast_expression [2137,2150]"
    },
    {
      "src": "{: { [3690,3691]",
      "dest": "{: { [3690,3691]"
    },
    {
      "src": "call_argument [5102,5133]",
      "dest": "call_argument [5102,5133]"
    },
    {
      "src": "number_literal: 0 [1123,1124]",
      "dest": "number_literal: 0 [1123,1124]"
    },
    {
      "src": "identifier: _functionCallWithValue [4850,4872]",
      "dest": "identifier: _functionCallWithValue [4850,4872]"
    },
    {
      "src": "primitive_type [4968,4973]",
      "dest": "primitive_type [4968,4973]"
    },
    {
      "src": "{: { [3269,3270]",
      "dest": "{: { [3269,3270]"
    },
    {
      "src": "assembly: assembly [5635,5643]",
      "dest": "assembly: assembly [5635,5643]"
    },
    {
      "src": "(: ( [2066,2067]",
      "dest": "(: ( [2066,2067]"
    },
    {
      "src": "bytes: bytes [4648,4653]",
      "dest": "bytes: bytes [4648,4653]"
    },
    {
      "src": "primitive_type [5219,5224]",
      "dest": "primitive_type [5219,5224]"
    },
    {
      "src": ">: > [1121,1122]",
      "dest": ">: > [1121,1122]"
    },
    {
      "src": "expression_statement [2354,2433]",
      "dest": "expression_statement [2354,2433]"
    },
    {
      "src": "call_argument [3311,3343]",
      "dest": "call_argument [3311,3343]"
    },
    {
      "src": "call_argument [2170,2201]",
      "dest": "call_argument [2170,2201]"
    },
    {
      "src": "pragma_directive [33,56]",
      "dest": "pragma_directive [33,56]"
    },
    {
      "src": ",: , [4300,4301]",
      "dest": ",: , [4300,4301]"
    },
    {
      "src": "{: { [5257,5258]",
      "dest": "{: { [5257,5258]"
    },
    {
      "src": "string: string [5005,5011]",
      "dest": "string: string [5005,5011]"
    },
    {
      "src": "primitive_type [3255,3260]",
      "dest": "primitive_type [3255,3260]"
    },
    {
      "src": "identifier: weiValue [4995,5003]",
      "dest": "identifier: weiValue [4995,5003]"
    },
    {
      "src": "(: ( [5436,5437]",
      "dest": "(: ( [5436,5437]"
    },
    {
      "src": "bool: bool [5205,5209]",
      "dest": "bool: bool [5205,5209]"
    },
    {
      "src": "identifier: target [5093,5099]",
      "dest": "identifier: target [5093,5099]"
    },
    {
      "src": "primitive_type [2137,2144]",
      "dest": "primitive_type [2137,2144]"
    },
    {
      "src": "function: function [4601,4609]",
      "dest": "function: function [4601,4609]"
    },
    {
      "src": "yul_function_call [5734,5753]",
      "dest": "yul_function_call [5734,5753]"
    },
    {
      "src": "\": \" [5102,5103]",
      "dest": "\": \" [5102,5103]"
    },
    {
      "src": "type_name [4632,4639]",
      "dest": "type_name [4632,4639]"
    },
    {
      "src": "): ) [5062,5063]",
      "dest": "): ) [5062,5063]"
    },
    {
      "src": "returns: returns [769,776]",
      "dest": "returns: returns [769,776]"
    },
    {
      "src": "primitive_type [4682,4688]",
      "dest": "primitive_type [4682,4688]"
    },
    {
      "src": "call_expression [5246,5282]",
      "dest": "call_expression [5246,5282]"
    },
    {
      "src": ",: , [3736,3737]",
      "dest": ",: , [3736,3737]"
    },
    {
      "src": "call_expression [5082,5100]",
      "dest": "call_expression [5082,5100]"
    },
    {
      "src": ",: , [4174,4175]",
      "dest": ",: , [4174,4175]"
    },
    {
      "src": "state_mutability [764,768]",
      "dest": "state_mutability [764,768]"
    },
    {
      "src": "): ) [3235,3236]",
      "dest": "): ) [3235,3236]"
    },
    {
      "src": "memory: memory [4234,4240]",
      "dest": "memory: memory [4234,4240]"
    },
    {
      "src": "(: ( [1089,1090]",
      "dest": "(: ( [1089,1090]"
    },
    {
      "src": "{: { [142,143]",
      "dest": "{: { [142,143]"
    },
    {
      "src": "string_literal [2371,2431]",
      "dest": "string_literal [2371,2431]"
    },
    {
      "src": "bool: bool [2291,2295]",
      "dest": "bool: bool [2291,2295]"
    },
    {
      "src": "identifier: returndata_size [5670,5685]",
      "dest": "identifier: returndata_size [5670,5685]"
    },
    {
      "src": "type_name [981,988]",
      "dest": "type_name [981,988]"
    },
    {
      "src": "contract_body [142,5880]",
      "dest": "contract_body [142,5880]"
    },
    {
      "src": "uint256: uint256 [2094,2101]",
      "dest": "uint256: uint256 [2094,2101]"
    },
    {
      "src": "yul_evm_builtin [1078,1089]",
      "dest": "yul_evm_builtin [1078,1089]"
    },
    {
      "src": "identifier: data [3231,3235]",
      "dest": "identifier: data [3231,3235]"
    },
    {
      "src": "}: } [5346,5347]",
      "dest": "}: } [5346,5347]"
    },
    {
      "src": "call_argument [4281,4287]",
      "dest": "call_argument [4281,4287]"
    },
    {
      "src": "): ) [5099,5100]",
      "dest": "): ) [5099,5100]"
    },
    {
      "src": ".: . [4773,4774]",
      "dest": ".: . [4773,4774]"
    },
    {
      "src": "(: ( [737,738]",
      "dest": "(: ( [737,738]"
    },
    {
      "src": "comment: /**  * @dev Collection of functions related to the address type  */ [58,125]",
      "dest": "comment: /**  * @dev Collection of functions related to the address type  */ [58,125]"
    },
    {
      "src": "number_literal: 0 [3744,3745]",
      "dest": "number_literal: 0 [3744,3745]"
    },
    {
      "src": "identifier: target [5246,5252]",
      "dest": "identifier: target [5246,5252]"
    },
    {
      "src": "comment: // Look for revert reason and bubble it up if present [5367,5420]",
      "dest": "comment: // Look for revert reason and bubble it up if present [5367,5420]"
    },
    {
      "src": "address: address [4160,4167]",
      "dest": "address: address [4160,4167]"
    },
    {
      "src": "(: ( [5833,5834]",
      "dest": "(: ( [5833,5834]"
    },
    {
      "src": "string [2170,2201]",
      "dest": "string [2170,2201]"
    },
    {
      "src": "): ) [1097,1098]",
      "dest": "): ) [1097,1098]"
    },
    {
      "src": "): ) [3656,3657]",
      "dest": "): ) [3656,3657]"
    },
    {
      "src": "call_argument [4289,4293]",
      "dest": "call_argument [4289,4293]"
    },
    {
      "src": "identifier: data [3738,3742]",
      "dest": "identifier: data [3738,3742]"
    },
    {
      "src": "\": \" [3311,3312]",
      "dest": "\": \" [3311,3312]"
    },
    {
      "src": "internal: internal [4710,4718]",
      "dest": "internal: internal [4710,4718]"
    },
    {
      "src": "identifier: balance [2151,2158]",
      "dest": "identifier: balance [2151,2158]"
    },
    {
      "src": "primitive_type [4648,4653]",
      "dest": "primitive_type [4648,4653]"
    },
    {
      "src": "identifier: target [4873,4879]",
      "dest": "identifier: target [4873,4879]"
    },
    {
      "src": "): ) [2149,2150]",
      "dest": "): ) [2149,2150]"
    },
    {
      "src": "identifier: target [4168,4174]",
      "dest": "identifier: target [4168,4174]"
    },
    {
      "src": "\": \" [4302,4303]",
      "dest": "\": \" [4302,4303]"
    },
    {
      "src": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [1137,2043]",
      "dest": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [1137,2043]"
    },
    {
      "src": "binary_expression [5437,5458]",
      "dest": "binary_expression [5437,5458]"
    },
    {
      "src": "(: ( [4280,4281]",
      "dest": "(: ( [4280,4281]"
    },
    {
      "src": "parameter [3202,3216]",
      "dest": "parameter [3202,3216]"
    },
    {
      "src": "comment: // The easiest way to bubble the revert reason is using memory via assembly [5478,5553]",
      "dest": "comment: // The easiest way to bubble the revert reason is using memory via assembly [5478,5553]"
    },
    {
      "src": "identifier: success [2296,2303]",
      "dest": "identifier: success [2296,2303]"
    },
    {
      "src": "(: ( [5081,5082]",
      "dest": "(: ( [5081,5082]"
    },
    {
      "src": "comment: // This method relies in extcodesize, which returns 0 for contracts in [794,864]",
      "dest": "comment: // This method relies in extcodesize, which returns 0 for contracts in [794,864]"
    },
    {
      "src": "function_body [3269,3351]",
      "dest": "function_body [3269,3351]"
    },
    {
      "src": "(: ( [5204,5205]",
      "dest": "(: ( [5204,5205]"
    },
    {
      "src": "string: string [4682,4688]",
      "dest": "string: string [4682,4688]"
    },
    {
      "src": "yul_evm_builtin [5727,5733]",
      "dest": "yul_evm_builtin [5727,5733]"
    },
    {
      "src": "call_argument [4302,4345]",
      "dest": "call_argument [4302,4345]"
    },
    {
      "src": "function_body [4742,4914]",
      "dest": "function_body [4742,4914]"
    },
    {
      "src": "address: address [4632,4639]",
      "dest": "address: address [4632,4639]"
    },
    {
      "src": "): ) [5281,5282]",
      "dest": "): ) [5281,5282]"
    },
    {
      "src": ">: > [5455,5456]",
      "dest": ">: > [5455,5456]"
    },
    {
      "src": ".: . [2150,2151]",
      "dest": ".: . [2150,2151]"
    },
    {
      "src": "(: ( [4872,4873]",
      "dest": "(: ( [4872,4873]"
    },
    {
      "src": "type_name [4195,4202]",
      "dest": "type_name [4195,4202]"
    },
    {
      "src": "visibility [4210,4218]",
      "dest": "visibility [4210,4218]"
    },
    {
      "src": "memory: memory [3637,3643]",
      "dest": "memory: memory [3637,3643]"
    },
    {
      "src": "primitive_type [4760,4767]",
      "dest": "primitive_type [4760,4767]"
    },
    {
      "src": "parameter [4987,5003]",
      "dest": "parameter [4987,5003]"
    },
    {
      "src": "library_declaration [126,5880]",
      "dest": "library_declaration [126,5880]"
    },
    {
      "src": "identifier: amount [2332,2338]",
      "dest": "identifier: amount [2332,2338]"
    },
    {
      "src": "): ) [4708,4709]",
      "dest": "): ) [4708,4709]"
    },
    {
      "src": "string_literal [4792,4832]",
      "dest": "string_literal [4792,4832]"
    },
    {
      "src": "\": \" [2430,2431]",
      "dest": "\": \" [2430,2431]"
    },
    {
      "src": "parameter [3611,3628]",
      "dest": "parameter [3611,3628]"
    },
    {
      "src": "{: { [4242,4243]",
      "dest": "{: { [4242,4243]"
    },
    {
      "src": "identifier: success [2362,2369]",
      "dest": "identifier: success [2362,2369]"
    },
    {
      "src": "memory: memory [3682,3688]",
      "dest": "memory: memory [3682,3688]"
    },
    {
      "src": ">=: >= [4782,4784]",
      "dest": ">=: >= [4782,4784]"
    },
    {
      "src": ",: , [3309,3310]",
      "dest": ",: , [3309,3310]"
    },
    {
      "src": "(: ( [3254,3255]",
      "dest": "(: ( [3254,3255]"
    },
    {
      "src": "struct_expression [2309,2340]",
      "dest": "struct_expression [2309,2340]"
    },
    {
      "src": "type_name [778,782]",
      "dest": "type_name [778,782]"
    },
    {
      "src": "extcodesize: extcodesize [1078,1089]",
      "dest": "extcodesize: extcodesize [1078,1089]"
    },
    {
      "src": "return_statement [4252,4347]",
      "dest": "return_statement [4252,4347]"
    },
    {
      "src": "returns: returns [4719,4726]",
      "dest": "returns: returns [4719,4726]"
    },
    {
      "src": "parameter [2067,2092]",
      "dest": "parameter [2067,2092]"
    },
    {
      "src": "call_argument [4295,4300]",
      "dest": "call_argument [4295,4300]"
    },
    {
      "src": "comment: // constructor execution. [946,971]",
      "dest": "comment: // constructor execution. [946,971]"
    },
    {
      "src": "binary_expression [4760,4790]",
      "dest": "binary_expression [4760,4790]"
    },
    {
      "src": "{: { [5460,5461]",
      "dest": "{: { [5460,5461]"
    },
    {
      "src": "identifier: target [3297,3303]",
      "dest": "identifier: target [3297,3303]"
    },
    {
      "src": "identifier: size [989,993]",
      "dest": "identifier: size [989,993]"
    },
    {
      "src": "type_name [5005,5011]",
      "dest": "type_name [5005,5011]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [2213,2281]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [2213,2281]"
    },
    {
      "src": "source_file [0,5881]",
      "dest": "source_file [0,5881]"
    },
    {
      "src": "visibility [5033,5040]",
      "dest": "visibility [5033,5040]"
    },
    {
      "src": "return_type_definition [4219,4241]",
      "dest": "return_type_definition [4219,4241]"
    },
    {
      "src": "call_expression [2309,2344]",
      "dest": "call_expression [2309,2344]"
    },
    {
      "src": "call_argument [4894,4906]",
      "dest": "call_argument [4894,4906]"
    },
    {
      "src": "type_name [4160,4167]",
      "dest": "type_name [4160,4167]"
    },
    {
      "src": "call_argument [3744,3745]",
      "dest": "call_argument [3744,3745]"
    },
    {
      "src": "yul_variable_declaration [5666,5706]",
      "dest": "yul_variable_declaration [5666,5706]"
    },
    {
      "src": "returns: returns [5041,5048]",
      "dest": "returns: returns [5041,5048]"
    },
    {
      "src": "string [4792,4832]",
      "dest": "string [4792,4832]"
    },
    {
      "src": "): ) [2108,2109]",
      "dest": "): ) [2108,2109]"
    },
    {
      "src": "block_statement [5305,5347]",
      "dest": "block_statement [5305,5347]"
    },
    {
      "src": "variable_declaration [5205,5217]",
      "dest": "variable_declaration [5205,5217]"
    },
    {
      "src": "type_name [5050,5055]",
      "dest": "type_name [5050,5055]"
    },
    {
      "src": "(: ( [2136,2137]",
      "dest": "(: ( [2136,2137]"
    },
    {
      "src": "): ) [2343,2344]",
      "dest": "): ) [2343,2344]"
    },
    {
      "src": "(: ( [3675,3676]",
      "dest": "(: ( [3675,3676]"
    },
    {
      "src": "variable_declaration_statement [981,994]",
      "dest": "variable_declaration_statement [981,994]"
    },
    {
      "src": "variable_declaration_tuple [2290,2306]",
      "dest": "variable_declaration_tuple [2290,2306]"
    },
    {
      "src": "primitive_type [738,745]",
      "dest": "primitive_type [738,745]"
    },
    {
      "src": "identifier: require [5074,5081]",
      "dest": "identifier: require [5074,5081]"
    },
    {
      "src": "^:  ^ [48,50]",
      "dest": "^:  ^ [48,50]"
    },
    {
      "src": "identifier: returndata [5742,5752]",
      "dest": "identifier: returndata [5742,5752]"
    },
    {
      "src": "}: } [2438,2439]",
      "dest": "}: } [2438,2439]"
    },
    {
      "src": "primitive_type [4195,4202]",
      "dest": "primitive_type [4195,4202]"
    },
    {
      "src": "string_literal [2341,2343]",
      "dest": "string_literal [2341,2343]"
    },
    {
      "src": "return: return [3700,3706]",
      "dest": "return: return [3700,3706]"
    },
    {
      "src": ",: , [5217,5218]",
      "dest": ",: , [5217,5218]"
    },
    {
      "src": "(: ( [4727,4728]",
      "dest": "(: ( [4727,4728]"
    },
    {
      "src": "\": \" [4831,4832]",
      "dest": "\": \" [4831,4832]"
    },
    {
      "src": "\": \" [2341,2342]",
      "dest": "\": \" [2341,2342]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [5571,5618]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [5571,5618]"
    },
    {
      "src": "memory: memory [3617,3623]",
      "dest": "memory: memory [3617,3623]"
    },
    {
      "src": "call_argument [3305,3309]",
      "dest": "call_argument [3305,3309]"
    },
    {
      "src": "): ) [3688,3689]",
      "dest": "): ) [3688,3689]"
    },
    {
      "src": "parameter [3595,3609]",
      "dest": "parameter [3595,3609]"
    },
    {
      "src": "variable_declaration_statement [5204,5283]",
      "dest": "variable_declaration_statement [5204,5283]"
    },
    {
      "src": "bytes: bytes [5219,5224]",
      "dest": "bytes: bytes [5219,5224]"
    },
    {
      "src": "{: { [5644,5645]",
      "dest": "{: { [5644,5645]"
    }
  ],
  "actions": []
}