{
  "matches": [
    {
      "src": "comment: /**      * @dev Emitted when funds are pulled from curve.fi      * @param yAmount Amount of pool tokens      */ [41392,41506]",
      "dest": "comment: /**      * @dev Emitted when funds are pulled from curve.fi      * @param yAmount Amount of pool tokens      */ [45564,45678]"
    },
    {
      "src": "): ) [26055,26056]",
      "dest": "): ) [26054,26055]"
    },
    {
      "src": "identifier: newOwner [34182,34190]",
      "dest": "identifier: newOwner [34349,34357]"
    },
    {
      "src": "primitive_type [34353,34360]",
      "dest": "primitive_type [34520,34527]"
    },
    {
      "src": "type_name [4732,4739]",
      "dest": "type_name [4239,4246]"
    },
    {
      "src": "identifier: _owner [34396,34402]",
      "dest": "identifier: _owner [34563,34569]"
    },
    {
      "src": "state_mutability [3074,3078]",
      "dest": "state_mutability [2578,2582]"
    },
    {
      "src": "}: } [27537,27538]",
      "dest": "}: } [27536,27537]"
    },
    {
      "src": "identifier: _msgSender [28096,28106]",
      "dest": "identifier: _msgSender [28095,28105]"
    },
    {
      "src": "emit_statement [47412,47444]",
      "dest": "emit_statement [52370,52402]"
    },
    {
      "src": "call_argument [12121,12122]",
      "dest": "call_argument [11668,11669]"
    },
    {
      "src": "function: function [44455,44463]",
      "dest": "function: function [49074,49082]"
    },
    {
      "src": "call_argument [46553,46570]",
      "dest": "call_argument [51511,51528]"
    },
    {
      "src": "): ) [32173,32174]",
      "dest": "): ) [32172,32173]"
    },
    {
      "src": "type_name [21578,21582]",
      "dest": "type_name [21191,21195]"
    },
    {
      "src": "address: address [43156,43163]",
      "dest": "address: address [47328,47335]"
    },
    {
      "src": "<=: <= [48552,48554]",
      "dest": "<=: <= [56299,56301]"
    },
    {
      "src": "primitive_type [27215,27222]",
      "dest": "primitive_type [27214,27221]"
    },
    {
      "src": "call_expression [10743,10782]",
      "dest": "call_expression [10290,10329]"
    },
    {
      "src": "parameter [9346,9353]",
      "dest": "parameter [8893,8900]"
    },
    {
      "src": "call_argument [9374,9380]",
      "dest": "call_argument [8921,8927]"
    },
    {
      "src": "(: ( [44158,44159]",
      "dest": "(: ( [48306,48307]"
    },
    {
      "src": "primitive_type [31927,31934]",
      "dest": "primitive_type [31926,31933]"
    },
    {
      "src": "member_expression [46696,46741]",
      "dest": "member_expression [51654,51699]"
    },
    {
      "src": "primitive_type [16598,16603]",
      "dest": "primitive_type [16171,16176]"
    },
    {
      "src": "(: ( [47848,47849]",
      "dest": "(: ( [55417,55418]"
    },
    {
      "src": "type_name [9735,9742]",
      "dest": "type_name [9282,9289]"
    },
    {
      "src": "(: ( [12086,12087]",
      "dest": "(: ( [11633,11634]"
    },
    {
      "src": "uint256: uint256 [41189,41196]",
      "dest": "uint256: uint256 [45361,45368]"
    },
    {
      "src": "type_name [53400,53407]",
      "dest": "type_name [61321,61328]"
    },
    {
      "src": "primitive_type [23804,23810]",
      "dest": "primitive_type [23803,23809]"
    },
    {
      "src": "bytes: bytes [17920,17925]",
      "dest": "bytes: bytes [17493,17498]"
    },
    {
      "src": "primitive_type [36448,36455]",
      "dest": "primitive_type [36875,36882]"
    },
    {
      "src": "): ) [27327,27328]",
      "dest": "): ) [27326,27327]"
    },
    {
      "src": "identifier: N_TOKENS [52994,53002]",
      "dest": "identifier: N_TOKENS [60915,60923]"
    },
    {
      "src": "address: address [23672,23679]",
      "dest": "address: address [23671,23678]"
    },
    {
      "src": "parameter [38442,38456]",
      "dest": "parameter [38964,38978]"
    },
    {
      "src": "): ) [53407,53408]",
      "dest": "): ) [61328,61329]"
    },
    {
      "src": "call_expression [49689,49732]",
      "dest": "call_expression [57863,57906]"
    },
    {
      "src": "binary_expression [10105,10110]",
      "dest": "binary_expression [9652,9657]"
    },
    {
      "src": "type_name [4469,4476]",
      "dest": "type_name [3976,3983]"
    },
    {
      "src": "assignment_expression [42955,42987]",
      "dest": "assignment_expression [47127,47159]"
    },
    {
      "src": "identifier: recipient [14969,14978]",
      "dest": "identifier: recipient [14542,14551]"
    },
    {
      "src": "call_expression [52880,52975]",
      "dest": "call_expression [60801,60896]"
    },
    {
      "src": "{: { [16181,16182]",
      "dest": "{: { [15754,15755]"
    },
    {
      "src": "primitive_type [21193,21197]",
      "dest": "primitive_type [20806,20810]"
    },
    {
      "src": "variable_declaration_statement [8435,8453]",
      "dest": "variable_declaration_statement [7982,8000]"
    },
    {
      "src": "expression_statement [47231,47294]",
      "dest": "expression_statement [52189,52252]"
    },
    {
      "src": "identifier: functionCall [16504,16516]",
      "dest": "identifier: functionCall [16077,16089]"
    },
    {
      "src": "expression_statement [46878,46931]",
      "dest": "expression_statement [51836,51889]"
    },
    {
      "src": "comment: /**      * @dev Function to approve curve gauge to spend y pool tokens      */ [44989,45069]",
      "dest": "comment: /**      * @dev only lender can perform borrowing or repaying      */ [47448,47519]"
    },
    {
      "src": "identifier: c [10077,10078]",
      "dest": "identifier: c [9624,9625]"
    },
    {
      "src": "{: { [38576,38577]",
      "dest": "{: { [39116,39117]"
    },
    {
      "src": "(: ( [36198,36199]",
      "dest": "(: ( [36625,36626]"
    },
    {
      "src": "external: external [3816,3824]",
      "dest": "external: external [3323,3331]"
    },
    {
      "src": "call_argument [17716,17720]",
      "dest": "call_argument [17289,17293]"
    },
    {
      "src": "view: view [36291,36295]",
      "dest": "view: view [36718,36722]"
    },
    {
      "src": ",: , [52019,52020]",
      "dest": ",: , [59942,59943]"
    },
    {
      "src": "function_definition [36430,36473]",
      "dest": "function_definition [36857,36900]"
    },
    {
      "src": "view: view [37149,37153]",
      "dest": "view: view [37576,37580]"
    },
    {
      "src": "view: view [19621,19625]",
      "dest": "view: view [19214,19218]"
    },
    {
      "src": "): ) [49332,49333]",
      "dest": "): ) [47595,47596]"
    },
    {
      "src": "member_expression [45896,45906]",
      "dest": "member_expression [50741,50751]"
    },
    {
      "src": ".: . [31386,31387]",
      "dest": ".: . [31385,31386]"
    },
    {
      "src": "identifier: _curvePool [48045,48055]",
      "dest": "identifier: _curvePool [55685,55695]"
    },
    {
      "src": "state_variable_declaration [23804,23827]",
      "dest": "state_variable_declaration [23803,23826]"
    },
    {
      "src": "uint256: uint256 [36827,36834]",
      "dest": "uint256: uint256 [37254,37261]"
    },
    {
      "src": "state_mutability [24457,24461]",
      "dest": "state_mutability [24456,24460]"
    },
    {
      "src": "(: ( [21971,21972]",
      "dest": "(: ( [21584,21585]"
    },
    {
      "src": "identifier: this [44609,44613]",
      "dest": "identifier: this [49228,49232]"
    },
    {
      "src": "\": \" [49335,49336]",
      "dest": "\": \" [47598,47599]"
    },
    {
      "src": "): ) [44887,44888]",
      "dest": "): ) [49506,49507]"
    },
    {
      "src": "function: function [36510,36518]",
      "dest": "function: function [36937,36945]"
    },
    {
      "src": "call_argument [44969,44972]",
      "dest": "call_argument [49671,49674]"
    },
    {
      "src": "returns: returns [19634,19641]",
      "dest": "returns: returns [19227,19234]"
    },
    {
      "src": "call_expression [30485,30534]",
      "dest": "call_expression [30484,30533]"
    },
    {
      "src": "uint256: uint256 [52764,52771]",
      "dest": "uint256: uint256 [60685,60692]"
    },
    {
      "src": ",: , [33377,33378]",
      "dest": ",: , [33376,33377]"
    },
    {
      "src": "parameter [4249,4253]",
      "dest": "parameter [3756,3760]"
    },
    {
      "src": "identifier: IERC20 [35855,35861]",
      "dest": "identifier: IERC20 [36117,36123]"
    },
    {
      "src": "function_definition [51013,51107]",
      "dest": "function_definition [58936,59030]"
    },
    {
      "src": "type_name [4489,4496]",
      "dest": "type_name [3996,4003]"
    },
    {
      "src": "memory: memory [18181,18187]",
      "dest": "memory: memory [17754,17760]"
    },
    {
      "src": "identifier: target [17587,17593]",
      "dest": "identifier: target [17160,17166]"
    },
    {
      "src": "function: function [2356,2364]",
      "dest": "function: function [1860,1868]"
    },
    {
      "src": "address: address [45908,45915]",
      "dest": "address: address [50753,50760]"
    },
    {
      "src": "type_name [30346,30353]",
      "dest": "type_name [30345,30352]"
    },
    {
      "src": "): ) [3095,3096]",
      "dest": "): ) [2599,2600]"
    },
    {
      "src": "identifier: _msgData [19601,19609]",
      "dest": "identifier: _msgData [19194,19202]"
    },
    {
      "src": "array_access [29936,29956]",
      "dest": "array_access [29935,29955]"
    },
    {
      "src": "]: ] [28108,28109]",
      "dest": "]: ] [28107,28108]"
    },
    {
      "src": "true: true [28153,28157]",
      "dest": "true: true [28152,28156]"
    },
    {
      "src": "(: ( [46241,46242]",
      "dest": "(: ( [51086,51087]"
    },
    {
      "src": "}: } [10789,10790]",
      "dest": "}: } [10336,10337]"
    },
    {
      "src": "call_expression [43037,43057]",
      "dest": "call_expression [47209,47229]"
    },
    {
      "src": "identifier: c [9414,9415]",
      "dest": "identifier: c [8961,8962]"
    },
    {
      "src": "type_name [49657,49664]",
      "dest": "type_name [57831,57838]"
    },
    {
      "src": "identifier: N_TOKENS [47950,47958]",
      "dest": "identifier: N_TOKENS [55520,55528]"
    },
    {
      "src": "parameter [10671,10680]",
      "dest": "parameter [10218,10227]"
    },
    {
      "src": "state_mutability [37084,37088]",
      "dest": "state_mutability [37511,37515]"
    },
    {
      "src": "state_mutability [8401,8405]",
      "dest": "state_mutability [7948,7952]"
    },
    {
      "src": ",: , [29520,29521]",
      "dest": ",: , [29519,29520]"
    },
    {
      "src": "{: { [8111,8112]",
      "dest": "{: { [7658,7659]"
    },
    {
      "src": ",: , [45974,45975]",
      "dest": ",: , [50819,50820]"
    },
    {
      "src": "type_name [26022,26029]",
      "dest": "type_name [26021,26028]"
    },
    {
      "src": "call_expression [43630,43648]",
      "dest": "call_expression [48026,48044]"
    },
    {
      "src": "comment: // The easiest way to bubble the revert reason is using memory via assembly [18440,18515]",
      "dest": "comment: // The easiest way to bubble the revert reason is using memory via assembly [18013,18088]"
    },
    {
      "src": "return_type_definition [52800,52817]",
      "dest": "return_type_definition [60721,60738]"
    },
    {
      "src": ".: . [50811,50812]",
      "dest": ".: . [58736,58737]"
    },
    {
      "src": "identifier: _curvePool [48167,48177]",
      "dest": "identifier: _curvePool [55806,55816]"
    },
    {
      "src": "]: ] [51859,51860]",
      "dest": "]: ] [59782,59783]"
    },
    {
      "src": "return_statement [28968,28980]",
      "dest": "return_statement [28967,28979]"
    },
    {
      "src": "uint256: uint256 [43603,43610]",
      "dest": "uint256: uint256 [47999,48006]"
    },
    {
      "src": "variable_declaration [13845,13857]",
      "dest": "variable_declaration [13415,13427]"
    },
    {
      "src": "identifier: amount [46308,46314]",
      "dest": "identifier: amount [51265,51271]"
    },
    {
      "src": "parameter [8370,8379]",
      "dest": "parameter [7917,7926]"
    },
    {
      "src": "primitive_type [32635,32640]",
      "dest": "primitive_type [32634,32639]"
    },
    {
      "src": "): ) [34190,34191]",
      "dest": "): ) [34357,34358]"
    },
    {
      "src": "}: } [31458,31459]",
      "dest": "}: } [31457,31458]"
    },
    {
      "src": "call_expression [47231,47293]",
      "dest": "call_expression [52189,52251]"
    },
    {
      "src": "=: = [10079,10080]",
      "dest": "=: = [9626,9627]"
    },
    {
      "src": "identifier: amounts [48070,48077]",
      "dest": "identifier: amounts [55710,55717]"
    },
    {
      "src": "primitive_type [23629,23636]",
      "dest": "primitive_type [23628,23635]"
    },
    {
      "src": "visibility [38272,38280]",
      "dest": "visibility [38794,38802]"
    },
    {
      "src": "type_cast_expression [49317,49333]",
      "dest": "type_cast_expression [47580,47596]"
    },
    {
      "src": "(: ( [50217,50218]",
      "dest": "(: ( [57310,57311]"
    },
    {
      "src": "identifier: sender [45900,45906]",
      "dest": "identifier: sender [50745,50751]"
    },
    {
      "src": "identifier: currencyAmount [47772,47786]",
      "dest": "identifier: currencyAmount [55341,55355]"
    },
    {
      "src": "return_statement [34620,34634]",
      "dest": "return_statement [34787,34801]"
    },
    {
      "src": "(: ( [36396,36397]",
      "dest": "(: ( [36823,36824]"
    },
    {
      "src": "primitive_type [9735,9742]",
      "dest": "primitive_type [9282,9289]"
    },
    {
      "src": "(: ( [50443,50444]",
      "dest": "(: ( [57537,57538]"
    },
    {
      "src": "identifier: sub [28885,28888]",
      "dest": "identifier: sub [28884,28887]"
    },
    {
      "src": "call_expression [45665,45716]",
      "dest": "call_expression [50458,50509]"
    },
    {
      "src": "{: { [22018,22019]",
      "dest": "{: { [21631,21632]"
    },
    {
      "src": "function_body [45118,45198]",
      "dest": "function_body [49803,49991]"
    },
    {
      "src": "call_argument [53692,53705]",
      "dest": "call_argument [61613,61626]"
    },
    {
      "src": "type_name [41525,41532]",
      "dest": "type_name [45697,45704]"
    },
    {
      "src": "type_alias [39815,39823]",
      "dest": "type_alias [43935,43943]"
    },
    {
      "src": "{: { [45118,45119]",
      "dest": "{: { [49803,49804]"
    },
    {
      "src": "(: ( [31143,31144]",
      "dest": "(: ( [31142,31143]"
    },
    {
      "src": "user_defined_type [37042,37048]",
      "dest": "user_defined_type [37469,37475]"
    },
    {
      "src": "<=: <= [50199,50201]",
      "dest": "<=: <= [57292,57294]"
    },
    {
      "src": "string_literal [31148,31183]",
      "dest": "string_literal [31147,31182]"
    },
    {
      "src": "): ) [10781,10782]",
      "dest": "): ) [10328,10329]"
    },
    {
      "src": "!=: != [30423,30425]",
      "dest": "!=: != [30422,30424]"
    },
    {
      "src": "parameter [38246,38270]",
      "dest": "parameter [38768,38792]"
    },
    {
      "src": "member_expression [44104,44203]",
      "dest": "member_expression [48270,48333]"
    },
    {
      "src": "identifier: Joined [40934,40940]",
      "dest": "identifier: Joined [45106,45112]"
    },
    {
      "src": "identifier: sender [46807,46813]",
      "dest": "identifier: sender [51765,51771]"
    },
    {
      "src": "event_paramater [42257,42271]",
      "dest": "event_paramater [46429,46443]"
    },
    {
      "src": "return_statement [19802,19818]",
      "dest": "return_statement [19395,19411]"
    },
    {
      "src": "function_body [19657,19825]",
      "dest": "function_body [19250,19418]"
    },
    {
      "src": "returns: returns [36190,36197]",
      "dest": "returns: returns [36617,36624]"
    },
    {
      "src": "parameter [10716,10723]",
      "dest": "parameter [10263,10270]"
    },
    {
      "src": "variable_declaration [46493,46525]",
      "dest": "variable_declaration [51451,51483]"
    },
    {
      "src": "string: string [24675,24681]",
      "dest": "string: string [24674,24680]"
    },
    {
      "src": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [14007,14928]",
      "dest": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * // importANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [13577,14501]"
    },
    {
      "src": "call_expression [46721,46736]",
      "dest": "call_expression [51679,51694]"
    },
    {
      "src": "primitive_type [17165,17170]",
      "dest": "primitive_type [16738,16743]"
    },
    {
      "src": "call_expression [44707,44749]",
      "dest": "call_expression [49326,49368]"
    },
    {
      "src": "): ) [18816,18817]",
      "dest": "): ) [18389,18390]"
    },
    {
      "src": "identifier: coins [52934,52939]",
      "dest": "identifier: coins [60855,60860]"
    },
    {
      "src": "): ) [28009,28010]",
      "dest": "): ) [28008,28009]"
    },
    {
      "src": "]: ] [36075,36076]",
      "dest": "]: ] [36502,36503]"
    },
    {
      "src": "(: ( [31217,31218]",
      "dest": "(: ( [31216,31217]"
    },
    {
      "src": "return: return [34620,34626]",
      "dest": "return: return [34787,34793]"
    },
    {
      "src": "uint256: uint256 [39083,39090]",
      "dest": "uint256: uint256 [39641,39648]"
    },
    {
      "src": "uint256: uint256 [11372,11379]",
      "dest": "uint256: uint256 [10919,10926]"
    },
    {
      "src": "comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [30058,30325]",
      "dest": "comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [30057,30324]"
    },
    {
      "src": "uint256: uint256 [22181,22188]",
      "dest": "uint256: uint256 [21794,21801]"
    },
    {
      "src": "type_name [47788,47795]",
      "dest": "type_name [55357,55364]"
    },
    {
      "src": "): ) [25706,25707]",
      "dest": "): ) [25705,25706]"
    },
    {
      "src": "string_literal [15057,15088]",
      "dest": "string_literal [14630,14661]"
    },
    {
      "src": "uint256: uint256 [36662,36669]",
      "dest": "uint256: uint256 [37089,37096]"
    },
    {
      "src": "parameter [37163,37170]",
      "dest": "parameter [37590,37597]"
    },
    {
      "src": "uint8: uint8 [40521,40526]",
      "dest": "uint8: uint8 [44693,44698]"
    },
    {
      "src": "type_cast_expression [32044,32054]",
      "dest": "type_cast_expression [32043,32053]"
    },
    {
      "src": "identifier: _allowances [28084,28095]",
      "dest": "identifier: _allowances [28083,28094]"
    },
    {
      "src": "array_access [28850,28875]",
      "dest": "array_access [28849,28874]"
    },
    {
      "src": "parameter [3088,3095]",
      "dest": "parameter [2592,2599]"
    },
    {
      "src": "expression_statement [29834,29926]",
      "dest": "expression_statement [29833,29925]"
    },
    {
      "src": "comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      * Can only be called by the current owner.      */ [35360,35501]",
      "dest": "comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      * Can only be called by the current owner.      */ [35527,35668]"
    },
    {
      "src": "identifier: sub [8906,8909]",
      "dest": "identifier: sub [8453,8456]"
    },
    {
      "src": "parameter [36397,36411]",
      "dest": "parameter [36824,36838]"
    },
    {
      "src": "identifier: currencyAmountToTransfer [46501,46525]",
      "dest": "identifier: currencyAmountToTransfer [51459,51483]"
    },
    {
      "src": "(: ( [24674,24675]",
      "dest": "(: ( [24673,24674]"
    },
    {
      "src": "type_name [30363,30370]",
      "dest": "type_name [30362,30369]"
    },
    {
      "src": "external: external [44889,44897]",
      "dest": "external: external [49508,49516]"
    },
    {
      "src": "identifier: sender [47428,47434]",
      "dest": "identifier: sender [52386,52392]"
    },
    {
      "src": "yul_path [18709,18719]",
      "dest": "yul_path [18282,18292]"
    },
    {
      "src": "type_name [49578,49585]",
      "dest": "type_name [52892,52899]"
    },
    {
      "src": "[: [ [29843,29844]",
      "dest": "[: [ [29842,29843]"
    },
    {
      "src": "string_literal [21131,21179]",
      "dest": "string_literal [20744,20792]"
    },
    {
      "src": "block_statement [47216,47400]",
      "dest": "block_statement [52174,52358]"
    },
    {
      "src": "identifier: approve [3775,3782]",
      "dest": "identifier: approve [3282,3289]"
    },
    {
      "src": "): ) [36602,36603]",
      "dest": "): ) [37029,37030]"
    },
    {
      "src": "identifier: amounts [36084,36091]",
      "dest": "identifier: amounts [36511,36518]"
    },
    {
      "src": "function_definition [25509,25609]",
      "dest": "function_definition [25508,25608]"
    },
    {
      "src": "identifier: success [18253,18260]",
      "dest": "identifier: success [17826,17833]"
    },
    {
      "src": "call_argument [15032,15036]",
      "dest": "call_argument [14605,14609]"
    },
    {
      "src": "}: } [52446,52447]",
      "dest": "}: } [60367,60368]"
    },
    {
      "src": "identifier: amount [52487,52493]",
      "dest": "identifier: amount [60408,60414]"
    },
    {
      "src": "call_argument [28075,28082]",
      "dest": "call_argument [28074,28081]"
    },
    {
      "src": "identifier: _curveGauge [40160,40171]",
      "dest": "identifier: _curveGauge [44280,44291]"
    },
    {
      "src": "bytes: bytes [17595,17600]",
      "dest": "bytes: bytes [17168,17173]"
    },
    {
      "src": "contract: contract [19454,19462]",
      "dest": "contract: contract [19047,19055]"
    },
    {
      "src": "function_definition [21531,22099]",
      "dest": "function_definition [21144,21712]"
    },
    {
      "src": "function: function [13577,13585]",
      "dest": "function: function [13147,13155]"
    },
    {
      "src": "=: = [21287,21288]",
      "dest": "=: = [20900,20901]"
    },
    {
      "src": "comment: // increase the likelihood of the full refund coming into effect. [6328,6393]",
      "dest": "comment: // increase the likelihood of the full refund coming into effect. [5855,5920]"
    },
    {
      "src": "\": \" [7110,7111]",
      "dest": "\": \" [6637,6638]"
    },
    {
      "src": "primitive_type [27268,27275]",
      "dest": "primitive_type [27267,27274]"
    },
    {
      "src": "visibility [37635,37643]",
      "dest": "visibility [38157,38165]"
    },
    {
      "src": "(: ( [18001,18002]",
      "dest": "(: ( [17574,17575]"
    },
    {
      "src": "emit: emit [44946,44950]",
      "dest": "emit: emit [49648,49652]"
    },
    {
      "src": "primitive_type [52986,52993]",
      "dest": "primitive_type [60907,60914]"
    },
    {
      "src": "identifier: onlyOwner [44898,44907]",
      "dest": "identifier: onlyOwner [49517,49526]"
    },
    {
      "src": "parameter [21578,21582]",
      "dest": "parameter [21191,21195]"
    },
    {
      "src": "identifier: b [10114,10115]",
      "dest": "identifier: b [9661,9662]"
    },
    {
      "src": "identifier: token [37011,37016]",
      "dest": "identifier: token [37438,37443]"
    },
    {
      "src": "primitive_type [42004,42011]",
      "dest": "primitive_type [46176,46183]"
    },
    {
      "src": "): ) [26094,26095]",
      "dest": "): ) [26093,26094]"
    },
    {
      "src": ",: , [24236,24237]",
      "dest": ",: , [24235,24236]"
    },
    {
      "src": "primitive_type [46655,46662]",
      "dest": "primitive_type [51613,51620]"
    },
    {
      "src": "function_definition [38427,38467]",
      "dest": "function_definition [38949,38989]"
    },
    {
      "src": "visibility [8856,8864]",
      "dest": "visibility [8403,8411]"
    },
    {
      "src": "identifier: _currencyToken [43133,43147]",
      "dest": "identifier: _currencyToken [47305,47319]"
    },
    {
      "src": "member_expression [18202,18213]",
      "dest": "member_expression [17775,17786]"
    },
    {
      "src": "]: ] [27436,27437]",
      "dest": "]: ] [27435,27436]"
    },
    {
      "src": "parameter [48462,48477]",
      "dest": "parameter [56209,56224]"
    },
    {
      "src": "if_statement [18249,18844]",
      "dest": "if_statement [17822,18417]"
    },
    {
      "src": "type_cast_expression [34451,34461]",
      "dest": "type_cast_expression [34618,34628]"
    },
    {
      "src": "call_expression [45704,45715]",
      "dest": "call_expression [50497,50508]"
    },
    {
      "src": "indexed: indexed [42012,42019]",
      "dest": "indexed: indexed [46184,46191]"
    },
    {
      "src": "type_name [11372,11379]",
      "dest": "type_name [10919,10926]"
    },
    {
      "src": ",: , [16550,16551]",
      "dest": ",: , [16123,16124]"
    },
    {
      "src": "call_expression [44104,44181]",
      "dest": "call_expression [48270,48329]"
    },
    {
      "src": "identifier: sub [45489,45492]",
      "dest": "identifier: sub [50282,50285]"
    },
    {
      "src": "expression_statement [46300,46374]",
      "dest": "expression_statement [51257,51332]"
    },
    {
      "src": "parameter [36985,36992]",
      "dest": "parameter [37412,37419]"
    },
    {
      "src": "uint256: uint256 [49657,49664]",
      "dest": "uint256: uint256 [57831,57838]"
    },
    {
      "src": "call_expression [45825,45847]",
      "dest": "call_expression [50618,50640]"
    },
    {
      "src": "string: string [24471,24477]",
      "dest": "string: string [24470,24476]"
    },
    {
      "src": "identifier: b [8913,8914]",
      "dest": "identifier: b [8460,8461]"
    },
    {
      "src": "identifier: currentlyAvailableAmount [44724,44748]",
      "dest": "identifier: currentlyAvailableAmount [49343,49367]"
    },
    {
      "src": "string_literal [32056,32094]",
      "dest": "string_literal [32055,32093]"
    },
    {
      "src": "user_defined_type [37658,37664]",
      "dest": "user_defined_type [38180,38186]"
    },
    {
      "src": "type_name [36662,36669]",
      "dest": "type_name [37089,37096]"
    },
    {
      "src": "call_expression [47316,47334]",
      "dest": "call_expression [52274,52292]"
    },
    {
      "src": "address: address [31927,31934]",
      "dest": "address: address [31926,31933]"
    },
    {
      "src": "state_mutability [12716,12720]",
      "dest": "state_mutability [12263,12267]"
    },
    {
      "src": "): ) [8886,8887]",
      "dest": "): ) [8433,8434]"
    },
    {
      "src": "expression_statement [42850,42871]",
      "dest": "expression_statement [47022,47043]"
    },
    {
      "src": "(: ( [50844,50845]",
      "dest": "(: ( [58769,58770]"
    },
    {
      "src": "true: true [53110,53114]",
      "dest": "true: true [61031,61035]"
    },
    {
      "src": "): ) [7143,7144]",
      "dest": "): ) [6670,6671]"
    },
    {
      "src": "identifier: donate_dust [36861,36872]",
      "dest": "identifier: donate_dust [37288,37299]"
    },
    {
      "src": "function_body [24281,24364]",
      "dest": "function_body [24280,24363]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-balanceOf}.      */ [25617,25666]",
      "dest": "comment: /**      * @dev See {IERC20-balanceOf}.      */ [25616,25665]"
    },
    {
      "src": "modifier_invocation [51889,51898]",
      "dest": "modifier_invocation [59812,59821]"
    },
    {
      "src": "): ) [6996,6997]",
      "dest": "): ) [6523,6524]"
    },
    {
      "src": "primitive_type [4489,4496]",
      "dest": "primitive_type [3996,4003]"
    },
    {
      "src": "return_type_definition [12078,12095]",
      "dest": "return_type_definition [11625,11642]"
    },
    {
      "src": "string [10117,10152]",
      "dest": "string [9664,9699]"
    },
    {
      "src": ".: . [52894,52895]",
      "dest": ".: . [60815,60816]"
    },
    {
      "src": "(: ( [21577,21578]",
      "dest": "(: ( [21190,21191]"
    },
    {
      "src": ".: . [15037,15038]",
      "dest": ".: . [14610,14611]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [15102,15170]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [14675,14743]"
    },
    {
      "src": "event_paramater [4469,4487]",
      "dest": "event_paramater [3976,3994]"
    },
    {
      "src": "string_literal [42817,42828]",
      "dest": "string_literal [46989,47000]"
    },
    {
      "src": "identifier: approve [45148,45155]",
      "dest": "identifier: approve [49890,49897]"
    },
    {
      "src": "uint256: uint256 [41808,41815]",
      "dest": "uint256: uint256 [45980,45987]"
    },
    {
      "src": "parameter [9769,9776]",
      "dest": "parameter [9316,9323]"
    },
    {
      "src": "(: ( [44141,44142]",
      "dest": "(: ( [48289,48290]"
    },
    {
      "src": "function_definition [28668,28987]",
      "dest": "function_definition [28667,28986]"
    },
    {
      "src": "identifier: b [8389,8390]",
      "dest": "identifier: b [7936,7937]"
    },
    {
      "src": "identifier: approve [43219,43226]",
      "dest": "identifier: approve [47391,47398]"
    },
    {
      "src": "returns: returns [39074,39081]",
      "dest": "returns: returns [39632,39639]"
    },
    {
      "src": "member_expression [46528,46538]",
      "dest": "member_expression [51486,51496]"
    },
    {
      "src": "(: ( [15230,15231]",
      "dest": "(: ( [14803,14804]"
    },
    {
      "src": "function_body [9778,10182]",
      "dest": "function_body [9325,9729]"
    },
    {
      "src": "visibility [36714,36722]",
      "dest": "visibility [37141,37149]"
    },
    {
      "src": "return_statement [43995,44214]",
      "dest": "return_statement [48263,48343]"
    },
    {
      "src": "binary_expression [47180,47214]",
      "dest": "binary_expression [52138,52172]"
    },
    {
      "src": "event_paramater [41824,41835]",
      "dest": "event_paramater [45996,46007]"
    },
    {
      "src": "function_definition [38024,38063]",
      "dest": "function_definition [38546,38585]"
    },
    {
      "src": "parameter [12042,12051]",
      "dest": "parameter [11589,11598]"
    },
    {
      "src": "pure: pure [12716,12720]",
      "dest": "pure: pure [12263,12267]"
    },
    {
      "src": "primitive_type [36856,36860]",
      "dest": "primitive_type [37283,37287]"
    },
    {
      "src": ",: , [48826,48827]",
      "dest": ",: , [56641,56642]"
    },
    {
      "src": "identifier: errorMessage [11335,11347]",
      "dest": "identifier: errorMessage [10882,10894]"
    },
    {
      "src": "identifier: data [16546,16550]",
      "dest": "identifier: data [16119,16123]"
    },
    {
      "src": "inheritance_specifier [37564,37570]",
      "dest": "inheritance_specifier [38086,38092]"
    },
    {
      "src": "variable_declaration_statement [44537,44616]",
      "dest": "variable_declaration_statement [49156,49235]"
    },
    {
      "src": "call_argument [18233,18237]",
      "dest": "call_argument [17806,17810]"
    },
    {
      "src": "type_name [42728,42742]",
      "dest": "type_name [46900,46914]"
    },
    {
      "src": "type_name [37819,37826]",
      "dest": "type_name [38341,38348]"
    },
    {
      "src": ",: , [8914,8915]",
      "dest": ",: , [8461,8462]"
    },
    {
      "src": "event: event [4432,4437]",
      "dest": "event: event [3939,3944]"
    },
    {
      "src": "(: ( [49062,49063]",
      "dest": "(: ( [56877,56878]"
    },
    {
      "src": "function_definition [11286,11564]",
      "dest": "function_definition [10833,11111]"
    },
    {
      "src": ".: . [53073,53074]",
      "dest": ".: . [60994,60995]"
    },
    {
      "src": "address: address [52229,52236]",
      "dest": "address: address [60150,60157]"
    },
    {
      "src": "parameter [8845,8854]",
      "dest": "parameter [8392,8401]"
    },
    {
      "src": "visibility [51035,51043]",
      "dest": "visibility [58958,58966]"
    },
    {
      "src": "call_argument [17219,17225]",
      "dest": "call_argument [16792,16798]"
    },
    {
      "src": ".: . [50439,50440]",
      "dest": ".: . [57533,57534]"
    },
    {
      "src": "identifier: amountIn [51801,51809]",
      "dest": "identifier: amountIn [59724,59732]"
    },
    {
      "src": "): ) [34607,34608]",
      "dest": "): ) [34774,34775]"
    },
    {
      "src": "(: ( [31124,31125]",
      "dest": "(: ( [31123,31124]"
    },
    {
      "src": "}: } [11563,11564]",
      "dest": "}: } [11110,11111]"
    },
    {
      "src": "call_argument [53110,53114]",
      "dest": "call_argument [61031,61035]"
    },
    {
      "src": "call_argument [52021,52033]",
      "dest": "call_argument [59944,59956]"
    },
    {
      "src": "!=: != [29624,29626]",
      "dest": "!=: != [29623,29625]"
    },
    {
      "src": "): ) [16256,16257]",
      "dest": "): ) [15829,15830]"
    },
    {
      "src": "member_expression [50080,50116]",
      "dest": "member_expression [58403,58439]"
    },
    {
      "src": "identifier: path [52035,52039]",
      "dest": "identifier: path [59958,59962]"
    },
    {
      "src": "type_name [38623,38630]",
      "dest": "type_name [39163,39170]"
    },
    {
      "src": "address: address [39020,39027]",
      "dest": "address: address [39578,39585]"
    },
    {
      "src": "member_expression [45412,45422]",
      "dest": "member_expression [50205,50215]"
    },
    {
      "src": "): ) [53080,53081]",
      "dest": "): ) [61001,61002]"
    },
    {
      "src": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [8118,8351]",
      "dest": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [7665,7898]"
    },
    {
      "src": "identifier: _curveGauge [44686,44697]",
      "dest": "identifier: _curveGauge [49305,49316]"
    },
    {
      "src": "array_access [29854,29871]",
      "dest": "array_access [29853,29870]"
    },
    {
      "src": "{: { [46289,46290]",
      "dest": "{: { [51134,51135]"
    },
    {
      "src": "comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20PresetMinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [22300,23485]",
      "dest": "comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20PresetMinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [22299,23484]"
    },
    {
      "src": "(: ( [51923,51924]",
      "dest": "(: ( [59846,59847]"
    },
    {
      "src": "identifier: _owner [35698,35704]",
      "dest": "identifier: _owner [35865,35871]"
    },
    {
      "src": "call_expression [47044,47105]",
      "dest": "call_expression [52002,52063]"
    },
    {
      "src": "internal: internal [17147,17155]",
      "dest": "internal: internal [16720,16728]"
    },
    {
      "src": "\": \" [49369,49370]",
      "dest": "\": \" [47642,47643]"
    },
    {
      "src": "user_defined_type [40246,40258]",
      "dest": "user_defined_type [44366,44378]"
    },
    {
      "src": "==: == [10111,10113]",
      "dest": "==: == [9658,9660]"
    },
    {
      "src": "external: external [39065,39073]",
      "dest": "external: external [39623,39631]"
    },
    {
      "src": "(: ( [44178,44179]",
      "dest": "(: ( [48326,48327]"
    },
    {
      "src": ",: , [27462,27463]",
      "dest": ",: , [27461,27462]"
    },
    {
      "src": "assignment_expression [31259,31348]",
      "dest": "assignment_expression [31258,31347]"
    },
    {
      "src": "external: external [3065,3073]",
      "dest": "external: external [2569,2577]"
    },
    {
      "src": "parameter [33388,33402]",
      "dest": "parameter [33387,33401]"
    },
    {
      "src": "identifier: isConstructor [21540,21553]",
      "dest": "identifier: isConstructor [21153,21166]"
    },
    {
      "src": "call_expression [46409,46422]",
      "dest": "call_expression [51367,51380]"
    },
    {
      "src": "function: function [2213,2221]",
      "dest": "function: function [1717,1725]"
    },
    {
      "src": "function_body [26340,26393]",
      "dest": "function_body [26339,26392]"
    },
    {
      "src": "}: } [43722,43723]",
      "dest": "}: } [48118,48119]"
    },
    {
      "src": "identifier: target [17105,17111]",
      "dest": "identifier: target [16678,16684]"
    },
    {
      "src": "identifier: IYToken [35844,35851]",
      "dest": "identifier: IYToken [36106,36113]"
    },
    {
      "src": "state_variable_declaration [40246,40274]",
      "dest": "state_variable_declaration [44366,44394]"
    },
    {
      "src": "number_literal: 0 [30514,30515]",
      "dest": "number_literal: 0 [30513,30514]"
    },
    {
      "src": "(: ( [3032,3033]",
      "dest": "(: ( [2536,2537]"
    },
    {
      "src": "(: ( [53460,53461]",
      "dest": "(: ( [61381,61382]"
    },
    {
      "src": "emit: emit [32234,32238]",
      "dest": "emit: emit [32233,32237]"
    },
    {
      "src": "number_literal: 0 [32133,32134]",
      "dest": "number_literal: 0 [32132,32133]"
    },
    {
      "src": "(: ( [17821,17822]",
      "dest": "(: ( [17394,17395]"
    },
    {
      "src": "bytes: bytes [16130,16135]",
      "dest": "bytes: bytes [15703,15708]"
    },
    {
      "src": "primitive_type [23777,23783]",
      "dest": "primitive_type [23776,23782]"
    },
    {
      "src": "variable_declaration_statement [21193,21229]",
      "dest": "variable_declaration_statement [20806,20842]"
    },
    {
      "src": "parameter [17113,17130]",
      "dest": "parameter [16686,16703]"
    },
    {
      "src": ",: , [16668,16669]",
      "dest": ",: , [16241,16242]"
    },
    {
      "src": "identifier: transfer [47335,47343]",
      "dest": "identifier: transfer [52293,52301]"
    },
    {
      "src": "function_definition [38583,38632]",
      "dest": "function_definition [39123,39172]"
    },
    {
      "src": "parameter [17904,17918]",
      "dest": "parameter [17477,17491]"
    },
    {
      "src": "identifier: account [30415,30422]",
      "dest": "identifier: account [30414,30421]"
    },
    {
      "src": ",: , [36845,36846]",
      "dest": ",: , [37272,37273]"
    },
    {
      "src": "call_argument [18055,18086]",
      "dest": "call_argument [17628,17659]"
    },
    {
      "src": "expression_statement [44686,44751]",
      "dest": "expression_statement [49305,49370]"
    },
    {
      "src": "function_definition [36897,36994]",
      "dest": "function_definition [37324,37421]"
    },
    {
      "src": "identifier: sender [29514,29520]",
      "dest": "identifier: sender [29513,29519]"
    },
    {
      "src": "function: function [24636,24644]",
      "dest": "function: function [24635,24643]"
    },
    {
      "src": "call_argument [43235,43245]",
      "dest": "call_argument [47407,47417]"
    },
    {
      "src": "type_cast_expression [43227,43246]",
      "dest": "type_cast_expression [47399,47418]"
    },
    {
      "src": "): ) [13641,13642]",
      "dest": "): ) [13211,13212]"
    },
    {
      "src": "(: ( [41359,41360]",
      "dest": "(: ( [45531,45532]"
    },
    {
      "src": "return: return [53056,53062]",
      "dest": "return: return [60977,60983]"
    },
    {
      "src": "identifier: transfer [47059,47067]",
      "dest": "identifier: transfer [52017,52025]"
    },
    {
      "src": "type_name [8415,8422]",
      "dest": "type_name [7962,7969]"
    },
    {
      "src": "type_name [17904,17911]",
      "dest": "type_name [17477,17484]"
    },
    {
      "src": "call_expression [45482,45497]",
      "dest": "call_expression [50275,50290]"
    },
    {
      "src": "return_type_definition [36190,36207]",
      "dest": "return_type_definition [36617,36634]"
    },
    {
      "src": "return_type_definition [2715,2729]",
      "dest": "return_type_definition [2219,2233]"
    },
    {
      "src": "): ) [45677,45678]",
      "dest": "): ) [50470,50471]"
    },
    {
      "src": "identifier: currencyBalance [47867,47882]",
      "dest": "identifier: currencyBalance [55436,55451]"
    },
    {
      "src": "return_statement [26690,26702]",
      "dest": "return_statement [26689,26701]"
    },
    {
      "src": "identifier: initialize [34308,34318]",
      "dest": "identifier: initialize [34475,34485]"
    },
    {
      "src": "type_name [38986,38995]",
      "dest": "type_name [39544,39553]"
    },
    {
      "src": "identifier: collectCrv [51022,51032]",
      "dest": "identifier: collectCrv [58945,58955]"
    },
    {
      "src": "primitive_type [13637,13641]",
      "dest": "primitive_type [13207,13211]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [13868,13915]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [13438,13485]"
    },
    {
      "src": "identifier: transfer [50482,50490]",
      "dest": "identifier: transfer [57576,57584]"
    },
    {
      "src": "call_expression [29774,29821]",
      "dest": "call_expression [29773,29820]"
    },
    {
      "src": "identifier: _approve [26640,26648]",
      "dest": "identifier: _approve [26639,26647]"
    },
    {
      "src": "expression_statement [31259,31349]",
      "dest": "expression_statement [31258,31348]"
    },
    {
      "src": "identifier: _ENTERED [7232,7240]",
      "dest": "identifier: _ENTERED [6759,6767]"
    },
    {
      "src": "binary_expression [32114,32135]",
      "dest": "binary_expression [32113,32134]"
    },
    {
      "src": "string_literal [15231,15233]",
      "dest": "string_literal [14804,14806]"
    },
    {
      "src": "parameter [42664,42686]",
      "dest": "parameter [46836,46858]"
    },
    {
      "src": "binary_expression [46991,47019]",
      "dest": "binary_expression [51949,51977]"
    },
    {
      "src": "if: if [10010,10012]",
      "dest": "if: if [9557,9559]"
    },
    {
      "src": "call_argument [29884,29924]",
      "dest": "call_argument [29883,29923]"
    },
    {
      "src": "{: { [17179,17180]",
      "dest": "{: { [16752,16753]"
    },
    {
      "src": "string_literal [46341,46372]",
      "dest": "string_literal [51298,51330]"
    },
    {
      "src": "interface_declaration [36611,37175]",
      "dest": "interface_declaration [37038,37602]"
    },
    {
      "src": "string_literal [49335,49370]",
      "dest": "string_literal [47598,47643]"
    },
    {
      "src": "state_variable_declaration [6493,6517]",
      "dest": "state_variable_declaration [6020,6044]"
    },
    {
      "src": "[: [ [28095,28096]",
      "dest": "[: [ [28094,28095]"
    },
    {
      "src": "identifier: path [39005,39009]",
      "dest": "identifier: path [39563,39567]"
    },
    {
      "src": "return_type_definition [26322,26339]",
      "dest": "return_type_definition [26321,26338]"
    },
    {
      "src": "): ) [48092,48093]",
      "dest": "): ) [55732,55733]"
    },
    {
      "src": "): ) [31245,31246]",
      "dest": "): ) [31244,31245]"
    },
    {
      "src": "function_definition [9711,10182]",
      "dest": "function_definition [9258,9729]"
    },
    {
      "src": "primitive_type [21578,21582]",
      "dest": "primitive_type [21191,21195]"
    },
    {
      "src": ",: , [11405,11406]",
      "dest": ",: , [10952,10953]"
    },
    {
      "src": "}: } [36210,36211]",
      "dest": "}: } [36637,36638]"
    },
    {
      "src": ".: . [44590,44591]",
      "dest": ".: . [49209,49210]"
    },
    {
      "src": "}: } [37174,37175]",
      "dest": "}: } [37601,37602]"
    },
    {
      "src": "member_expression [44051,44064]",
      "dest": "member_expression [48816,48829]"
    },
    {
      "src": "(: ( [37041,37042]",
      "dest": "(: ( [37468,37469]"
    },
    {
      "src": "string_literal [32137,32173]",
      "dest": "string_literal [32136,32172]"
    },
    {
      "src": "boolean_literal [50155,50160]",
      "dest": "boolean_literal [58486,58491]"
    },
    {
      "src": "parameter [47764,47786]",
      "dest": "parameter [55333,55355]"
    },
    {
      "src": "=: = [47975,47976]",
      "dest": "=: = [55545,55546]"
    },
    {
      "src": "(: ( [2723,2724]",
      "dest": "(: ( [2227,2228]"
    },
    {
      "src": "type_name [9273,9280]",
      "dest": "type_name [8820,8827]"
    },
    {
      "src": "): ) [28134,28135]",
      "dest": "): ) [28133,28134]"
    },
    {
      "src": "string_literal [17240,17283]",
      "dest": "string_literal [16813,16856]"
    },
    {
      "src": "emit_statement [30002,30043]",
      "dest": "emit_statement [30001,30042]"
    },
    {
      "src": "visibility [2706,2714]",
      "dest": "visibility [2210,2218]"
    },
    {
      "src": "function_body [8888,8957]",
      "dest": "function_body [8435,8504]"
    },
    {
      "src": "address: address [51851,51858]",
      "dest": "address: address [59774,59781]"
    },
    {
      "src": ",: , [12051,12052]",
      "dest": ",: , [11598,11599]"
    },
    {
      "src": "member_expression [49689,49726]",
      "dest": "member_expression [57863,57900]"
    },
    {
      "src": ".: . [45959,45960]",
      "dest": ".: . [50804,50805]"
    },
    {
      "src": "comment: /// @dev Returns true if and only if the function is running in the constructor [21446,21525]",
      "dest": "comment: /// @dev Returns true if and only if the function is running in the constructor [21059,21138]"
    },
    {
      "src": "call_argument [8916,8948]",
      "dest": "call_argument [8463,8495]"
    },
    {
      "src": "primitive_type [4249,4253]",
      "dest": "primitive_type [3756,3760]"
    },
    {
      "src": "uint256: uint256 [39828,39835]",
      "dest": "uint256: uint256 [43948,43955]"
    },
    {
      "src": "identifier: msg [47068,47071]",
      "dest": "identifier: msg [52026,52029]"
    },
    {
      "src": "visibility [50760,50768]",
      "dest": "visibility [58674,58682]"
    },
    {
      "src": "call_argument [44204,44211]",
      "dest": "call_argument [48334,48341]"
    },
    {
      "src": "if: if [46987,46989]",
      "dest": "if: if [51945,51947]"
    },
    {
      "src": "visibility [23638,23645]",
      "dest": "visibility [23637,23644]"
    },
    {
      "src": "\": \" [29884,29885]",
      "dest": "\": \" [29883,29884]"
    },
    {
      "src": "type_name [20916,20920]",
      "dest": "type_name [20529,20533]"
    },
    {
      "src": "parameter [26261,26274]",
      "dest": "parameter [26260,26273]"
    },
    {
      "src": "event: event [42212,42217]",
      "dest": "event: event [46384,46389]"
    },
    {
      "src": "(: ( [44588,44589]",
      "dest": "(: ( [49207,49208]"
    },
    {
      "src": "call_expression [48167,48210]",
      "dest": "call_expression [55806,55849]"
    },
    {
      "src": "indexed: indexed [41173,41180]",
      "dest": "indexed: indexed [45345,45352]"
    },
    {
      "src": "returns: returns [8406,8413]",
      "dest": "returns: returns [7953,7960]"
    },
    {
      "src": "): ) [37048,37049]",
      "dest": "): ) [37475,37476]"
    },
    {
      "src": "using: using [23576,23581]",
      "dest": "using: using [23575,23580]"
    },
    {
      "src": "}: } [45996,45997]",
      "dest": "}: } [50841,50842]"
    },
    {
      "src": "!: ! [21117,21118]",
      "dest": "!: ! [20730,20731]"
    },
    {
      "src": ",: , [26274,26275]",
      "dest": ",: , [26273,26274]"
    },
    {
      "src": "visibility [36107,36115]",
      "dest": "visibility [36534,36542]"
    },
    {
      "src": "primitive_type [42257,42264]",
      "dest": "primitive_type [46429,46436]"
    },
    {
      "src": "variable_declaration_statement [52986,53046]",
      "dest": "variable_declaration_statement [60907,60967]"
    },
    {
      "src": "identifier: SafeMath [39815,39823]",
      "dest": "identifier: SafeMath [43935,43943]"
    },
    {
      "src": "identifier: beneficiary [52237,52248]",
      "dest": "identifier: beneficiary [60158,60169]"
    },
    {
      "src": "comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [28995,29471]",
      "dest": "comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [28994,29470]"
    },
    {
      "src": "parameter [36827,36845]",
      "dest": "parameter [37254,37272]"
    },
    {
      "src": "]: ] [30614,30615]",
      "dest": "]: ] [30613,30614]"
    },
    {
      "src": "call_expression [8906,8949]",
      "dest": "call_expression [8453,8496]"
    },
    {
      "src": "type_cast_expression [35334,35344]",
      "dest": "type_cast_expression [35501,35511]"
    },
    {
      "src": "function_definition [37058,37106]",
      "dest": "function_definition [37485,37533]"
    },
    {
      "src": ".: . [50549,50550]",
      "dest": ".: . [57643,57644]"
    },
    {
      "src": "=: = [24298,24299]",
      "dest": "=: = [24297,24298]"
    },
    {
      "src": "{: { [29598,29599]",
      "dest": "{: { [29597,29598]"
    },
    {
      "src": "identifier: recipient [26030,26039]",
      "dest": "identifier: recipient [26029,26038]"
    },
    {
      "src": "number_literal: 0 [32052,32053]",
      "dest": "number_literal: 0 [32051,32052]"
    },
    {
      "src": "identifier: this [17716,17720]",
      "dest": "identifier: this [17289,17293]"
    },
    {
      "src": "=: = [32215,32216]",
      "dest": "=: = [32214,32215]"
    },
    {
      "src": "visibility [35901,35909]",
      "dest": "visibility [36163,36171]"
    },
    {
      "src": "primitive_type [27991,27998]",
      "dest": "primitive_type [27990,27997]"
    },
    {
      "src": "[: [ [36669,36670]",
      "dest": "[: [ [37096,37097]"
    },
    {
      "src": "visibility [38458,38466]",
      "dest": "visibility [38980,38988]"
    },
    {
      "src": "type_name [3048,3055]",
      "dest": "type_name [2552,2559]"
    },
    {
      "src": "function: function [3766,3774]",
      "dest": "function: function [3273,3281]"
    },
    {
      "src": "): ) [48184,48185]",
      "dest": "): ) [55823,55824]"
    },
    {
      "src": "): ) [49822,49823]",
      "dest": "): ) [57974,57975]"
    },
    {
      "src": "user_defined_type [36596,36602]",
      "dest": "user_defined_type [37023,37029]"
    },
    {
      "src": "): ) [50160,50161]",
      "dest": "): ) [58491,58492]"
    },
    {
      "src": "parameter [31927,31940]",
      "dest": "parameter [31926,31939]"
    },
    {
      "src": "(: ( [44968,44969]",
      "dest": "(: ( [49670,49671]"
    },
    {
      "src": "type_name [3088,3095]",
      "dest": "type_name [2592,2599]"
    },
    {
      "src": "(: ( [50490,50491]",
      "dest": "(: ( [57584,57585]"
    },
    {
      "src": "identifier: TUSD_INDEX [48797,48807]",
      "dest": "identifier: TUSD_INDEX [56612,56622]"
    },
    {
      "src": "member_expression [52390,52413]",
      "dest": "member_expression [60311,60334]"
    },
    {
      "src": "(: ( [21081,21082]",
      "dest": "(: ( [20694,20695]"
    },
    {
      "src": "function_definition [36556,36604]",
      "dest": "function_definition [36983,37031]"
    },
    {
      "src": "virtual: virtual [35240,35247]",
      "dest": "virtual: virtual [35407,35414]"
    },
    {
      "src": "bytes: bytes [19643,19648]",
      "dest": "bytes: bytes [19236,19241]"
    },
    {
      "src": "address: address [31136,31143]",
      "dest": "address: address [31135,31142]"
    },
    {
      "src": "call_argument [26672,26678]",
      "dest": "call_argument [26671,26677]"
    },
    {
      "src": "primitive_type [52041,52048]",
      "dest": "primitive_type [59964,59971]"
    },
    {
      "src": "identifier: _uniRouter [40302,40312]",
      "dest": "identifier: _uniRouter [44422,44432]"
    },
    {
      "src": "block_statement [44671,44762]",
      "dest": "block_statement [49290,49381]"
    },
    {
      "src": "bool: bool [36856,36860]",
      "dest": "bool: bool [37283,37287]"
    },
    {
      "src": "): ) [26148,26149]",
      "dest": "): ) [26147,26148]"
    },
    {
      "src": "uint256: uint256 [12087,12094]",
      "dest": "uint256: uint256 [11634,11641]"
    },
    {
      "src": "identifier: this [15032,15036]",
      "dest": "identifier: this [14605,14609]"
    },
    {
      "src": "public: public [26057,26063]",
      "dest": "public: public [26056,26062]"
    },
    {
      "src": "): ) [12705,12706]",
      "dest": "): ) [12252,12253]"
    },
    {
      "src": "function_body [34755,34853]",
      "dest": "function_body [34922,35020]"
    },
    {
      "src": "call_argument [26663,26670]",
      "dest": "call_argument [26662,26669]"
    },
    {
      "src": "identifier: size [13853,13857]",
      "dest": "identifier: size [13423,13427]"
    },
    {
      "src": "type_name [47764,47771]",
      "dest": "type_name [55333,55340]"
    },
    {
      "src": "parameter [24675,24688]",
      "dest": "parameter [24674,24687]"
    },
    {
      "src": "type_name [16598,16603]",
      "dest": "type_name [16171,16176]"
    },
    {
      "src": ".: . [48177,48178]",
      "dest": ".: . [55816,55817]"
    },
    {
      "src": "function_definition [26540,26709]",
      "dest": "function_definition [26539,26708]"
    },
    {
      "src": "expression_statement [31359,31399]",
      "dest": "expression_statement [31358,31398]"
    },
    {
      "src": "comment: // File: contracts/truefi/interface/ICurve.sol [35940,35986]",
      "dest": "comment: // pragma solidity 0.6.10; [19622,19648]"
    },
    {
      "src": "(: ( [36765,36766]",
      "dest": "(: ( [37192,37193]"
    },
    {
      "src": "identifier: mul [46535,46538]",
      "dest": "identifier: mul [51493,51496]"
    },
    {
      "src": "identifier: c [8471,8472]",
      "dest": "identifier: c [8018,8019]"
    },
    {
      "src": "type_name [11310,11317]",
      "dest": "type_name [10857,10864]"
    },
    {
      "src": "(: ( [52389,52390]",
      "dest": "(: ( [60310,60311]"
    },
    {
      "src": ",: , [32135,32136]",
      "dest": ",: , [32134,32135]"
    },
    {
      "src": "returns: returns [12078,12085]",
      "dest": "returns: returns [11625,11632]"
    },
    {
      "src": "identifier: amount [38238,38244]",
      "dest": "identifier: amount [38760,38766]"
    },
    {
      "src": "identifier: amount [38450,38456]",
      "dest": "identifier: amount [38972,38978]"
    },
    {
      "src": "call_argument [30035,30041]",
      "dest": "call_argument [30034,30040]"
    },
    {
      "src": "identifier: _curvePool [53063,53073]",
      "dest": "identifier: _curvePool [60984,60994]"
    },
    {
      "src": "call_argument [26142,26148]",
      "dest": "call_argument [26141,26147]"
    },
    {
      "src": "number_literal: 50 [22189,22191]",
      "dest": "number_literal: 50 [21802,21804]"
    },
    {
      "src": "primitive_type [36776,36783]",
      "dest": "primitive_type [37203,37210]"
    },
    {
      "src": "parameter [12730,12737]",
      "dest": "parameter [12277,12284]"
    },
    {
      "src": "primitive_type [6399,6406]",
      "dest": "primitive_type [5926,5933]"
    },
    {
      "src": "emit: emit [50534,50538]",
      "dest": "emit: emit [57628,57632]"
    },
    {
      "src": "(: ( [32051,32052]",
      "dest": "(: ( [32050,32051]"
    },
    {
      "src": "identifier: sender [46901,46907]",
      "dest": "identifier: sender [51859,51865]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [3105,3760]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * // importANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [2609,3267]"
    },
    {
      "src": "identifier: this [53700,53704]",
      "dest": "identifier: this [61621,61625]"
    },
    {
      "src": ",: , [30033,30034]",
      "dest": ",: , [30032,30033]"
    },
    {
      "src": "type_name [36808,36814]",
      "dest": "type_name [37235,37241]"
    },
    {
      "src": "\": \" [49233,49234]",
      "dest": "\": \" [57060,57061]"
    },
    {
      "src": "identifier: require [47036,47043]",
      "dest": "identifier: require [51994,52001]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [4263,4426]",
      "dest": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [3770,3933]"
    },
    {
      "src": ">=: >= [15046,15048]",
      "dest": ">=: >= [14619,14621]"
    },
    {
      "src": "type_name [23594,23601]",
      "dest": "type_name [23593,23600]"
    },
    {
      "src": "override: override [25715,25723]",
      "dest": "override: override [25714,25722]"
    },
    {
      "src": "call_argument [12118,12119]",
      "dest": "call_argument [11665,11666]"
    },
    {
      "src": "identifier: calcTokenAmount [52748,52763]",
      "dest": "identifier: calcTokenAmount [60669,60684]"
    },
    {
      "src": "parameter [19531,19546]",
      "dest": "parameter [19124,19139]"
    },
    {
      "src": "visibility [40354,40360]",
      "dest": "visibility [44474,44480]"
    },
    {
      "src": "string: string [24238,24244]",
      "dest": "string: string [24237,24243]"
    },
    {
      "src": "primitive_type [41165,41172]",
      "dest": "primitive_type [45337,45344]"
    },
    {
      "src": "expression_statement [34396,34415]",
      "dest": "expression_statement [34563,34582]"
    },
    {
      "src": "internal: internal [31999,32007]",
      "dest": "internal: internal [31998,32006]"
    },
    {
      "src": "call_argument [17830,17834]",
      "dest": "call_argument [17403,17407]"
    },
    {
      "src": "parameter [17957,17983]",
      "dest": "parameter [17530,17556]"
    },
    {
      "src": "uint256: uint256 [23702,23709]",
      "dest": "uint256: uint256 [23701,23708]"
    },
    {
      "src": "call_argument [7110,7143]",
      "dest": "call_argument [6637,6670]"
    },
    {
      "src": "function_definition [3014,3097]",
      "dest": "function_definition [2518,2601]"
    },
    {
      "src": "): ) [27415,27416]",
      "dest": "): ) [27414,27415]"
    },
    {
      "src": "function: function [8357,8365]",
      "dest": "function: function [7904,7912]"
    },
    {
      "src": "parameter [36929,36950]",
      "dest": "parameter [37356,37377]"
    },
    {
      "src": "identifier: addedValue [28123,28133]",
      "dest": "identifier: addedValue [28122,28132]"
    },
    {
      "src": ",: , [48570,48571]",
      "dest": ",: , [56317,56318]"
    },
    {
      "src": "function: function [46228,46236]",
      "dest": "function: function [51073,51081]"
    },
    {
      "src": "address: address [31227,31234]",
      "dest": "address: address [31226,31233]"
    },
    {
      "src": "(: ( [8414,8415]",
      "dest": "(: ( [7961,7962]"
    },
    {
      "src": "identifier: amount [30694,30700]",
      "dest": "identifier: amount [30693,30699]"
    },
    {
      "src": "identifier: _status [6509,6516]",
      "dest": "identifier: _status [6036,6043]"
    },
    {
      "src": "call_argument [30579,30585]",
      "dest": "call_argument [30578,30584]"
    },
    {
      "src": ",: , [31146,31147]",
      "dest": ",: , [31145,31146]"
    },
    {
      "src": "state_mutability [10702,10706]",
      "dest": "state_mutability [10249,10253]"
    },
    {
      "src": "function: function [36430,36438]",
      "dest": "function: function [36857,36865]"
    },
    {
      "src": "): ) [18052,18053]",
      "dest": "): ) [17625,17626]"
    },
    {
      "src": "identifier: _msgSender [26649,26659]",
      "dest": "identifier: _msgSender [26648,26658]"
    },
    {
      "src": "view: view [36116,36120]",
      "dest": "view: view [36543,36547]"
    },
    {
      "src": "): ) [36105,36106]",
      "dest": "): ) [36532,36533]"
    },
    {
      "src": "indexed: indexed [4692,4699]",
      "dest": "indexed: indexed [4199,4206]"
    },
    {
      "src": ",: , [31071,31072]",
      "dest": ",: , [31070,31071]"
    },
    {
      "src": "\": \" [27464,27465]",
      "dest": "\": \" [27463,27464]"
    },
    {
      "src": "address: address [38670,38677]",
      "dest": "address: address [39210,39217]"
    },
    {
      "src": "expression_statement [35325,35345]",
      "dest": "expression_statement [35492,35512]"
    },
    {
      "src": ",: , [17130,17131]",
      "dest": ",: , [16703,16704]"
    },
    {
      "src": "type_name [26331,26338]",
      "dest": "type_name [26330,26337]"
    },
    {
      "src": "expression_statement [15245,15324]",
      "dest": "expression_statement [14818,14897]"
    },
    {
      "src": "\": \" [29923,29924]",
      "dest": "\": \" [29922,29923]"
    },
    {
      "src": "}: } [6589,6590]",
      "dest": "}: } [6116,6117]"
    },
    {
      "src": "identifier: target [17822,17828]",
      "dest": "identifier: target [17395,17401]"
    },
    {
      "src": "member_expression [43200,43216]",
      "dest": "member_expression [47372,47388]"
    },
    {
      "src": "identifier: ICurve [36025,36031]",
      "dest": "identifier: ICurve [36452,36458]"
    },
    {
      "src": "call_argument [29719,29720]",
      "dest": "call_argument [29718,29719]"
    },
    {
      "src": "\": \" [10780,10781]",
      "dest": "\": \" [10327,10328]"
    },
    {
      "src": "uint256: uint256 [12730,12737]",
      "dest": "uint256: uint256 [12277,12284]"
    },
    {
      "src": "(: ( [41164,41165]",
      "dest": "(: ( [45336,45337]"
    },
    {
      "src": "call_expression [8463,8509]",
      "dest": "call_expression [8010,8056]"
    },
    {
      "src": ".: . [49306,49307]",
      "dest": ".: . [47569,47570]"
    },
    {
      "src": "parameter [30363,30377]",
      "dest": "parameter [30362,30376]"
    },
    {
      "src": "external: external [47811,47819]",
      "dest": "external: external [55380,55388]"
    },
    {
      "src": "{: { [13934,13935]",
      "dest": "{: { [13504,13505]"
    },
    {
      "src": "call_expression [49155,49235]",
      "dest": "call_expression [56981,57062]"
    },
    {
      "src": "expression_statement [43133,43190]",
      "dest": "expression_statement [47305,47362]"
    },
    {
      "src": "user_defined_type [37098,37104]",
      "dest": "user_defined_type [37525,37531]"
    },
    {
      "src": "event_paramater [4707,4730]",
      "dest": "event_paramater [4214,4237]"
    },
    {
      "src": "identifier: _decimals [23847,23856]",
      "dest": "identifier: _decimals [23846,23855]"
    },
    {
      "src": "comment: /**      * @dev join pool      * 1. Transfer TUSD from sender      * 2. Only lending pool should be allowed to call this      */ [38289,38421]",
      "dest": "comment: /**      * @dev join pool      * 1. Transfer TUSD from sender      * 2. Only lending pool should be allowed to call this      */ [38811,38943]"
    },
    {
      "src": "primitive_type [50736,50743]",
      "dest": "primitive_type [58650,58657]"
    },
    {
      "src": "call_argument [21131,21179]",
      "dest": "call_argument [20744,20792]"
    },
    {
      "src": "string_literal [10117,10152]",
      "dest": "string_literal [9664,9699]"
    },
    {
      "src": "string [48572,48621]",
      "dest": "string [56319,56369]"
    },
    {
      "src": "comment: // Look for revert reason and bubble it up if present [18327,18380]",
      "dest": "comment: // Look for revert reason and bubble it up if present [17900,17953]"
    },
    {
      "src": "call_expression [50176,50275]",
      "dest": "call_expression [57269,57369]"
    },
    {
      "src": "interface: interface [2115,2124]",
      "dest": "interface: interface [1619,1628]"
    },
    {
      "src": "assignment_expression [29936,29991]",
      "dest": "assignment_expression [29935,29990]"
    },
    {
      "src": "identifier: owner [26370,26375]",
      "dest": "identifier: owner [26369,26374]"
    },
    {
      "src": "identifier: require [49295,49302]",
      "dest": "identifier: require [47558,47565]"
    },
    {
      "src": "member_expression [50363,50381]",
      "dest": "member_expression [57457,57475]"
    },
    {
      "src": "return_type_definition [12721,12738]",
      "dest": "return_type_definition [12268,12285]"
    },
    {
      "src": "primitive_type [45353,45360]",
      "dest": "primitive_type [50146,50153]"
    },
    {
      "src": "identifier: mod [12038,12041]",
      "dest": "identifier: mod [11585,11588]"
    },
    {
      "src": "(: ( [32247,32248]",
      "dest": "(: ( [32246,32247]"
    },
    {
      "src": "type_name [16517,16524]",
      "dest": "type_name [16090,16097]"
    },
    {
      "src": "primitive_type [38442,38449]",
      "dest": "primitive_type [38964,38971]"
    },
    {
      "src": "visibility [23748,23755]",
      "dest": "visibility [23747,23754]"
    },
    {
      "src": "!=: != [35605,35607]",
      "dest": "!=: != [35772,35774]"
    },
    {
      "src": "call_argument [52056,52081]",
      "dest": "call_argument [59979,60004]"
    },
    {
      "src": "member_expression [43133,43155]",
      "dest": "member_expression [47305,47327]"
    },
    {
      "src": "(: ( [52939,52940]",
      "dest": "(: ( [60860,60861]"
    },
    {
      "src": "member_expression [43037,43055]",
      "dest": "member_expression [47209,47227]"
    },
    {
      "src": "=: = [43116,43117]",
      "dest": "=: = [47288,47289]"
    },
    {
      "src": "visibility [31999,32007]",
      "dest": "visibility [31998,32006]"
    },
    {
      "src": "identifier: spender [26284,26291]",
      "dest": "identifier: spender [26283,26290]"
    },
    {
      "src": "primitive_type [24471,24477]",
      "dest": "primitive_type [24470,24476]"
    },
    {
      "src": "primitive_type [23740,23747]",
      "dest": "primitive_type [23739,23746]"
    },
    {
      "src": "variable_declaration_statement [52857,52976]",
      "dest": "variable_declaration_statement [60778,60897]"
    },
    {
      "src": "if: if [45612,45614]",
      "dest": "if: if [50405,50407]"
    },
    {
      "src": ".: . [43218,43219]",
      "dest": ".: . [47390,47391]"
    },
    {
      "src": "identifier: remove_liquidity_one_coin [48762,48787]",
      "dest": "identifier: remove_liquidity_one_coin [56577,56602]"
    },
    {
      "src": "identifier: nonReentrant [49131,49143]",
      "dest": "identifier: nonReentrant [56946,56958]"
    },
    {
      "src": "}: } [50286,50287]",
      "dest": "}: } [57380,57381]"
    },
    {
      "src": "type_name [11321,11327]",
      "dest": "type_name [10868,10874]"
    },
    {
      "src": "return_statement [53420,53482]",
      "dest": "return_statement [61341,61403]"
    },
    {
      "src": "identifier: roughCurveTokenAmount [50117,50138]",
      "dest": "identifier: roughCurveTokenAmount [58440,58461]"
    },
    {
      "src": "call_argument [45773,45783]",
      "dest": "call_argument [50566,50576]"
    },
    {
      "src": "{: { [53649,53650]",
      "dest": "{: { [61570,61571]"
    },
    {
      "src": "{: { [33427,33428]",
      "dest": "{: { [33426,33427]"
    },
    {
      "src": "{: { [34755,34756]",
      "dest": "{: { [34922,34923]"
    },
    {
      "src": "\": \" [7142,7143]",
      "dest": "\": \" [6669,6670]"
    },
    {
      "src": "identifier: previousOwner [34151,34164]",
      "dest": "identifier: previousOwner [34318,34331]"
    },
    {
      "src": ",: , [12764,12765]",
      "dest": ",: , [12311,12312]"
    },
    {
      "src": "uint256: uint256 [51820,51827]",
      "dest": "uint256: uint256 [59743,59750]"
    },
    {
      "src": "identifier: spender [28828,28835]",
      "dest": "identifier: spender [28827,28834]"
    },
    {
      "src": "type_name [19531,19546]",
      "dest": "type_name [19124,19139]"
    },
    {
      "src": "call_expression [17799,17856]",
      "dest": "call_expression [17372,17429]"
    },
    {
      "src": "call_argument [50845,50849]",
      "dest": "call_argument [58770,58774]"
    },
    {
      "src": "(: ( [46802,46803]",
      "dest": "(: ( [51760,51761]"
    },
    {
      "src": "member_expression [53667,53710]",
      "dest": "member_expression [61588,61631]"
    },
    {
      "src": "(: ( [47315,47316]",
      "dest": "(: ( [52273,52274]"
    },
    {
      "src": "return_type_definition [2406,2423]",
      "dest": "return_type_definition [1910,1927]"
    },
    {
      "src": ",: , [32054,32055]",
      "dest": ",: , [32053,32054]"
    },
    {
      "src": "(: ( [45438,45439]",
      "dest": "(: ( [50231,50232]"
    },
    {
      "src": "identifier: require [21074,21081]",
      "dest": "identifier: require [20687,20694]"
    },
    {
      "src": "uint256: uint256 [10716,10723]",
      "dest": "uint256: uint256 [10263,10270]"
    },
    {
      "src": "}: } [16264,16265]",
      "dest": "}: } [15837,15838]"
    },
    {
      "src": "identifier: exit [46237,46241]",
      "dest": "identifier: exit [51082,51086]"
    },
    {
      "src": ".: . [45699,45700]",
      "dest": ".: . [50492,50493]"
    },
    {
      "src": "uint256: uint256 [42027,42034]",
      "dest": "uint256: uint256 [46199,46206]"
    },
    {
      "src": "primitive_type [26090,26094]",
      "dest": "primitive_type [26089,26093]"
    },
    {
      "src": "member_expression [46528,46575]",
      "dest": "member_expression [51486,51533]"
    },
    {
      "src": "(: ( [28811,28812]",
      "dest": "(: ( [28810,28811]"
    },
    {
      "src": "): ) [13612,13613]",
      "dest": "): ) [13182,13183]"
    },
    {
      "src": "[: [ [53022,53023]",
      "dest": "[: [ [60943,60944]"
    },
    {
      "src": "identifier: data [16218,16222]",
      "dest": "identifier: data [15791,15795]"
    },
    {
      "src": "assignment_expression [42998,43016]",
      "dest": "assignment_expression [47170,47188]"
    },
    {
      "src": "identifier: sender [27350,27356]",
      "dest": "identifier: sender [27349,27355]"
    },
    {
      "src": "call_argument [52390,52434]",
      "dest": "call_argument [60311,60355]"
    },
    {
      "src": "identifier: Context [19463,19470]",
      "dest": "identifier: Context [19056,19063]"
    },
    {
      "src": "function_body [9355,9452]",
      "dest": "function_body [8902,8999]"
    },
    {
      "src": "=: = [43006,43007]",
      "dest": "=: = [47178,47179]"
    },
    {
      "src": ",: , [17627,17628]",
      "dest": ",: , [17200,17201]"
    },
    {
      "src": ",: , [11308,11309]",
      "dest": ",: , [10855,10856]"
    },
    {
      "src": "visibility [40295,40301]",
      "dest": "visibility [44415,44421]"
    },
    {
      "src": "state_mutability [37149,37153]",
      "dest": "state_mutability [37576,37580]"
    },
    {
      "src": "(: ( [35923,35924]",
      "dest": "(: ( [36185,36186]"
    },
    {
      "src": ".: . [30574,30575]",
      "dest": ".: . [30573,30574]"
    },
    {
      "src": "parameter [3800,3814]",
      "dest": "parameter [3307,3321]"
    },
    {
      "src": "identifier: a [12797,12798]",
      "dest": "identifier: a [12344,12345]"
    },
    {
      "src": "identifier: coins [37123,37128]",
      "dest": "identifier: coins [37550,37555]"
    },
    {
      "src": "primitive_type [46386,46393]",
      "dest": "primitive_type [51344,51351]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [26401,26534]",
      "dest": "comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [26400,26533]"
    },
    {
      "src": "function: function [12644,12652]",
      "dest": "function: function [12191,12199]"
    },
    {
      "src": "{: { [44671,44672]",
      "dest": "{: { [49290,49291]"
    },
    {
      "src": "(: ( [46990,46991]",
      "dest": "(: ( [51948,51949]"
    },
    {
      "src": "returns: returns [36296,36303]",
      "dest": "returns: returns [36723,36730]"
    },
    {
      "src": "uint256: uint256 [31977,31984]",
      "dest": "uint256: uint256 [31976,31983]"
    },
    {
      "src": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [18935,19443]",
      "dest": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [18528,19036]"
    },
    {
      "src": "): ) [28873,28874]",
      "dest": "): ) [28872,28873]"
    },
    {
      "src": "identifier: msg [46803,46806]",
      "dest": "identifier: msg [51761,51764]"
    },
    {
      "src": "): ) [27507,27508]",
      "dest": "): ) [27506,27507]"
    },
    {
      "src": "emit: emit [48224,48228]",
      "dest": "emit: emit [55971,55975]"
    },
    {
      "src": "type_name [8435,8442]",
      "dest": "type_name [7982,7989]"
    },
    {
      "src": "address: address [34166,34173]",
      "dest": "address: address [34333,34340]"
    },
    {
      "src": "\": \" [17740,17741]",
      "dest": "\": \" [17313,17314]"
    },
    {
      "src": "type_name [31073,31080]",
      "dest": "type_name [31072,31079]"
    },
    {
      "src": "primitive_type [39083,39090]",
      "dest": "primitive_type [39641,39648]"
    },
    {
      "src": "\": \" [46371,46372]",
      "dest": "\": \" [51329,51330]"
    },
    {
      "src": "assignment_expression [45650,45716]",
      "dest": "assignment_expression [50443,50509]"
    },
    {
      "src": "type_name [21193,21197]",
      "dest": "type_name [20806,20810]"
    },
    {
      "src": "override_specifier [50769,50777]",
      "dest": "override_specifier [58683,58691]"
    },
    {
      "src": "uint256: uint256 [38698,38705]",
      "dest": "uint256: uint256 [39238,39245]"
    },
    {
      "src": "call_argument [18046,18052]",
      "dest": "call_argument [17619,17625]"
    },
    {
      "src": "primitive_type [39041,39048]",
      "dest": "primitive_type [39599,39606]"
    },
    {
      "src": "call_expression [46797,46822]",
      "dest": "call_expression [51755,51780]"
    },
    {
      "src": "uint256: uint256 [2415,2422]",
      "dest": "uint256: uint256 [1919,1926]"
    },
    {
      "src": "parameter [37658,37664]",
      "dest": "parameter [38180,38186]"
    },
    {
      "src": "(: ( [16166,16167]",
      "dest": "(: ( [15739,15740]"
    },
    {
      "src": "call_argument [46803,46813]",
      "dest": "call_argument [51761,51771]"
    },
    {
      "src": "identifier: Ownable [42850,42857]",
      "dest": "identifier: Ownable [47022,47029]"
    },
    {
      "src": "function: function [31899,31907]",
      "dest": "function: function [31898,31906]"
    },
    {
      "src": "function_body [53409,53489]",
      "dest": "function_body [61330,61410]"
    },
    {
      "src": "(: ( [30414,30415]",
      "dest": "(: ( [30413,30414]"
    },
    {
      "src": "identifier: curveLiquidityAmountToTransfer [47356,47386]",
      "dest": "identifier: curveLiquidityAmountToTransfer [52314,52344]"
    },
    {
      "src": "identifier: transferFrom [4167,4179]",
      "dest": "identifier: transferFrom [3674,3686]"
    },
    {
      "src": "identifier: a [8910,8911]",
      "dest": "identifier: a [8457,8458]"
    },
    {
      "src": ",: , [23518,23519]",
      "dest": ",: , [23517,23518]"
    },
    {
      "src": "call_expression [29854,29925]",
      "dest": "call_expression [29853,29924]"
    },
    {
      "src": "type_name [42027,42034]",
      "dest": "type_name [46199,46206]"
    },
    {
      "src": "visibility [31089,31097]",
      "dest": "visibility [31088,31096]"
    },
    {
      "src": "contract_body [36032,36211]",
      "dest": "contract_body [36459,36638]"
    },
    {
      "src": "function: function [24434,24442]",
      "dest": "function: function [24433,24441]"
    },
    {
      "src": "identifier: Flushed [41352,41359]",
      "dest": "identifier: Flushed [45524,45531]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [1957,2012]",
      "dest": "comment: // Dependency file: @openzeppelin/contracts/utils/ReentrancyGuard.sol [4263,4332]"
    },
    {
      "src": "): ) [17145,17146]",
      "dest": "): ) [16718,16719]"
    },
    {
      "src": "identifier: c [8529,8530]",
      "dest": "identifier: c [8076,8077]"
    },
    {
      "src": "\": \" [48572,48573]",
      "dest": "\": \" [56319,56320]"
    },
    {
      "src": ",: , [16222,16223]",
      "dest": ",: , [15795,15796]"
    },
    {
      "src": "true [53110,53114]",
      "dest": "true [61031,61035]"
    },
    {
      "src": "type_name [48462,48469]",
      "dest": "type_name [56209,56216]"
    },
    {
      "src": "emit_statement [50534,50579]",
      "dest": "emit_statement [57628,57673]"
    },
    {
      "src": "block_statement [47021,47118]",
      "dest": "block_statement [51979,52076]"
    },
    {
      "src": "\": \" [31346,31347]",
      "dest": "\": \" [31345,31346]"
    },
    {
      "src": "identifier: Ownable [39794,39801]",
      "dest": "identifier: Ownable [43914,43921]"
    },
    {
      "src": ".: . [46900,46901]",
      "dest": ".: . [51858,51859]"
    },
    {
      "src": "primitive_type [47788,47795]",
      "dest": "primitive_type [55357,55364]"
    },
    {
      "src": "call_argument [15253,15260]",
      "dest": "call_argument [14826,14833]"
    },
    {
      "src": "identifier: amount [15049,15055]",
      "dest": "identifier: amount [14622,14628]"
    },
    {
      "src": "}: } [35750,35751]",
      "dest": "}: } [35917,35918]"
    },
    {
      "src": "uint256: uint256 [38442,38449]",
      "dest": "uint256: uint256 [38964,38971]"
    },
    {
      "src": "identifier: _curvePool [48751,48761]",
      "dest": "identifier: _curvePool [56566,56576]"
    },
    {
      "src": "uint8: uint8 [40555,40560]",
      "dest": "uint8: uint8 [44727,44732]"
    },
    {
      "src": "identifier: _balances [30618,30627]",
      "dest": "identifier: _balances [30617,30626]"
    },
    {
      "src": "call_expression [50797,50867]",
      "dest": "call_expression [58722,58792]"
    },
    {
      "src": "(: ( [17218,17219]",
      "dest": "(: ( [16791,16792]"
    },
    {
      "src": "virtual: virtual [35559,35566]",
      "dest": "virtual: virtual [35726,35733]"
    },
    {
      "src": "type_name [45398,45405]",
      "dest": "type_name [50191,50198]"
    },
    {
      "src": "member_expression [29959,29983]",
      "dest": "member_expression [29958,29982]"
    },
    {
      "src": "}: } [34852,34853]",
      "dest": "}: } [35019,35020]"
    },
    {
      "src": "identifier: _burn [31050,31055]",
      "dest": "identifier: _burn [31049,31054]"
    },
    {
      "src": "): ) [43580,43581]",
      "dest": "): ) [47976,47977]"
    },
    {
      "src": "call_expression [28862,28874]",
      "dest": "call_expression [28861,28873]"
    },
    {
      "src": "member_expression [43678,43699]",
      "dest": "member_expression [48074,48095]"
    },
    {
      "src": "(: ( [49639,49640]",
      "dest": "(: ( [57250,57251]"
    },
    {
      "src": "comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [19674,19792]",
      "dest": "comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [19267,19385]"
    },
    {
      "src": "identifier: c [9443,9444]",
      "dest": "identifier: c [8990,8991]"
    },
    {
      "src": "type_name [36263,36270]",
      "dest": "type_name [36690,36697]"
    },
    {
      "src": "]: ] [22191,22192]",
      "dest": "]: ] [21804,21805]"
    },
    {
      "src": "parameter [4196,4213]",
      "dest": "parameter [3703,3720]"
    },
    {
      "src": "): ) [45929,45930]",
      "dest": "): ) [50774,50775]"
    },
    {
      "src": "address: address [29506,29513]",
      "dest": "address: address [29505,29512]"
    },
    {
      "src": "identifier: sender [50829,50835]",
      "dest": "identifier: sender [58754,58760]"
    },
    {
      "src": "): ) [35714,35715]",
      "dest": "): ) [35881,35882]"
    },
    {
      "src": "yul_evm_builtin [13944,13955]",
      "dest": "yul_evm_builtin [13514,13525]"
    },
    {
      "src": "identifier: amountWithoutFee [50503,50519]",
      "dest": "identifier: amountWithoutFee [57597,57613]"
    },
    {
      "src": "identifier: spender [26377,26384]",
      "dest": "identifier: spender [26376,26383]"
    },
    {
      "src": "parameter [42596,42618]",
      "dest": "parameter [46768,46790]"
    },
    {
      "src": "identifier: joiningFee [44919,44929]",
      "dest": "identifier: joiningFee [49621,49631]"
    },
    {
      "src": "): ) [50866,50867]",
      "dest": "): ) [58791,58792]"
    },
    {
      "src": "uint256: uint256 [33388,33395]",
      "dest": "uint256: uint256 [33387,33394]"
    },
    {
      "src": "{: { [45387,45388]",
      "dest": "{: { [50180,50181]"
    },
    {
      "src": "(: ( [25529,25530]",
      "dest": "(: ( [25528,25529]"
    },
    {
      "src": "uint256: uint256 [36397,36404]",
      "dest": "uint256: uint256 [36824,36831]"
    },
    {
      "src": "visibility [34579,34585]",
      "dest": "visibility [34746,34752]"
    },
    {
      "src": "}: } [43475,43476]",
      "dest": "}: } [47871,47872]"
    },
    {
      "src": "identifier: token [47327,47332]",
      "dest": "identifier: token [52285,52290]"
    },
    {
      "src": ",: , [48077,48078]",
      "dest": ",: , [55717,55718]"
    },
    {
      "src": "member_expression [45956,45966]",
      "dest": "member_expression [50801,50811]"
    },
    {
      "src": "expression_statement [47841,47930]",
      "dest": "expression_statement [55410,55500]"
    },
    {
      "src": "function: function [16092,16100]",
      "dest": "function: function [15665,15673]"
    },
    {
      "src": "uint256: uint256 [44495,44502]",
      "dest": "uint256: uint256 [49114,49121]"
    },
    {
      "src": "uint256: uint256 [28712,28719]",
      "dest": "uint256: uint256 [28711,28718]"
    },
    {
      "src": ".: . [44137,44138]",
      "dest": ".: . [48285,48286]"
    },
    {
      "src": "(: ( [10104,10105]",
      "dest": "(: ( [9651,9652]"
    },
    {
      "src": "function: function [9260,9268]",
      "dest": "function: function [8807,8815]"
    },
    {
      "src": "call_expression [48167,48185]",
      "dest": "call_expression [55806,55824]"
    },
    {
      "src": "internal: internal [8392,8400]",
      "dest": "internal: internal [7939,7947]"
    },
    {
      "src": "call_argument [45785,45797]",
      "dest": "call_argument [50578,50590]"
    },
    {
      "src": "call_expression [27404,27416]",
      "dest": "call_expression [27403,27415]"
    },
    {
      "src": "function_definition [52208,52502]",
      "dest": "function_definition [60129,60423]"
    },
    {
      "src": "identifier: curveLiquidityAmountToTransfer [47262,47292]",
      "dest": "identifier: curveLiquidityAmountToTransfer [52220,52250]"
    },
    {
      "src": "function_definition [17872,18851]",
      "dest": "function_definition [17445,18424]"
    },
    {
      "src": "uint256: uint256 [46493,46500]",
      "dest": "uint256: uint256 [51451,51458]"
    },
    {
      "src": "function_body [42781,43268]",
      "dest": "function_body [46953,47440]"
    },
    {
      "src": "variable_declaration_tuple [15180,15196]",
      "dest": "variable_declaration_tuple [14753,14769]"
    },
    {
      "src": "call_argument [51955,51963]",
      "dest": "call_argument [59878,59886]"
    },
    {
      "src": "number_literal [52074,52081]",
      "dest": "number_literal [59997,60004]"
    },
    {
      "src": "identifier: _totalSupply [46576,46588]",
      "dest": "identifier: _totalSupply [51534,51546]"
    },
    {
      "src": "number_literal: 10000 [45439,45444]",
      "dest": "number_literal: 10000 [50232,50237]"
    },
    {
      "src": "primitive_type [45908,45915]",
      "dest": "primitive_type [50753,50760]"
    },
    {
      "src": "uint256: uint256 [13845,13852]",
      "dest": "uint256: uint256 [13415,13422]"
    },
    {
      "src": "number_literal: 0 [53029,53030]",
      "dest": "number_literal: 0 [60950,60951]"
    },
    {
      "src": "string_literal [49842,49904]",
      "dest": "string_literal [57977,58048]"
    },
    {
      "src": "uint256: uint256 [10671,10678]",
      "dest": "uint256: uint256 [10218,10225]"
    },
    {
      "src": "member_expression [48147,48166]",
      "dest": "member_expression [55929,55948]"
    },
    {
      "src": "identifier: account [2383,2390]",
      "dest": "identifier: account [1887,1894]"
    },
    {
      "src": "type_name [23804,23810]",
      "dest": "type_name [23803,23809]"
    },
    {
      "src": "expression_statement [34844,34846]",
      "dest": "expression_statement [35011,35013]"
    },
    {
      "src": "primitive_type [44876,44883]",
      "dest": "primitive_type [49495,49502]"
    },
    {
      "src": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [2041,2113]",
      "dest": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [1545,1617]"
    },
    {
      "src": "call_expression [12750,12779]",
      "dest": "call_expression [12297,12326]"
    },
    {
      "src": "returns: returns [3825,3832]",
      "dest": "returns: returns [3332,3339]"
    },
    {
      "src": "identifier: sender [47072,47078]",
      "dest": "identifier: sender [52030,52036]"
    },
    {
      "src": "type_name [23562,23569]",
      "dest": "type_name [23561,23568]"
    },
    {
      "src": "identifier: amount [31081,31087]",
      "dest": "identifier: amount [31080,31086]"
    },
    {
      "src": "yul_evm_builtin [18655,18660]",
      "dest": "yul_evm_builtin [18228,18233]"
    },
    {
      "src": ",: , [43175,43176]",
      "dest": ",: , [47347,47348]"
    },
    {
      "src": "function_body [46289,47451]",
      "dest": "function_body [51134,52409]"
    },
    {
      "src": "identifier: _beforeTokenTransfer [29774,29794]",
      "dest": "identifier: _beforeTokenTransfer [29773,29793]"
    },
    {
      "src": "): ) [50398,50399]",
      "dest": "): ) [57492,57493]"
    },
    {
      "src": "state_variable_declaration [40521,40549]",
      "dest": "state_variable_declaration [44693,44721]"
    },
    {
      "src": "member_expression [49303,49313]",
      "dest": "member_expression [47566,47576]"
    },
    {
      "src": "identifier: payer [42020,42025]",
      "dest": "identifier: payer [46192,46197]"
    },
    {
      "src": "state_mutability [36582,36586]",
      "dest": "state_mutability [37009,37013]"
    },
    {
      "src": "(: ( [36357,36358]",
      "dest": "(: ( [36784,36785]"
    },
    {
      "src": "identifier: _totalSupply [46917,46929]",
      "dest": "identifier: _totalSupply [51875,51887]"
    },
    {
      "src": "expression_statement [50789,50869]",
      "dest": "expression_statement [58714,58794]"
    },
    {
      "src": "type_name [36397,36404]",
      "dest": "type_name [36824,36831]"
    },
    {
      "src": "type_name [9724,9731]",
      "dest": "type_name [9271,9278]"
    },
    {
      "src": "(: ( [17715,17716]",
      "dest": "(: ( [17288,17289]"
    },
    {
      "src": "parameter [26041,26055]",
      "dest": "parameter [26040,26054]"
    },
    {
      "src": "call_argument [17708,17738]",
      "dest": "call_argument [17281,17311]"
    },
    {
      "src": "identifier: minMintAmount [47796,47809]",
      "dest": "identifier: minMintAmount [55365,55378]"
    },
    {
      "src": "is: is [37561,37563]",
      "dest": "is: is [38083,38085]"
    },
    {
      "src": "return: return [26160,26166]",
      "dest": "return: return [26159,26165]"
    },
    {
      "src": "memory: memory [11328,11334]",
      "dest": "memory: memory [10875,10881]"
    },
    {
      "src": "primitive_type [12042,12049]",
      "dest": "primitive_type [11589,11596]"
    },
    {
      "src": "): ) [43056,43057]",
      "dest": "): ) [47228,47229]"
    },
    {
      "src": "(: ( [46575,46576]",
      "dest": "(: ( [51533,51534]"
    },
    {
      "src": "identifier: IERC20 [37564,37570]",
      "dest": "identifier: IERC20 [38086,38092]"
    },
    {
      "src": "identifier: nonReentrant [46276,46288]",
      "dest": "identifier: nonReentrant [51121,51133]"
    },
    {
      "src": "visibility [33410,33418]",
      "dest": "visibility [33409,33417]"
    },
    {
      "src": "string: string [23804,23810]",
      "dest": "string: string [23803,23809]"
    },
    {
      "src": "call_expression [50789,50868]",
      "dest": "call_expression [58714,58793]"
    },
    {
      "src": "(: ( [7088,7089]",
      "dest": "(: ( [6615,6616]"
    },
    {
      "src": "user_defined_type [39770,39775]",
      "dest": "user_defined_type [43890,43895]"
    },
    {
      "src": "parameter [16517,16531]",
      "dest": "parameter [16090,16104]"
    },
    {
      "src": "): ) [30647,30648]",
      "dest": "): ) [30646,30647]"
    },
    {
      "src": "abstract: abstract [19445,19453]",
      "dest": "abstract: abstract [19038,19046]"
    },
    {
      "src": "parameter [36952,36960]",
      "dest": "parameter [37379,37387]"
    },
    {
      "src": "member_expression [44104,44141]",
      "dest": "member_expression [48270,48289]"
    },
    {
      "src": "(: ( [36337,36338]",
      "dest": "(: ( [36764,36765]"
    },
    {
      "src": "call_argument [46721,46736]",
      "dest": "call_argument [51679,51694]"
    },
    {
      "src": "identifier: value [18215,18220]",
      "dest": "identifier: value [17788,17793]"
    },
    {
      "src": "function_definition [17548,17864]",
      "dest": "function_definition [17121,17437]"
    },
    {
      "src": "memory: memory [24225,24231]",
      "dest": "memory: memory [24224,24230]"
    },
    {
      "src": "uint256: uint256 [4215,4222]",
      "dest": "uint256: uint256 [3722,3729]"
    },
    {
      "src": "}: } [24516,24517]",
      "dest": "}: } [24515,24516]"
    },
    {
      "src": "number_literal: 0 [35616,35617]",
      "dest": "number_literal: 0 [35783,35784]"
    },
    {
      "src": "=: = [30560,30561]",
      "dest": "=: = [30559,30560]"
    },
    {
      "src": "address: address [49317,49324]",
      "dest": "address: address [47580,47587]"
    },
    {
      "src": "address: address [23691,23698]",
      "dest": "address: address [23690,23697]"
    },
    {
      "src": "expression_statement [42998,43017]",
      "dest": "expression_statement [47170,47189]"
    },
    {
      "src": "(: ( [11298,11299]",
      "dest": "(: ( [10845,10846]"
    },
    {
      "src": "type_name [45353,45360]",
      "dest": "type_name [50146,50153]"
    },
    {
      "src": "view: view [34586,34590]",
      "dest": "view: view [34753,34757]"
    },
    {
      "src": "view: view [53626,53630]",
      "dest": "view: view [61547,61551]"
    },
    {
      "src": "): ) [47105,47106]",
      "dest": "): ) [52063,52064]"
    },
    {
      "src": "call_expression [16630,16683]",
      "dest": "call_expression [16203,16256]"
    },
    {
      "src": "member_expression [51910,51923]",
      "dest": "member_expression [59833,59846]"
    },
    {
      "src": "call_argument [28123,28133]",
      "dest": "call_argument [28122,28132]"
    },
    {
      "src": "identifier: neededAmount [44707,44719]",
      "dest": "identifier: neededAmount [49326,49338]"
    },
    {
      "src": "): ) [6538,6539]",
      "dest": "): ) [6065,6066]"
    },
    {
      "src": "function: function [38884,38892]",
      "dest": "function: function [39442,39450]"
    },
    {
      "src": ".: . [46534,46535]",
      "dest": ".: . [51492,51493]"
    },
    {
      "src": ",: , [30516,30517]",
      "dest": ",: , [30515,30516]"
    },
    {
      "src": "\": \" [8916,8917]",
      "dest": "\": \" [8463,8464]"
    },
    {
      "src": "yul_path [22051,22055]",
      "dest": "yul_path [21664,21668]"
    },
    {
      "src": "identifier: amount [52355,52361]",
      "dest": "identifier: amount [60276,60282]"
    },
    {
      "src": "function: function [47749,47757]",
      "dest": "function: function [55318,55326]"
    },
    {
      "src": "type_name [16130,16135]",
      "dest": "type_name [15703,15708]"
    },
    {
      "src": "call_expression [44572,44590]",
      "dest": "call_expression [49191,49209]"
    },
    {
      "src": "string [28906,28945]",
      "dest": "string [28905,28944]"
    },
    {
      "src": "override: override [27305,27313]",
      "dest": "override: override [27304,27312]"
    },
    {
      "src": "primitive_type [28761,28765]",
      "dest": "primitive_type [28760,28764]"
    },
    {
      "src": "}: } [24722,24723]",
      "dest": "}: } [24721,24722]"
    },
    {
      "src": "(: ( [38229,38230]",
      "dest": "(: ( [38751,38752]"
    },
    {
      "src": "identifier: calc_token_amount [36048,36065]",
      "dest": "identifier: calc_token_amount [36475,36492]"
    },
    {
      "src": "override_specifier [25539,25547]",
      "dest": "override_specifier [25538,25546]"
    },
    {
      "src": "returns: returns [2715,2722]",
      "dest": "returns: returns [2219,2226]"
    },
    {
      "src": "variable_declaration_statement [11431,11449]",
      "dest": "variable_declaration_statement [10978,10996]"
    },
    {
      "src": ".: . [44719,44720]",
      "dest": ".: . [49338,49339]"
    },
    {
      "src": "parameter [32635,32650]",
      "dest": "parameter [32634,32649]"
    },
    {
      "src": "identifier: token [45140,45145]",
      "dest": "identifier: token [49882,49887]"
    },
    {
      "src": "parameter [31073,31087]",
      "dest": "parameter [31072,31086]"
    },
    {
      "src": "parameter [36130,36137]",
      "dest": "parameter [36557,36564]"
    },
    {
      "src": "identifier: spender [28876,28883]",
      "dest": "identifier: spender [28875,28882]"
    },
    {
      "src": "contract_body [36503,36607]",
      "dest": "contract_body [36930,37034]"
    },
    {
      "src": "call_expression [46300,46373]",
      "dest": "call_expression [51257,51331]"
    },
    {
      "src": "): ) [25569,25570]",
      "dest": "): ) [25568,25569]"
    },
    {
      "src": "identifier: amountIn [51955,51963]",
      "dest": "identifier: amountIn [59878,59886]"
    },
    {
      "src": ",: , [32253,32254]",
      "dest": ",: , [32252,32253]"
    },
    {
      "src": "type_name [23777,23783]",
      "dest": "type_name [23776,23782]"
    },
    {
      "src": "identifier: initializer [42769,42780]",
      "dest": "identifier: initializer [46941,46952]"
    },
    {
      "src": "primitive_type [34135,34142]",
      "dest": "primitive_type [34302,34309]"
    },
    {
      "src": "call_argument [35295,35301]",
      "dest": "call_argument [35462,35468]"
    },
    {
      "src": "type_name [45508,45515]",
      "dest": "type_name [50301,50308]"
    },
    {
      "src": "}: } [34640,34641]",
      "dest": "}: } [34807,34808]"
    },
    {
      "src": ",: , [26129,26130]",
      "dest": ",: , [26128,26129]"
    },
    {
      "src": ".: . [45418,45419]",
      "dest": ".: . [50211,50212]"
    },
    {
      "src": "public: public [40117,40123]",
      "dest": "public: public [44237,44243]"
    },
    {
      "src": "uint256: uint256 [36199,36206]",
      "dest": "uint256: uint256 [36626,36633]"
    },
    {
      "src": "primitive_type [48479,48486]",
      "dest": "primitive_type [56226,56233]"
    },
    {
      "src": "returns: returns [28026,28033]",
      "dest": "returns: returns [28025,28032]"
    },
    {
      "src": "uint256: uint256 [3800,3807]",
      "dest": "uint256: uint256 [3307,3314]"
    },
    {
      "src": "call_argument [45843,45846]",
      "dest": "call_argument [50636,50639]"
    },
    {
      "src": "call_argument [49842,49904]",
      "dest": "call_argument [57977,58048]"
    },
    {
      "src": "array_access [29834,29851]",
      "dest": "array_access [29833,29850]"
    },
    {
      "src": "type_name [34166,34173]",
      "dest": "type_name [34333,34340]"
    },
    {
      "src": "parameter [26557,26572]",
      "dest": "parameter [26556,26571]"
    },
    {
      "src": "function_body [11381,11564]",
      "dest": "function_body [10928,11111]"
    },
    {
      "src": "type_cast_expression [44601,44614]",
      "dest": "type_cast_expression [49220,49233]"
    },
    {
      "src": ",: , [28813,28814]",
      "dest": ",: , [28812,28813]"
    },
    {
      "src": "private: private [6455,6462]",
      "dest": "private: private [5982,5989]"
    },
    {
      "src": ",: , [53030,53031]",
      "dest": ",: , [60951,60952]"
    },
    {
      "src": "call_argument [34463,34472]",
      "dest": "call_argument [34630,34639]"
    },
    {
      "src": "primitive_type [31073,31080]",
      "dest": "primitive_type [31072,31079]"
    },
    {
      "src": "(: ( [35341,35342]",
      "dest": "(: ( [35508,35509]"
    },
    {
      "src": ",: , [46339,46340]",
      "dest": ",: , [51296,51297]"
    },
    {
      "src": "): ) [52786,52787]",
      "dest": "): ) [60707,60708]"
    },
    {
      "src": "): ) [27449,27450]",
      "dest": "): ) [27448,27449]"
    },
    {
      "src": "comment: /**      * @dev Modifier to use in the initializer function of a contract.      */ [20950,21034]",
      "dest": "comment: /**      * @dev Modifier to use in the initializer function of a contract.      */ [20563,20647]"
    },
    {
      "src": "uint256: uint256 [38230,38237]",
      "dest": "uint256: uint256 [38752,38759]"
    },
    {
      "src": "inline_array_expression [47977,48002]",
      "dest": "inline_array_expression [55547,55572]"
    },
    {
      "src": "type_name [38442,38449]",
      "dest": "type_name [38964,38971]"
    },
    {
      "src": "calldata: calldata [38996,39004]",
      "dest": "calldata: calldata [39554,39562]"
    },
    {
      "src": "): ) [44613,44614]",
      "dest": "): ) [49232,49233]"
    },
    {
      "src": "primitive_type [43603,43610]",
      "dest": "primitive_type [47999,48006]"
    },
    {
      "src": "event_paramater [4447,4467]",
      "dest": "event_paramater [3954,3974]"
    },
    {
      "src": "comment: /**      * @dev Claim fees from the pool      * @param beneficiary account to send funds to      */ [52100,52202]",
      "dest": "comment: /**      * @dev Claim fees from the pool      * @param beneficiary account to send funds to      */ [60021,60123]"
    },
    {
      "src": "identifier: spender [28110,28117]",
      "dest": "identifier: spender [28109,28116]"
    },
    {
      "src": "): ) [36280,36281]",
      "dest": "): ) [36707,36708]"
    },
    {
      "src": "number_literal: 0 [47978,47979]",
      "dest": "number_literal: 0 [55548,55549]"
    },
    {
      "src": "(: ( [18704,18705]",
      "dest": "(: ( [18277,18278]"
    },
    {
      "src": "call_argument [8910,8911]",
      "dest": "call_argument [8457,8458]"
    },
    {
      "src": ".: . [45838,45839]",
      "dest": ".: . [50631,50632]"
    },
    {
      "src": ",: , [4487,4488]",
      "dest": ",: , [3994,3995]"
    },
    {
      "src": "identifier: msg [50825,50828]",
      "dest": "identifier: msg [58750,58753]"
    },
    {
      "src": "address: address [33344,33351]",
      "dest": "address: address [33343,33350]"
    },
    {
      "src": "type_name [17097,17104]",
      "dest": "type_name [16670,16677]"
    },
    {
      "src": "memory: memory [12686,12692]",
      "dest": "memory: memory [12233,12239]"
    },
    {
      "src": ",: , [10680,10681]",
      "dest": ",: , [10227,10228]"
    },
    {
      "src": "{: { [31106,31107]",
      "dest": "{: { [31105,31106]"
    },
    {
      "src": "function_body [12096,12159]",
      "dest": "function_body [11643,11706]"
    },
    {
      "src": "(: ( [51933,51934]",
      "dest": "(: ( [59856,59857]"
    },
    {
      "src": "user_defined_type [39777,39792]",
      "dest": "user_defined_type [43897,43912]"
    },
    {
      "src": "identifier: isTopLevelCall [21198,21212]",
      "dest": "identifier: isTopLevelCall [20811,20825]"
    },
    {
      "src": "): ) [31450,31451]",
      "dest": "): ) [31449,31450]"
    },
    {
      "src": "assignment_expression [30547,30586]",
      "dest": "assignment_expression [30546,30585]"
    },
    {
      "src": "call_argument [52899,52903]",
      "dest": "call_argument [60820,60824]"
    },
    {
      "src": "visibility [38600,38608]",
      "dest": "visibility [39140,39148]"
    },
    {
      "src": "call_argument [31432,31442]",
      "dest": "call_argument [31431,31441]"
    },
    {
      "src": "parameter [36808,36816]",
      "dest": "parameter [37235,37243]"
    },
    {
      "src": "identifier: _msgSender [26117,26127]",
      "dest": "identifier: _msgSender [26116,26126]"
    },
    {
      "src": "): ) [43434,43435]",
      "dest": "): ) [47830,47831]"
    },
    {
      "src": "type_name [13637,13641]",
      "dest": "type_name [13207,13211]"
    },
    {
      "src": "returns: returns [12721,12728]",
      "dest": "returns: returns [12268,12275]"
    },
    {
      "src": "(: ( [50003,50004]",
      "dest": "(: ( [58125,58126]"
    },
    {
      "src": "(: ( [36570,36571]",
      "dest": "(: ( [36997,36998]"
    },
    {
      "src": "string_literal [12124,12150]",
      "dest": "string_literal [11671,11697]"
    },
    {
      "src": "identifier: symbol [24325,24331]",
      "dest": "identifier: symbol [24324,24330]"
    },
    {
      "src": "user_defined_type [39757,39768]",
      "dest": "user_defined_type [43877,43888]"
    },
    {
      "src": "comment: // On the first call to nonReentrant, _notEntered will be true [7009,7071]",
      "dest": "comment: // On the first call to nonReentrant, _notEntered will be true [6536,6598]"
    },
    {
      "src": "virtual: virtual [19626,19633]",
      "dest": "virtual: virtual [19219,19226]"
    },
    {
      "src": "parameter [31951,31966]",
      "dest": "parameter [31950,31965]"
    },
    {
      "src": "identifier: balanceOf [43649,43658]",
      "dest": "identifier: balanceOf [48045,48054]"
    },
    {
      "src": "number_literal: 0 [31235,31236]",
      "dest": "number_literal: 0 [31234,31235]"
    },
    {
      "src": "identifier: amount [45923,45929]",
      "dest": "identifier: amount [50768,50774]"
    },
    {
      "src": "identifier: _decimals [24342,24351]",
      "dest": "identifier: _decimals [24341,24350]"
    },
    {
      "src": "identifier: initializer [21049,21060]",
      "dest": "identifier: initializer [20662,20673]"
    },
    {
      "src": ",: , [10748,10749]",
      "dest": ",: , [10295,10296]"
    },
    {
      "src": "function_definition [17066,17292]",
      "dest": "function_definition [16639,16865]"
    },
    {
      "src": "=: = [40545,40546]",
      "dest": "=: = [44717,44718]"
    },
    {
      "src": "(: ( [29794,29795]",
      "dest": "(: ( [29793,29794]"
    },
    {
      "src": "function: function [43905,43913]",
      "dest": "function: function [48199,48207]"
    },
    {
      "src": "): ) [48208,48209]",
      "dest": "): ) [55847,55848]"
    },
    {
      "src": "identifier: mul [45419,45422]",
      "dest": "identifier: mul [50212,50215]"
    },
    {
      "src": "identifier: c [10105,10106]",
      "dest": "identifier: c [9652,9653]"
    },
    {
      "src": "(: ( [38659,38660]",
      "dest": "(: ( [39199,39200]"
    },
    {
      "src": ",: , [49197,49198]",
      "dest": ",: , [57023,57024]"
    },
    {
      "src": "type_name [4196,4203]",
      "dest": "type_name [3703,3710]"
    },
    {
      "src": "]: ] [53002,53003]",
      "dest": "]: ] [60923,60924]"
    },
    {
      "src": "function_body [50778,50926]",
      "dest": "function_body [58703,58851]"
    },
    {
      "src": "): ) [16610,16611]",
      "dest": "): ) [16183,16184]"
    },
    {
      "src": "call_expression [7081,7144]",
      "dest": "call_expression [6608,6671]"
    },
    {
      "src": "{: { [13643,13644]",
      "dest": "{: { [13213,13214]"
    },
    {
      "src": "): ) [48833,48834]",
      "dest": "): ) [56648,56649]"
    },
    {
      "src": "using: using [39809,39814]",
      "dest": "using: using [43929,43934]"
    },
    {
      "src": "expression_statement [52382,52436]",
      "dest": "expression_statement [60303,60357]"
    },
    {
      "src": "primitive_type [39020,39027]",
      "dest": "primitive_type [39578,39585]"
    },
    {
      "src": "primitive_type [9406,9413]",
      "dest": "primitive_type [8953,8960]"
    },
    {
      "src": "(: ( [43427,43428]",
      "dest": "(: ( [47823,47824]"
    },
    {
      "src": "identifier: SafeMath [23549,23557]",
      "dest": "identifier: SafeMath [23548,23556]"
    },
    {
      "src": "): ) [37833,37834]",
      "dest": "): ) [38355,38356]"
    },
    {
      "src": "primitive_type [3033,3040]",
      "dest": "primitive_type [2537,2544]"
    },
    {
      "src": "function: function [29477,29485]",
      "dest": "function: function [29476,29484]"
    },
    {
      "src": "expression_statement [49155,49236]",
      "dest": "expression_statement [56981,57063]"
    },
    {
      "src": "primitive_type [24238,24244]",
      "dest": "primitive_type [24237,24243]"
    },
    {
      "src": ":=: := [18652,18654]",
      "dest": ":=: := [18225,18227]"
    },
    {
      "src": "state_variable_declaration [20784,20809]",
      "dest": "state_variable_declaration [20397,20422]"
    },
    {
      "src": "uint256: uint256 [43177,43184]",
      "dest": "uint256: uint256 [47349,47356]"
    },
    {
      "src": "): ) [36338,36339]",
      "dest": "): ) [36765,36766]"
    },
    {
      "src": "identifier: IERC20 [40178,40184]",
      "dest": "identifier: IERC20 [44298,44304]"
    },
    {
      "src": "bytes: bytes [16533,16538]",
      "dest": "bytes: bytes [16106,16111]"
    },
    {
      "src": "returns: returns [17156,17163]",
      "dest": "returns: returns [16729,16736]"
    },
    {
      "src": "visibility [16580,16588]",
      "dest": "visibility [16153,16161]"
    },
    {
      "src": ",: , [53024,53025]",
      "dest": ",: , [60945,60946]"
    },
    {
      "src": "): ) [49918,49919]",
      "dest": "): ) [58048,58049]"
    },
    {
      "src": "): ) [45633,45634]",
      "dest": "): ) [50426,50427]"
    },
    {
      "src": "override: override [25539,25547]",
      "dest": "override: override [25538,25546]"
    },
    {
      "src": "): ) [36206,36207]",
      "dest": "): ) [36633,36634]"
    },
    {
      "src": ".: . [47071,47072]",
      "dest": ".: . [52029,52030]"
    },
    {
      "src": "identifier: _msgSender [34373,34383]",
      "dest": "identifier: _msgSender [34540,34550]"
    },
    {
      "src": "function_definition [53333,53489]",
      "dest": "function_definition [61254,61410]"
    },
    {
      "src": "override: override [43405,43413]",
      "dest": "override: override [47801,47809]"
    },
    {
      "src": "call_argument [43248,43259]",
      "dest": "call_argument [47420,47431]"
    },
    {
      "src": "binary_expression [15024,15055]",
      "dest": "binary_expression [14597,14628]"
    },
    {
      "src": "identifier: data [17608,17612]",
      "dest": "identifier: data [17181,17185]"
    },
    {
      "src": "indexed: indexed [4455,4462]",
      "dest": "indexed: indexed [3962,3969]"
    },
    {
      "src": "type_name [40280,40294]",
      "dest": "type_name [44400,44414]"
    },
    {
      "src": "identifier: renounceOwnership [35213,35230]",
      "dest": "identifier: renounceOwnership [35380,35397]"
    },
    {
      "src": "state_variable_declaration [6447,6485]",
      "dest": "state_variable_declaration [5974,6012]"
    },
    {
      "src": "call_argument [47316,47387]",
      "dest": "call_argument [52274,52345]"
    },
    {
      "src": "): ) [42838,42839]",
      "dest": "): ) [47010,47011]"
    },
    {
      "src": "identifier: __lender [43008,43016]",
      "dest": "identifier: __lender [47180,47188]"
    },
    {
      "src": "call_argument [16210,16216]",
      "dest": "call_argument [15783,15789]"
    },
    {
      "src": "): ) [25407,25408]",
      "dest": "): ) [25406,25407]"
    },
    {
      "src": "call_argument [43177,43188]",
      "dest": "call_argument [47349,47360]"
    },
    {
      "src": "identifier: spender [26663,26670]",
      "dest": "identifier: spender [26662,26669]"
    },
    {
      "src": "identifier: IUniswapRouter [38862,38876]",
      "dest": "identifier: IUniswapRouter [39420,39434]"
    },
    {
      "src": "primitive_type [30363,30370]",
      "dest": "primitive_type [30362,30369]"
    },
    {
      "src": "}: } [7433,7434]",
      "dest": "}: } [6960,6961]"
    },
    {
      "src": ">: > [52362,52363]",
      "dest": ">: > [60283,60284]"
    },
    {
      "src": "identifier: expectedAmount [49605,49619]",
      "dest": "identifier: expectedAmount [57216,57230]"
    },
    {
      "src": "type_name [40178,40184]",
      "dest": "type_name [44298,44304]"
    },
    {
      "src": ".: . [49732,49733]",
      "dest": ".: . [57906,57907]"
    },
    {
      "src": "expression_statement [45129,45191]",
      "dest": "expression_statement [49871,49922]"
    },
    {
      "src": "): ) [47386,47387]",
      "dest": "): ) [52344,52345]"
    },
    {
      "src": "<=: <= [49805,49807]",
      "dest": "<=: <= [57957,57959]"
    },
    {
      "src": "): ) [45988,45989]",
      "dest": "): ) [50833,50834]"
    },
    {
      "src": "call_expression [45616,45629]",
      "dest": "call_expression [50409,50422]"
    },
    {
      "src": "call_argument [46308,46339]",
      "dest": "call_argument [51265,51296]"
    },
    {
      "src": "uint256: uint256 [48479,48486]",
      "dest": "uint256: uint256 [56226,56233]"
    },
    {
      "src": "type_cast_expression [43700,43713]",
      "dest": "type_cast_expression [48096,48109]"
    },
    {
      "src": "contract_body [5633,7434]",
      "dest": "contract_body [5160,6961]"
    },
    {
      "src": "primitive_type [47942,47949]",
      "dest": "primitive_type [55512,55519]"
    },
    {
      "src": "assignment_expression [50410,50448]",
      "dest": "assignment_expression [57504,57542]"
    },
    {
      "src": "parameter [25691,25706]",
      "dest": "parameter [25690,25705]"
    },
    {
      "src": "type_name [52986,52993]",
      "dest": "type_name [60907,60914]"
    },
    {
      "src": "type_name [4215,4222]",
      "dest": "type_name [3722,3729]"
    },
    {
      "src": "(: ( [44050,44051]",
      "dest": "(: ( [48815,48816]"
    },
    {
      "src": "call_argument [50221,50274]",
      "dest": "call_argument [57314,57368]"
    },
    {
      "src": "parameter [42697,42717]",
      "dest": "parameter [46869,46889]"
    },
    {
      "src": "(: ( [47423,47424]",
      "dest": "(: ( [52381,52382]"
    },
    {
      "src": "uint256: uint256 [47764,47771]",
      "dest": "uint256: uint256 [55333,55340]"
    },
    {
      "src": "uint256: uint256 [38623,38630]",
      "dest": "uint256: uint256 [39163,39170]"
    },
    {
      "src": ",: , [29812,29813]",
      "dest": ",: , [29811,29812]"
    },
    {
      "src": "identifier: call [15209,15213]",
      "dest": "identifier: call [14782,14786]"
    },
    {
      "src": "state_mutability [36116,36120]",
      "dest": "state_mutability [36543,36547]"
    },
    {
      "src": "type_name [36448,36455]",
      "dest": "type_name [36875,36882]"
    },
    {
      "src": "{: { [18421,18422]",
      "dest": "{: { [17994,17995]"
    },
    {
      "src": "yul_identifier [18661,18671]",
      "dest": "yul_identifier [18234,18244]"
    },
    {
      "src": "identifier: success [15186,15193]",
      "dest": "identifier: success [14759,14766]"
    },
    {
      "src": "): ) [31236,31237]",
      "dest": "): ) [31235,31236]"
    },
    {
      "src": "type_name [42697,42708]",
      "dest": "type_name [46869,46880]"
    },
    {
      "src": "identifier: msg [45896,45899]",
      "dest": "identifier: msg [50741,50744]"
    },
    {
      "src": "variable_declaration [45456,45479]",
      "dest": "variable_declaration [50249,50272]"
    },
    {
      "src": "function_definition [31899,32279]",
      "dest": "function_definition [31898,32278]"
    },
    {
      "src": "identifier: _balances [29854,29863]",
      "dest": "identifier: _balances [29853,29862]"
    },
    {
      "src": ",: , [47985,47986]",
      "dest": ",: , [55555,55556]"
    },
    {
      "src": "private: private [23748,23755]",
      "dest": "private: private [23747,23754]"
    },
    {
      "src": "visibility [25708,25714]",
      "dest": "visibility [25707,25713]"
    },
    {
      "src": "}: } [45197,45198]",
      "dest": "}: } [49990,49991]"
    },
    {
      "src": "identifier: _status [7222,7229]",
      "dest": "identifier: _status [6749,6756]"
    },
    {
      "src": "address: address [17708,17715]",
      "dest": "address: address [17281,17288]"
    },
    {
      "src": "\": \" [49903,49904]",
      "dest": "\": \" [58047,58048]"
    },
    {
      "src": "[: [ [26376,26377]",
      "dest": "[: [ [26375,26376]"
    },
    {
      "src": "identifier: balanceOf [25681,25690]",
      "dest": "identifier: balanceOf [25680,25689]"
    },
    {
      "src": "parameter [16114,16128]",
      "dest": "parameter [15687,15701]"
    },
    {
      "src": "parameter [8879,8886]",
      "dest": "parameter [8426,8433]"
    },
    {
      "src": "type_name [38928,38935]",
      "dest": "type_name [39486,39493]"
    },
    {
      "src": "expression_statement [21274,21294]",
      "dest": "expression_statement [20887,20907]"
    },
    {
      "src": "type_cast_expression [43659,43672]",
      "dest": "type_cast_expression [48055,48068]"
    },
    {
      "src": "private: private [6407,6414]",
      "dest": "private: private [5934,5941]"
    },
    {
      "src": "identifier: repay [38436,38441]",
      "dest": "identifier: repay [38958,38963]"
    },
    {
      "src": "comment: // === STORAGE VARIABLES ARE DECLARED BELOW == [39948,39994]",
      "dest": "comment: // === STORAGE VARIABLES ARE DECLARED BELOW == [44068,44114]"
    },
    {
      "src": "comment: /**      * @dev Sets the values for {name} and {symbol}, initializes {decimals} with      * a default value of 18.      *      * To select a different value for {decimals}, use {_setupDecimals}.      *      * All three of these values are immutable: they can only be set once during      * construction.      */ [23865,24184]",
      "dest": "comment: /**      * @dev Sets the values for {name} and {symbol}, initializes {decimals} with      * a default value of 18.      *      * To select a different value for {decimals}, use {_setupDecimals}.      *      * All three of these values are immutable: they can only be set once during      * construction.      */ [23864,24183]"
    },
    {
      "src": "parameter [27268,27282]",
      "dest": "parameter [27267,27281]"
    },
    {
      "src": "string: string [17957,17963]",
      "dest": "string: string [17530,17536]"
    },
    {
      "src": "parameter [31056,31071]",
      "dest": "parameter [31055,31070]"
    },
    {
      "src": "call_argument [31311,31347]",
      "dest": "call_argument [31310,31346]"
    },
    {
      "src": "type_name [31977,31984]",
      "dest": "type_name [31976,31983]"
    },
    {
      "src": "primitive_type [23672,23679]",
      "dest": "primitive_type [23671,23678]"
    },
    {
      "src": "call_expression [43678,43714]",
      "dest": "call_expression [48074,48110]"
    },
    {
      "src": "call_argument [43700,43713]",
      "dest": "call_argument [48096,48109]"
    },
    {
      "src": "variable_declaration_statement [46386,46423]",
      "dest": "variable_declaration_statement [51344,51381]"
    },
    {
      "src": "hours: hours [52076,52081]",
      "dest": "hours: hours [59999,60004]"
    },
    {
      "src": "{: { [44908,44909]",
      "dest": "{: { [49527,49528]"
    },
    {
      "src": "): ) [3063,3064]",
      "dest": "): ) [2567,2568]"
    },
    {
      "src": "): ) [30041,30042]",
      "dest": "): ) [30040,30041]"
    },
    {
      "src": "identifier: _curvePool [43164,43174]",
      "dest": "identifier: _curvePool [47336,47346]"
    },
    {
      "src": "function: function [4158,4166]",
      "dest": "function: function [3665,3673]"
    },
    {
      "src": "parameter [44495,44515]",
      "dest": "parameter [49114,49134]"
    },
    {
      "src": "function_definition [43373,43476]",
      "dest": "function_definition [47769,47872]"
    },
    {
      "src": "=: = [21320,21321]",
      "dest": "=: = [20933,20934]"
    },
    {
      "src": "}: } [19583,19584]",
      "dest": "}: } [19176,19177]"
    },
    {
      "src": "variable_declaration [45398,45409]",
      "dest": "variable_declaration [50191,50202]"
    },
    {
      "src": "expression_statement [30407,30473]",
      "dest": "expression_statement [30406,30472]"
    },
    {
      "src": "private: private [34085,34092]",
      "dest": "private: private [34252,34259]"
    },
    {
      "src": "uint256: uint256 [4732,4739]",
      "dest": "uint256: uint256 [4239,4246]"
    },
    {
      "src": "primitive_type [21949,21956]",
      "dest": "primitive_type [21562,21569]"
    },
    {
      "src": "string_literal [34798,34832]",
      "dest": "string_literal [34965,34999]"
    },
    {
      "src": "primitive_type [33367,33374]",
      "dest": "primitive_type [33366,33373]"
    },
    {
      "src": "member_expression [48045,48069]",
      "dest": "member_expression [55685,55709]"
    },
    {
      "src": "identifier: a [8378,8379]",
      "dest": "identifier: a [7925,7926]"
    },
    {
      "src": "external: external [36340,36348]",
      "dest": "external: external [36767,36775]"
    },
    {
      "src": "(: ( [9723,9724]",
      "dest": "(: ( [9270,9271]"
    },
    {
      "src": "block_statement [18421,18772]",
      "dest": "block_statement [17994,18345]"
    },
    {
      "src": "call_expression [49624,49641]",
      "dest": "call_expression [57235,57252]"
    },
    {
      "src": "assembly: assembly [13925,13933]",
      "dest": "assembly: assembly [13495,13503]"
    },
    {
      "src": "\": \" [31182,31183]",
      "dest": "\": \" [31181,31182]"
    },
    {
      "src": "(: ( [27349,27350]",
      "dest": "(: ( [27348,27349]"
    },
    {
      "src": "type_name [34077,34084]",
      "dest": "type_name [34244,34251]"
    },
    {
      "src": "return_type_definition [36121,36138]",
      "dest": "return_type_definition [36548,36565]"
    },
    {
      "src": "block_statement [21384,21431]",
      "dest": "block_statement [20997,21044]"
    },
    {
      "src": "call_expression [42850,42870]",
      "dest": "call_expression [47022,47042]"
    },
    {
      "src": "expression_statement [47036,47107]",
      "dest": "expression_statement [51994,52065]"
    },
    {
      "src": "identifier: Transfer [30007,30015]",
      "dest": "identifier: Transfer [30006,30014]"
    },
    {
      "src": "external: external [2706,2714]",
      "dest": "external: external [2210,2218]"
    },
    {
      "src": "identifier: size [13983,13987]",
      "dest": "identifier: size [13553,13557]"
    },
    {
      "src": "parameter [25738,25745]",
      "dest": "parameter [25737,25744]"
    },
    {
      "src": ",: , [4730,4731]",
      "dest": ",: , [4237,4238]"
    },
    {
      "src": ".: . [18408,18409]",
      "dest": ".: . [17981,17982]"
    },
    {
      "src": "expression_statement [26640,26680]",
      "dest": "expression_statement [26639,26679]"
    },
    {
      "src": "{: { [30396,30397]",
      "dest": "{: { [30395,30396]"
    },
    {
      "src": "member_expression [31374,31390]",
      "dest": "member_expression [31373,31389]"
    },
    {
      "src": "): ) [18419,18420]",
      "dest": "): ) [17992,17993]"
    },
    {
      "src": "view: view [38609,38613]",
      "dest": "view: view [39149,39153]"
    },
    {
      "src": "type_name [35924,35931]",
      "dest": "type_name [36186,36193]"
    },
    {
      "src": "user_defined_type [39794,39801]",
      "dest": "user_defined_type [43914,43921]"
    },
    {
      "src": "identifier: OwnershipTransferred [34430,34450]",
      "dest": "identifier: OwnershipTransferred [34597,34617]"
    },
    {
      "src": "block_statement [18262,18306]",
      "dest": "block_statement [17835,17879]"
    },
    {
      "src": "number_literal: 0 [45632,45633]",
      "dest": "number_literal: 0 [50425,50426]"
    },
    {
      "src": "identifier: Exited [41158,41164]",
      "dest": "identifier: Exited [45330,45336]"
    },
    {
      "src": "state_mutability [37028,37032]",
      "dest": "state_mutability [37455,37459]"
    },
    {
      "src": "identifier: _currencyToken [52390,52404]",
      "dest": "identifier: _currencyToken [60311,60325]"
    },
    {
      "src": "identifier: Borrow [41783,41789]",
      "dest": "identifier: Borrow [45955,45961]"
    },
    {
      "src": "): ) [17177,17178]",
      "dest": "): ) [16750,16751]"
    },
    {
      "src": "visibility [28011,28017]",
      "dest": "visibility [28010,28016]"
    },
    {
      "src": ",: , [27416,27417]",
      "dest": ",: , [27415,27416]"
    },
    {
      "src": "identifier: _currencyToken [43454,43468]",
      "dest": "identifier: _currencyToken [47850,47864]"
    },
    {
      "src": "identifier: ITrueLender [40213,40224]",
      "dest": "identifier: ITrueLender [44333,44344]"
    },
    {
      "src": "(: ( [4179,4180]",
      "dest": "(: ( [3686,3687]"
    },
    {
      "src": "address: address [16114,16121]",
      "dest": "address: address [15687,15694]"
    },
    {
      "src": "}: } [52501,52502]",
      "dest": "}: } [60422,60423]"
    },
    {
      "src": "call_expression [49605,49642]",
      "dest": "call_expression [57216,57253]"
    },
    {
      "src": "type_name [40106,40116]",
      "dest": "type_name [44226,44236]"
    },
    {
      "src": "{: { [52818,52819]",
      "dest": "{: { [60739,60740]"
    },
    {
      "src": "inheritance_specifier [23529,23535]",
      "dest": "inheritance_specifier [23528,23534]"
    },
    {
      "src": "identifier: transferFrom [27192,27204]",
      "dest": "identifier: transferFrom [27191,27203]"
    },
    {
      "src": "expression_statement [29936,29992]",
      "dest": "expression_statement [29935,29991]"
    },
    {
      "src": "parameter [25562,25569]",
      "dest": "parameter [25561,25568]"
    },
    {
      "src": "(: ( [27395,27396]",
      "dest": "(: ( [27394,27395]"
    },
    {
      "src": "string [17740,17780]",
      "dest": "string [17313,17353]"
    },
    {
      "src": "call_expression [49466,49483]",
      "dest": "call_expression [57157,57174]"
    },
    {
      "src": "): ) [52365,52366]",
      "dest": "): ) [60286,60287]"
    },
    {
      "src": ".: . [31298,31299]",
      "dest": ".: . [31297,31298]"
    },
    {
      "src": "identifier: recipient [15199,15208]",
      "dest": "identifier: recipient [14772,14781]"
    },
    {
      "src": "primitive_type [36689,36696]",
      "dest": "primitive_type [37116,37123]"
    },
    {
      "src": "member_expression [15024,15045]",
      "dest": "member_expression [14597,14618]"
    },
    {
      "src": "(: ( [16209,16210]",
      "dest": "(: ( [15782,15783]"
    },
    {
      "src": "expression_statement [17700,17782]",
      "dest": "expression_statement [17273,17355]"
    },
    {
      "src": "internal: internal [14996,15004]",
      "dest": "internal: internal [14569,14577]"
    },
    {
      "src": "variable_declaration [47942,47974]",
      "dest": "variable_declaration [55512,55544]"
    },
    {
      "src": "variable_declaration [18175,18198]",
      "dest": "variable_declaration [17748,17771]"
    },
    {
      "src": "function_definition [52739,53123]",
      "dest": "function_definition [60660,61044]"
    },
    {
      "src": "external: external [38753,38761]",
      "dest": "external: external [39293,39301]"
    },
    {
      "src": "variable_declaration_statement [21949,21978]",
      "dest": "variable_declaration_statement [21562,21591]"
    },
    {
      "src": "uint256: uint256 [52809,52816]",
      "dest": "uint256: uint256 [60730,60737]"
    },
    {
      "src": "string [50221,50274]",
      "dest": "string [57314,57368]"
    },
    {
      "src": "): ) [45714,45715]",
      "dest": "): ) [50507,50508]"
    },
    {
      "src": "primitive_type [17113,17118]",
      "dest": "primitive_type [16686,16691]"
    },
    {
      "src": "identifier: require [52382,52389]",
      "dest": "identifier: require [60303,60310]"
    },
    {
      "src": "event_definition [41777,41837]",
      "dest": "event_definition [45949,46009]"
    },
    {
      "src": "identifier: roughCurveTokenAmount [50004,50025]",
      "dest": "identifier: roughCurveTokenAmount [58126,58147]"
    },
    {
      "src": "primitive_type [53640,53647]",
      "dest": "primitive_type [61561,61568]"
    },
    {
      "src": "type_name [2259,2266]",
      "dest": "type_name [1763,1770]"
    },
    {
      "src": "number_literal: 1 [43257,43258]",
      "dest": "number_literal: 1 [47429,47430]"
    },
    {
      "src": "identifier: __uniRouter [43081,43092]",
      "dest": "identifier: __uniRouter [47253,47264]"
    },
    {
      "src": "): ) [45797,45798]",
      "dest": "): ) [50590,50591]"
    },
    {
      "src": "member_expression [52923,52939]",
      "dest": "member_expression [60844,60860]"
    },
    {
      "src": "type_name [10716,10723]",
      "dest": "type_name [10263,10270]"
    },
    {
      "src": "type_name [28035,28039]",
      "dest": "type_name [28034,28038]"
    },
    {
      "src": "comment: // File: contracts/truefi/interface/IYToken.sol [35758,35805]",
      "dest": "comment: // Dependency file: contracts/truefi/common/Initializable.sol [19427,19488]"
    },
    {
      "src": "type_name [36689,36696]",
      "dest": "type_name [37116,37123]"
    },
    {
      "src": "expression_statement [45860,45932]",
      "dest": "expression_statement [50705,50777]"
    },
    {
      "src": "identifier: size [13936,13940]",
      "dest": "identifier: size [13506,13510]"
    },
    {
      "src": "call_expression [26640,26679]",
      "dest": "call_expression [26639,26678]"
    },
    {
      "src": "virtual: virtual [29590,29597]",
      "dest": "virtual: virtual [29589,29596]"
    },
    {
      "src": "state_mutability [53386,53390]",
      "dest": "state_mutability [61307,61311]"
    },
    {
      "src": "type_name [42228,42235]",
      "dest": "type_name [46400,46407]"
    },
    {
      "src": "): ) [37633,37634]",
      "dest": "): ) [38155,38156]"
    },
    {
      "src": "identifier: sender [29617,29623]",
      "dest": "identifier: sender [29616,29622]"
    },
    {
      "src": "block_statement [18312,18844]",
      "dest": "block_statement [17885,18417]"
    },
    {
      "src": "]: ] [47958,47959]",
      "dest": "]: ] [55528,55529]"
    },
    {
      "src": "identifier: b [9743,9744]",
      "dest": "identifier: b [9290,9291]"
    },
    {
      "src": "identifier: functionCallWithValue [17075,17096]",
      "dest": "identifier: functionCallWithValue [16648,16669]"
    },
    {
      "src": "): ) [21582,21583]",
      "dest": "): ) [21195,21196]"
    },
    {
      "src": "primitive_type [44495,44502]",
      "dest": "primitive_type [49114,49121]"
    },
    {
      "src": "identifier: _beforeTokenTransfer [30485,30505]",
      "dest": "identifier: _beforeTokenTransfer [30484,30504]"
    },
    {
      "src": "is: is [35852,35854]",
      "dest": "is: is [36114,36116]"
    },
    {
      "src": "uint256: uint256 [41525,41532]",
      "dest": "uint256: uint256 [45697,45704]"
    },
    {
      "src": ",: , [39775,39776]",
      "dest": ",: , [43895,43896]"
    },
    {
      "src": "variable_declaration [49657,49686]",
      "dest": "variable_declaration [57831,57860]"
    },
    {
      "src": "identifier: currencyAmountToTransfer [47080,47104]",
      "dest": "identifier: currencyAmountToTransfer [52038,52062]"
    },
    {
      "src": "call_expression [28096,28108]",
      "dest": "call_expression [28095,28107]"
    },
    {
      "src": "identifier: _ [21350,21351]",
      "dest": "identifier: _ [20963,20964]"
    },
    {
      "src": "bool: bool [21578,21582]",
      "dest": "bool: bool [21191,21195]"
    },
    {
      "src": "): ) [43187,43188]",
      "dest": "): ) [47359,47360]"
    },
    {
      "src": "(: ( [42227,42228]",
      "dest": "(: ( [46399,46400]"
    },
    {
      "src": "expression_statement [51910,51965]",
      "dest": "expression_statement [59833,59888]"
    },
    {
      "src": "identifier: beneficiary [52474,52485]",
      "dest": "identifier: beneficiary [60395,60406]"
    },
    {
      "src": "int128: int128 [37129,37135]",
      "dest": "int128: int128 [37556,37562]"
    },
    {
      "src": "uint256: uint256 [46386,46393]",
      "dest": "uint256: uint256 [51344,51351]"
    },
    {
      "src": "identifier: a [11443,11444]",
      "dest": "identifier: a [10990,10991]"
    },
    {
      "src": "primitive_type [36662,36669]",
      "dest": "primitive_type [37089,37096]"
    },
    {
      "src": "parameter [53362,53377]",
      "dest": "parameter [61283,61298]"
    },
    {
      "src": "}: } [22213,22214]",
      "dest": "}: } [21826,21827]"
    },
    {
      "src": "array_access [32187,32205]",
      "dest": "array_access [32186,32204]"
    },
    {
      "src": "number_literal: 0 [53026,53027]",
      "dest": "number_literal: 0 [60947,60948]"
    },
    {
      "src": "function_definition [43905,44221]",
      "dest": "function_definition [48199,48350]"
    },
    {
      "src": "function_body [47830,48260]",
      "dest": "function_body [55399,56007]"
    },
    {
      "src": "identifier: recipient [27358,27367]",
      "dest": "identifier: recipient [27357,27366]"
    },
    {
      "src": "uint256: uint256 [8370,8377]",
      "dest": "uint256: uint256 [7917,7924]"
    },
    {
      "src": "identifier: spender [3791,3798]",
      "dest": "identifier: spender [3298,3305]"
    },
    {
      "src": "override_specifier [26308,26316]",
      "dest": "override_specifier [26307,26315]"
    },
    {
      "src": "identifier: msg [19809,19812]",
      "dest": "identifier: msg [19402,19405]"
    },
    {
      "src": "type_name [2724,2728]",
      "dest": "type_name [2228,2232]"
    },
    {
      "src": "comment: // File: contracts/truefi/TrueFiPool.sol [39116,39156]",
      "dest": "comment: // import {Context} from \"@openzeppelin/contracts/GSN/Context.sol\"; [22002,22069]"
    },
    {
      "src": "expression_statement [34766,34834]",
      "dest": "expression_statement [34933,35001]"
    },
    {
      "src": "identifier: calc_token_amount [53082,53099]",
      "dest": "identifier: calc_token_amount [61003,61020]"
    },
    {
      "src": "identifier: amount [26049,26055]",
      "dest": "identifier: amount [26048,26054]"
    },
    {
      "src": "modifier_definition [21040,21438]",
      "dest": "modifier_definition [20653,21051]"
    },
    {
      "src": "primitive_type [32044,32051]",
      "dest": "primitive_type [32043,32050]"
    },
    {
      "src": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [9460,9705]",
      "dest": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [9007,9252]"
    },
    {
      "src": "call_argument [45968,45974]",
      "dest": "call_argument [50813,50819]"
    },
    {
      "src": "uint256: uint256 [12042,12049]",
      "dest": "uint256: uint256 [11589,11596]"
    },
    {
      "src": "identifier: require [18027,18034]",
      "dest": "identifier: require [17600,17607]"
    },
    {
      "src": "(: ( [48694,48695]",
      "dest": "(: ( [56442,56443]"
    },
    {
      "src": "identifier: ICurve [37098,37104]",
      "dest": "identifier: ICurve [37525,37531]"
    },
    {
      "src": "call_argument [30415,30436]",
      "dest": "call_argument [30414,30435]"
    },
    {
      "src": "type_name [8834,8841]",
      "dest": "type_name [8381,8388]"
    },
    {
      "src": "identifier: spender [28703,28710]",
      "dest": "identifier: spender [28702,28709]"
    },
    {
      "src": "address: address [34600,34607]",
      "dest": "address: address [34767,34774]"
    },
    {
      "src": "number_literal: 0 [53023,53024]",
      "dest": "number_literal: 0 [60944,60945]"
    },
    {
      "src": "call_expression [45868,45930]",
      "dest": "call_expression [50713,50775]"
    },
    {
      "src": "identifier: recipient [30024,30033]",
      "dest": "identifier: recipient [30023,30032]"
    },
    {
      "src": "string_literal [29723,29760]",
      "dest": "string_literal [29722,29759]"
    },
    {
      "src": "(: ( [18160,18161]",
      "dest": "(: ( [17733,17734]"
    },
    {
      "src": "): ) [44180,44181]",
      "dest": "): ) [48328,48329]"
    },
    {
      "src": "{: { [43956,43957]",
      "dest": "{: { [48252,48253]"
    },
    {
      "src": "identifier: this [43667,43671]",
      "dest": "identifier: this [48063,48067]"
    },
    {
      "src": "address: address [31056,31063]",
      "dest": "address: address [31055,31062]"
    },
    {
      "src": ",: , [43246,43247]",
      "dest": ",: , [47418,47419]"
    },
    {
      "src": "identifier: amount [30641,30647]",
      "dest": "identifier: amount [30640,30646]"
    },
    {
      "src": "binary_expression [32035,32054]",
      "dest": "binary_expression [32034,32053]"
    },
    {
      "src": "uint256: uint256 [46655,46662]",
      "dest": "uint256: uint256 [51613,51620]"
    },
    {
      "src": "identifier: sender [45960,45966]",
      "dest": "identifier: sender [50805,50811]"
    },
    {
      "src": "identifier: claimableFees [52297,52310]",
      "dest": "identifier: claimableFees [60218,60231]"
    },
    {
      "src": "): ) [52816,52817]",
      "dest": "): ) [60737,60738]"
    },
    {
      "src": "parameter [38726,38745]",
      "dest": "parameter [39266,39285]"
    },
    {
      "src": "function_definition [43557,43723]",
      "dest": "function_definition [47953,48119]"
    },
    {
      "src": "function: function [16495,16503]",
      "dest": "function: function [16068,16076]"
    },
    {
      "src": "type_name [52857,52864]",
      "dest": "type_name [60778,60785]"
    },
    {
      "src": "address: address [29531,29538]",
      "dest": "address: address [29530,29537]"
    },
    {
      "src": "): ) [50447,50448]",
      "dest": "): ) [57541,57542]"
    },
    {
      "src": "function: function [17548,17556]",
      "dest": "function: function [17121,17129]"
    },
    {
      "src": "): ) [48251,48252]",
      "dest": "): ) [55998,55999]"
    },
    {
      "src": "uint256: uint256 [40407,40414]",
      "dest": "uint256: uint256 [44527,44534]"
    },
    {
      "src": "private: private [20789,20796]",
      "dest": "private: private [20402,20409]"
    },
    {
      "src": "(: ( [43707,43708]",
      "dest": "(: ( [48103,48104]"
    },
    {
      "src": "primitive_type [43177,43184]",
      "dest": "primitive_type [47349,47356]"
    },
    {
      "src": "): ) [47333,47334]",
      "dest": "): ) [52291,52292]"
    },
    {
      "src": "comment: /**      * @dev Hook that is called before any transfer of tokens. This includes      * minting and burning.      *      * Calling conditions:      *      * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens      * will be to transferred to `to`.      * - when `from` is zero, `amount` tokens will be minted for `to`.      * - when `to` is zero, `amount` of ``from``'s tokens will be burned.      * - `from` and `to` are never both zero.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [32709,33298]",
      "dest": "comment: /**      * @dev Hook that is called before any transfer of tokens. This includes      * minting and burning.      *      * Calling conditions:      *      * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens      * will be to transferred to `to`.      * - when `from` is zero, `amount` tokens will be minted for `to`.      * - when `to` is zero, `amount` of ``from``'s tokens will be burned.      * - `from` and `to` are never both zero.      *      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].      */ [32708,33297]"
    },
    {
      "src": "): ) [45444,45445]",
      "dest": "): ) [50237,50238]"
    },
    {
      "src": "}: } [7430,7431]",
      "dest": "}: } [6957,6958]"
    },
    {
      "src": ",: , [15260,15261]",
      "dest": ",: , [14833,14834]"
    },
    {
      "src": "type_name [36776,36783]",
      "dest": "type_name [37203,37210]"
    },
    {
      "src": "uint256: uint256 [45456,45463]",
      "dest": "uint256: uint256 [50249,50256]"
    },
    {
      "src": "identifier: symbol [24252,24258]",
      "dest": "identifier: symbol [24251,24257]"
    },
    {
      "src": "address: address [48196,48203]",
      "dest": "address: address [55835,55842]"
    },
    {
      "src": "string [32056,32094]",
      "dest": "string [32055,32093]"
    },
    {
      "src": "override_specifier [43405,43413]",
      "dest": "override_specifier [47801,47809]"
    },
    {
      "src": "state_mutability [11358,11362]",
      "dest": "state_mutability [10905,10909]"
    },
    {
      "src": "assignment_expression [7401,7423]",
      "dest": "assignment_expression [6928,6950]"
    },
    {
      "src": "identifier: token [43211,43216]",
      "dest": "identifier: token [47383,47388]"
    },
    {
      "src": "string [15262,15322]",
      "dest": "string [14835,14895]"
    },
    {
      "src": "function_definition [36244,36314]",
      "dest": "function_definition [36671,36741]"
    },
    {
      "src": "identifier: initializing [21082,21094]",
      "dest": "identifier: initializing [20695,20707]"
    },
    {
      "src": "(: ( [16516,16517]",
      "dest": "(: ( [16089,16090]"
    },
    {
      "src": "visibility [23839,23846]",
      "dest": "visibility [23838,23845]"
    },
    {
      "src": "returns: returns [24666,24673]",
      "dest": "returns: returns [24665,24672]"
    },
    {
      "src": "{: { [16612,16613]",
      "dest": "{: { [16185,16186]"
    },
    {
      "src": "function_body [27329,27538]",
      "dest": "function_body [27328,27537]"
    },
    {
      "src": "): ) [31347,31348]",
      "dest": "): ) [31346,31347]"
    },
    {
      "src": ",: , [8379,8380]",
      "dest": ",: , [7926,7927]"
    },
    {
      "src": "primitive_type [40521,40526]",
      "dest": "primitive_type [44693,44698]"
    },
    {
      "src": "return: return [8522,8528]",
      "dest": "return: return [8069,8075]"
    },
    {
      "src": "emit_statement [44946,44974]",
      "dest": "emit_statement [49648,49676]"
    },
    {
      "src": "identifier: ICurveMinter [36490,36502]",
      "dest": "identifier: ICurveMinter [36917,36929]"
    },
    {
      "src": "return_statement [26160,26172]",
      "dest": "return_statement [26159,26171]"
    },
    {
      "src": "{: { [15213,15214]",
      "dest": "{: { [14786,14787]"
    },
    {
      "src": ".: . [45882,45883]",
      "dest": ".: . [50727,50728]"
    },
    {
      "src": "expression_statement [45767,45799]",
      "dest": "expression_statement [50560,50592]"
    },
    {
      "src": "type_name [23833,23838]",
      "dest": "type_name [23832,23837]"
    },
    {
      "src": ",: , [8477,8478]",
      "dest": ",: , [8024,8025]"
    },
    {
      "src": "binary_expression [11443,11448]",
      "dest": "binary_expression [10990,10995]"
    },
    {
      "src": "identifier: div [44200,44203]",
      "dest": "identifier: div [48330,48333]"
    },
    {
      "src": "return_type_definition [9337,9354]",
      "dest": "return_type_definition [8884,8901]"
    },
    {
      "src": "comment: /**      * @dev Sell collected CRV on Uniswap      * - Selling CRV is managed by the contract owner      * - Calculations can be made off-chain and called based on market conditions      * - Need to pass path of exact pairs to go through while executing exchange      * For example, CRV -> WETH -> TUSD      *      * @param amountIn see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      * @param amountOutMin see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      * @param path see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      */ [51115,51760]",
      "dest": "comment: /**      * @dev Sell collected CRV on Uniswap      * - Selling CRV is managed by the contract owner      * - Calculations can be made off-chain and called based on market conditions      * - Need to pass path of exact pairs to go through while executing exchange      * For example, CRV -> WETH -> TUSD      *      * @param amountIn see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      * @param amountOutMin see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      * @param path see https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens      */ [59038,59683]"
    },
    {
      "src": "identifier: require [15016,15023]",
      "dest": "identifier: require [14589,14596]"
    },
    {
      "src": "comment: /**      * @dev Sets {decimals} to a value other than the default one of 18.      *      * WARNING: This function should only be called from the constructor. Most      * applications that interact with token contracts will not expect      * {decimals} to ever change, and may work incorrectly if it does.      */ [32287,32605]",
      "dest": "comment: /**      * @dev Sets {decimals} to a value other than the default one of 18.      *      * WARNING: This function should only be called from the constructor. Most      * applications that interact with token contracts will not expect      * {decimals} to ever change, and may work incorrectly if it does.      */ [32286,32604]"
    },
    {
      "src": "): ) [50577,50578]",
      "dest": "): ) [57671,57672]"
    },
    {
      "src": "[: [ [29968,29969]",
      "dest": "[: [ [29967,29968]"
    },
    {
      "src": "identifier: sender [27223,27229]",
      "dest": "identifier: sender [27222,27228]"
    },
    {
      "src": "function_body [26096,26179]",
      "dest": "function_body [26095,26178]"
    },
    {
      "src": "(: ( [50545,50546]",
      "dest": "(: ( [57639,57640]"
    },
    {
      "src": "(: ( [46327,46328]",
      "dest": "(: ( [51284,51285]"
    },
    {
      "src": "call_argument [29639,29678]",
      "dest": "call_argument [29638,29677]"
    },
    {
      "src": "primitive_type [24218,24224]",
      "dest": "primitive_type [24217,24223]"
    },
    {
      "src": "return_type_definition [8406,8423]",
      "dest": "return_type_definition [7953,7970]"
    },
    {
      "src": "return: return [16190,16196]",
      "dest": "return: return [15763,15769]"
    },
    {
      "src": "function_definition [3766,3840]",
      "dest": "function_definition [3273,3347]"
    },
    {
      "src": "(: ( [45627,45628]",
      "dest": "(: ( [50420,50421]"
    },
    {
      "src": "memory: memory [17119,17125]",
      "dest": "memory: memory [16692,16698]"
    },
    {
      "src": "(: ( [50735,50736]",
      "dest": "(: ( [58649,58650]"
    },
    {
      "src": "contract: contract [20673,20681]",
      "dest": "contract: contract [20286,20294]"
    },
    {
      "src": "member_expression [28084,28122]",
      "dest": "member_expression [28083,28121]"
    },
    {
      "src": "call_argument [50558,50572]",
      "dest": "call_argument [57652,57666]"
    },
    {
      "src": "address: address [17579,17586]",
      "dest": "address: address [17152,17159]"
    },
    {
      "src": "function_body [25409,25444]",
      "dest": "function_body [25408,25443]"
    },
    {
      "src": "identifier: a [10109,10110]",
      "dest": "identifier: a [9656,9657]"
    },
    {
      "src": "identifier: balanceOf [44591,44600]",
      "dest": "identifier: balanceOf [49210,49219]"
    },
    {
      "src": "call_argument [51934,51953]",
      "dest": "call_argument [59857,59876]"
    },
    {
      "src": "identifier: recipient [38678,38687]",
      "dest": "identifier: recipient [39218,39227]"
    },
    {
      "src": "uint256: uint256 [50349,50356]",
      "dest": "uint256: uint256 [57443,57450]"
    },
    {
      "src": "}: } [48259,48260]",
      "dest": "}: } [56006,56007]"
    },
    {
      "src": "\": \" [15232,15233]",
      "dest": "\": \" [14805,14806]"
    },
    {
      "src": "uint256: uint256 [11431,11438]",
      "dest": "uint256: uint256 [10978,10985]"
    },
    {
      "src": "}: } [47399,47400]",
      "dest": "}: } [52357,52358]"
    },
    {
      "src": ">: > [49464,49465]",
      "dest": ">: > [57155,57156]"
    },
    {
      "src": "visibility [47811,47819]",
      "dest": "visibility [55380,55388]"
    },
    {
      "src": "[: [ [30627,30628]",
      "dest": "[: [ [30626,30627]"
    },
    {
      "src": "identifier: amount [33396,33402]",
      "dest": "identifier: amount [33395,33401]"
    },
    {
      "src": "true [28153,28157]",
      "dest": "true [28152,28156]"
    },
    {
      "src": "type_name [49063,49070]",
      "dest": "type_name [56878,56885]"
    },
    {
      "src": "): ) [28945,28946]",
      "dest": "): ) [28944,28945]"
    },
    {
      "src": "variable_declaration [18161,18173]",
      "dest": "variable_declaration [17734,17746]"
    },
    {
      "src": "type_name [27268,27275]",
      "dest": "type_name [27267,27274]"
    },
    {
      "src": "(: ( [38597,38598]",
      "dest": "(: ( [39137,39138]"
    },
    {
      "src": "address: address [27240,27247]",
      "dest": "address: address [27239,27246]"
    },
    {
      "src": "function: function [33304,33312]",
      "dest": "function: function [33303,33311]"
    },
    {
      "src": "): ) [46821,46822]",
      "dest": "): ) [51779,51780]"
    },
    {
      "src": "string: string [9295,9301]",
      "dest": "string: string [8842,8848]"
    },
    {
      "src": "): ) [49731,49732]",
      "dest": "): ) [57905,57906]"
    },
    {
      "src": "extcodesize: extcodesize [13944,13955]",
      "dest": "extcodesize: extcodesize [13514,13525]"
    },
    {
      "src": "binary_expression [48544,48570]",
      "dest": "binary_expression [56291,56317]"
    },
    {
      "src": "primitive_type [48196,48203]",
      "dest": "primitive_type [55835,55842]"
    },
    {
      "src": "(: ( [30640,30641]",
      "dest": "(: ( [30639,30640]"
    },
    {
      "src": "(: ( [34134,34135]",
      "dest": "(: ( [34301,34302]"
    },
    {
      "src": "(: ( [6995,6996]",
      "dest": "(: ( [6522,6523]"
    },
    {
      "src": "indexed: indexed [4715,4722]",
      "dest": "indexed: indexed [4222,4229]"
    },
    {
      "src": "(: ( [10670,10671]",
      "dest": "(: ( [10217,10218]"
    },
    {
      "src": "): ) [13963,13964]",
      "dest": "): ) [13533,13534]"
    },
    {
      "src": "pure: pure [8865,8869]",
      "dest": "pure: pure [8412,8416]"
    },
    {
      "src": "comment: /**      * @dev Throws if called by any account other than the owner.      */ [34649,34728]",
      "dest": "comment: /**      * @dev Throws if called by any account other than the owner.      */ [34816,34895]"
    },
    {
      "src": "inheritance_specifier [39777,39792]",
      "dest": "inheritance_specifier [43897,43912]"
    },
    {
      "src": "call_argument [43164,43174]",
      "dest": "call_argument [47336,47346]"
    },
    {
      "src": "function: function [26540,26548]",
      "dest": "function: function [26539,26547]"
    },
    {
      "src": "call_expression [11392,11420]",
      "dest": "call_expression [10939,10967]"
    },
    {
      "src": "member_expression [50491,50501]",
      "dest": "member_expression [57585,57595]"
    },
    {
      "src": "type_name [10069,10076]",
      "dest": "type_name [9616,9623]"
    },
    {
      "src": "identifier: increaseAllowance [27956,27973]",
      "dest": "identifier: increaseAllowance [27955,27972]"
    },
    {
      "src": "}: } [52089,52090]",
      "dest": "}: } [60012,60013]"
    },
    {
      "src": "call_argument [27358,27367]",
      "dest": "call_argument [27357,27366]"
    },
    {
      "src": "parameter [17097,17111]",
      "dest": "parameter [16670,16684]"
    },
    {
      "src": "pure: pure [8401,8405]",
      "dest": "pure: pure [7948,7952]"
    },
    {
      "src": "): ) [49482,49483]",
      "dest": "): ) [57173,57174]"
    },
    {
      "src": "visibility [36464,36472]",
      "dest": "visibility [36891,36899]"
    },
    {
      "src": "{: { [48525,48526]",
      "dest": "{: { [56272,56273]"
    },
    {
      "src": "comment: /**      * @dev Collect CRV tokens minted by staking at gauge      */ [50936,51007]",
      "dest": "comment: /**      * @dev Collect CRV tokens minted by staking at gauge      */ [58859,58930]"
    },
    {
      "src": "call_argument [8479,8508]",
      "dest": "call_argument [8026,8055]"
    },
    {
      "src": "identifier: _decimals [25427,25436]",
      "dest": "identifier: _decimals [25426,25435]"
    },
    {
      "src": "}: } [26392,26393]",
      "dest": "}: } [26391,26392]"
    },
    {
      "src": "expression_statement [51065,51100]",
      "dest": "expression_statement [58988,59023]"
    },
    {
      "src": "type_name [17957,17963]",
      "dest": "type_name [17530,17536]"
    },
    {
      "src": "]: ] [27450,27451]",
      "dest": "]: ] [27449,27450]"
    },
    {
      "src": "): ) [15088,15089]",
      "dest": "): ) [14661,14662]"
    },
    {
      "src": "override_specifier [26605,26613]",
      "dest": "override_specifier [26604,26612]"
    },
    {
      "src": "return_statement [8522,8531]",
      "dest": "return_statement [8069,8078]"
    },
    {
      "src": "identifier: _mint [30340,30345]",
      "dest": "identifier: _mint [30339,30344]"
    },
    {
      "src": ":: : [15220,15221]",
      "dest": ":: : [14793,14794]"
    },
    {
      "src": "event_definition [42212,42273]",
      "dest": "event_definition [46384,46445]"
    },
    {
      "src": "comment: /**  * @title TrueFi Pool  * @dev Lending pool which uses curve.fi to store idle funds  * Earn high interest rates on currency deposits through uncollateralized loans  *  * Funds deposited in this pool are NOT LIQUID!  * Exiting the pool will withdraw a basket of LoanTokens backing the pool  * After exiting, an account will need to wait for LoanTokens to expire and burn them  * It is recommended to perform a zap or swap tokens on Uniswap for liquidity  *  * Funds are managed through an external function to save gas on deposits  */ [39185,39732]",
      "dest": "comment: /**  * @title TrueFi Pool  * @dev Lending pool which uses curve.fi to store idle funds  * Earn high interest rates on currency deposits through uncollateralized loans  *  * Funds deposited in this pool are NOT LIQUID!  * Exiting the pool will withdraw a basket of LoanTokens backing the pool  * After exiting, an account will need to wait for LoanTokens to expire and burn them  * It is recommended to perform a zap or swap tokens on Uniswap for liquidity  *  * Funds are managed through an external function to save gas on deposits  */ [43305,43852]"
    },
    {
      "src": "yul_evm_builtin [18694,18700]",
      "dest": "yul_evm_builtin [18267,18273]"
    },
    {
      "src": "=: = [35332,35333]",
      "dest": "=: = [35499,35500]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [8546,8815]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [8093,8362]"
    },
    {
      "src": "visibility [44889,44897]",
      "dest": "visibility [49508,49516]"
    },
    {
      "src": "function: function [35507,35515]",
      "dest": "function: function [35674,35682]"
    },
    {
      "src": "identifier: a [10679,10680]",
      "dest": "identifier: a [10226,10227]"
    },
    {
      "src": "primitive_type [45178,45185]",
      "dest": "primitive_type [54147,54154]"
    },
    {
      "src": "address: address [14953,14960]",
      "dest": "address: address [14526,14533]"
    },
    {
      "src": "identifier: b [9292,9293]",
      "dest": "identifier: b [8839,8840]"
    },
    {
      "src": ",: , [50556,50557]",
      "dest": ",: , [57650,57651]"
    },
    {
      "src": "identifier: block [52056,52061]",
      "dest": "identifier: block [59979,59984]"
    },
    {
      "src": "(: ( [49302,49303]",
      "dest": "(: ( [47565,47566]"
    },
    {
      "src": "binary_expression [10014,10020]",
      "dest": "binary_expression [9561,9567]"
    },
    {
      "src": "identifier: amount [42035,42041]",
      "dest": "identifier: amount [46207,46213]"
    },
    {
      "src": "primitive_type [2690,2697]",
      "dest": "primitive_type [2194,2201]"
    },
    {
      "src": "): ) [41540,41541]",
      "dest": "): ) [45712,45713]"
    },
    {
      "src": "member_expression [45129,45145]",
      "dest": "member_expression [49871,49887]"
    },
    {
      "src": "call_expression [53063,53081]",
      "dest": "call_expression [60984,61002]"
    },
    {
      "src": "function_definition [36731,36889]",
      "dest": "function_definition [37158,37316]"
    },
    {
      "src": "address: address [34077,34084]",
      "dest": "address: address [34244,34251]"
    },
    {
      "src": "=: = [34371,34372]",
      "dest": "=: = [34538,34539]"
    },
    {
      "src": "type_name [23629,23636]",
      "dest": "type_name [23628,23635]"
    },
    {
      "src": "comment: // File: contracts/truefi/common/UpgradeableOwnable.sol [33436,33491]",
      "dest": "comment: // pragma solidity ^0.6.0; [18498,18524]"
    },
    {
      "src": "(: ( [35533,35534]",
      "dest": "(: ( [35700,35701]"
    },
    {
      "src": "member_expression [19566,19576]",
      "dest": "member_expression [19159,19169]"
    },
    {
      "src": "function_body [35577,35751]",
      "dest": "function_body [35744,35918]"
    },
    {
      "src": "function_body [26629,26709]",
      "dest": "function_body [26628,26708]"
    },
    {
      "src": "function_body [18016,18851]",
      "dest": "function_body [17589,18424]"
    },
    {
      "src": "identifier: errorMessage [16566,16578]",
      "dest": "identifier: errorMessage [16139,16151]"
    },
    {
      "src": "identifier: fee [45493,45496]",
      "dest": "identifier: fee [50286,50289]"
    },
    {
      "src": "=: = [43035,43036]",
      "dest": "=: = [47207,47208]"
    },
    {
      "src": "identifier: approve [43148,43155]",
      "dest": "identifier: approve [47320,47327]"
    },
    {
      "src": "primitive_type [26276,26283]",
      "dest": "primitive_type [26275,26282]"
    },
    {
      "src": "(: ( [32113,32114]",
      "dest": "(: ( [32112,32113]"
    },
    {
      "src": "(: ( [30433,30434]",
      "dest": "(: ( [30432,30433]"
    },
    {
      "src": "): ) [28812,28813]",
      "dest": "): ) [28811,28812]"
    },
    {
      "src": "comment: /**  * @dev Collection of functions related to the address type  */ [12896,12965]",
      "dest": "comment: /**  * @dev Collection of functions related to the address type  */ [12463,12532]"
    },
    {
      "src": ",: , [42828,42829]",
      "dest": ",: , [47000,47001]"
    },
    {
      "src": "inheritance_specifier [23505,23518]",
      "dest": "inheritance_specifier [23504,23517]"
    },
    {
      "src": "variable_declaration_tuple [18160,18199]",
      "dest": "variable_declaration_tuple [17733,17772]"
    },
    {
      "src": ".: . [43648,43649]",
      "dest": ".: . [48044,48045]"
    },
    {
      "src": "visibility [29581,29589]",
      "dest": "visibility [29580,29588]"
    },
    {
      "src": "expression_statement [45650,45717]",
      "dest": "expression_statement [50443,50510]"
    },
    {
      "src": "uint256: uint256 [41824,41831]",
      "dest": "uint256: uint256 [45996,46003]"
    },
    {
      "src": "identifier: amount [52288,52294]",
      "dest": "identifier: amount [60209,60215]"
    },
    {
      "src": "<: < [44655,44656]",
      "dest": "<: < [49274,49275]"
    },
    {
      "src": "(: ( [12656,12657]",
      "dest": "(: ( [12203,12204]"
    },
    {
      "src": "primitive_type [37129,37135]",
      "dest": "primitive_type [37556,37562]"
    },
    {
      "src": "(: ( [8369,8370]",
      "dest": "(: ( [7916,7917]"
    },
    {
      "src": "}: } [38469,38470]",
      "dest": "}: } [38991,38992]"
    },
    {
      "src": "comment: // ===== THIS CONTRACT IS INITIALIZABLE ====== [39896,39942]",
      "dest": "comment: // ===== THIS CONTRACT IS INITIALIZABLE ====== [44016,44062]"
    },
    {
      "src": "identifier: IUniswapRouter [40280,40294]",
      "dest": "identifier: IUniswapRouter [44400,44414]"
    },
    {
      "src": "inheritance_specifier [34047,34060]",
      "dest": "inheritance_specifier [34214,34227]"
    },
    {
      "src": "function_definition [12644,12810]",
      "dest": "function_definition [12191,12357]"
    },
    {
      "src": "primitive_type [30426,30433]",
      "dest": "primitive_type [30425,30432]"
    },
    {
      "src": "type_name [8370,8377]",
      "dest": "type_name [7917,7924]"
    },
    {
      "src": "function: function [38214,38222]",
      "dest": "function: function [38736,38744]"
    },
    {
      "src": "type_name [50736,50743]",
      "dest": "type_name [58650,58657]"
    },
    {
      "src": "call_argument [46897,46907]",
      "dest": "call_argument [51855,51865]"
    },
    {
      "src": "function: function [49047,49055]",
      "dest": "function: function [56862,56870]"
    },
    {
      "src": "{: { [50778,50779]",
      "dest": "{: { [58703,58704]"
    },
    {
      "src": "event: event [41777,41782]",
      "dest": "event: event [45949,45954]"
    },
    {
      "src": "primitive_type [17132,17139]",
      "dest": "primitive_type [16705,16712]"
    },
    {
      "src": "returns: returns [17666,17673]",
      "dest": "returns: returns [17239,17246]"
    },
    {
      "src": "): ) [4745,4746]",
      "dest": "): ) [4252,4253]"
    },
    {
      "src": "identifier: allowance [3023,3032]",
      "dest": "identifier: allowance [2527,2536]"
    },
    {
      "src": "): ) [34753,34754]",
      "dest": "): ) [34920,34921]"
    },
    {
      "src": "binary_expression [10105,10115]",
      "dest": "binary_expression [9652,9662]"
    },
    {
      "src": "function: function [27183,27191]",
      "dest": "function: function [27182,27190]"
    },
    {
      "src": "}: } [25790,25791]",
      "dest": "}: } [25789,25790]"
    },
    {
      "src": "state_mutability [25388,25392]",
      "dest": "state_mutability [25387,25391]"
    },
    {
      "src": "identifier: approve [51926,51933]",
      "dest": "identifier: approve [59849,59856]"
    },
    {
      "src": "call_argument [26649,26661]",
      "dest": "call_argument [26648,26660]"
    },
    {
      "src": "memory: memory [17964,17970]",
      "dest": "memory: memory [17537,17543]"
    },
    {
      "src": "call_argument [27404,27416]",
      "dest": "call_argument [27403,27415]"
    },
    {
      "src": "(: ( [37818,37819]",
      "dest": "(: ( [38340,38341]"
    },
    {
      "src": "==: == [49314,49316]",
      "dest": "==: == [47577,47579]"
    },
    {
      "src": "virtual: virtual [27297,27304]",
      "dest": "virtual: virtual [27296,27303]"
    },
    {
      "src": "identifier: returndata_size [18722,18737]",
      "dest": "identifier: returndata_size [18295,18310]"
    },
    {
      "src": "function: function [36556,36564]",
      "dest": "function: function [36983,36991]"
    },
    {
      "src": "primitive_type [36985,36992]",
      "dest": "primitive_type [37412,37419]"
    },
    {
      "src": "indexed: indexed [42236,42243]",
      "dest": "indexed: indexed [46408,46415]"
    },
    {
      "src": "primitive_type [17920,17925]",
      "dest": "primitive_type [17493,17498]"
    },
    {
      "src": "interface: interface [36480,36489]",
      "dest": "interface: interface [36907,36916]"
    },
    {
      "src": "(: ( [47261,47262]",
      "dest": "(: ( [52219,52220]"
    },
    {
      "src": "type_cast_expression [51934,51953]",
      "dest": "type_cast_expression [59857,59876]"
    },
    {
      "src": "identifier: nonReentrant [6983,6995]",
      "dest": "identifier: nonReentrant [6510,6522]"
    },
    {
      "src": "type_name [40965,40972]",
      "dest": "type_name [45137,45144]"
    },
    {
      "src": ".: . [45678,45679]",
      "dest": ".: . [50471,50472]"
    },
    {
      "src": "comment: /**      * @dev Currency token balance      * @return Currency token balance      */ [53497,53584]",
      "dest": "comment: /**      * @dev Currency token balance      * @return Currency token balance      */ [61418,61505]"
    },
    {
      "src": "): ) [29990,29991]",
      "dest": "): ) [29989,29990]"
    },
    {
      "src": "): ) [26660,26661]",
      "dest": "): ) [26659,26660]"
    },
    {
      "src": "identifier: _ENTERED [6472,6480]",
      "dest": "identifier: _ENTERED [5999,6007]"
    },
    {
      "src": "state_mutability [25724,25728]",
      "dest": "state_mutability [25723,25727]"
    },
    {
      "src": "memory: memory [24245,24251]",
      "dest": "memory: memory [24244,24250]"
    },
    {
      "src": "(: ( [36928,36929]",
      "dest": "(: ( [37355,37356]"
    },
    {
      "src": "revert: revert [18694,18700]",
      "dest": "revert: revert [18267,18273]"
    },
    {
      "src": "\": \" [32172,32173]",
      "dest": "\": \" [32171,32172]"
    },
    {
      "src": "function_definition [34562,34641]",
      "dest": "function_definition [34729,34808]"
    },
    {
      "src": "expression_statement [24315,24332]",
      "dest": "expression_statement [24314,24331]"
    },
    {
      "src": "(: ( [10013,10014]",
      "dest": "(: ( [9560,9561]"
    },
    {
      "src": "): ) [3814,3815]",
      "dest": "): ) [3321,3322]"
    },
    {
      "src": "visibility [23784,23791]",
      "dest": "visibility [23783,23790]"
    },
    {
      "src": "uint256: uint256 [8381,8388]",
      "dest": "uint256: uint256 [7928,7935]"
    },
    {
      "src": "address: address [51078,51085]",
      "dest": "address: address [59001,59008]"
    },
    {
      "src": "return_statement [9436,9445]",
      "dest": "return_statement [8983,8992]"
    },
    {
      "src": "function_body [29598,30050]",
      "dest": "function_body [29597,30049]"
    },
    {
      "src": "internal: internal [31089,31097]",
      "dest": "internal: internal [31088,31096]"
    },
    {
      "src": "internal: internal [13614,13622]",
      "dest": "internal: internal [13184,13192]"
    },
    {
      "src": "identifier: fee [44969,44972]",
      "dest": "identifier: fee [49671,49674]"
    },
    {
      "src": "identifier: owner [31935,31940]",
      "dest": "identifier: owner [31934,31939]"
    },
    {
      "src": "memory: memory [36673,36679]",
      "dest": "memory: memory [37100,37106]"
    },
    {
      "src": "identifier: cs [22033,22035]",
      "dest": "identifier: cs [21646,21648]"
    },
    {
      "src": "uint256: uint256 [8879,8886]",
      "dest": "uint256: uint256 [8426,8433]"
    },
    {
      "src": "function_definition [35204,35352]",
      "dest": "function_definition [35371,35519]"
    },
    {
      "src": "identifier: ______gap [22201,22210]",
      "dest": "identifier: ______gap [21814,21823]"
    },
    {
      "src": "): ) [10691,10692]",
      "dest": "): ) [10238,10239]"
    },
    {
      "src": "parameter [3783,3798]",
      "dest": "parameter [3290,3305]"
    },
    {
      "src": "function_body [24486,24517]",
      "dest": "function_body [24485,24516]"
    },
    {
      "src": "comment: // File: contracts/truefi/interface/ITrueLender.sol [38474,38525]",
      "dest": "comment: // pragma solidity 0.6.10; [21901,21927]"
    },
    {
      "src": "type_name [31951,31958]",
      "dest": "type_name [31950,31957]"
    },
    {
      "src": "identifier: msg [46328,46331]",
      "dest": "identifier: msg [51285,51288]"
    },
    {
      "src": "bool: bool [20784,20788]",
      "dest": "bool: bool [20397,20401]"
    },
    {
      "src": "call_expression [45129,45147]",
      "dest": "call_expression [49871,49889]"
    },
    {
      "src": "expression_statement [49295,49372]",
      "dest": "expression_statement [47558,47645]"
    },
    {
      "src": "comment: /**      * @dev Initialize pool      * @param __curvePool curve pool address      * @param __curveGauge curve gauge address      * @param __currencyToken curve pool underlying token      * @param __lender TrueLender address      * @param __uniRouter Uniswap router      */ [42281,42560]",
      "dest": "comment: /**      * @dev Initialize pool      * @param __curvePool curve pool address      * @param __curveGauge curve gauge address      * @param __currencyToken curve pool underlying token      * @param __lender TrueLender address      * @param __uniRouter Uniswap router      */ [46453,46732]"
    },
    {
      "src": "identifier: amount [27276,27282]",
      "dest": "identifier: amount [27275,27281]"
    },
    {
      "src": "type_name [26041,26048]",
      "dest": "type_name [26040,26047]"
    },
    {
      "src": "address: address [33367,33374]",
      "dest": "address: address [33366,33373]"
    },
    {
      "src": "identifier: minter [36331,36337]",
      "dest": "identifier: minter [36758,36764]"
    },
    {
      "src": ":=: := [22036,22038]",
      "dest": ":=: := [21649,21651]"
    },
    {
      "src": ",: , [12666,12667]",
      "dest": ",: , [12213,12214]"
    },
    {
      "src": "identifier: currencyAmount [47987,48001]",
      "dest": "identifier: currencyAmount [55557,55571]"
    },
    {
      "src": "type_name [12053,12060]",
      "dest": "type_name [11600,11607]"
    },
    {
      "src": "boolean_literal [26167,26171]",
      "dest": "boolean_literal [26166,26170]"
    },
    {
      "src": "primitive_type [44601,44608]",
      "dest": "primitive_type [49220,49227]"
    },
    {
      "src": "identifier: ICurveMinter [36358,36370]",
      "dest": "identifier: ICurveMinter [36785,36797]"
    },
    {
      "src": "parameter [36305,36312]",
      "dest": "parameter [36732,36739]"
    },
    {
      "src": "=: = [53020,53021]",
      "dest": "=: = [60941,60942]"
    },
    {
      "src": "contract_body [2132,4750]",
      "dest": "contract_body [1636,4257]"
    },
    {
      "src": "primitive_type [17675,17680]",
      "dest": "primitive_type [17248,17253]"
    },
    {
      "src": "(: ( [40705,40706]",
      "dest": "(: ( [44877,44878]"
    },
    {
      "src": "string_literal [27464,27506]",
      "dest": "string_literal [27463,27505]"
    },
    {
      "src": "(: ( [36447,36448]",
      "dest": "(: ( [36874,36875]"
    },
    {
      "src": "(: ( [34599,34600]",
      "dest": "(: ( [34766,34767]"
    },
    {
      "src": "member_expression [44686,44706]",
      "dest": "member_expression [49305,49325]"
    },
    {
      "src": "number_literal: 4 [36670,36671]",
      "dest": "number_literal: 4 [37097,37098]"
    },
    {
      "src": "call_expression [18035,18053]",
      "dest": "call_expression [17608,17626]"
    },
    {
      "src": "identifier: msg [46897,46900]",
      "dest": "identifier: msg [51855,51858]"
    },
    {
      "src": "return_type_definition [43938,43955]",
      "dest": "return_type_definition [48234,48251]"
    },
    {
      "src": "identifier: errorMessage [17843,17855]",
      "dest": "identifier: errorMessage [17416,17428]"
    },
    {
      "src": "view: view [2401,2405]",
      "dest": "view: view [1905,1909]"
    },
    {
      "src": "identifier: fee [50574,50577]",
      "dest": "identifier: fee [57668,57671]"
    },
    {
      "src": "address: address [23618,23625]",
      "dest": "address: address [23617,23624]"
    },
    {
      "src": "function: function [36322,36330]",
      "dest": "function: function [36749,36757]"
    },
    {
      "src": "address: address [31951,31958]",
      "dest": "address: address [31950,31957]"
    },
    {
      "src": "number_literal: 0 [29719,29720]",
      "dest": "number_literal: 0 [29718,29719]"
    },
    {
      "src": "identifier: pull [48457,48461]",
      "dest": "identifier: pull [56204,56208]"
    },
    {
      "src": "type_name [31056,31063]",
      "dest": "type_name [31055,31062]"
    },
    {
      "src": "): ) [50917,50918]",
      "dest": "): ) [58842,58843]"
    },
    {
      "src": "identifier: _mint [45767,45772]",
      "dest": "identifier: _mint [50560,50565]"
    },
    {
      "src": "bytes: bytes [16167,16172]",
      "dest": "bytes: bytes [15740,15745]"
    },
    {
      "src": "virtual: virtual [30388,30395]",
      "dest": "virtual: virtual [30387,30394]"
    },
    {
      "src": "comment: // Reserved storage space to allow for layout changes in the future. [22107,22175]",
      "dest": "comment: // Reserved storage space to allow for layout changes in the future. [21720,21788]"
    },
    {
      "src": "}: } [21337,21338]",
      "dest": "}: } [20950,20951]"
    },
    {
      "src": "call_expression [47841,47929]",
      "dest": "call_expression [55410,55499]"
    },
    {
      "src": "bool: bool [13637,13641]",
      "dest": "bool: bool [13207,13211]"
    },
    {
      "src": "parameter [24218,24236]",
      "dest": "parameter [24217,24235]"
    },
    {
      "src": "identifier: _ [34844,34845]",
      "dest": "identifier: _ [35011,35012]"
    },
    {
      "src": "identifier: _allowances [26358,26369]",
      "dest": "identifier: _allowances [26357,26368]"
    },
    {
      "src": "identifier: _msgSender [28801,28811]",
      "dest": "identifier: _msgSender [28800,28810]"
    },
    {
      "src": "call_expression [52923,52951]",
      "dest": "call_expression [60844,60872]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [8965,9254]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [8512,8801]"
    },
    {
      "src": "emit_statement [31409,31452]",
      "dest": "emit_statement [31408,31451]"
    },
    {
      "src": "comment: // curve.fi data [40499,40515]",
      "dest": "comment: // curve.fi data [44671,44687]"
    },
    {
      "src": "): ) [39107,39108]",
      "dest": "): ) [39665,39666]"
    },
    {
      "src": "type_name [51820,51827]",
      "dest": "type_name [59743,59750]"
    },
    {
      "src": "identifier: b [10690,10691]",
      "dest": "identifier: b [10237,10238]"
    },
    {
      "src": "(: ( [52808,52809]",
      "dest": "(: ( [60729,60730]"
    },
    {
      "src": "identifier: add_liquidity [36648,36661]",
      "dest": "identifier: add_liquidity [37075,37088]"
    },
    {
      "src": "return_type_definition [27314,27328]",
      "dest": "return_type_definition [27313,27327]"
    },
    {
      "src": "(: ( [28786,28787]",
      "dest": "(: ( [28785,28786]"
    },
    {
      "src": "struct_expression [18202,18232]",
      "dest": "struct_expression [17775,17805]"
    },
    {
      "src": "identifier: minted [40992,40998]",
      "dest": "identifier: minted [45164,45170]"
    },
    {
      "src": "identifier: require [45860,45867]",
      "dest": "identifier: require [50705,50712]"
    },
    {
      "src": "): ) [23710,23711]",
      "dest": "): ) [23709,23710]"
    },
    {
      "src": "uint256: uint256 [44876,44883]",
      "dest": "uint256: uint256 [49495,49502]"
    },
    {
      "src": "}: } [53732,53733]",
      "dest": "}: } [61653,61654]"
    },
    {
      "src": "): ) [29760,29761]",
      "dest": "): ) [29759,29760]"
    },
    {
      "src": "mapping: mapping [23683,23690]",
      "dest": "mapping: mapping [23682,23689]"
    },
    {
      "src": "call_expression [29690,29761]",
      "dest": "call_expression [29689,29760]"
    },
    {
      "src": "visibility [38054,38062]",
      "dest": "visibility [38576,38584]"
    },
    {
      "src": "identifier: __curveGauge [42641,42653]",
      "dest": "identifier: __curveGauge [46813,46825]"
    },
    {
      "src": "type_cast_expression [53692,53705]",
      "dest": "type_cast_expression [61613,61626]"
    },
    {
      "src": "primitive_type [26623,26627]",
      "dest": "primitive_type [26622,26626]"
    },
    {
      "src": "identifier: getPricePerFullShare [35878,35898]",
      "dest": "identifier: getPricePerFullShare [36140,36160]"
    },
    {
      "src": "uint256: uint256 [29559,29566]",
      "dest": "uint256: uint256 [29558,29565]"
    },
    {
      "src": ",: , [30683,30684]",
      "dest": ",: , [30682,30683]"
    },
    {
      "src": "state_mutability [38609,38613]",
      "dest": "state_mutability [39149,39153]"
    },
    {
      "src": ".: . [45899,45900]",
      "dest": ".: . [50744,50745]"
    },
    {
      "src": "contract_declaration [19445,19828]",
      "dest": "contract_declaration [19038,19421]"
    },
    {
      "src": "\": \" [15231,15232]",
      "dest": "\": \" [14804,14805]"
    },
    {
      "src": "uint256: uint256 [6447,6454]",
      "dest": "uint256: uint256 [5974,5981]"
    },
    {
      "src": "type_name [16552,16558]",
      "dest": "type_name [16125,16131]"
    },
    {
      "src": "bool: bool [3834,3838]",
      "dest": "bool: bool [3341,3345]"
    },
    {
      "src": "identifier: cs [21996,21998]",
      "dest": "identifier: cs [21609,21611]"
    },
    {
      "src": "identifier: b [11447,11448]",
      "dest": "identifier: b [10994,10995]"
    },
    {
      "src": "string [18055,18086]",
      "dest": "string [17628,17659]"
    },
    {
      "src": "private: private [23784,23791]",
      "dest": "private: private [23783,23790]"
    },
    {
      "src": "type_name [10682,10689]",
      "dest": "type_name [10229,10236]"
    },
    {
      "src": "): ) [9353,9354]",
      "dest": "): ) [8900,8901]"
    },
    {
      "src": "type_name [4707,4714]",
      "dest": "type_name [4214,4221]"
    },
    {
      "src": "\": \" [29639,29640]",
      "dest": "\": \" [29638,29639]"
    },
    {
      "src": "=: = [21412,21413]",
      "dest": "=: = [21025,21026]"
    },
    {
      "src": "assignment_expression [7222,7240]",
      "dest": "assignment_expression [6749,6767]"
    },
    {
      "src": "(: ( [15180,15181]",
      "dest": "(: ( [14753,14754]"
    },
    {
      "src": "primitive_type [2415,2422]",
      "dest": "primitive_type [1919,1926]"
    },
    {
      "src": ",: , [12122,12123]",
      "dest": ",: , [11669,11670]"
    },
    {
      "src": "identifier: this [52049,52053]",
      "dest": "identifier: this [59972,59976]"
    },
    {
      "src": "function_definition [16495,16691]",
      "dest": "function_definition [16068,16264]"
    },
    {
      "src": "call_argument [50574,50577]",
      "dest": "call_argument [57668,57671]"
    },
    {
      "src": "\": \" [47886,47887]",
      "dest": "\": \" [55455,55456]"
    },
    {
      "src": "parameter [39041,39057]",
      "dest": "parameter [39599,39615]"
    },
    {
      "src": "member_expression [47316,47343]",
      "dest": "member_expression [52274,52301]"
    },
    {
      "src": "bytes: bytes [17113,17118]",
      "dest": "bytes: bytes [16686,16691]"
    },
    {
      "src": "assignment_expression [32672,32693]",
      "dest": "assignment_expression [32671,32692]"
    },
    {
      "src": ".: . [45776,45777]",
      "dest": ".: . [50569,50570]"
    },
    {
      "src": "/: / [11445,11446]",
      "dest": "/: / [10992,10993]"
    },
    {
      "src": "identifier: require [49155,49162]",
      "dest": "identifier: require [56981,56988]"
    },
    {
      "src": "(: ( [43234,43235]",
      "dest": "(: ( [47406,47407]"
    },
    {
      "src": "primitive_type [23618,23625]",
      "dest": "primitive_type [23617,23624]"
    },
    {
      "src": "): ) [9776,9777]",
      "dest": "): ) [9323,9324]"
    },
    {
      "src": "primitive_type [4732,4739]",
      "dest": "primitive_type [4239,4246]"
    },
    {
      "src": "function: function [34562,34570]",
      "dest": "function: function [34729,34737]"
    },
    {
      "src": "{: { [21384,21385]",
      "dest": "{: { [20997,20998]"
    },
    {
      "src": "primitive_type [17097,17104]",
      "dest": "primitive_type [16670,16677]"
    },
    {
      "src": ",: , [26572,26573]",
      "dest": ",: , [26571,26572]"
    },
    {
      "src": "): ) [17780,17781]",
      "dest": "): ) [17353,17354]"
    },
    {
      "src": "visibility [6407,6414]",
      "dest": "visibility [5934,5941]"
    },
    {
      "src": "visibility [26057,26063]",
      "dest": "visibility [26056,26062]"
    },
    {
      "src": "interface: interface [37539,37548]",
      "dest": "interface: interface [38061,38070]"
    },
    {
      "src": "identifier: _burn [46797,46802]",
      "dest": "identifier: _burn [51755,51760]"
    },
    {
      "src": "visibility [52788,52794]",
      "dest": "visibility [60709,60715]"
    },
    {
      "src": "address: address [26022,26029]",
      "dest": "address: address [26021,26028]"
    },
    {
      "src": "): ) [27288,27289]",
      "dest": "): ) [27287,27288]"
    },
    {
      "src": "=: = [45480,45481]",
      "dest": "=: = [50273,50274]"
    },
    {
      "src": "user_defined_type [40141,40152]",
      "dest": "user_defined_type [44261,44272]"
    },
    {
      "src": "type_name [51851,51860]",
      "dest": "type_name [59774,59783]"
    },
    {
      "src": ",: , [52039,52040]",
      "dest": ",: , [59962,59963]"
    },
    {
      "src": "identifier: account [31064,31071]",
      "dest": "identifier: account [31063,31070]"
    },
    {
      "src": "type_name [13845,13852]",
      "dest": "type_name [13415,13422]"
    },
    {
      "src": "call_expression [31197,31246]",
      "dest": "call_expression [31196,31245]"
    },
    {
      "src": "identifier: account [31290,31297]",
      "dest": "identifier: account [31289,31296]"
    },
    {
      "src": "): ) [48866,48867]",
      "dest": "): ) [56681,56682]"
    },
    {
      "src": ",: , [49085,49086]",
      "dest": ",: , [56900,56901]"
    },
    {
      "src": ",: , [30692,30693]",
      "dest": ",: , [30691,30692]"
    },
    {
      "src": "function_definition [33304,33429]",
      "dest": "function_definition [33303,33428]"
    },
    {
      "src": "): ) [21179,21180]",
      "dest": "): ) [20792,20793]"
    },
    {
      "src": "identifier: returndata [18188,18198]",
      "dest": "identifier: returndata [17761,17771]"
    },
    {
      "src": "returns: returns [37154,37161]",
      "dest": "returns: returns [37581,37588]"
    },
    {
      "src": "{: { [19657,19658]",
      "dest": "{: { [19250,19251]"
    },
    {
      "src": "): ) [51098,51099]",
      "dest": "): ) [59021,59022]"
    },
    {
      "src": "for: for [39824,39827]",
      "dest": "for: for [43944,43947]"
    },
    {
      "src": "member_expression [46803,46813]",
      "dest": "member_expression [51761,51771]"
    },
    {
      "src": "(: ( [21111,21112]",
      "dest": "(: ( [20724,20725]"
    },
    {
      "src": "event_paramater [40965,40982]",
      "dest": "event_paramater [45137,45154]"
    },
    {
      "src": "member_expression [50825,50835]",
      "dest": "member_expression [58750,58760]"
    },
    {
      "src": "identifier: _owner [34093,34099]",
      "dest": "identifier: _owner [34260,34266]"
    },
    {
      "src": "parameter [9284,9293]",
      "dest": "parameter [8831,8840]"
    },
    {
      "src": "parameter [24471,24484]",
      "dest": "parameter [24470,24483]"
    },
    {
      "src": "internal: internal [29581,29589]",
      "dest": "internal: internal [29580,29588]"
    },
    {
      "src": "call_argument [47068,47078]",
      "dest": "call_argument [52026,52036]"
    },
    {
      "src": "identifier: allowance [26251,26260]",
      "dest": "identifier: allowance [26250,26259]"
    },
    {
      "src": "): ) [12094,12095]",
      "dest": "): ) [11641,11642]"
    },
    {
      "src": "visibility [3065,3073]",
      "dest": "visibility [2569,2577]"
    },
    {
      "src": "state_variable_declaration [40141,40172]",
      "dest": "state_variable_declaration [44261,44292]"
    },
    {
      "src": "parameter [36689,36712]",
      "dest": "parameter [37116,37139]"
    },
    {
      "src": "uint8: uint8 [23833,23838]",
      "dest": "uint8: uint8 [23832,23837]"
    },
    {
      "src": "type_name [13597,13604]",
      "dest": "type_name [13167,13174]"
    },
    {
      "src": "virtual: virtual [19514,19521]",
      "dest": "virtual: virtual [19107,19114]"
    },
    {
      "src": "): ) [47928,47929]",
      "dest": "): ) [55498,55499]"
    },
    {
      "src": "variable_declaration [52986,53019]",
      "dest": "variable_declaration [60907,60940]"
    },
    {
      "src": "binary_expression [9374,9380]",
      "dest": "binary_expression [8921,8927]"
    },
    {
      "src": "comment: // REMOVAL OR REORDER OF VARIABLES WILL RESULT [40000,40046]",
      "dest": "comment: // REMOVAL OR REORDER OF VARIABLES WILL RESULT [44120,44166]"
    },
    {
      "src": "memory: memory [18008,18014]",
      "dest": "memory: memory [17581,17587]"
    },
    {
      "src": "private: private [22193,22200]",
      "dest": "private: private [21806,21813]"
    },
    {
      "src": "(: ( [37128,37129]",
      "dest": "(: ( [37555,37556]"
    },
    {
      "src": "type_name [17920,17925]",
      "dest": "type_name [17493,17498]"
    },
    {
      "src": "identifier: _owner [34627,34633]",
      "dest": "identifier: _owner [34794,34800]"
    },
    {
      "src": "): ) [43188,43189]",
      "dest": "): ) [47360,47361]"
    },
    {
      "src": "identifier: sender [29864,29870]",
      "dest": "identifier: sender [29863,29869]"
    },
    {
      "src": "assignment_expression [24315,24331]",
      "dest": "assignment_expression [24314,24330]"
    },
    {
      "src": "identifier: spender [32206,32213]",
      "dest": "identifier: spender [32205,32212]"
    },
    {
      "src": "member_expression [47344,47354]",
      "dest": "member_expression [52302,52312]"
    },
    {
      "src": "return: return [12107,12113]",
      "dest": "return: return [11654,11660]"
    },
    {
      "src": "identifier: currencyBalance [49466,49481]",
      "dest": "identifier: currencyBalance [57157,57172]"
    },
    {
      "src": "comment: // Booleans are more expensive than uint256 or any type that takes up a full [5640,5716]",
      "dest": "comment: // Booleans are more expensive than uint256 or any type that takes up a full [5167,5243]"
    },
    {
      "src": "[: [ [51858,51859]",
      "dest": "[: [ [59781,59782]"
    },
    {
      "src": "call_expression [27438,27450]",
      "dest": "call_expression [27437,27449]"
    },
    {
      "src": "return_type_definition [19634,19656]",
      "dest": "return_type_definition [19227,19249]"
    },
    {
      "src": "parameter [14953,14978]",
      "dest": "parameter [14526,14551]"
    },
    {
      "src": "return_type_definition [38614,38631]",
      "dest": "return_type_definition [39154,39171]"
    },
    {
      "src": "}: } [36475,36476]",
      "dest": "}: } [36902,36903]"
    },
    {
      "src": "return_type_definition [35915,35932]",
      "dest": "return_type_definition [36177,36194]"
    },
    {
      "src": "interface_declaration [36015,36211]",
      "dest": "interface_declaration [36442,36638]"
    },
    {
      "src": "address: address [36263,36270]",
      "dest": "address: address [36690,36697]"
    },
    {
      "src": "call_argument [16670,16682]",
      "dest": "call_argument [16243,16255]"
    },
    {
      "src": "\": \" [29723,29724]",
      "dest": "\": \" [29722,29723]"
    },
    {
      "src": "call_expression [43630,43673]",
      "dest": "call_expression [48026,48069]"
    },
    {
      "src": "interface_declaration [36215,36476]",
      "dest": "interface_declaration [36642,36903]"
    },
    {
      "src": "identifier: sub [50378,50381]",
      "dest": "identifier: sub [57472,57475]"
    },
    {
      "src": "comment: /**      * @dev Emitted when funds are borrowed from pool      * @param borrower Borrower address      * @param amount Amount of funds borrowed from pool      * @param fee Fees collected from this transaction      */ [41550,41771]",
      "dest": "comment: /**      * @dev Emitted when funds are borrowed from pool      * @param borrower Borrower address      * @param amount Amount of funds borrowed from pool      * @param fee Fees collected from this transaction      */ [45722,45943]"
    },
    {
      "src": "call_expression [48045,48093]",
      "dest": "call_expression [55685,55733]"
    },
    {
      "src": "type_name [36929,36936]",
      "dest": "type_name [37356,37363]"
    },
    {
      "src": "primitive_type [3088,3095]",
      "dest": "primitive_type [2592,2599]"
    },
    {
      "src": "identifier: _uniRouter [43068,43078]",
      "dest": "identifier: _uniRouter [47240,47250]"
    },
    {
      "src": "assignment_expression [21274,21293]",
      "dest": "assignment_expression [20887,20906]"
    },
    {
      "src": "visibility [3816,3824]",
      "dest": "visibility [3323,3331]"
    },
    {
      "src": "array_access [28850,28884]",
      "dest": "array_access [28849,28883]"
    },
    {
      "src": "uint256: uint256 [42257,42264]",
      "dest": "uint256: uint256 [46429,46436]"
    },
    {
      "src": "view: view [43589,43593]",
      "dest": "view: view [47985,47989]"
    },
    {
      "src": "type_cast_expression [30426,30436]",
      "dest": "type_cast_expression [30425,30435]"
    },
    {
      "src": "identifier: IUniswapRouter [42728,42742]",
      "dest": "identifier: IUniswapRouter [46900,46914]"
    },
    {
      "src": "identifier: amounts [36680,36687]",
      "dest": "identifier: amounts [37107,37114]"
    },
    {
      "src": "call_argument [50546,50556]",
      "dest": "call_argument [57640,57650]"
    },
    {
      "src": "identifier: distribute [38649,38659]",
      "dest": "identifier: distribute [39189,39199]"
    },
    {
      "src": "call_expression [44015,44067]",
      "dest": "call_expression [48798,48832]"
    },
    {
      "src": "): ) [30515,30516]",
      "dest": "): ) [30514,30515]"
    },
    {
      "src": "virtual: virtual [31098,31105]",
      "dest": "virtual: virtual [31097,31104]"
    },
    {
      "src": "type_name [20784,20788]",
      "dest": "type_name [20397,20401]"
    },
    {
      "src": "): ) [8854,8855]",
      "dest": "): ) [8401,8402]"
    },
    {
      "src": "returns: returns [25729,25736]",
      "dest": "returns: returns [25728,25735]"
    },
    {
      "src": "identifier: getPricePerFullShare [52952,52972]",
      "dest": "identifier: getPricePerFullShare [60873,60893]"
    },
    {
      "src": "): ) [34319,34320]",
      "dest": "): ) [34486,34487]"
    },
    {
      "src": "}: } [50925,50926]",
      "dest": "}: } [58850,58851]"
    },
    {
      "src": "type_name [40141,40152]",
      "dest": "type_name [44261,44272]"
    },
    {
      "src": "call_argument [28061,28073]",
      "dest": "call_argument [28060,28072]"
    },
    {
      "src": "=: = [9416,9417]",
      "dest": "=: = [8963,8964]"
    },
    {
      "src": "yul_function_call [13944,13964]",
      "dest": "yul_function_call [13514,13534]"
    },
    {
      "src": ",: , [26039,26040]",
      "dest": ",: , [26038,26039]"
    },
    {
      "src": "yul_identifier [18722,18737]",
      "dest": "yul_identifier [18295,18310]"
    },
    {
      "src": "identifier: name [24300,24304]",
      "dest": "identifier: name [24299,24303]"
    },
    {
      "src": "{: { [6549,6550]",
      "dest": "{: { [6076,6077]"
    },
    {
      "src": "(: ( [25690,25691]",
      "dest": "(: ( [25689,25690]"
    },
    {
      "src": "identifier: claimableFees [45825,45838]",
      "dest": "identifier: claimableFees [50618,50631]"
    },
    {
      "src": "external: external [38272,38280]",
      "dest": "external: external [38794,38802]"
    },
    {
      "src": "assembly_statement [18600,18757]",
      "dest": "assembly_statement [18173,18330]"
    },
    {
      "src": "primitive_type [6493,6500]",
      "dest": "primitive_type [6020,6027]"
    },
    {
      "src": "number_literal: 0 [34459,34460]",
      "dest": "number_literal: 0 [34626,34627]"
    },
    {
      "src": "(: ( [44706,44707]",
      "dest": "(: ( [49325,49326]"
    },
    {
      "src": "(: ( [48858,48859]",
      "dest": "(: ( [56673,56674]"
    },
    {
      "src": "(: ( [17164,17165]",
      "dest": "(: ( [16737,16738]"
    },
    {
      "src": "address: address [45156,45163]",
      "dest": "address: address [49959,49966]"
    },
    {
      "src": "array_access [28084,28109]",
      "dest": "array_access [28083,28108]"
    },
    {
      "src": "=: = [21213,21214]",
      "dest": "=: = [20826,20827]"
    },
    {
      "src": "identifier: div [45700,45703]",
      "dest": "identifier: div [50493,50496]"
    },
    {
      "src": "visibility [25532,25538]",
      "dest": "visibility [25531,25537]"
    },
    {
      "src": ".: . [44697,44698]",
      "dest": ".: . [49316,49317]"
    },
    {
      "src": "bool: bool [21193,21197]",
      "dest": "bool: bool [20806,20810]"
    },
    {
      "src": "!=: != [32041,32043]",
      "dest": "!=: != [32040,32042]"
    },
    {
      "src": "return_type_definition [17156,17178]",
      "dest": "return_type_definition [16729,16751]"
    },
    {
      "src": "call_expression [52390,52434]",
      "dest": "call_expression [60311,60355]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/utils/Address.sol [12817,12867]",
      "dest": "comment: // pragma solidity ^0.6.0; [7034,7060]"
    },
    {
      "src": "parameter [2690,2704]",
      "dest": "parameter [2194,2208]"
    },
    {
      "src": "returns: returns [17993,18000]",
      "dest": "returns: returns [17566,17573]"
    },
    {
      "src": "call_expression [21074,21180]",
      "dest": "call_expression [20687,20793]"
    },
    {
      "src": "state_mutability [19621,19625]",
      "dest": "state_mutability [19214,19218]"
    },
    {
      "src": "}: } [17863,17864]",
      "dest": "}: } [17436,17437]"
    },
    {
      "src": "identifier: _curvePool [52923,52933]",
      "dest": "identifier: _curvePool [60844,60854]"
    },
    {
      "src": "comment: // ================ WARNING ================== [39844,39890]",
      "dest": "comment: // ================ WARNING ================== [43964,44010]"
    },
    {
      "src": "uint256: uint256 [12053,12060]",
      "dest": "uint256: uint256 [11600,11607]"
    },
    {
      "src": "): ) [19546,19547]",
      "dest": "): ) [19139,19140]"
    },
    {
      "src": "primitive_type [41189,41196]",
      "dest": "primitive_type [45361,45368]"
    },
    {
      "src": "bool: bool [26623,26627]",
      "dest": "bool: bool [26622,26626]"
    },
    {
      "src": "identifier: ensureEnoughTokensAreAvailable [48664,48694]",
      "dest": "identifier: ensureEnoughTokensAreAvailable [56412,56442]"
    },
    {
      "src": "inheritance_specifier [39757,39768]",
      "dest": "inheritance_specifier [43877,43888]"
    },
    {
      "src": "): ) [35313,35314]",
      "dest": "): ) [35480,35481]"
    },
    {
      "src": "identifier: div [46572,46575]",
      "dest": "identifier: div [51530,51533]"
    },
    {
      "src": "): ) [16147,16148]",
      "dest": "): ) [15720,15721]"
    },
    {
      "src": "identifier: amount [38046,38052]",
      "dest": "identifier: amount [38568,38574]"
    },
    {
      "src": "identifier: sub [8830,8833]",
      "dest": "identifier: sub [8377,8380]"
    },
    {
      "src": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [9929,10000]",
      "dest": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [9476,9547]"
    },
    {
      "src": "call_argument [43678,43714]",
      "dest": "call_argument [48074,48110]"
    },
    {
      "src": "variable_declaration [52280,52294]",
      "dest": "variable_declaration [60201,60215]"
    },
    {
      "src": "call_argument [29876,29882]",
      "dest": "call_argument [29875,29881]"
    },
    {
      "src": "{: { [36503,36504]",
      "dest": "{: { [36930,36931]"
    },
    {
      "src": "view: view [24661,24665]",
      "dest": "view: view [24660,24664]"
    },
    {
      "src": "member_expression [52880,52908]",
      "dest": "member_expression [60801,60829]"
    },
    {
      "src": "returns: returns [21569,21576]",
      "dest": "returns: returns [21182,21189]"
    },
    {
      "src": "type_name [46655,46662]",
      "dest": "type_name [51613,51620]"
    },
    {
      "src": "): ) [47442,47443]",
      "dest": "): ) [52400,52401]"
    },
    {
      "src": "call_argument [48204,48208]",
      "dest": "call_argument [55843,55847]"
    },
    {
      "src": "type_cast_expression [30673,30683]",
      "dest": "type_cast_expression [30672,30682]"
    },
    {
      "src": "): ) [8508,8509]",
      "dest": "): ) [8055,8056]"
    },
    {
      "src": "user_defined_type [34047,34060]",
      "dest": "user_defined_type [34214,34227]"
    },
    {
      "src": "call_argument [50503,50519]",
      "dest": "call_argument [57597,57613]"
    },
    {
      "src": "type_name [44537,44544]",
      "dest": "type_name [49156,49163]"
    },
    {
      "src": "function_body [21063,21438]",
      "dest": "function_body [20676,21051]"
    },
    {
      "src": "): ) [19610,19611]",
      "dest": "): ) [19203,19204]"
    },
    {
      "src": "return: return [10166,10172]",
      "dest": "return: return [9713,9719]"
    },
    {
      "src": "string [49199,49234]",
      "dest": "string [57025,57061]"
    },
    {
      "src": "call_argument [28084,28134]",
      "dest": "call_argument [28083,28133]"
    },
    {
      "src": "identifier: token [36565,36570]",
      "dest": "identifier: token [36992,36997]"
    },
    {
      "src": "): ) [51033,51034]",
      "dest": "): ) [58956,58957]"
    },
    {
      "src": "primitive_type [16533,16538]",
      "dest": "primitive_type [16106,16111]"
    },
    {
      "src": "primitive_type [35303,35310]",
      "dest": "primitive_type [35470,35477]"
    },
    {
      "src": "(: ( [36595,36596]",
      "dest": "(: ( [37022,37023]"
    },
    {
      "src": "function_body [52269,52502]",
      "dest": "function_body [60190,60423]"
    },
    {
      "src": "state_mutability [13623,13627]",
      "dest": "state_mutability [13193,13197]"
    },
    {
      "src": "primitive_type [38230,38237]",
      "dest": "primitive_type [38752,38759]"
    },
    {
      "src": "(: ( [42585,42586]",
      "dest": "(: ( [46757,46758]"
    },
    {
      "src": "primitive_type [11299,11306]",
      "dest": "primitive_type [10846,10853]"
    },
    {
      "src": "parameter [53400,53407]",
      "dest": "parameter [61321,61328]"
    },
    {
      "src": "primitive_type [4196,4203]",
      "dest": "primitive_type [3703,3710]"
    },
    {
      "src": "call_argument [45956,45966]",
      "dest": "call_argument [50801,50811]"
    },
    {
      "src": "type_name [25691,25698]",
      "dest": "type_name [25690,25697]"
    },
    {
      "src": "}: } [34480,34481]",
      "dest": "}: } [34647,34648]"
    },
    {
      "src": "{: { [52367,52368]",
      "dest": "{: { [60288,60289]"
    },
    {
      "src": "(: ( [29495,29496]",
      "dest": "(: ( [29494,29495]"
    },
    {
      "src": "(: ( [27973,27974]",
      "dest": "(: ( [27972,27973]"
    },
    {
      "src": "function_body [32661,32701]",
      "dest": "function_body [32660,32700]"
    },
    {
      "src": "identifier: sub [9269,9272]",
      "dest": "identifier: sub [8816,8819]"
    },
    {
      "src": "variable_declaration [44537,44569]",
      "dest": "variable_declaration [49156,49188]"
    },
    {
      "src": ",: , [17238,17239]",
      "dest": ",: , [16811,16812]"
    },
    {
      "src": "call_expression [51975,52082]",
      "dest": "call_expression [59898,60005]"
    },
    {
      "src": "): ) [45367,45368]",
      "dest": "): ) [50160,50161]"
    },
    {
      "src": "function_body [33427,33429]",
      "dest": "function_body [33426,33428]"
    },
    {
      "src": "expression_statement [50176,50276]",
      "dest": "expression_statement [57269,57370]"
    },
    {
      "src": "(: ( [28034,28035]",
      "dest": "(: ( [28033,28034]"
    },
    {
      "src": "): ) [25379,25380]",
      "dest": "): ) [25378,25379]"
    },
    {
      "src": "call_argument [26117,26129]",
      "dest": "call_argument [26116,26128]"
    },
    {
      "src": "call_argument [30016,30022]",
      "dest": "call_argument [30015,30021]"
    },
    {
      "src": "binary_expression [52355,52365]",
      "dest": "binary_expression [60276,60286]"
    },
    {
      "src": "state_mutability [36971,36975]",
      "dest": "state_mutability [37398,37402]"
    },
    {
      "src": "type_name [37098,37104]",
      "dest": "type_name [37525,37531]"
    },
    {
      "src": "function_definition [34299,34481]",
      "dest": "function_definition [34466,34648]"
    },
    {
      "src": "): ) [38598,38599]",
      "dest": "): ) [39138,39139]"
    },
    {
      "src": "comment: // transaction's gas, it is best to keep them low in cases like this one, to [6246,6322]",
      "dest": "comment: // transaction's gas, it is best to keep them low in cases like this one, to [5773,5849]"
    },
    {
      "src": "event_definition [4432,4504]",
      "dest": "event_definition [3939,4011]"
    },
    {
      "src": "parameter [35924,35931]",
      "dest": "parameter [36186,36193]"
    },
    {
      "src": "\": \" [15087,15088]",
      "dest": "\": \" [14660,14661]"
    },
    {
      "src": "yul_path [18661,18671]",
      "dest": "yul_path [18234,18244]"
    },
    {
      "src": "identifier: initialize [42575,42585]",
      "dest": "identifier: initialize [46747,46757]"
    },
    {
      "src": "address: address [13597,13604]",
      "dest": "address: address [13167,13174]"
    },
    {
      "src": "member_expression [43200,43226]",
      "dest": "member_expression [47372,47398]"
    },
    {
      "src": "}: } [53488,53489]",
      "dest": "}: } [61409,61410]"
    },
    {
      "src": ".: . [50377,50378]",
      "dest": ".: . [57471,57472]"
    },
    {
      "src": "contract_declaration [39734,53736]",
      "dest": "contract_declaration [43854,61657]"
    },
    {
      "src": "identifier: Ownable [34036,34043]",
      "dest": "identifier: Ownable [34203,34210]"
    },
    {
      "src": "(: ( [12117,12118]",
      "dest": "(: ( [11664,11665]"
    },
    {
      "src": "parameter [26623,26627]",
      "dest": "parameter [26622,26626]"
    },
    {
      "src": "user_defined_type [40213,40224]",
      "dest": "user_defined_type [44333,44344]"
    },
    {
      "src": "variable_declaration_statement [18160,18239]",
      "dest": "variable_declaration_statement [17733,17812]"
    },
    {
      "src": "member_expression [42850,42868]",
      "dest": "member_expression [47022,47040]"
    },
    {
      "src": "type_name [40407,40414]",
      "dest": "type_name [44527,44534]"
    },
    {
      "src": "primitive_type [45456,45463]",
      "dest": "primitive_type [50249,50256]"
    },
    {
      "src": "returns: returns [36349,36356]",
      "dest": "returns: returns [36776,36783]"
    },
    {
      "src": "]: ] [53044,53045]",
      "dest": "]: ] [60965,60966]"
    },
    {
      "src": "call_expression [49689,49742]",
      "dest": "call_expression [57863,57916]"
    },
    {
      "src": "(: ( [46538,46539]",
      "dest": "(: ( [51496,51497]"
    },
    {
      "src": "private: private [23811,23818]",
      "dest": "private: private [23810,23817]"
    },
    {
      "src": "): ) [23709,23710]",
      "dest": "): ) [23708,23709]"
    },
    {
      "src": "type_name [39041,39048]",
      "dest": "type_name [39599,39606]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [18535,18582]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [18108,18155]"
    },
    {
      "src": "parameter [45353,45367]",
      "dest": "parameter [50146,50160]"
    },
    {
      "src": "): ) [28039,28040]",
      "dest": "): ) [28038,28039]"
    },
    {
      "src": "type_name [25402,25407]",
      "dest": "type_name [25401,25406]"
    },
    {
      "src": "type_name [25562,25569]",
      "dest": "type_name [25561,25568]"
    },
    {
      "src": "identifier: owner [32248,32253]",
      "dest": "identifier: owner [32247,32252]"
    },
    {
      "src": "view: view [53386,53390]",
      "dest": "view: view [61307,61311]"
    },
    {
      "src": "uint256: uint256 [17939,17946]",
      "dest": "uint256: uint256 [17512,17519]"
    },
    {
      "src": "\": \" [35620,35621]",
      "dest": "\": \" [35787,35788]"
    },
    {
      "src": "event_paramater [4732,4745]",
      "dest": "event_paramater [4239,4252]"
    },
    {
      "src": "{: { [20696,20697]",
      "dest": "{: { [20309,20310]"
    },
    {
      "src": "type_name [43947,43954]",
      "dest": "type_name [48243,48250]"
    },
    {
      "src": "parameter [27974,27989]",
      "dest": "parameter [27973,27988]"
    },
    {
      "src": "parameter [33367,33377]",
      "dest": "parameter [33366,33376]"
    },
    {
      "src": "comment: // but in exchange the refund on every call to nonReentrant will be lower in [6094,6170]",
      "dest": "comment: // but in exchange the refund on every call to nonReentrant will be lower in [5621,5697]"
    },
    {
      "src": "if_statement [18394,18833]",
      "dest": "if_statement [17967,18406]"
    },
    {
      "src": ",: , [12677,12678]",
      "dest": ",: , [12224,12225]"
    },
    {
      "src": "external: external [35901,35909]",
      "dest": "external: external [36163,36171]"
    },
    {
      "src": "type_name [19643,19648]",
      "dest": "type_name [19236,19241]"
    },
    {
      "src": "contract_body [35862,35936]",
      "dest": "contract_body [36124,36198]"
    },
    {
      "src": "identifier: _functionCallWithValue [16630,16652]",
      "dest": "identifier: _functionCallWithValue [16203,16225]"
    },
    {
      "src": ",: , [35704,35705]",
      "dest": ",: , [35871,35872]"
    },
    {
      "src": "call_argument [10105,10115]",
      "dest": "call_argument [9652,9662]"
    },
    {
      "src": "identifier: roughCurveTokenAmount [49665,49686]",
      "dest": "identifier: roughCurveTokenAmount [57839,57860]"
    },
    {
      "src": "identifier: _uniRouter [51975,51985]",
      "dest": "identifier: _uniRouter [59898,59908]"
    },
    {
      "src": "visibility [36539,36547]",
      "dest": "visibility [36966,36974]"
    },
    {
      "src": "type_name [47942,47949]",
      "dest": "type_name [55512,55519]"
    },
    {
      "src": "identifier: _totalSupply [46394,46406]",
      "dest": "identifier: _totalSupply [51352,51364]"
    },
    {
      "src": "identifier: sub [31387,31390]",
      "dest": "identifier: sub [31386,31389]"
    },
    {
      "src": "comment: /**      * @dev Indicates that the contract is in the process of being initialized.      */ [20817,20910]",
      "dest": "comment: /**      * @dev Indicates that the contract is in the process of being initialized.      */ [20430,20523]"
    },
    {
      "src": "identifier: b [8451,8452]",
      "dest": "identifier: b [7998,7999]"
    },
    {
      "src": "): ) [35231,35232]",
      "dest": "): ) [35398,35399]"
    },
    {
      "src": "identifier: initialized [21308,21319]",
      "dest": "identifier: initialized [20921,20932]"
    },
    {
      "src": ".: . [52933,52934]",
      "dest": ".: . [60854,60855]"
    },
    {
      "src": "(: ( [28122,28123]",
      "dest": "(: ( [28121,28122]"
    },
    {
      "src": "}: } [18843,18844]",
      "dest": "}: } [18416,18417]"
    },
    {
      "src": "): ) [53480,53481]",
      "dest": "): ) [61401,61402]"
    },
    {
      "src": "): ) [34472,34473]",
      "dest": "): ) [34639,34640]"
    },
    {
      "src": "type_name [37658,37664]",
      "dest": "type_name [38180,38186]"
    },
    {
      "src": "identifier: target [17912,17918]",
      "dest": "identifier: target [17485,17491]"
    },
    {
      "src": "(: ( [45842,45843]",
      "dest": "(: ( [50635,50636]"
    },
    {
      "src": "true [21322,21326]",
      "dest": "true [20935,20939]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [10798,11280]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [10345,10827]"
    },
    {
      "src": "address: address [21964,21971]",
      "dest": "address: address [21577,21584]"
    },
    {
      "src": "(: ( [24217,24218]",
      "dest": "(: ( [24216,24217]"
    },
    {
      "src": "=: = [7409,7410]",
      "dest": "=: = [6936,6937]"
    },
    {
      "src": "type_cast_expression [29711,29721]",
      "dest": "type_cast_expression [29710,29720]"
    },
    {
      "src": "call_argument [17227,17231]",
      "dest": "call_argument [16800,16804]"
    },
    {
      "src": "bytes: bytes [17675,17680]",
      "dest": "bytes: bytes [17248,17253]"
    },
    {
      "src": "inheritance_specifier [35855,35861]",
      "dest": "inheritance_specifier [36117,36123]"
    },
    {
      "src": "identifier: msg [45956,45959]",
      "dest": "identifier: msg [50801,50804]"
    },
    {
      "src": "identifier: a [9732,9733]",
      "dest": "identifier: a [9279,9280]"
    },
    {
      "src": "parameter [4215,4229]",
      "dest": "parameter [3722,3736]"
    },
    {
      "src": "state_mutability [2401,2405]",
      "dest": "state_mutability [1905,1909]"
    },
    {
      "src": "call_argument [45439,45444]",
      "dest": "call_argument [50232,50237]"
    },
    {
      "src": "address: address [15024,15031]",
      "dest": "address: address [14597,14604]"
    },
    {
      "src": "identifier: cs [22084,22086]",
      "dest": "identifier: cs [21697,21699]"
    },
    {
      "src": "identifier: div [11295,11298]",
      "dest": "identifier: div [10842,10845]"
    },
    {
      "src": "(: ( [30513,30514]",
      "dest": "(: ( [30512,30513]"
    },
    {
      "src": "\": \" [29677,29678]",
      "dest": "\": \" [29676,29677]"
    },
    {
      "src": "identifier: amount [47436,47442]",
      "dest": "identifier: amount [52394,52400]"
    },
    {
      "src": "): ) [8422,8423]",
      "dest": "): ) [7969,7970]"
    },
    {
      "src": "}: } [44980,44981]",
      "dest": "}: } [49682,49683]"
    },
    {
      "src": "state_variable_declaration [20916,20942]",
      "dest": "state_variable_declaration [20529,20555]"
    },
    {
      "src": ":=: := [13941,13943]",
      "dest": ":=: := [13511,13513]"
    },
    {
      "src": "constant: constant [40561,40569]",
      "dest": "constant: constant [44733,44741]"
    },
    {
      "src": "(: ( [47179,47180]",
      "dest": "(: ( [52137,52138]"
    },
    {
      "src": "primitive_type [51793,51800]",
      "dest": "primitive_type [59716,59723]"
    },
    {
      "src": "identifier: amount [41197,41203]",
      "dest": "identifier: amount [45369,45375]"
    },
    {
      "src": "{: { [24486,24487]",
      "dest": "{: { [24485,24486]"
    },
    {
      "src": "primitive_type [52857,52864]",
      "dest": "primitive_type [60778,60785]"
    },
    {
      "src": "identifier: amount [46696,46702]",
      "dest": "identifier: amount [51654,51660]"
    },
    {
      "src": ".: . [42797,42798]",
      "dest": ".: . [46969,46970]"
    },
    {
      "src": ".: . [15208,15209]",
      "dest": ".: . [14781,14782]"
    },
    {
      "src": "identifier: require [50789,50796]",
      "dest": "identifier: require [58714,58721]"
    },
    {
      "src": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [11459,11536]",
      "dest": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [11006,11083]"
    },
    {
      "src": "parameter [17165,17177]",
      "dest": "parameter [16738,16750]"
    },
    {
      "src": "]: ] [48001,48002]",
      "dest": "]: ] [55571,55572]"
    },
    {
      "src": "function_definition [37610,37666]",
      "dest": "function_definition [38132,38188]"
    },
    {
      "src": "uint256: uint256 [11299,11306]",
      "dest": "uint256: uint256 [10846,10853]"
    },
    {
      "src": "identifier: fee [41832,41835]",
      "dest": "identifier: fee [46004,46007]"
    },
    {
      "src": "type_name [6399,6406]",
      "dest": "type_name [5926,5933]"
    },
    {
      "src": "binary_expression [17708,17738]",
      "dest": "binary_expression [17281,17311]"
    },
    {
      "src": "identifier: join [37814,37818]",
      "dest": "identifier: join [38336,38340]"
    },
    {
      "src": "call_expression [34784,34796]",
      "dest": "call_expression [34951,34963]"
    },
    {
      "src": "): ) [26128,26129]",
      "dest": "): ) [26127,26128]"
    },
    {
      "src": "primitive_type [31432,31439]",
      "dest": "primitive_type [31431,31438]"
    },
    {
      "src": "return_type_definition [25393,25408]",
      "dest": "return_type_definition [25392,25407]"
    },
    {
      "src": "identifier: Context [34062,34069]",
      "dest": "identifier: Context [34229,34236]"
    },
    {
      "src": "{: { [26340,26341]",
      "dest": "{: { [26339,26340]"
    },
    {
      "src": "struct_field_assignment [18215,18230]",
      "dest": "struct_field_assignment [17788,17803]"
    },
    {
      "src": "member_expression [28850,28888]",
      "dest": "member_expression [28849,28887]"
    },
    {
      "src": "): ) [36137,36138]",
      "dest": "): ) [36564,36565]"
    },
    {
      "src": "type_name [16533,16538]",
      "dest": "type_name [16106,16111]"
    },
    {
      "src": "call_expression [15245,15323]",
      "dest": "call_expression [14818,14896]"
    },
    {
      "src": "function_definition [44853,44981]",
      "dest": "function_definition [49472,49683]"
    },
    {
      "src": "call_argument [27464,27506]",
      "dest": "call_argument [27463,27505]"
    },
    {
      "src": "type_name [36199,36206]",
      "dest": "type_name [36626,36633]"
    },
    {
      "src": "(: ( [26330,26331]",
      "dest": "(: ( [26329,26330]"
    },
    {
      "src": "}: } [18832,18833]",
      "dest": "}: } [18405,18406]"
    },
    {
      "src": "member_expression [53063,53079]",
      "dest": "member_expression [60984,61000]"
    },
    {
      "src": "member_expression [43630,43646]",
      "dest": "member_expression [48026,48042]"
    },
    {
      "src": "function: function [36731,36739]",
      "dest": "function: function [37158,37166]"
    },
    {
      "src": "call_argument [30438,30471]",
      "dest": "call_argument [30437,30470]"
    },
    {
      "src": "identifier: _ENTERED [7100,7108]",
      "dest": "identifier: _ENTERED [6627,6635]"
    },
    {
      "src": "member_expression [46696,46706]",
      "dest": "member_expression [51654,51664]"
    },
    {
      "src": "call_argument [46815,46821]",
      "dest": "call_argument [51773,51779]"
    },
    {
      "src": "yul_identifier [13956,13963]",
      "dest": "yul_identifier [13526,13533]"
    },
    {
      "src": "identifier: Initializable [23505,23518]",
      "dest": "identifier: Initializable [23504,23517]"
    },
    {
      "src": ">: > [47016,47017]",
      "dest": ">: > [51974,51975]"
    },
    {
      "src": "identifier: amountIn [52011,52019]",
      "dest": "identifier: amountIn [59934,59942]"
    },
    {
      "src": "identifier: transferOwnership [35516,35533]",
      "dest": "identifier: transferOwnership [35683,35700]"
    },
    {
      "src": "return: return [12790,12796]",
      "dest": "return: return [12337,12343]"
    },
    {
      "src": "primitive_type [23833,23838]",
      "dest": "primitive_type [23832,23837]"
    },
    {
      "src": "(: ( [15023,15024]",
      "dest": "(: ( [14596,14597]"
    },
    {
      "src": "(: ( [45352,45353]",
      "dest": "(: ( [50145,50146]"
    },
    {
      "src": "member_expression [30618,30640]",
      "dest": "member_expression [30617,30639]"
    },
    {
      "src": "identifier: owner [26269,26274]",
      "dest": "identifier: owner [26268,26273]"
    },
    {
      "src": "member_expression [45868,45895]",
      "dest": "member_expression [50713,50740]"
    },
    {
      "src": "call_expression [26117,26129]",
      "dest": "call_expression [26116,26128]"
    },
    {
      "src": "returns: returns [19522,19529]",
      "dest": "returns: returns [19115,19122]"
    },
    {
      "src": "identifier: Collected [42218,42227]",
      "dest": "identifier: Collected [46390,46399]"
    },
    {
      "src": ",: , [14978,14979]",
      "dest": ",: , [14551,14552]"
    },
    {
      "src": "): ) [45930,45931]",
      "dest": "): ) [50775,50776]"
    },
    {
      "src": ",: , [38715,38716]",
      "dest": ",: , [39255,39256]"
    },
    {
      "src": "boolean_literal [21322,21326]",
      "dest": "boolean_literal [20935,20939]"
    },
    {
      "src": "primitive_type [36093,36097]",
      "dest": "primitive_type [36520,36524]"
    },
    {
      "src": ",: , [9282,9283]",
      "dest": ",: , [8829,8830]"
    },
    {
      "src": "identifier: this [19668,19672]",
      "dest": "identifier: this [19261,19265]"
    },
    {
      "src": "variable_declaration_statement [45398,45446]",
      "dest": "variable_declaration_statement [50191,50239]"
    },
    {
      "src": "member_expression [53667,53691]",
      "dest": "member_expression [61588,61612]"
    },
    {
      "src": "=: = [42970,42971]",
      "dest": "=: = [47142,47143]"
    },
    {
      "src": "(: ( [46734,46735]",
      "dest": "(: ( [51692,51693]"
    },
    {
      "src": "if: if [52351,52353]",
      "dest": "if: if [60272,60274]"
    },
    {
      "src": "call_expression [46878,46930]",
      "dest": "call_expression [51836,51888]"
    },
    {
      "src": "address: address [27215,27222]",
      "dest": "address: address [27214,27221]"
    },
    {
      "src": "member_expression [49689,49736]",
      "dest": "member_expression [57863,57910]"
    },
    {
      "src": "external: external [36282,36290]",
      "dest": "external: external [36709,36717]"
    },
    {
      "src": ",: , [28073,28074]",
      "dest": ",: , [28072,28073]"
    },
    {
      "src": "call_argument [12766,12778]",
      "dest": "call_argument [12313,12325]"
    },
    {
      "src": "type_name [38230,38237]",
      "dest": "type_name [38752,38759]"
    },
    {
      "src": "contract_body [39802,53736]",
      "dest": "contract_body [43922,61657]"
    },
    {
      "src": "address: address [23594,23601]",
      "dest": "address: address [23593,23600]"
    },
    {
      "src": "number_literal: 0 [47981,47982]",
      "dest": "number_literal: 0 [55551,55552]"
    },
    {
      "src": "function: function [11286,11294]",
      "dest": "function: function [10833,10841]"
    },
    {
      "src": "boolean_literal [48828,48833]",
      "dest": "boolean_literal [56643,56648]"
    },
    {
      "src": "call_argument [47886,47928]",
      "dest": "call_argument [55455,55498]"
    },
    {
      "src": "{: { [49485,49486]",
      "dest": "{: { [57176,57177]"
    },
    {
      "src": "): ) [34460,34461]",
      "dest": "): ) [34627,34628]"
    },
    {
      "src": "type_name [12087,12094]",
      "dest": "type_name [11634,11641]"
    },
    {
      "src": "identifier: remove_liquidity_one_coin [50091,50116]",
      "dest": "identifier: remove_liquidity_one_coin [58414,58439]"
    },
    {
      "src": "}: } [33431,33432]",
      "dest": "}: } [33430,33431]"
    },
    {
      "src": "parameter [17939,17955]",
      "dest": "parameter [17512,17528]"
    },
    {
      "src": "binary_expression [49783,49823]",
      "dest": "binary_expression [57935,57975]"
    },
    {
      "src": "): ) [43714,43715]",
      "dest": "): ) [48110,48111]"
    },
    {
      "src": ",: , [8911,8912]",
      "dest": ",: , [8458,8459]"
    },
    {
      "src": "view: view [3074,3078]",
      "dest": "view: view [2578,2582]"
    },
    {
      "src": "expression_statement [18027,18088]",
      "dest": "expression_statement [17600,17661]"
    },
    {
      "src": "identifier: errorMessage [12693,12705]",
      "dest": "identifier: errorMessage [12240,12252]"
    },
    {
      "src": "(: ( [37072,37073]",
      "dest": "(: ( [37499,37500]"
    },
    {
      "src": "false [48828,48833]",
      "dest": "false [56643,56648]"
    },
    {
      "src": "{: { [51899,51900]",
      "dest": "{: { [59822,59823]"
    },
    {
      "src": "identifier: fee [45843,45846]",
      "dest": "identifier: fee [50636,50639]"
    },
    {
      "src": "call_argument [50837,50850]",
      "dest": "call_argument [58762,58775]"
    },
    {
      "src": "view: view [36582,36586]",
      "dest": "view: view [37009,37013]"
    },
    {
      "src": "primitive_type [28035,28039]",
      "dest": "primitive_type [28034,28038]"
    },
    {
      "src": "(: ( [18252,18253]",
      "dest": "(: ( [17825,17826]"
    },
    {
      "src": "return_type_definition [36587,36603]",
      "dest": "return_type_definition [37014,37030]"
    },
    {
      "src": "): ) [52493,52494]",
      "dest": "): ) [60414,60415]"
    },
    {
      "src": "primitive_type [13597,13604]",
      "dest": "primitive_type [13167,13174]"
    },
    {
      "src": "identifier: b [12801,12802]",
      "dest": "identifier: b [12348,12349]"
    },
    {
      "src": "identifier: ICurvePool [40106,40116]",
      "dest": "identifier: ICurvePool [44226,44236]"
    },
    {
      "src": "event_paramater [41790,41806]",
      "dest": "event_paramater [45962,45978]"
    },
    {
      "src": "identifier: TUSD_INDEX [50140,50150]",
      "dest": "identifier: TUSD_INDEX [58463,58473]"
    },
    {
      "src": "identifier: add [30575,30578]",
      "dest": "identifier: add [30574,30577]"
    },
    {
      "src": "identifier: deposit [36389,36396]",
      "dest": "identifier: deposit [36816,36823]"
    },
    {
      "src": "primitive_type [19643,19648]",
      "dest": "primitive_type [19236,19241]"
    },
    {
      "src": "variable_declaration_statement [45508,45547]",
      "dest": "variable_declaration_statement [50301,50340]"
    },
    {
      "src": "type_name [18175,18180]",
      "dest": "type_name [17748,17753]"
    },
    {
      "src": "]: ] [26375,26376]",
      "dest": "]: ] [26374,26375]"
    },
    {
      "src": "identifier: _currencyToken [50797,50811]",
      "dest": "identifier: _currencyToken [58722,58736]"
    },
    {
      "src": ",: , [4705,4706]",
      "dest": ",: , [4212,4213]"
    },
    {
      "src": "yul_path [22033,22035]",
      "dest": "yul_path [21646,21648]"
    },
    {
      "src": "type_name [23683,23710]",
      "dest": "type_name [23682,23709]"
    },
    {
      "src": "function: function [27947,27955]",
      "dest": "function: function [27946,27954]"
    },
    {
      "src": "identifier: sender [4188,4194]",
      "dest": "identifier: sender [3695,3701]"
    },
    {
      "src": "function_definition [24434,24517]",
      "dest": "function_definition [24433,24516]"
    },
    {
      "src": "member_expression [46878,46896]",
      "dest": "member_expression [51836,51854]"
    },
    {
      "src": "(: ( [49481,49482]",
      "dest": "(: ( [57172,57173]"
    },
    {
      "src": "identifier: c [11439,11440]",
      "dest": "identifier: c [10986,10987]"
    },
    {
      "src": "identifier: success [15253,15260]",
      "dest": "identifier: success [14826,14833]"
    },
    {
      "src": "return: return [16623,16629]",
      "dest": "return: return [16196,16202]"
    },
    {
      "src": "identifier: yTokenBalance [48555,48568]",
      "dest": "identifier: yTokenBalance [56302,56315]"
    },
    {
      "src": ".: . [44058,44059]",
      "dest": ".: . [48823,48824]"
    },
    {
      "src": "identifier: __ERC20_initialize [42798,42816]",
      "dest": "identifier: __ERC20_initialize [46970,46988]"
    },
    {
      "src": "identifier: min_mint_amount [36697,36712]",
      "dest": "identifier: min_mint_amount [37124,37139]"
    },
    {
      "src": "primitive_type [49087,49094]",
      "dest": "primitive_type [56902,56909]"
    },
    {
      "src": ",: , [16531,16532]",
      "dest": ",: , [16104,16105]"
    },
    {
      "src": "call_expression [43200,43260]",
      "dest": "call_expression [47372,47432]"
    },
    {
      "src": "=>: => [23626,23628]",
      "dest": "=>: => [23625,23627]"
    },
    {
      "src": "return: return [25758,25764]",
      "dest": "return: return [25757,25763]"
    },
    {
      "src": "identifier: require [32106,32113]",
      "dest": "identifier: require [32105,32112]"
    },
    {
      "src": "binary_expression [47849,47884]",
      "dest": "binary_expression [55418,55453]"
    },
    {
      "src": "call_argument [49737,49741]",
      "dest": "call_argument [57911,57915]"
    },
    {
      "src": "): ) [50025,50026]",
      "dest": "): ) [58147,58148]"
    },
    {
      "src": "call_argument [48695,48702]",
      "dest": "call_argument [56443,56450]"
    },
    {
      "src": "(: ( [31439,31440]",
      "dest": "(: ( [31438,31439]"
    },
    {
      "src": "external: external [2392,2400]",
      "dest": "external: external [1896,1904]"
    },
    {
      "src": ",: , [29548,29549]",
      "dest": ",: , [29547,29548]"
    },
    {
      "src": "uint8: uint8 [32635,32640]",
      "dest": "uint8: uint8 [32634,32639]"
    },
    {
      "src": "): ) [35343,35344]",
      "dest": "): ) [35510,35511]"
    },
    {
      "src": "(: ( [48568,48569]",
      "dest": "(: ( [56315,56316]"
    },
    {
      "src": "call_argument [53100,53108]",
      "dest": "call_argument [61021,61029]"
    },
    {
      "src": "primitive_type [36305,36312]",
      "dest": "primitive_type [36732,36739]"
    },
    {
      "src": ",: , [51809,51810]",
      "dest": ",: , [59732,59733]"
    },
    {
      "src": "variable_declaration [34353,34370]",
      "dest": "variable_declaration [34520,34537]"
    },
    {
      "src": "identifier: _curvePool [47316,47326]",
      "dest": "identifier: _curvePool [52274,52284]"
    },
    {
      "src": "function: function [19478,19486]",
      "dest": "function: function [19071,19079]"
    },
    {
      "src": "identifier: a [9379,9380]",
      "dest": "identifier: a [8926,8927]"
    },
    {
      "src": "): ) [41382,41383]",
      "dest": "): ) [45554,45555]"
    },
    {
      "src": ",: , [31442,31443]",
      "dest": ",: , [31441,31442]"
    },
    {
      "src": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [28173,28662]",
      "dest": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [28172,28661]"
    },
    {
      "src": "internal: internal [9746,9754]",
      "dest": "internal: internal [9293,9301]"
    },
    {
      "src": "): ) [47214,47215]",
      "dest": "): ) [52172,52173]"
    },
    {
      "src": "uint256: uint256 [25562,25569]",
      "dest": "uint256: uint256 [25561,25568]"
    },
    {
      "src": "identifier: errorMessage [9382,9394]",
      "dest": "identifier: errorMessage [8929,8941]"
    },
    {
      "src": "comment: /**      * @dev Emitted when someone exits the pool      * @param staker Account exiting      * @param amount Amount unstaking      */ [41008,41146]",
      "dest": "comment: /**      * @dev Emitted when someone exits the pool      * @param staker Account exiting      * @param amount Amount unstaking      */ [45180,45318]"
    },
    {
      "src": "call_argument [34798,34832]",
      "dest": "call_argument [34965,34999]"
    },
    {
      "src": "identifier: decimals_ [32684,32693]",
      "dest": "identifier: decimals_ [32683,32692]"
    },
    {
      "src": "function: function [38024,38032]",
      "dest": "function: function [38546,38554]"
    },
    {
      "src": ",: , [4467,4468]",
      "dest": ",: , [3974,3975]"
    },
    {
      "src": "visibility [27290,27296]",
      "dest": "visibility [27289,27295]"
    },
    {
      "src": "pure: pure [9755,9759]",
      "dest": "pure: pure [9302,9306]"
    },
    {
      "src": "call_argument [52049,52053]",
      "dest": "call_argument [59972,59976]"
    },
    {
      "src": "visibility [26293,26299]",
      "dest": "visibility [26292,26298]"
    },
    {
      "src": "ether: ether [44206,44211]",
      "dest": "ether: ether [48336,48341]"
    },
    {
      "src": "identifier: initializer [24269,24280]",
      "dest": "identifier: initializer [24268,24279]"
    },
    {
      "src": "external: external [36539,36547]",
      "dest": "external: external [36966,36974]"
    },
    {
      "src": "{: { [28767,28768]",
      "dest": "{: { [28766,28767]"
    },
    {
      "src": "unary_expression [43256,43258]",
      "dest": "unary_expression [47428,47430]"
    },
    {
      "src": "function: function [17066,17074]",
      "dest": "function: function [16639,16647]"
    },
    {
      "src": "identifier: neededAmount [44503,44515]",
      "dest": "identifier: neededAmount [49122,49134]"
    },
    {
      "src": "call_expression [31374,31398]",
      "dest": "call_expression [31373,31397]"
    },
    {
      "src": "[: [ [31289,31290]",
      "dest": "[: [ [31288,31289]"
    },
    {
      "src": "(: ( [17707,17708]",
      "dest": "(: ( [17280,17281]"
    },
    {
      "src": "type_name [29559,29566]",
      "dest": "type_name [29558,29565]"
    },
    {
      "src": "internal: internal [19500,19508]",
      "dest": "internal: internal [19093,19101]"
    },
    {
      "src": "if: if [21364,21366]",
      "dest": "if: if [20977,20979]"
    },
    {
      "src": "indexed: indexed [40949,40956]",
      "dest": "indexed: indexed [45121,45128]"
    },
    {
      "src": "identifier: div [49733,49736]",
      "dest": "identifier: div [57907,57910]"
    },
    {
      "src": "primitive_type [26574,26581]",
      "dest": "primitive_type [26573,26580]"
    },
    {
      "src": ",: , [28710,28711]",
      "dest": ",: , [28709,28710]"
    },
    {
      "src": "identifier: staker [40957,40963]",
      "dest": "identifier: staker [45129,45135]"
    },
    {
      "src": ",: , [45176,45177]",
      "dest": ",: , [49917,49918]"
    },
    {
      "src": "returns: returns [53631,53638]",
      "dest": "returns: returns [61552,61559]"
    },
    {
      "src": "uint256: uint256 [6399,6406]",
      "dest": "uint256: uint256 [5926,5933]"
    },
    {
      "src": "primitive_type [38246,38253]",
      "dest": "primitive_type [38768,38775]"
    },
    {
      "src": "return_type_definition [36349,36371]",
      "dest": "return_type_definition [36776,36798]"
    },
    {
      "src": "bytes: bytes [18175,18180]",
      "dest": "bytes: bytes [17748,17753]"
    },
    {
      "src": "identifier: __currencyToken [42671,42686]",
      "dest": "identifier: __currencyToken [46843,46858]"
    },
    {
      "src": "identifier: from [33352,33356]",
      "dest": "identifier: from [33351,33355]"
    },
    {
      "src": "yul_path [18722,18737]",
      "dest": "yul_path [18295,18310]"
    },
    {
      "src": "call_argument [42817,42828]",
      "dest": "call_argument [46989,47000]"
    },
    {
      "src": "event: event [4669,4674]",
      "dest": "event: event [4176,4181]"
    },
    {
      "src": "virtual: virtual [28018,28025]",
      "dest": "virtual: virtual [28017,28024]"
    },
    {
      "src": "identifier: roughCurveTokenAmount [49783,49804]",
      "dest": "identifier: roughCurveTokenAmount [57935,57956]"
    },
    {
      "src": "identifier: fee [44932,44935]",
      "dest": "identifier: fee [49634,49637]"
    },
    {
      "src": "(: ( [48069,48070]",
      "dest": "(: ( [55709,55710]"
    },
    {
      "src": "identifier: Context [23520,23527]",
      "dest": "identifier: Context [23519,23526]"
    },
    {
      "src": "uint256: uint256 [9769,9776]",
      "dest": "uint256: uint256 [9316,9323]"
    },
    {
      "src": "identifier: _currencyToken [40192,40206]",
      "dest": "identifier: _currencyToken [44312,44326]"
    },
    {
      "src": "identifier: transferFrom [45883,45895]",
      "dest": "identifier: transferFrom [50728,50740]"
    },
    {
      "src": "): ) [37170,37171]",
      "dest": "): ) [37597,37598]"
    },
    {
      "src": "pragma_directive [39158,39181]",
      "dest": "pragma_directive [42501,42524]"
    },
    {
      "src": "returns: returns [10707,10714]",
      "dest": "returns: returns [10254,10261]"
    },
    {
      "src": "(: ( [53691,53692]",
      "dest": "(: ( [61612,61613]"
    },
    {
      "src": "{: { [17689,17690]",
      "dest": "{: { [17262,17263]"
    },
    {
      "src": "identifier: functionCallWithValue [17197,17218]",
      "dest": "identifier: functionCallWithValue [16770,16791]"
    },
    {
      "src": "identifier: currencyAmountToTransfer [46991,47015]",
      "dest": "identifier: currencyAmountToTransfer [51949,51973]"
    },
    {
      "src": "external: external [49113,49121]",
      "dest": "external: external [56928,56936]"
    },
    {
      "src": "call_expression [29609,29679]",
      "dest": "call_expression [29608,29678]"
    },
    {
      "src": "(: ( [34458,34459]",
      "dest": "(: ( [34625,34626]"
    },
    {
      "src": "expression_statement [9366,9396]",
      "dest": "expression_statement [8913,8943]"
    },
    {
      "src": "visibility [4231,4239]",
      "dest": "visibility [3738,3746]"
    },
    {
      "src": "member_expression [45665,45682]",
      "dest": "member_expression [50458,50475]"
    },
    {
      "src": "contract_body [38576,38765]",
      "dest": "contract_body [39116,39305]"
    },
    {
      "src": "visibility [48506,48514]",
      "dest": "visibility [56253,56261]"
    },
    {
      "src": "call_expression [26107,26149]",
      "dest": "call_expression [26106,26148]"
    },
    {
      "src": "\": \" [16255,16256]",
      "dest": "\": \" [15828,15829]"
    },
    {
      "src": "identifier: _currencyToken [50467,50481]",
      "dest": "identifier: _currencyToken [57561,57575]"
    },
    {
      "src": "assignment_expression [42883,42907]",
      "dest": "assignment_expression [47055,47079]"
    },
    {
      "src": "memory: memory [47960,47966]",
      "dest": "memory: memory [55530,55536]"
    },
    {
      "src": "\": \" [12149,12150]",
      "dest": "\": \" [11696,11697]"
    },
    {
      "src": "returns: returns [4240,4247]",
      "dest": "returns: returns [3747,3754]"
    },
    {
      "src": "]: ] [29850,29851]",
      "dest": "]: ] [29849,29850]"
    },
    {
      "src": "user_defined_type [42664,42670]",
      "dest": "user_defined_type [46836,46842]"
    },
    {
      "src": "call_argument [45868,45930]",
      "dest": "call_argument [50713,50775]"
    },
    {
      "src": "return_type_definition [36296,36313]",
      "dest": "return_type_definition [36723,36740]"
    },
    {
      "src": "external: external [36413,36421]",
      "dest": "external: external [36840,36848]"
    },
    {
      "src": "parameter [36066,36091]",
      "dest": "parameter [36493,36518]"
    },
    {
      "src": "interface: interface [36015,36024]",
      "dest": "interface: interface [36442,36451]"
    },
    {
      "src": "emit: emit [50879,50883]",
      "dest": "emit: emit [58804,58808]"
    },
    {
      "src": "primitive_type [24675,24681]",
      "dest": "primitive_type [24674,24680]"
    },
    {
      "src": "parameter [27215,27229]",
      "dest": "parameter [27214,27228]"
    },
    {
      "src": "primitive_type [18161,18165]",
      "dest": "primitive_type [17734,17738]"
    },
    {
      "src": "uint256: uint256 [38955,38962]",
      "dest": "uint256: uint256 [39513,39520]"
    },
    {
      "src": "array_access [31280,31298]",
      "dest": "array_access [31279,31297]"
    },
    {
      "src": "yul_identifier [22051,22055]",
      "dest": "yul_identifier [21664,21668]"
    },
    {
      "src": "number_literal: 0 [29635,29636]",
      "dest": "number_literal: 0 [29634,29635]"
    },
    {
      "src": "identifier: sender [30016,30022]",
      "dest": "identifier: sender [30015,30021]"
    },
    {
      "src": "): ) [36370,36371]",
      "dest": "): ) [36797,36798]"
    },
    {
      "src": "(: ( [43946,43947]",
      "dest": "(: ( [48242,48243]"
    },
    {
      "src": "): ) [9744,9745]",
      "dest": "): ) [9291,9292]"
    },
    {
      "src": "state_mutability [9755,9759]",
      "dest": "state_mutability [9302,9306]"
    },
    {
      "src": "\": \" [28944,28945]",
      "dest": "\": \" [28943,28944]"
    },
    {
      "src": "}: } [18850,18851]",
      "dest": "}: } [18423,18424]"
    },
    {
      "src": "(: ( [52010,52011]",
      "dest": "(: ( [59933,59934]"
    },
    {
      "src": "call_expression [50459,50521]",
      "dest": "call_expression [57553,57615]"
    },
    {
      "src": ",: , [42686,42687]",
      "dest": ",: , [46858,46859]"
    },
    {
      "src": "identifier: amount [45412,45418]",
      "dest": "identifier: amount [50205,50211]"
    },
    {
      "src": "function_body [6549,6590]",
      "dest": "function_body [6076,6117]"
    },
    {
      "src": "call_argument [31125,31146]",
      "dest": "call_argument [31124,31145]"
    },
    {
      "src": "identifier: returndata [18284,18294]",
      "dest": "identifier: returndata [17857,17867]"
    },
    {
      "src": "identifier: _status [6560,6567]",
      "dest": "identifier: _status [6087,6094]"
    },
    {
      "src": "expression_statement [19668,19673]",
      "dest": "expression_statement [19261,19266]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11572,12023]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11119,11570]"
    },
    {
      "src": "variable_declaration [50349,50360]",
      "dest": "variable_declaration [57443,57454]"
    },
    {
      "src": "type_name [27323,27327]",
      "dest": "type_name [27322,27326]"
    },
    {
      "src": "state_variable_declaration [40178,40207]",
      "dest": "state_variable_declaration [44298,44327]"
    },
    {
      "src": "identifier: sender [49307,49313]",
      "dest": "identifier: sender [47570,47576]"
    },
    {
      "src": ",: , [34461,34462]",
      "dest": ",: , [34628,34629]"
    },
    {
      "src": "(: ( [28071,28072]",
      "dest": "(: ( [28070,28071]"
    },
    {
      "src": "uint256: uint256 [43947,43954]",
      "dest": "uint256: uint256 [48243,48250]"
    },
    {
      "src": "): ) [49640,49641]",
      "dest": "): ) [57251,57252]"
    },
    {
      "src": "identifier: borrow [49056,49062]",
      "dest": "identifier: borrow [56871,56877]"
    },
    {
      "src": "parameter [16533,16550]",
      "dest": "parameter [16106,16123]"
    },
    {
      "src": "member_expression [43630,43677]",
      "dest": "member_expression [48026,48073]"
    },
    {
      "src": "(: ( [2670,2671]",
      "dest": "(: ( [2174,2175]"
    },
    {
      "src": "type_name [9346,9353]",
      "dest": "type_name [8893,8900]"
    },
    {
      "src": "function_definition [2356,2424]",
      "dest": "function_definition [1860,1928]"
    },
    {
      "src": "call_expression [53063,53115]",
      "dest": "call_expression [60984,61036]"
    },
    {
      "src": "identifier: isTopLevelCall [21243,21257]",
      "dest": "identifier: isTopLevelCall [20856,20870]"
    },
    {
      "src": "identifier: mint [36519,36523]",
      "dest": "identifier: mint [36946,36950]"
    },
    {
      "src": "contract: contract [23487,23495]",
      "dest": "contract: contract [23486,23494]"
    },
    {
      "src": "returns: returns [28752,28759]",
      "dest": "returns: returns [28751,28758]"
    },
    {
      "src": "comment: // back. This is the compiler's defense against contract upgrades and [5885,5954]",
      "dest": "comment: // back. This is the compiler's defense against contract upgrades and [5412,5481]"
    },
    {
      "src": "uint256: uint256 [53400,53407]",
      "dest": "uint256: uint256 [61321,61328]"
    },
    {
      "src": ".: . [45147,45148]",
      "dest": ".: . [49889,49890]"
    },
    {
      "src": "identifier: require [9366,9373]",
      "dest": "identifier: require [8913,8920]"
    },
    {
      "src": "{: { [12096,12097]",
      "dest": "{: { [11643,11644]"
    },
    {
      "src": "identifier: _curvePool [43235,43245]",
      "dest": "identifier: _curvePool [47407,47417]"
    },
    {
      "src": "assignment_expression [24292,24304]",
      "dest": "assignment_expression [24291,24303]"
    },
    {
      "src": "): ) [48569,48570]",
      "dest": "): ) [56316,56317]"
    },
    {
      "src": "type_name [26276,26283]",
      "dest": "type_name [26275,26282]"
    },
    {
      "src": "function_definition [38640,38762]",
      "dest": "function_definition [39180,39302]"
    },
    {
      "src": "): ) [2266,2267]",
      "dest": "): ) [1770,1771]"
    },
    {
      "src": "): ) [4253,4254]",
      "dest": "): ) [3760,3761]"
    },
    {
      "src": "identifier: amount [36405,36411]",
      "dest": "identifier: amount [36832,36838]"
    },
    {
      "src": "if_statement [21364,21431]",
      "dest": "if_statement [20977,21044]"
    },
    {
      "src": "}: } [18305,18306]",
      "dest": "}: } [17878,17879]"
    },
    {
      "src": "identifier: spender [3056,3063]",
      "dest": "identifier: spender [2560,2567]"
    },
    {
      "src": "type_cast_expression [48196,48209]",
      "dest": "type_cast_expression [55835,55848]"
    },
    {
      "src": "emit_statement [34425,34474]",
      "dest": "emit_statement [34592,34641]"
    },
    {
      "src": "call_argument [47262,47292]",
      "dest": "call_argument [52220,52250]"
    },
    {
      "src": "uint256: uint256 [2690,2697]",
      "dest": "uint256: uint256 [2194,2201]"
    },
    {
      "src": "identifier: TUSD_INDEX [52940,52950]",
      "dest": "identifier: TUSD_INDEX [60861,60871]"
    },
    {
      "src": "type_name [52764,52771]",
      "dest": "type_name [60685,60692]"
    },
    {
      "src": "identifier: ICurveGauge [42629,42640]",
      "dest": "identifier: ICurveGauge [46801,46812]"
    },
    {
      "src": "identifier: yTokenBalance [46721,46734]",
      "dest": "identifier: yTokenBalance [51679,51692]"
    },
    {
      "src": "binary_expression [34774,34796]",
      "dest": "binary_expression [34941,34963]"
    },
    {
      "src": "return_type_definition [11363,11380]",
      "dest": "return_type_definition [10910,10927]"
    },
    {
      "src": "identifier: owner [32035,32040]",
      "dest": "identifier: owner [32034,32039]"
    },
    {
      "src": "visibility [19500,19508]",
      "dest": "visibility [19093,19101]"
    },
    {
      "src": "return_statement [8899,8950]",
      "dest": "return_statement [8446,8497]"
    },
    {
      "src": "primitive_type [17595,17600]",
      "dest": "primitive_type [17168,17173]"
    },
    {
      "src": "identifier: sub [49620,49623]",
      "dest": "identifier: sub [57231,57234]"
    },
    {
      "src": "number_literal: 0 [22090,22091]",
      "dest": "number_literal: 0 [21703,21704]"
    },
    {
      "src": "-: - [43256,43257]",
      "dest": "-: - [47428,47429]"
    },
    {
      "src": "type_name [12657,12664]",
      "dest": "type_name [12204,12211]"
    },
    {
      "src": "if: if [49445,49447]",
      "dest": "if: if [57136,57138]"
    },
    {
      "src": "identifier: _owner [35325,35331]",
      "dest": "identifier: _owner [35492,35498]"
    },
    {
      "src": "type_name [16114,16121]",
      "dest": "type_name [15687,15694]"
    },
    {
      "src": "): ) [17655,17656]",
      "dest": "): ) [17228,17229]"
    },
    {
      "src": "primitive_type [23702,23709]",
      "dest": "primitive_type [23701,23708]"
    },
    {
      "src": ",: , [26140,26141]",
      "dest": ",: , [26139,26140]"
    },
    {
      "src": "type_name [51793,51800]",
      "dest": "type_name [59716,59723]"
    },
    {
      "src": "string_literal [8916,8948]",
      "dest": "string_literal [8463,8495]"
    },
    {
      "src": "return_statement [17190,17285]",
      "dest": "return_statement [16763,16858]"
    },
    {
      "src": "identifier: sender [50495,50501]",
      "dest": "identifier: sender [57589,57595]"
    },
    {
      "src": "address: address [26261,26268]",
      "dest": "address: address [26260,26267]"
    },
    {
      "src": "call_argument [52474,52485]",
      "dest": "call_argument [60395,60406]"
    },
    {
      "src": "function: function [38640,38648]",
      "dest": "function: function [39180,39188]"
    },
    {
      "src": "]: ] [32204,32205]",
      "dest": "]: ] [32203,32204]"
    },
    {
      "src": "expression_statement [7401,7424]",
      "dest": "expression_statement [6928,6951]"
    },
    {
      "src": "(: ( [45915,45916]",
      "dest": "(: ( [50760,50761]"
    },
    {
      "src": ",: , [16128,16129]",
      "dest": ",: , [15701,15702]"
    },
    {
      "src": "binary_expression [31125,31146]",
      "dest": "binary_expression [31124,31145]"
    },
    {
      "src": "view: view [37028,37032]",
      "dest": "view: view [37455,37459]"
    },
    {
      "src": "identifier: name [24232,24236]",
      "dest": "identifier: name [24231,24235]"
    },
    {
      "src": "call_argument [45976,45988]",
      "dest": "call_argument [50821,50833]"
    },
    {
      "src": "type_name [10671,10678]",
      "dest": "type_name [10218,10225]"
    },
    {
      "src": "identifier: value [17233,17238]",
      "dest": "identifier: value [16806,16811]"
    },
    {
      "src": "): ) [53114,53115]",
      "dest": "): ) [61035,61036]"
    },
    {
      "src": "call_argument [35311,35312]",
      "dest": "call_argument [35478,35479]"
    },
    {
      "src": "number_unit [44206,44211]",
      "dest": "number_unit [48336,48341]"
    },
    {
      "src": "member_expression [45129,45155]",
      "dest": "member_expression [49871,49897]"
    },
    {
      "src": "primitive_type [4180,4187]",
      "dest": "primitive_type [3687,3694]"
    },
    {
      "src": "call_argument [27369,27375]",
      "dest": "call_argument [27368,27374]"
    },
    {
      "src": "identifier: IERC20 [23529,23535]",
      "dest": "identifier: IERC20 [23528,23534]"
    },
    {
      "src": "\": \" [49199,49200]",
      "dest": "\": \" [57025,57026]"
    },
    {
      "src": "string: string [11321,11327]",
      "dest": "string: string [10868,10874]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [2139,2207]",
      "dest": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [1643,1711]"
    },
    {
      "src": "string [49335,49370]",
      "dest": "string [47598,47643]"
    },
    {
      "src": "parameter [8834,8843]",
      "dest": "parameter [8381,8390]"
    },
    {
      "src": "function_definition [12029,12159]",
      "dest": "function_definition [11576,11706]"
    },
    {
      "src": "(: ( [29634,29635]",
      "dest": "(: ( [29633,29634]"
    },
    {
      "src": "identifier: onlyOwner [45108,45117]",
      "dest": "identifier: onlyOwner [49793,49802]"
    },
    {
      "src": "return_statement [25582,25602]",
      "dest": "return_statement [25581,25601]"
    },
    {
      "src": "private: private [6501,6508]",
      "dest": "private: private [6028,6035]"
    },
    {
      "src": "uint256: uint256 [26331,26338]",
      "dest": "uint256: uint256 [26330,26337]"
    },
    {
      "src": "yul_function_call [18694,18738]",
      "dest": "yul_function_call [18267,18311]"
    },
    {
      "src": "(: ( [26556,26557]",
      "dest": "(: ( [26555,26556]"
    },
    {
      "src": "string [8479,8508]",
      "dest": "string [8026,8055]"
    },
    {
      "src": ",: , [42653,42654]",
      "dest": ",: , [46825,46826]"
    },
    {
      "src": "string_literal [47886,47928]",
      "dest": "string_literal [55455,55498]"
    },
    {
      "src": "!: ! [21215,21216]",
      "dest": "!: ! [20828,20829]"
    },
    {
      "src": "identifier: a [12665,12666]",
      "dest": "identifier: a [12212,12213]"
    },
    {
      "src": "view: view [36971,36975]",
      "dest": "view: view [37398,37402]"
    },
    {
      "src": "): ) [41203,41204]",
      "dest": "): ) [45375,45376]"
    },
    {
      "src": "primitive_type [26261,26268]",
      "dest": "primitive_type [26260,26267]"
    },
    {
      "src": "uint256: uint256 [38038,38045]",
      "dest": "uint256: uint256 [38560,38567]"
    },
    {
      "src": "expression_statement [24342,24357]",
      "dest": "expression_statement [24341,24356]"
    },
    {
      "src": "return_statement [11548,11557]",
      "dest": "return_statement [11095,11104]"
    },
    {
      "src": "call_argument [44724,44748]",
      "dest": "call_argument [49343,49367]"
    },
    {
      "src": "): ) [17983,17984]",
      "dest": "): ) [17556,17557]"
    },
    {
      "src": "): ) [29820,29821]",
      "dest": "): ) [29819,29820]"
    },
    {
      "src": "*: * [10083,10084]",
      "dest": "*: * [9630,9631]"
    },
    {
      "src": "identifier: _setupDecimals [32620,32634]",
      "dest": "identifier: _setupDecimals [32619,32633]"
    },
    {
      "src": "identifier: amountWithoutFee [38254,38270]",
      "dest": "identifier: amountWithoutFee [38776,38792]"
    },
    {
      "src": "visibility [16149,16157]",
      "dest": "visibility [15722,15730]"
    },
    {
      "src": "type_name [41790,41797]",
      "dest": "type_name [45962,45969]"
    },
    {
      "src": "identifier: add [44047,44050]",
      "dest": "identifier: add [48521,48524]"
    },
    {
      "src": "identifier: _symbol [24315,24322]",
      "dest": "identifier: _symbol [24314,24321]"
    },
    {
      "src": "true: true [26697,26701]",
      "dest": "true: true [26696,26700]"
    },
    {
      "src": "identifier: yAmount [48695,48702]",
      "dest": "identifier: yAmount [56443,56450]"
    },
    {
      "src": "(: ( [53099,53100]",
      "dest": "(: ( [61020,61021]"
    },
    {
      "src": "identifier: amount [46250,46256]",
      "dest": "identifier: amount [51095,51101]"
    },
    {
      "src": "(: ( [18034,18035]",
      "dest": "(: ( [17607,17608]"
    },
    {
      "src": "(: ( [9345,9346]",
      "dest": "(: ( [8892,8893]"
    },
    {
      "src": "identifier: minCurrencyAmount [48809,48826]",
      "dest": "identifier: minCurrencyAmount [56624,56641]"
    },
    {
      "src": "event: event [41346,41351]",
      "dest": "event: event [45518,45523]"
    },
    {
      "src": "type_name [14953,14968]",
      "dest": "type_name [14526,14541]"
    },
    {
      "src": "identifier: ITrueLender [42697,42708]",
      "dest": "identifier: ITrueLender [46869,46880]"
    },
    {
      "src": "): ) [53377,53378]",
      "dest": "): ) [61298,61299]"
    },
    {
      "src": "{: { [19471,19472]",
      "dest": "{: { [19064,19065]"
    },
    {
      "src": "identifier: amount [36456,36462]",
      "dest": "identifier: amount [36883,36889]"
    },
    {
      "src": "call_expression [48536,48622]",
      "dest": "call_expression [56283,56370]"
    },
    {
      "src": "function: function [45339,45347]",
      "dest": "function: function [50132,50140]"
    },
    {
      "src": "identifier: claimableFees [53711,53724]",
      "dest": "identifier: claimableFees [61632,61645]"
    },
    {
      "src": "call_expression [51910,51964]",
      "dest": "call_expression [59833,59887]"
    },
    {
      "src": "call_expression [51910,51925]",
      "dest": "call_expression [59833,59848]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [16273,16489]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [15846,16062]"
    },
    {
      "src": "function_definition [2213,2268]",
      "dest": "function_definition [1717,1772]"
    },
    {
      "src": "\": \" [48620,48621]",
      "dest": "\": \" [56368,56369]"
    },
    {
      "src": "identifier: amountWithoutFee [49095,49111]",
      "dest": "identifier: amountWithoutFee [56910,56926]"
    },
    {
      "src": "view: view [26317,26321]",
      "dest": "view: view [26316,26320]"
    },
    {
      "src": "block_statement [18778,18833]",
      "dest": "block_statement [18351,18406]"
    },
    {
      "src": "constructor_definition [6525,6590]",
      "dest": "constructor_definition [6052,6117]"
    },
    {
      "src": "identifier: msg [49303,49306]",
      "dest": "identifier: msg [47566,47569]"
    },
    {
      "src": "type_name [36066,36073]",
      "dest": "type_name [36493,36500]"
    },
    {
      "src": "=: = [40581,40582]",
      "dest": "=: = [44753,44754]"
    },
    {
      "src": "\": \" [16224,16225]",
      "dest": "\": \" [15797,15798]"
    },
    {
      "src": ".: . [30636,30637]",
      "dest": ".: . [30635,30636]"
    },
    {
      "src": "}: } [16690,16691]",
      "dest": "}: } [16263,16264]"
    },
    {
      "src": "identifier: newOwner [35735,35743]",
      "dest": "identifier: newOwner [35902,35910]"
    },
    {
      "src": "(: ( [8909,8910]",
      "dest": "(: ( [8456,8457]"
    },
    {
      "src": "function: function [30331,30339]",
      "dest": "function: function [30330,30338]"
    },
    {
      "src": "{: { [10725,10726]",
      "dest": "{: { [10272,10273]"
    },
    {
      "src": "identifier: amount [27369,27375]",
      "dest": "identifier: amount [27368,27374]"
    },
    {
      "src": "comment: /**      * @dev borrow from pool      * 1. Transfer TUSD to sender      * 2. Only lending pool should be allowed to call this      */ [38071,38208]",
      "dest": "comment: /**      * @dev borrow from pool      * 1. Transfer TUSD to sender      * 2. Only lending pool should be allowed to call this      */ [38593,38730]"
    },
    {
      "src": "}: } [32278,32279]",
      "dest": "}: } [32277,32278]"
    },
    {
      "src": "function_body [8424,8538]",
      "dest": "function_body [7971,8085]"
    },
    {
      "src": "identifier: sender [29795,29801]",
      "dest": "identifier: sender [29794,29800]"
    },
    {
      "src": ".: . [46571,46572]",
      "dest": ".: . [51529,51530]"
    },
    {
      "src": "call_argument [50184,50219]",
      "dest": "call_argument [57277,57312]"
    },
    {
      "src": "(: ( [53399,53400]",
      "dest": "(: ( [61320,61321]"
    },
    {
      "src": "identifier: amount [30371,30377]",
      "dest": "identifier: amount [30370,30376]"
    },
    {
      "src": "type_name [8879,8886]",
      "dest": "type_name [8426,8433]"
    },
    {
      "src": "identifier: b [10085,10086]",
      "dest": "identifier: b [9632,9633]"
    },
    {
      "src": "): ) [34577,34578]",
      "dest": "): ) [34744,34745]"
    },
    {
      "src": "visibility [45369,45377]",
      "dest": "visibility [50162,50170]"
    },
    {
      "src": "(: ( [32132,32133]",
      "dest": "(: ( [32131,32132]"
    },
    {
      "src": "uint256: uint256 [11310,11317]",
      "dest": "uint256: uint256 [10857,10864]"
    },
    {
      "src": "(: ( [17578,17579]",
      "dest": "(: ( [17151,17152]"
    },
    {
      "src": ",: , [34060,34061]",
      "dest": ",: , [34227,34228]"
    },
    {
      "src": "parameter [50736,50758]",
      "dest": "parameter [58650,58672]"
    },
    {
      "src": "identifier: approveCurve [45084,45096]",
      "dest": "identifier: resetApprovals [49767,49781]"
    },
    {
      "src": "identifier: ensureEnoughTokensAreAvailable [47231,47261]",
      "dest": "identifier: ensureEnoughTokensAreAvailable [52189,52219]"
    },
    {
      "src": "identifier: amount [32217,32223]",
      "dest": "identifier: amount [32216,32222]"
    },
    {
      "src": "): ) [50520,50521]",
      "dest": "): ) [57614,57615]"
    },
    {
      "src": "\": \" [8507,8508]",
      "dest": "\": \" [8054,8055]"
    },
    {
      "src": "}: } [10181,10182]",
      "dest": "}: } [9728,9729]"
    },
    {
      "src": "call_argument [48859,48866]",
      "dest": "call_argument [56674,56681]"
    },
    {
      "src": "identifier: account [31125,31132]",
      "dest": "identifier: account [31124,31131]"
    },
    {
      "src": "identifier: from [4463,4467]",
      "dest": "identifier: from [3970,3974]"
    },
    {
      "src": "call_argument [29984,29990]",
      "dest": "call_argument [29983,29989]"
    },
    {
      "src": "identifier: _curvePool [42883,42893]",
      "dest": "identifier: _curvePool [47055,47065]"
    },
    {
      "src": "identifier: fee [44884,44887]",
      "dest": "identifier: fee [49503,49506]"
    },
    {
      "src": "parameter [38986,39009]",
      "dest": "parameter [39544,39567]"
    },
    {
      "src": "return: return [28968,28974]",
      "dest": "return: return [28967,28973]"
    },
    {
      "src": "): ) [18737,18738]",
      "dest": "): ) [18310,18311]"
    },
    {
      "src": "call_argument [21972,21976]",
      "dest": "call_argument [21585,21589]"
    },
    {
      "src": ".: . [43210,43211]",
      "dest": ".: . [47382,47383]"
    },
    {
      "src": "external: external [37835,37843]",
      "dest": "external: external [38357,38365]"
    },
    {
      "src": "type_name [38246,38253]",
      "dest": "type_name [38768,38775]"
    },
    {
      "src": "(: ( [46420,46421]",
      "dest": "(: ( [51378,51379]"
    },
    {
      "src": "[: [ [30606,30607]",
      "dest": "[: [ [30605,30606]"
    },
    {
      "src": "function_body [21584,22099]",
      "dest": "function_body [21197,21712]"
    },
    {
      "src": "identifier: yTokenBalance [43566,43579]",
      "dest": "identifier: yTokenBalance [47962,47975]"
    },
    {
      "src": "address: address [4196,4203]",
      "dest": "address: address [3703,3710]"
    },
    {
      "src": "primitive_type [39828,39835]",
      "dest": "primitive_type [43948,43955]"
    },
    {
      "src": ",: , [47078,47079]",
      "dest": ",: , [52036,52037]"
    },
    {
      "src": "call_argument [30506,30516]",
      "dest": "call_argument [30505,30515]"
    },
    {
      "src": "primitive_type [43700,43707]",
      "dest": "primitive_type [48096,48103]"
    },
    {
      "src": "using_directive [23576,23602]",
      "dest": "using_directive [23575,23601]"
    },
    {
      "src": "\": \" [42837,42838]",
      "dest": "\": \" [47009,47010]"
    },
    {
      "src": "identifier: _totalSupply [23756,23768]",
      "dest": "identifier: _totalSupply [23755,23767]"
    },
    {
      "src": "boolean_literal [28975,28979]",
      "dest": "boolean_literal [28974,28978]"
    },
    {
      "src": "uint256: uint256 [45398,45405]",
      "dest": "uint256: uint256 [50191,50198]"
    },
    {
      "src": "comment: // https://eips.ethereum.org/EIPS/eip-2200) [7348,7391]",
      "dest": "comment: // https://eips.ethereum.org/EIPS/eip-2200) [6875,6918]"
    },
    {
      "src": "string_literal [35620,35660]",
      "dest": "string_literal [35787,35827]"
    },
    {
      "src": "expression_statement [42955,42988]",
      "dest": "expression_statement [47127,47160]"
    },
    {
      "src": "identifier: _status [7401,7408]",
      "dest": "identifier: _status [6928,6935]"
    },
    {
      "src": "function: function [26242,26250]",
      "dest": "function: function [26241,26249]"
    },
    {
      "src": "identifier: initializing [21216,21228]",
      "dest": "identifier: initializing [20829,20841]"
    },
    {
      "src": "visibility [17657,17665]",
      "dest": "visibility [17230,17238]"
    },
    {
      "src": "return: return [27519,27525]",
      "dest": "return: return [27518,27524]"
    },
    {
      "src": "primitive_type [36524,36531]",
      "dest": "primitive_type [36951,36958]"
    },
    {
      "src": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [12990,13571]",
      "dest": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [// importANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [12557,13141]"
    },
    {
      "src": "uint256: uint256 [43248,43255]",
      "dest": "uint256: uint256 [47420,47427]"
    },
    {
      "src": "comment: // unstake in gauge [48635,48654]",
      "dest": "comment: // unstake in gauge [56383,56402]"
    },
    {
      "src": "primitive_type [25402,25407]",
      "dest": "primitive_type [25401,25406]"
    },
    {
      "src": "call_argument [30527,30533]",
      "dest": "call_argument [30526,30532]"
    },
    {
      "src": "uint256: uint256 [44537,44544]",
      "dest": "uint256: uint256 [49156,49163]"
    },
    {
      "src": "primitive_type [14980,14987]",
      "dest": "primitive_type [14553,14560]"
    },
    {
      "src": "}: } [47450,47451]",
      "dest": "}: } [52408,52409]"
    },
    {
      "src": "type_name [31927,31934]",
      "dest": "type_name [31926,31933]"
    },
    {
      "src": "parameter [17132,17145]",
      "dest": "parameter [16705,16718]"
    },
    {
      "src": "identifier: _balances [29936,29945]",
      "dest": "identifier: _balances [29935,29944]"
    },
    {
      "src": "primitive_type [9295,9301]",
      "dest": "primitive_type [8842,8848]"
    },
    {
      "src": "contract_body [36632,37175]",
      "dest": "contract_body [37059,37602]"
    },
    {
      "src": "function_body [15005,15331]",
      "dest": "function_body [14578,14904]"
    },
    {
      "src": "call_expression [50363,50399]",
      "dest": "call_expression [57457,57493]"
    },
    {
      "src": "}: } [36606,36607]",
      "dest": "}: } [37033,37034]"
    },
    {
      "src": "}: } [25608,25609]",
      "dest": "}: } [25607,25608]"
    },
    {
      "src": "address: address [41790,41797]",
      "dest": "address: address [45962,45969]"
    },
    {
      "src": "(: ( [11399,11400]",
      "dest": "(: ( [10946,10947]"
    },
    {
      "src": "expression_statement [47308,47389]",
      "dest": "expression_statement [52266,52347]"
    },
    {
      "src": "function: function [10658,10666]",
      "dest": "function: function [10205,10213]"
    },
    {
      "src": "): ) [53615,53616]",
      "dest": "): ) [61536,61537]"
    },
    {
      "src": "call_argument [17233,17238]",
      "dest": "call_argument [16806,16811]"
    },
    {
      "src": "{: { [26629,26630]",
      "dest": "{: { [26628,26629]"
    },
    {
      "src": "emit_statement [35269,35315]",
      "dest": "emit_statement [35436,35482]"
    },
    {
      "src": "(: ( [31390,31391]",
      "dest": "(: ( [31389,31390]"
    },
    {
      "src": "identifier: target [16122,16128]",
      "dest": "identifier: target [15695,15701]"
    },
    {
      "src": "(: ( [36129,36130]",
      "dest": "(: ( [36556,36557]"
    },
    {
      "src": "function_definition [2653,2730]",
      "dest": "function_definition [2157,2234]"
    },
    {
      "src": "yul_decimal_number: 32 [18705,18707]",
      "dest": "yul_decimal_number: 32 [18278,18280]"
    },
    {
      "src": "expression_statement [32187,32224]",
      "dest": "expression_statement [32186,32223]"
    },
    {
      "src": "return: return [10736,10742]",
      "dest": "return: return [10283,10289]"
    },
    {
      "src": "type_name [34600,34607]",
      "dest": "type_name [34767,34774]"
    },
    {
      "src": "): ) [17283,17284]",
      "dest": "): ) [16856,16857]"
    },
    {
      "src": "uint256: uint256 [49087,49094]",
      "dest": "uint256: uint256 [56902,56909]"
    },
    {
      "src": "call_argument [50117,50138]",
      "dest": "call_argument [58440,58461]"
    },
    {
      "src": "(: ( [48543,48544]",
      "dest": "(: ( [56290,56291]"
    },
    {
      "src": "string_literal [10753,10781]",
      "dest": "string_literal [10300,10328]"
    },
    {
      "src": "identifier: amount [31303,31309]",
      "dest": "identifier: amount [31302,31308]"
    },
    {
      "src": "primitive_type [17957,17963]",
      "dest": "primitive_type [17530,17536]"
    },
    {
      "src": "expression_statement [32027,32096]",
      "dest": "expression_statement [32026,32095]"
    },
    {
      "src": "=: = [6481,6482]",
      "dest": "=: = [6008,6009]"
    },
    {
      "src": "(: ( [35310,35311]",
      "dest": "(: ( [35477,35478]"
    },
    {
      "src": "): ) [11419,11420]",
      "dest": "): ) [10966,10967]"
    },
    {
      "src": "): ) [24652,24653]",
      "dest": "): ) [24651,24652]"
    },
    {
      "src": ".: . [18208,18209]",
      "dest": ".: . [17781,17782]"
    },
    {
      "src": "primitive_type [42228,42235]",
      "dest": "primitive_type [46400,46407]"
    },
    {
      "src": "type_cast_expression [31227,31237]",
      "dest": "type_cast_expression [31226,31236]"
    },
    {
      "src": "return_type_definition [17993,18015]",
      "dest": "return_type_definition [17566,17588]"
    },
    {
      "src": ".: . [52951,52952]",
      "dest": ".: . [60872,60873]"
    },
    {
      "src": "member_expression [42792,42816]",
      "dest": "member_expression [46964,46988]"
    },
    {
      "src": "(: ( [45163,45164]",
      "dest": "(: ( [49966,49967]"
    },
    {
      "src": "identifier: add_liquidity [48056,48069]",
      "dest": "identifier: add_liquidity [55696,55709]"
    },
    {
      "src": "parameter [52764,52786]",
      "dest": "parameter [60685,60707]"
    },
    {
      "src": "type_name [36130,36137]",
      "dest": "type_name [36557,36564]"
    },
    {
      "src": "=: = [35733,35734]",
      "dest": "=: = [35900,35901]"
    },
    {
      "src": ",: , [47979,47980]",
      "dest": ",: , [55549,55550]"
    },
    {
      "src": "identifier: currencyAmount [50903,50917]",
      "dest": "identifier: currencyAmount [58828,58842]"
    },
    {
      "src": "visibility [40153,40159]",
      "dest": "visibility [44273,44279]"
    },
    {
      "src": "call_argument [16224,16256]",
      "dest": "call_argument [15797,15829]"
    },
    {
      "src": "type_name [45456,45463]",
      "dest": "type_name [50249,50256]"
    },
    {
      "src": "primitive_type [50837,50844]",
      "dest": "primitive_type [58762,58769]"
    },
    {
      "src": "public: public [43582,43588]",
      "dest": "public: public [47978,47984]"
    },
    {
      "src": "call_expression [50426,50448]",
      "dest": "call_expression [57520,57542]"
    },
    {
      "src": "number_literal: 0 [31440,31441]",
      "dest": "number_literal: 0 [31439,31440]"
    },
    {
      "src": "identifier: currencyAmount [52772,52786]",
      "dest": "identifier: currencyAmount [60693,60707]"
    },
    {
      "src": ",: , [38244,38245]",
      "dest": ",: , [38766,38767]"
    },
    {
      "src": "type_cast_expression [35303,35313]",
      "dest": "type_cast_expression [35470,35480]"
    },
    {
      "src": "%: % [12799,12800]",
      "dest": "%: % [12346,12347]"
    },
    {
      "src": "comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [30717,31035]",
      "dest": "comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [30716,31034]"
    },
    {
      "src": "}: } [21437,21438]",
      "dest": "}: } [21050,21051]"
    },
    {
      "src": ",: , [8843,8844]",
      "dest": ",: , [8390,8391]"
    },
    {
      "src": "identifier: amountIn [38936,38944]",
      "dest": "identifier: amountIn [39494,39502]"
    },
    {
      "src": "primitive_type [52764,52771]",
      "dest": "primitive_type [60685,60692]"
    },
    {
      "src": "]: ] [29978,29979]",
      "dest": "]: ] [29977,29978]"
    },
    {
      "src": "function_body [44526,44769]",
      "dest": "function_body [49145,49388]"
    },
    {
      "src": "modifier: modifier [34734,34742]",
      "dest": "modifier: modifier [34901,34909]"
    },
    {
      "src": "function: function [24190,24198]",
      "dest": "function: function [24189,24197]"
    },
    {
      "src": "call_argument [29814,29820]",
      "dest": "call_argument [29813,29819]"
    },
    {
      "src": "): ) [46588,46589]",
      "dest": "): ) [51546,51547]"
    },
    {
      "src": "comment: // constructor execution. [13808,13833]",
      "dest": "comment: // constructor execution. [13378,13403]"
    },
    {
      "src": "function: function [21531,21539]",
      "dest": "function: function [21144,21152]"
    },
    {
      "src": "emit: emit [45944,45948]",
      "dest": "emit: emit [50789,50793]"
    },
    {
      "src": "identifier: sender [19570,19576]",
      "dest": "identifier: sender [19163,19169]"
    },
    {
      "src": "returns: returns [16158,16165]",
      "dest": "returns: returns [15731,15738]"
    },
    {
      "src": "identifier: ICurvePool [42596,42606]",
      "dest": "identifier: ICurvePool [46768,46778]"
    },
    {
      "src": ".: . [53706,53707]",
      "dest": ".: . [61627,61628]"
    },
    {
      "src": "bytes: bytes [17165,17170]",
      "dest": "bytes: bytes [16738,16743]"
    },
    {
      "src": "variable_declaration [21949,21961]",
      "dest": "variable_declaration [21562,21574]"
    },
    {
      "src": "type_name [4180,4187]",
      "dest": "type_name [3687,3694]"
    },
    {
      "src": "type_name [9295,9301]",
      "dest": "type_name [8842,8848]"
    },
    {
      "src": "call_argument [35620,35660]",
      "dest": "call_argument [35787,35827]"
    },
    {
      "src": "primitive_type [29627,29634]",
      "dest": "primitive_type [29626,29633]"
    },
    {
      "src": "): ) [51880,51881]",
      "dest": "): ) [59803,59804]"
    },
    {
      "src": "internal: internal [16149,16157]",
      "dest": "internal: internal [15722,15730]"
    },
    {
      "src": "call_argument [48572,48621]",
      "dest": "call_argument [56319,56369]"
    },
    {
      "src": "(: ( [2233,2234]",
      "dest": "(: ( [1737,1738]"
    },
    {
      "src": ",: , [47354,47355]",
      "dest": ",: , [52312,52313]"
    },
    {
      "src": "return: return [19559,19565]",
      "dest": "return: return [19152,19158]"
    },
    {
      "src": "(: ( [25401,25402]",
      "dest": "(: ( [25400,25401]"
    },
    {
      "src": "): ) [43671,43672]",
      "dest": "): ) [48067,48068]"
    },
    {
      "src": "identifier: recipient [27248,27257]",
      "dest": "identifier: recipient [27247,27256]"
    },
    {
      "src": "comment: // under construction or not. [21910,21939]",
      "dest": "comment: // under construction or not. [21523,21552]"
    },
    {
      "src": "identifier: flush [47758,47763]",
      "dest": "identifier: flush [55327,55332]"
    },
    {
      "src": "pure: pure [9332,9336]",
      "dest": "pure: pure [8879,8883]"
    },
    {
      "src": "uint256: uint256 [50736,50743]",
      "dest": "uint256: uint256 [58650,58657]"
    },
    {
      "src": "expression_statement [7081,7145]",
      "dest": "expression_statement [6608,6672]"
    },
    {
      "src": "(: ( [29697,29698]",
      "dest": "(: ( [29696,29697]"
    },
    {
      "src": "event: event [34108,34113]",
      "dest": "event: event [34275,34280]"
    },
    {
      "src": "parameter [16598,16610]",
      "dest": "parameter [16171,16183]"
    },
    {
      "src": "identifier: ITrueFiPool [39757,39768]",
      "dest": "identifier: ITrueFiPool [43877,43888]"
    },
    {
      "src": "\": \" [10117,10118]",
      "dest": "\": \" [9664,9665]"
    },
    {
      "src": "identifier: _lender [49325,49332]",
      "dest": "identifier: _lender [47588,47595]"
    },
    {
      "src": "identifier: deposit [48159,48166]",
      "dest": "identifier: deposit [55941,55948]"
    },
    {
      "src": "identifier: owner [32199,32204]",
      "dest": "identifier: owner [32198,32203]"
    },
    {
      "src": "returns: returns [16589,16596]",
      "dest": "returns: returns [16162,16169]"
    },
    {
      "src": "public: public [42762,42768]",
      "dest": "public: public [46934,46940]"
    },
    {
      "src": "identifier: Repaid [50884,50890]",
      "dest": "identifier: Repaid [58809,58815]"
    },
    {
      "src": "primitive_type [41790,41797]",
      "dest": "primitive_type [45962,45969]"
    },
    {
      "src": "string [12124,12150]",
      "dest": "string [11671,11697]"
    },
    {
      "src": "call_argument [49335,49370]",
      "dest": "call_argument [47598,47643]"
    },
    {
      "src": "comment: /**      * @dev repay debt by transferring tokens to the contract      * @param currencyAmount amount to repay      */ [50594,50715]",
      "dest": "comment: /**      * @dev repay debt by transferring tokens to the contract      * @param currencyAmount amount to repay      */ [58508,58629]"
    },
    {
      "src": "identifier: require [34766,34773]",
      "dest": "identifier: require [34933,34940]"
    },
    {
      "src": "identifier: functionCallWithValue [17557,17578]",
      "dest": "identifier: functionCallWithValue [17130,17151]"
    },
    {
      "src": "address: address [25691,25698]",
      "dest": "address: address [25690,25697]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [1922,1953]",
      "dest": "comment: // SPDX-License-Identifier: MIT [1480,1511]"
    },
    {
      "src": ".: . [47347,47348]",
      "dest": ".: . [52305,52306]"
    },
    {
      "src": "(: ( [23690,23691]",
      "dest": "(: ( [23689,23690]"
    },
    {
      "src": "function_definition [36510,36548]",
      "dest": "function_definition [36937,36975]"
    },
    {
      "src": "): ) [18198,18199]",
      "dest": "): ) [17771,17772]"
    },
    {
      "src": "return_statement [28146,28158]",
      "dest": "return_statement [28145,28157]"
    },
    {
      "src": "identifier: amount [31985,31991]",
      "dest": "identifier: amount [31984,31990]"
    },
    {
      "src": "identifier: yAmounts [53011,53019]",
      "dest": "identifier: yAmounts [60932,60940]"
    },
    {
      "src": "): ) [26338,26339]",
      "dest": "): ) [26337,26338]"
    },
    {
      "src": "(: ( [51941,51942]",
      "dest": "(: ( [59864,59865]"
    },
    {
      "src": "call_argument [49705,49721]",
      "dest": "call_argument [57879,57895]"
    },
    {
      "src": "call_argument [30434,30435]",
      "dest": "call_argument [30433,30434]"
    },
    {
      "src": "string [8916,8948]",
      "dest": "string [8463,8495]"
    },
    {
      "src": "call_argument [49199,49234]",
      "dest": "call_argument [57025,57061]"
    },
    {
      "src": "struct_expression [15199,15230]",
      "dest": "struct_expression [14772,14803]"
    },
    {
      "src": "parameter [28712,28735]",
      "dest": "parameter [28711,28734]"
    },
    {
      "src": "return_type_definition [2250,2267]",
      "dest": "return_type_definition [1754,1771]"
    },
    {
      "src": "): ) [31997,31998]",
      "dest": "): ) [31996,31997]"
    },
    {
      "src": "return_type_definition [37649,37665]",
      "dest": "return_type_definition [38171,38187]"
    },
    {
      "src": "): ) [46372,46373]",
      "dest": "): ) [51330,51331]"
    },
    {
      "src": "visibility [42762,42768]",
      "dest": "visibility [46934,46940]"
    },
    {
      "src": "visibility [40117,40123]",
      "dest": "visibility [44237,44243]"
    },
    {
      "src": "identifier: to [39028,39030]",
      "dest": "identifier: to [39586,39588]"
    },
    {
      "src": "identifier: _lender [44051,44058]",
      "dest": "identifier: _lender [48816,48823]"
    },
    {
      "src": "returns: returns [43938,43945]",
      "dest": "returns: returns [48234,48241]"
    },
    {
      "src": "comment: // File: contracts/truefi/interface/IUniswapRouter.sol [38769,38823]",
      "dest": "comment: // import {Address} from \"@openzeppelin/contracts/utils/Address.sol\"; [21931,22000]"
    },
    {
      "src": "call_argument [16218,16222]",
      "dest": "call_argument [15791,15795]"
    },
    {
      "src": "identifier: amount [2698,2704]",
      "dest": "identifier: amount [2202,2208]"
    },
    {
      "src": "state_mutability [43589,43593]",
      "dest": "state_mutability [47985,47989]"
    },
    {
      "src": "identifier: require [17700,17707]",
      "dest": "identifier: require [17273,17280]"
    },
    {
      "src": "call_expression [45665,45678]",
      "dest": "call_expression [50458,50471]"
    },
    {
      "src": "call_argument [47356,47386]",
      "dest": "call_argument [52314,52344]"
    },
    {
      "src": "type_name [9769,9776]",
      "dest": "type_name [9316,9323]"
    },
    {
      "src": "event: event [41512,41517]",
      "dest": "event: event [45684,45689]"
    },
    {
      "src": "member_expression [47044,47067]",
      "dest": "member_expression [52002,52025]"
    },
    {
      "src": "identifier: a [12050,12051]",
      "dest": "identifier: a [11597,11598]"
    },
    {
      "src": ",: , [51953,51954]",
      "dest": ",: , [59876,59877]"
    },
    {
      "src": "view: view [2245,2249]",
      "dest": "view: view [1749,1753]"
    },
    {
      "src": "(: ( [48195,48196]",
      "dest": "(: ( [55834,55835]"
    },
    {
      "src": "using_directive [23543,23570]",
      "dest": "using_directive [23542,23569]"
    },
    {
      "src": "string_literal [30438,30471]",
      "dest": "string_literal [30437,30470]"
    },
    {
      "src": "parameter [9724,9733]",
      "dest": "parameter [9271,9280]"
    },
    {
      "src": "internal: internal [9323,9331]",
      "dest": "internal: internal [8870,8878]"
    },
    {
      "src": "{: { [36632,36633]",
      "dest": "{: { [37059,37060]"
    },
    {
      "src": "[: [ [36073,36074]",
      "dest": "[: [ [36500,36501]"
    },
    {
      "src": "address: address [35303,35310]",
      "dest": "address: address [35470,35477]"
    },
    {
      "src": "identifier: yAmount [48544,48551]",
      "dest": "identifier: yAmount [56291,56298]"
    },
    {
      "src": "call_expression [12114,12151]",
      "dest": "call_expression [11661,11698]"
    },
    {
      "src": "returns: returns [53391,53398]",
      "dest": "returns: returns [61312,61319]"
    },
    {
      "src": "number_literal: 0 [10019,10020]",
      "dest": "number_literal: 0 [9566,9567]"
    },
    {
      "src": ".: . [43689,43690]",
      "dest": ".: . [48085,48086]"
    },
    {
      "src": "primitive_type [17579,17586]",
      "dest": "primitive_type [17152,17159]"
    },
    {
      "src": "[: [ [26369,26370]",
      "dest": "[: [ [26368,26369]"
    },
    {
      "src": "return: return [13976,13982]",
      "dest": "return: return [13546,13552]"
    },
    {
      "src": "function_body [13643,13999]",
      "dest": "function_body [13213,13569]"
    },
    {
      "src": "address: address [26276,26283]",
      "dest": "address: address [26275,26282]"
    },
    {
      "src": "source_file [0,53736]",
      "dest": "source_file [0,61657]"
    },
    {
      "src": "call_argument [15024,15055]",
      "dest": "call_argument [14597,14628]"
    },
    {
      "src": "identifier: yTokenAmount [52865,52877]",
      "dest": "identifier: yTokenAmount [60786,60798]"
    },
    {
      "src": "\": \" [49842,49843]",
      "dest": "\": \" [57977,57978]"
    },
    {
      "src": "type_name [52986,53003]",
      "dest": "type_name [60907,60924]"
    },
    {
      "src": "visibility [20921,20928]",
      "dest": "visibility [20534,20541]"
    },
    {
      "src": "return_type_definition [43419,43435]",
      "dest": "return_type_definition [47815,47831]"
    },
    {
      "src": ".: . [48158,48159]",
      "dest": ".: . [55940,55941]"
    },
    {
      "src": "state_variable_declaration [40213,40240]",
      "dest": "state_variable_declaration [44333,44360]"
    },
    {
      "src": "primitive_type [26041,26048]",
      "dest": "primitive_type [26040,26047]"
    },
    {
      "src": "function: function [38427,38435]",
      "dest": "function: function [38949,38957]"
    },
    {
      "src": "library_declaration [12967,18854]",
      "dest": "library_declaration [12534,18427]"
    },
    {
      "src": "{: { [15005,15006]",
      "dest": "{: { [14578,14579]"
    },
    {
      "src": "identifier: joiningFee [40361,40371]",
      "dest": "identifier: joiningFee [44481,44491]"
    },
    {
      "src": "type_cast_expression [21964,21977]",
      "dest": "type_cast_expression [21577,21590]"
    },
    {
      "src": "struct_field_assignment [15215,15228]",
      "dest": "struct_field_assignment [14788,14801]"
    },
    {
      "src": "\": \" [29759,29760]",
      "dest": "\": \" [29758,29759]"
    },
    {
      "src": "): ) [38630,38631]",
      "dest": "): ) [39170,39171]"
    },
    {
      "src": "identifier: Initializable [34047,34060]",
      "dest": "identifier: Initializable [34214,34227]"
    },
    {
      "src": "(: ( [26127,26128]",
      "dest": "(: ( [26126,26127]"
    },
    {
      "src": "call_argument [47344,47354]",
      "dest": "call_argument [52302,52312]"
    },
    {
      "src": "call_argument [29635,29636]",
      "dest": "call_argument [29634,29635]"
    },
    {
      "src": "function_definition [14934,15331]",
      "dest": "function_definition [14507,14904]"
    },
    {
      "src": "binary_expression [46308,46339]",
      "dest": "binary_expression [51265,51296]"
    },
    {
      "src": "primitive_type [38955,38962]",
      "dest": "primitive_type [39513,39520]"
    },
    {
      "src": "boolean_literal [21414,21419]",
      "dest": "boolean_literal [21027,21032]"
    },
    {
      "src": "expression_statement [10097,10154]",
      "dest": "expression_statement [9644,9701]"
    },
    {
      "src": "parameter [44876,44887]",
      "dest": "parameter [49495,49506]"
    },
    {
      "src": ",: , [30361,30362]",
      "dest": ",: , [30360,30361]"
    },
    {
      "src": "call_argument [35342,35343]",
      "dest": "call_argument [35509,35510]"
    },
    {
      "src": "comment: // slot's contents, replace the bits taken up by the boolean, and then write [5803,5879]",
      "dest": "comment: // slot's contents, replace the bits taken up by the boolean, and then write [5330,5406]"
    },
    {
      "src": "parameter [2375,2390]",
      "dest": "parameter [1879,1894]"
    },
    {
      "src": "comment: // remove TUSD from curve [48716,48741]",
      "dest": "comment: // remove TUSD from curve [56464,56489]"
    },
    {
      "src": "identifier: _totalSupply [25589,25601]",
      "dest": "identifier: _totalSupply [25588,25600]"
    },
    {
      "src": "comment: // withdraw basket of loan tokens [46835,46868]",
      "dest": "comment: // withdraw basket of loan tokens [51793,51826]"
    },
    {
      "src": "member_expression [52880,52898]",
      "dest": "member_expression [60801,60819]"
    },
    {
      "src": "external: external [38054,38062]",
      "dest": "external: external [38576,38584]"
    },
    {
      "src": "call_argument [50491,50501]",
      "dest": "call_argument [57585,57595]"
    },
    {
      "src": "public: public [27290,27296]",
      "dest": "public: public [27289,27295]"
    },
    {
      "src": "primitive_type [12087,12094]",
      "dest": "primitive_type [11634,11641]"
    },
    {
      "src": "): ) [45189,45190]",
      "dest": "): ) [49920,49921]"
    },
    {
      "src": "identifier: errorMessage [17971,17983]",
      "dest": "identifier: errorMessage [17544,17556]"
    },
    {
      "src": "identifier: Initializable [20682,20695]",
      "dest": "identifier: Initializable [20295,20308]"
    },
    {
      "src": "call_expression [46553,46570]",
      "dest": "call_expression [51511,51528]"
    },
    {
      "src": "binary_expression [49303,49333]",
      "dest": "binary_expression [47566,47596]"
    },
    {
      "src": "): ) [2234,2235]",
      "dest": "): ) [1738,1739]"
    },
    {
      "src": "yul_assignment [13936,13964]",
      "dest": "yul_assignment [13506,13534]"
    },
    {
      "src": "primitive_type [16114,16121]",
      "dest": "primitive_type [15687,15694]"
    },
    {
      "src": "identifier: amount [14988,14994]",
      "dest": "identifier: amount [14561,14567]"
    },
    {
      "src": "): ) [12062,12063]",
      "dest": "): ) [11609,11610]"
    },
    {
      "src": "type_name [52809,52816]",
      "dest": "type_name [60730,60737]"
    },
    {
      "src": "): ) [16179,16180]",
      "dest": "): ) [15752,15753]"
    },
    {
      "src": "visibility [14996,15004]",
      "dest": "visibility [14569,14577]"
    },
    {
      "src": "interface_declaration [37539,38470]",
      "dest": "interface_declaration [38061,38992]"
    },
    {
      "src": "primitive_type [51934,51941]",
      "dest": "primitive_type [59857,59864]"
    },
    {
      "src": "identifier: amount [42265,42271]",
      "dest": "identifier: amount [46437,46443]"
    },
    {
      "src": "primitive_type [28695,28702]",
      "dest": "primitive_type [28694,28701]"
    },
    {
      "src": "return_type_definition [13628,13642]",
      "dest": "return_type_definition [13198,13212]"
    },
    {
      "src": "type_name [17165,17170]",
      "dest": "type_name [16738,16743]"
    },
    {
      "src": "false: false [50155,50160]",
      "dest": "false: false [58486,58491]"
    },
    {
      "src": "parameter [4180,4194]",
      "dest": "parameter [3687,3701]"
    },
    {
      "src": "constant: constant [6415,6423]",
      "dest": "constant: constant [5942,5950]"
    },
    {
      "src": "variable_declaration_statement [45456,45498]",
      "dest": "variable_declaration_statement [50249,50291]"
    },
    {
      "src": "call_expression [44015,44032]",
      "dest": "call_expression [48503,48520]"
    },
    {
      "src": "\": \" [32137,32138]",
      "dest": "\": \" [32136,32137]"
    },
    {
      "src": "}: } [33428,33429]",
      "dest": "}: } [33427,33428]"
    },
    {
      "src": "true: true [21289,21293]",
      "dest": "true: true [20902,20906]"
    },
    {
      "src": "parameter [49063,49085]",
      "dest": "parameter [56878,56900]"
    },
    {
      "src": ",: , [46813,46814]",
      "dest": ",: , [51771,51772]"
    },
    {
      "src": "identifier: initializing [21399,21411]",
      "dest": "identifier: initializing [21012,21024]"
    },
    {
      "src": "emit: emit [34425,34429]",
      "dest": "emit: emit [34592,34596]"
    },
    {
      "src": "(: ( [19642,19643]",
      "dest": "(: ( [19235,19236]"
    },
    {
      "src": ",: , [17593,17594]",
      "dest": ",: , [17166,17167]"
    },
    {
      "src": "{: { [51054,51055]",
      "dest": "{: { [58977,58978]"
    },
    {
      "src": "-: - [9420,9421]",
      "dest": "-: - [8967,8968]"
    },
    {
      "src": ">: > [47211,47212]",
      "dest": ">: > [52169,52170]"
    },
    {
      "src": "identifier: sender [50895,50901]",
      "dest": "identifier: sender [58820,58826]"
    },
    {
      "src": ",: , [48807,48808]",
      "dest": ",: , [56622,56623]"
    },
    {
      "src": "type_name [39828,39835]",
      "dest": "type_name [43948,43955]"
    },
    {
      "src": "call_argument [50891,50901]",
      "dest": "call_argument [58816,58826]"
    },
    {
      "src": "return: return [24497,24503]",
      "dest": "return: return [24496,24502]"
    },
    {
      "src": "array_access [27418,27437]",
      "dest": "array_access [27417,27436]"
    },
    {
      "src": "primitive_type [35334,35341]",
      "dest": "primitive_type [35501,35508]"
    },
    {
      "src": "(: ( [36304,36305]",
      "dest": "(: ( [36731,36732]"
    },
    {
      "src": "return: return [26351,26357]",
      "dest": "return: return [26350,26356]"
    },
    {
      "src": "primitive_type [31136,31143]",
      "dest": "primitive_type [31135,31142]"
    },
    {
      "src": "call_argument [50155,50160]",
      "dest": "call_argument [58486,58491]"
    },
    {
      "src": "): ) [46338,46339]",
      "dest": "): ) [51295,51296]"
    },
    {
      "src": "identifier: returndata_size [18636,18651]",
      "dest": "identifier: returndata_size [18209,18224]"
    },
    {
      "src": "string [15231,15233]",
      "dest": "string [14804,14806]"
    },
    {
      "src": "identifier: amount [46909,46915]",
      "dest": "identifier: amount [51867,51873]"
    },
    {
      "src": "primitive_type [9769,9776]",
      "dest": "primitive_type [9316,9323]"
    },
    {
      "src": "identifier: currencyAmount [41368,41382]",
      "dest": "identifier: currencyAmount [45540,45554]"
    },
    {
      "src": "expression_statement [31197,31247]",
      "dest": "expression_statement [31196,31246]"
    },
    {
      "src": "type_alias [23582,23589]",
      "dest": "type_alias [23581,23588]"
    },
    {
      "src": "emit_statement [50879,50919]",
      "dest": "emit_statement [58804,58844]"
    },
    {
      "src": "uint256: uint256 [36985,36992]",
      "dest": "uint256: uint256 [37412,37419]"
    },
    {
      "src": "number_literal: 0 [30681,30682]",
      "dest": "number_literal: 0 [30680,30681]"
    },
    {
      "src": "primitive_type [36808,36814]",
      "dest": "primitive_type [37235,37241]"
    },
    {
      "src": "uint256: uint256 [27268,27275]",
      "dest": "uint256: uint256 [27267,27274]"
    },
    {
      "src": "): ) [30700,30701]",
      "dest": "): ) [30699,30700]"
    },
    {
      "src": "||: || [21114,21116]",
      "dest": "||: || [20727,20729]"
    },
    {
      "src": "variable_declaration_statement [46493,46590]",
      "dest": "variable_declaration_statement [51451,51548]"
    },
    {
      "src": "comment: /**  *Submitted for verification at Etherscan.io on 2020-11-25 */ [0,67]",
      "dest": "comment
    },
    {
      "src": "identifier: a [8447,8448]",
      "dest": "identifier: a [7994,7995]"
    },
    {
      "src": "identifier: JoiningFeeChanged [44951,44968]",
      "dest": "identifier: JoiningFeeChanged [49653,49670]"
    },
    {
      "src": "contract_body [19471,19828]",
      "dest": "contract_body [19064,19421]"
    },
    {
      "src": "public: public [40354,40360]",
      "dest": "public: public [44474,44480]"
    },
    {
      "src": "primitive_type [35534,35541]",
      "dest": "primitive_type [35701,35708]"
    },
    {
      "src": "uint256: uint256 [48462,48469]",
      "dest": "uint256: uint256 [56209,56216]"
    },
    {
      "src": "parenthesized_expression [18803,18817]",
      "dest": "parenthesized_expression [18376,18390]"
    },
    {
      "src": "[: [ [32198,32199]",
      "dest": "[: [ [32197,32198]"
    },
    {
      "src": "contract_declaration [5608,7434]",
      "dest": "contract_declaration [5135,6961]"
    },
    {
      "src": "identifier: a [10747,10748]",
      "dest": "identifier: a [10294,10295]"
    },
    {
      "src": "identifier: _currencyToken [45868,45882]",
      "dest": "identifier: _currencyToken [50713,50727]"
    },
    {
      "src": "view: view [35910,35914]",
      "dest": "view: view [36172,36176]"
    },
    {
      "src": "parameter [36448,36462]",
      "dest": "parameter [36875,36889]"
    },
    {
      "src": "override_specifier [27305,27313]",
      "dest": "override_specifier [27304,27312]"
    },
    {
      "src": ",: , [52485,52486]",
      "dest": ",: , [60406,60407]"
    },
    {
      "src": "identifier: returndata [18661,18671]",
      "dest": "identifier: returndata [18234,18244]"
    },
    {
      "src": "binary_expression [22084,22091]",
      "dest": "binary_expression [21697,21704]"
    },
    {
      "src": "type_name [38726,38733]",
      "dest": "type_name [39266,39273]"
    },
    {
      "src": "}: } [51106,51107]",
      "dest": "}: } [59029,59030]"
    },
    {
      "src": "): ) [51097,51098]",
      "dest": "): ) [59020,59021]"
    },
    {
      "src": "uint256: uint256 [10682,10689]",
      "dest": "uint256: uint256 [10229,10236]"
    },
    {
      "src": "modifier: modifier [6974,6982]",
      "dest": "modifier: modifier [6501,6509]"
    },
    {
      "src": "state_mutability [37644,37648]",
      "dest": "state_mutability [38166,38170]"
    },
    {
      "src": "(: ( [44875,44876]",
      "dest": "(: ( [49494,49495]"
    },
    {
      "src": "call_argument [44707,44749]",
      "dest": "call_argument [49326,49368]"
    },
    {
      "src": ",: , [42618,42619]",
      "dest": ",: , [46790,46791]"
    },
    {
      "src": "parameter [30346,30361]",
      "dest": "parameter [30345,30360]"
    },
    {
      "src": "identifier: claimableFees [40422,40435]",
      "dest": "identifier: claimableFees [44542,44555]"
    },
    {
      "src": "}: } [50585,50586]",
      "dest": "}: } [57679,57680]"
    },
    {
      "src": "member_expression [51975,52010]",
      "dest": "member_expression [59898,59933]"
    },
    {
      "src": "address: address [3048,3055]",
      "dest": "address: address [2552,2559]"
    },
    {
      "src": "uint256: uint256 [31073,31080]",
      "dest": "uint256: uint256 [31072,31079]"
    },
    {
      "src": "constant: constant [6463,6471]",
      "dest": "constant: constant [5990,5998]"
    },
    {
      "src": "call_expression [17197,17284]",
      "dest": "call_expression [16770,16857]"
    },
    {
      "src": "call_argument [52487,52493]",
      "dest": "call_argument [60408,60414]"
    },
    {
      "src": "function_body [10725,10790]",
      "dest": "function_body [10272,10337]"
    },
    {
      "src": "return: return [10037,10043]",
      "dest": "return: return [9584,9590]"
    },
    {
      "src": "identifier: mul [49723,49726]",
      "dest": "identifier: mul [57897,57900]"
    },
    {
      "src": ".: . [50494,50495]",
      "dest": ".: . [57588,57589]"
    },
    {
      "src": "}: } [48874,48875]",
      "dest": "}: } [56689,56690]"
    },
    {
      "src": "{: { [8424,8425]",
      "dest": "{: { [7971,7972]"
    },
    {
      "src": "comment: // mint pool tokens [45738,45757]",
      "dest": "comment: // mint pool tokens [50531,50550]"
    },
    {
      "src": "address: address [4707,4714]",
      "dest": "address: address [4214,4221]"
    },
    {
      "src": "type_name [28761,28765]",
      "dest": "type_name [28760,28764]"
    },
    {
      "src": "==: == [34781,34783]",
      "dest": "==: == [34948,34950]"
    },
    {
      "src": "\": \" [15057,15058]",
      "dest": "\": \" [14630,14631]"
    },
    {
      "src": "type_cast_expression [45908,45921]",
      "dest": "type_cast_expression [50753,50766]"
    },
    {
      "src": "primitive_type [43947,43954]",
      "dest": "primitive_type [48243,48250]"
    },
    {
      "src": "): ) [8948,8949]",
      "dest": "): ) [8495,8496]"
    },
    {
      "src": "(: ( [48461,48462]",
      "dest": "(: ( [56208,56209]"
    },
    {
      "src": "(: ( [42868,42869]",
      "dest": "(: ( [47040,47041]"
    },
    {
      "src": "member_expression [53427,53460]",
      "dest": "member_expression [61348,61381]"
    },
    {
      "src": "parameter [8381,8390]",
      "dest": "parameter [7928,7937]"
    },
    {
      "src": "): ) [14994,14995]",
      "dest": "): ) [14567,14568]"
    },
    {
      "src": "identifier: _msgSender [27404,27414]",
      "dest": "identifier: _msgSender [27403,27413]"
    },
    {
      "src": "call_expression [16197,16257]",
      "dest": "call_expression [15770,15830]"
    },
    {
      "src": "event_definition [41991,42043]",
      "dest": "event_definition [46163,46215]"
    },
    {
      "src": "call_expression [27418,27507]",
      "dest": "call_expression [27417,27506]"
    },
    {
      "src": "address: address [51934,51941]",
      "dest": "address: address [59857,59864]"
    },
    {
      "src": "member_expression [49605,49623]",
      "dest": "member_expression [57216,57234]"
    },
    {
      "src": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [9789,9868]",
      "dest": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [9336,9415]"
    },
    {
      "src": "primitive_type [36130,36137]",
      "dest": "primitive_type [36557,36564]"
    },
    {
      "src": "event_definition [4669,4747]",
      "dest": "event_definition [4176,4254]"
    },
    {
      "src": "): ) [48209,48210]",
      "dest": "): ) [55848,55849]"
    },
    {
      "src": "): ) [45715,45716]",
      "dest": "): ) [50508,50509]"
    },
    {
      "src": "primitive_type [40941,40948]",
      "dest": "primitive_type [45113,45120]"
    },
    {
      "src": "parameter [27240,27257]",
      "dest": "parameter [27239,27256]"
    },
    {
      "src": "(: ( [38441,38442]",
      "dest": "(: ( [38963,38964]"
    },
    {
      "src": "call_argument [47436,47442]",
      "dest": "call_argument [52394,52400]"
    },
    {
      "src": "type_name [22181,22188]",
      "dest": "type_name [21794,21801]"
    },
    {
      "src": "(: ( [37162,37163]",
      "dest": "(: ( [37589,37590]"
    },
    {
      "src": "}: } [26708,26709]",
      "dest": "}: } [26707,26708]"
    },
    {
      "src": "identifier: _allowances [28850,28861]",
      "dest": "identifier: _allowances [28849,28860]"
    },
    {
      "src": "(: ( [34752,34753]",
      "dest": "(: ( [34919,34920]"
    },
    {
      "src": "type_name [46386,46393]",
      "dest": "type_name [51344,51351]"
    },
    {
      "src": "override: override [26605,26613]",
      "dest": "override: override [26604,26612]"
    },
    {
      "src": "): ) [4502,4503]",
      "dest": "): ) [4009,4010]"
    },
    {
      "src": ",: , [46907,46908]",
      "dest": ",: , [51865,51866]"
    },
    {
      "src": "): ) [28107,28108]",
      "dest": "): ) [28106,28107]"
    },
    {
      "src": "identifier: exit [38033,38037]",
      "dest": "identifier: exit [38555,38559]"
    },
    {
      "src": "(: ( [18045,18046]",
      "dest": "(: ( [17618,17619]"
    },
    {
      "src": ",: , [18720,18721]",
      "dest": ",: , [18293,18294]"
    },
    {
      "src": "uint256: uint256 [46242,46249]",
      "dest": "uint256: uint256 [51087,51094]"
    },
    {
      "src": "=: = [24323,24324]",
      "dest": "=: = [24322,24323]"
    },
    {
      "src": "binary_expression [8447,8452]",
      "dest": "binary_expression [7994,7999]"
    },
    {
      "src": "member_expression [27418,27455]",
      "dest": "member_expression [27417,27454]"
    },
    {
      "src": "): ) [49234,49235]",
      "dest": "): ) [57061,57062]"
    },
    {
      "src": "\": \" [10151,10152]",
      "dest": "\": \" [9698,9699]"
    },
    {
      "src": "public: public [35552,35558]",
      "dest": "public: public [35719,35725]"
    },
    {
      "src": "): ) [35660,35661]",
      "dest": "): ) [35827,35828]"
    },
    {
      "src": "identifier: add [43674,43677]",
      "dest": "identifier: add [48070,48073]"
    },
    {
      "src": "}: } [12158,12159]",
      "dest": "}: } [11705,11706]"
    },
    {
      "src": "public: public [40185,40191]",
      "dest": "public: public [44305,44311]"
    },
    {
      "src": "modifier_invocation [42769,42780]",
      "dest": "modifier_invocation [46941,46952]"
    },
    {
      "src": "variable_declaration_statement [46655,46756]",
      "dest": "variable_declaration_statement [51613,51714]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/GSN/Context.sol [18858,18906]",
      "dest": "comment: // Dependency file: @openzeppelin/contracts/utils/Address.sol [12366,12427]"
    },
    {
      "src": "interface_declaration [38852,39112]",
      "dest": "interface_declaration [39410,39670]"
    },
    {
      "src": "call_expression [44051,44066]",
      "dest": "call_expression [48816,48831]"
    },
    {
      "src": "uint256: uint256 [53362,53369]",
      "dest": "uint256: uint256 [61283,61290]"
    },
    {
      "src": "external: external [36464,36472]",
      "dest": "external: external [36891,36899]"
    },
    {
      "src": "primitive_type [36397,36404]",
      "dest": "primitive_type [36824,36831]"
    },
    {
      "src": "identifier: amount [27456,27462]",
      "dest": "identifier: amount [27455,27461]"
    },
    {
      "src": "state_mutability [2245,2249]",
      "dest": "state_mutability [1749,1753]"
    },
    {
      "src": "inheritance_specifier [23520,23527]",
      "dest": "inheritance_specifier [23519,23526]"
    },
    {
      "src": "primitive_type [2375,2382]",
      "dest": "primitive_type [1879,1886]"
    },
    {
      "src": "function_definition [37002,37050]",
      "dest": "function_definition [37429,37477]"
    },
    {
      "src": "external: external [36714,36722]",
      "dest": "external: external [37141,37149]"
    },
    {
      "src": "internal: internal [19612,19620]",
      "dest": "internal: internal [19205,19213]"
    },
    {
      "src": "internal: internal [16580,16588]",
      "dest": "internal: internal [16153,16161]"
    },
    {
      "src": "identifier: mod [12653,12656]",
      "dest": "identifier: mod [12200,12203]"
    },
    {
      "src": "primitive_type [40984,40991]",
      "dest": "primitive_type [45156,45163]"
    },
    {
      "src": "call_argument [45704,45715]",
      "dest": "call_argument [50497,50508]"
    },
    {
      "src": "parameter [51851,51874]",
      "dest": "parameter [59774,59797]"
    },
    {
      "src": "identifier: ERC20 [23496,23501]",
      "dest": "identifier: ERC20 [23495,23500]"
    },
    {
      "src": "yul_function_call [18701,18720]",
      "dest": "yul_function_call [18274,18293]"
    },
    {
      "src": "identifier: _currencyToken [53667,53681]",
      "dest": "identifier: _currencyToken [61588,61602]"
    },
    {
      "src": "\": \" [31148,31149]",
      "dest": "\": \" [31147,31148]"
    },
    {
      "src": "-: - [43185,43186]",
      "dest": "-: - [47357,47358]"
    },
    {
      "src": "uint256: uint256 [9284,9291]",
      "dest": "uint256: uint256 [8831,8838]"
    },
    {
      "src": "address: address [19531,19538]",
      "dest": "address: address [19124,19131]"
    },
    {
      "src": "=: = [11441,11442]",
      "dest": "=: = [10988,10989]"
    },
    {
      "src": "call_expression [48664,48703]",
      "dest": "call_expression [56412,56451]"
    },
    {
      "src": "function_definition [50721,50926]",
      "dest": "function_definition [58635,58851]"
    },
    {
      "src": "variable_declaration [52857,52877]",
      "dest": "variable_declaration [60778,60798]"
    },
    {
      "src": "]: ] [36671,36672]",
      "dest": "]: ] [37098,37099]"
    },
    {
      "src": "type_name [6447,6454]",
      "dest": "type_name [5974,5981]"
    },
    {
      "src": "return_type_definition [26614,26628]",
      "dest": "return_type_definition [26613,26627]"
    },
    {
      "src": ".: . [46806,46807]",
      "dest": ".: . [51764,51765]"
    },
    {
      "src": "binary_expression [9418,9423]",
      "dest": "binary_expression [8965,8970]"
    },
    {
      "src": "comment: // ========= IN STORAGE CORRUPTION =========== [40052,40098]",
      "dest": "comment: // ========= IN STORAGE CORRUPTION =========== [44172,44218]"
    },
    {
      "src": "(: ( [47043,47044]",
      "dest": "(: ( [52001,52002]"
    },
    {
      "src": "): ) [44211,44212]",
      "dest": "): ) [48341,48342]"
    },
    {
      "src": "expression_statement [50080,50162]",
      "dest": "expression_statement [58403,58493]"
    },
    {
      "src": "emit: emit [48847,48851]",
      "dest": "emit: emit [56662,56666]"
    },
    {
      "src": "parameter [17595,17612]",
      "dest": "parameter [17168,17185]"
    },
    {
      "src": "identifier: amounts [39100,39107]",
      "dest": "identifier: amounts [39658,39665]"
    },
    {
      "src": "}: } [19827,19828]",
      "dest": "}: } [19420,19421]"
    },
    {
      "src": "number_literal: 2 [6483,6484]",
      "dest": "number_literal: 2 [6010,6011]"
    },
    {
      "src": "identifier: Transfer [31414,31422]",
      "dest": "identifier: Transfer [31413,31421]"
    },
    {
      "src": ".: . [19812,19813]",
      "dest": ".: . [19405,19406]"
    },
    {
      "src": "address: address [17904,17911]",
      "dest": "address: address [17477,17484]"
    },
    {
      "src": "view: view [19509,19513]",
      "dest": "view: view [19102,19106]"
    },
    {
      "src": "type_name [38955,38962]",
      "dest": "type_name [39513,39520]"
    },
    {
      "src": "return_type_definition [53391,53408]",
      "dest": "return_type_definition [61312,61329]"
    },
    {
      "src": "(: ( [14952,14953]",
      "dest": "(: ( [14525,14526]"
    },
    {
      "src": "type_name [12042,12049]",
      "dest": "type_name [11589,11596]"
    },
    {
      "src": "]: ] [39091,39092]",
      "dest": "]: ] [39649,39650]"
    },
    {
      "src": "identifier: amount [30527,30533]",
      "dest": "identifier: amount [30526,30532]"
    },
    {
      "src": ".: . [52404,52405]",
      "dest": ".: . [60325,60326]"
    },
    {
      "src": "(: ( [38622,38623]",
      "dest": "(: ( [39162,39163]"
    },
    {
      "src": "uint256: uint256 [36776,36783]",
      "dest": "uint256: uint256 [37203,37210]"
    },
    {
      "src": "boolean_literal [28153,28157]",
      "dest": "boolean_literal [28152,28156]"
    },
    {
      "src": "returns: returns [52800,52807]",
      "dest": "returns: returns [60721,60728]"
    },
    {
      "src": "if_statement [21239,21338]",
      "dest": "if_statement [20852,20951]"
    },
    {
      "src": "identifier: initialize [42858,42868]",
      "dest": "identifier: initialize [47030,47040]"
    },
    {
      "src": "memory: memory [16559,16565]",
      "dest": "memory: memory [16132,16138]"
    },
    {
      "src": "expression_statement [21399,21420]",
      "dest": "expression_statement [21012,21033]"
    },
    {
      "src": "(: ( [43602,43603]",
      "dest": "(: ( [47998,47999]"
    },
    {
      "src": "identifier: amountToMint [45785,45797]",
      "dest": "identifier: amountToMint [50578,50590]"
    },
    {
      "src": "event_paramater [4684,4705]",
      "dest": "event_paramater [4191,4212]"
    },
    {
      "src": "virtual: virtual [26064,26071]",
      "dest": "virtual: virtual [26063,26070]"
    },
    {
      "src": "call_argument [32248,32253]",
      "dest": "call_argument [32247,32252]"
    },
    {
      "src": "identifier: div [10667,10670]",
      "dest": "identifier: div [10214,10217]"
    },
    {
      "src": "type_name [48479,48486]",
      "dest": "type_name [56226,56233]"
    },
    {
      "src": "type_name [42629,42640]",
      "dest": "type_name [46801,46812]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls [18100,18150]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls [17673,17723]"
    },
    {
      "src": "call_argument [48196,48209]",
      "dest": "call_argument [55835,55848]"
    },
    {
      "src": "call_expression [15199,15234]",
      "dest": "call_expression [14772,14807]"
    },
    {
      "src": "call_argument [28889,28904]",
      "dest": "call_argument [28888,28903]"
    },
    {
      "src": "if_statement [52351,52447]",
      "dest": "if_statement [60272,60368]"
    },
    {
      "src": "primitive_type [31056,31063]",
      "dest": "primitive_type [31055,31062]"
    },
    {
      "src": "expression_statement [31117,31185]",
      "dest": "expression_statement [31116,31184]"
    },
    {
      "src": "\": \" [31311,31312]",
      "dest": "\": \" [31310,31311]"
    },
    {
      "src": "string [31148,31183]",
      "dest": "string [31147,31182]"
    },
    {
      "src": "[: [ [32205,32206]",
      "dest": "[: [ [32204,32205]"
    },
    {
      "src": "assignment_expression [43027,43057]",
      "dest": "assignment_expression [47199,47229]"
    },
    {
      "src": "return: return [19802,19808]",
      "dest": "return: return [19395,19401]"
    },
    {
      "src": "identifier: initializer [34330,34341]",
      "dest": "identifier: initializer [34497,34508]"
    },
    {
      "src": "type_name [33388,33395]",
      "dest": "type_name [33387,33394]"
    },
    {
      "src": "return_statement [18277,18295]",
      "dest": "return_statement [17850,17868]"
    },
    {
      "src": "address: address [21949,21956]",
      "dest": "address: address [21562,21569]"
    },
    {
      "src": "internal: internal [8856,8864]",
      "dest": "internal: internal [8403,8411]"
    },
    {
      "src": "identifier: calcTokenAmount [49689,49704]",
      "dest": "identifier: calcTokenAmount [57863,57878]"
    },
    {
      "src": "function_body [44908,44981]",
      "dest": "function_body [49527,49683]"
    },
    {
      "src": "expression_statement [50410,50449]",
      "dest": "expression_statement [57504,57543]"
    },
    {
      "src": "): ) [26588,26589]",
      "dest": "): ) [26587,26588]"
    },
    {
      "src": ",: , [17918,17919]",
      "dest": ",: , [17491,17492]"
    },
    {
      "src": "comment: // This method relies in extcodesize, which returns 0 for contracts in [13654,13724]",
      "dest": "comment: // This method relies in extcodesize, which returns 0 for contracts in [13224,13294]"
    },
    {
      "src": "parameter [53640,53647]",
      "dest": "parameter [61561,61568]"
    },
    {
      "src": "parameter [43603,43610]",
      "dest": "parameter [47999,48006]"
    },
    {
      "src": "identifier: amountOutMin [51828,51840]",
      "dest": "identifier: amountOutMin [59751,59763]"
    },
    {
      "src": "comment: /**      * @dev Indicates that the contract has been initialized.      */ [20703,20778]",
      "dest": "comment: /**      * @dev Indicates that the contract has been initialized.      */ [20316,20391]"
    },
    {
      "src": "identifier: __curvePool [42896,42907]",
      "dest": "identifier: __curvePool [47068,47079]"
    },
    {
      "src": ",: , [16659,16660]",
      "dest": ",: , [16232,16233]"
    },
    {
      "src": ".: . [50828,50829]",
      "dest": ".: . [58753,58754]"
    },
    {
      "src": "primitive_type [26331,26338]",
      "dest": "primitive_type [26330,26337]"
    },
    {
      "src": "call_expression [44104,44212]",
      "dest": "call_expression [48270,48342]"
    },
    {
      "src": ">=: >= [17730,17732]",
      "dest": ">=: >= [17303,17305]"
    },
    {
      "src": "call_argument [32114,32135]",
      "dest": "call_argument [32113,32134]"
    },
    {
      "src": "type_name [44495,44502]",
      "dest": "type_name [49114,49121]"
    },
    {
      "src": "identifier: require [47841,47848]",
      "dest": "identifier: require [55410,55417]"
    },
    {
      "src": "call_argument [50903,50917]",
      "dest": "call_argument [58828,58842]"
    },
    {
      "src": "=: = [32682,32683]",
      "dest": "=: = [32681,32682]"
    },
    {
      "src": "identifier: name [24443,24447]",
      "dest": "identifier: name [24442,24446]"
    },
    {
      "src": "identifier: Exited [47417,47423]",
      "dest": "identifier: Exited [52375,52381]"
    },
    {
      "src": "primitive_type [33344,33351]",
      "dest": "primitive_type [33343,33350]"
    },
    {
      "src": "call_expression [49808,49823]",
      "dest": "call_expression [57960,57975]"
    },
    {
      "src": "uint256: uint256 [12657,12664]",
      "dest": "uint256: uint256 [12204,12211]"
    },
    {
      "src": ",: , [50901,50902]",
      "dest": ",: , [58826,58827]"
    },
    {
      "src": "contract: contract [34027,34035]",
      "dest": "contract: contract [34194,34202]"
    },
    {
      "src": "}: } [18756,18757]",
      "dest": "}: } [18329,18330]"
    },
    {
      "src": "call_expression [44142,44160]",
      "dest": "call_expression [48290,48308]"
    },
    {
      "src": "primitive_type [8381,8388]",
      "dest": "primitive_type [7928,7935]"
    },
    {
      "src": "expression_statement [32672,32694]",
      "dest": "expression_statement [32671,32693]"
    },
    {
      "src": "visibility [40259,40265]",
      "dest": "visibility [44379,44385]"
    },
    {
      "src": "\": \" [8947,8948]",
      "dest": "\": \" [8494,8495]"
    },
    {
      "src": "identifier: b [11318,11319]",
      "dest": "identifier: b [10865,10866]"
    },
    {
      "src": "view: view [13623,13627]",
      "dest": "view: view [13193,13197]"
    },
    {
      "src": "contract_body [37571,38470]",
      "dest": "contract_body [38093,38992]"
    },
    {
      "src": "parameter [26331,26338]",
      "dest": "parameter [26330,26337]"
    },
    {
      "src": "(: ( [26089,26090]",
      "dest": "(: ( [26088,26089]"
    },
    {
      "src": "): ) [37073,37074]",
      "dest": "): ) [37500,37501]"
    },
    {
      "src": "parameter [16130,16147]",
      "dest": "parameter [15703,15720]"
    },
    {
      "src": "call_expression [45860,45931]",
      "dest": "call_expression [50705,50776]"
    },
    {
      "src": "}: } [47117,47118]",
      "dest": "}: } [52075,52076]"
    },
    {
      "src": ".: . [51985,51986]",
      "dest": ".: . [59908,59909]"
    },
    {
      "src": "call_argument [48809,48826]",
      "dest": "call_argument [56624,56641]"
    },
    {
      "src": "member_expression [52923,52972]",
      "dest": "member_expression [60844,60893]"
    },
    {
      "src": "call_argument [32255,32262]",
      "dest": "call_argument [32254,32261]"
    },
    {
      "src": "address: address [35608,35615]",
      "dest": "address: address [35775,35782]"
    },
    {
      "src": "assignment_expression [35726,35743]",
      "dest": "assignment_expression [35893,35910]"
    },
    {
      "src": ",: , [17834,17835]",
      "dest": ",: , [17407,17408]"
    },
    {
      "src": "pure: pure [10702,10706]",
      "dest": "pure: pure [10249,10253]"
    },
    {
      "src": "): ) [48702,48703]",
      "dest": "): ) [56450,56451]"
    },
    {
      "src": "function_body [53649,53733]",
      "dest": "function_body [61570,61654]"
    },
    {
      "src": "primitive_type [27240,27247]",
      "dest": "primitive_type [27239,27246]"
    },
    {
      "src": ":: : [18220,18221]",
      "dest": ":: : [17793,17794]"
    },
    {
      "src": "function_body [43612,43723]",
      "dest": "function_body [48008,48119]"
    },
    {
      "src": "function_body [48525,48875]",
      "dest": "function_body [56272,56690]"
    },
    {
      "src": "string_literal [48572,48621]",
      "dest": "string_literal [56319,56369]"
    },
    {
      "src": "primitive_type [17614,17621]",
      "dest": "primitive_type [17187,17194]"
    },
    {
      "src": "primitive_type [23691,23698]",
      "dest": "primitive_type [23690,23697]"
    },
    {
      "src": "identifier: sender [45777,45783]",
      "dest": "identifier: sender [50570,50576]"
    },
    {
      "src": "call_argument [28906,28945]",
      "dest": "call_argument [28905,28944]"
    },
    {
      "src": "modifier_invocation [52259,52268]",
      "dest": "modifier_invocation [60180,60189]"
    },
    {
      "src": "=: = [43079,43080]",
      "dest": "=: = [47251,47252]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [25799,25998]",
      "dest": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [25798,25997]"
    },
    {
      "src": "type_name [15181,15185]",
      "dest": "type_name [14754,14758]"
    },
    {
      "src": "user_defined_type [42728,42742]",
      "dest": "user_defined_type [46900,46914]"
    },
    {
      "src": "{: { [36032,36033]",
      "dest": "{: { [36459,36460]"
    },
    {
      "src": "): ) [45097,45098]",
      "dest": "): ) [49782,49783]"
    },
    {
      "src": "call_argument [30673,30683]",
      "dest": "call_argument [30672,30682]"
    },
    {
      "src": "function_body [49144,50586]",
      "dest": "function_body [56970,57680]"
    },
    {
      "src": "identifier: a [11307,11308]",
      "dest": "identifier: a [10854,10855]"
    },
    {
      "src": "parameter [31977,31991]",
      "dest": "parameter [31976,31990]"
    },
    {
      "src": "identifier: require [7081,7088]",
      "dest": "identifier: require [6608,6615]"
    },
    {
      "src": "identifier: a [9281,9282]",
      "dest": "identifier: a [8828,8829]"
    },
    {
      "src": "type_cast_expression [29627,29637]",
      "dest": "type_cast_expression [29626,29636]"
    },
    {
      "src": "public: public [25708,25714]",
      "dest": "public: public [25707,25713]"
    },
    {
      "src": "): ) [36312,36313]",
      "dest": "): ) [36739,36740]"
    },
    {
      "src": "type_name [23740,23747]",
      "dest": "type_name [23739,23746]"
    },
    {
      "src": "yul_evm_builtin [18701,18704]",
      "dest": "yul_evm_builtin [18274,18277]"
    },
    {
      "src": "identifier: token [43641,43646]",
      "dest": "identifier: token [48037,48042]"
    },
    {
      "src": ".: . [44582,44583]",
      "dest": ".: . [49201,49202]"
    },
    {
      "src": "binary_expression [30415,30436]",
      "dest": "binary_expression [30414,30435]"
    },
    {
      "src": ">: > [18416,18417]",
      "dest": ">: > [17989,17990]"
    },
    {
      "src": "return: return [28146,28152]",
      "dest": "return: return [28145,28151]"
    },
    {
      "src": "interface_declaration [36480,36607]",
      "dest": "interface_declaration [36907,37034]"
    },
    {
      "src": "identifier: denominator [38734,38745]",
      "dest": "identifier: denominator [39274,39285]"
    },
    {
      "src": "identifier: _NOT_ENTERED [6570,6582]",
      "dest": "identifier: _NOT_ENTERED [6097,6109]"
    },
    {
      "src": "identifier: require [11392,11399]",
      "dest": "identifier: require [10939,10946]"
    },
    {
      "src": "function_definition [29477,30050]",
      "dest": "function_definition [29476,30049]"
    },
    {
      "src": "primitive_type [51820,51827]",
      "dest": "primitive_type [59743,59750]"
    },
    {
      "src": "identifier: IERC20 [2125,2131]",
      "dest": "identifier: IERC20 [1629,1635]"
    },
    {
      "src": "primitive_type [38038,38045]",
      "dest": "primitive_type [38560,38567]"
    },
    {
      "src": "external: external [45099,45107]",
      "dest": "external: external [49784,49792]"
    },
    {
      "src": "return_statement [53056,53116]",
      "dest": "return_statement [60977,61037]"
    },
    {
      "src": "public: public [26590,26596]",
      "dest": "public: public [26589,26595]"
    },
    {
      "src": "primitive_type [52809,52816]",
      "dest": "primitive_type [60730,60737]"
    },
    {
      "src": "primitive_type [12668,12675]",
      "dest": "primitive_type [12215,12222]"
    },
    {
      "src": "identifier: __lender [42709,42717]",
      "dest": "identifier: __lender [46881,46889]"
    },
    {
      "src": "internal: internal [24260,24268]",
      "dest": "internal: internal [24259,24267]"
    },
    {
      "src": "return_type_definition [25729,25746]",
      "dest": "return_type_definition [25728,25745]"
    },
    {
      "src": "call_argument [30694,30700]",
      "dest": "call_argument [30693,30699]"
    },
    {
      "src": "call_expression [47316,47387]",
      "dest": "call_expression [52274,52345]"
    },
    {
      "src": "call_argument [49303,49333]",
      "dest": "call_argument [47566,47596]"
    },
    {
      "src": "): ) [30533,30534]",
      "dest": "): ) [30532,30533]"
    },
    {
      "src": "identifier: amount [15222,15228]",
      "dest": "identifier: amount [14795,14801]"
    },
    {
      "src": "(: ( [34383,34384]",
      "dest": "(: ( [34550,34551]"
    },
    {
      "src": "library_declaration [8094,12813]",
      "dest": "library_declaration [7641,12360]"
    },
    {
      "src": "function: function [35869,35877]",
      "dest": "function: function [36131,36139]"
    },
    {
      "src": ",: , [52425,52426]",
      "dest": ",: , [60346,60347]"
    },
    {
      "src": "): ) [53704,53705]",
      "dest": "): ) [61625,61626]"
    },
    {
      "src": "identifier: add [30637,30640]",
      "dest": "identifier: add [30636,30639]"
    },
    {
      "src": "{: { [10022,10023]",
      "dest": "{: { [9569,9570]"
    },
    {
      "src": "call_argument [47080,47104]",
      "dest": "call_argument [52038,52062]"
    },
    {
      "src": "function_body [51899,52090]",
      "dest": "function_body [59822,60013]"
    },
    {
      "src": "visibility [17985,17992]",
      "dest": "visibility [17558,17565]"
    },
    {
      "src": "emit: emit [47412,47416]",
      "dest": "emit: emit [52370,52374]"
    },
    {
      "src": "modifier_invocation [35567,35576]",
      "dest": "modifier_invocation [35734,35743]"
    },
    {
      "src": "emit_statement [52459,52495]",
      "dest": "emit_statement [60380,60416]"
    },
    {
      "src": "true: true [21322,21326]",
      "dest": "true: true [20935,20939]"
    },
    {
      "src": "primitive_type [6447,6454]",
      "dest": "primitive_type [5974,5981]"
    },
    {
      "src": ",: , [47982,47983]",
      "dest": ",: , [55552,55553]"
    },
    {
      "src": "address: address [31432,31439]",
      "dest": "address: address [31431,31438]"
    },
    {
      "src": "identifier: borrower [41798,41806]",
      "dest": "identifier: borrower [45970,45978]"
    },
    {
      "src": "(: ( [38037,38038]",
      "dest": "(: ( [38559,38560]"
    },
    {
      "src": "returns: returns [26081,26088]",
      "dest": "returns: returns [26080,26087]"
    },
    {
      "src": "comment: // extcodesize checks the size of the code stored in an address, and [21595,21663]",
      "dest": "comment: // extcodesize checks the size of the code stored in an address, and [21208,21276]"
    },
    {
      "src": "identifier: curve [37067,37072]",
      "dest": "identifier: curve [37494,37499]"
    },
    {
      "src": "expression_statement [11392,11421]",
      "dest": "expression_statement [10939,10968]"
    },
    {
      "src": ",: , [9293,9294]",
      "dest": ",: , [8840,8841]"
    },
    {
      "src": "{: { [43436,43437]",
      "dest": "{: { [47832,47833]"
    },
    {
      "src": "(: ( [45713,45714]",
      "dest": "(: ( [50506,50507]"
    },
    {
      "src": "binary_expression [50184,50219]",
      "dest": "binary_expression [57277,57312]"
    },
    {
      "src": "view: view [21564,21568]",
      "dest": "view: view [21177,21181]"
    },
    {
      "src": "type_name [28712,28719]",
      "dest": "type_name [28711,28718]"
    },
    {
      "src": "identifier: N_TOKENS [40536,40544]",
      "dest": "identifier: N_TOKENS [44708,44716]"
    },
    {
      "src": "identifier: _curvePool [43630,43640]",
      "dest": "identifier: _curvePool [48026,48036]"
    },
    {
      "src": "identifier: div [52905,52908]",
      "dest": "identifier: div [60826,60829]"
    },
    {
      "src": "private: private [23839,23846]",
      "dest": "private: private [23838,23845]"
    },
    {
      "src": "identifier: _approve [31908,31916]",
      "dest": "identifier: _approve [31907,31915]"
    },
    {
      "src": "visibility [36340,36348]",
      "dest": "visibility [36767,36775]"
    },
    {
      "src": "(: ( [34318,34319]",
      "dest": "(: ( [34485,34486]"
    },
    {
      "src": "identifier: spender [28075,28082]",
      "dest": "identifier: spender [28074,28081]"
    },
    {
      "src": "function: function [37058,37066]",
      "dest": "function: function [37485,37493]"
    },
    {
      "src": "{: { [47830,47831]",
      "dest": "{: { [55399,55400]"
    },
    {
      "src": "view: view [37644,37648]",
      "dest": "view: view [38166,38170]"
    },
    {
      "src": "uint256: uint256 [17614,17621]",
      "dest": "uint256: uint256 [17187,17194]"
    },
    {
      "src": "(: ( [43155,43156]",
      "dest": "(: ( [47327,47328]"
    },
    {
      "src": "parameter [37042,37048]",
      "dest": "parameter [37469,37475]"
    },
    {
      "src": "virtual: virtual [26597,26604]",
      "dest": "virtual: virtual [26596,26603]"
    },
    {
      "src": "}: } [44768,44769]",
      "dest": "}: } [49387,49388]"
    },
    {
      "src": "call_argument [34774,34796]",
      "dest": "call_argument [34941,34963]"
    },
    {
      "src": "view: view [43933,43937]",
      "dest": "view: view [48229,48233]"
    },
    {
      "src": "identifier: IERC20 [36596,36602]",
      "dest": "identifier: IERC20 [37023,37029]"
    },
    {
      "src": "memory: memory [16604,16610]",
      "dest": "memory: memory [16177,16183]"
    },
    {
      "src": "library: library [8094,8101]",
      "dest": "library: library [7641,7648]"
    },
    {
      "src": "{: { [49144,49145]",
      "dest": "{: { [56970,56971]"
    },
    {
      "src": ",: , [50219,50220]",
      "dest": ",: , [57312,57313]"
    },
    {
      "src": "call_argument [43667,43671]",
      "dest": "call_argument [48063,48067]"
    },
    {
      "src": "parameter [3048,3063]",
      "dest": "parameter [2552,2567]"
    },
    {
      "src": "primitive_type [41808,41815]",
      "dest": "primitive_type [45980,45987]"
    },
    {
      "src": "address: address [17097,17104]",
      "dest": "address: address [16670,16677]"
    },
    {
      "src": ",: , [26670,26671]",
      "dest": ",: , [26669,26670]"
    },
    {
      "src": "!=: != [31133,31135]",
      "dest": "!=: != [31132,31134]"
    },
    {
      "src": "}: } [25443,25444]",
      "dest": "}: } [25442,25443]"
    },
    {
      "src": "identifier: sender [50550,50556]",
      "dest": "identifier: sender [57644,57650]"
    },
    {
      "src": "comment: /*                                                                                .'''''''''''..     ..''''''''''''''''..       ..'''''''''''''''..            .;;;;;;;;;;;'.   .';;;;;;;;;;;;;;;;;;,.     .,;;;;;;;;;;;;;;;;;,.            .;;;;;;;;;;,.   .,;;;;;;;;;;;;;;;;;;;,.    .,;;;;;;;;;;;;;;;;;;,.            .;;;;;;;;;,.   .,;;;;;;;;;;;;;;;;;;;;,.   .;;;;;;;;;;;;;;;;;;;;,.            ';;;;;;;;'.  .';;;;;;;;;;;;;;;;;;;;;;,. .';;;;;;;;;;;;;;;;;;;;;,.            ';;;;;,..   .';;;;;;;;;;;;;;;;;;;;;;;,..';;;;;;;;;;;;;;;;;;;;;;,.            ......     .';;;;;;;;;;;;;,'''''''''''.,;;;;;;;;;;;;;,'''''''''..                      .,;;;;;;;;;;;;;.           .,;;;;;;;;;;;;;.                                 .,;;;;;;;;;;;;,.           .,;;;;;;;;;;;;,.                                 .,;;;;;;;;;;;;,.           .,;;;;;;;;;;;;,.                                 .,;;;;;;;;;;;;,.           .;;;;;;;;;;;;;,.     .....                       .;;;;;;;;;;;;;'.         ..';;;;;;;;;;;;;'.    .',;;;;,'.                  .';;;;;;;;;;;;;'.         .';;;;;;;;;;;;;;'.   .';;;;;;;;;;.                .';;;;;;;;;;;;;'.         .';;;;;;;;;;;;;;'.    .;;;;;;;;;;;,.              .,;;;;;;;;;;;;;'...........,;;;;;;;;;;;;;;.      .;;;;;;;;;;;,.             .,;;;;;;;;;;;;,..,;;;;;;;;;;;;;;;;;;;;;;;,.       ..;;;;;;;;;,.             .,;;;;;;;;;;;;,. .,;;;;;;;;;;;;;;;;;;;;;;,.          .',;;;,,..             .,;;;;;;;;;;;;,.  .,;;;;;;;;;;;;;;;;;;;;;,.              ....                 ..',;;;;;;;;,.   .,;;;;;;;;;;;;;;;;;;;;,.                                       ..',;;;;'.    .,;;;;;;;;;;;;;;;;;;;'.                                           ...'..     .';;;;;;;;;;;;;;,,,'.                                                          ...............                                       */ [71,1868]",
      "dest": "comment: // Dependency file: @openzeppelin/contracts/token/ERC20/IERC20.sol [1410,1476]"
    },
    {
      "src": "): ) [31183,31184]",
      "dest": "): ) [31182,31183]"
    },
    {
      "src": "number_literal [44204,44211]",
      "dest": "number_literal [48334,48341]"
    },
    {
      "src": "contract_body [12983,18854]",
      "dest": "contract_body [12550,18427]"
    },
    {
      "src": "(: ( [45895,45896]",
      "dest": "(: ( [50740,50741]"
    },
    {
      "src": "type_name [36596,36602]",
      "dest": "type_name [37023,37029]"
    },
    {
      "src": "call_expression [49757,49919]",
      "dest": "call_expression [57927,58049]"
    },
    {
      "src": "number_literal: 0 [52364,52365]",
      "dest": "number_literal: 0 [60285,60286]"
    },
    {
      "src": "block_statement [45635,45728]",
      "dest": "block_statement [50428,50521]"
    },
    {
      "src": "): ) [19655,19656]",
      "dest": "): ) [19248,19249]"
    },
    {
      "src": "expression_statement [35588,35662]",
      "dest": "expression_statement [35755,35829]"
    },
    {
      "src": "function_definition [10658,10790]",
      "dest": "function_definition [10205,10337]"
    },
    {
      "src": "type_name [38698,38705]",
      "dest": "type_name [39238,39245]"
    },
    {
      "src": "identifier: msg [50546,50549]",
      "dest": "identifier: msg [57640,57643]"
    },
    {
      "src": "user_defined_type [37564,37570]",
      "dest": "user_defined_type [38086,38092]"
    },
    {
      "src": "return_type_definition [3825,3839]",
      "dest": "return_type_definition [3332,3346]"
    },
    {
      "src": "identifier: neededAmount [44657,44669]",
      "dest": "identifier: neededAmount [49276,49288]"
    },
    {
      "src": ".: . [42857,42858]",
      "dest": ".: . [47029,47030]"
    },
    {
      "src": "(: ( [28694,28695]",
      "dest": "(: ( [28693,28694]"
    },
    {
      "src": "user_defined_type [36358,36370]",
      "dest": "user_defined_type [36785,36797]"
    },
    {
      "src": "call_argument [31391,31397]",
      "dest": "call_argument [31390,31396]"
    },
    {
      "src": "string [42817,42828]",
      "dest": "string [46989,47000]"
    },
    {
      "src": "}: } [21430,21431]",
      "dest": "}: } [21043,21044]"
    },
    {
      "src": "member_expression [15199,15213]",
      "dest": "member_expression [14772,14786]"
    },
    {
      "src": "type_name [29506,29513]",
      "dest": "type_name [29505,29512]"
    },
    {
      "src": "primitive_type [41525,41532]",
      "dest": "primitive_type [45697,45704]"
    },
    {
      "src": "identifier: _curveGauge [51086,51097]",
      "dest": "identifier: _curveGauge [59009,59020]"
    },
    {
      "src": "comment: // deployed when running a constructor, any checks on its code size will [21750,21822]",
      "dest": "comment: // deployed when running a constructor, any checks on its code size will [21363,21435]"
    },
    {
      "src": "modifier_definition [6974,7431]",
      "dest": "modifier_definition [6501,6958]"
    },
    {
      "src": ",: , [36687,36688]",
      "dest": ",: , [37114,37115]"
    },
    {
      "src": "library: library [12967,12974]",
      "dest": "library: library [12534,12541]"
    },
    {
      "src": "identifier: sender [27396,27402]",
      "dest": "identifier: sender [27395,27401]"
    },
    {
      "src": "identifier: joiningFee [43105,43115]",
      "dest": "identifier: joiningFee [47277,47287]"
    },
    {
      "src": "identifier: numerator [38706,38715]",
      "dest": "identifier: numerator [39246,39255]"
    },
    {
      "src": "call_argument [46742,46754]",
      "dest": "call_argument [51700,51712]"
    },
    {
      "src": "identifier: claimableFees [45809,45822]",
      "dest": "identifier: claimableFees [50602,50615]"
    },
    {
      "src": "function: function [37610,37618]",
      "dest": "function: function [38132,38140]"
    },
    {
      "src": "identifier: spender [27982,27989]",
      "dest": "identifier: spender [27981,27988]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [12167,12638]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [11714,12185]"
    },
    {
      "src": "identifier: _balances [29834,29843]",
      "dest": "identifier: _balances [29833,29842]"
    },
    {
      "src": ",: , [30525,30526]",
      "dest": ",: , [30524,30525]"
    },
    {
      "src": "identifier: require [12750,12757]",
      "dest": "identifier: require [12297,12304]"
    },
    {
      "src": "\": \" [28906,28907]",
      "dest": "\": \" [28905,28906]"
    },
    {
      "src": "parameter [13637,13641]",
      "dest": "parameter [13207,13211]"
    },
    {
      "src": "uint8: uint8 [25402,25407]",
      "dest": "uint8: uint8 [25401,25406]"
    },
    {
      "src": "(: ( [47067,47068]",
      "dest": "(: ( [52025,52026]"
    },
    {
      "src": "bool: bool [15181,15185]",
      "dest": "bool: bool [14754,14758]"
    },
    {
      "src": "string [15057,15088]",
      "dest": "string [14630,14661]"
    },
    {
      "src": "parameter [17920,17937]",
      "dest": "parameter [17493,17510]"
    },
    {
      "src": "expression_statement [43105,43121]",
      "dest": "expression_statement [47277,47293]"
    },
    {
      "src": "type_name [27974,27981]",
      "dest": "type_name [27973,27980]"
    },
    {
      "src": "call_argument [52011,52019]",
      "dest": "call_argument [59934,59942]"
    },
    {
      "src": ",: , [28835,28836]",
      "dest": ",: , [28834,28835]"
    },
    {
      "src": ".: . [53081,53082]",
      "dest": ".: . [61002,61003]"
    },
    {
      "src": "\": \" [27505,27506]",
      "dest": "\": \" [27504,27505]"
    },
    {
      "src": "{: { [21584,21585]",
      "dest": "{: { [21197,21198]"
    },
    {
      "src": "user_defined_type [42629,42640]",
      "dest": "user_defined_type [46801,46812]"
    },
    {
      "src": "parameter [17579,17593]",
      "dest": "parameter [17152,17166]"
    },
    {
      "src": "identifier: onlyOwner [51044,51053]",
      "dest": "identifier: onlyOwner [58967,58976]"
    },
    {
      "src": "=: = [45410,45411]",
      "dest": "=: = [50203,50204]"
    },
    {
      "src": "call_argument [30518,30525]",
      "dest": "call_argument [30517,30524]"
    },
    {
      "src": "call_expression [50467,50520]",
      "dest": "call_expression [57561,57614]"
    },
    {
      "src": "return_type_definition [28752,28766]",
      "dest": "return_type_definition [28751,28765]"
    },
    {
      "src": "identifier: account [30685,30692]",
      "dest": "identifier: account [30684,30691]"
    },
    {
      "src": "identifier: sender [29844,29850]",
      "dest": "identifier: sender [29843,29849]"
    },
    {
      "src": "(: ( [43395,43396]",
      "dest": "(: ( [47791,47792]"
    },
    {
      "src": "number_literal: 1e18 [52899,52903]",
      "dest": "number_literal: 1e18 [60820,60824]"
    },
    {
      "src": "[: [ [39090,39091]",
      "dest": "[: [ [39648,39649]"
    },
    {
      "src": "member_expression [44142,44178]",
      "dest": "member_expression [48290,48326]"
    },
    {
      "src": "): ) [17687,17688]",
      "dest": "): ) [17260,17261]"
    },
    {
      "src": "\": \" [12124,12125]",
      "dest": "\": \" [11671,11672]"
    },
    {
      "src": "}: } [44220,44221]",
      "dest": "}: } [48349,48350]"
    },
    {
      "src": "visibility [35233,35239]",
      "dest": "visibility [35400,35406]"
    },
    {
      "src": "indexed: indexed [34143,34150]",
      "dest": "indexed: indexed [34310,34317]"
    },
    {
      "src": "(: ( [52048,52049]",
      "dest": "(: ( [59971,59972]"
    },
    {
      "src": "parameter [36524,36537]",
      "dest": "parameter [36951,36964]"
    },
    {
      "src": "if_statement [47176,47400]",
      "dest": "if_statement [52134,52358]"
    },
    {
      "src": "): ) [37664,37665]",
      "dest": "): ) [38186,38187]"
    },
    {
      "src": "external: external [38600,38608]",
      "dest": "external: external [39140,39148]"
    },
    {
      "src": "(: ( [53710,53711]",
      "dest": "(: ( [61631,61632]"
    },
    {
      "src": "[: [ [29863,29864]",
      "dest": "[: [ [29862,29863]"
    },
    {
      "src": "primitive_type [38726,38733]",
      "dest": "primitive_type [39266,39273]"
    },
    {
      "src": "visibility [36962,36970]",
      "dest": "visibility [37389,37397]"
    },
    {
      "src": "): ) [11347,11348]",
      "dest": "): ) [10894,10895]"
    },
    {
      "src": "parameter [18002,18014]",
      "dest": "parameter [17575,17587]"
    },
    {
      "src": "function_body [30396,30709]",
      "dest": "function_body [30395,30708]"
    },
    {
      "src": "comment: /**  * @dev Contract module which provides a basic access control mechanism, where  * there is an account (an owner) that can be granted exclusive access to  * specific functions.  *  * By default, the owner account will be the one that deploys the contract. This  * can later be changed with {transferOwnership}.  *  * This module is used through inheritance. It will make available the modifier  * `onlyOwner`, which can be applied to your functions to restrict their use to  * the owner.  */ [33520,34025]",
      "dest": "comment: /**  * @dev Contract module which provides a basic access control mechanism, where  * there is an account (an owner) that can be granted exclusive access to  * specific functions.  *  * By default, the owner account will be the one that deploys the contract. This  * can later be changed with {transferOwnership}.  *  * This module is used through inheritance. It will make available the modifier  * `onlyOwner`, which can be applied to your functions to restrict their use to  * the owner.  */ [33687,34192]"
    },
    {
      "src": "assignment_expression [29834,29925]",
      "dest": "assignment_expression [29833,29924]"
    },
    {
      "src": "): ) [44614,44615]",
      "dest": "): ) [49233,49234]"
    },
    {
      "src": "identifier: require [46300,46307]",
      "dest": "identifier: require [51257,51264]"
    },
    {
      "src": "identifier: amount [29876,29882]",
      "dest": "identifier: amount [29875,29881]"
    },
    {
      "src": "function_body [16612,16691]",
      "dest": "function_body [16185,16264]"
    },
    {
      "src": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [27546,27941]",
      "dest": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [27545,27940]"
    },
    {
      "src": "): ) [46256,46257]",
      "dest": "): ) [51101,51102]"
    },
    {
      "src": "type_name [52280,52287]",
      "dest": "type_name [60201,60208]"
    },
    {
      "src": "}: } [28986,28987]",
      "dest": "}: } [28985,28986]"
    },
    {
      "src": ",: , [29637,29638]",
      "dest": ",: , [29636,29637]"
    },
    {
      "src": "identifier: TUSD_INDEX [40570,40580]",
      "dest": "identifier: TUSD_INDEX [44742,44752]"
    },
    {
      "src": "internal: internal [12064,12072]",
      "dest": "internal: internal [11611,11619]"
    },
    {
      "src": "{: { [2132,2133]",
      "dest": "{: { [1636,1637]"
    },
    {
      "src": "function: function [45075,45083]",
      "dest": "function: function [49758,49766]"
    },
    {
      "src": "(: ( [30672,30673]",
      "dest": "(: ( [30671,30672]"
    },
    {
      "src": "): ) [29924,29925]",
      "dest": "): ) [29923,29924]"
    },
    {
      "src": "(: ( [43163,43164]",
      "dest": "(: ( [47335,47336]"
    },
    {
      "src": ",: , [23527,23528]",
      "dest": ",: , [23526,23527]"
    },
    {
      "src": "assembly: assembly [22009,22017]",
      "dest": "assembly: assembly [21622,21630]"
    },
    {
      "src": "comment: /**      * @dev Prevents a contract from calling itself, directly or indirectly.      * Calling a `nonReentrant` function from another `nonReentrant`      * function is not supported. It is possible to prevent this from happening      * by making the `nonReentrant` function external, and make it call a      * `private` function that does the actual work.      */ [6598,6968]",
      "dest": "comment: /**      * @dev Prevents a contract from calling itself, directly or indirectly.      * Calling a `nonReentrant` function from another `nonReentrant`      * function is not supported. It is possible to prevent this from happening      * by making the `nonReentrant` function external, and make it call a      * `private` function that does the actual work.      */ [6125,6495]"
    },
    {
      "src": ",: , [52033,52034]",
      "dest": ",: , [59956,59957]"
    },
    {
      "src": "call_argument [17240,17283]",
      "dest": "call_argument [16813,16856]"
    },
    {
      "src": "}: } [22066,22067]",
      "dest": "}: } [21679,21680]"
    },
    {
      "src": "uint256: uint256 [14980,14987]",
      "dest": "uint256: uint256 [14553,14560]"
    },
    {
      "src": "member_expression [50797,50824]",
      "dest": "member_expression [58722,58749]"
    },
    {
      "src": "function: function [25672,25680]",
      "dest": "function: function [25671,25679]"
    },
    {
      "src": "identifier: token [48178,48183]",
      "dest": "identifier: token [55817,55822]"
    },
    {
      "src": "(: ( [52908,52909]",
      "dest": "(: ( [60829,60830]"
    },
    {
      "src": "function_definition [36039,36139]",
      "dest": "function_definition [36466,36566]"
    },
    {
      "src": "identifier: _curvePool [44142,44152]",
      "dest": "identifier: _curvePool [48290,48300]"
    },
    {
      "src": "primitive_type [43248,43255]",
      "dest": "primitive_type [47420,47427]"
    },
    {
      "src": "identifier: mint [51073,51077]",
      "dest": "identifier: mint [58996,59000]"
    },
    {
      "src": "string [49842,49904]",
      "dest": "string [57977,58048]"
    },
    {
      "src": "identifier: b [8853,8854]",
      "dest": "identifier: b [8400,8401]"
    },
    {
      "src": "identifier: _curveGauge [45164,45175]",
      "dest": "identifier: _curveGauge [49967,49978]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [17300,17542]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [16873,17115]"
    },
    {
      "src": "{: { [9778,9779]",
      "dest": "{: { [9325,9326]"
    },
    {
      "src": "returns: returns [2250,2257]",
      "dest": "returns: returns [1754,1761]"
    },
    {
      "src": "event: event [40928,40933]",
      "dest": "event: event [45100,45105]"
    },
    {
      "src": "primitive_type [25738,25745]",
      "dest": "primitive_type [25737,25744]"
    },
    {
      "src": "(: ( [53079,53080]",
      "dest": "(: ( [61000,61001]"
    },
    {
      "src": "variable_declaration [8435,8444]",
      "dest": "variable_declaration [7982,7991]"
    },
    {
      "src": "visibility [17147,17155]",
      "dest": "visibility [16720,16728]"
    },
    {
      "src": "returns: returns [3079,3086]",
      "dest": "returns: returns [2583,2590]"
    },
    {
      "src": "parameter [13597,13612]",
      "dest": "parameter [13167,13182]"
    },
    {
      "src": "parameter [26276,26291]",
      "dest": "parameter [26275,26290]"
    },
    {
      "src": "(: ( [47763,47764]",
      "dest": "(: ( [55332,55333]"
    },
    {
      "src": "parameter [17675,17687]",
      "dest": "parameter [17248,17260]"
    },
    {
      "src": "identifier: Borrow [50539,50545]",
      "dest": "identifier: Borrow [57633,57639]"
    },
    {
      "src": "memory: memory [24478,24484]",
      "dest": "memory: memory [24477,24483]"
    },
    {
      "src": "modifier_invocation [44898,44907]",
      "dest": "modifier_invocation [49517,49526]"
    },
    {
      "src": "{: { [12983,12984]",
      "dest": "{: { [12550,12551]"
    },
    {
      "src": "identifier: _curvePool [45129,45139]",
      "dest": "identifier: _curvePool [49871,49881]"
    },
    {
      "src": "if_statement [49445,50287]",
      "dest": "if_statement [57136,57381]"
    },
    {
      "src": ">: > [11402,11403]",
      "dest": ">: > [10949,10950]"
    },
    {
      "src": "identifier: gauge [36532,36537]",
      "dest": "identifier: gauge [36959,36964]"
    },
    {
      "src": "(: ( [17903,17904]",
      "dest": "(: ( [17476,17477]"
    },
    {
      "src": "function: function [19592,19600]",
      "dest": "function: function [19185,19193]"
    },
    {
      "src": "state_mutability [35910,35914]",
      "dest": "state_mutability [36172,36176]"
    },
    {
      "src": "function: function [12029,12037]",
      "dest": "function: function [11576,11584]"
    },
    {
      "src": "(: ( [46741,46742]",
      "dest": "(: ( [51699,51700]"
    },
    {
      "src": "event_definition [34108,34192]",
      "dest": "event_definition [34275,34359]"
    },
    {
      "src": "): ) [46929,46930]",
      "dest": "): ) [51887,51888]"
    },
    {
      "src": "identifier: Flushed [48229,48236]",
      "dest": "identifier: Flushed [55976,55983]"
    },
    {
      "src": "identifier: amountToMint [45650,45662]",
      "dest": "identifier: amountToMint [50443,50455]"
    },
    {
      "src": "]: ] [26384,26385]",
      "dest": "]: ] [26383,26384]"
    },
    {
      "src": "): ) [52950,52951]",
      "dest": "): ) [60871,60872]"
    },
    {
      "src": "user_defined_type [40178,40184]",
      "dest": "user_defined_type [44298,44304]"
    },
    {
      "src": "call_argument [50797,50867]",
      "dest": "call_argument [58722,58792]"
    },
    {
      "src": "+: + [8449,8450]",
      "dest": "+: + [7996,7997]"
    },
    {
      "src": "call_argument [52427,52433]",
      "dest": "call_argument [60348,60354]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [2432,2647]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [1936,2151]"
    },
    {
      "src": "primitive_type [10682,10689]",
      "dest": "primitive_type [10229,10236]"
    },
    {
      "src": ".: . [43640,43641]",
      "dest": ".: . [48036,48037]"
    },
    {
      "src": "primitive_type [23594,23601]",
      "dest": "primitive_type [23593,23600]"
    },
    {
      "src": "]: ] [32213,32214]",
      "dest": "]: ] [32212,32213]"
    },
    {
      "src": "(: ( [31302,31303]",
      "dest": "(: ( [31301,31302]"
    },
    {
      "src": "(: ( [23671,23672]",
      "dest": "(: ( [23670,23671]"
    },
    {
      "src": "modifier_invocation [51044,51053]",
      "dest": "modifier_invocation [58967,58976]"
    },
    {
      "src": "member_expression [45825,45842]",
      "dest": "member_expression [50618,50635]"
    },
    {
      "src": "identifier: this [45916,45920]",
      "dest": "identifier: this [50761,50765]"
    },
    {
      "src": "identifier: Transfer [4438,4446]",
      "dest": "identifier: Transfer [3945,3953]"
    },
    {
      "src": "): ) [31441,31442]",
      "dest": "): ) [31440,31441]"
    },
    {
      "src": "extcodesize: extcodesize [22039,22050]",
      "dest": "extcodesize: extcodesize [21652,21663]"
    },
    {
      "src": "call_argument [17836,17841]",
      "dest": "call_argument [17409,17414]"
    },
    {
      "src": "}: } [39111,39112]",
      "dest": "}: } [39669,39670]"
    },
    {
      "src": "primitive_type [9273,9280]",
      "dest": "primitive_type [8820,8827]"
    },
    {
      "src": ",: , [17231,17232]",
      "dest": ",: , [16804,16805]"
    },
    {
      "src": "member_expression [45412,45438]",
      "dest": "member_expression [50205,50231]"
    },
    {
      "src": "call_argument [46341,46372]",
      "dest": "call_argument [51298,51330]"
    },
    {
      "src": "call_argument [34451,34461]",
      "dest": "call_argument [34618,34628]"
    },
    {
      "src": "\": \" [50273,50274]",
      "dest": "\": \" [57367,57368]"
    },
    {
      "src": "primitive_type [29506,29513]",
      "dest": "primitive_type [29505,29512]"
    },
    {
      "src": "public: public [43398,43404]",
      "dest": "public: public [47794,47800]"
    },
    {
      "src": "member_expression [43630,43658]",
      "dest": "member_expression [48026,48054]"
    },
    {
      "src": "(: ( [8470,8471]",
      "dest": "(: ( [8017,8018]"
    },
    {
      "src": "expression_statement [8463,8510]",
      "dest": "expression_statement [8010,8057]"
    },
    {
      "src": "(: ( [49704,49705]",
      "dest": "(: ( [57878,57879]"
    },
    {
      "src": "identifier: balanceOf [48186,48195]",
      "dest": "identifier: balanceOf [55825,55834]"
    },
    {
      "src": "variable_declaration [46655,46693]",
      "dest": "variable_declaration [51613,51651]"
    },
    {
      "src": "identifier: _symbol [24708,24715]",
      "dest": "identifier: _symbol [24707,24714]"
    },
    {
      "src": "virtual: virtual [26300,26307]",
      "dest": "virtual: virtual [26299,26306]"
    },
    {
      "src": "type_name [26090,26094]",
      "dest": "type_name [26089,26093]"
    },
    {
      "src": ",: , [28082,28083]",
      "dest": ",: , [28081,28082]"
    },
    {
      "src": "identifier: amount [52427,52433]",
      "dest": "identifier: amount [60348,60354]"
    },
    {
      "src": "member_expression [51065,51077]",
      "dest": "member_expression [58988,59000]"
    },
    {
      "src": "public: public [40295,40301]",
      "dest": "public: public [44415,44421]"
    },
    {
      "src": "view: view [24457,24461]",
      "dest": "view: view [24456,24460]"
    },
    {
      "src": "uint256: uint256 [41360,41367]",
      "dest": "uint256: uint256 [45532,45539]"
    },
    {
      "src": "primitive_type [19531,19546]",
      "dest": "primitive_type [19124,19139]"
    },
    {
      "src": "uint256: uint256 [49578,49585]",
      "dest": "uint256: uint256 [52892,52899]"
    },
    {
      "src": "): ) [15322,15323]",
      "dest": "): ) [14895,14896]"
    },
    {
      "src": "contract_body [34070,35754]",
      "dest": "contract_body [34237,35921]"
    },
    {
      "src": "): ) [37104,37105]",
      "dest": "): ) [37531,37532]"
    },
    {
      "src": "function_definition [45075,45198]",
      "dest": "function_definition [49758,49991]"
    },
    {
      "src": ",: , [27229,27230]",
      "dest": ",: , [27228,27229]"
    },
    {
      "src": ",: , [18707,18708]",
      "dest": ",: , [18280,18281]"
    },
    {
      "src": "emit: emit [30659,30663]",
      "dest": "emit: emit [30658,30662]"
    },
    {
      "src": "variable_declaration [9406,9415]",
      "dest": "variable_declaration [8953,8962]"
    },
    {
      "src": "identifier: mul [52895,52898]",
      "dest": "identifier: mul [60816,60819]"
    },
    {
      "src": "return_statement [13976,13992]",
      "dest": "return_statement [13546,13562]"
    },
    {
      "src": "call_expression [28061,28073]",
      "dest": "call_expression [28060,28072]"
    },
    {
      "src": "number_literal: 0 [11404,11405]",
      "dest": "number_literal: 0 [10951,10952]"
    },
    {
      "src": "primitive_type [22181,22188]",
      "dest": "primitive_type [21794,21801]"
    },
    {
      "src": "comment: /**      * @dev Emitted when fees are collected      * @param beneficiary Account to receive fees      * @param amount Amount of fees collected      */ [42051,42206]",
      "dest": "comment: /**      * @dev Emitted when fees are collected      * @param beneficiary Account to receive fees      * @param amount Amount of fees collected      */ [46223,46378]"
    },
    {
      "src": "): ) [47809,47810]",
      "dest": "): ) [55378,55379]"
    },
    {
      "src": "): ) [44179,44180]",
      "dest": "): ) [48327,48328]"
    },
    {
      "src": "call_argument [21082,21129]",
      "dest": "call_argument [20695,20742]"
    },
    {
      "src": "identifier: amount [41816,41822]",
      "dest": "identifier: amount [45988,45994]"
    },
    {
      "src": "call_expression [21098,21113]",
      "dest": "call_expression [20711,20726]"
    },
    {
      "src": "): ) [32650,32651]",
      "dest": "): ) [32649,32650]"
    },
    {
      "src": "call_expression [44142,44180]",
      "dest": "call_expression [48290,48328]"
    },
    {
      "src": "): ) [38456,38457]",
      "dest": "): ) [38978,38979]"
    },
    {
      "src": "assignment_expression [6560,6582]",
      "dest": "assignment_expression [6087,6109]"
    },
    {
      "src": "identifier: yAmount [48788,48795]",
      "dest": "identifier: yAmount [56603,56610]"
    },
    {
      "src": "call_argument [48237,48251]",
      "dest": "call_argument [55984,55998]"
    },
    {
      "src": "variable_declaration_statement [10069,10087]",
      "dest": "variable_declaration_statement [9616,9634]"
    },
    {
      "src": "(: ( [31422,31423]",
      "dest": "(: ( [31421,31422]"
    },
    {
      "src": "primitive_type [16167,16172]",
      "dest": "primitive_type [15740,15745]"
    },
    {
      "src": "call_argument [8471,8477]",
      "dest": "call_argument [8018,8024]"
    },
    {
      "src": "(: ( [2414,2415]",
      "dest": "(: ( [1918,1919]"
    },
    {
      "src": "): ) [35899,35900]",
      "dest": "): ) [36161,36162]"
    },
    {
      "src": "\": \" [34831,34832]",
      "dest": "\": \" [34998,34999]"
    },
    {
      "src": "primitive_type [12730,12737]",
      "dest": "primitive_type [12277,12284]"
    },
    {
      "src": "identifier: amount [26672,26678]",
      "dest": "identifier: amount [26671,26677]"
    },
    {
      "src": "): ) [36411,36412]",
      "dest": "): ) [36838,36839]"
    },
    {
      "src": "int128: int128 [36952,36958]",
      "dest": "int128: int128 [37379,37385]"
    },
    {
      "src": "true [27526,27530]",
      "dest": "true [27525,27529]"
    },
    {
      "src": "memory: memory [9302,9308]",
      "dest": "memory: memory [8849,8855]"
    },
    {
      "src": "): ) [45175,45176]",
      "dest": "): ) [49978,49979]"
    },
    {
      "src": "}: } [15229,15230]",
      "dest": "}: } [14802,14803]"
    },
    {
      "src": "visibility [49113,49121]",
      "dest": "visibility [56928,56936]"
    },
    {
      "src": "): ) [30377,30378]",
      "dest": "): ) [30376,30377]"
    },
    {
      "src": "identifier: calc_withdraw_one_coin [36906,36928]",
      "dest": "identifier: calc_withdraw_one_coin [37333,37355]"
    },
    {
      "src": "): ) [53724,53725]",
      "dest": "): ) [61645,61646]"
    },
    {
      "src": "(: ( [45955,45956]",
      "dest": "(: ( [50800,50801]"
    },
    {
      "src": "uint256: uint256 [9406,9413]",
      "dest": "uint256: uint256 [8953,8960]"
    },
    {
      "src": "identifier: _beforeTokenTransfer [33313,33333]",
      "dest": "identifier: _beforeTokenTransfer [33312,33332]"
    },
    {
      "src": "identifier: ICurvePool [36621,36631]",
      "dest": "identifier: ICurvePool [37048,37058]"
    },
    {
      "src": "bool: bool [4249,4253]",
      "dest": "bool: bool [3756,3760]"
    },
    {
      "src": "type_name [27991,27998]",
      "dest": "type_name [27990,27997]"
    },
    {
      "src": "expression_statement [29774,29822]",
      "dest": "expression_statement [29773,29821]"
    },
    {
      "src": "=>: => [23680,23682]",
      "dest": "=>: => [23679,23681]"
    },
    {
      "src": "call_argument [29795,29801]",
      "dest": "call_argument [29794,29800]"
    },
    {
      "src": "visibility [37019,37027]",
      "dest": "visibility [37446,37454]"
    },
    {
      "src": "type_name [36985,36992]",
      "dest": "type_name [37412,37419]"
    },
    {
      "src": "primitive_type [26557,26564]",
      "dest": "primitive_type [26556,26563]"
    },
    {
      "src": "return_statement [26351,26386]",
      "dest": "return_statement [26350,26385]"
    },
    {
      "src": "): ) [52081,52082]",
      "dest": "): ) [60004,60005]"
    },
    {
      "src": "identifier: spender [31959,31966]",
      "dest": "identifier: spender [31958,31965]"
    },
    {
      "src": "primitive_type [9284,9291]",
      "dest": "primitive_type [8831,8838]"
    },
    {
      "src": "state_mutability [19509,19513]",
      "dest": "state_mutability [19102,19106]"
    },
    {
      "src": "virtual: virtual [33419,33426]",
      "dest": "virtual: virtual [33418,33425]"
    },
    {
      "src": "type_name [6493,6500]",
      "dest": "type_name [6020,6027]"
    },
    {
      "src": "<=: <= [46315,46317]",
      "dest": "<=: <= [51272,51274]"
    },
    {
      "src": "): ) [50849,50850]",
      "dest": "): ) [58774,58775]"
    },
    {
      "src": "primitive_type [40555,40560]",
      "dest": "primitive_type [44727,44732]"
    },
    {
      "src": ",: , [41822,41823]",
      "dest": ",: , [45994,45995]"
    },
    {
      "src": "member_expression [44707,44723]",
      "dest": "member_expression [49326,49342]"
    },
    {
      "src": "identifier: transfer [2662,2670]",
      "dest": "identifier: transfer [2166,2174]"
    },
    {
      "src": ",: , [50150,50151]",
      "dest": ",: , [58473,58474]"
    },
    {
      "src": "(: ( [21553,21554]",
      "dest": "(: ( [21166,21167]"
    },
    {
      "src": "external: external [36107,36115]",
      "dest": "external: external [36534,36542]"
    },
    {
      "src": "event_definition [40928,41000]",
      "dest": "event_definition [45100,45172]"
    },
    {
      "src": "call_argument [46328,46338]",
      "dest": "call_argument [51285,51295]"
    },
    {
      "src": "type_name [8381,8388]",
      "dest": "type_name [7928,7935]"
    },
    {
      "src": ",: , [21129,21130]",
      "dest": ",: , [20742,20743]"
    },
    {
      "src": "}: } [53735,53736]",
      "dest": "}: } [61656,61657]"
    },
    {
      "src": "uint256: uint256 [10069,10076]",
      "dest": "uint256: uint256 [9616,9623]"
    },
    {
      "src": "variable_declaration [21193,21212]",
      "dest": "variable_declaration [20806,20825]"
    },
    {
      "src": "): ) [43259,43260]",
      "dest": "): ) [47431,47432]"
    },
    {
      "src": "returns: returns [35915,35922]",
      "dest": "returns: returns [36177,36184]"
    },
    {
      "src": "(: ( [46307,46308]",
      "dest": "(: ( [51264,51265]"
    },
    {
      "src": "return_statement [25758,25784]",
      "dest": "return_statement [25757,25783]"
    },
    {
      "src": "primitive_type [34600,34607]",
      "dest": "primitive_type [34767,34774]"
    },
    {
      "src": "}: } [35351,35352]",
      "dest": "}: } [35518,35519]"
    },
    {
      "src": "emit: emit [52459,52463]",
      "dest": "emit: emit [60380,60384]"
    },
    {
      "src": ",: , [16216,16217]",
      "dest": ",: , [15789,15790]"
    },
    {
      "src": "]: ] [28874,28875]",
      "dest": "]: ] [28873,28874]"
    },
    {
      "src": "identifier: addedValue [27999,28009]",
      "dest": "identifier: addedValue [27998,28008]"
    },
    {
      "src": "parameter [36856,36872]",
      "dest": "parameter [37283,37299]"
    },
    {
      "src": "type_name [36952,36958]",
      "dest": "type_name [37379,37385]"
    },
    {
      "src": "(: ( [46568,46569]",
      "dest": "(: ( [51526,51527]"
    },
    {
      "src": "visibility [43582,43588]",
      "dest": "visibility [47978,47984]"
    },
    {
      "src": "parameter [12053,12062]",
      "dest": "parameter [11600,11609]"
    },
    {
      "src": "call_expression [45412,45445]",
      "dest": "call_expression [50205,50238]"
    },
    {
      "src": "identifier: deposited [40973,40982]",
      "dest": "identifier: deposited [45145,45154]"
    },
    {
      "src": "if_statement [10010,10057]",
      "dest": "if_statement [9557,9604]"
    },
    {
      "src": "function_body [34342,34481]",
      "dest": "function_body [34509,34648]"
    },
    {
      "src": "identifier: i [36959,36960]",
      "dest": "identifier: i [37386,37387]"
    },
    {
      "src": "): ) [32134,32135]",
      "dest": "): ) [32133,32134]"
    },
    {
      "src": "function_body [16181,16265]",
      "dest": "function_body [15754,15838]"
    },
    {
      "src": "function: function [52739,52747]",
      "dest": "function: function [60660,60668]"
    },
    {
      "src": "type_name [25738,25745]",
      "dest": "type_name [25737,25744]"
    },
    {
      "src": "contract_declaration [34027,35754]",
      "dest": "contract_declaration [34194,35921]"
    },
    {
      "src": "address: address [2375,2382]",
      "dest": "address: address [1879,1886]"
    },
    {
      "src": "call_argument [31444,31450]",
      "dest": "call_argument [31443,31449]"
    },
    {
      "src": "parameter [42728,42754]",
      "dest": "parameter [46900,46926]"
    },
    {
      "src": "identifier: _msgSender [28061,28071]",
      "dest": "identifier: _msgSender [28060,28070]"
    },
    {
      "src": "number_literal: 25 [43118,43120]",
      "dest": "number_literal: 25 [47290,47292]"
    },
    {
      "src": ".: . [48055,48056]",
      "dest": ".: . [55695,55696]"
    },
    {
      "src": "primitive_type [53362,53369]",
      "dest": "primitive_type [61283,61290]"
    },
    {
      "src": "identifier: _owner [35726,35732]",
      "dest": "identifier: _owner [35893,35899]"
    },
    {
      "src": "call_argument [43156,43175]",
      "dest": "call_argument [47328,47347]"
    },
    {
      "src": "identifier: isContract [13586,13596]",
      "dest": "identifier: isContract [13156,13166]"
    },
    {
      "src": ",: , [47434,47435]",
      "dest": ",: , [52392,52393]"
    },
    {
      "src": "uint256: uint256 [12668,12675]",
      "dest": "uint256: uint256 [12215,12222]"
    },
    {
      "src": "parameter [38670,38687]",
      "dest": "parameter [39210,39227]"
    },
    {
      "src": "array_access [26358,26376]",
      "dest": "array_access [26357,26375]"
    },
    {
      "src": "identifier: ensureEnoughTokensAreAvailable [44464,44494]",
      "dest": "identifier: ensureEnoughTokensAreAvailable [49083,49113]"
    },
    {
      "src": "indexed: indexed [34174,34181]",
      "dest": "indexed: indexed [34341,34348]"
    },
    {
      "src": "<=: <= [9376,9378]",
      "dest": "<=: <= [8923,8925]"
    },
    {
      "src": "(: ( [48236,48237]",
      "dest": "(: ( [55983,55984]"
    },
    {
      "src": "block_statement [49485,50287]",
      "dest": "block_statement [57176,57381]"
    },
    {
      "src": "visibility [24654,24660]",
      "dest": "visibility [24653,24659]"
    },
    {
      "src": "address: address [16517,16524]",
      "dest": "address: address [16090,16097]"
    },
    {
      "src": "member_expression [30562,30578]",
      "dest": "member_expression [30561,30577]"
    },
    {
      "src": "call_argument [17822,17828]",
      "dest": "call_argument [17395,17401]"
    },
    {
      "src": "primitive_type [3834,3838]",
      "dest": "primitive_type [3341,3345]"
    },
    {
      "src": "identifier: Collected [52464,52473]",
      "dest": "identifier: Collected [60385,60394]"
    },
    {
      "src": "parameter [33344,33356]",
      "dest": "parameter [33343,33355]"
    },
    {
      "src": "return: return [22077,22083]",
      "dest": "return: return [21690,21696]"
    },
    {
      "src": "identifier: amount [31239,31245]",
      "dest": "identifier: amount [31238,31244]"
    },
    {
      "src": "(: ( [43658,43659]",
      "dest": "(: ( [48054,48055]"
    },
    {
      "src": "identifier: totalSupply [46409,46420]",
      "dest": "identifier: totalSupply [51367,51378]"
    },
    {
      "src": "boolean_literal [27526,27530]",
      "dest": "boolean_literal [27525,27529]"
    },
    {
      "src": "): ) [34832,34833]",
      "dest": "): ) [34999,35000]"
    },
    {
      "src": "parameter [43428,43434]",
      "dest": "parameter [47824,47830]"
    },
    {
      "src": "): ) [45698,45699]",
      "dest": "): ) [50491,50492]"
    },
    {
      "src": "identifier: this [21972,21976]",
      "dest": "identifier: this [21585,21589]"
    },
    {
      "src": "expression_statement [48536,48623]",
      "dest": "expression_statement [56283,56371]"
    },
    {
      "src": "{: { [19548,19549]",
      "dest": "{: { [19141,19142]"
    },
    {
      "src": "call_argument [31227,31237]",
      "dest": "call_argument [31226,31236]"
    },
    {
      "src": "type_name [40941,40948]",
      "dest": "type_name [45113,45120]"
    },
    {
      "src": "parameter [39083,39107]",
      "dest": "parameter [39641,39665]"
    },
    {
      "src": "primitive_type [15181,15185]",
      "dest": "primitive_type [14754,14758]"
    },
    {
      "src": "comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is      * called.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [24731,25355]",
      "dest": "comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is      * called.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [24730,25354]"
    },
    {
      "src": "identifier: _allowances [32187,32198]",
      "dest": "identifier: _allowances [32186,32197]"
    },
    {
      "src": "string_literal [7110,7143]",
      "dest": "string_literal [6637,6670]"
    },
    {
      "src": "expression_statement [45809,45848]",
      "dest": "expression_statement [50602,50641]"
    },
    {
      "src": "identifier: onlyOwner [35248,35257]",
      "dest": "identifier: onlyOwner [35415,35424]"
    },
    {
      "src": "call_expression [48751,48834]",
      "dest": "call_expression [56566,56649]"
    },
    {
      "src": "): ) [40720,40721]",
      "dest": "): ) [44892,44893]"
    },
    {
      "src": "type_name [23702,23709]",
      "dest": "type_name [23701,23708]"
    },
    {
      "src": "): ) [29636,29637]",
      "dest": "): ) [29635,29636]"
    },
    {
      "src": "identifier: amountToDeposit [45531,45546]",
      "dest": "identifier: amountToDeposit [50324,50339]"
    },
    {
      "src": "(: ( [45615,45616]",
      "dest": "(: ( [50408,50409]"
    },
    {
      "src": ",: , [50850,50851]",
      "dest": ",: , [58775,58776]"
    },
    {
      "src": "call_argument [11407,11419]",
      "dest": "call_argument [10954,10966]"
    },
    {
      "src": "}: } [12809,12810]",
      "dest": "}: } [12356,12357]"
    },
    {
      "src": "(: ( [37632,37633]",
      "dest": "(: ( [38154,38155]"
    },
    {
      "src": "identifier: sub [29872,29875]",
      "dest": "identifier: sub [29871,29874]"
    },
    {
      "src": "uint256: uint256 [8834,8841]",
      "dest": "uint256: uint256 [8381,8388]"
    },
    {
      "src": "function_definition [47749,48260]",
      "dest": "function_definition [55318,56007]"
    },
    {
      "src": "): ) [12737,12738]",
      "dest": "): ) [12284,12285]"
    },
    {
      "src": "call_argument [32035,32054]",
      "dest": "call_argument [32034,32053]"
    },
    {
      "src": "contract_body [36237,36476]",
      "dest": "contract_body [36664,36903]"
    },
    {
      "src": "expression_statement [48045,48094]",
      "dest": "expression_statement [55685,55734]"
    },
    {
      "src": "(: ( [39082,39083]",
      "dest": "(: ( [39640,39641]"
    },
    {
      "src": "true [21289,21293]",
      "dest": "true [20902,20906]"
    },
    {
      "src": "primitive_type [21964,21971]",
      "dest": "primitive_type [21577,21584]"
    },
    {
      "src": "event: event [41991,41996]",
      "dest": "event: event [46163,46168]"
    },
    {
      "src": "public: public [53379,53385]",
      "dest": "public: public [61300,61306]"
    },
    {
      "src": "(: ( [24651,24652]",
      "dest": "(: ( [24650,24651]"
    },
    {
      "src": "call_argument [45923,45929]",
      "dest": "call_argument [50768,50774]"
    },
    {
      "src": "call_argument [53700,53704]",
      "dest": "call_argument [61621,61625]"
    },
    {
      "src": "identifier: join [45348,45352]",
      "dest": "identifier: join [50141,50145]"
    },
    {
      "src": "}: } [24363,24364]",
      "dest": "}: } [24362,24363]"
    },
    {
      "src": "call_argument [31235,31236]",
      "dest": "call_argument [31234,31235]"
    },
    {
      "src": "(: ( [34576,34577]",
      "dest": "(: ( [34743,34744]"
    },
    {
      "src": "visibility [9323,9331]",
      "dest": "visibility [8870,8878]"
    },
    {
      "src": "type_name [21988,21995]",
      "dest": "type_name [21601,21608]"
    },
    {
      "src": "identifier: transfer [52405,52413]",
      "dest": "identifier: transfer [60326,60334]"
    },
    {
      "src": "uint256: uint256 [52857,52864]",
      "dest": "uint256: uint256 [60778,60785]"
    },
    {
      "src": "parameter [12668,12677]",
      "dest": "parameter [12215,12224]"
    },
    {
      "src": "function_body [35258,35352]",
      "dest": "function_body [35425,35519]"
    },
    {
      "src": "identifier: add [45839,45842]",
      "dest": "identifier: add [50632,50635]"
    },
    {
      "src": "call_expression [46528,46571]",
      "dest": "call_expression [51486,51529]"
    },
    {
      "src": "identifier: sendValue [14943,14952]",
      "dest": "identifier: sendValue [14516,14525]"
    },
    {
      "src": "identifier: yTokenBalance [44104,44117]",
      "dest": "identifier: yTokenBalance [48270,48283]"
    },
    {
      "src": "=: = [44570,44571]",
      "dest": "=: = [49189,49190]"
    },
    {
      "src": "call_expression [52382,52435]",
      "dest": "call_expression [60303,60356]"
    },
    {
      "src": "comment: /**      * @dev Deposit idle funds into curve.fi pool and stake in gauge      * Called by owner to help manage funds in pool and save on gas for deposits      * @param currencyAmount Amount of funds to deposit into curve      * @param minMintAmount Minimum amount to mint      */ [47459,47743]",
      "dest": "comment: /**      * @dev Deposit idle funds into curve.fi pool and stake in gauge      * Called by owner to help manage funds in pool and save on gas for deposits      * @param currencyAmount Amount of funds to deposit into curve      * @param minMintAmount Minimum amount to mint      */ [55028,55312]"
    },
    {
      "src": "uint256: uint256 [36066,36073]",
      "dest": "uint256: uint256 [36493,36500]"
    },
    {
      "src": "string [30438,30471]",
      "dest": "string [30437,30470]"
    },
    {
      "src": "uint256: uint256 [38928,38935]",
      "dest": "uint256: uint256 [39486,39493]"
    },
    {
      "src": "primitive_type [43156,43163]",
      "dest": "primitive_type [47328,47335]"
    },
    {
      "src": "event_paramater [40941,40963]",
      "dest": "event_paramater [45113,45135]"
    },
    {
      "src": "{: { [34342,34343]",
      "dest": "{: { [34509,34510]"
    },
    {
      "src": "type_name [2375,2382]",
      "dest": "type_name [1879,1886]"
    },
    {
      "src": "primitive_type [41824,41831]",
      "dest": "primitive_type [45996,46003]"
    },
    {
      "src": ",: , [32262,32263]",
      "dest": ",: , [32261,32262]"
    },
    {
      "src": "visibility [36880,36888]",
      "dest": "visibility [37307,37315]"
    },
    {
      "src": "primitive_type [49317,49324]",
      "dest": "primitive_type [47580,47587]"
    },
    {
      "src": "identifier: _token_amount [36784,36797]",
      "dest": "identifier: _token_amount [37211,37224]"
    },
    {
      "src": "identifier: div [46738,46741]",
      "dest": "identifier: div [51696,51699]"
    },
    {
      "src": "uint256: uint256 [9735,9742]",
      "dest": "uint256: uint256 [9282,9289]"
    },
    {
      "src": "primitive_type [25562,25569]",
      "dest": "primitive_type [25561,25568]"
    },
    {
      "src": "identifier: yTokenAmount [53032,53044]",
      "dest": "identifier: yTokenAmount [60953,60965]"
    },
    {
      "src": "return_type_definition [39074,39108]",
      "dest": "return_type_definition [39632,39666]"
    },
    {
      "src": "variable_declaration_statement [13845,13858]",
      "dest": "variable_declaration_statement [13415,13428]"
    },
    {
      "src": "function: function [42566,42574]",
      "dest": "function: function [46738,46746]"
    },
    {
      "src": ",: , [50138,50139]",
      "dest": ",: , [58461,58462]"
    },
    {
      "src": "call_expression [29959,29991]",
      "dest": "call_expression [29958,29990]"
    },
    {
      "src": "external: external [51035,51043]",
      "dest": "external: external [58958,58966]"
    },
    {
      "src": "(: ( [49324,49325]",
      "dest": "(: ( [47587,47588]"
    },
    {
      "src": "function_definition [36322,36372]",
      "dest": "function_definition [36749,36799]"
    },
    {
      "src": "member_expression [46897,46907]",
      "dest": "member_expression [51855,51865]"
    },
    {
      "src": "\": \" [32093,32094]",
      "dest": "\": \" [32092,32093]"
    },
    {
      "src": "call_expression [49973,50026]",
      "dest": "call_expression [58095,58148]"
    },
    {
      "src": "primitive_type [49063,49070]",
      "dest": "primitive_type [56878,56885]"
    },
    {
      "src": "=: = [31278,31279]",
      "dest": "=: = [31277,31278]"
    },
    {
      "src": "function_body [51054,51107]",
      "dest": "function_body [58977,59030]"
    },
    {
      "src": "type_name [8845,8852]",
      "dest": "type_name [8392,8399]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [16699,17060]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [16272,16633]"
    },
    {
      "src": "comment: // yield zero, making it an effective way to detect if a contract is [21832,21900]",
      "dest": "comment: // yield zero, making it an effective way to detect if a contract is [21445,21513]"
    },
    {
      "src": "(: ( [50824,50825]",
      "dest": "(: ( [58749,58750]"
    },
    {
      "src": "string_literal [42830,42838]",
      "dest": "string_literal [47002,47010]"
    },
    {
      "src": "identifier: onlyOwner [34743,34752]",
      "dest": "identifier: onlyOwner [34910,34919]"
    },
    {
      "src": "returns: returns [11363,11370]",
      "dest": "returns: returns [10910,10917]"
    },
    {
      "src": ".: . [50481,50482]",
      "dest": ".: . [57575,57576]"
    },
    {
      "src": "string [29639,29678]",
      "dest": "string [29638,29677]"
    },
    {
      "src": "address: address [43700,43707]",
      "dest": "address: address [48096,48103]"
    },
    {
      "src": "number_literal: 0 [16667,16668]",
      "dest": "number_literal: 0 [16240,16241]"
    },
    {
      "src": "primitive_type [25691,25698]",
      "dest": "primitive_type [25690,25697]"
    },
    {
      "src": "(: ( [43699,43700]",
      "dest": "(: ( [48095,48096]"
    },
    {
      "src": "call_argument [48070,48077]",
      "dest": "call_argument [55710,55717]"
    },
    {
      "src": "}: } [4749,4750]",
      "dest": "}: } [4256,4257]"
    },
    {
      "src": "(: ( [51077,51078]",
      "dest": "(: ( [59000,59001]"
    },
    {
      "src": "type_name [40555,40560]",
      "dest": "type_name [44727,44732]"
    },
    {
      "src": "identifier: errorMessage [16670,16682]",
      "dest": "identifier: errorMessage [16243,16255]"
    },
    {
      "src": ",: , [36816,36817]",
      "dest": ",: , [37243,37244]"
    },
    {
      "src": "identifier: currencyBalance [44015,44030]",
      "dest": "identifier: currencyBalance [48503,48518]"
    },
    {
      "src": "assignment_expression [21308,21326]",
      "dest": "assignment_expression [20921,20939]"
    },
    {
      "src": "identifier: swapExactTokensForTokens [51986,52010]",
      "dest": "identifier: swapExactTokensForTokens [59909,59933]"
    },
    {
      "src": "revert_statement [18797,18818]",
      "dest": "revert_statement [18370,18391]"
    },
    {
      "src": "comment: // Copied from https://github.com/OpenZeppelin/openzeppelin-contracts-ethereum-package/blob/v3.0.0/contracts/Initializable.sol [19884,20010]",
      "dest": "comment: // Copied from https://github.com/OpenZeppelin/openzeppelin-contracts-ethereum-package/blob/v3.0.0/contracts/Initializable.sol [19492,19618]"
    },
    {
      "src": "call_argument [32052,32053]",
      "dest": "call_argument [32051,32052]"
    },
    {
      "src": "\": \" [30470,30471]",
      "dest": "\": \" [30469,30470]"
    },
    {
      "src": ",: , [38944,38945]",
      "dest": ",: , [39502,39503]"
    },
    {
      "src": "): ) [44972,44973]",
      "dest": "): ) [49674,49675]"
    },
    {
      "src": "uint256: uint256 [26574,26581]",
      "dest": "uint256: uint256 [26573,26580]"
    },
    {
      "src": "public: public [40415,40421]",
      "dest": "public: public [44535,44541]"
    },
    {
      "src": "[: [ [28109,28110]",
      "dest": "[: [ [28108,28109]"
    },
    {
      "src": "uint256: uint256 [8435,8442]",
      "dest": "uint256: uint256 [7982,7989]"
    },
    {
      "src": "type_name [38986,38993]",
      "dest": "type_name [39544,39551]"
    },
    {
      "src": "call_expression [45665,45699]",
      "dest": "call_expression [50458,50492]"
    },
    {
      "src": "\": \" [21131,21132]",
      "dest": "\": \" [20744,20745]"
    },
    {
      "src": "): ) [45496,45497]",
      "dest": "): ) [50289,50290]"
    },
    {
      "src": "identifier: sub [31299,31302]",
      "dest": "identifier: sub [31298,31301]"
    },
    {
      "src": "expression_statement [49757,49920]",
      "dest": "expression_statement [57927,58050]"
    },
    {
      "src": "payable: payable [14961,14968]",
      "dest": "payable: payable [14534,14541]"
    },
    {
      "src": "call_argument [28828,28835]",
      "dest": "call_argument [28827,28834]"
    },
    {
      "src": "visibility [39065,39073]",
      "dest": "visibility [39623,39631]"
    },
    {
      "src": "primitive_type [46493,46500]",
      "dest": "primitive_type [51451,51458]"
    },
    {
      "src": "expression_statement [27387,27509]",
      "dest": "expression_statement [27386,27508]"
    },
    {
      "src": "visibility [13614,13622]",
      "dest": "visibility [13184,13192]"
    },
    {
      "src": "+: + [52072,52073]",
      "dest": "+: + [59995,59996]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [31467,31893]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [31466,31892]"
    },
    {
      "src": "visibility [37075,37083]",
      "dest": "visibility [37502,37510]"
    },
    {
      "src": "(: ( [35697,35698]",
      "dest": "(: ( [35864,35865]"
    },
    {
      "src": "expression_statement [15016,15090]",
      "dest": "expression_statement [14589,14663]"
    },
    {
      "src": "using_directive [39809,39836]",
      "dest": "using_directive [43929,43956]"
    },
    {
      "src": "function_definition [24190,24364]",
      "dest": "function_definition [24189,24363]"
    },
    {
      "src": "number_literal: 3 [40583,40584]",
      "dest": "number_literal: 3 [44755,44756]"
    },
    {
      "src": "else: else [18773,18777]",
      "dest": "else: else [18346,18350]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-allowance}.      */ [26187,26236]",
      "dest": "comment: /**      * @dev See {IERC20-allowance}.      */ [26186,26235]"
    },
    {
      "src": "{: { [6998,6999]",
      "dest": "{: { [6525,6526]"
    },
    {
      "src": "external: external [37019,37027]",
      "dest": "external: external [37446,37454]"
    },
    {
      "src": "type_name [41189,41196]",
      "dest": "type_name [45361,45368]"
    },
    {
      "src": "parameter [29506,29520]",
      "dest": "parameter [29505,29519]"
    },
    {
      "src": "visibility [52250,52258]",
      "dest": "visibility [60171,60179]"
    },
    {
      "src": "identifier: target [16653,16659]",
      "dest": "identifier: target [16226,16232]"
    },
    {
      "src": "): ) [28956,28957]",
      "dest": "): ) [28955,28956]"
    },
    {
      "src": "function: function [36039,36047]",
      "dest": "function: function [36466,36474]"
    },
    {
      "src": "): ) [43672,43673]",
      "dest": "): ) [48068,48069]"
    },
    {
      "src": "identifier: this [43708,43712]",
      "dest": "identifier: this [48104,48108]"
    },
    {
      "src": "!=: != [7097,7099]",
      "dest": "!=: != [6624,6626]"
    },
    {
      "src": "mapping: mapping [23664,23671]",
      "dest": "mapping: mapping [23663,23670]"
    },
    {
      "src": "(: ( [32634,32635]",
      "dest": "(: ( [32633,32634]"
    },
    {
      "src": "assembly_statement [22009,22067]",
      "dest": "assembly_statement [21622,21680]"
    },
    {
      "src": "): ) [49483,49484]",
      "dest": "): ) [57174,57175]"
    },
    {
      "src": "}: } [53122,53123]",
      "dest": "}: } [61043,61044]"
    },
    {
      "src": "=: = [8445,8446]",
      "dest": "=: = [7992,7993]"
    },
    {
      "src": "(: ( [28760,28761]",
      "dest": "(: ( [28759,28760]"
    },
    {
      "src": "comment: /**      * @dev Returns the address of the current owner.      */ [34489,34556]",
      "dest": "comment: /**      * @dev Returns the address of the current owner.      */ [34656,34723]"
    },
    {
      "src": "visibility [40415,40421]",
      "dest": "visibility [44535,44541]"
    },
    {
      "src": "(: ( [34773,34774]",
      "dest": "(: ( [34940,34941]"
    },
    {
      "src": "): ) [17855,17856]",
      "dest": "): ) [17428,17429]"
    },
    {
      "src": "expression_statement [7253,7255]",
      "dest": "expression_statement [6780,6782]"
    },
    {
      "src": "user_defined_type [42596,42606]",
      "dest": "user_defined_type [46768,46778]"
    },
    {
      "src": "uint256: uint256 [4489,4496]",
      "dest": "uint256: uint256 [3996,4003]"
    },
    {
      "src": "if: if [18394,18396]",
      "dest": "if: if [17967,17969]"
    },
    {
      "src": "identifier: yAmount [48470,48477]",
      "dest": "identifier: yAmount [56217,56224]"
    },
    {
      "src": "state_variable_declaration [23664,23732]",
      "dest": "state_variable_declaration [23663,23731]"
    },
    {
      "src": "type_name [9406,9413]",
      "dest": "type_name [8953,8960]"
    },
    {
      "src": "primitive_type [8834,8841]",
      "dest": "primitive_type [8381,8388]"
    },
    {
      "src": "call_expression [30407,30472]",
      "dest": "call_expression [30406,30471]"
    },
    {
      "src": "identifier: sender [27430,27436]",
      "dest": "identifier: sender [27429,27435]"
    },
    {
      "src": "identifier: account [30518,30525]",
      "dest": "identifier: account [30517,30524]"
    },
    {
      "src": "identifier: fee [50444,50447]",
      "dest": "identifier: fee [57538,57541]"
    },
    {
      "src": ",: , [4194,4195]",
      "dest": ",: , [3701,3702]"
    },
    {
      "src": "identifier: curveLiquidityAmountToTransfer [46663,46693]",
      "dest": "identifier: curveLiquidityAmountToTransfer [51621,51651]"
    },
    {
      "src": "(: ( [36984,36985]",
      "dest": "(: ( [37411,37412]"
    },
    {
      "src": ".: . [48185,48186]",
      "dest": ".: . [55824,55825]"
    },
    {
      "src": "false: false [21414,21419]",
      "dest": "false: false [21027,21032]"
    },
    {
      "src": "(: ( [2374,2375]",
      "dest": "(: ( [1878,1879]"
    },
    {
      "src": "(: ( [3782,3783]",
      "dest": "(: ( [3289,3290]"
    },
    {
      "src": "}: } [38764,38765]",
      "dest": "}: } [39304,39305]"
    },
    {
      "src": "(: ( [4248,4249]",
      "dest": "(: ( [3755,3756]"
    },
    {
      "src": ",: , [29882,29883]",
      "dest": ",: , [29881,29882]"
    },
    {
      "src": "(: ( [29616,29617]",
      "dest": "(: ( [29615,29616]"
    },
    {
      "src": "call_argument [31423,31430]",
      "dest": "call_argument [31422,31429]"
    },
    {
      "src": "(: ( [50796,50797]",
      "dest": "(: ( [58721,58722]"
    },
    {
      "src": "return_statement [12790,12803]",
      "dest": "return_statement [12337,12350]"
    },
    {
      "src": "member_expression [44142,44158]",
      "dest": "member_expression [48290,48306]"
    },
    {
      "src": "(: ( [43923,43924]",
      "dest": "(: ( [48219,48220]"
    },
    {
      "src": "expression_statement [30485,30535]",
      "dest": "expression_statement [30484,30534]"
    },
    {
      "src": "(: ( [47332,47333]",
      "dest": "(: ( [52290,52291]"
    },
    {
      "src": "call_argument [49727,49731]",
      "dest": "call_argument [57901,57905]"
    },
    {
      "src": "type_cast_expression [35608,35618]",
      "dest": "type_cast_expression [35775,35785]"
    },
    {
      "src": "identifier: __currencyToken [42972,42987]",
      "dest": "identifier: __currencyToken [47144,47159]"
    },
    {
      "src": "primitive_type [51851,51858]",
      "dest": "primitive_type [59774,59781]"
    },
    {
      "src": "identifier: errorMessage [11407,11419]",
      "dest": "identifier: errorMessage [10954,10966]"
    },
    {
      "src": "identifier: require [49757,49764]",
      "dest": "identifier: require [57927,57934]"
    },
    {
      "src": "call_expression [43133,43189]",
      "dest": "call_expression [47305,47361]"
    },
    {
      "src": "identifier: fee [45406,45409]",
      "dest": "identifier: fee [50199,50202]"
    },
    {
      "src": "{: { [18213,18214]",
      "dest": "{: { [17786,17787]"
    },
    {
      "src": "identifier: value [17733,17738]",
      "dest": "identifier: value [17306,17311]"
    },
    {
      "src": "parameter [9295,9321]",
      "dest": "parameter [8842,8868]"
    },
    {
      "src": "call_argument [45164,45175]",
      "dest": "call_argument [49967,49978]"
    },
    {
      "src": "contract_declaration [20673,22214]",
      "dest": "contract_declaration [20286,21827]"
    },
    {
      "src": "type_name [14980,14987]",
      "dest": "type_name [14553,14560]"
    },
    {
      "src": "returns: returns [26322,26329]",
      "dest": "returns: returns [26321,26328]"
    },
    {
      "src": "state_mutability [34586,34590]",
      "dest": "state_mutability [34753,34757]"
    },
    {
      "src": "primitive_type [16517,16524]",
      "dest": "primitive_type [16090,16097]"
    },
    {
      "src": "): ) [38052,38053]",
      "dest": "): ) [38574,38575]"
    },
    {
      "src": "external: external [2236,2244]",
      "dest": "external: external [1740,1748]"
    },
    {
      "src": "): ) [49111,49112]",
      "dest": "): ) [56926,56927]"
    },
    {
      "src": "indexed: indexed [4477,4484]",
      "dest": "indexed: indexed [3984,3991]"
    },
    {
      "src": "override_specifier [26072,26080]",
      "dest": "override_specifier [26071,26079]"
    },
    {
      "src": "solidity: solidity [39165,39173]",
      "dest": "solidity: solidity [42508,42516]"
    },
    {
      "src": "returns: returns [36121,36128]",
      "dest": "returns: returns [36548,36555]"
    },
    {
      "src": "): ) [17720,17721]",
      "dest": "): ) [17293,17294]"
    },
    {
      "src": "array_access [30618,30636]",
      "dest": "array_access [30617,30635]"
    },
    {
      "src": "address: address [4684,4691]",
      "dest": "address: address [4191,4198]"
    },
    {
      "src": "array_access [31259,31277]",
      "dest": "array_access [31258,31276]"
    },
    {
      "src": "{: { [12739,12740]",
      "dest": "{: { [12286,12287]"
    },
    {
      "src": "(: ( [44203,44204]",
      "dest": "(: ( [48333,48334]"
    },
    {
      "src": ".: . [49619,49620]",
      "dest": ".: . [57230,57231]"
    },
    {
      "src": "comment: /**      * @dev Remove liquidity from curve      * @param yAmount amount of curve pool tokens      * @param minCurrencyAmount minimum amount of tokens to withdraw      */ [48268,48442]",
      "dest": "comment: /**      * @dev Remove liquidity from curve      * @param yAmount amount of curve pool tokens      * @param minCurrencyAmount minimum amount of tokens to withdraw      */ [56015,56189]"
    },
    {
      "src": "user_defined_type [35855,35861]",
      "dest": "user_defined_type [36117,36123]"
    },
    {
      "src": "visibility [26590,26596]",
      "dest": "visibility [26589,26595]"
    },
    {
      "src": "string [34798,34832]",
      "dest": "string [34965,34999]"
    },
    {
      "src": "primitive_type [12679,12685]",
      "dest": "primitive_type [12226,12232]"
    },
    {
      "src": "primitive_type [3800,3807]",
      "dest": "primitive_type [3307,3314]"
    },
    {
      "src": "override: override [46267,46275]",
      "dest": "override: override [51112,51120]"
    },
    {
      "src": "call_argument [46576,46588]",
      "dest": "call_argument [51534,51546]"
    },
    {
      "src": "public: public [26293,26299]",
      "dest": "public: public [26292,26298]"
    },
    {
      "src": "assignment_expression [43105,43120]",
      "dest": "assignment_expression [47277,47292]"
    },
    {
      "src": "uint256: uint256 [38246,38253]",
      "dest": "uint256: uint256 [38768,38775]"
    },
    {
      "src": "expression_statement [29609,29680]",
      "dest": "expression_statement [29608,29679]"
    },
    {
      "src": "}: } [12812,12813]",
      "dest": "}: } [12359,12360]"
    },
    {
      "src": "function_definition [25361,25444]",
      "dest": "function_definition [25360,25443]"
    },
    {
      "src": "identifier: a [10081,10082]",
      "dest": "identifier: a [9628,9629]"
    },
    {
      "src": "string_literal [31311,31347]",
      "dest": "string_literal [31310,31346]"
    },
    {
      "src": "returns: returns [26614,26621]",
      "dest": "returns: returns [26613,26620]"
    },
    {
      "src": "address: address [28695,28702]",
      "dest": "address: address [28694,28701]"
    },
    {
      "src": "identifier: value [17140,17145]",
      "dest": "identifier: value [16713,16718]"
    },
    {
      "src": "identifier: account [25775,25782]",
      "dest": "identifier: account [25774,25781]"
    },
    {
      "src": "identifier: value [38592,38597]",
      "dest": "identifier: value [39132,39137]"
    },
    {
      "src": "): ) [32270,32271]",
      "dest": "): ) [32269,32270]"
    },
    {
      "src": "uint256: uint256 [36929,36936]",
      "dest": "uint256: uint256 [37356,37363]"
    },
    {
      "src": "function_definition [42566,43268]",
      "dest": "function_definition [46738,47440]"
    },
    {
      "src": "expression_statement [43068,43093]",
      "dest": "expression_statement [47240,47265]"
    },
    {
      "src": "expression_statement [30597,30649]",
      "dest": "expression_statement [30596,30648]"
    },
    {
      "src": "expression_statement [32106,32175]",
      "dest": "expression_statement [32105,32174]"
    },
    {
      "src": "parameter [27323,27327]",
      "dest": "parameter [27322,27326]"
    },
    {
      "src": "identifier: _msgSender [28862,28872]",
      "dest": "identifier: _msgSender [28861,28871]"
    },
    {
      "src": "member_expression [47068,47078]",
      "dest": "member_expression [52026,52036]"
    },
    {
      "src": "variable_declaration_statement [47942,48003]",
      "dest": "variable_declaration_statement [55512,55573]"
    },
    {
      "src": "type_name [4684,4691]",
      "dest": "type_name [4191,4198]"
    },
    {
      "src": "primitive_type [4707,4714]",
      "dest": "primitive_type [4214,4221]"
    },
    {
      "src": "): ) [46569,46570]",
      "dest": "): ) [51527,51528]"
    },
    {
      "src": "visibility [36282,36290]",
      "dest": "visibility [36709,36717]"
    },
    {
      "src": "parameter [36199,36206]",
      "dest": "parameter [36626,36633]"
    },
    {
      "src": "identifier: mod [12114,12117]",
      "dest": "identifier: mod [11661,11664]"
    },
    {
      "src": "member_expression [47424,47434]",
      "dest": "member_expression [52382,52392]"
    },
    {
      "src": "modifier_invocation [24269,24280]",
      "dest": "modifier_invocation [24268,24279]"
    },
    {
      "src": "identifier: _currencyToken [42955,42969]",
      "dest": "identifier: _currencyToken [47127,47141]"
    },
    {
      "src": "): ) [44589,44590]",
      "dest": "): ) [49208,49209]"
    },
    {
      "src": "member_expression [44572,44588]",
      "dest": "member_expression [49191,49207]"
    },
    {
      "src": "function_definition [48448,48875]",
      "dest": "function_definition [56195,56690]"
    },
    {
      "src": "call_argument [32137,32173]",
      "dest": "call_argument [32136,32172]"
    },
    {
      "src": "=: = [6568,6569]",
      "dest": "=: = [6095,6096]"
    },
    {
      "src": "identifier: currencyBalance [49624,49639]",
      "dest": "identifier: currencyBalance [57235,57250]"
    },
    {
      "src": "identifier: account [30354,30361]",
      "dest": "identifier: account [30353,30360]"
    },
    {
      "src": "state_mutability [9332,9336]",
      "dest": "state_mutability [8879,8883]"
    },
    {
      "src": "state_mutability [43933,43937]",
      "dest": "state_mutability [48229,48233]"
    },
    {
      "src": "assignment_expression [24342,24356]",
      "dest": "assignment_expression [24341,24355]"
    },
    {
      "src": "event_paramater [42228,42255]",
      "dest": "event_paramater [46400,46427]"
    },
    {
      "src": "identifier: expectedAmount [50363,50377]",
      "dest": "identifier: expectedAmount [57457,57471]"
    },
    {
      "src": "identifier: _curvePool [43200,43210]",
      "dest": "identifier: _curvePool [47372,47382]"
    },
    {
      "src": "identifier: _msgSender [34784,34794]",
      "dest": "identifier: _msgSender [34951,34961]"
    },
    {
      "src": "parameter [11321,11347]",
      "dest": "parameter [10868,10894]"
    },
    {
      "src": "\": \" [34798,34799]",
      "dest": "\": \" [34965,34966]"
    },
    {
      "src": "identifier: errorMessage [12766,12778]",
      "dest": "identifier: errorMessage [12313,12325]"
    },
    {
      "src": "memory: memory [24682,24688]",
      "dest": "memory: memory [24681,24687]"
    },
    {
      "src": "identifier: deposit [36098,36105]",
      "dest": "identifier: deposit [36525,36532]"
    },
    {
      "src": ".: . [47326,47327]",
      "dest": ".: . [52284,52285]"
    },
    {
      "src": "state_variable_declaration [23833,23857]",
      "dest": "state_variable_declaration [23832,23856]"
    },
    {
      "src": "[: [ [31268,31269]",
      "dest": "[: [ [31267,31268]"
    },
    {
      "src": "identifier: OwnershipTransferred [34114,34134]",
      "dest": "identifier: OwnershipTransferred [34281,34301]"
    },
    {
      "src": "(: ( [26648,26649]",
      "dest": "(: ( [26647,26648]"
    },
    {
      "src": "identifier: account [30628,30635]",
      "dest": "identifier: account [30627,30634]"
    },
    {
      "src": "function_definition [31041,31459]",
      "dest": "function_definition [31040,31458]"
    },
    {
      "src": "state_mutability [36185,36189]",
      "dest": "state_mutability [36612,36616]"
    },
    {
      "src": "public: public [28737,28743]",
      "dest": "public: public [28736,28742]"
    },
    {
      "src": "): ) [23636,23637]",
      "dest": "): ) [23635,23636]"
    },
    {
      "src": "comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [24525,24630]",
      "dest": "comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [24524,24629]"
    },
    {
      "src": "(: ( [46896,46897]",
      "dest": "(: ( [51854,51855]"
    },
    {
      "src": "): ) [50218,50219]",
      "dest": "): ) [57311,57312]"
    },
    {
      "src": "uint256: uint256 [27991,27998]",
      "dest": "uint256: uint256 [27990,27997]"
    },
    {
      "src": "identifier: Pulled [41518,41524]",
      "dest": "identifier: Pulled [45690,45696]"
    },
    {
      "src": "identifier: expectedAmount [49163,49177]",
      "dest": "identifier: expectedAmount [56989,57003]"
    },
    {
      "src": "(: ( [53614,53615]",
      "dest": "(: ( [61535,61536]"
    },
    {
      "src": "function_body [17179,17292]",
      "dest": "function_body [16752,16865]"
    },
    {
      "src": "=: = [44930,44931]",
      "dest": "=: = [49632,49633]"
    },
    {
      "src": "memory: memory [19649,19655]",
      "dest": "memory: memory [19242,19248]"
    },
    {
      "src": "private: private [23712,23719]",
      "dest": "private: private [23711,23718]"
    },
    {
      "src": "(: ( [25561,25562]",
      "dest": "(: ( [25560,25561]"
    },
    {
      "src": "return_type_definition [10707,10724]",
      "dest": "return_type_definition [10254,10271]"
    },
    {
      "src": "address: address [32125,32132]",
      "dest": "address: address [32124,32131]"
    },
    {
      "src": "call_expression [45767,45798]",
      "dest": "call_expression [50560,50591]"
    },
    {
      "src": "solidity_version:  0.6.10 [39173,39180]",
      "dest": "solidity_version:  0.6.10 [42516,42523]"
    },
    {
      "src": "identifier: minCurrencyAmount [48487,48504]",
      "dest": "identifier: minCurrencyAmount [56234,56251]"
    },
    {
      "src": "parameter [24238,24258]",
      "dest": "parameter [24237,24257]"
    },
    {
      "src": "expression_statement [27340,27377]",
      "dest": "expression_statement [27339,27376]"
    },
    {
      "src": "call_argument [48828,48833]",
      "dest": "call_argument [56643,56648]"
    },
    {
      "src": "call_argument [15057,15088]",
      "dest": "call_argument [14630,14661]"
    },
    {
      "src": "override: override [26308,26316]",
      "dest": "override: override [26307,26315]"
    },
    {
      "src": "(: ( [32034,32035]",
      "dest": "(: ( [32033,32034]"
    },
    {
      "src": "function_body [6998,7431]",
      "dest": "function_body [6525,6958]"
    },
    {
      "src": "visibility [9746,9754]",
      "dest": "visibility [9293,9301]"
    },
    {
      "src": "identifier: amount [30035,30041]",
      "dest": "identifier: amount [30034,30040]"
    },
    {
      "src": "identifier: _currencyToken [47044,47058]",
      "dest": "identifier: _currencyToken [52002,52016]"
    },
    {
      "src": "number_literal: 1000 [49737,49741]",
      "dest": "number_literal: 1000 [57911,57915]"
    },
    {
      "src": "): ) [36462,36463]",
      "dest": "): ) [36889,36890]"
    },
    {
      "src": ",: , [4213,4214]",
      "dest": ",: , [3720,3721]"
    },
    {
      "src": "visibility [40185,40191]",
      "dest": "visibility [44305,44311]"
    },
    {
      "src": "type_name [34135,34142]",
      "dest": "type_name [34302,34309]"
    },
    {
      "src": "return: return [9436,9442]",
      "dest": "return: return [8983,8989]"
    },
    {
      "src": "): ) [47104,47105]",
      "dest": "): ) [52062,52063]"
    },
    {
      "src": "(: ( [37097,37098]",
      "dest": "(: ( [37524,37525]"
    },
    {
      "src": "}: } [26178,26179]",
      "dest": "}: } [26177,26178]"
    },
    {
      "src": "modifier_invocation [35248,35257]",
      "dest": "modifier_invocation [35415,35424]"
    },
    {
      "src": "private: private [23638,23645]",
      "dest": "private: private [23637,23644]"
    },
    {
      "src": "identifier: transfer [26013,26021]",
      "dest": "identifier: transfer [26012,26020]"
    },
    {
      "src": "primitive_type [42027,42034]",
      "dest": "primitive_type [46199,46206]"
    },
    {
      "src": "identifier: balanceOf [36253,36262]",
      "dest": "identifier: balanceOf [36680,36689]"
    },
    {
      "src": "uint256: uint256 [51793,51800]",
      "dest": "uint256: uint256 [59716,59723]"
    },
    {
      "src": "type_name [3783,3790]",
      "dest": "type_name [3290,3297]"
    },
    {
      "src": "identifier: _curveGauge [43678,43689]",
      "dest": "identifier: _curveGauge [48074,48085]"
    },
    {
      "src": "binary_expression [45616,45633]",
      "dest": "binary_expression [50409,50426]"
    },
    {
      "src": ">: > [45630,45631]",
      "dest": ">: > [50423,50424]"
    },
    {
      "src": "return: return [53420,53426]",
      "dest": "return: return [61341,61347]"
    },
    {
      "src": "type_name [32635,32640]",
      "dest": "type_name [32634,32639]"
    },
    {
      "src": "): ) [52434,52435]",
      "dest": "): ) [60355,60356]"
    },
    {
      "src": "(: ( [41524,41525]",
      "dest": "(: ( [45696,45697]"
    },
    {
      "src": "): ) [26678,26679]",
      "dest": "): ) [26677,26678]"
    },
    {
      "src": "comment: // The values being non-zero value makes deployment a bit more expensive, [6015,6088]",
      "dest": "comment: // The values being non-zero value makes deployment a bit more expensive, [5542,5615]"
    },
    {
      "src": "string: string [12679,12685]",
      "dest": "string: string [12226,12232]"
    },
    {
      "src": "string_literal [18055,18086]",
      "dest": "string_literal [17628,17659]"
    },
    {
      "src": "block_statement [10022,10057]",
      "dest": "block_statement [9569,9604]"
    },
    {
      "src": "external: external [37140,37148]",
      "dest": "external: external [37567,37575]"
    },
    {
      "src": ".: . [46331,46332]",
      "dest": ".: . [51288,51289]"
    },
    {
      "src": "(: ( [27322,27323]",
      "dest": "(: ( [27321,27322]"
    },
    {
      "src": "identifier: require [47308,47315]",
      "dest": "identifier: require [52266,52273]"
    },
    {
      "src": "comment: /**      * @dev set pool join fee      * @param fee new fee      */ [44777,44847]",
      "dest": "comment: /**      * @dev set pool join fee      * @param fee new fee      */ [49396,49466]"
    },
    {
      "src": "parameter [51793,51809]",
      "dest": "parameter [59716,59732]"
    },
    {
      "src": "type_name [46242,46249]",
      "dest": "type_name [51087,51094]"
    },
    {
      "src": ".: . [28884,28885]",
      "dest": ".: . [28883,28884]"
    },
    {
      "src": "modifier_invocation [47820,47829]",
      "dest": "modifier_invocation [55389,55398]"
    },
    {
      "src": "function: function [38583,38591]",
      "dest": "function: function [39123,39131]"
    },
    {
      "src": "identifier: yAmount [53370,53377]",
      "dest": "identifier: yAmount [61291,61298]"
    },
    {
      "src": "parameter [34600,34607]",
      "dest": "parameter [34767,34774]"
    },
    {
      "src": "visibility [37140,37148]",
      "dest": "visibility [37567,37575]"
    },
    {
      "src": "external: external [36880,36888]",
      "dest": "external: external [37307,37315]"
    },
    {
      "src": "member_expression [48167,48183]",
      "dest": "member_expression [55806,55822]"
    },
    {
      "src": "function_body [17689,17864]",
      "dest": "function_body [17262,17437]"
    },
    {
      "src": "interface_declaration [35834,35936]",
      "dest": "interface_declaration [36096,36198]"
    },
    {
      "src": "override: override [26072,26080]",
      "dest": "override: override [26071,26079]"
    },
    {
      "src": "(: ( [28060,28061]",
      "dest": "(: ( [28059,28060]"
    },
    {
      "src": "\": \" [30438,30439]",
      "dest": "\": \" [30437,30438]"
    },
    {
      "src": "function_body [34609,34641]",
      "dest": "function_body [34776,34808]"
    },
    {
      "src": "): ) [52974,52975]",
      "dest": "): ) [60895,60896]"
    },
    {
      "src": "(: ( [18397,18398]",
      "dest": "(: ( [17970,17971]"
    },
    {
      "src": "interface_declaration [2115,4750]",
      "dest": "interface_declaration [1619,4257]"
    },
    {
      "src": "call_argument [17843,17855]",
      "dest": "call_argument [17416,17428]"
    },
    {
      "src": "primitive_type [45156,45163]",
      "dest": "primitive_type [49959,49966]"
    },
    {
      "src": "primitive_type [43227,43234]",
      "dest": "primitive_type [47399,47406]"
    },
    {
      "src": "state_variable_declaration [23740,23769]",
      "dest": "state_variable_declaration [23739,23768]"
    },
    {
      "src": "(: ( [11371,11372]",
      "dest": "(: ( [10918,10919]"
    },
    {
      "src": "identifier: data [16143,16147]",
      "dest": "identifier: data [15716,15720]"
    },
    {
      "src": "call_argument [27350,27356]",
      "dest": "call_argument [27349,27355]"
    },
    {
      "src": "{: { [39802,39803]",
      "dest": "{: { [43922,43923]"
    },
    {
      "src": ",: , [26661,26662]",
      "dest": ",: , [26660,26661]"
    },
    {
      "src": ",: , [27402,27403]",
      "dest": ",: , [27401,27402]"
    },
    {
      "src": "yul_identifier [22033,22035]",
      "dest": "yul_identifier [21646,21648]"
    },
    {
      "src": "{: { [5633,5634]",
      "dest": "{: { [5160,5161]"
    },
    {
      "src": "identifier: __ERC20_initialize [24199,24217]",
      "dest": "identifier: __ERC20_initialize [24198,24216]"
    },
    {
      "src": "identifier: returndata [18709,18719]",
      "dest": "identifier: returndata [18282,18292]"
    },
    {
      "src": "call_expression [10097,10153]",
      "dest": "call_expression [9644,9700]"
    },
    {
      "src": "(: ( [13955,13956]",
      "dest": "(: ( [13525,13526]"
    },
    {
      "src": "boolean_literal [21289,21293]",
      "dest": "boolean_literal [20902,20906]"
    },
    {
      "src": "expression_statement [50459,50522]",
      "dest": "expression_statement [57553,57616]"
    },
    {
      "src": "(: ( [4446,4447]",
      "dest": "(: ( [3953,3954]"
    },
    {
      "src": "primitive_type [16130,16135]",
      "dest": "primitive_type [15703,15708]"
    },
    {
      "src": "call_expression [28850,28946]",
      "dest": "call_expression [28849,28945]"
    },
    {
      "src": "address: address [29711,29718]",
      "dest": "address: address [29710,29717]"
    },
    {
      "src": "identifier: to [4485,4487]",
      "dest": "identifier: to [3992,3994]"
    },
    {
      "src": "string [46341,46372]",
      "dest": "string [51298,51330]"
    },
    {
      "src": "call_expression [26649,26661]",
      "dest": "call_expression [26648,26660]"
    },
    {
      "src": "comment: // prettier-ignore [46005,46023]",
      "dest": "comment: // prettier-ignore [50850,50868]"
    },
    {
      "src": "(: ( [25737,25738]",
      "dest": "(: ( [25736,25737]"
    },
    {
      "src": ",: , [31237,31238]",
      "dest": ",: , [31236,31237]"
    },
    {
      "src": "(: ( [50183,50184]",
      "dest": "(: ( [57276,57277]"
    },
    {
      "src": "identifier: a [10014,10015]",
      "dest": "identifier: a [9561,9562]"
    },
    {
      "src": ".: . [43048,43049]",
      "dest": ".: . [47220,47221]"
    },
    {
      "src": "assignment_expression [42918,42944]",
      "dest": "assignment_expression [47090,47116]"
    },
    {
      "src": "identifier: spender [32114,32121]",
      "dest": "identifier: spender [32113,32120]"
    },
    {
      "src": "expression_statement [24292,24305]",
      "dest": "expression_statement [24291,24304]"
    },
    {
      "src": "identifier: require [29690,29697]",
      "dest": "identifier: require [29689,29696]"
    },
    {
      "src": ",: , [31430,31431]",
      "dest": ",: , [31429,31430]"
    },
    {
      "src": "identifier: onlyOwner [35567,35576]",
      "dest": "identifier: onlyOwner [35734,35743]"
    },
    {
      "src": "{: { [27329,27330]",
      "dest": "{: { [27328,27329]"
    },
    {
      "src": "identifier: _totalSupply [31374,31386]",
      "dest": "identifier: _totalSupply [31373,31385]"
    },
    {
      "src": "external: external [52250,52258]",
      "dest": "external: external [60171,60179]"
    },
    {
      "src": ">=: >= [8473,8475]",
      "dest": ">=: >= [8020,8022]"
    },
    {
      "src": "type_cast_expression [50837,50850]",
      "dest": "type_cast_expression [58762,58775]"
    },
    {
      "src": "type_cast_expression [43177,43188]",
      "dest": "type_cast_expression [47349,47360]"
    },
    {
      "src": "return_statement [19559,19577]",
      "dest": "return_statement [19152,19170]"
    },
    {
      "src": "function: function [26004,26012]",
      "dest": "function: function [26003,26011]"
    },
    {
      "src": "\": \" [10753,10754]",
      "dest": "\": \" [10300,10301]"
    },
    {
      "src": "identifier: to [33375,33377]",
      "dest": "identifier: to [33374,33376]"
    },
    {
      "src": "interface: interface [36215,36224]",
      "dest": "interface: interface [36642,36651]"
    },
    {
      "src": "function_definition [26242,26393]",
      "dest": "function_definition [26241,26392]"
    },
    {
      "src": "identifier: div [10743,10746]",
      "dest": "identifier: div [10290,10293]"
    },
    {
      "src": ",: , [48477,48478]",
      "dest": ",: , [56224,56225]"
    },
    {
      "src": "identifier: _transfer [27340,27349]",
      "dest": "identifier: _transfer [27339,27348]"
    },
    {
      "src": "yul_variable_declaration [18632,18672]",
      "dest": "yul_variable_declaration [18205,18245]"
    },
    {
      "src": "identifier: target [18046,18052]",
      "dest": "identifier: target [17619,17625]"
    },
    {
      "src": "contract_body [20696,22214]",
      "dest": "contract_body [20309,21827]"
    },
    {
      "src": "assignment_expression [32187,32223]",
      "dest": "assignment_expression [32186,32222]"
    },
    {
      "src": "(: ( [2258,2259]",
      "dest": "(: ( [1762,1763]"
    },
    {
      "src": "event_paramater [41808,41822]",
      "dest": "event_paramater [45980,45994]"
    },
    {
      "src": "call_argument [27396,27402]",
      "dest": "call_argument [27395,27401]"
    },
    {
      "src": "}: } [18231,18232]",
      "dest": "}: } [17804,17805]"
    },
    {
      "src": "expression_statement [21074,21181]",
      "dest": "expression_statement [20687,20794]"
    },
    {
      "src": "(: ( [43666,43667]",
      "dest": "(: ( [48062,48063]"
    },
    {
      "src": "): ) [47387,47388]",
      "dest": "): ) [52345,52346]"
    },
    {
      "src": "function_body [19548,19584]",
      "dest": "function_body [19141,19177]"
    },
    {
      "src": "false: false [48828,48833]",
      "dest": "false: false [56643,56648]"
    },
    {
      "src": "virtual: virtual [28744,28751]",
      "dest": "virtual: virtual [28743,28750]"
    },
    {
      "src": "): ) [31087,31088]",
      "dest": "): ) [31086,31087]"
    },
    {
      "src": "): ) [43713,43714]",
      "dest": "): ) [48109,48110]"
    },
    {
      "src": "external: external [48506,48514]",
      "dest": "external: external [56253,56261]"
    },
    {
      "src": "address: address [34353,34360]",
      "dest": "address: address [34520,34527]"
    },
    {
      "src": "{: { [44526,44527]",
      "dest": "{: { [49145,49146]"
    },
    {
      "src": "return_statement [24497,24510]",
      "dest": "return_statement [24496,24509]"
    },
    {
      "src": "number_literal: 1 [6439,6440]",
      "dest": "number_literal: 1 [5966,5967]"
    },
    {
      "src": "primitive_type [3783,3790]",
      "dest": "primitive_type [3290,3297]"
    },
    {
      "src": "identifier: _functionCallWithValue [17799,17821]",
      "dest": "identifier: _functionCallWithValue [17372,17394]"
    },
    {
      "src": "returns: returns [8870,8877]",
      "dest": "returns: returns [8417,8424]"
    },
    {
      "src": "): ) [38270,38271]",
      "dest": "): ) [38792,38793]"
    },
    {
      "src": "returns: returns [27314,27321]",
      "dest": "returns: returns [27313,27320]"
    },
    {
      "src": "address: address [41165,41172]",
      "dest": "address: address [45337,45344]"
    },
    {
      "src": "): ) [43647,43648]",
      "dest": "): ) [48043,48044]"
    },
    {
      "src": "): ) [36960,36961]",
      "dest": "): ) [37387,37388]"
    },
    {
      "src": "return_statement [53660,53726]",
      "dest": "return_statement [61581,61647]"
    },
    {
      "src": "(: ( [44608,44609]",
      "dest": "(: ( [49227,49228]"
    },
    {
      "src": "identifier: balanceOf [2365,2374]",
      "dest": "identifier: balanceOf [1869,1878]"
    },
    {
      "src": "identifier: add [29980,29983]",
      "dest": "identifier: add [29979,29982]"
    },
    {
      "src": "external: external [37075,37083]",
      "dest": "external: external [37502,37510]"
    },
    {
      "src": "string_literal [50221,50274]",
      "dest": "string_literal [57314,57368]"
    },
    {
      "src": "uint256: uint256 [6493,6500]",
      "dest": "uint256: uint256 [6020,6027]"
    },
    {
      "src": ".: . [44152,44153]",
      "dest": ".: . [48300,48301]"
    },
    {
      "src": "identifier: ERC20 [42792,42797]",
      "dest": "identifier: ERC20 [46964,46969]"
    },
    {
      "src": "comment: // benefit is lost if 'b' is also tested. [9878,9919]",
      "dest": "comment: // benefit is lost if 'b' is also tested. [9425,9466]"
    },
    {
      "src": "(: ( [45676,45677]",
      "dest": "(: ( [50469,50470]"
    },
    {
      "src": "comment: // File: contracts/truefi/interface/ITrueFiPool.sol [37179,37230]",
      "dest": "comment: // Dependency file: contracts/truefi/common/UpgradeableERC20.sol [21833,21897]"
    },
    {
      "src": "identifier: ReentrancyGuard [5617,5632]",
      "dest": "identifier: ReentrancyGuard [5144,5159]"
    },
    {
      "src": "identifier: require [50459,50466]",
      "dest": "identifier: require [57553,57560]"
    },
    {
      "src": "(: ( [30578,30579]",
      "dest": "(: ( [30577,30578]"
    },
    {
      "src": "return_type_definition [3079,3096]",
      "dest": "return_type_definition [2583,2600]"
    },
    {
      "src": "public: public [40225,40231]",
      "dest": "public: public [44345,44351]"
    },
    {
      "src": "comment: // fee for deposits [40321,40340]",
      "dest": "comment: // fee for deposits [44441,44460]"
    },
    {
      "src": "identifier: currencyToken [43382,43395]",
      "dest": "identifier: currencyToken [47778,47791]"
    },
    {
      "src": "call_argument [45683,45698]",
      "dest": "call_argument [50476,50491]"
    },
    {
      "src": ",: , [41806,41807]",
      "dest": ",: , [45978,45979]"
    },
    {
      "src": "(: ( [36661,36662]",
      "dest": "(: ( [37088,37089]"
    },
    {
      "src": "primitive_type [49578,49585]",
      "dest": "primitive_type [52892,52899]"
    },
    {
      "src": "type_name [47942,47959]",
      "dest": "type_name [55512,55529]"
    },
    {
      "src": "(: ( [26659,26660]",
      "dest": "(: ( [26658,26659]"
    },
    {
      "src": ",: , [12119,12120]",
      "dest": ",: , [11666,11667]"
    },
    {
      "src": "bool: bool [36093,36097]",
      "dest": "bool: bool [36520,36524]"
    },
    {
      "src": "(: ( [18232,18233]",
      "dest": "(: ( [17805,17806]"
    },
    {
      "src": "\": \" [47927,47928]",
      "dest": "\": \" [55497,55498]"
    },
    {
      "src": "): ) [30682,30683]",
      "dest": "): ) [30681,30682]"
    },
    {
      "src": "): ) [34795,34796]",
      "dest": "): ) [34962,34963]"
    },
    {
      "src": "]: ] [29955,29956]",
      "dest": "]: ] [29954,29955]"
    },
    {
      "src": "primitive_type [38698,38705]",
      "dest": "primitive_type [39238,39245]"
    },
    {
      "src": "type_name [41824,41831]",
      "dest": "type_name [45996,46003]"
    },
    {
      "src": "identifier: joiningFee [45423,45433]",
      "dest": "identifier: joiningFee [50216,50226]"
    },
    {
      "src": "primitive_type [29531,29538]",
      "dest": "primitive_type [29530,29537]"
    },
    {
      "src": ",: , [30436,30437]",
      "dest": ",: , [30435,30436]"
    },
    {
      "src": "comment: /**      * @dev Leaves the contract without owner. It will not be possible to call      * `onlyOwner` functions anymore. Can only be called by the current owner.      *      * NOTE: Renouncing ownership will leave the contract without an owner,      * thereby removing any functionality that is only available to the owner.      */ [34861,35198]",
      "dest": "comment: /**      * @dev Leaves the contract without owner. It will not be possible to call      * `onlyOwner` functions anymore. Can only be called by the current owner.      *      * NOTE: Renouncing ownership will leave the contract without an owner,      * thereby removing any functionality that is only available to the owner.      */ [35028,35365]"
    },
    {
      "src": "(: ( [12041,12042]",
      "dest": "(: ( [11588,11589]"
    },
    {
      "src": "primitive_type [40965,40972]",
      "dest": "primitive_type [45137,45144]"
    },
    {
      "src": "): ) [21976,21977]",
      "dest": "): ) [21589,21590]"
    },
    {
      "src": "identifier: b [11400,11401]",
      "dest": "identifier: b [10947,10948]"
    },
    {
      "src": "identifier: token [44583,44588]",
      "dest": "identifier: token [49202,49207]"
    },
    {
      "src": "=: = [42930,42931]",
      "dest": "=: = [47102,47103]"
    },
    {
      "src": "(: ( [45096,45097]",
      "dest": "(: ( [49781,49782]"
    },
    {
      "src": "identifier: a [12118,12119]",
      "dest": "identifier: a [11665,11666]"
    },
    {
      "src": "identifier: value [17836,17841]",
      "dest": "identifier: value [17409,17414]"
    },
    {
      "src": "type_name [17113,17118]",
      "dest": "type_name [16686,16691]"
    },
    {
      "src": "comment: // address returns the current address. Since the code is still not [21673,21740]",
      "dest": "comment: // address returns the current address. Since the code is still not [21286,21353]"
    },
    {
      "src": "type_name [35534,35541]",
      "dest": "type_name [35701,35708]"
    },
    {
      "src": "comment: /**      * @dev Calculate pool value in TUSD      * \"virtual price\" of entire pool - LoanTokens, TUSD, curve y pool tokens      * @return pool value in TUSD      */ [43731,43899]",
      "dest": "comment: /**      * @dev Calculate pool value in TUSD      * \"virtual price\" of entire pool - LoanTokens, TUSD, curve y pool tokens      * @return pool value in TUSD      */ [48555,48723]"
    },
    {
      "src": "{: { [21259,21260]",
      "dest": "{: { [20872,20873]"
    },
    {
      "src": "identifier: target [16525,16531]",
      "dest": "identifier: target [16098,16104]"
    },
    {
      "src": "=: = [46694,46695]",
      "dest": "=: = [51652,51653]"
    },
    {
      "src": "comment: /**      * @dev Remove liquidity from curve and transfer to borrower      * @param expectedAmount expected amount to borrow      */ [48907,49041]",
      "dest": "comment: /**      * @dev Remove liquidity from curve and transfer to borrower      * @param expectedAmount expected amount to borrow      */ [56722,56856]"
    },
    {
      "src": "primitive_type [17629,17635]",
      "dest": "primitive_type [17202,17208]"
    },
    {
      "src": "identifier: _allowances [23720,23731]",
      "dest": "identifier: _allowances [23719,23730]"
    },
    {
      "src": "view: view [43414,43418]",
      "dest": "view: view [47810,47814]"
    },
    {
      "src": "identifier: owner [4700,4705]",
      "dest": "identifier: owner [4207,4212]"
    },
    {
      "src": "(: ( [30680,30681]",
      "dest": "(: ( [30679,30680]"
    },
    {
      "src": "identifier: fee [50357,50360]",
      "dest": "identifier: fee [57451,57454]"
    },
    {
      "src": "member_expression [53063,53099]",
      "dest": "member_expression [60984,61020]"
    },
    {
      "src": "identifier: token [51918,51923]",
      "dest": "identifier: token [59841,59846]"
    },
    {
      "src": ",: , [27367,27368]",
      "dest": ",: , [27366,27367]"
    },
    {
      "src": "expression_statement [28778,28958]",
      "dest": "expression_statement [28777,28957]"
    },
    {
      "src": "expression_statement [46797,46823]",
      "dest": "expression_statement [51755,51781]"
    },
    {
      "src": "comment: // add TUSD to curve [48015,48035]",
      "dest": "comment: // add TUSD to curve [55585,55605]"
    },
    {
      "src": "identifier: _curveGauge [43037,43048]",
      "dest": "identifier: _curveGauge [47209,47220]"
    },
    {
      "src": "parameter [3033,3046]",
      "dest": "parameter [2537,2550]"
    },
    {
      "src": "call_argument [18035,18053]",
      "dest": "call_argument [17608,17626]"
    },
    {
      "src": "visibility [30379,30387]",
      "dest": "visibility [30378,30386]"
    },
    {
      "src": "(: ( [37657,37658]",
      "dest": "(: ( [38179,38180]"
    },
    {
      "src": "identifier: data [17933,17937]",
      "dest": "identifier: data [17506,17510]"
    },
    {
      "src": "true: true [26167,26171]",
      "dest": "true: true [26166,26170]"
    },
    {
      "src": ",: , [15193,15194]",
      "dest": ",: , [14766,14767]"
    },
    {
      "src": "visibility [24450,24456]",
      "dest": "visibility [24449,24455]"
    },
    {
      "src": "primitive_type [10671,10678]",
      "dest": "primitive_type [10218,10225]"
    },
    {
      "src": "): ) [25530,25531]",
      "dest": "): ) [25529,25530]"
    },
    {
      "src": "identifier: currencyAmount [50852,50866]",
      "dest": "identifier: currencyAmount [58777,58791]"
    },
    {
      "src": "call_expression [30562,30586]",
      "dest": "call_expression [30561,30585]"
    },
    {
      "src": "number_literal: 1 [43186,43187]",
      "dest": "number_literal: 1 [47358,47359]"
    },
    {
      "src": "identifier: currentlyAvailableAmount [44630,44654]",
      "dest": "identifier: currentlyAvailableAmount [49249,49273]"
    },
    {
      "src": "(: ( [18803,18804]",
      "dest": "(: ( [18376,18377]"
    },
    {
      "src": "modifier: modifier [21040,21048]",
      "dest": "modifier: modifier [20653,20661]"
    },
    {
      "src": "bool: bool [26090,26094]",
      "dest": "bool: bool [26089,26093]"
    },
    {
      "src": "visibility [35552,35558]",
      "dest": "visibility [35719,35725]"
    },
    {
      "src": ",: , [17828,17829]",
      "dest": ",: , [17401,17402]"
    },
    {
      "src": "\": \" [42830,42831]",
      "dest": "\": \" [47002,47003]"
    },
    {
      "src": "number_literal: 0 [50152,50153]",
      "dest": "number_literal: 0 [49981,49982]"
    },
    {
      "src": "return: return [26690,26696]",
      "dest": "return: return [26689,26695]"
    },
    {
      "src": "): ) [27375,27376]",
      "dest": "): ) [27374,27375]"
    },
    {
      "src": "=: = [18200,18201]",
      "dest": "=: = [17773,17774]"
    },
    {
      "src": "(: ( [10746,10747]",
      "dest": "(: ( [10293,10294]"
    },
    {
      "src": "call_argument [50382,50398]",
      "dest": "call_argument [57476,57492]"
    },
    {
      "src": "): ) [44065,44066]",
      "dest": "): ) [48830,48831]"
    },
    {
      "src": "is: is [23502,23504]",
      "dest": "is: is [23501,23503]"
    },
    {
      "src": "uint256: uint256 [45178,45185]",
      "dest": "uint256: uint256 [54147,54154]"
    },
    {
      "src": "call_expression [35588,35661]",
      "dest": "call_expression [35755,35828]"
    },
    {
      "src": "parameter [38698,38715]",
      "dest": "parameter [39238,39255]"
    },
    {
      "src": "memory: memory [16539,16545]",
      "dest": "memory: memory [16112,16118]"
    },
    {
      "src": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [15339,16086]",
      "dest": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [14912,15659]"
    },
    {
      "src": "bool: bool [28035,28039]",
      "dest": "bool: bool [28034,28038]"
    },
    {
      "src": "identifier: _balances [29959,29968]",
      "dest": "identifier: _balances [29958,29967]"
    },
    {
      "src": "primitive_type [38986,38993]",
      "dest": "primitive_type [39544,39551]"
    },
    {
      "src": "identifier: ICurveGauge [36225,36236]",
      "dest": "identifier: ICurveGauge [36652,36663]"
    },
    {
      "src": "view: view [25548,25552]",
      "dest": "view: view [25547,25551]"
    },
    {
      "src": "identifier: Approval [4675,4683]",
      "dest": "identifier: Approval [4182,4190]"
    },
    {
      "src": "(: ( [45772,45773]",
      "dest": "(: ( [50565,50566]"
    },
    {
      "src": "call_argument [27418,27507]",
      "dest": "call_argument [27417,27506]"
    },
    {
      "src": ",: , [45906,45907]",
      "dest": ",: , [50751,50752]"
    },
    {
      "src": "\": \" [17779,17780]",
      "dest": "\": \" [17352,17353]"
    },
    {
      "src": "call_argument [50140,50150]",
      "dest": "call_argument [58463,58473]"
    },
    {
      "src": "parameter [14980,14994]",
      "dest": "parameter [14553,14567]"
    },
    {
      "src": "call_argument [15262,15322]",
      "dest": "call_argument [14835,14895]"
    },
    {
      "src": "view: view [36185,36189]",
      "dest": "view: view [36612,36616]"
    },
    {
      "src": "identifier: require [30407,30414]",
      "dest": "identifier: require [30406,30413]"
    },
    {
      "src": "call_argument [30685,30692]",
      "dest": "call_argument [30684,30691]"
    },
    {
      "src": "): ) [16578,16579]",
      "dest": "): ) [16151,16152]"
    },
    {
      "src": "public: public [40259,40265]",
      "dest": "public: public [44379,44385]"
    },
    {
      "src": "type_name [23610,23637]",
      "dest": "type_name [23609,23636]"
    },
    {
      "src": "call_argument [32264,32270]",
      "dest": "call_argument [32263,32269]"
    },
    {
      "src": "): ) [12778,12779]",
      "dest": "): ) [12325,12326]"
    },
    {
      "src": "identifier: yAmount [53461,53468]",
      "dest": "identifier: yAmount [61382,61389]"
    },
    {
      "src": "pragma: pragma [39158,39164]",
      "dest": "pragma: pragma [42501,42507]"
    },
    {
      "src": "call_argument [28850,28946]",
      "dest": "call_argument [28849,28945]"
    },
    {
      "src": "identifier: target [18202,18208]",
      "dest": "identifier: target [17775,17781]"
    },
    {
      "src": "): ) [43258,43259]",
      "dest": "): ) [47430,47431]"
    },
    {
      "src": "type_name [3800,3807]",
      "dest": "type_name [3307,3314]"
    },
    {
      "src": "identifier: totalSupply [45616,45627]",
      "dest": "identifier: totalSupply [50409,50420]"
    },
    {
      "src": "identifier: sellCrv [51775,51782]",
      "dest": "identifier: sellCrv [59698,59705]"
    },
    {
      "src": "binary_expression [13983,13991]",
      "dest": "binary_expression [13553,13561]"
    },
    {
      "src": "type_name [4249,4253]",
      "dest": "type_name [3756,3760]"
    },
    {
      "src": ".: . [45139,45140]",
      "dest": ".: . [49881,49882]"
    },
    {
      "src": "member_expression [50891,50901]",
      "dest": "member_expression [58816,58826]"
    },
    {
      "src": "emit_statement [45944,45990]",
      "dest": "emit_statement [50789,50835]"
    },
    {
      "src": "): ) [45433,45434]",
      "dest": "): ) [50226,50227]"
    },
    {
      "src": "(: ( [47882,47883]",
      "dest": "(: ( [55451,55452]"
    },
    {
      "src": "): ) [45146,45147]",
      "dest": "): ) [49888,49889]"
    },
    {
      "src": "return_type_definition [26081,26095]",
      "dest": "return_type_definition [26080,26094]"
    },
    {
      "src": "): ) [44515,44516]",
      "dest": "): ) [49134,49135]"
    },
    {
      "src": "call_argument [53461,53468]",
      "dest": "call_argument [61382,61389]"
    },
    {
      "src": "call_expression [31117,31184]",
      "dest": "call_expression [31116,31183]"
    },
    {
      "src": "(: ( [45155,45156]",
      "dest": "(: ( [49897,49898]"
    },
    {
      "src": "identifier: returndata [18398,18408]",
      "dest": "identifier: returndata [17971,17981]"
    },
    {
      "src": "visibility [22193,22200]",
      "dest": "visibility [21806,21813]"
    },
    {
      "src": "primitive_type [31951,31958]",
      "dest": "primitive_type [31950,31957]"
    },
    {
      "src": "call_argument [15231,15233]",
      "dest": "call_argument [14804,14806]"
    },
    {
      "src": "(: ( [49448,49449]",
      "dest": "(: ( [57139,57140]"
    },
    {
      "src": "uint256: uint256 [40984,40991]",
      "dest": "uint256: uint256 [45156,45163]"
    },
    {
      "src": "type_cast_expression [31136,31146]",
      "dest": "type_cast_expression [31135,31145]"
    },
    {
      "src": "comment: // pointer aliasing, and it cannot be disabled. [5960,6007]",
      "dest": "comment: // pointer aliasing, and it cannot be disabled. [5487,5534]"
    },
    {
      "src": "type_name [21949,21956]",
      "dest": "type_name [21562,21569]"
    },
    {
      "src": "(: ( [35294,35295]",
      "dest": "(: ( [35461,35462]"
    },
    {
      "src": "returns: returns [2406,2413]",
      "dest": "returns: returns [1910,1917]"
    },
    {
      "src": "identifier: _name [24504,24509]",
      "dest": "identifier: _name [24503,24508]"
    },
    {
      "src": "address: address [29627,29634]",
      "dest": "address: address [29626,29633]"
    },
    {
      "src": "identifier: recipient [29946,29955]",
      "dest": "identifier: recipient [29945,29954]"
    },
    {
      "src": "\": \" [18055,18056]",
      "dest": "\": \" [17628,17629]"
    },
    {
      "src": "type_name [29531,29538]",
      "dest": "type_name [29530,29537]"
    },
    {
      "src": "type_name [11431,11438]",
      "dest": "type_name [10978,10985]"
    },
    {
      "src": "binary_expression [12797,12802]",
      "dest": "binary_expression [12344,12349]"
    },
    {
      "src": "parameter [36263,36280]",
      "dest": "parameter [36690,36707]"
    },
    {
      "src": "bool: bool [2724,2728]",
      "dest": "bool: bool [2228,2232]"
    },
    {
      "src": "primitive_type [15024,15031]",
      "dest": "primitive_type [14597,14604]"
    },
    {
      "src": "uint256: uint256 [47942,47949]",
      "dest": "uint256: uint256 [55512,55519]"
    },
    {
      "src": "type_name [43603,43610]",
      "dest": "type_name [47999,48006]"
    },
    {
      "src": "function_definition [38884,39109]",
      "dest": "function_definition [39442,39667]"
    },
    {
      "src": "uint256: uint256 [17132,17139]",
      "dest": "uint256: uint256 [16705,16712]"
    },
    {
      "src": "(: ( [3087,3088]",
      "dest": "(: ( [2591,2592]"
    },
    {
      "src": "primitive_type [26022,26029]",
      "dest": "primitive_type [26021,26028]"
    },
    {
      "src": "identifier: amount [31391,31397]",
      "dest": "identifier: amount [31390,31396]"
    },
    {
      "src": "\": \" [17282,17283]",
      "dest": "\": \" [16855,16856]"
    },
    {
      "src": ".: . [50090,50091]",
      "dest": ".: . [58413,58414]"
    },
    {
      "src": "identifier: _curvePool [44572,44582]",
      "dest": "identifier: _curvePool [49191,49201]"
    },
    {
      "src": "primitive_type [29711,29718]",
      "dest": "primitive_type [29710,29717]"
    },
    {
      "src": "identifier: _approve [28778,28786]",
      "dest": "identifier: _approve [28777,28785]"
    },
    {
      "src": ",: , [53027,53028]",
      "dest": ",: , [60948,60949]"
    },
    {
      "src": "): ) [48504,48505]",
      "dest": "): ) [56251,56252]"
    },
    {
      "src": "(: ( [52413,52414]",
      "dest": "(: ( [60334,60335]"
    },
    {
      "src": "parameter [37098,37104]",
      "dest": "parameter [37525,37531]"
    },
    {
      "src": "member_expression [45773,45783]",
      "dest": "member_expression [50566,50576]"
    },
    {
      "src": "identifier: _token_amount [36937,36950]",
      "dest": "identifier: _token_amount [37364,37377]"
    },
    {
      "src": ",: , [9733,9734]",
      "dest": ",: , [9280,9281]"
    },
    {
      "src": "identifier: require [32027,32034]",
      "dest": "identifier: require [32026,32033]"
    },
    {
      "src": "identifier: ensureEnoughTokensAreAvailable [49973,50003]",
      "dest": "identifier: ensureEnoughTokensAreAvailable [58095,58125]"
    },
    {
      "src": "state_variable_declaration [40106,40135]",
      "dest": "state_variable_declaration [44226,44255]"
    },
    {
      "src": "identifier: isConstructor [21098,21111]",
      "dest": "identifier: isConstructor [20711,20724]"
    },
    {
      "src": "comment: /**      * @dev Emitted when fee is changed      * @param newFee New fee      */ [40593,40676]",
      "dest": "comment: /**      * @dev Emitted when fee is changed      * @param newFee New fee      */ [44765,44848]"
    },
    {
      "src": "identifier: msg [47344,47347]",
      "dest": "identifier: msg [52302,52305]"
    },
    {
      "src": "uint256: uint256 [45508,45515]",
      "dest": "uint256: uint256 [50301,50308]"
    },
    {
      "src": "visibility [46258,46266]",
      "dest": "visibility [51103,51111]"
    },
    {
      "src": "type_name [23664,23711]",
      "dest": "type_name [23663,23710]"
    },
    {
      "src": "expression_statement [42883,42908]",
      "dest": "expression_statement [47055,47080]"
    },
    {
      "src": "type_name [27240,27247]",
      "dest": "type_name [27239,27246]"
    },
    {
      "src": "primitive_type [35924,35931]",
      "dest": "primitive_type [36186,36193]"
    },
    {
      "src": "identifier: balanceOf [43690,43699]",
      "dest": "identifier: balanceOf [48086,48095]"
    },
    {
      "src": "primitive_type [17904,17911]",
      "dest": "primitive_type [17477,17484]"
    },
    {
      "src": "(: ( [17674,17675]",
      "dest": "(: ( [17247,17248]"
    },
    {
      "src": "event_paramater [4489,4502]",
      "dest": "event_paramater [3996,4009]"
    },
    {
      "src": "): ) [44749,44750]",
      "dest": "): ) [49368,49369]"
    },
    {
      "src": "\": \" [15321,15322]",
      "dest": "\": \" [14894,14895]"
    },
    {
      "src": "): ) [36571,36572]",
      "dest": "): ) [36998,36999]"
    },
    {
      "src": "is: is [34044,34046]",
      "dest": "is: is [34211,34213]"
    },
    {
      "src": "type_name [2690,2697]",
      "dest": "type_name [2194,2201]"
    },
    {
      "src": "identifier: collectFees [52217,52228]",
      "dest": "identifier: collectFees [60138,60149]"
    },
    {
      "src": "return_type_definition [37033,37049]",
      "dest": "return_type_definition [37460,37476]"
    },
    {
      "src": "visibility [28737,28743]",
      "dest": "visibility [28736,28742]"
    },
    {
      "src": "{: { [35258,35259]",
      "dest": "{: { [35425,35426]"
    },
    {
      "src": "string [32137,32173]",
      "dest": "string [32136,32172]"
    },
    {
      "src": "(: ( [49821,49822]",
      "dest": "(: ( [57973,57974]"
    },
    {
      "src": "member_expression [45482,45492]",
      "dest": "member_expression [50275,50285]"
    },
    {
      "src": "identifier: _msgSender [19487,19497]",
      "dest": "identifier: _msgSender [19080,19090]"
    },
    {
      "src": "string_literal [49199,49234]",
      "dest": "string_literal [57025,57061]"
    },
    {
      "src": "inline_array_expression [53022,53045]",
      "dest": "inline_array_expression [60943,60966]"
    },
    {
      "src": "internal: internal [30379,30387]",
      "dest": "internal: internal [30378,30386]"
    },
    {
      "src": "function_definition [32611,32701]",
      "dest": "function_definition [32610,32700]"
    },
    {
      "src": "modifier_definition [34734,34853]",
      "dest": "modifier_definition [34901,35020]"
    },
    {
      "src": "yul_path [13956,13963]",
      "dest": "yul_path [13526,13533]"
    },
    {
      "src": "unary_expression [43185,43187]",
      "dest": "unary_expression [47357,47359]"
    },
    {
      "src": "state_mutability [8865,8869]",
      "dest": "state_mutability [8412,8416]"
    },
    {
      "src": "\": \" [17240,17241]",
      "dest": "\": \" [16813,16814]"
    },
    {
      "src": "parameter [10682,10691]",
      "dest": "parameter [10229,10238]"
    },
    {
      "src": "): ) [18086,18087]",
      "dest": "): ) [17659,17660]"
    },
    {
      "src": "): ) [49741,49742]",
      "dest": "): ) [57915,57916]"
    },
    {
      "src": "primitive_type [9346,9353]",
      "dest": "primitive_type [8893,8900]"
    },
    {
      "src": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [7517,8092]",
      "dest": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [7064,7639]"
    },
    {
      "src": "): ) [42041,42042]",
      "dest": "): ) [46213,46214]"
    },
    {
      "src": "=: = [29852,29853]",
      "dest": "=: = [29851,29852]"
    },
    {
      "src": "primitive_type [36827,36834]",
      "dest": "primitive_type [37254,37261]"
    },
    {
      "src": "(: ( [44723,44724]",
      "dest": "(: ( [49342,49343]"
    },
    {
      "src": "modifier_invocation [34330,34341]",
      "dest": "modifier_invocation [34497,34508]"
    },
    {
      "src": "(: ( [43055,43056]",
      "dest": "(: ( [47227,47228]"
    },
    {
      "src": "(: ( [50466,50467]",
      "dest": "(: ( [57560,57561]"
    },
    {
      "src": "returns: returns [43594,43601]",
      "dest": "returns: returns [47990,47997]"
    },
    {
      "src": "identifier: self [22051,22055]",
      "dest": "identifier: self [21664,21668]"
    },
    {
      "src": "address: address [3033,3040]",
      "dest": "address: address [2537,2544]"
    },
    {
      "src": "variable_declaration [46386,46406]",
      "dest": "variable_declaration [51344,51364]"
    },
    {
      "src": "assignment_expression [52321,52338]",
      "dest": "assignment_expression [60242,60259]"
    },
    {
      "src": "call_argument [30681,30682]",
      "dest": "call_argument [30680,30681]"
    },
    {
      "src": "identifier: _curveGauge [48147,48158]",
      "dest": "identifier: _curveGauge [55929,55940]"
    },
    {
      "src": "state_mutability [25548,25552]",
      "dest": "state_mutability [25547,25551]"
    },
    {
      "src": "function_body [31106,31459]",
      "dest": "function_body [31105,31458]"
    },
    {
      "src": "return_type_definition [8870,8887]",
      "dest": "return_type_definition [8417,8434]"
    },
    {
      "src": "call_argument [50825,50835]",
      "dest": "call_argument [58750,58760]"
    },
    {
      "src": "): ) [53647,53648]",
      "dest": "): ) [61568,61569]"
    },
    {
      "src": "(: ( [38917,38918]",
      "dest": "(: ( [39475,39476]"
    },
    {
      "src": "type_name [50349,50356]",
      "dest": "type_name [57443,57450]"
    },
    {
      "src": "uint256: uint256 [3088,3095]",
      "dest": "uint256: uint256 [2592,2599]"
    },
    {
      "src": "type_name [41808,41815]",
      "dest": "type_name [45980,45987]"
    },
    {
      "src": "array_access [30597,30615]",
      "dest": "array_access [30596,30614]"
    },
    {
      "src": "(: ( [28888,28889]",
      "dest": "(: ( [28887,28888]"
    },
    {
      "src": "primitive_type [4684,4691]",
      "dest": "primitive_type [4191,4198]"
    },
    {
      "src": "function_body [25571,25609]",
      "dest": "function_body [25570,25608]"
    },
    {
      "src": "(: ( [26260,26261]",
      "dest": "(: ( [26259,26260]"
    },
    {
      "src": "primitive_type [4447,4454]",
      "dest": "primitive_type [3954,3961]"
    },
    {
      "src": "(: ( [9272,9273]",
      "dest": "(: ( [8819,8820]"
    },
    {
      "src": "parameter [36596,36602]",
      "dest": "parameter [37023,37029]"
    },
    {
      "src": "call_argument [52041,52054]",
      "dest": "call_argument [59964,59977]"
    },
    {
      "src": ",: , [42255,42256]",
      "dest": ",: , [46427,46428]"
    },
    {
      "src": "uint256: uint256 [36448,36455]",
      "dest": "uint256: uint256 [36875,36882]"
    },
    {
      "src": "true [26697,26701]",
      "dest": "true [26696,26700]"
    },
    {
      "src": "(: ( [36173,36174]",
      "dest": "(: ( [36600,36601]"
    },
    {
      "src": "string [35620,35660]",
      "dest": "string [35787,35827]"
    },
    {
      "src": "state_mutability [53626,53630]",
      "dest": "state_mutability [61547,61551]"
    },
    {
      "src": "identifier: deadline [39049,39057]",
      "dest": "identifier: deadline [39607,39615]"
    },
    {
      "src": "{: { [8888,8889]",
      "dest": "{: { [8435,8436]"
    },
    {
      "src": "function: function [31041,31049]",
      "dest": "function: function [31040,31048]"
    },
    {
      "src": "visibility [34321,34329]",
      "dest": "visibility [34488,34496]"
    },
    {
      "src": "identifier: newOwner [35596,35604]",
      "dest": "identifier: newOwner [35763,35771]"
    },
    {
      "src": "assignment_expression [35325,35344]",
      "dest": "assignment_expression [35492,35511]"
    },
    {
      "src": "event_paramater [34166,34190]",
      "dest": "event_paramater [34333,34357]"
    },
    {
      "src": "type_name [36827,36834]",
      "dest": "type_name [37254,37261]"
    },
    {
      "src": "returns: returns [9337,9344]",
      "dest": "returns: returns [8884,8891]"
    },
    {
      "src": "event_paramater [41165,41187]",
      "dest": "event_paramater [45337,45359]"
    },
    {
      "src": "uint256: uint256 [40706,40713]",
      "dest": "uint256: uint256 [44878,44885]"
    },
    {
      "src": "]: ] [31276,31277]",
      "dest": "]: ] [31275,31276]"
    },
    {
      "src": "return_statement [22077,22092]",
      "dest": "return_statement [21690,21705]"
    },
    {
      "src": "member_expression [44015,44050]",
      "dest": "member_expression [48503,48524]"
    },
    {
      "src": "parameter [46242,46256]",
      "dest": "parameter [51087,51101]"
    },
    {
      "src": "identifier: recipient [26131,26140]",
      "dest": "identifier: recipient [26130,26139]"
    },
    {
      "src": "identifier: expectedAmount [50184,50198]",
      "dest": "identifier: expectedAmount [57277,57291]"
    },
    {
      "src": ",: , [41187,41188]",
      "dest": ",: , [45359,45360]"
    },
    {
      "src": "call_argument [49624,49641]",
      "dest": "call_argument [57235,57252]"
    },
    {
      "src": "(: ( [23617,23618]",
      "dest": "(: ( [23616,23617]"
    },
    {
      "src": "primitive_type [30506,30513]",
      "dest": "primitive_type [30505,30512]"
    },
    {
      "src": "primitive_type [34451,34458]",
      "dest": "primitive_type [34618,34625]"
    },
    {
      "src": "call_argument [17740,17780]",
      "dest": "call_argument [17313,17353]"
    },
    {
      "src": ".: . [29979,29980]",
      "dest": ".: . [29978,29979]"
    },
    {
      "src": "identifier: c [8443,8444]",
      "dest": "identifier: c [7990,7991]"
    },
    {
      "src": "uint256: uint256 [49063,49070]",
      "dest": "uint256: uint256 [56878,56885]"
    },
    {
      "src": "return: return [17792,17798]",
      "dest": "return: return [17365,17371]"
    },
    {
      "src": "binary_expression [29617,29637]",
      "dest": "binary_expression [29616,29636]"
    },
    {
      "src": "identifier: account [31423,31430]",
      "dest": "identifier: account [31422,31429]"
    },
    {
      "src": "(: ( [48183,48184]",
      "dest": "(: ( [55822,55823]"
    },
    {
      "src": "identifier: mul [44138,44141]",
      "dest": "identifier: mul [48286,48289]"
    },
    {
      "src": "identifier: curve [44153,44158]",
      "dest": "identifier: curve [48301,48306]"
    },
    {
      "src": ",: , [11319,11320]",
      "dest": ",: , [10866,10867]"
    },
    {
      "src": "identifier: isTopLevelCall [21368,21382]",
      "dest": "identifier: isTopLevelCall [20981,20995]"
    },
    {
      "src": "identifier: TUSD_INDEX [53470,53480]",
      "dest": "identifier: TUSD_INDEX [61391,61401]"
    },
    {
      "src": "identifier: _lender [46878,46885]",
      "dest": "identifier: _lender [51836,51843]"
    },
    {
      "src": "yul_identifier [18709,18719]",
      "dest": "yul_identifier [18282,18292]"
    },
    {
      "src": "address: address [50837,50844]",
      "dest": "address: address [58762,58769]"
    },
    {
      "src": "(: ( [52228,52229]",
      "dest": "(: ( [60149,60150]"
    },
    {
      "src": "function_definition [8821,8957]",
      "dest": "function_definition [8368,8504]"
    },
    {
      "src": "parameter [38038,38052]",
      "dest": "parameter [38560,38574]"
    },
    {
      "src": "type_name [26261,26268]",
      "dest": "type_name [26260,26267]"
    },
    {
      "src": "public: public [52788,52794]",
      "dest": "public: public [60709,60715]"
    },
    {
      "src": "type_name [40521,40526]",
      "dest": "type_name [44693,44698]"
    },
    {
      "src": "event_definition [41512,41542]",
      "dest": "event_definition [45684,45714]"
    },
    {
      "src": "(: ( [15252,15253]",
      "dest": "(: ( [14825,14826]"
    },
    {
      "src": "uint256: uint256 [53640,53647]",
      "dest": "uint256: uint256 [61561,61568]"
    },
    {
      "src": "identifier: IERC20 [37042,37048]",
      "dest": "identifier: IERC20 [37469,37475]"
    },
    {
      "src": "override_specifier [49122,49130]",
      "dest": "override_specifier [56937,56945]"
    },
    {
      "src": "\": \" [46341,46342]",
      "dest": "\": \" [51298,51299]"
    },
    {
      "src": "identifier: minMintAmount [48079,48092]",
      "dest": "identifier: minMintAmount [55719,55732]"
    },
    {
      "src": "): ) [35312,35313]",
      "dest": "): ) [35479,35480]"
    },
    {
      "src": "event_paramater [41360,41382]",
      "dest": "event_paramater [45532,45554]"
    },
    {
      "src": "identifier: recipient [29698,29707]",
      "dest": "identifier: recipient [29697,29706]"
    },
    {
      "src": "returns: returns [25553,25560]",
      "dest": "returns: returns [25552,25559]"
    },
    {
      "src": "call_argument [44142,44180]",
      "dest": "call_argument [48290,48328]"
    },
    {
      "src": "uint256: uint256 [38726,38733]",
      "dest": "uint256: uint256 [39266,39273]"
    },
    {
      "src": "return_statement [12107,12152]",
      "dest": "return_statement [11654,11699]"
    },
    {
      "src": "modifier_invocation [45108,45117]",
      "dest": "modifier_invocation [49793,49802]"
    },
    {
      "src": "): ) [28072,28073]",
      "dest": "): ) [28071,28072]"
    },
    {
      "src": "identifier: add [28119,28122]",
      "dest": "identifier: add [28118,28121]"
    },
    {
      "src": "call_argument [46909,46915]",
      "dest": "call_argument [51867,51873]"
    },
    {
      "src": "parameter [19643,19655]",
      "dest": "parameter [19236,19248]"
    },
    {
      "src": "type_name [17132,17139]",
      "dest": "type_name [16705,16712]"
    },
    {
      "src": ",: , [35618,35619]",
      "dest": ",: , [35785,35786]"
    },
    {
      "src": "call_expression [53667,53706]",
      "dest": "call_expression [61588,61627]"
    },
    {
      "src": ".: . [47058,47059]",
      "dest": ".: . [52016,52017]"
    },
    {
      "src": ".: . [46702,46703]",
      "dest": ".: . [51660,51661]"
    },
    {
      "src": "return_statement [17792,17857]",
      "dest": "return_statement [17365,17430]"
    },
    {
      "src": "external: external [36962,36970]",
      "dest": "external: external [37389,37397]"
    },
    {
      "src": "returns: returns [34591,34598]",
      "dest": "returns: returns [34758,34765]"
    },
    {
      "src": ".: . [50894,50895]",
      "dest": ".: . [58819,58820]"
    },
    {
      "src": "call_expression [30618,30648]",
      "dest": "call_expression [30617,30647]"
    },
    {
      "src": "call_expression [47036,47106]",
      "dest": "call_expression [51994,52064]"
    },
    {
      "src": "identifier: subtractedValue [28889,28904]",
      "dest": "identifier: subtractedValue [28888,28903]"
    },
    {
      "src": "identifier: _ [7253,7254]",
      "dest": "identifier: _ [6780,6781]"
    },
    {
      "src": "internal: internal [10693,10701]",
      "dest": "internal: internal [10240,10248]"
    },
    {
      "src": "identifier: minter [43049,43055]",
      "dest": "identifier: minter [47221,47227]"
    },
    {
      "src": "call_argument [43185,43187]",
      "dest": "call_argument [47357,47359]"
    },
    {
      "src": "return_statement [24701,24716]",
      "dest": "return_statement [24700,24715]"
    },
    {
      "src": "=: = [34403,34404]",
      "dest": "=: = [34570,34571]"
    },
    {
      "src": "type_name [4447,4454]",
      "dest": "type_name [3954,3961]"
    },
    {
      "src": "call_argument [29803,29812]",
      "dest": "call_argument [29802,29811]"
    },
    {
      "src": ",: , [9380,9381]",
      "dest": ",: , [8927,8928]"
    },
    {
      "src": "(: ( [43255,43256]",
      "dest": "(: ( [47427,47428]"
    },
    {
      "src": "return_type_definition [16589,16611]",
      "dest": "return_type_definition [16162,16184]"
    },
    {
      "src": "identifier: amount [30579,30585]",
      "dest": "identifier: amount [30578,30584]"
    },
    {
      "src": "identifier: target [17219,17225]",
      "dest": "identifier: target [16792,16798]"
    },
    {
      "src": "returns: returns [24462,24469]",
      "dest": "returns: returns [24461,24468]"
    },
    {
      "src": "]: ] [25782,25783]",
      "dest": "]: ] [25781,25782]"
    },
    {
      "src": "(: ( [43216,43217]",
      "dest": "(: ( [47388,47389]"
    },
    {
      "src": "(: ( [42003,42004]",
      "dest": "(: ( [46175,46176]"
    },
    {
      "src": "primitive_type [17708,17715]",
      "dest": "primitive_type [17281,17288]"
    },
    {
      "src": "identifier: beneficiary [42244,42255]",
      "dest": "identifier: beneficiary [46416,46427]"
    },
    {
      "src": "}: } [8537,8538]",
      "dest": "}: } [8084,8085]"
    },
    {
      "src": "array_access [32187,32214]",
      "dest": "array_access [32186,32213]"
    },
    {
      "src": "identifier: yAmounts [53100,53108]",
      "dest": "identifier: yAmounts [61021,61029]"
    },
    {
      "src": "binary_expression [52056,52081]",
      "dest": "binary_expression [59979,60004]"
    },
    {
      "src": "(: ( [18660,18661]",
      "dest": "(: ( [18233,18234]"
    },
    {
      "src": "interface: interface [38554,38563]",
      "dest": "interface: interface [39094,39103]"
    },
    {
      "src": "): ) [43712,43713]",
      "dest": "): ) [48108,48109]"
    },
    {
      "src": "uint256: uint256 [26041,26048]",
      "dest": "uint256: uint256 [26040,26047]"
    },
    {
      "src": "identifier: initializing [20929,20941]",
      "dest": "identifier: initializing [20542,20554]"
    },
    {
      "src": "{: { [11381,11382]",
      "dest": "{: { [10928,10929]"
    },
    {
      "src": "identifier: yAmount [41533,41540]",
      "dest": "identifier: yAmount [45705,45712]"
    },
    {
      "src": "call_argument [50152,50153]",
      "dest": "call_argument [49981,49982]"
    },
    {
      "src": "): ) [36537,36538]",
      "dest": "): ) [36964,36965]"
    },
    {
      "src": "binary_expression [49163,49197]",
      "dest": "binary_expression [56989,57023]"
    },
    {
      "src": "identifier: _curvePool [53427,53437]",
      "dest": "identifier: _curvePool [61348,61358]"
    },
    {
      "src": "call_argument [10750,10751]",
      "dest": "call_argument [10297,10298]"
    },
    {
      "src": "type_cast_expression [17708,17721]",
      "dest": "type_cast_expression [17281,17294]"
    },
    {
      "src": "returns: returns [13628,13635]",
      "dest": "returns: returns [13198,13205]"
    },
    {
      "src": "=: = [7230,7231]",
      "dest": "=: = [6757,6758]"
    },
    {
      "src": "function_definition [51766,52090]",
      "dest": "function_definition [59689,60013]"
    },
    {
      "src": "comment: // if curve tokens remaining, transfer [47128,47166]",
      "dest": "comment: // if curve tokens remaining, transfer [52086,52124]"
    },
    {
      "src": "]: ] [28883,28884]",
      "dest": "]: ] [28882,28883]"
    },
    {
      "src": "assignment_expression [30597,30648]",
      "dest": "assignment_expression [30596,30647]"
    },
    {
      "src": "type_name [38038,38045]",
      "dest": "type_name [38560,38567]"
    },
    {
      "src": ",: , [27257,27258]",
      "dest": ",: , [27256,27257]"
    },
    {
      "src": "payable: payable [19539,19546]",
      "dest": "payable: payable [19132,19139]"
    },
    {
      "src": "function_definition [8357,8538]",
      "dest": "function_definition [7904,8085]"
    },
    {
      "src": "identifier: totalSupply [45665,45676]",
      "dest": "identifier: totalSupply [50458,50469]"
    },
    {
      "src": "function: function [25361,25369]",
      "dest": "function: function [25360,25368]"
    },
    {
      "src": "identifier: Address [23582,23589]",
      "dest": "identifier: Address [23581,23588]"
    },
    {
      "src": ",: , [17111,17112]",
      "dest": ",: , [16684,16685]"
    },
    {
      "src": "identifier: newOwner [35706,35714]",
      "dest": "identifier: newOwner [35873,35881]"
    },
    {
      "src": "visibility [12064,12072]",
      "dest": "visibility [11611,11619]"
    },
    {
      "src": "public: public [43926,43932]",
      "dest": "public: public [48222,48228]"
    },
    {
      "src": "member_expression [19809,19817]",
      "dest": "member_expression [19402,19410]"
    },
    {
      "src": "identifier: account [13956,13963]",
      "dest": "identifier: account [13526,13533]"
    },
    {
      "src": "member_expression [50467,50490]",
      "dest": "member_expression [57561,57584]"
    },
    {
      "src": "state_variable_declaration [40280,40313]",
      "dest": "state_variable_declaration [44400,44433]"
    },
    {
      "src": "return_type_definition [25553,25570]",
      "dest": "return_type_definition [25552,25569]"
    },
    {
      "src": "(: ( [9768,9769]",
      "dest": "(: ( [9315,9316]"
    },
    {
      "src": "call_expression [42792,42839]",
      "dest": "call_expression [46964,47011]"
    },
    {
      "src": "type_name [26557,26564]",
      "dest": "type_name [26556,26563]"
    },
    {
      "src": "||: || [21095,21097]",
      "dest": "||: || [20708,20710]"
    },
    {
      "src": "{: { [32661,32662]",
      "dest": "{: { [32660,32661]"
    },
    {
      "src": "identifier: expectedAmount [50558,50572]",
      "dest": "identifier: expectedAmount [57652,57666]"
    },
    {
      "src": "call_argument [7089,7108]",
      "dest": "call_argument [6616,6635]"
    },
    {
      "src": "string [17240,17283]",
      "dest": "string [16813,16856]"
    },
    {
      "src": "address: address [27974,27981]",
      "dest": "address: address [27973,27980]"
    },
    {
      "src": "unary_expression [21117,21129]",
      "dest": "unary_expression [20730,20742]"
    },
    {
      "src": "identifier: _NOT_ENTERED [7411,7423]",
      "dest": "identifier: _NOT_ENTERED [6938,6950]"
    },
    {
      "src": "identifier: distribute [46886,46896]",
      "dest": "identifier: distribute [51844,51854]"
    },
    {
      "src": "}: } [13965,13966]",
      "dest": "}: } [13535,13536]"
    },
    {
      "src": "{: { [52269,52270]",
      "dest": "{: { [60190,60191]"
    },
    {
      "src": "identifier: errorMessage [17643,17655]",
      "dest": "identifier: errorMessage [17216,17228]"
    },
    {
      "src": "assignment_expression [45809,45847]",
      "dest": "assignment_expression [50602,50640]"
    },
    {
      "src": "/: / [10107,10108]",
      "dest": "/: / [9654,9655]"
    },
    {
      "src": "parameter [37819,37833]",
      "dest": "parameter [38341,38355]"
    },
    {
      "src": "visibility [40225,40231]",
      "dest": "visibility [44345,44351]"
    },
    {
      "src": "call_argument [50852,50866]",
      "dest": "call_argument [58777,58791]"
    },
    {
      "src": "identifier: this [48204,48208]",
      "dest": "identifier: this [55843,55847]"
    },
    {
      "src": "return_statement [43623,43716]",
      "dest": "return_statement [48019,48112]"
    },
    {
      "src": "[: [ [47949,47950]",
      "dest": "[: [ [55519,55520]"
    },
    {
      "src": "call_expression [49295,49371]",
      "dest": "call_expression [47558,47644]"
    },
    {
      "src": ",: , [49823,49824]",
      "dest": ",: , [57975,57976]"
    },
    {
      "src": "): ) [49641,49642]",
      "dest": "): ) [57252,57253]"
    },
    {
      "src": "identifier: ICurveMinter [40246,40258]",
      "dest": "identifier: ICurveMinter [44366,44378]"
    },
    {
      "src": "state_mutability [21564,21568]",
      "dest": "state_mutability [21177,21181]"
    },
    {
      "src": "=: = [29957,29958]",
      "dest": "=: = [29956,29957]"
    },
    {
      "src": "call_argument [16661,16665]",
      "dest": "call_argument [16234,16238]"
    },
    {
      "src": "identifier: amountToWithdraw [49705,49721]",
      "dest": "identifier: amountToWithdraw [57879,57895]"
    },
    {
      "src": "parameter [47788,47809]",
      "dest": "parameter [55357,55378]"
    },
    {
      "src": "function_body [12739,12810]",
      "dest": "function_body [12286,12357]"
    },
    {
      "src": "): ) [42869,42870]",
      "dest": "): ) [47041,47042]"
    },
    {
      "src": "expression_statement [12750,12780]",
      "dest": "expression_statement [12297,12327]"
    },
    {
      "src": "state_mutability [36291,36295]",
      "dest": "state_mutability [36718,36722]"
    },
    {
      "src": "call_argument [31440,31441]",
      "dest": "call_argument [31439,31440]"
    },
    {
      "src": "member_expression [47316,47332]",
      "dest": "member_expression [52274,52290]"
    },
    {
      "src": "member_expression [44572,44600]",
      "dest": "member_expression [49191,49219]"
    },
    {
      "src": "function_body [25747,25791]",
      "dest": "function_body [25746,25790]"
    },
    {
      "src": "public: public [25532,25538]",
      "dest": "public: public [25531,25537]"
    },
    {
      "src": "(: ( [44064,44065]",
      "dest": "(: ( [48829,48830]"
    },
    {
      "src": "(: ( [25378,25379]",
      "dest": "(: ( [25377,25378]"
    },
    {
      "src": "function_definition [9260,9452]",
      "dest": "function_definition [8807,8999]"
    },
    {
      "src": "): ) [49721,49722]",
      "dest": "): ) [57895,57896]"
    },
    {
      "src": ".: . [29871,29872]",
      "dest": ".: . [29870,29871]"
    },
    {
      "src": "identifier: _beforeTokenTransfer [31197,31217]",
      "dest": "identifier: _beforeTokenTransfer [31196,31216]"
    },
    {
      "src": "primitive_type [27974,27981]",
      "dest": "primitive_type [27973,27980]"
    },
    {
      "src": "function: function [36897,36905]",
      "dest": "function: function [37324,37332]"
    },
    {
      "src": "primitive_type [49657,49664]",
      "dest": "primitive_type [57831,57838]"
    },
    {
      "src": "bool: bool [28761,28765]",
      "dest": "bool: bool [28760,28764]"
    },
    {
      "src": ",: , [39009,39010]",
      "dest": ",: , [39567,39568]"
    },
    {
      "src": "expression_statement [21308,21327]",
      "dest": "expression_statement [20921,20940]"
    },
    {
      "src": "number_literal: 0 [52337,52338]",
      "dest": "number_literal: 0 [60258,60259]"
    },
    {
      "src": "): ) [18260,18261]",
      "dest": "): ) [17833,17834]"
    },
    {
      "src": "=: = [24352,24353]",
      "dest": "=: = [24351,24352]"
    },
    {
      "src": "primitive_type [4469,4476]",
      "dest": "primitive_type [3976,3983]"
    },
    {
      "src": "comment: // https://github.com/trusttoken/smart-contracts [1872,1920]",
      "dest": "comment: // pragma solidity ^0.6.0; [1515,1541]"
    },
    {
      "src": "call_expression [18027,18087]",
      "dest": "call_expression [17600,17660]"
    },
    {
      "src": "=: = [52295,52296]",
      "dest": "=: = [60216,60217]"
    },
    {
      "src": "identifier: amountWithoutFee [49181,49197]",
      "dest": "identifier: amountWithoutFee [57007,57023]"
    },
    {
      "src": "): ) [2704,2705]",
      "dest": "): ) [2208,2209]"
    },
    {
      "src": "=: = [45663,45664]",
      "dest": "=: = [50456,50457]"
    },
    {
      "src": "parameter [26022,26039]",
      "dest": "parameter [26021,26038]"
    },
    {
      "src": "(: ( [50381,50382]",
      "dest": "(: ( [57475,57476]"
    },
    {
      "src": "type_name [22181,22192]",
      "dest": "type_name [21794,21805]"
    },
    {
      "src": "type_cast_expression [32125,32135]",
      "dest": "type_cast_expression [32124,32134]"
    },
    {
      "src": "primitive_type [18175,18180]",
      "dest": "primitive_type [17748,17753]"
    },
    {
      "src": "{: { [47216,47217]",
      "dest": "{: { [52174,52175]"
    },
    {
      "src": "visibility [53617,53625]",
      "dest": "visibility [61538,61546]"
    },
    {
      "src": "assembly_statement [13925,13966]",
      "dest": "assembly_statement [13495,13536]"
    },
    {
      "src": "identifier: _lender [40232,40239]",
      "dest": "identifier: _lender [44352,44359]"
    },
    {
      "src": "identifier: _approve [28052,28060]",
      "dest": "identifier: _approve [28051,28059]"
    },
    {
      "src": ",: , [31966,31967]",
      "dest": ",: , [31965,31966]"
    },
    {
      "src": "primitive_type [38623,38630]",
      "dest": "primitive_type [39163,39170]"
    },
    {
      "src": "): ) [21554,21555]",
      "dest": "): ) [21167,21168]"
    },
    {
      "src": "identifier: decimals_ [32641,32650]",
      "dest": "identifier: decimals_ [32640,32649]"
    },
    {
      "src": "type_name [36524,36531]",
      "dest": "type_name [36951,36958]"
    },
    {
      "src": "return: return [43995,44001]",
      "dest": "return: return [48263,48269]"
    },
    {
      "src": "call_expression [34373,34385]",
      "dest": "call_expression [34540,34552]"
    },
    {
      "src": "(: ( [16113,16114]",
      "dest": "(: ( [15686,15687]"
    },
    {
      "src": "primitive_type [12053,12060]",
      "dest": "primitive_type [11600,11607]"
    },
    {
      "src": "function: function [51013,51021]",
      "dest": "function: function [58936,58944]"
    },
    {
      "src": "parameter [36776,36797]",
      "dest": "parameter [37203,37224]"
    },
    {
      "src": "if_statement [44626,44762]",
      "dest": "if_statement [49245,49381]"
    },
    {
      "src": "\": \" [42827,42828]",
      "dest": "\": \" [46999,47000]"
    },
    {
      "src": "comment: // if there is not enough TUSD, withdraw from curve [49384,49435]",
      "dest": "comment: // if there is not enough TUSD, withdraw from curve [57075,57126]"
    },
    {
      "src": "string [31311,31347]",
      "dest": "string [31310,31346]"
    },
    {
      "src": "parameter [3834,3838]",
      "dest": "parameter [3341,3345]"
    },
    {
      "src": "primitive_type [40706,40713]",
      "dest": "primitive_type [44878,44885]"
    },
    {
      "src": "identifier: Repaid [41997,42003]",
      "dest": "identifier: Repaid [46169,46175]"
    },
    {
      "src": "identifier: balance [15038,15045]",
      "dest": "identifier: balance [14611,14618]"
    },
    {
      "src": "): ) [36174,36175]",
      "dest": "): ) [36601,36602]"
    },
    {
      "src": "identifier: amountToWithdraw [49586,49602]",
      "dest": "identifier: amountToWithdraw [52900,52916]"
    },
    {
      "src": "number_literal: 0 [47018,47019]",
      "dest": "number_literal: 0 [51976,51977]"
    },
    {
      "src": "identifier: data [17830,17834]",
      "dest": "identifier: data [17403,17407]"
    },
    {
      "src": "identifier: msgSender [34405,34414]",
      "dest": "identifier: msgSender [34572,34581]"
    },
    {
      "src": "event_paramater [40984,40998]",
      "dest": "event_paramater [45156,45170]"
    },
    {
      "src": "==: == [22087,22089]",
      "dest": "==: == [21700,21702]"
    },
    {
      "src": "returns: returns [38614,38621]",
      "dest": "returns: returns [39154,39161]"
    },
    {
      "src": "identifier: _NOT_ENTERED [6424,6436]",
      "dest": "identifier: _NOT_ENTERED [5951,5963]"
    },
    {
      "src": "type_cast_expression [43156,43175]",
      "dest": "type_cast_expression [47328,47347]"
    },
    {
      "src": "pure: pure [12073,12077]",
      "dest": "pure: pure [11620,11624]"
    },
    {
      "src": "primitive_type [3048,3055]",
      "dest": "primitive_type [2552,2559]"
    },
    {
      "src": "identifier: _balances [31280,31289]",
      "dest": "identifier: _balances [31279,31288]"
    },
    {
      "src": "(: ( [21060,21061]",
      "dest": "(: ( [20673,20674]"
    },
    {
      "src": "function: function [44853,44861]",
      "dest": "function: function [49472,49480]"
    },
    {
      "src": "identifier: claimableFees [52321,52334]",
      "dest": "identifier: claimableFees [60242,60255]"
    },
    {
      "src": "): ) [43924,43925]",
      "dest": "): ) [48220,48221]"
    },
    {
      "src": "yul_identifier [18636,18651]",
      "dest": "yul_identifier [18209,18224]"
    },
    {
      "src": "primitive_type [4215,4222]",
      "dest": "primitive_type [3722,3729]"
    },
    {
      "src": ",: , [7108,7109]",
      "dest": ",: , [6635,6636]"
    },
    {
      "src": "): ) [41835,41836]",
      "dest": "): ) [46007,46008]"
    },
    {
      "src": "): ) [44669,44670]",
      "dest": "): ) [49288,49289]"
    },
    {
      "src": "type_name [26623,26627]",
      "dest": "type_name [26622,26626]"
    },
    {
      "src": "(: ( [44494,44495]",
      "dest": "(: ( [49113,49114]"
    },
    {
      "src": "function: function [52208,52216]",
      "dest": "function: function [60129,60137]"
    },
    {
      "src": "array_access [28084,28118]",
      "dest": "array_access [28083,28117]"
    },
    {
      "src": "primitive_type [40346,40353]",
      "dest": "primitive_type [44466,44473]"
    },
    {
      "src": "identifier: initializing [21274,21286]",
      "dest": "identifier: initializing [20887,20899]"
    },
    {
      "src": "parameter [35534,35550]",
      "dest": "parameter [35701,35717]"
    },
    {
      "src": "identifier: spender [26565,26572]",
      "dest": "identifier: spender [26564,26571]"
    },
    {
      "src": "(: ( [42816,42817]",
      "dest": "(: ( [46988,46989]"
    },
    {
      "src": "member_expression [46328,46338]",
      "dest": "member_expression [51285,51295]"
    },
    {
      "src": "comment: /**      * @dev Emitted when funds are flushed into curve.fi      * @param currencyAmount Amount of tokens deposited      */ [41213,41340]",
      "dest": "comment: /**      * @dev Emitted when funds are flushed into curve.fi      * @param currencyAmount Amount of tokens deposited      */ [45385,45512]"
    },
    {
      "src": "}: } [28164,28165]",
      "dest": "}: } [28163,28164]"
    },
    {
      "src": "member_expression [29854,29875]",
      "dest": "member_expression [29853,29874]"
    },
    {
      "src": "let: let [18632,18635]",
      "dest": "let: let [18205,18208]"
    },
    {
      "src": "block_statement [21259,21338]",
      "dest": "block_statement [20872,20951]"
    },
    {
      "src": ".: . [51072,51073]",
      "dest": ".: . [58995,58996]"
    },
    {
      "src": "): ) [8390,8391]",
      "dest": "): ) [7937,7938]"
    },
    {
      "src": "variable_declaration [10069,10078]",
      "dest": "variable_declaration [9616,9625]"
    },
    {
      "src": "function: function [37114,37122]",
      "dest": "function: function [37541,37549]"
    },
    {
      "src": "primitive_type [52280,52287]",
      "dest": "primitive_type [60201,60208]"
    },
    {
      "src": "): ) [15195,15196]",
      "dest": "): ) [14768,14769]"
    },
    {
      "src": "call_expression [28052,28135]",
      "dest": "call_expression [28051,28134]"
    },
    {
      "src": "comment: /**  * TruePool is an ERC20 which represents a share of a pool  *  * This contract can be used to wrap opportunities to be compatible  * with TrueFi and allow users to directly opt-in through the TUSD contract  *  * Each TruePool is also a staking opportunity for TRU  */ [37259,37537]",
      "dest": "comment: /**  * TruePool is an ERC20 which represents a share of a pool  *  * This contract can be used to wrap opportunities to be compatible  * with TrueFi and allow users to directly opt-in through the TUSD contract  *  * Each TruePool is also a staking opportunity for TRU  */ [37781,38059]"
    },
    {
      "src": "primitive_type [23562,23569]",
      "dest": "primitive_type [23561,23568]"
    },
    {
      "src": "(: ( [27414,27415]",
      "dest": "(: ( [27413,27414]"
    },
    {
      "src": "identifier: recipient [2679,2688]",
      "dest": "identifier: recipient [2183,2192]"
    },
    {
      "src": "user_defined_type [40106,40116]",
      "dest": "user_defined_type [44226,44236]"
    },
    {
      "src": "identifier: setJoiningFee [44862,44875]",
      "dest": "identifier: setJoiningFee [49481,49494]"
    },
    {
      "src": "{: { [35862,35863]",
      "dest": "{: { [36124,36125]"
    },
    {
      "src": "call_expression [50202,50219]",
      "dest": "call_expression [57295,57312]"
    },
    {
      "src": "contract: contract [5608,5616]",
      "dest": "contract: contract [5135,5143]"
    },
    {
      "src": "call_expression [43630,43715]",
      "dest": "call_expression [48026,48111]"
    },
    {
      "src": "event_paramater [41525,41540]",
      "dest": "event_paramater [45697,45712]"
    },
    {
      "src": "(: ( [30345,30346]",
      "dest": "(: ( [30344,30345]"
    },
    {
      "src": "function_body [52818,53123]",
      "dest": "function_body [60739,61044]"
    },
    {
      "src": "uint256: uint256 [21988,21995]",
      "dest": "uint256: uint256 [21601,21608]"
    },
    {
      "src": "address: address [35334,35341]",
      "dest": "address: address [35501,35508]"
    },
    {
      "src": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [4512,4663]",
      "dest": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [4019,4170]"
    },
    {
      "src": "comment: // amount. Since refunds are capped to a percentage of the total [6176,6240]",
      "dest": "comment: // amount. Since refunds are capped to a percentage of the total [5703,5767]"
    },
    {
      "src": "(: ( [45682,45683]",
      "dest": "(: ( [50475,50476]"
    },
    {
      "src": "primitive_type [31977,31984]",
      "dest": "primitive_type [31976,31983]"
    },
    {
      "src": "identifier: msg [19566,19569]",
      "dest": "identifier: msg [19159,19162]"
    },
    {
      "src": "state_mutability [43414,43418]",
      "dest": "state_mutability [47810,47814]"
    },
    {
      "src": "external: external [45369,45377]",
      "dest": "external: external [50162,50170]"
    },
    {
      "src": "memory: memory [16136,16142]",
      "dest": "memory: memory [15709,15715]"
    },
    {
      "src": "function_definition [27947,28165]",
      "dest": "function_definition [27946,28164]"
    },
    {
      "src": "address: address [30673,30680]",
      "dest": "address: address [30672,30679]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [26717,27177]",
      "dest": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [26716,27176]"
    },
    {
      "src": "int128: int128 [36808,36814]",
      "dest": "int128: int128 [37235,37241]"
    },
    {
      "src": "type_name [3033,3040]",
      "dest": "type_name [2537,2544]"
    },
    {
      "src": "identifier: amount [45968,45974]",
      "dest": "identifier: amount [50813,50819]"
    },
    {
      "src": "public: public [34579,34585]",
      "dest": "public: public [34746,34752]"
    },
    {
      "src": "primitive_type [51078,51085]",
      "dest": "primitive_type [59001,59008]"
    },
    {
      "src": "number_literal: 4 [36074,36075]",
      "dest": "number_literal: 4 [36501,36502]"
    },
    {
      "src": "for: for [23558,23561]",
      "dest": "for: for [23557,23560]"
    },
    {
      "src": "call_argument [35698,35704]",
      "dest": "call_argument [35865,35871]"
    },
    {
      "src": "identifier: onlyOwner [52259,52268]",
      "dest": "identifier: onlyOwner [60180,60189]"
    },
    {
      "src": "comment: /**      * @dev join pool      * 1. Transfer TUSD from sender      * 2. Mint pool tokens based on value to sender      */ [37674,37799]",
      "dest": "comment: /**      * @dev join pool      * 1. Transfer TUSD from sender      * 2. Mint pool tokens based on value to sender      */ [38196,38321]"
    },
    {
      "src": "(: ( [51085,51086]",
      "dest": "(: ( [59008,59009]"
    },
    {
      "src": "internal: internal [53617,53625]",
      "dest": "internal: internal [61538,61546]"
    },
    {
      "src": "identifier: remove_liquidity_one_coin [36740,36765]",
      "dest": "identifier: remove_liquidity_one_coin [37167,37192]"
    },
    {
      "src": "type_name [40706,40713]",
      "dest": "type_name [44878,44885]"
    },
    {
      "src": "[: [ [25774,25775]",
      "dest": "[: [ [25773,25774]"
    },
    {
      "src": "identifier: newFee [40714,40720]",
      "dest": "identifier: newFee [44886,44892]"
    },
    {
      "src": "true [26167,26171]",
      "dest": "true [26166,26170]"
    },
    {
      "src": "(: ( [49736,49737]",
      "dest": "(: ( [57910,57911]"
    },
    {
      "src": "call_argument [16667,16668]",
      "dest": "call_argument [16240,16241]"
    },
    {
      "src": "visibility [21556,21563]",
      "dest": "visibility [21169,21176]"
    },
    {
      "src": "identifier: self [21957,21961]",
      "dest": "identifier: self [21570,21574]"
    },
    {
      "src": "parameter [52809,52816]",
      "dest": "parameter [60730,60737]"
    },
    {
      "src": "binary_expression [44630,44669]",
      "dest": "binary_expression [49249,49288]"
    },
    {
      "src": "returns: returns [36587,36594]",
      "dest": "returns: returns [37014,37021]"
    },
    {
      "src": "(: ( [4683,4684]",
      "dest": "(: ( [4190,4191]"
    },
    {
      "src": "identifier: currencyAmount [52880,52894]",
      "dest": "identifier: currencyAmount [60801,60815]"
    },
    {
      "src": "): ) [16682,16683]",
      "dest": "): ) [16255,16256]"
    },
    {
      "src": "string: string [24218,24224]",
      "dest": "string: string [24217,24223]"
    },
    {
      "src": "true: true [27526,27530]",
      "dest": "true: true [27525,27529]"
    },
    {
      "src": "}: } [44761,44762]",
      "dest": "}: } [49380,49381]"
    },
    {
      "src": "call_argument [48788,48795]",
      "dest": "call_argument [56603,56610]"
    },
    {
      "src": "[: [ [27437,27438]",
      "dest": "[: [ [27436,27437]"
    },
    {
      "src": "comment: // word because each write operation emits an extra SLOAD to first read the [5722,5797]",
      "dest": "comment: // word because each write operation emits an extra SLOAD to first read the [5249,5324]"
    },
    {
      "src": "(: ( [48203,48204]",
      "dest": "(: ( [55842,55843]"
    },
    {
      "src": "}: } [30708,30709]",
      "dest": "}: } [30707,30708]"
    },
    {
      "src": "(: ( [41789,41790]",
      "dest": "(: ( [45961,45962]"
    },
    {
      "src": ".: . [49722,49723]",
      "dest": ".: . [57896,57897]"
    },
    {
      "src": "function: function [36639,36647]",
      "dest": "function: function [37066,37074]"
    },
    {
      "src": "call_argument [44601,44614]",
      "dest": "call_argument [49220,49233]"
    },
    {
      "src": "): ) [50519,50520]",
      "dest": "): ) [57613,57614]"
    },
    {
      "src": "contract_declaration [23487,33432]",
      "dest": "contract_declaration [23486,33431]"
    },
    {
      "src": "visibility [43926,43932]",
      "dest": "visibility [48222,48228]"
    },
    {
      "src": "identifier: initialized [20797,20808]",
      "dest": "identifier: initialized [20410,20421]"
    },
    {
      "src": "member_expression [48167,48195]",
      "dest": "member_expression [55806,55834]"
    },
    {
      "src": "member_expression [52056,52071]",
      "dest": "member_expression [59979,59994]"
    },
    {
      "src": "function_definition [19592,19825]",
      "dest": "function_definition [19185,19418]"
    },
    {
      "src": "primitive_type [35608,35615]",
      "dest": "primitive_type [35775,35782]"
    },
    {
      "src": "uint256: uint256 [52280,52287]",
      "dest": "uint256: uint256 [60201,60208]"
    },
    {
      "src": "(: ( [15031,15032]",
      "dest": "(: ( [14604,14605]"
    },
    {
      "src": "identifier: Approval [32239,32247]",
      "dest": "identifier: Approval [32238,32246]"
    },
    {
      "src": "external: external [50760,50768]",
      "dest": "external: external [58674,58682]"
    },
    {
      "src": "primitive_type [44537,44544]",
      "dest": "primitive_type [49156,49163]"
    },
    {
      "src": "}: } [15330,15331]",
      "dest": "}: } [14903,14904]"
    },
    {
      "src": "return_type_definition [24462,24485]",
      "dest": "return_type_definition [24461,24484]"
    },
    {
      "src": "): ) [33408,33409]",
      "dest": "): ) [33407,33408]"
    },
    {
      "src": "unary_expression [21215,21228]",
      "dest": "unary_expression [20828,20841]"
    },
    {
      "src": "comment: /**      * @dev ensure enough curve.fi pool tokens are available      * Check if current available amount of TUSD is enough and      * withdraw remainder from gauge      * @param neededAmount amount required      */ [44229,44449]",
      "dest": "comment: /**      * @dev ensure enough curve.fi pool tokens are available      * Check if current available amount of TUSD is enough and      * withdraw remainder from gauge      * @param neededAmount amount required      */ [48848,49068]"
    },
    {
      "src": "binary_expression [49449,49483]",
      "dest": "binary_expression [57140,57174]"
    },
    {
      "src": "(: ( [40940,40941]",
      "dest": "(: ( [45112,45113]"
    },
    {
      "src": "call_argument [27456,27462]",
      "dest": "call_argument [27455,27461]"
    },
    {
      "src": "identifier: errorMessage [9309,9321]",
      "dest": "identifier: errorMessage [8856,8868]"
    },
    {
      "src": ",: , [31309,31310]",
      "dest": ",: , [31308,31309]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [10190,10652]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [9737,10199]"
    },
    {
      "src": "primitive_type [52229,52236]",
      "dest": "primitive_type [60150,60157]"
    },
    {
      "src": "parameter [42629,42653]",
      "dest": "parameter [46801,46825]"
    },
    {
      "src": "(: ( [13636,13637]",
      "dest": "(: ( [13206,13207]"
    },
    {
      "src": "): ) [24688,24689]",
      "dest": "): ) [24687,24688]"
    },
    {
      "src": ",: , [17225,17226]",
      "dest": ",: , [16798,16799]"
    },
    {
      "src": "internal: internal [6540,6548]",
      "dest": "internal: internal [6067,6075]"
    },
    {
      "src": "(: ( [52898,52899]",
      "dest": "(: ( [60819,60820]"
    },
    {
      "src": "type_name [42257,42264]",
      "dest": "type_name [46429,46436]"
    },
    {
      "src": "parameter [38230,38244]",
      "dest": "parameter [38752,38766]"
    },
    {
      "src": "visibility [19612,19620]",
      "dest": "visibility [19205,19213]"
    },
    {
      "src": "binary_expression [7089,7108]",
      "dest": "binary_expression [6616,6635]"
    },
    {
      "src": "identifier: balanceOf [46318,46327]",
      "dest": "identifier: balanceOf [51275,51284]"
    },
    {
      "src": "expression_statement [43200,43261]",
      "dest": "expression_statement [47372,47433]"
    },
    {
      "src": "return_type_definition [37089,37105]",
      "dest": "return_type_definition [37516,37532]"
    },
    {
      "src": "(: ( [8878,8879]",
      "dest": "(: ( [8425,8426]"
    },
    {
      "src": "identifier: _status [7089,7096]",
      "dest": "identifier: _status [6616,6623]"
    },
    {
      "src": "type_name [36662,36672]",
      "dest": "type_name [37089,37099]"
    },
    {
      "src": "call_expression [53427,53481]",
      "dest": "call_expression [61348,61402]"
    },
    {
      "src": "type_name [12668,12675]",
      "dest": "type_name [12215,12222]"
    },
    {
      "src": "interface: interface [38852,38861]",
      "dest": "interface: interface [39410,39419]"
    },
    {
      "src": "identifier: this [50845,50849]",
      "dest": "identifier: this [58770,58774]"
    },
    {
      "src": "identifier: recipient [29539,29548]",
      "dest": "identifier: recipient [29538,29547]"
    },
    {
      "src": ".: . [46737,46738]",
      "dest": ".: . [51695,51696]"
    },
    {
      "src": "state_mutability [24661,24665]",
      "dest": "state_mutability [24660,24664]"
    },
    {
      "src": "): ) [18237,18238]",
      "dest": "): ) [17810,17811]"
    },
    {
      "src": "call_expression [28778,28957]",
      "dest": "call_expression [28777,28956]"
    },
    {
      "src": ",: , [36950,36951]",
      "dest": ",: , [37377,37378]"
    },
    {
      "src": "(: ( [46706,46707]",
      "dest": "(: ( [51664,51665]"
    },
    {
      "src": "type_name [49087,49094]",
      "dest": "type_name [56902,56909]"
    },
    {
      "src": "identifier: _balances [30597,30606]",
      "dest": "identifier: _balances [30596,30605]"
    },
    {
      "src": "visibility [6501,6508]",
      "dest": "visibility [6028,6035]"
    },
    {
      "src": "identifier: functionCall [16197,16209]",
      "dest": "identifier: functionCall [15770,15782]"
    },
    {
      "src": "comment: // ======= STORAGE DECLARATION END ============ [40444,40491]",
      "dest": "comment: // ======= STORAGE DECLARATION END ============ [44616,44663]"
    },
    {
      "src": "type_name [42664,42670]",
      "dest": "type_name [46836,46842]"
    },
    {
      "src": "visibility [34085,34092]",
      "dest": "visibility [34252,34259]"
    },
    {
      "src": "identifier: id [37136,37138]",
      "dest": "identifier: id [37563,37565]"
    },
    {
      "src": "primitive_type [2724,2728]",
      "dest": "primitive_type [2228,2232]"
    },
    {
      "src": "identifier: _msgSender [27438,27448]",
      "dest": "identifier: _msgSender [27437,27447]"
    },
    {
      "src": "function_definition [16092,16265]",
      "dest": "function_definition [15665,15838]"
    },
    {
      "src": "): ) [50758,50759]",
      "dest": "): ) [58672,58673]"
    },
    {
      "src": "primitive_type [2671,2678]",
      "dest": "primitive_type [2175,2182]"
    },
    {
      "src": "identifier: add [8366,8369]",
      "dest": "identifier: add [7913,7916]"
    },
    {
      "src": ",: , [36091,36092]",
      "dest": ",: , [36518,36519]"
    },
    {
      "src": "identifier: yTokenBalance [49808,49821]",
      "dest": "identifier: yTokenBalance [57960,57973]"
    },
    {
      "src": "assignment_expression [44919,44935]",
      "dest": "assignment_expression [49621,49637]"
    },
    {
      "src": "identifier: value [4497,4502]",
      "dest": "identifier: value [4004,4009]"
    },
    {
      "src": "{: { [36237,36238]",
      "dest": "{: { [36664,36665]"
    },
    {
      "src": "user_defined_type [23520,23527]",
      "dest": "user_defined_type [23519,23526]"
    },
    {
      "src": "identifier: require [35588,35595]",
      "dest": "identifier: require [35755,35762]"
    },
    {
      "src": ",: , [53468,53469]",
      "dest": ",: , [61389,61390]"
    },
    {
      "src": "[: [ [38993,38994]",
      "dest": "[: [ [39551,39552]"
    },
    {
      "src": "uint256: uint256 [8415,8422]",
      "dest": "uint256: uint256 [7962,7969]"
    },
    {
      "src": "identifier: get_virtual_price [44161,44178]",
      "dest": "identifier: get_virtual_price [48309,48326]"
    },
    {
      "src": "primitive_type [14953,14968]",
      "dest": "primitive_type [14526,14541]"
    },
    {
      "src": "): ) [43396,43397]",
      "dest": "): ) [47792,47793]"
    },
    {
      "src": "call_expression [28084,28134]",
      "dest": "call_expression [28083,28133]"
    },
    {
      "src": "(: ( [29718,29719]",
      "dest": "(: ( [29717,29718]"
    },
    {
      "src": "assignment_expression [34396,34414]",
      "dest": "assignment_expression [34563,34581]"
    },
    {
      "src": "type_name [17579,17586]",
      "dest": "type_name [17152,17159]"
    },
    {
      "src": "identifier: i [36815,36816]",
      "dest": "identifier: i [37242,37243]"
    },
    {
      "src": "): ) [50274,50275]",
      "dest": "): ) [57368,57369]"
    },
    {
      "src": "parameter [36358,36370]",
      "dest": "parameter [36785,36797]"
    },
    {
      "src": "binary_expression [21082,21129]",
      "dest": "binary_expression [20695,20742]"
    },
    {
      "src": "identifier: transferFrom [50812,50824]",
      "dest": "identifier: transferFrom [58737,58749]"
    },
    {
      "src": "identifier: _balances [25765,25774]",
      "dest": "identifier: _balances [25764,25773]"
    },
    {
      "src": "state_variable_declaration [22181,22211]",
      "dest": "state_variable_declaration [21794,21824]"
    },
    {
      "src": "(: ( [13596,13597]",
      "dest": "(: ( [13166,13167]"
    },
    {
      "src": "primitive_type [34166,34173]",
      "dest": "primitive_type [34333,34340]"
    },
    {
      "src": "binary_expression [11400,11405]",
      "dest": "binary_expression [10947,10952]"
    },
    {
      "src": "event_paramater [40706,40720]",
      "dest": "event_paramater [44878,44892]"
    },
    {
      "src": "primitive_type [34077,34084]",
      "dest": "primitive_type [34244,34251]"
    },
    {
      "src": "(: ( [53639,53640]",
      "dest": "(: ( [61560,61561]"
    },
    {
      "src": "function_definition [13577,13999]",
      "dest": "function_definition [13147,13569]"
    },
    {
      "src": "): ) [29720,29721]",
      "dest": "): ) [29719,29720]"
    },
    {
      "src": "function: function [35204,35212]",
      "dest": "function: function [35371,35379]"
    },
    {
      "src": "parameter [2259,2266]",
      "dest": "parameter [1763,1770]"
    },
    {
      "src": "identifier: c [10173,10174]",
      "dest": "identifier: c [9720,9721]"
    },
    {
      "src": "call_argument [52414,52425]",
      "dest": "call_argument [60335,60346]"
    },
    {
      "src": "return_type_definition [36976,36993]",
      "dest": "return_type_definition [37403,37420]"
    },
    {
      "src": ",: , [31940,31941]",
      "dest": ",: , [31939,31940]"
    },
    {
      "src": "parameter [12087,12094]",
      "dest": "parameter [11634,11641]"
    },
    {
      "src": "function_definition [4158,4255]",
      "dest": "function_definition [3665,3762]"
    },
    {
      "src": "expression_statement [42792,42840]",
      "dest": "expression_statement [46964,47012]"
    },
    {
      "src": "=: = [46526,46527]",
      "dest": "=: = [51484,51485]"
    },
    {
      "src": "identifier: data [19813,19817]",
      "dest": "identifier: data [19406,19410]"
    },
    {
      "src": "parameter [25402,25407]",
      "dest": "parameter [25401,25406]"
    },
    {
      "src": "}: } [32700,32701]",
      "dest": "}: } [32699,32700]"
    },
    {
      "src": "(: ( [33333,33334]",
      "dest": "(: ( [33332,33333]"
    },
    {
      "src": "primitive_type [45398,45405]",
      "dest": "primitive_type [50191,50198]"
    },
    {
      "src": "): ) [21061,21062]",
      "dest": "): ) [20674,20675]"
    },
    {
      "src": "call_argument [31303,31309]",
      "dest": "call_argument [31302,31308]"
    },
    {
      "src": ",: , [36797,36798]",
      "dest": ",: , [37224,37225]"
    },
    {
      "src": ",: , [52054,52055]",
      "dest": ",: , [59977,59978]"
    },
    {
      "src": "return: return [43447,43453]",
      "dest": "return: return [47843,47849]"
    },
    {
      "src": "function_body [24690,24723]",
      "dest": "function_body [24689,24722]"
    },
    {
      "src": "call_expression [27387,27508]",
      "dest": "call_expression [27386,27507]"
    },
    {
      "src": "identifier: account [30607,30614]",
      "dest": "identifier: account [30606,30613]"
    },
    {
      "src": "identifier: value [17622,17627]",
      "dest": "identifier: value [17195,17200]"
    },
    {
      "src": "identifier: amount [37827,37833]",
      "dest": "identifier: amount [38349,38355]"
    },
    {
      "src": "return: return [25420,25426]",
      "dest": "return: return [25419,25425]"
    },
    {
      "src": "call_expression [46696,46737]",
      "dest": "call_expression [51654,51695]"
    },
    {
      "src": "=: = [46407,46408]",
      "dest": "=: = [51365,51366]"
    },
    {
      "src": "variable_declaration_statement [50349,50400]",
      "dest": "variable_declaration_statement [57443,57494]"
    },
    {
      "src": "identifier: withdraw [36439,36447]",
      "dest": "identifier: withdraw [36866,36874]"
    },
    {
      "src": "expression_statement [51975,52083]",
      "dest": "expression_statement [59898,60006]"
    },
    {
      "src": "address: address [26557,26564]",
      "dest": "address: address [26556,26563]"
    },
    {
      "src": "private: private [20921,20928]",
      "dest": "private: private [20534,20541]"
    },
    {
      "src": "function: function [34299,34307]",
      "dest": "function: function [34466,34474]"
    },
    {
      "src": "return_type_definition [34591,34608]",
      "dest": "return_type_definition [34758,34775]"
    },
    {
      "src": "number_unit [52076,52081]",
      "dest": "number_unit [59999,60004]"
    },
    {
      "src": "{: { [34070,34071]",
      "dest": "{: { [34237,34238]"
    },
    {
      "src": "parameter [17614,17627]",
      "dest": "parameter [17187,17200]"
    },
    {
      "src": "call_argument [8913,8914]",
      "dest": "call_argument [8460,8461]"
    },
    {
      "src": "identifier: _minter [40266,40273]",
      "dest": "identifier: _minter [44386,44393]"
    },
    {
      "src": "type_name [9284,9291]",
      "dest": "type_name [8831,8838]"
    },
    {
      "src": "(: ( [45703,45704]",
      "dest": "(: ( [50496,50497]"
    },
    {
      "src": "identifier: onlyOwner [47820,47829]",
      "dest": "identifier: onlyOwner [55389,55398]"
    },
    {
      "src": "function: function [14934,14942]",
      "dest": "function: function [14507,14515]"
    },
    {
      "src": "address: address [35534,35541]",
      "dest": "address: address [35701,35708]"
    },
    {
      "src": "call_expression [15016,15089]",
      "dest": "call_expression [14589,14662]"
    },
    {
      "src": "identifier: currentlyAvailableAmount [44545,44569]",
      "dest": "identifier: currentlyAvailableAmount [49164,49188]"
    },
    {
      "src": "primitive_type [2259,2266]",
      "dest": "primitive_type [1763,1770]"
    },
    {
      "src": "view: view [25724,25728]",
      "dest": "view: view [25723,25727]"
    },
    {
      "src": "type_name [24471,24477]",
      "dest": "type_name [24470,24476]"
    },
    {
      "src": "address: address [4469,4476]",
      "dest": "address: address [3976,3983]"
    },
    {
      "src": "state_variable_declaration [6399,6441]",
      "dest": "state_variable_declaration [5926,5968]"
    },
    {
      "src": "(: ( [36523,36524]",
      "dest": "(: ( [36950,36951]"
    },
    {
      "src": "string [47886,47928]",
      "dest": "string [55455,55498]"
    },
    {
      "src": "call_argument [35706,35714]",
      "dest": "call_argument [35873,35881]"
    },
    {
      "src": "state_variable_declaration [40555,40585]",
      "dest": "state_variable_declaration [44727,44757]"
    },
    {
      "src": "type_name [18002,18007]",
      "dest": "type_name [17575,17580]"
    },
    {
      "src": "call_expression [47308,47388]",
      "dest": "call_expression [52266,52346]"
    },
    {
      "src": "address: address [2671,2678]",
      "dest": "address: address [2175,2182]"
    },
    {
      "src": "uint256: uint256 [23629,23636]",
      "dest": "uint256: uint256 [23628,23635]"
    },
    {
      "src": "type_cast_expression [51078,51098]",
      "dest": "type_cast_expression [59001,59021]"
    },
    {
      "src": "yul_function_call [18655,18672]",
      "dest": "yul_function_call [18228,18245]"
    },
    {
      "src": "state_variable_declaration [23777,23798]",
      "dest": "state_variable_declaration [23776,23797]"
    },
    {
      "src": "identifier: weiValue [18222,18230]",
      "dest": "identifier: weiValue [17795,17803]"
    },
    {
      "src": "identifier: IERC20 [42664,42670]",
      "dest": "identifier: IERC20 [46836,46842]"
    },
    {
      "src": "call_argument [32133,32134]",
      "dest": "call_argument [32132,32133]"
    },
    {
      "src": "return_type_definition [28026,28040]",
      "dest": "return_type_definition [28025,28039]"
    },
    {
      "src": "number_literal: 4 [40547,40548]",
      "dest": "number_literal: 4 [44719,44720]"
    },
    {
      "src": "function: function [50721,50729]",
      "dest": "function: function [58635,58643]"
    },
    {
      "src": "member_expression [48751,48787]",
      "dest": "member_expression [56566,56602]"
    },
    {
      "src": "identifier: _transfer [29486,29495]",
      "dest": "identifier: _transfer [29485,29494]"
    },
    {
      "src": "identifier: recipient [4204,4213]",
      "dest": "identifier: recipient [3711,3720]"
    },
    {
      "src": "internal: internal [34321,34329]",
      "dest": "internal: internal [34488,34496]"
    },
    {
      "src": "variable_declaration_statement [34353,34386]",
      "dest": "variable_declaration_statement [34520,34553]"
    },
    {
      "src": "type_name [2671,2678]",
      "dest": "type_name [2175,2182]"
    },
    {
      "src": "array_access [25765,25783]",
      "dest": "array_access [25764,25782]"
    },
    {
      "src": "comment: /**      * @dev get currency token address      * @return currency token address      */ [43276,43367]",
      "dest": "comment: /**      * @dev get currency token address      * @return currency token address      */ [47672,47763]"
    },
    {
      "src": "identifier: c [11555,11556]",
      "dest": "identifier: c [11102,11103]"
    },
    {
      "src": "{: { [24690,24691]",
      "dest": "{: { [24689,24690]"
    },
    {
      "src": "identifier: require [31117,31124]",
      "dest": "identifier: require [31116,31123]"
    },
    {
      "src": "(: ( [49764,49765]",
      "dest": "(: ( [57934,57935]"
    },
    {
      "src": ">=: >= [49178,49180]",
      "dest": ">=: >= [57004,57006]"
    },
    {
      "src": "type_name [28695,28702]",
      "dest": "type_name [28694,28701]"
    },
    {
      "src": "number_literal: 0 [47984,47985]",
      "dest": "number_literal: 0 [55554,55555]"
    },
    {
      "src": "external: external [46258,46266]",
      "dest": "external: external [51103,51111]"
    },
    {
      "src": "return: return [18277,18283]",
      "dest": "return: return [17850,17856]"
    },
    {
      "src": "visibility [37835,37843]",
      "dest": "visibility [38357,38365]"
    },
    {
      "src": "call_argument [52035,52039]",
      "dest": "call_argument [59958,59962]"
    },
    {
      "src": "): ) [48621,48622]",
      "dest": "): ) [56369,56370]"
    },
    {
      "src": "function_definition [35869,35933]",
      "dest": "function_definition [36131,36195]"
    },
    {
      "src": "comment: // if currency remaining, transfer [46943,46977]",
      "dest": "comment: // if currency remaining, transfer [51901,51935]"
    },
    {
      "src": "identifier: data [17227,17231]",
      "dest": "identifier: data [16800,16804]"
    },
    {
      "src": "public: public [28011,28017]",
      "dest": "public: public [28010,28016]"
    },
    {
      "src": "memory: memory [39093,39099]",
      "dest": "memory: memory [39651,39657]"
    },
    {
      "src": "variable_declaration [45508,45528]",
      "dest": "variable_declaration [50301,50321]"
    },
    {
      "src": "identifier: currencyAmount [47849,47863]",
      "dest": "identifier: currencyAmount [55418,55432]"
    },
    {
      "src": "primitive_type [29559,29566]",
      "dest": "primitive_type [29558,29565]"
    },
    {
      "src": "call_argument [49325,49332]",
      "dest": "call_argument [47588,47595]"
    },
    {
      "src": "identifier: account [31218,31225]",
      "dest": "identifier: account [31217,31224]"
    },
    {
      "src": "function_definition [26004,26179]",
      "dest": "function_definition [26003,26178]"
    },
    {
      "src": "user_defined_type [43428,43434]",
      "dest": "user_defined_type [47824,47830]"
    },
    {
      "src": "primitive_type [12657,12664]",
      "dest": "primitive_type [12204,12211]"
    },
    {
      "src": "function_body [43436,43476]",
      "dest": "function_body [47832,47872]"
    },
    {
      "src": "call_argument [31218,31225]",
      "dest": "call_argument [31217,31224]"
    },
    {
      "src": "binary_expression [10081,10086]",
      "dest": "binary_expression [9628,9633]"
    },
    {
      "src": "type_name [40246,40258]",
      "dest": "type_name [44366,44378]"
    },
    {
      "src": "identifier: borrow [38223,38229]",
      "dest": "identifier: borrow [38745,38751]"
    },
    {
      "src": "(: ( [37016,37017]",
      "dest": "(: ( [37443,37444]"
    },
    {
      "src": "identifier: depositor [36271,36280]",
      "dest": "identifier: depositor [36698,36707]"
    },
    {
      "src": "call_argument [44051,44066]",
      "dest": "call_argument [48816,48831]"
    },
    {
      "src": "identifier: __uniRouter [42743,42754]",
      "dest": "identifier: __uniRouter [46915,46926]"
    },
    {
      "src": "identifier: balanceOf [53682,53691]",
      "dest": "identifier: balanceOf [61603,61612]"
    },
    {
      "src": "visibility [51882,51888]",
      "dest": "visibility [59805,59811]"
    },
    {
      "src": "{: { [26096,26097]",
      "dest": "{: { [26095,26096]"
    },
    {
      "src": "function: function [28668,28676]",
      "dest": "function: function [28667,28675]"
    },
    {
      "src": "event: event [40682,40687]",
      "dest": "event: event [44854,44859]"
    },
    {
      "src": "identifier: ICurveGauge [40141,40152]",
      "dest": "identifier: ICurveGauge [44261,44272]"
    },
    {
      "src": "call_expression [18202,18238]",
      "dest": "call_expression [17775,17811]"
    },
    {
      "src": "(: ( [51032,51033]",
      "dest": "(: ( [58955,58956]"
    },
    {
      "src": "returns: returns [36976,36983]",
      "dest": "returns: returns [37403,37410]"
    },
    {
      "src": "mapping: mapping [23610,23617]",
      "dest": "mapping: mapping [23609,23616]"
    },
    {
      "src": "identifier: amount [29814,29820]",
      "dest": "identifier: amount [29813,29819]"
    },
    {
      "src": ".: . [44160,44161]",
      "dest": ".: . [48308,48309]"
    },
    {
      "src": ",: , [34164,34165]",
      "dest": ",: , [34331,34332]"
    },
    {
      "src": "comment: /**      * @dev Exit pool      * This function will withdraw a basket of currencies backing the pool value      * @param amount amount of pool tokens to redeem for underlying tokens      */ [46029,46222]",
      "dest": "comment: /**      * @dev Exit pool      * This function will withdraw a basket of currencies backing the pool value      * @param amount amount of pool tokens to redeem for underlying tokens      */ [50874,51067]"
    },
    {
      "src": ",: , [28904,28905]",
      "dest": ",: , [28903,28904]"
    },
    {
      "src": "): ) [52903,52904]",
      "dest": "): ) [60824,60825]"
    },
    {
      "src": "identifier: ReentrancyGuard [39777,39792]",
      "dest": "identifier: ReentrancyGuard [43897,43912]"
    },
    {
      "src": ",: , [50835,50836]",
      "dest": ",: , [58760,58761]"
    },
    {
      "src": "): ) [47019,47020]",
      "dest": "): ) [51977,51978]"
    },
    {
      "src": "yul_function_call [22039,22056]",
      "dest": "yul_function_call [21652,21669]"
    },
    {
      "src": "expression_statement [48664,48704]",
      "dest": "expression_statement [56412,56452]"
    },
    {
      "src": "uint256: uint256 [47788,47795]",
      "dest": "uint256: uint256 [55357,55364]"
    },
    {
      "src": "identifier: b [12758,12759]",
      "dest": "identifier: b [12305,12306]"
    },
    {
      "src": "call_expression [50080,50161]",
      "dest": "call_expression [58403,58492]"
    },
    {
      "src": "call_argument [35596,35618]",
      "dest": "call_argument [35763,35785]"
    },
    {
      "src": "primitive_type [11372,11379]",
      "dest": "primitive_type [10919,10926]"
    },
    {
      "src": ",: , [27356,27357]",
      "dest": ",: , [27355,27356]"
    },
    {
      "src": "): ) [52433,52434]",
      "dest": "): ) [60354,60355]"
    },
    {
      "src": "identifier: _uniRouter [51942,51952]",
      "dest": "identifier: _uniRouter [59865,59875]"
    },
    {
      "src": "call_argument [42830,42838]",
      "dest": "call_argument [47002,47010]"
    },
    {
      "src": "type_name [17595,17600]",
      "dest": "type_name [17168,17173]"
    },
    {
      "src": "function: function [32611,32619]",
      "dest": "function: function [32610,32618]"
    },
    {
      "src": "{: { [18778,18779]",
      "dest": "{: { [18351,18352]"
    },
    {
      "src": "string: string [17629,17635]",
      "dest": "string: string [17202,17208]"
    },
    {
      "src": "function_definition [36380,36422]",
      "dest": "function_definition [36807,36849]"
    },
    {
      "src": "call_argument [53470,53480]",
      "dest": "call_argument [61391,61401]"
    },
    {
      "src": "identifier: _totalSupply [31359,31371]",
      "dest": "identifier: _totalSupply [31358,31370]"
    },
    {
      "src": "): ) [32094,32095]",
      "dest": "): ) [32093,32094]"
    },
    {
      "src": ".: . [44199,44200]",
      "dest": ".: . [48329,48330]"
    },
    {
      "src": "}: } [13998,13999]",
      "dest": "}: } [13568,13569]"
    },
    {
      "src": "expression_statement [43027,43058]",
      "dest": "expression_statement [47199,47230]"
    },
    {
      "src": "): ) [43954,43955]",
      "dest": "): ) [48250,48251]"
    },
    {
      "src": "(: ( [31234,31235]",
      "dest": "(: ( [31233,31234]"
    },
    {
      "src": "string: string [23777,23783]",
      "dest": "string: string [23776,23782]"
    },
    {
      "src": "comment: /**      * @dev Emitted when someone joins the pool      * @param staker Account staking      * @param deposited Amount deposited      * @param minted Amount of pool tokens minted      */ [40730,40922]",
      "dest": "comment: /**      * @dev Emitted when someone joins the pool      * @param staker Account staking      * @param deposited Amount deposited      * @param minted Amount of pool tokens minted      */ [44902,45094]"
    },
    {
      "src": "identifier: amountToMint [45976,45988]",
      "dest": "identifier: amountToMint [50821,50833]"
    },
    {
      "src": "=: = [52335,52336]",
      "dest": "=: = [60256,60257]"
    },
    {
      "src": "call_argument [53711,53724]",
      "dest": "call_argument [61632,61645]"
    },
    {
      "src": "return_type_definition [37154,37171]",
      "dest": "return_type_definition [37581,37598]"
    },
    {
      "src": "public: public [25381,25387]",
      "dest": "public: public [25380,25386]"
    },
    {
      "src": "call_argument [35303,35313]",
      "dest": "call_argument [35470,35480]"
    },
    {
      "src": "): ) [42760,42761]",
      "dest": "): ) [46932,46933]"
    },
    {
      "src": "address: address [4447,4454]",
      "dest": "address: address [3954,3961]"
    },
    {
      "src": "override: override [49122,49130]",
      "dest": "override: override [56937,56945]"
    },
    {
      "src": "contract: contract [39734,39742]",
      "dest": "contract: contract [43854,43862]"
    },
    {
      "src": "call_expression [46318,46339]",
      "dest": "call_expression [51275,51296]"
    },
    {
      "src": "call_argument [43659,43672]",
      "dest": "call_argument [48055,48068]"
    },
    {
      "src": "string [42830,42838]",
      "dest": "string [47002,47010]"
    },
    {
      "src": "internal: internal [17657,17665]",
      "dest": "internal: internal [17230,17238]"
    },
    {
      "src": "parameter [9273,9282]",
      "dest": "parameter [8820,8829]"
    },
    {
      "src": "block_statement [52367,52447]",
      "dest": "block_statement [60288,60368]"
    },
    {
      "src": "identifier: sender [47348,47354]",
      "dest": "identifier: sender [52306,52312]"
    },
    {
      "src": "): ) [43174,43175]",
      "dest": "): ) [47346,47347]"
    },
    {
      "src": "primitive_type [27323,27327]",
      "dest": "primitive_type [27322,27326]"
    },
    {
      "src": "parameter [38955,38975]",
      "dest": "parameter [39513,39533]"
    },
    {
      "src": "identifier: amount [46528,46534]",
      "dest": "identifier: amount [51486,51492]"
    },
    {
      "src": "{: { [32016,32017]",
      "dest": "{: { [32015,32016]"
    },
    {
      "src": "memory: memory [36077,36083]",
      "dest": "memory: memory [36504,36510]"
    },
    {
      "src": "emit_statement [35672,35716]",
      "dest": "emit_statement [35839,35883]"
    },
    {
      "src": "address: address [52041,52048]",
      "dest": "address: address [59964,59971]"
    },
    {
      "src": "parameter [12679,12705]",
      "dest": "parameter [12226,12252]"
    },
    {
      "src": "primitive_type [36066,36073]",
      "dest": "primitive_type [36493,36500]"
    },
    {
      "src": "): ) [32053,32054]",
      "dest": "): ) [32052,32053]"
    },
    {
      "src": "primitive_type [9724,9731]",
      "dest": "primitive_type [9271,9278]"
    },
    {
      "src": "visibility [44517,44525]",
      "dest": "visibility [49136,49144]"
    },
    {
      "src": "uint256: uint256 [37819,37826]",
      "dest": "uint256: uint256 [38341,38348]"
    },
    {
      "src": "type_name [26574,26581]",
      "dest": "type_name [26573,26580]"
    },
    {
      "src": "]: ] [30635,30636]",
      "dest": "]: ] [30634,30635]"
    },
    {
      "src": "identifier: IERC20 [37658,37664]",
      "dest": "identifier: IERC20 [38180,38186]"
    },
    {
      "src": ".: . [46885,46886]",
      "dest": ".: . [51843,51844]"
    },
    {
      "src": "function_definition [35507,35751]",
      "dest": "function_definition [35674,35918]"
    },
    {
      "src": "}: } [35753,35754]",
      "dest": "}: } [35920,35921]"
    },
    {
      "src": "): ) [26291,26292]",
      "dest": "): ) [26290,26291]"
    },
    {
      "src": ",: , [17841,17842]",
      "dest": ",: , [17414,17415]"
    },
    {
      "src": "variable_declaration_statement [21988,21999]",
      "dest": "variable_declaration_statement [21601,21612]"
    },
    {
      "src": "inheritance_specifier [34062,34069]",
      "dest": "inheritance_specifier [34229,34236]"
    },
    {
      "src": "if: if [47176,47178]",
      "dest": "if: if [52134,52136]"
    },
    {
      "src": "visibility [38753,38761]",
      "dest": "visibility [39293,39301]"
    },
    {
      "src": "primitive_type [53692,53699]",
      "dest": "primitive_type [61613,61620]"
    },
    {
      "src": "(: ( [31055,31056]",
      "dest": "(: ( [31054,31055]"
    },
    {
      "src": "returns: returns [37033,37040]",
      "dest": "returns: returns [37460,37467]"
    },
    {
      "src": "): ) [9321,9322]",
      "dest": "): ) [8868,8869]"
    },
    {
      "src": "function_definition [24636,24723]",
      "dest": "function_definition [24635,24722]"
    },
    {
      "src": "identifier: sub [27452,27455]",
      "dest": "identifier: sub [27451,27454]"
    },
    {
      "src": "type_name [36093,36097]",
      "dest": "type_name [36520,36524]"
    },
    {
      "src": ".: . [51917,51918]",
      "dest": ".: . [59840,59841]"
    },
    {
      "src": "call_argument [45156,45176]",
      "dest": "call_argument [49959,49979]"
    },
    {
      "src": "identifier: expectedAmount [49071,49085]",
      "dest": "identifier: expectedAmount [56886,56900]"
    },
    {
      "src": "comment: /**      * @dev Returns the name of the token.      */ [24372,24428]",
      "dest": "comment: /**      * @dev Returns the name of the token.      */ [24371,24427]"
    },
    {
      "src": "emit_statement [30659,30702]",
      "dest": "emit_statement [30658,30701]"
    },
    {
      "src": "): ) [31145,31146]",
      "dest": "): ) [31144,31145]"
    },
    {
      "src": "primitive_type [36952,36958]",
      "dest": "primitive_type [37379,37385]"
    },
    {
      "src": ",: , [42025,42026]",
      "dest": ",: , [46197,46198]"
    },
    {
      "src": "parameter [38623,38630]",
      "dest": "parameter [39163,39170]"
    },
    {
      "src": "identifier: recipient [29803,29812]",
      "dest": "identifier: recipient [29802,29811]"
    },
    {
      "src": "variable_declaration_statement [49657,49743]",
      "dest": "variable_declaration_statement [57831,57917]"
    },
    {
      "src": ".: . [43673,43674]",
      "dest": ".: . [48069,48070]"
    },
    {
      "src": "add: add [18701,18704]",
      "dest": "add: add [18274,18277]"
    },
    {
      "src": "return_type_definition [17666,17688]",
      "dest": "return_type_definition [17239,17261]"
    },
    {
      "src": ",: , [38687,38688]",
      "dest": ",: , [39227,39228]"
    },
    {
      "src": "identifier: require [50176,50183]",
      "dest": "identifier: require [57269,57276]"
    },
    {
      "src": "return: return [25582,25588]",
      "dest": "return: return [25581,25587]"
    },
    {
      "src": "memory: memory [16173,16179]",
      "dest": "memory: memory [15746,15752]"
    },
    {
      "src": "type_name [40213,40224]",
      "dest": "type_name [44333,44344]"
    },
    {
      "src": "): ) [12150,12151]",
      "dest": "): ) [11697,11698]"
    },
    {
      "src": "\": \" [35659,35660]",
      "dest": "\": \" [35826,35827]"
    },
    {
      "src": "call_argument [51942,51952]",
      "dest": "call_argument [59865,59875]"
    },
    {
      "src": "}: } [19824,19825]",
      "dest": "}: } [19417,19418]"
    },
    {
      "src": "member_expression [50426,50443]",
      "dest": "member_expression [57520,57537]"
    },
    {
      "src": "external: external [36573,36581]",
      "dest": "external: external [37000,37008]"
    },
    {
      "src": "address: address [4180,4187]",
      "dest": "address: address [3687,3694]"
    },
    {
      "src": ",: , [35301,35302]",
      "dest": ",: , [35468,35469]"
    },
    {
      "src": "(: ( [53699,53700]",
      "dest": "(: ( [61620,61621]"
    },
    {
      "src": "identifier: calcWithdrawOneCoin [53342,53361]",
      "dest": "identifier: calcWithdrawOneCoin [61263,61282]"
    },
    {
      "src": "user_defined_type [23505,23518]",
      "dest": "user_defined_type [23504,23517]"
    },
    {
      "src": ",: , [29721,29722]",
      "dest": ",: , [29720,29721]"
    },
    {
      "src": "public: public [35233,35239]",
      "dest": "public: public [35400,35406]"
    },
    {
      "src": "identifier: currencyBalance [53599,53614]",
      "dest": "identifier: currencyBalance [61520,61535]"
    },
    {
      "src": "call_expression [44104,44119]",
      "dest": "call_expression [48270,48285]"
    },
    {
      "src": "{: { [18262,18263]",
      "dest": "{: { [17835,17836]"
    },
    {
      "src": ".: . [27451,27452]",
      "dest": ".: . [27450,27451]"
    },
    {
      "src": "call_argument [11400,11405]",
      "dest": "call_argument [10947,10952]"
    },
    {
      "src": "identifier: amountToDeposit [45464,45479]",
      "dest": "identifier: amountToDeposit [50257,50272]"
    },
    {
      "src": ",: , [27989,27990]",
      "dest": ",: , [27988,27989]"
    },
    {
      "src": "identifier: amount [45482,45488]",
      "dest": "identifier: amount [50275,50281]"
    },
    {
      "src": "identifier: _totalSupply [30562,30574]",
      "dest": "identifier: _totalSupply [30561,30573]"
    },
    {
      "src": "=: = [42894,42895]",
      "dest": "=: = [47066,47067]"
    },
    {
      "src": "(: ( [28106,28107]",
      "dest": "(: ( [28105,28106]"
    },
    {
      "src": "inheritance_specifier [39794,39801]",
      "dest": "inheritance_specifier [43914,43921]"
    },
    {
      "src": "internal: internal [33410,33418]",
      "dest": "internal: internal [33409,33417]"
    },
    {
      "src": "{: { [21063,21064]",
      "dest": "{: { [20676,20677]"
    },
    {
      "src": "identifier: call [18209,18213]",
      "dest": "identifier: call [17782,17786]"
    },
    {
      "src": "call_expression [43200,43218]",
      "dest": "call_expression [47372,47390]"
    },
    {
      "src": "call_argument [48544,48570]",
      "dest": "call_argument [56291,56317]"
    },
    {
      "src": "identifier: currencyAmount [50744,50758]",
      "dest": "identifier: currencyAmount [58658,58672]"
    },
    {
      "src": "contract_body [23536,33432]",
      "dest": "contract_body [23535,33431]"
    },
    {
      "src": "parameter [38928,38944]",
      "dest": "parameter [39486,39502]"
    },
    {
      "src": ",: , [2688,2689]",
      "dest": ",: , [2192,2193]"
    },
    {
      "src": "if_statement [46987,47118]",
      "dest": "if_statement [51945,52076]"
    },
    {
      "src": "call_expression [32027,32095]",
      "dest": "call_expression [32026,32094]"
    },
    {
      "src": "pure: pure [11358,11362]",
      "dest": "pure: pure [10905,10909]"
    },
    {
      "src": "call_argument [34459,34460]",
      "dest": "call_argument [34626,34627]"
    },
    {
      "src": "(: ( [19609,19610]",
      "dest": "(: ( [19202,19203]"
    },
    {
      "src": "type_name [39083,39090]",
      "dest": "type_name [39641,39648]"
    },
    {
      "src": "public: public [40153,40159]",
      "dest": "public: public [44273,44279]"
    },
    {
      "src": "uint256: uint256 [23562,23569]",
      "dest": "uint256: uint256 [23561,23568]"
    },
    {
      "src": "if: if [44626,44628]",
      "dest": "if: if [49245,49247]"
    },
    {
      "src": "contract_body [38877,39112]",
      "dest": "contract_body [39435,39670]"
    },
    {
      "src": "=: = [50424,50425]",
      "dest": "=: = [57518,57519]"
    },
    {
      "src": "parameter [28035,28039]",
      "dest": "parameter [28034,28038]"
    },
    {
      "src": "primitive_type [10069,10076]",
      "dest": "primitive_type [9616,9623]"
    },
    {
      "src": "): ) [45628,45629]",
      "dest": "): ) [50421,50422]"
    },
    {
      "src": "): ) [21382,21383]",
      "dest": "): ) [20995,20996]"
    },
    {
      "src": ",: , [29801,29802]",
      "dest": ",: , [29800,29801]"
    },
    {
      "src": "call_argument [47849,47884]",
      "dest": "call_argument [55418,55453]"
    },
    {
      "src": "identifier: poolValue [45704,45713]",
      "dest": "identifier: poolValue [50497,50506]"
    },
    {
      "src": "function_body [28041,28165]",
      "dest": "function_body [28040,28164]"
    },
    {
      "src": "): ) [21257,21258]",
      "dest": "): ) [20870,20871]"
    },
    {
      "src": "(: ( [43579,43580]",
      "dest": "(: ( [47975,47976]"
    },
    {
      "src": "address: address [30346,30353]",
      "dest": "address: address [30345,30352]"
    },
    {
      "src": "number_literal: 0 [35342,35343]",
      "dest": "number_literal: 0 [35509,35510]"
    },
    {
      "src": "string_literal [16224,16256]",
      "dest": "string_literal [15797,15829]"
    },
    {
      "src": "number_literal: 0 [10044,10045]",
      "dest": "number_literal: 0 [9591,9592]"
    },
    {
      "src": "(: ( [52763,52764]",
      "dest": "(: ( [60684,60685]"
    },
    {
      "src": "(: ( [53361,53362]",
      "dest": "(: ( [61282,61283]"
    },
    {
      "src": "string_literal [8479,8508]",
      "dest": "string_literal [8026,8055]"
    },
    {
      "src": "call_expression [45129,45190]",
      "dest": "call_expression [49871,49921]"
    },
    {
      "src": "uint256: uint256 [36130,36137]",
      "dest": "uint256: uint256 [36557,36564]"
    },
    {
      "src": "function_body [45387,45997]",
      "dest": "function_body [50180,50842]"
    },
    {
      "src": "number_literal: 0 [30434,30435]",
      "dest": "number_literal: 0 [30433,30434]"
    },
    {
      "src": "primitive_type [33388,33395]",
      "dest": "primitive_type [33387,33394]"
    },
    {
      "src": "primitive_type [53400,53407]",
      "dest": "primitive_type [61321,61328]"
    },
    {
      "src": "[: [ [52993,52994]",
      "dest": "[: [ [60914,60915]"
    },
    {
      "src": ",: , [30022,30023]",
      "dest": ",: , [30021,30022]"
    },
    {
      "src": "visibility [6455,6462]",
      "dest": "visibility [5982,5989]"
    },
    {
      "src": "function_body [28767,28987]",
      "dest": "function_body [28766,28986]"
    },
    {
      "src": "{: { [45635,45636]",
      "dest": "{: { [50428,50429]"
    },
    {
      "src": "identifier: _minter [51910,51917]",
      "dest": "identifier: _minter [59833,59840]"
    },
    {
      "src": "): ) [52053,52054]",
      "dest": "): ) [59976,59977]"
    },
    {
      "src": "type_name [37129,37135]",
      "dest": "type_name [37556,37562]"
    },
    {
      "src": "type_name [2415,2422]",
      "dest": "type_name [1919,1926]"
    },
    {
      "src": "parameter [28695,28710]",
      "dest": "parameter [28694,28709]"
    },
    {
      "src": "identifier: _totalSupply [30547,30559]",
      "dest": "identifier: _totalSupply [30546,30558]"
    },
    {
      "src": "function: function [36147,36155]",
      "dest": "function: function [36574,36582]"
    },
    {
      "src": "event_definition [41152,41205]",
      "dest": "event_definition [45324,45377]"
    },
    {
      "src": "type_name [17939,17946]",
      "dest": "type_name [17512,17519]"
    },
    {
      "src": "view: view [37084,37088]",
      "dest": "view: view [37511,37515]"
    },
    {
      "src": "return_statement [27519,27531]",
      "dest": "return_statement [27518,27530]"
    },
    {
      "src": "uint256: uint256 [23740,23747]",
      "dest": "uint256: uint256 [23739,23746]"
    },
    {
      "src": "): ) [43217,43218]",
      "dest": "): ) [47389,47390]"
    },
    {
      "src": "identifier: Joined [45949,45955]",
      "dest": "identifier: Joined [50794,50800]"
    },
    {
      "src": "(: ( [36065,36066]",
      "dest": "(: ( [36492,36493]"
    },
    {
      "src": "emit: emit [35269,35273]",
      "dest": "emit: emit [35436,35440]"
    },
    {
      "src": "!=: != [12760,12762]",
      "dest": "!=: != [12307,12309]"
    },
    {
      "src": "expression_statement [30547,30587]",
      "dest": "expression_statement [30546,30586]"
    },
    {
      "src": ",: , [45966,45967]",
      "dest": ",: , [50811,50812]"
    },
    {
      "src": "): ) [27506,27507]",
      "dest": "): ) [27505,27506]"
    },
    {
      "src": "identifier: amount [31444,31450]",
      "dest": "identifier: amount [31443,31449]"
    },
    {
      "src": "string [21131,21179]",
      "dest": "string [20744,20792]"
    },
    {
      "src": "primitive_type [11431,11438]",
      "dest": "primitive_type [10978,10985]"
    },
    {
      "src": "comment: /**  * @title Initializable  *  * @dev Helper contract to support initializer functions. To use it, replace  * the constructor with a function that has the `initializer` modifier.  * WARNING: Unlike constructors, initializer functions must be manually  * invoked. This applies both to deploying an Initializable contract, as well  * as extending an Initializable contract via inheritance.  * WARNING: When used with inheritance, manual care must be taken to not invoke  * a parent initializer twice, or ensure that all initializers are idempotent,  * because this is not dealt with automatically as with constructors.  */ [20039,20671]",
      "dest": "comment: /**  * @title Initializable  *  * @dev Helper contract to support initializer functions. To use it, replace  * the constructor with a function that has the `initializer` modifier.  * WARNING: Unlike constructors, initializer functions must be manually  * invoked. This applies both to deploying an Initializable contract, as well  * as extending an Initializable contract via inheritance.  * WARNING: When used with inheritance, manual care must be taken to not invoke  * a parent initializer twice, or ensure that all initializers are idempotent,  * because this is not dealt with automatically as with constructors.  */ [19652,20284]"
    },
    {
      "src": ".: . [52904,52905]",
      "dest": ".: . [60825,60826]"
    },
    {
      "src": "identifier: _name [24292,24297]",
      "dest": "identifier: _name [24291,24296]"
    },
    {
      "src": "primitive_type [48462,48469]",
      "dest": "primitive_type [56209,56216]"
    },
    {
      "src": "): ) [15036,15037]",
      "dest": "): ) [14609,14610]"
    },
    {
      "src": "identifier: _approve [27387,27395]",
      "dest": "identifier: _approve [27386,27394]"
    },
    {
      "src": "parameter [2671,2688]",
      "dest": "parameter [2175,2192]"
    },
    {
      "src": "number_literal: 0 [47213,47214]",
      "dest": "number_literal: 0 [52171,52172]"
    },
    {
      "src": "call_argument [48079,48092]",
      "dest": "call_argument [55719,55732]"
    },
    {
      "src": "event: event [41152,41157]",
      "dest": "event: event [45324,45329]"
    },
    {
      "src": "address: address [42004,42011]",
      "dest": "address: address [46176,46183]"
    },
    {
      "src": "identifier: msg [47424,47427]",
      "dest": "identifier: msg [52382,52385]"
    },
    {
      "src": "identifier: msgSender [34361,34370]",
      "dest": "identifier: msgSender [34528,34537]"
    },
    {
      "src": "function_definition [46228,47451]",
      "dest": "function_definition [51073,52409]"
    },
    {
      "src": "}: } [18771,18772]",
      "dest": "}: } [18344,18345]"
    },
    {
      "src": "): ) [52248,52249]",
      "dest": "): ) [60169,60170]"
    },
    {
      "src": "identifier: newOwner [35542,35550]",
      "dest": "identifier: newOwner [35709,35717]"
    },
    {
      "src": "call_expression [44572,44615]",
      "dest": "call_expression [49191,49234]"
    },
    {
      "src": "identifier: _totalSupply [46742,46754]",
      "dest": "identifier: _totalSupply [51700,51712]"
    },
    {
      "src": "identifier: SafeMath [8102,8110]",
      "dest": "identifier: SafeMath [7649,7657]"
    },
    {
      "src": "call_argument [12124,12150]",
      "dest": "call_argument [11671,11697]"
    },
    {
      "src": "identifier: amountToMint [45516,45528]",
      "dest": "identifier: amountToMint [50309,50321]"
    },
    {
      "src": "binary_expression [18398,18419]",
      "dest": "binary_expression [17971,17992]"
    },
    {
      "src": "return_statement [16190,16258]",
      "dest": "return_statement [15763,15831]"
    },
    {
      "src": "function: function [43557,43565]",
      "dest": "function: function [47953,47961]"
    },
    {
      "src": "variable_declaration_statement [9406,9424]",
      "dest": "variable_declaration_statement [8953,8971]"
    },
    {
      "src": "type_name [12730,12737]",
      "dest": "type_name [12277,12284]"
    },
    {
      "src": "call_expression [17700,17781]",
      "dest": "call_expression [17273,17354]"
    },
    {
      "src": "=>: => [23699,23701]",
      "dest": "=>: => [23698,23700]"
    },
    {
      "src": "identifier: msg [50491,50494]",
      "dest": "identifier: msg [57585,57588]"
    },
    {
      "src": "identifier: data [16661,16665]",
      "dest": "identifier: data [16234,16238]"
    },
    {
      "src": "event_definition [41346,41384]",
      "dest": "event_definition [45518,45556]"
    },
    {
      "src": "type_name [24675,24681]",
      "dest": "type_name [24674,24680]"
    },
    {
      "src": "identifier: _owner [35295,35301]",
      "dest": "identifier: _owner [35462,35468]"
    },
    {
      "src": "(: ( [19497,19498]",
      "dest": "(: ( [19090,19091]"
    },
    {
      "src": "{: { [18609,18610]",
      "dest": "{: { [18182,18183]"
    },
    {
      "src": "call_expression [53667,53725]",
      "dest": "call_expression [61588,61646]"
    },
    {
      "src": "): ) [37138,37139]",
      "dest": "): ) [37565,37566]"
    },
    {
      "src": "return_type_definition [43594,43611]",
      "dest": "return_type_definition [47990,48007]"
    },
    {
      "src": "parameter [17629,17655]",
      "dest": "parameter [17202,17228]"
    },
    {
      "src": "identifier: calc_withdraw_one_coin [53438,53460]",
      "dest": "identifier: calc_withdraw_one_coin [61359,61381]"
    },
    {
      "src": "type_name [17614,17621]",
      "dest": "type_name [17187,17194]"
    },
    {
      "src": "emit: emit [31409,31413]",
      "dest": "emit: emit [31408,31412]"
    },
    {
      "src": "memory: memory [17926,17932]",
      "dest": "memory: memory [17499,17505]"
    },
    {
      "src": "{: { [43612,43613]",
      "dest": "{: { [48008,48009]"
    },
    {
      "src": "parameter [11299,11308]",
      "dest": "parameter [10846,10855]"
    },
    {
      "src": "assignment_expression [43068,43092]",
      "dest": "assignment_expression [47240,47264]"
    },
    {
      "src": "type_name [37163,37170]",
      "dest": "type_name [37590,37597]"
    },
    {
      "src": "(: ( [35595,35596]",
      "dest": "(: ( [35762,35763]"
    },
    {
      "src": "string_literal [17740,17780]",
      "dest": "string_literal [17313,17353]"
    },
    {
      "src": "identifier: onlyOwner [51889,51898]",
      "dest": "identifier: onlyOwner [59812,59821]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/utils/ReentrancyGuard.sol [4754,4812]",
      "dest": "comment: // pragma solidity ^0.6.0; [4338,4364]"
    },
    {
      "src": "]: ] [31297,31298]",
      "dest": "]: ] [31296,31297]"
    },
    {
      "src": "string [10753,10781]",
      "dest": "string [10300,10328]"
    },
    {
      "src": "is: is [39754,39756]",
      "dest": "is: is [43874,43876]"
    },
    {
      "src": "public: public [51882,51888]",
      "dest": "public: public [59805,59811]"
    },
    {
      "src": ",: , [50501,50502]",
      "dest": ",: , [57595,57596]"
    },
    {
      "src": "type_name [43428,43434]",
      "dest": "type_name [47824,47830]"
    },
    {
      "src": "number_literal: 0 [31144,31145]",
      "dest": "number_literal: 0 [31143,31144]"
    },
    {
      "src": ".: . [17721,17722]",
      "dest": ".: . [17294,17295]"
    },
    {
      "src": "identifier: __curveGauge [42932,42944]",
      "dest": "identifier: __curveGauge [47104,47116]"
    },
    {
      "src": "call_argument [43256,43258]",
      "dest": "call_argument [47428,47430]"
    },
    {
      "src": "(: ( [27455,27456]",
      "dest": "(: ( [27454,27455]"
    },
    {
      "src": "revert: revert [18797,18803]",
      "dest": "revert: revert [18370,18376]"
    },
    {
      "src": "expression_statement [7222,7241]",
      "dest": "expression_statement [6749,6768]"
    },
    {
      "src": ",: , [39768,39769]",
      "dest": ",: , [43888,43889]"
    },
    {
      "src": "visibility [36176,36184]",
      "dest": "visibility [36603,36611]"
    },
    {
      "src": "): ) [44118,44119]",
      "dest": "): ) [48284,48285]"
    },
    {
      "src": "bool: bool [27323,27327]",
      "dest": "bool: bool [27322,27326]"
    },
    {
      "src": "binary_expression [29698,29721]",
      "dest": "binary_expression [29697,29720]"
    },
    {
      "src": "primitive_type [20784,20788]",
      "dest": "primitive_type [20397,20401]"
    },
    {
      "src": "): ) [26627,26628]",
      "dest": "): ) [26626,26627]"
    },
    {
      "src": "parameter [36662,36687]",
      "dest": "parameter [37089,37114]"
    },
    {
      "src": "bool: bool [18161,18165]",
      "dest": "bool: bool [17734,17738]"
    },
    {
      "src": "expression_statement [28052,28136]",
      "dest": "expression_statement [28051,28135]"
    },
    {
      "src": "{: { [34609,34610]",
      "dest": "{: { [34776,34777]"
    },
    {
      "src": "=: = [6437,6438]",
      "dest": "=: = [5964,5965]"
    },
    {
      "src": ",: , [40982,40983]",
      "dest": ",: , [45154,45155]"
    },
    {
      "src": "primitive_type [13845,13852]",
      "dest": "primitive_type [13415,13422]"
    },
    {
      "src": "expression_statement [44919,44936]",
      "dest": "expression_statement [49621,49638]"
    },
    {
      "src": "(: ( [26622,26623]",
      "dest": "(: ( [26621,26622]"
    },
    {
      "src": "comment: // prettier-ignore [52829,52847]",
      "dest": "comment: // prettier-ignore [60750,60768]"
    },
    {
      "src": "]: ] [38994,38995]",
      "dest": "]: ] [39552,39553]"
    },
    {
      "src": ".: . [47427,47428]",
      "dest": ".: . [52385,52386]"
    },
    {
      "src": "identifier: _transfer [26107,26116]",
      "dest": "identifier: _transfer [26106,26115]"
    },
    {
      "src": "type_name [18161,18165]",
      "dest": "type_name [17734,17738]"
    },
    {
      "src": "): ) [15233,15234]",
      "dest": "): ) [14806,14807]"
    },
    {
      "src": "): ) [28133,28134]",
      "dest": "): ) [28132,28133]"
    },
    {
      "src": "identifier: ITrueLender [38564,38575]",
      "dest": "identifier: ITrueLender [39104,39115]"
    },
    {
      "src": "primitive_type [37819,37826]",
      "dest": "primitive_type [38341,38348]"
    },
    {
      "src": "identifier: repay [50730,50735]",
      "dest": "identifier: repay [58644,58649]"
    },
    {
      "src": "!=: != [32122,32124]",
      "dest": "!=: != [32121,32123]"
    },
    {
      "src": "parameter [9735,9744]",
      "dest": "parameter [9282,9291]"
    },
    {
      "src": "internal: internal [32652,32660]",
      "dest": "internal: internal [32651,32659]"
    },
    {
      "src": "): ) [21112,21113]",
      "dest": "): ) [20725,20726]"
    },
    {
      "src": "identifier: _allowances [27418,27429]",
      "dest": "identifier: _allowances [27417,27428]"
    },
    {
      "src": "visibility [23712,23719]",
      "dest": "visibility [23711,23718]"
    },
    {
      "src": ",: , [47786,47787]",
      "dest": ",: , [55355,55356]"
    },
    {
      "src": "address: address [32044,32051]",
      "dest": "address: address [32043,32050]"
    },
    {
      "src": "return_statement [10037,10046]",
      "dest": "return_statement [9584,9593]"
    },
    {
      "src": "{: { [25747,25748]",
      "dest": "{: { [25746,25747]"
    },
    {
      "src": "emit: emit [30002,30006]",
      "dest": "emit: emit [30001,30005]"
    },
    {
      "src": "): ) [53705,53706]",
      "dest": "): ) [61626,61627]"
    },
    {
      "src": "identifier: data [18233,18237]",
      "dest": "identifier: data [17806,17810]"
    },
    {
      "src": "(: ( [36262,36263]",
      "dest": "(: ( [36689,36690]"
    },
    {
      "src": "return_type_definition [21569,21583]",
      "dest": "return_type_definition [21182,21196]"
    },
    {
      "src": "event_paramater [34135,34164]",
      "dest": "event_paramater [34302,34331]"
    },
    {
      "src": "call_expression [47867,47884]",
      "dest": "call_expression [55436,55453]"
    },
    {
      "src": "using: using [23543,23548]",
      "dest": "using: using [23542,23547]"
    },
    {
      "src": "type_alias [23549,23557]",
      "dest": "type_alias [23548,23556]"
    },
    {
      "src": "return: return [8899,8905]",
      "dest": "return: return [8446,8452]"
    },
    {
      "src": "identifier: JoiningFeeChanged [40688,40705]",
      "dest": "identifier: JoiningFeeChanged [44860,44877]"
    },
    {
      "src": "): ) [51924,51925]",
      "dest": "): ) [59847,59848]"
    },
    {
      "src": "visibility [10693,10701]",
      "dest": "visibility [10240,10248]"
    },
    {
      "src": "identifier: _lender [42998,43005]",
      "dest": "identifier: _lender [47170,47177]"
    },
    {
      "src": "return_statement [16623,16684]",
      "dest": "return_statement [16196,16257]"
    },
    {
      "src": "): ) [2390,2391]",
      "dest": "): ) [1894,1895]"
    },
    {
      "src": ".: . [53437,53438]",
      "dest": ".: . [61358,61359]"
    },
    {
      "src": "function: function [37805,37813]",
      "dest": "function: function [38327,38335]"
    },
    {
      "src": "visibility [2392,2400]",
      "dest": "visibility [1896,1904]"
    },
    {
      "src": "modifier_invocation [49131,49143]",
      "dest": "modifier_invocation [56946,56958]"
    },
    {
      "src": "function_definition [44455,44769]",
      "dest": "function_definition [49074,49388]"
    },
    {
      "src": "call_argument [10117,10152]",
      "dest": "call_argument [9664,9699]"
    },
    {
      "src": "identifier: require [8463,8470]",
      "dest": "identifier: require [8010,8017]"
    },
    {
      "src": "type_name [41360,41367]",
      "dest": "type_name [45532,45539]"
    },
    {
      "src": "yul_evm_builtin [22039,22050]",
      "dest": "yul_evm_builtin [21652,21663]"
    },
    {
      "src": "type_cast_expression [30506,30516]",
      "dest": "type_cast_expression [30505,30515]"
    },
    {
      "src": "(: ( [35615,35616]",
      "dest": "(: ( [35782,35783]"
    },
    {
      "src": "): ) [46735,46736]",
      "dest": "): ) [51693,51694]"
    },
    {
      "src": ".: . [45488,45489]",
      "dest": ".: . [50281,50282]"
    },
    {
      "src": "comment: /**      * @dev Get total balance of curve.fi pool tokens      */ [43484,43551]",
      "dest": "comment: /**      * @dev Get total balance of curve.fi pool tokens      */ [47880,47947]"
    },
    {
      "src": "(: ( [30015,30016]",
      "dest": "(: ( [30014,30015]"
    },
    {
      "src": "primitive_type [17939,17946]",
      "dest": "primitive_type [17512,17519]"
    },
    {
      "src": "override_specifier [25715,25723]",
      "dest": "override_specifier [25714,25722]"
    },
    {
      "src": "identifier: ERC20 [39770,39775]",
      "dest": "identifier: ERC20 [43890,43895]"
    },
    {
      "src": "parameter [52229,52248]",
      "dest": "parameter [60150,60169]"
    },
    {
      "src": "identifier: IYToken [37163,37170]",
      "dest": "identifier: IYToken [37590,37597]"
    },
    {
      "src": ",: , [38975,38976]",
      "dest": ",: , [39533,39534]"
    },
    {
      "src": "call_expression [49689,49722]",
      "dest": "call_expression [57863,57896]"
    },
    {
      "src": "identifier: require [10097,10104]",
      "dest": "identifier: require [9644,9651]"
    },
    {
      "src": "type_cast_expression [43248,43259]",
      "dest": "type_cast_expression [47420,47431]"
    },
    {
      "src": "(: ( [47343,47344]",
      "dest": "(: ( [52301,52302]"
    },
    {
      "src": ".: . [28118,28119]",
      "dest": ".: . [28117,28118]"
    },
    {
      "src": "identifier: success [18166,18173]",
      "dest": "identifier: success [17739,17746]"
    },
    {
      "src": "\": \" [50221,50222]",
      "dest": "\": \" [57314,57315]"
    },
    {
      "src": "memory: memory [17636,17642]",
      "dest": "memory: memory [17209,17215]"
    },
    {
      "src": "=: = [31372,31373]",
      "dest": "=: = [31371,31372]"
    },
    {
      "src": "primitive_type [36263,36270]",
      "dest": "primitive_type [36690,36697]"
    },
    {
      "src": ".: . [45434,45435]",
      "dest": ".: . [50227,50228]"
    },
    {
      "src": "comment: /**      * @dev exit pool      * 1. Transfer pool tokens from sender      * 2. Burn pool tokens      * 3. Transfer value of pool tokens in TUSD to sender      */ [37852,38018]",
      "dest": "comment: /**      * @dev exit pool      * 1. Transfer pool tokens from sender      * 2. Burn pool tokens      * 3. Transfer value of pool tokens in TUSD to sender      */ [38374,38540]"
    },
    {
      "src": "uint256: uint256 [40965,40972]",
      "dest": "uint256: uint256 [45137,45144]"
    },
    {
      "src": ",: , [48795,48796]",
      "dest": ",: , [56610,56611]"
    },
    {
      "src": "identifier: mul [9720,9723]",
      "dest": "identifier: mul [9267,9270]"
    },
    {
      "src": "address: address [53692,53699]",
      "dest": "address: address [61613,61620]"
    },
    {
      "src": "\": \" [15262,15263]",
      "dest": "\": \" [14835,14836]"
    },
    {
      "src": "emit_statement [48847,48868]",
      "dest": "emit_statement [56662,56683]"
    },
    {
      "src": "function_body [43956,44221]",
      "dest": "function_body [48252,48350]"
    },
    {
      "src": "): ) [2728,2729]",
      "dest": "): ) [2232,2233]"
    },
    {
      "src": "identifier: b [9374,9375]",
      "dest": "identifier: b [8921,8922]"
    },
    {
      "src": "{: { [9355,9356]",
      "dest": "{: { [8902,8903]"
    },
    {
      "src": "type_name [27215,27222]",
      "dest": "type_name [27214,27221]"
    },
    {
      "src": "function: function [43373,43381]",
      "dest": "function: function [47769,47777]"
    },
    {
      "src": "uint256: uint256 [45353,45360]",
      "dest": "uint256: uint256 [50146,50153]"
    },
    {
      "src": "expression_statement [52321,52339]",
      "dest": "expression_statement [60242,60260]"
    },
    {
      "src": "comment: // calculate amount of curve.fi pool tokens [46602,46645]",
      "dest": "comment: // calculate amount of curve.fi pool tokens [51560,51603]"
    },
    {
      "src": "identifier: length [18409,18415]",
      "dest": "identifier: length [17982,17988]"
    },
    {
      "src": "): ) [51952,51953]",
      "dest": "): ) [59875,59876]"
    },
    {
      "src": ".: . [52061,52062]",
      "dest": ".: . [59984,59985]"
    },
    {
      "src": "view: view [25388,25392]",
      "dest": "view: view [25387,25391]"
    },
    {
      "src": "(: ( [52354,52355]",
      "dest": "(: ( [60275,60276]"
    },
    {
      "src": "type_name [42004,42011]",
      "dest": "type_name [46176,46183]"
    },
    {
      "src": "comment: /**      * @dev Emitted when borrower repays the pool      * @param payer Address of borrower      * @param amount Amount repaid      */ [41845,41985]",
      "dest": "comment: /**      * @dev Emitted when borrower repays the pool      * @param payer Address of borrower      * @param amount Amount repaid      */ [46017,46157]"
    },
    {
      "src": "type_name [42596,42606]",
      "dest": "type_name [46768,46778]"
    },
    {
      "src": "visibility [45099,45107]",
      "dest": "visibility [49784,49792]"
    },
    {
      "src": "identifier: symbol [24645,24651]",
      "dest": "identifier: symbol [24644,24650]"
    },
    {
      "src": "type_name [12679,12685]",
      "dest": "type_name [12226,12232]"
    },
    {
      "src": "internal: internal [12707,12715]",
      "dest": "internal: internal [12254,12262]"
    },
    {
      "src": "call_expression [46696,46755]",
      "dest": "call_expression [51654,51713]"
    },
    {
      "src": "[: [ [29945,29946]",
      "dest": "[: [ [29944,29945]"
    },
    {
      "src": ",: , [18053,18054]",
      "dest": ",: , [17626,17627]"
    },
    {
      "src": "expression_statement [42918,42945]",
      "dest": "expression_statement [47090,47117]"
    },
    {
      "src": "primitive_type [31227,31234]",
      "dest": "primitive_type [31226,31233]"
    },
    {
      "src": "state_variable_declaration [40407,40436]",
      "dest": "state_variable_declaration [44527,44556]"
    },
    {
      "src": "user_defined_type [23529,23535]",
      "dest": "user_defined_type [23528,23534]"
    },
    {
      "src": "parameter [49087,49111]",
      "dest": "parameter [56902,56926]"
    },
    {
      "src": "function_definition [53590,53733]",
      "dest": "function_definition [61511,61654]"
    },
    {
      "src": "call_expression [52880,52904]",
      "dest": "call_expression [60801,60825]"
    },
    {
      "src": "if: if [18249,18251]",
      "dest": "if: if [17822,17824]"
    },
    {
      "src": "call_argument [28801,28813]",
      "dest": "call_argument [28800,28812]"
    },
    {
      "src": "call_argument [29617,29637]",
      "dest": "call_argument [29616,29636]"
    },
    {
      "src": "(: ( [8833,8834]",
      "dest": "(: ( [8380,8381]"
    },
    {
      "src": "binary_expression [8471,8477]",
      "dest": "binary_expression [8018,8024]"
    },
    {
      "src": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [2738,3008]",
      "dest": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [2242,2512]"
    },
    {
      "src": "): ) [19498,19499]",
      "dest": "): ) [19091,19092]"
    },
    {
      "src": "visibility [36413,36421]",
      "dest": "visibility [36840,36848]"
    },
    {
      "src": "(: ( [35898,35899]",
      "dest": "(: ( [36160,36161]"
    },
    {
      "src": "uint256: uint256 [39041,39048]",
      "dest": "uint256: uint256 [39599,39606]"
    },
    {
      "src": "[: [ [28861,28862]",
      "dest": "[: [ [28860,28861]"
    },
    {
      "src": "identifier: msgSender [34463,34472]",
      "dest": "identifier: msgSender [34630,34639]"
    },
    {
      "src": "call_argument [10753,10781]",
      "dest": "call_argument [10300,10328]"
    },
    {
      "src": "user_defined_type [40280,40294]",
      "dest": "user_defined_type [44400,44414]"
    },
    {
      "src": "uint256: uint256 [35924,35931]",
      "dest": "uint256: uint256 [36186,36193]"
    },
    {
      "src": "virtual: virtual [32008,32015]",
      "dest": "virtual: virtual [32007,32014]"
    },
    {
      "src": "identifier: b [10750,10751]",
      "dest": "identifier: b [10297,10298]"
    },
    {
      "src": ",: , [34796,34797]",
      "dest": ",: , [34963,34964]"
    },
    {
      "src": "function_definition [49047,50586]",
      "dest": "function_definition [56862,57680]"
    },
    {
      "src": "boolean_literal [53110,53114]",
      "dest": "boolean_literal [61031,61035]"
    },
    {
      "src": "call_argument [12758,12764]",
      "dest": "call_argument [12305,12311]"
    },
    {
      "src": "type_name [24238,24244]",
      "dest": "type_name [24237,24243]"
    },
    {
      "src": "type_name [38670,38677]",
      "dest": "type_name [39210,39217]"
    },
    {
      "src": "identifier: staker [41181,41187]",
      "dest": "identifier: staker [45353,45359]"
    },
    {
      "src": "identifier: claimableFees [50426,50439]",
      "dest": "identifier: claimableFees [57520,57533]"
    },
    {
      "src": "(: ( [28872,28873]",
      "dest": "(: ( [28871,28872]"
    },
    {
      "src": "=: = [45823,45824]",
      "dest": "=: = [50616,50617]"
    },
    {
      "src": "(: ( [27448,27449]",
      "dest": "(: ( [27447,27448]"
    },
    {
      "src": "(: ( [30505,30506]",
      "dest": "(: ( [30504,30505]"
    },
    {
      "src": "function: function [2653,2661]",
      "dest": "function: function [2157,2165]"
    },
    {
      "src": "(: ( [16597,16598]",
      "dest": "(: ( [16170,16171]"
    },
    {
      "src": "memory: memory [17681,17687]",
      "dest": "memory: memory [17254,17260]"
    },
    {
      "src": "}: } [43267,43268]",
      "dest": "}: } [47439,47440]"
    },
    {
      "src": ",: , [17937,17938]",
      "dest": ",: , [17510,17511]"
    },
    {
      "src": "call_argument [45916,45920]",
      "dest": "call_argument [50761,50765]"
    },
    {
      "src": "): ) [10723,10724]",
      "dest": "): ) [10270,10271]"
    },
    {
      "src": "function: function [51766,51774]",
      "dest": "function: function [59689,59697]"
    },
    {
      "src": "if_statement [45612,45728]",
      "dest": "if_statement [50405,50521]"
    },
    {
      "src": "parameter [11372,11379]",
      "dest": "parameter [10919,10926]"
    },
    {
      "src": "uint256: uint256 [9724,9731]",
      "dest": "uint256: uint256 [9271,9278]"
    },
    {
      "src": "visibility [12707,12715]",
      "dest": "visibility [12254,12262]"
    },
    {
      "src": "parameter [2415,2422]",
      "dest": "parameter [1919,1926]"
    },
    {
      "src": "visibility [25381,25387]",
      "dest": "visibility [25380,25386]"
    },
    {
      "src": "(: ( [27204,27205]",
      "dest": "(: ( [27203,27204]"
    },
    {
      "src": "identifier: expectedAmount [49449,49463]",
      "dest": "identifier: expectedAmount [57140,57154]"
    },
    {
      "src": "event_paramater [42004,42025]",
      "dest": "event_paramater [46176,46197]"
    },
    {
      "src": "call_argument [49783,49823]",
      "dest": "call_argument [57935,57975]"
    },
    {
      "src": "identifier: value [4740,4745]",
      "dest": "identifier: value [4247,4252]"
    },
    {
      "src": "true: true [28975,28979]",
      "dest": "true: true [28974,28978]"
    },
    {
      "src": ",: , [45783,45784]",
      "dest": ",: , [50576,50577]"
    },
    {
      "src": "identifier: Address [12975,12982]",
      "dest": "identifier: Address [12542,12549]"
    },
    {
      "src": "\": \" [42817,42818]",
      "dest": "\": \" [46989,46990]"
    },
    {
      "src": "type_cast_expression [45156,45176]",
      "dest": "type_cast_expression [49959,49979]"
    },
    {
      "src": "type_name [46493,46500]",
      "dest": "type_name [51451,51458]"
    },
    {
      "src": "type_name [53362,53369]",
      "dest": "type_name [61283,61290]"
    },
    {
      "src": "user_defined_type [34062,34069]",
      "dest": "user_defined_type [34229,34236]"
    },
    {
      "src": ",: , [49333,49334]",
      "dest": ",: , [47596,47597]"
    },
    {
      "src": "return_type_definition [24666,24689]",
      "dest": "return_type_definition [24665,24688]"
    },
    {
      "src": "comment: /**      * @dev Join the pool by depositing currency tokens      * @param amount amount of currency token to deposit      */ [45206,45333]",
      "dest": "comment: /**      * @dev Join the pool by depositing currency tokens      * @param amount amount of currency token to deposit      */ [49999,50126]"
    },
    {
      "src": "[: [ [22188,22189]",
      "dest": "[: [ [21801,21802]"
    },
    {
      "src": "(: ( [49623,49624]",
      "dest": "(: ( [57234,57235]"
    },
    {
      "src": "variable_declaration [49578,49602]",
      "dest": "variable_declaration [52892,52916]"
    },
    {
      "src": "function_definition [45339,45997]",
      "dest": "function_definition [50132,50842]"
    },
    {
      "src": "state_mutability [12073,12077]",
      "dest": "state_mutability [11620,11624]"
    },
    {
      "src": "(: ( [21242,21243]",
      "dest": "(: ( [20855,20856]"
    },
    {
      "src": "return: return [53660,53666]",
      "dest": "return: return [61581,61587]"
    },
    {
      "src": "}: } [22098,22099]",
      "dest": "}: } [21711,21712]"
    },
    {
      "src": "}: } [9451,9452]",
      "dest": "}: } [8998,8999]"
    },
    {
      "src": "assignment_expression [21399,21419]",
      "dest": "assignment_expression [21012,21032]"
    },
    {
      "src": "array_access [29959,29979]",
      "dest": "array_access [29958,29978]"
    },
    {
      "src": "identifier: account [13605,13612]",
      "dest": "identifier: account [13175,13182]"
    },
    {
      "src": "member_expression [31280,31302]",
      "dest": "member_expression [31279,31301]"
    },
    {
      "src": "string [29884,29924]",
      "dest": "string [29883,29923]"
    },
    {
      "src": "\": \" [18085,18086]",
      "dest": "\": \" [17658,17659]"
    },
    {
      "src": "primitive_type [11321,11327]",
      "dest": "primitive_type [10868,10874]"
    },
    {
      "src": "variable_declaration [21988,21998]",
      "dest": "variable_declaration [21601,21611]"
    },
    {
      "src": "parameter [48479,48504]",
      "dest": "parameter [56226,56251]"
    },
    {
      "src": "else: else [18307,18311]",
      "dest": "else: else [17880,17884]"
    },
    {
      "src": "string_literal [28906,28945]",
      "dest": "string_literal [28905,28944]"
    },
    {
      "src": "primitive_type [43659,43666]",
      "dest": "primitive_type [48055,48062]"
    },
    {
      "src": "identifier: value [15215,15220]",
      "dest": "identifier: value [14788,14793]"
    },
    {
      "src": "primitive_type [8845,8852]",
      "dest": "primitive_type [8392,8399]"
    },
    {
      "src": "{: { [35577,35578]",
      "dest": "{: { [35744,35745]"
    },
    {
      "src": "identifier: amounts [47967,47974]",
      "dest": "identifier: amounts [55537,55544]"
    },
    {
      "src": "identifier: amount [32264,32270]",
      "dest": "identifier: amount [32263,32269]"
    },
    {
      "src": "): ) [43245,43246]",
      "dest": "): ) [47417,47418]"
    },
    {
      "src": "): ) [44031,44032]",
      "dest": "): ) [48519,48520]"
    },
    {
      "src": "): ) [31397,31398]",
      "dest": "): ) [31396,31397]"
    },
    {
      "src": ",: , [47884,47885]",
      "dest": ",: , [55453,55454]"
    },
    {
      "src": "bool: bool [20916,20920]",
      "dest": "bool: bool [20529,20533]"
    },
    {
      "src": "uint256: uint256 [52986,52993]",
      "dest": "uint256: uint256 [60907,60914]"
    },
    {
      "src": "{: { [24281,24282]",
      "dest": "{: { [24280,24281]"
    },
    {
      "src": "override_specifier [45378,45386]",
      "dest": "override_specifier [50171,50179]"
    },
    {
      "src": "(: ( [45422,45423]",
      "dest": "(: ( [50215,50216]"
    },
    {
      "src": "(: ( [12757,12758]",
      "dest": "(: ( [12304,12305]"
    },
    {
      "src": "identifier: account [25699,25706]",
      "dest": "identifier: account [25698,25705]"
    },
    {
      "src": "type_name [17675,17680]",
      "dest": "type_name [17248,17253]"
    },
    {
      "src": "expression_statement [6560,6583]",
      "dest": "expression_statement [6087,6110]"
    },
    {
      "src": "): ) [36992,36993]",
      "dest": "): ) [37419,37420]"
    },
    {
      "src": "array_access [26358,26385]",
      "dest": "array_access [26357,26384]"
    },
    {
      "src": "binary_expression [21082,21113]",
      "dest": "binary_expression [20695,20726]"
    },
    {
      "src": "=: = [45529,45530]",
      "dest": "=: = [50322,50323]"
    },
    {
      "src": "): ) [18014,18015]",
      "dest": "): ) [17587,17588]"
    },
    {
      "src": "primitive_type [8879,8886]",
      "dest": "primitive_type [8426,8433]"
    },
    {
      "src": "identifier: owner [34571,34576]",
      "dest": "identifier: owner [34738,34743]"
    },
    {
      "src": "member_expression [51910,51933]",
      "dest": "member_expression [59833,59856]"
    },
    {
      "src": "visibility [24260,24268]",
      "dest": "visibility [24259,24267]"
    },
    {
      "src": "==: == [10016,10018]",
      "dest": "==: == [9563,9565]"
    },
    {
      "src": "call_argument [49163,49197]",
      "dest": "call_argument [56989,57023]"
    },
    {
      "src": "primitive_type [8435,8442]",
      "dest": "primitive_type [7982,7989]"
    },
    {
      "src": ",: , [53108,53109]",
      "dest": ",: , [61029,61030]"
    },
    {
      "src": "address: address [30426,30433]",
      "dest": "address: address [30425,30432]"
    },
    {
      "src": "parameter [16552,16578]",
      "dest": "parameter [16125,16151]"
    },
    {
      "src": "return_type_definition [19522,19547]",
      "dest": "return_type_definition [19115,19140]"
    },
    {
      "src": "}: } [35935,35936]",
      "dest": "}: } [36197,36198]"
    },
    {
      "src": "call_argument [32056,32094]",
      "dest": "call_argument [32055,32093]"
    },
    {
      "src": "identifier: _minter [43027,43034]",
      "dest": "identifier: _minter [47199,47206]"
    },
    {
      "src": "type_name [36358,36370]",
      "dest": "type_name [36785,36797]"
    },
    {
      "src": "identifier: div [45435,45438]",
      "dest": "identifier: div [50228,50231]"
    },
    {
      "src": "comment: // stake yCurve tokens in gauge [48106,48137]",
      "dest": "comment: // stake yCurve tokens in gauge [55746,55777]"
    },
    {
      "src": "string_literal [29639,29678]",
      "dest": "string_literal [29638,29677]"
    },
    {
      "src": "type_name [40984,40991]",
      "dest": "type_name [45156,45163]"
    },
    {
      "src": "visibility [36573,36581]",
      "dest": "visibility [37000,37008]"
    },
    {
      "src": "yul_assignment [22033,22056]",
      "dest": "yul_assignment [21646,21669]"
    },
    {
      "src": "return_type_definition [53631,53648]",
      "dest": "return_type_definition [61552,61569]"
    },
    {
      "src": "function_definition [37114,37172]",
      "dest": "function_definition [37541,37599]"
    },
    {
      "src": "function_definition [36147,36208]",
      "dest": "function_definition [36574,36635]"
    },
    {
      "src": "call_argument [10747,10748]",
      "dest": "call_argument [10294,10295]"
    },
    {
      "src": "identifier: currencyToken [37619,37632]",
      "dest": "identifier: currencyToken [38141,38154]"
    },
    {
      "src": "identifier: msg [50891,50894]",
      "dest": "identifier: msg [58816,58819]"
    },
    {
      "src": "member_expression [18398,18415]",
      "dest": "member_expression [17971,17988]"
    },
    {
      "src": "function: function [37002,37010]",
      "dest": "function: function [37429,37437]"
    },
    {
      "src": "identifier: claimableFees [50410,50423]",
      "dest": "identifier: claimableFees [57504,57517]"
    },
    {
      "src": "identifier: data [17126,17130]",
      "dest": "identifier: data [16699,16703]"
    },
    {
      "src": "identifier: IERC20 [43428,43434]",
      "dest": "identifier: IERC20 [47824,47830]"
    },
    {
      "src": "visibility [20789,20796]",
      "dest": "visibility [20402,20409]"
    },
    {
      "src": "(: ( [34794,34795]",
      "dest": "(: ( [34961,34962]"
    },
    {
      "src": "): ) [3838,3839]",
      "dest": "): ) [3345,3346]"
    },
    {
      "src": "identifier: TrueFiPool [39743,39753]",
      "dest": "identifier: TrueFiPool [43863,43873]"
    },
    {
      "src": "type_name [16167,16172]",
      "dest": "type_name [15740,15745]"
    },
    {
      "src": "type_name [40346,40353]",
      "dest": "type_name [44466,44473]"
    },
    {
      "src": "): ) [34384,34385]",
      "dest": "): ) [34551,34552]"
    },
    {
      "src": "identifier: amountToDeposit [45683,45698]",
      "dest": "identifier: amountToDeposit [50476,50491]"
    },
    {
      "src": "visibility [2236,2244]",
      "dest": "visibility [1740,1748]"
    },
    {
      "src": "uint256: uint256 [36305,36312]",
      "dest": "uint256: uint256 [36732,36739]"
    },
    {
      "src": "type_name [37042,37048]",
      "dest": "type_name [37469,37475]"
    },
    {
      "src": "type_name [39083,39092]",
      "dest": "type_name [39641,39650]"
    },
    {
      "src": "): ) [43610,43611]",
      "dest": "): ) [48006,48007]"
    },
    {
      "src": "identifier: currencyAmount [48237,48251]",
      "dest": "identifier: currencyAmount [55984,55998]"
    },
    {
      "src": "return_statement [43447,43469]",
      "dest": "return_statement [47843,47865]"
    },
    {
      "src": "identifier: _curveGauge [42918,42929]",
      "dest": "identifier: _curveGauge [47090,47101]"
    },
    {
      "src": "(: ( [26021,26022]",
      "dest": "(: ( [26020,26021]"
    },
    {
      "src": "parameter [16167,16179]",
      "dest": "parameter [15740,15752]"
    },
    {
      "src": "identifier: Transfer [30664,30672]",
      "dest": "identifier: Transfer [30663,30671]"
    },
    {
      "src": "comment: /**      * @notice Expected amount of minted Curve.fi yDAI/yUSDC/yUSDT/yTUSD tokens.      * Can be used to control slippage      * Called in flush() function      * @param currencyAmount amount to calculate for      */ [52510,52733]",
      "dest": "comment: /**      * @notice Expected amount of minted Curve.fi yDAI/yUSDC/yUSDT/yTUSD tokens.      * Can be used to control slippage      * Called in flush() function      * @param currencyAmount amount to calculate for      */ [60431,60654]"
    },
    {
      "src": "interface: interface [35834,35843]",
      "dest": "interface: interface [36096,36105]"
    },
    {
      "src": "): ) [50867,50868]",
      "dest": "): ) [58792,58793]"
    },
    {
      "src": "parameter [11310,11319]",
      "dest": "parameter [10857,10866]"
    },
    {
      "src": "): ) [35931,35932]",
      "dest": "): ) [36193,36194]"
    },
    {
      "src": ",: , [3798,3799]",
      "dest": ",: , [3305,3306]"
    },
    {
      "src": "identifier: decreaseAllowance [28677,28694]",
      "dest": "identifier: decreaseAllowance [28676,28693]"
    },
    {
      "src": "primitive_type [41360,41367]",
      "dest": "primitive_type [45532,45539]"
    },
    {
      "src": "}: } [10056,10057]",
      "dest": "}: } [9603,9604]"
    },
    {
      "src": "identifier: totalSupply [25518,25529]",
      "dest": "identifier: totalSupply [25517,25528]"
    },
    {
      "src": "function: function [36244,36252]",
      "dest": "function: function [36671,36679]"
    },
    {
      "src": "call_argument [50444,50447]",
      "dest": "call_argument [57538,57541]"
    },
    {
      "src": "primitive_type [21988,21995]",
      "dest": "primitive_type [21601,21608]"
    },
    {
      "src": "identifier: amount [4223,4229]",
      "dest": "identifier: amount [3730,3736]"
    },
    {
      "src": "member_expression [50546,50556]",
      "dest": "member_expression [57640,57650]"
    },
    {
      "src": "comment: // Any calls to nonReentrant after this point will fail [7157,7212]",
      "dest": "comment: // Any calls to nonReentrant after this point will fail [6684,6739]"
    },
    {
      "src": "call_argument [29723,29760]",
      "dest": "call_argument [29722,29759]"
    },
    {
      "src": "identifier: _decimals [32672,32681]",
      "dest": "identifier: _decimals [32671,32680]"
    },
    {
      "src": "identifier: _owner [34774,34780]",
      "dest": "identifier: _owner [34941,34947]"
    },
    {
      "src": "binary_expression [12758,12764]",
      "dest": "binary_expression [12305,12311]"
    },
    {
      "src": "identifier: require [15245,15252]",
      "dest": "identifier: require [14818,14825]"
    },
    {
      "src": "(: ( [44600,44601]",
      "dest": "(: ( [49219,49220]"
    },
    {
      "src": "identifier: amount [29567,29573]",
      "dest": "identifier: amount [29566,29572]"
    },
    {
      "src": "identifier: spender [32255,32262]",
      "dest": "identifier: spender [32254,32261]"
    },
    {
      "src": "private: private [17985,17992]",
      "dest": "private: private [17558,17565]"
    },
    {
      "src": "return_statement [10166,10175]",
      "dest": "return_statement [9713,9722]"
    },
    {
      "src": "): ) [24258,24259]",
      "dest": "): ) [24257,24258]"
    },
    {
      "src": "yul_path [13936,13940]",
      "dest": "yul_path [13506,13510]"
    },
    {
      "src": "{: { [25571,25572]",
      "dest": "{: { [25570,25571]"
    },
    {
      "src": "): ) [52973,52974]",
      "dest": "): ) [60894,60895]"
    },
    {
      "src": "comment: // first staker mints same amount deposited [45559,45602]",
      "dest": "comment: // first staker mints same amount deposited [50352,50395]"
    },
    {
      "src": "identifier: b [12061,12062]",
      "dest": "identifier: b [11608,11609]"
    },
    {
      "src": "): ) [4229,4230]",
      "dest": "): ) [3736,3737]"
    },
    {
      "src": "(: ( [44117,44118]",
      "dest": "(: ( [48283,48284]"
    },
    {
      "src": "comment: // calculate fees and transfer remainder [50299,50339]",
      "dest": "comment: // calculate fees and transfer remainder [57393,57433]"
    },
    {
      "src": "internal: internal [11349,11357]",
      "dest": "internal: internal [10896,10904]"
    },
    {
      "src": "(: ( [29983,29984]",
      "dest": "(: ( [29982,29983]"
    },
    {
      "src": "\": \" [32056,32057]",
      "dest": "\": \" [32055,32056]"
    },
    {
      "src": "): ) [46736,46737]",
      "dest": "): ) [51694,51695]"
    },
    {
      "src": "type_name [33367,33374]",
      "dest": "type_name [33366,33373]"
    },
    {
      "src": "primitive_type [36199,36206]",
      "dest": "primitive_type [36626,36633]"
    },
    {
      "src": "identifier: account [31269,31276]",
      "dest": "identifier: account [31268,31275]"
    },
    {
      "src": "interface: interface [36611,36620]",
      "dest": "interface: interface [37038,37047]"
    },
    {
      "src": "identifier: poolValue [43914,43923]",
      "dest": "identifier: yTokenValue [48208,48219]"
    },
    {
      "src": "{: { [23536,23537]",
      "dest": "{: { [23535,23536]"
    },
    {
      "src": "): ) [42271,42272]",
      "dest": "): ) [46443,46444]"
    },
    {
      "src": "): ) [11379,11380]",
      "dest": "): ) [10926,10927]"
    },
    {
      "src": "return: return [43623,43629]",
      "dest": "return: return [48019,48025]"
    },
    {
      "src": ",: , [33356,33357]",
      "dest": ",: , [33355,33356]"
    },
    {
      "src": "function: function [17872,17880]",
      "dest": "function: function [17445,17453]"
    },
    {
      "src": "external: external [37635,37643]",
      "dest": "external: external [38157,38165]"
    },
    {
      "src": "=: = [21962,21963]",
      "dest": "=: = [21575,21576]"
    },
    {
      "src": "): ) [10020,10021]",
      "dest": "): ) [9567,9568]"
    },
    {
      "src": ",: , [40963,40964]",
      "dest": ",: , [45135,45136]"
    },
    {
      "src": "{: { [42781,42782]",
      "dest": "{: { [46953,46954]"
    },
    {
      "src": "(: ( [17096,17097]",
      "dest": "(: ( [16669,16670]"
    },
    {
      "src": "call_argument [16653,16659]",
      "dest": "call_argument [16226,16232]"
    },
    {
      "src": "}: } [17291,17292]",
      "dest": "}: } [16864,16865]"
    },
    {
      "src": "type_name [3834,3838]",
      "dest": "type_name [3341,3345]"
    },
    {
      "src": ",: , [17612,17613]",
      "dest": ",: , [17185,17186]"
    },
    {
      "src": "return_type_definition [4240,4254]",
      "dest": "return_type_definition [3747,3761]"
    },
    {
      "src": "parameter [39020,39030]",
      "dest": "parameter [39578,39588]"
    },
    {
      "src": "call_argument [45896,45906]",
      "dest": "call_argument [50741,50751]"
    },
    {
      "src": "string: string [16552,16558]",
      "dest": "string: string [16125,16131]"
    },
    {
      "src": "expression_statement [21350,21352]",
      "dest": "expression_statement [20963,20965]"
    },
    {
      "src": "uint256: uint256 [2259,2266]",
      "dest": "uint256: uint256 [1763,1770]"
    },
    {
      "src": "returns: returns [25393,25400]",
      "dest": "returns: returns [25392,25399]"
    },
    {
      "src": "primitive_type [32125,32132]",
      "dest": "primitive_type [32124,32131]"
    },
    {
      "src": "visibility [8392,8400]",
      "dest": "visibility [7939,7947]"
    },
    {
      "src": "identifier: beneficiary [52414,52425]",
      "dest": "identifier: beneficiary [60335,60346]"
    },
    {
      "src": "modifier_invocation [48515,48524]",
      "dest": "modifier_invocation [56262,56271]"
    },
    {
      "src": "): ) [22055,22056]",
      "dest": "): ) [21668,21669]"
    },
    {
      "src": "parameter [36093,36105]",
      "dest": "parameter [36520,36532]"
    },
    {
      "src": "identifier: OwnershipTransferred [35274,35294]",
      "dest": "identifier: OwnershipTransferred [35441,35461]"
    },
    {
      "src": "): ) [30435,30436]",
      "dest": "): ) [30434,30435]"
    },
    {
      "src": "event_definition [40682,40722]",
      "dest": "event_definition [44854,44894]"
    },
    {
      "src": "identifier: a [8476,8477]",
      "dest": "identifier: a [8023,8024]"
    },
    {
      "src": "): ) [46570,46571]",
      "dest": "): ) [51528,51529]"
    },
    {
      "src": "call_argument [50004,50025]",
      "dest": "call_argument [58126,58147]"
    },
    {
      "src": "string [16224,16256]",
      "dest": "string [15797,15829]"
    },
    {
      "src": "function: function [53333,53341]",
      "dest": "function: function [61254,61262]"
    },
    {
      "src": "identifier: functionCall [16101,16113]",
      "dest": "identifier: functionCall [15674,15686]"
    },
    {
      "src": "type_name [44876,44883]",
      "dest": "type_name [49495,49502]"
    },
    {
      "src": "(: ( [22050,22051]",
      "dest": "(: ( [21663,21664]"
    },
    {
      "src": "identifier: _symbol [23819,23826]",
      "dest": "identifier: _symbol [23818,23825]"
    },
    {
      "src": "identifier: sub [53707,53710]",
      "dest": "identifier: sub [61628,61631]"
    },
    {
      "src": "comment: // track claimable fees [40378,40401]",
      "dest": "comment: // track claimable fees [44498,44521]"
    },
    {
      "src": "): ) [24484,24485]",
      "dest": "): ) [24483,24484]"
    },
    {
      "src": "type_name [39020,39027]",
      "dest": "type_name [39578,39585]"
    },
    {
      "src": "identifier: amount [3808,3814]",
      "dest": "identifier: amount [3315,3321]"
    },
    {
      "src": "(: ( [24470,24471]",
      "dest": "(: ( [24469,24470]"
    },
    {
      "src": "internal: internal [44517,44525]",
      "dest": "internal: internal [49136,49144]"
    },
    {
      "src": "call_expression [34766,34833]",
      "dest": "call_expression [34933,35000]"
    },
    {
      "src": "uint256: uint256 [25738,25745]",
      "dest": "uint256: uint256 [25737,25744]"
    },
    {
      "src": "(: ( [49726,49727]",
      "dest": "(: ( [57900,57901]"
    },
    {
      "src": "call_argument [9382,9394]",
      "dest": "call_argument [8929,8941]"
    },
    {
      "src": "variable_declaration [11431,11440]",
      "dest": "variable_declaration [10978,10987]"
    },
    {
      "src": "primitive_type [38928,38935]",
      "dest": "primitive_type [39486,39493]"
    },
    {
      "src": "{: { [25409,25410]",
      "dest": "{: { [25408,25409]"
    },
    {
      "src": "member_expression [17708,17729]",
      "dest": "member_expression [17281,17302]"
    },
    {
      "src": "comment: // prettier-ignore [48883,48901]",
      "dest": "comment: // prettier-ignore [56698,56716]"
    },
    {
      "src": "false [21414,21419]",
      "dest": "false [21027,21032]"
    },
    {
      "src": "uint256: uint256 [40346,40353]",
      "dest": "uint256: uint256 [44466,44473]"
    },
    {
      "src": "): ) [44066,44067]",
      "dest": "): ) [48831,48832]"
    },
    {
      "src": "event_paramater [42027,42041]",
      "dest": "event_paramater [46199,46213]"
    },
    {
      "src": "view: view [52795,52799]",
      "dest": "view: view [60716,60720]"
    },
    {
      "src": "identifier: spender [4723,4730]",
      "dest": "identifier: spender [4230,4237]"
    },
    {
      "src": "function_definition [19478,19584]",
      "dest": "function_definition [19071,19177]"
    },
    {
      "src": "address: address [3783,3790]",
      "dest": "address: address [3290,3297]"
    },
    {
      "src": "calldata: calldata [51861,51869]",
      "dest": "calldata: calldata [59784,59792]"
    },
    {
      "src": "identifier: amountOutMin [38963,38975]",
      "dest": "identifier: amountOutMin [39521,39533]"
    },
    {
      "src": "private: private [21556,21563]",
      "dest": "private: private [21169,21176]"
    },
    {
      "src": "identifier: weiValue [17947,17955]",
      "dest": "identifier: weiValue [17520,17528]"
    },
    {
      "src": "primitive_type [36929,36936]",
      "dest": "primitive_type [37356,37363]"
    },
    {
      "src": "): ) [2422,2423]",
      "dest": "): ) [1926,1927]"
    },
    {
      "src": "parameter [8415,8422]",
      "dest": "parameter [7962,7969]"
    },
    {
      "src": "member_expression [45665,45703]",
      "dest": "member_expression [50458,50496]"
    },
    {
      "src": "comment: // construction, since the code is only stored at the end of the [13734,13798]",
      "dest": "comment: // construction, since the code is only stored at the end of the [13304,13368]"
    },
    {
      "src": "comment: /**      * @dev Converts the value of a single yCRV into an underlying asset      * @param yAmount amount of curve pool tokens to calculate for      * @return Value of one y pool token      */ [53131,53327]",
      "dest": "comment: /**      * @dev Converts the value of a single yCRV into an underlying asset      * @param yAmount amount of curve pool tokens to calculate for      * @return Value of one y pool token      */ [61052,61248]"
    },
    {
      "src": "(: ( [21367,21368]",
      "dest": "(: ( [20980,20981]"
    },
    {
      "src": "): ) [46754,46755]",
      "dest": "): ) [51712,51713]"
    },
    {
      "src": "identifier: swapExactTokensForTokens [38893,38917]",
      "dest": "identifier: swapExactTokensForTokens [39451,39475]"
    },
    {
      "src": "primitive_type [50349,50356]",
      "dest": "primitive_type [57443,57450]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [3848,4152]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [3355,3659]"
    },
    {
      "src": "function: function [3014,3022]",
      "dest": "function: function [2518,2526]"
    },
    {
      "src": "parameter [37129,37138]",
      "dest": "parameter [37556,37565]"
    },
    {
      "src": "function: function [48448,48456]",
      "dest": "function: function [56195,56203]"
    },
    {
      "src": "address: address [30506,30513]",
      "dest": "address: address [30505,30512]"
    },
    {
      "src": "call_argument [35616,35617]",
      "dest": "call_argument [35783,35784]"
    },
    {
      "src": "comment: // By storing the original value once again, a refund is triggered (see [7267,7338]",
      "dest": "comment: // By storing the original value once again, a refund is triggered (see [6794,6865]"
    },
    {
      "src": "): ) [35550,35551]",
      "dest": "): ) [35717,35718]"
    },
    {
      "src": "): ) [47883,47884]",
      "dest": "): ) [55452,55453]"
    },
    {
      "src": "{: { [38877,38878]",
      "dest": "{: { [39435,39436]"
    },
    {
      "src": "identifier: curve [53074,53079]",
      "dest": "identifier: curve [60995,61000]"
    },
    {
      "src": "): ) [46421,46422]",
      "dest": "): ) [51379,51380]"
    },
    {
      "src": "event_paramater [41189,41203]",
      "dest": "event_paramater [45361,45375]"
    },
    {
      "src": "function_definition [30331,30709]",
      "dest": "function_definition [30330,30708]"
    },
    {
      "src": "address: address [36524,36531]",
      "dest": "address: address [36951,36958]"
    },
    {
      "src": "): ) [28765,28766]",
      "dest": "): ) [28764,28765]"
    },
    {
      "src": ",: , [31225,31226]",
      "dest": ",: , [31224,31225]"
    },
    {
      "src": "identifier: _minter [51065,51072]",
      "dest": "identifier: _minter [58988,58995]"
    },
    {
      "src": "visibility [32652,32660]",
      "dest": "visibility [32651,32659]"
    },
    {
      "src": "modifier_invocation [46276,46288]",
      "dest": "modifier_invocation [51121,51133]"
    },
    {
      "src": "address: address [44601,44608]",
      "dest": "address: address [49220,49227]"
    },
    {
      "src": ".: . [48761,48762]",
      "dest": ".: . [56576,56577]"
    },
    {
      "src": ",: , [50153,50154]",
      "dest": ",: , [58484,58485]"
    },
    {
      "src": "type_name [11299,11306]",
      "dest": "type_name [10846,10853]"
    },
    {
      "src": "identifier: amount [26142,26148]",
      "dest": "identifier: amount [26141,26147]"
    },
    {
      "src": ",: , [18173,18174]",
      "dest": ",: , [17746,17747]"
    },
    {
      "src": "address: address [38986,38993]",
      "dest": "address: address [39544,39551]"
    },
    {
      "src": "): ) [36712,36713]",
      "dest": "): ) [37139,37140]"
    },
    {
      "src": "identifier: mul [45679,45682]",
      "dest": "identifier: mul [50472,50475]"
    },
    {
      "src": "parameter [27991,28009]",
      "dest": "parameter [27990,28008]"
    },
    {
      "src": "identifier: b [9422,9423]",
      "dest": "identifier: b [8969,8970]"
    },
    {
      "src": "function_definition [25672,25791]",
      "dest": "function_definition [25671,25790]"
    },
    {
      "src": "(: ( [10715,10716]",
      "dest": "(: ( [10262,10263]"
    },
    {
      "src": ".: . [51925,51926]",
      "dest": ".: . [59848,59849]"
    },
    {
      "src": "expression_statement [48751,48835]",
      "dest": "expression_statement [56566,56650]"
    },
    {
      "src": "call_expression [31280,31348]",
      "dest": "call_expression [31279,31347]"
    },
    {
      "src": "parameter [29559,29573]",
      "dest": "parameter [29558,29572]"
    },
    {
      "src": "): ) [35617,35618]",
      "dest": "): ) [35784,35785]"
    },
    {
      "src": "identifier: b [12676,12677]",
      "dest": "identifier: b [12223,12224]"
    },
    {
      "src": "type_cast_expression [52041,52054]",
      "dest": "type_cast_expression [59964,59977]"
    },
    {
      "src": "returns: returns [43419,43426]",
      "dest": "returns: returns [47815,47822]"
    },
    {
      "src": "address: address [40941,40948]",
      "dest": "address: address [45113,45120]"
    },
    {
      "src": ".: . [44046,44047]",
      "dest": ".: . [48520,48521]"
    },
    {
      "src": "[: [ [27429,27430]",
      "dest": "[: [ [27428,27429]"
    },
    {
      "src": "): ) [36878,36879]",
      "dest": "): ) [37305,37306]"
    },
    {
      "src": "type_name [36305,36312]",
      "dest": "type_name [36732,36739]"
    },
    {
      "src": "parameter [26090,26094]",
      "dest": "parameter [26089,26093]"
    },
    {
      "src": "call_argument [48797,48807]",
      "dest": "call_argument [56612,56622]"
    },
    {
      "src": "yul_identifier [13936,13940]",
      "dest": "yul_identifier [13506,13510]"
    },
    {
      "src": ".: . [47334,47335]",
      "dest": ".: . [52292,52293]"
    },
    {
      "src": "call_argument [52923,52974]",
      "dest": "call_argument [60844,60895]"
    },
    {
      "src": "): ) [18719,18720]",
      "dest": "): ) [18292,18293]"
    },
    {
      "src": "(: ( [44629,44630]",
      "dest": "(: ( [49248,49249]"
    },
    {
      "src": "): ) [44748,44749]",
      "dest": "): ) [49367,49368]"
    },
    {
      "src": ",: , [39792,39793]",
      "dest": ",: , [43912,43913]"
    },
    {
      "src": "(: ( [26116,26117]",
      "dest": "(: ( [26115,26116]"
    },
    {
      "src": "): ) [9394,9395]",
      "dest": "): ) [8941,8942]"
    },
    {
      "src": "type_name [17629,17635]",
      "dest": "type_name [17202,17208]"
    },
    {
      "src": "identifier: sender [46332,46338]",
      "dest": "identifier: sender [51289,51295]"
    },
    {
      "src": "identifier: decimals [25370,25378]",
      "dest": "identifier: decimals [25369,25377]"
    },
    {
      "src": "uint256: uint256 [30363,30370]",
      "dest": "uint256: uint256 [30362,30369]"
    },
    {
      "src": "function_definition [38214,38281]",
      "dest": "function_definition [38736,38803]"
    },
    {
      "src": "function: function [36380,36388]",
      "dest": "function: function [36807,36815]"
    },
    {
      "src": "(: ( [45492,45493]",
      "dest": "(: ( [50285,50286]"
    },
    {
      "src": ".: . [43147,43148]",
      "dest": ".: . [47319,47320]"
    },
    {
      "src": "call_argument [50467,50520]",
      "dest": "call_argument [57561,57614]"
    },
    {
      "src": "parameter [51820,51840]",
      "dest": "parameter [59743,59763]"
    },
    {
      "src": "identifier: balance [17722,17729]",
      "dest": "identifier: balance [17295,17302]"
    },
    {
      "src": "call_expression [44686,44750]",
      "dest": "call_expression [49305,49369]"
    },
    {
      "src": "identifier: _balances [23646,23655]",
      "dest": "identifier: _balances [23645,23654]"
    },
    {
      "src": "interface_declaration [38554,38765]",
      "dest": "interface_declaration [39094,39305]"
    },
    {
      "src": "function_body [32016,32279]",
      "dest": "function_body [32015,32278]"
    },
    {
      "src": "variable_declaration_statement [15180,15235]",
      "dest": "variable_declaration_statement [14753,14808]"
    },
    {
      "src": "{: { [47021,47022]",
      "dest": "{: { [51979,51980]"
    },
    {
      "src": "identifier: get_virtual_price [36156,36173]",
      "dest": "identifier: get_virtual_price [36583,36600]"
    },
    {
      "src": "assignment_expression [31359,31398]",
      "dest": "assignment_expression [31358,31397]"
    },
    {
      "src": ",: , [45921,45922]",
      "dest": ",: , [50766,50767]"
    },
    {
      "src": "type_name [36856,36860]",
      "dest": "type_name [37283,37287]"
    },
    {
      "src": "): ) [47292,47293]",
      "dest": "): ) [52250,52251]"
    },
    {
      "src": "identifier: amountOutMin [52021,52033]",
      "dest": "identifier: amountOutMin [59944,59956]"
    },
    {
      "src": "function_definition [27183,27538]",
      "dest": "function_definition [27182,27537]"
    },
    {
      "src": "primitive_type [28712,28719]",
      "dest": "primitive_type [28711,28718]"
    },
    {
      "src": "): ) [30471,30472]",
      "dest": "): ) [30470,30471]"
    },
    {
      "src": "(: ( [52473,52474]",
      "dest": "(: ( [60394,60395]"
    },
    {
      "src": "external: external [36176,36184]",
      "dest": "external: external [36603,36611]"
    },
    {
      "src": "expression_statement [35726,35744]",
      "dest": "expression_statement [35893,35911]"
    },
    {
      "src": "primitive_type [10716,10723]",
      "dest": "primitive_type [10263,10270]"
    },
    {
      "src": "call_argument [45423,45433]",
      "dest": "call_argument [50216,50226]"
    },
    {
      "src": "parameter [29531,29548]",
      "dest": "parameter [29530,29547]"
    },
    {
      "src": "}: } [45727,45728]",
      "dest": "}: } [50520,50521]"
    },
    {
      "src": "comment: // burn tokens sent [46768,46787]",
      "dest": "comment: // burn tokens sent [51726,51745]"
    },
    {
      "src": "variable_declaration_statement [52280,52311]",
      "dest": "variable_declaration_statement [60201,60232]"
    },
    {
      "src": "number_literal: 1005 [49727,49731]",
      "dest": "number_literal: 1005 [57901,57905]"
    },
    {
      "src": "solidity_pragma_token [39165,39180]",
      "dest": "solidity_pragma_token [42508,42523]"
    },
    {
      "src": "primitive_type [18002,18007]",
      "dest": "primitive_type [17575,17580]"
    },
    {
      "src": "primitive_type [16552,16558]",
      "dest": "primitive_type [16125,16131]"
    },
    {
      "src": ",: , [10115,10116]",
      "dest": ",: , [9662,9663]"
    },
    {
      "src": "identifier: amountWithoutFee [50382,50398]",
      "dest": "identifier: amountWithoutFee [57476,57492]"
    },
    {
      "src": "identifier: totalSupply [2222,2233]",
      "dest": "identifier: totalSupply [1726,1737]"
    },
    {
      "src": "identifier: Pulled [48852,48858]",
      "dest": "identifier: Pulled [56667,56673]"
    },
    {
      "src": "address: address [34135,34142]",
      "dest": "address: address [34302,34309]"
    },
    {
      "src": "identifier: approve [26549,26556]",
      "dest": "identifier: approve [26548,26555]"
    },
    {
      "src": "=: = [52878,52879]",
      "dest": "=: = [60799,60800]"
    },
    {
      "src": "address: address [43659,43666]",
      "dest": "address: address [48055,48062]"
    },
    {
      "src": "uint256: uint256 [36689,36696]",
      "dest": "uint256: uint256 [37116,37123]"
    },
    {
      "src": "return: return [17190,17196]",
      "dest": "return: return [16763,16769]"
    },
    {
      "src": "identifier: amount [29984,29990]",
      "dest": "identifier: amount [29983,29989]"
    },
    {
      "src": "(: ( [19530,19531]",
      "dest": "(: ( [19123,19124]"
    },
    {
      "src": "(: ( [44030,44031]",
      "dest": "(: ( [48518,48519]"
    },
    {
      "src": "variable_declaration [15181,15193]",
      "dest": "variable_declaration [14754,14766]"
    },
    {
      "src": "(: ( [34450,34451]",
      "dest": "(: ( [34617,34618]"
    },
    {
      "src": "primitive_type [40407,40414]",
      "dest": "primitive_type [44527,44534]"
    },
    {
      "src": "identifier: amount [45361,45367]",
      "dest": "identifier: amount [50154,50160]"
    },
    {
      "src": "call_argument [47424,47434]",
      "dest": "call_argument [52382,52392]"
    },
    {
      "src": "identifier: target [16210,16216]",
      "dest": "identifier: target [15783,15789]"
    },
    {
      "src": "type_name [24218,24224]",
      "dest": "type_name [24217,24223]"
    },
    {
      "src": "identifier: yAmount [48859,48866]",
      "dest": "identifier: yAmount [56674,56681]"
    },
    {
      "src": "call_expression [28801,28813]",
      "dest": "call_expression [28800,28812]"
    },
    {
      "src": "): ) [51963,51964]",
      "dest": "): ) [59886,59887]"
    },
    {
      "src": "binary_expression [35596,35618]",
      "dest": "binary_expression [35763,35785]"
    },
    {
      "src": "primitive_type [8370,8377]",
      "dest": "primitive_type [7917,7924]"
    },
    {
      "src": "): ) [44159,44160]",
      "dest": "): ) [48307,48308]"
    },
    {
      "src": "): ) [29579,29580]",
      "dest": "): ) [29578,29579]"
    },
    {
      "src": "type_name [33344,33351]",
      "dest": "type_name [33343,33350]"
    },
    {
      "src": "memory: memory [53004,53010]",
      "dest": "memory: memory [60925,60931]"
    },
    {
      "src": "): ) [39063,39064]",
      "dest": "): ) [39621,39622]"
    },
    {
      "src": "memory: memory [17171,17177]",
      "dest": "memory: memory [16744,16750]"
    },
    {
      "src": "identifier: add [50440,50443]",
      "dest": "identifier: add [57534,57537]"
    },
    {
      "src": "uint256: uint256 [9346,9353]",
      "dest": "uint256: uint256 [8893,8900]"
    },
    {
      "src": "identifier: initialized [21118,21129]",
      "dest": "identifier: initialized [20731,20742]"
    },
    {
      "src": "): ) [45920,45921]",
      "dest": "): ) [50765,50766]"
    },
    {
      "src": "function_definition [36639,36723]",
      "dest": "function_definition [37066,37150]"
    },
    {
      "src": "emit_statement [48224,48253]",
      "dest": "emit_statement [55971,56000]"
    },
    {
      "src": "boolean_literal [26697,26701]",
      "dest": "boolean_literal [26696,26700]"
    },
    {
      "src": "identifier: currencyBalance [50202,50217]",
      "dest": "identifier: currencyBalance [57295,57310]"
    },
    {
      "src": "(: ( [6537,6538]",
      "dest": "(: ( [6064,6065]"
    },
    {
      "src": "visibility [53379,53385]",
      "dest": "visibility [61300,61306]"
    },
    {
      "src": "(: ( [48787,48788]",
      "dest": "(: ( [56602,56603]"
    },
    {
      "src": "type_name [52229,52236]",
      "dest": "type_name [60150,60157]"
    },
    {
      "src": "(: ( [24447,24448]",
      "dest": "(: ( [24446,24447]"
    },
    {
      "src": "type_cast_expression [31432,31442]",
      "dest": "type_cast_expression [31431,31441]"
    },
    {
      "src": ",: , [42717,42718]",
      "dest": ",: , [46889,46890]"
    },
    {
      "src": "call_expression [48555,48570]",
      "dest": "call_expression [56302,56317]"
    },
    {
      "src": "call_expression [45412,45434]",
      "dest": "call_expression [50205,50227]"
    },
    {
      "src": "type_name [41165,41172]",
      "dest": "type_name [45337,45344]"
    },
    {
      "src": "): ) [28735,28736]",
      "dest": "): ) [28734,28735]"
    },
    {
      "src": "parameter [43947,43954]",
      "dest": "parameter [48243,48250]"
    },
    {
      "src": "(: ( [43184,43185]",
      "dest": "(: ( [47356,47357]"
    },
    {
      "src": "comment: /**      * @dev Initializes the contract setting the deployer as the initial owner.      */ [34200,34293]",
      "dest": "comment: /**      * @dev Initializes the contract setting the deployer as the initial owner.      */ [34367,34460]"
    },
    {
      "src": "number_literal: 0 [35311,35312]",
      "dest": "number_literal: 0 [35478,35479]"
    },
    {
      "src": "call_argument [43708,43712]",
      "dest": "call_argument [48104,48108]"
    },
    {
      "src": "call_expression [51065,51099]",
      "dest": "call_expression [58988,59022]"
    },
    {
      "src": "primitive_type [30673,30680]",
      "dest": "primitive_type [30672,30679]"
    },
    {
      "src": "constructor: constructor [6525,6536]",
      "dest": "constructor: constructor [6052,6063]"
    },
    {
      "src": "visibility [23811,23818]",
      "dest": "visibility [23810,23817]"
    },
    {
      "src": "parameter [2724,2728]",
      "dest": "parameter [2228,2232]"
    },
    {
      "src": "): ) [18671,18672]",
      "dest": "): ) [18244,18245]"
    },
    {
      "src": "contract_body [8111,12813]",
      "dest": "contract_body [7658,12360]"
    },
    {
      "src": "bytes: bytes [16598,16603]",
      "dest": "bytes: bytes [16171,16176]"
    },
    {
      "src": "uint256: uint256 [9273,9280]",
      "dest": "uint256: uint256 [8820,8827]"
    },
    {
      "src": "primitive_type [8415,8422]",
      "dest": "primitive_type [7962,7969]"
    },
    {
      "src": "identifier: __curvePool [42607,42618]",
      "dest": "identifier: __curvePool [46779,46790]"
    },
    {
      "src": "}: } [18853,18854]",
      "dest": "}: } [18426,18427]"
    },
    {
      "src": "call_expression [32106,32174]",
      "dest": "call_expression [32105,32173]"
    },
    {
      "src": "(: ( [9373,9374]",
      "dest": "(: ( [8920,8921]"
    },
    {
      "src": "return_statement [25420,25437]",
      "dest": "return_statement [25419,25436]"
    },
    {
      "src": "identifier: amount [46815,46821]",
      "dest": "identifier: amount [51773,51779]"
    },
    {
      "src": "identifier: recipient [29969,29978]",
      "dest": "identifier: recipient [29968,29977]"
    },
    {
      "src": "call_argument [43227,43246]",
      "dest": "call_argument [47399,47418]"
    },
    {
      "src": "): ) [38751,38752]",
      "dest": "): ) [39291,39292]"
    },
    {
      "src": "call_argument [51086,51097]",
      "dest": "call_argument [59009,59020]"
    },
    {
      "src": "visibility [43398,43404]",
      "dest": "visibility [47794,47800]"
    },
    {
      "src": "string [29723,29760]",
      "dest": "string [29722,29759]"
    },
    {
      "src": "identifier: timestamp [52062,52071]",
      "dest": "identifier: timestamp [59985,59994]"
    },
    {
      "src": "type_name [36066,36076]",
      "dest": "type_name [36493,36503]"
    },
    {
      "src": "state_variable_declaration [40346,40372]",
      "dest": "state_variable_declaration [44466,44492]"
    },
    {
      "src": "parameter [26574,26588]",
      "dest": "parameter [26573,26587]"
    },
    {
      "src": "user_defined_type [37163,37170]",
      "dest": "user_defined_type [37590,37597]"
    },
    {
      "src": "=: = [49687,49688]",
      "dest": "=: = [57861,57862]"
    },
    {
      "src": "identifier: _curvePool [40124,40134]",
      "dest": "identifier: _curvePool [44244,44254]"
    },
    {
      "src": "(: ( [51782,51783]",
      "dest": "(: ( [59705,59706]"
    },
    {
      "src": "primitive_type [38670,38677]",
      "dest": "primitive_type [39210,39217]"
    },
    {
      "src": "true [28975,28979]",
      "dest": "true [28974,28978]"
    },
    {
      "src": "(: ( [31916,31917]",
      "dest": "(: ( [31915,31916]"
    },
    {
      "src": ",: , [3046,3047]",
      "dest": ",: , [2550,2551]"
    },
    {
      "src": "call_argument [31144,31145]",
      "dest": "call_argument [31143,31144]"
    },
    {
      "src": "identifier: subtractedValue [28720,28735]",
      "dest": "identifier: subtractedValue [28719,28734]"
    },
    {
      "src": "identifier: onlyOwner [48515,48524]",
      "dest": "identifier: onlyOwner [56262,56271]"
    },
    {
      "src": ",: , [46915,46916]",
      "dest": ",: , [51873,51874]"
    },
    {
      "src": "{: { [18312,18313]",
      "dest": "{: { [17885,17886]"
    },
    {
      "src": "string_literal [29884,29924]",
      "dest": "string_literal [29883,29923]"
    },
    {
      "src": "call_argument [30514,30515]",
      "dest": "call_argument [30513,30514]"
    },
    {
      "src": "expression_statement [26107,26150]",
      "dest": "expression_statement [26106,26149]"
    },
    {
      "src": "type_name [51851,51858]",
      "dest": "type_name [59774,59781]"
    },
    {
      "src": "]: ] [29870,29871]",
      "dest": "]: ] [29869,29870]"
    },
    {
      "src": "call_argument [45908,45921]",
      "dest": "call_argument [50753,50766]"
    },
    {
      "src": "assembly: assembly [18600,18608]",
      "dest": "assembly: assembly [18173,18181]"
    },
    {
      "src": "address: address [34451,34458]",
      "dest": "address: address [34618,34625]"
    },
    {
      "src": "visibility [11349,11357]",
      "dest": "visibility [10896,10904]"
    },
    {
      "src": "comment: // File: contracts/truefi/common/Initializable.sol [19832,19882]",
      "dest": "comment: // pragma solidity ^0.6.2; [12433,12459]"
    },
    {
      "src": "{: { [18016,18017]",
      "dest": "{: { [17589,17590]"
    },
    {
      "src": "override: override [50769,50777]",
      "dest": "override: override [58683,58691]"
    },
    {
      "src": "identifier: a [9418,9419]",
      "dest": "identifier: a [8965,8966]"
    },
    {
      "src": "call_argument [31148,31183]",
      "dest": "call_argument [31147,31182]"
    },
    {
      "src": "return_type_definition [9760,9777]",
      "dest": "return_type_definition [9307,9324]"
    },
    {
      "src": "return: return [11548,11554]",
      "dest": "return: return [11095,11101]"
    },
    {
      "src": "inheritance_specifier [39770,39775]",
      "dest": "inheritance_specifier [43890,43895]"
    },
    {
      "src": "call_argument [29698,29721]",
      "dest": "call_argument [29697,29720]"
    },
    {
      "src": "identifier: sub [44720,44723]",
      "dest": "identifier: sub [49339,49342]"
    },
    {
      "src": "): ) [49370,49371]",
      "dest": "): ) [47643,47644]"
    },
    {
      "src": "comment: /**  * @dev Contract module that helps prevent reentrant calls to a function.  *  * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier  * available, which can be applied to functions to make sure there are no nested  * (reentrant) calls to them.  *  * Note that because there is a single `nonReentrant` guard, functions marked as  * `nonReentrant` may not call one another. This can be worked around by making  * those functions `private`, and then adding `external` `nonReentrant` entry  * points to them.  *  * TIP: If you would like to learn more about reentrancy and alternative ways  * to protect against it, check out our blog post  * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].  */ [4841,5606]",
      "dest": "comment: /**  * @dev Contract module that helps prevent reentrant calls to a function.  *  * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier  * available, which can be applied to functions to make sure there are no nested  * (reentrant) calls to them.  *  * Note that because there is a single `nonReentrant` guard, functions marked as  * `nonReentrant` may not call one another. This can be worked around by making  * those functions `private`, and then adding `external` `nonReentrant` entry  * points to them.  *  * TIP: If you would like to learn more about reentrancy and alternative ways  * to protect against it, check out our blog post  * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].  */ [4368,5133]"
    },
    {
      "src": "return_statement [10736,10783]",
      "dest": "return_statement [10283,10330]"
    },
    {
      "src": "identifier: _balances [31259,31268]",
      "dest": "identifier: _balances [31258,31267]"
    },
    {
      "src": "identifier: currencyBalance [46553,46568]",
      "dest": "identifier: currencyBalance [51511,51526]"
    },
    {
      "src": "state_mutability [26317,26321]",
      "dest": "state_mutability [26316,26320]"
    },
    {
      "src": "(: ( [29875,29876]",
      "dest": "(: ( [29874,29875]"
    },
    {
      "src": "if: if [21239,21241]",
      "dest": "if: if [20852,20854]"
    },
    {
      "src": "identifier: curveLiquidityAmountToTransfer [47180,47210]",
      "dest": "identifier: curveLiquidityAmountToTransfer [52138,52168]"
    },
    {
      "src": "=: = [50361,50362]",
      "dest": "=: = [57455,57456]"
    },
    {
      "src": "primitive_type [45508,45515]",
      "dest": "primitive_type [50301,50308]"
    },
    {
      "src": "state_variable_declaration [23610,23656]",
      "dest": "state_variable_declaration [23609,23655]"
    },
    {
      "src": "return_type_definition [16158,16180]",
      "dest": "return_type_definition [15731,15753]"
    },
    {
      "src": "(: ( [52972,52973]",
      "dest": "(: ( [60893,60894]"
    },
    {
      "src": "identifier: b [12121,12122]",
      "dest": "identifier: b [11668,11669]"
    },
    {
      "src": "call_argument [31239,31245]",
      "dest": "call_argument [31238,31244]"
    },
    {
      "src": ",: , [50572,50573]",
      "dest": ",: , [57666,57667]"
    },
    {
      "src": ",: , [16665,16666]",
      "dest": ",: , [16238,16239]"
    },
    {
      "src": "parameter [28761,28765]",
      "dest": "parameter [28760,28764]"
    },
    {
      "src": "return: return [24701,24707]",
      "dest": "return: return [24700,24706]"
    },
    {
      "src": "call_expression [9366,9395]",
      "dest": "call_expression [8913,8942]"
    },
    {
      "src": "identifier: require [48536,48543]",
      "dest": "identifier: require [56283,56290]"
    },
    {
      "src": "): ) [40998,40999]",
      "dest": "): ) [45170,45171]"
    },
    {
      "src": "identifier: require [29609,29616]",
      "dest": "identifier: require [29608,29615]"
    },
    {
      "src": "uint256: uint256 [8845,8852]",
      "dest": "uint256: uint256 [8392,8399]"
    },
    {
      "src": "[: [ [47977,47978]",
      "dest": "[: [ [55547,55548]"
    },
    {
      "src": "(: ( [18700,18701]",
      "dest": "(: ( [18273,18274]"
    },
    {
      "src": "(: ( [16652,16653]",
      "dest": "(: ( [16225,16226]"
    },
    {
      "src": "primitive_type [11310,11317]",
      "dest": "primitive_type [10857,10864]"
    },
    {
      "src": "parameter [12657,12666]",
      "dest": "parameter [12204,12213]"
    },
    {
      "src": "identifier: errorMessage [18804,18816]",
      "dest": "identifier: errorMessage [18377,18389]"
    },
    {
      "src": ",: , [15055,15056]",
      "dest": ",: , [14628,14629]"
    },
    {
      "src": "state_variable_declaration [34077,34100]",
      "dest": "state_variable_declaration [34244,34267]"
    },
    {
      "src": "call_argument [52940,52950]",
      "dest": "call_argument [60861,60871]"
    },
    {
      "src": "): ) [29678,29679]",
      "dest": "): ) [29677,29678]"
    },
    {
      "src": "}: } [30049,30050]",
      "dest": "}: } [30048,30049]"
    },
    {
      "src": "identifier: _curvePool [50080,50090]",
      "dest": "identifier: _curvePool [58403,58413]"
    },
    {
      "src": "for: for [23590,23593]",
      "dest": "for: for [23589,23592]"
    },
    {
      "src": "emit_statement [32234,32272]",
      "dest": "emit_statement [32233,32271]"
    },
    {
      "src": "expression_statement [49973,50027]",
      "dest": "expression_statement [58095,58149]"
    },
    {
      "src": "identifier: path [51870,51874]",
      "dest": "identifier: path [59793,59797]"
    },
    {
      "src": "call_argument [45493,45496]",
      "dest": "call_argument [50286,50289]"
    },
    {
      "src": "address: address [43227,43234]",
      "dest": "address: address [47399,47406]"
    },
    {
      "src": "call_expression [27340,27376]",
      "dest": "call_expression [27339,27375]"
    },
    {
      "src": "expression_statement [29690,29762]",
      "dest": "expression_statement [29689,29761]"
    },
    {
      "src": "number_literal: 0 [18418,18419]",
      "dest": "number_literal: 0 [17991,17992]"
    },
    {
      "src": "type_name [53640,53647]",
      "dest": "type_name [61561,61568]"
    },
    {
      "src": "(: ( [43677,43678]",
      "dest": "(: ( [48073,48074]"
    },
    {
      "src": "array_access [27418,27451]",
      "dest": "array_access [27417,27450]"
    },
    {
      "src": "identifier: isContract [18035,18045]",
      "dest": "identifier: isContract [17608,17618]"
    },
    {
      "src": ",: , [10751,10752]",
      "dest": ",: , [10298,10299]"
    },
    {
      "src": "returns: returns [37649,37656]",
      "dest": "returns: returns [38171,38178]"
    },
    {
      "src": "identifier: mul [46703,46706]",
      "dest": "identifier: mul [51661,51664]"
    },
    {
      "src": "(: ( [50116,50117]",
      "dest": "(: ( [58439,58440]"
    },
    {
      "src": "string [7110,7143]",
      "dest": "string [6637,6670]"
    },
    {
      "src": "type_cast_expression [15024,15037]",
      "dest": "type_cast_expression [14597,14610]"
    },
    {
      "src": ".: . [53681,53682]",
      "dest": ".: . [61602,61603]"
    },
    {
      "src": "comment: // get share of currency tokens kept in the pool [46435,46483]",
      "dest": "comment: // get share of currency tokens kept in the pool [51393,51441]"
    },
    {
      "src": "call_argument [26131,26140]",
      "dest": "call_argument [26130,26139]"
    },
    {
      "src": "\": \" [8479,8480]",
      "dest": "\": \" [8026,8027]"
    },
    {
      "src": "identifier: withdraw [44698,44706]",
      "dest": "identifier: withdraw [49317,49325]"
    },
    {
      "src": "string [27464,27506]",
      "dest": "string [27463,27505]"
    },
    {
      "src": "constant: constant [40527,40535]",
      "dest": "constant: constant [44699,44707]"
    },
    {
      "src": "comment: // File: contracts/truefi/common/UpgradeableERC20.sol [22218,22271]",
      "dest": "comment: // Dependency file: @openzeppelin/contracts/GSN/Context.sol [18433,18492]"
    },
    {
      "src": "identifier: min_amount [36835,36845]",
      "dest": "identifier: min_amount [37262,37272]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/math/SafeMath.sol [7438,7488]",
      "dest": "comment: // Dependency file: @openzeppelin/contracts/math/SafeMath.sol [6967,7028]"
    },
    {
      "src": ",: , [17955,17956]",
      "dest": ",: , [17528,17529]"
    },
    {
      "src": "state_mutability [52795,52799]",
      "dest": "state_mutability [60716,60720]"
    },
    {
      "src": "identifier: amount [26582,26588]",
      "dest": "identifier: amount [26581,26587]"
    },
    {
      "src": ".: . [19569,19570]",
      "dest": ".: . [19162,19163]"
    },
    {
      "src": "(: ( [50890,50891]",
      "dest": "(: ( [58815,58816]"
    },
    {
      "src": "external: external [38458,38466]",
      "dest": "external: external [38980,38988]"
    },
    {
      "src": "identifier: a [8842,8843]",
      "dest": "identifier: a [8389,8390]"
    },
    {
      "src": "emit: emit [35672,35676]",
      "dest": "emit: emit [35839,35843]"
    },
    {
      "src": "primitive_type [46242,46249]",
      "dest": "primitive_type [51087,51094]"
    },
    {
      "src": "call_argument [30024,30033]",
      "dest": "call_argument [30023,30032]"
    },
    {
      "src": "): ) [24448,24449]",
      "dest": "): ) [24447,24448]"
    },
    {
      "src": "string_literal [15262,15322]",
      "dest": "string_literal [14835,14895]"
    },
    {
      "src": "[: [ [28875,28876]",
      "dest": "[: [ [28874,28875]"
    },
    {
      "src": "call_argument [47044,47105]",
      "dest": "call_argument [52002,52063]"
    },
    {
      "src": "call_argument [46917,46929]",
      "dest": "call_argument [51875,51887]"
    },
    {
      "src": "(: ( [12729,12730]",
      "dest": "(: ( [12276,12277]"
    },
    {
      "src": "override_specifier [46267,46275]",
      "dest": "override_specifier [51112,51120]"
    },
    {
      "src": "!=: != [29708,29710]",
      "dest": "!=: != [29707,29709]"
    },
    {
      "src": "bytes: bytes [18002,18007]",
      "dest": "bytes: bytes [17575,17580]"
    },
    {
      "src": "memory: memory [17601,17607]",
      "dest": "memory: memory [17174,17180]"
    },
    {
      "src": "{: { [53409,53410]",
      "dest": "{: { [61330,61331]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-totalSupply}.      */ [25452,25503]",
      "dest": "comment: /**      * @dev See {IERC20-totalSupply}.      */ [25451,25502]"
    },
    {
      "src": "external: external [4231,4239]",
      "dest": "external: external [3738,3746]"
    },
    {
      "src": "returns: returns [37089,37096]",
      "dest": "returns: returns [37516,37523]"
    },
    {
      "src": "identifier: OwnershipTransferred [35677,35697]",
      "dest": "identifier: OwnershipTransferred [35844,35864]"
    },
    {
      "src": "=: = [15197,15198]",
      "dest": "=: = [14770,14771]"
    },
    {
      "src": "primitive_type [47764,47771]",
      "dest": "primitive_type [55333,55340]"
    },
    {
      "src": "function: function [8821,8829]",
      "dest": "function: function [8368,8376]"
    },
    {
      "src": "identifier: owner [3041,3046]",
      "dest": "identifier: owner [2545,2550]"
    },
    {
      "src": "identifier: _name [23792,23797]",
      "dest": "identifier: _name [23791,23796]"
    },
    {
      "src": "type_name [34353,34360]",
      "dest": "type_name [34520,34527]"
    },
    {
      "src": "override: override [45378,45386]",
      "dest": "override: override [50171,50179]"
    },
    {
      "src": "=: = [30616,30617]",
      "dest": "=: = [30615,30616]"
    },
    {
      "src": "function: function [9711,9719]",
      "dest": "function: function [9258,9266]"
    },
    {
      "src": ",: , [51840,51841]",
      "dest": ",: , [59763,59764]"
    },
    {
      "src": "identifier: ITrueFiPool [37549,37560]",
      "dest": "identifier: ITrueFiPool [38071,38082]"
    },
    {
      "src": "identifier: value [44059,44064]",
      "dest": "identifier: value [48824,48829]"
    },
    {
      "src": "function: function [25509,25517]",
      "dest": "function: function [25508,25516]"
    },
    {
      "src": "primitive_type [20916,20920]",
      "dest": "primitive_type [20529,20533]"
    },
    {
      "src": "): ) [10152,10153]",
      "dest": "): ) [9699,9700]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [2276,2350]",
      "dest": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [1780,1854]"
    },
    {
      "src": "comment: /// @dev pool token (TUSD) [37578,37604]",
      "dest": "comment: /// @dev pool token (TUSD) [38100,38126]"
    },
    {
      "src": "call_argument [51078,51098]",
      "dest": "call_argument [59001,59021]"
    },
    {
      "src": "user_defined_type [42697,42708]",
      "dest": "user_defined_type [46869,46880]"
    },
    {
      "src": "number_literal: 0 [13990,13991]",
      "dest": "number_literal: 0 [13560,13561]"
    },
    {
      "src": "false [50155,50160]",
      "dest": "false [58486,58491]"
    },
    {
      "src": "number_literal: 18 [24354,24356]",
      "dest": "number_literal: 18 [24353,24355]"
    },
    {
      "src": "(: ( [3833,3834]",
      "dest": "(: ( [3340,3341]"
    },
    {
      "src": "(: ( [43226,43227]",
      "dest": "(: ( [47398,47399]"
    },
    {
      "src": "}: } [8956,8957]",
      "dest": "}: } [8503,8504]"
    },
    {
      "src": "address: address [42228,42235]",
      "dest": "address: address [46400,46407]"
    },
    {
      "src": "): ) [25745,25746]",
      "dest": "): ) [25744,25745]"
    },
    {
      "src": "function: function [53590,53598]",
      "dest": "function: function [61511,61519]"
    },
    {
      "src": "{: { [37571,37572]",
      "dest": "{: { [38093,38094]"
    },
    {
      "src": ",: , [17738,17739]",
      "dest": ",: , [17311,17312]"
    },
    {
      "src": ">: > [13988,13989]",
      "dest": ">: > [13558,13559]"
    },
    {
      "src": "call_argument [44609,44613]",
      "dest": "call_argument [49228,49232]"
    },
    {
      "src": "(: ( [45145,45146]",
      "dest": "(: ( [49887,49888]"
    },
    {
      "src": "primitive_type [30346,30353]",
      "dest": "primitive_type [30345,30352]"
    },
    {
      "src": "): ) [37017,37018]",
      "dest": "): ) [37444,37445]"
    },
    {
      "src": "(: ( [43646,43647]",
      "dest": "(: ( [48042,48043]"
    },
    {
      "src": "identifier: msg [45773,45776]",
      "dest": "identifier: msg [50566,50569]"
    },
    {
      "src": "(: ( [35230,35231]",
      "dest": "(: ( [35397,35398]"
    },
    {
      "src": "(: ( [49162,49163]",
      "dest": "(: ( [56988,56989]"
    },
    {
      "src": "<=: <= [47864,47866]",
      "dest": "<=: <= [55433,55435]"
    },
    {
      "src": "): ) [45846,45847]",
      "dest": "): ) [50639,50640]"
    },
    {
      "src": "call_argument [30641,30647]",
      "dest": "call_argument [30640,30646]"
    },
    {
      "src": "function_definition [37805,37844]",
      "dest": "function_definition [38327,38366]"
    },
    {
      "src": "{: { [28041,28042]",
      "dest": "{: { [28040,28041]"
    },
    {
      "src": "number_literal: 0 [12763,12764]",
      "dest": "number_literal: 0 [12310,12311]"
    },
    {
      "src": "public: public [24654,24660]",
      "dest": "public: public [24653,24659]"
    },
    {
      "src": "(: ( [45867,45868]",
      "dest": "(: ( [50712,50713]"
    },
    {
      "src": "call_expression [46528,46589]",
      "dest": "call_expression [51486,51547]"
    },
    {
      "src": "identifier: _functionCallWithValue [17881,17903]",
      "dest": "identifier: _functionCallWithValue [17454,17476]"
    },
    {
      "src": ",: , [39030,39031]",
      "dest": ",: , [39588,39589]"
    },
    {
      "src": "returns: returns [9760,9767]",
      "dest": "returns: returns [9307,9314]"
    },
    {
      "src": "): ) [30585,30586]",
      "dest": "): ) [30584,30585]"
    },
    {
      "src": "mload: mload [18655,18660]",
      "dest": "mload: mload [18228,18233]"
    },
    {
      "src": "public: public [24450,24456]",
      "dest": "public: public [24449,24455]"
    },
    {
      "src": "]: ] [28117,28118]",
      "dest": "]: ] [28116,28117]"
    },
    {
      "src": "\": \" [21178,21179]",
      "dest": "\": \" [20791,20792]"
    },
    {
      "src": "call_expression [52923,52974]",
      "dest": "call_expression [60844,60895]"
    }
  ],
  "actions": [
    {
      "action": "move-tree",
      "tree": "comment: // https://github.com/trusttoken/smart-contracts [1872,1920]",
      "parent": "source_file [0,61657]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [1957,2012]",
      "parent": "source_file [0,61657]",
      "at": 7
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: @openzeppelin/contracts/utils/Address.sol [12817,12867]",
      "parent": "source_file [0,61657]",
      "at": 13
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: @openzeppelin/contracts/GSN/Context.sol [18858,18906]",
      "parent": "source_file [0,61657]",
      "at": 17
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: contracts/truefi/common/Initializable.sol [19832,19882]",
      "parent": "source_file [0,61657]",
      "at": 18
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: contracts/truefi/common/UpgradeableERC20.sol [22218,22271]",
      "parent": "source_file [0,61657]",
      "at": 22
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: contracts/truefi/common/UpgradeableOwnable.sol [33436,33491]",
      "parent": "source_file [0,61657]",
      "at": 23
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: contracts/truefi/interface/IYToken.sol [35758,35805]",
      "parent": "source_file [0,61657]",
      "at": 27
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: contracts/truefi/interface/ICurve.sol [35940,35986]",
      "parent": "source_file [0,61657]",
      "at": 29
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: contracts/truefi/interface/ITrueFiPool.sol [37179,37230]",
      "parent": "source_file [0,61657]",
      "at": 33
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: contracts/truefi/interface/ITrueLender.sol [38474,38525]",
      "parent": "source_file [0,61657]",
      "at": 34
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: contracts/truefi/interface/IUniswapRouter.sol [38769,38823]",
      "parent": "source_file [0,61657]",
      "at": 35
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: contracts/truefi/TrueFiPool.sol [39116,39156]",
      "parent": "source_file [0,61657]",
      "at": 36
    },
    {
      "action": "update-node",
      "tree": "comment: /**  *Submitted for verification at Etherscan.io on 2020-11-25 */ [0,67]",
      "label
    },
    {
      "action": "update-node",
      "tree": "comment
      "label": "// Dependency file: @openzeppelin/contracts/token/ERC20/IERC20.sol"
    },
    {
      "action": "update-node",
      "tree": "comment: // https://github.com/trusttoken/smart-contracts [1872,1920]",
      "label": "// pragma solidity ^0.6.0;"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [1957,2012]",
      "label": "// Dependency file: @openzeppelin/contracts/utils/ReentrancyGuard.sol"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: @openzeppelin/contracts/utils/ReentrancyGuard.sol [4754,4812]",
      "label": "// pragma solidity ^0.6.0;"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: @openzeppelin/contracts/math/SafeMath.sol [7438,7488]",
      "label": "// Dependency file: @openzeppelin/contracts/math/SafeMath.sol"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: @openzeppelin/contracts/utils/Address.sol [12817,12867]",
      "label": "// pragma solidity ^0.6.0;"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: @openzeppelin/contracts/GSN/Context.sol [18858,18906]",
      "label": "// Dependency file: @openzeppelin/contracts/utils/Address.sol"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/truefi/common/Initializable.sol [19832,19882]",
      "label": "// pragma solidity ^0.6.2;"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/truefi/common/UpgradeableERC20.sol [22218,22271]",
      "label": "// Dependency file: @openzeppelin/contracts/GSN/Context.sol"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/truefi/common/UpgradeableOwnable.sol [33436,33491]",
      "label": "// pragma solidity ^0.6.0;"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/truefi/interface/IYToken.sol [35758,35805]",
      "label": "// Dependency file: contracts/truefi/common/Initializable.sol"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/truefi/interface/ICurve.sol [35940,35986]",
      "label": "// pragma solidity 0.6.10;"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/truefi/interface/ITrueFiPool.sol [37179,37230]",
      "label": "// Dependency file: contracts/truefi/common/UpgradeableERC20.sol"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/truefi/interface/ITrueLender.sol [38474,38525]",
      "label": "// pragma solidity 0.6.10;"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/truefi/interface/IUniswapRouter.sol [38769,38823]",
      "label": "// import {Address} from \"@openzeppelin/contracts/utils/Address.sol\";"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/truefi/TrueFiPool.sol [39116,39156]",
      "label": "// import {Context} from \"@openzeppelin/contracts/GSN/Context.sol\";"
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; [22071,22144]",
      "parent": "source_file [0,61657]",
      "at": 31
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {SafeMath} from \"@openzeppelin/contracts/math/SafeMath.sol\"; [22146,22216]",
      "parent": "source_file [0,61657]",
      "at": 32
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {Initializable} from \"contracts/truefi/common/Initializable.sol\"; [22220,22295]",
      "parent": "source_file [0,61657]",
      "at": 33
    },
    {
      "action": "insert-node",
      "tree": "comment: // Dependency file: contracts/truefi/common/UpgradeableOwnable.sol [33437,33503]",
      "parent": "source_file [0,61657]",
      "at": 36
    },
    {
      "action": "insert-node",
      "tree": "comment: // pragma solidity 0.6.10; [33507,33533]",
      "parent": "source_file [0,61657]",
      "at": 37
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {Context} from \"@openzeppelin/contracts/GSN/Context.sol\"; [33537,33604]",
      "parent": "source_file [0,61657]",
      "at": 38
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {Initializable} from \"contracts/truefi/common/Initializable.sol\"; [33608,33683]",
      "parent": "source_file [0,61657]",
      "at": 39
    },
    {
      "action": "insert-node",
      "tree": "comment: // Dependency file: contracts/truefi/interface/IYToken.sol [35927,35985]",
      "parent": "source_file [0,61657]",
      "at": 42
    },
    {
      "action": "insert-node",
      "tree": "comment: // pragma solidity 0.6.10; [35989,36015]",
      "parent": "source_file [0,61657]",
      "at": 43
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; [36019,36092]",
      "parent": "source_file [0,61657]",
      "at": 44
    },
    {
      "action": "insert-node",
      "tree": "comment: // Dependency file: contracts/truefi/interface/ICurve.sol [36204,36261]",
      "parent": "source_file [0,61657]",
      "at": 46
    },
    {
      "action": "insert-node",
      "tree": "comment: // pragma solidity 0.6.10; [36265,36291]",
      "parent": "source_file [0,61657]",
      "at": 47
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; [36295,36368]",
      "parent": "source_file [0,61657]",
      "at": 48
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {IYToken} from \"contracts/truefi/interface/IYToken.sol\"; [36372,36438]",
      "parent": "source_file [0,61657]",
      "at": 49
    },
    {
      "action": "insert-node",
      "tree": "comment: // Dependency file: contracts/truefi/interface/ITrueFiPool.sol [37608,37670]",
      "parent": "source_file [0,61657]",
      "at": 54
    },
    {
      "action": "insert-node",
      "tree": "comment: // pragma solidity 0.6.10; [37674,37700]",
      "parent": "source_file [0,61657]",
      "at": 55
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; [37704,37777]",
      "parent": "source_file [0,61657]",
      "at": 56
    },
    {
      "action": "insert-node",
      "tree": "comment: // Dependency file: contracts/truefi/interface/ITrueLender.sol [38998,39060]",
      "parent": "source_file [0,61657]",
      "at": 59
    },
    {
      "action": "insert-node",
      "tree": "comment: // pragma solidity 0.6.10; [39064,39090]",
      "parent": "source_file [0,61657]",
      "at": 60
    },
    {
      "action": "insert-node",
      "tree": "comment: // Dependency file: contracts/truefi/interface/IUniswapRouter.sol [39311,39376]",
      "parent": "source_file [0,61657]",
      "at": 62
    },
    {
      "action": "insert-node",
      "tree": "comment: // pragma solidity 0.6.10; [39380,39406]",
      "parent": "source_file [0,61657]",
      "at": 63
    },
    {
      "action": "insert-node",
      "tree": "comment: // Dependency file: contracts/truefi/Log.sol [39676,39720]",
      "parent": "source_file [0,61657]",
      "at": 65
    },
    {
      "action": "insert-node",
      "tree": "comment: /*  * ABDK Math 64.64 Smart Contract Library.  Copyright © 2019 by ABDK Consulting.  * Author: Mikhail Vladimirov <mikhail.vladimirov@gmail.com>  */ [39724,39875]",
      "parent": "source_file [0,61657]",
      "at": 66
    },
    {
      "action": "insert-node",
      "tree": "comment: // pragma solidity 0.6.10; [39877,39903]",
      "parent": "source_file [0,61657]",
      "at": 67
    },
    {
      "action": "insert-node",
      "tree": "comment: /**  * Smart contract library of mathematical functions operating with signed  * 64.64-bit fixed point numbers.  Signed 64.64-bit fixed point number is  * basically a simple fraction whose numerator is signed 128-bit integer and  * denominator is 2^64.  As long as denominator is always the same, there is no  * need to store it, thus in Solidity signed 64.64-bit fixed point numbers are  * represented by int128 type holding only the numerator.  */ [39907,40363]",
      "parent": "source_file [0,61657]",
      "at": 68
    },
    {
      "action": "insert-tree",
      "tree": "library_declaration [40365,42446]",
      "parent": "source_file [0,61657]",
      "at": 69
    },
    {
      "action": "insert-node",
      "tree": "comment: // Root file: contracts/truefi/TrueFiPool.sol [42452,42497]",
      "parent": "source_file [0,61657]",
      "at": 70
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; [42528,42601]",
      "parent": "source_file [0,61657]",
      "at": 72
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {ReentrancyGuard} from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\"; [42603,42688]",
      "parent": "source_file [0,61657]",
      "at": 73
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {SafeMath} from \"@openzeppelin/contracts/math/SafeMath.sol\"; [42690,42760]",
      "parent": "source_file [0,61657]",
      "at": 74
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {ERC20} from \"contracts/truefi/common/UpgradeableERC20.sol\"; [42764,42834]",
      "parent": "source_file [0,61657]",
      "at": 75
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {Ownable} from \"contracts/truefi/common/UpgradeableOwnable.sol\"; [42836,42910]",
      "parent": "source_file [0,61657]",
      "at": 76
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {ICurveGauge, ICurveMinter, ICurvePool} from \"contracts/truefi/interface/ICurve.sol\"; [42912,43007]",
      "parent": "source_file [0,61657]",
      "at": 77
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {ITrueFiPool} from \"contracts/truefi/interface/ITrueFiPool.sol\"; [43009,43083]",
      "parent": "source_file [0,61657]",
      "at": 78
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {ITrueLender} from \"contracts/truefi/interface/ITrueLender.sol\"; [43085,43159]",
      "parent": "source_file [0,61657]",
      "at": 79
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {IUniswapRouter} from \"contracts/truefi/interface/IUniswapRouter.sol\"; [43161,43241]",
      "parent": "source_file [0,61657]",
      "at": 80
    },
    {
      "action": "insert-node",
      "tree": "comment: // import {ABDKMath64x64} from \"contracts/truefi/Log.sol\"; [43243,43301]",
      "parent": "source_file [0,61657]",
      "at": 81
    },
    {
      "action": "move-tree",
      "tree": "comment: /**      * @dev Function to approve curve gauge to spend y pool tokens      */ [44989,45069]",
      "parent": "contract_body [43922,61657]",
      "at": 39
    },
    {
      "action": "move-tree",
      "tree": "comment: /**      * @dev Calculate pool value in TUSD      * \"virtual price\" of entire pool - LoanTokens, TUSD, curve y pool tokens      * @return pool value in TUSD      */ [43731,43899]",
      "parent": "contract_body [43922,61657]",
      "at": 45
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [3105,3760]",
      "label": "/**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * // importANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */"
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [12990,13571]",
      "label": "/**      * @dev Returns true if `account` is a contract.      *      * [// importANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */"
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [14007,14928]",
      "label": "/**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * // importANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */"
    },
    {
      "action": "insert-tree",
      "tree": "state_variable_declaration [44564,44608]",
      "parent": "contract_body [43922,61657]",
      "at": 17
    },
    {
      "action": "update-node",
      "tree": "comment: /**      * @dev Function to approve curve gauge to spend y pool tokens      */ [44989,45069]",
      "label": "/**      * @dev only lender can perform borrowing or repaying      */"
    },
    {
      "action": "insert-node",
      "tree": "modifier_definition [47525,47664]",
      "parent": "contract_body [43922,61657]",
      "at": 41
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Virtual value of yCRV tokens in the pool      */ [48127,48193]",
      "parent": "contract_body [43922,61657]",
      "at": 46
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Virtual value of liquid assets in the pool      */ [48358,48426]",
      "parent": "contract_body [43922,61657]",
      "at": 48
    },
    {
      "action": "insert-node",
      "tree": "function_definition [48432,48547]",
      "parent": "contract_body [43922,61657]",
      "at": 49
    },
    {
      "action": "insert-node",
      "tree": "function_definition [48729,48840]",
      "parent": "contract_body [43922,61657]",
      "at": 51
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev sets all token allowances used to 0      */ [49691,49752]",
      "parent": "contract_body [43922,61657]",
      "at": 56
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Exit pool only with liquid tokens      * This function will withdraw TUSD but with a small penalty      * @param amount amount of pool tokens to redeem for underlying tokens      */ [52417,52618]",
      "parent": "contract_body [43922,61657]",
      "at": 63
    },
    {
      "action": "insert-node",
      "tree": "function_definition [52624,53625]",
      "parent": "contract_body [43922,61657]",
      "at": 64
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Penalty (in % * 100) applied if liquid exit is performed with this amount      * returns 10000 if no penalty      */ [53633,53768]",
      "parent": "contract_body [43922,61657]",
      "at": 65
    },
    {
      "action": "insert-node",
      "tree": "function_definition [53774,54230]",
      "parent": "contract_body [43922,61657]",
      "at": 66
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Calculates integral of 5/(x+50)dx times 10000      */ [54238,54309]",
      "parent": "contract_body [43922,61657]",
      "at": 67
    },
    {
      "action": "insert-tree",
      "tree": "function_definition [54315,54490]",
      "parent": "contract_body [43922,61657]",
      "at": 68
    },
    {
      "action": "insert-node",
      "tree": "comment: /**      * @dev Calculates average penalty on interval [from; to]      */ [54498,54573]",
      "parent": "contract_body [43922,61657]",
      "at": 69
    },
    {
      "action": "insert-tree",
      "tree": "function_definition [54579,55020]",
      "parent": "contract_body [43922,61657]",
      "at": 70
    },
    {
      "action": "insert-node",
      "tree": "function_definition [57688,58500]",
      "parent": "contract_body [43922,61657]",
      "at": 78
    },
    {
      "action": "insert-node",
      "tree": "modifier: modifier [47525,47533]",
      "parent": "modifier_definition [47525,47664]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: onlyLender [47534,47544]",
      "parent": "modifier_definition [47525,47664]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [47544,47545]",
      "parent": "modifier_definition [47525,47664]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [47545,47546]",
      "parent": "modifier_definition [47525,47664]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "function_body [47547,47664]",
      "parent": "modifier_definition [47525,47664]",
      "at": 4
    },
    {
      "action": "update-node",
      "tree": "identifier: poolValue [43914,43923]",
      "label": "yTokenValue"
    },
    {
      "action": "insert-node",
      "tree": "function: function [48432,48440]",
      "parent": "function_definition [48432,48547]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: liquidValue [48441,48452]",
      "parent": "function_definition [48432,48547]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [48452,48453]",
      "parent": "function_definition [48432,48547]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [48453,48454]",
      "parent": "function_definition [48432,48547]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "visibility [48455,48461]",
      "parent": "function_definition [48432,48547]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [48462,48466]",
      "parent": "function_definition [48432,48547]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [48467,48484]",
      "parent": "function_definition [48432,48547]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "function_body [48485,48547]",
      "parent": "function_definition [48432,48547]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function: function [48729,48737]",
      "parent": "function_definition [48729,48840]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: poolValue [48738,48747]",
      "parent": "function_definition [48729,48840]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [48747,48748]",
      "parent": "function_definition [48729,48840]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [48748,48749]",
      "parent": "function_definition [48729,48840]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "visibility [48750,48756]",
      "parent": "function_definition [48729,48840]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [48757,48761]",
      "parent": "function_definition [48729,48840]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [48762,48779]",
      "parent": "function_definition [48729,48840]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "function_body [48780,48840]",
      "parent": "function_definition [48729,48840]",
      "at": 7
    },
    {
      "action": "update-node",
      "tree": "identifier: approveCurve [45084,45096]",
      "label": "resetApprovals"
    },
    {
      "action": "insert-node",
      "tree": "function: function [52624,52632]",
      "parent": "function_definition [52624,53625]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: liquidExit [52633,52643]",
      "parent": "function_definition [52624,53625]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [52643,52644]",
      "parent": "function_definition [52624,53625]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [52644,52658]",
      "parent": "function_definition [52624,53625]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "): ) [52658,52659]",
      "parent": "function_definition [52624,53625]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "visibility [52660,52668]",
      "parent": "function_definition [52624,53625]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "modifier_invocation [52669,52681]",
      "parent": "function_definition [52624,53625]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "function_body [52682,53625]",
      "parent": "function_definition [52624,53625]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function: function [53774,53782]",
      "parent": "function_definition [53774,54230]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: liquidExitPenalty [53783,53800]",
      "parent": "function_definition [53774,54230]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [53800,53801]",
      "parent": "function_definition [53774,54230]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [53801,53815]",
      "parent": "function_definition [53774,54230]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "): ) [53815,53816]",
      "parent": "function_definition [53774,54230]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "visibility [53817,53823]",
      "parent": "function_definition [53774,54230]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [53824,53828]",
      "parent": "function_definition [53774,54230]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [53829,53846]",
      "parent": "function_definition [53774,54230]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function_body [53847,54230]",
      "parent": "function_definition [53774,54230]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "modifier_invocation [56959,56969]",
      "parent": "function_definition [56862,57680]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function: function [57688,57696]",
      "parent": "function_definition [57688,58500]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: removeLiquidityFromCurve [57697,57721]",
      "parent": "function_definition [57688,58500]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [57721,57722]",
      "parent": "function_definition [57688,58500]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [57722,57746]",
      "parent": "function_definition [57688,58500]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "): ) [57746,57747]",
      "parent": "function_definition [57688,58500]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "visibility [57748,57756]",
      "parent": "function_definition [57688,58500]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "function_body [57757,58500]",
      "parent": "function_definition [57688,58500]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "modifier_invocation [58692,58702]",
      "parent": "function_definition [58635,58851]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "{: { [47547,47548]",
      "parent": "function_body [47547,47664]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [49295,49372]",
      "parent": "function_body [47547,47664]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [47655,47657]",
      "parent": "function_body [47547,47664]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [47663,47664]",
      "parent": "function_body [47547,47664]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "{: { [48485,48486]",
      "parent": "function_body [48485,48547]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "return_statement [48496,48540]",
      "parent": "function_body [48485,48547]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "}: } [48546,48547]",
      "parent": "function_body [48485,48547]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "{: { [48780,48781]",
      "parent": "function_body [48780,48840]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "return_statement [48791,48833]",
      "parent": "function_body [48780,48840]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "}: } [48839,48840]",
      "parent": "function_body [48780,48840]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [49538,49611]",
      "parent": "function_body [49527,49683]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [49814,49861]",
      "parent": "function_body [49803,49991]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [49932,49984]",
      "parent": "function_body [49803,49991]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [50653,50695]",
      "parent": "function_body [50180,50842]",
      "at": 9
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [51145,51247]",
      "parent": "function_body [51134,52409]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "{: { [52682,52683]",
      "parent": "function_body [52682,53625]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [52693,52795]",
      "parent": "function_body [52682,53625]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [52805,52880]",
      "parent": "function_body [52682,53625]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [52892,52962]",
      "parent": "function_body [52682,53625]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [52972,53060]",
      "parent": "function_body [52682,53625]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [53070,53157]",
      "parent": "function_body [52682,53625]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "comment: // burn tokens sent [53169,53188]",
      "parent": "function_body [52682,53625]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [53198,53224]",
      "parent": "function_body [52682,53625]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "if_statement [53236,53489]",
      "parent": "function_body [52682,53625]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [53501,53564]",
      "parent": "function_body [52682,53625]",
      "at": 9
    },
    {
      "action": "insert-tree",
      "tree": "emit_statement [53576,53618]",
      "parent": "function_body [52682,53625]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "}: } [53624,53625]",
      "parent": "function_body [52682,53625]",
      "at": 11
    },
    {
      "action": "insert-node",
      "tree": "{: { [53847,53848]",
      "parent": "function_body [53847,54230]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [53858,53885]",
      "parent": "function_body [53847,54230]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [53895,53920]",
      "parent": "function_body [53847,54230]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "if_statement [53930,53987]",
      "parent": "function_body [53847,54230]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [53997,54047]",
      "parent": "function_body [53847,54230]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [54057,54130]",
      "parent": "function_body [53847,54230]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "return_statement [54140,54223]",
      "parent": "function_body [53847,54230]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "}: } [54229,54230]",
      "parent": "function_body [53847,54230]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [55615,55675]",
      "parent": "function_body [55399,56007]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "variable_declaration_statement [55787,55850]",
      "parent": "function_body [55399,56007]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [55860,55919]",
      "parent": "function_body [55399,56007]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [55929,55959]",
      "parent": "function_body [55399,56007]",
      "at": 9
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [56499,56556]",
      "parent": "function_body [56272,56690]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "{: { [57757,57758]",
      "parent": "function_body [57757,58500]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "comment: // get rough estimate of how much yCRV we should sell [57768,57821]",
      "parent": "function_body [57757,58500]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [49657,49743]",
      "parent": "function_body [57757,58500]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [49757,49920]",
      "parent": "function_body [57757,58500]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "comment: // pull tokens from gauge [58060,58085]",
      "parent": "function_body [57757,58500]",
      "at": 4
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [49973,50027]",
      "parent": "function_body [57757,58500]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "comment: // remove TUSD from curve [58159,58184]",
      "parent": "function_body [57757,58500]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [58194,58265]",
      "parent": "function_body [57757,58500]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [58275,58393]",
      "parent": "function_body [57757,58500]",
      "at": 8
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [50080,50162]",
      "parent": "function_body [57757,58500]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "}: } [58499,58500]",
      "parent": "function_body [57757,58500]",
      "at": 10
    },
    {
      "action": "move-tree",
      "tree": "call_expression [44104,44212]",
      "parent": "return_statement [48263,48343]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "return: return [48496,48502]",
      "parent": "return_statement [48496,48540]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "call_expression [48503,48539]",
      "parent": "return_statement [48496,48540]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "return: return [48791,48797]",
      "parent": "return_statement [48791,48833]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "call_expression [44015,44067]",
      "parent": "return_statement [48791,48833]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_expression [49932,49983]",
      "parent": "expression_statement [49932,49984]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration [49578,49602]",
      "parent": "variable_declaration_statement [52892,52962]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [52917,52918]",
      "parent": "variable_declaration_statement [52892,52962]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_expression [52919,52961]",
      "parent": "variable_declaration_statement [52892,52962]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "return: return [54140,54146]",
      "parent": "return_statement [54140,54223]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "call_expression [54147,54222]",
      "parent": "return_statement [54140,54223]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration [55787,55803]",
      "parent": "variable_declaration_statement [55787,55850]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "=: = [55804,55805]",
      "parent": "variable_declaration_statement [55787,55850]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_expression [48167,48210]",
      "parent": "variable_declaration_statement [55787,55850]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "call_expression [55929,55958]",
      "parent": "expression_statement [55929,55959]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "member_expression [44015,44050]",
      "parent": "call_expression [48503,48539]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [48524,48525]",
      "parent": "call_expression [48503,48539]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [48525,48538]",
      "parent": "call_expression [48503,48539]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [48538,48539]",
      "parent": "call_expression [48503,48539]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [48798,48815]",
      "parent": "call_expression [48798,48832]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [49898,49917]",
      "parent": "call_expression [49871,49921]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [49919,49920]",
      "parent": "call_expression [49871,49921]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [49932,49958]",
      "parent": "call_expression [49932,49983]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [49958,49959]",
      "parent": "call_expression [49932,49983]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_argument [45156,45176]",
      "parent": "call_expression [49932,49983]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": ",: , [49979,49980]",
      "parent": "call_expression [49932,49983]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_argument [50152,50153]",
      "parent": "call_expression [49932,49983]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "): ) [49982,49983]",
      "parent": "call_expression [49932,49983]",
      "at": 5
    },
    {
      "action": "insert-node",
      "tree": "member_expression [54147,54165]",
      "parent": "call_expression [54147,54222]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [54165,54166]",
      "parent": "call_expression [54147,54222]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [54166,54221]",
      "parent": "call_expression [54147,54222]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [54221,54222]",
      "parent": "call_expression [54147,54222]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "member_expression [48147,48166]",
      "parent": "call_expression [55929,55958]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [55948,55949]",
      "parent": "call_expression [55929,55958]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [55949,55957]",
      "parent": "call_expression [55929,55958]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [55957,55958]",
      "parent": "call_expression [55929,55958]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "expression_statement [57191,57255]",
      "parent": "block_statement [57176,57381]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [58475,58484]",
      "parent": "call_expression [58403,58492]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "type_cast_expression [54147,54161]",
      "parent": "member_expression [54147,54165]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": ".: . [54161,54162]",
      "parent": "member_expression [54147,54165]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: sub [54162,54165]",
      "parent": "member_expression [54147,54165]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "call_expression [57191,57254]",
      "parent": "expression_statement [57191,57255]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "primitive_type [45178,45185]",
      "parent": "type_cast_expression [54147,54161]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [54154,54155]",
      "parent": "type_cast_expression [54147,54161]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_argument [54155,54160]",
      "parent": "type_cast_expression [54147,54161]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [54160,54161]",
      "parent": "type_cast_expression [54147,54161]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "identifier: removeLiquidityFromCurve [57191,57215]",
      "parent": "call_expression [57191,57254]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [57215,57216]",
      "parent": "call_expression [57191,57254]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_argument [57216,57253]",
      "parent": "call_expression [57191,57254]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [57253,57254]",
      "parent": "call_expression [57191,57254]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_expression [49605,49642]",
      "parent": "call_argument [57216,57253]",
      "at": 0
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [2014,2037]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [4814,4837]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [7490,7513]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [12869,12892]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [18908,18931]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [20012,20035]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [22273,22296]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [33493,33516]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [35807,35830]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [35988,36011]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [37232,37255]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [38527,38550]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [38825,38848]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // prettier-ignore [43967,43985]"
    },
    {
      "action": "delete-node",
      "tree": ".: . [44081,44082]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: add [44082,44085]"
    },
    {
      "action": "delete-node",
      "tree": "member_expression [44015,44085]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [44085,44086]"
    },
    {
      "action": "delete-node",
      "tree": "call_argument [44104,44212]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [44212,44213]"
    },
    {
      "action": "delete-node",
      "tree": "call_expression [44015,44213]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [45185,45186]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [45186,45188]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [45188,45189]"
    },
    {
      "action": "delete-node",
      "tree": "type_cast_expression [45178,45189]"
    },
    {
      "action": "delete-node",
      "tree": "call_argument [45178,45189]"
    },
    {
      "action": "delete-node",
      "tree": "(: ( [48166,48167]"
    },
    {
      "action": "delete-node",
      "tree": "call_argument [48167,48210]"
    },
    {
      "action": "delete-node",
      "tree": "): ) [48210,48211]"
    },
    {
      "action": "delete-node",
      "tree": "call_expression [48147,48211]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [48147,48212]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // TODO: create modifier for onlyLender [49246,49285]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // get rough estimate of how much TUSD we'll get back from curve [49500,49564]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [49603,49604]"
    },
    {
      "action": "delete-node",
      "tree": "variable_declaration_statement [49578,49643]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // pull tokens from gauge [49934,49959]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // remove TUSD from curve [50041,50066]"
    }
  ]
}