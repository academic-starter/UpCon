<?xml version="1.0" ?>
<matches>
  <match src="comment: /**      * @dev Emitted when `account` is granted `role`.      *      * `sender` is the account that originated the contract call, an admin role      * bearer except when using {_setupRole}.      */ [35164,35367]" dest="comment: /**      * @dev Emitted when `account` is granted `role`.      *      * `sender` is the account that originated the contract call, an admin role      * bearer except when using {_setupRole}.      */ [34940,35143]"/>
  <match src="function: function [42080,42088]" dest="function: function [41856,41864]"/>
  <match src="string_literal [44971,45019]" dest="string_literal [44747,44795]"/>
  <match src="call_argument [44061,44065]" dest="call_argument [43837,43841]"/>
  <match src="(: ( [17250,17251]" dest="(: ( [17184,17185]"/>
  <match src="): ) [21002,21003]" dest="): ) [20879,20880]"/>
  <match src="struct_declaration [30332,30376]" dest="struct_declaration [30176,30220]"/>
  <match src="pragma_directive [10426,10457]" dest="pragma_directive [10360,10391]"/>
  <match src="}: } [27091,27092]" dest="}: } [26935,26936]"/>
  <match src="(: ( [47768,47769]" dest="(: ( [47544,47545]"/>
  <match src=",: , [53136,53137]" dest=",: , [53042,53043]"/>
  <match src="type_name [29450,29460]" dest="type_name [29294,29304]"/>
  <match src="): ) [7368,7369]" dest="): ) [7335,7336]"/>
  <match src="event_paramater [2577,2590]" dest="event_paramater [2577,2590]"/>
  <match src="boolean_literal [5054,5059]" dest="boolean_literal [5021,5026]"/>
  <match src="call_argument [40812,40840]" dest="call_argument [40587,40615]"/>
  <match src="identifier: IERC20 [51567,51573]" dest="identifier: IERC20 [51342,51348]"/>
  <match src="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [4435,4514]" dest="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [4402,4481]"/>
  <match src="identifier: item [42111,42115]" dest="identifier: item [41887,41891]"/>
  <match src="primitive_type [16262,16267]" dest="primitive_type [16196,16201]"/>
  <match src="identifier: set [24719,24722]" dest="identifier: set [24563,24566]"/>
  <match src="contract_body [49787,51032]" dest="contract_body [49562,50807]"/>
  <match src="(: ( [24063,24064]" dest="(: ( [23907,23908]"/>
  <match src="=: = [21851,21852]" dest="=: = [21728,21729]"/>
  <match src="return_statement [15575,15635]" dest="return_statement [15509,15569]"/>
  <match src="type_name [21446,21451]" dest="type_name [21323,21328]"/>
  <match src="bool: bool [15490,15494]" dest="bool: bool [15424,15428]"/>
  <match src="identifier: memPtr [42754,42760]" dest="identifier: memPtr [42530,42536]"/>
  <match src="identifier: value [20845,20850]" dest="identifier: value [20722,20727]"/>
  <match src="(: ( [53019,53020]" dest="(: ( [52925,52926]"/>
  <match src="state_variable_declaration [51833,51945]" dest="state_variable_declaration [51608,51720]"/>
  <match src="type_name [4055,4062]" dest="type_name [4022,4029]"/>
  <match src="): ) [42115,42116]" dest="): ) [41891,41892]"/>
  <match src="primitive_type [16246,16253]" dest="primitive_type [16180,16187]"/>
  <match src="pure: pure [45350,45354]" dest="pure: pure [45126,45130]"/>
  <match src="(: ( [12817,12818]" dest="(: ( [12751,12752]"/>
  <match src="identifier: data [13783,13787]" dest="identifier: data [13717,13721]"/>
  <match src="primitive_type [17332,17337]" dest="primitive_type [17266,17271]"/>
  <match src="binary_expression [49261,49287]" dest="binary_expression [49037,49063]"/>
  <match src="): ) [30935,30936]" dest="): ) [30779,30780]"/>
  <match src="assembly: assembly [47629,47637]" dest="assembly: assembly [47405,47413]"/>
  <match src="call_expression [25852,25869]" dest="call_expression [25696,25713]"/>
  <match src="{: { [37745,37746]" dest="{: { [37521,37522]"/>
  <match src="): ) [1902,1903]" dest="): ) [1902,1903]"/>
  <match src="user_defined_type [43332,43339]" dest="user_defined_type [43108,43115]"/>
  <match src=",: , [50976,50977]" dest=",: , [50751,50752]"/>
  <match src="}: } [30997,30998]" dest="}: } [30841,30842]"/>
  <match src="): ) [43415,43416]" dest="): ) [43191,43192]"/>
  <match src="solidity_version_comparison_operator [18521,18523]" dest="solidity_version_comparison_operator [22133,22135]"/>
  <match src="): ) [54106,54107]" dest="): ) [54012,54013]"/>
  <match src="uint256: uint256 [3795,3802]" dest="uint256: uint256 [3762,3769]"/>
  <match src="internal: internal [27845,27853]" dest="internal: internal [27689,27697]"/>
  <match src="): ) [21003,21004]" dest="): ) [20880,20881]"/>
  <match src="(: ( [32637,32638]" dest="(: ( [32448,32449]"/>
  <match src="(: ( [47348,47349]" dest="(: ( [47124,47125]"/>
  <match src="identifier: data [14225,14229]" dest="identifier: data [14159,14163]"/>
  <match src="call_argument [30670,30675]" dest="call_argument [30514,30519]"/>
  <match src="identifier: members [34579,34586]" dest="identifier: members [34355,34362]"/>
  <match src="call_argument [52280,52298]" dest="call_argument [52186,52204]"/>
  <match src="type_name [27283,27293]" dest="type_name [27127,27137]"/>
  <match src="assembly_statement [47629,47924]" dest="assembly_statement [47405,47700]"/>
  <match src="parameter [37326,37338]" dest="parameter [37102,37114]"/>
  <match src="}: } [36076,36077]" dest="}: } [35852,35853]"/>
  <match src="yul_evm_builtin [46856,46860]" dest="yul_evm_builtin [46632,46636]"/>
  <match src="function_body [40388,40520]" dest="function_body [40164,40296]"/>
  <match src="identifier: IERC20 [19120,19126]" dest="identifier: IERC20 [18997,19003]"/>
  <match src="primitive_type [43459,43464]" dest="primitive_type [43235,43240]"/>
  <match src="{: { [46832,46833]" dest="{: { [46608,46609]"/>
  <match src="primitive_type [19792,19799]" dest="primitive_type [19669,19676]"/>
  <match src=",: , [40059,40060]" dest=",: , [39835,39836]"/>
  <match src="member_expression [26990,27001]" dest="member_expression [26834,26845]"/>
  <match src="visibility [40743,40751]" dest="visibility [40518,40526]"/>
  <match src=",: , [35436,35437]" dest=",: , [35212,35213]"/>
  <match src="primitive_type [5295,5302]" dest="primitive_type [5262,5269]"/>
  <match src="&gt;: &gt; [7335,7336]" dest="&gt;: &gt; [7302,7303]"/>
  <match src="(: ( [43750,43751]" dest="(: ( [43526,43527]"/>
  <match src="solidity_pragma_token [41282,41296]" dest="solidity_pragma_token [41057,41072]"/>
  <match src="comment: /*      * Private Helpers      */ [45875,45910]" dest="comment: /*      * Private Helpers      */ [45651,45686]"/>
  <match src="return: return [5074,5080]" dest="return: return [5041,5047]"/>
  <match src="identifier: set [25700,25703]" dest="identifier: set [25544,25547]"/>
  <match src="solidity_version_comparison_operator [22289,22291]" dest="solidity_version_comparison_operator [31841,31843]"/>
  <match src="address: address [29228,29235]" dest="address: address [29072,29079]"/>
  <match src="type_name [7891,7898]" dest="type_name [7858,7865]"/>
  <match src="modifier_invocation [52906,52924]" dest="modifier_invocation [52812,52830]"/>
  <match src="primitive_type [52941,52948]" dest="primitive_type [52847,52854]"/>
  <match src="identifier: byte0 [48282,48287]" dest="identifier: byte0 [48058,48063]"/>
  <match src="identifier: Set [28664,28667]" dest="identifier: Set [28508,28511]"/>
  <match src="string: string [17718,17724]" dest="string: string [17652,17658]"/>
  <match src="memory: memory [45370,45376]" dest="memory: memory [45146,45152]"/>
  <match src=".: . [20336,20337]" dest=".: . [20213,20214]"/>
  <match src="expression_statement [39760,39786]" dest="expression_statement [39536,39562]"/>
  <match src="string [51700,51707]" dest="string [51475,51482]"/>
  <match src="type_name [31786,31793]" dest="type_name [31630,31637]"/>
  <match src="internal: internal [17314,17322]" dest="internal: internal [17248,17256]"/>
  <match src="identifier: transferFrom [2255,2267]" dest="identifier: transferFrom [2255,2267]"/>
  <match src="return_statement [30948,30991]" dest="return_statement [30792,30835]"/>
  <match src="parameter [7880,7889]" dest="parameter [7847,7856]"/>
  <match src="): ) [16017,16018]" dest="): ) [15951,15952]"/>
  <match src="identifier: require [45059,45066]" dest="identifier: require [44835,44842]"/>
  <match src="user_defined_type [27587,27597]" dest="user_defined_type [27431,27441]"/>
  <match src="): ) [54339,54340]" dest="): ) [54281,54282]"/>
  <match src="event_paramater [51981,52006]" dest="event_paramater [51756,51781]"/>
  <match src="function: function [46694,46702]" dest="function: function [46470,46478]"/>
  <match src="binary_expression [4179,4184]" dest="binary_expression [4146,4151]"/>
  <match src="): ) [41715,41716]" dest="): ) [41491,41492]"/>
  <match src="}: } [30684,30685]" dest="}: } [30528,30529]"/>
  <match src="function_body [26223,26273]" dest="function_body [26067,26117]"/>
  <match src="expression_statement [41799,41859]" dest="expression_statement [41575,41635]"/>
  <match src="variable_declaration_statement [12745,12800]" dest="variable_declaration_statement [12679,12734]"/>
  <match src="storage: storage [27598,27605]" dest="storage: storage [27442,27449]"/>
  <match src="(: ( [38244,38245]" dest="(: ( [38020,38021]"/>
  <match src="comment: /**      * @notice Deposit tokens into pos portal      * @dev When `depositor` deposits tokens into pos portal, tokens get locked into predicate contract.      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on side chain      * @param rootToken Token which gets deposited      * @param depositData Extra data for deposit (amount for ERC20, token id for ERC721 etc.) [ABI encoded]      */ [49796,50274]" dest="comment: /**      * @notice Deposit tokens into pos portal      * @dev When `depositor` deposits tokens into pos portal, tokens get locked into predicate contract.      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on side chain      * @param rootToken Token which gets deposited      * @param depositData Extra data for deposit (amount for ERC20, token id for ERC721 etc.) [ABI encoded]      */ [49571,50049]"/>
  <match src="bytes32: bytes32 [23546,23553]" dest="bytes32: bytes32 [23390,23397]"/>
  <match src="): ) [22097,22098]" dest="): ) [21974,21975]"/>
  <match src="primitive_type [14082,14089]" dest="primitive_type [14016,14023]"/>
  <match src="type_name [34462,34486]" dest="type_name [34238,34262]"/>
  <match src="function_definition [15112,15642]" dest="function_definition [15046,15576]"/>
  <match src="(: ( [35954,35955]" dest="(: ( [35730,35731]"/>
  <match src="number_literal: 0 [9455,9456]" dest="number_literal: 0 [9422,9423]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens in existence.      */ [227,295]" dest="comment: /**      * @dev Returns the amount of tokens in existence.      */ [227,295]"/>
  <match src="returns: returns [14720,14727]" dest="returns: returns [14654,14661]"/>
  <match src="visibility [37029,37035]" dest="visibility [36805,36811]"/>
  <match src="): ) [53753,53754]" dest="): ) [53659,53660]"/>
  <match src="member_expression [46367,46375]" dest="member_expression [46143,46151]"/>
  <match src="primitive_type [11202,11206]" dest="primitive_type [11136,11140]"/>
  <match src="call_argument [12827,12887]" dest="call_argument [12761,12821]"/>
  <match src="return_statement [43921,43950]" dest="return_statement [43697,43726]"/>
  <match src="assembly: assembly [46823,46831]" dest="assembly: assembly [46599,46607]"/>
  <match src="(: ( [23937,23938]" dest="(: ( [23781,23782]"/>
  <match src="comment: /**      * @notice Validates log signature, from and to address      * then sends the correct amount to withdrawer      * callable only by manager      * @param rootToken Token which gets withdrawn      * @param log Valid ERC20 burn log from child chain      */ [53161,53428]" dest="comment: /**      * @notice Validates log signature, from and to address      * then sends the correct amount to withdrawer      * callable only by manager      * @param rootToken Token which gets withdrawn      * @param log Valid ERC20 burn log from child chain      */ [53067,53334]"/>
  <match src="string_literal [16977,17018]" dest="string_literal [16911,16952]"/>
  <match src="array_access [37077,37089]" dest="array_access [36853,36865]"/>
  <match src="address: address [1871,1878]" dest="address: address [1871,1878]"/>
  <match src="type_name [51491,51496]" dest="type_name [51266,51271]"/>
  <match src="yul_identifier [46870,46876]" dest="yul_identifier [46646,46652]"/>
  <match src="identifier: a [8616,8617]" dest="identifier: a [8583,8584]"/>
  <match src="visibility [46021,46028]" dest="visibility [45797,45804]"/>
  <match src="identifier: item [45800,45804]" dest="identifier: item [45576,45580]"/>
  <match src="binary_expression [42521,42562]" dest="binary_expression [42297,42338]"/>
  <match src="solidity: solidity [51355,51363]" dest="solidity: solidity [51131,51139]"/>
  <match src="{: { [43724,43725]" dest="{: { [43500,43501]"/>
  <match src="call_argument [54226,54235]" dest="call_argument [54184,54193]"/>
  <match src="exp: exp [44675,44678]" dest="exp: exp [44451,44454]"/>
  <match src="): ) [20137,20138]" dest="): ) [20014,20015]"/>
  <match src="yul_identifier [48177,48183]" dest="yul_identifier [47953,47959]"/>
  <match src="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [12904,13651]" dest="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [12838,13585]"/>
  <match src="): ) [4153,4154]" dest="): ) [4120,4121]"/>
  <match src="type_name [46000,46007]" dest="type_name [45776,45783]"/>
  <match src="identifier: target [15151,15157]" dest="identifier: target [15085,15091]"/>
  <match src="call_argument [19434,19461]" dest="call_argument [19311,19338]"/>
  <match src="}: } [49152,49153]" dest="}: } [48928,48929]"/>
  <match src="identifier: _verifyCallResult [16580,16597]" dest="identifier: _verifyCallResult [16514,16531]"/>
  <match src="(: ( [41980,41981]" dest="(: ( [41756,41757]"/>
  <match src="variable_declaration [3795,3804]" dest="variable_declaration [3762,3771]"/>
  <match src="visibility [36293,36299]" dest="visibility [36069,36075]"/>
  <match src="[: [ [25712,25713]" dest="[: [ [25556,25557]"/>
  <match src=".: . [12602,12603]" dest=".: . [12536,12537]"/>
  <match src=",: , [17691,17692]" dest=",: , [17625,17626]"/>
  <match src="identifier: safeTransfer [19107,19119]" dest="identifier: safeTransfer [18984,18996]"/>
  <match src="{: { [6199,6200]" dest="{: { [6166,6167]"/>
  <match src="modifier: modifier [51167,51175]" dest="modifier: modifier [50943,50951]"/>
  <match src="parameter [50959,50976]" dest="parameter [50734,50751]"/>
  <match src="(: ( [16556,16557]" dest="(: ( [16490,16491]"/>
  <match src="identifier: index [30287,30292]" dest="identifier: index [30131,30136]"/>
  <match src="call_argument [53131,53135]" dest="call_argument [53037,53041]"/>
  <match src=".: . [24722,24723]" dest=".: . [24566,24567]"/>
  <match src="identifier: lockTokens [52716,52726]" dest="identifier: lockTokens [52622,52632]"/>
  <match src="return_statement [45846,45860]" dest="return_statement [45622,45636]"/>
  <match src="(: ( [42208,42209]" dest="(: ( [41984,41985]"/>
  <match src="string_literal [42449,42490]" dest="string_literal [42225,42266]"/>
  <match src="member_expression [22068,22078]" dest="member_expression [21945,21955]"/>
  <match src="type_cast_expression [29321,29335]" dest="type_cast_expression [29165,29179]"/>
  <match src="}: } [15557,15558]" dest="}: } [15491,15492]"/>
  <match src="contract: contract [40607,40615]" dest="contract: contract [40382,40390]"/>
  <match src="[: [ [25488,25489]" dest="[: [ [25332,25333]"/>
  <match src="parameter [38172,38184]" dest="parameter [37948,37960]"/>
  <match src="identifier: endPtr [46521,46527]" dest="identifier: endPtr [46297,46303]"/>
  <match src="revert_statement [18340,18361]" dest="revert_statement [18274,18295]"/>
  <match src="parameter [11202,11206]" dest="parameter [11136,11140]"/>
  <match src="update_expression [46591,46598]" dest="update_expression [46367,46374]"/>
  <match src="expression_statement [40897,40983]" dest="expression_statement [40672,40758]"/>
  <match src="identifier: returndata [17827,17837]" dest="identifier: returndata [17761,17771]"/>
  <match src="=: = [43453,43454]" dest="=: = [43229,43230]"/>
  <match src="virtual: virtual [32733,32740]" dest="virtual: virtual [32544,32551]"/>
  <match src="number_literal: 33 [44134,44136]" dest="number_literal: 33 [43910,43912]"/>
  <match src="member_expression [25190,25201]" dest="member_expression [25034,25045]"/>
  <match src="return_type_definition [1167,1184]" dest="return_type_definition [1167,1184]"/>
  <match src="variable_declaration_statement [53687,53755]" dest="variable_declaration_statement [53593,53661]"/>
  <match src="return_type_definition [1913,1927]" dest="return_type_definition [1913,1927]"/>
  <match src="identifier: require [46502,46509]" dest="identifier: require [46278,46285]"/>
  <match src=",: , [53499,53500]" dest=",: , [53405,53406]"/>
  <match src="identifier: memPtr [45805,45811]" dest="identifier: memPtr [45581,45587]"/>
  <match src="call_argument [54264,54274]" dest="call_argument [54222,54232]"/>
  <match src="(: ( [37698,37699]" dest="(: ( [37474,37475]"/>
  <match src="parameter [10200,10226]" dest="parameter [10167,10193]"/>
  <match src="}: } [41001,41002]" dest="}: } [40776,40777]"/>
  <match src="(: ( [17601,17602]" dest="(: ( [17535,17536]"/>
  <match src="returns: returns [7296,7303]" dest="returns: returns [7263,7270]"/>
  <match src="identifier: size [11418,11422]" dest="identifier: size [11352,11356]"/>
  <match src="identifier: offset [45539,45545]" dest="identifier: offset [45315,45321]"/>
  <match src="]: ] [42312,42313]" dest="]: ] [42088,42089]"/>
  <match src="uint256: uint256 [20484,20491]" dest="uint256: uint256 [20361,20368]"/>
  <match src="view: view [31362,31366]" dest="view: view [31206,31210]"/>
  <match src="{: { [38957,38958]" dest="{: { [38733,38734]"/>
  <match src="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [11572,12493]" dest="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [11506,12427]"/>
  <match src="type_name [19349,19356]" dest="type_name [19226,19233]"/>
  <match src="visibility [37340,37346]" dest="visibility [37116,37122]"/>
  <match src="{: { [31167,31168]" dest="{: { [31011,31012]"/>
  <match src="): ) [47541,47542]" dest="): ) [47317,47318]"/>
  <match src="): ) [35154,35155]" dest="): ) [34930,34931]"/>
  <match src=",: , [17621,17622]" dest=",: , [17555,17556]"/>
  <match src="variable_declaration_statement [45588,45620]" dest="variable_declaration_statement [45364,45396]"/>
  <match src="}: } [40849,40850]" dest="}: } [40624,40625]"/>
  <match src="number_literal: 1 [47043,47044]" dest="number_literal: 1 [46819,46820]"/>
  <match src="type_name [34683,34690]" dest="type_name [34459,34466]"/>
  <match src="): ) [20839,20840]" dest="): ) [20716,20717]"/>
  <match src="constructor: constructor [52125,52136]" dest="constructor: constructor [52031,52042]"/>
  <match src="yul_identifier [43550,43556]" dest="yul_identifier [43326,43332]"/>
  <match src="identifier: _inner [28584,28590]" dest="identifier: _inner [28428,28434]"/>
  <match src="type_name [4409,4413]" dest="type_name [4376,4380]"/>
  <match src="identifier: item [43347,43351]" dest="identifier: item [43123,43127]"/>
  <match src="yul_identifier [49419,49423]" dest="yul_identifier [49195,49199]"/>
  <match src="type_cast_expression [28971,29003]" dest="type_cast_expression [28815,28847]"/>
  <match src="string [51218,51234]" dest="string [50994,51010]"/>
  <match src="identifier: role [40044,40048]" dest="identifier: role [39820,39824]"/>
  <match src="(: ( [27586,27587]" dest="(: ( [27430,27431]"/>
  <match src="yul_identifier [47231,47237]" dest="yul_identifier [47007,47013]"/>
  <match src="): ) [42490,42491]" dest="): ) [42266,42267]"/>
  <match src="): ) [46760,46761]" dest="): ) [46536,46537]"/>
  <match src="address: address [28897,28904]" dest="address: address [28741,28748]"/>
  <match src="function_body [20473,20673]" dest="function_body [20350,20550]"/>
  <match src="identifier: _contains [29536,29545]" dest="identifier: _contains [29380,29389]"/>
  <match src="(: ( [16364,16365]" dest="(: ( [16298,16299]"/>
  <match src="function_definition [1102,1185]" dest="function_definition [1102,1185]"/>
  <match src="solidity_pragma_token [33042,33065]" dest="solidity_pragma_token [18384,18407]"/>
  <match src="uint256: uint256 [19809,19816]" dest="uint256: uint256 [19686,19693]"/>
  <match src="=: = [40774,40775]" dest="=: = [40549,40550]"/>
  <match src="identifier: memPtr [46289,46295]" dest="identifier: memPtr [46065,46071]"/>
  <match src="(: ( [1921,1922]" dest="(: ( [1921,1922]"/>
  <match src="call_expression [26899,26972]" dest="call_expression [26743,26816]"/>
  <match src="state_mutability [16318,16322]" dest="state_mutability [16252,16256]"/>
  <match src="call_argument [53031,53046]" dest="call_argument [52937,52952]"/>
  <match src="call_argument [27381,27386]" dest="call_argument [27225,27230]"/>
  <match src="primitive_type [4100,4104]" dest="primitive_type [4067,4071]"/>
  <match src="identifier: Address [19070,19077]" dest="identifier: Address [18947,18954]"/>
  <match src="uint256: uint256 [46266,46273]" dest="uint256: uint256 [46042,46049]"/>
  <match src="assembly: assembly [45204,45212]" dest="assembly: assembly [44980,44988]"/>
  <match src="uint256: uint256 [5683,5690]" dest="uint256: uint256 [5650,5657]"/>
  <match src="number_literal: 1 [48524,48525]" dest="number_literal: 1 [48300,48301]"/>
  <match src="public: public [51723,51729]" dest="public: public [51498,51504]"/>
  <match src="identifier: result [44653,44659]" dest="identifier: result [44429,44435]"/>
  <match src="primitive_type [51491,51496]" dest="primitive_type [51266,51271]"/>
  <match src="return_type_definition [16323,16345]" dest="return_type_definition [16257,16279]"/>
  <match src="identifier: dataLen [42650,42657]" dest="identifier: dataLen [42426,42433]"/>
  <match src="parameter [9350,9359]" dest="parameter [9317,9326]"/>
  <match src="memory: memory [43340,43346]" dest="memory: memory [43116,43122]"/>
  <match src="&gt;: &gt; [11553,11554]" dest="&gt;: &gt; [11487,11488]"/>
  <match src="visibility [8560,8568]" dest="visibility [8527,8535]"/>
  <match src="): ) [52349,52350]" dest="): ) [52255,52256]"/>
  <match src="primitive_type [53464,53471]" dest="primitive_type [53370,53377]"/>
  <match src="(: ( [24018,24019]" dest="(: ( [23862,23863]"/>
  <match src="comment: /**      * @dev Returns one of the accounts that have `role`. `index` must be a      * value between 0 and {getRoleMemberCount}, non-inclusive.      *      * Role bearers are not sorted in any particular way, and their ordering may      * change at any point.      *      * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure      * you perform all queries on the same block. See the following      * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]      * for more information.      */ [36386,36971]" dest="comment: /**      * @dev Returns one of the accounts that have `role`. `index` must be a      * value between 0 and {getRoleMemberCount}, non-inclusive.      *      * Role bearers are not sorted in any particular way, and their ordering may      * change at any point.      *      * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure      * you perform all queries on the same block. See the following      * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]      * for more information.      */ [36162,36747]"/>
  <match src="expression_statement [44045,44104]" dest="expression_statement [43821,43880]"/>
  <match src="block_statement [47614,47935]" dest="block_statement [47390,47711]"/>
  <match src="yul_path [47152,47157]" dest="yul_path [46928,46933]"/>
  <match src="identifier: set [29546,29549]" dest="identifier: set [29390,29393]"/>
  <match src="solidity: solidity [41282,41290]" dest="solidity: solidity [41057,41065]"/>
  <match src="identifier: a [4707,4708]" dest="identifier: a [4674,4675]"/>
  <match src=",: , [52754,52755]" dest=",: , [52660,52661]"/>
  <match src="visibility [51841,51847]" dest="visibility [51616,51622]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [14864,15106]" dest="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [14798,15040]"/>
  <match src="parameter [19337,19347]" dest="parameter [19214,19224]"/>
  <match src="yul_function_call [49038,49062]" dest="yul_function_call [48814,48838]"/>
  <match src="identifier: data [14111,14115]" dest="identifier: data [14045,14049]"/>
  <match src="address: address [2535,2542]" dest="address: address [2535,2542]"/>
  <match src="string_literal [44068,44102]" dest="string_literal [43844,43878]"/>
  <match src="type_name [1871,1878]" dest="type_name [1871,1878]"/>
  <match src="return_statement [27885,27921]" dest="return_statement [27729,27765]"/>
  <match src="variable_declaration_statement [25457,25500]" dest="variable_declaration_statement [25301,25344]"/>
  <match src="function: function [29685,29693]" dest="function: function [29529,29537]"/>
  <match src="function_body [52930,53153]" dest="function_body [52836,53059]"/>
  <match src="identifier: sender [2276,2282]" dest="identifier: sender [2276,2282]"/>
  <match src="identifier: a [4731,4732]" dest="identifier: a [4698,4699]"/>
  <match src="bytes32: bytes32 [30662,30669]" dest="bytes32: bytes32 [30506,30513]"/>
  <match src="return_statement [26234,26266]" dest="return_statement [26078,26110]"/>
  <match src="(: ( [28486,28487]" dest="(: ( [28330,28331]"/>
  <match src="): ) [20545,20546]" dest="): ) [20422,20423]"/>
  <match src="): ) [12887,12888]" dest="): ) [12821,12822]"/>
  <match src="&quot;: &quot; [12652,12653]" dest="&quot;: &quot; [12586,12587]"/>
  <match src="): ) [44927,44928]" dest="): ) [44703,44704]"/>
  <match src="identifier: value [27619,27624]" dest="identifier: value [27463,27468]"/>
  <match src="member_expression [24230,24241]" dest="member_expression [24074,24085]"/>
  <match src="returns: returns [26870,26877]" dest="returns: returns [26714,26721]"/>
  <match src="visibility [45341,45349]" dest="visibility [45117,45125]"/>
  <match src="visibility [6584,6592]" dest="visibility [6551,6559]"/>
  <match src="false: false [24314,24319]" dest="false: false [24158,24163]"/>
  <match src="type_name [28664,28667]" dest="type_name [28508,28511]"/>
  <match src="identifier: a [6698,6699]" dest="identifier: a [6665,6666]"/>
  <match src="identifier: account [471,478]" dest="identifier: account [471,478]"/>
  <match src="call_argument [40031,40035]" dest="call_argument [39807,39811]"/>
  <match src="call_argument [29558,29590]" dest="call_argument [29402,29434]"/>
  <match src="true: true [3870,3874]" dest="true: true [3837,3841]"/>
  <match src="identifier: value [29482,29487]" dest="identifier: value [29326,29331]"/>
  <match src="view: view [29498,29502]" dest="view: view [29342,29346]"/>
  <match src="(: ( [47063,47064]" dest="(: ( [46839,46840]"/>
  <match src="type_name [3724,3731]" dest="type_name [3691,3698]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [2896,2927]" dest="comment: // File: contracts/lib/SafeERC20.sol [18335,18371]"/>
  <match src="binary_expression [26241,26265]" dest="binary_expression [26085,26109]"/>
  <match src="]: ] [36042,36043]" dest="]: ] [35818,35819]"/>
  <match src="identifier: offset [44480,44486]" dest="identifier: offset [44256,44262]"/>
  <match src="view: view [489,493]" dest="view: view [489,493]"/>
  <match src="(: ( [12745,12746]" dest="(: ( [12679,12680]"/>
  <match src="return_statement [5367,5385]" dest="return_statement [5334,5352]"/>
  <match src="type_name [4415,4422]" dest="type_name [4382,4389]"/>
  <match src="type_name [42304,42313]" dest="type_name [42080,42089]"/>
  <match src="comment: // copy as many word sizes as possible [48904,48942]" dest="comment: // copy as many word sizes as possible [48680,48718]"/>
  <match src=".: . [26445,26446]" dest=".: . [26289,26290]"/>
  <match src="return_statement [27357,27388]" dest="return_statement [27201,27232]"/>
  <match src="return_statement [14754,14849]" dest="return_statement [14688,14783]"/>
  <match src="call_argument [7340,7368]" dest="call_argument [7307,7335]"/>
  <match src="identifier: logTopicRLPList [53714,53729]" dest="identifier: logTopicRLPList [53620,53635]"/>
  <match src="&lt;:  &lt; [117,119]" dest="&lt;:  &lt; [117,119]"/>
  <match src="type_name [49246,49253]" dest="type_name [49022,49029]"/>
  <match src="identifier: _values [25194,25201]" dest="identifier: _values [25038,25045]"/>
  <match src="comment: /**  * @dev Contract module that allows children to implement role-based access  * control mechanisms.  *  * Roles are referred to by their `bytes32` identifier. These should be exposed  * in the external API and be unique. The best way to achieve this is by  * using `public constant` hash digests:  *  * ```  * bytes32 public constant MY_ROLE = keccak256(&quot;MY_ROLE&quot;);  * ```  *  * Roles can be used to represent a set of permissions. To restrict access to a  * function call, use {hasRole}:  *  * ```  * function foo() public {  *     require(hasRole(MY_ROLE, msg.sender));  *     ...  * }  * ```  *  * Roles can be granted and revoked dynamically via the {grantRole} and  * {revokeRole} functions. Each role has an associated admin role, and only  * accounts that have a role's admin role can call {grantRole} and {revokeRole}.  *  * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means  * that only accounts with this role will be able to grant or revoke other  * roles. More complex role relationships can be created by using  * {_setRoleAdmin}.  *  * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to  * grant and revoke this role. Extra precautions should be taken to secure  * accounts that have been granted it.  */ [33076,34386]" dest="comment: /**  * @dev Contract module that allows children to implement role-based access  * control mechanisms.  *  * Roles are referred to by their `bytes32` identifier. These should be exposed  * in the external API and be unique. The best way to achieve this is by  * using `public constant` hash digests:  *  * ```  * bytes32 public constant MY_ROLE = keccak256(&quot;MY_ROLE&quot;);  * ```  *  * Roles can be used to represent a set of permissions. To restrict access to a  * function call, use {hasRole}:  *  * ```  * function foo() public {  *     require(hasRole(MY_ROLE, msg.sender));  *     ...  * }  * ```  *  * Roles can be granted and revoked dynamically via the {grantRole} and  * {revokeRole} functions. Each role has an associated admin role, and only  * accounts that have a role's admin role can call {grantRole} and {revokeRole}.  *  * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means  * that only accounts with this role will be able to grant or revoke other  * roles. More complex role relationships can be created by using  * {_setRoleAdmin}.  *  * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to  * grant and revoke this role. Extra precautions should be taken to secure  * accounts that have been granted it.  */ [32852,34162]"/>
  <match src="variable_declaration [12746,12758]" dest="variable_declaration [12680,12692]"/>
  <match src="(: ( [46904,46905]" dest="(: ( [46680,46681]"/>
  <match src="identifier: newAdminRole [35142,35154]" dest="identifier: newAdminRole [34918,34930]"/>
  <match src="number_literal: 0 [4754,4755]" dest="number_literal: 0 [4721,4722]"/>
  <match src="identifier: AddressSet [34476,34486]" dest="identifier: AddressSet [34252,34262]"/>
  <match src="yul_decimal_number: 256 [47788,47791]" dest="yul_decimal_number: 256 [47564,47567]"/>
  <match src="comment: /**      * @notice Validates and processes exit while withdraw process      * @dev Validates exit log emitted on sidechain. Reverts if validation fails.      * @dev Processes withdraw based on custom logic. Example: transfer ERC20/ERC721, mint ERC721 if mintable withdraw      * @param sender Address      * @param rootToken Token which gets withdrawn      * @param logRLPList Valid sidechain log for data like amount, token id etc.      */ [50451,50898]" dest="comment: /**      * @notice Validates and processes exit while withdraw process      * @dev Validates exit log emitted on sidechain. Reverts if validation fails.      * @dev Processes withdraw based on custom logic. Example: transfer ERC20/ERC721, mint ERC721 if mintable withdraw      * @param sender Address      * @param rootToken Token which gets withdrawn      * @param logRLPList Valid sidechain log for data like amount, token id etc.      */ [50226,50673]"/>
  <match src="(: ( [31160,31161]" dest="(: ( [31004,31005]"/>
  <match src="}: } [51031,51032]" dest="}: } [50806,50807]"/>
  <match src="memory: memory [43409,43415]" dest="memory: memory [43185,43191]"/>
  <match src="identifier: only [40867,40871]" dest="identifier: only [40642,40646]"/>
  <match src="visibility [1904,1912]" dest="visibility [1904,1912]"/>
  <match src="public: public [38942,38948]" dest="public: public [38718,38724]"/>
  <match src="function: function [16827,16835]" dest="function: function [16761,16769]"/>
  <match src="boolean_literal [5403,5407]" dest="boolean_literal [5370,5374]"/>
  <match src="primitive_type [34639,34646]" dest="primitive_type [34415,34422]"/>
  <match src="(: ( [47774,47775]" dest="(: ( [47550,47551]"/>
  <match src="identifier: token [20588,20593]" dest="identifier: token [20465,20470]"/>
  <match src="identifier: set [31118,31121]" dest="identifier: set [30962,30965]"/>
  <match src="}: } [10329,10330]" dest="}: } [10296,10297]"/>
  <match src="}: } [13829,13830]" dest="}: } [13763,13764]"/>
  <match src="yul_assignment [47442,47482]" dest="yul_assignment [47218,47258]"/>
  <match src="&quot;: &quot; [20852,20853]" dest="&quot;: &quot; [20729,20730]"/>
  <match src="struct_member [23546,23564]" dest="struct_member [23390,23408]"/>
  <match src="call_argument [44359,44370]" dest="call_argument [44135,44146]"/>
  <match src=",: , [47799,47800]" dest=",: , [47575,47576]"/>
  <match src="identifier: _callOptionalReturn [19181,19200]" dest="identifier: _callOptionalReturn [19058,19077]"/>
  <match src="modifier_definition [40858,41002]" dest="modifier_definition [40633,40777]"/>
  <match src="function_definition [12499,12896]" dest="function_definition [12433,12830]"/>
  <match src="): ) [22144,22145]" dest="): ) [22021,22022]"/>
  <match src="type_name [37713,37720]" dest="type_name [37489,37496]"/>
  <match src="array_access [40403,40415]" dest="array_access [40179,40191]"/>
  <match src="parameter [2284,2301]" dest="parameter [2284,2301]"/>
  <match src="boolean_literal [4676,4680]" dest="boolean_literal [4643,4647]"/>
  <match src="function: function [17221,17229]" dest="function: function [17155,17163]"/>
  <match src="address: address [19134,19141]" dest="address: address [19011,19018]"/>
  <match src="uint8: uint8 [41326,41331]" dest="uint8: uint8 [41102,41107]"/>
  <match src="struct_member [41594,41609]" dest="struct_member [41370,41385]"/>
  <match src="): ) [47163,47164]" dest="): ) [46939,46940]"/>
  <match src="type_name [45364,45369]" dest="type_name [45140,45145]"/>
  <match src="identifier: size [11501,11505]" dest="identifier: size [11435,11439]"/>
  <match src="visibility [26857,26864]" dest="visibility [26701,26708]"/>
  <match src="identifier: a [3732,3733]" dest="identifier: a [3699,3700]"/>
  <match src="state_mutability [9409,9413]" dest="state_mutability [9376,9380]"/>
  <match src="identifier: len [45677,45680]" dest="identifier: len [45453,45456]"/>
  <match src="identifier: success [17505,17512]" dest="identifier: success [17439,17446]"/>
  <match src="(: ( [11520,11521]" dest="(: ( [11454,11455]"/>
  <match src="yul_decimal_number: 1 [47239,47240]" dest="yul_decimal_number: 1 [47015,47016]"/>
  <match src="function_definition [32585,32691]" dest="function_definition [32396,32502]"/>
  <match src="identifier: errorMessage [9458,9470]" dest="identifier: errorMessage [9425,9437]"/>
  <match src="): ) [13712,13713]" dest="): ) [13646,13647]"/>
  <match src="primitive_type [24698,24705]" dest="primitive_type [24542,24549]"/>
  <match src="identifier: memPtr [44537,44543]" dest="identifier: memPtr [44313,44319]"/>
  <match src="primitive_type [45364,45369]" dest="primitive_type [45140,45145]"/>
  <match src="identifier: valueIndex [24706,24716]" dest="identifier: valueIndex [24550,24560]"/>
  <match src="identifier: _itemLength [44205,44216]" dest="identifier: _itemLength [43981,43992]"/>
  <match src="primitive_type [23546,23553]" dest="primitive_type [23390,23397]"/>
  <match src="identifier: memPtr [46318,46324]" dest="identifier: memPtr [46094,46100]"/>
  <match src="identifier: recipient [12534,12543]" dest="identifier: recipient [12468,12477]"/>
  <match src="identifier: memPtr [43590,43596]" dest="identifier: memPtr [43366,43372]"/>
  <match src="block_statement [24032,24286]" dest="block_statement [23876,24130]"/>
  <match src="identifier: logRLPList [53732,53742]" dest="identifier: logRLPList [53638,53648]"/>
  <match src="address: address [16246,16253]" dest="address: address [16180,16187]"/>
  <match src="identifier: functionCallWithValue [14761,14782]" dest="identifier: functionCallWithValue [14695,14716]"/>
  <match src="{: { [14743,14744]" dest="{: { [14677,14678]"/>
  <match src="}: } [5101,5102]" dest="}: } [5068,5069]"/>
  <match src=".: . [20311,20312]" dest=".: . [20188,20189]"/>
  <match src="): ) [31901,31902]" dest="): ) [31745,31746]"/>
  <match src="identifier: item [42953,42957]" dest="identifier: item [42729,42733]"/>
  <match src="identifier: SafeMath [3551,3559]" dest="identifier: SafeMath [3518,3526]"/>
  <match src=",: , [30586,30587]" dest=",: , [30430,30431]"/>
  <match src=".: . [42554,42555]" dest=".: . [42330,42331]"/>
  <match src="constant: constant [34698,34706]" dest="constant: constant [34474,34482]"/>
  <match src="(: ( [51699,51700]" dest="(: ( [51474,51475]"/>
  <match src="identifier: errorMessage [17300,17312]" dest="identifier: errorMessage [17234,17246]"/>
  <match src="solidity_version: 0.8.0 [33060,33065]" dest="solidity_version: 0.8.0 [18402,18407]"/>
  <match src="primitive_type [26415,26422]" dest="primitive_type [26259,26266]"/>
  <match src="expression_statement [15264,15346]" dest="expression_statement [15198,15280]"/>
  <match src="{: { [12778,12779]" dest="{: { [12712,12713]"/>
  <match src="mload: mload [49051,49056]" dest="mload: mload [48827,48832]"/>
  <match src="identifier: UintSet [31786,31793]" dest="identifier: UintSet [31630,31637]"/>
  <match src="(: ( [7952,7953]" dest="(: ( [7919,7920]"/>
  <match src="identifier: byte0 [47064,47069]" dest="identifier: byte0 [46840,46845]"/>
  <match src="call_argument [53048,53057]" dest="call_argument [52954,52963]"/>
  <match src="primitive_type [10178,10185]" dest="primitive_type [10145,10152]"/>
  <match src="parameter [4106,4113]" dest="parameter [4073,4080]"/>
  <match src="call_argument [53123,53136]" dest="call_argument [53029,53042]"/>
  <match src=",: , [2301,2302]" dest=",: , [2301,2302]"/>
  <match src="identifier: lastIndex [25489,25498]" dest="identifier: lastIndex [25333,25342]"/>
  <match src=",: , [17284,17285]" dest=",: , [17218,17219]"/>
  <match src="boolean_literal [4775,4779]" dest="boolean_literal [4742,4746]"/>
  <match src="number_literal: 0 [7957,7958]" dest="number_literal: 0 [7924,7925]"/>
  <match src="(: ( [21880,21881]" dest="(: ( [21757,21758]"/>
  <match src="primitive_type [5694,5701]" dest="primitive_type [5661,5668]"/>
  <match src="parenthesized_expression [20142,20188]" dest="parenthesized_expression [20019,20065]"/>
  <match src="uint256: uint256 [31807,31814]" dest="uint256: uint256 [31651,31658]"/>
  <match src=".: . [20344,20345]" dest=".: . [20221,20222]"/>
  <match src="call_argument [30287,30292]" dest="call_argument [30131,30136]"/>
  <match src="identifier: set [30275,30278]" dest="identifier: set [30119,30122]"/>
  <match src="identifier: account [40431,40438]" dest="identifier: account [40207,40214]"/>
  <match src="call_argument [17611,17621]" dest="call_argument [17545,17555]"/>
  <match src="type_name [2557,2564]" dest="type_name [2557,2564]"/>
  <match src="true: true [5403,5407]" dest="true: true [5370,5374]"/>
  <match src="(: ( [40430,40431]" dest="(: ( [40206,40207]"/>
  <match src="): ) [30601,30602]" dest="): ) [30445,30446]"/>
  <match src="): ) [49501,49502]" dest="): ) [49277,49278]"/>
  <match src="call_expression [9443,9471]" dest="call_expression [9410,9438]"/>
  <match src="parameter [35969,35984]" dest="parameter [35745,35760]"/>
  <match src="}: } [28605,28606]" dest="}: } [28449,28450]"/>
  <match src="identifier: newAllowance [20786,20798]" dest="identifier: newAllowance [20663,20675]"/>
  <match src="return: return [4739,4745]" dest="return: return [4706,4712]"/>
  <match src="memory: memory [46008,46014]" dest="memory: memory [45784,45790]"/>
  <match src="internal: internal [40743,40751]" dest="internal: internal [40518,40526]"/>
  <match src=",: , [20988,20989]" dest=",: , [20865,20866]"/>
  <match src="expression_statement [48959,48976]" dest="expression_statement [48735,48752]"/>
  <match src="call_argument [53799,53857]" dest="call_argument [53705,53763]"/>
  <match src="address: address [53123,53130]" dest="address: address [53029,53036]"/>
  <match src="primitive_type [46799,46806]" dest="primitive_type [46575,46582]"/>
  <match src="variable_declaration [44883,44901]" dest="variable_declaration [44659,44677]"/>
  <match src="call_argument [20203,20259]" dest="call_argument [20080,20136]"/>
  <match src="(: ( [8509,8510]" dest="(: ( [8476,8477]"/>
  <match src="primitive_type [23987,23991]" dest="primitive_type [23831,23835]"/>
  <match src="uint256: uint256 [7891,7898]" dest="uint256: uint256 [7858,7865]"/>
  <match src="call_argument [20957,20979]" dest="call_argument [20834,20856]"/>
  <match src="&quot;: &quot; [17017,17018]" dest="&quot;: &quot; [16951,16952]"/>
  <match src="constant: constant [41379,41387]" dest="constant: constant [41155,41163]"/>
  <match src="string_literal [53895,53930]" dest="string_literal [53801,53836]"/>
  <match src="): ) [24584,24585]" dest="): ) [24428,24429]"/>
  <match src="event: event [51953,51958]" dest="event: event [51728,51733]"/>
  <match src=",: , [15176,15177]" dest=",: , [15110,15111]"/>
  <match src="identifier: len [44267,44270]" dest="identifier: len [44043,44046]"/>
  <match src="binary_expression [49261,49283]" dest="binary_expression [49037,49059]"/>
  <match src="state_mutability [42144,42148]" dest="state_mutability [41920,41924]"/>
  <match src="boolean_literal [51153,51158]" dest="boolean_literal [50929,50934]"/>
  <match src="function_definition [13657,13830]" dest="function_definition [13591,13764]"/>
  <match src="return_statement [48885,48892]" dest="return_statement [48661,48668]"/>
  <match src="return_statement [43623,43637]" dest="return_statement [43399,43413]"/>
  <match src="[: [ [42341,42342]" dest="[: [ [42117,42118]"/>
  <match src="parameter [14661,14675]" dest="parameter [14595,14609]"/>
  <match src="(: ( [48956,48957]" dest="(: ( [48732,48733]"/>
  <match src="yul_identifier [47897,47904]" dest="yul_identifier [47673,47680]"/>
  <match src="): ) [8558,8559]" dest="): ) [8525,8526]"/>
  <match src="member_expression [20507,20522]" dest="member_expression [20384,20399]"/>
  <match src="}: } [12794,12795]" dest="}: } [12728,12729]"/>
  <match src="return_type_definition [29503,29517]" dest="return_type_definition [29347,29361]"/>
  <match src="call_argument [19256,19258]" dest="call_argument [19133,19135]"/>
  <match src="array_access [54289,54302]" dest="array_access [54142,54155]"/>
  <match src="tuple_expression [3841,3851]" dest="tuple_expression [3808,3818]"/>
  <match src="call_argument [26935,26971]" dest="call_argument [26779,26815]"/>
  <match src="function_definition [52156,52358]" dest="function_definition [52062,52264]"/>
  <match src="return_type_definition [494,511]" dest="return_type_definition [494,511]"/>
  <match src="call_argument [27688,27693]" dest="call_argument [27532,27537]"/>
  <match src="identifier: count [46246,46251]" dest="identifier: count [46022,46027]"/>
  <match src="if: if [44619,44621]" dest="if: if [44395,44397]"/>
  <match src="identifier: STRING_SHORT_START [41341,41359]" dest="identifier: STRING_SHORT_START [41117,41135]"/>
  <match src="type_name [52941,52948]" dest="type_name [52847,52854]"/>
  <match src="yul_path [45744,45751]" dest="yul_path [45520,45527]"/>
  <match src="public: public [51590,51596]" dest="public: public [51365,51371]"/>
  <match src="&quot;: &quot; [51706,51707]" dest="&quot;: &quot; [51481,51482]"/>
  <match src="library: library [10532,10539]" dest="library: library [10466,10473]"/>
  <match src="identifier: item [44961,44965]" dest="identifier: item [44737,44741]"/>
  <match src="primitive_type [28511,28518]" dest="primitive_type [28355,28362]"/>
  <match src="pragma: pragma [2931,2937]" dest="pragma: pragma [2898,2904]"/>
  <match src="call_argument [53084,53093]" dest="call_argument [52990,52999]"/>
  <match src="identifier: lastvalue [25623,25632]" dest="identifier: lastvalue [25467,25476]"/>
  <match src="type_name [26376,26379]" dest="type_name [26220,26223]"/>
  <match src="returns: returns [3760,3767]" dest="returns: returns [3727,3734]"/>
  <match src="tuple_expression [4172,4185]" dest="tuple_expression [4139,4152]"/>
  <match src="function: function [45303,45311]" dest="function: function [45079,45087]"/>
  <match src=",: , [22098,22099]" dest=",: , [21975,21976]"/>
  <match src="uint256: uint256 [43487,43494]" dest="uint256: uint256 [43263,43270]"/>
  <match src=":=: := [47145,47147]" dest=":=: := [46921,46923]"/>
  <match src="identifier: require [41799,41806]" dest="identifier: require [41575,41582]"/>
  <match src="call_expression [16357,16424]" dest="call_expression [16291,16358]"/>
  <match src="yul_evm_builtin [44684,44687]" dest="yul_evm_builtin [44460,44463]"/>
  <match src="parameter [24548,24561]" dest="parameter [24392,24405]"/>
  <match src="type_name [17718,17724]" dest="type_name [17652,17658]"/>
  <match src="&quot;: &quot; [40839,40840]" dest="&quot;: &quot; [40614,40615]"/>
  <match src="identifier: role [39076,39080]" dest="identifier: role [38852,38856]"/>
  <match src="bool: bool [29512,29516]" dest="bool: bool [29356,29360]"/>
  <match src="call_argument [51209,51216]" dest="call_argument [50985,50992]"/>
  <match src="function_body [5023,5102]" dest="function_body [4990,5069]"/>
  <match src="identifier: Set [24531,24534]" dest="identifier: Set [24375,24378]"/>
  <match src="identifier: index [31815,31820]" dest="identifier: index [31659,31664]"/>
  <match src="identifier: errorMessage [17732,17744]" dest="identifier: errorMessage [17666,17678]"/>
  <match src="yul_function_call [47227,47241]" dest="yul_function_call [47003,47017]"/>
  <match src="||: || [48308,48310]" dest="||: || [48084,48086]"/>
  <match src="identifier: tryDiv [4956,4962]" dest="identifier: tryDiv [4923,4929]"/>
  <match src="identifier: _roles [40403,40409]" dest="identifier: _roles [40179,40185]"/>
  <match src="primitive_type [30975,30982]" dest="primitive_type [30819,30826]"/>
  <match src="call_expression [6210,6259]" dest="call_expression [6177,6226]"/>
  <match src="type_name [45320,45327]" dest="type_name [45096,45103]"/>
  <match src="type_cast_expression [15272,15285]" dest="type_cast_expression [15206,15219]"/>
  <match src=",: , [16871,16872]" dest=",: , [16805,16806]"/>
  <match src="view: view [37036,37040]" dest="view: view [36812,36816]"/>
  <match src="primitive_type [29574,29581]" dest="primitive_type [29418,29425]"/>
  <match src="library_declaration [3543,10333]" dest="library_declaration [3510,10300]"/>
  <match src="identifier: dest [48813,48817]" dest="identifier: dest [48589,48593]"/>
  <match src="call_argument [29293,29303]" dest="call_argument [29137,29147]"/>
  <match src=",: , [30896,30897]" dest=",: , [30740,30741]"/>
  <match src="function: function [16218,16226]" dest="function: function [16152,16160]"/>
  <match src="identifier: selector [20971,20979]" dest="identifier: selector [20848,20856]"/>
  <match src="yul_decimal_number: 256 [44679,44682]" dest="yul_decimal_number: 256 [44455,44458]"/>
  <match src="type_name [37014,37021]" dest="type_name [36790,36797]"/>
  <match src="call_expression [39760,39785]" dest="call_expression [39536,39561]"/>
  <match src="call_expression [17365,17383]" dest="call_expression [17299,17317]"/>
  <match src="&quot;: &quot; [15304,15305]" dest="&quot;: &quot; [15238,15239]"/>
  <match src="): ) [29334,29335]" dest="): ) [29178,29179]"/>
  <match src="(: ( [346,347]" dest="(: ( [346,347]"/>
  <match src="return_statement [43191,43203]" dest="return_statement [42967,42979]"/>
  <match src="state_mutability [37036,37040]" dest="state_mutability [36812,36816]"/>
  <match src="identifier: Address [34499,34506]" dest="identifier: Address [34275,34282]"/>
  <match src="function_body [29757,29802]" dest="function_body [29601,29646]"/>
  <match src=",: , [53046,53047]" dest=",: , [52952,52953]"/>
  <match src="call_argument [20531,20535]" dest="call_argument [20408,20412]"/>
  <match src="{: { [28936,28937]" dest="{: { [28780,28781]"/>
  <match src="function_definition [29188,29346]" dest="function_definition [29032,29190]"/>
  <match src="call_argument [43936,43948]" dest="call_argument [43712,43724]"/>
  <match src=",: , [42721,42722]" dest=",: , [42497,42498]"/>
  <match src="bytes32: bytes32 [39701,39708]" dest="bytes32: bytes32 [39477,39484]"/>
  <match src="bytes: bytes [15239,15244]" dest="bytes: bytes [15173,15178]"/>
  <match src="identifier: b [6164,6165]" dest="identifier: b [6131,6132]"/>
  <match src="type_name [463,470]" dest="type_name [463,470]"/>
  <match src="==: == [6700,6702]" dest="==: == [6667,6669]"/>
  <match src="comment: // Delete the index for the deleted slot [25886,25926]" dest="comment: // Delete the index for the deleted slot [25730,25770]"/>
  <match src="}: } [37906,37907]" dest="}: } [37682,37683]"/>
  <match src="array_access [54080,54098]" dest="array_access [53986,54004]"/>
  <match src="): ) [3877,3878]" dest="): ) [3844,3845]"/>
  <match src="contract_body [51132,51282]" dest="contract_body [50908,51058]"/>
  <match src="identifier: _itemLength [45410,45421]" dest="identifier: _itemLength [45186,45197]"/>
  <match src="identifier: errorMessage [9386,9398]" dest="identifier: errorMessage [9353,9365]"/>
  <match src="new: new [42330,42333]" dest="new: new [42106,42109]"/>
  <match src="}: } [45782,45783]" dest="}: } [45558,45559]"/>
  <match src="primitive_type [29558,29565]" dest="primitive_type [29402,29409]"/>
  <match src="+: + [42761,42762]" dest="+: + [42537,42538]"/>
  <match src="string [41824,41857]" dest="string [41600,41633]"/>
  <match src="(: ( [52910,52911]" dest="(: ( [52816,52817]"/>
  <match src="comment: // topic1 is from address [54013,54038]" dest="comment: // topic1 is from address [53919,53944]"/>
  <match src="binary_expression [43142,43166]" dest="binary_expression [42918,42942]"/>
  <match src="return_type_definition [36305,36322]" dest="return_type_definition [36081,36098]"/>
  <match src="string: string [17286,17292]" dest="string: string [17220,17226]"/>
  <match src="primitive_type [40166,40173]" dest="primitive_type [39942,39949]"/>
  <match src="): ) [31136,31137]" dest="): ) [30980,30981]"/>
  <match src="type_name [40659,40665]" dest="type_name [40434,40440]"/>
  <match src="(: ( [47151,47152]" dest="(: ( [46927,46928]"/>
  <match src="parameter [2268,2282]" dest="parameter [2268,2282]"/>
  <match src="user_defined_type [29204,29214]" dest="user_defined_type [29048,29058]"/>
  <match src="(: ( [43742,43743]" dest="(: ( [43518,43519]"/>
  <match src="modifier_definition [51167,51279]" dest="modifier_definition [50943,51055]"/>
  <match src="comment: // The Set implementation uses private functions, and user-facing [23218,23283]" dest="comment: // The Set implementation uses private functions, and user-facing [23062,23127]"/>
  <match src=".: . [54098,54099]" dest=".: . [54004,54005]"/>
  <match src="comment: // or when resetting it to zero. To increase and decrease it, use [19925,19990]" dest="comment: // or when resetting it to zero. To increase and decrease it, use [19802,19867]"/>
  <match src="uint256: uint256 [4963,4970]" dest="uint256: uint256 [4930,4937]"/>
  <match src="binary_expression [48495,48530]" dest="binary_expression [48271,48306]"/>
  <match src="identifier: _setupRole [52318,52328]" dest="identifier: _setupRole [52224,52234]"/>
  <match src="identifier: byte0 [48325,48330]" dest="identifier: byte0 [48101,48106]"/>
  <match src="binary_expression [46510,46527]" dest="binary_expression [46286,46303]"/>
  <match src="): ) [20187,20188]" dest="): ) [20064,20065]"/>
  <match src="): ) [46019,46020]" dest="): ) [45795,45796]"/>
  <match src="(: ( [7304,7305]" dest="(: ( [7271,7272]"/>
  <match src="{: { [3784,3785]" dest="{: { [3751,3752]"/>
  <match src="variable_declaration [4695,4704]" dest="variable_declaration [4662,4671]"/>
  <match src="): ) [26855,26856]" dest="): ) [26699,26700]"/>
  <match src="expression_statement [20118,20271]" dest="expression_statement [19995,20148]"/>
  <match src="}: } [12895,12896]" dest="}: } [12829,12830]"/>
  <match src="primitive_type [29321,29328]" dest="primitive_type [29165,29172]"/>
  <match src="{: { [46411,46412]" dest="{: { [46187,46188]"/>
  <match src="identifier: role [40880,40884]" dest="identifier: role [40655,40659]"/>
  <match src="true [4775,4779]" dest="true [4742,4746]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [1193,1848]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [1193,1848]"/>
  <match src="uint256: uint256 [46043,46050]" dest="uint256: uint256 [45819,45826]"/>
  <match src="primitive_type [6607,6614]" dest="primitive_type [6574,6581]"/>
  <match src="pure: pure [41744,41748]" dest="pure: pure [41520,41524]"/>
  <match src="pragma_directive [49590,49612]" dest="pragma_directive [49366,49389]"/>
  <match src="if_statement [4126,4155]" dest="if_statement [4093,4122]"/>
  <match src="private: private [48064,48071]" dest="private: private [47840,47847]"/>
  <match src="parameter [28077,28084]" dest="parameter [27921,27928]"/>
  <match src="=: = [25621,25622]" dest="=: = [25465,25466]"/>
  <match src="returns: returns [17759,17766]" dest="returns: returns [17693,17700]"/>
  <match src="parameter [778,792]" dest="parameter [778,792]"/>
  <match src="uint256: uint256 [42361,42368]" dest="uint256: uint256 [42137,42144]"/>
  <match src="if_statement [48208,48587]" dest="if_statement [47984,48363]"/>
  <match src="call_expression [43455,43474]" dest="call_expression [43231,43250]"/>
  <match src="call_argument [31411,31421]" dest="call_argument [31255,31265]"/>
  <match src="binary_expression [10279,10284]" dest="binary_expression [10246,10251]"/>
  <match src="identifier: returndata [21937,21947]" dest="identifier: returndata [21814,21824]"/>
  <match src=",: , [14789,14790]" dest=",: , [14723,14724]"/>
  <match src="identifier: value [30983,30988]" dest="identifier: value [30827,30832]"/>
  <match src="return_statement [28947,29005]" dest="return_statement [28791,28849]"/>
  <match src="identifier: tryMod [5277,5283]" dest="identifier: tryMod [5244,5250]"/>
  <match src="): ) [29755,29756]" dest="): ) [29599,29600]"/>
  <match src="++: ++ [42631,42633]" dest="++: ++ [42407,42409]"/>
  <match src=",: , [40946,40947]" dest=",: , [40721,40722]"/>
  <match src="call_expression [40933,40945]" dest="call_expression [40708,40720]"/>
  <match src="assembly: assembly [49298,49306]" dest="assembly: assembly [49074,49082]"/>
  <match src="comment: // @return number of payload items inside an encoded list. [45918,45976]" dest="comment: // @return number of payload items inside an encoded list. [45694,45752]"/>
  <match src="return: return [26027,26033]" dest="return: return [25871,25877]"/>
  <match src="identifier: mask [49357,49361]" dest="identifier: mask [49133,49137]"/>
  <match src="visibility [20464,20472]" dest="visibility [20341,20349]"/>
  <match src="identifier: _inner [31415,31421]" dest="identifier: _inner [31259,31265]"/>
  <match src="array_access [25700,25723]" dest="array_access [25544,25567]"/>
  <match src="solidity: solidity [101,109]" dest="solidity: solidity [101,109]"/>
  <match src="function_body [20767,21012]" dest="function_body [20644,20889]"/>
  <match src=".: . [25597,25598]" dest=".: . [25441,25442]"/>
  <match src="primitive_type [38186,38193]" dest="primitive_type [37962,37969]"/>
  <match src="identifier: offset [44335,44341]" dest="identifier: offset [44111,44117]"/>
  <match src="uint256: uint256 [45588,45595]" dest="uint256: uint256 [45364,45371]"/>
  <match src="visibility [15890,15898]" dest="visibility [15824,15832]"/>
  <match src="return_type_definition [29252,29266]" dest="return_type_definition [29096,29110]"/>
  <match src="number_literal: 0x00 [34728,34732]" dest="number_literal: 0x00 [34504,34508]"/>
  <match src="identifier: TRANSFER_EVENT_SIG [51739,51757]" dest="identifier: TRANSFER_EVENT_SIG [51514,51532]"/>
  <match src="): ) [16307,16308]" dest="): ) [16241,16242]"/>
  <match src="(: ( [6693,6694]" dest="(: ( [6660,6661]"/>
  <match src="(: ( [6630,6631]" dest="(: ( [6597,6598]"/>
  <match src="yul_function_call [18237,18281]" dest="yul_function_call [18171,18215]"/>
  <match src="internal: internal [28912,28920]" dest="internal: internal [28756,28764]"/>
  <match src="(: ( [20125,20126]" dest="(: ( [20002,20003]"/>
  <match src="for_statement [42599,42782]" dest="for_statement [42375,42558]"/>
  <match src="{: { [31854,31855]" dest="{: { [31698,31699]"/>
  <match src="extcodesize: extcodesize [11509,11520]" dest="extcodesize: extcodesize [11443,11454]"/>
  <match src="uint256: uint256 [46753,46760]" dest="uint256: uint256 [46529,46536]"/>
  <match src="binary_expression [6218,6224]" dest="binary_expression [6185,6191]"/>
  <match src="(: ( [10177,10178]" dest="(: ( [10144,10145]"/>
  <match src="function_definition [19757,20379]" dest="function_definition [19634,20256]"/>
  <match src=",: , [13787,13788]" dest=",: , [13721,13722]"/>
  <match src="call_expression [6686,6742]" dest="call_expression [6653,6709]"/>
  <match src="): ) [51707,51708]" dest="): ) [51482,51483]"/>
  <match src="uint256: uint256 [44449,44456]" dest="uint256: uint256 [44225,44232]"/>
  <match src="): ) [49061,49062]" dest="): ) [48837,48838]"/>
  <match src="variable_declaration [25117,25138]" dest="variable_declaration [24961,24982]"/>
  <match src="address: address [1121,1128]" dest="address: address [1121,1128]"/>
  <match src=".: . [37400,37401]" dest=".: . [37176,37177]"/>
  <match src="==: == [45464,45466]" dest="==: == [45240,45242]"/>
  <match src="identifier: _inner [31888,31894]" dest="identifier: _inner [31732,31738]"/>
  <match src="internal: internal [5306,5314]" dest="internal: internal [5273,5281]"/>
  <match src="visibility [53543,53549]" dest="visibility [53449,53455]"/>
  <match src="type_name [3735,3742]" dest="type_name [3702,3709]"/>
  <match src="identifier: b [7279,7280]" dest="identifier: b [7246,7247]"/>
  <match src="call_argument [42288,42292]" dest="call_argument [42064,42068]"/>
  <match src="identifier: byteLen [47897,47904]" dest="identifier: byteLen [47673,47680]"/>
  <match src="visibility [15221,15229]" dest="visibility [15155,15163]"/>
  <match src="number_literal: 0 [20186,20187]" dest="number_literal: 0 [20063,20064]"/>
  <match src="identifier: c [5840,5841]" dest="identifier: c [5807,5808]"/>
  <match src="type_name [43332,43339]" dest="type_name [43108,43115]"/>
  <match src="identifier: Bytes32Set [28487,28497]" dest="identifier: Bytes32Set [28331,28341]"/>
  <match src="): ) [31351,31352]" dest="): ) [31195,31196]"/>
  <match src="yul_identifier [43107,43113]" dest="yul_identifier [42883,42889]"/>
  <match src=".: . [20148,20149]" dest=".: . [20025,20026]"/>
  <match src="call_expression [54289,54311]" dest="call_expression [54142,54164]"/>
  <match src="type_name [42334,42341]" dest="type_name [42110,42117]"/>
  <match src="return: return [26234,26240]" dest="return: return [26078,26084]"/>
  <match src="solidity_version_comparison_operator [33050,33053]" dest="solidity_version_comparison_operator [18392,18395]"/>
  <match src="solidity_version_comparison_operator [32022,32025]" dest="solidity_version_comparison_operator [32828,32831]"/>
  <match src="solidity: solidity [32014,32022]" dest="solidity: solidity [32820,32828]"/>
  <match src="bytes32: bytes32 [38911,38918]" dest="bytes32: bytes32 [38687,38694]"/>
  <match src="member_expression [17941,17958]" dest="member_expression [17875,17892]"/>
  <match src="call_expression [15945,16018]" dest="call_expression [15879,15952]"/>
  <match src="yul_identifier [44537,44543]" dest="yul_identifier [44313,44319]"/>
  <match src="function_definition [27270,27395]" dest="function_definition [27114,27239]"/>
  <match src="primitive_type [46753,46760]" dest="primitive_type [46529,46536]"/>
  <match src="type_name [52176,52183]" dest="type_name [52082,52089]"/>
  <match src="type_name [50987,50992]" dest="type_name [50762,50767]"/>
  <match src="solidity_version: 0.6.0 [112,117]" dest="solidity_version: 0.6.0 [112,117]"/>
  <match src="type_cast_expression [29558,29590]" dest="type_cast_expression [29402,29434]"/>
  <match src="bool: bool [5329,5333]" dest="bool: bool [5296,5300]"/>
  <match src=".: . [44126,44127]" dest=".: . [43902,43903]"/>
  <match src="(: ( [25867,25868]" dest="(: ( [25711,25712]"/>
  <match src="assignment_expression [46426,46466]" dest="assignment_expression [46202,46242]"/>
  <match src="bytes: bytes [45671,45676]" dest="bytes: bytes [45447,45452]"/>
  <match src="bytes: bytes [15504,15509]" dest="bytes: bytes [15438,15443]"/>
  <match src="view: view [28063,28067]" dest="view: view [27907,27911]"/>
  <match src="function_body [39998,40124]" dest="function_body [39774,39900]"/>
  <match src="member_expression [44217,44228]" dest="member_expression [43993,44004]"/>
  <match src="call_argument [42672,42678]" dest="call_argument [42448,42454]"/>
  <match src="address: address [2284,2291]" dest="address: address [2284,2291]"/>
  <match src="yul_function_call [47373,47389]" dest="yul_function_call [47149,47165]"/>
  <match src="variable_declaration [44382,44393]" dest="variable_declaration [44158,44169]"/>
  <match src="identifier: selector [20345,20353]" dest="identifier: selector [20222,20230]"/>
  <match src="}: } [15641,15642]" dest="}: } [15575,15576]"/>
  <match src="type_name [9361,9368]" dest="type_name [9328,9335]"/>
  <match src="return_statement [26027,26040]" dest="return_statement [25871,25884]"/>
  <match src="return: return [41966,41972]" dest="return: return [41742,41748]"/>
  <match src="bytes: bytes [17514,17519]" dest="bytes: bytes [17448,17453]"/>
  <match src="visibility [21465,21472]" dest="visibility [21342,21349]"/>
  <match src="if: if [17792,17794]" dest="if: if [17726,17728]"/>
  <match src="identifier: _msgSender [40288,40298]" dest="identifier: _msgSender [40064,40074]"/>
  <match src="primitive_type [44449,44456]" dest="primitive_type [44225,44232]"/>
  <match src="assignment_expression [25594,25632]" dest="assignment_expression [25438,25476]"/>
  <match src="type_name [41419,41424]" dest="type_name [41195,41200]"/>
  <match src="return_statement [7380,7393]" dest="return_statement [7347,7360]"/>
  <match src="identifier: len [42444,42447]" dest="identifier: len [42220,42223]"/>
  <match src="identifier: AddressSet [29701,29711]" dest="identifier: AddressSet [29545,29555]"/>
  <match src="identifier: _msgSender [32594,32604]" dest="identifier: _msgSender [32405,32415]"/>
  <match src="user_defined_type [26163,26166]" dest="user_defined_type [26007,26010]"/>
  <match src="(: ( [31883,31884]" dest="(: ( [31727,31728]"/>
  <match src="identifier: spender [1144,1151]" dest="identifier: spender [1144,1151]"/>
  <match src="): ) [20369,20370]" dest="): ) [20246,20247]"/>
  <match src="type_name [16262,16267]" dest="type_name [16196,16201]"/>
  <match src="function_definition [48024,48594]" dest="function_definition [47800,48370]"/>
  <match src="identifier: LIST_SHORT_START [43150,43166]" dest="identifier: LIST_SHORT_START [42926,42942]"/>
  <match src="internal: internal [19364,19372]" dest="internal: internal [19241,19249]"/>
  <match src="state_mutability [26203,26207]" dest="state_mutability [26047,26051]"/>
  <match src="): ) [51018,51019]" dest="): ) [50793,50794]"/>
  <match src="): ) [18359,18360]" dest="): ) [18293,18294]"/>
  <match src="internal: internal [5705,5713]" dest="internal: internal [5672,5680]"/>
  <match src="storage: storage [29712,29719]" dest="storage: storage [29556,29563]"/>
  <match src="function_body [30937,30998]" dest="function_body [30781,30842]"/>
  <match src="): ) [19265,19266]" dest="): ) [19142,19143]"/>
  <match src="call_argument [20981,20988]" dest="call_argument [20858,20865]"/>
  <match src="type_name [4974,4981]" dest="type_name [4941,4948]"/>
  <match src="primitive_type [37050,37057]" dest="primitive_type [36826,36833]"/>
  <match src="string: string [8532,8538]" dest="string: string [8499,8505]"/>
  <match src="identifier: RLPItem [45320,45327]" dest="identifier: RLPItem [45096,45103]"/>
  <match src="parameter [36279,36291]" dest="parameter [36055,36067]"/>
  <match src=",: , [4413,4414]" dest=",: , [4380,4381]"/>
  <match src="expression_statement [24047,24071]" dest="expression_statement [23891,23915]"/>
  <match src="expression_statement [15356,15417]" dest="expression_statement [15290,15351]"/>
  <match src="identifier: depositData [50415,50426]" dest="identifier: depositData [50190,50201]"/>
  <match src="&quot;: &quot; [43794,43795]" dest="&quot;: &quot; [43570,43571]"/>
  <match src="): ) [28084,28085]" dest="): ) [27928,27929]"/>
  <match src="call_expression [44344,44371]" dest="call_expression [44120,44147]"/>
  <match src="identifier: memPtr [46358,46364]" dest="identifier: memPtr [46134,46140]"/>
  <match src="div: div [47345,47348]" dest="div: div [47121,47124]"/>
  <match src="visibility [44840,44848]" dest="visibility [44616,44624]"/>
  <match src="call_expression [46298,46325]" dest="call_expression [46074,46101]"/>
  <match src="type_name [347,354]" dest="type_name [347,354]"/>
  <match src=",: , [31805,31806]" dest=",: , [31649,31650]"/>
  <match src="): ) [54310,54311]" dest="): ) [54163,54164]"/>
  <match src="yul_hex_number: 0x20 [43544,43548]" dest="yul_hex_number: 0x20 [43320,43324]"/>
  <match src="primitive_type [46715,46722]" dest="primitive_type [46491,46498]"/>
  <match src="pure: pure [10237,10241]" dest="pure: pure [10204,10208]"/>
  <match src="identifier: rootToken [53084,53093]" dest="identifier: rootToken [52990,52999]"/>
  <match src="returns: returns [32629,32636]" dest="returns: returns [32440,32447]"/>
  <match src="boolean_literal [51267,51271]" dest="boolean_literal [51043,51047]"/>
  <match src="state_variable_declaration [41373,41413]" dest="state_variable_declaration [41149,41189]"/>
  <match src="primitive_type [48086,48093]" dest="primitive_type [47862,47869]"/>
  <match src="memory: memory [42177,42183]" dest="memory: memory [41953,41959]"/>
  <match src="boolean_literal [43175,43180]" dest="boolean_literal [42951,42956]"/>
  <match src="tuple_expression [5374,5384]" dest="tuple_expression [5341,5351]"/>
  <match src="identifier: initialize [52165,52175]" dest="identifier: initialize [52071,52081]"/>
  <match src="type_name [51567,51573]" dest="type_name [51342,51348]"/>
  <match src="function_body [42988,43210]" dest="function_body [42764,42986]"/>
  <match src="identifier: data [21881,21885]" dest="identifier: data [21758,21762]"/>
  <match src="(: ( [20816,20817]" dest="(: ( [20693,20694]"/>
  <match src=",: , [8617,8618]" dest=",: , [8584,8585]"/>
  <match src="identifier: token [21861,21866]" dest="identifier: token [21738,21743]"/>
  <match src="{: { [30347,30348]" dest="{: { [30191,30192]"/>
  <match src="solidity_version_comparison_operator [10449,10451]" dest="solidity_version_comparison_operator [10383,10385]"/>
  <match src="identifier: require [17357,17364]" dest="identifier: require [17291,17298]"/>
  <match src="type_name [20484,20491]" dest="type_name [20361,20368]"/>
  <match src="state_mutability [26401,26405]" dest="state_mutability [26245,26249]"/>
  <match src="return_statement [13755,13823]" dest="return_statement [13689,13757]"/>
  <match src="identifier: len [41580,41583]" dest="identifier: len [41356,41359]"/>
  <match src="call_argument [7333,7338]" dest="call_argument [7300,7305]"/>
  <match src="=: = [42380,42381]" dest="=: = [42156,42157]"/>
  <match src="=: = [45176,45177]" dest="=: = [44952,44953]"/>
  <match src="member_expression [37772,37794]" dest="member_expression [37548,37570]"/>
  <match src="visibility [32719,32727]" dest="visibility [32530,32538]"/>
  <match src="identifier: value [27688,27693]" dest="identifier: value [27532,27537]"/>
  <match src="identifier: result [45281,45287]" dest="identifier: result [45057,45063]"/>
  <match src="(: ( [15963,15964]" dest="(: ( [15897,15898]"/>
  <match src=",: , [48817,48818]" dest=",: , [48593,48594]"/>
  <match src="struct_member [23701,23739]" dest="struct_member [23545,23583]"/>
  <match src=",: , [38999,39000]" dest=",: , [38775,38776]"/>
  <match src="variable_declaration_statement [4695,4713]" dest="variable_declaration_statement [4662,4680]"/>
  <match src="member_expression [24230,24248]" dest="member_expression [24074,24092]"/>
  <match src="function_body [29518,29599]" dest="function_body [29362,29443]"/>
  <match src="identifier: len [48875,48878]" dest="identifier: len [48651,48654]"/>
  <match src="if_statement [47514,47935]" dest="if_statement [47290,47711]"/>
  <match src=",: , [15302,15303]" dest=",: , [15236,15237]"/>
  <match src="call_expression [16580,16632]" dest="call_expression [16514,16566]"/>
  <match src="yul_path [47217,47223]" dest="yul_path [46993,46999]"/>
  <match src="number_literal: 0 [3849,3850]" dest="number_literal: 0 [3816,3817]"/>
  <match src="binary_expression [48325,48350]" dest="binary_expression [48101,48126]"/>
  <match src="comment: // Equivalent to contains(set, value) [24774,24811]" dest="comment: // Equivalent to contains(set, value) [24618,24655]"/>
  <match src="array_access [25594,25620]" dest="array_access [25438,25464]"/>
  <match src=",: , [18263,18264]" dest=",: , [18197,18198]"/>
  <match src="call_argument [12622,12653]" dest="call_argument [12556,12587]"/>
  <match src="call_argument [16385,16423]" dest="call_argument [16319,16357]"/>
  <match src="primitive_type [26180,26187]" dest="primitive_type [26024,26031]"/>
  <match src="identifier: LIST_LONG_START [41479,41494]" dest="identifier: LIST_LONG_START [41255,41270]"/>
  <match src="function_body [37370,37418]" dest="function_body [37146,37194]"/>
  <match src="return_statement [4767,4784]" dest="return_statement [4734,4751]"/>
  <match src="primitive_type [44883,44890]" dest="primitive_type [44659,44666]"/>
  <match src="(: ( [44536,44537]" dest="(: ( [44312,44313]"/>
  <match src="identifier: RLPReader [53612,53621]" dest="identifier: RLPReader [53518,53527]"/>
  <match src="}: } [41615,41616]" dest="}: } [41391,41392]"/>
  <match src="): ) [42349,42350]" dest="): ) [42125,42126]"/>
  <match src="): ) [1926,1927]" dest="): ) [1926,1927]"/>
  <match src="{: { [32655,32656]" dest="{: { [32466,32467]"/>
  <match src=".: . [24211,24212]" dest=".: . [24055,24056]"/>
  <match src="yul_identifier [18204,18214]" dest="yul_identifier [18138,18148]"/>
  <match src="call_expression [52958,52992]" dest="call_expression [52864,52898]"/>
  <match src="parameter [19146,19159]" dest="parameter [19023,19036]"/>
  <match src="expression_statement [45059,45124]" dest="expression_statement [44835,44900]"/>
  <match src="type_name [41572,41579]" dest="type_name [41348,41355]"/>
  <match src="contract_body [34431,40523]" dest="contract_body [34207,40299]"/>
  <match src="type_name [2577,2584]" dest="type_name [2577,2584]"/>
  <match src="binary_expression [25141,25155]" dest="binary_expression [24985,24999]"/>
  <match src="identifier: a [3831,3832]" dest="identifier: a [3798,3799]"/>
  <match src="variable_declaration [11410,11422]" dest="variable_declaration [11344,11356]"/>
  <match src="): ) [7932,7933]" dest="): ) [7899,7900]"/>
  <match src="identifier: result [43630,43636]" dest="identifier: result [43406,43412]"/>
  <match src="primitive_type [15504,15509]" dest="primitive_type [15438,15443]"/>
  <match src="type_name [41698,41703]" dest="type_name [41474,41479]"/>
  <match src="type_name [11162,11169]" dest="type_name [11096,11103]"/>
  <match src="(: ( [16331,16332]" dest="(: ( [16265,16266]"/>
  <match src="identifier: push [24059,24063]" dest="identifier: push [23903,23907]"/>
  <match src="primitive_type [17767,17772]" dest="primitive_type [17701,17706]"/>
  <match src="identifier: _remove [27668,27675]" dest="identifier: _remove [27512,27519]"/>
  <match src="yul_identifier [44653,44659]" dest="yul_identifier [44429,44435]"/>
  <match src="identifier: _at [30271,30274]" dest="identifier: _at [30115,30118]"/>
  <match src="member_expression [46313,46324]" dest="member_expression [46089,46100]"/>
  <match src="}: } [10332,10333]" dest="}: } [10299,10300]"/>
  <match src="call_argument [37885,37889]" dest="call_argument [37661,37665]"/>
  <match src="if_statement [24751,26051]" dest="if_statement [24595,25895]"/>
  <match src="variable_declaration_statement [11410,11423]" dest="variable_declaration_statement [11344,11357]"/>
  <match src="yul_identifier [47801,47808]" dest="yul_identifier [47577,47584]"/>
  <match src="yul_path [49357,49361]" dest="yul_path [49133,49137]"/>
  <match src="[: [ [42700,42701]" dest="[: [ [42476,42477]"/>
  <match src="call_argument [15272,15302]" dest="call_argument [15206,15236]"/>
  <match src="variable_declaration_statement [25117,25156]" dest="variable_declaration_statement [24961,25000]"/>
  <match src="identifier: _inner [31199,31205]" dest="identifier: _inner [31043,31049]"/>
  <match src="primitive_type [41594,41601]" dest="primitive_type [41370,41377]"/>
  <match src="identifier: len [49279,49282]" dest="identifier: len [49055,49058]"/>
  <match src="identifier: require [51201,51208]" dest="identifier: require [50977,50984]"/>
  <match src="string: string [16281,16287]" dest="string: string [16215,16221]"/>
  <match src="call_expression [38229,38335]" dest="call_expression [38005,38111]"/>
  <match src="identifier: target [14217,14223]" dest="identifier: target [14151,14157]"/>
  <match src="identifier: value [15544,15549]" dest="identifier: value [15478,15483]"/>
  <match src="call_argument [29566,29589]" dest="call_argument [29410,29433]"/>
  <match src="parameter [30567,30586]" dest="parameter [30411,30430]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting with custom message when dividing by zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryMod}.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [9510,10159]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting with custom message when dividing by zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryMod}.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [9477,10126]"/>
  <match src="identifier: a [10317,10318]" dest="identifier: a [10284,10285]"/>
  <match src="&quot;: &quot; [12796,12797]" dest="&quot;: &quot; [12730,12731]"/>
  <match src="primitive_type [35091,35098]" dest="primitive_type [34867,34874]"/>
  <match src="identifier: result [44667,44673]" dest="identifier: result [44443,44449]"/>
  <match src="parameter [52827,52853]" dest="parameter [52733,52759]"/>
  <match src="function: function [40132,40140]" dest="function: function [39908,39916]"/>
  <match src="{: { [41319,41320]" dest="{: { [41095,41096]"/>
  <match src=",: , [14096,14097]" dest=",: , [14030,14031]"/>
  <match src="comment: /**      * @dev Revokes `role` from `account`.      *      * If `account` had been granted `role`, emits a {RoleRevoked} event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [37915,38146]" dest="comment: /**      * @dev Revokes `role` from `account`.      *      * If `account` had been granted `role`, emits a {RoleRevoked} event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [37691,37922]"/>
  <match src="call_argument [44122,44136]" dest="call_argument [43898,43912]"/>
  <match src=".: . [36051,36052]" dest=".: . [35827,35828]"/>
  <match src="&quot;: &quot; [51218,51219]" dest="&quot;: &quot; [50994,50995]"/>
  <match src="identifier: i [42630,42631]" dest="identifier: i [42406,42407]"/>
  <match src="call_argument [20852,20895]" dest="call_argument [20729,20772]"/>
  <match src="identifier: _roles [37388,37394]" dest="identifier: _roles [37164,37170]"/>
  <match src="parameter [29474,29487]" dest="parameter [29318,29331]"/>
  <match src="identifier: b [5764,5765]" dest="identifier: b [5731,5732]"/>
  <match src="(: ( [46042,46043]" dest="(: ( [45818,45819]"/>
  <match src="call_argument [22100,22144]" dest="call_argument [21977,22021]"/>
  <match src="identifier: data [16886,16890]" dest="identifier: data [16820,16824]"/>
  <match src="&quot;: &quot; [41856,41857]" dest="&quot;: &quot; [41632,41633]"/>
  <match src="): ) [47907,47908]" dest="): ) [47683,47684]"/>
  <match src="yul_path [48177,48183]" dest="yul_path [47953,47959]"/>
  <match src="comment: // Move the last value to the index where the value to delete is [25516,25580]" dest="comment: // Move the last value to the index where the value to delete is [25360,25424]"/>
  <match src="return: return [6753,6759]" dest="return: return [6720,6726]"/>
  <match src="=: = [52956,52957]" dest="=: = [52862,52863]"/>
  <match src="): ) [43611,43612]" dest="): ) [43387,43388]"/>
  <match src="identifier: _values [26446,26453]" dest="identifier: _values [26290,26297]"/>
  <match src="): ) [37338,37339]" dest="): ) [37114,37115]"/>
  <match src="primitive_type [5008,5012]" dest="primitive_type [4975,4979]"/>
  <match src="number_literal: 0 [5364,5365]" dest="number_literal: 0 [5331,5332]"/>
  <match src="}: } [32931,32932]" dest="}: } [32742,32743]"/>
  <match src="identifier: _inner [30362,30368]" dest="identifier: _inner [30206,30212]"/>
  <match src="yul_identifier [49474,49478]" dest="yul_identifier [49250,49254]"/>
  <match src="private: private [26195,26202]" dest="private: private [26039,26046]"/>
  <match src="uint256: uint256 [45531,45538]" dest="uint256: uint256 [45307,45314]"/>
  <match src="yul_path [44692,44695]" dest="yul_path [44468,44471]"/>
  <match src="function_definition [46694,47969]" dest="function_definition [46470,47745]"/>
  <match src="member_expression [19231,19254]" dest="member_expression [19108,19131]"/>
  <match src="}: } [27701,27702]" dest="}: } [27545,27546]"/>
  <match src="call_argument [30983,30988]" dest="call_argument [30827,30832]"/>
  <match src=".: . [17951,17952]" dest=".: . [17885,17886]"/>
  <match src="function: function [5268,5276]" dest="function: function [5235,5243]"/>
  <match src="parameter [30931,30935]" dest="parameter [30775,30779]"/>
  <match src="type_name [41594,41601]" dest="type_name [41370,41377]"/>
  <match src="yul_evm_builtin [44663,44666]" dest="yul_evm_builtin [44439,44442]"/>
  <match src="identifier: RLPItem [51533,51540]" dest="identifier: RLPItem [51308,51315]"/>
  <match src="returns: returns [4091,4098]" dest="returns: returns [4058,4065]"/>
  <match src="exp: exp [47784,47787]" dest="exp: exp [47560,47563]"/>
  <match src="=: = [41533,41534]" dest="=: = [41309,41310]"/>
  <match src="identifier: members [37090,37097]" dest="identifier: members [36866,36873]"/>
  <match src="identifier: amount [52103,52109]" dest="identifier: amount [51878,51884]"/>
  <match src="bool: bool [4100,4104]" dest="bool: bool [4067,4071]"/>
  <match src="yul_block [44634,44713]" dest="yul_block [44410,44489]"/>
  <match src="): ) [45433,45434]" dest="): ) [45209,45210]"/>
  <match src="bytes32: bytes32 [40349,40356]" dest="bytes32: bytes32 [40125,40132]"/>
  <match src="): ) [20462,20463]" dest="): ) [20339,20340]"/>
  <match src="return: return [7998,8004]" dest="return: return [7965,7971]"/>
  <match src="identifier: itemLength [44891,44901]" dest="identifier: itemLength [44667,44677]"/>
  <match src="call_argument [40919,40946]" dest="call_argument [40694,40721]"/>
  <match src="binary_expression [54072,54122]" dest="binary_expression [53978,54028]"/>
  <match src="type_name [16332,16337]" dest="type_name [16266,16271]"/>
  <match src="solidity_version: 0.8.0 [32032,32037]" dest="solidity_version: 0.8.0 [32838,32843]"/>
  <match src="identifier: memPtr [47355,47361]" dest="identifier: memPtr [47131,47137]"/>
  <match src="identifier: require [7945,7952]" dest="identifier: require [7912,7919]"/>
  <match src="address: address [19337,19344]" dest="address: address [19214,19221]"/>
  <match src="function: function [27788,27796]" dest="function: function [27632,27640]"/>
  <match src="return_statement [32666,32684]" dest="return_statement [32477,32495]"/>
  <match src="binary_expression [20126,20188]" dest="binary_expression [20003,20065]"/>
  <match src="if_statement [40399,40513]" dest="if_statement [40175,40289]"/>
  <match src="parameter [1176,1183]" dest="parameter [1176,1183]"/>
  <match src="return_type_definition [28921,28935]" dest="return_type_definition [28765,28779]"/>
  <match src="): ) [31902,31903]" dest="): ) [31746,31747]"/>
  <match src="call_argument [45422,45433]" dest="call_argument [45198,45209]"/>
  <match src=",: , [7889,7890]" dest=",: , [7856,7857]"/>
  <match src="identifier: toUint [54002,54008]" dest="identifier: toUint [53908,53914]"/>
  <match src="identifier: toRlpItem [53656,53665]" dest="identifier: toRlpItem [53562,53571]"/>
  <match src="return_statement [45274,45288]" dest="return_statement [45050,45064]"/>
  <match src="return_statement [10310,10323]" dest="return_statement [10277,10290]"/>
  <match src="function: function [53434,53442]" dest="function: function [53340,53348]"/>
  <match src="comment: // File: contracts/root/TokenPredicates/ITokenPredicate.sol [49527,49586]" dest="comment: // File: contracts/root/TokenPredicates/ITokenPredicate.sol [49303,49362]"/>
  <match src="parameter [48805,48817]" dest="parameter [48581,48593]"/>
  <match src="function_body [32655,32691]" dest="function_body [32466,32502]"/>
  <match src="): ) [31852,31853]" dest="): ) [31696,31697]"/>
  <match src="==: == [20133,20135]" dest="==: == [20010,20012]"/>
  <match src="}: } [45866,45867]" dest="}: } [45642,45643]"/>
  <match src="identifier: src [49057,49060]" dest="identifier: src [48833,48836]"/>
  <match src="&gt;=: &gt;= [5786,5788]" dest="&gt;=: &gt;= [5753,5755]"/>
  <match src="type_name [45389,45396]" dest="type_name [45165,45172]"/>
  <match src="is: is [34420,34422]" dest="is: is [34196,34198]"/>
  <match src="call_argument [43465,43473]" dest="call_argument [43241,43249]"/>
  <match src="yul_assignment [47217,47241]" dest="yul_assignment [46993,47017]"/>
  <match src="call_argument [19208,19266]" dest="call_argument [19085,19143]"/>
  <match src="}: } [32934,32935]" dest="}: } [32745,32746]"/>
  <match src="identifier: UintSet [30339,30346]" dest="identifier: UintSet [30183,30190]"/>
  <match src="(: ( [16856,16857]" dest="(: ( [16790,16791]"/>
  <match src="primitive_type [35391,35398]" dest="primitive_type [35167,35174]"/>
  <match src="call_argument [37101,37106]" dest="call_argument [36877,36882]"/>
  <match src="return: return [3834,3840]" dest="return: return [3801,3807]"/>
  <match src="&gt;: &gt; [21955,21956]" dest="&gt;: &gt; [21832,21833]"/>
  <match src="number_literal: 0 [6646,6647]" dest="number_literal: 0 [6613,6614]"/>
  <match src="identifier: WORD_SIZE [41523,41532]" dest="identifier: WORD_SIZE [41299,41308]"/>
  <match src="}: } [45294,45295]" dest="}: } [45070,45071]"/>
  <match src="): ) [26221,26222]" dest="): ) [26065,26066]"/>
  <match src="(: ( [40782,40783]" dest="(: ( [40557,40558]"/>
  <match src="return_statement [36024,36070]" dest="return_statement [35800,35846]"/>
  <match src="&lt;:  &lt; [18521,18523]" dest="&lt;:  &lt; [22133,22135]"/>
  <match src="if: if [48208,48210]" dest="if: if [47984,47986]"/>
  <match src="user_defined_type [42334,42341]" dest="user_defined_type [42110,42117]"/>
  <match src="parameter [17286,17312]" dest="parameter [17220,17246]"/>
  <match src="identifier: a [4372,4373]" dest="identifier: a [4339,4340]"/>
  <match src=",: , [10284,10285]" dest=",: , [10251,10252]"/>
  <match src="comment: // File: contracts/root/TokenPredicates/ERC20Predicate.sol [51286,51344]" dest="comment: // File: contracts/root/TokenPredicates/ERC20Predicate.sol [51062,51120]"/>
  <match src="): ) [44870,44871]" dest="): ) [44646,44647]"/>
  <match src="solidity_version_comparison_operator [117,119]" dest="solidity_version_comparison_operator [117,119]"/>
  <match src="): ) [5821,5822]" dest="): ) [5788,5789]"/>
  <match src="(: ( [1120,1121]" dest="(: ( [1120,1121]"/>
  <match src="call_argument [30255,30295]" dest="call_argument [30099,30139]"/>
  <match src="member_expression [20507,20550]" dest="member_expression [20384,20427]"/>
  <match src="identifier: _values [25598,25605]" dest="identifier: _values [25442,25449]"/>
  <match src="=: = [41451,41452]" dest="=: = [41227,41228]"/>
  <match src=",: , [50389,50390]" dest=",: , [50164,50165]"/>
  <match src="view: view [32616,32620]" dest="view: view [32427,32431]"/>
  <match src="using_directive [19031,19058]" dest="using_directive [18908,18935]"/>
  <match src="member_expression [20801,20816]" dest="member_expression [20678,20693]"/>
  <match src="type_name [4963,4970]" dest="type_name [4930,4937]"/>
  <match src="): ) [47088,47089]" dest="): ) [46864,46865]"/>
  <match src="(: ( [20330,20331]" dest="(: ( [20207,20208]"/>
  <match src="visibility [38942,38948]" dest="visibility [38718,38724]"/>
  <match src="call_argument [52343,52349]" dest="call_argument [52249,52255]"/>
  <match src=",: , [6571,6572]" dest=",: , [6538,6539]"/>
  <match src="view: view [31831,31835]" dest="view: view [31675,31679]"/>
  <match src="(: ( [42343,42344]" dest="(: ( [42119,42120]"/>
  <match src="member_expression [45467,45475]" dest="member_expression [45243,45251]"/>
  <match src="identifier: _length [31403,31410]" dest="identifier: _length [31247,31254]"/>
  <match src="user_defined_type [21432,21438]" dest="user_defined_type [21309,21315]"/>
  <match src="add: add [43540,43543]" dest="add: add [43316,43319]"/>
  <match src="identifier: _setupRole [52269,52279]" dest="identifier: _setupRole [52175,52185]"/>
  <match src="parameter [50400,50426]" dest="parameter [50175,50201]"/>
  <match src="identifier: add [40227,40230]" dest="identifier: add [40003,40006]"/>
  <match src="binary_expression [48959,48975]" dest="binary_expression [48735,48751]"/>
  <match src="identifier: abi [20934,20937]" dest="identifier: abi [20811,20814]"/>
  <match src="identifier: _revertMsg [40674,40684]" dest="identifier: _revertMsg [40449,40459]"/>
  <match src="): ) [1183,1184]" dest="): ) [1183,1184]"/>
  <match src="&lt;:  &lt; [2954,2956]" dest="&lt;:  &lt; [2921,2923]"/>
  <match src="parameter [31332,31351]" dest="parameter [31176,31195]"/>
  <match src="visibility [17314,17322]" dest="visibility [17248,17256]"/>
  <match src="primitive_type [42263,42270]" dest="primitive_type [42039,42046]"/>
  <match src="assembly: assembly [47105,47113]" dest="assembly: assembly [46881,46889]"/>
  <match src="identifier: functionCall [21868,21880]" dest="identifier: functionCall [21745,21757]"/>
  <match src="indexed: indexed [35134,35141]" dest="indexed: indexed [34910,34917]"/>
  <match src="user_defined_type [19120,19126]" dest="user_defined_type [18997,19003]"/>
  <match src="identifier: role [35791,35795]" dest="identifier: role [35567,35571]"/>
  <match src="bytes: bytes [50987,50992]" dest="bytes: bytes [50762,50767]"/>
  <match src=",: , [31121,31122]" dest=",: , [30965,30966]"/>
  <match src="member_expression [21937,21954]" dest="member_expression [21814,21831]"/>
  <match src="): ) [42957,42958]" dest="): ) [42733,42734]"/>
  <match src="address: address [12589,12596]" dest="address: address [12523,12530]"/>
  <match src="identifier: keccak256 [51621,51630]" dest="identifier: keccak256 [51396,51405]"/>
  <match src="(: ( [38359,38360]" dest="(: ( [38135,38136]"/>
  <match src="returns: returns [37352,37359]" dest="returns: returns [37128,37135]"/>
  <match src="yul_identifier [47676,47681]" dest="yul_identifier [47452,47457]"/>
  <match src="&gt;=:  &gt;= [109,112]" dest="&gt;=:  &gt;= [109,112]"/>
  <match src="type_name [50400,50405]" dest="type_name [50175,50180]"/>
  <match src="function_body [46762,47969]" dest="function_body [46538,47745]"/>
  <match src="identifier: set [25190,25193]" dest="identifier: set [25034,25037]"/>
  <match src="identifier: require [44045,44052]" dest="identifier: require [43821,43828]"/>
  <match src="}: } [36377,36378]" dest="}: } [36153,36154]"/>
  <match src="]: ] [26259,26260]" dest="]: ] [26103,26104]"/>
  <match src="payable: payable [12526,12533]" dest="payable: payable [12460,12467]"/>
  <match src="member_expression [25190,25208]" dest="member_expression [25034,25052]"/>
  <match src="): ) [42249,42250]" dest="): ) [42025,42026]"/>
  <match src="type_name [46773,46780]" dest="type_name [46549,46556]"/>
  <match src="type_name [4066,4073]" dest="type_name [4033,4040]"/>
  <match src="type_name [15178,15185]" dest="type_name [15112,15119]"/>
  <match src="+: + [46365,46366]" dest="+: + [46141,46142]"/>
  <match src="boolean_literal [26034,26039]" dest="boolean_literal [25878,25883]"/>
  <match src="identifier: len [44966,44969]" dest="identifier: len [44742,44745]"/>
  <match src="memory: memory [41775,41781]" dest="memory: memory [41551,41557]"/>
  <match src="function_body [26424,26468]" dest="function_body [26268,26312]"/>
  <match src="solidity: solidity [51090,51098]" dest="solidity: solidity [50865,50873]"/>
  <match src="identifier: approve [20337,20344]" dest="identifier: approve [20214,20221]"/>
  <match src="binary_expression [4727,4732]" dest="binary_expression [4694,4699]"/>
  <match src="(: ( [45562,45563]" dest="(: ( [45338,45339]"/>
  <match src="member_expression [16539,16556]" dest="member_expression [16473,16490]"/>
  <match src="return_statement [15938,16019]" dest="return_statement [15872,15953]"/>
  <match src="-: - [4181,4182]" dest="-: - [4148,4149]"/>
  <match src="solidity_version: 0.8.0 [18523,18528]" dest="solidity_version: 0.8.0 [22135,22140]"/>
  <match src="identifier: _inner [27906,27912]" dest="identifier: _inner [27750,27756]"/>
  <match src="identifier: role [38180,38184]" dest="identifier: role [37956,37960]"/>
  <match src="type_name [15913,15918]" dest="type_name [15847,15852]"/>
  <match src="): ) [5703,5704]" dest="): ) [5670,5671]"/>
  <match src="type_name [6145,6152]" dest="type_name [6112,6119]"/>
  <match src="function_definition [6132,6290]" dest="function_definition [6099,6257]"/>
  <match src="comment: // data length [45621,45635]" dest="comment: // data length [45397,45411]"/>
  <match src="identifier: _msgData [32708,32716]" dest="identifier: _msgData [32519,32527]"/>
  <match src="primitive_type [30898,30905]" dest="primitive_type [30742,30749]"/>
  <match src="): ) [40378,40379]" dest="): ) [40154,40155]"/>
  <match src="return: return [36024,36030]" dest="return: return [35800,35806]"/>
  <match src="return: return [37381,37387]" dest="return: return [37157,37163]"/>
  <match src="primitive_type [20817,20824]" dest="primitive_type [20694,20701]"/>
  <match src="identifier: byte0 [43005,43010]" dest="identifier: byte0 [42781,42786]"/>
  <match src="yul_path [47381,47388]" dest="yul_path [47157,47164]"/>
  <match src="primitive_type [41464,41469]" dest="primitive_type [41240,41245]"/>
  <match src="=: = [42328,42329]" dest="=: = [42104,42105]"/>
  <match src="identifier: toAddress [43661,43670]" dest="identifier: toAddress [43437,43446]"/>
  <match src="yul_evm_builtin [47793,47796]" dest="yul_evm_builtin [47569,47572]"/>
  <match src="(: ( [3723,3724]" dest="(: ( [3690,3691]"/>
  <match src="parameter [42982,42986]" dest="parameter [42758,42762]"/>
  <match src="(: ( [15489,15490]" dest="(: ( [15423,15424]"/>
  <match src="primitive_type [50959,50966]" dest="primitive_type [50734,50741]"/>
  <match src="visibility [4077,4085]" dest="visibility [4044,4052]"/>
  <match src="identifier: b [9493,9494]" dest="identifier: b [9460,9461]"/>
  <match src="user_defined_type [51430,51448]" dest="user_defined_type [51205,51223]"/>
  <match src="): ) [44102,44103]" dest="): ) [43878,43879]"/>
  <match src="memory: memory [15200,15206]" dest="memory: memory [15134,15140]"/>
  <match src="==: == [38984,38986]" dest="==: == [38760,38762]"/>
  <match src="type_name [4106,4113]" dest="type_name [4073,4080]"/>
  <match src="comment: /**      * @dev Deprecated. This function has issues similar to the ones found in      * {IERC20-approve}, and its usage is discouraged.      *      * Whenever possible, use {safeIncreaseAllowance} and      * {safeDecreaseAllowance} instead.      */ [19496,19751]" dest="comment: /**      * @dev Deprecated. This function has issues similar to the ones found in      * {IERC20-approve}, and its usage is discouraged.      *      * Whenever possible, use {safeIncreaseAllowance} and      * {safeDecreaseAllowance} instead.      */ [19373,19628]"/>
  <match src="address: address [21853,21860]" dest="address: address [21730,21737]"/>
  <match src="{: { [6616,6617]" dest="{: { [6583,6584]"/>
  <match src="identifier: SafeERC20 [19014,19023]" dest="identifier: SafeERC20 [18891,18900]"/>
  <match src="(: ( [10250,10251]" dest="(: ( [10217,10218]"/>
  <match src="return_statement [28569,28599]" dest="return_statement [28413,28443]"/>
  <match src="type_name [5014,5021]" dest="type_name [4981,4988]"/>
  <match src="view: view [11188,11192]" dest="view: view [11122,11126]"/>
  <match src="): ) [30911,30912]" dest="): ) [30755,30756]"/>
  <match src="bytes32: bytes32 [37326,37333]" dest="bytes32: bytes32 [37102,37109]"/>
  <match src="type_name [6607,6614]" dest="type_name [6574,6581]"/>
  <match src="{: { [31385,31386]" dest="{: { [31229,31230]"/>
  <match src="returns: returns [6181,6188]" dest="returns: returns [6148,6155]"/>
  <match src="}: } [26005,26006]" dest="}: } [25849,25850]"/>
  <match src="call_argument [14234,14246]" dest="call_argument [14168,14180]"/>
  <match src="}: } [49512,49513]" dest="}: } [49288,49289]"/>
  <match src="return: return [31865,31871]" dest="return: return [31709,31715]"/>
  <match src="using_directive [34493,34519]" dest="using_directive [34269,34295]"/>
  <match src="identifier: b [7333,7334]" dest="identifier: b [7300,7301]"/>
  <match src="contract: contract [32561,32569]" dest="contract: contract [32372,32380]"/>
  <match src="+: + [25740,25741]" dest="+: + [25584,25585]"/>
  <match src="yul_evm_builtin [49353,49356]" dest="yul_evm_builtin [49129,49132]"/>
  <match src="}: } [48195,48196]" dest="}: } [47971,47972]"/>
  <match src="uint256: uint256 [19146,19153]" dest="uint256: uint256 [19023,19030]"/>
  <match src="return: return [48885,48891]" dest="return: return [48661,48667]"/>
  <match src="variable_declaration_statement [48106,48120]" dest="variable_declaration_statement [47882,47896]"/>
  <match src="identifier: memPtr [42512,42518]" dest="identifier: memPtr [42288,42294]"/>
  <match src="number_literal: 1 [48585,48586]" dest="number_literal: 1 [48361,48362]"/>
  <match src="call_expression [43744,43756]" dest="call_expression [43520,43532]"/>
  <match src="(: ( [37360,37361]" dest="(: ( [37136,37137]"/>
  <match src="number_literal: 32 [41535,41537]" dest="number_literal: 32 [41311,41313]"/>
  <match src="(: ( [17364,17365]" dest="(: ( [17298,17299]"/>
  <match src="view: view [333,337]" dest="view: view [333,337]"/>
  <match src="parameter [28511,28524]" dest="parameter [28355,28368]"/>
  <match src="parameter [16332,16344]" dest="parameter [16266,16278]"/>
  <match src="string_literal [7340,7368]" dest="string_literal [7307,7335]"/>
  <match src="bytes32: bytes32 [36279,36286]" dest="bytes32: bytes32 [36055,36062]"/>
  <match src="binary_expression [46353,46375]" dest="binary_expression [46129,46151]"/>
  <match src=":=: := [41925,41927]" dest=":=: := [41701,41703]"/>
  <match src="solidity_version:  0.6.6 [51098,51104]" dest="solidity_version:  0.6.12 [50873,50880]"/>
  <match src="visibility [16309,16317]" dest="visibility [16243,16251]"/>
  <match src=",: , [20640,20641]" dest=",: , [20517,20518]"/>
  <match src="identifier: item [41711,41715]" dest="identifier: item [41487,41491]"/>
  <match src="block_statement [24772,26006]" dest="block_statement [24616,25850]"/>
  <match src="{: { [44634,44635]" dest="{: { [44410,44411]"/>
  <match src="identifier: item [44122,44126]" dest="identifier: item [43898,43902]"/>
  <match src="identifier: AddressSet [28642,28652]" dest="identifier: AddressSet [28486,28496]"/>
  <match src="call_expression [45445,45520]" dest="call_expression [45221,45296]"/>
  <match src="yul_hex_number: 0xf7 [47683,47687]" dest="yul_hex_number: 0xf7 [47459,47463]"/>
  <match src="(: ( [44052,44053]" dest="(: ( [43828,43829]"/>
  <match src="constant: constant [51730,51738]" dest="constant: constant [51505,51513]"/>
  <match src="pragma: pragma [49590,49596]" dest="pragma: pragma [49366,49372]"/>
  <match src="-: - [8652,8653]" dest="-: - [8619,8620]"/>
  <match src="identifier: success [12818,12825]" dest="identifier: success [12752,12759]"/>
  <match src="call_expression [14195,14247]" dest="call_expression [14129,14181]"/>
  <match src="identifier: sender [50942,50948]" dest="identifier: sender [50717,50723]"/>
  <match src="parameter [9423,9430]" dest="parameter [9390,9397]"/>
  <match src="parameter [44863,44870]" dest="parameter [44639,44646]"/>
  <match src="(: ( [26216,26217]" dest="(: ( [26060,26061]"/>
  <match src="tuple_expression [4746,4756]" dest="tuple_expression [4713,4723]"/>
  <match src="identifier: index [26928,26933]" dest="identifier: index [26772,26777]"/>
  <match src="parameter [3724,3733]" dest="parameter [3691,3700]"/>
  <match src="): ) [6258,6259]" dest="): ) [6225,6226]"/>
  <match src="for: for [34507,34510]" dest="for: for [34283,34286]"/>
  <match src="(: ( [5328,5329]" dest="(: ( [5295,5296]"/>
  <match src="comment: // constructor execution. [11373,11398]" dest="comment: // constructor execution. [11307,11332]"/>
  <match src="false [4145,4150]" dest="false [4112,4117]"/>
  <match src="identifier: memPtr [46870,46876]" dest="identifier: memPtr [46646,46652]"/>
  <match src="primitive_type [13695,13700]" dest="primitive_type [13629,13634]"/>
  <match src="identifier: result [44743,44749]" dest="identifier: result [44519,44525]"/>
  <match src="identifier: role [39709,39713]" dest="identifier: role [39485,39489]"/>
  <match src="): ) [3832,3833]" dest="): ) [3799,3800]"/>
  <match src="user_defined_type [28664,28667]" dest="user_defined_type [28508,28511]"/>
  <match src="return_statement [17577,17637]" dest="return_statement [17511,17571]"/>
  <match src="identifier: c [6760,6761]" dest="identifier: c [6727,6728]"/>
  <match src="expression_statement [7325,7370]" dest="expression_statement [7292,7337]"/>
  <match src="}: } [19487,19488]" dest="}: } [19364,19365]"/>
  <match src="primitive_type [31872,31879]" dest="primitive_type [31716,31723]"/>
  <match src="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [27936,28008]" dest="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [27780,27852]"/>
  <match src="identifier: a [7387,7388]" dest="identifier: a [7354,7355]"/>
  <match src="primitive_type [8583,8590]" dest="primitive_type [8550,8557]"/>
  <match src="identifier: functionCallWithValue [14639,14660]" dest="identifier: functionCallWithValue [14573,14594]"/>
  <match src="identifier: data [15884,15888]" dest="identifier: data [15818,15822]"/>
  <match src="primitive_type [30662,30669]" dest="primitive_type [30506,30513]"/>
  <match src="primitive_type [10251,10258]" dest="primitive_type [10218,10225]"/>
  <match src="binary_expression [48212,48238]" dest="binary_expression [47988,48014]"/>
  <match src="{: { [3560,3561]" dest="{: { [3527,3528]"/>
  <match src="sub: sub [44684,44687]" dest="sub: sub [44460,44463]"/>
  <match src="identifier: spender [20981,20988]" dest="identifier: spender [20858,20865]"/>
  <match src="primitive_type [1176,1183]" dest="primitive_type [1176,1183]"/>
  <match src="returns: returns [29739,29746]" dest="returns: returns [29583,29590]"/>
  <match src="assignment_expression [40082,40116]" dest="assignment_expression [39858,39892]"/>
  <match src="primitive_type [45531,45538]" dest="primitive_type [45307,45314]"/>
  <match src="parameter [27611,27624]" dest="parameter [27455,27468]"/>
  <match src="call_expression [45548,45575]" dest="call_expression [45324,45351]"/>
  <match src="): ) [49361,49362]" dest="): ) [49137,49138]"/>
  <match src=".: . [31887,31888]" dest=".: . [31731,31732]"/>
  <match src=",: , [37794,37795]" dest=",: , [37570,37571]"/>
  <match src="primitive_type [24580,24584]" dest="primitive_type [24424,24428]"/>
  <match src="storage: storage [27817,27824]" dest="storage: storage [27661,27668]"/>
  <match src="type_name [52095,52102]" dest="type_name [51870,51877]"/>
  <match src="yul_identifier [18179,18194]" dest="yul_identifier [18113,18128]"/>
  <match src="call_argument [40783,40841]" dest="call_argument [40558,40616]"/>
  <match src="{: { [48995,48996]" dest="{: { [48771,48772]"/>
  <match src="yul_path [47869,47876]" dest="yul_path [47645,47652]"/>
  <match src="(: ( [29320,29321]" dest="(: ( [29164,29165]"/>
  <match src="uint256: uint256 [9361,9368]" dest="uint256: uint256 [9328,9335]"/>
  <match src="assembly_statement [44497,44724]" dest="assembly_statement [44273,44500]"/>
  <match src="yul_evm_builtin [43093,43097]" dest="yul_evm_builtin [42869,42873]"/>
  <match src="]: ] [40217,40218]" dest="]: ] [39993,39994]"/>
  <match src="identifier: account [38933,38940]" dest="identifier: account [38709,38716]"/>
  <match src="mload: mload [49413,49418]" dest="mload: mload [49189,49194]"/>
  <match src="pure: pure [17754,17758]" dest="pure: pure [17688,17692]"/>
  <match src="call_argument [5792,5821]" dest="call_argument [5759,5788]"/>
  <match src="parameter [35955,35967]" dest="parameter [35731,35743]"/>
  <match src="uint256: uint256 [36314,36321]" dest="uint256: uint256 [36090,36097]"/>
  <match src=":=: := [47713,47715]" dest=":=: := [47489,47491]"/>
  <match src="member_expression [25700,25712]" dest="member_expression [25544,25556]"/>
  <match src="identifier: _verifyCallResult [17584,17601]" dest="identifier: _verifyCallResult [17518,17535]"/>
  <match src="identifier: result [45228,45234]" dest="identifier: result [45004,45010]"/>
  <match src="member_expression [44916,44927]" dest="member_expression [44692,44703]"/>
  <match src="binary_expression [7387,7392]" dest="binary_expression [7354,7359]"/>
  <match src="identifier: isContract [16365,16375]" dest="identifier: isContract [16299,16309]"/>
  <match src="): ) [10298,10299]" dest="): ) [10265,10266]"/>
  <match src="identifier: _revertMsg [40763,40773]" dest="identifier: _revertMsg [40538,40548]"/>
  <match src="false [5375,5380]" dest="false [5342,5347]"/>
  <match src="function_definition [36977,37115]" dest="function_definition [36753,36891]"/>
  <match src="!: ! [43743,43744]" dest="!: ! [43519,43520]"/>
  <match src="=: = [53730,53731]" dest="=: = [53636,53637]"/>
  <match src="bool: bool [17679,17683]" dest="bool: bool [17613,17617]"/>
  <match src="(: ( [40151,40152]" dest="(: ( [39927,39928]"/>
  <match src="primitive_type [6156,6163]" dest="primitive_type [6123,6130]"/>
  <match src="return_type_definition [5320,5343]" dest="return_type_definition [5287,5310]"/>
  <match src="state_mutability [10237,10241]" dest="state_mutability [10204,10208]"/>
  <match src="expression_statement [42201,42251]" dest="expression_statement [41977,42027]"/>
  <match src="identifier: result [43550,43556]" dest="identifier: result [43326,43332]"/>
  <match src="parameter [37000,37012]" dest="parameter [36776,36788]"/>
  <match src="user_defined_type [51567,51573]" dest="user_defined_type [51342,51348]"/>
  <match src="): ) [54205,54206]" dest="): ) [54111,54112]"/>
  <match src="parameter [17267,17284]" dest="parameter [17201,17218]"/>
  <match src="variable_declaration_statement [44327,44372]" dest="variable_declaration_statement [44103,44148]"/>
  <match src=",: , [20593,20594]" dest=",: , [20470,20471]"/>
  <match src="yul_evm_builtin [41928,41931]" dest="yul_evm_builtin [41704,41707]"/>
  <match src="): ) [31383,31384]" dest="): ) [31227,31228]"/>
  <match src=",: , [37012,37013]" dest=",: , [36788,36789]"/>
  <match src="primitive_type [37699,37706]" dest="primitive_type [37475,37482]"/>
  <match src="bytes: bytes [16873,16878]" dest="bytes: bytes [16807,16812]"/>
  <match src="primitive_type [49246,49253]" dest="primitive_type [49022,49029]"/>
  <match src="identifier: toRlpItem [41688,41697]" dest="identifier: toRlpItem [41464,41473]"/>
  <match src="function_definition [37680,37907]" dest="function_definition [37456,37683]"/>
  <match src="identifier: AddressSet [34568,34578]" dest="identifier: AddressSet [34344,34354]"/>
  <match src="type_name [19309,19315]" dest="type_name [19186,19192]"/>
  <match src="primitive_type [40152,40159]" dest="primitive_type [39928,39935]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [3567,3702]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [3534,3669]"/>
  <match src="parameter [14117,14143]" dest="parameter [14051,14077]"/>
  <match src="member_expression [37077,37097]" dest="member_expression [36853,36873]"/>
  <match src="type_cast_expression [29574,29588]" dest="type_cast_expression [29418,29432]"/>
  <match src="type_name [51981,51988]" dest="type_name [51756,51763]"/>
  <match src="): ) [23968,23969]" dest="): ) [23812,23813]"/>
  <match src="(: ( [46860,46861]" dest="(: ( [46636,46637]"/>
  <match src="assembly_statement [49010,49077]" dest="assembly_statement [48786,48853]"/>
  <match src="variable_declaration_statement [45136,45151]" dest="variable_declaration_statement [44912,44927]"/>
  <match src="parameter [37361,37368]" dest="parameter [37137,37144]"/>
  <match src="variable_declaration [16512,16535]" dest="variable_declaration [16446,16469]"/>
  <match src="uint256: uint256 [46715,46722]" dest="uint256: uint256 [46491,46498]"/>
  <match src="identifier: decode [22072,22078]" dest="identifier: decode [21949,21955]"/>
  <match src=".: . [44920,44921]" dest=".: . [44696,44697]"/>
  <match src="(: ( [17375,17376]" dest="(: ( [17309,17310]"/>
  <match src="{: { [27650,27651]" dest="{: { [27494,27495]"/>
  <match src="identifier: require [12581,12588]" dest="identifier: require [12515,12522]"/>
  <match src="identifier: call [12774,12778]" dest="identifier: call [12708,12712]"/>
  <match src="call_argument [44947,44969]" dest="call_argument [44723,44745]"/>
  <match src="identifier: abi [22068,22071]" dest="identifier: abi [21945,21948]"/>
  <match src="type_name [53687,53704]" dest="type_name [53593,53610]"/>
  <match src="&quot;: &quot; [43872,43873]" dest="&quot;: &quot; [43648,43649]"/>
  <match src="call_argument [29574,29588]" dest="call_argument [29418,29432]"/>
  <match src="memory: memory [15165,15171]" dest="memory: memory [15099,15105]"/>
  <match src="storage: storage [30575,30582]" dest="storage: storage [30419,30426]"/>
  <match src="identifier: RLPReader [51477,51486]" dest="identifier: RLPReader [51252,51261]"/>
  <match src="=: = [45546,45547]" dest="=: = [45322,45323]"/>
  <match src="primitive_type [48048,48055]" dest="primitive_type [47824,47831]"/>
  <match src="==: == [44958,44960]" dest="==: == [44734,44736]"/>
  <match src="yul_decimal_number: 0 [48168,48169]" dest="yul_decimal_number: 0 [47944,47945]"/>
  <match src="call_argument [51631,51645]" dest="call_argument [51406,51420]"/>
  <match src="using: using [51471,51476]" dest="using: using [51246,51251]"/>
  <match src="uint256: uint256 [30898,30905]" dest="uint256: uint256 [30742,30749]"/>
  <match src="yul_evm_builtin [48163,48167]" dest="yul_evm_builtin [47939,47943]"/>
  <match src="string [6706,6741]" dest="string [6673,6708]"/>
  <match src="type_name [28511,28518]" dest="type_name [28355,28362]"/>
  <match src="call_argument [39076,39080]" dest="call_argument [38852,38856]"/>
  <match src="identifier: a [5760,5761]" dest="identifier: a [5727,5728]"/>
  <match src="primitive_type [51653,51660]" dest="primitive_type [51428,51435]"/>
  <match src="&quot;: &quot; [41824,41825]" dest="&quot;: &quot; [41600,41601]"/>
  <match src="): ) [54235,54236]" dest="): ) [54193,54194]"/>
  <match src="yul_evm_builtin [47227,47230]" dest="yul_evm_builtin [47003,47006]"/>
  <match src="comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [18539,19004]" dest="comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [18416,18881]"/>
  <match src="identifier: destPtr [45822,45829]" dest="identifier: destPtr [45598,45605]"/>
  <match src="contract_body [220,2838]" dest="contract_body [220,2838]"/>
  <match src="memory: memory [53516,53522]" dest="memory: memory [53422,53428]"/>
  <match src="parenthesized_expression [20126,20138]" dest="parenthesized_expression [20003,20015]"/>
  <match src=",: , [14223,14224]" dest=",: , [14157,14158]"/>
  <match src="]: ] [25619,25620]" dest="]: ] [25463,25464]"/>
  <match src="binary_expression [41807,41822]" dest="binary_expression [41583,41598]"/>
  <match src="member_expression [43038,43049]" dest="member_expression [42814,42825]"/>
  <match src="identifier: item [43856,43860]" dest="identifier: item [43632,43636]"/>
  <match src="byte: byte [48163,48167]" dest="byte: byte [47939,47943]"/>
  <match src="bytes32: bytes32 [38172,38179]" dest="bytes32: bytes32 [37948,37955]"/>
  <match src="binary_expression [8005,8010]" dest="binary_expression [7972,7977]"/>
  <match src="array_access [26990,27008]" dest="array_access [26834,26852]"/>
  <match src="identifier: token [19785,19790]" dest="identifier: token [19662,19667]"/>
  <match src="binary_expression [15272,15302]" dest="binary_expression [15206,15236]"/>
  <match src=",: , [27609,27610]" dest=",: , [27453,27454]"/>
  <match src="address: address [2772,2779]" dest="address: address [2772,2779]"/>
  <match src="identifier: set [28580,28583]" dest="identifier: set [28424,28427]"/>
  <match src="parameter [16910,16922]" dest="parameter [16844,16856]"/>
  <match src="(: ( [29782,29783]" dest="(: ( [29626,29627]"/>
  <match src="yul_identifier [18252,18262]" dest="yul_identifier [18186,18196]"/>
  <match src=",: , [4972,4973]" dest=",: , [4939,4940]"/>
  <match src="): ) [23728,23729]" dest="): ) [23572,23573]"/>
  <match src="storage: storage [29215,29222]" dest="storage: storage [29059,29066]"/>
  <match src="variable_declaration_statement [44883,44929]" dest="variable_declaration_statement [44659,44705]"/>
  <match src="type_name [35391,35398]" dest="type_name [35167,35174]"/>
  <match src="): ) [26391,26392]" dest="): ) [26235,26236]"/>
  <match src="(: ( [16375,16376]" dest="(: ( [16309,16310]"/>
  <match src="): ) [4184,4185]" dest="): ) [4151,4152]"/>
  <match src="(: ( [47719,47720]" dest="(: ( [47495,47496]"/>
  <match src="(: ( [31331,31332]" dest="(: ( [31175,31176]"/>
  <match src="): ) [32717,32718]" dest="): ) [32528,32529]"/>
  <match src="identifier: b [7391,7392]" dest="identifier: b [7358,7359]"/>
  <match src="call_argument [14797,14802]" dest="call_argument [14731,14736]"/>
  <match src="assembly: assembly [11490,11498]" dest="assembly: assembly [11424,11432]"/>
  <match src="state_mutability [32728,32732]" dest="state_mutability [32539,32543]"/>
  <match src="binary_expression [44396,44413]" dest="binary_expression [44172,44189]"/>
  <match src="call_argument [15280,15284]" dest="call_argument [15214,15218]"/>
  <match src="(: ( [41931,41932]" dest="(: ( [41707,41708]"/>
  <match src="(: ( [40716,40717]" dest="(: ( [40491,40492]"/>
  <match src="parameter [29512,29516]" dest="parameter [29356,29360]"/>
  <match src=",: , [28969,28970]" dest=",: , [28813,28814]"/>
  <match src="&gt;: &gt; [7955,7956]" dest="&gt;: &gt; [7922,7923]"/>
  <match src="expression_statement [43580,43613]" dest="expression_statement [43356,43389]"/>
  <match src=",: , [44270,44271]" dest=",: , [44046,44047]"/>
  <match src=",: , [20353,20354]" dest=",: , [20230,20231]"/>
  <match src="binary_expression [47064,47088]" dest="binary_expression [46840,46864]"/>
  <match src="memory: memory [13701,13707]" dest="memory: memory [13635,13641]"/>
  <match src="identifier: byte0 [48354,48359]" dest="identifier: byte0 [48130,48135]"/>
  <match src="returns: returns [5320,5327]" dest="returns: returns [5287,5294]"/>
  <match src="type_name [41373,41378]" dest="type_name [41149,41154]"/>
  <match src="(: ( [39700,39701]" dest="(: ( [39476,39477]"/>
  <match src="bytes32: bytes32 [30975,30982]" dest="bytes32: bytes32 [30819,30826]"/>
  <match src="type_name [44863,44870]" dest="type_name [44639,44646]"/>
  <match src="parameter [14082,14096]" dest="parameter [14016,14030]"/>
  <match src="address: address [30220,30227]" dest="address: address [30064,30071]"/>
  <match src="identifier: memPtr [47775,47781]" dest="identifier: memPtr [47551,47557]"/>
  <match src="primitive_type [2772,2779]" dest="primitive_type [2772,2779]"/>
  <match src="): ) [15563,15564]" dest="): ) [15497,15498]"/>
  <match src="primitive_type [34597,34604]" dest="primitive_type [34373,34380]"/>
  <match src="identifier: sender [35838,35844]" dest="identifier: sender [35614,35620]"/>
  <match src="state_mutability [15899,15903]" dest="state_mutability [15833,15837]"/>
  <match src="return_type_definition [46744,46761]" dest="return_type_definition [46520,46537]"/>
  <match src="state_mutability [26865,26869]" dest="state_mutability [26709,26713]"/>
  <match src="yul_variable_declaration [18175,18215]" dest="yul_variable_declaration [18109,18149]"/>
  <match src="identifier: require [44939,44946]" dest="identifier: require [44715,44722]"/>
  <match src="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [26281,26353]" dest="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [26125,26197]"/>
  <match src=".: . [42443,42444]" dest=".: . [42219,42220]"/>
  <match src="}: } [5848,5849]" dest="}: } [5815,5816]"/>
  <match src="number_literal: 0 [4665,4666]" dest="number_literal: 0 [4632,4633]"/>
  <match src=",: , [47464,47465]" dest=",: , [47240,47241]"/>
  <match src="(: ( [5081,5082]" dest="(: ( [5048,5049]"/>
  <match src=".: . [54302,54303]" dest=".: . [54155,54156]"/>
  <match src="identifier: amount [786,792]" dest="identifier: amount [786,792]"/>
  <match src="type_name [29261,29265]" dest="type_name [29105,29109]"/>
  <match src="): ) [24030,24031]" dest="): ) [23874,23875]"/>
  <match src="identifier: a [4134,4135]" dest="identifier: a [4101,4102]"/>
  <match src="false: false [4145,4150]" dest="false: false [4112,4117]"/>
  <match src="return_statement [4165,4186]" dest="return_statement [4132,4153]"/>
  <match src="bytes: bytes [15159,15164]" dest="bytes: bytes [15093,15098]"/>
  <match src="bool: bool [24580,24584]" dest="bool: bool [24424,24428]"/>
  <match src="(: ( [53674,53675]" dest="(: ( [53580,53581]"/>
  <match src="true [25990,25994]" dest="true [25834,25838]"/>
  <match src="if_statement [4656,4685]" dest="if_statement [4623,4652]"/>
  <match src="parameter [53482,53499]" dest="parameter [53388,53405]"/>
  <match src="): ) [13821,13822]" dest="): ) [13755,13756]"/>
  <match src=",: , [20447,20448]" dest=",: , [20324,20325]"/>
  <match src="string [44138,44170]" dest="string [43914,43946]"/>
  <match src=",: , [45475,45476]" dest=",: , [45251,45252]"/>
  <match src="primitive_type [2557,2564]" dest="primitive_type [2557,2564]"/>
  <match src="call_argument [29783,29793]" dest="call_argument [29627,29637]"/>
  <match src="): ) [49362,49363]" dest="): ) [49138,49139]"/>
  <match src="primitive_type [11410,11417]" dest="primitive_type [11344,11351]"/>
  <match src="type_name [19134,19141]" dest="type_name [19011,19018]"/>
  <match src="&gt;=: &gt;= [48331,48333]" dest="&gt;=: &gt;= [48107,48109]"/>
  <match src="function_body [5737,5849]" dest="function_body [5704,5816]"/>
  <match src="identifier: _values [25481,25488]" dest="identifier: _values [25325,25332]"/>
  <match src="function_definition [36251,36378]" dest="function_definition [36027,36154]"/>
  <match src="(: ( [43942,43943]" dest="(: ( [43718,43719]"/>
  <match src="yul_function_call [47349,47362]" dest="yul_function_call [47125,47138]"/>
  <match src="binary_expression [20143,20187]" dest="binary_expression [20020,20064]"/>
  <match src="identifier: UintSet [30567,30574]" dest="identifier: UintSet [30411,30418]"/>
  <match src="binary_expression [6694,6699]" dest="binary_expression [6661,6666]"/>
  <match src="parameter [347,354]" dest="parameter [347,354]"/>
  <match src="function_body [36323,36378]" dest="function_body [36099,36154]"/>
  <match src="(: ( [49473,49474]" dest="(: ( [49249,49250]"/>
  <match src="identifier: success [17602,17609]" dest="identifier: success [17536,17543]"/>
  <match src="(: ( [44216,44217]" dest="(: ( [43992,43993]"/>
  <match src="type_name [52799,52806]" dest="type_name [52705,52712]"/>
  <match src="return_type_definition [2328,2342]" dest="return_type_definition [2328,2342]"/>
  <match src="primitive_type [53123,53130]" dest="primitive_type [53029,53036]"/>
  <match src="bytes: bytes [15913,15918]" dest="bytes: bytes [15847,15852]"/>
  <match src="): ) [26971,26972]" dest="): ) [26815,26816]"/>
  <match src=",: , [28590,28591]" dest=",: , [28434,28435]"/>
  <match src="state_mutability [46739,46743]" dest="state_mutability [46515,46519]"/>
  <match src="{: { [52146,52147]" dest="{: { [52052,52053]"/>
  <match src="{: { [17964,17965]" dest="{: { [17898,17899]"/>
  <match src="yul_identifier [47152,47157]" dest="yul_identifier [46928,46933]"/>
  <match src="identifier: transferFrom [19440,19452]" dest="identifier: transferFrom [19317,19329]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [26475,26806]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [26319,26650]"/>
  <match src="yul_identifier [49483,49491]" dest="yul_identifier [49259,49267]"/>
  <match src="member_expression [45422,45433]" dest="member_expression [45198,45209]"/>
  <match src="): ) [36068,36069]" dest="): ) [35844,35845]"/>
  <match src="yul_function_call [47765,47811]" dest="yul_function_call [47541,47587]"/>
  <match src="function_definition [24514,26058]" dest="function_definition [24358,25902]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [520,735]" dest="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [520,735]"/>
  <match src="identifier: item [41807,41811]" dest="identifier: item [41583,41587]"/>
  <match src="interface: interface [203,212]" dest="interface: interface [203,212]"/>
  <match src="primitive_type [40717,40723]" dest="primitive_type [40492,40498]"/>
  <match src="call_argument [30650,30660]" dest="call_argument [30494,30504]"/>
  <match src="primitive_type [16281,16287]" dest="primitive_type [16215,16221]"/>
  <match src="yul_path [46870,46876]" dest="yul_path [46646,46652]"/>
  <match src="identifier: abi [20308,20311]" dest="identifier: abi [20185,20188]"/>
  <match src="identifier: srcpart [49493,49500]" dest="identifier: srcpart [49269,49276]"/>
  <match src="call_expression [20801,20840]" dest="call_expression [20678,20717]"/>
  <match src="string [46529,46575]" dest="string [46305,46351]"/>
  <match src="function: function [31774,31782]" dest="function: function [31618,31626]"/>
  <match src="&quot;: &quot; [21887,21888]" dest="&quot;: &quot; [21764,21765]"/>
  <match src="type_name [29701,29711]" dest="type_name [29545,29555]"/>
  <match src="(: ( [46312,46313]" dest="(: ( [46088,46089]"/>
  <match src="identifier: returndata [17611,17621]" dest="identifier: returndata [17545,17555]"/>
  <match src="identifier: set [29783,29786]" dest="identifier: set [29627,29630]"/>
  <match src=".: . [46371,46372]" dest=".: . [46147,46148]"/>
  <match src="[: [ [40212,40213]" dest="[: [ [39988,39989]"/>
  <match src="primitive_type [1871,1878]" dest="primitive_type [1871,1878]"/>
  <match src="): ) [4075,4076]" dest="): ) [4042,4043]"/>
  <match src="(: ( [35774,35775]" dest="(: ( [35550,35551]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [16437,16487]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [16371,16421]"/>
  <match src="identifier: set [26907,26910]" dest="identifier: set [26751,26754]"/>
  <match src="assembly_statement [18143,18300]" dest="assembly_statement [18077,18234]"/>
  <match src="identifier: b [8654,8655]" dest="identifier: b [8621,8622]"/>
  <match src="identifier: MANAGER_ROLE [53582,53594]" dest="identifier: MANAGER_ROLE [53488,53500]"/>
  <match src="function_definition [32699,32932]" dest="function_definition [32510,32743]"/>
  <match src="call_argument [45453,45475]" dest="call_argument [45229,45251]"/>
  <match src="(: ( [31844,31845]" dest="(: ( [31688,31689]"/>
  <match src="identifier: c [3876,3877]" dest="identifier: c [3843,3844]"/>
  <match src="(: ( [44818,44819]" dest="(: ( [44594,44595]"/>
  <match src="return: return [32666,32672]" dest="return: return [32477,32483]"/>
  <match src="indexed: indexed [51989,51996]" dest="indexed: indexed [51764,51771]"/>
  <match src="}: } [16639,16640]" dest="}: } [16573,16574]"/>
  <match src="comment: /**      * @dev Emitted when `account` is revoked `role`.      *      * `sender` is the account that originated the contract call:      *   - if using `revokeRole`, it is the admin role bearer      *   - if using `renounceRole`, it is the role bearer (i.e. `account`)      */ [35470,35751]" dest="comment: /**      * @dev Emitted when `account` is revoked `role`.      *      * `sender` is the account that originated the contract call:      *   - if using `revokeRole`, it is the admin role bearer      *   - if using `renounceRole`, it is the role bearer (i.e. `account`)      */ [35246,35527]"/>
  <match src="identifier: logRLPList [51002,51012]" dest="identifier: logRLPList [50777,50787]"/>
  <match src="identifier: index [30190,30195]" dest="identifier: index [30034,30039]"/>
  <match src="call_expression [19181,19267]" dest="call_expression [19058,19144]"/>
  <match src="}: } [51281,51282]" dest="}: } [51057,51058]"/>
  <match src="internal: internal [30913,30921]" dest="internal: internal [30757,30765]"/>
  <match src="returns: returns [15904,15911]" dest="returns: returns [15838,15845]"/>
  <match src="type_name [16246,16253]" dest="type_name [16180,16187]"/>
  <match src="identifier: length [17952,17958]" dest="identifier: length [17886,17892]"/>
  <match src="function_definition [52707,53153]" dest="function_definition [52613,53059]"/>
  <match src="primitive_type [14696,14703]" dest="primitive_type [14630,14637]"/>
  <match src="comment: // in bytes32. [23468,23482]" dest="comment: // in bytes32. [23312,23326]"/>
  <match src="return: return [26983,26989]" dest="return: return [26827,26833]"/>
  <match src="parameter [2337,2341]" dest="parameter [2337,2341]"/>
  <match src="type_name [27830,27837]" dest="type_name [27674,27681]"/>
  <match src="type_name [6190,6197]" dest="type_name [6157,6164]"/>
  <match src="binary_expression [5760,5765]" dest="binary_expression [5727,5732]"/>
  <match src="identifier: lastvalue [25713,25722]" dest="identifier: lastvalue [25557,25566]"/>
  <match src="uint256: uint256 [3735,3742]" dest="uint256: uint256 [3702,3709]"/>
  <match src="(: ( [5402,5403]" dest="(: ( [5369,5370]"/>
  <match src="function_body [43422,43644]" dest="function_body [43198,43420]"/>
  <match src="state_mutability [36300,36304]" dest="state_mutability [36076,36080]"/>
  <match src="identifier: success [17684,17691]" dest="identifier: success [17618,17625]"/>
  <match src="call_expression [51621,51646]" dest="call_expression [51396,51421]"/>
  <match src="): ) [43948,43949]" dest="): ) [43724,43725]"/>
  <match src=".: . [25950,25951]" dest=".: . [25794,25795]"/>
  <match src="call_argument [16607,16617]" dest="call_argument [16541,16551]"/>
  <match src=".: . [44400,44401]" dest=".: . [44176,44177]"/>
  <match src="user_defined_type [29701,29711]" dest="user_defined_type [29545,29555]"/>
  <match src="): ) [43556,43557]" dest="): ) [43332,43333]"/>
  <match src="(: ( [14081,14082]" dest="(: ( [14015,14016]"/>
  <match src="yul_evm_builtin [47349,47354]" dest="yul_evm_builtin [47125,47130]"/>
  <match src="user_defined_type [43981,43988]" dest="user_defined_type [43757,43764]"/>
  <match src="expression_statement [38229,38336]" dest="expression_statement [38005,38112]"/>
  <match src=",: , [20979,20980]" dest=",: , [20856,20857]"/>
  <match src="): ) [17312,17313]" dest="): ) [17246,17247]"/>
  <match src="identifier: a [8650,8651]" dest="identifier: a [8617,8618]"/>
  <match src="type_name [25457,25464]" dest="type_name [25301,25308]"/>
  <match src="(: ( [44666,44667]" dest="(: ( [44442,44443]"/>
  <match src="variable_declaration [45645,45664]" dest="variable_declaration [45421,45440]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [31006,31078]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [30850,30922]"/>
  <match src="identifier: memPtr [47720,47726]" dest="identifier: memPtr [47496,47502]"/>
  <match src="number_literal: 0 [24769,24770]" dest="number_literal: 0 [24613,24614]"/>
  <match src="bool: bool [30621,30625]" dest="bool: bool [30465,30469]"/>
  <match src="bytes: bytes [32750,32755]" dest="bytes: bytes [32561,32566]"/>
  <match src=",: , [24546,24547]" dest=",: , [24390,24391]"/>
  <match src="member_expression [31884,31894]" dest="member_expression [31728,31738]"/>
  <match src="): ) [40300,40301]" dest="): ) [40076,40077]"/>
  <match src="return_statement [46622,46635]" dest="return_statement [46398,46411]"/>
  <match src="pure: pure [8569,8573]" dest="pure: pure [8536,8540]"/>
  <match src="identifier: SafeERC20 [51553,51562]" dest="identifier: SafeERC20 [51328,51337]"/>
  <match src="interface: interface [49761,49770]" dest="interface: interface [49536,49545]"/>
  <match src="memory: memory [10207,10213]" dest="memory: memory [10174,10180]"/>
  <match src="identifier: data [32920,32924]" dest="identifier: data [32731,32735]"/>
  <match src="): ) [5044,5045]" dest="): ) [5011,5012]"/>
  <match src="bytes32: bytes32 [51715,51722]" dest="bytes32: bytes32 [51490,51497]"/>
  <match src="(: ( [42937,42938]" dest="(: ( [42713,42714]"/>
  <match src="storage: storage [30885,30892]" dest="storage: storage [30729,30736]"/>
  <match src="call_argument [39771,39775]" dest="call_argument [39547,39551]"/>
  <match src="identifier: to [19469,19471]" dest="identifier: to [19346,19348]"/>
  <match src=",: , [47371,47372]" dest=",: , [47147,47148]"/>
  <match src="function_body [16924,17027]" dest="function_body [16858,16961]"/>
  <match src="parameter [52765,52788]" dest="parameter [52671,52694]"/>
  <match src="]: ] [54097,54098]" dest="]: ] [54003,54004]"/>
  <match src="external: external [52192,52200]" dest="external: external [52098,52106]"/>
  <match src="view: view [1162,1166]" dest="view: view [1162,1166]"/>
  <match src="identifier: index [37022,37027]" dest="identifier: index [36798,36803]"/>
  <match src="function_body [21473,22164]" dest="function_body [21350,22041]"/>
  <match src="call_argument [40488,40500]" dest="call_argument [40264,40276]"/>
  <match src="yul_identifier [49426,49430]" dest="yul_identifier [49202,49206]"/>
  <match src="): ) [53065,53066]" dest="): ) [52971,52972]"/>
  <match src=",: , [5333,5334]" dest=",: , [5300,5301]"/>
  <match src="call_argument [44068,44102]" dest="call_argument [43844,43878]"/>
  <match src="call_expression [15356,15416]" dest="call_expression [15290,15350]"/>
  <match src="member_expression [28580,28590]" dest="member_expression [28424,28434]"/>
  <match src="type_name [23955,23962]" dest="type_name [23799,23806]"/>
  <match src="uint256: uint256 [4106,4113]" dest="uint256: uint256 [4073,4080]"/>
  <match src="uint256: uint256 [4695,4702]" dest="uint256: uint256 [4662,4669]"/>
  <match src="&quot;: &quot; [16385,16386]" dest="&quot;: &quot; [16319,16320]"/>
  <match src="type_name [43671,43678]" dest="type_name [43447,43454]"/>
  <match src="identifier: safeTransferFrom [19292,19308]" dest="identifier: safeTransferFrom [19169,19185]"/>
  <match src=",: , [17716,17717]" dest=",: , [17650,17651]"/>
  <match src="call_expression [43580,43612]" dest="call_expression [43356,43388]"/>
  <match src="if_statement [17937,18376]" dest="if_statement [17871,18310]"/>
  <match src="identifier: set [31884,31887]" dest="identifier: set [31728,31731]"/>
  <match src="member_expression [30963,30973]" dest="member_expression [30807,30817]"/>
  <match src="tuple_expression [5081,5094]" dest="tuple_expression [5048,5061]"/>
  <match src=",: , [16510,16511]" dest=",: , [16444,16445]"/>
  <match src="member_expression [24047,24063]" dest="member_expression [23891,23907]"/>
  <match src="visibility [29489,29497]" dest="visibility [29333,29341]"/>
  <match src="==: == [43865,43867]" dest="==: == [43641,43643]"/>
  <match src="yul_identifier [47869,47876]" dest="yul_identifier [47645,47652]"/>
  <match src="call_argument [22068,22098]" dest="call_argument [21945,21975]"/>
  <match src=",: , [47237,47238]" dest=",: , [47013,47014]"/>
  <match src="type_name [50372,50379]" dest="type_name [50147,50154]"/>
  <match src="call_argument [43758,43795]" dest="call_argument [43534,43571]"/>
  <match src="visibility [9400,9408]" dest="visibility [9367,9375]"/>
  <match src="type_name [30877,30884]" dest="type_name [30721,30728]"/>
  <match src="identifier: _msgSender [38987,38997]" dest="identifier: _msgSender [38763,38773]"/>
  <match src="primitive_type [8532,8538]" dest="primitive_type [8499,8505]"/>
  <match src=".: . [26453,26454]" dest=".: . [26297,26298]"/>
  <match src="(: ( [20126,20127]" dest="(: ( [20003,20004]"/>
  <match src="{: { [40652,40653]" dest="{: { [40427,40428]"/>
  <match src="(: ( [12588,12589]" dest="(: ( [12522,12523]"/>
  <match src="uint256: uint256 [31376,31383]" dest="uint256: uint256 [31220,31227]"/>
  <match src="binary_expression [10317,10322]" dest="binary_expression [10284,10289]"/>
  <match src="comment: // @returns raw rlp encoding in bytes [43269,43306]" dest="comment: // @returns raw rlp encoding in bytes [43045,43082]"/>
  <match src="expression_statement [37874,37900]" dest="expression_statement [37650,37676]"/>
  <match src="identifier: currPtr [46510,46517]" dest="identifier: currPtr [46286,46293]"/>
  <match src="string_literal [15384,15415]" dest="string_literal [15318,15349]"/>
  <match src="identifier: item [44359,44363]" dest="identifier: item [44135,44139]"/>
  <match src="if_statement [48414,48587]" dest="if_statement [48190,48363]"/>
  <match src="yul_identifier [43084,43089]" dest="yul_identifier [42860,42865]"/>
  <match src="(: ( [50923,50924]" dest="(: ( [50698,50699]"/>
  <match src="inheritance_specifier [51450,51463]" dest="inheritance_specifier [51225,51238]"/>
  <match src="&quot;: &quot; [45121,45122]" dest="&quot;: &quot; [44897,44898]"/>
  <match src=".: . [26910,26911]" dest=".: . [26754,26755]"/>
  <match src="primitive_type [35126,35133]" dest="primitive_type [34902,34909]"/>
  <match src="identifier: functionCall [13666,13678]" dest="identifier: functionCall [13600,13612]"/>
  <match src="}: } [44723,44724]" dest="}: } [44499,44500]"/>
  <match src="identifier: len [45596,45599]" dest="identifier: len [45372,45375]"/>
  <match src="memory: memory [17293,17299]" dest="memory: memory [17227,17233]"/>
  <match src="return_statement [41966,42002]" dest="return_statement [41742,41778]"/>
  <match src="{: { [20473,20474]" dest="{: { [20350,20351]"/>
  <match src=".: . [15537,15538]" dest=".: . [15471,15472]"/>
  <match src="call_argument [37891,37898]" dest="call_argument [37667,37674]"/>
  <match src="identifier: _revertMsg [40961,40971]" dest="identifier: _revertMsg [40736,40746]"/>
  <match src="return: return [43623,43629]" dest="return: return [43399,43405]"/>
  <match src="(: ( [38975,38976]" dest="(: ( [38751,38752]"/>
  <match src="comment: /*  * @author Hamdi Allam hamdi.allam97@gmail.com  * Please reach out with any questions or concerns  * https://github.com/hamdiallam/Solidity-RLP/blob/e681e25a376dbd5426b509380bc03446f05d0f97/contracts/RLPReader.sol  */ [41049,41273]" dest="comment: /*  * @author Hamdi Allam hamdi.allam97@gmail.com  * Please reach out with any questions or concerns  * https://github.com/hamdiallam/Solidity-RLP/blob/e681e25a376dbd5426b509380bc03446f05d0f97/contracts/RLPReader.sol  */ [40824,41048]"/>
  <match src="identifier: logTopicRLPList [53807,53822]" dest="identifier: logTopicRLPList [53713,53728]"/>
  <match src="returns: returns [32741,32748]" dest="returns: returns [32552,32559]"/>
  <match src=",: , [17265,17266]" dest=",: , [17199,17200]"/>
  <match src="pure: pure [46029,46033]" dest="pure: pure [45805,45809]"/>
  <match src=",: , [43596,43597]" dest=",: , [43372,43373]"/>
  <match src="primitive_type [35969,35976]" dest="primitive_type [35745,35752]"/>
  <match src="identifier: item [41932,41936]" dest="identifier: item [41708,41712]"/>
  <match src="contract_body [40652,41005]" dest="contract_body [40427,40780]"/>
  <match src="address: address [54112,54119]" dest="address: address [54018,54025]"/>
  <match src="add: add [45755,45758]" dest="add: add [45531,45534]"/>
  <match src="call_argument [53582,53594]" dest="call_argument [53488,53500]"/>
  <match src="parameter [42096,42115]" dest="parameter [41872,41891]"/>
  <match src="call_argument [39082,39089]" dest="call_argument [38858,38865]"/>
  <match src="identifier: depositData [52969,52980]" dest="identifier: depositData [52875,52886]"/>
  <match src="): ) [32762,32763]" dest="): ) [32573,32574]"/>
  <match src="identifier: errorMessage [17623,17635]" dest="identifier: errorMessage [17557,17569]"/>
  <match src=",: , [43601,43602]" dest=",: , [43377,43378]"/>
  <match src="call_argument [20934,21003]" dest="call_argument [20811,20880]"/>
  <match src="identifier: destPtr [45702,45709]" dest="identifier: destPtr [45478,45485]"/>
  <match src="type_name [6573,6580]" dest="type_name [6540,6547]"/>
  <match src="return: return [27885,27891]" dest="return: return [27729,27735]"/>
  <match src="identifier: returndata [18204,18214]" dest="identifier: returndata [18138,18148]"/>
  <match src="visibility [794,802]" dest="visibility [794,802]"/>
  <match src="function_definition [31774,31911]" dest="function_definition [31618,31755]"/>
  <match src="identifier: item [45178,45182]" dest="identifier: item [44954,44958]"/>
  <match src="internal: internal [20464,20472]" dest="internal: internal [20341,20349]"/>
  <match src="private: private [21465,21472]" dest="private: private [21342,21349]"/>
  <match src="false: false [51153,51158]" dest="false: false [50929,50934]"/>
  <match src="call_argument [43598,43601]" dest="call_argument [43374,43377]"/>
  <match src="pure: pure [5714,5718]" dest="pure: pure [5681,5685]"/>
  <match src="bytes32: bytes32 [29558,29565]" dest="bytes32: bytes32 [29402,29409]"/>
  <match src="parameter [30158,30180]" dest="parameter [30002,30024]"/>
  <match src="address: address [35438,35445]" dest="address: address [35214,35221]"/>
  <match src="identifier: set [27676,27679]" dest="identifier: set [27520,27523]"/>
  <match src=",: , [27828,27829]" dest=",: , [27672,27673]"/>
  <match src="(: ( [31101,31102]" dest="(: ( [30945,30946]"/>
  <match src="primitive_type [27868,27872]" dest="primitive_type [27712,27716]"/>
  <match src=",: , [6224,6225]" dest=",: , [6191,6192]"/>
  <match src="return: return [8643,8649]" dest="return: return [8610,8616]"/>
  <match src="identifier: Set [23497,23500]" dest="identifier: Set [23341,23344]"/>
  <match src="identifier: Bytes32Set [27283,27293]" dest="identifier: Bytes32Set [27127,27137]"/>
  <match src="pure: pure [46739,46743]" dest="pure: pure [46515,46519]"/>
  <match src="memory: memory [16338,16344]" dest="memory: memory [16272,16278]"/>
  <match src="function_body [42190,42815]" dest="function_body [41966,42591]"/>
  <match src="parameter [43981,44000]" dest="parameter [43757,43776]"/>
  <match src="identifier: sender [32677,32683]" dest="identifier: sender [32488,32494]"/>
  <match src="): ) [11177,11178]" dest="): ) [11111,11112]"/>
  <match src="uint256: uint256 [44025,44032]" dest="uint256: uint256 [43801,43808]"/>
  <match src="returns: returns [46744,46751]" dest="returns: returns [46520,46527]"/>
  <match src="(: ( [44687,44688]" dest="(: ( [44463,44464]"/>
  <match src="identifier: success [16503,16510]" dest="identifier: success [16437,16444]"/>
  <match src="yul_function_call [18244,18263]" dest="yul_function_call [18178,18197]"/>
  <match src="}: } [40312,40313]" dest="}: } [40088,40089]"/>
  <match src="uint256: uint256 [6156,6163]" dest="uint256: uint256 [6123,6130]"/>
  <match src="contract_body [32578,32935]" dest="contract_body [32389,32746]"/>
  <match src="indexed: indexed [35399,35406]" dest="indexed: indexed [35175,35182]"/>
  <match src="identifier: target [14783,14789]" dest="identifier: target [14717,14723]"/>
  <match src="type_name [27868,27872]" dest="type_name [27712,27716]"/>
  <match src="identifier: toRlpBytes [43321,43331]" dest="identifier: toRlpBytes [43097,43107]"/>
  <match src="else: else [47509,47513]" dest="else: else [47285,47289]"/>
  <match src="false: false [5054,5059]" dest="false: false [5021,5026]"/>
  <match src="boolean_literal [5375,5380]" dest="boolean_literal [5342,5347]"/>
  <match src="member_expression [45563,45574]" dest="member_expression [45339,45350]"/>
  <match src="identifier: byte0 [46847,46852]" dest="identifier: byte0 [46623,46628]"/>
  <match src="solidity_version: 0.8.0 [2956,2961]" dest="solidity_version: 0.8.0 [2923,2928]"/>
  <match src="==: == [44259,44261]" dest="==: == [44035,44037]"/>
  <match src="uint256: uint256 [8583,8590]" dest="uint256: uint256 [8550,8557]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [4201,4342]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [4168,4309]"/>
  <match src="call_argument [38245,38267]" dest="call_argument [38021,38043]"/>
  <match src="uint256: uint256 [44327,44334]" dest="uint256: uint256 [44103,44110]"/>
  <match src="(: ( [47517,47518]" dest="(: ( [47293,47294]"/>
  <match src="call_expression [29775,29794]" dest="call_expression [29619,29638]"/>
  <match src="(: ( [51187,51188]" dest="(: ( [50963,50964]"/>
  <match src="identifier: data [21459,21463]" dest="identifier: data [21336,21340]"/>
  <match src="identifier: memPtr [41994,42000]" dest="identifier: memPtr [41770,41776]"/>
  <match src="identifier: LIST_SHORT_START [47072,47088]" dest="identifier: LIST_SHORT_START [46848,46864]"/>
  <match src="identifier: src [49347,49350]" dest="identifier: src [49123,49126]"/>
  <match src="call_argument [14791,14795]" dest="call_argument [14725,14729]"/>
  <match src="function_definition [741,818]" dest="function_definition [741,818]"/>
  <match src="private: private [24563,24570]" dest="private: private [24407,24414]"/>
  <match src="identifier: account [37721,37728]" dest="identifier: account [37497,37504]"/>
  <match src="type_name [20418,20424]" dest="type_name [20295,20301]"/>
  <match src="parameter [53464,53471]" dest="parameter [53370,53377]"/>
  <match src="struct_expression [15531,15558]" dest="struct_expression [15465,15492]"/>
  <match src="bool: bool [29261,29265]" dest="bool: bool [29105,29109]"/>
  <match src="(: ( [5358,5359]" dest="(: ( [5325,5326]"/>
  <match src="}: } [31429,31430]" dest="}: } [31273,31274]"/>
  <match src="identifier: IERC20 [213,219]" dest="identifier: IERC20 [213,219]"/>
  <match src="return_statement [28097,28124]" dest="return_statement [27941,27968]"/>
  <match src="primitive_type [2795,2802]" dest="primitive_type [2795,2802]"/>
  <match src="primitive_type [40872,40879]" dest="primitive_type [40647,40654]"/>
  <match src="parameter [503,510]" dest="parameter [503,510]"/>
  <match src="returns: returns [15230,15237]" dest="returns: returns [15164,15171]"/>
  <match src=",: , [52788,52789]" dest=",: , [52694,52695]"/>
  <match src="}: } [22156,22157]" dest="}: } [22033,22034]"/>
  <match src="{: { [13746,13747]" dest="{: { [13680,13681]"/>
  <match src="call_argument [29582,29587]" dest="call_argument [29426,29431]"/>
  <match src="memory: memory [53707,53713]" dest="memory: memory [53613,53619]"/>
  <match src="return_type_definition [7916,7933]" dest="return_type_definition [7883,7900]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [28690,28854]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [28534,28698]"/>
  <match src="}: } [47923,47924]" dest="}: } [47699,47700]"/>
  <match src="state_mutability [32616,32620]" dest="state_mutability [32427,32431]"/>
  <match src="identifier: require [22060,22067]" dest="identifier: require [21937,21944]"/>
  <match src="bytes: bytes [13732,13737]" dest="bytes: bytes [13666,13671]"/>
  <match src="string [20203,20259]" dest="string [20080,20136]"/>
  <match src="identifier: a [3807,3808]" dest="identifier: a [3774,3775]"/>
  <match src="comment: // safeApprove should only be called when setting an initial allowance, [19844,19915]" dest="comment: // safeApprove should only be called when setting an initial allowance, [19721,19792]"/>
  <match src="expression_statement [24208,24249]" dest="expression_statement [24052,24093]"/>
  <match src="identifier: hasRole [40919,40926]" dest="identifier: hasRole [40694,40701]"/>
  <match src="type_name [17332,17337]" dest="type_name [17266,17271]"/>
  <match src="binary_expression [4660,4666]" dest="binary_expression [4627,4633]"/>
  <match src="identifier: _inner [29297,29303]" dest="identifier: _inner [29141,29147]"/>
  <match src="): ) [6197,6198]" dest="): ) [6164,6165]"/>
  <match src="parameter [9372,9398]" dest="parameter [9339,9365]"/>
  <match src="memory: memory [17338,17344]" dest="memory: memory [17272,17278]"/>
  <match src="identifier: depositor [51997,52006]" dest="identifier: depositor [51772,51781]"/>
  <match src="return_statement [24263,24275]" dest="return_statement [24107,24119]"/>
  <match src="address: address [20432,20439]" dest="address: address [20309,20316]"/>
  <match src="call_argument [44248,44270]" dest="call_argument [44024,44046]"/>
  <match src="): ) [30989,30990]" dest="): ) [30833,30834]"/>
  <match src="bytes32: bytes32 [27611,27618]" dest="bytes32: bytes32 [27455,27462]"/>
  <match src="type_name [28930,28934]" dest="type_name [28774,28778]"/>
  <match src="visibility [43692,43700]" dest="visibility [43468,43476]"/>
  <match src="type_alias [51477,51486]" dest="type_alias [51252,51261]"/>
  <match src="call_argument [15600,15607]" dest="call_argument [15534,15541]"/>
  <match src="uint256: uint256 [41572,41579]" dest="uint256: uint256 [41348,41355]"/>
  <match src=".: . [19236,19237]" dest=".: . [19113,19114]"/>
  <match src="&lt;:  &lt; [33058,33060]" dest="&lt;:  &lt; [18400,18402]"/>
  <match src="memory: memory [17699,17705]" dest="memory: memory [17633,17639]"/>
  <match src="bytes32: bytes32 [31207,31214]" dest="bytes32: bytes32 [31051,31058]"/>
  <match src="identifier: role [40031,40035]" dest="identifier: role [39807,39811]"/>
  <match src="yul_function_call [46864,46877]" dest="yul_function_call [46640,46653]"/>
  <match src="type_name [29748,29755]" dest="type_name [29592,29599]"/>
  <match src="visibility [7282,7290]" dest="visibility [7249,7257]"/>
  <match src="identifier: set [28506,28509]" dest="identifier: set [28350,28353]"/>
  <match src="bool: bool [36007,36011]" dest="bool: bool [35783,35787]"/>
  <match src="primitive_type [10200,10206]" dest="primitive_type [10167,10173]"/>
  <match src="identifier: set [23950,23953]" dest="identifier: set [23794,23797]"/>
  <match src="): ) [46877,46878]" dest="): ) [46653,46654]"/>
  <match src="(: ( [29545,29546]" dest="(: ( [29389,29390]"/>
  <match src="array_access [38245,38257]" dest="array_access [38021,38033]"/>
  <match src="function_body [28936,29012]" dest="function_body [28780,28856]"/>
  <match src=".: . [45471,45472]" dest=".: . [45247,45248]"/>
  <match src=",: , [21885,21886]" dest=",: , [21762,21763]"/>
  <match src="identifier: value [19154,19159]" dest="identifier: value [19031,19036]"/>
  <match src="primitive_type [6190,6197]" dest="primitive_type [6157,6164]"/>
  <match src="(: ( [26414,26415]" dest="(: ( [26258,26259]"/>
  <match src="emit: emit [40456,40460]" dest="emit: emit [40232,40236]"/>
  <match src="array_access [40082,40094]" dest="array_access [39858,39870]"/>
  <match src="parameter [39948,39960]" dest="parameter [39724,39736]"/>
  <match src="type_name [26415,26422]" dest="type_name [26259,26266]"/>
  <match src="identifier: a [4971,4972]" dest="identifier: a [4938,4939]"/>
  <match src="type_name [24580,24584]" dest="type_name [24424,24428]"/>
  <match src="&gt;=: &gt;= [15294,15296]" dest="&gt;=: &gt;= [15228,15230]"/>
  <match src="): ) [15219,15220]" dest="): ) [15153,15154]"/>
  <match src="for_statement [48952,49153]" dest="for_statement [48728,48929]"/>
  <match src="}: } [22166,22167]" dest="}: } [22043,22044]"/>
  <match src="expression_statement [6686,6743]" dest="expression_statement [6653,6710]"/>
  <match src="parameter [4963,4972]" dest="parameter [4930,4939]"/>
  <match src="identifier: balanceOf [453,462]" dest="identifier: balanceOf [453,462]"/>
  <match src="): ) [39050,39051]" dest="): ) [38826,38827]"/>
  <match src="(: ( [43402,43403]" dest="(: ( [43178,43179]"/>
  <match src="identifier: set [31802,31805]" dest="identifier: set [31646,31649]"/>
  <match src="type_name [4695,4702]" dest="type_name [4662,4669]"/>
  <match src="primitive_type [20159,20166]" dest="primitive_type [20036,20043]"/>
  <match src="(: ( [36060,36061]" dest="(: ( [35836,35837]"/>
  <match src="primitive_type [35775,35782]" dest="primitive_type [35551,35558]"/>
  <match src="variable_declaration [6658,6667]" dest="variable_declaration [6625,6634]"/>
  <match src="parenthesized_expression [48503,48526]" dest="parenthesized_expression [48279,48302]"/>
  <match src="[: [ [40088,40089]" dest="[: [ [39864,39865]"/>
  <match src="mload: mload [49341,49346]" dest="mload: mload [49117,49122]"/>
  <match src="if_statement [4723,4757]" dest="if_statement [4690,4724]"/>
  <match src="(: ( [28111,28112]" dest="(: ( [27955,27956]"/>
  <match src=",: , [4779,4780]" dest=",: , [4746,4747]"/>
  <match src="function_definition [45303,45867]" dest="function_definition [45079,45643]"/>
  <match src=".: . [24233,24234]" dest=".: . [24077,24078]"/>
  <match src="false: false [4747,4752]" dest="false: false [4714,4719]"/>
  <match src="return_statement [31396,31423]" dest="return_statement [31240,31267]"/>
  <match src="identifier: functionDelegateCall [16836,16856]" dest="identifier: functionDelegateCall [16770,16790]"/>
  <match src=",: , [7269,7270]" dest=",: , [7236,7237]"/>
  <match src="comment: // add `isList` check if `item` is expected to be passsed without a check from calling function [46063,46158]" dest="comment: // add `isList` check if `item` is expected to be passsed without a check from calling function [45839,45934]"/>
  <match src="primitive_type [24548,24555]" dest="primitive_type [24392,24399]"/>
  <match src="): ) [34658,34659]" dest="): ) [34434,34435]"/>
  <match src="comment: // bytes32 values. [23194,23212]" dest="comment: // bytes32 values. [23038,23056]"/>
  <match src="type_name [15490,15494]" dest="type_name [15424,15428]"/>
  <match src="=: = [44902,44903]" dest="=: = [44678,44679]"/>
  <match src="function_body [6616,6769]" dest="function_body [6583,6736]"/>
  <match src="(: ( [27282,27283]" dest="(: ( [27126,27127]"/>
  <match src="visibility [3746,3754]" dest="visibility [3713,3721]"/>
  <match src="virtual: virtual [39990,39997]" dest="virtual: virtual [39766,39773]"/>
  <match src="parameter [6607,6614]" dest="parameter [6574,6581]"/>
  <match src="): ) [17635,17636]" dest="): ) [17569,17570]"/>
  <match src="}: } [18386,18387]" dest="}: } [18320,18321]"/>
  <match src=",: , [20724,20725]" dest=",: , [20601,20602]"/>
  <match src="call_argument [16376,16382]" dest="call_argument [16310,16316]"/>
  <match src="address: address [50934,50941]" dest="address: address [50709,50716]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [5110,5262]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [5077,5229]"/>
  <match src="parameter [4066,4075]" dest="parameter [4033,4042]"/>
  <match src="identifier: len [43861,43864]" dest="identifier: len [43637,43640]"/>
  <match src="parameter [3775,3782]" dest="parameter [3742,3749]"/>
  <match src="primitive_type [2820,2827]" dest="primitive_type [2820,2827]"/>
  <match src="return_statement [6639,6648]" dest="return_statement [6606,6615]"/>
  <match src="(: ( [7924,7925]" dest="(: ( [7891,7892]"/>
  <match src="member_expression [20143,20158]" dest="member_expression [20020,20035]"/>
  <match src="(: ( [29312,29313]" dest="(: ( [29156,29157]"/>
  <match src=".: . [51532,51533]" dest=".: . [51307,51308]"/>
  <match src="expression_statement [42650,42680]" dest="expression_statement [42426,42456]"/>
  <match src="call_argument [29305,29337]" dest="call_argument [29149,29181]"/>
  <match src="primitive_type [22092,22096]" dest="primitive_type [21969,21973]"/>
  <match src=",: , [10187,10188]" dest=",: , [10154,10155]"/>
  <match src="identifier: set [26990,26993]" dest="identifier: set [26834,26837]"/>
  <match src="identifier: RLPItem [43332,43339]" dest="identifier: RLPItem [43108,43115]"/>
  <match src="identifier: dataLen [42763,42770]" dest="identifier: dataLen [42539,42546]"/>
  <match src="if: if [46960,46962]" dest="if: if [46736,46738]"/>
  <match src=".: . [42525,42526]" dest=".: . [42301,42302]"/>
  <match src="member_expression [19208,19230]" dest="member_expression [19085,19107]"/>
  <match src="call_argument [20825,20829]" dest="call_argument [20702,20706]"/>
  <match src="call_expression [37796,37808]" dest="call_expression [37572,37584]"/>
  <match src="parameter [40363,40378]" dest="parameter [40139,40154]"/>
  <match src="primitive_type [46043,46050]" dest="primitive_type [45819,45826]"/>
  <match src="identifier: set [27825,27828]" dest="identifier: set [27669,27672]"/>
  <match src="type_name [3795,3802]" dest="type_name [3762,3769]"/>
  <match src="function: function [13657,13665]" dest="function: function [13591,13599]"/>
  <match src="view: view [26865,26869]" dest="view: view [26709,26713]"/>
  <match src="address: address [35969,35976]" dest="address: address [35745,35752]"/>
  <match src="primitive_type [26879,26886]" dest="primitive_type [26723,26730]"/>
  <match src="identifier: WORD_SIZE [48984,48993]" dest="identifier: WORD_SIZE [48760,48769]"/>
  <match src="(: ( [30930,30931]" dest="(: ( [30774,30775]"/>
  <match src="function: function [14630,14638]" dest="function: function [14564,14572]"/>
  <match src="parameter [16262,16279]" dest="parameter [16196,16213]"/>
  <match src="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [10555,11136]" dest="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [10489,11070]"/>
  <match src="view: view [36300,36304]" dest="view: view [36076,36080]"/>
  <match src=".: . [25703,25704]" dest=".: . [25547,25548]"/>
  <match src="bytes32: bytes32 [37361,37368]" dest="bytes32: bytes32 [37137,37144]"/>
  <match src=",: , [19409,19410]" dest=",: , [19286,19287]"/>
  <match src="&lt;=: &lt;= [8613,8615]" dest="&lt;=: &lt;= [8580,8582]"/>
  <match src="assembly_statement [41894,41954]" dest="assembly_statement [41670,41730]"/>
  <match src="function_definition [39925,40124]" dest="function_definition [39701,39900]"/>
  <match src="variable_declaration [17514,17537]" dest="variable_declaration [17448,17471]"/>
  <match src="(: ( [28958,28959]" dest="(: ( [28802,28803]"/>
  <match src="bytes32: bytes32 [53799,53806]" dest="bytes32: bytes32 [53705,53712]"/>
  <match src="): ) [16423,16424]" dest="): ) [16357,16358]"/>
  <match src="return_statement [6270,6283]" dest="return_statement [6237,6250]"/>
  <match src="identifier: returndata [15609,15619]" dest="identifier: returndata [15543,15553]"/>
  <match src="type_name [16857,16864]" dest="type_name [16791,16798]"/>
  <match src="binary_expression [8650,8655]" dest="binary_expression [8617,8622]"/>
  <match src="variable_declaration_statement [41869,41884]" dest="variable_declaration_statement [41645,41660]"/>
  <match src="block_statement [47090,47508]" dest="block_statement [46866,47284]"/>
  <match src="identifier: _remove [30955,30962]" dest="identifier: _remove [30799,30806]"/>
  <match src="(: ( [49266,49267]" dest="(: ( [49042,49043]"/>
  <match src="): ) [20829,20830]" dest="): ) [20706,20707]"/>
  <match src="bytes32: bytes32 [39962,39969]" dest="bytes32: bytes32 [39738,39745]"/>
  <match src="type_name [30182,30189]" dest="type_name [30026,30033]"/>
  <match src="yul_hex_number: 0x20 [45759,45763]" dest="yul_hex_number: 0x20 [45535,45539]"/>
  <match src="): ) [26886,26887]" dest="): ) [26730,26731]"/>
  <match src="call_expression [40897,40982]" dest="call_expression [40672,40757]"/>
  <match src="parameter [28930,28934]" dest="parameter [28774,28778]"/>
  <match src="returns: returns [24571,24578]" dest="returns: returns [24415,24422]"/>
  <match src="return: return [24263,24269]" dest="return: return [24107,24113]"/>
  <match src="call_argument [5784,5790]" dest="call_argument [5751,5757]"/>
  <match src="identifier: data [14791,14795]" dest="identifier: data [14725,14729]"/>
  <match src="exp: exp [47364,47367]" dest="exp: exp [47140,47143]"/>
  <match src="[: [ [36037,36038]" dest="[: [ [35813,35814]"/>
  <match src="primitive_type [812,816]" dest="primitive_type [812,816]"/>
  <match src="call_expression [45795,45835]" dest="call_expression [45571,45611]"/>
  <match src="(: ( [48324,48325]" dest="(: ( [48100,48101]"/>
  <match src="): ) [17425,17426]" dest="): ) [17359,17360]"/>
  <match src=",: , [12825,12826]" dest=",: , [12759,12760]"/>
  <match src="inheritance_specifier [40638,40651]" dest="inheritance_specifier [40413,40426]"/>
  <match src="returns: returns [31367,31374]" dest="returns: returns [31211,31218]"/>
  <match src="type_name [8510,8517]" dest="type_name [8477,8484]"/>
  <match src="pragma: pragma [10426,10432]" dest="pragma: pragma [10360,10366]"/>
  <match src="): ) [6165,6166]" dest="): ) [6132,6133]"/>
  <match src="(: ( [50299,50300]" dest="(: ( [50074,50075]"/>
  <match src="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [4575,4646]" dest="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [4542,4613]"/>
  <match src="primitive_type [27644,27648]" dest="primitive_type [27488,27492]"/>
  <match src="uint256: uint256 [29748,29755]" dest="uint256: uint256 [29592,29599]"/>
  <match src="identifier: a [9489,9490]" dest="identifier: a [9456,9457]"/>
  <match src="): ) [41942,41943]" dest="): ) [41718,41719]"/>
  <match src="comment: /**      * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`      *      * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite      * {RoleAdminChanged} not being emitted signaling this.      *      * _Available since v3.1._      */ [34741,35040]" dest="comment: /**      * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`      *      * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite      * {RoleAdminChanged} not being emitted signaling this.      *      * _Available since v3.1._      */ [34517,34816]"/>
  <match src="parenthesized_expression [48324,48378]" dest="parenthesized_expression [48100,48154]"/>
  <match src="modifier_invocation [52201,52212]" dest="modifier_invocation [52107,52118]"/>
  <match src="identifier: this [12597,12601]" dest="identifier: this [12531,12535]"/>
  <match src="address: address [38925,38932]" dest="address: address [38701,38708]"/>
  <match src="uint256: uint256 [42263,42270]" dest="uint256: uint256 [42039,42046]"/>
  <match src="type_name [19337,19344]" dest="type_name [19214,19221]"/>
  <match src="yul_path [18204,18214]" dest="yul_path [18138,18148]"/>
  <match src="indexed: indexed [35446,35453]" dest="indexed: indexed [35222,35229]"/>
  <match src="): ) [20370,20371]" dest="): ) [20247,20248]"/>
  <match src="parenthesized_expression [48561,48582]" dest="parenthesized_expression [48337,48358]"/>
  <match src="identifier: depositReceiver [50346,50361]" dest="identifier: depositReceiver [50121,50136]"/>
  <match src="return: return [4767,4773]" dest="return: return [4734,4740]"/>
  <match src="yul_function_call [49341,49351]" dest="yul_function_call [49117,49127]"/>
  <match src="type_name [45161,45168]" dest="type_name [44937,44944]"/>
  <match src="+: + [48583,48584]" dest="+: + [48359,48360]"/>
  <match src="function_definition [19283,19488]" dest="function_definition [19160,19365]"/>
  <match src="comment: /*      * @param item RLP encoded list in bytes      */ [42017,42074]" dest="comment: /*      * @param item RLP encoded list in bytes      */ [41793,41850]"/>
  <match src="return_type_definition [10242,10259]" dest="return_type_definition [10209,10226]"/>
  <match src="expression_statement [32775,32780]" dest="expression_statement [32586,32591]"/>
  <match src="call_argument [21887,21921]" dest="call_argument [21764,21798]"/>
  <match src="number_literal: 2 [54300,54301]" dest="number_literal: 2 [54153,54154]"/>
  <match src="{: { [28558,28559]" dest="{: { [28402,28403]"/>
  <match src="function: function [38152,38160]" dest="function: function [37928,37936]"/>
  <match src="type_name [778,785]" dest="type_name [778,785]"/>
  <match src="call_argument [53895,53930]" dest="call_argument [53801,53836]"/>
  <match src="type_name [43459,43464]" dest="type_name [43235,43240]"/>
  <match src="return_type_definition [6598,6615]" dest="return_type_definition [6565,6582]"/>
  <match src="function: function [32699,32707]" dest="function: function [32510,32518]"/>
  <match src="primitive_type [43021,43028]" dest="primitive_type [42797,42804]"/>
  <match src="call_expression [45410,45434]" dest="call_expression [45186,45210]"/>
  <match src="return: return [4165,4171]" dest="return: return [4132,4138]"/>
  <match src="): ) [48238,48239]" dest="): ) [48014,48015]"/>
  <match src="}: } [40512,40513]" dest="}: } [40288,40289]"/>
  <match src="identifier: AccessControl [40638,40651]" dest="identifier: AccessControl [40413,40426]"/>
  <match src="): ) [28556,28557]" dest="): ) [28400,28401]"/>
  <match src="number_literal: 0 [46254,46255]" dest="number_literal: 0 [46030,46031]"/>
  <match src="{: { [27874,27875]" dest="{: { [27718,27719]"/>
  <match src="identifier: rootToken [50967,50976]" dest="identifier: rootToken [50742,50751]"/>
  <match src="parameter [43671,43690]" dest="parameter [43447,43466]"/>
  <match src="parameter [41767,41781]" dest="parameter [41543,41557]"/>
  <match src="mload: mload [47769,47774]" dest="mload: mload [47545,47550]"/>
  <match src="): ) [29589,29590]" dest="): ) [29433,29434]"/>
  <match src="identifier: set [27606,27609]" dest="identifier: set [27450,27453]"/>
  <match src="primitive_type [54112,54119]" dest="primitive_type [54018,54025]"/>
  <match src="identifier: _owner [52300,52306]" dest="identifier: _owner [52206,52212]"/>
  <match src="identifier: returndata [22079,22089]" dest="identifier: returndata [21956,21966]"/>
  <match src="address: address [30247,30254]" dest="address: address [30091,30098]"/>
  <match src="call_expression [37874,37899]" dest="call_expression [37650,37675]"/>
  <match src="address: address [14082,14089]" dest="address: address [14016,14023]"/>
  <match src="primitive_type [38925,38932]" dest="primitive_type [38701,38708]"/>
  <match src="primitive_type [38911,38918]" dest="primitive_type [38687,38694]"/>
  <match src="identifier: recipient [767,776]" dest="identifier: recipient [767,776]"/>
  <match src="function: function [8497,8505]" dest="function: function [8464,8472]"/>
  <match src=",: , [40361,40362]" dest=",: , [40137,40138]"/>
  <match src="pragma_directive [18498,18529]" dest="pragma_directive [22110,22141]"/>
  <match src="assignment_expression [42745,42770]" dest="assignment_expression [42521,42546]"/>
  <match src="internal: internal [15221,15229]" dest="internal: internal [15155,15163]"/>
  <match src="yul_function_call [45755,45772]" dest="yul_function_call [45531,45548]"/>
  <match src="div: div [44663,44666]" dest="div: div [44439,44442]"/>
  <match src="call_expression [46446,46466]" dest="call_expression [46222,46242]"/>
  <match src="identifier: delegatecall [17548,17560]" dest="identifier: delegatecall [17482,17494]"/>
  <match src="identifier: b [10321,10322]" dest="identifier: b [10288,10289]"/>
  <match src="function: function [26359,26367]" dest="function: function [26203,26211]"/>
  <match src="comment: // AddressSet [28614,28627]" dest="comment: // AddressSet [28458,28471]"/>
  <match src="identifier: hasRole [37764,37771]" dest="identifier: hasRole [37540,37547]"/>
  <match src="returns: returns [29252,29259]" dest="returns: returns [29096,29103]"/>
  <match src="(: ( [37100,37101]" dest="(: ( [36876,36877]"/>
  <match src="uint256: uint256 [52983,52990]" dest="uint256: uint256 [52889,52896]"/>
  <match src="identifier: inited [51210,51216]" dest="identifier: inited [50986,50992]"/>
  <match src="binary_expression [48282,48307]" dest="binary_expression [48058,48083]"/>
  <match src="}: } [27015,27016]" dest="}: } [26859,26860]"/>
  <match src="): ) [53532,53533]" dest="): ) [53438,53439]"/>
  <match src="identifier: currPtr [46426,46433]" dest="identifier: currPtr [46202,46209]"/>
  <match src="visibility [40380,40387]" dest="visibility [40156,40163]"/>
  <match src="primitive_type [52983,52990]" dest="primitive_type [52889,52896]"/>
  <match src="internal: internal [32607,32615]" dest="internal: internal [32418,32426]"/>
  <match src="function: function [741,749]" dest="function: function [741,749]"/>
  <match src="uint256: uint256 [19349,19356]" dest="uint256: uint256 [19226,19233]"/>
  <match src="call_argument [29313,29336]" dest="call_argument [29157,29180]"/>
  <match src="function_definition [29432,29599]" dest="function_definition [29276,29443]"/>
  <match src="): ) [47388,47389]" dest="): ) [47164,47165]"/>
  <match src="uint256: uint256 [15178,15185]" dest="uint256: uint256 [15112,15119]"/>
  <match src="(: ( [38279,38280]" dest="(: ( [38055,38056]"/>
  <match src="identifier: success [12751,12758]" dest="identifier: success [12685,12692]"/>
  <match src="uint256: uint256 [29566,29573]" dest="uint256: uint256 [29410,29417]"/>
  <match src="type_name [26842,26849]" dest="type_name [26686,26693]"/>
  <match src="return_statement [27661,27695]" dest="return_statement [27505,27539]"/>
  <match src="using: using [51547,51552]" dest="using: using [51322,51327]"/>
  <match src="expression_statement [52269,52308]" dest="expression_statement [52175,52214]"/>
  <match src="uint256: uint256 [7260,7267]" dest="uint256: uint256 [7227,7234]"/>
  <match src="call_argument [38360,38364]" dest="call_argument [38136,38140]"/>
  <match src="view: view [35993,35997]" dest="view: view [35769,35773]"/>
  <match src="yul_identifier [47355,47361]" dest="yul_identifier [47131,47137]"/>
  <match src="call_expression [53652,53667]" dest="call_expression [53558,53573]"/>
  <match src="call_expression [30271,30293]" dest="call_expression [30115,30137]"/>
  <match src="call_argument [52241,52257]" dest="call_argument [52147,52163]"/>
  <match src="memory: memory [14683,14689]" dest="memory: memory [14617,14623]"/>
  <match src="identifier: dataLen [47754,47761]" dest="identifier: dataLen [47530,47537]"/>
  <match src="identifier: token [20507,20512]" dest="identifier: token [20384,20389]"/>
  <match src="mapping: mapping [34630,34637]" dest="mapping: mapping [34406,34413]"/>
  <match src="parameter [20743,20756]" dest="parameter [20620,20633]"/>
  <match src="state_mutability [1162,1166]" dest="state_mutability [1162,1166]"/>
  <match src="call_argument [43872,43907]" dest="call_argument [43648,43683]"/>
  <match src="identifier: Approval [2763,2771]" dest="identifier: Approval [2763,2771]"/>
  <match src="memory: memory [17520,17526]" dest="memory: memory [17454,17460]"/>
  <match src="): ) [9398,9399]" dest="): ) [9365,9366]"/>
  <match src="primitive_type [31376,31383]" dest="primitive_type [31220,31227]"/>
  <match src="identifier: _roles [37772,37778]" dest="identifier: _roles [37548,37554]"/>
  <match src="primitive_type [17718,17724]" dest="primitive_type [17652,17658]"/>
  <match src="uint256: uint256 [45161,45168]" dest="uint256: uint256 [44937,44944]"/>
  <match src="returns: returns [41758,41765]" dest="returns: returns [41534,41541]"/>
  <match src="bytes32: bytes32 [23710,23717]" dest="bytes32: bytes32 [23554,23561]"/>
  <match src="yul_path [47775,47781]" dest="yul_path [47551,47557]"/>
  <match src="binary_expression [38976,38999]" dest="binary_expression [38752,38775]"/>
  <match src="identifier: src [48791,48794]" dest="identifier: src [48567,48570]"/>
  <match src="function_body [32764,32932]" dest="function_body [32575,32743]"/>
  <match src="assembly: assembly [45720,45728]" dest="assembly: assembly [45496,45504]"/>
  <match src=",: , [21444,21445]" dest=",: , [21321,21322]"/>
  <match src="call_argument [51700,51707]" dest="call_argument [51475,51482]"/>
  <match src="primitive_type [7271,7278]" dest="primitive_type [7238,7245]"/>
  <match src="parameter [28873,28895]" dest="parameter [28717,28739]"/>
  <match src="identifier: _itemLength [46703,46714]" dest="identifier: _itemLength [46479,46490]"/>
  <match src="primitive_type [37361,37368]" dest="primitive_type [37137,37144]"/>
  <match src="call_argument [10279,10284]" dest="call_argument [10246,10251]"/>
  <match src="memory: memory [17725,17731]" dest="memory: memory [17659,17665]"/>
  <match src="return: return [32909,32915]" dest="return: return [32720,32726]"/>
  <match src="number_literal: 0xb8 [41408,41412]" dest="number_literal: 0xb8 [41184,41188]"/>
  <match src="visibility [480,488]" dest="visibility [480,488]"/>
  <match src="primitive_type [12746,12750]" dest="primitive_type [12680,12684]"/>
  <match src="identifier: RoleRevoked [40461,40472]" dest="identifier: RoleRevoked [40237,40248]"/>
  <match src="string_literal [51631,51645]" dest="string_literal [51406,51420]"/>
  <match src="%: % [5411,5412]" dest="%: % [5378,5379]"/>
  <match src="identifier: account [35429,35436]" dest="identifier: account [35205,35212]"/>
  <match src="identifier: len [48959,48962]" dest="identifier: len [48735,48738]"/>
  <match src="&gt;=:  &gt;= [33050,33053]" dest="&gt;=:  &gt;= [18392,18395]"/>
  <match src="update_expression [42630,42633]" dest="update_expression [42406,42409]"/>
  <match src="{: { [51190,51191]" dest="{: { [50966,50967]"/>
  <match src="identifier: functionStaticCall [15945,15963]" dest="identifier: functionStaticCall [15879,15897]"/>
  <match src="solidity_pragma_token [101,124]" dest="solidity_pragma_token [101,124]"/>
  <match src="yul_evm_builtin [49467,49473]" dest="yul_evm_builtin [49243,49249]"/>
  <match src="yul_function_call [47466,47481]" dest="yul_function_call [47242,47257]"/>
  <match src="(: ( [27643,27644]" dest="(: ( [27487,27488]"/>
  <match src="): ) [12653,12654]" dest="): ) [12587,12588]"/>
  <match src=":=: := [18195,18197]" dest=":=: := [18129,18131]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [0,55]" dest="comment: // File: @openzeppelin/contracts/token/ERC20/IERC20.sol [0,55]"/>
  <match src="=: = [5758,5759]" dest="=: = [5725,5726]"/>
  <match src="string_literal [44272,44313]" dest="string_literal [44048,44089]"/>
  <match src="parameter [31161,31165]" dest="parameter [31005,31009]"/>
  <match src="function_definition [10165,10330]" dest="function_definition [10132,10297]"/>
  <match src="): ) [43114,43115]" dest="): ) [42890,42891]"/>
  <match src="visibility [42959,42967]" dest="visibility [42735,42743]"/>
  <match src="yul_path [44667,44673]" dest="yul_path [44443,44449]"/>
  <match src="primitive_type [2577,2584]" dest="primitive_type [2577,2584]"/>
  <match src="): ) [48093,48094]" dest="): ) [47869,47870]"/>
  <match src="member_expression [53807,53832]" dest="member_expression [53713,53738]"/>
  <match src="emit_statement [40456,40502]" dest="emit_statement [40232,40278]"/>
  <match src="call_argument [42723,42729]" dest="call_argument [42499,42505]"/>
  <match src="primitive_type [48805,48812]" dest="primitive_type [48581,48588]"/>
  <match src="type_name [9372,9378]" dest="type_name [9339,9345]"/>
  <match src="primitive_type [41326,41331]" dest="primitive_type [41102,41107]"/>
  <match src="pure: pure [44849,44853]" dest="pure: pure [44625,44629]"/>
  <match src="): ) [29487,29488]" dest="): ) [29331,29332]"/>
  <match src="primitive_type [46773,46780]" dest="primitive_type [46549,46556]"/>
  <match src="function_definition [14060,14255]" dest="function_definition [13994,14189]"/>
  <match src="&quot;: &quot; [42248,42249]" dest="&quot;: &quot; [42024,42025]"/>
  <match src=".: . [53621,53622]" dest=".: . [53527,53528]"/>
  <match src="identifier: item [44396,44400]" dest="identifier: item [44172,44176]"/>
  <match src="type_name [39948,39955]" dest="type_name [39724,39731]"/>
  <match src="string_literal [26935,26971]" dest="string_literal [26779,26815]"/>
  <match src="array_access [42694,42703]" dest="array_access [42470,42479]"/>
  <match src="identifier: b [5303,5304]" dest="identifier: b [5270,5271]"/>
  <match src=",: , [30180,30181]" dest=",: , [30024,30025]"/>
  <match src=".: . [45567,45568]" dest=".: . [45343,45344]"/>
  <match src="type_name [19792,19799]" dest="type_name [19669,19676]"/>
  <match src="identifier: byte0 [46905,46910]" dest="identifier: byte0 [46681,46686]"/>
  <match src="identifier: c [6666,6667]" dest="identifier: c [6633,6634]"/>
  <match src="primitive_type [778,785]" dest="primitive_type [778,785]"/>
  <match src="primitive_type [42504,42511]" dest="primitive_type [42280,42287]"/>
  <match src="uint8: uint8 [42999,43004]" dest="uint8: uint8 [42775,42780]"/>
  <match src="call_argument [16963,16969]" dest="call_argument [16897,16903]"/>
  <match src="function: function [5670,5678]" dest="function: function [5637,5645]"/>
  <match src="call_argument [6694,6704]" dest="call_argument [6661,6671]"/>
  <match src="yul_function_call [43101,43114]" dest="yul_function_call [42877,42890]"/>
  <match src="member_expression [31195,31205]" dest="member_expression [31039,31049]"/>
  <match src="comment: // File: contracts/lib/RLPReader.sol [41009,41045]" dest="comment: // File: contracts/lib/RLPReader.sol [40784,40820]"/>
  <match src="identifier: errorMessage [8546,8558]" dest="identifier: errorMessage [8513,8525]"/>
  <match src="identifier: b [8009,8010]" dest="identifier: b [7976,7977]"/>
  <match src="): ) [48184,48185]" dest="): ) [47960,47961]"/>
  <match src="type_name [19778,19784]" dest="type_name [19655,19661]"/>
  <match src="primitive_type [36279,36286]" dest="primitive_type [36055,36062]"/>
  <match src="primitive_type [6562,6569]" dest="primitive_type [6529,6536]"/>
  <match src="library: library [41301,41308]" dest="library: library [41077,41084]"/>
  <match src="identifier: dest [49419,49423]" dest="identifier: dest [49195,49199]"/>
  <match src="member_expression [19434,19461]" dest="member_expression [19311,19338]"/>
  <match src="call_argument [27369,27379]" dest="call_argument [27213,27223]"/>
  <match src="call_expression [27364,27387]" dest="call_expression [27208,27231]"/>
  <match src="identifier: _inner [28963,28969]" dest="identifier: _inner [28807,28813]"/>
  <match src="): ) [29590,29591]" dest="): ) [29434,29435]"/>
  <match src="{: { [36323,36324]" dest="{: { [36099,36100]"/>
  <match src="return: return [16573,16579]" dest="return: return [16507,16513]"/>
  <match src="identifier: from [19463,19467]" dest="identifier: from [19340,19344]"/>
  <match src="returns: returns [26406,26413]" dest="returns: returns [26250,26257]"/>
  <match src="function_definition [6549,6769]" dest="function_definition [6516,6736]"/>
  <match src="identifier: valueIndex [24755,24765]" dest="identifier: valueIndex [24599,24609]"/>
  <match src="call_argument [40479,40486]" dest="call_argument [40255,40262]"/>
  <match src="bytes32: bytes32 [28549,28556]" dest="bytes32: bytes32 [28393,28400]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [29354,29426]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [29198,29270]"/>
  <match src="type_cast_expression [28987,29001]" dest="type_cast_expression [28831,28845]"/>
  <match src="type_name [2795,2802]" dest="type_name [2795,2802]"/>
  <match src="(: ( [49346,49347]" dest="(: ( [49122,49123]"/>
  <match src="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [31238,31310]" dest="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [31082,31154]"/>
  <match src="function_body [51190,51279]" dest="function_body [50966,51055]"/>
  <match src="string_literal [5792,5821]" dest="string_literal [5759,5788]"/>
  <match src="function_definition [11142,11564]" dest="function_definition [11076,11498]"/>
  <match src="expression_statement [12581,12655]" dest="expression_statement [12515,12589]"/>
  <match src="type_name [17500,17504]" dest="type_name [17434,17438]"/>
  <match src="bytes32: bytes32 [23955,23962]" dest="bytes32: bytes32 [23799,23806]"/>
  <match src="call_argument [42550,42561]" dest="call_argument [42326,42337]"/>
  <match src="call_expression [36341,36370]" dest="call_expression [36117,36146]"/>
  <match src="binary_expression [6694,6704]" dest="binary_expression [6661,6671]"/>
  <match src="primitive_type [27611,27618]" dest="primitive_type [27455,27462]"/>
  <match src="expression_statement [49124,49142]" dest="expression_statement [48900,48918]"/>
  <match src="primitive_type [5014,5021]" dest="primitive_type [4981,4988]"/>
  <match src="]: ] [37783,37784]" dest="]: ] [37559,37560]"/>
  <match src="struct: struct [30332,30338]" dest="struct: struct [30176,30182]"/>
  <match src="expression_statement [25594,25633]" dest="expression_statement [25438,25477]"/>
  <match src="bytes32: bytes32 [28971,28978]" dest="bytes32: bytes32 [28815,28822]"/>
  <match src="override: override [53559,53567]" dest="override: override [53465,53473]"/>
  <match src="revert: revert [18340,18346]" dest="revert: revert [18274,18280]"/>
  <match src="primitive_type [52059,52066]" dest="primitive_type [51834,51841]"/>
  <match src="(: ( [41806,41807]" dest="(: ( [41582,41583]"/>
  <match src="identifier: contains [29441,29449]" dest="identifier: contains [29285,29293]"/>
  <match src="call_argument [39001,39050]" dest="call_argument [38777,38826]"/>
  <match src="return: return [30638,30644]" dest="return: return [30482,30488]"/>
  <match src="parameter [14163,14175]" dest="parameter [14097,14109]"/>
  <match src="type_name [7260,7267]" dest="type_name [7227,7234]"/>
  <match src="call_argument [9458,9470]" dest="call_argument [9425,9437]"/>
  <match src="yul_identifier [47775,47781]" dest="yul_identifier [47551,47557]"/>
  <match src="identifier: item [45067,45071]" dest="identifier: item [44843,44847]"/>
  <match src="identifier: _contains [24009,24018]" dest="identifier: _contains [23853,23862]"/>
  <match src=",: , [37889,37890]" dest=",: , [37665,37666]"/>
  <match src="library: library [23012,23019]" dest="library: library [22856,22863]"/>
  <match src="primitive_type [23721,23728]" dest="primitive_type [23565,23572]"/>
  <match src="identifier: require [16357,16364]" dest="identifier: require [16291,16298]"/>
  <match src="emit_statement [40256,40302]" dest="emit_statement [40032,40078]"/>
  <match src="external: external [50434,50442]" dest="external: external [50209,50217]"/>
  <match src="): ) [24069,24070]" dest="): ) [23913,23914]"/>
  <match src="type_name [15159,15164]" dest="type_name [15093,15098]"/>
  <match src="call_argument [10286,10298]" dest="call_argument [10253,10265]"/>
  <match src="return_statement [37381,37411]" dest="return_statement [37157,37187]"/>
  <match src="and: and [49409,49412]" dest="and: and [49185,49188]"/>
  <match src="identifier: encodeWithSelector [20938,20956]" dest="identifier: encodeWithSelector [20815,20833]"/>
  <match src="identifier: mod [7876,7879]" dest="identifier: mod [7843,7846]"/>
  <match src="identifier: srcpart [49326,49333]" dest="identifier: srcpart [49102,49109]"/>
  <match src="function_definition [4039,4193]" dest="function_definition [4006,4160]"/>
  <match src="&gt;: &gt; [9453,9454]" dest="&gt;: &gt; [9420,9421]"/>
  <match src=".: . [20623,20624]" dest=".: . [20500,20501]"/>
  <match src=",: , [1886,1887]" dest=",: , [1886,1887]"/>
  <match src="expression_statement [20281,20372]" dest="expression_statement [20158,20249]"/>
  <match src="call_expression [13762,13822]" dest="call_expression [13696,13756]"/>
  <match src="(: ( [16962,16963]" dest="(: ( [16896,16897]"/>
  <match src="true: true [4775,4779]" dest="true: true [4742,4746]"/>
  <match src="user_defined_type [27074,27077]" dest="user_defined_type [26918,26921]"/>
  <match src=",: , [29226,29227]" dest=",: , [29070,29071]"/>
  <match src="(: ( [45676,45677]" dest="(: ( [45452,45453]"/>
  <match src="string: string [14117,14123]" dest="string: string [14051,14057]"/>
  <match src="indexed: indexed [2543,2550]" dest="indexed: indexed [2543,2550]"/>
  <match src="&lt;:  &lt; [32030,32032]" dest="&lt;:  &lt; [32836,32838]"/>
  <match src="): ) [43722,43723]" dest="): ) [43498,43499]"/>
  <match src="primitive_type [20726,20733]" dest="primitive_type [20603,20610]"/>
  <match src="identifier: remove [30870,30876]" dest="identifier: remove [30714,30720]"/>
  <match src="type_name [37699,37706]" dest="type_name [37475,37482]"/>
  <match src="string [7340,7368]" dest="string [7307,7335]"/>
  <match src="primitive_type [52737,52744]" dest="primitive_type [52643,52650]"/>
  <match src="identifier: set [28049,28052]" dest="identifier: set [27893,27896]"/>
  <match src="type_name [37361,37368]" dest="type_name [37137,37144]"/>
  <match src="event_paramater [2772,2793]" dest="event_paramater [2772,2793]"/>
  <match src="(: ( [40904,40905]" dest="(: ( [40679,40680]"/>
  <match src="identifier: result [42694,42700]" dest="identifier: result [42470,42476]"/>
  <match src="visibility [51020,51028]" dest="visibility [50795,50803]"/>
  <match src="assembly_statement [49298,49513]" dest="assembly_statement [49074,49289]"/>
  <match src="primitive_type [16873,16878]" dest="primitive_type [16807,16812]"/>
  <match src="parameter [46753,46760]" dest="parameter [46529,46536]"/>
  <match src=",: , [4104,4105]" dest=",: , [4071,4072]"/>
  <match src="identifier: len [46372,46375]" dest="identifier: len [46148,46151]"/>
  <match src="(: ( [47230,47231]" dest="(: ( [47006,47007]"/>
  <match src="parameter [6190,6197]" dest="parameter [6157,6164]"/>
  <match src="return_type_definition [14154,14176]" dest="return_type_definition [14088,14110]"/>
  <match src="binary_expression [5038,5044]" dest="binary_expression [5005,5011]"/>
  <match src="tuple_expression [4675,4684]" dest="tuple_expression [4642,4651]"/>
  <match src="identifier: c [4703,4704]" dest="identifier: c [4670,4671]"/>
  <match src="identifier: listLength [45453,45463]" dest="identifier: listLength [45229,45239]"/>
  <match src="yul_path [47470,47477]" dest="yul_path [47246,47253]"/>
  <match src="): ) [40070,40071]" dest="): ) [39846,39847]"/>
  <match src="call_argument [43943,43947]" dest="call_argument [43719,43723]"/>
  <match src="uint256: uint256 [10251,10258]" dest="uint256: uint256 [10218,10225]"/>
  <match src="identifier: memPtr [43029,43035]" dest="identifier: memPtr [42805,42811]"/>
  <match src="type_name [7880,7887]" dest="type_name [7847,7854]"/>
  <match src=",: , [44628,44629]" dest=",: , [44404,44405]"/>
  <match src="}: } [29345,29346]" dest="}: } [29189,29190]"/>
  <match src="identifier: memPtr [47706,47712]" dest="identifier: memPtr [47482,47488]"/>
  <match src="solidity_version: 0.6.2 [10444,10449]" dest="solidity_version: 0.6.2 [10378,10383]"/>
  <match src="primitive_type [50987,50992]" dest="primitive_type [50762,50767]"/>
  <match src="visibility [2319,2327]" dest="visibility [2319,2327]"/>
  <match src="internal: internal [42126,42134]" dest="internal: internal [41902,41910]"/>
  <match src="binary_expression [42754,42770]" dest="binary_expression [42530,42546]"/>
  <match src="call_argument [44138,44170]" dest="call_argument [43914,43946]"/>
  <match src="variable_declaration [46773,46788]" dest="variable_declaration [46549,46564]"/>
  <match src="string_literal [45477,45519]" dest="string_literal [45253,45295]"/>
  <match src="internal: internal [4386,4394]" dest="internal: internal [4353,4361]"/>
  <match src="-: - [45611,45612]" dest="-: - [45387,45388]"/>
  <match src="state_mutability [17754,17758]" dest="state_mutability [17688,17692]"/>
  <match src="number_literal: 1 [46943,46944]" dest="number_literal: 1 [46719,46720]"/>
  <match src="primitive_type [42999,43004]" dest="primitive_type [42775,42780]"/>
  <match src="return: return [3862,3868]" dest="return: return [3829,3835]"/>
  <match src="identifier: account [11170,11177]" dest="identifier: account [11104,11111]"/>
  <match src="variable_declaration [24698,24716]" dest="variable_declaration [24542,24560]"/>
  <match src="(: ( [24530,24531]" dest="(: ( [24374,24375]"/>
  <match src="primitive_type [12589,12596]" dest="primitive_type [12523,12530]"/>
  <match src="yul_function_call [47364,47390]" dest="yul_function_call [47140,47166]"/>
  <match src="if: if [4723,4725]" dest="if: if [4690,4692]"/>
  <match src="return: return [29278,29284]" dest="return: return [29122,29128]"/>
  <match src="primitive_type [51715,51722]" dest="primitive_type [51490,51497]"/>
  <match src="(: ( [43141,43142]" dest="(: ( [42917,42918]"/>
  <match src="{: { [48860,48861]" dest="{: { [48636,48637]"/>
  <match src="call_argument [43743,43756]" dest="call_argument [43519,43532]"/>
  <match src="event_definition [2520,2592]" dest="event_definition [2520,2592]"/>
  <match src="): ) [36011,36012]" dest="): ) [35787,35788]"/>
  <match src="=: = [51151,51152]" dest="=: = [50927,50928]"/>
  <match src="if: if [24751,24753]" dest="if: if [24595,24597]"/>
  <match src="{: { [26223,26224]" dest="{: { [26067,26068]"/>
  <match src="identifier: _inner [30654,30660]" dest="identifier: _inner [30498,30504]"/>
  <match src="(: ( [14660,14661]" dest="(: ( [14594,14595]"/>
  <match src="tuple_expression [4774,4783]" dest="tuple_expression [4741,4750]"/>
  <match src="identifier: b [4711,4712]" dest="identifier: b [4678,4679]"/>
  <match src="identifier: safeApprove [19766,19777]" dest="identifier: safeApprove [19643,19654]"/>
  <match src="yul_identifier [47381,47388]" dest="yul_identifier [47157,47164]"/>
  <match src="call_argument [54120,54121]" dest="call_argument [54026,54027]"/>
  <match src="primitive_type [1121,1128]" dest="primitive_type [1121,1128]"/>
  <match src="number_literal: 0 [11555,11556]" dest="number_literal: 0 [11489,11490]"/>
  <match src="): ) [12559,12560]" dest="): ) [12493,12494]"/>
  <match src="identifier: token [20425,20430]" dest="identifier: token [20302,20307]"/>
  <match src="primitive_type [17251,17258]" dest="primitive_type [17185,17192]"/>
  <match src="uint256: uint256 [4415,4422]" dest="uint256: uint256 [4382,4389]"/>
  <match src="/: / [7389,7390]" dest="/: / [7356,7357]"/>
  <match src="%: % [8007,8008]" dest="%: % [7974,7975]"/>
  <match src="parameter [4415,4422]" dest="parameter [4382,4389]"/>
  <match src="yul_evm_builtin [49038,49044]" dest="yul_evm_builtin [48814,48820]"/>
  <match src="function_body [12570,12896]" dest="function_body [12504,12830]"/>
  <match src=",: , [20306,20307]" dest=",: , [20183,20184]"/>
  <match src="): ) [47361,47362]" dest="): ) [47137,47138]"/>
  <match src="identifier: token [20801,20806]" dest="identifier: token [20678,20683]"/>
  <match src=".: . [30278,30279]" dest=".: . [30122,30123]"/>
  <match src="function_body [38957,39098]" dest="function_body [38733,38874]"/>
  <match src="): ) [50432,50433]" dest="): ) [50207,50208]"/>
  <match src="primitive_type [41698,41703]" dest="primitive_type [41474,41479]"/>
  <match src="variable_declaration [46266,46281]" dest="variable_declaration [46042,46057]"/>
  <match src="type_cast_expression [20159,20172]" dest="type_cast_expression [20036,20049]"/>
  <match src="uint256: uint256 [44863,44870]" dest="uint256: uint256 [44639,44646]"/>
  <match src="struct: struct [34527,34533]" dest="struct: struct [34303,34309]"/>
  <match src="&quot;: &quot; [44101,44102]" dest="&quot;: &quot; [43877,43878]"/>
  <match src="identifier: RoleGranted [35379,35390]" dest="identifier: RoleGranted [35155,35166]"/>
  <match src="type_name [20712,20718]" dest="type_name [20589,20595]"/>
  <match src="return: return [43191,43197]" dest="return: return [42967,42973]"/>
  <match src=".: . [20806,20807]" dest=".: . [20683,20684]"/>
  <match src="return_type_definition [26406,26423]" dest="return_type_definition [26250,26267]"/>
  <match src="view: view [32728,32732]" dest="view: view [32539,32543]"/>
  <match src="pure: pure [6593,6597]" dest="pure: pure [6560,6564]"/>
  <match src="return_type_definition [43394,43416]" dest="return_type_definition [43170,43192]"/>
  <match src="identifier: rootToken [53048,53057]" dest="identifier: rootToken [52954,52963]"/>
  <match src="function_definition [26812,27016]" dest="function_definition [26656,26860]"/>
  <match src="identifier: contractId [40731,40741]" dest="identifier: contractId [40506,40516]"/>
  <match src="call_expression [29285,29338]" dest="call_expression [29129,29182]"/>
  <match src="type_name [35438,35445]" dest="type_name [35214,35221]"/>
  <match src="modifier_invocation [53577,53595]" dest="modifier_invocation [53483,53501]"/>
  <match src=".: . [31198,31199]" dest=".: . [31042,31043]"/>
  <match src="identifier: ITokenPredicate [51413,51428]" dest="identifier: ITokenPredicate [51188,51203]"/>
  <match src="indexed: indexed [35077,35084]" dest="indexed: indexed [34853,34860]"/>
  <match src="): ) [46050,46051]" dest="): ) [45826,45827]"/>
  <match src="call_argument [40279,40286]" dest="call_argument [40055,40062]"/>
  <match src="return_type_definition [28540,28557]" dest="return_type_definition [28384,28401]"/>
  <match src="comment: // topic0 is event sig [53859,53881]" dest="comment: // topic0 is event sig [53765,53787]"/>
  <match src="{: { [19373,19374]" dest="{: { [19250,19251]"/>
  <match src="type_name [50310,50317]" dest="type_name [50085,50092]"/>
  <match src="identifier: _msgSender [40488,40498]" dest="identifier: _msgSender [40264,40274]"/>
  <match src="string_literal [22100,22144]" dest="string_literal [21977,22021]"/>
  <match src="call_argument [30975,30989]" dest="call_argument [30819,30833]"/>
  <match src="(: ( [38171,38172]" dest="(: ( [37947,37948]"/>
  <match src="call_argument [42449,42490]" dest="call_argument [42225,42266]"/>
  <match src="identifier: value [19817,19822]" dest="identifier: value [19694,19699]"/>
  <match src="): ) [22096,22097]" dest="): ) [21973,21974]"/>
  <match src="==: == [53836,53838]" dest="==: == [53742,53744]"/>
  <match src="primitive_type [4415,4422]" dest="primitive_type [4382,4389]"/>
  <match src="&lt;:  &lt; [10449,10451]" dest="&lt;:  &lt; [10383,10385]"/>
  <match src="expression_statement [8603,8633]" dest="expression_statement [8570,8600]"/>
  <match src="if: if [48264,48266]" dest="if: if [48040,48042]"/>
  <match src="yul_function_call [47672,47688]" dest="yul_function_call [47448,47464]"/>
  <match src="parameter [5683,5692]" dest="parameter [5650,5659]"/>
  <match src="member_expression [20331,20344]" dest="member_expression [20208,20221]"/>
  <match src="call_argument [54161,54195]" dest="call_argument [54067,54101]"/>
  <match src="external: external [51020,51028]" dest="external: external [50795,50803]"/>
  <match src="identifier: toUint [43936,43942]" dest="identifier: toUint [43712,43718]"/>
  <match src="visibility [39981,39989]" dest="visibility [39757,39765]"/>
  <match src="assembly: assembly [48130,48138]" dest="assembly: assembly [47906,47914]"/>
  <match src="): ) [39730,39731]" dest="): ) [39506,39507]"/>
  <match src="identifier: _indexes [24212,24220]" dest="identifier: _indexes [24056,24064]"/>
  <match src="binary_expression [53799,53857]" dest="binary_expression [53705,53763]"/>
  <match src="pure: pure [5315,5319]" dest="pure: pure [5282,5286]"/>
  <match src="visibility [14711,14719]" dest="visibility [14645,14653]"/>
  <match src="{: { [28086,28087]" dest="{: { [27930,27931]"/>
  <match src="comment: // UintSet [30314,30324]" dest="comment: // UintSet [30158,30168]"/>
  <match src="return_type_definition [17323,17345]" dest="return_type_definition [17257,17279]"/>
  <match src=",: , [40477,40478]" dest=",: , [40253,40254]"/>
  <match src="identifier: item [42521,42525]" dest="identifier: item [42297,42301]"/>
  <match src="yul_function_call [11509,11529]" dest="yul_function_call [11443,11463]"/>
  <match src="identifier: safeTransferFrom [53095,53111]" dest="identifier: safeTransferFrom [53001,53017]"/>
  <match src="variable_declaration [45136,45150]" dest="variable_declaration [44912,44926]"/>
  <match src="returns: returns [803,810]" dest="returns: returns [803,810]"/>
  <match src="else: else [48409,48413]" dest="else: else [48185,48189]"/>
  <match src="yul_function_call [49409,49431]" dest="yul_function_call [49185,49207]"/>
  <match src="function_body [15927,16026]" dest="function_body [15861,15960]"/>
  <match src="function: function [20387,20395]" dest="function: function [20264,20272]"/>
  <match src="address: address [37050,37057]" dest="address: address [36826,36833]"/>
  <match src="): ) [27843,27844]" dest="): ) [27687,27688]"/>
  <match src="(: ( [20158,20159]" dest="(: ( [20035,20036]"/>
  <match src="identifier: errorMessage [14131,14143]" dest="identifier: errorMessage [14065,14077]"/>
  <match src="**: ** [49264,49266]" dest="**: ** [49040,49042]"/>
  <match src="identifier: a [4063,4064]" dest="identifier: a [4030,4031]"/>
  <match src="): ) [53833,53834]" dest="): ) [53739,53740]"/>
  <match src="view: view [27854,27858]" dest="view: view [27698,27702]"/>
  <match src="): ) [29241,29242]" dest="): ) [29085,29086]"/>
  <match src="function: function [30146,30154]" dest="function: function [29990,29998]"/>
  <match src="): ) [40944,40945]" dest="): ) [40719,40720]"/>
  <match src="): ) [48883,48884]" dest="): ) [48659,48660]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [16648,16821]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [16582,16755]"/>
  <match src="private: private [40666,40673]" dest="private: private [40441,40448]"/>
  <match src="(: ( [48047,48048]" dest="(: ( [47823,47824]"/>
  <match src="bool: bool [27868,27872]" dest="bool: bool [27712,27716]"/>
  <match src=",: , [4064,4065]" dest=",: , [4031,4032]"/>
  <match src="return_type_definition [9414,9431]" dest="return_type_definition [9381,9398]"/>
  <match src="parameter [26825,26840]" dest="parameter [26669,26684]"/>
  <match src="function: function [6549,6557]" dest="function: function [6516,6524]"/>
  <match src="let: let [47750,47753]" dest="let: let [47526,47529]"/>
  <match src="(: ( [48176,48177]" dest="(: ( [47952,47953]"/>
  <match src="(: ( [2771,2772]" dest="(: ( [2771,2772]"/>
  <match src="expression_statement [20568,20666]" dest="expression_statement [20445,20543]"/>
  <match src="(: ( [27339,27340]" dest="(: ( [27183,27184]"/>
  <match src="identifier: item [46284,46288]" dest="identifier: item [46060,46064]"/>
  <match src="): ) [52137,52138]" dest="): ) [52043,52044]"/>
  <match src="yul_function_call [47769,47782]" dest="yul_function_call [47545,47558]"/>
  <match src="identifier: log [53652,53655]" dest="identifier: log [53558,53561]"/>
  <match src="): ) [17962,17963]" dest="): ) [17896,17897]"/>
  <match src="(: ( [36006,36007]" dest="(: ( [35782,35783]"/>
  <match src="): ) [4983,4984]" dest="): ) [4950,4951]"/>
  <match src="yul_function_call [43093,43115]" dest="yul_function_call [42869,42891]"/>
  <match src=",: , [16975,16976]" dest=",: , [16909,16910]"/>
  <match src="parameter [15178,15191]" dest="parameter [15112,15125]"/>
  <match src="): ) [18280,18281]" dest="): ) [18214,18215]"/>
  <match src=",: , [12758,12759]" dest=",: , [12692,12693]"/>
  <match src="string_literal [7960,7986]" dest="string_literal [7927,7953]"/>
  <match src="(: ( [22091,22092]" dest="(: ( [21968,21969]"/>
  <match src="primitive_type [9350,9357]" dest="primitive_type [9317,9324]"/>
  <match src="string: string [40659,40665]" dest="string: string [40434,40440]"/>
  <match src=",: , [14694,14695]" dest=",: , [14628,14629]"/>
  <match src="&quot;: &quot; [37811,37812]" dest="&quot;: &quot; [37587,37588]"/>
  <match src="}: } [8017,8018]" dest="}: } [7984,7985]"/>
  <match src="uint256: uint256 [347,354]" dest="uint256: uint256 [347,354]"/>
  <match src="pragma_directive [32007,32038]" dest="pragma_directive [32813,32844]"/>
  <match src="&quot;: &quot; [44068,44069]" dest="&quot;: &quot; [43844,43845]"/>
  <match src="identifier: spender [20642,20649]" dest="identifier: spender [20519,20526]"/>
  <match src="primitive_type [25117,25124]" dest="primitive_type [24961,24968]"/>
  <match src="type_name [27644,27648]" dest="type_name [27488,27492]"/>
  <match src="state_mutability [489,493]" dest="state_mutability [489,493]"/>
  <match src="delete: delete [25940,25946]" dest="delete: delete [25784,25790]"/>
  <match src="): ) [16890,16891]" dest="): ) [16824,16825]"/>
  <match src="binary_expression [26907,26933]" dest="binary_expression [26751,26777]"/>
  <match src="): ) [51188,51189]" dest="): ) [50964,50965]"/>
  <match src="(: ( [321,322]" dest="(: ( [321,322]"/>
  <match src="public: public [37730,37736]" dest="public: public [37506,37512]"/>
  <match src="}: } [47968,47969]" dest="}: } [47744,47745]"/>
  <match src="}: } [46641,46642]" dest="}: } [46417,46418]"/>
  <match src="(: ( [40871,40872]" dest="(: ( [40646,40647]"/>
  <match src="identifier: valueIndex [25141,25151]" dest="identifier: valueIndex [24985,24995]"/>
  <match src="return: return [6639,6645]" dest="return: return [6606,6612]"/>
  <match src="visibility [44002,44010]" dest="visibility [43778,43786]"/>
  <match src="function: function [29432,29440]" dest="function: function [29276,29284]"/>
  <match src="true [4173,4177]" dest="true [4140,4144]"/>
  <match src="primitive_type [4106,4113]" dest="primitive_type [4073,4080]"/>
  <match src="identifier: item [43585,43589]" dest="identifier: item [43361,43365]"/>
  <match src="(: ( [49056,49057]" dest="(: ( [48832,48833]"/>
  <match src="call_argument [15621,15633]" dest="call_argument [15555,15567]"/>
  <match src="): ) [47480,47481]" dest="): ) [47256,47257]"/>
  <match src="identifier: RLPItem [42167,42174]" dest="identifier: RLPItem [41943,41950]"/>
  <match src="return_statement [48390,48399]" dest="return_statement [48166,48175]"/>
  <match src="identifier: item [44217,44221]" dest="identifier: item [43993,43997]"/>
  <match src="return: return [4137,4143]" dest="return: return [4104,4110]"/>
  <match src="(: ( [42603,42604]" dest="(: ( [42379,42380]"/>
  <match src="return_type_definition [3760,3783]" dest="return_type_definition [3727,3750]"/>
  <match src="primitive_type [41869,41876]" dest="primitive_type [41645,41652]"/>
  <match src="member_expression [43585,43596]" dest="member_expression [43361,43372]"/>
  <match src="indexed: indexed [35099,35106]" dest="indexed: indexed [34875,34882]"/>
  <match src="): ) [46465,46466]" dest="): ) [46241,46242]"/>
  <match src="identifier: memPtr [42526,42532]" dest="identifier: memPtr [42302,42308]"/>
  <match src="address: address [35797,35804]" dest="address: address [35573,35580]"/>
  <match src="uint256: uint256 [46773,46780]" dest="uint256: uint256 [46549,46556]"/>
  <match src=",: , [20430,20431]" dest=",: , [20307,20308]"/>
  <match src="else: else [48259,48263]" dest="else: else [48035,48039]"/>
  <match src="function_definition [19098,19275]" dest="function_definition [18975,19152]"/>
  <match src="(: ( [19433,19434]" dest="(: ( [19310,19311]"/>
  <match src="call_argument [24019,24022]" dest="call_argument [23863,23866]"/>
  <match src="]: ] [37399,37400]" dest="]: ] [37175,37176]"/>
  <match src="parameter [17767,17779]" dest="parameter [17701,17713]"/>
  <match src="number_literal: 0xc0 [41453,41457]" dest="number_literal: 0xc0 [41229,41233]"/>
  <match src="number_literal: 0 [21957,21958]" dest="number_literal: 0 [21834,21835]"/>
  <match src="comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [25349,25441]" dest="comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [25193,25285]"/>
  <match src=",: , [47782,47783]" dest=",: , [47558,47559]"/>
  <match src="): ) [47781,47782]" dest="): ) [47557,47558]"/>
  <match src="call_argument [14225,14229]" dest="call_argument [14159,14163]"/>
  <match src="comment: /**  * @dev Collection of functions related to the address type  */ [10461,10530]" dest="comment: /**  * @dev Collection of functions related to the address type  */ [10395,10464]"/>
  <match src="identifier: role [40213,40217]" dest="identifier: role [39989,39993]"/>
  <match src="binary_expression [46905,46931]" dest="binary_expression [46681,46707]"/>
  <match src="): ) [35984,35985]" dest="): ) [35760,35761]"/>
  <match src="primitive_type [6145,6152]" dest="primitive_type [6112,6119]"/>
  <match src="primitive_type [17267,17272]" dest="primitive_type [17201,17206]"/>
  <match src="identifier: MANAGER_ROLE [51606,51618]" dest="identifier: MANAGER_ROLE [51381,51393]"/>
  <match src="(: ( [5783,5784]" dest="(: ( [5750,5751]"/>
  <match src="type_name [23546,23555]" dest="type_name [23390,23399]"/>
  <match src="identifier: role [36038,36042]" dest="identifier: role [35814,35818]"/>
  <match src="(: ( [54105,54106]" dest="(: ( [54011,54012]"/>
  <match src="identifier: EnumerableSet [34554,34567]" dest="identifier: EnumerableSet [34330,34343]"/>
  <match src="identifier: itemLen [47558,47565]" dest="identifier: itemLen [47334,47341]"/>
  <match src="expression_statement [16357,16425]" dest="expression_statement [16291,16359]"/>
  <match src="): ) [6614,6615]" dest="): ) [6581,6582]"/>
  <match src="yul_evm_builtin [47880,47883]" dest="yul_evm_builtin [47656,47659]"/>
  <match src="uint256: uint256 [31845,31852]" dest="uint256: uint256 [31689,31696]"/>
  <match src="function: function [28014,28022]" dest="function: function [27858,27866]"/>
  <match src="uint256: uint256 [30263,30270]" dest="uint256: uint256 [30107,30114]"/>
  <match src="return_statement [24307,24320]" dest="return_statement [24151,24164]"/>
  <match src=",: , [29556,29557]" dest=",: , [29400,29401]"/>
  <match src=",: , [20741,20742]" dest=",: , [20618,20619]"/>
  <match src="identifier: approve [20624,20631]" dest="identifier: approve [20501,20508]"/>
  <match src="yul_identifier [43533,43536]" dest="yul_identifier [43309,43312]"/>
  <match src="): ) [2341,2342]" dest="): ) [2341,2342]"/>
  <match src="internal: internal [15890,15898]" dest="internal: internal [15824,15832]"/>
  <match src="primitive_type [30220,30227]" dest="primitive_type [30064,30071]"/>
  <match src="identifier: returndata [17706,17716]" dest="identifier: returndata [17640,17650]"/>
  <match src="{: { [21473,21474]" dest="{: { [21350,21351]"/>
  <match src="return_type_definition [26208,26222]" dest="return_type_definition [26052,26066]"/>
  <match src="identifier: adminRole [40095,40104]" dest="identifier: adminRole [39871,39880]"/>
  <match src=",: , [44690,44691]" dest=",: , [44466,44467]"/>
  <match src="variable_declaration [42504,42518]" dest="variable_declaration [42280,42294]"/>
  <match src="identifier: require [43735,43742]" dest="identifier: require [43511,43518]"/>
  <match src="(: ( [20844,20845]" dest="(: ( [20721,20722]"/>
  <match src="parameter [1922,1926]" dest="parameter [1922,1926]"/>
  <match src="parameter [30588,30601]" dest="parameter [30432,30445]"/>
  <match src="{: { [24292,24293]" dest="{: { [24136,24137]"/>
  <match src="uint256: uint256 [7305,7312]" dest="uint256: uint256 [7272,7279]"/>
  <match src="returns: returns [36305,36312]" dest="returns: returns [36081,36088]"/>
  <match src="): ) [51645,51646]" dest="): ) [51420,51421]"/>
  <match src="identifier: IERC20 [54219,54225]" dest="identifier: IERC20 [54177,54183]"/>
  <match src="return_type_definition [44016,44033]" dest="return_type_definition [43792,43809]"/>
  <match src="{: { [44034,44035]" dest="{: { [43810,43811]"/>
  <match src="function_body [14743,14856]" dest="function_body [14677,14790]"/>
  <match src="): ) [54107,54108]" dest="): ) [54013,54014]"/>
  <match src="identifier: _remove [24523,24530]" dest="identifier: _remove [24367,24374]"/>
  <match src="yul_path [47442,47449]" dest="yul_path [47218,47225]"/>
  <match src="indexed: indexed [52067,52074]" dest="indexed: indexed [51842,51849]"/>
  <match src="else: else [48541,48545]" dest="else: else [48317,48321]"/>
  <match src="): ) [52990,52991]" dest="): ) [52896,52897]"/>
  <match src="pure: pure [44011,44015]" dest="pure: pure [43787,43791]"/>
  <match src="): ) [4113,4114]" dest="): ) [4080,4081]"/>
  <match src="block_statement [26012,26051]" dest="block_statement [25856,25895]"/>
  <match src="): ) [45771,45772]" dest="): ) [45547,45548]"/>
  <match src="type_name [8521,8528]" dest="type_name [8488,8495]"/>
  <match src="primitive_type [52176,52183]" dest="primitive_type [52082,52089]"/>
  <match src=".: . [37097,37098]" dest=".: . [36873,36874]"/>
  <match src="parameter [27806,27828]" dest="parameter [27650,27672]"/>
  <match src="): ) [9470,9471]" dest="): ) [9437,9438]"/>
  <match src="return_type_definition [338,355]" dest="return_type_definition [338,355]"/>
  <match src="comment: // This modifies the order of the array, as noted in {at}. [25043,25101]" dest="comment: // This modifies the order of the array, as noted in {at}. [24887,24945]"/>
  <match src="(: ( [47456,47457]" dest="(: ( [47232,47233]"/>
  <match src="identifier: RoleGranted [40261,40272]" dest="identifier: RoleGranted [40037,40048]"/>
  <match src="bytes: bytes [21827,21832]" dest="bytes: bytes [21704,21709]"/>
  <match src="[: [ [53629,53630]" dest="[: [ [53535,53536]"/>
  <match src="parameter [48783,48794]" dest="parameter [48559,48570]"/>
  <match src="identifier: functionStaticCall [15836,15854]" dest="identifier: functionStaticCall [15770,15788]"/>
  <match src="public: public [36293,36299]" dest="public: public [36069,36075]"/>
  <match src="(: ( [38910,38911]" dest="(: ( [38686,38687]"/>
  <match src="parameter [24531,24546]" dest="parameter [24375,24390]"/>
  <match src="solidity_version_comparison_operator [22281,22284]" dest="solidity_version_comparison_operator [31833,31836]"/>
  <match src="identifier: item [44916,44920]" dest="identifier: item [44692,44696]"/>
  <match src="returns: returns [5719,5726]" dest="returns: returns [5686,5693]"/>
  <match src="primitive_type [463,470]" dest="primitive_type [463,470]"/>
  <match src=",: , [44136,44137]" dest=",: , [43912,43913]"/>
  <match src="type_name [44382,44389]" dest="type_name [44158,44165]"/>
  <match src="type_name [34630,34659]" dest="type_name [34406,34435]"/>
  <match src="user_defined_type [42167,42174]" dest="user_defined_type [41943,41950]"/>
  <match src="variable_declaration [48106,48119]" dest="variable_declaration [47882,47895]"/>
  <match src="yul_path [44521,44527]" dest="yul_path [44297,44303]"/>
  <match src="identifier: set [30893,30896]" dest="identifier: set [30737,30740]"/>
  <match src="assembly_statement [45720,45783]" dest="assembly_statement [45496,45559]"/>
  <match src="identifier: withdrawer [54264,54274]" dest="identifier: withdrawer [54222,54232]"/>
  <match src="call_argument [20845,20850]" dest="call_argument [20722,20727]"/>
  <match src="type_name [5748,5755]" dest="type_name [5715,5722]"/>
  <match src="yul_evm_builtin [47373,47376]" dest="yul_evm_builtin [47149,47152]"/>
  <match src="&quot;: &quot; [7985,7986]" dest="&quot;: &quot; [7952,7953]"/>
  <match src="primitive_type [39715,39722]" dest="primitive_type [39491,39498]"/>
  <match src="block_statement [40441,40513]" dest="block_statement [40217,40289]"/>
  <match src="expression_statement [12810,12889]" dest="expression_statement [12744,12823]"/>
  <match src="parameter [24580,24584]" dest="parameter [24424,24428]"/>
  <match src="public: public [37029,37035]" dest="public: public [36805,36811]"/>
  <match src="primitive_type [50338,50345]" dest="primitive_type [50113,50120]"/>
  <match src="type_cast_expression [30662,30676]" dest="type_cast_expression [30506,30520]"/>
  <match src="{: { [49019,49020]" dest="{: { [48795,48796]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [23754,23918]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [23598,23762]"/>
  <match src="primitive_type [4364,4371]" dest="primitive_type [4331,4338]"/>
  <match src=".: . [27679,27680]" dest=".: . [27523,27524]"/>
  <match src="contract_declaration [32552,32935]" dest="contract_declaration [32363,32746]"/>
  <match src="primitive_type [46238,46245]" dest="primitive_type [46014,46021]"/>
  <match src="(: ( [20711,20712]" dest="(: ( [20588,20589]"/>
  <match src="type_name [17514,17519]" dest="type_name [17448,17453]"/>
  <match src="identifier: account [39777,39784]" dest="identifier: account [39553,39560]"/>
  <match src="identifier: toDeleteIndex [25125,25138]" dest="identifier: toDeleteIndex [24969,24982]"/>
  <match src="yul_path [45765,45771]" dest="yul_path [45541,45547]"/>
  <match src="(: ( [30620,30621]" dest="(: ( [30464,30465]"/>
  <match src=":=: := [48160,48162]" dest=":=: := [47936,47938]"/>
  <match src="identifier: RoleRevoked [35763,35774]" dest="identifier: RoleRevoked [35539,35550]"/>
  <match src="call_argument [39777,39784]" dest="call_argument [39553,39560]"/>
  <match src="yul_evm_builtin [46864,46869]" dest="yul_evm_builtin [46640,46645]"/>
  <match src=",: , [47157,47158]" dest=",: , [46933,46934]"/>
  <match src="type_name [19050,19057]" dest="type_name [18927,18934]"/>
  <match src="identifier: trySub [4048,4054]" dest="identifier: trySub [4015,4021]"/>
  <match src="identifier: newAllowance [20492,20504]" dest="identifier: newAllowance [20369,20381]"/>
  <match src="identifier: c [5784,5785]" dest="identifier: c [5751,5752]"/>
  <match src="tuple_expression [5053,5063]" dest="tuple_expression [5020,5030]"/>
  <match src="primitive_type [503,510]" dest="primitive_type [503,510]"/>
  <match src="identifier: dataLen [47334,47341]" dest="identifier: dataLen [47110,47117]"/>
  <match src="(: ( [30262,30263]" dest="(: ( [30106,30107]"/>
  <match src="identifier: token [19316,19321]" dest="identifier: token [19193,19198]"/>
  <match src="view: view [30206,30210]" dest="view: view [30050,30054]"/>
  <match src="else: else [17850,17854]" dest="else: else [17784,17788]"/>
  <match src="identifier: Initializable [51450,51463]" dest="identifier: Initializable [51225,51238]"/>
  <match src="call_expression [37756,37861]" dest="call_expression [37532,37637]"/>
  <match src="type_alias [34444,34457]" dest="type_alias [34220,34233]"/>
  <match src="binary_expression [49267,49282]" dest="binary_expression [49043,49058]"/>
  <match src="(: ( [44060,44061]" dest="(: ( [43836,43837]"/>
  <match src="using_directive [34438,34487]" dest="using_directive [34214,34263]"/>
  <match src="parameter [6573,6582]" dest="parameter [6540,6549]"/>
  <match src="yul_function_call [44622,44633]" dest="yul_function_call [44398,44409]"/>
  <match src="visibility [43362,43370]" dest="visibility [43138,43146]"/>
  <match src="yul_evm_builtin [43540,43543]" dest="yul_evm_builtin [43316,43319]"/>
  <match src="type_name [35955,35962]" dest="type_name [35731,35738]"/>
  <match src="parameter [13732,13744]" dest="parameter [13666,13678]"/>
  <match src="}: } [40123,40124]" dest="}: } [39899,39900]"/>
  <match src="comment: // retrieve the bytes [49432,49453]" dest="comment: // retrieve the bytes [49208,49229]"/>
  <match src="identifier: set [24230,24233]" dest="identifier: set [24074,24077]"/>
  <match src="internal: internal [44840,44848]" dest="internal: internal [44616,44624]"/>
  <match src="variable_declaration_statement [52941,52993]" dest="variable_declaration_statement [52847,52899]"/>
  <match src="call_expression [20308,20370]" dest="call_expression [20185,20247]"/>
  <match src="call_argument [45822,45829]" dest="call_argument [45598,45605]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [18078,18125]" dest="comment: // solhint-disable-next-line no-inline-assembly [18012,18059]"/>
  <match src="virtual: virtual [39741,39748]" dest="virtual: virtual [39517,39524]"/>
  <match src="): ) [42561,42562]" dest="): ) [42337,42338]"/>
  <match src="(: ( [29449,29450]" dest="(: ( [29293,29294]"/>
  <match src="identifier: _length [29775,29782]" dest="identifier: _length [29619,29626]"/>
  <match src="parameter [27644,27648]" dest="parameter [27488,27492]"/>
  <match src="type_name [50934,50941]" dest="type_name [50709,50716]"/>
  <match src="struct: struct [41546,41552]" dest="struct: struct [41322,41328]"/>
  <match src="): ) [14741,14742]" dest="): ) [14675,14676]"/>
  <match src="primitive_type [38172,38179]" dest="primitive_type [37948,37955]"/>
  <match src="uint256: uint256 [20743,20750]" dest="uint256: uint256 [20620,20627]"/>
  <match src="identifier: _indexes [23730,23738]" dest="identifier: _indexes [23574,23582]"/>
  <match src="identifier: require [8603,8610]" dest="identifier: require [8570,8577]"/>
  <match src="&quot;: &quot; [51644,51645]" dest="&quot;: &quot; [51419,51420]"/>
  <match src=",: , [35820,35821]" dest=",: , [35596,35597]"/>
  <match src="identifier: hasRole [35947,35954]" dest="identifier: hasRole [35723,35730]"/>
  <match src="returns: returns [16323,16330]" dest="returns: returns [16257,16264]"/>
  <match src="/: / [5090,5091]" dest="/: / [5057,5058]"/>
  <match src="call_argument [42223,42249]" dest="call_argument [41999,42025]"/>
  <match src="type_name [39962,39969]" dest="type_name [39738,39745]"/>
  <match src="variable_declaration [5748,5757]" dest="variable_declaration [5715,5724]"/>
  <match src="function: function [36977,36985]" dest="function: function [36753,36761]"/>
  <match src="event_paramater [52059,52084]" dest="event_paramater [51834,51859]"/>
  <match src="function_body [10260,10330]" dest="function_body [10227,10297]"/>
  <match src="(: ( [45243,45244]" dest="(: ( [45019,45020]"/>
  <match src=":=: := [47669,47671]" dest=":=: := [47445,47447]"/>
  <match src="indexed: indexed [35805,35812]" dest="indexed: indexed [35581,35588]"/>
  <match src="parameter [19120,19132]" dest="parameter [18997,19009]"/>
  <match src="}: } [37114,37115]" dest="}: } [36890,36891]"/>
  <match src="visibility [16892,16900]" dest="visibility [16826,16834]"/>
  <match src="state_variable_declaration [51582,51647]" dest="state_variable_declaration [51357,51422]"/>
  <match src="function: function [50904,50912]" dest="function: function [50679,50687]"/>
  <match src="assembly_statement [47105,47497]" dest="assembly_statement [46881,47273]"/>
  <match src="primitive_type [28897,28904]" dest="primitive_type [28741,28748]"/>
  <match src=".: . [25863,25864]" dest=".: . [25707,25708]"/>
  <match src="string [37811,37860]" dest="string [37587,37636]"/>
  <match src="&quot;: &quot; [45477,45478]" dest="&quot;: &quot; [45253,45254]"/>
  <match src="&lt;: &lt; [48360,48361]" dest="&lt;: &lt; [48136,48137]"/>
  <match src="(: ( [46752,46753]" dest="(: ( [46528,46529]"/>
  <match src="parameter [23955,23968]" dest="parameter [23799,23812]"/>
  <match src="uint256: uint256 [7880,7887]" dest="uint256: uint256 [7847,7854]"/>
  <match src="binary_expression [48418,48442]" dest="binary_expression [48194,48218]"/>
  <match src="call_argument [31215,31220]" dest="call_argument [31059,31064]"/>
  <match src="function_body [4424,4791]" dest="function_body [4391,4758]"/>
  <match src="identifier: a [10186,10187]" dest="identifier: a [10153,10154]"/>
  <match src=",: , [2793,2794]" dest=",: , [2793,2794]"/>
  <match src="): ) [45680,45681]" dest="): ) [45456,45457]"/>
  <match src="(: ( [29292,29293]" dest="(: ( [29136,29137]"/>
  <match src="(: ( [48267,48268]" dest="(: ( [48043,48044]"/>
  <match src="identifier: spender [20355,20362]" dest="identifier: spender [20232,20239]"/>
  <match src="emit: emit [53003,53007]" dest="emit: emit [52909,52913]"/>
  <match src="revert: revert [18237,18243]" dest="revert: revert [18171,18177]"/>
  <match src="identifier: value [26254,26259]" dest="identifier: value [26098,26103]"/>
  <match src="visibility [52192,52200]" dest="visibility [52098,52106]"/>
  <match src="member_expression [43603,43611]" dest="member_expression [43379,43387]"/>
  <match src="identifier: _roles [40206,40212]" dest="identifier: _roles [39982,39988]"/>
  <match src="array_access [53807,53825]" dest="array_access [53713,53731]"/>
  <match src="): ) [43351,43352]" dest="): ) [43127,43128]"/>
  <match src="binary_expression [46436,46466]" dest="binary_expression [46212,46242]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers, reverting with custom message on      * division by zero. The result is rounded towards zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryDiv}.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [8671,9331]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers, reverting with custom message on      * division by zero. The result is rounded towards zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryDiv}.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [8638,9298]"/>
  <match src="}: } [52147,52148]" dest="}: } [52053,52054]"/>
  <match src="state_mutability [5714,5718]" dest="state_mutability [5681,5685]"/>
  <match src="constant: constant [51668,51676]" dest="constant: constant [51443,51451]"/>
  <match src="(: ( [30157,30158]" dest="(: ( [30001,30002]"/>
  <match src="function_body [5344,5423]" dest="function_body [5311,5390]"/>
  <match src=",: , [19347,19348]" dest=",: , [19224,19225]"/>
  <match src="return: return [5395,5401]" dest="return: return [5362,5368]"/>
  <match src="internal: internal [6167,6175]" dest="internal: internal [6134,6142]"/>
  <match src="): ) [40945,40946]" dest="): ) [40720,40721]"/>
  <match src="): ) [43113,43114]" dest="): ) [42889,42890]"/>
  <match src=",: , [40486,40487]" dest=",: , [40262,40263]"/>
  <match src=",: , [47477,47478]" dest=",: , [47253,47254]"/>
  <match src="=: = [44342,44343]" dest="=: = [44118,44119]"/>
  <match src="}: } [31913,31914]" dest="}: } [31757,31758]"/>
  <match src="function_body [39749,39793]" dest="function_body [39525,39569]"/>
  <match src="event_paramater [35438,35460]" dest="event_paramater [35214,35236]"/>
  <match src="type_name [15855,15862]" dest="type_name [15789,15796]"/>
  <match src="mload: mload [48171,48176]" dest="mload: mload [47947,47952]"/>
  <match src="call_expression [42279,42293]" dest="call_expression [42055,42069]"/>
  <match src="type_name [20743,20750]" dest="type_name [20620,20627]"/>
  <match src="call_argument [43751,43755]" dest="call_argument [43527,43531]"/>
  <match src="identifier: length [41986,41992]" dest="identifier: length [41762,41768]"/>
  <match src="): ) [47240,47241]" dest="): ) [47016,47017]"/>
  <match src="member_expression [42394,42405]" dest="member_expression [42170,42181]"/>
  <match src=".: . [46288,46289]" dest=".: . [46064,46065]"/>
  <match src="identifier: _at [28576,28579]" dest="identifier: _at [28420,28423]"/>
  <match src="identifier: value [15297,15302]" dest="identifier: value [15231,15236]"/>
  <match src="visibility [50434,50442]" dest="visibility [50209,50217]"/>
  <match src="address: address [20523,20530]" dest="address: address [20400,20407]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers, reverting on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [6777,7241]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers, reverting on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [6744,7208]"/>
  <match src="): ) [7280,7281]" dest="): ) [7247,7248]"/>
  <match src="type_cast_expression [29305,29337]" dest="type_cast_expression [29149,29181]"/>
  <match src="call_argument [46313,46324]" dest="call_argument [46089,46100]"/>
  <match src="): ) [42986,42987]" dest="): ) [42762,42763]"/>
  <match src="): ) [37898,37899]" dest="): ) [37674,37675]"/>
  <match src="call_expression [52318,52350]" dest="call_expression [52224,52256]"/>
  <match src="yul_path [44625,44628]" dest="yul_path [44401,44404]"/>
  <match src="): ) [44632,44633]" dest="): ) [44408,44409]"/>
  <match src="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [32781,32899]" dest="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [32592,32710]"/>
  <match src="identifier: spender [20734,20741]" dest="identifier: spender [20611,20618]"/>
  <match src="true: true [25990,25994]" dest="true: true [25834,25838]"/>
  <match src="&quot;: &quot; [20894,20895]" dest="&quot;: &quot; [20771,20772]"/>
  <match src="member_expression [36341,36368]" dest="member_expression [36117,36144]"/>
  <match src="{: { [16346,16347]" dest="{: { [16280,16281]"/>
  <match src="event_definition [35757,35846]" dest="event_definition [35533,35622]"/>
  <match src="function_body [40191,40320]" dest="function_body [39967,40096]"/>
  <match src="number_literal: 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef [51760,51826]" dest="number_literal: 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef [51535,51601]"/>
  <match src="(: ( [37049,37050]" dest="(: ( [36825,36826]"/>
  <match src="primitive_type [4963,4970]" dest="primitive_type [4930,4937]"/>
  <match src="==: == [4662,4664]" dest="==: == [4629,4631]"/>
  <match src="expression_statement [42745,42771]" dest="expression_statement [42521,42547]"/>
  <match src="): ) [51234,51235]" dest="): ) [51010,51011]"/>
  <match src="call_argument [6706,6741]" dest="call_argument [6673,6708]"/>
  <match src="): ) [8631,8632]" dest="): ) [8598,8599]"/>
  <match src="]: ] [25498,25499]" dest="]: ] [25342,25343]"/>
  <match src="address: address [2795,2802]" dest="address: address [2795,2802]"/>
  <match src="comment: // solhint-disable-next-line max-line-length [22002,22046]" dest="comment: // solhint-disable-next-line max-line-length [21879,21923]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [27403,27565]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [27247,27409]"/>
  <match src=",: , [776,777]" dest=",: , [776,777]"/>
  <match src="): ) [1151,1152]" dest="): ) [1151,1152]"/>
  <match src=".: . [20598,20599]" dest=".: . [20475,20476]"/>
  <match src="uint256: uint256 [30182,30189]" dest="uint256: uint256 [30026,30033]"/>
  <match src="array_access [53732,53745]" dest="array_access [53638,53651]"/>
  <match src="): ) [48062,48063]" dest="): ) [47838,47839]"/>
  <match src="address: address [14661,14668]" dest="address: address [14595,14602]"/>
  <match src="library_declaration [23012,31914]" dest="library_declaration [22856,31758]"/>
  <match src="identifier: len [44625,44628]" dest="identifier: len [44401,44404]"/>
  <match src="primitive_type [31123,31130]" dest="primitive_type [30967,30974]"/>
  <match src="identifier: value [24732,24737]" dest="identifier: value [24576,24581]"/>
  <match src="yul_identifier [49357,49361]" dest="yul_identifier [49133,49137]"/>
  <match src="string [12622,12653]" dest="string [12556,12587]"/>
  <match src="=: = [45408,45409]" dest="=: = [45184,45185]"/>
  <match src="public: public [37340,37346]" dest="public: public [37116,37122]"/>
  <match src="variable_declaration_statement [21827,21923]" dest="variable_declaration_statement [21704,21800]"/>
  <match src="(: ( [40230,40231]" dest="(: ( [40006,40007]"/>
  <match src="for: for [51563,51566]" dest="for: for [51338,51341]"/>
  <match src="yul_identifier [47884,47891]" dest="yul_identifier [47660,47667]"/>
  <match src="(: ( [15279,15280]" dest="(: ( [15213,15214]"/>
  <match src="function: function [30554,30562]" dest="function: function [30398,30406]"/>
  <match src="identifier: item [46367,46371]" dest="identifier: item [46143,46147]"/>
  <match src="[: [ [25959,25960]" dest="[: [ [25803,25804]"/>
  <match src="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [826,1096]" dest="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [826,1096]"/>
  <match src="): ) [45250,45251]" dest="): ) [45026,45027]"/>
  <match src="function_body [37059,37115]" dest="function_body [36835,36891]"/>
  <match src="return: return [11541,11547]" dest="return: return [11475,11481]"/>
  <match src="function_body [17781,18394]" dest="function_body [17715,18328]"/>
  <match src="primitive_type [5335,5342]" dest="primitive_type [5302,5309]"/>
  <match src="identifier: role [39956,39960]" dest="identifier: role [39732,39736]"/>
  <match src="parameter [4375,4384]" dest="parameter [4342,4351]"/>
  <match src="if_statement [43138,43181]" dest="if_statement [42914,42957]"/>
  <match src="&quot;: &quot; [42223,42224]" dest="&quot;: &quot; [41999,42000]"/>
  <match src="type_cast_expression [30263,30294]" dest="type_cast_expression [30107,30138]"/>
  <match src="(: ( [43464,43465]" dest="(: ( [43240,43241]"/>
  <match src="solidity_version:  0.6.6 [41290,41296]" dest="solidity_version:  0.6.12 [41065,41072]"/>
  <match src="if: if [4656,4658]" dest="if: if [4623,4625]"/>
  <match src="identifier: Set [26376,26379]" dest="identifier: Set [26220,26223]"/>
  <match src="): ) [40439,40440]" dest="): ) [40215,40216]"/>
  <match src="identifier: depositReceiver [52773,52788]" dest="identifier: depositReceiver [52679,52694]"/>
  <match src="function_definition [48759,49520]" dest="function_definition [48535,49296]"/>
  <match src="identifier: len [48977,48980]" dest="identifier: len [48753,48756]"/>
  <match src="bytes32: bytes32 [39948,39955]" dest="bytes32: bytes32 [39724,39731]"/>
  <match src="type_name [759,766]" dest="type_name [759,766]"/>
  <match src="yul_path [18252,18262]" dest="yul_path [18186,18196]"/>
  <match src=",: , [38364,38365]" dest=",: , [38140,38141]"/>
  <match src="parameter [40872,40884]" dest="parameter [40647,40659]"/>
  <match src="return_type_definition [31152,31166]" dest="return_type_definition [30996,31010]"/>
  <match src="bytes: bytes [16262,16267]" dest="bytes: bytes [16196,16201]"/>
  <match src="function_definition [2246,2343]" dest="function_definition [2246,2343]"/>
  <match src="string_literal [14804,14847]" dest="string_literal [14738,14781]"/>
  <match src="identifier: index [28519,28524]" dest="identifier: index [28363,28368]"/>
  <match src="bytes: bytes [21446,21451]" dest="bytes: bytes [21323,21328]"/>
  <match src="memory: memory [42104,42110]" dest="memory: memory [41880,41886]"/>
  <match src="number_literal: 0 [7337,7338]" dest="number_literal: 0 [7304,7305]"/>
  <match src="for: for [19046,19049]" dest="for: for [18923,18926]"/>
  <match src="uint256: uint256 [45136,45143]" dest="uint256: uint256 [44912,44919]"/>
  <match src="return_statement [11541,11557]" dest="return_statement [11475,11491]"/>
  <match src="identifier: _payloadOffset [44344,44358]" dest="identifier: _payloadOffset [44120,44134]"/>
  <match src="identifier: encodeWithSelector [20312,20330]" dest="identifier: encodeWithSelector [20189,20207]"/>
  <match src="primitive_type [4055,4062]" dest="primitive_type [4022,4029]"/>
  <match src="+: + [47041,47042]" dest="+: + [46817,46818]"/>
  <match src="call_argument [43585,43596]" dest="call_argument [43361,43372]"/>
  <match src="byte: byte [46856,46860]" dest="byte: byte [46632,46636]"/>
  <match src="call_expression [54219,54236]" dest="call_expression [54177,54194]"/>
  <match src="address: address [2268,2275]" dest="address: address [2268,2275]"/>
  <match src="(: ( [38997,38998]" dest="(: ( [38773,38774]"/>
  <match src="): ) [42292,42293]" dest="): ) [42068,42069]"/>
  <match src="binary_expression [44947,44969]" dest="binary_expression [44723,44745]"/>
  <match src="yul_evm_builtin [48171,48176]" dest="yul_evm_builtin [47947,47952]"/>
  <match src="primitive_type [5284,5291]" dest="primitive_type [5251,5258]"/>
  <match src=".: . [52961,52962]" dest=".: . [52867,52868]"/>
  <match src="call_argument [42714,42721]" dest="call_argument [42490,42497]"/>
  <match src="type_name [17693,17698]" dest="type_name [17627,17632]"/>
  <match src="identifier: keccak256 [51690,51699]" dest="identifier: keccak256 [51465,51474]"/>
  <match src="variable_declaration_tuple [12745,12761]" dest="variable_declaration_tuple [12679,12695]"/>
  <match src="parameter [19349,19362]" dest="parameter [19226,19239]"/>
  <match src="identifier: src [49093,49096]" dest="identifier: src [48869,48872]"/>
  <match src="!=: != [4733,4735]" dest="!=: != [4700,4702]"/>
  <match src="visibility [5306,5314]" dest="visibility [5273,5281]"/>
  <match src="(: ( [49418,49419]" dest="(: ( [49194,49195]"/>
  <match src="identifier: to [19142,19144]" dest="identifier: to [19019,19021]"/>
  <match src="parameter [20418,20430]" dest="parameter [20295,20307]"/>
  <match src="(: ( [47469,47470]" dest="(: ( [47245,47246]"/>
  <match src="function_definition [50904,51029]" dest="function_definition [50679,50804]"/>
  <match src="]: ] [42702,42703]" dest="]: ] [42478,42479]"/>
  <match src="identifier: b [4130,4131]" dest="identifier: b [4097,4098]"/>
  <match src="variable_declaration [42361,42379]" dest="variable_declaration [42137,42155]"/>
  <match src="): ) [16344,16345]" dest="): ) [16278,16279]"/>
  <match src="type_name [42982,42986]" dest="type_name [42758,42762]"/>
  <match src="member_expression [29546,29556]" dest="member_expression [29390,29400]"/>
  <match src="struct_declaration [27045,27092]" dest="struct_declaration [26889,26936]"/>
  <match src=".: . [19211,19212]" dest=".: . [19088,19089]"/>
  <match src="{: { [26424,26425]" dest="{: { [26268,26269]"/>
  <match src="type_name [26163,26166]" dest="type_name [26007,26010]"/>
  <match src="(: ( [8582,8583]" dest="(: ( [8549,8550]"/>
  <match src="call_argument [44217,44228]" dest="call_argument [43993,44004]"/>
  <match src="): ) [49282,49283]" dest="): ) [49058,49059]"/>
  <match src=",: , [19254,19255]" dest=",: , [19131,19132]"/>
  <match src="event: event [35373,35378]" dest="event: event [35149,35154]"/>
  <match src="function: function [52156,52164]" dest="function: function [52062,52070]"/>
  <match src="call_argument [20301,20306]" dest="call_argument [20178,20183]"/>
  <match src="call_argument [30263,30294]" dest="call_argument [30107,30138]"/>
  <match src="function_definition [30554,30685]" dest="function_definition [30398,30529]"/>
  <match src="identifier: _add [30645,30649]" dest="identifier: _add [30489,30493]"/>
  <match src="(: ( [16497,16498]" dest="(: ( [16431,16432]"/>
  <match src="member_expression [45178,45189]" dest="member_expression [44954,44965]"/>
  <match src="uint256: uint256 [30588,30595]" dest="uint256: uint256 [30432,30439]"/>
  <match src="state_mutability [41744,41748]" dest="state_mutability [41520,41524]"/>
  <match src="function_body [44034,44757]" dest="function_body [43810,44533]"/>
  <match src="): ) [29000,29001]" dest="): ) [28844,28845]"/>
  <match src="visibility [4386,4394]" dest="visibility [4353,4361]"/>
  <match src="returns: returns [42973,42980]" dest="returns: returns [42749,42756]"/>
  <match src="binary_expression [4707,4712]" dest="binary_expression [4674,4679]"/>
  <match src="comment: /**      * @dev Returns the substraction of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [3894,4033]" dest="comment: /**      * @dev Returns the substraction of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [3861,4000]"/>
  <match src="user_defined_type [31102,31109]" dest="user_defined_type [30946,30953]"/>
  <match src="identifier: length [28023,28029]" dest="identifier: length [27867,27873]"/>
  <match src="returns: returns [13723,13730]" dest="returns: returns [13657,13664]"/>
  <match src="call_argument [45067,45081]" dest="call_argument [44843,44857]"/>
  <match src=",: , [53029,53030]" dest=",: , [52935,52936]"/>
  <match src="view: view [16318,16322]" dest="view: view [16252,16256]"/>
  <match src="function: function [27270,27278]" dest="function: function [27114,27122]"/>
  <match src="): ) [6582,6583]" dest="): ) [6549,6550]"/>
  <match src="visibility [6167,6175]" dest="visibility [6134,6142]"/>
  <match src="identifier: this [15280,15284]" dest="identifier: this [15214,15218]"/>
  <match src="): ) [16631,16632]" dest="): ) [16565,16566]"/>
  <match src="identifier: _verifyCallResult [17661,17678]" dest="identifier: _verifyCallResult [17595,17612]"/>
  <match src="[: [ [53822,53823]" dest="[: [ [53728,53729]"/>
  <match src="binary_expression [44466,44486]" dest="binary_expression [44242,44262]"/>
  <match src="return: return [29768,29774]" dest="return: return [29612,29618]"/>
  <match src="expression_statement [43735,43797]" dest="expression_statement [43511,43573]"/>
  <match src="return_type_definition [35998,36012]" dest="return_type_definition [35774,35788]"/>
  <match src="user_defined_type [51523,51540]" dest="user_defined_type [51298,51315]"/>
  <match src="primitive_type [46266,46273]" dest="primitive_type [46042,46049]"/>
  <match src="): ) [20556,20557]" dest="): ) [20433,20434]"/>
  <match src="+: + [45190,45191]" dest="+: + [44966,44967]"/>
  <match src="function_body [45378,45867]" dest="function_body [45154,45643]"/>
  <match src="return_type_definition [4091,4114]" dest="return_type_definition [4058,4081]"/>
  <match src="parameter [45364,45376]" dest="parameter [45140,45152]"/>
  <match src=".: . [15285,15286]" dest=".: . [15219,15220]"/>
  <match src="variable_declaration_statement [44424,44439]" dest="variable_declaration_statement [44200,44215]"/>
  <match src="}: } [43643,43644]" dest="}: } [43419,43420]"/>
  <match src="string [40812,40840]" dest="string [40587,40615]"/>
  <match src="assembly: assembly [49010,49018]" dest="assembly: assembly [48786,48794]"/>
  <match src=".: . [40226,40227]" dest=".: . [40002,40003]"/>
  <match src="parameter [32750,32762]" dest="parameter [32561,32573]"/>
  <match src="identifier: success [15600,15607]" dest="identifier: success [15534,15541]"/>
  <match src="primitive_type [30182,30189]" dest="primitive_type [30026,30033]"/>
  <match src="view: view [15899,15903]" dest="view: view [15833,15837]"/>
  <match src="virtual: virtual [32621,32628]" dest="virtual: virtual [32432,32439]"/>
  <match src="call_argument [46458,46465]" dest="call_argument [46234,46241]"/>
  <match src="call_argument [45083,45122]" dest="call_argument [44859,44898]"/>
  <match src=",: , [15607,15608]" dest=",: , [15541,15542]"/>
  <match src="yul_identifier [47470,47477]" dest="yul_identifier [47246,47253]"/>
  <match src="parameter [20449,20462]" dest="parameter [20326,20339]"/>
  <match src="(: ( [53130,53131]" dest="(: ( [53036,53037]"/>
  <match src="): ) [54121,54122]" dest="): ) [54027,54028]"/>
  <match src="call_expression [42706,42730]" dest="call_expression [42482,42506]"/>
  <match src="identifier: value [15551,15556]" dest="identifier: value [15485,15490]"/>
  <match src="number_literal: 0 [26264,26265]" dest="number_literal: 0 [26108,26109]"/>
  <match src="parameter [28487,28509]" dest="parameter [28331,28353]"/>
  <match src="(: ( [811,812]" dest="(: ( [811,812]"/>
  <match src="parenthesized_expression [22091,22097]" dest="parenthesized_expression [21968,21974]"/>
  <match src="identifier: item [42288,42292]" dest="identifier: item [42064,42068]"/>
  <match src="identifier: value [27381,27386]" dest="identifier: value [27225,27230]"/>
  <match src="-: - [49277,49278]" dest="-: - [49053,49054]"/>
  <match src="identifier: selector [19246,19254]" dest="identifier: selector [19123,19131]"/>
  <match src="storage: storage [26380,26387]" dest="storage: storage [26224,26231]"/>
  <match src="identifier: RLPItem [41553,41560]" dest="identifier: RLPItem [41329,41336]"/>
  <match src="member_expression [24208,24220]" dest="member_expression [24052,24064]"/>
  <match src="function_body [15253,15642]" dest="function_body [15187,15576]"/>
  <match src="{: { [47090,47091]" dest="{: { [46866,46867]"/>
  <match src="primitive_type [41572,41579]" dest="primitive_type [41348,41355]"/>
  <match src="return: return [45274,45280]" dest="return: return [45050,45056]"/>
  <match src="type_name [43021,43028]" dest="type_name [42797,42804]"/>
  <match src="identifier: _at [31880,31883]" dest="identifier: _at [31724,31727]"/>
  <match src="identifier: length [26454,26460]" dest="identifier: length [26298,26304]"/>
  <match src="): ) [20663,20664]" dest="): ) [20540,20541]"/>
  <match src="}: } [26050,26051]" dest="}: } [25894,25895]"/>
  <match src="expression_statement [5776,5823]" dest="expression_statement [5743,5790]"/>
  <match src="): ) [15344,15345]" dest="): ) [15278,15279]"/>
  <match src="memory: memory [14104,14110]" dest="memory: memory [14038,14044]"/>
  <match src="yul_function_call [47716,47730]" dest="yul_function_call [47492,47506]"/>
  <match src="solidity_version_comparison_operator [109,112]" dest="solidity_version_comparison_operator [109,112]"/>
  <match src="comment: // 1 byte for the length prefix [43807,43838]" dest="comment: // 1 byte for the length prefix [43583,43614]"/>
  <match src="string [14804,14847]" dest="string [14738,14781]"/>
  <match src="parameter [812,816]" dest="parameter [812,816]"/>
  <match src="identifier: _payloadOffset [42535,42549]" dest="identifier: _payloadOffset [42311,42325]"/>
  <match src="type_name [29512,29516]" dest="type_name [29356,29360]"/>
  <match src=".: . [36353,36354]" dest=".: . [36129,36130]"/>
  <match src="}: } [30303,30304]" dest="}: } [30147,30148]"/>
  <match src="type_name [26879,26886]" dest="type_name [26723,26730]"/>
  <match src="identifier: c [5756,5757]" dest="identifier: c [5723,5724]"/>
  <match src="=: = [24717,24718]" dest="=: = [24561,24562]"/>
  <match src="]: ] [40048,40049]" dest="]: ] [39824,39825]"/>
  <match src="): ) [4135,4136]" dest="): ) [4102,4103]"/>
  <match src=".: . [20546,20547]" dest=".: . [20423,20424]"/>
  <match src="return: return [4668,4674]" dest="return: return [4635,4641]"/>
  <match src="comment: // To implement this library for multiple types with as little code [23041,23108]" dest="comment: // To implement this library for multiple types with as little code [22885,22952]"/>
  <match src="string_literal [40812,40840]" dest="string_literal [40587,40615]"/>
  <match src="type_name [10251,10258]" dest="type_name [10218,10225]"/>
  <match src="(: ( [14162,14163]" dest="(: ( [14096,14097]"/>
  <match src="parameter [6156,6165]" dest="parameter [6123,6132]"/>
  <match src="string_literal [6226,6258]" dest="string_literal [6193,6225]"/>
  <match src="identifier: amount [12787,12793]" dest="identifier: amount [12721,12727]"/>
  <match src="member_expression [43856,43864]" dest="member_expression [43632,43640]"/>
  <match src=",: , [10198,10199]" dest=",: , [10165,10166]"/>
  <match src="add: add [18244,18247]" dest="add: add [18178,18181]"/>
  <match src="user_defined_type [26376,26379]" dest="user_defined_type [26220,26223]"/>
  <match src="identifier: result [42321,42327]" dest="identifier: result [42097,42103]"/>
  <match src="variable_declaration_statement [53954,54012]" dest="variable_declaration_statement [53860,53918]"/>
  <match src="+: + [46296,46297]" dest="+: + [46072,46073]"/>
  <match src=",: , [20172,20173]" dest=",: , [20049,20050]"/>
  <match src="return: return [24307,24313]" dest="return: return [24151,24157]"/>
  <match src="internal: internal [27626,27634]" dest="internal: internal [27470,27478]"/>
  <match src="primitive_type [44424,44431]" dest="primitive_type [44200,44207]"/>
  <match src="false [43175,43180]" dest="false [42951,42956]"/>
  <match src="uint256: uint256 [6145,6152]" dest="uint256: uint256 [6112,6119]"/>
  <match src="internal: internal [44002,44010]" dest="internal: internal [43778,43786]"/>
  <match src="identifier: STRING_SHORT_START [46913,46931]" dest="identifier: STRING_SHORT_START [46689,46707]"/>
  <match src="address: address [32638,32645]" dest="address: address [32449,32456]"/>
  <match src="call_argument [7960,7986]" dest="call_argument [7927,7953]"/>
  <match src="): ) [15381,15382]" dest="): ) [15315,15316]"/>
  <match src="yul_identifier [11521,11528]" dest="yul_identifier [11455,11462]"/>
  <match src="identifier: role [37707,37711]" dest="identifier: role [37483,37487]"/>
  <match src="(: ( [53581,53582]" dest="(: ( [53487,53488]"/>
  <match src="memory: memory [14169,14175]" dest="memory: memory [14103,14109]"/>
  <match src="return_type_definition [14720,14742]" dest="return_type_definition [14654,14676]"/>
  <match src="call_expression [21853,21922]" dest="call_expression [21730,21799]"/>
  <match src="member_expression [25594,25605]" dest="member_expression [25438,25449]"/>
  <match src="{: { [11499,11500]" dest="{: { [11433,11434]"/>
  <match src="identifier: Context [34423,34430]" dest="identifier: Context [34199,34206]"/>
  <match src="identifier: _values [25856,25863]" dest="identifier: _values [25700,25707]"/>
  <match src="function_definition [15827,16026]" dest="function_definition [15761,15960]"/>
  <match src=",: , [19206,19207]" dest=",: , [19083,19084]"/>
  <match src="=: = [45600,45601]" dest="=: = [45376,45377]"/>
  <match src="event_definition [2757,2835]" dest="event_definition [2757,2835]"/>
  <match src="expression_statement [47558,47597]" dest="expression_statement [47334,47373]"/>
  <match src="identifier: value [20457,20462]" dest="identifier: value [20334,20339]"/>
  <match src="assignment_expression [25700,25743]" dest="assignment_expression [25544,25587]"/>
  <match src="override: override [52888,52896]" dest="override: override [52794,52802]"/>
  <match src="call_expression [54050,54206]" dest="call_expression [53956,54112]"/>
  <match src="(: ( [44121,44122]" dest="(: ( [43897,43898]"/>
  <match src="function_body [7934,8018]" dest="function_body [7901,7985]"/>
  <match src="yul_function_call [48163,48185]" dest="yul_function_call [47939,47961]"/>
  <match src="comment: /**  * @dev Library for managing  * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive  * types.  *  * Sets have the following properties:  *  * - Elements are added, removed, and checked for existence in constant time  * (O(1)).  * - Elements are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableSet for EnumerableSet.AddressSet;  *  *     // Declare a set state variable  *     EnumerableSet.AddressSet private mySet;  * }  * ```  *  * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)  * and `uint256` (`UintSet`) are supported.  */ [22301,23010]" dest="comment: /**  * @dev Library for managing  * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive  * types.  *  * Sets have the following properties:  *  * - Elements are added, removed, and checked for existence in constant time  * (O(1)).  * - Elements are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableSet for EnumerableSet.AddressSet;  *  *     // Declare a set state variable  *     EnumerableSet.AddressSet private mySet;  * }  * ```  *  * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)  * and `uint256` (`UintSet`) are supported.  */ [22145,22854]"/>
  <match src="for: for [19078,19081]" dest="for: for [18955,18958]"/>
  <match src=",: , [5012,5013]" dest=",: , [4979,4980]"/>
  <match src="identifier: byte0 [43142,43147]" dest="identifier: byte0 [42918,42923]"/>
  <match src="identifier: a [5088,5089]" dest="identifier: a [5055,5056]"/>
  <match src="state_mutability [11188,11192]" dest="state_mutability [11122,11126]"/>
  <match src="}: } [18314,18315]" dest="}: } [18248,18249]"/>
  <match src="identifier: byteLen [47470,47477]" dest="identifier: byteLen [47246,47253]"/>
  <match src="return_statement [3862,3879]" dest="return_statement [3829,3846]"/>
  <match src="return: return [13755,13761]" dest="return: return [13689,13695]"/>
  <match src="member_expression [53732,53752]" dest="member_expression [53638,53658]"/>
  <match src="user_defined_type [27283,27293]" dest="user_defined_type [27127,27137]"/>
  <match src="(: ( [49356,49357]" dest="(: ( [49132,49133]"/>
  <match src="): ) [48377,48378]" dest="): ) [48153,48154]"/>
  <match src="yul_path [43084,43089]" dest="yul_path [42860,42865]"/>
  <match src="}: } [45261,45262]" dest="}: } [45037,45038]"/>
  <match src="type_cast_expression [53975,54011]" dest="type_cast_expression [53881,53917]"/>
  <match src="}: } [47607,47608]" dest="}: } [47383,47384]"/>
  <match src="function_definition [4348,4791]" dest="function_definition [4315,4758]"/>
  <match src="identifier: b [4383,4384]" dest="identifier: b [4350,4351]"/>
  <match src="}: } [49519,49520]" dest="}: } [49295,49296]"/>
  <match src="pragma: pragma [41275,41281]" dest="pragma: pragma [41050,41056]"/>
  <match src="): ) [46729,46730]" dest="): ) [46505,46506]"/>
  <match src="{: { [10260,10261]" dest="{: { [10227,10228]"/>
  <match src="]: ] [24226,24227]" dest="]: ] [24070,24071]"/>
  <match src="call_expression [41973,42001]" dest="call_expression [41749,41777]"/>
  <match src="binary_expression [43856,43870]" dest="binary_expression [43632,43646]"/>
  <match src="type_name [48783,48790]" dest="type_name [48559,48566]"/>
  <match src="): ) [29588,29589]" dest="): ) [29432,29433]"/>
  <match src="type_name [41326,41331]" dest="type_name [41102,41107]"/>
  <match src="yul_evm_builtin [47769,47774]" dest="yul_evm_builtin [47545,47550]"/>
  <match src="state_mutability [8569,8573]" dest="state_mutability [8536,8540]"/>
  <match src="call_expression [54219,54340]" dest="call_expression [54177,54282]"/>
  <match src="yul_path [43533,43536]" dest="yul_path [43309,43312]"/>
  <match src="call_argument [38284,38334]" dest="call_argument [38060,38110]"/>
  <match src="identifier: _revokeRole [38348,38359]" dest="identifier: _revokeRole [38124,38135]"/>
  <match src="]: ] [42342,42343]" dest="]: ] [42118,42119]"/>
  <match src="identifier: safeIncreaseAllowance [20396,20417]" dest="identifier: safeIncreaseAllowance [20273,20294]"/>
  <match src="variable_declaration [16498,16510]" dest="variable_declaration [16432,16444]"/>
  <match src="(: ( [53111,53112]" dest="(: ( [53017,53018]"/>
  <match src="{: { [42635,42636]" dest="{: { [42411,42412]"/>
  <match src="comment: // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that [21602,21709]" dest="comment: // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that [21479,21586]"/>
  <match src="member_expression [31411,31421]" dest="member_expression [31255,31265]"/>
  <match src="identifier: target [13775,13781]" dest="identifier: target [13709,13715]"/>
  <match src="(: ( [4726,4727]" dest="(: ( [4693,4694]"/>
  <match src="user_defined_type [30567,30574]" dest="user_defined_type [30411,30418]"/>
  <match src="call_argument [54072,54122]" dest="call_argument [53978,54028]"/>
  <match src="function: function [6132,6140]" dest="function: function [6099,6107]"/>
  <match src="struct_expression [12764,12795]" dest="struct_expression [12698,12729]"/>
  <match src="return_statement [43168,43181]" dest="return_statement [42944,42957]"/>
  <match src="[: [ [54299,54300]" dest="[: [ [54152,54153]"/>
  <match src="identifier: len [45607,45610]" dest="identifier: len [45383,45386]"/>
  <match src="array_access [25940,25966]" dest="array_access [25784,25810]"/>
  <match src="(: ( [44946,44947]" dest="(: ( [44722,44723]"/>
  <match src=",: , [19258,19259]" dest=",: , [19135,19136]"/>
  <match src="member_expression [44466,44477]" dest="member_expression [44242,44253]"/>
  <match src="primitive_type [53510,53515]" dest="primitive_type [53416,53421]"/>
  <match src="return: return [7380,7386]" dest="return: return [7347,7353]"/>
  <match src="): ) [21463,21464]" dest="): ) [21340,21341]"/>
  <match src="function_definition [9337,9502]" dest="function_definition [9304,9469]"/>
  <match src="primitive_type [53482,53489]" dest="primitive_type [53388,53395]"/>
  <match src="function_definition [8497,8663]" dest="function_definition [8464,8630]"/>
  <match src="comment: // benefit is lost if 'b' is also tested. [4524,4565]" dest="comment: // benefit is lost if 'b' is also tested. [4491,4532]"/>
  <match src="return_statement [47947,47962]" dest="return_statement [47723,47738]"/>
  <match src="binary_expression [25726,25743]" dest="binary_expression [25570,25587]"/>
  <match src="type_name [15504,15509]" dest="type_name [15438,15443]"/>
  <match src="identifier: value [20364,20369]" dest="identifier: value [20241,20246]"/>
  <match src="address: address [53464,53471]" dest="address: address [53370,53377]"/>
  <match src=":=: := [49334,49336]" dest=":=: := [49110,49112]"/>
  <match src="(: ( [54249,54250]" dest="(: ( [54207,54208]"/>
  <match src="(: ( [44024,44025]" dest="(: ( [43800,43801]"/>
  <match src="call_argument [53112,53121]" dest="call_argument [53018,53027]"/>
  <match src="identifier: returndata [21840,21850]" dest="identifier: returndata [21717,21727]"/>
  <match src="identifier: mod [10174,10177]" dest="identifier: mod [10141,10144]"/>
  <match src="identifier: length [29694,29700]" dest="identifier: length [29538,29544]"/>
  <match src="primitive_type [42604,42611]" dest="primitive_type [42380,42387]"/>
  <match src="&quot;: &quot; [40812,40813]" dest="&quot;: &quot; [40587,40588]"/>
  <match src="(: ( [53453,53454]" dest="(: ( [53359,53360]"/>
  <match src="identifier: destpart [49483,49491]" dest="identifier: destpart [49259,49267]"/>
  <match src="call_argument [40927,40931]" dest="call_argument [40702,40706]"/>
  <match src="type_name [52059,52066]" dest="type_name [51834,51841]"/>
  <match src="): ) [4782,4783]" dest="): ) [4749,4750]"/>
  <match src="+: + [3809,3810]" dest="+: + [3776,3777]"/>
  <match src="address: address [15855,15862]" dest="address: address [15789,15796]"/>
  <match src="comment: /**      * @dev Revokes `role` from the calling account.      *      * Roles are often managed via {grantRole} and {revokeRole}: this function's      * purpose is to provide a mechanism for accounts to lose their privileges      * if they are compromised (such as when a trusted device is misplaced).      *      * If the calling account had been granted `role`, emits a {RoleRevoked}      * event.      *      * Requirements:      *      * - the caller must be `account`.      */ [38390,38883]" dest="comment: /**      * @dev Revokes `role` from the calling account.      *      * Roles are often managed via {grantRole} and {revokeRole}: this function's      * purpose is to provide a mechanism for accounts to lose their privileges      * if they are compromised (such as when a trusted device is misplaced).      *      * If the calling account had been granted `role`, emits a {RoleRevoked}      * event.      *      * Requirements:      *      * - the caller must be `account`.      */ [38166,38659]"/>
  <match src="): ) [47389,47390]" dest="): ) [47165,47166]"/>
  <match src="function_definition [28475,28606]" dest="function_definition [28319,28450]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [26066,26138]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [25910,25982]"/>
  <match src="expression_statement [45795,45836]" dest="expression_statement [45571,45612]"/>
  <match src="storage: storage [29461,29468]" dest="storage: storage [29305,29312]"/>
  <match src="return_type_definition [4400,4423]" dest="return_type_definition [4367,4390]"/>
  <match src="return: return [45846,45852]" dest="return: return [45622,45628]"/>
  <match src="identifier: account [11521,11528]" dest="identifier: account [11455,11462]"/>
  <match src="call_argument [15972,15976]" dest="call_argument [15906,15910]"/>
  <match src="(: ( [40943,40944]" dest="(: ( [40718,40719]"/>
  <match src="parameter [15159,15176]" dest="parameter [15093,15110]"/>
  <match src=",: , [52048,52049]" dest=",: , [51823,51824]"/>
  <match src="): ) [39979,39980]" dest="): ) [39755,39756]"/>
  <match src="solidity_pragma_token [18505,18528]" dest="solidity_pragma_token [22117,22140]"/>
  <match src="identifier: _msgSender [40933,40943]" dest="identifier: _msgSender [40708,40718]"/>
  <match src="returns: returns [27635,27642]" dest="returns: returns [27479,27486]"/>
  <match src="yul_evm_builtin [18237,18243]" dest="yul_evm_builtin [18171,18177]"/>
  <match src="identifier: errorMessage [18347,18359]" dest="identifier: errorMessage [18281,18293]"/>
  <match src="identifier: dataLen [42581,42588]" dest="identifier: dataLen [42357,42364]"/>
  <match src="): ) [4666,4667]" dest="): ) [4633,4634]"/>
  <match src="string [16977,17018]" dest="string [16911,16952]"/>
  <match src="primitive_type [44025,44032]" dest="primitive_type [43801,43808]"/>
  <match src="type_name [14098,14103]" dest="type_name [14032,14037]"/>
  <match src=".: . [26993,26994]" dest=".: . [26837,26838]"/>
  <match src="call_argument [45800,45820]" dest="call_argument [45576,45596]"/>
  <match src="identifier: byteLen [47661,47668]" dest="identifier: byteLen [47437,47444]"/>
  <match src="identifier: set [31348,31351]" dest="identifier: set [31192,31195]"/>
  <match src="returns: returns [16901,16908]" dest="returns: returns [16835,16842]"/>
  <match src="string_literal [46529,46575]" dest="string_literal [46305,46351]"/>
  <match src="member_expression [36031,36060]" dest="member_expression [35807,35836]"/>
  <match src="identifier: target [16254,16260]" dest="identifier: target [16188,16194]"/>
  <match src="&lt;: &lt; [46970,46971]" dest="&lt;: &lt; [46746,46747]"/>
  <match src="return: return [47947,47953]" dest="return: return [47723,47729]"/>
  <match src=",: , [44066,44067]" dest=",: , [43842,43843]"/>
  <match src="): ) [38280,38281]" dest="): ) [38056,38057]"/>
  <match src="function: function [29188,29196]" dest="function: function [29032,29040]"/>
  <match src="): ) [4384,4385]" dest="): ) [4351,4352]"/>
  <match src="type_name [46715,46722]" dest="type_name [46491,46498]"/>
  <match src="primitive_type [7880,7887]" dest="primitive_type [7847,7854]"/>
  <match src="identifier: memPtr [44222,44228]" dest="identifier: memPtr [43998,44004]"/>
  <match src="type_name [50338,50345]" dest="type_name [50113,50120]"/>
  <match src="yul_identifier [45228,45234]" dest="yul_identifier [45004,45010]"/>
  <match src="(: ( [49482,49483]" dest="(: ( [49258,49259]"/>
  <match src="identifier: account [38366,38373]" dest="identifier: account [38142,38149]"/>
  <match src="bytes: bytes [14163,14168]" dest="bytes: bytes [14097,14102]"/>
  <match src="(: ( [32749,32750]" dest="(: ( [32560,32561]"/>
  <match src=",: , [2575,2576]" dest=",: , [2575,2576]"/>
  <match src=",: , [5407,5408]" dest=",: , [5374,5375]"/>
  <match src="calldata: calldata [50993,51001]" dest="calldata: calldata [50768,50776]"/>
  <match src="-: - [48559,48560]" dest="-: - [48335,48336]"/>
  <match src="-: - [48522,48523]" dest="-: - [48298,48299]"/>
  <match src=",: , [53471,53472]" dest=",: , [53377,53378]"/>
  <match src="variable_declaration_statement [42304,42351]" dest="variable_declaration_statement [42080,42127]"/>
  <match src="state_mutability [4994,4998]" dest="state_mutability [4961,4965]"/>
  <match src="primitive_type [40659,40665]" dest="primitive_type [40434,40440]"/>
  <match src="=: = [51265,51266]" dest="=: = [51041,51042]"/>
  <match src="number_literal: 1 [25154,25155]" dest="number_literal: 1 [24998,24999]"/>
  <match src="(: ( [54119,54120]" dest="(: ( [54025,54026]"/>
  <match src="call_expression [42382,42406]" dest="call_expression [42158,42182]"/>
  <match src="identifier: log [53523,53526]" dest="identifier: log [53429,53432]"/>
  <match src="identifier: isList [42209,42215]" dest="identifier: isList [41985,41991]"/>
  <match src="visibility [31353,31361]" dest="visibility [31197,31205]"/>
  <match src="(: ( [28978,28979]" dest="(: ( [28822,28823]"/>
  <match src="identifier: tryMul [4357,4363]" dest="identifier: tryMul [4324,4330]"/>
  <match src="call_expression [44045,44103]" dest="call_expression [43821,43879]"/>
  <match src="comment: // topics [53756,53765]" dest="comment: // topics [53662,53671]"/>
  <match src="identifier: result [45658,45664]" dest="identifier: result [45434,45440]"/>
  <match src="function_body [28558,28606]" dest="function_body [28402,28450]"/>
  <match src=",: , [37711,37712]" dest=",: , [37487,37488]"/>
  <match src=",: , [39960,39961]" dest=",: , [39736,39737]"/>
  <match src="parameter [17332,17344]" dest="parameter [17266,17278]"/>
  <match src="bytes: bytes [51491,51496]" dest="bytes: bytes [51266,51271]"/>
  <match src=",: , [27686,27687]" dest=",: , [27530,27531]"/>
  <match src="payable: payable [32646,32653]" dest="payable: payable [32457,32464]"/>
  <match src=".: . [44363,44364]" dest=".: . [44139,44140]"/>
  <match src="binary_expression [6631,6637]" dest="binary_expression [6598,6604]"/>
  <match src="(: ( [31410,31411]" dest="(: ( [31254,31255]"/>
  <match src="): ) [15888,15889]" dest="): ) [15822,15823]"/>
  <match src="identifier: memPtr [44471,44477]" dest="identifier: memPtr [44247,44253]"/>
  <match src="(: ( [29747,29748]" dest="(: ( [29591,29592]"/>
  <match src="uint256: uint256 [1888,1895]" dest="uint256: uint256 [1888,1895]"/>
  <match src="identifier: _indexes [25704,25712]" dest="identifier: _indexes [25548,25556]"/>
  <match src="string_literal [44138,44170]" dest="string_literal [43914,43946]"/>
  <match src="&lt;=: &lt;= [44131,44133]" dest="&lt;=: &lt;= [43907,43909]"/>
  <match src="parameter [5008,5012]" dest="parameter [4975,4979]"/>
  <match src="return: return [42794,42800]" dest="return: return [42570,42576]"/>
  <match src="pure: pure [48855,48859]" dest="pure: pure [48631,48635]"/>
  <match src="identifier: numItems [45991,45999]" dest="identifier: numItems [45767,45775]"/>
  <match src="yul_evm_builtin [47466,47469]" dest="yul_evm_builtin [47242,47245]"/>
  <match src="identifier: newAllowance [20651,20663]" dest="identifier: newAllowance [20528,20540]"/>
  <match src="parameter [42938,42957]" dest="parameter [42714,42733]"/>
  <match src="): ) [44370,44371]" dest="): ) [44146,44147]"/>
  <match src="identifier: AddressSet [29450,29460]" dest="identifier: AddressSet [29294,29304]"/>
  <match src="{: { [7314,7315]" dest="{: { [7281,7282]"/>
  <match src=",: , [5380,5381]" dest=",: , [5347,5348]"/>
  <match src="parameter [29261,29265]" dest="parameter [29105,29109]"/>
  <match src="primitive_type [29512,29516]" dest="primitive_type [29356,29360]"/>
  <match src="identifier: a [6670,6671]" dest="identifier: a [6637,6638]"/>
  <match src="): ) [354,355]" dest="): ) [354,355]"/>
  <match src="internal: internal [19161,19169]" dest="internal: internal [19038,19046]"/>
  <match src="): ) [27624,27625]" dest="): ) [27468,27469]"/>
  <match src="function_definition [35938,36077]" dest="function_definition [35714,35853]"/>
  <match src="parameter [46715,46729]" dest="parameter [46491,46505]"/>
  <match src="else: else [26007,26011]" dest="else: else [25851,25855]"/>
  <match src="type_name [7305,7312]" dest="type_name [7272,7279]"/>
  <match src="function: function [43312,43320]" dest="function: function [43088,43096]"/>
  <match src="bool: bool [28930,28934]" dest="bool: bool [28774,28778]"/>
  <match src="function_definition [30146,30304]" dest="function_definition [29990,30148]"/>
  <match src="identifier: _itemLength [42660,42671]" dest="identifier: _itemLength [42436,42447]"/>
  <match src=":=: := [49406,49408]" dest=":=: := [49182,49184]"/>
  <match src="}: } [44756,44757]" dest="}: } [44532,44533]"/>
  <match src="uint256: uint256 [48106,48113]" dest="uint256: uint256 [47882,47889]"/>
  <match src="comment: // solhint-disable-next-line max-line-length [20064,20108]" dest="comment: // solhint-disable-next-line max-line-length [19941,19985]"/>
  <match src="identifier: items [42344,42349]" dest="identifier: items [42120,42125]"/>
  <match src="type_name [29474,29481]" dest="type_name [29318,29325]"/>
  <match src="string [15304,15344]" dest="string [15238,15278]"/>
  <match src="number_literal: 1 [53743,53744]" dest="number_literal: 1 [53649,53650]"/>
  <match src="identifier: set [26442,26445]" dest="identifier: set [26286,26289]"/>
  <match src="}: } [43125,43126]" dest="}: } [42901,42902]"/>
  <match src="identifier: listLength [42369,42379]" dest="identifier: listLength [42145,42155]"/>
  <match src="}: } [27927,27928]" dest="}: } [27771,27772]"/>
  <match src="): ) [48581,48582]" dest="): ) [48357,48358]"/>
  <match src="&amp;&amp;: &amp;&amp; [48351,48353]" dest="&amp;&amp;: &amp;&amp; [48127,48129]"/>
  <match src="return_type_definition [27859,27873]" dest="return_type_definition [27703,27717]"/>
  <match src="}: } [54347,54348]" dest="}: } [54347,54348]"/>
  <match src="(: ( [46457,46458]" dest="(: ( [46233,46234]"/>
  <match src="add: add [41928,41931]" dest="add: add [41704,41707]"/>
  <match src="identifier: at [30155,30157]" dest="identifier: at [29999,30001]"/>
  <match src="struct_member [30358,30369]" dest="struct_member [30202,30213]"/>
  <match src="visibility [19161,19169]" dest="visibility [19038,19046]"/>
  <match src=",: , [4177,4178]" dest=",: , [4144,4145]"/>
  <match src="): ) [49350,49351]" dest="): ) [49126,49127]"/>
  <match src="yul_path [47720,47726]" dest="yul_path [47496,47502]"/>
  <match src="call_expression [27668,27694]" dest="call_expression [27512,27538]"/>
  <match src="call_argument [28987,29001]" dest="call_argument [28831,28845]"/>
  <match src=",: , [19807,19808]" dest=",: , [19684,19685]"/>
  <match src="(: ( [52136,52137]" dest="(: ( [52042,52043]"/>
  <match src="): ) [14709,14710]" dest="): ) [14643,14644]"/>
  <match src="expression_statement [46426,46467]" dest="expression_statement [46202,46243]"/>
  <match src="storage: storage [31340,31347]" dest="storage: storage [31184,31191]"/>
  <match src="yul_path [49045,49049]" dest="yul_path [48821,48825]"/>
  <match src="state_mutability [48072,48076]" dest="state_mutability [47848,47852]"/>
  <match src="): ) [18262,18263]" dest="): ) [18196,18197]"/>
  <match src="parameter [11162,11177]" dest="parameter [11096,11111]"/>
  <match src="[: [ [27001,27002]" dest="[: [ [26845,26846]"/>
  <match src="pure: pure [42144,42148]" dest="pure: pure [41920,41924]"/>
  <match src="identifier: Bytes32Set [28030,28040]" dest="identifier: Bytes32Set [27874,27884]"/>
  <match src="&quot;: &quot; [12622,12623]" dest="&quot;: &quot; [12556,12557]"/>
  <match src="member_expression [46353,46364]" dest="member_expression [46129,46140]"/>
  <match src="expression_statement [51201,51236]" dest="expression_statement [50977,51012]"/>
  <match src="bytes: bytes [14729,14734]" dest="bytes: bytes [14663,14668]"/>
  <match src="identifier: STRING_LONG_START [41388,41405]" dest="identifier: STRING_LONG_START [41164,41181]"/>
  <match src="string [45083,45122]" dest="string [44859,44898]"/>
  <match src="call_argument [41807,41822]" dest="call_argument [41583,41598]"/>
  <match src="identifier: members [36354,36361]" dest="identifier: members [36130,36137]"/>
  <match src="}: } [26467,26468]" dest="}: } [26311,26312]"/>
  <match src="call_expression [37764,37809]" dest="call_expression [37540,37585]"/>
  <match src="contract: contract [51386,51394]" dest="contract: contract [51161,51169]"/>
  <match src="identifier: recipient [2292,2301]" dest="identifier: recipient [2292,2301]"/>
  <match src="yul_identifier [49347,49350]" dest="yul_identifier [49123,49126]"/>
  <match src="): ) [19159,19160]" dest="): ) [19036,19037]"/>
  <match src="state_mutability [6593,6597]" dest="state_mutability [6560,6564]"/>
  <match src="variable_declaration [15490,15502]" dest="variable_declaration [15424,15436]"/>
  <match src="string_literal [52241,52257]" dest="string_literal [52147,52163]"/>
  <match src="(: ( [51208,51209]" dest="(: ( [50984,50985]"/>
  <match src="solidity: solidity [2938,2946]" dest="solidity: solidity [2905,2913]"/>
  <match src="primitive_type [28930,28934]" dest="primitive_type [28774,28778]"/>
  <match src="primitive_type [14098,14103]" dest="primitive_type [14032,14037]"/>
  <match src="type_name [46336,46343]" dest="type_name [46112,46119]"/>
  <match src="identifier: value [31131,31136]" dest="identifier: value [30975,30980]"/>
  <match src="&quot;: &quot; [45083,45084]" dest="&quot;: &quot; [44859,44860]"/>
  <match src="function: function [48024,48032]" dest="function: function [47800,47808]"/>
  <match src="uint160: uint160 [29321,29328]" dest="uint160: uint160 [29165,29172]"/>
  <match src="identifier: item [43038,43042]" dest="identifier: item [42814,42818]"/>
  <match src="(: ( [2534,2535]" dest="(: ( [2534,2535]"/>
  <match src="(: ( [43980,43981]" dest="(: ( [43756,43757]"/>
  <match src="identifier: set [30583,30586]" dest="identifier: set [30427,30430]"/>
  <match src="identifier: set [25852,25855]" dest="identifier: set [25696,25699]"/>
  <match src="uint256: uint256 [28077,28084]" dest="uint256: uint256 [27921,27928]"/>
  <match src="user_defined_type [51450,51463]" dest="user_defined_type [51225,51238]"/>
  <match src="type_alias [34499,34506]" dest="type_alias [34275,34282]"/>
  <match src="call_argument [40800,40810]" dest="call_argument [40575,40585]"/>
  <match src="member_expression [37077,37100]" dest="member_expression [36853,36876]"/>
  <match src="parameter [28549,28556]" dest="parameter [28393,28400]"/>
  <match src="==: == [6633,6635]" dest="==: == [6600,6602]"/>
  <match src="identifier: require [38968,38975]" dest="identifier: require [38744,38751]"/>
  <match src="function_body [27650,27702]" dest="function_body [27494,27546]"/>
  <match src="+: + [48527,48528]" dest="+: + [48303,48304]"/>
  <match src="augmented_assignment_expression [48977,48993]" dest="augmented_assignment_expression [48753,48769]"/>
  <match src="identifier: from [19331,19335]" dest="identifier: from [19208,19212]"/>
  <match src="member_expression [15531,15542]" dest="member_expression [15465,15476]"/>
  <match src="primitive_type [52799,52806]" dest="primitive_type [52705,52712]"/>
  <match src="type_name [35822,35829]" dest="type_name [35598,35605]"/>
  <match src="type_name [45671,45676]" dest="type_name [45447,45452]"/>
  <match src="parameter [40349,40361]" dest="parameter [40125,40137]"/>
  <match src="solidity: solidity [18505,18513]" dest="solidity: solidity [22117,22125]"/>
  <match src="parameter [1136,1151]" dest="parameter [1136,1151]"/>
  <match src="expression_statement [44114,44172]" dest="expression_statement [43890,43948]"/>
  <match src="string_literal [12796,12798]" dest="string_literal [12730,12732]"/>
  <match src="primitive_type [20523,20530]" dest="primitive_type [20400,20407]"/>
  <match src="yul_path [44537,44543]" dest="yul_path [44313,44319]"/>
  <match src="identifier: STRING_SHORT_START [47022,47040]" dest="identifier: STRING_SHORT_START [46798,46816]"/>
  <match src=",: , [14802,14803]" dest=",: , [14736,14737]"/>
  <match src="visibility [324,332]" dest="visibility [324,332]"/>
  <match src="call_expression [12764,12799]" dest="call_expression [12698,12733]"/>
  <match src="identifier: require [26899,26906]" dest="identifier: require [26743,26750]"/>
  <match src="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [129,201]" dest="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [129,201]"/>
  <match src="identifier: _grantRole [40141,40151]" dest="identifier: _grantRole [39917,39927]"/>
  <match src="true: true [5082,5086]" dest="true: true [5049,5053]"/>
  <match src="inheritance_specifier [51413,51428]" dest="inheritance_specifier [51188,51203]"/>
  <match src="pragma: pragma [33035,33041]" dest="pragma: pragma [18377,18383]"/>
  <match src="comment: // @return indicator whether encoded payload is a list. negate this function call for isData. [42823,42916]" dest="comment: // @return indicator whether encoded payload is a list. negate this function call for isData. [42599,42692]"/>
  <match src="identifier: AccessControl [34406,34419]" dest="identifier: AccessControl [34182,34195]"/>
  <match src="binary_expression [48562,48581]" dest="binary_expression [48338,48357]"/>
  <match src="yul_variable_declaration [47133,47164]" dest="yul_variable_declaration [46909,46940]"/>
  <match src="identifier: c [4781,4782]" dest="identifier: c [4748,4749]"/>
  <match src=",: , [47726,47727]" dest=",: , [47502,47503]"/>
  <match src="struct: struct [23490,23496]" dest="struct: struct [23334,23340]"/>
  <match src="(: ( [46509,46510]" dest="(: ( [46285,46286]"/>
  <match src="primitive_type [48828,48835]" dest="primitive_type [48604,48611]"/>
  <match src="}: } [22163,22164]" dest="}: } [22040,22041]"/>
  <match src="returns: returns [23978,23985]" dest="returns: returns [23822,23829]"/>
  <match src="using_directive [19064,19090]" dest="using_directive [18941,18967]"/>
  <match src="assignment_expression [42650,42679]" dest="assignment_expression [42426,42455]"/>
  <match src="return_type_definition [7296,7313]" dest="return_type_definition [7263,7280]"/>
  <match src="identifier: success [15495,15502]" dest="identifier: success [15429,15436]"/>
  <match src="boolean_literal [24314,24319]" dest="boolean_literal [24158,24163]"/>
  <match src="yul_identifier [47137,47144]" dest="yul_identifier [46913,46920]"/>
  <match src="==: == [5040,5042]" dest="==: == [5007,5009]"/>
  <match src="internal: internal [3746,3754]" dest="internal: internal [3713,3721]"/>
  <match src="expression_statement [26899,26973]" dest="expression_statement [26743,26817]"/>
  <match src="primitive_type [34683,34690]" dest="primitive_type [34459,34466]"/>
  <match src="function_body [36013,36077]" dest="function_body [35789,35853]"/>
  <match src="call_argument [36061,36068]" dest="call_argument [35837,35844]"/>
  <match src="variable_declaration_statement [53612,53677]" dest="variable_declaration_statement [53518,53583]"/>
  <match src="string_literal [12827,12887]" dest="string_literal [12761,12821]"/>
  <match src="state_variable_declaration [41464,41502]" dest="state_variable_declaration [41240,41278]"/>
  <match src="identifier: offset [45613,45619]" dest="identifier: offset [45389,45395]"/>
  <match src="]: ] [40093,40094]" dest="]: ] [39869,39870]"/>
  <match src=",: , [52816,52817]" dest=",: , [52722,52723]"/>
  <match src="(: ( [28872,28873]" dest="(: ( [28716,28717]"/>
  <match src="identifier: copy [45795,45799]" dest="identifier: copy [45571,45575]"/>
  <match src="binary_expression [4130,4135]" dest="binary_expression [4097,4102]"/>
  <match src="yul_evm_builtin [49413,49418]" dest="yul_evm_builtin [49189,49194]"/>
  <match src="): ) [44228,44229]" dest="): ) [44004,44005]"/>
  <match src="visibility [19364,19372]" dest="visibility [19241,19249]"/>
  <match src="function: function [30861,30869]" dest="function: function [30705,30713]"/>
  <match src="&quot;: &quot; [14804,14805]" dest="&quot;: &quot; [14738,14739]"/>
  <match src="}: } [47507,47508]" dest="}: } [47283,47284]"/>
  <match src="identifier: a [8005,8006]" dest="identifier: a [7972,7973]"/>
  <match src="identifier: value [29329,29334]" dest="identifier: value [29173,29178]"/>
  <match src="): ) [37027,37028]" dest="): ) [36803,36804]"/>
  <match src="parameter [19323,19335]" dest="parameter [19200,19212]"/>
  <match src="expression_statement [54219,54341]" dest="expression_statement [54177,54283]"/>
  <match src="identifier: Transfer [2526,2534]" dest="identifier: Transfer [2526,2534]"/>
  <match src="call_argument [6218,6224]" dest="call_argument [6185,6191]"/>
  <match src="(: ( [52968,52969]" dest="(: ( [52874,52875]"/>
  <match src="primitive_type [52017,52024]" dest="primitive_type [51792,51799]"/>
  <match src="): ) [27648,27649]" dest="): ) [27492,27493]"/>
  <match src="-: - [47574,47575]" dest="-: - [47350,47351]"/>
  <match src="): ) [49430,49431]" dest="): ) [49206,49207]"/>
  <match src="primitive_type [15239,15244]" dest="primitive_type [15173,15178]"/>
  <match src="uint256: uint256 [26415,26422]" dest="uint256: uint256 [26259,26266]"/>
  <match src="function: function [28475,28483]" dest="function: function [28319,28327]"/>
  <match src="(: ( [40498,40499]" dest="(: ( [40274,40275]"/>
  <match src="yul_assignment [47869,47909]" dest="yul_assignment [47645,47685]"/>
  <match src="identifier: logRLPList [54289,54299]" dest="identifier: logRLPList [54142,54152]"/>
  <match src="identifier: item [44466,44470]" dest="identifier: item [44242,44246]"/>
  <match src=".: . [40049,40050]" dest=".: . [39825,39826]"/>
  <match src="): ) [42000,42001]" dest="): ) [41776,41777]"/>
  <match src="function: function [48759,48767]" dest="function: function [48535,48543]"/>
  <match src="member_expression [44359,44370]" dest="member_expression [44135,44146]"/>
  <match src="pragma: pragma [94,100]" dest="pragma: pragma [94,100]"/>
  <match src=":=: := [46853,46855]" dest=":=: := [46629,46631]"/>
  <match src="type_name [15871,15876]" dest="type_name [15805,15810]"/>
  <match src="type_name [23701,23729]" dest="type_name [23545,23573]"/>
  <match src="call_expression [40783,40841]" dest="call_expression [40558,40616]"/>
  <match src="type_name [24548,24555]" dest="type_name [24392,24399]"/>
  <match src="=: = [46282,46283]" dest="=: = [46058,46059]"/>
  <match src="function: function [36251,36259]" dest="function: function [36027,36035]"/>
  <match src="return_statement [30240,30297]" dest="return_statement [30084,30141]"/>
  <match src="identifier: returndata [17941,17951]" dest="identifier: returndata [17875,17885]"/>
  <match src="identifier: length [31325,31331]" dest="identifier: length [31169,31175]"/>
  <match src="tuple_expression [3869,3878]" dest="tuple_expression [3836,3845]"/>
  <match src="(: ( [49340,49341]" dest="(: ( [49116,49117]"/>
  <match src="type_name [503,510]" dest="type_name [503,510]"/>
  <match src="member_expression [19231,19245]" dest="member_expression [19108,19122]"/>
  <match src="primitive_type [44382,44389]" dest="primitive_type [44158,44165]"/>
  <match src="primitive_type [5748,5755]" dest="primitive_type [5715,5722]"/>
  <match src="variable_declaration_statement [3795,3813]" dest="variable_declaration_statement [3762,3780]"/>
  <match src="call_expression [15582,15634]" dest="call_expression [15516,15568]"/>
  <match src=",: , [20932,20933]" dest=",: , [20809,20810]"/>
  <match src="variable_declaration [25170,25187]" dest="variable_declaration [25014,25031]"/>
  <match src="return_statement [30638,30678]" dest="return_statement [30482,30522]"/>
  <match src="string: string [40717,40723]" dest="string: string [40492,40498]"/>
  <match src="user_defined_type [23938,23941]" dest="user_defined_type [23782,23785]"/>
  <match src="): ) [40299,40300]" dest="): ) [40075,40076]"/>
  <match src="): ) [37728,37729]" dest="): ) [37504,37505]"/>
  <match src="yul_identifier [47754,47761]" dest="yul_identifier [47530,47537]"/>
  <match src="expression_statement [25940,25967]" dest="expression_statement [25784,25811]"/>
  <match src="memory: memory [15877,15883]" dest="memory: memory [15811,15817]"/>
  <match src="state_mutability [31362,31366]" dest="state_mutability [31206,31210]"/>
  <match src="parameter [26842,26855]" dest="parameter [26686,26699]"/>
  <match src="call_argument [42425,42447]" dest="call_argument [42201,42223]"/>
  <match src="(: ( [53665,53666]" dest="(: ( [53571,53572]"/>
  <match src="number_literal: 1 [53999,54000]" dest="number_literal: 1 [53905,53906]"/>
  <match src="identifier: spender [1879,1886]" dest="identifier: spender [1879,1886]"/>
  <match src="primitive_type [26217,26221]" dest="primitive_type [26061,26065]"/>
  <match src="): ) [48845,48846]" dest="): ) [48621,48622]"/>
  <match src="): ) [4737,4738]" dest="): ) [4704,4705]"/>
  <match src="): ) [28934,28935]" dest="): ) [28778,28779]"/>
  <match src="): ) [29003,29004]" dest="): ) [28847,28848]"/>
  <match src="call_expression [40919,40946]" dest="call_expression [40694,40721]"/>
  <match src="): ) [40741,40742]" dest="): ) [40516,40517]"/>
  <match src="comment: // right shifting to the correct length [47812,47851]" dest="comment: // right shifting to the correct length [47588,47627]"/>
  <match src="uint160: uint160 [29574,29581]" dest="uint160: uint160 [29418,29425]"/>
  <match src=",: , [35795,35796]" dest=",: , [35571,35572]"/>
  <match src="event_paramater [2557,2575]" dest="event_paramater [2557,2575]"/>
  <match src="): ) [52923,52924]" dest="): ) [52829,52830]"/>
  <match src="identifier: memPtr [41602,41608]" dest="identifier: memPtr [41378,41384]"/>
  <match src="call_expression [39064,39090]" dest="call_expression [38840,38866]"/>
  <match src="identifier: abi [19208,19211]" dest="identifier: abi [19085,19088]"/>
  <match src=".: . [45426,45427]" dest=".: . [45202,45203]"/>
  <match src="call_argument [20308,20370]" dest="call_argument [20185,20247]"/>
  <match src="user_defined_type [43671,43678]" dest="user_defined_type [43447,43454]"/>
  <match src="variable_declaration [20778,20798]" dest="variable_declaration [20655,20675]"/>
  <match src="identifier: set [24208,24211]" dest="identifier: set [24052,24055]"/>
  <match src=",: , [24022,24023]" dest=",: , [23866,23867]"/>
  <match src="identifier: destpart [49397,49405]" dest="identifier: destpart [49173,49181]"/>
  <match src="address: address [13679,13686]" dest="address: address [13613,13620]"/>
  <match src="parameter [16246,16260]" dest="parameter [16180,16194]"/>
  <match src="call_argument [16557,16561]" dest="call_argument [16491,16495]"/>
  <match src="string [39001,39050]" dest="string [38777,38826]"/>
  <match src="identifier: target [14669,14675]" dest="identifier: target [14603,14609]"/>
  <match src="identifier: value [24556,24561]" dest="identifier: value [24400,24405]"/>
  <match src="parameter [40152,40164]" dest="parameter [39928,39940]"/>
  <match src="identifier: amount [1896,1902]" dest="identifier: amount [1896,1902]"/>
  <match src="assignment_expression [24208,24248]" dest="assignment_expression [24052,24092]"/>
  <match src="call_argument [19231,19254]" dest="call_argument [19108,19131]"/>
  <match src="}: } [19274,19275]" dest="}: } [19151,19152]"/>
  <match src="(: ( [36278,36279]" dest="(: ( [36054,36055]"/>
  <match src="call_argument [31896,31901]" dest="call_argument [31740,31745]"/>
  <match src=",: , [54274,54275]" dest=",: , [54232,54233]"/>
  <match src="function_body [40886,41002]" dest="function_body [40661,40777]"/>
  <match src="): ) [42729,42730]" dest="): ) [42505,42506]"/>
  <match src="function: function [52707,52715]" dest="function: function [52613,52621]"/>
  <match src="returns: returns [43706,43713]" dest="returns: returns [43482,43489]"/>
  <match src="(: ( [758,759]" dest="(: ( [758,759]"/>
  <match src="): ) [20171,20172]" dest="): ) [20048,20049]"/>
  <match src=",: , [30660,30661]" dest=",: , [30504,30505]"/>
  <match src="call_argument [20523,20536]" dest="call_argument [20400,20413]"/>
  <match src="external: external [794,802]" dest="external: external [794,802]"/>
  <match src="identifier: c [3827,3828]" dest="identifier: c [3794,3795]"/>
  <match src="contract_declaration [34388,40523]" dest="contract_declaration [34164,40299]"/>
  <match src="identifier: encodePacked [40787,40799]" dest="identifier: encodePacked [40562,40574]"/>
  <match src="expression_statement [43848,43909]" dest="expression_statement [43624,43685]"/>
  <match src="identifier: _roles [38245,38251]" dest="identifier: _roles [38021,38027]"/>
  <match src="number_literal: 0 [5382,5383]" dest="number_literal: 0 [5349,5350]"/>
  <match src="yul_identifier [41918,41924]" dest="yul_identifier [41694,41700]"/>
  <match src="member_expression [44396,44404]" dest="member_expression [44172,44180]"/>
  <match src="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event. Note that unlike {grantRole}, this function doesn't perform any      * checks on the calling account.      *      * [WARNING]      * ====      * This function should only be called from the constructor when setting      * up the initial roles for the system.      *      * Using this function in any other way is effectively circumventing the admin      * system imposed by {AccessControl}.      * ====      */ [39106,39675]" dest="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event. Note that unlike {grantRole}, this function doesn't perform any      * checks on the calling account.      *      * [WARNING]      * ====      * This function should only be called from the constructor when setting      * up the initial roles for the system.      *      * Using this function in any other way is effectively circumventing the admin      * system imposed by {AccessControl}.      * ====      */ [38882,39451]"/>
  <match src="&quot;: &quot; [6226,6227]" dest="&quot;: &quot; [6193,6194]"/>
  <match src="identifier: toBytes [45312,45319]" dest="identifier: toBytes [45088,45095]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [5857,6126]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [5824,6093]"/>
  <match src="bytes32: bytes32 [35091,35098]" dest="bytes32: bytes32 [34867,34874]"/>
  <match src="identifier: b [5038,5039]" dest="identifier: b [5005,5006]"/>
  <match src="return_statement [4137,4155]" dest="return_statement [4104,4122]"/>
  <match src="function_body [52213,52358]" dest="function_body [52119,52264]"/>
  <match src="identifier: LIST_LONG_START [48362,48377]" dest="identifier: LIST_LONG_START [48138,48153]"/>
  <match src=",: , [23953,23954]" dest=",: , [23797,23798]"/>
  <match src="parameter [5694,5703]" dest="parameter [5661,5670]"/>
  <match src="): ) [45574,45575]" dest="): ) [45350,45351]"/>
  <match src="identifier: len [45072,45075]" dest="identifier: len [44848,44851]"/>
  <match src="): ) [30625,30626]" dest="): ) [30469,30470]"/>
  <match src="string_literal [51218,51234]" dest="string_literal [50994,51010]"/>
  <match src="primitive_type [41508,41513]" dest="primitive_type [41284,41289]"/>
  <match src="identifier: token [20927,20932]" dest="identifier: token [20804,20809]"/>
  <match src="+=: += [49097,49099]" dest="+=: += [48873,48875]"/>
  <match src="yul_assignment [45228,45251]" dest="yul_assignment [45004,45027]"/>
  <match src="): ) [40238,40239]" dest="): ) [40014,40015]"/>
  <match src="comment: // File: contracts/common/AccessControlMixin.sol [40527,40575]" dest="comment: // File: contracts/common/AccessControlMixin.sol [40303,40351]"/>
  <match src="identifier: item [42550,42554]" dest="identifier: item [42326,42330]"/>
  <match src="}: } [24337,24338]" dest="}: } [24181,24182]"/>
  <match src="call_argument [12597,12601]" dest="call_argument [12531,12535]"/>
  <match src="identifier: _ [40993,40994]" dest="identifier: _ [40768,40769]"/>
  <match src="solidity_pragma_token [51090,51104]" dest="solidity_pragma_token [50865,50880]"/>
  <match src="string_literal [37811,37860]" dest="string_literal [37587,37636]"/>
  <match src="interface_declaration [49761,51032]" dest="interface_declaration [49536,50807]"/>
  <match src="bytes: bytes [13695,13700]" dest="bytes: bytes [13629,13634]"/>
  <match src="parameter [14677,14694]" dest="parameter [14611,14628]"/>
  <match src="comment: // Position of the value in the `values` array, plus 1 because index 0 [23576,23646]" dest="comment: // Position of the value in the `values` array, plus 1 because index 0 [23420,23490]"/>
  <match src="parameter [4055,4064]" dest="parameter [4022,4031]"/>
  <match src="identifier: data [15972,15976]" dest="identifier: data [15906,15910]"/>
  <match src="call_argument [22079,22089]" dest="call_argument [21956,21966]"/>
  <match src="call_argument [20174,20181]" dest="call_argument [20051,20058]"/>
  <match src="contract: contract [51109,51117]" dest="contract: contract [50885,50893]"/>
  <match src="identifier: value [2828,2833]" dest="identifier: value [2828,2833]"/>
  <match src="uint256: uint256 [31123,31130]" dest="uint256: uint256 [30967,30974]"/>
  <match src="returns: returns [4999,5006]" dest="returns: returns [4966,4973]"/>
  <match src=":: : [12785,12786]" dest=":: : [12719,12720]"/>
  <match src=",: , [43756,43757]" dest=",: , [43532,43533]"/>
  <match src="identifier: set [31195,31198]" dest="identifier: set [31039,31042]"/>
  <match src="returns: returns [27331,27338]" dest="returns: returns [27175,27182]"/>
  <match src="primitive_type [29305,29312]" dest="primitive_type [29149,29156]"/>
  <match src="): ) [12601,12602]" dest="): ) [12535,12536]"/>
  <match src="if: if [5355,5357]" dest="if: if [5322,5324]"/>
  <match src="identifier: returndata [17527,17537]" dest="identifier: returndata [17461,17471]"/>
  <match src="identifier: account [38976,38983]" dest="identifier: account [38752,38759]"/>
  <match src="memory: memory [44827,44833]" dest="memory: memory [44603,44609]"/>
  <match src="): ) [46324,46325]" dest="): ) [46100,46101]"/>
  <match src="identifier: encodeWithSelector [20599,20617]" dest="identifier: encodeWithSelector [20476,20494]"/>
  <match src="identifier: RLPItem [43671,43678]" dest="identifier: RLPItem [43447,43454]"/>
  <match src="): ) [5735,5736]" dest="): ) [5702,5703]"/>
  <match src="state_mutability [44849,44853]" dest="state_mutability [44625,44629]"/>
  <match src=",: , [46862,46863]" dest=",: , [46638,46639]"/>
  <match src="primitive_type [45671,45676]" dest="primitive_type [45447,45452]"/>
  <match src="uint256: uint256 [23721,23728]" dest="uint256: uint256 [23565,23572]"/>
  <match src="virtual: virtual [38949,38956]" dest="virtual: virtual [38725,38732]"/>
  <match src="identifier: adminRole [39970,39979]" dest="identifier: adminRole [39746,39755]"/>
  <match src="type_name [6562,6569]" dest="type_name [6529,6536]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [15429,15479]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [15363,15413]"/>
  <match src="}: } [5422,5423]" dest="}: } [5389,5390]"/>
  <match src="member_expression [29293,29303]" dest="member_expression [29137,29147]"/>
  <match src="identifier: _payloadOffset [48033,48047]" dest="identifier: _payloadOffset [47809,47823]"/>
  <match src=",: , [14675,14676]" dest=",: , [14609,14610]"/>
  <match src="memory: memory [21833,21839]" dest="memory: memory [21710,21716]"/>
  <match src="binary_expression [45178,45193]" dest="binary_expression [44954,44969]"/>
  <match src="identifier: set [26388,26391]" dest="identifier: set [26232,26235]"/>
  <match src="&lt;: &lt; [46401,46402]" dest="&lt;: &lt; [46177,46178]"/>
  <match src="==: == [5361,5363]" dest="==: == [5328,5330]"/>
  <match src="variable_declaration [43433,43452]" dest="variable_declaration [43209,43228]"/>
  <match src="&quot;: &quot; [53929,53930]" dest="&quot;: &quot; [53835,53836]"/>
  <match src="&lt;: &lt; [46911,46912]" dest="&lt;: &lt; [46687,46688]"/>
  <match src="comment: // All indexes are 1-based [25745,25771]" dest="comment: // All indexes are 1-based [25589,25615]"/>
  <match src="string [54161,54195]" dest="string [54067,54101]"/>
  <match src="variable_declaration_statement [20484,20558]" dest="variable_declaration_statement [20361,20435]"/>
  <match src="variable_declaration [21827,21850]" dest="variable_declaration [21704,21727]"/>
  <match src="identifier: require [15264,15271]" dest="identifier: require [15198,15205]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [7408,7861]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [7375,7828]"/>
  <match src="address: address [34511,34518]" dest="address: address [34287,34294]"/>
  <match src="call_argument [29329,29334]" dest="call_argument [29173,29178]"/>
  <match src="if_statement [5355,5385]" dest="if_statement [5322,5352]"/>
  <match src=",: , [9370,9371]" dest=",: , [9337,9338]"/>
  <match src="bytes32: bytes32 [35775,35782]" dest="bytes32: bytes32 [35551,35558]"/>
  <match src="variable_declaration [41869,41883]" dest="variable_declaration [41645,41659]"/>
  <match src="return: return [16935,16941]" dest="return: return [16869,16875]"/>
  <match src="identifier: b [5092,5093]" dest="identifier: b [5059,5060]"/>
  <match src="number_literal: 1 [45192,45193]" dest="number_literal: 1 [44968,44969]"/>
  <match src="uint256: uint256 [5748,5755]" dest="uint256: uint256 [5715,5722]"/>
  <match src="address: address [50338,50345]" dest="address: address [50113,50120]"/>
  <match src="external: external [1904,1912]" dest="external: external [1904,1912]"/>
  <match src="): ) [52115,52116]" dest="): ) [51890,51891]"/>
  <match src="sub: sub [47373,47376]" dest="sub: sub [47149,47152]"/>
  <match src="yul_path [47897,47904]" dest="yul_path [47673,47680]"/>
  <match src="): ) [53594,53595]" dest="): ) [53500,53501]"/>
  <match src=".: . [38257,38258]" dest=".: . [38033,38034]"/>
  <match src="{: { [29757,29758]" dest="{: { [29601,29602]"/>
  <match src="memory: memory [16288,16294]" dest="memory: memory [16222,16228]"/>
  <match src="=: = [16537,16538]" dest="=: = [16471,16472]"/>
  <match src="bool: bool [30931,30935]" dest="bool: bool [30775,30779]"/>
  <match src="identifier: IERC20 [53077,53083]" dest="identifier: IERC20 [52983,52989]"/>
  <match src=":=: := [47342,47344]" dest=":=: := [47118,47120]"/>
  <match src="(: ( [4675,4676]" dest="(: ( [4642,4643]"/>
  <match src="identifier: memPtr [43043,43049]" dest="identifier: memPtr [42819,42825]"/>
  <match src="struct_declaration [41546,41616]" dest="struct_declaration [41322,41392]"/>
  <match src="(: ( [20417,20418]" dest="(: ( [20294,20295]"/>
  <match src="identifier: target [15531,15537]" dest="identifier: target [15465,15471]"/>
  <match src="function_body [48860,49520]" dest="function_body [48636,49296]"/>
  <match src="{: { [23034,23035]" dest="{: { [22878,22879]"/>
  <match src="external: external [1153,1161]" dest="external: external [1153,1161]"/>
  <match src="add: add [47893,47896]" dest="add: add [47669,47672]"/>
  <match src="&quot;: &quot; [15343,15344]" dest="&quot;: &quot; [15277,15278]"/>
  <match src=".: . [36043,36044]" dest=".: . [35819,35820]"/>
  <match src="call_argument [37811,37860]" dest="call_argument [37587,37636]"/>
  <match src="call_argument [38366,38373]" dest="call_argument [38142,38149]"/>
  <match src="user_defined_type [28487,28497]" dest="user_defined_type [28331,28341]"/>
  <match src="call_expression [19208,19266]" dest="call_expression [19085,19143]"/>
  <match src=",: , [15619,15620]" dest=",: , [15553,15554]"/>
  <match src="): ) [53940,53941]" dest="): ) [53846,53847]"/>
  <match src="function_body [28086,28131]" dest="function_body [27930,27975]"/>
  <match src="mload: mload [43101,43106]" dest="mload: mload [42877,42882]"/>
  <match src="(: ( [10278,10279]" dest="(: ( [10245,10246]"/>
  <match src="): ) [42633,42634]" dest="): ) [42409,42410]"/>
  <match src="identifier: _payloadOffset [45548,45562]" dest="identifier: _payloadOffset [45324,45338]"/>
  <match src="(: ( [13678,13679]" dest="(: ( [13612,13613]"/>
  <match src="identifier: _inner [28668,28674]" dest="identifier: _inner [28512,28518]"/>
  <match src="string [5792,5821]" dest="string [5759,5788]"/>
  <match src="type_name [50959,50966]" dest="type_name [50734,50741]"/>
  <match src="parameter [27340,27344]" dest="parameter [27184,27188]"/>
  <match src="member_expression [28112,28122]" dest="member_expression [27956,27966]"/>
  <match src="&quot;: &quot; [52241,52242]" dest="&quot;: &quot; [52147,52148]"/>
  <match src="comment: /**      * @dev Returns the division of two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [4799,4941]" dest="comment: /**      * @dev Returns the division of two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [4766,4908]"/>
  <match src=",: , [16969,16970]" dest=",: , [16903,16904]"/>
  <match src="return_type_definition [46034,46051]" dest="return_type_definition [45810,45827]"/>
  <match src="state_mutability [42968,42972]" dest="state_mutability [42744,42748]"/>
  <match src="call_argument [12796,12798]" dest="call_argument [12730,12732]"/>
  <match src="call_argument [8619,8631]" dest="call_argument [8586,8598]"/>
  <match src="private: private [40380,40387]" dest="private: private [40156,40163]"/>
  <match src="member_expression [32673,32683]" dest="member_expression [32484,32494]"/>
  <match src="returns: returns [28068,28075]" dest="returns: returns [27912,27919]"/>
  <match src="identifier: returndata [18252,18262]" dest="identifier: returndata [18186,18196]"/>
  <match src="type_cast_expression [43928,43949]" dest="type_cast_expression [43704,43725]"/>
  <match src="returns: returns [14154,14161]" dest="returns: returns [14088,14095]"/>
  <match src="type_name [19120,19126]" dest="type_name [18997,19003]"/>
  <match src="sub: sub [47148,47151]" dest="sub: sub [46924,46927]"/>
  <match src="identifier: newAllowance [20990,21002]" dest="identifier: newAllowance [20867,20879]"/>
  <match src="uint256: uint256 [11410,11417]" dest="uint256: uint256 [11344,11351]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [17439,17489]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [17373,17423]"/>
  <match src="identifier: account [36061,36068]" dest="identifier: account [35837,35844]"/>
  <match src="parameter [42167,42183]" dest="parameter [41943,41959]"/>
  <match src="emit: emit [40009,40013]" dest="emit: emit [39785,39789]"/>
  <match src="variable_declaration [53954,53972]" dest="variable_declaration [53860,53878]"/>
  <match src="external: external [480,488]" dest="external: external [480,488]"/>
  <match src="identifier: set [27302,27305]" dest="identifier: set [27146,27149]"/>
  <match src="): ) [28910,28911]" dest="): ) [28754,28755]"/>
  <match src=",: , [17383,17384]" dest=",: , [17317,17318]"/>
  <match src="yul_function_call [49413,49424]" dest="yul_function_call [49189,49200]"/>
  <match src="type_name [46753,46760]" dest="type_name [46529,46536]"/>
  <match src="): ) [48183,48184]" dest="): ) [47959,47960]"/>
  <match src="): ) [27919,27920]" dest="): ) [27763,27764]"/>
  <match src="identifier: owner [2788,2793]" dest="identifier: owner [2788,2793]"/>
  <match src=",: , [51428,51429]" dest=",: , [51203,51204]"/>
  <match src="): ) [3782,3783]" dest="): ) [3749,3750]"/>
  <match src="identifier: sendValue [12508,12517]" dest="identifier: sendValue [12442,12451]"/>
  <match src="identifier: success [17796,17803]" dest="identifier: success [17730,17737]"/>
  <match src="primitive_type [15913,15918]" dest="primitive_type [15847,15852]"/>
  <match src="bool: bool [27644,27648]" dest="bool: bool [27488,27492]"/>
  <match src="number_literal: 0 [48247,48248]" dest="number_literal: 0 [48023,48024]"/>
  <match src="assembly: assembly [43509,43517]" dest="assembly: assembly [43285,43293]"/>
  <match src="identifier: lastvalue [25465,25474]" dest="identifier: lastvalue [25309,25318]"/>
  <match src="=: = [51758,51759]" dest="=: = [51533,51534]"/>
  <match src="yul_identifier [49493,49500]" dest="yul_identifier [49269,49276]"/>
  <match src=",: , [19471,19472]" dest=",: , [19348,19349]"/>
  <match src="internal: internal [10228,10236]" dest="internal: internal [10195,10203]"/>
  <match src="{: { [41903,41904]" dest="{: { [41679,41680]"/>
  <match src="identifier: a [6570,6571]" dest="identifier: a [6537,6538]"/>
  <match src="uint256: uint256 [48783,48790]" dest="uint256: uint256 [48559,48566]"/>
  <match src="expression_statement [22060,22146]" dest="expression_statement [21937,22023]"/>
  <match src="member_expression [19434,19452]" dest="member_expression [19311,19329]"/>
  <match src="call_argument [16619,16631]" dest="call_argument [16553,16565]"/>
  <match src="call_argument [28592,28597]" dest="call_argument [28436,28441]"/>
  <match src="call_argument [20159,20172]" dest="call_argument [20036,20049]"/>
  <match src="array_access [24719,24738]" dest="array_access [24563,24582]"/>
  <match src="primitive_type [25457,25464]" dest="primitive_type [25301,25308]"/>
  <match src="(: ( [30669,30670]" dest="(: ( [30513,30514]"/>
  <match src="return: return [5833,5839]" dest="return: return [5800,5806]"/>
  <match src="function: function [43652,43660]" dest="function: function [43428,43436]"/>
  <match src="}: } [11563,11564]" dest="}: } [11497,11498]"/>
  <match src="yul_evm_builtin [43101,43106]" dest="yul_evm_builtin [42877,42882]"/>
  <match src="==: == [48879,48881]" dest="==: == [48655,48657]"/>
  <match src="primitive_type [28971,28978]" dest="primitive_type [28815,28822]"/>
  <match src="return_statement [6753,6762]" dest="return_statement [6720,6729]"/>
  <match src="uint256: uint256 [48086,48093]" dest="uint256: uint256 [47862,47869]"/>
  <match src="(: ( [22067,22068]" dest="(: ( [21944,21945]"/>
  <match src="identifier: adminRole [40061,40070]" dest="identifier: adminRole [39837,39846]"/>
  <match src="member_expression [37388,37410]" dest="member_expression [37164,37186]"/>
  <match src="identifier: errorMessage [15621,15633]" dest="identifier: errorMessage [15555,15567]"/>
  <match src="type_name [45645,45650]" dest="type_name [45421,45426]"/>
  <match src="parameter [3769,3773]" dest="parameter [3736,3740]"/>
  <match src="type_name [32750,32755]" dest="type_name [32561,32566]"/>
  <match src="pure: pure [6176,6180]" dest="pure: pure [6143,6147]"/>
  <match src="identifier: _at [26821,26824]" dest="identifier: _at [26665,26668]"/>
  <match src="primitive_type [19337,19344]" dest="primitive_type [19214,19221]"/>
  <match src="call_expression [38237,38282]" dest="call_expression [38013,38058]"/>
  <match src="identifier: mul [6558,6561]" dest="identifier: mul [6525,6528]"/>
  <match src=",: , [7958,7959]" dest=",: , [7925,7926]"/>
  <match src="memory: memory [15510,15516]" dest="memory: memory [15444,15450]"/>
  <match src="(: ( [53832,53833]" dest="(: ( [53738,53739]"/>
  <match src="bool: bool [3769,3773]" dest="bool: bool [3736,3740]"/>
  <match src="{: { [18152,18153]" dest="{: { [18086,18087]"/>
  <match src="expression_statement [38968,39052]" dest="expression_statement [38744,38828]"/>
  <match src="identifier: b [6703,6704]" dest="identifier: b [6670,6671]"/>
  <match src="internal: internal [20758,20766]" dest="internal: internal [20635,20643]"/>
  <match src="visibility [46731,46738]" dest="visibility [46507,46514]"/>
  <match src="member_expression [25947,25959]" dest="member_expression [25791,25803]"/>
  <match src="): ) [28524,28525]" dest="): ) [28368,28369]"/>
  <match src=",: , [16383,16384]" dest=",: , [16317,16318]"/>
  <match src="identifier: memPtr [42723,42729]" dest="identifier: memPtr [42499,42505]"/>
  <match src="identifier: success [16598,16605]" dest="identifier: success [16532,16539]"/>
  <match src="{: { [53601,53602]" dest="{: { [53507,53508]"/>
  <match src="event_paramater [35391,35411]" dest="event_paramater [35167,35187]"/>
  <match src="identifier: require [7325,7332]" dest="identifier: require [7292,7299]"/>
  <match src="visibility [19824,19832]" dest="visibility [19701,19709]"/>
  <match src="type_name [36007,36011]" dest="type_name [35783,35787]"/>
  <match src="internal: internal [29725,29733]" dest="internal: internal [29569,29577]"/>
  <match src="primitive_type [35797,35804]" dest="primitive_type [35573,35580]"/>
  <match src="parameter [37014,37027]" dest="parameter [36790,36803]"/>
  <match src="function: function [4039,4047]" dest="function: function [4006,4014]"/>
  <match src="=: = [46252,46253]" dest="=: = [46028,46029]"/>
  <match src="identifier: memPtr [48056,48062]" dest="identifier: memPtr [47832,47838]"/>
  <match src="(: ( [44247,44248]" dest="(: ( [44023,44024]"/>
  <match src="identifier: add [27279,27282]" dest="identifier: add [27123,27126]"/>
  <match src="): ) [47481,47482]" dest="): ) [47257,47258]"/>
  <match src="type_name [40363,40370]" dest="type_name [40139,40146]"/>
  <match src="uint256: uint256 [41869,41876]" dest="uint256: uint256 [41645,41652]"/>
  <match src="yul_evm_builtin [47893,47896]" dest="yul_evm_builtin [47669,47672]"/>
  <match src="state_mutability [48855,48859]" dest="state_mutability [48631,48635]"/>
  <match src="call_expression [24047,24070]" dest="call_expression [23891,23914]"/>
  <match src="identifier: value [29582,29587]" dest="identifier: value [29426,29431]"/>
  <match src="assembly_statement [45204,45262]" dest="assembly_statement [44980,45038]"/>
  <match src="false [4747,4752]" dest="false [4714,4719]"/>
  <match src="return_type_definition [30612,30626]" dest="return_type_definition [30456,30470]"/>
  <match src="{: { [14177,14178]" dest="{: { [14111,14112]"/>
  <match src="pragma_directive [41275,41297]" dest="pragma_directive [41050,41073]"/>
  <match src="call_argument [20817,20830]" dest="call_argument [20694,20707]"/>
  <match src="string [12827,12887]" dest="string [12761,12821]"/>
  <match src=",: , [54122,54123]" dest=",: , [54028,54029]"/>
  <match src="call_argument [15559,15563]" dest="call_argument [15493,15497]"/>
  <match src="visibility [51723,51729]" dest="visibility [51498,51504]"/>
  <match src="(: ( [54057,54058]" dest="(: ( [53963,53964]"/>
  <match src="expression_statement [42694,42731]" dest="expression_statement [42470,42507]"/>
  <match src="=&gt;: =&gt; [34647,34649]" dest="=&gt;: =&gt; [34423,34425]"/>
  <match src="{: { [43422,43423]" dest="{: { [43198,43199]"/>
  <match src="): ) [43473,43474]" dest="): ) [43249,43250]"/>
  <match src="return_statement [8643,8656]" dest="return_statement [8610,8623]"/>
  <match src="identifier: require [42201,42208]" dest="identifier: require [41977,41984]"/>
  <match src="): ) [45339,45340]" dest="): ) [45115,45116]"/>
  <match src="identifier: _msgSender [38269,38279]" dest="identifier: _msgSender [38045,38055]"/>
  <match src="call_expression [30955,30990]" dest="call_expression [30799,30834]"/>
  <match src="member_expression [27902,27912]" dest="member_expression [27746,27756]"/>
  <match src="}: } [9501,9502]" dest="}: } [9468,9469]"/>
  <match src="comment: // left over bytes. Mask is used to remove unwanted bytes from the word [49165,49236]" dest="comment: // left over bytes. Mask is used to remove unwanted bytes from the word [48941,49012]"/>
  <match src="array_access [26241,26260]" dest="array_access [26085,26104]"/>
  <match src="mapping: mapping [23701,23708]" dest="mapping: mapping [23545,23552]"/>
  <match src="uint8: uint8 [41508,41513]" dest="uint8: uint8 [41284,41289]"/>
  <match src="yul_evm_builtin [18198,18203]" dest="yul_evm_builtin [18132,18137]"/>
  <match src="primitive_type [20484,20491]" dest="primitive_type [20361,20368]"/>
  <match src="call_expression [17357,17426]" dest="call_expression [17291,17360]"/>
  <match src="type_name [17251,17258]" dest="type_name [17185,17192]"/>
  <match src="}: } [47934,47935]" dest="}: } [47710,47711]"/>
  <match src="call_argument [45831,45834]" dest="call_argument [45607,45610]"/>
  <match src="&quot;: &quot; [15384,15385]" dest="&quot;: &quot; [15318,15319]"/>
  <match src="string_literal [43758,43795]" dest="string_literal [43534,43571]"/>
  <match src="primitive_type [7925,7932]" dest="primitive_type [7892,7899]"/>
  <match src="identifier: a [5789,5790]" dest="identifier: a [5756,5757]"/>
  <match src="primitive_type [42361,42368]" dest="primitive_type [42137,42144]"/>
  <match src="string_literal [45083,45122]" dest="string_literal [44859,44898]"/>
  <match src="false [24314,24319]" dest="false [24158,24163]"/>
  <match src="call_argument [9451,9456]" dest="call_argument [9418,9423]"/>
  <match src="identifier: byte0 [47676,47681]" dest="identifier: byte0 [47452,47457]"/>
  <match src="contract_body [51464,54351]" dest="contract_body [51239,54351]"/>
  <match src="variable_declaration_statement [5748,5766]" dest="variable_declaration_statement [5715,5733]"/>
  <match src="constant: constant [51597,51605]" dest="constant: constant [51372,51380]"/>
  <match src=",: , [5692,5693]" dest=",: , [5659,5660]"/>
  <match src="call_expression [20568,20665]" dest="call_expression [20445,20542]"/>
  <match src="}: } [28681,28682]" dest="}: } [28525,28526]"/>
  <match src="identifier: _callOptionalReturn [20907,20926]" dest="identifier: _callOptionalReturn [20784,20803]"/>
  <match src="identifier: b [5702,5703]" dest="identifier: b [5669,5670]"/>
  <match src="state_mutability [43380,43384]" dest="state_mutability [43156,43160]"/>
  <match src="string [42223,42249]" dest="string [41999,42025]"/>
  <match src="}: } [42781,42782]" dest="}: } [42557,42558]"/>
  <match src="=: = [47566,47567]" dest="=: = [47342,47343]"/>
  <match src="call_expression [20934,21003]" dest="call_expression [20811,20880]"/>
  <match src="call_argument [40273,40277]" dest="call_argument [40049,40053]"/>
  <match src="(: ( [31214,31215]" dest="(: ( [31058,31059]"/>
  <match src="primitive_type [16910,16915]" dest="primitive_type [16844,16849]"/>
  <match src="yul_identifier [45744,45751]" dest="yul_identifier [45520,45527]"/>
  <match src="uint256: uint256 [5335,5342]" dest="uint256: uint256 [5302,5309]"/>
  <match src=",: , [44673,44674]" dest=",: , [44449,44450]"/>
  <match src=",: , [40164,40165]" dest=",: , [39940,39941]"/>
  <match src="visibility [28054,28062]" dest="visibility [27898,27906]"/>
  <match src="variable_declaration_statement [44184,44230]" dest="variable_declaration_statement [43960,44006]"/>
  <match src="using_directive [51547,51574]" dest="using_directive [51322,51349]"/>
  <match src="indexed: indexed [52025,52032]" dest="indexed: indexed [51800,51807]"/>
  <match src=",: , [29303,29304]" dest=",: , [29147,29148]"/>
  <match src="primitive_type [1888,1895]" dest="primitive_type [1888,1895]"/>
  <match src=".: . [42398,42399]" dest=".: . [42174,42175]"/>
  <match src="lt: lt [44622,44624]" dest="lt: lt [44398,44400]"/>
  <match src="parameter [26217,26221]" dest="parameter [26061,26065]"/>
  <match src="function: function [4348,4356]" dest="function: function [4315,4323]"/>
  <match src="call_expression [29536,29591]" dest="call_expression [29380,29435]"/>
  <match src="=: = [42614,42615]" dest="=: = [42390,42391]"/>
  <match src="call_expression [44240,44314]" dest="call_expression [44016,44090]"/>
  <match src="type_name [27074,27077]" dest="type_name [26918,26921]"/>
  <match src="identifier: depositor [52745,52754]" dest="identifier: depositor [52651,52660]"/>
  <match src="(: ( [7879,7880]" dest="(: ( [7846,7847]"/>
  <match src="calldata: calldata [50406,50414]" dest="calldata: calldata [50181,50189]"/>
  <match src=".: . [20840,20841]" dest=".: . [20717,20718]"/>
  <match src="&gt;=:  &gt;= [2946,2949]" dest="&gt;=:  &gt;= [2913,2916]"/>
  <match src="identifier: toList [53746,53752]" dest="identifier: toList [53652,53658]"/>
  <match src="uint256: uint256 [6607,6614]" dest="uint256: uint256 [6574,6581]"/>
  <match src=",: , [53121,53122]" dest=",: , [53027,53028]"/>
  <match src="struct_declaration [28635,28682]" dest="struct_declaration [28479,28526]"/>
  <match src="): ) [31165,31166]" dest="): ) [31009,31010]"/>
  <match src="=: = [42519,42520]" dest="=: = [42295,42296]"/>
  <match src="&gt;=:  &gt;= [18513,18516]" dest="&gt;=:  &gt;= [22125,22128]"/>
  <match src="function_definition [43652,43957]" dest="function_definition [43428,43733]"/>
  <match src="identifier: set [29720,29723]" dest="identifier: set [29564,29567]"/>
  <match src="string_literal [15304,15344]" dest="string_literal [15238,15278]"/>
  <match src="): ) [24561,24562]" dest="): ) [24405,24406]"/>
  <match src="yul_identifier [44692,44695]" dest="yul_identifier [44468,44471]"/>
  <match src="internal: internal [30603,30611]" dest="internal: internal [30447,30455]"/>
  <match src="identifier: _contains [31185,31194]" dest="identifier: _contains [31029,31038]"/>
  <match src="): ) [47390,47391]" dest="): ) [47166,47167]"/>
  <match src="function_definition [7247,7400]" dest="function_definition [7214,7367]"/>
  <match src="(: ( [2267,2268]" dest="(: ( [2267,2268]"/>
  <match src="(: ( [24007,24008]" dest="(: ( [23851,23852]"/>
  <match src="call_argument [27902,27912]" dest="call_argument [27746,27756]"/>
  <match src="primitive_type [5683,5690]" dest="primitive_type [5650,5657]"/>
  <match src="=: = [40105,40106]" dest="=: = [39881,39882]"/>
  <match src="function: function [31316,31324]" dest="function: function [31160,31168]"/>
  <match src="pure: pure [4395,4399]" dest="pure: pure [4362,4366]"/>
  <match src="yul_variable_declaration [47750,47811]" dest="yul_variable_declaration [47526,47587]"/>
  <match src="): ) [17744,17745]" dest="): ) [17678,17679]"/>
  <match src=",: , [28509,28510]" dest=",: , [28353,28354]"/>
  <match src="=: = [42277,42278]" dest="=: = [42053,42054]"/>
  <match src="string_literal [54161,54195]" dest="string_literal [54067,54101]"/>
  <match src="type_name [6156,6163]" dest="type_name [6123,6130]"/>
  <match src=",: , [40035,40036]" dest=",: , [39811,39812]"/>
  <match src="): ) [40499,40500]" dest="): ) [40275,40276]"/>
  <match src="comment: // Storage of set values [23512,23536]" dest="comment: // Storage of set values [23356,23380]"/>
  <match src="identifier: initializer [52201,52212]" dest="identifier: initializer [52107,52118]"/>
  <match src="returns: returns [6598,6605]" dest="returns: returns [6565,6572]"/>
  <match src="parameter [41698,41715]" dest="parameter [41474,41491]"/>
  <match src="}: } [21011,21012]" dest="}: } [20888,20889]"/>
  <match src="identifier: i [42701,42702]" dest="identifier: i [42477,42478]"/>
  <match src="yul_function_call [44663,44698]" dest="yul_function_call [44439,44474]"/>
  <match src="solidity_version_comparison_operator [2946,2949]" dest="solidity_version_comparison_operator [2913,2916]"/>
  <match src="yul_function_call [47793,47809]" dest="yul_function_call [47569,47585]"/>
  <match src="identifier: len [44127,44130]" dest="identifier: len [43903,43906]"/>
  <match src="variable_declaration [49246,49258]" dest="variable_declaration [49022,49034]"/>
  <match src="yul_function_call [49337,49363]" dest="yul_function_call [49113,49139]"/>
  <match src="state_mutability [7291,7295]" dest="state_mutability [7258,7262]"/>
  <match src="return_type_definition [16901,16923]" dest="return_type_definition [16835,16857]"/>
  <match src="identifier: logRLPList [53639,53649]" dest="identifier: logRLPList [53545,53555]"/>
  <match src="type_name [19809,19816]" dest="type_name [19686,19693]"/>
  <match src="type_name [51833,51840]" dest="type_name [51608,51615]"/>
  <match src="type_name [31807,31814]" dest="type_name [31651,31658]"/>
  <match src="type_name [30220,30227]" dest="type_name [30064,30071]"/>
  <match src="]: ] [40414,40415]" dest="]: ] [40190,40191]"/>
  <match src="function: function [19098,19106]" dest="function: function [18975,18983]"/>
  <match src="expression_statement [10271,10300]" dest="expression_statement [10238,10267]"/>
  <match src="identifier: contains [27797,27805]" dest="identifier: contains [27641,27649]"/>
  <match src="parameter [31845,31852]" dest="parameter [31689,31696]"/>
  <match src="function: function [15112,15120]" dest="function: function [15046,15054]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [2966,3541]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [2933,3508]"/>
  <match src="return_type_definition [15904,15926]" dest="return_type_definition [15838,15860]"/>
  <match src="): ) [52859,52860]" dest="): ) [52765,52766]"/>
  <match src="call_argument [28971,29003]" dest="call_argument [28815,28847]"/>
  <match src="(: ( [54008,54009]" dest="(: ( [53914,53915]"/>
  <match src="number_literal: 0 [42616,42617]" dest="number_literal: 0 [42392,42393]"/>
  <match src="call_argument [44272,44313]" dest="call_argument [44048,44089]"/>
  <match src=".: . [44266,44267]" dest=".: . [44042,44043]"/>
  <match src="call_expression [45059,45123]" dest="call_expression [44835,44899]"/>
  <match src="pragma_directive [40579,40601]" dest="pragma_directive [40355,40378]"/>
  <match src="binary_expression [11548,11556]" dest="binary_expression [11482,11490]"/>
  <match src=",: , [40286,40287]" dest=",: , [40062,40063]"/>
  <match src="parameter [43403,43415]" dest="parameter [43179,43191]"/>
  <match src="identifier: set [26241,26244]" dest="identifier: set [26085,26088]"/>
  <match src="{: { [17346,17347]" dest="{: { [17280,17281]"/>
  <match src="member_expression [53652,53665]" dest="member_expression [53558,53571]"/>
  <match src="(: ( [20617,20618]" dest="(: ( [20494,20495]"/>
  <match src="(: ( [40272,40273]" dest="(: ( [40048,40049]"/>
  <match src="string_literal [13789,13821]" dest="string_literal [13723,13755]"/>
  <match src="member_expression [24719,24731]" dest="member_expression [24563,24575]"/>
  <match src="block_statement [17964,18315]" dest="block_statement [17898,18249]"/>
  <match src="): ) [5093,5094]" dest="): ) [5060,5061]"/>
  <match src="solidity_version: 0.6.0 [33053,33058]" dest="solidity_version: 0.6.0 [18395,18400]"/>
  <match src="=: = [43036,43037]" dest="=: = [42812,42813]"/>
  <match src=",: , [45820,45821]" dest=",: , [45596,45597]"/>
  <match src="]: ] [38256,38257]" dest="]: ] [38032,38033]"/>
  <match src="{: { [47638,47639]" dest="{: { [47414,47415]"/>
  <match src="parameter [27868,27872]" dest="parameter [27712,27716]"/>
  <match src="=: = [4705,4706]" dest="=: = [4672,4673]"/>
  <match src="call_argument [30963,30973]" dest="call_argument [30807,30817]"/>
  <match src="(: ( [17499,17500]" dest="(: ( [17433,17434]"/>
  <match src="=: = [51619,51620]" dest="=: = [51394,51395]"/>
  <match src="identifier: functionCall [13762,13774]" dest="identifier: functionCall [13696,13708]"/>
  <match src="binary_expression [45800,45820]" dest="binary_expression [45576,45596]"/>
  <match src=",: , [20649,20650]" dest=",: , [20526,20527]"/>
  <match src=".: . [27372,27373]" dest=".: . [27216,27217]"/>
  <match src="pure: pure [3755,3759]" dest="pure: pure [3722,3726]"/>
  <match src="): ) [38998,38999]" dest="): ) [38774,38775]"/>
  <match src=",: , [5293,5294]" dest=",: , [5260,5261]"/>
  <match src="identifier: currPtr [46436,46443]" dest="identifier: currPtr [46212,46219]"/>
  <match src="member_expression [19411,19433]" dest="member_expression [19288,19310]"/>
  <match src="type_cast_expression [30255,30295]" dest="type_cast_expression [30099,30139]"/>
  <match src=":: : [15549,15550]" dest=":: : [15483,15484]"/>
  <match src="(: ( [43097,43098]" dest="(: ( [42873,42874]"/>
  <match src="=: = [12762,12763]" dest="=: = [12696,12697]"/>
  <match src="function: function [24514,24522]" dest="function: function [24358,24366]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/Context.sol [31918,31968]" dest="comment: // File: @openzeppelin/contracts/utils/Context.sol [31762,31812]"/>
  <match src="block_statement [47543,47608]" dest="block_statement [47319,47384]"/>
  <match src="identifier: token [19201,19206]" dest="identifier: token [19078,19083]"/>
  <match src="parameter [40166,40181]" dest="parameter [39942,39957]"/>
  <match src="bool: bool [27340,27344]" dest="bool: bool [27184,27188]"/>
  <match src="(: ( [20550,20551]" dest="(: ( [20427,20428]"/>
  <match src="event_paramater [35091,35124]" dest="event_paramater [34867,34900]"/>
  <match src="string [26935,26971]" dest="string [26779,26815]"/>
  <match src="parameter [15239,15251]" dest="parameter [15173,15185]"/>
  <match src="type_name [812,816]" dest="type_name [812,816]"/>
  <match src="(: ( [32604,32605]" dest="(: ( [32415,32416]"/>
  <match src="solidity_version_comparison_operator [10441,10444]" dest="solidity_version_comparison_operator [10375,10378]"/>
  <match src="(: ( [47796,47797]" dest="(: ( [47572,47573]"/>
  <match src="}: } [4790,4791]" dest="}: } [4757,4758]"/>
  <match src="): ) [21866,21867]" dest="): ) [21743,21744]"/>
  <match src="function: function [41679,41687]" dest="function: function [41455,41463]"/>
  <match src="pragma: pragma [40579,40585]" dest="pragma: pragma [40355,40361]"/>
  <match src="return_statement [48240,48249]" dest="return_statement [48016,48025]"/>
  <match src="function_definition [27571,27702]" dest="function_definition [27415,27546]"/>
  <match src="primitive_type [40363,40370]" dest="primitive_type [40139,40146]"/>
  <match src="struct_member [41572,41584]" dest="struct_member [41348,41360]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [31437,31768]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [31281,31612]"/>
  <match src="identifier: WITHDRAW_EVENT_SIG [51857,51875]" dest="identifier: WITHDRAW_EVENT_SIG [51632,51650]"/>
  <match src="member_expression [27676,27686]" dest="member_expression [27520,27530]"/>
  <match src="call_argument [29321,29335]" dest="call_argument [29165,29179]"/>
  <match src="function: function [19283,19291]" dest="function: function [19160,19168]"/>
  <match src="identifier: _grantRole [37874,37884]" dest="identifier: _grantRole [37650,37660]"/>
  <match src="function: function [14060,14068]" dest="function: function [13994,14002]"/>
  <match src="uint256: uint256 [42604,42611]" dest="uint256: uint256 [42380,42387]"/>
  <match src="(: ( [47354,47355]" dest="(: ( [47130,47131]"/>
  <match src="call_argument [16971,16975]" dest="call_argument [16905,16909]"/>
  <match src="return_statement [32909,32925]" dest="return_statement [32720,32736]"/>
  <match src="): ) [27386,27387]" dest="): ) [27230,27231]"/>
  <match src="): ) [16922,16923]" dest="): ) [16856,16857]"/>
  <match src="identifier: target [16376,16382]" dest="identifier: target [16310,16316]"/>
  <match src="): ) [20895,20896]" dest="): ) [20772,20773]"/>
  <match src="primitive_type [28549,28556]" dest="primitive_type [28393,28400]"/>
  <match src="state_mutability [7911,7915]" dest="state_mutability [7878,7882]"/>
  <match src="(: ( [40402,40403]" dest="(: ( [40178,40179]"/>
  <match src="identifier: set [26175,26178]" dest="identifier: set [26019,26022]"/>
  <match src="variable_declaration [45531,45545]" dest="variable_declaration [45307,45321]"/>
  <match src="solidity_version: 0.6.0 [22284,22289]" dest="solidity_version: 0.6.0 [31836,31841]"/>
  <match src="identifier: a [7268,7269]" dest="identifier: a [7235,7236]"/>
  <match src="): ) [45519,45520]" dest="): ) [45295,45296]"/>
  <match src="parameter [52176,52190]" dest="parameter [52082,52096]"/>
  <match src=".: . [53745,53746]" dest=".: . [53651,53652]"/>
  <match src="function_body [40752,40850]" dest="function_body [40527,40625]"/>
  <match src="}: } [16025,16026]" dest="}: } [15959,15960]"/>
  <match src="call_argument [20588,20593]" dest="call_argument [20465,20470]"/>
  <match src="call_expression [20118,20270]" dest="call_expression [19995,20147]"/>
  <match src="identifier: role [40089,40093]" dest="identifier: role [39865,39869]"/>
  <match src="assembly_statement [43509,43568]" dest="assembly_statement [43285,43344]"/>
  <match src="false: false [5375,5380]" dest="false: false [5342,5347]"/>
  <match src="external: external [52870,52878]" dest="external: external [52776,52784]"/>
  <match src="return_statement [5074,5095]" dest="return_statement [5041,5062]"/>
  <match src="call_argument [21881,21885]" dest="call_argument [21758,21762]"/>
  <match src="type_name [31161,31165]" dest="type_name [31005,31009]"/>
  <match src="parameter [14729,14741]" dest="parameter [14663,14675]"/>
  <match src="): ) [4422,4423]" dest="): ) [4389,4390]"/>
  <match src="primitive_type [21446,21451]" dest="primitive_type [21323,21328]"/>
  <match src="&quot;: &quot; [5792,5793]" dest="&quot;: &quot; [5759,5760]"/>
  <match src=",: , [19132,19133]" dest=",: , [19009,19010]"/>
  <match src=",: , [2555,2556]" dest=",: , [2555,2556]"/>
  <match src=",: , [31205,31206]" dest=",: , [31049,31050]"/>
  <match src="type_name [36314,36321]" dest="type_name [36090,36097]"/>
  <match src="{: { [26012,26013]" dest="{: { [25856,25857]"/>
  <match src="memory: memory [32756,32762]" dest="memory: memory [32567,32573]"/>
  <match src="&quot;: &quot; [42449,42450]" dest="&quot;: &quot; [42225,42226]"/>
  <match src="return_type_definition [43706,43723]" dest="return_type_definition [43482,43499]"/>
  <match src="{: { [40191,40192]" dest="{: { [39967,39968]"/>
  <match src="member_expression [43465,43473]" dest="member_expression [43241,43249]"/>
  <match src="memory: memory [16879,16885]" dest="memory: memory [16813,16819]"/>
  <match src="primitive_type [4066,4073]" dest="primitive_type [4033,4040]"/>
  <match src="storage: storage [31794,31801]" dest="storage: storage [31638,31645]"/>
  <match src="identifier: currPtr [46274,46281]" dest="identifier: currPtr [46050,46057]"/>
  <match src="uint256: uint256 [1176,1183]" dest="uint256: uint256 [1176,1183]"/>
  <match src="new_expression [42330,42343]" dest="new_expression [42106,42119]"/>
  <match src="yul_assignment [43084,43115]" dest="yul_assignment [42860,42891]"/>
  <match src="call_argument [53807,53834]" dest="call_argument [53713,53740]"/>
  <match src="): ) [30675,30676]" dest="): ) [30519,30520]"/>
  <match src="type_cast_expression [12589,12602]" dest="type_cast_expression [12523,12536]"/>
  <match src="identifier: add [5679,5682]" dest="identifier: add [5646,5649]"/>
  <match src="+: + [47593,47594]" dest="+: + [47369,47370]"/>
  <match src="assembly_statement [46823,46889]" dest="assembly_statement [46599,46665]"/>
  <match src="): ) [31221,31222]" dest="): ) [31065,31066]"/>
  <match src="&gt;: &gt; [17959,17960]" dest="&gt;: &gt; [17893,17894]"/>
  <match src="user_defined_type [30158,30168]" dest="user_defined_type [30002,30012]"/>
  <match src="identifier: item [42216,42220]" dest="identifier: item [41992,41996]"/>
  <match src="else: else [18316,18320]" dest="else: else [18250,18254]"/>
  <match src="function_body [29267,29346]" dest="function_body [29111,29190]"/>
  <match src="(: ( [19119,19120]" dest="(: ( [18996,18997]"/>
  <match src="identifier: withdrawer [53962,53972]" dest="identifier: withdrawer [53868,53878]"/>
  <match src="function: function [12499,12507]" dest="function: function [12433,12441]"/>
  <match src="call_argument [53020,53029]" dest="call_argument [52926,52935]"/>
  <match src="): ) [45019,45020]" dest="): ) [44795,44796]"/>
  <match src="identifier: add [28869,28872]" dest="identifier: add [28713,28716]"/>
  <match src="return: return [44736,44742]" dest="return: return [44512,44518]"/>
  <match src="): ) [47687,47688]" dest="): ) [47463,47464]"/>
  <match src="comment: // @return number of bytes until the data [47977,48018]" dest="comment: // @return number of bytes until the data [47753,47794]"/>
  <match src="if: if [4126,4128]" dest="if: if [4093,4095]"/>
  <match src=".: . [29786,29787]" dest=".: . [29630,29631]"/>
  <match src="address: address [51981,51988]" dest="address: address [51756,51763]"/>
  <match src="): ) [29336,29337]" dest="): ) [29180,29181]"/>
  <match src="visibility [30603,30611]" dest="visibility [30447,30455]"/>
  <match src="(: ( [47896,47897]" dest="(: ( [47672,47673]"/>
  <match src="view: view [28535,28539]" dest="view: view [28379,28383]"/>
  <match src="constructor_definition [52125,52148]" dest="constructor_definition [52031,52054]"/>
  <match src="): ) [44838,44839]" dest="): ) [44614,44615]"/>
  <match src="}: } [17026,17027]" dest="}: } [16960,16961]"/>
  <match src="}: } [40522,40523]" dest="}: } [40298,40299]"/>
  <match src="primitive_type [25170,25177]" dest="primitive_type [25014,25021]"/>
  <match src="call_argument [46510,46527]" dest="call_argument [46286,46303]"/>
  <match src="internal: internal [43692,43700]" dest="internal: internal [43468,43476]"/>
  <match src="identifier: item [44834,44838]" dest="identifier: item [44610,44614]"/>
  <match src="variable_declaration [44327,44341]" dest="variable_declaration [44103,44117]"/>
  <match src="bool: bool [17500,17504]" dest="bool: bool [17434,17438]"/>
  <match src="identifier: listLength [42425,42435]" dest="identifier: listLength [42201,42211]"/>
  <match src="yul_identifier [49326,49333]" dest="yul_identifier [49102,49109]"/>
  <match src="variable_declaration_statement [42263,42294]" dest="variable_declaration_statement [42039,42070]"/>
  <match src=".: . [24058,24059]" dest=".: . [23902,23903]"/>
  <match src="solidity_version:  0.6.6 [51363,51369]" dest="solidity_version:  0.6.12 [51139,51146]"/>
  <match src="): ) [20269,20270]" dest="): ) [20146,20147]"/>
  <match src="internal: internal [4077,4085]" dest="internal: internal [4044,4052]"/>
  <match src="view: view [29734,29738]" dest="view: view [29578,29582]"/>
  <match src="(: ( [5374,5375]" dest="(: ( [5341,5342]"/>
  <match src="(: ( [40348,40349]" dest="(: ( [40124,40125]"/>
  <match src="user_defined_type [31332,31339]" dest="user_defined_type [31176,31183]"/>
  <match src="call_expression [51201,51235]" dest="call_expression [50977,51011]"/>
  <match src="(: ( [4144,4145]" dest="(: ( [4111,4112]"/>
  <match src="}: } [6289,6290]" dest="}: } [6256,6257]"/>
  <match src="=: = [41360,41361]" dest="=: = [41136,41137]"/>
  <match src="function: function [26144,26152]" dest="function: function [25988,25996]"/>
  <match src="binary_expression [5409,5414]" dest="binary_expression [5376,5381]"/>
  <match src="type_name [14117,14123]" dest="type_name [14051,14057]"/>
  <match src="identifier: msg [32916,32919]" dest="identifier: msg [32727,32730]"/>
  <match src="(: ( [45363,45364]" dest="(: ( [45139,45140]"/>
  <match src="variable_declaration_tuple [16497,16536]" dest="variable_declaration_tuple [16431,16470]"/>
  <match src="identifier: _callOptionalReturn [20281,20300]" dest="identifier: _callOptionalReturn [20158,20177]"/>
  <match src="function_body [46052,46642]" dest="function_body [45828,46418]"/>
  <match src="{: { [15542,15543]" dest="{: { [15476,15477]"/>
  <match src="binary_expression [44122,44136]" dest="binary_expression [43898,43912]"/>
  <match src="(: ( [45319,45320]" dest="(: ( [45095,45096]"/>
  <match src="call_argument [28979,29002]" dest="call_argument [28823,28846]"/>
  <match src="call_expression [31880,31902]" dest="call_expression [31724,31746]"/>
  <match src="assembly_statement [48130,48196]" dest="assembly_statement [47906,47972]"/>
  <match src="storage: storage [28498,28505]" dest="storage: storage [28342,28349]"/>
  <match src="identifier: memPtr [42745,42751]" dest="identifier: memPtr [42521,42527]"/>
  <match src="identifier: ptr [43598,43601]" dest="identifier: ptr [43374,43377]"/>
  <match src="primitive_type [27307,27314]" dest="primitive_type [27151,27158]"/>
  <match src="string [7960,7986]" dest="string [7927,7953]"/>
  <match src="parameter [10178,10187]" dest="parameter [10145,10154]"/>
  <match src="call_argument [41824,41857]" dest="call_argument [41600,41633]"/>
  <match src="indexed: indexed [2803,2810]" dest="indexed: indexed [2803,2810]"/>
  <match src="expression_statement [17357,17427]" dest="expression_statement [17291,17361]"/>
  <match src="internal: internal [28526,28534]" dest="internal: internal [28370,28378]"/>
  <match src="identifier: set [29469,29472]" dest="identifier: set [29313,29316]"/>
  <match src="address: address [759,766]" dest="address: address [759,766]"/>
  <match src="==: == [20183,20185]" dest="==: == [20060,20062]"/>
  <match src="}: } [43567,43568]" dest="}: } [43343,43344]"/>
  <match src="identifier: renounceRole [38898,38910]" dest="identifier: renounceRole [38674,38686]"/>
  <match src="(: ( [42671,42672]" dest="(: ( [42447,42448]"/>
  <match src="returns: returns [27859,27866]" dest="returns: returns [27703,27710]"/>
  <match src="call_argument [14217,14223]" dest="call_argument [14151,14157]"/>
  <match src=".: . [25193,25194]" dest=".: . [25037,25038]"/>
  <match src="call_expression [37077,37107]" dest="call_expression [36853,36883]"/>
  <match src="uint256: uint256 [52941,52948]" dest="uint256: uint256 [52847,52854]"/>
  <match src="identifier: token [20301,20306]" dest="identifier: token [20178,20183]"/>
  <match src="identifier: target [15375,15381]" dest="identifier: target [15309,15315]"/>
  <match src="identifier: EnumerableSet [23020,23033]" dest="identifier: EnumerableSet [22864,22877]"/>
  <match src="(: ( [36368,36369]" dest="(: ( [36144,36145]"/>
  <match src="function_body [27346,27395]" dest="function_body [27190,27239]"/>
  <match src="bool: bool [5008,5012]" dest="bool: bool [4975,4979]"/>
  <match src="visibility [41726,41734]" dest="visibility [41502,41510]"/>
  <match src="type_name [31845,31852]" dest="type_name [31689,31696]"/>
  <match src="identifier: memPtr [43107,43113]" dest="identifier: memPtr [42883,42889]"/>
  <match src="type_name [1888,1895]" dest="type_name [1888,1895]"/>
  <match src="type_name [12518,12533]" dest="type_name [12452,12467]"/>
  <match src="identifier: STRING_LONG_START [48290,48307]" dest="identifier: STRING_LONG_START [48066,48083]"/>
  <match src="primitive_type [30621,30625]" dest="primitive_type [30465,30469]"/>
  <match src="returns: returns [30612,30619]" dest="returns: returns [30456,30463]"/>
  <match src="identifier: errorMessage [15207,15219]" dest="identifier: errorMessage [15141,15153]"/>
  <match src="function_definition [21403,22164]" dest="function_definition [21280,22041]"/>
  <match src="member_expression [42550,42561]" dest="member_expression [42326,42337]"/>
  <match src="identifier: require [44240,44247]" dest="identifier: require [44016,44023]"/>
  <match src="comment: /**      * @dev Returns the number of accounts that have `role`. Can be used      * together with {getRoleMember} to enumerate all bearers of a role.      */ [36085,36245]" dest="comment: /**      * @dev Returns the number of accounts that have `role`. Can be used      * together with {getRoleMember} to enumerate all bearers of a role.      */ [35861,36021]"/>
  <match src="identifier: _inner [28116,28122]" dest="identifier: _inner [27960,27966]"/>
  <match src="string: string [15193,15199]" dest="string: string [15127,15133]"/>
  <match src="): ) [15251,15252]" dest="): ) [15185,15186]"/>
  <match src="function_definition [16827,17027]" dest="function_definition [16761,16961]"/>
  <match src="number_literal: 0 [53823,53824]" dest="number_literal: 0 [53729,53730]"/>
  <match src="identifier: token [19434,19439]" dest="identifier: token [19311,19316]"/>
  <match src="[: [ [37083,37084]" dest="[: [ [36859,36860]"/>
  <match src="returns: returns [29503,29510]" dest="returns: returns [29347,29354]"/>
  <match src="identifier: memPtr [45183,45189]" dest="identifier: memPtr [44959,44965]"/>
  <match src="string [16385,16423]" dest="string [16319,16357]"/>
  <match src="): ) [17344,17345]" dest="): ) [17278,17279]"/>
  <match src="call_expression [19384,19480]" dest="call_expression [19261,19357]"/>
  <match src="yul_identifier [46847,46852]" dest="yul_identifier [46623,46628]"/>
  <match src="call_expression [42209,42221]" dest="call_expression [41985,41997]"/>
  <match src="): ) [42678,42679]" dest="): ) [42454,42455]"/>
  <match src=".: . [46317,46318]" dest=".: . [46093,46094]"/>
  <match src="uint256: uint256 [25117,25124]" dest="uint256: uint256 [24961,24968]"/>
  <match src="address: address [15143,15150]" dest="address: address [15077,15084]"/>
  <match src="uint256: uint256 [42504,42511]" dest="uint256: uint256 [42280,42287]"/>
  <match src="type_name [42938,42945]" dest="type_name [42714,42721]"/>
  <match src=",: , [39080,39081]" dest=",: , [38856,38857]"/>
  <match src="string_literal [43872,43907]" dest="string_literal [43648,43683]"/>
  <match src="yul_evm_builtin [47716,47719]" dest="yul_evm_builtin [47492,47495]"/>
  <match src="=: = [25139,25140]" dest="=: = [24983,24984]"/>
  <match src="call_expression [52224,52258]" dest="call_expression [52130,52164]"/>
  <match src="identifier: this [20825,20829]" dest="identifier: this [20702,20706]"/>
  <match src="]: ] [27007,27008]" dest="]: ] [26851,26852]"/>
  <match src="primitive_type [16512,16517]" dest="primitive_type [16446,16451]"/>
  <match src="uint256: uint256 [503,510]" dest="uint256: uint256 [503,510]"/>
  <match src="): ) [48442,48443]" dest="): ) [48218,48219]"/>
  <match src="-: - [49284,49285]" dest="-: - [49060,49061]"/>
  <match src="user_defined_type [34650,34658]" dest="user_defined_type [34426,34434]"/>
  <match src="return: return [15575,15581]" dest="return: return [15509,15515]"/>
  <match src=".: . [53094,53095]" dest=".: . [53000,53001]"/>
  <match src="visibility [34691,34697]" dest="visibility [34467,34473]"/>
  <match src="primitive_type [5728,5735]" dest="primitive_type [5695,5702]"/>
  <match src="parameter [26879,26886]" dest="parameter [26723,26730]"/>
  <match src="type_name [42263,42270]" dest="type_name [42039,42046]"/>
  <match src="member_expression [20957,20979]" dest="member_expression [20834,20856]"/>
  <match src="if_statement [6627,6648]" dest="if_statement [6594,6615]"/>
  <match src="identifier: Bytes32Set [27587,27597]" dest="identifier: Bytes32Set [27431,27441]"/>
  <match src="primitive_type [23710,23717]" dest="primitive_type [23554,23561]"/>
  <match src="yul_path [47884,47891]" dest="yul_path [47660,47667]"/>
  <match src="contract_declaration [51109,51282]" dest="contract_declaration [50885,51058]"/>
  <match src="(: ( [37806,37807]" dest="(: ( [37582,37583]"/>
  <match src="}: } [11530,11531]" dest="}: } [11464,11465]"/>
  <match src="&quot;: &quot; [52256,52257]" dest="&quot;: &quot; [52162,52163]"/>
  <match src="returns: returns [43394,43401]" dest="returns: returns [43170,43177]"/>
  <match src="): ) [44697,44698]" dest="): ) [44473,44474]"/>
  <match src="[: [ [53998,53999]" dest="[: [ [53904,53905]"/>
  <match src="*: * [6672,6673]" dest="*: * [6639,6640]"/>
  <match src="}: } [14254,14255]" dest="}: } [14188,14189]"/>
  <match src="bool: bool [11202,11206]" dest="bool: bool [11136,11140]"/>
  <match src="internal: internal [31822,31830]" dest="internal: internal [31666,31674]"/>
  <match src="binary_expression [7333,7338]" dest="binary_expression [7300,7305]"/>
  <match src="&quot;: &quot; [45018,45019]" dest="&quot;: &quot; [44794,44795]"/>
  <match src="expression_statement [42417,42492]" dest="expression_statement [42193,42268]"/>
  <match src="call_argument [20167,20171]" dest="call_argument [20044,20048]"/>
  <match src="): ) [40239,40240]" dest="): ) [40015,40016]"/>
  <match src="returns: returns [2328,2335]" dest="returns: returns [2328,2335]"/>
  <match src="{: { [5344,5345]" dest="{: { [5311,5312]"/>
  <match src="call_expression [53732,53754]" dest="call_expression [53638,53660]"/>
  <match src="(: ( [16597,16598]" dest="(: ( [16531,16532]"/>
  <match src="visibility [34660,34667]" dest="visibility [34436,34443]"/>
  <match src="address: address [50959,50966]" dest="address: address [50734,50741]"/>
  <match src="primitive_type [3795,3802]" dest="primitive_type [3762,3769]"/>
  <match src="internal: internal [41726,41734]" dest="internal: internal [41502,41510]"/>
  <match src="{: { [7934,7935]" dest="{: { [7901,7902]"/>
  <match src="identifier: members [40219,40226]" dest="identifier: members [39995,40002]"/>
  <match src="mload: mload [44531,44536]" dest="mload: mload [44307,44312]"/>
  <match src="binary_expression [47518,47541]" dest="binary_expression [47294,47317]"/>
  <match src="call_argument [53138,53144]" dest="call_argument [53044,53050]"/>
  <match src="identifier: dest [49045,49049]" dest="identifier: dest [48821,48825]"/>
  <match src="identifier: memPtr [47231,47237]" dest="identifier: memPtr [47007,47013]"/>
  <match src="address: address [38186,38193]" dest="address: address [37962,37969]"/>
  <match src="primitive_type [50400,50405]" dest="primitive_type [50175,50180]"/>
  <match src="call_argument [20595,20664]" dest="call_argument [20472,20541]"/>
  <match src="yul_identifier [18265,18280]" dest="yul_identifier [18199,18214]"/>
  <match src="address: address [50310,50317]" dest="address: address [50085,50092]"/>
  <match src="(: ( [28986,28987]" dest="(: ( [28830,28831]"/>
  <match src="identifier: _inner [27373,27379]" dest="identifier: _inner [27217,27223]"/>
  <match src="user_defined_type [40638,40651]" dest="user_defined_type [40413,40426]"/>
  <match src="identifier: role [37334,37338]" dest="identifier: role [37110,37114]"/>
  <match src="=: = [44394,44395]" dest="=: = [44170,44171]"/>
  <match src="binary_expression [48553,48582]" dest="binary_expression [48329,48358]"/>
  <match src="identifier: initializer [51176,51187]" dest="identifier: initializer [50952,50963]"/>
  <match src="memory: memory [15245,15251]" dest="memory: memory [15179,15185]"/>
  <match src="return_type_definition [48077,48094]" dest="return_type_definition [47853,47870]"/>
  <match src="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [37426,37674]" dest="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [37202,37450]"/>
  <match src="identifier: allowance [1111,1120]" dest="identifier: allowance [1111,1120]"/>
  <match src="parameter [10189,10198]" dest="parameter [10156,10165]"/>
  <match src="type_name [40717,40723]" dest="type_name [40492,40498]"/>
  <match src="yul_assignment [11501,11529]" dest="yul_assignment [11435,11463]"/>
  <match src="(: ( [43670,43671]" dest="(: ( [43446,43447]"/>
  <match src="=: = [25188,25189]" dest="=: = [25032,25033]"/>
  <match src="yul_identifier [47442,47449]" dest="yul_identifier [47218,47225]"/>
  <match src="): ) [31421,31422]" dest="): ) [31265,31266]"/>
  <match src="): ) [31820,31821]" dest="): ) [31664,31665]"/>
  <match src="array_access [24208,24227]" dest="array_access [24052,24071]"/>
  <match src="): ) [37106,37107]" dest="): ) [36882,36883]"/>
  <match src="uint256: uint256 [778,785]" dest="uint256: uint256 [778,785]"/>
  <match src="primitive_type [39948,39955]" dest="primitive_type [39724,39731]"/>
  <match src="event_paramater [2795,2818]" dest="event_paramater [2795,2818]"/>
  <match src="): ) [53666,53667]" dest="): ) [53572,53573]"/>
  <match src="return_statement [29529,29592]" dest="return_statement [29373,29436]"/>
  <match src="pure: pure [9409,9413]" dest="pure: pure [9376,9380]"/>
  <match src="calldata: calldata [52833,52841]" dest="calldata: calldata [52739,52747]"/>
  <match src="address: address [52765,52772]" dest="address: address [52671,52678]"/>
  <match src="comment: /*      * @param item RLP encoded bytes      */ [41624,41673]" dest="comment: /*      * @param item RLP encoded bytes      */ [41400,41449]"/>
  <match src="-: - [48501,48502]" dest="-: - [48277,48278]"/>
  <match src="parameter [5284,5293]" dest="parameter [5251,5260]"/>
  <match src="call_argument [19463,19467]" dest="call_argument [19340,19344]"/>
  <match src="identifier: target [17376,17382]" dest="identifier: target [17310,17316]"/>
  <match src="=: = [51688,51689]" dest="=: = [51463,51464]"/>
  <match src=",: , [3733,3734]" dest=",: , [3700,3701]"/>
  <match src="&lt;: &lt; [48424,48425]" dest="&lt;: &lt; [48200,48201]"/>
  <match src="type_name [42167,42176]" dest="type_name [41943,41952]"/>
  <match src="(: ( [20166,20167]" dest="(: ( [20043,20044]"/>
  <match src="identifier: EnumerableSet [34444,34457]" dest="identifier: EnumerableSet [34220,34233]"/>
  <match src="address: address [53482,53489]" dest="address: address [53388,53395]"/>
  <match src="parameter [39715,39730]" dest="parameter [39491,39506]"/>
  <match src="address: address [463,470]" dest="address: address [463,470]"/>
  <match src="yul_assignment [47706,47730]" dest="yul_assignment [47482,47506]"/>
  <match src="bytes: bytes [16332,16337]" dest="bytes: bytes [16266,16271]"/>
  <match src="identifier: toUint [54099,54105]" dest="identifier: toUint [54005,54011]"/>
  <match src="primitive_type [7305,7312]" dest="primitive_type [7272,7279]"/>
  <match src="primitive_type [14677,14682]" dest="primitive_type [14611,14616]"/>
  <match src="=&gt;: =&gt; [23718,23720]" dest="=&gt;: =&gt; [23562,23564]"/>
  <match src="identifier: _inner [30279,30285]" dest="identifier: _inner [30123,30129]"/>
  <match src="visibility [35986,35992]" dest="visibility [35762,35768]"/>
  <match src="identifier: token [20618,20623]" dest="identifier: token [20495,20500]"/>
  <match src="&lt;: &lt; [43148,43149]" dest="&lt;: &lt; [42924,42925]"/>
  <match src="binary_expression [21937,21958]" dest="binary_expression [21814,21835]"/>
  <match src="true [4676,4680]" dest="true [4643,4647]"/>
  <match src="identifier: b [4982,4983]" dest="identifier: b [4949,4950]"/>
  <match src="uint256: uint256 [48805,48812]" dest="uint256: uint256 [48581,48588]"/>
  <match src="identifier: errorMessage [10286,10298]" dest="identifier: errorMessage [10253,10265]"/>
  <match src="visibility [42126,42134]" dest="visibility [41902,41910]"/>
  <match src="{: { [52213,52214]" dest="{: { [52119,52120]"/>
  <match src="identifier: b [9369,9370]" dest="identifier: b [9336,9337]"/>
  <match src=".: . [53667,53668]" dest=".: . [53573,53574]"/>
  <match src="identifier: numItems [42279,42287]" dest="identifier: numItems [42055,42063]"/>
  <match src="&quot;: &quot; [26970,26971]" dest="&quot;: &quot; [26814,26815]"/>
  <match src="type_name [38925,38932]" dest="type_name [38701,38708]"/>
  <match src="bytes32: bytes32 [34597,34604]" dest="bytes32: bytes32 [34373,34380]"/>
  <match src="primitive_type [35413,35420]" dest="primitive_type [35189,35196]"/>
  <match src="identifier: value [28995,29000]" dest="identifier: value [28839,28844]"/>
  <match src="{: { [40388,40389]" dest="{: { [40164,40165]"/>
  <match src="primitive_type [30255,30262]" dest="primitive_type [30099,30106]"/>
  <match src="yul_function_call [47345,47391]" dest="yul_function_call [47121,47167]"/>
  <match src="}: } [8662,8663]" dest="}: } [8629,8630]"/>
  <match src="identifier: item [43943,43947]" dest="identifier: item [43719,43723]"/>
  <match src="primitive_type [27340,27344]" dest="primitive_type [27184,27188]"/>
  <match src="identifier: role [35085,35089]" dest="identifier: role [34861,34865]"/>
  <match src="=: = [46941,46942]" dest="=: = [46717,46718]"/>
  <match src="visibility [13714,13722]" dest="visibility [13648,13656]"/>
  <match src="[: [ [38251,38252]" dest="[: [ [38027,38028]"/>
  <match src=",: , [42447,42448]" dest=",: , [42223,42224]"/>
  <match src="state_mutability [4086,4090]" dest="state_mutability [4053,4057]"/>
  <match src="{: { [29267,29268]" dest="{: { [29111,29112]"/>
  <match src="yul_path [43550,43556]" dest="yul_path [43326,43332]"/>
  <match src="struct_field_assignment [15544,15556]" dest="struct_field_assignment [15478,15490]"/>
  <match src="yul_decimal_number: 32 [44688,44690]" dest="yul_decimal_number: 32 [44464,44466]"/>
  <match src="=: = [15529,15530]" dest="=: = [15463,15464]"/>
  <match src="member_expression [17541,17560]" dest="member_expression [17475,17494]"/>
  <match src="(: ( [52726,52727]" dest="(: ( [52632,52633]"/>
  <match src="{: { [30229,30230]" dest="{: { [30073,30074]"/>
  <match src="expression_statement [46591,46599]" dest="expression_statement [46367,46375]"/>
  <match src="identifier: isList [42931,42937]" dest="identifier: isList [42707,42713]"/>
  <match src="expression_statement [44939,45021]" dest="expression_statement [44715,44797]"/>
  <match src="binary_expression [47014,47040]" dest="binary_expression [46790,46816]"/>
  <match src="return: return [30240,30246]" dest="return: return [30084,30090]"/>
  <match src="inheritance_specifier [51430,51448]" dest="inheritance_specifier [51205,51223]"/>
  <match src="identifier: require [12810,12817]" dest="identifier: require [12744,12751]"/>
  <match src="type_name [35413,35420]" dest="type_name [35189,35196]"/>
  <match src="bytes: bytes [17767,17772]" dest="bytes: bytes [17701,17706]"/>
  <match src="string [53895,53930]" dest="string [53801,53836]"/>
  <match src="(: ( [15912,15913]" dest="(: ( [15846,15847]"/>
  <match src="emit: emit [40256,40260]" dest="emit: emit [40032,40036]"/>
  <match src="event_paramater [35775,35795]" dest="event_paramater [35551,35571]"/>
  <match src="type_name [2284,2291]" dest="type_name [2284,2291]"/>
  <match src="(: ( [40472,40473]" dest="(: ( [40248,40249]"/>
  <match src="{: { [32578,32579]" dest="{: { [32389,32390]"/>
  <match src="=: = [20505,20506]" dest="=: = [20382,20383]"/>
  <match src="type_name [28549,28556]" dest="type_name [28393,28400]"/>
  <match src="primitive_type [21827,21832]" dest="primitive_type [21704,21709]"/>
  <match src="): ) [49423,49424]" dest="): ) [49199,49200]"/>
  <match src="return_statement [4739,4757]" dest="return_statement [4706,4724]"/>
  <match src="=: = [17539,17540]" dest="=: = [17473,17474]"/>
  <match src="identifier: value [31215,31220]" dest="identifier: value [31059,31064]"/>
  <match src="): ) [15415,15416]" dest="): ) [15349,15350]"/>
  <match src=",: , [2818,2819]" dest=",: , [2818,2819]"/>
  <match src="return_type_definition [27635,27649]" dest="return_type_definition [27479,27493]"/>
  <match src="/: / [9491,9492]" dest="/: / [9458,9459]"/>
  <match src="identifier: set [30177,30180]" dest="identifier: set [30021,30024]"/>
  <match src="parameter [50310,50327]" dest="parameter [50085,50102]"/>
  <match src="identifier: toDeleteIndex [25606,25619]" dest="identifier: toDeleteIndex [25450,25463]"/>
  <match src="(: ( [53982,53983]" dest="(: ( [53888,53889]"/>
  <match src="bytes: bytes [14677,14682]" dest="bytes: bytes [14611,14616]"/>
  <match src="identifier: length [21948,21954]" dest="identifier: length [21825,21831]"/>
  <match src="event_paramater [35822,35844]" dest="event_paramater [35598,35620]"/>
  <match src="call_expression [15531,15564]" dest="call_expression [15465,15498]"/>
  <match src="&quot;: &quot; [7367,7368]" dest="&quot;: &quot; [7334,7335]"/>
  <match src="): ) [48993,48994]" dest="): ) [48769,48770]"/>
  <match src="identifier: item [46353,46357]" dest="identifier: item [46129,46133]"/>
  <match src="identifier: tryAdd [3717,3723]" dest="identifier: tryAdd [3684,3690]"/>
  <match src="): ) [3850,3851]" dest="): ) [3817,3818]"/>
  <match src="): ) [44696,44697]" dest="): ) [44472,44473]"/>
  <match src="assembly: assembly [41894,41902]" dest="assembly: assembly [41670,41678]"/>
  <match src="&quot;: &quot; [51631,51632]" dest="&quot;: &quot; [51406,51407]"/>
  <match src=",: , [4373,4374]" dest=",: , [4340,4341]"/>
  <match src="parameter [29228,29241]" dest="parameter [29072,29085]"/>
  <match src="variable_declaration_statement [16497,16563]" dest="variable_declaration_statement [16431,16497]"/>
  <match src="returns: returns [8574,8581]" dest="returns: returns [8541,8548]"/>
  <match src="[: [ [24731,24732]" dest="[: [ [24575,24576]"/>
  <match src="assignment_expression [40763,40842]" dest="assignment_expression [40538,40617]"/>
  <match src="assignment_expression [47004,47044]" dest="assignment_expression [46780,46820]"/>
  <match src="return_statement [17820,17838]" dest="return_statement [17754,17772]"/>
  <match src="type_name [37050,37057]" dest="type_name [36826,36833]"/>
  <match src="false [51153,51158]" dest="false [50929,50934]"/>
  <match src="type_name [27611,27618]" dest="type_name [27455,27462]"/>
  <match src="pure: pure [43380,43384]" dest="pure: pure [43156,43160]"/>
  <match src="yul_function_call [47893,47908]" dest="yul_function_call [47669,47684]"/>
  <match src="type_name [14082,14089]" dest="type_name [14016,14023]"/>
  <match src="identifier: RLPItem [46000,46007]" dest="identifier: RLPItem [45776,45783]"/>
  <match src="bytes: bytes [15871,15876]" dest="bytes: bytes [15805,15810]"/>
  <match src="call_argument [19411,19479]" dest="call_argument [19288,19356]"/>
  <match src="parameter [17693,17716]" dest="parameter [17627,17650]"/>
  <match src="(: ( [29260,29261]" dest="(: ( [29104,29105]"/>
  <match src="private: private [17746,17753]" dest="private: private [17680,17687]"/>
  <match src="public: public [51841,51847]" dest="public: public [51616,51622]"/>
  <match src="{: { [41561,41562]" dest="{: { [41337,41338]"/>
  <match src="identifier: b [3811,3812]" dest="identifier: b [3778,3779]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [5431,5664]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [5398,5631]"/>
  <match src="call_expression [45667,45681]" dest="call_expression [45443,45457]"/>
  <match src="return: return [48390,48396]" dest="return: return [48166,48172]"/>
  <match src="[: [ [40043,40044]" dest="[: [ [39819,39820]"/>
  <match src="(: ( [53806,53807]" dest="(: ( [53712,53713]"/>
  <match src="bytes32: bytes32 [51653,51660]" dest="bytes32: bytes32 [51428,51435]"/>
  <match src="): ) [25868,25869]" dest="): ) [25712,25713]"/>
  <match src="solidity: solidity [40586,40594]" dest="solidity: solidity [40362,40370]"/>
  <match src="false: false [26034,26039]" dest="false: false [25878,25883]"/>
  <match src="call_argument [16977,17018]" dest="call_argument [16911,16952]"/>
  <match src="parameter [6145,6154]" dest="parameter [6112,6121]"/>
  <match src="bytes: bytes [17267,17272]" dest="bytes: bytes [17201,17206]"/>
  <match src=",: , [39713,39714]" dest=",: , [39489,39490]"/>
  <match src="type_name [2772,2779]" dest="type_name [2772,2779]"/>
  <match src="): ) [36369,36370]" dest="): ) [36145,36146]"/>
  <match src="(: ( [30962,30963]" dest="(: ( [30806,30807]"/>
  <match src="comment: // topic2 is to address [54124,54147]" dest="comment: // topic2 is to address [54030,54053]"/>
  <match src="address: address [1136,1143]" dest="address: address [1136,1143]"/>
  <match src="call_argument [17623,17635]" dest="call_argument [17557,17569]"/>
  <match src="identifier: b [8529,8530]" dest="identifier: b [8496,8497]"/>
  <match src="}: } [40519,40520]" dest="}: } [40295,40296]"/>
  <match src="primitive_type [53975,53982]" dest="primitive_type [53881,53888]"/>
  <match src="uint256: uint256 [20778,20785]" dest="uint256: uint256 [20655,20662]"/>
  <match src="(: ( [18247,18248]" dest="(: ( [18181,18182]"/>
  <match src="type_name [35126,35133]" dest="type_name [34902,34909]"/>
  <match src="primitive_type [27830,27837]" dest="primitive_type [27674,27681]"/>
  <match src="expression_statement [25700,25744]" dest="expression_statement [25544,25588]"/>
  <match src=",: , [47362,47363]" dest=",: , [47138,47139]"/>
  <match src="type_name [30358,30361]" dest="type_name [30202,30205]"/>
  <match src="call_expression [20507,20546]" dest="call_expression [20384,20423]"/>
  <match src="call_argument [19469,19471]" dest="call_argument [19346,19348]"/>
  <match src="type_name [1176,1183]" dest="type_name [1176,1183]"/>
  <match src=",: , [15970,15971]" dest=",: , [15904,15905]"/>
  <match src="yul_evm_builtin [49480,49482]" dest="yul_evm_builtin [49256,49258]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [16034,16212]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [15968,16146]"/>
  <match src="expression_statement [49093,49110]" dest="expression_statement [48869,48886]"/>
  <match src="string [38284,38334]" dest="string [38060,38110]"/>
  <match src="-: - [47020,47021]" dest="-: - [46796,46797]"/>
  <match src="call_argument [21861,21866]" dest="call_argument [21738,21743]"/>
  <match src="&quot;: &quot; [7960,7961]" dest="&quot;: &quot; [7927,7928]"/>
  <match src="call_argument [24064,24069]" dest="call_argument [23908,23913]"/>
  <match src="call_argument [27676,27686]" dest="call_argument [27520,27530]"/>
  <match src="function_body [31167,31230]" dest="function_body [31011,31074]"/>
  <match src="primitive_type [30263,30270]" dest="primitive_type [30107,30114]"/>
  <match src="type_name [17267,17272]" dest="type_name [17201,17206]"/>
  <match src="identifier: require [40897,40904]" dest="identifier: require [40672,40679]"/>
  <match src="): ) [5414,5415]" dest="): ) [5381,5382]"/>
  <match src="contract_body [23034,31914]" dest="contract_body [22878,31758]"/>
  <match src="return: return [31178,31184]" dest="return: return [31022,31028]"/>
  <match src="type_name [25170,25177]" dest="type_name [25014,25021]"/>
  <match src="): ) [52257,52258]" dest="): ) [52163,52164]"/>
  <match src="return_type_definition [37041,37058]" dest="return_type_definition [36817,36834]"/>
  <match src="identifier: AddressSet [29204,29214]" dest="identifier: AddressSet [29048,29058]"/>
  <match src="identifier: amount [12553,12559]" dest="identifier: amount [12487,12493]"/>
  <match src="return: return [15938,15944]" dest="return: return [15872,15878]"/>
  <match src="memory: memory [16916,16922]" dest="memory: memory [16850,16856]"/>
  <match src="primitive_type [4974,4981]" dest="primitive_type [4941,4948]"/>
  <match src="identifier: RLPItem [42096,42103]" dest="identifier: RLPItem [41872,41879]"/>
  <match src="identifier: byte0 [47518,47523]" dest="identifier: byte0 [47294,47299]"/>
  <match src="identifier: value [19357,19362]" dest="identifier: value [19234,19239]"/>
  <match src="identifier: depositData [52842,52853]" dest="identifier: depositData [52748,52759]"/>
  <match src="{: { [47614,47615]" dest="{: { [47390,47391]"/>
  <match src="returns: returns [17323,17330]" dest="returns: returns [17257,17264]"/>
  <match src="(: ( [19230,19231]" dest="(: ( [19107,19108]"/>
  <match src="function_body [30229,30304]" dest="function_body [30073,30148]"/>
  <match src="primitive_type [29566,29573]" dest="primitive_type [29410,29417]"/>
  <match src="): ) [43795,43796]" dest="): ) [43571,43572]"/>
  <match src="): ) [30676,30677]" dest="): ) [30520,30521]"/>
  <match src="call_argument [8611,8617]" dest="call_argument [8578,8584]"/>
  <match src=",: , [28895,28896]" dest=",: , [28739,28740]"/>
  <match src="identifier: set [25477,25480]" dest="identifier: set [25321,25324]"/>
  <match src="uint256: uint256 [4364,4371]" dest="uint256: uint256 [4331,4338]"/>
  <match src="): ) [26422,26423]" dest="): ) [26266,26267]"/>
  <match src="function_definition [17221,17644]" dest="function_definition [17155,17578]"/>
  <match src="primitive_type [48783,48790]" dest="primitive_type [48559,48566]"/>
  <match src="{: { [47543,47544]" dest="{: { [47319,47320]"/>
  <match src="solidity_version: 0.8.0 [10451,10456]" dest="solidity_version: 0.8.0 [10385,10390]"/>
  <match src="returns: returns [26208,26215]" dest="returns: returns [26052,26059]"/>
  <match src="function: function [7867,7875]" dest="function: function [7834,7842]"/>
  <match src="binary_expression [46964,46989]" dest="binary_expression [46740,46765]"/>
  <match src="(: ( [15374,15375]" dest="(: ( [15308,15309]"/>
  <match src="call_argument [42394,42405]" dest="call_argument [42170,42181]"/>
  <match src="(: ( [42393,42394]" dest="(: ( [42169,42170]"/>
  <match src="}: } [18393,18394]" dest="}: } [18327,18328]"/>
  <match src="function_body [24586,26058]" dest="function_body [24430,25902]"/>
  <match src="parameter [14696,14709]" dest="parameter [14630,14643]"/>
  <match src="identifier: logTopicRLPList [53983,53998]" dest="identifier: logTopicRLPList [53889,53904]"/>
  <match src=".: . [40786,40787]" dest=".: . [40561,40562]"/>
  <match src="*: * [4709,4710]" dest="*: * [4676,4677]"/>
  <match src="pragma: pragma [18498,18504]" dest="pragma: pragma [22110,22116]"/>
  <match src="variable_declaration [45161,45175]" dest="variable_declaration [44937,44951]"/>
  <match src="parameter [2303,2317]" dest="parameter [2303,2317]"/>
  <match src="type_name [15143,15150]" dest="type_name [15077,15084]"/>
  <match src="type_name [5683,5690]" dest="type_name [5650,5657]"/>
  <match src="address: address [52799,52806]" dest="address: address [52705,52712]"/>
  <match src="call_expression [38269,38281]" dest="call_expression [38045,38057]"/>
  <match src="(: ( [20300,20301]" dest="(: ( [20177,20178]"/>
  <match src="/: / [4729,4730]" dest="/: / [4696,4697]"/>
  <match src="function_body [27874,27928]" dest="function_body [27718,27772]"/>
  <match src="identifier: role [40410,40414]" dest="identifier: role [40186,40190]"/>
  <match src="boolean_literal [4145,4150]" dest="boolean_literal [4112,4117]"/>
  <match src="=: = [6668,6669]" dest="=: = [6635,6636]"/>
  <match src="): ) [40884,40885]" dest="): ) [40659,40660]"/>
  <match src="primitive_type [31807,31814]" dest="primitive_type [31651,31658]"/>
  <match src="identifier: at [28484,28486]" dest="identifier: at [28328,28330]"/>
  <match src="uint256: uint256 [6190,6197]" dest="uint256: uint256 [6157,6164]"/>
  <match src="identifier: itemLength [44947,44957]" dest="identifier: itemLength [44723,44733]"/>
  <match src="}: } [7399,7400]" dest="}: } [7366,7367]"/>
  <match src="type_name [1136,1143]" dest="type_name [1136,1143]"/>
  <match src="call_argument [16598,16605]" dest="call_argument [16532,16539]"/>
  <match src="bool: bool [51139,51143]" dest="bool: bool [50915,50919]"/>
  <match src="parameter [5728,5735]" dest="parameter [5695,5702]"/>
  <match src="]: ] [36352,36353]" dest="]: ] [36128,36129]"/>
  <match src="}: } [48593,48594]" dest="}: } [48369,48370]"/>
  <match src="parameter [1871,1886]" dest="parameter [1871,1886]"/>
  <match src="identifier: value [27838,27843]" dest="identifier: value [27682,27687]"/>
  <match src="primitive_type [51833,51840]" dest="primitive_type [51608,51615]"/>
  <match src="yul_decimal_number: 256 [47368,47371]" dest="yul_decimal_number: 256 [47144,47147]"/>
  <match src="(: ( [3826,3827]" dest="(: ( [3793,3794]"/>
  <match src=",: , [45829,45830]" dest=",: , [45605,45606]"/>
  <match src="binary_expression [48325,48377]" dest="binary_expression [48101,48153]"/>
  <match src="return: return [48488,48494]" dest="return: return [48264,48270]"/>
  <match src="identifier: b [6218,6219]" dest="identifier: b [6185,6186]"/>
  <match src="identifier: only [53577,53581]" dest="identifier: only [53483,53487]"/>
  <match src="{: { [19024,19025]" dest="{: { [18901,18902]"/>
  <match src="comment: // means a value is not in the set. [23656,23691]" dest="comment: // means a value is not in the set. [23500,23535]"/>
  <match src="primitive_type [15193,15199]" dest="primitive_type [15127,15133]"/>
  <match src="identifier: Bytes32Set [27806,27816]" dest="identifier: Bytes32Set [27650,27660]"/>
  <match src="expression_statement [45445,45521]" dest="expression_statement [45221,45297]"/>
  <match src="primitive_type [41373,41378]" dest="primitive_type [41149,41154]"/>
  <match src="type_name [31123,31130]" dest="type_name [30967,30974]"/>
  <match src="user_defined_type [51413,51428]" dest="user_defined_type [51188,51203]"/>
  <match src="binary_expression [3807,3812]" dest="binary_expression [3774,3779]"/>
  <match src="identifier: copy [48768,48772]" dest="identifier: copy [48544,48548]"/>
  <match src="type_cast_expression [30975,30989]" dest="type_cast_expression [30819,30833]"/>
  <match src="function_definition [4947,5102]" dest="function_definition [4914,5069]"/>
  <match src="identifier: role [36287,36291]" dest="identifier: role [36063,36067]"/>
  <match src="(: ( [21860,21861]" dest="(: ( [21737,21738]"/>
  <match src="member_expression [54289,54309]" dest="member_expression [54142,54162]"/>
  <match src="member_expression [25477,25488]" dest="member_expression [25321,25332]"/>
  <match src="user_defined_type [27806,27816]" dest="user_defined_type [27650,27660]"/>
  <match src="identifier: role [35963,35967]" dest="identifier: role [35739,35743]"/>
  <match src="call_expression [53077,53145]" dest="call_expression [52983,53051]"/>
  <match src=",: , [5086,5087]" dest=",: , [5053,5054]"/>
  <match src="parameter [50934,50948]" dest="parameter [50709,50723]"/>
  <match src="}: } [32690,32691]" dest="}: } [32501,32502]"/>
  <match src="yul_function_call [46856,46878]" dest="yul_function_call [46632,46654]"/>
  <match src="comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [20000,20054]" dest="comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [19877,19931]"/>
  <match src=",: , [50948,50949]" dest=",: , [50723,50724]"/>
  <match src="call_argument [20618,20640]" dest="call_argument [20495,20517]"/>
  <match src="return_statement [7998,8011]" dest="return_statement [7965,7978]"/>
  <match src="): ) [49500,49501]" dest="): ) [49276,49277]"/>
  <match src="type_name [40349,40356]" dest="type_name [40125,40132]"/>
  <match src="identifier: WORD_SIZE [49132,49141]" dest="identifier: WORD_SIZE [48908,48917]"/>
  <match src="identifier: encodeWithSelector [19415,19433]" dest="identifier: encodeWithSelector [19292,19310]"/>
  <match src="identifier: lastIndex [25178,25187]" dest="identifier: lastIndex [25022,25031]"/>
  <match src="identifier: _roles [40037,40043]" dest="identifier: _roles [39813,39819]"/>
  <match src="parameter [26415,26422]" dest="parameter [26259,26266]"/>
  <match src="}: } [30375,30376]" dest="}: } [30219,30220]"/>
  <match src="identifier: approve [20963,20970]" dest="identifier: approve [20840,20847]"/>
  <match src="call_expression [16365,16383]" dest="call_expression [16299,16317]"/>
  <match src="call_argument [20551,20556]" dest="call_argument [20428,20433]"/>
  <match src="user_defined_type [44819,44826]" dest="user_defined_type [44595,44602]"/>
  <match src="(: ( [4962,4963]" dest="(: ( [4929,4930]"/>
  <match src="yul_path [49474,49478]" dest="yul_path [49250,49254]"/>
  <match src="identifier: b [10197,10198]" dest="identifier: b [10164,10165]"/>
  <match src="primitive_type [15143,15150]" dest="primitive_type [15077,15084]"/>
  <match src="primitive_type [34511,34518]" dest="primitive_type [34287,34294]"/>
  <match src="state_mutability [44011,44015]" dest="state_mutability [43787,43791]"/>
  <match src="&quot;: &quot; [38284,38285]" dest="&quot;: &quot; [38060,38061]"/>
  <match src="event_paramater [35126,35154]" dest="event_paramater [34902,34930]"/>
  <match src="{: { [30627,30628]" dest="{: { [30471,30472]"/>
  <match src="using: using [34493,34498]" dest="using: using [34269,34274]"/>
  <match src="call_argument [41981,41992]" dest="call_argument [41757,41768]"/>
  <match src=",: , [22089,22090]" dest=",: , [21966,21967]"/>
  <match src="true [24270,24274]" dest="true [24114,24118]"/>
  <match src="type_name [30158,30168]" dest="type_name [30002,30012]"/>
  <match src="type_cast_expression [30247,30296]" dest="type_cast_expression [30091,30140]"/>
  <match src="user_defined_type [30358,30361]" dest="user_defined_type [30202,30205]"/>
  <match src="): ) [27344,27345]" dest="): ) [27188,27189]"/>
  <match src=".: . [19439,19440]" dest=".: . [19316,19317]"/>
  <match src="bytes: bytes [43433,43438]" dest="bytes: bytes [43209,43214]"/>
  <match src="(: ( [48772,48773]" dest="(: ( [48548,48549]"/>
  <match src="): ) [19822,19823]" dest="): ) [19699,19700]"/>
  <match src=".: . [16545,16546]" dest=".: . [16479,16480]"/>
  <match src="primitive_type [39962,39969]" dest="primitive_type [39738,39745]"/>
  <match src="number_literal: 0 [4682,4683]" dest="number_literal: 0 [4649,4650]"/>
  <match src="memory: memory [53632,53638]" dest="memory: memory [53538,53544]"/>
  <match src="}: } [17848,17849]" dest="}: } [17782,17783]"/>
  <match src="identifier: sender [35454,35460]" dest="identifier: sender [35230,35236]"/>
  <match src="return_statement [48488,48531]" dest="return_statement [48264,48307]"/>
  <match src="call_expression [43735,43796]" dest="call_expression [43511,43572]"/>
  <match src="=: = [24228,24229]" dest="=: = [24072,24073]"/>
  <match src="variable_declaration [17500,17512]" dest="variable_declaration [17434,17446]"/>
  <match src="call_expression [14761,14848]" dest="call_expression [14695,14782]"/>
  <match src="(: ( [9422,9423]" dest="(: ( [9389,9390]"/>
  <match src="identifier: set [24047,24050]" dest="identifier: set [23891,23894]"/>
  <match src="identifier: _grantRole [39760,39770]" dest="identifier: _grantRole [39536,39546]"/>
  <match src="return: return [6270,6276]" dest="return: return [6237,6243]"/>
  <match src="(: ( [4099,4100]" dest="(: ( [4066,4067]"/>
  <match src="yul_path [18265,18280]" dest="yul_path [18199,18214]"/>
  <match src="): ) [4683,4684]" dest="): ) [4650,4651]"/>
  <match src="{: { [45378,45379]" dest="{: { [45154,45155]"/>
  <match src="yul_decimal_number: 0 [46861,46862]" dest="yul_decimal_number: 0 [46637,46638]"/>
  <match src="&lt;: &lt; [48218,48219]" dest="&lt;: &lt; [47994,47995]"/>
  <match src="identifier: currPtr [46458,46465]" dest="identifier: currPtr [46234,46241]"/>
  <match src="bytes: bytes [17693,17698]" dest="bytes: bytes [17627,17632]"/>
  <match src="parenthesized_expression [52982,52991]" dest="parenthesized_expression [52888,52897]"/>
  <match src="(: ( [52240,52241]" dest="(: ( [52146,52147]"/>
  <match src="identifier: LIST_LONG_START [47526,47541]" dest="identifier: LIST_LONG_START [47302,47317]"/>
  <match src="call_argument [45677,45680]" dest="call_argument [45453,45456]"/>
  <match src="binary_expression [47568,47592]" dest="binary_expression [47344,47368]"/>
  <match src="identifier: amount [52949,52955]" dest="identifier: amount [52855,52861]"/>
  <match src=".: . [21947,21948]" dest=".: . [21824,21825]"/>
  <match src="): ) [47808,47809]" dest="): ) [47584,47585]"/>
  <match src="true: true [51267,51271]" dest="true: true [51043,51047]"/>
  <match src="type_name [45531,45538]" dest="type_name [45307,45314]"/>
  <match src="identifier: _roles [37077,37083]" dest="identifier: _roles [36853,36859]"/>
  <match src="): ) [46409,46410]" dest="): ) [46185,46186]"/>
  <match src="number_literal: 0 [5043,5044]" dest="number_literal: 0 [5010,5011]"/>
  <match src="+: + [45812,45813]" dest="+: + [45588,45589]"/>
  <match src="type_cast_expression [54072,54108]" dest="type_cast_expression [53978,54014]"/>
  <match src="array_access [37388,37400]" dest="array_access [37164,37176]"/>
  <match src="call_expression [8603,8632]" dest="call_expression [8570,8599]"/>
  <match src="comment: // zero out src [49364,49379]" dest="comment: // zero out src [49140,49155]"/>
  <match src=",: , [19335,19336]" dest=",: , [19212,19213]"/>
  <match src="identifier: remove [29197,29203]" dest="identifier: remove [29041,29047]"/>
  <match src="function_definition [39681,39793]" dest="function_definition [39457,39569]"/>
  <match src="memory: memory [17773,17779]" dest="memory: memory [17707,17713]"/>
  <match src="indexed: indexed [35783,35790]" dest="indexed: indexed [35559,35566]"/>
  <match src="uint256: uint256 [19050,19057]" dest="uint256: uint256 [18927,18934]"/>
  <match src="if: if [47060,47062]" dest="if: if [46836,46838]"/>
  <match src="{: { [15253,15254]" dest="{: { [15187,15188]"/>
  <match src=",: , [4150,4151]" dest=",: , [4117,4118]"/>
  <match src="identifier: IERC20 [21432,21438]" dest="identifier: IERC20 [21309,21315]"/>
  <match src="return_type_definition [8574,8591]" dest="return_type_definition [8541,8558]"/>
  <match src="string [44971,45019]" dest="string [44747,44795]"/>
  <match src="primitive_type [50310,50317]" dest="primitive_type [50085,50092]"/>
  <match src="(: ( [14782,14783]" dest="(: ( [14716,14717]"/>
  <match src="identifier: AddressSet [30158,30168]" dest="identifier: AddressSet [30002,30012]"/>
  <match src="variable_declaration_statement [46238,46256]" dest="variable_declaration_statement [46014,46032]"/>
  <match src="uint256: uint256 [24698,24705]" dest="uint256: uint256 [24542,24549]"/>
  <match src="event_paramater [35413,35436]" dest="event_paramater [35189,35212]"/>
  <match src="type_cast_expression [31872,31903]" dest="type_cast_expression [31716,31747]"/>
  <match src="primitive_type [14661,14668]" dest="primitive_type [14595,14602]"/>
  <match src="boolean_literal [4173,4177]" dest="boolean_literal [4140,4144]"/>
  <match src="call_argument [53983,54010]" dest="call_argument [53889,53916]"/>
  <match src="visibility [20758,20766]" dest="visibility [20635,20643]"/>
  <match src="member_expression [26442,26460]" dest="member_expression [26286,26304]"/>
  <match src="function: function [21403,21411]" dest="function: function [21280,21288]"/>
  <match src="=: = [41406,41407]" dest="=: = [41182,41183]"/>
  <match src=".: . [20970,20971]" dest=".: . [20847,20848]"/>
  <match src="assignment_expression [47558,47596]" dest="assignment_expression [47334,47372]"/>
  <match src="call_argument [20538,20545]" dest="call_argument [20415,20422]"/>
  <match src="(: ( [42981,42982]" dest="(: ( [42757,42758]"/>
  <match src="(: ( [15363,15364]" dest="(: ( [15297,15298]"/>
  <match src="identifier: allowance [20513,20522]" dest="identifier: allowance [20390,20399]"/>
  <match src="}: } [18299,18300]" dest="}: } [18233,18234]"/>
  <match src="visibility [26195,26202]" dest="visibility [26039,26046]"/>
  <match src="parameter [7271,7280]" dest="parameter [7238,7247]"/>
  <match src="visibility [4985,4993]" dest="visibility [4952,4960]"/>
  <match src="identifier: totalSupply [310,321]" dest="identifier: totalSupply [310,321]"/>
  <match src="address: address [54072,54079]" dest="address: address [53978,53985]"/>
  <match src="if_statement [48871,48892]" dest="if_statement [48647,48668]"/>
  <match src="member_expression [20957,20970]" dest="member_expression [20834,20847]"/>
  <match src="(: ( [42287,42288]" dest="(: ( [42063,42064]"/>
  <match src="yul_evm_builtin [49341,49346]" dest="yul_evm_builtin [49117,49122]"/>
  <match src="call_expression [40488,40500]" dest="call_expression [40264,40276]"/>
  <match src="identifier: byte0 [46964,46969]" dest="identifier: byte0 [46740,46745]"/>
  <match src="{: { [36013,36014]" dest="{: { [35789,35790]"/>
  <match src="member_expression [26241,26253]" dest="member_expression [26085,26097]"/>
  <match src="function_body [48095,48594]" dest="function_body [47871,48370]"/>
  <match src="identifier: set [30650,30653]" dest="identifier: set [30494,30497]"/>
  <match src="identifier: staticcall [16546,16556]" dest="identifier: staticcall [16480,16490]"/>
  <match src="type_name [46238,46245]" dest="type_name [46014,46021]"/>
  <match src="-=: -= [48981,48983]" dest="-=: -= [48757,48759]"/>
  <match src="parameter [20432,20447]" dest="parameter [20309,20324]"/>
  <match src="parameter [19778,19790]" dest="parameter [19655,19667]"/>
  <match src="identifier: memPtr [46723,46729]" dest="identifier: memPtr [46499,46505]"/>
  <match src="parameter [50372,50389]" dest="parameter [50147,50164]"/>
  <match src="member_expression [42439,42447]" dest="member_expression [42215,42223]"/>
  <match src="binary_expression [45453,45475]" dest="binary_expression [45229,45251]"/>
  <match src="mstore: mstore [49467,49473]" dest="mstore: mstore [49243,49249]"/>
  <match src=",: , [26840,26841]" dest=",: , [26684,26685]"/>
  <match src="primitive_type [26842,26849]" dest="primitive_type [26686,26693]"/>
  <match src="member_expression [20595,20617]" dest="member_expression [20472,20494]"/>
  <match src="identifier: selector [19453,19461]" dest="identifier: selector [19330,19338]"/>
  <match src="variable_declaration [20484,20504]" dest="variable_declaration [20361,20381]"/>
  <match src="variable_declaration_statement [46266,46326]" dest="variable_declaration_statement [46042,46102]"/>
  <match src="(: ( [40298,40299]" dest="(: ( [40074,40075]"/>
  <match src="user_defined_type [28873,28883]" dest="user_defined_type [28717,28727]"/>
  <match src="function_definition [28014,28131]" dest="function_definition [27858,27975]"/>
  <match src="primitive_type [1922,1926]" dest="primitive_type [1922,1926]"/>
  <match src="variable_declaration_statement [42999,43011]" dest="variable_declaration_statement [42775,42787]"/>
  <match src=",: , [20362,20363]" dest=",: , [20239,20240]"/>
  <match src="type_name [11202,11206]" dest="type_name [11136,11140]"/>
  <match src="(: ( [28029,28030]" dest="(: ( [27873,27874]"/>
  <match src="function_definition [53434,54348]" dest="function_definition [53340,54348]"/>
  <match src=",: , [17609,17610]" dest=",: , [17543,17544]"/>
  <match src="identifier: require [43848,43855]" dest="identifier: require [43624,43631]"/>
  <match src="bool: bool [23987,23991]" dest="bool: bool [23831,23835]"/>
  <match src="struct_field_assignment [12780,12793]" dest="struct_field_assignment [12714,12727]"/>
  <match src=":=: := [47762,47764]" dest=":=: := [47538,47540]"/>
  <match src="solidity_version:  0.6.6 [40594,40600]" dest="solidity_version:  0.6.12 [40370,40377]"/>
  <match src="state_variable_declaration [34683,34733]" dest="state_variable_declaration [34459,34509]"/>
  <match src="return_type_definition [30922,30936]" dest="return_type_definition [30766,30780]"/>
  <match src="type_name [1922,1926]" dest="type_name [1922,1926]"/>
  <match src="member_expression [26907,26925]" dest="member_expression [26751,26769]"/>
  <match src="identifier: _indexes [24723,24731]" dest="identifier: _indexes [24567,24575]"/>
  <match src="function_body [30627,30685]" dest="function_body [30471,30529]"/>
  <match src="if: if [17937,17939]" dest="if: if [17871,17873]"/>
  <match src="solidity_pragma_token [40586,40600]" dest="solidity_pragma_token [40362,40377]"/>
  <match src="identifier: byteLen [47137,47144]" dest="identifier: byteLen [46913,46920]"/>
  <match src=",: , [52006,52007]" dest=",: , [51781,51782]"/>
  <match src="+=: += [49129,49131]" dest="+=: += [48905,48907]"/>
  <match src="identifier: SafeMath [19037,19045]" dest="identifier: SafeMath [18914,18922]"/>
  <match src="): ) [44313,44314]" dest="): ) [44089,44090]"/>
  <match src="{: { [10548,10549]" dest="{: { [10482,10483]"/>
  <match src="identifier: i [42619,42620]" dest="identifier: i [42395,42396]"/>
  <match src="struct_declaration [34527,34622]" dest="struct_declaration [34303,34398]"/>
  <match src="identifier: role [35407,35411]" dest="identifier: role [35183,35187]"/>
  <match src="identifier: _owner [52343,52349]" dest="identifier: _owner [52249,52255]"/>
  <match src=",: , [3847,3848]" dest=",: , [3814,3815]"/>
  <match src="internal: internal [7282,7290]" dest="internal: internal [7249,7257]"/>
  <match src="private: private [46021,46028]" dest="private: private [45797,45804]"/>
  <match src="member_expression [20934,20956]" dest="member_expression [20811,20833]"/>
  <match src="primitive_type [2284,2291]" dest="primitive_type [2284,2291]"/>
  <match src="yul_identifier [11501,11505]" dest="yul_identifier [11435,11439]"/>
  <match src="identifier: DEFAULT_ADMIN_ROLE [34707,34725]" dest="identifier: DEFAULT_ADMIN_ROLE [34483,34501]"/>
  <match src="expression_statement [40082,40117]" dest="expression_statement [39858,39893]"/>
  <match src="primitive_type [30588,30595]" dest="primitive_type [30432,30439]"/>
  <match src="type_name [20726,20733]" dest="type_name [20603,20610]"/>
  <match src="(: ( [54225,54226]" dest="(: ( [54183,54184]"/>
  <match src="number_literal: 0 [20136,20137]" dest="number_literal: 0 [20013,20014]"/>
  <match src="visibility [27322,27330]" dest="visibility [27166,27174]"/>
  <match src="internal: internal [45341,45349]" dest="internal: internal [45117,45125]"/>
  <match src="identifier: target [15863,15869]" dest="identifier: target [15797,15803]"/>
  <match src="address: address [39715,39722]" dest="address: address [39491,39498]"/>
  <match src="identifier: safeTransfer [54237,54249]" dest="identifier: safeTransfer [54195,54207]"/>
  <match src="): ) [23991,23992]" dest="): ) [23835,23836]"/>
  <match src="type_name [20449,20456]" dest="type_name [20326,20333]"/>
  <match src="type_name [42096,42103]" dest="type_name [41872,41879]"/>
  <match src="primitive_type [53799,53806]" dest="primitive_type [53705,53712]"/>
  <match src="(: ( [52279,52280]" dest="(: ( [52185,52186]"/>
  <match src="return: return [26435,26441]" dest="return: return [26279,26285]"/>
  <match src="call_argument [20990,21002]" dest="call_argument [20867,20879]"/>
  <match src="array_access [36031,36043]" dest="array_access [35807,35819]"/>
  <match src="identifier: MANAGER_ROLE [52911,52923]" dest="identifier: MANAGER_ROLE [52817,52829]"/>
  <match src="identifier: returndata_size [18179,18194]" dest="identifier: returndata_size [18113,18128]"/>
  <match src="view: view [37347,37351]" dest="view: view [37123,37127]"/>
  <match src="yul_function_call [47880,47909]" dest="yul_function_call [47656,47685]"/>
  <match src="primitive_type [29474,29481]" dest="primitive_type [29318,29325]"/>
  <match src="if: if [47514,47516]" dest="if: if [47290,47292]"/>
  <match src="comment: // The easiest way to bubble the revert reason is using memory via assembly [17983,18058]" dest="comment: // The easiest way to bubble the revert reason is using memory via assembly [17917,17992]"/>
  <match src="variable_declaration [44184,44202]" dest="variable_declaration [43960,43978]"/>
  <match src="private: private [26393,26400]" dest="private: private [26237,26244]"/>
  <match src="call_argument [52329,52341]" dest="call_argument [52235,52247]"/>
  <match src="identifier: count [46629,46634]" dest="identifier: count [46405,46410]"/>
  <match src="(: ( [49044,49045]" dest="(: ( [48820,48821]"/>
  <match src="uint256: uint256 [4066,4073]" dest="uint256: uint256 [4033,4040]"/>
  <match src="}: } [43209,43210]" dest="}: } [42985,42986]"/>
  <match src="call_argument [19260,19265]" dest="call_argument [19137,19142]"/>
  <match src="returns: returns [35998,36005]" dest="returns: returns [35774,35781]"/>
  <match src="public: public [35986,35992]" dest="public: public [35762,35768]"/>
  <match src="primitive_type [6658,6665]" dest="primitive_type [6625,6632]"/>
  <match src=",: , [15502,15503]" dest=",: , [15436,15437]"/>
  <match src="identifier: rootToken [52807,52816]" dest="identifier: rootToken [52713,52722]"/>
  <match src="(: ( [44862,44863]" dest="(: ( [44638,44639]"/>
  <match src="parameter [19792,19807]" dest="parameter [19669,19684]"/>
  <match src="identifier: rootToken [50380,50389]" dest="identifier: rootToken [50155,50164]"/>
  <match src="primitive_type [35955,35962]" dest="primitive_type [35731,35738]"/>
  <match src="identifier: LIST_SHORT_START [47576,47592]" dest="identifier: LIST_SHORT_START [47352,47368]"/>
  <match src="call_argument [45477,45519]" dest="call_argument [45253,45295]"/>
  <match src="primitive_type [20778,20785]" dest="primitive_type [20655,20662]"/>
  <match src="&lt;: &lt; [3829,3830]" dest="&lt;: &lt; [3796,3797]"/>
  <match src="function_definition [30861,30998]" dest="function_definition [30705,30842]"/>
  <match src="true [3870,3874]" dest="true [3837,3841]"/>
  <match src="(: ( [26878,26879]" dest="(: ( [26722,26723]"/>
  <match src="variable_declaration_statement [45694,45710]" dest="variable_declaration_statement [45470,45486]"/>
  <match src="): ) [15633,15634]" dest="): ) [15567,15568]"/>
  <match src="primitive_type [15272,15279]" dest="primitive_type [15206,15213]"/>
  <match src="call_expression [46502,46576]" dest="call_expression [46278,46352]"/>
  <match src="(: ( [18203,18204]" dest="(: ( [18137,18138]"/>
  <match src=".: . [40423,40424]" dest=".: . [40199,40200]"/>
  <match src="identifier: memPtr [42399,42405]" dest="identifier: memPtr [42175,42181]"/>
  <match src="memory: memory [42314,42320]" dest="memory: memory [42090,42096]"/>
  <match src="(: ( [43855,43856]" dest="(: ( [43631,43632]"/>
  <match src="): ) [15284,15285]" dest="): ) [15218,15219]"/>
  <match src="(: ( [35390,35391]" dest="(: ( [35166,35167]"/>
  <match src=",: , [17512,17513]" dest=",: , [17446,17447]"/>
  <match src="call_expression [53777,53941]" dest="call_expression [53683,53847]"/>
  <match src="): ) [37808,37809]" dest="): ) [37584,37585]"/>
  <match src="uint256: uint256 [41594,41601]" dest="uint256: uint256 [41370,41377]"/>
  <match src="parameter [29204,29226]" dest="parameter [29048,29070]"/>
  <match src="identifier: errorMessage [16295,16307]" dest="identifier: errorMessage [16229,16241]"/>
  <match src="bytes: bytes [53510,53515]" dest="bytes: bytes [53416,53421]"/>
  <match src=",: , [16279,16280]" dest=",: , [16213,16214]"/>
  <match src="primitive_type [51139,51143]" dest="primitive_type [50915,50919]"/>
  <match src="yul_path [46847,46852]" dest="yul_path [46623,46628]"/>
  <match src="identifier: value [24024,24029]" dest="identifier: value [23868,23873]"/>
  <match src="type_cast_expression [53799,53835]" dest="type_cast_expression [53705,53741]"/>
  <match src="visibility [14145,14153]" dest="visibility [14079,14087]"/>
  <match src="&quot;: &quot; [38333,38334]" dest="&quot;: &quot; [38109,38110]"/>
  <match src="parameter [19809,19822]" dest="parameter [19686,19699]"/>
  <match src="comment: // skip over an item [46468,46488]" dest="comment: // skip over an item [46244,46264]"/>
  <match src="parameter [50987,51012]" dest="parameter [50762,50787]"/>
  <match src="identifier: errorMessage [10214,10226]" dest="identifier: errorMessage [10181,10193]"/>
  <match src="return_type_definition [17759,17780]" dest="return_type_definition [17693,17714]"/>
  <match src=".: . [19414,19415]" dest=".: . [19291,19292]"/>
  <match src="[: [ [54095,54096]" dest="[: [ [54001,54002]"/>
  <match src="): ) [29002,29003]" dest="): ) [28846,28847]"/>
  <match src="variable_declaration [44449,44463]" dest="variable_declaration [44225,44239]"/>
  <match src="}: } [6768,6769]" dest="}: } [6735,6736]"/>
  <match src="assembly_statement [11490,11531]" dest="assembly_statement [11424,11465]"/>
  <match src="identifier: members [36044,36051]" dest="identifier: members [35820,35827]"/>
  <match src="primitive_type [46336,46343]" dest="primitive_type [46112,46119]"/>
  <match src="memory: memory [13738,13744]" dest="memory: memory [13672,13678]"/>
  <match src="identifier: AccessControlMixin [40616,40634]" dest="identifier: AccessControlMixin [40391,40409]"/>
  <match src="(: ( [38236,38237]" dest="(: ( [38012,38013]"/>
  <match src="yul_path [47676,47681]" dest="yul_path [47452,47457]"/>
  <match src="string [6226,6258]" dest="string [6193,6225]"/>
  <match src="call_expression [20907,21004]" dest="call_expression [20784,20881]"/>
  <match src="{: { [4424,4425]" dest="{: { [4391,4392]"/>
  <match src="comment: // # of bytes the actual length is [47165,47199]" dest="comment: // # of bytes the actual length is [46941,46975]"/>
  <match src="): ) [30293,30294]" dest="): ) [30137,30138]"/>
  <match src="mload: mload [46864,46869]" dest="mload: mload [46640,46645]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [29809,30140]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [29653,29984]"/>
  <match src="): ) [45834,45835]" dest="): ) [45610,45611]"/>
  <match src="pure: pure [42968,42972]" dest="pure: pure [42744,42748]"/>
  <match src="identifier: dataLen [47457,47464]" dest="identifier: dataLen [47233,47240]"/>
  <match src="call_expression [38968,39051]" dest="call_expression [38744,38827]"/>
  <match src="{: { [40886,40887]" dest="{: { [40661,40662]"/>
  <match src="): ) [53135,53136]" dest="): ) [53041,53042]"/>
  <match src="string [12796,12798]" dest="string [12730,12732]"/>
  <match src="identifier: b [6674,6675]" dest="identifier: b [6641,6642]"/>
  <match src="variable_declaration [53612,53649]" dest="variable_declaration [53518,53555]"/>
  <match src="assignment_expression [46933,46944]" dest="assignment_expression [46709,46720]"/>
  <match src=".: . [40218,40219]" dest=".: . [39994,39995]"/>
  <match src="variable_declaration_statement [44382,44414]" dest="variable_declaration_statement [44158,44190]"/>
  <match src="}: } [46888,46889]" dest="}: } [46664,46665]"/>
  <match src="type_name [29204,29214]" dest="type_name [29048,29058]"/>
  <match src="function_body [16346,16640]" dest="function_body [16280,16574]"/>
  <match src="yul_path [49419,49423]" dest="yul_path [49195,49199]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/EnumerableSet.sol [22171,22227]" dest="comment: // File: @openzeppelin/contracts/utils/EnumerableSet.sol [22048,22104]"/>
  <match src="uint256: uint256 [5728,5735]" dest="uint256: uint256 [5695,5702]"/>
  <match src="identifier: offset [45814,45820]" dest="identifier: offset [45590,45596]"/>
  <match src="function_definition [444,512]" dest="function_definition [444,512]"/>
  <match src="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [2600,2751]" dest="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [2600,2751]"/>
  <match src=",: , [47891,47892]" dest=",: , [47667,47668]"/>
  <match src="visibility [28912,28920]" dest="visibility [28756,28764]"/>
  <match src="identifier: DEFAULT_ADMIN_ROLE [52280,52298]" dest="identifier: DEFAULT_ADMIN_ROLE [52186,52204]"/>
  <match src="yul_function_call [47148,47164]" dest="yul_function_call [46924,46940]"/>
  <match src="comment: // Update the index for the moved value [25647,25686]" dest="comment: // Update the index for the moved value [25491,25530]"/>
  <match src="type_name [51653,51660]" dest="type_name [51428,51435]"/>
  <match src="user_defined_type [34423,34430]" dest="user_defined_type [34199,34206]"/>
  <match src="function_body [43724,43957]" dest="function_body [43500,43733]"/>
  <match src="uint256: uint256 [44382,44389]" dest="uint256: uint256 [44158,44165]"/>
  <match src="(: ( [30982,30983]" dest="(: ( [30826,30827]"/>
  <match src="primitive_type [17693,17698]" dest="primitive_type [17627,17632]"/>
  <match src="yul_function_call [49480,49501]" dest="yul_function_call [49256,49277]"/>
  <match src="returns: returns [28921,28928]" dest="returns: returns [28765,28772]"/>
  <match src="identifier: value [26188,26193]" dest="identifier: value [26032,26037]"/>
  <match src="identifier: a [6631,6632]" dest="identifier: a [6598,6599]"/>
  <match src="+: + [42533,42534]" dest="+: + [42309,42310]"/>
  <match src="=: = [42752,42753]" dest="=: = [42528,42529]"/>
  <match src="yul_path [47801,47808]" dest="yul_path [47577,47584]"/>
  <match src="user_defined_type [53612,53629]" dest="user_defined_type [53518,53535]"/>
  <match src="solidity_version: 0.8.0 [119,124]" dest="solidity_version: 0.8.0 [119,124]"/>
  <match src="identifier: byteLen [47801,47808]" dest="identifier: byteLen [47577,47584]"/>
  <match src="yul_evm_builtin [44531,44536]" dest="yul_evm_builtin [44307,44312]"/>
  <match src="variable_declaration [46799,46812]" dest="variable_declaration [46575,46588]"/>
  <match src="): ) [14175,14176]" dest="): ) [14109,14110]"/>
  <match src="parameter [21446,21463]" dest="parameter [21323,21340]"/>
  <match src="identifier: c [3803,3804]" dest="identifier: c [3770,3771]"/>
  <match src="identifier: RLPItem [41767,41774]" dest="identifier: RLPItem [41543,41550]"/>
  <match src="{: { [11208,11209]" dest="{: { [11142,11143]"/>
  <match src=",: , [41936,41937]" dest=",: , [41712,41713]"/>
  <match src="identifier: itemLen [46933,46940]" dest="identifier: itemLen [46709,46716]"/>
  <match src="pragma_directive [22266,22297]" dest="pragma_directive [31818,31849]"/>
  <match src="string [43872,43907]" dest="string [43648,43683]"/>
  <match src="uint256: uint256 [6562,6569]" dest="uint256: uint256 [6529,6536]"/>
  <match src="variable_declaration_statement [43433,43475]" dest="variable_declaration_statement [43209,43251]"/>
  <match src="address: address [2557,2564]" dest="address: address [2557,2564]"/>
  <match src="yul_assignment [43533,43557]" dest="yul_assignment [43309,43333]"/>
  <match src="identifier: toDeleteIndex [25726,25739]" dest="identifier: toDeleteIndex [25570,25583]"/>
  <match src="internal: internal [4985,4993]" dest="internal: internal [4952,4960]"/>
  <match src="identifier: _length [26368,26375]" dest="identifier: _length [26212,26219]"/>
  <match src="call_argument [42216,42220]" dest="call_argument [41992,41996]"/>
  <match src="++: ++ [46596,46598]" dest="++: ++ [46372,46374]"/>
  <match src="identifier: index [26850,26855]" dest="identifier: index [26694,26699]"/>
  <match src="yul_path [49057,49060]" dest="yul_path [48833,48836]"/>
  <match src="call_argument [15978,16017]" dest="call_argument [15912,15951]"/>
  <match src="solidity_pragma_token [49597,49611]" dest="solidity_pragma_token [49373,49388]"/>
  <match src="identifier: ptr [43533,43536]" dest="identifier: ptr [43309,43312]"/>
  <match src="identifier: target [16539,16545]" dest="identifier: target [16473,16479]"/>
  <match src=".: . [53825,53826]" dest=".: . [53731,53732]"/>
  <match src=",: , [16260,16261]" dest=",: , [16194,16195]"/>
  <match src="): ) [11206,11207]" dest="): ) [11140,11141]"/>
  <match src="{: { [15927,15928]" dest="{: { [15861,15862]"/>
  <match src="{: { [17855,17856]" dest="{: { [17789,17790]"/>
  <match src="call_argument [40431,40438]" dest="call_argument [40207,40214]"/>
  <match src="state_variable_declaration [40659,40685]" dest="state_variable_declaration [40434,40460]"/>
  <match src="call_expression [42417,42491]" dest="call_expression [42193,42267]"/>
  <match src="identifier: RLPItem [44819,44826]" dest="identifier: RLPItem [44595,44602]"/>
  <match src="string_literal [38284,38334]" dest="string_literal [38060,38110]"/>
  <match src="identifier: value [19473,19478]" dest="identifier: value [19350,19355]"/>
  <match src="uint256: uint256 [29313,29320]" dest="uint256: uint256 [29157,29164]"/>
  <match src="true [5403,5407]" dest="true [5370,5374]"/>
  <match src="yul_path [47457,47464]" dest="yul_path [47233,47240]"/>
  <match src="(: ( [40799,40800]" dest="(: ( [40574,40575]"/>
  <match src=",: , [43099,43100]" dest=",: , [42875,42876]"/>
  <match src="identifier: _msgSender [37796,37806]" dest="identifier: _msgSender [37572,37582]"/>
  <match src="[: [ [40409,40410]" dest="[: [ [40185,40186]"/>
  <match src="identifier: byte0 [48114,48119]" dest="identifier: byte0 [47890,47895]"/>
  <match src="identifier: index [28592,28597]" dest="identifier: index [28436,28441]"/>
  <match src="identifier: require [54050,54057]" dest="identifier: require [53956,53963]"/>
  <match src="identifier: len [48836,48839]" dest="identifier: len [48612,48615]"/>
  <match src="identifier: set [27902,27905]" dest="identifier: set [27746,27749]"/>
  <match src="(: ( [41697,41698]" dest="(: ( [41473,41474]"/>
  <match src="type_name [37326,37333]" dest="type_name [37102,37109]"/>
  <match src="identifier: RoleAdminChanged [35052,35068]" dest="identifier: RoleAdminChanged [34828,34844]"/>
  <match src="): ) [52306,52307]" dest="): ) [52212,52213]"/>
  <match src="function: function [43965,43973]" dest="function: function [43741,43749]"/>
  <match src="(: ( [24754,24755]" dest="(: ( [24598,24599]"/>
  <match src="identifier: amount [2311,2317]" dest="identifier: amount [2311,2317]"/>
  <match src="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [29607,29679]" dest="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [29451,29523]"/>
  <match src="(: ( [34638,34639]" dest="(: ( [34414,34415]"/>
  <match src="{: { [30937,30938]" dest="{: { [30781,30782]"/>
  <match src="identifier: a [6223,6224]" dest="identifier: a [6190,6191]"/>
  <match src="state_mutability [43701,43705]" dest="state_mutability [43477,43481]"/>
  <match src="=: = [44203,44204]" dest="=: = [43979,43980]"/>
  <match src="(: ( [6606,6607]" dest="(: ( [6573,6574]"/>
  <match src="variable_declaration [45588,45599]" dest="variable_declaration [45364,45375]"/>
  <match src="uint160: uint160 [28987,28994]" dest="uint160: uint160 [28831,28838]"/>
  <match src="&quot;: &quot; [22100,22101]" dest="&quot;: &quot; [21977,21978]"/>
  <match src="identifier: Bytes32Set [27052,27062]" dest="identifier: Bytes32Set [26896,26906]"/>
  <match src="parameter [4409,4413]" dest="parameter [4376,4380]"/>
  <match src="pragma: pragma [32007,32013]" dest="pragma: pragma [32813,32819]"/>
  <match src="variable_declaration_statement [45389,45435]" dest="variable_declaration_statement [45165,45211]"/>
  <match src="string [52241,52257]" dest="string [52147,52163]"/>
  <match src="type_name [30621,30625]" dest="type_name [30465,30469]"/>
  <match src="address: address [19792,19799]" dest="address: address [19669,19676]"/>
  <match src=".: . [53655,53656]" dest=".: . [53561,53562]"/>
  <match src="return_type_definition [23978,23992]" dest="return_type_definition [23822,23836]"/>
  <match src="): ) [48525,48526]" dest="): ) [48301,48302]"/>
  <match src="else: else [47609,47613]" dest="else: else [47385,47389]"/>
  <match src="indexed: indexed [35421,35428]" dest="indexed: indexed [35197,35204]"/>
  <match src="yul_evm_builtin [47345,47348]" dest="yul_evm_builtin [47121,47124]"/>
  <match src="identifier: a [9358,9359]" dest="identifier: a [9325,9326]"/>
  <match src="number_literal: 0x80 [41362,41366]" dest="number_literal: 0x80 [41138,41142]"/>
  <match src="bool: bool [31161,31165]" dest="bool: bool [31005,31009]"/>
  <match src="identifier: this [53131,53135]" dest="identifier: this [53037,53041]"/>
  <match src="number_literal: 0 [17961,17962]" dest="number_literal: 0 [17895,17896]"/>
  <match src="(: ( [42424,42425]" dest="(: ( [42200,42201]"/>
  <match src="member_expression [26442,26453]" dest="member_expression [26286,26297]"/>
  <match src="(: ( [6217,6218]" dest="(: ( [6184,6185]"/>
  <match src="type_name [46266,46273]" dest="type_name [46042,46049]"/>
  <match src="{: { [24772,24773]" dest="{: { [24616,24617]"/>
  <match src="type_cast_expression [28979,29002]" dest="type_cast_expression [28823,28846]"/>
  <match src="[: [ [42311,42312]" dest="[: [ [42087,42088]"/>
  <match src="binary_expression [47014,47044]" dest="binary_expression [46790,46820]"/>
  <match src="if: if [48414,48416]" dest="if: if [48190,48192]"/>
  <match src="type_name [15239,15244]" dest="type_name [15173,15178]"/>
  <match src=".: . [19452,19453]" dest=".: . [19329,19330]"/>
  <match src="]: ] [42175,42176]" dest="]: ] [41951,41952]"/>
  <match src=",: , [3773,3774]" dest=",: , [3740,3741]"/>
  <match src="memory: memory [43989,43995]" dest="memory: memory [43765,43771]"/>
  <match src="identifier: functionCall [14069,14081]" dest="identifier: functionCall [14003,14015]"/>
  <match src="uint256: uint256 [7271,7278]" dest="uint256: uint256 [7238,7245]"/>
  <match src="bytes: bytes [50400,50405]" dest="bytes: bytes [50175,50180]"/>
  <match src="expression_statement [54050,54207]" dest="expression_statement [53956,54113]"/>
  <match src="identifier: len [44692,44695]" dest="identifier: len [44468,44471]"/>
  <match src="internal: internal [29243,29251]" dest="internal: internal [29087,29095]"/>
  <match src="identifier: isList [43744,43750]" dest="identifier: isList [43520,43526]"/>
  <match src="identifier: _values [24051,24058]" dest="identifier: _values [23895,23902]"/>
  <match src="identifier: b [10279,10280]" dest="identifier: b [10246,10247]"/>
  <match src="identifier: _inner [29550,29556]" dest="identifier: _inner [29394,29400]"/>
  <match src="!: ! [24008,24009]" dest="!: ! [23852,23853]"/>
  <match src="uint256: uint256 [2820,2827]" dest="uint256: uint256 [2820,2827]"/>
  <match src="visibility [27845,27853]" dest="visibility [27689,27697]"/>
  <match src="&quot;: &quot; [39049,39050]" dest="&quot;: &quot; [38825,38826]"/>
  <match src="primitive_type [15159,15164]" dest="primitive_type [15093,15098]"/>
  <match src="): ) [792,793]" dest="): ) [792,793]"/>
  <match src="identifier: spender [20174,20181]" dest="identifier: spender [20051,20058]"/>
  <match src="(: ( [12795,12796]" dest="(: ( [12729,12730]"/>
  <match src="parameter [7891,7900]" dest="parameter [7858,7867]"/>
  <match src="member_expression [20618,20640]" dest="member_expression [20495,20517]"/>
  <match src="type_name [30567,30574]" dest="type_name [30411,30418]"/>
  <match src="yul_identifier [47706,47712]" dest="yul_identifier [47482,47488]"/>
  <match src="{: { [34543,34544]" dest="{: { [34319,34320]"/>
  <match src=".: . [41985,41986]" dest=".: . [41761,41762]"/>
  <match src="primitive_type [45588,45595]" dest="primitive_type [45364,45371]"/>
  <match src="yul_evm_builtin [45755,45758]" dest="yul_evm_builtin [45531,45534]"/>
  <match src=".: . [54001,54002]" dest=".: . [53907,53908]"/>
  <match src="identifier: value [2585,2590]" dest="identifier: value [2585,2590]"/>
  <match src="&quot;: &quot; [17385,17386]" dest="&quot;: &quot; [17319,17320]"/>
  <match src="{: { [37059,37060]" dest="{: { [36835,36836]"/>
  <match src="identifier: require [9443,9450]" dest="identifier: require [9410,9417]"/>
  <match src="identifier: token [19231,19236]" dest="identifier: token [19108,19113]"/>
  <match src="call_argument [13789,13821]" dest="call_argument [13723,13755]"/>
  <match src="primitive_type [53954,53961]" dest="primitive_type [53860,53867]"/>
  <match src="type_name [27307,27314]" dest="type_name [27151,27158]"/>
  <match src="type_name [16281,16287]" dest="type_name [16215,16221]"/>
  <match src=",: , [49049,49050]" dest=",: , [48825,48826]"/>
  <match src="identifier: abi [40783,40786]" dest="identifier: abi [40558,40561]"/>
  <match src=",: , [12543,12544]" dest=",: , [12477,12478]"/>
  <match src="call_argument [30271,30293]" dest="call_argument [30115,30137]"/>
  <match src="call_expression [54080,54107]" dest="call_expression [53986,54013]"/>
  <match src="type_name [35969,35976]" dest="type_name [35745,35752]"/>
  <match src="comment: // This method relies on extcodesize, which returns 0 for contracts in [11219,11289]" dest="comment: // This method relies on extcodesize, which returns 0 for contracts in [11153,11223]"/>
  <match src="primitive_type [8521,8528]" dest="primitive_type [8488,8495]"/>
  <match src="identifier: item [43603,43607]" dest="identifier: item [43379,43383]"/>
  <match src="=: = [51876,51877]" dest="=: = [51651,51652]"/>
  <match src="(: ( [45421,45422]" dest="(: ( [45197,45198]"/>
  <match src="identifier: WORD_SIZE [49100,49109]" dest="identifier: WORD_SIZE [48876,48885]"/>
  <match src="member_expression [15272,15293]" dest="member_expression [15206,15227]"/>
  <match src="member_expression [40206,40230]" dest="member_expression [39982,40006]"/>
  <match src="type_name [53954,53961]" dest="type_name [53860,53867]"/>
  <match src="(: ( [5682,5683]" dest="(: ( [5649,5650]"/>
  <match src="function_body [19373,19488]" dest="function_body [19250,19365]"/>
  <match src="library_declaration [19006,22167]" dest="library_declaration [18883,22044]"/>
  <match src="user_defined_type [31786,31793]" dest="user_defined_type [31630,31637]"/>
  <match src="type_name [3769,3773]" dest="type_name [3736,3740]"/>
  <match src="(: ( [4774,4775]" dest="(: ( [4741,4742]"/>
  <match src=",: , [47681,47682]" dest=",: , [47457,47458]"/>
  <match src="variable_declaration [53687,53729]" dest="variable_declaration [53593,53635]"/>
  <match src="yul_decimal_number: 1 [47728,47729]" dest="yul_decimal_number: 1 [47504,47505]"/>
  <match src="call_argument [16365,16383]" dest="call_argument [16299,16317]"/>
  <match src="(: ( [9450,9451]" dest="(: ( [9417,9418]"/>
  <match src="call_argument [13783,13787]" dest="call_argument [13717,13721]"/>
  <match src="(: ( [40030,40031]" dest="(: ( [39806,39807]"/>
  <match src="state_mutability [46029,46033]" dest="state_mutability [45805,45809]"/>
  <match src="(: ( [13731,13732]" dest="(: ( [13665,13666]"/>
  <match src="comment: // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs [25229,25335]" dest="comment: // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs [25073,25179]"/>
  <match src="type_name [10200,10206]" dest="type_name [10167,10173]"/>
  <match src="augmented_assignment_expression [49093,49109]" dest="augmented_assignment_expression [48869,48885]"/>
  <match src="call_argument [15384,15415]" dest="call_argument [15318,15349]"/>
  <match src="number_literal: 0 [54120,54121]" dest="number_literal: 0 [54026,54027]"/>
  <match src="variable_declaration [42304,42327]" dest="variable_declaration [42080,42103]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [2351,2514]" dest="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [2351,2514]"/>
  <match src="): ) [30988,30989]" dest="): ) [30832,30833]"/>
  <match src="yul_identifier [47720,47726]" dest="yul_identifier [47496,47502]"/>
  <match src="return: return [17820,17826]" dest="return: return [17754,17760]"/>
  <match src="if: if [24004,24006]" dest="if: if [23848,23850]"/>
  <match src="parameter [1888,1902]" dest="parameter [1888,1902]"/>
  <match src="address: address [20159,20166]" dest="address: address [20036,20043]"/>
  <match src="identifier: length [26919,26925]" dest="identifier: length [26763,26769]"/>
  <match src="comment: /**      * @dev Sets `adminRole` as ``role``'s admin role.      *      * Emits a {RoleAdminChanged} event.      */ [39801,39919]" dest="comment: /**      * @dev Sets `adminRole` as ``role``'s admin role.      *      * Emits a {RoleAdminChanged} event.      */ [39577,39695]"/>
  <match src="]: ] [54000,54001]" dest="]: ] [53906,53907]"/>
  <match src="pragma: pragma [22266,22272]" dest="pragma: pragma [31818,31824]"/>
  <match src="identifier: target [16865,16871]" dest="identifier: target [16799,16805]"/>
  <match src="): ) [32653,32654]" dest="): ) [32464,32465]"/>
  <match src="call_argument [13775,13781]" dest="call_argument [13709,13715]"/>
  <match src="binary_expression [9451,9456]" dest="binary_expression [9418,9423]"/>
  <match src="parameter [31123,31136]" dest="parameter [30967,30980]"/>
  <match src="view: view [31147,31151]" dest="view: view [30991,30995]"/>
  <match src="primitive_type [15178,15185]" dest="primitive_type [15112,15119]"/>
  <match src="(: ( [52982,52983]" dest="(: ( [52888,52889]"/>
  <match src=".: . [31414,31415]" dest=".: . [31258,31259]"/>
  <match src=":=: := [43537,43539]" dest=":=: := [43313,43315]"/>
  <match src="primitive_type [37326,37333]" dest="primitive_type [37102,37109]"/>
  <match src="&lt;: &lt; [48288,48289]" dest="&lt;: &lt; [48064,48065]"/>
  <match src="identifier: IERC20 [20418,20424]" dest="identifier: IERC20 [20295,20301]"/>
  <match src="identifier: _add [28954,28958]" dest="identifier: _add [28798,28802]"/>
  <match src="identifier: b [3743,3744]" dest="identifier: b [3710,3711]"/>
  <match src="primitive_type [32638,32653]" dest="primitive_type [32449,32464]"/>
  <match src=".: . [22071,22072]" dest=".: . [21948,21949]"/>
  <match src="address: address [52737,52744]" dest="address: address [52643,52650]"/>
  <match src=".: . [20512,20513]" dest=".: . [20389,20390]"/>
  <match src="type_name [23987,23991]" dest="type_name [23831,23835]"/>
  <match src="yul_if_statement [44619,44713]" dest="yul_if_statement [44395,44489]"/>
  <match src="parameter [463,478]" dest="parameter [463,478]"/>
  <match src="identifier: item [43465,43469]" dest="identifier: item [43241,43245]"/>
  <match src="function_definition [40132,40320]" dest="function_definition [39908,40096]"/>
  <match src="return_type_definition [42158,42184]" dest="return_type_definition [41934,41960]"/>
  <match src="function_body [31854,31911]" dest="function_body [31698,31755]"/>
  <match src="function: function [1854,1862]" dest="function: function [1854,1862]"/>
  <match src="type_name [14661,14668]" dest="type_name [14595,14602]"/>
  <match src="return_type_definition [803,817]" dest="return_type_definition [803,817]"/>
  <match src="sub: sub [47793,47796]" dest="sub: sub [47569,47572]"/>
  <match src="function_definition [301,356]" dest="function_definition [301,356]"/>
  <match src="variable_declaration [42604,42613]" dest="variable_declaration [42380,42389]"/>
  <match src="library_declaration [41301,49523]" dest="library_declaration [41077,49299]"/>
  <match src="primitive_type [4375,4382]" dest="primitive_type [4342,4349]"/>
  <match src="(: ( [17766,17767]" dest="(: ( [17700,17701]"/>
  <match src="&gt;: &gt; [10281,10282]" dest="&gt;: &gt; [10248,10249]"/>
  <match src="storage: storage [30169,30176]" dest="storage: storage [30013,30020]"/>
  <match src="expression_statement [53077,53146]" dest="expression_statement [52983,53052]"/>
  <match src="type_name [23721,23728]" dest="type_name [23565,23572]"/>
  <match src="parameter [30877,30896]" dest="parameter [30721,30740]"/>
  <match src="bytes: bytes [43459,43464]" dest="bytes: bytes [43235,43240]"/>
  <match src="identifier: target [15964,15970]" dest="identifier: target [15898,15904]"/>
  <match src="identifier: data [15559,15563]" dest="identifier: data [15493,15497]"/>
  <match src="identifier: functionDelegateCall [17230,17250]" dest="identifier: functionDelegateCall [17164,17184]"/>
  <match src="{: { [42988,42989]" dest="{: { [42764,42765]"/>
  <match src="user_defined_type [19309,19315]" dest="user_defined_type [19186,19192]"/>
  <match src="function_definition [1854,1928]" dest="function_definition [1854,1928]"/>
  <match src=",: , [6154,6155]" dest=",: , [6121,6122]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [14263,14624]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [14197,14558]"/>
  <match src="&quot;: &quot; [13820,13821]" dest="&quot;: &quot; [13754,13755]"/>
  <match src=",: , [14229,14230]" dest=",: , [14163,14164]"/>
  <match src=".: . [19245,19246]" dest=".: . [19122,19123]"/>
  <match src="identifier: _setRoleAdmin [39934,39947]" dest="identifier: _setRoleAdmin [39710,39723]"/>
  <match src="(: ( [15558,15559]" dest="(: ( [15492,15493]"/>
  <match src="yul_identifier [41932,41936]" dest="yul_identifier [41708,41712]"/>
  <match src="call_argument [28959,28969]" dest="call_argument [28803,28813]"/>
  <match src="identifier: UintSet [31102,31109]" dest="identifier: UintSet [30946,30953]"/>
  <match src="number_literal: 1 [48529,48530]" dest="number_literal: 1 [48305,48306]"/>
  <match src="variable_declaration_statement [45645,45682]" dest="variable_declaration_statement [45421,45458]"/>
  <match src="primitive_type [19050,19057]" dest="primitive_type [18927,18934]"/>
  <match src="return_statement [37070,37108]" dest="return_statement [36846,36884]"/>
  <match src="): ) [31220,31221]" dest="): ) [31064,31065]"/>
  <match src="type_name [16498,16502]" dest="type_name [16432,16436]"/>
  <match src="function: function [35938,35946]" dest="function: function [35714,35722]"/>
  <match src="identifier: role [38360,38364]" dest="identifier: role [38136,38140]"/>
  <match src="returns: returns [44854,44861]" dest="returns: returns [44630,44637]"/>
  <match src="address: address [40166,40173]" dest="address: address [39942,39949]"/>
  <match src=",: , [40277,40278]" dest=",: , [40053,40054]"/>
  <match src="identifier: len [45831,45834]" dest="identifier: len [45607,45610]"/>
  <match src="identifier: role [37008,37012]" dest="identifier: role [36784,36788]"/>
  <match src="parenthesized_expression [18346,18360]" dest="parenthesized_expression [18280,18294]"/>
  <match src="call_argument [38269,38281]" dest="call_argument [38045,38057]"/>
  <match src="user_defined_type [30877,30884]" dest="user_defined_type [30721,30728]"/>
  <match src="primitive_type [347,354]" dest="primitive_type [347,354]"/>
  <match src="=: = [49259,49260]" dest="=: = [49035,49036]"/>
  <match src="call_argument [31195,31205]" dest="call_argument [31039,31049]"/>
  <match src="identifier: ptr [43495,43498]" dest="identifier: ptr [43271,43274]"/>
  <match src="yul_assignment [44653,44698]" dest="yul_assignment [44429,44474]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/Address.sol [10337,10387]" dest="comment: // File: @openzeppelin/contracts/utils/Address.sol [10304,10354]"/>
  <match src="): ) [47908,47909]" dest="): ) [47684,47685]"/>
  <match src=",: , [19790,19791]" dest=",: , [19667,19668]"/>
  <match src="]: ] [25722,25723]" dest="]: ] [25566,25567]"/>
  <match src="=: = [45665,45666]" dest="=: = [45441,45442]"/>
  <match src="comment: // right shifting to get the len [47392,47424]" dest="comment: // right shifting to get the len [47168,47200]"/>
  <match src="(: ( [15142,15143]" dest="(: ( [15076,15077]"/>
  <match src="identifier: depositor [53020,53029]" dest="identifier: depositor [52926,52935]"/>
  <match src="constant: constant [41332,41340]" dest="constant: constant [41108,41116]"/>
  <match src="(: ( [16909,16910]" dest="(: ( [16843,16844]"/>
  <match src="type_name [2268,2275]" dest="type_name [2268,2275]"/>
  <match src="}: } [40319,40320]" dest="}: } [40095,40096]"/>
  <match src="identifier: approve [1863,1870]" dest="identifier: approve [1863,1870]"/>
  <match src="returns: returns [30922,30929]" dest="returns: returns [30766,30773]"/>
  <match src="primitive_type [43403,43408]" dest="primitive_type [43179,43184]"/>
  <match src="yul_path [49426,49430]" dest="yul_path [49202,49206]"/>
  <match src="string_literal [20852,20895]" dest="string_literal [20729,20772]"/>
  <match src="contract_body [10548,18397]" dest="contract_body [10482,18331]"/>
  <match src="memory: memory [14735,14741]" dest="memory: memory [14669,14675]"/>
  <match src="call_argument [17365,17383]" dest="call_argument [17299,17317]"/>
  <match src="[: [ [24220,24221]" dest="[: [ [24064,24065]"/>
  <match src="type_name [39701,39708]" dest="type_name [39477,39484]"/>
  <match src=",: , [5059,5060]" dest=",: , [5026,5027]"/>
  <match src="member_expression [42521,42532]" dest="member_expression [42297,42308]"/>
  <match src="&quot;: &quot; [20258,20259]" dest="&quot;: &quot; [20135,20136]"/>
  <match src="{: { [16924,16925]" dest="{: { [16858,16859]"/>
  <match src="function_definition [50280,50443]" dest="function_definition [50055,50218]"/>
  <match src="function: function [2246,2254]" dest="function: function [2246,2254]"/>
  <match src="identifier: set [31411,31414]" dest="identifier: set [31255,31258]"/>
  <match src="address: address [37713,37720]" dest="address: address [37489,37496]"/>
  <match src="identifier: _payloadOffset [46298,46312]" dest="identifier: _payloadOffset [46074,46088]"/>
  <match src="]: ] [53630,53631]" dest="]: ] [53536,53537]"/>
  <match src="event_paramater [35069,35089]" dest="event_paramater [34845,34865]"/>
  <match src="comment: // Bytes32Set [27024,27037]" dest="comment: // Bytes32Set [26868,26881]"/>
  <match src="assembly: assembly [18143,18151]" dest="assembly: assembly [18077,18085]"/>
  <match src="call_argument [38976,38999]" dest="call_argument [38752,38775]"/>
  <match src="string [44272,44313]" dest="string [44048,44089]"/>
  <match src="(: ( [37325,37326]" dest="(: ( [37101,37102]"/>
  <match src="bool: bool [12746,12750]" dest="bool: bool [12680,12684]"/>
  <match src="type_name [28873,28883]" dest="type_name [28717,28727]"/>
  <match src="visibility [31138,31146]" dest="visibility [30982,30990]"/>
  <match src="internal: internal [31138,31146]" dest="internal: internal [30982,30990]"/>
  <match src="parameter [21432,21444]" dest="parameter [21309,21321]"/>
  <match src="is: is [40635,40637]" dest="is: is [40410,40412]"/>
  <match src="yul_identifier [49397,49405]" dest="yul_identifier [49173,49181]"/>
  <match src=",: , [19461,19462]" dest=",: , [19338,19339]"/>
  <match src="yul_path [41932,41936]" dest="yul_path [41708,41712]"/>
  <match src="&quot;: &quot; [16016,16017]" dest="&quot;: &quot; [15950,15951]"/>
  <match src="variable_declaration_statement [46799,46813]" dest="variable_declaration_statement [46575,46589]"/>
  <match src="visibility [37730,37736]" dest="visibility [37506,37512]"/>
  <match src="call_argument [52300,52306]" dest="call_argument [52206,52212]"/>
  <match src="primitive_type [29228,29235]" dest="primitive_type [29072,29079]"/>
  <match src="member_expression [40783,40799]" dest="member_expression [40558,40574]"/>
  <match src="identifier: require [5776,5783]" dest="identifier: require [5743,5750]"/>
  <match src="identifier: spender [19800,19807]" dest="identifier: spender [19677,19684]"/>
  <match src="primitive_type [45389,45396]" dest="primitive_type [45165,45172]"/>
  <match src="return_statement [3834,3852]" dest="return_statement [3801,3819]"/>
  <match src=",: , [52298,52299]" dest=",: , [52204,52205]"/>
  <match src="identifier: data [16557,16561]" dest="identifier: data [16491,16495]"/>
  <match src="view: view [26203,26207]" dest="view: view [26047,26051]"/>
  <match src="type_name [25117,25124]" dest="type_name [24961,24968]"/>
  <match src="address: address [53975,53982]" dest="address: address [53881,53888]"/>
  <match src="type_name [42334,42343]" dest="type_name [42110,42119]"/>
  <match src="function: function [15827,15835]" dest="function: function [15761,15769]"/>
  <match src="&quot;: &quot; [6257,6258]" dest="&quot;: &quot; [6224,6225]"/>
  <match src="(: ( [47376,47377]" dest="(: ( [47152,47153]"/>
  <match src="type_name [5329,5333]" dest="type_name [5296,5300]"/>
  <match src="let: let [49393,49396]" dest="let: let [49169,49172]"/>
  <match src=",: , [19144,19145]" dest=",: , [19021,19022]"/>
  <match src="identifier: len [43608,43611]" dest="identifier: len [43384,43387]"/>
  <match src="identifier: set [25947,25950]" dest="identifier: set [25791,25794]"/>
  <match src="visibility [38203,38209]" dest="visibility [37979,37985]"/>
  <match src="type_alias [51509,51518]" dest="type_alias [51284,51293]"/>
  <match src="yul_path [41918,41924]" dest="yul_path [41694,41700]"/>
  <match src="type_name [6658,6665]" dest="type_name [6625,6632]"/>
  <match src="call_argument [20355,20362]" dest="call_argument [20232,20239]"/>
  <match src="yul_path [45228,45234]" dest="yul_path [45004,45010]"/>
  <match src="parameter [13679,13693]" dest="parameter [13613,13627]"/>
  <match src="user_defined_type [26825,26828]" dest="user_defined_type [26669,26672]"/>
  <match src="): ) [478,479]" dest="): ) [478,479]"/>
  <match src="parameter [30898,30911]" dest="parameter [30742,30755]"/>
  <match src="return_type_definition [31367,31384]" dest="return_type_definition [31211,31228]"/>
  <match src="pragma: pragma [51348,51354]" dest="pragma: pragma [51124,51130]"/>
  <match src="primitive_type [28987,28994]" dest="primitive_type [28831,28838]"/>
  <match src="internal: internal [29489,29497]" dest="internal: internal [29333,29341]"/>
  <match src="array_access [25477,25499]" dest="array_access [25321,25343]"/>
  <match src="storage: storage [31110,31117]" dest="storage: storage [30954,30961]"/>
  <match src="identifier: memPtr [44457,44463]" dest="identifier: memPtr [44233,44239]"/>
  <match src="call_argument [40473,40477]" dest="call_argument [40249,40253]"/>
  <match src="yul_evm_builtin [45238,45243]" dest="yul_evm_builtin [45014,45019]"/>
  <match src="return_statement [26435,26461]" dest="return_statement [26279,26305]"/>
  <match src="parameter [39701,39713]" dest="parameter [39477,39489]"/>
  <match src="add: add [47227,47230]" dest="add: add [47003,47006]"/>
  <match src="visibility [40666,40673]" dest="visibility [40441,40448]"/>
  <match src="solidity_version: 0.6.0 [2949,2954]" dest="solidity_version: 0.6.0 [2916,2921]"/>
  <match src=",: , [13693,13694]" dest=",: , [13627,13628]"/>
  <match src="identifier: byte0 [47014,47019]" dest="identifier: byte0 [46790,46795]"/>
  <match src="): ) [19266,19267]" dest="): ) [19143,19144]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [15650,15821]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [15584,15755]"/>
  <match src="expression_statement [52318,52351]" dest="expression_statement [52224,52257]"/>
  <match src="primitive_type [7260,7267]" dest="primitive_type [7227,7234]"/>
  <match src="]: ] [53705,53706]" dest="]: ] [53611,53612]"/>
  <match src="call_argument [15964,15970]" dest="call_argument [15898,15904]"/>
  <match src="identifier: role [38919,38923]" dest="identifier: role [38695,38699]"/>
  <match src="identifier: a [5409,5410]" dest="identifier: a [5376,5377]"/>
  <match src="): ) [20181,20182]" dest="): ) [20058,20059]"/>
  <match src="bytes32: bytes32 [35126,35133]" dest="bytes32: bytes32 [34902,34909]"/>
  <match src="uint256: uint256 [46799,46806]" dest="uint256: uint256 [46575,46582]"/>
  <match src="): ) [2317,2318]" dest="): ) [2317,2318]"/>
  <match src="expression_statement [40763,40843]" dest="expression_statement [40538,40618]"/>
  <match src="if: if [3823,3825]" dest="if: if [3790,3792]"/>
  <match src="type_name [30931,30935]" dest="type_name [30775,30779]"/>
  <match src="&quot;: &quot; [12886,12887]" dest="&quot;: &quot; [12820,12821]"/>
  <match src="parameter [20726,20741]" dest="parameter [20603,20618]"/>
  <match src="string [45477,45519]" dest="string [45253,45295]"/>
  <match src="(: ( [29511,29512]" dest="(: ( [29355,29356]"/>
  <match src="call_expression [44904,44928]" dest="call_expression [44680,44704]"/>
  <match src="identifier: TOKEN_TYPE [51677,51687]" dest="identifier: TOKEN_TYPE [51452,51462]"/>
  <match src="identifier: call [15538,15542]" dest="identifier: call [15472,15476]"/>
  <match src="identifier: adminRole [37401,37410]" dest="identifier: adminRole [37177,37186]"/>
  <match src="yul_function_call [44675,44697]" dest="yul_function_call [44451,44473]"/>
  <match src="(: ( [47367,47368]" dest="(: ( [47143,47144]"/>
  <match src="(: ( [29700,29701]" dest="(: ( [29544,29545]"/>
  <match src="identifier: len [45472,45475]" dest="identifier: len [45248,45251]"/>
  <match src="identifier: to [19345,19347]" dest="identifier: to [19222,19224]"/>
  <match src="type_name [14677,14682]" dest="type_name [14611,14616]"/>
  <match src=".: . [29296,29297]" dest=".: . [29140,29141]"/>
  <match src="identifier: revokeRole [38161,38171]" dest="identifier: revokeRole [37937,37947]"/>
  <match src="comment: // the array, and then remove the last element (sometimes called as 'swap and pop'). [24945,25029]" dest="comment: // the array, and then remove the last element (sometimes called as 'swap and pop'). [24789,24873]"/>
  <match src="member_expression [25852,25867]" dest="member_expression [25696,25711]"/>
  <match src="identifier: depositReceiver [52033,52048]" dest="identifier: depositReceiver [51808,51823]"/>
  <match src="call_argument [28112,28122]" dest="call_argument [27956,27966]"/>
  <match src="): ) [3744,3745]" dest="): ) [3711,3712]"/>
  <match src="primitive_type [35438,35445]" dest="primitive_type [35214,35221]"/>
  <match src="(: ( [462,463]" dest="(: ( [462,463]"/>
  <match src="string_literal [15978,16017]" dest="string_literal [15912,15951]"/>
  <match src="identifier: _add [23933,23937]" dest="identifier: _add [23777,23781]"/>
  <match src=".: . [28962,28963]" dest=".: . [28806,28807]"/>
  <match src="primitive_type [19146,19153]" dest="primitive_type [19023,19030]"/>
  <match src=",: , [39775,39776]" dest=",: , [39551,39552]"/>
  <match src="identifier: RLPItem [43981,43988]" dest="identifier: RLPItem [43757,43764]"/>
  <match src="identifier: remove [40424,40430]" dest="identifier: remove [40200,40206]"/>
  <match src="primitive_type [2337,2341]" dest="primitive_type [2337,2341]"/>
  <match src="return_type_definition [27331,27345]" dest="return_type_definition [27175,27189]"/>
  <match src="{: { [45213,45214]" dest="{: { [44989,44990]"/>
  <match src="comment: /**      * @notice Lock ERC20 tokens for deposit, callable only by manager      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on child chain      * @param rootToken Token which gets deposited      * @param depositData ABI encoded amount      */ [52366,52701]" dest="comment: /**      * @notice Lock ERC20 tokens for deposit, callable only by manager      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on child chain      * @param rootToken Token which gets deposited      * @param depositData ABI encoded amount      */ [52272,52607]"/>
  <match src="uint256: uint256 [44424,44431]" dest="uint256: uint256 [44200,44207]"/>
  <match src="}: } [49522,49523]" dest="}: } [49298,49299]"/>
  <match src="identifier: toList [53668,53674]" dest="identifier: toList [53574,53580]"/>
  <match src="&quot;: &quot; [6706,6707]" dest="&quot;: &quot; [6673,6674]"/>
  <match src="function: function [50280,50288]" dest="function: function [50055,50063]"/>
  <match src="yul_path [43107,43113]" dest="yul_path [42883,42889]"/>
  <match src="+: + [5762,5763]" dest="+: + [5729,5730]"/>
  <match src="call_expression [44939,45020]" dest="call_expression [44715,44796]"/>
  <match src="call_argument [17376,17382]" dest="call_argument [17310,17316]"/>
  <match src="primitive_type [20449,20456]" dest="primitive_type [20326,20333]"/>
  <match src="type_cast_expression [54112,54122]" dest="type_cast_expression [54018,54028]"/>
  <match src="function: function [7247,7255]" dest="function: function [7214,7222]"/>
  <match src="solidity_version_comparison_operator [2954,2956]" dest="solidity_version_comparison_operator [2921,2923]"/>
  <match src="bytes32: bytes32 [35955,35962]" dest="bytes32: bytes32 [35731,35738]"/>
  <match src=".: . [45606,45607]" dest=".: . [45382,45383]"/>
  <match src="type_name [24531,24534]" dest="type_name [24375,24378]"/>
  <match src="identifier: functionStaticCall [16227,16245]" dest="identifier: functionStaticCall [16161,16179]"/>
  <match src="identifier: hasRole [38237,38244]" dest="identifier: hasRole [38013,38020]"/>
  <match src="yul_assignment [46847,46878]" dest="yul_assignment [46623,46654]"/>
  <match src="member_expression [54219,54249]" dest="member_expression [54177,54207]"/>
  <match src="call_argument [43856,43870]" dest="call_argument [43632,43646]"/>
  <match src="&quot;: &quot; [44169,44170]" dest="&quot;: &quot; [43945,43946]"/>
  <match src="internal: internal [7902,7910]" dest="internal: internal [7869,7877]"/>
  <match src=",: , [20536,20537]" dest=",: , [20413,20414]"/>
  <match src="&quot;: &quot; [17424,17425]" dest="&quot;: &quot; [17358,17359]"/>
  <match src="assignment_expression [51258,51271]" dest="assignment_expression [51034,51047]"/>
  <match src="yul_assignment [41918,41943]" dest="yul_assignment [41694,41719]"/>
  <match src="}: } [29598,29599]" dest="}: } [29442,29443]"/>
  <match src="variable_declaration_statement [42604,42618]" dest="variable_declaration_statement [42380,42394]"/>
  <match src="visibility [48064,48071]" dest="visibility [47840,47847]"/>
  <match src="function_body [26888,27016]" dest="function_body [26732,26860]"/>
  <match src="binary_expression [46284,46325]" dest="binary_expression [46060,46101]"/>
  <match src="identifier: target [13687,13693]" dest="identifier: target [13621,13627]"/>
  <match src="[: [ [37394,37395]" dest="[: [ [37170,37171]"/>
  <match src="type_name [51523,51540]" dest="type_name [51298,51315]"/>
  <match src="private: private [26857,26864]" dest="private: private [26701,26708]"/>
  <match src="member_expression [30650,30660]" dest="member_expression [30494,30504]"/>
  <match src="(: ( [23709,23710]" dest="(: ( [23553,23554]"/>
  <match src="(: ( [45999,46000]" dest="(: ( [45775,45776]"/>
  <match src="returns: returns [46034,46041]" dest="returns: returns [45810,45817]"/>
  <match src="type_name [5728,5735]" dest="type_name [5695,5702]"/>
  <match src=",: , [52980,52981]" dest=",: , [52886,52887]"/>
  <match src="internal: internal [39732,39740]" dest="internal: internal [39508,39516]"/>
  <match src="&quot;: &quot; [42489,42490]" dest="&quot;: &quot; [42265,42266]"/>
  <match src="primitive_type [16857,16864]" dest="primitive_type [16791,16798]"/>
  <match src="yul_decimal_number: 32 [44630,44632]" dest="yul_decimal_number: 32 [44406,44408]"/>
  <match src="contract_body [3560,10333]" dest="contract_body [3527,10300]"/>
  <match src="type_name [51582,51589]" dest="type_name [51357,51364]"/>
  <match src="variable_declaration_statement [42504,42563]" dest="variable_declaration_statement [42280,42339]"/>
  <match src="call_expression [15364,15382]" dest="call_expression [15298,15316]"/>
  <match src="is: is [51410,51412]" dest="is: is [51185,51187]"/>
  <match src="string_literal [12622,12653]" dest="string_literal [12556,12587]"/>
  <match src="type_name [28030,28040]" dest="type_name [27874,27884]"/>
  <match src="identifier: set [25594,25597]" dest="identifier: set [25438,25441]"/>
  <match src="}: } [39097,39098]" dest="}: } [38873,38874]"/>
  <match src="identifier: a [5292,5293]" dest="identifier: a [5259,5260]"/>
  <match src="indexed: indexed [2565,2572]" dest="indexed: indexed [2565,2572]"/>
  <match src="member_expression [38245,38267]" dest="member_expression [38021,38043]"/>
  <match src="function_body [17346,17644]" dest="function_body [17280,17578]"/>
  <match src="parameter [45320,45339]" dest="parameter [45096,45115]"/>
  <match src="identifier: safeDecreaseAllowance [20690,20711]" dest="identifier: safeDecreaseAllowance [20567,20588]"/>
  <match src="number_literal: 0 [4152,4153]" dest="number_literal: 0 [4119,4120]"/>
  <match src="uint256: uint256 [3724,3731]" dest="uint256: uint256 [3691,3698]"/>
  <match src="member_expression [45067,45075]" dest="member_expression [44843,44851]"/>
  <match src="function_definition [29685,29802]" dest="function_definition [29529,29646]"/>
  <match src=",: , [20830,20831]" dest=",: , [20707,20708]"/>
  <match src="identifier: _contains [27892,27901]" dest="identifier: _contains [27736,27745]"/>
  <match src="function_body [52146,52148]" dest="function_body [52052,52054]"/>
  <match src="identifier: exitTokens [53443,53453]" dest="identifier: exitTokens [53349,53359]"/>
  <match src="identifier: item [46313,46317]" dest="identifier: item [46089,46093]"/>
  <match src="(: ( [31785,31786]" dest="(: ( [31629,31630]"/>
  <match src="function_body [3784,3886]" dest="function_body [3751,3853]"/>
  <match src="binary_expression [9489,9494]" dest="binary_expression [9456,9461]"/>
  <match src="): ) [28052,28053]" dest="): ) [27896,27897]"/>
  <match src="constant: constant [41425,41433]" dest="constant: constant [41201,41209]"/>
  <match src="identifier: IERC20 [20712,20718]" dest="identifier: IERC20 [20589,20595]"/>
  <match src="): ) [29723,29724]" dest="): ) [29567,29568]"/>
  <match src="string: string [9372,9378]" dest="string: string [9339,9345]"/>
  <match src="storage: storage [26167,26174]" dest="storage: storage [26011,26018]"/>
  <match src="type_name [4375,4382]" dest="type_name [4342,4349]"/>
  <match src="(: ( [47883,47884]" dest="(: ( [47659,47660]"/>
  <match src="memory: memory [16268,16274]" dest="memory: memory [16202,16208]"/>
  <match src="identifier: b [7953,7954]" dest="identifier: b [7920,7921]"/>
  <match src="type_cast_expression [40776,40842]" dest="type_cast_expression [40551,40617]"/>
  <match src="identifier: AddressSet [28873,28883]" dest="identifier: AddressSet [28717,28727]"/>
  <match src="identifier: set [28892,28895]" dest="identifier: set [28736,28739]"/>
  <match src=",: , [9456,9457]" dest=",: , [9423,9424]"/>
  <match src="(: ( [2336,2337]" dest="(: ( [2336,2337]"/>
  <match src="solidity: solidity [10433,10441]" dest="solidity: solidity [10367,10375]"/>
  <match src="identifier: byte0 [47568,47573]" dest="identifier: byte0 [47344,47349]"/>
  <match src="identifier: value [14704,14709]" dest="identifier: value [14638,14643]"/>
  <match src="): ) [18214,18215]" dest="): ) [18148,18149]"/>
  <match src="return: return [27661,27667]" dest="return: return [27505,27511]"/>
  <match src="): ) [6741,6742]" dest="): ) [6708,6709]"/>
  <match src="function_definition [7867,8018]" dest="function_definition [7834,7985]"/>
  <match src="return: return [31396,31402]" dest="return: return [31240,31246]"/>
  <match src=".: . [37089,37090]" dest=".: . [36865,36866]"/>
  <match src="visibility [26393,26400]" dest="visibility [26237,26244]"/>
  <match src="comment: // File: @openzeppelin/contracts/access/AccessControl.sol [32939,32996]" dest="comment: // File: @openzeppelin/contracts/access/AccessControl.sol [32750,32807]"/>
  <match src="using: using [19031,19036]" dest="using: using [18908,18913]"/>
  <match src="boolean_literal [3870,3874]" dest="boolean_literal [3837,3841]"/>
  <match src="=: = [34726,34727]" dest="=: = [34502,34503]"/>
  <match src="comment: // shfit to the correct location if neccesary [44560,44605]" dest="comment: // shfit to the correct location if neccesary [44336,44381]"/>
  <match src="external: external [324,332]" dest="external: external [324,332]"/>
  <match src="type_name [45588,45595]" dest="type_name [45364,45371]"/>
  <match src="identifier: value [20127,20132]" dest="identifier: value [20004,20009]"/>
  <match src="): ) [17565,17566]" dest="): ) [17499,17500]"/>
  <match src="identifier: rootToken [52075,52084]" dest="identifier: rootToken [51850,51859]"/>
  <match src="variable_declaration [25457,25474]" dest="variable_declaration [25301,25318]"/>
  <match src="): ) [44065,44066]" dest="): ) [43841,43842]"/>
  <match src=",: , [35411,35412]" dest=",: , [35187,35188]"/>
  <match src="identifier: depositReceiver [53031,53046]" dest="identifier: depositReceiver [52937,52952]"/>
  <match src="parameter [8532,8558]" dest="parameter [8499,8525]"/>
  <match src="type_name [16873,16878]" dest="type_name [16807,16812]"/>
  <match src="primitive_type [3769,3773]" dest="primitive_type [3736,3740]"/>
  <match src="(: ( [18346,18347]" dest="(: ( [18280,18281]"/>
  <match src="): ) [30195,30196]" dest="): ) [30039,30040]"/>
  <match src="identifier: returndata_size [18265,18280]" dest="identifier: returndata_size [18199,18214]"/>
  <match src="call_expression [17541,17566]" dest="call_expression [17475,17500]"/>
  <match src="type_name [48106,48113]" dest="type_name [47882,47889]"/>
  <match src=".: . [28115,28116]" dest=".: . [27959,27960]"/>
  <match src="identifier: value [20751,20756]" dest="identifier: value [20628,20633]"/>
  <match src="solidity_pragma_token [22273,22296]" dest="solidity_pragma_token [31825,31848]"/>
  <match src="&quot;: &quot; [46529,46530]" dest="&quot;: &quot; [46305,46306]"/>
  <match src="yul_evm_builtin [18244,18247]" dest="yul_evm_builtin [18178,18181]"/>
  <match src="identifier: encodeWithSelector [19212,19230]" dest="identifier: encodeWithSelector [19089,19107]"/>
  <match src="type_name [30588,30595]" dest="type_name [30432,30439]"/>
  <match src="internal: internal [31353,31361]" dest="internal: internal [31197,31205]"/>
  <match src=".: . [41811,41812]" dest=".: . [41587,41588]"/>
  <match src="identifier: AccessControlMixin [51430,51448]" dest="identifier: AccessControlMixin [51205,51223]"/>
  <match src="function: function [37304,37312]" dest="function: function [37080,37088]"/>
  <match src="state_mutability [4395,4399]" dest="state_mutability [4362,4366]"/>
  <match src="): ) [37057,37058]" dest="): ) [36833,36834]"/>
  <match src=".: . [45071,45072]" dest=".: . [44847,44848]"/>
  <match src="comment: /** RLPItem conversions into data types **/ [43218,43261]" dest="comment: /** RLPItem conversions into data types **/ [42994,43037]"/>
  <match src="parameter [48828,48839]" dest="parameter [48604,48615]"/>
  <match src="parameter [30220,30227]" dest="parameter [30064,30071]"/>
  <match src="parameter [36007,36011]" dest="parameter [35783,35787]"/>
  <match src="call_argument [37764,37809]" dest="call_argument [37540,37585]"/>
  <match src="call_expression [30645,30677]" dest="call_expression [30489,30521]"/>
  <match src="parameter [43715,43722]" dest="parameter [43491,43498]"/>
  <match src="string_literal [21887,21921]" dest="string_literal [21764,21798]"/>
  <match src="address: address [53954,53961]" dest="address: address [53860,53867]"/>
  <match src="primitive_type [31161,31165]" dest="primitive_type [31005,31009]"/>
  <match src="parameter [52799,52816]" dest="parameter [52705,52722]"/>
  <match src="return: return [43921,43927]" dest="return: return [43697,43703]"/>
  <match src="identifier: logTopicRLPList [54080,54095]" dest="identifier: logTopicRLPList [53986,54001]"/>
  <match src="{: { [17781,17782]" dest="{: { [17715,17716]"/>
  <match src="call_argument [15364,15382]" dest="call_argument [15298,15316]"/>
  <match src="binary_expression [6670,6675]" dest="binary_expression [6637,6642]"/>
  <match src="identifier: exitTokens [50913,50923]" dest="identifier: exitTokens [50688,50698]"/>
  <match src="): ) [16535,16536]" dest="): ) [16469,16470]"/>
  <match src="}: } [3885,3886]" dest="}: } [3852,3853]"/>
  <match src="identifier: role [38252,38256]" dest="identifier: role [38028,38032]"/>
  <match src="yul_variable_declaration [47657,47688]" dest="yul_variable_declaration [47433,47464]"/>
  <match src="): ) [26193,26194]" dest="): ) [26037,26038]"/>
  <match src=",: , [48169,48170]" dest=",: , [47945,47946]"/>
  <match src="pragma_directive [33035,33066]" dest="pragma_directive [18377,18408]"/>
  <match src="): ) [16561,16562]" dest="): ) [16495,16496]"/>
  <match src="memory: memory [9379,9385]" dest="memory: memory [9346,9352]"/>
  <match src="member_expression [44961,44969]" dest="member_expression [44737,44745]"/>
  <match src=",: , [19467,19468]" dest=",: , [19344,19345]"/>
  <match src="parameter [7260,7269]" dest="parameter [7227,7236]"/>
  <match src="identifier: adminRole [40107,40116]" dest="identifier: adminRole [39883,39892]"/>
  <match src="identifier: abi [20595,20598]" dest="identifier: abi [20472,20475]"/>
  <match src="{: { [19833,19834]" dest="{: { [19710,19711]"/>
  <match src="pragma_directive [51083,51105]" dest="pragma_directive [50858,50881]"/>
  <match src="primitive_type [29313,29320]" dest="primitive_type [29157,29164]"/>
  <match src="number_literal: 1 [25211,25212]" dest="number_literal: 1 [25055,25056]"/>
  <match src="return_statement [36334,36371]" dest="return_statement [36110,36147]"/>
  <match src=",: , [50327,50328]" dest=",: , [50102,50103]"/>
  <match src=".: . [36361,36362]" dest=".: . [36137,36138]"/>
  <match src="=: = [53650,53651]" dest="=: = [53556,53557]"/>
  <match src="call_expression [24009,24030]" dest="call_expression [23853,23874]"/>
  <match src="}: } [41004,41005]" dest="}: } [40779,40780]"/>
  <match src="type_name [40166,40173]" dest="type_name [39942,39949]"/>
  <match src="type_name [44184,44191]" dest="type_name [43960,43967]"/>
  <match src="&quot;: &quot; [54194,54195]" dest="&quot;: &quot; [54100,54101]"/>
  <match src="memory: memory [17273,17279]" dest="memory: memory [17207,17213]"/>
  <match src="}: } [17643,17644]" dest="}: } [17577,17578]"/>
  <match src="function: function [40691,40699]" dest="function: function [40466,40474]"/>
  <match src="user_defined_type [19778,19784]" dest="user_defined_type [19655,19661]"/>
  <match src="&quot;: &quot; [15414,15415]" dest="&quot;: &quot; [15348,15349]"/>
  <match src="): ) [16382,16383]" dest="): ) [16316,16317]"/>
  <match src="yul_identifier [49045,49049]" dest="yul_identifier [48821,48825]"/>
  <match src="parameter [26180,26193]" dest="parameter [26024,26037]"/>
  <match src="uint256: uint256 [5694,5701]" dest="uint256: uint256 [5661,5668]"/>
  <match src="call_argument [52969,52980]" dest="call_argument [52875,52886]"/>
  <match src="call_expression [20801,20896]" dest="call_expression [20678,20773]"/>
  <match src="&lt;:  &lt; [22289,22291]" dest="&lt;:  &lt; [31841,31843]"/>
  <match src=",: , [45763,45764]" dest=",: , [45539,45540]"/>
  <match src="string [15384,15415]" dest="string [15318,15349]"/>
  <match src="variable_declaration [42999,43010]" dest="variable_declaration [42775,42786]"/>
  <match src="return: return [37070,37076]" dest="return: return [36846,36852]"/>
  <match src="type_cast_expression [20523,20536]" dest="type_cast_expression [20400,20413]"/>
  <match src="(: ( [43584,43585]" dest="(: ( [43360,43361]"/>
  <match src="identifier: memPtr [44364,44370]" dest="identifier: memPtr [44140,44146]"/>
  <match src="identifier: div [9346,9349]" dest="identifier: div [9313,9316]"/>
  <match src="comment: // Look for revert reason and bubble it up if present [17870,17923]" dest="comment: // Look for revert reason and bubble it up if present [17804,17857]"/>
  <match src="type_name [42361,42368]" dest="type_name [42137,42144]"/>
  <match src="(: ( [4172,4173]" dest="(: ( [4139,4140]"/>
  <match src="function_definition [27788,27928]" dest="function_definition [27632,27772]"/>
  <match src="type_name [52737,52744]" dest="type_name [52643,52650]"/>
  <match src="identifier: item [44262,44266]" dest="identifier: item [44038,44042]"/>
  <match src="identifier: _callOptionalReturn [20568,20587]" dest="identifier: _callOptionalReturn [20445,20464]"/>
  <match src="number_literal: 2 [54096,54097]" dest="number_literal: 2 [54002,54003]"/>
  <match src="primitive_type [29748,29755]" dest="primitive_type [29592,29599]"/>
  <match src="(: ( [26906,26907]" dest="(: ( [26750,26751]"/>
  <match src="member_expression [32916,32924]" dest="member_expression [32727,32735]"/>
  <match src="): ) [43947,43948]" dest="): ) [43723,43724]"/>
  <match src="array_access [36341,36353]" dest="array_access [36117,36129]"/>
  <match src=",: , [51216,51217]" dest=",: , [50992,50993]"/>
  <match src="primitive_type [9372,9378]" dest="primitive_type [9339,9345]"/>
  <match src="return: return [46622,46628]" dest="return: return [46398,46404]"/>
  <match src="call_expression [38348,38374]" dest="call_expression [38124,38150]"/>
  <match src=".: . [43469,43470]" dest=".: . [43245,43246]"/>
  <match src="for: for [51487,51490]" dest="for: for [51262,51265]"/>
  <match src="address: address [19082,19089]" dest="address: address [18959,18966]"/>
  <match src="identifier: adminRole [40050,40059]" dest="identifier: adminRole [39826,39835]"/>
  <match src="(: ( [42095,42096]" dest="(: ( [41871,41872]"/>
  <match src="primitive_type [36314,36321]" dest="primitive_type [36090,36097]"/>
  <match src="(: ( [17678,17679]" dest="(: ( [17612,17613]"/>
  <match src="identifier: b [4736,4737]" dest="identifier: b [4703,4704]"/>
  <match src="identifier: token [20957,20962]" dest="identifier: token [20834,20839]"/>
  <match src="identifier: memPtr [45427,45433]" dest="identifier: memPtr [45203,45209]"/>
  <match src="): ) [15527,15528]" dest="): ) [15461,15462]"/>
  <match src="(: ( [4363,4364]" dest="(: ( [4330,4331]"/>
  <match src="block_statement [48995,49153]" dest="block_statement [48771,48929]"/>
  <match src="&gt;: &gt; [26926,26927]" dest="&gt;: &gt; [26770,26771]"/>
  <match src="call_argument [54080,54107]" dest="call_argument [53986,54013]"/>
  <match src="{: { [27346,27347]" dest="{: { [27190,27191]"/>
  <match src="variable_declaration [43487,43498]" dest="variable_declaration [43263,43274]"/>
  <match src="binary_expression [45602,45619]" dest="binary_expression [45378,45395]"/>
  <match src="uint256: uint256 [44184,44191]" dest="uint256: uint256 [43960,43967]"/>
  <match src="): ) [46575,46576]" dest="): ) [46351,46352]"/>
  <match src="visibility [11179,11187]" dest="visibility [11113,11121]"/>
  <match src="internal: internal [14711,14719]" dest="internal: internal [14645,14653]"/>
  <match src="primitive_type [50372,50379]" dest="primitive_type [50147,50154]"/>
  <match src="parameter [23938,23953]" dest="parameter [23782,23797]"/>
  <match src="source_file [0,54351]" dest="source_file [0,54351]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [32042,32550]" dest="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [31853,32361]"/>
  <match src="user_defined_type [53687,53704]" dest="user_defined_type [53593,53610]"/>
  <match src="state_mutability [6176,6180]" dest="state_mutability [6143,6147]"/>
  <match src="(: ( [4659,4660]" dest="(: ( [4626,4627]"/>
  <match src="true: true [24270,24274]" dest="true: true [24114,24118]"/>
  <match src="returns: returns [45355,45362]" dest="returns: returns [45131,45138]"/>
  <match src="function_definition [17652,18394]" dest="function_definition [17586,18328]"/>
  <match src="return_statement [48546,48587]" dest="return_statement [48322,48363]"/>
  <match src="true [51267,51271]" dest="true [51043,51047]"/>
  <match src="parameter [27830,27843]" dest="parameter [27674,27687]"/>
  <match src="let: let [47133,47136]" dest="let: let [46909,46912]"/>
  <match src="expression_statement [44240,44315]" dest="expression_statement [44016,44091]"/>
  <match src="{: { [19170,19171]" dest="{: { [19047,19048]"/>
  <match src="call_argument [31884,31894]" dest="call_argument [31728,31738]"/>
  <match src="call_argument [40288,40300]" dest="call_argument [40064,40076]"/>
  <match src="identifier: role [37779,37783]" dest="identifier: role [37555,37559]"/>
  <match src="function_body [9432,9502]" dest="function_body [9399,9469]"/>
  <match src="function: function [39681,39689]" dest="function: function [39457,39465]"/>
  <match src="type_name [41869,41876]" dest="type_name [41645,41652]"/>
  <match src="identifier: account [40231,40238]" dest="identifier: account [40007,40014]"/>
  <match src="returns: returns [4400,4407]" dest="returns: returns [4367,4374]"/>
  <match src="if_statement [48264,48587]" dest="if_statement [48040,48363]"/>
  <match src="identifier: destPtr [45744,45751]" dest="identifier: destPtr [45520,45527]"/>
  <match src="(: ( [1870,1871]" dest="(: ( [1870,1871]"/>
  <match src="parameter [17251,17265]" dest="parameter [17185,17199]"/>
  <match src="primitive_type [17286,17292]" dest="primitive_type [17220,17226]"/>
  <match src="call_expression [15264,15345]" dest="call_expression [15198,15279]"/>
  <match src=",: , [48794,48795]" dest=",: , [48570,48571]"/>
  <match src="identifier: require [15356,15363]" dest="identifier: require [15290,15297]"/>
  <match src="type_name [42304,42311]" dest="type_name [42080,42087]"/>
  <match src=":=: := [47450,47452]" dest=":=: := [47226,47228]"/>
  <match src="(: ( [28929,28930]" dest="(: ( [28773,28774]"/>
  <match src="identifier: byte0 [48418,48423]" dest="identifier: byte0 [48194,48199]"/>
  <match src="identifier: value [15186,15191]" dest="identifier: value [15120,15125]"/>
  <match src="member_expression [36031,36051]" dest="member_expression [35807,35827]"/>
  <match src="&gt;=:  &gt;= [10441,10444]" dest="&gt;=:  &gt;= [10375,10378]"/>
  <match src="boolean_literal [4747,4752]" dest="boolean_literal [4714,4719]"/>
  <match src="string [13789,13821]" dest="string [13723,13755]"/>
  <match src="function_body [53601,54348]" dest="function_body [53507,54348]"/>
  <match src="return_statement [16573,16633]" dest="return_statement [16507,16567]"/>
  <match src="): ) [14143,14144]" dest="): ) [14077,14078]"/>
  <match src="primitive_type [44327,44334]" dest="primitive_type [44103,44110]"/>
  <match src="type_name [27587,27597]" dest="type_name [27431,27441]"/>
  <match src="identifier: token [20719,20724]" dest="identifier: token [20596,20601]"/>
  <match src="{: { [45729,45730]" dest="{: { [45505,45506]"/>
  <match src="return: return [5046,5052]" dest="return: return [5013,5019]"/>
  <match src="bytes32: bytes32 [27830,27837]" dest="bytes32: bytes32 [27674,27681]"/>
  <match src="binary_expression [48504,48525]" dest="binary_expression [48280,48301]"/>
  <match src="boolean_literal [5082,5086]" dest="boolean_literal [5049,5053]"/>
  <match src="type_name [43403,43408]" dest="type_name [43179,43184]"/>
  <match src="parameter [15913,15925]" dest="parameter [15847,15859]"/>
  <match src="address: address [20817,20824]" dest="address: address [20694,20701]"/>
  <match src="(: ( [43714,43715]" dest="(: ( [43490,43491]"/>
  <match src="binary_expression [20127,20137]" dest="binary_expression [20004,20014]"/>
  <match src="comment: // Return data is optional [21962,21988]" dest="comment: // Return data is optional [21839,21865]"/>
  <match src="): ) [37860,37861]" dest="): ) [37636,37637]"/>
  <match src="return: return [10310,10316]" dest="return: return [10277,10283]"/>
  <match src="identifier: set [29293,29296]" dest="identifier: set [29137,29140]"/>
  <match src="(: ( [12596,12597]" dest="(: ( [12530,12531]"/>
  <match src="primitive_type [41419,41424]" dest="primitive_type [41195,41200]"/>
  <match src="(: ( [46869,46870]" dest="(: ( [46645,46646]"/>
  <match src="binary_expression [6277,6282]" dest="binary_expression [6244,6249]"/>
  <match src="yul_path [11521,11528]" dest="yul_path [11455,11462]"/>
  <match src="call_expression [16539,16562]" dest="call_expression [16473,16496]"/>
  <match src=",: , [52341,52342]" dest=",: , [52247,52248]"/>
  <match src="identifier: memPtr [45169,45175]" dest="identifier: memPtr [44945,44951]"/>
  <match src="): ) [44543,44544]" dest="): ) [44319,44320]"/>
  <match src="): ) [2833,2834]" dest="): ) [2833,2834]"/>
  <match src="identifier: len [44390,44393]" dest="identifier: len [44166,44169]"/>
  <match src="comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [21020,21397]" dest="comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [20897,21274]"/>
  <match src="using_directive [51503,51541]" dest="using_directive [51278,51316]"/>
  <match src="(: ( [45799,45800]" dest="(: ( [45575,45576]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {trySub}.      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [8026,8491]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {trySub}.      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [7993,8458]"/>
  <match src="identifier: functionCallWithValue [14195,14216]" dest="identifier: functionCallWithValue [14129,14150]"/>
  <match src="type_name [52827,52832]" dest="type_name [52733,52738]"/>
  <match src="return: return [14188,14194]" dest="return: return [14122,14128]"/>
  <match src="parameter [6562,6571]" dest="parameter [6529,6538]"/>
  <match src=".: . [32919,32920]" dest=".: . [32730,32731]"/>
  <match src="type_cast_expression [31207,31221]" dest="type_cast_expression [31051,31065]"/>
  <match src="type_name [43487,43494]" dest="type_name [43263,43270]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [24346,24508]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [24190,24352]"/>
  <match src="yul_evm_builtin [49337,49340]" dest="yul_evm_builtin [49113,49116]"/>
  <match src="address: address [19323,19330]" dest="address: address [19200,19207]"/>
  <match src="member_expression [52958,52968]" dest="member_expression [52864,52874]"/>
  <match src="call_argument [45563,45574]" dest="call_argument [45339,45350]"/>
  <match src="yul_function_call [49353,49362]" dest="yul_function_call [49129,49138]"/>
  <match src="): ) [29587,29588]" dest="): ) [29431,29432]"/>
  <match src="&quot;: &quot; [7340,7341]" dest="&quot;: &quot; [7307,7308]"/>
  <match src="(: ( [45452,45453]" dest="(: ( [45228,45229]"/>
  <match src="if_statement [17792,18387]" dest="if_statement [17726,18321]"/>
  <match src="function_definition [5670,5849]" dest="function_definition [5637,5816]"/>
  <match src="mload: mload [18198,18203]" dest="mload: mload [18132,18137]"/>
  <match src="assembly_statement [43060,43126]" dest="assembly_statement [42836,42902]"/>
  <match src="identifier: errorMessage [8619,8631]" dest="identifier: errorMessage [8586,8598]"/>
  <match src="call_expression [42660,42679]" dest="call_expression [42436,42455]"/>
  <match src="memory: memory [41704,41710]" dest="memory: memory [41480,41486]"/>
  <match src="returns: returns [9414,9421]" dest="returns: returns [9381,9388]"/>
  <match src="identifier: itemLen [47004,47011]" dest="identifier: itemLen [46780,46787]"/>
  <match src="pure: pure [7911,7915]" dest="pure: pure [7878,7882]"/>
  <match src="&lt;: &lt; [47524,47525]" dest="&lt;: &lt; [47300,47301]"/>
  <match src="variable_declaration [15504,15527]" dest="variable_declaration [15438,15461]"/>
  <match src="internal: internal [32719,32727]" dest="internal: internal [32530,32538]"/>
  <match src="type_name [52017,52024]" dest="type_name [51792,51799]"/>
  <match src="&quot;: &quot; [51233,51234]" dest="&quot;: &quot; [51009,51010]"/>
  <match src="(: ( [1175,1176]" dest="(: ( [1175,1176]"/>
  <match src="parameter [9361,9370]" dest="parameter [9328,9337]"/>
  <match src="event_definition [51953,52117]" dest="event_definition [51728,51892]"/>
  <match src="parameter [31807,31820]" dest="parameter [31651,31664]"/>
  <match src=",: , [2282,2283]" dest=",: , [2282,2283]"/>
  <match src=",: , [27912,27913]" dest=",: , [27756,27757]"/>
  <match src="call_expression [22060,22145]" dest="call_expression [21937,22022]"/>
  <match src="type_name [44424,44431]" dest="type_name [44200,44207]"/>
  <match src="address: address [35822,35829]" dest="address: address [35598,35605]"/>
  <match src="event: event [35046,35051]" dest="event: event [34822,34827]"/>
  <match src="parameter [38911,38923]" dest="parameter [38687,38699]"/>
  <match src="sub: sub [47672,47675]" dest="sub: sub [47448,47451]"/>
  <match src="function_definition [40691,40850]" dest="function_definition [40466,40625]"/>
  <match src="uint256: uint256 [4055,4062]" dest="uint256: uint256 [4022,4029]"/>
  <match src="): ) [40981,40982]" dest="): ) [40756,40757]"/>
  <match src=",: , [52084,52085]" dest=",: , [51859,51860]"/>
  <match src=",: , [26933,26934]" dest=",: , [26777,26778]"/>
  <match src="parameter [16281,16307]" dest="parameter [16215,16241]"/>
  <match src="function_definition [16218,16640]" dest="function_definition [16152,16574]"/>
  <match src="function: function [42922,42930]" dest="function: function [42698,42706]"/>
  <match src="identifier: len [44401,44404]" dest="identifier: len [44177,44180]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [11433,11480]" dest="comment: // solhint-disable-next-line no-inline-assembly [11367,11414]"/>
  <match src=",: , [13781,13782]" dest=",: , [13715,13716]"/>
  <match src="]: ] [53744,53745]" dest="]: ] [53650,53651]"/>
  <match src="&quot;: &quot; [5820,5821]" dest="&quot;: &quot; [5787,5788]"/>
  <match src="bool: bool [2337,2341]" dest="bool: bool [2337,2341]"/>
  <match src="struct: struct [28635,28641]" dest="struct: struct [28479,28485]"/>
  <match src="uint256: uint256 [42573,42580]" dest="uint256: uint256 [42349,42356]"/>
  <match src="bool: bool [1922,1926]" dest="bool: bool [1922,1926]"/>
  <match src="(: ( [26824,26825]" dest="(: ( [26668,26669]"/>
  <match src="identifier: add [30563,30566]" dest="identifier: add [30407,30410]"/>
  <match src="return_type_definition [45355,45377]" dest="return_type_definition [45131,45153]"/>
  <match src="variable_declaration_statement [46336,46376]" dest="variable_declaration_statement [46112,46152]"/>
  <match src="identifier: inited [51258,51264]" dest="identifier: inited [51034,51040]"/>
  <match src="return_type_definition [13723,13745]" dest="return_type_definition [13657,13679]"/>
  <match src="member_expression [53077,53111]" dest="member_expression [52983,53017]"/>
  <match src="function_body [11208,11564]" dest="function_body [11142,11498]"/>
  <match src="member_expression [25852,25863]" dest="member_expression [25696,25707]"/>
  <match src="}: } [51278,51279]" dest="}: } [51054,51055]"/>
  <match src="identifier: target [17541,17547]" dest="identifier: target [17475,17481]"/>
  <match src="(: ( [43331,43332]" dest="(: ( [43107,43108]"/>
  <match src="(: ( [4746,4747]" dest="(: ( [4713,4714]"/>
  <match src=".: . [46357,46358]" dest=".: . [46133,46134]"/>
  <match src="type_name [41508,41513]" dest="type_name [41284,41289]"/>
  <match src="return: return [29529,29535]" dest="return: return [29373,29379]"/>
  <match src="state_mutability [29498,29502]" dest="state_mutability [29342,29346]"/>
  <match src="(: ( [3768,3769]" dest="(: ( [3735,3736]"/>
  <match src="primitive_type [17514,17519]" dest="primitive_type [17448,17453]"/>
  <match src="bytes: bytes [14098,14103]" dest="bytes: bytes [14032,14037]"/>
  <match src="internal: internal [43362,43370]" dest="internal: internal [43138,43146]"/>
  <match src="uint256: uint256 [49246,49253]" dest="uint256: uint256 [49022,49029]"/>
  <match src="identifier: RLPReader [41309,41318]" dest="identifier: RLPReader [41085,41094]"/>
  <match src="identifier: itemLen [47442,47449]" dest="identifier: itemLen [47218,47225]"/>
  <match src="type_name [34511,34518]" dest="type_name [34287,34294]"/>
  <match src="parameter [14098,14115]" dest="parameter [14032,14049]"/>
  <match src="primitive_type [9361,9368]" dest="primitive_type [9328,9335]"/>
  <match src="(: ( [20142,20143]" dest="(: ( [20019,20020]"/>
  <match src="parameter [36314,36321]" dest="parameter [36090,36097]"/>
  <match src="type_name [13695,13700]" dest="type_name [13629,13634]"/>
  <match src="identifier: _length [28104,28111]" dest="identifier: _length [27948,27955]"/>
  <match src="): ) [35460,35461]" dest="): ) [35236,35237]"/>
  <match src="identifier: STRING_LONG_START [48504,48521]" dest="identifier: STRING_LONG_START [48280,48297]"/>
  <match src="yul_decimal_number: 32 [47377,47379]" dest="yul_decimal_number: 32 [47153,47155]"/>
  <match src="(: ( [31879,31880]" dest="(: ( [31723,31724]"/>
  <match src=":=: := [11506,11508]" dest=":=: := [11440,11442]"/>
  <match src="parameter [30182,30195]" dest="parameter [30026,30039]"/>
  <match src="parameter [1121,1134]" dest="parameter [1121,1134]"/>
  <match src="comment: // and use 0 as a sentinel value [24162,24194]" dest="comment: // and use 0 as a sentinel value [24006,24038]"/>
  <match src="identifier: amount [53059,53065]" dest="identifier: amount [52965,52971]"/>
  <match src="(: ( [5727,5728]" dest="(: ( [5694,5695]"/>
  <match src=",: , [41992,41993]" dest=",: , [41768,41769]"/>
  <match src="type_name [44883,44890]" dest="type_name [44659,44666]"/>
  <match src="return_statement [25983,25995]" dest="return_statement [25827,25839]"/>
  <match src="identifier: value [20551,20556]" dest="identifier: value [20428,20433]"/>
  <match src="primitive_type [17679,17683]" dest="primitive_type [17613,17617]"/>
  <match src="solidity: solidity [49597,49605]" dest="solidity: solidity [49373,49381]"/>
  <match src="identifier: require [45445,45452]" dest="identifier: require [45221,45228]"/>
  <match src="user_defined_type [41767,41774]" dest="user_defined_type [41543,41550]"/>
  <match src="yul_hex_number: 0xb7 [47159,47163]" dest="yul_hex_number: 0xb7 [46935,46939]"/>
  <match src=",: , [27305,27306]" dest=",: , [27149,27150]"/>
  <match src="yul_function_call [44531,44544]" dest="yul_function_call [44307,44320]"/>
  <match src="(: ( [19777,19778]" dest="(: ( [19654,19655]"/>
  <match src="visibility [17746,17753]" dest="visibility [17680,17687]"/>
  <match src="identifier: _verifyCallResult [15582,15599]" dest="identifier: _verifyCallResult [15516,15533]"/>
  <match src="if: if [40399,40401]" dest="if: if [40175,40177]"/>
  <match src="primitive_type [21853,21860]" dest="primitive_type [21730,21737]"/>
  <match src="number_literal: 1 [25742,25743]" dest="number_literal: 1 [25586,25587]"/>
  <match src=",: , [47904,47905]" dest=",: , [47680,47681]"/>
  <match src="number_literal: 0xf8 [41497,41501]" dest="number_literal: 0xf8 [41273,41277]"/>
  <match src="bytes32: bytes32 [40152,40159]" dest="bytes32: bytes32 [39928,39935]"/>
  <match src="identifier: _ [51246,51247]" dest="identifier: _ [51022,51023]"/>
  <match src="internal: internal [30197,30205]" dest="internal: internal [30041,30049]"/>
  <match src="let: let [18175,18178]" dest="let: let [18109,18112]"/>
  <match src="identifier: memPtr [41877,41883]" dest="identifier: memPtr [41653,41659]"/>
  <match src="parameter [28030,28052]" dest="parameter [27874,27896]"/>
  <match src="identifier: _indexes [25951,25959]" dest="identifier: _indexes [25795,25803]"/>
  <match src="): ) [53675,53676]" dest="): ) [53581,53582]"/>
  <match src="type_cast_expression [29313,29336]" dest="type_cast_expression [29157,29180]"/>
  <match src="variable_declaration_statement [25170,25213]" dest="variable_declaration_statement [25014,25057]"/>
  <match src="(: ( [20530,20531]" dest="(: ( [20407,20408]"/>
  <match src="type_name [35069,35076]" dest="type_name [34845,34852]"/>
  <match src="virtual: virtual [38210,38217]" dest="virtual: virtual [37986,37993]"/>
  <match src="binary_expression [8611,8617]" dest="binary_expression [8578,8584]"/>
  <match src="call_argument [44916,44927]" dest="call_argument [44692,44703]"/>
  <match src="visibility [48847,48854]" dest="visibility [48623,48630]"/>
  <match src="bytes32: bytes32 [26180,26187]" dest="bytes32: bytes32 [26024,26031]"/>
  <match src="call_expression [31185,31222]" dest="call_expression [31029,31066]"/>
  <match src="identifier: isContract [15364,15374]" dest="identifier: isContract [15298,15308]"/>
  <match src="identifier: value [30906,30911]" dest="identifier: value [30750,30755]"/>
  <match src="return_statement [26983,27009]" dest="return_statement [26827,26853]"/>
  <match src="(: ( [19308,19309]" dest="(: ( [19185,19186]"/>
  <match src="identifier: RLPItem [41973,41980]" dest="identifier: RLPItem [41749,41756]"/>
  <match src="function_definition [23924,24338]" dest="function_definition [23768,24182]"/>
  <match src="member_expression [28959,28969]" dest="member_expression [28803,28813]"/>
  <match src="{: { [46052,46053]" dest="{: { [45828,45829]"/>
  <match src="false [5054,5059]" dest="false [5021,5026]"/>
  <match src="string [42449,42490]" dest="string [42225,42266]"/>
  <match src=",: , [47791,47792]" dest=",: , [47567,47568]"/>
  <match src="&quot;: &quot; [22143,22144]" dest="&quot;: &quot; [22020,22021]"/>
  <match src="return_type_definition [29739,29756]" dest="return_type_definition [29583,29600]"/>
  <match src="type_name [8532,8538]" dest="type_name [8499,8505]"/>
  <match src="variable_declaration_statement [43487,43499]" dest="variable_declaration_statement [43263,43275]"/>
  <match src=".: . [32676,32677]" dest=".: . [32487,32488]"/>
  <match src="): ) [15925,15926]" dest="): ) [15859,15860]"/>
  <match src="): ) [38373,38374]" dest="): ) [38149,38150]"/>
  <match src="): ) [40181,40182]" dest="): ) [39957,39958]"/>
  <match src="user_defined_type [42304,42311]" dest="user_defined_type [42080,42087]"/>
  <match src="parameter [53510,53526]" dest="parameter [53416,53432]"/>
  <match src="primitive_type [52765,52772]" dest="primitive_type [52671,52678]"/>
  <match src="identifier: isContract [11151,11161]" dest="identifier: isContract [11085,11095]"/>
  <match src="): ) [28597,28598]" dest="): ) [28441,28442]"/>
  <match src="event_definition [35373,35462]" dest="event_definition [35149,35238]"/>
  <match src="type_name [51715,51722]" dest="type_name [51490,51497]"/>
  <match src="(: ( [43106,43107]" dest="(: ( [42882,42883]"/>
  <match src="}: } [43956,43957]" dest="}: } [43732,43733]"/>
  <match src="{: { [27063,27064]" dest="{: { [26907,26908]"/>
  <match src="visibility [29725,29733]" dest="visibility [29569,29577]"/>
  <match src="(: ( [54309,54310]" dest="(: ( [54162,54163]"/>
  <match src=",: , [53857,53858]" dest=",: , [53763,53764]"/>
  <match src="type_name [17286,17292]" dest="type_name [17220,17226]"/>
  <match src="binary_expression [48495,48526]" dest="binary_expression [48271,48302]"/>
  <match src="yul_function_call [47453,47482]" dest="yul_function_call [47229,47258]"/>
  <match src="type_name [2535,2542]" dest="type_name [2535,2542]"/>
  <match src="uint256: uint256 [43021,43028]" dest="uint256: uint256 [42797,42804]"/>
  <match src=",: , [35089,35090]" dest=",: , [34865,34866]"/>
  <match src="identifier: require [6686,6693]" dest="identifier: require [6653,6660]"/>
  <match src="and: and [49337,49340]" dest="and: and [49113,49116]"/>
  <match src=",: , [20188,20189]" dest=",: , [20065,20066]"/>
  <match src="call_expression [38987,38999]" dest="call_expression [38763,38775]"/>
  <match src="emit_statement [40009,40072]" dest="emit_statement [39785,39848]"/>
  <match src="identifier: a [6153,6154]" dest="identifier: a [6120,6121]"/>
  <match src=",: , [14232,14233]" dest=",: , [14166,14167]"/>
  <match src="identifier: require [6210,6217]" dest="identifier: require [6177,6184]"/>
  <match src="uint256: uint256 [26842,26849]" dest="uint256: uint256 [26686,26693]"/>
  <match src="{: { [26888,26889]" dest="{: { [26732,26733]"/>
  <match src="(: ( [29565,29566]" dest="(: ( [29409,29410]"/>
  <match src="true: true [43198,43202]" dest="true: true [42974,42978]"/>
  <match src="visibility [40183,40190]" dest="visibility [39959,39966]"/>
  <match src="yul_path [48154,48159]" dest="yul_path [47930,47935]"/>
  <match src=".: . [26918,26919]" dest=".: . [26762,26763]"/>
  <match src="function: function [3708,3716]" dest="function: function [3675,3683]"/>
  <match src=".: . [26244,26245]" dest=".: . [26088,26089]"/>
  <match src="yul_variable_declaration [47330,47391]" dest="yul_variable_declaration [47106,47167]"/>
  <match src="(: ( [31375,31376]" dest="(: ( [31219,31220]"/>
  <match src="identifier: _callOptionalReturn [21412,21431]" dest="identifier: _callOptionalReturn [21289,21308]"/>
  <match src="(: ( [19200,19201]" dest="(: ( [19077,19078]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [27710,27782]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [27554,27626]"/>
  <match src="user_defined_type [46000,46007]" dest="user_defined_type [45776,45783]"/>
  <match src="member_expression [20618,20631]" dest="member_expression [20495,20508]"/>
  <match src="call_expression [53077,53094]" dest="call_expression [52983,53000]"/>
  <match src="): ) [21921,21922]" dest="): ) [21798,21799]"/>
  <match src="string_literal [42223,42249]" dest="string_literal [41999,42025]"/>
  <match src="(: ( [51630,51631]" dest="(: ( [51405,51406]"/>
  <match src="type_cast_expression [21853,21867]" dest="type_cast_expression [21730,21744]"/>
  <match src="type_name [12746,12750]" dest="type_name [12680,12684]"/>
  <match src="function_definition [42922,43210]" dest="function_definition [42698,42986]"/>
  <match src="primitive_type [31207,31214]" dest="primitive_type [31051,31058]"/>
  <match src="identifier: WITHDRAW_EVENT_SIG [53839,53857]" dest="identifier: WITHDRAW_EVENT_SIG [53745,53763]"/>
  <match src="=: = [25475,25476]" dest="=: = [25319,25320]"/>
  <match src="}: } [26272,26273]" dest="}: } [26116,26117]"/>
  <match src="): ) [30294,30295]" dest="): ) [30138,30139]"/>
  <match src="public: public [53543,53549]" dest="public: public [53449,53455]"/>
  <match src="(: ( [20956,20957]" dest="(: ( [20833,20834]"/>
  <match src="call_argument [22091,22097]" dest="call_argument [21968,21974]"/>
  <match src="while: while [46386,46391]" dest="while: while [46162,46167]"/>
  <match src="identifier: isList [44054,44060]" dest="identifier: isList [43830,43836]"/>
  <match src="&quot;: &quot; [51700,51701]" dest="&quot;: &quot; [51475,51476]"/>
  <match src="internal: internal [16309,16317]" dest="internal: internal [16243,16251]"/>
  <match src="yul_identifier [44521,44527]" dest="yul_identifier [44297,44303]"/>
  <match src=",: , [1134,1135]" dest=",: , [1134,1135]"/>
  <match src="primitive_type [30931,30935]" dest="primitive_type [30775,30779]"/>
  <match src="returns: returns [31152,31159]" dest="returns: returns [30996,31003]"/>
  <match src="variable_declaration_statement [42573,42589]" dest="variable_declaration_statement [42349,42365]"/>
  <match src="&lt;: &lt; [47070,47071]" dest="&lt;: &lt; [46846,46847]"/>
  <match src="library_declaration [10532,18397]" dest="library_declaration [10466,18331]"/>
  <match src="identifier: account [39723,39730]" dest="identifier: account [39499,39506]"/>
  <match src="pure: pure [4994,4998]" dest="pure: pure [4961,4965]"/>
  <match src="return_statement [31178,31223]" dest="return_statement [31022,31067]"/>
  <match src="}: } [49076,49077]" dest="}: } [48852,48853]"/>
  <match src=",: , [15976,15977]" dest=",: , [15910,15911]"/>
  <match src="identifier: _inner [29787,29793]" dest="identifier: _inner [29631,29637]"/>
  <match src="function_definition [26359,26468]" dest="function_definition [26203,26312]"/>
  <match src="(: ( [502,503]" dest="(: ( [502,503]"/>
  <match src="let: let [49322,49325]" dest="let: let [49098,49101]"/>
  <match src="&gt;: &gt; [4132,4133]" dest="&gt;: &gt; [4099,4100]"/>
  <match src="bytes: bytes [52827,52832]" dest="bytes: bytes [52733,52738]"/>
  <match src="call_argument [17602,17609]" dest="call_argument [17536,17543]"/>
  <match src="return_statement [14188,14248]" dest="return_statement [14122,14182]"/>
  <match src="comment: // construction, since the code is only stored at the end of the [11299,11363]" dest="comment: // construction, since the code is only stored at the end of the [11233,11297]"/>
  <match src="identifier: b [9451,9452]" dest="identifier: b [9418,9419]"/>
  <match src="member_expression [30275,30285]" dest="member_expression [30119,30129]"/>
  <match src="identifier: Address [10540,10547]" dest="identifier: Address [10474,10481]"/>
  <match src="{: { [42190,42191]" dest="{: { [41966,41967]"/>
  <match src="call_argument [19473,19478]" dest="call_argument [19350,19355]"/>
  <match src="identifier: _inner [27680,27686]" dest="identifier: _inner [27524,27530]"/>
  <match src="identifier: this [20531,20535]" dest="identifier: this [20408,20412]"/>
  <match src="expression_statement [52224,52259]" dest="expression_statement [52130,52165]"/>
  <match src="member_expression [20331,20353]" dest="member_expression [20208,20230]"/>
  <match src="type_name [15193,15199]" dest="type_name [15127,15133]"/>
  <match src=".: . [29549,29550]" dest=".: . [29393,29394]"/>
  <match src="{: { [48095,48096]" dest="{: { [47871,47872]"/>
  <match src="constant: constant [41470,41478]" dest="constant: constant [41246,41254]"/>
  <match src="primitive_type [5329,5333]" dest="primitive_type [5296,5300]"/>
  <match src="primitive_type [19349,19356]" dest="primitive_type [19226,19233]"/>
  <match src="(: ( [30274,30275]" dest="(: ( [30118,30119]"/>
  <match src="returns: returns [44016,44023]" dest="returns: returns [43792,43799]"/>
  <match src="comment: // implementations (such as AddressSet) are just wrappers around the [23289,23357]" dest="comment: // implementations (such as AddressSet) are just wrappers around the [23133,23201]"/>
  <match src="bytes: bytes [45364,45369]" dest="bytes: bytes [45140,45145]"/>
  <match src="call_argument [42209,42221]" dest="call_argument [41985,41997]"/>
  <match src="identifier: role [40273,40277]" dest="identifier: role [40049,40053]"/>
  <match src=",: , [27379,27380]" dest=",: , [27223,27224]"/>
  <match src="): ) [7986,7987]" dest="): ) [7953,7954]"/>
  <match src="memory: memory [14124,14130]" dest="memory: memory [14058,14064]"/>
  <match src="identifier: errorMessage [16619,16631]" dest="identifier: errorMessage [16553,16565]"/>
  <match src="binary_expression [48282,48378]" dest="binary_expression [48058,48154]"/>
  <match src="parameter [46043,46050]" dest="parameter [45819,45826]"/>
  <match src="identifier: _contains [26153,26162]" dest="identifier: _contains [25997,26006]"/>
  <match src="return_type_definition [42973,42987]" dest="return_type_definition [42749,42763]"/>
  <match src="private: private [48847,48854]" dest="private: private [48623,48630]"/>
  <match src="(: ( [36313,36314]" dest="(: ( [36089,36090]"/>
  <match src="=: = [42704,42705]" dest="=: = [42480,42481]"/>
  <match src="identifier: endPtr [46403,46409]" dest="identifier: endPtr [46179,46185]"/>
  <match src="function: function [31084,31092]" dest="function: function [30928,30936]"/>
  <match src="(: ( [5037,5038]" dest="(: ( [5004,5005]"/>
  <match src="return_statement [31865,31904]" dest="return_statement [31709,31748]"/>
  <match src="parameter [19309,19321]" dest="parameter [19186,19198]"/>
  <match src="function: function [27571,27579]" dest="function: function [27415,27423]"/>
  <match src="type_name [44449,44456]" dest="type_name [44225,44232]"/>
  <match src="identifier: item [45563,45567]" dest="identifier: item [45339,45343]"/>
  <match src="(: ( [6561,6562]" dest="(: ( [6528,6529]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [59,90]" dest="comment: // SPDX-License-Identifier: MIT [59,90]"/>
  <match src="number_literal: 1 [48397,48398]" dest="number_literal: 1 [48173,48174]"/>
  <match src="{: { [5737,5738]" dest="{: { [5704,5705]"/>
  <match src="type_name [34650,34658]" dest="type_name [34426,34434]"/>
  <match src="function_definition [38889,39098]" dest="function_definition [38665,38874]"/>
  <match src="uint256: uint256 [10178,10185]" dest="uint256: uint256 [10145,10152]"/>
  <match src="returns: returns [42158,42165]" dest="returns: returns [41934,41941]"/>
  <match src="bytes32: bytes32 [34683,34690]" dest="bytes32: bytes32 [34459,34466]"/>
  <match src="identifier: _roles [36341,36347]" dest="identifier: _roles [36117,36123]"/>
  <match src="primitive_type [8510,8517]" dest="primitive_type [8477,8484]"/>
  <match src="identifier: contains [36052,36060]" dest="identifier: contains [35828,35836]"/>
  <match src="type_name [53482,53489]" dest="type_name [53388,53395]"/>
  <match src="type_name [16512,16517]" dest="type_name [16446,16451]"/>
  <match src="type_name [2303,2310]" dest="type_name [2303,2310]"/>
  <match src="yul_identifier [49057,49060]" dest="yul_identifier [48833,48836]"/>
  <match src="bytes32: bytes32 [35391,35398]" dest="bytes32: bytes32 [35167,35174]"/>
  <match src="identifier: itemLength [44248,44258]" dest="identifier: itemLength [44024,44034]"/>
  <match src="type_name [29228,29235]" dest="type_name [29072,29079]"/>
  <match src="(: ( [7332,7333]" dest="(: ( [7299,7300]"/>
  <match src=",: , [53057,53058]" dest=",: , [52963,52964]"/>
  <match src="identifier: decode [52962,52968]" dest="identifier: decode [52868,52874]"/>
  <match src="function: function [38889,38897]" dest="function: function [38665,38673]"/>
  <match src="internal: internal [8560,8568]" dest="internal: internal [8527,8535]"/>
  <match src="identifier: item [42439,42443]" dest="identifier: item [42215,42219]"/>
  <match src="identifier: data [14690,14694]" dest="identifier: data [14624,14628]"/>
  <match src="yul_evm_builtin [49051,49056]" dest="yul_evm_builtin [48827,48832]"/>
  <match src="identifier: account [35977,35984]" dest="identifier: account [35753,35760]"/>
  <match src=".: . [40415,40416]" dest=".: . [40191,40192]"/>
  <match src="storage: storage [23942,23949]" dest="storage: storage [23786,23793]"/>
  <match src="): ) [17779,17780]" dest="): ) [17713,17714]"/>
  <match src="(: ( [48874,48875]" dest="(: ( [48650,48651]"/>
  <match src="&quot;: &quot; [43758,43759]" dest="&quot;: &quot; [43534,43535]"/>
  <match src="identifier: currPtr [46393,46400]" dest="identifier: currPtr [46169,46176]"/>
  <match src="parameter [27283,27305]" dest="parameter [27127,27149]"/>
  <match src="identifier: RLPItem [42304,42311]" dest="identifier: RLPItem [42080,42087]"/>
  <match src="state_mutability [5315,5319]" dest="state_mutability [5282,5286]"/>
  <match src="bytes32: bytes32 [51582,51589]" dest="bytes32: bytes32 [51357,51364]"/>
  <match src="comment: // log data field [54312,54329]" dest="comment: // log data field [54254,54271]"/>
  <match src="string [17385,17425]" dest="string [17319,17359]"/>
  <match src="internal: internal [27322,27330]" dest="internal: internal [27166,27174]"/>
  <match src="type_name [31102,31109]" dest="type_name [30946,30953]"/>
  <match src="function_definition [14630,14856]" dest="function_definition [14564,14790]"/>
  <match src="yul_evm_builtin [47765,47768]" dest="yul_evm_builtin [47541,47544]"/>
  <match src="(: ( [21936,21937]" dest="(: ( [21813,21814]"/>
  <match src="(: ( [3841,3842]" dest="(: ( [3808,3809]"/>
  <match src="internal: internal [9400,9408]" dest="internal: internal [9367,9375]"/>
  <match src="identifier: length [36362,36368]" dest="identifier: length [36138,36144]"/>
  <match src="primitive_type [17500,17504]" dest="primitive_type [17434,17438]"/>
  <match src="call_argument [37796,37808]" dest="call_argument [37572,37584]"/>
  <match src="call_expression [41799,41858]" dest="call_expression [41575,41634]"/>
  <match src="identifier: account [35813,35820]" dest="identifier: account [35589,35596]"/>
  <match src="member_expression [41807,41818]" dest="member_expression [41583,41594]"/>
  <match src="type_name [42167,42174]" dest="type_name [41943,41950]"/>
  <match src=".: . [30966,30967]" dest=".: . [30810,30811]"/>
  <match src="type_name [35091,35098]" dest="type_name [34867,34874]"/>
  <match src="return: return [28569,28575]" dest="return: return [28413,28419]"/>
  <match src="bytes: bytes [43403,43408]" dest="bytes: bytes [43179,43184]"/>
  <match src="bool: bool [16498,16502]" dest="bool: bool [16432,16436]"/>
  <match src="call_argument [40231,40238]" dest="call_argument [40007,40014]"/>
  <match src="if: if [43138,43140]" dest="if: if [42914,42916]"/>
  <match src="identifier: LIST_SHORT_START [48334,48350]" dest="identifier: LIST_SHORT_START [48110,48126]"/>
  <match src="internal: internal [42959,42967]" dest="internal: internal [42735,42743]"/>
  <match src="{: { [24032,24033]" dest="{: { [23876,23877]"/>
  <match src="(: ( [15599,15600]" dest="(: ( [15533,15534]"/>
  <match src="expression_statement [20907,21005]" dest="expression_statement [20784,20882]"/>
  <match src="=: = [47012,47013]" dest="=: = [46788,46789]"/>
  <match src="(: ( [46392,46393]" dest="(: ( [46168,46169]"/>
  <match src="-: - [25152,25153]" dest="-: - [24996,24997]"/>
  <match src="variable_declaration [42573,42588]" dest="variable_declaration [42349,42364]"/>
  <match src="identifier: len [43470,43473]" dest="identifier: len [43246,43249]"/>
  <match src="internal: internal [13714,13722]" dest="internal: internal [13648,13656]"/>
  <match src="identifier: value [12780,12785]" dest="identifier: value [12714,12719]"/>
  <match src="==: == [45076,45078]" dest="==: == [44852,44854]"/>
  <match src="identifier: balance [15286,15293]" dest="identifier: balance [15220,15227]"/>
  <match src="type_name [23938,23941]" dest="type_name [23782,23785]"/>
  <match src="{: { [43518,43519]" dest="{: { [43294,43295]"/>
  <match src="call_expression [22068,22098]" dest="call_expression [21945,21975]"/>
  <match src=",: , [29472,29473]" dest=",: , [29316,29317]"/>
  <match src="): ) [44170,44171]" dest="): ) [43946,43947]"/>
  <match src="{: { [24586,24587]" dest="{: { [24430,24431]"/>
  <match src="[: [ [25605,25606]" dest="[: [ [25449,25450]"/>
  <match src="visibility [31822,31830]" dest="visibility [31666,31674]"/>
  <match src="(: ( [42166,42167]" dest="(: ( [41942,41943]"/>
  <match src="variable_declaration_statement [49246,49288]" dest="variable_declaration_statement [49022,49064]"/>
  <match src="identifier: EnumerableSet [34462,34475]" dest="identifier: EnumerableSet [34238,34251]"/>
  <match src="identifier: to [2573,2575]" dest="identifier: to [2573,2575]"/>
  <match src="array_access [40206,40218]" dest="array_access [39982,39994]"/>
  <match src="false [3842,3847]" dest="false [3809,3814]"/>
  <match src="identifier: account [40479,40486]" dest="identifier: account [40255,40262]"/>
  <match src="variable_declaration_tuple [15489,15528]" dest="variable_declaration_tuple [15423,15462]"/>
  <match src="primitive_type [40776,40782]" dest="primitive_type [40551,40557]"/>
  <match src="identifier: role [40160,40164]" dest="identifier: role [39936,39940]"/>
  <match src="): ) [14246,14247]" dest="): ) [14180,14181]"/>
  <match src="(: ( [16245,16246]" dest="(: ( [16179,16180]"/>
  <match src="yul_path [47231,47237]" dest="yul_path [47007,47013]"/>
  <match src="internal: internal [12561,12569]" dest="internal: internal [12495,12503]"/>
  <match src="modifier: modifier [40858,40866]" dest="modifier: modifier [40633,40641]"/>
  <match src="): ) [36291,36292]" dest="): ) [36067,36068]"/>
  <match src=".: . [44221,44222]" dest=".: . [43997,43998]"/>
  <match src="{: { [34431,34432]" dest="{: { [34207,34208]"/>
  <match src="call_argument [52982,52991]" dest="call_argument [52888,52897]"/>
  <match src=",: , [8530,8531]" dest=",: , [8497,8498]"/>
  <match src="address: address [12518,12525]" dest="address: address [12452,12459]"/>
  <match src="let: let [47657,47660]" dest="let: let [47433,47436]"/>
  <match src="): ) [38940,38941]" dest="): ) [38716,38717]"/>
  <match src="type_name [7925,7932]" dest="type_name [7892,7899]"/>
  <match src="identifier: amount [12614,12620]" dest="identifier: amount [12548,12554]"/>
  <match src="identifier: adminRole [34605,34614]" dest="identifier: adminRole [34381,34390]"/>
  <match src="}: } [20378,20379]" dest="}: } [20255,20256]"/>
  <match src="(: ( [40205,40206]" dest="(: ( [39981,39982]"/>
  <match src="(: ( [48503,48504]" dest="(: ( [48279,48280]"/>
  <match src="(: ( [29203,29204]" dest="(: ( [29047,29048]"/>
  <match src="parameter [13695,13712]" dest="parameter [13629,13646]"/>
  <match src="boolean_literal [24270,24274]" dest="boolean_literal [24114,24118]"/>
  <match src="visibility [23970,23977]" dest="visibility [23814,23821]"/>
  <match src="primitive_type [52095,52102]" dest="primitive_type [51870,51877]"/>
  <match src="(: ( [37884,37885]" dest="(: ( [37660,37661]"/>
  <match src="call_expression [20595,20664]" dest="call_expression [20472,20541]"/>
  <match src="parameter [44025,44032]" dest="parameter [43801,43808]"/>
  <match src="bool: bool [22092,22096]" dest="bool: bool [21969,21973]"/>
  <match src="visibility [51590,51596]" dest="visibility [51365,51371]"/>
  <match src="function: function [37680,37688]" dest="function: function [37456,37464]"/>
  <match src="return: return [14754,14760]" dest="return: return [14688,14694]"/>
  <match src="while_statement [46386,46610]" dest="while_statement [46162,46386]"/>
  <match src="binary_expression [4727,4737]" dest="binary_expression [4694,4704]"/>
  <match src="identifier: index [27002,27007]" dest="identifier: index [26846,26851]"/>
  <match src="identifier: allowance [20807,20816]" dest="identifier: allowance [20684,20693]"/>
  <match src="parameter [23987,23991]" dest="parameter [23831,23835]"/>
  <match src="state_variable_declaration [41419,41458]" dest="state_variable_declaration [41195,41234]"/>
  <match src="true [43198,43202]" dest="true [42974,42978]"/>
  <match src="identifier: returndata [15517,15527]" dest="identifier: returndata [15451,15461]"/>
  <match src="identifier: item [43996,44000]" dest="identifier: item [43772,43776]"/>
  <match src="call_expression [17584,17636]" dest="call_expression [17518,17570]"/>
  <match src="type_name [7271,7278]" dest="type_name [7238,7245]"/>
  <match src="comment: /* 32 byte word size */ [47289,47312]" dest="comment: /* 32 byte word size */ [47065,47088]"/>
  <match src="function_definition [43965,44757]" dest="function_definition [43741,44533]"/>
  <match src="return_statement [42794,42808]" dest="return_statement [42570,42584]"/>
  <match src="call_argument [20331,20353]" dest="call_argument [20208,20230]"/>
  <match src="function_body [23993,24338]" dest="function_body [23837,24182]"/>
  <match src="identifier: length [25202,25208]" dest="identifier: length [25046,25052]"/>
  <match src="primitive_type [15490,15494]" dest="primitive_type [15424,15428]"/>
  <match src="(: ( [43543,43544]" dest="(: ( [43319,43320]"/>
  <match src="number_literal: 0 [41821,41822]" dest="number_literal: 0 [41597,41598]"/>
  <match src="state_mutability [29734,29738]" dest="state_mutability [29578,29582]"/>
  <match src="function: function [444,452]" dest="function: function [444,452]"/>
  <match src="binary_expression [25190,25212]" dest="binary_expression [25034,25056]"/>
  <match src="): ) [30295,30296]" dest="): ) [30139,30140]"/>
  <match src=",: , [15157,15158]" dest=",: , [15091,15092]"/>
  <match src=",: , [31894,31895]" dest=",: , [31738,31739]"/>
  <match src="return: return [27357,27363]" dest="return: return [27201,27207]"/>
  <match src=".: . [25480,25481]" dest=".: . [25324,25325]"/>
  <match src="primitive_type [9423,9430]" dest="primitive_type [9390,9397]"/>
  <match src="identifier: token [20143,20148]" dest="identifier: token [20020,20025]"/>
  <match src="emit_statement [53003,53067]" dest="emit_statement [52909,52973]"/>
  <match src="(: ( [22078,22079]" dest="(: ( [21955,21956]"/>
  <match src="identifier: value [24064,24069]" dest="identifier: value [23908,23913]"/>
  <match src="boolean_literal [3842,3847]" dest="boolean_literal [3809,3814]"/>
  <match src="member_expression [36341,36361]" dest="member_expression [36117,36137]"/>
  <match src="=: = [44464,44465]" dest="=: = [44240,44241]"/>
  <match src="}: } [24330,24331]" dest="}: } [24174,24175]"/>
  <match src="primitive_type [45645,45650]" dest="primitive_type [45421,45426]"/>
  <match src="state_variable_declaration [51715,51827]" dest="state_variable_declaration [51490,51602]"/>
  <match src="type_name [13732,13737]" dest="type_name [13666,13671]"/>
  <match src="(: ( [53083,53084]" dest="(: ( [52989,52990]"/>
  <match src="new_expression [43455,43464]" dest="new_expression [43231,43240]"/>
  <match src="if_statement [21933,22157]" dest="if_statement [21810,22034]"/>
  <match src="returns: returns [28540,28547]" dest="returns: returns [28384,28391]"/>
  <match src="): ) [17803,17804]" dest="): ) [17737,17738]"/>
  <match src=".: . [44470,44471]" dest=".: . [44246,44247]"/>
  <match src="solidity_version_comparison_operator [18513,18516]" dest="solidity_version_comparison_operator [22125,22128]"/>
  <match src="identifier: LIST_SHORT_START [41434,41450]" dest="identifier: LIST_SHORT_START [41210,41226]"/>
  <match src="&quot;: &quot; [43906,43907]" dest="&quot;: &quot; [43682,43683]"/>
  <match src="solidity_version: 0.6.0 [32025,32030]" dest="solidity_version: 0.6.0 [32831,32836]"/>
  <match src="{: { [40241,40242]" dest="{: { [40017,40018]"/>
  <match src="number_literal: 1 [47595,47596]" dest="number_literal: 1 [47371,47372]"/>
  <match src="identifier: rootToken [54226,54235]" dest="identifier: rootToken [54184,54193]"/>
  <match src="expression_statement [47004,47045]" dest="expression_statement [46780,46821]"/>
  <match src="type_name [17767,17772]" dest="type_name [17701,17706]"/>
  <match src=":=: := [47877,47879]" dest=":=: := [47653,47655]"/>
  <match src="primitive_type [15855,15862]" dest="primitive_type [15789,15796]"/>
  <match src="using: using [51503,51508]" dest="using: using [51278,51283]"/>
  <match src="): ) [41781,41782]" dest="): ) [41557,41558]"/>
  <match src=",: , [19321,19322]" dest=",: , [19198,19199]"/>
  <match src="function: function [17652,17660]" dest="function: function [17586,17594]"/>
  <match src="call_expression [42201,42250]" dest="call_expression [41977,42026]"/>
  <match src="&quot;: &quot; [44272,44273]" dest="&quot;: &quot; [44048,44049]"/>
  <match src="{: { [21960,21961]" dest="{: { [21837,21838]"/>
  <match src="pragma_directive [94,125]" dest="pragma_directive [94,125]"/>
  <match src="identifier: IERC20 [19778,19784]" dest="identifier: IERC20 [19655,19661]"/>
  <match src="): ) [17018,17019]" dest="): ) [16952,16953]"/>
  <match src="(: ( [29328,29329]" dest="(: ( [29172,29173]"/>
  <match src="identifier: require [10271,10278]" dest="identifier: require [10238,10245]"/>
  <match src="member_expression [24047,24058]" dest="member_expression [23891,23902]"/>
  <match src="(: ( [12517,12518]" dest="(: ( [12451,12452]"/>
  <match src="identifier: functionDelegateCall [16942,16962]" dest="identifier: functionDelegateCall [16876,16896]"/>
  <match src="comment: // skip over the first byte [47242,47269]" dest="comment: // skip over the first byte [47018,47045]"/>
  <match src="state_mutability [28535,28539]" dest="state_mutability [28379,28383]"/>
  <match src="(: ( [15238,15239]" dest="(: ( [15172,15173]"/>
  <match src="type_name [21827,21832]" dest="type_name [21704,21709]"/>
  <match src="(: ( [29573,29574]" dest="(: ( [29417,29418]"/>
  <match src="add: add [47880,47883]" dest="add: add [47656,47659]"/>
  <match src="): ) [5342,5343]" dest="): ) [5309,5310]"/>
  <match src="library: library [19006,19013]" dest="library: library [18883,18890]"/>
  <match src="type_name [19146,19153]" dest="type_name [19023,19030]"/>
  <match src="primitive_type [14117,14123]" dest="primitive_type [14051,14057]"/>
  <match src="(: ( [17331,17332]" dest="(: ( [17265,17266]"/>
  <match src="call_expression [43936,43948]" dest="call_expression [43712,43724]"/>
  <match src=".: . [25201,25202]" dest=".: . [25045,25046]"/>
  <match src="pure: pure [43701,43705]" dest="pure: pure [43477,43481]"/>
  <match src="identifier: a [7888,7889]" dest="identifier: a [7855,7856]"/>
  <match src="call_expression [53652,53676]" dest="call_expression [53558,53582]"/>
  <match src="identifier: amount [53138,53144]" dest="identifier: amount [53044,53050]"/>
  <match src=".: . [43042,43043]" dest=".: . [42818,42819]"/>
  <match src="]: ] [53824,53825]" dest="]: ] [53730,53731]"/>
  <match src="{: { [4115,4116]" dest="{: { [4082,4083]"/>
  <match src="state_variable_declaration [41326,41367]" dest="state_variable_declaration [41102,41143]"/>
  <match src="member_expression [54080,54105]" dest="member_expression [53986,54011]"/>
  <match src="identifier: Set [23938,23941]" dest="identifier: Set [23782,23785]"/>
  <match src="div: div [47765,47768]" dest="div: div [47541,47544]"/>
  <match src="event_paramater [52095,52109]" dest="event_paramater [51870,51884]"/>
  <match src="address: address [43928,43935]" dest="address: address [43704,43711]"/>
  <match src="type_name [14163,14168]" dest="type_name [14097,14102]"/>
  <match src="identifier: a [5691,5692]" dest="identifier: a [5658,5659]"/>
  <match src="(: ( [30876,30877]" dest="(: ( [30720,30721]"/>
  <match src="type_name [42999,43004]" dest="type_name [42775,42780]"/>
  <match src="visibility [5705,5713]" dest="visibility [5672,5680]"/>
  <match src="): ) [11528,11529]" dest="): ) [11462,11463]"/>
  <match src="type_name [3775,3782]" dest="type_name [3742,3749]"/>
  <match src="type_name [5008,5012]" dest="type_name [4975,4979]"/>
  <match src="internal: internal [28054,28062]" dest="internal: internal [27898,27906]"/>
  <match src="identifier: set [28959,28962]" dest="identifier: set [28803,28806]"/>
  <match src="return: return [28097,28103]" dest="return: return [27941,27947]"/>
  <match src="=: = [3805,3806]" dest="=: = [3772,3773]"/>
  <match src="public: public [52139,52145]" dest="public: public [52045,52051]"/>
  <match src="pragma_directive [51348,51370]" dest="pragma_directive [51124,51147]"/>
  <match src="{: { [40752,40753]" dest="{: { [40527,40528]"/>
  <match src="state_variable_declaration [41508,41538]" dest="state_variable_declaration [41284,41314]"/>
  <match src="false: false [43175,43180]" dest="false: false [42951,42956]"/>
  <match src="): ) [28122,28123]" dest="): ) [27966,27967]"/>
  <match src="identifier: isContract [17365,17375]" dest="identifier: isContract [17299,17309]"/>
  <match src="visibility [28526,28534]" dest="visibility [28370,28378]"/>
  <match src="identifier: memPtr [45568,45574]" dest="identifier: memPtr [45344,45350]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [29020,29182]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [28864,29026]"/>
  <match src="parameter [7925,7932]" dest="parameter [7892,7899]"/>
  <match src="&quot;: &quot; [39001,39002]" dest="&quot;: &quot; [38777,38778]"/>
  <match src="(: ( [6189,6190]" dest="(: ( [6156,6157]"/>
  <match src="(: ( [47787,47788]" dest="(: ( [47563,47564]"/>
  <match src="identifier: _roles [40082,40088]" dest="identifier: _roles [39858,39864]"/>
  <match src="identifier: _itemLength [42382,42393]" dest="identifier: _itemLength [42158,42169]"/>
  <match src="uint256: uint256 [2577,2584]" dest="uint256: uint256 [2577,2584]"/>
  <match src=",: , [12620,12621]" dest=",: , [12554,12555]"/>
  <match src="yul_path [44653,44659]" dest="yul_path [44429,44435]"/>
  <match src="parameter [5335,5342]" dest="parameter [5302,5309]"/>
  <match src="identifier: contractId [40800,40810]" dest="identifier: contractId [40575,40585]"/>
  <match src="{: { [23501,23502]" dest="{: { [23345,23346]"/>
  <match src="(: ( [8610,8611]" dest="(: ( [8577,8578]"/>
  <match src="identifier: _values [26911,26918]" dest="identifier: _values [26755,26762]"/>
  <match src="primitive_type [50934,50941]" dest="primitive_type [50709,50716]"/>
  <match src="call_argument [41994,42000]" dest="call_argument [41770,41776]"/>
  <match src=".: . [25855,25856]" dest=".: . [25699,25700]"/>
  <match src="(: ( [29581,29582]" dest="(: ( [29425,29426]"/>
  <match src="constant: constant [51848,51856]" dest="constant: constant [51623,51631]"/>
  <match src="&lt;=: &lt;= [6220,6222]" dest="&lt;=: &lt;= [6187,6189]"/>
  <match src="contract_body [19024,22167]" dest="contract_body [18901,22044]"/>
  <match src="{: { [48139,48140]" dest="{: { [47915,47916]"/>
  <match src="function: function [44797,44805]" dest="function: function [44573,44581]"/>
  <match src="member_expression [12589,12610]" dest="member_expression [12523,12544]"/>
  <match src="): ) [47809,47810]" dest="): ) [47585,47586]"/>
  <match src="parameter [50338,50361]" dest="parameter [50113,50136]"/>
  <match src="primitive_type [11162,11169]" dest="primitive_type [11096,11103]"/>
  <match src="return: return [48546,48552]" dest="return: return [48322,48328]"/>
  <match src="user_defined_type [45320,45327]" dest="user_defined_type [45096,45103]"/>
  <match src="identifier: set [29223,29226]" dest="identifier: set [29067,29070]"/>
  <match src="returns: returns [1913,1920]" dest="returns: returns [1913,1920]"/>
  <match src="bool: bool [42982,42986]" dest="bool: bool [42758,42762]"/>
  <match src="comment: /// @notice Abstract interface that defines methods for custom predicates [49686,49759]" dest="comment: /// @notice Abstract interface that defines methods for custom predicates [49461,49534]"/>
  <match src="parenthesized_expression [49266,49283]" dest="parenthesized_expression [49042,49059]"/>
  <match src="string_literal [6706,6741]" dest="string_literal [6673,6708]"/>
  <match src="}: } [42814,42815]" dest="}: } [42590,42591]"/>
  <match src="bytes32: bytes32 [24548,24555]" dest="bytes32: bytes32 [24392,24399]"/>
  <match src="expression_statement [37756,37862]" dest="expression_statement [37532,37638]"/>
  <match src="parameter [52737,52754]" dest="parameter [52643,52660]"/>
  <match src="): ) [30227,30228]" dest="): ) [30071,30072]"/>
  <match src="struct_member [28664,28675]" dest="struct_member [28508,28519]"/>
  <match src=",: , [30285,30286]" dest=",: , [30129,30130]"/>
  <match src="inheritance_specifier [34423,34430]" dest="inheritance_specifier [34199,34206]"/>
  <match src="function_body [31385,31430]" dest="function_body [31229,31274]"/>
  <match src="type_name [5295,5302]" dest="type_name [5262,5269]"/>
  <match src="call_expression [44205,44229]" dest="call_expression [43981,44005]"/>
  <match src="identifier: item [45335,45339]" dest="identifier: item [45111,45115]"/>
  <match src="array_access [40037,40049]" dest="array_access [39813,39825]"/>
  <match src="type_name [53687,53706]" dest="type_name [53593,53612]"/>
  <match src="identifier: value [25960,25965]" dest="identifier: value [25804,25809]"/>
  <match src="-: - [44405,44406]" dest="-: - [44181,44182]"/>
  <match src="comment: // repetition as possible, we write it in terms of a generic Set type with [23114,23188]" dest="comment: // repetition as possible, we write it in terms of a generic Set type with [22958,23032]"/>
  <match src="parameter [8521,8530]" dest="parameter [8488,8497]"/>
  <match src="call_argument [14783,14789]" dest="call_argument [14717,14723]"/>
  <match src="type_name [39715,39722]" dest="type_name [39491,39498]"/>
  <match src="yul_path [47706,47712]" dest="yul_path [47482,47488]"/>
  <match src="address: address [29474,29481]" dest="address: address [29318,29325]"/>
  <match src="identifier: byteLen [47381,47388]" dest="identifier: byteLen [47157,47164]"/>
  <match src="identifier: only [52906,52910]" dest="identifier: only [52812,52816]"/>
  <match src="identifier: _add [27364,27368]" dest="identifier: _add [27208,27212]"/>
  <match src="&quot;: &quot; [54161,54162]" dest="&quot;: &quot; [54067,54068]"/>
  <match src="identifier: IERC20 [19309,19315]" dest="identifier: IERC20 [19186,19192]"/>
  <match src="boolean_literal [25990,25994]" dest="boolean_literal [25834,25838]"/>
  <match src="return: return [36334,36340]" dest="return: return [36110,36116]"/>
  <match src="}: } [44712,44713]" dest="}: } [44488,44489]"/>
  <match src="uint256: uint256 [8510,8517]" dest="uint256: uint256 [8477,8484]"/>
  <match src="for: for [42599,42602]" dest="for: for [42375,42378]"/>
  <match src="call_argument [30275,30285]" dest="call_argument [30119,30129]"/>
  <match src="identifier: at [31783,31785]" dest="identifier: at [31627,31629]"/>
  <match src="type_name [38186,38193]" dest="type_name [37962,37969]"/>
  <match src="if_statement [5034,5064]" dest="if_statement [5001,5031]"/>
  <match src="type_name [53612,53631]" dest="type_name [53518,53537]"/>
  <match src="identifier: token [21439,21444]" dest="identifier: token [21316,21321]"/>
  <match src="(: ( [48417,48418]" dest="(: ( [48193,48194]"/>
  <match src="indexed: indexed [2780,2787]" dest="indexed: indexed [2780,2787]"/>
  <match src="memory: memory [40724,40730]" dest="memory: memory [40499,40505]"/>
  <match src="type_name [41464,41469]" dest="type_name [41240,41245]"/>
  <match src="identifier: itemLength [44192,44202]" dest="identifier: itemLength [43968,43978]"/>
  <match src="type_name [48086,48093]" dest="type_name [47862,47869]"/>
  <match src="type_name [12545,12552]" dest="type_name [12479,12486]"/>
  <match src="identifier: _roles [34668,34674]" dest="identifier: _roles [34444,34450]"/>
  <match src="function_body [6199,6290]" dest="function_body [6166,6257]"/>
  <match src="(: ( [54079,54080]" dest="(: ( [53985,53986]"/>
  <match src="identifier: byte0 [43084,43089]" dest="identifier: byte0 [42860,42865]"/>
  <match src="identifier: memPtr [45244,45250]" dest="identifier: memPtr [45020,45026]"/>
  <match src="(: ( [26162,26163]" dest="(: ( [26006,26007]"/>
  <match src="new: new [45667,45670]" dest="new: new [45443,45446]"/>
  <match src="binary_expression [5784,5790]" dest="binary_expression [5751,5757]"/>
  <match src="if_statement [46960,47935]" dest="if_statement [46736,47711]"/>
  <match src="pure: pure [48072,48076]" dest="pure: pure [47848,47852]"/>
  <match src="address: address [17251,17258]" dest="address: address [17185,17192]"/>
  <match src="identifier: functionCallWithValue [15121,15142]" dest="identifier: functionCallWithValue [15055,15076]"/>
  <match src="identifier: mask [49426,49430]" dest="identifier: mask [49202,49206]"/>
  <match src="identifier: this [32775,32779]" dest="identifier: this [32586,32590]"/>
  <match src=",: , [51448,51449]" dest=",: , [51223,51224]"/>
  <match src="call_argument [20364,20369]" dest="call_argument [20241,20246]"/>
  <match src="member_expression [41981,41992]" dest="member_expression [41757,41768]"/>
  <match src="): ) [27320,27321]" dest="): ) [27164,27165]"/>
  <match src="identifier: memPtr [42672,42678]" dest="identifier: memPtr [42448,42454]"/>
  <match src="parameter [37713,37728]" dest="parameter [37489,37504]"/>
  <match src="return: return [5367,5373]" dest="return: return [5334,5340]"/>
  <match src="}: } [18396,18397]" dest="}: } [18330,18331]"/>
  <match src="primitive_type [20743,20750]" dest="primitive_type [20620,20627]"/>
  <match src="event_paramater [52017,52048]" dest="event_paramater [51792,51823]"/>
  <match src="comment: // @return entire rlp item byte length [46650,46688]" dest="comment: // @return entire rlp item byte length [46426,46464]"/>
  <match src="return_type_definition [32629,32654]" dest="return_type_definition [32440,32465]"/>
  <match src="binary_expression [44248,44270]" dest="binary_expression [44024,44046]"/>
  <match src="(: ( [44678,44679]" dest="(: ( [44454,44455]"/>
  <match src="(: ( [17940,17941]" dest="(: ( [17874,17875]"/>
  <match src="user_defined_type [42096,42103]" dest="user_defined_type [41872,41879]"/>
  <match src="boolean_literal [43198,43202]" dest="boolean_literal [42974,42978]"/>
  <match src="(: ( [44915,44916]" dest="(: ( [44691,44692]"/>
  <match src="): ) [14847,14848]" dest="): ) [14781,14782]"/>
  <match src="(: ( [40926,40927]" dest="(: ( [40701,40702]"/>
  <match src="yul_identifier [47457,47464]" dest="yul_identifier [47233,47240]"/>
  <match src="yul_path [45244,45250]" dest="yul_path [45020,45026]"/>
  <match src="identifier: RLPReader [51523,51532]" dest="identifier: RLPReader [51298,51307]"/>
  <match src="parameter [20712,20724]" dest="parameter [20589,20601]"/>
  <match src="string_literal [16385,16423]" dest="string_literal [16319,16357]"/>
  <match src="function_body [19170,19275]" dest="function_body [19047,19152]"/>
  <match src=".: . [20937,20938]" dest=".: . [20814,20815]"/>
  <match src="if_statement [3823,3852]" dest="if_statement [3790,3819]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [13838,14054]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [13772,13988]"/>
  <match src=",: , [20850,20851]" dest=",: , [20727,20728]"/>
  <match src="uint256: uint256 [37014,37021]" dest="uint256: uint256 [36790,36797]"/>
  <match src="parameter [17718,17744]" dest="parameter [17652,17678]"/>
  <match src="function: function [9337,9345]" dest="function: function [9304,9312]"/>
  <match src="yul_evm_builtin [47784,47787]" dest="yul_evm_builtin [47560,47563]"/>
  <match src=".: . [43607,43608]" dest=".: . [43383,43384]"/>
  <match src="&quot;: &quot; [45518,45519]" dest="&quot;: &quot; [45294,45295]"/>
  <match src="identifier: dest [49474,49478]" dest="identifier: dest [49250,49254]"/>
  <match src="call_expression [52269,52307]" dest="call_expression [52175,52213]"/>
  <match src="%: % [10319,10320]" dest="%: % [10286,10287]"/>
  <match src="bytes32: bytes32 [40872,40879]" dest="bytes32: bytes32 [40647,40654]"/>
  <match src="return_type_definition [4999,5022]" dest="return_type_definition [4966,4989]"/>
  <match src="function_definition [20681,21012]" dest="function_definition [20558,20889]"/>
  <match src="call_argument [29546,29556]" dest="call_argument [29390,29400]"/>
  <match src="identifier: spender [20538,20545]" dest="identifier: spender [20415,20422]"/>
  <match src="identifier: data [16275,16279]" dest="identifier: data [16209,16213]"/>
  <match src="): ) [19478,19479]" dest="): ) [19355,19356]"/>
  <match src="number_literal: 0x67b714876402c93362735688659e2283b4a37fb21bab24bc759ca759ae851fd8 [51878,51944]" dest="number_literal: 0x67b714876402c93362735688659e2283b4a37fb21bab24bc759ca759ae851fd8 [51653,51719]"/>
  <match src="&quot;: &quot; [46574,46575]" dest="&quot;: &quot; [46350,46351]"/>
  <match src="type_cast_expression [29566,29589]" dest="type_cast_expression [29410,29433]"/>
  <match src="identifier: recipient [12764,12773]" dest="identifier: recipient [12698,12707]"/>
  <match src="call_argument [19404,19409]" dest="call_argument [19281,19286]"/>
  <match src="identifier: require [37756,37763]" dest="identifier: require [37532,37539]"/>
  <match src="uint256: uint256 [48828,48835]" dest="uint256: uint256 [48604,48611]"/>
  <match src="public: public [34691,34697]" dest="public: public [34467,34473]"/>
  <match src="parameter [15871,15888]" dest="parameter [15805,15822]"/>
  <match src=".: . [28583,28584]" dest=".: . [28427,28428]"/>
  <match src="): ) [24770,24771]" dest="): ) [24614,24615]"/>
  <match src="user_defined_type [42938,42945]" dest="user_defined_type [42714,42721]"/>
  <match src="uint256: uint256 [6573,6580]" dest="uint256: uint256 [6540,6547]"/>
  <match src="bytes32: bytes32 [27307,27314]" dest="bytes32: bytes32 [27151,27158]"/>
  <match src="identifier: toUint [53826,53832]" dest="identifier: toUint [53732,53738]"/>
  <match src="identifier: byte0 [46807,46812]" dest="identifier: byte0 [46583,46588]"/>
  <match src="identifier: adminRole [37785,37794]" dest="identifier: adminRole [37561,37570]"/>
  <match src="call_expression [12810,12888]" dest="call_expression [12744,12822]"/>
  <match src="call_argument [28580,28590]" dest="call_argument [28424,28434]"/>
  <match src="type_name [5694,5701]" dest="type_name [5661,5668]"/>
  <match src="parameter [8510,8519]" dest="parameter [8477,8486]"/>
  <match src="type_name [52765,52772]" dest="type_name [52671,52678]"/>
  <match src="call_expression [40206,40239]" dest="call_expression [39982,40015]"/>
  <match src="primitive_type [31845,31852]" dest="primitive_type [31689,31696]"/>
  <match src="parameter [12518,12543]" dest="parameter [12452,12477]"/>
  <match src="member_expression [53983,54008]" dest="member_expression [53889,53914]"/>
  <match src="type_name [44819,44826]" dest="type_name [44595,44602]"/>
  <match src=".: . [53696,53697]" dest=".: . [53602,53603]"/>
  <match src="type_name [19082,19089]" dest="type_name [18959,18966]"/>
  <match src="(: ( [26375,26376]" dest="(: ( [26219,26220]"/>
  <match src=":=: := [43090,43092]" dest=":=: := [42866,42868]"/>
  <match src=".: . [34475,34476]" dest=".: . [34251,34252]"/>
  <match src="call_argument [30662,30676]" dest="call_argument [30506,30520]"/>
  <match src="{: { [23993,23994]" dest="{: { [23837,23838]"/>
  <match src="function_definition [26144,26273]" dest="function_definition [25988,26117]"/>
  <match src="identifier: _roles [36031,36037]" dest="identifier: _roles [35807,35813]"/>
  <match src="comment: // underlying Set. [23363,23381]" dest="comment: // underlying Set. [23207,23225]"/>
  <match src="(: ( [7259,7260]" dest="(: ( [7226,7227]"/>
  <match src="call_argument [6226,6258]" dest="call_argument [6193,6225]"/>
  <match src="&quot;: &quot; [44971,44972]" dest="&quot;: &quot; [44747,44748]"/>
  <match src=",: , [15382,15383]" dest=",: , [15316,15317]"/>
  <match src="uint256: uint256 [5014,5021]" dest="uint256: uint256 [4981,4988]"/>
  <match src="if_statement [24004,24331]" dest="if_statement [23848,24175]"/>
  <match src="address: address [15272,15279]" dest="address: address [15206,15213]"/>
  <match src="identifier: listLength [45397,45407]" dest="identifier: listLength [45173,45183]"/>
  <match src="call_argument [15375,15381]" dest="call_argument [15309,15315]"/>
  <match src="[: [ [23553,23554]" dest="[: [ [23397,23398]"/>
  <match src="yul_identifier [48154,48159]" dest="yul_identifier [47930,47935]"/>
  <match src="[: [ [42174,42175]" dest="[: [ [41950,41951]"/>
  <match src="identifier: _itemLength [44904,44915]" dest="identifier: _itemLength [44680,44691]"/>
  <match src=".: . [20962,20963]" dest=".: . [20839,20840]"/>
  <match src="call_expression [10271,10299]" dest="call_expression [10238,10266]"/>
  <match src="): ) [38334,38335]" dest="): ) [38110,38111]"/>
  <match src="(: ( [24579,24580]" dest="(: ( [24423,24424]"/>
  <match src="comment: // The value is stored at length-1, but we add 1 to all indexes [24085,24148]" dest="comment: // The value is stored at length-1, but we add 1 to all indexes [23929,23992]"/>
  <match src="binary_expression [17941,17962]" dest="binary_expression [17875,17896]"/>
  <match src="assembly: assembly [44497,44505]" dest="assembly: assembly [44273,44281]"/>
  <match src="yul_identifier [47334,47341]" dest="yul_identifier [47110,47117]"/>
  <match src="identifier: set [24019,24022]" dest="identifier: set [23863,23866]"/>
  <match src="address: address [52017,52024]" dest="address: address [51792,51799]"/>
  <match src="comment: // This means that we can only create new EnumerableSets for types that fit [23387,23462]" dest="comment: // This means that we can only create new EnumerableSets for types that fit [23231,23306]"/>
  <match src="function_body [37745,37907]" dest="function_body [37521,37683]"/>
  <match src="function: function [301,309]" dest="function: function [301,309]"/>
  <match src="expression_statement [51258,51272]" dest="expression_statement [51034,51048]"/>
  <match src="primitive_type [29261,29265]" dest="primitive_type [29105,29109]"/>
  <match src="binary_expression [45067,45081]" dest="binary_expression [44843,44857]"/>
  <match src="identifier: Set [30358,30361]" dest="identifier: Set [30202,30205]"/>
  <match src="primitive_type [13732,13737]" dest="primitive_type [13666,13671]"/>
  <match src="parameter [15855,15869]" dest="parameter [15789,15803]"/>
  <match src="solidity: solidity [33042,33050]" dest="solidity: solidity [18384,18392]"/>
  <match src=",: , [43548,43549]" dest=",: , [43324,43325]"/>
  <match src="primitive_type [7891,7898]" dest="primitive_type [7858,7865]"/>
  <match src="identifier: item [46015,46019]" dest="identifier: item [45791,45795]"/>
  <match src="call_argument [54289,54311]" dest="call_argument [54247,54253]"/>
  <match src="return_statement [5046,5064]" dest="return_statement [5013,5031]"/>
  <match src="type_name [8583,8590]" dest="type_name [8550,8557]"/>
  <match src="primitive_type [43487,43494]" dest="primitive_type [43263,43270]"/>
  <match src="member_expression [44122,44130]" dest="member_expression [43898,43906]"/>
  <match src="function_body [8592,8663]" dest="function_body [8559,8630]"/>
  <match src="constant: constant [41514,41522]" dest="constant: constant [41290,41298]"/>
  <match src="struct_declaration [23490,23746]" dest="struct_declaration [23334,23590]"/>
  <match src="parameter [31786,31805]" dest="parameter [31630,31649]"/>
  <match src="return_statement [4668,4685]" dest="return_statement [4635,4652]"/>
  <match src="primitive_type [43715,43722]" dest="primitive_type [43491,43498]"/>
  <match src="identifier: owner [1129,1134]" dest="identifier: owner [1129,1134]"/>
  <match src="type_alias [19037,19045]" dest="type_alias [18914,18922]"/>
  <match src="{: { [12570,12571]" dest="{: { [12504,12505]"/>
  <match src="event_paramater [2820,2833]" dest="event_paramater [2820,2833]"/>
  <match src="identifier: this [20167,20171]" dest="identifier: this [20044,20048]"/>
  <match src="uint256: uint256 [48048,48055]" dest="uint256: uint256 [47824,47831]"/>
  <match src="type_name [44025,44032]" dest="type_name [43801,43808]"/>
  <match src="type_name [2337,2341]" dest="type_name [2337,2341]"/>
  <match src="): ) [12760,12761]" dest="): ) [12694,12695]"/>
  <match src="function_definition [40328,40520]" dest="function_definition [40104,40296]"/>
  <match src="): ) [54010,54011]" dest="): ) [53916,53917]"/>
  <match src="identifier: returndata [16607,16617]" dest="identifier: returndata [16541,16551]"/>
  <match src="comment: // enforces 32 byte length [44765,44791]" dest="comment: // enforces 32 byte length [44541,44567]"/>
  <match src="struct_member [34554,34587]" dest="struct_member [34330,34363]"/>
  <match src="address: address [35413,35420]" dest="address: address [35189,35196]"/>
  <match src="{: { [17805,17806]" dest="{: { [17739,17740]"/>
  <match src="return_type_definition [11193,11207]" dest="return_type_definition [11127,11141]"/>
  <match src="identifier: toUint [43974,43980]" dest="identifier: toUint [43750,43756]"/>
  <match src="parameter [4974,4983]" dest="parameter [4941,4950]"/>
  <match src="array_access [53983,54001]" dest="array_access [53889,53907]"/>
  <match src="identifier: add [20547,20550]" dest="identifier: add [20424,20427]"/>
  <match src="if_statement [47060,47935]" dest="if_statement [46836,47711]"/>
  <match src="type_name [48828,48835]" dest="type_name [48604,48611]"/>
  <match src="binary_expression [24755,24770]" dest="binary_expression [24599,24614]"/>
  <match src="call_argument [20927,20932]" dest="call_argument [20804,20809]"/>
  <match src="comment: // Delete the slot where the moved value was stored [25787,25838]" dest="comment: // Delete the slot where the moved value was stored [25631,25682]"/>
  <match src="): ) [36321,36322]" dest="): ) [36097,36098]"/>
  <match src="type_name [43715,43722]" dest="type_name [43491,43498]"/>
  <match src="returns: returns [30211,30218]" dest="returns: returns [30055,30062]"/>
  <match src="variable_declaration_statement [24698,24739]" dest="variable_declaration_statement [24542,24583]"/>
  <match src="user_defined_type [28030,28040]" dest="user_defined_type [27874,27884]"/>
  <match src="event: event [2520,2525]" dest="event: event [2520,2525]"/>
  <match src="identifier: account [40279,40286]" dest="identifier: account [40055,40062]"/>
  <match src="type_name [43981,43988]" dest="type_name [43757,43764]"/>
  <match src="bytes32: bytes32 [37699,37706]" dest="bytes32: bytes32 [37475,37482]"/>
  <match src=",: , [38184,38185]" dest=",: , [37960,37961]"/>
  <match src="call_argument [19201,19206]" dest="call_argument [19078,19083]"/>
  <match src="identifier: toUint [54303,54309]" dest="identifier: toUint [54156,54162]"/>
  <match src="identifier: WORD_SIZE [48966,48975]" dest="identifier: WORD_SIZE [48742,48751]"/>
  <match src="contract_body [41319,49523]" dest="contract_body [41095,49299]"/>
  <match src="add: add [47716,47719]" dest="add: add [47492,47495]"/>
  <match src="comment: // File: @openzeppelin/contracts/math/SafeMath.sol [2842,2892]" dest="comment: // File: @openzeppelin/contracts/math/SafeMath.sol [2842,2892]"/>
  <match src="type_name [9350,9357]" dest="type_name [9317,9324]"/>
  <match src="identifier: _values [23556,23563]" dest="identifier: _values [23400,23407]"/>
  <match src=".: . [24050,24051]" dest=".: . [23894,23895]"/>
  <match src="call_expression [36031,36069]" dest="call_expression [35807,35845]"/>
  <match src="uint160: uint160 [30255,30262]" dest="uint160: uint160 [30099,30106]"/>
  <match src="return: return [25983,25989]" dest="return: return [25827,25833]"/>
  <match src="function_definition [45982,46642]" dest="function_definition [45758,46418]"/>
  <match src="): ) [40841,40842]" dest="): ) [40616,40617]"/>
  <match src="identifier: value [24221,24226]" dest="identifier: value [24065,24070]"/>
  <match src="(: ( [30566,30567]" dest="(: ( [30410,30411]"/>
  <match src="solidity_version: 0.8.0 [22291,22296]" dest="solidity_version: 0.8.0 [31843,31848]"/>
  <match src="identifier: item [45467,45471]" dest="identifier: item [45243,45247]"/>
  <match src="primitive_type [48106,48113]" dest="primitive_type [47882,47889]"/>
  <match src="parameter [26163,26178]" dest="parameter [26007,26022]"/>
  <match src=",: , [38267,38268]" dest=",: , [38043,38044]"/>
  <match src="): ) [6637,6638]" dest="): ) [6604,6605]"/>
  <match src="expression_statement [51246,51248]" dest="expression_statement [51022,51024]"/>
  <match src="!: ! [44053,44054]" dest="!: ! [43829,43830]"/>
  <match src="(: ( [20926,20927]" dest="(: ( [20803,20804]"/>
  <match src="address: address [40363,40370]" dest="address: address [40139,40146]"/>
  <match src="identifier: RLPItem [42706,42713]" dest="identifier: RLPItem [42482,42489]"/>
  <match src="unary_expression [43743,43756]" dest="unary_expression [43519,43532]"/>
  <match src="new_expression [45667,45676]" dest="new_expression [45443,45452]"/>
  <match src="primitive_type [1136,1143]" dest="primitive_type [1136,1143]"/>
  <match src="): ) [8590,8591]" dest="): ) [8557,8558]"/>
  <match src="call_argument [40061,40070]" dest="call_argument [39837,39846]"/>
  <match src="(: ( [20824,20825]" dest="(: ( [20701,20702]"/>
  <match src="}: } [28130,28131]" dest="}: } [27974,27975]"/>
  <match src="primitive_type [51582,51589]" dest="primitive_type [51357,51364]"/>
  <match src="user_defined_type [34554,34578]" dest="user_defined_type [34330,34354]"/>
  <match src="true [5082,5086]" dest="true [5049,5053]"/>
  <match src="return: return [30948,30954]" dest="return: return [30792,30798]"/>
  <match src="identifier: role [40473,40477]" dest="identifier: role [40249,40253]"/>
  <match src="block_statement [17855,18387]" dest="block_statement [17789,18321]"/>
  <match src="}: } [14855,14856]" dest="}: } [14789,14790]"/>
  <match src="]: ] [24737,24738]" dest="]: ] [24581,24582]"/>
  <match src="identifier: b [6581,6582]" dest="identifier: b [6548,6549]"/>
  <match src="identifier: a [8518,8519]" dest="identifier: a [8485,8486]"/>
  <match src="user_defined_type [24531,24534]" dest="user_defined_type [24375,24378]"/>
  <match src=".: . [30653,30654]" dest=".: . [30497,30498]"/>
  <match src="yul_decimal_number: 0 [43098,43099]" dest="yul_decimal_number: 0 [42874,42875]"/>
  <match src="(: ( [20522,20523]" dest="(: ( [20399,20400]"/>
  <match src=",: , [7338,7339]" dest=",: , [7305,7306]"/>
  <match src="yul_assignment [44521,44544]" dest="yul_assignment [44297,44320]"/>
  <match src="&quot;: &quot; [21920,21921]" dest="&quot;: &quot; [21797,21798]"/>
  <match src="uint256: uint256 [9350,9357]" dest="uint256: uint256 [9317,9324]"/>
  <match src="parameter [40717,40741]" dest="parameter [40492,40516]"/>
  <match src="string [43758,43795]" dest="string [43534,43571]"/>
  <match src="storage: storage [28041,28048]" dest="storage: storage [27885,27892]"/>
  <match src="memory: memory [43679,43685]" dest="memory: memory [43455,43461]"/>
  <match src="identifier: div [7256,7259]" dest="identifier: div [7223,7226]"/>
  <match src=".: . [24241,24242]" dest=".: . [24085,24086]"/>
  <match src="bytes: bytes [41698,41703]" dest="bytes: bytes [41474,41479]"/>
  <match src="yul_path [49483,49491]" dest="yul_path [49259,49267]"/>
  <match src="primitive_type [15871,15876]" dest="primitive_type [15805,15810]"/>
  <match src="==: == [42436,42438]" dest="==: == [42212,42214]"/>
  <match src="identifier: Initializable [51118,51131]" dest="identifier: Initializable [50894,50907]"/>
  <match src="(: ( [28076,28077]" dest="(: ( [27920,27921]"/>
  <match src="yul_variable_declaration [49393,49431]" dest="yul_variable_declaration [49169,49207]"/>
  <match src="variable_declaration_statement [42361,42407]" dest="variable_declaration_statement [42137,42183]"/>
  <match src="primitive_type [39701,39708]" dest="primitive_type [39477,39484]"/>
  <match src="primitive_type [35822,35829]" dest="primitive_type [35598,35605]"/>
  <match src="event_definition [35046,35156]" dest="event_definition [34822,34932]"/>
  <match src="identifier: returndata [16525,16535]" dest="identifier: returndata [16459,16469]"/>
  <match src="function: function [40328,40336]" dest="function: function [40104,40112]"/>
  <match src="byte: byte [43093,43097]" dest="byte: byte [42869,42873]"/>
  <match src=".: . [12773,12774]" dest=".: . [12707,12708]"/>
  <match src="primitive_type [12545,12552]" dest="primitive_type [12479,12486]"/>
  <match src="identifier: RoleData [34534,34542]" dest="identifier: RoleData [34310,34318]"/>
  <match src=",: , [6704,6705]" dest=",: , [6671,6672]"/>
  <match src="uint256: uint256 [10189,10196]" dest="uint256: uint256 [10156,10163]"/>
  <match src="parameter [8583,8590]" dest="parameter [8550,8557]"/>
  <match src="type_name [26217,26221]" dest="type_name [26061,26065]"/>
  <match src="type_name [13679,13686]" dest="type_name [13613,13620]"/>
  <match src="function_body [41788,42009]" dest="function_body [41564,41785]"/>
  <match src="identifier: role [36348,36352]" dest="identifier: role [36124,36128]"/>
  <match src="memory: memory [16518,16524]" dest="memory: memory [16452,16458]"/>
  <match src="call_argument [40961,40971]" dest="call_argument [40736,40746]"/>
  <match src=",: , [18250,18251]" dest=",: , [18184,18185]"/>
  <match src="solidity_pragma_token [51355,51369]" dest="solidity_pragma_token [51131,51146]"/>
  <match src="(: ( [15854,15855]" dest="(: ( [15788,15789]"/>
  <match src="parameter [27587,27609]" dest="parameter [27431,27453]"/>
  <match src="): ) [53834,53835]" dest="): ) [53740,53741]"/>
  <match src="identifier: WORD_SIZE [49267,49276]" dest="identifier: WORD_SIZE [49043,49052]"/>
  <match src="for: for [48952,48955]" dest="for: for [48728,48731]"/>
  <match src="parameter [46000,46019]" dest="parameter [45776,45795]"/>
  <match src="call_argument [26907,26933]" dest="call_argument [26751,26777]"/>
  <match src=",: , [16617,16618]" dest=",: , [16551,16552]"/>
  <match src="identifier: dataLen [42714,42721]" dest="identifier: dataLen [42490,42497]"/>
  <match src="expression_statement [46933,46945]" dest="expression_statement [46709,46721]"/>
  <match src="function: function [19757,19765]" dest="function: function [19634,19642]"/>
  <match src="(: ( [20587,20588]" dest="(: ( [20464,20465]"/>
  <match src="]: ] [25965,25966]" dest="]: ] [25809,25810]"/>
  <match src="identifier: sub [8506,8509]" dest="identifier: sub [8473,8476]"/>
  <match src="private: private [46731,46738]" dest="private: private [46507,46514]"/>
  <match src="visibility [29243,29251]" dest="visibility [29087,29095]"/>
  <match src="member_expression [45800,45811]" dest="member_expression [45576,45587]"/>
  <match src="primitive_type [28077,28084]" dest="primitive_type [27921,27928]"/>
  <match src="(: ( [52328,52329]" dest="(: ( [52234,52235]"/>
  <match src="return: return [43168,43174]" dest="return: return [42944,42950]"/>
  <match src=",: , [41822,41823]" dest=",: , [41598,41599]"/>
  <match src=":=: := [45752,45754]" dest=":=: := [45528,45530]"/>
  <match src="identifier: _revokeRole [40337,40348]" dest="identifier: _revokeRole [40113,40124]"/>
  <match src="comment: // To delete an element from the _values array in O(1), we swap the element to delete with the last one in [24825,24931]" dest="comment: // To delete an element from the _values array in O(1), we swap the element to delete with the last one in [24669,24775]"/>
  <match src="primitive_type [28979,28986]" dest="primitive_type [28823,28830]"/>
  <match src="parameter [32638,32653]" dest="parameter [32449,32464]"/>
  <match src="type_name [42604,42611]" dest="type_name [42380,42387]"/>
  <match src="binary_expression [47568,47596]" dest="binary_expression [47344,47372]"/>
  <match src="state_mutability [45350,45354]" dest="state_mutability [45126,45130]"/>
  <match src="(: ( [4129,4130]" dest="(: ( [4096,4097]"/>
  <match src="function_body [44872,45295]" dest="function_body [44648,45071]"/>
  <match src="primitive_type [23955,23962]" dest="primitive_type [23799,23806]"/>
  <match src="identifier: adminRole [38258,38267]" dest="identifier: adminRole [38034,38043]"/>
  <match src="return: return [17577,17583]" dest="return: return [17511,17517]"/>
  <match src="user_defined_type [20712,20718]" dest="user_defined_type [20589,20595]"/>
  <match src="using: using [34438,34443]" dest="using: using [34214,34219]"/>
  <match src="tuple_expression [5402,5415]" dest="tuple_expression [5369,5382]"/>
  <match src="): ) [29335,29336]" dest="): ) [29179,29180]"/>
  <match src="parameter [29450,29472]" dest="parameter [29294,29316]"/>
  <match src="(: ( [36999,37000]" dest="(: ( [36775,36776]"/>
  <match src=",: , [49478,49479]" dest=",: , [49254,49255]"/>
  <match src="type_name [27806,27816]" dest="type_name [27650,27660]"/>
  <match src="identifier: spender [20440,20447]" dest="identifier: spender [20317,20324]"/>
  <match src="type_name [53464,53471]" dest="type_name [53370,53377]"/>
  <match src="member_expression [45602,45610]" dest="member_expression [45378,45386]"/>
  <match src="type_name [35797,35804]" dest="type_name [35573,35580]"/>
  <match src="type_name [37000,37007]" dest="type_name [36776,36783]"/>
  <match src="state_mutability [27854,27858]" dest="state_mutability [27698,27702]"/>
  <match src="&gt;=:  &gt;= [32022,32025]" dest="&gt;=:  &gt;= [32828,32831]"/>
  <match src="): ) [29265,29266]" dest="): ) [29109,29110]"/>
  <match src="(: ( [53752,53753]" dest="(: ( [53658,53659]"/>
  <match src="parameter [31376,31383]" dest="parameter [31220,31227]"/>
  <match src="memory: memory [43439,43445]" dest="memory: memory [43215,43221]"/>
  <match src="): ) [24029,24030]" dest="): ) [23873,23874]"/>
  <match src="): ) [29337,29338]" dest="): ) [29181,29182]"/>
  <match src="function: function [11142,11150]" dest="function: function [11076,11084]"/>
  <match src="yul_identifier [45765,45771]" dest="yul_identifier [45541,45547]"/>
  <match src="yul_function_call [43540,43557]" dest="yul_function_call [43316,43333]"/>
  <match src="returns: returns [7916,7923]" dest="returns: returns [7883,7890]"/>
  <match src="override_specifier [52888,52896]" dest="override_specifier [52794,52802]"/>
  <match src="): ) [53144,53145]" dest="): ) [53050,53051]"/>
  <match src="function: function [26812,26820]" dest="function: function [26656,26664]"/>
  <match src="&quot;: &quot; [13789,13790]" dest="&quot;: &quot; [13723,13724]"/>
  <match src="type_name [42573,42580]" dest="type_name [42349,42356]"/>
  <match src="identifier: abi [19411,19414]" dest="identifier: abi [19288,19291]"/>
  <match src="identifier: role [37395,37399]" dest="identifier: role [37171,37175]"/>
  <match src="}: } [38381,38382]" dest="}: } [38157,38158]"/>
  <match src="type_name [16910,16915]" dest="type_name [16844,16849]"/>
  <match src="function: function [32585,32593]" dest="function: function [32396,32404]"/>
  <match src="): ) [816,817]" dest="): ) [816,817]"/>
  <match src="type_name [4364,4371]" dest="type_name [4331,4338]"/>
  <match src="identifier: LockedERC20 [53008,53019]" dest="identifier: LockedERC20 [52914,52925]"/>
  <match src="call_expression [12581,12654]" dest="call_expression [12515,12588]"/>
  <match src="variable_declaration_statement [43021,43050]" dest="variable_declaration_statement [42797,42826]"/>
  <match src="bytes32: bytes32 [29305,29312]" dest="bytes32: bytes32 [29149,29156]"/>
  <match src="{: { [29518,29519]" dest="{: { [29362,29363]"/>
  <match src="identifier: i [42612,42613]" dest="identifier: i [42388,42389]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [364,438]" dest="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [364,438]"/>
  <match src="primitive_type [37014,37021]" dest="primitive_type [36790,36797]"/>
  <match src="type_name [20432,20439]" dest="type_name [20309,20316]"/>
  <match src="bytes: bytes [45645,45650]" dest="bytes: bytes [45421,45426]"/>
  <match src=",: , [4680,4681]" dest=",: , [4647,4648]"/>
  <match src="block_statement [42635,42782]" dest="block_statement [42411,42558]"/>
  <match src="{: { [220,221]" dest="{: { [220,221]"/>
  <match src="return_type_definition [31836,31853]" dest="return_type_definition [31680,31697]"/>
  <match src="visibility [1153,1161]" dest="visibility [1153,1161]"/>
  <match src="expression_statement [7945,7988]" dest="expression_statement [7912,7955]"/>
  <match src="variable_declaration_statement [46773,46789]" dest="variable_declaration_statement [46549,46565]"/>
  <match src=",: , [15191,15192]" dest=",: , [15125,15126]"/>
  <match src=",: , [4752,4753]" dest=",: , [4719,4720]"/>
  <match src="identifier: mask [49254,49258]" dest="identifier: mask [49030,49034]"/>
  <match src="identifier: RLPItem [53697,53704]" dest="identifier: RLPItem [53603,53610]"/>
  <match src="type_name [31376,31383]" dest="type_name [31220,31227]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [1936,2240]" dest="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [1936,2240]"/>
  <match src="yul_evm_builtin [44622,44624]" dest="yul_evm_builtin [44398,44400]"/>
  <match src="comment: /**      * @dev Returns the admin role that controls `role`. See {grantRole} and      * {revokeRole}.      *      * To change a role's admin, use {_setRoleAdmin}.      */ [37123,37298]" dest="comment: /**      * @dev Returns the admin role that controls `role`. See {grantRole} and      * {revokeRole}.      *      * To change a role's admin, use {_setRoleAdmin}.      */ [36899,37074]"/>
  <match src="function_definition [43312,43644]" dest="function_definition [43088,43420]"/>
  <match src="identifier: result [43446,43452]" dest="identifier: result [43222,43228]"/>
  <match src="call_expression [43848,43908]" dest="call_expression [43624,43684]"/>
  <match src="identifier: memPtr [41918,41924]" dest="identifier: memPtr [41694,41700]"/>
  <match src="type_name [23546,23553]" dest="type_name [23390,23397]"/>
  <match src="identifier: target [14090,14096]" dest="identifier: target [14024,14030]"/>
  <match src="expression_statement [39064,39091]" dest="expression_statement [38840,38867]"/>
  <match src="parameter [38925,38940]" dest="parameter [38701,38716]"/>
  <match src="): ) [32605,32606]" dest="): ) [32416,32417]"/>
  <match src="array_access [37772,37784]" dest="array_access [37548,37560]"/>
  <match src="parameter [5014,5021]" dest="parameter [4981,4988]"/>
  <match src="type_name [17679,17683]" dest="type_name [17613,17617]"/>
  <match src="or: or [49480,49482]" dest="or: or [49256,49258]"/>
  <match src="bytes: bytes [16512,16517]" dest="bytes: bytes [16446,16451]"/>
  <match src=",: , [9359,9360]" dest=",: , [9326,9327]"/>
  <match src=",: , [26178,26179]" dest=",: , [26022,26023]"/>
  <match src="call_expression [40288,40300]" dest="call_expression [40064,40076]"/>
  <match src="{: { [8592,8593]" dest="{: { [8559,8560]"/>
  <match src="): ) [7312,7313]" dest="): ) [7279,7280]"/>
  <match src="type_name [31332,31339]" dest="type_name [31176,31183]"/>
  <match src="identifier: _remove [29285,29292]" dest="identifier: _remove [29129,29136]"/>
  <match src="identifier: item [43686,43690]" dest="identifier: item [43462,43466]"/>
  <match src="yul_evm_builtin [44675,44678]" dest="yul_evm_builtin [44451,44454]"/>
  <match src="identifier: data [17280,17284]" dest="identifier: data [17214,17218]"/>
  <match src="{: { [39749,39750]" dest="{: { [39525,39526]"/>
  <match src="returns: returns [1167,1174]" dest="returns: returns [1167,1174]"/>
  <match src="primitive_type [3735,3742]" dest="primitive_type [3702,3709]"/>
  <match src="primitive_type [45694,45701]" dest="primitive_type [45470,45477]"/>
  <match src="returns: returns [37041,37048]" dest="returns: returns [36817,36824]"/>
  <match src=",: , [43870,43871]" dest=",: , [43646,43647]"/>
  <match src="&quot;: &quot; [53895,53896]" dest="&quot;: &quot; [53801,53802]"/>
  <match src="&gt;: &gt; [41819,41820]" dest="&gt;: &gt; [41595,41596]"/>
  <match src="primitive_type [20432,20439]" dest="primitive_type [20309,20316]"/>
  <match src="identifier: toList [42089,42095]" dest="identifier: toList [41865,41871]"/>
  <match src="identifier: byte0 [48553,48558]" dest="identifier: byte0 [48329,48334]"/>
  <match src="primitive_type [12518,12533]" dest="primitive_type [12452,12467]"/>
  <match src="identifier: item [44061,44065]" dest="identifier: item [43837,43841]"/>
  <match src="}: } [2837,2838]" dest="}: } [2837,2838]"/>
  <match src="return_statement [5833,5842]" dest="return_statement [5800,5809]"/>
  <match src="for: for [51519,51522]" dest="for: for [51294,51297]"/>
  <match src="primitive_type [54072,54079]" dest="primitive_type [53978,53985]"/>
  <match src="): ) [45122,45123]" dest="): ) [44898,44899]"/>
  <match src="number_literal: 256 [49261,49264]" dest="number_literal: 256 [49037,49040]"/>
  <match src="type_name [41767,41774]" dest="type_name [41543,41550]"/>
  <match src="call_expression [51690,51708]" dest="call_expression [51465,51483]"/>
  <match src="return_type_definition [44854,44871]" dest="return_type_definition [44630,44647]"/>
  <match src="=: = [53973,53974]" dest="=: = [53879,53880]"/>
  <match src="identifier: selector [20632,20640]" dest="identifier: selector [20509,20517]"/>
  <match src="call_expression [44054,44066]" dest="call_expression [43830,43842]"/>
  <match src="[: [ [53704,53705]" dest="[: [ [53610,53611]"/>
  <match src="&gt;=: &gt;= [48963,48965]" dest="&gt;=: &gt;= [48739,48741]"/>
  <match src="identifier: RLPItem [42334,42341]" dest="identifier: RLPItem [42110,42117]"/>
  <match src="}: } [47496,47497]" dest="}: } [47272,47273]"/>
  <match src="identifier: contains [31093,31101]" dest="identifier: contains [30937,30945]"/>
  <match src="): ) [48388,48389]" dest="): ) [48164,48165]"/>
  <match src="yul_path [11501,11505]" dest="yul_path [11435,11439]"/>
  <match src="}: } [29801,29802]" dest="}: } [29645,29646]"/>
  <match src="(: ( [41766,41767]" dest="(: ( [41542,41543]"/>
  <match src="}: } [4192,4193]" dest="}: } [4159,4160]"/>
  <match src="block_statement [21960,22157]" dest="block_statement [21837,22034]"/>
  <match src="uint256: uint256 [31872,31879]" dest="uint256: uint256 [31716,31723]"/>
  <match src="identifier: _itemLength [46446,46457]" dest="identifier: _itemLength [46222,46233]"/>
  <match src="storage: storage [26829,26836]" dest="storage: storage [26673,26680]"/>
  <match src="{: { [49787,49788]" dest="{: { [49562,49563]"/>
  <match src="identifier: b [8611,8612]" dest="identifier: b [8578,8579]"/>
  <match src="variable_declaration_statement [6658,6676]" dest="variable_declaration_statement [6625,6643]"/>
  <match src=":=: := [47224,47226]" dest=":=: := [47000,47002]"/>
  <match src="visibility [51661,51667]" dest="visibility [51436,51442]"/>
  <match src="primitive_type [19082,19089]" dest="primitive_type [18959,18966]"/>
  <match src="contract_declaration [40607,41005]" dest="contract_declaration [40382,40780]"/>
  <match src="&gt;=:  &gt;= [22281,22284]" dest="&gt;=:  &gt;= [31833,31836]"/>
  <match src="identifier: copy [43580,43584]" dest="identifier: copy [43356,43360]"/>
  <match src="member_expression [29783,29793]" dest="member_expression [29627,29637]"/>
  <match src="identifier: b [7899,7900]" dest="identifier: b [7866,7867]"/>
  <match src="state_mutability [3755,3759]" dest="state_mutability [3722,3726]"/>
  <match src="identifier: token [20331,20336]" dest="identifier: token [20208,20213]"/>
  <match src="identifier: account [40174,40181]" dest="identifier: account [39950,39957]"/>
  <match src="bytes32: bytes32 [37000,37007]" dest="bytes32: bytes32 [36776,36783]"/>
  <match src="return: return [9482,9488]" dest="return: return [9449,9455]"/>
  <match src="type_name [53612,53629]" dest="type_name [53518,53535]"/>
  <match src="call_argument [20651,20663]" dest="call_argument [20528,20540]"/>
  <match src="(: ( [9349,9350]" dest="(: ( [9316,9317]"/>
  <match src="identifier: _callOptionalReturn [19384,19403]" dest="identifier: _callOptionalReturn [19261,19280]"/>
  <match src="call_argument [14231,14232]" dest="call_argument [14165,14166]"/>
  <match src="{: { [38218,38219]" dest="{: { [37994,37995]"/>
  <match src="identifier: index [37101,37106]" dest="identifier: index [36877,36882]"/>
  <match src="primitive_type [759,766]" dest="primitive_type [759,766]"/>
  <match src="function_definition [44797,45295]" dest="function_definition [44573,45071]"/>
  <match src="type_name [34597,34604]" dest="type_name [34373,34380]"/>
  <match src=",: , [37809,37810]" dest=",: , [37585,37586]"/>
  <match src="contract_declaration [51386,54351]" dest="contract_declaration [51161,54351]"/>
  <match src="]: ] [23554,23555]" dest="]: ] [23398,23399]"/>
  <match src="): ) [44000,44001]" dest="): ) [43776,43777]"/>
  <match src="): ) [13744,13745]" dest="): ) [13678,13679]"/>
  <match src="(: ( [42549,42550]" dest="(: ( [42325,42326]"/>
  <match src="function_body [38218,38382]" dest="function_body [37994,38158]"/>
  <match src="identifier: items [42623,42628]" dest="identifier: items [42399,42404]"/>
  <match src="&quot;: &quot; [6740,6741]" dest="&quot;: &quot; [6707,6708]"/>
  <match src="function_definition [31316,31430]" dest="function_definition [31160,31274]"/>
  <match src="identifier: UintSet [30877,30884]" dest="identifier: UintSet [30721,30728]"/>
  <match src="function_body [14177,14255]" dest="function_body [14111,14189]"/>
  <match src="uint256: uint256 [44883,44890]" dest="uint256: uint256 [44659,44666]"/>
  <match src="type_name [48805,48812]" dest="type_name [48581,48588]"/>
  <match src="library: library [3543,3550]" dest="library: library [3510,3517]"/>
  <match src="[: [ [53742,53743]" dest="[: [ [53648,53649]"/>
  <match src="{: { [52930,52931]" dest="{: { [52836,52837]"/>
  <match src="identifier: ITokenPredicate [49771,49786]" dest="identifier: ITokenPredicate [49546,49561]"/>
  <match src="expression_statement [53777,53942]" dest="expression_statement [53683,53848]"/>
  <match src="{: { [44872,44873]" dest="{: { [44648,44649]"/>
  <match src="identifier: Set [27074,27077]" dest="identifier: Set [26918,26921]"/>
  <match src="{: { [9432,9433]" dest="{: { [9399,9400]"/>
  <match src="member_expression [27369,27379]" dest="member_expression [27213,27223]"/>
  <match src="if_statement [40202,40313]" dest="if_statement [39978,40089]"/>
  <match src="state_mutability [31147,31151]" dest="state_mutability [30991,30995]"/>
  <match src="): ) [39784,39785]" dest="): ) [39560,39561]"/>
  <match src="else: else [47055,47059]" dest="else: else [46831,46835]"/>
  <match src="(: ( [37771,37772]" dest="(: ( [37547,37548]"/>
  <match src="identifier: b [6281,6282]" dest="identifier: b [6248,6249]"/>
  <match src="solidity_pragma_token [2938,2961]" dest="solidity_pragma_token [2905,2928]"/>
  <match src="address: address [43715,43722]" dest="address: address [43491,43498]"/>
  <match src="primitive_type [45136,45143]" dest="primitive_type [44912,44919]"/>
  <match src=":=: := [44660,44662]" dest=":=: := [44436,44438]"/>
  <match src="primitive_type [52827,52832]" dest="primitive_type [52733,52738]"/>
  <match src="call_argument [15609,15619]" dest="call_argument [15543,15553]"/>
  <match src="identifier: value [19260,19265]" dest="identifier: value [19137,19142]"/>
  <match src="parameter [16873,16890]" dest="parameter [16807,16824]"/>
  <match src="}: } [23745,23746]" dest="}: } [23589,23590]"/>
  <match src="parameter [37050,37057]" dest="parameter [36826,36833]"/>
  <match src="): ) [43755,43756]" dest="): ) [43531,43532]"/>
  <match src="(: ( [27368,27369]" dest="(: ( [27212,27213]"/>
  <match src="): ) [29001,29002]" dest="): ) [28845,28846]"/>
  <match src="}: } [27394,27395]" dest="}: } [27238,27239]"/>
  <match src="binary_expression [7953,7958]" dest="binary_expression [7920,7925]"/>
  <match src="yul_function_call [45238,45251]" dest="yul_function_call [45014,45027]"/>
  <match src="return_type_definition [24571,24585]" dest="return_type_definition [24415,24429]"/>
  <match src="return_statement [44736,44750]" dest="return_statement [44512,44526]"/>
  <match src="identifier: require [53777,53784]" dest="identifier: require [53683,53690]"/>
  <match src="): ) [42183,42184]" dest="): ) [41959,41960]"/>
  <match src="identifier: previousAdminRole [35107,35124]" dest="identifier: previousAdminRole [34883,34900]"/>
  <match src="): ) [38201,38202]" dest="): ) [37977,37978]"/>
  <match src="[: [ [26253,26254]" dest="[: [ [26097,26098]"/>
  <match src="): ) [21958,21959]" dest="): ) [21835,21836]"/>
  <match src="parameter [15193,15219]" dest="parameter [15127,15153]"/>
  <match src="): ) [52991,52992]" dest="): ) [52897,52898]"/>
  <match src="): ) [53093,53094]" dest="): ) [52999,53000]"/>
  <match src="identifier: MANAGER_ROLE [52329,52341]" dest="identifier: MANAGER_ROLE [52235,52247]"/>
  <match src="call_expression [20143,20182]" dest="call_expression [20020,20059]"/>
  <match src="&lt;=: &lt;= [46518,46520]" dest="&lt;=: &lt;= [46294,46296]"/>
  <match src="&quot;: &quot; [37859,37860]" dest="&quot;: &quot; [37635,37636]"/>
  <match src="yul_evm_builtin [47672,47675]" dest="yul_evm_builtin [47448,47451]"/>
  <match src="(: ( [11201,11202]" dest="(: ( [11135,11136]"/>
  <match src="parameter [27307,27320]" dest="parameter [27151,27164]"/>
  <match src="function_definition [5268,5423]" dest="function_definition [5235,5390]"/>
  <match src="state_mutability [28063,28067]" dest="state_mutability [27907,27911]"/>
  <match src="return_statement [29278,29339]" dest="return_statement [29122,29183]"/>
  <match src="call_expression [16942,17019]" dest="call_expression [16876,16953]"/>
  <match src="primitive_type [2303,2310]" dest="primitive_type [2303,2310]"/>
  <match src="address: address [52176,52183]" dest="address: address [52082,52089]"/>
  <match src="identifier: account [40371,40378]" dest="identifier: account [40147,40154]"/>
  <match src="identifier: set [26837,26840]" dest="identifier: set [26681,26684]"/>
  <match src="uint256: uint256 [12545,12552]" dest="uint256: uint256 [12479,12486]"/>
  <match src=",: , [16605,16606]" dest=",: , [16539,16540]"/>
  <match src="bytes: bytes [16910,16915]" dest="bytes: bytes [16844,16849]"/>
  <match src="returns: returns [338,345]" dest="returns: returns [338,345]"/>
  <match src="identifier: item [45602,45606]" dest="identifier: item [45378,45382]"/>
  <match src="binary_expression [42425,42447]" dest="binary_expression [42201,42223]"/>
  <match src="user_defined_type [34462,34486]" dest="user_defined_type [34238,34262]"/>
  <match src="): ) [45376,45377]" dest="): ) [45152,45153]"/>
  <match src="=: = [42658,42659]" dest="=: = [42434,42435]"/>
  <match src="&quot;: &quot; [12797,12798]" dest="&quot;: &quot; [12731,12732]"/>
  <match src="identifier: value [30670,30675]" dest="identifier: value [30514,30519]"/>
  <match src="identifier: offset [44407,44413]" dest="identifier: offset [44183,44189]"/>
  <match src="primitive_type [4409,4413]" dest="primitive_type [4376,4380]"/>
  <match src="yul_evm_builtin [47364,47367]" dest="yul_evm_builtin [47140,47143]"/>
  <match src="string [21887,21921]" dest="string [21764,21798]"/>
  <match src="type_name [14729,14734]" dest="type_name [14663,14668]"/>
  <match src="(: ( [43935,43936]" dest="(: ( [43711,43712]"/>
  <match src="(: ( [45066,45067]" dest="(: ( [44842,44843]"/>
  <match src="mload: mload [47349,47354]" dest="mload: mload [47125,47130]"/>
  <match src="identifier: Set [26163,26166]" dest="identifier: Set [26007,26010]"/>
  <match src="comment: /// @title Token predicate interface for all pos portal predicates [49618,49684]" dest="comment: /// @title Token predicate interface for all pos portal predicates [49393,49459]"/>
  <match src="solidity_version:  0.6.6 [49605,49611]" dest="solidity_version:  0.6.12 [49381,49388]"/>
  <match src="): ) [43166,43167]" dest="): ) [42942,42943]"/>
  <match src="type_name [36279,36286]" dest="type_name [36055,36062]"/>
  <match src=".: . [43860,43861]" dest=".: . [43636,43637]"/>
  <match src="(: ( [17795,17796]" dest="(: ( [17729,17730]"/>
  <match src="string [51631,51645]" dest="string [51406,51420]"/>
  <match src="identifier: value [29236,29241]" dest="identifier: value [29080,29085]"/>
  <match src="type_name [10189,10196]" dest="type_name [10156,10163]"/>
  <match src="interface_declaration [203,2838]" dest="interface_declaration [203,2838]"/>
  <match src="identifier: rootToken [53490,53499]" dest="identifier: rootToken [53396,53405]"/>
  <match src="number_literal: 33 [45079,45081]" dest="number_literal: 33 [44855,44857]"/>
  <match src="call_argument [20126,20188]" dest="call_argument [20003,20065]"/>
  <match src="string_literal [17385,17425]" dest="string_literal [17319,17359]"/>
  <match src="yul_function_call [48171,48184]" dest="yul_function_call [47947,47960]"/>
  <match src="identifier: RLPReader [53687,53696]" dest="identifier: RLPReader [53593,53602]"/>
  <match src="state_variable_declaration [34630,34675]" dest="state_variable_declaration [34406,34451]"/>
  <match src="string: string [40776,40782]" dest="string: string [40551,40557]"/>
  <match src="identifier: require [20118,20125]" dest="identifier: require [19995,20002]"/>
  <match src="identifier: memPtr [47217,47223]" dest="identifier: memPtr [46993,46999]"/>
  <match src="variable_declaration [44424,44438]" dest="variable_declaration [44200,44214]"/>
  <match src="primitive_type [19809,19816]" dest="primitive_type [19686,19693]"/>
  <match src="call_expression [42330,42350]" dest="call_expression [42106,42126]"/>
  <match src="call_argument [12589,12620]" dest="call_argument [12523,12554]"/>
  <match src="function: function [39925,39933]" dest="function: function [39701,39709]"/>
  <match src="(: ( [49412,49413]" dest="(: ( [49188,49189]"/>
  <match src="identifier: value [23963,23968]" dest="identifier: value [23807,23812]"/>
  <match src="): ) [17382,17383]" dest="): ) [17316,17317]"/>
  <match src="return_statement [29768,29795]" dest="return_statement [29612,29639]"/>
  <match src="function_body [19833,20379]" dest="function_body [19710,20256]"/>
  <match src="type_name [40872,40879]" dest="type_name [40647,40654]"/>
  <match src="using_directive [51471,51497]" dest="using_directive [51246,51272]"/>
  <match src="yul_evm_builtin [11509,11520]" dest="yul_evm_builtin [11443,11454]"/>
  <match src="call_argument [52911,52923]" dest="call_argument [52817,52829]"/>
  <match src="call_argument [28995,29000]" dest="call_argument [28839,28844]"/>
  <match src="type_cast_expression [53123,53136]" dest="type_cast_expression [53029,53042]"/>
  <match src="pragma_directive [2931,2962]" dest="pragma_directive [2898,2929]"/>
  <match src="call_expression [53983,54010]" dest="call_expression [53889,53916]"/>
  <match src="uint256: uint256 [52095,52102]" dest="uint256: uint256 [51870,51877]"/>
  <match src="call_expression [28954,29004]" dest="call_expression [28798,28848]"/>
  <match src="{: { [5023,5024]" dest="{: { [4990,4991]"/>
  <match src="uint256: uint256 [45694,45701]" dest="uint256: uint256 [45470,45477]"/>
  <match src="identifier: members [40416,40423]" dest="identifier: members [40192,40199]"/>
  <match src="identifier: items [42271,42276]" dest="identifier: items [42047,42052]"/>
  <match src="type_name [46799,46806]" dest="type_name [46575,46582]"/>
  <match src="identifier: RLPItem [42938,42945]" dest="identifier: RLPItem [42714,42721]"/>
  <match src="(: ( [44358,44359]" dest="(: ( [44134,44135]"/>
  <match src="(: ( [44624,44625]" dest="(: ( [44400,44401]"/>
  <match src="variable_declaration_statement [20778,20897]" dest="variable_declaration_statement [20655,20774]"/>
  <match src="function_definition [31084,31230]" dest="function_definition [30928,31074]"/>
  <match src="state_mutability [333,337]" dest="state_mutability [333,337]"/>
  <match src="identifier: _revokeRole [39064,39075]" dest="identifier: _revokeRole [38840,38851]"/>
  <match src="member_expression [26907,26918]" dest="member_expression [26751,26762]"/>
  <match src=",: , [40931,40932]" dest=",: , [40706,40707]"/>
  <match src=":=: := [44528,44530]" dest=":=: := [44304,44306]"/>
  <match src="identifier: result [45765,45771]" dest="identifier: result [45541,45547]"/>
  <match src="parameter [29701,29723]" dest="parameter [29545,29567]"/>
  <match src="identifier: abi [52958,52961]" dest="identifier: abi [52864,52867]"/>
  <match src="identifier: to [19256,19258]" dest="identifier: to [19133,19135]"/>
  <match src="view: view [26401,26405]" dest="view: view [26245,26249]"/>
  <match src="type_name [20778,20785]" dest="type_name [20655,20662]"/>
  <match src="call_expression [7945,7987]" dest="call_expression [7912,7954]"/>
  <match src="solidity: solidity [22273,22281]" dest="solidity: solidity [31825,31833]"/>
  <match src="=: = [25724,25725]" dest="=: = [25568,25569]"/>
  <match src="storage: storage [27294,27301]" dest="storage: storage [27138,27145]"/>
  <match src="bytes32: bytes32 [25457,25464]" dest="bytes32: bytes32 [25301,25308]"/>
  <match src="): ) [10258,10259]" dest="): ) [10225,10226]"/>
  <match src="{: { [40441,40442]" dest="{: { [40217,40218]"/>
  <match src="identifier: item [45422,45426]" dest="identifier: item [45198,45202]"/>
  <match src="string [44068,44102]" dest="string [43844,43878]"/>
  <match src="number_literal: 0 [14231,14232]" dest="number_literal: 0 [14165,14166]"/>
  <match src="call_argument [44053,44066]" dest="call_argument [43829,43842]"/>
  <match src="identifier: result [45144,45150]" dest="identifier: result [44920,44926]"/>
  <match src="primitive_type [16498,16502]" dest="primitive_type [16432,16436]"/>
  <match src="type_name [46043,46050]" dest="type_name [45819,45826]"/>
  <match src="solidity_version: 0.6.0 [18516,18521]" dest="solidity_version: 0.6.0 [22128,22133]"/>
  <match src="): ) [20664,20665]" dest="): ) [20541,20542]"/>
  <match src="identifier: pop [25864,25867]" dest="identifier: pop [25708,25711]"/>
  <match src="): ) [2590,2591]" dest="): ) [2590,2591]"/>
  <match src="address: address [20726,20733]" dest="address: address [20603,20610]"/>
  <match src="identifier: value [27914,27919]" dest="identifier: value [27758,27763]"/>
  <match src="identifier: balance [12603,12610]" dest="identifier: balance [12537,12544]"/>
  <match src="identifier: _setupRole [39690,39700]" dest="identifier: _setupRole [39466,39476]"/>
  <match src="type_name [45694,45701]" dest="type_name [45470,45477]"/>
  <match src="primitive_type [10189,10196]" dest="primitive_type [10156,10163]"/>
  <match src="function_definition [28860,29012]" dest="function_definition [28704,28856]"/>
  <match src="parameter [4364,4373]" dest="parameter [4331,4340]"/>
  <match src="(: ( [27805,27806]" dest="(: ( [27649,27650]"/>
  <match src="yul_assignment [48154,48185]" dest="yul_assignment [47930,47961]"/>
  <match src=",: , [14115,14116]" dest=",: , [14049,14050]"/>
  <match src="binary_expression [12589,12620]" dest="binary_expression [12523,12554]"/>
  <match src="(: ( [27867,27868]" dest="(: ( [27711,27712]"/>
  <match src="event: event [2757,2762]" dest="event: event [2757,2762]"/>
  <match src="yul_identifier [45244,45250]" dest="yul_identifier [45020,45026]"/>
  <match src="binary_expression [3827,3832]" dest="binary_expression [3794,3799]"/>
  <match src="return_type_definition [26870,26887]" dest="return_type_definition [26714,26731]"/>
  <match src="call_argument [17561,17565]" dest="call_argument [17495,17499]"/>
  <match src="parameter [44819,44838]" dest="parameter [44595,44614]"/>
  <match src="internal: internal [19824,19832]" dest="internal: internal [19701,19709]"/>
  <match src="type_name [4100,4104]" dest="type_name [4067,4071]"/>
  <match src="identifier: sub [6141,6144]" dest="identifier: sub [6108,6111]"/>
  <match src="tuple_expression [4144,4154]" dest="tuple_expression [4111,4121]"/>
  <match src=".: . [20631,20632]" dest=".: . [20508,20509]"/>
  <match src="identifier: value [27315,27320]" dest="identifier: value [27159,27164]"/>
  <match src="(: ( [39770,39771]" dest="(: ( [39546,39547]"/>
  <match src="identifier: remove [27580,27586]" dest="identifier: remove [27424,27430]"/>
  <match src="identifier: require [44114,44121]" dest="identifier: require [43890,43897]"/>
  <match src="yul_assignment [45744,45772]" dest="yul_assignment [45520,45548]"/>
  <match src="string [15978,16017]" dest="string [15912,15951]"/>
  <match src="expression_statement [42619,42629]" dest="expression_statement [42395,42405]"/>
  <match src="(: ( [48085,48086]" dest="(: ( [47861,47862]"/>
  <match src="identifier: LockedERC20 [51959,51970]" dest="identifier: LockedERC20 [51734,51745]"/>
  <match src="primitive_type [30247,30254]" dest="primitive_type [30091,30098]"/>
  <match src="): ) [43690,43691]" dest="): ) [43466,43467]"/>
  <match src="parameter [10251,10258]" dest="parameter [10218,10225]"/>
  <match src="identifier: RLPReader [51509,51518]" dest="identifier: RLPReader [51284,51293]"/>
  <match src="call_argument [12818,12825]" dest="call_argument [12752,12759]"/>
  <match src="comment: // We read and store the value's index to prevent multiple reads from the same storage slot [24597,24688]" dest="comment: // We read and store the value's index to prevent multiple reads from the same storage slot [24441,24532]"/>
  <match src="parameter [29748,29755]" dest="parameter [29592,29599]"/>
  <match src="variable_declaration_statement [45531,45576]" dest="variable_declaration_statement [45307,45352]"/>
  <match src="identifier: allowance [20149,20158]" dest="identifier: allowance [20026,20035]"/>
  <match src="+: + [46444,46445]" dest="+: + [46220,46221]"/>
  <match src="uint256: uint256 [8521,8528]" dest="uint256: uint256 [8488,8495]"/>
  <match src="call_argument [42344,42349]" dest="call_argument [42120,42125]"/>
  <match src="yul_identifier [47661,47668]" dest="yul_identifier [47437,47444]"/>
  <match src="identifier: RLPItem [53622,53629]" dest="identifier: RLPItem [53528,53535]"/>
  <match src="): ) [20756,20757]" dest="): ) [20633,20634]"/>
  <match src="call_expression [40403,40439]" dest="call_expression [40179,40215]"/>
  <match src="{: { [18321,18322]" dest="{: { [18255,18256]"/>
  <match src="indexed: indexed [35830,35837]" dest="indexed: indexed [35606,35613]"/>
  <match src="function: function [20681,20689]" dest="function: function [20558,20566]"/>
  <match src="call_argument [37772,37794]" dest="call_argument [37548,37570]"/>
  <match src="call_expression [28104,28123]" dest="call_expression [27948,27967]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [17035,17215]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [16969,17149]"/>
  <match src="(: ( [14728,14729]" dest="(: ( [14662,14663]"/>
  <match src="type_name [48048,48055]" dest="type_name [47824,47831]"/>
  <match src="identifier: dataLen [47884,47891]" dest="identifier: dataLen [47660,47667]"/>
  <match src="call_expression [44114,44171]" dest="call_expression [43890,43947]"/>
  <match src="identifier: a [6277,6278]" dest="identifier: a [6244,6245]"/>
  <match src="expression_statement [25852,25870]" dest="expression_statement [25696,25714]"/>
  <match src="bool: bool [4409,4413]" dest="bool: bool [4376,4380]"/>
  <match src="}: } [31229,31230]" dest="}: } [31073,31074]"/>
  <match src="returns: returns [48077,48084]" dest="returns: returns [47853,47860]"/>
  <match src="uint8: uint8 [41464,41469]" dest="uint8: uint8 [41240,41245]"/>
  <match src="number_literal: 1 [48580,48581]" dest="number_literal: 1 [48356,48357]"/>
  <match src="variable_declaration [46238,46251]" dest="variable_declaration [46014,46027]"/>
  <match src=",: , [38923,38924]" dest=",: , [38699,38700]"/>
  <match src="identifier: _indexes [26245,26253]" dest="identifier: _indexes [26089,26097]"/>
  <match src="type_name [28897,28904]" dest="type_name [28741,28748]"/>
  <match src="): ) [49060,49061]" dest="): ) [48836,48837]"/>
  <match src="member_expression [40037,40059]" dest="member_expression [39813,39835]"/>
  <match src="visibility [12561,12569]" dest="visibility [12495,12503]"/>
  <match src="yul_decimal_number: 1 [47479,47480]" dest="yul_decimal_number: 1 [47255,47256]"/>
  <match src="call_argument [31880,31902]" dest="call_argument [31724,31746]"/>
  <match src="): ) [44695,44696]" dest="): ) [44471,44472]"/>
  <match src="variable_declaration [45694,45709]" dest="variable_declaration [45470,45485]"/>
  <match src="}: } [31910,31911]" dest="}: } [31754,31755]"/>
  <match src="if: if [46901,46903]" dest="if: if [46677,46679]"/>
  <match src=",: , [49424,49425]" dest=",: , [49200,49201]"/>
  <match src="public: public [38203,38209]" dest="public: public [37979,37985]"/>
  <match src="bool: bool [812,816]" dest="bool: bool [812,816]"/>
  <match src="function: function [45982,45990]" dest="function: function [45758,45766]"/>
  <match src="not: not [49353,49356]" dest="not: not [49129,49132]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [27100,27264]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [26944,27108]"/>
  <match src="(: ( [18243,18244]" dest="(: ( [18177,18178]"/>
  <match src="identifier: Context [32570,32577]" dest="identifier: Context [32381,32388]"/>
  <match src="visibility [30197,30205]" dest="visibility [30041,30049]"/>
  <match src="yul_identifier [44667,44673]" dest="yul_identifier [44443,44449]"/>
  <match src=".: . [44965,44966]" dest=".: . [44741,44742]"/>
  <match src="struct_member [34597,34615]" dest="struct_member [34373,34391]"/>
  <match src="function_definition [42080,42815]" dest="function_definition [41856,42591]"/>
  <match src="): ) [46876,46877]" dest="): ) [46652,46653]"/>
  <match src="yul_function_call [18198,18215]" dest="yul_function_call [18132,18149]"/>
  <match src="call_argument [7953,7958]" dest="call_argument [7920,7925]"/>
  <match src="yul_variable_declaration [49322,49363]" dest="yul_variable_declaration [49098,49139]"/>
  <match src="event: event [35757,35762]" dest="event: event [35533,35538]"/>
  <match src="identifier: grantRole [37689,37698]" dest="identifier: grantRole [37465,37474]"/>
  <match src="type_alias [51553,51562]" dest="type_alias [51328,51337]"/>
  <match src="(: ( [13774,13775]" dest="(: ( [13708,13709]"/>
  <match src="return_type_definition [28068,28085]" dest="return_type_definition [27912,27929]"/>
  <match src="type_name [27340,27344]" dest="type_name [27184,27188]"/>
  <match src="identifier: transfer [750,758]" dest="identifier: transfer [750,758]"/>
  <match src="function_definition [38152,38382]" dest="function_definition [37928,38158]"/>
  <match src="identifier: memPtr [48177,48183]" dest="identifier: memPtr [47953,47959]"/>
  <match src="}: } [34621,34622]" dest="}: } [34397,34398]"/>
  <match src="if: if [6627,6629]" dest="if: if [6594,6596]"/>
  <match src="parameter [5295,5304]" dest="parameter [5262,5271]"/>
  <match src="parameter [48086,48093]" dest="parameter [47862,47869]"/>
  <match src="event_paramater [35797,35820]" dest="event_paramater [35573,35596]"/>
  <match src="contract: contract [34397,34405]" dest="contract: contract [34173,34181]"/>
  <match src="identifier: result [45853,45859]" dest="identifier: result [45629,45635]"/>
  <match src="call_argument [17385,17425]" dest="call_argument [17319,17359]"/>
  <match src=",: , [14795,14796]" dest=",: , [14729,14730]"/>
  <match src="call_expression [20281,20371]" dest="call_expression [20158,20248]"/>
  <match src="&lt;: &lt; [42621,42622]" dest="&lt;: &lt; [42397,42398]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [6298,6543]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [6265,6510]"/>
  <match src="parameter [48048,48062]" dest="parameter [47824,47838]"/>
  <match src=".: . [54236,54237]" dest=".: . [54194,54195]"/>
  <match src="(: ( [4408,4409]" dest="(: ( [4375,4376]"/>
  <match src="parameter [28897,28910]" dest="parameter [28741,28754]"/>
  <match src="(: ( [28994,28995]" dest="(: ( [28838,28839]"/>
  <match src="unary_expression [44053,44066]" dest="unary_expression [43829,43842]"/>
  <match src="{: { [51132,51133]" dest="{: { [50908,50909]"/>
  <match src="): ) [54009,54010]" dest="): ) [53915,53916]"/>
  <match src="=: = [46351,46352]" dest="=: = [46127,46128]"/>
  <match src="identifier: value [30596,30601]" dest="identifier: value [30440,30445]"/>
  <match src=".: . [37784,37785]" dest=".: . [37560,37561]"/>
  <match src="type_name [14696,14703]" dest="type_name [14630,14637]"/>
  <match src="): ) [17537,17538]" dest="): ) [17471,17472]"/>
  <match src="comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [21484,21592]" dest="comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [21361,21469]"/>
  <match src="identifier: byte0 [48212,48217]" dest="identifier: byte0 [47988,47993]"/>
  <match src=".: . [40094,40095]" dest=".: . [39870,39871]"/>
  <match src="}: } [24285,24286]" dest="}: } [24129,24130]"/>
  <match src="function: function [10165,10173]" dest="function: function [10132,10140]"/>
  <match src="identifier: _values [24234,24241]" dest="identifier: _values [24078,24085]"/>
  <match src="add: add [47466,47469]" dest="add: add [47242,47245]"/>
  <match src="type_name [9423,9430]" dest="type_name [9390,9397]"/>
  <match src="identifier: LIST_LONG_START [48562,48577]" dest="identifier: LIST_LONG_START [48338,48353]"/>
  <match src="yul_path [47355,47361]" dest="yul_path [47131,47137]"/>
  <match src="call_argument [46529,46575]" dest="call_argument [46305,46351]"/>
  <match src="{: { [51464,51465]" dest="{: { [51239,51240]"/>
  <match src="identifier: target [16963,16969]" dest="identifier: target [16897,16903]"/>
  <match src="struct_member [27074,27085]" dest="struct_member [26918,26929]"/>
  <match src="false [26034,26039]" dest="false [25878,25883]"/>
  <match src="expression_statement [46502,46577]" dest="expression_statement [46278,46353]"/>
  <match src="call_argument [43603,43611]" dest="call_argument [43379,43387]"/>
  <match src="state_variable_declaration [51653,51709]" dest="state_variable_declaration [51428,51484]"/>
  <match src="): ) [43907,43908]" dest="): ) [43683,43684]"/>
  <match src="call_argument [53059,53065]" dest="call_argument [52965,52971]"/>
  <match src="visibility [39732,39740]" dest="visibility [39508,39516]"/>
  <match src="parameter [16857,16871]" dest="parameter [16791,16805]"/>
  <match src="identifier: byte0 [48154,48159]" dest="identifier: byte0 [47930,47935]"/>
  <match src="type_name [38172,38179]" dest="type_name [37948,37955]"/>
  <match src="(: ( [32716,32717]" dest="(: ( [32527,32528]"/>
  <match src="returns: returns [494,501]" dest="returns: returns [494,501]"/>
  <match src="visibility [32607,32615]" dest="visibility [32418,32426]"/>
  <match src="primitive_type [13679,13686]" dest="primitive_type [13613,13620]"/>
  <match src="identifier: result [42801,42807]" dest="identifier: result [42577,42583]"/>
  <match src="(: ( [47675,47676]" dest="(: ( [47451,47452]"/>
  <match src="identifier: lockTokens [50289,50299]" dest="identifier: lockTokens [50064,50074]"/>
  <match src="): ) [12798,12799]" dest="): ) [12732,12733]"/>
  <match src="member_expression [40206,40226]" dest="member_expression [39982,40002]"/>
  <match src="private: private [23970,23977]" dest="private: private [23814,23821]"/>
  <match src="uint256: uint256 [5295,5302]" dest="uint256: uint256 [5262,5269]"/>
  <match src="number_literal: 0 [6636,6637]" dest="number_literal: 0 [6603,6604]"/>
  <match src="identifier: _setupContractId [52224,52240]" dest="identifier: _setupContractId [52130,52146]"/>
  <match src="type_name [24698,24705]" dest="type_name [24542,24549]"/>
  <match src="(: ( [42215,42216]" dest="(: ( [41991,41992]"/>
  <match src="string [20852,20895]" dest="string [20729,20772]"/>
  <match src="(: ( [30270,30271]" dest="(: ( [30114,30115]"/>
  <match src="&quot;: &quot; [26935,26936]" dest="&quot;: &quot; [26779,26780]"/>
  <match src="identifier: b [5413,5414]" dest="identifier: b [5380,5381]"/>
  <match src="): ) [9430,9431]" dest="): ) [9397,9398]"/>
  <match src="(: ( [5053,5054]" dest="(: ( [5020,5021]"/>
  <match src=",: , [49351,49352]" dest=",: , [49127,49128]"/>
  <match src="return_type_definition [6181,6198]" dest="return_type_definition [6148,6165]"/>
  <match src="expression_statement [19181,19268]" dest="expression_statement [19058,19145]"/>
  <match src="parameter [4100,4104]" dest="parameter [4067,4071]"/>
  <match src="function: function [28860,28868]" dest="function: function [28704,28712]"/>
  <match src="address: address [16857,16864]" dest="address: address [16791,16798]"/>
  <match src="(: ( [30219,30220]" dest="(: ( [30063,30064]"/>
  <match src="type_name [53510,53515]" dest="type_name [53416,53421]"/>
  <match src="(: ( [30649,30650]" dest="(: ( [30493,30494]"/>
  <match src="expression_statement [19384,19481]" dest="expression_statement [19261,19358]"/>
  <match src="visibility [10228,10236]" dest="visibility [10195,10203]"/>
  <match src="type_alias [19070,19077]" dest="type_alias [18947,18954]"/>
  <match src="yul_hex_number: 0x20 [41938,41942]" dest="yul_hex_number: 0x20 [41714,41718]"/>
  <match src="function_body [7314,7400]" dest="function_body [7281,7367]"/>
  <match src="type_name [1121,1128]" dest="type_name [1121,1128]"/>
  <match src="if_statement [46901,47935]" dest="if_statement [46677,47711]"/>
  <match src="yul_decimal_number: 1 [47906,47907]" dest="yul_decimal_number: 1 [47682,47683]"/>
  <match src="identifier: getRoleMember [36986,36999]" dest="identifier: getRoleMember [36762,36775]"/>
  <match src="}: } [52357,52358]" dest="}: } [52263,52264]"/>
  <match src="identifier: transfer [19237,19245]" dest="identifier: transfer [19114,19122]"/>
  <match src="call_argument [40037,40059]" dest="call_argument [39813,39835]"/>
  <match src="function: function [4947,4955]" dest="function: function [4914,4922]"/>
  <match src="): ) [5365,5366]" dest="): ) [5332,5333]"/>
  <match src="member_expression [20308,20330]" dest="member_expression [20185,20207]"/>
  <match src="yul_evm_builtin [47148,47151]" dest="yul_evm_builtin [46924,46927]"/>
  <match src="bytes32: bytes32 [51833,51840]" dest="bytes32: bytes32 [51608,51615]"/>
  <match src="returns: returns [11193,11200]" dest="returns: returns [11127,11134]"/>
  <match src="binary_expression [46393,46409]" dest="binary_expression [46169,46185]"/>
  <match src="variable_declaration_tuple [17499,17538]" dest="variable_declaration_tuple [17433,17472]"/>
  <match src="comment: // File: contracts/common/Initializable.sol [51036,51079]" dest="comment: // File: contracts/common/Initializable.sol [50811,50854]"/>
  <match src=".: . [34567,34568]" dest=".: . [34343,34344]"/>
  <match src="member_expression [40403,40423]" dest="member_expression [40179,40199]"/>
  <match src="identifier: RoleData [34650,34658]" dest="identifier: RoleData [34426,34434]"/>
  <match src="]: ] [37088,37089]" dest="]: ] [36864,36865]"/>
  <match src="pragma: pragma [51083,51089]" dest="pragma: pragma [50858,50864]"/>
  <match src="identifier: require [42417,42424]" dest="identifier: require [42193,42200]"/>
  <match src="returns: returns [31836,31843]" dest="returns: returns [31680,31687]"/>
  <match src="identifier: UintSet [31332,31339]" dest="identifier: UintSet [31176,31183]"/>
  <match src="call_argument [44971,45019]" dest="call_argument [44747,44795]"/>
  <match src="state_mutability [37347,37351]" dest="state_mutability [37123,37127]"/>
  <match src="type_name [32638,32653]" dest="type_name [32449,32464]"/>
  <match src="primitive_type [43433,43438]" dest="primitive_type [43209,43214]"/>
  <match src="identifier: b [4183,4184]" dest="identifier: b [4150,4151]"/>
  <match src="identifier: result [44521,44527]" dest="identifier: result [44297,44303]"/>
  <match src="let: let [47330,47333]" dest="let: let [47106,47109]"/>
  <match src="uint8: uint8 [41373,41378]" dest="uint8: uint8 [41149,41154]"/>
  <match src="abstract: abstract [34388,34396]" dest="abstract: abstract [34164,34172]"/>
  <match src=",: , [49491,49492]" dest=",: , [49267,49268]"/>
  <match src="identifier: role [37084,37088]" dest="identifier: role [36860,36864]"/>
  <match src="&quot;: &quot; [44138,44139]" dest="&quot;: &quot; [43914,43915]"/>
  <match src="identifier: value [28905,28910]" dest="identifier: value [28749,28754]"/>
  <match src=".: . [45804,45805]" dest=".: . [45580,45581]"/>
  <match src="block_statement [40241,40313]" dest="block_statement [40017,40089]"/>
  <match src="solidity_version_comparison_operator [33058,33060]" dest="solidity_version_comparison_operator [18400,18402]"/>
  <match src="[: [ [37778,37779]" dest="[: [ [37554,37555]"/>
  <match src="return_statement [16935,17020]" dest="return_statement [16869,16954]"/>
  <match src="uint256: uint256 [6658,6665]" dest="uint256: uint256 [6625,6632]"/>
  <match src="parameter [7305,7312]" dest="parameter [7272,7279]"/>
  <match src="return_type_definition [41758,41782]" dest="return_type_definition [41534,41558]"/>
  <match src="&quot;: &quot; [12827,12828]" dest="&quot;: &quot; [12761,12762]"/>
  <match src="identifier: set [28112,28115]" dest="identifier: set [27956,27959]"/>
  <match src="visibility [52870,52878]" dest="visibility [52776,52784]"/>
  <match src="true: true [4676,4680]" dest="true: true [4643,4647]"/>
  <match src="state_variable_declaration [51139,51159]" dest="state_variable_declaration [50915,50935]"/>
  <match src="address: address [52059,52066]" dest="address: address [51834,51841]"/>
  <match src="}: } [46609,46610]" dest="}: } [46385,46386]"/>
  <match src="type_cast_expression [20817,20830]" dest="type_cast_expression [20694,20707]"/>
  <match src=",: , [45081,45082]" dest=",: , [44857,44858]"/>
  <match src="member_expression [40403,40430]" dest="member_expression [40179,40206]"/>
  <match src="): ) [5021,5022]" dest="): ) [4988,4989]"/>
  <match src="{: { [20767,20768]" dest="{: { [20644,20645]"/>
  <match src="type_name [35775,35782]" dest="type_name [35551,35558]"/>
  <match src="(: ( [53784,53785]" dest="(: ( [53690,53691]"/>
  <match src="bool: bool [26217,26221]" dest="bool: bool [26061,26065]"/>
  <match src="variable_declaration [52941,52955]" dest="variable_declaration [52847,52861]"/>
  <match src="bytes32: bytes32 [34639,34646]" dest="bytes32: bytes32 [34415,34422]"/>
  <match src="parameter [759,776]" dest="parameter [759,776]"/>
  <match src="member_expression [21853,21880]" dest="member_expression [21730,21757]"/>
  <match src="identifier: token [19127,19132]" dest="identifier: token [19004,19009]"/>
  <match src="identifier: spender [20832,20839]" dest="identifier: spender [20709,20716]"/>
  <match src="parameter [17679,17691]" dest="parameter [17613,17625]"/>
  <match src=",: , [3874,3875]" dest=",: , [3841,3842]"/>
  <match src=",: , [44682,44683]" dest=",: , [44458,44459]"/>
  <match src="uint256: uint256 [46336,46343]" dest="uint256: uint256 [46112,46119]"/>
  <match src="internal: internal [16892,16900]" dest="internal: internal [16826,16834]"/>
  <match src="comment: // require(isList(item), &quot;RLPReader: NUM_ITEMS_NOT_LIST&quot;); [46168,46226]" dest="comment: // require(isList(item), &quot;RLPReader: NUM_ITEMS_NOT_LIST&quot;); [45944,46002]"/>
  <match src="state_mutability [30206,30210]" dest="state_mutability [30050,30054]"/>
  <match src="primitive_type [32750,32755]" dest="primitive_type [32561,32566]"/>
  <match src="(: ( [39075,39076]" dest="(: ( [38851,38852]"/>
  <match src="comment: /**      * @dev Returns `true` if `account` has been granted `role`.      */ [35854,35932]" dest="comment: /**      * @dev Returns `true` if `account` has been granted `role`.      */ [35630,35708]"/>
  <match src="(: ( [39947,39948]" dest="(: ( [39723,39724]"/>
  <match src="visibility [24563,24570]" dest="visibility [24407,24414]"/>
  <match src="): ) [37807,37808]" dest="): ) [37583,37584]"/>
  <match src="type_name [10178,10185]" dest="type_name [10145,10152]"/>
  <match src="yul_evm_builtin [49409,49412]" dest="yul_evm_builtin [49185,49188]"/>
  <match src="primitive_type [35069,35076]" dest="primitive_type [34845,34852]"/>
  <match src="identifier: token [19404,19409]" dest="identifier: token [19281,19286]"/>
  <match src="identifier: errorMessage [14234,14246]" dest="identifier: errorMessage [14168,14180]"/>
  <match src="number_literal: 0 [48882,48883]" dest="number_literal: 0 [48658,48659]"/>
  <match src="identifier: STRING_SHORT_START [48220,48238]" dest="identifier: STRING_SHORT_START [47996,48014]"/>
  <match src="uint256: uint256 [28511,28518]" dest="uint256: uint256 [28355,28362]"/>
  <match src="identifier: account [37891,37898]" dest="identifier: account [37667,37674]"/>
  <match src="member_expression [20801,20844]" dest="member_expression [20678,20721]"/>
  <match src="parameter [43332,43351]" dest="parameter [43108,43127]"/>
  <match src="identifier: length [41812,41818]" dest="identifier: length [41588,41594]"/>
  <match src="identifier: byte0 [48495,48500]" dest="identifier: byte0 [48271,48276]"/>
  <match src="primitive_type [42573,42580]" dest="primitive_type [42349,42356]"/>
  <match src="-: - [48578,48579]" dest="-: - [48354,48355]"/>
  <match src="(: ( [37763,37764]" dest="(: ( [37539,37540]"/>
  <match src="bytes32: bytes32 [35069,35076]" dest="bytes32: bytes32 [34845,34852]"/>
  <match src="identifier: role [40357,40361]" dest="identifier: role [40133,40137]"/>
  <match src="{: { [47114,47115]" dest="{: { [46890,46891]"/>
  <match src="binary_expression [5359,5365]" dest="binary_expression [5326,5332]"/>
  <match src="primitive_type [42982,42986]" dest="primitive_type [42758,42762]"/>
  <match src="[: [ [36347,36348]" dest="[: [ [36123,36124]"/>
  <match src="&quot;: &quot; [44312,44313]" dest="&quot;: &quot; [44088,44089]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [30693,30855]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [30537,30699]"/>
  <match src="{: { [39998,39999]" dest="{: { [39774,39775]"/>
  <match src="/: / [6696,6697]" dest="/: / [6663,6664]"/>
  <match src="identifier: item [42394,42398]" dest="identifier: item [42170,42174]"/>
  <match src="identifier: set [30963,30966]" dest="identifier: set [30807,30810]"/>
  <match src="identifier: c [6694,6695]" dest="identifier: c [6661,6662]"/>
  <match src="call_expression [28576,28598]" dest="call_expression [28420,28442]"/>
  <match src="yul_path [49347,49350]" dest="yul_path [49123,49126]"/>
  <match src="parameter [38186,38201]" dest="parameter [37962,37977]"/>
  <match src=",: , [35967,35968]" dest=",: , [35743,35744]"/>
  <match src="identifier: spender [2811,2818]" dest="identifier: spender [2811,2818]"/>
  <match src="for: for [34458,34461]" dest="for: for [34234,34237]"/>
  <match src="primitive_type [36007,36011]" dest="primitive_type [35783,35787]"/>
  <match src="assignment_expression [42694,42730]" dest="assignment_expression [42470,42506]"/>
  <match src="): ) [29793,29794]" dest="): ) [29637,29638]"/>
  <match src="{: { [43069,43070]" dest="{: { [42845,42846]"/>
  <match src="type_name [5335,5342]" dest="type_name [5302,5309]"/>
  <match src="identifier: data [16971,16975]" dest="identifier: data [16905,16909]"/>
  <match src="(: ( [27675,27676]" dest="(: ( [27519,27520]"/>
  <match src="type_name [51139,51143]" dest="type_name [50915,50919]"/>
  <match src="bytes: bytes [17332,17337]" dest="bytes: bytes [17266,17271]"/>
  <match src="): ) [40500,40501]" dest="): ) [40276,40277]"/>
  <match src="): ) [20535,20536]" dest="): ) [20412,20413]"/>
  <match src="type_name [44327,44334]" dest="type_name [44103,44110]"/>
  <match src="}: } [20672,20673]" dest="}: } [20549,20550]"/>
  <match src="string [22100,22144]" dest="string [21977,22021]"/>
  <match src="function: function [1102,1110]" dest="function: function [1102,1110]"/>
  <match src="identifier: memPtr [44921,44927]" dest="identifier: memPtr [44697,44703]"/>
  <match src="unary_expression [25940,25959]" dest="unary_expression [25784,25803]"/>
  <match src="string_literal [51700,51707]" dest="string_literal [51475,51482]"/>
  <match src="identifier: itemLen [46781,46788]" dest="identifier: itemLen [46557,46564]"/>
  <match src="identifier: data [15172,15176]" dest="identifier: data [15106,15110]"/>
  <match src="(: ( [45758,45759]" dest="(: ( [45534,45535]"/>
  <match src="!=: != [26261,26263]" dest="!=: != [26105,26107]"/>
  <match src="variable_declaration [42263,42276]" dest="variable_declaration [42039,42052]"/>
  <match src="mload: mload [45238,45243]" dest="mload: mload [45014,45019]"/>
  <match src="primitive_type [19323,19330]" dest="primitive_type [19200,19207]"/>
  <match src="uint256: uint256 [20449,20456]" dest="uint256: uint256 [20326,20333]"/>
  <match src="expression_statement [38348,38375]" dest="expression_statement [38124,38151]"/>
  <match src="yul_decimal_number: 32 [18248,18250]" dest="yul_decimal_number: 32 [18182,18184]"/>
  <match src="override_specifier [53559,53567]" dest="override_specifier [53465,53473]"/>
  <match src="): ) [39089,39090]" dest="): ) [38865,38866]"/>
  <match src="]: ] [54301,54302]" dest="]: ] [54154,54155]"/>
  <match src="identifier: ERC20Predicate [51395,51409]" dest="identifier: ERC20Predicate [51170,51184]"/>
  <match src="solidity_version_comparison_operator [32030,32032]" dest="solidity_version_comparison_operator [32836,32838]"/>
  <match src="function_definition [41679,42009]" dest="function_definition [41455,41785]"/>
  <match src="uint256: uint256 [3775,3782]" dest="uint256: uint256 [3742,3749]"/>
  <match src="number_literal: 0 [5061,5062]" dest="number_literal: 0 [5028,5029]"/>
  <match src="(: ( [46714,46715]" dest="(: ( [46490,46491]"/>
  <match src="identifier: byte0 [47152,47157]" dest="identifier: byte0 [46928,46933]"/>
  <match src="type_name [43433,43438]" dest="type_name [43209,43214]"/>
  <match src="-: - [25209,25210]" dest="-: - [25053,25054]"/>
  <match src="): ) [47810,47811]" dest="): ) [47586,47587]"/>
  <match src="identifier: toUintStrict [44806,44818]" dest="identifier: toUintStrict [44582,44594]"/>
  <match src="identifier: item [43751,43755]" dest="identifier: item [43527,43531]"/>
  <match src="identifier: getRoleMemberCount [36260,36278]" dest="identifier: getRoleMemberCount [36036,36054]"/>
  <match src="state_mutability [35993,35997]" dest="state_mutability [35769,35773]"/>
  <match src="unary_expression [51209,51216]" dest="unary_expression [50985,50992]"/>
  <match src="{: { [37370,37371]" dest="{: { [37146,37147]"/>
  <match src="storage: storage [28884,28891]" dest="storage: storage [28728,28735]"/>
  <match src="if: if [40202,40204]" dest="if: if [39978,39980]"/>
  <match src=",: , [38282,38283]" dest=",: , [38058,38059]"/>
  <match src="parameter [26376,26391]" dest="parameter [26220,26235]"/>
  <match src="(: ( [30254,30255]" dest="(: ( [30098,30099]"/>
  <match src="(: ( [5283,5284]" dest="(: ( [5250,5251]"/>
  <match src="call_expression [27892,27920]" dest="call_expression [27736,27764]"/>
  <match src="{: { [32764,32765]" dest="{: { [32575,32576]"/>
  <match src="block_statement [46411,46610]" dest="block_statement [46187,46386]"/>
  <match src="memory: memory [45328,45334]" dest="memory: memory [45104,45110]"/>
  <match src="binary_expression [48553,48586]" dest="binary_expression [48329,48362]"/>
  <match src="yul_identifier [47217,47223]" dest="yul_identifier [46993,46999]"/>
  <match src="identifier: RoleAdminChanged [40014,40030]" dest="identifier: RoleAdminChanged [39790,39806]"/>
  <match src="variable_declaration_statement [45161,45194]" dest="variable_declaration_statement [44937,44970]"/>
  <match src="identifier: value [14797,14802]" dest="identifier: value [14731,14736]"/>
  <match src="(: ( [17560,17561]" dest="(: ( [17494,17495]"/>
  <match src="function_definition [3708,3886]" dest="function_definition [3675,3853]"/>
  <match src=".: . [45182,45183]" dest=".: . [44958,44959]"/>
  <match src="primitive_type [16332,16337]" dest="primitive_type [16266,16271]"/>
  <match src="new: new [43455,43458]" dest="new: new [43231,43234]"/>
  <match src="yul_evm_builtin [47453,47456]" dest="yul_evm_builtin [47229,47232]"/>
  <match src="): ) [10226,10227]" dest="): ) [10193,10194]"/>
  <match src="bytes32: bytes32 [26879,26886]" dest="bytes32: bytes32 [26723,26730]"/>
  <match src="variable_declaration_statement [15489,15565]" dest="variable_declaration_statement [15423,15499]"/>
  <match src="identifier: LIST_SHORT_START [48426,48442]" dest="identifier: LIST_SHORT_START [48202,48218]"/>
  <match src="memory: memory [15919,15925]" dest="memory: memory [15853,15859]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [12667,12735]" dest="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [12601,12669]"/>
  <match src="(: ( [28548,28549]" dest="(: ( [28392,28393]"/>
  <match src="}: } [54350,54351]" dest="}: } [54350,54351]"/>
  <match src="call_expression [42535,42562]" dest="call_expression [42311,42338]"/>
  <match src="false: false [3842,3847]" dest="false: false [3809,3814]"/>
  <match src="}: } [37417,37418]" dest="}: } [37193,37194]"/>
  <match src="): ) [44032,44033]" dest="): ) [43808,43809]"/>
  <match src="visibility [27626,27634]" dest="visibility [27470,27478]"/>
  <match src="return_type_definition [30211,30228]" dest="return_type_definition [30055,30072]"/>
  <match src="call_expression [7325,7369]" dest="call_expression [7292,7336]"/>
  <match src="identifier: set [24543,24546]" dest="identifier: set [24387,24390]"/>
  <match src=",: , [35124,35125]" dest=",: , [34900,34901]"/>
  <match src="(: ( [14216,14217]" dest="(: ( [14150,14151]"/>
  <match src="pure: pure [4086,4090]" dest="pure: pure [4053,4057]"/>
  <match src="return_type_definition [37352,37369]" dest="return_type_definition [37128,37145]"/>
  <match src="yul_function_call [41928,41943]" dest="yul_function_call [41704,41719]"/>
  <match src="solidity_pragma_token [32014,32037]" dest="solidity_pragma_token [32820,32843]"/>
  <match src=",: , [15869,15870]" dest=",: , [15803,15804]"/>
  <match src="virtual: virtual [37737,37744]" dest="virtual: virtual [37513,37520]"/>
  <match src="call_argument [51218,51234]" dest="call_argument [50994,51010]"/>
  <match src="identifier: _setupContractId [40700,40716]" dest="identifier: _setupContractId [40475,40491]"/>
  <match src="parameter [3735,3744]" dest="parameter [3702,3711]"/>
  <match src="(: ( [48211,48212]" dest="(: ( [47987,47988]"/>
  <match src="identifier: endPtr [46344,46350]" dest="identifier: endPtr [46120,46126]"/>
  <match src="identifier: at [37098,37100]" dest="identifier: at [36874,36876]"/>
  <match src="type_name [38911,38918]" dest="type_name [38687,38694]"/>
  <match src="): ) [40840,40841]" dest="): ) [40615,40616]"/>
  <match src="parameter [37699,37711]" dest="parameter [37475,37487]"/>
  <match src="number_literal: 21 [43868,43870]" dest="number_literal: 21 [43644,43646]"/>
  <match src="type_name [40152,40159]" dest="type_name [39928,39935]"/>
  <match src="uint256: uint256 [25170,25177]" dest="uint256: uint256 [25014,25021]"/>
  <match src="): ) [4755,4756]" dest="): ) [4722,4723]"/>
  <match src="!: ! [51209,51210]" dest="!: ! [50985,50986]"/>
  <match src="parameter [15143,15157]" dest="parameter [15077,15091]"/>
  <match src="address: address [11162,11169]" dest="address: address [11096,11103]"/>
  <match src="internal: internal [39981,39989]" dest="internal: internal [39757,39765]"/>
  <match src="primitive_type [51981,51988]" dest="primitive_type [51756,51763]"/>
  <match src="if: if [48871,48873]" dest="if: if [48647,48649]"/>
  <match src="uint8: uint8 [41419,41424]" dest="uint8: uint8 [41195,41200]"/>
  <match src="primitive_type [37000,37007]" dest="primitive_type [36776,36783]"/>
  <match src="call_argument [31207,31221]" dest="call_argument [31051,31065]"/>
  <match src="private: private [34660,34667]" dest="private: private [34436,34443]"/>
  <match src="(: ( [5007,5008]" dest="(: ( [4974,4975]"/>
  <match src="return_type_definition [5719,5736]" dest="return_type_definition [5686,5703]"/>
  <match src="function: function [23924,23932]" dest="function: function [23768,23776]"/>
  <match src="memory: memory [42946,42952]" dest="memory: memory [42722,42728]"/>
  <match src="type_name [28487,28497]" dest="type_name [28331,28341]"/>
  <match src="identifier: depositor [50318,50327]" dest="identifier: depositor [50093,50102]"/>
  <match src="identifier: from [2551,2555]" dest="identifier: from [2551,2555]"/>
  <match src=",: , [40810,40811]" dest=",: , [40585,40586]"/>
  <match src="return_type_definition [32741,32763]" dest="return_type_definition [32552,32574]"/>
  <match src="binary_expression [48354,48377]" dest="binary_expression [48130,48153]"/>
  <match src="primitive_type [14729,14734]" dest="primitive_type [14663,14668]"/>
  <match src="string_literal [20203,20259]" dest="string_literal [20080,20136]"/>
  <match src="assembly: assembly [43060,43068]" dest="assembly: assembly [42836,42844]"/>
  <match src="parameter [5329,5333]" dest="parameter [5296,5300]"/>
  <match src="primitive_type [44863,44870]" dest="primitive_type [44639,44646]"/>
  <match src="identifier: require [38229,38236]" dest="identifier: require [38005,38012]"/>
  <match src="identifier: target [17259,17265]" dest="identifier: target [17193,17199]"/>
  <match src="identifier: dest [49124,49128]" dest="identifier: dest [48900,48904]"/>
  <match src="string_literal [41824,41857]" dest="string_literal [41600,41633]"/>
  <match src=":=: := [45235,45237]" dest=":=: := [45011,45013]"/>
  <match src="returns: returns [10242,10249]" dest="returns: returns [10209,10216]"/>
  <match src="primitive_type [45161,45168]" dest="primitive_type [44937,44944]"/>
  <match src="yul_path [49493,49500]" dest="yul_path [49269,49276]"/>
  <match src="): ) [5304,5305]" dest="): ) [5271,5272]"/>
  <match src="comment: /*      * @param src Pointer to source      * @param dest Pointer to destination      * @param len Amount of memory to copy from the source      */ [48602,48753]" dest="comment: /*      * @param src Pointer to source      * @param dest Pointer to destination      * @param len Amount of memory to copy from the source      */ [48378,48529]"/>
  <match src=",: , [46527,46528]" dest=",: , [46303,46304]"/>
  <match src="): ) [42405,42406]" dest="): ) [42181,42182]"/>
  <match src="identifier: _owner [52184,52190]" dest="identifier: _owner [52090,52096]"/>
  <match src="call_expression [5776,5822]" dest="call_expression [5743,5789]"/>
  <match src="identifier: b [4074,4075]" dest="identifier: b [4041,4042]"/>
  <match src="identifier: _values [26994,27001]" dest="identifier: _values [26838,26845]"/>
  <match src="type_name [30898,30905]" dest="type_name [30742,30749]"/>
  <match src=",: , [44969,44970]" dest=",: , [44745,44746]"/>
  <match src="member_expression [40082,40104]" dest="member_expression [39858,39880]"/>
  <match src="member_expression [46284,46295]" dest="member_expression [46060,46071]"/>
  <match src="parameter [12545,12559]" dest="parameter [12479,12493]"/>
  <match src="{: { [46762,46763]" dest="{: { [46538,46539]"/>
  <match src="return_type_definition [15230,15252]" dest="return_type_definition [15164,15186]"/>
  <match src="uint256: uint256 [4375,4382]" dest="uint256: uint256 [4342,4349]"/>
  <match src="identifier: inited [51144,51150]" dest="identifier: inited [50920,50926]"/>
  <match src="public: public [51661,51667]" dest="public: public [51436,51442]"/>
  <match src="primitive_type [43928,43935]" dest="primitive_type [43704,43711]"/>
  <match src="primitive_type [2535,2542]" dest="primitive_type [2535,2542]"/>
  <match src="visibility [7902,7910]" dest="visibility [7869,7877]"/>
  <match src="type_name [28077,28084]" dest="type_name [27921,27928]"/>
  <match src="): ) [47729,47730]" dest="): ) [47505,47506]"/>
  <match src="}: } [42008,42009]" dest="}: } [41784,41785]"/>
  <match src="pure: pure [7291,7295]" dest="pure: pure [7258,7262]"/>
  <match src="): ) [35844,35845]" dest="): ) [35620,35621]"/>
  <match src="==: == [54109,54111]" dest="==: == [54015,54017]"/>
  <match src="uint256: uint256 [7925,7932]" dest="uint256: uint256 [7892,7899]"/>
  <match src="type_name [42504,42511]" dest="type_name [42280,42287]"/>
  <match src="parameter [31102,31121]" dest="parameter [30946,30965]"/>
  <match src="type_name [19323,19330]" dest="type_name [19200,19207]"/>
  <match src="type_name [26825,26828]" dest="type_name [26669,26672]"/>
  <match src="uint256: uint256 [5284,5291]" dest="uint256: uint256 [5251,5258]"/>
  <match src="): ) [322,323]" dest="): ) [322,323]"/>
  <match src="identifier: role [39771,39775]" dest="identifier: role [39547,39551]"/>
  <match src="): ) [5062,5063]" dest="): ) [5029,5030]"/>
  <match src="call_argument [24024,24029]" dest="call_argument [23868,23873]"/>
  <match src="yul_function_call [49467,49502]" dest="yul_function_call [49243,49278]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [28138,28469]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [27982,28313]"/>
  <match src="identifier: getRoleAdmin [37313,37325]" dest="identifier: getRoleAdmin [37089,37101]"/>
  <match src="identifier: Set [26825,26828]" dest="identifier: Set [26669,26672]"/>
  <match src="primitive_type [40349,40356]" dest="primitive_type [40125,40132]"/>
  <match src="expression_statement [6210,6260]" dest="expression_statement [6177,6227]"/>
  <match src="): ) [27872,27873]" dest="): ) [27716,27717]"/>
  <match src="uint256: uint256 [2303,2310]" dest="uint256: uint256 [2303,2310]"/>
  <match src="primitive_type [44184,44191]" dest="primitive_type [43960,43967]"/>
  <match src="yul_function_call [49051,49061]" dest="yul_function_call [48827,48837]"/>
  <match src="uint256: uint256 [28979,28986]" dest="uint256: uint256 [28823,28830]"/>
  <match src="identifier: data [17561,17565]" dest="identifier: data [17495,17499]"/>
  <match src="}: } [53152,53153]" dest="}: } [53058,53059]"/>
  <match src="return: return [48240,48246]" dest="return: return [48016,48022]"/>
  <match src="memory: memory [21452,21458]" dest="memory: memory [21329,21335]"/>
  <match src="string: string [10200,10206]" dest="string: string [10167,10173]"/>
  <match src="function_body [4115,4193]" dest="function_body [4082,4160]"/>
  <match src="call_expression [20507,20557]" dest="call_expression [20384,20434]"/>
  <match src="(: ( [15271,15272]" dest="(: ( [15205,15206]"/>
  <match src="(: ( [48561,48562]" dest="(: ( [48337,48338]"/>
  <match src="): ) [37368,37369]" dest="): ) [37144,37145]"/>
  <match src="identifier: c [4727,4728]" dest="identifier: c [4694,4695]"/>
  <match src="unary_expression [24008,24030]" dest="unary_expression [23852,23874]"/>
  <match src="call_expression [31403,31422]" dest="call_expression [31247,31266]"/>
  <match src="&quot;: &quot; [15978,15979]" dest="&quot;: &quot; [15912,15913]"/>
  <match src="): ) [30292,30293]" dest="): ) [30136,30137]"/>
  <match src=",: , [42221,42222]" dest=",: , [41997,41998]"/>
  <match src="using: using [19064,19069]" dest="using: using [18941,18946]"/>
  <match src="if: if [21933,21935]" dest="if: if [21810,21812]"/>
  <match src="memory: memory [45651,45657]" dest="memory: memory [45427,45433]"/>
  <match src="call_argument [20832,20839]" dest="call_argument [20709,20716]"/>
  <match src="): ) [29516,29517]" dest="): ) [29360,29361]"/>
  <match src="call_argument [14804,14847]" dest="call_argument [14738,14781]"/>
  <match src="(: ( [4054,4055]" dest="(: ( [4021,4022]"/>
  <match src="-: - [6279,6280]" dest="-: - [6246,6247]"/>
  <match src="binary_expression [42619,42628]" dest="binary_expression [42395,42404]"/>
  <match src="(: ( [51970,51971]" dest="(: ( [51745,51746]"/>
  <match src=",: , [30973,30974]" dest=",: , [30817,30818]"/>
  <match src="return_statement [5395,5416]" dest="return_statement [5362,5383]"/>
  <match src="identifier: account [38194,38201]" dest="identifier: account [37970,37977]"/>
  <match src="binary_expression [5088,5093]" dest="binary_expression [5055,5060]"/>
  <match src="memory: memory [8539,8545]" dest="memory: memory [8506,8512]"/>
  <match src="{: { [49307,49308]" dest="{: { [49083,49084]"/>
  <match src="=: = [20799,20800]" dest="=: = [20676,20677]"/>
  <match src="&quot;: &quot; [14846,14847]" dest="&quot;: &quot; [14780,14781]"/>
  <match src="else: else [46955,46959]" dest="else: else [46731,46735]"/>
  <match src="primitive_type [4695,4702]" dest="primitive_type [4662,4669]"/>
  <match src="string_literal [39001,39050]" dest="string_literal [38777,38826]"/>
  <match src="}: } [41953,41954]" dest="}: } [41729,41730]"/>
  <match src="identifier: msg [32673,32676]" dest="identifier: msg [32484,32487]"/>
  <match src="yul_function_call [47784,47810]" dest="yul_function_call [47560,47586]"/>
  <match src="address: address [50372,50379]" dest="address: address [50147,50154]"/>
  <match src="uint256: uint256 [45389,45396]" dest="uint256: uint256 [45165,45172]"/>
  <match src="mstore: mstore [49038,49044]" dest="mstore: mstore [48814,48820]"/>
  <match src=",: , [8519,8520]" dest=",: , [8486,8487]"/>
  <match src="call_argument [40933,40945]" dest="call_argument [40708,40720]"/>
  <match src="identifier: depositor [53112,53121]" dest="identifier: depositor [53018,53027]"/>
  <match src="type_name [11410,11417]" dest="type_name [11344,11351]"/>
  <match src="=: = [46434,46435]" dest="=: = [46210,46211]"/>
  <match src="&quot;: &quot; [16422,16423]" dest="&quot;: &quot; [16356,16357]"/>
  <match src="identifier: data [13708,13712]" dest="identifier: data [13642,13646]"/>
  <match src="primitive_type [3775,3782]" dest="primitive_type [3742,3749]"/>
  <match src="identifier: set [27369,27372]" dest="identifier: set [27213,27216]"/>
  <match src="}: } [18375,18376]" dest="}: } [18309,18310]"/>
  <match src="(: ( [46963,46964]" dest="(: ( [46739,46740]"/>
  <match src="return: return [28947,28953]" dest="return: return [28791,28797]"/>
  <match src="user_defined_type [29450,29460]" dest="user_defined_type [29294,29304]"/>
  <match src="binary_expression [48875,48883]" dest="binary_expression [48651,48659]"/>
  <match src="number_literal: 0 [10283,10284]" dest="number_literal: 0 [10250,10251]"/>
  <match src="identifier: length [24242,24248]" dest="identifier: length [24086,24092]"/>
  <match src="identifier: b [5359,5360]" dest="identifier: b [5326,5327]"/>
  <match src="identifier: _inner [30967,30973]" dest="identifier: _inner [30811,30817]"/>
  <match src="internal: internal [11179,11187]" dest="internal: internal [11113,11121]"/>
  <match src="primitive_type [3724,3731]" dest="primitive_type [3691,3698]"/>
  <match src="): ) [27693,27694]" dest="): ) [27537,27538]"/>
  <match src="private: private [40183,40190]" dest="private: private [39959,39966]"/>
  <match src="): ) [7900,7901]" dest="): ) [7867,7868]"/>
  <match src="(: ( [42713,42714]" dest="(: ( [42489,42490]"/>
  <match src="+: + [44478,44479]" dest="+: + [44254,44255]"/>
  <match src="function_definition [20387,20673]" dest="function_definition [20264,20550]"/>
  <match src="!=: != [24766,24768]" dest="!=: != [24610,24612]"/>
  <match src="comment: // one byte prefix [45031,45049]" dest="comment: // one byte prefix [44807,44825]"/>
  <match src="): ) [46989,46990]" dest="): ) [46765,46766]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [30384,30548]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [30228,30392]"/>
  <match src="identifier: a [4179,4180]" dest="identifier: a [4146,4147]"/>
  <match src="internal: internal [14145,14153]" dest="internal: internal [14079,14087]"/>
  <match src="identifier: role [40927,40931]" dest="identifier: role [40702,40706]"/>
  <match src=",: , [50361,50362]" dest=",: , [50136,50137]"/>
  <match src="(: ( [11161,11162]" dest="(: ( [11095,11096]"/>
  <match src="}: } [29011,29012]" dest="}: } [28855,28856]"/>
  <match src="(: ( [35068,35069]" dest="(: ( [34844,34845]"/>
  <match src="uint256: uint256 [14696,14703]" dest="uint256: uint256 [14630,14637]"/>
  <match src="variable_declaration [45389,45407]" dest="variable_declaration [45165,45183]"/>
  <match src="): ) [42220,42221]" dest="): ) [41996,41997]"/>
  <match src=".: . [43589,43590]" dest=".: . [43365,43366]"/>
  <match src="function_definition [37304,37418]" dest="function_definition [37080,37194]"/>
  <match src="(: ( [28579,28580]" dest="(: ( [28423,28424]"/>
  <match src="variable_declaration [46336,46350]" dest="variable_declaration [46112,46126]"/>
  <match src="identifier: index [31896,31901]" dest="identifier: index [31740,31745]"/>
  <match src="call_expression [53807,53834]" dest="call_expression [53713,53740]"/>
  <match src="): ) [19479,19480]" dest="): ) [19356,19357]"/>
  <match src="identifier: STRING_LONG_START [46972,46989]" dest="identifier: STRING_LONG_START [46748,46765]"/>
  <match src="(: ( [21431,21432]" dest="(: ( [21308,21309]"/>
  <match src="member_expression [44262,44270]" dest="member_expression [44038,44046]"/>
  <match src="): ) [46931,46932]" dest="): ) [46707,46708]"/>
  <match src="{: { [28653,28654]" dest="{: { [28497,28498]"/>
  <match src=".: . [17547,17548]" dest=".: . [17481,17482]"/>
  <match src="type_name [2820,2827]" dest="type_name [2820,2827]"/>
  <match src="true: true [4173,4177]" dest="true: true [4140,4144]"/>
  <match src="external: external [2319,2327]" dest="external: external [2319,2327]"/>
  <match src="block_statement [17805,17849]" dest="block_statement [17739,17783]"/>
  <match src="member_expression [53652,53674]" dest="member_expression [53558,53580]"/>
  <match src="type_name [34554,34578]" dest="type_name [34330,34354]"/>
  <match src="type_name [21432,21438]" dest="type_name [21309,21315]"/>
  <match src=".: . [27905,27906]" dest=".: . [27749,27750]"/>
  <match src="comment: // the target address contains contract code and also asserts for success in the low-level call. [21719,21815]" dest="comment: // the target address contains contract code and also asserts for success in the low-level call. [21596,21692]"/>
  <match src="||: || [20139,20141]" dest="||: || [20016,20018]"/>
  <match src="}: } [26057,26058]" dest="}: } [25901,25902]"/>
  <match src="(: ( [19403,19404]" dest="(: ( [19280,19281]"/>
  <match src="): ) [5383,5384]" dest="): ) [5350,5351]"/>
  <match src="solidity_pragma_token [10433,10456]" dest="solidity_pragma_token [10367,10390]"/>
  <match src=".: . [21867,21868]" dest=".: . [21744,21745]"/>
  <match src="comment: // being explicit [48457,48474]" dest="comment: // being explicit [48233,48250]"/>
  <match src="{: { [44506,44507]" dest="{: { [44282,44283]"/>
  <match src="call_argument [20642,20649]" dest="call_argument [20519,20526]"/>
  <match src="else: else [24287,24291]" dest="else: else [24131,24135]"/>
  <match src="identifier: a [4660,4661]" dest="identifier: a [4627,4628]"/>
  <match src="(: ( [23986,23987]" dest="(: ( [23830,23831]"/>
  <match src="parameter [19134,19144]" dest="parameter [19011,19021]"/>
  <match src="identifier: account [39082,39089]" dest="identifier: account [38858,38865]"/>
  <match src="abstract: abstract [32552,32560]" dest="abstract: abstract [32363,32371]"/>
  <match src="parameter [30621,30625]" dest="parameter [30465,30469]"/>
  <match src="internal: internal [6584,6592]" dest="internal: internal [6551,6559]"/>
  <match src="call_expression [19411,19479]" dest="call_expression [19288,19356]"/>
  <match src="(: ( [52175,52176]" dest="(: ( [52081,52082]"/>
  <match src="type_name [26180,26187]" dest="type_name [26024,26031]"/>
  <match src="return_statement [9482,9495]" dest="return_statement [9449,9462]"/>
  <match src="number_literal: 1 [49286,49287]" dest="number_literal: 1 [49062,49063]"/>
  <match src="=: = [41495,41496]" dest="=: = [41271,41272]"/>
  <match src="user_defined_type [20418,20424]" dest="user_defined_type [20295,20301]"/>
  <match src="identifier: role [37885,37889]" dest="identifier: role [37661,37665]"/>
  <match src="type_name [45136,45143]" dest="type_name [44912,44919]"/>
  <match src="struct: struct [27045,27051]" dest="struct: struct [26889,26895]"/>
  <match src="uint256: uint256 [4974,4981]" dest="uint256: uint256 [4941,4948]"/>
  <match src="): ) [41857,41858]" dest="): ) [41633,41634]"/>
  <match src="primitive_type [19134,19141]" dest="primitive_type [19011,19018]"/>
  <match src="(: ( [27901,27902]" dest="(: ( [27745,27746]"/>
  <match src="}: } [39792,39793]" dest="}: } [39568,39569]"/>
  <match src="expression_statement [40993,40995]" dest="expression_statement [40768,40770]"/>
  <match src="identifier: size [11548,11552]" dest="identifier: size [11482,11486]"/>
  <match src="expression_statement [9443,9472]" dest="expression_statement [9410,9439]"/>
  <match src="parameter [39962,39979]" dest="parameter [39738,39755]"/>
  <match src="identifier: item [41981,41985]" dest="identifier: item [41757,41761]"/>
  <match src="identifier: sub [20841,20844]" dest="identifier: sub [20718,20721]"/>
  <match src="function_body [13746,13830]" dest="function_body [13680,13764]"/>
  <match src="add: add [47453,47456]" dest="add: add [47229,47232]"/>
  <match src="state_mutability [31831,31835]" dest="state_mutability [31675,31679]"/>
  <match src="type_name [5284,5291]" dest="type_name [5251,5258]"/>
  <match src="identifier: itemLen [47869,47876]" dest="identifier: itemLen [47645,47652]"/>
  <match src="augmented_assignment_expression [49124,49141]" dest="augmented_assignment_expression [48900,48917]"/>
  <match src="yul_function_call [44684,44696]" dest="yul_function_call [44460,44472]"/>
  <match src="&quot;: &quot; [20203,20204]" dest="&quot;: &quot; [20080,20081]"/>
  <match src="block_statement [24292,24331]" dest="block_statement [24136,24175]"/>
  <match src="yul_identifier [44625,44628]" dest="yul_identifier [44401,44404]"/>
  <match src=",: , [5790,5791]" dest=",: , [5757,5758]"/>
  <match src="variable_declaration_statement [17499,17567]" dest="variable_declaration_statement [17433,17501]"/>
  <match src="(: ( [3869,3870]" dest="(: ( [3836,3837]"/>
  <match src="identifier: itemLen [47954,47961]" dest="identifier: itemLen [47730,47737]"/>
  <match src="(: ( [48167,48168]" dest="(: ( [47943,47944]"/>
  <match src="member_expression [12764,12778]" dest="member_expression [12698,12712]"/>
  <match src="identifier: count [46591,46596]" dest="identifier: count [46367,46372]"/>
  <match src="primitive_type [37713,37720]" dest="primitive_type [37489,37496]"/>
  <match src="call_argument [38237,38282]" dest="call_argument [38013,38058]"/>
  <match src="primitive_type [6573,6580]" dest="primitive_type [6540,6547]"/>
  <match src="uint256: uint256 [9423,9430]" dest="uint256: uint256 [9390,9397]"/>
  <match src="(: ( [31194,31195]" dest="(: ( [31038,31039]"/>
  <match src="primitive_type [14163,14168]" dest="primitive_type [14097,14102]"/>
  <match src="yul_decimal_number: 32 [47797,47799]" dest="yul_decimal_number: 32 [47573,47575]"/>
  <match src="): ) [38281,38282]" dest="): ) [38057,38058]"/>
  <match src="variable_declaration [43021,43035]" dest="variable_declaration [42797,42811]"/>
  <match src="{: { [41788,41789]" dest="{: { [41564,41565]"/>
  <match src="identifier: _inner [27078,27084]" dest="identifier: _inner [26922,26928]"/>
  <match src="identifier: result [44432,44438]" dest="identifier: result [44208,44214]"/>
  <match src="primitive_type [2268,2275]" dest="primitive_type [2268,2275]"/>
  <match src="event_paramater [2535,2555]" dest="event_paramater [2535,2555]"/>
  <match src="variable_declaration_statement [44449,44487]" dest="variable_declaration_statement [44225,44263]"/>
  <match src="): ) [40438,40439]" dest="): ) [40214,40215]"/>
  <match src="call_argument [15304,15344]" dest="call_argument [15238,15278]"/>
  <match src="uint256: uint256 [46238,46245]" dest="uint256: uint256 [46014,46021]"/>
  <match src="&gt;=: &gt;= [12611,12613]" dest="&gt;=: &gt;= [12545,12547]"/>
  <match src="block_statement [18321,18376]" dest="block_statement [18255,18310]"/>
  <match src=",: , [47379,47380]" dest=",: , [47155,47156]"/>
  <match src="(: ( [6144,6145]" dest="(: ( [6111,6112]"/>
  <match src="): ) [52190,52191]" dest="): ) [52096,52097]"/>
  <match src="storage: storage [24535,24542]" dest="storage: storage [24379,24386]"/>
  <match src="call_argument [27914,27919]" dest="call_argument [27758,27763]"/>
  <match src="identifier: memPtr [42555,42561]" dest="identifier: memPtr [42331,42337]"/>
  <match src="visibility [30913,30921]" dest="visibility [30757,30765]"/>
  <match src="&quot;: &quot; [16977,16978]" dest="&quot;: &quot; [16911,16912]"/>
  <match src="if: if [5034,5036]" dest="if: if [5001,5003]"/>
  <match src="): ) [510,511]" dest="): ) [510,511]"/>
  <match src="): ) [19362,19363]" dest="): ) [19239,19240]"/>
</matches>
<actions>
  <move-tree tree="comment: // SPDX-License-Identifier: MIT [2896,2927]" parent="source_file [0,54351]" at="14"/>
  <move-tree tree="pragma_directive [33035,33066]" parent="source_file [0,54351]" at="15"/>
  <move-tree tree="pragma_directive [18498,18529]" parent="source_file [0,54351]" at="21"/>
  <move-tree tree="pragma_directive [22266,22297]" parent="source_file [0,54351]" at="26"/>
  <move-tree tree="pragma_directive [32007,32038]" parent="source_file [0,54351]" at="31"/>
  <update-node tree="comment: // SPDX-License-Identifier: MIT [2896,2927]" label="// File: contracts/lib/SafeERC20.sol"/>
  <update-node tree="solidity_version:  0.6.6 [40594,40600]" label=" 0.6.12"/>
  <update-node tree="solidity_version:  0.6.6 [41290,41296]" label=" 0.6.12"/>
  <update-node tree="solidity_version:  0.6.6 [49605,49611]" label=" 0.6.12"/>
  <update-node tree="solidity_version:  0.6.6 [51098,51104]" label=" 0.6.12"/>
  <update-node tree="solidity_version:  0.6.6 [51363,51369]" label=" 0.6.12"/>
  <insert-tree tree="event_definition [51900,52023]" parent="contract_body [51239,54351]" at="9"/>
  <insert-node tree="variable_declaration_statement [54125,54165]" parent="function_body [53507,54348]" at="8"/>
  <insert-tree tree="emit_statement [54293,54341]" parent="function_body [53507,54348]" at="10"/>
  <insert-tree tree="variable_declaration [54125,54139]" parent="variable_declaration_statement [54125,54165]" at="0"/>
  <insert-node tree="=: = [54140,54141]" parent="variable_declaration_statement [54125,54165]" at="1"/>
  <move-tree tree="call_expression [54289,54311]" parent="variable_declaration_statement [54125,54165]" at="2"/>
  <insert-node tree="identifier: amount [54247,54253]" parent="call_argument [54247,54253]" at="0"/>
  <delete-node tree="comment: // SPDX-License-Identifier: MIT [10391,10422]"/>
  <delete-node tree="comment: // File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol [18401,18459]"/>
  <delete-node tree="comment: // SPDX-License-Identifier: MIT [18463,18494]"/>
  <delete-node tree="comment: // SPDX-License-Identifier: MIT [22231,22262]"/>
  <delete-node tree="comment: // SPDX-License-Identifier: MIT [31972,32003]"/>
  <delete-node tree="comment: // SPDX-License-Identifier: MIT [33000,33031]"/>
</actions>
