{
  "matches": [
    {
      "src": ",: , [6793,6794]",
      "dest": ",: , [6793,6794]"
    },
    {
      "src": "return_statement [37592,37606]",
      "dest": "return_statement [37592,37607]"
    },
    {
      "src": "): ) [21413,21414]",
      "dest": "): ) [21413,21414]"
    },
    {
      "src": "): ) [36546,36547]",
      "dest": "): ) [36546,36547]"
    },
    {
      "src": "memory: memory [21731,21737]",
      "dest": "memory: memory [21731,21737]"
    },
    {
      "src": "type_name [34012,34019]",
      "dest": "type_name [34012,34019]"
    },
    {
      "src": "type_name [21759,21765]",
      "dest": "type_name [21759,21765]"
    },
    {
      "src": "primitive_type [8709,8713]",
      "dest": "primitive_type [8709,8713]"
    },
    {
      "src": "returns: returns [9813,9820]",
      "dest": "returns: returns [9813,9820]"
    },
    {
      "src": "type_name [30396,30403]",
      "dest": "type_name [30396,30403]"
    },
    {
      "src": "!=: != [31950,31952]",
      "dest": "!=: != [31950,31952]"
    },
    {
      "src": "primitive_type [34965,34972]",
      "dest": "primitive_type [34965,34972]"
    },
    {
      "src": ",: , [15412,15413]",
      "dest": ",: , [15412,15413]"
    },
    {
      "src": "identifier: target [20655,20661]",
      "dest": "identifier: target [20655,20661]"
    },
    {
      "src": "emit_statement [7836,7880]",
      "dest": "emit_statement [7836,7880]"
    },
    {
      "src": "internal: internal [29674,29682]",
      "dest": "internal: internal [29674,29682]"
    },
    {
      "src": "(: ( [36022,36023]",
      "dest": "(: ( [36022,36023]"
    },
    {
      "src": "(: ( [28185,28186]",
      "dest": "(: ( [28185,28186]"
    },
    {
      "src": "(: ( [28211,28212]",
      "dest": "(: ( [28211,28212]"
    },
    {
      "src": "function_definition [37413,37510]",
      "dest": "function_definition [37413,37510]"
    },
    {
      "src": "): ) [14256,14257]",
      "dest": "): ) [14256,14257]"
    },
    {
      "src": "true: true [28300,28304]",
      "dest": "true: true [28300,28304]"
    },
    {
      "src": "call_argument [30068,30074]",
      "dest": "call_argument [30068,30074]"
    },
    {
      "src": "}: } [35830,35831]",
      "dest": "}: } [35830,35831]"
    },
    {
      "src": "identifier: initializer [4554,4565]",
      "dest": "identifier: initializer [4554,4565]"
    },
    {
      "src": "identifier: b [16225,16226]",
      "dest": "identifier: b [16225,16226]"
    },
    {
      "src": "identifier: totalSupply [8207,8218]",
      "dest": "identifier: totalSupply [8207,8218]"
    },
    {
      "src": "expression_statement [33395,33418]",
      "dest": "expression_statement [33395,33418]"
    },
    {
      "src": "state_variable_declaration [1936,1959]",
      "dest": "state_variable_declaration [1936,1959]"
    },
    {
      "src": "identifier: transfer [35552,35560]",
      "dest": "identifier: transfer [35552,35560]"
    },
    {
      "src": "contract: contract [1597,1605]",
      "dest": "contract: contract [1597,1605]"
    },
    {
      "src": "identifier: to [33952,33954]",
      "dest": "identifier: to [33952,33954]"
    },
    {
      "src": "identifier: msg [28967,28970]",
      "dest": "identifier: msg [28967,28970]"
    },
    {
      "src": "identifier: amount [26299,26305]",
      "dest": "identifier: amount [26299,26305]"
    },
    {
      "src": "(: ( [33241,33242]",
      "dest": "(: ( [33241,33242]"
    },
    {
      "src": "\": \" [19451,19452]",
      "dest": "\": \" [19451,19452]"
    },
    {
      "src": "identifier: sender [27378,27384]",
      "dest": "identifier: sender [27378,27384]"
    },
    {
      "src": "identifier: sub [31208,31211]",
      "dest": "identifier: sub [31208,31211]"
    },
    {
      "src": "returns: returns [37450,37457]",
      "dest": "returns: returns [37450,37457]"
    },
    {
      "src": ",: , [28944,28945]",
      "dest": ",: , [28944,28945]"
    },
    {
      "src": "call_expression [35468,35490]",
      "dest": "call_expression [35468,35490]"
    },
    {
      "src": "pure: pure [25067,25071]",
      "dest": "pure: pure [25067,25071]"
    },
    {
      "src": "==: == [38140,38142]",
      "dest": "==: == [38141,38143]"
    },
    {
      "src": "return_statement [14141,14150]",
      "dest": "return_statement [14141,14150]"
    },
    {
      "src": "modifier_definition [4545,4949]",
      "dest": "modifier_definition [4545,4949]"
    },
    {
      "src": "(: ( [34347,34348]",
      "dest": "(: ( [34347,34348]"
    },
    {
      "src": "type_name [37118,37125]",
      "dest": "type_name [37118,37125]"
    },
    {
      "src": "primitive_type [37663,37670]",
      "dest": "primitive_type [37664,37671]"
    },
    {
      "src": "expression_statement [4860,4862]",
      "dest": "expression_statement [4860,4862]"
    },
    {
      "src": "parameter [20728,20740]",
      "dest": "parameter [20728,20740]"
    },
    {
      "src": "assignment_expression [32096,32132]",
      "dest": "assignment_expression [32096,32132]"
    },
    {
      "src": "public: public [35946,35952]",
      "dest": "public: public [35946,35952]"
    },
    {
      "src": "}: } [38251,38252]",
      "dest": "}: } [38252,38253]"
    },
    {
      "src": "call_argument [12583,12612]",
      "dest": "call_argument [12583,12612]"
    },
    {
      "src": "address: address [33144,33151]",
      "dest": "address: address [33144,33151]"
    },
    {
      "src": "uint256: uint256 [16146,16153]",
      "dest": "uint256: uint256 [16146,16153]"
    },
    {
      "src": "override_specifier [35961,35969]",
      "dest": "override_specifier [35961,35969]"
    },
    {
      "src": "binary_expression [16901,16906]",
      "dest": "binary_expression [16901,16906]"
    },
    {
      "src": "identifier: SafeMath [24557,24565]",
      "dest": "identifier: SafeMath [24557,24565]"
    },
    {
      "src": "uint256: uint256 [36065,36072]",
      "dest": "uint256: uint256 [36065,36072]"
    },
    {
      "src": "expression_statement [35130,35157]",
      "dest": "expression_statement [35130,35157]"
    },
    {
      "src": "primitive_type [12485,12492]",
      "dest": "primitive_type [12485,12492]"
    },
    {
      "src": "visibility [11446,11452]",
      "dest": "visibility [11446,11452]"
    },
    {
      "src": "type_name [9822,9826]",
      "dest": "type_name [9822,9826]"
    },
    {
      "src": "parameter [10184,10201]",
      "dest": "parameter [10184,10201]"
    },
    {
      "src": "(: ( [29727,29728]",
      "dest": "(: ( [29727,29728]"
    },
    {
      "src": "array_access [28233,28256]",
      "dest": "array_access [28233,28256]"
    },
    {
      "src": "boolean_literal [29068,29072]",
      "dest": "boolean_literal [29068,29072]"
    },
    {
      "src": "true [26852,26856]",
      "dest": "true [26852,26856]"
    },
    {
      "src": "function: function [11105,11113]",
      "dest": "function: function [11105,11113]"
    },
    {
      "src": "{: { [37371,37372]",
      "dest": "{: { [37371,37372]"
    },
    {
      "src": "{: { [26786,26787]",
      "dest": "{: { [26786,26787]"
    },
    {
      "src": "event_definition [6737,6821]",
      "dest": "event_definition [6737,6821]"
    },
    {
      "src": "yul_identifier [22839,22849]",
      "dest": "yul_identifier [22839,22849]"
    },
    {
      "src": "type_name [37029,37036]",
      "dest": "type_name [37029,37036]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [17995,18042]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [17995,18042]"
    },
    {
      "src": "identifier: amount [33169,33175]",
      "dest": "identifier: amount [33169,33175]"
    },
    {
      "src": "modifier_invocation [37171,37182]",
      "dest": "modifier_invocation [37171,37182]"
    },
    {
      "src": "comment: // Dependency file: contracts/true-gold/Reclaimable.sol [10744,10799]",
      "dest": "comment: // Dependency file: contracts/true-gold/Reclaimable.sol [10744,10799]"
    },
    {
      "src": "yul_evm_builtin [22824,22830]",
      "dest": "yul_evm_builtin [22824,22830]"
    },
    {
      "src": "member_expression [26806,26816]",
      "dest": "member_expression [26806,26816]"
    },
    {
      "src": ">: > [15506,15507]",
      "dest": ">: > [15506,15507]"
    },
    {
      "src": "}: } [21421,21422]",
      "dest": "}: } [21421,21422]"
    },
    {
      "src": "==: == [14215,14217]",
      "dest": "==: == [14215,14217]"
    },
    {
      "src": "(: ( [31211,31212]",
      "dest": "(: ( [31211,31212]"
    },
    {
      "src": "call_argument [28946,28953]",
      "dest": "call_argument [28946,28953]"
    },
    {
      "src": "<=: <= [36398,36400]",
      "dest": "<=: <= [36398,36400]"
    },
    {
      "src": "expression_statement [38097,38203]",
      "dest": "expression_statement [38098,38204]"
    },
    {
      "src": "primitive_type [1846,1853]",
      "dest": "primitive_type [1846,1853]"
    },
    {
      "src": "call_expression [38105,38139]",
      "dest": "call_expression [38106,38140]"
    },
    {
      "src": "string [21870,21910]",
      "dest": "string [21870,21910]"
    },
    {
      "src": "}: } [28311,28312]",
      "dest": "}: } [28311,28312]"
    },
    {
      "src": "): ) [35789,35790]",
      "dest": "): ) [35789,35790]"
    },
    {
      "src": "): ) [37332,37333]",
      "dest": "): ) [37332,37333]"
    },
    {
      "src": "primitive_type [10695,10702]",
      "dest": "primitive_type [10695,10702]"
    },
    {
      "src": "true: true [35819,35823]",
      "dest": "true: true [35819,35823]"
    },
    {
      "src": "(: ( [37117,37118]",
      "dest": "(: ( [37117,37118]"
    },
    {
      "src": "uint256: uint256 [32732,32739]",
      "dest": "uint256: uint256 [32732,32739]"
    },
    {
      "src": "(: ( [20782,20783]",
      "dest": "(: ( [20782,20783]"
    },
    {
      "src": "=: = [37019,37020]",
      "dest": "=: = [37019,37020]"
    },
    {
      "src": "primitive_type [31886,31893]",
      "dest": "primitive_type [31886,31893]"
    },
    {
      "src": "identifier: a [13483,13484]",
      "dest": "identifier: a [13483,13484]"
    },
    {
      "src": "variable_declaration [13510,13519]",
      "dest": "variable_declaration [13510,13519]"
    },
    {
      "src": "address: address [29720,29727]",
      "dest": "address: address [29720,29727]"
    },
    {
      "src": "(: ( [37858,37859]",
      "dest": "(: ( [37859,37860]"
    },
    {
      "src": "identifier: c [12547,12548]",
      "dest": "identifier: c [12547,12548]"
    },
    {
      "src": ",: , [34299,34300]",
      "dest": ",: , [34299,34300]"
    },
    {
      "src": "visibility [35003,35009]",
      "dest": "visibility [35003,35009]"
    },
    {
      "src": "identifier: recipient [29632,29641]",
      "dest": "identifier: recipient [29632,29641]"
    },
    {
      "src": "primitive_type [5089,5093]",
      "dest": "primitive_type [5089,5093]"
    },
    {
      "src": "uint256: uint256 [35924,35931]",
      "dest": "uint256: uint256 [35924,35931]"
    },
    {
      "src": "primitive_type [35896,35903]",
      "dest": "primitive_type [35896,35903]"
    },
    {
      "src": ",: , [32171,32172]",
      "dest": ",: , [32171,32172]"
    },
    {
      "src": "primitive_type [34194,34201]",
      "dest": "primitive_type [34194,34201]"
    },
    {
      "src": "expression_statement [19146,19220]",
      "dest": "expression_statement [19146,19220]"
    },
    {
      "src": "): ) [33321,33322]",
      "dest": "): ) [33321,33322]"
    },
    {
      "src": "address: address [9033,9040]",
      "dest": "address: address [9033,9040]"
    },
    {
      "src": "-: - [13524,13525]",
      "dest": "-: - [13524,13525]"
    },
    {
      "src": "\": \" [21870,21871]",
      "dest": "\": \" [21870,21871]"
    },
    {
      "src": "array_access [29867,29884]",
      "dest": "array_access [29867,29884]"
    },
    {
      "src": "primitive_type [12474,12481]",
      "dest": "primitive_type [12474,12481]"
    },
    {
      "src": "primitive_type [21243,21248]",
      "dest": "primitive_type [21243,21248]"
    },
    {
      "src": "primitive_type [5825,5832]",
      "dest": "primitive_type [5825,5832]"
    },
    {
      "src": "visibility [37334,37340]",
      "dest": "visibility [37334,37340]"
    },
    {
      "src": "return_type_definition [26479,26496]",
      "dest": "return_type_definition [26479,26496]"
    },
    {
      "src": "modifier_invocation [34249,34260]",
      "dest": "modifier_invocation [34249,34260]"
    },
    {
      "src": "(: ( [38026,38027]",
      "dest": "(: ( [38027,38028]"
    },
    {
      "src": "): ) [35456,35457]",
      "dest": "): ) [35456,35457]"
    },
    {
      "src": "parameter [14820,14827]",
      "dest": "parameter [14820,14827]"
    },
    {
      "src": "expression_statement [37719,37827]",
      "dest": "expression_statement [37720,37828]"
    },
    {
      "src": "visibility [9804,9812]",
      "dest": "visibility [9804,9812]"
    },
    {
      "src": "event: event [10657,10662]",
      "dest": "event: event [10657,10662]"
    },
    {
      "src": "(: ( [11342,11343]",
      "dest": "(: ( [11342,11343]"
    },
    {
      "src": "): ) [22182,22183]",
      "dest": "): ) [22182,22183]"
    },
    {
      "src": "member_expression [27591,27601]",
      "dest": "member_expression [27591,27601]"
    },
    {
      "src": "function_body [38086,38249]",
      "dest": "function_body [38087,38250]"
    },
    {
      "src": ",: , [36318,36319]",
      "dest": ",: , [36318,36319]"
    },
    {
      "src": "returns: returns [5080,5087]",
      "dest": "returns: returns [5080,5087]"
    },
    {
      "src": "state_mutability [12505,12509]",
      "dest": "state_mutability [12505,12509]"
    },
    {
      "src": "identifier: minAmount [35223,35232]",
      "dest": "identifier: minAmount [35223,35232]"
    },
    {
      "src": "identifier: sendValue [19073,19082]",
      "dest": "identifier: sendValue [19073,19082]"
    },
    {
      "src": "): ) [11348,11349]",
      "dest": "): ) [11348,11349]"
    },
    {
      "src": "identifier: minAmount [37652,37661]",
      "dest": "identifier: minAmount [37653,37662]"
    },
    {
      "src": "(: ( [19382,19383]",
      "dest": "(: ( [19382,19383]"
    },
    {
      "src": "]: ] [31206,31207]",
      "dest": "]: ] [31206,31207]"
    },
    {
      "src": "yul_assignment [5601,5624]",
      "dest": "yul_assignment [5601,5624]"
    },
    {
      "src": "identifier: account [17732,17739]",
      "dest": "identifier: account [17732,17739]"
    },
    {
      "src": "identifier: spender [26441,26448]",
      "dest": "identifier: spender [26441,26448]"
    },
    {
      "src": "string_literal [31119,31154]",
      "dest": "string_literal [31119,31154]"
    },
    {
      "src": "[: [ [31177,31178]",
      "dest": "[: [ [31177,31178]"
    },
    {
      "src": "identifier: spender [9779,9786]",
      "dest": "identifier: spender [9779,9786]"
    },
    {
      "src": "using_directive [24584,24610]",
      "dest": "using_directive [24584,24610]"
    },
    {
      "src": "\": \" [20354,20355]",
      "dest": "\": \" [20354,20355]"
    },
    {
      "src": "bytes: bytes [20260,20265]",
      "dest": "bytes: bytes [20260,20265]"
    },
    {
      "src": "type_name [25721,25728]",
      "dest": "type_name [25721,25728]"
    },
    {
      "src": "public: public [26216,26222]",
      "dest": "public: public [26216,26222]"
    },
    {
      "src": "public: public [37429,37435]",
      "dest": "public: public [37429,37435]"
    },
    {
      "src": "{: { [34380,34381]",
      "dest": "{: { [34380,34381]"
    },
    {
      "src": "identifier: _owner [7890,7896]",
      "dest": "identifier: _owner [7890,7896]"
    },
    {
      "src": "emit: emit [35204,35208]",
      "dest": "emit: emit [35204,35208]"
    },
    {
      "src": "type_name [16772,16779]",
      "dest": "type_name [16772,16779]"
    },
    {
      "src": "call_argument [33365,33383]",
      "dest": "call_argument [33365,33383]"
    },
    {
      "src": "address: address [20647,20654]",
      "dest": "address: address [20647,20654]"
    },
    {
      "src": "identifier: spender [28979,28986]",
      "dest": "identifier: spender [28979,28986]"
    },
    {
      "src": "primitive_type [37141,37148]",
      "dest": "primitive_type [37141,37148]"
    },
    {
      "src": "identifier: amount [35588,35594]",
      "dest": "identifier: amount [35588,35594]"
    },
    {
      "src": "\": \" [36320,36321]",
      "dest": "\": \" [36320,36321]"
    },
    {
      "src": "(: ( [7015,7016]",
      "dest": "(: ( [7015,7016]"
    },
    {
      "src": "call_argument [4638,4686]",
      "dest": "call_argument [4638,4686]"
    },
    {
      "src": ",: , [27557,27558]",
      "dest": ",: , [27557,27558]"
    },
    {
      "src": "\": \" [37501,37502]",
      "dest": "\": \" [37501,37502]"
    },
    {
      "src": "comment: // Dependency file: @openzeppelin/contracts/utils/Address.sol [16923,16984]",
      "dest": "comment: // Dependency file: @openzeppelin/contracts/utils/Address.sol [16923,16984]"
    },
    {
      "src": "): ) [8407,8408]",
      "dest": "): ) [8407,8408]"
    },
    {
      "src": "type_name [17724,17731]",
      "dest": "type_name [17724,17731]"
    },
    {
      "src": "return_type_definition [21796,21818]",
      "dest": "return_type_definition [21796,21818]"
    },
    {
      "src": "call_argument [32792,32798]",
      "dest": "call_argument [32792,32798]"
    },
    {
      "src": "expression_statement [29867,29959]",
      "dest": "expression_statement [29867,29959]"
    },
    {
      "src": "{: { [4894,4895]",
      "dest": "{: { [4894,4895]"
    },
    {
      "src": "identifier: sub [27603,27606]",
      "dest": "identifier: sub [27603,27606]"
    },
    {
      "src": "comment: // pragma solidity 0.6.10; [32265,32291]",
      "dest": "comment: // pragma solidity 0.6.10; [32265,32291]"
    },
    {
      "src": "function_definition [37518,37613]",
      "dest": "function_definition [37518,37614]"
    },
    {
      "src": "call_expression [14847,14886]",
      "dest": "call_expression [14847,14886]"
    },
    {
      "src": "=: = [31281,31282]",
      "dest": "=: = [31281,31282]"
    },
    {
      "src": "return_statement [14270,14279]",
      "dest": "return_statement [14270,14279]"
    },
    {
      "src": "call_expression [30533,30557]",
      "dest": "call_expression [30533,30557]"
    },
    {
      "src": "array_access [27571,27590]",
      "dest": "array_access [27571,27590]"
    },
    {
      "src": "inheritance_specifier [33843,33856]",
      "dest": "inheritance_specifier [33843,33856]"
    },
    {
      "src": "override_specifier [26231,26239]",
      "dest": "override_specifier [26231,26239]"
    },
    {
      "src": "=: = [4720,4721]",
      "dest": "=: = [4720,4721]"
    },
    {
      "src": "state_mutability [37552,37556]",
      "dest": "state_mutability [37552,37556]"
    },
    {
      "src": "identifier: newMin [34061,34067]",
      "dest": "identifier: newMin [34061,34067]"
    },
    {
      "src": "interface: interface [5772,5781]",
      "dest": "interface: interface [5772,5781]"
    },
    {
      "src": "function_definition [26163,26336]",
      "dest": "function_definition [26163,26336]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/TrueMintableBurnable.sol\"; [36805,36862]",
      "dest": "comment: // import \"contracts/true-gold/TrueMintableBurnable.sol\"; [36805,36862]"
    },
    {
      "src": "identifier: recipient [30057,30066]",
      "dest": "identifier: recipient [30057,30066]"
    },
    {
      "src": "(: ( [28991,28992]",
      "dest": "(: ( [28991,28992]"
    },
    {
      "src": "member_expression [33251,33261]",
      "dest": "member_expression [33251,33261]"
    },
    {
      "src": "primitive_type [20647,20654]",
      "dest": "primitive_type [20647,20654]"
    },
    {
      "src": "public: public [26450,26456]",
      "dest": "public: public [26450,26456]"
    },
    {
      "src": "primitive_type [26488,26495]",
      "dest": "primitive_type [26488,26495]"
    },
    {
      "src": "parameter [35979,35983]",
      "dest": "parameter [35979,35983]"
    },
    {
      "src": ",: , [28857,28858]",
      "dest": ",: , [28857,28858]"
    },
    {
      "src": "address: address [10184,10191]",
      "dest": "address: address [10184,10191]"
    },
    {
      "src": "): ) [26833,26834]",
      "dest": "): ) [26833,26834]"
    },
    {
      "src": "primitive_type [26714,26721]",
      "dest": "primitive_type [26714,26721]"
    },
    {
      "src": "identifier: subtractedValue [28867,28882]",
      "dest": "identifier: subtractedValue [28867,28882]"
    },
    {
      "src": "member_expression [31189,31211]",
      "dest": "member_expression [31189,31211]"
    },
    {
      "src": "identifier: recipient [30002,30011]",
      "dest": "identifier: recipient [30002,30011]"
    },
    {
      "src": "member_expression [30533,30549]",
      "dest": "member_expression [30533,30549]"
    },
    {
      "src": ".: . [35659,35660]",
      "dest": ".: . [35659,35660]"
    },
    {
      "src": "call_argument [29812,29813]",
      "dest": "call_argument [29812,29813]"
    },
    {
      "src": "returns: returns [35970,35977]",
      "dest": "returns: returns [35970,35977]"
    },
    {
      "src": "identifier: _burn [36488,36493]",
      "dest": "identifier: _burn [36488,36493]"
    },
    {
      "src": "{: { [38086,38087]",
      "dest": "{: { [38087,38088]"
    },
    {
      "src": "\": \" [32002,32003]",
      "dest": "\": \" [32002,32003]"
    },
    {
      "src": "identifier: isContract [17713,17723]",
      "dest": "identifier: isContract [17713,17723]"
    },
    {
      "src": "identifier: _maxBurnAmount [34495,34509]",
      "dest": "identifier: _maxBurnAmount [34495,34509]"
    },
    {
      "src": "identifier: maxBurnAmount [34301,34314]",
      "dest": "identifier: maxBurnAmount [34301,34314]"
    },
    {
      "src": "(: ( [27606,27607]",
      "dest": "(: ( [27606,27607]"
    },
    {
      "src": "call_argument [35071,35118]",
      "dest": "call_argument [35071,35118]"
    },
    {
      "src": "number_literal: 0 [29728,29729]",
      "dest": "number_literal: 0 [29728,29729]"
    },
    {
      "src": "is: is [33802,33804]",
      "dest": "is: is [33802,33804]"
    },
    {
      "src": "identifier: setBurnBounds [37961,37974]",
      "dest": "identifier: setBurnBounds [37962,37975]"
    },
    {
      "src": "call_argument [30652,30653]",
      "dest": "call_argument [30652,30653]"
    },
    {
      "src": "expression_statement [27542,27660]",
      "dest": "expression_statement [27542,27660]"
    },
    {
      "src": ",: , [21868,21869]",
      "dest": ",: , [21868,21869]"
    },
    {
      "src": "expression_statement [13470,13500]",
      "dest": "expression_statement [13470,13500]"
    },
    {
      "src": "=: = [29990,29991]",
      "dest": "=: = [29990,29991]"
    },
    {
      "src": "user_defined_type [33834,33841]",
      "dest": "user_defined_type [33834,33841]"
    },
    {
      "src": "type_cast_expression [11187,11200]",
      "dest": "type_cast_expression [11187,11200]"
    },
    {
      "src": "override: override [37341,37349]",
      "dest": "override: override [37341,37349]"
    },
    {
      "src": ",: , [35069,35070]",
      "dest": ",: , [35069,35070]"
    },
    {
      "src": "identifier: ProxyStorage [33805,33817]",
      "dest": "identifier: ProxyStorage [33805,33817]"
    },
    {
      "src": "expression_statement [26797,26835]",
      "dest": "expression_statement [26797,26835]"
    },
    {
      "src": "call_argument [32157,32162]",
      "dest": "call_argument [32157,32162]"
    },
    {
      "src": "(: ( [35273,35274]",
      "dest": "(: ( [35273,35274]"
    },
    {
      "src": "identifier: transfer [11366,11374]",
      "dest": "identifier: transfer [11366,11374]"
    },
    {
      "src": "identifier: success [22383,22390]",
      "dest": "identifier: success [22383,22390]"
    },
    {
      "src": "call_argument [36320,36371]",
      "dest": "call_argument [36320,36371]"
    },
    {
      "src": "[: [ [28978,28979]",
      "dest": "[: [ [28978,28979]"
    },
    {
      "src": "<=: <= [36084,36086]",
      "dest": "<=: <= [36084,36086]"
    },
    {
      "src": "primitive_type [37364,37369]",
      "dest": "primitive_type [37364,37369]"
    },
    {
      "src": "call_argument [35680,35686]",
      "dest": "call_argument [35680,35686]"
    },
    {
      "src": "parameter [8675,8689]",
      "dest": "parameter [8675,8689]"
    },
    {
      "src": "parameter [13839,13848]",
      "dest": "parameter [13839,13848]"
    },
    {
      "src": "address: address [35561,35568]",
      "dest": "address: address [35561,35568]"
    },
    {
      "src": "identifier: a [16154,16155]",
      "dest": "identifier: a [16154,16155]"
    },
    {
      "src": "): ) [20386,20387]",
      "dest": "): ) [20386,20387]"
    },
    {
      "src": ",: , [35885,35886]",
      "dest": ",: , [35885,35886]"
    },
    {
      "src": "return: return [7276,7282]",
      "dest": "return: return [7276,7282]"
    },
    {
      "src": "inheritance_specifier [24537,24543]",
      "dest": "inheritance_specifier [24537,24543]"
    },
    {
      "src": "}: } [12641,12642]",
      "dest": "}: } [12641,12642]"
    },
    {
      "src": "internal: internal [15453,15461]",
      "dest": "internal: internal [15453,15461]"
    },
    {
      "src": "function: function [15390,15398]",
      "dest": "function: function [15390,15398]"
    },
    {
      "src": "virtual: virtual [25574,25581]",
      "dest": "virtual: virtual [25574,25581]"
    },
    {
      "src": "binary_expression [35047,35069]",
      "dest": "binary_expression [35047,35069]"
    },
    {
      "src": "comment: /**      * @dev Indicates that the contract has been initialized.      */ [4200,4275]",
      "dest": "comment: /**      * @dev Indicates that the contract has been initialized.      */ [4200,4275]"
    },
    {
      "src": "string_literal [19392,19452]",
      "dest": "string_literal [19392,19452]"
    },
    {
      "src": "identifier: amount [31300,31306]",
      "dest": "identifier: amount [31300,31306]"
    },
    {
      "src": "return_statement [16211,16256]",
      "dest": "return_statement [16211,16256]"
    },
    {
      "src": "uint256: uint256 [12539,12546]",
      "dest": "uint256: uint256 [12539,12546]"
    },
    {
      "src": "primitive_type [16834,16841]",
      "dest": "primitive_type [16834,16841]"
    },
    {
      "src": "emit: emit [32143,32147]",
      "dest": "emit: emit [32143,32147]"
    },
    {
      "src": "=: = [35182,35183]",
      "dest": "=: = [35182,35183]"
    },
    {
      "src": "call_argument [37845,37887]",
      "dest": "call_argument [37846,37888]"
    },
    {
      "src": "function_definition [11105,11217]",
      "dest": "function_definition [11105,11217]"
    },
    {
      "src": "identifier: Reclaimable [36933,36944]",
      "dest": "identifier: Reclaimable [36933,36944]"
    },
    {
      "src": "function_definition [5042,5667]",
      "dest": "function_definition [5042,5667]"
    },
    {
      "src": "primitive_type [36987,36992]",
      "dest": "primitive_type [36987,36992]"
    },
    {
      "src": "public: public [35307,35313]",
      "dest": "public: public [35307,35313]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/Ownable.sol\"; [33650,33701]",
      "dest": "comment: // import \"contracts/true-gold/common/Ownable.sol\"; [33650,33701]"
    },
    {
      "src": "uint256: uint256 [35580,35587]",
      "dest": "uint256: uint256 [35580,35587]"
    },
    {
      "src": "number_literal: 0 [37768,37769]",
      "dest": "number_literal: 0 [37769,37770]"
    },
    {
      "src": "identifier: transferFrom [27347,27359]",
      "dest": "identifier: transferFrom [27347,27359]"
    },
    {
      "src": "return: return [16211,16217]",
      "dest": "return: return [16211,16217]"
    },
    {
      "src": "{: { [32763,32764]",
      "dest": "{: { [32763,32764]"
    },
    {
      "src": "identifier: _mint [35468,35473]",
      "dest": "identifier: _mint [35468,35473]"
    },
    {
      "src": "string [37771,37825]",
      "dest": "string [37772,37826]"
    },
    {
      "src": "primitive_type [7772,7779]",
      "dest": "primitive_type [7772,7779]"
    },
    {
      "src": "identifier: functionCallWithValue [21687,21708]",
      "dest": "identifier: functionCallWithValue [21687,21708]"
    },
    {
      "src": "identifier: require [35646,35653]",
      "dest": "identifier: require [35646,35653]"
    },
    {
      "src": "identifier: balance [11309,11316]",
      "dest": "identifier: balance [11309,11316]"
    },
    {
      "src": "override: override [7722,7730]",
      "dest": "override: override [7722,7730]"
    },
    {
      "src": ",: , [13837,13838]",
      "dest": ",: , [13837,13838]"
    },
    {
      "src": "type_name [26249,26253]",
      "dest": "type_name [26249,26253]"
    },
    {
      "src": "string_literal [14857,14885]",
      "dest": "string_literal [14857,14885]"
    },
    {
      "src": "identifier: spender [26722,26729]",
      "dest": "identifier: spender [26722,26729]"
    },
    {
      "src": ",: , [35678,35679]",
      "dest": ",: , [35678,35679]"
    },
    {
      "src": "returns: returns [28899,28906]",
      "dest": "returns: returns [28899,28906]"
    },
    {
      "src": "identifier: reclaimContract [11412,11427]",
      "dest": "identifier: reclaimContract [11412,11427]"
    },
    {
      "src": "visibility [25867,25873]",
      "dest": "visibility [25867,25873]"
    },
    {
      "src": "{: { [1619,1620]",
      "dest": "{: { [1619,1620]"
    },
    {
      "src": "external: external [9804,9812]",
      "dest": "external: external [9804,9812]"
    },
    {
      "src": "parameter [7256,7263]",
      "dest": "parameter [7256,7263]"
    },
    {
      "src": "identifier: a [13836,13837]",
      "dest": "identifier: a [13836,13837]"
    },
    {
      "src": ".: . [28265,28266]",
      "dest": ".: . [28265,28266]"
    },
    {
      "src": ",: , [20661,20662]",
      "dest": ",: , [20661,20662]"
    },
    {
      "src": ".: . [29904,29905]",
      "dest": ".: . [29904,29905]"
    },
    {
      "src": "): ) [32043,32044]",
      "dest": "): ) [32043,32044]"
    },
    {
      "src": "type_name [15403,15410]",
      "dest": "type_name [15403,15410]"
    },
    {
      "src": "primitive_type [35979,35983]",
      "dest": "primitive_type [35979,35983]"
    },
    {
      "src": "true [27677,27681]",
      "dest": "true [27677,27681]"
    },
    {
      "src": "type_name [10168,10175]",
      "dest": "type_name [10168,10175]"
    },
    {
      "src": "comment: // pragma solidity ^0.6.0; [11591,11617]",
      "dest": "comment: // pragma solidity ^0.6.0; [11591,11617]"
    },
    {
      "src": "identifier: _allowances [27571,27582]",
      "dest": "identifier: _allowances [27571,27582]"
    },
    {
      "src": "call_argument [30017,30023]",
      "dest": "call_argument [30017,30023]"
    },
    {
      "src": "string [20354,20386]",
      "dest": "string [20354,20386]"
    },
    {
      "src": "call_argument [27607,27613]",
      "dest": "call_argument [27607,27613]"
    },
    {
      "src": "): ) [1854,1855]",
      "dest": "): ) [1854,1855]"
    },
    {
      "src": "type_name [11428,11436]",
      "dest": "type_name [11428,11436]"
    },
    {
      "src": "variable_declaration_statement [19310,19365]",
      "dest": "variable_declaration_statement [19310,19365]"
    },
    {
      "src": "member_expression [7118,7128]",
      "dest": "member_expression [7118,7128]"
    },
    {
      "src": "call_argument [32042,32043]",
      "dest": "call_argument [32042,32043]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [26872,27332]",
      "dest": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for ``sender``'s tokens of at least      * `amount`.      */ [26872,27332]"
    },
    {
      "src": "identifier: _balances [1792,1801]",
      "dest": "identifier: _balances [1792,1801]"
    },
    {
      "src": "): ) [19363,19364]",
      "dest": "): ) [19363,19364]"
    },
    {
      "src": "}: } [7136,7137]",
      "dest": "}: } [7136,7137]"
    },
    {
      "src": "identifier: msg [33353,33356]",
      "dest": "identifier: msg [33353,33356]"
    },
    {
      "src": "indexed: indexed [33996,34003]",
      "dest": "indexed: indexed [33996,34003]"
    },
    {
      "src": "number_literal: 0 [30652,30653]",
      "dest": "number_literal: 0 [30652,30653]"
    },
    {
      "src": "contract_declaration [11066,11518]",
      "dest": "contract_declaration [11066,11518]"
    },
    {
      "src": "uint256: uint256 [12983,12990]",
      "dest": "uint256: uint256 [12983,12990]"
    },
    {
      "src": "[: [ [27590,27591]",
      "dest": "[: [ [27590,27591]"
    },
    {
      "src": "identifier: require [22157,22164]",
      "dest": "identifier: require [22157,22164]"
    },
    {
      "src": "function_definition [34147,34323]",
      "dest": "function_definition [34147,34323]"
    },
    {
      "src": "): ) [37763,37764]",
      "dest": "): ) [37764,37765]"
    },
    {
      "src": "if: if [4747,4749]",
      "dest": "if: if [4747,4749]"
    },
    {
      "src": "call_expression [11175,11209]",
      "dest": "call_expression [11175,11209]"
    },
    {
      "src": "type_cast_expression [19154,19167]",
      "dest": "type_cast_expression [19154,19167]"
    },
    {
      "src": "(: ( [6763,6764]",
      "dest": "(: ( [6763,6764]"
    },
    {
      "src": "function_body [14829,14894]",
      "dest": "function_body [14829,14894]"
    },
    {
      "src": "return_type_definition [25072,25095]",
      "dest": "return_type_definition [25072,25095]"
    },
    {
      "src": "identifier: errorMessage [15439,15451]",
      "dest": "identifier: errorMessage [15439,15451]"
    },
    {
      "src": "identifier: REDEMPTION_ADDRESS_COUNT [36087,36111]",
      "dest": "identifier: REDEMPTION_ADDRESS_COUNT [36087,36111]"
    },
    {
      "src": "parameter [9033,9048]",
      "dest": "parameter [9033,9048]"
    },
    {
      "src": ",: , [36931,36932]",
      "dest": ",: , [36931,36932]"
    },
    {
      "src": "visibility [36249,36257]",
      "dest": "visibility [36249,36257]"
    },
    {
      "src": "\": \" [14221,14222]",
      "dest": "\": \" [14221,14222]"
    },
    {
      "src": "binary_expression [36065,36111]",
      "dest": "binary_expression [36065,36111]"
    },
    {
      "src": "\": \" [37889,37890]",
      "dest": "\": \" [37890,37891]"
    },
    {
      "src": "binary_expression [31096,31117]",
      "dest": "binary_expression [31096,31117]"
    },
    {
      "src": "): ) [37579,37580]",
      "dest": "): ) [37579,37580]"
    },
    {
      "src": "{: { [19343,19344]",
      "dest": "{: { [19343,19344]"
    },
    {
      "src": "uint256: uint256 [22069,22076]",
      "dest": "uint256: uint256 [22069,22076]"
    },
    {
      "src": "<=: <= [13480,13482]",
      "dest": "<=: <= [13480,13482]"
    },
    {
      "src": "identifier: newOwner [7760,7768]",
      "dest": "identifier: newOwner [7760,7768]"
    },
    {
      "src": "primitive_type [35561,35568]",
      "dest": "primitive_type [35561,35568]"
    },
    {
      "src": "identifier: amount [32126,32132]",
      "dest": "identifier: amount [32126,32132]"
    },
    {
      "src": "identifier: OwnershipTransferred [7085,7105]",
      "dest": "identifier: OwnershipTransferred [7085,7105]"
    },
    {
      "src": "comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [30091,30358]",
      "dest": "comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [30091,30358]"
    },
    {
      "src": "): ) [26448,26449]",
      "dest": "): ) [26448,26449]"
    },
    {
      "src": "type_name [6795,6802]",
      "dest": "type_name [6795,6802]"
    },
    {
      "src": "assignment_expression [30518,30557]",
      "dest": "assignment_expression [30518,30557]"
    },
    {
      "src": "identifier: target [21952,21958]",
      "dest": "identifier: target [21952,21958]"
    },
    {
      "src": "return: return [37382,37388]",
      "dest": "return: return [37382,37388]"
    },
    {
      "src": "(: ( [7759,7760]",
      "dest": "(: ( [7759,7760]"
    },
    {
      "src": "(: ( [5088,5089]",
      "dest": "(: ( [5088,5089]"
    },
    {
      "src": "solidity_version:  0.6.10 [36629,36636]",
      "dest": "solidity_version:  0.6.10 [36629,36636]"
    },
    {
      "src": "call_argument [7430,7450]",
      "dest": "call_argument [7430,7450]"
    },
    {
      "src": "binary_expression [14118,14124]",
      "dest": "binary_expression [14118,14124]"
    },
    {
      "src": "function_body [37581,37613]",
      "dest": "function_body [37581,37614]"
    },
    {
      "src": "override_specifier [27460,27468]",
      "dest": "override_specifier [27460,27468]"
    },
    {
      "src": "identifier: require [29783,29790]",
      "dest": "identifier: require [29783,29790]"
    },
    {
      "src": "event: event [33977,33982]",
      "dest": "event: event [33977,33982]"
    },
    {
      "src": "identifier: require [31088,31095]",
      "dest": "identifier: require [31088,31095]"
    },
    {
      "src": "call_argument [35669,35678]",
      "dest": "call_argument [35669,35678]"
    },
    {
      "src": "(: ( [15402,15403]",
      "dest": "(: ( [15402,15403]"
    },
    {
      "src": ",: , [30066,30067]",
      "dest": ",: , [30066,30067]"
    },
    {
      "src": "identifier: add [12470,12473]",
      "dest": "identifier: add [12470,12473]"
    },
    {
      "src": "identifier: TrueMintableBurnable [33781,33801]",
      "dest": "identifier: TrueMintableBurnable [33781,33801]"
    },
    {
      "src": "emit_statement [7080,7130]",
      "dest": "emit_statement [7080,7130]"
    },
    {
      "src": "memory: memory [21249,21255]",
      "dest": "memory: memory [21249,21255]"
    },
    {
      "src": "(: ( [30549,30550]",
      "dest": "(: ( [30549,30550]"
    },
    {
      "src": "): ) [25728,25729]",
      "dest": "): ) [25728,25729]"
    },
    {
      "src": "uint256: uint256 [14820,14827]",
      "dest": "uint256: uint256 [14820,14827]"
    },
    {
      "src": "virtual: virtual [31917,31924]",
      "dest": "virtual: virtual [31917,31924]"
    },
    {
      "src": "function: function [12461,12469]",
      "dest": "function: function [12461,12469]"
    },
    {
      "src": "string: string [37566,37572]",
      "dest": "string: string [37566,37572]"
    },
    {
      "src": "override_specifier [26465,26473]",
      "dest": "override_specifier [26465,26473]"
    },
    {
      "src": "(: ( [1815,1816]",
      "dest": "(: ( [1815,1816]"
    },
    {
      "src": "visibility [5843,5851]",
      "dest": "visibility [5843,5851]"
    },
    {
      "src": "identifier: account [30387,30394]",
      "dest": "identifier: account [30387,30394]"
    },
    {
      "src": "identifier: burnFrom [33135,33143]",
      "dest": "identifier: burnFrom [33135,33143]"
    },
    {
      "src": "\": \" [4685,4686]",
      "dest": "\": \" [4685,4686]"
    },
    {
      "src": ",: , [21757,21758]",
      "dest": ",: , [21757,21758]"
    },
    {
      "src": "type_name [14786,14793]",
      "dest": "type_name [14786,14793]"
    },
    {
      "src": "returns: returns [25587,25594]",
      "dest": "returns: returns [25587,25594]"
    },
    {
      "src": "function_definition [16748,16914]",
      "dest": "function_definition [16748,16914]"
    },
    {
      "src": "comment: /* Additionally, we have several keccak-based storage locations.      * If you add more keccak-based storage mappings, such as mappings, you must document them here.      * If the length of the keccak input is the same as an existing mapping, it is possible there could be a preimage collision.      * A preimage collision can be used to attack the contract by treating one storage location as another,      * which would always be a critical issue.      * Carefully examine future keccak-based storage to ensure there can be no preimage collisions.      *******************************************************************************************************      ** length     input                                                         usage      *******************************************************************************************************      ** 20         \"trueGold.proxy.owner\"                                        Proxy Owner      ** 28         \"trueGold.pending.proxy.owner\"                                Pending Proxy Owner      ** 29         \"trueGold.proxy.implementation\"                               Proxy Implementation      ** 64         uint256(address),uint256(1)                                   _balances      ** 64         uint256(address),keccak256(uint256(address),uint256(2))       _allowances      **/ [1996,3353]",
      "dest": "comment: /* Additionally, we have several keccak-based storage locations.      * If you add more keccak-based storage mappings, such as mappings, you must document them here.      * If the length of the keccak input is the same as an existing mapping, it is possible there could be a preimage collision.      * A preimage collision can be used to attack the contract by treating one storage location as another,      * which would always be a critical issue.      * Carefully examine future keccak-based storage to ensure there can be no preimage collisions.      *******************************************************************************************************      ** length     input                                                         usage      *******************************************************************************************************      ** 20         \"trueGold.proxy.owner\"                                        Proxy Owner      ** 28         \"trueGold.pending.proxy.owner\"                                Pending Proxy Owner      ** 29         \"trueGold.proxy.implementation\"                               Proxy Implementation      ** 64         uint256(address),uint256(1)                                   _balances      ** 64         uint256(address),keccak256(uint256(address),uint256(2))       _allowances      **/ [1996,3353]"
    },
    {
      "src": "identifier: amount [26208,26214]",
      "dest": "identifier: amount [26208,26214]"
    },
    {
      "src": "uint256: uint256 [34965,34972]",
      "dest": "uint256: uint256 [34965,34972]"
    },
    {
      "src": "call_expression [38213,38241]",
      "dest": "call_expression [38214,38242]"
    },
    {
      "src": "external: external [8377,8385]",
      "dest": "external: external [8377,8385]"
    },
    {
      "src": "identifier: _approve [26797,26805]",
      "dest": "identifier: _approve [26797,26805]"
    },
    {
      "src": "call_argument [36494,36501]",
      "dest": "call_argument [36494,36501]"
    },
    {
      "src": "(: ( [10167,10168]",
      "dest": "(: ( [10167,10168]"
    },
    {
      "src": "identifier: super [37955,37960]",
      "dest": "identifier: super [37956,37961]"
    },
    {
      "src": "function_definition [13815,14286]",
      "dest": "function_definition [13815,14286]"
    },
    {
      "src": "function_definition [27338,27689]",
      "dest": "function_definition [27338,27689]"
    },
    {
      "src": ",: , [13386,13387]",
      "dest": ",: , [13386,13387]"
    },
    {
      "src": "return_type_definition [25888,25905]",
      "dest": "return_type_definition [25888,25905]"
    },
    {
      "src": "internal: internal [12960,12968]",
      "dest": "internal: internal [12960,12968]"
    },
    {
      "src": "): ) [13498,13499]",
      "dest": "): ) [13498,13499]"
    },
    {
      "src": ",: , [29613,29614]",
      "dest": ",: , [29613,29614]"
    },
    {
      "src": "parameter [16834,16841]",
      "dest": "parameter [16834,16841]"
    },
    {
      "src": "{: { [7741,7742]",
      "dest": "{: { [7741,7742]"
    },
    {
      "src": "): ) [13425,13426]",
      "dest": "): ) [13425,13426]"
    },
    {
      "src": "identifier: amount [8683,8689]",
      "dest": "identifier: amount [8683,8689]"
    },
    {
      "src": "(: ( [36293,36294]",
      "dest": "(: ( [36293,36294]"
    },
    {
      "src": "function_body [22146,22981]",
      "dest": "function_body [22146,22981]"
    },
    {
      "src": "): ) [7263,7264]",
      "dest": "): ) [7263,7264]"
    },
    {
      "src": "uint256: uint256 [26731,26738]",
      "dest": "uint256: uint256 [26731,26738]"
    },
    {
      "src": "user_defined_type [11428,11436]",
      "dest": "user_defined_type [11428,11436]"
    },
    {
      "src": "identifier: _balances [25924,25933]",
      "dest": "identifier: _balances [25924,25933]"
    },
    {
      "src": "identifier: setBurnBounds [34272,34285]",
      "dest": "identifier: setBurnBounds [34272,34285]"
    },
    {
      "src": "pure: pure [25582,25586]",
      "dest": "pure: pure [25582,25586]"
    },
    {
      "src": "visibility [11273,11279]",
      "dest": "visibility [11273,11279]"
    },
    {
      "src": "primitive_type [29720,29727]",
      "dest": "primitive_type [29720,29727]"
    },
    {
      "src": "): ) [30556,30557]",
      "dest": "): ) [30556,30557]"
    },
    {
      "src": "identifier: amount [27431,27437]",
      "dest": "identifier: amount [27431,27437]"
    },
    {
      "src": "internal: internal [12496,12504]",
      "dest": "internal: internal [12496,12504]"
    },
    {
      "src": "binary_expression [4587,4619]",
      "dest": "binary_expression [4587,4619]"
    },
    {
      "src": "identifier: require [19375,19382]",
      "dest": "identifier: require [19375,19382]"
    },
    {
      "src": "identifier: sub [28988,28991]",
      "dest": "identifier: sub [28988,28991]"
    },
    {
      "src": "primitive_type [17764,17768]",
      "dest": "primitive_type [17764,17768]"
    },
    {
      "src": "): ) [11444,11445]",
      "dest": "): ) [11444,11445]"
    },
    {
      "src": "): ) [7409,7410]",
      "dest": "): ) [7409,7410]"
    },
    {
      "src": "identifier: _totalSupply [30533,30545]",
      "dest": "identifier: _totalSupply [30533,30545]"
    },
    {
      "src": "identifier: sender [35879,35885]",
      "dest": "identifier: sender [35879,35885]"
    },
    {
      "src": "identifier: _balances [29992,30001]",
      "dest": "identifier: _balances [29992,30001]"
    },
    {
      "src": "pure: pure [15462,15466]",
      "dest": "pure: pure [15462,15466]"
    },
    {
      "src": "inheritance_specifier [4180,4192]",
      "dest": "inheritance_specifier [4180,4192]"
    },
    {
      "src": "=: = [22330,22331]",
      "dest": "=: = [22330,22331]"
    },
    {
      "src": "expression_statement [33335,33385]",
      "dest": "expression_statement [33335,33385]"
    },
    {
      "src": "parameter [14786,14795]",
      "dest": "parameter [14786,14795]"
    },
    {
      "src": "(: ( [7232,7233]",
      "dest": "(: ( [7232,7233]"
    },
    {
      "src": "identifier: maxBurnAmount [34225,34238]",
      "dest": "identifier: maxBurnAmount [34225,34238]"
    },
    {
      "src": "block_statement [4894,4942]",
      "dest": "block_statement [4894,4942]"
    },
    {
      "src": "parameter [37459,37472]",
      "dest": "parameter [37459,37472]"
    },
    {
      "src": "identifier: Initializable [4163,4176]",
      "dest": "identifier: Initializable [4163,4176]"
    },
    {
      "src": "uint256: uint256 [33203,33210]",
      "dest": "uint256: uint256 [33203,33210]"
    },
    {
      "src": "contract: contract [32571,32579]",
      "dest": "contract: contract [32571,32579]"
    },
    {
      "src": "type_cast_expression [29804,29814]",
      "dest": "type_cast_expression [29804,29814]"
    },
    {
      "src": "address: address [31836,31843]",
      "dest": "address: address [31836,31843]"
    },
    {
      "src": "state_mutability [16177,16181]",
      "dest": "state_mutability [16177,16181]"
    },
    {
      "src": ",: , [21958,21959]",
      "dest": ",: , [21958,21959]"
    },
    {
      "src": "virtual: virtual [26223,26230]",
      "dest": "virtual: virtual [26223,26230]"
    },
    {
      "src": "identifier: value [21363,21368]",
      "dest": "identifier: value [21363,21368]"
    },
    {
      "src": "[: [ [30598,30599]",
      "dest": "[: [ [30598,30599]"
    },
    {
      "src": "primitive_type [10477,10484]",
      "dest": "primitive_type [10477,10484]"
    },
    {
      "src": "): ) [34445,34446]",
      "dest": "): ) [34445,34446]"
    },
    {
      "src": "visibility [25567,25573]",
      "dest": "visibility [25567,25573]"
    },
    {
      "src": "identifier: mod [37737,37740]",
      "dest": "identifier: mod [37738,37741]"
    },
    {
      "src": "type_name [31860,31867]",
      "dest": "type_name [31860,31867]"
    },
    {
      "src": "): ) [31256,31257]",
      "dest": "): ) [31256,31257]"
    },
    {
      "src": "return: return [35812,35818]",
      "dest": "return: return [35812,35818]"
    },
    {
      "src": "return_statement [14840,14887]",
      "dest": "return_statement [14840,14887]"
    },
    {
      "src": "identifier: call [19339,19343]",
      "dest": "identifier: call [19339,19343]"
    },
    {
      "src": "type_name [29652,29659]",
      "dest": "type_name [29652,29659]"
    },
    {
      "src": "virtual: virtual [35953,35960]",
      "dest": "virtual: virtual [35953,35960]"
    },
    {
      "src": "identifier: msg [32780,32783]",
      "dest": "identifier: msg [32780,32783]"
    },
    {
      "src": "function: function [6982,6990]",
      "dest": "function: function [6982,6990]"
    },
    {
      "src": "identifier: to [10473,10475]",
      "dest": "identifier: to [10473,10475]"
    },
    {
      "src": ",: , [33408,33409]",
      "dest": ",: , [33408,33409]"
    },
    {
      "src": "{: { [34477,34478]",
      "dest": "{: { [34477,34478]"
    },
    {
      "src": "returns: returns [8235,8242]",
      "dest": "returns: returns [8235,8242]"
    },
    {
      "src": "(: ( [31095,31096]",
      "dest": "(: ( [31095,31096]"
    },
    {
      "src": "): ) [28190,28191]",
      "dest": "): ) [28190,28191]"
    },
    {
      "src": "event_paramater [33988,34010]",
      "dest": "event_paramater [33988,34010]"
    },
    {
      "src": "comment: // mapping (address => mapping (address => uint256)) private _allowances; [24674,24747]",
      "dest": "comment: // mapping (address => mapping (address => uint256)) private _allowances; [24674,24747]"
    },
    {
      "src": "expression_statement [29783,29855]",
      "dest": "expression_statement [29783,29855]"
    },
    {
      "src": "identifier: b [12957,12958]",
      "dest": "identifier: b [12957,12958]"
    },
    {
      "src": "identifier: amount [30612,30618]",
      "dest": "identifier: amount [30612,30618]"
    },
    {
      "src": "expression_statement [35039,35120]",
      "dest": "expression_statement [35039,35120]"
    },
    {
      "src": "(: ( [7429,7430]",
      "dest": "(: ( [7429,7430]"
    },
    {
      "src": "identifier: require [30440,30447]",
      "dest": "identifier: require [30440,30447]"
    },
    {
      "src": "emit_statement [32143,32181]",
      "dest": "emit_statement [32143,32181]"
    },
    {
      "src": "primitive_type [34069,34076]",
      "dest": "primitive_type [34069,34076]"
    },
    {
      "src": "uint256: uint256 [14775,14782]",
      "dest": "uint256: uint256 [14775,14782]"
    },
    {
      "src": ",: , [33954,33955]",
      "dest": ",: , [33954,33955]"
    },
    {
      "src": "address: address [10672,10679]",
      "dest": "address: address [10672,10679]"
    },
    {
      "src": "external: external [8691,8699]",
      "dest": "external: external [8691,8699]"
    },
    {
      "src": "call_argument [35772,35781]",
      "dest": "call_argument [35772,35781]"
    },
    {
      "src": "): ) [36048,36049]",
      "dest": "): ) [36048,36049]"
    },
    {
      "src": "parameter [27395,27412]",
      "dest": "parameter [27395,27412]"
    },
    {
      "src": "\": \" [21370,21371]",
      "dest": "\": \" [21370,21371]"
    },
    {
      "src": "function_definition [25547,25603]",
      "dest": "function_definition [25547,25603]"
    },
    {
      "src": "internal: internal [13427,13435]",
      "dest": "internal: internal [13427,13435]"
    },
    {
      "src": "return: return [37485,37491]",
      "dest": "return: return [37485,37491]"
    },
    {
      "src": "parameter [32732,32746]",
      "dest": "parameter [32732,32746]"
    },
    {
      "src": "\": \" [19392,19393]",
      "dest": "\": \" [19392,19393]"
    },
    {
      "src": "returns: returns [16825,16832]",
      "dest": "returns: returns [16825,16832]"
    },
    {
      "src": "call_argument [14221,14256]",
      "dest": "call_argument [14221,14256]"
    },
    {
      "src": "variable_declaration [12539,12548]",
      "dest": "variable_declaration [12539,12548]"
    },
    {
      "src": "call_argument [31341,31351]",
      "dest": "call_argument [31341,31351]"
    },
    {
      "src": "identifier: sender [27595,27601]",
      "dest": "identifier: sender [27595,27601]"
    },
    {
      "src": "identifier: _initializing [1681,1694]",
      "dest": "identifier: _initializing [1681,1694]"
    },
    {
      "src": "identifier: token [11360,11365]",
      "dest": "identifier: token [11360,11365]"
    },
    {
      "src": ",: , [36143,36144]",
      "dest": ",: , [36143,36144]"
    },
    {
      "src": "(: ( [13449,13450]",
      "dest": "(: ( [13449,13450]"
    },
    {
      "src": "identifier: _initialized [4817,4829]",
      "dest": "identifier: _initialized [4817,4829]"
    },
    {
      "src": "expression_statement [27495,27532]",
      "dest": "expression_statement [27495,27532]"
    },
    {
      "src": "state_mutability [34357,34361]",
      "dest": "state_mutability [34357,34361]"
    },
    {
      "src": ",: , [35781,35782]",
      "dest": ",: , [35781,35782]"
    },
    {
      "src": ",: , [33841,33842]",
      "dest": ",: , [33841,33842]"
    },
    {
      "src": "(: ( [19161,19162]",
      "dest": "(: ( [19161,19162]"
    },
    {
      "src": "if: if [14114,14116]",
      "dest": "if: if [14114,14116]"
    },
    {
      "src": "returns: returns [34459,34466]",
      "dest": "returns: returns [34459,34466]"
    },
    {
      "src": "public: public [26747,26753]",
      "dest": "public: public [26747,26753]"
    },
    {
      "src": "override: override [26465,26473]",
      "dest": "override: override [26465,26473]"
    },
    {
      "src": "): ) [37825,37826]",
      "dest": "): ) [37826,37827]"
    },
    {
      "src": "{: { [22442,22443]",
      "dest": "{: { [22442,22443]"
    },
    {
      "src": "return: return [13003,13009]",
      "dest": "return: return [13003,13009]"
    },
    {
      "src": "type_name [22291,22295]",
      "dest": "type_name [22291,22295]"
    },
    {
      "src": "call_expression [11474,11507]",
      "dest": "call_expression [11474,11507]"
    },
    {
      "src": "type_name [22050,22055]",
      "dest": "type_name [22050,22055]"
    },
    {
      "src": "identifier: amount [38052,38058]",
      "dest": "identifier: amount [38053,38059]"
    },
    {
      "src": ",: , [13397,13398]",
      "dest": ",: , [13397,13398]"
    },
    {
      "src": "identifier: returndata_size [22766,22781]",
      "dest": "identifier: returndata_size [22766,22781]"
    },
    {
      "src": "event_paramater [10672,10693]",
      "dest": "event_paramater [10672,10693]"
    },
    {
      "src": "comment: // pragma solidity 0.6.10; [23050,23076]",
      "dest": "comment: // pragma solidity 0.6.10; [23050,23076]"
    },
    {
      "src": "[: [ [28256,28257]",
      "dest": "[: [ [28256,28257]"
    },
    {
      "src": "identifier: data [21256,21260]",
      "dest": "identifier: data [21256,21260]"
    },
    {
      "src": "{: { [11098,11099]",
      "dest": "{: { [11098,11099]"
    },
    {
      "src": "return_statement [22407,22425]",
      "dest": "return_statement [22407,22425]"
    },
    {
      "src": "expression_statement [7422,7488]",
      "dest": "expression_statement [7422,7488]"
    },
    {
      "src": "type_name [16157,16164]",
      "dest": "type_name [16157,16164]"
    },
    {
      "src": "identifier: cs [5601,5603]",
      "dest": "identifier: cs [5601,5603]"
    },
    {
      "src": "identifier: symbol [37527,37533]",
      "dest": "identifier: symbol [37527,37533]"
    },
    {
      "src": "type_cast_expression [21838,21851]",
      "dest": "type_cast_expression [21838,21851]"
    },
    {
      "src": ".: . [31295,31296]",
      "dest": ".: . [31295,31296]"
    },
    {
      "src": "parameter [35561,35578]",
      "dest": "parameter [35561,35578]"
    },
    {
      "src": "): ) [37219,37220]",
      "dest": "): ) [37219,37220]"
    },
    {
      "src": "number_literal: 0 [31961,31962]",
      "dest": "number_literal: 0 [31961,31962]"
    },
    {
      "src": "(: ( [10236,10237]",
      "dest": "(: ( [10236,10237]"
    },
    {
      "src": "identifier: _allowances [28955,28966]",
      "dest": "identifier: _allowances [28955,28966]"
    },
    {
      "src": "): ) [27658,27659]",
      "dest": "): ) [27658,27659]"
    },
    {
      "src": "boolean_literal [26852,26856]",
      "dest": "boolean_literal [26852,26856]"
    },
    {
      "src": "identifier: account [8368,8375]",
      "dest": "identifier: account [8368,8375]"
    },
    {
      "src": "binary_expression [22528,22549]",
      "dest": "binary_expression [22528,22549]"
    },
    {
      "src": "call_argument [31220,31256]",
      "dest": "call_argument [31220,31256]"
    },
    {
      "src": "parameter [16191,16198]",
      "dest": "parameter [16191,16198]"
    },
    {
      "src": "): ) [26495,26496]",
      "dest": "): ) [26495,26496]"
    },
    {
      "src": "}: } [35534,35535]",
      "dest": "}: } [35534,35535]"
    },
    {
      "src": "}: } [33427,33428]",
      "dest": "}: } [33427,33428]"
    },
    {
      "src": "}: } [29079,29080]",
      "dest": "}: } [29079,29080]"
    },
    {
      "src": "modifier: modifier [4545,4553]",
      "dest": "modifier: modifier [4545,4553]"
    },
    {
      "src": ",: , [22048,22049]",
      "dest": ",: , [22048,22049]"
    },
    {
      "src": "parameter [37566,37579]",
      "dest": "parameter [37566,37579]"
    },
    {
      "src": "[: [ [30577,30578]",
      "dest": "[: [ [30577,30578]"
    },
    {
      "src": "type_name [1783,1790]",
      "dest": "type_name [1783,1790]"
    },
    {
      "src": "return_type_definition [13441,13458]",
      "dest": "return_type_definition [13441,13458]"
    },
    {
      "src": "extcodesize: extcodesize [18071,18082]",
      "dest": "extcodesize: extcodesize [18071,18082]"
    },
    {
      "src": "=: = [11317,11318]",
      "dest": "=: = [11317,11318]"
    },
    {
      "src": "): ) [37943,37944]",
      "dest": "): ) [37944,37945]"
    },
    {
      "src": "call_expression [35343,35457]",
      "dest": "call_expression [35343,35457]"
    },
    {
      "src": "): ) [28280,28281]",
      "dest": "): ) [28280,28281]"
    },
    {
      "src": "state_mutability [25067,25071]",
      "dest": "state_mutability [25067,25071]"
    },
    {
      "src": "type_name [6764,6771]",
      "dest": "type_name [6764,6771]"
    },
    {
      "src": "identifier: symbol [25043,25049]",
      "dest": "identifier: symbol [25043,25049]"
    },
    {
      "src": "identifier: initialize [37107,37117]",
      "dest": "identifier: initialize [37107,37117]"
    },
    {
      "src": "indexed: indexed [33944,33951]",
      "dest": "indexed: indexed [33944,33951]"
    },
    {
      "src": "primitive_type [38044,38051]",
      "dest": "primitive_type [38045,38052]"
    },
    {
      "src": "call_argument [7106,7116]",
      "dest": "call_argument [7106,7116]"
    },
    {
      "src": "(: ( [29811,29812]",
      "dest": "(: ( [29811,29812]"
    },
    {
      "src": ".: . [30012,30013]",
      "dest": ".: . [30012,30013]"
    },
    {
      "src": "identifier: b [16165,16166]",
      "dest": "identifier: b [16165,16166]"
    },
    {
      "src": "(: ( [4565,4566]",
      "dest": "(: ( [4565,4566]"
    },
    {
      "src": "address: address [26181,26188]",
      "dest": "address: address [26181,26188]"
    },
    {
      "src": ",: , [13018,13019]",
      "dest": ",: , [13018,13019]"
    },
    {
      "src": "contract_body [17107,22984]",
      "dest": "contract_body [17107,22984]"
    },
    {
      "src": "identifier: returndata [22528,22538]",
      "dest": "identifier: returndata [22528,22538]"
    },
    {
      "src": "identifier: _initialized [4624,4636]",
      "dest": "identifier: _initialized [4624,4636]"
    },
    {
      "src": "}: } [4941,4942]",
      "dest": "}: } [4941,4942]"
    },
    {
      "src": "identifier: Initializable [36887,36900]",
      "dest": "identifier: Initializable [36887,36900]"
    },
    {
      "src": "identifier: call [22339,22343]",
      "dest": "identifier: call [22339,22343]"
    },
    {
      "src": "parameter [12949,12958]",
      "dest": "parameter [12949,12958]"
    },
    {
      "src": "type_name [1965,1972]",
      "dest": "type_name [1965,1972]"
    },
    {
      "src": "call_argument [29732,29771]",
      "dest": "call_argument [29732,29771]"
    },
    {
      "src": "(: ( [21845,21846]",
      "dest": "(: ( [21845,21846]"
    },
    {
      "src": "): ) [31359,31360]",
      "dest": "): ) [31359,31360]"
    },
    {
      "src": "identifier: transferFrom [10155,10167]",
      "dest": "identifier: transferFrom [10155,10167]"
    },
    {
      "src": "function_definition [38012,38249]",
      "dest": "function_definition [38013,38250]"
    },
    {
      "src": "identifier: amount [32173,32179]",
      "dest": "identifier: amount [32173,32179]"
    },
    {
      "src": "type_name [25897,25904]",
      "dest": "type_name [25897,25904]"
    },
    {
      "src": "address: address [38027,38034]",
      "dest": "address: address [38028,38035]"
    },
    {
      "src": "function_definition [12925,13061]",
      "dest": "function_definition [12925,13061]"
    },
    {
      "src": "call_argument [27615,27657]",
      "dest": "call_argument [27615,27657]"
    },
    {
      "src": "call_argument [20800,20812]",
      "dest": "call_argument [20800,20812]"
    },
    {
      "src": "identifier: amount [31052,31058]",
      "dest": "identifier: amount [31052,31058]"
    },
    {
      "src": "!=: != [32031,32033]",
      "dest": "!=: != [32031,32033]"
    },
    {
      "src": "primitive_type [10720,10727]",
      "dest": "primitive_type [10720,10727]"
    },
    {
      "src": "interface_declaration [8100,10738]",
      "dest": "interface_declaration [8100,10738]"
    },
    {
      "src": "event_paramater [10435,10455]",
      "dest": "event_paramater [10435,10455]"
    },
    {
      "src": "comment: // yield zero, making it an effective way to detect if a contract is [5343,5411]",
      "dest": "comment: // yield zero, making it an effective way to detect if a contract is [5343,5411]"
    },
    {
      "src": "virtual: virtual [35010,35017]",
      "dest": "virtual: virtual [35010,35017]"
    },
    {
      "src": "extcodesize: extcodesize [5607,5618]",
      "dest": "extcodesize: extcodesize [5607,5618]"
    },
    {
      "src": "identifier: amount [29909,29915]",
      "dest": "identifier: amount [29909,29915]"
    },
    {
      "src": "): ) [32179,32180]",
      "dest": "): ) [32179,32180]"
    },
    {
      "src": "expression_statement [37837,37945]",
      "dest": "expression_statement [37838,37946]"
    },
    {
      "src": "binary_expression [15504,15509]",
      "dest": "binary_expression [15504,15509]"
    },
    {
      "src": "visibility [13427,13435]",
      "dest": "visibility [13427,13435]"
    },
    {
      "src": ",: , [10693,10694]",
      "dest": ",: , [10693,10694]"
    },
    {
      "src": "==: == [5655,5657]",
      "dest": "==: == [5655,5657]"
    },
    {
      "src": "(: ( [15475,15476]",
      "dest": "(: ( [15475,15476]"
    },
    {
      "src": "{: { [4193,4194]",
      "dest": "{: { [4193,4194]"
    },
    {
      "src": "}: } [37612,37613]",
      "dest": "}: } [37613,37614]"
    },
    {
      "src": "string_literal [36320,36371]",
      "dest": "string_literal [36320,36371]"
    },
    {
      "src": "identifier: data [21357,21361]",
      "dest": "identifier: data [21357,21361]"
    },
    {
      "src": "): ) [22113,22114]",
      "dest": "): ) [22113,22114]"
    },
    {
      "src": "): ) [21910,21911]",
      "dest": "): ) [21910,21911]"
    },
    {
      "src": "member_expression [7059,7069]",
      "dest": "member_expression [7059,7069]"
    },
    {
      "src": "state_mutability [9059,9063]",
      "dest": "state_mutability [9059,9063]"
    },
    {
      "src": ",: , [34215,34216]",
      "dest": ",: , [34215,34216]"
    },
    {
      "src": "identifier: this [11343,11347]",
      "dest": "identifier: this [11343,11347]"
    },
    {
      "src": "string_literal [21370,21413]",
      "dest": "string_literal [21370,21413]"
    },
    {
      "src": "member_expression [7440,7450]",
      "dest": "member_expression [7440,7450]"
    },
    {
      "src": "[: [ [29876,29877]",
      "dest": "[: [ [29876,29877]"
    },
    {
      "src": "string [32046,32082]",
      "dest": "string [32046,32082]"
    },
    {
      "src": "event_paramater [10477,10490]",
      "dest": "event_paramater [10477,10490]"
    },
    {
      "src": "type_name [25850,25857]",
      "dest": "type_name [25850,25857]"
    },
    {
      "src": "comment: // Dependency file: contracts/true-gold/TrueMintableBurnable.sol [33434,33498]",
      "dest": "comment: // Dependency file: contracts/true-gold/TrueMintableBurnable.sol [33434,33498]"
    },
    {
      "src": "): ) [21817,21818]",
      "dest": "): ) [21817,21818]"
    },
    {
      "src": "state_mutability [13436,13440]",
      "dest": "state_mutability [13436,13440]"
    },
    {
      "src": "call_expression [22165,22183]",
      "dest": "call_expression [22165,22183]"
    },
    {
      "src": ",: , [33159,33160]",
      "dest": ",: , [33159,33160]"
    },
    {
      "src": "call_argument [38146,38201]",
      "dest": "call_argument [38147,38202]"
    },
    {
      "src": "(: ( [38224,38225]",
      "dest": "(: ( [38225,38226]"
    },
    {
      "src": "(: ( [8655,8656]",
      "dest": "(: ( [8655,8656]"
    },
    {
      "src": "identifier: REDEMPTION_ADDRESS_COUNT [35725,35749]",
      "dest": "identifier: REDEMPTION_ADDRESS_COUNT [35725,35749]"
    },
    {
      "src": "bool: bool [19311,19315]",
      "dest": "bool: bool [19311,19315]"
    },
    {
      "src": "using_directive [36952,36979]",
      "dest": "using_directive [36952,36979]"
    },
    {
      "src": "array_access [32096,32123]",
      "dest": "array_access [32096,32123]"
    },
    {
      "src": "yul_function_call [22824,22868]",
      "dest": "yul_function_call [22824,22868]"
    },
    {
      "src": "bool: bool [9822,9826]",
      "dest": "bool: bool [9822,9826]"
    },
    {
      "src": "user_defined_type [36933,36944]",
      "dest": "user_defined_type [36933,36944]"
    },
    {
      "src": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * // importANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [18134,19058]",
      "dest": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * // importANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [18134,19058]"
    },
    {
      "src": ".: . [27594,27595]",
      "dest": ".: . [27594,27595]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [15676,16127]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [15676,16127]"
    },
    {
      "src": "type_cast_expression [35351,35367]",
      "dest": "type_cast_expression [35351,35367]"
    },
    {
      "src": "): ) [30504,30505]",
      "dest": "): ) [30504,30505]"
    },
    {
      "src": "function_definition [29570,30083]",
      "dest": "function_definition [29570,30083]"
    },
    {
      "src": "override: override [37689,37697]",
      "dest": "override: override [37690,37698]"
    },
    {
      "src": "uint256: uint256 [13450,13457]",
      "dest": "uint256: uint256 [13450,13457]"
    },
    {
      "src": "uint256: uint256 [34984,34991]",
      "dest": "uint256: uint256 [34984,34991]"
    },
    {
      "src": "function: function [30364,30372]",
      "dest": "function: function [30364,30372]"
    },
    {
      "src": "identifier: account [38035,38042]",
      "dest": "identifier: account [38036,38043]"
    },
    {
      "src": "}: } [19460,19461]",
      "dest": "}: } [19460,19461]"
    },
    {
      "src": "identifier: recipient [35904,35913]",
      "dest": "identifier: recipient [35904,35913]"
    },
    {
      "src": "identifier: a [14213,14214]",
      "dest": "identifier: a [14213,14214]"
    },
    {
      "src": "identifier: a [12946,12947]",
      "dest": "identifier: a [12946,12947]"
    },
    {
      "src": "identifier: sender [33255,33261]",
      "dest": "identifier: sender [33255,33261]"
    },
    {
      "src": "call_argument [34286,34299]",
      "dest": "call_argument [34286,34299]"
    },
    {
      "src": "*: * [14187,14188]",
      "dest": "*: * [14187,14188]"
    },
    {
      "src": "): ) [35001,35002]",
      "dest": "): ) [35001,35002]"
    },
    {
      "src": "assignment_expression [7050,7069]",
      "dest": "assignment_expression [7050,7069]"
    },
    {
      "src": ".: . [30545,30546]",
      "dest": ".: . [30545,30546]"
    },
    {
      "src": "true [36181,36185]",
      "dest": "true [36181,36185]"
    },
    {
      "src": "visibility [37429,37435]",
      "dest": "visibility [37429,37435]"
    },
    {
      "src": "): ) [30410,30411]",
      "dest": "): ) [30410,30411]"
    },
    {
      "src": "expression_statement [4782,4803]",
      "dest": "expression_statement [4782,4803]"
    },
    {
      "src": "(: ( [26180,26181]",
      "dest": "(: ( [26180,26181]"
    },
    {
      "src": "}: } [14285,14286]",
      "dest": "}: } [14285,14286]"
    },
    {
      "src": "}: } [22886,22887]",
      "dest": "}: } [22886,22887]"
    },
    {
      "src": "(: ( [13827,13828]",
      "dest": "(: ( [13827,13828]"
    },
    {
      "src": "=: = [4796,4797]",
      "dest": "=: = [4796,4797]"
    },
    {
      "src": "): ) [19325,19326]",
      "dest": "): ) [19325,19326]"
    },
    {
      "src": "call_expression [29702,29772]",
      "dest": "call_expression [29702,29772]"
    },
    {
      "src": "parameter [36216,36231]",
      "dest": "parameter [36216,36231]"
    },
    {
      "src": "call_expression [11319,11349]",
      "dest": "call_expression [11319,11349]"
    },
    {
      "src": "): ) [34083,34084]",
      "dest": "): ) [34083,34084]"
    },
    {
      "src": ".: . [28970,28971]",
      "dest": ".: . [28970,28971]"
    },
    {
      "src": ".: . [37960,37961]",
      "dest": ".: . [37961,37962]"
    },
    {
      "src": ">: > [35368,35369]",
      "dest": ">: > [35368,35369]"
    },
    {
      "src": "call_expression [33395,33417]",
      "dest": "call_expression [33395,33417]"
    },
    {
      "src": "): ) [35366,35367]",
      "dest": "): ) [35366,35367]"
    },
    {
      "src": "primitive_type [33864,33871]",
      "dest": "primitive_type [33864,33871]"
    },
    {
      "src": "identifier: BURN_AMOUNT_MULTIPLIER [37741,37763]",
      "dest": "identifier: BURN_AMOUNT_MULTIPLIER [37742,37764]"
    },
    {
      "src": "type_name [26181,26188]",
      "dest": "type_name [26181,26188]"
    },
    {
      "src": "identifier: minAmount [34973,34982]",
      "dest": "identifier: minAmount [34973,34982]"
    },
    {
      "src": "{: { [31077,31078]",
      "dest": "{: { [31077,31078]"
    },
    {
      "src": "call_argument [38116,38138]",
      "dest": "call_argument [38117,38139]"
    },
    {
      "src": "member_expression [28233,28269]",
      "dest": "member_expression [28233,28269]"
    },
    {
      "src": "address: address [1772,1779]",
      "dest": "address: address [1772,1779]"
    },
    {
      "src": "identifier: Reclaimable [11075,11086]",
      "dest": "identifier: Reclaimable [11075,11086]"
    },
    {
      "src": "\": \" [4638,4639]",
      "dest": "\": \" [4638,4639]"
    },
    {
      "src": "yul_function_call [18071,18091]",
      "dest": "yul_function_call [18071,18091]"
    },
    {
      "src": "identifier: amount [19179,19185]",
      "dest": "identifier: amount [19179,19185]"
    },
    {
      "src": "type_name [36987,36992]",
      "dest": "type_name [36987,36992]"
    },
    {
      "src": "binary_expression [38105,38144]",
      "dest": "binary_expression [38106,38145]"
    },
    {
      "src": "identifier: amount [33410,33416]",
      "dest": "identifier: amount [33410,33416]"
    },
    {
      "src": "function_definition [32718,32807]",
      "dest": "function_definition [32718,32807]"
    },
    {
      "src": "(: ( [5618,5619]",
      "dest": "(: ( [5618,5619]"
    },
    {
      "src": "primitive_type [21744,21751]",
      "dest": "primitive_type [21744,21751]"
    },
    {
      "src": "identifier: owner [26426,26431]",
      "dest": "identifier: owner [26426,26431]"
    },
    {
      "src": "type_alias [24590,24597]",
      "dest": "type_alias [24590,24597]"
    },
    {
      "src": ",: , [38042,38043]",
      "dest": ",: , [38043,38044]"
    },
    {
      "src": "identifier: data [22063,22067]",
      "dest": "identifier: data [22063,22067]"
    },
    {
      "src": "function_definition [25831,25950]",
      "dest": "function_definition [25831,25950]"
    },
    {
      "src": "expression_statement [31268,31308]",
      "dest": "expression_statement [31268,31308]"
    },
    {
      "src": "type_name [5499,5506]",
      "dest": "type_name [5499,5506]"
    },
    {
      "src": "call_argument [7760,7782]",
      "dest": "call_argument [7760,7782]"
    },
    {
      "src": "pure: pure [12505,12509]",
      "dest": "pure: pure [12505,12509]"
    },
    {
      "src": "member_expression [26276,26286]",
      "dest": "member_expression [26276,26286]"
    },
    {
      "src": "): ) [31058,31059]",
      "dest": "): ) [31058,31059]"
    },
    {
      "src": "call_expression [35654,35687]",
      "dest": "call_expression [35654,35687]"
    },
    {
      "src": "type_cast_expression [31341,31351]",
      "dest": "type_cast_expression [31341,31351]"
    },
    {
      "src": "inheritance_specifier [32597,32602]",
      "dest": "inheritance_specifier [32597,32602]"
    },
    {
      "src": "primitive_type [36233,36240]",
      "dest": "primitive_type [36233,36240]"
    },
    {
      "src": "contract_declaration [24496,32191]",
      "dest": "contract_declaration [24496,32191]"
    },
    {
      "src": "): ) [25689,25690]",
      "dest": "): ) [25689,25690]"
    },
    {
      "src": "function: function [5798,5806]",
      "dest": "function: function [5798,5806]"
    },
    {
      "src": ",: , [33363,33364]",
      "dest": ",: , [33363,33364]"
    },
    {
      "src": "call_argument [11335,11348]",
      "dest": "call_argument [11335,11348]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [26558,26691]",
      "dest": "comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [26558,26691]"
    },
    {
      "src": "identifier: size [17980,17984]",
      "dest": "identifier: size [17980,17984]"
    },
    {
      "src": "identifier: account [18083,18090]",
      "dest": "identifier: account [18083,18090]"
    },
    {
      "src": "array_access [26515,26533]",
      "dest": "array_access [26515,26533]"
    },
    {
      "src": "parameter [13828,13837]",
      "dest": "parameter [13828,13837]"
    },
    {
      "src": ",: , [14219,14220]",
      "dest": ",: , [14219,14220]"
    },
    {
      "src": "(: ( [11374,11375]",
      "dest": "(: ( [11374,11375]"
    },
    {
      "src": "user_defined_type [4180,4192]",
      "dest": "user_defined_type [4180,4192]"
    },
    {
      "src": "address: address [5825,5832]",
      "dest": "address: address [5825,5832]"
    },
    {
      "src": ",: , [34010,34011]",
      "dest": ",: , [34010,34011]"
    },
    {
      "src": "(: ( [26248,26249]",
      "dest": "(: ( [26248,26249]"
    },
    {
      "src": "virtual: virtual [25059,25066]",
      "dest": "virtual: virtual [25059,25066]"
    },
    {
      "src": "identifier: recipient [36134,36143]",
      "dest": "identifier: recipient [36134,36143]"
    },
    {
      "src": "call_argument [37859,37881]",
      "dest": "call_argument [37860,37882]"
    },
    {
      "src": "{: { [7411,7412]",
      "dest": "{: { [7411,7412]"
    },
    {
      "src": "{: { [5791,5792]",
      "dest": "{: { [5791,5792]"
    },
    {
      "src": ">=: >= [36301,36303]",
      "dest": ">=: >= [36301,36303]"
    },
    {
      "src": "call_argument [27571,27658]",
      "dest": "call_argument [27571,27658]"
    },
    {
      "src": "parameter [20260,20277]",
      "dest": "parameter [20260,20277]"
    },
    {
      "src": "block_statement [22908,22963]",
      "dest": "block_statement [22908,22963]"
    },
    {
      "src": "return_statement [25741,25761]",
      "dest": "return_statement [25741,25761]"
    },
    {
      "src": "\": \" [37604,37605]",
      "dest": "\": \" [37605,37606]"
    },
    {
      "src": "}: } [38003,38004]",
      "dest": "}: } [38004,38005]"
    },
    {
      "src": "identifier: _initializing [4587,4600]",
      "dest": "identifier: _initializing [4587,4600]"
    },
    {
      "src": "expression_statement [7890,7908]",
      "dest": "expression_statement [7890,7908]"
    },
    {
      "src": "(: ( [16760,16761]",
      "dest": "(: ( [16760,16761]"
    },
    {
      "src": "type_name [13399,13405]",
      "dest": "type_name [13399,13405]"
    },
    {
      "src": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [13893,13972]",
      "dest": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [13893,13972]"
    },
    {
      "src": "identifier: SafeMath [36958,36966]",
      "dest": "identifier: SafeMath [36958,36966]"
    },
    {
      "src": "type_name [14775,14782]",
      "dest": "type_name [14775,14782]"
    },
    {
      "src": "comment: // TrueMintableBurnable.sol [1903,1930]",
      "dest": "comment: // TrueMintableBurnable.sol [1903,1930]"
    },
    {
      "src": ",: , [35578,35579]",
      "dest": ",: , [35578,35579]"
    },
    {
      "src": "comment: // Dependency file: contracts/true-gold/common/ERC20.sol [22990,23046]",
      "dest": "comment: // Dependency file: contracts/true-gold/common/ERC20.sol [22990,23046]"
    },
    {
      "src": "identifier: amount [35483,35489]",
      "dest": "identifier: amount [35483,35489]"
    },
    {
      "src": "comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20MinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [23315,24494]",
      "dest": "comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20MinterPauser}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [23315,24494]"
    },
    {
      "src": "function_body [36275,36555]",
      "dest": "function_body [36275,36555]"
    },
    {
      "src": ",: , [36909,36910]",
      "dest": ",: , [36909,36910]"
    },
    {
      "src": "parameter [12474,12483]",
      "dest": "parameter [12474,12483]"
    },
    {
      "src": "primitive_type [34371,34378]",
      "dest": "primitive_type [34371,34378]"
    },
    {
      "src": "address: address [31953,31960]",
      "dest": "address: address [31953,31960]"
    },
    {
      "src": "returns: returns [20288,20295]",
      "dest": "returns: returns [20288,20295]"
    },
    {
      "src": "function_body [12528,12642]",
      "dest": "function_body [12528,12642]"
    },
    {
      "src": "return: return [21320,21326]",
      "dest": "return: return [21320,21326]"
    },
    {
      "src": "identifier: errorMessage [20696,20708]",
      "dest": "identifier: errorMessage [20696,20708]"
    },
    {
      "src": "parameter [22034,22048]",
      "dest": "parameter [22034,22048]"
    },
    {
      "src": "parameter [16146,16155]",
      "dest": "parameter [16146,16155]"
    },
    {
      "src": "identifier: require [36286,36293]",
      "dest": "identifier: require [36286,36293]"
    },
    {
      "src": ",: , [26816,26817]",
      "dest": ",: , [26816,26817]"
    },
    {
      "src": "call_argument [28270,28280]",
      "dest": "call_argument [28270,28280]"
    },
    {
      "src": "uint256: uint256 [17972,17979]",
      "dest": "uint256: uint256 [17972,17979]"
    },
    {
      "src": "uint256: uint256 [13510,13517]",
      "dest": "uint256: uint256 [13510,13517]"
    },
    {
      "src": "view: view [8230,8234]",
      "dest": "view: view [8230,8234]"
    },
    {
      "src": "): ) [21307,21308]",
      "dest": "): ) [21307,21308]"
    },
    {
      "src": "call_expression [20327,20387]",
      "dest": "call_expression [20327,20387]"
    },
    {
      "src": "library_declaration [12198,16917]",
      "dest": "library_declaration [12198,16917]"
    },
    {
      "src": "expression_statement [38213,38242]",
      "dest": "expression_statement [38214,38243]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/ProxyStorage.sol\"; [6012,6068]",
      "dest": "comment: // import \"contracts/true-gold/common/ProxyStorage.sol\"; [6012,6068]"
    },
    {
      "src": "comment: // constructor execution. [17935,17960]",
      "dest": "comment: // constructor execution. [17935,17960]"
    },
    {
      "src": "call_argument [35654,35687]",
      "dest": "call_argument [35654,35687]"
    },
    {
      "src": "virtual: virtual [7714,7721]",
      "dest": "virtual: virtual [7714,7721]"
    },
    {
      "src": "): ) [12526,12527]",
      "dest": "): ) [12526,12527]"
    },
    {
      "src": "block_statement [14126,14161]",
      "dest": "block_statement [14126,14161]"
    },
    {
      "src": "primitive_type [17972,17979]",
      "dest": "primitive_type [17972,17979]"
    },
    {
      "src": "): ) [21785,21786]",
      "dest": "): ) [21785,21786]"
    },
    {
      "src": "visibility [17741,17749]",
      "dest": "visibility [17741,17749]"
    },
    {
      "src": "comment: /**      * @dev Destroys `amount` tokens from the caller.      *      * See {ERC20-_burn}.      */ [32610,32712]",
      "dest": "comment: /**      * @dev Destroys `amount` tokens from the caller.      *      * See {ERC20-_burn}.      */ [32610,32712]"
    },
    {
      "src": "emit_statement [36521,36548]",
      "dest": "emit_statement [36521,36548]"
    },
    {
      "src": "identifier: account [31096,31103]",
      "dest": "identifier: account [31096,31103]"
    },
    {
      "src": "identifier: spender [9041,9048]",
      "dest": "identifier: spender [9041,9048]"
    },
    {
      "src": "state_mutability [8386,8390]",
      "dest": "state_mutability [8386,8390]"
    },
    {
      "src": "call_argument [35783,35789]",
      "dest": "call_argument [35783,35789]"
    },
    {
      "src": "]: ] [31185,31186]",
      "dest": "]: ] [31185,31186]"
    },
    {
      "src": "type_name [33203,33210]",
      "dest": "type_name [33203,33210]"
    },
    {
      "src": "address: address [1723,1730]",
      "dest": "address: address [1723,1730]"
    },
    {
      "src": "string [7784,7824]",
      "dest": "string [7784,7824]"
    },
    {
      "src": "identifier: ownable [11437,11444]",
      "dest": "identifier: ownable [11437,11444]"
    },
    {
      "src": "return_statement [5645,5660]",
      "dest": "return_statement [5645,5660]"
    },
    {
      "src": "(: ( [8359,8360]",
      "dest": "(: ( [8359,8360]"
    },
    {
      "src": "comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [25104,25541]",
      "dest": "comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [25104,25541]"
    },
    {
      "src": "internal: internal [31060,31068]",
      "dest": "internal: internal [31060,31068]"
    },
    {
      "src": "identifier: require [35039,35046]",
      "dest": "identifier: require [35039,35046]"
    },
    {
      "src": "inheritance_specifier [36887,36900]",
      "dest": "inheritance_specifier [36887,36900]"
    },
    {
      "src": "type_name [13873,13880]",
      "dest": "type_name [13873,13880]"
    },
    {
      "src": "]: ] [26541,26542]",
      "dest": "]: ] [26541,26542]"
    },
    {
      "src": ",: , [26431,26432]",
      "dest": ",: , [26431,26432]"
    },
    {
      "src": "): ) [24913,24914]",
      "dest": "): ) [24913,24914]"
    },
    {
      "src": "function_definition [26399,26550]",
      "dest": "function_definition [26399,26550]"
    },
    {
      "src": "identifier: errorMessage [16870,16882]",
      "dest": "identifier: errorMessage [16870,16882]"
    },
    {
      "src": "primitive_type [20682,20688]",
      "dest": "primitive_type [20682,20688]"
    },
    {
      "src": "{: { [33192,33193]",
      "dest": "{: { [33192,33193]"
    },
    {
      "src": "primitive_type [37566,37572]",
      "dest": "primitive_type [37566,37572]"
    },
    {
      "src": "}: } [32806,32807]",
      "dest": "}: } [32806,32807]"
    },
    {
      "src": "call_expression [31088,31155]",
      "dest": "call_expression [31088,31155]"
    },
    {
      "src": "identifier: recipient [36073,36082]",
      "dest": "identifier: recipient [36073,36082]"
    },
    {
      "src": "(: ( [31825,31826]",
      "dest": "(: ( [31825,31826]"
    },
    {
      "src": "string [33275,33321]",
      "dest": "string [33275,33321]"
    },
    {
      "src": ",: , [29641,29642]",
      "dest": ",: , [29641,29642]"
    },
    {
      "src": "type_alias [36958,36966]",
      "dest": "type_alias [36958,36966]"
    },
    {
      "src": "returns: returns [9064,9071]",
      "dest": "returns: returns [9064,9071]"
    },
    {
      "src": "type_name [35580,35587]",
      "dest": "type_name [35580,35587]"
    },
    {
      "src": "function_body [35635,35831]",
      "dest": "function_body [35635,35831]"
    },
    {
      "src": "type_name [36216,36223]",
      "dest": "type_name [36216,36223]"
    },
    {
      "src": "call_expression [34272,34315]",
      "dest": "call_expression [34272,34315]"
    },
    {
      "src": "override_specifier [7722,7730]",
      "dest": "override_specifier [7722,7730]"
    },
    {
      "src": "{: { [11164,11165]",
      "dest": "{: { [11164,11165]"
    },
    {
      "src": "member_expression [11187,11208]",
      "dest": "member_expression [11187,11208]"
    },
    {
      "src": "parameter [17764,17768]",
      "dest": "parameter [17764,17768]"
    },
    {
      "src": "public: public [37334,37340]",
      "dest": "public: public [37334,37340]"
    },
    {
      "src": "function_definition [28815,29080]",
      "dest": "function_definition [28815,29080]"
    },
    {
      "src": "type_name [20663,20668]",
      "dest": "type_name [20663,20668]"
    },
    {
      "src": "call_argument [31961,31962]",
      "dest": "call_argument [31961,31962]"
    },
    {
      "src": "): ) [35305,35306]",
      "dest": "): ) [35305,35306]"
    },
    {
      "src": "string_literal [12583,12612]",
      "dest": "string_literal [12583,12612]"
    },
    {
      "src": "): ) [36509,36510]",
      "dest": "): ) [36509,36510]"
    },
    {
      "src": "uint8: uint8 [37364,37369]",
      "dest": "uint8: uint8 [37364,37369]"
    },
    {
      "src": "return_type_definition [9813,9827]",
      "dest": "return_type_definition [9813,9827]"
    },
    {
      "src": "memory: memory [20303,20309]",
      "dest": "memory: memory [20303,20309]"
    },
    {
      "src": "parameter [20663,20680]",
      "dest": "parameter [20663,20680]"
    },
    {
      "src": "inheritance_specifier [36902,36909]",
      "dest": "inheritance_specifier [36902,36909]"
    },
    {
      "src": "function_definition [35839,36193]",
      "dest": "function_definition [35839,36193]"
    },
    {
      "src": "if_statement [36061,36164]",
      "dest": "if_statement [36061,36164]"
    },
    {
      "src": "assignment_expression [31168,31257]",
      "dest": "assignment_expression [31168,31257]"
    },
    {
      "src": "expression_statement [29969,30025]",
      "dest": "expression_statement [29969,30025]"
    },
    {
      "src": "primitive_type [21262,21269]",
      "dest": "primitive_type [21262,21269]"
    },
    {
      "src": "uint256: uint256 [15414,15421]",
      "dest": "uint256: uint256 [15414,15421]"
    },
    {
      "src": "): ) [33416,33417]",
      "dest": "): ) [33416,33417]"
    },
    {
      "src": "type_name [8244,8251]",
      "dest": "type_name [8244,8251]"
    },
    {
      "src": "identifier: sender [26810,26816]",
      "dest": "identifier: sender [26810,26816]"
    },
    {
      "src": "view: view [7242,7246]",
      "dest": "view: view [7242,7246]"
    },
    {
      "src": "call_argument [21960,21964]",
      "dest": "call_argument [21960,21964]"
    },
    {
      "src": "inheritance_specifier [33819,33832]",
      "dest": "inheritance_specifier [33819,33832]"
    },
    {
      "src": "identifier: previousOwner [6780,6793]",
      "dest": "identifier: previousOwner [6780,6793]"
    },
    {
      "src": "pure: pure [37350,37354]",
      "dest": "pure: pure [37350,37354]"
    },
    {
      "src": "identifier: success [19316,19323]",
      "dest": "identifier: success [19316,19323]"
    },
    {
      "src": "type_name [14820,14827]",
      "dest": "type_name [14820,14827]"
    },
    {
      "src": "]: ] [28264,28265]",
      "dest": "]: ] [28264,28265]"
    },
    {
      "src": "identifier: add [30013,30016]",
      "dest": "identifier: add [30013,30016]"
    },
    {
      "src": "): ) [16809,16810]",
      "dest": "): ) [16809,16810]"
    },
    {
      "src": "type_name [12539,12546]",
      "dest": "type_name [12539,12546]"
    },
    {
      "src": "identifier: recipient [27513,27522]",
      "dest": "identifier: recipient [27513,27522]"
    },
    {
      "src": "type_name [37364,37369]",
      "dest": "type_name [37364,37369]"
    },
    {
      "src": "): ) [10217,10218]",
      "dest": "): ) [10217,10218]"
    },
    {
      "src": "identifier: value [21863,21868]",
      "dest": "identifier: value [21863,21868]"
    },
    {
      "src": "call_argument [33410,33416]",
      "dest": "call_argument [33410,33416]"
    },
    {
      "src": "function_definition [12461,12642]",
      "dest": "function_definition [12461,12642]"
    },
    {
      "src": "{: { [11290,11291]",
      "dest": "{: { [11290,11291]"
    },
    {
      "src": "call_argument [16862,16868]",
      "dest": "call_argument [16862,16868]"
    },
    {
      "src": "(: ( [22933,22934]",
      "dest": "(: ( [22933,22934]"
    },
    {
      "src": "memory: memory [13406,13412]",
      "dest": "memory: memory [13406,13412]"
    },
    {
      "src": "identifier: b [13017,13018]",
      "dest": "identifier: b [13017,13018]"
    },
    {
      "src": "return_type_definition [14811,14828]",
      "dest": "return_type_definition [14811,14828]"
    },
    {
      "src": "parameter [31027,31042]",
      "dest": "parameter [31027,31042]"
    },
    {
      "src": "variable_declaration_statement [33203,33323]",
      "dest": "variable_declaration_statement [33203,33323]"
    },
    {
      "src": "if: if [22524,22526]",
      "dest": "if: if [22524,22526]"
    },
    {
      "src": "string_literal [36417,36470]",
      "dest": "string_literal [36417,36470]"
    },
    {
      "src": "address: address [33936,33943]",
      "dest": "address: address [33936,33943]"
    },
    {
      "src": "=: = [33230,33231]",
      "dest": "=: = [33230,33231]"
    },
    {
      "src": "type_name [11127,11142]",
      "dest": "type_name [11127,11142]"
    },
    {
      "src": "user_defined_type [24537,24543]",
      "dest": "user_defined_type [24537,24543]"
    },
    {
      "src": "\": \" [19187,19188]",
      "dest": "\": \" [19187,19188]"
    },
    {
      "src": "identifier: ERC20 [24514,24519]",
      "dest": "identifier: ERC20 [24514,24519]"
    },
    {
      "src": "(: ( [31299,31300]",
      "dest": "(: ( [31299,31300]"
    },
    {
      "src": "call_expression [37194,37220]",
      "dest": "call_expression [37194,37220]"
    },
    {
      "src": "identifier: a [15547,15548]",
      "dest": "identifier: a [15547,15548]"
    },
    {
      "src": "call_argument [26276,26286]",
      "dest": "call_argument [26276,26286]"
    },
    {
      "src": "override_specifier [26762,26770]",
      "dest": "override_specifier [26762,26770]"
    },
    {
      "src": "identifier: maxAmount [35060,35069]",
      "dest": "identifier: maxAmount [35060,35069]"
    },
    {
      "src": "variable_declaration_statement [4700,4737]",
      "dest": "variable_declaration_statement [4700,4737]"
    },
    {
      "src": "identifier: div [14847,14850]",
      "dest": "identifier: div [14847,14850]"
    },
    {
      "src": "call_argument [29816,29853]",
      "dest": "call_argument [29816,29853]"
    },
    {
      "src": "expression_statement [26266,26307]",
      "dest": "expression_statement [26266,26307]"
    },
    {
      "src": "returns: returns [26771,26778]",
      "dest": "returns: returns [26771,26778]"
    },
    {
      "src": "call_argument [37741,37763]",
      "dest": "call_argument [37742,37764]"
    },
    {
      "src": "function: function [34331,34339]",
      "dest": "function: function [34331,34339]"
    },
    {
      "src": "identifier: amount [19352,19358]",
      "dest": "identifier: amount [19352,19358]"
    },
    {
      "src": "call_argument [4587,4636]",
      "dest": "call_argument [4587,4636]"
    },
    {
      "src": "return_type_definition [5080,5094]",
      "dest": "return_type_definition [5080,5094]"
    },
    {
      "src": "(: ( [8218,8219]",
      "dest": "(: ( [8218,8219]"
    },
    {
      "src": "(: ( [14117,14118]",
      "dest": "(: ( [14117,14118]"
    },
    {
      "src": "call_argument [26818,26825]",
      "dest": "call_argument [26818,26825]"
    },
    {
      "src": ",: , [36231,36232]",
      "dest": ",: , [36231,36232]"
    },
    {
      "src": "{: { [27484,27485]",
      "dest": "{: { [27484,27485]"
    },
    {
      "src": "(: ( [7105,7106]",
      "dest": "(: ( [7105,7106]"
    },
    {
      "src": "function_definition [26697,26864]",
      "dest": "function_definition [26697,26864]"
    },
    {
      "src": "call_expression [4579,4687]",
      "dest": "call_expression [4579,4687]"
    },
    {
      "src": "returns: returns [27469,27476]",
      "dest": "returns: returns [27469,27476]"
    },
    {
      "src": "): ) [29957,29958]",
      "dest": "): ) [29957,29958]"
    },
    {
      "src": "virtual: virtual [28169,28176]",
      "dest": "virtual: virtual [28169,28176]"
    },
    {
      "src": "type_name [26418,26425]",
      "dest": "type_name [26418,26425]"
    },
    {
      "src": "(: ( [37426,37427]",
      "dest": "(: ( [37426,37427]"
    },
    {
      "src": "expression_statement [15496,15525]",
      "dest": "expression_statement [15496,15525]"
    },
    {
      "src": "call_expression [35039,35119]",
      "dest": "call_expression [35039,35119]"
    },
    {
      "src": ".: . [11481,11482]",
      "dest": ".: . [11481,11482]"
    },
    {
      "src": "identifier: OwnershipTransferred [7841,7861]",
      "dest": "identifier: OwnershipTransferred [7841,7861]"
    },
    {
      "src": "): ) [7016,7017]",
      "dest": "): ) [7016,7017]"
    },
    {
      "src": ",: , [36501,36502]",
      "dest": ",: , [36501,36502]"
    },
    {
      "src": "string [37599,37605]",
      "dest": "string [37599,37606]"
    },
    {
      "src": "): ) [11208,11209]",
      "dest": "): ) [11208,11209]"
    },
    {
      "src": "unary_expression [4623,4636]",
      "dest": "unary_expression [4623,4636]"
    },
    {
      "src": "}: } [26863,26864]",
      "dest": "}: } [26863,26864]"
    },
    {
      "src": "expression_statement [35766,35791]",
      "dest": "expression_statement [35766,35791]"
    },
    {
      "src": "identifier: ERC20 [32597,32602]",
      "dest": "identifier: ERC20 [32597,32602]"
    },
    {
      "src": "type_name [34468,34475]",
      "dest": "type_name [34468,34475]"
    },
    {
      "src": "identifier: this [19162,19166]",
      "dest": "identifier: this [19162,19166]"
    },
    {
      "src": "uint256: uint256 [9788,9795]",
      "dest": "uint256: uint256 [9788,9795]"
    },
    {
      "src": "type_alias [24557,24565]",
      "dest": "type_alias [24557,24565]"
    },
    {
      "src": "primitive_type [5499,5506]",
      "dest": "primitive_type [5499,5506]"
    },
    {
      "src": "]: ] [28977,28978]",
      "dest": "]: ] [28977,28978]"
    },
    {
      "src": ",: , [32044,32045]",
      "dest": ",: , [32044,32045]"
    },
    {
      "src": "virtual: virtual [36258,36265]",
      "dest": "virtual: virtual [36258,36265]"
    },
    {
      "src": "(: ( [34285,34286]",
      "dest": "(: ( [34285,34286]"
    },
    {
      "src": "type_name [26731,26738]",
      "dest": "type_name [26731,26738]"
    },
    {
      "src": "string [29917,29957]",
      "dest": "string [29917,29957]"
    },
    {
      "src": "address: address [31341,31348]",
      "dest": "address: address [31341,31348]"
    },
    {
      "src": "call_expression [13010,13053]",
      "dest": "call_expression [13010,13053]"
    },
    {
      "src": "primitive_type [16157,16164]",
      "dest": "primitive_type [16157,16164]"
    },
    {
      "src": "call_expression [36286,36372]",
      "dest": "call_expression [36286,36372]"
    },
    {
      "src": ",: , [10182,10183]",
      "dest": ",: , [10182,10183]"
    },
    {
      "src": "parameter [34468,34475]",
      "dest": "parameter [34468,34475]"
    },
    {
      "src": "): ) [10733,10734]",
      "dest": "): ) [10733,10734]"
    },
    {
      "src": "binary_expression [16862,16868]",
      "dest": "binary_expression [16862,16868]"
    },
    {
      "src": "assignment_expression [7890,7907]",
      "dest": "assignment_expression [7890,7907]"
    },
    {
      "src": "call_argument [7870,7878]",
      "dest": "call_argument [7870,7878]"
    },
    {
      "src": "identifier: b [15551,15552]",
      "dest": "identifier: b [15551,15552]"
    },
    {
      "src": "parameter [28142,28160]",
      "dest": "parameter [28142,28160]"
    },
    {
      "src": ",: , [13015,13016]",
      "dest": ",: , [13015,13016]"
    },
    {
      "src": "identifier: target [21349,21355]",
      "dest": "identifier: target [21349,21355]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [25958,26157]",
      "dest": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [25958,26157]"
    },
    {
      "src": "(: ( [36003,36004]",
      "dest": "(: ( [36003,36004]"
    },
    {
      "src": "return: return [29061,29067]",
      "dest": "return: return [29061,29067]"
    },
    {
      "src": "identifier: msg [27559,27562]",
      "dest": "identifier: msg [27559,27562]"
    },
    {
      "src": "return_statement [21922,21987]",
      "dest": "return_statement [21922,21987]"
    },
    {
      "src": "return_type_definition [37557,37580]",
      "dest": "return_type_definition [37557,37580]"
    },
    {
      "src": "comment: // Dependency file: contracts/true-gold/common/ProxyStorage.sol [1460,1523]",
      "dest": "comment: // Dependency file: contracts/true-gold/common/ProxyStorage.sol [1460,1523]"
    },
    {
      "src": "binary_expression [7430,7450]",
      "dest": "binary_expression [7430,7450]"
    },
    {
      "src": "=: = [29885,29886]",
      "dest": "=: = [29885,29886]"
    },
    {
      "src": "identifier: msg [28934,28937]",
      "dest": "identifier: msg [28934,28937]"
    },
    {
      "src": "function_definition [8999,9082]",
      "dest": "function_definition [8999,9082]"
    },
    {
      "src": "parameter [8244,8251]",
      "dest": "parameter [8244,8251]"
    },
    {
      "src": "{: { [35332,35333]",
      "dest": "{: { [35332,35333]"
    },
    {
      "src": "true: true [26852,26856]",
      "dest": "true: true [26852,26856]"
    },
    {
      "src": "identifier: amount [36294,36300]",
      "dest": "identifier: amount [36294,36300]"
    },
    {
      "src": "(: ( [27477,27478]",
      "dest": "(: ( [27477,27478]"
    },
    {
      "src": "(: ( [37331,37332]",
      "dest": "(: ( [37331,37332]"
    },
    {
      "src": "assembly_statement [5577,5635]",
      "dest": "assembly_statement [5577,5635]"
    },
    {
      "src": "identifier: require [7422,7429]",
      "dest": "identifier: require [7422,7429]"
    },
    {
      "src": "function: function [16748,16756]",
      "dest": "function: function [16748,16756]"
    },
    {
      "src": "parameter [8656,8673]",
      "dest": "parameter [8656,8673]"
    },
    {
      "src": "type_name [26488,26495]",
      "dest": "type_name [26488,26495]"
    },
    {
      "src": "function_definition [7662,7915]",
      "dest": "function_definition [7662,7915]"
    },
    {
      "src": "function_body [27484,27689]",
      "dest": "function_body [27484,27689]"
    },
    {
      "src": ",: , [34067,34068]",
      "dest": ",: , [34067,34068]"
    },
    {
      "src": ",: , [12483,12484]",
      "dest": ",: , [12483,12484]"
    },
    {
      "src": "(: ( [26713,26714]",
      "dest": "(: ( [26713,26714]"
    },
    {
      "src": "return: return [18103,18109]",
      "dest": "return: return [18103,18109]"
    },
    {
      "src": "call_expression [22157,22217]",
      "dest": "call_expression [22157,22217]"
    },
    {
      "src": "identifier: _transfer [27495,27504]",
      "dest": "identifier: _transfer [27495,27504]"
    },
    {
      "src": "call_argument [22185,22216]",
      "dest": "call_argument [22185,22216]"
    },
    {
      "src": "comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [29088,29564]",
      "dest": "comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [29088,29564]"
    },
    {
      "src": "type_name [34217,34224]",
      "dest": "type_name [34217,34224]"
    },
    {
      "src": ",: , [26297,26298]",
      "dest": ",: , [26297,26298]"
    },
    {
      "src": "type_name [28125,28132]",
      "dest": "type_name [28125,28132]"
    },
    {
      "src": "parameter [28908,28912]",
      "dest": "parameter [28908,28912]"
    },
    {
      "src": "abstract: abstract [33763,33771]",
      "dest": "abstract: abstract [33763,33771]"
    },
    {
      "src": "{: { [21309,21310]",
      "dest": "{: { [21309,21310]"
    },
    {
      "src": "parameter [21744,21757]",
      "dest": "parameter [21744,21757]"
    },
    {
      "src": "type_name [1846,1853]",
      "dest": "type_name [1846,1853]"
    },
    {
      "src": "{: { [37708,37709]",
      "dest": "{: { [37709,37710]"
    },
    {
      "src": "identifier: _burn [38219,38224]",
      "dest": "identifier: _burn [38220,38225]"
    },
    {
      "src": "string [22185,22216]",
      "dest": "string [22185,22216]"
    },
    {
      "src": "identifier: success [22296,22303]",
      "dest": "identifier: success [22296,22303]"
    },
    {
      "src": "visibility [7707,7713]",
      "dest": "visibility [7707,7713]"
    },
    {
      "src": "primitive_type [34468,34475]",
      "dest": "primitive_type [34468,34475]"
    },
    {
      "src": "true [35819,35823]",
      "dest": "true [35819,35823]"
    },
    {
      "src": "call_expression [37231,37298]",
      "dest": "call_expression [37231,37298]"
    },
    {
      "src": "primitive_type [16783,16789]",
      "dest": "primitive_type [16783,16789]"
    },
    {
      "src": "visibility [35307,35313]",
      "dest": "visibility [35307,35313]"
    },
    {
      "src": "function: function [7218,7226]",
      "dest": "function: function [7218,7226]"
    },
    {
      "src": ",: , [14855,14856]",
      "dest": ",: , [14855,14856]"
    },
    {
      "src": "+: + [12553,12554]",
      "dest": "+: + [12553,12554]"
    },
    {
      "src": ",: , [10475,10476]",
      "dest": ",: , [10475,10476]"
    },
    {
      "src": "type_name [1676,1680]",
      "dest": "type_name [1676,1680]"
    },
    {
      "src": "(: ( [16861,16862]",
      "dest": "(: ( [16861,16862]"
    },
    {
      "src": "): ) [22867,22868]",
      "dest": "): ) [22867,22868]"
    },
    {
      "src": "identifier: onlyOwner [11154,11163]",
      "dest": "identifier: onlyOwner [11154,11163]"
    },
    {
      "src": "(: ( [32731,32732]",
      "dest": "(: ( [32731,32732]"
    },
    {
      "src": "identifier: _burn [31021,31026]",
      "dest": "identifier: _burn [31021,31026]"
    },
    {
      "src": "identifier: spender [32115,32122]",
      "dest": "identifier: spender [32115,32122]"
    },
    {
      "src": "call_argument [30448,30469]",
      "dest": "call_argument [30448,30469]"
    },
    {
      "src": "call_argument [26806,26816]",
      "dest": "call_argument [26806,26816]"
    },
    {
      "src": "visibility [21277,21285]",
      "dest": "visibility [21277,21285]"
    },
    {
      "src": "call_expression [30440,30505]",
      "dest": "call_expression [30440,30505]"
    },
    {
      "src": "binary_expression [12551,12556]",
      "dest": "binary_expression [12551,12556]"
    },
    {
      "src": "identifier: msg [26806,26809]",
      "dest": "identifier: msg [26806,26809]"
    },
    {
      "src": "state_mutability [24886,24890]",
      "dest": "state_mutability [24886,24890]"
    },
    {
      "src": "primitive_type [35629,35633]",
      "dest": "primitive_type [35629,35633]"
    },
    {
      "src": "call_argument [21952,21958]",
      "dest": "call_argument [21952,21958]"
    },
    {
      "src": "member_expression [28967,28977]",
      "dest": "member_expression [28967,28977]"
    },
    {
      "src": "string_literal [7784,7824]",
      "dest": "string_literal [7784,7824]"
    },
    {
      "src": ",: , [6685,6686]",
      "dest": ",: , [6685,6686]"
    },
    {
      "src": "type_cast_expression [5475,5488]",
      "dest": "type_cast_expression [5475,5488]"
    },
    {
      "src": "identifier: onlyOwner [7731,7740]",
      "dest": "identifier: onlyOwner [7731,7740]"
    },
    {
      "src": "parameter [16761,16770]",
      "dest": "parameter [16761,16770]"
    },
    {
      "src": "address: address [8360,8367]",
      "dest": "address: address [8360,8367]"
    },
    {
      "src": "comment: // pragma solidity ^0.6.0; [7996,8022]",
      "dest": "comment: // pragma solidity ^0.6.0; [7996,8022]"
    },
    {
      "src": "identifier: recipient [19099,19108]",
      "dest": "identifier: recipient [19099,19108]"
    },
    {
      "src": "identifier: transferFrom [35848,35860]",
      "dest": "identifier: transferFrom [35848,35860]"
    },
    {
      "src": "call_argument [16225,16226]",
      "dest": "call_argument [16225,16226]"
    },
    {
      "src": "identifier: amount [31212,31218]",
      "dest": "identifier: amount [31212,31218]"
    },
    {
      "src": "}: } [25949,25950]",
      "dest": "}: } [25949,25950]"
    },
    {
      "src": "override_specifier [37689,37697]",
      "dest": "override_specifier [37690,37698]"
    },
    {
      "src": "expression_statement [32774,32800]",
      "dest": "expression_statement [32774,32800]"
    },
    {
      "src": "override_specifier [37543,37551]",
      "dest": "override_specifier [37543,37551]"
    },
    {
      "src": "comment: // Dependency file: @openzeppelin/contracts/math/SafeMath.sol [11524,11585]",
      "dest": "comment: // Dependency file: @openzeppelin/contracts/math/SafeMath.sol [11524,11585]"
    },
    {
      "src": "identifier: decimals [37323,37331]",
      "dest": "identifier: decimals [37323,37331]"
    },
    {
      "src": "call_expression [7752,7825]",
      "dest": "call_expression [7752,7825]"
    },
    {
      "src": "address: address [25850,25857]",
      "dest": "address: address [25850,25857]"
    },
    {
      "src": "external: external [5843,5851]",
      "dest": "external: external [5843,5851]"
    },
    {
      "src": "): ) [4686,4687]",
      "dest": "): ) [4686,4687]"
    },
    {
      "src": "binary_expression [18110,18118]",
      "dest": "binary_expression [18110,18118]"
    },
    {
      "src": "identifier: a [15411,15412]",
      "dest": "identifier: a [15411,15412]"
    },
    {
      "src": "identifier: require [21830,21837]",
      "dest": "identifier: require [21830,21837]"
    },
    {
      "src": "identifier: isTopLevelCall [4751,4765]",
      "dest": "identifier: isTopLevelCall [4751,4765]"
    },
    {
      "src": "parameter [35580,35594]",
      "dest": "parameter [35580,35594]"
    },
    {
      "src": "(: ( [28907,28908]",
      "dest": "(: ( [28907,28908]"
    },
    {
      "src": "comment: /**      * @dev Indicates that the contract is in the process of being initialized.      */ [4318,4411]",
      "dest": "comment: /**      * @dev Indicates that the contract is in the process of being initialized.      */ [4318,4411]"
    },
    {
      "src": ",: , [35289,35290]",
      "dest": ",: , [35289,35290]"
    },
    {
      "src": "identifier: amount [26827,26833]",
      "dest": "identifier: amount [26827,26833]"
    },
    {
      "src": "type_name [34371,34378]",
      "dest": "type_name [34371,34378]"
    },
    {
      "src": "identifier: sender [28249,28255]",
      "dest": "identifier: sender [28249,28255]"
    },
    {
      "src": "expression_statement [11175,11210]",
      "dest": "expression_statement [11175,11210]"
    },
    {
      "src": "parameter [13450,13457]",
      "dest": "parameter [13450,13457]"
    },
    {
      "src": "call_argument [36294,36318]",
      "dest": "call_argument [36294,36318]"
    },
    {
      "src": "return: return [14270,14276]",
      "dest": "return: return [14270,14276]"
    },
    {
      "src": "call_argument [20791,20795]",
      "dest": "call_argument [20791,20795]"
    },
    {
      "src": "array_access [27571,27602]",
      "dest": "array_access [27571,27602]"
    },
    {
      "src": "bytes: bytes [22050,22055]",
      "dest": "bytes: bytes [22050,22055]"
    },
    {
      "src": "type_name [21262,21269]",
      "dest": "type_name [21262,21269]"
    },
    {
      "src": "primitive_type [29599,29606]",
      "dest": "primitive_type [29599,29606]"
    },
    {
      "src": "identifier: _initializing [4909,4922]",
      "dest": "identifier: _initializing [4909,4922]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [14294,14756]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [14294,14756]"
    },
    {
      "src": "address: address [35871,35878]",
      "dest": "address: address [35871,35878]"
    },
    {
      "src": "string_literal [19187,19218]",
      "dest": "string_literal [19187,19218]"
    },
    {
      "src": "identifier: newOwner [7899,7907]",
      "dest": "identifier: newOwner [7899,7907]"
    },
    {
      "src": "(: ( [35860,35861]",
      "dest": "(: ( [35860,35861]"
    },
    {
      "src": "primitive_type [6764,6771]",
      "dest": "primitive_type [6764,6771]"
    },
    {
      "src": "type_name [16146,16153]",
      "dest": "type_name [16146,16153]"
    },
    {
      "src": ".: . [36009,36010]",
      "dest": ".: . [36009,36010]"
    },
    {
      "src": "identifier: data [20791,20795]",
      "dest": "identifier: data [20791,20795]"
    },
    {
      "src": "address: address [30459,30466]",
      "dest": "address: address [30459,30466]"
    },
    {
      "src": "): ) [30023,30024]",
      "dest": "): ) [30023,30024]"
    },
    {
      "src": "type_cast_expression [7106,7116]",
      "dest": "type_cast_expression [7106,7116]"
    },
    {
      "src": "\": \" [32046,32047]",
      "dest": "\": \" [32046,32047]"
    },
    {
      "src": "call_argument [33401,33408]",
      "dest": "call_argument [33401,33408]"
    },
    {
      "src": "(: ( [24899,24900]",
      "dest": "(: ( [24899,24900]"
    },
    {
      "src": "primitive_type [8675,8682]",
      "dest": "primitive_type [8675,8682]"
    },
    {
      "src": "): ) [21850,21851]",
      "dest": "): ) [21850,21851]"
    },
    {
      "src": "(: ( [32156,32157]",
      "dest": "(: ( [32156,32157]"
    },
    {
      "src": "call_argument [36004,36049]",
      "dest": "call_argument [36004,36049]"
    },
    {
      "src": "state_mutability [16820,16824]",
      "dest": "state_mutability [16820,16824]"
    },
    {
      "src": ",: , [35394,35395]",
      "dest": ",: , [35394,35395]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-totalSupply}.      */ [25611,25662]",
      "dest": "comment: /**      * @dev See {IERC20-totalSupply}.      */ [25611,25662]"
    },
    {
      "src": "uint256: uint256 [37663,37670]",
      "dest": "uint256: uint256 [37664,37671]"
    },
    {
      "src": "address: address [1835,1842]",
      "dest": "address: address [1835,1842]"
    },
    {
      "src": "function: function [14762,14770]",
      "dest": "function: function [14762,14770]"
    },
    {
      "src": "public: public [11273,11279]",
      "dest": "public: public [11273,11279]"
    },
    {
      "src": "parameter [35871,35885]",
      "dest": "parameter [35871,35885]"
    },
    {
      "src": "call_argument [36134,36143]",
      "dest": "call_argument [36134,36143]"
    },
    {
      "src": "primitive_type [13399,13405]",
      "dest": "primitive_type [13399,13405]"
    },
    {
      "src": "primitive_type [12519,12526]",
      "dest": "primitive_type [12519,12526]"
    },
    {
      "src": "(: ( [36064,36065]",
      "dest": "(: ( [36064,36065]"
    },
    {
      "src": "address: address [21227,21234]",
      "dest": "address: address [21227,21234]"
    },
    {
      "src": "primitive_type [20297,20302]",
      "dest": "primitive_type [20297,20302]"
    },
    {
      "src": "): ) [4618,4619]",
      "dest": "): ) [4618,4619]"
    },
    {
      "src": "parameter [22050,22067]",
      "dest": "parameter [22050,22067]"
    },
    {
      "src": "}: } [36557,36558]",
      "dest": "}: } [36557,36558]"
    },
    {
      "src": "string [38146,38201]",
      "dest": "string [38147,38202]"
    },
    {
      "src": "identifier: onlyOwner [7399,7408]",
      "dest": "identifier: onlyOwner [7399,7408]"
    },
    {
      "src": "indexed: indexed [10465,10472]",
      "dest": "indexed: indexed [10465,10472]"
    },
    {
      "src": "string_literal [33275,33321]",
      "dest": "string_literal [33275,33321]"
    },
    {
      "src": "\": \" [27656,27657]",
      "dest": "\": \" [27656,27657]"
    },
    {
      "src": "type_name [14173,14180]",
      "dest": "type_name [14173,14180]"
    },
    {
      "src": "pure: pure [37445,37449]",
      "dest": "pure: pure [37445,37449]"
    },
    {
      "src": "type_name [29599,29606]",
      "dest": "type_name [29599,29606]"
    },
    {
      "src": "visibility [33177,33183]",
      "dest": "visibility [33177,33183]"
    },
    {
      "src": ",: , [35481,35482]",
      "dest": ",: , [35481,35482]"
    },
    {
      "src": "interface: interface [8100,8109]",
      "dest": "interface: interface [8100,8109]"
    },
    {
      "src": "(: ( [34444,34445]",
      "dest": "(: ( [34444,34445]"
    },
    {
      "src": "type_name [10457,10464]",
      "dest": "type_name [10457,10464]"
    },
    {
      "src": "}: } [16916,16917]",
      "dest": "}: } [16916,16917]"
    },
    {
      "src": "solidity_pragma_token [36621,36636]",
      "dest": "solidity_pragma_token [36621,36636]"
    },
    {
      "src": "identifier: minBurnAmount [34286,34299]",
      "dest": "identifier: minBurnAmount [34286,34299]"
    },
    {
      "src": "comment: // Dependency file: contracts/true-gold/common/Initializable.sol [3362,3426]",
      "dest": "comment: // Dependency file: contracts/true-gold/common/Initializable.sol [3362,3426]"
    },
    {
      "src": "identifier: owner [31944,31949]",
      "dest": "identifier: owner [31944,31949]"
    },
    {
      "src": "primitive_type [11301,11308]",
      "dest": "primitive_type [11301,11308]"
    },
    {
      "src": "uint256: uint256 [1936,1943]",
      "dest": "uint256: uint256 [1936,1943]"
    },
    {
      "src": "type_name [11247,11253]",
      "dest": "type_name [11247,11253]"
    },
    {
      "src": "type_name [34069,34076]",
      "dest": "type_name [34069,34076]"
    },
    {
      "src": "uint256: uint256 [31886,31893]",
      "dest": "uint256: uint256 [31886,31893]"
    },
    {
      "src": "address: address [7689,7696]",
      "dest": "address: address [7689,7696]"
    },
    {
      "src": "visibility [11147,11153]",
      "dest": "visibility [11147,11153]"
    },
    {
      "src": "parameter [13377,13386]",
      "dest": "parameter [13377,13386]"
    },
    {
      "src": "true: true [36181,36185]",
      "dest": "true: true [36181,36185]"
    },
    {
      "src": "parameter [26731,26745]",
      "dest": "parameter [26731,26745]"
    },
    {
      "src": "return_statement [36174,36186]",
      "dest": "return_statement [36174,36186]"
    },
    {
      "src": "(: ( [25849,25850]",
      "dest": "(: ( [25849,25850]"
    },
    {
      "src": "return: return [20753,20759]",
      "dest": "return: return [20753,20759]"
    },
    {
      "src": "array_access [29969,29989]",
      "dest": "array_access [29969,29989]"
    },
    {
      "src": "): ) [16841,16842]",
      "dest": "): ) [16841,16842]"
    },
    {
      "src": "comment: // bool private _initializing; [4417,4447]",
      "dest": "comment: // bool private _initializing; [4417,4447]"
    },
    {
      "src": "identifier: _transfer [29579,29588]",
      "dest": "identifier: _transfer [29579,29588]"
    },
    {
      "src": "type_name [35871,35878]",
      "dest": "type_name [35871,35878]"
    },
    {
      "src": "bool: bool [28186,28190]",
      "dest": "bool: bool [28186,28190]"
    },
    {
      "src": "function: function [11225,11233]",
      "dest": "function: function [11225,11233]"
    },
    {
      "src": "uint256: uint256 [35351,35358]",
      "dest": "uint256: uint256 [35351,35358]"
    },
    {
      "src": ",: , [20346,20347]",
      "dest": ",: , [20346,20347]"
    },
    {
      "src": "returns: returns [26240,26247]",
      "dest": "returns: returns [26240,26247]"
    },
    {
      "src": "function_body [26497,26550]",
      "dest": "function_body [26497,26550]"
    },
    {
      "src": "uint256: uint256 [30396,30403]",
      "dest": "uint256: uint256 [30396,30403]"
    },
    {
      "src": "identifier: _totalSupply [31268,31280]",
      "dest": "identifier: _totalSupply [31268,31280]"
    },
    {
      "src": "primitive_type [15535,15542]",
      "dest": "primitive_type [15535,15542]"
    },
    {
      "src": "assignment_expression [29969,30024]",
      "dest": "assignment_expression [29969,30024]"
    },
    {
      "src": "primitive_type [1835,1842]",
      "dest": "primitive_type [1835,1842]"
    },
    {
      "src": "uint256: uint256 [28859,28866]",
      "dest": "uint256: uint256 [28859,28866]"
    },
    {
      "src": "(: ( [21837,21838]",
      "dest": "(: ( [21837,21838]"
    },
    {
      "src": "type_name [37459,37465]",
      "dest": "type_name [37459,37465]"
    },
    {
      "src": "identifier: functionCall [20327,20339]",
      "dest": "identifier: functionCall [20327,20339]"
    },
    {
      "src": "function: function [37314,37322]",
      "dest": "function: function [37314,37322]"
    },
    {
      "src": "call_argument [7452,7486]",
      "dest": "call_argument [7452,7486]"
    },
    {
      "src": "identifier: decimals [25556,25564]",
      "dest": "identifier: decimals [25556,25564]"
    },
    {
      "src": "{: { [25730,25731]",
      "dest": "{: { [25730,25731]"
    },
    {
      "src": "event_paramater [6795,6819]",
      "dest": "event_paramater [6795,6819]"
    },
    {
      "src": "parameter [33161,33175]",
      "dest": "parameter [33161,33175]"
    },
    {
      "src": "identifier: OwnershipTransferred [6743,6763]",
      "dest": "identifier: OwnershipTransferred [6743,6763]"
    },
    {
      "src": "}: } [7914,7915]",
      "dest": "}: } [7914,7915]"
    },
    {
      "src": "identifier: errorMessage [13413,13425]",
      "dest": "identifier: errorMessage [13413,13425]"
    },
    {
      "src": "binary_expression [13522,13527]",
      "dest": "binary_expression [13522,13527]"
    },
    {
      "src": "(: ( [13872,13873]",
      "dest": "(: ( [13872,13873]"
    },
    {
      "src": "call_argument [35520,35526]",
      "dest": "call_argument [35520,35526]"
    },
    {
      "src": "function_body [35985,36193]",
      "dest": "function_body [35985,36193]"
    },
    {
      "src": "uint256: uint256 [13377,13384]",
      "dest": "uint256: uint256 [13377,13384]"
    },
    {
      "src": "/: / [15549,15550]",
      "dest": "/: / [15549,15550]"
    },
    {
      "src": "call_argument [19392,19452]",
      "dest": "call_argument [19392,19452]"
    },
    {
      "src": "identifier: a [16901,16902]",
      "dest": "identifier: a [16901,16902]"
    },
    {
      "src": "string_literal [19361,19363]",
      "dest": "string_literal [19361,19363]"
    },
    {
      "src": "return_statement [34488,34510]",
      "dest": "return_statement [34488,34510]"
    },
    {
      "src": "call_expression [21327,21414]",
      "dest": "call_expression [21327,21414]"
    },
    {
      "src": "function: function [28098,28106]",
      "dest": "function: function [28098,28106]"
    },
    {
      "src": "identifier: isTopLevelCall [4878,4892]",
      "dest": "identifier: isTopLevelCall [4878,4892]"
    },
    {
      "src": "function_body [11164,11217]",
      "dest": "function_body [11164,11217]"
    },
    {
      "src": ",: , [7116,7117]",
      "dest": ",: , [7116,7117]"
    },
    {
      "src": "comment: // pragma solidity 0.6.10; [1567,1593]",
      "dest": "comment: // pragma solidity 0.6.10; [1567,1593]"
    },
    {
      "src": "function_definition [30364,30680]",
      "dest": "function_definition [30364,30680]"
    },
    {
      "src": "(: ( [4586,4587]",
      "dest": "(: ( [4586,4587]"
    },
    {
      "src": ".: . [33356,33357]",
      "dest": ".: . [33356,33357]"
    },
    {
      "src": "call_argument [28212,28222]",
      "dest": "call_argument [28212,28222]"
    },
    {
      "src": "parameter [16783,16809]",
      "dest": "parameter [16783,16809]"
    },
    {
      "src": "parameter [21262,21275]",
      "dest": "parameter [21262,21275]"
    },
    {
      "src": "{: { [36113,36114]",
      "dest": "{: { [36113,36114]"
    },
    {
      "src": "(: ( [37844,37845]",
      "dest": "(: ( [37845,37846]"
    },
    {
      "src": ",: , [16223,16224]",
      "dest": ",: , [16223,16224]"
    },
    {
      "src": "\": \" [37942,37943]",
      "dest": "\": \" [37943,37944]"
    },
    {
      "src": "\": \" [21909,21910]",
      "dest": "\": \" [21909,21910]"
    },
    {
      "src": "identifier: to [11375,11377]",
      "dest": "identifier: to [11375,11377]"
    },
    {
      "src": "): ) [4765,4766]",
      "dest": "): ) [4765,4766]"
    },
    {
      "src": "string: string [15425,15431]",
      "dest": "string: string [15425,15431]"
    },
    {
      "src": "emit: emit [31318,31322]",
      "dest": "emit: emit [31318,31322]"
    },
    {
      "src": "parameter [30379,30394]",
      "dest": "parameter [30379,30394]"
    },
    {
      "src": "public: public [25691,25697]",
      "dest": "public: public [25691,25697]"
    },
    {
      "src": "function_definition [8638,8715]",
      "dest": "function_definition [8638,8715]"
    },
    {
      "src": ",: , [26286,26287]",
      "dest": ",: , [26286,26287]"
    },
    {
      "src": "}: } [36192,36193]",
      "dest": "}: } [36192,36193]"
    },
    {
      "src": "variable_declaration [11301,11316]",
      "dest": "variable_declaration [11301,11316]"
    },
    {
      "src": ",: , [22837,22838]",
      "dest": ",: , [22837,22838]"
    },
    {
      "src": "call_argument [35234,35243]",
      "dest": "call_argument [35234,35243]"
    },
    {
      "src": "(: ( [34964,34965]",
      "dest": "(: ( [34964,34965]"
    },
    {
      "src": "type_name [20260,20265]",
      "dest": "type_name [20260,20265]"
    },
    {
      "src": "event_definition [10657,10735]",
      "dest": "event_definition [10657,10735]"
    },
    {
      "src": "mload: mload [22785,22790]",
      "dest": "mload: mload [22785,22790]"
    },
    {
      "src": "=: = [12549,12550]",
      "dest": "=: = [12549,12550]"
    },
    {
      "src": "call_argument [36391,36415]",
      "dest": "call_argument [36391,36415]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [12650,12919]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [12650,12919]"
    },
    {
      "src": "type_name [13450,13457]",
      "dest": "type_name [13450,13457]"
    },
    {
      "src": ",: , [19185,19186]",
      "dest": ",: , [19185,19186]"
    },
    {
      "src": "identifier: sender [27551,27557]",
      "dest": "identifier: sender [27551,27557]"
    },
    {
      "src": "expression_statement [35468,35491]",
      "dest": "expression_statement [35468,35491]"
    },
    {
      "src": "comment: // pragma solidity 0.6.10; [5923,5949]",
      "dest": "comment: // pragma solidity 0.6.10; [5923,5949]"
    },
    {
      "src": "identifier: account [33344,33351]",
      "dest": "identifier: account [33344,33351]"
    },
    {
      "src": "parameter [21709,21723]",
      "dest": "parameter [21709,21723]"
    },
    {
      "src": "identifier: approve [9763,9770]",
      "dest": "identifier: approve [9763,9770]"
    },
    {
      "src": "identifier: _allowances [28233,28244]",
      "dest": "identifier: _allowances [28233,28244]"
    },
    {
      "src": "event_paramater [6764,6793]",
      "dest": "event_paramater [6764,6793]"
    },
    {
      "src": "payable: payable [19091,19098]",
      "dest": "payable: payable [19091,19098]"
    },
    {
      "src": "(: ( [4750,4751]",
      "dest": "(: ( [4750,4751]"
    },
    {
      "src": "): ) [25904,25905]",
      "dest": "): ) [25904,25905]"
    },
    {
      "src": "function_definition [5798,5852]",
      "dest": "function_definition [5798,5852]"
    },
    {
      "src": "assembly: assembly [18052,18060]",
      "dest": "assembly: assembly [18052,18060]"
    },
    {
      "src": "override_specifier [25874,25882]",
      "dest": "override_specifier [25874,25882]"
    },
    {
      "src": "primitive_type [21805,21810]",
      "dest": "primitive_type [21805,21810]"
    },
    {
      "src": "call_argument [32164,32171]",
      "dest": "call_argument [32164,32171]"
    },
    {
      "src": "): ) [9802,9803]",
      "dest": "): ) [9802,9803]"
    },
    {
      "src": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [19469,20216]",
      "dest": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [19469,20216]"
    },
    {
      "src": ".: . [32783,32784]",
      "dest": ".: . [32783,32784]"
    },
    {
      "src": "yul_function_call [5607,5624]",
      "dest": "yul_function_call [5607,5624]"
    },
    {
      "src": "identifier: owner [32157,32162]",
      "dest": "identifier: owner [32157,32162]"
    },
    {
      "src": "string [36320,36371]",
      "dest": "string [36320,36371]"
    },
    {
      "src": "): ) [19452,19453]",
      "dest": "): ) [19452,19453]"
    },
    {
      "src": "(: ( [14819,14820]",
      "dest": "(: ( [14819,14820]"
    },
    {
      "src": "call_argument [31096,31117]",
      "dest": "call_argument [31096,31117]"
    },
    {
      "src": "parameter [16772,16781]",
      "dest": "parameter [16772,16781]"
    },
    {
      "src": ".: . [19338,19339]",
      "dest": ".: . [19338,19339]"
    },
    {
      "src": "function: function [25668,25676]",
      "dest": "function: function [25668,25676]"
    },
    {
      "src": "\": \" [33275,33276]",
      "dest": "\": \" [33275,33276]"
    },
    {
      "src": "emit: emit [30035,30039]",
      "dest": "emit: emit [30035,30039]"
    },
    {
      "src": "identifier: newOwner [7697,7705]",
      "dest": "identifier: newOwner [7697,7705]"
    },
    {
      "src": "solidity: solidity [36621,36629]",
      "dest": "solidity: solidity [36621,36629]"
    },
    {
      "src": "): ) [22144,22145]",
      "dest": "): ) [22144,22145]"
    },
    {
      "src": "call_argument [37986,37995]",
      "dest": "call_argument [37987,37996]"
    },
    {
      "src": "identifier: sender [27505,27511]",
      "dest": "identifier: sender [27505,27511]"
    },
    {
      "src": "virtual: virtual [28891,28898]",
      "dest": "virtual: virtual [28891,28898]"
    },
    {
      "src": "}: } [22983,22984]",
      "dest": "}: } [22983,22984]"
    },
    {
      "src": "}: } [30679,30680]",
      "dest": "}: } [30679,30680]"
    },
    {
      "src": "}: } [11394,11395]",
      "dest": "}: } [11394,11395]"
    },
    {
      "src": "primitive_type [34217,34224]",
      "dest": "primitive_type [34217,34224]"
    },
    {
      "src": "state_mutability [5075,5079]",
      "dest": "state_mutability [5075,5079]"
    },
    {
      "src": "call_argument [33242,33249]",
      "dest": "call_argument [33242,33249]"
    },
    {
      "src": "type_name [20647,20654]",
      "dest": "type_name [20647,20654]"
    },
    {
      "src": "): ) [13052,13053]",
      "dest": "): ) [13052,13053]"
    },
    {
      "src": "): ) [27482,27483]",
      "dest": "): ) [27482,27483]"
    },
    {
      "src": "internal: internal [21277,21285]",
      "dest": "internal: internal [21277,21285]"
    },
    {
      "src": "expression_statement [32015,32084]",
      "dest": "expression_statement [32015,32084]"
    },
    {
      "src": "): ) [34348,34349]",
      "dest": "): ) [34348,34349]"
    },
    {
      "src": "struct_expression [19329,19360]",
      "dest": "struct_expression [19329,19360]"
    },
    {
      "src": "string_literal [29009,29048]",
      "dest": "string_literal [29009,29048]"
    },
    {
      "src": "type_name [9788,9795]",
      "dest": "type_name [9788,9795]"
    },
    {
      "src": "(: ( [22131,22132]",
      "dest": "(: ( [22131,22132]"
    },
    {
      "src": "call_argument [30665,30671]",
      "dest": "call_argument [30665,30671]"
    },
    {
      "src": "\": \" [29732,29733]",
      "dest": "\": \" [29732,29733]"
    },
    {
      "src": "): ) [34238,34239]",
      "dest": "): ) [34238,34239]"
    },
    {
      "src": "identifier: transferOwnership [5807,5824]",
      "dest": "identifier: transferOwnership [5807,5824]"
    },
    {
      "src": "expression_statement [21830,21912]",
      "dest": "expression_statement [21830,21912]"
    },
    {
      "src": "function_body [31077,31368]",
      "dest": "function_body [31077,31368]"
    },
    {
      "src": "inheritance_specifier [11090,11097]",
      "dest": "inheritance_specifier [11090,11097]"
    },
    {
      "src": "function: function [8999,9007]",
      "dest": "function: function [8999,9007]"
    },
    {
      "src": "variable_declaration_statement [15535,15553]",
      "dest": "variable_declaration_statement [15535,15553]"
    },
    {
      "src": "return_statement [27670,27682]",
      "dest": "return_statement [27670,27682]"
    },
    {
      "src": "): ) [32003,32004]",
      "dest": "): ) [32003,32004]"
    },
    {
      "src": "internal: internal [16168,16176]",
      "dest": "internal: internal [16168,16176]"
    },
    {
      "src": "view: view [9059,9063]",
      "dest": "view: view [9059,9063]"
    },
    {
      "src": "address: address [5460,5467]",
      "dest": "address: address [5460,5467]"
    },
    {
      "src": "{: { [7039,7040]",
      "dest": "{: { [7039,7040]"
    },
    {
      "src": "identifier: SafeMath [12206,12214]",
      "dest": "identifier: SafeMath [12206,12214]"
    },
    {
      "src": "uint256: uint256 [31044,31051]",
      "dest": "uint256: uint256 [31044,31051]"
    },
    {
      "src": "identifier: _minBurnAmount [34398,34412]",
      "dest": "identifier: _minBurnAmount [34398,34412]"
    },
    {
      "src": "function_definition [21678,21994]",
      "dest": "function_definition [21678,21994]"
    },
    {
      "src": "parameter [25721,25728]",
      "dest": "parameter [25721,25728]"
    },
    {
      "src": "parameter [26488,26495]",
      "dest": "parameter [26488,26495]"
    },
    {
      "src": "return_type_definition [35970,35984]",
      "dest": "return_type_definition [35970,35984]"
    },
    {
      "src": "yul_identifier [18083,18090]",
      "dest": "yul_identifier [18083,18090]"
    },
    {
      "src": "identifier: _burn [38021,38026]",
      "dest": "identifier: _burn [38022,38027]"
    },
    {
      "src": "identifier: value [21270,21275]",
      "dest": "identifier: value [21270,21275]"
    },
    {
      "src": "address: address [30379,30386]",
      "dest": "address: address [30379,30386]"
    },
    {
      "src": "type_name [7689,7696]",
      "dest": "type_name [7689,7696]"
    },
    {
      "src": "identifier: require [16854,16861]",
      "dest": "identifier: require [16854,16861]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/ERC20Burnable.sol\"; [33532,33589]",
      "dest": "comment: // import \"contracts/true-gold/common/ERC20Burnable.sol\"; [33532,33589]"
    },
    {
      "src": "function_body [4568,4949]",
      "dest": "function_body [4568,4949]"
    },
    {
      "src": "uint256: uint256 [34012,34019]",
      "dest": "uint256: uint256 [34012,34019]"
    },
    {
      "src": "}: } [3355,3356]",
      "dest": "}: } [3355,3356]"
    },
    {
      "src": "assembly_statement [18052,18093]",
      "dest": "assembly_statement [18052,18093]"
    },
    {
      "src": "type_name [9073,9080]",
      "dest": "type_name [9073,9080]"
    },
    {
      "src": "): ) [5487,5488]",
      "dest": "): ) [5487,5488]"
    },
    {
      "src": "return: return [5645,5651]",
      "dest": "return: return [5645,5651]"
    },
    {
      "src": "returns: returns [15467,15474]",
      "dest": "returns: returns [15467,15474]"
    },
    {
      "src": "): ) [16254,16255]",
      "dest": "): ) [16254,16255]"
    },
    {
      "src": "}: } [22361,22362]",
      "dest": "}: } [22361,22362]"
    },
    {
      "src": "identifier: balance [19168,19175]",
      "dest": "identifier: balance [19168,19175]"
    },
    {
      "src": "identifier: allowance [9008,9017]",
      "dest": "identifier: allowance [9008,9017]"
    },
    {
      "src": "identifier: mod [16142,16145]",
      "dest": "identifier: mod [16142,16145]"
    },
    {
      "src": "returns: returns [25712,25719]",
      "dest": "returns: returns [25712,25719]"
    },
    {
      "src": "bool: bool [17764,17768]",
      "dest": "bool: bool [17764,17768]"
    },
    {
      "src": "call_argument [30471,30504]",
      "dest": "call_argument [30471,30504]"
    },
    {
      "src": "): ) [22390,22391]",
      "dest": "): ) [22390,22391]"
    },
    {
      "src": "[: [ [28966,28967]",
      "dest": "[: [ [28966,28967]"
    },
    {
      "src": "return: return [14141,14147]",
      "dest": "return: return [14141,14147]"
    },
    {
      "src": "): ) [19218,19219]",
      "dest": "): ) [19218,19219]"
    },
    {
      "src": "assembly_statement [22730,22887]",
      "dest": "assembly_statement [22730,22887]"
    },
    {
      "src": "primitive_type [27423,27430]",
      "dest": "primitive_type [27423,27430]"
    },
    {
      "src": "parameter [22069,22085]",
      "dest": "parameter [22069,22085]"
    },
    {
      "src": "return_type_definition [20288,20310]",
      "dest": "return_type_definition [20288,20310]"
    },
    {
      "src": "\": \" [33320,33321]",
      "dest": "\": \" [33320,33321]"
    },
    {
      "src": "function: function [10146,10154]",
      "dest": "function: function [10146,10154]"
    },
    {
      "src": "identifier: require [19146,19153]",
      "dest": "identifier: require [19146,19153]"
    },
    {
      "src": "{: { [21819,21820]",
      "dest": "{: { [21819,21820]"
    },
    {
      "src": "(: ( [16221,16222]",
      "dest": "(: ( [16221,16222]"
    },
    {
      "src": "member_expression [36004,36022]",
      "dest": "member_expression [36004,36022]"
    },
    {
      "src": "parameter [20297,20309]",
      "dest": "parameter [20297,20309]"
    },
    {
      "src": "call_argument [29728,29729]",
      "dest": "call_argument [29728,29729]"
    },
    {
      "src": "(: ( [20727,20728]",
      "dest": "(: ( [20727,20728]"
    },
    {
      "src": "(: ( [4617,4618]",
      "dest": "(: ( [4617,4618]"
    },
    {
      "src": "identifier: _transfer [26266,26275]",
      "dest": "identifier: _transfer [26266,26275]"
    },
    {
      "src": "primitive_type [11261,11268]",
      "dest": "primitive_type [11261,11268]"
    },
    {
      "src": "parameter [24900,24913]",
      "dest": "parameter [24900,24913]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/Reclaimable.sol\"; [36755,36803]",
      "dest": "comment: // import \"contracts/true-gold/Reclaimable.sol\"; [36755,36803]"
    },
    {
      "src": "return: return [28293,28299]",
      "dest": "return: return [28293,28299]"
    },
    {
      "src": "primitive_type [26433,26440]",
      "dest": "primitive_type [26433,26440]"
    },
    {
      "src": "identifier: BURN_AMOUNT_MULTIPLIER [38116,38138]",
      "dest": "identifier: BURN_AMOUNT_MULTIPLIER [38117,38139]"
    },
    {
      "src": "(: ( [21226,21227]",
      "dest": "(: ( [21226,21227]"
    },
    {
      "src": ",: , [29730,29731]",
      "dest": ",: , [29730,29731]"
    },
    {
      "src": "return: return [12626,12632]",
      "dest": "return: return [12626,12632]"
    },
    {
      "src": "}: } [35801,35802]",
      "dest": "}: } [35801,35802]"
    },
    {
      "src": "identifier: reclaimToken [11234,11246]",
      "dest": "identifier: reclaimToken [11234,11246]"
    },
    {
      "src": "type_name [27370,27377]",
      "dest": "type_name [27370,27377]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [19232,19300]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [19232,19300]"
    },
    {
      "src": "call_expression [31189,31257]",
      "dest": "call_expression [31189,31257]"
    },
    {
      "src": "=: = [4923,4924]",
      "dest": "=: = [4923,4924]"
    },
    {
      "src": "call_expression [33232,33322]",
      "dest": "call_expression [33232,33322]"
    },
    {
      "src": "}: } [26549,26550]",
      "dest": "}: } [26549,26550]"
    },
    {
      "src": "identifier: _balances [29969,29978]",
      "dest": "identifier: _balances [29969,29978]"
    },
    {
      "src": "\": \" [29770,29771]",
      "dest": "\": \" [29770,29771]"
    },
    {
      "src": "member_expression [36482,36493]",
      "dest": "member_expression [36482,36493]"
    },
    {
      "src": "uint256: uint256 [25721,25728]",
      "dest": "uint256: uint256 [25721,25728]"
    },
    {
      "src": "override: override [36266,36274]",
      "dest": "override: override [36266,36274]"
    },
    {
      "src": "(: ( [25049,25050]",
      "dest": "(: ( [25049,25050]"
    },
    {
      "src": "): ) [21985,21986]",
      "dest": "): ) [21985,21986]"
    },
    {
      "src": "=: = [7057,7058]",
      "dest": "=: = [7057,7058]"
    },
    {
      "src": "override: override [37436,37444]",
      "dest": "override: override [37436,37444]"
    },
    {
      "src": "expression_statement [14201,14258]",
      "dest": "expression_statement [14201,14258]"
    },
    {
      "src": "address: address [5475,5482]",
      "dest": "address: address [5475,5482]"
    },
    {
      "src": "type_name [21295,21300]",
      "dest": "type_name [21295,21300]"
    },
    {
      "src": "identifier: _owner [7283,7289]",
      "dest": "identifier: _owner [7283,7289]"
    },
    {
      "src": "identifier: Address [17099,17106]",
      "dest": "identifier: Address [17099,17106]"
    },
    {
      "src": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [10500,10651]",
      "dest": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [10500,10651]"
    },
    {
      "src": "identifier: amount [26739,26745]",
      "dest": "identifier: amount [26739,26745]"
    },
    {
      "src": "type_name [8675,8682]",
      "dest": "type_name [8675,8682]"
    },
    {
      "src": "primitive_type [7256,7263]",
      "dest": "primitive_type [7256,7263]"
    },
    {
      "src": "call_expression [19146,19219]",
      "dest": "call_expression [19146,19219]"
    },
    {
      "src": "contract: contract [33772,33780]",
      "dest": "contract: contract [33772,33780]"
    },
    {
      "src": "identifier: returndata [22839,22849]",
      "dest": "identifier: returndata [22839,22849]"
    },
    {
      "src": "(: ( [12574,12575]",
      "dest": "(: ( [12574,12575]"
    },
    {
      "src": "primitive_type [26200,26207]",
      "dest": "primitive_type [26200,26207]"
    },
    {
      "src": "call_argument [38234,38240]",
      "dest": "call_argument [38235,38241]"
    },
    {
      "src": "\": \" [36417,36418]",
      "dest": "\": \" [36417,36418]"
    },
    {
      "src": "bool: bool [1676,1680]",
      "dest": "bool: bool [1676,1680]"
    },
    {
      "src": "address: address [36216,36223]",
      "dest": "address: address [36216,36223]"
    },
    {
      "src": "identifier: amount [36145,36151]",
      "dest": "identifier: amount [36145,36151]"
    },
    {
      "src": "string_literal [22185,22216]",
      "dest": "string_literal [22185,22216]"
    },
    {
      "src": "(: ( [30611,30612]",
      "dest": "(: ( [30611,30612]"
    },
    {
      "src": "identifier: require [4579,4586]",
      "dest": "identifier: require [4579,4586]"
    },
    {
      "src": "primitive_type [26418,26425]",
      "dest": "primitive_type [26418,26425]"
    },
    {
      "src": "{: { [12992,12993]",
      "dest": "{: { [12992,12993]"
    },
    {
      "src": "): ) [7128,7129]",
      "dest": "): ) [7128,7129]"
    },
    {
      "src": "function_body [35028,35252]",
      "dest": "function_body [35028,35252]"
    },
    {
      "src": "\": \" [36370,36371]",
      "dest": "\": \" [36370,36371]"
    },
    {
      "src": "expression_statement [7050,7070]",
      "dest": "expression_statement [7050,7070]"
    },
    {
      "src": "): ) [26305,26306]",
      "dest": "): ) [26305,26306]"
    },
    {
      "src": "(: ( [20296,20297]",
      "dest": "(: ( [20296,20297]"
    },
    {
      "src": "function_definition [28098,28312]",
      "dest": "function_definition [28098,28312]"
    },
    {
      "src": "address: address [31860,31867]",
      "dest": "address: address [31860,31867]"
    },
    {
      "src": "type_name [31044,31051]",
      "dest": "type_name [31044,31051]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [22665,22712]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [22665,22712]"
    },
    {
      "src": "call_expression [36383,36471]",
      "dest": "call_expression [36383,36471]"
    },
    {
      "src": "emit: emit [7836,7840]",
      "dest": "emit: emit [7836,7840]"
    },
    {
      "src": "address: address [9771,9778]",
      "dest": "address: address [9771,9778]"
    },
    {
      "src": "identifier: account [30599,30606]",
      "dest": "identifier: account [30599,30606]"
    },
    {
      "src": "contract_declaration [1597,3356]",
      "dest": "contract_declaration [1597,3356]"
    },
    {
      "src": "address: address [1816,1823]",
      "dest": "address: address [1816,1823]"
    },
    {
      "src": "): ) [29729,29730]",
      "dest": "): ) [29729,29730]"
    },
    {
      "src": "expression_statement [36383,36472]",
      "dest": "expression_statement [36383,36472]"
    },
    {
      "src": "bytes: bytes [21805,21810]",
      "dest": "bytes: bytes [21805,21810]"
    },
    {
      "src": "): ) [30074,30075]",
      "dest": "): ) [30074,30075]"
    },
    {
      "src": "uint256: uint256 [38044,38051]",
      "dest": "uint256: uint256 [38045,38052]"
    },
    {
      "src": "return_type_definition [16182,16199]",
      "dest": "return_type_definition [16182,16199]"
    },
    {
      "src": "string [16228,16254]",
      "dest": "string [16228,16254]"
    },
    {
      "src": "(: ( [37458,37459]",
      "dest": "(: ( [37458,37459]"
    },
    {
      "src": ",: , [24535,24536]",
      "dest": ",: , [24535,24536]"
    },
    {
      "src": "]: ] [27601,27602]",
      "dest": "]: ] [27601,27602]"
    },
    {
      "src": "memory: memory [16790,16796]",
      "dest": "memory: memory [16790,16796]"
    },
    {
      "src": "expression_statement [30518,30558]",
      "dest": "expression_statement [30518,30558]"
    },
    {
      "src": "(: ( [9072,9073]",
      "dest": "(: ( [9072,9073]"
    },
    {
      "src": "address: address [17724,17731]",
      "dest": "address: address [17724,17731]"
    },
    {
      "src": "identifier: account [31178,31185]",
      "dest": "identifier: account [31178,31185]"
    },
    {
      "src": "emit_statement [30630,30673]",
      "dest": "emit_statement [30630,30673]"
    },
    {
      "src": "block_statement [35751,35802]",
      "dest": "block_statement [35751,35802]"
    },
    {
      "src": "): ) [12958,12959]",
      "dest": "): ) [12958,12959]"
    },
    {
      "src": "public: public [35003,35009]",
      "dest": "public: public [35003,35009]"
    },
    {
      "src": "returns: returns [37557,37564]",
      "dest": "returns: returns [37557,37564]"
    },
    {
      "src": "function_body [34380,34420]",
      "dest": "function_body [34380,34420]"
    },
    {
      "src": "address: address [35896,35903]",
      "dest": "address: address [35896,35903]"
    },
    {
      "src": "): ) [16882,16883]",
      "dest": "): ) [16882,16883]"
    },
    {
      "src": "function_body [7411,7507]",
      "dest": "function_body [7411,7507]"
    },
    {
      "src": "identifier: target [20783,20789]",
      "dest": "identifier: target [20783,20789]"
    },
    {
      "src": "(: ( [36072,36073]",
      "dest": "(: ( [36072,36073]"
    },
    {
      "src": "primitive_type [1936,1943]",
      "dest": "primitive_type [1936,1943]"
    },
    {
      "src": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [8723,8993]",
      "dest": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [8723,8993]"
    },
    {
      "src": "assignment_expression [4817,4836]",
      "dest": "assignment_expression [4817,4836]"
    },
    {
      "src": "{: { [35635,35636]",
      "dest": "{: { [35635,35636]"
    },
    {
      "src": "\": \" [29917,29918]",
      "dest": "\": \" [29917,29918]"
    },
    {
      "src": "virtual: virtual [26754,26761]",
      "dest": "virtual: virtual [26754,26761]"
    },
    {
      "src": "call_argument [35359,35366]",
      "dest": "call_argument [35359,35366]"
    },
    {
      "src": "primitive_type [34053,34060]",
      "dest": "primitive_type [34053,34060]"
    },
    {
      "src": "): ) [37534,37535]",
      "dest": "): ) [37534,37535]"
    },
    {
      "src": "=>: => [1843,1845]",
      "dest": "=>: => [1843,1845]"
    },
    {
      "src": "user_defined_type [6658,6670]",
      "dest": "user_defined_type [6658,6670]"
    },
    {
      "src": "identifier: b [14854,14855]",
      "dest": "identifier: b [14854,14855]"
    },
    {
      "src": "identifier: require [14201,14208]",
      "dest": "identifier: require [14201,14208]"
    },
    {
      "src": "address: address [11127,11134]",
      "dest": "address: address [11127,11134]"
    },
    {
      "src": "type_name [35629,35633]",
      "dest": "type_name [35629,35633]"
    },
    {
      "src": "call_expression [37727,37764]",
      "dest": "call_expression [37728,37765]"
    },
    {
      "src": "number_literal: 0 [15508,15509]",
      "dest": "number_literal: 0 [15508,15509]"
    },
    {
      "src": "call_argument [22176,22182]",
      "dest": "call_argument [22176,22182]"
    },
    {
      "src": "identifier: Initializable [33819,33832]",
      "dest": "identifier: Initializable [33819,33832]"
    },
    {
      "src": "primitive_type [21725,21730]",
      "dest": "primitive_type [21725,21730]"
    },
    {
      "src": "member_expression [31283,31299]",
      "dest": "member_expression [31283,31299]"
    },
    {
      "src": ".: . [28215,28216]",
      "dest": ".: . [28215,28216]"
    },
    {
      "src": ",: , [37139,37140]",
      "dest": ",: , [37139,37140]"
    },
    {
      "src": "binary_expression [14209,14214]",
      "dest": "binary_expression [14209,14214]"
    },
    {
      "src": "primitive_type [10184,10191]",
      "dest": "primitive_type [10184,10191]"
    },
    {
      "src": "(: ( [28841,28842]",
      "dest": "(: ( [28841,28842]"
    },
    {
      "src": "\": \" [35396,35397]",
      "dest": "\": \" [35396,35397]"
    },
    {
      "src": "identifier: account [31199,31206]",
      "dest": "identifier: account [31199,31206]"
    },
    {
      "src": "identifier: cs [5652,5654]",
      "dest": "identifier: cs [5652,5654]"
    },
    {
      "src": "call_argument [28224,28231]",
      "dest": "call_argument [28224,28231]"
    },
    {
      "src": "(: ( [22033,22034]",
      "dest": "(: ( [22033,22034]"
    },
    {
      "src": "=: = [15545,15546]",
      "dest": "=: = [15545,15546]"
    },
    {
      "src": "parameter [37141,37162]",
      "dest": "parameter [37141,37162]"
    },
    {
      "src": "}: } [7917,7918]",
      "dest": "}: } [7917,7918]"
    },
    {
      "src": "type_name [28842,28849]",
      "dest": "type_name [28842,28849]"
    },
    {
      "src": "visibility [7235,7241]",
      "dest": "visibility [7235,7241]"
    },
    {
      "src": "emit_statement [35204,35245]",
      "dest": "emit_statement [35204,35245]"
    },
    {
      "src": "identifier: isTopLevelCall [4705,4719]",
      "dest": "identifier: isTopLevelCall [4705,4719]"
    },
    {
      "src": "indexed: indexed [10443,10450]",
      "dest": "indexed: indexed [10443,10450]"
    },
    {
      "src": "): ) [31962,31963]",
      "dest": "): ) [31962,31963]"
    },
    {
      "src": "): ) [14124,14125]",
      "dest": "): ) [14124,14125]"
    },
    {
      "src": "returns: returns [13864,13871]",
      "dest": "returns: returns [13864,13871]"
    },
    {
      "src": "function: function [25034,25042]",
      "dest": "function: function [25034,25042]"
    },
    {
      "src": "identifier: to [11143,11145]",
      "dest": "identifier: to [11143,11145]"
    },
    {
      "src": "function_body [20311,20395]",
      "dest": "function_body [20311,20395]"
    },
    {
      "src": "\": \" [7452,7453]",
      "dest": "\": \" [7452,7453]"
    },
    {
      "src": "visibility [10219,10227]",
      "dest": "visibility [10219,10227]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [31376,31802]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [31376,31802]"
    },
    {
      "src": "function_body [25730,25768]",
      "dest": "function_body [25730,25768]"
    },
    {
      "src": "return: return [16894,16900]",
      "dest": "return: return [16894,16900]"
    },
    {
      "src": "function_definition [16133,16263]",
      "dest": "function_definition [16133,16263]"
    },
    {
      "src": "address: address [19083,19090]",
      "dest": "address: address [19083,19090]"
    },
    {
      "src": ",: , [34982,34983]",
      "dest": ",: , [34982,34983]"
    },
    {
      "src": "visibility [9050,9058]",
      "dest": "visibility [9050,9058]"
    },
    {
      "src": "identifier: SetBurnBounds [34039,34052]",
      "dest": "identifier: SetBurnBounds [34039,34052]"
    },
    {
      "src": "override: override [35611,35619]",
      "dest": "override: override [35611,35619]"
    },
    {
      "src": "number_literal: 12_441_000 [37079,37089]",
      "dest": "number_literal: 12_441_000 [37079,37089]"
    },
    {
      "src": "type_name [1723,1730]",
      "dest": "type_name [1723,1730]"
    },
    {
      "src": "primitive_type [28859,28866]",
      "dest": "primitive_type [28859,28866]"
    },
    {
      "src": "binary_expression [35351,35394]",
      "dest": "binary_expression [35351,35394]"
    },
    {
      "src": "primitive_type [29624,29631]",
      "dest": "primitive_type [29624,29631]"
    },
    {
      "src": "type_name [31886,31893]",
      "dest": "type_name [31886,31893]"
    },
    {
      "src": "memory: memory [24907,24913]",
      "dest": "memory: memory [24907,24913]"
    },
    {
      "src": "identifier: to [11175,11177]",
      "dest": "identifier: to [11175,11177]"
    },
    {
      "src": "parameter [21805,21817]",
      "dest": "parameter [21805,21817]"
    },
    {
      "src": "{: { [28192,28193]",
      "dest": "{: { [28192,28193]"
    },
    {
      "src": "visibility [32748,32754]",
      "dest": "visibility [32748,32754]"
    },
    {
      "src": "modifier_invocation [7027,7038]",
      "dest": "modifier_invocation [7027,7038]"
    },
    {
      "src": "virtual: virtual [30421,30428]",
      "dest": "virtual: virtual [30421,30428]"
    },
    {
      "src": "call_expression [11360,11387]",
      "dest": "call_expression [11360,11387]"
    },
    {
      "src": "type_name [35274,35281]",
      "dest": "type_name [35274,35281]"
    },
    {
      "src": "type_name [5089,5093]",
      "dest": "type_name [5089,5093]"
    },
    {
      "src": "view: view [34454,34458]",
      "dest": "view: view [34454,34458]"
    },
    {
      "src": "\": \" [7823,7824]",
      "dest": "\": \" [7823,7824]"
    },
    {
      "src": "!=: != [16864,16866]",
      "dest": "!=: != [16864,16866]"
    },
    {
      "src": "pure: pure [13859,13863]",
      "dest": "pure: pure [13859,13863]"
    },
    {
      "src": "identifier: errorMessage [20800,20812]",
      "dest": "identifier: errorMessage [20800,20812]"
    },
    {
      "src": "): ) [11199,11200]",
      "dest": "): ) [11199,11200]"
    },
    {
      "src": "contract_body [12215,16917]",
      "dest": "contract_body [12215,16917]"
    },
    {
      "src": "(: ( [35358,35359]",
      "dest": "(: ( [35358,35359]"
    },
    {
      "src": "function: function [28815,28823]",
      "dest": "function: function [28815,28823]"
    },
    {
      "src": "parameter [28842,28857]",
      "dest": "parameter [28842,28857]"
    },
    {
      "src": "identifier: value [10728,10733]",
      "dest": "identifier: value [10728,10733]"
    },
    {
      "src": "(: ( [19153,19154]",
      "dest": "(: ( [19153,19154]"
    },
    {
      "src": "{: { [36275,36276]",
      "dest": "{: { [36275,36276]"
    },
    {
      "src": "identifier: require [36383,36390]",
      "dest": "identifier: require [36383,36390]"
    },
    {
      "src": "=: = [35145,35146]",
      "dest": "=: = [35145,35146]"
    },
    {
      "src": "uint256: uint256 [25897,25904]",
      "dest": "uint256: uint256 [25897,25904]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/Ownable.sol\"; [36700,36751]",
      "dest": "comment: // import \"contracts/true-gold/common/Ownable.sol\"; [36700,36751]"
    },
    {
      "src": "call_expression [13470,13499]",
      "dest": "call_expression [13470,13499]"
    },
    {
      "src": "return_type_definition [17755,17769]",
      "dest": "return_type_definition [17755,17769]"
    },
    {
      "src": "return_statement [25917,25943]",
      "dest": "return_statement [25917,25943]"
    },
    {
      "src": "call_expression [29992,30024]",
      "dest": "call_expression [29992,30024]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [8124,8192]",
      "dest": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [8124,8192]"
    },
    {
      "src": "memory: memory [21811,21817]",
      "dest": "memory: memory [21811,21817]"
    },
    {
      "src": "type_name [9771,9778]",
      "dest": "type_name [9771,9778]"
    },
    {
      "src": "identifier: recipient [35711,35720]",
      "dest": "identifier: recipient [35711,35720]"
    },
    {
      "src": "): ) [34314,34315]",
      "dest": "): ) [34314,34315]"
    },
    {
      "src": "yul_decimal_number: 32 [22835,22837]",
      "dest": "yul_decimal_number: 32 [22835,22837]"
    },
    {
      "src": "member_expression [38105,38115]",
      "dest": "member_expression [38106,38116]"
    },
    {
      "src": "parameter [28186,28190]",
      "dest": "parameter [28186,28190]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/ProxyStorage.sol\"; [33703,33759]",
      "dest": "comment: // import \"contracts/true-gold/common/ProxyStorage.sol\"; [33703,33759]"
    },
    {
      "src": "primitive_type [20244,20251]",
      "dest": "primitive_type [20244,20251]"
    },
    {
      "src": "bool: bool [1652,1656]",
      "dest": "bool: bool [1652,1656]"
    },
    {
      "src": "event_definition [10420,10492]",
      "dest": "event_definition [10420,10492]"
    },
    {
      "src": "state_mutability [25707,25711]",
      "dest": "state_mutability [25707,25711]"
    },
    {
      "src": "call_expression [28203,28282]",
      "dest": "call_expression [28203,28282]"
    },
    {
      "src": "identifier: _mint [30373,30378]",
      "dest": "identifier: _mint [30373,30378]"
    },
    {
      "src": "identifier: _initializing [4723,4736]",
      "dest": "identifier: _initializing [4723,4736]"
    },
    {
      "src": "emit_statement [35501,35528]",
      "dest": "emit_statement [35501,35528]"
    },
    {
      "src": "function_definition [7218,7297]",
      "dest": "function_definition [7218,7297]"
    },
    {
      "src": "{: { [36945,36946]",
      "dest": "{: { [36945,36946]"
    },
    {
      "src": "identifier: Ownable [36902,36909]",
      "dest": "identifier: Ownable [36902,36909]"
    },
    {
      "src": "): ) [20309,20310]",
      "dest": "): ) [20309,20310]"
    },
    {
      "src": "returns: returns [17755,17762]",
      "dest": "returns: returns [17755,17762]"
    },
    {
      "src": "memory: memory [21766,21772]",
      "dest": "memory: memory [21766,21772]"
    },
    {
      "src": ",: , [31218,31219]",
      "dest": ",: , [31218,31219]"
    },
    {
      "src": "identifier: _approve [33335,33343]",
      "dest": "identifier: _approve [33335,33343]"
    },
    {
      "src": "type_name [33144,33151]",
      "dest": "type_name [33144,33151]"
    },
    {
      "src": "visibility [37682,37688]",
      "dest": "visibility [37683,37689]"
    },
    {
      "src": "): ) [36470,36471]",
      "dest": "): ) [36470,36471]"
    },
    {
      "src": ",: , [21971,21972]",
      "dest": ",: , [21971,21972]"
    },
    {
      "src": "primitive_type [36971,36978]",
      "dest": "primitive_type [36971,36978]"
    },
    {
      "src": "type_name [37663,37670]",
      "dest": "type_name [37664,37671]"
    },
    {
      "src": "string [29816,29853]",
      "dest": "string [29816,29853]"
    },
    {
      "src": "returns: returns [14811,14818]",
      "dest": "returns: returns [14811,14818]"
    },
    {
      "src": "identifier: sender [27583,27589]",
      "dest": "identifier: sender [27583,27589]"
    },
    {
      "src": "uint256: uint256 [24570,24577]",
      "dest": "uint256: uint256 [24570,24577]"
    },
    {
      "src": "type_name [21227,21234]",
      "dest": "type_name [21227,21234]"
    },
    {
      "src": "type_name [35291,35298]",
      "dest": "type_name [35291,35298]"
    },
    {
      "src": "identifier: account [30448,30455]",
      "dest": "identifier: account [30448,30455]"
    },
    {
      "src": "expression_statement [22157,22218]",
      "dest": "expression_statement [22157,22218]"
    },
    {
      "src": "member_expression [37955,37974]",
      "dest": "member_expression [37956,37975]"
    },
    {
      "src": "uint256: uint256 [36971,36978]",
      "dest": "uint256: uint256 [36971,36978]"
    },
    {
      "src": "): ) [24869,24870]",
      "dest": "): ) [24869,24870]"
    },
    {
      "src": "identifier: _maxBurnAmount [1973,1987]",
      "dest": "identifier: _maxBurnAmount [1973,1987]"
    },
    {
      "src": "identifier: sender [7063,7069]",
      "dest": "identifier: sender [7063,7069]"
    },
    {
      "src": "identifier: amount [27607,27613]",
      "dest": "identifier: amount [27607,27613]"
    },
    {
      "src": "identifier: sender [7122,7128]",
      "dest": "identifier: sender [7122,7128]"
    },
    {
      "src": "expression_statement [31168,31258]",
      "dest": "expression_statement [31168,31258]"
    },
    {
      "src": "type_name [15425,15431]",
      "dest": "type_name [15425,15431]"
    },
    {
      "src": "{: { [26255,26256]",
      "dest": "{: { [26255,26256]"
    },
    {
      "src": "identifier: require [13470,13477]",
      "dest": "identifier: require [13470,13477]"
    },
    {
      "src": ",: , [4636,4637]",
      "dest": ",: , [4636,4637]"
    },
    {
      "src": "true [29068,29072]",
      "dest": "true [29068,29072]"
    },
    {
      "src": "user_defined_type [33843,33856]",
      "dest": "user_defined_type [33843,33856]"
    },
    {
      "src": "primitive_type [22132,22137]",
      "dest": "primitive_type [22132,22137]"
    },
    {
      "src": "uint256: uint256 [8244,8251]",
      "dest": "uint256: uint256 [8244,8251]"
    },
    {
      "src": "comment: // ERC20.sol [1746,1758]",
      "dest": "comment: // ERC20.sol [1746,1758]"
    },
    {
      "src": "member_expression [38213,38224]",
      "dest": "member_expression [38214,38225]"
    },
    {
      "src": "address: address [29804,29811]",
      "dest": "address: address [29804,29811]"
    },
    {
      "src": "user_defined_type [36911,36931]",
      "dest": "user_defined_type [36911,36931]"
    },
    {
      "src": "call_argument [27513,27522]",
      "dest": "call_argument [27513,27522]"
    },
    {
      "src": "member_expression [29992,30016]",
      "dest": "member_expression [29992,30016]"
    },
    {
      "src": "call_argument [11195,11199]",
      "dest": "call_argument [11195,11199]"
    },
    {
      "src": "state_mutability [37350,37354]",
      "dest": "state_mutability [37350,37354]"
    },
    {
      "src": "}: } [5669,5670]",
      "dest": "}: } [5669,5670]"
    },
    {
      "src": "view: view [25883,25887]",
      "dest": "view: view [25883,25887]"
    },
    {
      "src": "{: { [7265,7266]",
      "dest": "{: { [7265,7266]"
    },
    {
      "src": "return_statement [18103,18119]",
      "dest": "return_statement [18103,18119]"
    },
    {
      "src": "==: == [7437,7439]",
      "dest": "==: == [7437,7439]"
    },
    {
      "src": "return_type_definition [37450,37473]",
      "dest": "return_type_definition [37450,37473]"
    },
    {
      "src": "type_name [27478,27482]",
      "dest": "type_name [27478,27482]"
    },
    {
      "src": "function: function [20222,20230]",
      "dest": "function: function [20222,20230]"
    },
    {
      "src": "primitive_type [30459,30466]",
      "dest": "primitive_type [30459,30466]"
    },
    {
      "src": ".: . [7121,7122]",
      "dest": ".: . [7121,7122]"
    },
    {
      "src": "assignment_expression [4782,4802]",
      "dest": "assignment_expression [4782,4802]"
    },
    {
      "src": "[: [ [29978,29979]",
      "dest": "[: [ [29978,29979]"
    },
    {
      "src": "identifier: require [38097,38104]",
      "dest": "identifier: require [38098,38105]"
    },
    {
      "src": "comment: // Dependency file: contracts/true-gold/common/ERC20Burnable.sol [32197,32261]",
      "dest": "comment: // Dependency file: contracts/true-gold/common/ERC20Burnable.sol [32197,32261]"
    },
    {
      "src": "primitive_type [16761,16768]",
      "dest": "primitive_type [16761,16768]"
    },
    {
      "src": "override_specifier [35611,35619]",
      "dest": "override_specifier [35611,35619]"
    },
    {
      "src": "address: address [11335,11342]",
      "dest": "address: address [11335,11342]"
    },
    {
      "src": "call_argument [28955,29049]",
      "dest": "call_argument [28955,29049]"
    },
    {
      "src": "(: ( [15503,15504]",
      "dest": "(: ( [15503,15504]"
    },
    {
      "src": "function_definition [34428,34517]",
      "dest": "function_definition [34428,34517]"
    },
    {
      "src": "(: ( [37363,37364]",
      "dest": "(: ( [37363,37364]"
    },
    {
      "src": "block_statement [4767,4848]",
      "dest": "block_statement [4767,4848]"
    },
    {
      "src": "number_literal: 0 [7780,7781]",
      "dest": "number_literal: 0 [7780,7781]"
    },
    {
      "src": "user_defined_type [33819,33832]",
      "dest": "user_defined_type [33819,33832]"
    },
    {
      "src": "visibility [16811,16819]",
      "dest": "visibility [16811,16819]"
    },
    {
      "src": "returns: returns [28177,28184]",
      "dest": "returns: returns [28177,28184]"
    },
    {
      "src": "identifier: super [36482,36487]",
      "dest": "identifier: super [36482,36487]"
    },
    {
      "src": "call_argument [26288,26297]",
      "dest": "call_argument [26288,26297]"
    },
    {
      "src": "call_argument [31944,31963]",
      "dest": "call_argument [31944,31963]"
    },
    {
      "src": "primitive_type [16191,16198]",
      "dest": "primitive_type [16191,16198]"
    },
    {
      "src": "(: ( [37533,37534]",
      "dest": "(: ( [37533,37534]"
    },
    {
      "src": "(: ( [7255,7256]",
      "dest": "(: ( [7255,7256]"
    },
    {
      "src": "uint256: uint256 [19110,19117]",
      "dest": "uint256: uint256 [19110,19117]"
    },
    {
      "src": "returns: returns [25888,25895]",
      "dest": "returns: returns [25888,25895]"
    },
    {
      "src": "type_name [35896,35903]",
      "dest": "type_name [35896,35903]"
    },
    {
      "src": "return_type_definition [34459,34476]",
      "dest": "return_type_definition [34459,34476]"
    },
    {
      "src": "constant: constant [37045,37053]",
      "dest": "constant: constant [37045,37053]"
    },
    {
      "src": "call_argument [13014,13015]",
      "dest": "call_argument [13014,13015]"
    },
    {
      "src": "block_statement [22442,22974]",
      "dest": "block_statement [22442,22974]"
    },
    {
      "src": "event_paramater [34012,34025]",
      "dest": "event_paramater [34012,34025]"
    },
    {
      "src": "identifier: msg [27591,27594]",
      "dest": "identifier: msg [27591,27594]"
    },
    {
      "src": "identifier: a [12482,12483]",
      "dest": "identifier: a [12482,12483]"
    },
    {
      "src": "event_definition [34033,34085]",
      "dest": "event_definition [34033,34085]"
    },
    {
      "src": "identifier: amount [29660,29666]",
      "dest": "identifier: amount [29660,29666]"
    },
    {
      "src": "): ) [8251,8252]",
      "dest": "): ) [8251,8252]"
    },
    {
      "src": "{: { [15485,15486]",
      "dest": "{: { [15485,15486]"
    },
    {
      "src": "primitive_type [27370,27377]",
      "dest": "primitive_type [27370,27377]"
    },
    {
      "src": "primitive_type [37459,37465]",
      "dest": "primitive_type [37459,37465]"
    },
    {
      "src": "identifier: token [11319,11324]",
      "dest": "identifier: token [11319,11324]"
    },
    {
      "src": "returns: returns [12510,12517]",
      "dest": "returns: returns [12510,12517]"
    },
    {
      "src": "call_expression [27571,27658]",
      "dest": "call_expression [27571,27658]"
    },
    {
      "src": "call_expression [28955,29049]",
      "dest": "call_expression [28955,29049]"
    },
    {
      "src": "call_argument [37284,37297]",
      "dest": "call_argument [37284,37297]"
    },
    {
      "src": "member_expression [21838,21859]",
      "dest": "member_expression [21838,21859]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [14902,15384]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [14902,15384]"
    },
    {
      "src": "call_argument [29791,29814]",
      "dest": "call_argument [29791,29814]"
    },
    {
      "src": "(: ( [34052,34053]",
      "dest": "(: ( [34052,34053]"
    },
    {
      "src": "contract_body [24544,32191]",
      "dest": "contract_body [24544,32191]"
    },
    {
      "src": "function_definition [35260,35535]",
      "dest": "function_definition [35260,35535]"
    },
    {
      "src": "returns: returns [21286,21293]",
      "dest": "returns: returns [21286,21293]"
    },
    {
      "src": "call_argument [31212,31218]",
      "dest": "call_argument [31212,31218]"
    },
    {
      "src": ",: , [35913,35914]",
      "dest": ",: , [35913,35914]"
    },
    {
      "src": "): ) [15451,15452]",
      "dest": "): ) [15451,15452]"
    },
    {
      "src": "bool: bool [27478,27482]",
      "dest": "bool: bool [27478,27482]"
    },
    {
      "src": "\": \" [29009,29010]",
      "dest": "\": \" [29009,29010]"
    },
    {
      "src": "(: ( [13477,13478]",
      "dest": "(: ( [13477,13478]"
    },
    {
      "src": "state_mutability [37445,37449]",
      "dest": "state_mutability [37445,37449]"
    },
    {
      "src": "string_literal [37771,37825]",
      "dest": "string_literal [37772,37826]"
    },
    {
      "src": "}: } [11514,11515]",
      "dest": "}: } [11514,11515]"
    },
    {
      "src": "comment: // pragma solidity 0.6.10; [10803,10829]",
      "dest": "comment: // pragma solidity 0.6.10; [10803,10829]"
    },
    {
      "src": ",: , [19108,19109]",
      "dest": ",: , [19108,19109]"
    },
    {
      "src": "type_name [20728,20733]",
      "dest": "type_name [20728,20733]"
    },
    {
      "src": "assignment_expression [35130,35156]",
      "dest": "assignment_expression [35130,35156]"
    },
    {
      "src": "type_name [12983,12990]",
      "dest": "type_name [12983,12990]"
    },
    {
      "src": "identifier: amount [36042,36048]",
      "dest": "identifier: amount [36042,36048]"
    },
    {
      "src": "primitive_type [20663,20668]",
      "dest": "primitive_type [20663,20668]"
    },
    {
      "src": "<=: <= [35722,35724]",
      "dest": "<=: <= [35722,35724]"
    },
    {
      "src": "\": \" [37771,37772]",
      "dest": "\": \" [37772,37773]"
    },
    {
      "src": "let: let [22762,22765]",
      "dest": "let: let [22762,22765]"
    },
    {
      "src": "\": \" [12583,12584]",
      "dest": "\": \" [12583,12584]"
    },
    {
      "src": "abstract: abstract [24496,24504]",
      "dest": "abstract: abstract [24496,24504]"
    },
    {
      "src": "): ) [1790,1791]",
      "dest": "): ) [1790,1791]"
    },
    {
      "src": "identifier: ProxyStorage [4180,4192]",
      "dest": "identifier: ProxyStorage [4180,4192]"
    },
    {
      "src": "comment: // import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; [10833,10892]",
      "dest": "comment: // import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; [10833,10892]"
    },
    {
      "src": "function_body [26255,26336]",
      "dest": "function_body [26255,26336]"
    },
    {
      "src": "function_body [37371,37405]",
      "dest": "function_body [37371,37405]"
    },
    {
      "src": ":: : [22350,22351]",
      "dest": ":: : [22350,22351]"
    },
    {
      "src": "call_expression [26266,26306]",
      "dest": "call_expression [26266,26306]"
    },
    {
      "src": "inheritance_specifier [36933,36944]",
      "dest": "inheritance_specifier [36933,36944]"
    },
    {
      "src": "): ) [7115,7116]",
      "dest": "): ) [7115,7116]"
    },
    {
      "src": "identifier: functionCall [20231,20243]",
      "dest": "identifier: functionCall [20231,20243]"
    },
    {
      "src": "visibility [24871,24877]",
      "dest": "visibility [24871,24877]"
    },
    {
      "src": "returns: returns [8700,8707]",
      "dest": "returns: returns [8700,8707]"
    },
    {
      "src": "variable_declaration_statement [5499,5510]",
      "dest": "variable_declaration_statement [5499,5510]"
    },
    {
      "src": "parameter [12938,12947]",
      "dest": "parameter [12938,12947]"
    },
    {
      "src": "identifier: require [32015,32022]",
      "dest": "identifier: require [32015,32022]"
    },
    {
      "src": "boolean_literal [26324,26328]",
      "dest": "boolean_literal [26324,26328]"
    },
    {
      "src": "\": \" [14255,14256]",
      "dest": "\": \" [14255,14256]"
    },
    {
      "src": "public: public [11446,11452]",
      "dest": "public: public [11446,11452]"
    },
    {
      "src": ",: , [28140,28141]",
      "dest": ",: , [28140,28141]"
    },
    {
      "src": "function: function [26399,26407]",
      "dest": "function: function [26399,26407]"
    },
    {
      "src": "interface_declaration [5772,5855]",
      "dest": "interface_declaration [5772,5855]"
    },
    {
      "src": "boolean_literal [36181,36185]",
      "dest": "boolean_literal [36181,36185]"
    },
    {
      "src": "identifier: maxAmount [37671,37680]",
      "dest": "identifier: maxAmount [37672,37681]"
    },
    {
      "src": "member_expression [29887,29908]",
      "dest": "member_expression [29887,29908]"
    },
    {
      "src": "string [31220,31256]",
      "dest": "string [31220,31256]"
    },
    {
      "src": "expression_statement [36286,36373]",
      "dest": "expression_statement [36286,36373]"
    },
    {
      "src": "type_name [16191,16198]",
      "dest": "type_name [16191,16198]"
    },
    {
      "src": "): ) [29049,29050]",
      "dest": "): ) [29049,29050]"
    },
    {
      "src": "): ) [31350,31351]",
      "dest": "): ) [31350,31351]"
    },
    {
      "src": "public: public [7707,7713]",
      "dest": "public: public [7707,7713]"
    },
    {
      "src": "primitive_type [22087,22093]",
      "dest": "primitive_type [22087,22093]"
    },
    {
      "src": "number_literal: 0 [14148,14149]",
      "dest": "number_literal: 0 [14148,14149]"
    },
    {
      "src": "): ) [37995,37996]",
      "dest": "): ) [37996,37997]"
    },
    {
      "src": "function_definition [19064,19461]",
      "dest": "function_definition [19064,19461]"
    },
    {
      "src": "parameter [15414,15423]",
      "dest": "parameter [15414,15423]"
    },
    {
      "src": "visibility [29674,29682]",
      "dest": "visibility [29674,29682]"
    },
    {
      "src": "identifier: balance [21852,21859]",
      "dest": "identifier: balance [21852,21859]"
    },
    {
      "src": "identifier: sender [29710,29716]",
      "dest": "identifier: sender [29710,29716]"
    },
    {
      "src": "function_body [13882,14286]",
      "dest": "function_body [13882,14286]"
    },
    {
      "src": "identifier: mod [16757,16760]",
      "dest": "identifier: mod [16757,16760]"
    },
    {
      "src": "identifier: maxAmount [35234,35243]",
      "dest": "identifier: maxAmount [35234,35243]"
    },
    {
      "src": "): ) [14795,14796]",
      "dest": "): ) [14795,14796]"
    },
    {
      "src": "identifier: account [25858,25865]",
      "dest": "identifier: account [25858,25865]"
    },
    {
      "src": "type_name [22132,22137]",
      "dest": "type_name [22132,22137]"
    },
    {
      "src": "call_argument [29909,29915]",
      "dest": "call_argument [29909,29915]"
    },
    {
      "src": "(: ( [5064,5065]",
      "dest": "(: ( [5064,5065]"
    },
    {
      "src": "comment: /**  * @dev Collection of functions related to the address type  */ [17020,17089]",
      "dest": "comment: /**  * @dev Collection of functions related to the address type  */ [17020,17089]"
    },
    {
      "src": "}: } [13555,13556]",
      "dest": "}: } [13555,13556]"
    },
    {
      "src": "comment: // solhint-disable-next-line func-name-mixedcase [34093,34141]",
      "dest": "comment: // solhint-disable-next-line func-name-mixedcase [34093,34141]"
    },
    {
      "src": ",: , [16770,16771]",
      "dest": ",: , [16770,16771]"
    },
    {
      "src": "call_argument [33344,33351]",
      "dest": "call_argument [33344,33351]"
    },
    {
      "src": "parameter [33144,33159]",
      "dest": "parameter [33144,33159]"
    },
    {
      "src": "else: else [22437,22441]",
      "dest": "else: else [22437,22441]"
    },
    {
      "src": "yul_function_call [22785,22802]",
      "dest": "yul_function_call [22785,22802]"
    },
    {
      "src": "call_argument [14209,14219]",
      "dest": "call_argument [14209,14219]"
    },
    {
      "src": "identifier: account [33152,33159]",
      "dest": "identifier: account [33152,33159]"
    },
    {
      "src": "identifier: account [35359,35366]",
      "dest": "identifier: account [35359,35366]"
    },
    {
      "src": "returns: returns [22123,22130]",
      "dest": "returns: returns [22123,22130]"
    },
    {
      "src": "): ) [30618,30619]",
      "dest": "): ) [30618,30619]"
    },
    {
      "src": "primitive_type [13388,13395]",
      "dest": "primitive_type [13388,13395]"
    },
    {
      "src": "string_literal [20354,20386]",
      "dest": "string_literal [20354,20386]"
    },
    {
      "src": "): ) [27530,27531]",
      "dest": "): ) [27530,27531]"
    },
    {
      "src": "primitive_type [33144,33151]",
      "dest": "primitive_type [33144,33151]"
    },
    {
      "src": "(: ( [11499,11500]",
      "dest": "(: ( [11499,11500]"
    },
    {
      "src": "string [31965,32003]",
      "dest": "string [31965,32003]"
    },
    {
      "src": "call_expression [21929,21986]",
      "dest": "call_expression [21929,21986]"
    },
    {
      "src": "call_expression [4604,4619]",
      "dest": "call_expression [4604,4619]"
    },
    {
      "src": "type_cast_expression [11335,11348]",
      "dest": "type_cast_expression [11335,11348]"
    },
    {
      "src": "\": \" [20385,20386]",
      "dest": "\": \" [20385,20386]"
    },
    {
      "src": "identifier: Burn [36526,36530]",
      "dest": "identifier: Burn [36526,36530]"
    },
    {
      "src": "expression_statement [31936,32005]",
      "dest": "expression_statement [31936,32005]"
    },
    {
      "src": "string: string [20682,20688]",
      "dest": "string: string [20682,20688]"
    },
    {
      "src": "identifier: spender [28133,28140]",
      "dest": "identifier: spender [28133,28140]"
    },
    {
      "src": "identifier: value [22345,22350]",
      "dest": "identifier: value [22345,22350]"
    },
    {
      "src": "address: address [11187,11194]",
      "dest": "address: address [11187,11194]"
    },
    {
      "src": "identifier: account [36531,36538]",
      "dest": "identifier: account [36531,36538]"
    },
    {
      "src": "identifier: account [31332,31339]",
      "dest": "identifier: account [31332,31339]"
    },
    {
      "src": "call_argument [5483,5487]",
      "dest": "call_argument [5483,5487]"
    },
    {
      "src": "identifier: errorMessage [22934,22946]",
      "dest": "identifier: errorMessage [22934,22946]"
    },
    {
      "src": "identifier: newOwner [7870,7878]",
      "dest": "identifier: newOwner [7870,7878]"
    },
    {
      "src": "type_name [20682,20688]",
      "dest": "type_name [20682,20688]"
    },
    {
      "src": "public: public [28162,28168]",
      "dest": "public: public [28162,28168]"
    },
    {
      "src": "parameter [26181,26198]",
      "dest": "parameter [26181,26198]"
    },
    {
      "src": "identifier: IERC20 [11247,11253]",
      "dest": "identifier: IERC20 [11247,11253]"
    },
    {
      "src": "(: ( [21348,21349]",
      "dest": "(: ( [21348,21349]"
    },
    {
      "src": "call_argument [28992,29007]",
      "dest": "call_argument [28992,29007]"
    },
    {
      "src": "parameter [15425,15451]",
      "dest": "parameter [15425,15451]"
    },
    {
      "src": "visibility [30412,30420]",
      "dest": "visibility [30412,30420]"
    },
    {
      "src": ",: , [21964,21965]",
      "dest": ",: , [21964,21965]"
    },
    {
      "src": "identifier: IERC20 [24537,24543]",
      "dest": "identifier: IERC20 [24537,24543]"
    },
    {
      "src": "parameter [5825,5841]",
      "dest": "parameter [5825,5841]"
    },
    {
      "src": "(: ( [31331,31332]",
      "dest": "(: ( [31331,31332]"
    },
    {
      "src": "identifier: _minBurnAmount [1944,1958]",
      "dest": "identifier: _minBurnAmount [1944,1958]"
    },
    {
      "src": "%: % [16903,16904]",
      "dest": "%: % [16903,16904]"
    },
    {
      "src": "primitive_type [10168,10175]",
      "dest": "primitive_type [10168,10175]"
    },
    {
      "src": "identifier: a [14783,14784]",
      "dest": "identifier: a [14783,14784]"
    },
    {
      "src": "(: ( [33400,33401]",
      "dest": "(: ( [33400,33401]"
    },
    {
      "src": "return_statement [7276,7290]",
      "dest": "return_statement [7276,7290]"
    },
    {
      "src": "): ) [35983,35984]",
      "dest": "): ) [35983,35984]"
    },
    {
      "src": "call_argument [35711,35720]",
      "dest": "call_argument [35711,35720]"
    },
    {
      "src": "parameter [35896,35913]",
      "dest": "parameter [35896,35913]"
    },
    {
      "src": "identifier: b [12555,12556]",
      "dest": "identifier: b [12555,12556]"
    },
    {
      "src": ",: , [27613,27614]",
      "dest": ",: , [27613,27614]"
    },
    {
      "src": "[: [ [26533,26534]",
      "dest": "[: [ [26533,26534]"
    },
    {
      "src": "external: external [10219,10227]",
      "dest": "external: external [10219,10227]"
    },
    {
      "src": ",: , [14784,14785]",
      "dest": ",: , [14784,14785]"
    },
    {
      "src": "uint256: uint256 [34069,34076]",
      "dest": "uint256: uint256 [34069,34076]"
    },
    {
      "src": ">: > [22546,22547]",
      "dest": ">: > [22546,22547]"
    },
    {
      "src": "number_literal: 0 [37886,37887]",
      "dest": "number_literal: 0 [37887,37888]"
    },
    {
      "src": "yul_evm_builtin [22785,22790]",
      "dest": "yul_evm_builtin [22785,22790]"
    },
    {
      "src": "function_definition [25034,25096]",
      "dest": "function_definition [25034,25096]"
    },
    {
      "src": "public: public [32748,32754]",
      "dest": "public: public [32748,32754]"
    },
    {
      "src": ",: , [31339,31340]",
      "dest": ",: , [31339,31340]"
    },
    {
      "src": "parameter [28859,28882]",
      "dest": "parameter [28859,28882]"
    },
    {
      "src": "(: ( [30016,30017]",
      "dest": "(: ( [30016,30017]"
    },
    {
      "src": "mapping: mapping [1764,1771]",
      "dest": "mapping: mapping [1764,1771]"
    },
    {
      "src": "visibility [37164,37170]",
      "dest": "visibility [37164,37170]"
    },
    {
      "src": "comment: // The easiest way to bubble the revert reason is using memory via assembly [22570,22645]",
      "dest": "comment: // The easiest way to bubble the revert reason is using memory via assembly [22570,22645]"
    },
    {
      "src": "return_statement [34391,34413]",
      "dest": "return_statement [34391,34413]"
    },
    {
      "src": "call_argument [12575,12581]",
      "dest": "call_argument [12575,12581]"
    },
    {
      "src": "identifier: addedValue [28270,28280]",
      "dest": "identifier: addedValue [28270,28280]"
    },
    {
      "src": "): ) [28160,28161]",
      "dest": "): ) [28160,28161]"
    },
    {
      "src": "identifier: amount [35680,35686]",
      "dest": "identifier: amount [35680,35686]"
    },
    {
      "src": "parameter [22132,22144]",
      "dest": "parameter [22132,22144]"
    },
    {
      "src": "type_name [30379,30386]",
      "dest": "type_name [30379,30386]"
    },
    {
      "src": ",: , [38232,38233]",
      "dest": ",: , [38233,38234]"
    },
    {
      "src": "bool: bool [28908,28912]",
      "dest": "bool: bool [28908,28912]"
    },
    {
      "src": "comment: // import \"@openzeppelin/contracts/math/SafeMath.sol\"; [23141,23195]",
      "dest": "comment: // import \"@openzeppelin/contracts/math/SafeMath.sol\"; [23141,23195]"
    },
    {
      "src": "using: using [24551,24556]",
      "dest": "using: using [24551,24556]"
    },
    {
      "src": "constant: constant [33872,33880]",
      "dest": "constant: constant [33872,33880]"
    },
    {
      "src": "(: ( [7408,7409]",
      "dest": "(: ( [7408,7409]"
    },
    {
      "src": "expression_statement [36482,36511]",
      "dest": "expression_statement [36482,36511]"
    },
    {
      "src": "source_file [0,38252]",
      "dest": "source_file [0,38253]"
    },
    {
      "src": "identifier: owner [7227,7232]",
      "dest": "identifier: owner [7227,7232]"
    },
    {
      "src": "address: address [26418,26425]",
      "dest": "address: address [26418,26425]"
    },
    {
      "src": "call_expression [33232,33262]",
      "dest": "call_expression [33232,33262]"
    },
    {
      "src": "identifier: sender [33357,33363]",
      "dest": "identifier: sender [33357,33363]"
    },
    {
      "src": "identifier: amount [35299,35305]",
      "dest": "identifier: amount [35299,35305]"
    },
    {
      "src": "variable_declaration [19311,19323]",
      "dest": "variable_declaration [19311,19323]"
    },
    {
      "src": "identifier: length [22539,22545]",
      "dest": "identifier: length [22539,22545]"
    },
    {
      "src": "string [37889,37943]",
      "dest": "string [37890,37944]"
    },
    {
      "src": "address: address [6764,6771]",
      "dest": "address: address [6764,6771]"
    },
    {
      "src": "identifier: ProxyStorage [1606,1618]",
      "dest": "identifier: ProxyStorage [1606,1618]"
    },
    {
      "src": "identifier: allowance [26408,26417]",
      "dest": "identifier: allowance [26408,26417]"
    },
    {
      "src": "return_type_definition [20719,20741]",
      "dest": "return_type_definition [20719,20741]"
    },
    {
      "src": "function: function [26697,26705]",
      "dest": "function: function [26697,26705]"
    },
    {
      "src": "parameter [34217,34238]",
      "dest": "parameter [34217,34238]"
    },
    {
      "src": "type_name [11301,11308]",
      "dest": "type_name [11301,11308]"
    },
    {
      "src": "return_type_definition [21286,21308]",
      "dest": "return_type_definition [21286,21308]"
    },
    {
      "src": "identifier: _owner [7050,7056]",
      "dest": "identifier: _owner [7050,7056]"
    },
    {
      "src": "emit_statement [31318,31361]",
      "dest": "emit_statement [31318,31361]"
    },
    {
      "src": "primitive_type [35351,35358]",
      "dest": "primitive_type [35351,35358]"
    },
    {
      "src": "identifier: this [11195,11199]",
      "dest": "identifier: this [11195,11199]"
    },
    {
      "src": "assignment_expression [35167,35193]",
      "dest": "assignment_expression [35167,35193]"
    },
    {
      "src": "call_argument [20348,20352]",
      "dest": "call_argument [20348,20352]"
    },
    {
      "src": "member_expression [28955,28991]",
      "dest": "member_expression [28955,28991]"
    },
    {
      "src": "visibility [12496,12504]",
      "dest": "visibility [12496,12504]"
    },
    {
      "src": "identifier: isContract [22165,22175]",
      "dest": "identifier: isContract [22165,22175]"
    },
    {
      "src": "override: override [25698,25706]",
      "dest": "override: override [25698,25706]"
    },
    {
      "src": "comment: // pragma solidity 0.6.10; [5742,5768]",
      "dest": "comment: // pragma solidity 0.6.10; [5742,5768]"
    },
    {
      "src": ",: , [33249,33250]",
      "dest": ",: , [33249,33250]"
    },
    {
      "src": "comment: // Dependency file: @openzeppelin/contracts/token/ERC20/IERC20.sol [7924,7990]",
      "dest": "comment: // Dependency file: @openzeppelin/contracts/token/ERC20/IERC20.sol [7924,7990]"
    },
    {
      "src": "}: } [30082,30083]",
      "dest": "}: } [30082,30083]"
    },
    {
      "src": "type_name [16761,16768]",
      "dest": "type_name [16761,16768]"
    },
    {
      "src": "): ) [19166,19167]",
      "dest": "): ) [19166,19167]"
    },
    {
      "src": "(: ( [34467,34468]",
      "dest": "(: ( [34467,34468]"
    },
    {
      "src": "identifier: minAmount [35147,35156]",
      "dest": "identifier: minAmount [35147,35156]"
    },
    {
      "src": "true: true [26324,26328]",
      "dest": "true: true [26324,26328]"
    },
    {
      "src": "(: ( [30048,30049]",
      "dest": "(: ( [30048,30049]"
    },
    {
      "src": "virtual: virtual [33184,33191]",
      "dest": "virtual: virtual [33184,33191]"
    },
    {
      "src": "uint256: uint256 [37118,37125]",
      "dest": "uint256: uint256 [37118,37125]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-allowance}.      */ [26344,26393]",
      "dest": "comment: /**      * @dev See {IERC20-allowance}.      */ [26344,26393]"
    },
    {
      "src": "function: function [36201,36209]",
      "dest": "function: function [36201,36209]"
    },
    {
      "src": "call_argument [37771,37825]",
      "dest": "call_argument [37772,37826]"
    },
    {
      "src": "visibility [34447,34453]",
      "dest": "visibility [34447,34453]"
    },
    {
      "src": "uint256: uint256 [10203,10210]",
      "dest": "uint256: uint256 [10203,10210]"
    },
    {
      "src": "member_expression [37727,37740]",
      "dest": "member_expression [37728,37741]"
    },
    {
      "src": "return: return [25741,25747]",
      "dest": "return: return [25741,25747]"
    },
    {
      "src": "(: ( [35668,35669]",
      "dest": "(: ( [35668,35669]"
    },
    {
      "src": "uint256: uint256 [15403,15410]",
      "dest": "uint256: uint256 [15403,15410]"
    },
    {
      "src": "identifier: _maxBurnAmount [36401,36415]",
      "dest": "identifier: _maxBurnAmount [36401,36415]"
    },
    {
      "src": "pure: pure [16177,16181]",
      "dest": "pure: pure [16177,16181]"
    },
    {
      "src": "): ) [20277,20278]",
      "dest": "): ) [20277,20278]"
    },
    {
      "src": "identifier: target [20340,20346]",
      "dest": "identifier: target [20340,20346]"
    },
    {
      "src": "identifier: errorMessage [21773,21785]",
      "dest": "identifier: errorMessage [21773,21785]"
    },
    {
      "src": "for: for [24566,24569]",
      "dest": "for: for [24566,24569]"
    },
    {
      "src": "returns: returns [34362,34369]",
      "dest": "returns: returns [34362,34369]"
    },
    {
      "src": "call_argument [36531,36538]",
      "dest": "call_argument [36531,36538]"
    },
    {
      "src": "identifier: msg [28245,28248]",
      "dest": "identifier: msg [28245,28248]"
    },
    {
      "src": "identifier: _balances [31189,31198]",
      "dest": "identifier: _balances [31189,31198]"
    },
    {
      "src": "): ) [36111,36112]",
      "dest": "): ) [36111,36112]"
    },
    {
      "src": "false [4925,4930]",
      "dest": "false [4925,4930]"
    },
    {
      "src": "parameter [8400,8407]",
      "dest": "parameter [8400,8407]"
    },
    {
      "src": "(: ( [22164,22165]",
      "dest": "(: ( [22164,22165]"
    },
    {
      "src": "comment: /**      * @dev Throws if called by any account other than the owner.      */ [7305,7384]",
      "dest": "comment: /**      * @dev Throws if called by any account other than the owner.      */ [7305,7384]"
    },
    {
      "src": "identifier: b [13478,13479]",
      "dest": "identifier: b [13478,13479]"
    },
    {
      "src": ":=: := [18068,18070]",
      "dest": ":=: := [18068,18070]"
    },
    {
      "src": ",: , [26729,26730]",
      "dest": ",: , [26729,26730]"
    },
    {
      "src": "type_name [28859,28866]",
      "dest": "type_name [28859,28866]"
    },
    {
      "src": "identifier: maxAmount [34992,35001]",
      "dest": "identifier: maxAmount [34992,35001]"
    },
    {
      "src": "=: = [13520,13521]",
      "dest": "=: = [13520,13521]"
    },
    {
      "src": "identifier: account [35511,35518]",
      "dest": "identifier: account [35511,35518]"
    },
    {
      "src": "state_variable_declaration [1808,1868]",
      "dest": "state_variable_declaration [1808,1868]"
    },
    {
      "src": "identifier: sub [13373,13376]",
      "dest": "identifier: sub [13373,13376]"
    },
    {
      "src": "=: = [7897,7898]",
      "dest": "=: = [7897,7898]"
    },
    {
      "src": "parameter [13388,13397]",
      "dest": "parameter [13388,13397]"
    },
    {
      "src": "\": \" [19361,19362]",
      "dest": "\": \" [19361,19362]"
    },
    {
      "src": "parameter [27423,27437]",
      "dest": "parameter [27423,27437]"
    },
    {
      "src": "identifier: minBurnAmount [37126,37139]",
      "dest": "identifier: minBurnAmount [37126,37139]"
    },
    {
      "src": "): ) [22216,22217]",
      "dest": "): ) [22216,22217]"
    },
    {
      "src": "internal: internal [19126,19134]",
      "dest": "internal: internal [19126,19134]"
    },
    {
      "src": ",: , [15423,15424]",
      "dest": ",: , [15423,15424]"
    },
    {
      "src": "if_statement [22524,22963]",
      "dest": "if_statement [22524,22963]"
    },
    {
      "src": "expression_statement [29702,29773]",
      "dest": "expression_statement [29702,29773]"
    },
    {
      "src": "member_expression [37845,37858]",
      "dest": "member_expression [37846,37859]"
    },
    {
      "src": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [8026,8098]",
      "dest": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [8026,8098]"
    },
    {
      "src": "array_access [31168,31186]",
      "dest": "array_access [31168,31186]"
    },
    {
      "src": "): ) [18090,18091]",
      "dest": "): ) [18090,18091]"
    },
    {
      "src": "identifier: functionCallWithValue [21205,21226]",
      "dest": "identifier: functionCallWithValue [21205,21226]"
    },
    {
      "src": "parameter [29599,29613]",
      "dest": "parameter [29599,29613]"
    },
    {
      "src": "]: ] [25941,25942]",
      "dest": "]: ] [25941,25942]"
    },
    {
      "src": "identifier: spender [32164,32171]",
      "dest": "identifier: spender [32164,32171]"
    },
    {
      "src": "type_name [12485,12492]",
      "dest": "type_name [12485,12492]"
    },
    {
      "src": "pure: pure [13436,13440]",
      "dest": "pure: pure [13436,13440]"
    },
    {
      "src": "primitive_type [25850,25857]",
      "dest": "primitive_type [25850,25857]"
    },
    {
      "src": "identifier: _balances [31168,31177]",
      "dest": "identifier: _balances [31168,31177]"
    },
    {
      "src": "uint256: uint256 [29652,29659]",
      "dest": "uint256: uint256 [29652,29659]"
    },
    {
      "src": "call_expression [28925,29050]",
      "dest": "call_expression [28925,29050]"
    },
    {
      "src": "address: address [27370,27377]",
      "dest": "address: address [27370,27377]"
    },
    {
      "src": "public: public [34350,34356]",
      "dest": "public: public [34350,34356]"
    },
    {
      "src": "address: address [35274,35281]",
      "dest": "address: address [35274,35281]"
    },
    {
      "src": "emit: emit [35501,35505]",
      "dest": "emit: emit [35501,35505]"
    },
    {
      "src": "call_argument [36023,36029]",
      "dest": "call_argument [36023,36029]"
    },
    {
      "src": "(: ( [10434,10435]",
      "dest": "(: ( [10434,10435]"
    },
    {
      "src": "identifier: errorMessage [21973,21985]",
      "dest": "identifier: errorMessage [21973,21985]"
    },
    {
      "src": "(: ( [26487,26488]",
      "dest": "(: ( [26487,26488]"
    },
    {
      "src": "member_expression [35654,35668]",
      "dest": "member_expression [35654,35668]"
    },
    {
      "src": "primitive_type [37644,37651]",
      "dest": "primitive_type [37645,37652]"
    },
    {
      "src": "identifier: amount [35783,35789]",
      "dest": "identifier: amount [35783,35789]"
    },
    {
      "src": "string [27615,27657]",
      "dest": "string [27615,27657]"
    },
    {
      "src": "primitive_type [35580,35587]",
      "dest": "primitive_type [35580,35587]"
    },
    {
      "src": "identifier: spender [26818,26825]",
      "dest": "identifier: spender [26818,26825]"
    },
    {
      "src": "expression_statement [35343,35458]",
      "dest": "expression_statement [35343,35458]"
    },
    {
      "src": "}: } [26335,26336]",
      "dest": "}: } [26335,26336]"
    },
    {
      "src": "identifier: burner [34004,34010]",
      "dest": "identifier: burner [34004,34010]"
    },
    {
      "src": "): ) [8375,8376]",
      "dest": "): ) [8375,8376]"
    },
    {
      "src": "return_type_definition [8391,8408]",
      "dest": "return_type_definition [8391,8408]"
    },
    {
      "src": "visibility [28884,28890]",
      "dest": "visibility [28884,28890]"
    },
    {
      "src": "identifier: onlyOwner [35018,35027]",
      "dest": "identifier: onlyOwner [35018,35027]"
    },
    {
      "src": "comment: /**      * @dev Destroys `amount` tokens from `account`, deducting from the caller's      * allowance.      *      * See {ERC20-_burn} and {ERC20-allowance}.      *      * Requirements:      *      * - the caller must have allowance for ``accounts``'s tokens of at least      * `amount`.      */ [32815,33120]",
      "dest": "comment: /**      * @dev Destroys `amount` tokens from `account`, deducting from the caller's      * allowance.      *      * See {ERC20-_burn} and {ERC20-allowance}.      *      * Requirements:      *      * - the caller must have allowance for ``accounts``'s tokens of at least      * `amount`.      */ [32815,33120]"
    },
    {
      "src": "type_name [34965,34972]",
      "dest": "type_name [34965,34972]"
    },
    {
      "src": "call_argument [7862,7868]",
      "dest": "call_argument [7862,7868]"
    },
    {
      "src": "parameter [21243,21260]",
      "dest": "parameter [21243,21260]"
    },
    {
      "src": "): ) [7781,7782]",
      "dest": "): ) [7781,7782]"
    },
    {
      "src": "identifier: Approval [10663,10671]",
      "dest": "identifier: Approval [10663,10671]"
    },
    {
      "src": "(: ( [21951,21952]",
      "dest": "(: ( [21951,21952]"
    },
    {
      "src": "function: function [7662,7670]",
      "dest": "function: function [7662,7670]"
    },
    {
      "src": "parameter [9822,9826]",
      "dest": "parameter [9822,9826]"
    },
    {
      "src": "return_type_definition [16825,16842]",
      "dest": "return_type_definition [16825,16842]"
    },
    {
      "src": "primitive_type [19083,19098]",
      "dest": "primitive_type [19083,19098]"
    },
    {
      "src": "{: { [4767,4768]",
      "dest": "{: { [4767,4768]"
    },
    {
      "src": ",: , [27412,27413]",
      "dest": ",: , [27412,27413]"
    },
    {
      "src": "returns: returns [8391,8398]",
      "dest": "returns: returns [8391,8398]"
    },
    {
      "src": "user_defined_type [36902,36909]",
      "dest": "user_defined_type [36902,36909]"
    },
    {
      "src": "identifier: subtractedValue [28992,29007]",
      "dest": "identifier: subtractedValue [28992,29007]"
    },
    {
      "src": "variable_declaration [22291,22303]",
      "dest": "variable_declaration [22291,22303]"
    },
    {
      "src": "call_argument [22363,22367]",
      "dest": "call_argument [22363,22367]"
    },
    {
      "src": "}: } [22973,22974]",
      "dest": "}: } [22973,22974]"
    },
    {
      "src": "{: { [30429,30430]",
      "dest": "{: { [30429,30430]"
    },
    {
      "src": "): ) [35687,35688]",
      "dest": "): ) [35687,35688]"
    },
    {
      "src": "contract_body [33857,36558]",
      "dest": "contract_body [33857,36558]"
    },
    {
      "src": "public: public [34447,34453]",
      "dest": "public: public [34447,34453]"
    },
    {
      "src": ",: , [8673,8674]",
      "dest": ",: , [8673,8674]"
    },
    {
      "src": "comment: // Ownable.sol [1703,1717]",
      "dest": "comment: // Ownable.sol [1703,1717]"
    },
    {
      "src": "(: ( [30447,30448]",
      "dest": "(: ( [30447,30448]"
    },
    {
      "src": ",: , [32790,32791]",
      "dest": ",: , [32790,32791]"
    },
    {
      "src": "parameter [34984,35001]",
      "dest": "parameter [34984,35001]"
    },
    {
      "src": "identifier: REDEMPTION_ADDRESS_COUNT [35370,35394]",
      "dest": "identifier: REDEMPTION_ADDRESS_COUNT [35370,35394]"
    },
    {
      "src": "call_argument [36073,36082]",
      "dest": "call_argument [36073,36082]"
    },
    {
      "src": "identifier: _initialized [1657,1669]",
      "dest": "identifier: _initialized [1657,1669]"
    },
    {
      "src": ">: > [18115,18116]",
      "dest": ">: > [18115,18116]"
    },
    {
      "src": "identifier: spender [31868,31875]",
      "dest": "identifier: spender [31868,31875]"
    },
    {
      "src": "parameter [34371,34378]",
      "dest": "parameter [34371,34378]"
    },
    {
      "src": "primitive_type [13510,13517]",
      "dest": "primitive_type [13510,13517]"
    },
    {
      "src": "parameter [28125,28140]",
      "dest": "parameter [28125,28140]"
    },
    {
      "src": "\": \" [29956,29957]",
      "dest": "\": \" [29956,29957]"
    },
    {
      "src": "identifier: decreasedAllowance [33211,33229]",
      "dest": "identifier: decreasedAllowance [33211,33229]"
    },
    {
      "src": "function: function [25831,25839]",
      "dest": "function: function [25831,25839]"
    },
    {
      "src": "identifier: transferOwnership [7671,7688]",
      "dest": "identifier: transferOwnership [7671,7688]"
    },
    {
      "src": "(: ( [36390,36391]",
      "dest": "(: ( [36390,36391]"
    },
    {
      "src": "[: [ [28244,28245]",
      "dest": "[: [ [28244,28245]"
    },
    {
      "src": "type_name [24570,24577]",
      "dest": "type_name [24570,24577]"
    },
    {
      "src": "): ) [25865,25866]",
      "dest": "): ) [25865,25866]"
    },
    {
      "src": "uint256: uint256 [14173,14180]",
      "dest": "uint256: uint256 [14173,14180]"
    },
    {
      "src": "identifier: amount [35932,35938]",
      "dest": "identifier: amount [35932,35938]"
    },
    {
      "src": "expression_statement [34272,34316]",
      "dest": "expression_statement [34272,34316]"
    },
    {
      "src": "identifier: mod [16218,16221]",
      "dest": "identifier: mod [16218,16221]"
    },
    {
      "src": "(: ( [35628,35629]",
      "dest": "(: ( [35628,35629]"
    },
    {
      "src": "returns: returns [37355,37362]",
      "dest": "returns: returns [37355,37362]"
    },
    {
      "src": "identifier: sender [26280,26286]",
      "dest": "identifier: sender [26280,26286]"
    },
    {
      "src": "]: ] [30011,30012]",
      "dest": "]: ] [30011,30012]"
    },
    {
      "src": "type_name [12938,12945]",
      "dest": "type_name [12938,12945]"
    },
    {
      "src": "!=: != [31104,31106]",
      "dest": "!=: != [31104,31106]"
    },
    {
      "src": "identifier: sender [10176,10182]",
      "dest": "identifier: sender [10176,10182]"
    },
    {
      "src": "): ) [33175,33176]",
      "dest": "): ) [33175,33176]"
    },
    {
      "src": "(: ( [20243,20244]",
      "dest": "(: ( [20243,20244]"
    },
    {
      "src": "(: ( [20339,20340]",
      "dest": "(: ( [20339,20340]"
    },
    {
      "src": "yul_identifier [22791,22801]",
      "dest": "yul_identifier [22791,22801]"
    },
    {
      "src": "primitive_type [6795,6802]",
      "dest": "primitive_type [6795,6802]"
    },
    {
      "src": "return_type_definition [15467,15484]",
      "dest": "return_type_definition [15467,15484]"
    },
    {
      "src": "return_statement [29061,29073]",
      "dest": "return_statement [29061,29073]"
    },
    {
      "src": "identifier: account [35474,35481]",
      "dest": "identifier: account [35474,35481]"
    },
    {
      "src": "call_expression [16854,16883]",
      "dest": "call_expression [16854,16883]"
    },
    {
      "src": "]: ] [26532,26533]",
      "dest": "]: ] [26532,26533]"
    },
    {
      "src": "indexed: indexed [10703,10710]",
      "dest": "indexed: indexed [10703,10710]"
    },
    {
      "src": "parameter [31044,31058]",
      "dest": "parameter [31044,31058]"
    },
    {
      "src": "string: string [13399,13405]",
      "dest": "string: string [13399,13405]"
    },
    {
      "src": "): ) [13457,13458]",
      "dest": "): ) [13457,13458]"
    },
    {
      "src": "if_statement [14114,14161]",
      "dest": "if_statement [14114,14161]"
    },
    {
      "src": "uint256: uint256 [16191,16198]",
      "dest": "uint256: uint256 [16191,16198]"
    },
    {
      "src": "type_name [13510,13517]",
      "dest": "type_name [13510,13517]"
    },
    {
      "src": "primitive_type [15425,15431]",
      "dest": "primitive_type [15425,15431]"
    },
    {
      "src": "identifier: target [21717,21723]",
      "dest": "identifier: target [21717,21723]"
    },
    {
      "src": ",: , [16155,16156]",
      "dest": ",: , [16155,16156]"
    },
    {
      "src": "state_mutability [17750,17754]",
      "dest": "state_mutability [17750,17754]"
    },
    {
      "src": "): ) [20708,20709]",
      "dest": "): ) [20708,20709]"
    },
    {
      "src": "call_argument [27559,27569]",
      "dest": "call_argument [27559,27569]"
    },
    {
      "src": "expression_statement [7498,7500]",
      "dest": "expression_statement [7498,7500]"
    },
    {
      "src": "call_argument [16222,16223]",
      "dest": "call_argument [16222,16223]"
    },
    {
      "src": "primitive_type [35871,35878]",
      "dest": "primitive_type [35871,35878]"
    },
    {
      "src": "function: function [31808,31816]",
      "dest": "function: function [31808,31816]"
    },
    {
      "src": "identifier: returndata [22791,22801]",
      "dest": "identifier: returndata [22791,22801]"
    },
    {
      "src": ">=: >= [19176,19178]",
      "dest": ">=: >= [19176,19178]"
    },
    {
      "src": "uint256: uint256 [34468,34475]",
      "dest": "uint256: uint256 [34468,34475]"
    },
    {
      "src": "function_body [7265,7297]",
      "dest": "function_body [7265,7297]"
    },
    {
      "src": "override_specifier [38077,38085]",
      "dest": "override_specifier [38078,38086]"
    },
    {
      "src": "type_name [25081,25087]",
      "dest": "type_name [25081,25087]"
    },
    {
      "src": "call_argument [14857,14885]",
      "dest": "call_argument [14857,14885]"
    },
    {
      "src": "(: ( [31960,31961]",
      "dest": "(: ( [31960,31961]"
    },
    {
      "src": "identifier: c [15543,15544]",
      "dest": "identifier: c [15543,15544]"
    },
    {
      "src": "=: = [4830,4831]",
      "dest": "=: = [4830,4831]"
    },
    {
      "src": "function_definition [35543,35831]",
      "dest": "function_definition [35543,35831]"
    },
    {
      "src": "}: } [15667,15668]",
      "dest": "}: } [15667,15668]"
    },
    {
      "src": "==: == [37883,37885]",
      "dest": "==: == [37884,37886]"
    },
    {
      "src": "type_cast_expression [30459,30469]",
      "dest": "type_cast_expression [30459,30469]"
    },
    {
      "src": "uint256: uint256 [21262,21269]",
      "dest": "uint256: uint256 [21262,21269]"
    },
    {
      "src": "parameter [19110,19124]",
      "dest": "parameter [19110,19124]"
    },
    {
      "src": "call_argument [26827,26833]",
      "dest": "call_argument [26827,26833]"
    },
    {
      "src": "type_name [15535,15542]",
      "dest": "type_name [15535,15542]"
    },
    {
      "src": "string_literal [27615,27657]",
      "dest": "string_literal [27615,27657]"
    },
    {
      "src": "binary_expression [29791,29814]",
      "dest": "binary_expression [29791,29814]"
    },
    {
      "src": "address: address [7256,7263]",
      "dest": "address: address [7256,7263]"
    },
    {
      "src": "{: { [37474,37475]",
      "dest": "{: { [37474,37475]"
    },
    {
      "src": "comment: /**      * @dev Initializes the contract setting the deployer as the initial owner.      */ [6829,6922]",
      "dest": "comment: /**      * @dev Initializes the contract setting the deployer as the initial owner.      */ [6829,6922]"
    },
    {
      "src": "call_argument [33275,33321]",
      "dest": "call_argument [33275,33321]"
    },
    {
      "src": "identifier: mod [37855,37858]",
      "dest": "identifier: mod [37856,37859]"
    },
    {
      "src": "parameter [15476,15483]",
      "dest": "parameter [15476,15483]"
    },
    {
      "src": "address: address [33988,33995]",
      "dest": "address: address [33988,33995]"
    },
    {
      "src": "member_expression [22332,22343]",
      "dest": "member_expression [22332,22343]"
    },
    {
      "src": "identifier: returndata [22414,22424]",
      "dest": "identifier: returndata [22414,22424]"
    },
    {
      "src": "parameter [25596,25601]",
      "dest": "parameter [25596,25601]"
    },
    {
      "src": "parameter [29624,29641]",
      "dest": "parameter [29624,29641]"
    },
    {
      "src": "primitive_type [31836,31843]",
      "dest": "primitive_type [31836,31843]"
    },
    {
      "src": ",: , [7868,7869]",
      "dest": ",: , [7868,7869]"
    },
    {
      "src": "{: { [17107,17108]",
      "dest": "{: { [17107,17108]"
    },
    {
      "src": "(: ( [22830,22831]",
      "dest": "(: ( [22830,22831]"
    },
    {
      "src": "primitive_type [24602,24609]",
      "dest": "primitive_type [24602,24609]"
    },
    {
      "src": "state_variable_declaration [1965,1988]",
      "dest": "state_variable_declaration [1965,1988]"
    },
    {
      "src": "event_paramater [10720,10733]",
      "dest": "event_paramater [10720,10733]"
    },
    {
      "src": "identifier: account [30656,30663]",
      "dest": "identifier: account [30656,30663]"
    },
    {
      "src": "inheritance_specifier [6687,6695]",
      "dest": "inheritance_specifier [6687,6695]"
    },
    {
      "src": "return_statement [26508,26543]",
      "dest": "return_statement [26508,26543]"
    },
    {
      "src": "modifier_invocation [35322,35331]",
      "dest": "modifier_invocation [35322,35331]"
    },
    {
      "src": "identifier: recipient [35569,35578]",
      "dest": "identifier: recipient [35569,35578]"
    },
    {
      "src": "\": \" [13051,13052]",
      "dest": "\": \" [13051,13052]"
    },
    {
      "src": "binary_expression [19154,19185]",
      "dest": "binary_expression [19154,19185]"
    },
    {
      "src": "): ) [29771,29772]",
      "dest": "): ) [29771,29772]"
    },
    {
      "src": "parameter [14775,14784]",
      "dest": "parameter [14775,14784]"
    },
    {
      "src": "primitive_type [26181,26188]",
      "dest": "primitive_type [26181,26188]"
    },
    {
      "src": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [27697,28092]",
      "dest": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [27697,28092]"
    },
    {
      "src": "primitive_type [11187,11194]",
      "dest": "primitive_type [11187,11194]"
    },
    {
      "src": "identifier: newOwner [5833,5841]",
      "dest": "identifier: newOwner [5833,5841]"
    },
    {
      "src": "contract: contract [4154,4162]",
      "dest": "contract: contract [4154,4162]"
    },
    {
      "src": "number_literal: 0 [18117,18118]",
      "dest": "number_literal: 0 [18117,18118]"
    },
    {
      "src": "yul_path [22852,22867]",
      "dest": "yul_path [22852,22867]"
    },
    {
      "src": "contract: contract [36866,36874]",
      "dest": "contract: contract [36866,36874]"
    },
    {
      "src": "address: address [32034,32041]",
      "dest": "address: address [32034,32041]"
    },
    {
      "src": "identifier: maxBurnAmount [37149,37162]",
      "dest": "identifier: maxBurnAmount [37149,37162]"
    },
    {
      "src": "primitive_type [12539,12546]",
      "dest": "primitive_type [12539,12546]"
    },
    {
      "src": "variable_declaration [17972,17984]",
      "dest": "variable_declaration [17972,17984]"
    },
    {
      "src": "address: address [10168,10175]",
      "dest": "address: address [10168,10175]"
    },
    {
      "src": "}: } [34419,34420]",
      "dest": "}: } [34419,34420]"
    },
    {
      "src": "call_expression [37719,37826]",
      "dest": "call_expression [37720,37827]"
    },
    {
      "src": "function_definition [36201,36555]",
      "dest": "function_definition [36201,36555]"
    },
    {
      "src": "event_definition [33977,34027]",
      "dest": "event_definition [33977,34027]"
    },
    {
      "src": "function: function [34428,34436]",
      "dest": "function: function [34428,34436]"
    },
    {
      "src": "array_access [25924,25942]",
      "dest": "array_access [25924,25942]"
    },
    {
      "src": "call_expression [29887,29958]",
      "dest": "call_expression [29887,29958]"
    },
    {
      "src": "contract: contract [11066,11074]",
      "dest": "contract: contract [11066,11074]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/Initializable.sol\"; [33591,33648]",
      "dest": "comment: // import \"contracts/true-gold/common/Initializable.sol\"; [33591,33648]"
    },
    {
      "src": "}: } [7506,7507]",
      "dest": "}: } [7506,7507]"
    },
    {
      "src": "function_body [33192,33425]",
      "dest": "function_body [33192,33425]"
    },
    {
      "src": "number_literal: 0 [30467,30468]",
      "dest": "number_literal: 0 [30467,30468]"
    },
    {
      "src": "visibility [35596,35602]",
      "dest": "visibility [35596,35602]"
    },
    {
      "src": "primitive_type [4700,4704]",
      "dest": "primitive_type [4700,4704]"
    },
    {
      "src": "comment: // Dependency file: contracts/true-gold/common/Ownable.sol [5861,5919]",
      "dest": "comment: // Dependency file: contracts/true-gold/common/Ownable.sol [5861,5919]"
    },
    {
      "src": "identifier: a [13385,13386]",
      "dest": "identifier: a [13385,13386]"
    },
    {
      "src": "type_name [34984,34991]",
      "dest": "type_name [34984,34991]"
    },
    {
      "src": "assignment_expression [31268,31307]",
      "dest": "assignment_expression [31268,31307]"
    },
    {
      "src": "primitive_type [12938,12945]",
      "dest": "primitive_type [12938,12945]"
    },
    {
      "src": "parameter [26714,26729]",
      "dest": "parameter [26714,26729]"
    },
    {
      "src": "uint256: uint256 [21744,21751]",
      "dest": "uint256: uint256 [21744,21751]"
    },
    {
      "src": "expression_statement [36128,36153]",
      "dest": "expression_statement [36128,36153]"
    },
    {
      "src": "call_argument [31115,31116]",
      "dest": "call_argument [31115,31116]"
    },
    {
      "src": "function_body [31925,32188]",
      "dest": "function_body [31925,32188]"
    },
    {
      "src": "identifier: a [13014,13015]",
      "dest": "identifier: a [13014,13015]"
    },
    {
      "src": "{: { [28914,28915]",
      "dest": "{: { [28914,28915]"
    },
    {
      "src": "internal: internal [38060,38068]",
      "dest": "internal: internal [38061,38069]"
    },
    {
      "src": "uint256: uint256 [16761,16768]",
      "dest": "uint256: uint256 [16761,16768]"
    },
    {
      "src": "primitive_type [22291,22295]",
      "dest": "primitive_type [22291,22295]"
    },
    {
      "src": "string [31119,31154]",
      "dest": "string [31119,31154]"
    },
    {
      "src": "type_name [20297,20302]",
      "dest": "type_name [20297,20302]"
    },
    {
      "src": "identifier: balanceOf [25840,25849]",
      "dest": "identifier: balanceOf [25840,25849]"
    },
    {
      "src": "call_expression [14201,14257]",
      "dest": "call_expression [14201,14257]"
    },
    {
      "src": "expression_statement [35167,35194]",
      "dest": "expression_statement [35167,35194]"
    },
    {
      "src": "): ) [6819,6820]",
      "dest": "): ) [6819,6820]"
    },
    {
      "src": "memory: memory [20669,20675]",
      "dest": "memory: memory [20669,20675]"
    },
    {
      "src": "]: ] [29883,29884]",
      "dest": "]: ] [29883,29884]"
    },
    {
      "src": "primitive_type [28125,28132]",
      "dest": "primitive_type [28125,28132]"
    },
    {
      "src": "): ) [32798,32799]",
      "dest": "): ) [32798,32799]"
    },
    {
      "src": "(: ( [20646,20647]",
      "dest": "(: ( [20646,20647]"
    },
    {
      "src": "return_type_definition [10228,10242]",
      "dest": "return_type_definition [10228,10242]"
    },
    {
      "src": "): ) [22849,22850]",
      "dest": "): ) [22849,22850]"
    },
    {
      "src": "(: ( [33266,33267]",
      "dest": "(: ( [33266,33267]"
    },
    {
      "src": "binary_expression [4587,4636]",
      "dest": "binary_expression [4587,4636]"
    },
    {
      "src": "identifier: onlyOwner [35322,35331]",
      "dest": "identifier: onlyOwner [35322,35331]"
    },
    {
      "src": "string_literal [14221,14256]",
      "dest": "string_literal [14221,14256]"
    },
    {
      "src": "(: ( [21708,21709]",
      "dest": "(: ( [21708,21709]"
    },
    {
      "src": ",: , [9786,9787]",
      "dest": ",: , [9786,9787]"
    },
    {
      "src": "address: address [24602,24609]",
      "dest": "address: address [24602,24609]"
    },
    {
      "src": "string [36417,36470]",
      "dest": "string [36417,36470]"
    },
    {
      "src": "comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      * Can only be called by the current owner.      */ [7515,7656]",
      "dest": "comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      * Can only be called by the current owner.      */ [7515,7656]"
    },
    {
      "src": "abstract: abstract [32562,32570]",
      "dest": "abstract: abstract [32562,32570]"
    },
    {
      "src": "identifier: value [21966,21971]",
      "dest": "identifier: value [21966,21971]"
    },
    {
      "src": "bool: bool [26780,26784]",
      "dest": "bool: bool [26780,26784]"
    },
    {
      "src": "primitive_type [36065,36072]",
      "dest": "primitive_type [36065,36072]"
    },
    {
      "src": "type_name [37566,37572]",
      "dest": "type_name [37566,37572]"
    },
    {
      "src": "(: ( [37974,37975]",
      "dest": "(: ( [37975,37976]"
    },
    {
      "src": "parenthesized_expression [22933,22947]",
      "dest": "parenthesized_expression [22933,22947]"
    },
    {
      "src": "binary_expression [7760,7782]",
      "dest": "binary_expression [7760,7782]"
    },
    {
      "src": "call_argument [13478,13484]",
      "dest": "call_argument [13478,13484]"
    },
    {
      "src": "assembly: assembly [5577,5585]",
      "dest": "assembly: assembly [5577,5585]"
    },
    {
      "src": "=: = [33906,33907]",
      "dest": "=: = [33906,33907]"
    },
    {
      "src": "identifier: c [13518,13519]",
      "dest": "identifier: c [13518,13519]"
    },
    {
      "src": "visibility [31060,31068]",
      "dest": "visibility [31060,31068]"
    },
    {
      "src": "function: function [32718,32726]",
      "dest": "function: function [32718,32726]"
    },
    {
      "src": "variable_declaration [22305,22328]",
      "dest": "variable_declaration [22305,22328]"
    },
    {
      "src": "): ) [29048,29049]",
      "dest": "): ) [29048,29049]"
    },
    {
      "src": "]: ] [32122,32123]",
      "dest": "]: ] [32122,32123]"
    },
    {
      "src": "parameter [10203,10217]",
      "dest": "parameter [10203,10217]"
    },
    {
      "src": "}: } [14160,14161]",
      "dest": "}: } [14160,14161]"
    },
    {
      "src": "identifier: Mint [33931,33935]",
      "dest": "identifier: Mint [33931,33935]"
    },
    {
      "src": "call_argument [20354,20386]",
      "dest": "call_argument [20354,20386]"
    },
    {
      "src": "identifier: spender [26534,26541]",
      "dest": "identifier: spender [26534,26541]"
    },
    {
      "src": "identifier: __TrueMintableBurnable_init_unchained [37231,37268]",
      "dest": "identifier: __TrueMintableBurnable_init_unchained [37231,37268]"
    },
    {
      "src": "identifier: Ownable [11090,11097]",
      "dest": "identifier: Ownable [11090,11097]"
    },
    {
      "src": ",: , [20680,20681]",
      "dest": ",: , [20680,20681]"
    },
    {
      "src": "identifier: account [25934,25941]",
      "dest": "identifier: account [25934,25941]"
    },
    {
      "src": "(: ( [35710,35711]",
      "dest": "(: ( [35710,35711]"
    },
    {
      "src": "): ) [37162,37163]",
      "dest": "): ) [37162,37163]"
    },
    {
      "src": "type_name [8360,8367]",
      "dest": "type_name [8360,8367]"
    },
    {
      "src": "primitive_type [9018,9025]",
      "dest": "primitive_type [9018,9025]"
    },
    {
      "src": "expression_statement [30440,30506]",
      "dest": "expression_statement [30440,30506]"
    },
    {
      "src": "parameter [35629,35633]",
      "dest": "parameter [35629,35633]"
    },
    {
      "src": "): ) [11347,11348]",
      "dest": "): ) [11347,11348]"
    },
    {
      "src": "(: ( [12937,12938]",
      "dest": "(: ( [12937,12938]"
    },
    {
      "src": "identifier: account [30578,30585]",
      "dest": "identifier: account [30578,30585]"
    },
    {
      "src": "call_argument [37889,37943]",
      "dest": "call_argument [37890,37944]"
    },
    {
      "src": "uint256: uint256 [10720,10727]",
      "dest": "uint256: uint256 [10720,10727]"
    },
    {
      "src": "variable_declaration [5499,5509]",
      "dest": "variable_declaration [5499,5509]"
    },
    {
      "src": "array_access [26515,26542]",
      "dest": "array_access [26515,26542]"
    },
    {
      "src": "string_literal [37889,37943]",
      "dest": "string_literal [37890,37944]"
    },
    {
      "src": "returns: returns [26479,26486]",
      "dest": "returns: returns [26479,26486]"
    },
    {
      "src": "identifier: a [16222,16223]",
      "dest": "identifier: a [16222,16223]"
    },
    {
      "src": "(: ( [9017,9018]",
      "dest": "(: ( [9017,9018]"
    },
    {
      "src": "uint256: uint256 [10477,10484]",
      "dest": "uint256: uint256 [10477,10484]"
    },
    {
      "src": ",: , [33817,33818]",
      "dest": ",: , [33817,33818]"
    },
    {
      "src": "): ) [8689,8690]",
      "dest": "): ) [8689,8690]"
    },
    {
      "src": "bytes: bytes [20663,20668]",
      "dest": "bytes: bytes [20663,20668]"
    },
    {
      "src": "{: { [24544,24545]",
      "dest": "{: { [24544,24545]"
    },
    {
      "src": "function: function [37413,37421]",
      "dest": "function: function [37413,37421]"
    },
    {
      "src": "returns: returns [35620,35627]",
      "dest": "returns: returns [35620,35627]"
    },
    {
      "src": "function: function [12925,12933]",
      "dest": "function: function [12925,12933]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [10251,10414]",
      "dest": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [10251,10414]"
    },
    {
      "src": "primitive_type [13377,13384]",
      "dest": "primitive_type [13377,13384]"
    },
    {
      "src": "expression_statement [11360,11388]",
      "dest": "expression_statement [11360,11388]"
    },
    {
      "src": "): ) [35633,35634]",
      "dest": "): ) [35633,35634]"
    },
    {
      "src": "): ) [33261,33262]",
      "dest": "): ) [33261,33262]"
    },
    {
      "src": "comment: // flexibility since burning could also be as good as disabled by setting the minimum extremely high, and we don't [34762,34876]",
      "dest": "comment: // flexibility since burning could also be as good as disabled by setting the minimum extremely high, and we don't [34762,34876]"
    },
    {
      "src": "primitive_type [24900,24906]",
      "dest": "primitive_type [24900,24906]"
    },
    {
      "src": "internal: internal [30412,30420]",
      "dest": "internal: internal [30412,30420]"
    },
    {
      "src": "type_name [22069,22076]",
      "dest": "type_name [22069,22076]"
    },
    {
      "src": "call_argument [21363,21368]",
      "dest": "call_argument [21363,21368]"
    },
    {
      "src": "number_literal: 0 [38143,38144]",
      "dest": "number_literal: 0 [38144,38145]"
    },
    {
      "src": "identifier: require [31936,31943]",
      "dest": "identifier: require [31936,31943]"
    },
    {
      "src": "call_argument [11375,11377]",
      "dest": "call_argument [11375,11377]"
    },
    {
      "src": "number_literal: 0 [29812,29813]",
      "dest": "number_literal: 0 [29812,29813]"
    },
    {
      "src": "primitive_type [16772,16779]",
      "dest": "primitive_type [16772,16779]"
    },
    {
      "src": "visibility [38060,38068]",
      "dest": "visibility [38061,38069]"
    },
    {
      "src": "uint256: uint256 [12519,12526]",
      "dest": "uint256: uint256 [12519,12526]"
    },
    {
      "src": "call_argument [11343,11347]",
      "dest": "call_argument [11343,11347]"
    },
    {
      "src": "array_access [32096,32114]",
      "dest": "array_access [32096,32114]"
    },
    {
      "src": "{: { [35751,35752]",
      "dest": "{: { [35751,35752]"
    },
    {
      "src": "function_definition [11403,11515]",
      "dest": "function_definition [11403,11515]"
    },
    {
      "src": "bool: bool [8709,8713]",
      "dest": "bool: bool [8709,8713]"
    },
    {
      "src": "comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [30688,31006]",
      "dest": "comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [30688,31006]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/interface/IOwnable.sol\"; [11007,11062]",
      "dest": "comment: // import \"contracts/true-gold/interface/IOwnable.sol\"; [11007,11062]"
    },
    {
      "src": "identifier: balance [11201,11208]",
      "dest": "identifier: balance [11201,11208]"
    },
    {
      "src": "identifier: sender [30049,30055]",
      "dest": "identifier: sender [30049,30055]"
    },
    {
      "src": ",: , [36040,36041]",
      "dest": ",: , [36040,36041]"
    },
    {
      "src": "\": \" [13020,13021]",
      "dest": "\": \" [13020,13021]"
    },
    {
      "src": "identifier: IOwnable [11428,11436]",
      "dest": "identifier: IOwnable [11428,11436]"
    },
    {
      "src": "primitive_type [1723,1730]",
      "dest": "primitive_type [1723,1730]"
    },
    {
      "src": "identifier: _functionCallWithValue [20760,20782]",
      "dest": "identifier: _functionCallWithValue [20760,20782]"
    },
    {
      "src": "[: [ [25933,25934]",
      "dest": "[: [ [25933,25934]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [20829,21190]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [20829,21190]"
    },
    {
      "src": "true [26324,26328]",
      "dest": "true [26324,26328]"
    },
    {
      "src": "call_expression [35766,35790]",
      "dest": "call_expression [35766,35790]"
    },
    {
      "src": "contract_body [5791,5855]",
      "dest": "contract_body [5791,5855]"
    },
    {
      "src": "call_argument [33267,33273]",
      "dest": "call_argument [33267,33273]"
    },
    {
      "src": "return: return [36174,36180]",
      "dest": "return: return [36174,36180]"
    },
    {
      "src": "call_argument [36503,36509]",
      "dest": "call_argument [36503,36509]"
    },
    {
      "src": "call_argument [27551,27557]",
      "dest": "call_argument [27551,27557]"
    },
    {
      "src": "internal: internal [34240,34248]",
      "dest": "internal: internal [34240,34248]"
    },
    {
      "src": "): ) [28882,28883]",
      "dest": "): ) [28882,28883]"
    },
    {
      "src": "comment: /**  * @dev Contract module which provides a basic access control mechanism, where  * there is an account (an owner) that can be granted exclusive access to  * specific functions.  *  * By default, the owner account will be the one that deploys the contract. This  * can later be changed with {transferOwnership}.  *  * This module is used through inheritance. It will make available the modifier  * `onlyOwner`, which can be applied to your functions to restrict their use to  * the owner.  */ [6131,6636]",
      "dest": "comment: /**  * @dev Contract module which provides a basic access control mechanism, where  * there is an account (an owner) that can be granted exclusive access to  * specific functions.  *  * By default, the owner account will be the one that deploys the contract. This  * can later be changed with {transferOwnership}.  *  * This module is used through inheritance. It will make available the modifier  * `onlyOwner`, which can be applied to your functions to restrict their use to  * the owner.  */ [6131,6636]"
    },
    {
      "src": "user_defined_type [33805,33817]",
      "dest": "user_defined_type [33805,33817]"
    },
    {
      "src": ",: , [27384,27385]",
      "dest": ",: , [27384,27385]"
    },
    {
      "src": "user_defined_type [36887,36900]",
      "dest": "user_defined_type [36887,36900]"
    },
    {
      "src": "comment: /**      * @dev Returns the address of the current owner.      */ [7145,7212]",
      "dest": "comment: /**      * @dev Returns the address of the current owner.      */ [7145,7212]"
    },
    {
      "src": "return_type_definition [24891,24914]",
      "dest": "return_type_definition [24891,24914]"
    },
    {
      "src": "expression_statement [4909,4931]",
      "dest": "expression_statement [4909,4931]"
    },
    {
      "src": ".: . [22538,22539]",
      "dest": ".: . [22538,22539]"
    },
    {
      "src": "identifier: sender [29897,29903]",
      "dest": "identifier: sender [29897,29903]"
    },
    {
      "src": "{: { [16200,16201]",
      "dest": "{: { [16200,16201]"
    },
    {
      "src": "array_access [29992,30012]",
      "dest": "array_access [29992,30012]"
    },
    {
      "src": "binary_expression [37845,37887]",
      "dest": "binary_expression [37846,37888]"
    },
    {
      "src": "identifier: functionCallWithValue [21327,21348]",
      "dest": "identifier: functionCallWithValue [21327,21348]"
    },
    {
      "src": "type_name [32732,32739]",
      "dest": "type_name [32732,32739]"
    },
    {
      "src": "call_expression [7422,7487]",
      "dest": "call_expression [7422,7487]"
    },
    {
      "src": "(: ( [33343,33344]",
      "dest": "(: ( [33343,33344]"
    },
    {
      "src": "visibility [34350,34356]",
      "dest": "visibility [34350,34356]"
    },
    {
      "src": ",: , [35518,35519]",
      "dest": ",: , [35518,35519]"
    },
    {
      "src": "type_name [27423,27430]",
      "dest": "type_name [27423,27430]"
    },
    {
      "src": "number_literal: 0 [31115,31116]",
      "dest": "number_literal: 0 [31115,31116]"
    },
    {
      "src": "(: ( [29588,29589]",
      "dest": "(: ( [29588,29589]"
    },
    {
      "src": "type_name [33936,33943]",
      "dest": "type_name [33936,33943]"
    },
    {
      "src": ",: , [22850,22851]",
      "dest": ",: , [22850,22851]"
    },
    {
      "src": "): ) [36247,36248]",
      "dest": "): ) [36247,36248]"
    },
    {
      "src": "primitive_type [1816,1823]",
      "dest": "primitive_type [1816,1823]"
    },
    {
      "src": "memory: memory [15432,15438]",
      "dest": "memory: memory [15432,15438]"
    },
    {
      "src": "identifier: __TrueMintableBurnable_init_unchained [34156,34193]",
      "dest": "identifier: __TrueMintableBurnable_init_unchained [34156,34193]"
    },
    {
      "src": "uint256: uint256 [13873,13880]",
      "dest": "uint256: uint256 [13873,13880]"
    },
    {
      "src": "identifier: _totalSupply [1882,1894]",
      "dest": "identifier: _totalSupply [1882,1894]"
    },
    {
      "src": "binary_expression [14209,14219]",
      "dest": "binary_expression [14209,14219]"
    },
    {
      "src": "number_literal: 0 [20797,20798]",
      "dest": "number_literal: 0 [20797,20798]"
    },
    {
      "src": "type_name [25596,25601]",
      "dest": "type_name [25596,25601]"
    },
    {
      "src": "true: true [27677,27681]",
      "dest": "true: true [27677,27681]"
    },
    {
      "src": "internal: internal [21787,21795]",
      "dest": "internal: internal [21787,21795]"
    },
    {
      "src": "contract_body [11098,11518]",
      "dest": "contract_body [11098,11518]"
    },
    {
      "src": "yul_path [22839,22849]",
      "dest": "yul_path [22839,22849]"
    },
    {
      "src": "visibility [27445,27451]",
      "dest": "visibility [27445,27451]"
    },
    {
      "src": "uint256: uint256 [27423,27430]",
      "dest": "uint256: uint256 [27423,27430]"
    },
    {
      "src": "comment: // deployed when running a constructor, any checks on its code size will [5261,5333]",
      "dest": "comment: // deployed when running a constructor, any checks on its code size will [5261,5333]"
    },
    {
      "src": "state_mutability [7242,7246]",
      "dest": "state_mutability [7242,7246]"
    },
    {
      "src": "function_definition [6982,7137]",
      "dest": "function_definition [6982,7137]"
    },
    {
      "src": "parameter [9788,9802]",
      "dest": "parameter [9788,9802]"
    },
    {
      "src": "(: ( [36493,36494]",
      "dest": "(: ( [36493,36494]"
    },
    {
      "src": "): ) [31116,31117]",
      "dest": "): ) [31116,31117]"
    },
    {
      "src": "identifier: _ [4860,4861]",
      "dest": "identifier: _ [4860,4861]"
    },
    {
      "src": "function_body [37183,37306]",
      "dest": "function_body [37183,37306]"
    },
    {
      "src": "return_type_definition [35620,35634]",
      "dest": "return_type_definition [35620,35634]"
    },
    {
      "src": "parameter [37644,37661]",
      "dest": "parameter [37645,37662]"
    },
    {
      "src": "type_name [26780,26784]",
      "dest": "type_name [26780,26784]"
    },
    {
      "src": "primitive_type [21295,21300]",
      "dest": "primitive_type [21295,21300]"
    },
    {
      "src": "{: { [33857,33858]",
      "dest": "{: { [33857,33858]"
    },
    {
      "src": "(: ( [7861,7862]",
      "dest": "(: ( [7861,7862]"
    },
    {
      "src": "function: function [19064,19072]",
      "dest": "function: function [19064,19072]"
    },
    {
      "src": "string_literal [13020,13052]",
      "dest": "string_literal [13020,13052]"
    },
    {
      "src": "call_argument [28233,28281]",
      "dest": "call_argument [28233,28281]"
    },
    {
      "src": "identifier: msg [33251,33254]",
      "dest": "identifier: msg [33251,33254]"
    },
    {
      "src": "(: ( [9770,9771]",
      "dest": "(: ( [9770,9771]"
    },
    {
      "src": "]: ] [29903,29904]",
      "dest": "]: ] [29903,29904]"
    },
    {
      "src": "type_name [21243,21248]",
      "dest": "type_name [21243,21248]"
    },
    {
      "src": "struct_field_assignment [19345,19358]",
      "dest": "struct_field_assignment [19345,19358]"
    },
    {
      "src": "primitive_type [33988,33995]",
      "dest": "primitive_type [33988,33995]"
    },
    {
      "src": "(: ( [19360,19361]",
      "dest": "(: ( [19360,19361]"
    },
    {
      "src": "call_argument [15511,15523]",
      "dest": "call_argument [15511,15523]"
    },
    {
      "src": "{: { [25906,25907]",
      "dest": "{: { [25906,25907]"
    },
    {
      "src": "call_argument [28934,28944]",
      "dest": "call_argument [28934,28944]"
    },
    {
      "src": "uint256: uint256 [36233,36240]",
      "dest": "uint256: uint256 [36233,36240]"
    },
    {
      "src": "identifier: c [14181,14182]",
      "dest": "identifier: c [14181,14182]"
    },
    {
      "src": "public: public [27445,27451]",
      "dest": "public: public [27445,27451]"
    },
    {
      "src": "address: address [22034,22041]",
      "dest": "address: address [22034,22041]"
    },
    {
      "src": "identifier: amount [30550,30556]",
      "dest": "identifier: amount [30550,30556]"
    },
    {
      "src": "!=: != [7769,7771]",
      "dest": "!=: != [7769,7771]"
    },
    {
      "src": "parameter [8709,8713]",
      "dest": "parameter [8709,8713]"
    },
    {
      "src": "type_name [28142,28149]",
      "dest": "type_name [28142,28149]"
    },
    {
      "src": "type_name [26714,26721]",
      "dest": "type_name [26714,26721]"
    },
    {
      "src": "(: ( [12518,12519]",
      "dest": "(: ( [12518,12519]"
    },
    {
      "src": "binary_expression [31944,31963]",
      "dest": "binary_expression [31944,31963]"
    },
    {
      "src": "array_access [28233,28265]",
      "dest": "array_access [28233,28265]"
    },
    {
      "src": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [15563,15640]",
      "dest": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [15563,15640]"
    },
    {
      "src": ",: , [9031,9032]",
      "dest": ",: , [9031,9032]"
    },
    {
      "src": "uint256: uint256 [11301,11308]",
      "dest": "uint256: uint256 [11301,11308]"
    },
    {
      "src": "type_name [1936,1943]",
      "dest": "type_name [1936,1943]"
    },
    {
      "src": "member_expression [11319,11334]",
      "dest": "member_expression [11319,11334]"
    },
    {
      "src": "}: } [37404,37405]",
      "dest": "}: } [37404,37405]"
    },
    {
      "src": "parameter [36233,36247]",
      "dest": "parameter [36233,36247]"
    },
    {
      "src": ".: . [7443,7444]",
      "dest": ".: . [7443,7444]"
    },
    {
      "src": "}: } [7296,7297]",
      "dest": "}: } [7296,7297]"
    },
    {
      "src": "identifier: div [14771,14774]",
      "dest": "identifier: div [14771,14774]"
    },
    {
      "src": "(: ( [28124,28125]",
      "dest": "(: ( [28124,28125]"
    },
    {
      "src": "visibility [16168,16176]",
      "dest": "visibility [16168,16176]"
    },
    {
      "src": "public: public [25867,25873]",
      "dest": "public: public [25867,25873]"
    },
    {
      "src": "call_argument [32173,32179]",
      "dest": "call_argument [32173,32179]"
    },
    {
      "src": "}: } [20394,20395]",
      "dest": "}: } [20394,20395]"
    },
    {
      "src": ",: , [26825,26826]",
      "dest": ",: , [26825,26826]"
    },
    {
      "src": "call_expression [19375,19453]",
      "dest": "call_expression [19375,19453]"
    },
    {
      "src": "identifier: sender [28938,28944]",
      "dest": "identifier: sender [28938,28944]"
    },
    {
      "src": "string [19392,19452]",
      "dest": "string [19392,19452]"
    },
    {
      "src": "call_argument [35047,35069]",
      "dest": "call_argument [35047,35069]"
    },
    {
      "src": "visibility [37037,37044]",
      "dest": "visibility [37037,37044]"
    },
    {
      "src": "inheritance_specifier [6658,6670]",
      "dest": "inheritance_specifier [6658,6670]"
    },
    {
      "src": ">=: >= [21860,21862]",
      "dest": ">=: >= [21860,21862]"
    },
    {
      "src": "identifier: target [22176,22182]",
      "dest": "identifier: target [22176,22182]"
    },
    {
      "src": "\": \" [31119,31120]",
      "dest": "\": \" [31119,31120]"
    },
    {
      "src": "indexed: indexed [10680,10687]",
      "dest": "indexed: indexed [10680,10687]"
    },
    {
      "src": "primitive_type [9033,9040]",
      "dest": "primitive_type [9033,9040]"
    },
    {
      "src": ":=: := [22782,22784]",
      "dest": ":=: := [22782,22784]"
    },
    {
      "src": "identifier: amount [30017,30023]",
      "dest": "identifier: amount [30017,30023]"
    },
    {
      "src": "return_type_definition [28899,28913]",
      "dest": "return_type_definition [28899,28913]"
    },
    {
      "src": ",: , [21723,21724]",
      "dest": ",: , [21723,21724]"
    },
    {
      "src": "identifier: div [15399,15402]",
      "dest": "identifier: div [15399,15402]"
    },
    {
      "src": ",: , [35232,35233]",
      "dest": ",: , [35232,35233]"
    },
    {
      "src": "function: function [33126,33134]",
      "dest": "function: function [33126,33134]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/Initializable.sol\"; [6070,6127]",
      "dest": "comment: // import \"contracts/true-gold/common/Initializable.sol\"; [6070,6127]"
    },
    {
      "src": "identifier: c [14209,14210]",
      "dest": "identifier: c [14209,14210]"
    },
    {
      "src": "parameter [9771,9786]",
      "dest": "parameter [9771,9786]"
    },
    {
      "src": "}: } [22435,22436]",
      "dest": "}: } [22435,22436]"
    },
    {
      "src": "): ) [30468,30469]",
      "dest": "): ) [30468,30469]"
    },
    {
      "src": "modifier: modifier [7390,7398]",
      "dest": "modifier: modifier [7390,7398]"
    },
    {
      "src": "type_cast_expression [31953,31963]",
      "dest": "type_cast_expression [31953,31963]"
    },
    {
      "src": "\": \" [21412,21413]",
      "dest": "\": \" [21412,21413]"
    },
    {
      "src": "primitive_type [34984,34991]",
      "dest": "primitive_type [34984,34991]"
    },
    {
      "src": "identifier: msg [28212,28215]",
      "dest": "identifier: msg [28212,28215]"
    },
    {
      "src": "type_name [33864,33871]",
      "dest": "type_name [33864,33871]"
    },
    {
      "src": "): ) [5065,5066]",
      "dest": "): ) [5065,5066]"
    },
    {
      "src": "primitive_type [12949,12956]",
      "dest": "primitive_type [12949,12956]"
    },
    {
      "src": "): ) [37680,37681]",
      "dest": "): ) [37681,37682]"
    },
    {
      "src": "state_mutability [25582,25586]",
      "dest": "state_mutability [25582,25586]"
    },
    {
      "src": "\": \" [31153,31154]",
      "dest": "\": \" [31153,31154]"
    },
    {
      "src": "return: return [15652,15658]",
      "dest": "return: return [15652,15658]"
    },
    {
      "src": "function: function [21196,21204]",
      "dest": "function: function [21196,21204]"
    },
    {
      "src": "uint256: uint256 [13828,13835]",
      "dest": "uint256: uint256 [13828,13835]"
    },
    {
      "src": "}: } [22901,22902]",
      "dest": "}: } [22901,22902]"
    },
    {
      "src": "(: ( [8708,8709]",
      "dest": "(: ( [8708,8709]"
    },
    {
      "src": "identifier: target [22042,22048]",
      "dest": "identifier: target [22042,22048]"
    },
    {
      "src": "member_expression [32780,32790]",
      "dest": "member_expression [32780,32790]"
    },
    {
      "src": "primitive_type [20728,20733]",
      "dest": "primitive_type [20728,20733]"
    },
    {
      "src": "identifier: c [13547,13548]",
      "dest": "identifier: c [13547,13548]"
    },
    {
      "src": "uint256: uint256 [34194,34201]",
      "dest": "uint256: uint256 [34194,34201]"
    },
    {
      "src": "call_expression [37955,37996]",
      "dest": "call_expression [37956,37997]"
    },
    {
      "src": "return: return [26508,26514]",
      "dest": "return: return [26508,26514]"
    },
    {
      "src": "comment: // under construction or not. [5421,5450]",
      "dest": "comment: // under construction or not. [5421,5450]"
    },
    {
      "src": "identifier: b [15422,15423]",
      "dest": "identifier: b [15422,15423]"
    },
    {
      "src": "): ) [26214,26215]",
      "dest": "): ) [26214,26215]"
    },
    {
      "src": ",: , [22085,22086]",
      "dest": ",: , [22085,22086]"
    },
    {
      "src": "uint256: uint256 [1965,1972]",
      "dest": "uint256: uint256 [1965,1972]"
    },
    {
      "src": ".: . [11200,11201]",
      "dest": ".: . [11200,11201]"
    },
    {
      "src": "bool: bool [35979,35983]",
      "dest": "bool: bool [35979,35983]"
    },
    {
      "src": "identifier: ERC20Burnable [32580,32593]",
      "dest": "identifier: ERC20Burnable [32580,32593]"
    },
    {
      "src": "identifier: sub [29905,29908]",
      "dest": "identifier: sub [29905,29908]"
    },
    {
      "src": "emit: emit [30630,30634]",
      "dest": "emit: emit [30630,30634]"
    },
    {
      "src": "identifier: balance [11379,11386]",
      "dest": "identifier: balance [11379,11386]"
    },
    {
      "src": "(: ( [22527,22528]",
      "dest": "(: ( [22527,22528]"
    },
    {
      "src": "call_argument [27524,27530]",
      "dest": "call_argument [27524,27530]"
    },
    {
      "src": "expression_statement [30568,30620]",
      "dest": "expression_statement [30568,30620]"
    },
    {
      "src": "pure: pure [14806,14810]",
      "dest": "pure: pure [14806,14810]"
    },
    {
      "src": "pure: pure [37552,37556]",
      "dest": "pure: pure [37552,37556]"
    },
    {
      "src": "identifier: data [20273,20277]",
      "dest": "identifier: data [20273,20277]"
    },
    {
      "src": "returns: returns [20719,20726]",
      "dest": "returns: returns [20719,20726]"
    },
    {
      "src": "call_argument [34301,34314]",
      "dest": "call_argument [34301,34314]"
    },
    {
      "src": "identifier: isConstructor [5051,5064]",
      "dest": "identifier: isConstructor [5051,5064]"
    },
    {
      "src": "internal: internal [31908,31916]",
      "dest": "internal: internal [31908,31916]"
    },
    {
      "src": "true: true [4798,4802]",
      "dest": "true: true [4798,4802]"
    },
    {
      "src": "identifier: mul [13824,13827]",
      "dest": "identifier: mul [13824,13827]"
    },
    {
      "src": "binary_expression [21838,21868]",
      "dest": "binary_expression [21838,21868]"
    },
    {
      "src": "identifier: addedValue [28150,28160]",
      "dest": "identifier: addedValue [28150,28160]"
    },
    {
      "src": "function_body [20742,20821]",
      "dest": "function_body [20742,20821]"
    },
    {
      "src": "type_cast_expression [31107,31117]",
      "dest": "type_cast_expression [31107,31117]"
    },
    {
      "src": "member_expression [33232,33266]",
      "dest": "member_expression [33232,33266]"
    },
    {
      "src": "function: function [38012,38020]",
      "dest": "function: function [38013,38021]"
    },
    {
      "src": "(: ( [30466,30467]",
      "dest": "(: ( [30466,30467]"
    },
    {
      "src": "parameter [22087,22113]",
      "dest": "parameter [22087,22113]"
    },
    {
      "src": ".: . [37854,37855]",
      "dest": ".: . [37855,37856]"
    },
    {
      "src": "uint256: uint256 [33956,33963]",
      "dest": "uint256: uint256 [33956,33963]"
    },
    {
      "src": ".: . [26279,26280]",
      "dest": ".: . [26279,26280]"
    },
    {
      "src": "identifier: _minBurnAmount [36304,36318]",
      "dest": "identifier: _minBurnAmount [36304,36318]"
    },
    {
      "src": "call_argument [32023,32044]",
      "dest": "call_argument [32023,32044]"
    },
    {
      "src": "expression_statement [31088,31156]",
      "dest": "expression_statement [31088,31156]"
    },
    {
      "src": "binary_expression [12575,12581]",
      "dest": "binary_expression [12575,12581]"
    },
    {
      "src": "parameter [21725,21742]",
      "dest": "parameter [21725,21742]"
    },
    {
      "src": "primitive_type [15476,15483]",
      "dest": "primitive_type [15476,15483]"
    },
    {
      "src": "call_argument [36540,36546]",
      "dest": "call_argument [36540,36546]"
    },
    {
      "src": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [28320,28809]",
      "dest": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [28320,28809]"
    },
    {
      "src": "): ) [34025,34026]",
      "dest": "): ) [34025,34026]"
    },
    {
      "src": "binary_expression [5652,5659]",
      "dest": "binary_expression [5652,5659]"
    },
    {
      "src": "comment: // pragma solidity 0.6.10; [33502,33528]",
      "dest": "comment: // pragma solidity 0.6.10; [33502,33528]"
    },
    {
      "src": "): ) [37472,37473]",
      "dest": "): ) [37472,37473]"
    },
    {
      "src": "expression_statement [11474,11508]",
      "dest": "expression_statement [11474,11508]"
    },
    {
      "src": "call_argument [14851,14852]",
      "dest": "call_argument [14851,14852]"
    },
    {
      "src": "\": \" [37824,37825]",
      "dest": "\": \" [37825,37826]"
    },
    {
      "src": "visibility [13850,13858]",
      "dest": "visibility [13850,13858]"
    },
    {
      "src": "}: } [37509,37510]",
      "dest": "}: } [37509,37510]"
    },
    {
      "src": "call_expression [27542,27659]",
      "dest": "call_expression [27542,27659]"
    },
    {
      "src": "event: event [33925,33930]",
      "dest": "event: event [33925,33930]"
    },
    {
      "src": "parameter [20682,20708]",
      "dest": "parameter [20682,20708]"
    },
    {
      "src": "): ) [37369,37370]",
      "dest": "): ) [37369,37370]"
    },
    {
      "src": "identifier: _functionCallWithValue [21929,21951]",
      "dest": "identifier: _functionCallWithValue [21929,21951]"
    },
    {
      "src": "\": \" [29816,29817]",
      "dest": "\": \" [29816,29817]"
    },
    {
      "src": "function_definition [11225,11395]",
      "dest": "function_definition [11225,11395]"
    },
    {
      "src": "contract: contract [24505,24513]",
      "dest": "contract: contract [24505,24513]"
    },
    {
      "src": "type_name [38044,38051]",
      "dest": "type_name [38045,38052]"
    },
    {
      "src": "(: ( [5824,5825]",
      "dest": "(: ( [5824,5825]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/ProxyStorage.sol\"; [23255,23311]",
      "dest": "comment: // import \"contracts/true-gold/common/ProxyStorage.sol\"; [23255,23311]"
    },
    {
      "src": "internal: internal [20279,20287]",
      "dest": "internal: internal [20279,20287]"
    },
    {
      "src": "): ) [19124,19125]",
      "dest": "): ) [19124,19125]"
    },
    {
      "src": "(: ( [37565,37566]",
      "dest": "(: ( [37565,37566]"
    },
    {
      "src": "): ) [14827,14828]",
      "dest": "): ) [14827,14828]"
    },
    {
      "src": ">=: >= [12577,12579]",
      "dest": ">=: >= [12577,12579]"
    },
    {
      "src": "(: ( [35350,35351]",
      "dest": "(: ( [35350,35351]"
    },
    {
      "src": "\": \" [7485,7486]",
      "dest": "\": \" [7485,7486]"
    },
    {
      "src": ".: . [38111,38112]",
      "dest": ".: . [38112,38113]"
    },
    {
      "src": "primitive_type [9822,9826]",
      "dest": "primitive_type [9822,9826]"
    },
    {
      "src": "primitive_type [27395,27402]",
      "dest": "primitive_type [27395,27402]"
    },
    {
      "src": "): ) [32746,32747]",
      "dest": "): ) [32746,32747]"
    },
    {
      "src": "identifier: success [19383,19390]",
      "dest": "identifier: success [19383,19390]"
    },
    {
      "src": "primitive_type [13873,13880]",
      "dest": "primitive_type [13873,13880]"
    },
    {
      "src": "call_argument [26299,26305]",
      "dest": "call_argument [26299,26305]"
    },
    {
      "src": "type_name [10477,10484]",
      "dest": "type_name [10477,10484]"
    },
    {
      "src": "function_definition [8341,8409]",
      "dest": "function_definition [8341,8409]"
    },
    {
      "src": "identifier: b [14218,14219]",
      "dest": "identifier: b [14218,14219]"
    },
    {
      "src": "if: if [22379,22381]",
      "dest": "if: if [22379,22381]"
    },
    {
      "src": "(: ( [26417,26418]",
      "dest": "(: ( [26417,26418]"
    },
    {
      "src": "||: || [4601,4603]",
      "dest": "||: || [4601,4603]"
    },
    {
      "src": "primitive_type [19110,19117]",
      "dest": "primitive_type [19110,19117]"
    },
    {
      "src": "call_argument [7114,7115]",
      "dest": "call_argument [7114,7115]"
    },
    {
      "src": "identifier: transfer [26172,26180]",
      "dest": "identifier: transfer [26172,26180]"
    },
    {
      "src": "user_defined_type [11090,11097]",
      "dest": "user_defined_type [11090,11097]"
    },
    {
      "src": "pragma: pragma [36614,36620]",
      "dest": "pragma: pragma [36614,36620]"
    },
    {
      "src": "uint8: uint8 [36987,36992]",
      "dest": "uint8: uint8 [36987,36992]"
    },
    {
      "src": ",: , [30654,30655]",
      "dest": ",: , [30654,30655]"
    },
    {
      "src": "identifier: Mint [35506,35510]",
      "dest": "identifier: Mint [35506,35510]"
    },
    {
      "src": "}: } [10737,10738]",
      "dest": "}: } [10737,10738]"
    },
    {
      "src": "): ) [22946,22947]",
      "dest": "): ) [22946,22947]"
    },
    {
      "src": "inheritance_specifier [24523,24535]",
      "dest": "inheritance_specifier [24523,24535]"
    },
    {
      "src": "type_name [26200,26207]",
      "dest": "type_name [26200,26207]"
    },
    {
      "src": "uint256: uint256 [1874,1881]",
      "dest": "uint256: uint256 [1874,1881]"
    },
    {
      "src": "call_argument [15504,15509]",
      "dest": "call_argument [15504,15509]"
    },
    {
      "src": "call_expression [20760,20813]",
      "dest": "call_expression [20760,20813]"
    },
    {
      "src": "memory: memory [37573,37579]",
      "dest": "memory: memory [37573,37579]"
    },
    {
      "src": "identifier: ERC20Burnable [33843,33856]",
      "dest": "identifier: ERC20Burnable [33843,33856]"
    },
    {
      "src": "override: override [35961,35969]",
      "dest": "override: override [35961,35969]"
    },
    {
      "src": "identifier: recipient [27403,27412]",
      "dest": "identifier: recipient [27403,27412]"
    },
    {
      "src": "event: event [10420,10425]",
      "dest": "event: event [10420,10425]"
    },
    {
      "src": "call_expression [21830,21911]",
      "dest": "call_expression [21830,21911]"
    },
    {
      "src": "call_argument [21966,21971]",
      "dest": "call_argument [21966,21971]"
    },
    {
      "src": "function_definition [25668,25768]",
      "dest": "function_definition [25668,25768]"
    },
    {
      "src": "is: is [36884,36886]",
      "dest": "is: is [36884,36886]"
    },
    {
      "src": "primitive_type [26249,26253]",
      "dest": "primitive_type [26249,26253]"
    },
    {
      "src": "): ) [17768,17769]",
      "dest": "): ) [17768,17769]"
    },
    {
      "src": "type_name [1874,1881]",
      "dest": "type_name [1874,1881]"
    },
    {
      "src": "call_expression [28233,28281]",
      "dest": "call_expression [28233,28281]"
    },
    {
      "src": "call_expression [37845,37882]",
      "dest": "call_expression [37846,37883]"
    },
    {
      "src": ",: , [27522,27523]",
      "dest": ",: , [27522,27523]"
    },
    {
      "src": "{: { [12528,12529]",
      "dest": "{: { [12528,12529]"
    },
    {
      "src": "uint256: uint256 [8400,8407]",
      "dest": "uint256: uint256 [8400,8407]"
    },
    {
      "src": "identifier: sub [12934,12937]",
      "dest": "identifier: sub [12934,12937]"
    },
    {
      "src": "call_expression [36128,36152]",
      "dest": "call_expression [36128,36152]"
    },
    {
      "src": "identifier: _minBurnAmount [35130,35144]",
      "dest": "identifier: _minBurnAmount [35130,35144]"
    },
    {
      "src": "): ) [33969,33970]",
      "dest": "): ) [33969,33970]"
    },
    {
      "src": ",: , [20352,20353]",
      "dest": ",: , [20352,20353]"
    },
    {
      "src": "function: function [11403,11411]",
      "dest": "function: function [11403,11411]"
    },
    {
      "src": "identifier: amount [35520,35526]",
      "dest": "identifier: amount [35520,35526]"
    },
    {
      "src": "identifier: transfer [11178,11186]",
      "dest": "identifier: transfer [11178,11186]"
    },
    {
      "src": "=: = [14183,14184]",
      "dest": "=: = [14183,14184]"
    },
    {
      "src": "identifier: add [30608,30611]",
      "dest": "identifier: add [30608,30611]"
    },
    {
      "src": "call_expression [35646,35688]",
      "dest": "call_expression [35646,35688]"
    },
    {
      "src": "binary_expression [36391,36415]",
      "dest": "binary_expression [36391,36415]"
    },
    {
      "src": "parameter [34965,34982]",
      "dest": "parameter [34965,34982]"
    },
    {
      "src": ",: , [12581,12582]",
      "dest": ",: , [12581,12582]"
    },
    {
      "src": "identifier: sub [31296,31299]",
      "dest": "identifier: sub [31296,31299]"
    },
    {
      "src": "call_expression [22332,22368]",
      "dest": "call_expression [22332,22368]"
    },
    {
      "src": "(: ( [29908,29909]",
      "dest": "(: ( [29908,29909]"
    },
    {
      "src": "library: library [17091,17098]",
      "dest": "library: library [17091,17098]"
    },
    {
      "src": "primitive_type [25081,25087]",
      "dest": "primitive_type [25081,25087]"
    },
    {
      "src": "address: address [28125,28132]",
      "dest": "address: address [28125,28132]"
    },
    {
      "src": "uint256: uint256 [37141,37148]",
      "dest": "uint256: uint256 [37141,37148]"
    },
    {
      "src": "call_argument [19154,19185]",
      "dest": "call_argument [19154,19185]"
    },
    {
      "src": "return: return [26317,26323]",
      "dest": "return: return [26317,26323]"
    },
    {
      "src": "type_name [7256,7263]",
      "dest": "type_name [7256,7263]"
    },
    {
      "src": "address: address [21838,21845]",
      "dest": "address: address [21838,21845]"
    },
    {
      "src": "call_argument [36145,36151]",
      "dest": "call_argument [36145,36151]"
    },
    {
      "src": "): ) [37881,37882]",
      "dest": "): ) [37882,37883]"
    },
    {
      "src": "address: address [6795,6802]",
      "dest": "address: address [6795,6802]"
    },
    {
      "src": "): ) [36049,36050]",
      "dest": "): ) [36049,36050]"
    },
    {
      "src": "identifier: DECIMALS [37010,37018]",
      "dest": "identifier: DECIMALS [37010,37018]"
    },
    {
      "src": "returns: returns [25072,25079]",
      "dest": "returns: returns [25072,25079]"
    },
    {
      "src": "): ) [35243,35244]",
      "dest": "): ) [35243,35244]"
    },
    {
      "src": "primitive_type [38027,38034]",
      "dest": "primitive_type [38028,38035]"
    },
    {
      "src": "return_statement [13003,13054]",
      "dest": "return_statement [13003,13054]"
    },
    {
      "src": "primitive_type [37118,37125]",
      "dest": "primitive_type [37118,37125]"
    },
    {
      "src": "type_name [13839,13846]",
      "dest": "type_name [13839,13846]"
    },
    {
      "src": "array_access [30568,30586]",
      "dest": "array_access [30568,30586]"
    },
    {
      "src": "identifier: SetBurnBounds [35209,35222]",
      "dest": "identifier: SetBurnBounds [35209,35222]"
    },
    {
      "src": "): ) [35594,35595]",
      "dest": "): ) [35594,35595]"
    },
    {
      "src": "string_literal [37492,37502]",
      "dest": "string_literal [37492,37502]"
    },
    {
      "src": "identifier: _ [7498,7499]",
      "dest": "identifier: _ [7498,7499]"
    },
    {
      "src": "type_name [22034,22041]",
      "dest": "type_name [22034,22041]"
    },
    {
      "src": "\": \" [30471,30472]",
      "dest": "\": \" [30471,30472]"
    },
    {
      "src": "public: public [7235,7241]",
      "dest": "public: public [7235,7241]"
    },
    {
      "src": "): ) [36082,36083]",
      "dest": "): ) [36082,36083]"
    },
    {
      "src": "string_literal [35396,35456]",
      "dest": "string_literal [35396,35456]"
    },
    {
      "src": "member_expression [11175,11186]",
      "dest": "member_expression [11175,11186]"
    },
    {
      "src": "identifier: Transfer [30635,30643]",
      "dest": "identifier: Transfer [30635,30643]"
    },
    {
      "src": "variable_declaration_statement [5460,5489]",
      "dest": "variable_declaration_statement [5460,5489]"
    },
    {
      "src": "primitive_type [37029,37036]",
      "dest": "primitive_type [37029,37036]"
    },
    {
      "src": ",: , [28953,28954]",
      "dest": ",: , [28953,28954]"
    },
    {
      "src": "comment: // benefit is lost if 'b' is also tested. [13982,14023]",
      "dest": "comment: // benefit is lost if 'b' is also tested. [13982,14023]"
    },
    {
      "src": "identifier: __Ownable_init_unchained [37194,37218]",
      "dest": "identifier: __Ownable_init_unchained [37194,37218]"
    },
    {
      "src": "(: ( [7688,7689]",
      "dest": "(: ( [7688,7689]"
    },
    {
      "src": "identifier: amount [10211,10217]",
      "dest": "identifier: amount [10211,10217]"
    },
    {
      "src": "user_defined_type [6672,6685]",
      "dest": "user_defined_type [6672,6685]"
    },
    {
      "src": "function_body [15485,15668]",
      "dest": "function_body [15485,15668]"
    },
    {
      "src": "return_type_definition [12974,12991]",
      "dest": "return_type_definition [12974,12991]"
    },
    {
      "src": ",: , [14852,14853]",
      "dest": ",: , [14852,14853]"
    },
    {
      "src": "{: { [8117,8118]",
      "dest": "{: { [8117,8118]"
    },
    {
      "src": "type_name [10672,10679]",
      "dest": "type_name [10672,10679]"
    },
    {
      "src": "event_paramater [34053,34067]",
      "dest": "event_paramater [34053,34067]"
    },
    {
      "src": "): ) [35720,35721]",
      "dest": "): ) [35720,35721]"
    },
    {
      "src": "primitive_type [30379,30386]",
      "dest": "primitive_type [30379,30386]"
    },
    {
      "src": "bool: bool [4700,4704]",
      "dest": "bool: bool [4700,4704]"
    },
    {
      "src": "number_literal: 0 [32042,32043]",
      "dest": "number_literal: 0 [32042,32043]"
    },
    {
      "src": "type_cast_expression [32034,32044]",
      "dest": "type_cast_expression [32034,32044]"
    },
    {
      "src": "identifier: _burn [36210,36215]",
      "dest": "identifier: _burn [36210,36215]"
    },
    {
      "src": "function: function [37518,37526]",
      "dest": "function: function [37518,37526]"
    },
    {
      "src": "parameter [15403,15412]",
      "dest": "parameter [15403,15412]"
    },
    {
      "src": "return: return [25917,25923]",
      "dest": "return: return [25917,25923]"
    },
    {
      "src": "): ) [12494,12495]",
      "dest": "): ) [12494,12495]"
    },
    {
      "src": "visibility [28162,28168]",
      "dest": "visibility [28162,28168]"
    },
    {
      "src": "identifier: _initializing [4782,4795]",
      "dest": "identifier: _initializing [4782,4795]"
    },
    {
      "src": "}: } [21993,21994]",
      "dest": "}: } [21993,21994]"
    },
    {
      "src": "!=: != [29801,29803]",
      "dest": "!=: != [29801,29803]"
    },
    {
      "src": "primitive_type [22034,22041]",
      "dest": "primitive_type [22034,22041]"
    },
    {
      "src": "]: ] [30606,30607]",
      "dest": "]: ] [30606,30607]"
    },
    {
      "src": "bool: bool [5089,5093]",
      "dest": "bool: bool [5089,5093]"
    },
    {
      "src": "identifier: _totalSupply [31283,31295]",
      "dest": "identifier: _totalSupply [31283,31295]"
    },
    {
      "src": "expression_statement [4579,4688]",
      "dest": "expression_statement [4579,4688]"
    },
    {
      "src": "uint256: uint256 [13839,13846]",
      "dest": "uint256: uint256 [13839,13846]"
    },
    {
      "src": "call_argument [21349,21355]",
      "dest": "call_argument [21349,21355]"
    },
    {
      "src": "modifier_invocation [7731,7740]",
      "dest": "modifier_invocation [7731,7740]"
    },
    {
      "src": "identifier: sub [13010,13013]",
      "dest": "identifier: sub [13010,13013]"
    },
    {
      "src": "uint256: uint256 [13388,13395]",
      "dest": "uint256: uint256 [13388,13395]"
    },
    {
      "src": "bool: bool [10237,10241]",
      "dest": "bool: bool [10237,10241]"
    },
    {
      "src": "): ) [1853,1854]",
      "dest": "): ) [1853,1854]"
    },
    {
      "src": "}: } [4948,4949]",
      "dest": "}: } [4948,4949]"
    },
    {
      "src": "type_name [9033,9040]",
      "dest": "type_name [9033,9040]"
    },
    {
      "src": "identifier: require [35996,36003]",
      "dest": "identifier: require [35996,36003]"
    },
    {
      "src": "number_literal: 0 [31349,31350]",
      "dest": "number_literal: 0 [31349,31350]"
    },
    {
      "src": "type_name [1652,1656]",
      "dest": "type_name [1652,1656]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/ProxyStorage.sol\"; [3460,3516]",
      "dest": "comment: // import \"contracts/true-gold/common/ProxyStorage.sol\"; [3460,3516]"
    },
    {
      "src": "}: } [5634,5635]",
      "dest": "}: } [5634,5635]"
    },
    {
      "src": "type_name [29624,29631]",
      "dest": "type_name [29624,29631]"
    },
    {
      "src": "}: } [14893,14894]",
      "dest": "}: } [14893,14894]"
    },
    {
      "src": "string_literal [4638,4686]",
      "dest": "string_literal [4638,4686]"
    },
    {
      "src": "visibility [8221,8229]",
      "dest": "visibility [8221,8229]"
    },
    {
      "src": "(: ( [37740,37741]",
      "dest": "(: ( [37741,37742]"
    },
    {
      "src": "view: view [26474,26478]",
      "dest": "view: view [26474,26478]"
    },
    {
      "src": "return_type_definition [7247,7264]",
      "dest": "return_type_definition [7247,7264]"
    },
    {
      "src": "state_mutability [14806,14810]",
      "dest": "state_mutability [14806,14810]"
    },
    {
      "src": "function: function [26163,26171]",
      "dest": "function: function [26163,26171]"
    },
    {
      "src": "identifier: decreaseAllowance [28824,28841]",
      "dest": "identifier: decreaseAllowance [28824,28841]"
    },
    {
      "src": "(: ( [12473,12474]",
      "dest": "(: ( [12473,12474]"
    },
    {
      "src": "return_statement [37485,37503]",
      "dest": "return_statement [37485,37503]"
    },
    {
      "src": "return_statement [35812,35824]",
      "dest": "return_statement [35812,35824]"
    },
    {
      "src": "call_argument [21357,21361]",
      "dest": "call_argument [21357,21361]"
    },
    {
      "src": "primitive_type [33956,33963]",
      "dest": "primitive_type [33956,33963]"
    },
    {
      "src": "]: ] [28255,28256]",
      "dest": "]: ] [28255,28256]"
    },
    {
      "src": "(: ( [7113,7114]",
      "dest": "(: ( [7113,7114]"
    },
    {
      "src": "identifier: weiValue [22077,22085]",
      "dest": "identifier: weiValue [22077,22085]"
    },
    {
      "src": "identifier: _allowances [1856,1867]",
      "dest": "identifier: _allowances [1856,1867]"
    },
    {
      "src": "contract_body [6696,7918]",
      "dest": "contract_body [6696,7918]"
    },
    {
      "src": "for: for [36967,36970]",
      "dest": "for: for [36967,36970]"
    },
    {
      "src": "identifier: recipient [35669,35678]",
      "dest": "identifier: recipient [35669,35678]"
    },
    {
      "src": "string_literal [38146,38201]",
      "dest": "string_literal [38147,38202]"
    },
    {
      "src": "comment: // import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; [23080,23139]",
      "dest": "comment: // import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; [23080,23139]"
    },
    {
      "src": "is: is [32594,32596]",
      "dest": "is: is [32594,32596]"
    },
    {
      "src": "{: { [32603,32604]",
      "dest": "{: { [32603,32604]"
    },
    {
      "src": "identifier: b [15504,15505]",
      "dest": "identifier: b [15504,15505]"
    },
    {
      "src": "call_argument [31119,31154]",
      "dest": "call_argument [31119,31154]"
    },
    {
      "src": "type_cast_expression [7772,7782]",
      "dest": "type_cast_expression [7772,7782]"
    },
    {
      "src": "return_type_definition [25712,25729]",
      "dest": "return_type_definition [25712,25729]"
    },
    {
      "src": "\": \" [30503,30504]",
      "dest": "\": \" [30503,30504]"
    },
    {
      "src": "uint256: uint256 [16834,16841]",
      "dest": "uint256: uint256 [16834,16841]"
    },
    {
      "src": "function_body [28914,29080]",
      "dest": "function_body [28914,29080]"
    },
    {
      "src": "contract_body [8117,10738]",
      "dest": "contract_body [8117,10738]"
    },
    {
      "src": "\": \" [31255,31256]",
      "dest": "\": \" [31255,31256]"
    },
    {
      "src": "type_name [10695,10702]",
      "dest": "type_name [10695,10702]"
    },
    {
      "src": ".: . [21851,21852]",
      "dest": ".: . [21851,21852]"
    },
    {
      "src": "string: string [24900,24906]",
      "dest": "string: string [24900,24906]"
    },
    {
      "src": "indexed: indexed [6803,6810]",
      "dest": "indexed: indexed [6803,6810]"
    },
    {
      "src": "function: function [9754,9762]",
      "dest": "function: function [9754,9762]"
    },
    {
      "src": "identifier: c [12575,12576]",
      "dest": "identifier: c [12575,12576]"
    },
    {
      "src": "call_argument [21870,21910]",
      "dest": "call_argument [21870,21910]"
    },
    {
      "src": "member_expression [33353,33363]",
      "dest": "member_expression [33353,33363]"
    },
    {
      "src": "function_body [17770,18126]",
      "dest": "function_body [17770,18126]"
    },
    {
      "src": "): ) [25601,25602]",
      "dest": "): ) [25601,25602]"
    },
    {
      "src": "function: function [35260,35268]",
      "dest": "function: function [35260,35268]"
    },
    {
      "src": "contract_declaration [4154,5670]",
      "dest": "contract_declaration [4154,5670]"
    },
    {
      "src": "\": \" [29852,29853]",
      "dest": "\": \" [29852,29853]"
    },
    {
      "src": "return_type_definition [8235,8252]",
      "dest": "return_type_definition [8235,8252]"
    },
    {
      "src": "identifier: require [7752,7759]",
      "dest": "identifier: require [7752,7759]"
    },
    {
      "src": "primitive_type [8360,8367]",
      "dest": "primitive_type [8360,8367]"
    },
    {
      "src": ",: , [20789,20790]",
      "dest": ",: , [20789,20790]"
    },
    {
      "src": "visibility [25691,25697]",
      "dest": "visibility [25691,25697]"
    },
    {
      "src": "identifier: isConstructor [4604,4617]",
      "dest": "identifier: isConstructor [4604,4617]"
    },
    {
      "src": "parameter [19083,19108]",
      "dest": "parameter [19083,19108]"
    },
    {
      "src": "array_access [28955,28987]",
      "dest": "array_access [28955,28987]"
    },
    {
      "src": "memory: memory [20266,20272]",
      "dest": "memory: memory [20266,20272]"
    },
    {
      "src": "): ) [10490,10491]",
      "dest": "): ) [10490,10491]"
    },
    {
      "src": "(: ( [35473,35474]",
      "dest": "(: ( [35473,35474]"
    },
    {
      "src": "identifier: to [11269,11271]",
      "dest": "identifier: to [11269,11271]"
    },
    {
      "src": "function_body [7741,7915]",
      "dest": "function_body [7741,7915]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/interface/IOwnable.sol\"; [5953,6008]",
      "dest": "comment: // import \"contracts/true-gold/interface/IOwnable.sol\"; [5953,6008]"
    },
    {
      "src": "type_name [13828,13835]",
      "dest": "type_name [13828,13835]"
    },
    {
      "src": "identifier: _maxBurnAmount [35167,35181]",
      "dest": "identifier: _maxBurnAmount [35167,35181]"
    },
    {
      "src": "call_argument [38105,38144]",
      "dest": "call_argument [38106,38145]"
    },
    {
      "src": "type_name [28908,28912]",
      "dest": "type_name [28908,28912]"
    },
    {
      "src": "string [14857,14885]",
      "dest": "string [14857,14885]"
    },
    {
      "src": "(: ( [37218,37219]",
      "dest": "(: ( [37218,37219]"
    },
    {
      "src": "!: ! [4722,4723]",
      "dest": "!: ! [4722,4723]"
    },
    {
      "src": "user_defined_type [11247,11253]",
      "dest": "user_defined_type [11247,11253]"
    },
    {
      "src": "identifier: a [14185,14186]",
      "dest": "identifier: a [14185,14186]"
    },
    {
      "src": "bool: bool [22291,22295]",
      "dest": "bool: bool [22291,22295]"
    },
    {
      "src": "): ) [8219,8220]",
      "dest": "): ) [8219,8220]"
    },
    {
      "src": "{: { [14126,14127]",
      "dest": "{: { [14126,14127]"
    },
    {
      "src": "call_argument [30656,30663]",
      "dest": "call_argument [30656,30663]"
    },
    {
      "src": "override: override [27460,27468]",
      "dest": "override: override [27460,27468]"
    },
    {
      "src": "identifier: IOwnable [6687,6695]",
      "dest": "identifier: IOwnable [6687,6695]"
    },
    {
      "src": "type_cast_expression [29720,29730]",
      "dest": "type_cast_expression [29720,29730]"
    },
    {
      "src": "primitive_type [16146,16153]",
      "dest": "primitive_type [16146,16153]"
    },
    {
      "src": "uint256: uint256 [37644,37651]",
      "dest": "uint256: uint256 [37645,37652]"
    },
    {
      "src": "number_literal: 0 [7114,7115]",
      "dest": "number_literal: 0 [7114,7115]"
    },
    {
      "src": "virtual: virtual [29683,29690]",
      "dest": "virtual: virtual [29683,29690]"
    },
    {
      "src": "state_mutability [8230,8234]",
      "dest": "state_mutability [8230,8234]"
    },
    {
      "src": "yul_path [18063,18067]",
      "dest": "yul_path [18063,18067]"
    },
    {
      "src": "(: ( [16833,16834]",
      "dest": "(: ( [16833,16834]"
    },
    {
      "src": ".: . [19167,19168]",
      "dest": ".: . [19167,19168]"
    },
    {
      "src": "type_name [15414,15421]",
      "dest": "type_name [15414,15421]"
    },
    {
      "src": "parameter [35274,35289]",
      "dest": "parameter [35274,35289]"
    },
    {
      "src": "parameter [8360,8375]",
      "dest": "parameter [8360,8375]"
    },
    {
      "src": "function_definition [17704,18126]",
      "dest": "function_definition [17704,18126]"
    },
    {
      "src": "identifier: recipient [19329,19338]",
      "dest": "identifier: recipient [19329,19338]"
    },
    {
      "src": "revert: revert [22927,22933]",
      "dest": "revert: revert [22927,22933]"
    },
    {
      "src": "primitive_type [31341,31348]",
      "dest": "primitive_type [31341,31348]"
    },
    {
      "src": "call_argument [37975,37984]",
      "dest": "call_argument [37976,37985]"
    },
    {
      "src": "public: public [37164,37170]",
      "dest": "public: public [37164,37170]"
    },
    {
      "src": "): ) [10241,10242]",
      "dest": "): ) [10241,10242]"
    },
    {
      "src": "returns: returns [13441,13448]",
      "dest": "returns: returns [13441,13448]"
    },
    {
      "src": "identifier: ProxyStorage [24523,24535]",
      "dest": "identifier: ProxyStorage [24523,24535]"
    },
    {
      "src": "identifier: data [21738,21742]",
      "dest": "identifier: data [21738,21742]"
    },
    {
      "src": "\": \" [31965,31966]",
      "dest": "\": \" [31965,31966]"
    },
    {
      "src": "boolean_literal [4925,4930]",
      "dest": "boolean_literal [4925,4930]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-balanceOf}.      */ [25776,25825]",
      "dest": "comment: /**      * @dev See {IERC20-balanceOf}.      */ [25776,25825]"
    },
    {
      "src": "(: ( [33987,33988]",
      "dest": "(: ( [33987,33988]"
    },
    {
      "src": "public: public [25567,25573]",
      "dest": "public: public [25567,25573]"
    },
    {
      "src": "primitive_type [35291,35298]",
      "dest": "primitive_type [35291,35298]"
    },
    {
      "src": "identifier: sender [27563,27569]",
      "dest": "identifier: sender [27563,27569]"
    },
    {
      "src": "identifier: IERC20 [8110,8116]",
      "dest": "identifier: IERC20 [8110,8116]"
    },
    {
      "src": "virtual: virtual [35603,35610]",
      "dest": "virtual: virtual [35603,35610]"
    },
    {
      "src": "(: ( [35560,35561]",
      "dest": "(: ( [35560,35561]"
    },
    {
      "src": "identifier: returndata_size [22852,22867]",
      "dest": "identifier: returndata_size [22852,22867]"
    },
    {
      "src": "identifier: owner [31844,31849]",
      "dest": "identifier: owner [31844,31849]"
    },
    {
      "src": "): ) [32082,32083]",
      "dest": "): ) [32082,32083]"
    },
    {
      "src": "identifier: _owner [11500,11506]",
      "dest": "identifier: _owner [11500,11506]"
    },
    {
      "src": "override: override [25874,25882]",
      "dest": "override: override [25874,25882]"
    },
    {
      "src": "identifier: TrueMintableBurnable [36911,36931]",
      "dest": "identifier: TrueMintableBurnable [36911,36931]"
    },
    {
      "src": "public: public [28884,28890]",
      "dest": "public: public [28884,28890]"
    },
    {
      "src": "function_body [32763,32807]",
      "dest": "function_body [32763,32807]"
    },
    {
      "src": "(: ( [25688,25689]",
      "dest": "(: ( [25688,25689]"
    },
    {
      "src": "visibility [12960,12968]",
      "dest": "visibility [12960,12968]"
    },
    {
      "src": "function_body [34261,34323]",
      "dest": "function_body [34261,34323]"
    },
    {
      "src": "visibility [36993,37000]",
      "dest": "visibility [36993,37000]"
    },
    {
      "src": "identifier: super [35654,35659]",
      "dest": "identifier: super [35654,35659]"
    },
    {
      "src": "(: ( [32779,32780]",
      "dest": "(: ( [32779,32780]"
    },
    {
      "src": "expression_statement [7752,7826]",
      "dest": "expression_statement [7752,7826]"
    },
    {
      "src": "parameter [30396,30410]",
      "dest": "parameter [30396,30410]"
    },
    {
      "src": "function: function [17704,17712]",
      "dest": "function: function [17704,17712]"
    },
    {
      "src": "(: ( [13376,13377]",
      "dest": "(: ( [13376,13377]"
    },
    {
      "src": "function: function [22002,22010]",
      "dest": "function: function [22002,22010]"
    },
    {
      "src": "(: ( [34370,34371]",
      "dest": "(: ( [34370,34371]"
    },
    {
      "src": "function_body [11463,11515]",
      "dest": "function_body [11463,11515]"
    },
    {
      "src": "identifier: Burn [33983,33987]",
      "dest": "identifier: Burn [33983,33987]"
    },
    {
      "src": "function_body [37708,38004]",
      "dest": "function_body [37709,38005]"
    },
    {
      "src": "parameter [11127,11145]",
      "dest": "parameter [11127,11145]"
    },
    {
      "src": "identifier: require [12567,12574]",
      "dest": "identifier: require [12567,12574]"
    },
    {
      "src": "primitive_type [22050,22055]",
      "dest": "primitive_type [22050,22055]"
    },
    {
      "src": "[: [ [30001,30002]",
      "dest": "[: [ [30001,30002]"
    },
    {
      "src": "bytes: bytes [20728,20733]",
      "dest": "bytes: bytes [20728,20733]"
    },
    {
      "src": "[: [ [29896,29897]",
      "dest": "[: [ [29896,29897]"
    },
    {
      "src": "(: ( [32041,32042]",
      "dest": "(: ( [32041,32042]"
    },
    {
      "src": ",: , [30394,30395]",
      "dest": ",: , [30394,30395]"
    },
    {
      "src": "primitive_type [25596,25601]",
      "dest": "primitive_type [25596,25601]"
    },
    {
      "src": "identifier: data [20676,20680]",
      "dest": "identifier: data [20676,20680]"
    },
    {
      "src": "\": \" [22215,22216]",
      "dest": "\": \" [22215,22216]"
    },
    {
      "src": "public: public [37682,37688]",
      "dest": "public: public [37683,37689]"
    },
    {
      "src": "return_statement [37382,37398]",
      "dest": "return_statement [37382,37398]"
    },
    {
      "src": ",: , [20258,20259]",
      "dest": ",: , [20258,20259]"
    },
    {
      "src": "virtual: virtual [35314,35321]",
      "dest": "virtual: virtual [35314,35321]"
    },
    {
      "src": "call_argument [37269,37282]",
      "dest": "call_argument [37269,37282]"
    },
    {
      "src": "function_definition [24855,24915]",
      "dest": "function_definition [24855,24915]"
    },
    {
      "src": "comment: /**  * @title Initializable  *  * @dev Helper contract to support initializer functions. To use it, replace  * the constructor with a function that has the `initializer` modifier.  * WARNING: Unlike constructors, initializer functions must be manually  * invoked. This applies both to deploying an Initializable contract, as well  * as extending an Initializable contract via inheritance.  * WARNING: When used with inheritance, manual care must be taken to not invoke  * a parent initializer twice, or ensure that all initializers are idempotent,  * because this is not dealt with automatically as with constructors.  */ [3520,4152]",
      "dest": "comment: /**  * @title Initializable  *  * @dev Helper contract to support initializer functions. To use it, replace  * the constructor with a function that has the `initializer` modifier.  * WARNING: Unlike constructors, initializer functions must be manually  * invoked. This applies both to deploying an Initializable contract, as well  * as extending an Initializable contract via inheritance.  * WARNING: When used with inheritance, manual care must be taken to not invoke  * a parent initializer twice, or ensure that all initializers are idempotent,  * because this is not dealt with automatically as with constructors.  */ [3520,4152]"
    },
    {
      "src": "\": \" [36469,36470]",
      "dest": "\": \" [36469,36470]"
    },
    {
      "src": "function_definition [13364,13556]",
      "dest": "function_definition [13364,13556]"
    },
    {
      "src": "block_statement [22551,22902]",
      "dest": "block_statement [22551,22902]"
    },
    {
      "src": "contract_declaration [33763,36558]",
      "dest": "contract_declaration [33763,36558]"
    },
    {
      "src": "primitive_type [8244,8251]",
      "dest": "primitive_type [8244,8251]"
    },
    {
      "src": "identifier: from [10451,10455]",
      "dest": "identifier: from [10451,10455]"
    },
    {
      "src": "internal: internal [16811,16819]",
      "dest": "internal: internal [16811,16819]"
    },
    {
      "src": "(: ( [37268,37269]",
      "dest": "(: ( [37268,37269]"
    },
    {
      "src": "parameter [12519,12526]",
      "dest": "parameter [12519,12526]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: UNLICENSED [1527,1565]",
      "dest": "comment: // SPDX-License-Identifier: UNLICENSED [1527,1565]"
    },
    {
      "src": "call_argument [16228,16254]",
      "dest": "call_argument [16228,16254]"
    },
    {
      "src": "address: address [7106,7113]",
      "dest": "address: address [7106,7113]"
    },
    {
      "src": "identifier: _allowances [26515,26526]",
      "dest": "identifier: _allowances [26515,26526]"
    },
    {
      "src": "true: true [4832,4836]",
      "dest": "true: true [4832,4836]"
    },
    {
      "src": "true: true [29068,29072]",
      "dest": "true: true [29068,29072]"
    },
    {
      "src": ":=: := [5604,5606]",
      "dest": ":=: := [5604,5606]"
    },
    {
      "src": "identifier: newMax [34077,34083]",
      "dest": "identifier: newMax [34077,34083]"
    },
    {
      "src": "type_name [12949,12956]",
      "dest": "type_name [12949,12956]"
    },
    {
      "src": "parameter [35924,35938]",
      "dest": "parameter [35924,35938]"
    },
    {
      "src": "[: [ [32114,32115]",
      "dest": "[: [ [32114,32115]"
    },
    {
      "src": "override_specifier [36266,36274]",
      "dest": "override_specifier [36266,36274]"
    },
    {
      "src": "function_body [19135,19461]",
      "dest": "function_body [19135,19461]"
    },
    {
      "src": ",: , [19323,19324]",
      "dest": ",: , [19323,19324]"
    },
    {
      "src": "identifier: __Ownable_init_unchained [6991,7015]",
      "dest": "identifier: __Ownable_init_unchained [6991,7015]"
    },
    {
      "src": "(: ( [22290,22291]",
      "dest": "(: ( [22290,22291]"
    },
    {
      "src": "return_type_definition [25587,25602]",
      "dest": "return_type_definition [25587,25602]"
    },
    {
      "src": "address: address [7772,7779]",
      "dest": "address: address [7772,7779]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [8261,8335]",
      "dest": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [8261,8335]"
    },
    {
      "src": "identifier: b [16905,16906]",
      "dest": "identifier: b [16905,16906]"
    },
    {
      "src": "function_body [29691,30083]",
      "dest": "function_body [29691,30083]"
    },
    {
      "src": "state_variable_declaration [1676,1695]",
      "dest": "state_variable_declaration [1676,1695]"
    },
    {
      "src": "type_name [22305,22310]",
      "dest": "type_name [22305,22310]"
    },
    {
      "src": "parameter [9073,9080]",
      "dest": "parameter [9073,9080]"
    },
    {
      "src": "identifier: ownable [11474,11481]",
      "dest": "identifier: ownable [11474,11481]"
    },
    {
      "src": "yul_identifier [5619,5623]",
      "dest": "yul_identifier [5619,5623]"
    },
    {
      "src": ",: , [36900,36901]",
      "dest": ",: , [36900,36901]"
    },
    {
      "src": "view: view [8386,8390]",
      "dest": "view: view [8386,8390]"
    },
    {
      "src": "function: function [25547,25555]",
      "dest": "function: function [25547,25555]"
    },
    {
      "src": "state_variable_declaration [36987,37023]",
      "dest": "state_variable_declaration [36987,37023]"
    },
    {
      "src": "return_statement [26317,26329]",
      "dest": "return_statement [26317,26329]"
    },
    {
      "src": "identifier: value [34020,34025]",
      "dest": "identifier: value [34020,34025]"
    },
    {
      "src": "override: override [26762,26770]",
      "dest": "override: override [26762,26770]"
    },
    {
      "src": "(: ( [38115,38116]",
      "dest": "(: ( [38116,38117]"
    },
    {
      "src": "variable_declaration_statement [12539,12557]",
      "dest": "variable_declaration_statement [12539,12557]"
    },
    {
      "src": "type_name [13377,13384]",
      "dest": "type_name [13377,13384]"
    },
    {
      "src": "type_name [35924,35931]",
      "dest": "type_name [35924,35931]"
    },
    {
      "src": "type_name [1827,1854]",
      "dest": "type_name [1827,1854]"
    },
    {
      "src": "uint256: uint256 [15476,15483]",
      "dest": "uint256: uint256 [15476,15483]"
    },
    {
      "src": ".: . [30607,30608]",
      "dest": ".: . [30607,30608]"
    },
    {
      "src": "constant: constant [37001,37009]",
      "dest": "constant: constant [37001,37009]"
    },
    {
      "src": "identifier: value [10485,10490]",
      "dest": "identifier: value [10485,10490]"
    },
    {
      "src": "comment: // pragma solidity ^0.6.2; [16990,17016]",
      "dest": "comment: // pragma solidity ^0.6.2; [16990,17016]"
    },
    {
      "src": "==: == [37765,37767]",
      "dest": "==: == [37766,37768]"
    },
    {
      "src": "user_defined_type [32597,32602]",
      "dest": "user_defined_type [32597,32602]"
    },
    {
      "src": "{: { [37581,37582]",
      "dest": "{: { [37581,37582]"
    },
    {
      "src": "modifier_invocation [35018,35027]",
      "dest": "modifier_invocation [35018,35027]"
    },
    {
      "src": "\": \" [38200,38201]",
      "dest": "\": \" [38201,38202]"
    },
    {
      "src": "identifier: newOwner [6811,6819]",
      "dest": "identifier: newOwner [6811,6819]"
    },
    {
      "src": ",: , [31963,31964]",
      "dest": ",: , [31963,31964]"
    },
    {
      "src": "function_body [13459,13556]",
      "dest": "function_body [13459,13556]"
    },
    {
      "src": "comment: // construction, since the code is only stored at the end of the [17861,17925]",
      "dest": "comment: // construction, since the code is only stored at the end of the [17861,17925]"
    },
    {
      "src": ",: , [21260,21261]",
      "dest": ",: , [21260,21261]"
    },
    {
      "src": "function_definition [14762,14894]",
      "dest": "function_definition [14762,14894]"
    },
    {
      "src": "address: address [26714,26721]",
      "dest": "address: address [26714,26721]"
    },
    {
      "src": "identifier: BURN_AMOUNT_MULTIPLIER [37859,37881]",
      "dest": "identifier: BURN_AMOUNT_MULTIPLIER [37860,37882]"
    },
    {
      "src": "binary_expression [13478,13484]",
      "dest": "binary_expression [13478,13484]"
    },
    {
      "src": "view: view [25707,25711]",
      "dest": "view: view [25707,25711]"
    },
    {
      "src": "memory: memory [20689,20695]",
      "dest": "memory: memory [20689,20695]"
    },
    {
      "src": "identifier: errorMessage [22101,22113]",
      "dest": "identifier: errorMessage [22101,22113]"
    },
    {
      "src": "false: false [4925,4930]",
      "dest": "false: false [4925,4930]"
    },
    {
      "src": "(: ( [11194,11195]",
      "dest": "(: ( [11194,11195]"
    },
    {
      "src": "identifier: onlyOwner [11453,11462]",
      "dest": "identifier: onlyOwner [11453,11462]"
    },
    {
      "src": "function_body [16843,16914]",
      "dest": "function_body [16843,16914]"
    },
    {
      "src": "type_name [38027,38034]",
      "dest": "type_name [38028,38035]"
    },
    {
      "src": "(: ( [11126,11127]",
      "dest": "(: ( [11126,11127]"
    },
    {
      "src": "call_argument [29917,29957]",
      "dest": "call_argument [29917,29957]"
    },
    {
      "src": "call_argument [30612,30618]",
      "dest": "call_argument [30612,30618]"
    },
    {
      "src": "parameter [35291,35305]",
      "dest": "parameter [35291,35305]"
    },
    {
      "src": "type_name [26433,26440]",
      "dest": "type_name [26433,26440]"
    },
    {
      "src": "): ) [22801,22802]",
      "dest": "): ) [22801,22802]"
    },
    {
      "src": "): ) [34475,34476]",
      "dest": "): ) [34475,34476]"
    },
    {
      "src": "identifier: require [35343,35350]",
      "dest": "identifier: require [35343,35350]"
    },
    {
      "src": "primitive_type [35703,35710]",
      "dest": "primitive_type [35703,35710]"
    },
    {
      "src": "event: event [6737,6742]",
      "dest": "event: event [6737,6742]"
    },
    {
      "src": "\": \" [35071,35072]",
      "dest": "\": \" [35071,35072]"
    },
    {
      "src": "variable_declaration_statement [14173,14191]",
      "dest": "variable_declaration_statement [14173,14191]"
    },
    {
      "src": "primitive_type [32034,32041]",
      "dest": "primitive_type [32034,32041]"
    },
    {
      "src": "address: address [11261,11268]",
      "dest": "address: address [11261,11268]"
    },
    {
      "src": "event_paramater [10457,10475]",
      "dest": "event_paramater [10457,10475]"
    },
    {
      "src": "}: } [33424,33425]",
      "dest": "}: } [33424,33425]"
    },
    {
      "src": "primitive_type [31107,31114]",
      "dest": "primitive_type [31107,31114]"
    },
    {
      "src": "boolean_literal [28300,28304]",
      "dest": "boolean_literal [28300,28304]"
    },
    {
      "src": "call_argument [38225,38232]",
      "dest": "call_argument [38226,38233]"
    },
    {
      "src": "internal: internal [14797,14805]",
      "dest": "internal: internal [14797,14805]"
    },
    {
      "src": "call_argument [19361,19363]",
      "dest": "call_argument [19361,19363]"
    },
    {
      "src": "identifier: Transfer [31323,31331]",
      "dest": "identifier: Transfer [31323,31331]"
    },
    {
      "src": "primitive_type [1874,1881]",
      "dest": "primitive_type [1874,1881]"
    },
    {
      "src": "identifier: _owner [7862,7868]",
      "dest": "identifier: _owner [7862,7868]"
    },
    {
      "src": "comment: // import \"@openzeppelin/contracts/utils/Address.sol\"; [23197,23251]",
      "dest": "comment: // import \"@openzeppelin/contracts/utils/Address.sol\"; [23197,23251]"
    },
    {
      "src": "call_expression [16218,16255]",
      "dest": "call_expression [16218,16255]"
    },
    {
      "src": "pure: pure [24886,24890]",
      "dest": "pure: pure [24886,24890]"
    },
    {
      "src": "comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [32348,32560]",
      "dest": "comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [32348,32560]"
    },
    {
      "src": "parameter [26780,26784]",
      "dest": "parameter [26780,26784]"
    },
    {
      "src": "): ) [21275,21276]",
      "dest": "): ) [21275,21276]"
    },
    {
      "src": "call_argument [30644,30654]",
      "dest": "call_argument [30644,30654]"
    },
    {
      "src": "primitive_type [10237,10241]",
      "dest": "primitive_type [10237,10241]"
    },
    {
      "src": "type_name [22087,22093]",
      "dest": "type_name [22087,22093]"
    },
    {
      "src": "primitive_type [15403,15410]",
      "dest": "primitive_type [15403,15410]"
    },
    {
      "src": "identifier: recipient [35772,35781]",
      "dest": "identifier: recipient [35772,35781]"
    },
    {
      "src": "parameter [34194,34215]",
      "dest": "parameter [34194,34215]"
    },
    {
      "src": "binary_expression [36294,36318]",
      "dest": "binary_expression [36294,36318]"
    },
    {
      "src": "identifier: account [33401,33408]",
      "dest": "identifier: account [33401,33408]"
    },
    {
      "src": "type_name [12519,12526]",
      "dest": "type_name [12519,12526]"
    },
    {
      "src": "call_expression [15496,15524]",
      "dest": "call_expression [15496,15524]"
    },
    {
      "src": "return: return [21922,21928]",
      "dest": "return: return [21922,21928]"
    },
    {
      "src": "member_expression [27559,27569]",
      "dest": "member_expression [27559,27569]"
    },
    {
      "src": "return: return [34391,34397]",
      "dest": "return: return [34391,34397]"
    },
    {
      "src": "function: function [37098,37106]",
      "dest": "function: function [37098,37106]"
    },
    {
      "src": "function: function [29570,29578]",
      "dest": "function: function [29570,29578]"
    },
    {
      "src": "expression_statement [16854,16884]",
      "dest": "expression_statement [16854,16884]"
    },
    {
      "src": "type_name [28186,28190]",
      "dest": "type_name [28186,28190]"
    },
    {
      "src": "if: if [35699,35701]",
      "dest": "if: if [35699,35701]"
    },
    {
      "src": "member_expression [11360,11374]",
      "dest": "member_expression [11360,11374]"
    },
    {
      "src": "}: } [32190,32191]",
      "dest": "}: } [32190,32191]"
    },
    {
      "src": "address: address [21709,21716]",
      "dest": "address: address [21709,21716]"
    },
    {
      "src": "identifier: initializer [37171,37182]",
      "dest": "identifier: initializer [37171,37182]"
    },
    {
      "src": "yul_path [22791,22801]",
      "dest": "yul_path [22791,22801]"
    },
    {
      "src": "): ) [20812,20813]",
      "dest": "): ) [20812,20813]"
    },
    {
      "src": "primitive_type [31027,31034]",
      "dest": "primitive_type [31027,31034]"
    },
    {
      "src": "function: function [13364,13372]",
      "dest": "function: function [13364,13372]"
    },
    {
      "src": "yul_path [5619,5623]",
      "dest": "yul_path [5619,5623]"
    },
    {
      "src": "primitive_type [13450,13457]",
      "dest": "primitive_type [13450,13457]"
    },
    {
      "src": ".: . [27562,27563]",
      "dest": ".: . [27562,27563]"
    },
    {
      "src": "type_name [31836,31843]",
      "dest": "type_name [31836,31843]"
    },
    {
      "src": "(: ( [12982,12983]",
      "dest": "(: ( [12982,12983]"
    },
    {
      "src": "address: address [10695,10702]",
      "dest": "address: address [10695,10702]"
    },
    {
      "src": "number_literal: 0 [5658,5659]",
      "dest": "number_literal: 0 [5658,5659]"
    },
    {
      "src": "call_argument [7118,7128]",
      "dest": "call_argument [7118,7128]"
    },
    {
      "src": "return: return [27670,27676]",
      "dest": "return: return [27670,27676]"
    },
    {
      "src": "identifier: DECIMALS [37389,37397]",
      "dest": "identifier: DECIMALS [37389,37397]"
    },
    {
      "src": "call_argument [7780,7781]",
      "dest": "call_argument [7780,7781]"
    },
    {
      "src": "identifier: weiValue [22352,22360]",
      "dest": "identifier: weiValue [22352,22360]"
    },
    {
      "src": "identifier: amount [31353,31359]",
      "dest": "identifier: amount [31353,31359]"
    },
    {
      "src": "call_argument [35351,35394]",
      "dest": "call_argument [35351,35394]"
    },
    {
      "src": ".: . [37736,37737]",
      "dest": ".: . [37737,37738]"
    },
    {
      "src": "[: [ [27582,27583]",
      "dest": "[: [ [27582,27583]"
    },
    {
      "src": "identifier: b [13396,13397]",
      "dest": "identifier: b [13396,13397]"
    },
    {
      "src": "type_name [21709,21716]",
      "dest": "type_name [21709,21716]"
    },
    {
      "src": "): ) [22328,22329]",
      "dest": "): ) [22328,22329]"
    },
    {
      "src": "{: { [22146,22147]",
      "dest": "{: { [22146,22147]"
    },
    {
      "src": "call_argument [21370,21413]",
      "dest": "call_argument [21370,21413]"
    },
    {
      "src": "return_type_definition [28177,28191]",
      "dest": "return_type_definition [28177,28191]"
    },
    {
      "src": "): ) [13848,13849]",
      "dest": "): ) [13848,13849]"
    },
    {
      "src": "function_definition [21196,21422]",
      "dest": "function_definition [21196,21422]"
    },
    {
      "src": ".: . [7062,7063]",
      "dest": ".: . [7062,7063]"
    },
    {
      "src": "(: ( [1834,1835]",
      "dest": "(: ( [1834,1835]"
    },
    {
      "src": "): ) [35749,35750]",
      "dest": "): ) [35749,35750]"
    },
    {
      "src": "): ) [12612,12613]",
      "dest": "): ) [12612,12613]"
    },
    {
      "src": "returns: returns [21796,21803]",
      "dest": "returns: returns [21796,21803]"
    },
    {
      "src": "identifier: burnMax [34437,34444]",
      "dest": "identifier: burnMax [34437,34444]"
    },
    {
      "src": "memory: memory [25088,25094]",
      "dest": "memory: memory [25088,25094]"
    },
    {
      "src": "call_argument [11500,11506]",
      "dest": "call_argument [11500,11506]"
    },
    {
      "src": "address: address [27395,27402]",
      "dest": "address: address [27395,27402]"
    },
    {
      "src": "): ) [25565,25566]",
      "dest": "): ) [25565,25566]"
    },
    {
      "src": "call_argument [11187,11208]",
      "dest": "call_argument [11187,11208]"
    },
    {
      "src": "binary_expression [14185,14190]",
      "dest": "binary_expression [14185,14190]"
    },
    {
      "src": "(: ( [36133,36134]",
      "dest": "(: ( [36133,36134]"
    },
    {
      "src": "identifier: recipient [29791,29800]",
      "dest": "identifier: recipient [29791,29800]"
    },
    {
      "src": "return_statement [20320,20388]",
      "dest": "return_statement [20320,20388]"
    },
    {
      "src": "identifier: recipient [36031,36040]",
      "dest": "identifier: recipient [36031,36040]"
    },
    {
      "src": "(: ( [19082,19083]",
      "dest": "(: ( [19082,19083]"
    },
    {
      "src": "type_cast_expression [30644,30654]",
      "dest": "type_cast_expression [30644,30654]"
    },
    {
      "src": "call_argument [19162,19166]",
      "dest": "call_argument [19162,19166]"
    },
    {
      "src": "(: ( [27504,27505]",
      "dest": "(: ( [27504,27505]"
    },
    {
      "src": "(: ( [37643,37644]",
      "dest": "(: ( [37644,37645]"
    },
    {
      "src": "identifier: msg [7118,7121]",
      "dest": "identifier: msg [7118,7121]"
    },
    {
      "src": "type_name [33161,33168]",
      "dest": "type_name [33161,33168]"
    },
    {
      "src": "override_specifier [37436,37444]",
      "dest": "override_specifier [37436,37444]"
    },
    {
      "src": "visibility [26747,26753]",
      "dest": "visibility [26747,26753]"
    },
    {
      "src": "parameter [31836,31849]",
      "dest": "parameter [31836,31849]"
    },
    {
      "src": "state_variable_declaration [37029,37090]",
      "dest": "state_variable_declaration [37029,37090]"
    },
    {
      "src": "event: event [34033,34038]",
      "dest": "event: event [34033,34038]"
    },
    {
      "src": "memory: memory [22138,22144]",
      "dest": "memory: memory [22138,22144]"
    },
    {
      "src": "parameter [11261,11271]",
      "dest": "parameter [11261,11271]"
    },
    {
      "src": "): ) [5623,5624]",
      "dest": "): ) [5623,5624]"
    },
    {
      "src": "identifier: amount [38234,38240]",
      "dest": "identifier: amount [38235,38241]"
    },
    {
      "src": "assembly: assembly [22730,22738]",
      "dest": "assembly: assembly [22730,22738]"
    },
    {
      "src": "(: ( [30378,30379]",
      "dest": "(: ( [30378,30379]"
    },
    {
      "src": "primitive_type [9771,9778]",
      "dest": "primitive_type [9771,9778]"
    },
    {
      "src": "function_definition [10146,10243]",
      "dest": "function_definition [10146,10243]"
    },
    {
      "src": "struct_field_assignment [22345,22360]",
      "dest": "struct_field_assignment [22345,22360]"
    },
    {
      "src": "primitive_type [31860,31867]",
      "dest": "primitive_type [31860,31867]"
    },
    {
      "src": "(: ( [25564,25565]",
      "dest": "(: ( [25564,25565]"
    },
    {
      "src": "primitive_type [33936,33943]",
      "dest": "primitive_type [33936,33943]"
    },
    {
      "src": "identifier: this [21846,21850]",
      "dest": "identifier: this [21846,21850]"
    },
    {
      "src": "function_body [12992,13061]",
      "dest": "function_body [12992,13061]"
    },
    {
      "src": "identifier: spender [10711,10718]",
      "dest": "identifier: spender [10711,10718]"
    },
    {
      "src": "bool: bool [26249,26253]",
      "dest": "bool: bool [26249,26253]"
    },
    {
      "src": "identifier: _burn [35766,35771]",
      "dest": "identifier: _burn [35766,35771]"
    },
    {
      "src": "identifier: sender [29607,29613]",
      "dest": "identifier: sender [29607,29613]"
    },
    {
      "src": "comment: // extcodesize checks the size of the code stored in an address, and [5106,5174]",
      "dest": "comment: // extcodesize checks the size of the code stored in an address, and [5106,5174]"
    },
    {
      "src": "primitive_type [21759,21765]",
      "dest": "primitive_type [21759,21765]"
    },
    {
      "src": "identifier: balanceOf [11325,11334]",
      "dest": "identifier: balanceOf [11325,11334]"
    },
    {
      "src": "identifier: sender [28216,28222]",
      "dest": "identifier: sender [28216,28222]"
    },
    {
      "src": "}: } [38248,38249]",
      "dest": "}: } [38249,38250]"
    },
    {
      "src": "state_mutability [12969,12973]",
      "dest": "state_mutability [12969,12973]"
    },
    {
      "src": "if: if [4874,4876]",
      "dest": "if: if [4874,4876]"
    },
    {
      "src": "identifier: Initializable [6672,6685]",
      "dest": "identifier: Initializable [6672,6685]"
    },
    {
      "src": "public: public [25052,25058]",
      "dest": "public: public [25052,25058]"
    },
    {
      "src": "call_expression [27495,27531]",
      "dest": "call_expression [27495,27531]"
    },
    {
      "src": "primitive_type [15414,15421]",
      "dest": "primitive_type [15414,15421]"
    },
    {
      "src": ",: , [33832,33833]",
      "dest": ",: , [33832,33833]"
    },
    {
      "src": "yul_path [18083,18090]",
      "dest": "yul_path [18083,18090]"
    },
    {
      "src": "user_defined_type [24523,24535]",
      "dest": "user_defined_type [24523,24535]"
    },
    {
      "src": "indexed: indexed [6772,6779]",
      "dest": "indexed: indexed [6772,6779]"
    },
    {
      "src": "primitive_type [19311,19315]",
      "dest": "primitive_type [19311,19315]"
    },
    {
      "src": "identifier: sender [29877,29883]",
      "dest": "identifier: sender [29877,29883]"
    },
    {
      "src": "identifier: require [29702,29709]",
      "dest": "identifier: require [29702,29709]"
    },
    {
      "src": "visibility [25052,25058]",
      "dest": "visibility [25052,25058]"
    },
    {
      "src": "parameter [26249,26253]",
      "dest": "parameter [26249,26253]"
    },
    {
      "src": "}: } [34516,34517]",
      "dest": "}: } [34516,34517]"
    },
    {
      "src": "event_paramater [10695,10718]",
      "dest": "event_paramater [10695,10718]"
    },
    {
      "src": "returns: returns [12974,12981]",
      "dest": "returns: returns [12974,12981]"
    },
    {
      "src": "): ) [7878,7879]",
      "dest": "): ) [7878,7879]"
    },
    {
      "src": "call_expression [26797,26834]",
      "dest": "call_expression [26797,26834]"
    },
    {
      "src": "virtual: virtual [32755,32762]",
      "dest": "virtual: virtual [32755,32762]"
    },
    {
      "src": "identifier: super [36004,36009]",
      "dest": "identifier: super [36004,36009]"
    },
    {
      "src": ".: . [36487,36488]",
      "dest": ".: . [36487,36488]"
    },
    {
      "src": "variable_declaration [5460,5472]",
      "dest": "variable_declaration [5460,5472]"
    },
    {
      "src": "(: ( [33935,33936]",
      "dest": "(: ( [33935,33936]"
    },
    {
      "src": "type_name [1808,1855]",
      "dest": "type_name [1808,1855]"
    },
    {
      "src": "{: { [22392,22393]",
      "dest": "{: { [22392,22393]"
    },
    {
      "src": "call_argument [30049,30055]",
      "dest": "call_argument [30049,30055]"
    },
    {
      "src": "identifier: self [5619,5623]",
      "dest": "identifier: self [5619,5623]"
    },
    {
      "src": "identifier: spender [28850,28857]",
      "dest": "identifier: spender [28850,28857]"
    },
    {
      "src": "binary_expression [35703,35749]",
      "dest": "binary_expression [35703,35749]"
    },
    {
      "src": "function: function [34942,34950]",
      "dest": "function: function [34942,34950]"
    },
    {
      "src": "identifier: msg [7440,7443]",
      "dest": "identifier: msg [7440,7443]"
    },
    {
      "src": "}: } [19359,19360]",
      "dest": "}: } [19359,19360]"
    },
    {
      "src": "variable_declaration [15535,15544]",
      "dest": "variable_declaration [15535,15544]"
    },
    {
      "src": "using: using [36952,36957]",
      "dest": "using: using [36952,36957]"
    },
    {
      "src": "identifier: recipient [26189,26198]",
      "dest": "identifier: recipient [26189,26198]"
    },
    {
      "src": "type_name [9018,9025]",
      "dest": "type_name [9018,9025]"
    },
    {
      "src": "\": \" [19362,19363]",
      "dest": "\": \" [19362,19363]"
    },
    {
      "src": "(: ( [26275,26276]",
      "dest": "(: ( [26275,26276]"
    },
    {
      "src": "type_name [36233,36240]",
      "dest": "type_name [36233,36240]"
    },
    {
      "src": "identifier: amount [30665,30671]",
      "dest": "identifier: amount [30665,30671]"
    },
    {
      "src": "(: ( [24868,24869]",
      "dest": "(: ( [24868,24869]"
    },
    {
      "src": "identifier: sender [28971,28977]",
      "dest": "identifier: sender [28971,28977]"
    },
    {
      "src": "override: override [37543,37551]",
      "dest": "override: override [37543,37551]"
    },
    {
      "src": "yul_evm_builtin [22831,22834]",
      "dest": "yul_evm_builtin [22831,22834]"
    },
    {
      "src": "identifier: functionCall [20634,20646]",
      "dest": "identifier: functionCall [20634,20646]"
    },
    {
      "src": "{: { [11463,11464]",
      "dest": "{: { [11463,11464]"
    },
    {
      "src": "assignment_expression [30568,30619]",
      "dest": "assignment_expression [30568,30619]"
    },
    {
      "src": "identifier: _balances [30568,30577]",
      "dest": "identifier: _balances [30568,30577]"
    },
    {
      "src": "(: ( [14208,14209]",
      "dest": "(: ( [14208,14209]"
    },
    {
      "src": "call_expression [31283,31307]",
      "dest": "call_expression [31283,31307]"
    },
    {
      "src": "virtual: virtual [38069,38076]",
      "dest": "virtual: virtual [38070,38077]"
    },
    {
      "src": "identifier: spender [32023,32030]",
      "dest": "identifier: spender [32023,32030]"
    },
    {
      "src": "identifier: Ownable [6647,6654]",
      "dest": "identifier: Ownable [6647,6654]"
    },
    {
      "src": "identifier: mint [35269,35273]",
      "dest": "identifier: mint [35269,35273]"
    },
    {
      "src": "yul_evm_builtin [5607,5618]",
      "dest": "yul_evm_builtin [5607,5618]"
    },
    {
      "src": "primitive_type [5460,5467]",
      "dest": "primitive_type [5460,5467]"
    },
    {
      "src": "): ) [27657,27658]",
      "dest": "): ) [27657,27658]"
    },
    {
      "src": "call_argument [11379,11386]",
      "dest": "call_argument [11379,11386]"
    },
    {
      "src": "identifier: a [13522,13523]",
      "dest": "identifier: a [13522,13523]"
    },
    {
      "src": "parameter [9018,9031]",
      "dest": "parameter [9018,9031]"
    },
    {
      "src": "type_name [10435,10442]",
      "dest": "type_name [10435,10442]"
    },
    {
      "src": "visibility [20279,20287]",
      "dest": "visibility [20279,20287]"
    },
    {
      "src": ",: , [31042,31043]",
      "dest": ",: , [31042,31043]"
    },
    {
      "src": "): ) [17739,17740]",
      "dest": "): ) [17739,17740]"
    },
    {
      "src": "boolean_literal [4798,4802]",
      "dest": "boolean_literal [4798,4802]"
    },
    {
      "src": "identifier: errorMessage [16797,16809]",
      "dest": "identifier: errorMessage [16797,16809]"
    },
    {
      "src": "(: ( [31026,31027]",
      "dest": "(: ( [31026,31027]"
    },
    {
      "src": "primitive_type [32732,32739]",
      "dest": "primitive_type [32732,32739]"
    },
    {
      "src": "call_argument [35474,35481]",
      "dest": "call_argument [35474,35481]"
    },
    {
      "src": "comment: // address private _owner; [6703,6729]",
      "dest": "comment: // address private _owner; [6703,6729]"
    },
    {
      "src": ",: , [21241,21242]",
      "dest": ",: , [21241,21242]"
    },
    {
      "src": "expression_statement [35996,36051]",
      "dest": "expression_statement [35996,36051]"
    },
    {
      "src": "\": \" [14884,14885]",
      "dest": "\": \" [14884,14885]"
    },
    {
      "src": "return_statement [16894,16907]",
      "dest": "return_statement [16894,16907]"
    },
    {
      "src": "identifier: transferFrom [36010,36022]",
      "dest": "identifier: transferFrom [36010,36022]"
    },
    {
      "src": ".: . [31207,31208]",
      "dest": ".: . [31207,31208]"
    },
    {
      "src": ",: , [31351,31352]",
      "dest": ",: , [31351,31352]"
    },
    {
      "src": "state_mutability [34454,34458]",
      "dest": "state_mutability [34454,34458]"
    },
    {
      "src": "type_name [36971,36978]",
      "dest": "type_name [36971,36978]"
    },
    {
      "src": "function_definition [9754,9828]",
      "dest": "function_definition [9754,9828]"
    },
    {
      "src": "(: ( [14774,14775]",
      "dest": "(: ( [14774,14775]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [20403,20619]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [20403,20619]"
    },
    {
      "src": "event_definition [33925,33971]",
      "dest": "event_definition [33925,33971]"
    },
    {
      "src": ",: , [15509,15510]",
      "dest": ",: , [15509,15510]"
    },
    {
      "src": "type_name [21744,21751]",
      "dest": "type_name [21744,21751]"
    },
    {
      "src": "emit_statement [30035,30076]",
      "dest": "emit_statement [30035,30076]"
    },
    {
      "src": "identifier: _allowances [32096,32107]",
      "dest": "identifier: _allowances [32096,32107]"
    },
    {
      "src": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [14033,14104]",
      "dest": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [14033,14104]"
    },
    {
      "src": "): ) [22549,22550]",
      "dest": "): ) [22549,22550]"
    },
    {
      "src": "virtual: virtual [26457,26464]",
      "dest": "virtual: virtual [26457,26464]"
    },
    {
      "src": "(: ( [25595,25596]",
      "dest": "(: ( [25595,25596]"
    },
    {
      "src": "string: string [21759,21765]",
      "dest": "string: string [21759,21765]"
    },
    {
      "src": "string [35071,35118]",
      "dest": "string [35071,35118]"
    },
    {
      "src": "parameter [21227,21241]",
      "dest": "parameter [21227,21241]"
    },
    {
      "src": "identifier: _totalSupply [25748,25760]",
      "dest": "identifier: _totalSupply [25748,25760]"
    },
    {
      "src": "call_argument [30057,30066]",
      "dest": "call_argument [30057,30066]"
    },
    {
      "src": "return_type_definition [13864,13881]",
      "dest": "return_type_definition [13864,13881]"
    },
    {
      "src": "=: = [19327,19328]",
      "dest": "=: = [19327,19328]"
    },
    {
      "src": "address: address [31027,31034]",
      "dest": "address: address [31027,31034]"
    },
    {
      "src": "comment: // Root file: contracts/true-gold/TrueGold.sol [36564,36610]",
      "dest": "comment: // Root file: contracts/true-gold/TrueGold.sol [36564,36610]"
    },
    {
      "src": "<=: <= [35057,35059]",
      "dest": "<=: <= [35057,35059]"
    },
    {
      "src": "=: = [37077,37078]",
      "dest": "=: = [37077,37078]"
    },
    {
      "src": "identifier: size [18063,18067]",
      "dest": "identifier: size [18063,18067]"
    },
    {
      "src": "uint256: uint256 [26200,26207]",
      "dest": "uint256: uint256 [26200,26207]"
    },
    {
      "src": "=: = [32124,32125]",
      "dest": "=: = [32124,32125]"
    },
    {
      "src": "primitive_type [7689,7696]",
      "dest": "primitive_type [7689,7696]"
    },
    {
      "src": "primitive_type [31953,31960]",
      "dest": "primitive_type [31953,31960]"
    },
    {
      "src": "parameter [37364,37369]",
      "dest": "parameter [37364,37369]"
    },
    {
      "src": "(: ( [30643,30644]",
      "dest": "(: ( [30643,30644]"
    },
    {
      "src": "identifier: amount [9796,9802]",
      "dest": "identifier: amount [9796,9802]"
    },
    {
      "src": "primitive_type [20260,20265]",
      "dest": "primitive_type [20260,20265]"
    },
    {
      "src": "\": \" [22185,22186]",
      "dest": "\": \" [22185,22186]"
    },
    {
      "src": ",: , [7450,7451]",
      "dest": ",: , [7450,7451]"
    },
    {
      "src": "contract_declaration [36866,38252]",
      "dest": "contract_declaration [36866,38253]"
    },
    {
      "src": "type_name [10184,10191]",
      "dest": "type_name [10184,10191]"
    },
    {
      "src": ".: . [11365,11366]",
      "dest": ".: . [11365,11366]"
    },
    {
      "src": "yul_identifier [18063,18067]",
      "dest": "yul_identifier [18063,18067]"
    },
    {
      "src": "identifier: target [20252,20258]",
      "dest": "identifier: target [20252,20258]"
    },
    {
      "src": "return_statement [26845,26857]",
      "dest": "return_statement [26845,26857]"
    },
    {
      "src": "member_expression [28934,28944]",
      "dest": "member_expression [28934,28944]"
    },
    {
      "src": "function_definition [31012,31368]",
      "dest": "function_definition [31012,31368]"
    },
    {
      "src": "[: [ [26526,26527]",
      "dest": "[: [ [26526,26527]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * // importANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [9090,9748]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * // importANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [9090,9748]"
    },
    {
      "src": "primitive_type [1783,1790]",
      "dest": "primitive_type [1783,1790]"
    },
    {
      "src": "private: private [36993,37000]",
      "dest": "private: private [36993,37000]"
    },
    {
      "src": "visibility [8377,8385]",
      "dest": "visibility [8377,8385]"
    },
    {
      "src": "primitive_type [35274,35281]",
      "dest": "primitive_type [35274,35281]"
    },
    {
      "src": "): ) [35944,35945]",
      "dest": "): ) [35944,35945]"
    },
    {
      "src": "identifier: totalSupply [25677,25688]",
      "dest": "identifier: totalSupply [25677,25688]"
    },
    {
      "src": "(: ( [22834,22835]",
      "dest": "(: ( [22834,22835]"
    },
    {
      "src": "type_name [34053,34060]",
      "dest": "type_name [34053,34060]"
    },
    {
      "src": "parameter [12485,12494]",
      "dest": "parameter [12485,12494]"
    },
    {
      "src": "variable_declaration [33203,33229]",
      "dest": "variable_declaration [33203,33229]"
    },
    {
      "src": "type_name [33956,33963]",
      "dest": "type_name [33956,33963]"
    },
    {
      "src": "return_statement [20753,20814]",
      "dest": "return_statement [20753,20814]"
    },
    {
      "src": "call_argument [22165,22183]",
      "dest": "call_argument [22165,22183]"
    },
    {
      "src": "identifier: name [37422,37426]",
      "dest": "identifier: name [37422,37426]"
    },
    {
      "src": "function_definition [37098,37306]",
      "dest": "function_definition [37098,37306]"
    },
    {
      "src": "(: ( [25720,25721]",
      "dest": "(: ( [25720,25721]"
    },
    {
      "src": "identifier: _burn [32774,32779]",
      "dest": "identifier: _burn [32774,32779]"
    },
    {
      "src": "primitive_type [14775,14782]",
      "dest": "primitive_type [14775,14782]"
    },
    {
      "src": "): ) [8713,8714]",
      "dest": "): ) [8713,8714]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [13069,13358]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [13069,13358]"
    },
    {
      "src": ",: , [7782,7783]",
      "dest": ",: , [7782,7783]"
    },
    {
      "src": ",: , [36415,36416]",
      "dest": ",: , [36415,36416]"
    },
    {
      "src": "call_expression [36482,36510]",
      "dest": "call_expression [36482,36510]"
    },
    {
      "src": "{: { [34261,34262]",
      "dest": "{: { [34261,34262]"
    },
    {
      "src": "identifier: onlyOwner [37698,37707]",
      "dest": "identifier: onlyOwner [37699,37708]"
    },
    {
      "src": "primitive_type [21838,21845]",
      "dest": "primitive_type [21838,21845]"
    },
    {
      "src": "=>: => [1780,1782]",
      "dest": "=>: => [1780,1782]"
    },
    {
      "src": "(: ( [22382,22383]",
      "dest": "(: ( [22382,22383]"
    },
    {
      "src": ",: , [30663,30664]",
      "dest": ",: , [30663,30664]"
    },
    {
      "src": "call_argument [31353,31359]",
      "dest": "call_argument [31353,31359]"
    },
    {
      "src": "): ) [38058,38059]",
      "dest": "): ) [38059,38060]"
    },
    {
      "src": ",: , [38144,38145]",
      "dest": ",: , [38145,38146]"
    },
    {
      "src": "inheritance_specifier [6672,6685]",
      "dest": "inheritance_specifier [6672,6685]"
    },
    {
      "src": "primitive_type [7106,7113]",
      "dest": "primitive_type [7106,7113]"
    },
    {
      "src": "function_definition [20625,20821]",
      "dest": "function_definition [20625,20821]"
    },
    {
      "src": "visibility [20710,20718]",
      "dest": "visibility [20710,20718]"
    },
    {
      "src": "identifier: BURN_AMOUNT_MULTIPLIER [37054,37076]",
      "dest": "identifier: BURN_AMOUNT_MULTIPLIER [37054,37076]"
    },
    {
      "src": "public: public [33177,33183]",
      "dest": "public: public [33177,33183]"
    },
    {
      "src": "]: ] [32113,32114]",
      "dest": "]: ] [32113,32114]"
    },
    {
      "src": "visibility [35946,35952]",
      "dest": "visibility [35946,35952]"
    },
    {
      "src": "(: ( [37726,37727]",
      "dest": "(: ( [37727,37728]"
    },
    {
      "src": "call_argument [33251,33261]",
      "dest": "call_argument [33251,33261]"
    },
    {
      "src": "identifier: transfer [35660,35668]",
      "dest": "identifier: transfer [35660,35668]"
    },
    {
      "src": "!: ! [4623,4624]",
      "dest": "!: ! [4623,4624]"
    },
    {
      "src": "type_name [8709,8713]",
      "dest": "type_name [8709,8713]"
    },
    {
      "src": "contract_declaration [32562,33428]",
      "dest": "contract_declaration [32562,33428]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [8417,8632]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [8417,8632]"
    },
    {
      "src": "override_specifier [25698,25706]",
      "dest": "override_specifier [25698,25706]"
    },
    {
      "src": "type_name [13388,13395]",
      "dest": "type_name [13388,13395]"
    },
    {
      "src": "string_literal [32046,32082]",
      "dest": "string_literal [32046,32082]"
    },
    {
      "src": "binary_expression [37727,37769]",
      "dest": "binary_expression [37728,37770]"
    },
    {
      "src": "comment: // Initializable.sol [1626,1646]",
      "dest": "comment: // Initializable.sol [1626,1646]"
    },
    {
      "src": "\": \" [19217,19218]",
      "dest": "\": \" [19217,19218]"
    },
    {
      "src": "struct_expression [22332,22362]",
      "dest": "struct_expression [22332,22362]"
    },
    {
      "src": "function: function [31012,31020]",
      "dest": "function: function [31012,31020]"
    },
    {
      "src": "address: address [26433,26440]",
      "dest": "address: address [26433,26440]"
    },
    {
      "src": "visibility [34240,34248]",
      "dest": "visibility [34240,34248]"
    },
    {
      "src": "state_mutability [15462,15466]",
      "dest": "state_mutability [15462,15466]"
    },
    {
      "src": "call_expression [32015,32083]",
      "dest": "call_expression [32015,32083]"
    },
    {
      "src": "primitive_type [26780,26784]",
      "dest": "primitive_type [26780,26784]"
    },
    {
      "src": "if_statement [4874,4942]",
      "dest": "if_statement [4874,4942]"
    },
    {
      "src": "uint256: uint256 [16157,16164]",
      "dest": "uint256: uint256 [16157,16164]"
    },
    {
      "src": "function_definition [20222,20395]",
      "dest": "function_definition [20222,20395]"
    },
    {
      "src": "identifier: recipient [8664,8673]",
      "dest": "identifier: recipient [8664,8673]"
    },
    {
      "src": "primitive_type [28142,28149]",
      "dest": "primitive_type [28142,28149]"
    },
    {
      "src": "identifier: _burn [36128,36133]",
      "dest": "identifier: _burn [36128,36133]"
    },
    {
      "src": "{: { [13882,13883]",
      "dest": "{: { [13882,13883]"
    },
    {
      "src": "\": \" [29047,29048]",
      "dest": "\": \" [29047,29048]"
    },
    {
      "src": "(: ( [30651,30652]",
      "dest": "(: ( [30651,30652]"
    },
    {
      "src": "): ) [5093,5094]",
      "dest": "): ) [5093,5094]"
    },
    {
      "src": "primitive_type [25897,25904]",
      "dest": "primitive_type [25897,25904]"
    },
    {
      "src": ".: . [33254,33255]",
      "dest": ".: . [33254,33255]"
    },
    {
      "src": ",: , [26198,26199]",
      "dest": ",: , [26198,26199]"
    },
    {
      "src": ",: , [27569,27570]",
      "dest": ",: , [27569,27570]"
    },
    {
      "src": "parameter [26200,26214]",
      "dest": "parameter [26200,26214]"
    },
    {
      "src": "call_expression [37837,37944]",
      "dest": "call_expression [37838,37945]"
    },
    {
      "src": "call_argument [30467,30468]",
      "dest": "call_argument [30467,30468]"
    },
    {
      "src": "function_body [35332,35535]",
      "dest": "function_body [35332,35535]"
    },
    {
      "src": "primitive_type [11127,11142]",
      "dest": "primitive_type [11127,11142]"
    },
    {
      "src": "private: private [5067,5074]",
      "dest": "private: private [5067,5074]"
    },
    {
      "src": "parameter [17724,17739]",
      "dest": "parameter [17724,17739]"
    },
    {
      "src": ",: , [10455,10456]",
      "dest": ",: , [10455,10456]"
    },
    {
      "src": "parameter [12983,12990]",
      "dest": "parameter [12983,12990]"
    },
    {
      "src": "state_mutability [25883,25887]",
      "dest": "state_mutability [25883,25887]"
    },
    {
      "src": "return_statement [21320,21415]",
      "dest": "return_statement [21320,21415]"
    },
    {
      "src": "function: function [8638,8646]",
      "dest": "function: function [8638,8646]"
    },
    {
      "src": "): ) [35686,35687]",
      "dest": "): ) [35686,35687]"
    },
    {
      "src": "(: ( [26805,26806]",
      "dest": "(: ( [26805,26806]"
    },
    {
      "src": "state_variable_declaration [1723,1738]",
      "dest": "state_variable_declaration [1723,1738]"
    },
    {
      "src": "primitive_type [22305,22310]",
      "dest": "primitive_type [22305,22310]"
    },
    {
      "src": "parameter [27370,27384]",
      "dest": "parameter [27370,27384]"
    },
    {
      "src": "identifier: recipient [26288,26297]",
      "dest": "identifier: recipient [26288,26297]"
    },
    {
      "src": "primitive_type [9788,9795]",
      "dest": "primitive_type [9788,9795]"
    },
    {
      "src": "): ) [11271,11272]",
      "dest": "): ) [11271,11272]"
    },
    {
      "src": "parameter [21759,21785]",
      "dest": "parameter [21759,21785]"
    },
    {
      "src": "using_directive [24551,24578]",
      "dest": "using_directive [24551,24578]"
    },
    {
      "src": "identifier: value [19345,19350]",
      "dest": "identifier: value [19345,19350]"
    },
    {
      "src": "(: ( [35978,35979]",
      "dest": "(: ( [35978,35979]"
    },
    {
      "src": ",: , [6670,6671]",
      "dest": ",: , [6670,6671]"
    },
    {
      "src": "identifier: target [21235,21241]",
      "dest": "identifier: target [21235,21241]"
    },
    {
      "src": "string [21370,21413]",
      "dest": "string [21370,21413]"
    },
    {
      "src": "number_literal: 0 [22548,22549]",
      "dest": "number_literal: 0 [22548,22549]"
    },
    {
      "src": "identifier: _balances [29887,29896]",
      "dest": "identifier: _balances [29887,29896]"
    },
    {
      "src": "primitive_type [34012,34019]",
      "dest": "primitive_type [34012,34019]"
    },
    {
      "src": "function_body [21309,21422]",
      "dest": "function_body [21309,21422]"
    },
    {
      "src": "function_definition [31808,32188]",
      "dest": "function_definition [31808,32188]"
    },
    {
      "src": "(: ( [36215,36216]",
      "dest": "(: ( [36215,36216]"
    },
    {
      "src": "modifier_invocation [11280,11289]",
      "dest": "modifier_invocation [11280,11289]"
    },
    {
      "src": "memory: memory [22056,22062]",
      "dest": "memory: memory [22056,22062]"
    },
    {
      "src": "string [29009,29048]",
      "dest": "string [29009,29048]"
    },
    {
      "src": "address: address [31107,31114]",
      "dest": "address: address [31107,31114]"
    },
    {
      "src": "identifier: c [14277,14278]",
      "dest": "identifier: c [14277,14278]"
    },
    {
      "src": "identifier: amount [30068,30074]",
      "dest": "identifier: amount [30068,30074]"
    },
    {
      "src": "identifier: this [5483,5487]",
      "dest": "identifier: this [5483,5487]"
    },
    {
      "src": "binary_expression [15547,15552]",
      "dest": "binary_expression [15547,15552]"
    },
    {
      "src": "return_statement [15652,15661]",
      "dest": "return_statement [15652,15661]"
    },
    {
      "src": "call_expression [19329,19364]",
      "dest": "call_expression [19329,19364]"
    },
    {
      "src": "): ) [13880,13881]",
      "dest": "): ) [13880,13881]"
    },
    {
      "src": "function_body [5095,5667]",
      "dest": "function_body [5095,5667]"
    },
    {
      "src": "function: function [8341,8349]",
      "dest": "function: function [8341,8349]"
    },
    {
      "src": "primitive_type [12983,12990]",
      "dest": "primitive_type [12983,12990]"
    },
    {
      "src": "comment: // mapping (address => uint256) private _balances; [24618,24668]",
      "dest": "comment: // mapping (address => uint256) private _balances; [24618,24668]"
    },
    {
      "src": "return: return [34488,34494]",
      "dest": "return: return [34488,34494]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [5520,5567]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [5520,5567]"
    },
    {
      "src": "string [35396,35456]",
      "dest": "string [35396,35456]"
    },
    {
      "src": "identifier: sender [7444,7450]",
      "dest": "identifier: sender [7444,7450]"
    },
    {
      "src": "type_name [19311,19315]",
      "dest": "type_name [19311,19315]"
    },
    {
      "src": "function: function [21678,21686]",
      "dest": "function: function [21678,21686]"
    },
    {
      "src": "call_argument [21846,21850]",
      "dest": "call_argument [21846,21850]"
    },
    {
      "src": "bytes: bytes [21295,21300]",
      "dest": "bytes: bytes [21295,21300]"
    },
    {
      "src": "for: for [24598,24601]",
      "dest": "for: for [24598,24601]"
    },
    {
      "src": ".: . [27602,27603]",
      "dest": ".: . [27602,27603]"
    },
    {
      "src": "identifier: increaseAllowance [28107,28124]",
      "dest": "identifier: increaseAllowance [28107,28124]"
    },
    {
      "src": "identifier: sender [32784,32790]",
      "dest": "identifier: sender [32784,32790]"
    },
    {
      "src": "identifier: msg [26276,26279]",
      "dest": "identifier: msg [26276,26279]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls [22230,22280]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls [22230,22280]"
    },
    {
      "src": "parameter [26418,26431]",
      "dest": "parameter [26418,26431]"
    },
    {
      "src": "(: ( [32022,32023]",
      "dest": "(: ( [32022,32023]"
    },
    {
      "src": "}: } [5854,5855]",
      "dest": "}: } [5854,5855]"
    },
    {
      "src": "function_body [37474,37510]",
      "dest": "function_body [37474,37510]"
    },
    {
      "src": "): ) [4892,4893]",
      "dest": "): ) [4892,4893]"
    },
    {
      "src": "primitive_type [25721,25728]",
      "dest": "primitive_type [25721,25728]"
    },
    {
      "src": "block_statement [22392,22436]",
      "dest": "block_statement [22392,22436]"
    },
    {
      "src": "uint256: uint256 [16772,16779]",
      "dest": "uint256: uint256 [16772,16779]"
    },
    {
      "src": "\": \" [31220,31221]",
      "dest": "\": \" [31220,31221]"
    },
    {
      "src": "uint256: uint256 [1846,1853]",
      "dest": "uint256: uint256 [1846,1853]"
    },
    {
      "src": "yul_evm_builtin [18071,18082]",
      "dest": "yul_evm_builtin [18071,18082]"
    },
    {
      "src": "contract_body [4193,5670]",
      "dest": "contract_body [4193,5670]"
    },
    {
      "src": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [// importANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [17114,17698]",
      "dest": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [// importANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [17114,17698]"
    },
    {
      "src": "function_definition [15390,15668]",
      "dest": "function_definition [15390,15668]"
    },
    {
      "src": "uint256: uint256 [34371,34378]",
      "dest": "uint256: uint256 [34371,34378]"
    },
    {
      "src": "external: external [9050,9058]",
      "dest": "external: external [9050,9058]"
    },
    {
      "src": "): ) [35526,35527]",
      "dest": "): ) [35526,35527]"
    },
    {
      "src": "is: is [11087,11089]",
      "dest": "is: is [11087,11089]"
    },
    {
      "src": "{: { [37183,37184]",
      "dest": "{: { [37183,37184]"
    },
    {
      "src": "primitive_type [21709,21716]",
      "dest": "primitive_type [21709,21716]"
    },
    {
      "src": "type_name [21725,21730]",
      "dest": "type_name [21725,21730]"
    },
    {
      "src": ",: , [37769,37770]",
      "dest": ",: , [37770,37771]"
    },
    {
      "src": "identifier: ProxyStorage [6658,6670]",
      "dest": "identifier: ProxyStorage [6658,6670]"
    },
    {
      "src": "]: ] [29988,29989]",
      "dest": "]: ] [29988,29989]"
    },
    {
      "src": "{: { [5095,5096]",
      "dest": "{: { [5095,5096]"
    },
    {
      "src": "{: { [13459,13460]",
      "dest": "{: { [13459,13460]"
    },
    {
      "src": "expression_statement [35646,35689]",
      "dest": "expression_statement [35646,35689]"
    },
    {
      "src": "primitive_type [10203,10210]",
      "dest": "primitive_type [10203,10210]"
    },
    {
      "src": "view: view [17750,17754]",
      "dest": "view: view [17750,17754]"
    },
    {
      "src": "): ) [9048,9049]",
      "dest": "): ) [9048,9049]"
    },
    {
      "src": "comment: // want to lock in any particular cap for the minimum) [34882,34936]",
      "dest": "comment: // want to lock in any particular cap for the minimum) [34882,34936]"
    },
    {
      "src": "call_argument [35223,35232]",
      "dest": "call_argument [35223,35232]"
    },
    {
      "src": "}: } [34322,34323]",
      "dest": "}: } [34322,34323]"
    },
    {
      "src": "): ) [11145,11146]",
      "dest": "): ) [11145,11146]"
    },
    {
      "src": "identifier: setBurnBounds [34951,34964]",
      "dest": "identifier: setBurnBounds [34951,34964]"
    },
    {
      "src": "): ) [35118,35119]",
      "dest": "): ) [35118,35119]"
    },
    {
      "src": "return_statement [13540,13549]",
      "dest": "return_statement [13540,13549]"
    },
    {
      "src": "user_defined_type [6687,6695]",
      "dest": "user_defined_type [6687,6695]"
    },
    {
      "src": "!=: != [30456,30458]",
      "dest": "!=: != [30456,30458]"
    },
    {
      "src": "identifier: b [13526,13527]",
      "dest": "identifier: b [13526,13527]"
    },
    {
      "src": "identifier: spender [28946,28953]",
      "dest": "identifier: spender [28946,28953]"
    },
    {
      "src": "identifier: TrueGold [36875,36883]",
      "dest": "identifier: TrueGold [36875,36883]"
    },
    {
      "src": "parameter [31886,31900]",
      "dest": "parameter [31886,31900]"
    },
    {
      "src": "visibility [7018,7026]",
      "dest": "visibility [7018,7026]"
    },
    {
      "src": "identifier: recipient [10192,10201]",
      "dest": "identifier: recipient [10192,10201]"
    },
    {
      "src": "}: } [16913,16914]",
      "dest": "}: } [16913,16914]"
    },
    {
      "src": "mapping: mapping [1827,1834]",
      "dest": "mapping: mapping [1827,1834]"
    },
    {
      "src": "primitive_type [11335,11342]",
      "dest": "primitive_type [11335,11342]"
    },
    {
      "src": "identifier: require [37719,37726]",
      "dest": "identifier: require [37720,37727]"
    },
    {
      "src": ",: , [21368,21369]",
      "dest": ",: , [21368,21369]"
    },
    {
      "src": ",: , [10718,10719]",
      "dest": ",: , [10718,10719]"
    },
    {
      "src": "parameter [37663,37680]",
      "dest": "parameter [37664,37681]"
    },
    {
      "src": ".: . [33262,33263]",
      "dest": ".: . [33262,33263]"
    },
    {
      "src": "): ) [37297,37298]",
      "dest": "): ) [37297,37298]"
    },
    {
      "src": ",: , [20795,20796]",
      "dest": ",: , [20795,20796]"
    },
    {
      "src": "member_expression [30589,30611]",
      "dest": "member_expression [30589,30611]"
    },
    {
      "src": "expression_statement [37194,37221]",
      "dest": "expression_statement [37194,37221]"
    },
    {
      "src": "memory: memory [22311,22317]",
      "dest": "memory: memory [22311,22317]"
    },
    {
      "src": "assignment_expression [29867,29958]",
      "dest": "assignment_expression [29867,29958]"
    },
    {
      "src": "(: ( [8243,8244]",
      "dest": "(: ( [8243,8244]"
    },
    {
      "src": ",: , [31117,31118]",
      "dest": ",: , [31117,31118]"
    },
    {
      "src": "event_paramater [33936,33954]",
      "dest": "event_paramater [33936,33954]"
    },
    {
      "src": "primitive_type [24570,24577]",
      "dest": "primitive_type [24570,24577]"
    },
    {
      "src": "identifier: require [15496,15503]",
      "dest": "identifier: require [15496,15503]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/Initializable.sol\"; [36641,36698]",
      "dest": "comment: // import \"contracts/true-gold/common/Initializable.sol\"; [36641,36698]"
    },
    {
      "src": "identifier: amount [19118,19124]",
      "dest": "identifier: amount [19118,19124]"
    },
    {
      "src": "function: function [24855,24863]",
      "dest": "function: function [24855,24863]"
    },
    {
      "src": "==: == [14120,14122]",
      "dest": "==: == [14120,14122]"
    },
    {
      "src": "identifier: a [14851,14852]",
      "dest": "identifier: a [14851,14852]"
    },
    {
      "src": "identifier: maxBurnAmount [37284,37297]",
      "dest": "identifier: maxBurnAmount [37284,37297]"
    },
    {
      "src": "function: function [13815,13823]",
      "dest": "function: function [13815,13823]"
    },
    {
      "src": "identifier: minAmount [35047,35056]",
      "dest": "identifier: minAmount [35047,35056]"
    },
    {
      "src": "comment: // bool private _initialized; [4281,4310]",
      "dest": "comment: // bool private _initialized; [4281,4310]"
    },
    {
      "src": "identifier: account [31035,31042]",
      "dest": "identifier: account [31035,31042]"
    },
    {
      "src": "(: ( [31943,31944]",
      "dest": "(: ( [31943,31944]"
    },
    {
      "src": "=: = [5473,5474]",
      "dest": "=: = [5473,5474]"
    },
    {
      "src": "return_type_definition [22123,22145]",
      "dest": "return_type_definition [22123,22145]"
    },
    {
      "src": "call_argument [36417,36470]",
      "dest": "call_argument [36417,36470]"
    },
    {
      "src": "else: else [22903,22907]",
      "dest": "else: else [22903,22907]"
    },
    {
      "src": "public: public [24871,24877]",
      "dest": "public: public [24871,24877]"
    },
    {
      "src": "boolean_literal [27677,27681]",
      "dest": "boolean_literal [27677,27681]"
    },
    {
      "src": "virtual: virtual [31069,31076]",
      "dest": "virtual: virtual [31069,31076]"
    },
    {
      "src": "address: address [19154,19161]",
      "dest": "address: address [19154,19161]"
    },
    {
      "src": "call_argument [31332,31339]",
      "dest": "call_argument [31332,31339]"
    },
    {
      "src": "function_definition [8198,8253]",
      "dest": "function_definition [8198,8253]"
    },
    {
      "src": "identifier: b [14794,14795]",
      "dest": "identifier: b [14794,14795]"
    },
    {
      "src": "identifier: data [22363,22367]",
      "dest": "identifier: data [22363,22367]"
    },
    {
      "src": "string_literal [30471,30504]",
      "dest": "string_literal [30471,30504]"
    },
    {
      "src": "{: { [14829,14830]",
      "dest": "{: { [14829,14830]"
    },
    {
      "src": "): ) [28281,28282]",
      "dest": "): ) [28281,28282]"
    },
    {
      "src": "call_argument [31965,32003]",
      "dest": "call_argument [31965,32003]"
    },
    {
      "src": "string [7452,7486]",
      "dest": "string [7452,7486]"
    },
    {
      "src": "(: ( [13013,13014]",
      "dest": "(: ( [13013,13014]"
    },
    {
      "src": ",: , [22183,22184]",
      "dest": ",: , [22183,22184]"
    },
    {
      "src": "comment: // Look for revert reason and bubble it up if present [22457,22510]",
      "dest": "comment: // Look for revert reason and bubble it up if present [22457,22510]"
    },
    {
      "src": "): ) [7233,7234]",
      "dest": "): ) [7233,7234]"
    },
    {
      "src": "uint8: uint8 [25596,25601]",
      "dest": "uint8: uint8 [25596,25601]"
    },
    {
      "src": "memory: memory [20734,20740]",
      "dest": "memory: memory [20734,20740]"
    },
    {
      "src": "(: ( [21294,21295]",
      "dest": "(: ( [21294,21295]"
    },
    {
      "src": "=: = [31187,31188]",
      "dest": "=: = [31187,31188]"
    },
    {
      "src": "identifier: amount [31894,31900]",
      "dest": "identifier: amount [31894,31900]"
    },
    {
      "src": "public: public [35596,35602]",
      "dest": "public: public [35596,35602]"
    },
    {
      "src": "parameter [13399,13425]",
      "dest": "parameter [13399,13425]"
    },
    {
      "src": "uint256: uint256 [28142,28149]",
      "dest": "uint256: uint256 [28142,28149]"
    },
    {
      "src": "comment: /// @dev Returns true if and only if the function is running in the constructor [4957,5036]",
      "dest": "comment: /// @dev Returns true if and only if the function is running in the constructor [4957,5036]"
    },
    {
      "src": "\": \" [38146,38147]",
      "dest": "\": \" [38147,38148]"
    },
    {
      "src": "primitive_type [8656,8663]",
      "dest": "primitive_type [8656,8663]"
    },
    {
      "src": "(: ( [35653,35654]",
      "dest": "(: ( [35653,35654]"
    },
    {
      "src": "expression_statement [4817,4837]",
      "dest": "expression_statement [4817,4837]"
    },
    {
      "src": "call_argument [13020,13052]",
      "dest": "call_argument [13020,13052]"
    },
    {
      "src": "identifier: errorMessage [13486,13498]",
      "dest": "identifier: errorMessage [13486,13498]"
    },
    {
      "src": "(: ( [11334,11335]",
      "dest": "(: ( [11334,11335]"
    },
    {
      "src": "primitive_type [36216,36223]",
      "dest": "primitive_type [36216,36223]"
    },
    {
      "src": "}: } [22962,22963]",
      "dest": "}: } [22962,22963]"
    },
    {
      "src": "}: } [18125,18126]",
      "dest": "}: } [18125,18126]"
    },
    {
      "src": "virtual: virtual [24878,24885]",
      "dest": "virtual: virtual [24878,24885]"
    },
    {
      "src": "call_expression [35996,36050]",
      "dest": "call_expression [35996,36050]"
    },
    {
      "src": "comment: // Dependency file: contracts/true-gold/interface/IOwnable.sol [5676,5738]",
      "dest": "comment: // Dependency file: contracts/true-gold/interface/IOwnable.sol [5676,5738]"
    },
    {
      "src": "function_body [30429,30680]",
      "dest": "function_body [30429,30680]"
    },
    {
      "src": "(: ( [22362,22363]",
      "dest": "(: ( [22362,22363]"
    },
    {
      "src": "identifier: amount [36503,36509]",
      "dest": "identifier: amount [36503,36509]"
    },
    {
      "src": "private: private [22115,22122]",
      "dest": "private: private [22115,22122]"
    },
    {
      "src": "visibility [31908,31916]",
      "dest": "visibility [31908,31916]"
    },
    {
      "src": "): ) [37427,37428]",
      "dest": "): ) [37427,37428]"
    },
    {
      "src": "primitive_type [1676,1680]",
      "dest": "primitive_type [1676,1680]"
    },
    {
      "src": "identifier: onlyOwner [11280,11289]",
      "dest": "identifier: onlyOwner [11280,11289]"
    },
    {
      "src": "primitive_type [22069,22076]",
      "dest": "primitive_type [22069,22076]"
    },
    {
      "src": "call_argument [31349,31350]",
      "dest": "call_argument [31349,31350]"
    },
    {
      "src": "internal: internal [17741,17749]",
      "dest": "internal: internal [17741,17749]"
    },
    {
      "src": "type_name [8656,8663]",
      "dest": "type_name [8656,8663]"
    },
    {
      "src": "array_access [29887,29904]",
      "dest": "array_access [29887,29904]"
    },
    {
      "src": "address: address [9018,9025]",
      "dest": "address: address [9018,9025]"
    },
    {
      "src": "uint256: uint256 [12949,12956]",
      "dest": "uint256: uint256 [12949,12956]"
    },
    {
      "src": "(: ( [9821,9822]",
      "dest": "(: ( [9821,9822]"
    },
    {
      "src": "): ) [16166,16167]",
      "dest": "): ) [16166,16167]"
    },
    {
      "src": "identifier: amount [36241,36247]",
      "dest": "identifier: amount [36241,36247]"
    },
    {
      "src": "member_expression [19329,19343]",
      "dest": "member_expression [19329,19343]"
    },
    {
      "src": ",: , [37661,37662]",
      "dest": ",: , [37662,37663]"
    },
    {
      "src": "library_declaration [17091,22984]",
      "dest": "library_declaration [17091,22984]"
    },
    {
      "src": "identifier: sender [36023,36029]",
      "dest": "identifier: sender [36023,36029]"
    },
    {
      "src": "state_variable_declaration [1764,1802]",
      "dest": "state_variable_declaration [1764,1802]"
    },
    {
      "src": "visibility [37536,37542]",
      "dest": "visibility [37536,37542]"
    },
    {
      "src": "state_variable_declaration [33864,33917]",
      "dest": "state_variable_declaration [33864,33917]"
    },
    {
      "src": "visibility [14797,14805]",
      "dest": "visibility [14797,14805]"
    },
    {
      "src": "string_literal [29816,29853]",
      "dest": "string_literal [29816,29853]"
    },
    {
      "src": "type_name [21805,21810]",
      "dest": "type_name [21805,21810]"
    },
    {
      "src": "pragma_directive [36614,36637]",
      "dest": "pragma_directive [36614,36637]"
    },
    {
      "src": "uint256: uint256 [1783,1790]",
      "dest": "uint256: uint256 [1783,1790]"
    },
    {
      "src": "[: [ [32107,32108]",
      "dest": "[: [ [32107,32108]"
    },
    {
      "src": "return_type_definition [9064,9081]",
      "dest": "return_type_definition [9064,9081]"
    },
    {
      "src": ".: . [28937,28938]",
      "dest": ".: . [28937,28938]"
    },
    {
      "src": "}: } [36163,36164]",
      "dest": "}: } [36163,36164]"
    },
    {
      "src": "string_literal [35071,35118]",
      "dest": "string_literal [35071,35118]"
    },
    {
      "src": "call_argument [36042,36048]",
      "dest": "call_argument [36042,36048]"
    },
    {
      "src": "contract_body [32603,33428]",
      "dest": "contract_body [32603,33428]"
    },
    {
      "src": "return: return [20320,20326]",
      "dest": "return: return [20320,20326]"
    },
    {
      "src": ".: . [11324,11325]",
      "dest": ".: . [11324,11325]"
    },
    {
      "src": "identifier: amount [32792,32798]",
      "dest": "identifier: amount [32792,32798]"
    },
    {
      "src": "primitive_type [9073,9080]",
      "dest": "primitive_type [9073,9080]"
    },
    {
      "src": "address: address [20244,20251]",
      "dest": "address: address [20244,20251]"
    },
    {
      "src": "yul_identifier [22766,22781]",
      "dest": "yul_identifier [22766,22781]"
    },
    {
      "src": "identifier: b [12493,12494]",
      "dest": "identifier: b [12493,12494]"
    },
    {
      "src": "(: ( [22175,22176]",
      "dest": "(: ( [22175,22176]"
    },
    {
      "src": "identifier: _approve [28925,28933]",
      "dest": "identifier: _approve [28925,28933]"
    },
    {
      "src": "(: ( [35771,35772]",
      "dest": "(: ( [35771,35772]"
    },
    {
      "src": "(: ( [33143,33144]",
      "dest": "(: ( [33143,33144]"
    },
    {
      "src": "parameter [27478,27482]",
      "dest": "parameter [27478,27482]"
    },
    {
      "src": "function: function [35543,35551]",
      "dest": "function: function [35543,35551]"
    },
    {
      "src": "member_expression [19154,19175]",
      "dest": "member_expression [19154,19175]"
    },
    {
      "src": "expression_statement [12567,12614]",
      "dest": "expression_statement [12567,12614]"
    },
    {
      "src": "parameter [16157,16166]",
      "dest": "parameter [16157,16166]"
    },
    {
      "src": "): ) [33383,33384]",
      "dest": "): ) [33383,33384]"
    },
    {
      "src": "uint256: uint256 [34053,34060]",
      "dest": "uint256: uint256 [34053,34060]"
    },
    {
      "src": "{: { [12215,12216]",
      "dest": "{: { [12215,12216]"
    },
    {
      "src": "parameter [25850,25865]",
      "dest": "parameter [25850,25865]"
    },
    {
      "src": "address: address [10435,10442]",
      "dest": "address: address [10435,10442]"
    },
    {
      "src": "identifier: burn [32727,32731]",
      "dest": "identifier: burn [32727,32731]"
    },
    {
      "src": "return: return [37592,37598]",
      "dest": "return: return [37592,37598]"
    },
    {
      "src": "type_name [10203,10210]",
      "dest": "type_name [10203,10210]"
    },
    {
      "src": ",: , [12947,12948]",
      "dest": ",: , [12947,12948]"
    },
    {
      "src": "\": \" [16228,16229]",
      "dest": "\": \" [16228,16229]"
    },
    {
      "src": "return_type_definition [8700,8714]",
      "dest": "return_type_definition [8700,8714]"
    },
    {
      "src": "is: is [4177,4179]",
      "dest": "is: is [4177,4179]"
    },
    {
      "src": "string: string [22087,22093]",
      "dest": "string: string [22087,22093]"
    },
    {
      "src": "array_access [30589,30607]",
      "dest": "array_access [30589,30607]"
    },
    {
      "src": "uint256: uint256 [12938,12945]",
      "dest": "uint256: uint256 [12938,12945]"
    },
    {
      "src": "visibility [8691,8699]",
      "dest": "visibility [8691,8699]"
    },
    {
      "src": "/: / [14211,14212]",
      "dest": "/: / [14211,14212]"
    },
    {
      "src": "primitive_type [35924,35931]",
      "dest": "primitive_type [35924,35931]"
    },
    {
      "src": "string [37492,37502]",
      "dest": "string [37492,37502]"
    },
    {
      "src": "call_argument [19383,19390]",
      "dest": "call_argument [19383,19390]"
    },
    {
      "src": "string_literal [29917,29957]",
      "dest": "string_literal [29917,29957]"
    },
    {
      "src": "identifier: sub [33263,33266]",
      "dest": "identifier: sub [33263,33266]"
    },
    {
      "src": "if_statement [4747,4848]",
      "dest": "if_statement [4747,4848]"
    },
    {
      "src": "visibility [26450,26456]",
      "dest": "visibility [26450,26456]"
    },
    {
      "src": "identifier: balanceOf [8350,8359]",
      "dest": "identifier: balanceOf [8350,8359]"
    },
    {
      "src": "{: { [22739,22740]",
      "dest": "{: { [22739,22740]"
    },
    {
      "src": "[: [ [31198,31199]",
      "dest": "[: [ [31198,31199]"
    },
    {
      "src": "block_statement [36113,36164]",
      "dest": "block_statement [36113,36164]"
    },
    {
      "src": ",: , [21742,21743]",
      "dest": ",: , [21742,21743]"
    },
    {
      "src": "type_name [19110,19117]",
      "dest": "type_name [19110,19117]"
    },
    {
      "src": "): ) [30653,30654]",
      "dest": "): ) [30653,30654]"
    },
    {
      "src": "variable_declaration_statement [22290,22369]",
      "dest": "variable_declaration_statement [22290,22369]"
    },
    {
      "src": "binary_expression [32023,32044]",
      "dest": "binary_expression [32023,32044]"
    },
    {
      "src": "): ) [26784,26785]",
      "dest": "): ) [26784,26785]"
    },
    {
      "src": "identifier: REDEMPTION_ADDRESS_COUNT [33881,33905]",
      "dest": "identifier: REDEMPTION_ADDRESS_COUNT [33881,33905]"
    },
    {
      "src": "identifier: amount [30404,30410]",
      "dest": "identifier: amount [30404,30410]"
    },
    {
      "src": "function_definition [34942,35252]",
      "dest": "function_definition [34942,35252]"
    },
    {
      "src": "{: { [17770,17771]",
      "dest": "{: { [17770,17771]"
    },
    {
      "src": "yul_variable_declaration [22762,22802]",
      "dest": "yul_variable_declaration [22762,22802]"
    },
    {
      "src": ",: , [28231,28232]",
      "dest": ",: , [28231,28232]"
    },
    {
      "src": "call_argument [30550,30556]",
      "dest": "call_argument [30550,30556]"
    },
    {
      "src": "comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [24923,25028]",
      "dest": "comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [24923,25028]"
    },
    {
      "src": "primitive_type [1965,1972]",
      "dest": "primitive_type [1965,1972]"
    },
    {
      "src": "parameter [5089,5093]",
      "dest": "parameter [5089,5093]"
    },
    {
      "src": "visibility [22115,22122]",
      "dest": "visibility [22115,22122]"
    },
    {
      "src": "yul_assignment [18063,18091]",
      "dest": "yul_assignment [18063,18091]"
    },
    {
      "src": "type_name [35979,35983]",
      "dest": "type_name [35979,35983]"
    },
    {
      "src": "parameter [31860,31875]",
      "dest": "parameter [31860,31875]"
    },
    {
      "src": "(: ( [22790,22791]",
      "dest": "(: ( [22790,22791]"
    },
    {
      "src": "identifier: minAmount [37727,37736]",
      "dest": "identifier: minAmount [37728,37737]"
    },
    {
      "src": "comment: // uint256 private _totalSupply; [24753,24785]",
      "dest": "comment: // uint256 private _totalSupply; [24753,24785]"
    },
    {
      "src": "type_name [24602,24609]",
      "dest": "type_name [24602,24609]"
    },
    {
      "src": "primitive_type [14173,14180]",
      "dest": "primitive_type [14173,14180]"
    },
    {
      "src": ",: , [16226,16227]",
      "dest": ",: , [16226,16227]"
    },
    {
      "src": "yul_function_call [22831,22850]",
      "dest": "yul_function_call [22831,22850]"
    },
    {
      "src": "string_literal [29732,29771]",
      "dest": "string_literal [29732,29771]"
    },
    {
      "src": "bytes: bytes [22305,22310]",
      "dest": "bytes: bytes [22305,22310]"
    },
    {
      "src": "): ) [25094,25095]",
      "dest": "): ) [25094,25095]"
    },
    {
      "src": "{: { [22551,22552]",
      "dest": "{: { [22551,22552]"
    },
    {
      "src": "parameter [13873,13880]",
      "dest": "parameter [13873,13880]"
    },
    {
      "src": "!=: != [29717,29719]",
      "dest": "!=: != [29717,29719]"
    },
    {
      "src": "identifier: account [36224,36231]",
      "dest": "identifier: account [36224,36231]"
    },
    {
      "src": "call_argument [13486,13498]",
      "dest": "call_argument [13486,13498]"
    },
    {
      "src": "(: ( [25080,25081]",
      "dest": "(: ( [25080,25081]"
    },
    {
      "src": "call_expression [36004,36049]",
      "dest": "call_expression [36004,36049]"
    },
    {
      "src": "address: address [8656,8663]",
      "dest": "address: address [8656,8663]"
    },
    {
      "src": "visibility [19126,19134]",
      "dest": "visibility [19126,19134]"
    },
    {
      "src": "return_type_definition [26240,26254]",
      "dest": "return_type_definition [26240,26254]"
    },
    {
      "src": "identifier: account [38225,38232]",
      "dest": "identifier: account [38226,38233]"
    },
    {
      "src": "function: function [8198,8206]",
      "dest": "function: function [8198,8206]"
    },
    {
      "src": ",: , [11259,11260]",
      "dest": ",: , [11259,11260]"
    },
    {
      "src": "call_argument [19187,19218]",
      "dest": "call_argument [19187,19218]"
    },
    {
      "src": "): ) [7705,7706]",
      "dest": "): ) [7705,7706]"
    },
    {
      "src": "number_literal: 0 [16867,16868]",
      "dest": "number_literal: 0 [16867,16868]"
    },
    {
      "src": "): ) [9080,9081]",
      "dest": "): ) [9080,9081]"
    },
    {
      "src": "string_literal [21870,21910]",
      "dest": "string_literal [21870,21910]"
    },
    {
      "src": "bool: bool [35629,35633]",
      "dest": "bool: bool [35629,35633]"
    },
    {
      "src": "}: } [25767,25768]",
      "dest": "}: } [25767,25768]"
    },
    {
      "src": "if: if [36061,36063]",
      "dest": "if: if [36061,36063]"
    },
    {
      "src": "parameter [7689,7705]",
      "dest": "parameter [7689,7705]"
    },
    {
      "src": "primitive_type [33203,33210]",
      "dest": "primitive_type [33203,33210]"
    },
    {
      "src": "identifier: initializer [7027,7038]",
      "dest": "identifier: initializer [7027,7038]"
    },
    {
      "src": "identifier: b [16862,16863]",
      "dest": "identifier: b [16862,16863]"
    },
    {
      "src": "primitive_type [26731,26738]",
      "dest": "primitive_type [26731,26738]"
    },
    {
      "src": "parameter [10168,10182]",
      "dest": "parameter [10168,10182]"
    },
    {
      "src": "\": \" [14857,14858]",
      "dest": "\": \" [14857,14858]"
    },
    {
      "src": "true [28300,28304]",
      "dest": "true [28300,28304]"
    },
    {
      "src": "): ) [15523,15524]",
      "dest": "): ) [15523,15524]"
    },
    {
      "src": "string [19361,19363]",
      "dest": "string [19361,19363]"
    },
    {
      "src": "type_name [8400,8407]",
      "dest": "type_name [8400,8407]"
    },
    {
      "src": "comment: // pragma solidity 0.6.10; [3430,3456]",
      "dest": "comment: // pragma solidity 0.6.10; [3430,3456]"
    },
    {
      "src": ",: , [37984,37985]",
      "dest": ",: , [37985,37986]"
    },
    {
      "src": "primitive_type [14820,14827]",
      "dest": "primitive_type [14820,14827]"
    },
    {
      "src": "expression_statement [28925,29051]",
      "dest": "expression_statement [28925,29051]"
    },
    {
      "src": "is: is [6655,6657]",
      "dest": "is: is [6655,6657]"
    },
    {
      "src": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [11621,12196]",
      "dest": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [11621,12196]"
    },
    {
      "src": "{: { [31925,31926]",
      "dest": "{: { [31925,31926]"
    },
    {
      "src": "function_definition [37314,37405]",
      "dest": "function_definition [37314,37405]"
    },
    {
      "src": "(: ( [17723,17724]",
      "dest": "(: ( [17723,17724]"
    },
    {
      "src": "parameter [20647,20661]",
      "dest": "parameter [20647,20661]"
    },
    {
      "src": ",: , [21355,21356]",
      "dest": ",: , [21355,21356]"
    },
    {
      "src": "(: ( [1771,1772]",
      "dest": "(: ( [1771,1772]"
    },
    {
      "src": "identifier: amount [36391,36397]",
      "dest": "identifier: amount [36391,36397]"
    },
    {
      "src": "primitive_type [1772,1779]",
      "dest": "primitive_type [1772,1779]"
    },
    {
      "src": "]: ] [27589,27590]",
      "dest": "]: ] [27589,27590]"
    },
    {
      "src": "parameter [38027,38042]",
      "dest": "parameter [38028,38043]"
    },
    {
      "src": "\": \" [35117,35118]",
      "dest": "\": \" [35117,35118]"
    },
    {
      "src": "address: address [29599,29606]",
      "dest": "address: address [29599,29606]"
    },
    {
      "src": "uint256: uint256 [35703,35710]",
      "dest": "uint256: uint256 [35703,35710]"
    },
    {
      "src": "): ) [38201,38202]",
      "dest": "): ) [38202,38203]"
    },
    {
      "src": "primitive_type [19154,19161]",
      "dest": "primitive_type [19154,19161]"
    },
    {
      "src": ".: . [28987,28988]",
      "dest": ".: . [28987,28988]"
    },
    {
      "src": "): ) [27443,27444]",
      "dest": "): ) [27443,27444]"
    },
    {
      "src": "call_argument [20797,20798]",
      "dest": "call_argument [20797,20798]"
    },
    {
      "src": "\": \" [12611,12612]",
      "dest": "\": \" [12611,12612]"
    },
    {
      "src": "identifier: target [22332,22338]",
      "dest": "identifier: target [22332,22338]"
    },
    {
      "src": "parameter [37118,37139]",
      "dest": "parameter [37118,37139]"
    },
    {
      "src": "library: library [12198,12205]",
      "dest": "library: library [12198,12205]"
    },
    {
      "src": "\": \" [16253,16254]",
      "dest": "\": \" [16253,16254]"
    },
    {
      "src": ",: , [37282,37283]",
      "dest": ",: , [37282,37283]"
    },
    {
      "src": "): ) [5841,5842]",
      "dest": "): ) [5841,5842]"
    },
    {
      "src": "primitive_type [30644,30651]",
      "dest": "primitive_type [30644,30651]"
    },
    {
      "src": ",: , [36538,36539]",
      "dest": ",: , [36538,36539]"
    },
    {
      "src": "array_access [28955,28978]",
      "dest": "array_access [28955,28978]"
    },
    {
      "src": "): ) [31306,31307]",
      "dest": "): ) [31306,31307]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [9836,10140]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [9836,10140]"
    },
    {
      "src": ",: , [16868,16869]",
      "dest": ",: , [16868,16869]"
    },
    {
      "src": "identifier: maxAmount [37845,37854]",
      "dest": "identifier: maxAmount [37846,37855]"
    },
    {
      "src": "identifier: super [38213,38218]",
      "dest": "identifier: super [38214,38219]"
    },
    {
      "src": "identifier: name [24864,24868]",
      "dest": "identifier: name [24864,24868]"
    },
    {
      "src": "call_expression [38097,38202]",
      "dest": "call_expression [38098,38203]"
    },
    {
      "src": "number_literal: 0 [14123,14124]",
      "dest": "number_literal: 0 [14123,14124]"
    },
    {
      "src": "(: ( [28269,28270]",
      "dest": "(: ( [28269,28270]"
    },
    {
      "src": "): ) [31906,31907]",
      "dest": "): ) [31906,31907]"
    },
    {
      "src": "state_variable_declaration [1652,1670]",
      "dest": "state_variable_declaration [1652,1670]"
    },
    {
      "src": "(: ( [26779,26780]",
      "dest": "(: ( [26779,26780]"
    },
    {
      "src": "member_expression [28212,28222]",
      "dest": "member_expression [28212,28222]"
    },
    {
      "src": "function_body [28192,28312]",
      "dest": "function_body [28192,28312]"
    },
    {
      "src": "): ) [7824,7825]",
      "dest": "): ) [7824,7825]"
    },
    {
      "src": "type_name [31027,31034]",
      "dest": "type_name [31027,31034]"
    },
    {
      "src": "variable_declaration_statement [17972,17985]",
      "dest": "variable_declaration_statement [17972,17985]"
    },
    {
      "src": "primitive_type [5475,5482]",
      "dest": "primitive_type [5475,5482]"
    },
    {
      "src": "primitive_type [31044,31051]",
      "dest": "primitive_type [31044,31051]"
    },
    {
      "src": "return_type_definition [34362,34379]",
      "dest": "return_type_definition [34362,34379]"
    },
    {
      "src": "type_name [37141,37148]",
      "dest": "type_name [37141,37148]"
    },
    {
      "src": "function: function [5042,5050]",
      "dest": "function: function [5042,5050]"
    },
    {
      "src": "}: } [37305,37306]",
      "dest": "}: } [37305,37306]"
    },
    {
      "src": "string [30471,30504]",
      "dest": "string [30471,30504]"
    },
    {
      "src": "=: = [30531,30532]",
      "dest": "=: = [30531,30532]"
    },
    {
      "src": "modifier_invocation [11453,11462]",
      "dest": "modifier_invocation [11453,11462]"
    },
    {
      "src": "type_name [16834,16841]",
      "dest": "type_name [16834,16841]"
    },
    {
      "src": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [13564,13809]",
      "dest": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [13564,13809]"
    },
    {
      "src": "identifier: _owner [1731,1737]",
      "dest": "identifier: _owner [1731,1737]"
    },
    {
      "src": "member_expression [22528,22545]",
      "dest": "member_expression [22528,22545]"
    },
    {
      "src": "identifier: account [33242,33249]",
      "dest": "identifier: account [33242,33249]"
    },
    {
      "src": "identifier: require [37837,37844]",
      "dest": "identifier: require [37838,37845]"
    },
    {
      "src": "primitive_type [17724,17731]",
      "dest": "primitive_type [17724,17731]"
    },
    {
      "src": "primitive_type [10457,10464]",
      "dest": "primitive_type [10457,10464]"
    },
    {
      "src": "(: ( [11186,11187]",
      "dest": "(: ( [11186,11187]"
    },
    {
      "src": ",: , [27511,27512]",
      "dest": ",: , [27511,27512]"
    },
    {
      "src": "virtual: virtual [27452,27459]",
      "dest": "virtual: virtual [27452,27459]"
    },
    {
      "src": "if_statement [35699,35802]",
      "dest": "if_statement [35699,35802]"
    },
    {
      "src": "(: ( [10671,10672]",
      "dest": "(: ( [10671,10672]"
    },
    {
      "src": "function_body [21819,21994]",
      "dest": "function_body [21819,21994]"
    },
    {
      "src": "\": \" [37492,37493]",
      "dest": "\": \" [37492,37493]"
    },
    {
      "src": "identifier: setBurnBounds [37630,37643]",
      "dest": "identifier: setBurnBounds [37631,37644]"
    },
    {
      "src": "binary_expression [29710,29730]",
      "dest": "binary_expression [29710,29730]"
    },
    {
      "src": "primitive_type [14786,14793]",
      "dest": "primitive_type [14786,14793]"
    },
    {
      "src": "(: ( [29709,29710]",
      "dest": "(: ( [29709,29710]"
    },
    {
      "src": "identifier: _functionCallWithValue [22011,22033]",
      "dest": "identifier: _functionCallWithValue [22011,22033]"
    },
    {
      "src": "(: ( [16190,16191]",
      "dest": "(: ( [16190,16191]"
    },
    {
      "src": "identifier: Ownable [33834,33841]",
      "dest": "identifier: Ownable [33834,33841]"
    },
    {
      "src": "type_name [37644,37651]",
      "dest": "type_name [37645,37652]"
    },
    {
      "src": "=: = [30587,30588]",
      "dest": "=: = [30587,30588]"
    },
    {
      "src": "string [4638,4686]",
      "dest": "string [4638,4686]"
    },
    {
      "src": "primitive_type [10672,10679]",
      "dest": "primitive_type [10672,10679]"
    },
    {
      "src": "identifier: transfer [8647,8655]",
      "dest": "identifier: transfer [8647,8655]"
    },
    {
      "src": "string [12583,12612]",
      "dest": "string [12583,12612]"
    },
    {
      "src": "type_name [24900,24906]",
      "dest": "type_name [24900,24906]"
    },
    {
      "src": "string_literal [16228,16254]",
      "dest": "string_literal [16228,16254]"
    },
    {
      "src": "primitive_type [29652,29659]",
      "dest": "primitive_type [29652,29659]"
    },
    {
      "src": "): ) [29853,29854]",
      "dest": "): ) [29853,29854]"
    },
    {
      "src": "return_statement [28293,28305]",
      "dest": "return_statement [28293,28305]"
    },
    {
      "src": "identifier: _totalSupply [30518,30530]",
      "dest": "identifier: _totalSupply [30518,30530]"
    },
    {
      "src": "type_cast_expression [35703,35721]",
      "dest": "type_cast_expression [35703,35721]"
    },
    {
      "src": "identifier: self [5468,5472]",
      "dest": "identifier: self [5468,5472]"
    },
    {
      "src": "\": \" [7784,7785]",
      "dest": "\": \" [7784,7785]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/ProxyStorage.sol\"; [10949,11005]",
      "dest": "comment: // import \"contracts/true-gold/common/ProxyStorage.sol\"; [10949,11005]"
    },
    {
      "src": "parameter [21295,21307]",
      "dest": "parameter [21295,21307]"
    },
    {
      "src": "view: view [5075,5079]",
      "dest": "view: view [5075,5079]"
    },
    {
      "src": "bytes: bytes [21243,21248]",
      "dest": "bytes: bytes [21243,21248]"
    },
    {
      "src": "returns: returns [16182,16189]",
      "dest": "returns: returns [16182,16189]"
    },
    {
      "src": "comment: // (this will not be done under normal operation, but we can't add checks to disallow it without losing a lot of [34644,34756]",
      "dest": "comment: // (this will not be done under normal operation, but we can't add checks to disallow it without losing a lot of [34644,34756]"
    },
    {
      "src": "\": \" [37599,37600]",
      "dest": "\": \" [37599,37600]"
    },
    {
      "src": ",: , [30055,30056]",
      "dest": ",: , [30055,30056]"
    },
    {
      "src": "uint256: uint256 [35291,35298]",
      "dest": "uint256: uint256 [35291,35298]"
    },
    {
      "src": "type_name [20244,20251]",
      "dest": "type_name [20244,20251]"
    },
    {
      "src": ",: , [31849,31850]",
      "dest": ",: , [31849,31850]"
    },
    {
      "src": "primitive_type [21227,21234]",
      "dest": "primitive_type [21227,21234]"
    },
    {
      "src": "identifier: spender [28257,28264]",
      "dest": "identifier: spender [28257,28264]"
    },
    {
      "src": "): ) [35489,35490]",
      "dest": "): ) [35489,35490]"
    },
    {
      "src": "call_argument [20340,20346]",
      "dest": "call_argument [20340,20346]"
    },
    {
      "src": "member_expression [11474,11499]",
      "dest": "member_expression [11474,11499]"
    },
    {
      "src": "state_mutability [13859,13863]",
      "dest": "state_mutability [13859,13863]"
    },
    {
      "src": "memory: memory [37466,37472]",
      "dest": "memory: memory [37466,37472]"
    },
    {
      "src": ",: , [37887,37888]",
      "dest": ",: , [37888,37889]"
    },
    {
      "src": "parameter [11428,11444]",
      "dest": "parameter [11428,11444]"
    },
    {
      "src": "{: { [16843,16844]",
      "dest": "{: { [16843,16844]"
    },
    {
      "src": "primitive_type [29804,29811]",
      "dest": "primitive_type [29804,29811]"
    },
    {
      "src": "): ) [20740,20741]",
      "dest": "): ) [20740,20741]"
    },
    {
      "src": "(: ( [17763,17764]",
      "dest": "(: ( [17763,17764]"
    },
    {
      "src": "type_name [33988,33995]",
      "dest": "type_name [33988,33995]"
    },
    {
      "src": "identifier: amount [36540,36546]",
      "dest": "identifier: amount [36540,36546]"
    },
    {
      "src": "type_name [10720,10727]",
      "dest": "type_name [10720,10727]"
    },
    {
      "src": "{: { [22908,22909]",
      "dest": "{: { [22908,22909]"
    },
    {
      "src": "identifier: approve [26706,26713]",
      "dest": "identifier: approve [26706,26713]"
    },
    {
      "src": "identifier: _approve [27542,27550]",
      "dest": "identifier: _approve [27542,27550]"
    },
    {
      "src": ",: , [22303,22304]",
      "dest": ",: , [22303,22304]"
    },
    {
      "src": "call_argument [35511,35518]",
      "dest": "call_argument [35511,35518]"
    },
    {
      "src": "): ) [15483,15484]",
      "dest": "): ) [15483,15484]"
    },
    {
      "src": "variable_declaration [14173,14182]",
      "dest": "variable_declaration [14173,14182]"
    },
    {
      "src": "(: ( [19310,19311]",
      "dest": "(: ( [19310,19311]"
    },
    {
      "src": "identifier: decreasedAllowance [33365,33383]",
      "dest": "identifier: decreasedAllowance [33365,33383]"
    },
    {
      "src": "unary_expression [4722,4736]",
      "dest": "unary_expression [4722,4736]"
    },
    {
      "src": "call_argument [36031,36040]",
      "dest": "call_argument [36031,36040]"
    },
    {
      "src": "expression_statement [37231,37299]",
      "dest": "expression_statement [37231,37299]"
    },
    {
      "src": "function: function [37621,37629]",
      "dest": "function: function [37622,37630]"
    },
    {
      "src": "]: ] [30585,30586]",
      "dest": "]: ] [30585,30586]"
    },
    {
      "src": ",: , [36029,36030]",
      "dest": ",: , [36029,36030]"
    },
    {
      "src": "(: ( [38104,38105]",
      "dest": "(: ( [38105,38106]"
    },
    {
      "src": "type_name [5825,5832]",
      "dest": "type_name [5825,5832]"
    },
    {
      "src": "returns: returns [24891,24898]",
      "dest": "returns: returns [24891,24898]"
    },
    {
      "src": "function_body [25906,25950]",
      "dest": "function_body [25906,25950]"
    },
    {
      "src": "type_name [34194,34201]",
      "dest": "type_name [34194,34201]"
    },
    {
      "src": "modifier_definition [7390,7507]",
      "dest": "modifier_definition [7390,7507]"
    },
    {
      "src": ":: : [19350,19351]",
      "dest": ":: : [19350,19351]"
    },
    {
      "src": "type_name [16783,16789]",
      "dest": "type_name [16783,16789]"
    },
    {
      "src": "member_expression [27571,27606]",
      "dest": "member_expression [27571,27606]"
    },
    {
      "src": "identifier: maxAmount [35184,35193]",
      "dest": "identifier: maxAmount [35184,35193]"
    },
    {
      "src": "call_argument [21838,21868]",
      "dest": "call_argument [21838,21868]"
    },
    {
      "src": "type_name [4700,4704]",
      "dest": "type_name [4700,4704]"
    },
    {
      "src": "primitive_type [28908,28912]",
      "dest": "primitive_type [28908,28912]"
    },
    {
      "src": "type_name [27395,27402]",
      "dest": "type_name [27395,27402]"
    },
    {
      "src": "(: ( [35702,35703]",
      "dest": "(: ( [35702,35703]"
    },
    {
      "src": "inheritance_specifier [33834,33841]",
      "dest": "inheritance_specifier [33834,33841]"
    },
    {
      "src": "type_cast_expression [36065,36083]",
      "dest": "type_cast_expression [36065,36083]"
    },
    {
      "src": "identifier: a [12551,12552]",
      "dest": "identifier: a [12551,12552]"
    },
    {
      "src": "modifier_invocation [37698,37707]",
      "dest": "modifier_invocation [37699,37708]"
    },
    {
      "src": "return: return [14840,14846]",
      "dest": "return: return [14840,14846]"
    },
    {
      "src": "identifier: account [36494,36501]",
      "dest": "identifier: account [36494,36501]"
    },
    {
      "src": "}: } [11216,11217]",
      "dest": "}: } [11216,11217]"
    },
    {
      "src": "emit: emit [36521,36525]",
      "dest": "emit: emit [36521,36525]"
    },
    {
      "src": "call_argument [20783,20789]",
      "dest": "call_argument [20783,20789]"
    },
    {
      "src": "}: } [31367,31368]",
      "dest": "}: } [31367,31368]"
    },
    {
      "src": "{: { [29691,29692]",
      "dest": "{: { [29691,29692]"
    },
    {
      "src": "comment: // This method relies in extcodesize, which returns 0 for contracts in [17781,17851]",
      "dest": "comment: // This method relies in extcodesize, which returns 0 for contracts in [17781,17851]"
    },
    {
      "src": "string [19187,19218]",
      "dest": "string [19187,19218]"
    },
    {
      "src": "function_definition [22002,22981]",
      "dest": "function_definition [22002,22981]"
    },
    {
      "src": "uint256: uint256 [37029,37036]",
      "dest": "uint256: uint256 [37029,37036]"
    },
    {
      "src": "identifier: minBurnAmount [34202,34215]",
      "dest": "identifier: minBurnAmount [34202,34215]"
    },
    {
      "src": "identifier: account [35282,35289]",
      "dest": "identifier: account [35282,35289]"
    },
    {
      "src": "identifier: value [21752,21757]",
      "dest": "identifier: value [21752,21757]"
    },
    {
      "src": "call_argument [32780,32790]",
      "dest": "call_argument [32780,32790]"
    },
    {
      "src": "revert: revert [22824,22830]",
      "dest": "revert: revert [22824,22830]"
    },
    {
      "src": "{: { [6696,6697]",
      "dest": "{: { [6696,6697]"
    },
    {
      "src": "{: { [35985,35986]",
      "dest": "{: { [35985,35986]"
    },
    {
      "src": "identifier: minAmount [37975,37984]",
      "dest": "identifier: minAmount [37976,37985]"
    },
    {
      "src": "string [13020,13052]",
      "dest": "string [13020,13052]"
    },
    {
      "src": "call_expression [29783,29854]",
      "dest": "call_expression [29783,29854]"
    },
    {
      "src": ",: , [10201,10202]",
      "dest": ",: , [10201,10202]"
    },
    {
      "src": "(: ( [28933,28934]",
      "dest": "(: ( [28933,28934]"
    },
    {
      "src": "yul_identifier [5601,5603]",
      "dest": "yul_identifier [5601,5603]"
    },
    {
      "src": "{: { [20742,20743]",
      "dest": "{: { [20742,20743]"
    },
    {
      "src": "override: override [26231,26239]",
      "dest": "override: override [26231,26239]"
    },
    {
      "src": "(: ( [34193,34194]",
      "dest": "(: ( [34193,34194]"
    },
    {
      "src": "identifier: initializer [34249,34260]",
      "dest": "identifier: initializer [34249,34260]"
    },
    {
      "src": "function_body [11290,11395]",
      "dest": "function_body [11290,11395]"
    },
    {
      "src": "uint256: uint256 [15535,15542]",
      "dest": "uint256: uint256 [15535,15542]"
    },
    {
      "src": "call_argument [21973,21985]",
      "dest": "call_argument [21973,21985]"
    },
    {
      "src": "call_expression [30589,30619]",
      "dest": "call_expression [30589,30619]"
    },
    {
      "src": "): ) [26745,26746]",
      "dest": "): ) [26745,26746]"
    },
    {
      "src": "uint256: uint256 [34217,34224]",
      "dest": "uint256: uint256 [34217,34224]"
    },
    {
      "src": "call_argument [32046,32082]",
      "dest": "call_argument [32046,32082]"
    },
    {
      "src": "public: public [11147,11153]",
      "dest": "public: public [11147,11153]"
    },
    {
      "src": "type_name [15476,15483]",
      "dest": "type_name [15476,15483]"
    },
    {
      "src": "identifier: a [16769,16770]",
      "dest": "identifier: a [16769,16770]"
    },
    {
      "src": "call_argument [29009,29048]",
      "dest": "call_argument [29009,29048]"
    },
    {
      "src": "variable_declaration [4700,4719]",
      "dest": "variable_declaration [4700,4719]"
    },
    {
      "src": "}: } [5666,5667]",
      "dest": "}: } [5666,5667]"
    },
    {
      "src": "call_argument [33353,33363]",
      "dest": "call_argument [33353,33363]"
    },
    {
      "src": "identifier: Transfer [30040,30048]",
      "dest": "identifier: Transfer [30040,30048]"
    },
    {
      "src": "contract_body [36945,38252]",
      "dest": "contract_body [36945,38253]"
    },
    {
      "src": ",: , [29814,29815]",
      "dest": ",: , [29814,29815]"
    },
    {
      "src": "): ) [11506,11507]",
      "dest": "): ) [11506,11507]"
    },
    {
      "src": "(: ( [14850,14851]",
      "dest": "(: ( [14850,14851]"
    },
    {
      "src": "(: ( [16145,16146]",
      "dest": "(: ( [16145,16146]"
    },
    {
      "src": "identifier: b [13847,13848]",
      "dest": "identifier: b [13847,13848]"
    },
    {
      "src": "type_name [1764,1791]",
      "dest": "type_name [1764,1791]"
    },
    {
      "src": "identifier: _balances [29867,29876]",
      "dest": "identifier: _balances [29867,29876]"
    },
    {
      "src": "add: add [22831,22834]",
      "dest": "add: add [22831,22834]"
    },
    {
      "src": "function: function [16133,16141]",
      "dest": "function: function [16133,16141]"
    },
    {
      "src": "): ) [16198,16199]",
      "dest": "): ) [16198,16199]"
    },
    {
      "src": "internal: internal [20710,20718]",
      "dest": "internal: internal [20710,20718]"
    },
    {
      "src": "): ) [28912,28913]",
      "dest": "): ) [28912,28913]"
    },
    {
      "src": "uint256: uint256 [33864,33871]",
      "dest": "uint256: uint256 [33864,33871]"
    },
    {
      "src": "private: private [37037,37044]",
      "dest": "private: private [37037,37044]"
    },
    {
      "src": "identifier: Address [24590,24597]",
      "dest": "identifier: Address [24590,24597]"
    },
    {
      "src": "bytes: bytes [20297,20302]",
      "dest": "bytes: bytes [20297,20302]"
    },
    {
      "src": "(: ( [5482,5483]",
      "dest": "(: ( [5482,5483]"
    },
    {
      "src": "): ) [14885,14886]",
      "dest": "): ) [14885,14886]"
    },
    {
      "src": "return: return [26845,26851]",
      "dest": "return: return [26845,26851]"
    },
    {
      "src": "(: ( [31114,31115]",
      "dest": "(: ( [31114,31115]"
    },
    {
      "src": "}: } [20820,20821]",
      "dest": "}: } [20820,20821]"
    },
    {
      "src": "memory: memory [22094,22100]",
      "dest": "memory: memory [22094,22100]"
    },
    {
      "src": "call_expression [12567,12613]",
      "dest": "call_expression [12567,12613]"
    },
    {
      "src": "return_type_definition [27469,27483]",
      "dest": "return_type_definition [27469,27483]"
    },
    {
      "src": "(: ( [36530,36531]",
      "dest": "(: ( [36530,36531]"
    },
    {
      "src": "identifier: maxAmount [37986,37995]",
      "dest": "identifier: maxAmount [37987,37996]"
    },
    {
      "src": "): ) [34378,34379]",
      "dest": "): ) [34378,34379]"
    },
    {
      "src": ",: , [20798,20799]",
      "dest": ",: , [20798,20799]"
    },
    {
      "src": "{: { [4568,4569]",
      "dest": "{: { [4568,4569]"
    },
    {
      "src": "call_expression [31936,32004]",
      "dest": "call_expression [31936,32004]"
    },
    {
      "src": "assignment_expression [4909,4930]",
      "dest": "assignment_expression [4909,4930]"
    },
    {
      "src": "(: ( [4877,4878]",
      "dest": "(: ( [4877,4878]"
    },
    {
      "src": "string_literal [31965,32003]",
      "dest": "string_literal [31965,32003]"
    },
    {
      "src": "identifier: data [21960,21964]",
      "dest": "identifier: data [21960,21964]"
    },
    {
      "src": "contract_declaration [6638,7918]",
      "dest": "contract_declaration [6638,7918]"
    },
    {
      "src": ",: , [28222,28223]",
      "dest": ",: , [28222,28223]"
    },
    {
      "src": ",: , [29915,29916]",
      "dest": ",: , [29915,29916]"
    },
    {
      "src": "uint256: uint256 [5499,5506]",
      "dest": "uint256: uint256 [5499,5506]"
    },
    {
      "src": "): ) [25050,25051]",
      "dest": "): ) [25050,25051]"
    },
    {
      "src": "identifier: data [20348,20352]",
      "dest": "identifier: data [20348,20352]"
    },
    {
      "src": "uint256: uint256 [33161,33168]",
      "dest": "uint256: uint256 [33161,33168]"
    },
    {
      "src": "}: } [35251,35252]",
      "dest": "}: } [35251,35252]"
    },
    {
      "src": "override_specifier [37341,37349]",
      "dest": "override_specifier [37341,37349]"
    },
    {
      "src": "contract_body [1619,3356]",
      "dest": "contract_body [1619,3356]"
    },
    {
      "src": "function: function [20625,20633]",
      "dest": "function: function [20625,20633]"
    },
    {
      "src": "number_literal: 0x100000 [33908,33916]",
      "dest": "number_literal: 0x100000 [33908,33916]"
    },
    {
      "src": "call_argument [35483,35489]",
      "dest": "call_argument [35483,35489]"
    },
    {
      "src": "}: } [16262,16263]",
      "dest": "}: } [16262,16263]"
    },
    {
      "src": "function: function [27338,27346]",
      "dest": "function: function [27338,27346]"
    },
    {
      "src": "identifier: amount [32740,32746]",
      "dest": "identifier: amount [32740,32746]"
    },
    {
      "src": "{: { [20311,20312]",
      "dest": "{: { [20311,20312]"
    },
    {
      "src": "return_type_definition [37355,37370]",
      "dest": "return_type_definition [37355,37370]"
    },
    {
      "src": "comment
      "dest": "comment
    },
    {
      "src": "return_statement [12626,12635]",
      "dest": "return_statement [12626,12635]"
    },
    {
      "src": ".: . [22338,22339]",
      "dest": ".: . [22338,22339]"
    },
    {
      "src": "): ) [26253,26254]",
      "dest": "): ) [26253,26254]"
    },
    {
      "src": "variable_declaration_tuple [22290,22329]",
      "dest": "variable_declaration_tuple [22290,22329]"
    },
    {
      "src": "inheritance_specifier [33805,33817]",
      "dest": "inheritance_specifier [33805,33817]"
    },
    {
      "src": "inheritance_specifier [36911,36931]",
      "dest": "inheritance_specifier [36911,36931]"
    },
    {
      "src": "string_literal [37599,37605]",
      "dest": "string_literal [37599,37606]"
    },
    {
      "src": "uint256: uint256 [12474,12481]",
      "dest": "uint256: uint256 [12474,12481]"
    },
    {
      "src": "primitive_type [10435,10442]",
      "dest": "primitive_type [10435,10442]"
    },
    {
      "src": "return: return [13540,13546]",
      "dest": "return: return [13540,13546]"
    },
    {
      "src": "identifier: errorMessage [15511,15523]",
      "dest": "identifier: errorMessage [15511,15523]"
    },
    {
      "src": "\": \" [32081,32082]",
      "dest": "\": \" [32081,32082]"
    },
    {
      "src": "string [29732,29771]",
      "dest": "string [29732,29771]"
    },
    {
      "src": "emit: emit [7080,7084]",
      "dest": "emit: emit [7080,7084]"
    },
    {
      "src": "call_argument [16870,16882]",
      "dest": "call_argument [16870,16882]"
    },
    {
      "src": "call_expression [32774,32799]",
      "dest": "call_expression [32774,32799]"
    },
    {
      "src": "identifier: owner [9026,9031]",
      "dest": "identifier: owner [9026,9031]"
    },
    {
      "src": ".: . [28248,28249]",
      "dest": ".: . [28248,28249]"
    },
    {
      "src": "identifier: IOwnable [5782,5790]",
      "dest": "identifier: IOwnable [5782,5790]"
    },
    {
      "src": "address: address [29624,29631]",
      "dest": "address: address [29624,29631]"
    },
    {
      "src": "(: ( [35046,35047]",
      "dest": "(: ( [35046,35047]"
    },
    {
      "src": "identifier: amount [38105,38111]",
      "dest": "identifier: amount [38106,38112]"
    },
    {
      "src": "internal: internal [13850,13858]",
      "dest": "internal: internal [13850,13858]"
    },
    {
      "src": "\": \" [35455,35456]",
      "dest": "\": \" [35455,35456]"
    },
    {
      "src": "payable: payable [11135,11142]",
      "dest": "payable: payable [11135,11142]"
    },
    {
      "src": "{: { [22343,22344]",
      "dest": "{: { [22343,22344]"
    },
    {
      "src": ",: , [30469,30470]",
      "dest": ",: , [30469,30470]"
    },
    {
      "src": "primitive_type [8400,8407]",
      "dest": "primitive_type [8400,8407]"
    },
    {
      "src": "comment: // solhint-disable-next-line func-name-mixedcase [6928,6976]",
      "dest": "comment: // solhint-disable-next-line func-name-mixedcase [6928,6976]"
    },
    {
      "src": "call_argument [31300,31306]",
      "dest": "call_argument [31300,31306]"
    },
    {
      "src": "identifier: amount [33267,33273]",
      "dest": "identifier: amount [33267,33273]"
    },
    {
      "src": "type_name [19083,19098]",
      "dest": "type_name [19083,19098]"
    },
    {
      "src": "identifier: owner [32108,32113]",
      "dest": "identifier: owner [32108,32113]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/ERC20.sol\"; [32295,32344]",
      "dest": "comment: // import \"contracts/true-gold/common/ERC20.sol\"; [32295,32344]"
    },
    {
      "src": "function_body [7039,7137]",
      "dest": "function_body [7039,7137]"
    },
    {
      "src": "identifier: spender [28224,28231]",
      "dest": "identifier: spender [28224,28231]"
    },
    {
      "src": "type_name [35561,35568]",
      "dest": "type_name [35561,35568]"
    },
    {
      "src": "comment: /**      * @dev Returns the name of the token.      */ [24793,24849]",
      "dest": "comment: /**      * @dev Returns the name of the token.      */ [24793,24849]"
    },
    {
      "src": "type_name [5460,5467]",
      "dest": "type_name [5460,5467]"
    },
    {
      "src": "return_type_definition [12510,12527]",
      "dest": "return_type_definition [12510,12527]"
    },
    {
      "src": "parameter [25081,25094]",
      "dest": "parameter [25081,25094]"
    },
    {
      "src": "identifier: Approval [32148,32156]",
      "dest": "identifier: Approval [32148,32156]"
    },
    {
      "src": "state_variable_declaration [1874,1895]",
      "dest": "state_variable_declaration [1874,1895]"
    },
    {
      "src": "uint256: uint256 [14786,14793]",
      "dest": "uint256: uint256 [14786,14793]"
    },
    {
      "src": "uint256: uint256 [26488,26495]",
      "dest": "uint256: uint256 [26488,26495]"
    },
    {
      "src": "function_definition [34331,34420]",
      "dest": "function_definition [34331,34420]"
    },
    {
      "src": "identifier: a [14118,14119]",
      "dest": "identifier: a [14118,14119]"
    },
    {
      "src": "boolean_literal [35819,35823]",
      "dest": "boolean_literal [35819,35823]"
    },
    {
      "src": "string_literal [31220,31256]",
      "dest": "string_literal [31220,31256]"
    },
    {
      "src": "): ) [38240,38241]",
      "dest": "): ) [38241,38242]"
    },
    {
      "src": "call_argument [7784,7824]",
      "dest": "call_argument [7784,7824]"
    },
    {
      "src": "returns: returns [10228,10235]",
      "dest": "returns: returns [10228,10235]"
    },
    {
      "src": "identifier: a [12580,12581]",
      "dest": "identifier: a [12580,12581]"
    },
    {
      "src": "): ) [31154,31155]",
      "dest": "): ) [31154,31155]"
    },
    {
      "src": "return: return [22407,22413]",
      "dest": "return: return [22407,22413]"
    },
    {
      "src": "parameter [29652,29666]",
      "dest": "parameter [29652,29666]"
    },
    {
      "src": "identifier: reclaimEther [11114,11126]",
      "dest": "identifier: reclaimEther [11114,11126]"
    },
    {
      "src": "function_definition [33126,33425]",
      "dest": "function_definition [33126,33425]"
    },
    {
      "src": "): ) [36371,36372]",
      "dest": "): ) [36371,36372]"
    },
    {
      "src": "call_argument [35396,35456]",
      "dest": "call_argument [35396,35456]"
    },
    {
      "src": "): ) [30671,30672]",
      "dest": "): ) [30671,30672]"
    },
    {
      "src": "identifier: b [16780,16781]",
      "dest": "identifier: b [16780,16781]"
    },
    {
      "src": "]: ] [28986,28987]",
      "dest": "]: ] [28986,28987]"
    },
    {
      "src": "event_paramater [33956,33969]",
      "dest": "event_paramater [33956,33969]"
    },
    {
      "src": ",: , [21361,21362]",
      "dest": ",: , [21361,21362]"
    },
    {
      "src": "identifier: _owner [7430,7436]",
      "dest": "identifier: _owner [7430,7436]"
    },
    {
      "src": "identifier: allowance [33232,33241]",
      "dest": "identifier: allowance [33232,33241]"
    },
    {
      "src": "revert_statement [22927,22948]",
      "dest": "revert_statement [22927,22948]"
    },
    {
      "src": "}: } [11517,11518]",
      "dest": "}: } [11517,11518]"
    },
    {
      "src": "{: { [26497,26498]",
      "dest": "{: { [26497,26498]"
    },
    {
      "src": "visibility [21787,21795]",
      "dest": "visibility [21787,21795]"
    },
    {
      "src": "identifier: minBurnAmount [37269,37282]",
      "dest": "identifier: minBurnAmount [37269,37282]"
    },
    {
      "src": "||: || [4620,4622]",
      "dest": "||: || [4620,4622]"
    },
    {
      "src": "address: address [10457,10464]",
      "dest": "address: address [10457,10464]"
    },
    {
      "src": "identifier: returndata [22318,22328]",
      "dest": "identifier: returndata [22318,22328]"
    },
    {
      "src": ".: . [26809,26810]",
      "dest": ".: . [26809,26810]"
    },
    {
      "src": "modifier_invocation [11154,11163]",
      "dest": "modifier_invocation [11154,11163]"
    },
    {
      "src": "identifier: c [15659,15660]",
      "dest": "identifier: c [15659,15660]"
    },
    {
      "src": "identifier: _burn [33395,33400]",
      "dest": "identifier: _burn [33395,33400]"
    },
    {
      "src": "function_body [34477,34517]",
      "dest": "function_body [34477,34517]"
    },
    {
      "src": "primitive_type [28186,28190]",
      "dest": "primitive_type [28186,28190]"
    },
    {
      "src": "expression_statement [19375,19454]",
      "dest": "expression_statement [19375,19454]"
    },
    {
      "src": "(: ( [7779,7780]",
      "dest": "(: ( [7779,7780]"
    },
    {
      "src": "event_paramater [34069,34083]",
      "dest": "event_paramater [34069,34083]"
    },
    {
      "src": "parameter [25897,25904]",
      "dest": "parameter [25897,25904]"
    },
    {
      "src": "}: } [36554,36555]",
      "dest": "}: } [36554,36555]"
    },
    {
      "src": "address: address [30644,30651]",
      "dest": "address: address [30644,30651]"
    },
    {
      "src": "boolean_literal [4832,4836]",
      "dest": "boolean_literal [4832,4836]"
    },
    {
      "src": "identifier: b [14189,14190]",
      "dest": "identifier: b [14189,14190]"
    },
    {
      "src": "function: function [35839,35847]",
      "dest": "function: function [35839,35847]"
    },
    {
      "src": "function_definition [37621,38004]",
      "dest": "function_definition [37622,38005]"
    },
    {
      "src": "type_name [10237,10241]",
      "dest": "type_name [10237,10241]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [21430,21672]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [21430,21672]"
    },
    {
      "src": "bytes: bytes [22132,22137]",
      "dest": "bytes: bytes [22132,22137]"
    },
    {
      "src": "is: is [24520,24522]",
      "dest": "is: is [24520,24522]"
    },
    {
      "src": "}: } [13060,13061]",
      "dest": "}: } [13060,13061]"
    },
    {
      "src": "(: ( [25896,25897]",
      "dest": "(: ( [25896,25897]"
    },
    {
      "src": "): ) [4566,4567]",
      "dest": "): ) [4566,4567]"
    },
    {
      "src": "}: } [18092,18093]",
      "dest": "}: } [18092,18093]"
    },
    {
      "src": "function_body [26786,26864]",
      "dest": "function_body [26786,26864]"
    },
    {
      "src": "}: } [27688,27689]",
      "dest": "}: } [27688,27689]"
    },
    {
      "src": "(: ( [27359,27360]",
      "dest": "(: ( [27359,27360]"
    },
    {
      "src": "(: ( [35222,35223]",
      "dest": "(: ( [35222,35223]"
    },
    {
      "src": "call_argument [14854,14855]",
      "dest": "call_argument [14854,14855]"
    },
    {
      "src": "identifier: _approve [28203,28211]",
      "dest": "identifier: _approve [28203,28211]"
    },
    {
      "src": "identifier: mod [38112,38115]",
      "dest": "identifier: mod [38113,38116]"
    },
    {
      "src": "identifier: cs [5507,5509]",
      "dest": "identifier: cs [5507,5509]"
    },
    {
      "src": "identifier: transferOwnership [11482,11499]",
      "dest": "identifier: transferOwnership [11482,11499]"
    },
    {
      "src": "variable_declaration_statement [11301,11350]",
      "dest": "variable_declaration_statement [11301,11350]"
    },
    {
      "src": "view: view [34357,34361]",
      "dest": "view: view [34357,34361]"
    },
    {
      "src": "string_literal [7452,7486]",
      "dest": "string_literal [7452,7486]"
    },
    {
      "src": "function: function [34147,34155]",
      "dest": "function: function [34147,34155]"
    },
    {
      "src": "comment: // import \"contracts/true-gold/common/Ownable.sol\"; [10896,10947]",
      "dest": "comment: // import \"contracts/true-gold/common/Ownable.sol\"; [10896,10947]"
    },
    {
      "src": "string [14221,14256]",
      "dest": "string [14221,14256]"
    },
    {
      "src": ",: , [13484,13485]",
      "dest": ",: , [13484,13485]"
    },
    {
      "src": "parameter [10237,10241]",
      "dest": "parameter [10237,10241]"
    },
    {
      "src": ".: . [38218,38219]",
      "dest": ".: . [38219,38220]"
    },
    {
      "src": "type_name [17764,17768]",
      "dest": "type_name [17764,17768]"
    },
    {
      "src": "parameter [38044,38058]",
      "dest": "parameter [38045,38059]"
    },
    {
      "src": "(: ( [11427,11428]",
      "dest": "(: ( [11427,11428]"
    },
    {
      "src": "identifier: c [12633,12634]",
      "dest": "identifier: c [12633,12634]"
    },
    {
      "src": "internal: internal [7018,7026]",
      "dest": "internal: internal [7018,7026]"
    },
    {
      "src": ",: , [11377,11378]",
      "dest": ",: , [11377,11378]"
    },
    {
      "src": "comment: // https://github.com/trusttoken/smart-contracts [1410,1458]",
      "dest": "comment: // https://github.com/trusttoken/smart-contracts [1410,1458]"
    },
    {
      "src": "public: public [37536,37542]",
      "dest": "public: public [37536,37542]"
    },
    {
      "src": "{: { [18061,18062]",
      "dest": "{: { [18061,18062]"
    },
    {
      "src": "(: ( [21804,21805]",
      "dest": "(: ( [21804,21805]"
    },
    {
      "src": "): ) [29813,29814]",
      "dest": "): ) [29813,29814]"
    },
    {
      "src": "string: string [16783,16789]",
      "dest": "string: string [16783,16789]"
    },
    {
      "src": "member_expression [28245,28255]",
      "dest": "member_expression [28245,28255]"
    },
    {
      "src": "variable_declaration_statement [13510,13528]",
      "dest": "variable_declaration_statement [13510,13528]"
    },
    {
      "src": "primitive_type [28842,28849]",
      "dest": "primitive_type [28842,28849]"
    },
    {
      "src": "internal: internal [36249,36257]",
      "dest": "internal: internal [36249,36257]"
    },
    {
      "src": "identifier: recipient [29979,29988]",
      "dest": "identifier: recipient [29979,29988]"
    },
    {
      "src": "identifier: token [11254,11259]",
      "dest": "identifier: token [11254,11259]"
    },
    {
      "src": "): ) [38138,38139]",
      "dest": "): ) [38139,38140]"
    },
    {
      "src": "}: } [32187,32188]",
      "dest": "}: } [32187,32188]"
    },
    {
      "src": "): ) [29672,29673]",
      "dest": "): ) [29672,29673]"
    },
    {
      "src": "primitive_type [13839,13846]",
      "dest": "primitive_type [13839,13846]"
    },
    {
      "src": "returns: returns [7247,7254]",
      "dest": "returns: returns [7247,7254]"
    },
    {
      "src": "): ) [11386,11387]",
      "dest": "): ) [11386,11387]"
    },
    {
      "src": "parameter [20244,20258]",
      "dest": "parameter [20244,20258]"
    },
    {
      "src": "array_access [31189,31207]",
      "dest": "array_access [31189,31207]"
    },
    {
      "src": "=>: => [1824,1826]",
      "dest": "=>: => [1824,1826]"
    },
    {
      "src": ",: , [33351,33352]",
      "dest": ",: , [33351,33352]"
    },
    {
      "src": "primitive_type [30396,30403]",
      "dest": "primitive_type [30396,30403]"
    },
    {
      "src": "primitive_type [1652,1656]",
      "dest": "primitive_type [1652,1656]"
    },
    {
      "src": "): ) [36151,36152]",
      "dest": "): ) [36151,36152]"
    },
    {
      "src": "primitive_type [13828,13835]",
      "dest": "primitive_type [13828,13835]"
    },
    {
      "src": "identifier: Transfer [10426,10434]",
      "dest": "identifier: Transfer [10426,10434]"
    },
    {
      "src": "comment: // address returns the current address. Since the code is still not [5184,5251]",
      "dest": "comment: // address returns the current address. Since the code is still not [5184,5251]"
    },
    {
      "src": "expression_statement [28203,28283]",
      "dest": "expression_statement [28203,28283]"
    },
    {
      "src": ".: . [11177,11178]",
      "dest": ".: . [11177,11178]"
    },
    {
      "src": "(: ( [27550,27551]",
      "dest": "(: ( [27550,27551]"
    },
    {
      "src": "identifier: size [18110,18114]",
      "dest": "identifier: size [18110,18114]"
    },
    {
      "src": "(: ( [29790,29791]",
      "dest": "(: ( [29790,29791]"
    },
    {
      "src": "binary_expression [30448,30469]",
      "dest": "binary_expression [30448,30469]"
    },
    {
      "src": "{: { [19135,19136]",
      "dest": "{: { [19135,19136]"
    },
    {
      "src": "state_mutability [26474,26478]",
      "dest": "state_mutability [26474,26478]"
    },
    {
      "src": "memory: memory [21301,21307]",
      "dest": "memory: memory [21301,21307]"
    },
    {
      "src": "call_expression [33335,33384]",
      "dest": "call_expression [33335,33384]"
    },
    {
      "src": "(: ( [11246,11247]",
      "dest": "(: ( [11246,11247]"
    },
    {
      "src": "type_name [12474,12481]",
      "dest": "type_name [12474,12481]"
    },
    {
      "src": "mapping: mapping [1808,1815]",
      "dest": "mapping: mapping [1808,1815]"
    },
    {
      "src": "visibility [15453,15461]",
      "dest": "visibility [15453,15461]"
    },
    {
      "src": "external: external [8221,8229]",
      "dest": "external: external [8221,8229]"
    },
    {
      "src": "parameter [11247,11259]",
      "dest": "parameter [11247,11259]"
    },
    {
      "src": "type_name [17972,17979]",
      "dest": "type_name [17972,17979]"
    },
    {
      "src": "identifier: _approve [31817,31825]",
      "dest": "identifier: _approve [31817,31825]"
    },
    {
      "src": "}: } [22980,22981]",
      "dest": "}: } [22980,22981]"
    },
    {
      "src": "(: ( [8399,8400]",
      "dest": "(: ( [8399,8400]"
    },
    {
      "src": "pure: pure [16820,16824]",
      "dest": "pure: pure [16820,16824]"
    },
    {
      "src": "call_argument [29710,29730]",
      "dest": "call_argument [29710,29730]"
    },
    {
      "src": "visibility [26216,26222]",
      "dest": "visibility [26216,26222]"
    },
    {
      "src": "parameter [26433,26448]",
      "dest": "parameter [26433,26448]"
    },
    {
      "src": ",: , [31875,31876]",
      "dest": ",: , [31875,31876]"
    },
    {
      "src": "identifier: msg [7059,7062]",
      "dest": "identifier: msg [7059,7062]"
    },
    {
      "src": "primitive_type [27478,27482]",
      "dest": "primitive_type [27478,27482]"
    },
    {
      "src": ",: , [32162,32163]",
      "dest": ",: , [32162,32163]"
    },
    {
      "src": "uint256: uint256 [8675,8682]",
      "dest": "uint256: uint256 [8675,8682]"
    },
    {
      "src": "expression_statement [37955,37997]",
      "dest": "expression_statement [37956,37998]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [16271,16742]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [16271,16742]"
    },
    {
      "src": "primitive_type [33161,33168]",
      "dest": "primitive_type [33161,33168]"
    },
    {
      "src": "): ) [7486,7487]",
      "dest": "): ) [7486,7487]"
    },
    {
      "src": "string: string [37459,37465]",
      "dest": "string: string [37459,37465]"
    },
    {
      "src": "identifier: amount [27524,27530]",
      "dest": "identifier: amount [27524,27530]"
    },
    {
      "src": "): ) [22367,22368]",
      "dest": "): ) [22367,22368]"
    },
    {
      "src": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [12222,12455]",
      "dest": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [12222,12455]"
    },
    {
      "src": "true [4832,4836]",
      "dest": "true [4832,4836]"
    },
    {
      "src": "return_type_definition [26771,26785]",
      "dest": "return_type_definition [26771,26785]"
    },
    {
      "src": "comment: // Change the minimum and maximum amount that can be burned at once. Burning may be disabled by setting both to 0 [34525,34638]",
      "dest": "comment: // Change the minimum and maximum amount that can be burned at once. Burning may be disabled by setting both to 0 [34525,34638]"
    },
    {
      "src": "identifier: owner [10688,10693]",
      "dest": "identifier: owner [10688,10693]"
    },
    {
      "src": "identifier: add [30546,30549]",
      "dest": "identifier: add [30546,30549]"
    },
    {
      "src": "type_name [11261,11268]",
      "dest": "type_name [11261,11268]"
    },
    {
      "src": ",: , [16781,16782]",
      "dest": ",: , [16781,16782]"
    },
    {
      "src": "using: using [24584,24589]",
      "dest": "using: using [24584,24589]"
    },
    {
      "src": "number_literal: 6 [37021,37022]",
      "dest": "number_literal: 6 [37021,37022]"
    },
    {
      "src": "{: { [5586,5587]",
      "dest": "{: { [5586,5587]"
    },
    {
      "src": "if_statement [22379,22974]",
      "dest": "if_statement [22379,22974]"
    },
    {
      "src": "identifier: owner [26527,26532]",
      "dest": "identifier: owner [26527,26532]"
    },
    {
      "src": "call_argument [27505,27511]",
      "dest": "call_argument [27505,27511]"
    },
    {
      "src": "comment: /**      * @dev Modifier to use in the initializer function of a contract.      */ [4455,4539]",
      "dest": "comment: /**      * @dev Modifier to use in the initializer function of a contract.      */ [4455,4539]"
    },
    {
      "src": "bytes: bytes [21725,21730]",
      "dest": "bytes: bytes [21725,21730]"
    },
    {
      "src": "): ) [12990,12991]",
      "dest": "): ) [12990,12991]"
    },
    {
      "src": "identifier: add [28266,28269]",
      "dest": "identifier: add [28266,28269]"
    },
    {
      "src": "yul_path [5601,5603]",
      "dest": "yul_path [5601,5603]"
    },
    {
      "src": "variable_declaration_tuple [19310,19326]",
      "dest": "variable_declaration_tuple [19310,19326]"
    },
    {
      "src": ",: , [29007,29008]",
      "dest": ",: , [29007,29008]"
    },
    {
      "src": "true [4798,4802]",
      "dest": "true [4798,4802]"
    },
    {
      "src": "\": \" [27615,27616]",
      "dest": "\": \" [27615,27616]"
    },
    {
      "src": "contract: contract [6638,6646]",
      "dest": "contract: contract [6638,6646]"
    },
    {
      "src": "(: ( [31348,31349]",
      "dest": "(: ( [31348,31349]"
    },
    {
      "src": "string: string [25081,25087]",
      "dest": "string: string [25081,25087]"
    },
    {
      "src": "identifier: burnMin [34340,34347]",
      "dest": "identifier: burnMin [34340,34347]"
    },
    {
      "src": "expression_statement [32096,32133]",
      "dest": "expression_statement [32096,32133]"
    },
    {
      "src": "uint256: uint256 [12485,12492]",
      "dest": "uint256: uint256 [12485,12492]"
    },
    {
      "src": "(: ( [35510,35511]",
      "dest": "(: ( [35510,35511]"
    },
    {
      "src": "yul_identifier [22852,22867]",
      "dest": "yul_identifier [22852,22867]"
    },
    {
      "src": ",: , [22067,22068]",
      "dest": ",: , [22067,22068]"
    },
    {
      "src": "call_argument [13017,13018]",
      "dest": "call_argument [13017,13018]"
    },
    {
      "src": "uint256: uint256 [9073,9080]",
      "dest": "uint256: uint256 [9073,9080]"
    },
    {
      "src": "identifier: _balances [30589,30598]",
      "dest": "identifier: _balances [30589,30598]"
    },
    {
      "src": "visibility [5067,5074]",
      "dest": "visibility [5067,5074]"
    },
    {
      "src": "override: override [38077,38085]",
      "dest": "override: override [38078,38086]"
    },
    {
      "src": "call_argument [37727,37769]",
      "dest": "call_argument [37728,37770]"
    },
    {
      "src": "identifier: value [33964,33969]",
      "dest": "identifier: value [33964,33969]"
    },
    {
      "src": "{: { [35028,35029]",
      "dest": "{: { [35028,35029]"
    },
    {
      "src": "function_body [16200,16263]",
      "dest": "function_body [16200,16263]"
    },
    {
      "src": "address: address [28842,28849]",
      "dest": "address: address [28842,28849]"
    },
    {
      "src": "pure: pure [12969,12973]",
      "dest": "pure: pure [12969,12973]"
    },
    {
      "src": "(: ( [18082,18083]",
      "dest": "(: ( [18082,18083]"
    },
    {
      "src": "}: } [4847,4848]",
      "dest": "}: } [4847,4848]"
    },
    {
      "src": "): ) [9826,9827]",
      "dest": "): ) [9826,9827]"
    },
    {
      "src": ",: , [19390,19391]",
      "dest": ",: , [19390,19391]"
    },
    {
      "src": ",: , [33273,33274]",
      "dest": ",: , [33273,33274]"
    }
  ],
  "actions": []
}