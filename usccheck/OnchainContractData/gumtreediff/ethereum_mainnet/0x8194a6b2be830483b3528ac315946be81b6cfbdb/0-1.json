{
  "matches": [
    {
      "src": "uint: uint [40233,40237]",
      "dest": "uint: uint [40245,40249]"
    },
    {
      "src": "visibility [5503,5511]",
      "dest": "visibility [5503,5511]"
    },
    {
      "src": "identifier: safeApprove [22875,22886]",
      "dest": "identifier: safeApprove [22875,22886]"
    },
    {
      "src": "identifier: token [22340,22345]",
      "dest": "identifier: token [22340,22345]"
    },
    {
      "src": "returns: returns [18428,18435]",
      "dest": "returns: returns [18428,18435]"
    },
    {
      "src": "variable_declaration [15944,15956]",
      "dest": "variable_declaration [15944,15956]"
    },
    {
      "src": "emit_statement [37073,37112]",
      "dest": "emit_statement [37076,37115]"
    },
    {
      "src": "comment: /**      * @dev Returns the multiplication of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [4719,4860]",
      "dest": "comment: /**      * @dev Returns the multiplication of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [4719,4860]"
    },
    {
      "src": "): ) [4702,4703]",
      "dest": "): ) [4702,4703]"
    },
    {
      "src": ".: . [39019,39020]",
      "dest": ".: . [39022,39023]"
    },
    {
      "src": ".: . [23740,23741]",
      "dest": ".: . [23740,23741]"
    },
    {
      "src": "(: ( [17858,17859]",
      "dest": "(: ( [17858,17859]"
    },
    {
      "src": "(: ( [2340,2341]",
      "dest": "(: ( [2340,2341]"
    },
    {
      "src": "primitive_type [9101,9108]",
      "dest": "primitive_type [9101,9108]"
    },
    {
      "src": "}: } [15990,15991]",
      "dest": "}: } [15990,15991]"
    },
    {
      "src": "{: { [2176,2177]",
      "dest": "{: { [2176,2177]"
    },
    {
      "src": "identifier: isAvailable [36159,36170]",
      "dest": "identifier: isAvailable [36162,36173]"
    },
    {
      "src": "\": \" [38257,38258]",
      "dest": "\": \" [38260,38261]"
    },
    {
      "src": "identifier: orderIDCounter [36317,36331]",
      "dest": "identifier: orderIDCounter [36320,36334]"
    },
    {
      "src": "call_expression [36940,36963]",
      "dest": "call_expression [36943,36966]"
    },
    {
      "src": ",: , [37358,37359]",
      "dest": ",: , [37361,37362]"
    },
    {
      "src": "type_name [34656,34660]",
      "dest": "type_name [34659,34663]"
    },
    {
      "src": "parameter [22901,22916]",
      "dest": "parameter [22901,22916]"
    },
    {
      "src": "returns: returns [844,851]",
      "dest": "returns: returns [844,851]"
    },
    {
      "src": "comment: /**      * @dev Transfers `tokenId` token from `from` to `to`.      *      * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must be owned by `from`.      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.      *      * Emits a {Transfer} event.      */ [28017,28534]",
      "dest": "comment: /**      * @dev Transfers `tokenId` token from `from` to `to`.      *      * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must be owned by `from`.      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.      *      * Emits a {Transfer} event.      */ [28017,28534]"
    },
    {
      "src": "identifier: b [6282,6283]",
      "dest": "identifier: b [6282,6283]"
    },
    {
      "src": "parameter [5853,5860]",
      "dest": "parameter [5853,5860]"
    },
    {
      "src": "): ) [4940,4941]",
      "dest": "): ) [4940,4941]"
    },
    {
      "src": "assignment_expression [35285,35341]",
      "dest": "assignment_expression [35288,35344]"
    },
    {
      "src": "primitive_type [4893,4900]",
      "dest": "primitive_type [4893,4900]"
    },
    {
      "src": "member_expression [38878,38922]",
      "dest": "member_expression [38881,38925]"
    },
    {
      "src": ",: , [35188,35189]",
      "dest": ",: , [35191,35192]"
    },
    {
      "src": "identifier: order [36759,36764]",
      "dest": "identifier: order [36762,36767]"
    },
    {
      "src": "user_defined_type [23821,23827]",
      "dest": "user_defined_type [23821,23827]"
    },
    {
      "src": "type_name [4624,4631]",
      "dest": "type_name [4624,4631]"
    },
    {
      "src": "type_name [22901,22908]",
      "dest": "type_name [22901,22908]"
    },
    {
      "src": "parameter [10707,10716]",
      "dest": "parameter [10707,10716]"
    },
    {
      "src": "type_name [28576,28583]",
      "dest": "type_name [28576,28583]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [12708,13012]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [12708,13012]"
    },
    {
      "src": "identifier: Context [673,680]",
      "dest": "identifier: Context [673,680]"
    },
    {
      "src": "expression_statement [41205,41287]",
      "dest": "expression_statement [41214,41296]"
    },
    {
      "src": "): ) [23654,23655]",
      "dest": "): ) [23654,23655]"
    },
    {
      "src": "visibility [822,830]",
      "dest": "visibility [822,830]"
    },
    {
      "src": "): ) [16908,16909]",
      "dest": "): ) [16908,16909]"
    },
    {
      "src": ":: : [18747,18748]",
      "dest": ":: : [18747,18748]"
    },
    {
      "src": "expression_statement [40961,41064]",
      "dest": "expression_statement [40970,41073]"
    },
    {
      "src": "{: { [10992,10993]",
      "dest": "{: { [10992,10993]"
    },
    {
      "src": "bytes: bytes [16891,16896]",
      "dest": "bytes: bytes [16891,16896]"
    },
    {
      "src": "): ) [18449,18450]",
      "dest": "): ) [18449,18450]"
    },
    {
      "src": "return_type_definition [30948,30974]",
      "dest": "return_type_definition [30954,30980]"
    },
    {
      "src": "): ) [36188,36189]",
      "dest": "): ) [36191,36192]"
    },
    {
      "src": "uint256: uint256 [26383,26390]",
      "dest": "uint256: uint256 [26383,26390]"
    },
    {
      "src": "identifier: _owner [1955,1961]",
      "dest": "identifier: _owner [1955,1961]"
    },
    {
      "src": "returns: returns [7116,7123]",
      "dest": "returns: returns [7116,7123]"
    },
    {
      "src": "address: address [29984,29991]",
      "dest": "address: address [29984,29991]"
    },
    {
      "src": "comment: // the target address contains contract code and also asserts for success in the low-level call. [24828,24924]",
      "dest": "comment: // the target address contains contract code and also asserts for success in the low-level call. [24828,24924]"
    },
    {
      "src": "return_type_definition [7814,7831]",
      "dest": "return_type_definition [7814,7831]"
    },
    {
      "src": "user_defined_type [30957,30966]",
      "dest": "user_defined_type [30963,30972]"
    },
    {
      "src": "type_name [24555,24560]",
      "dest": "type_name [24555,24560]"
    },
    {
      "src": "primitive_type [4293,4300]",
      "dest": "primitive_type [4293,4300]"
    },
    {
      "src": "event_paramater [26582,26605]",
      "dest": "event_paramater [26582,26605]"
    },
    {
      "src": "bytes: bytes [24936,24941]",
      "dest": "bytes: bytes [24936,24941]"
    },
    {
      "src": "function: function [11073,11081]",
      "dest": "function: function [11073,11081]"
    },
    {
      "src": "+: + [6280,6281]",
      "dest": "+: + [6280,6281]"
    },
    {
      "src": "pure: pure [10755,10759]",
      "dest": "pure: pure [10755,10759]"
    },
    {
      "src": "}: } [4710,4711]",
      "dest": "}: } [4710,4711]"
    },
    {
      "src": "identifier: _maker [34734,34740]",
      "dest": "identifier: _maker [34737,34743]"
    },
    {
      "src": "): ) [23948,23949]",
      "dest": "): ) [23948,23949]"
    },
    {
      "src": "): ) [21460,21461]",
      "dest": "): ) [21460,21461]"
    },
    {
      "src": "uint256: uint256 [11550,11557]",
      "dest": "uint256: uint256 [11550,11557]"
    },
    {
      "src": "variable_declaration_tuple [19694,19733]",
      "dest": "variable_declaration_tuple [19694,19733]"
    },
    {
      "src": "=: = [1962,1963]",
      "dest": "=: = [1962,1963]"
    },
    {
      "src": "primitive_type [10769,10776]",
      "dest": "primitive_type [10769,10776]"
    },
    {
      "src": "event_paramater [35063,35076]",
      "dest": "event_paramater [35066,35079]"
    },
    {
      "src": "identifier: require [9121,9128]",
      "dest": "identifier: require [9121,9128]"
    },
    {
      "src": "assignment_expression [1955,1973]",
      "dest": "assignment_expression [1955,1973]"
    },
    {
      "src": "(: ( [26532,26533]",
      "dest": "(: ( [26532,26533]"
    },
    {
      "src": "user_defined_type [39579,39584]",
      "dest": "user_defined_type [39582,39587]"
    },
    {
      "src": ",: , [20818,20819]",
      "dest": ",: , [20818,20819]"
    },
    {
      "src": "identifier: order [36772,36777]",
      "dest": "identifier: order [36775,36780]"
    },
    {
      "src": "(: ( [24989,24990]",
      "dest": "(: ( [24989,24990]"
    },
    {
      "src": "identifier: _verifyCallResult [20781,20798]",
      "dest": "identifier: _verifyCallResult [20781,20798]"
    },
    {
      "src": "call_argument [37348,37358]",
      "dest": "call_argument [37351,37361]"
    },
    {
      "src": "bool: bool [26063,26067]",
      "dest": "bool: bool [26063,26067]"
    },
    {
      "src": "string_literal [19582,19620]",
      "dest": "string_literal [19582,19620]"
    },
    {
      "src": "binary_expression [4325,4330]",
      "dest": "binary_expression [4325,4330]"
    },
    {
      "src": "identifier: b [9047,9048]",
      "dest": "identifier: b [9047,9048]"
    },
    {
      "src": "struct_member [34264,34288]",
      "dest": "struct_member [34267,34291]"
    },
    {
      "src": "uint256: uint256 [9879,9886]",
      "dest": "uint256: uint256 [9879,9886]"
    },
    {
      "src": "private: private [33892,33899]",
      "dest": "private: private [33895,33902]"
    },
    {
      "src": "primitive_type [20464,20469]",
      "dest": "primitive_type [20464,20469]"
    },
    {
      "src": "): ) [37200,37201]",
      "dest": "): ) [37203,37204]"
    },
    {
      "src": "call_argument [38923,38934]",
      "dest": "call_argument [38926,38937]"
    },
    {
      "src": "call_argument [35250,35271]",
      "dest": "call_argument [35253,35274]"
    },
    {
      "src": "(: ( [24035,24036]",
      "dest": "(: ( [24035,24036]"
    },
    {
      "src": "): ) [40854,40855]",
      "dest": "): ) [40863,40864]"
    },
    {
      "src": "identifier: add [6197,6200]",
      "dest": "identifier: add [6197,6200]"
    },
    {
      "src": "variable_declaration [14610,14622]",
      "dest": "variable_declaration [14610,14622]"
    },
    {
      "src": "bytes: bytes [19709,19714]",
      "dest": "bytes: bytes [19709,19714]"
    },
    {
      "src": "(: ( [1889,1890]",
      "dest": "(: ( [1889,1890]"
    },
    {
      "src": "contract_declaration [31869,33704]",
      "dest": "contract_declaration [31872,33707]"
    },
    {
      "src": "uint256: uint256 [7080,7087]",
      "dest": "uint256: uint256 [7080,7087]"
    },
    {
      "src": "(: ( [40322,40323]",
      "dest": "(: ( [40331,40332]"
    },
    {
      "src": "modifier_invocation [38013,38025]",
      "dest": "modifier_invocation [38016,38028]"
    },
    {
      "src": "function: function [9855,9863]",
      "dest": "function: function [9855,9863]"
    },
    {
      "src": "call_argument [3294,3295]",
      "dest": "call_argument [3294,3295]"
    },
    {
      "src": "uint256: uint256 [4253,4260]",
      "dest": "uint256: uint256 [4253,4260]"
    },
    {
      "src": "comment: // https://eips.ethereum.org/EIPS/eip-2200) [33618,33661]",
      "dest": "comment: // https://eips.ethereum.org/EIPS/eip-2200) [33621,33664]"
    },
    {
      "src": "type_name [34879,34883]",
      "dest": "type_name [34882,34886]"
    },
    {
      "src": "uint256: uint256 [9028,9035]",
      "dest": "uint256: uint256 [9028,9035]"
    },
    {
      "src": "event_definition [13292,13364]",
      "dest": "event_definition [13292,13364]"
    },
    {
      "src": "return: return [18772,18778]",
      "dest": "return: return [18772,18778]"
    },
    {
      "src": "string [37702,37761]",
      "dest": "string [37705,37764]"
    },
    {
      "src": "type_name [27983,27990]",
      "dest": "type_name [27983,27990]"
    },
    {
      "src": "primitive_type [30925,30929]",
      "dest": "primitive_type [30931,30935]"
    },
    {
      "src": "): ) [26406,26407]",
      "dest": "): ) [26406,26407]"
    },
    {
      "src": "call_expression [2341,2348]",
      "dest": "call_expression [2341,2348]"
    },
    {
      "src": "identifier: msg [776,779]",
      "dest": "identifier: msg [776,779]"
    },
    {
      "src": "function_body [18451,18839]",
      "dest": "function_body [18451,18839]"
    },
    {
      "src": "return_type_definition [9932,9949]",
      "dest": "return_type_definition [9932,9949]"
    },
    {
      "src": "binary_expression [5178,5184]",
      "dest": "binary_expression [5178,5184]"
    },
    {
      "src": ",: , [20580,20581]",
      "dest": ",: , [20580,20581]"
    },
    {
      "src": "call_argument [22365,22367]",
      "dest": "call_argument [22365,22367]"
    },
    {
      "src": "is: is [26212,26214]",
      "dest": "is: is [26212,26214]"
    },
    {
      "src": "call_argument [22340,22363]",
      "dest": "call_argument [22340,22363]"
    },
    {
      "src": "uint256: uint256 [7789,7796]",
      "dest": "uint256: uint256 [7789,7796]"
    },
    {
      "src": "identifier: token [22425,22430]",
      "dest": "identifier: token [22425,22430]"
    },
    {
      "src": "(: ( [3273,3274]",
      "dest": "(: ( [3273,3274]"
    },
    {
      "src": "identifier: errorMessage [9904,9916]",
      "dest": "identifier: errorMessage [9904,9916]"
    },
    {
      "src": "primitive_type [40819,40826]",
      "dest": "primitive_type [40828,40835]"
    },
    {
      "src": "(: ( [9940,9941]",
      "dest": "(: ( [9940,9941]"
    },
    {
      "src": "returns: returns [5517,5524]",
      "dest": "returns: returns [5517,5524]"
    },
    {
      "src": "call_expression [22290,22376]",
      "dest": "call_expression [22290,22376]"
    },
    {
      "src": "type_name [27971,27978]",
      "dest": "type_name [27971,27978]"
    },
    {
      "src": "}: } [10019,10020]",
      "dest": "}: } [10019,10020]"
    },
    {
      "src": "identifier: require [38171,38178]",
      "dest": "identifier: require [38174,38181]"
    },
    {
      "src": "identifier: copyright [40392,40401]",
      "dest": "identifier: copyright [40401,40410]"
    },
    {
      "src": "return: return [5285,5291]",
      "dest": "return: return [5285,5291]"
    },
    {
      "src": "primitive_type [11119,11126]",
      "dest": "primitive_type [11119,11126]"
    },
    {
      "src": "return_type_definition [11110,11127]",
      "dest": "return_type_definition [11110,11127]"
    },
    {
      "src": "identifier: _order [39849,39855]",
      "dest": "identifier: _order [39852,39858]"
    },
    {
      "src": ",: , [23645,23646]",
      "dest": ",: , [23645,23646]"
    },
    {
      "src": "): ) [12698,12699]",
      "dest": "): ) [12698,12699]"
    },
    {
      "src": "identifier: returndata_size [21463,21478]",
      "dest": "identifier: returndata_size [21463,21478]"
    },
    {
      "src": "expression_statement [37026,37063]",
      "dest": "expression_statement [37029,37066]"
    },
    {
      "src": "identifier: _order [39708,39714]",
      "dest": "identifier: _order [39711,39717]"
    },
    {
      "src": "primitive_type [9890,9896]",
      "dest": "primitive_type [9890,9896]"
    },
    {
      "src": "identifier: _requireOrderByMaker [36974,36994]",
      "dest": "identifier: _requireOrderByMaker [36977,36997]"
    },
    {
      "src": "identifier: feeRateNumerator [40672,40688]",
      "dest": "identifier: feeRateNumerator [40681,40697]"
    },
    {
      "src": "if: if [4644,4646]",
      "dest": "if: if [4644,4646]"
    },
    {
      "src": "(: ( [11947,11948]",
      "dest": "(: ( [11947,11948]"
    },
    {
      "src": "function_body [33268,33701]",
      "dest": "function_body [33271,33704]"
    },
    {
      "src": "string_literal [20174,20215]",
      "dest": "string_literal [20174,20215]"
    },
    {
      "src": "\": \" [7258,7259]",
      "dest": "\": \" [7258,7259]"
    },
    {
      "src": "): ) [29383,29384]",
      "dest": "): ) [29383,29384]"
    },
    {
      "src": "type_name [19110,19115]",
      "dest": "type_name [19110,19115]"
    },
    {
      "src": "call_argument [40969,40991]",
      "dest": "call_argument [40978,41000]"
    },
    {
      "src": "function_definition [15697,16092]",
      "dest": "function_definition [15697,16092]"
    },
    {
      "src": "(: ( [19109,19110]",
      "dest": "(: ( [19109,19110]"
    },
    {
      "src": "call_expression [20781,20833]",
      "dest": "call_expression [20781,20833]"
    },
    {
      "src": "return: return [5564,5570]",
      "dest": "return: return [5564,5570]"
    },
    {
      "src": "primitive_type [34264,34271]",
      "dest": "primitive_type [34267,34274]"
    },
    {
      "src": ".: . [779,780]",
      "dest": ".: . [779,780]"
    },
    {
      "src": "returns: returns [4278,4285]",
      "dest": "returns: returns [4278,4285]"
    },
    {
      "src": "=: = [37498,37499]",
      "dest": "=: = [37501,37502]"
    },
    {
      "src": "identifier: orders [37026,37032]",
      "dest": "identifier: orders [37029,37035]"
    },
    {
      "src": "identifier: returndata [25046,25056]",
      "dest": "identifier: returndata [25046,25056]"
    },
    {
      "src": "type_name [20876,20880]",
      "dest": "type_name [20876,20880]"
    },
    {
      "src": "): ) [19758,19759]",
      "dest": "): ) [19758,19759]"
    },
    {
      "src": "\": \" [19582,19583]",
      "dest": "\": \" [19582,19583]"
    },
    {
      "src": "): ) [5184,5185]",
      "dest": "): ) [5184,5185]"
    },
    {
      "src": "): ) [23571,23572]",
      "dest": "): ) [23571,23572]"
    },
    {
      "src": "type_name [26810,26814]",
      "dest": "type_name [26810,26814]"
    },
    {
      "src": "type_name [11948,11955]",
      "dest": "type_name [11948,11955]"
    },
    {
      "src": "type_name [14402,14406]",
      "dest": "type_name [14402,14406]"
    },
    {
      "src": "uint256: uint256 [4893,4900]",
      "dest": "uint256: uint256 [4893,4900]"
    },
    {
      "src": "bytes: bytes [17875,17880]",
      "dest": "bytes: bytes [17875,17880]"
    },
    {
      "src": "call_expression [37538,37762]",
      "dest": "call_expression [37541,37765]"
    },
    {
      "src": "parameter [3228,3244]",
      "dest": "parameter [3228,3244]"
    },
    {
      "src": "identifier: _maker [40985,40991]",
      "dest": "identifier: _maker [40994,41000]"
    },
    {
      "src": "identifier: target [19736,19742]",
      "dest": "identifier: target [19736,19742]"
    },
    {
      "src": "primitive_type [13040,13047]",
      "dest": "primitive_type [13040,13047]"
    },
    {
      "src": "function_body [37224,37956]",
      "dest": "function_body [37227,37959]"
    },
    {
      "src": "identifier: _fixedPrice [36137,36148]",
      "dest": "identifier: _fixedPrice [36140,36151]"
    },
    {
      "src": "identifier: tokenAddress [36778,36790]",
      "dest": "identifier: tokenAddress [36781,36793]"
    },
    {
      "src": "visibility [26951,26959]",
      "dest": "visibility [26951,26959]"
    },
    {
      "src": "emit_statement [39425,39510]",
      "dest": "emit_statement [39428,39513]"
    },
    {
      "src": "identifier: from [22572,22576]",
      "dest": "identifier: from [22572,22576]"
    },
    {
      "src": "identifier: b [7192,7193]",
      "dest": "identifier: b [7192,7193]"
    },
    {
      "src": "comment: /**  * @dev Interface of the ERC165 standard, as defined in the  * https://eips.ethereum.org/EIPS/eip-165[EIP].  *  * Implementers can declare support of contract interfaces, which can then be  * queried by others ({ERC165Checker}).  *  * For an implementation, see {ERC165}.  */ [25326,25613]",
      "dest": "comment: /**  * @dev Interface of the ERC165 standard, as defined in the  * https://eips.ethereum.org/EIPS/eip-165[EIP].  *  * Implementers can declare support of contract interfaces, which can then be  * queried by others ({ERC165Checker}).  *  * For an implementation, see {ERC165}.  */ [25326,25613]"
    },
    {
      "src": "parameter [7091,7100]",
      "dest": "parameter [7091,7100]"
    },
    {
      "src": "type_name [23541,23548]",
      "dest": "type_name [23541,23548]"
    },
    {
      "src": "): ) [14377,14378]",
      "dest": "): ) [14377,14378]"
    },
    {
      "src": "bytes: bytes [30694,30699]",
      "dest": "bytes: bytes [30694,30699]"
    },
    {
      "src": "primitive_type [34840,34847]",
      "dest": "primitive_type [34843,34850]"
    },
    {
      "src": ".: . [36764,36765]",
      "dest": ".: . [36767,36768]"
    },
    {
      "src": "call_argument [24996,25030]",
      "dest": "call_argument [24996,25030]"
    },
    {
      "src": "user_defined_type [36919,36924]",
      "dest": "user_defined_type [36922,36927]"
    },
    {
      "src": "identifier: tokenId [27991,27998]",
      "dest": "identifier: tokenId [27991,27998]"
    },
    {
      "src": "=: = [39319,39320]",
      "dest": "=: = [39322,39323]"
    },
    {
      "src": "primitive_type [20070,20075]",
      "dest": "primitive_type [20070,20075]"
    },
    {
      "src": "assignment_expression [39003,39039]",
      "dest": "assignment_expression [39006,39042]"
    },
    {
      "src": "\": \" [23367,23368]",
      "dest": "\": \" [23367,23368]"
    },
    {
      "src": "expression_statement [6294,6341]",
      "dest": "expression_statement [6294,6341]"
    },
    {
      "src": ",: , [19707,19708]",
      "dest": ",: , [19707,19708]"
    },
    {
      "src": "(: ( [23234,23235]",
      "dest": "(: ( [23234,23235]"
    },
    {
      "src": "string_literal [23961,24004]",
      "dest": "string_literal [23961,24004]"
    },
    {
      "src": ",: , [23539,23540]",
      "dest": ",: , [23539,23540]"
    },
    {
      "src": "!=: != [5251,5253]",
      "dest": "!=: != [5251,5253]"
    },
    {
      "src": "(: ( [38178,38179]",
      "dest": "(: ( [38181,38182]"
    },
    {
      "src": "interface: interface [26194,26203]",
      "dest": "interface: interface [26194,26203]"
    },
    {
      "src": "primitive_type [30677,30684]",
      "dest": "primitive_type [30677,30684]"
    },
    {
      "src": "string [35250,35271]",
      "dest": "string [35253,35274]"
    },
    {
      "src": "type_name [31034,31038]",
      "dest": "type_name [31037,31041]"
    },
    {
      "src": "=: = [1930,1931]",
      "dest": "=: = [1930,1931]"
    },
    {
      "src": "call_argument [6744,6776]",
      "dest": "call_argument [6744,6776]"
    },
    {
      "src": "parameter [20529,20541]",
      "dest": "parameter [20529,20541]"
    },
    {
      "src": "address: address [34588,34595]",
      "dest": "address: address [34591,34598]"
    },
    {
      "src": "return: return [20774,20780]",
      "dest": "return: return [20774,20780]"
    },
    {
      "src": "primitive_type [26974,26981]",
      "dest": "primitive_type [26974,26981]"
    },
    {
      "src": "address: address [29367,29374]",
      "dest": "address: address [29367,29374]"
    },
    {
      "src": "call_expression [20554,20623]",
      "dest": "call_expression [20554,20623]"
    },
    {
      "src": "type_name [30866,30870]",
      "dest": "type_name [30872,30876]"
    },
    {
      "src": "type_name [34726,34733]",
      "dest": "type_name [34729,34736]"
    },
    {
      "src": "(: ( [38781,38782]",
      "dest": "(: ( [38784,38785]"
    },
    {
      "src": "identifier: value [23236,23241]",
      "dest": "identifier: value [23236,23241]"
    },
    {
      "src": "primitive_type [35010,35017]",
      "dest": "primitive_type [35013,35020]"
    },
    {
      "src": "event_paramater [34588,34612]",
      "dest": "event_paramater [34591,34615]"
    },
    {
      "src": "call_argument [24970,24975]",
      "dest": "call_argument [24970,24975]"
    },
    {
      "src": "identifier: _getOrderByID [38058,38071]",
      "dest": "identifier: _getOrderByID [38061,38074]"
    },
    {
      "src": "identifier: maker [36765,36770]",
      "dest": "identifier: maker [36768,36773]"
    },
    {
      "src": "return_type_definition [30016,30030]",
      "dest": "return_type_definition [30016,30030]"
    },
    {
      "src": "call_argument [15992,15994]",
      "dest": "call_argument [15992,15994]"
    },
    {
      "src": "primitive_type [18437,18442]",
      "dest": "primitive_type [18437,18442]"
    },
    {
      "src": "state_mutability [6694,6698]",
      "dest": "state_mutability [6694,6698]"
    },
    {
      "src": "}: } [33700,33701]",
      "dest": "}: } [33703,33704]"
    },
    {
      "src": "memory: memory [17933,17939]",
      "dest": "memory: memory [17933,17939]"
    },
    {
      "src": "call_argument [2022,2031]",
      "dest": "call_argument [2022,2031]"
    },
    {
      "src": "type_cast_expression [2871,2881]",
      "dest": "type_cast_expression [2871,2881]"
    },
    {
      "src": "): ) [20509,20510]",
      "dest": "): ) [20509,20510]"
    },
    {
      "src": "): ) [19620,19621]",
      "dest": "): ) [19620,19621]"
    },
    {
      "src": "call_argument [38688,38700]",
      "dest": "call_argument [38691,38703]"
    },
    {
      "src": "member_expression [38194,38204]",
      "dest": "member_expression [38197,38207]"
    },
    {
      "src": "identifier: transferAmount [39739,39753]",
      "dest": "identifier: transferAmount [39742,39756]"
    },
    {
      "src": ".: . [39105,39106]",
      "dest": ".: . [39108,39109]"
    },
    {
      "src": "public: public [2801,2807]",
      "dest": "public: public [2801,2807]"
    },
    {
      "src": "comment: /**      * @dev Prevents a contract from calling itself, directly or indirectly.      * Calling a `nonReentrant` function from another `nonReentrant`      * function is not supported. It is possible to prevent this from happening      * by making the `nonReentrant` function external, and make it call a      * `private` function that does the actual work.      */ [32868,33238]",
      "dest": "comment: /**      * @dev Prevents a contract from calling itself, directly or indirectly.      * Calling a `nonReentrant` function from another `nonReentrant`      * function is not supported. It is possible to prevent this from happening      * by making the `nonReentrant` function external, and make it call a      * `private` function that does the actual work.      */ [32871,33241]"
    },
    {
      "src": ",: , [17993,17994]",
      "dest": ",: , [17993,17994]"
    },
    {
      "src": "identifier: isAvailable [37043,37054]",
      "dest": "identifier: isAvailable [37046,37057]"
    },
    {
      "src": "primitive_type [6674,6681]",
      "dest": "primitive_type [6674,6681]"
    },
    {
      "src": "type_name [29762,29766]",
      "dest": "type_name [29762,29766]"
    },
    {
      "src": "internal: internal [20511,20519]",
      "dest": "internal: internal [20511,20519]"
    },
    {
      "src": "): ) [19122,19123]",
      "dest": "): ) [19122,19123]"
    },
    {
      "src": ",: , [23297,23298]",
      "dest": ",: , [23297,23298]"
    },
    {
      "src": "primitive_type [14362,14369]",
      "dest": "primitive_type [14362,14369]"
    },
    {
      "src": ",: , [37939,37940]",
      "dest": ",: , [37942,37943]"
    },
    {
      "src": "state_mutability [27185,27189]",
      "dest": "state_mutability [27185,27189]"
    },
    {
      "src": "identifier: data [17989,17993]",
      "dest": "identifier: data [17989,17993]"
    },
    {
      "src": "type_name [16928,16933]",
      "dest": "type_name [16928,16933]"
    },
    {
      "src": "function_body [39592,39641]",
      "dest": "function_body [39595,39644]"
    },
    {
      "src": "state_mutability [30011,30015]",
      "dest": "state_mutability [30011,30015]"
    },
    {
      "src": "function: function [23496,23504]",
      "dest": "function: function [23496,23504]"
    },
    {
      "src": "identifier: order [36301,36306]",
      "dest": "identifier: order [36304,36309]"
    },
    {
      "src": "(: ( [37147,37148]",
      "dest": "(: ( [37150,37151]"
    },
    {
      "src": "comment: /**      * @dev Returns the number of tokens in ``owner``'s account.      */ [26833,26911]",
      "dest": "comment: /**      * @dev Returns the number of tokens in ``owner``'s account.      */ [26833,26911]"
    },
    {
      "src": "member_expression [23252,23267]",
      "dest": "member_expression [23252,23267]"
    },
    {
      "src": "constructor: constructor [1877,1888]",
      "dest": "constructor: constructor [1877,1888]"
    },
    {
      "src": "primitive_type [40233,40237]",
      "dest": "primitive_type [40245,40249]"
    },
    {
      "src": "bool: bool [5847,5851]",
      "dest": "bool: bool [5847,5851]"
    },
    {
      "src": "event_paramater [34809,34822]",
      "dest": "event_paramater [34812,34825]"
    },
    {
      "src": "(: ( [37660,37661]",
      "dest": "(: ( [37663,37664]"
    },
    {
      "src": "call_argument [38609,38621]",
      "dest": "call_argument [38612,38624]"
    },
    {
      "src": "call_argument [19169,19173]",
      "dest": "call_argument [19169,19173]"
    },
    {
      "src": "parameter [27159,27174]",
      "dest": "parameter [27159,27174]"
    },
    {
      "src": "primitive_type [34671,34678]",
      "dest": "primitive_type [34674,34681]"
    },
    {
      "src": "identifier: success [20994,21001]",
      "dest": "identifier: success [20994,21001]"
    },
    {
      "src": "identifier: _copyrightFee [35116,35129]",
      "dest": "identifier: _copyrightFee [35119,35132]"
    },
    {
      "src": "type_name [4618,4622]",
      "dest": "type_name [4618,4622]"
    },
    {
      "src": "state_variable_declaration [34465,34495]",
      "dest": "state_variable_declaration [34468,34498]"
    },
    {
      "src": "type_name [22159,22166]",
      "dest": "type_name [22159,22166]"
    },
    {
      "src": "identifier: a [7216,7217]",
      "dest": "identifier: a [7216,7217]"
    },
    {
      "src": "identifier: account [11243,11250]",
      "dest": "identifier: account [11243,11250]"
    },
    {
      "src": "call_expression [25176,25206]",
      "dest": "call_expression [25176,25206]"
    },
    {
      "src": "(: ( [18755,18756]",
      "dest": "(: ( [18755,18756]"
    },
    {
      "src": "function: function [39191,39199]",
      "dest": "function: function [39194,39202]"
    },
    {
      "src": "identifier: msg [37661,37664]",
      "dest": "identifier: msg [37664,37667]"
    },
    {
      "src": "string_literal [33380,33413]",
      "dest": "string_literal [33383,33416]"
    },
    {
      "src": "call_argument [19816,19828]",
      "dest": "call_argument [19816,19828]"
    },
    {
      "src": "memory: memory [24561,24567]",
      "dest": "memory: memory [24561,24567]"
    },
    {
      "src": "identifier: tokenAddressCached [36499,36517]",
      "dest": "identifier: tokenAddressCached [36502,36520]"
    },
    {
      "src": "call_expression [41205,41286]",
      "dest": "call_expression [41214,41295]"
    },
    {
      "src": "internal: internal [9918,9926]",
      "dest": "internal: internal [9918,9926]"
    },
    {
      "src": "identifier: returndata [21402,21412]",
      "dest": "identifier: returndata [21402,21412]"
    },
    {
      "src": "!: ! [35235,35236]",
      "dest": "!: ! [35238,35239]"
    },
    {
      "src": "address: address [23541,23548]",
      "dest": "address: address [23541,23548]"
    },
    {
      "src": "bytes: bytes [20711,20716]",
      "dest": "bytes: bytes [20711,20716]"
    },
    {
      "src": "struct_field_assignment [15976,15990]",
      "dest": "struct_field_assignment [15976,15990]"
    },
    {
      "src": "): ) [18725,18726]",
      "dest": "): ) [18725,18726]"
    },
    {
      "src": "binary_expression [41213,41238]",
      "dest": "binary_expression [41222,41247]"
    },
    {
      "src": "function_definition [29092,29147]",
      "dest": "function_definition [29092,29147]"
    },
    {
      "src": "visibility [3120,3126]",
      "dest": "visibility [3120,3126]"
    },
    {
      "src": "constructor: constructor [32795,32806]",
      "dest": "constructor: constructor [32798,32809]"
    },
    {
      "src": "function: function [30983,30991]",
      "dest": "function: function [30989,30997]"
    },
    {
      "src": "(: ( [23820,23821]",
      "dest": "(: ( [23820,23821]"
    },
    {
      "src": "): ) [25205,25206]",
      "dest": "): ) [25205,25206]"
    },
    {
      "src": "call_argument [9137,9149]",
      "dest": "call_argument [9137,9149]"
    },
    {
      "src": ",: , [22456,22457]",
      "dest": ",: , [22456,22457]"
    },
    {
      "src": "): ) [41115,41116]",
      "dest": "): ) [41124,41125]"
    },
    {
      "src": "identifier: msg [37911,37914]",
      "dest": "identifier: msg [37914,37917]"
    },
    {
      "src": "identifier: order [38406,38411]",
      "dest": "identifier: order [38409,38414]"
    },
    {
      "src": "identifier: mul [40658,40661]",
      "dest": "identifier: mul [40667,40670]"
    },
    {
      "src": "identifier: Copyright [30957,30966]",
      "dest": "identifier: Copyright [30963,30972]"
    },
    {
      "src": "string_literal [37373,37406]",
      "dest": "string_literal [37376,37409]"
    },
    {
      "src": "identifier: _NOT_ENTERED [32840,32852]",
      "dest": "identifier: _NOT_ENTERED [32843,32855]"
    },
    {
      "src": "variable_declaration_tuple [38311,38366]",
      "dest": "variable_declaration_tuple [38314,38369]"
    },
    {
      "src": "type_name [34338,34342]",
      "dest": "type_name [34341,34345]"
    },
    {
      "src": "internal: internal [20089,20097]",
      "dest": "internal: internal [20089,20097]"
    },
    {
      "src": "call_argument [37603,37607]",
      "dest": "call_argument [37606,37610]"
    },
    {
      "src": ".: . [25179,25180]",
      "dest": ".: . [25179,25180]"
    },
    {
      "src": ".: . [23707,23708]",
      "dest": ".: . [23707,23708]"
    },
    {
      "src": "parameter [10769,10776]",
      "dest": "parameter [10769,10776]"
    },
    {
      "src": "\": \" [8503,8504]",
      "dest": "\": \" [8503,8504]"
    },
    {
      "src": "return: return [1021,1027]",
      "dest": "return: return [1021,1027]"
    },
    {
      "src": ",: , [11548,11549]",
      "dest": ",: , [11548,11549]"
    },
    {
      "src": "parameter [9890,9916]",
      "dest": "parameter [9890,9916]"
    },
    {
      "src": "return_type_definition [6699,6716]",
      "dest": "return_type_definition [6699,6716]"
    },
    {
      "src": "(: ( [36742,36743]",
      "dest": "(: ( [36745,36746]"
    },
    {
      "src": "type_name [20070,20075]",
      "dest": "type_name [20070,20075]"
    },
    {
      "src": ",: , [18580,18581]",
      "dest": ",: , [18580,18581]"
    },
    {
      "src": ",: , [37671,37672]",
      "dest": ",: , [37674,37675]"
    },
    {
      "src": "parameter [35582,35606]",
      "dest": "parameter [35585,35609]"
    },
    {
      "src": ",: , [13590,13591]",
      "dest": ",: , [13590,13591]"
    },
    {
      "src": "function: function [17828,17836]",
      "dest": "function: function [17828,17836]"
    },
    {
      "src": "function: function [5465,5473]",
      "dest": "function: function [5465,5473]"
    },
    {
      "src": "identifier: msg [1028,1031]",
      "dest": "identifier: msg [1028,1031]"
    },
    {
      "src": "identifier: Copyright [40139,40148]",
      "dest": "identifier: Copyright [40151,40160]"
    },
    {
      "src": "(: ( [9867,9868]",
      "dest": "(: ( [9867,9868]"
    },
    {
      "src": "identifier: to [22365,22367]",
      "dest": "identifier: to [22365,22367]"
    },
    {
      "src": "call_argument [23704,23773]",
      "dest": "call_argument [23704,23773]"
    },
    {
      "src": "primitive_type [28576,28583]",
      "dest": "primitive_type [28576,28583]"
    },
    {
      "src": "identifier: encodeWithSelector [24047,24065]",
      "dest": "identifier: encodeWithSelector [24047,24065]"
    },
    {
      "src": "bytes: bytes [24555,24560]",
      "dest": "bytes: bytes [24555,24560]"
    },
    {
      "src": "): ) [30000,30001]",
      "dest": "): ) [30000,30001]"
    },
    {
      "src": "type_name [30025,30029]",
      "dest": "type_name [30025,30029]"
    },
    {
      "src": ",: , [5811,5812]",
      "dest": ",: , [5811,5812]"
    },
    {
      "src": "): ) [3295,3296]",
      "dest": "): ) [3295,3296]"
    },
    {
      "src": "call_argument [15820,15851]",
      "dest": "call_argument [15820,15851]"
    },
    {
      "src": "): ) [1943,1944]",
      "dest": "): ) [1943,1944]"
    },
    {
      "src": "identifier: tokenID [39126,39133]",
      "dest": "identifier: tokenID [39129,39136]"
    },
    {
      "src": "call_argument [39120,39133]",
      "dest": "call_argument [39123,39136]"
    },
    {
      "src": "(: ( [13108,13109]",
      "dest": "(: ( [13108,13109]"
    },
    {
      "src": "{: { [21162,21163]",
      "dest": "{: { [21162,21163]"
    },
    {
      "src": "function: function [4866,4874]",
      "dest": "function: function [4866,4874]"
    },
    {
      "src": "identifier: newAllowance [23601,23613]",
      "dest": "identifier: newAllowance [23601,23613]"
    },
    {
      "src": "type_name [38423,38429]",
      "dest": "type_name [38426,38432]"
    },
    {
      "src": "bool: bool [12694,12698]",
      "dest": "bool: bool [12694,12698]"
    },
    {
      "src": "type_name [16875,16882]",
      "dest": "type_name [16875,16882]"
    },
    {
      "src": "identifier: copyrightFee [40547,40559]",
      "dest": "identifier: copyrightFee [40556,40568]"
    },
    {
      "src": "constant: constant [32733,32741]",
      "dest": "constant: constant [32736,32744]"
    },
    {
      "src": "call_argument [35971,36188]",
      "dest": "call_argument [35974,36191]"
    },
    {
      "src": "type_name [11235,11242]",
      "dest": "type_name [11235,11242]"
    },
    {
      "src": "return_type_definition [13100,13114]",
      "dest": "return_type_definition [13100,13114]"
    },
    {
      "src": ",: , [15956,15957]",
      "dest": ",: , [15956,15957]"
    },
    {
      "src": "type_name [13307,13314]",
      "dest": "type_name [13307,13314]"
    },
    {
      "src": "(: ( [36883,36884]",
      "dest": "(: ( [36886,36887]"
    },
    {
      "src": "variable_declaration [37235,37253]",
      "dest": "variable_declaration [37238,37256]"
    },
    {
      "src": "identifier: require [10789,10796]",
      "dest": "identifier: require [10789,10796]"
    },
    {
      "src": "function_body [6717,6808]",
      "dest": "function_body [6717,6808]"
    },
    {
      "src": "identifier: tokenToPay [38561,38571]",
      "dest": "identifier: tokenToPay [38564,38574]"
    },
    {
      "src": ",: , [38350,38351]",
      "dest": ",: , [38353,38354]"
    },
    {
      "src": "(: ( [18572,18573]",
      "dest": "(: ( [18572,18573]"
    },
    {
      "src": "call_argument [40694,40712]",
      "dest": "call_argument [40703,40721]"
    },
    {
      "src": "parameter [30957,30973]",
      "dest": "parameter [30963,30979]"
    },
    {
      "src": "): ) [7798,7799]",
      "dest": "): ) [7798,7799]"
    },
    {
      "src": "uint256: uint256 [32763,32770]",
      "dest": "uint256: uint256 [32766,32773]"
    },
    {
      "src": "address: address [37163,37170]",
      "dest": "address: address [37166,37173]"
    },
    {
      "src": "identifier: success [20799,20806]",
      "dest": "identifier: success [20799,20806]"
    },
    {
      "src": "binary_expression [23235,23297]",
      "dest": "binary_expression [23235,23297]"
    },
    {
      "src": "parameter [4253,4262]",
      "dest": "parameter [4253,4262]"
    },
    {
      "src": "call_argument [23727,23749]",
      "dest": "call_argument [23727,23749]"
    },
    {
      "src": "memory: memory [20113,20119]",
      "dest": "memory: memory [20113,20119]"
    },
    {
      "src": "identifier: sub [6659,6662]",
      "dest": "identifier: sub [6659,6662]"
    },
    {
      "src": "type_name [13040,13047]",
      "dest": "type_name [13040,13047]"
    },
    {
      "src": "primitive_type [23558,23565]",
      "dest": "primitive_type [23558,23565]"
    },
    {
      "src": "identifier: maker [40976,40981]",
      "dest": "identifier: maker [40985,40990]"
    },
    {
      "src": "identifier: value [23860,23865]",
      "dest": "identifier: value [23860,23865]"
    },
    {
      "src": "(: ( [40818,40819]",
      "dest": "(: ( [40827,40828]"
    },
    {
      "src": "identifier: size [14746,14750]",
      "dest": "identifier: size [14746,14750]"
    },
    {
      "src": "type_name [18376,18383]",
      "dest": "type_name [18376,18383]"
    },
    {
      "src": "{: { [9950,9951]",
      "dest": "{: { [9950,9951]"
    },
    {
      "src": "(: ( [5892,5893]",
      "dest": "(: ( [5892,5893]"
    },
    {
      "src": "identifier: owner [2130,2135]",
      "dest": "identifier: owner [2130,2135]"
    },
    {
      "src": "parameter [6663,6672]",
      "dest": "parameter [6663,6672]"
    },
    {
      "src": "call_argument [8471,8476]",
      "dest": "call_argument [8471,8476]"
    },
    {
      "src": "pure: pure [4604,4608]",
      "dest": "pure: pure [4604,4608]"
    },
    {
      "src": "{: { [18740,18741]",
      "dest": "{: { [18740,18741]"
    },
    {
      "src": "memory: memory [9057,9063]",
      "dest": "memory: memory [9057,9063]"
    },
    {
      "src": "): ) [5932,5933]",
      "dest": "): ) [5932,5933]"
    },
    {
      "src": "public: public [39267,39273]",
      "dest": "public: public [39270,39276]"
    },
    {
      "src": "(: ( [35543,35544]",
      "dest": "(: ( [35546,35547]"
    },
    {
      "src": "assignment_expression [36276,36306]",
      "dest": "assignment_expression [36279,36309]"
    },
    {
      "src": "identifier: _ [33523,33524]",
      "dest": "identifier: _ [33526,33527]"
    },
    {
      "src": "address: address [35094,35101]",
      "dest": "address: address [35097,35104]"
    },
    {
      "src": "identifier: erc721AddressWithCopyright [35285,35311]",
      "dest": "identifier: erc721AddressWithCopyright [35288,35314]"
    },
    {
      "src": "mapping: mapping [34465,34472]",
      "dest": "mapping: mapping [34468,34475]"
    },
    {
      "src": "=: = [38441,38442]",
      "dest": "=: = [38444,38445]"
    },
    {
      "src": "identifier: b [8471,8472]",
      "dest": "identifier: b [8471,8472]"
    },
    {
      "src": "identifier: transferAmount [38317,38331]",
      "dest": "identifier: transferAmount [38320,38334]"
    },
    {
      "src": "uint: uint [38333,38337]",
      "dest": "uint: uint [38336,38340]"
    },
    {
      "src": ".: . [23257,23258]",
      "dest": ".: . [23257,23258]"
    },
    {
      "src": "return_statement [21018,21036]",
      "dest": "return_statement [21018,21036]"
    },
    {
      "src": "): ) [4671,4672]",
      "dest": "): ) [4671,4672]"
    },
    {
      "src": "internal: internal [7800,7808]",
      "dest": "internal: internal [7800,7808]"
    },
    {
      "src": "identifier: errorMessage [17329,17341]",
      "dest": "identifier: errorMessage [17329,17341]"
    },
    {
      "src": "identifier: _maker [40827,40833]",
      "dest": "identifier: _maker [40836,40842]"
    },
    {
      "src": "returns: returns [9932,9939]",
      "dest": "returns: returns [9932,9939]"
    },
    {
      "src": "identifier: spender [23283,23290]",
      "dest": "identifier: spender [23283,23290]"
    },
    {
      "src": ",: , [35859,35860]",
      "dest": ",: , [35862,35863]"
    },
    {
      "src": "uint256: uint256 [5532,5539]",
      "dest": "uint256: uint256 [5532,5539]"
    },
    {
      "src": "comment: /**      * @dev Leaves the contract without owner. It will not be possible to call      * `onlyOwner` functions anymore. Can only be called by the current owner.      *      * NOTE: Renouncing ownership will leave the contract without an owner,      * thereby removing any functionality that is only available to the owner.      */ [2429,2766]",
      "dest": "comment: /**      * @dev Leaves the contract without owner. It will not be possible to call      * `onlyOwner` functions anymore. Can only be called by the current owner.      *      * NOTE: Renouncing ownership will leave the contract without an owner,      * thereby removing any functionality that is only available to the owner.      */ [2429,2766]"
    },
    {
      "src": "primitive_type [8398,8405]",
      "dest": "primitive_type [8398,8405]"
    },
    {
      "src": "type_name [9868,9875]",
      "dest": "type_name [9868,9875]"
    },
    {
      "src": "(: ( [12642,12643]",
      "dest": "(: ( [12642,12643]"
    },
    {
      "src": ":: : [36171,36172]",
      "dest": ":: : [36174,36175]"
    },
    {
      "src": "returns: returns [6699,6706]",
      "dest": "returns: returns [6699,6706]"
    },
    {
      "src": "parameter [29984,30000]",
      "dest": "parameter [29984,30000]"
    },
    {
      "src": "comment: // File: contracts/proxy/Dependencies/Ownable.sol [1051,1100]",
      "dest": "comment: // File: contracts/proxy/Dependencies/Ownable.sol [1051,1100]"
    },
    {
      "src": ",: , [40833,40834]",
      "dest": ",: , [40842,40843]"
    },
    {
      "src": "comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [24593,24701]",
      "dest": "comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [24593,24701]"
    },
    {
      "src": "parameter [17927,17939]",
      "dest": "parameter [17927,17939]"
    },
    {
      "src": "primitive_type [20890,20895]",
      "dest": "primitive_type [20890,20895]"
    },
    {
      "src": "type_name [40233,40237]",
      "dest": "type_name [40245,40249]"
    },
    {
      "src": "identifier: erc721AddressWithCopyright [39872,39898]",
      "dest": "identifier: erc721AddressWithCopyright [39875,39901]"
    },
    {
      "src": "call_expression [2333,2401]",
      "dest": "call_expression [2333,2401]"
    },
    {
      "src": "parameter [11584,11588]",
      "dest": "parameter [11584,11588]"
    },
    {
      "src": "comment: /**      * @dev Approve or remove `operator` as an operator for the caller.      * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.      *      * Requirements:      *      * - The `operator` cannot be the caller.      *      * Emits an {ApprovalForAll} event.      */ [29393,29711]",
      "dest": "comment: /**      * @dev Approve or remove `operator` as an operator for the caller.      * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.      *      * Requirements:      *      * - The `operator` cannot be the caller.      *      * Emits an {ApprovalForAll} event.      */ [29393,29711]"
    },
    {
      "src": "type_name [28562,28569]",
      "dest": "type_name [28562,28569]"
    },
    {
      "src": "type_name [18437,18442]",
      "dest": "type_name [18437,18442]"
    },
    {
      "src": "call_argument [23473,23478]",
      "dest": "call_argument [23473,23478]"
    },
    {
      "src": "identifier: tokenID [37583,37590]",
      "dest": "identifier: tokenID [37586,37593]"
    },
    {
      "src": ",: , [26808,26809]",
      "dest": ",: , [26808,26809]"
    },
    {
      "src": "primitive_type [24936,24941]",
      "dest": "primitive_type [24936,24941]"
    },
    {
      "src": "): ) [34685,34686]",
      "dest": "): ) [34688,34689]"
    },
    {
      "src": "emit: emit [39425,39429]",
      "dest": "emit: emit [39428,39432]"
    },
    {
      "src": "event_paramater [35111,35129]",
      "dest": "event_paramater [35114,35132]"
    },
    {
      "src": ",: , [22367,22368]",
      "dest": ",: , [22367,22368]"
    },
    {
      "src": "memory: memory [17367,17373]",
      "dest": "memory: memory [17367,17373]"
    },
    {
      "src": "parameter [36884,36897]",
      "dest": "parameter [36887,36900]"
    },
    {
      "src": ",: , [35092,35093]",
      "dest": ",: , [35095,35096]"
    },
    {
      "src": "identifier: newOwner [1760,1768]",
      "dest": "identifier: newOwner [1760,1768]"
    },
    {
      "src": "identifier: msg [35990,35993]",
      "dest": "identifier: msg [35993,35996]"
    },
    {
      "src": "}: } [2207,2208]",
      "dest": "}: } [2207,2208]"
    },
    {
      "src": "(: ( [4286,4287]",
      "dest": "(: ( [4286,4287]"
    },
    {
      "src": "): ) [21412,21413]",
      "dest": "): ) [21412,21413]"
    },
    {
      "src": "(: ( [26760,26761]",
      "dest": "(: ( [26760,26761]"
    },
    {
      "src": "external: external [11096,11104]",
      "dest": "external: external [11096,11104]"
    },
    {
      "src": "identifier: Ownable [1629,1636]",
      "dest": "identifier: Ownable [1629,1636]"
    },
    {
      "src": "type_name [4287,4291]",
      "dest": "type_name [4287,4291]"
    },
    {
      "src": "{: { [4633,4634]",
      "dest": "{: { [4633,4634]"
    },
    {
      "src": "internal: internal [5503,5511]",
      "dest": "internal: internal [5503,5511]"
    },
    {
      "src": "call_expression [16960,17020]",
      "dest": "call_expression [16960,17020]"
    },
    {
      "src": "(: ( [2346,2347]",
      "dest": "(: ( [2346,2347]"
    },
    {
      "src": "type_name [34573,34577]",
      "dest": "type_name [34576,34580]"
    },
    {
      "src": "identifier: maker [41219,41224]",
      "dest": "identifier: maker [41228,41233]"
    },
    {
      "src": "): ) [36846,36847]",
      "dest": "): ) [36849,36850]"
    },
    {
      "src": "identifier: b [9887,9888]",
      "dest": "identifier: b [9887,9888]"
    },
    {
      "src": "address: address [34671,34678]",
      "dest": "address: address [34674,34681]"
    },
    {
      "src": "view: view [30011,30015]",
      "dest": "view: view [30011,30015]"
    },
    {
      "src": "struct: struct [34003,34009]",
      "dest": "struct: struct [34006,34012]"
    },
    {
      "src": "identifier: c [5299,5300]",
      "dest": "identifier: c [5299,5300]"
    },
    {
      "src": "\": \" [16987,16988]",
      "dest": "\": \" [16987,16988]"
    },
    {
      "src": "primitive_type [35608,35612]",
      "dest": "primitive_type [35611,35615]"
    },
    {
      "src": "event_paramater [13307,13327]",
      "dest": "event_paramater [13307,13327]"
    },
    {
      "src": "(: ( [2909,2910]",
      "dest": "(: ( [2909,2910]"
    },
    {
      "src": "struct_member [34199,34212]",
      "dest": "struct_member [34202,34215]"
    },
    {
      "src": "visibility [29778,29786]",
      "dest": "visibility [29778,29786]"
    },
    {
      "src": "false [37057,37062]",
      "dest": "false [37060,37065]"
    },
    {
      "src": "contract_body [13748,21595]",
      "dest": "contract_body [13748,21595]"
    },
    {
      "src": "identifier: order [36792,36797]",
      "dest": "identifier: order [36795,36800]"
    },
    {
      "src": "type_alias [22146,22154]",
      "dest": "type_alias [22146,22154]"
    },
    {
      "src": "): ) [6683,6684]",
      "dest": "): ) [6683,6684]"
    },
    {
      "src": ",: , [22315,22316]",
      "dest": ",: , [22315,22316]"
    },
    {
      "src": "inheritance_specifier [1640,1647]",
      "dest": "inheritance_specifier [1640,1647]"
    },
    {
      "src": ",: , [27969,27970]",
      "dest": ",: , [27969,27970]"
    },
    {
      "src": "(: ( [28561,28562]",
      "dest": "(: ( [28561,28562]"
    },
    {
      "src": "if: if [5873,5875]",
      "dest": "if: if [5873,5875]"
    },
    {
      "src": "{: { [21350,21351]",
      "dest": "{: { [21350,21351]"
    },
    {
      "src": "identifier: data [18756,18760]",
      "dest": "identifier: data [18756,18760]"
    },
    {
      "src": "function_definition [29943,30031]",
      "dest": "function_definition [29943,30031]"
    },
    {
      "src": "=: = [40166,40167]",
      "dest": "=: = [40178,40179]"
    },
    {
      "src": "{: { [8452,8453]",
      "dest": "{: { [8452,8453]"
    },
    {
      "src": "string: string [19478,19484]",
      "dest": "string: string [19478,19484]"
    },
    {
      "src": "{: { [39592,39593]",
      "dest": "{: { [39595,39596]"
    },
    {
      "src": "type_name [29969,29976]",
      "dest": "type_name [29969,29976]"
    },
    {
      "src": "yul_evm_builtin [21435,21441]",
      "dest": "yul_evm_builtin [21435,21441]"
    },
    {
      "src": "identifier: _getTransferAndCopyrightFeeAndAuthor [38369,38405]",
      "dest": "identifier: _getTransferAndCopyrightFeeAndAuthor [38372,38408]"
    },
    {
      "src": "identifier: encodeWithSelector [22321,22339]",
      "dest": "identifier: encodeWithSelector [22321,22339]"
    },
    {
      "src": "(: ( [26019,26020]",
      "dest": "(: ( [26019,26020]"
    },
    {
      "src": "parameter [35567,35580]",
      "dest": "parameter [35570,35583]"
    },
    {
      "src": "uint256: uint256 [6266,6273]",
      "dest": "uint256: uint256 [6266,6273]"
    },
    {
      "src": "return_statement [17386,17446]",
      "dest": "return_statement [17386,17446]"
    },
    {
      "src": "): ) [18760,18761]",
      "dest": "): ) [18760,18761]"
    },
    {
      "src": "=: = [6276,6277]",
      "dest": "=: = [6276,6277]"
    },
    {
      "src": "\": \" [16023,16024]",
      "dest": "\": \" [16023,16024]"
    },
    {
      "src": "=: = [37254,37255]",
      "dest": "=: = [37257,37258]"
    },
    {
      "src": "return_type_definition [5517,5540]",
      "dest": "return_type_definition [5517,5540]"
    },
    {
      "src": "): ) [20119,20120]",
      "dest": "): ) [20119,20120]"
    },
    {
      "src": "uint: uint [39543,39547]",
      "dest": "uint: uint [39546,39550]"
    },
    {
      "src": "comment: /**       * @dev Safely transfers `tokenId` token from `from` to `to`.       *       * Requirements:       *       * - `from` cannot be the zero address.       * - `to` cannot be the zero address.       * - `tokenId` token must exist and be owned by `from`.       * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.       * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.       *       * Emits a {Transfer} event.       */ [30039,30619]",
      "dest": "comment: /**       * @dev Safely transfers `tokenId` token from `from` to `to`.       *       * Requirements:       *       * - `from` cannot be the zero address.       * - `to` cannot be the zero address.       * - `tokenId` token must exist and be owned by `from`.       * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.       * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.       *       * Emits a {Transfer} event.       */ [30039,30619]"
    },
    {
      "src": "function: function [35531,35539]",
      "dest": "function: function [35534,35542]"
    },
    {
      "src": "primitive_type [25200,25204]",
      "dest": "primitive_type [25200,25204]"
    },
    {
      "src": "identifier: value [22926,22931]",
      "dest": "identifier: value [22926,22931]"
    },
    {
      "src": ".: . [37582,37583]",
      "dest": ".: . [37585,37586]"
    },
    {
      "src": "internal: internal [5824,5832]",
      "dest": "internal: internal [5824,5832]"
    },
    {
      "src": "internal: internal [822,830]",
      "dest": "internal: internal [822,830]"
    },
    {
      "src": "primitive_type [12643,12650]",
      "dest": "primitive_type [12643,12650]"
    },
    {
      "src": "identifier: approve [12635,12642]",
      "dest": "identifier: approve [12635,12642]"
    },
    {
      "src": "binary_expression [39849,39898]",
      "dest": "binary_expression [39852,39901]"
    },
    {
      "src": "call_argument [37681,37685]",
      "dest": "call_argument [37684,37688]"
    },
    {
      "src": "type_name [29121,29128]",
      "dest": "type_name [29121,29128]"
    },
    {
      "src": "function_body [23876,24121]",
      "dest": "function_body [23876,24121]"
    },
    {
      "src": "identifier: msgSender [2022,2031]",
      "dest": "identifier: msgSender [2022,2031]"
    },
    {
      "src": "identifier: copyrightFee [40628,40640]",
      "dest": "identifier: copyrightFee [40637,40649]"
    },
    {
      "src": "identifier: order [39087,39092]",
      "dest": "identifier: order [39090,39095]"
    },
    {
      "src": "identifier: owner [11901,11906]",
      "dest": "identifier: owner [11901,11906]"
    },
    {
      "src": "call_expression [23616,23666]",
      "dest": "call_expression [23616,23666]"
    },
    {
      "src": "primitive_type [34473,34477]",
      "dest": "primitive_type [34476,34480]"
    },
    {
      "src": "function_body [5541,5620]",
      "dest": "function_body [5541,5620]"
    },
    {
      "src": "(: ( [30924,30925]",
      "dest": "(: ( [30930,30931]"
    },
    {
      "src": "/: / [7907,7908]",
      "dest": "/: / [7907,7908]"
    },
    {
      "src": "indexed: indexed [13315,13322]",
      "dest": "indexed: indexed [13315,13322]"
    },
    {
      "src": "event_definition [34638,34687]",
      "dest": "event_definition [34641,34690]"
    },
    {
      "src": "): ) [38961,38962]",
      "dest": "): ) [38964,38965]"
    },
    {
      "src": "expression_statement [40881,40951]",
      "dest": "expression_statement [40890,40960]"
    },
    {
      "src": "call_struct_argument [36011,36039]",
      "dest": "call_struct_argument [36014,36042]"
    },
    {
      "src": "{: { [4302,4303]",
      "dest": "{: { [4302,4303]"
    },
    {
      "src": "identifier: selector [24080,24088]",
      "dest": "identifier: selector [24080,24088]"
    },
    {
      "src": "uint256: uint256 [27983,27990]",
      "dest": "uint256: uint256 [27983,27990]"
    },
    {
      "src": "identifier: returndata [21025,21035]",
      "dest": "identifier: returndata [21025,21035]"
    },
    {
      "src": "variable_declaration [5213,5222]",
      "dest": "variable_declaration [5213,5222]"
    },
    {
      "src": "(: ( [35741,35742]",
      "dest": "(: ( [35744,35745]"
    },
    {
      "src": "primitive_type [22901,22908]",
      "dest": "primitive_type [22901,22908]"
    },
    {
      "src": "string_literal [6744,6776]",
      "dest": "string_literal [6744,6776]"
    },
    {
      "src": "}: } [37118,37119]",
      "dest": "}: } [37121,37122]"
    },
    {
      "src": "number_literal: 0 [5183,5184]",
      "dest": "number_literal: 0 [5183,5184]"
    },
    {
      "src": "address: address [23268,23275]",
      "dest": "address: address [23268,23275]"
    },
    {
      "src": ",: , [9037,9038]",
      "dest": ",: , [9037,9038]"
    },
    {
      "src": "identifier: _orderID [35068,35076]",
      "dest": "identifier: _orderID [35071,35079]"
    },
    {
      "src": "(: ( [37545,37546]",
      "dest": "(: ( [37548,37549]"
    },
    {
      "src": "function: function [28540,28548]",
      "dest": "function: function [28540,28548]"
    },
    {
      "src": "type_name [33887,33891]",
      "dest": "type_name [33890,33894]"
    },
    {
      "src": "number_literal: 0 [41236,41237]",
      "dest": "number_literal: 0 [41245,41246]"
    },
    {
      "src": "\": \" [37760,37761]",
      "dest": "\": \" [37763,37764]"
    },
    {
      "src": "expression_statement [39003,39040]",
      "dest": "expression_statement [39006,39043]"
    },
    {
      "src": "member_expression [38923,38934]",
      "dest": "member_expression [38926,38937]"
    },
    {
      "src": ".: . [38953,38954]",
      "dest": ".: . [38956,38957]"
    },
    {
      "src": "identifier: TakeOrder [34799,34808]",
      "dest": "identifier: TakeOrder [34802,34811]"
    },
    {
      "src": "yul_path [21450,21460]",
      "dest": "yul_path [21450,21460]"
    },
    {
      "src": "identifier: order [39100,39105]",
      "dest": "identifier: order [39103,39108]"
    },
    {
      "src": "identifier: sender [36618,36624]",
      "dest": "identifier: sender [36621,36627]"
    },
    {
      "src": "parameter [15743,15757]",
      "dest": "parameter [15743,15757]"
    },
    {
      "src": "function_definition [9855,10020]",
      "dest": "function_definition [9855,10020]"
    },
    {
      "src": "variable_declaration [40126,40165]",
      "dest": "variable_declaration [40135,40177]"
    },
    {
      "src": "memory: memory [20922,20928]",
      "dest": "memory: memory [20922,20928]"
    },
    {
      "src": "uint: uint [33841,33845]",
      "dest": "uint: uint [33844,33848]"
    },
    {
      "src": "comment: // Any calls to nonReentrant after this point will fail [33427,33482]",
      "dest": "comment: // Any calls to nonReentrant after this point will fail [33430,33485]"
    },
    {
      "src": "parameter [26020,26038]",
      "dest": "parameter [26020,26038]"
    },
    {
      "src": "identifier: IERC20 [23527,23533]",
      "dest": "identifier: IERC20 [23527,23533]"
    },
    {
      "src": "(: ( [4572,4573]",
      "dest": "(: ( [4572,4573]"
    },
    {
      "src": "(: ( [38071,38072]",
      "dest": "(: ( [38074,38075]"
    },
    {
      "src": "(: ( [19753,19754]",
      "dest": "(: ( [19753,19754]"
    },
    {
      "src": "type_name [34264,34271]",
      "dest": "type_name [34267,34274]"
    },
    {
      "src": "identifier: a [4697,4698]",
      "dest": "identifier: a [4697,4698]"
    },
    {
      "src": "call_argument [25176,25206]",
      "dest": "call_argument [25176,25206]"
    },
    {
      "src": "\": \" [35874,35875]",
      "dest": "\": \" [35877,35878]"
    },
    {
      "src": "identifier: onlyInitOnce [35236,35248]",
      "dest": "identifier: onlyInitOnce [35239,35251]"
    },
    {
      "src": "identifier: data [20758,20762]",
      "dest": "identifier: data [20758,20762]"
    },
    {
      "src": "parameter [18341,18355]",
      "dest": "parameter [18341,18355]"
    },
    {
      "src": "call_expression [37625,37687]",
      "dest": "call_expression [37628,37690]"
    },
    {
      "src": "): ) [5611,5612]",
      "dest": "): ) [5611,5612]"
    },
    {
      "src": "identifier: value [17902,17907]",
      "dest": "identifier: value [17902,17907]"
    },
    {
      "src": "number_literal: 0 [4670,4671]",
      "dest": "number_literal: 0 [4670,4671]"
    },
    {
      "src": "]: ] [37041,37042]",
      "dest": "]: ] [37044,37045]"
    },
    {
      "src": "identifier: Address [22179,22186]",
      "dest": "identifier: Address [22179,22186]"
    },
    {
      "src": "): ) [6253,6254]",
      "dest": "): ) [6253,6254]"
    },
    {
      "src": "identifier: recipient [13064,13073]",
      "dest": "identifier: recipient [13064,13073]"
    },
    {
      "src": "memory: memory [16897,16903]",
      "dest": "memory: memory [16897,16903]"
    },
    {
      "src": "comment: // 3. store order [36202,36219]",
      "dest": "comment: // 3. store order [36205,36222]"
    },
    {
      "src": "{: { [35216,35217]",
      "dest": "{: { [35219,35220]"
    },
    {
      "src": "event_definition [34503,34632]",
      "dest": "event_definition [34506,34635]"
    },
    {
      "src": "identifier: spender [22909,22916]",
      "dest": "identifier: spender [22909,22916]"
    },
    {
      "src": "member_expression [38886,38904]",
      "dest": "member_expression [38889,38907]"
    },
    {
      "src": "expression_statement [20554,20624]",
      "dest": "expression_statement [20554,20624]"
    },
    {
      "src": ",: , [40991,40992]",
      "dest": ",: , [41000,41001]"
    },
    {
      "src": ">: > [35856,35857]",
      "dest": ">: > [35859,35860]"
    },
    {
      "src": "type_name [23852,23859]",
      "dest": "type_name [23852,23859]"
    },
    {
      "src": "primitive_type [18376,18383]",
      "dest": "primitive_type [18376,18383]"
    },
    {
      "src": "function_body [20979,21592]",
      "dest": "function_body [20979,21592]"
    },
    {
      "src": ".: . [38891,38892]",
      "dest": ".: . [38894,38895]"
    },
    {
      "src": "): ) [40949,40950]",
      "dest": "): ) [40958,40959]"
    },
    {
      "src": "}: } [25264,25265]",
      "dest": "}: } [25264,25265]"
    },
    {
      "src": "solidity_version: 0.6.12 [99,105]",
      "dest": "solidity_version: 0.6.12 [99,105]"
    },
    {
      "src": "call_argument [23410,23415]",
      "dest": "call_argument [23410,23415]"
    },
    {
      "src": "function_definition [11874,11957]",
      "dest": "function_definition [11874,11957]"
    },
    {
      "src": "uint: uint [34920,34924]",
      "dest": "uint: uint [34923,34927]"
    },
    {
      "src": "string [35874,35903]",
      "dest": "string [35877,35906]"
    },
    {
      "src": "modifier_invocation [2816,2825]",
      "dest": "modifier_invocation [2816,2825]"
    },
    {
      "src": "member_expression [40889,40907]",
      "dest": "member_expression [40898,40916]"
    },
    {
      "src": "identifier: copyrightFee [38338,38350]",
      "dest": "identifier: copyrightFee [38341,38353]"
    },
    {
      "src": "{: { [681,682]",
      "dest": "{: { [681,682]"
    },
    {
      "src": "number_literal: 0 [40351,40352]",
      "dest": "number_literal: 0 [40360,40361]"
    },
    {
      "src": "identifier: copyright [40601,40610]",
      "dest": "identifier: copyright [40610,40619]"
    },
    {
      "src": "type_name [9028,9035]",
      "dest": "type_name [9028,9035]"
    },
    {
      "src": "(: ( [10695,10696]",
      "dest": "(: ( [10695,10696]"
    },
    {
      "src": "parameter [20054,20068]",
      "dest": "parameter [20054,20068]"
    },
    {
      "src": "identifier: _price [37941,37947]",
      "dest": "identifier: _price [37944,37950]"
    },
    {
      "src": "(: ( [17414,17415]",
      "dest": "(: ( [17414,17415]"
    },
    {
      "src": "): ) [33266,33267]",
      "dest": "): ) [33269,33270]"
    },
    {
      "src": "for: for [22155,22158]",
      "dest": "for: for [22155,22158]"
    },
    {
      "src": "type_name [19529,19534]",
      "dest": "type_name [19529,19534]"
    },
    {
      "src": "parameter [4933,4940]",
      "dest": "parameter [4933,4940]"
    },
    {
      "src": "external: external [29138,29146]",
      "dest": "external: external [29138,29146]"
    },
    {
      "src": "identifier: errorMessage [18405,18417]",
      "dest": "identifier: errorMessage [18405,18417]"
    },
    {
      "src": "identifier: getApproved [36518,36529]",
      "dest": "identifier: getApproved [36521,36532]"
    },
    {
      "src": "{: { [32819,32820]",
      "dest": "{: { [32822,32823]"
    },
    {
      "src": "}: } [39640,39641]",
      "dest": "}: } [39643,39644]"
    },
    {
      "src": "function: function [7067,7075]",
      "dest": "function: function [7067,7075]"
    },
    {
      "src": "parameter [26974,26989]",
      "dest": "parameter [26974,26989]"
    },
    {
      "src": "function: function [35139,35147]",
      "dest": "function: function [35142,35150]"
    },
    {
      "src": "binary_expression [7851,7856]",
      "dest": "binary_expression [7851,7856]"
    },
    {
      "src": "(: ( [9968,9969]",
      "dest": "(: ( [9968,9969]"
    },
    {
      "src": "identifier: msg [38782,38785]",
      "dest": "identifier: msg [38785,38788]"
    },
    {
      "src": "address: address [36626,36633]",
      "dest": "address: address [36629,36636]"
    },
    {
      "src": "}: } [6807,6808]",
      "dest": "}: } [6807,6808]"
    },
    {
      "src": "memory: memory [18708,18714]",
      "dest": "memory: memory [18708,18714]"
    },
    {
      "src": "tuple_expression [5292,5301]",
      "dest": "tuple_expression [5292,5301]"
    },
    {
      "src": "binary_expression [25046,25067]",
      "dest": "binary_expression [25046,25067]"
    },
    {
      "src": "identifier: length [21150,21156]",
      "dest": "identifier: length [21150,21156]"
    },
    {
      "src": "parameter [22432,22444]",
      "dest": "parameter [22432,22444]"
    },
    {
      "src": ",: , [11906,11907]",
      "dest": ",: , [11906,11907]"
    },
    {
      "src": "identifier: c [5221,5222]",
      "dest": "identifier: c [5221,5222]"
    },
    {
      "src": "identifier: transferAmount [40643,40657]",
      "dest": "identifier: transferAmount [40652,40666]"
    },
    {
      "src": "type_name [17894,17901]",
      "dest": "type_name [17894,17901]"
    },
    {
      "src": "primitive_type [6212,6219]",
      "dest": "primitive_type [6212,6219]"
    },
    {
      "src": "assignment_expression [39800,39834]",
      "dest": "assignment_expression [39803,39837]"
    },
    {
      "src": "expression_statement [35227,35273]",
      "dest": "expression_statement [35230,35276]"
    },
    {
      "src": ",: , [34877,34878]",
      "dest": ",: , [34880,34881]"
    },
    {
      "src": ",: , [34669,34670]",
      "dest": ",: , [34672,34673]"
    },
    {
      "src": "memory: memory [35950,35956]",
      "dest": "memory: memory [35953,35959]"
    },
    {
      "src": "call_argument [20168,20172]",
      "dest": "call_argument [20168,20172]"
    },
    {
      "src": "identifier: author [38359,38365]",
      "dest": "identifier: author [38362,38368]"
    },
    {
      "src": "(: ( [17926,17927]",
      "dest": "(: ( [17926,17927]"
    },
    {
      "src": "memory: memory [40149,40155]",
      "dest": "memory: memory [40161,40167]"
    },
    {
      "src": "identifier: a [6209,6210]",
      "dest": "identifier: a [6209,6210]"
    },
    {
      "src": "identifier: transferFrom [28549,28561]",
      "dest": "identifier: transferFrom [28549,28561]"
    },
    {
      "src": "identifier: _callOptionalReturn [22493,22512]",
      "dest": "identifier: _callOptionalReturn [22493,22512]"
    },
    {
      "src": "uint: uint [34879,34883]",
      "dest": "uint: uint [34882,34886]"
    },
    {
      "src": "yul_evm_builtin [21396,21401]",
      "dest": "yul_evm_builtin [21396,21401]"
    },
    {
      "src": "): ) [38002,38003]",
      "dest": "): ) [38005,38006]"
    },
    {
      "src": "state_variable_declaration [33887,33915]",
      "dest": "state_variable_declaration [33890,33918]"
    },
    {
      "src": ",: , [3296,3297]",
      "dest": ",: , [3296,3297]"
    },
    {
      "src": "identifier: require [6294,6301]",
      "dest": "identifier: require [6294,6301]"
    },
    {
      "src": "comment: // price of ERC20 token to pay [34298,34328]",
      "dest": "comment: // price of ERC20 token to pay [34301,34331]"
    },
    {
      "src": "primitive_type [20965,20970]",
      "dest": "primitive_type [20965,20970]"
    },
    {
      "src": "event_paramater [35010,35033]",
      "dest": "event_paramater [35013,35036]"
    },
    {
      "src": "uint256: uint256 [9941,9948]",
      "dest": "uint256: uint256 [9941,9948]"
    },
    {
      "src": "function_body [24582,25272]",
      "dest": "function_body [24582,25272]"
    },
    {
      "src": "(: ( [2798,2799]",
      "dest": "(: ( [2798,2799]"
    },
    {
      "src": "type_name [11119,11126]",
      "dest": "type_name [11119,11126]"
    },
    {
      "src": "identifier: staticcall [19743,19753]",
      "dest": "identifier: staticcall [19743,19753]"
    },
    {
      "src": "identifier: onlyInitOnce [35484,35496]",
      "dest": "identifier: onlyInitOnce [35487,35499]"
    },
    {
      "src": "uint: uint [37189,37193]",
      "dest": "uint: uint [37192,37196]"
    },
    {
      "src": "address: address [34840,34847]",
      "dest": "address: address [34843,34850]"
    },
    {
      "src": "event_paramater [26556,26580]",
      "dest": "event_paramater [26556,26580]"
    },
    {
      "src": "call_expression [18729,18761]",
      "dest": "call_expression [18729,18761]"
    },
    {
      "src": "user_defined_type [38037,38042]",
      "dest": "user_defined_type [38040,38045]"
    },
    {
      "src": "event_paramater [34894,34918]",
      "dest": "event_paramater [34897,34921]"
    },
    {
      "src": "indexed: indexed [13337,13344]",
      "dest": "indexed: indexed [13337,13344]"
    },
    {
      "src": "function_body [36908,37119]",
      "dest": "function_body [36911,37122]"
    },
    {
      "src": "expression_statement [22290,22377]",
      "dest": "expression_statement [22290,22377]"
    },
    {
      "src": "(: ( [38488,38489]",
      "dest": "(: ( [38491,38492]"
    },
    {
      "src": "call_argument [35742,35750]",
      "dest": "call_argument [35745,35753]"
    },
    {
      "src": "identifier: require [38092,38099]",
      "dest": "identifier: require [38095,38102]"
    },
    {
      "src": "primitive_type [19459,19464]",
      "dest": "primitive_type [19459,19464]"
    },
    {
      "src": "type_name [26341,26348]",
      "dest": "type_name [26341,26348]"
    },
    {
      "src": "function_definition [802,1044]",
      "dest": "function_definition [802,1044]"
    },
    {
      "src": "): ) [3392,3393]",
      "dest": "): ) [3392,3393]"
    },
    {
      "src": "true [4691,4695]",
      "dest": "true [4691,4695]"
    },
    {
      "src": "identifier: data [17888,17892]",
      "dest": "identifier: data [17888,17892]"
    },
    {
      "src": "(: ( [39542,39543]",
      "dest": "(: ( [39545,39546]"
    },
    {
      "src": "type_name [13544,13551]",
      "dest": "type_name [13544,13551]"
    },
    {
      "src": "identifier: maker [38185,38190]",
      "dest": "identifier: maker [38188,38193]"
    },
    {
      "src": "): ) [24112,24113]",
      "dest": "): ) [24112,24113]"
    },
    {
      "src": "if_statement [7145,7166]",
      "dest": "if_statement [7145,7166]"
    },
    {
      "src": "call_argument [7212,7222]",
      "dest": "call_argument [7212,7222]"
    },
    {
      "src": "comment: // not the official address of ERC721 token [39915,39958]",
      "dest": "comment: // not the official address of ERC721 token [39918,39961]"
    },
    {
      "src": "array_access [37026,37042]",
      "dest": "array_access [37029,37045]"
    },
    {
      "src": ",: , [38666,38667]",
      "dest": ",: , [38669,38670]"
    },
    {
      "src": "parameter [4242,4251]",
      "dest": "parameter [4242,4251]"
    },
    {
      "src": "): ) [41158,41159]",
      "dest": "): ) [41167,41168]"
    },
    {
      "src": "\": \" [41284,41285]",
      "dest": "\": \" [41293,41294]"
    },
    {
      "src": ".: . [37103,37104]",
      "dest": ".: . [37106,37107]"
    },
    {
      "src": "primitive_type [15716,15731]",
      "dest": "primitive_type [15716,15731]"
    },
    {
      "src": "identifier: copyright [40156,40165]",
      "dest": "identifier: copyright [40168,40177]"
    },
    {
      "src": "): ) [23772,23773]",
      "dest": "): ) [23772,23773]"
    },
    {
      "src": "identifier: Approval [26524,26532]",
      "dest": "identifier: Approval [26524,26532]"
    },
    {
      "src": "(: ( [13306,13307]",
      "dest": "(: ( [13306,13307]"
    },
    {
      "src": "type_name [34809,34813]",
      "dest": "type_name [34812,34816]"
    },
    {
      "src": "if: if [7145,7147]",
      "dest": "if: if [7145,7147]"
    },
    {
      "src": "): ) [18830,18831]",
      "dest": "): ) [18830,18831]"
    },
    {
      "src": "identifier: trySub [4566,4572]",
      "dest": "identifier: trySub [4566,4572]"
    },
    {
      "src": "): ) [23378,23379]",
      "dest": "): ) [23378,23379]"
    },
    {
      "src": "(: ( [19572,19573]",
      "dest": "(: ( [19572,19573]"
    },
    {
      "src": "identifier: IERC20 [38443,38449]",
      "dest": "identifier: IERC20 [38446,38452]"
    },
    {
      "src": "identifier: _maker [34542,34548]",
      "dest": "identifier: _maker [34545,34551]"
    },
    {
      "src": "address: address [33953,33960]",
      "dest": "address: address [33956,33963]"
    },
    {
      "src": "identifier: IERC20 [23821,23827]",
      "dest": "identifier: IERC20 [23821,23827]"
    },
    {
      "src": "identifier: errorMessage [10732,10744]",
      "dest": "identifier: errorMessage [10732,10744]"
    },
    {
      "src": "type_name [22458,22465]",
      "dest": "type_name [22458,22465]"
    },
    {
      "src": "identifier: approve [24072,24079]",
      "dest": "identifier: approve [24072,24079]"
    },
    {
      "src": "identifier: getFeeRateDenominator [30992,31013]",
      "dest": "identifier: feeRateDenominator [30998,31016]"
    },
    {
      "src": "(: ( [7079,7080]",
      "dest": "(: ( [7079,7080]"
    },
    {
      "src": "block_statement [21519,21574]",
      "dest": "block_statement [21519,21574]"
    },
    {
      "src": "false: false [39034,39039]",
      "dest": "false: false [39037,39042]"
    },
    {
      "src": "library_declaration [4061,10851]",
      "dest": "library_declaration [4061,10851]"
    },
    {
      "src": "(: ( [37269,37270]",
      "dest": "(: ( [37272,37273]"
    },
    {
      "src": "function: function [30903,30911]",
      "dest": "function: function [30909,30917]"
    },
    {
      "src": ",: , [26782,26783]",
      "dest": ",: , [26782,26783]"
    },
    {
      "src": "type_name [34056,34063]",
      "dest": "type_name [34059,34066]"
    },
    {
      "src": "block_statement [21162,21513]",
      "dest": "block_statement [21162,21513]"
    },
    {
      "src": "primitive_type [741,756]",
      "dest": "primitive_type [741,756]"
    },
    {
      "src": "): ) [40307,40308]",
      "dest": "): ) [40316,40317]"
    },
    {
      "src": "||: || [36562,36564]",
      "dest": "||: || [36565,36567]"
    },
    {
      "src": "parameter [37989,38002]",
      "dest": "parameter [37992,38005]"
    },
    {
      "src": "identifier: sender [780,786]",
      "dest": "identifier: sender [780,786]"
    },
    {
      "src": "identifier: _tokenID [36060,36068]",
      "dest": "identifier: _tokenID [36063,36071]"
    },
    {
      "src": "function_body [14408,14762]",
      "dest": "function_body [14408,14762]"
    },
    {
      "src": "if_statement [20990,21585]",
      "dest": "if_statement [20990,21585]"
    },
    {
      "src": "if: if [5174,5176]",
      "dest": "if: if [5174,5176]"
    },
    {
      "src": "uint256: uint256 [5481,5488]",
      "dest": "uint256: uint256 [5481,5488]"
    },
    {
      "src": "type_name [37471,37478]",
      "dest": "type_name [37474,37481]"
    },
    {
      "src": "address: address [35544,35551]",
      "dest": "address: address [35547,35554]"
    },
    {
      "src": "type_name [5853,5860]",
      "dest": "type_name [5853,5860]"
    },
    {
      "src": "identifier: b [10011,10012]",
      "dest": "identifier: b [10011,10012]"
    },
    {
      "src": "): ) [26823,26824]",
      "dest": "): ) [26823,26824]"
    },
    {
      "src": "\": \" [3337,3338]",
      "dest": "\": \" [3337,3338]"
    },
    {
      "src": "call_argument [38936,38946]",
      "dest": "call_argument [38939,38949]"
    },
    {
      "src": "member_expression [37100,37110]",
      "dest": "member_expression [37103,37113]"
    },
    {
      "src": "return_type_definition [20520,20542]",
      "dest": "return_type_definition [20520,20542]"
    },
    {
      "src": "uint: uint [30866,30870]",
      "dest": "uint: uint [30872,30876]"
    },
    {
      "src": "): ) [37607,37608]",
      "dest": "): ) [37610,37611]"
    },
    {
      "src": "identifier: tryDiv [5474,5480]",
      "dest": "identifier: tryDiv [5474,5480]"
    },
    {
      "src": "function: function [26917,26925]",
      "dest": "function: function [26917,26925]"
    },
    {
      "src": "type_name [6674,6681]",
      "dest": "type_name [6674,6681]"
    },
    {
      "src": "identifier: data [19754,19758]",
      "dest": "identifier: data [19754,19758]"
    },
    {
      "src": "type_name [37989,37993]",
      "dest": "type_name [37992,37996]"
    },
    {
      "src": "function_body [8452,8536]",
      "dest": "function_body [8452,8536]"
    },
    {
      "src": "identifier: tokenAddressCached [37479,37497]",
      "dest": "identifier: tokenAddressCached [37482,37500]"
    },
    {
      "src": "==: == [40982,40984]",
      "dest": "==: == [40991,40993]"
    },
    {
      "src": "type_name [30651,30658]",
      "dest": "type_name [30651,30658]"
    },
    {
      "src": "call_argument [38179,38204]",
      "dest": "call_argument [38182,38207]"
    },
    {
      "src": "primitive_type [20448,20455]",
      "dest": "primitive_type [20448,20455]"
    },
    {
      "src": "virtual: virtual [724,731]",
      "dest": "virtual: virtual [724,731]"
    },
    {
      "src": "call_expression [36974,37013]",
      "dest": "call_expression [36977,37016]"
    },
    {
      "src": "identifier: token [22894,22899]",
      "dest": "identifier: token [22894,22899]"
    },
    {
      "src": "): ) [1768,1769]",
      "dest": "): ) [1768,1769]"
    },
    {
      "src": "primitive_type [37148,37152]",
      "dest": "primitive_type [37151,37155]"
    },
    {
      "src": "primitive_type [30841,30848]",
      "dest": "primitive_type [30847,30854]"
    },
    {
      "src": "identifier: returndata [19804,19814]",
      "dest": "identifier: returndata [19804,19814]"
    },
    {
      "src": "comment: // File: contracts/Dependencies/IERC20.sol [10855,10897]",
      "dest": "comment: // File: contracts/Dependencies/IERC20.sol [10855,10897]"
    },
    {
      "src": "expression_statement [1955,1974]",
      "dest": "expression_statement [1955,1974]"
    },
    {
      "src": "identifier: tokenId [30930,30937]",
      "dest": "identifier: tokenId [30936,30943]"
    },
    {
      "src": "identifier: value [22369,22374]",
      "dest": "identifier: value [22369,22374]"
    },
    {
      "src": "member_expression [40323,40339]",
      "dest": "member_expression [40332,40348]"
    },
    {
      "src": "call_argument [38886,38904]",
      "dest": "call_argument [38889,38907]"
    },
    {
      "src": ".: . [38455,38456]",
      "dest": ".: . [38458,38459]"
    },
    {
      "src": "yul_path [14700,14704]",
      "dest": "yul_path [14700,14704]"
    },
    {
      "src": "identifier: IERC721 [26204,26211]",
      "dest": "identifier: IERC721 [26204,26211]"
    },
    {
      "src": "type_name [41102,41106]",
      "dest": "type_name [41111,41115]"
    },
    {
      "src": "type_cast_expression [2902,2912]",
      "dest": "type_cast_expression [2902,2912]"
    },
    {
      "src": "<=: <= [6738,6740]",
      "dest": "<=: <= [6738,6740]"
    },
    {
      "src": "state_variable_declaration [32669,32711]",
      "dest": "state_variable_declaration [32672,32714]"
    },
    {
      "src": "}: } [7917,7918]",
      "dest": "}: } [7917,7918]"
    },
    {
      "src": "boolean_literal [37057,37062]",
      "dest": "boolean_literal [37060,37065]"
    },
    {
      "src": "function_definition [7067,7287]",
      "dest": "function_definition [7067,7287]"
    },
    {
      "src": "identifier: _payTokenAddress [34902,34918]",
      "dest": "identifier: _payTokenAddress [34905,34921]"
    },
    {
      "src": "identifier: IERC721 [35711,35718]",
      "dest": "identifier: IERC721 [35714,35721]"
    },
    {
      "src": "): ) [1890,1891]",
      "dest": "): ) [1890,1891]"
    },
    {
      "src": "primitive_type [7778,7785]",
      "dest": "primitive_type [7778,7785]"
    },
    {
      "src": "call_argument [23440,23462]",
      "dest": "call_argument [23440,23462]"
    },
    {
      "src": "pure: pure [20951,20955]",
      "dest": "pure: pure [20951,20955]"
    },
    {
      "src": "): ) [3244,3245]",
      "dest": "): ) [3244,3245]"
    },
    {
      "src": "indexed: indexed [13575,13582]",
      "dest": "indexed: indexed [13575,13582]"
    },
    {
      "src": ".: . [23453,23454]",
      "dest": ".: . [23453,23454]"
    },
    {
      "src": "identifier: token [24970,24975]",
      "dest": "identifier: token [24970,24975]"
    },
    {
      "src": "identifier: approve [23446,23453]",
      "dest": "identifier: approve [23446,23453]"
    },
    {
      "src": "parameter [27957,27969]",
      "dest": "parameter [27957,27969]"
    },
    {
      "src": "): ) [34630,34631]",
      "dest": "): ) [34633,34634]"
    },
    {
      "src": "function_body [6255,6367]",
      "dest": "function_body [6255,6367]"
    },
    {
      "src": "address: address [11908,11915]",
      "dest": "address: address [11908,11915]"
    },
    {
      "src": "primitive_type [5213,5220]",
      "dest": "primitive_type [5213,5220]"
    },
    {
      "src": "identifier: isAvailable [34412,34423]",
      "dest": "identifier: isAvailable [34415,34426]"
    },
    {
      "src": "parameter [12660,12674]",
      "dest": "parameter [12660,12674]"
    },
    {
      "src": "indexed: indexed [26564,26571]",
      "dest": "indexed: indexed [26564,26571]"
    },
    {
      "src": "function_body [41159,41294]",
      "dest": "function_body [41168,41303]"
    },
    {
      "src": "identifier: _orderID [38658,38666]",
      "dest": "identifier: _orderID [38661,38669]"
    },
    {
      "src": "\": \" [18502,18503]",
      "dest": "\": \" [18502,18503]"
    },
    {
      "src": "(: ( [13039,13040]",
      "dest": "(: ( [13039,13040]"
    },
    {
      "src": "call_expression [23677,23774]",
      "dest": "call_expression [23677,23774]"
    },
    {
      "src": "returns: returns [39725,39732]",
      "dest": "returns: returns [39728,39735]"
    },
    {
      "src": "identifier: sub [40756,40759]",
      "dest": "identifier: sub [40765,40768]"
    },
    {
      "src": "[: [ [36282,36283]",
      "dest": "[: [ [36285,36286]"
    },
    {
      "src": ".: . [37664,37665]",
      "dest": ".: . [37667,37668]"
    },
    {
      "src": "memory: memory [19715,19721]",
      "dest": "memory: memory [19715,19721]"
    },
    {
      "src": "call_expression [7204,7260]",
      "dest": "call_expression [7204,7260]"
    },
    {
      "src": "call_expression [36453,36480]",
      "dest": "call_expression [36456,36483]"
    },
    {
      "src": "expression_statement [10789,10818]",
      "dest": "expression_statement [10789,10818]"
    },
    {
      "src": "call_argument [37911,37921]",
      "dest": "call_argument [37914,37924]"
    },
    {
      "src": "identifier: from [27965,27969]",
      "dest": "identifier: from [27965,27969]"
    },
    {
      "src": "type_name [7080,7087]",
      "dest": "type_name [7080,7087]"
    },
    {
      "src": "address: address [30841,30848]",
      "dest": "address: address [30847,30854]"
    },
    {
      "src": "function_definition [28540,28614]",
      "dest": "function_definition [28540,28614]"
    },
    {
      "src": "primitive_type [32763,32770]",
      "dest": "primitive_type [32766,32773]"
    },
    {
      "src": "identifier: c [4394,4395]",
      "dest": "identifier: c [4394,4395]"
    },
    {
      "src": "identifier: a [6795,6796]",
      "dest": "identifier: a [6795,6796]"
    },
    {
      "src": "primitive_type [18391,18397]",
      "dest": "primitive_type [18391,18397]"
    },
    {
      "src": "identifier: Erc721AddressWithCopyrightChanged [39430,39463]",
      "dest": "identifier: Erc721AddressWithCopyrightChanged [39433,39466]"
    },
    {
      "src": "): ) [16940,16941]",
      "dest": "): ) [16940,16941]"
    },
    {
      "src": "string_literal [19175,19214]",
      "dest": "string_literal [19175,19214]"
    },
    {
      "src": "(: ( [40094,40095]",
      "dest": "(: ( [40103,40104]"
    },
    {
      "src": "true: true [35499,35503]",
      "dest": "true: true [35502,35506]"
    },
    {
      "src": "call_expression [35703,35825]",
      "dest": "call_expression [35706,35828]"
    },
    {
      "src": "variable_declaration [38037,38055]",
      "dest": "variable_declaration [38040,38058]"
    },
    {
      "src": "type_name [34481,34486]",
      "dest": "type_name [34484,34489]"
    },
    {
      "src": "visibility [10746,10754]",
      "dest": "visibility [10746,10754]"
    },
    {
      "src": "identifier: this [878,882]",
      "dest": "identifier: this [878,882]"
    },
    {
      "src": "(: ( [21544,21545]",
      "dest": "(: ( [21544,21545]"
    },
    {
      "src": "uint: uint [34519,34523]",
      "dest": "uint: uint [34522,34526]"
    },
    {
      "src": "view: view [41126,41130]",
      "dest": "view: view [41135,41139]"
    },
    {
      "src": "identifier: IERC721 [37500,37507]",
      "dest": "identifier: IERC721 [37503,37510]"
    },
    {
      "src": "type_cast_expression [23632,23645]",
      "dest": "type_cast_expression [23632,23645]"
    },
    {
      "src": "type_name [19695,19699]",
      "dest": "type_name [19695,19699]"
    },
    {
      "src": "string [3298,3338]",
      "dest": "string [3298,3338]"
    },
    {
      "src": "primitive_type [35544,35551]",
      "dest": "primitive_type [35547,35554]"
    },
    {
      "src": "type_name [28588,28595]",
      "dest": "type_name [28588,28595]"
    },
    {
      "src": "): ) [36638,36639]",
      "dest": "): ) [36641,36642]"
    },
    {
      "src": "parameter [29969,29982]",
      "dest": "parameter [29969,29982]"
    },
    {
      "src": "bool: bool [5526,5530]",
      "dest": "bool: bool [5526,5530]"
    },
    {
      "src": "external: external [13091,13099]",
      "dest": "external: external [13091,13099]"
    },
    {
      "src": "primitive_type [20711,20716]",
      "dest": "primitive_type [20711,20716]"
    },
    {
      "src": ",: , [10716,10717]",
      "dest": ",: , [10716,10717]"
    },
    {
      "src": "type_name [19052,19059]",
      "dest": "type_name [19052,19059]"
    },
    {
      "src": "using: using [22173,22178]",
      "dest": "using: using [22173,22178]"
    },
    {
      "src": "interface_declaration [10975,13610]",
      "dest": "interface_declaration [10975,13610]"
    },
    {
      "src": "primitive_type [26761,26768]",
      "dest": "primitive_type [26761,26768]"
    },
    {
      "src": "member_expression [37311,37321]",
      "dest": "member_expression [37314,37324]"
    },
    {
      "src": "binary_expression [35711,35765]",
      "dest": "binary_expression [35714,35768]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [10999,11067]",
      "dest": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [10999,11067]"
    },
    {
      "src": ",: , [26554,26555]",
      "dest": ",: , [26554,26555]"
    },
    {
      "src": "comment: /**  * @dev Collection of functions related to the address type  */ [13661,13730]",
      "dest": "comment: /**  * @dev Collection of functions related to the address type  */ [13661,13730]"
    },
    {
      "src": "bytes: bytes [17296,17301]",
      "dest": "bytes: bytes [17296,17301]"
    },
    {
      "src": "identifier: tokenID [36050,36057]",
      "dest": "identifier: tokenID [36053,36060]"
    },
    {
      "src": "if_statement [5174,5203]",
      "dest": "if_statement [5174,5203]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [6375,6644]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [6375,6644]"
    },
    {
      "src": "primitive_type [19068,19073]",
      "dest": "primitive_type [19068,19073]"
    },
    {
      "src": "address: address [29109,29116]",
      "dest": "address: address [29109,29116]"
    },
    {
      "src": "identifier: b [6736,6737]",
      "dest": "identifier: b [6736,6737]"
    },
    {
      "src": "identifier: b [10715,10716]",
      "dest": "identifier: b [10715,10716]"
    },
    {
      "src": "type_name [33841,33845]",
      "dest": "type_name [33844,33848]"
    },
    {
      "src": "call_argument [23276,23280]",
      "dest": "call_argument [23276,23280]"
    },
    {
      "src": "identifier: onlyOwner [2816,2825]",
      "dest": "identifier: onlyOwner [2816,2825]"
    },
    {
      "src": "type_name [13109,13113]",
      "dest": "type_name [13109,13113]"
    },
    {
      "src": "identifier: this [37603,37607]",
      "dest": "identifier: this [37606,37610]"
    },
    {
      "src": "parameter [24555,24572]",
      "dest": "parameter [24555,24572]"
    },
    {
      "src": "identifier: returndata [20808,20818]",
      "dest": "identifier: returndata [20808,20818]"
    },
    {
      "src": "user_defined_type [37471,37478]",
      "dest": "user_defined_type [37474,37481]"
    },
    {
      "src": "constructor_definition [32795,32860]",
      "dest": "constructor_definition [32798,32863]"
    },
    {
      "src": "uint256: uint256 [4293,4300]",
      "dest": "uint256: uint256 [4293,4300]"
    },
    {
      "src": "identifier: tokenId [27167,27174]",
      "dest": "identifier: tokenId [27167,27174]"
    },
    {
      "src": ".: . [24046,24047]",
      "dest": ".: . [24046,24047]"
    },
    {
      "src": "identifier: tokenAddressCached [37546,37564]",
      "dest": "identifier: tokenAddressCached [37549,37567]"
    },
    {
      "src": "call_expression [23390,23480]",
      "dest": "call_expression [23390,23480]"
    },
    {
      "src": "visibility [7800,7808]",
      "dest": "visibility [7800,7808]"
    },
    {
      "src": ".: . [36617,36618]",
      "dest": ".: . [36620,36621]"
    },
    {
      "src": ":: : [36135,36136]",
      "dest": ":: : [36138,36139]"
    },
    {
      "src": "uint: uint [34711,34715]",
      "dest": "uint: uint [34714,34718]"
    },
    {
      "src": "modifier_invocation [37211,37223]",
      "dest": "modifier_invocation [37214,37226]"
    },
    {
      "src": "identifier: b [6682,6683]",
      "dest": "identifier: b [6682,6683]"
    },
    {
      "src": "binary_expression [7905,7910]",
      "dest": "binary_expression [7905,7910]"
    },
    {
      "src": "(: ( [39064,39065]",
      "dest": "(: ( [39067,39068]"
    },
    {
      "src": "return_type_definition [732,757]",
      "dest": "return_type_definition [732,757]"
    },
    {
      "src": "{: { [17375,17376]",
      "dest": "{: { [17375,17376]"
    },
    {
      "src": "(: ( [4690,4691]",
      "dest": "(: ( [4690,4691]"
    },
    {
      "src": "): ) [9108,9109]",
      "dest": "): ) [9108,9109]"
    },
    {
      "src": "call_argument [40662,40688]",
      "dest": "call_argument [40671,40697]"
    },
    {
      "src": "identifier: b [4261,4262]",
      "dest": "identifier: b [4261,4262]"
    },
    {
      "src": "identifier: target [17981,17987]",
      "dest": "identifier: target [17981,17987]"
    },
    {
      "src": "type_name [20711,20716]",
      "dest": "type_name [20711,20716]"
    },
    {
      "src": "address: address [36548,36555]",
      "dest": "address: address [36551,36558]"
    },
    {
      "src": "parameter [13040,13054]",
      "dest": "parameter [13040,13054]"
    },
    {
      "src": "tuple_expression [39979,40017]",
      "dest": "tuple_expression [39982,40020]"
    },
    {
      "src": "call_expression [38443,38472]",
      "dest": "call_expression [38446,38475]"
    },
    {
      "src": "type_cast_expression [15787,15800]",
      "dest": "type_cast_expression [15787,15800]"
    },
    {
      "src": "identifier: amount [15984,15990]",
      "dest": "identifier: amount [15984,15990]"
    },
    {
      "src": "primitive_type [33953,33960]",
      "dest": "primitive_type [33956,33963]"
    },
    {
      "src": "{: { [7134,7135]",
      "dest": "{: { [7134,7135]"
    },
    {
      "src": "identifier: order [39135,39140]",
      "dest": "identifier: order [39138,39143]"
    },
    {
      "src": "block_statement [39900,40029]",
      "dest": "block_statement [39903,40032]"
    },
    {
      "src": ",: , [22576,22577]",
      "dest": ",: , [22576,22577]"
    },
    {
      "src": "boolean_literal [5265,5270]",
      "dest": "boolean_literal [5265,5270]"
    },
    {
      "src": "identifier: target [20456,20462]",
      "dest": "identifier: target [20456,20462]"
    },
    {
      "src": "tuple_expression [5920,5933]",
      "dest": "tuple_expression [5920,5933]"
    },
    {
      "src": "parameter [19478,19504]",
      "dest": "parameter [19478,19504]"
    },
    {
      "src": "identifier: safeTransferFrom [38765,38781]",
      "dest": "identifier: safeTransferFrom [38768,38784]"
    },
    {
      "src": "identifier: tokenAddress [38892,38904]",
      "dest": "identifier: tokenAddress [38895,38907]"
    },
    {
      "src": "): ) [35207,35208]",
      "dest": "): ) [35210,35211]"
    },
    {
      "src": "emit_statement [39050,39176]",
      "dest": "emit_statement [39053,39179]"
    },
    {
      "src": "identifier: div [9864,9867]",
      "dest": "identifier: div [9864,9867]"
    },
    {
      "src": "comment: // but in exchange the refund on every call to nonReentrant will be lower in [32364,32440]",
      "dest": "comment: // but in exchange the refund on every call to nonReentrant will be lower in [32367,32443]"
    },
    {
      "src": "type_name [37235,37240]",
      "dest": "type_name [37238,37243]"
    },
    {
      "src": "}: } [16091,16092]",
      "dest": "}: } [16091,16092]"
    },
    {
      "src": "identifier: encodeWithSelector [23708,23726]",
      "dest": "identifier: encodeWithSelector [23708,23726]"
    },
    {
      "src": "primitive_type [24962,24969]",
      "dest": "primitive_type [24962,24969]"
    },
    {
      "src": "): ) [21557,21558]",
      "dest": "): ) [21557,21558]"
    },
    {
      "src": "identifier: data [16981,16985]",
      "dest": "identifier: data [16981,16985]"
    },
    {
      "src": "call_expression [35711,35751]",
      "dest": "call_expression [35714,35754]"
    },
    {
      "src": "): ) [37761,37762]",
      "dest": "): ) [37764,37765]"
    },
    {
      "src": "number_literal: 0 [35399,35400]",
      "dest": "number_literal: 0 [35402,35403]"
    },
    {
      "src": "\": \" [37373,37374]",
      "dest": "\": \" [37376,37377]"
    },
    {
      "src": "expression_statement [7204,7261]",
      "dest": "expression_statement [7204,7261]"
    },
    {
      "src": "address: address [39295,39302]",
      "dest": "address: address [39298,39305]"
    },
    {
      "src": "identifier: selector [22562,22570]",
      "dest": "identifier: selector [22562,22570]"
    },
    {
      "src": "(: ( [39623,39624]",
      "dest": "(: ( [39626,39627]"
    },
    {
      "src": "state_mutability [4913,4917]",
      "dest": "state_mutability [4913,4917]"
    },
    {
      "src": "event_paramater [34984,35008]",
      "dest": "event_paramater [34987,35011]"
    },
    {
      "src": "primitive_type [17296,17301]",
      "dest": "primitive_type [17296,17301]"
    },
    {
      "src": "address: address [35010,35017]",
      "dest": "address: address [35013,35020]"
    },
    {
      "src": "type_name [33872,33878]",
      "dest": "type_name [33875,33881]"
    },
    {
      "src": "type_name [35544,35551]",
      "dest": "type_name [35547,35554]"
    },
    {
      "src": "): ) [6776,6777]",
      "dest": "): ) [6776,6777]"
    },
    {
      "src": "bool: bool [14402,14406]",
      "dest": "bool: bool [14402,14406]"
    },
    {
      "src": "function_definition [22207,22384]",
      "dest": "function_definition [22207,22384]"
    },
    {
      "src": "return: return [5885,5891]",
      "dest": "return: return [5885,5891]"
    },
    {
      "src": "user_defined_type [23527,23533]",
      "dest": "user_defined_type [23527,23533]"
    },
    {
      "src": "identifier: Order [39579,39584]",
      "dest": "identifier: Order [39582,39587]"
    },
    {
      "src": "identifier: msg [38589,38592]",
      "dest": "identifier: msg [38592,38595]"
    },
    {
      "src": "string_literal [7224,7259]",
      "dest": "string_literal [7224,7259]"
    },
    {
      "src": "identifier: approve [29101,29108]",
      "dest": "identifier: approve [29101,29108]"
    },
    {
      "src": "type_name [12643,12650]",
      "dest": "type_name [12643,12650]"
    },
    {
      "src": "identifier: _orderID [37782,37790]",
      "dest": "identifier: _orderID [37785,37793]"
    },
    {
      "src": "return_type_definition [844,866]",
      "dest": "return_type_definition [844,866]"
    },
    {
      "src": "primitive_type [2871,2878]",
      "dest": "primitive_type [2871,2878]"
    },
    {
      "src": ",: , [24088,24089]",
      "dest": ",: , [24088,24089]"
    },
    {
      "src": ",: , [37161,37162]",
      "dest": ",: , [37164,37165]"
    },
    {
      "src": "parameter [5847,5851]",
      "dest": "parameter [5847,5851]"
    },
    {
      "src": "(: ( [7777,7778]",
      "dest": "(: ( [7777,7778]"
    },
    {
      "src": "primitive_type [34614,34618]",
      "dest": "primitive_type [34617,34621]"
    },
    {
      "src": ".: . [38592,38593]",
      "dest": ".: . [38595,38596]"
    },
    {
      "src": "indexed: indexed [26391,26398]",
      "dest": "indexed: indexed [26391,26398]"
    },
    {
      "src": "identifier: feeRateNumerator [40367,40383]",
      "dest": "identifier: feeRateNumerator [40376,40392]"
    },
    {
      "src": "event_paramater [34573,34586]",
      "dest": "event_paramater [34576,34589]"
    },
    {
      "src": ",: , [4695,4696]",
      "dest": ",: , [4695,4696]"
    },
    {
      "src": "(: ( [18796,18797]",
      "dest": "(: ( [18796,18797]"
    },
    {
      "src": "): ) [20832,20833]",
      "dest": "): ) [20832,20833]"
    },
    {
      "src": "expression_statement [3266,3340]",
      "dest": "expression_statement [3266,3340]"
    },
    {
      "src": "type_name [20483,20489]",
      "dest": "type_name [20483,20489]"
    },
    {
      "src": "event_paramater [34856,34877]",
      "dest": "event_paramater [34859,34880]"
    },
    {
      "src": "member_expression [18729,18740]",
      "dest": "member_expression [18729,18740]"
    },
    {
      "src": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [145,653]",
      "dest": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [145,653]"
    },
    {
      "src": "constructor_definition [1877,2040]",
      "dest": "constructor_definition [1877,2040]"
    },
    {
      "src": "primitive_type [19478,19484]",
      "dest": "primitive_type [19478,19484]"
    },
    {
      "src": "type_name [1912,1919]",
      "dest": "type_name [1912,1919]"
    },
    {
      "src": "uint256: uint256 [5213,5220]",
      "dest": "uint256: uint256 [5213,5220]"
    },
    {
      "src": "pure: pure [5833,5837]",
      "dest": "pure: pure [5833,5837]"
    },
    {
      "src": "indexed: indexed [13552,13559]",
      "dest": "indexed: indexed [13552,13559]"
    },
    {
      "src": "identifier: _msgSender [2352,2362]",
      "dest": "identifier: _msgSender [2352,2362]"
    },
    {
      "src": "primitive_type [19110,19115]",
      "dest": "primitive_type [19110,19115]"
    },
    {
      "src": "yul_assignment [14700,14728]",
      "dest": "yul_assignment [14700,14728]"
    },
    {
      "src": "visibility [32677,32684]",
      "dest": "visibility [32680,32687]"
    },
    {
      "src": "{: { [16942,16943]",
      "dest": "{: { [16942,16943]"
    },
    {
      "src": ",: , [20172,20173]",
      "dest": ",: , [20172,20173]"
    },
    {
      "src": "parameter [20448,20462]",
      "dest": "parameter [20448,20462]"
    },
    {
      "src": "identifier: returndata [21450,21460]",
      "dest": "identifier: returndata [21450,21460]"
    },
    {
      "src": "call_argument [17995,18000]",
      "dest": "call_argument [17995,18000]"
    },
    {
      "src": "returns: returns [20098,20105]",
      "dest": "returns: returns [20098,20105]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls [19634,19684]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls [19634,19684]"
    },
    {
      "src": "visibility [28000,28008]",
      "dest": "visibility [28000,28008]"
    },
    {
      "src": "identifier: require [25168,25175]",
      "dest": "identifier: require [25168,25175]"
    },
    {
      "src": "\": \" [20621,20622]",
      "dest": "\": \" [20621,20622]"
    },
    {
      "src": "uint256: uint256 [22159,22166]",
      "dest": "uint256: uint256 [22159,22166]"
    },
    {
      "src": "comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      * Can only be called by the current owner.      */ [2928,3069]",
      "dest": "comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      * Can only be called by the current owner.      */ [2928,3069]"
    },
    {
      "src": "comment: // safeApprove should only be called when setting an initial allowance, [22953,23024]",
      "dest": "comment: // safeApprove should only be called when setting an initial allowance, [22953,23024]"
    },
    {
      "src": "call_argument [24099,24111]",
      "dest": "call_argument [24099,24111]"
    },
    {
      "src": "call_argument [36461,36479]",
      "dest": "call_argument [36464,36482]"
    },
    {
      "src": ".: . [23915,23916]",
      "dest": ".: . [23915,23916]"
    },
    {
      "src": "return_statement [5186,5203]",
      "dest": "return_statement [5186,5203]"
    },
    {
      "src": "user_defined_type [40126,40148]",
      "dest": "user_defined_type [40135,40160]"
    },
    {
      "src": ",: , [40545,40546]",
      "dest": ",: , [40554,40555]"
    },
    {
      "src": "primitive_type [4584,4591]",
      "dest": "primitive_type [4584,4591]"
    },
    {
      "src": "}: } [41293,41294]",
      "dest": "}: } [41302,41303]"
    },
    {
      "src": "identifier: _fixedPrice [34925,34936]",
      "dest": "identifier: _fixedPrice [34928,34939]"
    },
    {
      "src": "(: ( [5177,5178]",
      "dest": "(: ( [5177,5178]"
    },
    {
      "src": "boolean_literal [39034,39039]",
      "dest": "boolean_literal [39037,39042]"
    },
    {
      "src": "): ) [30973,30974]",
      "dest": "): ) [30979,30980]"
    },
    {
      "src": "call_argument [37923,37939]",
      "dest": "call_argument [37926,37942]"
    },
    {
      "src": "\": \" [7858,7859]",
      "dest": "\": \" [7858,7859]"
    },
    {
      "src": "parameter [26063,26067]",
      "dest": "parameter [26063,26067]"
    },
    {
      "src": "identifier: erc721WithCopyrightCached [40168,40193]",
      "dest": "identifier: erc721WithCopyrightCached [40180,40205]"
    },
    {
      "src": "using_directive [33822,33846]",
      "dest": "using_directive [33825,33849]"
    },
    {
      "src": "): ) [36714,36715]",
      "dest": "): ) [36717,36718]"
    },
    {
      "src": "identifier: token [22310,22315]",
      "dest": "identifier: token [22310,22315]"
    },
    {
      "src": "member_expression [23440,23453]",
      "dest": "member_expression [23440,23453]"
    },
    {
      "src": "identifier: require [18554,18561]",
      "dest": "identifier: require [18554,18561]"
    },
    {
      "src": "{: { [21003,21004]",
      "dest": "{: { [21003,21004]"
    },
    {
      "src": "parameter [10696,10705]",
      "dest": "parameter [10696,10705]"
    },
    {
      "src": "type_name [18702,18707]",
      "dest": "type_name [18702,18707]"
    },
    {
      "src": "(: ( [740,741]",
      "dest": "(: ( [740,741]"
    },
    {
      "src": "identifier: _tokenID [35742,35750]",
      "dest": "identifier: _tokenID [35745,35753]"
    },
    {
      "src": ",: , [5530,5531]",
      "dest": ",: , [5530,5531]"
    },
    {
      "src": "address: address [13307,13314]",
      "dest": "address: address [13307,13314]"
    },
    {
      "src": "identifier: a [4890,4891]",
      "dest": "identifier: a [4890,4891]"
    },
    {
      "src": "tuple_expression [5892,5902]",
      "dest": "tuple_expression [5892,5902]"
    },
    {
      "src": "(: ( [18436,18437]",
      "dest": "(: ( [18436,18437]"
    },
    {
      "src": "address: address [12643,12650]",
      "dest": "address: address [12643,12650]"
    },
    {
      "src": "call_argument [38782,38792]",
      "dest": "call_argument [38785,38795]"
    },
    {
      "src": "=: = [38367,38368]",
      "dest": "=: = [38370,38371]"
    },
    {
      "src": "(: ( [35843,35844]",
      "dest": "(: ( [35846,35847]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [19845,20018]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [19845,20018]"
    },
    {
      "src": "identifier: c [6274,6275]",
      "dest": "identifier: c [6274,6275]"
    },
    {
      "src": "primitive_type [1744,1751]",
      "dest": "primitive_type [1744,1751]"
    },
    {
      "src": "event: event [13529,13534]",
      "dest": "event: event [13529,13534]"
    },
    {
      "src": "identifier: _erc721AddressWithCopyright [39387,39414]",
      "dest": "identifier: _erc721AddressWithCopyright [39390,39417]"
    },
    {
      "src": "^:  ^ [97,99]",
      "dest": "^:  ^ [97,99]"
    },
    {
      "src": "yul_identifier [21377,21392]",
      "dest": "yul_identifier [21377,21392]"
    },
    {
      "src": "identifier: tokenId [28596,28603]",
      "dest": "identifier: tokenId [28596,28603]"
    },
    {
      "src": "identifier: allowance [11883,11892]",
      "dest": "identifier: allowance [11883,11892]"
    },
    {
      "src": "\": \" [3298,3299]",
      "dest": "\": \" [3298,3299]"
    },
    {
      "src": "): ) [6339,6340]",
      "dest": "): ) [6339,6340]"
    },
    {
      "src": "return_statement [6788,6801]",
      "dest": "return_statement [6788,6801]"
    },
    {
      "src": ",: , [34571,34572]",
      "dest": ",: , [34574,34575]"
    },
    {
      "src": "external: external [30715,30723]",
      "dest": "external: external [30715,30723]"
    },
    {
      "src": "true: true [4388,4392]",
      "dest": "true: true [4388,4392]"
    },
    {
      "src": "(: ( [8397,8398]",
      "dest": "(: ( [8397,8398]"
    },
    {
      "src": "identifier: div [40690,40693]",
      "dest": "identifier: div [40699,40702]"
    },
    {
      "src": "identifier: c [7278,7279]",
      "dest": "identifier: c [7278,7279]"
    },
    {
      "src": "identifier: tryMul [4875,4881]",
      "dest": "identifier: tryMul [4875,4881]"
    },
    {
      "src": "primitive_type [22243,22250]",
      "dest": "primitive_type [22243,22250]"
    },
    {
      "src": "type_name [22191,22198]",
      "dest": "type_name [22191,22198]"
    },
    {
      "src": "boolean_literal [4691,4695]",
      "dest": "boolean_literal [4691,4695]"
    },
    {
      "src": "primitive_type [18341,18348]",
      "dest": "primitive_type [18341,18348]"
    },
    {
      "src": "function_body [1901,2040]",
      "dest": "function_body [1901,2040]"
    },
    {
      "src": "): ) [17373,17374]",
      "dest": "): ) [17373,17374]"
    },
    {
      "src": ".: . [22320,22321]",
      "dest": ".: . [22320,22321]"
    },
    {
      "src": "member_expression [23417,23439]",
      "dest": "member_expression [23417,23439]"
    },
    {
      "src": "identifier: a [4250,4251]",
      "dest": "identifier: a [4250,4251]"
    },
    {
      "src": "=: = [23908,23909]",
      "dest": "=: = [23908,23909]"
    },
    {
      "src": "event_paramater [13567,13590]",
      "dest": "event_paramater [13567,13590]"
    },
    {
      "src": "identifier: b [5877,5878]",
      "dest": "identifier: b [5877,5878]"
    },
    {
      "src": "contract_body [4078,10851]",
      "dest": "contract_body [4078,10851]"
    },
    {
      "src": "event_paramater [34519,34532]",
      "dest": "event_paramater [34522,34535]"
    },
    {
      "src": ",: , [36805,36806]",
      "dest": ",: , [36808,36809]"
    },
    {
      "src": "identifier: _tokenID [34578,34586]",
      "dest": "identifier: _tokenID [34581,34589]"
    },
    {
      "src": "memory: memory [18443,18449]",
      "dest": "memory: memory [18443,18449]"
    },
    {
      "src": "identifier: _callOptionalReturn [22290,22309]",
      "dest": "identifier: _callOptionalReturn [22290,22309]"
    },
    {
      "src": "function: function [7765,7773]",
      "dest": "function: function [7765,7773]"
    },
    {
      "src": "address: address [39774,39781]",
      "dest": "address: address [39777,39784]"
    },
    {
      "src": "type_name [6663,6670]",
      "dest": "type_name [6663,6670]"
    },
    {
      "src": "): ) [35824,35825]",
      "dest": "): ) [35827,35828]"
    },
    {
      "src": "address: address [29744,29751]",
      "dest": "address: address [29744,29751]"
    },
    {
      "src": "}: } [25274,25275]",
      "dest": "}: } [25274,25275]"
    },
    {
      "src": "return_statement [4683,4704]",
      "dest": "return_statement [4683,4704]"
    },
    {
      "src": "identifier: _newOwner [35198,35207]",
      "dest": "identifier: _newOwner [35201,35210]"
    },
    {
      "src": ".: . [22345,22346]",
      "dest": ".: . [22345,22346]"
    },
    {
      "src": "(: ( [23275,23276]",
      "dest": "(: ( [23275,23276]"
    },
    {
      "src": ".: . [36348,36349]",
      "dest": ".: . [36351,36352]"
    },
    {
      "src": "identifier: tokenId [29335,29342]",
      "dest": "identifier: tokenId [29335,29342]"
    },
    {
      "src": "return_type_definition [20956,20978]",
      "dest": "return_type_definition [20956,20978]"
    },
    {
      "src": "identifier: data [1032,1036]",
      "dest": "identifier: data [1032,1036]"
    },
    {
      "src": ",: , [5851,5852]",
      "dest": ",: , [5851,5852]"
    },
    {
      "src": "identifier: tokenAddress [40102,40114]",
      "dest": "identifier: tokenAddress [40111,40123]"
    },
    {
      "src": "pure: pure [7809,7813]",
      "dest": "pure: pure [7809,7813]"
    },
    {
      "src": "identifier: transferOwnership [3084,3101]",
      "dest": "identifier: transferOwnership [3084,3101]"
    },
    {
      "src": "primitive_type [34920,34924]",
      "dest": "primitive_type [34923,34927]"
    },
    {
      "src": "identifier: a [10007,10008]",
      "dest": "identifier: a [10007,10008]"
    },
    {
      "src": "identifier: fixedPrice [39164,39174]",
      "dest": "identifier: fixedPrice [39167,39177]"
    },
    {
      "src": "identifier: previousAddress [39303,39318]",
      "dest": "identifier: previousAddress [39306,39321]"
    },
    {
      "src": "function_definition [17828,18054]",
      "dest": "function_definition [17828,18054]"
    },
    {
      "src": "function: function [20024,20032]",
      "dest": "function: function [20024,20032]"
    },
    {
      "src": ",: , [38946,38947]",
      "dest": ",: , [38949,38950]"
    },
    {
      "src": "primitive_type [20107,20112]",
      "dest": "primitive_type [20107,20112]"
    },
    {
      "src": "user_defined_type [35944,35949]",
      "dest": "user_defined_type [35947,35952]"
    },
    {
      "src": "]: ] [37852,37853]",
      "dest": "]: ] [37855,37856]"
    },
    {
      "src": ",: , [37321,37322]",
      "dest": ",: , [37324,37325]"
    },
    {
      "src": "binary_expression [6302,6308]",
      "dest": "binary_expression [6302,6308]"
    },
    {
      "src": "primitive_type [29744,29751]",
      "dest": "primitive_type [29744,29751]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls [20636,20686]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls [20636,20686]"
    },
    {
      "src": "==: == [2349,2351]",
      "dest": "==: == [2349,2351]"
    },
    {
      "src": "identifier: tokenAddressCached [36432,36450]",
      "dest": "identifier: tokenAddressCached [36435,36453]"
    },
    {
      "src": "identifier: approve [23733,23740]",
      "dest": "identifier: approve [23733,23740]"
    },
    {
      "src": "(: ( [23526,23527]",
      "dest": "(: ( [23526,23527]"
    },
    {
      "src": "parameter [19068,19085]",
      "dest": "parameter [19068,19085]"
    },
    {
      "src": "type_cast_expression [36548,36561]",
      "dest": "type_cast_expression [36551,36564]"
    },
    {
      "src": "type_name [13329,13336]",
      "dest": "type_name [13329,13336]"
    },
    {
      "src": "(: ( [8442,8443]",
      "dest": "(: ( [8442,8443]"
    },
    {
      "src": "}: } [6366,6367]",
      "dest": "}: } [6366,6367]"
    },
    {
      "src": "primitive_type [8443,8450]",
      "dest": "primitive_type [8443,8450]"
    },
    {
      "src": "): ) [26949,26950]",
      "dest": "): ) [26949,26950]"
    },
    {
      "src": "call_expression [22317,22375]",
      "dest": "call_expression [22317,22375]"
    },
    {
      "src": "bool: bool [4287,4291]",
      "dest": "bool: bool [4287,4291]"
    },
    {
      "src": "identifier: orderIDCounter [36251,36265]",
      "dest": "identifier: orderIDCounter [36254,36268]"
    },
    {
      "src": "memory: memory [37241,37247]",
      "dest": "memory: memory [37244,37250]"
    },
    {
      "src": "function_body [867,1044]",
      "dest": "function_body [867,1044]"
    },
    {
      "src": ",: , [37921,37922]",
      "dest": ",: , [37924,37925]"
    },
    {
      "src": "parameter [11550,11564]",
      "dest": "parameter [11550,11564]"
    },
    {
      "src": "address: address [20054,20061]",
      "dest": "address: address [20054,20061]"
    },
    {
      "src": ",: , [35248,35249]",
      "dest": ",: , [35251,35252]"
    },
    {
      "src": "member_expression [38450,38471]",
      "dest": "member_expression [38453,38474]"
    },
    {
      "src": "identifier: msg [39075,39078]",
      "dest": "identifier: msg [39078,39081]"
    },
    {
      "src": "function: function [41079,41087]",
      "dest": "function: function [41088,41096]"
    },
    {
      "src": "identifier: b [10839,10840]",
      "dest": "identifier: b [10839,10840]"
    },
    {
      "src": "call_argument [40922,40949]",
      "dest": "call_argument [40931,40958]"
    },
    {
      "src": ",: , [17873,17874]",
      "dest": ",: , [17873,17874]"
    },
    {
      "src": "(: ( [23925,23926]",
      "dest": "(: ( [23925,23926]"
    },
    {
      "src": "array_access [37775,37791]",
      "dest": "array_access [37778,37794]"
    },
    {
      "src": "identifier: operator [29375,29383]",
      "dest": "identifier: operator [29375,29383]"
    },
    {
      "src": "contract_body [22133,25275]",
      "dest": "contract_body [22133,25275]"
    },
    {
      "src": "abstract: abstract [31869,31877]",
      "dest": "abstract: abstract [31872,31880]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [11136,11210]",
      "dest": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [11136,11210]"
    },
    {
      "src": "event: event [34793,34798]",
      "dest": "event: event [34796,34801]"
    },
    {
      "src": "yul_function_call [14708,14728]",
      "dest": "yul_function_call [14708,14728]"
    },
    {
      "src": "}: } [5619,5620]",
      "dest": "}: } [5619,5620]"
    },
    {
      "src": "{: { [15975,15976]",
      "dest": "{: { [15975,15976]"
    },
    {
      "src": "call_expression [40881,40950]",
      "dest": "call_expression [40890,40959]"
    },
    {
      "src": "primitive_type [2167,2174]",
      "dest": "primitive_type [2167,2174]"
    },
    {
      "src": "expression_statement [23677,23775]",
      "dest": "expression_statement [23677,23775]"
    },
    {
      "src": "uint: uint [35111,35115]",
      "dest": "uint: uint [35114,35118]"
    },
    {
      "src": "uint256: uint256 [4624,4631]",
      "dest": "uint256: uint256 [4624,4631]"
    },
    {
      "src": "address: address [26363,26370]",
      "dest": "address: address [26363,26370]"
    },
    {
      "src": "variable_declaration [38312,38331]",
      "dest": "variable_declaration [38315,38334]"
    },
    {
      "src": "identifier: a [8523,8524]",
      "dest": "identifier: a [8523,8524]"
    },
    {
      "src": "call_expression [6294,6340]",
      "dest": "call_expression [6294,6340]"
    },
    {
      "src": "call_argument [19795,19802]",
      "dest": "call_argument [19795,19802]"
    },
    {
      "src": "member_expression [39135,39156]",
      "dest": "member_expression [39138,39159]"
    },
    {
      "src": "event_paramater [34711,34724]",
      "dest": "event_paramater [34714,34727]"
    },
    {
      "src": "(: ( [5292,5293]",
      "dest": "(: ( [5292,5293]"
    },
    {
      "src": ".: . [21149,21150]",
      "dest": ".: . [21149,21150]"
    },
    {
      "src": "identifier: Order [36919,36924]",
      "dest": "identifier: Order [36922,36927]"
    },
    {
      "src": "uint256: uint256 [22458,22465]",
      "dest": "uint256: uint256 [22458,22465]"
    },
    {
      "src": "identifier: fixedPrice [36124,36134]",
      "dest": "identifier: fixedPrice [36127,36137]"
    },
    {
      "src": "emit_statement [2837,2883]",
      "dest": "emit_statement [2837,2883]"
    },
    {
      "src": "(: ( [3227,3228]",
      "dest": "(: ( [3227,3228]"
    },
    {
      "src": "string_literal [36655,36714]",
      "dest": "string_literal [36658,36717]"
    },
    {
      "src": "(: ( [16927,16928]",
      "dest": "(: ( [16927,16928]"
    },
    {
      "src": "\": \" [6744,6745]",
      "dest": "\": \" [6744,6745]"
    },
    {
      "src": "function: function [29306,29314]",
      "dest": "function: function [29306,29314]"
    },
    {
      "src": "(: ( [23659,23660]",
      "dest": "(: ( [23659,23660]"
    },
    {
      "src": "): ) [25252,25253]",
      "dest": "): ) [25252,25253]"
    },
    {
      "src": "uint256: uint256 [8398,8405]",
      "dest": "uint256: uint256 [8398,8405]"
    },
    {
      "src": "identifier: transferAmount [39980,39994]",
      "dest": "identifier: transferAmount [39983,39997]"
    },
    {
      "src": "solidity: solidity [89,97]",
      "dest": "solidity: solidity [89,97]"
    },
    {
      "src": "return_statement [19770,19830]",
      "dest": "return_statement [19770,19830]"
    },
    {
      "src": "identifier: TakeOrder [39055,39064]",
      "dest": "identifier: TakeOrder [39058,39067]"
    },
    {
      "src": "(: ( [4662,4663]",
      "dest": "(: ( [4662,4663]"
    },
    {
      "src": "(: ( [36555,36556]",
      "dest": "(: ( [36558,36559]"
    },
    {
      "src": "comment: /**      * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.      *      * See {setApprovalForAll}      */ [29795,29937]",
      "dest": "comment: /**      * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.      *      * See {setApprovalForAll}      */ [29795,29937]"
    },
    {
      "src": "identifier: div [7774,7777]",
      "dest": "identifier: div [7774,7777]"
    },
    {
      "src": "memory: memory [19116,19122]",
      "dest": "memory: memory [19116,19122]"
    },
    {
      "src": "uint: uint [34473,34477]",
      "dest": "uint: uint [34476,34480]"
    },
    {
      "src": "visibility [17909,17917]",
      "dest": "visibility [17909,17917]"
    },
    {
      "src": "): ) [20579,20580]",
      "dest": "): ) [20579,20580]"
    },
    {
      "src": ",: , [39098,39099]",
      "dest": ",: , [39101,39102]"
    },
    {
      "src": "false [4360,4365]",
      "dest": "false [4360,4365]"
    },
    {
      "src": "expression_statement [37538,37763]",
      "dest": "expression_statement [37541,37766]"
    },
    {
      "src": "return: return [9161,9167]",
      "dest": "return: return [9161,9167]"
    },
    {
      "src": "struct_field_assignment [18741,18754]",
      "dest": "struct_field_assignment [18741,18754]"
    },
    {
      "src": "call_argument [35463,35472]",
      "dest": "call_argument [35466,35475]"
    },
    {
      "src": ".: . [40332,40333]",
      "dest": ".: . [40341,40342]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [5628,5780]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [5628,5780]"
    },
    {
      "src": "identifier: UpdatePrice [37889,37900]",
      "dest": "identifier: UpdatePrice [37892,37903]"
    },
    {
      "src": "primitive_type [10696,10703]",
      "dest": "primitive_type [10696,10703]"
    },
    {
      "src": "user_defined_type [22887,22893]",
      "dest": "user_defined_type [22887,22893]"
    },
    {
      "src": "address: address [26556,26563]",
      "dest": "address: address [26556,26563]"
    },
    {
      "src": ",: , [34724,34725]",
      "dest": ",: , [34727,34728]"
    },
    {
      "src": "identifier: mod [8394,8397]",
      "dest": "identifier: mod [8394,8397]"
    },
    {
      "src": "-: - [4699,4700]",
      "dest": "-: - [4699,4700]"
    },
    {
      "src": ",: , [26381,26382]",
      "dest": ",: , [26381,26382]"
    },
    {
      "src": "external: external [31016,31024]",
      "dest": "external: external [31019,31027]"
    },
    {
      "src": "call_argument [22317,22375]",
      "dest": "call_argument [22317,22375]"
    },
    {
      "src": "parameter [17859,17873]",
      "dest": "parameter [17859,17873]"
    },
    {
      "src": "primitive_type [34771,34775]",
      "dest": "primitive_type [34774,34778]"
    },
    {
      "src": "): ) [2400,2401]",
      "dest": "): ) [2400,2401]"
    },
    {
      "src": "primitive_type [38312,38316]",
      "dest": "primitive_type [38315,38319]"
    },
    {
      "src": "address: address [1744,1751]",
      "dest": "address: address [1744,1751]"
    },
    {
      "src": "event_paramater [34742,34769]",
      "dest": "event_paramater [34745,34772]"
    },
    {
      "src": "(: ( [16013,16014]",
      "dest": "(: ( [16013,16014]"
    },
    {
      "src": "{: { [2322,2323]",
      "dest": "{: { [2322,2323]"
    },
    {
      "src": "string [7858,7886]",
      "dest": "string [7858,7886]"
    },
    {
      "src": "): ) [22268,22269]",
      "dest": "): ) [22268,22269]"
    },
    {
      "src": "(: ( [20572,20573]",
      "dest": "(: ( [20572,20573]"
    },
    {
      "src": "identifier: maker [35982,35987]",
      "dest": "identifier: maker [35985,35990]"
    },
    {
      "src": "identifier: errorMessage [17432,17444]",
      "dest": "identifier: errorMessage [17432,17444]"
    },
    {
      "src": "identifier: _callOptionalReturn [24521,24540]",
      "dest": "identifier: _callOptionalReturn [24521,24540]"
    },
    {
      "src": "identifier: copyright [40357,40366]",
      "dest": "identifier: copyright [40366,40375]"
    },
    {
      "src": "pragma_value:  ABIEncoderV2 [127,140]",
      "dest": "pragma_value:  ABIEncoderV2 [127,140]"
    },
    {
      "src": "parameter [19052,19066]",
      "dest": "parameter [19052,19066]"
    },
    {
      "src": ",: , [37909,37910]",
      "dest": ",: , [37912,37913]"
    },
    {
      "src": "type_name [35190,35197]",
      "dest": "type_name [35193,35200]"
    },
    {
      "src": "identifier: target [18349,18355]",
      "dest": "identifier: target [18349,18355]"
    },
    {
      "src": "}: } [30894,30895]",
      "dest": "}: } [30900,30901]"
    },
    {
      "src": "}: } [1046,1047]",
      "dest": "}: } [1046,1047]"
    },
    {
      "src": "\": \" [18002,18003]",
      "dest": "\": \" [18002,18003]"
    },
    {
      "src": "}: } [21512,21513]",
      "dest": "}: } [21512,21513]"
    },
    {
      "src": "): ) [40567,40568]",
      "dest": "): ) [40576,40577]"
    },
    {
      "src": ",: , [10705,10706]",
      "dest": ",: , [10705,10706]"
    },
    {
      "src": "identifier: require [37340,37347]",
      "dest": "identifier: require [37343,37350]"
    },
    {
      "src": "call_argument [37508,37526]",
      "dest": "call_argument [37511,37529]"
    },
    {
      "src": "identifier: SafeMath [33828,33836]",
      "dest": "identifier: SafeMath [33831,33839]"
    },
    {
      "src": "identifier: msgSender [1920,1929]",
      "dest": "identifier: msgSender [1920,1929]"
    },
    {
      "src": "return_type_definition [41131,41159]",
      "dest": "return_type_definition [41140,41168]"
    },
    {
      "src": "primitive_type [29121,29128]",
      "dest": "primitive_type [29121,29128]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [18847,19018]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [18847,19018]"
    },
    {
      "src": "internal: internal [19087,19095]",
      "dest": "internal: internal [19087,19095]"
    },
    {
      "src": "function: function [4557,4565]",
      "dest": "function: function [4557,4565]"
    },
    {
      "src": "user_defined_type [26215,26222]",
      "dest": "user_defined_type [26215,26222]"
    },
    {
      "src": ",: , [18700,18701]",
      "dest": ",: , [18700,18701]"
    },
    {
      "src": "): ) [35732,35733]",
      "dest": "): ) [35735,35736]"
    },
    {
      "src": "binary_expression [8471,8476]",
      "dest": "binary_expression [8471,8476]"
    },
    {
      "src": "identifier: errorMessage [19492,19504]",
      "dest": "identifier: errorMessage [19492,19504]"
    },
    {
      "src": ",: , [28586,28587]",
      "dest": ",: , [28586,28587]"
    },
    {
      "src": "): ) [37526,37527]",
      "dest": "): ) [37529,37530]"
    },
    {
      "src": "call_argument [35399,35400]",
      "dest": "call_argument [35402,35403]"
    },
    {
      "src": "identifier: to [13345,13347]",
      "dest": "identifier: to [13345,13347]"
    },
    {
      "src": "identifier: errorMessage [20497,20509]",
      "dest": "identifier: errorMessage [20497,20509]"
    },
    {
      "src": "primitive_type [19709,19714]",
      "dest": "primitive_type [19709,19714]"
    },
    {
      "src": ",: , [36039,36040]",
      "dest": ",: , [36042,36043]"
    },
    {
      "src": "identifier: MakeOrder [34509,34518]",
      "dest": "identifier: MakeOrder [34512,34521]"
    },
    {
      "src": "identifier: spender [23464,23471]",
      "dest": "identifier: spender [23464,23471]"
    },
    {
      "src": ",: , [18804,18805]",
      "dest": ",: , [18804,18805]"
    },
    {
      "src": "call_argument [23312,23368]",
      "dest": "call_argument [23312,23368]"
    },
    {
      "src": "yul_evm_builtin [14708,14719]",
      "dest": "yul_evm_builtin [14708,14719]"
    },
    {
      "src": "uint256: uint256 [13349,13356]",
      "dest": "uint256: uint256 [13349,13356]"
    },
    {
      "src": ",: , [39772,39773]",
      "dest": ",: , [39775,39776]"
    },
    {
      "src": "bool: bool [33921,33925]",
      "dest": "bool: bool [33924,33928]"
    },
    {
      "src": ",: , [24994,24995]",
      "dest": ",: , [24994,24995]"
    },
    {
      "src": "return_statement [39603,39634]",
      "dest": "return_statement [39606,39637]"
    },
    {
      "src": "let: let [21373,21376]",
      "dest": "let: let [21373,21376]"
    },
    {
      "src": "member_expression [40323,40418]",
      "dest": "member_expression [40332,40427]"
    },
    {
      "src": "=: = [39032,39033]",
      "dest": "=: = [39035,39036]"
    },
    {
      "src": "primitive_type [36884,36888]",
      "dest": "primitive_type [36887,36891]"
    },
    {
      "src": "identifier: onlyInitOnce [33934,33946]",
      "dest": "identifier: onlyInitOnce [33937,33949]"
    },
    {
      "src": "member_expression [22317,22339]",
      "dest": "member_expression [22317,22339]"
    },
    {
      "src": "identifier: bid [37985,37988]",
      "dest": "identifier: bid [37988,37991]"
    },
    {
      "src": "expression_statement [878,883]",
      "dest": "expression_statement [878,883]"
    },
    {
      "src": "primitive_type [853,858]",
      "dest": "primitive_type [853,858]"
    },
    {
      "src": "=: = [5223,5224]",
      "dest": "=: = [5223,5224]"
    },
    {
      "src": "call_argument [20799,20806]",
      "dest": "call_argument [20799,20806]"
    },
    {
      "src": "identifier: b [5821,5822]",
      "dest": "identifier: b [5821,5822]"
    },
    {
      "src": "return_type_definition [11266,11283]",
      "dest": "return_type_definition [11266,11283]"
    },
    {
      "src": "identifier: value [22263,22268]",
      "dest": "identifier: value [22263,22268]"
    },
    {
      "src": "primitive_type [18702,18707]",
      "dest": "primitive_type [18702,18707]"
    },
    {
      "src": "number_literal: 0 [37357,37358]",
      "dest": "number_literal: 0 [37360,37361]"
    },
    {
      "src": "primitive_type [7789,7796]",
      "dest": "primitive_type [7789,7796]"
    },
    {
      "src": "comment: // whether the order is available [34364,34397]",
      "dest": "comment: // whether the order is available [34367,34400]"
    },
    {
      "src": "string: string [20483,20489]",
      "dest": "string: string [20483,20489]"
    },
    {
      "src": "visibility [39716,39724]",
      "dest": "visibility [39719,39727]"
    },
    {
      "src": "visibility [3246,3254]",
      "dest": "visibility [3246,3254]"
    },
    {
      "src": "address: address [34894,34901]",
      "dest": "address: address [34897,34904]"
    },
    {
      "src": "external: external [37202,37210]",
      "dest": "external: external [37205,37213]"
    },
    {
      "src": "identifier: _callOptionalReturn [23390,23409]",
      "dest": "identifier: _callOptionalReturn [23390,23409]"
    },
    {
      "src": "call_argument [41253,41285]",
      "dest": "call_argument [41262,41294]"
    },
    {
      "src": "parameter [17296,17313]",
      "dest": "parameter [17296,17313]"
    },
    {
      "src": "function_definition [39525,39641]",
      "dest": "function_definition [39528,39644]"
    },
    {
      "src": "bool: bool [29762,29766]",
      "dest": "bool: bool [29762,29766]"
    },
    {
      "src": "call_expression [20139,20216]",
      "dest": "call_expression [20139,20216]"
    },
    {
      "src": "function_definition [18310,18839]",
      "dest": "function_definition [18310,18839]"
    },
    {
      "src": "view: view [26049,26053]",
      "dest": "view: view [26049,26053]"
    },
    {
      "src": "primitive_type [31034,31038]",
      "dest": "primitive_type [31037,31041]"
    },
    {
      "src": "(: ( [2017,2018]",
      "dest": "(: ( [2017,2018]"
    },
    {
      "src": "binary_expression [4648,4653]",
      "dest": "binary_expression [4648,4653]"
    },
    {
      "src": "(: ( [38922,38923]",
      "dest": "(: ( [38925,38926]"
    },
    {
      "src": "yul_variable_declaration [21373,21413]",
      "dest": "yul_variable_declaration [21373,21413]"
    },
    {
      "src": "array_access [39003,39019]",
      "dest": "array_access [39006,39022]"
    },
    {
      "src": "identifier: _verifyCallResult [20858,20875]",
      "dest": "identifier: _verifyCallResult [20858,20875]"
    },
    {
      "src": "}: } [37955,37956]",
      "dest": "}: } [37958,37959]"
    },
    {
      "src": "-: - [6797,6798]",
      "dest": "-: - [6797,6798]"
    },
    {
      "src": "type_name [22229,22235]",
      "dest": "type_name [22229,22235]"
    },
    {
      "src": "comment: // pay the transfer [38725,38744]",
      "dest": "comment: // pay the transfer [38728,38747]"
    },
    {
      "src": "identifier: success [19700,19707]",
      "dest": "identifier: success [19700,19707]"
    },
    {
      "src": "): ) [36639,36640]",
      "dest": "): ) [36642,36643]"
    },
    {
      "src": "identifier: a [4581,4582]",
      "dest": "identifier: a [4581,4582]"
    },
    {
      "src": "block_statement [21053,21585]",
      "dest": "block_statement [21053,21585]"
    },
    {
      "src": "): ) [37685,37686]",
      "dest": "): ) [37688,37689]"
    },
    {
      "src": "primitive_type [23887,23894]",
      "dest": "primitive_type [23887,23894]"
    },
    {
      "src": "visibility [1663,1670]",
      "dest": "visibility [1663,1670]"
    },
    {
      "src": "struct_member [30866,30888]",
      "dest": "struct_member [30872,30894]"
    },
    {
      "src": ",: , [40907,40908]",
      "dest": ",: , [40916,40917]"
    },
    {
      "src": "address: address [28562,28569]",
      "dest": "address: address [28562,28569]"
    },
    {
      "src": ",: , [23415,23416]",
      "dest": ",: , [23415,23416]"
    },
    {
      "src": "bytes: bytes [19068,19073]",
      "dest": "bytes: bytes [19068,19073]"
    },
    {
      "src": "identifier: safeTransferFrom [27940,27956]",
      "dest": "identifier: safeTransferFrom [27940,27956]"
    },
    {
      "src": "primitive_type [20915,20921]",
      "dest": "primitive_type [20915,20921]"
    },
    {
      "src": "uint256: uint256 [4882,4889]",
      "dest": "uint256: uint256 [4882,4889]"
    },
    {
      "src": "expression_statement [25168,25254]",
      "dest": "expression_statement [25168,25254]"
    },
    {
      "src": "call_argument [16981,16985]",
      "dest": "call_argument [16981,16985]"
    },
    {
      "src": ",: , [20888,20889]",
      "dest": ",: , [20888,20889]"
    },
    {
      "src": "\": \" [35902,35903]",
      "dest": "\": \" [35905,35906]"
    },
    {
      "src": "(: ( [37988,37989]",
      "dest": "(: ( [37991,37992]"
    },
    {
      "src": "member_expression [40643,40693]",
      "dest": "member_expression [40652,40702]"
    },
    {
      "src": "parameter [31034,31038]",
      "dest": "parameter [31037,31041]"
    },
    {
      "src": "member_expression [36499,36529]",
      "dest": "member_expression [36502,36532]"
    },
    {
      "src": "boolean_literal [4663,4668]",
      "dest": "boolean_literal [4663,4668]"
    },
    {
      "src": "variable_declaration_statement [19694,19760]",
      "dest": "variable_declaration_statement [19694,19760]"
    },
    {
      "src": "struct_member [34124,34145]",
      "dest": "struct_member [34127,34148]"
    },
    {
      "src": "identifier: renounceOwnership [2781,2798]",
      "dest": "identifier: renounceOwnership [2781,2798]"
    },
    {
      "src": "state_mutability [41126,41130]",
      "dest": "state_mutability [41135,41139]"
    },
    {
      "src": ">: > [21157,21158]",
      "dest": ">: > [21157,21158]"
    },
    {
      "src": "identifier: ownerOf [27151,27158]",
      "dest": "identifier: ownerOf [27151,27158]"
    },
    {
      "src": "type_name [30925,30929]",
      "dest": "type_name [30931,30935]"
    },
    {
      "src": "identifier: mul [7076,7079]",
      "dest": "identifier: mul [7076,7079]"
    },
    {
      "src": "identifier: allowance [23258,23267]",
      "dest": "identifier: allowance [23258,23267]"
    },
    {
      "src": "if: if [21135,21137]",
      "dest": "if: if [21135,21137]"
    },
    {
      "src": "==: == [5180,5182]",
      "dest": "==: == [5180,5182]"
    },
    {
      "src": "type_name [39774,39781]",
      "dest": "type_name [39777,39784]"
    },
    {
      "src": "identifier: erc721AddressWithCopyright [33968,33994]",
      "dest": "identifier: erc721AddressWithCopyright [33971,33997]"
    },
    {
      "src": "parameter [14402,14406]",
      "dest": "parameter [14402,14406]"
    },
    {
      "src": "member_expression [36772,36790]",
      "dest": "member_expression [36775,36793]"
    },
    {
      "src": ".: . [40193,40194]",
      "dest": ".: . [40205,40206]"
    },
    {
      "src": "event_paramater [26761,26782]",
      "dest": "event_paramater [26761,26782]"
    },
    {
      "src": "string_literal [16987,17019]",
      "dest": "string_literal [16987,17019]"
    },
    {
      "src": "type_name [5213,5220]",
      "dest": "type_name [5213,5220]"
    },
    {
      "src": "{: { [23876,23877]",
      "dest": "{: { [23876,23877]"
    },
    {
      "src": "identifier: tokenId [30685,30692]",
      "dest": "identifier: tokenId [30685,30692]"
    },
    {
      "src": "primitive_type [26556,26563]",
      "dest": "primitive_type [26556,26563]"
    },
    {
      "src": ",: , [34854,34855]",
      "dest": ",: , [34857,34858]"
    },
    {
      "src": "call_argument [2018,2019]",
      "dest": "call_argument [2018,2019]"
    },
    {
      "src": "): ) [36560,36561]",
      "dest": "): ) [36563,36564]"
    },
    {
      "src": "returns: returns [41131,41138]",
      "dest": "returns: returns [41140,41147]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers, reverting on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [7295,7759]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers, reverting on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [7295,7759]"
    },
    {
      "src": "memory: memory [20717,20723]",
      "dest": "memory: memory [20717,20723]"
    },
    {
      "src": "pure: pure [6694,6698]",
      "dest": "pure: pure [6694,6698]"
    },
    {
      "src": "string [15820,15851]",
      "dest": "string [15820,15851]"
    },
    {
      "src": "primitive_type [7823,7830]",
      "dest": "primitive_type [7823,7830]"
    },
    {
      "src": "): ) [30029,30030]",
      "dest": "): ) [30029,30030]"
    },
    {
      "src": "type_name [39755,39759]",
      "dest": "type_name [39758,39762]"
    },
    {
      "src": "variable_declaration_statement [23593,23667]",
      "dest": "variable_declaration_statement [23593,23667]"
    },
    {
      "src": "parameter [23821,23833]",
      "dest": "parameter [23821,23833]"
    },
    {
      "src": "internal: internal [6685,6693]",
      "dest": "internal: internal [6685,6693]"
    },
    {
      "src": "): ) [2347,2348]",
      "dest": "): ) [2347,2348]"
    },
    {
      "src": "call_expression [23252,23291]",
      "dest": "call_expression [23252,23291]"
    },
    {
      "src": "call_expression [2352,2364]",
      "dest": "call_expression [2352,2364]"
    },
    {
      "src": "bytes: bytes [17361,17366]",
      "dest": "bytes: bytes [17361,17366]"
    },
    {
      "src": "(: ( [20757,20758]",
      "dest": "(: ( [20757,20758]"
    },
    {
      "src": "function: function [11513,11521]",
      "dest": "function: function [11513,11521]"
    },
    {
      "src": "call_expression [20738,20763]",
      "dest": "call_expression [20738,20763]"
    },
    {
      "src": "type_name [4893,4900]",
      "dest": "type_name [4893,4900]"
    },
    {
      "src": "parameter [13075,13089]",
      "dest": "parameter [13075,13089]"
    },
    {
      "src": "call_argument [20174,20215]",
      "dest": "call_argument [20174,20215]"
    },
    {
      "src": "identifier: require [7204,7211]",
      "dest": "identifier: require [7204,7211]"
    },
    {
      "src": "(: ( [22417,22418]",
      "dest": "(: ( [22417,22418]"
    },
    {
      "src": "identifier: setApprovalForAll [29726,29743]",
      "dest": "identifier: setApprovalForAll [29726,29743]"
    },
    {
      "src": "member_expression [22543,22561]",
      "dest": "member_expression [22543,22561]"
    },
    {
      "src": "string: string [20915,20921]",
      "dest": "string: string [20915,20921]"
    },
    {
      "src": "visibility [18419,18427]",
      "dest": "visibility [18419,18427]"
    },
    {
      "src": "parameter [22418,22430]",
      "dest": "parameter [22418,22430]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [7926,8379]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [7926,8379]"
    },
    {
      "src": "\": \" [37702,37703]",
      "dest": "\": \" [37705,37706]"
    },
    {
      "src": ">: > [14751,14752]",
      "dest": ">: > [14751,14752]"
    },
    {
      "src": "=: = [24960,24961]",
      "dest": "=: = [24960,24961]"
    },
    {
      "src": "return: return [19135,19141]",
      "dest": "return: return [19135,19141]"
    },
    {
      "src": "function_definition [35531,36855]",
      "dest": "function_definition [35534,36858]"
    },
    {
      "src": "type_name [39295,39302]",
      "dest": "type_name [39298,39305]"
    },
    {
      "src": ">: > [25064,25065]",
      "dest": ">: > [25064,25065]"
    },
    {
      "src": "): ) [7100,7101]",
      "dest": "): ) [7100,7101]"
    },
    {
      "src": "identifier: require [7843,7850]",
      "dest": "identifier: require [7843,7850]"
    },
    {
      "src": "view: view [719,723]",
      "dest": "view: view [719,723]"
    },
    {
      "src": "binary_expression [23236,23246]",
      "dest": "binary_expression [23236,23246]"
    },
    {
      "src": "(: ( [20561,20562]",
      "dest": "(: ( [20561,20562]"
    },
    {
      "src": "): ) [8450,8451]",
      "dest": "): ) [8450,8451]"
    },
    {
      "src": ":: : [36024,36025]",
      "dest": ":: : [36027,36028]"
    },
    {
      "src": "function_body [758,794]",
      "dest": "function_body [758,794]"
    },
    {
      "src": "identifier: errorMessage [10804,10816]",
      "dest": "identifier: errorMessage [10804,10816]"
    },
    {
      "src": "block_statement [25069,25265]",
      "dest": "block_statement [25069,25265]"
    },
    {
      "src": "function: function [688,696]",
      "dest": "function: function [688,696]"
    },
    {
      "src": "primitive_type [39295,39302]",
      "dest": "primitive_type [39298,39305]"
    },
    {
      "src": "view: view [831,835]",
      "dest": "view: view [831,835]"
    },
    {
      "src": "(: ( [19442,19443]",
      "dest": "(: ( [19442,19443]"
    },
    {
      "src": "function_definition [29717,29787]",
      "dest": "function_definition [29717,29787]"
    },
    {
      "src": ".: . [40138,40139]",
      "dest": ".: . [40150,40151]"
    },
    {
      "src": "indexed: indexed [26349,26356]",
      "dest": "indexed: indexed [26349,26356]"
    },
    {
      "src": "user_defined_type [40041,40053]",
      "dest": "user_defined_type [40044,40059]"
    },
    {
      "src": "): ) [4593,4594]",
      "dest": "): ) [4593,4594]"
    },
    {
      "src": "(: ( [23933,23934]",
      "dest": "(: ( [23933,23934]"
    },
    {
      "src": "function_body [39789,40781]",
      "dest": "function_body [39792,40790]"
    },
    {
      "src": ",: , [22241,22242]",
      "dest": ",: , [22241,22242]"
    },
    {
      "src": "state_mutability [719,723]",
      "dest": "state_mutability [719,723]"
    },
    {
      "src": "string [23312,23368]",
      "dest": "string [23312,23368]"
    },
    {
      "src": "event: event [34693,34698]",
      "dest": "event: event [34696,34701]"
    },
    {
      "src": "struct_member [34056,34070]",
      "dest": "struct_member [34059,34073]"
    },
    {
      "src": "identifier: Address [13740,13747]",
      "dest": "identifier: Address [13740,13747]"
    },
    {
      "src": "call_argument [2341,2364]",
      "dest": "call_argument [2341,2364]"
    },
    {
      "src": "identifier: value [23473,23478]",
      "dest": "identifier: value [23473,23478]"
    },
    {
      "src": ",: , [17987,17988]",
      "dest": ",: , [17987,17988]"
    },
    {
      "src": "expression_statement [37290,37330]",
      "dest": "expression_statement [37293,37333]"
    },
    {
      "src": "expression_statement [38171,38260]",
      "dest": "expression_statement [38174,38263]"
    },
    {
      "src": "primitive_type [1655,1662]",
      "dest": "primitive_type [1655,1662]"
    },
    {
      "src": "event: event [34638,34643]",
      "dest": "event: event [34641,34646]"
    },
    {
      "src": "call_expression [23910,24005]",
      "dest": "call_expression [23910,24005]"
    },
    {
      "src": "type_name [35153,35160]",
      "dest": "type_name [35156,35163]"
    },
    {
      "src": "identifier: token [24036,24041]",
      "dest": "identifier: token [24036,24041]"
    },
    {
      "src": "struct_expression [15961,15991]",
      "dest": "struct_expression [15961,15991]"
    },
    {
      "src": "returns: returns [13100,13107]",
      "dest": "returns: returns [13100,13107]"
    },
    {
      "src": "call_argument [37311,37321]",
      "dest": "call_argument [37314,37324]"
    },
    {
      "src": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [5093,5164]",
      "dest": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [5093,5164]"
    },
    {
      "src": "call_argument [36634,36638]",
      "dest": "call_argument [36637,36641]"
    },
    {
      "src": "identifier: require [33351,33358]",
      "dest": "identifier: require [33354,33361]"
    },
    {
      "src": "): ) [3118,3119]",
      "dest": "): ) [3118,3119]"
    },
    {
      "src": "\": \" [33412,33413]",
      "dest": "\": \" [33415,33416]"
    },
    {
      "src": "(: ( [29366,29367]",
      "dest": "(: ( [29366,29367]"
    },
    {
      "src": ".: . [35758,35759]",
      "dest": ".: . [35761,35762]"
    },
    {
      "src": ",: , [10802,10803]",
      "dest": ",: , [10802,10803]"
    },
    {
      "src": "member_expression [22340,22354]",
      "dest": "member_expression [22340,22354]"
    },
    {
      "src": "event_paramater [26363,26381]",
      "dest": "event_paramater [26363,26381]"
    },
    {
      "src": "identifier: orders [34488,34494]",
      "dest": "identifier: orders [34491,34497]"
    },
    {
      "src": "): ) [15757,15758]",
      "dest": "): ) [15757,15758]"
    },
    {
      "src": ">=: >= [6304,6306]",
      "dest": ">=: >= [6304,6306]"
    },
    {
      "src": "): ) [27212,27213]",
      "dest": "): ) [27212,27213]"
    },
    {
      "src": "call_expression [38561,38622]",
      "dest": "call_expression [38564,38625]"
    },
    {
      "src": "binary_expression [7188,7193]",
      "dest": "binary_expression [7188,7193]"
    },
    {
      "src": "return_type_definition [11575,11589]",
      "dest": "return_type_definition [11575,11589]"
    },
    {
      "src": ",: , [36624,36625]",
      "dest": ",: , [36627,36628]"
    },
    {
      "src": "uint256: uint256 [28588,28595]",
      "dest": "uint256: uint256 [28588,28595]"
    },
    {
      "src": "identifier: _taker [35086,35092]",
      "dest": "identifier: _taker [35089,35095]"
    },
    {
      "src": "identifier: tokenId [26399,26406]",
      "dest": "identifier: tokenId [26399,26406]"
    },
    {
      "src": "): ) [39898,39899]",
      "dest": "): ) [39901,39902]"
    },
    {
      "src": "visibility [7102,7110]",
      "dest": "visibility [7102,7110]"
    },
    {
      "src": "interface_declaration [26194,30727]",
      "dest": "interface_declaration [26194,30727]"
    },
    {
      "src": "type_name [36424,36431]",
      "dest": "type_name [36427,36434]"
    },
    {
      "src": "identifier: newOwner [3236,3244]",
      "dest": "identifier: newOwner [3236,3244]"
    },
    {
      "src": "address: address [14362,14369]",
      "dest": "address: address [14362,14369]"
    },
    {
      "src": "identifier: order [36807,36812]",
      "dest": "identifier: order [36810,36815]"
    },
    {
      "src": "number_literal: 0 [35858,35859]",
      "dest": "number_literal: 0 [35861,35862]"
    },
    {
      "src": "string_literal [16023,16083]",
      "dest": "string_literal [16023,16083]"
    },
    {
      "src": "parameter [3102,3118]",
      "dest": "parameter [3102,3118]"
    },
    {
      "src": "uint256: uint256 [23558,23565]",
      "dest": "uint256: uint256 [23558,23565]"
    },
    {
      "src": "expression_statement [35703,35826]",
      "dest": "expression_statement [35706,35829]"
    },
    {
      "src": "comment: // constructor execution. [14573,14598]",
      "dest": "comment: // constructor execution. [14573,14598]"
    },
    {
      "src": "visibility [22270,22278]",
      "dest": "visibility [22270,22278]"
    },
    {
      "src": "identifier: data [19169,19173]",
      "dest": "identifier: data [19169,19173]"
    },
    {
      "src": "address: address [41228,41235]",
      "dest": "address: address [41237,41244]"
    },
    {
      "src": "function: function [39525,39533]",
      "dest": "function: function [39528,39536]"
    },
    {
      "src": "true: true [5293,5297]",
      "dest": "true: true [5293,5297]"
    },
    {
      "src": "internal: internal [32810,32818]",
      "dest": "internal: internal [32813,32821]"
    },
    {
      "src": "}: } [1043,1044]",
      "dest": "}: } [1043,1044]"
    },
    {
      "src": "state_mutability [9087,9091]",
      "dest": "state_mutability [9087,9091]"
    },
    {
      "src": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [10901,10973]",
      "dest": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP.  */ [10901,10973]"
    },
    {
      "src": "call_argument [18797,18804]",
      "dest": "call_argument [18797,18804]"
    },
    {
      "src": "event_definition [34793,34938]",
      "dest": "event_definition [34796,34941]"
    },
    {
      "src": "identifier: target [20160,20166]",
      "dest": "identifier: target [20160,20166]"
    },
    {
      "src": ".: . [39125,39126]",
      "dest": ".: . [39128,39129]"
    },
    {
      "src": "call_expression [22520,22588]",
      "dest": "call_expression [22520,22588]"
    },
    {
      "src": "binary_expression [37348,37358]",
      "dest": "binary_expression [37351,37361]"
    },
    {
      "src": ",: , [5604,5605]",
      "dest": ",: , [5604,5605]"
    },
    {
      "src": "type_name [35582,35589]",
      "dest": "type_name [35585,35592]"
    },
    {
      "src": "comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [893,1011]",
      "dest": "comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [893,1011]"
    },
    {
      "src": "(: ( [1942,1943]",
      "dest": "(: ( [1942,1943]"
    },
    {
      "src": "uint256: uint256 [4313,4320]",
      "dest": "uint256: uint256 [4313,4320]"
    },
    {
      "src": "uint: uint [33887,33891]",
      "dest": "uint: uint [33890,33894]"
    },
    {
      "src": "yul_identifier [21450,21460]",
      "dest": "yul_identifier [21450,21460]"
    },
    {
      "src": "primitive_type [22159,22166]",
      "dest": "primitive_type [22159,22166]"
    },
    {
      "src": ",: , [22363,22364]",
      "dest": ",: , [22363,22364]"
    },
    {
      "src": "\": \" [6310,6311]",
      "dest": "\": \" [6310,6311]"
    },
    {
      "src": "bool: bool [26810,26814]",
      "dest": "bool: bool [26810,26814]"
    },
    {
      "src": "): ) [17444,17445]",
      "dest": "): ) [17444,17445]"
    },
    {
      "src": "primitive_type [34726,34733]",
      "dest": "primitive_type [34729,34736]"
    },
    {
      "src": "): ) [23479,23480]",
      "dest": "): ) [23479,23480]"
    },
    {
      "src": "parameter [8398,8407]",
      "dest": "parameter [8398,8407]"
    },
    {
      "src": ",: , [20068,20069]",
      "dest": ",: , [20068,20069]"
    },
    {
      "src": "\": \" [6338,6339]",
      "dest": "\": \" [6338,6339]"
    },
    {
      "src": ":: : [15982,15983]",
      "dest": ":: : [15982,15983]"
    },
    {
      "src": "=: = [33500,33501]",
      "dest": "=: = [33503,33504]"
    },
    {
      "src": "member_expression [41213,41224]",
      "dest": "member_expression [41222,41233]"
    },
    {
      "src": "primitive_type [19052,19059]",
      "dest": "primitive_type [19052,19059]"
    },
    {
      "src": ",: , [2020,2021]",
      "dest": ",: , [2020,2021]"
    },
    {
      "src": "): ) [23296,23297]",
      "dest": "): ) [23296,23297]"
    },
    {
      "src": "): ) [20977,20978]",
      "dest": "): ) [20977,20978]"
    },
    {
      "src": "=: = [3411,3412]",
      "dest": "=: = [3411,3412]"
    },
    {
      "src": "event: event [13292,13297]",
      "dest": "event: event [13292,13297]"
    },
    {
      "src": "\": \" [15820,15821]",
      "dest": "\": \" [15820,15821]"
    },
    {
      "src": "identifier: Order [37235,37240]",
      "dest": "identifier: Order [37238,37243]"
    },
    {
      "src": "{: { [22942,22943]",
      "dest": "{: { [22942,22943]"
    },
    {
      "src": "identifier: require [15779,15786]",
      "dest": "identifier: require [15779,15786]"
    },
    {
      "src": "identifier: require [40961,40968]",
      "dest": "identifier: require [40970,40977]"
    },
    {
      "src": "returns: returns [11110,11117]",
      "dest": "returns: returns [11110,11117]"
    },
    {
      "src": "primitive_type [11531,11538]",
      "dest": "primitive_type [11531,11538]"
    },
    {
      "src": "\": \" [18044,18045]",
      "dest": "\": \" [18044,18045]"
    },
    {
      "src": "uint256: uint256 [7778,7785]",
      "dest": "uint256: uint256 [7778,7785]"
    },
    {
      "src": "return_type_definition [17918,17940]",
      "dest": "return_type_definition [17918,17940]"
    },
    {
      "src": "variable_declaration_statement [38037,38082]",
      "dest": "variable_declaration_statement [38040,38085]"
    },
    {
      "src": "variable_declaration_statement [14610,14623]",
      "dest": "variable_declaration_statement [14610,14623]"
    },
    {
      "src": "primitive_type [5847,5851]",
      "dest": "primitive_type [5847,5851]"
    },
    {
      "src": "(: ( [9027,9028]",
      "dest": "(: ( [9027,9028]"
    },
    {
      "src": "identifier: IERC20 [38423,38429]",
      "dest": "identifier: IERC20 [38426,38432]"
    },
    {
      "src": "contract_declaration [33759,41297]",
      "dest": "contract_declaration [33762,41306]"
    },
    {
      "src": "primitive_type [5802,5809]",
      "dest": "primitive_type [5802,5809]"
    },
    {
      "src": "state_mutability [10755,10759]",
      "dest": "state_mutability [10755,10759]"
    },
    {
      "src": "return_statement [39972,40018]",
      "dest": "return_statement [39975,40021]"
    },
    {
      "src": "type_name [29744,29751]",
      "dest": "type_name [29744,29751]"
    },
    {
      "src": "primitive_type [20876,20880]",
      "dest": "primitive_type [20876,20880]"
    },
    {
      "src": "parameter [13056,13073]",
      "dest": "parameter [13056,13073]"
    },
    {
      "src": "comment: /**      * @dev Returns true if this contract implements the interface defined by      * `interfaceId`. See the corresponding      * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]      * to learn more about how these ids are created.      *      * This function call must use less than 30 000 gas.      */ [25640,25987]",
      "dest": "comment: /**      * @dev Returns true if this contract implements the interface defined by      * `interfaceId`. See the corresponding      * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]      * to learn more about how these ids are created.      *      * This function call must use less than 30 000 gas.      */ [25640,25987]"
    },
    {
      "src": "address: address [37595,37602]",
      "dest": "address: address [37598,37605]"
    },
    {
      "src": "identifier: _order [40889,40895]",
      "dest": "identifier: _order [40898,40904]"
    },
    {
      "src": "): ) [4300,4301]",
      "dest": "): ) [4300,4301]"
    },
    {
      "src": ".: . [39078,39079]",
      "dest": ".: . [39081,39082]"
    },
    {
      "src": "): ) [17939,17940]",
      "dest": "): ) [17939,17940]"
    },
    {
      "src": "}: } [2039,2040]",
      "dest": "}: } [2039,2040]"
    },
    {
      "src": ",: , [40008,40009]",
      "dest": ",: , [40011,40012]"
    },
    {
      "src": ",: , [22580,22581]",
      "dest": ",: , [22580,22581]"
    },
    {
      "src": "comment: // By storing the original value once again, a refund is triggered (see [33537,33608]",
      "dest": "comment: // By storing the original value once again, a refund is triggered (see [33540,33611]"
    },
    {
      "src": "call_argument [19175,19214]",
      "dest": "call_argument [19175,19214]"
    },
    {
      "src": "function_body [19543,19837]",
      "dest": "function_body [19543,19837]"
    },
    {
      "src": "view: view [39565,39569]",
      "dest": "view: view [39568,39572]"
    },
    {
      "src": "==: == [40340,40342]",
      "dest": "==: == [40349,40351]"
    },
    {
      "src": "function_definition [11073,11128]",
      "dest": "function_definition [11073,11128]"
    },
    {
      "src": ",: , [9135,9136]",
      "dest": ",: , [9135,9136]"
    },
    {
      "src": "(: ( [37310,37311]",
      "dest": "(: ( [37313,37314]"
    },
    {
      "src": "): ) [28603,28604]",
      "dest": "): ) [28603,28604]"
    },
    {
      "src": "memory: memory [859,865]",
      "dest": "memory: memory [859,865]"
    },
    {
      "src": ".: . [35993,35994]",
      "dest": ".: . [35996,35997]"
    },
    {
      "src": "%: % [10837,10838]",
      "dest": "%: % [10837,10838]"
    },
    {
      "src": "): ) [11588,11589]",
      "dest": "): ) [11588,11589]"
    },
    {
      "src": "function_definition [35139,35511]",
      "dest": "function_definition [35142,35514]"
    },
    {
      "src": "boolean_literal [35499,35503]",
      "dest": "boolean_literal [35502,35506]"
    },
    {
      "src": "function_definition [40789,41071]",
      "dest": "function_definition [40798,41080]"
    },
    {
      "src": "bool: bool [34407,34411]",
      "dest": "bool: bool [34410,34414]"
    },
    {
      "src": "function_definition [30625,30724]",
      "dest": "function_definition [30625,30724]"
    },
    {
      "src": "function_body [3255,3429]",
      "dest": "function_body [3255,3429]"
    },
    {
      "src": ".: . [38939,38940]",
      "dest": ".: . [38942,38943]"
    },
    {
      "src": "primitive_type [17894,17901]",
      "dest": "primitive_type [17894,17901]"
    },
    {
      "src": "pragma_directive [108,141]",
      "dest": "pragma_directive [108,141]"
    },
    {
      "src": "binary_expression [4697,4702]",
      "dest": "binary_expression [4697,4702]"
    },
    {
      "src": "): ) [38621,38622]",
      "dest": "): ) [38624,38625]"
    },
    {
      "src": "bytes: bytes [19110,19115]",
      "dest": "bytes: bytes [19110,19115]"
    },
    {
      "src": "primitive_type [9941,9948]",
      "dest": "primitive_type [9941,9948]"
    },
    {
      "src": "{: { [19124,19125]",
      "dest": "{: { [19124,19125]"
    },
    {
      "src": "(: ( [29743,29744]",
      "dest": "(: ( [29743,29744]"
    },
    {
      "src": "identifier: IERC721 [36453,36460]",
      "dest": "identifier: IERC721 [36456,36463]"
    },
    {
      "src": "primitive_type [29109,29116]",
      "dest": "primitive_type [29109,29116]"
    },
    {
      "src": "string [25208,25252]",
      "dest": "string [25208,25252]"
    },
    {
      "src": "primitive_type [6246,6253]",
      "dest": "primitive_type [6246,6253]"
    },
    {
      "src": "parameter [10718,10744]",
      "dest": "parameter [10718,10744]"
    },
    {
      "src": "type_name [34771,34775]",
      "dest": "type_name [34774,34778]"
    },
    {
      "src": "struct_member [34407,34424]",
      "dest": "struct_member [34410,34427]"
    },
    {
      "src": "=: = [35963,35964]",
      "dest": "=: = [35966,35967]"
    },
    {
      "src": "string_literal [2366,2400]",
      "dest": "string_literal [2366,2400]"
    },
    {
      "src": "}: } [18838,18839]",
      "dest": "}: } [18838,18839]"
    },
    {
      "src": "call_expression [38171,38259]",
      "dest": "call_expression [38174,38262]"
    },
    {
      "src": ":: : [36095,36096]",
      "dest": ":: : [36098,36099]"
    },
    {
      "src": "): ) [17341,17342]",
      "dest": "): ) [17341,17342]"
    },
    {
      "src": "address: address [13329,13336]",
      "dest": "address: address [13329,13336]"
    },
    {
      "src": "call_expression [24016,24113]",
      "dest": "call_expression [24016,24113]"
    },
    {
      "src": "binary_expression [36499,36561]",
      "dest": "binary_expression [36502,36564]"
    },
    {
      "src": "primitive_type [34894,34901]",
      "dest": "primitive_type [34897,34904]"
    },
    {
      "src": "using: using [33822,33827]",
      "dest": "using: using [33825,33830]"
    },
    {
      "src": "parameter [37163,37187]",
      "dest": "parameter [37166,37190]"
    },
    {
      "src": "function_definition [2121,2208]",
      "dest": "function_definition [2121,2208]"
    },
    {
      "src": "primitive_type [36626,36633]",
      "dest": "primitive_type [36629,36636]"
    },
    {
      "src": "primitive_type [7080,7087]",
      "dest": "primitive_type [7080,7087]"
    },
    {
      "src": "\": \" [18612,18613]",
      "dest": "\": \" [18612,18613]"
    },
    {
      "src": "primitive_type [27983,27990]",
      "dest": "primitive_type [27983,27990]"
    },
    {
      "src": "memory: memory [18363,18369]",
      "dest": "memory: memory [18363,18369]"
    },
    {
      "src": "member_expression [40662,40688]",
      "dest": "member_expression [40671,40697]"
    },
    {
      "src": "struct_member [34338,34354]",
      "dest": "struct_member [34341,34357]"
    },
    {
      "src": "comment: // construction, since the code is only stored at the end of the [14499,14563]",
      "dest": "comment: // construction, since the code is only stored at the end of the [14499,14563]"
    },
    {
      "src": "): ) [2019,2020]",
      "dest": "): ) [2019,2020]"
    },
    {
      "src": "virtual: virtual [2150,2157]",
      "dest": "virtual: virtual [2150,2157]"
    },
    {
      "src": "(: ( [40661,40662]",
      "dest": "(: ( [40670,40671]"
    },
    {
      "src": "event_paramater [34840,34854]",
      "dest": "event_paramater [34843,34857]"
    },
    {
      "src": "contract_body [10992,13610]",
      "dest": "contract_body [10992,13610]"
    },
    {
      "src": "return: return [19770,19776]",
      "dest": "return: return [19770,19776]"
    },
    {
      "src": "expression_statement [23227,23380]",
      "dest": "expression_statement [23227,23380]"
    },
    {
      "src": "member_expression [25176,25186]",
      "dest": "member_expression [25176,25186]"
    },
    {
      "src": "identifier: interfaceId [26027,26038]",
      "dest": "identifier: interfaceId [26027,26038]"
    },
    {
      "src": "uint256: uint256 [6708,6715]",
      "dest": "uint256: uint256 [6708,6715]"
    },
    {
      "src": "call_argument [37100,37110]",
      "dest": "call_argument [37103,37113]"
    },
    {
      "src": "parameter [16928,16940]",
      "dest": "parameter [16928,16940]"
    },
    {
      "src": "parameter [4287,4291]",
      "dest": "parameter [4287,4291]"
    },
    {
      "src": ",: , [36068,36069]",
      "dest": ",: , [36071,36072]"
    },
    {
      "src": "primitive_type [13592,13599]",
      "dest": "primitive_type [13592,13599]"
    },
    {
      "src": "call_argument [23283,23290]",
      "dest": "call_argument [23283,23290]"
    },
    {
      "src": "identifier: abi [22520,22523]",
      "dest": "identifier: abi [22520,22523]"
    },
    {
      "src": "address: address [27199,27206]",
      "dest": "address: address [27199,27206]"
    },
    {
      "src": "identifier: approved [26572,26580]",
      "dest": "identifier: approved [26572,26580]"
    },
    {
      "src": "public: public [2138,2144]",
      "dest": "public: public [2138,2144]"
    },
    {
      "src": "type_name [35010,35017]",
      "dest": "type_name [35013,35020]"
    },
    {
      "src": "(: ( [5801,5802]",
      "dest": "(: ( [5801,5802]"
    },
    {
      "src": "type_name [36919,36924]",
      "dest": "type_name [36922,36927]"
    },
    {
      "src": "boolean_literal [36173,36177]",
      "dest": "boolean_literal [36176,36180]"
    },
    {
      "src": "identifier: order [37577,37582]",
      "dest": "identifier: order [37580,37585]"
    },
    {
      "src": "function: function [9015,9023]",
      "dest": "function: function [9015,9023]"
    },
    {
      "src": "member_expression [22340,22363]",
      "dest": "member_expression [22340,22363]"
    },
    {
      "src": "(: ( [35062,35063]",
      "dest": "(: ( [35065,35066]"
    },
    {
      "src": "external: external [36899,36907]",
      "dest": "external: external [36902,36910]"
    },
    {
      "src": "identifier: feeRateDenominator [40421,40439]",
      "dest": "identifier: feeRateDenominator [40430,40448]"
    },
    {
      "src": "}: } [26071,26072]",
      "dest": "}: } [26071,26072]"
    },
    {
      "src": "type_name [26761,26768]",
      "dest": "type_name [26761,26768]"
    },
    {
      "src": "address: address [11235,11242]",
      "dest": "address: address [11235,11242]"
    },
    {
      "src": "address: address [26784,26791]",
      "dest": "address: address [26784,26791]"
    },
    {
      "src": "type_name [13075,13082]",
      "dest": "type_name [13075,13082]"
    },
    {
      "src": "address: address [27957,27964]",
      "dest": "address: address [27957,27964]"
    },
    {
      "src": "if: if [38485,38487]",
      "dest": "if: if [38488,38490]"
    },
    {
      "src": "boolean_literal [5600,5604]",
      "dest": "boolean_literal [5600,5604]"
    },
    {
      "src": "{: { [25069,25070]",
      "dest": "{: { [25069,25070]"
    },
    {
      "src": "identifier: errorMessage [20820,20832]",
      "dest": "identifier: errorMessage [20820,20832]"
    },
    {
      "src": "call_expression [35965,36189]",
      "dest": "call_expression [35968,36192]"
    },
    {
      "src": "identifier: balance [18484,18491]",
      "dest": "identifier: balance [18484,18491]"
    },
    {
      "src": "number_literal: 0 [3294,3295]",
      "dest": "number_literal: 0 [3294,3295]"
    },
    {
      "src": "identifier: orders [37837,37843]",
      "dest": "identifier: orders [37840,37846]"
    },
    {
      "src": "): ) [39265,39266]",
      "dest": "): ) [39268,39269]"
    },
    {
      "src": "): ) [20622,20623]",
      "dest": "): ) [20622,20623]"
    },
    {
      "src": "assignment_expression [41170,41194]",
      "dest": "assignment_expression [41179,41203]"
    },
    {
      "src": "return_statement [5257,5275]",
      "dest": "return_statement [5257,5275]"
    },
    {
      "src": ",: , [18374,18375]",
      "dest": ",: , [18374,18375]"
    },
    {
      "src": "): ) [5255,5256]",
      "dest": "): ) [5255,5256]"
    },
    {
      "src": "type_name [39543,39547]",
      "dest": "type_name [39546,39550]"
    },
    {
      "src": "identifier: SafeMath [4069,4077]",
      "dest": "identifier: SafeMath [4069,4077]"
    },
    {
      "src": "identifier: b [5610,5611]",
      "dest": "identifier: b [5610,5611]"
    },
    {
      "src": "identifier: functionCallWithValue [17393,17414]",
      "dest": "identifier: functionCallWithValue [17393,17414]"
    },
    {
      "src": "): ) [9988,9989]",
      "dest": "): ) [9988,9989]"
    },
    {
      "src": "string_literal [24996,25030]",
      "dest": "string_literal [24996,25030]"
    },
    {
      "src": "address: address [30665,30672]",
      "dest": "address: address [30665,30672]"
    },
    {
      "src": "{: { [40870,40871]",
      "dest": "{: { [40879,40880]"
    },
    {
      "src": "parameter [22918,22931]",
      "dest": "parameter [22918,22931]"
    },
    {
      "src": "parameter [18391,18417]",
      "dest": "parameter [18391,18417]"
    },
    {
      "src": "identifier: b [5254,5255]",
      "dest": "identifier: b [5254,5255]"
    },
    {
      "src": "parameter [28588,28603]",
      "dest": "parameter [28588,28603]"
    },
    {
      "src": "function: function [11874,11882]",
      "dest": "function: function [11874,11882]"
    },
    {
      "src": "number_literal: 0 [14753,14754]",
      "dest": "number_literal: 0 [14753,14754]"
    },
    {
      "src": "if_statement [38485,38713]",
      "dest": "if_statement [38488,38716]"
    },
    {
      "src": "binary_expression [2341,2364]",
      "dest": "binary_expression [2341,2364]"
    },
    {
      "src": "primitive_type [13056,13063]",
      "dest": "primitive_type [13056,13063]"
    },
    {
      "src": "call_argument [39087,39098]",
      "dest": "call_argument [39090,39101]"
    },
    {
      "src": "call_argument [23640,23644]",
      "dest": "call_argument [23640,23644]"
    },
    {
      "src": "library_declaration [22115,25275]",
      "dest": "library_declaration [22115,25275]"
    },
    {
      "src": "function_body [19124,19223]",
      "dest": "function_body [19124,19223]"
    },
    {
      "src": ",: , [34918,34919]",
      "dest": ",: , [34921,34922]"
    },
    {
      "src": "): ) [2881,2882]",
      "dest": "): ) [2881,2882]"
    },
    {
      "src": "string: string [18391,18397]",
      "dest": "string: string [18391,18397]"
    },
    {
      "src": "member_expression [38782,38792]",
      "dest": "member_expression [38785,38795]"
    },
    {
      "src": "identifier: newOwner [3175,3183]",
      "dest": "identifier: newOwner [3175,3183]"
    },
    {
      "src": "{: { [5541,5542]",
      "dest": "{: { [5541,5542]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `tokenId` token is transferred from `from` to `to`.      */ [26230,26320]",
      "dest": "comment: /**      * @dev Emitted when `tokenId` token is transferred from `from` to `to`.      */ [26230,26320]"
    },
    {
      "src": "call_argument [24990,24994]",
      "dest": "call_argument [24990,24994]"
    },
    {
      "src": "identifier: from [26357,26361]",
      "dest": "identifier: from [26357,26361]"
    },
    {
      "src": "type_name [741,756]",
      "dest": "type_name [741,756]"
    },
    {
      "src": "): ) [35271,35272]",
      "dest": "): ) [35274,35275]"
    },
    {
      "src": "false: false [37057,37062]",
      "dest": "false: false [37060,37065]"
    },
    {
      "src": "identifier: _transferOwnership [3156,3174]",
      "dest": "identifier: _transferOwnership [3156,3174]"
    },
    {
      "src": "function_body [32819,32860]",
      "dest": "function_body [32822,32863]"
    },
    {
      "src": "identifier: allowance [23916,23925]",
      "dest": "identifier: allowance [23916,23925]"
    },
    {
      "src": "): ) [40439,40440]",
      "dest": "): ) [40448,40449]"
    },
    {
      "src": "contract_body [33815,41297]",
      "dest": "contract_body [33818,41306]"
    },
    {
      "src": "type_name [11584,11588]",
      "dest": "type_name [11584,11588]"
    },
    {
      "src": "): ) [11094,11095]",
      "dest": "): ) [11094,11095]"
    },
    {
      "src": "identifier: amount [11558,11564]",
      "dest": "identifier: amount [11558,11564]"
    },
    {
      "src": "address: address [40343,40350]",
      "dest": "address: address [40352,40359]"
    },
    {
      "src": "\": \" [35250,35251]",
      "dest": "\": \" [35253,35254]"
    },
    {
      "src": "call_argument [22543,22570]",
      "dest": "call_argument [22543,22570]"
    },
    {
      "src": "=: = [41176,41177]",
      "dest": "=: = [41185,41186]"
    },
    {
      "src": "event: event [26740,26745]",
      "dest": "event: event [26740,26745]"
    },
    {
      "src": "primitive_type [22458,22465]",
      "dest": "primitive_type [22458,22465]"
    },
    {
      "src": "mload: mload [21396,21401]",
      "dest": "mload: mload [21396,21401]"
    },
    {
      "src": "address: address [35582,35589]",
      "dest": "address: address [35585,35592]"
    },
    {
      "src": "parameter [19443,19457]",
      "dest": "parameter [19443,19457]"
    },
    {
      "src": "\": \" [36713,36714]",
      "dest": "\": \" [36716,36717]"
    },
    {
      "src": "type_name [26974,26981]",
      "dest": "type_name [26974,26981]"
    },
    {
      "src": "variable_declaration [19695,19707]",
      "dest": "variable_declaration [19695,19707]"
    },
    {
      "src": "member_expression [37508,37526]",
      "dest": "member_expression [37511,37529]"
    },
    {
      "src": "parameter [39230,39265]",
      "dest": "parameter [39233,39268]"
    },
    {
      "src": "type_name [11550,11557]",
      "dest": "type_name [11550,11557]"
    },
    {
      "src": "identifier: Order [39695,39700]",
      "dest": "identifier: Order [39698,39703]"
    },
    {
      "src": "string [18002,18045]",
      "dest": "string [18002,18045]"
    },
    {
      "src": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [6816,7061]",
      "dest": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [6816,7061]"
    },
    {
      "src": "address: address [22432,22439]",
      "dest": "address: address [22432,22439]"
    },
    {
      "src": ".: . [23949,23950]",
      "dest": ".: . [23949,23950]"
    },
    {
      "src": "yul_identifier [14720,14727]",
      "dest": "yul_identifier [14720,14727]"
    },
    {
      "src": "(: ( [3174,3175]",
      "dest": "(: ( [3174,3175]"
    },
    {
      "src": "bool: bool [19695,19699]",
      "dest": "bool: bool [19695,19699]"
    },
    {
      "src": "uint256: uint256 [9039,9046]",
      "dest": "uint256: uint256 [9039,9046]"
    },
    {
      "src": ",: , [34612,34613]",
      "dest": ",: , [34615,34616]"
    },
    {
      "src": "expression_statement [37340,37408]",
      "dest": "expression_statement [37343,37411]"
    },
    {
      "src": "primitive_type [13329,13336]",
      "dest": "primitive_type [13329,13336]"
    },
    {
      "src": "event: event [26326,26331]",
      "dest": "event: event [26326,26331]"
    },
    {
      "src": "}: } [36187,36188]",
      "dest": "}: } [36190,36191]"
    },
    {
      "src": "type_name [9941,9948]",
      "dest": "type_name [9941,9948]"
    },
    {
      "src": ",: , [33378,33379]",
      "dest": ",: , [33381,33382]"
    },
    {
      "src": "call_argument [36954,36962]",
      "dest": "call_argument [36957,36965]"
    },
    {
      "src": ",: , [38678,38679]",
      "dest": ",: , [38681,38682]"
    },
    {
      "src": "primitive_type [34550,34557]",
      "dest": "primitive_type [34553,34560]"
    },
    {
      "src": "(: ( [5555,5556]",
      "dest": "(: ( [5555,5556]"
    },
    {
      "src": "primitive_type [37989,37993]",
      "dest": "primitive_type [37992,37996]"
    },
    {
      "src": "(: ( [18340,18341]",
      "dest": "(: ( [18340,18341]"
    },
    {
      "src": "private: private [33926,33933]",
      "dest": "private: private [33929,33936]"
    },
    {
      "src": "call_argument [7858,7886]",
      "dest": "call_argument [7858,7886]"
    },
    {
      "src": "identifier: copyright [40662,40671]",
      "dest": "identifier: copyright [40671,40680]"
    },
    {
      "src": "type_name [26936,26943]",
      "dest": "type_name [26936,26943]"
    },
    {
      "src": "): ) [2136,2137]",
      "dest": "): ) [2136,2137]"
    },
    {
      "src": "member_expression [25046,25063]",
      "dest": "member_expression [25046,25063]"
    },
    {
      "src": "}: } [17452,17453]",
      "dest": "}: } [17452,17453]"
    },
    {
      "src": "function: function [27142,27150]",
      "dest": "function: function [27142,27150]"
    },
    {
      "src": "emit: emit [2837,2841]",
      "dest": "emit: emit [2837,2841]"
    },
    {
      "src": "call_expression [37340,37407]",
      "dest": "call_expression [37343,37410]"
    },
    {
      "src": "primitive_type [7091,7098]",
      "dest": "primitive_type [7091,7098]"
    },
    {
      "src": "comment: // File: contracts/Dependencies/HasCopyright.sol [30731,30779]",
      "dest": "comment: // File: contracts/Dependencies/HasCopyright721.sol [30731,30782]"
    },
    {
      "src": "type_name [19459,19464]",
      "dest": "type_name [19459,19464]"
    },
    {
      "src": "identifier: amount [12668,12674]",
      "dest": "identifier: amount [12668,12674]"
    },
    {
      "src": "contract: contract [1620,1628]",
      "dest": "contract: contract [1620,1628]"
    },
    {
      "src": "visibility [31016,31024]",
      "dest": "visibility [31019,31027]"
    },
    {
      "src": "function: function [13018,13026]",
      "dest": "function: function [13018,13026]"
    },
    {
      "src": "identifier: _approved [29767,29776]",
      "dest": "identifier: _approved [29767,29776]"
    },
    {
      "src": "identifier: SafeMath [22146,22154]",
      "dest": "identifier: SafeMath [22146,22154]"
    },
    {
      "src": "\": \" [17018,17019]",
      "dest": "\": \" [17018,17019]"
    },
    {
      "src": "(: ( [36953,36954]",
      "dest": "(: ( [36956,36957]"
    },
    {
      "src": "type_name [13349,13356]",
      "dest": "type_name [13349,13356]"
    },
    {
      "src": "identifier: encodeWithSelector [22524,22542]",
      "dest": "identifier: encodeWithSelector [22524,22542]"
    },
    {
      "src": "identifier: tokenAddress [34132,34144]",
      "dest": "identifier: tokenAddress [34135,34147]"
    },
    {
      "src": "type_name [38351,38358]",
      "dest": "type_name [38354,38361]"
    },
    {
      "src": "]: ] [41193,41194]",
      "dest": "]: ] [41202,41203]"
    },
    {
      "src": "identifier: decode [25180,25186]",
      "dest": "identifier: decode [25180,25186]"
    },
    {
      "src": "identifier: data [16904,16908]",
      "dest": "identifier: data [16904,16908]"
    },
    {
      "src": "expression_statement [37775,37827]",
      "dest": "expression_statement [37778,37830]"
    },
    {
      "src": "indexed: indexed [26371,26378]",
      "dest": "indexed: indexed [26371,26378]"
    },
    {
      "src": "return: return [21018,21024]",
      "dest": "return: return [21018,21024]"
    },
    {
      "src": "variable_declaration [24936,24959]",
      "dest": "variable_declaration [24936,24959]"
    },
    {
      "src": "function: function [25993,26001]",
      "dest": "function: function [25993,26001]"
    },
    {
      "src": "(: ( [3375,3376]",
      "dest": "(: ( [3375,3376]"
    },
    {
      "src": "using_directive [22173,22199]",
      "dest": "using_directive [22173,22199]"
    },
    {
      "src": "call_argument [36530,36543]",
      "dest": "call_argument [36533,36546]"
    },
    {
      "src": "): ) [4631,4632]",
      "dest": "): ) [4631,4632]"
    },
    {
      "src": "type_name [26556,26563]",
      "dest": "type_name [26556,26563]"
    },
    {
      "src": "function_definition [29306,29385]",
      "dest": "function_definition [29306,29385]"
    },
    {
      "src": "): ) [18045,18046]",
      "dest": "): ) [18045,18046]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [11965,12620]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [11965,12620]"
    },
    {
      "src": "parameter [11119,11126]",
      "dest": "parameter [11119,11126]"
    },
    {
      "src": "identifier: getOrder [39534,39542]",
      "dest": "identifier: getOrder [39537,39545]"
    },
    {
      "src": "identifier: IERC721 [38878,38885]",
      "dest": "identifier: IERC721 [38881,38888]"
    },
    {
      "src": "modifier: modifier [2301,2309]",
      "dest": "modifier: modifier [2301,2309]"
    },
    {
      "src": "number_literal: 0 [5882,5883]",
      "dest": "number_literal: 0 [5882,5883]"
    },
    {
      "src": "visibility [23573,23581]",
      "dest": "visibility [23573,23581]"
    },
    {
      "src": "identifier: isApprovedForAll [37644,37660]",
      "dest": "identifier: isApprovedForAll [37647,37663]"
    },
    {
      "src": "call_argument [36995,37005]",
      "dest": "call_argument [36998,37008]"
    },
    {
      "src": "(: ( [39694,39695]",
      "dest": "(: ( [39697,39698]"
    },
    {
      "src": "expression_statement [35285,35342]",
      "dest": "expression_statement [35288,35345]"
    },
    {
      "src": "uint: uint [35063,35067]",
      "dest": "uint: uint [35066,35070]"
    },
    {
      "src": ".: . [39823,39824]",
      "dest": ".: . [39826,39827]"
    },
    {
      "src": "abstract: abstract [655,663]",
      "dest": "abstract: abstract [655,663]"
    },
    {
      "src": "primitive_type [20697,20701]",
      "dest": "primitive_type [20697,20701]"
    },
    {
      "src": "call_expression [8463,8505]",
      "dest": "call_expression [8463,8505]"
    },
    {
      "src": ",: , [34769,34770]",
      "dest": ",: , [34772,34773]"
    },
    {
      "src": "primitive_type [27957,27964]",
      "dest": "primitive_type [27957,27964]"
    },
    {
      "src": "identifier: value [18384,18389]",
      "dest": "identifier: value [18384,18389]"
    },
    {
      "src": "{: { [7832,7833]",
      "dest": "{: { [7832,7833]"
    },
    {
      "src": "(: ( [20106,20107]",
      "dest": "(: ( [20106,20107]"
    },
    {
      "src": "using_directive [33852,33879]",
      "dest": "using_directive [33855,33882]"
    },
    {
      "src": "): ) [9076,9077]",
      "dest": "): ) [9076,9077]"
    },
    {
      "src": "type_name [23527,23533]",
      "dest": "type_name [23527,23533]"
    },
    {
      "src": "address: address [34742,34749]",
      "dest": "address: address [34745,34752]"
    },
    {
      "src": "internal: internal [16910,16918]",
      "dest": "internal: internal [16910,16918]"
    },
    {
      "src": "user_defined_type [40835,40840]",
      "dest": "user_defined_type [40844,40849]"
    },
    {
      "src": "private: private [1663,1670]",
      "dest": "private: private [1663,1670]"
    },
    {
      "src": "memory: memory [38043,38049]",
      "dest": "memory: memory [38046,38052]"
    },
    {
      "src": "event_paramater [26784,26808]",
      "dest": "event_paramater [26784,26808]"
    },
    {
      "src": "visibility [5824,5832]",
      "dest": "visibility [5824,5832]"
    },
    {
      "src": "type_name [26784,26791]",
      "dest": "type_name [26784,26791]"
    },
    {
      "src": "type_name [4882,4889]",
      "dest": "type_name [4882,4889]"
    },
    {
      "src": "type_name [13056,13063]",
      "dest": "type_name [13056,13063]"
    },
    {
      "src": "uint: uint [31034,31038]",
      "dest": "uint: uint [31037,31041]"
    },
    {
      "src": ".: . [36466,36467]",
      "dest": ".: . [36469,36470]"
    },
    {
      "src": "uint256: uint256 [6246,6253]",
      "dest": "uint256: uint256 [6246,6253]"
    },
    {
      "src": "identifier: order [37248,37253]",
      "dest": "identifier: order [37251,37256]"
    },
    {
      "src": "identifier: c [7184,7185]",
      "dest": "identifier: c [7184,7185]"
    },
    {
      "src": "(: ( [22542,22543]",
      "dest": "(: ( [22542,22543]"
    },
    {
      "src": "member_expression [776,786]",
      "dest": "member_expression [776,786]"
    },
    {
      "src": "identifier: delegatecall [20745,20757]",
      "dest": "identifier: delegatecall [20745,20757]"
    },
    {
      "src": "visibility [11096,11104]",
      "dest": "visibility [11096,11104]"
    },
    {
      "src": "emit_statement [37884,37949]",
      "dest": "emit_statement [37887,37952]"
    },
    {
      "src": "external: external [38004,38012]",
      "dest": "external: external [38007,38015]"
    },
    {
      "src": "primitive_type [34407,34411]",
      "dest": "primitive_type [34410,34414]"
    },
    {
      "src": "\": \" [15993,15994]",
      "dest": "\": \" [15993,15994]"
    },
    {
      "src": "visibility [19087,19095]",
      "dest": "visibility [19087,19095]"
    },
    {
      "src": "identifier: _price [37348,37354]",
      "dest": "identifier: _price [37351,37357]"
    },
    {
      "src": "{: { [39789,39790]",
      "dest": "{: { [39792,39793]"
    },
    {
      "src": "call_argument [18806,18816]",
      "dest": "call_argument [18806,18816]"
    },
    {
      "src": "call_argument [38680,38686]",
      "dest": "call_argument [38683,38689]"
    },
    {
      "src": "(: ( [36460,36461]",
      "dest": "(: ( [36463,36464]"
    },
    {
      "src": ",: , [29760,29761]",
      "dest": ",: , [29760,29761]"
    },
    {
      "src": "expression_statement [39358,39415]",
      "dest": "expression_statement [39361,39418]"
    },
    {
      "src": "call_argument [36792,36805]",
      "dest": "call_argument [36795,36808]"
    },
    {
      "src": "): ) [3338,3339]",
      "dest": "): ) [3338,3339]"
    },
    {
      "src": "parameter [7778,7787]",
      "dest": "parameter [7778,7787]"
    },
    {
      "src": ",: , [6742,6743]",
      "dest": ",: , [6742,6743]"
    },
    {
      "src": "identifier: recipient [15732,15741]",
      "dest": "identifier: recipient [15732,15741]"
    },
    {
      "src": ",: , [21461,21462]",
      "dest": ",: , [21461,21462]"
    },
    {
      "src": "binary_expression [37546,37687]",
      "dest": "binary_expression [37549,37690]"
    },
    {
      "src": "function_definition [6650,6808]",
      "dest": "function_definition [6650,6808]"
    },
    {
      "src": ",: , [39085,39086]",
      "dest": ",: , [39088,39089]"
    },
    {
      "src": "expression_statement [23390,23481]",
      "dest": "expression_statement [23390,23481]"
    },
    {
      "src": "call_argument [35403,35430]",
      "dest": "call_argument [35406,35433]"
    },
    {
      "src": "primitive_type [36548,36555]",
      "dest": "primitive_type [36551,36558]"
    },
    {
      "src": "}: } [21591,21592]",
      "dest": "}: } [21591,21592]"
    },
    {
      "src": "\": \" [16082,16083]",
      "dest": "\": \" [16082,16083]"
    },
    {
      "src": "identifier: order [36461,36466]",
      "dest": "identifier: order [36464,36469]"
    },
    {
      "src": "identifier: tokenID [36798,36805]",
      "dest": "identifier: tokenID [36801,36808]"
    },
    {
      "src": "\": \" [25251,25252]",
      "dest": "\": \" [25251,25252]"
    },
    {
      "src": "): ) [7155,7156]",
      "dest": "): ) [7155,7156]"
    },
    {
      "src": "(: ( [707,708]",
      "dest": "(: ( [707,708]"
    },
    {
      "src": "parameter [9039,9048]",
      "dest": "parameter [9039,9048]"
    },
    {
      "src": "string [33380,33413]",
      "dest": "string [33383,33416]"
    },
    {
      "src": "identifier: token [22513,22518]",
      "dest": "identifier: token [22513,22518]"
    },
    {
      "src": "assignment_expression [37775,37826]",
      "dest": "assignment_expression [37778,37829]"
    },
    {
      "src": "variable_declaration [20697,20709]",
      "dest": "variable_declaration [20697,20709]"
    },
    {
      "src": "string [18582,18613]",
      "dest": "string [18582,18613]"
    },
    {
      "src": "\": \" [41006,41007]",
      "dest": "\": \" [41015,41016]"
    },
    {
      "src": "state_mutability [8429,8433]",
      "dest": "state_mutability [8429,8433]"
    },
    {
      "src": ",: , [34740,34741]",
      "dest": ",: , [34743,34744]"
    },
    {
      "src": "comment: // The easiest way to bubble the revert reason is using memory via assembly [21181,21256]",
      "dest": "comment: // The easiest way to bubble the revert reason is using memory via assembly [21181,21256]"
    },
    {
      "src": "user_defined_type [37235,37240]",
      "dest": "user_defined_type [37238,37243]"
    },
    {
      "src": "type_name [8409,8416]",
      "dest": "type_name [8409,8416]"
    },
    {
      "src": ".: . [36596,36597]",
      "dest": ".: . [36599,36600]"
    },
    {
      "src": "function_definition [19024,19223]",
      "dest": "function_definition [19024,19223]"
    },
    {
      "src": "primitive_type [26341,26348]",
      "dest": "primitive_type [26341,26348]"
    },
    {
      "src": "view: view [27185,27189]",
      "dest": "view: view [27185,27189]"
    },
    {
      "src": "address: address [2167,2174]",
      "dest": "address: address [2167,2174]"
    },
    {
      "src": "primitive_type [41228,41235]",
      "dest": "primitive_type [41237,41244]"
    },
    {
      "src": "type_name [38333,38337]",
      "dest": "type_name [38336,38340]"
    },
    {
      "src": "function: function [6188,6196]",
      "dest": "function: function [6188,6196]"
    },
    {
      "src": ",: , [22444,22445]",
      "dest": ",: , [22444,22445]"
    },
    {
      "src": "binary_expression [6736,6742]",
      "dest": "binary_expression [6736,6742]"
    },
    {
      "src": "identifier: ApprovalForAll [26746,26760]",
      "dest": "identifier: ApprovalForAll [26746,26760]"
    },
    {
      "src": "type_name [34199,34203]",
      "dest": "type_name [34202,34206]"
    },
    {
      "src": "memory: memory [17302,17308]",
      "dest": "memory: memory [17302,17308]"
    },
    {
      "src": "identifier: order [39158,39163]",
      "dest": "identifier: order [39161,39166]"
    },
    {
      "src": "): ) [865,866]",
      "dest": "): ) [865,866]"
    },
    {
      "src": "variable_declaration_statement [18687,18762]",
      "dest": "variable_declaration_statement [18687,18762]"
    },
    {
      "src": "parameter [20876,20888]",
      "dest": "parameter [20876,20888]"
    },
    {
      "src": "(: ( [37680,37681]",
      "dest": "(: ( [37683,37684]"
    },
    {
      "src": "function: function [8385,8393]",
      "dest": "function: function [8385,8393]"
    },
    {
      "src": "(: ( [21401,21402]",
      "dest": "(: ( [21401,21402]"
    },
    {
      "src": "identifier: maker [34064,34069]",
      "dest": "identifier: maker [34067,34072]"
    },
    {
      "src": "identifier: IERC165 [25625,25632]",
      "dest": "identifier: IERC165 [25625,25632]"
    },
    {
      "src": "{: { [20979,20980]",
      "dest": "{: { [20979,20980]"
    },
    {
      "src": "==: == [40384,40386]",
      "dest": "==: == [40393,40395]"
    },
    {
      "src": "identifier: msg [36614,36617]",
      "dest": "identifier: msg [36617,36620]"
    },
    {
      "src": "): ) [35400,35401]",
      "dest": "): ) [35403,35404]"
    },
    {
      "src": "uint256: uint256 [4573,4580]",
      "dest": "uint256: uint256 [4573,4580]"
    },
    {
      "src": "memory: memory [20535,20541]",
      "dest": "memory: memory [20535,20541]"
    },
    {
      "src": "address: address [27971,27978]",
      "dest": "address: address [27971,27978]"
    },
    {
      "src": "parameter [741,756]",
      "dest": "parameter [741,756]"
    },
    {
      "src": "true [5194,5198]",
      "dest": "true [5194,5198]"
    },
    {
      "src": "call_argument [38589,38599]",
      "dest": "call_argument [38592,38602]"
    },
    {
      "src": "parameter [20107,20119]",
      "dest": "parameter [20107,20119]"
    },
    {
      "src": "(: ( [34808,34809]",
      "dest": "(: ( [34811,34812]"
    },
    {
      "src": ",: , [38686,38687]",
      "dest": ",: , [38689,38690]"
    },
    {
      "src": "(: ( [37602,37603]",
      "dest": "(: ( [37605,37606]"
    },
    {
      "src": "public: public [33961,33967]",
      "dest": "public: public [33964,33970]"
    },
    {
      "src": "): ) [20762,20763]",
      "dest": "): ) [20762,20763]"
    },
    {
      "src": "\": \" [20174,20175]",
      "dest": "\": \" [20174,20175]"
    },
    {
      "src": "identifier: payTokenAddress [34272,34287]",
      "dest": "identifier: payTokenAddress [34275,34290]"
    },
    {
      "src": "member_expression [40601,40617]",
      "dest": "member_expression [40610,40626]"
    },
    {
      "src": "event_paramater [26383,26406]",
      "dest": "event_paramater [26383,26406]"
    },
    {
      "src": ".: . [40975,40976]",
      "dest": ".: . [40984,40985]"
    },
    {
      "src": "boolean_literal [4360,4365]",
      "dest": "boolean_literal [4360,4365]"
    },
    {
      "src": "contract_body [30806,31043]",
      "dest": "contract_body [30812,31046]"
    },
    {
      "src": "view: view [19096,19100]",
      "dest": "view: view [19096,19100]"
    },
    {
      "src": "identifier: b [8527,8528]",
      "dest": "identifier: b [8527,8528]"
    },
    {
      "src": "variable_declaration [38351,38365]",
      "dest": "variable_declaration [38354,38368]"
    },
    {
      "src": "primitive_type [34742,34749]",
      "dest": "primitive_type [34745,34752]"
    },
    {
      "src": "parameter [18357,18374]",
      "dest": "parameter [18357,18374]"
    },
    {
      "src": ",: , [19066,19067]",
      "dest": ",: , [19066,19067]"
    },
    {
      "src": "parameter [28576,28586]",
      "dest": "parameter [28576,28586]"
    },
    {
      "src": "identifier: functionCallWithValue [17959,17980]",
      "dest": "identifier: functionCallWithValue [17959,17980]"
    },
    {
      "src": "unary_expression [35235,35248]",
      "dest": "unary_expression [35238,35251]"
    },
    {
      "src": "function: function [36863,36871]",
      "dest": "function: function [36866,36874]"
    },
    {
      "src": "identifier: IERC20 [33872,33878]",
      "dest": "identifier: IERC20 [33875,33881]"
    },
    {
      "src": "identifier: order [38794,38799]",
      "dest": "identifier: order [38797,38802]"
    },
    {
      "src": "identifier: fixedPrice [36836,36846]",
      "dest": "identifier: fixedPrice [36839,36849]"
    },
    {
      "src": "type_name [17875,17880]",
      "dest": "type_name [17875,17880]"
    },
    {
      "src": "parenthesized_expression [21544,21558]",
      "dest": "parenthesized_expression [21544,21558]"
    },
    {
      "src": "identifier: safeTransferFrom [38572,38588]",
      "dest": "identifier: safeTransferFrom [38575,38591]"
    },
    {
      "src": "): ) [19085,19086]",
      "dest": "): ) [19085,19086]"
    },
    {
      "src": "primitive_type [26363,26370]",
      "dest": "primitive_type [26363,26370]"
    },
    {
      "src": "contract_body [681,1047]",
      "dest": "contract_body [681,1047]"
    },
    {
      "src": "): ) [820,821]",
      "dest": "): ) [820,821]"
    },
    {
      "src": "event_paramater [34726,34740]",
      "dest": "event_paramater [34729,34743]"
    },
    {
      "src": "}: } [40579,40580]",
      "dest": "}: } [40588,40589]"
    },
    {
      "src": "): ) [11923,11924]",
      "dest": "): ) [11923,11924]"
    },
    {
      "src": "type_name [5492,5499]",
      "dest": "type_name [5492,5499]"
    },
    {
      "src": "primitive_type [9039,9046]",
      "dest": "primitive_type [9039,9046]"
    },
    {
      "src": "address: address [11893,11900]",
      "dest": "address: address [11893,11900]"
    },
    {
      "src": "member_expression [38100,38117]",
      "dest": "member_expression [38103,38120]"
    },
    {
      "src": "return: return [6351,6357]",
      "dest": "return: return [6351,6357]"
    },
    {
      "src": "(: ( [7124,7125]",
      "dest": "(: ( [7124,7125]"
    },
    {
      "src": "memory: memory [10725,10731]",
      "dest": "memory: memory [10725,10731]"
    },
    {
      "src": "primitive_type [32717,32724]",
      "dest": "primitive_type [32720,32727]"
    },
    {
      "src": "type_alias [33858,33867]",
      "dest": "type_alias [33861,33870]"
    },
    {
      "src": "{: { [758,759]",
      "dest": "{: { [758,759]"
    },
    {
      "src": "type_name [7091,7098]",
      "dest": "type_name [7091,7098]"
    },
    {
      "src": "return_statement [5564,5582]",
      "dest": "return_statement [5564,5582]"
    },
    {
      "src": "memory: memory [24942,24948]",
      "dest": "memory: memory [24942,24948]"
    },
    {
      "src": "interface: interface [30783,30792]",
      "dest": "interface: interface [30786,30795]"
    },
    {
      "src": "type_name [34840,34847]",
      "dest": "type_name [34843,34850]"
    },
    {
      "src": "[: [ [41184,41185]",
      "dest": "[: [ [41193,41194]"
    },
    {
      "src": "primitive_type [15743,15750]",
      "dest": "primitive_type [15743,15750]"
    },
    {
      "src": "member_expression [36807,36828]",
      "dest": "member_expression [36810,36831]"
    },
    {
      "src": "return_statement [7157,7166]",
      "dest": "return_statement [7157,7166]"
    },
    {
      "src": "identifier: previousAddress [39464,39479]",
      "dest": "identifier: previousAddress [39467,39482]"
    },
    {
      "src": "call_expression [15779,15852]",
      "dest": "call_expression [15779,15852]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [17036,17252]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [17036,17252]"
    },
    {
      "src": "member_expression [38589,38599]",
      "dest": "member_expression [38592,38602]"
    },
    {
      "src": "identifier: abi [25176,25179]",
      "dest": "identifier: abi [25176,25179]"
    },
    {
      "src": "(: ( [11118,11119]",
      "dest": "(: ( [11118,11119]"
    },
    {
      "src": "yul_path [21463,21478]",
      "dest": "yul_path [21463,21478]"
    },
    {
      "src": "identifier: a [9168,9169]",
      "dest": "identifier: a [9168,9169]"
    },
    {
      "src": "expression_statement [15779,15853]",
      "dest": "expression_statement [15779,15853]"
    },
    {
      "src": "call_argument [18582,18613]",
      "dest": "call_argument [18582,18613]"
    },
    {
      "src": "address: address [17280,17287]",
      "dest": "address: address [17280,17287]"
    },
    {
      "src": "type_cast_expression [36626,36639]",
      "dest": "type_cast_expression [36629,36642]"
    },
    {
      "src": "true: true [4691,4695]",
      "dest": "true: true [4691,4695]"
    },
    {
      "src": "parameter [30925,30937]",
      "dest": "parameter [30931,30943]"
    },
    {
      "src": "identifier: abi [24043,24046]",
      "dest": "identifier: abi [24043,24046]"
    },
    {
      "src": "expression_statement [6728,6778]",
      "dest": "expression_statement [6728,6778]"
    },
    {
      "src": "uint256: uint256 [18376,18383]",
      "dest": "uint256: uint256 [18376,18383]"
    },
    {
      "src": "primitive_type [17859,17866]",
      "dest": "primitive_type [17859,17866]"
    },
    {
      "src": "type_name [19443,19450]",
      "dest": "type_name [19443,19450]"
    },
    {
      "src": "primitive_type [39543,39547]",
      "dest": "primitive_type [39546,39550]"
    },
    {
      "src": "(: ( [37900,37901]",
      "dest": "(: ( [37903,37904]"
    },
    {
      "src": "type_name [26582,26589]",
      "dest": "type_name [26582,26589]"
    },
    {
      "src": "state_mutability [2145,2149]",
      "dest": "state_mutability [2145,2149]"
    },
    {
      "src": "string_literal [6310,6339]",
      "dest": "string_literal [6310,6339]"
    },
    {
      "src": ",: , [39133,39134]",
      "dest": ",: , [39136,39137]"
    },
    {
      "src": "type_name [6212,6219]",
      "dest": "type_name [6212,6219]"
    },
    {
      "src": "parameter [29109,29119]",
      "dest": "parameter [29109,29119]"
    },
    {
      "src": "for: for [33837,33840]",
      "dest": "for: for [33840,33843]"
    },
    {
      "src": "call_expression [20562,20580]",
      "dest": "call_expression [20562,20580]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [19231,19409]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [19231,19409]"
    },
    {
      "src": "primitive_type [6201,6208]",
      "dest": "primitive_type [6201,6208]"
    },
    {
      "src": "function: function [802,810]",
      "dest": "function: function [802,810]"
    },
    {
      "src": "primitive_type [23852,23859]",
      "dest": "primitive_type [23852,23859]"
    },
    {
      "src": "(: ( [20798,20799]",
      "dest": "(: ( [20798,20799]"
    },
    {
      "src": "extcodesize: extcodesize [14708,14719]",
      "dest": "extcodesize: extcodesize [14708,14719]"
    },
    {
      "src": "expression_statement [16006,16085]",
      "dest": "expression_statement [16006,16085]"
    },
    {
      "src": "(: ( [26340,26341]",
      "dest": "(: ( [26340,26341]"
    },
    {
      "src": "uint256: uint256 [4242,4249]",
      "dest": "uint256: uint256 [4242,4249]"
    },
    {
      "src": "return_type_definition [39570,39592]",
      "dest": "return_type_definition [39573,39595]"
    },
    {
      "src": "call_argument [22513,22518]",
      "dest": "call_argument [22513,22518]"
    },
    {
      "src": "call_argument [37270,37278]",
      "dest": "call_argument [37273,37281]"
    },
    {
      "src": "expression_statement [38561,38623]",
      "dest": "expression_statement [38564,38626]"
    },
    {
      "src": "identifier: errorMessage [21545,21557]",
      "dest": "identifier: errorMessage [21545,21557]"
    },
    {
      "src": "(: ( [36994,36995]",
      "dest": "(: ( [36997,36998]"
    },
    {
      "src": "(: ( [23639,23640]",
      "dest": "(: ( [23639,23640]"
    },
    {
      "src": "=: = [2900,2901]",
      "dest": "=: = [2900,2901]"
    },
    {
      "src": "string_literal [8478,8504]",
      "dest": "string_literal [8478,8504]"
    },
    {
      "src": "memory: memory [20076,20082]",
      "dest": "memory: memory [20076,20082]"
    },
    {
      "src": "interface: interface [25615,25624]",
      "dest": "interface: interface [25615,25624]"
    },
    {
      "src": "return_type_definition [4918,4941]",
      "dest": "return_type_definition [4918,4941]"
    },
    {
      "src": "member_expression [36530,36543]",
      "dest": "member_expression [36533,36546]"
    },
    {
      "src": "expression_statement [8463,8506]",
      "dest": "expression_statement [8463,8506]"
    },
    {
      "src": ".: . [39163,39164]",
      "dest": ".: . [39166,39167]"
    },
    {
      "src": "primitive_type [5532,5539]",
      "dest": "primitive_type [5532,5539]"
    },
    {
      "src": "identifier: success [15949,15956]",
      "dest": "identifier: success [15949,15956]"
    },
    {
      "src": "identifier: owner [13560,13565]",
      "dest": "identifier: owner [13560,13565]"
    },
    {
      "src": "call_expression [19736,19759]",
      "dest": "call_expression [19736,19759]"
    },
    {
      "src": "(: ( [19794,19795]",
      "dest": "(: ( [19794,19795]"
    },
    {
      "src": "identifier: _ENTERED [33370,33378]",
      "dest": "identifier: _ENTERED [33373,33381]"
    },
    {
      "src": "return_statement [5592,5613]",
      "dest": "return_statement [5592,5613]"
    },
    {
      "src": "primitive_type [23541,23548]",
      "dest": "primitive_type [23541,23548]"
    },
    {
      "src": "identifier: feeRateDenominator [40694,40712]",
      "dest": "identifier: feeRateDenominator [40703,40721]"
    },
    {
      "src": "): ) [36897,36898]",
      "dest": "): ) [36900,36901]"
    },
    {
      "src": ",: , [17430,17431]",
      "dest": ",: , [17430,17431]"
    },
    {
      "src": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [13755,14336]",
      "dest": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [13755,14336]"
    },
    {
      "src": ".: . [40401,40402]",
      "dest": ".: . [40410,40411]"
    },
    {
      "src": "address: address [34856,34863]",
      "dest": "address: address [34859,34866]"
    },
    {
      "src": "(: ( [25186,25187]",
      "dest": "(: ( [25186,25187]"
    },
    {
      "src": "(: ( [34710,34711]",
      "dest": "(: ( [34713,34714]"
    },
    {
      "src": "type_name [29109,29116]",
      "dest": "type_name [29109,29116]"
    },
    {
      "src": "identifier: spender [23549,23556]",
      "dest": "identifier: spender [23549,23556]"
    },
    {
      "src": "event_paramater [26533,26554]",
      "dest": "event_paramater [26533,26554]"
    },
    {
      "src": "primitive_type [13567,13574]",
      "dest": "primitive_type [13567,13574]"
    },
    {
      "src": "}: } [30726,30727]",
      "dest": "}: } [30726,30727]"
    },
    {
      "src": "identifier: _erc721AddressWithCopyright [39238,39265]",
      "dest": "identifier: _erc721AddressWithCopyright [39241,39268]"
    },
    {
      "src": "returns: returns [5838,5845]",
      "dest": "returns: returns [5838,5845]"
    },
    {
      "src": "identifier: ReentrancyGuard [31887,31902]",
      "dest": "identifier: ReentrancyGuard [31890,31905]"
    },
    {
      "src": "binary_expression [6795,6800]",
      "dest": "binary_expression [6795,6800]"
    },
    {
      "src": "variable_declaration [38333,38350]",
      "dest": "variable_declaration [38336,38353]"
    },
    {
      "src": "}: } [14728,14729]",
      "dest": "}: } [14728,14729]"
    },
    {
      "src": "string [2366,2400]",
      "dest": "string [2366,2400]"
    },
    {
      "src": "/: / [5247,5248]",
      "dest": "/: / [5247,5248]"
    },
    {
      "src": "yul_function_call [21435,21479]",
      "dest": "yul_function_call [21435,21479]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [14633,14680]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [14633,14680]"
    },
    {
      "src": "type_name [30957,30966]",
      "dest": "type_name [30963,30972]"
    },
    {
      "src": "event_definition [26326,26408]",
      "dest": "event_definition [26326,26408]"
    },
    {
      "src": "=: = [18727,18728]",
      "dest": "=: = [18727,18728]"
    },
    {
      "src": "identifier: c [4345,4346]",
      "dest": "identifier: c [4345,4346]"
    },
    {
      "src": "identifier: a [8406,8407]",
      "dest": "identifier: a [8406,8407]"
    },
    {
      "src": "identifier: require [18462,18469]",
      "dest": "identifier: require [18462,18469]"
    },
    {
      "src": "identifier: order [37508,37513]",
      "dest": "identifier: order [37511,37516]"
    },
    {
      "src": "member_expression [38561,38588]",
      "dest": "member_expression [38564,38591]"
    },
    {
      "src": "returns: returns [4609,4616]",
      "dest": "returns: returns [4609,4616]"
    },
    {
      "src": "comment: // address of maker [34027,34046]",
      "dest": "comment: // address of maker [34030,34049]"
    },
    {
      "src": "identifier: to [30673,30675]",
      "dest": "identifier: to [30673,30675]"
    },
    {
      "src": "binary_expression [10797,10802]",
      "dest": "binary_expression [10797,10802]"
    },
    {
      "src": "primitive_type [27199,27206]",
      "dest": "primitive_type [27199,27206]"
    },
    {
      "src": "parameter [24541,24553]",
      "dest": "parameter [24541,24553]"
    },
    {
      "src": "bytes: bytes [20107,20112]",
      "dest": "bytes: bytes [20107,20112]"
    },
    {
      "src": "returns: returns [20520,20527]",
      "dest": "returns: returns [20520,20527]"
    },
    {
      "src": ",: , [27981,27982]",
      "dest": ",: , [27981,27982]"
    },
    {
      "src": "uint256: uint256 [13592,13599]",
      "dest": "uint256: uint256 [13592,13599]"
    },
    {
      "src": "(: ( [16972,16973]",
      "dest": "(: ( [16972,16973]"
    },
    {
      "src": "identifier: _owner [3404,3410]",
      "dest": "identifier: _owner [3404,3410]"
    },
    {
      "src": "\": \" [23961,23962]",
      "dest": "\": \" [23961,23962]"
    },
    {
      "src": "): ) [18482,18483]",
      "dest": "): ) [18482,18483]"
    },
    {
      "src": "}: } [8535,8536]",
      "dest": "}: } [8535,8536]"
    },
    {
      "src": "comment: // slot's contents, replace the bits taken up by the boolean, and then write [32073,32149]",
      "dest": "comment: // slot's contents, replace the bits taken up by the boolean, and then write [32076,32152]"
    },
    {
      "src": "visibility [33961,33967]",
      "dest": "visibility [33964,33970]"
    },
    {
      "src": "(: ( [22228,22229]",
      "dest": "(: ( [22228,22229]"
    },
    {
      "src": "return: return [4352,4358]",
      "dest": "return: return [4352,4358]"
    },
    {
      "src": ",: , [38599,38600]",
      "dest": ",: , [38602,38603]"
    },
    {
      "src": "string_literal [41006,41062]",
      "dest": "string_literal [41015,41071]"
    },
    {
      "src": "\": \" [7224,7225]",
      "dest": "\": \" [7224,7225]"
    },
    {
      "src": "}: } [2420,2421]",
      "dest": "}: } [2420,2421]"
    },
    {
      "src": "parameter [853,865]",
      "dest": "parameter [853,865]"
    },
    {
      "src": "primitive_type [34338,34342]",
      "dest": "primitive_type [34341,34345]"
    },
    {
      "src": "comment: /**  * @dev Contract module that helps prevent reentrant calls to a function.  *  * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier  * available, which can be applied to functions to make sure there are no nested  * (reentrant) calls to them.  *  * Note that because there is a single `nonReentrant` guard, functions marked as  * `nonReentrant` may not call one another. This can be worked around by making  * those functions `private`, and then adding `external` `nonReentrant` entry  * points to them.  *  * TIP: If you would like to learn more about reentrancy and alternative ways  * to protect against it, check out our blog post  * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].  */ [31102,31867]",
      "dest": "comment: /**  * @dev Contract module that helps prevent reentrant calls to a function.  *  * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier  * available, which can be applied to functions to make sure there are no nested  * (reentrant) calls to them.  *  * Note that because there is a single `nonReentrant` guard, functions marked as  * `nonReentrant` may not call one another. This can be worked around by making  * those functions `private`, and then adding `external` `nonReentrant` entry  * points to them.  *  * TIP: If you would like to learn more about reentrancy and alternative ways  * to protect against it, check out our blog post  * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].  */ [31105,31870]"
    },
    {
      "src": "identifier: _getOrderByID [41088,41101]",
      "dest": "identifier: _getOrderByID [41097,41110]"
    },
    {
      "src": "parameter [41102,41115]",
      "dest": "parameter [41111,41124]"
    },
    {
      "src": "primitive_type [17927,17932]",
      "dest": "primitive_type [17927,17932]"
    },
    {
      "src": "string [19175,19214]",
      "dest": "string [19175,19214]"
    },
    {
      "src": "identifier: getCopyright [30912,30924]",
      "dest": "identifier: getCopyright [30918,30930]"
    },
    {
      "src": ".: . [22561,22562]",
      "dest": ".: . [22561,22562]"
    },
    {
      "src": "primitive_type [1912,1919]",
      "dest": "primitive_type [1912,1919]"
    },
    {
      "src": ".: . [37914,37915]",
      "dest": ".: . [37917,37918]"
    },
    {
      "src": "external: external [11925,11933]",
      "dest": "external: external [11925,11933]"
    },
    {
      "src": "call_argument [35235,35248]",
      "dest": "call_argument [35238,35251]"
    },
    {
      "src": "primitive_type [34519,34523]",
      "dest": "primitive_type [34522,34526]"
    },
    {
      "src": "return: return [10000,10006]",
      "dest": "return: return [10000,10006]"
    },
    {
      "src": "parameter [39734,39753]",
      "dest": "parameter [39737,39756]"
    },
    {
      "src": "}: } [25271,25272]",
      "dest": "}: } [25271,25272]"
    },
    {
      "src": "function_definition [27931,28009]",
      "dest": "function_definition [27931,28009]"
    },
    {
      "src": "string_literal [7858,7886]",
      "dest": "string_literal [7858,7886]"
    },
    {
      "src": ",: , [37098,37099]",
      "dest": ",: , [37101,37102]"
    },
    {
      "src": "call_expression [19777,19829]",
      "dest": "call_expression [19777,19829]"
    },
    {
      "src": "bool: bool [25200,25204]",
      "dest": "bool: bool [25200,25204]"
    },
    {
      "src": ",: , [36640,36641]",
      "dest": ",: , [36643,36644]"
    },
    {
      "src": "inheritance_specifier [33799,33814]",
      "dest": "inheritance_specifier [33802,33817]"
    },
    {
      "src": "member_expression [22543,22570]",
      "dest": "member_expression [22543,22570]"
    },
    {
      "src": "=>: => [34478,34480]",
      "dest": "=>: => [34481,34483]"
    },
    {
      "src": "call_expression [17393,17445]",
      "dest": "call_expression [17393,17445]"
    },
    {
      "src": "{: { [34016,34017]",
      "dest": "{: { [34019,34020]"
    },
    {
      "src": ",: , [19173,19174]",
      "dest": ",: , [19173,19174]"
    },
    {
      "src": "identifier: tokenAddress [37514,37526]",
      "dest": "identifier: tokenAddress [37517,37529]"
    },
    {
      "src": "{: { [19543,19544]",
      "dest": "{: { [19543,19544]"
    },
    {
      "src": "type_name [22887,22893]",
      "dest": "type_name [22887,22893]"
    },
    {
      "src": "{: { [6717,6718]",
      "dest": "{: { [6717,6718]"
    },
    {
      "src": "primitive_type [15944,15948]",
      "dest": "primitive_type [15944,15948]"
    },
    {
      "src": "solidity_version_comparison_operator [97,99]",
      "dest": "solidity_version_comparison_operator [97,99]"
    },
    {
      "src": "variable_declaration_statement [36919,36964]",
      "dest": "variable_declaration_statement [36922,36967]"
    },
    {
      "src": "primitive_type [34809,34813]",
      "dest": "primitive_type [34812,34816]"
    },
    {
      "src": ",: , [25206,25207]",
      "dest": ",: , [25206,25207]"
    },
    {
      "src": "return: return [4655,4661]",
      "dest": "return: return [4655,4661]"
    },
    {
      "src": "event_paramater [34614,34630]",
      "dest": "event_paramater [34617,34633]"
    },
    {
      "src": ".: . [38799,38800]",
      "dest": ".: . [38802,38803]"
    },
    {
      "src": "view: view [19515,19519]",
      "dest": "view: view [19515,19519]"
    },
    {
      "src": "primitive_type [34573,34577]",
      "dest": "primitive_type [34576,34580]"
    },
    {
      "src": "struct_declaration [34003,34431]",
      "dest": "struct_declaration [34006,34434]"
    },
    {
      "src": "primitive_type [3102,3109]",
      "dest": "primitive_type [3102,3109]"
    },
    {
      "src": "private: private [32725,32732]",
      "dest": "private: private [32728,32735]"
    },
    {
      "src": "(: ( [10796,10797]",
      "dest": "(: ( [10796,10797]"
    },
    {
      "src": "boolean_literal [4388,4392]",
      "dest": "boolean_literal [4388,4392]"
    },
    {
      "src": "type_name [34519,34523]",
      "dest": "type_name [34522,34526]"
    },
    {
      "src": "): ) [20541,20542]",
      "dest": "): ) [20541,20542]"
    },
    {
      "src": "primitive_type [34534,34541]",
      "dest": "primitive_type [34537,34544]"
    },
    {
      "src": "binary_expression [40323,40353]",
      "dest": "binary_expression [40332,40362]"
    },
    {
      "src": "identifier: maker [39093,39098]",
      "dest": "identifier: maker [39096,39101]"
    },
    {
      "src": "visibility [27176,27184]",
      "dest": "visibility [27176,27184]"
    },
    {
      "src": "primitive_type [27971,27978]",
      "dest": "primitive_type [27971,27978]"
    },
    {
      "src": "parameter [22446,22456]",
      "dest": "parameter [22446,22456]"
    },
    {
      "src": "call_expression [18562,18580]",
      "dest": "call_expression [18562,18580]"
    },
    {
      "src": "member_expression [37911,37921]",
      "dest": "member_expression [37914,37924]"
    },
    {
      "src": "pure: pure [4913,4917]",
      "dest": "pure: pure [4913,4917]"
    },
    {
      "src": "): ) [25204,25205]",
      "dest": "): ) [25204,25205]"
    },
    {
      "src": "(: ( [38449,38450]",
      "dest": "(: ( [38452,38453]"
    },
    {
      "src": ".: . [38764,38765]",
      "dest": ".: . [38767,38768]"
    },
    {
      "src": "call_argument [18470,18500]",
      "dest": "call_argument [18470,18500]"
    },
    {
      "src": "expression_statement [39800,39835]",
      "dest": "expression_statement [39803,39838]"
    },
    {
      "src": "identifier: SafeERC20 [33858,33867]",
      "dest": "identifier: SafeERC20 [33861,33870]"
    },
    {
      "src": "(: ( [24540,24541]",
      "dest": "(: ( [24540,24541]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting with custom message when dividing by zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryMod}.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [10028,10677]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting with custom message when dividing by zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryMod}.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [10028,10677]"
    },
    {
      "src": "): ) [35750,35751]",
      "dest": "): ) [35753,35754]"
    },
    {
      "src": "call_expression [38878,38962]",
      "dest": "call_expression [38881,38965]"
    },
    {
      "src": "identifier: Ownable [33790,33797]",
      "dest": "identifier: Ownable [33793,33800]"
    },
    {
      "src": "primitive_type [10718,10724]",
      "dest": "primitive_type [10718,10724]"
    },
    {
      "src": "identifier: tokenId [26598,26605]",
      "dest": "identifier: tokenId [26598,26605]"
    },
    {
      "src": "): ) [10776,10777]",
      "dest": "): ) [10776,10777]"
    },
    {
      "src": ",: , [39156,39157]",
      "dest": ",: , [39159,39160]"
    },
    {
      "src": "state_mutability [14388,14392]",
      "dest": "state_mutability [14388,14392]"
    },
    {
      "src": "identifier: b [5500,5501]",
      "dest": "identifier: b [5500,5501]"
    },
    {
      "src": "call_argument [9129,9135]",
      "dest": "call_argument [9129,9135]"
    },
    {
      "src": "(: ( [5193,5194]",
      "dest": "(: ( [5193,5194]"
    },
    {
      "src": "type_name [20697,20701]",
      "dest": "type_name [20697,20701]"
    },
    {
      "src": "=: = [40641,40642]",
      "dest": "=: = [40650,40651]"
    },
    {
      "src": "comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [23109,23163]",
      "dest": "comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [23109,23163]"
    },
    {
      "src": "function_body [15768,16092]",
      "dest": "function_body [15768,16092]"
    },
    {
      "src": "comment: // File: contracts/Dependencies/IERC165.sol [25279,25322]",
      "dest": "comment: // File: contracts/Dependencies/IERC165.sol [25279,25322]"
    },
    {
      "src": "state_mutability [29353,29357]",
      "dest": "state_mutability [29353,29357]"
    },
    {
      "src": "identifier: balance [15801,15808]",
      "dest": "identifier: balance [15801,15808]"
    },
    {
      "src": "bool: bool [20697,20701]",
      "dest": "bool: bool [20697,20701]"
    },
    {
      "src": "primitive_type [26810,26814]",
      "dest": "primitive_type [26810,26814]"
    },
    {
      "src": "function: function [15697,15705]",
      "dest": "function: function [15697,15705]"
    },
    {
      "src": "uint256: uint256 [17894,17901]",
      "dest": "uint256: uint256 [17894,17901]"
    },
    {
      "src": "address: address [39230,39237]",
      "dest": "address: address [39233,39240]"
    },
    {
      "src": "type_name [34534,34541]",
      "dest": "type_name [34537,34544]"
    },
    {
      "src": "identifier: Erc721AddressWithCopyrightChanged [34950,34983]",
      "dest": "identifier: Erc721AddressWithCopyrightChanged [34953,34986]"
    },
    {
      "src": "type_name [13567,13574]",
      "dest": "type_name [13567,13574]"
    },
    {
      "src": "solidity_pragma_token [89,105]",
      "dest": "solidity_pragma_token [89,105]"
    },
    {
      "src": ",: , [12658,12659]",
      "dest": ",: , [12658,12659]"
    },
    {
      "src": "uint256: uint256 [10769,10776]",
      "dest": "uint256: uint256 [10769,10776]"
    },
    {
      "src": "identifier: IERC20 [24541,24547]",
      "dest": "identifier: IERC20 [24541,24547]"
    },
    {
      "src": "type_name [1744,1751]",
      "dest": "type_name [1744,1751]"
    },
    {
      "src": "{: { [39284,39285]",
      "dest": "{: { [39287,39288]"
    },
    {
      "src": "identifier: msgSender [1964,1973]",
      "dest": "identifier: msgSender [1964,1973]"
    },
    {
      "src": "function_definition [7765,7918]",
      "dest": "function_definition [7765,7918]"
    },
    {
      "src": "identifier: functionStaticCall [19142,19160]",
      "dest": "identifier: functionStaticCall [19142,19160]"
    },
    {
      "src": ",: , [20806,20807]",
      "dest": ",: , [20806,20807]"
    },
    {
      "src": "): ) [3183,3184]",
      "dest": "): ) [3183,3184]"
    },
    {
      "src": "parameter [16891,16908]",
      "dest": "parameter [16891,16908]"
    },
    {
      "src": "assignment_expression [39358,39414]",
      "dest": "assignment_expression [39361,39417]"
    },
    {
      "src": "memory: memory [18398,18404]",
      "dest": "memory: memory [18398,18404]"
    },
    {
      "src": "memory: memory [16934,16940]",
      "dest": "memory: memory [16934,16940]"
    },
    {
      "src": "indexed: indexed [1752,1759]",
      "dest": "indexed: indexed [1752,1759]"
    },
    {
      "src": "identifier: _getOrderByID [37256,37269]",
      "dest": "identifier: _getOrderByID [37259,37272]"
    },
    {
      "src": ".: . [38671,38672]",
      "dest": ".: . [38674,38675]"
    },
    {
      "src": ",: , [4291,4292]",
      "dest": ",: , [4291,4292]"
    },
    {
      "src": "visibility [4904,4912]",
      "dest": "visibility [4904,4912]"
    },
    {
      "src": "): ) [22588,22589]",
      "dest": "): ) [22588,22589]"
    },
    {
      "src": "else: else [21048,21052]",
      "dest": "else: else [21048,21052]"
    },
    {
      "src": "): ) [36354,36355]",
      "dest": "): ) [36357,36358]"
    },
    {
      "src": "variable_declaration_statement [37471,37528]",
      "dest": "variable_declaration_statement [37474,37531]"
    },
    {
      "src": "type_name [12660,12667]",
      "dest": "type_name [12660,12667]"
    },
    {
      "src": "pure: pure [6232,6236]",
      "dest": "pure: pure [6232,6236]"
    },
    {
      "src": "): ) [38159,38160]",
      "dest": "): ) [38162,38163]"
    },
    {
      "src": "primitive_type [6708,6715]",
      "dest": "primitive_type [6708,6715]"
    },
    {
      "src": "comment: // File: contracts/proxy/FixedPriceTrade721.sol [33708,33755]",
      "dest": "comment: // File: contracts/proxy/FixedPriceTrade721.sol [33711,33758]"
    },
    {
      "src": "member_expression [37837,37864]",
      "dest": "member_expression [37840,37867]"
    },
    {
      "src": "call_expression [35227,35272]",
      "dest": "call_expression [35230,35275]"
    },
    {
      "src": "=: = [38056,38057]",
      "dest": "=: = [38059,38060]"
    },
    {
      "src": "uint256: uint256 [5802,5809]",
      "dest": "uint256: uint256 [5802,5809]"
    },
    {
      "src": ",: , [39753,39754]",
      "dest": ",: , [39756,39757]"
    },
    {
      "src": "parameter [27971,27981]",
      "dest": "parameter [27971,27981]"
    },
    {
      "src": "call_argument [16014,16021]",
      "dest": "call_argument [16014,16021]"
    },
    {
      "src": "identifier: _NOT_ENTERED [32694,32706]",
      "dest": "identifier: _NOT_ENTERED [32697,32709]"
    },
    {
      "src": "struct_member [30841,30856]",
      "dest": "struct_member [30847,30862]"
    },
    {
      "src": "identifier: sender [37104,37110]",
      "dest": "identifier: sender [37107,37113]"
    },
    {
      "src": "): ) [13113,13114]",
      "dest": "): ) [13113,13114]"
    },
    {
      "src": "identifier: _orderID [34814,34822]",
      "dest": "identifier: _orderID [34817,34825]"
    },
    {
      "src": "): ) [5300,5301]",
      "dest": "): ) [5300,5301]"
    },
    {
      "src": "(: ( [26062,26063]",
      "dest": "(: ( [26062,26063]"
    },
    {
      "src": "primitive_type [34124,34131]",
      "dest": "primitive_type [34127,34134]"
    },
    {
      "src": "identifier: order [37323,37328]",
      "dest": "identifier: order [37326,37331]"
    },
    {
      "src": "}: } [13609,13610]",
      "dest": "}: } [13609,13610]"
    },
    {
      "src": "!=: != [38502,38504]",
      "dest": "!=: != [38505,38507]"
    },
    {
      "src": "): ) [40688,40689]",
      "dest": "): ) [40697,40698]"
    },
    {
      "src": "is: is [33787,33789]",
      "dest": "is: is [33790,33792]"
    },
    {
      "src": "member_expression [35990,36000]",
      "dest": "member_expression [35993,36003]"
    },
    {
      "src": "return_statement [7271,7280]",
      "dest": "return_statement [7271,7280]"
    },
    {
      "src": "type_name [4573,4580]",
      "dest": "type_name [4573,4580]"
    },
    {
      "src": "identifier: _status [33671,33678]",
      "dest": "identifier: _status [33674,33681]"
    },
    {
      "src": "identifier: OwnershipTransferred [2842,2862]",
      "dest": "identifier: OwnershipTransferred [2842,2862]"
    },
    {
      "src": "identifier: require [19554,19561]",
      "dest": "identifier: require [19554,19561]"
    },
    {
      "src": "binary_expression [5245,5250]",
      "dest": "binary_expression [5245,5250]"
    },
    {
      "src": "identifier: value [13600,13605]",
      "dest": "identifier: value [13600,13605]"
    },
    {
      "src": "call_argument [23926,23939]",
      "dest": "call_argument [23926,23939]"
    },
    {
      "src": "state_mutability [26049,26053]",
      "dest": "state_mutability [26049,26053]"
    },
    {
      "src": "function_definition [4226,4404]",
      "dest": "function_definition [4226,4404]"
    },
    {
      "src": "identifier: returndata [25187,25197]",
      "dest": "identifier: returndata [25187,25197]"
    },
    {
      "src": "identifier: target [16973,16979]",
      "dest": "identifier: target [16973,16979]"
    },
    {
      "src": "identifier: UpdatePrice [34699,34710]",
      "dest": "identifier: UpdatePrice [34702,34713]"
    },
    {
      "src": "identifier: encodeWithSelector [23421,23439]",
      "dest": "identifier: encodeWithSelector [23421,23439]"
    },
    {
      "src": "identifier: tokenAddressCached [37625,37643]",
      "dest": "identifier: tokenAddressCached [37628,37646]"
    },
    {
      "src": "variable_declaration [37471,37497]",
      "dest": "variable_declaration [37474,37500]"
    },
    {
      "src": "{: { [5862,5863]",
      "dest": "{: { [5862,5863]"
    },
    {
      "src": "identifier: transferAmount [40724,40738]",
      "dest": "identifier: transferAmount [40733,40747]"
    },
    {
      "src": "identifier: a [10704,10705]",
      "dest": "identifier: a [10704,10705]"
    },
    {
      "src": "external: external [30939,30947]",
      "dest": "external: external [30945,30953]"
    },
    {
      "src": "primitive_type [16891,16896]",
      "dest": "primitive_type [16891,16896]"
    },
    {
      "src": "pure: pure [4273,4277]",
      "dest": "pure: pure [4273,4277]"
    },
    {
      "src": "(: ( [38657,38658]",
      "dest": "(: ( [38660,38661]"
    },
    {
      "src": "identifier: order [38100,38105]",
      "dest": "identifier: order [38103,38108]"
    },
    {
      "src": "return_statement [8516,8529]",
      "dest": "return_statement [8516,8529]"
    },
    {
      "src": "type_name [15743,15750]",
      "dest": "type_name [15743,15750]"
    },
    {
      "src": "(: ( [30956,30957]",
      "dest": "(: ( [30962,30963]"
    },
    {
      "src": "identifier: _getTransferAndCopyrightFeeAndAuthor [39658,39694]",
      "dest": "identifier: _getTransferAndCopyrightFeeAndAuthor [39661,39697]"
    },
    {
      "src": "): ) [5901,5902]",
      "dest": "): ) [5901,5902]"
    },
    {
      "src": "=: = [37865,37866]",
      "dest": "=: = [37868,37869]"
    },
    {
      "src": "address: address [16875,16882]",
      "dest": "address: address [16875,16882]"
    },
    {
      "src": "identifier: isContract [20562,20572]",
      "dest": "identifier: isContract [20562,20572]"
    },
    {
      "src": "string [24996,25030]",
      "dest": "string [24996,25030]"
    },
    {
      "src": ",: , [26580,26581]",
      "dest": ",: , [26580,26581]"
    },
    {
      "src": "call_argument [36759,36770]",
      "dest": "call_argument [36762,36773]"
    },
    {
      "src": "function_body [9950,10020]",
      "dest": "function_body [9950,10020]"
    },
    {
      "src": "type_name [41140,41145]",
      "dest": "type_name [41149,41154]"
    },
    {
      "src": "parameter [22887,22899]",
      "dest": "parameter [22887,22899]"
    },
    {
      "src": "type_name [14362,14369]",
      "dest": "type_name [14362,14369]"
    },
    {
      "src": "emit: emit [35352,35356]",
      "dest": "emit: emit [35355,35359]"
    },
    {
      "src": "primitive_type [34824,34831]",
      "dest": "primitive_type [34827,34834]"
    },
    {
      "src": "call_argument [22310,22315]",
      "dest": "call_argument [22310,22315]"
    },
    {
      "src": "type_cast_expression [40343,40353]",
      "dest": "type_cast_expression [40352,40362]"
    },
    {
      "src": "type_name [34856,34863]",
      "dest": "type_name [34859,34866]"
    },
    {
      "src": "return_type_definition [26965,26990]",
      "dest": "return_type_definition [26965,26990]"
    },
    {
      "src": "function_definition [20849,21592]",
      "dest": "function_definition [20849,21592]"
    },
    {
      "src": "identifier: PayCopyrightFee [38642,38657]",
      "dest": "identifier: PayCopyrightFee [38645,38660]"
    },
    {
      "src": "return: return [4683,4689]",
      "dest": "return: return [4683,4689]"
    },
    {
      "src": "(: ( [32807,32808]",
      "dest": "(: ( [32810,32811]"
    },
    {
      "src": "member_expression [40095,40114]",
      "dest": "member_expression [40104,40123]"
    },
    {
      "src": "(: ( [19051,19052]",
      "dest": "(: ( [19051,19052]"
    },
    {
      "src": "function_body [35216,35511]",
      "dest": "function_body [35219,35514]"
    },
    {
      "src": "identifier: order [35957,35962]",
      "dest": "identifier: order [35960,35965]"
    },
    {
      "src": ",: , [5577,5578]",
      "dest": ",: , [5577,5578]"
    },
    {
      "src": "identifier: success [20881,20888]",
      "dest": "identifier: success [20881,20888]"
    },
    {
      "src": "identifier: sub [9024,9027]",
      "dest": "identifier: sub [9024,9027]"
    },
    {
      "src": "): ) [38411,38412]",
      "dest": "): ) [38414,38415]"
    },
    {
      "src": "identifier: order [41153,41158]",
      "dest": "identifier: order [41162,41167]"
    },
    {
      "src": "parameter [9868,9877]",
      "dest": "parameter [9868,9877]"
    },
    {
      "src": "identifier: data [19081,19085]",
      "dest": "identifier: data [19081,19085]"
    },
    {
      "src": "return: return [5186,5192]",
      "dest": "return: return [5186,5192]"
    },
    {
      "src": "if_statement [25042,25265]",
      "dest": "if_statement [25042,25265]"
    },
    {
      "src": "\": \" [19213,19214]",
      "dest": "\": \" [19213,19214]"
    },
    {
      "src": ".: . [36812,36813]",
      "dest": ".: . [36815,36816]"
    },
    {
      "src": ",: , [16021,16022]",
      "dest": ",: , [16021,16022]"
    },
    {
      "src": "return: return [7898,7904]",
      "dest": "return: return [7898,7904]"
    },
    {
      "src": "{: { [20543,20544]",
      "dest": "{: { [20543,20544]"
    },
    {
      "src": "view: view [29353,29357]",
      "dest": "view: view [29353,29357]"
    },
    {
      "src": "identifier: a [7905,7906]",
      "dest": "identifier: a [7905,7906]"
    },
    {
      "src": "return_type_definition [11939,11956]",
      "dest": "return_type_definition [11939,11956]"
    },
    {
      "src": "type_name [6246,6253]",
      "dest": "type_name [6246,6253]"
    },
    {
      "src": "tuple_expression [5571,5581]",
      "dest": "tuple_expression [5571,5581]"
    },
    {
      "src": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [13372,13523]",
      "dest": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [13372,13523]"
    },
    {
      "src": "parameter [13109,13113]",
      "dest": "parameter [13109,13113]"
    },
    {
      "src": "source_file [0,41297]",
      "dest": "source_file [0,41306]"
    },
    {
      "src": "call_argument [35874,35903]",
      "dest": "call_argument [35877,35906]"
    },
    {
      "src": "comment: /**      * @dev Returns the division of two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [5317,5459]",
      "dest": "comment: /**      * @dev Returns the division of two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [5317,5459]"
    },
    {
      "src": "call_expression [40259,40308]",
      "dest": "call_expression [40271,40317]"
    },
    {
      "src": "(: ( [5920,5921]",
      "dest": "(: ( [5920,5921]"
    },
    {
      "src": "}: } [18754,18755]",
      "dest": "}: } [18754,18755]"
    },
    {
      "src": "comment: // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that [24711,24818]",
      "dest": "comment: // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that [24711,24818]"
    },
    {
      "src": "): ) [27998,27999]",
      "dest": "): ) [27998,27999]"
    },
    {
      "src": ",: , [34822,34823]",
      "dest": ",: , [34825,34826]"
    },
    {
      "src": ",: , [35606,35607]",
      "dest": ",: , [35609,35610]"
    },
    {
      "src": "string: string [10718,10724]",
      "dest": "string: string [10718,10724]"
    },
    {
      "src": "member_expression [21139,21156]",
      "dest": "member_expression [21139,21156]"
    },
    {
      "src": "member_expression [37577,37590]",
      "dest": "member_expression [37580,37593]"
    },
    {
      "src": "(: ( [16874,16875]",
      "dest": "(: ( [16874,16875]"
    },
    {
      "src": "identifier: order [36830,36835]",
      "dest": "identifier: order [36833,36838]"
    },
    {
      "src": "(: ( [29108,29109]",
      "dest": "(: ( [29108,29109]"
    },
    {
      "src": "identifier: author [40611,40617]",
      "dest": "identifier: author [40620,40626]"
    },
    {
      "src": "type_name [35567,35571]",
      "dest": "type_name [35570,35574]"
    },
    {
      "src": "identifier: add [36349,36352]",
      "dest": "identifier: add [36352,36355]"
    },
    {
      "src": "type_name [32717,32724]",
      "dest": "type_name [32720,32727]"
    },
    {
      "src": "internal: internal [22473,22481]",
      "dest": "internal: internal [22473,22481]"
    },
    {
      "src": "bytes: bytes [18702,18707]",
      "dest": "bytes: bytes [18702,18707]"
    },
    {
      "src": "false [5893,5898]",
      "dest": "false [5893,5898]"
    },
    {
      "src": "!=: != [3283,3285]",
      "dest": "!=: != [3283,3285]"
    },
    {
      "src": "comment: /**      * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients      * are aware of the ERC721 protocol to prevent tokens from being forever locked.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must exist and be owned by `from`.      * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [27222,27925]",
      "dest": "comment: /**      * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients      * are aware of the ERC721 protocol to prevent tokens from being forever locked.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must exist and be owned by `from`.      * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [27222,27925]"
    },
    {
      "src": "type_name [36884,36888]",
      "dest": "type_name [36887,36891]"
    },
    {
      "src": "bytes: bytes [19529,19534]",
      "dest": "bytes: bytes [19529,19534]"
    },
    {
      "src": "): ) [19828,19829]",
      "dest": "): ) [19828,19829]"
    },
    {
      "src": "identifier: b [6220,6221]",
      "dest": "identifier: b [6220,6221]"
    },
    {
      "src": "emit: emit [37073,37077]",
      "dest": "emit: emit [37076,37080]"
    },
    {
      "src": "identifier: from [13323,13327]",
      "dest": "identifier: from [13323,13327]"
    },
    {
      "src": ",: , [35109,35110]",
      "dest": ",: , [35112,35113]"
    },
    {
      "src": "identifier: _tokenAddress [35719,35732]",
      "dest": "identifier: _tokenAddress [35722,35735]"
    },
    {
      "src": "primitive_type [5481,5488]",
      "dest": "primitive_type [5481,5488]"
    },
    {
      "src": ",: , [13565,13566]",
      "dest": ",: , [13565,13566]"
    },
    {
      "src": "): ) [23290,23291]",
      "dest": "): ) [23290,23291]"
    },
    {
      "src": "identifier: Context [1640,1647]",
      "dest": "identifier: Context [1640,1647]"
    },
    {
      "src": "address: address [35153,35160]",
      "dest": "address: address [35156,35163]"
    },
    {
      "src": ",: , [18355,18356]",
      "dest": ",: , [18355,18356]"
    },
    {
      "src": "expression_statement [9121,9151]",
      "dest": "expression_statement [9121,9151]"
    },
    {
      "src": "(: ( [41139,41140]",
      "dest": "(: ( [41148,41149]"
    },
    {
      "src": "}: } [3431,3432]",
      "dest": "}: } [3431,3432]"
    },
    {
      "src": "uint: uint [34809,34813]",
      "dest": "uint: uint [34812,34816]"
    },
    {
      "src": "identifier: _fixedPrice [34619,34630]",
      "dest": "identifier: _fixedPrice [34622,34633]"
    },
    {
      "src": "(: ( [4359,4360]",
      "dest": "(: ( [4359,4360]"
    },
    {
      "src": "uint256: uint256 [13075,13082]",
      "dest": "uint256: uint256 [13075,13082]"
    },
    {
      "src": ".: . [40671,40672]",
      "dest": ".: . [40680,40681]"
    },
    {
      "src": "): ) [14727,14728]",
      "dest": "): ) [14727,14728]"
    },
    {
      "src": "identifier: totalSupply [11082,11093]",
      "dest": "identifier: totalSupply [11082,11093]"
    },
    {
      "src": "identifier: erc721AddressWithCopyright [39358,39384]",
      "dest": "identifier: erc721AddressWithCopyright [39361,39387]"
    },
    {
      "src": "view: view [11261,11265]",
      "dest": "view: view [11261,11265]"
    },
    {
      "src": "bytes: bytes [16928,16933]",
      "dest": "bytes: bytes [16928,16933]"
    },
    {
      "src": "call_expression [37546,37591]",
      "dest": "call_expression [37549,37594]"
    },
    {
      "src": "string [38132,38159]",
      "dest": "string [38135,38162]"
    },
    {
      "src": "pure: pure [9927,9931]",
      "dest": "pure: pure [9927,9931]"
    },
    {
      "src": "identifier: token [23697,23702]",
      "dest": "identifier: token [23697,23702]"
    },
    {
      "src": "tuple_expression [4359,4369]",
      "dest": "tuple_expression [4359,4369]"
    },
    {
      "src": "(: ( [19528,19529]",
      "dest": "(: ( [19528,19529]"
    },
    {
      "src": "identifier: isAvailable [38106,38117]",
      "dest": "identifier: isAvailable [38109,38120]"
    },
    {
      "src": "number_literal: 0 [5272,5273]",
      "dest": "number_literal: 0 [5272,5273]"
    },
    {
      "src": "): ) [10744,10745]",
      "dest": "): ) [10744,10745]"
    },
    {
      "src": "uint: uint [35567,35571]",
      "dest": "uint: uint [35570,35574]"
    },
    {
      "src": "variable_declaration_statement [24936,25032]",
      "dest": "variable_declaration_statement [24936,25032]"
    },
    {
      "src": "function_definition [688,794]",
      "dest": "function_definition [688,794]"
    },
    {
      "src": "visibility [4595,4603]",
      "dest": "visibility [4595,4603]"
    },
    {
      "src": "internal: internal [14379,14387]",
      "dest": "internal: internal [14379,14387]"
    },
    {
      "src": ".: . [37513,37514]",
      "dest": ".: . [37516,37517]"
    },
    {
      "src": "if_statement [5241,5275]",
      "dest": "if_statement [5241,5275]"
    },
    {
      "src": ",: , [9048,9049]",
      "dest": ",: , [9048,9049]"
    },
    {
      "src": "primitive_type [24555,24560]",
      "dest": "primitive_type [24555,24560]"
    },
    {
      "src": "identifier: token [23828,23833]",
      "dest": "identifier: token [23828,23833]"
    },
    {
      "src": "call_argument [38100,38117]",
      "dest": "call_argument [38103,38120]"
    },
    {
      "src": "private: private [20943,20950]",
      "dest": "private: private [20943,20950]"
    },
    {
      "src": ",: , [30692,30693]",
      "dest": ",: , [30692,30693]"
    },
    {
      "src": "function_body [23582,23782]",
      "dest": "function_body [23582,23782]"
    },
    {
      "src": "binary_expression [40323,40388]",
      "dest": "binary_expression [40332,40397]"
    },
    {
      "src": "function: function [22207,22215]",
      "dest": "function: function [22207,22215]"
    },
    {
      "src": "(: ( [20875,20876]",
      "dest": "(: ( [20875,20876]"
    },
    {
      "src": "primitive_type [29969,29976]",
      "dest": "primitive_type [29969,29976]"
    },
    {
      "src": "state_mutability [4604,4608]",
      "dest": "state_mutability [4604,4608]"
    },
    {
      "src": "variable_declaration [39295,39318]",
      "dest": "variable_declaration [39298,39321]"
    },
    {
      "src": "call_argument [19804,19814]",
      "dest": "call_argument [19804,19814]"
    },
    {
      "src": "type_name [10718,10724]",
      "dest": "type_name [10718,10724]"
    },
    {
      "src": "call_expression [18554,18614]",
      "dest": "call_expression [18554,18614]"
    },
    {
      "src": "call_argument [41006,41062]",
      "dest": "call_argument [41015,41071]"
    },
    {
      "src": "identifier: require [8463,8470]",
      "dest": "identifier: require [8463,8470]"
    },
    {
      "src": "type_name [40041,40053]",
      "dest": "type_name [40044,40059]"
    },
    {
      "src": "return: return [17386,17392]",
      "dest": "return: return [17386,17392]"
    },
    {
      "src": "number_literal: 0 [8475,8476]",
      "dest": "number_literal: 0 [8475,8476]"
    },
    {
      "src": "string [16987,17019]",
      "dest": "string [16987,17019]"
    },
    {
      "src": "function_definition [4866,5309]",
      "dest": "function_definition [4866,5309]"
    },
    {
      "src": "identifier: Order [35944,35949]",
      "dest": "identifier: Order [35947,35952]"
    },
    {
      "src": "identifier: to [26379,26381]",
      "dest": "identifier: to [26379,26381]"
    },
    {
      "src": "bool: bool [11584,11588]",
      "dest": "bool: bool [11584,11588]"
    },
    {
      "src": "virtual: virtual [836,843]",
      "dest": "virtual: virtual [836,843]"
    },
    {
      "src": ",: , [19580,19581]",
      "dest": ",: , [19580,19581]"
    },
    {
      "src": "identifier: getApproved [29315,29326]",
      "dest": "identifier: getApproved [29315,29326]"
    },
    {
      "src": "address: address [11531,11538]",
      "dest": "address: address [11531,11538]"
    },
    {
      "src": "type_name [11531,11538]",
      "dest": "type_name [11531,11538]"
    },
    {
      "src": "{: { [30806,30807]",
      "dest": "{: { [30812,30813]"
    },
    {
      "src": "identifier: a [7088,7089]",
      "dest": "identifier: a [7088,7089]"
    },
    {
      "src": "state_mutability [26960,26964]",
      "dest": "state_mutability [26960,26964]"
    },
    {
      "src": "if: if [25042,25044]",
      "dest": "if: if [25042,25044]"
    },
    {
      "src": "function_definition [6188,6367]",
      "dest": "function_definition [6188,6367]"
    },
    {
      "src": "=: = [36332,36333]",
      "dest": "=: = [36335,36336]"
    },
    {
      "src": "primitive_type [37189,37193]",
      "dest": "primitive_type [37192,37196]"
    },
    {
      "src": "(: ( [40530,40531]",
      "dest": "(: ( [40539,40540]"
    },
    {
      "src": "call_expression [22493,22589]",
      "dest": "call_expression [22493,22589]"
    },
    {
      "src": "call_expression [19142,19215]",
      "dest": "call_expression [19142,19215]"
    },
    {
      "src": "variable_declaration [36424,36450]",
      "dest": "variable_declaration [36427,36453]"
    },
    {
      "src": "): ) [38506,38507]",
      "dest": "): ) [38509,38510]"
    },
    {
      "src": "return: return [39603,39609]",
      "dest": "return: return [39606,39612]"
    },
    {
      "src": "identifier: order [41170,41175]",
      "dest": "identifier: order [41179,41184]"
    },
    {
      "src": "function_definition [36863,37119]",
      "dest": "function_definition [36866,37122]"
    },
    {
      "src": "type_cast_expression [35391,35401]",
      "dest": "type_cast_expression [35394,35404]"
    },
    {
      "src": "identifier: _orderID [36889,36897]",
      "dest": "identifier: _orderID [36892,36900]"
    },
    {
      "src": "identifier: target [19060,19066]",
      "dest": "identifier: target [19060,19066]"
    },
    {
      "src": "function_definition [41079,41294]",
      "dest": "function_definition [41088,41303]"
    },
    {
      "src": "(: ( [34983,34984]",
      "dest": "(: ( [34986,34987]"
    },
    {
      "src": "event: event [34503,34508]",
      "dest": "event: event [34506,34511]"
    },
    {
      "src": "): ) [22471,22472]",
      "dest": "): ) [22471,22472]"
    },
    {
      "src": "{: { [21053,21054]",
      "dest": "{: { [21053,21054]"
    },
    {
      "src": "event: event [26518,26523]",
      "dest": "event: event [26518,26523]"
    },
    {
      "src": "primitive_type [36229,36233]",
      "dest": "primitive_type [36232,36236]"
    },
    {
      "src": "identifier: value [23954,23959]",
      "dest": "identifier: value [23954,23959]"
    },
    {
      "src": "member_expression [23704,23726]",
      "dest": "member_expression [23704,23726]"
    },
    {
      "src": "return_type_definition [4609,4632]",
      "dest": "return_type_definition [4609,4632]"
    },
    {
      "src": "identifier: selector [22355,22363]",
      "dest": "identifier: selector [22355,22363]"
    },
    {
      "src": ",: , [38792,38793]",
      "dest": ",: , [38795,38796]"
    },
    {
      "src": "bytes: bytes [20965,20970]",
      "dest": "bytes: bytes [20965,20970]"
    },
    {
      "src": "comment: /**      * @dev Initializes the contract setting the deployer as the initial owner.      */ [1778,1871]",
      "dest": "comment: /**      * @dev Initializes the contract setting the deployer as the initial owner.      */ [1778,1871]"
    },
    {
      "src": "call_expression [19554,19621]",
      "dest": "call_expression [19554,19621]"
    },
    {
      "src": "call_argument [8478,8504]",
      "dest": "call_argument [8478,8504]"
    },
    {
      "src": "primitive_type [35190,35197]",
      "dest": "primitive_type [35193,35200]"
    },
    {
      "src": "primitive_type [30866,30870]",
      "dest": "primitive_type [30872,30876]"
    },
    {
      "src": "parameter [41140,41158]",
      "dest": "parameter [41149,41167]"
    },
    {
      "src": "returns: returns [6237,6244]",
      "dest": "returns: returns [6237,6244]"
    },
    {
      "src": "return_statement [5913,5934]",
      "dest": "return_statement [5913,5934]"
    },
    {
      "src": "primitive_type [12660,12667]",
      "dest": "primitive_type [12660,12667]"
    },
    {
      "src": "revert: revert [21538,21544]",
      "dest": "revert: revert [21538,21544]"
    },
    {
      "src": "identifier: target [19573,19579]",
      "dest": "identifier: target [19573,19579]"
    },
    {
      "src": "external: external [28000,28008]",
      "dest": "external: external [28000,28008]"
    },
    {
      "src": "string_literal [3298,3338]",
      "dest": "string_literal [3298,3338]"
    },
    {
      "src": "returns: returns [39570,39577]",
      "dest": "returns: returns [39573,39580]"
    },
    {
      "src": "(: ( [40968,40969]",
      "dest": "(: ( [40977,40978]"
    },
    {
      "src": "): ) [31038,31039]",
      "dest": "): ) [31041,31042]"
    },
    {
      "src": "): ) [10816,10817]",
      "dest": "): ) [10816,10817]"
    },
    {
      "src": "return_type_definition [27190,27213]",
      "dest": "return_type_definition [27190,27213]"
    },
    {
      "src": "binary_expression [5245,5255]",
      "dest": "binary_expression [5245,5255]"
    },
    {
      "src": "type_name [17280,17287]",
      "dest": "type_name [17280,17287]"
    },
    {
      "src": "member_expression [39817,39834]",
      "dest": "member_expression [39820,39837]"
    },
    {
      "src": "): ) [34486,34487]",
      "dest": "): ) [34489,34490]"
    },
    {
      "src": "primitive_type [2010,2017]",
      "dest": "primitive_type [2010,2017]"
    },
    {
      "src": "type_name [34124,34131]",
      "dest": "type_name [34127,34134]"
    },
    {
      "src": "number_literal: 0 [9973,9974]",
      "dest": "number_literal: 0 [9973,9974]"
    },
    {
      "src": "call_argument [38658,38666]",
      "dest": "call_argument [38661,38669]"
    },
    {
      "src": "type_name [39734,39738]",
      "dest": "type_name [39737,39741]"
    },
    {
      "src": ".: . [22548,22549]",
      "dest": ".: . [22548,22549]"
    },
    {
      "src": "parameter [9028,9037]",
      "dest": "parameter [9028,9037]"
    },
    {
      "src": "bytes: bytes [853,858]",
      "dest": "bytes: bytes [853,858]"
    },
    {
      "src": "user_defined_type [34481,34486]",
      "dest": "user_defined_type [34484,34489]"
    },
    {
      "src": "}: } [793,794]",
      "dest": "}: } [793,794]"
    },
    {
      "src": "parameter [23852,23865]",
      "dest": "parameter [23852,23865]"
    },
    {
      "src": "call_argument [3298,3338]",
      "dest": "call_argument [3298,3338]"
    },
    {
      "src": "function_definition [17258,17453]",
      "dest": "function_definition [17258,17453]"
    },
    {
      "src": "type_name [30694,30699]",
      "dest": "type_name [30694,30699]"
    },
    {
      "src": "primitive_type [29762,29766]",
      "dest": "primitive_type [29762,29766]"
    },
    {
      "src": "(: ( [23267,23268]",
      "dest": "(: ( [23267,23268]"
    },
    {
      "src": "identifier: IERC20 [10985,10991]",
      "dest": "identifier: IERC20 [10985,10991]"
    },
    {
      "src": ",: , [40559,40560]",
      "dest": ",: , [40568,40569]"
    },
    {
      "src": "(: ( [34518,34519]",
      "dest": "(: ( [34521,34522]"
    },
    {
      "src": "identifier: _status [33492,33499]",
      "dest": "identifier: _status [33495,33502]"
    },
    {
      "src": "for: for [33868,33871]",
      "dest": "for: for [33871,33874]"
    },
    {
      "src": "]: ] [37790,37791]",
      "dest": "]: ] [37793,37794]"
    },
    {
      "src": "(: ( [23631,23632]",
      "dest": "(: ( [23631,23632]"
    },
    {
      "src": "): ) [35624,35625]",
      "dest": "): ) [35627,35628]"
    },
    {
      "src": "): ) [8418,8419]",
      "dest": "): ) [8418,8419]"
    },
    {
      "src": "call_argument [39075,39085]",
      "dest": "call_argument [39078,39088]"
    },
    {
      "src": "identifier: value [18749,18754]",
      "dest": "identifier: value [18749,18754]"
    },
    {
      "src": "{: { [20121,20122]",
      "dest": "{: { [20121,20122]"
    },
    {
      "src": "primitive_type [26020,26026]",
      "dest": "primitive_type [26020,26026]"
    },
    {
      "src": "identifier: orderIDCounter [36334,36348]",
      "dest": "identifier: orderIDCounter [36337,36351]"
    },
    {
      "src": "\": \" [18541,18542]",
      "dest": "\": \" [18541,18542]"
    },
    {
      "src": "function: function [29717,29725]",
      "dest": "function: function [29717,29725]"
    },
    {
      "src": "parameter [7125,7132]",
      "dest": "parameter [7125,7132]"
    },
    {
      "src": "comment: // 1. check the validity of params [35659,35693]",
      "dest": "comment: // 1. check the validity of params [35662,35696]"
    },
    {
      "src": "||: || [40389,40391]",
      "dest": "||: || [40398,40400]"
    },
    {
      "src": "event_definition [34693,34787]",
      "dest": "event_definition [34696,34790]"
    },
    {
      "src": "identifier: token [24548,24553]",
      "dest": "identifier: token [24548,24553]"
    },
    {
      "src": "function_definition [22866,23488]",
      "dest": "function_definition [22866,23488]"
    },
    {
      "src": "identifier: data [20168,20172]",
      "dest": "identifier: data [20168,20172]"
    },
    {
      "src": "parameter [22255,22268]",
      "dest": "parameter [22255,22268]"
    },
    {
      "src": "tuple_expression [5193,5202]",
      "dest": "tuple_expression [5193,5202]"
    },
    {
      "src": "(: ( [38405,38406]",
      "dest": "(: ( [38408,38409]"
    },
    {
      "src": "primitive_type [38333,38337]",
      "dest": "primitive_type [38336,38340]"
    },
    {
      "src": "identifier: _getOrderByID [39610,39623]",
      "dest": "identifier: _getOrderByID [39613,39626]"
    },
    {
      "src": "call_expression [33351,33414]",
      "dest": "call_expression [33354,33417]"
    },
    {
      "src": "(: ( [11234,11235]",
      "dest": "(: ( [11234,11235]"
    },
    {
      "src": "visibility [24574,24581]",
      "dest": "visibility [24574,24581]"
    },
    {
      "src": "true [36173,36177]",
      "dest": "true [36176,36180]"
    },
    {
      "src": "library: library [22115,22122]",
      "dest": "library: library [22115,22122]"
    },
    {
      "src": "user_defined_type [1640,1647]",
      "dest": "user_defined_type [1640,1647]"
    },
    {
      "src": "return: return [39972,39978]",
      "dest": "return: return [39975,39981]"
    },
    {
      "src": "function_definition [11216,11284]",
      "dest": "function_definition [11216,11284]"
    },
    {
      "src": "call_argument [37546,37687]",
      "dest": "call_argument [37549,37690]"
    },
    {
      "src": "{: { [25633,25634]",
      "dest": "{: { [25633,25634]"
    },
    {
      "src": "state_variable_declaration [32717,32755]",
      "dest": "state_variable_declaration [32720,32758]"
    },
    {
      "src": "identifier: functionCall [24977,24989]",
      "dest": "identifier: functionCall [24977,24989]"
    },
    {
      "src": "user_defined_type [33872,33878]",
      "dest": "user_defined_type [33875,33881]"
    },
    {
      "src": ",: , [23939,23940]",
      "dest": ",: , [23939,23940]"
    },
    {
      "src": "identifier: errorMessage [18818,18830]",
      "dest": "identifier: errorMessage [18818,18830]"
    },
    {
      "src": "identifier: require [3266,3273]",
      "dest": "identifier: require [3266,3273]"
    },
    {
      "src": "identifier: _tokenID [35572,35580]",
      "dest": "identifier: _tokenID [35575,35583]"
    },
    {
      "src": "identifier: Order [34010,34015]",
      "dest": "identifier: Order [34013,34018]"
    },
    {
      "src": "comment: // On the first call to nonReentrant, _notEntered will be true [33279,33341]",
      "dest": "comment: // On the first call to nonReentrant, _notEntered will be true [33282,33344]"
    },
    {
      "src": "}: } [21594,21595]",
      "dest": "}: } [21594,21595]"
    },
    {
      "src": "external: external [28605,28613]",
      "dest": "external: external [28605,28613]"
    },
    {
      "src": "primitive_type [20054,20061]",
      "dest": "primitive_type [20054,20061]"
    },
    {
      "src": "function: function [29943,29951]",
      "dest": "function: function [29943,29951]"
    },
    {
      "src": "call_expression [10789,10817]",
      "dest": "call_expression [10789,10817]"
    },
    {
      "src": "identifier: sender [38786,38792]",
      "dest": "identifier: sender [38789,38795]"
    },
    {
      "src": "function_body [5862,5941]",
      "dest": "function_body [5862,5941]"
    },
    {
      "src": "{: { [13748,13749]",
      "dest": "{: { [13748,13749]"
    },
    {
      "src": "identifier: value [22582,22587]",
      "dest": "identifier: value [22582,22587]"
    },
    {
      "src": "type_name [18341,18348]",
      "dest": "type_name [18341,18348]"
    },
    {
      "src": "type_name [7176,7183]",
      "dest": "type_name [7176,7183]"
    },
    {
      "src": "function_definition [22392,22597]",
      "dest": "function_definition [22392,22597]"
    },
    {
      "src": "): ) [4262,4263]",
      "dest": "): ) [4262,4263]"
    },
    {
      "src": "identifier: _owner [2194,2200]",
      "dest": "identifier: _owner [2194,2200]"
    },
    {
      "src": "{: { [38508,38509]",
      "dest": "{: { [38511,38512]"
    },
    {
      "src": ",: , [34838,34839]",
      "dest": ",: , [34841,34842]"
    },
    {
      "src": "parameter [9941,9948]",
      "dest": "parameter [9941,9948]"
    },
    {
      "src": "address: address [19052,19059]",
      "dest": "address: address [19052,19059]"
    },
    {
      "src": "identifier: safeTransferFrom [22401,22417]",
      "dest": "identifier: safeTransferFrom [22401,22417]"
    },
    {
      "src": "assembly: assembly [21341,21349]",
      "dest": "assembly: assembly [21341,21349]"
    },
    {
      "src": "<=: <= [9131,9133]",
      "dest": "<=: <= [9131,9133]"
    },
    {
      "src": "primitive_type [17361,17366]",
      "dest": "primitive_type [17361,17366]"
    },
    {
      "src": "(: ( [5264,5265]",
      "dest": "(: ( [5264,5265]"
    },
    {
      "src": ".: . [38905,38906]",
      "dest": ".: . [38908,38909]"
    },
    {
      "src": "uint256: uint256 [11119,11126]",
      "dest": "uint256: uint256 [11119,11126]"
    },
    {
      "src": "identifier: sender [37315,37321]",
      "dest": "identifier: sender [37318,37324]"
    },
    {
      "src": ",: , [34892,34893]",
      "dest": ",: , [34895,34896]"
    },
    {
      "src": "identifier: _erc721AddressWithCopyright [35314,35341]",
      "dest": "identifier: _erc721AddressWithCopyright [35317,35344]"
    },
    {
      "src": "comment: // benefit is lost if 'b' is also tested. [5042,5083]",
      "dest": "comment: // benefit is lost if 'b' is also tested. [5042,5083]"
    },
    {
      "src": "internal: internal [7102,7110]",
      "dest": "internal: internal [7102,7110]"
    },
    {
      "src": "identifier: safeDecreaseAllowance [23799,23820]",
      "dest": "identifier: safeDecreaseAllowance [23799,23820]"
    },
    {
      "src": "primitive_type [13109,13113]",
      "dest": "primitive_type [13109,13113]"
    },
    {
      "src": "): ) [19541,19542]",
      "dest": "): ) [19541,19542]"
    },
    {
      "src": "function_body [2826,2920]",
      "dest": "function_body [2826,2920]"
    },
    {
      "src": "type_name [17859,17866]",
      "dest": "type_name [17859,17866]"
    },
    {
      "src": "memory: memory [20470,20476]",
      "dest": "memory: memory [20470,20476]"
    },
    {
      "src": "return_type_definition [39725,39789]",
      "dest": "return_type_definition [39728,39792]"
    },
    {
      "src": "call_expression [7843,7887]",
      "dest": "call_expression [7843,7887]"
    },
    {
      "src": "identifier: to [22251,22253]",
      "dest": "identifier: to [22251,22253]"
    },
    {
      "src": "expression_statement [33492,33511]",
      "dest": "expression_statement [33495,33514]"
    },
    {
      "src": ",: , [38805,38806]",
      "dest": ",: , [38808,38809]"
    },
    {
      "src": "event_paramater [34771,34785]",
      "dest": "event_paramater [34774,34788]"
    },
    {
      "src": "type_name [38037,38042]",
      "dest": "type_name [38040,38045]"
    },
    {
      "src": "expression_statement [22493,22590]",
      "dest": "expression_statement [22493,22590]"
    },
    {
      "src": "(: ( [3293,3294]",
      "dest": "(: ( [3293,3294]"
    },
    {
      "src": "contract: contract [31878,31886]",
      "dest": "contract: contract [31881,31889]"
    },
    {
      "src": "return: return [7157,7163]",
      "dest": "return: return [7157,7163]"
    },
    {
      "src": "identifier: errorMessage [9064,9076]",
      "dest": "identifier: errorMessage [9064,9076]"
    },
    {
      "src": "\": \" [38158,38159]",
      "dest": "\": \" [38161,38162]"
    },
    {
      "src": ",: , [20462,20463]",
      "dest": ",: , [20462,20463]"
    },
    {
      "src": ",: , [6672,6673]",
      "dest": ",: , [6672,6673]"
    },
    {
      "src": "(: ( [4241,4242]",
      "dest": "(: ( [4241,4242]"
    },
    {
      "src": "state_variable_declaration [33921,33947]",
      "dest": "state_variable_declaration [33924,33950]"
    },
    {
      "src": "type_name [37148,37152]",
      "dest": "type_name [37151,37155]"
    },
    {
      "src": "\": \" [38132,38133]",
      "dest": "\": \" [38135,38136]"
    },
    {
      "src": "bytes: bytes [18357,18362]",
      "dest": "bytes: bytes [18357,18362]"
    },
    {
      "src": ",: , [38204,38205]",
      "dest": ",: , [38207,38208]"
    },
    {
      "src": ",: , [35765,35766]",
      "dest": ",: , [35768,35769]"
    },
    {
      "src": "}: } [7286,7287]",
      "dest": "}: } [7286,7287]"
    },
    {
      "src": "primitive_type [13075,13082]",
      "dest": "primitive_type [13075,13082]"
    },
    {
      "src": "identifier: balanceOf [26926,26935]",
      "dest": "identifier: balanceOf [26926,26935]"
    },
    {
      "src": "identifier: Order [40835,40840]",
      "dest": "identifier: Order [40844,40849]"
    },
    {
      "src": "address: address [13567,13574]",
      "dest": "address: address [13567,13574]"
    },
    {
      "src": ",: , [26361,26362]",
      "dest": ",: , [26361,26362]"
    },
    {
      "src": "type_name [9039,9046]",
      "dest": "type_name [9039,9046]"
    },
    {
      "src": "identifier: payTokenAddress [38456,38471]",
      "dest": "identifier: payTokenAddress [38459,38474]"
    },
    {
      "src": "identifier: feeRateNumerator [40402,40418]",
      "dest": "identifier: feeRateNumerator [40411,40427]"
    },
    {
      "src": "type_name [8443,8450]",
      "dest": "type_name [8443,8450]"
    },
    {
      "src": "return_statement [10000,10013]",
      "dest": "return_statement [10000,10013]"
    },
    {
      "src": "call_argument [22572,22576]",
      "dest": "call_argument [22572,22576]"
    },
    {
      "src": "number_literal: 0 [5561,5562]",
      "dest": "number_literal: 0 [5561,5562]"
    },
    {
      "src": "array_access [41178,41194]",
      "dest": "array_access [41187,41203]"
    },
    {
      "src": "identifier: errorMessage [19816,19828]",
      "dest": "identifier: errorMessage [19816,19828]"
    },
    {
      "src": "parameter [23541,23556]",
      "dest": "parameter [23541,23556]"
    },
    {
      "src": "any_pragma_token [115,140]",
      "dest": "any_pragma_token [115,140]"
    },
    {
      "src": "}: } [21497,21498]",
      "dest": "}: } [21497,21498]"
    },
    {
      "src": "identifier: require [2333,2340]",
      "dest": "identifier: require [2333,2340]"
    },
    {
      "src": ",: , [5297,5298]",
      "dest": ",: , [5297,5298]"
    },
    {
      "src": "identifier: sender [38940,38946]",
      "dest": "identifier: sender [38943,38949]"
    },
    {
      "src": "identifier: copyrightFee [38609,38621]",
      "dest": "identifier: copyrightFee [38612,38624]"
    },
    {
      "src": "parameter [11908,11923]",
      "dest": "parameter [11908,11923]"
    },
    {
      "src": "): ) [25030,25031]",
      "dest": "): ) [25030,25031]"
    },
    {
      "src": "type_name [2167,2174]",
      "dest": "type_name [2167,2174]"
    },
    {
      "src": "visibility [710,718]",
      "dest": "visibility [710,718]"
    },
    {
      "src": "==: == [23292,23294]",
      "dest": "==: == [23292,23294]"
    },
    {
      "src": "library: library [4061,4068]",
      "dest": "library: library [4061,4068]"
    },
    {
      "src": "address: address [35078,35085]",
      "dest": "address: address [35081,35088]"
    },
    {
      "src": "return_statement [4380,4397]",
      "dest": "return_statement [4380,4397]"
    },
    {
      "src": "expression_statement [40628,40714]",
      "dest": "expression_statement [40637,40723]"
    },
    {
      "src": "type_name [29327,29334]",
      "dest": "type_name [29327,29334]"
    },
    {
      "src": "binary_expression [14746,14754]",
      "dest": "binary_expression [14746,14754]"
    },
    {
      "src": "call_argument [39624,39632]",
      "dest": "call_argument [39627,39635]"
    },
    {
      "src": "): ) [33413,33414]",
      "dest": "): ) [33416,33417]"
    },
    {
      "src": "type_name [27199,27206]",
      "dest": "type_name [27199,27206]"
    },
    {
      "src": "identifier: feeRateDenominator [40238,40256]",
      "dest": "identifier: feeRateDenominator [40250,40268]"
    },
    {
      "src": "event_paramater [34879,34892]",
      "dest": "event_paramater [34882,34895]"
    },
    {
      "src": "expression_statement [18554,18615]",
      "dest": "expression_statement [18554,18615]"
    },
    {
      "src": "member_expression [24043,24065]",
      "dest": "member_expression [24043,24065]"
    },
    {
      "src": "uint256: uint256 [15743,15750]",
      "dest": "uint256: uint256 [15743,15750]"
    },
    {
      "src": "pure: pure [9087,9091]",
      "dest": "pure: pure [9087,9091]"
    },
    {
      "src": "): ) [22375,22376]",
      "dest": "): ) [22375,22376]"
    },
    {
      "src": "call_argument [38601,38607]",
      "dest": "call_argument [38604,38610]"
    },
    {
      "src": "): ) [5539,5540]",
      "dest": "): ) [5539,5540]"
    },
    {
      "src": "comment: /**      * @dev Throws if called by any account other than the owner.      */ [2216,2295]",
      "dest": "comment: /**      * @dev Throws if called by any account other than the owner.      */ [2216,2295]"
    },
    {
      "src": "function_definition [30983,31040]",
      "dest": "function_definition [30989,31043]"
    },
    {
      "src": "identifier: _tokenAddress [35552,35565]",
      "dest": "identifier: _tokenAddress [35555,35568]"
    },
    {
      "src": "contract_body [1648,3432]",
      "dest": "contract_body [1648,3432]"
    },
    {
      "src": "call_argument [35719,35732]",
      "dest": "call_argument [35722,35735]"
    },
    {
      "src": "call_argument [23941,23948]",
      "dest": "call_argument [23941,23948]"
    },
    {
      "src": "returns: returns [19520,19527]",
      "dest": "returns: returns [19520,19527]"
    },
    {
      "src": "call_expression [36334,36355]",
      "dest": "call_expression [36337,36358]"
    },
    {
      "src": "||: || [37609,37611]",
      "dest": "||: || [37612,37614]"
    },
    {
      "src": "parameter [4893,4902]",
      "dest": "parameter [4893,4902]"
    },
    {
      "src": "external: external [11566,11574]",
      "dest": "external: external [11566,11574]"
    },
    {
      "src": "uint256: uint256 [8443,8450]",
      "dest": "uint256: uint256 [8443,8450]"
    },
    {
      "src": "string [8478,8504]",
      "dest": "string [8478,8504]"
    },
    {
      "src": "call_argument [38450,38471]",
      "dest": "call_argument [38453,38474]"
    },
    {
      "src": "function_definition [37976,39183]",
      "dest": "function_definition [37979,39186]"
    },
    {
      "src": "function: function [24512,24520]",
      "dest": "function: function [24512,24520]"
    },
    {
      "src": "identifier: onlyOwner [3135,3144]",
      "dest": "identifier: onlyOwner [3135,3144]"
    },
    {
      "src": "call_argument [20582,20622]",
      "dest": "call_argument [20582,20622]"
    },
    {
      "src": "function_definition [9015,9181]",
      "dest": "function_definition [9015,9181]"
    },
    {
      "src": "returns: returns [7814,7821]",
      "dest": "returns: returns [7814,7821]"
    },
    {
      "src": "yul_evm_builtin [21442,21445]",
      "dest": "yul_evm_builtin [21442,21445]"
    },
    {
      "src": "primitive_type [34879,34883]",
      "dest": "primitive_type [34882,34886]"
    },
    {
      "src": "returns: returns [27190,27197]",
      "dest": "returns: returns [27190,27197]"
    },
    {
      "src": "primitive_type [22191,22198]",
      "dest": "primitive_type [22191,22198]"
    },
    {
      "src": "(: ( [4881,4882]",
      "dest": "(: ( [4881,4882]"
    },
    {
      "src": "type_name [40835,40840]",
      "dest": "type_name [40844,40849]"
    },
    {
      "src": "}: } [36854,36855]",
      "dest": "}: } [36857,36858]"
    },
    {
      "src": "uint256: uint256 [10696,10703]",
      "dest": "uint256: uint256 [10696,10703]"
    },
    {
      "src": ".: . [19742,19743]",
      "dest": ".: . [19742,19743]"
    },
    {
      "src": "function_body [4302,4404]",
      "dest": "function_body [4302,4404]"
    },
    {
      "src": ",: , [5198,5199]",
      "dest": ",: , [5198,5199]"
    },
    {
      "src": "visibility [33892,33899]",
      "dest": "visibility [33895,33902]"
    },
    {
      "src": "||: || [23248,23250]",
      "dest": "||: || [23248,23250]"
    },
    {
      "src": "): ) [35903,35904]",
      "dest": "): ) [35906,35907]"
    },
    {
      "src": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [4953,5032]",
      "dest": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [4953,5032]"
    },
    {
      "src": "): ) [23665,23666]",
      "dest": "): ) [23665,23666]"
    },
    {
      "src": "returns: returns [732,739]",
      "dest": "returns: returns [732,739]"
    },
    {
      "src": "==: == [36545,36547]",
      "dest": "==: == [36548,36550]"
    },
    {
      "src": "identifier: _owner [1671,1677]",
      "dest": "identifier: _owner [1671,1677]"
    },
    {
      "src": "parameter [40835,40854]",
      "dest": "parameter [40844,40863]"
    },
    {
      "src": "binary_expression [9969,9974]",
      "dest": "binary_expression [9969,9974]"
    },
    {
      "src": ",: , [23850,23851]",
      "dest": ",: , [23850,23851]"
    },
    {
      "src": "view: view [26960,26964]",
      "dest": "view: view [26960,26964]"
    },
    {
      "src": "call_argument [6736,6742]",
      "dest": "call_argument [6736,6742]"
    },
    {
      "src": "function_body [7832,7918]",
      "dest": "function_body [7832,7918]"
    },
    {
      "src": "identifier: orders [39003,39009]",
      "dest": "identifier: orders [39006,39012]"
    },
    {
      "src": "parameter [40819,40833]",
      "dest": "parameter [40828,40842]"
    },
    {
      "src": "uint: uint [34771,34775]",
      "dest": "uint: uint [34774,34778]"
    },
    {
      "src": "visibility [16910,16918]",
      "dest": "visibility [16910,16918]"
    },
    {
      "src": ",: , [4668,4669]",
      "dest": ",: , [4668,4669]"
    },
    {
      "src": "false [5265,5270]",
      "dest": "false [5265,5270]"
    },
    {
      "src": "event_paramater [26810,26823]",
      "dest": "event_paramater [26810,26823]"
    },
    {
      "src": "}: } [20223,20224]",
      "dest": "}: } [20223,20224]"
    },
    {
      "src": "call_argument [24066,24088]",
      "dest": "call_argument [24066,24088]"
    },
    {
      "src": "variable_declaration_tuple [15943,15958]",
      "dest": "variable_declaration_tuple [15943,15958]"
    },
    {
      "src": "variable_declaration_statement [23887,24006]",
      "dest": "variable_declaration_statement [23887,24006]"
    },
    {
      "src": "address: address [17859,17866]",
      "dest": "address: address [17859,17866]"
    },
    {
      "src": "function: function [3075,3083]",
      "dest": "function: function [3075,3083]"
    },
    {
      "src": "): ) [23773,23774]",
      "dest": "): ) [23773,23774]"
    },
    {
      "src": "return_statement [1021,1037]",
      "dest": "return_statement [1021,1037]"
    },
    {
      "src": "(: ( [17360,17361]",
      "dest": "(: ( [17360,17361]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [47,78]",
      "dest": "comment: // SPDX-License-Identifier: MIT [47,78]"
    },
    {
      "src": "identifier: ownerOf [35734,35741]",
      "dest": "identifier: ownerOf [35737,35744]"
    },
    {
      "src": "using: using [22140,22145]",
      "dest": "using: using [22140,22145]"
    },
    {
      "src": "call_argument [18002,18045]",
      "dest": "call_argument [18002,18045]"
    },
    {
      "src": ",: , [38331,38332]",
      "dest": ",: , [38334,38335]"
    },
    {
      "src": "type_name [26383,26390]",
      "dest": "type_name [26383,26390]"
    },
    {
      "src": "identifier: operator [26800,26808]",
      "dest": "identifier: operator [26800,26808]"
    },
    {
      "src": "member_expression [23616,23631]",
      "dest": "member_expression [23616,23631]"
    },
    {
      "src": "member_expression [20738,20757]",
      "dest": "member_expression [20738,20757]"
    },
    {
      "src": "view: view [11105,11109]",
      "dest": "view: view [11105,11109]"
    },
    {
      "src": "binary_expression [23252,23296]",
      "dest": "binary_expression [23252,23296]"
    },
    {
      "src": "}: } [21046,21047]",
      "dest": "}: } [21046,21047]"
    },
    {
      "src": "): ) [29136,29137]",
      "dest": "): ) [29136,29137]"
    },
    {
      "src": "}: } [17027,17028]",
      "dest": "}: } [17027,17028]"
    },
    {
      "src": "primitive_type [9028,9035]",
      "dest": "primitive_type [9028,9035]"
    },
    {
      "src": "identifier: token [23727,23732]",
      "dest": "identifier: token [23727,23732]"
    },
    {
      "src": "function_definition [26917,26991]",
      "dest": "function_definition [26917,26991]"
    },
    {
      "src": ":: : [36058,36059]",
      "dest": ":: : [36061,36062]"
    },
    {
      "src": ".: . [38785,38786]",
      "dest": ".: . [38788,38789]"
    },
    {
      "src": "call_argument [19161,19167]",
      "dest": "call_argument [19161,19167]"
    },
    {
      "src": "): ) [756,757]",
      "dest": "): ) [756,757]"
    },
    {
      "src": "(: ( [37347,37348]",
      "dest": "(: ( [37350,37351]"
    },
    {
      "src": "identifier: copyrightFee [38688,38700]",
      "dest": "identifier: copyrightFee [38691,38703]"
    },
    {
      "src": "memory: memory [20896,20902]",
      "dest": "memory: memory [20896,20902]"
    },
    {
      "src": "expression_statement [7843,7888]",
      "dest": "expression_statement [7843,7888]"
    },
    {
      "src": "=: = [36299,36300]",
      "dest": "=: = [36302,36303]"
    },
    {
      "src": "parameter [11531,11548]",
      "dest": "parameter [11531,11548]"
    },
    {
      "src": "parameter [29744,29760]",
      "dest": "parameter [29744,29760]"
    },
    {
      "src": "type_name [23558,23565]",
      "dest": "type_name [23558,23565]"
    },
    {
      "src": "address: address [23926,23933]",
      "dest": "address: address [23926,23933]"
    },
    {
      "src": "identifier: order [38948,38953]",
      "dest": "identifier: order [38951,38956]"
    },
    {
      "src": "comment: /**      * @dev Returns the account approved for `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [29155,29300]",
      "dest": "comment: /**      * @dev Returns the account approved for `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [29155,29300]"
    },
    {
      "src": "call_argument [37007,37012]",
      "dest": "call_argument [37010,37015]"
    },
    {
      "src": "comment: // solhint-disable-next-line max-line-length [23173,23217]",
      "dest": "comment: // solhint-disable-next-line max-line-length [23173,23217]"
    },
    {
      "src": "): ) [37278,37279]",
      "dest": "): ) [37281,37282]"
    },
    {
      "src": ",: , [24041,24042]",
      "dest": ",: , [24041,24042]"
    },
    {
      "src": "primitive_type [26936,26943]",
      "dest": "primitive_type [26936,26943]"
    },
    {
      "src": "function: function [10683,10691]",
      "dest": "function: function [10683,10691]"
    },
    {
      "src": "type_name [4242,4249]",
      "dest": "type_name [4242,4249]"
    },
    {
      "src": ",: , [37687,37688]",
      "dest": ",: , [37690,37691]"
    },
    {
      "src": "visibility [13091,13099]",
      "dest": "visibility [13091,13099]"
    },
    {
      "src": "address: address [3228,3235]",
      "dest": "address: address [3228,3235]"
    },
    {
      "src": "call_argument [37323,37328]",
      "dest": "call_argument [37326,37331]"
    },
    {
      "src": "user_defined_type [38423,38429]",
      "dest": "user_defined_type [38426,38432]"
    },
    {
      "src": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [3484,4059]",
      "dest": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [3484,4059]"
    },
    {
      "src": "(: ( [3101,3102]",
      "dest": "(: ( [3101,3102]"
    },
    {
      "src": ".: . [36517,36518]",
      "dest": ".: . [36520,36521]"
    },
    {
      "src": "type_name [22243,22250]",
      "dest": "type_name [22243,22250]"
    },
    {
      "src": "{: { [37224,37225]",
      "dest": "{: { [37227,37228]"
    },
    {
      "src": "parameter [9879,9888]",
      "dest": "parameter [9879,9888]"
    },
    {
      "src": "parameter [37148,37161]",
      "dest": "parameter [37151,37164]"
    },
    {
      "src": "call_argument [38948,38961]",
      "dest": "call_argument [38951,38964]"
    },
    {
      "src": "uint256: uint256 [9868,9875]",
      "dest": "uint256: uint256 [9868,9875]"
    },
    {
      "src": "identifier: _orderID [41185,41193]",
      "dest": "identifier: _orderID [41194,41202]"
    },
    {
      "src": "(: ( [15794,15795]",
      "dest": "(: ( [15794,15795]"
    },
    {
      "src": "identifier: a [5489,5490]",
      "dest": "identifier: a [5489,5490]"
    },
    {
      "src": "(: ( [31013,31014]",
      "dest": "(: ( [31016,31017]"
    },
    {
      "src": "return_statement [18772,18832]",
      "dest": "return_statement [18772,18832]"
    },
    {
      "src": "call_argument [23235,23297]",
      "dest": "call_argument [23235,23297]"
    },
    {
      "src": "comment: // pay the copyright fee [38523,38547]",
      "dest": "comment: // pay the copyright fee [38526,38550]"
    },
    {
      "src": ",: , [9888,9889]",
      "dest": ",: , [9888,9889]"
    },
    {
      "src": "comment: // File: contracts/Dependencies/ReentrancyGuard.sol [31047,31098]",
      "dest": "comment: // File: contracts/Dependencies/ReentrancyGuard.sol [31050,31101]"
    },
    {
      "src": "external: external [11252,11260]",
      "dest": "external: external [11252,11260]"
    },
    {
      "src": "variable_declaration [40233,40256]",
      "dest": "variable_declaration [40245,40268]"
    },
    {
      "src": "=: = [39385,39386]",
      "dest": "=: = [39388,39389]"
    },
    {
      "src": "call_expression [37256,37279]",
      "dest": "call_expression [37259,37282]"
    },
    {
      "src": "): ) [39508,39509]",
      "dest": "): ) [39511,39512]"
    },
    {
      "src": "address: address [3286,3293]",
      "dest": "address: address [3286,3293]"
    },
    {
      "src": "return_statement [7898,7911]",
      "dest": "return_statement [7898,7911]"
    },
    {
      "src": "identifier: success [19795,19802]",
      "dest": "identifier: success [19795,19802]"
    },
    {
      "src": "==: == [7218,7220]",
      "dest": "==: == [7218,7220]"
    },
    {
      "src": "}: } [31042,31043]",
      "dest": "}: } [31045,31046]"
    },
    {
      "src": "uint256: uint256 [23887,23894]",
      "dest": "uint256: uint256 [23887,23894]"
    },
    {
      "src": "call_argument [35780,35824]",
      "dest": "call_argument [35783,35827]"
    },
    {
      "src": ",: , [6308,6309]",
      "dest": ",: , [6308,6309]"
    },
    {
      "src": "{: { [33268,33269]",
      "dest": "{: { [33271,33272]"
    },
    {
      "src": "identifier: sender [38198,38204]",
      "dest": "identifier: sender [38201,38207]"
    },
    {
      "src": ",: , [23749,23750]",
      "dest": ",: , [23749,23750]"
    },
    {
      "src": "type_cast_expression [41228,41238]",
      "dest": "type_cast_expression [41237,41247]"
    },
    {
      "src": "(: ( [20447,20448]",
      "dest": "(: ( [20447,20448]"
    },
    {
      "src": "uint256: uint256 [26582,26589]",
      "dest": "uint256: uint256 [26582,26589]"
    },
    {
      "src": "(: ( [36352,36353]",
      "dest": "(: ( [36355,36356]"
    },
    {
      "src": "identifier: balance [26982,26989]",
      "dest": "identifier: balance [26982,26989]"
    },
    {
      "src": "primitive_type [28588,28595]",
      "dest": "primitive_type [28588,28595]"
    },
    {
      "src": ">: > [40419,40420]",
      "dest": ">: > [40428,40429]"
    },
    {
      "src": "): ) [9916,9917]",
      "dest": "): ) [9916,9917]"
    },
    {
      "src": "(: ( [29326,29327]",
      "dest": "(: ( [29326,29327]"
    },
    {
      "src": "type_name [17296,17301]",
      "dest": "type_name [17296,17301]"
    },
    {
      "src": "(: ( [19160,19161]",
      "dest": "(: ( [19160,19161]"
    },
    {
      "src": "type_name [30665,30672]",
      "dest": "type_name [30665,30672]"
    },
    {
      "src": "memory: memory [39585,39591]",
      "dest": "memory: memory [39588,39594]"
    },
    {
      "src": "expression_statement [3404,3422]",
      "dest": "expression_statement [3404,3422]"
    },
    {
      "src": "tuple_expression [5599,5612]",
      "dest": "tuple_expression [5599,5612]"
    },
    {
      "src": "primitive_type [35094,35101]",
      "dest": "primitive_type [35097,35104]"
    },
    {
      "src": "type_name [22918,22925]",
      "dest": "type_name [22918,22925]"
    },
    {
      "src": "type_name [34465,34487]",
      "dest": "type_name [34468,34490]"
    },
    {
      "src": "uint256: uint256 [23593,23600]",
      "dest": "uint256: uint256 [23593,23600]"
    },
    {
      "src": ",: , [33797,33798]",
      "dest": ",: , [33800,33801]"
    },
    {
      "src": "): ) [39714,39715]",
      "dest": "): ) [39717,39718]"
    },
    {
      "src": "): ) [9948,9949]",
      "dest": "): ) [9948,9949]"
    },
    {
      "src": "identifier: _payTokenAddress [36097,36113]",
      "dest": "identifier: _payTokenAddress [36100,36116]"
    },
    {
      "src": "identifier: isAvailable [39020,39031]",
      "dest": "identifier: isAvailable [39023,39034]"
    },
    {
      "src": "\": \" [6775,6776]",
      "dest": "\": \" [6775,6776]"
    },
    {
      "src": "(: ( [41212,41213]",
      "dest": "(: ( [41221,41222]"
    },
    {
      "src": "visibility [39267,39273]",
      "dest": "visibility [39270,39276]"
    },
    {
      "src": "identifier: _tokenAddress [36026,36039]",
      "dest": "identifier: _tokenAddress [36029,36042]"
    },
    {
      "src": "pragma: pragma [82,88]",
      "dest": "pragma: pragma [82,88]"
    },
    {
      "src": "identifier: _payTokenAddress [34596,34612]",
      "dest": "identifier: _payTokenAddress [34599,34615]"
    },
    {
      "src": ",: , [16889,16890]",
      "dest": ",: , [16889,16890]"
    },
    {
      "src": "visibility [38004,38012]",
      "dest": "visibility [38007,38015]"
    },
    {
      "src": "parameter [23527,23539]",
      "dest": "parameter [23527,23539]"
    },
    {
      "src": "type_name [11908,11915]",
      "dest": "type_name [11908,11915]"
    },
    {
      "src": "type_name [22432,22439]",
      "dest": "type_name [22432,22439]"
    },
    {
      "src": "string_literal [38219,38258]",
      "dest": "string_literal [38222,38261]"
    },
    {
      "src": "identifier: payTokenAddress [39141,39156]",
      "dest": "identifier: payTokenAddress [39144,39159]"
    },
    {
      "src": "primitive_type [11275,11282]",
      "dest": "primitive_type [11275,11282]"
    },
    {
      "src": ",: , [36000,36001]",
      "dest": ",: , [36003,36004]"
    },
    {
      "src": "modifier_definition [2301,2421]",
      "dest": "modifier_definition [2301,2421]"
    },
    {
      "src": "type_name [40126,40148]",
      "dest": "type_name [40135,40160]"
    },
    {
      "src": "(: ( [18469,18470]",
      "dest": "(: ( [18469,18470]"
    },
    {
      "src": "identifier: a [5810,5811]",
      "dest": "identifier: a [5810,5811]"
    },
    {
      "src": "false: false [5572,5577]",
      "dest": "false: false [5572,5577]"
    },
    {
      "src": "): ) [34936,34937]",
      "dest": "): ) [34939,34940]"
    },
    {
      "src": "call_expression [35836,35904]",
      "dest": "call_expression [35839,35907]"
    },
    {
      "src": "{: { [14699,14700]",
      "dest": "{: { [14699,14700]"
    },
    {
      "src": "function: function [20418,20426]",
      "dest": "function: function [20418,20426]"
    },
    {
      "src": "call_expression [9121,9150]",
      "dest": "call_expression [9121,9150]"
    },
    {
      "src": "function_definition [5465,5620]",
      "dest": "function_definition [5465,5620]"
    },
    {
      "src": "if_statement [5552,5582]",
      "dest": "if_statement [5552,5582]"
    },
    {
      "src": ".: . [40657,40658]",
      "dest": ".: . [40666,40667]"
    },
    {
      "src": "uint256: uint256 [5853,5860]",
      "dest": "uint256: uint256 [5853,5860]"
    },
    {
      "src": "number_literal: 0 [23295,23296]",
      "dest": "number_literal: 0 [23295,23296]"
    },
    {
      "src": ",: , [13054,13055]",
      "dest": ",: , [13054,13055]"
    },
    {
      "src": "identifier: require [36491,36498]",
      "dest": "identifier: require [36494,36501]"
    },
    {
      "src": "false: false [4663,4668]",
      "dest": "false: false [4663,4668]"
    },
    {
      "src": "expression_statement [36317,36356]",
      "dest": "expression_statement [36320,36359]"
    },
    {
      "src": "state_mutability [39565,39569]",
      "dest": "state_mutability [39568,39572]"
    },
    {
      "src": "variable_declaration_statement [4313,4331]",
      "dest": "variable_declaration_statement [4313,4331]"
    },
    {
      "src": "call_argument [37661,37671]",
      "dest": "call_argument [37664,37674]"
    },
    {
      "src": "binary_expression [9168,9173]",
      "dest": "binary_expression [9168,9173]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.      */ [26615,26734]",
      "dest": "comment: /**      * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.      */ [26615,26734]"
    },
    {
      "src": "primitive_type [26063,26067]",
      "dest": "primitive_type [26063,26067]"
    },
    {
      "src": "primitive_type [11584,11588]",
      "dest": "primitive_type [11584,11588]"
    },
    {
      "src": "): ) [2174,2175]",
      "dest": "): ) [2174,2175]"
    },
    {
      "src": ",: , [37005,37006]",
      "dest": ",: , [37008,37009]"
    },
    {
      "src": "variable_declaration_statement [5213,5231]",
      "dest": "variable_declaration_statement [5213,5231]"
    },
    {
      "src": "(: ( [9100,9101]",
      "dest": "(: ( [9100,9101]"
    },
    {
      "src": "identifier: _orderID [37994,38002]",
      "dest": "identifier: _orderID [37997,38005]"
    },
    {
      "src": "identifier: HasCopyright [40126,40138]",
      "dest": "identifier: HasCopyright721 [40135,40150]"
    },
    {
      "src": "): ) [39591,39592]",
      "dest": "): ) [39594,39595]"
    },
    {
      "src": ",: , [22430,22431]",
      "dest": ",: , [22430,22431]"
    },
    {
      "src": "type_name [19478,19484]",
      "dest": "type_name [19478,19484]"
    },
    {
      "src": "identifier: tokenID [40214,40221]",
      "dest": "identifier: tokenID [40226,40233]"
    },
    {
      "src": "identifier: from [22440,22444]",
      "dest": "identifier: from [22440,22444]"
    },
    {
      "src": "): ) [22931,22932]",
      "dest": "): ) [22931,22932]"
    },
    {
      "src": "visibility [11252,11260]",
      "dest": "visibility [11252,11260]"
    },
    {
      "src": "primitive_type [26533,26540]",
      "dest": "primitive_type [26533,26540]"
    },
    {
      "src": "(: ( [33358,33359]",
      "dest": "(: ( [33361,33362]"
    },
    {
      "src": "type_name [24936,24941]",
      "dest": "type_name [24936,24941]"
    },
    {
      "src": "primitive_type [39230,39237]",
      "dest": "primitive_type [39233,39240]"
    },
    {
      "src": "(: ( [14401,14402]",
      "dest": "(: ( [14401,14402]"
    },
    {
      "src": "false: false [4360,4365]",
      "dest": "false: false [4360,4365]"
    },
    {
      "src": "contract_body [26223,30727]",
      "dest": "contract_body [26223,30727]"
    },
    {
      "src": "identifier: token [24066,24071]",
      "dest": "identifier: token [24066,24071]"
    },
    {
      "src": "comment: // word because each write operation emits an extra SLOAD to first read the [31992,32067]",
      "dest": "comment: // word because each write operation emits an extra SLOAD to first read the [31995,32070]"
    },
    {
      "src": "emit_statement [3350,3394]",
      "dest": "emit_statement [3350,3394]"
    },
    {
      "src": "variable_declaration [23887,23907]",
      "dest": "variable_declaration [23887,23907]"
    },
    {
      "src": "state_mutability [5833,5837]",
      "dest": "state_mutability [5833,5837]"
    },
    {
      "src": "emit_statement [35352,35432]",
      "dest": "emit_statement [35355,35435]"
    },
    {
      "src": "identifier: feeRateNumerator [30871,30887]",
      "dest": "identifier: feeRateNumerator [30877,30893]"
    },
    {
      "src": ".: . [23732,23733]",
      "dest": ".: . [23732,23733]"
    },
    {
      "src": "(: ( [4647,4648]",
      "dest": "(: ( [4647,4648]"
    },
    {
      "src": "identifier: orders [36276,36282]",
      "dest": "identifier: orders [36279,36285]"
    },
    {
      "src": "memory: memory [20971,20977]",
      "dest": "memory: memory [20971,20977]"
    },
    {
      "src": "variable_declaration [36919,36937]",
      "dest": "variable_declaration [36922,36940]"
    },
    {
      "src": ",: , [20709,20710]",
      "dest": ",: , [20709,20710]"
    },
    {
      "src": "\": \" [20214,20215]",
      "dest": "\": \" [20214,20215]"
    },
    {
      "src": "yul_path [21402,21412]",
      "dest": "yul_path [21402,21412]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [20232,20412]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [20232,20412]"
    },
    {
      "src": "(: ( [11274,11275]",
      "dest": "(: ( [11274,11275]"
    },
    {
      "src": "uint256: uint256 [6663,6670]",
      "dest": "uint256: uint256 [6663,6670]"
    },
    {
      "src": "identifier: token [23616,23621]",
      "dest": "identifier: token [23616,23621]"
    },
    {
      "src": "\": \" [24996,24997]",
      "dest": "\": \" [24996,24997]"
    },
    {
      "src": "type_name [26020,26026]",
      "dest": "type_name [26020,26026]"
    },
    {
      "src": "identifier: require [40881,40888]",
      "dest": "identifier: require [40890,40897]"
    },
    {
      "src": "type_name [19068,19073]",
      "dest": "type_name [19068,19073]"
    },
    {
      "src": "member_expression [18470,18491]",
      "dest": "member_expression [18470,18491]"
    },
    {
      "src": "(: ( [1712,1713]",
      "dest": "(: ( [1712,1713]"
    },
    {
      "src": "): ) [13362,13363]",
      "dest": "): ) [13362,13363]"
    },
    {
      "src": "(: ( [5571,5572]",
      "dest": "(: ( [5571,5572]"
    },
    {
      "src": "identifier: length [25057,25063]",
      "dest": "identifier: length [25057,25063]"
    },
    {
      "src": ",: , [15741,15742]",
      "dest": ",: , [15741,15742]"
    },
    {
      "src": "identifier: a [5249,5250]",
      "dest": "identifier: a [5249,5250]"
    },
    {
      "src": "identifier: spender [23941,23948]",
      "dest": "identifier: spender [23941,23948]"
    },
    {
      "src": "(: ( [38311,38312]",
      "dest": "(: ( [38314,38315]"
    },
    {
      "src": "call_expression [16006,16084]",
      "dest": "call_expression [16006,16084]"
    },
    {
      "src": "{: { [6255,6256]",
      "dest": "{: { [6255,6256]"
    },
    {
      "src": "identifier: b [6799,6800]",
      "dest": "identifier: b [6799,6800]"
    },
    {
      "src": "number_literal: 0 [17429,17430]",
      "dest": "number_literal: 0 [17429,17430]"
    },
    {
      "src": ".: . [38197,38198]",
      "dest": ".: . [38200,38201]"
    },
    {
      "src": "parameter [28562,28574]",
      "dest": "parameter [28562,28574]"
    },
    {
      "src": "comment: /**      * @dev Returns the address of the current owner.      */ [2048,2115]",
      "dest": "comment: /**      * @dev Returns the address of the current owner.      */ [2048,2115]"
    },
    {
      "src": "primitive_type [22918,22925]",
      "dest": "primitive_type [22918,22925]"
    },
    {
      "src": "call_struct_argument [36159,36177]",
      "dest": "call_struct_argument [36162,36180]"
    },
    {
      "src": "identifier: tokenAddress [39856,39868]",
      "dest": "identifier: tokenAddress [39859,39871]"
    },
    {
      "src": "parameter [35153,35188]",
      "dest": "parameter [35156,35191]"
    },
    {
      "src": "address: address [22901,22908]",
      "dest": "address: address [22901,22908]"
    },
    {
      "src": "type_name [23821,23827]",
      "dest": "type_name [23821,23827]"
    },
    {
      "src": "string [15992,15994]",
      "dest": "string [15992,15994]"
    },
    {
      "src": "uint: uint [34338,34342]",
      "dest": "uint: uint [34341,34345]"
    },
    {
      "src": "=: = [20736,20737]",
      "dest": "=: = [20736,20737]"
    },
    {
      "src": "state_mutability [19096,19100]",
      "dest": "state_mutability [19096,19100]"
    },
    {
      "src": "(: ( [11583,11584]",
      "dest": "(: ( [11583,11584]"
    },
    {
      "src": "function: function [19415,19423]",
      "dest": "function: function [19415,19423]"
    },
    {
      "src": "type_name [34894,34901]",
      "dest": "type_name [34897,34904]"
    },
    {
      "src": "identifier: errorMessage [20929,20941]",
      "dest": "identifier: errorMessage [20929,20941]"
    },
    {
      "src": "identifier: _msgData [811,819]",
      "dest": "identifier: _msgData [811,819]"
    },
    {
      "src": "yul_identifier [21402,21412]",
      "dest": "yul_identifier [21402,21412]"
    },
    {
      "src": "identifier: from [30659,30663]",
      "dest": "identifier: from [30659,30663]"
    },
    {
      "src": "identifier: _maker [34679,34685]",
      "dest": "identifier: _maker [34682,34688]"
    },
    {
      "src": "comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [21648,22113]",
      "dest": "comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [21648,22113]"
    },
    {
      "src": "function_definition [16853,17028]",
      "dest": "function_definition [16853,17028]"
    },
    {
      "src": "identifier: author [39782,39788]",
      "dest": "identifier: author [39785,39791]"
    },
    {
      "src": "primitive_type [23926,23933]",
      "dest": "primitive_type [23926,23933]"
    },
    {
      "src": "bool: bool [30025,30029]",
      "dest": "bool: bool [30025,30029]"
    },
    {
      "src": "external: external [29344,29352]",
      "dest": "external: external [29344,29352]"
    },
    {
      "src": "emit_statement [1984,2033]",
      "dest": "emit_statement [1984,2033]"
    },
    {
      "src": "type_name [6266,6273]",
      "dest": "type_name [6266,6273]"
    },
    {
      "src": "parameter [6201,6210]",
      "dest": "parameter [6201,6210]"
    },
    {
      "src": "): ) [30713,30714]",
      "dest": "): ) [30713,30714]"
    },
    {
      "src": ",: , [35076,35077]",
      "dest": ",: , [35079,35080]"
    },
    {
      "src": "uint256: uint256 [30677,30684]",
      "dest": "uint256: uint256 [30677,30684]"
    },
    {
      "src": ".: . [37791,37792]",
      "dest": ".: . [37794,37795]"
    },
    {
      "src": "primitive_type [35567,35571]",
      "dest": "primitive_type [35570,35574]"
    },
    {
      "src": "function: function [37976,37984]",
      "dest": "function: function [37979,37987]"
    },
    {
      "src": "contract_body [25633,26072]",
      "dest": "contract_body [25633,26072]"
    },
    {
      "src": "{: { [21519,21520]",
      "dest": "{: { [21519,21520]"
    },
    {
      "src": "return: return [5913,5919]",
      "dest": "return: return [5913,5919]"
    },
    {
      "src": "true [5600,5604]",
      "dest": "true [5600,5604]"
    },
    {
      "src": "identifier: _orderID [38072,38080]",
      "dest": "identifier: _orderID [38075,38083]"
    },
    {
      "src": "primitive_type [4287,4291]",
      "dest": "primitive_type [4287,4291]"
    },
    {
      "src": ".: . [24071,24072]",
      "dest": ".: . [24071,24072]"
    },
    {
      "src": "\": \" [35823,35824]",
      "dest": "\": \" [35826,35827]"
    },
    {
      "src": "{: { [14408,14409]",
      "dest": "{: { [14408,14409]"
    },
    {
      "src": "identifier: this [15795,15799]",
      "dest": "identifier: this [15795,15799]"
    },
    {
      "src": "): ) [5273,5274]",
      "dest": "): ) [5273,5274]"
    },
    {
      "src": "parameter [12643,12658]",
      "dest": "parameter [12643,12658]"
    },
    {
      "src": "identifier: _order [40095,40101]",
      "dest": "identifier: _order [40104,40110]"
    },
    {
      "src": "): ) [20215,20216]",
      "dest": "): ) [20215,20216]"
    },
    {
      "src": "string: string [9050,9056]",
      "dest": "string: string [9050,9056]"
    },
    {
      "src": "identifier: c [6302,6303]",
      "dest": "identifier: c [6302,6303]"
    },
    {
      "src": "identifier: b [7797,7798]",
      "dest": "identifier: b [7797,7798]"
    },
    {
      "src": "}: } [39182,39183]",
      "dest": "}: } [39185,39186]"
    },
    {
      "src": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [11598,11868]",
      "dest": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [11598,11868]"
    },
    {
      "src": "type_name [4584,4591]",
      "dest": "type_name [4584,4591]"
    },
    {
      "src": ".: . [37314,37315]",
      "dest": ".: . [37317,37318]"
    },
    {
      "src": "contract_declaration [1611,3432]",
      "dest": "contract_declaration [1611,3432]"
    },
    {
      "src": "/: / [5608,5609]",
      "dest": "/: / [5608,5609]"
    },
    {
      "src": "address: address [22191,22198]",
      "dest": "address: address [22191,22198]"
    },
    {
      "src": "function_definition [24512,25272]",
      "dest": "function_definition [24512,25272]"
    },
    {
      "src": "public: public [35209,35215]",
      "dest": "public: public [35212,35218]"
    },
    {
      "src": "(: ( [15786,15787]",
      "dest": "(: ( [15786,15787]"
    },
    {
      "src": "visibility [30002,30010]",
      "dest": "visibility [30002,30010]"
    },
    {
      "src": "primitive_type [30651,30658]",
      "dest": "primitive_type [30651,30658]"
    },
    {
      "src": "[: [ [37843,37844]",
      "dest": "[: [ [37846,37847]"
    },
    {
      "src": "(: ( [37089,37090]",
      "dest": "(: ( [37092,37093]"
    },
    {
      "src": "call_expression [40168,40222]",
      "dest": "call_expression [40180,40234]"
    },
    {
      "src": "yul_function_call [21442,21461]",
      "dest": "yul_function_call [21442,21461]"
    },
    {
      "src": "identifier: amount [15751,15757]",
      "dest": "identifier: amount [15751,15757]"
    },
    {
      "src": "{: { [35971,35972]",
      "dest": "{: { [35974,35975]"
    },
    {
      "src": "parameter [23835,23850]",
      "dest": "parameter [23835,23850]"
    },
    {
      "src": "): ) [37686,37687]",
      "dest": "): ) [37689,37690]"
    },
    {
      "src": "function_definition [5786,5941]",
      "dest": "function_definition [5786,5941]"
    },
    {
      "src": ",: , [30663,30664]",
      "dest": ",: , [30663,30664]"
    },
    {
      "src": "parameter [6708,6715]",
      "dest": "parameter [6708,6715]"
    },
    {
      "src": "identifier: _erc721AddressWithCopyright [35161,35188]",
      "dest": "identifier: _erc721AddressWithCopyright [35164,35191]"
    },
    {
      "src": "call_argument [37673,37686]",
      "dest": "call_argument [37676,37689]"
    },
    {
      "src": "call_expression [25168,25253]",
      "dest": "call_expression [25168,25253]"
    },
    {
      "src": "else: else [21514,21518]",
      "dest": "else: else [21514,21518]"
    },
    {
      "src": "address: address [22446,22453]",
      "dest": "address: address [22446,22453]"
    },
    {
      "src": ",: , [4582,4583]",
      "dest": ",: , [4582,4583]"
    },
    {
      "src": ",: , [38607,38608]",
      "dest": ",: , [38610,38611]"
    },
    {
      "src": "visibility [6685,6693]",
      "dest": "visibility [6685,6693]"
    },
    {
      "src": "identifier: tokenID [38954,38961]",
      "dest": "identifier: tokenID [38957,38964]"
    },
    {
      "src": "[: [ [39009,39010]",
      "dest": "[: [ [39012,39013]"
    },
    {
      "src": "address: address [13040,13047]",
      "dest": "address: address [13040,13047]"
    },
    {
      "src": "identifier: to [29117,29119]",
      "dest": "identifier: to [29117,29119]"
    },
    {
      "src": "primitive_type [9868,9875]",
      "dest": "primitive_type [9868,9875]"
    },
    {
      "src": "identifier: a [6741,6742]",
      "dest": "identifier: a [6741,6742]"
    },
    {
      "src": "identifier: transfer [22346,22354]",
      "dest": "identifier: transfer [22346,22354]"
    },
    {
      "src": "member_expression [37546,37576]",
      "dest": "member_expression [37549,37579]"
    },
    {
      "src": "return: return [5257,5263]",
      "dest": "return: return [5257,5263]"
    },
    {
      "src": "primitive_type [5853,5860]",
      "dest": "primitive_type [5853,5860]"
    },
    {
      "src": "identifier: target [20062,20068]",
      "dest": "identifier: target [20062,20068]"
    },
    {
      "src": "call_argument [37577,37590]",
      "dest": "call_argument [37580,37593]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [18062,18304]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [18062,18304]"
    },
    {
      "src": ",: , [39994,39995]",
      "dest": ",: , [39997,39998]"
    },
    {
      "src": "comment: // bid [37964,37970]",
      "dest": "comment: // bid [37967,37973]"
    },
    {
      "src": "identifier: data [17309,17313]",
      "dest": "identifier: data [17309,17313]"
    },
    {
      "src": "call_expression [15961,15995]",
      "dest": "call_expression [15961,15995]"
    },
    {
      "src": "}: } [5940,5941]",
      "dest": "}: } [5940,5941]"
    },
    {
      "src": "address: address [19443,19450]",
      "dest": "address: address [19443,19450]"
    },
    {
      "src": "function_definition [30903,30975]",
      "dest": "function_definition [30909,30981]"
    },
    {
      "src": "primitive_type [33921,33925]",
      "dest": "primitive_type [33924,33928]"
    },
    {
      "src": "): ) [4350,4351]",
      "dest": "): ) [4350,4351]"
    },
    {
      "src": "}: } [24120,24121]",
      "dest": "}: } [24120,24121]"
    },
    {
      "src": "parameter [4584,4593]",
      "dest": "parameter [4584,4593]"
    },
    {
      "src": "visibility [26040,26048]",
      "dest": "visibility [26040,26048]"
    },
    {
      "src": "): ) [24975,24976]",
      "dest": "): ) [24975,24976]"
    },
    {
      "src": "number_literal: 0 [5200,5201]",
      "dest": "number_literal: 0 [5200,5201]"
    },
    {
      "src": "modifier: modifier [33244,33252]",
      "dest": "modifier: modifier [33247,33255]"
    },
    {
      "src": "): ) [7886,7887]",
      "dest": "): ) [7886,7887]"
    },
    {
      "src": "address: address [34984,34991]",
      "dest": "address: address [34987,34994]"
    },
    {
      "src": "primitive_type [17315,17321]",
      "dest": "primitive_type [17315,17321]"
    },
    {
      "src": "parameter [22229,22241]",
      "dest": "parameter [22229,22241]"
    },
    {
      "src": "}: } [14761,14762]",
      "dest": "}: } [14761,14762]"
    },
    {
      "src": "{: { [24582,24583]",
      "dest": "{: { [24582,24583]"
    },
    {
      "src": "primitive_type [8409,8416]",
      "dest": "primitive_type [8409,8416]"
    },
    {
      "src": "identifier: tokenID [34204,34211]",
      "dest": "identifier: tokenID [34207,34214]"
    },
    {
      "src": "): ) [38080,38081]",
      "dest": "): ) [38083,38084]"
    },
    {
      "src": "using: using [33852,33857]",
      "dest": "using: using [33855,33860]"
    },
    {
      "src": "identifier: owner [26944,26949]",
      "dest": "identifier: owner [26944,26949]"
    },
    {
      "src": "call_expression [1932,1944]",
      "dest": "call_expression [1932,1944]"
    },
    {
      "src": "call_expression [40082,40115]",
      "dest": "call_expression [40088,40124]"
    },
    {
      "src": ",: , [19814,19815]",
      "dest": ",: , [19814,19815]"
    },
    {
      "src": "type_name [20965,20970]",
      "dest": "type_name [20965,20970]"
    },
    {
      "src": "type_name [34920,34924]",
      "dest": "type_name [34923,34927]"
    },
    {
      "src": "\": \" [2399,2400]",
      "dest": "\": \" [2399,2400]"
    },
    {
      "src": "identifier: _transferOwnership [35444,35462]",
      "dest": "identifier: _transferOwnership [35447,35465]"
    },
    {
      "src": "modifier_definition [33244,33701]",
      "dest": "modifier_definition [33247,33704]"
    },
    {
      "src": "type_name [22418,22424]",
      "dest": "type_name [22418,22424]"
    },
    {
      "src": "comment: // the official ERC721 token has an invalid copyright [40456,40509]",
      "dest": "comment: // the official ERC721 token has an invalid copyright [40465,40518]"
    },
    {
      "src": "type_name [37163,37170]",
      "dest": "type_name [37166,37173]"
    },
    {
      "src": "event_paramater [34824,34838]",
      "dest": "event_paramater [34827,34841]"
    },
    {
      "src": "call_expression [23227,23379]",
      "dest": "call_expression [23227,23379]"
    },
    {
      "src": "return_type_definition [16919,16941]",
      "dest": "return_type_definition [16919,16941]"
    },
    {
      "src": "boolean_literal [5293,5297]",
      "dest": "boolean_literal [5293,5297]"
    },
    {
      "src": "identifier: owner [26549,26554]",
      "dest": "identifier: owner [26549,26554]"
    },
    {
      "src": "identifier: b [5229,5230]",
      "dest": "identifier: b [5229,5230]"
    },
    {
      "src": "identifier: token [23534,23539]",
      "dest": "identifier: token [23534,23539]"
    },
    {
      "src": "string [37373,37406]",
      "dest": "string [37376,37409]"
    },
    {
      "src": "return_statement [5285,5302]",
      "dest": "return_statement [5285,5302]"
    },
    {
      "src": "): ) [37328,37329]",
      "dest": "): ) [37331,37332]"
    },
    {
      "src": "type_cast_expression [3286,3296]",
      "dest": "type_cast_expression [3286,3296]"
    },
    {
      "src": "call_argument [2010,2020]",
      "dest": "call_argument [2010,2020]"
    },
    {
      "src": ".: . [37042,37043]",
      "dest": ".: . [37045,37046]"
    },
    {
      "src": "call_argument [37702,37761]",
      "dest": "call_argument [37705,37764]"
    },
    {
      "src": "member_expression [38179,38190]",
      "dest": "member_expression [38182,38193]"
    },
    {
      "src": "payable: payable [15724,15731]",
      "dest": "payable: payable [15724,15731]"
    },
    {
      "src": "public: public [3120,3126]",
      "dest": "public: public [3120,3126]"
    },
    {
      "src": "==: == [5879,5881]",
      "dest": "==: == [5879,5881]"
    },
    {
      "src": "view: view [11934,11938]",
      "dest": "view: view [11934,11938]"
    },
    {
      "src": "constant: constant [32685,32693]",
      "dest": "constant: constant [32688,32696]"
    },
    {
      "src": "]: ] [39018,39019]",
      "dest": "]: ] [39021,39022]"
    },
    {
      "src": "(: ( [5846,5847]",
      "dest": "(: ( [5846,5847]"
    },
    {
      "src": "(: ( [30024,30025]",
      "dest": "(: ( [30024,30025]"
    },
    {
      "src": "uint: uint [30925,30929]",
      "dest": "uint: uint [30931,30935]"
    },
    {
      "src": "internal: internal [23573,23581]",
      "dest": "internal: internal [23573,23581]"
    },
    {
      "src": "identifier: isApprovedForAll [29952,29968]",
      "dest": "identifier: isApprovedForAll [29952,29968]"
    },
    {
      "src": "identifier: sender [36999,37005]",
      "dest": "identifier: sender [37002,37008]"
    },
    {
      "src": "(: ( [21441,21442]",
      "dest": "(: ( [21441,21442]"
    },
    {
      "src": "}: } [32859,32860]",
      "dest": "}: } [32862,32863]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [13123,13286]",
      "dest": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [13123,13286]"
    },
    {
      "src": ">=: >= [18492,18494]",
      "dest": ">=: >= [18492,18494]"
    },
    {
      "src": ",: , [4931,4932]",
      "dest": ",: , [4931,4932]"
    },
    {
      "src": "): ) [38471,38472]",
      "dest": "): ) [38474,38475]"
    },
    {
      "src": "assignment_expression [3404,3421]",
      "dest": "assignment_expression [3404,3421]"
    },
    {
      "src": "identifier: _ [2412,2413]",
      "dest": "identifier: _ [2412,2413]"
    },
    {
      "src": "expression_statement [36491,36716]",
      "dest": "expression_statement [36494,36719]"
    },
    {
      "src": "(: ( [36633,36634]",
      "dest": "(: ( [36636,36637]"
    },
    {
      "src": "call_argument [36807,36828]",
      "dest": "call_argument [36810,36831]"
    },
    {
      "src": "): ) [11250,11251]",
      "dest": "): ) [11250,11251]"
    },
    {
      "src": "): ) [30937,30938]",
      "dest": "): ) [30943,30944]"
    },
    {
      "src": "address: address [15716,15723]",
      "dest": "address: address [15716,15723]"
    },
    {
      "src": "(: ( [6707,6708]",
      "dest": "(: ( [6707,6708]"
    },
    {
      "src": "identifier: account [14370,14377]",
      "dest": "identifier: account [14370,14377]"
    },
    {
      "src": "internal: internal [710,718]",
      "dest": "internal: internal [710,718]"
    },
    {
      "src": "=: = [37808,37809]",
      "dest": "=: = [37811,37812]"
    },
    {
      "src": "internal: internal [10746,10754]",
      "dest": "internal: internal [10746,10754]"
    },
    {
      "src": "identifier: getApproved [37565,37576]",
      "dest": "identifier: getApproved [37568,37579]"
    },
    {
      "src": "state_mutability [11261,11265]",
      "dest": "state_mutability [11261,11265]"
    },
    {
      "src": "variable_declaration [36229,36248]",
      "dest": "variable_declaration [36232,36251]"
    },
    {
      "src": "(: ( [23953,23954]",
      "dest": "(: ( [23953,23954]"
    },
    {
      "src": "returns: returns [10760,10767]",
      "dest": "returns: returns [10760,10767]"
    },
    {
      "src": "function_body [38026,39183]",
      "dest": "function_body [38029,39186]"
    },
    {
      "src": "call_expression [38754,38822]",
      "dest": "call_expression [38757,38825]"
    },
    {
      "src": "identifier: copyrightFee [40760,40772]",
      "dest": "identifier: copyrightFee [40769,40781]"
    },
    {
      "src": "identifier: _fixedPrice [35844,35855]",
      "dest": "identifier: _fixedPrice [35847,35858]"
    },
    {
      "src": "identifier: cancelOrder [36872,36883]",
      "dest": "identifier: cancelOrder [36875,36886]"
    },
    {
      "src": "{: { [22133,22134]",
      "dest": "{: { [22133,22134]"
    },
    {
      "src": "false [5572,5577]",
      "dest": "false [5572,5577]"
    },
    {
      "src": "comment: // address of ERC721 token to sell [34080,34114]",
      "dest": "comment: // address of ERC721 token to sell [34083,34117]"
    },
    {
      "src": "call_argument [2879,2880]",
      "dest": "call_argument [2879,2880]"
    },
    {
      "src": "function_body [10778,10848]",
      "dest": "function_body [10778,10848]"
    },
    {
      "src": "function_body [2176,2208]",
      "dest": "function_body [2176,2208]"
    },
    {
      "src": "parameter [15716,15741]",
      "dest": "parameter [15716,15741]"
    },
    {
      "src": "visibility [8420,8428]",
      "dest": "visibility [8420,8428]"
    },
    {
      "src": "uint256: uint256 [11275,11282]",
      "dest": "uint256: uint256 [11275,11282]"
    },
    {
      "src": "{: { [26223,26224]",
      "dest": "{: { [26223,26224]"
    },
    {
      "src": "type_cast_expression [23926,23939]",
      "dest": "type_cast_expression [23926,23939]"
    },
    {
      "src": ",: , [29982,29983]",
      "dest": ",: , [29982,29983]"
    },
    {
      "src": "(: ( [2166,2167]",
      "dest": "(: ( [2166,2167]"
    },
    {
      "src": "comment: // pointer aliasing, and it cannot be disabled. [32230,32277]",
      "dest": "comment: // pointer aliasing, and it cannot be disabled. [32233,32280]"
    },
    {
      "src": "identifier: _transferOwnership [3209,3227]",
      "dest": "identifier: _transferOwnership [3209,3227]"
    },
    {
      "src": "identifier: orders [41178,41184]",
      "dest": "identifier: orders [41187,41193]"
    },
    {
      "src": "internal: internal [4264,4272]",
      "dest": "internal: internal [4264,4272]"
    },
    {
      "src": "identifier: b [9172,9173]",
      "dest": "identifier: b [9172,9173]"
    },
    {
      "src": "=: = [32707,32708]",
      "dest": "=: = [32710,32711]"
    },
    {
      "src": "address: address [34264,34271]",
      "dest": "address: address [34267,34274]"
    },
    {
      "src": ",: , [22253,22254]",
      "dest": ",: , [22253,22254]"
    },
    {
      "src": "): ) [24111,24112]",
      "dest": "): ) [24111,24112]"
    },
    {
      "src": "identifier: _ENTERED [32742,32750]",
      "dest": "identifier: _ENTERED [32745,32753]"
    },
    {
      "src": "): ) [20087,20088]",
      "dest": "): ) [20087,20088]"
    },
    {
      "src": "return_statement [2187,2201]",
      "dest": "return_statement [2187,2201]"
    },
    {
      "src": "parameter [39543,39556]",
      "dest": "parameter [39546,39559]"
    },
    {
      "src": "address: address [34726,34733]",
      "dest": "address: address [34729,34736]"
    },
    {
      "src": "user_defined_type [33790,33797]",
      "dest": "user_defined_type [33793,33800]"
    },
    {
      "src": "expression_statement [24016,24114]",
      "dest": "expression_statement [24016,24114]"
    },
    {
      "src": "=: = [32838,32839]",
      "dest": "=: = [32841,32842]"
    },
    {
      "src": "member_expression [37026,37054]",
      "dest": "member_expression [37029,37057]"
    },
    {
      "src": "identifier: target [19161,19167]",
      "dest": "identifier: target [19161,19167]"
    },
    {
      "src": ",: , [13073,13074]",
      "dest": ",: , [13073,13074]"
    },
    {
      "src": "\": \" [41253,41254]",
      "dest": "\": \" [41262,41263]"
    },
    {
      "src": "uint: uint [34573,34577]",
      "dest": "uint: uint [34576,34580]"
    },
    {
      "src": "memory: memory [40841,40847]",
      "dest": "memory: memory [40850,40856]"
    },
    {
      "src": "expression_statement [2333,2402]",
      "dest": "expression_statement [2333,2402]"
    },
    {
      "src": ",: , [5270,5271]",
      "dest": ",: , [5270,5271]"
    },
    {
      "src": ".: . [23445,23446]",
      "dest": ".: . [23445,23446]"
    },
    {
      "src": "visibility [30715,30723]",
      "dest": "visibility [30715,30723]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [17461,17822]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [17461,17822]"
    },
    {
      "src": "address: address [34056,34063]",
      "dest": "address: address [34059,34066]"
    },
    {
      "src": "primitive_type [11908,11915]",
      "dest": "primitive_type [11908,11915]"
    },
    {
      "src": "(: ( [34655,34656]",
      "dest": "(: ( [34658,34659]"
    },
    {
      "src": "): ) [5501,5502]",
      "dest": "): ) [5501,5502]"
    },
    {
      "src": "=: = [15959,15960]",
      "dest": "=: = [15959,15960]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {trySub}.      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [8544,9009]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {trySub}.      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [8544,9009]"
    },
    {
      "src": "): ) [22587,22588]",
      "dest": "): ) [22587,22588]"
    },
    {
      "src": "=: = [4323,4324]",
      "dest": "=: = [4323,4324]"
    },
    {
      "src": "primitive_type [7125,7132]",
      "dest": "primitive_type [7125,7132]"
    },
    {
      "src": "identifier: copyrightFee [38489,38501]",
      "dest": "identifier: copyrightFee [38492,38504]"
    },
    {
      "src": "function: function [6650,6658]",
      "dest": "function: function [6650,6658]"
    },
    {
      "src": ">: > [9971,9972]",
      "dest": ">: > [9971,9972]"
    },
    {
      "src": "==: == [7151,7153]",
      "dest": "==: == [7151,7153]"
    },
    {
      "src": "memory: memory [36925,36931]",
      "dest": "memory: memory [36928,36934]"
    },
    {
      "src": "identifier: this [36634,36638]",
      "dest": "identifier: this [36637,36641]"
    },
    {
      "src": "virtual: virtual [3127,3134]",
      "dest": "virtual: virtual [3127,3134]"
    },
    {
      "src": "binary_expression [8523,8528]",
      "dest": "binary_expression [8523,8528]"
    },
    {
      "src": "return: return [17952,17958]",
      "dest": "return: return [17952,17958]"
    },
    {
      "src": "type_name [30677,30684]",
      "dest": "type_name [30677,30684]"
    },
    {
      "src": "(: ( [2362,2363]",
      "dest": "(: ( [2362,2363]"
    },
    {
      "src": "): ) [29342,29343]",
      "dest": "): ) [29342,29343]"
    },
    {
      "src": "call_argument [2871,2881]",
      "dest": "call_argument [2871,2881]"
    },
    {
      "src": "parameter [35608,35624]",
      "dest": "parameter [35611,35627]"
    },
    {
      "src": "call_argument [20573,20579]",
      "dest": "call_argument [20573,20579]"
    },
    {
      "src": "struct_expression [18729,18755]",
      "dest": "struct_expression [18729,18755]"
    },
    {
      "src": "uint: uint [37989,37993]",
      "dest": "uint: uint [37992,37996]"
    },
    {
      "src": "struct: struct [30813,30819]",
      "dest": "struct: struct [30819,30825]"
    },
    {
      "src": "primitive_type [6663,6670]",
      "dest": "primitive_type [6663,6670]"
    },
    {
      "src": "member_expression [23910,23925]",
      "dest": "member_expression [23910,23925]"
    },
    {
      "src": "binary_expression [15787,15818]",
      "dest": "binary_expression [15787,15818]"
    },
    {
      "src": "call_argument [38219,38258]",
      "dest": "call_argument [38222,38261]"
    },
    {
      "src": "type_name [36229,36233]",
      "dest": "type_name [36232,36236]"
    },
    {
      "src": "parenthesized_expression [25199,25205]",
      "dest": "parenthesized_expression [25199,25205]"
    },
    {
      "src": "identifier: tokenAddress [36011,36023]",
      "dest": "identifier: tokenAddress [36014,36026]"
    },
    {
      "src": "address: address [35391,35398]",
      "dest": "address: address [35394,35401]"
    },
    {
      "src": "address: address [23835,23842]",
      "dest": "address: address [23835,23842]"
    },
    {
      "src": "): ) [6221,6222]",
      "dest": "): ) [6221,6222]"
    },
    {
      "src": "(: ( [38885,38886]",
      "dest": "(: ( [38888,38889]"
    },
    {
      "src": "indexed: indexed [1721,1728]",
      "dest": "indexed: indexed [1721,1728]"
    },
    {
      "src": "internal: internal [22933,22941]",
      "dest": "internal: internal [22933,22941]"
    },
    {
      "src": "identifier: newOwner [3384,3392]",
      "dest": "identifier: newOwner [3384,3392]"
    },
    {
      "src": "expression_statement [33523,33525]",
      "dest": "expression_statement [33526,33528]"
    },
    {
      "src": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [16100,16847]",
      "dest": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [16100,16847]"
    },
    {
      "src": "comment: // close the order [38975,38993]",
      "dest": "comment: // close the order [38978,38996]"
    },
    {
      "src": "variable_declaration [40041,40079]",
      "dest": "variable_declaration [40044,40085]"
    },
    {
      "src": "parameter [39774,39788]",
      "dest": "parameter [39777,39791]"
    },
    {
      "src": "address: address [23632,23639]",
      "dest": "address: address [23632,23639]"
    },
    {
      "src": "function_body [22482,22597]",
      "dest": "function_body [22482,22597]"
    },
    {
      "src": "call_argument [25199,25205]",
      "dest": "call_argument [25199,25205]"
    },
    {
      "src": "identifier: owner [27207,27212]",
      "dest": "identifier: owner [27207,27212]"
    },
    {
      "src": "string [16023,16083]",
      "dest": "string [16023,16083]"
    },
    {
      "src": "primitive_type [20483,20489]",
      "dest": "primitive_type [20483,20489]"
    },
    {
      "src": "{: { [23582,23583]",
      "dest": "{: { [23582,23583]"
    },
    {
      "src": ".: . [18735,18736]",
      "dest": ".: . [18735,18736]"
    },
    {
      "src": "identifier: _order [40207,40213]",
      "dest": "identifier: _order [40219,40225]"
    },
    {
      "src": "variable_declaration_statement [7176,7194]",
      "dest": "variable_declaration_statement [7176,7194]"
    },
    {
      "src": "identifier: target [20738,20744]",
      "dest": "identifier: target [20738,20744]"
    },
    {
      "src": "identifier: _orderID [37844,37852]",
      "dest": "identifier: _orderID [37847,37855]"
    },
    {
      "src": "function: function [17258,17266]",
      "dest": "function: function [17258,17266]"
    },
    {
      "src": "identifier: newOwner [3274,3282]",
      "dest": "identifier: newOwner [3274,3282]"
    },
    {
      "src": "member_expression [36759,36770]",
      "dest": "member_expression [36762,36773]"
    },
    {
      "src": "type_name [5481,5488]",
      "dest": "type_name [5481,5488]"
    },
    {
      "src": "identifier: spender [12651,12658]",
      "dest": "identifier: spender [12651,12658]"
    },
    {
      "src": "identifier: nonReentrant [37211,37223]",
      "dest": "identifier: nonReentrant [37214,37226]"
    },
    {
      "src": "parameter [5813,5822]",
      "dest": "parameter [5813,5822]"
    },
    {
      "src": "): ) [2031,2032]",
      "dest": "): ) [2031,2032]"
    },
    {
      "src": "event_paramater [34920,34936]",
      "dest": "event_paramater [34923,34939]"
    },
    {
      "src": "user_defined_type [22229,22235]",
      "dest": "user_defined_type [22229,22235]"
    },
    {
      "src": "binary_expression [5225,5230]",
      "dest": "binary_expression [5225,5230]"
    },
    {
      "src": "uint: uint [38312,38316]",
      "dest": "uint: uint [38315,38319]"
    },
    {
      "src": "function_definition [37127,37956]",
      "dest": "function_definition [37130,37959]"
    },
    {
      "src": "): ) [6715,6716]",
      "dest": "): ) [6715,6716]"
    },
    {
      "src": "(: ( [2319,2320]",
      "dest": "(: ( [2319,2320]"
    },
    {
      "src": "identifier: onlyOwner [2310,2319]",
      "dest": "identifier: onlyOwner [2310,2319]"
    },
    {
      "src": "identifier: a [9876,9877]",
      "dest": "identifier: a [9876,9877]"
    },
    {
      "src": "primitive_type [11550,11557]",
      "dest": "primitive_type [11550,11557]"
    },
    {
      "src": "block_statement [40441,40580]",
      "dest": "block_statement [40450,40589]"
    },
    {
      "src": "uint256: uint256 [7176,7183]",
      "dest": "uint256: uint256 [7176,7183]"
    },
    {
      "src": "identifier: FixedPriceTrade721 [33768,33786]",
      "dest": "identifier: FixedPriceTrade721 [33771,33789]"
    },
    {
      "src": "type_name [17927,17932]",
      "dest": "type_name [17927,17932]"
    },
    {
      "src": "bytes: bytes [20890,20895]",
      "dest": "bytes: bytes [20890,20895]"
    },
    {
      "src": "identifier: msg [37100,37103]",
      "dest": "identifier: msg [37103,37106]"
    },
    {
      "src": "primitive_type [23632,23639]",
      "dest": "primitive_type [23632,23639]"
    },
    {
      "src": "member_expression [38948,38961]",
      "dest": "member_expression [38951,38964]"
    },
    {
      "src": "identifier: to [27979,27981]",
      "dest": "identifier: to [27979,27981]"
    },
    {
      "src": ",: , [4891,4892]",
      "dest": ",: , [4891,4892]"
    },
    {
      "src": "state_mutability [5512,5516]",
      "dest": "state_mutability [5512,5516]"
    },
    {
      "src": "identifier: newOwner [3413,3421]",
      "dest": "identifier: newOwner [3413,3421]"
    },
    {
      "src": "event: event [35041,35046]",
      "dest": "event: event [35044,35049]"
    },
    {
      "src": "uint: uint [34199,34203]",
      "dest": "uint: uint [34202,34206]"
    },
    {
      "src": "identifier: token [22236,22241]",
      "dest": "identifier: token [22236,22241]"
    },
    {
      "src": "call_argument [16023,16083]",
      "dest": "call_argument [16023,16083]"
    },
    {
      "src": "}: } [2919,2920]",
      "dest": "}: } [2919,2920]"
    },
    {
      "src": "{: { [1901,1902]",
      "dest": "{: { [1901,1902]"
    },
    {
      "src": "member_expression [40643,40661]",
      "dest": "member_expression [40652,40670]"
    },
    {
      "src": "expression_statement [2412,2414]",
      "dest": "expression_statement [2412,2414]"
    },
    {
      "src": "identifier: to [28584,28586]",
      "dest": "identifier: to [28584,28586]"
    },
    {
      "src": "identifier: safeTransferFrom [30634,30650]",
      "dest": "identifier: safeTransferFrom [30634,30650]"
    },
    {
      "src": "comment: // ask [35519,35525]",
      "dest": "comment: // ask [35522,35528]"
    },
    {
      "src": "primitive_type [35111,35115]",
      "dest": "primitive_type [35114,35118]"
    },
    {
      "src": "}: } [10847,10848]",
      "dest": "}: } [10847,10848]"
    },
    {
      "src": "member_expression [38936,38946]",
      "dest": "member_expression [38939,38949]"
    },
    {
      "src": "binary_expression [5927,5932]",
      "dest": "binary_expression [5927,5932]"
    },
    {
      "src": "identifier: tokenToPay [38430,38440]",
      "dest": "identifier: tokenToPay [38433,38443]"
    },
    {
      "src": "\": \" [24003,24004]",
      "dest": "\": \" [24003,24004]"
    },
    {
      "src": "): ) [4368,4369]",
      "dest": "): ) [4368,4369]"
    },
    {
      "src": "{: { [33815,33816]",
      "dest": "{: { [33818,33819]"
    },
    {
      "src": "primitive_type [18688,18692]",
      "dest": "primitive_type [18688,18692]"
    },
    {
      "src": "identifier: b [7221,7222]",
      "dest": "identifier: b [7221,7222]"
    },
    {
      "src": "memory: memory [19465,19471]",
      "dest": "memory: memory [19465,19471]"
    },
    {
      "src": "variable_declaration [4313,4322]",
      "dest": "variable_declaration [4313,4322]"
    },
    {
      "src": "): ) [25067,25068]",
      "dest": "): ) [25067,25068]"
    },
    {
      "src": "visibility [20943,20950]",
      "dest": "visibility [20943,20950]"
    },
    {
      "src": "address: address [2902,2909]",
      "dest": "address: address [2902,2909]"
    },
    {
      "src": "call_argument [37090,37098]",
      "dest": "call_argument [37093,37101]"
    },
    {
      "src": "}: } [35510,35511]",
      "dest": "}: } [35513,35514]"
    },
    {
      "src": "function_definition [13018,13115]",
      "dest": "function_definition [13018,13115]"
    },
    {
      "src": "identifier: order [36530,36535]",
      "dest": "identifier: order [36533,36538]"
    },
    {
      "src": "call_expression [38878,38905]",
      "dest": "call_expression [38881,38908]"
    },
    {
      "src": "identifier: orders [37775,37781]",
      "dest": "identifier: orders [37778,37784]"
    },
    {
      "src": "primitive_type [34856,34863]",
      "dest": "primitive_type [34859,34866]"
    },
    {
      "src": "returns: returns [4918,4925]",
      "dest": "returns: returns [4918,4925]"
    },
    {
      "src": "call_argument [22578,22580]",
      "dest": "call_argument [22578,22580]"
    },
    {
      "src": "type_name [7778,7785]",
      "dest": "type_name [7778,7785]"
    },
    {
      "src": "): ) [17907,17908]",
      "dest": "): ) [17907,17908]"
    },
    {
      "src": "return_statement [9161,9174]",
      "dest": "return_statement [9161,9174]"
    },
    {
      "src": ",: , [23556,23557]",
      "dest": ",: , [23556,23557]"
    },
    {
      "src": "(: ( [23726,23727]",
      "dest": "(: ( [23726,23727]"
    },
    {
      "src": "): ) [14406,14407]",
      "dest": "): ) [14406,14407]"
    },
    {
      "src": ",: , [4622,4623]",
      "dest": ",: , [4622,4623]"
    },
    {
      "src": ".: . [39092,39093]",
      "dest": ".: . [39095,39096]"
    },
    {
      "src": ",: , [5925,5926]",
      "dest": ",: , [5925,5926]"
    },
    {
      "src": "returns: returns [31025,31032]",
      "dest": "returns: returns [31028,31035]"
    },
    {
      "src": "tuple_expression [4387,4396]",
      "dest": "tuple_expression [4387,4396]"
    },
    {
      "src": "): ) [31014,31015]",
      "dest": "): ) [31017,31018]"
    },
    {
      "src": "address: address [15787,15794]",
      "dest": "address: address [15787,15794]"
    },
    {
      "src": ",: , [15818,15819]",
      "dest": ",: , [15818,15819]"
    },
    {
      "src": "identifier: target [20573,20579]",
      "dest": "identifier: target [20573,20579]"
    },
    {
      "src": "function: function [12626,12634]",
      "dest": "function: function [12626,12634]"
    },
    {
      "src": "identifier: target [16883,16889]",
      "dest": "identifier: target [16883,16889]"
    },
    {
      "src": "memory: memory [17881,17887]",
      "dest": "memory: memory [17881,17887]"
    },
    {
      "src": "type_name [34711,34715]",
      "dest": "type_name [34714,34718]"
    },
    {
      "src": "identifier: IERC20 [22887,22893]",
      "dest": "identifier: IERC20 [22887,22893]"
    },
    {
      "src": "comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [24129,24506]",
      "dest": "comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [24129,24506]"
    },
    {
      "src": "(: ( [6200,6201]",
      "dest": "(: ( [6200,6201]"
    },
    {
      "src": "primitive_type [18357,18362]",
      "dest": "primitive_type [18357,18362]"
    },
    {
      "src": "is: is [1637,1639]",
      "dest": "is: is [1637,1639]"
    },
    {
      "src": "type_name [12694,12698]",
      "dest": "type_name [12694,12698]"
    },
    {
      "src": "=: = [40739,40740]",
      "dest": "=: = [40748,40749]"
    },
    {
      "src": "address: address [1655,1662]",
      "dest": "address: address [1655,1662]"
    },
    {
      "src": "variable_declaration [18688,18700]",
      "dest": "variable_declaration [18688,18700]"
    },
    {
      "src": "identifier: _payTokenAddress [35590,35606]",
      "dest": "identifier: _payTokenAddress [35593,35609]"
    },
    {
      "src": "expression_statement [40724,40774]",
      "dest": "expression_statement [40733,40783]"
    },
    {
      "src": "identifier: a [4349,4350]",
      "dest": "identifier: a [4349,4350]"
    },
    {
      "src": "(: ( [40693,40694]",
      "dest": "(: ( [40702,40703]"
    },
    {
      "src": "member_expression [36830,36846]",
      "dest": "member_expression [36833,36849]"
    },
    {
      "src": "primitive_type [15787,15794]",
      "dest": "primitive_type [15787,15794]"
    },
    {
      "src": "false [4663,4668]",
      "dest": "false [4663,4668]"
    },
    {
      "src": "*: * [7190,7191]",
      "dest": "*: * [7190,7191]"
    },
    {
      "src": "state_mutability [11105,11109]",
      "dest": "state_mutability [11105,11109]"
    },
    {
      "src": "identifier: isContract [19562,19572]",
      "dest": "identifier: isContract [19562,19572]"
    },
    {
      "src": "primitive_type [4624,4631]",
      "dest": "primitive_type [4624,4631]"
    },
    {
      "src": "identifier: _tokenAddress [34864,34877]",
      "dest": "identifier: _tokenAddress [34867,34880]"
    },
    {
      "src": "function_body [2322,2421]",
      "dest": "function_body [2322,2421]"
    },
    {
      "src": "primitive_type [10707,10714]",
      "dest": "primitive_type [10707,10714]"
    },
    {
      "src": "\": \" [25208,25209]",
      "dest": "\": \" [25208,25209]"
    },
    {
      "src": "returns: returns [19101,19108]",
      "dest": "returns: returns [19101,19108]"
    },
    {
      "src": "call_argument [36556,36560]",
      "dest": "call_argument [36559,36563]"
    },
    {
      "src": "type_name [30841,30848]",
      "dest": "type_name [30847,30854]"
    },
    {
      "src": "identifier: c [6358,6359]",
      "dest": "identifier: c [6358,6359]"
    },
    {
      "src": "type_name [1655,1662]",
      "dest": "type_name [1655,1662]"
    },
    {
      "src": "type_name [4933,4940]",
      "dest": "type_name [4933,4940]"
    },
    {
      "src": "member_expression [35711,35741]",
      "dest": "member_expression [35714,35744]"
    },
    {
      "src": "(: ( [4344,4345]",
      "dest": "(: ( [4344,4345]"
    },
    {
      "src": "variable_declaration_statement [38423,38473]",
      "dest": "variable_declaration_statement [38426,38476]"
    },
    {
      "src": ",: , [4251,4252]",
      "dest": ",: , [4251,4252]"
    },
    {
      "src": "identifier: _erc721AddressWithCopyright [35403,35430]",
      "dest": "identifier: _erc721AddressWithCopyright [35406,35433]"
    },
    {
      "src": "type_name [853,858]",
      "dest": "type_name [853,858]"
    },
    {
      "src": "comment: /**  * @dev Required interface of an ERC721 compliant contract.  */ [26123,26192]",
      "dest": "comment: /**  * @dev Required interface of an ERC721 compliant contract.  */ [26123,26192]"
    },
    {
      "src": "call_expression [37290,37329]",
      "dest": "call_expression [37293,37332]"
    },
    {
      "src": "function_body [20543,20841]",
      "dest": "function_body [20543,20841]"
    },
    {
      "src": "type_name [6201,6208]",
      "dest": "type_name [6201,6208]"
    },
    {
      "src": "identifier: order [38450,38455]",
      "dest": "identifier: order [38453,38458]"
    },
    {
      "src": "pure: pure [40865,40869]",
      "dest": "pure: pure [40874,40878]"
    },
    {
      "src": "parameter [37189,37200]",
      "dest": "parameter [37192,37203]"
    },
    {
      "src": "identifier: data [18370,18374]",
      "dest": "identifier: data [18370,18374]"
    },
    {
      "src": "contract: contract [33759,33767]",
      "dest": "contract: contract [33762,33770]"
    },
    {
      "src": "identifier: msg [35755,35758]",
      "dest": "identifier: msg [35758,35761]"
    },
    {
      "src": "string_literal [15992,15994]",
      "dest": "string_literal [15992,15994]"
    },
    {
      "src": ",: , [16985,16986]",
      "dest": ",: , [16985,16986]"
    },
    {
      "src": "(: ( [34472,34473]",
      "dest": "(: ( [34475,34476]"
    },
    {
      "src": "): ) [35472,35473]",
      "dest": "): ) [35475,35476]"
    },
    {
      "src": "call_argument [33380,33413]",
      "dest": "call_argument [33383,33416]"
    },
    {
      "src": "primitive_type [35078,35085]",
      "dest": "primitive_type [35081,35088]"
    },
    {
      "src": "visibility [22933,22941]",
      "dest": "visibility [22933,22941]"
    },
    {
      "src": "string [6310,6339]",
      "dest": "string [6310,6339]"
    },
    {
      "src": "): ) [23865,23866]",
      "dest": "): ) [23865,23866]"
    },
    {
      "src": "type_name [3102,3109]",
      "dest": "type_name [3102,3109]"
    },
    {
      "src": "returns: returns [17352,17359]",
      "dest": "returns: returns [17352,17359]"
    },
    {
      "src": "identifier: errorMessage [9137,9149]",
      "dest": "identifier: errorMessage [9137,9149]"
    },
    {
      "src": "event_paramater [26341,26361]",
      "dest": "event_paramater [26341,26361]"
    },
    {
      "src": "return_statement [20774,20834]",
      "dest": "return_statement [20774,20834]"
    },
    {
      "src": "return_type_definition [19520,19542]",
      "dest": "return_type_definition [19520,19542]"
    },
    {
      "src": "parameter [4624,4631]",
      "dest": "parameter [4624,4631]"
    },
    {
      "src": "}: } [21573,21574]",
      "dest": "}: } [21573,21574]"
    },
    {
      "src": "\": \" [40948,40949]",
      "dest": "\": \" [40957,40958]"
    },
    {
      "src": "!=: != [33367,33369]",
      "dest": "!=: != [33370,33372]"
    },
    {
      "src": "address: address [28576,28583]",
      "dest": "address: address [28576,28583]"
    },
    {
      "src": "\": \" [40922,40923]",
      "dest": "\": \" [40931,40932]"
    },
    {
      "src": "parameter [6246,6253]",
      "dest": "parameter [6246,6253]"
    },
    {
      "src": "parameter [30025,30029]",
      "dest": "parameter [30025,30029]"
    },
    {
      "src": "call_argument [17981,17987]",
      "dest": "call_argument [17981,17987]"
    },
    {
      "src": "identifier: currentOrderID [36743,36757]",
      "dest": "identifier: currentOrderID [36746,36760]"
    },
    {
      "src": "(: ( [7850,7851]",
      "dest": "(: ( [7850,7851]"
    },
    {
      "src": "): ) [24004,24005]",
      "dest": "): ) [24004,24005]"
    },
    {
      "src": "interface_declaration [30783,31043]",
      "dest": "interface_declaration [30786,31046]"
    },
    {
      "src": "(: ( [35970,35971]",
      "dest": "(: ( [35973,35974]"
    },
    {
      "src": "==: == [5558,5560]",
      "dest": "==: == [5558,5560]"
    },
    {
      "src": "function_definition [10683,10848]",
      "dest": "function_definition [10683,10848]"
    },
    {
      "src": "!=: != [39869,39871]",
      "dest": "!=: != [39872,39874]"
    },
    {
      "src": "interface_declaration [25615,26072]",
      "dest": "interface_declaration [25615,26072]"
    },
    {
      "src": "identifier: functionDelegateCall [20033,20053]",
      "dest": "identifier: functionDelegateCall [20033,20053]"
    },
    {
      "src": "<: < [4347,4348]",
      "dest": "<: < [4347,4348]"
    },
    {
      "src": "function: function [5786,5794]",
      "dest": "function: function [5786,5794]"
    },
    {
      "src": "/: / [7214,7215]",
      "dest": "/: / [7214,7215]"
    },
    {
      "src": "call_expression [39610,39633]",
      "dest": "call_expression [39613,39636]"
    },
    {
      "src": "internal: internal [39716,39724]",
      "dest": "internal: internal [39719,39727]"
    },
    {
      "src": ",: , [5490,5491]",
      "dest": ",: , [5490,5491]"
    },
    {
      "src": "(: ( [6662,6663]",
      "dest": "(: ( [6662,6663]"
    },
    {
      "src": "(: ( [19561,19562]",
      "dest": "(: ( [19561,19562]"
    },
    {
      "src": "member_expression [39120,39133]",
      "dest": "member_expression [39123,39136]"
    },
    {
      "src": "expression_statement [3156,3185]",
      "dest": "expression_statement [3156,3185]"
    },
    {
      "src": "parameter [18437,18449]",
      "dest": "parameter [18437,18449]"
    },
    {
      "src": "=: = [40599,40600]",
      "dest": "=: = [40608,40609]"
    },
    {
      "src": "type_name [13592,13599]",
      "dest": "type_name [13592,13599]"
    },
    {
      "src": "function: function [20849,20857]",
      "dest": "function: function [20849,20857]"
    },
    {
      "src": "identifier: tryMod [5795,5801]",
      "dest": "identifier: tryMod [5795,5801]"
    },
    {
      "src": "assembly_statement [21341,21498]",
      "dest": "assembly_statement [21341,21498]"
    },
    {
      "src": ",: , [13347,13348]",
      "dest": ",: , [13347,13348]"
    },
    {
      "src": ",: , [18816,18817]",
      "dest": ",: , [18816,18817]"
    },
    {
      "src": "\": \" [36655,36656]",
      "dest": "\": \" [36658,36659]"
    },
    {
      "src": "identifier: spender [13583,13590]",
      "dest": "identifier: spender [13583,13590]"
    },
    {
      "src": "(: ( [5525,5526]",
      "dest": "(: ( [5525,5526]"
    },
    {
      "src": "function_body [3145,3192]",
      "dest": "function_body [3145,3192]"
    },
    {
      "src": "call_argument [37941,37947]",
      "dest": "call_argument [37944,37950]"
    },
    {
      "src": "function_body [22942,23488]",
      "dest": "function_body [22942,23488]"
    },
    {
      "src": "type_name [18357,18362]",
      "dest": "type_name [18357,18362]"
    },
    {
      "src": "tuple_expression [4690,4703]",
      "dest": "tuple_expression [4690,4703]"
    },
    {
      "src": "yul_decimal_number: 32 [21446,21448]",
      "dest": "yul_decimal_number: 32 [21446,21448]"
    },
    {
      "src": "(: ( [6245,6246]",
      "dest": "(: ( [6245,6246]"
    },
    {
      "src": "): ) [5860,5861]",
      "dest": "): ) [5860,5861]"
    },
    {
      "src": "primitive_type [34711,34715]",
      "dest": "primitive_type [34714,34718]"
    },
    {
      "src": "visibility [17343,17351]",
      "dest": "visibility [17343,17351]"
    },
    {
      "src": "(: ( [21445,21446]",
      "dest": "(: ( [21445,21446]"
    },
    {
      "src": "type_name [5813,5820]",
      "dest": "type_name [5813,5820]"
    },
    {
      "src": ".: . [38928,38929]",
      "dest": ".: . [38931,38932]"
    },
    {
      "src": "{: { [40441,40442]",
      "dest": "{: { [40450,40451]"
    },
    {
      "src": "parameter [5492,5501]",
      "dest": "parameter [5492,5501]"
    },
    {
      "src": "identifier: transferAmount [38807,38821]",
      "dest": "identifier: transferAmount [38810,38824]"
    },
    {
      "src": "identifier: _currentAddress [35018,35033]",
      "dest": "identifier: _currentAddress [35021,35036]"
    },
    {
      "src": "identifier: order [38050,38055]",
      "dest": "identifier: order [38053,38058]"
    },
    {
      "src": "call_expression [18462,18543]",
      "dest": "call_expression [18462,18543]"
    },
    {
      "src": "emit: emit [39050,39054]",
      "dest": "emit: emit [39053,39057]"
    },
    {
      "src": "external: external [26040,26048]",
      "dest": "external: external [26040,26048]"
    },
    {
      "src": "expression_statement [35444,35474]",
      "dest": "expression_statement [35447,35477]"
    },
    {
      "src": "(: ( [39848,39849]",
      "dest": "(: ( [39851,39852]"
    },
    {
      "src": "uint: uint [36229,36233]",
      "dest": "uint: uint [36232,36236]"
    },
    {
      "src": "(: ( [15943,15944]",
      "dest": "(: ( [15943,15944]"
    },
    {
      "src": "(: ( [25175,25176]",
      "dest": "(: ( [25175,25176]"
    },
    {
      "src": "): ) [39788,39789]",
      "dest": "): ) [39791,39792]"
    },
    {
      "src": "call_argument [19754,19758]",
      "dest": "call_argument [19754,19758]"
    },
    {
      "src": "call_argument [17415,17421]",
      "dest": "call_argument [17415,17421]"
    },
    {
      "src": "(: ( [25045,25046]",
      "dest": "(: ( [25045,25046]"
    },
    {
      "src": "identifier: value [15976,15981]",
      "dest": "identifier: value [15976,15981]"
    },
    {
      "src": "): ) [24572,24573]",
      "dest": "): ) [24572,24573]"
    },
    {
      "src": "comment: // solhint-disable-next-line max-line-length [25110,25154]",
      "dest": "comment: // solhint-disable-next-line max-line-length [25110,25154]"
    },
    {
      "src": "type_alias [33828,33836]",
      "dest": "type_alias [33831,33839]"
    },
    {
      "src": "): ) [26038,26039]",
      "dest": "): ) [26038,26039]"
    },
    {
      "src": "identifier: tokenID [36536,36543]",
      "dest": "identifier: tokenID [36539,36546]"
    },
    {
      "src": "boolean_literal [5893,5898]",
      "dest": "boolean_literal [5893,5898]"
    },
    {
      "src": "uint256: uint256 [22255,22262]",
      "dest": "uint256: uint256 [22255,22262]"
    },
    {
      "src": "primitive_type [5492,5499]",
      "dest": "primitive_type [5492,5499]"
    },
    {
      "src": "identifier: value [17995,18000]",
      "dest": "identifier: value [17995,18000]"
    },
    {
      "src": "primitive_type [37673,37680]",
      "dest": "primitive_type [37676,37683]"
    },
    {
      "src": "parameter [27983,27998]",
      "dest": "parameter [27983,27998]"
    },
    {
      "src": "return_type_definition [14393,14407]",
      "dest": "return_type_definition [14393,14407]"
    },
    {
      "src": "call_argument [36655,36714]",
      "dest": "call_argument [36658,36717]"
    },
    {
      "src": "parameter [30665,30675]",
      "dest": "parameter [30665,30675]"
    },
    {
      "src": "(: ( [19694,19695]",
      "dest": "(: ( [19694,19695]"
    },
    {
      "src": "): ) [37590,37591]",
      "dest": "): ) [37593,37594]"
    },
    {
      "src": "expression_statement [2893,2913]",
      "dest": "expression_statement [2893,2913]"
    },
    {
      "src": "): ) [15799,15800]",
      "dest": "): ) [15799,15800]"
    },
    {
      "src": "identifier: _order [40848,40854]",
      "dest": "identifier: _order [40857,40863]"
    },
    {
      "src": "type_name [34742,34749]",
      "dest": "type_name [34745,34752]"
    },
    {
      "src": "call_expression [23616,23655]",
      "dest": "call_expression [23616,23655]"
    },
    {
      "src": "string [38219,38258]",
      "dest": "string [38222,38261]"
    },
    {
      "src": "identifier: sender [38672,38678]",
      "dest": "identifier: sender [38675,38681]"
    },
    {
      "src": "identifier: b [9969,9970]",
      "dest": "identifier: b [9969,9970]"
    },
    {
      "src": ",: , [39479,39480]",
      "dest": ",: , [39482,39483]"
    },
    {
      "src": "{: { [17941,17942]",
      "dest": "{: { [17941,17942]"
    },
    {
      "src": "identifier: author [40010,40016]",
      "dest": "identifier: author [40013,40019]"
    },
    {
      "src": "primitive_type [33887,33891]",
      "dest": "primitive_type [33890,33894]"
    },
    {
      "src": "function_body [22279,22384]",
      "dest": "function_body [22279,22384]"
    },
    {
      "src": ",: , [35008,35009]",
      "dest": ",: , [35011,35012]"
    },
    {
      "src": "parameter [29367,29383]",
      "dest": "parameter [29367,29383]"
    },
    {
      "src": "function_definition [12626,12700]",
      "dest": "function_definition [12626,12700]"
    },
    {
      "src": "visibility [15759,15767]",
      "dest": "visibility [15759,15767]"
    },
    {
      "src": "primitive_type [4253,4260]",
      "dest": "primitive_type [4253,4260]"
    },
    {
      "src": "(: ( [4387,4388]",
      "dest": "(: ( [4387,4388]"
    },
    {
      "src": "block_statement [21003,21047]",
      "dest": "block_statement [21003,21047]"
    },
    {
      "src": "visibility [29138,29146]",
      "dest": "visibility [29138,29146]"
    },
    {
      "src": "==: == [35752,35754]",
      "dest": "==: == [35755,35757]"
    },
    {
      "src": "binary_expression [5556,5562]",
      "dest": "binary_expression [5556,5562]"
    },
    {
      "src": "identifier: a [6307,6308]",
      "dest": "identifier: a [6307,6308]"
    },
    {
      "src": "identifier: a [4652,4653]",
      "dest": "identifier: a [4652,4653]"
    },
    {
      "src": "pure: pure [7111,7115]",
      "dest": "pure: pure [7111,7115]"
    },
    {
      "src": "view: view [14388,14392]",
      "dest": "view: view [14388,14392]"
    },
    {
      "src": "comment: // transfer ERC721 token to taker [38835,38868]",
      "dest": "comment: // transfer ERC721 token to taker [38838,38871]"
    },
    {
      "src": "): ) [40221,40222]",
      "dest": "): ) [40233,40234]"
    },
    {
      "src": "memory: memory [39701,39707]",
      "dest": "memory: memory [39704,39710]"
    },
    {
      "src": ".: . [1031,1032]",
      "dest": ".: . [1031,1032]"
    },
    {
      "src": "variable_declaration [6266,6275]",
      "dest": "variable_declaration [6266,6275]"
    },
    {
      "src": "contract_body [31903,33704]",
      "dest": "contract_body [31906,33707]"
    },
    {
      "src": "{: { [15768,15769]",
      "dest": "{: { [15768,15769]"
    },
    {
      "src": "): ) [23246,23247]",
      "dest": "): ) [23246,23247]"
    },
    {
      "src": "=: = [40257,40258]",
      "dest": "=: = [40269,40270]"
    },
    {
      "src": "(: ( [18687,18688]",
      "dest": "(: ( [18687,18688]"
    },
    {
      "src": "if: if [40319,40321]",
      "dest": "if: if [40328,40330]"
    },
    {
      "src": "(: ( [2009,2010]",
      "dest": "(: ( [2009,2010]"
    },
    {
      "src": ".: . [40213,40214]",
      "dest": ".: . [40225,40226]"
    },
    {
      "src": ",: , [36770,36771]",
      "dest": ",: , [36773,36774]"
    },
    {
      "src": "variable_declaration_statement [35944,36190]",
      "dest": "variable_declaration_statement [35947,36193]"
    },
    {
      "src": "identifier: order [36932,36937]",
      "dest": "identifier: order [36935,36940]"
    },
    {
      "src": "identifier: SafeERC20 [22123,22132]",
      "dest": "identifier: SafeERC20 [22123,22132]"
    },
    {
      "src": "(: ( [2135,2136]",
      "dest": "(: ( [2135,2136]"
    },
    {
      "src": "if_statement [21135,21574]",
      "dest": "if_statement [21135,21574]"
    },
    {
      "src": "inheritance_specifier [33790,33797]",
      "dest": "inheritance_specifier [33793,33800]"
    },
    {
      "src": "identifier: _orderID [41107,41115]",
      "dest": "identifier: _orderID [41116,41124]"
    },
    {
      "src": "): ) [7132,7133]",
      "dest": "): ) [7132,7133]"
    },
    {
      "src": "type_name [5526,5530]",
      "dest": "type_name [5526,5530]"
    },
    {
      "src": "return_type_definition [19101,19123]",
      "dest": "return_type_definition [19101,19123]"
    },
    {
      "src": "call_argument [3376,3382]",
      "dest": "call_argument [3376,3382]"
    },
    {
      "src": "identifier: success [20702,20709]",
      "dest": "identifier: success [20702,20709]"
    },
    {
      "src": "): ) [5580,5581]",
      "dest": "): ) [5580,5581]"
    },
    {
      "src": "type_name [5847,5851]",
      "dest": "type_name [5847,5851]"
    },
    {
      "src": "member_expression [40259,40306]",
      "dest": "member_expression [40271,40315]"
    },
    {
      "src": "identifier: order [38923,38928]",
      "dest": "identifier: order [38926,38931]"
    },
    {
      "src": "primitive_type [7176,7183]",
      "dest": "primitive_type [7176,7183]"
    },
    {
      "src": "}: } [3428,3429]",
      "dest": "}: } [3428,3429]"
    },
    {
      "src": "(: ( [26973,26974]",
      "dest": "(: ( [26973,26974]"
    },
    {
      "src": "memory: memory [19485,19491]",
      "dest": "memory: memory [19485,19491]"
    },
    {
      "src": "identifier: returndata [19722,19732]",
      "dest": "identifier: returndata [19722,19732]"
    },
    {
      "src": "type_name [34671,34678]",
      "dest": "type_name [34674,34681]"
    },
    {
      "src": "call_expression [38092,38160]",
      "dest": "call_expression [38095,38163]"
    },
    {
      "src": "primitive_type [3286,3293]",
      "dest": "primitive_type [3286,3293]"
    },
    {
      "src": "member_expression [37775,37807]",
      "dest": "member_expression [37778,37810]"
    },
    {
      "src": ",: , [34532,34533]",
      "dest": ",: , [34535,34536]"
    },
    {
      "src": "): ) [5883,5884]",
      "dest": "): ) [5883,5884]"
    },
    {
      "src": "type_name [7823,7830]",
      "dest": "type_name [7823,7830]"
    },
    {
      "src": "string_literal [25208,25252]",
      "dest": "string_literal [25208,25252]"
    },
    {
      "src": "member_expression [39075,39085]",
      "dest": "member_expression [39078,39088]"
    },
    {
      "src": "memory: memory [19074,19080]",
      "dest": "memory: memory [19074,19080]"
    },
    {
      "src": "identifier: data [24568,24572]",
      "dest": "identifier: data [24568,24572]"
    },
    {
      "src": "type_name [20464,20469]",
      "dest": "type_name [20464,20469]"
    },
    {
      "src": "address: address [3102,3109]",
      "dest": "address: address [3102,3109]"
    },
    {
      "src": ",: , [7222,7223]",
      "dest": ",: , [7222,7223]"
    },
    {
      "src": "identifier: tokenToPay [38754,38764]",
      "dest": "identifier: tokenToPay [38757,38767]"
    },
    {
      "src": "function: function [37127,37135]",
      "dest": "function: function [37130,37138]"
    },
    {
      "src": "): ) [40772,40773]",
      "dest": "): ) [40781,40782]"
    },
    {
      "src": "(: ( [24065,24066]",
      "dest": "(: ( [24065,24066]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [15865,15933]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [15865,15933]"
    },
    {
      "src": "primitive_type [1713,1720]",
      "dest": "primitive_type [1713,1720]"
    },
    {
      "src": ">: > [4650,4651]",
      "dest": ">: > [4650,4651]"
    },
    {
      "src": "identifier: spender [23751,23758]",
      "dest": "identifier: spender [23751,23758]"
    },
    {
      "src": "comment: // This method relies on extcodesize, which returns 0 for contracts in [14419,14489]",
      "dest": "comment: // This method relies on extcodesize, which returns 0 for contracts in [14419,14489]"
    },
    {
      "src": "bytes: bytes [19459,19464]",
      "dest": "bytes: bytes [19459,19464]"
    },
    {
      "src": "function_body [16942,17028]",
      "dest": "function_body [16942,17028]"
    },
    {
      "src": "identifier: tokenId [29129,29136]",
      "dest": "identifier: tokenId [29129,29136]"
    },
    {
      "src": "identifier: orderIDCounter [33900,33914]",
      "dest": "identifier: orderIDCounter [33903,33917]"
    },
    {
      "src": "internal: internal [4595,4603]",
      "dest": "internal: internal [4595,4603]"
    },
    {
      "src": "=: = [32751,32752]",
      "dest": "=: = [32754,32755]"
    },
    {
      "src": "call_expression [35444,35473]",
      "dest": "call_expression [35447,35476]"
    },
    {
      "src": "}: } [40028,40029]",
      "dest": "}: } [40031,40032]"
    },
    {
      "src": "function: function [3200,3208]",
      "dest": "function: function [3200,3208]"
    },
    {
      "src": "primitive_type [23268,23275]",
      "dest": "primitive_type [23268,23275]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.      */ [26416,26512]",
      "dest": "comment: /**      * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.      */ [26416,26512]"
    },
    {
      "src": "return: return [4380,4386]",
      "dest": "return: return [4380,4386]"
    },
    {
      "src": "): ) [35033,35034]",
      "dest": "): ) [35036,35037]"
    },
    {
      "src": "primitive_type [12694,12698]",
      "dest": "primitive_type [12694,12698]"
    },
    {
      "src": "type_name [14610,14617]",
      "dest": "type_name [14610,14617]"
    },
    {
      "src": "call_argument [22582,22587]",
      "dest": "call_argument [22582,22587]"
    },
    {
      "src": "revert: revert [21435,21441]",
      "dest": "revert: revert [21435,21441]"
    },
    {
      "src": "call_argument [6302,6308]",
      "dest": "call_argument [6302,6308]"
    },
    {
      "src": "identifier: selector [23454,23462]",
      "dest": "identifier: selector [23454,23462]"
    },
    {
      "src": "visibility [20089,20097]",
      "dest": "visibility [20089,20097]"
    },
    {
      "src": "uint256: uint256 [6201,6208]",
      "dest": "uint256: uint256 [6201,6208]"
    },
    {
      "src": "): ) [39174,39175]",
      "dest": "): ) [39177,39178]"
    },
    {
      "src": "call_argument [24036,24041]",
      "dest": "call_argument [24036,24041]"
    },
    {
      "src": "{: { [4078,4079]",
      "dest": "{: { [4078,4079]"
    },
    {
      "src": "return_type_definition [17352,17374]",
      "dest": "return_type_definition [17352,17374]"
    },
    {
      "src": "binary_expression [33359,33378]",
      "dest": "binary_expression [33362,33381]"
    },
    {
      "src": "event_definition [13529,13607]",
      "dest": "event_definition [13529,13607]"
    },
    {
      "src": "identifier: tryAdd [4235,4241]",
      "dest": "identifier: tryAdd [4235,4241]"
    },
    {
      "src": "true: true [5194,5198]",
      "dest": "true: true [5194,5198]"
    },
    {
      "src": ",: , [38117,38118]",
      "dest": ",: , [38120,38121]"
    },
    {
      "src": "type_name [20107,20112]",
      "dest": "type_name [20107,20112]"
    },
    {
      "src": "identifier: token [23910,23915]",
      "dest": "identifier: token [23910,23915]"
    },
    {
      "src": "comment: // tokenID of ERC721 token to sell [34155,34189]",
      "dest": "comment: // tokenID of ERC721 token to sell [34158,34192]"
    },
    {
      "src": "assembly: assembly [14690,14698]",
      "dest": "assembly: assembly [14690,14698]"
    },
    {
      "src": "comment: // Booleans are more expensive than uint256 or any type that takes up a full [31910,31986]",
      "dest": "comment: // Booleans are more expensive than uint256 or any type that takes up a full [31913,31989]"
    },
    {
      "src": "identifier: isContract [14351,14361]",
      "dest": "identifier: isContract [14351,14361]"
    },
    {
      "src": "identifier: data [17423,17427]",
      "dest": "identifier: data [17423,17427]"
    },
    {
      "src": ",: , [5898,5899]",
      "dest": ",: , [5898,5899]"
    },
    {
      "src": ".: . [22354,22355]",
      "dest": ".: . [22354,22355]"
    },
    {
      "src": "identifier: tokenAddressCached [36578,36596]",
      "dest": "identifier: tokenAddressCached [36581,36599]"
    },
    {
      "src": "call_argument [17432,17444]",
      "dest": "call_argument [17432,17444]"
    },
    {
      "src": "number_literal: 0 [4367,4368]",
      "dest": "number_literal: 0 [4367,4368]"
    },
    {
      "src": "=: = [7186,7187]",
      "dest": "=: = [7186,7187]"
    },
    {
      "src": "assignment_expression [35484,35503]",
      "dest": "assignment_expression [35487,35506]"
    },
    {
      "src": "identifier: safeIncreaseAllowance [23505,23526]",
      "dest": "identifier: safeIncreaseAllowance [23505,23526]"
    },
    {
      "src": "if_statement [4644,4673]",
      "dest": "if_statement [4644,4673]"
    },
    {
      "src": "comment: // order ID -> order [34439,34459]",
      "dest": "comment: // order ID -> order [34442,34462]"
    },
    {
      "src": "comment: // increase the likelihood of the full refund coming into effect. [32598,32663]",
      "dest": "comment: // increase the likelihood of the full refund coming into effect. [32601,32666]"
    },
    {
      "src": "call_expression [40643,40689]",
      "dest": "call_expression [40652,40698]"
    },
    {
      "src": "assignment_expression [40592,40617]",
      "dest": "assignment_expression [40601,40626]"
    },
    {
      "src": "member_expression [36461,36479]",
      "dest": "member_expression [36464,36482]"
    },
    {
      "src": "identifier: abi [23417,23420]",
      "dest": "identifier: abi [23417,23420]"
    },
    {
      "src": "=: = [39815,39816]",
      "dest": "=: = [39818,39819]"
    },
    {
      "src": "identifier: Order [34481,34486]",
      "dest": "identifier: Order [34484,34489]"
    },
    {
      "src": "function_body [39284,39517]",
      "dest": "function_body [39287,39520]"
    },
    {
      "src": "function: function [23790,23798]",
      "dest": "function: function [23790,23798]"
    },
    {
      "src": "identifier: _callOptionalReturn [24016,24035]",
      "dest": "identifier: _callOptionalReturn [24016,24035]"
    },
    {
      "src": "string [6744,6776]",
      "dest": "string [6744,6776]"
    },
    {
      "src": "function_body [40870,41071]",
      "dest": "function_body [40879,41080]"
    },
    {
      "src": "(: ( [30650,30651]",
      "dest": "(: ( [30650,30651]"
    },
    {
      "src": "if: if [5241,5243]",
      "dest": "if: if [5241,5243]"
    },
    {
      "src": "memory: memory [9897,9903]",
      "dest": "memory: memory [9897,9903]"
    },
    {
      "src": "identifier: copyrightFee [39996,40008]",
      "dest": "identifier: copyrightFee [39999,40011]"
    },
    {
      "src": "parameter [4293,4300]",
      "dest": "parameter [4293,4300]"
    },
    {
      "src": "member_expression [38794,38805]",
      "dest": "member_expression [38797,38808]"
    },
    {
      "src": "identifier: _owner [2893,2899]",
      "dest": "identifier: _owner [2893,2899]"
    },
    {
      "src": "(: ( [11892,11893]",
      "dest": "(: ( [11892,11893]"
    },
    {
      "src": "call_argument [17429,17430]",
      "dest": "call_argument [17429,17430]"
    },
    {
      "src": ",: , [7787,7788]",
      "dest": ",: , [7787,7788]"
    },
    {
      "src": "address: address [26761,26768]",
      "dest": "address: address [26761,26768]"
    },
    {
      "src": "(: ( [6301,6302]",
      "dest": "(: ( [6301,6302]"
    },
    {
      "src": "=: = [36451,36452]",
      "dest": "=: = [36454,36455]"
    },
    {
      "src": "function: function [40789,40797]",
      "dest": "function: function [40798,40806]"
    },
    {
      "src": "call_argument [18818,18830]",
      "dest": "call_argument [18818,18830]"
    },
    {
      "src": "primitive_type [4927,4931]",
      "dest": "primitive_type [4927,4931]"
    },
    {
      "src": "\": \" [41061,41062]",
      "dest": "\": \" [41070,41071]"
    },
    {
      "src": "user_defined_type [22418,22424]",
      "dest": "user_defined_type [22418,22424]"
    },
    {
      "src": "=: = [40080,40081]",
      "dest": "=: = [40086,40087]"
    },
    {
      "src": "function_definition [2772,2920]",
      "dest": "function_definition [2772,2920]"
    },
    {
      "src": "event_paramater [13349,13362]",
      "dest": "event_paramater [13349,13362]"
    },
    {
      "src": ",: , [39073,39074]",
      "dest": ",: , [39076,39077]"
    },
    {
      "src": "string [20174,20215]",
      "dest": "string [20174,20215]"
    },
    {
      "src": "number_literal: 0 [7164,7165]",
      "dest": "number_literal: 0 [7164,7165]"
    },
    {
      "src": "identifier: onlyOwner [39274,39283]",
      "dest": "identifier: onlyOwner [39277,39286]"
    },
    {
      "src": "(: ( [39733,39734]",
      "dest": "(: ( [39736,39737]"
    },
    {
      "src": "event_paramater [34550,34571]",
      "dest": "event_paramater [34553,34574]"
    },
    {
      "src": "): ) [35430,35431]",
      "dest": "): ) [35433,35434]"
    },
    {
      "src": "state_mutability [9927,9931]",
      "dest": "state_mutability [9927,9931]"
    },
    {
      "src": "bool: bool [18688,18692]",
      "dest": "bool: bool [18688,18692]"
    },
    {
      "src": "identifier: currentOrderID [36234,36248]",
      "dest": "identifier: currentOrderID [36237,36251]"
    },
    {
      "src": "string_literal [35874,35903]",
      "dest": "string_literal [35877,35906]"
    },
    {
      "src": "primitive_type [29984,29991]",
      "dest": "primitive_type [29984,29991]"
    },
    {
      "src": "member_expression [19736,19753]",
      "dest": "member_expression [19736,19753]"
    },
    {
      "src": "event: event [34944,34949]",
      "dest": "event: event [34947,34952]"
    },
    {
      "src": "return: return [8516,8522]",
      "dest": "return: return [8516,8522]"
    },
    {
      "src": "member_expression [24066,24079]",
      "dest": "member_expression [24066,24079]"
    },
    {
      "src": "(: ( [23251,23252]",
      "dest": "(: ( [23251,23252]"
    },
    {
      "src": ",: , [38934,38935]",
      "dest": ",: , [38937,38938]"
    },
    {
      "src": "call_argument [39481,39508]",
      "dest": "call_argument [39484,39511]"
    },
    {
      "src": "identifier: newAllowance [23760,23772]",
      "dest": "identifier: newAllowance [23760,23772]"
    },
    {
      "src": "type_name [20915,20921]",
      "dest": "type_name [20915,20921]"
    },
    {
      "src": "identifier: msg [37311,37314]",
      "dest": "identifier: msg [37314,37317]"
    },
    {
      "src": "identifier: data [24990,24994]",
      "dest": "identifier: data [24990,24994]"
    },
    {
      "src": "return_type_definition [4278,4301]",
      "dest": "return_type_definition [4278,4301]"
    },
    {
      "src": "variable_declaration [7176,7185]",
      "dest": "variable_declaration [7176,7185]"
    },
    {
      "src": ">: > [7853,7854]",
      "dest": ">: > [7853,7854]"
    },
    {
      "src": "(: ( [20696,20697]",
      "dest": "(: ( [20696,20697]"
    },
    {
      "src": "{: { [38026,38027]",
      "dest": "{: { [38029,38030]"
    },
    {
      "src": "string [19582,19620]",
      "dest": "string [19582,19620]"
    },
    {
      "src": "primitive_type [32669,32676]",
      "dest": "primitive_type [32672,32679]"
    },
    {
      "src": "(: ( [35710,35711]",
      "dest": "(: ( [35713,35714]"
    },
    {
      "src": "type_name [35944,35949]",
      "dest": "type_name [35947,35952]"
    },
    {
      "src": ",: , [24097,24098]",
      "dest": ",: , [24097,24098]"
    },
    {
      "src": "identifier: to [22454,22456]",
      "dest": "identifier: to [22454,22456]"
    },
    {
      "src": "type_name [34550,34557]",
      "dest": "type_name [34553,34560]"
    },
    {
      "src": "memory: memory [19535,19541]",
      "dest": "memory: memory [19535,19541]"
    },
    {
      "src": "identifier: Copyright [30820,30829]",
      "dest": "identifier: Copyright [30826,30835]"
    },
    {
      "src": "return_statement [6351,6360]",
      "dest": "return_statement [6351,6360]"
    },
    {
      "src": "indexed: indexed [26792,26799]",
      "dest": "indexed: indexed [26792,26799]"
    },
    {
      "src": "identifier: order [41213,41218]",
      "dest": "identifier: order [41222,41227]"
    },
    {
      "src": "(: ( [852,853]",
      "dest": "(: ( [852,853]"
    },
    {
      "src": "return_type_definition [12685,12699]",
      "dest": "return_type_definition [12685,12699]"
    },
    {
      "src": "identifier: this [23640,23644]",
      "dest": "identifier: this [23640,23644]"
    },
    {
      "src": "variable_declaration [1912,1929]",
      "dest": "variable_declaration [1912,1929]"
    },
    {
      "src": "identifier: value [18741,18746]",
      "dest": "identifier: value [18741,18746]"
    },
    {
      "src": "assignment_expression [32830,32852]",
      "dest": "assignment_expression [32833,32855]"
    },
    {
      "src": "identifier: b [4901,4902]",
      "dest": "identifier: b [4901,4902]"
    },
    {
      "src": ",: , [22899,22900]",
      "dest": ",: , [22899,22900]"
    },
    {
      "src": "string [36655,36714]",
      "dest": "string [36658,36717]"
    },
    {
      "src": "call_argument [18502,18542]",
      "dest": "call_argument [18502,18542]"
    },
    {
      "src": "function: function [18310,18318]",
      "dest": "function: function [18310,18318]"
    },
    {
      "src": "return: return [5592,5598]",
      "dest": "return: return [5592,5598]"
    },
    {
      "src": "type_name [29984,29991]",
      "dest": "type_name [29984,29991]"
    },
    {
      "src": "return_statement [16953,17021]",
      "dest": "return_statement [16953,17021]"
    },
    {
      "src": "identifier: this [37681,37685]",
      "dest": "identifier: this [37684,37688]"
    },
    {
      "src": "return_statement [4352,4370]",
      "dest": "return_statement [4352,4370]"
    },
    {
      "src": "if: if [39845,39847]",
      "dest": "if: if [39848,39850]"
    },
    {
      "src": "comment: // File: contracts/Dependencies/SafeMath.sol [3436,3480]",
      "dest": "comment: // File: contracts/Dependencies/SafeMath.sol [3436,3480]"
    },
    {
      "src": "(: ( [20993,20994]",
      "dest": "(: ( [20993,20994]"
    },
    {
      "src": ",: , [25197,25198]",
      "dest": ",: , [25197,25198]"
    },
    {
      "src": "call_argument [20820,20832]",
      "dest": "call_argument [20820,20832]"
    },
    {
      "src": "!=: != [38191,38193]",
      "dest": "!=: != [38194,38196]"
    },
    {
      "src": "\": \" [38219,38220]",
      "dest": "\": \" [38222,38223]"
    },
    {
      "src": "(: ( [40306,40307]",
      "dest": "(: ( [40315,40316]"
    },
    {
      "src": "identifier: this [36556,36560]",
      "dest": "identifier: this [36559,36563]"
    },
    {
      "src": "uint256: uint256 [10707,10714]",
      "dest": "uint256: uint256 [10707,10714]"
    },
    {
      "src": "identifier: _price [37867,37873]",
      "dest": "identifier: _price [37870,37876]"
    },
    {
      "src": "): ) [19214,19215]",
      "dest": "): ) [19214,19215]"
    },
    {
      "src": "call_argument [40207,40221]",
      "dest": "call_argument [40219,40233]"
    },
    {
      "src": "return_type_definition [10760,10777]",
      "dest": "return_type_definition [10760,10777]"
    },
    {
      "src": "): ) [23280,23281]",
      "dest": "): ) [23280,23281]"
    },
    {
      "src": "type_name [18391,18397]",
      "dest": "type_name [18391,18397]"
    },
    {
      "src": "function_definition [3200,3429]",
      "dest": "function_definition [3200,3429]"
    },
    {
      "src": "identifier: erc721WithCopyrightCached [40054,40079]",
      "dest": "identifier: erc721WithCopyrightCached [40060,40085]"
    },
    {
      "src": "call_expression [38058,38081]",
      "dest": "call_expression [38061,38084]"
    },
    {
      "src": "call_argument [23760,23772]",
      "dest": "call_argument [23760,23772]"
    },
    {
      "src": "(: ( [27198,27199]",
      "dest": "(: ( [27198,27199]"
    },
    {
      "src": "identifier: _maker [34848,34854]",
      "dest": "identifier: _maker [34851,34857]"
    },
    {
      "src": "address: address [40819,40826]",
      "dest": "address: address [40828,40835]"
    },
    {
      "src": "identifier: updatePrice [37136,37147]",
      "dest": "identifier: updatePrice [37139,37150]"
    },
    {
      "src": "call_struct_argument [36079,36113]",
      "dest": "call_struct_argument [36082,36116]"
    },
    {
      "src": "address: address [24962,24969]",
      "dest": "address: address [24962,24969]"
    },
    {
      "src": "call_expression [36499,36544]",
      "dest": "call_expression [36502,36547]"
    },
    {
      "src": ".: . [36797,36798]",
      "dest": ".: . [36800,36801]"
    },
    {
      "src": "assignment_expression [37837,37873]",
      "dest": "assignment_expression [37840,37876]"
    },
    {
      "src": "): ) [5822,5823]",
      "dest": "): ) [5822,5823]"
    },
    {
      "src": "identifier: msg [38194,38197]",
      "dest": "identifier: msg [38197,38200]"
    },
    {
      "src": "parameter [29327,29342]",
      "dest": "parameter [29327,29342]"
    },
    {
      "src": "call_argument [19562,19580]",
      "dest": "call_argument [19562,19580]"
    },
    {
      "src": "identifier: OwnershipTransferred [1692,1712]",
      "dest": "identifier: OwnershipTransferred [1692,1712]"
    },
    {
      "src": "identifier: selector [23741,23749]",
      "dest": "identifier: selector [23741,23749]"
    },
    {
      "src": "comment: // Return data is optional [25070,25096]",
      "dest": "comment: // Return data is optional [25070,25096]"
    },
    {
      "src": "uint256: uint256 [8409,8416]",
      "dest": "uint256: uint256 [8409,8416]"
    },
    {
      "src": "(: ( [11093,11094]",
      "dest": "(: ( [11093,11094]"
    },
    {
      "src": ".: . [23621,23622]",
      "dest": ".: . [23621,23622]"
    },
    {
      "src": "visibility [37202,37210]",
      "dest": "visibility [37205,37213]"
    },
    {
      "src": ".: . [23420,23421]",
      "dest": ".: . [23420,23421]"
    },
    {
      "src": "call_expression [40643,40713]",
      "dest": "call_expression [40652,40722]"
    },
    {
      "src": "member_expression [23910,23953]",
      "dest": "member_expression [23910,23953]"
    },
    {
      "src": "variable_declaration [38423,38440]",
      "dest": "variable_declaration [38426,38443]"
    },
    {
      "src": "identifier: _orderID [36954,36962]",
      "dest": "identifier: _orderID [36957,36965]"
    },
    {
      "src": "visibility [9078,9086]",
      "dest": "visibility [9078,9086]"
    },
    {
      "src": "binary_expression [40323,40366]",
      "dest": "binary_expression [40332,40375]"
    },
    {
      "src": "function_definition [8385,8536]",
      "dest": "function_definition [8385,8536]"
    },
    {
      "src": "call_argument [7224,7259]",
      "dest": "call_argument [7224,7259]"
    },
    {
      "src": "): ) [16083,16084]",
      "dest": "): ) [16083,16084]"
    },
    {
      "src": "expression_statement [36276,36307]",
      "dest": "expression_statement [36279,36310]"
    },
    {
      "src": "call_argument [40351,40352]",
      "dest": "call_argument [40360,40361]"
    },
    {
      "src": "primitive_type [30665,30672]",
      "dest": "primitive_type [30665,30672]"
    },
    {
      "src": "call_argument [23934,23938]",
      "dest": "call_argument [23934,23938]"
    },
    {
      "src": "string_literal [38132,38159]",
      "dest": "string_literal [38135,38162]"
    },
    {
      "src": "call_expression [38369,38412]",
      "dest": "call_expression [38372,38415]"
    },
    {
      "src": "type_name [33921,33925]",
      "dest": "type_name [33924,33928]"
    },
    {
      "src": "call_argument [23647,23654]",
      "dest": "call_argument [23647,23654]"
    },
    {
      "src": "identifier: sender [37665,37671]",
      "dest": "identifier: sender [37668,37674]"
    },
    {
      "src": "identifier: maker [38929,38934]",
      "dest": "identifier: maker [38932,38937]"
    },
    {
      "src": "identifier: _orderID [39065,39073]",
      "dest": "identifier: _orderID [39068,39076]"
    },
    {
      "src": ".: . [37853,37854]",
      "dest": ".: . [37856,37857]"
    },
    {
      "src": "call_argument [39158,39174]",
      "dest": "call_argument [39161,39177]"
    },
    {
      "src": "identifier: setErc721AddressWithCopyright [39200,39229]",
      "dest": "identifier: setErc721AddressWithCopyright [39203,39232]"
    },
    {
      "src": "call_argument [18562,18580]",
      "dest": "call_argument [18562,18580]"
    },
    {
      "src": "call_argument [39100,39118]",
      "dest": "call_argument [39103,39121]"
    },
    {
      "src": "call_argument [22369,22374]",
      "dest": "call_argument [22369,22374]"
    },
    {
      "src": "identifier: amount [15812,15818]",
      "dest": "identifier: amount [15812,15818]"
    },
    {
      "src": "identifier: target [19451,19457]",
      "dest": "identifier: target [19451,19457]"
    },
    {
      "src": "(: ( [23696,23697]",
      "dest": "(: ( [23696,23697]"
    },
    {
      "src": "): ) [41237,41238]",
      "dest": "): ) [41246,41247]"
    },
    {
      "src": "identifier: newAllowance [23895,23907]",
      "dest": "identifier: newAllowance [23895,23907]"
    },
    {
      "src": "identifier: from [28570,28574]",
      "dest": "identifier: from [28570,28574]"
    },
    {
      "src": "event_definition [26740,26825]",
      "dest": "event_definition [26740,26825]"
    },
    {
      "src": "variable_declaration_statement [40126,40223]",
      "dest": "variable_declaration_statement [40135,40235]"
    },
    {
      "src": "): ) [20734,20735]",
      "dest": "): ) [20734,20735]"
    },
    {
      "src": "identifier: amount [13083,13089]",
      "dest": "identifier: amount [13083,13089]"
    },
    {
      "src": "}: } [10850,10851]",
      "dest": "}: } [10850,10851]"
    },
    {
      "src": "true: true [36173,36177]",
      "dest": "true: true [36176,36180]"
    },
    {
      "src": "parameter [27199,27212]",
      "dest": "parameter [27199,27212]"
    },
    {
      "src": "bytes4: bytes4 [26020,26026]",
      "dest": "bytes4: bytes4 [26020,26026]"
    },
    {
      "src": "identifier: target [17415,17421]",
      "dest": "identifier: target [17415,17421]"
    },
    {
      "src": "expression_statement [18462,18544]",
      "dest": "expression_statement [18462,18544]"
    },
    {
      "src": "type_name [24541,24547]",
      "dest": "type_name [24541,24547]"
    },
    {
      "src": "member_expression [1028,1036]",
      "dest": "member_expression [1028,1036]"
    },
    {
      "src": "(: ( [24969,24970]",
      "dest": "(: ( [24969,24970]"
    },
    {
      "src": ":=: := [14705,14707]",
      "dest": ":=: := [14705,14707]"
    },
    {
      "src": "function_body [9110,9181]",
      "dest": "function_body [9110,9181]"
    },
    {
      "src": "call_argument [22520,22588]",
      "dest": "call_argument [22520,22588]"
    },
    {
      "src": "pure: pure [5512,5516]",
      "dest": "pure: pure [5512,5516]"
    },
    {
      "src": "): ) [11126,11127]",
      "dest": "): ) [11126,11127]"
    },
    {
      "src": "primitive_type [13349,13356]",
      "dest": "primitive_type [13349,13356]"
    },
    {
      "src": "}: } [39516,39517]",
      "dest": "}: } [39519,39520]"
    },
    {
      "src": "type_name [34824,34831]",
      "dest": "type_name [34827,34834]"
    },
    {
      "src": ",: , [17313,17314]",
      "dest": ",: , [17313,17314]"
    },
    {
      "src": "identifier: msg [38668,38671]",
      "dest": "identifier: msg [38671,38674]"
    },
    {
      "src": "primitive_type [14402,14406]",
      "dest": "primitive_type [14402,14406]"
    },
    {
      "src": "identifier: _taker [34832,34838]",
      "dest": "identifier: _taker [34835,34841]"
    },
    {
      "src": "call_expression [36578,36640]",
      "dest": "call_expression [36581,36643]"
    },
    {
      "src": "identifier: experimental [115,127]",
      "dest": "identifier: experimental [115,127]"
    },
    {
      "src": "parameter [20070,20087]",
      "dest": "parameter [20070,20087]"
    },
    {
      "src": "visibility [4264,4272]",
      "dest": "visibility [4264,4272]"
    },
    {
      "src": "call_argument [18573,18579]",
      "dest": "call_argument [18573,18579]"
    },
    {
      "src": "modifier_invocation [39274,39283]",
      "dest": "modifier_invocation [39277,39286]"
    },
    {
      "src": "identifier: _verifyCallResult [18779,18796]",
      "dest": "identifier: _verifyCallResult [18779,18796]"
    },
    {
      "src": "): ) [7259,7260]",
      "dest": "): ) [7259,7260]"
    },
    {
      "src": "): ) [40114,40115]",
      "dest": "): ) [40123,40124]"
    },
    {
      "src": "call_argument [18756,18760]",
      "dest": "call_argument [18756,18760]"
    },
    {
      "src": "identifier: value [13357,13362]",
      "dest": "identifier: value [13357,13362]"
    },
    {
      "src": "(: ( [17279,17280]",
      "dest": "(: ( [17279,17280]"
    },
    {
      "src": "(: ( [27158,27159]",
      "dest": "(: ( [27158,27159]"
    },
    {
      "src": "library_declaration [13732,21595]",
      "dest": "library_declaration [13732,21595]"
    },
    {
      "src": "expression_statement [38092,38161]",
      "dest": "expression_statement [38095,38164]"
    },
    {
      "src": "uint: uint [34656,34660]",
      "dest": "uint: uint [34659,34663]"
    },
    {
      "src": "(: ( [14361,14362]",
      "dest": "(: ( [14361,14362]"
    },
    {
      "src": "primitive_type [17875,17880]",
      "dest": "primitive_type [17875,17880]"
    },
    {
      "src": "identifier: Order [35965,35970]",
      "dest": "identifier: Order [35968,35973]"
    },
    {
      "src": "): ) [37110,37111]",
      "dest": "): ) [37113,37114]"
    },
    {
      "src": "identifier: Erc721AddressWithCopyrightChanged [35357,35390]",
      "dest": "identifier: Erc721AddressWithCopyrightChanged [35360,35393]"
    },
    {
      "src": "internal: internal [19506,19514]",
      "dest": "internal: internal [19506,19514]"
    },
    {
      "src": "call_argument [38794,38805]",
      "dest": "call_argument [38797,38808]"
    },
    {
      "src": "contract: contract [664,672]",
      "dest": "contract: contract [664,672]"
    },
    {
      "src": "parameter [20483,20509]",
      "dest": "parameter [20483,20509]"
    },
    {
      "src": "return: return [14739,14745]",
      "dest": "return: return [14739,14745]"
    },
    {
      "src": "address: address [18470,18477]",
      "dest": "address: address [18470,18477]"
    },
    {
      "src": "primitive_type [22446,22453]",
      "dest": "primitive_type [22446,22453]"
    },
    {
      "src": "(: ( [35390,35391]",
      "dest": "(: ( [35393,35394]"
    },
    {
      "src": "event_paramater [1713,1742]",
      "dest": "event_paramater [1713,1742]"
    },
    {
      "src": "identifier: fixedPrice [37854,37864]",
      "dest": "identifier: fixedPrice [37857,37867]"
    },
    {
      "src": "(: ( [22886,22887]",
      "dest": "(: ( [22886,22887]"
    },
    {
      "src": "uint: uint [35608,35612]",
      "dest": "uint: uint [35611,35615]"
    },
    {
      "src": "emit: emit [37884,37888]",
      "dest": "emit: emit [37887,37891]"
    },
    {
      "src": "call_argument [23751,23758]",
      "dest": "call_argument [23751,23758]"
    },
    {
      "src": "primitive_type [30025,30029]",
      "dest": "primitive_type [30025,30029]"
    },
    {
      "src": "string_literal [35250,35271]",
      "dest": "string_literal [35253,35274]"
    },
    {
      "src": "): ) [7830,7831]",
      "dest": "): ) [7830,7831]"
    },
    {
      "src": "type_name [15944,15948]",
      "dest": "type_name [15944,15948]"
    },
    {
      "src": "visibility [32771,32778]",
      "dest": "visibility [32774,32781]"
    },
    {
      "src": "false: false [5265,5270]",
      "dest": "false: false [5265,5270]"
    },
    {
      "src": "identifier: this [23276,23280]",
      "dest": "identifier: this [23276,23280]"
    },
    {
      "src": "type_name [9890,9896]",
      "dest": "type_name [9890,9896]"
    },
    {
      "src": "=: = [36249,36250]",
      "dest": "=: = [36252,36253]"
    },
    {
      "src": "(: ( [40350,40351]",
      "dest": "(: ( [40359,40360]"
    },
    {
      "src": "number_literal: 0 [7855,7856]",
      "dest": "number_literal: 0 [7855,7856]"
    },
    {
      "src": "{: { [22279,22280]",
      "dest": "{: { [22279,22280]"
    },
    {
      "src": ".: . [18483,18484]",
      "dest": ".: . [18483,18484]"
    },
    {
      "src": "(: ( [5876,5877]",
      "dest": "(: ( [5876,5877]"
    },
    {
      "src": "variable_declaration_statement [36229,36266]",
      "dest": "variable_declaration_statement [36232,36269]"
    },
    {
      "src": "primitive_type [13307,13314]",
      "dest": "primitive_type [13307,13314]"
    },
    {
      "src": "comment: // Look for revert reason and bubble it up if present [21068,21121]",
      "dest": "comment: // Look for revert reason and bubble it up if present [21068,21121]"
    },
    {
      "src": "(: ( [22309,22310]",
      "dest": "(: ( [22309,22310]"
    },
    {
      "src": "function: function [22392,22400]",
      "dest": "function: function [22392,22400]"
    },
    {
      "src": "variable_declaration [18702,18725]",
      "dest": "variable_declaration [18702,18725]"
    },
    {
      "src": "): ) [23938,23939]",
      "dest": "): ) [23938,23939]"
    },
    {
      "src": "function: function [29092,29100]",
      "dest": "function: function [29092,29100]"
    },
    {
      "src": "string_literal [18002,18045]",
      "dest": "string_literal [18002,18045]"
    },
    {
      "src": "primitive_type [4313,4320]",
      "dest": "primitive_type [4313,4320]"
    },
    {
      "src": ",: , [8407,8408]",
      "dest": ",: , [8407,8408]"
    },
    {
      "src": "variable_declaration_statement [15943,15996]",
      "dest": "variable_declaration_statement [15943,15996]"
    },
    {
      "src": "comment: // 2. build order [35917,35934]",
      "dest": "comment: // 2. build order [35920,35937]"
    },
    {
      "src": "identifier: b [4329,4330]",
      "dest": "identifier: b [4329,4330]"
    },
    {
      "src": "(: ( [23409,23410]",
      "dest": "(: ( [23409,23410]"
    },
    {
      "src": "binary_expression [7212,7222]",
      "dest": "binary_expression [7212,7222]"
    },
    {
      "src": ",: , [1742,1743]",
      "dest": ",: , [1742,1743]"
    },
    {
      "src": "indexed: indexed [26590,26597]",
      "dest": "indexed: indexed [26590,26597]"
    },
    {
      "src": "address: address [13544,13551]",
      "dest": "address: address [13544,13551]"
    },
    {
      "src": "parameter [11235,11250]",
      "dest": "parameter [11235,11250]"
    },
    {
      "src": "call_argument [3384,3392]",
      "dest": "call_argument [3384,3392]"
    },
    {
      "src": "external: external [29778,29786]",
      "dest": "external: external [29778,29786]"
    },
    {
      "src": "function: function [2121,2129]",
      "dest": "function: function [2121,2129]"
    },
    {
      "src": "}: } [38712,38713]",
      "dest": "}: } [38715,38716]"
    },
    {
      "src": "}: } [41296,41297]",
      "dest": "}: } [41305,41306]"
    },
    {
      "src": "yul_identifier [14700,14704]",
      "dest": "yul_identifier [14700,14704]"
    },
    {
      "src": "returns: returns [12685,12692]",
      "dest": "returns: returns [12685,12692]"
    },
    {
      "src": "}: } [22383,22384]",
      "dest": "}: } [22383,22384]"
    },
    {
      "src": "type_name [23593,23600]",
      "dest": "type_name [23593,23600]"
    },
    {
      "src": "primitive_type [38351,38358]",
      "dest": "primitive_type [38354,38361]"
    },
    {
      "src": "*: * [5227,5228]",
      "dest": "*: * [5227,5228]"
    },
    {
      "src": "visibility [28605,28613]",
      "dest": "visibility [28605,28613]"
    },
    {
      "src": "identifier: data [20477,20481]",
      "dest": "identifier: data [20477,20481]"
    },
    {
      "src": "return_type_definition [8434,8451]",
      "dest": "return_type_definition [8434,8451]"
    },
    {
      "src": "identifier: _orderID [39010,39018]",
      "dest": "identifier: _orderID [39013,39021]"
    },
    {
      "src": "yul_function_call [21396,21413]",
      "dest": "yul_function_call [21396,21413]"
    },
    {
      "src": ">: > [8473,8474]",
      "dest": ">: > [8473,8474]"
    },
    {
      "src": "binary_expression [6278,6283]",
      "dest": "binary_expression [6278,6283]"
    },
    {
      "src": ",: , [36757,36758]",
      "dest": ",: , [36760,36761]"
    },
    {
      "src": "(: ( [31033,31034]",
      "dest": "(: ( [31036,31037]"
    },
    {
      "src": "type_name [4253,4260]",
      "dest": "type_name [4253,4260]"
    },
    {
      "src": "call_argument [25187,25197]",
      "dest": "call_argument [25187,25197]"
    },
    {
      "src": "parameter [5481,5490]",
      "dest": "parameter [5481,5490]"
    },
    {
      "src": "primitive_type [34656,34660]",
      "dest": "primitive_type [34659,34663]"
    },
    {
      "src": "identifier: author [38680,38686]",
      "dest": "identifier: author [38683,38689]"
    },
    {
      "src": "type_name [11275,11282]",
      "dest": "type_name [11275,11282]"
    },
    {
      "src": "call_argument [40889,40907]",
      "dest": "call_argument [40898,40916]"
    },
    {
      "src": "yul_path [14720,14727]",
      "dest": "yul_path [14720,14727]"
    },
    {
      "src": "string_literal [37702,37761]",
      "dest": "string_literal [37705,37764]"
    },
    {
      "src": "}: } [40780,40781]",
      "dest": "}: } [40789,40790]"
    },
    {
      "src": "address: address [34534,34541]",
      "dest": "address: address [34537,34544]"
    },
    {
      "src": "identifier: b [7851,7852]",
      "dest": "identifier: b [7851,7852]"
    },
    {
      "src": "string_literal [23312,23368]",
      "dest": "string_literal [23312,23368]"
    },
    {
      "src": "identifier: a [4325,4326]",
      "dest": "identifier: a [4325,4326]"
    },
    {
      "src": "return_type_definition [20098,20120]",
      "dest": "return_type_definition [20098,20120]"
    },
    {
      "src": "identifier: _payTokenAddress [37171,37187]",
      "dest": "identifier: _payTokenAddress [37174,37190]"
    },
    {
      "src": "): ) [11564,11565]",
      "dest": "): ) [11564,11565]"
    },
    {
      "src": "type_cast_expression [37595,37608]",
      "dest": "type_cast_expression [37598,37611]"
    },
    {
      "src": "identifier: a [5927,5928]",
      "dest": "identifier: a [5927,5928]"
    },
    {
      "src": "return_statement [17952,18047]",
      "dest": "return_statement [17952,18047]"
    },
    {
      "src": "identifier: require [9961,9968]",
      "dest": "identifier: require [9961,9968]"
    },
    {
      "src": "primitive_type [17280,17287]",
      "dest": "primitive_type [17280,17287]"
    },
    {
      "src": "identifier: newAllowance [24099,24111]",
      "dest": "identifier: newAllowance [24099,24111]"
    },
    {
      "src": "primitive_type [35063,35067]",
      "dest": "primitive_type [35066,35070]"
    },
    {
      "src": "parameter [5526,5530]",
      "dest": "parameter [5526,5530]"
    },
    {
      "src": "call_argument [15787,15818]",
      "dest": "call_argument [15787,15818]"
    },
    {
      "src": "member_expression [15787,15808]",
      "dest": "member_expression [15787,15808]"
    },
    {
      "src": ",: , [20913,20914]",
      "dest": ",: , [20913,20914]"
    },
    {
      "src": "return_type_definition [26054,26068]",
      "dest": "return_type_definition [26054,26068]"
    },
    {
      "src": "event_paramater [13592,13605]",
      "dest": "event_paramater [13592,13605]"
    },
    {
      "src": "primitive_type [23593,23600]",
      "dest": "primitive_type [23593,23600]"
    },
    {
      "src": "address: address [29969,29976]",
      "dest": "address: address [29969,29976]"
    },
    {
      "src": "function_definition [11513,11590]",
      "dest": "function_definition [11513,11590]"
    },
    {
      "src": "returns: returns [11939,11946]",
      "dest": "returns: returns [11939,11946]"
    },
    {
      "src": "function_body [4942,5309]",
      "dest": "function_body [4942,5309]"
    },
    {
      "src": "identifier: value [23660,23665]",
      "dest": "identifier: value [23660,23665]"
    },
    {
      "src": "return: return [6788,6794]",
      "dest": "return: return [6788,6794]"
    },
    {
      "src": "): ) [26989,26990]",
      "dest": "): ) [26989,26990]"
    },
    {
      "src": "identifier: Transfer [26332,26340]",
      "dest": "identifier: Transfer [26332,26340]"
    },
    {
      "src": "identifier: transfer [11522,11530]",
      "dest": "identifier: transfer [11522,11530]"
    },
    {
      "src": "address: address [18341,18348]",
      "dest": "address: address [18341,18348]"
    },
    {
      "src": ".: . [35733,35734]",
      "dest": ".: . [35736,35737]"
    },
    {
      "src": "): ) [29776,29777]",
      "dest": "): ) [29776,29777]"
    },
    {
      "src": "primitive_type [39774,39781]",
      "dest": "primitive_type [39777,39784]"
    },
    {
      "src": "uint256: uint256 [7125,7132]",
      "dest": "uint256: uint256 [7125,7132]"
    },
    {
      "src": ",: , [35401,35402]",
      "dest": ",: , [35404,35405]"
    },
    {
      "src": "binary_expression [40323,40439]",
      "dest": "binary_expression [40332,40448]"
    },
    {
      "src": "\": \" [19175,19176]",
      "dest": "\": \" [19175,19176]"
    },
    {
      "src": "internal: internal [1892,1900]",
      "dest": "internal: internal [1892,1900]"
    },
    {
      "src": "identifier: _orderID [37901,37909]",
      "dest": "identifier: _orderID [37904,37912]"
    },
    {
      "src": "identifier: functionCallWithValue [18319,18340]",
      "dest": "identifier: functionCallWithValue [18319,18340]"
    },
    {
      "src": "parameter [9101,9108]",
      "dest": "parameter [9101,9108]"
    },
    {
      "src": "parameter [7080,7089]",
      "dest": "parameter [7080,7089]"
    },
    {
      "src": "type_name [9879,9886]",
      "dest": "type_name [9879,9886]"
    },
    {
      "src": "primitive_type [26784,26791]",
      "dest": "primitive_type [26784,26791]"
    },
    {
      "src": "): ) [21001,21002]",
      "dest": "): ) [21001,21002]"
    },
    {
      "src": "identifier: call [15971,15975]",
      "dest": "identifier: call [15971,15975]"
    },
    {
      "src": "returns: returns [14393,14400]",
      "dest": "returns: returns [14393,14400]"
    },
    {
      "src": ",: , [18500,18501]",
      "dest": ",: , [18500,18501]"
    },
    {
      "src": "call_expression [3156,3184]",
      "dest": "call_expression [3156,3184]"
    },
    {
      "src": "identifier: functionCallWithValue [17837,17858]",
      "dest": "identifier: functionCallWithValue [17837,17858]"
    },
    {
      "src": "call_argument [36743,36757]",
      "dest": "call_argument [36746,36760]"
    },
    {
      "src": ".: . [24079,24080]",
      "dest": ".: . [24079,24080]"
    },
    {
      "src": "call_argument [35391,35401]",
      "dest": "call_argument [35394,35404]"
    },
    {
      "src": ".: . [40366,40367]",
      "dest": ".: . [40375,40376]"
    },
    {
      "src": "returns: returns [29358,29365]",
      "dest": "returns: returns [29358,29365]"
    },
    {
      "src": ",: , [34586,34587]",
      "dest": ",: , [34589,34590]"
    },
    {
      "src": "{: { [36908,36909]",
      "dest": "{: { [36911,36912]"
    },
    {
      "src": "identifier: b [5556,5557]",
      "dest": "identifier: b [5556,5557]"
    },
    {
      "src": "type_name [1713,1720]",
      "dest": "type_name [1713,1720]"
    },
    {
      "src": "uint256: uint256 [14610,14617]",
      "dest": "uint256: uint256 [14610,14617]"
    },
    {
      "src": ",: , [9877,9878]",
      "dest": ",: , [9877,9878]"
    },
    {
      "src": ",: , [41238,41239]",
      "dest": ",: , [41247,41248]"
    },
    {
      "src": "type_name [26063,26067]",
      "dest": "type_name [26063,26067]"
    },
    {
      "src": "(: ( [9128,9129]",
      "dest": "(: ( [9128,9129]"
    },
    {
      "src": "identifier: IERC721 [36424,36431]",
      "dest": "identifier: IERC721 [36427,36434]"
    },
    {
      "src": ",: , [3382,3383]",
      "dest": ",: , [3382,3383]"
    },
    {
      "src": "string [23961,24004]",
      "dest": "string [23961,24004]"
    },
    {
      "src": "identifier: success [18693,18700]",
      "dest": "identifier: success [18693,18700]"
    },
    {
      "src": "string: string [9890,9896]",
      "dest": "string: string [9890,9896]"
    },
    {
      "src": "identifier: _msgSender [1932,1942]",
      "dest": "identifier: _msgSender [1932,1942]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls [18627,18677]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls [18627,18677]"
    },
    {
      "src": "return_type_definition [6237,6254]",
      "dest": "return_type_definition [6237,6254]"
    },
    {
      "src": "call_argument [36626,36639]",
      "dest": "call_argument [36629,36642]"
    },
    {
      "src": "variable_declaration_statement [20696,20764]",
      "dest": "variable_declaration_statement [20696,20764]"
    },
    {
      "src": "bytes: bytes [17927,17932]",
      "dest": "bytes: bytes [17927,17932]"
    },
    {
      "src": "return_statement [5885,5903]",
      "dest": "return_statement [5885,5903]"
    },
    {
      "src": "comment: // or when resetting it to zero. To increase and decrease it, use [23034,23099]",
      "dest": "comment: // or when resetting it to zero. To increase and decrease it, use [23034,23099]"
    },
    {
      "src": ",: , [22570,22571]",
      "dest": ",: , [22570,22571]"
    },
    {
      "src": "(: ( [14719,14720]",
      "dest": "(: ( [14719,14720]"
    },
    {
      "src": "parameter [7823,7830]",
      "dest": "parameter [7823,7830]"
    },
    {
      "src": "call_expression [35711,35733]",
      "dest": "call_expression [35714,35736]"
    },
    {
      "src": "block_statement [38508,38713]",
      "dest": "block_statement [38511,38716]"
    },
    {
      "src": "using_directive [22140,22167]",
      "dest": "using_directive [22140,22167]"
    },
    {
      "src": "return: return [2187,2193]",
      "dest": "return: return [2187,2193]"
    },
    {
      "src": "identifier: a [5225,5226]",
      "dest": "identifier: a [5225,5226]"
    },
    {
      "src": "): ) [13089,13090]",
      "dest": "): ) [13089,13090]"
    },
    {
      "src": "number_literal: 0 [25066,25067]",
      "dest": "number_literal: 0 [25066,25067]"
    },
    {
      "src": "identifier: token [23410,23415]",
      "dest": "identifier: token [23410,23415]"
    },
    {
      "src": "identifier: _payTokenAddress [37810,37826]",
      "dest": "identifier: _payTokenAddress [37813,37829]"
    },
    {
      "src": "(: ( [39229,39230]",
      "dest": "(: ( [39232,39233]"
    },
    {
      "src": "call_argument [23697,23702]",
      "dest": "call_argument [23697,23702]"
    },
    {
      "src": "parameter [4927,4931]",
      "dest": "parameter [4927,4931]"
    },
    {
      "src": "type_name [27957,27964]",
      "dest": "type_name [27957,27964]"
    },
    {
      "src": "interface: interface [10975,10984]",
      "dest": "interface: interface [10975,10984]"
    },
    {
      "src": "binary_expression [37546,37608]",
      "dest": "binary_expression [37549,37611]"
    },
    {
      "src": "identifier: sender [39079,39085]",
      "dest": "identifier: sender [39082,39088]"
    },
    {
      "src": "internal: internal [40856,40864]",
      "dest": "internal: internal [40865,40873]"
    },
    {
      "src": "identifier: spender [24090,24097]",
      "dest": "identifier: spender [24090,24097]"
    },
    {
      "src": "function_definition [19415,19837]",
      "dest": "function_definition [19415,19837]"
    },
    {
      "src": "(: ( [20528,20529]",
      "dest": "(: ( [20528,20529]"
    },
    {
      "src": "type_cast_expression [2010,2020]",
      "dest": "type_cast_expression [2010,2020]"
    },
    {
      "src": "primitive_type [29367,29374]",
      "dest": "primitive_type [29367,29374]"
    },
    {
      "src": "identifier: a [9134,9135]",
      "dest": "identifier: a [9134,9135]"
    },
    {
      "src": "comment: // The values being non-zero value makes deployment a bit more expensive, [32285,32358]",
      "dest": "comment: // The values being non-zero value makes deployment a bit more expensive, [32288,32361]"
    },
    {
      "src": "call_argument [38072,38080]",
      "dest": "call_argument [38075,38083]"
    },
    {
      "src": "binary_expression [7149,7155]",
      "dest": "binary_expression [7149,7155]"
    },
    {
      "src": ",: , [18389,18390]",
      "dest": ",: , [18389,18390]"
    },
    {
      "src": "||: || [40354,40356]",
      "dest": "||: || [40363,40365]"
    },
    {
      "src": ".: . [36998,36999]",
      "dest": ".: . [37001,37002]"
    },
    {
      "src": "parameter [17315,17341]",
      "dest": "parameter [17315,17341]"
    },
    {
      "src": "returns: returns [8434,8441]",
      "dest": "returns: returns [8434,8441]"
    },
    {
      "src": "parameter [30651,30663]",
      "dest": "parameter [30651,30663]"
    },
    {
      "src": "call_argument [39464,39479]",
      "dest": "call_argument [39467,39482]"
    },
    {
      "src": "expression_statement [36974,37014]",
      "dest": "expression_statement [36977,37017]"
    },
    {
      "src": "internal: internal [4904,4912]",
      "dest": "internal: internal [4904,4912]"
    },
    {
      "src": "}: } [19222,19223]",
      "dest": "}: } [19222,19223]"
    },
    {
      "src": "function_definition [23496,23782]",
      "dest": "function_definition [23496,23782]"
    },
    {
      "src": ".: . [39855,39856]",
      "dest": ".: . [39858,39859]"
    },
    {
      "src": "call_argument [2863,2869]",
      "dest": "call_argument [2863,2869]"
    },
    {
      "src": "identifier: b [7099,7100]",
      "dest": "identifier: b [7099,7100]"
    },
    {
      "src": "address: address [35190,35197]",
      "dest": "address: address [35193,35200]"
    },
    {
      "src": "[: [ [37781,37782]",
      "dest": "[: [ [37784,37785]"
    },
    {
      "src": "call_expression [18779,18831]",
      "dest": "call_expression [18779,18831]"
    },
    {
      "src": "assignment_expression [36317,36355]",
      "dest": "assignment_expression [36320,36358]"
    },
    {
      "src": "call_argument [15795,15799]",
      "dest": "call_argument [15795,15799]"
    },
    {
      "src": "uint256: uint256 [4933,4940]",
      "dest": "uint256: uint256 [4933,4940]"
    },
    {
      "src": ".: . [38571,38572]",
      "dest": ".: . [38574,38575]"
    },
    {
      "src": "call_expression [23704,23773]",
      "dest": "call_expression [23704,23773]"
    },
    {
      "src": "string_literal [40922,40949]",
      "dest": "string_literal [40931,40958]"
    },
    {
      "src": "): ) [23644,23645]",
      "dest": "): ) [23644,23645]"
    },
    {
      "src": "identifier: functionCall [17267,17279]",
      "dest": "identifier: functionCall [17267,17279]"
    },
    {
      "src": "revert_statement [21538,21559]",
      "dest": "revert_statement [21538,21559]"
    },
    {
      "src": "boolean_literal [5194,5198]",
      "dest": "boolean_literal [5194,5198]"
    },
    {
      "src": "identifier: _orderID [34661,34669]",
      "dest": "identifier: _orderID [34664,34672]"
    },
    {
      "src": "identifier: isApprovedForAll [36597,36613]",
      "dest": "identifier: isApprovedForAll [36600,36616]"
    },
    {
      "src": "primitive_type [11948,11955]",
      "dest": "primitive_type [11948,11955]"
    },
    {
      "src": "type_name [15716,15731]",
      "dest": "type_name [15716,15731]"
    },
    {
      "src": "call_expression [40741,40773]",
      "dest": "call_expression [40750,40782]"
    },
    {
      "src": "{: { [18451,18452]",
      "dest": "{: { [18451,18452]"
    },
    {
      "src": "yul_identifier [21463,21478]",
      "dest": "yul_identifier [21463,21478]"
    },
    {
      "src": "(: ( [35462,35463]",
      "dest": "(: ( [35465,35466]"
    },
    {
      "src": "string [7224,7259]",
      "dest": "string [7224,7259]"
    },
    {
      "src": "state_variable_declaration [32763,32787]",
      "dest": "state_variable_declaration [32766,32790]"
    },
    {
      "src": "identifier: c [7212,7213]",
      "dest": "identifier: c [7212,7213]"
    },
    {
      "src": "call_argument [24090,24097]",
      "dest": "call_argument [24090,24097]"
    },
    {
      "src": "call_argument [19573,19579]",
      "dest": "call_argument [19573,19579]"
    },
    {
      "src": "variable_declaration_statement [38311,38413]",
      "dest": "variable_declaration_statement [38314,38416]"
    },
    {
      "src": "variable_declaration [19709,19732]",
      "dest": "variable_declaration [19709,19732]"
    },
    {
      "src": "comment: /**  * @dev Contract module which provides a basic access control mechanism, where  * there is an account (an owner) that can be granted exclusive access to  * specific functions.  *  * By default, the owner account will be the one that deploys the contract. This  * can later be changed with {transferOwnership}.  *  * This module is used through inheritance. It will make available the modifier  * `onlyOwner`, which can be applied to your functions to restrict their use to  * the owner.  */ [1104,1609]",
      "dest": "comment: /**  * @dev Contract module which provides a basic access control mechanism, where  * there is an account (an owner) that can be granted exclusive access to  * specific functions.  *  * By default, the owner account will be the one that deploys the contract. This  * can later be changed with {transferOwnership}.  *  * This module is used through inheritance. It will make available the modifier  * `onlyOwner`, which can be applied to your functions to restrict their use to  * the owner.  */ [1104,1609]"
    },
    {
      "src": "identifier: account [14720,14727]",
      "dest": "identifier: account [14720,14727]"
    },
    {
      "src": "identifier: owner [29977,29982]",
      "dest": "identifier: owner [29977,29982]"
    },
    {
      "src": "type_name [34984,34991]",
      "dest": "type_name [34987,34994]"
    },
    {
      "src": "address: address [741,748]",
      "dest": "address: address [741,748]"
    },
    {
      "src": "identifier: nonReentrant [38013,38025]",
      "dest": "identifier: nonReentrant [38016,38028]"
    },
    {
      "src": "type_cast_expression [18470,18483]",
      "dest": "type_cast_expression [18470,18483]"
    },
    {
      "src": "(: ( [37507,37508]",
      "dest": "(: ( [37510,37511]"
    },
    {
      "src": "call_argument [40760,40772]",
      "dest": "call_argument [40769,40781]"
    },
    {
      "src": "identifier: sender [13048,13054]",
      "dest": "identifier: sender [13048,13054]"
    },
    {
      "src": "public: public [39558,39564]",
      "dest": "public: public [39561,39567]"
    },
    {
      "src": "}: } [3191,3192]",
      "dest": "}: } [3191,3192]"
    },
    {
      "src": "type_name [35078,35085]",
      "dest": "type_name [35081,35088]"
    },
    {
      "src": "identifier: fixedPrice [34343,34353]",
      "dest": "identifier: fixedPrice [34346,34356]"
    },
    {
      "src": "call_expression [37500,37527]",
      "dest": "call_expression [37503,37530]"
    },
    {
      "src": "(: ( [40759,40760]",
      "dest": "(: ( [40768,40769]"
    },
    {
      "src": ":=: := [21393,21395]",
      "dest": ":=: := [21393,21395]"
    },
    {
      "src": "call_argument [9969,9974]",
      "dest": "call_argument [9969,9974]"
    },
    {
      "src": "parameter [17280,17294]",
      "dest": "parameter [17280,17294]"
    },
    {
      "src": "call_argument [37373,37406]",
      "dest": "call_argument [37376,37409]"
    },
    {
      "src": "\": \" [23312,23313]",
      "dest": "\": \" [23312,23313]"
    },
    {
      "src": ",: , [30675,30676]",
      "dest": ",: , [30675,30676]"
    },
    {
      "src": "identifier: _orderID [34524,34532]",
      "dest": "identifier: _orderID [34527,34535]"
    },
    {
      "src": "type_name [34614,34618]",
      "dest": "type_name [34617,34621]"
    },
    {
      "src": "call_argument [23632,23645]",
      "dest": "call_argument [23632,23645]"
    },
    {
      "src": "(: ( [36498,36499]",
      "dest": "(: ( [36501,36502]"
    },
    {
      "src": "(: ( [5599,5600]",
      "dest": "(: ( [5599,5600]"
    },
    {
      "src": "identifier: _orderID [39548,39556]",
      "dest": "identifier: _orderID [39551,39559]"
    },
    {
      "src": "member_expression [38668,38678]",
      "dest": "member_expression [38671,38681]"
    },
    {
      "src": "[: [ [37032,37033]",
      "dest": "[: [ [37035,37036]"
    },
    {
      "src": ".: . [15800,15801]",
      "dest": ".: . [15800,15801]"
    },
    {
      "src": "function: function [11216,11224]",
      "dest": "function: function [11216,11224]"
    },
    {
      "src": "comment: // check the approve of ERC721 transferring [37418,37461]",
      "dest": "comment: // check the approve of ERC721 transferring [37421,37464]"
    },
    {
      "src": "{: { [30830,30831]",
      "dest": "{: { [30836,30837]"
    },
    {
      "src": "state_variable_declaration [33953,33995]",
      "dest": "state_variable_declaration [33956,33998]"
    },
    {
      "src": "parameter [9050,9076]",
      "dest": "parameter [9050,9076]"
    },
    {
      "src": "(: ( [29968,29969]",
      "dest": "(: ( [29968,29969]"
    },
    {
      "src": "call_argument [41236,41237]",
      "dest": "call_argument [41245,41246]"
    },
    {
      "src": "call_argument [19582,19620]",
      "dest": "call_argument [19582,19620]"
    },
    {
      "src": "identifier: OwnershipTransferred [1989,2009]",
      "dest": "identifier: OwnershipTransferred [1989,2009]"
    },
    {
      "src": "uint256: uint256 [27159,27166]",
      "dest": "uint256: uint256 [27159,27166]"
    },
    {
      "src": "identifier: _getOrderByID [36940,36953]",
      "dest": "identifier: _getOrderByID [36943,36956]"
    },
    {
      "src": "bytes: bytes [20529,20534]",
      "dest": "bytes: bytes [20529,20534]"
    },
    {
      "src": "state_mutability [831,835]",
      "dest": "state_mutability [831,835]"
    },
    {
      "src": "returns: returns [20956,20963]",
      "dest": "returns: returns [20956,20963]"
    },
    {
      "src": "expression_statement [41170,41195]",
      "dest": "expression_statement [41179,41204]"
    },
    {
      "src": "identifier: _owner [2863,2869]",
      "dest": "identifier: _owner [2863,2869]"
    },
    {
      "src": "bool: bool [15944,15948]",
      "dest": "bool: bool [15944,15948]"
    },
    {
      "src": "state_mutability [19515,19519]",
      "dest": "state_mutability [19515,19519]"
    },
    {
      "src": "): ) [41285,41286]",
      "dest": "): ) [41294,41295]"
    },
    {
      "src": "\": \" [20582,20583]",
      "dest": "\": \" [20582,20583]"
    },
    {
      "src": "function: function [16853,16861]",
      "dest": "function: function [16853,16861]"
    },
    {
      "src": "call_argument [23268,23281]",
      "dest": "call_argument [23268,23281]"
    },
    {
      "src": "call_argument [20758,20762]",
      "dest": "call_argument [20758,20762]"
    },
    {
      "src": "visibility [23867,23875]",
      "dest": "visibility [23867,23875]"
    },
    {
      "src": "return: return [16953,16959]",
      "dest": "return: return [16953,16959]"
    },
    {
      "src": "call_argument [17423,17427]",
      "dest": "call_argument [17423,17427]"
    },
    {
      "src": "}: } [4403,4404]",
      "dest": "}: } [4403,4404]"
    },
    {
      "src": "\": \" [18582,18583]",
      "dest": "\": \" [18582,18583]"
    },
    {
      "src": "member_expression [36578,36613]",
      "dest": "member_expression [36581,36616]"
    },
    {
      "src": "primitive_type [26582,26589]",
      "dest": "primitive_type [26582,26589]"
    },
    {
      "src": "%: % [8525,8526]",
      "dest": "%: % [8525,8526]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [11292,11507]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [11292,11507]"
    },
    {
      "src": "identifier: transferAmount [40741,40755]",
      "dest": "identifier: transferAmount [40750,40764]"
    },
    {
      "src": "type_name [17361,17366]",
      "dest": "type_name [17361,17366]"
    },
    {
      "src": "call_expression [19562,19580]",
      "dest": "call_expression [19562,19580]"
    },
    {
      "src": "(: ( [38588,38589]",
      "dest": "(: ( [38591,38592]"
    },
    {
      "src": "): ) [40352,40353]",
      "dest": "): ) [40361,40362]"
    },
    {
      "src": "\": \" [7885,7886]",
      "dest": "\": \" [7885,7886]"
    },
    {
      "src": "function_definition [4557,4711]",
      "dest": "function_definition [4557,4711]"
    },
    {
      "src": "identifier: _fixedPrice [35613,35624]",
      "dest": "identifier: _fixedPrice [35616,35627]"
    },
    {
      "src": ",: , [35580,35581]",
      "dest": ",: , [35583,35584]"
    },
    {
      "src": "uint256: uint256 [7091,7098]",
      "dest": "uint256: uint256 [7091,7098]"
    },
    {
      "src": "binary_expression [9129,9135]",
      "dest": "binary_expression [9129,9135]"
    },
    {
      "src": ",: , [23281,23282]",
      "dest": ",: , [23281,23282]"
    },
    {
      "src": "identifier: require [6728,6735]",
      "dest": "identifier: require [6728,6735]"
    },
    {
      "src": "primitive_type [34056,34063]",
      "dest": "primitive_type [34059,34066]"
    },
    {
      "src": "identifier: a [6671,6672]",
      "dest": "identifier: a [6671,6672]"
    },
    {
      "src": "return_type_definition [31025,31039]",
      "dest": "return_type_definition [31028,31042]"
    },
    {
      "src": "identifier: token [23440,23445]",
      "dest": "identifier: token [23440,23445]"
    },
    {
      "src": "parenthesized_expression [23235,23247]",
      "dest": "parenthesized_expression [23235,23247]"
    },
    {
      "src": "function: function [19024,19032]",
      "dest": "function: function [19024,19032]"
    },
    {
      "src": "): ) [15957,15958]",
      "dest": "): ) [15957,15958]"
    },
    {
      "src": "): ) [27174,27175]",
      "dest": "): ) [27174,27175]"
    },
    {
      "src": "call_argument [41213,41238]",
      "dest": "call_argument [41222,41247]"
    },
    {
      "src": "visibility [11566,11574]",
      "dest": "visibility [11566,11574]"
    },
    {
      "src": "\": \" [15850,15851]",
      "dest": "\": \" [15850,15851]"
    },
    {
      "src": "string_literal [15820,15851]",
      "dest": "string_literal [15820,15851]"
    },
    {
      "src": "string_literal [18502,18542]",
      "dest": "string_literal [18502,18542]"
    },
    {
      "src": "parameter [19459,19476]",
      "dest": "parameter [19459,19476]"
    },
    {
      "src": "type_name [39230,39237]",
      "dest": "type_name [39233,39240]"
    },
    {
      "src": "expression_statement [33351,33415]",
      "dest": "expression_statement [33354,33418]"
    },
    {
      "src": ",: , [19802,19803]",
      "dest": ",: , [19802,19803]"
    },
    {
      "src": "if_statement [4341,4370]",
      "dest": "if_statement [4341,4370]"
    },
    {
      "src": "function_body [7134,7287]",
      "dest": "function_body [7134,7287]"
    },
    {
      "src": "visibility [30939,30947]",
      "dest": "visibility [30945,30953]"
    },
    {
      "src": "identifier: mod [10692,10695]",
      "dest": "identifier: mod [10692,10695]"
    },
    {
      "src": "call_argument [16973,16979]",
      "dest": "call_argument [16973,16979]"
    },
    {
      "src": ",: , [4365,4366]",
      "dest": ",: , [4365,4366]"
    },
    {
      "src": "return: return [10828,10834]",
      "dest": "return: return [10828,10834]"
    },
    {
      "src": "(: ( [27956,27957]",
      "dest": "(: ( [27956,27957]"
    },
    {
      "src": "calldata: calldata [30700,30708]",
      "dest": "calldata: calldata [30700,30708]"
    },
    {
      "src": "true [35499,35503]",
      "dest": "true [35502,35506]"
    },
    {
      "src": "visibility [19506,19514]",
      "dest": "visibility [19506,19514]"
    },
    {
      "src": "string: string [17315,17321]",
      "dest": "string: string [17315,17321]"
    },
    {
      "src": "emit_statement [38637,38702]",
      "dest": "emit_statement [38640,38705]"
    },
    {
      "src": "=: = [33679,33680]",
      "dest": "=: = [33682,33683]"
    },
    {
      "src": ",: , [7089,7090]",
      "dest": ",: , [7089,7090]"
    },
    {
      "src": "\": \" [15992,15993]",
      "dest": "\": \" [15992,15993]"
    },
    {
      "src": "(: ( [15991,15992]",
      "dest": "(: ( [15991,15992]"
    },
    {
      "src": "type_name [10707,10714]",
      "dest": "type_name [10707,10714]"
    },
    {
      "src": "type_name [23835,23842]",
      "dest": "type_name [23835,23842]"
    },
    {
      "src": "modifier_invocation [3135,3144]",
      "dest": "modifier_invocation [3135,3144]"
    },
    {
      "src": "string [35780,35824]",
      "dest": "string [35783,35827]"
    },
    {
      "src": "primitive_type [11235,11242]",
      "dest": "primitive_type [11235,11242]"
    },
    {
      "src": "=: = [19734,19735]",
      "dest": "=: = [19734,19735]"
    },
    {
      "src": "parameter [30677,30692]",
      "dest": "parameter [30677,30692]"
    },
    {
      "src": "event_definition [1686,1770]",
      "dest": "event_definition [1686,1770]"
    },
    {
      "src": "+: + [4327,4328]",
      "dest": "+: + [4327,4328]"
    },
    {
      "src": "uint256: uint256 [23852,23859]",
      "dest": "uint256: uint256 [23852,23859]"
    },
    {
      "src": ",: , [16979,16980]",
      "dest": ",: , [16979,16980]"
    },
    {
      "src": "type_name [10769,10776]",
      "dest": "type_name [10769,10776]"
    },
    {
      "src": "comment: // check && pay copyright fee [38272,38301]",
      "dest": "comment: // check && pay copyright fee [38275,38304]"
    },
    {
      "src": "type_name [18688,18692]",
      "dest": "type_name [18688,18692]"
    },
    {
      "src": "(: ( [8470,8471]",
      "dest": "(: ( [8470,8471]"
    },
    {
      "src": "variable_declaration_statement [40233,40309]",
      "dest": "variable_declaration_statement [40245,40318]"
    },
    {
      "src": "(: ( [17980,17981]",
      "dest": "(: ( [17980,17981]"
    },
    {
      "src": "identifier: Order [38037,38042]",
      "dest": "identifier: Order [38040,38045]"
    },
    {
      "src": "address: address [38351,38358]",
      "dest": "address: address [38354,38361]"
    },
    {
      "src": "): ) [37406,37407]",
      "dest": "): ) [37409,37410]"
    },
    {
      "src": "call_argument [36830,36846]",
      "dest": "call_argument [36833,36849]"
    },
    {
      "src": "type_name [4313,4320]",
      "dest": "type_name [4313,4320]"
    },
    {
      "src": "): ) [9149,9150]",
      "dest": "): ) [9149,9150]"
    },
    {
      "src": "expression_statement [9961,9990]",
      "dest": "expression_statement [9961,9990]"
    },
    {
      "src": "user_defined_type [39695,39700]",
      "dest": "user_defined_type [39698,39703]"
    },
    {
      "src": "string [20582,20622]",
      "dest": "string [20582,20622]"
    },
    {
      "src": "identifier: a [7188,7189]",
      "dest": "identifier: a [7188,7189]"
    },
    {
      "src": "user_defined_type [24541,24547]",
      "dest": "user_defined_type [24541,24547]"
    },
    {
      "src": "visibility [9918,9926]",
      "dest": "visibility [9918,9926]"
    },
    {
      "src": "identifier: Order [41140,41145]",
      "dest": "identifier: Order [41149,41154]"
    },
    {
      "src": ".: . [15970,15971]",
      "dest": ".: . [15970,15971]"
    },
    {
      "src": "expression_statement [38754,38823]",
      "dest": "expression_statement [38757,38826]"
    },
    {
      "src": "identifier: abi [23704,23707]",
      "dest": "identifier: abi [23704,23707]"
    },
    {
      "src": "parameter [19529,19541]",
      "dest": "parameter [19529,19541]"
    },
    {
      "src": "): ) [36479,36480]",
      "dest": "): ) [36482,36483]"
    },
    {
      "src": "function_body [17941,18054]",
      "dest": "function_body [17941,18054]"
    },
    {
      "src": "identifier: newOwner [3110,3118]",
      "dest": "identifier: newOwner [3110,3118]"
    },
    {
      "src": "return_statement [769,787]",
      "dest": "return_statement [769,787]"
    },
    {
      "src": ".: . [23655,23656]",
      "dest": ".: . [23655,23656]"
    },
    {
      "src": "identifier: IERC721 [37471,37478]",
      "dest": "identifier: IERC721 [37474,37481]"
    },
    {
      "src": "call_expression [23417,23479]",
      "dest": "call_expression [23417,23479]"
    },
    {
      "src": "number_literal: 0 [2910,2911]",
      "dest": "number_literal: 0 [2910,2911]"
    },
    {
      "src": "type_name [38312,38316]",
      "dest": "type_name [38315,38319]"
    },
    {
      "src": "event_paramater [13544,13565]",
      "dest": "event_paramater [13544,13565]"
    },
    {
      "src": "): ) [38904,38905]",
      "dest": "): ) [38907,38908]"
    },
    {
      "src": "parameter [14362,14377]",
      "dest": "parameter [14362,14377]"
    },
    {
      "src": "comment: // File: contracts/Dependencies/Address.sol [13614,13657]",
      "dest": "comment: // File: contracts/Dependencies/Address.sol [13614,13657]"
    },
    {
      "src": "type_name [8398,8405]",
      "dest": "type_name [8398,8405]"
    },
    {
      "src": "call_expression [40961,41063]",
      "dest": "call_expression [40970,41072]"
    },
    {
      "src": "member_expression [24066,24088]",
      "dest": "member_expression [24066,24088]"
    },
    {
      "src": "variable_declaration_statement [6266,6284]",
      "dest": "variable_declaration_statement [6266,6284]"
    },
    {
      "src": "emit: emit [38637,38641]",
      "dest": "emit: emit [38640,38644]"
    },
    {
      "src": "member_expression [23440,23462]",
      "dest": "member_expression [23440,23462]"
    },
    {
      "src": "identifier: a [10835,10836]",
      "dest": "identifier: a [10835,10836]"
    },
    {
      "src": "parameter [19110,19122]",
      "dest": "parameter [19110,19122]"
    },
    {
      "src": ".: . [37564,37565]",
      "dest": ".: . [37567,37568]"
    },
    {
      "src": "{: { [35648,35649]",
      "dest": "{: { [35651,35652]"
    },
    {
      "src": "bytes: bytes [20464,20469]",
      "dest": "bytes: bytes [20464,20469]"
    },
    {
      "src": "emit: emit [3350,3354]",
      "dest": "emit: emit [3350,3354]"
    },
    {
      "src": "(: ( [10768,10769]",
      "dest": "(: ( [10768,10769]"
    },
    {
      "src": "call_argument [23417,23479]",
      "dest": "call_argument [23417,23479]"
    },
    {
      "src": ",: , [20481,20482]",
      "dest": ",: , [20481,20482]"
    },
    {
      "src": "emit: emit [1984,1988]",
      "dest": "emit: emit [1984,1988]"
    },
    {
      "src": ".: . [22523,22524]",
      "dest": ".: . [22523,22524]"
    },
    {
      "src": "true [4388,4392]",
      "dest": "true [4388,4392]"
    },
    {
      "src": "member_expression [38754,38781]",
      "dest": "member_expression [38757,38784]"
    },
    {
      "src": "false [39034,39039]",
      "dest": "false [39037,39042]"
    },
    {
      "src": ",: , [36828,36829]",
      "dest": ",: , [36831,36832]"
    },
    {
      "src": "primitive_type [34588,34595]",
      "dest": "primitive_type [34591,34598]"
    },
    {
      "src": "comment: // 4. check the approve of ERC721 transferring [36368,36414]",
      "dest": "comment: // 4. check the approve of ERC721 transferring [36371,36417]"
    },
    {
      "src": "identifier: _order [39817,39823]",
      "dest": "identifier: _order [39820,39826]"
    },
    {
      "src": "binary_expression [4345,4350]",
      "dest": "binary_expression [4345,4350]"
    },
    {
      "src": "number_literal: 1 [32709,32710]",
      "dest": "number_literal: 1 [32712,32713]"
    },
    {
      "src": "=: = [37055,37056]",
      "dest": "=: = [37058,37059]"
    },
    {
      "src": "parameter [11948,11955]",
      "dest": "parameter [11948,11955]"
    },
    {
      "src": "visibility [2138,2144]",
      "dest": "visibility [2138,2144]"
    },
    {
      "src": "binary_expression [10007,10012]",
      "dest": "binary_expression [10007,10012]"
    },
    {
      "src": "!=: != [41225,41227]",
      "dest": "!=: != [41234,41236]"
    },
    {
      "src": ">: > [37355,37356]",
      "dest": ">: > [37358,37359]"
    },
    {
      "src": "state_mutability [11934,11938]",
      "dest": "state_mutability [11934,11938]"
    },
    {
      "src": "address: address [20448,20455]",
      "dest": "address: address [20448,20455]"
    },
    {
      "src": "): ) [2880,2881]",
      "dest": "): ) [2880,2881]"
    },
    {
      "src": "function: function [2772,2780]",
      "dest": "function: function [2772,2780]"
    },
    {
      "src": "primitive_type [27159,27166]",
      "dest": "primitive_type [27159,27166]"
    },
    {
      "src": ":: : [35988,35989]",
      "dest": ":: : [35991,35992]"
    },
    {
      "src": "identifier: recipient [15961,15970]",
      "dest": "identifier: recipient [15961,15970]"
    },
    {
      "src": "return_type_definition [7116,7133]",
      "dest": "return_type_definition [7116,7133]"
    },
    {
      "src": "uint256: uint256 [26974,26981]",
      "dest": "uint256: uint256 [26974,26981]"
    },
    {
      "src": "identifier: HasCopyright [40082,40094]",
      "dest": "identifier: HasCopyright721 [40088,40103]"
    },
    {
      "src": "primitive_type [2902,2909]",
      "dest": "primitive_type [2902,2909]"
    },
    {
      "src": "call_argument [2910,2911]",
      "dest": "call_argument [2910,2911]"
    },
    {
      "src": "identifier: _tokenAddress [34558,34571]",
      "dest": "identifier: _tokenAddress [34561,34574]"
    },
    {
      "src": "parameter [22243,22253]",
      "dest": "parameter [22243,22253]"
    },
    {
      "src": "function_body [35648,36855]",
      "dest": "function_body [35651,36858]"
    },
    {
      "src": "uint256: uint256 [29327,29334]",
      "dest": "uint256: uint256 [29327,29334]"
    },
    {
      "src": "function_definition [20024,20224]",
      "dest": "function_definition [20024,20224]"
    },
    {
      "src": "primitive_type [9050,9056]",
      "dest": "primitive_type [9050,9056]"
    },
    {
      "src": ",: , [22916,22917]",
      "dest": ",: , [22916,22917]"
    },
    {
      "src": "{: { [31903,31904]",
      "dest": "{: { [31906,31907]"
    },
    {
      "src": "identifier: _requireOrderByMaker [40798,40818]",
      "dest": "identifier: _requireOrderByMaker [40807,40827]"
    },
    {
      "src": "(: ( [7822,7823]",
      "dest": "(: ( [7822,7823]"
    },
    {
      "src": ",: , [20166,20167]",
      "dest": ",: , [20166,20167]"
    },
    {
      "src": "): ) [11955,11956]",
      "dest": "): ) [11955,11956]"
    },
    {
      "src": "uint: uint [41102,41106]",
      "dest": "uint: uint [41111,41115]"
    },
    {
      "src": "call_struct_argument [36050,36068]",
      "dest": "call_struct_argument [36053,36071]"
    },
    {
      "src": "for: for [22187,22190]",
      "dest": "for: for [22187,22190]"
    },
    {
      "src": "call_argument [18478,18482]",
      "dest": "call_argument [18478,18482]"
    },
    {
      "src": "primitive_type [22432,22439]",
      "dest": "primitive_type [22432,22439]"
    },
    {
      "src": "address: address [30651,30658]",
      "dest": "address: address [30651,30658]"
    },
    {
      "src": "address: address [1713,1720]",
      "dest": "address: address [1713,1720]"
    },
    {
      "src": "parameter [8409,8418]",
      "dest": "parameter [8409,8418]"
    },
    {
      "src": "comment: /**      * @dev Gives permission to `to` to transfer `tokenId` token to another account.      * The approval is cleared when the token is transferred.      *      * Only a single account can be approved at a time, so approving the zero address clears previous approvals.      *      * Requirements:      *      * - The caller must own the token or be an approved operator.      * - `tokenId` must exist.      *      * Emits an {Approval} event.      */ [28622,29086]",
      "dest": "comment: /**      * @dev Gives permission to `to` to transfer `tokenId` token to another account.      * The approval is cleared when the token is transferred.      *      * Only a single account can be approved at a time, so approving the zero address clears previous approvals.      *      * Requirements:      *      * - The caller must own the token or be an approved operator.      * - `tokenId` must exist.      *      * Emits an {Approval} event.      */ [28622,29086]"
    },
    {
      "src": "returns: returns [17918,17925]",
      "dest": "returns: returns [17918,17925]"
    },
    {
      "src": "number_literal: 1 [36353,36354]",
      "dest": "number_literal: 1 [36356,36357]"
    },
    {
      "src": "identifier: payTokenAddress [36813,36828]",
      "dest": "identifier: payTokenAddress [36816,36831]"
    },
    {
      "src": "): ) [19504,19505]",
      "dest": "): ) [19504,19505]"
    },
    {
      "src": "uint256: uint256 [29121,29128]",
      "dest": "uint256: uint256 [29121,29128]"
    },
    {
      "src": "type_name [20890,20895]",
      "dest": "type_name [20890,20895]"
    },
    {
      "src": "primitive_type [35153,35160]",
      "dest": "primitive_type [35156,35163]"
    },
    {
      "src": "(: ( [36529,36530]",
      "dest": "(: ( [36532,36533]"
    },
    {
      "src": "user_defined_type [41140,41145]",
      "dest": "user_defined_type [41149,41154]"
    },
    {
      "src": "identifier: balanceOf [11225,11234]",
      "dest": "identifier: balanceOf [11225,11234]"
    },
    {
      "src": "return: return [20132,20138]",
      "dest": "return: return [20132,20138]"
    },
    {
      "src": "identifier: owner [26777,26782]",
      "dest": "identifier: owner [26777,26782]"
    },
    {
      "src": "): ) [19732,19733]",
      "dest": "): ) [19732,19733]"
    },
    {
      "src": "identifier: this [18478,18482]",
      "dest": "identifier: this [18478,18482]"
    },
    {
      "src": "user_defined_type [36424,36431]",
      "dest": "user_defined_type [36427,36434]"
    },
    {
      "src": "uint256: uint256 [9101,9108]",
      "dest": "uint256: uint256 [9101,9108]"
    },
    {
      "src": "event_paramater [34534,34548]",
      "dest": "event_paramater [34537,34551]"
    },
    {
      "src": "address: address [2871,2878]",
      "dest": "address: address [2871,2878]"
    },
    {
      "src": "binary_expression [38179,38204]",
      "dest": "binary_expression [38182,38207]"
    },
    {
      "src": "identifier: sub [23950,23953]",
      "dest": "identifier: sub [23950,23953]"
    },
    {
      "src": "identifier: maker [38800,38805]",
      "dest": "identifier: maker [38803,38808]"
    },
    {
      "src": "identifier: target [17867,17873]",
      "dest": "identifier: target [17867,17873]"
    },
    {
      "src": "): ) [18417,18418]",
      "dest": "): ) [18417,18418]"
    },
    {
      "src": "type_name [35063,35067]",
      "dest": "type_name [35066,35070]"
    },
    {
      "src": "function: function [22866,22874]",
      "dest": "function: function [22866,22874]"
    },
    {
      "src": "bool: bool [20876,20880]",
      "dest": "bool: bool [20876,20880]"
    },
    {
      "src": "identifier: _newPrice [34776,34785]",
      "dest": "identifier: _newPrice [34779,34788]"
    },
    {
      "src": "internal: internal [15759,15767]",
      "dest": "internal: internal [15759,15767]"
    },
    {
      "src": "member_expression [39087,39098]",
      "dest": "member_expression [39090,39101]"
    },
    {
      "src": "type_name [7125,7132]",
      "dest": "type_name [7125,7132]"
    },
    {
      "src": "]: ] [36297,36298]",
      "dest": "]: ] [36300,36301]"
    },
    {
      "src": "uint256: uint256 [32669,32676]",
      "dest": "uint256: uint256 [32672,32679]"
    },
    {
      "src": "identifier: author [40592,40598]",
      "dest": "identifier: author [40601,40607]"
    },
    {
      "src": "identifier: HasCopyright [30793,30805]",
      "dest": "identifier: HasCopyright721 [30796,30811]"
    },
    {
      "src": "{: { [39900,39901]",
      "dest": "{: { [39903,39904]"
    },
    {
      "src": "identifier: CancelOrder [34644,34655]",
      "dest": "identifier: CancelOrder [34647,34658]"
    },
    {
      "src": "): ) [26067,26068]",
      "dest": "): ) [26067,26068]"
    },
    {
      "src": "(: ( [33265,33266]",
      "dest": "(: ( [33268,33269]"
    },
    {
      "src": "comment: // amount. Since refunds are capped to a percentage of the total [32446,32510]",
      "dest": "comment: // amount. Since refunds are capped to a percentage of the total [32449,32513]"
    },
    {
      "src": "identifier: errorMessage [9976,9988]",
      "dest": "identifier: errorMessage [9976,9988]"
    },
    {
      "src": "primitive_type [35582,35589]",
      "dest": "primitive_type [35585,35592]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers, reverting with custom message on      * division by zero. The result is rounded towards zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryDiv}.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [9189,9849]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers, reverting with custom message on      * division by zero. The result is rounded towards zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryDiv}.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [9189,9849]"
    },
    {
      "src": "variable_declaration [35944,35962]",
      "dest": "variable_declaration [35947,35965]"
    },
    {
      "src": "identifier: transferAmount [40531,40545]",
      "dest": "identifier: transferAmount [40540,40554]"
    },
    {
      "src": "identifier: require [35227,35234]",
      "dest": "identifier: require [35230,35237]"
    },
    {
      "src": "type_name [3228,3235]",
      "dest": "type_name [3228,3235]"
    },
    {
      "src": "event_paramater [35078,35092]",
      "dest": "event_paramater [35081,35095]"
    },
    {
      "src": "identifier: transferAmount [39800,39814]",
      "dest": "identifier: transferAmount [39803,39817]"
    },
    {
      "src": "identifier: data [19472,19476]",
      "dest": "identifier: data [19472,19476]"
    },
    {
      "src": "): ) [2911,2912]",
      "dest": "): ) [2911,2912]"
    },
    {
      "src": "(: ( [40206,40207]",
      "dest": "(: ( [40218,40219]"
    },
    {
      "src": "uint: uint [39755,39759]",
      "dest": "uint: uint [39758,39762]"
    },
    {
      "src": "type_name [19709,19714]",
      "dest": "type_name [19709,19714]"
    },
    {
      "src": "visibility [39558,39564]",
      "dest": "visibility [39561,39567]"
    },
    {
      "src": "uint256: uint256 [12660,12667]",
      "dest": "uint256: uint256 [12660,12667]"
    },
    {
      "src": "member_expression [37661,37671]",
      "dest": "member_expression [37664,37674]"
    },
    {
      "src": "call_argument [23660,23665]",
      "dest": "call_argument [23660,23665]"
    },
    {
      "src": "number_literal: 0 [2879,2880]",
      "dest": "number_literal: 0 [2879,2880]"
    },
    {
      "src": "primitive_type [41102,41106]",
      "dest": "primitive_type [41111,41115]"
    },
    {
      "src": "(: ( [41235,41236]",
      "dest": "(: ( [41244,41245]"
    },
    {
      "src": "member_expression [15961,15975]",
      "dest": "member_expression [15961,15975]"
    },
    {
      "src": "identifier: isAvailable [40896,40907]",
      "dest": "identifier: isAvailable [40905,40916]"
    },
    {
      "src": "): ) [15851,15852]",
      "dest": "): ) [15851,15852]"
    },
    {
      "src": "function: function [4226,4234]",
      "dest": "function: function [4226,4234]"
    },
    {
      "src": "function_body [17375,17453]",
      "dest": "function_body [17375,17453]"
    },
    {
      "src": "if: if [20990,20992]",
      "dest": "if: if [20990,20992]"
    },
    {
      "src": "visibility [12676,12684]",
      "dest": "visibility [12676,12684]"
    },
    {
      "src": "visibility [40856,40864]",
      "dest": "visibility [40865,40873]"
    },
    {
      "src": "): ) [8504,8505]",
      "dest": "): ) [8504,8505]"
    },
    {
      "src": "call_argument [20160,20166]",
      "dest": "call_argument [20160,20166]"
    },
    {
      "src": "member_expression [39100,39118]",
      "dest": "member_expression [39103,39121]"
    },
    {
      "src": "identifier: spender [11916,11923]",
      "dest": "identifier: spender [11916,11923]"
    },
    {
      "src": "): ) [39632,39633]",
      "dest": "): ) [39635,39636]"
    },
    {
      "src": "(: ( [4926,4927]",
      "dest": "(: ( [4926,4927]"
    },
    {
      "src": "{: { [3255,3256]",
      "dest": "{: { [3255,3256]"
    },
    {
      "src": "boolean_literal [5921,5925]",
      "dest": "boolean_literal [5921,5925]"
    },
    {
      "src": "false: false [5893,5898]",
      "dest": "false: false [5893,5898]"
    },
    {
      "src": "event: event [1686,1691]",
      "dest": "event: event [1686,1691]"
    },
    {
      "src": "modifier_invocation [35635,35647]",
      "dest": "modifier_invocation [35638,35650]"
    },
    {
      "src": "identifier: spender [23843,23850]",
      "dest": "identifier: spender [23843,23850]"
    },
    {
      "src": "): ) [21478,21479]",
      "dest": "): ) [21478,21479]"
    },
    {
      "src": "identifier: copyrightFee [39760,39772]",
      "dest": "identifier: copyrightFee [39763,39775]"
    },
    {
      "src": "external: external [35626,35634]",
      "dest": "external: external [35629,35637]"
    },
    {
      "src": "binary_expression [21139,21160]",
      "dest": "binary_expression [21139,21160]"
    },
    {
      "src": "view: view [2145,2149]",
      "dest": "view: view [2145,2149]"
    },
    {
      "src": "uint256: uint256 [5492,5499]",
      "dest": "uint256: uint256 [5492,5499]"
    },
    {
      "src": "primitive_type [20529,20534]",
      "dest": "primitive_type [20529,20534]"
    },
    {
      "src": "visibility [20511,20519]",
      "dest": "visibility [20511,20519]"
    },
    {
      "src": "member_expression [35755,35765]",
      "dest": "member_expression [35758,35768]"
    },
    {
      "src": "}: } [5308,5309]",
      "dest": "}: } [5308,5309]"
    },
    {
      "src": "identifier: order [37007,37012]",
      "dest": "identifier: order [37010,37015]"
    },
    {
      "src": "binary_expression [5606,5611]",
      "dest": "binary_expression [5606,5611]"
    },
    {
      "src": "return_type_definition [9092,9109]",
      "dest": "return_type_definition [9092,9109]"
    },
    {
      "src": "emit_statement [36728,36848]",
      "dest": "emit_statement [36731,36851]"
    },
    {
      "src": "(: ( [7211,7212]",
      "dest": "(: ( [7211,7212]"
    },
    {
      "src": ",: , [23702,23703]",
      "dest": ",: , [23702,23703]"
    },
    {
      "src": "memory: memory [20490,20496]",
      "dest": "memory: memory [20490,20496]"
    },
    {
      "src": "call_argument [25208,25252]",
      "dest": "call_argument [25208,25252]"
    },
    {
      "src": "parameter [35190,35207]",
      "dest": "parameter [35193,35210]"
    },
    {
      "src": "%: % [5929,5930]",
      "dest": "%: % [5929,5930]"
    },
    {
      "src": "identifier: returndata [21139,21149]",
      "dest": "identifier: returndata [21139,21149]"
    },
    {
      "src": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [14770,15691]",
      "dest": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [14770,15691]"
    },
    {
      "src": "uint: uint [36884,36888]",
      "dest": "uint: uint [36887,36891]"
    },
    {
      "src": "{: { [3145,3146]",
      "dest": "{: { [3145,3146]"
    },
    {
      "src": "\": \" [8478,8479]",
      "dest": "\": \" [8478,8479]"
    },
    {
      "src": "): ) [35129,35130]",
      "dest": "): ) [35132,35133]"
    },
    {
      "src": ".: . [40101,40102]",
      "dest": ".: . [40110,40111]"
    },
    {
      "src": "): ) [41062,41063]",
      "dest": "): ) [41071,41072]"
    },
    {
      "src": "primitive_type [23835,23842]",
      "dest": "primitive_type [23835,23842]"
    },
    {
      "src": "address: address [2010,2017]",
      "dest": "address: address [2010,2017]"
    },
    {
      "src": "string [40922,40949]",
      "dest": "string [40931,40958]"
    },
    {
      "src": "true: true [5600,5604]",
      "dest": "true: true [5600,5604]"
    },
    {
      "src": "primitive_type [6266,6273]",
      "dest": "primitive_type [6266,6273]"
    },
    {
      "src": "(: ( [23235,23236]",
      "dest": "(: ( [23235,23236]"
    },
    {
      "src": "function_body [4633,4711]",
      "dest": "function_body [4633,4711]"
    },
    {
      "src": "identifier: msg [38936,38939]",
      "dest": "identifier: msg [38939,38942]"
    },
    {
      "src": "binary_expression [40969,40991]",
      "dest": "binary_expression [40978,41000]"
    },
    {
      "src": "identifier: IERC20 [22229,22235]",
      "dest": "identifier: IERC20 [22229,22235]"
    },
    {
      "src": "identifier: functionStaticCall [19424,19442]",
      "dest": "identifier: functionStaticCall [19424,19442]"
    },
    {
      "src": "identifier: a [9036,9037]",
      "dest": "identifier: a [9036,9037]"
    },
    {
      "src": "}: } [33703,33704]",
      "dest": "}: } [33706,33707]"
    },
    {
      "src": "): ) [19579,19580]",
      "dest": "): ) [19579,19580]"
    },
    {
      "src": "variable_declaration_statement [36424,36481]",
      "dest": "variable_declaration_statement [36427,36484]"
    },
    {
      "src": ".: . [36835,36836]",
      "dest": ".: . [36838,36839]"
    },
    {
      "src": "binary_expression [36499,36640]",
      "dest": "binary_expression [36502,36643]"
    },
    {
      "src": "identifier: _NOT_ENTERED [33681,33693]",
      "dest": "identifier: _NOT_ENTERED [33684,33696]"
    },
    {
      "src": "visibility [36899,36907]",
      "dest": "visibility [36902,36910]"
    },
    {
      "src": "identifier: functionCall [16862,16874]",
      "dest": "identifier: functionCall [16862,16874]"
    },
    {
      "src": "identifier: _orderID [37153,37161]",
      "dest": "identifier: _orderID [37156,37164]"
    },
    {
      "src": "expression_statement [38878,38963]",
      "dest": "expression_statement [38881,38966]"
    },
    {
      "src": "member_expression [39158,39174]",
      "dest": "member_expression [39161,39177]"
    },
    {
      "src": "identifier: IERC165 [26215,26222]",
      "dest": "identifier: IERC165 [26215,26222]"
    },
    {
      "src": "primitive_type [37163,37170]",
      "dest": "primitive_type [37166,37173]"
    },
    {
      "src": "identifier: MakeOrder [36733,36742]",
      "dest": "identifier: MakeOrder [36736,36745]"
    },
    {
      "src": "(: ( [12693,12694]",
      "dest": "(: ( [12693,12694]"
    },
    {
      "src": "identifier: token [22543,22548]",
      "dest": "identifier: token [22543,22548]"
    },
    {
      "src": "event_paramater [1744,1768]",
      "dest": "event_paramater [1744,1768]"
    },
    {
      "src": ".: . [38184,38185]",
      "dest": ".: . [38187,38188]"
    },
    {
      "src": "return_statement [40523,40569]",
      "dest": "return_statement [40532,40578]"
    },
    {
      "src": "parameter [20890,20913]",
      "dest": "parameter [20890,20913]"
    },
    {
      "src": "{: { [2826,2827]",
      "dest": "{: { [2826,2827]"
    },
    {
      "src": ".: . [40284,40285]",
      "dest": ".: . [40296,40297]"
    },
    {
      "src": "primitive_type [40343,40350]",
      "dest": "primitive_type [40352,40359]"
    },
    {
      "src": "address: address [37673,37680]",
      "dest": "address: address [37676,37683]"
    },
    {
      "src": "number_literal: 0 [21159,21160]",
      "dest": "number_literal: 0 [21159,21160]"
    },
    {
      "src": "type_name [29367,29374]",
      "dest": "type_name [29367,29374]"
    },
    {
      "src": "function_definition [20418,20841]",
      "dest": "function_definition [20418,20841]"
    },
    {
      "src": "type_name [39579,39584]",
      "dest": "type_name [39582,39587]"
    },
    {
      "src": "identifier: PayCopyrightFee [35047,35062]",
      "dest": "identifier: PayCopyrightFee [35050,35065]"
    },
    {
      "src": "call_argument [9976,9988]",
      "dest": "call_argument [9976,9988]"
    },
    {
      "src": "address: address [1912,1919]",
      "dest": "address: address [1912,1919]"
    },
    {
      "src": ".: . [36535,36536]",
      "dest": ".: . [36538,36539]"
    },
    {
      "src": "identifier: _author [35102,35109]",
      "dest": "identifier: _author [35105,35112]"
    },
    {
      "src": "identifier: Transfer [13298,13306]",
      "dest": "identifier: Transfer [13298,13306]"
    },
    {
      "src": "identifier: b [7909,7910]",
      "dest": "identifier: b [7909,7910]"
    },
    {
      "src": "type_name [32763,32770]",
      "dest": "type_name [32766,32773]"
    },
    {
      "src": "): ) [23478,23479]",
      "dest": "): ) [23478,23479]"
    },
    {
      "src": "call_argument [2366,2400]",
      "dest": "call_argument [2366,2400]"
    },
    {
      "src": ",: , [28574,28575]",
      "dest": ",: , [28574,28575]"
    },
    {
      "src": "type_name [27159,27166]",
      "dest": "type_name [27159,27166]"
    },
    {
      "src": "type_name [17315,17321]",
      "dest": "type_name [17315,17321]"
    },
    {
      "src": "return_type_definition [18428,18450]",
      "dest": "return_type_definition [18428,18450]"
    },
    {
      "src": "}: } [22596,22597]",
      "dest": "}: } [22596,22597]"
    },
    {
      "src": "type_cast_expression [24962,24976]",
      "dest": "type_cast_expression [24962,24976]"
    },
    {
      "src": "call_argument [35711,35765]",
      "dest": "call_argument [35714,35768]"
    },
    {
      "src": "parameter [17361,17373]",
      "dest": "parameter [17361,17373]"
    },
    {
      "src": "add: add [21442,21445]",
      "dest": "add: add [21442,21445]"
    },
    {
      "src": "identifier: functionCall [16960,16972]",
      "dest": "identifier: functionCall [16960,16972]"
    },
    {
      "src": "type_alias [22179,22186]",
      "dest": "type_alias [22179,22186]"
    },
    {
      "src": "call_argument [20808,20818]",
      "dest": "call_argument [20808,20818]"
    },
    {
      "src": "expression_statement [35484,35504]",
      "dest": "expression_statement [35487,35507]"
    },
    {
      "src": "primitive_type [39755,39759]",
      "dest": "primitive_type [39758,39762]"
    },
    {
      "src": "(: ( [36613,36614]",
      "dest": "(: ( [36616,36617]"
    },
    {
      "src": "parameter [5532,5539]",
      "dest": "parameter [5532,5539]"
    },
    {
      "src": "type_name [34407,34411]",
      "dest": "type_name [34410,34414]"
    },
    {
      "src": "uint256: uint256 [6212,6219]",
      "dest": "uint256: uint256 [6212,6219]"
    },
    {
      "src": "): ) [15994,15995]",
      "dest": "): ) [15994,15995]"
    },
    {
      "src": "visibility [41117,41125]",
      "dest": "visibility [41126,41134]"
    },
    {
      "src": "bytes: bytes [20070,20075]",
      "dest": "bytes: bytes [20070,20075]"
    },
    {
      "src": "\": \" [19619,19620]",
      "dest": "\": \" [19619,19620]"
    },
    {
      "src": "identifier: order [38886,38891]",
      "dest": "identifier: order [38889,38894]"
    },
    {
      "src": "identifier: _orderID [34716,34724]",
      "dest": "identifier: _orderID [34719,34727]"
    },
    {
      "src": "function_definition [27142,27214]",
      "dest": "function_definition [27142,27214]"
    },
    {
      "src": "member_expression [36334,36352]",
      "dest": "member_expression [36337,36355]"
    },
    {
      "src": "identifier: author [40333,40339]",
      "dest": "identifier: author [40342,40348]"
    },
    {
      "src": "member_expression [36995,37005]",
      "dest": "member_expression [36998,37008]"
    },
    {
      "src": "call_argument [16987,17019]",
      "dest": "call_argument [16987,17019]"
    },
    {
      "src": "): ) [22374,22375]",
      "dest": "): ) [22374,22375]"
    },
    {
      "src": "identifier: _order [40969,40975]",
      "dest": "identifier: _order [40978,40984]"
    },
    {
      "src": "visibility [32725,32732]",
      "dest": "visibility [32728,32735]"
    },
    {
      "src": "=: = [35312,35313]",
      "dest": "=: = [35315,35316]"
    },
    {
      "src": "return_statement [4655,4673]",
      "dest": "return_statement [4655,4673]"
    },
    {
      "src": "parameter [6674,6683]",
      "dest": "parameter [6674,6683]"
    },
    {
      "src": ".: . [39140,39141]",
      "dest": ".: . [39143,39144]"
    },
    {
      "src": "primitive_type [34199,34203]",
      "dest": "primitive_type [34202,34206]"
    },
    {
      "src": "call_argument [20562,20580]",
      "dest": "call_argument [20562,20580]"
    },
    {
      "src": "boolean_literal [5572,5577]",
      "dest": "boolean_literal [5572,5577]"
    },
    {
      "src": "parameter [2167,2174]",
      "dest": "parameter [2167,2174]"
    },
    {
      "src": "identifier: b [4592,4593]",
      "dest": "identifier: b [4592,4593]"
    },
    {
      "src": "(: ( [7148,7149]",
      "dest": "(: ( [7148,7149]"
    },
    {
      "src": "=: = [35497,35498]",
      "dest": "=: = [35500,35501]"
    },
    {
      "src": "primitive_type [18470,18477]",
      "dest": "primitive_type [18470,18477]"
    },
    {
      "src": "external: external [27176,27184]",
      "dest": "external: external [27176,27184]"
    },
    {
      "src": "parameter [8443,8450]",
      "dest": "parameter [8443,8450]"
    },
    {
      "src": "}: } [23487,23488]",
      "dest": "}: } [23487,23488]"
    },
    {
      "src": "): ) [4395,4396]",
      "dest": "): ) [4395,4396]"
    },
    {
      "src": ".: . [40610,40611]",
      "dest": ".: . [40619,40620]"
    },
    {
      "src": "type_name [7789,7796]",
      "dest": "type_name [7789,7796]"
    },
    {
      "src": "parameter [7789,7798]",
      "dest": "parameter [7789,7798]"
    },
    {
      "src": "identifier: sender [35759,35765]",
      "dest": "identifier: sender [35762,35768]"
    },
    {
      "src": "event_paramater [35094,35109]",
      "dest": "event_paramater [35097,35112]"
    },
    {
      "src": "{: { [4942,4943]",
      "dest": "{: { [4942,4943]"
    },
    {
      "src": "memory: memory [41146,41152]",
      "dest": "memory: memory [41155,41161]"
    },
    {
      "src": ".: . [36777,36778]",
      "dest": ".: . [36780,36781]"
    },
    {
      "src": "string_literal [41253,41285]",
      "dest": "string_literal [41262,41294]"
    },
    {
      "src": "assignment_expression [40724,40773]",
      "dest": "assignment_expression [40733,40782]"
    },
    {
      "src": "parameter [4618,4622]",
      "dest": "parameter [4618,4622]"
    },
    {
      "src": "address: address [34824,34831]",
      "dest": "address: address [34827,34834]"
    },
    {
      "src": "comment: // address of ERC20 token to pay [34222,34254]",
      "dest": "comment: // address of ERC20 token to pay [34225,34257]"
    },
    {
      "src": ",: , [2364,2365]",
      "dest": ",: , [2364,2365]"
    },
    {
      "src": "binary_expression [38489,38506]",
      "dest": "binary_expression [38492,38509]"
    },
    {
      "src": "identifier: getCopyright [40194,40206]",
      "dest": "identifier: getCopyright [40206,40218]"
    },
    {
      "src": ",: , [17892,17893]",
      "dest": ",: , [17892,17893]"
    },
    {
      "src": "identifier: functionDelegateCall [20139,20159]",
      "dest": "identifier: functionDelegateCall [20139,20159]"
    },
    {
      "src": "=: = [36938,36939]",
      "dest": "=: = [36941,36942]"
    },
    {
      "src": "}: } [19836,19837]",
      "dest": "}: } [19836,19837]"
    },
    {
      "src": "call_argument [38807,38821]",
      "dest": "call_argument [38810,38824]"
    },
    {
      "src": "identifier: abi [22317,22320]",
      "dest": "identifier: abi [22317,22320]"
    },
    {
      "src": "member_expression [40323,40383]",
      "dest": "member_expression [40332,40392]"
    },
    {
      "src": "identifier: functionStaticCall [19033,19051]",
      "dest": "identifier: functionStaticCall [19033,19051]"
    },
    {
      "src": "type_cast_expression [37673,37686]",
      "dest": "type_cast_expression [37676,37689]"
    },
    {
      "src": "function_definition [14342,14762]",
      "dest": "function_definition [14342,14762]"
    },
    {
      "src": "type_name [39695,39700]",
      "dest": "type_name [39698,39703]"
    },
    {
      "src": "comment: /**      * @dev Returns the substraction of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [4412,4551]",
      "dest": "comment: /**      * @dev Returns the substraction of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [4412,4551]"
    },
    {
      "src": "state_mutability [6232,6236]",
      "dest": "state_mutability [6232,6236]"
    },
    {
      "src": "binary_expression [5877,5883]",
      "dest": "binary_expression [5877,5883]"
    },
    {
      "src": "call_expression [36491,36715]",
      "dest": "call_expression [36494,36718]"
    },
    {
      "src": "primitive_type [5813,5820]",
      "dest": "primitive_type [5813,5820]"
    },
    {
      "src": "identifier: tokenAddress [36467,36479]",
      "dest": "identifier: tokenAddress [36470,36482]"
    },
    {
      "src": "parameter [39695,39714]",
      "dest": "parameter [39698,39717]"
    },
    {
      "src": "type_name [37189,37193]",
      "dest": "type_name [37192,37196]"
    },
    {
      "src": "}: } [41070,41071]",
      "dest": "}: } [41079,41080]"
    },
    {
      "src": "(: ( [819,820]",
      "dest": "(: ( [819,820]"
    },
    {
      "src": "returns: returns [11575,11582]",
      "dest": "returns: returns [11575,11582]"
    },
    {
      "src": "binary_expression [35844,35859]",
      "dest": "binary_expression [35847,35862]"
    },
    {
      "src": "identifier: erc721AddressWithCopyright [39321,39347]",
      "dest": "identifier: erc721AddressWithCopyright [39324,39350]"
    },
    {
      "src": "call_expression [3266,3339]",
      "dest": "call_expression [3266,3339]"
    },
    {
      "src": "expression_statement [32830,32853]",
      "dest": "expression_statement [32833,32856]"
    },
    {
      "src": "primitive_type [4573,4580]",
      "dest": "primitive_type [4573,4580]"
    },
    {
      "src": ",: , [24553,24554]",
      "dest": ",: , [24553,24554]"
    },
    {
      "src": "parameter [11893,11906]",
      "dest": "parameter [11893,11906]"
    },
    {
      "src": "visibility [6223,6231]",
      "dest": "visibility [6223,6231]"
    },
    {
      "src": "type_name [22446,22453]",
      "dest": "type_name [22446,22453]"
    },
    {
      "src": ",: , [35565,35566]",
      "dest": ",: , [35568,35569]"
    },
    {
      "src": "identifier: allowance [23622,23631]",
      "dest": "identifier: allowance [23622,23631]"
    },
    {
      "src": "identifier: nonReentrant [35635,35647]",
      "dest": "identifier: nonReentrant [35638,35650]"
    },
    {
      "src": "if_statement [5873,5903]",
      "dest": "if_statement [5873,5903]"
    },
    {
      "src": "expression_statement [40592,40618]",
      "dest": "expression_statement [40601,40627]"
    },
    {
      "src": "identifier: copyright [40323,40332]",
      "dest": "identifier: copyright [40332,40341]"
    },
    {
      "src": "number_literal: 0 [40387,40388]",
      "dest": "number_literal: 0 [40396,40397]"
    },
    {
      "src": "comment: // File: contracts/Dependencies/Context.sol [0,43]",
      "dest": "comment: // File: contracts/Dependencies/Context.sol [0,43]"
    },
    {
      "src": ",: , [29119,29120]",
      "dest": ",: , [29119,29120]"
    },
    {
      "src": "(: ( [21138,21139]",
      "dest": "(: ( [21138,21139]"
    },
    {
      "src": "identifier: author [30849,30855]",
      "dest": "identifier: author [30855,30861]"
    },
    {
      "src": "function_definition [23790,24121]",
      "dest": "function_definition [23790,24121]"
    },
    {
      "src": "call_expression [23910,23949]",
      "dest": "call_expression [23910,23949]"
    },
    {
      "src": "function_definition [39191,39517]",
      "dest": "function_definition [39194,39520]"
    },
    {
      "src": "identifier: HasCopyright [40041,40053]",
      "dest": "identifier: HasCopyright721 [40044,40059]"
    },
    {
      "src": "returns: returns [16919,16926]",
      "dest": "returns: returns [16919,16926]"
    },
    {
      "src": "inheritance_specifier [26215,26222]",
      "dest": "inheritance_specifier [26215,26222]"
    },
    {
      "src": "visibility [14379,14387]",
      "dest": "visibility [14379,14387]"
    },
    {
      "src": ",: , [23462,23463]",
      "dest": ",: , [23462,23463]"
    },
    {
      "src": "==: == [37592,37594]",
      "dest": "==: == [37595,37597]"
    },
    {
      "src": "contract_declaration [655,1047]",
      "dest": "contract_declaration [655,1047]"
    },
    {
      "src": "type_name [26533,26540]",
      "dest": "type_name [26533,26540]"
    },
    {
      "src": "call_argument [33359,33378]",
      "dest": "call_argument [33362,33381]"
    },
    {
      "src": "call_argument [36353,36354]",
      "dest": "call_argument [36356,36357]"
    },
    {
      "src": "comment: /**      * @dev Returns the addition of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [4085,4220]",
      "dest": "comment: /**      * @dev Returns the addition of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [4085,4220]"
    },
    {
      "src": "primitive_type [33841,33845]",
      "dest": "primitive_type [33844,33848]"
    },
    {
      "src": "member_expression [39849,39868]",
      "dest": "member_expression [39852,39871]"
    },
    {
      "src": "parameter [39755,39772]",
      "dest": "parameter [39758,39775]"
    },
    {
      "src": "}: } [34430,34431]",
      "dest": "}: } [34433,34434]"
    },
    {
      "src": "identifier: ReentrancyGuard [33799,33814]",
      "dest": "identifier: ReentrancyGuard [33802,33817]"
    },
    {
      "src": "member_expression [23727,23740]",
      "dest": "member_expression [23727,23740]"
    },
    {
      "src": "): ) [38700,38701]",
      "dest": "): ) [38703,38704]"
    },
    {
      "src": "call_argument [23961,24004]",
      "dest": "call_argument [23961,24004]"
    },
    {
      "src": "identifier: size [14700,14704]",
      "dest": "identifier: size [14700,14704]"
    },
    {
      "src": "assignment_expression [37026,37062]",
      "dest": "assignment_expression [37029,37065]"
    },
    {
      "src": "/: / [10009,10010]",
      "dest": "/: / [10009,10010]"
    },
    {
      "src": "returns: returns [30948,30955]",
      "dest": "returns: returns [30954,30961]"
    },
    {
      "src": ",: , [22518,22519]",
      "dest": ",: , [22518,22519]"
    },
    {
      "src": "): ) [17019,17020]",
      "dest": "): ) [17019,17020]"
    },
    {
      "src": "primitive_type [4242,4249]",
      "dest": "primitive_type [4242,4249]"
    },
    {
      "src": "primitive_type [16928,16933]",
      "dest": "primitive_type [16928,16933]"
    },
    {
      "src": "if: if [4341,4343]",
      "dest": "if: if [4341,4343]"
    },
    {
      "src": "true [5293,5297]",
      "dest": "true [5293,5297]"
    },
    {
      "src": "parameter [18376,18389]",
      "dest": "parameter [18376,18389]"
    },
    {
      "src": "identifier: a [7149,7150]",
      "dest": "identifier: a [7149,7150]"
    },
    {
      "src": "identifier: returndata [18715,18725]",
      "dest": "identifier: returndata [18715,18725]"
    },
    {
      "src": ".: . [20744,20745]",
      "dest": ".: . [20744,20745]"
    },
    {
      "src": "address: address [13056,13063]",
      "dest": "address: address [13056,13063]"
    },
    {
      "src": "expression_statement [19554,19622]",
      "dest": "expression_statement [19554,19622]"
    },
    {
      "src": "uint256: uint256 [7823,7830]",
      "dest": "uint256: uint256 [7823,7830]"
    },
    {
      "src": "identifier: token [23252,23257]",
      "dest": "identifier: token [23252,23257]"
    },
    {
      "src": "variable_declaration_tuple [18687,18726]",
      "dest": "variable_declaration_tuple [18687,18726]"
    },
    {
      "src": "tuple_expression [40530,40568]",
      "dest": "tuple_expression [40539,40577]"
    },
    {
      "src": "call_argument [37901,37909]",
      "dest": "call_argument [37904,37912]"
    },
    {
      "src": ",: , [34548,34549]",
      "dest": ",: , [34551,34552]"
    },
    {
      "src": "identifier: _owner [3376,3382]",
      "dest": "identifier: _owner [3376,3382]"
    },
    {
      "src": "number_literal: 0 [5579,5580]",
      "dest": "number_literal: 0 [5579,5580]"
    },
    {
      "src": ",: , [19167,19168]",
      "dest": ",: , [19167,19168]"
    },
    {
      "src": "binary_expression [18470,18500]",
      "dest": "binary_expression [18470,18500]"
    },
    {
      "src": "call_argument [39135,39156]",
      "dest": "call_argument [39138,39159]"
    },
    {
      "src": "(: ( [22339,22340]",
      "dest": "(: ( [22339,22340]"
    },
    {
      "src": "type_name [22255,22262]",
      "dest": "type_name [22255,22262]"
    },
    {
      "src": "string_literal [20582,20622]",
      "dest": "string_literal [20582,20622]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [21276,21323]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [21276,21323]"
    },
    {
      "src": "): ) [4653,4654]",
      "dest": "): ) [4653,4654]"
    },
    {
      "src": "member_expression [24962,24989]",
      "dest": "member_expression [24962,24989]"
    },
    {
      "src": "type_name [6708,6715]",
      "dest": "type_name [6708,6715]"
    },
    {
      "src": "identifier: payTokenAddress [36079,36094]",
      "dest": "identifier: payTokenAddress [36082,36097]"
    },
    {
      "src": "string_literal [18582,18613]",
      "dest": "string_literal [18582,18613]"
    },
    {
      "src": "): ) [2363,2364]",
      "dest": "): ) [2363,2364]"
    },
    {
      "src": "call_expression [17959,18046]",
      "dest": "call_expression [17959,18046]"
    },
    {
      "src": "=: = [23614,23615]",
      "dest": "=: = [23614,23615]"
    },
    {
      "src": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [5949,6182]",
      "dest": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [5949,6182]"
    },
    {
      "src": "primitive_type [14610,14617]",
      "dest": "primitive_type [14610,14617]"
    },
    {
      "src": "parameter [30694,30713]",
      "dest": "parameter [30694,30713]"
    },
    {
      "src": "uint: uint [39734,39738]",
      "dest": "uint: uint [39737,39741]"
    },
    {
      "src": "pragma: pragma [108,114]",
      "dest": "pragma: pragma [108,114]"
    },
    {
      "src": "(: ( [41101,41102]",
      "dest": "(: ( [41110,41111]"
    },
    {
      "src": "if_statement [39845,40029]",
      "dest": "if_statement [39848,40032]"
    },
    {
      "src": "function_definition [25993,26069]",
      "dest": "function_definition [25993,26069]"
    },
    {
      "src": "primitive_type [11893,11900]",
      "dest": "primitive_type [11893,11900]"
    },
    {
      "src": "primitive_type [5526,5530]",
      "dest": "primitive_type [5526,5530]"
    },
    {
      "src": "call_argument [7851,7856]",
      "dest": "call_argument [7851,7856]"
    },
    {
      "src": "identifier: safeTransferFrom [38906,38922]",
      "dest": "identifier: safeTransferFrom [38909,38925]"
    },
    {
      "src": "call_argument [10797,10802]",
      "dest": "call_argument [10797,10802]"
    },
    {
      "src": "payable: payable [749,756]",
      "dest": "payable: payable [749,756]"
    },
    {
      "src": "tuple_expression [5264,5274]",
      "dest": "tuple_expression [5264,5274]"
    },
    {
      "src": "primitive_type [37595,37602]",
      "dest": "primitive_type [37598,37605]"
    },
    {
      "src": "type_name [20448,20455]",
      "dest": "type_name [20448,20455]"
    },
    {
      "src": "indexed: indexed [26769,26776]",
      "dest": "indexed: indexed [26769,26776]"
    },
    {
      "src": "identifier: target [18729,18735]",
      "dest": "identifier: target [18729,18735]"
    },
    {
      "src": "type_name [35608,35612]",
      "dest": "type_name [35611,35615]"
    },
    {
      "src": "identifier: returndata_size [21377,21392]",
      "dest": "identifier: returndata_size [21377,21392]"
    },
    {
      "src": "string [18502,18542]",
      "dest": "string [18502,18542]"
    },
    {
      "src": "(: ( [40888,40889]",
      "dest": "(: ( [40897,40898]"
    },
    {
      "src": "): ) [12674,12675]",
      "dest": "): ) [12674,12675]"
    },
    {
      "src": "variable_declaration_statement [40041,40116]",
      "dest": "variable_declaration_statement [40044,40125]"
    },
    {
      "src": "identifier: size [14618,14622]",
      "dest": "identifier: size [14618,14622]"
    },
    {
      "src": "address: address [26936,26943]",
      "dest": "address: address [26936,26943]"
    },
    {
      "src": "-: - [9170,9171]",
      "dest": "-: - [9170,9171]"
    },
    {
      "src": "call_argument [38132,38159]",
      "dest": "call_argument [38135,38162]"
    },
    {
      "src": "identifier: isContract [18562,18572]",
      "dest": "identifier: isContract [18562,18572]"
    },
    {
      "src": "primitive_type [30694,30699]",
      "dest": "primitive_type [30694,30699]"
    },
    {
      "src": "identifier: _orderID [39624,39632]",
      "dest": "identifier: _orderID [39627,39635]"
    },
    {
      "src": "call_argument [17989,17993]",
      "dest": "call_argument [17989,17993]"
    },
    {
      "src": "assignment_expression [40628,40713]",
      "dest": "assignment_expression [40637,40722]"
    },
    {
      "src": "if_statement [40319,40580]",
      "dest": "if_statement [40328,40589]"
    },
    {
      "src": ".: . [24976,24977]",
      "dest": ".: . [24976,24977]"
    },
    {
      "src": "{: { [1648,1649]",
      "dest": "{: { [1648,1649]"
    },
    {
      "src": ",: , [8476,8477]",
      "dest": ",: , [8476,8477]"
    },
    {
      "src": "(: ( [35152,35153]",
      "dest": "(: ( [35155,35156]"
    },
    {
      "src": "identifier: ask [35540,35543]",
      "dest": "identifier: ask [35543,35546]"
    },
    {
      "src": "function_body [20121,20224]",
      "dest": "function_body [20121,20224]"
    },
    {
      "src": "type_name [4293,4300]",
      "dest": "type_name [4293,4300]"
    },
    {
      "src": "): ) [708,709]",
      "dest": "): ) [708,709]"
    },
    {
      "src": "function: function [14342,14350]",
      "dest": "function: function [14342,14350]"
    },
    {
      "src": "type_name [40819,40826]",
      "dest": "type_name [40828,40835]"
    },
    {
      "src": ",: , [18000,18001]",
      "dest": ",: , [18000,18001]"
    },
    {
      "src": "identifier: nonReentrant [33253,33265]",
      "dest": "identifier: nonReentrant [33256,33268]"
    },
    {
      "src": "}: } [20840,20841]",
      "dest": "}: } [20840,20841]"
    },
    {
      "src": "variable_declaration [23593,23613]",
      "dest": "variable_declaration [23593,23613]"
    },
    {
      "src": ",: , [19476,19477]",
      "dest": ",: , [19476,19477]"
    },
    {
      "src": "if: if [5552,5554]",
      "dest": "if: if [5552,5554]"
    },
    {
      "src": ">=: >= [15809,15811]",
      "dest": ">=: >= [15809,15811]"
    },
    {
      "src": "call_expression [9961,9989]",
      "dest": "call_expression [9961,9989]"
    },
    {
      "src": "): ) [38821,38822]",
      "dest": "): ) [38824,38825]"
    },
    {
      "src": "parameter [6212,6221]",
      "dest": "parameter [6212,6221]"
    },
    {
      "src": "identifier: init [35148,35152]",
      "dest": "identifier: init [35151,35155]"
    },
    {
      "src": "type_name [33953,33960]",
      "dest": "type_name [33956,33963]"
    },
    {
      "src": "identifier: recipient [11539,11548]",
      "dest": "identifier: recipient [11539,11548]"
    },
    {
      "src": "(: ( [38099,38100]",
      "dest": "(: ( [38102,38103]"
    },
    {
      "src": "(: ( [2878,2879]",
      "dest": "(: ( [2878,2879]"
    },
    {
      "src": "type_name [11893,11900]",
      "dest": "type_name [11893,11900]"
    },
    {
      "src": "primitive_type [4933,4940]",
      "dest": "primitive_type [4933,4940]"
    },
    {
      "src": "member_expression [22520,22542]",
      "dest": "member_expression [22520,22542]"
    },
    {
      "src": "(: ( [18561,18562]",
      "dest": "(: ( [18561,18562]"
    },
    {
      "src": ",: , [7856,7857]",
      "dest": ",: , [7856,7857]"
    },
    {
      "src": "identifier: functionDelegateCall [20427,20447]",
      "dest": "identifier: functionDelegateCall [20427,20447]"
    },
    {
      "src": "identifier: _newOwner [35463,35472]",
      "dest": "identifier: _newOwner [35466,35475]"
    },
    {
      "src": "call_expression [24962,25031]",
      "dest": "call_expression [24962,25031]"
    },
    {
      "src": "address: address [34124,34131]",
      "dest": "address: address [34127,34134]"
    },
    {
      "src": "internal: internal [3246,3254]",
      "dest": "internal: internal [3246,3254]"
    },
    {
      "src": "identifier: returndata [20903,20913]",
      "dest": "identifier: returndata [20903,20913]"
    },
    {
      "src": "state_mutability [7111,7115]",
      "dest": "state_mutability [7111,7115]"
    },
    {
      "src": "(: ( [20159,20160]",
      "dest": "(: ( [20159,20160]"
    },
    {
      "src": "identifier: sender [37915,37921]",
      "dest": "identifier: sender [37918,37924]"
    },
    {
      "src": "bool: bool [4927,4931]",
      "dest": "bool: bool [4927,4931]"
    },
    {
      "src": ",: , [13327,13328]",
      "dest": ",: , [13327,13328]"
    },
    {
      "src": "event_paramater [34671,34685]",
      "dest": "event_paramater [34674,34688]"
    },
    {
      "src": "return_statement [14739,14755]",
      "dest": "return_statement [14739,14755]"
    },
    {
      "src": "uint256: uint256 [6674,6681]",
      "dest": "uint256: uint256 [6674,6681]"
    },
    {
      "src": "(: ( [39979,39980]",
      "dest": "(: ( [39982,39983]"
    },
    {
      "src": "identifier: order [38179,38184]",
      "dest": "identifier: order [38182,38187]"
    },
    {
      "src": "member_expression [40168,40206]",
      "dest": "member_expression [40180,40218]"
    },
    {
      "src": "visibility [22473,22481]",
      "dest": "visibility [22473,22481]"
    },
    {
      "src": "identifier: msg [36995,36998]",
      "dest": "identifier: msg [36998,37001]"
    },
    {
      "src": "identifier: target [18573,18579]",
      "dest": "identifier: target [18573,18579]"
    },
    {
      "src": "identifier: transferFrom [13027,13039]",
      "dest": "identifier: transferFrom [13027,13039]"
    },
    {
      "src": "visibility [29344,29352]",
      "dest": "visibility [29344,29352]"
    },
    {
      "src": "expression_statement [35836,35905]",
      "dest": "expression_statement [35839,35908]"
    },
    {
      "src": "identifier: safeTransfer [22216,22228]",
      "dest": "identifier: safeTransfer [22216,22228]"
    },
    {
      "src": "external: external [26951,26959]",
      "dest": "external: external [26951,26959]"
    },
    {
      "src": "type_name [35111,35115]",
      "dest": "type_name [35114,35118]"
    },
    {
      "src": "}: } [21584,21585]",
      "dest": "}: } [21584,21585]"
    },
    {
      "src": "virtual: virtual [2808,2815]",
      "dest": "virtual: virtual [2808,2815]"
    },
    {
      "src": "call_argument [38668,38678]",
      "dest": "call_argument [38671,38681]"
    },
    {
      "src": "{: { [867,868]",
      "dest": "{: { [867,868]"
    },
    {
      "src": "): ) [5562,5563]",
      "dest": "): ) [5562,5563]"
    },
    {
      "src": "variable_declaration_statement [39295,39348]",
      "dest": "variable_declaration_statement [39298,39351]"
    },
    {
      "src": "internal: internal [23867,23875]",
      "dest": "internal: internal [23867,23875]"
    },
    {
      "src": "private: private [32771,32778]",
      "dest": "private: private [32774,32781]"
    },
    {
      "src": "primitive_type [26383,26390]",
      "dest": "primitive_type [26383,26390]"
    },
    {
      "src": ",: , [21448,21449]",
      "dest": ",: , [21448,21449]"
    },
    {
      "src": "event_paramater [34656,34669]",
      "dest": "event_paramater [34659,34672]"
    },
    {
      "src": "identifier: OwnershipTransferred [3355,3375]",
      "dest": "identifier: OwnershipTransferred [3355,3375]"
    },
    {
      "src": "uint256: uint256 [11948,11955]",
      "dest": "uint256: uint256 [11948,11955]"
    },
    {
      "src": "member_expression [37625,37660]",
      "dest": "member_expression [37628,37663]"
    },
    {
      "src": ",: , [23959,23960]",
      "dest": ",: , [23959,23960]"
    },
    {
      "src": "call_argument [23954,23959]",
      "dest": "call_argument [23954,23959]"
    },
    {
      "src": "}: } [18053,18054]",
      "dest": "}: } [18053,18054]"
    },
    {
      "src": "internal: internal [22270,22278]",
      "dest": "internal: internal [22270,22278]"
    },
    {
      "src": "identifier: _orderID [37090,37098]",
      "dest": "identifier: _orderID [37093,37101]"
    },
    {
      "src": "expression_statement [37837,37874]",
      "dest": "expression_statement [37840,37877]"
    },
    {
      "src": "call_struct_argument [36124,36148]",
      "dest": "call_struct_argument [36127,36151]"
    },
    {
      "src": "(: ( [35234,35235]",
      "dest": "(: ( [35237,35238]"
    },
    {
      "src": "\": \" [35780,35781]",
      "dest": "\": \" [35783,35784]"
    },
    {
      "src": "(: ( [5480,5481]",
      "dest": "(: ( [5480,5481]"
    },
    {
      "src": "parameter [22458,22471]",
      "dest": "parameter [22458,22471]"
    },
    {
      "src": "visibility [2801,2807]",
      "dest": "visibility [2801,2807]"
    },
    {
      "src": "primitive_type [13544,13551]",
      "dest": "primitive_type [13544,13551]"
    },
    {
      "src": "): ) [18613,18614]",
      "dest": "): ) [18613,18614]"
    },
    {
      "src": "): ) [18542,18543]",
      "dest": "): ) [18542,18543]"
    },
    {
      "src": "identifier: _status [32779,32786]",
      "dest": "identifier: _status [32782,32789]"
    },
    {
      "src": "call_argument [36614,36624]",
      "dest": "call_argument [36617,36627]"
    },
    {
      "src": "binary_expression [40323,40401]",
      "dest": "binary_expression [40332,40410]"
    },
    {
      "src": "primitive_type [35391,35398]",
      "dest": "primitive_type [35394,35401]"
    },
    {
      "src": "identifier: require [35703,35710]",
      "dest": "identifier: require [35706,35713]"
    },
    {
      "src": "type_name [20529,20534]",
      "dest": "type_name [20529,20534]"
    },
    {
      "src": ",: , [23471,23472]",
      "dest": ",: , [23471,23472]"
    },
    {
      "src": "private: private [32677,32684]",
      "dest": "private: private [32680,32687]"
    },
    {
      "src": "call_expression [24043,24112]",
      "dest": "call_expression [24043,24112]"
    },
    {
      "src": "type_name [9050,9056]",
      "dest": "type_name [9050,9056]"
    },
    {
      "src": "function: function [39649,39657]",
      "dest": "function: function [39652,39660]"
    },
    {
      "src": "identifier: _callOptionalReturn [23677,23696]",
      "dest": "identifier: _callOptionalReturn [23677,23696]"
    },
    {
      "src": "return_statement [19135,19216]",
      "dest": "return_statement [19135,19216]"
    },
    {
      "src": "string [41006,41062]",
      "dest": "string [41015,41071]"
    },
    {
      "src": "address: address [26341,26348]",
      "dest": "address: address [26341,26348]"
    },
    {
      "src": "internal: internal [18419,18427]",
      "dest": "internal: internal [18419,18427]"
    },
    {
      "src": "expression_statement [33671,33694]",
      "dest": "expression_statement [33674,33697]"
    },
    {
      "src": "}: } [9180,9181]",
      "dest": "}: } [9180,9181]"
    },
    {
      "src": "uint256: uint256 [32717,32724]",
      "dest": "uint256: uint256 [32720,32727]"
    },
    {
      "src": "identifier: data [20083,20087]",
      "dest": "identifier: data [20083,20087]"
    },
    {
      "src": "function: function [30625,30633]",
      "dest": "function: function [30625,30633]"
    },
    {
      "src": "identifier: returndata [20724,20734]",
      "dest": "identifier: returndata [20724,20734]"
    },
    {
      "src": "bool: bool [13109,13113]",
      "dest": "bool: bool [13109,13113]"
    },
    {
      "src": "(: ( [15715,15716]",
      "dest": "(: ( [15715,15716]"
    },
    {
      "src": "): ) [37012,37013]",
      "dest": "): ) [37015,37016]"
    },
    {
      "src": "identifier: _verifyCallResult [19777,19794]",
      "dest": "identifier: _verifyCallResult [19777,19794]"
    },
    {
      "src": "type_name [32669,32676]",
      "dest": "type_name [32672,32679]"
    },
    {
      "src": "type_name [23887,23894]",
      "dest": "type_name [23887,23894]"
    },
    {
      "src": "return_type_definition [2158,2175]",
      "dest": "return_type_definition [2158,2175]"
    },
    {
      "src": "comment: /**      * @dev Deprecated. This function has issues similar to the ones found in      * {IERC20-approve}, and its usage is discouraged.      *      * Whenever possible, use {safeIncreaseAllowance} and      * {safeDecreaseAllowance} instead.      */ [22605,22860]",
      "dest": "comment: /**      * @dev Deprecated. This function has issues similar to the ones found in      * {IERC20-approve}, and its usage is discouraged.      *      * Whenever possible, use {safeIncreaseAllowance} and      * {safeDecreaseAllowance} instead.      */ [22605,22860]"
    },
    {
      "src": ".: . [40895,40896]",
      "dest": ".: . [40904,40905]"
    },
    {
      "src": "identifier: fixedPrice [39824,39834]",
      "dest": "identifier: fixedPrice [39827,39837]"
    },
    {
      "src": "comment: // transaction's gas, it is best to keep them low in cases like this one, to [32516,32592]",
      "dest": "comment: // transaction's gas, it is best to keep them low in cases like this one, to [32519,32595]"
    },
    {
      "src": "address: address [34550,34557]",
      "dest": "address: address [34553,34560]"
    },
    {
      "src": "parameter [23558,23571]",
      "dest": "parameter [23558,23571]"
    },
    {
      "src": "identifier: sendValue [15706,15715]",
      "dest": "identifier: sendValue [15706,15715]"
    },
    {
      "src": "): ) [26605,26606]",
      "dest": "): ) [26605,26606]"
    },
    {
      "src": "return: return [40523,40529]",
      "dest": "return: return [40532,40538]"
    },
    {
      "src": "parameter [11275,11282]",
      "dest": "parameter [11275,11282]"
    },
    {
      "src": "call_argument [36772,36790]",
      "dest": "call_argument [36775,36793]"
    },
    {
      "src": "internal: internal [8420,8428]",
      "dest": "internal: internal [8420,8428]"
    },
    {
      "src": "): ) [21160,21161]",
      "dest": "): ) [21160,21161]"
    },
    {
      "src": "uint256: uint256 [5813,5820]",
      "dest": "uint256: uint256 [5813,5820]"
    },
    {
      "src": "): ) [36543,36544]",
      "dest": "): ) [36546,36547]"
    },
    {
      "src": "identifier: b [4701,4702]",
      "dest": "identifier: b [4701,4702]"
    },
    {
      "src": "number_literal: 2 [32753,32754]",
      "dest": "number_literal: 2 [32756,32757]"
    },
    {
      "src": "parameter [29762,29776]",
      "dest": "parameter [29762,29776]"
    },
    {
      "src": "(: ( [39578,39579]",
      "dest": "(: ( [39581,39582]"
    },
    {
      "src": "pure: pure [8429,8433]",
      "dest": "pure: pure [8429,8433]"
    },
    {
      "src": "uint256: uint256 [22918,22925]",
      "dest": "uint256: uint256 [22918,22925]"
    },
    {
      "src": "{: { [10778,10779]",
      "dest": "{: { [10778,10779]"
    },
    {
      "src": "identifier: b [9129,9130]",
      "dest": "identifier: b [9129,9130]"
    },
    {
      "src": "internal: internal [41117,41125]",
      "dest": "internal: internal [41126,41134]"
    },
    {
      "src": "): ) [39556,39557]",
      "dest": "): ) [39559,39560]"
    },
    {
      "src": "identifier: success [16014,16021]",
      "dest": "identifier: success [16014,16021]"
    },
    {
      "src": "call_argument [36499,36640]",
      "dest": "call_argument [36502,36643]"
    },
    {
      "src": "variable_declaration [20711,20734]",
      "dest": "variable_declaration [20711,20734]"
    },
    {
      "src": "identifier: sender [35994,36000]",
      "dest": "identifier: sender [35997,36003]"
    },
    {
      "src": "primitive_type [3228,3235]",
      "dest": "primitive_type [3228,3235]"
    },
    {
      "src": "binary_expression [10835,10840]",
      "dest": "binary_expression [10835,10840]"
    },
    {
      "src": ".: . [41218,41219]",
      "dest": ".: . [41227,41228]"
    },
    {
      "src": "struct_declaration [30813,30895]",
      "dest": "struct_declaration [30819,30901]"
    },
    {
      "src": "call_argument [40095,40114]",
      "dest": "call_argument [40104,40123]"
    },
    {
      "src": "returns: returns [30016,30023]",
      "dest": "returns: returns [30016,30023]"
    },
    {
      "src": "primitive_type [34984,34991]",
      "dest": "primitive_type [34987,34994]"
    },
    {
      "src": "identifier: _msgSender [697,707]",
      "dest": "identifier: _msgSender [697,707]"
    },
    {
      "src": ",: , [9974,9975]",
      "dest": ",: , [9974,9975]"
    },
    {
      "src": "call_argument [3274,3296]",
      "dest": "call_argument [3274,3296]"
    },
    {
      "src": "): ) [4902,4903]",
      "dest": "): ) [4902,4903]"
    },
    {
      "src": "binary_expression [3274,3296]",
      "dest": "binary_expression [3274,3296]"
    },
    {
      "src": ".: . [25056,25057]",
      "dest": ".: . [25056,25057]"
    },
    {
      "src": "): ) [37947,37948]",
      "dest": "): ) [37950,37951]"
    },
    {
      "src": "(: ( [6735,6736]",
      "dest": "(: ( [6735,6736]"
    },
    {
      "src": "event_paramater [13329,13347]",
      "dest": "event_paramater [13329,13347]"
    },
    {
      "src": "visibility [35626,35634]",
      "dest": "visibility [35629,35637]"
    },
    {
      "src": "member_expression [36614,36624]",
      "dest": "member_expression [36617,36627]"
    },
    {
      "src": "identifier: _orderID [37270,37278]",
      "dest": "identifier: _orderID [37273,37281]"
    },
    {
      "src": "(: ( [22512,22513]",
      "dest": "(: ( [22512,22513]"
    },
    {
      "src": "(: ( [35718,35719]",
      "dest": "(: ( [35721,35722]"
    },
    {
      "src": "(: ( [5244,5245]",
      "dest": "(: ( [5244,5245]"
    },
    {
      "src": "type_name [5802,5809]",
      "dest": "type_name [5802,5809]"
    },
    {
      "src": "function: function [27931,27939]",
      "dest": "function: function [27931,27939]"
    },
    {
      "src": "return: return [769,775]",
      "dest": "return: return [769,775]"
    },
    {
      "src": "member_expression [39003,39031]",
      "dest": "member_expression [39006,39034]"
    },
    {
      "src": "number_literal: 0 [23245,23246]",
      "dest": "number_literal: 0 [23245,23246]"
    },
    {
      "src": "emit: emit [36728,36732]",
      "dest": "emit: emit [36731,36735]"
    },
    {
      "src": "variable_declaration_statement [37235,37280]",
      "dest": "variable_declaration_statement [37238,37283]"
    },
    {
      "src": "identifier: _erc721AddressWithCopyright [39481,39508]",
      "dest": "identifier: _erc721AddressWithCopyright [39484,39511]"
    },
    {
      "src": "): ) [5201,5202]",
      "dest": "): ) [5201,5202]"
    },
    {
      "src": "\": \" [33380,33381]",
      "dest": "\": \" [33383,33384]"
    },
    {
      "src": "(: ( [37576,37577]",
      "dest": "(: ( [37579,37580]"
    },
    {
      "src": ",: , [19457,19458]",
      "dest": ",: , [19457,19458]"
    },
    {
      "src": "identifier: a [6278,6279]",
      "dest": "identifier: a [6278,6279]"
    },
    {
      "src": "call_expression [6728,6777]",
      "dest": "call_expression [6728,6777]"
    },
    {
      "src": "(: ( [4617,4618]",
      "dest": "(: ( [4617,4618]"
    },
    {
      "src": "): ) [38365,38366]",
      "dest": "): ) [38368,38369]"
    },
    {
      "src": "external: external [12676,12684]",
      "dest": "external: external [12676,12684]"
    },
    {
      "src": "identifier: add [23656,23659]",
      "dest": "identifier: add [23656,23659]"
    },
    {
      "src": "library: library [13732,13739]",
      "dest": "library: library [13732,13739]"
    },
    {
      "src": "indexed: indexed [26541,26548]",
      "dest": "indexed: indexed [26541,26548]"
    },
    {
      "src": "external: external [30002,30010]",
      "dest": "external: external [30002,30010]"
    },
    {
      "src": "call_argument [24043,24112]",
      "dest": "call_argument [24043,24112]"
    },
    {
      "src": "call_argument [35844,35859]",
      "dest": "call_argument [35847,35862]"
    },
    {
      "src": "identifier: currentOrderID [36283,36297]",
      "dest": "identifier: currentOrderID [36286,36300]"
    },
    {
      "src": "identifier: require [41205,41212]",
      "dest": "identifier: require [41214,41221]"
    },
    {
      "src": "parameter [4573,4582]",
      "dest": "parameter [4573,4582]"
    },
    {
      "src": "function_definition [3075,3192]",
      "dest": "function_definition [3075,3192]"
    },
    {
      "src": "parameter [12694,12698]",
      "dest": "parameter [12694,12698]"
    },
    {
      "src": "): ) [20941,20942]",
      "dest": "): ) [20941,20942]"
    },
    {
      "src": "identifier: c [5245,5246]",
      "dest": "identifier: c [5245,5246]"
    },
    {
      "src": "identifier: transferFrom [22549,22561]",
      "dest": "identifier: transferFrom [22549,22561]"
    },
    {
      "src": "): ) [2320,2321]",
      "dest": "): ) [2320,2321]"
    },
    {
      "src": "identifier: returndata [18806,18816]",
      "dest": "identifier: returndata [18806,18816]"
    },
    {
      "src": "call_struct_argument [35982,36000]",
      "dest": "call_struct_argument [35985,36003]"
    },
    {
      "src": "(: ( [35398,35399]",
      "dest": "(: ( [35401,35402]"
    },
    {
      "src": "primitive_type [19443,19450]",
      "dest": "primitive_type [19443,19450]"
    },
    {
      "src": ".: . [40755,40756]",
      "dest": ".: . [40764,40765]"
    },
    {
      "src": "identifier: b [8417,8418]",
      "dest": "identifier: b [8417,8418]"
    },
    {
      "src": "identifier: operator [29752,29760]",
      "dest": "identifier: operator [29752,29760]"
    },
    {
      "src": "identifier: author [40561,40567]",
      "dest": "identifier: author [40570,40576]"
    },
    {
      "src": "parameter [20464,20481]",
      "dest": "parameter [20464,20481]"
    },
    {
      "src": "): ) [40712,40713]",
      "dest": "): ) [40721,40722]"
    },
    {
      "src": "identifier: supportsInterface [26002,26019]",
      "dest": "identifier: supportsInterface [26002,26019]"
    },
    {
      "src": "primitive_type [9879,9886]",
      "dest": "primitive_type [9879,9886]"
    },
    {
      "src": "comment: // File: contracts/Dependencies/IERC721.sol [26076,26119]",
      "dest": "comment: // File: contracts/Dependencies/IERC721.sol [26076,26119]"
    },
    {
      "src": "visibility [35209,35215]",
      "dest": "visibility [35212,35218]"
    },
    {
      "src": "uint: uint [34614,34618]",
      "dest": "uint: uint [34617,34621]"
    },
    {
      "src": "state_mutability [20951,20955]",
      "dest": "state_mutability [20951,20955]"
    },
    {
      "src": "{: { [41159,41160]",
      "dest": "{: { [41168,41169]"
    },
    {
      "src": "identifier: _newPayTokenAddress [34750,34769]",
      "dest": "identifier: _newPayTokenAddress [34753,34772]"
    },
    {
      "src": "): ) [38258,38259]",
      "dest": "): ) [38261,38262]"
    },
    {
      "src": "identifier: require [35836,35843]",
      "dest": "identifier: require [35839,35846]"
    },
    {
      "src": ",: , [4392,4393]",
      "dest": ",: , [4392,4393]"
    },
    {
      "src": "variable_declaration_tuple [20696,20735]",
      "dest": "variable_declaration_tuple [20696,20735]"
    },
    {
      "src": "number_literal: 0 [5900,5901]",
      "dest": "number_literal: 0 [5900,5901]"
    },
    {
      "src": "number_literal: 0 [7154,7155]",
      "dest": "number_literal: 0 [7154,7155]"
    },
    {
      "src": "identifier: _status [32830,32837]",
      "dest": "identifier: _status [32833,32840]"
    },
    {
      "src": ".: . [40689,40690]",
      "dest": ".: . [40698,40699]"
    },
    {
      "src": "}: } [23781,23782]",
      "dest": "}: } [23781,23782]"
    },
    {
      "src": "address: address [26533,26540]",
      "dest": "address: address [26533,26540]"
    },
    {
      "src": "return_type_definition [29358,29384]",
      "dest": "return_type_definition [29358,29384]"
    },
    {
      "src": "(: ( [39463,39464]",
      "dest": "(: ( [39466,39467]"
    },
    {
      "src": "visibility [33926,33933]",
      "dest": "visibility [33929,33936]"
    },
    {
      "src": "type_name [10696,10703]",
      "dest": "type_name [10696,10703]"
    },
    {
      "src": "\": \" [37405,37406]",
      "dest": "\": \" [37408,37409]"
    },
    {
      "src": "user_defined_type [33799,33814]",
      "dest": "user_defined_type [33802,33817]"
    },
    {
      "src": ",: , [23758,23759]",
      "dest": ",: , [23758,23759]"
    },
    {
      "src": "identifier: author [38601,38607]",
      "dest": "identifier: author [38604,38610]"
    },
    {
      "src": "memory: memory [17322,17328]",
      "dest": "memory: memory [17322,17328]"
    },
    {
      "src": "member_expression [40207,40221]",
      "dest": "member_expression [40219,40233]"
    },
    {
      "src": "identifier: payTokenAddress [37792,37807]",
      "dest": "identifier: payTokenAddress [37795,37810]"
    },
    {
      "src": "call_argument [6310,6339]",
      "dest": "call_argument [6310,6339]"
    },
    {
      "src": "bytes: bytes [18437,18442]",
      "dest": "bytes: bytes [18437,18442]"
    },
    {
      "src": "parameter [20965,20977]",
      "dest": "parameter [20965,20977]"
    },
    {
      "src": "call_argument [39065,39073]",
      "dest": "call_argument [39068,39076]"
    },
    {
      "src": "type_name [20054,20061]",
      "dest": "type_name [20054,20061]"
    },
    {
      "src": "assignment_expression [2893,2912]",
      "dest": "assignment_expression [2893,2912]"
    },
    {
      "src": "returns: returns [11266,11273]",
      "dest": "returns: returns [11266,11273]"
    },
    {
      "src": "primitive_type [16875,16882]",
      "dest": "primitive_type [16875,16882]"
    },
    {
      "src": "{: { [9110,9111]",
      "dest": "{: { [9110,9111]"
    },
    {
      "src": "identifier: previousOwner [1729,1742]",
      "dest": "identifier: previousOwner [1729,1742]"
    },
    {
      "src": "member_expression [40741,40759]",
      "dest": "member_expression [40750,40768]"
    },
    {
      "src": "{: { [22482,22483]",
      "dest": "{: { [22482,22483]"
    },
    {
      "src": "): ) [2799,2800]",
      "dest": "): ) [2799,2800]"
    },
    {
      "src": "string_literal [35780,35824]",
      "dest": "string_literal [35783,35827]"
    },
    {
      "src": "return_type_definition [5838,5861]",
      "dest": "return_type_definition [5838,5861]"
    },
    {
      "src": "number_literal: 0 [38505,38506]",
      "dest": "number_literal: 0 [38508,38509]"
    },
    {
      "src": "): ) [18579,18580]",
      "dest": "): ) [18579,18580]"
    },
    {
      "src": ",: , [39118,39119]",
      "dest": ",: , [39121,39122]"
    },
    {
      "src": "primitive_type [29327,29334]",
      "dest": "primitive_type [29327,29334]"
    },
    {
      "src": "(: ( [11530,11531]",
      "dest": "(: ( [11530,11531]"
    },
    {
      "src": "string [41253,41285]",
      "dest": "string [41262,41294]"
    },
    {
      "src": "pragma_directive [82,106]",
      "dest": "pragma_directive [82,106]"
    },
    {
      "src": "visibility [11925,11933]",
      "dest": "visibility [11925,11933]"
    },
    {
      "src": "identifier: success [18797,18804]",
      "dest": "identifier: success [18797,18804]"
    },
    {
      "src": "uint256: uint256 [4584,4591]",
      "dest": "uint256: uint256 [4584,4591]"
    },
    {
      "src": "==: == [23242,23244]",
      "dest": "==: == [23242,23244]"
    },
    {
      "src": "(: ( [25199,25200]",
      "dest": "(: ( [25199,25200]"
    },
    {
      "src": "member_expression [40969,40981]",
      "dest": "member_expression [40978,40990]"
    },
    {
      "src": "\": \" [35270,35271]",
      "dest": "\": \" [35273,35274]"
    },
    {
      "src": "identifier: _status [33359,33366]",
      "dest": "identifier: _status [33362,33369]"
    },
    {
      "src": "member_expression [23727,23749]",
      "dest": "member_expression [23727,23749]"
    },
    {
      "src": "return_statement [20132,20217]",
      "dest": "return_statement [20132,20217]"
    },
    {
      "src": "parameter [29121,29136]",
      "dest": "parameter [29121,29136]"
    },
    {
      "src": "type_name [35094,35101]",
      "dest": "type_name [35097,35104]"
    },
    {
      "src": "identifier: returndata [24949,24959]",
      "dest": "identifier: returndata [24949,24959]"
    },
    {
      "src": "\": \" [25029,25030]",
      "dest": "\": \" [25029,25030]"
    },
    {
      "src": "identifier: _requireOrderByMaker [37290,37310]",
      "dest": "identifier: _requireOrderByMaker [37293,37313]"
    },
    {
      "src": "(: ( [20964,20965]",
      "dest": "(: ( [20964,20965]"
    },
    {
      "src": "identifier: erc721WithCopyrightCached [40259,40284]",
      "dest": "identifier: erc721WithCopyrightCached [40271,40296]"
    },
    {
      "src": "parameter [4882,4891]",
      "dest": "parameter [4882,4891]"
    },
    {
      "src": "identifier: require [23227,23234]",
      "dest": "identifier: require [23227,23234]"
    },
    {
      "src": "type_name [16891,16896]",
      "dest": "type_name [16891,16896]"
    },
    {
      "src": "identifier: call [18736,18740]",
      "dest": "identifier: call [18736,18740]"
    },
    {
      "src": "parameter [20915,20941]",
      "dest": "parameter [20915,20941]"
    },
    {
      "src": "identifier: _ENTERED [33502,33510]",
      "dest": "identifier: _ENTERED [33505,33513]"
    },
    {
      "src": "event_definition [34944,35035]",
      "dest": "event_definition [34947,35038]"
    },
    {
      "src": "event_definition [26518,26607]",
      "dest": "event_definition [26518,26607]"
    },
    {
      "src": "number_literal: 0 [10801,10802]",
      "dest": "number_literal: 0 [10801,10802]"
    },
    {
      "src": ",: , [36148,36149]",
      "dest": ",: , [36151,36152]"
    },
    {
      "src": "state_mutability [7809,7813]",
      "dest": "state_mutability [7809,7813]"
    },
    {
      "src": "type_name [5532,5539]",
      "dest": "type_name [5532,5539]"
    },
    {
      "src": "primitive_type [22255,22262]",
      "dest": "primitive_type [22255,22262]"
    },
    {
      "src": "identifier: _previousAddress [34992,35008]",
      "dest": "identifier: _previousAddress [34995,35011]"
    },
    {
      "src": "): ) [34785,34786]",
      "dest": "): ) [34788,34789]"
    },
    {
      "src": "identifier: _payTokenAddress [37923,37939]",
      "dest": "identifier: _payTokenAddress [37926,37942]"
    },
    {
      "src": "memory: memory [30967,30973]",
      "dest": "memory: memory [30973,30979]"
    },
    {
      "src": "identifier: CancelOrder [37078,37089]",
      "dest": "identifier: CancelOrder [37081,37092]"
    },
    {
      "src": "): ) [40016,40017]",
      "dest": "): ) [40019,40020]"
    },
    {
      "src": "(: ( [2862,2863]",
      "dest": "(: ( [2862,2863]"
    },
    {
      "src": "primitive_type [4882,4889]",
      "dest": "primitive_type [4882,4889]"
    },
    {
      "src": "call_argument [10804,10816]",
      "dest": "call_argument [10804,10816]"
    },
    {
      "src": "primitive_type [19695,19699]",
      "dest": "primitive_type [19695,19699]"
    },
    {
      "src": "type_name [4927,4931]",
      "dest": "type_name [4927,4931]"
    },
    {
      "src": "): ) [13605,13606]",
      "dest": "): ) [13605,13606]"
    },
    {
      "src": "identifier: require [37538,37545]",
      "dest": "identifier: require [37541,37548]"
    },
    {
      "src": "binary_expression [7212,7217]",
      "dest": "binary_expression [7212,7217]"
    },
    {
      "src": "assembly_statement [14690,14729]",
      "dest": "assembly_statement [14690,14729]"
    },
    {
      "src": ",: , [37187,37188]",
      "dest": ",: , [37190,37191]"
    },
    {
      "src": "identifier: a [5178,5179]",
      "dest": "identifier: a [5178,5179]"
    },
    {
      "src": "(: ( [23439,23440]",
      "dest": "(: ( [23439,23440]"
    },
    {
      "src": "parameter [35544,35565]",
      "dest": "parameter [35547,35568]"
    },
    {
      "src": "(: ( [18477,18478]",
      "dest": "(: ( [18477,18478]"
    },
    {
      "src": "identifier: b [5931,5932]",
      "dest": "identifier: b [5931,5932]"
    },
    {
      "src": "internal: internal [17343,17351]",
      "dest": "internal: internal [17343,17351]"
    },
    {
      "src": "number_literal: 0 [2018,2019]",
      "dest": "number_literal: 0 [2018,2019]"
    },
    {
      "src": "identifier: c [4321,4322]",
      "dest": "identifier: c [4321,4322]"
    },
    {
      "src": "true [5921,5925]",
      "dest": "true [5921,5925]"
    },
    {
      "src": "identifier: a [5606,5607]",
      "dest": "identifier: a [5606,5607]"
    },
    {
      "src": ",: , [36790,36791]",
      "dest": ",: , [36793,36794]"
    },
    {
      "src": "state_mutability [4273,4277]",
      "dest": "state_mutability [4273,4277]"
    },
    {
      "src": "assignment_expression [33671,33693]",
      "dest": "assignment_expression [33674,33696]"
    },
    {
      "src": "identifier: order [39120,39125]",
      "dest": "identifier: order [39123,39128]"
    },
    {
      "src": "identifier: _price [37194,37200]",
      "dest": "identifier: _price [37197,37203]"
    },
    {
      "src": "return: return [7271,7277]",
      "dest": "return: return [7271,7277]"
    },
    {
      "src": "array_access [36276,36298]",
      "dest": "array_access [36279,36301]"
    },
    {
      "src": "identifier: b [4648,4649]",
      "dest": "identifier: b [4648,4649]"
    },
    {
      "src": "private: private [24574,24581]",
      "dest": "private: private [24574,24581]"
    },
    {
      "src": "address: address [22243,22250]",
      "dest": "address: address [22243,22250]"
    },
    {
      "src": "parenthesized_expression [23251,23297]",
      "dest": "parenthesized_expression [23251,23297]"
    },
    {
      "src": "array_access [37837,37853]",
      "dest": "array_access [37840,37856]"
    },
    {
      "src": ",: , [23833,23834]",
      "dest": ",: , [23833,23834]"
    },
    {
      "src": "variable_declaration_statement [1912,1945]",
      "dest": "variable_declaration_statement [1912,1945]"
    },
    {
      "src": "identifier: value [18495,18500]",
      "dest": "identifier: value [18495,18500]"
    },
    {
      "src": "tuple_expression [4662,4672]",
      "dest": "tuple_expression [4662,4672]"
    },
    {
      "src": "returns: returns [26965,26972]",
      "dest": "returns: returns [26965,26972]"
    },
    {
      "src": "): ) [36962,36963]",
      "dest": "): ) [36965,36966]"
    },
    {
      "src": "primitive_type [19529,19534]",
      "dest": "primitive_type [19529,19534]"
    },
    {
      "src": "parameter [17875,17892]",
      "dest": "parameter [17875,17892]"
    },
    {
      "src": "internal: internal [9078,9086]",
      "dest": "internal: internal [9078,9086]"
    },
    {
      "src": "comment: // back. This is the compiler's defense against contract upgrades and [32155,32224]",
      "dest": "comment: // back. This is the compiler's defense against contract upgrades and [32158,32227]"
    },
    {
      "src": "identifier: value [22466,22471]",
      "dest": "identifier: value [22466,22471]"
    },
    {
      "src": "member_expression [36792,36805]",
      "dest": "member_expression [36795,36808]"
    },
    {
      "src": "identifier: b [10797,10798]",
      "dest": "identifier: b [10797,10798]"
    },
    {
      "src": "identifier: require [16006,16013]",
      "dest": "identifier: require [16006,16013]"
    },
    {
      "src": "primitive_type [39734,39738]",
      "dest": "primitive_type [39737,39741]"
    },
    {
      "src": "identifier: operator [29992,30000]",
      "dest": "identifier: operator [29992,30000]"
    },
    {
      "src": "identifier: to [22578,22580]",
      "dest": "identifier: to [22578,22580]"
    },
    {
      "src": "bool: bool [4618,4622]",
      "dest": "bool: bool [4618,4622]"
    },
    {
      "src": "returns: returns [26054,26061]",
      "dest": "returns: returns [26054,26061]"
    },
    {
      "src": "state_variable_declaration [1655,1678]",
      "dest": "state_variable_declaration [1655,1678]"
    },
    {
      "src": ".: . [38105,38106]",
      "dest": ".: . [38108,38109]"
    },
    {
      "src": "primitive_type [28562,28569]",
      "dest": "primitive_type [28562,28569]"
    },
    {
      "src": "call_argument [23464,23471]",
      "dest": "call_argument [23464,23471]"
    },
    {
      "src": "\": \" [2366,2367]",
      "dest": "\": \" [2366,2367]"
    },
    {
      "src": ",: , [36113,36114]",
      "dest": ",: , [36116,36117]"
    },
    {
      "src": ",: , [17421,17422]",
      "dest": ",: , [17421,17422]"
    },
    {
      "src": "parameter [17894,17907]",
      "dest": "parameter [17894,17907]"
    },
    {
      "src": ".: . [37643,37644]",
      "dest": ".: . [37646,37647]"
    },
    {
      "src": "true: true [5921,5925]",
      "dest": "true: true [5921,5925]"
    },
    {
      "src": "identifier: a [7786,7787]",
      "dest": "identifier: a [7786,7787]"
    },
    {
      "src": "call_argument [38406,38411]",
      "dest": "call_argument [38409,38414]"
    },
    {
      "src": "identifier: getFeeRateDenominator [40285,40306]",
      "dest": "identifier: feeRateDenominator [40297,40315]"
    },
    {
      "src": "identifier: spender [23647,23654]",
      "dest": "identifier: spender [23647,23654]"
    },
    {
      "src": "parameter [16875,16889]",
      "dest": "parameter [16875,16889]"
    },
    {
      "src": ",: , [17427,17428]",
      "dest": ",: , [17427,17428]"
    },
    {
      "src": "returns: returns [9092,9099]",
      "dest": "returns: returns [9092,9099]"
    },
    {
      "src": "parameter [39579,39591]",
      "dest": "parameter [39582,39594]"
    },
    {
      "src": ",: , [2869,2870]",
      "dest": ",: , [2869,2870]"
    },
    {
      "src": "call_argument [3175,3183]",
      "dest": "call_argument [3175,3183]"
    },
    {
      "src": "state_mutability [40865,40869]",
      "dest": "state_mutability [40874,40878]"
    },
    {
      "src": "comment: // File: contracts/Dependencies/SafeERC20.sol [21599,21644]",
      "dest": "comment: // File: contracts/Dependencies/SafeERC20.sol [21599,21644]"
    },
    {
      "src": "primitive_type [4618,4622]",
      "dest": "primitive_type [4618,4622]"
    },
    {
      "src": "identifier: require [20554,20561]",
      "dest": "identifier: require [20554,20561]"
    },
    {
      "src": "assignment_expression [33492,33510]",
      "dest": "assignment_expression [33495,33513]"
    },
    {
      "src": "identifier: approved [26815,26823]",
      "dest": "identifier: approved [26815,26823]"
    },
    {
      "src": "identifier: value [23566,23571]",
      "dest": "identifier: value [23566,23571]"
    },
    {
      "src": "parameter [26936,26949]",
      "dest": "parameter [26936,26949]"
    },
    {
      "src": "): ) [11282,11283]",
      "dest": "): ) [11282,11283]"
    },
    {
      "src": "identifier: sender [38593,38599]",
      "dest": "identifier: sender [38596,38602]"
    },
    {
      "src": "identifier: owner [2341,2346]",
      "dest": "identifier: owner [2341,2346]"
    },
    {
      "src": "(: ( [13543,13544]",
      "dest": "(: ( [13543,13544]"
    },
    {
      "src": "identifier: this [23934,23938]",
      "dest": "identifier: this [23934,23938]"
    },
    {
      "src": "internal: internal [6223,6231]",
      "dest": "internal: internal [6223,6231]"
    },
    {
      "src": "identifier: IERC20 [22418,22424]",
      "dest": "identifier: IERC20 [22418,22424]"
    },
    {
      "src": "type_name [9101,9108]",
      "dest": "type_name [9101,9108]"
    },
    {
      "src": "internal: internal [17909,17917]",
      "dest": "internal: internal [17909,17917]"
    },
    {
      "src": "identifier: target [17288,17294]",
      "dest": "identifier: target [17288,17294]"
    },
    {
      "src": "identifier: tokenAddress [39106,39118]",
      "dest": "identifier: tokenAddress [39109,39121]"
    },
    {
      "src": ",: , [17294,17295]",
      "dest": ",: , [17294,17295]"
    },
    {
      "src": "(: ( [26935,26936]",
      "dest": "(: ( [26935,26936]"
    },
    {
      "src": "identifier: Approval [13535,13543]",
      "dest": "identifier: Approval [13535,13543]"
    },
    {
      "src": "(: ( [20053,20054]",
      "dest": "(: ( [20053,20054]"
    },
    {
      "src": "abstract: abstract [1611,1619]",
      "dest": "abstract: abstract [1611,1619]"
    },
    {
      "src": "identifier: data [30709,30713]",
      "dest": "identifier: data [30709,30713]"
    },
    {
      "src": "parameter [5802,5811]",
      "dest": "parameter [5802,5811]"
    },
    {
      "src": "type_name [34588,34595]",
      "dest": "type_name [34591,34598]"
    },
    {
      "src": ">: > [10799,10800]",
      "dest": ">: > [10799,10800]"
    },
    {
      "src": "event_definition [35041,35131]",
      "dest": "event_definition [35044,35134]"
    },
    {
      "src": "function_definition [39649,40781]",
      "dest": "function_definition [39652,40790]"
    },
    {
      "src": "comment: /**      * @dev Returns the owner of the `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [26999,27136]",
      "dest": "comment: /**      * @dev Returns the owner of the `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [26999,27136]"
    },
    {
      "src": ",: , [6210,6211]",
      "dest": ",: , [6210,6211]"
    },
    {
      "src": "return_statement [10828,10841]",
      "dest": "return_statement [10828,10841]"
    },
    {
      "src": "member_expression [23616,23659]",
      "dest": "member_expression [23616,23659]"
    },
    {
      "src": "returns: returns [2158,2165]",
      "dest": "returns: returns [2158,2165]"
    },
    {
      "src": "identifier: _tokenID [34884,34892]",
      "dest": "identifier: _tokenID [34887,34895]"
    },
    {
      "src": "type_name [26363,26370]",
      "dest": "type_name [26363,26370]"
    },
    {
      "src": "identifier: _orderID [37033,37041]",
      "dest": "identifier: _orderID [37036,37044]"
    },
    {
      "src": "): ) [32808,32809]",
      "dest": "): ) [32811,32812]"
    },
    {
      "src": "type_cast_expression [23268,23281]",
      "dest": "type_cast_expression [23268,23281]"
    },
    {
      "src": "uint: uint [37148,37152]",
      "dest": "uint: uint [37151,37155]"
    }
  ],
  "actions": [
    {
      "action": "update-node",
      "tree": "comment: // File: contracts/Dependencies/HasCopyright.sol [30731,30779]",
      "label": "// File: contracts/Dependencies/HasCopyright721.sol"
    },
    {
      "action": "update-node",
      "tree": "identifier: HasCopyright [30793,30805]",
      "label": "HasCopyright721"
    },
    {
      "action": "update-node",
      "tree": "identifier: getFeeRateDenominator [30992,31013]",
      "label": "feeRateDenominator"
    },
    {
      "action": "update-node",
      "tree": "identifier: HasCopyright [40082,40094]",
      "label": "HasCopyright721"
    },
    {
      "action": "update-node",
      "tree": "identifier: getFeeRateDenominator [40285,40306]",
      "label": "feeRateDenominator"
    },
    {
      "action": "update-node",
      "tree": "identifier: HasCopyright [40041,40053]",
      "label": "HasCopyright721"
    },
    {
      "action": "update-node",
      "tree": "identifier: HasCopyright [40126,40138]",
      "label": "HasCopyright721"
    }
  ]
}