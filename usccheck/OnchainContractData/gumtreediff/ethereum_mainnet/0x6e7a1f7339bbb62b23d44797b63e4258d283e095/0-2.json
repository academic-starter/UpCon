{
  "matches": [
    {
      "src": "type_name [27709,27715]",
      "dest": "type_name [27557,27563]"
    },
    {
      "src": ",: , [31026,31027]",
      "dest": ",: , [30313,30314]"
    },
    {
      "src": "visibility [30180,30186]",
      "dest": "visibility [29467,29473]"
    },
    {
      "src": "identifier: allowance [13383,13392]",
      "dest": "identifier: allowance [13401,13410]"
    },
    {
      "src": "call_argument [12334,12339]",
      "dest": "call_argument [12352,12357]"
    },
    {
      "src": "call_argument [10180,10187]",
      "dest": "call_argument [9882,9889]"
    },
    {
      "src": "uint160: uint160 [10172,10179]",
      "dest": "uint160: uint160 [9874,9881]"
    },
    {
      "src": "\": \" [16559,16560]",
      "dest": "\": \" [16689,16690]"
    },
    {
      "src": "primitive_type [32429,32436]",
      "dest": "primitive_type [31716,31723]"
    },
    {
      "src": "(: ( [13037,13038]",
      "dest": "(: ( [13055,13056]"
    },
    {
      "src": "): ) [22209,22210]",
      "dest": "): ) [22127,22128]"
    },
    {
      "src": "variable_declaration [4125,4134]",
      "dest": "variable_declaration [4044,4053]"
    },
    {
      "src": "call_argument [12389,12391]",
      "dest": "call_argument [12407,12409]"
    },
    {
      "src": "(: ( [22174,22175]",
      "dest": "(: ( [22092,22093]"
    },
    {
      "src": "array_access [24528,24548]",
      "dest": "array_access [24446,24466]"
    },
    {
      "src": "primitive_type [17305,17312]",
      "dest": "primitive_type [17435,17442]"
    },
    {
      "src": "identifier: recipient [24616,24625]",
      "dest": "identifier: recipient [24534,24543]"
    },
    {
      "src": "expression_statement [26437,26506]",
      "dest": "expression_statement [26355,26424]"
    },
    {
      "src": "public: public [31063,31069]",
      "dest": "public: public [30350,30356]"
    },
    {
      "src": "primitive_type [1409,1416]",
      "dest": "primitive_type [1328,1335]"
    },
    {
      "src": "return_statement [28689,28710]",
      "dest": "return_statement [28537,28558]"
    },
    {
      "src": "member_expression [11264,11285]",
      "dest": "member_expression [10966,10987]"
    },
    {
      "src": "address: address [11193,11200]",
      "dest": "address: address [10895,10902]"
    },
    {
      "src": "(: ( [16662,16663]",
      "dest": "(: ( [16792,16793]"
    },
    {
      "src": "number_literal: 0 [25203,25204]",
      "dest": "number_literal: 0 [25121,25122]"
    },
    {
      "src": "type_name [32514,32521]",
      "dest": "type_name [31801,31808]"
    },
    {
      "src": "}: } [9852,9853]",
      "dest": "}: } [9554,9555]"
    },
    {
      "src": "modifier_invocation [31079,31090]",
      "dest": "modifier_invocation [30366,30377]"
    },
    {
      "src": "(: ( [5449,5450]",
      "dest": "(: ( [5368,5369]"
    },
    {
      "src": "primitive_type [7905,7912]",
      "dest": "primitive_type [7713,7720]"
    },
    {
      "src": "call_argument [31915,31922]",
      "dest": "call_argument [31202,31209]"
    },
    {
      "src": "{: { [12506,12507]",
      "dest": "{: { [12524,12525]"
    },
    {
      "src": "primitive_type [13647,13654]",
      "dest": "primitive_type [13665,13672]"
    },
    {
      "src": "visibility [12497,12505]",
      "dest": "visibility [12515,12523]"
    },
    {
      "src": "call_argument [13401,13405]",
      "dest": "call_argument [13419,13423]"
    },
    {
      "src": "call_expression [24551,24583]",
      "dest": "call_expression [24469,24501]"
    },
    {
      "src": "type_name [22051,22058]",
      "dest": "type_name [21969,21976]"
    },
    {
      "src": "uint256: uint256 [2015,2022]",
      "dest": "uint256: uint256 [1934,1941]"
    },
    {
      "src": "identifier: recipientChain [33146,33160]",
      "dest": "identifier: recipientChain [32433,32447]"
    },
    {
      "src": "identifier: Initializable [16136,16149]",
      "dest": "identifier: Initializable [16098,16111]"
    },
    {
      "src": "binary_expression [2706,2716]",
      "dest": "binary_expression [2625,2635]"
    },
    {
      "src": "identifier: encode [32998,33004]",
      "dest": "identifier: encode [32285,32291]"
    },
    {
      "src": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following       * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [8646,9228]",
      "dest": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following       * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [8348,8930]"
    },
    {
      "src": "identifier: _ [16750,16751]",
      "dest": "identifier: _ [16880,16881]"
    },
    {
      "src": "call_argument [33214,33224]",
      "dest": "call_argument [32501,32511]"
    },
    {
      "src": "type_name [1409,1416]",
      "dest": "type_name [1328,1335]"
    },
    {
      "src": "number_literal: 0 [5483,5484]",
      "dest": "number_literal: 0 [5402,5403]"
    },
    {
      "src": "(: ( [10179,10180]",
      "dest": "(: ( [9881,9882]"
    },
    {
      "src": "++: ++ [32667,32669]",
      "dest": "++: ++ [31954,31956]"
    },
    {
      "src": "{: { [21170,21171]",
      "dest": "{: { [21088,21089]"
    },
    {
      "src": "primitive_type [15026,15031]",
      "dest": "primitive_type [15044,15049]"
    },
    {
      "src": "primitive_type [22051,22058]",
      "dest": "primitive_type [21969,21976]"
    },
    {
      "src": "return: return [5510,5516]",
      "dest": "return: return [5429,5435]"
    },
    {
      "src": "type_name [29173,29179]",
      "dest": "type_name [11642,11648]"
    },
    {
      "src": "identifier: a [4137,4138]",
      "dest": "identifier: a [4056,4057]"
    },
    {
      "src": "parameter [22051,22065]",
      "dest": "parameter [21969,21983]"
    },
    {
      "src": "visibility [20581,20587]",
      "dest": "visibility [20499,20505]"
    },
    {
      "src": "call_argument [25216,25222]",
      "dest": "call_argument [25134,25140]"
    },
    {
      "src": "primitive_type [33372,33379]",
      "dest": "primitive_type [32659,32666]"
    },
    {
      "src": "(: ( [20563,20564]",
      "dest": "(: ( [20481,20482]"
    },
    {
      "src": "): ) [26415,26416]",
      "dest": "): ) [26333,26334]"
    },
    {
      "src": "type_name [15012,15016]",
      "dest": "type_name [15030,15034]"
    },
    {
      "src": "internal: internal [9271,9279]",
      "dest": "internal: internal [8973,8981]"
    },
    {
      "src": "): ) [4006,4007]",
      "dest": "): ) [3925,3926]"
    },
    {
      "src": "parameter [4773,4780]",
      "dest": "parameter [4692,4699]"
    },
    {
      "src": "type_name [20148,20155]",
      "dest": "type_name [20066,20073]"
    },
    {
      "src": "call_argument [25875,25882]",
      "dest": "call_argument [25793,25800]"
    },
    {
      "src": "assignment_expression [16716,16734]",
      "dest": "assignment_expression [16846,16864]"
    },
    {
      "src": "string_literal [32772,32810]",
      "dest": "string_literal [32059,32097]"
    },
    {
      "src": "variable_declaration_statement [1018,1036]",
      "dest": "variable_declaration_statement [937,955]"
    },
    {
      "src": "identifier: wormhole [33721,33729]",
      "dest": "identifier: wormhole [33008,33016]"
    },
    {
      "src": "(: ( [15060,15061]",
      "dest": "(: ( [15078,15079]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for `sender`'s tokens of at least      * `amount`.      */ [21530,21988]",
      "dest": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for `sender`'s tokens of at least      * `amount`.      */ [21448,21906]"
    },
    {
      "src": "(: ( [1982,1983]",
      "dest": "(: ( [1901,1902]"
    },
    {
      "src": "{: { [25620,25621]",
      "dest": "{: { [25538,25539]"
    },
    {
      "src": "identifier: value [8187,8192]",
      "dest": "identifier: value [7995,8000]"
    },
    {
      "src": "type_name [4739,4746]",
      "dest": "type_name [4658,4665]"
    },
    {
      "src": "primitive_type [23505,23509]",
      "dest": "primitive_type [23423,23427]"
    },
    {
      "src": "state_variable_declaration [27115,27145]",
      "dest": "state_variable_declaration [27033,27063]"
    },
    {
      "src": "function: function [7456,7464]",
      "dest": "function: function [7264,7272]"
    },
    {
      "src": "return_type_definition [3990,4007]",
      "dest": "return_type_definition [3909,3926]"
    },
    {
      "src": "identifier: token [13670,13675]",
      "dest": "identifier: token [13688,13693]"
    },
    {
      "src": "parameter [26894,26909]",
      "dest": "parameter [26812,26827]"
    },
    {
      "src": "identifier: sub [22212,22215]",
      "dest": "identifier: sub [22130,22133]"
    },
    {
      "src": "identifier: this [13401,13405]",
      "dest": "identifier: this [13419,13423]"
    },
    {
      "src": ",: , [4805,4806]",
      "dest": ",: , [4724,4725]"
    },
    {
      "src": "identifier: balance [11278,11285]",
      "dest": "identifier: balance [10980,10987]"
    },
    {
      "src": "private: private [20269,20276]",
      "dest": "private: private [20187,20194]"
    },
    {
      "src": "(: ( [30223,30224]",
      "dest": "(: ( [29510,29511]"
    },
    {
      "src": "): ) [29191,29192]",
      "dest": "): ) [11660,11661]"
    },
    {
      "src": "type_name [30172,30179]",
      "dest": "type_name [29459,29466]"
    },
    {
      "src": "*: * [2684,2685]",
      "dest": "*: * [2603,2604]"
    },
    {
      "src": "identifier: nonces [30350,30356]",
      "dest": "identifier: nonces [29637,29643]"
    },
    {
      "src": "identifier: subtractedValue [23472,23487]",
      "dest": "identifier: subtractedValue [23390,23405]"
    },
    {
      "src": "return: return [4793,4799]",
      "dest": "return: return [4712,4718]"
    },
    {
      "src": "identifier: b [4807,4808]",
      "dest": "identifier: b [4726,4727]"
    },
    {
      "src": "constant: constant [27724,27732]",
      "dest": "constant: constant [27572,27580]"
    },
    {
      "src": "comment: // for ERC20 approve transactions in compliance with EIP 2612: [29628,29690]",
      "dest": "comment: // for ERC20 approve transactions in compliance with EIP 2612: [28915,28977]"
    },
    {
      "src": "type_name [5399,5405]",
      "dest": "type_name [5318,5324]"
    },
    {
      "src": "return_type_definition [16949,16963]",
      "dest": "return_type_definition [17079,17093]"
    },
    {
      "src": "[: [ [25720,25721]",
      "dest": "[: [ [25638,25639]"
    },
    {
      "src": ",: , [11474,11475]",
      "dest": ",: , [11176,11177]"
    },
    {
      "src": "): ) [31894,31895]",
      "dest": "): ) [31181,31182]"
    },
    {
      "src": "array_access [21188,21206]",
      "dest": "array_access [21106,21124]"
    },
    {
      "src": "function_body [4782,4845]",
      "dest": "function_body [4701,4764]"
    },
    {
      "src": "type_name [10089,10096]",
      "dest": "type_name [9791,9798]"
    },
    {
      "src": "identifier: allowance [6713,6722]",
      "dest": "identifier: allowance [6521,6530]"
    },
    {
      "src": "is: is [20088,20090]",
      "dest": "is: is [20006,20008]"
    },
    {
      "src": "binary_expression [2615,2621]",
      "dest": "binary_expression [2534,2540]"
    },
    {
      "src": "identifier: encodeWithSelector [13806,13824]",
      "dest": "identifier: encodeWithSelector [13824,13842]"
    },
    {
      "src": "library: library [12140,12147]",
      "dest": "library: library [12158,12165]"
    },
    {
      "src": "identifier: abi [13802,13805]",
      "dest": "identifier: abi [13820,13823]"
    },
    {
      "src": "identifier: balanceOf [20554,20563]",
      "dest": "identifier: balanceOf [20472,20481]"
    },
    {
      "src": "boolean_literal [28186,28190]",
      "dest": "boolean_literal [28034,28038]"
    },
    {
      "src": "visibility [27127,27134]",
      "dest": "visibility [27045,27052]"
    },
    {
      "src": "): ) [26463,26464]",
      "dest": "): ) [26381,26382]"
    },
    {
      "src": ",: , [33421,33422]",
      "dest": ",: , [32708,32709]"
    },
    {
      "src": "uint256: uint256 [20602,20609]",
      "dest": "uint256: uint256 [20520,20527]"
    },
    {
      "src": "(: ( [15096,15097]",
      "dest": "(: ( [15114,15115]"
    },
    {
      "src": "bool: bool [15012,15016]",
      "dest": "bool: bool [15030,15034]"
    },
    {
      "src": "call_argument [11297,11328]",
      "dest": "call_argument [10999,11030]"
    },
    {
      "src": "(: ( [31825,31826]",
      "dest": "(: ( [31112,31113]"
    },
    {
      "src": "call_argument [33690,33698]",
      "dest": "call_argument [32977,32985]"
    },
    {
      "src": "payable: payable [11201,11208]",
      "dest": "payable: payable [10903,10910]"
    },
    {
      "src": "): ) [13058,13059]",
      "dest": "): ) [13076,13077]"
    },
    {
      "src": "(: ( [26523,26524]",
      "dest": "(: ( [26441,26442]"
    },
    {
      "src": "function: function [23420,23428]",
      "dest": "function: function [23338,23346]"
    },
    {
      "src": "call_argument [15073,15077]",
      "dest": "call_argument [15091,15095]"
    },
    {
      "src": "primitive_type [25884,25891]",
      "dest": "primitive_type [25802,25809]"
    },
    {
      "src": "): ) [24516,24517]",
      "dest": "): ) [24434,24435]"
    },
    {
      "src": "): ) [25222,25223]",
      "dest": "): ) [25140,25141]"
    },
    {
      "src": "identifier: transferToken [30737,30750]",
      "dest": "identifier: transferToken [30024,30037]"
    },
    {
      "src": "state_mutability [2356,2360]",
      "dest": "state_mutability [2275,2279]"
    },
    {
      "src": "identifier: b [1983,1984]",
      "dest": "identifier: b [1902,1903]"
    },
    {
      "src": "call_argument [31712,31796]",
      "dest": "call_argument [30999,31083]"
    },
    {
      "src": "identifier: transferToken [33660,33673]",
      "dest": "identifier: transferToken [32947,32960]"
    },
    {
      "src": "): ) [25204,25205]",
      "dest": "): ) [25122,25123]"
    },
    {
      "src": "call_expression [33399,33425]",
      "dest": "call_expression [32686,32712]"
    },
    {
      "src": "visibility [16237,16244]",
      "dest": "visibility [16292,16299]"
    },
    {
      "src": "comment: /// @dev Returns true if and only if the function is running in the constructor [16828,16907]",
      "dest": "comment: /// @dev Returns true if and only if the function is running in the constructor [16958,17037]"
    },
    {
      "src": "call_argument [15289,15319]",
      "dest": "call_argument [15307,15337]"
    },
    {
      "src": "unary_expression [16545,16557]",
      "dest": "unary_expression [16675,16687]"
    },
    {
      "src": "member_expression [31403,31429]",
      "dest": "member_expression [30690,30716]"
    },
    {
      "src": "uint256: uint256 [1409,1416]",
      "dest": "uint256: uint256 [1328,1335]"
    },
    {
      "src": "member_expression [15053,15072]",
      "dest": "member_expression [15071,15090]"
    },
    {
      "src": "expression_statement [31186,31298]",
      "dest": "expression_statement [30473,30585]"
    },
    {
      "src": "identifier: deadline [32743,32751]",
      "dest": "identifier: deadline [32030,32038]"
    },
    {
      "src": "identifier: keccak256 [31702,31711]",
      "dest": "identifier: keccak256 [30989,30998]"
    },
    {
      "src": "): ) [11443,11444]",
      "dest": "): ) [11145,11146]"
    },
    {
      "src": "returns: returns [16949,16956]",
      "dest": "returns: returns [17079,17086]"
    },
    {
      "src": "uint32: uint32 [29173,29179]",
      "dest": "uint32: uint32 [11642,11648]"
    },
    {
      "src": "parameter [22032,22049]",
      "dest": "parameter [21950,21967]"
    },
    {
      "src": "string: string [1904,1910]",
      "dest": "string: string [1823,1829]"
    },
    {
      "src": "state_variable_declaration [20219,20289]",
      "dest": "state_variable_declaration [20137,20207]"
    },
    {
      "src": "function: function [20545,20553]",
      "dest": "function: function [20463,20471]"
    },
    {
      "src": "(: ( [20247,20248]",
      "dest": "(: ( [20165,20166]"
    },
    {
      "src": "): ) [18599,18600]",
      "dest": "): ) [18631,18632]"
    },
    {
      "src": "member_expression [31208,31226]",
      "dest": "member_expression [30495,30513]"
    },
    {
      "src": "): ) [33347,33348]",
      "dest": "): ) [32634,32635]"
    },
    {
      "src": ",: , [8395,8396]",
      "dest": ",: , [8203,8204]"
    },
    {
      "src": ",: , [25205,25206]",
      "dest": ",: , [25123,25124]"
    },
    {
      "src": ",: , [12391,12392]",
      "dest": ",: , [12409,12410]"
    },
    {
      "src": "primitive_type [13393,13400]",
      "dest": "primitive_type [13411,13418]"
    },
    {
      "src": "): ) [1523,1524]",
      "dest": "): ) [1442,1443]"
    },
    {
      "src": "address: address [7473,7480]",
      "dest": "address: address [7281,7288]"
    },
    {
      "src": ".: . [13181,13182]",
      "dest": ".: . [13199,13200]"
    },
    {
      "src": "{: { [22089,22090]",
      "dest": "{: { [22007,22008]"
    },
    {
      "src": "parameter [22787,22791]",
      "dest": "parameter [22705,22709]"
    },
    {
      "src": "primitive_type [20184,20191]",
      "dest": "primitive_type [20102,20109]"
    },
    {
      "src": ",: , [15024,15025]",
      "dest": ",: , [15042,15043]"
    },
    {
      "src": "internal: internal [18564,18572]",
      "dest": "internal: internal [18596,18604]"
    },
    {
      "src": "{: { [16964,16965]",
      "dest": "{: { [17094,17095]"
    },
    {
      "src": "address: address [29035,29042]",
      "dest": "address: address [11504,11511]"
    },
    {
      "src": "address: address [22734,22741]",
      "dest": "address: address [22652,22659]"
    },
    {
      "src": "primitive_type [6414,6418]",
      "dest": "primitive_type [6222,6226]"
    },
    {
      "src": ",: , [13232,13233]",
      "dest": ",: , [13250,13251]"
    },
    {
      "src": ",: , [1489,1490]",
      "dest": ",: , [1408,1409]"
    },
    {
      "src": "): ) [20191,20192]",
      "dest": "): ) [20109,20110]"
    },
    {
      "src": "member_expression [13825,13838]",
      "dest": "member_expression [13843,13856]"
    },
    {
      "src": "call_argument [31375,31391]",
      "dest": "call_argument [30662,30678]"
    },
    {
      "src": "expression_statement [33660,33709]",
      "dest": "expression_statement [32947,32996]"
    },
    {
      "src": "array_access [27012,27032]",
      "dest": "array_access [26930,26950]"
    },
    {
      "src": "identifier: spender [13225,13232]",
      "dest": "identifier: spender [13243,13250]"
    },
    {
      "src": ",: , [12541,12542]",
      "dest": ",: , [12559,12560]"
    },
    {
      "src": "call_expression [31673,31969]",
      "dest": "call_expression [30960,31256]"
    },
    {
      "src": "identifier: sender [24608,24614]",
      "dest": "identifier: sender [24526,24532]"
    },
    {
      "src": "): ) [25799,25800]",
      "dest": "): ) [25717,25718]"
    },
    {
      "src": "call_argument [31259,31286]",
      "dest": "call_argument [30546,30573]"
    },
    {
      "src": "}: } [21521,21522]",
      "dest": "}: } [21439,21440]"
    },
    {
      "src": "function_body [28678,28717]",
      "dest": "function_body [28526,28565]"
    },
    {
      "src": "emit_statement [26644,26682]",
      "dest": "emit_statement [26562,26600]"
    },
    {
      "src": "primitive_type [18483,18498]",
      "dest": "primitive_type [18515,18530]"
    },
    {
      "src": "identifier: newAllowance [13858,13870]",
      "dest": "identifier: newAllowance [13876,13888]"
    },
    {
      "src": "bool: bool [20937,20941]",
      "dest": "bool: bool [20855,20859]"
    },
    {
      "src": "binary_expression [9829,9844]",
      "dest": "binary_expression [9531,9546]"
    },
    {
      "src": "type_alias [29347,29356]",
      "dest": "type_alias [28634,28643]"
    },
    {
      "src": "function_body [2379,2783]",
      "dest": "function_body [2298,2702]"
    },
    {
      "src": "address: address [33478,33485]",
      "dest": "address: address [32765,32772]"
    },
    {
      "src": "=: = [13668,13669]",
      "dest": "=: = [13686,13687]"
    },
    {
      "src": "(: ( [26657,26658]",
      "dest": "(: ( [26575,26576]"
    },
    {
      "src": "visibility [6755,6763]",
      "dest": "visibility [6563,6571]"
    },
    {
      "src": "(: ( [15157,15158]",
      "dest": "(: ( [15175,15176]"
    },
    {
      "src": "identifier: TRANSFER_TOKENS_TYPEHASH [33031,33055]",
      "dest": "identifier: TRANSFER_TOKENS_TYPEHASH [32318,32342]"
    },
    {
      "src": "address: address [25010,25017]",
      "dest": "address: address [24928,24935]"
    },
    {
      "src": "uint256: uint256 [7905,7912]",
      "dest": "uint256: uint256 [7713,7720]"
    },
    {
      "src": "(: ( [4803,4804]",
      "dest": "(: ( [4722,4723]"
    },
    {
      "src": "identifier: spender [21131,21138]",
      "dest": "identifier: spender [21049,21056]"
    },
    {
      "src": "string [31712,31796]",
      "dest": "string [30999,31083]"
    },
    {
      "src": "returns: returns [20426,20433]",
      "dest": "returns: returns [20344,20351]"
    },
    {
      "src": "identifier: transfer [12370,12378]",
      "dest": "identifier: transfer [12388,12396]"
    },
    {
      "src": "primitive_type [13612,13619]",
      "dest": "primitive_type [13630,13637]"
    },
    {
      "src": "external: external [7921,7929]",
      "dest": "external: external [7729,7737]"
    },
    {
      "src": "]: ] [22860,22861]",
      "dest": "]: ] [22778,22779]"
    },
    {
      "src": "type_name [6380,6387]",
      "dest": "type_name [6188,6195]"
    },
    {
      "src": "identifier: recipient [32494,32503]",
      "dest": "identifier: recipient [31781,31790]"
    },
    {
      "src": "\": \" [33565,33566]",
      "dest": "\": \" [32852,32853]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4266,4709]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4185,4628]"
    },
    {
      "src": "visibility [30460,30468]",
      "dest": "visibility [29747,29755]"
    },
    {
      "src": "returns: returns [7515,7522]",
      "dest": "returns: returns [7323,7330]"
    },
    {
      "src": "): ) [27009,27010]",
      "dest": "): ) [26927,26928]"
    },
    {
      "src": "yul_path [17386,17390]",
      "dest": "yul_path [17516,17520]"
    },
    {
      "src": "type_name [16232,16236]",
      "dest": "type_name [16287,16291]"
    },
    {
      "src": "identifier: require [26437,26444]",
      "dest": "identifier: require [26355,26362]"
    },
    {
      "src": "parameter [6414,6418]",
      "dest": "parameter [6222,6226]"
    },
    {
      "src": "type_cast_expression [17320,17333]",
      "dest": "type_cast_expression [17450,17463]"
    },
    {
      "src": "(: ( [15299,15300]",
      "dest": "(: ( [15317,15318]"
    },
    {
      "src": "identifier: _allowances [26597,26608]",
      "dest": "identifier: _allowances [26515,26526]"
    },
    {
      "src": "number_literal: 0 [33486,33487]",
      "dest": "number_literal: 0 [32773,32774]"
    },
    {
      "src": "(: ( [32395,32396]",
      "dest": "(: ( [31682,31683]"
    },
    {
      "src": "): ) [5498,5499]",
      "dest": "): ) [5417,5418]"
    },
    {
      "src": "parameter [3937,3946]",
      "dest": "parameter [3856,3865]"
    },
    {
      "src": "uint256: uint256 [4773,4780]",
      "dest": "uint256: uint256 [4692,4699]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [1540,1863]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [1459,1782]"
    },
    {
      "src": "call_argument [25195,25205]",
      "dest": "call_argument [25113,25123]"
    },
    {
      "src": "(: ( [15288,15289]",
      "dest": "(: ( [15306,15307]"
    },
    {
      "src": "call_argument [13520,13532]",
      "dest": "call_argument [13538,13550]"
    },
    {
      "src": ",: , [26663,26664]",
      "dest": ",: , [26581,26582]"
    },
    {
      "src": "\": \" [23610,23611]",
      "dest": "\": \" [23528,23529]"
    },
    {
      "src": "primitive_type [13030,13037]",
      "dest": "primitive_type [13048,13055]"
    },
    {
      "src": "identifier: InitializableV2 [27634,27649]",
      "dest": "identifier: InitializableV2 [27482,27497]"
    },
    {
      "src": "uint256: uint256 [4739,4746]",
      "dest": "uint256: uint256 [4658,4665]"
    },
    {
      "src": "number_literal: 0xb5c18197d4070033d8a764555784c9c515ef8c35627dac4a9520d96403df3b35 [30234,30300]",
      "dest": "number_literal: 0xb5c18197d4070033d8a764555784c9c515ef8c35627dac4a9520d96403df3b35 [29521,29587]"
    },
    {
      "src": "comment: /**      * @notice transfer `_amount` of tokens from sender to target account      * @param from - account to transfer from      * @param amount - amount of token to transfer      * @param recipientChain -  id of the chain to transfer to      * @param recipient - foreign chain address of recipient      * @param arbiterFee - the amount to pay the arbiter      */ [31996,32366]",
      "dest": "comment: /**      * @notice transfer `_amount` of tokens from sender to target account      * @param from - account to transfer from      * @param amount - amount of token to transfer      * @param recipientChain -  id of the chain to transfer to      * @param recipient - foreign chain address of recipient      * @param arbiterFee - the amount to pay the arbiter      */ [31283,31653]"
    },
    {
      "src": "bytes32: bytes32 [32822,32829]",
      "dest": "bytes32: bytes32 [32109,32116]"
    },
    {
      "src": "call_argument [33031,33055]",
      "dest": "call_argument [32318,32342]"
    },
    {
      "src": "function_definition [28623,28717]",
      "dest": "function_definition [28471,28565]"
    },
    {
      "src": "): ) [23509,23510]",
      "dest": "): ) [23427,23428]"
    },
    {
      "src": "^:  ^ [96,98]",
      "dest": "^:  ^ [15,17]"
    },
    {
      "src": "identifier: value [12288,12293]",
      "dest": "identifier: value [12306,12311]"
    },
    {
      "src": "identifier: recipient [22040,22049]",
      "dest": "identifier: recipient [21958,21967]"
    },
    {
      "src": "identifier: amount [29067,29073]",
      "dest": "identifier: amount [11536,11542]"
    },
    {
      "src": "parameter [29059,29073]",
      "dest": "parameter [11528,11542]"
    },
    {
      "src": "true: true [21014,21018]",
      "dest": "true: true [20932,20936]"
    },
    {
      "src": "): ) [10187,10188]",
      "dest": "): ) [9889,9890]"
    },
    {
      "src": "\": \" [31853,31854]",
      "dest": "\": \" [31140,31141]"
    },
    {
      "src": "}: } [17392,17393]",
      "dest": "}: } [17522,17523]"
    },
    {
      "src": "identifier: to [12478,12480]",
      "dest": "identifier: to [12496,12498]"
    },
    {
      "src": "identifier: amount [25755,25761]",
      "dest": "identifier: amount [25673,25679]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [6122,6337]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [5930,6145]"
    },
    {
      "src": "\": \" [24411,24412]",
      "dest": "\": \" [24329,24330]"
    },
    {
      "src": "member_expression [12341,12363]",
      "dest": "member_expression [12359,12381]"
    },
    {
      "src": "call_argument [25892,25893]",
      "dest": "call_argument [25810,25811]"
    },
    {
      "src": "modifier_definition [16472,16822]",
      "dest": "modifier_definition [16527,16952]"
    },
    {
      "src": "uint256: uint256 [1882,1889]",
      "dest": "uint256: uint256 [1801,1808]"
    },
    {
      "src": "function: function [18438,18446]",
      "dest": "function: function [18470,18478]"
    },
    {
      "src": "assembly_statement [17357,17393]",
      "dest": "assembly_statement [17487,17523]"
    },
    {
      "src": ",: , [13509,13510]",
      "dest": ",: , [13527,13528]"
    },
    {
      "src": ",: , [29162,29163]",
      "dest": ",: , [11631,11632]"
    },
    {
      "src": "expression_statement [2698,2755]",
      "dest": "expression_statement [2617,2674]"
    },
    {
      "src": "primitive_type [6361,6368]",
      "dest": "primitive_type [6169,6176]"
    },
    {
      "src": "(: ( [25842,25843]",
      "dest": "(: ( [25760,25761]"
    },
    {
      "src": "primitive_type [20564,20571]",
      "dest": "primitive_type [20482,20489]"
    },
    {
      "src": "identifier: require [31186,31193]",
      "dest": "identifier: require [30473,30480]"
    },
    {
      "src": "): ) [27097,27098]",
      "dest": "): ) [27015,27016]"
    },
    {
      "src": "primitive_type [32406,32413]",
      "dest": "primitive_type [31693,31700]"
    },
    {
      "src": "bool: bool [15313,15317]",
      "dest": "bool: bool [15331,15335]"
    },
    {
      "src": "return_statement [1474,1525]",
      "dest": "return_statement [1393,1444]"
    },
    {
      "src": "call_argument [31816,31856]",
      "dest": "call_argument [31103,31143]"
    },
    {
      "src": "uint8: uint8 [32567,32572]",
      "dest": "uint8: uint8 [31854,31859]"
    },
    {
      "src": "identifier: nonce [33892,33897]",
      "dest": "identifier: nonce [33179,33184]"
    },
    {
      "src": "function_body [13343,13542]",
      "dest": "function_body [13361,13560]"
    },
    {
      "src": "): ) [4836,4837]",
      "dest": "): ) [4755,4756]"
    },
    {
      "src": "primitive_type [953,960]",
      "dest": "primitive_type [872,879]"
    },
    {
      "src": ",: , [22116,22117]",
      "dest": ",: , [22034,22035]"
    },
    {
      "src": "call_expression [1481,1524]",
      "dest": "call_expression [1400,1443]"
    },
    {
      "src": "function_definition [3913,4258]",
      "dest": "function_definition [3832,4177]"
    },
    {
      "src": "binary_expression [9802,9825]",
      "dest": "binary_expression [9504,9527]"
    },
    {
      "src": "variable_declaration_statement [13647,13766]",
      "dest": "variable_declaration_statement [13665,13784]"
    },
    {
      "src": "identifier: require [4086,4093]",
      "dest": "identifier: require [4005,4012]"
    },
    {
      "src": "primitive_type [998,1005]",
      "dest": "primitive_type [917,924]"
    },
    {
      "src": "]: ] [23578,23579]",
      "dest": "]: ] [23496,23497]"
    },
    {
      "src": "identifier: amount [24576,24582]",
      "dest": "identifier: amount [24494,24500]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [6795,7450]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [6603,7258]"
    },
    {
      "src": "identifier: cs [17406,17408]",
      "dest": "identifier: cs [17536,17538]"
    },
    {
      "src": "identifier: div [3922,3925]",
      "dest": "identifier: div [3841,3844]"
    },
    {
      "src": "): ) [17332,17333]",
      "dest": "): ) [17462,17463]"
    },
    {
      "src": "uint256: uint256 [17340,17347]",
      "dest": "uint256: uint256 [17470,17477]"
    },
    {
      "src": "): ) [31296,31297]",
      "dest": "): ) [30583,30584]"
    },
    {
      "src": "expression_statement [20954,20997]",
      "dest": "expression_statement [20872,20915]"
    },
    {
      "src": "payable: payable [10137,10144]",
      "dest": "payable: payable [9839,9846]"
    },
    {
      "src": "identifier: require [2698,2705]",
      "dest": "identifier: require [2617,2624]"
    },
    {
      "src": "identifier: value [12688,12693]",
      "dest": "identifier: value [12706,12711]"
    },
    {
      "src": "call_argument [4807,4808]",
      "dest": "call_argument [4726,4727]"
    },
    {
      "src": "identifier: wormhole [31355,31363]",
      "dest": "identifier: wormhole [30642,30650]"
    },
    {
      "src": "call_expression [24342,24413]",
      "dest": "call_expression [24260,24331]"
    },
    {
      "src": "identifier: initialize [28127,28137]",
      "dest": "identifier: initialize [27975,27985]"
    },
    {
      "src": "function_definition [22707,22917]",
      "dest": "function_definition [22625,22835]"
    },
    {
      "src": "returns: returns [3300,3307]",
      "dest": "returns: returns [3219,3226]"
    },
    {
      "src": "): ) [4748,4749]",
      "dest": "): ) [4667,4668]"
    },
    {
      "src": "identifier: _balances [24528,24537]",
      "dest": "identifier: _balances [24446,24455]"
    },
    {
      "src": "function_definition [1869,2061]",
      "dest": "function_definition [1788,1980]"
    },
    {
      "src": ",: , [33119,33120]",
      "dest": ",: , [32406,32407]"
    },
    {
      "src": "call_argument [13178,13240]",
      "dest": "call_argument [13196,13258]"
    },
    {
      "src": "identifier: _balances [20629,20638]",
      "dest": "identifier: _balances [20547,20556]"
    },
    {
      "src": "identifier: _msgSender [22198,22208]",
      "dest": "identifier: _msgSender [22116,22126]"
    },
    {
      "src": "solidity_pragma_token [88,103]",
      "dest": "solidity_pragma_token [7,22]"
    },
    {
      "src": "bool: bool [16617,16621]",
      "dest": "bool: bool [16747,16751]"
    },
    {
      "src": "type_cast_expression [13393,13406]",
      "dest": "type_cast_expression [13411,13424]"
    },
    {
      "src": "identifier: DOMAIN_SEPARATOR [31630,31646]",
      "dest": "identifier: DOMAIN_SEPARATOR [30917,30933]"
    },
    {
      "src": "\": \" [26547,26548]",
      "dest": "\": \" [26465,26466]"
    },
    {
      "src": ",: , [33196,33197]",
      "dest": ",: , [32483,32484]"
    },
    {
      "src": "): ) [30306,30307]",
      "dest": "): ) [29593,29594]"
    },
    {
      "src": "call_expression [12989,13141]",
      "dest": "call_expression [13007,13159]"
    },
    {
      "src": "return: return [21503,21509]",
      "dest": "return: return [21421,21427]"
    },
    {
      "src": "[: [ [24435,24436]",
      "dest": "[: [ [24353,24354]"
    },
    {
      "src": "call_expression [22178,22267]",
      "dest": "call_expression [22096,22185]"
    },
    {
      "src": "private: private [27127,27134]",
      "dest": "private: private [27045,27052]"
    },
    {
      "src": "): ) [21138,21139]",
      "dest": "): ) [21056,21057]"
    },
    {
      "src": "): ) [21418,21419]",
      "dest": "): ) [21336,21337]"
    },
    {
      "src": "}: } [27147,27148]",
      "dest": "}: } [27065,27066]"
    },
    {
      "src": "(: ( [10088,10089]",
      "dest": "(: ( [9790,9791]"
    },
    {
      "src": "primitive_type [27709,27715]",
      "dest": "primitive_type [27557,27563]"
    },
    {
      "src": "member_expression [12566,12593]",
      "dest": "member_expression [12584,12611]"
    },
    {
      "src": "call_argument [22216,22222]",
      "dest": "call_argument [22134,22140]"
    },
    {
      "src": "parameter [7939,7943]",
      "dest": "parameter [7747,7751]"
    },
    {
      "src": "visibility [25611,25619]",
      "dest": "visibility [25529,25537]"
    },
    {
      "src": "type_name [4773,4780]",
      "dest": "type_name [4692,4699]"
    },
    {
      "src": "}: } [11544,11545]",
      "dest": "}: } [11246,11247]"
    },
    {
      "src": "identifier: to [12601,12603]",
      "dest": "identifier: to [12619,12621]"
    },
    {
      "src": "true: true [23669,23673]",
      "dest": "true: true [23587,23591]"
    },
    {
      "src": "): ) [22824,22825]",
      "dest": "): ) [22742,22743]"
    },
    {
      "src": "address: address [33627,33634]",
      "dest": "address: address [32914,32921]"
    },
    {
      "src": "function: function [25563,25571]",
      "dest": "function: function [25481,25489]"
    },
    {
      "src": "{: { [29334,29335]",
      "dest": "{: { [28621,28622]"
    },
    {
      "src": "string [1491,1523]",
      "dest": "string [1410,1442]"
    },
    {
      "src": "type_name [29976,29983]",
      "dest": "type_name [29263,29270]"
    },
    {
      "src": "public: public [21420,21426]",
      "dest": "public: public [21338,21344]"
    },
    {
      "src": "(: ( [16492,16493]",
      "dest": "(: ( [16547,16548]"
    },
    {
      "src": "identifier: SafeMath [693,701]",
      "dest": "identifier: SafeMath [612,620]"
    },
    {
      "src": "identifier: allowance [21098,21107]",
      "dest": "identifier: allowance [21016,21025]"
    },
    {
      "src": "member_expression [13670,13713]",
      "dest": "member_expression [13688,13731]"
    },
    {
      "src": "\": \" [3346,3347]",
      "dest": "\": \" [3265,3266]"
    },
    {
      "src": "comment: //  3. The return value is decoded, which in turn checks the size of the returned data. [14716,14803]",
      "dest": "comment: //  3. The return value is decoded, which in turn checks the size of the returned data. [14734,14821]"
    },
    {
      "src": "public: public [21140,21146]",
      "dest": "public: public [21058,21064]"
    },
    {
      "src": "yul_evm_builtin [17374,17385]",
      "dest": "yul_evm_builtin [17504,17515]"
    },
    {
      "src": "comment: // keccak256(\"TransferTokens(address from,uint256 amount,uint16 recipientChain,bytes32 recipient,uint256 artbiterFee,uint32 nonce,uint256 deadline)\"); [30014,30164]",
      "dest": "comment: // keccak256(\"TransferTokens(address from,uint256 amount,uint16 recipientChain,bytes32 recipient,uint256 artbiterFee,uint32 nonce,uint256 deadline)\"); [29301,29451]"
    },
    {
      "src": "call_argument [23593,23608]",
      "dest": "call_argument [23511,23526]"
    },
    {
      "src": "function_definition [1396,1532]",
      "dest": "function_definition [1315,1451]"
    },
    {
      "src": "binary_expression [12997,13059]",
      "dest": "binary_expression [13015,13077]"
    },
    {
      "src": "call_expression [13670,13709]",
      "dest": "call_expression [13688,13727]"
    },
    {
      "src": "identifier: sub [1405,1408]",
      "dest": "identifier: sub [1324,1327]"
    },
    {
      "src": "parameter [12456,12468]",
      "dest": "parameter [12474,12486]"
    },
    {
      "src": "): ) [25902,25903]",
      "dest": "): ) [25820,25821]"
    },
    {
      "src": "private: private [27716,27723]",
      "dest": "private: private [27564,27571]"
    },
    {
      "src": "): ) [15317,15318]",
      "dest": "): ) [15335,15336]"
    },
    {
      "src": "(: ( [23576,23577]",
      "dest": "(: ( [23494,23495]"
    },
    {
      "src": "string_literal [33531,33566]",
      "dest": "string_literal [32818,32853]"
    },
    {
      "src": "call_expression [31115,31148]",
      "dest": "call_expression [30402,30435]"
    },
    {
      "src": "string [26547,26583]",
      "dest": "string [26465,26501]"
    },
    {
      "src": "view: view [28658,28662]",
      "dest": "view: view [28506,28510]"
    },
    {
      "src": "): ) [26680,26681]",
      "dest": "): ) [26598,26599]"
    },
    {
      "src": "type_name [32585,32592]",
      "dest": "type_name [31872,31879]"
    },
    {
      "src": "expression_statement [22100,22137]",
      "dest": "expression_statement [22018,22055]"
    },
    {
      "src": "function_definition [29001,29202]",
      "dest": "function_definition [11470,11671]"
    },
    {
      "src": "): ) [31855,31856]",
      "dest": "): ) [31142,31143]"
    },
    {
      "src": "): ) [28138,28139]",
      "dest": "): ) [27986,27987]"
    },
    {
      "src": "type_name [3275,3282]",
      "dest": "type_name [3194,3201]"
    },
    {
      "src": "(: ( [16539,16540]",
      "dest": "(: ( [16669,16670]"
    },
    {
      "src": "call_expression [24446,24517]",
      "dest": "call_expression [24364,24435]"
    },
    {
      "src": "(: ( [9253,9254]",
      "dest": "(: ( [8955,8956]"
    },
    {
      "src": "identifier: abi [32863,32866]",
      "dest": "identifier: abi [32150,32153]"
    },
    {
      "src": "identifier: _transfer [20954,20963]",
      "dest": "identifier: _transfer [20872,20881]"
    },
    {
      "src": "primitive_type [11398,11402]",
      "dest": "primitive_type [11100,11104]"
    },
    {
      "src": "function_body [24250,24642]",
      "dest": "function_body [24168,24560]"
    },
    {
      "src": "identifier: initializer [31079,31090]",
      "dest": "identifier: initializer [30366,30377]"
    },
    {
      "src": "memory: memory [1911,1917]",
      "dest": "memory: memory [1830,1836]"
    },
    {
      "src": ",: , [11295,11296]",
      "dest": ",: , [10997,10998]"
    },
    {
      "src": "identifier: ERC20 [31324,31329]",
      "dest": "identifier: ERC20 [30611,30616]"
    },
    {
      "src": "(: ( [3998,3999]",
      "dest": "(: ( [3917,3918]"
    },
    {
      "src": "binary_expression [26524,26545]",
      "dest": "binary_expression [26442,26463]"
    },
    {
      "src": "event: event [8122,8127]",
      "dest": "event: event [7930,7935]"
    },
    {
      "src": "primitive_type [26894,26901]",
      "dest": "primitive_type [26812,26819]"
    },
    {
      "src": "||: || [16542,16544]",
      "dest": "||: || [16672,16674]"
    },
    {
      "src": "identifier: initialized [16716,16727]",
      "dest": "identifier: initialized [16846,16857]"
    },
    {
      "src": "call_expression [16526,16541]",
      "dest": "call_expression [16656,16671]"
    },
    {
      "src": "uint256: uint256 [21161,21168]",
      "dest": "uint256: uint256 [21079,21086]"
    },
    {
      "src": "primitive_type [29035,29042]",
      "dest": "primitive_type [11504,11511]"
    },
    {
      "src": "[: [ [25128,25129]",
      "dest": "[: [ [25046,25047]"
    },
    {
      "src": "uint256: uint256 [12184,12191]",
      "dest": "uint256: uint256 [12202,12209]"
    },
    {
      "src": "parameter [4739,4748]",
      "dest": "parameter [4658,4667]"
    },
    {
      "src": "(: ( [20885,20886]",
      "dest": "(: ( [20803,20804]"
    },
    {
      "src": "returns: returns [6769,6776]",
      "dest": "returns: returns [6577,6584]"
    },
    {
      "src": "call_argument [31702,31797]",
      "dest": "call_argument [30989,31084]"
    },
    {
      "src": "identifier: codehash [9750,9758]",
      "dest": "identifier: codehash [9452,9460]"
    },
    {
      "src": "event_paramater [8397,8420]",
      "dest": "event_paramater [8205,8228]"
    },
    {
      "src": "expression_statement [15089,15142]",
      "dest": "expression_statement [15107,15160]"
    },
    {
      "src": "call_argument [10172,10188]",
      "dest": "call_argument [9874,9890]"
    },
    {
      "src": "primitive_type [33478,33485]",
      "dest": "primitive_type [32765,32772]"
    },
    {
      "src": "binary_expression [24350,24373]",
      "dest": "binary_expression [24268,24291]"
    },
    {
      "src": "}: } [20481,20482]",
      "dest": "}: } [20399,20400]"
    },
    {
      "src": "parameter [13302,13317]",
      "dest": "parameter [13320,13335]"
    },
    {
      "src": "[: [ [26615,26616]",
      "dest": "[: [ [26533,26534]"
    },
    {
      "src": "binary_expression [28456,28477]",
      "dest": "binary_expression [28304,28325]"
    },
    {
      "src": "expression_statement [13152,13242]",
      "dest": "expression_statement [13170,13260]"
    },
    {
      "src": "address: address [10129,10136]",
      "dest": "address: address [9831,9838]"
    },
    {
      "src": "state_variable_declaration [29375,29495]",
      "dest": "state_variable_declaration [28662,28782]"
    },
    {
      "src": "\": \" [1090,1091]",
      "dest": "\": \" [1009,1010]"
    },
    {
      "src": "internal: internal [12497,12505]",
      "dest": "internal: internal [12515,12523]"
    },
    {
      "src": "member_expression [24551,24575]",
      "dest": "member_expression [24469,24493]"
    },
    {
      "src": "{: { [31096,31097]",
      "dest": "{: { [30383,30384]"
    },
    {
      "src": "expression_statement [16688,16708]",
      "dest": "expression_statement [16818,16838]"
    },
    {
      "src": "mapping: mapping [20239,20246]",
      "dest": "mapping: mapping [20157,20164]"
    },
    {
      "src": "): ) [24330,24331]",
      "dest": "): ) [24248,24249]"
    },
    {
      "src": "parameter [32567,32574]",
      "dest": "parameter [31854,31861]"
    },
    {
      "src": "{: { [13343,13344]",
      "dest": "{: { [13361,13362]"
    },
    {
      "src": "returns: returns [20928,20935]",
      "dest": "returns: returns [20846,20853]"
    },
    {
      "src": "identifier: initializing [16688,16700]",
      "dest": "identifier: initializing [16818,16830]"
    },
    {
      "src": "(: ( [33620,33621]",
      "dest": "(: ( [32907,32908]"
    },
    {
      "src": "comment: // EIP712-compatible signature data [31444,31479]",
      "dest": "comment: // EIP712-compatible signature data [30731,30766]"
    },
    {
      "src": "call_argument [24350,24373]",
      "dest": "call_argument [24268,24291]"
    },
    {
      "src": ",: , [22749,22750]",
      "dest": ",: , [22667,22668]"
    },
    {
      "src": "call_expression [27033,27045]",
      "dest": "call_expression [26951,26963]"
    },
    {
      "src": "identifier: cs [17348,17350]",
      "dest": "identifier: cs [17478,17480]"
    },
    {
      "src": "string_literal [25662,25697]",
      "dest": "string_literal [25580,25615]"
    },
    {
      "src": "state_mutability [3985,3989]",
      "dest": "state_mutability [3904,3908]"
    },
    {
      "src": "): ) [5425,5426]",
      "dest": "): ) [5344,5345]"
    },
    {
      "src": "block_statement [15181,15378]",
      "dest": "block_statement [15199,15396]"
    },
    {
      "src": "[: [ [27023,27024]",
      "dest": "[: [ [26941,26942]"
    },
    {
      "src": "identifier: value [12998,13003]",
      "dest": "identifier: value [13016,13021]"
    },
    {
      "src": "function: function [6704,6712]",
      "dest": "function: function [6512,6520]"
    },
    {
      "src": "using: using [29341,29346]",
      "dest": "using: using [28628,28633]"
    },
    {
      "src": "(: ( [14882,14883]",
      "dest": "(: ( [14900,14901]"
    },
    {
      "src": "identifier: require [11256,11263]",
      "dest": "identifier: require [10958,10965]"
    },
    {
      "src": "member_expression [13377,13420]",
      "dest": "member_expression [13395,13438]"
    },
    {
      "src": "call_argument [25018,25019]",
      "dest": "call_argument [24936,24937]"
    },
    {
      "src": "visibility [6396,6404]",
      "dest": "visibility [6204,6212]"
    },
    {
      "src": "): ) [1962,1963]",
      "dest": "): ) [1881,1882]"
    },
    {
      "src": "return: return [2767,2773]",
      "dest": "return: return [2686,2692]"
    },
    {
      "src": "function: function [5364,5372]",
      "dest": "function: function [5283,5291]"
    },
    {
      "src": "expression_statement [18612,18617]",
      "dest": "expression_statement [18644,18649]"
    },
    {
      "src": "member_expression [25140,25162]",
      "dest": "member_expression [25058,25080]"
    },
    {
      "src": "type_name [1955,1962]",
      "dest": "type_name [1874,1881]"
    },
    {
      "src": "parameter [13612,13625]",
      "dest": "parameter [13630,13643]"
    },
    {
      "src": "call_argument [11476,11536]",
      "dest": "call_argument [11178,11238]"
    },
    {
      "src": "call_argument [33420,33421]",
      "dest": "call_argument [32707,32708]"
    },
    {
      "src": "): ) [20995,20996]",
      "dest": "): ) [20913,20914]"
    },
    {
      "src": "state_variable_declaration [30416,30445]",
      "dest": "state_variable_declaration [29703,29732]"
    },
    {
      "src": "): ) [11412,11413]",
      "dest": "): ) [11114,11115]"
    },
    {
      "src": "\": \" [13074,13075]",
      "dest": "\": \" [13092,13093]"
    },
    {
      "src": "identifier: b [1034,1035]",
      "dest": "identifier: b [953,954]"
    },
    {
      "src": "): ) [24372,24373]",
      "dest": "): ) [24290,24291]"
    },
    {
      "src": "}: } [15387,15388]",
      "dest": "}: } [15405,15406]"
    },
    {
      "src": "yul_identifier [17368,17370]",
      "dest": "yul_identifier [17498,17500]"
    },
    {
      "src": ",: , [13176,13177]",
      "dest": ",: , [13194,13195]"
    },
    {
      "src": "=: = [1028,1029]",
      "dest": "=: = [947,948]"
    },
    {
      "src": "return_type_definition [30659,30676]",
      "dest": "return_type_definition [29946,29963]"
    },
    {
      "src": ",: , [21121,21122]",
      "dest": ",: , [21039,21040]"
    },
    {
      "src": "type_name [8179,8186]",
      "dest": "type_name [7987,7994]"
    },
    {
      "src": "function_body [23511,23681]",
      "dest": "function_body [23429,23599]"
    },
    {
      "src": ",: , [1418,1419]",
      "dest": ",: , [1337,1338]"
    },
    {
      "src": "): ) [20919,20920]",
      "dest": "): ) [20837,20838]"
    },
    {
      "src": "string [4810,4836]",
      "dest": "string [4729,4755]"
    },
    {
      "src": "call_argument [33113,33119]",
      "dest": "call_argument [32400,32406]"
    },
    {
      "src": "parameter [22734,22749]",
      "dest": "parameter [22652,22667]"
    },
    {
      "src": "): ) [15077,15078]",
      "dest": "): ) [15095,15096]"
    },
    {
      "src": "identifier: Transfer [25866,25874]",
      "dest": "identifier: Transfer [25784,25792]"
    },
    {
      "src": "visibility [17509,17516]",
      "dest": "visibility [17639,17646]"
    },
    {
      "src": "identifier: value [13620,13625]",
      "dest": "identifier: value [13638,13643]"
    },
    {
      "src": "event_paramater [8374,8395]",
      "dest": "event_paramater [8182,8203]"
    },
    {
      "src": "): ) [29618,29619]",
      "dest": "): ) [28905,28906]"
    },
    {
      "src": "comment: // Empty internal constructor, to prevent people from mistakenly deploying [18193,18267]",
      "dest": "comment: // Empty internal constructor, to prevent people from mistakenly deploying [18225,18299]"
    },
    {
      "src": "{: { [24250,24251]",
      "dest": "{: { [24168,24169]"
    },
    {
      "src": ",: , [8420,8421]",
      "dest": ",: , [8228,8229]"
    },
    {
      "src": "private: private [14332,14339]",
      "dest": "private: private [14350,14357]"
    },
    {
      "src": "call_expression [23554,23650]",
      "dest": "call_expression [23472,23568]"
    },
    {
      "src": "type_cast_expression [10164,10189]",
      "dest": "type_cast_expression [9866,9891]"
    },
    {
      "src": "call_argument [13074,13130]",
      "dest": "call_argument [13092,13148]"
    },
    {
      "src": "): ) [16962,16963]",
      "dest": "): ) [17092,17093]"
    },
    {
      "src": "\": \" [32907,32908]",
      "dest": "\": \" [32194,32195]"
    },
    {
      "src": "identifier: c [2052,2053]",
      "dest": "identifier: c [1971,1972]"
    },
    {
      "src": "parameter [2370,2377]",
      "dest": "parameter [2289,2296]"
    },
    {
      "src": "identifier: msg [18518,18521]",
      "dest": "identifier: msg [18550,18553]"
    },
    {
      "src": ",: , [27057,27058]",
      "dest": ",: , [26975,26976]"
    },
    {
      "src": "primitive_type [7870,7877]",
      "dest": "primitive_type [7678,7685]"
    },
    {
      "src": "indexed: indexed [8145,8152]",
      "dest": "indexed: indexed [7953,7960]"
    },
    {
      "src": "type_alias [12171,12179]",
      "dest": "type_alias [12189,12197]"
    },
    {
      "src": "identifier: recipientChain [32461,32475]",
      "dest": "identifier: recipientChain [31748,31762]"
    },
    {
      "src": "}: } [2060,2061]",
      "dest": "}: } [1979,1980]"
    },
    {
      "src": ",: , [13699,13700]",
      "dest": ",: , [13717,13718]"
    },
    {
      "src": "yul_identifier [9750,9758]",
      "dest": "yul_identifier [9452,9460]"
    },
    {
      "src": "identifier: InitializableV2 [31403,31418]",
      "dest": "identifier: InitializableV2 [30690,30705]"
    },
    {
      "src": "): ) [14937,14938]",
      "dest": "): ) [14955,14956]"
    },
    {
      "src": "number_literal: 0 [17412,17413]",
      "dest": "number_literal: 0 [17542,17543]"
    },
    {
      "src": "primitive_type [32514,32521]",
      "dest": "primitive_type [31801,31808]"
    },
    {
      "src": "(: ( [5477,5478]",
      "dest": "(: ( [5396,5397]"
    },
    {
      "src": "identifier: wormhole [30469,30477]",
      "dest": "identifier: wormhole [29756,29764]"
    },
    {
      "src": "call_expression [32863,33348]",
      "dest": "call_expression [32150,32635]"
    },
    {
      "src": "{: { [1964,1965]",
      "dest": "{: { [1883,1884]"
    },
    {
      "src": "[: [ [21206,21207]",
      "dest": "[: [ [21124,21125]"
    },
    {
      "src": "identifier: isTopLevelCall [16764,16778]",
      "dest": "identifier: isTopLevelCall [16894,16908]"
    },
    {
      "src": "[: [ [27032,27033]",
      "dest": "[: [ [26950,26951]"
    },
    {
      "src": "function_definition [26351,26689]",
      "dest": "function_definition [26269,26607]"
    },
    {
      "src": "true [21014,21018]",
      "dest": "true [20932,20936]"
    },
    {
      "src": "identifier: _totalSupply [25084,25096]",
      "dest": "identifier: _totalSupply [25002,25014]"
    },
    {
      "src": "address: address [8159,8166]",
      "dest": "address: address [7967,7974]"
    },
    {
      "src": "identifier: sub [24464,24467]",
      "dest": "identifier: sub [24382,24385]"
    },
    {
      "src": "call_argument [33701,33707]",
      "dest": "call_argument [32988,32994]"
    },
    {
      "src": "parameter [20937,20941]",
      "dest": "parameter [20855,20859]"
    },
    {
      "src": "): ) [11276,11277]",
      "dest": "): ) [10978,10979]"
    },
    {
      "src": "{: { [27667,27668]",
      "dest": "{: { [27515,27516]"
    },
    {
      "src": "address: address [26454,26461]",
      "dest": "address: address [26372,26379]"
    },
    {
      "src": ".: . [23588,23589]",
      "dest": ".: . [23506,23507]"
    },
    {
      "src": "return: return [28689,28695]",
      "dest": "return: return [28537,28543]"
    },
    {
      "src": "parameter [5399,5425]",
      "dest": "parameter [5318,5344]"
    },
    {
      "src": "(: ( [23530,23531]",
      "dest": "(: ( [23448,23449]"
    },
    {
      "src": "}: } [16741,16742]",
      "dest": "}: } [16871,16872]"
    },
    {
      "src": "visibility [20193,20200]",
      "dest": "visibility [20111,20118]"
    },
    {
      "src": "identifier: owner [26609,26614]",
      "dest": "identifier: owner [26527,26532]"
    },
    {
      "src": "is: is [27650,27652]",
      "dest": "is: is [27498,27500]"
    },
    {
      "src": "identifier: b [1488,1489]",
      "dest": "identifier: b [1407,1408]"
    },
    {
      "src": "identifier: require [15089,15096]",
      "dest": "identifier: require [15107,15114]"
    },
    {
      "src": "indexed: indexed [8167,8174]",
      "dest": "indexed: indexed [7975,7982]"
    },
    {
      "src": "string [3346,3374]",
      "dest": "string [3265,3293]"
    },
    {
      "src": "number_literal: 0 [26462,26463]",
      "dest": "number_literal: 0 [26380,26381]"
    },
    {
      "src": "(: ( [16957,16958]",
      "dest": "(: ( [17087,17088]"
    },
    {
      "src": "{: { [20122,20123]",
      "dest": "{: { [20040,20041]"
    },
    {
      "src": "): ) [31052,31053]",
      "dest": "): ) [30339,30340]"
    },
    {
      "src": "boolean_literal [21510,21514]",
      "dest": "boolean_literal [21428,21432]"
    },
    {
      "src": "identifier: _totalSupply [25811,25823]",
      "dest": "identifier: _totalSupply [25729,25741]"
    },
    {
      "src": "if_statement [15154,15378]",
      "dest": "if_statement [15172,15396]"
    },
    {
      "src": ",: , [22049,22050]",
      "dest": ",: , [21967,21968]"
    },
    {
      "src": "type_name [30316,30342]",
      "dest": "type_name [29603,29629]"
    },
    {
      "src": "!=: != [25647,25649]",
      "dest": "!=: != [25565,25567]"
    },
    {
      "src": "{: { [16679,16680]",
      "dest": "{: { [16809,16810]"
    },
    {
      "src": "inheritance_specifier [18172,18185]",
      "dest": "inheritance_specifier [18204,18217]"
    },
    {
      "src": "identifier: transferToken [33767,33780]",
      "dest": "identifier: transferToken [33054,33067]"
    },
    {
      "src": "identifier: nonce [29180,29185]",
      "dest": "identifier: nonce [11649,11654]"
    },
    {
      "src": "): ) [7504,7505]",
      "dest": "): ) [7312,7313]"
    },
    {
      "src": "call_expression [22813,22825]",
      "dest": "call_expression [22731,22743]"
    },
    {
      "src": "parameter [1904,1930]",
      "dest": "parameter [1823,1849]"
    },
    {
      "src": "primitive_type [6065,6072]",
      "dest": "primitive_type [5873,5880]"
    },
    {
      "src": "uint256: uint256 [3275,3282]",
      "dest": "uint256: uint256 [3194,3201]"
    },
    {
      "src": "uint256: uint256 [1955,1962]",
      "dest": "uint256: uint256 [1874,1881]"
    },
    {
      "src": "type_name [24225,24232]",
      "dest": "type_name [24143,24150]"
    },
    {
      "src": "function_definition [21994,22298]",
      "dest": "function_definition [21912,22216]"
    },
    {
      "src": "type_name [2670,2677]",
      "dest": "type_name [2589,2596]"
    },
    {
      "src": "{: { [31576,31577]",
      "dest": "{: { [30863,30864]"
    },
    {
      "src": ",: , [20903,20904]",
      "dest": ",: , [20821,20822]"
    },
    {
      "src": "primitive_type [23447,23454]",
      "dest": "primitive_type [23365,23372]"
    },
    {
      "src": "yul_function_call [31602,31609]",
      "dest": "yul_function_call [30889,30896]"
    },
    {
      "src": "): ) [33358,33359]",
      "dest": "): ) [32645,32646]"
    },
    {
      "src": ":=: := [31599,31601]",
      "dest": ":=: := [30886,30888]"
    },
    {
      "src": "): ) [1091,1092]",
      "dest": "): ) [1010,1011]"
    },
    {
      "src": "identifier: success [11403,11410]",
      "dest": "identifier: success [11105,11112]"
    },
    {
      "src": "address: address [7870,7877]",
      "dest": "address: address [7678,7685]"
    },
    {
      "src": "primitive_type [16232,16236]",
      "dest": "primitive_type [16287,16291]"
    },
    {
      "src": "member_expression [18518,18528]",
      "dest": "member_expression [18550,18560]"
    },
    {
      "src": "identifier: encodeWithSelector [13468,13486]",
      "dest": "identifier: encodeWithSelector [13486,13504]"
    },
    {
      "src": "call_argument [31949,31953]",
      "dest": "call_argument [31236,31240]"
    },
    {
      "src": "emit: emit [24594,24598]",
      "dest": "emit: emit [24512,24516]"
    },
    {
      "src": "call_argument [26658,26663]",
      "dest": "call_argument [26576,26581]"
    },
    {
      "src": "call_argument [15061,15066]",
      "dest": "call_argument [15079,15084]"
    },
    {
      "src": "return_type_definition [2361,2378]",
      "dest": "return_type_definition [2280,2297]"
    },
    {
      "src": "primitive_type [24955,24962]",
      "dest": "primitive_type [24873,24880]"
    },
    {
      "src": "}: } [5529,5530]",
      "dest": "}: } [5448,5449]"
    },
    {
      "src": "identifier: _msgSender [26998,27008]",
      "dest": "identifier: _msgSender [26916,26926]"
    },
    {
      "src": "modifier: modifier [16472,16480]",
      "dest": "modifier: modifier [16527,16535]"
    },
    {
      "src": "call_expression [1975,2004]",
      "dest": "call_expression [1894,1923]"
    },
    {
      "src": "[: [ [17504,17505]",
      "dest": "[: [ [17634,17635]"
    },
    {
      "src": "type_name [6361,6368]",
      "dest": "type_name [6169,6176]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [9682,9729]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [9384,9431]"
    },
    {
      "src": "returns: returns [1946,1953]",
      "dest": "returns: returns [1865,1872]"
    },
    {
      "src": "identifier: newAllowance [13362,13374]",
      "dest": "identifier: newAllowance [13380,13392]"
    },
    {
      "src": "identifier: abi [12543,12546]",
      "dest": "identifier: abi [12561,12564]"
    },
    {
      "src": "comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [13888,14265]",
      "dest": "comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [13906,14283]"
    },
    {
      "src": "solidity_version_comparison_operator [96,98]",
      "dest": "solidity_version_comparison_operator [15,17]"
    },
    {
      "src": ",: , [24204,24205]",
      "dest": ",: , [24122,24123]"
    },
    {
      "src": "identifier: Approval [8365,8373]",
      "dest": "identifier: Approval [8173,8181]"
    },
    {
      "src": "binary_expression [5478,5484]",
      "dest": "binary_expression [5397,5403]"
    },
    {
      "src": "function_definition [21370,21522]",
      "dest": "function_definition [21288,21440]"
    },
    {
      "src": "primitive_type [7524,7528]",
      "dest": "primitive_type [7332,7336]"
    },
    {
      "src": "call_argument [26466,26504]",
      "dest": "call_argument [26384,26422]"
    },
    {
      "src": "bytes: bytes [31885,31890]",
      "dest": "bytes: bytes [31172,31177]"
    },
    {
      "src": "identifier: returndata [15039,15049]",
      "dest": "identifier: returndata [15057,15067]"
    },
    {
      "src": "call_expression [23522,23651]",
      "dest": "call_expression [23440,23569]"
    },
    {
      "src": "]: ] [23587,23588]",
      "dest": "]: ] [23505,23506]"
    },
    {
      "src": "identifier: account [25150,25157]",
      "dest": "identifier: account [25068,25075]"
    },
    {
      "src": "\": \" [27757,27758]",
      "dest": "\": \" [27605,27606]"
    },
    {
      "src": "return_type_definition [20426,20443]",
      "dest": "return_type_definition [20344,20361]"
    },
    {
      "src": "): ) [5457,5458]",
      "dest": "): ) [5376,5377]"
    },
    {
      "src": "identifier: value [13714,13719]",
      "dest": "identifier: value [13732,13737]"
    },
    {
      "src": "user_defined_type [29361,29366]",
      "dest": "user_defined_type [28648,28653]"
    },
    {
      "src": ",: , [26382,26383]",
      "dest": ",: , [26300,26301]"
    },
    {
      "src": "address: address [24206,24213]",
      "dest": "address: address [24124,24131]"
    },
    {
      "src": "type_name [12663,12670]",
      "dest": "type_name [12681,12688]"
    },
    {
      "src": "]: ] [24462,24463]",
      "dest": "]: ] [24380,24381]"
    },
    {
      "src": "identifier: this [11272,11276]",
      "dest": "identifier: this [10974,10978]"
    },
    {
      "src": "): ) [1461,1462]",
      "dest": "): ) [1380,1381]"
    },
    {
      "src": "): ) [13764,13765]",
      "dest": "): ) [13782,13783]"
    },
    {
      "src": ",: , [1902,1903]",
      "dest": ",: , [1821,1822]"
    },
    {
      "src": "uint256: uint256 [5450,5457]",
      "dest": "uint256: uint256 [5369,5376]"
    },
    {
      "src": "call_argument [31330,31343]",
      "dest": "call_argument [30617,30630]"
    },
    {
      "src": "parameter [22751,22769]",
      "dest": "parameter [22669,22687]"
    },
    {
      "src": "[: [ [26608,26609]",
      "dest": "[: [ [26526,26527]"
    },
    {
      "src": ".: . [32997,32998]",
      "dest": ".: . [32284,32285]"
    },
    {
      "src": "): ) [20579,20580]",
      "dest": "): ) [20497,20498]"
    },
    {
      "src": "(: ( [26461,26462]",
      "dest": "(: ( [26379,26380]"
    },
    {
      "src": "parameter [6380,6394]",
      "dest": "parameter [6188,6202]"
    },
    {
      "src": "function_definition [9234,9853]",
      "dest": "function_definition [8936,9555]"
    },
    {
      "src": "identifier: ______gap [17517,17526]",
      "dest": "identifier: ______gap [17647,17656]"
    },
    {
      "src": "primitive_type [32822,32829]",
      "dest": "primitive_type [32109,32116]"
    },
    {
      "src": "(: ( [26542,26543]",
      "dest": "(: ( [26460,26461]"
    },
    {
      "src": "identifier: initialize [31419,31429]",
      "dest": "identifier: initialize [30706,30716]"
    },
    {
      "src": "call_expression [2698,2754]",
      "dest": "call_expression [2617,2673]"
    },
    {
      "src": "identifier: _balances [25119,25128]",
      "dest": "identifier: _balances [25037,25046]"
    },
    {
      "src": "\": \" [24515,24516]",
      "dest": "\": \" [24433,24434]"
    },
    {
      "src": "call_argument [25884,25894]",
      "dest": "call_argument [25802,25812]"
    },
    {
      "src": "string_literal [1491,1523]",
      "dest": "string_literal [1410,1442]"
    },
    {
      "src": ",: , [3273,3274]",
      "dest": ",: , [3192,3193]"
    },
    {
      "src": "expression_statement [16789,16810]",
      "dest": "expression_statement [16919,16940]"
    },
    {
      "src": "call_argument [12997,13059]",
      "dest": "call_argument [13015,13077]"
    },
    {
      "src": "return_statement [10157,10190]",
      "dest": "return_statement [9859,9892]"
    },
    {
      "src": "primitive_type [4125,4132]",
      "dest": "primitive_type [4044,4051]"
    },
    {
      "src": "type_name [27115,27126]",
      "dest": "type_name [27033,27044]"
    },
    {
      "src": "identifier: selector [13215,13223]",
      "dest": "identifier: selector [13233,13241]"
    },
    {
      "src": "view: view [20421,20425]",
      "dest": "view: view [20339,20343]"
    },
    {
      "src": "assignment_expression [25069,25108]",
      "dest": "assignment_expression [24987,25026]"
    },
    {
      "src": "==: == [17409,17411]",
      "dest": "==: == [17539,17541]"
    },
    {
      "src": "identifier: token [12261,12266]",
      "dest": "identifier: token [12279,12284]"
    },
    {
      "src": ",: , [12387,12388]",
      "dest": ",: , [12405,12406]"
    },
    {
      "src": "return: return [2045,2051]",
      "dest": "return: return [1964,1970]"
    },
    {
      "src": "primitive_type [29084,29090]",
      "dest": "primitive_type [11553,11559]"
    },
    {
      "src": "): ) [30750,30751]",
      "dest": "): ) [30037,30038]"
    },
    {
      "src": "): ) [11447,11448]",
      "dest": "): ) [11149,11150]"
    },
    {
      "src": "using: using [20129,20134]",
      "dest": "using: using [20047,20052]"
    },
    {
      "src": "): ) [973,974]",
      "dest": "): ) [892,893]"
    },
    {
      "src": "comment: // A Solidity high level call has three parts: [14516,14562]",
      "dest": "comment: // A Solidity high level call has three parts: [14534,14580]"
    },
    {
      "src": "memory: memory [18593,18599]",
      "dest": "memory: memory [18625,18631]"
    },
    {
      "src": "=: = [16701,16702]",
      "dest": "=: = [16831,16832]"
    },
    {
      "src": "): ) [16778,16779]",
      "dest": "): ) [16908,16909]"
    },
    {
      "src": "primitive_type [4739,4746]",
      "dest": "primitive_type [4658,4665]"
    },
    {
      "src": "identifier: balanceOf [6055,6064]",
      "dest": "identifier: balanceOf [5863,5872]"
    },
    {
      "src": "number_literal: 0 [25892,25893]",
      "dest": "number_literal: 0 [25810,25811]"
    },
    {
      "src": "address: address [12456,12463]",
      "dest": "address: address [12474,12481]"
    },
    {
      "src": "parameter [32406,32418]",
      "dest": "parameter [31693,31705]"
    },
    {
      "src": "identifier: deadline [33283,33291]",
      "dest": "identifier: deadline [32570,32578]"
    },
    {
      "src": "identifier: approve [21379,21386]",
      "dest": "identifier: approve [21297,21304]"
    },
    {
      "src": ",: , [12593,12594]",
      "dest": ",: , [12611,12612]"
    },
    {
      "src": "identifier: recipient [24214,24223]",
      "dest": "identifier: recipient [24132,24141]"
    },
    {
      "src": "address: address [26894,26901]",
      "dest": "address: address [26812,26819]"
    },
    {
      "src": "call_argument [26445,26464]",
      "dest": "call_argument [26363,26382]"
    },
    {
      "src": "pure: pure [2356,2360]",
      "dest": "pure: pure [2275,2279]"
    },
    {
      "src": "address: address [30729,30736]",
      "dest": "address: address [30016,30023]"
    },
    {
      "src": "primitive_type [11220,11227]",
      "dest": "primitive_type [10922,10929]"
    },
    {
      "src": "parameter [12663,12678]",
      "dest": "parameter [12681,12696]"
    },
    {
      "src": "identifier: spender [23580,23587]",
      "dest": "identifier: spender [23498,23505]"
    },
    {
      "src": "internal: internal [1932,1940]",
      "dest": "internal: internal [1851,1859]"
    },
    {
      "src": "): ) [33698,33699]",
      "dest": "): ) [32985,32986]"
    },
    {
      "src": "private: private [29382,29389]",
      "dest": "private: private [28669,28676]"
    },
    {
      "src": "parameter [953,962]",
      "dest": "parameter [872,881]"
    },
    {
      "src": "(: ( [31683,31684]",
      "dest": "(: ( [30970,30971]"
    },
    {
      "src": "state_mutability [18469,18473]",
      "dest": "state_mutability [18501,18505]"
    },
    {
      "src": "if_statement [2611,2658]",
      "dest": "if_statement [2530,2577]"
    },
    {
      "src": "identifier: amount [26919,26925]",
      "dest": "identifier: amount [26837,26843]"
    },
    {
      "src": "type_name [22787,22791]",
      "dest": "type_name [22705,22709]"
    },
    {
      "src": ".: . [32866,32867]",
      "dest": ".: . [32153,32154]"
    },
    {
      "src": "member_expression [25826,25842]",
      "dest": "member_expression [25744,25760]"
    },
    {
      "src": "primitive_type [28672,28676]",
      "dest": "primitive_type [28520,28524]"
    },
    {
      "src": "}: } [2657,2658]",
      "dest": "}: } [2576,2577]"
    },
    {
      "src": "view: view [18469,18473]",
      "dest": "view: view [18501,18505]"
    },
    {
      "src": "expression_statement [25711,25801]",
      "dest": "expression_statement [25629,25719]"
    },
    {
      "src": "address: address [10164,10171]",
      "dest": "address: address [9866,9873]"
    },
    {
      "src": "(: ( [13685,13686]",
      "dest": "(: ( [13703,13704]"
    },
    {
      "src": "view: view [20588,20592]",
      "dest": "view: view [20506,20510]"
    },
    {
      "src": "type_name [23464,23471]",
      "dest": "type_name [23382,23389]"
    },
    {
      "src": "(: ( [20172,20173]",
      "dest": "(: ( [20090,20091]"
    },
    {
      "src": "visibility [13627,13635]",
      "dest": "visibility [13645,13653]"
    },
    {
      "src": "true: true [21510,21514]",
      "dest": "true: true [21428,21432]"
    },
    {
      "src": "comment: //  2. The call itself is made, and success asserted [14654,14706]",
      "dest": "comment: //  2. The call itself is made, and success asserted [14672,14724]"
    },
    {
      "src": "primitive_type [22016,22023]",
      "dest": "primitive_type [21934,21941]"
    },
    {
      "src": ",: , [11410,11411]",
      "dest": ",: , [11112,11113]"
    },
    {
      "src": "returns: returns [28663,28670]",
      "dest": "returns: returns [28511,28518]"
    },
    {
      "src": "string_literal [22224,22266]",
      "dest": "string_literal [22142,22184]"
    },
    {
      "src": "(: ( [13824,13825]",
      "dest": "(: ( [13842,13843]"
    },
    {
      "src": "call_argument [33767,33780]",
      "dest": "call_argument [33054,33067]"
    },
    {
      "src": "visibility [6082,6090]",
      "dest": "visibility [5890,5898]"
    },
    {
      "src": "identifier: encodeWithSelector [12547,12565]",
      "dest": "identifier: encodeWithSelector [12565,12583]"
    },
    {
      "src": "contract: contract [20073,20081]",
      "dest": "contract: contract [19991,19999]"
    },
    {
      "src": "identifier: IERC20 [20115,20121]",
      "dest": "identifier: IERC20 [20033,20039]"
    },
    {
      "src": "function_body [21170,21223]",
      "dest": "function_body [21088,21141]"
    },
    {
      "src": "call_argument [13234,13239]",
      "dest": "call_argument [13252,13257]"
    },
    {
      "src": "identifier: returndata [15300,15310]",
      "dest": "identifier: returndata [15318,15328]"
    },
    {
      "src": "variable_declaration [15026,15049]",
      "dest": "variable_declaration [15044,15067]"
    },
    {
      "src": "!=: != [33475,33477]",
      "dest": "!=: != [32762,32764]"
    },
    {
      "src": "uint256: uint256 [20297,20304]",
      "dest": "uint256: uint256 [20215,20222]"
    },
    {
      "src": "for: for [29357,29360]",
      "dest": "for: for [28644,28647]"
    },
    {
      "src": "call_argument [22836,22886]",
      "dest": "call_argument [22754,22804]"
    },
    {
      "src": "call_argument [31134,31147]",
      "dest": "call_argument [30421,30434]"
    },
    {
      "src": "string_literal [32898,32908]",
      "dest": "string_literal [32185,32195]"
    },
    {
      "src": "): ) [24969,24970]",
      "dest": "): ) [24887,24888]"
    },
    {
      "src": "{: { [32629,32630]",
      "dest": "{: { [31916,31917]"
    },
    {
      "src": "string_literal [11297,11328]",
      "dest": "string_literal [10999,11030]"
    },
    {
      "src": "call_argument [25755,25761]",
      "dest": "call_argument [25673,25679]"
    },
    {
      "src": "): ) [9781,9782]",
      "dest": "): ) [9483,9484]"
    },
    {
      "src": ",: , [8157,8158]",
      "dest": ",: , [7965,7966]"
    },
    {
      "src": "identifier: initializing [16640,16652]",
      "dest": "identifier: initializing [16770,16782]"
    },
    {
      "src": ".: . [11277,11278]",
      "dest": ".: . [10979,10980]"
    },
    {
      "src": "if: if [16760,16762]",
      "dest": "if: if [16890,16892]"
    },
    {
      "src": "member_expression [27012,27050]",
      "dest": "member_expression [26930,26968]"
    },
    {
      "src": "parameter [3264,3273]",
      "dest": "parameter [3183,3192]"
    },
    {
      "src": "emit_statement [25181,25224]",
      "dest": "emit_statement [25099,25142]"
    },
    {
      "src": "state_variable_declaration [29976,30008]",
      "dest": "state_variable_declaration [29263,29295]"
    },
    {
      "src": "yul_path [31591,31598]",
      "dest": "yul_path [30878,30885]"
    },
    {
      "src": "identifier: token [13487,13492]",
      "dest": "identifier: token [13505,13510]"
    },
    {
      "src": "{: { [20943,20944]",
      "dest": "{: { [20861,20862]"
    },
    {
      "src": "visibility [5427,5435]",
      "dest": "visibility [5346,5354]"
    },
    {
      "src": "address: address [13595,13602]",
      "dest": "address: address [13613,13620]"
    },
    {
      "src": "expression_statement [24261,24332]",
      "dest": "expression_statement [24179,24250]"
    },
    {
      "src": "\": \" [27790,27791]",
      "dest": "\": \" [27638,27639]"
    },
    {
      "src": "(: ( [11192,11193]",
      "dest": "(: ( [10894,10895]"
    },
    {
      "src": "type_name [953,960]",
      "dest": "type_name [872,879]"
    },
    {
      "src": "(: ( [13392,13393]",
      "dest": "(: ( [13410,13411]"
    },
    {
      "src": "function_body [18601,18769]",
      "dest": "function_body [18633,18801]"
    },
    {
      "src": ":=: := [17371,17373]",
      "dest": ":=: := [17501,17503]"
    },
    {
      "src": "string_literal [24291,24330]",
      "dest": "string_literal [24209,24248]"
    },
    {
      "src": ".: . [15168,15169]",
      "dest": ".: . [15186,15187]"
    },
    {
      "src": "function: function [1396,1404]",
      "dest": "function: function [1315,1323]"
    },
    {
      "src": "identifier: amount [21485,21491]",
      "dest": "identifier: amount [21403,21409]"
    },
    {
      "src": "type_name [21108,21115]",
      "dest": "type_name [21026,21033]"
    },
    {
      "src": "identifier: _approve [23522,23530]",
      "dest": "identifier: _approve [23440,23448]"
    },
    {
      "src": "(: ( [1453,1454]",
      "dest": "(: ( [1372,1373]"
    },
    {
      "src": "state_mutability [1941,1945]",
      "dest": "state_mutability [1860,1864]"
    },
    {
      "src": "=: = [9603,9604]",
      "dest": "=: = [9305,9306]"
    },
    {
      "src": "state_mutability [3295,3299]",
      "dest": "state_mutability [3214,3218]"
    },
    {
      "src": "): ) [2621,2622]",
      "dest": "): ) [2540,2541]"
    },
    {
      "src": "): ) [10188,10189]",
      "dest": "): ) [9890,9891]"
    },
    {
      "src": "type_name [29503,29509]",
      "dest": "type_name [28790,28796]"
    },
    {
      "src": "primitive_type [29375,29381]",
      "dest": "primitive_type [28662,28668]"
    },
    {
      "src": "return: return [10157,10163]",
      "dest": "return: return [9859,9865]"
    },
    {
      "src": "primitive_type [13302,13309]",
      "dest": "primitive_type [13320,13327]"
    },
    {
      "src": "identifier: transferFrom [22003,22015]",
      "dest": "identifier: transferFrom [21921,21933]"
    },
    {
      "src": "identifier: require [12989,12996]",
      "dest": "identifier: require [13007,13014]"
    },
    {
      "src": "identifier: DOMAIN_SEPARATOR [29991,30007]",
      "dest": "identifier: DOMAIN_SEPARATOR [29278,29294]"
    },
    {
      "src": "uint: uint [31489,31493]",
      "dest": "uint: uint [30776,30780]"
    },
    {
      "src": "\": \" [27059,27060]",
      "dest": "\": \" [26977,26978]"
    },
    {
      "src": "bytes32: bytes32 [32605,32612]",
      "dest": "bytes32: bytes32 [31892,31899]"
    },
    {
      "src": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [709,934]",
      "dest": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [628,853]"
    },
    {
      "src": "): ) [27044,27045]",
      "dest": "): ) [26962,26963]"
    },
    {
      "src": "parameter [25578,25593]",
      "dest": "parameter [25496,25511]"
    },
    {
      "src": "(: ( [13400,13401]",
      "dest": "(: ( [13418,13419]"
    },
    {
      "src": "comment: // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2612.md [29696,29760]",
      "dest": "comment: // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2612.md [28983,29047]"
    },
    {
      "src": "return: return [2638,2644]",
      "dest": "return: return [2557,2563]"
    },
    {
      "src": "identifier: sub [1481,1484]",
      "dest": "identifier: sub [1400,1403]"
    },
    {
      "src": "number_literal: 0 [24287,24288]",
      "dest": "number_literal: 0 [24205,24206]"
    },
    {
      "src": "identifier: from [33621,33625]",
      "dest": "identifier: from [32908,32912]"
    },
    {
      "src": "): ) [10144,10145]",
      "dest": "): ) [9846,9847]"
    },
    {
      "src": "public: public [30180,30186]",
      "dest": "public: public [29467,29473]"
    },
    {
      "src": "(: ( [31329,31330]",
      "dest": "(: ( [30616,30617]"
    },
    {
      "src": "}: } [24641,24642]",
      "dest": "}: } [24559,24560]"
    },
    {
      "src": "parameter [20905,20919]",
      "dest": "parameter [20823,20837]"
    },
    {
      "src": "{: { [28678,28679]",
      "dest": "{: { [28526,28527]"
    },
    {
      "src": "call_argument [2706,2716]",
      "dest": "call_argument [2625,2635]"
    },
    {
      "src": "array_access [22836,22870]",
      "dest": "array_access [22754,22788]"
    },
    {
      "src": "identifier: b [5396,5397]",
      "dest": "identifier: b [5315,5316]"
    },
    {
      "src": "identifier: recipient [29124,29133]",
      "dest": "identifier: recipient [11593,11602]"
    },
    {
      "src": "type_cast_expression [13030,13043]",
      "dest": "type_cast_expression [13048,13061]"
    },
    {
      "src": ">: > [15176,15177]",
      "dest": ">: > [15194,15195]"
    },
    {
      "src": "binary_expression [16510,16557]",
      "dest": "binary_expression [16640,16687]"
    },
    {
      "src": "(: ( [15312,15313]",
      "dest": "(: ( [15330,15331]"
    },
    {
      "src": "call_argument [24371,24372]",
      "dest": "call_argument [24289,24290]"
    },
    {
      "src": "call_argument [26962,26968]",
      "dest": "call_argument [26880,26886]"
    },
    {
      "src": "address: address [26384,26391]",
      "dest": "address: address [26302,26309]"
    },
    {
      "src": "primitive_type [1420,1427]",
      "dest": "primitive_type [1339,1346]"
    },
    {
      "src": "private: private [20305,20312]",
      "dest": "private: private [20223,20230]"
    },
    {
      "src": ",: , [22222,22223]",
      "dest": ",: , [22140,22141]"
    },
    {
      "src": "parameter [24955,24969]",
      "dest": "parameter [24873,24887]"
    },
    {
      "src": "type_name [32429,32436]",
      "dest": "type_name [31716,31723]"
    },
    {
      "src": "identifier: abi [31673,31676]",
      "dest": "identifier: abi [30960,30963]"
    },
    {
      "src": "\": \" [13721,13722]",
      "dest": "\": \" [13739,13740]"
    },
    {
      "src": "): ) [25055,25056]",
      "dest": "): ) [24973,24974]"
    },
    {
      "src": ",: , [3341,3342]",
      "dest": ",: , [3260,3261]"
    },
    {
      "src": "uint256: uint256 [1454,1461]",
      "dest": "uint256: uint256 [1373,1380]"
    },
    {
      "src": ",: , [3344,3345]",
      "dest": ",: , [3263,3264]"
    },
    {
      "src": "bytes32: bytes32 [29976,29983]",
      "dest": "bytes32: bytes32 [29263,29270]"
    },
    {
      "src": "library: library [8623,8630]",
      "dest": "library: library [8325,8332]"
    },
    {
      "src": "(: ( [24575,24576]",
      "dest": "(: ( [24493,24494]"
    },
    {
      "src": "call_argument [25896,25902]",
      "dest": "call_argument [25814,25820]"
    },
    {
      "src": "call_expression [27012,27098]",
      "dest": "call_expression [26930,27016]"
    },
    {
      "src": "comment: // solhint-disable-next-line max-line-length [15223,15267]",
      "dest": "comment: // solhint-disable-next-line max-line-length [15241,15285]"
    },
    {
      "src": "identifier: Context [18161,18168]",
      "dest": "identifier: Context [18193,18200]"
    },
    {
      "src": "false: false [16804,16809]",
      "dest": "false: false [16934,16939]"
    },
    {
      "src": "type_name [7490,7497]",
      "dest": "type_name [7298,7305]"
    },
    {
      "src": "external: external [5926,5934]",
      "dest": "external: external [5734,5742]"
    },
    {
      "src": "identifier: spender [13045,13052]",
      "dest": "identifier: spender [13063,13070]"
    },
    {
      "src": "variable_declaration [32640,32652]",
      "dest": "variable_declaration [31927,31939]"
    },
    {
      "src": "type_name [26911,26918]",
      "dest": "type_name [26829,26836]"
    },
    {
      "src": "inheritance_specifier [29318,29333]",
      "dest": "inheritance_specifier [28605,28620]"
    },
    {
      "src": "return_type_definition [5940,5957]",
      "dest": "return_type_definition [5748,5765]"
    },
    {
      "src": "identifier: amount [33796,33802]",
      "dest": "identifier: amount [33083,33089]"
    },
    {
      "src": "identifier: isInitialized [28456,28469]",
      "dest": "identifier: isInitialized [28304,28317]"
    },
    {
      "src": ".: . [12369,12370]",
      "dest": ".: . [12387,12388]"
    },
    {
      "src": ",: , [22162,22163]",
      "dest": ",: , [22080,22081]"
    },
    {
      "src": "(: ( [31948,31949]",
      "dest": "(: ( [31235,31236]"
    },
    {
      "src": "function_definition [10070,10197]",
      "dest": "function_definition [9772,9899]"
    },
    {
      "src": "state_variable_declaration [16356,16382]",
      "dest": "state_variable_declaration [16411,16437]"
    },
    {
      "src": "address: address [17320,17327]",
      "dest": "address: address [17450,17457]"
    },
    {
      "src": ",: , [3946,3947]",
      "dest": ",: , [3865,3866]"
    },
    {
      "src": "identifier: a [1417,1418]",
      "dest": "identifier: a [1336,1337]"
    },
    {
      "src": "string [15106,15140]",
      "dest": "string [15124,15158]"
    },
    {
      "src": "type_name [29084,29090]",
      "dest": "type_name [11553,11559]"
    },
    {
      "src": "string_literal [11476,11536]",
      "dest": "string_literal [11178,11238]"
    },
    {
      "src": "identifier: amount [20989,20995]",
      "dest": "identifier: amount [20907,20913]"
    },
    {
      "src": "function_definition [30628,30759]",
      "dest": "function_definition [29915,30046]"
    },
    {
      "src": "\": \" [24476,24477]",
      "dest": "\": \" [24394,24395]"
    },
    {
      "src": "uint256: uint256 [22751,22758]",
      "dest": "uint256: uint256 [22669,22676]"
    },
    {
      "src": "function_definition [23420,23681]",
      "dest": "function_definition [23338,23599]"
    },
    {
      "src": "(: ( [25162,25163]",
      "dest": "(: ( [25080,25081]"
    },
    {
      "src": "call_argument [12536,12541]",
      "dest": "call_argument [12554,12559]"
    },
    {
      "src": "): ) [1930,1931]",
      "dest": "): ) [1849,1850]"
    },
    {
      "src": "call_argument [31941,31954]",
      "dest": "call_argument [31228,31241]"
    },
    {
      "src": "expression_statement [16750,16752]",
      "dest": "expression_statement [16880,16882]"
    },
    {
      "src": "identifier: safeTransferFrom [33604,33620]",
      "dest": "identifier: safeTransferFrom [32891,32907]"
    },
    {
      "src": "(: ( [3308,3309]",
      "dest": "(: ( [3227,3228]"
    },
    {
      "src": "call_argument [15097,15104]",
      "dest": "call_argument [15115,15122]"
    },
    {
      "src": "{: { [16780,16781]",
      "dest": "{: { [16910,16911]"
    },
    {
      "src": "returns: returns [10120,10127]",
      "dest": "returns: returns [9822,9829]"
    },
    {
      "src": "identifier: _totalSupply [25069,25081]",
      "dest": "identifier: _totalSupply [24987,24999]"
    },
    {
      "src": "number_literal: 0 [2645,2646]",
      "dest": "number_literal: 0 [2564,2565]"
    },
    {
      "src": "member_expression [13825,13847]",
      "dest": "member_expression [13843,13865]"
    },
    {
      "src": "identifier: callOptionalReturn [13152,13170]",
      "dest": "identifier: callOptionalReturn [13170,13188]"
    },
    {
      "src": "visibility [20269,20276]",
      "dest": "visibility [20187,20194]"
    },
    {
      "src": "(: ( [29024,29025]",
      "dest": "(: ( [11493,11494]"
    },
    {
      "src": "variable_declaration [9556,9572]",
      "dest": "variable_declaration [9258,9274]"
    },
    {
      "src": "identifier: require [26516,26523]",
      "dest": "identifier: require [26434,26441]"
    },
    {
      "src": "(: ( [4727,4728]",
      "dest": "(: ( [4646,4647]"
    },
    {
      "src": "variable_declaration [13647,13667]",
      "dest": "variable_declaration [13665,13685]"
    },
    {
      "src": "primitive_type [25650,25657]",
      "dest": "primitive_type [25568,25575]"
    },
    {
      "src": "==: == [28470,28472]",
      "dest": "==: == [28318,28320]"
    },
    {
      "src": "call_argument [26989,26996]",
      "dest": "call_argument [26907,26914]"
    },
    {
      "src": "state_mutability [5436,5440]",
      "dest": "state_mutability [5355,5359]"
    },
    {
      "src": "address: address [31028,31035]",
      "dest": "address: address [30315,30322]"
    },
    {
      "src": "internal: internal [3286,3294]",
      "dest": "internal: internal [3205,3213]"
    },
    {
      "src": "type_cast_expression [10172,10188]",
      "dest": "type_cast_expression [9874,9890]"
    },
    {
      "src": "primitive_type [29976,29983]",
      "dest": "primitive_type [29263,29270]"
    },
    {
      "src": "call_argument [13038,13042]",
      "dest": "call_argument [13056,13060]"
    },
    {
      "src": "true [22286,22290]",
      "dest": "true [22204,22208]"
    },
    {
      "src": "call_argument [17328,17332]",
      "dest": "call_argument [17458,17462]"
    },
    {
      "src": "): ) [21491,21492]",
      "dest": "): ) [21409,21410]"
    },
    {
      "src": "(: ( [12441,12442]",
      "dest": "(: ( [12459,12460]"
    },
    {
      "src": "[: [ [22197,22198]",
      "dest": "[: [ [22115,22116]"
    },
    {
      "src": "(: ( [3263,3264]",
      "dest": "(: ( [3182,3183]"
    },
    {
      "src": "(: ( [29557,29558]",
      "dest": "(: ( [28844,28845]"
    },
    {
      "src": "uint256: uint256 [20259,20266]",
      "dest": "uint256: uint256 [20177,20184]"
    },
    {
      "src": "assignment_expression [24426,24517]",
      "dest": "assignment_expression [24344,24435]"
    },
    {
      "src": ".: . [13019,13020]",
      "dest": ".: . [13037,13038]"
    },
    {
      "src": "call_argument [32962,33333]",
      "dest": "call_argument [32249,32620]"
    },
    {
      "src": "\": \" [25696,25697]",
      "dest": "\": \" [25614,25615]"
    },
    {
      "src": "call_argument [13714,13719]",
      "dest": "call_argument [13732,13737]"
    },
    {
      "src": "call_expression [26998,27010]",
      "dest": "call_expression [26916,26928]"
    },
    {
      "src": "identifier: spender [13310,13317]",
      "dest": "identifier: spender [13328,13335]"
    },
    {
      "src": "function: function [13257,13265]",
      "dest": "function: function [13275,13283]"
    },
    {
      "src": "identifier: owner [21200,21205]",
      "dest": "identifier: owner [21118,21123]"
    },
    {
      "src": "string_literal [25763,25799]",
      "dest": "string_literal [25681,25717]"
    },
    {
      "src": "returns: returns [5441,5448]",
      "dest": "returns: returns [5360,5367]"
    },
    {
      "src": "uint256: uint256 [26401,26408]",
      "dest": "uint256: uint256 [26319,26326]"
    },
    {
      "src": "string [26466,26504]",
      "dest": "string [26384,26422]"
    },
    {
      "src": ",: , [22030,22031]",
      "dest": ",: , [21948,21949]"
    },
    {
      "src": "bool: bool [7524,7528]",
      "dest": "bool: bool [7332,7336]"
    },
    {
      "src": "identifier: spender [13701,13708]",
      "dest": "identifier: spender [13719,13726]"
    },
    {
      "src": "=: = [16637,16638]",
      "dest": "=: = [16767,16768]"
    },
    {
      "src": "identifier: token [13795,13800]",
      "dest": "identifier: token [13813,13818]"
    },
    {
      "src": "yul_path [9750,9758]",
      "dest": "yul_path [9452,9460]"
    },
    {
      "src": "external: external [29193,29201]",
      "dest": "external: external [11662,11670]"
    },
    {
      "src": "type_name [13595,13602]",
      "dest": "type_name [13613,13620]"
    },
    {
      "src": "): ) [24239,24240]",
      "dest": "): ) [24157,24158]"
    },
    {
      "src": "function: function [3913,3921]",
      "dest": "function: function [3832,3840]"
    },
    {
      "src": "expression_statement [14867,14939]",
      "dest": "expression_statement [14885,14957]"
    },
    {
      "src": "call_expression [26516,26584]",
      "dest": "call_expression [26434,26502]"
    },
    {
      "src": "type_name [20184,20191]",
      "dest": "type_name [20102,20109]"
    },
    {
      "src": "address: address [15053,15060]",
      "dest": "address: address [15071,15078]"
    },
    {
      "src": "[: [ [24455,24456]",
      "dest": "[: [ [24373,24374]"
    },
    {
      "src": "expression_statement [31630,31981]",
      "dest": "expression_statement [30917,31268]"
    },
    {
      "src": "primitive_type [13686,13693]",
      "dest": "primitive_type [13704,13711]"
    },
    {
      "src": "identifier: _wormholeAddress [31375,31391]",
      "dest": "identifier: _wormholeAddress [30662,30678]"
    },
    {
      "src": ",: , [33802,33803]",
      "dest": ",: , [33089,33090]"
    },
    {
      "src": "=: = [33397,33398]",
      "dest": "=: = [32684,32685]"
    },
    {
      "src": "parameter [21108,21121]",
      "dest": "parameter [21026,21039]"
    },
    {
      "src": "call_expression [25631,25698]",
      "dest": "call_expression [25549,25616]"
    },
    {
      "src": "): ) [16607,16608]",
      "dest": "): ) [16737,16738]"
    },
    {
      "src": "visibility [29984,29990]",
      "dest": "visibility [29271,29277]"
    },
    {
      "src": "type_name [8159,8166]",
      "dest": "type_name [7967,7974]"
    },
    {
      "src": "=: = [11414,11415]",
      "dest": "=: = [11116,11117]"
    },
    {
      "src": "type_name [20564,20571]",
      "dest": "type_name [20482,20489]"
    },
    {
      "src": "visibility [28649,28657]",
      "dest": "visibility [28497,28505]"
    },
    {
      "src": "parenthesized_expression [29557,29619]",
      "dest": "parenthesized_expression [28844,28906]"
    },
    {
      "src": "identifier: spender [13603,13610]",
      "dest": "identifier: spender [13621,13628]"
    },
    {
      "src": "{: { [26426,26427]",
      "dest": "{: { [26344,26345]"
    },
    {
      "src": "identifier: a [2682,2683]",
      "dest": "identifier: a [2601,2602]"
    },
    {
      "src": "address: address [20173,20180]",
      "dest": "address: address [20091,20098]"
    },
    {
      "src": "address: address [23447,23454]",
      "dest": "address: address [23365,23372]"
    },
    {
      "src": ",: , [25882,25883]",
      "dest": ",: , [25800,25801]"
    },
    {
      "src": "(: ( [31429,31430]",
      "dest": "(: ( [30716,30717]"
    },
    {
      "src": "event_paramater [8137,8157]",
      "dest": "event_paramater [7945,7965]"
    },
    {
      "src": "identifier: token [12656,12661]",
      "dest": "identifier: token [12674,12679]"
    },
    {
      "src": "string [15321,15365]",
      "dest": "string [15339,15383]"
    },
    {
      "src": "user_defined_type [13288,13294]",
      "dest": "user_defined_type [13306,13312]"
    },
    {
      "src": "type_name [22083,22087]",
      "dest": "type_name [22001,22005]"
    },
    {
      "src": "address: address [10089,10096]",
      "dest": "address: address [9791,9798]"
    },
    {
      "src": "expression_statement [16716,16735]",
      "dest": "expression_statement [16846,16865]"
    },
    {
      "src": "(: ( [21107,21108]",
      "dest": "(: ( [21025,21026]"
    },
    {
      "src": "identifier: initialized [16546,16557]",
      "dest": "identifier: initialized [16676,16687]"
    },
    {
      "src": "parameter [20602,20609]",
      "dest": "parameter [20520,20527]"
    },
    {
      "src": "]: ] [27031,27032]",
      "dest": "]: ] [26949,26950]"
    },
    {
      "src": "(: ( [1954,1955]",
      "dest": "(: ( [1873,1874]"
    },
    {
      "src": "(: ( [29426,29427]",
      "dest": "(: ( [28713,28714]"
    },
    {
      "src": "returns: returns [18578,18585]",
      "dest": "returns: returns [18610,18617]"
    },
    {
      "src": "call_expression [15053,15078]",
      "dest": "call_expression [15071,15096]"
    },
    {
      "src": "]: ] [25157,25158]",
      "dest": "]: ] [25075,25076]"
    },
    {
      "src": "(: ( [9773,9774]",
      "dest": "(: ( [9475,9476]"
    },
    {
      "src": "call_expression [20964,20976]",
      "dest": "call_expression [20882,20894]"
    },
    {
      "src": "comment: /**      * @dev Destroys `amount` tokens from `account`.`amount` is then deducted      * from the caller's allowance.      *      * See {_burn} and {_approve}.      */ [26697,26869]",
      "dest": "comment: /**      * @dev Destroys `amount` tokens from `account`.`amount` is then deducted      * from the caller's allowance.      *      * See {_burn} and {_approve}.      */ [26615,26787]"
    },
    {
      "src": "parameter [32605,32614]",
      "dest": "parameter [31892,31901]"
    },
    {
      "src": "function_body [21442,21522]",
      "dest": "function_body [21360,21440]"
    },
    {
      "src": "variable_declaration [31489,31501]",
      "dest": "variable_declaration [30776,30788]"
    },
    {
      "src": "expression_statement [13776,13873]",
      "dest": "expression_statement [13794,13891]"
    },
    {
      "src": "function: function [20868,20876]",
      "dest": "function: function [20786,20794]"
    },
    {
      "src": "identifier: sendValue [11183,11192]",
      "dest": "identifier: sendValue [10885,10894]"
    },
    {
      "src": "binary_expression [33458,33488]",
      "dest": "binary_expression [32745,32775]"
    },
    {
      "src": "identifier: selector [12585,12593]",
      "dest": "identifier: selector [12603,12611]"
    },
    {
      "src": "return_statement [20622,20648]",
      "dest": "return_statement [20540,20566]"
    },
    {
      "src": "identifier: recipient [24350,24359]",
      "dest": "identifier: recipient [24268,24277]"
    },
    {
      "src": "primitive_type [8159,8166]",
      "dest": "primitive_type [7967,7974]"
    },
    {
      "src": "primitive_type [25010,25017]",
      "dest": "primitive_type [24928,24935]"
    },
    {
      "src": "(: ( [10128,10129]",
      "dest": "(: ( [9830,9831]"
    },
    {
      "src": "type_name [15026,15031]",
      "dest": "type_name [15044,15049]"
    },
    {
      "src": "(: ( [22733,22734]",
      "dest": "(: ( [22651,22652]"
    },
    {
      "src": "type_name [7524,7528]",
      "dest": "type_name [7332,7336]"
    },
    {
      "src": "return_statement [21007,21019]",
      "dest": "return_statement [20925,20937]"
    },
    {
      "src": "function_body [1964,2061]",
      "dest": "function_body [1883,1980]"
    },
    {
      "src": "expression_statement [31308,31345]",
      "dest": "expression_statement [30595,30632]"
    },
    {
      "src": ",: , [20976,20977]",
      "dest": ",: , [20894,20895]"
    },
    {
      "src": "identifier: amount [11289,11295]",
      "dest": "identifier: amount [10991,10997]"
    },
    {
      "src": "(: ( [33689,33690]",
      "dest": "(: ( [32976,32977]"
    },
    {
      "src": ",: , [25214,25215]",
      "dest": ",: , [25132,25133]"
    },
    {
      "src": ",: , [12599,12600]",
      "dest": ",: , [12617,12618]"
    },
    {
      "src": "bool: bool [11398,11402]",
      "dest": "bool: bool [11100,11104]"
    },
    {
      "src": "primitive_type [32585,32592]",
      "dest": "primitive_type [31872,31879]"
    },
    {
      "src": "primitive_type [22083,22087]",
      "dest": "primitive_type [22001,22005]"
    },
    {
      "src": "member_expression [25084,25100]",
      "dest": "member_expression [25002,25018]"
    },
    {
      "src": "): ) [7528,7529]",
      "dest": "): ) [7336,7337]"
    },
    {
      "src": "{: { [2623,2624]",
      "dest": "{: { [2542,2543]"
    },
    {
      "src": "(: ( [20434,20435]",
      "dest": "(: ( [20352,20353]"
    },
    {
      "src": "}: } [1531,1532]",
      "dest": "}: } [1450,1451]"
    },
    {
      "src": "visibility [12295,12303]",
      "dest": "visibility [12313,12321]"
    },
    {
      "src": "==: == [2712,2714]",
      "dest": "==: == [2631,2633]"
    },
    {
      "src": "(: ( [31831,31832]",
      "dest": "(: ( [31118,31119]"
    },
    {
      "src": ",: , [32503,32504]",
      "dest": ",: , [31790,31791]"
    },
    {
      "src": "\": \" [1522,1523]",
      "dest": "\": \" [1441,1442]"
    },
    {
      "src": "identifier: amount [22216,22222]",
      "dest": "identifier: amount [22134,22140]"
    },
    {
      "src": ",: , [31244,31245]",
      "dest": ",: , [30531,30532]"
    },
    {
      "src": "call_argument [22224,22266]",
      "dest": "call_argument [22142,22184]"
    },
    {
      "src": "expression_statement [12989,13142]",
      "dest": "expression_statement [13007,13160]"
    },
    {
      "src": "return: return [20455,20461]",
      "dest": "return: return [20373,20379]"
    },
    {
      "src": "uint256: uint256 [20435,20442]",
      "dest": "uint256: uint256 [20353,20360]"
    },
    {
      "src": "primitive_type [11193,11208]",
      "dest": "primitive_type [10895,10910]"
    },
    {
      "src": "state_variable_declaration [16232,16257]",
      "dest": "state_variable_declaration [16287,16312]"
    },
    {
      "src": "identifier: ERC20 [20082,20087]",
      "dest": "identifier: ERC20 [20000,20005]"
    },
    {
      "src": "returns: returns [2361,2368]",
      "dest": "returns: returns [2280,2287]"
    },
    {
      "src": "primitive_type [30335,30341]",
      "dest": "primitive_type [29622,29628]"
    },
    {
      "src": "): ) [30710,30711]",
      "dest": "): ) [29997,29998]"
    },
    {
      "src": "identifier: transfer [20877,20885]",
      "dest": "identifier: transfer [20795,20803]"
    },
    {
      "src": "member_expression [13377,13392]",
      "dest": "member_expression [13395,13410]"
    },
    {
      "src": "uint32: uint32 [30335,30341]",
      "dest": "uint32: uint32 [29622,29628]"
    },
    {
      "src": "identifier: b [3283,3284]",
      "dest": "identifier: b [3202,3203]"
    },
    {
      "src": "type_name [26894,26901]",
      "dest": "type_name [26812,26819]"
    },
    {
      "src": "): ) [33907,33908]",
      "dest": "): ) [33194,33195]"
    },
    {
      "src": "call_argument [33251,33256]",
      "dest": "call_argument [32538,32543]"
    },
    {
      "src": ".: . [13838,13839]",
      "dest": ".: . [13856,13857]"
    },
    {
      "src": "): ) [33424,33425]",
      "dest": "): ) [32711,32712]"
    },
    {
      "src": "identifier: errorMessage [1991,2003]",
      "dest": "identifier: errorMessage [1910,1922]"
    },
    {
      "src": "\": \" [2752,2753]",
      "dest": "\": \" [2671,2672]"
    },
    {
      "src": "call_expression [31208,31244]",
      "dest": "call_expression [30495,30531]"
    },
    {
      "src": "address: address [20248,20255]",
      "dest": "address: address [20166,20173]"
    },
    {
      "src": "string_literal [3346,3374]",
      "dest": "string_literal [3265,3293]"
    },
    {
      "src": "array_access [24446,24463]",
      "dest": "array_access [24364,24381]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [5829,5897]",
      "dest": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [5637,5705]"
    },
    {
      "src": "identifier: require [33436,33443]",
      "dest": "identifier: require [32723,32730]"
    },
    {
      "src": ",: , [14311,14312]",
      "dest": ",: , [14329,14330]"
    },
    {
      "src": "return: return [9794,9800]",
      "dest": "return: return [9496,9502]"
    },
    {
      "src": "=: = [32653,32654]",
      "dest": "=: = [31940,31941]"
    },
    {
      "src": "identifier: spender [21395,21402]",
      "dest": "identifier: spender [21313,21320]"
    },
    {
      "src": "\": \" [29486,29487]",
      "dest": "\": \" [28773,28774]"
    },
    {
      "src": "expression_statement [31403,31432]",
      "dest": "expression_statement [30690,30719]"
    },
    {
      "src": "primitive_type [33627,33634]",
      "dest": "primitive_type [32914,32921]"
    },
    {
      "src": "]: ] [22210,22211]",
      "dest": "]: ] [22128,22129]"
    },
    {
      "src": "=: = [31647,31648]",
      "dest": "=: = [30934,30935]"
    },
    {
      "src": ",: , [13223,13224]",
      "dest": ",: , [13241,13242]"
    },
    {
      "src": "parameter [26369,26382]",
      "dest": "parameter [26287,26300]"
    },
    {
      "src": "state_mutability [16944,16948]",
      "dest": "state_mutability [17074,17078]"
    },
    {
      "src": "bool: bool [21436,21440]",
      "dest": "bool: bool [21354,21358]"
    },
    {
      "src": "identifier: s [32613,32614]",
      "dest": "identifier: s [31900,31901]"
    },
    {
      "src": "\": \" [32772,32773]",
      "dest": "\": \" [32059,32060]"
    },
    {
      "src": "(: ( [12363,12364]",
      "dest": "(: ( [12381,12382]"
    },
    {
      "src": "identifier: owner [26377,26382]",
      "dest": "identifier: owner [26295,26300]"
    },
    {
      "src": "call_argument [11272,11276]",
      "dest": "call_argument [10974,10978]"
    },
    {
      "src": "identifier: _balances [25140,25149]",
      "dest": "identifier: _balances [25058,25067]"
    },
    {
      "src": "address: address [6723,6730]",
      "dest": "address: address [6531,6538]"
    },
    {
      "src": "): ) [22859,22860]",
      "dest": "): ) [22777,22778]"
    },
    {
      "src": "view: view [6764,6768]",
      "dest": "view: view [6572,6576]"
    },
    {
      "src": "binary_expression [24269,24289]",
      "dest": "binary_expression [24187,24207]"
    },
    {
      "src": "contract_body [5822,8440]",
      "dest": "contract_body [5630,8248]"
    },
    {
      "src": "bytes32: bytes32 [30172,30179]",
      "dest": "bytes32: bytes32 [29459,29466]"
    },
    {
      "src": "for: for [12212,12215]",
      "dest": "for: for [12230,12233]"
    },
    {
      "src": "identifier: b [1428,1429]",
      "dest": "identifier: b [1347,1348]"
    },
    {
      "src": "comment: // solhint-disable-previous-line no-empty-blocks [18382,18430]",
      "dest": "comment: // solhint-disable-previous-line no-empty-blocks [18414,18462]"
    },
    {
      "src": "): ) [2345,2346]",
      "dest": "): ) [2264,2265]"
    },
    {
      "src": "identifier: account [25129,25136]",
      "dest": "identifier: account [25047,25054]"
    },
    {
      "src": "): ) [2003,2004]",
      "dest": "): ) [1922,1923]"
    },
    {
      "src": "address: address [24938,24945]",
      "dest": "address: address [24856,24863]"
    },
    {
      "src": "type_name [23447,23454]",
      "dest": "type_name [23365,23372]"
    },
    {
      "src": "call_expression [33660,33708]",
      "dest": "call_expression [32947,32995]"
    },
    {
      "src": "address: address [25578,25585]",
      "dest": "address: address [25496,25503]"
    },
    {
      "src": "expression_statement [24342,24414]",
      "dest": "expression_statement [24260,24332]"
    },
    {
      "src": "identifier: token [12449,12454]",
      "dest": "identifier: token [12467,12472]"
    },
    {
      "src": "identifier: _allowances [22836,22847]",
      "dest": "identifier: _allowances [22754,22765]"
    },
    {
      "src": "call_expression [31816,31856]",
      "dest": "call_expression [31103,31143]"
    },
    {
      "src": "identifier: sender [24198,24204]",
      "dest": "identifier: sender [24116,24122]"
    },
    {
      "src": "call_expression [33721,33908]",
      "dest": "call_expression [33008,33195]"
    },
    {
      "src": "string_literal [29568,29612]",
      "dest": "string_literal [28855,28899]"
    },
    {
      "src": "): ) [13870,13871]",
      "dest": "): ) [13888,13889]"
    },
    {
      "src": "): ) [7943,7944]",
      "dest": "): ) [7751,7752]"
    },
    {
      "src": "\": \" [11535,11536]",
      "dest": "\": \" [11237,11238]"
    },
    {
      "src": "identifier: amount [6388,6394]",
      "dest": "identifier: amount [6196,6202]"
    },
    {
      "src": ">: > [4096,4097]",
      "dest": ">: > [4015,4016]"
    },
    {
      "src": "call_argument [13686,13699]",
      "dest": "call_argument [13704,13717]"
    },
    {
      "src": "}: } [15377,15378]",
      "dest": "}: } [15395,15396]"
    },
    {
      "src": "uint256: uint256 [29059,29066]",
      "dest": "uint256: uint256 [11528,11535]"
    },
    {
      "src": "address: address [30668,30675]",
      "dest": "address: address [29955,29962]"
    },
    {
      "src": "visibility [26417,26425]",
      "dest": "visibility [26335,26343]"
    },
    {
      "src": "expression_statement [28448,28502]",
      "dest": "expression_statement [28296,28350]"
    },
    {
      "src": "\": \" [23648,23649]",
      "dest": "\": \" [23566,23567]"
    },
    {
      "src": "address: address [22032,22039]",
      "dest": "address: address [21950,21957]"
    },
    {
      "src": "identifier: account [9262,9269]",
      "dest": "identifier: account [8964,8971]"
    },
    {
      "src": "): ) [21168,21169]",
      "dest": "): ) [21086,21087]"
    },
    {
      "src": "identifier: SafeERC20 [29347,29356]",
      "dest": "identifier: SafeERC20 [28634,28643]"
    },
    {
      "src": "parenthesized_expression [30223,30307]",
      "dest": "parenthesized_expression [29510,29594]"
    },
    {
      "src": "return_type_definition [1445,1462]",
      "dest": "return_type_definition [1364,1381]"
    },
    {
      "src": "identifier: allowance [13020,13029]",
      "dest": "identifier: allowance [13038,13047]"
    },
    {
      "src": "identifier: keccak256 [31649,31658]",
      "dest": "identifier: keccak256 [30936,30945]"
    },
    {
      "src": "pure: pure [3295,3299]",
      "dest": "pure: pure [3214,3218]"
    },
    {
      "src": "call_expression [15281,15366]",
      "dest": "call_expression [15299,15384]"
    },
    {
      "src": "returns: returns [1445,1452]",
      "dest": "returns: returns [1364,1371]"
    },
    {
      "src": "identifier: selector [12379,12387]",
      "dest": "identifier: selector [12397,12405]"
    },
    {
      "src": "primitive_type [6778,6785]",
      "dest": "primitive_type [6586,6593]"
    },
    {
      "src": "return_type_definition [7930,7944]",
      "dest": "return_type_definition [7738,7752]"
    },
    {
      "src": ",: , [13719,13720]",
      "dest": ",: , [13737,13738]"
    },
    {
      "src": "function_body [22089,22298]",
      "dest": "function_body [22007,22216]"
    },
    {
      "src": "(: ( [31374,31375]",
      "dest": "(: ( [30661,30662]"
    },
    {
      "src": "return_type_definition [20928,20942]",
      "dest": "return_type_definition [20846,20860]"
    },
    {
      "src": "identifier: _allowances [23554,23565]",
      "dest": "identifier: _allowances [23472,23483]"
    },
    {
      "src": "internal: internal [12295,12303]",
      "dest": "internal: internal [12313,12321]"
    },
    {
      "src": ",: , [25894,25895]",
      "dest": ",: , [25812,25813]"
    },
    {
      "src": "(: ( [31133,31134]",
      "dest": "(: ( [30420,30421]"
    },
    {
      "src": "(: ( [12253,12254]",
      "dest": "(: ( [12271,12272]"
    },
    {
      "src": "identifier: safeIncreaseAllowance [13266,13287]",
      "dest": "identifier: safeIncreaseAllowance [13284,13305]"
    },
    {
      "src": "primitive_type [2670,2677]",
      "dest": "primitive_type [2589,2596]"
    },
    {
      "src": "call_argument [13171,13176]",
      "dest": "call_argument [13189,13194]"
    },
    {
      "src": "event: event [8359,8364]",
      "dest": "event: event [8167,8172]"
    },
    {
      "src": "member_expression [33721,33744]",
      "dest": "member_expression [33008,33031]"
    },
    {
      "src": "): ) [28676,28677]",
      "dest": "): ) [28524,28525]"
    },
    {
      "src": "visibility [3976,3984]",
      "dest": "visibility [3895,3903]"
    },
    {
      "src": "return: return [17399,17405]",
      "dest": "return: return [17529,17535]"
    },
    {
      "src": "): ) [28500,28501]",
      "dest": "): ) [28348,28349]"
    },
    {
      "src": "!=: != [5480,5482]",
      "dest": "!=: != [5399,5401]"
    },
    {
      "src": "): ) [20609,20610]",
      "dest": "): ) [20527,20528]"
    },
    {
      "src": "array_access [26597,26624]",
      "dest": "array_access [26515,26542]"
    },
    {
      "src": "function: function [9234,9242]",
      "dest": "function: function [8936,8944]"
    },
    {
      "src": "}: } [16816,16817]",
      "dest": "}: } [16946,16947]"
    },
    {
      "src": "identifier: encodeWithSelector [13182,13200]",
      "dest": "identifier: encodeWithSelector [13200,13218]"
    },
    {
      "src": "identifier: _transfer [22100,22109]",
      "dest": "identifier: _transfer [22018,22027]"
    },
    {
      "src": "function_definition [30985,31988]",
      "dest": "function_definition [30272,31275]"
    },
    {
      "src": "function_definition [7456,7530]",
      "dest": "function_definition [7264,7338]"
    },
    {
      "src": "}: } [13879,13880]",
      "dest": "}: } [13897,13898]"
    },
    {
      "src": "identifier: isContract [14890,14900]",
      "dest": "identifier: isContract [14908,14918]"
    },
    {
      "src": "(: ( [25657,25658]",
      "dest": "(: ( [25575,25576]"
    },
    {
      "src": "}: } [4257,4258]",
      "dest": "}: } [4176,4177]"
    },
    {
      "src": "address: address [26369,26376]",
      "dest": "address: address [26287,26294]"
    },
    {
      "src": "identifier: sender [24436,24442]",
      "dest": "identifier: sender [24354,24360]"
    },
    {
      "src": "visibility [5926,5934]",
      "dest": "visibility [5734,5742]"
    },
    {
      "src": "identifier: arbiterFee [29152,29162]",
      "dest": "identifier: arbiterFee [11621,11631]"
    },
    {
      "src": ",: , [23462,23463]",
      "dest": ",: , [23380,23381]"
    },
    {
      "src": "(: ( [16509,16510]",
      "dest": "(: ( [16639,16640]"
    },
    {
      "src": "\": \" [13129,13130]",
      "dest": "\": \" [13147,13148]"
    },
    {
      "src": "(: ( [10171,10172]",
      "dest": "(: ( [9873,9874]"
    },
    {
      "src": "payable: payable [18491,18498]",
      "dest": "payable: payable [18523,18530]"
    },
    {
      "src": "call_argument [13825,13847]",
      "dest": "call_argument [13843,13865]"
    },
    {
      "src": "string_literal [4810,4836]",
      "dest": "string_literal [4729,4755]"
    },
    {
      "src": ".: . [13830,13831]",
      "dest": ".: . [13848,13849]"
    },
    {
      "src": "private: private [16361,16368]",
      "dest": "private: private [16416,16423]"
    },
    {
      "src": "uint256: uint256 [24955,24962]",
      "dest": "uint256: uint256 [24873,24880]"
    },
    {
      "src": "member_expression [33590,33620]",
      "dest": "member_expression [32877,32907]"
    },
    {
      "src": "string [1062,1091]",
      "dest": "string [981,1010]"
    },
    {
      "src": "function_body [5459,5530]",
      "dest": "function_body [5378,5449]"
    },
    {
      "src": "call_argument [24375,24412]",
      "dest": "call_argument [24293,24330]"
    },
    {
      "src": "): ) [22267,22268]",
      "dest": "): ) [22185,22186]"
    },
    {
      "src": "call_argument [13701,13708]",
      "dest": "call_argument [13719,13726]"
    },
    {
      "src": "view: view [16944,16948]",
      "dest": "view: view [17074,17078]"
    },
    {
      "src": ",: , [24474,24475]",
      "dest": ",: , [24392,24393]"
    },
    {
      "src": "): ) [12693,12694]",
      "dest": "): ) [12711,12712]"
    },
    {
      "src": ",: , [32770,32771]",
      "dest": ",: , [32057,32058]"
    },
    {
      "src": "!=: != [25007,25009]",
      "dest": "!=: != [24925,24927]"
    },
    {
      "src": "identifier: _totalSupply [25826,25838]",
      "dest": "identifier: _totalSupply [25744,25756]"
    },
    {
      "src": "call_argument [22110,22116]",
      "dest": "call_argument [22028,22034]"
    },
    {
      "src": "call_expression [25140,25170]",
      "dest": "call_expression [25058,25088]"
    },
    {
      "src": "identifier: require [1975,1982]",
      "dest": "identifier: require [1894,1901]"
    },
    {
      "src": "function_definition [13550,13880]",
      "dest": "function_definition [13568,13898]"
    },
    {
      "src": "identifier: value [13327,13332]",
      "dest": "identifier: value [13345,13350]"
    },
    {
      "src": "bool: bool [16232,16236]",
      "dest": "bool: bool [16287,16291]"
    },
    {
      "src": "expression_statement [33721,33909]",
      "dest": "expression_statement [33008,33196]"
    },
    {
      "src": "): ) [22087,22088]",
      "dest": "): ) [22005,22006]"
    },
    {
      "src": "expression_statement [22147,22269]",
      "dest": "expression_statement [22065,22187]"
    },
    {
      "src": "identifier: success [15097,15104]",
      "dest": "identifier: success [15115,15122]"
    },
    {
      "src": "call_argument [31150,31174]",
      "dest": "call_argument [30437,30461]"
    },
    {
      "src": "(: ( [33485,33486]",
      "dest": "(: ( [32772,32773]"
    },
    {
      "src": "type_name [1882,1889]",
      "dest": "type_name [1801,1808]"
    },
    {
      "src": "identifier: token [12536,12541]",
      "dest": "identifier: token [12554,12559]"
    },
    {
      "src": "identifier: ______gap [27135,27144]",
      "dest": "identifier: ______gap [27053,27062]"
    },
    {
      "src": "(: ( [24467,24468]",
      "dest": "(: ( [24385,24386]"
    },
    {
      "src": "assignment_expression [31355,31392]",
      "dest": "assignment_expression [30642,30679]"
    },
    {
      "src": "function_body [30677,30759]",
      "dest": "function_body [29964,30046]"
    },
    {
      "src": "call_argument [22129,22135]",
      "dest": "call_argument [22047,22053]"
    },
    {
      "src": ",: , [28477,28478]",
      "dest": ",: , [28325,28326]"
    },
    {
      "src": "[: [ [24537,24538]",
      "dest": "[: [ [24455,24456]"
    },
    {
      "src": "string_literal [26547,26583]",
      "dest": "string_literal [26465,26501]"
    },
    {
      "src": "identifier: errorMessage [3962,3974]",
      "dest": "identifier: errorMessage [3881,3893]"
    },
    {
      "src": "primitive_type [30172,30179]",
      "dest": "primitive_type [29459,29466]"
    },
    {
      "src": "call_expression [25732,25800]",
      "dest": "call_expression [25650,25718]"
    },
    {
      "src": "comment: /**    * @dev Indicates that the contract is in the process of being initialized.    */ [16263,16352]",
      "dest": "comment: /**    * @dev Indicates that the contract is in the process of being initialized.    */ [16318,16407]"
    },
    {
      "src": "{: { [18186,18187]",
      "dest": "{: { [18218,18219]"
    },
    {
      "src": "view: view [28432,28436]",
      "dest": "view: view [28280,28284]"
    },
    {
      "src": "(: ( [33443,33444]",
      "dest": "(: ( [32730,32731]"
    },
    {
      "src": "state_mutability [20588,20592]",
      "dest": "state_mutability [20506,20510]"
    },
    {
      "src": "string_literal [24375,24412]",
      "dest": "string_literal [24293,24330]"
    },
    {
      "src": "identifier: token [13457,13462]",
      "dest": "identifier: token [13475,13480]"
    },
    {
      "src": "bool: bool [23505,23509]",
      "dest": "bool: bool [23423,23427]"
    },
    {
      "src": "call_argument [26953,26960]",
      "dest": "call_argument [26871,26878]"
    },
    {
      "src": "visibility [20305,20312]",
      "dest": "visibility [20223,20230]"
    },
    {
      "src": "parameter [7886,7903]",
      "dest": "parameter [7694,7711]"
    },
    {
      "src": "string_literal [11445,11447]",
      "dest": "string_literal [11147,11149]"
    },
    {
      "src": "visibility [13334,13342]",
      "dest": "visibility [13352,13360]"
    },
    {
      "src": "call_argument [11445,11447]",
      "dest": "call_argument [11147,11149]"
    },
    {
      "src": "(: ( [27043,27044]",
      "dest": "(: ( [26961,26962]"
    },
    {
      "src": "call_argument [28456,28477]",
      "dest": "call_argument [28304,28325]"
    },
    {
      "src": "binary_expression [12998,13008]",
      "dest": "binary_expression [13016,13026]"
    },
    {
      "src": "parameter [5388,5397]",
      "dest": "parameter [5307,5316]"
    },
    {
      "src": "identifier: ecrecover [33399,33408]",
      "dest": "identifier: ecrecover [32686,32695]"
    },
    {
      "src": "call_expression [31107,31175]",
      "dest": "call_expression [30394,30462]"
    },
    {
      "src": "primitive_type [13354,13361]",
      "dest": "primitive_type [13372,13379]"
    },
    {
      "src": "(: ( [11444,11445]",
      "dest": "(: ( [11146,11147]"
    },
    {
      "src": "}: } [33915,33916]",
      "dest": "}: } [33202,33203]"
    },
    {
      "src": "contract_body [18186,18772]",
      "dest": "contract_body [18218,18804]"
    },
    {
      "src": ".: . [22211,22212]",
      "dest": ".: . [22129,22130]"
    },
    {
      "src": "contract_body [28994,29205]",
      "dest": "contract_body [11463,11674]"
    },
    {
      "src": "string [31891,31894]",
      "dest": "string [31178,31181]"
    },
    {
      "src": "contract_declaration [29291,33919]",
      "dest": "contract_declaration [28578,33206]"
    },
    {
      "src": "identifier: token [13825,13830]",
      "dest": "identifier: token [13843,13848]"
    },
    {
      "src": "expression_statement [22804,22888]",
      "dest": "expression_statement [22722,22806]"
    },
    {
      "src": "=: = [13375,13376]",
      "dest": "=: = [13393,13394]"
    },
    {
      "src": "{: { [18601,18602]",
      "dest": "{: { [18633,18634]"
    },
    {
      "src": "return: return [22898,22904]",
      "dest": "return: return [22816,22822]"
    },
    {
      "src": "visibility [28140,28146]",
      "dest": "visibility [27988,27994]"
    },
    {
      "src": "address: address [33372,33379]",
      "dest": "address: address [32659,32666]"
    },
    {
      "src": "): ) [22885,22886]",
      "dest": "): ) [22803,22804]"
    },
    {
      "src": "): ) [6394,6395]",
      "dest": "): ) [6202,6203]"
    },
    {
      "src": "variable_declaration_statement [32640,32670]",
      "dest": "variable_declaration_statement [31927,31957]"
    },
    {
      "src": "member_expression [25732,25754]",
      "dest": "member_expression [25650,25672]"
    },
    {
      "src": "): ) [25659,25660]",
      "dest": "): ) [25577,25578]"
    },
    {
      "src": "identifier: _requireIsInitialized [30688,30709]",
      "dest": "identifier: _requireIsInitialized [29975,29996]"
    },
    {
      "src": "primitive_type [7886,7893]",
      "dest": "primitive_type [7694,7701]"
    },
    {
      "src": "comment: /**      * @notice Get the token used by the contract for transfer      * @return The token used by the contract for transfer      */ [30486,30622]",
      "dest": "comment: /**      * @notice Get the token used by the contract for transfer      * @return The token used by the contract for transfer      */ [29773,29909]"
    },
    {
      "src": "parameter [21123,21138]",
      "dest": "parameter [21041,21056]"
    },
    {
      "src": "): ) [23650,23651]",
      "dest": "): ) [23568,23569]"
    },
    {
      "src": "parameter [14313,14330]",
      "dest": "parameter [14331,14348]"
    },
    {
      "src": "): ) [25169,25170]",
      "dest": "): ) [25087,25088]"
    },
    {
      "src": "memory: memory [15032,15038]",
      "dest": "memory: memory [15050,15056]"
    },
    {
      "src": "\": \" [26466,26467]",
      "dest": "\": \" [26384,26385]"
    },
    {
      "src": "function_definition [13257,13542]",
      "dest": "function_definition [13275,13560]"
    },
    {
      "src": "primitive_type [1955,1962]",
      "dest": "primitive_type [1874,1881]"
    },
    {
      "src": "identifier: ERC20 [30416,30421]",
      "dest": "identifier: ERC20 [29703,29708]"
    },
    {
      "src": "comment: // solium-disable security/no-block-members [32682,32725]",
      "dest": "comment: // solium-disable security/no-block-members [31969,32012]"
    },
    {
      "src": "call_argument [33846,33855]",
      "dest": "call_argument [33133,33142]"
    },
    {
      "src": "): ) [22886,22887]",
      "dest": "): ) [22804,22805]"
    },
    {
      "src": "expression_statement [16502,16609]",
      "dest": "expression_statement [16632,16739]"
    },
    {
      "src": "=: = [15051,15052]",
      "dest": "=: = [15069,15070]"
    },
    {
      "src": "uint256: uint256 [3999,4006]",
      "dest": "uint256: uint256 [3918,3925]"
    },
    {
      "src": "type_name [26401,26408]",
      "dest": "type_name [26319,26326]"
    },
    {
      "src": "=: = [24549,24550]",
      "dest": "=: = [24467,24468]"
    },
    {
      "src": "call_argument [4810,4836]",
      "dest": "call_argument [4729,4755]"
    },
    {
      "src": "identifier: spender [6746,6753]",
      "dest": "identifier: spender [6554,6561]"
    },
    {
      "src": "identifier: _msgData [18553,18561]",
      "dest": "identifier: _msgData [18585,18593]"
    },
    {
      "src": "identifier: initializer [28147,28158]",
      "dest": "identifier: initializer [27995,28006]"
    },
    {
      "src": "identifier: to [8175,8177]",
      "dest": "identifier: to [7983,7985]"
    },
    {
      "src": ",: , [13300,13301]",
      "dest": ",: , [13318,13319]"
    },
    {
      "src": "function: function [3251,3259]",
      "dest": "function: function [3170,3178]"
    },
    {
      "src": "identifier: recipient [22118,22127]",
      "dest": "identifier: recipient [22036,22045]"
    },
    {
      "src": "identifier: r [33420,33421]",
      "dest": "identifier: r [32707,32708]"
    },
    {
      "src": "(: ( [13029,13030]",
      "dest": "(: ( [13047,13048]"
    },
    {
      "src": "!: ! [16639,16640]",
      "dest": "!: ! [16769,16770]"
    },
    {
      "src": "identifier: addedValue [22759,22769]",
      "dest": "identifier: addedValue [22677,22687]"
    },
    {
      "src": "primitive_type [26401,26408]",
      "dest": "primitive_type [26319,26326]"
    },
    {
      "src": "identifier: a [1988,1989]",
      "dest": "identifier: a [1907,1908]"
    },
    {
      "src": "visibility [14332,14339]",
      "dest": "visibility [14350,14357]"
    },
    {
      "src": "identifier: amount [21412,21418]",
      "dest": "identifier: amount [21330,21336]"
    },
    {
      "src": "using_directive [29341,29367]",
      "dest": "using_directive [28628,28654]"
    },
    {
      "src": ",: , [12603,12604]",
      "dest": ",: , [12621,12622]"
    },
    {
      "src": "expression_statement [30688,30712]",
      "dest": "expression_statement [29975,29999]"
    },
    {
      "src": "{: { [17366,17367]",
      "dest": "{: { [17496,17497]"
    },
    {
      "src": "type_name [7905,7912]",
      "dest": "type_name [7713,7720]"
    },
    {
      "src": "): ) [33487,33488]",
      "dest": "): ) [32774,32775]"
    },
    {
      "src": "function_body [12506,12620]",
      "dest": "function_body [12524,12638]"
    },
    {
      "src": "identifier: account [26902,26909]",
      "dest": "identifier: account [26820,26827]"
    },
    {
      "src": "call_expression [20954,20996]",
      "dest": "call_expression [20872,20914]"
    },
    {
      "src": "private: private [16237,16244]",
      "dest": "private: private [16292,16299]"
    },
    {
      "src": "call_argument [33187,33196]",
      "dest": "call_argument [32474,32483]"
    },
    {
      "src": "): ) [23542,23543]",
      "dest": "): ) [23460,23461]"
    },
    {
      "src": "type_name [29361,29366]",
      "dest": "type_name [28648,28653]"
    },
    {
      "src": "): ) [25019,25020]",
      "dest": "): ) [24937,24938]"
    },
    {
      "src": "function: function [10070,10078]",
      "dest": "function: function [9772,9780]"
    },
    {
      "src": "(: ( [13287,13288]",
      "dest": "(: ( [13305,13306]"
    },
    {
      "src": "): ) [16677,16678]",
      "dest": "): ) [16807,16808]"
    },
    {
      "src": "array_access [22178,22197]",
      "dest": "array_access [22096,22115]"
    },
    {
      "src": "function: function [940,948]",
      "dest": "function: function [859,867]"
    },
    {
      "src": "call_argument [31826,31855]",
      "dest": "call_argument [31113,31142]"
    },
    {
      "src": "identifier: amount [26627,26633]",
      "dest": "identifier: amount [26545,26551]"
    },
    {
      "src": "primitive_type [16356,16360]",
      "dest": "primitive_type [16411,16415]"
    },
    {
      "src": "(: ( [20411,20412]",
      "dest": "(: ( [20329,20330]"
    },
    {
      "src": "): ) [3374,3375]",
      "dest": "): ) [3293,3294]"
    },
    {
      "src": "{: { [16150,16151]",
      "dest": "{: { [16112,16113]"
    },
    {
      "src": "variable_declaration [13354,13374]",
      "dest": "variable_declaration [13372,13392]"
    },
    {
      "src": "string_literal [2718,2753]",
      "dest": "string_literal [2637,2672]"
    },
    {
      "src": ",: , [15310,15311]",
      "dest": ",: , [15328,15329]"
    },
    {
      "src": "call_argument [4094,4099]",
      "dest": "call_argument [4013,4018]"
    },
    {
      "src": "identifier: encode [31677,31683]",
      "dest": "identifier: encode [30964,30970]"
    },
    {
      "src": "type_name [16356,16360]",
      "dest": "type_name [16411,16415]"
    },
    {
      "src": "call_expression [12517,12612]",
      "dest": "call_expression [12535,12630]"
    },
    {
      "src": "{: { [21442,21443]",
      "dest": "{: { [21360,21361]"
    },
    {
      "src": "parameter [7490,7504]",
      "dest": "parameter [7298,7312]"
    },
    {
      "src": "primitive_type [8374,8381]",
      "dest": "primitive_type [8182,8189]"
    },
    {
      "src": "state_mutability [28658,28662]",
      "dest": "state_mutability [28506,28510]"
    },
    {
      "src": "function_definition [11174,11545]",
      "dest": "function_definition [10876,11247]"
    },
    {
      "src": "function_body [24980,25231]",
      "dest": "function_body [24898,25149]"
    },
    {
      "src": "\": \" [1062,1063]",
      "dest": "\": \" [981,982]"
    },
    {
      "src": "identifier: amount [25896,25902]",
      "dest": "identifier: amount [25814,25820]"
    },
    {
      "src": "uint256: uint256 [2336,2343]",
      "dest": "uint256: uint256 [2255,2262]"
    },
    {
      "src": "call_expression [30688,30711]",
      "dest": "call_expression [29975,29998]"
    },
    {
      "src": "return_statement [20455,20475]",
      "dest": "return_statement [20373,20393]"
    },
    {
      "src": "identifier: _approve [26980,26988]",
      "dest": "identifier: _approve [26898,26906]"
    },
    {
      "src": "uint256: uint256 [8179,8186]",
      "dest": "uint256: uint256 [7987,7994]"
    },
    {
      "src": "): ) [12399,12400]",
      "dest": "): ) [12417,12418]"
    },
    {
      "src": "call_argument [13795,13800]",
      "dest": "call_argument [13813,13818]"
    },
    {
      "src": "internal: internal [26417,26425]",
      "dest": "internal: internal [26335,26343]"
    },
    {
      "src": "address: address [13686,13693]",
      "dest": "address: address [13704,13711]"
    },
    {
      "src": "(: ( [18561,18562]",
      "dest": "(: ( [18593,18594]"
    },
    {
      "src": "identifier: amount [24963,24969]",
      "dest": "identifier: amount [24881,24887]"
    },
    {
      "src": "comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [25239,25557]",
      "dest": "comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [25157,25475]"
    },
    {
      "src": "call_argument [23531,23543]",
      "dest": "call_argument [23449,23461]"
    },
    {
      "src": "variable_declaration_statement [2670,2688]",
      "dest": "variable_declaration_statement [2589,2607]"
    },
    {
      "src": "primitive_type [1904,1910]",
      "dest": "primitive_type [1823,1829]"
    },
    {
      "src": "type_name [12184,12191]",
      "dest": "type_name [12202,12209]"
    },
    {
      "src": "return_statement [21181,21216]",
      "dest": "return_statement [21099,21134]"
    },
    {
      "src": "!=: != [26532,26534]",
      "dest": "!=: != [26450,26452]"
    },
    {
      "src": "function_body [1463,1532]",
      "dest": "function_body [1382,1451]"
    },
    {
      "src": "identifier: Wormhole [28985,28993]",
      "dest": "identifier: Wormhole [11454,11462]"
    },
    {
      "src": ".: . [31418,31419]",
      "dest": ".: . [30705,30706]"
    },
    {
      "src": "expression_statement [25069,25109]",
      "dest": "expression_statement [24987,25027]"
    },
    {
      "src": "type_name [21387,21394]",
      "dest": "type_name [21305,21312]"
    },
    {
      "src": "type_name [12456,12463]",
      "dest": "type_name [12474,12481]"
    },
    {
      "src": "internal: internal [24971,24979]",
      "dest": "internal: internal [24889,24897]"
    },
    {
      "src": "(: ( [25577,25578]",
      "dest": "(: ( [25495,25496]"
    },
    {
      "src": ".: . [33603,33604]",
      "dest": ".: . [32890,32891]"
    },
    {
      "src": "parameter [2325,2334]",
      "dest": "parameter [2244,2253]"
    },
    {
      "src": "parameter [3999,4006]",
      "dest": "parameter [3918,3925]"
    },
    {
      "src": "external: external [6755,6763]",
      "dest": "external: external [6563,6571]"
    },
    {
      "src": "parameter [30668,30675]",
      "dest": "parameter [29955,29962]"
    },
    {
      "src": ",: , [26909,26910]",
      "dest": ",: , [26827,26828]"
    },
    {
      "src": "function: function [20391,20399]",
      "dest": "function: function [20309,20317]"
    },
    {
      "src": "): ) [13533,13534]",
      "dest": "): ) [13551,13552]"
    },
    {
      "src": "identifier: div [3336,3339]",
      "dest": "identifier: div [3255,3258]"
    },
    {
      "src": "): ) [16493,16494]",
      "dest": "): ) [16548,16549]"
    },
    {
      "src": "}: } [21025,21026]",
      "dest": "}: } [20943,20944]"
    },
    {
      "src": "): ) [25893,25894]",
      "dest": "): ) [25811,25812]"
    },
    {
      "src": "uint256: uint256 [3309,3316]",
      "dest": "uint256: uint256 [3228,3235]"
    },
    {
      "src": "call_argument [25101,25107]",
      "dest": "call_argument [25019,25025]"
    },
    {
      "src": "): ) [13708,13709]",
      "dest": "): ) [13726,13727]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol [0,77]",
      "dest": "comment: // Interface for interaction with Wormhole v2 TokenBridge [11256,11313]"
    },
    {
      "src": "}: } [16821,16822]",
      "dest": "}: } [16951,16952]"
    },
    {
      "src": "call_argument [22164,22176]",
      "dest": "call_argument [22082,22094]"
    },
    {
      "src": "bool: bool [7939,7943]",
      "dest": "bool: bool [7747,7751]"
    },
    {
      "src": "type_name [17340,17347]",
      "dest": "type_name [17470,17477]"
    },
    {
      "src": "{: { [1007,1008]",
      "dest": "{: { [926,927]"
    },
    {
      "src": "internal: internal [30422,30430]",
      "dest": "internal: internal [29709,29717]"
    },
    {
      "src": "identifier: b [1901,1902]",
      "dest": "identifier: b [1820,1821]"
    },
    {
      "src": "primitive_type [12663,12670]",
      "dest": "primitive_type [12681,12688]"
    },
    {
      "src": "primitive_type [29116,29123]",
      "dest": "primitive_type [11585,11592]"
    },
    {
      "src": "(: ( [13580,13581]",
      "dest": "(: ( [13598,13599]"
    },
    {
      "src": "primitive_type [20602,20609]",
      "dest": "primitive_type [20520,20527]"
    },
    {
      "src": "identifier: amount [26674,26680]",
      "dest": "identifier: amount [26592,26598]"
    },
    {
      "src": "visibility [3286,3294]",
      "dest": "visibility [3205,3213]"
    },
    {
      "src": "type_name [21123,21130]",
      "dest": "type_name [21041,21048]"
    },
    {
      "src": "(: ( [20936,20937]",
      "dest": "(: ( [20854,20855]"
    },
    {
      "src": "assignment_expression [25711,25800]",
      "dest": "assignment_expression [25629,25718]"
    },
    {
      "src": "array_access [25119,25137]",
      "dest": "array_access [25037,25055]"
    },
    {
      "src": "extcodehash: extcodehash [9762,9773]",
      "dest": "extcodehash: extcodehash [9464,9475]"
    },
    {
      "src": "primitive_type [20228,20235]",
      "dest": "primitive_type [20146,20153]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-call-value [11342,11387]",
      "dest": "comment: // solhint-disable-next-line avoid-call-value [11044,11089]"
    },
    {
      "src": "visibility [18460,18468]",
      "dest": "visibility [18492,18500]"
    },
    {
      "src": "call_argument [15312,15318]",
      "dest": "call_argument [15330,15336]"
    },
    {
      "src": "visibility [18564,18572]",
      "dest": "visibility [18596,18604]"
    },
    {
      "src": "array_access [26597,26615]",
      "dest": "array_access [26515,26533]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-balanceOf}.      */ [20490,20539]",
      "dest": "comment: /**      * @dev See {IERC20-balanceOf}.      */ [20408,20457]"
    },
    {
      "src": "user_defined_type [20091,20104]",
      "dest": "user_defined_type [20009,20022]"
    },
    {
      "src": "variable_declaration_statement [9556,9573]",
      "dest": "variable_declaration_statement [9258,9275]"
    },
    {
      "src": "call_argument [13802,13871]",
      "dest": "call_argument [13820,13889]"
    },
    {
      "src": "type_name [3948,3954]",
      "dest": "type_name [3867,3873]"
    },
    {
      "src": "assembly: assembly [17357,17365]",
      "dest": "assembly: assembly [17487,17495]"
    },
    {
      "src": "parameter [13319,13332]",
      "dest": "parameter [13337,13350]"
    },
    {
      "src": "string [13721,13764]",
      "dest": "string [13739,13782]"
    },
    {
      "src": ".: . [13206,13207]",
      "dest": ".: . [13224,13225]"
    },
    {
      "src": "identifier: msg [18753,18756]",
      "dest": "identifier: msg [18785,18788]"
    },
    {
      "src": "): ) [25609,25610]",
      "dest": "): ) [25527,25528]"
    },
    {
      "src": "==: == [13054,13056]",
      "dest": "==: == [13072,13074]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [21231,21364]",
      "dest": "comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [21149,21282]"
    },
    {
      "src": "(: ( [18457,18458]",
      "dest": "(: ( [18489,18490]"
    },
    {
      "src": "(: ( [13794,13795]",
      "dest": "(: ( [13812,13813]"
    },
    {
      "src": "string [25763,25799]",
      "dest": "string [25681,25717]"
    },
    {
      "src": "bool: bool [27674,27678]",
      "dest": "bool: bool [27522,27526]"
    },
    {
      "src": "primitive_type [3999,4006]",
      "dest": "primitive_type [3918,3925]"
    },
    {
      "src": "primitive_type [8422,8429]",
      "dest": "primitive_type [8230,8237]"
    },
    {
      "src": "type_name [1454,1461]",
      "dest": "type_name [1373,1380]"
    },
    {
      "src": "identifier: c [2023,2024]",
      "dest": "identifier: c [1942,1943]"
    },
    {
      "src": "identifier: require [5470,5477]",
      "dest": "identifier: require [5389,5396]"
    },
    {
      "src": "type_name [6105,6112]",
      "dest": "type_name [5913,5920]"
    },
    {
      "src": "<=: <= [1985,1987]",
      "dest": "<=: <= [1904,1906]"
    },
    {
      "src": "=: = [28184,28185]",
      "dest": "=: = [28032,28033]"
    },
    {
      "src": "identifier: arbiterFee [33214,33224]",
      "dest": "identifier: arbiterFee [32501,32511]"
    },
    {
      "src": ",: , [7903,7904]",
      "dest": ",: , [7711,7712]"
    },
    {
      "src": "using: using [12198,12203]",
      "dest": "using: using [12216,12221]"
    },
    {
      "src": "primitive_type [25578,25585]",
      "dest": "primitive_type [25496,25503]"
    },
    {
      "src": "pragma_directive [81,104]",
      "dest": "pragma_directive [0,23]"
    },
    {
      "src": "type_name [2325,2332]",
      "dest": "type_name [2244,2251]"
    },
    {
      "src": "bool: bool [16356,16360]",
      "dest": "bool: bool [16411,16415]"
    },
    {
      "src": "identifier: safeTransfer [12241,12253]",
      "dest": "identifier: safeTransfer [12259,12271]"
    },
    {
      "src": "): ) [12610,12611]",
      "dest": "): ) [12628,12629]"
    },
    {
      "src": "internal: internal [18460,18468]",
      "dest": "internal: internal [18492,18500]"
    },
    {
      "src": "call_argument [33486,33487]",
      "dest": "call_argument [32773,32774]"
    },
    {
      "src": "return: return [21181,21187]",
      "dest": "return: return [21099,21105]"
    },
    {
      "src": "type_name [4728,4735]",
      "dest": "type_name [4647,4654]"
    },
    {
      "src": "function: function [12232,12240]",
      "dest": "function: function [12250,12258]"
    },
    {
      "src": "identifier: newAllowance [13520,13532]",
      "dest": "identifier: newAllowance [13538,13550]"
    },
    {
      "src": "type_name [12649,12655]",
      "dest": "type_name [12667,12673]"
    },
    {
      "src": "=: = [25138,25139]",
      "dest": "=: = [25056,25057]"
    },
    {
      "src": "primitive_type [10164,10171]",
      "dest": "primitive_type [9866,9873]"
    },
    {
      "src": "type_name [32822,32829]",
      "dest": "type_name [32109,32116]"
    },
    {
      "src": ",: , [1891,1892]",
      "dest": ",: , [1810,1811]"
    },
    {
      "src": "variable_declaration_statement [13354,13428]",
      "dest": "variable_declaration_statement [13372,13446]"
    },
    {
      "src": "): ) [13042,13043]",
      "dest": "): ) [13060,13061]"
    },
    {
      "src": "type_name [14313,14318]",
      "dest": "type_name [14331,14336]"
    },
    {
      "src": "identifier: account [26989,26996]",
      "dest": "identifier: account [26907,26914]"
    },
    {
      "src": "identifier: amount [22129,22135]",
      "dest": "identifier: amount [22047,22053]"
    },
    {
      "src": "state_mutability [1440,1444]",
      "dest": "state_mutability [1359,1363]"
    },
    {
      "src": ",: , [29073,29074]",
      "dest": ",: , [11542,11543]"
    },
    {
      "src": "+: + [1032,1033]",
      "dest": "+: + [951,952]"
    },
    {
      "src": "primitive_type [17497,17504]",
      "dest": "primitive_type [17627,17634]"
    },
    {
      "src": "type_name [20259,20266]",
      "dest": "type_name [20177,20184]"
    },
    {
      "src": "type_name [14299,14305]",
      "dest": "type_name [14317,14323]"
    },
    {
      "src": "uint256: uint256 [1018,1025]",
      "dest": "uint256: uint256 [937,944]"
    },
    {
      "src": "type_name [32567,32572]",
      "dest": "type_name [31854,31859]"
    },
    {
      "src": "parameter [20564,20579]",
      "dest": "parameter [20482,20497]"
    },
    {
      "src": "call_argument [33817,33831]",
      "dest": "call_argument [33104,33118]"
    },
    {
      "src": "function_definition [12416,12620]",
      "dest": "function_definition [12434,12638]"
    },
    {
      "src": "string [27059,27097]",
      "dest": "string [26977,27015]"
    },
    {
      "src": "(: ( [30667,30668]",
      "dest": "(: ( [29954,29955]"
    },
    {
      "src": "function: function [26351,26359]",
      "dest": "function: function [26269,26277]"
    },
    {
      "src": "}: } [18375,18376]",
      "dest": "}: } [18407,18408]"
    },
    {
      "src": "function: function [21370,21378]",
      "dest": "function: function [21288,21296]"
    },
    {
      "src": "string_literal [31891,31894]",
      "dest": "string_literal [31178,31181]"
    },
    {
      "src": "call_argument [22813,22825]",
      "dest": "call_argument [22731,22743]"
    },
    {
      "src": "uint256: uint256 [3926,3933]",
      "dest": "uint256: uint256 [3845,3852]"
    },
    {
      "src": "member_expression [15289,15299]",
      "dest": "member_expression [15307,15317]"
    },
    {
      "src": "identifier: amount [11228,11234]",
      "dest": "identifier: amount [10930,10936]"
    },
    {
      "src": ",: , [25020,25021]",
      "dest": ",: , [24938,24939]"
    },
    {
      "src": "\": \" [3373,3374]",
      "dest": "\": \" [3292,3293]"
    },
    {
      "src": "bytes32: bytes32 [29116,29123]",
      "dest": "bytes32: bytes32 [11585,11592]"
    },
    {
      "src": "function: function [28118,28126]",
      "dest": "function: function [27966,27974]"
    },
    {
      "src": "call_expression [12341,12399]",
      "dest": "call_expression [12359,12417]"
    },
    {
      "src": "identifier: call [15068,15072]",
      "dest": "identifier: call [15086,15090]"
    },
    {
      "src": "string_literal [15106,15140]",
      "dest": "string_literal [15124,15158]"
    },
    {
      "src": "address: address [6738,6745]",
      "dest": "address: address [6546,6553]"
    },
    {
      "src": "): ) [28421,28422]",
      "dest": "): ) [28269,28270]"
    },
    {
      "src": "string_literal [31712,31796]",
      "dest": "string_literal [30999,31083]"
    },
    {
      "src": "member_expression [13014,13029]",
      "dest": "member_expression [13032,13047]"
    },
    {
      "src": "call_argument [33635,33639]",
      "dest": "call_argument [32922,32926]"
    },
    {
      "src": "identifier: account [25721,25728]",
      "dest": "identifier: account [25639,25646]"
    },
    {
      "src": "&&: && [33489,33491]",
      "dest": "&&: && [32776,32778]"
    },
    {
      "src": "\": \" [31712,31713]",
      "dest": "\": \" [30999,31000]"
    },
    {
      "src": "parameter [28672,28676]",
      "dest": "parameter [28520,28524]"
    },
    {
      "src": "(: ( [5948,5949]",
      "dest": "(: ( [5756,5757]"
    },
    {
      "src": "return_type_definition [1946,1963]",
      "dest": "return_type_definition [1865,1882]"
    },
    {
      "src": "variable_declaration [17340,17350]",
      "dest": "variable_declaration [17470,17480]"
    },
    {
      "src": "call_argument [33867,33877]",
      "dest": "call_argument [33154,33164]"
    },
    {
      "src": "return_statement [22279,22291]",
      "dest": "return_statement [22197,22209]"
    },
    {
      "src": "call_argument [11437,11443]",
      "dest": "call_argument [11139,11145]"
    },
    {
      "src": "visibility [21140,21146]",
      "dest": "visibility [21058,21064]"
    },
    {
      "src": "type_cast_expression [33759,33781]",
      "dest": "type_cast_expression [33046,33068]"
    },
    {
      "src": "uint256: uint256 [13612,13619]",
      "dest": "uint256: uint256 [13630,13637]"
    },
    {
      "src": "primitive_type [9294,9298]",
      "dest": "primitive_type [8996,9000]"
    },
    {
      "src": "parameter [3309,3316]",
      "dest": "parameter [3228,3235]"
    },
    {
      "src": "identifier: spender [13408,13415]",
      "dest": "identifier: spender [13426,13433]"
    },
    {
      "src": "\": \" [26503,26504]",
      "dest": "\": \" [26421,26422]"
    },
    {
      "src": "function_definition [18438,18536]",
      "dest": "function_definition [18470,18568]"
    },
    {
      "src": "!=: != [9811,9813]",
      "dest": "!=: != [9513,9515]"
    },
    {
      "src": "identifier: keccak256 [32962,32971]",
      "dest": "identifier: keccak256 [32249,32258]"
    },
    {
      "src": "primitive_type [15313,15317]",
      "dest": "primitive_type [15331,15335]"
    },
    {
      "src": "private: private [20193,20200]",
      "dest": "private: private [20111,20118]"
    },
    {
      "src": "identifier: token [12566,12571]",
      "dest": "identifier: token [12584,12589]"
    },
    {
      "src": "array_access [23554,23579]",
      "dest": "array_access [23472,23497]"
    },
    {
      "src": "member_expression [32755,32770]",
      "dest": "member_expression [32042,32057]"
    },
    {
      "src": "(: ( [13456,13457]",
      "dest": "(: ( [13474,13475]"
    },
    {
      "src": "primitive_type [3948,3954]",
      "dest": "primitive_type [3867,3873]"
    },
    {
      "src": "): ) [5956,5957]",
      "dest": "): ) [5764,5765]"
    },
    {
      "src": "=: = [29424,29425]",
      "dest": "=: = [28711,28712]"
    },
    {
      "src": "comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [9311,9391]",
      "dest": "comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [9013,9093]"
    },
    {
      "src": "returns: returns [18474,18481]",
      "dest": "returns: returns [18506,18513]"
    },
    {
      "src": "(: ( [2614,2615]",
      "dest": "(: ( [2533,2534]"
    },
    {
      "src": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [22306,22701]",
      "dest": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [22224,22619]"
    },
    {
      "src": "primitive_type [7490,7497]",
      "dest": "primitive_type [7298,7305]"
    },
    {
      "src": "identifier: amount [7498,7504]",
      "dest": "identifier: amount [7306,7312]"
    },
    {
      "src": "member_expression [13178,13200]",
      "dest": "member_expression [13196,13218]"
    },
    {
      "src": "function_definition [14271,15385]",
      "dest": "function_definition [14289,15403]"
    },
    {
      "src": "primitive_type [30729,30736]",
      "dest": "primitive_type [30016,30023]"
    },
    {
      "src": "address: address [22016,22023]",
      "dest": "address: address [21934,21941]"
    },
    {
      "src": ",: , [27010,27011]",
      "dest": ",: , [26928,26929]"
    },
    {
      "src": "comment: /**  * @dev Collection of functions related to the address type  */ [8552,8621]",
      "dest": "comment: /**  * @dev Collection of functions related to the address type  */ [8254,8323]"
    },
    {
      "src": "primitive_type [5388,5395]",
      "dest": "primitive_type [5307,5314]"
    },
    {
      "src": "call_argument [33621,33625]",
      "dest": "call_argument [32908,32912]"
    },
    {
      "src": "identifier: div [3260,3263]",
      "dest": "identifier: div [3179,3182]"
    },
    {
      "src": ",: , [15104,15105]",
      "dest": ",: , [15122,15123]"
    },
    {
      "src": "string [33531,33566]",
      "dest": "string [32818,32853]"
    },
    {
      "src": ".: . [25158,25159]",
      "dest": ".: . [25076,25077]"
    },
    {
      "src": "(: ( [30709,30710]",
      "dest": "(: ( [29996,29997]"
    },
    {
      "src": "(: ( [12997,12998]",
      "dest": "(: ( [13015,13016]"
    },
    {
      "src": "): ) [13871,13872]",
      "dest": "): ) [13889,13890]"
    },
    {
      "src": "expression_statement [26516,26585]",
      "dest": "expression_statement [26434,26503]"
    },
    {
      "src": "(: ( [14900,14901]",
      "dest": "(: ( [14918,14919]"
    },
    {
      "src": "primitive_type [31028,31035]",
      "dest": "primitive_type [30315,30322]"
    },
    {
      "src": "identifier: a [1890,1891]",
      "dest": "identifier: a [1809,1810]"
    },
    {
      "src": ",: , [12339,12340]",
      "dest": ",: , [12357,12358]"
    },
    {
      "src": "): ) [33576,33577]",
      "dest": "): ) [32863,32864]"
    },
    {
      "src": "pure: pure [10115,10119]",
      "dest": "pure: pure [9817,9821]"
    },
    {
      "src": ".: . [18756,18757]",
      "dest": ".: . [18788,18789]"
    },
    {
      "src": "call_expression [14875,14902]",
      "dest": "call_expression [14893,14920]"
    },
    {
      "src": "call_expression [22848,22860]",
      "dest": "call_expression [22766,22778]"
    },
    {
      "src": "): ) [6112,6113]",
      "dest": "): ) [5920,5921]"
    },
    {
      "src": "interface_declaration [5805,8440]",
      "dest": "interface_declaration [5613,8248]"
    },
    {
      "src": "bytes32: bytes32 [9583,9590]",
      "dest": "bytes32: bytes32 [9285,9292]"
    },
    {
      "src": "address: address [20228,20235]",
      "dest": "address: address [20146,20153]"
    },
    {
      "src": "identifier: account [25639,25646]",
      "dest": "identifier: account [25557,25564]"
    },
    {
      "src": "identifier: transferTokens [29010,29024]",
      "dest": "identifier: transferTokens [11479,11493]"
    },
    {
      "src": "identifier: transferToken [30431,30444]",
      "dest": "identifier: transferToken [29718,29731]"
    },
    {
      "src": ".: . [13500,13501]",
      "dest": ".: . [13518,13519]"
    },
    {
      "src": "(: ( [27008,27009]",
      "dest": "(: ( [26926,26927]"
    },
    {
      "src": "uint256: uint256 [11220,11227]",
      "dest": "uint256: uint256 [10922,10929]"
    },
    {
      "src": "\": \" [33531,33532]",
      "dest": "\": \" [32818,32819]"
    },
    {
      "src": "}: } [17418,17419]",
      "dest": "}: } [17548,17549]"
    },
    {
      "src": "bytes: bytes [18587,18592]",
      "dest": "bytes: bytes [18619,18624]"
    },
    {
      "src": ".: . [13416,13417]",
      "dest": ".: . [13434,13435]"
    },
    {
      "src": "call_expression [32962,33333]",
      "dest": "call_expression [32249,32620]"
    },
    {
      "src": "primitive_type [5399,5405]",
      "dest": "primitive_type [5318,5324]"
    },
    {
      "src": "call_expression [24261,24331]",
      "dest": "call_expression [24179,24249]"
    },
    {
      "src": "if: if [16659,16661]",
      "dest": "if: if [16789,16791]"
    },
    {
      "src": "solidity: solidity [88,96]",
      "dest": "solidity: solidity [7,15]"
    },
    {
      "src": "expression_statement [5470,5500]",
      "dest": "expression_statement [5389,5419]"
    },
    {
      "src": "identifier: a [5517,5518]",
      "dest": "identifier: a [5436,5437]"
    },
    {
      "src": ",: , [29105,29106]",
      "dest": ",: , [11574,11575]"
    },
    {
      "src": "(: ( [33681,33682]",
      "dest": "(: ( [32968,32969]"
    },
    {
      "src": "identifier: isInitialized [27687,27700]",
      "dest": "identifier: isInitialized [27535,27548]"
    },
    {
      "src": "identifier: b [4141,4142]",
      "dest": "identifier: b [4060,4061]"
    },
    {
      "src": "\": \" [11327,11328]",
      "dest": "\": \" [11029,11030]"
    },
    {
      "src": "identifier: totalSupply [20400,20411]",
      "dest": "identifier: totalSupply [20318,20329]"
    },
    {
      "src": "): ) [31147,31148]",
      "dest": "): ) [30434,30435]"
    },
    {
      "src": "address: address [12216,12223]",
      "dest": "address: address [12234,12241]"
    },
    {
      "src": "parameter [12280,12293]",
      "dest": "parameter [12298,12311]"
    },
    {
      "src": "): ) [20412,20413]",
      "dest": "): ) [20330,20331]"
    },
    {
      "src": "identifier: SafeERC20 [12148,12157]",
      "dest": "identifier: SafeERC20 [12166,12175]"
    },
    {
      "src": "): ) [13140,13141]",
      "dest": "): ) [13158,13159]"
    },
    {
      "src": "binary_expression [5517,5522]",
      "dest": "binary_expression [5436,5441]"
    },
    {
      "src": "call_expression [32994,33314]",
      "dest": "call_expression [32281,32601]"
    },
    {
      "src": "call_argument [21485,21491]",
      "dest": "call_argument [21403,21409]"
    },
    {
      "src": "uint256: uint256 [22051,22058]",
      "dest": "uint256: uint256 [21969,21976]"
    },
    {
      "src": "return_statement [2638,2647]",
      "dest": "return_statement [2557,2566]"
    },
    {
      "src": ",: , [13847,13848]",
      "dest": ",: , [13865,13866]"
    },
    {
      "src": "address: address [20564,20571]",
      "dest": "address: address [20482,20489]"
    },
    {
      "src": "boolean_literal [22905,22909]",
      "dest": "boolean_literal [22823,22827]"
    },
    {
      "src": "uint256: uint256 [12482,12489]",
      "dest": "uint256: uint256 [12500,12507]"
    },
    {
      "src": "call_expression [13377,13427]",
      "dest": "call_expression [13395,13445]"
    },
    {
      "src": "member_expression [12543,12565]",
      "dest": "member_expression [12561,12583]"
    },
    {
      "src": "return_statement [21503,21515]",
      "dest": "return_statement [21421,21433]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [25919,26345]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [25837,26263]"
    },
    {
      "src": "function_definition [18544,18769]",
      "dest": "function_definition [18576,18801]"
    },
    {
      "src": "identifier: Address [8631,8638]",
      "dest": "identifier: Address [8333,8340]"
    },
    {
      "src": "parameter [11220,11234]",
      "dest": "parameter [10922,10936]"
    },
    {
      "src": "parameter [31005,31026]",
      "dest": "parameter [30292,30313]"
    },
    {
      "src": "call_argument [20964,20976]",
      "dest": "call_argument [20882,20894]"
    },
    {
      "src": "(: ( [24937,24938]",
      "dest": "(: ( [24855,24856]"
    },
    {
      "src": "type_cast_expression [26454,26464]",
      "dest": "type_cast_expression [26372,26382]"
    },
    {
      "src": "identifier: c [1054,1055]",
      "dest": "identifier: c [973,974]"
    },
    {
      "src": "private: private [16936,16943]",
      "dest": "private: private [17066,17073]"
    },
    {
      "src": "parameter [1882,1891]",
      "dest": "parameter [1801,1810]"
    },
    {
      "src": "identifier: _burn [26947,26952]",
      "dest": "identifier: _burn [26865,26870]"
    },
    {
      "src": "indexed: indexed [8382,8389]",
      "dest": "indexed: indexed [8190,8197]"
    },
    {
      "src": "}: } [28508,28509]",
      "dest": "}: } [28356,28357]"
    },
    {
      "src": "{: { [16495,16496]",
      "dest": "{: { [16550,16551]"
    },
    {
      "src": "parameter [12442,12454]",
      "dest": "parameter [12460,12472]"
    },
    {
      "src": "view: view [6091,6095]",
      "dest": "view: view [5899,5903]"
    },
    {
      "src": "}: } [11547,11548]",
      "dest": "}: } [11249,11250]"
    },
    {
      "src": ",: , [26399,26400]",
      "dest": ",: , [26317,26318]"
    },
    {
      "src": "constructor: constructor [18349,18360]",
      "dest": "constructor: constructor [18381,18392]"
    },
    {
      "src": "identifier: _balances [24426,24435]",
      "dest": "identifier: _balances [24344,24353]"
    },
    {
      "src": "==: == [2617,2619]",
      "dest": "==: == [2536,2538]"
    },
    {
      "src": "yul_function_call [9762,9782]",
      "dest": "yul_function_call [9464,9484]"
    },
    {
      "src": "parameter [7473,7488]",
      "dest": "parameter [7281,7296]"
    },
    {
      "src": "): ) [22769,22770]",
      "dest": "): ) [22687,22688]"
    },
    {
      "src": "call_argument [14904,14937]",
      "dest": "call_argument [14922,14955]"
    },
    {
      "src": "identifier: value [11431,11436]",
      "dest": "identifier: value [11133,11138]"
    },
    {
      "src": "type_name [32640,32646]",
      "dest": "type_name [31927,31933]"
    },
    {
      "src": "identifier: sub [27047,27050]",
      "dest": "identifier: sub [26965,26968]"
    },
    {
      "src": "identifier: recoveredAddress [33492,33508]",
      "dest": "identifier: recoveredAddress [32779,32795]"
    },
    {
      "src": "identifier: transferFrom [12572,12584]",
      "dest": "identifier: transferFrom [12590,12602]"
    },
    {
      "src": "assembly_statement [31567,31620]",
      "dest": "assembly_statement [30854,30907]"
    },
    {
      "src": "]: ] [26623,26624]",
      "dest": "]: ] [26541,26542]"
    },
    {
      "src": "primitive_type [26454,26461]",
      "dest": "primitive_type [26372,26379]"
    },
    {
      "src": "return_type_definition [5441,5458]",
      "dest": "return_type_definition [5360,5377]"
    },
    {
      "src": "): ) [12495,12496]",
      "dest": "): ) [12513,12514]"
    },
    {
      "src": "number_literal: 50 [27123,27125]",
      "dest": "number_literal: 50 [27041,27043]"
    },
    {
      "src": "return_statement [18511,18529]",
      "dest": "return_statement [18543,18561]"
    },
    {
      "src": "uint256: uint256 [8422,8429]",
      "dest": "uint256: uint256 [8230,8237]"
    },
    {
      "src": "primitive_type [3937,3944]",
      "dest": "primitive_type [3856,3863]"
    },
    {
      "src": "using_directive [12198,12224]",
      "dest": "using_directive [12216,12242]"
    },
    {
      "src": "primitive_type [964,971]",
      "dest": "primitive_type [883,890]"
    },
    {
      "src": "expression_statement [26980,27100]",
      "dest": "expression_statement [26898,27018]"
    },
    {
      "src": "parameter [12482,12495]",
      "dest": "parameter [12500,12513]"
    },
    {
      "src": "primitive_type [20259,20266]",
      "dest": "primitive_type [20177,20184]"
    },
    {
      "src": "(: ( [33408,33409]",
      "dest": "(: ( [32695,32696]"
    },
    {
      "src": "(: ( [25202,25203]",
      "dest": "(: ( [25120,25121]"
    },
    {
      "src": "\": \" [4835,4836]",
      "dest": "\": \" [4754,4755]"
    },
    {
      "src": "function: function [7848,7856]",
      "dest": "function: function [7656,7664]"
    },
    {
      "src": "type_name [31028,31035]",
      "dest": "type_name [30315,30322]"
    },
    {
      "src": "): ) [33648,33649]",
      "dest": "): ) [32935,32936]"
    },
    {
      "src": "comment: // https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol [29884,29970]",
      "dest": "comment: // https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol [29171,29257]"
    },
    {
      "src": "call_argument [25658,25659]",
      "dest": "call_argument [25576,25577]"
    },
    {
      "src": "returns: returns [20593,20600]",
      "dest": "returns: returns [20511,20518]"
    },
    {
      "src": "{: { [18500,18501]",
      "dest": "{: { [18532,18533]"
    },
    {
      "src": "function_body [10146,10197]",
      "dest": "function_body [9848,9899]"
    },
    {
      "src": "primitive_type [6380,6387]",
      "dest": "primitive_type [6188,6195]"
    },
    {
      "src": "(: ( [13713,13714]",
      "dest": "(: ( [13731,13732]"
    },
    {
      "src": ",: , [24373,24374]",
      "dest": ",: , [24291,24292]"
    },
    {
      "src": "function: function [28390,28398]",
      "dest": "function: function [28238,28246]"
    },
    {
      "src": "{: { [20611,20612]",
      "dest": "{: { [20529,20530]"
    },
    {
      "src": "): ) [3974,3975]",
      "dest": "): ) [3893,3894]"
    },
    {
      "src": "yul_identifier [17386,17390]",
      "dest": "yul_identifier [17516,17520]"
    },
    {
      "src": "type_name [7870,7877]",
      "dest": "type_name [7678,7685]"
    },
    {
      "src": "identifier: b [4747,4748]",
      "dest": "identifier: b [4666,4667]"
    },
    {
      "src": "identifier: callOptionalReturn [13776,13794]",
      "dest": "identifier: callOptionalReturn [13794,13812]"
    },
    {
      "src": "string [11297,11328]",
      "dest": "string [10999,11030]"
    },
    {
      "src": "call_argument [33417,33418]",
      "dest": "call_argument [32704,32705]"
    },
    {
      "src": "identifier: callOptionalReturn [14280,14298]",
      "dest": "identifier: callOptionalReturn [14298,14316]"
    },
    {
      "src": "identifier: account [25586,25593]",
      "dest": "identifier: account [25504,25511]"
    },
    {
      "src": "user_defined_type [12442,12448]",
      "dest": "user_defined_type [12460,12466]"
    },
    {
      "src": "identifier: a [3272,3273]",
      "dest": "identifier: a [3191,3192]"
    },
    {
      "src": "type_name [20239,20267]",
      "dest": "type_name [20157,20185]"
    },
    {
      "src": "parameter [3275,3284]",
      "dest": "parameter [3194,3203]"
    },
    {
      "src": "string_literal [1062,1091]",
      "dest": "string_literal [981,1010]"
    },
    {
      "src": "true [28186,28190]",
      "dest": "true [28034,28038]"
    },
    {
      "src": "source_file [0,33919]",
      "dest": "source_file [0,33206]"
    },
    {
      "src": "identifier: require [24342,24349]",
      "dest": "identifier: require [24260,24267]"
    },
    {
      "src": "visibility [975,983]",
      "dest": "visibility [894,902]"
    },
    {
      "src": "identifier: newAllowance [13655,13667]",
      "dest": "identifier: newAllowance [13673,13685]"
    },
    {
      "src": "call_argument [33146,33160]",
      "dest": "call_argument [32433,32447]"
    },
    {
      "src": "}: } [17529,17530]",
      "dest": "}: } [17659,17660]"
    },
    {
      "src": "return: return [23662,23668]",
      "dest": "return: return [23580,23586]"
    },
    {
      "src": "call_expression [5470,5499]",
      "dest": "call_expression [5389,5418]"
    },
    {
      "src": ",: , [20987,20988]",
      "dest": ",: , [20905,20906]"
    },
    {
      "src": "call_argument [26547,26583]",
      "dest": "call_argument [26465,26501]"
    },
    {
      "src": "primitive_type [12470,12477]",
      "dest": "primitive_type [12488,12495]"
    },
    {
      "src": "uint256: uint256 [25595,25602]",
      "dest": "uint256: uint256 [25513,25520]"
    },
    {
      "src": "identifier: subtractedValue [23593,23608]",
      "dest": "identifier: subtractedValue [23511,23526]"
    },
    {
      "src": "comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [24650,24917]",
      "dest": "comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [24568,24835]"
    },
    {
      "src": "parameter [6105,6112]",
      "dest": "parameter [5913,5920]"
    },
    {
      "src": "): ) [30643,30644]",
      "dest": "): ) [29930,29931]"
    },
    {
      "src": ",: , [13610,13611]",
      "dest": ",: , [13628,13629]"
    },
    {
      "src": "identifier: a [961,962]",
      "dest": "identifier: a [880,881]"
    },
    {
      "src": "return_type_definition [23496,23510]",
      "dest": "return_type_definition [23414,23428]"
    },
    {
      "src": "identifier: token [14883,14888]",
      "dest": "identifier: token [14901,14906]"
    },
    {
      "src": "member_expression [15158,15175]",
      "dest": "member_expression [15176,15193]"
    },
    {
      "src": "call_expression [1046,1092]",
      "dest": "call_expression [965,1011]"
    },
    {
      "src": "identifier: amount [24233,24239]",
      "dest": "identifier: amount [24151,24157]"
    },
    {
      "src": "contract_body [27667,28720]",
      "dest": "contract_body [27515,28568]"
    },
    {
      "src": "=: = [31364,31365]",
      "dest": "=: = [30651,30652]"
    },
    {
      "src": "returns: returns [21427,21434]",
      "dest": "returns: returns [21345,21352]"
    },
    {
      "src": ",: , [13317,13318]",
      "dest": ",: , [13335,13336]"
    },
    {
      "src": "comment: /**    * @dev Modifier to use in the initializer function of a contract.    */ [16388,16468]",
      "dest": "comment: /**    * @dev Modifier to use in the initializer function of a contract.    */ [16443,16523]"
    },
    {
      "src": "=: = [4135,4136]",
      "dest": "=: = [4054,4055]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [7538,7842]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [7346,7650]"
    },
    {
      "src": "identifier: _msgSender [23566,23576]",
      "dest": "identifier: _msgSender [23484,23494]"
    },
    {
      "src": "comment: // for accounts without code, i.e. `keccak256('')` [9496,9546]",
      "dest": "comment: // for accounts without code, i.e. `keccak256('')` [9198,9248]"
    },
    {
      "src": ",: , [33855,33856]",
      "dest": ",: , [33142,33143]"
    },
    {
      "src": "call_expression [12543,12611]",
      "dest": "call_expression [12561,12629]"
    },
    {
      "src": "primitive_type [26535,26542]",
      "dest": "primitive_type [26453,26460]"
    },
    {
      "src": "(: ( [16933,16934]",
      "dest": "(: ( [17063,17064]"
    },
    {
      "src": "identifier: a [4804,4805]",
      "dest": "identifier: a [4723,4724]"
    },
    {
      "src": "): ) [31979,31980]",
      "dest": "): ) [31266,31267]"
    },
    {
      "src": "comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [9401,9486]",
      "dest": "comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [9103,9188]"
    },
    {
      "src": "primitive_type [14875,14882]",
      "dest": "primitive_type [14893,14900]"
    },
    {
      "src": "): ) [8435,8436]",
      "dest": "): ) [8243,8244]"
    },
    {
      "src": "(: ( [11466,11467]",
      "dest": "(: ( [11168,11169]"
    },
    {
      "src": "call_argument [5478,5484]",
      "dest": "call_argument [5397,5403]"
    },
    {
      "src": "call_argument [23610,23649]",
      "dest": "call_argument [23528,23567]"
    },
    {
      "src": ",: , [33160,33161]",
      "dest": ",: , [32447,32448]"
    },
    {
      "src": "parenthesized_expression [9801,9845]",
      "dest": "parenthesized_expression [9503,9547]"
    },
    {
      "src": "identifier: approve [33674,33681]",
      "dest": "identifier: approve [32961,32968]"
    },
    {
      "src": "): ) [26504,26505]",
      "dest": "): ) [26422,26423]"
    },
    {
      "src": "identifier: recipient [11416,11425]",
      "dest": "identifier: recipient [11118,11127]"
    },
    {
      "src": "function_body [4008,4258]",
      "dest": "function_body [3927,4177]"
    },
    {
      "src": "(: ( [33004,33005]",
      "dest": "(: ( [32291,32292]"
    },
    {
      "src": "uint256: uint256 [32514,32521]",
      "dest": "uint256: uint256 [31801,31808]"
    },
    {
      "src": "type_name [8422,8429]",
      "dest": "type_name [8230,8237]"
    },
    {
      "src": "address: address [20886,20893]",
      "dest": "address: address [20804,20811]"
    },
    {
      "src": "primitive_type [31826,31831]",
      "dest": "primitive_type [31113,31118]"
    },
    {
      "src": "(: ( [25638,25639]",
      "dest": "(: ( [25556,25557]"
    },
    {
      "src": "constant: constant [29390,29398]",
      "dest": "constant: constant [28677,28685]"
    },
    {
      "src": "type_name [20602,20609]",
      "dest": "type_name [20520,20527]"
    },
    {
      "src": "binary_expression [9802,9844]",
      "dest": "binary_expression [9504,9546]"
    },
    {
      "src": "): ) [15140,15141]",
      "dest": "): ) [15158,15159]"
    },
    {
      "src": "{: { [5459,5460]",
      "dest": "{: { [5378,5379]"
    },
    {
      "src": "member_expression [13487,13500]",
      "dest": "member_expression [13505,13518]"
    },
    {
      "src": "identifier: initializer [16481,16492]",
      "dest": "identifier: initializer [16536,16547]"
    },
    {
      "src": "}: } [3382,3383]",
      "dest": "}: } [3301,3302]"
    },
    {
      "src": "parenthesized_expression [12997,13009]",
      "dest": "parenthesized_expression [13015,13027]"
    },
    {
      "src": "parameter [3926,3935]",
      "dest": "parameter [3845,3854]"
    },
    {
      "src": "call_argument [12601,12603]",
      "dest": "call_argument [12619,12621]"
    },
    {
      "src": "identifier: account [10180,10187]",
      "dest": "identifier: account [9882,9889]"
    },
    {
      "src": "number_literal: 0 [24371,24372]",
      "dest": "number_literal: 0 [24289,24290]"
    },
    {
      "src": "(: ( [15011,15012]",
      "dest": "(: ( [15029,15030]"
    },
    {
      "src": "call_argument [1983,1989]",
      "dest": "call_argument [1902,1908]"
    },
    {
      "src": "identifier: v [33417,33418]",
      "dest": "identifier: v [32704,32705]"
    },
    {
      "src": "function_body [1007,1121]",
      "dest": "function_body [926,1040]"
    },
    {
      "src": ",: , [24625,24626]",
      "dest": ",: , [24543,24544]"
    },
    {
      "src": "emit: emit [25861,25865]",
      "dest": "emit: emit [25779,25783]"
    },
    {
      "src": "identifier: sub [25751,25754]",
      "dest": "identifier: sub [25669,25672]"
    },
    {
      "src": "view: view [30654,30658]",
      "dest": "view: view [29941,29945]"
    },
    {
      "src": "identifier: selector [13839,13847]",
      "dest": "identifier: selector [13857,13865]"
    },
    {
      "src": "primitive_type [24938,24945]",
      "dest": "primitive_type [24856,24863]"
    },
    {
      "src": "): ) [18362,18363]",
      "dest": "): ) [18394,18395]"
    },
    {
      "src": "type_name [7886,7893]",
      "dest": "type_name [7694,7701]"
    },
    {
      "src": "string_literal [13721,13764]",
      "dest": "string_literal [13739,13782]"
    },
    {
      "src": "identifier: token [30637,30642]",
      "dest": "identifier: token [29924,29929]"
    },
    {
      "src": "identifier: _msgSender [20964,20974]",
      "dest": "identifier: _msgSender [20882,20892]"
    },
    {
      "src": "identifier: recipient [24561,24570]",
      "dest": "identifier: recipient [24479,24488]"
    },
    {
      "src": "(: ( [32742,32743]",
      "dest": "(: ( [32029,32030]"
    },
    {
      "src": "function: function [32372,32380]",
      "dest": "function: function [31659,31667]"
    },
    {
      "src": "identifier: codehash [9802,9810]",
      "dest": "identifier: codehash [9504,9512]"
    },
    {
      "src": "=: = [30221,30222]",
      "dest": "=: = [29508,29509]"
    },
    {
      "src": "return_statement [18746,18762]",
      "dest": "return_statement [18778,18794]"
    },
    {
      "src": "visibility [20921,20927]",
      "dest": "visibility [20839,20845]"
    },
    {
      "src": "true [21510,21514]",
      "dest": "true [21428,21432]"
    },
    {
      "src": ",: , [14902,14903]",
      "dest": ",: , [14920,14921]"
    },
    {
      "src": "primitive_type [3926,3933]",
      "dest": "primitive_type [3845,3852]"
    },
    {
      "src": "function_definition [7848,7945]",
      "dest": "function_definition [7656,7753]"
    },
    {
      "src": "identifier: a [1059,1060]",
      "dest": "identifier: a [978,979]"
    },
    {
      "src": "uint256: uint256 [964,971]",
      "dest": "uint256: uint256 [883,890]"
    },
    {
      "src": "}: } [21222,21223]",
      "dest": "}: } [21140,21141]"
    },
    {
      "src": "variable_declaration_statement [15011,15079]",
      "dest": "variable_declaration_statement [15029,15097]"
    },
    {
      "src": "expression_statement [23522,23652]",
      "dest": "expression_statement [23440,23570]"
    },
    {
      "src": "function_definition [5903,5958]",
      "dest": "function_definition [5711,5766]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol [5537,5619]",
      "dest": "comment: // https://github.com/certusone/wormhole/blob/7e2cf1f9818099c63c21d101afbfedb1903ee9ba/ethereum/contracts/bridge/Bridge.sol#L93 [11315,11442]"
    },
    {
      "src": ".: . [11430,11431]",
      "dest": ".: . [11132,11133]"
    },
    {
      "src": "(: ( [12648,12649]",
      "dest": "(: ( [12666,12667]"
    },
    {
      "src": "(: ( [22082,22083]",
      "dest": "(: ( [22000,22001]"
    },
    {
      "src": "primitive_type [5377,5384]",
      "dest": "primitive_type [5296,5303]"
    },
    {
      "src": "return: return [18511,18517]",
      "dest": "return: return [18543,18549]"
    },
    {
      "src": "return: return [30722,30728]",
      "dest": "return: return [30009,30015]"
    },
    {
      "src": "internal: internal [3976,3984]",
      "dest": "internal: internal [3895,3903]"
    },
    {
      "src": ",: , [32556,32557]",
      "dest": ",: , [31843,31844]"
    },
    {
      "src": "{: { [23511,23512]",
      "dest": "{: { [23429,23430]"
    },
    {
      "src": "): ) [12611,12612]",
      "dest": "): ) [12629,12630]"
    },
    {
      "src": "assignment_expression [31308,31344]",
      "dest": "assignment_expression [30595,30631]"
    },
    {
      "src": ",: , [25761,25762]",
      "dest": ",: , [25679,25680]"
    },
    {
      "src": "type_name [6778,6785]",
      "dest": "type_name [6586,6593]"
    },
    {
      "src": "): ) [26925,26926]",
      "dest": "): ) [26843,26844]"
    },
    {
      "src": "type_cast_expression [31885,31895]",
      "dest": "type_cast_expression [31172,31182]"
    },
    {
      "src": "function_definition [24171,24642]",
      "dest": "function_definition [24089,24560]"
    },
    {
      "src": "return_statement [3329,3376]",
      "dest": "return_statement [3248,3295]"
    },
    {
      "src": "boolean_literal [16804,16809]",
      "dest": "boolean_literal [16934,16939]"
    },
    {
      "src": "uint256: uint256 [13647,13654]",
      "dest": "uint256: uint256 [13665,13672]"
    },
    {
      "src": ",: , [15319,15320]",
      "dest": ",: , [15337,15338]"
    },
    {
      "src": "): ) [24633,24634]",
      "dest": "): ) [24551,24552]"
    },
    {
      "src": "(: ( [13486,13487]",
      "dest": "(: ( [13504,13505]"
    },
    {
      "src": "=: = [2025,2026]",
      "dest": "=: = [1944,1945]"
    },
    {
      "src": "address: address [24190,24197]",
      "dest": "address: address [24108,24115]"
    },
    {
      "src": "identifier: _balances [25711,25720]",
      "dest": "identifier: _balances [25629,25638]"
    },
    {
      "src": "visibility [16361,16368]",
      "dest": "visibility [16416,16423]"
    },
    {
      "src": "member_expression [32994,33004]",
      "dest": "member_expression [32281,32291]"
    },
    {
      "src": "address: address [31005,31012]",
      "dest": "address: address [30292,30299]"
    },
    {
      "src": "contract_declaration [20073,27148]",
      "dest": "contract_declaration [19991,27066]"
    },
    {
      "src": "private: private [29510,29517]",
      "dest": "private: private [28797,28804]"
    },
    {
      "src": "\": \" [11297,11298]",
      "dest": "\": \" [10999,11000]"
    },
    {
      "src": "extcodesize: extcodesize [17374,17385]",
      "dest": "extcodesize: extcodesize [17504,17515]"
    },
    {
      "src": "primitive_type [17340,17347]",
      "dest": "primitive_type [17470,17477]"
    },
    {
      "src": "primitive_type [6723,6730]",
      "dest": "primitive_type [6531,6538]"
    },
    {
      "src": "identifier: from [33082,33086]",
      "dest": "identifier: from [32369,32373]"
    },
    {
      "src": "identifier: recipient [24538,24547]",
      "dest": "identifier: recipient [24456,24465]"
    },
    {
      "src": "identifier: WormholeClient [29300,29314]",
      "dest": "identifier: WormholeClient [28587,28601]"
    },
    {
      "src": "return_type_definition [21427,21441]",
      "dest": "return_type_definition [21345,21359]"
    },
    {
      "src": "identifier: spender [26524,26531]",
      "dest": "identifier: spender [26442,26449]"
    },
    {
      "src": "(: ( [6104,6105]",
      "dest": "(: ( [5912,5913]"
    },
    {
      "src": "type_name [33372,33379]",
      "dest": "type_name [32659,32666]"
    },
    {
      "src": "[: [ [32661,32662]",
      "dest": "[: [ [31948,31949]"
    },
    {
      "src": "): ) [13698,13699]",
      "dest": "): ) [13716,13717]"
    },
    {
      "src": "uint256: uint256 [23464,23471]",
      "dest": "uint256: uint256 [23382,23389]"
    },
    {
      "src": "string_literal [23610,23649]",
      "dest": "string_literal [23528,23567]"
    },
    {
      "src": "parameter [6723,6736]",
      "dest": "parameter [6531,6544]"
    },
    {
      "src": "primitive_type [21387,21394]",
      "dest": "primitive_type [21305,21312]"
    },
    {
      "src": "comment: // Return data is optional [15183,15209]",
      "dest": "comment: // Return data is optional [15201,15227]"
    },
    {
      "src": "}: } [5532,5533]",
      "dest": "}: } [5451,5452]"
    },
    {
      "src": "comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [18618,18736]",
      "dest": "comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [18650,18768]"
    },
    {
      "src": "library_declaration [685,5533]",
      "dest": "library_declaration [604,5452]"
    },
    {
      "src": "(: ( [33634,33635]",
      "dest": "(: ( [32921,32922]"
    },
    {
      "src": "identifier: initialize [30994,31004]",
      "dest": "identifier: initialize [30281,30291]"
    },
    {
      "src": "type_name [13302,13309]",
      "dest": "type_name [13320,13327]"
    },
    {
      "src": "parameter [2336,2345]",
      "dest": "parameter [2255,2264]"
    },
    {
      "src": "address: address [30324,30331]",
      "dest": "address: address [29611,29618]"
    },
    {
      "src": "type_name [27115,27122]",
      "dest": "type_name [27033,27040]"
    },
    {
      "src": "call_argument [22178,22267]",
      "dest": "call_argument [22096,22185]"
    },
    {
      "src": "function_body [18373,18376]",
      "dest": "function_body [18405,18408]"
    },
    {
      "src": ",: , [4808,4809]",
      "dest": ",: , [4727,4728]"
    },
    {
      "src": "call_argument [13721,13764]",
      "dest": "call_argument [13739,13782]"
    },
    {
      "src": "type_name [30335,30341]",
      "dest": "type_name [29622,29628]"
    },
    {
      "src": "function: function [21089,21097]",
      "dest": "function: function [21007,21015]"
    },
    {
      "src": "return: return [4242,4248]",
      "dest": "return: return [4161,4167]"
    },
    {
      "src": "comment: // solhint-disable-next-line max-line-length [12935,12979]",
      "dest": "comment: // solhint-disable-next-line max-line-length [12953,12997]"
    },
    {
      "src": "\": \" [11446,11447]",
      "dest": "\": \" [11148,11149]"
    },
    {
      "src": "true [16703,16707]",
      "dest": "true [16833,16837]"
    },
    {
      "src": "primitive_type [26384,26391]",
      "dest": "primitive_type [26302,26309]"
    },
    {
      "src": "(: ( [11271,11272]",
      "dest": "(: ( [10973,10974]"
    },
    {
      "src": "variable_declaration_statement [2015,2033]",
      "dest": "variable_declaration_statement [1934,1952]"
    },
    {
      "src": "bytes32: bytes32 [32486,32493]",
      "dest": "bytes32: bytes32 [31773,31780]"
    },
    {
      "src": ".: . [14889,14890]",
      "dest": ".: . [14907,14908]"
    },
    {
      "src": "type_name [22751,22758]",
      "dest": "type_name [22669,22676]"
    },
    {
      "src": "identifier: this [13038,13042]",
      "dest": "identifier: this [13056,13060]"
    },
    {
      "src": "uint256: uint256 [20148,20155]",
      "dest": "uint256: uint256 [20066,20073]"
    },
    {
      "src": "\": \" [2718,2719]",
      "dest": "\": \" [2637,2638]"
    },
    {
      "src": "string: string [29503,29509]",
      "dest": "string: string [28790,28796]"
    },
    {
      "src": "(: ( [6777,6778]",
      "dest": "(: ( [6585,6586]"
    },
    {
      "src": "}: } [18768,18769]",
      "dest": "}: } [18800,18801]"
    },
    {
      "src": "(: ( [8373,8374]",
      "dest": "(: ( [8181,8182]"
    },
    {
      "src": "state_mutability [30654,30658]",
      "dest": "state_mutability [29941,29945]"
    },
    {
      "src": "type_name [23505,23509]",
      "dest": "type_name [23423,23427]"
    },
    {
      "src": "returns: returns [5940,5947]",
      "dest": "returns: returns [5748,5755]"
    },
    {
      "src": "primitive_type [2325,2332]",
      "dest": "primitive_type [2244,2251]"
    },
    {
      "src": "(: ( [4093,4094]",
      "dest": "(: ( [4012,4013]"
    },
    {
      "src": "visibility [16936,16943]",
      "dest": "visibility [17066,17073]"
    },
    {
      "src": "type_alias [20135,20143]",
      "dest": "type_alias [20053,20061]"
    },
    {
      "src": ",: , [1486,1487]",
      "dest": ",: , [1405,1406]"
    },
    {
      "src": "identifier: amount [27051,27057]",
      "dest": "identifier: amount [26969,26975]"
    },
    {
      "src": "assignment_expression [25811,25850]",
      "dest": "assignment_expression [25729,25768]"
    },
    {
      "src": "): ) [16934,16935]",
      "dest": "): ) [17064,17065]"
    },
    {
      "src": "uint256: uint256 [13319,13326]",
      "dest": "uint256: uint256 [13337,13344]"
    },
    {
      "src": "comment: // yield zero, making it an effective way to detect if a contract is [17196,17264]",
      "dest": "comment: // yield zero, making it an effective way to detect if a contract is [17326,17394]"
    },
    {
      "src": "!=: != [24276,24278]",
      "dest": "!=: != [24194,24196]"
    },
    {
      "src": "block_statement [2623,2658]",
      "dest": "block_statement [2542,2577]"
    },
    {
      "src": "type_name [21404,21411]",
      "dest": "type_name [21322,21329]"
    },
    {
      "src": "type_name [3999,4006]",
      "dest": "type_name [3918,3925]"
    },
    {
      "src": "user_defined_type [18172,18185]",
      "dest": "user_defined_type [18204,18217]"
    },
    {
      "src": "]: ] [25728,25729]",
      "dest": "]: ] [25646,25647]"
    },
    {
      "src": "identifier: b [3343,3344]",
      "dest": "identifier: b [3262,3263]"
    },
    {
      "src": "type_name [5388,5395]",
      "dest": "type_name [5307,5314]"
    },
    {
      "src": "call_argument [30737,30750]",
      "dest": "call_argument [30024,30037]"
    },
    {
      "src": "assignment_expression [28170,28190]",
      "dest": "assignment_expression [28018,28038]"
    },
    {
      "src": "address: address [7886,7893]",
      "dest": "address: address [7694,7701]"
    },
    {
      "src": "binary_expression [15158,15179]",
      "dest": "binary_expression [15176,15197]"
    },
    {
      "src": "(: ( [31711,31712]",
      "dest": "(: ( [30998,30999]"
    },
    {
      "src": "[: [ [21199,21200]",
      "dest": "[: [ [21117,21118]"
    },
    {
      "src": "(: ( [22208,22209]",
      "dest": "(: ( [22126,22127]"
    },
    {
      "src": "): ) [11536,11537]",
      "dest": "): ) [11238,11239]"
    },
    {
      "src": "call_argument [16510,16557]",
      "dest": "call_argument [16640,16687]"
    },
    {
      "src": "address: address [18483,18490]",
      "dest": "address: address [18515,18522]"
    },
    {
      "src": ",: , [33415,33416]",
      "dest": ",: , [32702,32703]"
    },
    {
      "src": "identifier: sender [22156,22162]",
      "dest": "identifier: sender [22074,22080]"
    },
    {
      "src": "call_expression [31366,31392]",
      "dest": "call_expression [30653,30679]"
    },
    {
      "src": "identifier: _msgSender [27033,27043]",
      "dest": "identifier: _msgSender [26951,26961]"
    },
    {
      "src": "variable_declaration_statement [9583,9672]",
      "dest": "variable_declaration_statement [9285,9374]"
    },
    {
      "src": "call_argument [33892,33897]",
      "dest": "call_argument [33179,33184]"
    },
    {
      "src": "return_type_definition [6769,6786]",
      "dest": "return_type_definition [6577,6594]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol [8444,8521]",
      "dest": "comment: // SPDX-License-Identifier: MIT [15414,15445]"
    },
    {
      "src": "member_expression [13487,13509]",
      "dest": "member_expression [13505,13527]"
    },
    {
      "src": "variable_declaration [32822,32836]",
      "dest": "variable_declaration [32109,32123]"
    },
    {
      "src": "type_alias [12204,12211]",
      "dest": "type_alias [12222,12229]"
    },
    {
      "src": "number_literal: 0 [4098,4099]",
      "dest": "number_literal: 0 [4017,4018]"
    },
    {
      "src": "(: ( [30323,30324]",
      "dest": "(: ( [29610,29611]"
    },
    {
      "src": "(: ( [18482,18483]",
      "dest": "(: ( [18514,18515]"
    },
    {
      "src": "(: ( [28137,28138]",
      "dest": "(: ( [27985,27986]"
    },
    {
      "src": "member_expression [22178,22215]",
      "dest": "member_expression [22096,22133]"
    },
    {
      "src": "identifier: sub [23589,23592]",
      "dest": "identifier: sub [23507,23510]"
    },
    {
      "src": "(: ( [21435,21436]",
      "dest": "(: ( [21353,21354]"
    },
    {
      "src": "uint256: uint256 [24225,24232]",
      "dest": "uint256: uint256 [24143,24150]"
    },
    {
      "src": "identifier: from [32662,32666]",
      "dest": "identifier: from [31949,31953]"
    },
    {
      "src": "type_cast_expression [14875,14889]",
      "dest": "type_cast_expression [14893,14907]"
    },
    {
      "src": "call_argument [24627,24633]",
      "dest": "call_argument [24545,24551]"
    },
    {
      "src": "]: ] [26614,26615]",
      "dest": "]: ] [26532,26533]"
    },
    {
      "src": "type_name [11193,11208]",
      "dest": "type_name [10895,10910]"
    },
    {
      "src": "call_argument [3346,3374]",
      "dest": "call_argument [3265,3293]"
    },
    {
      "src": "identifier: a [3934,3935]",
      "dest": "identifier: a [3853,3854]"
    },
    {
      "src": "contract: contract [18152,18160]",
      "dest": "contract: contract [18184,18192]"
    },
    {
      "src": ",: , [7488,7489]",
      "dest": ",: , [7296,7297]"
    },
    {
      "src": ",: , [32943,32944]",
      "dest": ",: , [32230,32231]"
    },
    {
      "src": ".: . [22870,22871]",
      "dest": ".: . [22788,22789]"
    },
    {
      "src": "identifier: _allowances [20277,20288]",
      "dest": "identifier: _allowances [20195,20206]"
    },
    {
      "src": "memory: memory [3955,3961]",
      "dest": "memory: memory [3874,3880]"
    },
    {
      "src": "binary_expression [2706,2711]",
      "dest": "binary_expression [2625,2630]"
    },
    {
      "src": "returns: returns [21152,21159]",
      "dest": "returns: returns [21070,21077]"
    },
    {
      "src": "string: string [29375,29381]",
      "dest": "string: string [28662,28668]"
    },
    {
      "src": "}: } [10196,10197]",
      "dest": "}: } [9898,9899]"
    },
    {
      "src": "internal: internal [25611,25619]",
      "dest": "internal: internal [25529,25537]"
    },
    {
      "src": "pure: pure [5436,5440]",
      "dest": "pure: pure [5355,5359]"
    },
    {
      "src": "identifier: data [15073,15077]",
      "dest": "identifier: data [15091,15095]"
    },
    {
      "src": "identifier: isContract [9243,9253]",
      "dest": "identifier: isContract [8945,8955]"
    },
    {
      "src": "variable_declaration_tuple [11397,11413]",
      "dest": "variable_declaration_tuple [11099,11115]"
    },
    {
      "src": "(: ( [31226,31227]",
      "dest": "(: ( [30513,30514]"
    },
    {
      "src": "!=: != [24360,24362]",
      "dest": "!=: != [24278,24280]"
    },
    {
      "src": "address: address [11264,11271]",
      "dest": "address: address [10966,10973]"
    },
    {
      "src": "address: address [31941,31948]",
      "dest": "address: address [31228,31235]"
    },
    {
      "src": "\": \" [25054,25055]",
      "dest": "\": \" [24972,24973]"
    },
    {
      "src": "expression_statement [21453,21493]",
      "dest": "expression_statement [21371,21411]"
    },
    {
      "src": "(: ( [5376,5377]",
      "dest": "(: ( [5295,5296]"
    },
    {
      "src": "identifier: deadline [32548,32556]",
      "dest": "identifier: deadline [31835,31843]"
    },
    {
      "src": "uint256: uint256 [1893,1900]",
      "dest": "uint256: uint256 [1812,1819]"
    },
    {
      "src": "call_argument [2718,2753]",
      "dest": "call_argument [2637,2672]"
    },
    {
      "src": ",: , [16557,16558]",
      "dest": ",: , [16687,16688]"
    },
    {
      "src": "expression_statement [12517,12613]",
      "dest": "expression_statement [12535,12631]"
    },
    {
      "src": "primitive_type [10129,10144]",
      "dest": "primitive_type [9831,9846]"
    },
    {
      "src": "expression_statement [11459,11538]",
      "dest": "expression_statement [11161,11240]"
    },
    {
      "src": "inheritance_specifier [20106,20113]",
      "dest": "inheritance_specifier [20024,20031]"
    },
    {
      "src": "=: = [32837,32838]",
      "dest": "=: = [32124,32125]"
    },
    {
      "src": "identifier: callOptionalReturn [12315,12333]",
      "dest": "identifier: callOptionalReturn [12333,12351]"
    },
    {
      "src": "bytes32: bytes32 [32585,32592]",
      "dest": "bytes32: bytes32 [31872,31879]"
    },
    {
      "src": ",: , [13043,13044]",
      "dest": ",: , [13061,13062]"
    },
    {
      "src": "member_expression [22836,22874]",
      "dest": "member_expression [22754,22792]"
    },
    {
      "src": ",: , [32475,32476]",
      "dest": ",: , [31762,31763]"
    },
    {
      "src": "comment: // safeApprove should only be called when setting an initial allowance, [12715,12786]",
      "dest": "comment: // safeApprove should only be called when setting an initial allowance, [12733,12804]"
    },
    {
      "src": "internal: internal [24241,24249]",
      "dest": "internal: internal [24159,24167]"
    },
    {
      "src": "contract_body [29334,33919]",
      "dest": "contract_body [28621,33206]"
    },
    {
      "src": "): ) [13240,13241]",
      "dest": "): ) [13258,13259]"
    },
    {
      "src": "variable_declaration_statement [17340,17351]",
      "dest": "variable_declaration_statement [17470,17481]"
    },
    {
      "src": "call_expression [31875,31896]",
      "dest": "call_expression [31162,31183]"
    },
    {
      "src": "): ) [20442,20443]",
      "dest": "): ) [20360,20361]"
    },
    {
      "src": "): ) [31243,31244]",
      "dest": "): ) [30530,30531]"
    },
    {
      "src": "(: ( [20963,20964]",
      "dest": "(: ( [20881,20882]"
    },
    {
      "src": "identifier: value [12605,12610]",
      "dest": "identifier: value [12623,12628]"
    },
    {
      "src": "pure: pure [3985,3989]",
      "dest": "pure: pure [3904,3908]"
    },
    {
      "src": ",: , [32418,32419]",
      "dest": ",: , [31705,31706]"
    },
    {
      "src": ".: . [24463,24464]",
      "dest": ".: . [24381,24382]"
    },
    {
      "src": "identifier: this [18612,18616]",
      "dest": "identifier: this [18644,18648]"
    },
    {
      "src": "identifier: spender [13849,13856]",
      "dest": "identifier: spender [13867,13874]"
    },
    {
      "src": "identifier: amount [26409,26415]",
      "dest": "identifier: amount [26327,26333]"
    },
    {
      "src": "state_mutability [18573,18577]",
      "dest": "state_mutability [18605,18609]"
    },
    {
      "src": "identifier: account [20639,20646]",
      "dest": "identifier: account [20557,20564]"
    },
    {
      "src": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [17642,18150]",
      "dest": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [17674,18182]"
    },
    {
      "src": "string [2718,2753]",
      "dest": "string [2637,2672]"
    },
    {
      "src": "call_argument [24608,24614]",
      "dest": "call_argument [24526,24532]"
    },
    {
      "src": ",: , [31797,31798]",
      "dest": ",: , [31084,31085]"
    },
    {
      "src": "identifier: nonce [32647,32652]",
      "dest": "identifier: nonce [31934,31939]"
    },
    {
      "src": "||: || [16523,16525]",
      "dest": "||: || [16653,16655]"
    },
    {
      "src": ",: , [31148,31149]",
      "dest": ",: , [30435,30436]"
    },
    {
      "src": "(: ( [26368,26369]",
      "dest": "(: ( [26286,26287]"
    },
    {
      "src": "\": \" [32809,32810]",
      "dest": "\": \" [32096,32097]"
    },
    {
      "src": "memory: memory [5406,5412]",
      "dest": "memory: memory [5325,5331]"
    },
    {
      "src": "call_argument [27059,27097]",
      "dest": "call_argument [26977,27015]"
    },
    {
      "src": "function: function [26875,26883]",
      "dest": "function: function [26793,26801]"
    },
    {
      "src": "parameter [23447,23462]",
      "dest": "parameter [23365,23380]"
    },
    {
      "src": "identifier: spender [26392,26399]",
      "dest": "identifier: spender [26310,26317]"
    },
    {
      "src": "return_statement [17399,17414]",
      "dest": "return_statement [17529,17544]"
    },
    {
      "src": "array_access [22836,22861]",
      "dest": "array_access [22754,22779]"
    },
    {
      "src": "contract: contract [29291,29299]",
      "dest": "contract: contract [28578,28586]"
    },
    {
      "src": "(: ( [25017,25018]",
      "dest": "(: ( [24935,24936]"
    },
    {
      "src": "state_variable_declaration [29503,29620]",
      "dest": "state_variable_declaration [28790,28907]"
    },
    {
      "src": "address: address [25884,25891]",
      "dest": "address: address [25802,25809]"
    },
    {
      "src": "return_type_definition [4764,4781]",
      "dest": "return_type_definition [4683,4700]"
    },
    {
      "src": "expression_statement [25811,25851]",
      "dest": "expression_statement [25729,25769]"
    },
    {
      "src": "binary_expression [16510,16541]",
      "dest": "binary_expression [16640,16671]"
    },
    {
      "src": "internal: internal [4750,4758]",
      "dest": "internal: internal [4669,4677]"
    },
    {
      "src": "parameter [7905,7919]",
      "dest": "parameter [7713,7727]"
    },
    {
      "src": "type_name [12268,12275]",
      "dest": "type_name [12286,12293]"
    },
    {
      "src": "state_variable_declaration [27674,27701]",
      "dest": "state_variable_declaration [27522,27549]"
    },
    {
      "src": "member_expression [13670,13685]",
      "dest": "member_expression [13688,13703]"
    },
    {
      "src": "call_expression [31186,31297]",
      "dest": "call_expression [30473,30584]"
    },
    {
      "src": "{: { [18373,18374]",
      "dest": "{: { [18405,18406]"
    },
    {
      "src": "primitive_type [4773,4780]",
      "dest": "primitive_type [4692,4699]"
    },
    {
      "src": "}: } [25910,25911]",
      "dest": "}: } [25828,25829]"
    },
    {
      "src": "parameter [23505,23509]",
      "dest": "parameter [23423,23427]"
    },
    {
      "src": "uint256: uint256 [3264,3271]",
      "dest": "uint256: uint256 [3183,3190]"
    },
    {
      "src": "\": \" [15106,15107]",
      "dest": "\": \" [15124,15125]"
    },
    {
      "src": "{: { [2379,2380]",
      "dest": "{: { [2298,2299]"
    },
    {
      "src": "type_name [32605,32612]",
      "dest": "type_name [31892,31899]"
    },
    {
      "src": "type_cast_expression [24279,24289]",
      "dest": "type_cast_expression [24197,24207]"
    },
    {
      "src": "visibility [1431,1439]",
      "dest": "visibility [1350,1358]"
    },
    {
      "src": "(: ( [6722,6723]",
      "dest": "(: ( [6530,6531]"
    },
    {
      "src": "comment: // deployed when running a constructor, any checks on its code size will [17118,17190]",
      "dest": "comment: // deployed when running a constructor, any checks on its code size will [17248,17320]"
    },
    {
      "src": "identifier: amount [32437,32443]",
      "dest": "identifier: amount [31724,31730]"
    },
    {
      "src": "primitive_type [7939,7943]",
      "dest": "primitive_type [7747,7751]"
    },
    {
      "src": "user_defined_type [20115,20121]",
      "dest": "user_defined_type [20033,20039]"
    },
    {
      "src": "function_definition [24923,25231]",
      "dest": "function_definition [24841,25149]"
    },
    {
      "src": "number_literal: 50 [17505,17507]",
      "dest": "number_literal: 47 [17635,17637]"
    },
    {
      "src": "=: = [25730,25731]",
      "dest": "=: = [25648,25649]"
    },
    {
      "src": "call_expression [4800,4837]",
      "dest": "call_expression [4719,4756]"
    },
    {
      "src": ",: , [12661,12662]",
      "dest": ",: , [12679,12680]"
    },
    {
      "src": "call_argument [13849,13856]",
      "dest": "call_argument [13867,13874]"
    },
    {
      "src": "member_expression [23554,23592]",
      "dest": "member_expression [23472,23510]"
    },
    {
      "src": "internal: internal [28423,28431]",
      "dest": "internal: internal [28271,28279]"
    },
    {
      "src": "identifier: require [31107,31114]",
      "dest": "identifier: require [30394,30401]"
    },
    {
      "src": "\": \" [31832,31833]",
      "dest": "\": \" [31119,31120]"
    },
    {
      "src": "\": \" [4810,4811]",
      "dest": "\": \" [4729,4730]"
    },
    {
      "src": "call_argument [24476,24516]",
      "dest": "call_argument [24394,24434]"
    },
    {
      "src": "\": \" [16606,16607]",
      "dest": "\": \" [16736,16737]"
    },
    {
      "src": "visibility [1932,1940]",
      "dest": "visibility [1851,1859]"
    },
    {
      "src": "): ) [7919,7920]",
      "dest": "): ) [7727,7728]"
    },
    {
      "src": "identifier: _balances [24446,24455]",
      "dest": "identifier: _balances [24364,24373]"
    },
    {
      "src": "primitive_type [12482,12489]",
      "dest": "primitive_type [12500,12507]"
    },
    {
      "src": "primitive_type [8179,8186]",
      "dest": "primitive_type [7987,7994]"
    },
    {
      "src": ".: . [31676,31677]",
      "dest": ".: . [30963,30964]"
    },
    {
      "src": "type_name [30416,30421]",
      "dest": "type_name [29703,29708]"
    },
    {
      "src": "variable_declaration_statement [17305,17334]",
      "dest": "variable_declaration_statement [17435,17464]"
    },
    {
      "src": "identifier: recipientChain [29091,29105]",
      "dest": "identifier: recipientChain [11560,11574]"
    },
    {
      "src": "=: = [24444,24445]",
      "dest": "=: = [24362,24363]"
    },
    {
      "src": "array_access [22178,22211]",
      "dest": "array_access [22096,22129]"
    },
    {
      "src": "): ) [13415,13416]",
      "dest": "): ) [13433,13434]"
    },
    {
      "src": "comment: /**      * @notice Exposes isInitialized bool var to child contracts with read-only access      */ [28517,28617]",
      "dest": "comment: /**      * @notice Exposes isInitialized bool var to child contracts with read-only access      */ [28365,28465]"
    },
    {
      "src": "function_definition [28390,28509]",
      "dest": "function_definition [28238,28357]"
    },
    {
      "src": ",: , [24289,24290]",
      "dest": ",: , [24207,24208]"
    },
    {
      "src": "(: ( [33766,33767]",
      "dest": "(: ( [33053,33054]"
    },
    {
      "src": ",: , [20113,20114]",
      "dest": ",: , [20031,20032]"
    },
    {
      "src": "binary_expression [4137,4142]",
      "dest": "binary_expression [4056,4061]"
    },
    {
      "src": "function_body [16495,16822]",
      "dest": "function_body [16550,16952]"
    },
    {
      "src": "contract: contract [27625,27633]",
      "dest": "contract: contract [27473,27481]"
    },
    {
      "src": "public: public [28140,28146]",
      "dest": "public: public [27988,27994]"
    },
    {
      "src": "}: } [28716,28717]",
      "dest": "}: } [28564,28565]"
    },
    {
      "src": "identifier: Wormhole [31366,31374]",
      "dest": "identifier: Wormhole [30653,30661]"
    },
    {
      "src": "(: ( [24998,24999]",
      "dest": "(: ( [24916,24917]"
    },
    {
      "src": "type_name [10129,10144]",
      "dest": "type_name [9831,9846]"
    },
    {
      "src": ",: , [24614,24615]",
      "dest": ",: , [24532,24533]"
    },
    {
      "src": "parameter [9254,9269]",
      "dest": "parameter [8956,8971]"
    },
    {
      "src": "emit: emit [26644,26648]",
      "dest": "emit: emit [26562,26566]"
    },
    {
      "src": "parameter [4728,4737]",
      "dest": "parameter [4647,4656]"
    },
    {
      "src": "call_expression [22164,22176]",
      "dest": "call_expression [22082,22094]"
    },
    {
      "src": "type_name [11398,11402]",
      "dest": "type_name [11100,11104]"
    },
    {
      "src": "identifier: errorMessage [4101,4113]",
      "dest": "identifier: errorMessage [4020,4032]"
    },
    {
      "src": "event_paramater [8179,8192]",
      "dest": "event_paramater [7987,8000]"
    },
    {
      "src": "comment: /// @dev ERC-20 token that will be transfered [30365,30410]",
      "dest": "comment: /// @dev ERC-20 token that will be transfered [29652,29697]"
    },
    {
      "src": "comment: //  1. The target address is checked to verify it contains contract code [14572,14644]",
      "dest": "comment: //  1. The target address is checked to verify it contains contract code [14590,14662]"
    },
    {
      "src": "primitive_type [16617,16621]",
      "dest": "primitive_type [16747,16751]"
    },
    {
      "src": "visibility [30422,30430]",
      "dest": "visibility [29709,29717]"
    },
    {
      "src": "member_expression [31115,31133]",
      "dest": "member_expression [30402,30420]"
    },
    {
      "src": "identifier: owner [6731,6736]",
      "dest": "identifier: owner [6539,6544]"
    },
    {
      "src": "identifier: recipient [33187,33196]",
      "dest": "identifier: recipient [32474,32483]"
    },
    {
      "src": "address: address [33682,33689]",
      "dest": "address: address [32969,32976]"
    },
    {
      "src": "type_name [9556,9563]",
      "dest": "type_name [9258,9265]"
    },
    {
      "src": "state_variable_declaration [17497,17527]",
      "dest": "state_variable_declaration [17627,17657]"
    },
    {
      "src": "(: ( [32848,32849]",
      "dest": "(: ( [32135,32136]"
    },
    {
      "src": "uint256: uint256 [5949,5956]",
      "dest": "uint256: uint256 [5757,5764]"
    },
    {
      "src": "call_expression [23531,23543]",
      "dest": "call_expression [23449,23461]"
    },
    {
      "src": "identifier: r [32593,32594]",
      "dest": "identifier: r [31880,31881]"
    },
    {
      "src": "return_type_definition [28663,28677]",
      "dest": "return_type_definition [28511,28525]"
    },
    {
      "src": "parameter [32429,32443]",
      "dest": "parameter [31716,31730]"
    },
    {
      "src": "primitive_type [10089,10096]",
      "dest": "primitive_type [9791,9798]"
    },
    {
      "src": "emit_statement [24594,24635]",
      "dest": "emit_statement [24512,24553]"
    },
    {
      "src": "public: public [20921,20927]",
      "dest": "public: public [20839,20845]"
    },
    {
      "src": "public: public [20414,20420]",
      "dest": "public: public [20332,20338]"
    },
    {
      "src": "identifier: Initializable [20091,20104]",
      "dest": "identifier: Initializable [20009,20022]"
    },
    {
      "src": "primitive_type [21123,21130]",
      "dest": "primitive_type [21041,21048]"
    },
    {
      "src": "user_defined_type [20106,20113]",
      "dest": "user_defined_type [20024,20031]"
    },
    {
      "src": "call_argument [1485,1486]",
      "dest": "call_argument [1404,1405]"
    },
    {
      "src": "identifier: keccak256 [31875,31884]",
      "dest": "identifier: keccak256 [31162,31171]"
    },
    {
      "src": "call_argument [33409,33415]",
      "dest": "call_argument [32696,32702]"
    },
    {
      "src": "comment: // Reserved storage space to allow for layout changes in the future. [17425,17493]",
      "dest": "comment: // Reserved storage space to allow for layout changes in the future. [17555,17623]"
    },
    {
      "src": "\": \" [13763,13764]",
      "dest": "\": \" [13781,13782]"
    },
    {
      "src": "(: ( [13420,13421]",
      "dest": "(: ( [13438,13439]"
    },
    {
      "src": "call_argument [21462,21474]",
      "dest": "call_argument [21380,21392]"
    },
    {
      "src": "true: true [28186,28190]",
      "dest": "true: true [28034,28038]"
    },
    {
      "src": "identifier: s [33423,33424]",
      "dest": "identifier: s [32710,32711]"
    },
    {
      "src": "primitive_type [12184,12191]",
      "dest": "primitive_type [12202,12209]"
    },
    {
      "src": "identifier: amount [11437,11443]",
      "dest": "identifier: amount [11139,11145]"
    },
    {
      "src": "]: ] [32666,32667]",
      "dest": "]: ] [31953,31954]"
    },
    {
      "src": "primitive_type [17320,17327]",
      "dest": "primitive_type [17450,17457]"
    },
    {
      "src": "function: function [12416,12424]",
      "dest": "function: function [12434,12442]"
    },
    {
      "src": "return_statement [1105,1114]",
      "dest": "return_statement [1024,1033]"
    },
    {
      "src": "parameter [1955,1962]",
      "dest": "parameter [1874,1881]"
    },
    {
      "src": "call_expression [13014,13053]",
      "dest": "call_expression [13032,13071]"
    },
    {
      "src": "comment: // address returns the current address. Since the code is still not [17045,17112]",
      "dest": "comment: // address returns the current address. Since the code is still not [17175,17242]"
    },
    {
      "src": "(: ( [22109,22110]",
      "dest": "(: ( [22027,22028]"
    },
    {
      "src": "(: ( [31114,31115]",
      "dest": "(: ( [30401,30402]"
    },
    {
      "src": "assignment_expression [24528,24583]",
      "dest": "assignment_expression [24446,24501]"
    },
    {
      "src": "variable_declaration [16617,16636]",
      "dest": "variable_declaration [16747,16766]"
    },
    {
      "src": "function_body [31096,31988]",
      "dest": "function_body [30383,31275]"
    },
    {
      "src": "parameter [32514,32532]",
      "dest": "parameter [31801,31819]"
    },
    {
      "src": "identifier: value [12393,12398]",
      "dest": "identifier: value [12411,12416]"
    },
    {
      "src": "primitive_type [20435,20442]",
      "dest": "primitive_type [20353,20360]"
    },
    {
      "src": ",: , [13800,13801]",
      "dest": ",: , [13818,13819]"
    },
    {
      "src": "identifier: IERC20 [14299,14305]",
      "dest": "identifier: IERC20 [14317,14323]"
    },
    {
      "src": "parameter [20886,20903]",
      "dest": "parameter [20804,20821]"
    },
    {
      "src": "address: address [21123,21130]",
      "dest": "address: address [21041,21048]"
    },
    {
      "src": ",: , [12468,12469]",
      "dest": ",: , [12486,12487]"
    },
    {
      "src": "uint32: uint32 [32640,32646]",
      "dest": "uint32: uint32 [31927,31933]"
    },
    {
      "src": "identifier: amount [22059,22065]",
      "dest": "identifier: amount [21977,21983]"
    },
    {
      "src": "}: } [1120,1121]",
      "dest": "}: } [1039,1040]"
    },
    {
      "src": "type_name [1018,1025]",
      "dest": "type_name [937,944]"
    },
    {
      "src": "visibility [26927,26935]",
      "dest": "visibility [26845,26853]"
    },
    {
      "src": ",: , [23608,23609]",
      "dest": ",: , [23526,23527]"
    },
    {
      "src": "event_paramater [8159,8177]",
      "dest": "event_paramater [7967,7985]"
    },
    {
      "src": "identifier: spender [21207,21214]",
      "dest": "identifier: spender [21125,21132]"
    },
    {
      "src": "identifier: b [972,973]",
      "dest": "identifier: b [891,892]"
    },
    {
      "src": "function_body [28437,28509]",
      "dest": "function_body [28285,28357]"
    },
    {
      "src": "primitive_type [8397,8404]",
      "dest": "primitive_type [8205,8212]"
    },
    {
      "src": "library_declaration [8623,11548]",
      "dest": "library_declaration [8325,11250]"
    },
    {
      "src": "call_argument [32863,33348]",
      "dest": "call_argument [32150,32635]"
    },
    {
      "src": "call_argument [24287,24288]",
      "dest": "call_argument [24205,24206]"
    },
    {
      "src": "identifier: amount [33701,33707]",
      "dest": "identifier: amount [32988,32994]"
    },
    {
      "src": "address: address [12268,12275]",
      "dest": "address: address [12286,12293]"
    },
    {
      "src": "call_argument [11467,11474]",
      "dest": "call_argument [11169,11176]"
    },
    {
      "src": ",: , [20104,20105]",
      "dest": ",: , [20022,20023]"
    },
    {
      "src": "call_expression [4086,4114]",
      "dest": "call_expression [4005,4033]"
    },
    {
      "src": "uint256: uint256 [1420,1427]",
      "dest": "uint256: uint256 [1339,1346]"
    },
    {
      "src": "identifier: b [2686,2687]",
      "dest": "identifier: b [2605,2606]"
    },
    {
      "src": "parameter [29144,29162]",
      "dest": "parameter [11613,11631]"
    },
    {
      "src": "identifier: account [9774,9781]",
      "dest": "identifier: account [9476,9483]"
    },
    {
      "src": "type_name [26384,26391]",
      "dest": "type_name [26302,26309]"
    },
    {
      "src": ",: , [21402,21403]",
      "dest": ",: , [21320,21321]"
    },
    {
      "src": "(: ( [28455,28456]",
      "dest": "(: ( [28303,28304]"
    },
    {
      "src": "visibility [29382,29389]",
      "dest": "visibility [28669,28676]"
    },
    {
      "src": "identifier: DOMAIN_SEPARATOR [32927,32943]",
      "dest": "identifier: DOMAIN_SEPARATOR [32214,32230]"
    },
    {
      "src": "parameter [12254,12266]",
      "dest": "parameter [12272,12284]"
    },
    {
      "src": "identifier: account [26953,26960]",
      "dest": "identifier: account [26871,26878]"
    },
    {
      "src": "return_type_definition [21152,21169]",
      "dest": "return_type_definition [21070,21087]"
    },
    {
      "src": "identifier: Address [12204,12211]",
      "dest": "identifier: Address [12222,12229]"
    },
    {
      "src": "): ) [24412,24413]",
      "dest": "): ) [24330,24331]"
    },
    {
      "src": ",: , [32532,32533]",
      "dest": ",: , [31819,31820]"
    },
    {
      "src": "function_definition [26875,27107]",
      "dest": "function_definition [26793,27025]"
    },
    {
      "src": "boolean_literal [28473,28477]",
      "dest": "boolean_literal [28321,28325]"
    },
    {
      "src": "identifier: sub [1878,1881]",
      "dest": "identifier: sub [1797,1800]"
    },
    {
      "src": "call_argument [26665,26672]",
      "dest": "call_argument [26583,26590]"
    },
    {
      "src": "identifier: recoveredAddress [33458,33474]",
      "dest": "identifier: recoveredAddress [32745,32761]"
    },
    {
      "src": "]: ] [21205,21206]",
      "dest": "]: ] [21123,21124]"
    },
    {
      "src": "user_defined_type [30451,30459]",
      "dest": "user_defined_type [29738,29746]"
    },
    {
      "src": "yul_path [9774,9781]",
      "dest": "yul_path [9476,9483]"
    },
    {
      "src": "type_name [18483,18498]",
      "dest": "type_name [18515,18530]"
    },
    {
      "src": "\": \" [1491,1492]",
      "dest": "\": \" [1410,1411]"
    },
    {
      "src": "identifier: isConstructor [16526,16539]",
      "dest": "identifier: isConstructor [16656,16669]"
    },
    {
      "src": "call_argument [16559,16607]",
      "dest": "call_argument [16689,16737]"
    },
    {
      "src": "visibility [4750,4758]",
      "dest": "visibility [4669,4677]"
    },
    {
      "src": "type_name [1904,1910]",
      "dest": "type_name [1823,1829]"
    },
    {
      "src": "constant: constant [30187,30195]",
      "dest": "constant: constant [29474,29482]"
    },
    {
      "src": "address: address [26535,26542]",
      "dest": "address: address [26453,26460]"
    },
    {
      "src": "string [11445,11447]",
      "dest": "string [11147,11149]"
    },
    {
      "src": "identifier: isInitialized [28696,28709]",
      "dest": "identifier: isInitialized [28544,28557]"
    },
    {
      "src": "expression_statement [15281,15367]",
      "dest": "expression_statement [15299,15385]"
    },
    {
      "src": ",: , [26545,26546]",
      "dest": ",: , [26463,26464]"
    },
    {
      "src": "type_name [13288,13294]",
      "dest": "type_name [13306,13312]"
    },
    {
      "src": "address: address [12663,12670]",
      "dest": "address: address [12681,12688]"
    },
    {
      "src": "identifier: encodeWithSelector [12345,12363]",
      "dest": "identifier: encodeWithSelector [12363,12381]"
    },
    {
      "src": "uint256: uint256 [998,1005]",
      "dest": "uint256: uint256 [917,924]"
    },
    {
      "src": "bytes: bytes [14313,14318]",
      "dest": "bytes: bytes [14331,14336]"
    },
    {
      "src": "function_body [9300,9853]",
      "dest": "function_body [9002,9555]"
    },
    {
      "src": ",: , [32908,32909]",
      "dest": ",: , [32195,32196]"
    },
    {
      "src": "yul_identifier [9774,9781]",
      "dest": "yul_identifier [9476,9483]"
    },
    {
      "src": "variable_declaration_statement [33372,33426]",
      "dest": "variable_declaration_statement [32659,32713]"
    },
    {
      "src": "(: ( [11397,11398]",
      "dest": "(: ( [11099,11100]"
    },
    {
      "src": "): ) [6418,6419]",
      "dest": "): ) [6226,6227]"
    },
    {
      "src": "primitive_type [3264,3271]",
      "dest": "primitive_type [3183,3190]"
    },
    {
      "src": "type_name [12680,12687]",
      "dest": "type_name [12698,12705]"
    },
    {
      "src": "parenthesized_expression [29426,29494]",
      "dest": "parenthesized_expression [28713,28781]"
    },
    {
      "src": "}: } [33918,33919]",
      "dest": "}: } [33205,33206]"
    },
    {
      "src": "identifier: amount [33113,33119]",
      "dest": "identifier: amount [32400,32406]"
    },
    {
      "src": "): ) [3316,3317]",
      "dest": "): ) [3235,3236]"
    },
    {
      "src": "address: address [8397,8404]",
      "dest": "address: address [8205,8212]"
    },
    {
      "src": "type_name [22032,22039]",
      "dest": "type_name [21950,21957]"
    },
    {
      "src": "if: if [15154,15156]",
      "dest": "if: if [15172,15174]"
    },
    {
      "src": "identifier: amount [20913,20919]",
      "dest": "identifier: amount [20831,20837]"
    },
    {
      "src": "boolean_literal [22286,22290]",
      "dest": "boolean_literal [22204,22208]"
    },
    {
      "src": "bool: bool [6414,6418]",
      "dest": "bool: bool [6222,6226]"
    },
    {
      "src": "): ) [30341,30342]",
      "dest": "): ) [29628,29629]"
    },
    {
      "src": "[: [ [25741,25742]",
      "dest": "[: [ [25659,25660]"
    },
    {
      "src": ".: . [25838,25839]",
      "dest": ".: . [25756,25757]"
    },
    {
      "src": "identifier: ERROR_TOKEN_NOT_CONTRACT [31150,31174]",
      "dest": "identifier: ERROR_TOKEN_NOT_CONTRACT [30437,30461]"
    },
    {
      "src": "identifier: callOptionalReturn [12517,12535]",
      "dest": "identifier: callOptionalReturn [12535,12553]"
    },
    {
      "src": "string [11476,11536]",
      "dest": "string [11178,11238]"
    },
    {
      "src": "member_expression [11416,11430]",
      "dest": "member_expression [11118,11132]"
    },
    {
      "src": "call_expression [31702,31797]",
      "dest": "call_expression [30989,31084]"
    },
    {
      "src": "(: ( [26444,26445]",
      "dest": "(: ( [26362,26363]"
    },
    {
      "src": "identifier: success [11467,11474]",
      "dest": "identifier: success [11169,11176]"
    },
    {
      "src": "parameter [26401,26415]",
      "dest": "parameter [26319,26333]"
    },
    {
      "src": "returns: returns [23496,23503]",
      "dest": "returns: returns [23414,23421]"
    },
    {
      "src": "return_type_definition [22074,22088]",
      "dest": "return_type_definition [21992,22006]"
    },
    {
      "src": "identifier: _burnFrom [26884,26893]",
      "dest": "identifier: _burnFrom [26802,26811]"
    },
    {
      "src": "type_name [16958,16962]",
      "dest": "type_name [17088,17092]"
    },
    {
      "src": "for: for [12180,12183]",
      "dest": "for: for [12198,12201]"
    },
    {
      "src": "[: [ [22861,22862]",
      "dest": "[: [ [22779,22780]"
    },
    {
      "src": "function_definition [940,1121]",
      "dest": "function_definition [859,1040]"
    },
    {
      "src": "state_mutability [6091,6095]",
      "dest": "state_mutability [5899,5903]"
    },
    {
      "src": "string [16559,16607]",
      "dest": "string [16689,16737]"
    },
    {
      "src": "type_name [28672,28676]",
      "dest": "type_name [28520,28524]"
    },
    {
      "src": "type_cast_expression [31826,31855]",
      "dest": "type_cast_expression [31113,31142]"
    },
    {
      "src": "view: view [21147,21151]",
      "dest": "view: view [21065,21069]"
    },
    {
      "src": "type_name [6414,6418]",
      "dest": "type_name [6222,6226]"
    },
    {
      "src": ",: , [13462,13463]",
      "dest": ",: , [13480,13481]"
    },
    {
      "src": "call_expression [11256,11329]",
      "dest": "call_expression [10958,11031]"
    },
    {
      "src": "identifier: Initializable [18172,18185]",
      "dest": "identifier: Initializable [18204,18217]"
    },
    {
      "src": "array_access [23554,23588]",
      "dest": "array_access [23472,23506]"
    },
    {
      "src": "}: } [22297,22298]",
      "dest": "}: } [22215,22216]"
    },
    {
      "src": "call_expression [24991,25056]",
      "dest": "call_expression [24909,24974]"
    },
    {
      "src": "array_access [25140,25158]",
      "dest": "array_access [25058,25076]"
    },
    {
      "src": "type_name [25578,25585]",
      "dest": "type_name [25496,25503]"
    },
    {
      "src": "identifier: SafeMath [12171,12179]",
      "dest": "identifier: SafeMath [12189,12197]"
    },
    {
      "src": "function: function [1869,1877]",
      "dest": "function: function [1788,1796]"
    },
    {
      "src": "member_expression [33660,33681]",
      "dest": "member_expression [32947,32968]"
    },
    {
      "src": "function_body [26936,27107]",
      "dest": "function_body [26854,27025]"
    },
    {
      "src": "identifier: b [5478,5479]",
      "dest": "identifier: b [5397,5398]"
    },
    {
      "src": "number_literal: 0 [26543,26544]",
      "dest": "number_literal: 0 [26461,26462]"
    },
    {
      "src": "identifier: _balances [24551,24560]",
      "dest": "identifier: _balances [24469,24478]"
    },
    {
      "src": "call_expression [32735,32811]",
      "dest": "call_expression [32022,32098]"
    },
    {
      "src": "call_argument [5486,5498]",
      "dest": "call_argument [5405,5417]"
    },
    {
      "src": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [8202,8353]",
      "dest": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [8010,8161]"
    },
    {
      "src": "parameter [18587,18599]",
      "dest": "parameter [18619,18631]"
    },
    {
      "src": "\": \" [24329,24330]",
      "dest": "\": \" [24247,24248]"
    },
    {
      "src": "user_defined_type [29318,29333]",
      "dest": "user_defined_type [28605,28620]"
    },
    {
      "src": "comment: /**      * @notice Reverts transaction if isInitialized is false. Used by child contracts to ensure      *      contract is initialized before functions can be called.      */ [28206,28384]",
      "dest": "comment: /**      * @notice Reverts transaction if isInitialized is false. Used by child contracts to ensure      *      contract is initialized before functions can be called.      */ [28054,28232]"
    },
    {
      "src": "): ) [22791,22792]",
      "dest": "): ) [22709,22710]"
    },
    {
      "src": "%: % [5519,5520]",
      "dest": "%: % [5438,5439]"
    },
    {
      "src": "identifier: _msgSender [22164,22174]",
      "dest": "identifier: _msgSender [22082,22092]"
    },
    {
      "src": "using_directive [12165,12192]",
      "dest": "using_directive [12183,12210]"
    },
    {
      "src": "return: return [3329,3335]",
      "dest": "return: return [3248,3254]"
    },
    {
      "src": "primitive_type [32640,32646]",
      "dest": "primitive_type [31927,31933]"
    },
    {
      "src": "(: ( [22155,22156]",
      "dest": "(: ( [22073,22074]"
    },
    {
      "src": "function_definition [6046,6114]",
      "dest": "function_definition [5854,5922]"
    },
    {
      "src": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [22925,23414]",
      "dest": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [22843,23332]"
    },
    {
      "src": "identifier: recipient [7894,7903]",
      "dest": "identifier: recipient [7702,7711]"
    },
    {
      "src": "uint256: uint256 [27115,27122]",
      "dest": "uint256: uint256 [27033,27040]"
    },
    {
      "src": "uint256: uint256 [4728,4735]",
      "dest": "uint256: uint256 [4647,4654]"
    },
    {
      "src": "return_type_definition [6096,6113]",
      "dest": "return_type_definition [5904,5921]"
    },
    {
      "src": "visibility [29510,29517]",
      "dest": "visibility [28797,28804]"
    },
    {
      "src": "\": \" [32898,32899]",
      "dest": "\": \" [32185,32186]"
    },
    {
      "src": "function_definition [6343,6420]",
      "dest": "function_definition [6151,6228]"
    },
    {
      "src": ".: . [15292,15293]",
      "dest": ".: . [15310,15311]"
    },
    {
      "src": "): ) [22175,22176]",
      "dest": "): ) [22093,22094]"
    },
    {
      "src": "identifier: timestamp [32761,32770]",
      "dest": "identifier: timestamp [32048,32057]"
    },
    {
      "src": "(: ( [6413,6414]",
      "dest": "(: ( [6221,6222]"
    },
    {
      "src": ",: , [13856,13857]",
      "dest": ",: , [13874,13875]"
    },
    {
      "src": "address: address [8137,8144]",
      "dest": "address: address [7945,7952]"
    },
    {
      "src": "call_expression [22198,22210]",
      "dest": "call_expression [22116,22128]"
    },
    {
      "src": "identifier: require [11459,11466]",
      "dest": "identifier: require [11161,11168]"
    },
    {
      "src": "identifier: chainId [31591,31598]",
      "dest": "identifier: chainId [30878,30885]"
    },
    {
      "src": "private: private [17509,17516]",
      "dest": "private: private [17639,17646]"
    },
    {
      "src": "call_argument [13030,13043]",
      "dest": "call_argument [13048,13061]"
    },
    {
      "src": "state_variable_declaration [27709,27792]",
      "dest": "state_variable_declaration [27557,27640]"
    },
    {
      "src": ".: . [12344,12345]",
      "dest": ".: . [12362,12363]"
    },
    {
      "src": "string: string [3948,3954]",
      "dest": "string: string [3867,3873]"
    },
    {
      "src": "(: ( [31004,31005]",
      "dest": "(: ( [30291,30292]"
    },
    {
      "src": "visibility [9271,9279]",
      "dest": "visibility [8973,8981]"
    },
    {
      "src": "identifier: a [2027,2028]",
      "dest": "identifier: a [1946,1947]"
    },
    {
      "src": "constructor_definition [18349,18376]",
      "dest": "constructor_definition [18381,18408]"
    },
    {
      "src": "{: { [1463,1464]",
      "dest": "{: { [1382,1383]"
    },
    {
      "src": "type_name [5377,5384]",
      "dest": "type_name [5296,5303]"
    },
    {
      "src": "identifier: mul [2321,2324]",
      "dest": "identifier: mul [2240,2243]"
    },
    {
      "src": "[: [ [25149,25150]",
      "dest": "[: [ [25067,25068]"
    },
    {
      "src": "identifier: spender [22862,22869]",
      "dest": "identifier: spender [22780,22787]"
    },
    {
      "src": "identifier: b [3945,3946]",
      "dest": "identifier: b [3864,3865]"
    },
    {
      "src": "member_expression [13201,13214]",
      "dest": "member_expression [13219,13232]"
    },
    {
      "src": "string [22224,22266]",
      "dest": "string [22142,22184]"
    },
    {
      "src": "(: ( [22786,22787]",
      "dest": "(: ( [22704,22705]"
    },
    {
      "src": "boolean_literal [23669,23673]",
      "dest": "boolean_literal [23587,23591]"
    },
    {
      "src": "): ) [20266,20267]",
      "dest": "): ) [20184,20185]"
    },
    {
      "src": "): ) [13625,13626]",
      "dest": "): ) [13643,13644]"
    },
    {
      "src": ",: , [8177,8178]",
      "dest": ",: , [7985,7986]"
    },
    {
      "src": "(: ( [1484,1485]",
      "dest": "(: ( [1403,1404]"
    },
    {
      "src": "public: public [32622,32628]",
      "dest": "public: public [31909,31915]"
    },
    {
      "src": "user_defined_type [12254,12260]",
      "dest": "user_defined_type [12272,12278]"
    },
    {
      "src": "comment: // under construction or not. [17270,17299]",
      "dest": "comment: // under construction or not. [17400,17429]"
    },
    {
      "src": "identifier: initializing [16369,16381]",
      "dest": "identifier: initializing [16424,16436]"
    },
    {
      "src": "[: [ [24560,24561]",
      "dest": "[: [ [24478,24479]"
    },
    {
      "src": ",: , [33516,33517]",
      "dest": ",: , [32803,32804]"
    },
    {
      "src": "member_expression [24446,24467]",
      "dest": "member_expression [24364,24385]"
    },
    {
      "src": "primitive_type [32543,32547]",
      "dest": "primitive_type [31830,31834]"
    },
    {
      "src": "identifier: require [1046,1053]",
      "dest": "identifier: require [965,972]"
    },
    {
      "src": "block_statement [16679,16742]",
      "dest": "block_statement [16809,16872]"
    },
    {
      "src": ",: , [21474,21475]",
      "dest": ",: , [21392,21393]"
    },
    {
      "src": ".: . [31122,31123]",
      "dest": ".: . [30409,30410]"
    },
    {
      "src": "call_argument [23554,23650]",
      "dest": "call_argument [23472,23568]"
    },
    {
      "src": "): ) [6785,6786]",
      "dest": "): ) [6593,6594]"
    },
    {
      "src": "identifier: from [12464,12468]",
      "dest": "identifier: from [12482,12486]"
    },
    {
      "src": "): ) [16540,16541]",
      "dest": "): ) [16670,16671]"
    },
    {
      "src": "call_argument [31891,31894]",
      "dest": "call_argument [31178,31181]"
    },
    {
      "src": "visibility [30645,30653]",
      "dest": "visibility [29932,29940]"
    },
    {
      "src": "identifier: from [33512,33516]",
      "dest": "identifier: from [32799,32803]"
    },
    {
      "src": ",: , [12454,12455]",
      "dest": ",: , [12472,12473]"
    },
    {
      "src": "primitive_type [20173,20180]",
      "dest": "primitive_type [20091,20098]"
    },
    {
      "src": "bytes: bytes [31826,31831]",
      "dest": "bytes: bytes [31113,31118]"
    },
    {
      "src": "function_body [13636,13880]",
      "dest": "function_body [13654,13898]"
    },
    {
      "src": "identifier: a [2333,2334]",
      "dest": "identifier: a [2252,2253]"
    },
    {
      "src": "function_body [20444,20482]",
      "dest": "function_body [20362,20400]"
    },
    {
      "src": ",: , [26960,26961]",
      "dest": ",: , [26878,26879]"
    },
    {
      "src": "}: } [12619,12620]",
      "dest": "}: } [12637,12638]"
    },
    {
      "src": "public: public [23489,23495]",
      "dest": "public: public [23407,23413]"
    },
    {
      "src": "call_argument [25203,25204]",
      "dest": "call_argument [25121,25122]"
    },
    {
      "src": "identifier: Initializable [27653,27666]",
      "dest": "identifier: Initializable [27501,27514]"
    },
    {
      "src": "type_cast_expression [25884,25894]",
      "dest": "type_cast_expression [25802,25812]"
    },
    {
      "src": "comment: /**    * @dev Indicates that the contract has been initialized.    */ [16157,16228]",
      "dest": "comment: /**    * @dev Indicates that the contract has been initialized.    */ [16212,16283]"
    },
    {
      "src": "function: function [28623,28631]",
      "dest": "function: function [28471,28479]"
    },
    {
      "src": "call_expression [22100,22136]",
      "dest": "call_expression [22018,22054]"
    },
    {
      "src": "string_literal [29437,29487]",
      "dest": "string_literal [28724,28774]"
    },
    {
      "src": "call_expression [11416,11448]",
      "dest": "call_expression [11118,11150]"
    },
    {
      "src": "identifier: this [17328,17332]",
      "dest": "identifier: this [17458,17462]"
    },
    {
      "src": "parameter [21404,21418]",
      "dest": "parameter [21322,21336]"
    },
    {
      "src": "primitive_type [1882,1889]",
      "dest": "primitive_type [1801,1808]"
    },
    {
      "src": "[: [ [22189,22190]",
      "dest": "[: [ [22107,22108]"
    },
    {
      "src": "identifier: _allowances [22178,22189]",
      "dest": "identifier: _allowances [22096,22107]"
    },
    {
      "src": "state_mutability [4759,4763]",
      "dest": "state_mutability [4678,4682]"
    },
    {
      "src": "array_access [25732,25750]",
      "dest": "array_access [25650,25668]"
    },
    {
      "src": "primitive_type [2336,2343]",
      "dest": "primitive_type [2255,2262]"
    },
    {
      "src": "call_expression [13178,13240]",
      "dest": "call_expression [13196,13258]"
    },
    {
      "src": "[: [ [20638,20639]",
      "dest": "[: [ [20556,20557]"
    },
    {
      "src": "(: ( [31890,31891]",
      "dest": "(: ( [31177,31178]"
    },
    {
      "src": "identifier: initializing [16510,16522]",
      "dest": "identifier: initializing [16640,16652]"
    },
    {
      "src": "parameter [11193,11218]",
      "dest": "parameter [10895,10920]"
    },
    {
      "src": "string: string [27709,27715]",
      "dest": "string: string [27557,27563]"
    },
    {
      "src": "[: [ [23565,23566]",
      "dest": "[: [ [23483,23484]"
    },
    {
      "src": "\": \" [29437,29438]",
      "dest": "\": \" [28724,28725]"
    },
    {
      "src": "identifier: IERC20 [12442,12448]",
      "dest": "identifier: IERC20 [12460,12466]"
    },
    {
      "src": ",: , [22834,22835]",
      "dest": ",: , [22752,22753]"
    },
    {
      "src": "(: ( [22015,22016]",
      "dest": "(: ( [21933,21934]"
    },
    {
      "src": "true: true [22286,22290]",
      "dest": "true: true [22204,22208]"
    },
    {
      "src": "state_mutability [5935,5939]",
      "dest": "state_mutability [5743,5747]"
    },
    {
      "src": "call_expression [16502,16608]",
      "dest": "call_expression [16632,16738]"
    },
    {
      "src": "returns: returns [989,996]",
      "dest": "returns: returns [908,915]"
    },
    {
      "src": "binary_expression [17406,17413]",
      "dest": "binary_expression [17536,17543]"
    },
    {
      "src": "identifier: block [32755,32760]",
      "dest": "identifier: block [32042,32047]"
    },
    {
      "src": "identifier: codehash [9564,9572]",
      "dest": "identifier: codehash [9266,9274]"
    },
    {
      "src": "identifier: token [13588,13593]",
      "dest": "identifier: token [13606,13611]"
    },
    {
      "src": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2390,2469]",
      "dest": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2309,2388]"
    },
    {
      "src": "{: { [14340,14341]",
      "dest": "{: { [14358,14359]"
    },
    {
      "src": "type_name [9254,9261]",
      "dest": "type_name [8956,8963]"
    },
    {
      "src": "call_expression [33436,33577]",
      "dest": "call_expression [32723,32864]"
    },
    {
      "src": "primitive_type [20886,20893]",
      "dest": "primitive_type [20804,20811]"
    },
    {
      "src": "(: ( [22823,22824]",
      "dest": "(: ( [22741,22742]"
    },
    {
      "src": "call_argument [25022,25055]",
      "dest": "call_argument [24940,24973]"
    },
    {
      "src": "identifier: isTopLevelCall [16663,16677]",
      "dest": "identifier: isTopLevelCall [16793,16807]"
    },
    {
      "src": "primitive_type [26911,26918]",
      "dest": "primitive_type [26829,26836]"
    },
    {
      "src": "): ) [11234,11235]",
      "dest": "): ) [10936,10937]"
    },
    {
      "src": "}: } [30758,30759]",
      "dest": "}: } [30045,30046]"
    },
    {
      "src": "variable_declaration [2670,2679]",
      "dest": "variable_declaration [2589,2598]"
    },
    {
      "src": "call_expression [13152,13241]",
      "dest": "call_expression [13170,13259]"
    },
    {
      "src": "identifier: mod [4724,4727]",
      "dest": "identifier: mod [4643,4646]"
    },
    {
      "src": "\": \" [31795,31796]",
      "dest": "\": \" [31082,31083]"
    },
    {
      "src": "type_name [32406,32413]",
      "dest": "type_name [31693,31700]"
    },
    {
      "src": ",: , [33699,33700]",
      "dest": ",: , [32986,32987]"
    },
    {
      "src": "number_literal: 0x0 [9841,9844]",
      "dest": "number_literal: 0x0 [9543,9546]"
    },
    {
      "src": "function: function [29001,29009]",
      "dest": "function: function [11470,11478]"
    },
    {
      "src": "return_type_definition [989,1006]",
      "dest": "return_type_definition [908,925]"
    },
    {
      "src": "type_name [9583,9590]",
      "dest": "type_name [9285,9292]"
    },
    {
      "src": "parameter [12268,12278]",
      "dest": "parameter [12286,12296]"
    },
    {
      "src": "uint256: uint256 [12280,12287]",
      "dest": "uint256: uint256 [12298,12305]"
    },
    {
      "src": "): ) [20267,20268]",
      "dest": "): ) [20185,20186]"
    },
    {
      "src": "type_name [12482,12489]",
      "dest": "type_name [12500,12507]"
    },
    {
      "src": ",: , [13059,13060]",
      "dest": ",: , [13077,13078]"
    },
    {
      "src": "identifier: _wormholeAddress [31036,31052]",
      "dest": "identifier: _wormholeAddress [30323,30339]"
    },
    {
      "src": "call_argument [32927,32943]",
      "dest": "call_argument [32214,32230]"
    },
    {
      "src": "variable_declaration [1018,1027]",
      "dest": "variable_declaration [937,946]"
    },
    {
      "src": "primitive_type [13319,13326]",
      "dest": "primitive_type [13337,13344]"
    },
    {
      "src": "visibility [21420,21426]",
      "dest": "visibility [21338,21344]"
    },
    {
      "src": "): ) [21440,21441]",
      "dest": "): ) [21358,21359]"
    },
    {
      "src": "user_defined_type [13581,13587]",
      "dest": "user_defined_type [13599,13605]"
    },
    {
      "src": "return_statement [23662,23674]",
      "dest": "return_statement [23580,23592]"
    },
    {
      "src": "): ) [9298,9299]",
      "dest": "): ) [9000,9001]"
    },
    {
      "src": "primitive_type [25595,25602]",
      "dest": "primitive_type [25513,25520]"
    },
    {
      "src": ",: , [12266,12267]",
      "dest": ",: , [12284,12285]"
    },
    {
      "src": "parameter [10129,10144]",
      "dest": "parameter [9831,9846]"
    },
    {
      "src": "internal: internal [2347,2355]",
      "dest": "internal: internal [2266,2274]"
    },
    {
      "src": "\": \" [14936,14937]",
      "dest": "\": \" [14954,14955]"
    },
    {
      "src": "comment: /**      * @dev Converts an `address` into `address payable`. Note that this is      * simply a type cast: the actual underlying value is not changed.      *      * _Available since v2.4.0._      */ [9861,10064]",
      "dest": "comment: /**      * @dev Converts an `address` into `address payable`. Note that this is      * simply a type cast: the actual underlying value is not changed.      *      * _Available since v2.4.0._      */ [9563,9766]"
    },
    {
      "src": "]: ] [22196,22197]",
      "dest": "]: ] [22114,22115]"
    },
    {
      "src": "type_name [5450,5457]",
      "dest": "type_name [5369,5376]"
    },
    {
      "src": "identifier: transferToken [33590,33603]",
      "dest": "identifier: transferToken [32877,32890]"
    },
    {
      "src": "member_expression [13802,13824]",
      "dest": "member_expression [13820,13842]"
    },
    {
      "src": "=: = [25082,25083]",
      "dest": "=: = [25000,25001]"
    },
    {
      "src": "primitive_type [1454,1461]",
      "dest": "primitive_type [1373,1380]"
    },
    {
      "src": "primitive_type [21436,21440]",
      "dest": "primitive_type [21354,21358]"
    },
    {
      "src": "(: ( [11263,11264]",
      "dest": "(: ( [10965,10966]"
    },
    {
      "src": ",: , [24223,24224]",
      "dest": ",: , [24141,24142]"
    },
    {
      "src": "parameter [9294,9298]",
      "dest": "parameter [8996,9000]"
    },
    {
      "src": "identifier: self [17386,17390]",
      "dest": "identifier: self [17516,17520]"
    },
    {
      "src": "\": \" [27096,27097]",
      "dest": "\": \" [27014,27015]"
    },
    {
      "src": "type_name [26369,26376]",
      "dest": "type_name [26287,26294]"
    },
    {
      "src": "if_statement [16760,16817]",
      "dest": "if_statement [16890,16947]"
    },
    {
      "src": "=>: => [20236,20238]",
      "dest": "=>: => [20154,20156]"
    },
    {
      "src": "primitive_type [1018,1025]",
      "dest": "primitive_type [937,944]"
    },
    {
      "src": "is: is [18169,18171]",
      "dest": "is: is [18201,18203]"
    },
    {
      "src": "): ) [25849,25850]",
      "dest": "): ) [25767,25768]"
    },
    {
      "src": "): ) [13332,13333]",
      "dest": "): ) [13350,13351]"
    },
    {
      "src": "call_argument [24269,24289]",
      "dest": "call_argument [24187,24207]"
    },
    {
      "src": "call_argument [12393,12398]",
      "dest": "call_argument [12411,12416]"
    },
    {
      "src": "call_argument [12595,12599]",
      "dest": "call_argument [12613,12617]"
    },
    {
      "src": "): ) [6753,6754]",
      "dest": "): ) [6561,6562]"
    },
    {
      "src": "identifier: Address [31115,31122]",
      "dest": "identifier: Address [30402,30409]"
    },
    {
      "src": "pure: pure [1440,1444]",
      "dest": "pure: pure [1359,1363]"
    },
    {
      "src": "identifier: v [32573,32574]",
      "dest": "identifier: v [31860,31861]"
    },
    {
      "src": "[: [ [22847,22848]",
      "dest": "[: [ [22765,22766]"
    },
    {
      "src": "{: { [12704,12705]",
      "dest": "{: { [12722,12723]"
    },
    {
      "src": "function_definition [4715,4845]",
      "dest": "function_definition [4634,4764]"
    },
    {
      "src": "function_definition [20545,20655]",
      "dest": "function_definition [20463,20573]"
    },
    {
      "src": "member_expression [14875,14900]",
      "dest": "member_expression [14893,14918]"
    },
    {
      "src": "): ) [9844,9845]",
      "dest": "): ) [9546,9547]"
    },
    {
      "src": "(: ( [21386,21387]",
      "dest": "(: ( [21304,21305]"
    },
    {
      "src": "primitive_type [6738,6745]",
      "dest": "primitive_type [6546,6553]"
    },
    {
      "src": "call_argument [1062,1091]",
      "dest": "call_argument [981,1010]"
    },
    {
      "src": ".: . [13214,13215]",
      "dest": ".: . [13232,13233]"
    },
    {
      "src": "primitive_type [25195,25202]",
      "dest": "primitive_type [25113,25120]"
    },
    {
      "src": "): ) [2753,2754]",
      "dest": "): ) [2672,2673]"
    },
    {
      "src": ".: . [32760,32761]",
      "dest": ".: . [32047,32048]"
    },
    {
      "src": "uint256: uint256 [29144,29151]",
      "dest": "uint256: uint256 [11613,11620]"
    },
    {
      "src": "\": \" [24375,24376]",
      "dest": "\": \" [24293,24294]"
    },
    {
      "src": "expression_statement [28170,28191]",
      "dest": "expression_statement [28018,28039]"
    },
    {
      "src": "string: string [5399,5405]",
      "dest": "string: string [5318,5324]"
    },
    {
      "src": "primitive_type [29144,29151]",
      "dest": "primitive_type [11613,11620]"
    },
    {
      "src": "number_literal: 0 [15178,15179]",
      "dest": "number_literal: 0 [15196,15197]"
    },
    {
      "src": "bool: bool [9294,9298]",
      "dest": "bool: bool [8996,9000]"
    },
    {
      "src": "true [28473,28477]",
      "dest": "true [28321,28325]"
    },
    {
      "src": "): ) [2377,2378]",
      "dest": "): ) [2296,2297]"
    },
    {
      "src": "type_name [27674,27678]",
      "dest": "type_name [27522,27526]"
    },
    {
      "src": "return: return [1474,1480]",
      "dest": "return: return [1393,1399]"
    },
    {
      "src": "string_literal [14904,14937]",
      "dest": "string_literal [14922,14955]"
    },
    {
      "src": "type_name [29059,29066]",
      "dest": "type_name [11528,11535]"
    },
    {
      "src": "call_argument [22875,22885]",
      "dest": "call_argument [22793,22803]"
    },
    {
      "src": "call_argument [13393,13406]",
      "dest": "call_argument [13411,13424]"
    },
    {
      "src": "(: ( [20601,20602]",
      "dest": "(: ( [20519,20520]"
    },
    {
      "src": "true: true [28473,28477]",
      "dest": "true: true [28321,28325]"
    },
    {
      "src": "function_definition [21089,21223]",
      "dest": "function_definition [21007,21141]"
    },
    {
      "src": "call_argument [13694,13698]",
      "dest": "call_argument [13712,13716]"
    },
    {
      "src": "identifier: amount [25163,25169]",
      "dest": "identifier: amount [25081,25087]"
    },
    {
      "src": "identifier: ERROR_NOT_INITIALIZED [27733,27754]",
      "dest": "identifier: ERROR_NOT_INITIALIZED [27581,27602]"
    },
    {
      "src": "identifier: add [22871,22874]",
      "dest": "identifier: add [22789,22792]"
    },
    {
      "src": "identifier: _allowances [27012,27023]",
      "dest": "identifier: _allowances [26930,26941]"
    },
    {
      "src": "identifier: isContract [31123,31133]",
      "dest": "identifier: isContract [30410,30420]"
    },
    {
      "src": "type_name [13319,13326]",
      "dest": "type_name [13337,13344]"
    },
    {
      "src": "{: { [10146,10147]",
      "dest": "{: { [9848,9849]"
    },
    {
      "src": "type_name [21161,21168]",
      "dest": "type_name [21079,21086]"
    },
    {
      "src": ",: , [1060,1061]",
      "dest": ",: , [979,980]"
    },
    {
      "src": "}: } [28719,28720]",
      "dest": "}: } [28567,28568]"
    },
    {
      "src": "visibility [12695,12703]",
      "dest": "visibility [12713,12721]"
    },
    {
      "src": "parameter [21161,21168]",
      "dest": "parameter [21079,21086]"
    },
    {
      "src": "identifier: _isInitialized [28632,28646]",
      "dest": "identifier: _isInitialized [28480,28494]"
    },
    {
      "src": "boolean_literal [16730,16734]",
      "dest": "boolean_literal [16860,16864]"
    },
    {
      "src": "identifier: _balances [25732,25741]",
      "dest": "identifier: _balances [25650,25659]"
    },
    {
      "src": "primitive_type [27674,27678]",
      "dest": "primitive_type [27522,27526]"
    },
    {
      "src": "interface_declaration [28975,29205]",
      "dest": "interface_declaration [11444,11674]"
    },
    {
      "src": "address: address [8374,8381]",
      "dest": "address: address [8182,8189]"
    },
    {
      "src": "call_argument [13408,13415]",
      "dest": "call_argument [13426,13433]"
    },
    {
      "src": "block_statement [16780,16817]",
      "dest": "block_statement [16910,16947]"
    },
    {
      "src": "]: ] [24570,24571]",
      "dest": "]: ] [24488,24489]"
    },
    {
      "src": "(: ( [12333,12334]",
      "dest": "(: ( [12351,12352]"
    },
    {
      "src": "type_cast_expression [33478,33488]",
      "dest": "type_cast_expression [32765,32775]"
    },
    {
      "src": "call_expression [15089,15141]",
      "dest": "call_expression [15107,15159]"
    },
    {
      "src": "==: == [13004,13006]",
      "dest": "==: == [13022,13024]"
    },
    {
      "src": ",: , [33418,33419]",
      "dest": ",: , [32705,32706]"
    },
    {
      "src": ".: . [12378,12379]",
      "dest": ".: . [12396,12397]"
    },
    {
      "src": "call_argument [33082,33086]",
      "dest": "call_argument [32369,32373]"
    },
    {
      "src": "binary_expression [33458,33516]",
      "dest": "binary_expression [32745,32803]"
    },
    {
      "src": "string [25022,25055]",
      "dest": "string [24940,24973]"
    },
    {
      "src": "uint256: uint256 [953,960]",
      "dest": "uint256: uint256 [872,879]"
    },
    {
      "src": "=: = [29555,29556]",
      "dest": "=: = [28842,28843]"
    },
    {
      "src": "visibility [27679,27686]",
      "dest": "visibility [27527,27534]"
    },
    {
      "src": "identifier: value [13234,13239]",
      "dest": "identifier: value [13252,13257]"
    },
    {
      "src": ",: , [26672,26673]",
      "dest": ",: , [26590,26591]"
    },
    {
      "src": "type_cast_expression [33682,33699]",
      "dest": "type_cast_expression [32969,32986]"
    },
    {
      "src": "identifier: add [25159,25162]",
      "dest": "identifier: add [25077,25080]"
    },
    {
      "src": "bytes: bytes [15026,15031]",
      "dest": "bytes: bytes [15044,15049]"
    },
    {
      "src": "\": \" [26582,26583]",
      "dest": "\": \" [26500,26501]"
    },
    {
      "src": "call_expression [22804,22887]",
      "dest": "call_expression [22722,22805]"
    },
    {
      "src": "identifier: to [12276,12278]",
      "dest": "identifier: to [12294,12296]"
    },
    {
      "src": "call_argument [31875,31896]",
      "dest": "call_argument [31162,31183]"
    },
    {
      "src": "variable_declaration [17305,17317]",
      "dest": "variable_declaration [17435,17447]"
    },
    {
      "src": "function: function [18544,18552]",
      "dest": "function: function [18576,18584]"
    },
    {
      "src": "pragma: pragma [81,87]",
      "dest": "pragma: pragma [0,6]"
    },
    {
      "src": "parameter [5377,5386]",
      "dest": "parameter [5296,5305]"
    },
    {
      "src": "call_argument [13201,13223]",
      "dest": "call_argument [13219,13241]"
    },
    {
      "src": "\": \" [29568,29569]",
      "dest": "\": \" [28855,28856]"
    },
    {
      "src": "type_name [12216,12223]",
      "dest": "type_name [12234,12241]"
    },
    {
      "src": "}: } [27106,27107]",
      "dest": "}: } [27024,27025]"
    },
    {
      "src": "primitive_type [9583,9590]",
      "dest": "primitive_type [9285,9292]"
    },
    {
      "src": "function_body [20943,21026]",
      "dest": "function_body [20861,20944]"
    },
    {
      "src": "identifier: require [24261,24268]",
      "dest": "identifier: require [24179,24186]"
    },
    {
      "src": "function_body [28159,28198]",
      "dest": "function_body [28007,28046]"
    },
    {
      "src": "): ) [1429,1430]",
      "dest": "): ) [1348,1349]"
    },
    {
      "src": "visibility [10106,10114]",
      "dest": "visibility [9808,9816]"
    },
    {
      "src": "type_name [2015,2022]",
      "dest": "type_name [1934,1941]"
    },
    {
      "src": "call_argument [33682,33699]",
      "dest": "call_argument [32969,32986]"
    },
    {
      "src": "identifier: c [1112,1113]",
      "dest": "identifier: c [1031,1032]"
    },
    {
      "src": "parameter [5949,5956]",
      "dest": "parameter [5757,5764]"
    },
    {
      "src": "function_definition [12232,12408]",
      "dest": "function_definition [12250,12426]"
    },
    {
      "src": "identifier: isContract [31216,31226]",
      "dest": "identifier: isContract [30503,30513]"
    },
    {
      "src": "type_name [13581,13587]",
      "dest": "type_name [13599,13605]"
    },
    {
      "src": "function_body [25620,25911]",
      "dest": "function_body [25538,25829]"
    },
    {
      "src": "public: public [22067,22073]",
      "dest": "public: public [21985,21991]"
    },
    {
      "src": "call_argument [25207,25214]",
      "dest": "call_argument [25125,25132]"
    },
    {
      "src": "primitive_type [24363,24370]",
      "dest": "primitive_type [24281,24288]"
    },
    {
      "src": "is: is [29315,29317]",
      "dest": "is: is [28602,28604]"
    },
    {
      "src": "call_argument [22118,22127]",
      "dest": "call_argument [22036,22045]"
    },
    {
      "src": "): ) [20975,20976]",
      "dest": "): ) [20893,20894]"
    },
    {
      "src": "return_type_definition [7515,7529]",
      "dest": "return_type_definition [7323,7337]"
    },
    {
      "src": "identifier: b [2031,2032]",
      "dest": "identifier: b [1950,1951]"
    },
    {
      "src": "string_literal [27757,27791]",
      "dest": "string_literal [27605,27639]"
    },
    {
      "src": "call_expression [13802,13871]",
      "dest": "call_expression [13820,13889]"
    },
    {
      "src": ",: , [23543,23544]",
      "dest": ",: , [23461,23462]"
    },
    {
      "src": "visibility [20414,20420]",
      "dest": "visibility [20332,20338]"
    },
    {
      "src": "(: ( [28420,28421]",
      "dest": "(: ( [28268,28269]"
    },
    {
      "src": "bool: bool [28672,28676]",
      "dest": "bool: bool [28520,28524]"
    },
    {
      "src": "=: = [16728,16729]",
      "dest": "=: = [16858,16859]"
    },
    {
      "src": "type_name [2336,2343]",
      "dest": "type_name [2255,2262]"
    },
    {
      "src": "call_expression [23566,23578]",
      "dest": "call_expression [23484,23496]"
    },
    {
      "src": "comment: // solhint-disable-next-line max-line-length [14813,14857]",
      "dest": "comment: // solhint-disable-next-line max-line-length [14831,14875]"
    },
    {
      "src": "identifier: token [15061,15066]",
      "dest": "identifier: token [15079,15084]"
    },
    {
      "src": "identifier: spender [8413,8420]",
      "dest": "identifier: spender [8221,8228]"
    },
    {
      "src": "(: ( [23504,23505]",
      "dest": "(: ( [23422,23423]"
    },
    {
      "src": "parameter [26911,26925]",
      "dest": "parameter [26829,26843]"
    },
    {
      "src": "identifier: add [949,952]",
      "dest": "identifier: add [868,871]"
    },
    {
      "src": "identifier: a [2710,2711]",
      "dest": "identifier: a [2629,2630]"
    },
    {
      "src": "call_expression [33590,33649]",
      "dest": "call_expression [32877,32936]"
    },
    {
      "src": "false [16804,16809]",
      "dest": "false [16934,16939]"
    },
    {
      "src": "call_expression [13776,13872]",
      "dest": "call_expression [13794,13890]"
    },
    {
      "src": ",: , [33055,33056]",
      "dest": ",: , [32342,32343]"
    },
    {
      "src": "for: for [20144,20147]",
      "dest": "for: for [20062,20065]"
    },
    {
      "src": "unary_expression [16639,16652]",
      "dest": "unary_expression [16769,16782]"
    },
    {
      "src": "identifier: _msgSender [22848,22858]",
      "dest": "identifier: _msgSender [22766,22776]"
    },
    {
      "src": "comment: // benefit is lost if 'b' is also tested. [2479,2520]",
      "dest": "comment: // benefit is lost if 'b' is also tested. [2398,2439]"
    },
    {
      "src": "primitive_type [18587,18592]",
      "dest": "primitive_type [18619,18624]"
    },
    {
      "src": "\": \" [25763,25764]",
      "dest": "\": \" [25681,25682]"
    },
    {
      "src": "identifier: digest [32830,32836]",
      "dest": "identifier: digest [32117,32123]"
    },
    {
      "src": "expression_statement [12315,12401]",
      "dest": "expression_statement [12333,12419]"
    },
    {
      "src": "(: ( [21472,21473]",
      "dest": "(: ( [21390,21391]"
    },
    {
      "src": "): ) [10104,10105]",
      "dest": "): ) [9806,9807]"
    },
    {
      "src": "parameter [32454,32475]",
      "dest": "parameter [31741,31762]"
    },
    {
      "src": "): ) [33707,33708]",
      "dest": "): ) [32994,32995]"
    },
    {
      "src": "function_body [14340,15385]",
      "dest": "function_body [14358,15403]"
    },
    {
      "src": ".: . [12546,12547]",
      "dest": ".: . [12564,12565]"
    },
    {
      "src": "(: ( [9801,9802]",
      "dest": "(: ( [9503,9504]"
    },
    {
      "src": "function: function [6343,6351]",
      "dest": "function: function [6151,6159]"
    },
    {
      "src": "}: } [22916,22917]",
      "dest": "}: } [22834,22835]"
    },
    {
      "src": "call_expression [31324,31344]",
      "dest": "call_expression [30611,30631]"
    },
    {
      "src": "variable_declaration [9583,9602]",
      "dest": "variable_declaration [9285,9304]"
    },
    {
      "src": ".: . [33729,33730]",
      "dest": ".: . [33016,33017]"
    },
    {
      "src": "function: function [30985,30993]",
      "dest": "function: function [30272,30280]"
    },
    {
      "src": "state_mutability [21147,21151]",
      "dest": "state_mutability [21065,21069]"
    },
    {
      "src": "type_name [1420,1427]",
      "dest": "type_name [1339,1346]"
    },
    {
      "src": "yul_evm_builtin [31602,31609]",
      "dest": "yul_evm_builtin [30889,30896]"
    },
    {
      "src": "identifier: decode [15293,15299]",
      "dest": "identifier: decode [15311,15317]"
    },
    {
      "src": "identifier: c [1026,1027]",
      "dest": "identifier: c [945,946]"
    },
    {
      "src": ",: , [29133,29134]",
      "dest": ",: , [11602,11603]"
    },
    {
      "src": "string [32772,32810]",
      "dest": "string [32059,32097]"
    },
    {
      "src": "]: ] [27045,27046]",
      "dest": "]: ] [26963,26964]"
    },
    {
      "src": "function_body [12704,13249]",
      "dest": "function_body [12722,13267]"
    },
    {
      "src": "parameter [6738,6753]",
      "dest": "parameter [6546,6561]"
    },
    {
      "src": "call_argument [27051,27057]",
      "dest": "call_argument [26969,26975]"
    },
    {
      "src": "variable_declaration_statement [11397,11449]",
      "dest": "variable_declaration_statement [11099,11151]"
    },
    {
      "src": "}: } [8439,8440]",
      "dest": "}: } [8247,8248]"
    },
    {
      "src": "parenthesized_expression [15312,15318]",
      "dest": "parenthesized_expression [15330,15336]"
    },
    {
      "src": "function_body [32629,33916]",
      "dest": "function_body [31916,33203]"
    },
    {
      "src": "address: address [33759,33766]",
      "dest": "address: address [33046,33053]"
    },
    {
      "src": "primitive_type [5949,5956]",
      "dest": "primitive_type [5757,5764]"
    },
    {
      "src": ",: , [33640,33641]",
      "dest": ",: , [32927,32928]"
    },
    {
      "src": "parenthesized_expression [13013,13059]",
      "dest": "parenthesized_expression [13031,13077]"
    },
    {
      "src": "parameter [964,973]",
      "dest": "parameter [883,892]"
    },
    {
      "src": "identifier: TRANSFER_TOKENS_TYPEHASH [30196,30220]",
      "dest": "identifier: TRANSFER_TOKENS_TYPEHASH [29483,29507]"
    },
    {
      "src": "(: ( [25100,25101]",
      "dest": "(: ( [25018,25019]"
    },
    {
      "src": "identifier: token [13014,13019]",
      "dest": "identifier: token [13032,13037]"
    },
    {
      "src": "bytes32: bytes32 [9556,9563]",
      "dest": "bytes32: bytes32 [9258,9265]"
    },
    {
      "src": "identifier: b [2344,2345]",
      "dest": "identifier: b [2263,2264]"
    },
    {
      "src": "member_expression [31673,31683]",
      "dest": "member_expression [30960,30970]"
    },
    {
      "src": "parameter [10089,10104]",
      "dest": "parameter [9791,9806]"
    },
    {
      "src": "type_name [6065,6072]",
      "dest": "type_name [5873,5880]"
    },
    {
      "src": "visibility [24971,24979]",
      "dest": "visibility [24889,24897]"
    },
    {
      "src": "identifier: chainId [31494,31501]",
      "dest": "identifier: chainId [30781,30788]"
    },
    {
      "src": "primitive_type [32486,32493]",
      "dest": "primitive_type [31773,31780]"
    },
    {
      "src": "call_argument [32772,32810]",
      "dest": "call_argument [32059,32097]"
    },
    {
      "src": "identifier: errorMessage [1918,1930]",
      "dest": "identifier: errorMessage [1837,1849]"
    },
    {
      "src": ".: . [11425,11426]",
      "dest": ".: . [11127,11128]"
    },
    {
      "src": "return_statement [4793,4838]",
      "dest": "return_statement [4712,4757]"
    },
    {
      "src": "contract_body [8639,11548]",
      "dest": "contract_body [8341,11250]"
    },
    {
      "src": "member_expression [18753,18761]",
      "dest": "member_expression [18785,18793]"
    },
    {
      "src": "(: ( [22812,22813]",
      "dest": "(: ( [22730,22731]"
    },
    {
      "src": "binary_expression [13014,13058]",
      "dest": "binary_expression [13032,13076]"
    },
    {
      "src": "identifier: c [2678,2679]",
      "dest": "identifier: c [2597,2598]"
    },
    {
      "src": "parameter [1420,1429]",
      "dest": "parameter [1339,1348]"
    },
    {
      "src": "type_name [24955,24962]",
      "dest": "type_name [24873,24880]"
    },
    {
      "src": "identifier: this [13694,13698]",
      "dest": "identifier: this [13712,13716]"
    },
    {
      "src": "{: { [11245,11246]",
      "dest": "{: { [10947,10948]"
    },
    {
      "src": "type_name [17497,17508]",
      "dest": "type_name [17627,17638]"
    },
    {
      "src": "visibility [30343,30349]",
      "dest": "visibility [29630,29636]"
    },
    {
      "src": "function: function [22707,22715]",
      "dest": "function: function [22625,22633]"
    },
    {
      "src": "=: = [16802,16803]",
      "dest": "=: = [16932,16933]"
    },
    {
      "src": "inheritance_specifier [20091,20104]",
      "dest": "inheritance_specifier [20009,20022]"
    },
    {
      "src": "uint256: uint256 [2325,2332]",
      "dest": "uint256: uint256 [2244,2251]"
    },
    {
      "src": "call_argument [4804,4805]",
      "dest": "call_argument [4723,4724]"
    },
    {
      "src": ",: , [13593,13594]",
      "dest": ",: , [13611,13612]"
    },
    {
      "src": ".: . [24571,24572]",
      "dest": ".: . [24489,24490]"
    },
    {
      "src": "(: ( [24349,24350]",
      "dest": "(: ( [24267,24268]"
    },
    {
      "src": "(: ( [15072,15073]",
      "dest": "(: ( [15090,15091]"
    },
    {
      "src": "uint256: uint256 [3937,3944]",
      "dest": "uint256: uint256 [3856,3863]"
    },
    {
      "src": "identifier: keccak256 [32839,32848]",
      "dest": "identifier: keccak256 [32126,32135]"
    },
    {
      "src": "identifier: _wormholeAddress [31227,31243]",
      "dest": "identifier: _wormholeAddress [30514,30530]"
    },
    {
      "src": "true: true [16730,16734]",
      "dest": "true: true [16860,16864]"
    },
    {
      "src": "uint16: uint16 [32454,32460]",
      "dest": "uint16: uint16 [31741,31747]"
    },
    {
      "src": "function_definition [20868,21026]",
      "dest": "function_definition [20786,20944]"
    },
    {
      "src": "parameter [26384,26399]",
      "dest": "parameter [26302,26317]"
    },
    {
      "src": "identifier: recoveredAddress [33380,33396]",
      "dest": "identifier: recoveredAddress [32667,32683]"
    },
    {
      "src": "]: ] [27125,27126]",
      "dest": "]: ] [27043,27044]"
    },
    {
      "src": ",: , [2334,2335]",
      "dest": ",: , [2253,2254]"
    },
    {
      "src": "}: } [2782,2783]",
      "dest": "}: } [2701,2702]"
    },
    {
      "src": "function_definition [20391,20482]",
      "dest": "function_definition [20309,20400]"
    },
    {
      "src": "event_definition [8359,8437]",
      "dest": "event_definition [8167,8245]"
    },
    {
      "src": "primitive_type [15012,15016]",
      "dest": "primitive_type [15030,15034]"
    },
    {
      "src": "identifier: account [6073,6080]",
      "dest": "identifier: account [5881,5888]"
    },
    {
      "src": "type_name [24206,24213]",
      "dest": "type_name [24124,24131]"
    },
    {
      "src": "(: ( [24370,24371]",
      "dest": "(: ( [24288,24289]"
    },
    {
      "src": "call_argument [32898,32908]",
      "dest": "call_argument [32185,32195]"
    },
    {
      "src": "identifier: Wormhole [30451,30459]",
      "dest": "identifier: Wormhole [29738,29746]"
    },
    {
      "src": "): ) [14888,14889]",
      "dest": "): ) [14906,14907]"
    },
    {
      "src": "parameter [1454,1461]",
      "dest": "parameter [1373,1380]"
    },
    {
      "src": "returns: returns [7930,7937]",
      "dest": "returns: returns [7738,7745]"
    },
    {
      "src": "\": \" [31891,31892]",
      "dest": "\": \" [31178,31179]"
    },
    {
      "src": "type_name [22016,22023]",
      "dest": "type_name [21934,21941]"
    },
    {
      "src": "type_name [13647,13654]",
      "dest": "type_name [13665,13672]"
    },
    {
      "src": "return_type_definition [6405,6419]",
      "dest": "return_type_definition [6213,6227]"
    },
    {
      "src": "identifier: recipient [11209,11218]",
      "dest": "identifier: recipient [10911,10920]"
    },
    {
      "src": "visibility [31063,31069]",
      "dest": "visibility [30350,30356]"
    },
    {
      "src": "call_argument [25163,25169]",
      "dest": "call_argument [25081,25087]"
    },
    {
      "src": "member_expression [13464,13486]",
      "dest": "member_expression [13482,13504]"
    },
    {
      "src": "identifier: IERC20 [13288,13294]",
      "dest": "identifier: IERC20 [13306,13312]"
    },
    {
      "src": "visibility [28423,28431]",
      "dest": "visibility [28271,28279]"
    },
    {
      "src": "(: ( [12565,12566]",
      "dest": "(: ( [12583,12584]"
    },
    {
      "src": "}: } [26688,26689]",
      "dest": "}: } [26606,26607]"
    },
    {
      "src": "{: { [9300,9301]",
      "dest": "{: { [9002,9003]"
    },
    {
      "src": "primitive_type [20937,20941]",
      "dest": "primitive_type [20855,20859]"
    },
    {
      "src": "==: == [33509,33511]",
      "dest": "==: == [32796,32798]"
    },
    {
      "src": "public: public [20581,20587]",
      "dest": "public: public [20499,20505]"
    },
    {
      "src": "function_body [16964,17419]",
      "dest": "function_body [17094,17549]"
    },
    {
      "src": "type_name [17305,17312]",
      "dest": "type_name [17435,17442]"
    },
    {
      "src": "call_expression [25084,25108]",
      "dest": "call_expression [25002,25026]"
    },
    {
      "src": "primitive_type [5450,5457]",
      "dest": "primitive_type [5369,5376]"
    },
    {
      "src": "call_expression [26980,27099]",
      "dest": "call_expression [26898,27017]"
    },
    {
      "src": "(: ( [14298,14299]",
      "dest": "(: ( [14316,14317]"
    },
    {
      "src": ",: , [5484,5485]",
      "dest": ",: , [5403,5404]"
    },
    {
      "src": "): ) [31343,31344]",
      "dest": "): ) [30630,30631]"
    },
    {
      "src": "uint256: uint256 [13354,13361]",
      "dest": "uint256: uint256 [13372,13379]"
    },
    {
      "src": "true: true [22905,22909]",
      "dest": "true: true [22823,22827]"
    },
    {
      "src": "identifier: owner [8390,8395]",
      "dest": "identifier: owner [8198,8203]"
    },
    {
      "src": "primitive_type [32454,32460]",
      "dest": "primitive_type [31741,31747]"
    },
    {
      "src": "\": \" [25798,25799]",
      "dest": "\": \" [25716,25717]"
    },
    {
      "src": "call_argument [24468,24474]",
      "dest": "call_argument [24386,24392]"
    },
    {
      "src": "): ) [33313,33314]",
      "dest": "): ) [32600,32601]"
    },
    {
      "src": "type_cast_expression [25010,25020]",
      "dest": "type_cast_expression [24928,24938]"
    },
    {
      "src": "identifier: _burn [25572,25577]",
      "dest": "identifier: _burn [25490,25495]"
    },
    {
      "src": "call_expression [26947,26969]",
      "dest": "call_expression [26865,26887]"
    },
    {
      "src": "internal: internal [28649,28657]",
      "dest": "internal: internal [28497,28505]"
    },
    {
      "src": "comment: // extcodesize checks the size of the code stored in an address, and [16971,17039]",
      "dest": "comment: // extcodesize checks the size of the code stored in an address, and [17101,17169]"
    },
    {
      "src": "string [14904,14937]",
      "dest": "string [14922,14955]"
    },
    {
      "src": "(: ( [21461,21462]",
      "dest": "(: ( [21379,21380]"
    },
    {
      "src": "uint256: uint256 [32429,32436]",
      "dest": "uint256: uint256 [31716,31723]"
    },
    {
      "src": "call_argument [33458,33516]",
      "dest": "call_argument [32745,32803]"
    },
    {
      "src": "function_body [3318,3383]",
      "dest": "function_body [3237,3302]"
    },
    {
      "src": "(: ( [31884,31885]",
      "dest": "(: ( [31171,31172]"
    },
    {
      "src": "identifier: account [25875,25882]",
      "dest": "identifier: account [25793,25800]"
    },
    {
      "src": "comment: // solium-disable security/no-inline-assembly [31512,31557]",
      "dest": "comment: // solium-disable security/no-inline-assembly [30799,30844]"
    },
    {
      "src": "): ) [32620,32621]",
      "dest": "): ) [31907,31908]"
    },
    {
      "src": "): ) [17390,17391]",
      "dest": "): ) [17520,17521]"
    },
    {
      "src": "binary_expression [4094,4099]",
      "dest": "binary_expression [4013,4018]"
    },
    {
      "src": "binary_expression [25639,25660]",
      "dest": "binary_expression [25557,25578]"
    },
    {
      "src": "): ) [3284,3285]",
      "dest": "): ) [3203,3204]"
    },
    {
      "src": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2530,2601]",
      "dest": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2449,2520]"
    },
    {
      "src": "primitive_type [12456,12463]",
      "dest": "primitive_type [12474,12481]"
    },
    {
      "src": "call_argument [24576,24582]",
      "dest": "call_argument [24494,24500]"
    },
    {
      "src": "call_argument [25662,25697]",
      "dest": "call_argument [25580,25615]"
    },
    {
      "src": "update_expression [32655,32669]",
      "dest": "update_expression [31942,31956]"
    },
    {
      "src": "identifier: isConstructor [16920,16933]",
      "dest": "identifier: isConstructor [17050,17063]"
    },
    {
      "src": "yul_function_call [17374,17391]",
      "dest": "yul_function_call [17504,17521]"
    },
    {
      "src": "): ) [31895,31896]",
      "dest": "): ) [31182,31183]"
    },
    {
      "src": "identifier: owner [26658,26663]",
      "dest": "identifier: owner [26576,26581]"
    },
    {
      "src": "true [16730,16734]",
      "dest": "true [16860,16864]"
    },
    {
      "src": "identifier: initializing [16789,16801]",
      "dest": "identifier: initializing [16919,16931]"
    },
    {
      "src": "identifier: amount [26962,26968]",
      "dest": "identifier: amount [26880,26886]"
    },
    {
      "src": "parameter [29116,29133]",
      "dest": "parameter [11585,11602]"
    },
    {
      "src": "identifier: approve [13493,13500]",
      "dest": "identifier: approve [13511,13518]"
    },
    {
      "src": "parameter [29035,29048]",
      "dest": "parameter [11504,11517]"
    },
    {
      "src": "state_variable_declaration [30316,30357]",
      "dest": "state_variable_declaration [29603,29644]"
    },
    {
      "src": "primitive_type [12280,12287]",
      "dest": "primitive_type [12298,12305]"
    },
    {
      "src": "memory: memory [14319,14325]",
      "dest": "memory: memory [14337,14343]"
    },
    {
      "src": "): ) [31953,31954]",
      "dest": "): ) [31240,31241]"
    },
    {
      "src": "identifier: Transfer [8128,8136]",
      "dest": "identifier: Transfer [7936,7944]"
    },
    {
      "src": "primitive_type [32605,32612]",
      "dest": "primitive_type [31892,31899]"
    },
    {
      "src": "type_name [20435,20442]",
      "dest": "type_name [20353,20360]"
    },
    {
      "src": "view: view [5935,5939]",
      "dest": "view: view [5743,5747]"
    },
    {
      "src": "]: ] [24547,24548]",
      "dest": "]: ] [24465,24466]"
    },
    {
      "src": "number_literal: 0 [13007,13008]",
      "dest": "number_literal: 0 [13025,13026]"
    },
    {
      "src": ",: , [13406,13407]",
      "dest": ",: , [13424,13425]"
    },
    {
      "src": "(: ( [32971,32972]",
      "dest": "(: ( [32258,32259]"
    },
    {
      "src": "): ) [33332,33333]",
      "dest": "): ) [32619,32620]"
    },
    {
      "src": "call_argument [33796,33802]",
      "dest": "call_argument [33083,33089]"
    },
    {
      "src": "uint256: uint256 [4125,4132]",
      "dest": "uint256: uint256 [4044,4051]"
    },
    {
      "src": "primitive_type [30668,30675]",
      "dest": "primitive_type [29955,29962]"
    },
    {
      "src": "visibility [27716,27723]",
      "dest": "visibility [27564,27571]"
    },
    {
      "src": "identifier: spender [12671,12678]",
      "dest": "identifier: spender [12689,12696]"
    },
    {
      "src": "}: } [18535,18536]",
      "dest": "}: } [18567,18568]"
    },
    {
      "src": "identifier: wormhole [33690,33698]",
      "dest": "identifier: wormhole [32977,32985]"
    },
    {
      "src": ".: . [25096,25097]",
      "dest": ".: . [25014,25015]"
    },
    {
      "src": "]: ] [17507,17508]",
      "dest": "]: ] [17637,17638]"
    },
    {
      "src": "identifier: require [15281,15288]",
      "dest": "identifier: require [15299,15306]"
    },
    {
      "src": "primitive_type [27115,27122]",
      "dest": "primitive_type [27033,27040]"
    },
    {
      "src": "call_argument [13511,13518]",
      "dest": "call_argument [13529,13536]"
    },
    {
      "src": "identifier: allowance [13676,13685]",
      "dest": "identifier: allowance [13694,13703]"
    },
    {
      "src": "identifier: a [2615,2616]",
      "dest": "identifier: a [2534,2535]"
    },
    {
      "src": "variable_declaration_statement [16617,16653]",
      "dest": "variable_declaration_statement [16747,16783]"
    },
    {
      "src": "call_expression [13670,13765]",
      "dest": "call_expression [13688,13783]"
    },
    {
      "src": "function: function [12628,12636]",
      "dest": "function: function [12646,12654]"
    },
    {
      "src": ",: , [33625,33626]",
      "dest": ",: , [32912,32913]"
    },
    {
      "src": "indexed: indexed [8405,8412]",
      "dest": "indexed: indexed [8213,8220]"
    },
    {
      "src": "call_argument [33642,33648]",
      "dest": "call_argument [32929,32935]"
    },
    {
      "src": "number_literal: 0 [13057,13058]",
      "dest": "number_literal: 0 [13075,13076]"
    },
    {
      "src": "string [24375,24412]",
      "dest": "string [24293,24330]"
    },
    {
      "src": "(: ( [14874,14875]",
      "dest": "(: ( [14892,14893]"
    },
    {
      "src": "return: return [18746,18752]",
      "dest": "return: return [18778,18784]"
    },
    {
      "src": "mapping: mapping [20164,20171]",
      "dest": "mapping: mapping [20082,20089]"
    },
    {
      "src": ",: , [33877,33878]",
      "dest": ",: , [33164,33165]"
    },
    {
      "src": "): ) [13426,13427]",
      "dest": "): ) [13444,13445]"
    },
    {
      "src": "type_name [30451,30459]",
      "dest": "type_name [29738,29746]"
    },
    {
      "src": "call_expression [21462,21474]",
      "dest": "call_expression [21380,21392]"
    },
    {
      "src": "): ) [26968,26969]",
      "dest": "): ) [26886,26887]"
    },
    {
      "src": "parameter [31028,31052]",
      "dest": "parameter [30315,30339]"
    },
    {
      "src": "}: } [23680,23681]",
      "dest": "}: } [23598,23599]"
    },
    {
      "src": "(: ( [26988,26989]",
      "dest": "(: ( [26906,26907]"
    },
    {
      "src": ",: , [32443,32444]",
      "dest": ",: , [31730,31731]"
    },
    {
      "src": ",: , [2716,2717]",
      "dest": ",: , [2635,2636]"
    },
    {
      "src": "identifier: token [12334,12339]",
      "dest": "identifier: token [12352,12357]"
    },
    {
      "src": "address: address [6361,6368]",
      "dest": "address: address [6169,6176]"
    },
    {
      "src": "call_expression [11459,11537]",
      "dest": "call_expression [11161,11239]"
    },
    {
      "src": "identifier: _tokenAddress [31330,31343]",
      "dest": "identifier: _tokenAddress [30617,30630]"
    },
    {
      "src": "): ) [4780,4781]",
      "dest": "): ) [4699,4700]"
    },
    {
      "src": "identifier: add [24572,24575]",
      "dest": "identifier: add [24490,24493]"
    },
    {
      "src": ",: , [25660,25661]",
      "dest": ",: , [25578,25579]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2791,3245]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2710,3164]"
    },
    {
      "src": "\": \" [29611,29612]",
      "dest": "\": \" [28898,28899]"
    },
    {
      "src": "call_argument [13457,13462]",
      "dest": "call_argument [13475,13480]"
    },
    {
      "src": "contract_body [702,5533]",
      "dest": "contract_body [621,5452]"
    },
    {
      "src": "array_access [24551,24571]",
      "dest": "array_access [24469,24489]"
    },
    {
      "src": "(: ( [20974,20975]",
      "dest": "(: ( [20892,20893]"
    },
    {
      "src": "comment: // code below, in constructor, and in permit function adapted from the audited reference Uniswap implementation: [29766,29878]",
      "dest": "comment: // code below, in constructor, and in permit function adapted from the audited reference Uniswap implementation: [29053,29165]"
    },
    {
      "src": "=>: => [30332,30334]",
      "dest": "=>: => [29619,29621]"
    },
    {
      "src": "primitive_type [13595,13602]",
      "dest": "primitive_type [13613,13620]"
    },
    {
      "src": "identifier: nonces [32655,32661]",
      "dest": "identifier: nonces [31942,31948]"
    },
    {
      "src": "}: } [13248,13249]",
      "dest": "}: } [13266,13267]"
    },
    {
      "src": "address: address [9254,9261]",
      "dest": "address: address [8956,8963]"
    },
    {
      "src": "type_name [3309,3316]",
      "dest": "type_name [3228,3235]"
    },
    {
      "src": "call_expression [12315,12400]",
      "dest": "call_expression [12333,12418]"
    },
    {
      "src": "type_cast_expression [24363,24373]",
      "dest": "type_cast_expression [24281,24291]"
    },
    {
      "src": "return_type_definition [9285,9299]",
      "dest": "return_type_definition [8987,9001]"
    },
    {
      "src": "): ) [31430,31431]",
      "dest": "): ) [30717,30718]"
    },
    {
      "src": "type_name [2370,2377]",
      "dest": "type_name [2289,2296]"
    },
    {
      "src": "identifier: spender [21476,21483]",
      "dest": "identifier: spender [21394,21401]"
    },
    {
      "src": ",: , [23552,23553]",
      "dest": ",: , [23470,23471]"
    },
    {
      "src": "identifier: sender [22110,22116]",
      "dest": "identifier: sender [22028,22034]"
    },
    {
      "src": "return_type_definition [18578,18600]",
      "dest": "return_type_definition [18610,18632]"
    },
    {
      "src": "): ) [33780,33781]",
      "dest": "): ) [33067,33068]"
    },
    {
      "src": "primitive_type [30324,30331]",
      "dest": "primitive_type [29611,29618]"
    },
    {
      "src": "string_literal [31832,31854]",
      "dest": "string_literal [31119,31141]"
    },
    {
      "src": "yul_assignment [17368,17391]",
      "dest": "yul_assignment [17498,17521]"
    },
    {
      "src": "member_expression [11416,11436]",
      "dest": "member_expression [11118,11138]"
    },
    {
      "src": "state_variable_declaration [20164,20211]",
      "dest": "state_variable_declaration [20082,20129]"
    },
    {
      "src": "call_argument [3340,3341]",
      "dest": "call_argument [3259,3260]"
    },
    {
      "src": "string_literal [16559,16607]",
      "dest": "string_literal [16689,16737]"
    },
    {
      "src": "identifier: owner [21116,21121]",
      "dest": "identifier: owner [21034,21039]"
    },
    {
      "src": "(: ( [3925,3926]",
      "dest": "(: ( [3844,3845]"
    },
    {
      "src": "(: ( [1408,1409]",
      "dest": "(: ( [1327,1328]"
    },
    {
      "src": "address: address [25195,25202]",
      "dest": "address: address [25113,25120]"
    },
    {
      "src": "): ) [27098,27099]",
      "dest": "): ) [27016,27017]"
    },
    {
      "src": "binary_expression [33492,33516]",
      "dest": "binary_expression [32779,32803]"
    },
    {
      "src": "user_defined_type [27653,27666]",
      "dest": "user_defined_type [27501,27514]"
    },
    {
      "src": "): ) [18562,18563]",
      "dest": "): ) [18594,18595]"
    },
    {
      "src": ",: , [33831,33832]",
      "dest": ",: , [33118,33119]"
    },
    {
      "src": "(: ( [26893,26894]",
      "dest": "(: ( [26811,26812]"
    },
    {
      "src": "identifier: c [2774,2775]",
      "dest": "identifier: c [2693,2694]"
    },
    {
      "src": "): ) [31391,31392]",
      "dest": "): ) [30678,30679]"
    },
    {
      "src": "state_mutability [9280,9284]",
      "dest": "state_mutability [8982,8986]"
    },
    {
      "src": "call_argument [15300,15310]",
      "dest": "call_argument [15318,15328]"
    },
    {
      "src": "call_argument [25843,25849]",
      "dest": "call_argument [25761,25767]"
    },
    {
      "src": "expression_statement [26597,26634]",
      "dest": "expression_statement [26515,26552]"
    },
    {
      "src": "(: ( [997,998]",
      "dest": "(: ( [916,917]"
    },
    {
      "src": "member_expression [13201,13223]",
      "dest": "member_expression [13219,13241]"
    },
    {
      "src": "function_definition [5364,5530]",
      "dest": "function_definition [5283,5449]"
    },
    {
      "src": "parameter [12649,12661]",
      "dest": "parameter [12667,12679]"
    },
    {
      "src": "string [32898,32908]",
      "dest": "string [32185,32195]"
    },
    {
      "src": "=: = [27755,27756]",
      "dest": "=: = [27603,27604]"
    },
    {
      "src": "comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [11674,12138]",
      "dest": "comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [11692,12156]"
    },
    {
      "src": "type_name [12254,12260]",
      "dest": "type_name [12272,12278]"
    },
    {
      "src": "identifier: IERC20 [12254,12260]",
      "dest": "identifier: IERC20 [12272,12278]"
    },
    {
      "src": "}: } [20654,20655]",
      "dest": "}: } [20572,20573]"
    },
    {
      "src": "string [31832,31854]",
      "dest": "string [31119,31141]"
    },
    {
      "src": "type_cast_expression [11264,11277]",
      "dest": "type_cast_expression [10966,10979]"
    },
    {
      "src": "primitive_type [31941,31948]",
      "dest": "primitive_type [31228,31235]"
    },
    {
      "src": "pure: pure [1941,1945]",
      "dest": "pure: pure [1860,1864]"
    },
    {
      "src": "address: address [13302,13309]",
      "dest": "address: address [13320,13327]"
    },
    {
      "src": "visibility [24241,24249]",
      "dest": "visibility [24159,24167]"
    },
    {
      "src": "-: - [2029,2030]",
      "dest": "-: - [1948,1949]"
    },
    {
      "src": "expression_statement [25631,25699]",
      "dest": "expression_statement [25549,25617]"
    },
    {
      "src": "function: function [14271,14279]",
      "dest": "function: function [14289,14297]"
    },
    {
      "src": "function: function [21994,22002]",
      "dest": "function: function [21912,21920]"
    },
    {
      "src": "call_argument [26998,27010]",
      "dest": "call_argument [26916,26928]"
    },
    {
      "src": "identifier: token [13295,13300]",
      "dest": "identifier: token [13313,13318]"
    },
    {
      "src": "): ) [4113,4114]",
      "dest": "): ) [4032,4033]"
    },
    {
      "src": "expression_statement [1975,2005]",
      "dest": "expression_statement [1894,1924]"
    },
    {
      "src": "returns: returns [4764,4771]",
      "dest": "returns: returns [4683,4690]"
    },
    {
      "src": "): ) [20941,20942]",
      "dest": "): ) [20859,20860]"
    },
    {
      "src": "identifier: token [12364,12369]",
      "dest": "identifier: token [12382,12387]"
    },
    {
      "src": "primitive_type [33682,33689]",
      "dest": "primitive_type [32969,32976]"
    },
    {
      "src": "call_expression [13464,13533]",
      "dest": "call_expression [13482,13551]"
    },
    {
      "src": "identifier: addedValue [22875,22885]",
      "dest": "identifier: addedValue [22793,22803]"
    },
    {
      "src": "address: address [13030,13037]",
      "dest": "address: address [13048,13055]"
    },
    {
      "src": "type_cast_expression [25195,25205]",
      "dest": "type_cast_expression [25113,25123]"
    },
    {
      "src": "member_expression [32863,32879]",
      "dest": "member_expression [32150,32166]"
    },
    {
      "src": "): ) [25697,25698]",
      "dest": "): ) [25615,25616]"
    },
    {
      "src": "{: { [28159,28160]",
      "dest": "{: { [28007,28008]"
    },
    {
      "src": "identifier: _msgSender [21462,21472]",
      "dest": "identifier: _msgSender [21380,21390]"
    },
    {
      "src": "(: ( [33744,33745]",
      "dest": "(: ( [33031,33032]"
    },
    {
      "src": "pure: pure [4759,4763]",
      "dest": "pure: pure [4678,4682]"
    },
    {
      "src": "(: ( [8136,8137]",
      "dest": "(: ( [7944,7945]"
    },
    {
      "src": "/: / [4139,4140]",
      "dest": "/: / [4058,4059]"
    },
    {
      "src": ",: , [24953,24954]",
      "dest": ",: , [24871,24872]"
    },
    {
      "src": "identifier: spender [23545,23552]",
      "dest": "identifier: spender [23463,23470]"
    },
    {
      "src": ">=: >= [32752,32754]",
      "dest": ">=: >= [32039,32041]"
    },
    {
      "src": "parameter [13595,13610]",
      "dest": "parameter [13613,13628]"
    },
    {
      "src": "{: { [4782,4783]",
      "dest": "{: { [4701,4702]"
    },
    {
      "src": "primitive_type [22032,22039]",
      "dest": "primitive_type [21950,21957]"
    },
    {
      "src": "identifier: safeDecreaseAllowance [13559,13580]",
      "dest": "identifier: safeDecreaseAllowance [13577,13598]"
    },
    {
      "src": ">=: >= [1056,1058]",
      "dest": ">=: >= [975,977]"
    },
    {
      "src": "]: ] [25136,25137]",
      "dest": "]: ] [25054,25055]"
    },
    {
      "src": "identifier: _totalSupply [20313,20325]",
      "dest": "identifier: _totalSupply [20231,20243]"
    },
    {
      "src": "identifier: abi [13178,13181]",
      "dest": "identifier: abi [13196,13199]"
    },
    {
      "src": "(: ( [952,953]",
      "dest": "(: ( [871,872]"
    },
    {
      "src": "identifier: _tokenAddress [31134,31147]",
      "dest": "identifier: _tokenAddress [30421,30434]"
    },
    {
      "src": "(: ( [30736,30737]",
      "dest": "(: ( [30023,30024]"
    },
    {
      "src": "identifier: recipientChain [33817,33831]",
      "dest": "identifier: recipientChain [33104,33118]"
    },
    {
      "src": "/: / [2708,2709]",
      "dest": "/: / [2627,2628]"
    },
    {
      "src": "parameter [24225,24239]",
      "dest": "parameter [24143,24157]"
    },
    {
      "src": "internal: internal [18364,18372]",
      "dest": "internal: internal [18396,18404]"
    },
    {
      "src": "identifier: InitializableV2 [29318,29333]",
      "dest": "identifier: InitializableV2 [28605,28620]"
    },
    {
      "src": ",: , [22176,22177]",
      "dest": ",: , [22094,22095]"
    },
    {
      "src": "call_expression [11416,11444]",
      "dest": "call_expression [11118,11146]"
    },
    {
      "src": "expression_statement [33436,33578]",
      "dest": "expression_statement [32723,32865]"
    },
    {
      "src": "variable_declaration_statement [31489,31502]",
      "dest": "variable_declaration_statement [30776,30789]"
    },
    {
      "src": "{: { [26936,26937]",
      "dest": "{: { [26854,26855]"
    },
    {
      "src": "): ) [31968,31969]",
      "dest": "): ) [31255,31256]"
    },
    {
      "src": "internal: internal [11236,11244]",
      "dest": "internal: internal [10938,10946]"
    },
    {
      "src": "contract: contract [16127,16135]",
      "dest": "contract: contract [16089,16097]"
    },
    {
      "src": "type_cast_expression [26535,26545]",
      "dest": "type_cast_expression [26453,26463]"
    },
    {
      "src": "interface: interface [28975,28984]",
      "dest": "interface: interface [11444,11453]"
    },
    {
      "src": "(: ( [32879,32880]",
      "dest": "(: ( [32166,32167]"
    },
    {
      "src": "user_defined_type [14299,14305]",
      "dest": "user_defined_type [14317,14323]"
    },
    {
      "src": "identifier: _balances [20201,20210]",
      "dest": "identifier: _balances [20119,20128]"
    },
    {
      "src": "returns: returns [22074,22081]",
      "dest": "returns: returns [21992,21999]"
    },
    {
      "src": "identifier: c [4249,4250]",
      "dest": "identifier: c [4168,4169]"
    },
    {
      "src": "function: function [6046,6054]",
      "dest": "function: function [5854,5862]"
    },
    {
      "src": "type_name [8397,8404]",
      "dest": "type_name [8205,8212]"
    },
    {
      "src": "function_definition [2312,2783]",
      "dest": "function_definition [2231,2702]"
    },
    {
      "src": "type_name [13354,13361]",
      "dest": "type_name [13372,13379]"
    },
    {
      "src": "\": \" [25662,25663]",
      "dest": "\": \" [25580,25581]"
    },
    {
      "src": ",: , [12678,12679]",
      "dest": ",: , [12696,12697]"
    },
    {
      "src": "identifier: a [3340,3341]",
      "dest": "identifier: a [3259,3260]"
    },
    {
      "src": "type_name [11220,11227]",
      "dest": "type_name [10922,10929]"
    },
    {
      "src": "parameter [14299,14311]",
      "dest": "parameter [14317,14329]"
    },
    {
      "src": "call_argument [31673,31969]",
      "dest": "call_argument [30960,31256]"
    },
    {
      "src": "public: public [22771,22777]",
      "dest": "public: public [22689,22695]"
    },
    {
      "src": "call_argument [1991,2003]",
      "dest": "call_argument [1910,1922]"
    },
    {
      "src": "uint256: uint256 [26911,26918]",
      "dest": "uint256: uint256 [26829,26836]"
    },
    {
      "src": ".: . [13675,13676]",
      "dest": ".: . [13693,13694]"
    },
    {
      "src": "call_argument [24616,24625]",
      "dest": "call_argument [24534,24543]"
    },
    {
      "src": "primitive_type [12268,12275]",
      "dest": "primitive_type [12286,12293]"
    },
    {
      "src": "binary_expression [11264,11295]",
      "dest": "binary_expression [10966,10997]"
    },
    {
      "src": "identifier: _msgSender [18447,18457]",
      "dest": "identifier: _msgSender [18479,18489]"
    },
    {
      "src": "function_definition [32372,33916]",
      "dest": "function_definition [31659,33203]"
    },
    {
      "src": "\": \" [31893,31894]",
      "dest": "\": \" [31180,31181]"
    },
    {
      "src": "primitive_type [29173,29179]",
      "dest": "primitive_type [11642,11648]"
    },
    {
      "src": "function_definition [12628,13249]",
      "dest": "function_definition [12646,13267]"
    },
    {
      "src": "]: ] [21214,21215]",
      "dest": "]: ] [21132,21133]"
    },
    {
      "src": "): ) [11328,11329]",
      "dest": "): ) [11030,11031]"
    },
    {
      "src": "identifier: amount [25101,25107]",
      "dest": "identifier: amount [25019,25025]"
    },
    {
      "src": "using: using [12165,12170]",
      "dest": "using: using [12183,12188]"
    },
    {
      "src": "): ) [13405,13406]",
      "dest": "): ) [13423,13424]"
    },
    {
      "src": "array_access [21188,21215]",
      "dest": "array_access [21106,21133]"
    },
    {
      "src": "if: if [2611,2613]",
      "dest": "if: if [2530,2532]"
    },
    {
      "src": "primitive_type [21404,21411]",
      "dest": "primitive_type [21322,21329]"
    },
    {
      "src": "(: ( [6360,6361]",
      "dest": "(: ( [6168,6169]"
    },
    {
      "src": "uint256: uint256 [2370,2377]",
      "dest": "uint256: uint256 [2289,2296]"
    },
    {
      "src": "identifier: encodePacked [32867,32879]",
      "dest": "identifier: encodePacked [32154,32166]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls [14951,15001]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls [14969,15019]"
    },
    {
      "src": "=: = [17318,17319]",
      "dest": "=: = [17448,17449]"
    },
    {
      "src": "type_cast_expression [15053,15067]",
      "dest": "type_cast_expression [15071,15085]"
    },
    {
      "src": "identifier: recipient [33846,33855]",
      "dest": "identifier: recipient [33133,33142]"
    },
    {
      "src": "): ) [8192,8193]",
      "dest": "): ) [8000,8001]"
    },
    {
      "src": "call_argument [13421,13426]",
      "dest": "call_argument [13439,13444]"
    },
    {
      "src": "string_literal [26466,26504]",
      "dest": "string_literal [26384,26422]"
    },
    {
      "src": "contract_body [16150,17530]",
      "dest": "contract_body [16112,17660]"
    },
    {
      "src": "true [22905,22909]",
      "dest": "true [22823,22827]"
    },
    {
      "src": ",: , [26464,26465]",
      "dest": ",: , [26382,26383]"
    },
    {
      "src": "address: address [21108,21115]",
      "dest": "address: address [21026,21033]"
    },
    {
      "src": "identifier: mod [5373,5376]",
      "dest": "identifier: mod [5292,5295]"
    },
    {
      "src": "identifier: safeApprove [12637,12648]",
      "dest": "identifier: safeApprove [12655,12666]"
    },
    {
      "src": "call_expression [26437,26505]",
      "dest": "call_expression [26355,26423]"
    },
    {
      "src": "call_expression [31403,31431]",
      "dest": "call_expression [30690,30718]"
    },
    {
      "src": "primitive_type [31885,31890]",
      "dest": "primitive_type [31172,31177]"
    },
    {
      "src": "call_argument [24999,25020]",
      "dest": "call_argument [24917,24938]"
    },
    {
      "src": "state_mutability [28432,28436]",
      "dest": "state_mutability [28280,28284]"
    },
    {
      "src": "identifier: sender [18522,18528]",
      "dest": "identifier: sender [18554,18560]"
    },
    {
      "src": ",: , [12278,12279]",
      "dest": ",: , [12296,12297]"
    },
    {
      "src": "!=: != [26451,26453]",
      "dest": "!=: != [26369,26371]"
    },
    {
      "src": "{: { [4008,4009]",
      "dest": "{: { [3927,3928]"
    },
    {
      "src": "event_definition [8122,8194]",
      "dest": "event_definition [7930,8002]"
    },
    {
      "src": "variable_declaration [15012,15024]",
      "dest": "variable_declaration [15030,15042]"
    },
    {
      "src": "visibility [22067,22073]",
      "dest": "visibility [21985,21991]"
    },
    {
      "src": "(: ( [20227,20228]",
      "dest": "(: ( [20145,20146]"
    },
    {
      "src": "type_name [20905,20912]",
      "dest": "type_name [20823,20830]"
    },
    {
      "src": ",: , [7884,7885]",
      "dest": ",: , [7692,7693]"
    },
    {
      "src": "return_type_definition [22778,22792]",
      "dest": "return_type_definition [22696,22710]"
    },
    {
      "src": "call_argument [12341,12399]",
      "dest": "call_argument [12359,12417]"
    },
    {
      "src": "call_argument [14875,14902]",
      "dest": "call_argument [14893,14920]"
    },
    {
      "src": "identifier: from [8153,8157]",
      "dest": "identifier: from [7961,7965]"
    },
    {
      "src": "primitive_type [20297,20304]",
      "dest": "primitive_type [20215,20222]"
    },
    {
      "src": "parameter [12470,12480]",
      "dest": "parameter [12488,12498]"
    },
    {
      "src": "identifier: transferToken [31308,31321]",
      "dest": "identifier: transferToken [30595,30608]"
    },
    {
      "src": "identifier: _totalSupply [20462,20474]",
      "dest": "identifier: _totalSupply [20380,20392]"
    },
    {
      "src": ",: , [32574,32575]",
      "dest": ",: , [31861,31862]"
    },
    {
      "src": "call_argument [12566,12593]",
      "dest": "call_argument [12584,12611]"
    },
    {
      "src": "||: || [13010,13012]",
      "dest": "||: || [13028,13030]"
    },
    {
      "src": "assembly: assembly [9739,9747]",
      "dest": "assembly: assembly [9441,9449]"
    },
    {
      "src": "}: } [13541,13542]",
      "dest": "}: } [13559,13560]"
    },
    {
      "src": "identifier: add [25097,25100]",
      "dest": "identifier: add [25015,25018]"
    },
    {
      "src": "parameter [3948,3974]",
      "dest": "parameter [3867,3893]"
    },
    {
      "src": "comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [12871,12925]",
      "dest": "comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [12889,12943]"
    },
    {
      "src": "\": \" [14904,14905]",
      "dest": "\": \" [14922,14923]"
    },
    {
      "src": "): ) [18458,18459]",
      "dest": "): ) [18490,18491]"
    },
    {
      "src": "string [25662,25697]",
      "dest": "string [25580,25615]"
    },
    {
      "src": "type_name [3264,3271]",
      "dest": "type_name [3183,3190]"
    },
    {
      "src": "yul_assignment [9750,9782]",
      "dest": "yul_assignment [9452,9484]"
    },
    {
      "src": "comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [23689,24165]",
      "dest": "comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [23607,24083]"
    },
    {
      "src": "string [23610,23649]",
      "dest": "string [23528,23567]"
    },
    {
      "src": ",: , [1989,1990]",
      "dest": ",: , [1908,1909]"
    },
    {
      "src": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [4153,4230]",
      "dest": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [4072,4149]"
    },
    {
      "src": "expression_statement [31355,31393]",
      "dest": "expression_statement [30642,30680]"
    },
    {
      "src": "type_name [1893,1900]",
      "dest": "type_name [1812,1819]"
    },
    {
      "src": "identifier: a [1485,1486]",
      "dest": "identifier: a [1404,1405]"
    },
    {
      "src": "yul_identifier [31591,31598]",
      "dest": "yul_identifier [30878,30885]"
    },
    {
      "src": "(: ( [31193,31194]",
      "dest": "(: ( [30480,30481]"
    },
    {
      "src": ".: . [13709,13710]",
      "dest": ".: . [13727,13728]"
    },
    {
      "src": "identifier: abi [12341,12344]",
      "dest": "identifier: abi [12359,12362]"
    },
    {
      "src": "visibility [7921,7929]",
      "dest": "visibility [7729,7737]"
    },
    {
      "src": "function_body [12304,12408]",
      "dest": "function_body [12322,12426]"
    },
    {
      "src": "): ) [12293,12294]",
      "dest": "): ) [12311,12312]"
    },
    {
      "src": "identifier: abi [13464,13467]",
      "dest": "identifier: abi [13482,13485]"
    },
    {
      "src": "): ) [14330,14331]",
      "dest": "): ) [14348,14349]"
    },
    {
      "src": "type_name [6723,6730]",
      "dest": "type_name [6531,6538]"
    },
    {
      "src": "\": \" [15139,15140]",
      "dest": "\": \" [15157,15158]"
    },
    {
      "src": "returns: returns [9285,9292]",
      "dest": "returns: returns [8987,8994]"
    },
    {
      "src": "return_statement [2045,2054]",
      "dest": "return_statement [1964,1973]"
    },
    {
      "src": "identifier: errorMessage [5413,5425]",
      "dest": "identifier: errorMessage [5332,5344]"
    },
    {
      "src": ".: . [12571,12572]",
      "dest": ".: . [12589,12590]"
    },
    {
      "src": "primitive_type [9556,9563]",
      "dest": "primitive_type [9258,9265]"
    },
    {
      "src": "identifier: totalSupply [5912,5923]",
      "dest": "identifier: totalSupply [5720,5731]"
    },
    {
      "src": "identifier: require [14867,14874]",
      "dest": "identifier: require [14885,14892]"
    },
    {
      "src": "primitive_type [12680,12687]",
      "dest": "primitive_type [12698,12705]"
    },
    {
      "src": "): ) [18498,18499]",
      "dest": "): ) [18530,18531]"
    },
    {
      "src": "type_name [7473,7480]",
      "dest": "type_name [7281,7288]"
    },
    {
      "src": "binary_expression [1983,1989]",
      "dest": "binary_expression [1902,1908]"
    },
    {
      "src": "): ) [12398,12399]",
      "dest": "): ) [12416,12417]"
    },
    {
      "src": "identifier: to [12389,12391]",
      "dest": "identifier: to [12407,12409]"
    },
    {
      "src": "parameter [5450,5457]",
      "dest": "parameter [5369,5376]"
    },
    {
      "src": "parameter [32543,32556]",
      "dest": "parameter [31830,31843]"
    },
    {
      "src": "]: ] [22869,22870]",
      "dest": "]: ] [22787,22788]"
    },
    {
      "src": "address: address [24279,24286]",
      "dest": "address: address [24197,24204]"
    },
    {
      "src": ".: . [15067,15068]",
      "dest": ".: . [15085,15086]"
    },
    {
      "src": "call_expression [21453,21492]",
      "dest": "call_expression [21371,21410]"
    },
    {
      "src": "view: view [9280,9284]",
      "dest": "view: view [8982,8986]"
    },
    {
      "src": "primitive_type [32567,32572]",
      "dest": "primitive_type [31854,31859]"
    },
    {
      "src": ".: . [12584,12585]",
      "dest": ".: . [12602,12603]"
    },
    {
      "src": "return_statement [5510,5523]",
      "dest": "return_statement [5429,5442]"
    },
    {
      "src": "identifier: self [17313,17317]",
      "dest": "identifier: self [17443,17447]"
    },
    {
      "src": "identifier: IERC20 [13581,13587]",
      "dest": "identifier: IERC20 [13599,13605]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3391,3907]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3310,3826]"
    },
    {
      "src": "identifier: approve [13207,13214]",
      "dest": "identifier: approve [13225,13232]"
    },
    {
      "src": "type_name [8374,8381]",
      "dest": "type_name [8182,8189]"
    },
    {
      "src": "yul_path [17368,17370]",
      "dest": "yul_path [17498,17500]"
    },
    {
      "src": "identifier: owner [26445,26450]",
      "dest": "identifier: owner [26363,26368]"
    },
    {
      "src": "type_name [25595,25602]",
      "dest": "type_name [25513,25520]"
    },
    {
      "src": "primitive_type [9254,9261]",
      "dest": "primitive_type [8956,8963]"
    },
    {
      "src": "function: function [4715,4723]",
      "dest": "function: function [4634,4642]"
    },
    {
      "src": "}: } [4844,4845]",
      "dest": "}: } [4763,4764]"
    },
    {
      "src": "type_name [20297,20304]",
      "dest": "type_name [20215,20222]"
    },
    {
      "src": "visibility [2347,2355]",
      "dest": "visibility [2266,2274]"
    },
    {
      "src": "call_argument [32994,33314]",
      "dest": "call_argument [32281,32601]"
    },
    {
      "src": "identifier: mod [4800,4803]",
      "dest": "identifier: mod [4719,4722]"
    },
    {
      "src": "(: ( [7869,7870]",
      "dest": "(: ( [7677,7678]"
    },
    {
      "src": "member_expression [12364,12378]",
      "dest": "member_expression [12382,12396]"
    },
    {
      "src": "(: ( [18586,18587]",
      "dest": "(: ( [18618,18619]"
    },
    {
      "src": "identifier: transferTokens [32381,32395]",
      "dest": "identifier: transferTokens [31668,31682]"
    },
    {
      "src": "address: address [14875,14882]",
      "dest": "address: address [14893,14900]"
    },
    {
      "src": "expression_statement [24991,25057]",
      "dest": "expression_statement [24909,24975]"
    },
    {
      "src": "(: ( [13200,13201]",
      "dest": "(: ( [13218,13219]"
    },
    {
      "src": "(: ( [22858,22859]",
      "dest": "(: ( [22776,22777]"
    },
    {
      "src": "identifier: chainId [31915,31922]",
      "dest": "identifier: chainId [31202,31209]"
    },
    {
      "src": "call_argument [26462,26463]",
      "dest": "call_argument [26380,26381]"
    },
    {
      "src": "primitive_type [31489,31493]",
      "dest": "primitive_type [30776,30780]"
    },
    {
      "src": "call_argument [22827,22834]",
      "dest": "call_argument [22745,22752]"
    },
    {
      "src": "(: ( [17327,17328]",
      "dest": "(: ( [17457,17458]"
    },
    {
      "src": "boolean_literal [16703,16707]",
      "dest": "boolean_literal [16833,16837]"
    },
    {
      "src": "identifier: amount [33642,33648]",
      "dest": "identifier: amount [32929,32935]"
    },
    {
      "src": "return_type_definition [3300,3317]",
      "dest": "return_type_definition [3219,3236]"
    },
    {
      "src": "call_expression [32839,33359]",
      "dest": "call_expression [32126,32646]"
    },
    {
      "src": "return: return [1105,1111]",
      "dest": "return: return [1024,1030]"
    },
    {
      "src": "function_body [18500,18536]",
      "dest": "function_body [18532,18568]"
    },
    {
      "src": "yul_assignment [31591,31609]",
      "dest": "yul_assignment [30878,30896]"
    },
    {
      "src": "): ) [5924,5925]",
      "dest": "): ) [5732,5733]"
    },
    {
      "src": ".: . [13805,13806]",
      "dest": ".: . [13823,13824]"
    },
    {
      "src": "call_argument [26543,26544]",
      "dest": "call_argument [26461,26462]"
    },
    {
      "src": "primitive_type [24190,24197]",
      "dest": "primitive_type [24108,24115]"
    },
    {
      "src": "primitive_type [20148,20155]",
      "dest": "primitive_type [20066,20073]"
    },
    {
      "src": "identifier: _msgSender [23531,23541]",
      "dest": "identifier: _msgSender [23449,23459]"
    },
    {
      "src": "identifier: errorMessage [5486,5498]",
      "dest": "identifier: errorMessage [5405,5417]"
    },
    {
      "src": "type_name [31489,31493]",
      "dest": "type_name [30776,30780]"
    },
    {
      "src": "type_name [20164,20192]",
      "dest": "type_name [20082,20110]"
    },
    {
      "src": "): ) [22065,22066]",
      "dest": "): ) [21983,21984]"
    },
    {
      "src": "{: { [30677,30678]",
      "dest": "{: { [29964,29965]"
    },
    {
      "src": "identifier: accountHash [9591,9602]",
      "dest": "identifier: accountHash [9293,9304]"
    },
    {
      "src": "type_name [18587,18592]",
      "dest": "type_name [18619,18624]"
    },
    {
      "src": "(: ( [16763,16764]",
      "dest": "(: ( [16893,16894]"
    },
    {
      "src": "parameter [25595,25609]",
      "dest": "parameter [25513,25527]"
    },
    {
      "src": "parameter [24938,24953]",
      "dest": "parameter [24856,24871]"
    },
    {
      "src": "type_name [9294,9298]",
      "dest": "type_name [8996,9000]"
    },
    {
      "src": "returns: returns [6096,6103]",
      "dest": "returns: returns [5904,5911]"
    },
    {
      "src": ",: , [22127,22128]",
      "dest": ",: , [22045,22046]"
    },
    {
      "src": "uint256: uint256 [5388,5395]",
      "dest": "uint256: uint256 [5307,5314]"
    },
    {
      "src": "type_name [7939,7943]",
      "dest": "type_name [7747,7751]"
    },
    {
      "src": "function_body [26426,26689]",
      "dest": "function_body [26344,26607]"
    },
    {
      "src": "using_directive [20129,20156]",
      "dest": "using_directive [20047,20074]"
    },
    {
      "src": "{: { [22793,22794]",
      "dest": "{: { [22711,22712]"
    },
    {
      "src": "identifier: increaseAllowance [22716,22733]",
      "dest": "identifier: increaseAllowance [22634,22651]"
    },
    {
      "src": "array_access [24426,24443]",
      "dest": "array_access [24344,24361]"
    },
    {
      "src": "member_expression [12364,12387]",
      "dest": "member_expression [12382,12405]"
    },
    {
      "src": "primitive_type [2015,2022]",
      "dest": "primitive_type [1934,1941]"
    },
    {
      "src": "uint256: uint256 [17497,17504]",
      "dest": "uint256: uint256 [17627,17634]"
    },
    {
      "src": "identifier: _msgSender [22813,22823]",
      "dest": "identifier: _msgSender [22731,22741]"
    },
    {
      "src": ",: , [22825,22826]",
      "dest": ",: , [22743,22744]"
    },
    {
      "src": "): ) [29493,29494]",
      "dest": "): ) [28780,28781]"
    },
    {
      "src": "type_name [24190,24197]",
      "dest": "type_name [24108,24115]"
    },
    {
      "src": "identifier: length [15169,15175]",
      "dest": "identifier: length [15187,15193]"
    },
    {
      "src": "expression_statement [4086,4115]",
      "dest": "expression_statement [4005,4034]"
    },
    {
      "src": "expression_statement [31107,31176]",
      "dest": "expression_statement [30394,30463]"
    },
    {
      "src": "type_name [5949,5956]",
      "dest": "type_name [5757,5764]"
    },
    {
      "src": "identifier: c [2706,2707]",
      "dest": "identifier: c [2625,2626]"
    },
    {
      "src": "}: } [15384,15385]",
      "dest": "}: } [15402,15403]"
    },
    {
      "src": "external: external [7506,7514]",
      "dest": "external: external [7314,7322]"
    },
    {
      "src": "identifier: sender [24456,24462]",
      "dest": "identifier: sender [24374,24380]"
    },
    {
      "src": "type_name [29375,29381]",
      "dest": "type_name [28662,28668]"
    },
    {
      "src": "call_expression [13438,13534]",
      "dest": "call_expression [13456,13552]"
    },
    {
      "src": "user_defined_type [30416,30421]",
      "dest": "user_defined_type [29703,29708]"
    },
    {
      "src": "): ) [21473,21474]",
      "dest": "): ) [21391,21392]"
    },
    {
      "src": "primitive_type [3309,3316]",
      "dest": "primitive_type [3228,3235]"
    },
    {
      "src": "identifier: token [13171,13176]",
      "dest": "identifier: token [13189,13194]"
    },
    {
      "src": "identifier: _mint [24932,24937]",
      "dest": "identifier: _mint [24850,24855]"
    },
    {
      "src": ",: , [25593,25594]",
      "dest": ",: , [25511,25512]"
    },
    {
      "src": "call_expression [14867,14938]",
      "dest": "call_expression [14885,14956]"
    },
    {
      "src": "array_access [20629,20647]",
      "dest": "array_access [20547,20565]"
    },
    {
      "src": "number_literal: 0 [25018,25019]",
      "dest": "number_literal: 0 [24936,24937]"
    },
    {
      "src": "identifier: transferFrom [7857,7869]",
      "dest": "identifier: transferFrom [7665,7677]"
    },
    {
      "src": "string_literal [15321,15365]",
      "dest": "string_literal [15339,15383]"
    },
    {
      "src": "): ) [15066,15067]",
      "dest": "): ) [15084,15085]"
    },
    {
      "src": "identifier: callOptionalReturn [13438,13456]",
      "dest": "identifier: callOptionalReturn [13456,13474]"
    },
    {
      "src": "identifier: account [24946,24953]",
      "dest": "identifier: account [24864,24871]"
    },
    {
      "src": "type_name [4125,4132]",
      "dest": "type_name [4044,4051]"
    },
    {
      "src": "primitive_type [22787,22791]",
      "dest": "primitive_type [22705,22709]"
    },
    {
      "src": "parameter [16958,16962]",
      "dest": "parameter [17088,17092]"
    },
    {
      "src": "expression_statement [32735,32812]",
      "dest": "expression_statement [32022,32099]"
    },
    {
      "src": "identifier: data [18757,18761]",
      "dest": "identifier: data [18789,18793]"
    },
    {
      "src": "call_argument [13045,13052]",
      "dest": "call_argument [13063,13070]"
    },
    {
      "src": "call_expression [13377,13416]",
      "dest": "call_expression [13395,13434]"
    },
    {
      "src": "identifier: _tokenAddress [31013,31026]",
      "dest": "identifier: _tokenAddress [30300,30313]"
    },
    {
      "src": "function_body [20611,20655]",
      "dest": "function_body [20529,20573]"
    },
    {
      "src": "type_name [16617,16621]",
      "dest": "type_name [16747,16751]"
    },
    {
      "src": "primitive_type [12216,12223]",
      "dest": "primitive_type [12234,12241]"
    },
    {
      "src": "{: { [28994,28995]",
      "dest": "{: { [11463,11464]"
    },
    {
      "src": "binary_expression [2027,2032]",
      "dest": "binary_expression [1946,1951]"
    },
    {
      "src": "(: ( [24607,24608]",
      "dest": "(: ( [24525,24526]"
    },
    {
      "src": "): ) [6080,6081]",
      "dest": "): ) [5888,5889]"
    },
    {
      "src": "function_definition [6704,6787]",
      "dest": "function_definition [6512,6595]"
    },
    {
      "src": "(: ( [6064,6065]",
      "dest": "(: ( [5872,5873]"
    },
    {
      "src": ",: , [5386,5387]",
      "dest": ",: , [5305,5306]"
    },
    {
      "src": "): ) [23649,23650]",
      "dest": "): ) [23567,23568]"
    },
    {
      "src": ",: , [4737,4738]",
      "dest": ",: , [4656,4657]"
    },
    {
      "src": "address: address [24363,24370]",
      "dest": "address: address [24281,24288]"
    },
    {
      "src": "(: ( [25754,25755]",
      "dest": "(: ( [25672,25673]"
    },
    {
      "src": "identifier: decreaseAllowance [23429,23446]",
      "dest": "identifier: decreaseAllowance [23347,23364]"
    },
    {
      "src": "comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [14351,14459]",
      "dest": "comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [14369,14477]"
    },
    {
      "src": "identifier: spender [22827,22834]",
      "dest": "identifier: spender [22745,22752]"
    },
    {
      "src": "primitive_type [15053,15060]",
      "dest": "primitive_type [15071,15078]"
    },
    {
      "src": "identifier: Approval [26649,26657]",
      "dest": "identifier: Approval [26567,26575]"
    },
    {
      "src": "type_cast_expression [31941,31954]",
      "dest": "type_cast_expression [31228,31241]"
    },
    {
      "src": "function_body [22793,22917]",
      "dest": "function_body [22711,22835]"
    },
    {
      "src": "visibility [7506,7514]",
      "dest": "visibility [7314,7322]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [7953,8116]",
      "dest": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [7761,7924]"
    },
    {
      "src": "call_argument [12364,12387]",
      "dest": "call_argument [12382,12405]"
    },
    {
      "src": "{: { [12304,12305]",
      "dest": "{: { [12322,12323]"
    },
    {
      "src": "(: ( [27050,27051]",
      "dest": "(: ( [26968,26969]"
    },
    {
      "src": "(: ( [12996,12997]",
      "dest": "(: ( [13014,13015]"
    },
    {
      "src": "type_name [20937,20941]",
      "dest": "type_name [20855,20859]"
    },
    {
      "src": "type_name [3937,3944]",
      "dest": "type_name [3856,3863]"
    },
    {
      "src": "): ) [15365,15366]",
      "dest": "): ) [15383,15384]"
    },
    {
      "src": "type_name [29035,29042]",
      "dest": "type_name [11504,11511]"
    },
    {
      "src": "visibility [11236,11244]",
      "dest": "visibility [10938,10946]"
    },
    {
      "src": "parameter [23464,23487]",
      "dest": "parameter [23382,23405]"
    },
    {
      "src": "internal: internal [975,983]",
      "dest": "internal: internal [894,902]"
    },
    {
      "src": ",: , [962,963]",
      "dest": ",: , [881,882]"
    },
    {
      "src": "identifier: _approve [21453,21461]",
      "dest": "identifier: _approve [21371,21379]"
    },
    {
      "src": "(: ( [24189,24190]",
      "dest": "(: ( [24107,24108]"
    },
    {
      "src": "uint: uint [32543,32547]",
      "dest": "uint: uint [31830,31834]"
    },
    {
      "src": "identifier: _allowances [21188,21199]",
      "dest": "identifier: _allowances [21106,21117]"
    },
    {
      "src": "identifier: _transfer [24180,24189]",
      "dest": "identifier: _transfer [24098,24107]"
    },
    {
      "src": "identifier: recipient [20978,20987]",
      "dest": "identifier: recipient [20896,20905]"
    },
    {
      "src": "): ) [22135,22136]",
      "dest": "): ) [22053,22054]"
    },
    {
      "src": "private: private [27679,27686]",
      "dest": "private: private [27527,27534]"
    },
    {
      "src": "mapping: mapping [20219,20226]",
      "dest": "mapping: mapping [20137,20144]"
    },
    {
      "src": "uint256: uint256 [20184,20191]",
      "dest": "uint256: uint256 [20102,20109]"
    },
    {
      "src": "(: ( [24268,24269]",
      "dest": "(: ( [24186,24187]"
    },
    {
      "src": "contract_declaration [16127,17530]",
      "dest": "contract_declaration [16089,17660]"
    },
    {
      "src": "call_expression [28448,28501]",
      "dest": "call_expression [28296,28349]"
    },
    {
      "src": ",: , [4099,4100]",
      "dest": ",: , [4018,4019]"
    },
    {
      "src": "emit: emit [25181,25185]",
      "dest": "emit: emit [25099,25103]"
    },
    {
      "src": "(: ( [2369,2370]",
      "dest": "(: ( [2288,2289]"
    },
    {
      "src": "}: } [31987,31988]",
      "dest": "}: } [31274,31275]"
    },
    {
      "src": "=>: => [20181,20183]",
      "dest": "=>: => [20099,20101]"
    },
    {
      "src": "expression_statement [33590,33650]",
      "dest": "expression_statement [32877,32937]"
    },
    {
      "src": "parameter [998,1005]",
      "dest": "parameter [917,924]"
    },
    {
      "src": "call_argument [20989,20995]",
      "dest": "call_argument [20907,20913]"
    },
    {
      "src": "library_declaration [12140,15388]",
      "dest": "library_declaration [12158,15406]"
    },
    {
      "src": "(: ( [22874,22875]",
      "dest": "(: ( [22792,22793]"
    },
    {
      "src": ",: , [3935,3936]",
      "dest": ",: , [3854,3855]"
    },
    {
      "src": "type_name [32543,32547]",
      "dest": "type_name [31830,31834]"
    },
    {
      "src": "parameter [22083,22087]",
      "dest": "parameter [22001,22005]"
    },
    {
      "src": "{: { [28437,28438]",
      "dest": "{: { [28285,28286]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1129,1390]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1048,1309]"
    },
    {
      "src": "call_argument [31208,31244]",
      "dest": "call_argument [30495,30531]"
    },
    {
      "src": "identifier: toPayable [10079,10088]",
      "dest": "identifier: toPayable [9781,9790]"
    },
    {
      "src": "identifier: require [16502,16509]",
      "dest": "identifier: require [16632,16639]"
    },
    {
      "src": "string [29437,29487]",
      "dest": "string [28724,28774]"
    },
    {
      "src": "identifier: token [14306,14311]",
      "dest": "identifier: token [14324,14329]"
    },
    {
      "src": "returns: returns [3990,3997]",
      "dest": "returns: returns [3909,3916]"
    },
    {
      "src": "identifier: spender [7481,7488]",
      "dest": "identifier: spender [7289,7296]"
    },
    {
      "src": "variable_declaration_tuple [15011,15050]",
      "dest": "variable_declaration_tuple [15029,15068]"
    },
    {
      "src": "type_name [24938,24945]",
      "dest": "type_name [24856,24863]"
    },
    {
      "src": "identifier: amount [25603,25609]",
      "dest": "identifier: amount [25521,25527]"
    },
    {
      "src": "identifier: account [24999,25006]",
      "dest": "identifier: account [24917,24924]"
    },
    {
      "src": "primitive_type [7473,7480]",
      "dest": "primitive_type [7281,7288]"
    },
    {
      "src": "type_name [12470,12477]",
      "dest": "type_name [12488,12495]"
    },
    {
      "src": "call_expression [25826,25850]",
      "dest": "call_expression [25744,25768]"
    },
    {
      "src": "type_name [29116,29123]",
      "dest": "type_name [11585,11592]"
    },
    {
      "src": "}: } [29204,29205]",
      "dest": "}: } [11673,11674]"
    },
    {
      "src": "identifier: sub [25839,25842]",
      "dest": "identifier: sub [25757,25760]"
    },
    {
      "src": "(: ( [25194,25195]",
      "dest": "(: ( [25112,25113]"
    },
    {
      "src": "return_statement [30722,30752]",
      "dest": "return_statement [30009,30039]"
    },
    {
      "src": ",: , [21483,21484]",
      "dest": ",: , [21401,21402]"
    },
    {
      "src": "bool: bool [16958,16962]",
      "dest": "bool: bool [17088,17092]"
    },
    {
      "src": "identifier: account [25742,25749]",
      "dest": "identifier: account [25660,25667]"
    },
    {
      "src": "return: return [20622,20628]",
      "dest": "return: return [20540,20546]"
    },
    {
      "src": "primitive_type [22751,22758]",
      "dest": "primitive_type [22669,22676]"
    },
    {
      "src": "number_literal: 0 [25658,25659]",
      "dest": "number_literal: 0 [25576,25577]"
    },
    {
      "src": "call_argument [26674,26680]",
      "dest": "call_argument [26592,26598]"
    },
    {
      "src": "return: return [21007,21013]",
      "dest": "return: return [20925,20931]"
    },
    {
      "src": "identifier: Context [20106,20113]",
      "dest": "identifier: Context [20024,20031]"
    },
    {
      "src": "identifier: a [5385,5386]",
      "dest": "identifier: a [5304,5305]"
    },
    {
      "src": "identifier: sender [22024,22030]",
      "dest": "identifier: sender [21942,21948]"
    },
    {
      "src": "string_literal [25022,25055]",
      "dest": "string_literal [24940,24973]"
    },
    {
      "src": "primitive_type [3275,3282]",
      "dest": "primitive_type [3194,3201]"
    },
    {
      "src": "parameter [6361,6378]",
      "dest": "parameter [6169,6186]"
    },
    {
      "src": "call_expression [31649,31980]",
      "dest": "call_expression [30936,31267]"
    },
    {
      "src": "): ) [22266,22267]",
      "dest": "): ) [22184,22185]"
    },
    {
      "src": "parameter [12680,12693]",
      "dest": "parameter [12698,12711]"
    },
    {
      "src": ".: . [13382,13383]",
      "dest": ".: . [13400,13401]"
    },
    {
      "src": "type_name [31005,31012]",
      "dest": "type_name [30292,30299]"
    },
    {
      "src": "call_argument [33283,33291]",
      "dest": "call_argument [32570,32578]"
    },
    {
      "src": "primitive_type [24206,24213]",
      "dest": "primitive_type [24124,24131]"
    },
    {
      "src": "comment: // or when resetting it to zero. To increase and decrease it, use [12796,12861]",
      "dest": "comment: // or when resetting it to zero. To increase and decrease it, use [12814,12879]"
    },
    {
      "src": "(: ( [21160,21161]",
      "dest": "(: ( [21078,21079]"
    },
    {
      "src": "member_expression [12566,12584]",
      "dest": "member_expression [12584,12602]"
    },
    {
      "src": "identifier: ERC20 [29361,29366]",
      "dest": "identifier: ERC20 [28648,28653]"
    },
    {
      "src": "identifier: account [20572,20579]",
      "dest": "identifier: account [20490,20497]"
    },
    {
      "src": "): ) [25107,25108]",
      "dest": "): ) [25025,25026]"
    },
    {
      "src": "comment: /**      * @notice wrapper function around parent contract Initializable's `initializable` modifier      *      initializable modifier ensures this function can only be called once by each deployed child contract      *      sets isInitialized flag to true to which is used by _requireIsInitialized()      */ [27800,28112]",
      "dest": "comment: /**      * @notice wrapper function around parent contract Initializable's `initializable` modifier      *      initializable modifier ensures this function can only be called once by each deployed child contract      *      sets isInitialized flag to true to which is used by _requireIsInitialized()      */ [27648,27960]"
    },
    {
      "src": "expression_statement [1046,1093]",
      "dest": "expression_statement [965,1012]"
    },
    {
      "src": "}: } [12407,12408]",
      "dest": "}: } [12425,12426]"
    },
    {
      "src": "(: ( [7523,7524]",
      "dest": "(: ( [7331,7332]"
    },
    {
      "src": "call_expression [15289,15319]",
      "dest": "call_expression [15307,15337]"
    },
    {
      "src": "identifier: success [15017,15024]",
      "dest": "identifier: success [15035,15042]"
    },
    {
      "src": "assignment_expression [16688,16707]",
      "dest": "assignment_expression [16818,16837]"
    },
    {
      "src": "identifier: amount [24627,24633]",
      "dest": "identifier: amount [24545,24551]"
    },
    {
      "src": "address: address [25650,25657]",
      "dest": "address: address [25568,25575]"
    },
    {
      "src": "comment: /**  * @title Initializable  *  * @dev Helper contract to support initializer functions. To use it, replace  * the constructor with a function that has the `initializer` modifier.  * WARNING: Unlike constructors, initializer functions must be manually  * invoked. This applies both to deploying an Initializable contract, as well  * as extending an Initializable contract via inheritance.  * WARNING: When used with inheritance, manual care must be taken to not invoke  * a parent initializer twice, or ensure that all initializers are idempotent,  * because this is not dealt with automatically as with constructors.  */ [15493,16125]",
      "dest": "comment: /**  * @title Initializable  *  * @dev Helper contract to support initializer functions. To use it, replace  * the constructor with a function that has the `initializer` modifier.  * WARNING: Unlike constructors, initializer functions must be manually  * invoked. This applies both to deploying an Initializable contract, as well  * as extending an Initializable contract via inheritance.  * WARNING: When used with inheritance, manual care must be taken to not invoke  * a parent initializer twice, or ensure that all initializers are idempotent,  * because this is not dealt with automatically as with constructors.  */ [15455,16087]"
    },
    {
      "src": "identifier: from [12595,12599]",
      "dest": "identifier: from [12613,12617]"
    },
    {
      "src": "comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [18896,20071]",
      "dest": "comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [18814,19989]"
    },
    {
      "src": "mapping: mapping [30316,30323]",
      "dest": "mapping: mapping [29603,29610]"
    },
    {
      "src": "uint256: uint256 [6105,6112]",
      "dest": "uint256: uint256 [5913,5920]"
    },
    {
      "src": "state_mutability [10115,10119]",
      "dest": "state_mutability [9817,9821]"
    },
    {
      "src": "call_argument [1488,1489]",
      "dest": "call_argument [1407,1408]"
    },
    {
      "src": "uint16: uint16 [29084,29090]",
      "dest": "uint16: uint16 [11553,11559]"
    },
    {
      "src": "=>: => [20256,20258]",
      "dest": "=>: => [20174,20176]"
    },
    {
      "src": "}: } [28197,28198]",
      "dest": "}: } [28045,28046]"
    },
    {
      "src": "call_argument [22156,22162]",
      "dest": "call_argument [22074,22080]"
    },
    {
      "src": "return_statement [9794,9846]",
      "dest": "return_statement [9496,9548]"
    },
    {
      "src": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [2069,2306]",
      "dest": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [1988,2225]"
    },
    {
      "src": "identifier: value [13421,13426]",
      "dest": "identifier: value [13439,13444]"
    },
    {
      "src": "call_argument [3343,3344]",
      "dest": "call_argument [3262,3263]"
    },
    {
      "src": "(: ( [31658,31659]",
      "dest": "(: ( [30945,30946]"
    },
    {
      "src": "assembly_statement [9739,9784]",
      "dest": "assembly_statement [9441,9486]"
    },
    {
      "src": "binary_expression [2682,2687]",
      "dest": "binary_expression [2601,2606]"
    },
    {
      "src": "=: = [2680,2681]",
      "dest": "=: = [2599,2600]"
    },
    {
      "src": "identifier: sender [24269,24275]",
      "dest": "identifier: sender [24187,24193]"
    },
    {
      "src": "primitive_type [11264,11271]",
      "dest": "primitive_type [10966,10973]"
    },
    {
      "src": "parameter [7870,7884]",
      "dest": "parameter [7678,7692]"
    },
    {
      "src": "identifier: amount [25216,25222]",
      "dest": "identifier: amount [25134,25140]"
    },
    {
      "src": "type_name [8137,8144]",
      "dest": "type_name [7945,7952]"
    },
    {
      "src": "&&: && [9826,9828]",
      "dest": "&&: && [9528,9530]"
    },
    {
      "src": "\": \" [22265,22266]",
      "dest": "\": \" [22183,22184]"
    },
    {
      "src": "comment: // an instance of this contract, which should be used via inheritance. [18273,18343]",
      "dest": "comment: // an instance of this contract, which should be used via inheritance. [18305,18375]"
    },
    {
      "src": "string_literal [13074,13130]",
      "dest": "string_literal [13092,13148]"
    },
    {
      "src": "\": \" [15321,15322]",
      "dest": "\": \" [15339,15340]"
    },
    {
      "src": "comment: /**  * Wrapper around OpenZeppelin's Initializable contract.  * Exposes initialized state management to ensure logic contract functions cannot be called before initialization.  * This is needed because OZ's Initializable contract no longer exposes initialized state variable.  * https://github.com/OpenZeppelin/openzeppelin-sdk/blob/v2.8.0/packages/lib/contracts/Initializable.sol  */ [27234,27623]",
      "dest": "comment: /**  * Wrapper around OpenZeppelin's Initializable contract.  * Exposes initialized state management to ensure logic contract functions cannot be called before initialization.  * This is needed because OZ's Initializable contract no longer exposes initialized state variable.  * https://github.com/OpenZeppelin/openzeppelin-sdk/blob/v2.8.0/packages/lib/contracts/Initializable.sol  */ [27082,27471]"
    },
    {
      "src": "identifier: returndata [15158,15168]",
      "dest": "identifier: returndata [15176,15186]"
    },
    {
      "src": "}: } [18771,18772]",
      "dest": "}: } [18803,18804]"
    },
    {
      "src": "public: public [29984,29990]",
      "dest": "public: public [29271,29277]"
    },
    {
      "src": "call_argument [25639,25660]",
      "dest": "call_argument [25557,25578]"
    },
    {
      "src": "identifier: sub [13710,13713]",
      "dest": "identifier: sub [13728,13731]"
    },
    {
      "src": "identifier: spender [26665,26672]",
      "dest": "identifier: spender [26583,26590]"
    },
    {
      "src": "identifier: this [33635,33639]",
      "dest": "identifier: this [32922,32926]"
    },
    {
      "src": "{: { [9748,9749]",
      "dest": "{: { [9450,9451]"
    },
    {
      "src": "binary_expression [1054,1060]",
      "dest": "binary_expression [973,979]"
    },
    {
      "src": "{: { [702,703]",
      "dest": "{: { [621,622]"
    },
    {
      "src": "identifier: require [24991,24998]",
      "dest": "identifier: require [24909,24916]"
    },
    {
      "src": "(: ( [28646,28647]",
      "dest": "(: ( [28494,28495]"
    },
    {
      "src": "{: { [24980,24981]",
      "dest": "{: { [24898,24899]"
    },
    {
      "src": "emit_statement [25861,25904]",
      "dest": "emit_statement [25779,25822]"
    },
    {
      "src": "\": \" [24291,24292]",
      "dest": "\": \" [24209,24210]"
    },
    {
      "src": "primitive_type [23464,23471]",
      "dest": "primitive_type [23382,23389]"
    },
    {
      "src": "external: external [6396,6404]",
      "dest": "external: external [6204,6212]"
    },
    {
      "src": "yul_evm_builtin [9762,9773]",
      "dest": "yul_evm_builtin [9464,9475]"
    },
    {
      "src": "identifier: abi [32994,32997]",
      "dest": "identifier: abi [32281,32284]"
    },
    {
      "src": "(: ( [1053,1054]",
      "dest": "(: ( [972,973]"
    },
    {
      "src": "state_variable_declaration [30451,30478]",
      "dest": "state_variable_declaration [29738,29765]"
    },
    {
      "src": "(: ( [23592,23593]",
      "dest": "(: ( [23510,23511]"
    },
    {
      "src": "call_argument [31885,31895]",
      "dest": "call_argument [31172,31182]"
    },
    {
      "src": "parameter [24190,24204]",
      "dest": "parameter [24108,24122]"
    },
    {
      "src": "library: library [685,692]",
      "dest": "library: library [604,611]"
    },
    {
      "src": "type_cast_expression [25650,25660]",
      "dest": "type_cast_expression [25568,25578]"
    },
    {
      "src": "array_access [25711,25729]",
      "dest": "array_access [25629,25647]"
    },
    {
      "src": "call_argument [20978,20987]",
      "dest": "call_argument [20896,20905]"
    },
    {
      "src": "type_name [32486,32493]",
      "dest": "type_name [31773,31780]"
    },
    {
      "src": "visibility [32622,32628]",
      "dest": "visibility [31909,31915]"
    },
    {
      "src": "(: ( [12535,12536]",
      "dest": "(: ( [12553,12554]"
    },
    {
      "src": "visibility [29193,29201]",
      "dest": "visibility [11662,11670]"
    },
    {
      "src": ".: . [33673,33674]",
      "dest": ".: . [32960,32961]"
    },
    {
      "src": "chainid: chainid [31602,31609]",
      "dest": "chainid: chainid [30889,30896]"
    },
    {
      "src": "): ) [26583,26584]",
      "dest": "): ) [26501,26502]"
    },
    {
      "src": "type_name [29144,29151]",
      "dest": "type_name [11613,11620]"
    },
    {
      "src": ",: , [6736,6737]",
      "dest": ",: , [6544,6545]"
    },
    {
      "src": "function: function [24923,24931]",
      "dest": "function: function [24841,24849]"
    },
    {
      "src": ".: . [27046,27047]",
      "dest": ".: . [26964,26965]"
    },
    {
      "src": "identifier: from [32414,32418]",
      "dest": "identifier: from [31701,31705]"
    },
    {
      "src": "view: view [18573,18577]",
      "dest": "view: view [18605,18609]"
    },
    {
      "src": "binary_expression [32743,32770]",
      "dest": "binary_expression [32030,32057]"
    },
    {
      "src": ",: , [33781,33782]",
      "dest": ",: , [33068,33069]"
    },
    {
      "src": ",: , [5397,5398]",
      "dest": ",: , [5316,5317]"
    },
    {
      "src": "type_name [30668,30675]",
      "dest": "type_name [29955,29962]"
    },
    {
      "src": "call_argument [12605,12610]",
      "dest": "call_argument [12623,12628]"
    },
    {
      "src": "string_literal [27059,27097]",
      "dest": "string_literal [26977,27015]"
    },
    {
      "src": "call_argument [12543,12611]",
      "dest": "call_argument [12561,12629]"
    },
    {
      "src": "(: ( [9293,9294]",
      "dest": "(: ( [8995,8996]"
    },
    {
      "src": "\": \" [11476,11477]",
      "dest": "\": \" [11178,11179]"
    },
    {
      "src": "internal: internal [13334,13342]",
      "dest": "internal: internal [13352,13360]"
    },
    {
      "src": "function: function [2312,2320]",
      "dest": "function: function [2231,2239]"
    },
    {
      "src": "type_name [13612,13619]",
      "dest": "type_name [13630,13637]"
    },
    {
      "src": "{: { [20444,20445]",
      "dest": "{: { [20362,20363]"
    },
    {
      "src": "): ) [14901,14902]",
      "dest": "): ) [14919,14920]"
    },
    {
      "src": "identifier: b [2715,2716]",
      "dest": "identifier: b [2634,2635]"
    },
    {
      "src": "identifier: ERROR_WORMHOLE_NOT_CONTRACT [31259,31286]",
      "dest": "identifier: ERROR_WORMHOLE_NOT_CONTRACT [30546,30573]"
    },
    {
      "src": "parameter [13581,13593]",
      "dest": "parameter [13599,13611]"
    },
    {
      "src": ".: . [25750,25751]",
      "dest": ".: . [25668,25669]"
    },
    {
      "src": ",: , [26996,26997]",
      "dest": ",: , [26914,26915]"
    },
    {
      "src": "call_argument [23545,23552]",
      "dest": "call_argument [23463,23470]"
    },
    {
      "src": "identifier: _requireIsInitialized [28399,28420]",
      "dest": "identifier: _requireIsInitialized [28247,28268]"
    },
    {
      "src": "call_argument [13858,13870]",
      "dest": "call_argument [13876,13888]"
    },
    {
      "src": "identifier: add [13417,13420]",
      "dest": "identifier: add [13435,13438]"
    },
    {
      "src": "parameter [29084,29105]",
      "dest": "parameter [11553,11574]"
    },
    {
      "src": "state_variable_declaration [30172,30308]",
      "dest": "state_variable_declaration [29459,29595]"
    },
    {
      "src": "constant: constant [29518,29526]",
      "dest": "constant: constant [28805,28813]"
    },
    {
      "src": "state_variable_declaration [20297,20326]",
      "dest": "state_variable_declaration [20215,20244]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-allowance}.      */ [21034,21083]",
      "dest": "comment: /**      * @dev See {IERC20-allowance}.      */ [20952,21001]"
    },
    {
      "src": "internal: internal [10106,10114]",
      "dest": "internal: internal [9808,9816]"
    },
    {
      "src": ",: , [33256,33257]",
      "dest": ",: , [32543,32544]"
    },
    {
      "src": "(: ( [1881,1882]",
      "dest": "(: ( [1800,1801]"
    },
    {
      "src": "identifier: amount [24468,24474]",
      "dest": "identifier: amount [24386,24392]"
    },
    {
      "src": "): ) [13532,13533]",
      "dest": "): ) [13550,13551]"
    },
    {
      "src": "\": \" [22224,22225]",
      "dest": "\": \" [22142,22143]"
    },
    {
      "src": "identifier: token [13201,13206]",
      "dest": "identifier: token [13219,13224]"
    },
    {
      "src": "): ) [31854,31855]",
      "dest": "): ) [31141,31142]"
    },
    {
      "src": "): ) [1005,1006]",
      "dest": "): ) [924,925]"
    },
    {
      "src": "identifier: transferTokens [33730,33744]",
      "dest": "identifier: transferTokens [33017,33031]"
    },
    {
      "src": "uint256: uint256 [7490,7497]",
      "dest": "uint256: uint256 [7298,7305]"
    },
    {
      "src": "string [27757,27791]",
      "dest": "string [27605,27639]"
    },
    {
      "src": "return_statement [2767,2776]",
      "dest": "return_statement [2686,2695]"
    },
    {
      "src": "true: true [16703,16707]",
      "dest": "true: true [16833,16837]"
    },
    {
      "src": "function_definition [16911,17419]",
      "dest": "function_definition [17041,17549]"
    },
    {
      "src": "\": \" [11445,11446]",
      "dest": "\": \" [11147,11148]"
    },
    {
      "src": "assignment_expression [26597,26633]",
      "dest": "assignment_expression [26515,26551]"
    },
    {
      "src": "contract_body [20122,27148]",
      "dest": "contract_body [20040,27066]"
    },
    {
      "src": "internal: internal [13627,13635]",
      "dest": "internal: internal [13645,13653]"
    },
    {
      "src": "true [23669,23673]",
      "dest": "true [23587,23591]"
    },
    {
      "src": "primitive_type [21108,21115]",
      "dest": "primitive_type [21026,21033]"
    },
    {
      "src": ".: . [13467,13468]",
      "dest": ".: . [13485,13486]"
    },
    {
      "src": "call_argument [33759,33781]",
      "dest": "call_argument [33046,33068]"
    },
    {
      "src": "primitive_type [4728,4735]",
      "dest": "primitive_type [4647,4654]"
    },
    {
      "src": "function: function [16911,16919]",
      "dest": "function: function [17041,17049]"
    },
    {
      "src": "identifier: selector [13501,13509]",
      "dest": "identifier: selector [13519,13527]"
    },
    {
      "src": "call_argument [13225,13232]",
      "dest": "call_argument [13243,13250]"
    },
    {
      "src": "variable_declaration [33372,33396]",
      "dest": "variable_declaration [32659,32683]"
    },
    {
      "src": "parameter [21436,21440]",
      "dest": "parameter [21354,21358]"
    },
    {
      "src": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [5650,5803]",
      "dest": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [5458,5611]"
    },
    {
      "src": "type_name [3926,3933]",
      "dest": "type_name [3845,3852]"
    },
    {
      "src": "): ) [23577,23578]",
      "dest": "): ) [23495,23496]"
    },
    {
      "src": "): ) [15318,15319]",
      "dest": "): ) [15336,15337]"
    },
    {
      "src": "{: { [8639,8640]",
      "dest": "{: { [8341,8342]"
    },
    {
      "src": "): ) [33639,33640]",
      "dest": "): ) [32926,32927]"
    },
    {
      "src": "): ) [13239,13240]",
      "dest": "): ) [13257,13258]"
    },
    {
      "src": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [6428,6698]",
      "dest": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [6236,6506]"
    },
    {
      "src": "return_type_definition [20593,20610]",
      "dest": "return_type_definition [20511,20528]"
    },
    {
      "src": "call_argument [31832,31854]",
      "dest": "call_argument [31119,31141]"
    },
    {
      "src": "comment: // we're implementing it ourselves. [14469,14504]",
      "dest": "comment: // we're implementing it ourselves. [14487,14522]"
    },
    {
      "src": "modifier_invocation [28147,28158]",
      "dest": "modifier_invocation [27995,28006]"
    },
    {
      "src": "type_name [12280,12287]",
      "dest": "type_name [12298,12305]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4853,5358]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4772,5277]"
    },
    {
      "src": "if_statement [16659,16742]",
      "dest": "if_statement [16789,16872]"
    },
    {
      "src": "identifier: a [1030,1031]",
      "dest": "identifier: a [949,950]"
    },
    {
      "src": "event_paramater [8422,8435]",
      "dest": "event_paramater [8230,8243]"
    },
    {
      "src": "bool: bool [22787,22791]",
      "dest": "bool: bool [22705,22709]"
    },
    {
      "src": "call_argument [11264,11295]",
      "dest": "call_argument [10966,10997]"
    },
    {
      "src": "): ) [30675,30676]",
      "dest": "): ) [29962,29963]"
    },
    {
      "src": ".: . [13492,13493]",
      "dest": ".: . [13510,13511]"
    },
    {
      "src": "function_definition [3251,3383]",
      "dest": "function_definition [3170,3302]"
    },
    {
      "src": "inheritance_specifier [20115,20121]",
      "dest": "inheritance_specifier [20033,20039]"
    },
    {
      "src": "identifier: nonce [33251,33256]",
      "dest": "identifier: nonce [32538,32543]"
    },
    {
      "src": "identifier: spender [23455,23462]",
      "dest": "identifier: spender [23373,23380]"
    },
    {
      "src": "]: ] [20646,20647]",
      "dest": "]: ] [20564,20565]"
    },
    {
      "src": "variable_declaration [2015,2024]",
      "dest": "variable_declaration [1934,1943]"
    },
    {
      "src": "\": \" [15364,15365]",
      "dest": "\": \" [15382,15383]"
    },
    {
      "src": "call_argument [27012,27098]",
      "dest": "call_argument [26930,27016]"
    },
    {
      "src": "expression_statement [11256,11330]",
      "dest": "expression_statement [10958,11032]"
    },
    {
      "src": "identifier: arbiterFee [33867,33877]",
      "dest": "identifier: arbiterFee [33154,33164]"
    },
    {
      "src": "call_argument [1491,1523]",
      "dest": "call_argument [1410,1442]"
    },
    {
      "src": "primitive_type [16958,16962]",
      "dest": "primitive_type [17088,17092]"
    },
    {
      "src": "solidity_version: 0.5.0 [98,103]",
      "dest": "solidity_version: 0.5.0 [17,22]"
    },
    {
      "src": "(: ( [30642,30643]",
      "dest": "(: ( [29929,29930]"
    },
    {
      "src": "identifier: spender [13511,13518]",
      "dest": "identifier: spender [13529,13536]"
    },
    {
      "src": "): ) [24288,24289]",
      "dest": "): ) [24206,24207]"
    },
    {
      "src": "identifier: ERROR_TOKEN_NOT_CONTRACT [29399,29423]",
      "dest": "identifier: ERROR_TOKEN_NOT_CONTRACT [28686,28710]"
    },
    {
      "src": "parameter [21387,21402]",
      "dest": "parameter [21305,21320]"
    },
    {
      "src": "identifier: spender [22742,22749]",
      "dest": "identifier: spender [22660,22667]"
    },
    {
      "src": ".: . [18521,18522]",
      "dest": ".: . [18553,18554]"
    },
    {
      "src": "identifier: isInitialized [28170,28183]",
      "dest": "identifier: isInitialized [28018,28031]"
    },
    {
      "src": "parameter [32585,32594]",
      "dest": "parameter [31872,31881]"
    },
    {
      "src": "identifier: recipient [6369,6378]",
      "dest": "identifier: recipient [6177,6186]"
    },
    {
      "src": "primitive_type [21161,21168]",
      "dest": "primitive_type [21079,21086]"
    },
    {
      "src": "(: ( [23541,23542]",
      "dest": "(: ( [23459,23460]"
    },
    {
      "src": "identifier: spender [26616,26623]",
      "dest": "identifier: spender [26534,26541]"
    },
    {
      "src": "call_argument [32743,32770]",
      "dest": "call_argument [32030,32057]"
    },
    {
      "src": "identifier: require [32735,32742]",
      "dest": "identifier: require [32022,32029]"
    },
    {
      "src": "parameter [13288,13300]",
      "dest": "parameter [13306,13318]"
    },
    {
      "src": "string [29568,29612]",
      "dest": "string [28855,28899]"
    },
    {
      "src": "expression_statement [26947,26970]",
      "dest": "expression_statement [26865,26888]"
    },
    {
      "src": "string [24476,24516]",
      "dest": "string [24394,24434]"
    },
    {
      "src": "(: ( [24286,24287]",
      "dest": "(: ( [24204,24205]"
    },
    {
      "src": "inheritance_specifier [27653,27666]",
      "dest": "inheritance_specifier [27501,27514]"
    },
    {
      "src": "internal: internal [30460,30468]",
      "dest": "internal: internal [29747,29755]"
    },
    {
      "src": "primitive_type [22734,22741]",
      "dest": "primitive_type [22652,22659]"
    },
    {
      "src": "function: function [13550,13558]",
      "dest": "function: function [13568,13576]"
    },
    {
      "src": "call_argument [13487,13509]",
      "dest": "call_argument [13505,13527]"
    },
    {
      "src": ",: , [6378,6379]",
      "dest": ",: , [6186,6187]"
    },
    {
      "src": "expression_statement [25119,25171]",
      "dest": "expression_statement [25037,25089]"
    },
    {
      "src": "identifier: require [25631,25638]",
      "dest": "identifier: require [25549,25556]"
    },
    {
      "src": "parameter [24206,24223]",
      "dest": "parameter [24124,24141]"
    },
    {
      "src": "type_name [20219,20268]",
      "dest": "type_name [20137,20186]"
    },
    {
      "src": "assignment_expression [31630,31980]",
      "dest": "assignment_expression [30917,31267]"
    },
    {
      "src": "external: external [6082,6090]",
      "dest": "external: external [5890,5898]"
    },
    {
      "src": "variable_declaration_statement [32822,33360]",
      "dest": "variable_declaration_statement [32109,32647]"
    },
    {
      "src": "comment: // Solidity only automatically asserts when dividing by 0 [4019,4076]",
      "dest": "comment: // Solidity only automatically asserts when dividing by 0 [3938,3995]"
    },
    {
      "src": "identifier: this [31949,31953]",
      "dest": "identifier: this [31236,31240]"
    },
    {
      "src": "identifier: approve [13831,13838]",
      "dest": "identifier: approve [13849,13856]"
    },
    {
      "src": "identifier: token [13377,13382]",
      "dest": "identifier: token [13395,13400]"
    },
    {
      "src": "identifier: approve [7465,7472]",
      "dest": "identifier: approve [7273,7280]"
    },
    {
      "src": "identifier: a [4736,4737]",
      "dest": "identifier: a [4655,4656]"
    },
    {
      "src": "primitive_type [6105,6112]",
      "dest": "primitive_type [5913,5920]"
    },
    {
      "src": "identifier: abi [15289,15292]",
      "dest": "identifier: abi [15307,15310]"
    },
    {
      "src": "parameter [20435,20442]",
      "dest": "parameter [20353,20360]"
    },
    {
      "src": "{: { [12158,12159]",
      "dest": "{: { [12176,12177]"
    },
    {
      "src": "call_argument [15106,15140]",
      "dest": "call_argument [15124,15158]"
    },
    {
      "src": "address: address [6065,6072]",
      "dest": "address: address [5873,5880]"
    },
    {
      "src": ",: , [32594,32595]",
      "dest": ",: , [31881,31882]"
    },
    {
      "src": "call_expression [22147,22268]",
      "dest": "call_expression [22065,22186]"
    },
    {
      "src": "primitive_type [31005,31012]",
      "dest": "primitive_type [30292,30299]"
    },
    {
      "src": "parameter [6065,6080]",
      "dest": "parameter [5873,5888]"
    },
    {
      "src": "contract_declaration [18152,18772]",
      "dest": "contract_declaration [18184,18804]"
    },
    {
      "src": "): ) [31796,31797]",
      "dest": "): ) [31083,31084]"
    },
    {
      "src": "contract_body [12158,15388]",
      "dest": "contract_body [12176,15406]"
    },
    {
      "src": "]: ] [25749,25750]",
      "dest": "]: ] [25667,25668]"
    },
    {
      "src": "identifier: account [25207,25214]",
      "dest": "identifier: account [25125,25132]"
    },
    {
      "src": "call_expression [3336,3375]",
      "dest": "call_expression [3255,3294]"
    },
    {
      "src": "boolean_literal [21014,21018]",
      "dest": "boolean_literal [20932,20936]"
    },
    {
      "src": "): ) [28647,28648]",
      "dest": "): ) [28495,28496]"
    },
    {
      "src": "\": \" [25022,25023]",
      "dest": "\": \" [24940,24941]"
    },
    {
      "src": "primitive_type [10172,10179]",
      "dest": "primitive_type [9874,9881]"
    },
    {
      "src": "identifier: transfer [6352,6360]",
      "dest": "identifier: transfer [6160,6168]"
    },
    {
      "src": "(: ( [3339,3340]",
      "dest": "(: ( [3258,3259]"
    },
    {
      "src": "call_argument [31115,31148]",
      "dest": "call_argument [30402,30435]"
    },
    {
      "src": "identifier: b [5521,5522]",
      "dest": "identifier: b [5440,5441]"
    },
    {
      "src": "return_statement [4242,4251]",
      "dest": "return_statement [4161,4170]"
    },
    {
      "src": "parameter [7524,7528]",
      "dest": "parameter [7332,7336]"
    },
    {
      "src": "type_name [12442,12448]",
      "dest": "type_name [12460,12466]"
    },
    {
      "src": "binary_expression [24999,25020]",
      "dest": "binary_expression [24917,24938]"
    },
    {
      "src": "state_mutability [20421,20425]",
      "dest": "state_mutability [20339,20343]"
    },
    {
      "src": "]: ] [24442,24443]",
      "dest": "]: ] [24360,24361]"
    },
    {
      "src": "(: ( [23446,23447]",
      "dest": "(: ( [23364,23365]"
    },
    {
      "src": "(: ( [5923,5924]",
      "dest": "(: ( [5731,5732]"
    },
    {
      "src": "(: ( [7938,7939]",
      "dest": "(: ( [7746,7747]"
    },
    {
      "src": "uint256: uint256 [5377,5384]",
      "dest": "uint256: uint256 [5296,5303]"
    },
    {
      "src": "): ) [23487,23488]",
      "dest": "): ) [23405,23406]"
    },
    {
      "src": ",: , [11218,11219]",
      "dest": ",: , [10920,10921]"
    },
    {
      "src": "visibility [23489,23495]",
      "dest": "visibility [23407,23413]"
    },
    {
      "src": "call_argument [33423,33424]",
      "dest": "call_argument [32710,32711]"
    },
    {
      "src": "identifier: account [27024,27031]",
      "dest": "identifier: account [26942,26949]"
    },
    {
      "src": "primitive_type [1893,1900]",
      "dest": "primitive_type [1812,1819]"
    },
    {
      "src": "function: function [24171,24179]",
      "dest": "function: function [24089,24097]"
    },
    {
      "src": "assignment_expression [25119,25170]",
      "dest": "assignment_expression [25037,25088]"
    },
    {
      "src": "identifier: _approve [26360,26368]",
      "dest": "identifier: _approve [26278,26286]"
    },
    {
      "src": "returns: returns [30659,30666]",
      "dest": "returns: returns [29946,29953]"
    },
    {
      "src": "primitive_type [24225,24232]",
      "dest": "primitive_type [24143,24150]"
    },
    {
      "src": "identifier: call [11426,11430]",
      "dest": "identifier: call [11128,11132]"
    },
    {
      "src": "identifier: ERROR_NOT_INITIALIZED [28479,28500]",
      "dest": "identifier: ERROR_NOT_INITIALIZED [28327,28348]"
    },
    {
      "src": "!: ! [16545,16546]",
      "dest": "!: ! [16675,16676]"
    },
    {
      "src": ".: . [31215,31216]",
      "dest": ".: . [30502,30503]"
    },
    {
      "src": "identifier: Transfer [25186,25194]",
      "dest": "identifier: Transfer [25104,25112]"
    },
    {
      "src": "(: ( [25891,25892]",
      "dest": "(: ( [25809,25810]"
    },
    {
      "src": "variable_declaration [11398,11410]",
      "dest": "variable_declaration [11100,11112]"
    },
    {
      "src": "state_mutability [6764,6768]",
      "dest": "state_mutability [6572,6576]"
    },
    {
      "src": "): ) [26544,26545]",
      "dest": "): ) [26462,26463]"
    },
    {
      "src": "identifier: data [14326,14330]",
      "dest": "identifier: data [14344,14348]"
    },
    {
      "src": "parameter [1409,1418]",
      "dest": "parameter [1328,1337]"
    },
    {
      "src": "parameter [1893,1902]",
      "dest": "parameter [1812,1821]"
    },
    {
      "src": "parameter [29173,29185]",
      "dest": "parameter [11642,11654]"
    },
    {
      "src": "identifier: accountHash [9814,9825]",
      "dest": "identifier: accountHash [9516,9527]"
    },
    {
      "src": "identifier: cs [17368,17370]",
      "dest": "identifier: cs [17498,17500]"
    },
    {
      "src": ",: , [31922,31923]",
      "dest": ",: , [31209,31210]"
    },
    {
      "src": "type_cast_expression [33627,33640]",
      "dest": "type_cast_expression [32914,32927]"
    },
    {
      "src": "): ) [32810,32811]",
      "dest": "): ) [32097,32098]"
    },
    {
      "src": "string [24291,24330]",
      "dest": "string [24209,24248]"
    },
    {
      "src": "identifier: Transfer [24599,24607]",
      "dest": "identifier: Transfer [24517,24525]"
    },
    {
      "src": "identifier: amount [7913,7919]",
      "dest": "identifier: amount [7721,7727]"
    },
    {
      "src": ":=: := [9759,9761]",
      "dest": ":=: := [9461,9463]"
    },
    {
      "src": "call_expression [22836,22886]",
      "dest": "call_expression [22754,22804]"
    },
    {
      "src": "type_name [20886,20893]",
      "dest": "type_name [20804,20811]"
    },
    {
      "src": "(: ( [11436,11437]",
      "dest": "(: ( [11138,11139]"
    },
    {
      "src": "type_cast_expression [30729,30751]",
      "dest": "type_cast_expression [30016,30038]"
    },
    {
      "src": "identifier: initialized [16245,16256]",
      "dest": "identifier: initialized [16300,16311]"
    },
    {
      "src": "identifier: sender [22190,22196]",
      "dest": "identifier: sender [22108,22114]"
    },
    {
      "src": "(: ( [13693,13694]",
      "dest": "(: ( [13711,13712]"
    },
    {
      "src": "expression_statement [24426,24518]",
      "dest": "expression_statement [24344,24436]"
    },
    {
      "src": "primitive_type [14313,14318]",
      "dest": "primitive_type [14331,14336]"
    },
    {
      "src": "contract_declaration [27625,28720]",
      "dest": "contract_declaration [27473,28568]"
    },
    {
      "src": "{: { [3318,3319]",
      "dest": "{: { [3237,3238]"
    },
    {
      "src": "call_argument [25763,25799]",
      "dest": "call_argument [25681,25717]"
    },
    {
      "src": "identifier: SafeMath [20135,20143]",
      "dest": "identifier: SafeMath [20053,20061]"
    },
    {
      "src": "(: ( [4772,4773]",
      "dest": "(: ( [4691,4692]"
    },
    {
      "src": "identifier: recipient [20894,20903]",
      "dest": "identifier: recipient [20812,20821]"
    },
    {
      "src": "identifier: sender [7878,7884]",
      "dest": "identifier: sender [7686,7692]"
    },
    {
      "src": "address: address [17305,17312]",
      "dest": "address: address [17435,17442]"
    },
    {
      "src": "call_argument [24291,24330]",
      "dest": "call_argument [24209,24248]"
    },
    {
      "src": "number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [9605,9671]",
      "dest": "number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [9307,9373]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-totalSupply}.      */ [20334,20385]",
      "dest": "comment: /**      * @dev See {IERC20-totalSupply}.      */ [20252,20303]"
    },
    {
      "src": "type_name [964,971]",
      "dest": "type_name [883,890]"
    },
    {
      "src": "(: ( [2324,2325]",
      "dest": "(: ( [2243,2244]"
    },
    {
      "src": "returns: returns [6405,6412]",
      "dest": "returns: returns [6213,6220]"
    },
    {
      "src": "parameter [32486,32503]",
      "dest": "parameter [31773,31790]"
    },
    {
      "src": "type_name [17497,17504]",
      "dest": "type_name [17627,17634]"
    },
    {
      "src": "internal: internal [5427,5435]",
      "dest": "internal: internal [5346,5354]"
    },
    {
      "src": "binary_expression [26445,26464]",
      "dest": "binary_expression [26363,26382]"
    },
    {
      "src": "type_name [32454,32460]",
      "dest": "type_name [31741,31747]"
    },
    {
      "src": "parameter [18483,18498]",
      "dest": "parameter [18515,18530]"
    },
    {
      "src": "uint256: uint256 [12680,12687]",
      "dest": "uint256: uint256 [12698,12705]"
    },
    {
      "src": "internal: internal [26927,26935]",
      "dest": "internal: internal [26845,26853]"
    },
    {
      "src": "internal: internal [1431,1439]",
      "dest": "internal: internal [1350,1358]"
    },
    {
      "src": "address: address [13393,13400]",
      "dest": "address: address [13411,13418]"
    },
    {
      "src": "uint256: uint256 [20905,20912]",
      "dest": "uint256: uint256 [20823,20830]"
    },
    {
      "src": "assignment_expression [16789,16809]",
      "dest": "assignment_expression [16919,16939]"
    },
    {
      "src": "{: { [15181,15182]",
      "dest": "{: { [15199,15200]"
    },
    {
      "src": "identifier: _approve [22804,22812]",
      "dest": "identifier: _approve [22722,22730]"
    },
    {
      "src": ",: , [12480,12481]",
      "dest": ",: , [12498,12499]"
    },
    {
      "src": "identifier: c [4133,4134]",
      "dest": "identifier: c [4052,4053]"
    },
    {
      "src": "call_argument [21476,21483]",
      "dest": "call_argument [21394,21401]"
    },
    {
      "src": "external: external [30645,30653]",
      "dest": "external: external [29932,29940]"
    },
    {
      "src": "type_name [22734,22741]",
      "dest": "type_name [22652,22659]"
    },
    {
      "src": "primitive_type [24279,24286]",
      "dest": "primitive_type [24197,24204]"
    },
    {
      "src": "(: ( [28671,28672]",
      "dest": "(: ( [28519,28520]"
    },
    {
      "src": "(: ( [18361,18362]",
      "dest": "(: ( [18393,18394]"
    },
    {
      "src": ",: , [13518,13519]",
      "dest": ",: , [13536,13537]"
    },
    {
      "src": ",: , [29048,29049]",
      "dest": ",: , [11517,11518]"
    },
    {
      "src": "primitive_type [8137,8144]",
      "dest": "primitive_type [7945,7952]"
    },
    {
      "src": "type_cast_expression [13686,13699]",
      "dest": "type_cast_expression [13704,13717]"
    },
    {
      "src": "}: } [9783,9784]",
      "dest": "}: } [9485,9486]"
    },
    {
      "src": "identifier: Address [31208,31215]",
      "dest": "identifier: Address [30495,30502]"
    },
    {
      "src": "call_argument [33531,33566]",
      "dest": "call_argument [32818,32853]"
    },
    {
      "src": "type_name [6738,6745]",
      "dest": "type_name [6546,6553]"
    },
    {
      "src": "address: address [32406,32413]",
      "dest": "address: address [31693,31700]"
    },
    {
      "src": "call_argument [15321,15365]",
      "dest": "call_argument [15339,15383]"
    },
    {
      "src": ",: , [33224,33225]",
      "dest": ",: , [32511,32512]"
    },
    {
      "src": "identifier: digest [33409,33415]",
      "dest": "identifier: digest [32696,32702]"
    },
    {
      "src": "primitive_type [26369,26376]",
      "dest": "primitive_type [26287,26294]"
    },
    {
      "src": "primitive_type [20905,20912]",
      "dest": "primitive_type [20823,20830]"
    },
    {
      "src": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      *      * _Available since v2.4.0._      */ [10205,11168]",
      "dest": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      *      * _Available since v2.4.0._      */ [9907,10870]"
    },
    {
      "src": "): ) [31174,31175]",
      "dest": "): ) [30461,30462]"
    },
    {
      "src": "identifier: value [12490,12495]",
      "dest": "identifier: value [12508,12513]"
    },
    {
      "src": "{: { [13636,13637]",
      "dest": "{: { [13654,13655]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [20663,20862]",
      "dest": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [20581,20780]"
    },
    {
      "src": "uint256: uint256 [6778,6785]",
      "dest": "uint256: uint256 [6586,6593]"
    },
    {
      "src": "identifier: IERC20 [5815,5821]",
      "dest": "identifier: IERC20 [5623,5629]"
    },
    {
      "src": "expression_statement [24528,24584]",
      "dest": "expression_statement [24446,24502]"
    },
    {
      "src": "(: ( [2705,2706]",
      "dest": "(: ( [2624,2625]"
    },
    {
      "src": "function_definition [28118,28198]",
      "dest": "function_definition [27966,28046]"
    },
    {
      "src": "identifier: ERROR_WORMHOLE_NOT_CONTRACT [29527,29554]",
      "dest": "identifier: ERROR_WORMHOLE_NOT_CONTRACT [28814,28841]"
    },
    {
      "src": "identifier: isTopLevelCall [16622,16636]",
      "dest": "identifier: isTopLevelCall [16752,16766]"
    },
    {
      "src": "array_access [27012,27046]",
      "dest": "array_access [26930,26964]"
    },
    {
      "src": "visibility [22771,22777]",
      "dest": "visibility [22689,22695]"
    },
    {
      "src": "function: function [11174,11182]",
      "dest": "function: function [10876,10884]"
    },
    {
      "src": "{: { [5822,5823]",
      "dest": "{: { [5630,5631]"
    },
    {
      "src": "): ) [15049,15050]",
      "dest": "): ) [15067,15068]"
    },
    {
      "src": "function_body [11245,11545]",
      "dest": "function_body [10947,11247]"
    },
    {
      "src": "call_argument [26524,26545]",
      "dest": "call_argument [26442,26463]"
    },
    {
      "src": "primitive_type [2370,2377]",
      "dest": "primitive_type [2289,2296]"
    },
    {
      "src": "primitive_type [33759,33766]",
      "dest": "primitive_type [33046,33053]"
    },
    {
      "src": "identifier: amount [25843,25849]",
      "dest": "identifier: amount [25761,25767]"
    },
    {
      "src": ">=: >= [11286,11288]",
      "dest": ">=: >= [10988,10990]"
    },
    {
      "src": "assembly: assembly [31567,31575]",
      "dest": "assembly: assembly [30854,30862]"
    },
    {
      "src": "[: [ [23579,23580]",
      "dest": "[: [ [23497,23498]"
    },
    {
      "src": "expression_statement [13438,13535]",
      "dest": "expression_statement [13456,13553]"
    },
    {
      "src": "type_name [998,1005]",
      "dest": "type_name [917,924]"
    },
    {
      "src": "internal: internal [12695,12703]",
      "dest": "internal: internal [12713,12721]"
    },
    {
      "src": "bool: bool [22083,22087]",
      "dest": "bool: bool [22001,22005]"
    },
    {
      "src": "): ) [9269,9270]",
      "dest": "): ) [8971,8972]"
    },
    {
      "src": "state_mutability [984,988]",
      "dest": "state_mutability [903,907]"
    },
    {
      "src": "identifier: require [28448,28455]",
      "dest": "identifier: require [28296,28303]"
    },
    {
      "src": "}: } [25230,25231]",
      "dest": "}: } [25148,25149]"
    },
    {
      "src": "[: [ [27122,27123]",
      "dest": "[: [ [27040,27041]"
    },
    {
      "src": "(: ( [7472,7473]",
      "dest": "(: ( [7280,7281]"
    },
    {
      "src": "primitive_type [29059,29066]",
      "dest": "primitive_type [11528,11535]"
    },
    {
      "src": "(: ( [25874,25875]",
      "dest": "(: ( [25792,25793]"
    },
    {
      "src": "number_literal: 0 [2620,2621]",
      "dest": "number_literal: 0 [2539,2540]"
    },
    {
      "src": "): ) [24582,24583]",
      "dest": "): ) [24500,24501]"
    },
    {
      "src": "identifier: account [10097,10104]",
      "dest": "identifier: account [9799,9806]"
    },
    {
      "src": ",: , [33086,33087]",
      "dest": ",: , [32373,32374]"
    },
    {
      "src": "primitive_type [29503,29509]",
      "dest": "primitive_type [28790,28796]"
    },
    {
      "src": "call_argument [31227,31243]",
      "dest": "call_argument [30514,30530]"
    },
    {
      "src": "(: ( [26952,26953]",
      "dest": "(: ( [26870,26871]"
    },
    {
      "src": "identifier: arbiterFee [32522,32532]",
      "dest": "identifier: arbiterFee [31809,31819]"
    },
    {
      "src": "parameter [22016,22030]",
      "dest": "parameter [21934,21948]"
    },
    {
      "src": "call_argument [13464,13533]",
      "dest": "call_argument [13482,13551]"
    },
    {
      "src": "return_type_definition [10120,10145]",
      "dest": "return_type_definition [9822,9847]"
    },
    {
      "src": "call_argument [14883,14888]",
      "dest": "call_argument [14901,14906]"
    },
    {
      "src": "): ) [13052,13053]",
      "dest": "): ) [13070,13071]"
    },
    {
      "src": "identifier: b [4094,4095]",
      "dest": "identifier: b [4013,4014]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [5966,6040]",
      "dest": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [5774,5848]"
    },
    {
      "src": "function: function [30628,30636]",
      "dest": "function: function [29915,29923]"
    },
    {
      "src": "function_definition [25563,25911]",
      "dest": "function_definition [25481,25829]"
    },
    {
      "src": "identifier: safeTransferFrom [12425,12441]",
      "dest": "identifier: safeTransferFrom [12443,12459]"
    },
    {
      "src": "comment: /**      * @notice Function to initialize the contract      * @param _tokenAddress - address of ERC20 token that will be transfered      * @param _wormholeAddress - address for Wormhole proxy contract      */ [30767,30979]",
      "dest": "comment: /**      * @notice Function to initialize the contract      * @param _tokenAddress - address of ERC20 token that will be transfered      * @param _wormholeAddress - address for Wormhole proxy contract      */ [30054,30266]"
    },
    {
      "src": "!=: != [9838,9840]",
      "dest": "!=: != [9540,9542]"
    },
    {
      "src": "type_name [21436,21440]",
      "dest": "type_name [21354,21358]"
    },
    {
      "src": "identifier: value [8430,8435]",
      "dest": "identifier: value [8238,8243]"
    },
    {
      "src": "}: } [31619,31620]",
      "dest": "}: } [30906,30907]"
    },
    {
      "src": "return: return [22279,22285]",
      "dest": "return: return [22197,22203]"
    },
    {
      "src": "string_literal [24476,24516]",
      "dest": "string_literal [24394,24434]"
    },
    {
      "src": "): ) [13008,13009]",
      "dest": "): ) [13026,13027]"
    },
    {
      "src": "string [13074,13130]",
      "dest": "string [13092,13148]"
    },
    {
      "src": "=: = [26625,26626]",
      "dest": "=: = [26543,26544]"
    },
    {
      "src": "pure: pure [984,988]",
      "dest": "pure: pure [903,907]"
    },
    {
      "src": "uint256: uint256 [2670,2677]",
      "dest": "uint256: uint256 [2589,2596]"
    },
    {
      "src": "(: ( [17385,17386]",
      "dest": "(: ( [17515,17516]"
    },
    {
      "src": ",: , [31896,31897]",
      "dest": ",: , [31183,31184]"
    },
    {
      "src": "address: address [12470,12477]",
      "dest": "address: address [12488,12495]"
    },
    {
      "src": "(: ( [13013,13014]",
      "dest": "(: ( [13031,13032]"
    },
    {
      "src": "call_argument [4101,4113]",
      "dest": "call_argument [4020,4032]"
    },
    {
      "src": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [108,683]",
      "dest": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [27,602]"
    },
    {
      "src": "returns: returns [22778,22785]",
      "dest": "returns: returns [22696,22703]"
    },
    {
      "src": "return_statement [22898,22910]",
      "dest": "return_statement [22816,22828]"
    },
    {
      "src": "identifier: codehash [9829,9837]",
      "dest": "identifier: codehash [9531,9539]"
    },
    {
      "src": "primitive_type [20248,20255]",
      "dest": "primitive_type [20166,20173]"
    },
    {
      "src": "parameter [6778,6785]",
      "dest": "parameter [6586,6593]"
    },
    {
      "src": "identifier: keccak256 [31816,31825]",
      "dest": "identifier: keccak256 [31103,31112]"
    },
    {
      "src": "call_argument [33627,33640]",
      "dest": "call_argument [32914,32927]"
    },
    {
      "src": "return_type_definition [18474,18499]",
      "dest": "return_type_definition [18506,18531]"
    },
    {
      "src": "(: ( [22215,22216]",
      "dest": "(: ( [22133,22134]"
    },
    {
      "src": "array_access [32655,32667]",
      "dest": "array_access [31942,31954]"
    },
    {
      "src": "call_argument [1054,1060]",
      "dest": "call_argument [973,979]"
    },
    {
      "src": "public: public [30343,30349]",
      "dest": "public: public [29630,29636]"
    },
    {
      "src": "variable_declaration_statement [4125,4143]",
      "dest": "variable_declaration_statement [4044,4062]"
    },
    {
      "src": "(: ( [13170,13171]",
      "dest": "(: ( [13188,13189]"
    },
    {
      "src": "user_defined_type [12649,12655]",
      "dest": "user_defined_type [12667,12673]"
    },
    {
      "src": "identifier: token [29043,29048]",
      "dest": "identifier: token [11512,11517]"
    },
    {
      "src": "identifier: IERC20 [12649,12655]",
      "dest": "identifier: IERC20 [12667,12673]"
    },
    {
      "src": "): ) [15179,15180]",
      "dest": "): ) [15197,15198]"
    },
    {
      "src": "uint256: uint256 [21404,21411]",
      "dest": "uint256: uint256 [21322,21329]"
    },
    {
      "src": "call_argument [28479,28500]",
      "dest": "call_argument [28327,28348]"
    },
    {
      "src": "interface: interface [5805,5814]",
      "dest": "interface: interface [5613,5622]"
    },
    {
      "src": "address: address [21387,21394]",
      "dest": "address: address [21305,21312]"
    },
    {
      "src": "binary_expression [1030,1035]",
      "dest": "binary_expression [949,954]"
    },
    {
      "src": "function: function [5903,5911]",
      "dest": "function: function [5711,5719]"
    },
    {
      "src": ",: , [31856,31857]",
      "dest": ",: , [31143,31144]"
    },
    {
      "src": "identifier: _approve [22147,22155]",
      "dest": "identifier: _approve [22065,22073]"
    },
    {
      "src": "uint256: uint256 [6380,6387]",
      "dest": "uint256: uint256 [6188,6195]"
    },
    {
      "src": "=: = [31322,31323]",
      "dest": "=: = [30609,30610]"
    },
    {
      "src": "=: = [25824,25825]",
      "dest": "=: = [25742,25743]"
    }
  ],
  "actions": [
    {
      "action": "move-tree",
      "tree": "comment: // File: @openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol [0,77]",
      "parent": "source_file [0,33206]",
      "at": 11
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: @openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol [5537,5619]",
      "parent": "source_file [0,33206]",
      "at": 11
    },
    {
      "action": "move-tree",
      "tree": "interface_declaration [28975,29205]",
      "parent": "source_file [0,33206]",
      "at": 12
    },
    {
      "action": "move-tree",
      "tree": "comment: // File: @openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol [8444,8521]",
      "parent": "source_file [0,33206]",
      "at": 16
    },
    {
      "action": "update-node",
      "tree": "comment: // File: @openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol [0,77]",
      "label": "// Interface for interaction with Wormhole v2 TokenBridge"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: @openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol [5537,5619]",
      "label": "// https://github.com/certusone/wormhole/blob/7e2cf1f9818099c63c21d101afbfedb1903ee9ba/ethereum/contracts/bridge/Bridge.sol#L93"
    },
    {
      "action": "update-node",
      "tree": "comment: // File: @openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol [8444,8521]",
      "label": "// SPDX-License-Identifier: MIT"
    },
    {
      "action": "insert-tree",
      "tree": "state_variable_declaration [16117,16144]",
      "parent": "contract_body [16112,17660]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "state_variable_declaration [16154,16178]",
      "parent": "contract_body [16112,17660]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "state_variable_declaration [16182,16206]",
      "parent": "contract_body [16112,17660]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [16557,16626]",
      "parent": "function_body [16550,16952]",
      "at": 1
    },
    {
      "action": "update-node",
      "tree": "number_literal: 50 [17505,17507]",
      "label": "47"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [5623,5646]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [8525,8548]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // File: @openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol [11552,11637]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [11641,11664]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // File: @openzeppelin/upgrades/contracts/Initializable.sol [15392,15451]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [15455,15487]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // File: @openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol [17534,17609]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [17613,17636]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // File: @openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol [18776,18857]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [18861,18884]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // File: contracts/InitializableV2.sol [27152,27190]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [27194,27226]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // File: contracts/IWormhole.sol [28724,28756]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [28760,28783]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // Interface for interaction with Wormhole v2 TokenBridge [28787,28844]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // https://github.com/certusone/wormhole/blob/7e2cf1f9818099c63c21d101afbfedb1903ee9ba/ethereum/contracts/bridge/Bridge.sol#L93 [28846,28973]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // File: contracts/WormholeClient.sol [29209,29246]"
    },
    {
      "action": "delete-tree",
      "tree": "pragma_directive [29250,29273]"
    }
  ]
}