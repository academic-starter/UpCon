<?xml version="1.0" ?>
<matches>
  <match src="parameter [92426,92433]" dest="parameter [31812,31819]"/>
  <match src="call_argument [99772,99778]" dest="call_argument [39158,39164]"/>
  <match src="uint256: uint256 [62986,62993]" dest="uint256: uint256 [82766,82773]"/>
  <match src="(: ( [1325,1326]" dest="(: ( [1853,1854]"/>
  <match src=",: , [30995,30996]" dest=",: , [48707,48708]"/>
  <match src="public: public [90925,90931]" dest="public: public [30311,30317]"/>
  <match src="identifier: D256 [8359,8363]" dest="identifier: D256 [8887,8891]"/>
  <match src="identifier: self [7984,7988]" dest="identifier: self [8512,8516]"/>
  <match src="identifier: account [92722,92729]" dest="identifier: account [32108,32115]"/>
  <match src="primitive_type [26111,26118]" dest="primitive_type [55621,55628]"/>
  <match src="uint256: uint256 [3239,3246]" dest="uint256: uint256 [3767,3774]"/>
  <match src="using_directive [62663,62694]" dest="using_directive [65504,65535]"/>
  <match src="identifier: epoch [100687,100692]" dest="identifier: epoch [40073,40078]"/>
  <match src="type_cast_expression [41566,41631]" dest="type_cast_expression [11663,11728]"/>
  <match src="function_body [81985,82832]" dest="function_body [79964,80829]"/>
  <match src=".: . [79471,79472]" dest=".: . [71034,71035]"/>
  <match src="return: return [46304,46310]" dest="return: return [16401,16407]"/>
  <match src="identifier: liquidity [54103,54112]" dest="identifier: liquidity [22227,22236]"/>
  <match src=".: . [98245,98246]" dest=".: . [37631,37632]"/>
  <match src="]: ] [103440,103441]" dest="]: ] [42826,42827]"/>
  <match src="parameter [22301,22315]" dest="parameter [58913,58927]"/>
  <match src="): ) [7828,7829]" dest="): ) [8356,8357]"/>
  <match src="uint256: uint256 [104485,104492]" dest="uint256: uint256 [43871,43878]"/>
  <match src="function: function [4640,4648]" dest="function: function [5168,5176]"/>
  <match src="identifier: D256 [9566,9570]" dest="identifier: D256 [10094,10098]"/>
  <match src="(: ( [44991,44992]" dest="(: ( [15088,15089]"/>
  <match src="assignment_expression [104021,104132]" dest="assignment_expression [43407,43518]"/>
  <match src="private: private [64181,64188]" dest="private: private [81617,81624]"/>
  <match src="): ) [28158,28159]" dest="): ) [45870,45871]"/>
  <match src="member_expression [7806,7816]" dest="member_expression [8334,8344]"/>
  <match src="internal: internal [98181,98189]" dest="internal: internal [37567,37575]"/>
  <match src="visibility [45002,45010]" dest="visibility [15099,15107]"/>
  <match src="false [64124,64129]" dest="false [81700,81705]"/>
  <match src="for_statement [33076,33647]" dest="for_statement [50788,51359]"/>
  <match src="address: address [41566,41573]" dest="address: address [11663,11670]"/>
  <match src="visibility [91408,91414]" dest="visibility [30794,30800]"/>
  <match src=".: . [101401,101402]" dest=".: . [40787,40788]"/>
  <match src="return_statement [90963,90973]" dest="return_statement [30349,30359]"/>
  <match src="uint256: uint256 [42392,42399]" dest="uint256: uint256 [12489,12496]"/>
  <match src="identifier: amount [101370,101376]" dest="identifier: amount [40756,40762]"/>
  <match src="(: ( [29842,29843]" dest="(: ( [47554,47555]"/>
  <match src="function_definition [19633,20097]" dest="function_definition [63755,64747]"/>
  <match src="view: view [94783,94787]" dest="view: view [34169,34173]"/>
  <match src="external: external [54277,54285]" dest="external: external [22401,22409]"/>
  <match src="uint: uint [52489,52493]" dest="uint: uint [20613,20617]"/>
  <match src="&quot;: &quot; [56276,56277]" dest="&quot;: &quot; [72780,72781]"/>
  <match src="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [11990,12254]" dest="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [23291,23555]"/>
  <match src="(: ( [19925,19926]" dest="(: ( [56729,56730]"/>
  <match src="(: ( [95526,95527]" dest="(: ( [34912,34913]"/>
  <match src="identifier: value [80984,80989]" dest="identifier: value [72521,72526]"/>
  <match src="call_expression [23063,23089]" dest="call_expression [55952,55986]"/>
  <match src="identifier: FILE [106055,106059]" dest="identifier: FILE [69199,69203]"/>
  <match src="binary_expression [35390,35396]" dest="binary_expression [53102,53108]"/>
  <match src="identifier: amount [98612,98618]" dest="identifier: amount [37998,38004]"/>
  <match src="state_mutability [70456,70460]" dest="state_mutability [81625,81629]"/>
  <match src="call_expression [80345,80380]" dest="call_expression [66618,66643]"/>
  <match src=".: . [104513,104514]" dest=".: . [43899,43900]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [34909,34941]" dest="comment: // populate the result with &quot;0x&quot; [52621,52653]"/>
  <match src="identifier: amount [101829,101835]" dest="identifier: amount [41215,41221]"/>
  <match src="type_name [34889,34894]" dest="type_name [52601,52606]"/>
  <match src="number_literal: 240 [42743,42746]" dest="number_literal: 240 [12840,12843]"/>
  <match src="expression_statement [100389,100455]" dest="expression_statement [39775,39841]"/>
  <match src="event_paramater [53187,53199]" dest="event_paramater [21311,21323]"/>
  <match src=".: . [92978,92979]" dest=".: . [32364,32365]"/>
  <match src="{: { [86528,86529]" dest="{: { [28319,28320]"/>
  <match src="view: view [94641,94645]" dest="view: view [34027,34031]"/>
  <match src="function_definition [8022,8226]" dest="function_definition [8550,8754]"/>
  <match src="expression_statement [7599,7622]" dest="expression_statement [8127,8150]"/>
  <match src="(: ( [82196,82197]" dest="(: ( [78310,78311]"/>
  <match src="state_mutability [92028,92032]" dest="state_mutability [31414,31418]"/>
  <match src="identifier: length [33964,33970]" dest="identifier: length [51676,51682]"/>
  <match src="string_literal [81756,81792]" dest="string_literal [80581,80599]"/>
  <match src="identifier: _state [99583,99589]" dest="identifier: _state [38969,38975]"/>
  <match src="primitive_type [77288,77295]" dest="primitive_type [79936,79943]"/>
  <match src="call_argument [101218,101224]" dest="call_argument [40604,40610]"/>
  <match src="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [84848,84903]" dest="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [74176,74231]"/>
  <match src="identifier: totalSupply [92736,92747]" dest="identifier: totalSupply [32122,32133]"/>
  <match src="primitive_type [47970,47977]" dest="primitive_type [55704,55711]"/>
  <match src="type_name [41446,41453]" dest="type_name [11543,11550]"/>
  <match src="): ) [49615,49616]" dest="): ) [25998,25999]"/>
  <match src="}: } [47999,48000]" dest="}: } [55868,55869]"/>
  <match src="identifier: amount [100198,100204]" dest="identifier: amount [39584,39590]"/>
  <match src="visibility [95738,95744]" dest="visibility [35124,35130]"/>
  <match src="uint256: uint256 [45557,45564]" dest="uint256: uint256 [15654,15661]"/>
  <match src=",: , [32477,32478]" dest=",: , [50189,50190]"/>
  <match src="assignment_expression [98510,98563]" dest="assignment_expression [37896,37949]"/>
  <match src="parameter [99537,99557]" dest="parameter [38923,38943]"/>
  <match src="state_mutability [84639,84643]" dest="state_mutability [73967,73971]"/>
  <match src="pure: pure [45543,45547]" dest="pure: pure [15640,15644]"/>
  <match src="constant: constant [27628,27636]" dest="constant: constant [45340,45348]"/>
  <match src="array_access [94681,94701]" dest="array_access [34067,34087]"/>
  <match src="function_body [46599,46639]" dest="function_body [16696,16736]"/>
  <match src="): ) [106016,106017]" dest="): ) [69160,69161]"/>
  <match src="]: ] [102390,102391]" dest="]: ] [41776,41777]"/>
  <match src="uint256: uint256 [11527,11534]" dest="uint256: uint256 [22828,22835]"/>
  <match src="uint256: uint256 [90488,90495]" dest="uint256: uint256 [29874,29881]"/>
  <match src="(: ( [98555,98556]" dest="(: ( [37941,37942]"/>
  <match src="=: = [42447,42448]" dest="=: = [12544,12545]"/>
  <match src="&quot;: &quot; [62739,62740]" dest="&quot;: &quot; [60349,60350]"/>
  <match src="identifier: D256 [8143,8147]" dest="identifier: D256 [8671,8675]"/>
  <match src="return_statement [66453,66469]" dest="return_statement [62295,62382]"/>
  <match src="identifier: mul [6953,6956]" dest="identifier: mul [7481,7484]"/>
  <match src="identifier: add [100098,100101]" dest="identifier: add [39484,39487]"/>
  <match src="primitive_type [30736,30743]" dest="primitive_type [48448,48455]"/>
  <match src=",: , [4673,4674]" dest=",: , [5201,5202]"/>
  <match src="new: new [34885,34888]" dest="new: new [52597,52600]"/>
  <match src="expression_statement [79497,79512]" dest="expression_statement [56780,56795]"/>
  <match src="internal: internal [103142,103150]" dest="internal: internal [42528,42536]"/>
  <match src="function_definition [43449,43535]" dest="function_definition [13546,13632]"/>
  <match src="visibility [52216,52224]" dest="visibility [20340,20348]"/>
  <match src="(: ( [91912,91913]" dest="(: ( [31298,31299]"/>
  <match src="identifier: rejectFor [96109,96118]" dest="identifier: rejectFor [35495,35504]"/>
  <match src="identifier: outstanding [94710,94721]" dest="identifier: outstanding [34096,34107]"/>
  <match src="primitive_type [34962,34966]" dest="primitive_type [52674,52678]"/>
  <match src="if: if [1962,1964]" dest="if: if [2490,2492]"/>
  <match src="{: { [96712,96713]" dest="{: { [36098,36099]"/>
  <match src="type_name [1264,1271]" dest="type_name [1792,1799]"/>
  <match src="&quot;: &quot; [33868,33869]" dest="&quot;: &quot; [51580,51581]"/>
  <match src="call_argument [99821,99822]" dest="call_argument [39207,39208]"/>
  <match src="primitive_type [76592,76599]" dest="primitive_type [62419,62426]"/>
  <match src="): ) [54315,54316]" dest="): ) [22439,22440]"/>
  <match src="primitive_type [101915,101922]" dest="primitive_type [41301,41308]"/>
  <match src="=: = [42054,42055]" dest="=: = [12151,12152]"/>
  <match src="parameter [32008,32022]" dest="parameter [49720,49734]"/>
  <match src="number_literal: 4 [36487,36488]" dest="number_literal: 4 [54199,54200]"/>
  <match src="number_literal: 0 [33992,33993]" dest="number_literal: 0 [51704,51705]"/>
  <match src="member_expression [82694,82704]" dest="member_expression [62762,62772]"/>
  <match src="(: ( [53578,53579]" dest="(: ( [21702,21703]"/>
  <match src="private: private [42701,42708]" dest="private: private [12798,12805]"/>
  <match src="function: function [9713,9721]" dest="function: function [10241,10249]"/>
  <match src="function: function [7844,7852]" dest="function: function [8372,8380]"/>
  <match src="(: ( [82559,82560]" dest="(: ( [72655,72656]"/>
  <match src="type_name [98300,98307]" dest="type_name [37686,37693]"/>
  <match src="identifier: offset [94424,94430]" dest="identifier: offset [33810,33816]"/>
  <match src="if_statement [63985,64141]" dest="if_statement [67907,67964]"/>
  <match src=".: . [92191,92192]" dest=".: . [31577,31578]"/>
  <match src="identifier: b [4753,4754]" dest="identifier: b [5281,5282]"/>
  <match src="identifier: _state [102010,102016]" dest="identifier: _state [41396,41402]"/>
  <match src="string [4102,4128]" dest="string [4630,4656]"/>
  <match src="(: ( [2051,2052]" dest="(: ( [2579,2580]"/>
  <match src="bytes32: bytes32 [28246,28253]" dest="bytes32: bytes32 [45958,45965]"/>
  <match src="type_name [52534,52541]" dest="type_name [20658,20665]"/>
  <match src="identifier: account [104438,104445]" dest="identifier: account [43824,43831]"/>
  <match src="user_defined_type [9315,9319]" dest="user_defined_type [9843,9847]"/>
  <match src="variable_declaration_tuple [89021,89056]" dest="variable_declaration_tuple [76211,76246]"/>
  <match src="(: ( [52911,52912]" dest="(: ( [21035,21036]"/>
  <match src="identifier: setImplementation [88974,88991]" dest="identifier: setImplementation [76164,76181]"/>
  <match src="function_definition [61897,61945]" dest="function_definition [26952,27000]"/>
  <match src="return_type_definition [92033,92050]" dest="return_type_definition [31419,31436]"/>
  <match src="binary_expression [431,436]" dest="binary_expression [959,964]"/>
  <match src="external: external [61913,61921]" dest="external: external [26968,26976]"/>
  <match src="type_name [101060,101066]" dest="type_name [40446,40452]"/>
  <match src="return: return [92061,92067]" dest="return: return [31447,31453]"/>
  <match src=".: . [10041,10042]" dest=".: . [10569,10570]"/>
  <match src="identifier: COMMA [31150,31155]" dest="identifier: COMMA [48862,48867]"/>
  <match src="visibility [8286,8294]" dest="visibility [8814,8822]"/>
  <match src="string [106073,106095]" dest="string [69217,69239]"/>
  <match src="string: string [98620,98626]" dest="string: string [38006,38012]"/>
  <match src="visibility [91136,91142]" dest="visibility [30522,30528]"/>
  <match src="event_paramater [13699,13712]" dest="event_paramater [25000,25013]"/>
  <match src="}: } [915,916]" dest="}: } [1443,1444]"/>
  <match src="event_paramater [79240,79256]" dest="event_paramater [82837,82851]"/>
  <match src="function_definition [104145,104405]" dest="function_definition [43531,43791]"/>
  <match src="identifier: msg [78615,78618]" dest="identifier: msg [63178,63181]"/>
  <match src=".: . [92301,92302]" dest=".: . [31687,31688]"/>
  <match src="identifier: b [7709,7710]" dest="identifier: b [8237,8238]"/>
  <match src="}: } [46028,46029]" dest="}: } [16125,16126]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [48873,49553]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [25256,25936]"/>
  <match src="visibility [7036,7044]" dest="visibility [7564,7572]"/>
  <match src="parameter [95891,95898]" dest="parameter [35277,35284]"/>
  <match src="(: ( [1679,1680]" dest="(: ( [2207,2208]"/>
  <match src="uint256: uint256 [41446,41453]" dest="uint256: uint256 [11543,11550]"/>
  <match src="assembly_statement [33498,33591]" dest="assembly_statement [51210,51303]"/>
  <match src="primitive_type [2639,2646]" dest="primitive_type [3167,3174]"/>
  <match src="(: ( [104382,104383]" dest="(: ( [43768,43769]"/>
  <match src="identifier: sub [102149,102152]" dest="identifier: sub [41535,41538]"/>
  <match src="identifier: Vote [95618,95622]" dest="identifier: Vote [35004,35008]"/>
  <match src="event_paramater [13657,13677]" dest="event_paramater [24958,24978]"/>
  <match src="): ) [48692,48693]" dest="): ) [62623,62624]"/>
  <match src="type_name [98620,98626]" dest="type_name [38006,38012]"/>
  <match src="uint256: uint256 [100190,100197]" dest="uint256: uint256 [39576,39583]"/>
  <match src="(: ( [1724,1725]" dest="(: ( [2252,2253]"/>
  <match src="return_type_definition [45316,45333]" dest="return_type_definition [15413,15430]"/>
  <match src="yul_path [33544,33550]" dest="yul_path [51256,51262]"/>
  <match src="identifier: candidate [96479,96488]" dest="identifier: candidate [35865,35874]"/>
  <match src="{: { [7428,7429]" dest="{: { [7956,7957]"/>
  <match src="identifier: sub [8031,8034]" dest="identifier: sub [8559,8562]"/>
  <match src="member_expression [8575,8585]" dest="member_expression [9103,9113]"/>
  <match src="revert: revert [30159,30165]" dest="revert: revert [47871,47877]"/>
  <match src="type_name [11978,11982]" dest="type_name [23279,23283]"/>
  <match src="identifier: value [82799,82804]" dest="identifier: candidate [80812,80821]"/>
  <match src="): ) [8216,8217]" dest="): ) [8744,8745]"/>
  <match src="primitive_type [64236,64243]" dest="primitive_type [80044,80051]"/>
  <match src="): ) [29851,29852]" dest="): ) [47563,47564]"/>
  <match src="): ) [92286,92287]" dest="): ) [31672,31673]"/>
  <match src="type_name [419,426]" dest="type_name [947,954]"/>
  <match src="call_expression [81010,81030]" dest="call_expression [72597,72617]"/>
  <match src="(: ( [94397,94398]" dest="(: ( [33783,33784]"/>
  <match src="parameter [28783,28795]" dest="parameter [46495,46507]"/>
  <match src="primitive_type [54391,54398]" dest="primitive_type [22515,22522]"/>
  <match src="{: { [92262,92263]" dest="{: { [31648,31649]"/>
  <match src="): ) [53662,53663]" dest="): ) [21786,21787]"/>
  <match src="primitive_type [97867,97874]" dest="primitive_type [37253,37260]"/>
  <match src="parameter [9841,9848]" dest="parameter [10369,10376]"/>
  <match src="function: function [9270,9278]" dest="function: function [9798,9806]"/>
  <match src="state_mutability [71142,71146]" dest="state_mutability [67126,67130]"/>
  <match src="member_expression [101778,101793]" dest="member_expression [41164,41179]"/>
  <match src="visibility [42546,42553]" dest="visibility [12643,12650]"/>
  <match src="): ) [407,408]" dest="): ) [935,936]"/>
  <match src="call_argument [43811,43961]" dest="call_argument [13908,14058]"/>
  <match src="{: { [90869,90870]" dest="{: { [30255,30256]"/>
  <match src="identifier: debt [98547,98551]" dest="identifier: debt [37933,37937]"/>
  <match src="identifier: div [82583,82586]" dest="identifier: div [72671,72674]"/>
  <match src="identifier: Decimal [65689,65696]" dest="identifier: Decimal [81754,81761]"/>
  <match src="binary_expression [4753,4759]" dest="binary_expression [5281,5287]"/>
  <match src="): ) [6302,6303]" dest="): ) [6830,6831]"/>
  <match src=",: , [50704,50705]" dest=",: , [55406,55407]"/>
  <match src="return_type_definition [52928,52945]" dest="return_type_definition [21052,21069]"/>
  <match src="primitive_type [36801,36805]" dest="primitive_type [54513,54517]"/>
  <match src="identifier: spender [97858,97865]" dest="identifier: spender [37244,37251]"/>
  <match src="view: view [52560,52564]" dest="view: view [20684,20688]"/>
  <match src="parameter [1326,1333]" dest="parameter [1854,1861]"/>
  <match src="comment: // Solidity only automatically asserts when dividing by 0 [3331,3388]" dest="comment: // Solidity only automatically asserts when dividing by 0 [3859,3916]"/>
  <match src="parameter [31967,31976]" dest="parameter [49679,49688]"/>
  <match src=".: . [64116,64117]" dest=".: . [67947,67948]"/>
  <match src="{: { [91945,91946]" dest="{: { [31331,31332]"/>
  <match src="variable_declaration [102730,102764]" dest="variable_declaration [42116,42150]"/>
  <match src="(: ( [29007,29008]" dest="(: ( [46719,46720]"/>
  <match src="identifier: payloadA [29843,29851]" dest="identifier: payloadA [47555,47563]"/>
  <match src="primitive_type [87017,87024]" dest="primitive_type [28808,28815]"/>
  <match src="number_literal: 0 [9256,9257]" dest="number_literal: 0 [9784,9785]"/>
  <match src="(: ( [92150,92151]" dest="(: ( [31536,31537]"/>
  <match src="type_name [86943,86950]" dest="type_name [28734,28741]"/>
  <match src="call_argument [30940,30964]" dest="call_argument [48652,48676]"/>
  <match src="variable_declaration [35817,35836]" dest="variable_declaration [53529,53548]"/>
  <match src="uint256: uint256 [35236,35243]" dest="uint256: uint256 [52948,52955]"/>
  <match src="function: function [104736,104744]" dest="function: function [44122,44130]"/>
  <match src="user_defined_type [46128,46140]" dest="user_defined_type [16225,16237]"/>
  <match src="identifier: denominator [9801,9812]" dest="identifier: denominator [10329,10340]"/>
  <match src="member_expression [99943,99958]" dest="member_expression [39329,39344]"/>
  <match src="identifier: sub [866,869]" dest="identifier: sub [1394,1397]"/>
  <match src=",: , [7183,7184]" dest=",: , [7711,7712]"/>
  <match src="primitive_type [73382,73389]" dest="primitive_type [83312,83319]"/>
  <match src=",: , [79993,79994]" dest=",: , [71215,71216]"/>
  <match src="member_expression [103805,103841]" dest="member_expression [43191,43227]"/>
  <match src="function: function [88909,88917]" dest="function: function [76099,76107]"/>
  <match src="member_expression [98369,98383]" dest="member_expression [37755,37769]"/>
  <match src="return: return [92659,92665]" dest="return: return [32045,32051]"/>
  <match src="number_literal: 0 [3409,3410]" dest="number_literal: 0 [3937,3938]"/>
  <match src="visibility [45534,45542]" dest="visibility [15631,15639]"/>
  <match src="primitive_type [63082,63089]" dest="primitive_type [77893,77900]"/>
  <match src="yul_path [96803,96807]" dest="yul_path [36189,36193]"/>
  <match src=",: , [51452,51453]" dest=",: , [60873,60874]"/>
  <match src="(: ( [50798,50799]" dest="(: ( [55456,55457]"/>
  <match src="user_defined_type [91429,91436]" dest="user_defined_type [30815,30822]"/>
  <match src="identifier: self [7616,7620]" dest="identifier: self [8144,8148]"/>
  <match src="function_definition [91390,91484]" dest="function_definition [30776,30870]"/>
  <match src="identifier: COLON [32312,32317]" dest="identifier: COLON [50024,50029]"/>
  <match src="primitive_type [42538,42545]" dest="primitive_type [12635,12642]"/>
  <match src="identifier: input [32964,32969]" dest="identifier: input [50676,50681]"/>
  <match src="state_variable_declaration [41710,41765]" dest="state_variable_declaration [11807,11862]"/>
  <match src="expression_statement [25872,25956]" dest="expression_statement [79194,79325]"/>
  <match src="identifier: Decimal [45988,45995]" dest="identifier: Decimal [16085,16092]"/>
  <match src="return_type_definition [96566,96580]" dest="return_type_definition [35952,35966]"/>
  <match src="state_mutability [7389,7393]" dest="state_mutability [7917,7921]"/>
  <match src="identifier: ORACLE_POOL_RATIO [43191,43208]" dest="identifier: ORACLE_POOL_RATIO [13288,13305]"/>
  <match src="member_expression [91756,91770]" dest="member_expression [31142,31156]"/>
  <match src="call_argument [79767,79802]" dest="call_argument [71314,71352]"/>
  <match src="): ) [90951,90952]" dest="): ) [30337,30338]"/>
  <match src="returns: returns [831,838]" dest="returns: returns [1359,1366]"/>
  <match src="identifier: value [80243,80248]" dest="identifier: value [71440,71445]"/>
  <match src="string [81613,81648]" dest="string [80722,80736]"/>
  <match src="emit: emit [81838,81842]" dest="emit: emit [72420,72424]"/>
  <match src="): ) [31674,31675]" dest="): ) [49386,49387]"/>
  <match src="(: ( [23072,23073]" dest="(: ( [55969,55970]"/>
  <match src="(: ( [95050,95051]" dest="(: ( [34436,34437]"/>
  <match src="): ) [93413,93414]" dest="): ) [32799,32800]"/>
  <match src="function_body [45566,45613]" dest="function_body [15663,15710]"/>
  <match src="): ) [9652,9653]" dest="): ) [10180,10181]"/>
  <match src="string [89555,89616]" dest="string [76745,76806]"/>
  <match src="type_name [93685,93692]" dest="type_name [33071,33078]"/>
  <match src="identifier: msg [81497,81500]" dest="identifier: msg [71711,71714]"/>
  <match src="{: { [849,850]" dest="{: { [1377,1378]"/>
  <match src="state_mutability [91613,91617]" dest="state_mutability [30999,31003]"/>
  <match src="(: ( [34972,34973]" dest="(: ( [52684,52685]"/>
  <match src="{: { [95900,95901]" dest="{: { [35286,35287]"/>
  <match src="function: function [95965,95973]" dest="function: function [35351,35359]"/>
  <match src="visibility [76622,76630]" dest="visibility [56858,56866]"/>
  <match src="}: } [103265,103266]" dest="}: } [42651,42652]"/>
  <match src="identifier: Getters [90446,90453]" dest="identifier: Getters [29832,29839]"/>
  <match src="call_argument [106055,106059]" dest="call_argument [69199,69203]"/>
  <match src="call_expression [25872,25955]" dest="call_expression [79194,79324]"/>
  <match src=",: , [79073,79074]" dest=",: , [70461,70462]"/>
  <match src="return_type_definition [53793,53864]" dest="return_type_definition [21917,21988]"/>
  <match src="parameter [76648,76655]" dest="parameter [56884,56891]"/>
  <match src="identifier: amount [98707,98713]" dest="identifier: amount [38093,38099]"/>
  <match src=",: , [2062,2063]" dest=",: , [2590,2591]"/>
  <match src="identifier: burn [49596,49600]" dest="identifier: burn [25979,25983]"/>
  <match src="state_mutability [54028,54032]" dest="state_mutability [22152,22156]"/>
  <match src="call_argument [99764,99770]" dest="call_argument [39150,39156]"/>
  <match src="type_cast_expression [35961,35988]" dest="type_cast_expression [53673,53700]"/>
  <match src="address: address [46590,46597]" dest="address: address [16687,16694]"/>
  <match src="): ) [101461,101462]" dest="): ) [40847,40848]"/>
  <match src="private: private [15849,15856]" dest="private: private [17921,17928]"/>
  <match src="bytes32: bytes32 [31473,31480]" dest="bytes32: bytes32 [49185,49192]"/>
  <match src="primitive_type [52421,52425]" dest="primitive_type [20545,20549]"/>
  <match src="identifier: amount [98250,98256]" dest="identifier: amount [37636,37642]"/>
  <match src="external: external [91276,91284]" dest="external: external [30662,30670]"/>
  <match src=",: , [21947,21948]" dest=",: , [63553,63554]"/>
  <match src="struct_member [86075,86120]" dest="struct_member [27866,27911]"/>
  <match src="identifier: sub [101443,101446]" dest="identifier: sub [40829,40832]"/>
  <match src="identifier: value [79427,79432]" dest="identifier: value [70990,70995]"/>
  <match src="(: ( [102639,102640]" dest="(: ( [42025,42026]"/>
  <match src="}: } [104848,104849]" dest="}: } [44234,44235]"/>
  <match src="identifier: GOVERNANCE_QUORUM [42354,42371]" dest="identifier: GOVERNANCE_QUORUM [12451,12468]"/>
  <match src="call_argument [51077,51079]" dest="call_argument [64467,64469]"/>
  <match src="identifier: amount [99764,99770]" dest="identifier: amount [39150,39156]"/>
  <match src=".: . [101535,101536]" dest=".: . [40921,40922]"/>
  <match src="return: return [7270,7276]" dest="return: return [7798,7804]"/>
  <match src="return_statement [91853,91882]" dest="return_statement [31239,31268]"/>
  <match src="internal: internal [8286,8294]" dest="internal: internal [8814,8822]"/>
  <match src="type_name [33081,33088]" dest="type_name [50793,50800]"/>
  <match src="=: = [2027,2028]" dest="=: = [2555,2556]"/>
  <match src="returns: returns [46119,46126]" dest="returns: returns [16216,16223]"/>
  <match src="call_argument [51122,51128]" dest="call_argument [64538,64544]"/>
  <match src="primitive_type [33747,33754]" dest="primitive_type [51459,51466]"/>
  <match src="member_expression [104059,104076]" dest="member_expression [43445,43462]"/>
  <match src="binary_expression [105734,105769]" dest="binary_expression [68878,68913]"/>
  <match src="type_name [61864,61876]" dest="type_name [26919,26931]"/>
  <match src="identifier: _state [102369,102375]" dest="identifier: _state [41755,41761]"/>
  <match src="call_argument [81083,81093]" dest="call_argument [72138,72148]"/>
  <match src=",: , [31790,31791]" dest=",: , [49502,49503]"/>
  <match src="primitive_type [33081,33088]" dest="primitive_type [50793,50800]"/>
  <match src="(: ( [31266,31267]" dest="(: ( [48978,48979]"/>
  <match src="call_expression [81862,81876]" dest="call_expression [72444,72458]"/>
  <match src="parameter [97788,97792]" dest="parameter [37174,37178]"/>
  <match src="identifier: staged [100285,100291]" dest="identifier: staged [39671,39677]"/>
  <match src=",: , [78818,78819]" dest=",: , [70336,70337]"/>
  <match src="identifier: outstandingCouponsForEpoch [102806,102832]" dest="identifier: outstandingCouponsForEpoch [42192,42218]"/>
  <match src="identifier: balance [100059,100066]" dest="identifier: balance [39445,39452]"/>
  <match src="identifier: encodePacked [30215,30227]" dest="identifier: encodePacked [47927,47939]"/>
  <match src="state_mutability [94641,94645]" dest="state_mutability [34027,34031]"/>
  <match src="return_statement [6714,6764]" dest="return_statement [7242,7292]"/>
  <match src=".: . [96213,96214]" dest=".: . [35599,35600]"/>
  <match src="identifier: bootstrappingAt [95339,95354]" dest="identifier: bootstrappingAt [34725,34740]"/>
  <match src="return_type_definition [52641,52655]" dest="return_type_definition [20765,20779]"/>
  <match src="identifier: GOVERNANCE_SUPER_MAJORITY [45104,45129]" dest="identifier: GOVERNANCE_SUPER_MAJORITY [15201,15226]"/>
  <match src="expression_statement [104667,104714]" dest="expression_statement [44053,44100]"/>
  <match src="event: event [78900,78905]" dest="event: event [82790,82795]"/>
  <match src="parameter [98932,98952]" dest="parameter [38318,38338]"/>
  <match src="struct_member [5839,5853]" dest="struct_member [6367,6381]"/>
  <match src="identifier: self [6734,6738]" dest="identifier: self [7262,7266]"/>
  <match src="contract: contract [97509,97517]" dest="contract: contract [36895,36903]"/>
  <match src="for: for [62677,62680]" dest="for: for [65518,65521]"/>
  <match src="): ) [8008,8009]" dest="): ) [8536,8537]"/>
  <match src="primitive_type [28855,28862]" dest="primitive_type [46567,46574]"/>
  <match src="memory: memory [7248,7254]" dest="memory: memory [7776,7782]"/>
  <match src="identifier: period [94386,94392]" dest="identifier: period [33772,33778]"/>
  <match src="array_access [104667,104691]" dest="array_access [44053,44077]"/>
  <match src="return_type_definition [91148,91165]" dest="return_type_definition [30534,30551]"/>
  <match src="return_statement [93770,93826]" dest="return_statement [33156,33212]"/>
  <match src="(: ( [63988,63989]" dest="(: ( [67910,67911]"/>
  <match src="identifier: sender [80712,80718]" dest="identifier: sender [72863,72869]"/>
  <match src="): ) [102837,102838]" dest="): ) [42223,42224]"/>
  <match src="uint256: uint256 [94900,94907]" dest="uint256: uint256 [34286,34293]"/>
  <match src="(: ( [104604,104605]" dest="(: ( [43990,43991]"/>
  <match src="): ) [44008,44009]" dest="): ) [14105,14106]"/>
  <match src="memory: memory [64818,64824]" dest="memory: memory [19669,19675]"/>
  <match src="function_definition [8232,8418]" dest="function_definition [8760,8946]"/>
  <match src="function: function [53870,53878]" dest="function: function [21994,22002]"/>
  <match src="identifier: Decimal [44891,44898]" dest="identifier: Decimal [14988,14995]"/>
  <match src="bool: bool [95391,95395]" dest="bool: bool [34777,34781]"/>
  <match src=",: , [106221,106222]" dest=",: , [69365,69366]"/>
  <match src="type_name [8093,8099]" dest="type_name [8621,8627]"/>
  <match src="uint256: uint256 [43166,43173]" dest="uint256: uint256 [13263,13270]"/>
  <match src="identifier: D256 [8973,8977]" dest="identifier: D256 [9501,9505]"/>
  <match src="=: = [42741,42742]" dest="=: = [12838,12839]"/>
  <match src="member_expression [80288,80298]" dest="member_expression [71505,71515]"/>
  <match src="parameter [52451,52464]" dest="parameter [20575,20588]"/>
  <match src="identifier: to [97636,97638]" dest="identifier: to [37022,37024]"/>
  <match src="{: { [33995,33996]" dest="{: { [51707,51708]"/>
  <match src=",: , [19750,19751]" dest=",: , [63944,63945]"/>
  <match src="identifier: _state [98510,98516]" dest="identifier: _state [37896,37902]"/>
  <match src="): ) [94943,94944]" dest="): ) [34329,34330]"/>
  <match src="identifier: result [34876,34882]" dest="identifier: result [52588,52594]"/>
  <match src="}: } [86182,86183]" dest="}: } [27973,27974]"/>
  <match src="member_expression [32220,32236]" dest="member_expression [49932,49948]"/>
  <match src="library: library [97,104]" dest="library: library [625,632]"/>
  <match src="address: address [43301,43308]" dest="address: address [13398,13405]"/>
  <match src="&quot;: &quot; [81791,81792]" dest="&quot;: &quot; [80598,80599]"/>
  <match src="parameter [9766,9783]" dest="parameter [10294,10311]"/>
  <match src="type_name [97719,97726]" dest="type_name [37105,37112]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [72138,72818]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [64751,65431]"/>
  <match src="internal: internal [8673,8681]" dest="internal: internal [9201,9209]"/>
  <match src="): ) [9965,9966]" dest="): ) [10493,10494]"/>
  <match src=",: , [83205,83206]" dest=",: , [58816,58817]"/>
  <match src="event_paramater [52140,52160]" dest="event_paramater [20264,20284]"/>
  <match src="=: = [36204,36205]" dest="=: = [53916,53917]"/>
  <match src="(: ( [97849,97850]" dest="(: ( [37235,37236]"/>
  <match src="identifier: self [8383,8387]" dest="identifier: self [8911,8915]"/>
  <match src="call_argument [48804,48808]" dest="call_argument [70760,70764]"/>
  <match src=",: , [78878,78879]" dest=",: , [70396,70397]"/>
  <match src="number_literal: 20e16 [42374,42379]" dest="number_literal: 20e16 [12471,12476]"/>
  <match src="visibility [98491,98499]" dest="visibility [37877,37885]"/>
  <match src="yul_identifier [85168,85175]" dest="yul_identifier [74496,74503]"/>
  <match src="member_expression [101567,101578]" dest="member_expression [40953,40964]"/>
  <match src="pure: pure [46106,46110]" dest="pure: pure [16203,16207]"/>
  <match src="primitive_type [34114,34119]" dest="primitive_type [51826,51831]"/>
  <match src="(: ( [31825,31826]" dest="(: ( [49537,49538]"/>
  <match src="function: function [54291,54299]" dest="function: function [22415,22423]"/>
  <match src="type_name [33801,33806]" dest="type_name [51513,51518]"/>
  <match src="uint256: uint256 [92253,92260]" dest="uint256: uint256 [31639,31646]"/>
  <match src="uint256: uint256 [13699,13706]" dest="uint256: uint256 [25000,25007]"/>
  <match src="variable_declaration [89637,89649]" dest="variable_declaration [76827,76839]"/>
  <match src="return_type_definition [3303,3320]" dest="return_type_definition [3831,3848]"/>
  <match src="pure: pure [46378,46382]" dest="pure: pure [16475,16479]"/>
  <match src="public: public [96138,96144]" dest="public: public [35524,35530]"/>
  <match src="identifier: IERC20 [49574,49580]" dest="identifier: IERC20 [25957,25963]"/>
  <match src="call_argument [17646,17652]" dest="call_argument [59509,59515]"/>
  <match src="comment: // each byte takes two characters [35190,35223]" dest="comment: // each byte takes two characters [52902,52935]"/>
  <match src="parameter [27781,27790]" dest="parameter [45493,45502]"/>
  <match src="identifier: c [454,455]" dest="identifier: c [982,983]"/>
  <match src="(: ( [80603,80604]" dest="(: ( [71667,71668]"/>
  <match src="visibility [52340,52348]" dest="visibility [20464,20472]"/>
  <match src="is: is [88183,88185]" dest="is: is [75373,75375]"/>
  <match src="identifier: value [97648,97653]" dest="identifier: value [37034,37039]"/>
  <match src="type_name [53217,53224]" dest="type_name [21341,21348]"/>
  <match src="[: [ [35334,35335]" dest="[: [ [53046,53047]"/>
  <match src="parameter [95066,95075]" dest="parameter [34452,34461]"/>
  <match src="function_definition [71091,71733]" dest="function_definition [67033,67646]"/>
  <match src="=: = [103581,103582]" dest="=: = [42967,42968]"/>
  <match src="pure: pure [45765,45769]" dest="pure: pure [15862,15866]"/>
  <match src="type_name [100165,100172]" dest="type_name [39551,39558]"/>
  <match src="visibility [75596,75604]" dest="visibility [61103,61111]"/>
  <match src="identifier: State [86427,86432]" dest="identifier: State [28218,28223]"/>
  <match src="internal: internal [4703,4711]" dest="internal: internal [5231,5239]"/>
  <match src=".: . [103189,103190]" dest=".: . [42575,42576]"/>
  <match src="return: return [44170,44176]" dest="return: return [14267,14273]"/>
  <match src="event_paramater [79217,79230]" dest="event_paramater [60942,60955]"/>
  <match src="primitive_type [43498,43505]" dest="primitive_type [13595,13602]"/>
  <match src=",: , [78935,78936]" dest=",: , [82835,82836]"/>
  <match src="struct_member [86332,86352]" dest="struct_member [28123,28143]"/>
  <match src="call_expression [92694,92748]" dest="call_expression [32080,32134]"/>
  <match src="external: external [52466,52474]" dest="external: external [20590,20598]"/>
  <match src="call_argument [80288,80298]" dest="call_argument [71505,71515]"/>
  <match src="(: ( [98249,98250]" dest="(: ( [37635,37636]"/>
  <match src="function_definition [9098,9264]" dest="function_definition [9626,9792]"/>
  <match src=".: . [44898,44899]" dest=".: . [14995,14996]"/>
  <match src="struct: struct [85958,85964]" dest="struct: struct [27749,27755]"/>
  <match src="call_argument [29749,29775]" dest="call_argument [47461,47487]"/>
  <match src="identifier: candidates [96605,96615]" dest="identifier: candidates [35991,36001]"/>
  <match src="(: ( [71155,71156]" dest="(: ( [67147,67148]"/>
  <match src="call_argument [80666,80671]" dest="call_argument [72370,72375]"/>
  <match src="identifier: Constants [94026,94035]" dest="identifier: Constants [33412,33421]"/>
  <match src="primitive_type [30762,30769]" dest="primitive_type [48474,48481]"/>
  <match src="(: ( [80166,80167]" dest="(: ( [59539,59540]"/>
  <match src="}: } [103663,103664]" dest="}: } [43049,43050]"/>
  <match src="identifier: balance [87104,87111]" dest="identifier: balance [28895,28902]"/>
  <match src="pure: pure [7915,7919]" dest="pure: pure [8443,8447]"/>
  <match src="assignment_expression [102990,103034]" dest="assignment_expression [42376,42420]"/>
  <match src="): ) [33843,33844]" dest="): ) [51555,51556]"/>
  <match src="type_name [27822,27829]" dest="type_name [45534,45541]"/>
  <match src="call_expression [29668,29692]" dest="call_expression [47380,47404]"/>
  <match src="(: ( [82636,82637]" dest="(: ( [62822,62823]"/>
  <match src=",: , [53336,53337]" dest=",: , [21460,21461]"/>
  <match src="state_mutability [95586,95590]" dest="state_mutability [34972,34976]"/>
  <match src="return_type_definition [52864,52881]" dest="return_type_definition [20988,21005]"/>
  <match src="(: ( [104629,104630]" dest="(: ( [44015,44016]"/>
  <match src="member_expression [100052,100073]" dest="member_expression [39438,39459]"/>
  <match src="return: return [2111,2117]" dest="return: return [2639,2645]"/>
  <match src="type_name [86005,86012]" dest="type_name [27796,27803]"/>
  <match src="[: [ [91083,91084]" dest="[: [ [30469,30470]"/>
  <match src="(: ( [25171,25172]" dest="(: ( [79421,79422]"/>
  <match src="identifier: dollar [79965,79971]" dest="identifier: dollar [71187,71193]"/>
  <match src="variable_declaration [65661,65686]" dest="variable_declaration [67726,67751]"/>
  <match src="primitive_type [35236,35243]" dest="primitive_type [52948,52955]"/>
  <match src="identifier: Require [63498,63505]" dest="identifier: Require [81365,81372]"/>
  <match src="uint256: uint256 [93569,93576]" dest="uint256: uint256 [32955,32962]"/>
  <match src="call_argument [30539,30545]" dest="call_argument [48251,48257]"/>
  <match src="+: + [36722,36723]" dest="+: + [54434,54435]"/>
  <match src="(: ( [99377,99378]" dest="(: ( [38763,38764]"/>
  <match src="comment: // return ASCII digit (0-9) [36632,36659]" dest="comment: // return ASCII digit (0-9) [54344,54371]"/>
  <match src="identifier: j [34573,34574]" dest="identifier: j [52285,52286]"/>
  <match src="function_definition [84593,85209]" dest="function_definition [73921,74537]"/>
  <match src="function: function [45867,45875]" dest="function: function [15964,15972]"/>
  <match src="visibility [88955,88963]" dest="visibility [76145,76153]"/>
  <match src="function_definition [93024,93372]" dest="function_definition [32410,32758]"/>
  <match src="parameter [94655,94662]" dest="parameter [34041,34048]"/>
  <match src="call_expression [25164,25228]" dest="call_expression [79402,79534]"/>
  <match src="if_statement [92623,92678]" dest="if_statement [32009,32064]"/>
  <match src="identifier: notPaused [79359,79368]" dest="identifier: onlyFrozenOrLocked [70900,70918]"/>
  <match src="call_argument [6755,6759]" dest="call_argument [7283,7287]"/>
  <match src="]: ] [102549,102550]" dest="]: ] [41935,41936]"/>
  <match src=".: . [45090,45091]" dest=".: . [15187,15188]"/>
  <match src="(: ( [11501,11502]" dest="(: ( [22802,22803]"/>
  <match src="): ) [76664,76665]" dest="): ) [56900,56901]"/>
  <match src="member_expression [80708,80718]" dest="member_expression [72859,72869]"/>
  <match src="type_cast_expression [34484,34512]" dest="type_cast_expression [52196,52224]"/>
  <match src="function_definition [44210,44381]" dest="function_definition [14307,14478]"/>
  <match src="identifier: _state [94823,94829]" dest="identifier: _state [34209,34215]"/>
  <match src="identifier: Decimal [44669,44676]" dest="identifier: Decimal [14766,14773]"/>
  <match src=".: . [104100,104101]" dest=".: . [43486,43487]"/>
  <match src="comment: // '&gt;' [27652,27658]" dest="comment: // '&gt;' [45364,45370]"/>
  <match src="yul_identifier [96803,96807]" dest="yul_identifier [36189,36193]"/>
  <match src="parameter [102696,102709]" dest="parameter [42082,42095]"/>
  <match src="emit: emit [20050,20054]" dest="emit: emit [64687,64691]"/>
  <match src=".: . [100090,100091]" dest=".: . [39476,39477]"/>
  <match src="): ) [96579,96580]" dest="): ) [35965,35966]"/>
  <match src="call_argument [81850,81860]" dest="call_argument [72432,72442]"/>
  <match src="block_statement [64055,64141]" dest="block_statement [67919,67964]"/>
  <match src="[: [ [100614,100615]" dest="[: [ [40000,40001]"/>
  <match src="}: } [36528,36529]" dest="}: } [54240,54241]"/>
  <match src="identifier: balance [100879,100886]" dest="identifier: balance [40265,40272]"/>
  <match src="(: ( [96250,96251]" dest="(: ( [35636,35637]"/>
  <match src="comment: /**      * Getters      */ [43417,43443]" dest="comment: /**      * Getters      */ [13514,13540]"/>
  <match src="uint256: uint256 [74648,74655]" dest="uint256: uint256 [62239,62246]"/>
  <match src="false: false [97815,97820]" dest="false: false [37201,37206]"/>
  <match src="): ) [106219,106220]" dest="): ) [69363,69364]"/>
  <match src="internal: internal [45650,45658]" dest="internal: internal [15747,15755]"/>
  <match src="function: function [44760,44768]" dest="function: function [14857,14865]"/>
  <match src="member_expression [8186,8196]" dest="member_expression [8714,8724]"/>
  <match src="address: address [52754,52761]" dest="address: address [20878,20885]"/>
  <match src="member_expression [102279,102299]" dest="member_expression [41665,41685]"/>
  <match src="identifier: candidates [104802,104812]" dest="identifier: candidates [44188,44198]"/>
  <match src="(: ( [106218,106219]" dest="(: ( [69362,69363]"/>
  <match src="public: public [94776,94782]" dest="public: public [34162,34168]"/>
  <match src="call_expression [71872,71879]" dest="call_expression [81008,81015]"/>
  <match src="call_expression [45083,45131]" dest="call_expression [15180,15228]"/>
  <match src="type_name [38220,38227]" dest="type_name [63840,63847]"/>
  <match src="=: = [102902,102903]" dest="=: = [42288,42289]"/>
  <match src="identifier: account [93267,93274]" dest="identifier: account [32653,32660]"/>
  <match src="identifier: transfer [11916,11924]" dest="identifier: transfer [23217,23225]"/>
  <match src="number_literal: 0 [19831,19832]" dest="number_literal: 0 [64067,64068]"/>
  <match src="&quot;: &quot; [78768,78769]" dest="&quot;: &quot; [70283,70284]"/>
  <match src="return: return [9228,9234]" dest="return: return [9756,9762]"/>
  <match src="primitive_type [86585,86592]" dest="primitive_type [28376,28383]"/>
  <match src="member_expression [79347,79357]" dest="member_expression [78262,78272]"/>
  <match src="identifier: owner [102090,102095]" dest="identifier: owner [41476,41481]"/>
  <match src="state_mutability [46271,46275]" dest="state_mutability [16368,16372]"/>
  <match src="identifier: reason [31457,31463]" dest="identifier: reason [49169,49175]"/>
  <match src="comment: // r.length = length; [33552,33573]" dest="comment: // r.length = length; [51264,51285]"/>
  <match src="): ) [43505,43506]" dest="): ) [13602,13603]"/>
  <match src="member_expression [102904,102930]" dest="member_expression [42290,42316]"/>
  <match src="member_expression [104507,104522]" dest="member_expression [43893,43908]"/>
  <match src="return: return [98079,98085]" dest="return: return [37465,37471]"/>
  <match src="(: ( [8436,8437]" dest="(: ( [8964,8965]"/>
  <match src="function_definition [65204,65908]" dest="function_definition [66534,67027]"/>
  <match src="{: { [28904,28905]" dest="{: { [46616,46617]"/>
  <match src="identifier: amount [98556,98562]" dest="identifier: amount [37942,37948]"/>
  <match src="state_mutability [11513,11517]" dest="state_mutability [22814,22818]"/>
  <match src="identifier: value [53070,53075]" dest="identifier: value [21194,21199]"/>
  <match src="primitive_type [34747,34754]" dest="primitive_type [52459,52466]"/>
  <match src="parameter [91236,91249]" dest="parameter [30622,30635]"/>
  <match src="using_directive [78495,78522]" dest="using_directive [70218,70245]"/>
  <match src="identifier: D256 [63956,63960]" dest="identifier: D256 [19320,19324]"/>
  <match src="): ) [81093,81094]" dest="): ) [72148,72149]"/>
  <match src="struct: struct [86870,86876]" dest="struct: struct [28661,28667]"/>
  <match src="struct_declaration [85958,86183]" dest="struct_declaration [27749,27974]"/>
  <match src="call_argument [19831,19832]" dest="call_argument [64067,64068]"/>
  <match src="(: ( [7998,7999]" dest="(: ( [8526,8527]"/>
  <match src="type_name [52363,52368]" dest="type_name [20487,20492]"/>
  <match src=".: . [31612,31613]" dest=".: . [49324,49325]"/>
  <match src="function_definition [98135,98264]" dest="function_definition [37521,37650]"/>
  <match src="revert: revert [28354,28360]" dest="revert: revert [46066,46072]"/>
  <match src="comment: /*     Copyright 2018-2019 zOS Global Limited     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [87351,88074]" dest="comment: /*     Copyright 2018-2019 zOS Global Limited     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [74541,75264]"/>
  <match src="identifier: mul [6751,6754]" dest="identifier: mul [7279,7282]"/>
  <match src="memory: memory [103766,103772]" dest="memory: memory [43152,43158]"/>
  <match src="identifier: stringify [29833,29842]" dest="identifier: stringify [47545,47554]"/>
  <match src="return_type_definition [91721,91738]" dest="return_type_definition [31107,31124]"/>
  <match src="(: ( [19747,19748]" dest="(: ( [63941,63942]"/>
  <match src="uint256: uint256 [44555,44562]" dest="uint256: uint256 [14652,14659]"/>
  <match src="block_statement [7585,7632]" dest="block_statement [8113,8160]"/>
  <match src="call_argument [28467,28471]" dest="call_argument [46179,46183]"/>
  <match src="type_name [87096,87103]" dest="type_name [28887,28894]"/>
  <match src="call_argument [82799,82804]" dest="call_argument [80812,80821]"/>
  <match src="identifier: LPAREN [31784,31790]" dest="identifier: LPAREN [49496,49502]"/>
  <match src="internal: internal [4043,4051]" dest="internal: internal [4571,4579]"/>
  <match src=",: , [21183,21184]" dest=",: , [56280,56281]"/>
  <match src="}: } [94727,94728]" dest="}: } [34113,34114]"/>
  <match src="(: ( [89218,89219]" dest="(: ( [76408,76409]"/>
  <match src="identifier: c [1419,1420]" dest="identifier: c [1947,1948]"/>
  <match src="type_name [86721,86725]" dest="type_name [28512,28516]"/>
  <match src=".: . [103572,103573]" dest=".: . [42958,42959]"/>
  <match src="primitive_type [9377,9381]" dest="primitive_type [9905,9909]"/>
  <match src="primitive_type [93906,93913]" dest="primitive_type [33292,33299]"/>
  <match src="identifier: strategy [94415,94423]" dest="identifier: strategy [33801,33809]"/>
  <match src="): ) [31123,31124]" dest="): ) [48835,48836]"/>
  <match src=":: : [6934,6935]" dest=":: : [7462,7463]"/>
  <match src="primitive_type [92578,92585]" dest="primitive_type [31964,31971]"/>
  <match src="(: ( [6344,6345]" dest="(: ( [6872,6873]"/>
  <match src="primitive_type [91251,91258]" dest="primitive_type [30637,30644]"/>
  <match src="returns: returns [76639,76646]" dest="returns: returns [56875,56882]"/>
  <match src="expression_statement [56611,56663]" dest="expression_statement [72827,72946]"/>
  <match src="{: { [5655,5656]" dest="{: { [6183,6184]"/>
  <match src="identifier: epoch [94627,94632]" dest="identifier: epoch [34013,34018]"/>
  <match src="member_expression [101778,101817]" dest="member_expression [41164,41203]"/>
  <match src="): ) [31275,31276]" dest="): ) [48987,48988]"/>
  <match src="call_argument [29052,29056]" dest="call_argument [46764,46768]"/>
  <match src="identifier: reason [6857,6863]" dest="identifier: reason [7385,7391]"/>
  <match src="function_body [31522,31938]" dest="function_body [49234,49650]"/>
  <match src="primitive_type [91315,91322]" dest="primitive_type [30701,30708]"/>
  <match src="member_expression [27956,27972]" dest="member_expression [45668,45684]"/>
  <match src="identifier: abi [31609,31612]" dest="identifier: abi [49321,49324]"/>
  <match src="call_argument [98862,98868]" dest="call_argument [38248,38254]"/>
  <match src="member_expression [91183,91197]" dest="member_expression [30569,30583]"/>
  <match src="pure: pure [6277,6281]" dest="pure: pure [6805,6809]"/>
  <match src="call_argument [105808,105829]" dest="call_argument [68952,68973]"/>
  <match src="state_variable_declaration [27381,27423]" dest="state_variable_declaration [45093,45135]"/>
  <match src="expression_statement [103215,103260]" dest="expression_statement [42601,42646]"/>
  <match src="identifier: strategy [94377,94385]" dest="identifier: strategy [33763,33771]"/>
  <match src="uint256: uint256 [100536,100543]" dest="uint256: uint256 [39922,39929]"/>
  <match src="-: - [36292,36293]" dest="-: - [54004,54005]"/>
  <match src="type_name [94761,94768]" dest="type_name [34147,34154]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [1433,1662]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [1961,2190]"/>
  <match src=".: . [100427,100428]" dest=".: . [39813,39814]"/>
  <match src="function_definition [94488,94585]" dest="function_definition [33874,33971]"/>
  <match src="returns: returns [10004,10011]" dest="returns: returns [10532,10539]"/>
  <match src="uint256: uint256 [82370,82377]" dest="uint256: uint256 [61733,61740]"/>
  <match src="type_name [54210,54214]" dest="type_name [22334,22338]"/>
  <match src=".: . [32950,32951]" dest=".: . [50662,50663]"/>
  <match src="function_body [98794,98876]" dest="function_body [38180,38262]"/>
  <match src="]: ] [100000,100001]" dest="]: ] [39386,39387]"/>
  <match src="call_argument [82027,82031]" dest="call_argument [80935,80939]"/>
  <match src="type_name [86157,86164]" dest="type_name [27948,27955]"/>
  <match src="]: ] [103571,103572]" dest="]: ] [42957,42958]"/>
  <match src="type_name [92151,92158]" dest="type_name [31537,31544]"/>
  <match src=".: . [45048,45049]" dest=".: . [15145,15146]"/>
  <match src="expression_statement [21997,22034]" dest="expression_statement [63632,63684]"/>
  <match src="--: -- [34413,34415]" dest="--: -- [52125,52127]"/>
  <match src="!: ! [32147,32148]" dest="!: ! [49859,49860]"/>
  <match src="variable_declaration [34239,34248]" dest="variable_declaration [51951,51960]"/>
  <match src="identifier: _state [96461,96467]" dest="identifier: _state [35847,35853]"/>
  <match src="block_statement [30145,30610]" dest="block_statement [47857,48322]"/>
  <match src=".: . [70371,70372]" dest=".: . [58716,58717]"/>
  <match src="state_variable_declaration [27336,27369]" dest="state_variable_declaration [45048,45081]"/>
  <match src=".: . [99284,99285]" dest=".: . [38670,38671]"/>
  <match src="primitive_type [28224,28231]" dest="primitive_type [45936,45943]"/>
  <match src="call_argument [29718,29723]" dest="call_argument [47430,47435]"/>
  <match src="bytes32: bytes32 [29444,29451]" dest="bytes32: bytes32 [47156,47163]"/>
  <match src="expression_statement [104021,104133]" dest="expression_statement [43407,43519]"/>
  <match src="identifier: Provider [87121,87129]" dest="identifier: Provider [28912,28920]"/>
  <match src="call_expression [99252,99318]" dest="call_expression [38638,38704]"/>
  <match src="primitive_type [4664,4671]" dest="primitive_type [5192,5199]"/>
  <match src="constant: constant [43242,43250]" dest="constant: constant [13339,13347]"/>
  <match src="=: = [104704,104705]" dest="=: = [44090,44091]"/>
  <match src="public: public [61816,61822]" dest="public: public [26871,26877]"/>
  <match src=",: , [98930,98931]" dest=",: , [38316,38317]"/>
  <match src="call_argument [28581,28587]" dest="call_argument [46293,46299]"/>
  <match src="(: ( [93669,93670]" dest="(: ( [33055,33056]"/>
  <match src="identifier: amount [74656,74662]" dest="identifier: amount [62247,62253]"/>
  <match src="primitive_type [80310,80317]" dest="primitive_type [66599,66606]"/>
  <match src=".: . [93359,93360]" dest=".: . [32745,32746]"/>
  <match src="function_definition [46232,46335]" dest="function_definition [16329,16432]"/>
  <match src="{: { [36622,36623]" dest="{: { [54334,54335]"/>
  <match src="memory: memory [90750,90756]" dest="memory: memory [30136,30142]"/>
  <match src="member_expression [79965,79982]" dest="member_expression [71187,71204]"/>
  <match src="identifier: Decimal [61864,61871]" dest="identifier: Decimal [26919,26926]"/>
  <match src="uint256: uint256 [27440,27447]" dest="uint256: uint256 [45152,45159]"/>
  <match src="}: } [86555,86556]" dest="}: } [28346,28347]"/>
  <match src=",: , [31758,31759]" dest=",: , [49470,49471]"/>
  <match src="call_expression [28529,28555]" dest="call_expression [46241,46267]"/>
  <match src="uint256: uint256 [103986,103993]" dest="uint256: uint256 [43372,43379]"/>
  <match src="return_type_definition [43590,43607]" dest="return_type_definition [13687,13704]"/>
  <match src="primitive_type [13433,13440]" dest="primitive_type [24734,24741]"/>
  <match src="identifier: require [3397,3404]" dest="identifier: require [3925,3932]"/>
  <match src="constant: constant [42709,42717]" dest="constant: constant [12806,12814]"/>
  <match src="call_argument [4096,4097]" dest="call_argument [4624,4625]"/>
  <match src="call_argument [32472,32477]" dest="call_argument [50184,50189]"/>
  <match src="type_name [90946,90951]" dest="type_name [30332,30337]"/>
  <match src="number_literal: 0 [9533,9534]" dest="number_literal: 0 [10061,10062]"/>
  <match src=".: . [80055,80056]" dest=".: . [72237,72238]"/>
  <match src="user_defined_type [93080,93094]" dest="user_defined_type [32466,32480]"/>
  <match src="state_variable_declaration [42538,42595]" dest="state_variable_declaration [12635,12692]"/>
  <match src="memory: memory [7004,7010]" dest="memory: memory [7532,7538]"/>
  <match src="comment: // ' &lt;' [27611,27618]" dest="comment: // ' &lt;' [45323,45330]"/>
  <match src=".: . [9523,9524]" dest=".: . [10051,10052]"/>
  <match src="identifier: Account [93179,93186]" dest="identifier: Account [32565,32572]"/>
  <match src="state_mutability [52407,52411]" dest="state_mutability [20531,20535]"/>
  <match src="(: ( [31957,31958]" dest="(: ( [49669,49670]"/>
  <match src="identifier: decrementTotalBonded [98279,98299]" dest="identifier: decrementTotalBonded [37665,37685]"/>
  <match src="type_name [36102,36109]" dest="type_name [53814,53821]"/>
  <match src="{: { [98359,98360]" dest="{: { [37745,37746]"/>
  <match src="call_argument [46183,46218]" dest="call_argument [16280,16315]"/>
  <match src="}: } [70424,70425]" dest="}: } [58887,58888]"/>
  <match src="call_argument [29114,29140]" dest="call_argument [46826,46852]"/>
  <match src="primitive_type [1326,1333]" dest="primitive_type [1854,1861]"/>
  <match src=".: . [98838,98839]" dest=".: . [38224,38225]"/>
  <match src="{: { [45447,45448]" dest="{: { [15544,15545]"/>
  <match src="type_name [104553,104560]" dest="type_name [43939,43946]"/>
  <match src="function_definition [53936,53997]" dest="function_definition [22060,22121]"/>
  <match src="number_literal: 0x2c20 [27558,27564]" dest="number_literal: 0x2c20 [45270,45276]"/>
  <match src="primitive_type [71175,71182]" dest="primitive_type [67279,67286]"/>
  <match src="member_expression [99583,99615]" dest="member_expression [38969,39001]"/>
  <match src="parameter [95527,95542]" dest="parameter [34913,34928]"/>
  <match src="identifier: _state [102256,102262]" dest="identifier: _state [41642,41648]"/>
  <match src="identifier: sub [98703,98706]" dest="identifier: sub [38089,38092]"/>
  <match src="identifier: sub [70397,70400]" dest="identifier: add [58775,58778]"/>
  <match src="{: { [103388,103389]" dest="{: { [42774,42775]"/>
  <match src="identifier: b [814,815]" dest="identifier: b [1342,1343]"/>
  <match src="(: ( [7136,7137]" dest="(: ( [7664,7665]"/>
  <match src="): ) [21034,21035]" dest="): ) [56184,56185]"/>
  <match src="member_expression [71872,71918]" dest="member_expression [80994,81019]"/>
  <match src="identifier: amount [11952,11958]" dest="identifier: amount [23253,23259]"/>
  <match src="): ) [99562,99563]" dest="): ) [38948,38949]"/>
  <match src="return: return [46163,46169]" dest="return: return [16260,16266]"/>
  <match src="type_name [8245,8249]" dest="type_name [8773,8777]"/>
  <match src="function_body [46153,46226]" dest="function_body [16250,16323]"/>
  <match src="[: [ [101121,101122]" dest="[: [ [40507,40508]"/>
  <match src=",: , [19666,19667]" dest=",: , [63803,63804]"/>
  <match src="identifier: stringify [31105,31114]" dest="identifier: stringify [48817,48826]"/>
  <match src="expression_statement [99583,99705]" dest="expression_statement [38969,39091]"/>
  <match src="expression_statement [81469,81523]" dest="expression_statement [71692,71732]"/>
  <match src="): ) [95736,95737]" dest="): ) [35122,35123]"/>
  <match src="member_expression [94067,94113]" dest="member_expression [33453,33499]"/>
  <match src="private: private [62754,62761]" dest="private: private [66238,66245]"/>
  <match src="type_name [6246,6253]" dest="type_name [6774,6781]"/>
  <match src="bytes32: bytes32 [27822,27829]" dest="bytes32: bytes32 [45534,45541]"/>
  <match src="identifier: _state [91756,91762]" dest="identifier: _state [31142,31148]"/>
  <match src="&gt;&gt;: &gt;&gt; [36484,36486]" dest="&gt;&gt;: &gt;&gt; [54196,54198]"/>
  <match src="identifier: unfreeze [81010,81018]" dest="identifier: unfreeze [72597,72605]"/>
  <match src="call_argument [30303,30308]" dest="call_argument [48015,48020]"/>
  <match src="(: ( [9936,9937]" dest="(: ( [10464,10465]"/>
  <match src="type_name [3250,3257]" dest="type_name [3778,3785]"/>
  <match src="function_body [6304,6365]" dest="function_body [6832,6893]"/>
  <match src="identifier: amount [99431,99437]" dest="identifier: amount [38817,38823]"/>
  <match src="): ) [94632,94633]" dest="): ) [34018,34019]"/>
  <match src="memory: memory [6850,6856]" dest="memory: memory [7378,7384]"/>
  <match src="identifier: totalStaged [83173,83184]" dest="identifier: totalStaged [58779,58790]"/>
  <match src="function: function [104411,104419]" dest="function: function [43797,43805]"/>
  <match src="parameter [65244,65263]" dest="parameter [67694,67713]"/>
  <match src="type_name [97867,97874]" dest="type_name [37253,37260]"/>
  <match src="type_name [94007,94014]" dest="type_name [33393,33400]"/>
  <match src="solidity_pragma_token [43,59]" dest="solidity_pragma_token [7,23]"/>
  <match src="external: external [79327,79335]" dest="external: external [70891,70899]"/>
  <match src="): ) [95561,95562]" dest="): ) [34947,34948]"/>
  <match src=",: , [79207,79208]" dest=",: , [78129,78130]"/>
  <match src="for: for [78510,78513]" dest="for: for [70233,70236]"/>
  <match src="type_name [52650,52654]" dest="type_name [20774,20778]"/>
  <match src="call_argument [81862,81876]" dest="call_argument [72444,72458]"/>
  <match src="function_body [102000,102175]" dest="function_body [41386,41561]"/>
  <match src="identifier: newImplementation [89426,89443]" dest="identifier: newImplementation [76616,76633]"/>
  <match src="identifier: b [7137,7138]" dest="identifier: b [7665,7666]"/>
  <match src="struct_member [86585,86599]" dest="struct_member [28376,28390]"/>
  <match src="member_expression [7290,7300]" dest="member_expression [7818,7828]"/>
  <match src="bool: bool [31967,31971]" dest="bool: bool [49679,49683]"/>
  <match src="&quot;: &quot; [490,491]" dest="&quot;: &quot; [1018,1019]"/>
  <match src="type_name [64842,64854]" dest="type_name [65876,65888]"/>
  <match src="call_argument [8201,8208]" dest="call_argument [8729,8736]"/>
  <match src="return_statement [94674,94722]" dest="return_statement [34060,34108]"/>
  <match src="function_definition [52320,52370]" dest="function_definition [20444,20494]"/>
  <match src="(: ( [65445,65446]" dest="(: ( [66852,66853]"/>
  <match src="bytes2: bytes2 [27490,27496]" dest="bytes2: bytes2 [45202,45208]"/>
  <match src="{: { [6928,6929]" dest="{: { [7456,7457]"/>
  <match src="visibility [94256,94263]" dest="visibility [33642,33649]"/>
  <match src="identifier: D256 [46136,46140]" dest="identifier: D256 [16233,16237]"/>
  <match src="uint256: uint256 [65975,65982]" dest="uint256: uint256 [71527,71534]"/>
  <match src="primitive_type [53346,53350]" dest="primitive_type [21470,21474]"/>
  <match src="number_literal: 0 [42056,42057]" dest="number_literal: 0 [12153,12154]"/>
  <match src="uint256: uint256 [86608,86615]" dest="uint256: uint256 [28399,28406]"/>
  <match src=",: , [53409,53410]" dest=",: , [21533,21534]"/>
  <match src="): ) [45853,45854]" dest="): ) [15950,15951]"/>
  <match src="returns: returns [9368,9375]" dest="returns: returns [9896,9903]"/>
  <match src="primitive_type [41710,41717]" dest="primitive_type [11807,11814]"/>
  <match src=".: . [94851,94852]" dest=".: . [34237,34238]"/>
  <match src="&quot;: &quot; [82033,82034]" dest="&quot;: &quot; [80941,80942]"/>
  <match src=".: . [100886,100887]" dest=".: . [40272,40273]"/>
  <match src="return_type_definition [65947,65964]" dest="return_type_definition [62450,62467]"/>
  <match src="uint112: uint112 [53820,53827]" dest="uint112: uint112 [21944,21951]"/>
  <match src="(: ( [47872,47873]" dest="(: ( [55694,55695]"/>
  <match src="type_name [95608,95622]" dest="type_name [34994,35008]"/>
  <match src="call_argument [77058,77070]" dest="call_argument [62774,62786]"/>
  <match src="update_expression [33250,33253]" dest="update_expression [50962,50965]"/>
  <match src="identifier: decrementTotalRedeemable [98891,98915]" dest="identifier: decrementTotalRedeemable [38277,38301]"/>
  <match src="returns: returns [7066,7073]" dest="returns: returns [7594,7601]"/>
  <match src="variable_declaration_statement [32925,32971]" dest="variable_declaration_statement [50637,50683]"/>
  <match src="]: ] [100747,100748]" dest="]: ] [40133,40134]"/>
  <match src="(: ( [11637,11638]" dest="(: ( [22938,22939]"/>
  <match src="uint256: uint256 [33956,33963]" dest="uint256: uint256 [51668,51675]"/>
  <match src="identifier: accounts [104674,104682]" dest="identifier: accounts [44060,44068]"/>
  <match src="): ) [7888,7889]" dest="): ) [8416,8417]"/>
  <match src="identifier: totalSupply [52384,52395]" dest="identifier: totalSupply [20508,20519]"/>
  <match src="user_defined_type [62681,62693]" dest="user_defined_type [65522,65534]"/>
  <match src=",: , [7351,7352]" dest=",: , [7879,7880]"/>
  <match src="call_argument [82085,82104]" dest="call_argument [79987,80009]"/>
  <match src=":: : [7804,7805]" dest=":: : [8332,8333]"/>
  <match src=",: , [53501,53502]" dest=",: , [21625,21626]"/>
  <match src="type_name [98063,98067]" dest="type_name [37449,37453]"/>
  <match src="call_argument [7282,7308]" dest="call_argument [7810,7836]"/>
  <match src="primitive_type [32925,32930]" dest="primitive_type [50637,50642]"/>
  <match src="return_statement [4085,4130]" dest="return_statement [4613,4658]"/>
  <match src="function_definition [36535,36848]" dest="function_definition [54247,54560]"/>
  <match src="call_argument [82106,82110]" dest="call_argument [80011,80015]"/>
  <match src="state_mutability [5941,5945]" dest="state_mutability [6469,6473]"/>
  <match src="return_type_definition [91618,91635]" dest="return_type_definition [31004,31021]"/>
  <match src=",: , [54175,54176]" dest=",: , [22299,22300]"/>
  <match src="&gt;=: &gt;= [456,458]" dest="&gt;=: &gt;= [984,986]"/>
  <match src="type_name [90743,90749]" dest="type_name [30129,30135]"/>
  <match src="identifier: b [873,874]" dest="identifier: b [1401,1402]"/>
  <match src="identifier: account [93126,93133]" dest="identifier: account [32512,32519]"/>
  <match src="struct_member [86005,86021]" dest="struct_member [27796,27812]"/>
  <match src="function: function [84593,84601]" dest="function: function [73921,73929]"/>
  <match src="string: string [32192,32198]" dest="string: string [49904,49910]"/>
  <match src="event_definition [53206,53289]" dest="event_definition [21330,21413]"/>
  <match src="external: external [11655,11663]" dest="external: external [22956,22964]"/>
  <match src="return_statement [2658,2705]" dest="return_statement [3186,3233]"/>
  <match src="}: } [4802,4803]" dest="}: } [5330,5331]"/>
  <match src="): ) [52338,52339]" dest="): ) [20462,20463]"/>
  <match src="identifier: balance [98517,98524]" dest="identifier: balance [37903,37910]"/>
  <match src="identifier: decrementBalanceOf [99460,99478]" dest="identifier: decrementBalanceOf [38846,38864]"/>
  <match src="return: return [44884,44890]" dest="return: return [14981,14987]"/>
  <match src="type_name [18945,18952]" dest="type_name [17844,17851]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [27398,27417]" dest="identifier: ASCII_RELATIVE_ZERO [45110,45129]"/>
  <match src="binary_expression [35163,35169]" dest="binary_expression [52875,52881]"/>
  <match src=",: , [104389,104390]" dest=",: , [43775,43776]"/>
  <match src="}: } [8601,8602]" dest="}: } [9129,9130]"/>
  <match src=",: , [9249,9250]" dest=",: , [9777,9778]"/>
  <match src="identifier: value [8388,8393]" dest="identifier: value [8916,8921]"/>
  <match src="parameter [45673,45680]" dest="parameter [15770,15777]"/>
  <match src=".: . [96467,96468]" dest=".: . [35853,35854]"/>
  <match src=".: . [7126,7127]" dest=".: . [7654,7655]"/>
  <match src="uint256: uint256 [419,426]" dest="uint256: uint256 [947,954]"/>
  <match src="parameter [52754,52766]" dest="parameter [20878,20890]"/>
  <match src="function_body [45682,45723]" dest="function_body [15779,15820]"/>
  <match src="event_paramater [13679,13697]" dest="event_paramater [24980,24998]"/>
  <match src="identifier: must [30139,30143]" dest="identifier: must [47851,47855]"/>
  <match src="primitive_type [94537,94544]" dest="primitive_type [33923,33930]"/>
  <match src="identifier: D256 [61872,61876]" dest="identifier: D256 [26927,26931]"/>
  <match src="memory: memory [104240,104246]" dest="memory: memory [43626,43632]"/>
  <match src="identifier: value [44721,44726]" dest="identifier: value [14818,14823]"/>
  <match src="identifier: reject [104050,104056]" dest="identifier: reject [43436,43442]"/>
  <match src="&quot;: &quot; [81647,81648]" dest="&quot;: &quot; [80735,80736]"/>
  <match src="parameter [6433,6449]" dest="parameter [6961,6977]"/>
  <match src="visibility [98346,98354]" dest="visibility [37732,37740]"/>
  <match src="): ) [52396,52397]" dest="): ) [20520,20521]"/>
  <match src=".: . [81710,81711]" dest=".: . [79783,79784]"/>
  <match src="binary_expression [92627,92643]" dest="binary_expression [32013,32029]"/>
  <match src="(: ( [61935,61936]" dest="(: ( [26990,26991]"/>
  <match src="unary_expression [28333,28338]" dest="unary_expression [46045,46050]"/>
  <match src="update_expression [35171,35174]" dest="update_expression [52883,52886]"/>
  <match src="(: ( [92909,92910]" dest="(: ( [32295,32296]"/>
  <match src="primitive_type [61936,61943]" dest="primitive_type [26991,26998]"/>
  <match src="uint112: uint112 [53485,53492]" dest="uint112: uint112 [21609,21616]"/>
  <match src="): ) [89193,89194]" dest="): ) [76383,76384]"/>
  <match src="): ) [52790,52791]" dest="): ) [20914,20915]"/>
  <match src="type_name [79129,79136]" dest="type_name [78067,78074]"/>
  <match src="function_definition [29402,29955]" dest="function_definition [47114,47667]"/>
  <match src="identifier: newLock [104561,104568]" dest="identifier: newLock [43947,43954]"/>
  <match src="struct_member [86845,86858]" dest="struct_member [28636,28649]"/>
  <match src="): ) [53009,53010]" dest="): ) [21133,21134]"/>
  <match src="binary_expression [48647,48665]" dest="binary_expression [62571,62598]"/>
  <match src="number_literal: 66 [35849,35851]" dest="number_literal: 66 [53561,53563]"/>
  <match src="function: function [12259,12267]" dest="function: function [23560,23568]"/>
  <match src="identifier: b [9420,9421]" dest="identifier: b [9948,9949]"/>
  <match src="(: ( [52649,52650]" dest="(: ( [20773,20774]"/>
  <match src="): ) [54078,54079]" dest="): ) [22202,22203]"/>
  <match src="): ) [82599,82600]" dest="): ) [72687,72688]"/>
  <match src="identifier: stringifyTruncated [30940,30958]" dest="identifier: stringifyTruncated [48652,48670]"/>
  <match src="identifier: CURRENT_EPOCH_PERIOD [42151,42171]" dest="identifier: CURRENT_EPOCH_PERIOD [12248,12268]"/>
  <match src="{: { [28319,28320]" dest="{: { [46031,46032]"/>
  <match src="parameter [53101,53110]" dest="parameter [21225,21234]"/>
  <match src="}: } [7147,7148]" dest="}: } [7675,7676]"/>
  <match src="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [34772,34854]" dest="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [52484,52566]"/>
  <match src="comment: // take last decimal digit [34430,34456]" dest="comment: // take last decimal digit [52142,52168]"/>
  <match src="visibility [7372,7380]" dest="visibility [7900,7908]"/>
  <match src="identifier: Decimal [5647,5654]" dest="identifier: Decimal [6175,6182]"/>
  <match src=",: , [32401,32402]" dest=",: , [50113,50114]"/>
  <match src="call_argument [873,874]" dest="call_argument [1401,1402]"/>
  <match src="type_name [105681,105688]" dest="type_name [68825,68832]"/>
  <match src="yul_evm_builtin [33529,33535]" dest="yul_evm_builtin [51241,51247]"/>
  <match src="function_definition [45271,45375]" dest="function_definition [15368,15472]"/>
  <match src="pure: pure [52349,52353]" dest="pure: pure [20473,20477]"/>
  <match src="public: public [93059,93065]" dest="public: public [32445,32451]"/>
  <match src="identifier: balanceCheck [80154,80166]" dest="identifier: balanceCheck [59527,59539]"/>
  <match src=".: . [98675,98676]" dest=".: . [38061,38062]"/>
  <match src=".: . [102918,102919]" dest=".: . [42304,42305]"/>
  <match src="call_expression [93149,93156]" dest="call_expression [32535,32542]"/>
  <match src="identifier: to [54076,54078]" dest="identifier: to [22200,22202]"/>
  <match src="primitive_type [96438,96442]" dest="primitive_type [35824,35828]"/>
  <match src="}: } [54410,54411]" dest="}: } [22534,22535]"/>
  <match src="comment: // for more details about how this works. [84912,84953]" dest="comment: // for more details about how this works. [74240,74281]"/>
  <match src="call_expression [33694,33706]" dest="call_expression [51406,51418]"/>
  <match src="function_definition [9270,9433]" dest="function_definition [9798,9961]"/>
  <match src="member_expression [98661,98675]" dest="member_expression [38047,38061]"/>
  <match src="(: ( [98164,98165]" dest="(: ( [37550,37551]"/>
  <match src="(: ( [28422,28423]" dest="(: ( [46134,46135]"/>
  <match src="identifier: value [79480,79485]" dest="identifier: value [71043,71048]"/>
  <match src="member_expression [98532,98546]" dest="member_expression [37918,37932]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [35999,36088]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [53711,53800]"/>
  <match src="}: } [1426,1427]" dest="}: } [1954,1955]"/>
  <match src="identifier: coupons [94844,94851]" dest="identifier: coupons [34230,34237]"/>
  <match src="): ) [104774,104775]" dest="): ) [44160,44161]"/>
  <match src="identifier: must [29430,29434]" dest="identifier: must [47142,47146]"/>
  <match src="call_argument [98707,98713]" dest="call_argument [38093,38099]"/>
  <match src="identifier: reason [101378,101384]" dest="identifier: reason [40764,40770]"/>
  <match src="): ) [94351,94352]" dest="): ) [33737,33738]"/>
  <match src="identifier: value [80076,80081]" dest="identifier: value [72773,72778]"/>
  <match src="call_argument [31073,31079]" dest="call_argument [48785,48791]"/>
  <match src="{: { [81000,81001]" dest="{: { [72054,72055]"/>
  <match src="identifier: accounts [100267,100275]" dest="identifier: accounts [39653,39661]"/>
  <match src=",: , [19833,19834]" dest=",: , [64069,64070]"/>
  <match src="external: external [52703,52711]" dest="external: external [20827,20835]"/>
  <match src="}: } [82831,82832]" dest="}: } [80828,80829]"/>
  <match src="identifier: epoch [101567,101572]" dest="identifier: epoch [40953,40958]"/>
  <match src="}: } [86863,86864]" dest="}: } [28654,28655]"/>
  <match src="memory: memory [101067,101073]" dest="memory: memory [40453,40459]"/>
  <match src="state_mutability [44137,44141]" dest="state_mutability [14234,14238]"/>
  <match src=",: , [9076,9077]" dest=",: , [9604,9605]"/>
  <match src="using: using [62663,62668]" dest="using: using [65504,65509]"/>
  <match src="identifier: redeemable [98819,98829]" dest="identifier: redeemable [38205,38215]"/>
  <match src="emit_statement [82774,82826]" dest="emit_statement [80788,80823]"/>
  <match src="identifier: vote [103368,103372]" dest="identifier: vote [42754,42758]"/>
  <match src="comment: // 5 cycles fluid [42748,42765]" dest="comment: // 5 cycles fluid [12845,12862]"/>
  <match src="array_access [36420,36438]" dest="array_access [54132,54150]"/>
  <match src="parameter [28805,28819]" dest="parameter [46517,46531]"/>
  <match src="(: ( [101217,101218]" dest="(: ( [40603,40604]"/>
  <match src="for: for [7553,7556]" dest="for: for [8081,8084]"/>
  <match src="call_argument [101455,101461]" dest="call_argument [40841,40847]"/>
  <match src="parameter [13398,13412]" dest="parameter [24699,24713]"/>
  <match src="return: return [96178,96184]" dest="return: return [35564,35570]"/>
  <match src="identifier: candidate [103823,103832]" dest="identifier: candidate [43209,43218]"/>
  <match src="visibility [81943,81951]" dest="visibility [79955,79963]"/>
  <match src="contract_body [84231,85211]" dest="contract_body [73559,74539]"/>
  <match src="identifier: Decimal [46128,46135]" dest="identifier: Decimal [16225,16232]"/>
  <match src="(: ( [53899,53900]" dest="(: ( [22023,22024]"/>
  <match src="identifier: totalBonded [80411,80422]" dest="identifier: totalBonded [71545,71556]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [34337,34399]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [52049,52111]"/>
  <match src="uint256: uint256 [16939,16946]" dest="uint256: uint256 [59238,59245]"/>
  <match src="function_definition [94875,95013]" dest="function_definition [34261,34399]"/>
  <match src="): ) [79552,79553]" dest="): ) [71090,71091]"/>
  <match src="comment: /* Regulator */ [43013,43028]" dest="comment: /* Regulator */ [13110,13125]"/>
  <match src="function_definition [31944,32701]" dest="function_definition [49656,50413]"/>
  <match src="call_expression [77166,77206]" dest="call_expression [59438,59474]"/>
  <match src="): ) [70417,70418]" dest="): ) [58792,58793]"/>
  <match src="binary_expression [33348,33362]" dest="binary_expression [51060,51074]"/>
  <match src="type_name [82370,82377]" dest="type_name [61733,61740]"/>
  <match src="(: ( [30958,30959]" dest="(: ( [48670,48671]"/>
  <match src="array_access [92972,93011]" dest="array_access [32358,32397]"/>
  <match src="visibility [54080,54088]" dest="visibility [22204,22212]"/>
  <match src="function: function [49630,49638]" dest="function: function [26013,26021]"/>
  <match src="byte: byte [34962,34966]" dest="byte: byte [52674,52678]"/>
  <match src=".: . [103833,103834]" dest=".: . [43219,43220]"/>
  <match src=".: . [105715,105716]" dest=".: . [68859,68860]"/>
  <match src="address: address [53033,53040]" dest="address: address [21157,21164]"/>
  <match src=".: . [93486,93487]" dest=".: . [32872,32873]"/>
  <match src="{: { [66443,66444]" dest="{: { [62285,62286]"/>
  <match src="primitive_type [32084,32091]" dest="primitive_type [49796,49803]"/>
  <match src="identifier: totalSupply [92600,92611]" dest="identifier: totalSupply [31986,31997]"/>
  <match src="function_definition [45867,46037]" dest="function_definition [15964,16134]"/>
  <match src="return_statement [46609,46633]" dest="return_statement [16706,16730]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [96828,97508]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [81925,82605]"/>
  <match src=",: , [2603,2604]" dest=",: , [3131,3132]"/>
  <match src="{: { [103151,103152]" dest="{: { [42537,42538]"/>
  <match src="external: external [97762,97770]" dest="external: external [37148,37156]"/>
  <match src="primitive_type [19668,19675]" dest="primitive_type [63813,63820]"/>
  <match src="uint256: uint256 [355,362]" dest="uint256: uint256 [883,890]"/>
  <match src="parameter [32032,32048]" dest="parameter [49744,49760]"/>
  <match src="identifier: account [70584,70591]" dest="identifier: account [81608,81615]"/>
  <match src="]: ] [86397,86398]" dest="]: ] [28188,28189]"/>
  <match src="(: ( [79710,79711]" dest="(: ( [71257,71258]"/>
  <match src="returns: returns [54089,54096]" dest="returns: returns [22213,22220]"/>
  <match src="number_literal: 1 [33403,33404]" dest="number_literal: 1 [51115,51116]"/>
  <match src="(: ( [4652,4653]" dest="(: ( [5180,5181]"/>
  <match src="user_defined_type [7335,7339]" dest="user_defined_type [7863,7867]"/>
  <match src="binary_expression [36117,36123]" dest="binary_expression [53829,53835]"/>
  <match src="identifier: div [9644,9647]" dest="identifier: div [10172,10175]"/>
  <match src="view: view [91515,91519]" dest="view: view [30901,30905]"/>
  <match src=",: , [31675,31676]" dest=",: , [49387,49388]"/>
  <match src="parameter [400,407]" dest="parameter [928,935]"/>
  <match src="}: } [86184,86185]" dest="}: } [27975,27976]"/>
  <match src="function: function [11907,11915]" dest="function: function [23208,23216]"/>
  <match src="]: ] [35912,35913]" dest="]: ] [53624,53625]"/>
  <match src="returns: returns [32841,32848]" dest="returns: returns [50553,50560]"/>
  <match src="identifier: file [32281,32285]" dest="identifier: file [49993,49997]"/>
  <match src="number_literal: 1 [80937,80938]" dest="number_literal: 1 [72992,72993]"/>
  <match src="primitive_type [21937,21944]" dest="primitive_type [63543,63550]"/>
  <match src="): ) [30584,30585]" dest="): ) [48296,48297]"/>
  <match src="function: function [71091,71099]" dest="function: function [67033,67041]"/>
  <match src="call_expression [106000,106017]" dest="call_expression [69144,69161]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [41471,41490]" dest="identifier: BOOTSTRAPPING_PRICE [11568,11587]"/>
  <match src="parameter [54042,54046]" dest="parameter [22166,22170]"/>
  <match src="parameter [63948,63967]" dest="parameter [19312,19341]"/>
  <match src="identifier: coupons [100912,100919]" dest="identifier: coupons [40298,40305]"/>
  <match src="(: ( [51033,51034]" dest="(: ( [64369,64370]"/>
  <match src="identifier: mul [6573,6576]" dest="identifier: mul [7101,7104]"/>
  <match src="call_argument [82649,82657]" dest="call_argument [62835,62840]"/>
  <match src="parameter [28246,28260]" dest="parameter [45958,45972]"/>
  <match src="parenthesized_expression [30165,30599]" dest="parenthesized_expression [47877,48311]"/>
  <match src="primitive_type [52768,52775]" dest="primitive_type [20892,20899]"/>
  <match src="identifier: amount [73390,73396]" dest="identifier: amount [83320,83326]"/>
  <match src="member_expression [100076,100090]" dest="member_expression [39462,39476]"/>
  <match src="identifier: reject [86665,86671]" dest="identifier: reject [28456,28462]"/>
  <match src="}: } [93831,93832]" dest="}: } [33217,33218]"/>
  <match src="bool: bool [64941,64945]" dest="bool: bool [67753,67757]"/>
  <match src="{: { [27890,27891]" dest="{: { [45602,45603]"/>
  <match src=".: . [100878,100879]" dest=".: . [40264,40265]"/>
  <match src="contract_body [86202,86491]" dest="contract_body [27993,28282]"/>
  <match src="type_name [6257,6264]" dest="type_name [6785,6792]"/>
  <match src="comment: /* Pool */ [42771,42781]" dest="comment: /* Pool */ [12868,12878]"/>
  <match src="call_argument [48810,48819]" dest="call_argument [55794,55836]"/>
  <match src="identifier: start [79001,79006]" dest="identifier: start [70615,70620]"/>
  <match src="string_literal [21185,21221]" dest="string_literal [56294,56338]"/>
  <match src="return: return [46411,46417]" dest="return: return [16508,16514]"/>
  <match src="type_name [88928,88935]" dest="type_name [76118,76125]"/>
  <match src="identifier: sync [54340,54344]" dest="identifier: sync [22464,22468]"/>
  <match src="(: ( [94006,94007]" dest="(: ( [33392,33393]"/>
  <match src="view: view [96145,96149]" dest="view: view [35531,35535]"/>
  <match src="{: { [19712,19713]" dest="{: { [63893,63894]"/>
  <match src="]: ] [101825,101826]" dest="]: ] [41211,41212]"/>
  <match src="identifier: b [10119,10120]" dest="identifier: b [10647,10648]"/>
  <match src="return_statement [91749,91778]" dest="return_statement [31135,31164]"/>
  <match src="identifier: epoch [93005,93010]" dest="identifier: epoch [32391,32396]"/>
  <match src="function_body [101768,101842]" dest="function_body [41154,41228]"/>
  <match src="identifier: accounts [92459,92467]" dest="identifier: accounts [31845,31853]"/>
  <match src="bytes: bytes [34707,34712]" dest="bytes: bytes [52419,52424]"/>
  <match src="member_expression [94563,94578]" dest="member_expression [33949,33964]"/>
  <match src="address: address [53217,53224]" dest="address: address [21341,21348]"/>
  <match src="type_name [86255,86262]" dest="type_name [28046,28053]"/>
  <match src="call_argument [106009,106016]" dest="call_argument [69153,69160]"/>
  <match src="(: ( [32361,32362]" dest="(: ( [50073,50074]"/>
  <match src=",: , [30726,30727]" dest=",: , [48438,48439]"/>
  <match src="(: ( [65702,65703]" dest="(: ( [67783,67784]"/>
  <match src="function_definition [54054,54114]" dest="function_definition [22178,22238]"/>
  <match src="function_body [101096,101469]" dest="function_body [40482,40855]"/>
  <match src="type_name [4021,4028]" dest="type_name [4549,4556]"/>
  <match src="identifier: candidate [104605,104614]" dest="identifier: candidate [43991,44000]"/>
  <match src="function_definition [89391,89752]" dest="function_definition [76581,76942]"/>
  <match src="&quot;: &quot; [21906,21907]" dest="&quot;: &quot; [62545,62546]"/>
  <match src="assembly: assembly [33498,33506]" dest="assembly: assembly [51210,51218]"/>
  <match src="{: { [8342,8343]" dest="{: { [8870,8871]"/>
  <match src="private: private [42794,42801]" dest="private: private [12891,12898]"/>
  <match src="primitive_type [91157,91164]" dest="primitive_type [30543,30550]"/>
  <match src="type_name [95851,95858]" dest="type_name [35237,35244]"/>
  <match src="(: ( [71339,71340]" dest="(: ( [67367,67368]"/>
  <match src="primitive_type [9793,9800]" dest="primitive_type [10321,10328]"/>
  <match src="&amp;: &amp; [36448,36449]" dest="&amp;: &amp; [54160,54161]"/>
  <match src="visibility [19703,19711]" dest="visibility [56692,56700]"/>
  <match src="identifier: CHAIN_ID [46516,46524]" dest="identifier: CHAIN_ID [16613,16621]"/>
  <match src="identifier: initialized [106295,106306]" dest="identifier: initialized [69439,69450]"/>
  <match src="call_expression [100413,100454]" dest="call_expression [39799,39840]"/>
  <match src="expression_statement [102879,102981]" dest="expression_statement [42265,42367]"/>
  <match src="event_paramater [53370,53384]" dest="event_paramater [21494,21508]"/>
  <match src="primitive_type [27822,27829]" dest="primitive_type [45534,45541]"/>
  <match src="binary_expression [35335,35345]" dest="binary_expression [53047,53057]"/>
  <match src="address: address [93398,93405]" dest="address: address [32784,32791]"/>
  <match src="return_statement [64101,64131]" dest="return_statement [67933,67954]"/>
  <match src="primitive_type [6843,6849]" dest="primitive_type [7371,7377]"/>
  <match src="member_expression [91756,91777]" dest="member_expression [31142,31163]"/>
  <match src="primitive_type [88417,88424]" dest="primitive_type [75607,75614]"/>
  <match src="): ) [103656,103657]" dest="): ) [43042,43043]"/>
  <match src="primitive_type [86721,86725]" dest="primitive_type [28512,28516]"/>
  <match src="identifier: self [6936,6940]" dest="identifier: self [7464,7468]"/>
  <match src="primitive_type [81041,81048]" dest="primitive_type [62635,62642]"/>
  <match src="address: address [50689,50696]" dest="address: address [55391,55398]"/>
  <match src="type_name [62888,62895]" dest="type_name [78003,78010]"/>
  <match src="primitive_type [76648,76655]" dest="primitive_type [56884,56891]"/>
  <match src="identifier: FOUR_BIT_MASK [36450,36463]" dest="identifier: FOUR_BIT_MASK [54162,54175]"/>
  <match src="member_expression [98510,98529]" dest="member_expression [37896,37915]"/>
  <match src="?: ? [80481,80482]" dest="?: ? [71576,71577]"/>
  <match src="returns: returns [94788,94795]" dest="returns: returns [34174,34181]"/>
  <match src="): ) [52578,52579]" dest="): ) [20702,20703]"/>
  <match src="identifier: supply [91198,91204]" dest="identifier: supply [30584,30590]"/>
  <match src="string_literal [24940,24973]" dest="string_literal [78498,78527]"/>
  <match src="): ) [54275,54276]" dest="): ) [22399,22400]"/>
  <match src="(: ( [9565,9566]" dest="(: ( [10093,10094]"/>
  <match src="state_mutability [93993,93997]" dest="state_mutability [33379,33383]"/>
  <match src="identifier: value [8203,8208]" dest="identifier: value [8731,8736]"/>
  <match src="identifier: msg [82197,82200]" dest="identifier: msg [78311,78314]"/>
  <match src="byte: byte [35916,35920]" dest="byte: byte [53628,53632]"/>
  <match src="call_argument [104391,104397]" dest="call_argument [43777,43783]"/>
  <match src="type_name [65661,65673]" dest="type_name [67726,67738]"/>
  <match src="identifier: a [6205,6206]" dest="identifier: a [6733,6734]"/>
  <match src="member_expression [93595,93610]" dest="member_expression [32981,32996]"/>
  <match src="): ) [85175,85176]" dest="): ) [74503,74504]"/>
  <match src="!: ! [31536,31537]" dest="!: ! [49248,49249]"/>
  <match src="return_type_definition [92550,92567]" dest="return_type_definition [31936,31953]"/>
  <match src="string [83662,83670]" dest="string [78919,78926]"/>
  <match src="primitive_type [92804,92811]" dest="primitive_type [32190,32197]"/>
  <match src="identifier: period [95946,95952]" dest="identifier: period [35332,35338]"/>
  <match src="type_name [93906,93913]" dest="type_name [33292,33299]"/>
  <match src="revert: revert [27904,27910]" dest="revert: revert [45616,45622]"/>
  <match src="type_name [78820,78827]" dest="type_name [70338,70345]"/>
  <match src="assignment_expression [98804,98869]" dest="assignment_expression [38190,38255]"/>
  <match src="pure: pure [5941,5945]" dest="pure: pure [6469,6473]"/>
  <match src="comment: /* Deployed */ [43282,43296]" dest="comment: /* Deployed */ [13379,13393]"/>
  <match src="identifier: Bond [78963,78967]" dest="identifier: Unbond [70558,70564]"/>
  <match src="bool: bool [96438,96442]" dest="bool: bool [35824,35828]"/>
  <match src=",: , [82704,82705]" dest=",: , [62772,62773]"/>
  <match src="{: { [96444,96445]" dest="{: { [35830,35831]"/>
  <match src="identifier: i [35156,35157]" dest="identifier: i [52868,52869]"/>
  <match src="expression_statement [98985,99093]" dest="expression_statement [38371,38479]"/>
  <match src="member_expression [101420,101442]" dest="member_expression [40806,40828]"/>
  <match src="identifier: input [36672,36677]" dest="identifier: input [54384,54389]"/>
  <match src="type_name [27336,27343]" dest="type_name [45048,45055]"/>
  <match src="call_expression [4092,4129]" dest="call_expression [4620,4657]"/>
  <match src="(: ( [32174,32175]" dest="(: ( [49886,49887]"/>
  <match src="(: ( [77475,77476]" dest="(: ( [61625,61626]"/>
  <match src="state_mutability [9013,9017]" dest="state_mutability [9541,9545]"/>
  <match src="identifier: CURRENT_EPOCH_OFFSET [42033,42053]" dest="identifier: CURRENT_EPOCH_OFFSET [12130,12150]"/>
  <match src="identifier: balanceOfStaged [92372,92387]" dest="identifier: balanceOfStaged [31758,31773]"/>
  <match src="type_name [34735,34742]" dest="type_name [52447,52454]"/>
  <match src="call_expression [32343,32369]" dest="call_expression [50055,50081]"/>
  <match src="identifier: ADVANCE_INCENTIVE [42652,42669]" dest="identifier: ADVANCE_INCENTIVE [12749,12766]"/>
  <match src="identifier: c [3443,3444]" dest="identifier: c [3971,3972]"/>
  <match src="external: external [52551,52559]" dest="external: external [20675,20683]"/>
  <match src="memory: memory [6296,6302]" dest="memory: memory [6824,6830]"/>
  <match src="uint256: uint256 [103126,103133]" dest="uint256: uint256 [42512,42519]"/>
  <match src="(: ( [35599,35600]" dest="(: ( [53311,53312]"/>
  <match src="member_expression [102256,102276]" dest="member_expression [41642,41662]"/>
  <match src="type_name [68108,68115]" dest="type_name [65571,65578]"/>
  <match src="yul_identifier [85148,85152]" dest="yul_identifier [74476,74480]"/>
  <match src="identifier: value [8755,8760]" dest="identifier: value [9283,9288]"/>
  <match src=":: : [80546,80547]" dest=":: : [71637,71638]"/>
  <match src="uint256: uint256 [1725,1732]" dest="uint256: uint256 [2253,2260]"/>
  <match src="visibility [52551,52559]" dest="visibility [20675,20683]"/>
  <match src="parameter [52937,52944]" dest="parameter [21061,21068]"/>
  <match src="(: ( [92863,92864]" dest="(: ( [32249,32250]"/>
  <match src="false [97815,97820]" dest="false [37201,37206]"/>
  <match src="expression_statement [19802,19874]" dest="expression_statement [64025,64139]"/>
  <match src="enum_value: REJECT [86549,86555]" dest="enum_value: REJECT [28340,28346]"/>
  <match src="call_argument [98556,98562]" dest="call_argument [37942,37948]"/>
  <match src="call_expression [105708,105839]" dest="call_expression [68852,68983]"/>
  <match src="string_literal [462,491]" dest="string_literal [990,1019]"/>
  <match src="call_argument [100447,100453]" dest="call_argument [39833,39839]"/>
  <match src="variable_declaration_statement [33382,33405]" dest="variable_declaration_statement [51094,51117]"/>
  <match src="return: return [1988,1994]" dest="return: return [2516,2522]"/>
  <match src=".: . [100395,100396]" dest=".: . [39781,39782]"/>
  <match src="if: if [102802,102804]" dest="if: if [42188,42190]"/>
  <match src="call_expression [105734,105751]" dest="call_expression [68878,68895]"/>
  <match src="): ) [91506,91507]" dest="): ) [30892,30893]"/>
  <match src="}: } [92955,92956]" dest="}: } [32341,32342]"/>
  <match src="if_statement [36668,36747]" dest="if_statement [54380,54459]"/>
  <match src="=: = [102570,102571]" dest="=: = [41956,41957]"/>
  <match src="uint256: uint256 [82487,82494]" dest="uint256: uint256 [61354,61361]"/>
  <match src="): ) [30783,30784]" dest="): ) [48495,48496]"/>
  <match src="identifier: require [25164,25171]" dest="identifier: decrementApproveFor [79402,79421]"/>
  <match src="primitive_type [91042,91049]" dest="primitive_type [30428,30435]"/>
  <match src="}: } [22495,22496]" dest="}: } [64748,64749]"/>
  <match src="address: address [91236,91243]" dest="address: address [30622,30629]"/>
  <match src="member_expression [91555,91577]" dest="member_expression [30941,30963]"/>
  <match src="call_argument [31267,31275]" dest="call_argument [48979,48987]"/>
  <match src="call_argument [92722,92729]" dest="call_argument [32108,32115]"/>
  <match src="variable_declaration_statement [34735,34762]" dest="variable_declaration_statement [52447,52474]"/>
  <match src="parameter [8874,8878]" dest="parameter [9402,9406]"/>
  <match src="]: ] [95944,95945]" dest="]: ] [35330,35331]"/>
  <match src="struct_member [86995,87008]" dest="struct_member [28786,28799]"/>
  <match src="expression_statement [83095,83278]" dest="expression_statement [58682,58882]"/>
  <match src=",: , [7695,7696]" dest=",: , [8223,8224]"/>
  <match src="identifier: to [53285,53287]" dest="identifier: to [21409,21411]"/>
  <match src="uint256: uint256 [98165,98172]" dest="uint256: uint256 [37551,37558]"/>
  <match src="identifier: shift [35244,35249]" dest="identifier: shift [52956,52961]"/>
  <match src=".: . [93186,93187]" dest=".: . [32572,32573]"/>
  <match src="identifier: implementation [106204,106218]" dest="identifier: implementation [69348,69362]"/>
  <match src="return_statement [95145,95193]" dest="return_statement [34531,34579]"/>
  <match src="member_expression [92694,92735]" dest="member_expression [32080,32121]"/>
  <match src="identifier: i [33250,33251]" dest="identifier: i [50962,50963]"/>
  <match src="call_argument [99410,99420]" dest="call_argument [38796,38806]"/>
  <match src="contract: contract [85894,85902]" dest="contract: contract [27685,27693]"/>
  <match src="}: } [49764,49765]" dest="}: } [26147,26148]"/>
  <match src="assembly: assembly [89682,89690]" dest="assembly: assembly [76872,76880]"/>
  <match src="return: return [1412,1418]" dest="return: return [1940,1946]"/>
  <match src="return: return [95910,95916]" dest="return: return [35296,35302]"/>
  <match src="parameter [54391,54398]" dest="parameter [22515,22522]"/>
  <match src="memory: memory [44862,44868]" dest="memory: memory [14959,14965]"/>
  <match src="returns: returns [4057,4064]" dest="returns: returns [4585,4592]"/>
  <match src="constant: constant [42968,42976]" dest="constant: constant [13065,13073]"/>
  <match src="}: } [34618,34619]" dest="}: } [52330,52331]"/>
  <match src="type_name [81185,81192]" dest="type_name [62668,62675]"/>
  <match src="uint256: uint256 [43599,43606]" dest="uint256: uint256 [13696,13703]"/>
  <match src="identifier: amount [75191,75197]" dest="identifier: amount [83369,83375]"/>
  <match src="identifier: supply [99367,99373]" dest="identifier: supply [38753,38759]"/>
  <match src="identifier: fluidUntil [71908,71918]" dest="identifier: add [81016,81019]"/>
  <match src="address: address [54068,54075]" dest="address: address [22192,22199]"/>
  <match src="return_type_definition [52480,52494]" dest="return_type_definition [20604,20618]"/>
  <match src="(: ( [9034,9035]" dest="(: ( [9562,9563]"/>
  <match src="call_argument [79983,79993]" dest="call_argument [71205,71215]"/>
  <match src="parameter [96025,96032]" dest="parameter [35411,35418]"/>
  <match src="type_name [4066,4073]" dest="type_name [4594,4601]"/>
  <match src="uint256: uint256 [41376,41383]" dest="uint256: uint256 [11473,11480]"/>
  <match src="identifier: _state [103215,103221]" dest="identifier: _state [42601,42607]"/>
  <match src="[: [ [33354,33355]" dest="[: [ [51066,51067]"/>
  <match src="type_name [41376,41383]" dest="type_name [11473,11480]"/>
  <match src="primitive_type [51069,51076]" dest="primitive_type [64459,64466]"/>
  <match src="variable_declaration_statement [89637,89672]" dest="variable_declaration_statement [76827,76862]"/>
  <match src="uint256: uint256 [42538,42545]" dest="uint256: uint256 [12635,12642]"/>
  <match src="[: [ [94836,94837]" dest="[: [ [34222,34223]"/>
  <match src="primitive_type [92426,92433]" dest="primitive_type [31812,31819]"/>
  <match src="state_mutability [93555,93559]" dest="state_mutability [32941,32945]"/>
  <match src="call_expression [82518,82601]" dest="call_expression [72646,72689]"/>
  <match src="return: return [95638,95644]" dest="return: return [35024,35030]"/>
  <match src="variable_declaration_statement [81041,81095]" dest="variable_declaration_statement [62635,62659]"/>
  <match src="memory: memory [7684,7690]" dest="memory: memory [8212,8218]"/>
  <match src="uint256: uint256 [2017,2024]" dest="uint256: uint256 [2545,2552]"/>
  <match src="call_argument [83139,83152]" dest="call_argument [58991,59004]"/>
  <match src="pure: pure [30802,30806]" dest="pure: pure [48514,48518]"/>
  <match src="primitive_type [98916,98923]" dest="primitive_type [38302,38309]"/>
  <match src=",: , [53171,53172]" dest=",: , [21295,21296]"/>
  <match src="identifier: _state [98985,98991]" dest="identifier: _state [38371,38377]"/>
  <match src="type_name [53005,53009]" dest="type_name [21129,21133]"/>
  <match src="expression_statement [23063,23090]" dest="expression_statement [55952,55987]"/>
  <match src="}: } [8217,8218]" dest="}: } [8745,8746]"/>
  <match src="): ) [81801,81802]" dest="): ) [79807,79808]"/>
  <match src="number_literal: 1608422400 [42110,42120]" dest="number_literal: 1608422400 [12207,12217]"/>
  <match src="external: external [81943,81951]" dest="external: external [79955,79963]"/>
  <match src="function_definition [90905,90979]" dest="function_definition [30291,30365]"/>
  <match src="type_name [96291,96298]" dest="type_name [35677,35684]"/>
  <match src="array_access [96598,96626]" dest="array_access [35984,36012]"/>
  <match src="uint256: uint256 [85981,85988]" dest="uint256: uint256 [27772,27779]"/>
  <match src="inheritance_specifier [78466,78477]" dest="inheritance_specifier [70192,70199]"/>
  <match src="): ) [46565,46566]" dest="): ) [16662,16663]"/>
  <match src=",: , [31976,31977]" dest=",: , [49688,49689]"/>
  <match src="(: ( [101578,101579]" dest="(: ( [40964,40965]"/>
  <match src="yul_function_call [85156,85176]" dest="yul_function_call [74484,74504]"/>
  <match src="type_name [102464,102471]" dest="type_name [41850,41857]"/>
  <match src="new: new [33694,33697]" dest="new: new [51406,51409]"/>
  <match src="}: } [7541,7542]" dest="}: } [8069,8070]"/>
  <match src="parameter [96119,96136]" dest="parameter [35505,35522]"/>
  <match src="type_cast_expression [35921,35938]" dest="type_cast_expression [53633,53650]"/>
  <match src="contract_body [105565,106345]" dest="contract_body [68709,69489]"/>
  <match src="identifier: balance [98207,98214]" dest="identifier: balance [37593,37600]"/>
  <match src=".: . [103906,103907]" dest=".: . [43292,43293]"/>
  <match src="variable_declaration [81041,81064]" dest="variable_declaration [62635,62648]"/>
  <match src="call_argument [46001,46029]" dest="call_argument [16098,16126]"/>
  <match src="visibility [23232,23239]" dest="visibility [59254,59261]"/>
  <match src="return_type_definition [9487,9501]" dest="return_type_definition [10015,10029]"/>
  <match src="identifier: priceCumulative [65560,65575]" dest="identifier: staged [72103,72109]"/>
  <match src="identifier: votes [86706,86711]" dest="identifier: votes [28497,28502]"/>
  <match src="string [21949,21985]" dest="string [63567,63611]"/>
  <match src="return_type_definition [8134,8155]" dest="return_type_definition [8662,8683]"/>
  <match src="identifier: newUniv2 [82328,82336]" dest="identifier: poolReward [56956,56966]"/>
  <match src="type_name [86797,86804]" dest="type_name [28588,28595]"/>
  <match src="return_type_definition [7402,7423]" dest="return_type_definition [7930,7951]"/>
  <match src="bytes32: bytes32 [78736,78743]" dest="bytes32: bytes32 [70251,70258]"/>
  <match src="call_argument [8395,8402]" dest="call_argument [8923,8930]"/>
  <match src="=: = [89057,89058]" dest="=: = [76247,76248]"/>
  <match src=",: , [79410,79411]" dest=",: , [70973,70974]"/>
  <match src=".: . [100058,100059]" dest=".: . [39444,39445]"/>
  <match src="function_definition [6420,6592]" dest="function_definition [6948,7120]"/>
  <match src="member_expression [100641,100710]" dest="member_expression [40027,40096]"/>
  <match src="function: function [54119,54127]" dest="function: function [22243,22251]"/>
  <match src="primitive_type [53579,53583]" dest="primitive_type [21703,21707]"/>
  <match src="primitive_type [52060,52067]" dest="primitive_type [20184,20191]"/>
  <match src="expression_statement [48774,48821]" dest="expression_statement [55767,55838]"/>
  <match src="type_name [92388,92395]" dest="type_name [31774,31781]"/>
  <match src="function_definition [52586,52656]" dest="function_definition [20710,20780]"/>
  <match src=",: , [30360,30361]" dest=",: , [48072,48073]"/>
  <match src="identifier: value [8744,8749]" dest="identifier: value [9272,9277]"/>
  <match src="string: string [30183,30189]" dest="string: string [47895,47901]"/>
  <match src="}: } [91783,91784]" dest="}: } [31169,31170]"/>
  <match src="primitive_type [53925,53929]" dest="primitive_type [22049,22053]"/>
  <match src="call_expression [9867,9888]" dest="call_expression [10395,10416]"/>
  <match src="struct_declaration [5817,5859]" dest="struct_declaration [6345,6387]"/>
  <match src="parameter [30645,30654]" dest="parameter [48357,48366]"/>
  <match src="member_expression [99252,99284]" dest="member_expression [38638,38670]"/>
  <match src="member_expression [57979,57994]" dest="member_expression [83245,83260]"/>
  <match src="visibility [44128,44136]" dest="visibility [14225,14233]"/>
  <match src="call_struct_argument [7283,7307]" dest="call_struct_argument [7811,7835]"/>
  <match src="(: ( [90830,90831]" dest="(: ( [30216,30217]"/>
  <match src=".: . [101185,101186]" dest=".: . [40571,40572]"/>
  <match src="identifier: spender [102050,102057]" dest="identifier: spender [41436,41443]"/>
  <match src="parameter [100214,100234]" dest="parameter [39600,39620]"/>
  <match src="address: address [105681,105688]" dest="address: address [68825,68832]"/>
  <match src="parameter [98316,98336]" dest="parameter [37702,37722]"/>
  <match src=",: , [29775,29776]" dest=",: , [47487,47488]"/>
  <match src="/=: /= [34575,34577]" dest="/=: /= [52287,52289]"/>
  <match src="function_body [99573,99839]" dest="function_body [38959,39225]"/>
  <match src="member_expression [104317,104334]" dest="member_expression [43703,43720]"/>
  <match src=",: , [81136,81137]" dest=",: , [81286,81287]"/>
  <match src="unary_expression [29553,29558]" dest="unary_expression [47265,47270]"/>
  <match src="(: ( [32588,32589]" dest="(: ( [50300,50301]"/>
  <match src="(: ( [99042,99043]" dest="(: ( [38428,38429]"/>
  <match src="pure: pure [6879,6883]" dest="pure: pure [7407,7411]"/>
  <match src="=: = [102765,102766]" dest="=: = [42151,42152]"/>
  <match src="parameter [795,804]" dest="parameter [1323,1332]"/>
  <match src=",: , [32074,32075]" dest=",: , [49786,49787]"/>
  <match src="internal: internal [102237,102245]" dest="internal: internal [41623,41631]"/>
  <match src="event_paramater [53255,53267]" dest="event_paramater [21379,21391]"/>
  <match src="type_name [25997,26004]" dest="type_name [55900,55907]"/>
  <match src="call_expression [27956,28127]" dest="call_expression [45668,45839]"/>
  <match src="identifier: outstandingCouponsForEpoch [102738,102764]" dest="identifier: outstandingCouponsForEpoch [42124,42150]"/>
  <match src="call_argument [6087,6100]" dest="call_argument [6615,6628]"/>
  <match src=",: , [30308,30309]" dest=",: , [48020,48021]"/>
  <match src="call_expression [866,909]" dest="call_expression [1394,1437]"/>
  <match src="identifier: Permission [105543,105553]" dest="identifier: Permission [68687,68697]"/>
  <match src="identifier: add [7817,7820]" dest="identifier: add [8345,8348]"/>
  <match src="public: public [96554,96560]" dest="public: public [35940,35946]"/>
  <match src="identifier: _state [100771,100777]" dest="identifier: _state [40157,40163]"/>
  <match src="augmented_assignment_expression [34031,34038]" dest="augmented_assignment_expression [51743,51750]"/>
  <match src="parameter [49648,49663]" dest="parameter [26031,26046]"/>
  <match src="type_cast_expression [27928,28145]" dest="type_cast_expression [45640,45857]"/>
  <match src="): ) [71469,71470]" dest="): ) [81798,81799]"/>
  <match src="{: { [93158,93159]" dest="{: { [32544,32545]"/>
  <match src="(: ( [28097,28098]" dest="(: ( [45809,45810]"/>
  <match src="call_argument [73294,73300]" dest="call_argument [56219,56225]"/>
  <match src="state_variable_declaration [105571,105616]" dest="state_variable_declaration [68715,68760]"/>
  <match src="identifier: _state [101529,101535]" dest="identifier: _state [40915,40921]"/>
  <match src="uint256: uint256 [86005,86012]" dest="uint256: uint256 [27796,27803]"/>
  <match src="type_name [7875,7879]" dest="type_name [8403,8407]"/>
  <match src="}: } [96093,96094]" dest="}: } [35479,35480]"/>
  <match src="identifier: _state [99618,99624]" dest="identifier: _state [39004,39010]"/>
  <match src="(: ( [79467,79468]" dest="(: ( [71030,71031]"/>
  <match src="call_expression [82518,82569]" dest="call_expression [72646,72670]"/>
  <match src="{: { [94664,94665]" dest="{: { [34050,34051]"/>
  <match src="(: ( [97900,97901]" dest="(: ( [37286,37287]"/>
  <match src="user_defined_type [61864,61876]" dest="user_defined_type [26919,26931]"/>
  <match src="parameter [32796,32809]" dest="parameter [50508,50521]"/>
  <match src="identifier: mul [81352,81355]" dest="identifier: div [72151,72154]"/>
  <match src="function: function [98447,98455]" dest="function: function [37833,37841]"/>
  <match src="returns: returns [45664,45671]" dest="returns: returns [15761,15768]"/>
  <match src="call_argument [30253,30277]" dest="call_argument [47965,47989]"/>
  <match src="enum_value: Locked [85945,85951]" dest="enum_value: Locked [27736,27742]"/>
  <match src="visibility [44251,44259]" dest="visibility [14348,14356]"/>
  <match src="(: ( [44668,44669]" dest="(: ( [14765,14766]"/>
  <match src="external: external [54145,54153]" dest="external: external [22269,22277]"/>
  <match src="type_name [64893,64900]" dest="type_name [72628,72635]"/>
  <match src="): ) [49761,49762]" dest="): ) [26144,26145]"/>
  <match src="identifier: file [28232,28236]" dest="identifier: file [45944,45948]"/>
  <match src="identifier: abi [30898,30901]" dest="identifier: abi [48610,48613]"/>
  <match src=".: . [104323,104324]" dest=".: . [43709,43710]"/>
  <match src="type_name [96119,96126]" dest="type_name [35505,35512]"/>
  <match src="type_name [32032,32039]" dest="type_name [49744,49751]"/>
  <match src="uint256: uint256 [98916,98923]" dest="uint256: uint256 [38302,38309]"/>
  <match src="identifier: sender [81967,81973]" dest="identifier: sender [71478,71484]"/>
  <match src="identifier: expiration [86369,86379]" dest="identifier: expiration [28160,28170]"/>
  <match src="primitive_type [86005,86012]" dest="primitive_type [27796,27803]"/>
  <match src="type_name [17569,17576]" dest="type_name [59404,59411]"/>
  <match src="function_body [102246,102313]" dest="function_body [41632,41699]"/>
  <match src="(: ( [82761,82762]" dest="(: ( [58101,58102]"/>
  <match src="identifier: recipient [19810,19819]" dest="identifier: recipient [64046,64055]"/>
  <match src="uint256: uint256 [81301,81308]" dest="uint256: uint256 [61786,61793]"/>
  <match src="primitive_type [93747,93754]" dest="primitive_type [33133,33140]"/>
  <match src="identifier: balanceOfBonded [92505,92520]" dest="identifier: balanceOfBonded [31891,31906]"/>
  <match src="return_statement [45076,45132]" dest="return_statement [15173,15229]"/>
  <match src="member_expression [7984,7994]" dest="member_expression [8512,8522]"/>
  <match src="function_body [93578,93638]" dest="function_body [32964,33024]"/>
  <match src="parameter [94619,94632]" dest="parameter [34005,34018]"/>
  <match src="assignment_expression [100872,100931]" dest="assignment_expression [40258,40317]"/>
  <match src="event_paramater [53149,53171]" dest="event_paramater [21273,21295]"/>
  <match src="bytes: bytes [35663,35668]" dest="bytes: bytes [53375,53380]"/>
  <match src="state_mutability [91415,91419]" dest="state_mutability [30801,30805]"/>
  <match src="): ) [28021,28022]" dest="): ) [45733,45734]"/>
  <match src="call_argument [48748,48762]" dest="call_argument [56054,56098]"/>
  <match src="member_expression [102904,102926]" dest="member_expression [42290,42312]"/>
  <match src="uint256: uint256 [68132,68139]" dest="uint256: uint256 [65755,65762]"/>
  <match src="member_expression [93345,93359]" dest="member_expression [32731,32745]"/>
  <match src="array_access [101529,101553]" dest="array_access [40915,40939]"/>
  <match src="function_body [106153,106343]" dest="function_body [69297,69487]"/>
  <match src="(: ( [8555,8556]" dest="(: ( [9083,9084]"/>
  <match src="identifier: period [41989,41995]" dest="identifier: period [12086,12092]"/>
  <match src="binary_expression [96461,96499]" dest="binary_expression [35847,35885]"/>
  <match src="returns: returns [9487,9494]" dest="returns: returns [10015,10022]"/>
  <match src="type_name [77351,77358]" dest="type_name [17552,17559]"/>
  <match src="(: ( [99164,99165]" dest="(: ( [38550,38551]"/>
  <match src="call_argument [23073,23080]" dest="call_argument [55970,55977]"/>
  <match src=".: . [94687,94688]" dest=".: . [34073,34074]"/>
  <match src="type_name [94900,94907]" dest="type_name [34286,34293]"/>
  <match src="identifier: amount [17577,17583]" dest="identifier: amount [59412,59418]"/>
  <match src="returns: returns [16698,16705]" dest="returns: returns [58254,58261]"/>
  <match src="event_paramater [79050,79073]" dest="event_paramater [70438,70461]"/>
  <match src="identifier: temp [7511,7515]" dest="identifier: temp [8039,8043]"/>
  <match src="): ) [71163,71164]" dest="): ) [67167,67168]"/>
  <match src="identifier: account [50697,50704]" dest="identifier: account [55399,55406]"/>
  <match src="{: { [21045,21046]" dest="{: { [56195,56196]"/>
  <match src="primitive_type [6246,6253]" dest="primitive_type [6774,6781]"/>
  <match src="call_argument [70382,70395]" dest="call_argument [58727,58740]"/>
  <match src="call_argument [94377,94392]" dest="call_argument [33763,33778]"/>
  <match src="identifier: capture [61838,61845]" dest="identifier: capture [26893,26900]"/>
  <match src="primitive_type [76825,76832]" dest="primitive_type [66393,66400]"/>
  <match src="expression_statement [79686,79813]" dest="expression_statement [71233,71363]"/>
  <match src="user_defined_type [7857,7861]" dest="user_defined_type [8385,8389]"/>
  <match src="identifier: onlyFrozenOrLocked [105928,105946]" dest="identifier: onlyFrozenOrLocked [69072,69090]"/>
  <match src="identifier: value [8365,8370]" dest="identifier: value [8893,8898]"/>
  <match src="uint256: uint256 [42952,42959]" dest="uint256: uint256 [13049,13056]"/>
  <match src="{: { [6304,6305]" dest="{: { [6832,6833]"/>
  <match src="uint256: uint256 [78937,78944]" dest="uint256: uint256 [61061,61068]"/>
  <match src="state_mutability [45924,45928]" dest="state_mutability [16021,16025]"/>
  <match src="): ) [94371,94372]" dest="): ) [33757,33758]"/>
  <match src=".: . [81853,81854]" dest=".: . [72435,72436]"/>
  <match src="bytes2: bytes2 [27534,27540]" dest="bytes2: bytes2 [45246,45252]"/>
  <match src="assignment_expression [102369,102414]" dest="assignment_expression [41755,41800]"/>
  <match src="(: ( [92558,92559]" dest="(: ( [31944,31945]"/>
  <match src="parameter [54098,54112]" dest="parameter [22222,22236]"/>
  <match src=",: , [19932,19933]" dest=",: , [56736,56737]"/>
  <match src="[: [ [34956,34957]" dest="[: [ [52668,52669]"/>
  <match src="call_argument [43362,43404]" dest="call_argument [13459,13501]"/>
  <match src="return_type_definition [52412,52426]" dest="return_type_definition [20536,20550]"/>
  <match src="identifier: add [100009,100012]" dest="identifier: add [39395,39398]"/>
  <match src="identifier: accounts [91075,91083]" dest="identifier: accounts [30461,30469]"/>
  <match src="type_name [6162,6166]" dest="type_name [6690,6694]"/>
  <match src="): ) [6460,6461]" dest="): ) [6988,6989]"/>
  <match src="call_argument [34967,34984]" dest="call_argument [52679,52696]"/>
  <match src="primitive_type [52810,52814]" dest="primitive_type [20934,20938]"/>
  <match src="[: [ [86396,86397]" dest="[: [ [28187,28188]"/>
  <match src="(: ( [44643,44644]" dest="(: ( [14740,14741]"/>
  <match src="identifier: _state [103844,103850]" dest="identifier: _state [43230,43236]"/>
  <match src="block_statement [33364,33637]" dest="block_statement [51076,51349]"/>
  <match src="user_defined_type [90457,90462]" dest="user_defined_type [29843,29848]"/>
  <match src="identifier: offset [43829,43835]" dest="identifier: offset [13926,13932]"/>
  <match src="indexed: indexed [97606,97613]" dest="indexed: indexed [36992,36999]"/>
  <match src="event_paramater [53394,53409]" dest="event_paramater [21518,21533]"/>
  <match src="call_struct_argument [7524,7541]" dest="call_struct_argument [8052,8069]"/>
  <match src="identifier: epoch [101194,101199]" dest="identifier: epoch [40580,40585]"/>
  <match src="identifier: balance [98400,98407]" dest="identifier: balance [37786,37793]"/>
  <match src="primitive_type [93042,93049]" dest="primitive_type [32428,32435]"/>
  <match src="number_literal: 18 [5766,5768]" dest="number_literal: 18 [6294,6296]"/>
  <match src="{: { [7776,7777]" dest="{: { [8304,8305]"/>
  <match src="identifier: D256 [6321,6325]" dest="identifier: D256 [6849,6853]"/>
  <match src="comment: // ============ Core Methods ============ [9666,9707]" dest="comment: // ============ Core Methods ============ [10194,10235]"/>
  <match src="identifier: amount [98032,98038]" dest="identifier: amount [37418,37424]"/>
  <match src="function: function [103939,103947]" dest="function: function [43325,43333]"/>
  <match src="}: } [29954,29955]" dest="}: } [47666,47667]"/>
  <match src="type_name [42952,42959]" dest="type_name [13049,13056]"/>
  <match src="type_name [87200,87231]" dest="type_name [28991,29022]"/>
  <match src="visibility [52792,52800]" dest="visibility [20916,20924]"/>
  <match src="identifier: balanceCheck [79497,79509]" dest="identifier: balanceCheck [56780,56792]"/>
  <match src="identifier: pool [91669,91673]" dest="identifier: pool [31055,31059]"/>
  <match src="type_name [7017,7024]" dest="type_name [7545,7552]"/>
  <match src="primitive_type [52937,52944]" dest="primitive_type [21061,21068]"/>
  <match src="uint256: uint256 [11678,11685]" dest="uint256: uint256 [22979,22986]"/>
  <match src="state_mutability [46106,46110]" dest="state_mutability [16203,16207]"/>
  <match src="address: address [49708,49715]" dest="address: address [26091,26098]"/>
  <match src="returns: returns [52641,52648]" dest="returns: returns [20765,20772]"/>
  <match src="boolean_literal [98086,98091]" dest="boolean_literal [37472,37477]"/>
  <match src="return: return [46609,46615]" dest="return: return [16706,16712]"/>
  <match src="(: ( [7820,7821]" dest="(: ( [8348,8349]"/>
  <match src="uint: uint [52574,52578]" dest="uint: uint [20698,20702]"/>
  <match src="): ) [6584,6585]" dest="): ) [7112,7113]"/>
  <match src="): ) [89236,89237]" dest="): ) [76426,76427]"/>
  <match src="call_argument [102944,102970]" dest="call_argument [42330,42356]"/>
  <match src="parameter [45779,45798]" dest="parameter [15876,15895]"/>
  <match src="identifier: _state [87340,87346]" dest="identifier: _state [29131,29137]"/>
  <match src="(: ( [94356,94357]" dest="(: ( [33742,33743]"/>
  <match src="function: function [65204,65212]" dest="function: function [66534,66542]"/>
  <match src="function_body [6906,6980]" dest="function_body [7434,7508]"/>
  <match src="call_argument [32262,32286]" dest="call_argument [49974,49998]"/>
  <match src="type_name [84669,84676]" dest="type_name [73997,74004]"/>
  <match src="emit: emit [99396,99400]" dest="emit: emit [38782,38786]"/>
  <match src="call_argument [81497,81507]" dest="call_argument [71711,71721]"/>
  <match src="identifier: balanceCheck [79823,79835]" dest="identifier: balanceCheck [56565,56577]"/>
  <match src="number_literal: 1 [55326,55327]" dest="number_literal: 1 [80279,80280]"/>
  <match src="call_argument [104580,104589]" dest="call_argument [43966,43975]"/>
  <match src="call_expression [102061,102168]" dest="call_expression [41447,41554]"/>
  <match src="pure: pure [44541,44545]" dest="pure: pure [14638,14642]"/>
  <match src="identifier: reason [30694,30700]" dest="identifier: reason [48406,48412]"/>
  <match src="member_expression [98393,98418]" dest="member_expression [37779,37804]"/>
  <match src="): ) [90923,90924]" dest="): ) [30309,30310]"/>
  <match src="{: { [6326,6327]" dest="{: { [6854,6855]"/>
  <match src="event_definition [53138,53201]" dest="event_definition [21262,21325]"/>
  <match src="{: { [95273,95274]" dest="{: { [34659,34660]"/>
  <match src="uint256: uint256 [4726,4733]" dest="uint256: uint256 [5254,5261]"/>
  <match src="type_name [49725,49732]" dest="type_name [26108,26115]"/>
  <match src="binary_expression [51034,51080]" dest="binary_expression [64419,64470]"/>
  <match src="parameter [98769,98783]" dest="parameter [38155,38169]"/>
  <match src="}: } [2710,2711]" dest="}: } [3238,3239]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [41401,41421]" dest="identifier: BOOTSTRAPPING_PERIOD [11498,11518]"/>
  <match src="primitive_type [82302,82309]" dest="primitive_type [58286,58293]"/>
  <match src="string_literal [105808,105829]" dest="string_literal [68952,68973]"/>
  <match src="variable_declaration [80310,80342]" dest="variable_declaration [66599,66615]"/>
  <match src="call_argument [17732,17738]" dest="call_argument [17760,17766]"/>
  <match src="visibility [7720,7728]" dest="visibility [8248,8256]"/>
  <match src="primitive_type [104757,104764]" dest="primitive_type [44143,44150]"/>
  <match src="binary_expression [21848,21867]" dest="binary_expression [62491,62507]"/>
  <match src="identifier: COMMA [29243,29248]" dest="identifier: COMMA [46955,46960]"/>
  <match src="member_expression [98224,98249]" dest="member_expression [37610,37635]"/>
  <match src="identifier: epoch [100742,100747]" dest="identifier: epoch [40128,40133]"/>
  <match src="type_cast_expression [35007,35034]" dest="type_cast_expression [52719,52746]"/>
  <match src="function: function [46232,46240]" dest="function: function [16329,16337]"/>
  <match src="number_literal: 0 [92944,92945]" dest="number_literal: 0 [32330,32331]"/>
  <match src="variable_declaration_statement [34090,34128]" dest="variable_declaration_statement [51802,51840]"/>
  <match src="parameter [5955,5966]" dest="parameter [6483,6494]"/>
  <match src="state_variable_declaration [41534,41632]" dest="state_variable_declaration [11631,11729]"/>
  <match src="{: { [46599,46600]" dest="{: { [16696,16697]"/>
  <match src="primitive_type [86895,86902]" dest="primitive_type [28686,28693]"/>
  <match src="uint256: uint256 [41297,41304]" dest="uint256: uint256 [11394,11401]"/>
  <match src="event_paramater [53503,53519]" dest="event_paramater [21627,21643]"/>
  <match src="}: } [100460,100461]" dest="}: } [39846,39847]"/>
  <match src="string_literal [89555,89616]" dest="string_literal [76745,76806]"/>
  <match src="(: ( [79399,79400]" dest="(: ( [70962,70963]"/>
  <match src="}: } [43534,43535]" dest="}: } [13631,13632]"/>
  <match src="address: address [103107,103114]" dest="address: address [42493,42500]"/>
  <match src="identifier: b [8753,8754]" dest="identifier: b [9281,9282]"/>
  <match src="is: is [62646,62648]" dest="is: is [65451,65453]"/>
  <match src="): ) [100578,100579]" dest="): ) [39964,39965]"/>
  <match src="): ) [27841,27842]" dest="): ) [45553,45554]"/>
  <match src="primitive_type [53269,53276]" dest="primitive_type [21393,21400]"/>
  <match src="primitive_type [53991,53995]" dest="primitive_type [22115,22119]"/>
  <match src="{: { [6906,6907]" dest="{: { [7434,7435]"/>
  <match src="return_type_definition [10004,10021]" dest="return_type_definition [10532,10549]"/>
  <match src="if: if [33829,33831]" dest="if: if [51541,51543]"/>
  <match src="address: address [21788,21795]" dest="address: address [63459,63466]"/>
  <match src="function_body [104011,104139]" dest="function_body [43397,43525]"/>
  <match src="memory: memory [45054,45060]" dest="memory: memory [15151,15157]"/>
  <match src="): ) [45445,45446]" dest="): ) [15542,15543]"/>
  <match src="visibility [13045,13053]" dest="visibility [24346,24354]"/>
  <match src="event_paramater [79083,79096]" dest="event_paramater [70471,70484]"/>
  <match src="bool: bool [52650,52654]" dest="bool: bool [20774,20778]"/>
  <match src="(: ( [81116,81117]" dest="(: ( [81139,81140]"/>
  <match src="identifier: self [9467,9471]" dest="identifier: self [9995,9999]"/>
  <match src="returns: returns [97779,97786]" dest="returns: returns [37165,37172]"/>
  <match src="external: external [67300,67308]" dest="external: external [78226,78234]"/>
  <match src="indexed: indexed [13687,13694]" dest="indexed: indexed [24988,24995]"/>
  <match src="primitive_type [52620,52624]" dest="primitive_type [20744,20748]"/>
  <match src=".: . [100734,100735]" dest=".: . [40120,40121]"/>
  <match src="{: { [92160,92161]" dest="{: { [31546,31547]"/>
  <match src="identifier: D256 [7857,7861]" dest="identifier: D256 [8385,8389]"/>
  <match src="call_expression [101592,101626]" dest="call_expression [40978,41012]"/>
  <match src="identifier: msg [80654,80657]" dest="identifier: msg [72358,72361]"/>
  <match src="returns: returns [6043,6050]" dest="returns: returns [6571,6578]"/>
  <match src="identifier: bonded [98408,98414]" dest="identifier: bonded [37794,37800]"/>
  <match src="returns: returns [93998,94005]" dest="returns: returns [33384,33391]"/>
  <match src="call_expression [106307,106323]" dest="call_expression [69451,69467]"/>
  <match src="assignment_expression [102010,102168]" dest="assignment_expression [41396,41554]"/>
  <match src="primitive_type [80235,80242]" dest="primitive_type [71432,71439]"/>
  <match src="call_argument [22447,22485]" dest="call_argument [62606,62623]"/>
  <match src="number_literal: 66e16 [42520,42525]" dest="number_literal: 66e16 [12617,12622]"/>
  <match src="!: ! [28333,28334]" dest="!: ! [46045,46046]"/>
  <match src="constant: constant [90562,90570]" dest="constant: constant [29948,29956]"/>
  <match src="parameter [9455,9471]" dest="parameter [9983,9999]"/>
  <match src="string_literal [22447,22485]" dest="string_literal [62606,62623]"/>
  <match src="type_name [76455,76462]" dest="type_name [60997,61004]"/>
  <match src="visibility [377,385]" dest="visibility [905,913]"/>
  <match src="type_name [7499,7503]" dest="type_name [8027,8031]"/>
  <match src="type_name [70576,70583]" dest="type_name [81600,81607]"/>
  <match src="primitive_type [52489,52493]" dest="primitive_type [20613,20617]"/>
  <match src="uint256: uint256 [78820,78827]" dest="uint256: uint256 [70338,70345]"/>
  <match src="string [82033,82060]" dest="string [80941,80956]"/>
  <match src=".: . [98991,98992]" dest=".: . [38377,38378]"/>
  <match src="identifier: temp [7599,7603]" dest="identifier: temp [8127,8131]"/>
  <match src=",: , [76655,76656]" dest=",: , [56891,56892]"/>
  <match src="identifier: amount [101218,101224]" dest="identifier: amount [40604,40610]"/>
  <match src="primitive_type [101713,101720]" dest="primitive_type [41099,41106]"/>
  <match src=",: , [78477,78478]" dest=",: , [70199,70200]"/>
  <match src=".: . [107465,107466]" dest=".: . [67775,67776]"/>
  <match src="uint256: uint256 [86094,86101]" dest="uint256: uint256 [27885,27892]"/>
  <match src="state_mutability [54611,54615]" dest="state_mutability [17638,17642]"/>
  <match src="string [80822,80857]" dest="string [71859,71897]"/>
  <match src="primitive_type [11944,11951]" dest="primitive_type [23245,23252]"/>
  <match src="bytes32: bytes32 [30025,30032]" dest="bytes32: bytes32 [47737,47744]"/>
  <match src="primitive_type [29490,29497]" dest="primitive_type [47202,47209]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [33120,33162]" dest="comment: // reverse-for-loops with unsigned integer [50832,50874]"/>
  <match src="expression_statement [106295,106325]" dest="expression_statement [69439,69469]"/>
  <match src="(: ( [34119,34120]" dest="(: ( [51831,51832]"/>
  <match src="yul_path [85148,85152]" dest="yul_path [74476,74480]"/>
  <match src="state_mutability [53728,53732]" dest="state_mutability [21852,21856]"/>
  <match src="member_expression [102279,102291]" dest="member_expression [41665,41677]"/>
  <match src="parameter [18945,18968]" dest="parameter [17844,17863]"/>
  <match src="identifier: newClaimable [81193,81205]" dest="identifier: couponAmount [62676,62688]"/>
  <match src="identifier: currentLock [104640,104651]" dest="identifier: currentLock [44026,44037]"/>
  <match src="type_name [88417,88424]" dest="type_name [75607,75614]"/>
  <match src="{: { [44450,44451]" dest="{: { [14547,14548]"/>
  <match src="type_name [41297,41304]" dest="type_name [11394,11401]"/>
  <match src="comment: /**      * Epoch      */ [102181,102205]" dest="comment: /**      * Epoch      */ [41567,41591]"/>
  <match src="(: ( [53686,53687]" dest="(: ( [21810,21811]"/>
  <match src="{: { [23053,23054]" dest="{: { [55942,55943]"/>
  <match src="identifier: getGovernancePeriod [44396,44415]" dest="identifier: getGovernancePeriod [14493,14512]"/>
  <match src="bytes32: bytes32 [53101,53108]" dest="bytes32: bytes32 [21225,21232]"/>
  <match src="function: function [93868,93876]" dest="function: function [33254,33262]"/>
  <match src="address: address [95527,95534]" dest="address: address [34913,34920]"/>
  <match src="type_name [64805,64817]" dest="type_name [19656,19668]"/>
  <match src="uint8: uint8 [90946,90951]" dest="uint8: uint8 [30332,30337]"/>
  <match src="(: ( [21925,21926]" dest="(: ( [63518,63519]"/>
  <match src="identifier: balanceOfRewarded [71100,71117]" dest="identifier: limit [67042,67047]"/>
  <match src="parameter [92151,92158]" dest="parameter [31537,31544]"/>
  <match src="(: ( [29207,29208]" dest="(: ( [46919,46920]"/>
  <match src="parenthesized_expression [34503,34511]" dest="parenthesized_expression [52215,52223]"/>
  <match src="identifier: require [25872,25879]" dest="identifier: decrementRejectFor [79194,79212]"/>
  <match src="): ) [102709,102710]" dest="): ) [42095,42096]"/>
  <match src="type_name [53048,53055]" dest="type_name [21172,21179]"/>
  <match src="identifier: spender [21796,21803]" dest="identifier: spender [63467,63474]"/>
  <match src="function_body [6526,6592]" dest="function_body [7054,7120]"/>
  <match src="(: ( [34489,34490]" dest="(: ( [52201,52202]"/>
  <match src="identifier: account [25720,25727]" dest="identifier: account [60585,60592]"/>
  <match src="number_literal: 1 [51078,51079]" dest="number_literal: 1 [64468,64469]"/>
  <match src=",: , [79734,79735]" dest=",: , [71281,71282]"/>
  <match src=".: . [100008,100009]" dest=".: . [39394,39395]"/>
  <match src="expression_statement [35524,35535]" dest="expression_statement [53236,53247]"/>
  <match src="identifier: oracle [91571,91577]" dest="identifier: oracle [30957,30963]"/>
  <match src="identifier: b [7442,7443]" dest="identifier: b [7970,7971]"/>
  <match src="view: view [92239,92243]" dest="view: view [31625,31629]"/>
  <match src="function_definition [12995,13069]" dest="function_definition [24296,24370]"/>
  <match src="return: return [93455,93461]" dest="return: return [32841,32847]"/>
  <match src="function_body [9616,9660]" dest="function_body [10144,10188]"/>
  <match src="parameter [101940,101954]" dest="parameter [41326,41340]"/>
  <match src="call_expression [6082,6101]" dest="call_expression [6610,6629]"/>
  <match src="return_statement [7964,8010]" dest="return_statement [8492,8538]"/>
  <match src="user_defined_type [8973,8977]" dest="user_defined_type [9501,9505]"/>
  <match src="&quot;: &quot; [79801,79802]" dest="&quot;: &quot; [71351,71352]"/>
  <match src="assignment_expression [35466,35510]" dest="assignment_expression [53178,53222]"/>
  <match src="number_literal: 0 [102836,102837]" dest="number_literal: 0 [42222,42223]"/>
  <match src="assignment_expression [104795,104842]" dest="assignment_expression [44181,44228]"/>
  <match src="returns: returns [98054,98061]" dest="returns: returns [37440,37447]"/>
  <match src="visibility [43104,43111]" dest="visibility [13201,13208]"/>
  <match src="number_literal: 1 [7476,7477]" dest="number_literal: 1 [8004,8005]"/>
  <match src="primitive_type [86255,86262]" dest="primitive_type [28046,28053]"/>
  <match src="): ) [35938,35939]" dest="): ) [53650,53651]"/>
  <match src="identifier: one [64117,64120]" dest="identifier: one [67948,67951]"/>
  <match src="member_expression [99217,99232]" dest="member_expression [38603,38618]"/>
  <match src="(: ( [99417,99418]" dest="(: ( [38803,38804]"/>
  <match src=",: , [99894,99895]" dest=",: , [39280,39281]"/>
  <match src="user_defined_type [9952,9956]" dest="user_defined_type [10480,10484]"/>
  <match src="primitive_type [97620,97627]" dest="primitive_type [37006,37013]"/>
  <match src="return_type_definition [66425,66442]" dest="return_type_definition [62267,62284]"/>
  <match src="primitive_type [30710,30717]" dest="primitive_type [48422,48429]"/>
  <match src="member_expression [94681,94709]" dest="member_expression [34067,34095]"/>
  <match src="pure: pure [4712,4716]" dest="pure: pure [5240,5244]"/>
  <match src="expression_statement [101395,101463]" dest="expression_statement [40781,40849]"/>
  <match src="comment: // ============ Private Functions ============ [32707,32753]" dest="comment: // ============ Private Functions ============ [50419,50465]"/>
  <match src="string_literal [106253,106274]" dest="string_literal [69397,69418]"/>
  <match src="return: return [2658,2664]" dest="return: return [3186,3192]"/>
  <match src="type_name [27663,27670]" dest="type_name [45375,45382]"/>
  <match src="primitive_type [35961,35965]" dest="primitive_type [53673,53677]"/>
  <match src="expression_statement [3397,3426]" dest="expression_statement [3925,3954]"/>
  <match src="=: = [42518,42519]" dest="=: = [12615,12616]"/>
  <match src="primitive_type [80976,80983]" dest="primitive_type [72513,72520]"/>
  <match src="): ) [96337,96338]" dest="): ) [35723,35724]"/>
  <match src="identifier: amount [23082,23088]" dest="identifier: amount [55979,55985]"/>
  <match src="type_cast_expression [51069,51080]" dest="type_cast_expression [64459,64470]"/>
  <match src="private: private [41305,41312]" dest="private: private [11402,11409]"/>
  <match src="variable_declaration_statement [71175,71211]" dest="variable_declaration_statement [67279,67323]"/>
  <match src="number_literal: 48 [27366,27368]" dest="number_literal: 48 [45078,45080]"/>
  <match src="type_name [1326,1333]" dest="type_name [1854,1861]"/>
  <match src="return: return [93221,93227]" dest="return: return [32607,32613]"/>
  <match src="identifier: D256 [7499,7503]" dest="identifier: D256 [8027,8031]"/>
  <match src="(: ( [52238,52239]" dest="(: ( [20362,20363]"/>
  <match src=".: . [48781,48782]" dest=".: . [70731,70732]"/>
  <match src="function_body [50783,50843]" dest="function_body [55433,55590]"/>
  <match src="parameter [35609,35622]" dest="parameter [53321,53334]"/>
  <match src="identifier: coupons [92997,93004]" dest="identifier: coupons [32383,32390]"/>
  <match src="user_defined_type [64805,64817]" dest="user_defined_type [19656,19668]"/>
  <match src="type_name [1680,1687]" dest="type_name [2208,2215]"/>
  <match src="): ) [9328,9329]" dest="): ) [9856,9857]"/>
  <match src="expression_statement [1345,1375]" dest="expression_statement [1873,1903]"/>
  <match src="}: } [45722,45723]" dest="}: } [15819,15820]"/>
  <match src="uint256: uint256 [95264,95271]" dest="uint256: uint256 [34650,34657]"/>
  <match src="{: { [7114,7115]" dest="{: { [7642,7643]"/>
  <match src="identifier: abi [29626,29629]" dest="identifier: abi [47338,47341]"/>
  <match src=".: . [93193,93194]" dest=".: . [32579,32580]"/>
  <match src="parameter [31986,31998]" dest="parameter [49698,49710]"/>
  <match src="returns: returns [95750,95757]" dest="returns: returns [35136,35143]"/>
  <match src="parameter [103107,103124]" dest="parameter [42493,42510]"/>
  <match src="assignment_expression [102256,102306]" dest="assignment_expression [41642,41692]"/>
  <match src="return_statement [43517,43529]" dest="return_statement [13614,13626]"/>
  <match src=",: , [29172,29173]" dest=",: , [46884,46885]"/>
  <match src="): ) [79385,79386]" dest="): ) [70948,70949]"/>
  <match src="{: { [95397,95398]" dest="{: { [34783,34784]"/>
  <match src="identifier: div [9889,9892]" dest="identifier: div [10417,10420]"/>
  <match src="identifier: _state [100389,100395]" dest="identifier: _state [39775,39781]"/>
  <match src="block_statement [32154,32695]" dest="block_statement [49866,50407]"/>
  <match src="function: function [19633,19641]" dest="function: function [63755,63763]"/>
  <match src="call_argument [21177,21183]" dest="call_argument [56274,56280]"/>
  <match src="variable_declaration_statement [34863,34899]" dest="variable_declaration_statement [52575,52611]"/>
  <match src="parameter [8650,8663]" dest="parameter [9178,9191]"/>
  <match src="function_body [28319,28735]" dest="function_body [46031,46447]"/>
  <match src="(: ( [89470,89471]" dest="(: ( [76660,76661]"/>
  <match src="): ) [31541,31542]" dest="): ) [49253,49254]"/>
  <match src="identifier: COLON [29083,29088]" dest="identifier: COLON [46795,46800]"/>
  <match src="=: = [100769,100770]" dest="=: = [40155,40156]"/>
  <match src="address: address [53269,53276]" dest="address: address [21393,21400]"/>
  <match src="identifier: ASCII_ZERO [34973,34983]" dest="identifier: ASCII_ZERO [52685,52695]"/>
  <match src="identifier: D256 [6999,7003]" dest="identifier: D256 [7527,7531]"/>
  <match src="uint256: uint256 [86232,86239]" dest="uint256: uint256 [28023,28030]"/>
  <match src="[: [ [104038,104039]" dest="[: [ [43424,43425]"/>
  <match src="): ) [89443,89444]" dest="): ) [76633,76634]"/>
  <match src="(: ( [54097,54098]" dest="(: ( [22221,22222]"/>
  <match src="identifier: reason [98427,98433]" dest="identifier: reason [37813,37819]"/>
  <match src="identifier: reserve0 [77484,77492]" dest="identifier: lessRedeemable [61634,61648]"/>
  <match src="primitive_type [53187,53191]" dest="primitive_type [21311,21315]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [66582,67262]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [36214,36894]"/>
  <match src="identifier: reason [98330,98336]" dest="identifier: reason [37716,37722]"/>
  <match src="address: address [101915,101922]" dest="address: address [41301,41308]"/>
  <match src="variable_declaration [96722,96734]" dest="variable_declaration [36108,36120]"/>
  <match src="return_type_definition [8508,8529]" dest="return_type_definition [9036,9057]"/>
  <match src="): ) [53199,53200]" dest="): ) [21323,21324]"/>
  <match src="identifier: amount [100026,100032]" dest="identifier: amount [39412,39418]"/>
  <match src="type_name [53485,53492]" dest="type_name [21609,21616]"/>
  <match src="call_argument [80523,80528]" dest="call_argument [71588,71623]"/>
  <match src="type_name [104182,104189]" dest="type_name [43568,43575]"/>
  <match src="): ) [93546,93547]" dest="): ) [32932,32933]"/>
  <match src="yul_path [89712,89716]" dest="yul_path [76902,76906]"/>
  <match src="comment: // 365 cycles [42934,42947]" dest="comment: // 365 cycles [13031,13044]"/>
  <match src="identifier: pair [51486,51490]" dest="identifier: spender [61044,61051]"/>
  <match src="): ) [8118,8119]" dest="): ) [8646,8647]"/>
  <match src="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [89250,89386]" dest="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [76440,76576]"/>
  <match src="address: address [100165,100172]" dest="address: address [39551,39558]"/>
  <match src="type_name [98475,98482]" dest="type_name [37861,37868]"/>
  <match src=".: . [8594,8595]" dest=".: . [9122,9123]"/>
  <match src="comment: // than to check the size of the code at that address. [84785,84839]" dest="comment: // than to check the size of the code at that address. [74113,74167]"/>
  <match src=".: . [6738,6739]" dest=".: . [7266,7267]"/>
  <match src="identifier: lockedUntil [93620,93631]" dest="identifier: lockedUntil [33006,33017]"/>
  <match src="uint256: uint256 [98475,98482]" dest="uint256: uint256 [37861,37868]"/>
  <match src="): ) [71563,71564]" dest="): ) [67267,67268]"/>
  <match src="address: address [76455,76462]" dest="address: address [60997,61004]"/>
  <match src="identifier: isNominated [96386,96397]" dest="identifier: isNominated [35772,35783]"/>
  <match src="type_name [27781,27785]" dest="type_name [45493,45497]"/>
  <match src="identifier: Decimal [65661,65668]" dest="identifier: Decimal [67726,67733]"/>
  <match src="primitive_type [42063,42070]" dest="primitive_type [12160,12167]"/>
  <match src="type_name [7335,7339]" dest="type_name [7863,7867]"/>
  <match src="return_type_definition [7750,7771]" dest="return_type_definition [8278,8299]"/>
  <match src="type_name [53101,53108]" dest="type_name [21225,21232]"/>
  <match src="call_argument [32513,32521]" dest="call_argument [50225,50233]"/>
  <match src=".: . [87276,87277]" dest=".: . [29067,29068]"/>
  <match src="call_argument [83645,83654]" dest="call_argument [78832,78887]"/>
  <match src="identifier: amount [73218,73224]" dest="identifier: amount [55786,55792]"/>
  <match src="(: ( [9840,9841]" dest="(: ( [10368,10369]"/>
  <match src="visibility [7204,7212]" dest="visibility [7732,7740]"/>
  <match src="identifier: sender [50994,51000]" dest="identifier: sender [64188,64194]"/>
  <match src=".: . [95923,95924]" dest=".: . [35309,35310]"/>
  <match src="parameter [53742,53749]" dest="parameter [21866,21873]"/>
  <match src="function_definition [6114,6225]" dest="function_definition [6642,6753]"/>
  <match src="): ) [92158,92159]" dest="): ) [31544,31545]"/>
  <match src="(: ( [81556,81557]" dest="(: ( [79827,79828]"/>
  <match src="(: ( [53606,53607]" dest="(: ( [21730,21731]"/>
  <match src="member_expression [96051,96087]" dest="member_expression [35437,35473]"/>
  <match src="event_paramater [52083,52106]" dest="event_paramater [20207,20230]"/>
  <match src="identifier: value [9638,9643]" dest="identifier: value [10166,10171]"/>
  <match src="function: function [94591,94599]" dest="function: function [33977,33985]"/>
  <match src="identifier: Require [106163,106170]" dest="identifier: Require [69307,69314]"/>
  <match src="function_definition [91686,91784]" dest="function_definition [31072,31170]"/>
  <match src="call_argument [47978,47982]" dest="call_argument [55712,55716]"/>
  <match src="uint256: uint256 [87208,87215]" dest="uint256: uint256 [28999,29006]"/>
  <match src="return: return [10074,10080]" dest="return: return [10602,10608]"/>
  <match src="return: return [91955,91961]" dest="return: return [31341,31347]"/>
  <match src="binary_expression [93110,93156]" dest="binary_expression [32496,32542]"/>
  <match src="identifier: candidate [104455,104464]" dest="identifier: candidate [43841,43850]"/>
  <match src="{: { [11404,11405]" dest="{: { [22705,22706]"/>
  <match src="uint256: uint256 [42693,42700]" dest="uint256: uint256 [12790,12797]"/>
  <match src="(: ( [6570,6571]" dest="(: ( [7098,7099]"/>
  <match src="parameter [53033,53046]" dest="parameter [21157,21170]"/>
  <match src="uint256: uint256 [96291,96298]" dest="uint256: uint256 [35677,35684]"/>
  <match src="identifier: Constants [94067,94076]" dest="identifier: Constants [33453,33462]"/>
  <match src="using: using [72872,72877]" dest="using: using [82681,82686]"/>
  <match src=",: , [29088,29089]" dest=",: , [46800,46801]"/>
  <match src="inheritance_specifier [90457,90462]" dest="inheritance_specifier [29843,29848]"/>
  <match src="identifier: spender [22064,22071]" dest="identifier: spender [63726,63733]"/>
  <match src="identifier: z [34743,34744]" dest="identifier: z [52455,52456]"/>
  <match src="(: ( [94511,94512]" dest="(: ( [33897,33898]"/>
  <match src="identifier: bstr [34469,34473]" dest="identifier: bstr [52181,52185]"/>
  <match src=",: , [99062,99063]" dest=",: , [38448,38449]"/>
  <match src="primitive_type [98316,98322]" dest="primitive_type [37702,37708]"/>
  <match src="]: ] [33356,33357]" dest="]: ] [51068,51069]"/>
  <match src="identifier: input [35617,35622]" dest="identifier: input [53329,53334]"/>
  <match src="]: ] [102031,102032]" dest="]: ] [41417,41418]"/>
  <match src="): ) [52654,52655]" dest="): ) [20778,20779]"/>
  <match src="identifier: State [85965,85970]" dest="identifier: State [27756,27761]"/>
  <match src="identifier: payloadA [29498,29506]" dest="identifier: payloadA [47210,47218]"/>
  <match src="primitive_type [1384,1391]" dest="primitive_type [1912,1919]"/>
  <match src="identifier: _burn [20997,21002]" dest="identifier: burnRedeemable [56155,56169]"/>
  <match src=".: . [104378,104379]" dest=".: . [43764,43765]"/>
  <match src="address: address [93670,93677]" dest="address: address [33056,33063]"/>
  <match src="number_literal: 0 [35911,35912]" dest="number_literal: 0 [53623,53624]"/>
  <match src="member_expression [83121,83190]" dest="member_expression [58708,58797]"/>
  <match src="contract: contract [78449,78457]" dest="contract: contract [70172,70180]"/>
  <match src="function_body [71165,71733]" dest="function_body [67173,67646]"/>
  <match src="identifier: candidate [103716,103725]" dest="identifier: candidate [43102,43111]"/>
  <match src="call_struct_argument [7799,7829]" dest="call_struct_argument [8327,8357]"/>
  <match src="uint256: uint256 [86632,86639]" dest="uint256: uint256 [28423,28430]"/>
  <match src="}: } [28175,28176]" dest="}: } [45887,45888]"/>
  <match src="visibility [95243,95249]" dest="visibility [34629,34635]"/>
  <match src="type_name [33382,33389]" dest="type_name [51094,51101]"/>
  <match src="call_expression [83121,83153]" dest="call_expression [58977,59013]"/>
  <match src="user_defined_type [65661,65673]" dest="user_defined_type [67726,67738]"/>
  <match src="return_statement [33687,33707]" dest="return_statement [51399,51419]"/>
  <match src="identifier: Account [93345,93352]" dest="identifier: Account [32731,32738]"/>
  <match src="number_literal: 1 [35002,35003]" dest="number_literal: 1 [52714,52715]"/>
  <match src=".: . [100325,100326]" dest=".: . [39711,39712]"/>
  <match src="string_literal [82112,82141]" dest="string_literal [80017,80032]"/>
  <match src="identifier: D256 [7518,7522]" dest="identifier: D256 [8046,8050]"/>
  <match src="primitive_type [29466,29473]" dest="primitive_type [47178,47185]"/>
  <match src="uint256: uint256 [18945,18952]" dest="uint256: uint256 [17844,17851]"/>
  <match src="=: = [103251,103252]" dest="=: = [42637,42638]"/>
  <match src="identifier: Status [106029,106035]" dest="identifier: Status [69173,69179]"/>
  <match src="public: public [95085,95091]" dest="public: public [34471,34477]"/>
  <match src="primitive_type [46285,46292]" dest="primitive_type [16382,16389]"/>
  <match src=",: , [81142,81143]" dest=",: , [81304,81305]"/>
  <match src="using_directive [69413,69440]" dest="using_directive [55283,55310]"/>
  <match src="variable_declaration [7499,7515]" dest="variable_declaration [8027,8043]"/>
  <match src="identifier: staged [86951,86957]" dest="identifier: staged [28742,28748]"/>
  <match src="identifier: sub [104379,104382]" dest="identifier: sub [43765,43768]"/>
  <match src="call_argument [29668,29692]" dest="call_argument [47380,47404]"/>
  <match src="identifier: D256 [9297,9301]" dest="identifier: D256 [9825,9829]"/>
  <match src="uint256: uint256 [79266,79273]" dest="uint256: uint256 [77924,77931]"/>
  <match src="parameter [102464,102477]" dest="parameter [41850,41863]"/>
  <match src=",: , [100549,100550]" dest=",: , [39935,39936]"/>
  <match src="return_type_definition [43489,43506]" dest="return_type_definition [13586,13603]"/>
  <match src="}: } [7139,7140]" dest="}: } [7667,7668]"/>
  <match src="member_expression [99352,99366]" dest="member_expression [38738,38752]"/>
  <match src="identifier: a [2029,2030]" dest="identifier: a [2557,2558]"/>
  <match src="primitive_type [65956,65963]" dest="primitive_type [62459,62466]"/>
  <match src="(: ( [45556,45557]" dest="(: ( [15653,15654]"/>
  <match src="member_expression [8739,8749]" dest="member_expression [9267,9277]"/>
  <match src="): ) [92230,92231]" dest="): ) [31616,31617]"/>
  <match src="identifier: IUniswapV2Pair [52024,52038]" dest="identifier: IUniswapV2Pair [20148,20162]"/>
  <match src="call_argument [48856,48861]" dest="call_argument [71762,71767]"/>
  <match src="memory: memory [8250,8256]" dest="memory: memory [8778,8784]"/>
  <match src="member_expression [103583,103600]" dest="member_expression [42969,42986]"/>
  <match src="primitive_type [90538,90545]" dest="primitive_type [29924,29931]"/>
  <match src="identifier: getUsdcAddress [43458,43472]" dest="identifier: getUsdcAddress [13555,13569]"/>
  <match src="): ) [92019,92020]" dest="): ) [31405,31406]"/>
  <match src="primitive_type [42126,42133]" dest="primitive_type [12223,12230]"/>
  <match src="primitive_type [86657,86664]" dest="primitive_type [28448,28455]"/>
  <match src=".: . [70396,70397]" dest=".: . [58774,58775]"/>
  <match src="parameter [93042,93057]" dest="parameter [32428,32443]"/>
  <match src="parameter [100988,101003]" dest="parameter [40374,40389]"/>
  <match src="): ) [101625,101626]" dest="): ) [41011,41012]"/>
  <match src="primitive_type [53101,53108]" dest="primitive_type [21225,21232]"/>
  <match src="): ) [8408,8409]" dest="): ) [8936,8937]"/>
  <match src="state_variable_declaration [27623,27651]" dest="state_variable_declaration [45335,45363]"/>
  <match src="call_argument [21316,21322]" dest="call_argument [83416,83422]"/>
  <match src="primitive_type [65327,65334]" dest="primitive_type [66817,66824]"/>
  <match src="identifier: Vote [103363,103367]" dest="identifier: Vote [42749,42753]"/>
  <match src="identifier: self [8739,8743]" dest="identifier: self [9267,9271]"/>
  <match src="function: function [101649,101657]" dest="function: function [41035,41043]"/>
  <match src="identifier: msg [79535,79538]" dest="identifier: msg [71073,71076]"/>
  <match src=",: , [31047,31048]" dest=",: , [48759,48760]"/>
  <match src="identifier: incrementBalanceOfCoupons [100476,100501]" dest="identifier: incrementBalanceOfCoupons [39862,39887]"/>
  <match src="{: { [45800,45801]" dest="{: { [15897,15898]"/>
  <match src=".: . [92183,92184]" dest=".: . [31569,31570]"/>
  <match src="): ) [93883,93884]" dest="): ) [33269,33270]"/>
  <match src="type_name [95391,95395]" dest="type_name [34777,34781]"/>
  <match src="primitive_type [46490,46497]" dest="primitive_type [16587,16594]"/>
  <match src=".: . [95180,95181]" dest=".: . [34566,34567]"/>
  <match src=".: . [102285,102286]" dest=".: . [41671,41672]"/>
  <match src="{: { [44904,44905]" dest="{: { [15001,15002]"/>
  <match src="function_definition [92363,92490]" dest="function_definition [31749,31876]"/>
  <match src="returns: returns [65235,65242]" dest="returns: returns [67685,67692]"/>
  <match src="identifier: amount [20407,20413]" dest="identifier: amount [59106,59112]"/>
  <match src="identifier: initialized [104824,104835]" dest="identifier: initialized [44210,44221]"/>
  <match src="internal: internal [9338,9346]" dest="internal: internal [9866,9874]"/>
  <match src="call_argument [80822,80857]" dest="call_argument [71859,71897]"/>
  <match src=":: : [8184,8185]" dest=":: : [8712,8713]"/>
  <match src="): ) [53287,53288]" dest="): ) [21411,21412]"/>
  <match src="internal: internal [84630,84638]" dest="internal: internal [73958,73966]"/>
  <match src="parameter [25997,26012]" dest="parameter [55900,55915]"/>
  <match src="type_name [34090,34095]" dest="type_name [51802,51807]"/>
  <match src="private: private [42016,42023]" dest="private: private [12113,12120]"/>
  <match src="visibility [46567,46575]" dest="visibility [16664,16672]"/>
  <match src="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [1744,1823]" dest="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2272,2351]"/>
  <match src="type_name [28764,28768]" dest="type_name [46476,46480]"/>
  <match src="identifier: getOraclePoolRatio [46241,46259]" dest="identifier: getOraclePoolRatio [16338,16356]"/>
  <match src="{: { [7523,7524]" dest="{: { [8051,8052]"/>
  <match src="type_name [43301,43308]" dest="type_name [13398,13405]"/>
  <match src="state_mutability [36594,36598]" dest="state_mutability [54306,54310]"/>
  <match src="identifier: staged [100091,100097]" dest="identifier: staged [39477,39483]"/>
  <match src="uint256: uint256 [5680,5687]" dest="uint256: uint256 [6208,6215]"/>
  <match src="identifier: value [45097,45102]" dest="identifier: value [15194,15199]"/>
  <match src="view: view [93725,93729]" dest="view: view [33111,33115]"/>
  <match src="user_defined_type [9146,9150]" dest="user_defined_type [9674,9678]"/>
  <match src="identifier: payloadC [30770,30778]" dest="identifier: payloadC [48482,48490]"/>
  <match src="visibility [4703,4711]" dest="visibility [5231,5239]"/>
  <match src="call_argument [83147,83151]" dest="call_argument [58999,59003]"/>
  <match src="using: using [90501,90506]" dest="using: using [29887,29892]"/>
  <match src="uint256: uint256 [95228,95235]" dest="uint256: uint256 [34614,34621]"/>
  <match src="return_statement [92170,92200]" dest="return_statement [31556,31586]"/>
  <match src="member_expression [94415,94430]" dest="member_expression [33801,33816]"/>
  <match src="): ) [11958,11959]" dest="): ) [23259,23260]"/>
  <match src="visibility [94514,94522]" dest="visibility [33900,33908]"/>
  <match src="string: string [52239,52245]" dest="string: string [20363,20369]"/>
  <match src="identifier: allowance [91226,91235]" dest="identifier: allowance [30612,30621]"/>
  <match src="parameter [52239,52252]" dest="parameter [20363,20376]"/>
  <match src="state_mutability [94523,94527]" dest="state_mutability [33909,33913]"/>
  <match src="pure: pure [39792,39796]" dest="pure: pure [19367,19371]"/>
  <match src="function: function [61897,61905]" dest="function: function [26952,26960]"/>
  <match src="function: function [1667,1675]" dest="function: function [2195,2203]"/>
  <match src="): ) [11685,11686]" dest="): ) [22986,22987]"/>
  <match src="member_expression [99714,99735]" dest="member_expression [39100,39121]"/>
  <match src=".: . [94968,94969]" dest=".: . [34354,34355]"/>
  <match src=".: . [87073,87074]" dest=".: . [28864,28865]"/>
  <match src=",: , [15698,15699]" dest=",: , [60263,60264]"/>
  <match src="(: ( [52450,52451]" dest="(: ( [20574,20575]"/>
  <match src="): ) [95868,95869]" dest="): ) [35254,35255]"/>
  <match src="returns: returns [6282,6289]" dest="returns: returns [6810,6817]"/>
  <match src="=: = [36301,36302]" dest="=: = [54013,54014]"/>
  <match src="internal: internal [26436,26444]" dest="internal: internal [55654,55662]"/>
  <match src="visibility [45415,45423]" dest="visibility [15512,15520]"/>
  <match src="parameter [77272,77286]" dest="parameter [78178,78195]"/>
  <match src="]: ] [93798,93799]" dest="]: ] [33184,33185]"/>
  <match src="visibility [62708,62715]" dest="visibility [60318,60325]"/>
  <match src="(: ( [45412,45413]" dest="(: ( [15509,15510]"/>
  <match src="address: address [79412,79419]" dest="address: address [70975,70982]"/>
  <match src="&quot;: &quot; [66549,66550]" dest="&quot;: &quot; [72377,72378]"/>
  <match src="visibility [817,825]" dest="visibility [1345,1353]"/>
  <match src="for_statement [34234,34591]" dest="for_statement [51946,52303]"/>
  <match src="contract: contract [86493,86501]" dest="contract: contract [28284,28292]"/>
  <match src="identifier: that [82080,82084]" dest="identifier: that [79982,79986]"/>
  <match src="visibility [88757,88763]" dest="visibility [75947,75953]"/>
  <match src="user_defined_type [6052,6056]" dest="user_defined_type [6580,6584]"/>
  <match src="(: ( [6927,6928]" dest="(: ( [7455,7456]"/>
  <match src="function_definition [91994,92100]" dest="function_definition [31380,31486]"/>
  <match src="identifier: startFor [95710,95718]" dest="identifier: startFor [35096,35104]"/>
  <match src=".: . [81111,81112]" dest=".: . [81134,81135]"/>
  <match src="}: } [66474,66475]" dest="}: } [62387,62388]"/>
  <match src="parameter [66434,66441]" dest="parameter [62276,62283]"/>
  <match src="type_name [13936,13943]" dest="type_name [25237,25244]"/>
  <match src=".: . [91092,91093]" dest=".: . [30478,30479]"/>
  <match src="}: } [90808,90809]" dest="}: } [30194,30195]"/>
  <match src="identifier: bonded [98215,98221]" dest="identifier: bonded [37601,37607]"/>
  <match src="): ) [21221,21222]" dest="): ) [56347,56348]"/>
  <match src="identifier: epoch [102704,102709]" dest="identifier: epoch [42090,42095]"/>
  <match src="type_name [89022,89026]" dest="type_name [76212,76216]"/>
  <match src="): ) [31046,31047]" dest="): ) [48758,48759]"/>
  <match src=".: . [6572,6573]" dest=".: . [7100,7101]"/>
  <match src=".: . [99223,99224]" dest=".: . [38609,38610]"/>
  <match src="type_cast_expression [43345,43410]" dest="type_cast_expression [13442,13507]"/>
  <match src="identifier: POOL_EXIT_LOCKUP_EPOCHS [42811,42834]" dest="identifier: POOL_EXIT_LOCKUP_EPOCHS [12908,12931]"/>
  <match src="uint256: uint256 [43096,43103]" dest="uint256: uint256 [13193,13200]"/>
  <match src="member_expression [93251,93266]" dest="member_expression [32637,32652]"/>
  <match src="identifier: pool [86853,86857]" dest="identifier: pool [28644,28648]"/>
  <match src="internal: internal [101991,101999]" dest="internal: internal [41377,41385]"/>
  <match src="(: ( [96574,96575]" dest="(: ( [35960,35961]"/>
  <match src="identifier: require [4745,4752]" dest="identifier: require [5273,5280]"/>
  <match src="type_name [52721,52725]" dest="type_name [20845,20849]"/>
  <match src="(: ( [81849,81850]" dest="(: ( [72431,72432]"/>
  <match src="binary_expression [36289,36299]" dest="binary_expression [54001,54011]"/>
  <match src="identifier: candidate [103233,103242]" dest="identifier: candidate [42619,42628]"/>
  <match src=".: . [81500,81501]" dest=".: . [71714,71715]"/>
  <match src=".: . [80291,80292]" dest=".: . [71508,71509]"/>
  <match src="*: * [2031,2032]" dest="*: * [2559,2560]"/>
  <match src="(: ( [80377,80378]" dest="(: ( [66640,66641]"/>
  <match src="type_name [43166,43173]" dest="type_name [13263,13270]"/>
  <match src="}: } [93503,93504]" dest="}: } [32889,32890]"/>
  <match src="parameter [53838,53863]" dest="parameter [21962,21987]"/>
  <match src="parameter [95759,95766]" dest="parameter [35145,35152]"/>
  <match src="(: ( [100438,100439]" dest="(: ( [39824,39825]"/>
  <match src="): ) [92730,92731]" dest="): ) [32116,32117]"/>
  <match src="event_definition [13642,13714]" dest="event_definition [24943,25015]"/>
  <match src="bool: bool [8874,8878]" dest="bool: bool [9402,9406]"/>
  <match src="}: } [5999,6000]" dest="}: } [6527,6528]"/>
  <match src="identifier: size [85194,85198]" dest="identifier: size [74522,74526]"/>
  <match src="): ) [11653,11654]" dest="): ) [22954,22955]"/>
  <match src="pure: pure [35645,35649]" dest="pure: pure [53357,53361]"/>
  <match src="identifier: getBootstrappingPeriod [44103,44125]" dest="identifier: getBootstrappingPeriod [14200,14222]"/>
  <match src="{: { [36684,36685]" dest="{: { [54396,54397]"/>
  <match src=",: , [31276,31277]" dest=",: , [48988,48989]"/>
  <match src="]: ] [100664,100665]" dest="]: ] [40050,40051]"/>
  <match src="&quot;: &quot; [2702,2703]" dest="&quot;: &quot; [3230,3231]"/>
  <match src="{: { [6526,6527]" dest="{: { [7054,7055]"/>
  <match src="state_mutability [27860,27864]" dest="state_mutability [45572,45576]"/>
  <match src="member_expression [30211,30227]" dest="member_expression [47923,47939]"/>
  <match src="identifier: coupons [102551,102558]" dest="identifier: coupons [41937,41944]"/>
  <match src=".: . [45953,45954]" dest=".: . [16050,16051]"/>
  <match src="): ) [107464,107465]" dest="): ) [67774,67775]"/>
  <match src="number_literal: 10 [34508,34510]" dest="number_literal: 10 [52220,52222]"/>
  <match src="member_expression [104507,104543]" dest="member_expression [43893,43929]"/>
  <match src="parameter [28829,28845]" dest="parameter [46541,46557]"/>
  <match src="visibility [36582,36589]" dest="visibility [54294,54301]"/>
  <match src="identifier: reserveB [77377,77385]" dest="identifier: totalDebt [17589,17598]"/>
  <match src="): ) [44562,44563]" dest="): ) [14659,14660]"/>
  <match src="call_expression [66510,66559]" dest="call_expression [72339,72409]"/>
  <match src="identifier: D256 [6509,6513]" dest="identifier: D256 [7037,7041]"/>
  <match src="parameter [2594,2603]" dest="parameter [3122,3131]"/>
  <match src="{: { [104653,104654]" dest="{: { [44039,44040]"/>
  <match src="identifier: reason [99688,99694]" dest="identifier: reason [39074,39080]"/>
  <match src="identifier: incrementBalanceOfPhantom [82668,82693]" dest="identifier: burnFromAccount [62746,62761]"/>
  <match src="parameter [840,847]" dest="parameter [1368,1375]"/>
  <match src="user_defined_type [86797,86804]" dest="user_defined_type [28588,28595]"/>
  <match src="): ) [79510,79511]" dest="): ) [56793,56794]"/>
  <match src="call_argument [34973,34983]" dest="call_argument [52685,52695]"/>
  <match src="identifier: value [48856,48861]" dest="identifier: value [71762,71767]"/>
  <match src="mapping: mapping [86030,86037]" dest="mapping: mapping [27821,27828]"/>
  <match src="identifier: FILE [78761,78765]" dest="identifier: FILE [70276,70280]"/>
  <match src="primitive_type [62888,62895]" dest="primitive_type [78003,78010]"/>
  <match src="): ) [46597,46598]" dest="): ) [16694,16695]"/>
  <match src="identifier: msg [79400,79403]" dest="identifier: msg [70963,70966]"/>
  <match src="identifier: Decimal [64109,64116]" dest="identifier: Decimal [67940,67947]"/>
  <match src="identifier: z [35699,35700]" dest="identifier: z [53411,53412]"/>
  <match src="expression_statement [79823,79838]" dest="expression_statement [56565,56580]"/>
  <match src="): ) [53777,53778]" dest="): ) [21901,21902]"/>
  <match src="uint256: uint256 [49665,49672]" dest="uint256: uint256 [26048,26055]"/>
  <match src="uint256: uint256 [86919,86926]" dest="uint256: uint256 [28710,28717]"/>
  <match src="string_literal [89127,89141]" dest="string_literal [76317,76331]"/>
  <match src="): ) [102235,102236]" dest="): ) [41621,41622]"/>
  <match src="): ) [104651,104652]" dest="): ) [44037,44038]"/>
  <match src="identifier: newClaimable [81885,81897]" dest="identifier: staged [72467,72473]"/>
  <match src="identifier: GOVERNANCE_PERIOD [42231,42248]" dest="identifier: GOVERNANCE_PERIOD [12328,12345]"/>
  <match src="function_definition [45729,45861]" dest="function_definition [15826,15958]"/>
  <match src="(: ( [10039,10040]" dest="(: ( [10567,10568]"/>
  <match src="return_statement [95778,95820]" dest="return_statement [35164,35206]"/>
  <match src="(: ( [94618,94619]" dest="(: ( [34004,34005]"/>
  <match src="primitive_type [74648,74655]" dest="primitive_type [62239,62246]"/>
  <match src="if_statement [30134,30610]" dest="if_statement [47846,48322]"/>
  <match src="function_body [8342,8418]" dest="function_body [8870,8946]"/>
  <match src="returns: returns [91825,91832]" dest="returns: returns [31211,31218]"/>
  <match src="member_expression [101529,101544]" dest="member_expression [40915,40930]"/>
  <match src="identifier: _state [99714,99720]" dest="identifier: _state [39100,39106]"/>
  <match src=",: , [30513,30514]" dest=",: , [48225,48226]"/>
  <match src="variable_declaration [104553,104568]" dest="variable_declaration [43939,43954]"/>
  <match src="(: ( [46259,46260]" dest="(: ( [16356,16357]"/>
  <match src="(: ( [30914,30915]" dest="(: ( [48626,48627]"/>
  <match src="constant: constant [41550,41558]" dest="constant: constant [11647,11655]"/>
  <match src="type_name [8874,8878]" dest="type_name [9402,9406]"/>
  <match src="external: external [48180,48188]" dest="external: external [62441,62449]"/>
  <match src="&quot;: &quot; [81756,81757]" dest="&quot;: &quot; [80581,80582]"/>
  <match src="primitive_type [68183,68190]" dest="primitive_type [70653,70660]"/>
  <match src="type_cast_expression [36806,36840]" dest="type_cast_expression [54518,54552]"/>
  <match src="internal: internal [45756,45764]" dest="internal: internal [15853,15861]"/>
  <match src="type_name [41934,41941]" dest="type_name [12031,12038]"/>
  <match src="): ) [96807,96808]" dest="): ) [36193,36194]"/>
  <match src="type_cast_expression [30870,31348]" dest="type_cast_expression [48582,49060]"/>
  <match src="type_name [52574,52578]" dest="type_name [20698,20702]"/>
  <match src="type_name [78968,78975]" dest="type_name [70574,70581]"/>
  <match src="return: return [7964,7970]" dest="return: return [8492,8498]"/>
  <match src="visibility [100580,100588]" dest="visibility [39966,39974]"/>
  <match src="&quot;: &quot; [106094,106095]" dest="&quot;: &quot; [69238,69239]"/>
  <match src="{: { [99933,99934]" dest="{: { [39319,39320]"/>
  <match src="type_name [21788,21795]" dest="type_name [63459,63466]"/>
  <match src=".: . [6952,6953]" dest=".: . [7480,7481]"/>
  <match src="address: address [52140,52147]" dest="address: address [20264,20271]"/>
  <match src="pure: pure [45311,45315]" dest="pure: pure [15408,15412]"/>
  <match src="}: } [35574,35575]" dest="}: } [53286,53287]"/>
  <match src="member_expression [98510,98524]" dest="member_expression [37896,37910]"/>
  <match src="identifier: a [9949,9950]" dest="identifier: a [10477,10478]"/>
  <match src="call_argument [7610,7614]" dest="call_argument [8138,8142]"/>
  <match src="primitive_type [53048,53055]" dest="primitive_type [21172,21179]"/>
  <match src="): ) [32285,32286]" dest="): ) [49997,49998]"/>
  <match src="contract: contract [86187,86195]" dest="contract: contract [27978,27986]"/>
  <match src="member_expression [98393,98407]" dest="member_expression [37779,37793]"/>
  <match src=".: . [100266,100267]" dest=".: . [39652,39653]"/>
  <match src="(: ( [103291,103292]" dest="(: ( [42677,42678]"/>
  <match src="identifier: newUniv2 [82649,82657]" dest="identifier: epoch [62835,62840]"/>
  <match src="type_name [840,847]" dest="type_name [1368,1375]"/>
  <match src="identifier: must [28210,28214]" dest="identifier: must [45922,45926]"/>
  <match src="call_argument [31732,31758]" dest="call_argument [49444,49470]"/>
  <match src="public: public [90833,90839]" dest="public: public [30219,30225]"/>
  <match src="return_type_definition [33792,33814]" dest="return_type_definition [51504,51526]"/>
  <match src="function: function [6598,6606]" dest="function: function [7126,7134]"/>
  <match src="(: ( [44150,44151]" dest="(: ( [14247,14248]"/>
  <match src="uint256: uint256 [72891,72898]" dest="uint256: uint256 [82700,82707]"/>
  <match src="visibility [8835,8843]" dest="visibility [9363,9371]"/>
  <match src="[: [ [96068,96069]" dest="[: [ [35454,35455]"/>
  <match src="type_name [6451,6458]" dest="type_name [6979,6986]"/>
  <match src="state_mutability [43585,43589]" dest="state_mutability [13682,13686]"/>
  <match src="identifier: amount [20655,20661]" dest="identifier: amount [63735,63741]"/>
  <match src="call_argument [4102,4128]" dest="call_argument [4630,4656]"/>
  <match src="expression_statement [82668,82739]" dest="expression_statement [62746,62788]"/>
  <match src="identifier: c [2025,2026]" dest="identifier: c [2553,2554]"/>
  <match src="returns: returns [95382,95389]" dest="returns: returns [34768,34775]"/>
  <match src="member_expression [6571,6576]" dest="member_expression [7099,7104]"/>
  <match src="new: new [34110,34113]" dest="new: new [51822,51825]"/>
  <match src="address: address [97973,97980]" dest="address: address [37359,37366]"/>
  <match src="uint256: uint256 [50931,50938]" dest="uint256: uint256 [55638,55645]"/>
  <match src="identifier: epochs [101250,101256]" dest="identifier: epochs [40636,40642]"/>
  <match src="type_name [95122,95129]" dest="type_name [34508,34515]"/>
  <match src="function: function [46445,46453]" dest="function: function [16542,16550]"/>
  <match src="number_literal: 0 [34957,34958]" dest="number_literal: 0 [52669,52670]"/>
  <match src="): ) [96710,96711]" dest="): ) [36096,36097]"/>
  <match src="): ) [6581,6582]" dest="): ) [7109,7110]"/>
  <match src="binary_expression [35252,35257]" dest="binary_expression [52964,52969]"/>
  <match src="returns: returns [91148,91155]" dest="returns: returns [30534,30541]"/>
  <match src="expression_statement [75615,75724]" dest="expression_statement [61434,61488]"/>
  <match src="pure: pure [46271,46275]" dest="pure: pure [16368,16372]"/>
  <match src="assignment_expression [101529,101636]" dest="assignment_expression [40915,41022]"/>
  <match src="primitive_type [3435,3442]" dest="primitive_type [3963,3970]"/>
  <match src="call_expression [102383,102390]" dest="call_expression [41769,41776]"/>
  <match src="function_body [97907,97936]" dest="function_body [37293,37322]"/>
  <match src="{: { [81985,81986]" dest="{: { [79964,79965]"/>
  <match src=".: . [94089,94090]" dest=".: . [33475,33476]"/>
  <match src="(: ( [354,355]" dest="(: ( [882,883]"/>
  <match src=",: , [8585,8586]" dest=",: , [9113,9114]"/>
  <match src="call_expression [7277,7309]" dest="call_expression [7805,7837]"/>
  <match src="address: address [101892,101899]" dest="address: address [41278,41285]"/>
  <match src=".: . [7988,7989]" dest=".: . [8516,8517]"/>
  <match src="primitive_type [77272,77279]" dest="primitive_type [78178,78185]"/>
  <match src="identifier: COLON [30990,30995]" dest="identifier: COLON [48702,48707]"/>
  <match src="identifier: candidate [96069,96078]" dest="identifier: candidate [35455,35464]"/>
  <match src="member_expression [96317,96342]" dest="member_expression [35703,35728]"/>
  <match src="call_argument [31826,31834]" dest="call_argument [49538,49546]"/>
  <match src="identifier: balanceOfBonded [81067,81082]" dest="identifier: balanceOfBonded [72122,72137]"/>
  <match src="identifier: sub [94353,94356]" dest="identifier: sub [33739,33742]"/>
  <match src="parameter [97997,98014]" dest="parameter [37383,37400]"/>
  <match src="call_argument [29878,29884]" dest="call_argument [47590,47596]"/>
  <match src="!: ! [30138,30139]" dest="!: ! [47850,47851]"/>
  <match src="identifier: account [105689,105696]" dest="identifier: account [68833,68840]"/>
  <match src="identifier: b [8917,8918]" dest="identifier: b [9445,9446]"/>
  <match src="call_expression [100076,100109]" dest="call_expression [39462,39495]"/>
  <match src="call_expression [79379,79386]" dest="call_expression [70941,70949]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [88450,88469]" dest="identifier: IMPLEMENTATION_SLOT [75640,75659]"/>
  <match src="string: string [103759,103765]" dest="string: string [43145,43151]"/>
  <match src="return: return [43778,43784]" dest="return: return [13875,13881]"/>
  <match src="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [5525,5638]" dest="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [6053,6166]"/>
  <match src="identifier: must [32148,32152]" dest="identifier: must [49860,49864]"/>
  <match src="type_name [7353,7360]" dest="type_name [7881,7888]"/>
  <match src=",: , [98314,98315]" dest=",: , [37700,37701]"/>
  <match src="identifier: add [98246,98249]" dest="identifier: add [37632,37635]"/>
  <match src="primitive_type [33929,33936]" dest="primitive_type [51641,51648]"/>
  <match src="pure: pure [386,390]" dest="pure: pure [914,918]"/>
  <match src="(: ( [81018,81019]" dest="(: ( [72605,72606]"/>
  <match src="uint256: uint256 [77476,77483]" dest="uint256: uint256 [61626,61633]"/>
  <match src=".: . [80916,80917]" dest=".: . [72971,72972]"/>
  <match src="identifier: sub [102927,102930]" dest="identifier: sub [42313,42316]"/>
  <match src="): ) [102413,102414]" dest="): ) [41799,41800]"/>
  <match src="identifier: payloadB [28863,28871]" dest="identifier: payloadB [46575,46583]"/>
  <match src="call_argument [6577,6581]" dest="call_argument [7105,7109]"/>
  <match src="member_expression [99328,99342]" dest="member_expression [38714,38728]"/>
  <match src="view: view [11664,11668]" dest="view: view [22965,22969]"/>
  <match src="identifier: period [103134,103140]" dest="identifier: period [42520,42526]"/>
  <match src="number_literal: 2 [9425,9426]" dest="number_literal: 2 [9953,9954]"/>
  <match src="primitive_type [66434,66441]" dest="primitive_type [62276,62283]"/>
  <match src="identifier: IOracle [91529,91536]" dest="identifier: IOracle [30915,30922]"/>
  <match src="]: ] [102134,102135]" dest="]: ] [41520,41521]"/>
  <match src="expression_statement [89463,89627]" dest="expression_statement [76653,76817]"/>
  <match src="identifier: value [79995,80000]" dest="identifier: value [71217,71222]"/>
  <match src="event_definition [97583,97655]" dest="event_definition [36969,37041]"/>
  <match src="contract_declaration [62630,66580]" dest="contract_declaration [65432,67995]"/>
  <match src="memory: memory [9957,9963]" dest="memory: memory [10485,10491]"/>
  <match src="function: function [53527,53535]" dest="function: function [21651,21659]"/>
  <match src="call_argument [79400,79410]" dest="call_argument [70963,70973]"/>
  <match src="identifier: Transfer [13648,13656]" dest="identifier: Transfer [24949,24957]"/>
  <match src="visibility [28297,28305]" dest="visibility [46009,46017]"/>
  <match src="): ) [19832,19833]" dest="): ) [64068,64069]"/>
  <match src="bytes: bytes [32850,32855]" dest="bytes: bytes [50562,50567]"/>
  <match src="new: new [35839,35842]" dest="new: new [53551,53554]"/>
  <match src="state_mutability [66420,66424]" dest="state_mutability [62262,62266]"/>
  <match src="type_name [99488,99495]" dest="type_name [38874,38881]"/>
  <match src="internal: internal [44251,44259]" dest="internal: internal [14348,14356]"/>
  <match src="}: } [6356,6357]" dest="}: } [6884,6885]"/>
  <match src="uint256: uint256 [73088,73095]" dest="uint256: uint256 [55917,55924]"/>
  <match src=".: . [83186,83187]" dest=".: . [58793,58794]"/>
  <match src="identifier: balance [99020,99027]" dest="identifier: balance [38406,38413]"/>
  <match src="identifier: block [57979,57984]" dest="identifier: block [83245,83250]"/>
  <match src="number_literal: 20 [35167,35169]" dest="number_literal: 20 [52879,52881]"/>
  <match src="assignment_expression [104667,104713]" dest="assignment_expression [44053,44099]"/>
  <match src="function_definition [95505,95695]" dest="function_definition [34891,35081]"/>
  <match src="call_argument [104595,104615]" dest="call_argument [43981,44001]"/>
  <match src="array_access [96185,96213]" dest="array_access [35571,35599]"/>
  <match src="identifier: that [48712,48716]" dest="identifier: that [62486,62490]"/>
  <match src="identifier: Constants [75678,75687]" dest="identifier: Constants [61392,61401]"/>
  <match src="uint256: uint256 [68433,68440]" dest="uint256: uint256 [65770,65777]"/>
  <match src="uint256: uint256 [34735,34742]" dest="uint256: uint256 [52447,52454]"/>
  <match src="}: } [103040,103041]" dest="}: } [42426,42427]"/>
  <match src="call_argument [36710,36735]" dest="call_argument [54422,54447]"/>
  <match src="identifier: owner [101698,101703]" dest="identifier: owner [41084,41089]"/>
  <match src="identifier: candidate [95935,95944]" dest="identifier: candidate [35321,35330]"/>
  <match src="state_mutability [7915,7919]" dest="state_mutability [8443,8447]"/>
  <match src=".: . [79973,79974]" dest=".: . [71195,71196]"/>
  <match src="call_argument [81441,81451]" dest="call_argument [72724,72734]"/>
  <match src="pure: pure [36594,36598]" dest="pure: pure [54306,54310]"/>
  <match src="identifier: value [10053,10058]" dest="identifier: value [10581,10586]"/>
  <match src="): ) [46465,46466]" dest="): ) [16562,16563]"/>
  <match src="=: = [88470,88471]" dest="=: = [75660,75661]"/>
  <match src=".: . [93275,93276]" dest=".: . [32661,32662]"/>
  <match src="binary_expression [34490,34511]" dest="binary_expression [52202,52223]"/>
  <match src="memory: memory [5960,5966]" dest="memory: memory [6488,6494]"/>
  <match src=".: . [6560,6561]" dest=".: . [7088,7089]"/>
  <match src="state_mutability [91515,91519]" dest="state_mutability [30901,30905]"/>
  <match src="parameter [45041,45060]" dest="parameter [15138,15157]"/>
  <match src="private: private [35633,35640]" dest="private: private [53345,53352]"/>
  <match src="identifier: _state [94962,94968]" dest="identifier: _state [34348,34354]"/>
  <match src="sload: sload [96797,96802]" dest="sload: sload [36183,36188]"/>
  <match src="user_defined_type [87068,87080]" dest="user_defined_type [28859,28871]"/>
  <match src="binary_expression [36482,36488]" dest="binary_expression [54194,54200]"/>
  <match src="identifier: amount [22924,22930]" dest="identifier: amount [55750,55756]"/>
  <match src="internal: internal [44010,44018]" dest="internal: internal [14107,14115]"/>
  <match src="identifier: _state [91962,91968]" dest="identifier: _state [31348,31354]"/>
  <match src="identifier: mint [77187,77191]" dest="identifier: mint [59447,59451]"/>
  <match src="function_definition [30622,31379]" dest="function_definition [48334,49091]"/>
  <match src="pure: pure [46576,46580]" dest="pure: pure [16673,16677]"/>
  <match src="(: ( [28016,28017]" dest="(: ( [45728,45729]"/>
  <match src="(: ( [35353,35354]" dest="(: ( [53065,53066]"/>
  <match src="}: } [91583,91584]" dest="}: } [30969,30970]"/>
  <match src="variable_declaration [82320,82336]" dest="variable_declaration [56948,56966]"/>
  <match src="): ) [81657,81658]" dest="): ) [79849,79850]"/>
  <match src="variable_declaration_statement [77475,77639]" dest="variable_declaration_statement [61625,61678]"/>
  <match src="view: view [52475,52479]" dest="view: view [20599,20603]"/>
  <match src="function_body [96168,96227]" dest="function_body [35554,35613]"/>
  <match src=",: , [99770,99771]" dest=",: , [39156,39157]"/>
  <match src="uint256: uint256 [34239,34246]" dest="uint256: uint256 [51951,51958]"/>
  <match src="identifier: add [103646,103649]" dest="identifier: add [43032,43035]"/>
  <match src="identifier: greaterThanOrEqualTo [9107,9127]" dest="identifier: greaterThanOrEqualTo [9635,9655]"/>
  <match src="address: address [103490,103497]" dest="address: address [42876,42883]"/>
  <match src="): ) [45213,45214]" dest="): ) [15310,15311]"/>
  <match src="identifier: amount [51013,51019]" dest="identifier: amount [55719,55725]"/>
  <match src="primitive_type [73710,73717]" dest="primitive_type [56408,56415]"/>
  <match src="): ) [70474,70475]" dest="): ) [81643,81644]"/>
  <match src="&quot;: &quot; [83266,83267]" dest="&quot;: &quot; [58870,58871]"/>
  <match src="}: } [31931,31932]" dest="}: } [49643,49644]"/>
  <match src=".: . [100001,100002]" dest=".: . [39387,39388]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [90571,90590]" dest="identifier: IMPLEMENTATION_SLOT [29957,29976]"/>
  <match src="identifier: recovered [48647,48656]" dest="identifier: dollarAmount [62586,62598]"/>
  <match src="function_definition [6598,6770]" dest="function_definition [7126,7298]"/>
  <match src="identifier: account [95680,95687]" dest="identifier: account [35066,35073]"/>
  <match src="private: private [105579,105586]" dest="private: private [68723,68730]"/>
  <match src="identifier: sender [79351,79357]" dest="identifier: sender [78266,78272]"/>
  <match src="parameter [98024,98038]" dest="parameter [37410,37424]"/>
  <match src="member_expression [6936,6946]" dest="member_expression [7464,7474]"/>
  <match src="member_expression [102879,102901]" dest="member_expression [42265,42287]"/>
  <match src="{: { [6175,6176]" dest="{: { [6703,6704]"/>
  <match src="visibility [103142,103150]" dest="visibility [42528,42536]"/>
  <match src="identifier: _state [101243,101249]" dest="identifier: _state [40629,40635]"/>
  <match src=".: . [100403,100404]" dest=".: . [39789,39790]"/>
  <match src="call_argument [79724,79734]" dest="call_argument [71271,71281]"/>
  <match src="identifier: stringify [29198,29207]" dest="identifier: stringify [46910,46919]"/>
  <match src="): ) [106220,106221]" dest="): ) [69364,69365]"/>
  <match src="parameter [8712,8716]" dest="parameter [9240,9244]"/>
  <match src="function_body [104785,104849]" dest="function_body [44171,44235]"/>
  <match src="{: { [2648,2649]" dest="{: { [3176,3177]"/>
  <match src="event: event [53206,53211]" dest="event: event [21330,21335]"/>
  <match src="primitive_type [69432,69439]" dest="primitive_type [55302,55309]"/>
  <match src="{: { [95135,95136]" dest="{: { [34521,34522]"/>
  <match src="identifier: current [94057,94064]" dest="identifier: current [33443,33450]"/>
  <match src="address: address [43345,43352]" dest="address: address [13442,13449]"/>
  <match src="memory: memory [9320,9326]" dest="memory: memory [9848,9854]"/>
  <match src="identifier: D256 [7109,7113]" dest="identifier: D256 [7637,7641]"/>
  <match src="&quot;: &quot; [89127,89128]" dest="&quot;: &quot; [76317,76318]"/>
  <match src="{: { [33106,33107]" dest="{: { [50818,50819]"/>
  <match src="(: ( [46589,46590]" dest="(: ( [16686,16687]"/>
  <match src="}: } [10092,10093]" dest="}: } [10620,10621]"/>
  <match src="identifier: value [79114,79119]" dest="identifier: value [70502,70507]"/>
  <match src="call_argument [74901,74907]" dest="call_argument [62374,62380]"/>
  <match src="}: } [45860,45861]" dest="}: } [15957,15958]"/>
  <match src="&quot;: &quot; [2064,2065]" dest="&quot;: &quot; [2592,2593]"/>
  <match src="{: { [36130,36131]" dest="{: { [53842,53843]"/>
  <match src="identifier: Deposit [78787,78794]" dest="identifier: Deposit [70305,70312]"/>
  <match src="assignment_expression [34469,34513]" dest="assignment_expression [52181,52225]"/>
  <match src="pragma_directive [36,60]" dest="pragma_directive [0,24]"/>
  <match src="identifier: balanceOfRewarded [81208,81225]" dest="identifier: balanceOf [78964,78973]"/>
  <match src="(: ( [53716,53717]" dest="(: ( [21840,21841]"/>
  <match src="return: return [94955,94961]" dest="return: return [34341,34347]"/>
  <match src="parameter [49708,49723]" dest="parameter [26091,26106]"/>
  <match src="uint256: uint256 [80390,80397]" dest="uint256: uint256 [66332,66339]"/>
  <match src="call_argument [50799,50806]" dest="call_argument [55457,55464]"/>
  <match src="type_name [44555,44562]" dest="type_name [14652,14659]"/>
  <match src="type_name [78514,78521]" dest="type_name [70237,70244]"/>
  <match src="(: ( [52299,52300]" dest="(: ( [20423,20424]"/>
  <match src=".: . [82079,82080]" dest=".: . [79981,79982]"/>
  <match src="parameter [30049,30065]" dest="parameter [47761,47777]"/>
  <match src="event_paramater [53346,53360]" dest="event_paramater [21470,21484]"/>
  <match src="primitive_type [15839,15846]" dest="primitive_type [60602,60609]"/>
  <match src="): ) [83185,83186]" dest="): ) [58791,58792]"/>
  <match src="solidity_version_comparison_operator [51,53]" dest="solidity_version_comparison_operator [15,17]"/>
  <match src="identifier: coupons [100624,100631]" dest="identifier: coupons [40010,40017]"/>
  <match src="identifier: spender [21926,21933]" dest="identifier: spender [63532,63539]"/>
  <match src="}: } [42001,42002]" dest="}: } [12098,12099]"/>
  <match src="(: ( [8954,8955]" dest="(: ( [9482,9483]"/>
  <match src="uint256: uint256 [77351,77358]" dest="uint256: uint256 [17552,17559]"/>
  <match src=",: , [95064,95065]" dest=",: , [34450,34451]"/>
  <match src="address: address [93042,93049]" dest="address: address [32428,32435]"/>
  <match src="internal: internal [43475,43483]" dest="internal: internal [13572,13580]"/>
  <match src="): ) [28126,28127]" dest="): ) [45838,45839]"/>
  <match src="type_name [5839,5846]" dest="type_name [6367,6374]"/>
  <match src="identifier: RPAREN [32624,32630]" dest="identifier: RPAREN [50336,50342]"/>
  <match src="(: ( [79583,79584]" dest="(: ( [71121,71122]"/>
  <match src="type_name [31473,31480]" dest="type_name [49185,49192]"/>
  <match src="primitive_type [82487,82494]" dest="primitive_type [61354,61361]"/>
  <match src="&quot;: &quot; [90775,90776]" dest="&quot;: &quot; [30161,30162]"/>
  <match src="{: { [91328,91329]" dest="{: { [30714,30715]"/>
  <match src="identifier: account [93611,93618]" dest="identifier: account [32997,33004]"/>
  <match src="primitive_type [22301,22308]" dest="primitive_type [58913,58920]"/>
  <match src="): ) [79836,79837]" dest="): ) [56578,56579]"/>
  <match src="): ) [94512,94513]" dest="): ) [33898,33899]"/>
  <match src="primitive_type [62861,62868]" dest="primitive_type [78131,78138]"/>
  <match src=",: , [81742,81743]" dest=",: , [79801,79802]"/>
  <match src="number_literal: 672 [41424,41427]" dest="number_literal: 672 [11521,11524]"/>
  <match src="): ) [91811,91812]" dest="): ) [31197,31198]"/>
  <match src=".: . [94372,94373]" dest=".: . [33758,33759]"/>
  <match src="visibility [98785,98793]" dest="visibility [38171,38179]"/>
  <match src=",: , [8083,8084]" dest=",: , [8611,8612]"/>
  <match src="identifier: IOracle [62649,62656]" dest="identifier: Comptroller [65454,65465]"/>
  <match src="(: ( [28360,28361]" dest="(: ( [46072,46073]"/>
  <match src="=: = [36480,36481]" dest="=: = [54192,54193]"/>
  <match src="=: = [42249,42250]" dest="=: = [12346,12347]"/>
  <match src="identifier: outstanding [100757,100768]" dest="identifier: outstanding [40143,40154]"/>
  <match src=".: . [101292,101293]" dest=".: . [40678,40679]"/>
  <match src="call_argument [99813,99823]" dest="call_argument [39199,39209]"/>
  <match src="identifier: owner [101900,101905]" dest="identifier: owner [41286,41291]"/>
  <match src="{: { [84659,84660]" dest="{: { [73987,73988]"/>
  <match src=".: . [93799,93800]" dest=".: . [33185,33186]"/>
  <match src="=: = [99350,99351]" dest="=: = [38736,38737]"/>
  <match src="type_name [53241,53245]" dest="type_name [21365,21369]"/>
  <match src="type_name [2017,2024]" dest="type_name [2545,2552]"/>
  <match src="type_name [53687,53694]" dest="type_name [21811,21818]"/>
  <match src="type_name [91429,91436]" dest="type_name [30815,30822]"/>
  <match src="parameter [76657,76664]" dest="parameter [56893,56900]"/>
  <match src="identifier: D256 [5824,5828]" dest="identifier: D256 [6352,6356]"/>
  <match src="(: ( [25653,25654]" dest="(: ( [60717,60718]"/>
  <match src="): ) [53900,53901]" dest="): ) [22024,22025]"/>
  <match src="(: ( [16167,16168]" dest="(: ( [56441,56442]"/>
  <match src="(: ( [28547,28548]" dest="(: ( [46259,46260]"/>
  <match src="identifier: price1CumulativeLast [53945,53965]" dest="identifier: price1CumulativeLast [22069,22089]"/>
  <match src="return_statement [96178,96221]" dest="return_statement [35564,35607]"/>
  <match src=",: , [29434,29435]" dest=",: , [47146,47147]"/>
  <match src="returns: returns [52801,52808]" dest="returns: returns [20925,20932]"/>
  <match src="identifier: compareTo [9927,9936]" dest="identifier: compareTo [10455,10464]"/>
  <match src="function_body [92568,92755]" dest="function_body [31954,32141]"/>
  <match src="identifier: staged [92477,92483]" dest="identifier: staged [31863,31869]"/>
  <match src="): ) [54345,54346]" dest="): ) [22469,22470]"/>
  <match src="primitive_type [6824,6831]" dest="primitive_type [7352,7359]"/>
  <match src="type_name [53370,53374]" dest="type_name [21494,21498]"/>
  <match src="assignment_expression [100389,100454]" dest="assignment_expression [39775,39840]"/>
  <match src="(: ( [94536,94537]" dest="(: ( [33922,33923]"/>
  <match src="(: ( [32786,32787]" dest="(: ( [50498,50499]"/>
  <match src="identifier: encodePacked [30902,30914]" dest="identifier: encodePacked [48614,48626]"/>
  <match src="identifier: couponAllowances [101801,101817]" dest="identifier: couponAllowances [41187,41203]"/>
  <match src="identifier: approveFor [95974,95984]" dest="identifier: approveFor [35360,35370]"/>
  <match src="}: } [92677,92678]" dest="}: } [32063,32064]"/>
  <match src="visibility [102350,102358]" dest="visibility [41736,41744]"/>
  <match src="identifier: spender [93693,93700]" dest="identifier: spender [33079,33086]"/>
  <match src="return_type_definition [6500,6521]" dest="return_type_definition [7028,7049]"/>
  <match src=",: , [97736,97737]" dest=",: , [37122,37123]"/>
  <match src="call_argument [106307,106323]" dest="call_argument [69451,69467]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [10145,10644]" dest="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [22537,22687]"/>
  <match src="}: } [89243,89244]" dest="}: } [76433,76434]"/>
  <match src="parameter [44555,44562]" dest="parameter [14652,14659]"/>
  <match src="identifier: self [9414,9418]" dest="identifier: self [9942,9946]"/>
  <match src="}: } [4804,4805]" dest="}: } [5332,5333]"/>
  <match src="}: } [9911,9912]" dest="}: } [10439,10440]"/>
  <match src=",: , [20070,20071]" dest=",: , [64713,64714]"/>
  <match src="variable_declaration_statement [80310,80381]" dest="variable_declaration_statement [66599,66644]"/>
  <match src="{: { [6065,6066]" dest="{: { [6593,6594]"/>
  <match src=".: . [100706,100707]" dest=".: . [40092,40093]"/>
  <match src="function_definition [93510,93638]" dest="function_definition [32896,33024]"/>
  <match src="visibility [15883,15890]" dest="visibility [19351,19358]"/>
  <match src="pure: pure [45924,45928]" dest="pure: pure [16021,16025]"/>
  <match src="call_argument [106189,106221]" dest="call_argument [69333,69365]"/>
  <match src="struct_declaration [86208,86301]" dest="struct_declaration [27999,28092]"/>
  <match src="identifier: b [2033,2034]" dest="identifier: b [2561,2562]"/>
  <match src="call_argument [82587,82600]" dest="call_argument [72675,72688]"/>
  <match src=".: . [99276,99277]" dest=".: . [38662,38663]"/>
  <match src="comment: // populate the string starting with the least-significant character [34138,34206]" dest="comment: // populate the string starting with the least-significant character [51850,51918]"/>
  <match src="string: string [6843,6849]" dest="string: string [7371,7377]"/>
  <match src="identifier: amount [20542,20548]" dest="identifier: amount [59006,59012]"/>
  <match src="variable_declaration [33081,33090]" dest="variable_declaration [50793,50802]"/>
  <match src="parenthesized_expression [31563,31921]" dest="parenthesized_expression [49275,49633]"/>
  <match src="comment: // ============ Self Functions ============ [6371,6414]" dest="comment: // ============ Self Functions ============ [6899,6942]"/>
  <match src="(: ( [93397,93398]" dest="(: ( [32783,32784]"/>
  <match src="): ) [7830,7831]" dest="): ) [8358,8359]"/>
  <match src="call_argument [102304,102305]" dest="call_argument [41690,41691]"/>
  <match src="call_expression [30334,30360]" dest="call_expression [48046,48072]"/>
  <match src="call_argument [81756,81792]" dest="call_argument [80581,80599]"/>
  <match src="visibility [8478,8486]" dest="visibility [9006,9014]"/>
  <match src="identifier: j [34504,34505]" dest="identifier: j [52216,52217]"/>
  <match src=",: , [32553,32554]" dest=",: , [50265,50266]"/>
  <match src="{: { [44042,44043]" dest="{: { [14139,14140]"/>
  <match src="(: ( [53553,53554]" dest="(: ( [21677,21678]"/>
  <match src="): ) [35627,35628]" dest="): ) [53339,53340]"/>
  <match src="=: = [42108,42109]" dest="=: = [12205,12206]"/>
  <match src="type_name [86389,86398]" dest="type_name [28180,28189]"/>
  <match src="(: ( [94899,94900]" dest="(: ( [34285,34286]"/>
  <match src="parenthesized_expression [28360,28718]" dest="parenthesized_expression [46072,46430]"/>
  <match src="): ) [8602,8603]" dest="): ) [9130,9131]"/>
  <match src="{: { [102359,102360]" dest="{: { [41745,41746]"/>
  <match src="): ) [95622,95623]" dest="): ) [35008,35009]"/>
  <match src=",: , [86538,86539]" dest=",: , [28329,28330]"/>
  <match src="number_literal: 0x3a20 [27514,27520]" dest="number_literal: 0x3a20 [45226,45232]"/>
  <match src="return_type_definition [44024,44041]" dest="return_type_definition [14121,14138]"/>
  <match src="call_argument [73535,73541]" dest="call_argument [18228,18234]"/>
  <match src="variable_declaration [32925,32944]" dest="variable_declaration [50637,50656]"/>
  <match src="type_name [29490,29497]" dest="type_name [47202,47209]"/>
  <match src="uint256: uint256 [91042,91049]" dest="uint256: uint256 [30428,30435]"/>
  <match src=".: . [92731,92732]" dest=".: . [32117,32118]"/>
  <match src="}: } [93958,93959]" dest="}: } [33344,33345]"/>
  <match src="(: ( [96024,96025]" dest="(: ( [35410,35411]"/>
  <match src="call_argument [9893,9904]" dest="call_argument [10421,10432]"/>
  <match src="function_definition [44956,45138]" dest="function_definition [15053,15235]"/>
  <match src="function: function [54331,54339]" dest="function: function [22455,22463]"/>
  <match src=",: , [8261,8262]" dest=",: , [8789,8790]"/>
  <match src="return_statement [93925,93953]" dest="return_statement [33311,33339]"/>
  <match src="=: = [35914,35915]" dest="=: = [53626,53627]"/>
  <match src="identifier: Candidate [103353,103362]" dest="identifier: Candidate [42739,42748]"/>
  <match src="call_argument [6951,6962]" dest="call_argument [7479,7490]"/>
  <match src=".: . [6566,6567]" dest=".: . [7094,7095]"/>
  <match src="identifier: account [101545,101552]" dest="identifier: account [40931,40938]"/>
  <match src="): ) [97881,97882]" dest="): ) [37267,37268]"/>
  <match src="identifier: accounts [101113,101121]" dest="identifier: accounts [40499,40507]"/>
  <match src="inheritance_specifier [88186,88191]" dest="inheritance_specifier [75376,75381]"/>
  <match src="call_argument [79874,79879]" dest="call_argument [71399,71404]"/>
  <match src="&quot;: &quot; [19934,19935]" dest="&quot;: &quot; [56738,56739]"/>
  <match src="identifier: kLast [54011,54016]" dest="identifier: kLast [22135,22140]"/>
  <match src="parameter [54068,54078]" dest="parameter [22192,22202]"/>
  <match src="variable_declaration_statement [71512,71565]" dest="variable_declaration_statement [67183,67269]"/>
  <match src="identifier: _state [91653,91659]" dest="identifier: _state [31039,31045]"/>
  <match src="]: ] [94700,94701]" dest="]: ] [34086,34087]"/>
  <match src="call_argument [82008,82025]" dest="call_argument [80911,80933]"/>
  <match src="=&gt;: =&gt; [87164,87166]" dest="=&gt;: =&gt; [28955,28957]"/>
  <match src="function_body [91636,91680]" dest="function_body [31022,31066]"/>
  <match src="primitive_type [97997,98004]" dest="primitive_type [37383,37390]"/>
  <match src="member_expression [92279,92305]" dest="member_expression [31665,31691]"/>
  <match src=".: . [101263,101264]" dest=".: . [40649,40650]"/>
  <match src="state_mutability [94783,94787]" dest="state_mutability [34169,34173]"/>
  <match src="binary_expression [10040,10058]" dest="binary_expression [10568,10586]"/>
  <match src="identifier: addedValue [18259,18269]" dest="identifier: totalDebt [17881,17890]"/>
  <match src="==: == [9530,9532]" dest="==: == [10058,10060]"/>
  <match src="identifier: COLON [29718,29723]" dest="identifier: COLON [47430,47435]"/>
  <match src="(: ( [6610,6611]" dest="(: ( [7138,7139]"/>
  <match src="): ) [34984,34985]" dest="): ) [52696,52697]"/>
  <match src="string: string [101060,101066]" dest="string: string [40446,40452]"/>
  <match src="visibility [54145,54153]" dest="visibility [22269,22277]"/>
  <match src=".: . [96079,96080]" dest=".: . [35465,35466]"/>
  <match src="identifier: slot [89712,89716]" dest="identifier: slot [76902,76906]"/>
  <match src="): ) [45300,45301]" dest="): ) [15397,15398]"/>
  <match src="public: public [69594,69600]" dest="public: public [82881,82887]"/>
  <match src="}: } [66579,66580]" dest="}: } [67994,67995]"/>
  <match src="primitive_type [100165,100172]" dest="primitive_type [39551,39558]"/>
  <match src="return_type_definition [94285,94302]" dest="return_type_definition [33671,33688]"/>
  <match src=",: , [79096,79097]" dest=",: , [70484,70485]"/>
  <match src="type_name [43599,43606]" dest="type_name [13696,13703]"/>
  <match src="identifier: FILE [105790,105794]" dest="identifier: FILE [68934,68938]"/>
  <match src="identifier: unbond [80969,80975]" dest="identifier: unbond [71993,71999]"/>
  <match src="identifier: lastReserve [64901,64912]" dest="identifier: balance [72636,72643]"/>
  <match src="expression_statement [80741,80868]" dest="expression_statement [71778,71908]"/>
  <match src="parameter [1275,1301]" dest="parameter [1803,1829]"/>
  <match src="}: } [71732,71733]" dest="}: } [67645,67646]"/>
  <match src="visibility [9584,9592]" dest="visibility [10112,10120]"/>
  <match src="identifier: stringifyTruncated [29668,29686]" dest="identifier: stringifyTruncated [47380,47398]"/>
  <match src="{: { [41924,41925]" dest="{: { [12021,12022]"/>
  <match src="return: return [45810,45816]" dest="return: return [15907,15913]"/>
  <match src=",: , [89541,89542]" dest=",: , [76731,76732]"/>
  <match src="primitive_type [92388,92395]" dest="primitive_type [31774,31781]"/>
  <match src="uint256: uint256 [80235,80242]" dest="uint256: uint256 [71432,71439]"/>
  <match src="): ) [36682,36683]" dest="): ) [54394,54395]"/>
  <match src=".: . [10120,10121]" dest=".: . [10648,10649]"/>
  <match src="(: ( [29552,29553]" dest="(: ( [47264,47265]"/>
  <match src="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [35728,35808]" dest="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [53440,53520]"/>
  <match src="visibility [49681,49687]" dest="visibility [26064,26070]"/>
  <match src="): ) [34719,34720]" dest="): ) [52431,52432]"/>
  <match src="identifier: candidates [96192,96202]" dest="identifier: candidates [35578,35588]"/>
  <match src="using_directive [90501,90532]" dest="using_directive [29887,29918]"/>
  <match src="uint256: uint256 [86995,87002]" dest="uint256: uint256 [28786,28793]"/>
  <match src=",: , [52106,52107]" dest=",: , [20230,20231]"/>
  <match src="identifier: abi [27956,27959]" dest="identifier: abi [45668,45671]"/>
  <match src="{: { [44874,44875]" dest="{: { [14971,14972]"/>
  <match src="]: ] [35957,35958]" dest="]: ] [53669,53670]"/>
  <match src="call_argument [28498,28503]" dest="call_argument [46210,46215]"/>
  <match src="array_access [93110,93134]" dest="array_access [32496,32520]"/>
  <match src="internal: internal [44646,44654]" dest="internal: internal [14743,14751]"/>
  <match src="call_argument [6726,6762]" dest="call_argument [7254,7290]"/>
  <match src="pure: pure [9593,9597]" dest="pure: pure [10121,10125]"/>
  <match src="yul_evm_builtin [96797,96802]" dest="yul_evm_builtin [36183,36188]"/>
  <match src="identifier: getGovernanceQuorum [44624,44643]" dest="identifier: getGovernanceQuorum [14721,14740]"/>
  <match src="identifier: abi [28991,28994]" dest="identifier: abi [46703,46706]"/>
  <match src="identifier: POOL_EXIT_LOCKUP_EPOCHS [45583,45606]" dest="identifier: POOL_EXIT_LOCKUP_EPOCHS [15680,15703]"/>
  <match src="uint256: uint256 [44441,44448]" dest="uint256: uint256 [14538,14545]"/>
  <match src="user_defined_type [94026,94049]" dest="user_defined_type [33412,33435]"/>
  <match src=",: , [80062,80063]" dest=",: , [72244,72245]"/>
  <match src="): ) [29691,29692]" dest="): ) [47403,47404]"/>
  <match src="primitive_type [7353,7360]" dest="primitive_type [7881,7888]"/>
  <match src="uint: uint [53065,53069]" dest="uint: uint [21189,21193]"/>
  <match src="(: ( [83138,83139]" dest="(: ( [58990,58991]"/>
  <match src="comment: // all bytes are zero [33657,33678]" dest="comment: // all bytes are zero [51369,51390]"/>
  <match src="member_expression [80654,80664]" dest="member_expression [72358,72368]"/>
  <match src="): ) [6760,6761]" dest="): ) [7288,7289]"/>
  <match src="=: = [99975,99976]" dest="=: = [39361,39362]"/>
  <match src="=: = [81321,81322]" dest="=: = [72110,72111]"/>
  <match src="call_expression [31651,31675]" dest="call_expression [49363,49387]"/>
  <match src="function_body [6704,6770]" dest="function_body [7232,7298]"/>
  <match src="array_access [36282,36300]" dest="array_access [53994,54012]"/>
  <match src="identifier: b [4099,4100]" dest="identifier: b [4627,4628]"/>
  <match src="identifier: epoch [102472,102477]" dest="identifier: epoch [41858,41863]"/>
  <match src="call_expression [2665,2704]" dest="call_expression [3193,3232]"/>
  <match src="uint: uint [52108,52112]" dest="uint: uint [20232,20236]"/>
  <match src="identifier: Vote [86700,86704]" dest="identifier: Vote [28491,28495]"/>
  <match src="primitive_type [92559,92566]" dest="primitive_type [31945,31952]"/>
  <match src="string_literal [81144,81173]" dest="string_literal [81318,81344]"/>
  <match src="assignment_expression [35524,35534]" dest="assignment_expression [53236,53246]"/>
  <match src=",: , [103507,103508]" dest=",: , [42893,42894]"/>
  <match src="primitive_type [16939,16946]" dest="primitive_type [59238,59245]"/>
  <match src="block_statement [33845,33880]" dest="block_statement [51557,51592]"/>
  <match src="identifier: amount [103911,103917]" dest="identifier: amount [43297,43303]"/>
  <match src="type_name [33956,33963]" dest="type_name [51668,51675]"/>
  <match src="call_argument [74557,74563]" dest="call_argument [18174,18180]"/>
  <match src="type_name [45673,45680]" dest="type_name [15770,15777]"/>
  <match src="identifier: epoch [101021,101026]" dest="identifier: epoch [40407,40412]"/>
  <match src="): ) [52214,52215]" dest="): ) [20338,20339]"/>
  <match src="function_body [93096,93372]" dest="function_body [32482,32758]"/>
  <match src="identifier: D256 [8955,8959]" dest="identifier: D256 [9483,9487]"/>
  <match src="identifier: amount [20603,20609]" dest="identifier: amount [59048,59054]"/>
  <match src="primitive_type [76769,76776]" dest="primitive_type [18191,18198]"/>
  <match src="identifier: amount [50808,50814]" dest="identifier: amount [55466,55472]"/>
  <match src="string_literal [33866,33869]" dest="string_literal [51578,51581]"/>
  <match src="identifier: result [36282,36288]" dest="identifier: result [53994,54000]"/>
  <match src="type_name [34707,34712]" dest="type_name [52419,52424]"/>
  <match src=",: , [54389,54390]" dest=",: , [22513,22514]"/>
  <match src="return_type_definition [46119,46148]" dest="return_type_definition [16216,16245]"/>
  <match src="identifier: balanceCheck [81813,81825]" dest="identifier: balanceCheck [56119,56131]"/>
  <match src=",: , [364,365]" dest=",: , [892,893]"/>
  <match src="type_name [5955,5959]" dest="type_name [6483,6487]"/>
  <match src="type_name [101713,101720]" dest="type_name [41099,41106]"/>
  <match src="call_argument [99668,99674]" dest="call_argument [39054,39060]"/>
  <match src=",: , [53075,53076]" dest=",: , [21199,21200]"/>
  <match src="parameter [92521,92536]" dest="parameter [31907,31922]"/>
  <match src="function_body [6065,6108]" dest="function_body [6593,6636]"/>
  <match src="primitive_type [11527,11534]" dest="primitive_type [22828,22835]"/>
  <match src="event_paramater [97598,97618]" dest="event_paramater [36984,37004]"/>
  <match src="identifier: decrementApproveFor [103679,103698]" dest="identifier: decrementApproveFor [43065,43084]"/>
  <match src="identifier: input [36812,36817]" dest="identifier: input [54524,54529]"/>
  <match src="(: ( [3238,3239]" dest="(: ( [3766,3767]"/>
  <match src="type_cast_expression [36801,36841]" dest="type_cast_expression [54513,54553]"/>
  <match src=",: , [99429,99430]" dest=",: , [38815,38816]"/>
  <match src="call_expression [48634,48693]" dest="call_expression [62558,62624]"/>
  <match src="): ) [79485,79486]" dest="): ) [71048,71049]"/>
  <match src="return_statement [45576,45607]" dest="return_statement [15673,15704]"/>
  <match src="expression_statement [79379,79434]" dest="expression_statement [70941,70997]"/>
  <match src="assignment_expression [98369,98434]" dest="assignment_expression [37755,37820]"/>
  <match src="identifier: LPAREN [28581,28587]" dest="identifier: LPAREN [46293,46299]"/>
  <match src="(: ( [94654,94655]" dest="(: ( [34040,34041]"/>
  <match src="parameter [28270,28286]" dest="parameter [45982,45998]"/>
  <match src="call_expression [30940,30964]" dest="call_expression [48652,48676]"/>
  <match src="type_name [1384,1391]" dest="type_name [1912,1919]"/>
  <match src="type_name [80390,80397]" dest="type_name [66332,66339]"/>
  <match src="{: { [103795,103796]" dest="{: { [43181,43182]"/>
  <match src="user_defined_type [97536,97543]" dest="user_defined_type [36922,36929]"/>
  <match src="): ) [80866,80867]" dest="): ) [71906,71907]"/>
  <match src="primitive_type [103967,103974]" dest="primitive_type [43353,43360]"/>
  <match src=",: , [95542,95543]" dest=",: , [34928,34929]"/>
  <match src="]: ] [93485,93486]" dest="]: ] [32871,32872]"/>
  <match src="[: [ [92467,92468]" dest="[: [ [31853,31854]"/>
  <match src="number_literal: 20e16 [42994,42999]" dest="number_literal: 20e16 [13091,13096]"/>
  <match src="(: ( [71445,71446]" dest="(: ( [81767,81768]"/>
  <match src="returns: returns [91520,91527]" dest="returns: returns [30906,30913]"/>
  <match src="call_expression [29274,29293]" dest="call_expression [46986,47005]"/>
  <match src="type_name [44151,44158]" dest="type_name [14248,14255]"/>
  <match src=",: , [13909,13910]" dest=",: , [25210,25211]"/>
  <match src=",: , [83409,83410]" dest=",: , [80322,80323]"/>
  <match src="type_name [35609,35616]" dest="type_name [53321,53328]"/>
  <match src="function_definition [52200,52254]" dest="function_definition [20324,20378]"/>
  <match src=".: . [95158,95159]" dest=".: . [34544,34545]"/>
  <match src="type_name [46392,46399]" dest="type_name [16489,16496]"/>
  <match src="call_expression [105974,106105]" dest="call_expression [69118,69249]"/>
  <match src="(: ( [9606,9607]" dest="(: ( [10134,10135]"/>
  <match src="parameter [99513,99527]" dest="parameter [38899,38913]"/>
  <match src="uint256: uint256 [1680,1687]" dest="uint256: uint256 [2208,2215]"/>
  <match src="identifier: amount [100343,100349]" dest="identifier: amount [39729,39735]"/>
  <match src="state_mutability [91716,91720]" dest="state_mutability [31102,31106]"/>
  <match src="call_argument [99431,99437]" dest="call_argument [38817,38823]"/>
  <match src="parameter [34707,34719]" dest="parameter [52419,52431]"/>
  <match src="user_defined_type [8143,8147]" dest="user_defined_type [8671,8675]"/>
  <match src="primitive_type [85981,85988]" dest="primitive_type [27772,27779]"/>
  <match src="{: { [8722,8723]" dest="{: { [9250,9251]"/>
  <match src="bool: bool [49757,49761]" dest="bool: bool [26140,26144]"/>
  <match src="identifier: stringifyTruncated [29033,29051]" dest="identifier: stringifyTruncated [46745,46763]"/>
  <match src="visibility [73112,73120]" dest="visibility [55933,55941]"/>
  <match src="returns: returns [94285,94292]" dest="returns: returns [33671,33678]"/>
  <match src="number_literal: 64 [36427,36429]" dest="number_literal: 64 [54139,54141]"/>
  <match src="internal: internal [43576,43584]" dest="internal: internal [13673,13681]"/>
  <match src="identifier: start [96490,96495]" dest="identifier: start [35876,35881]"/>
  <match src="function_definition [91790,91888]" dest="function_definition [31176,31274]"/>
  <match src="): ) [105962,105963]" dest="): ) [69106,69107]"/>
  <match src="event: event [13642,13647]" dest="event: event [24943,24948]"/>
  <match src="binary_expression [2029,2034]" dest="binary_expression [2557,2562]"/>
  <match src="view: view [53673,53677]" dest="view: view [21797,21801]"/>
  <match src=".: . [29629,29630]" dest=".: . [47341,47342]"/>
  <match src="]: ] [95309,95310]" dest="]: ] [34695,34696]"/>
  <match src="returns: returns [95113,95120]" dest="returns: returns [34499,34506]"/>
  <match src="}: } [6224,6225]" dest="}: } [6752,6753]"/>
  <match src="{: { [90953,90954]" dest="{: { [30339,30340]"/>
  <match src="identifier: sub [1249,1252]" dest="identifier: sub [1777,1780]"/>
  <match src="binary_expression [34504,34510]" dest="binary_expression [52216,52222]"/>
  <match src="identifier: add [6429,6432]" dest="identifier: add [6957,6960]"/>
  <match src="type_name [76592,76599]" dest="type_name [62419,62426]"/>
  <match src="(: ( [35920,35921]" dest="(: ( [53632,53633]"/>
  <match src="primitive_type [34484,34489]" dest="primitive_type [52196,52201]"/>
  <match src="}: } [96823,96824]" dest="}: } [36209,36210]"/>
  <match src="}: } [7659,7660]" dest="}: } [8187,8188]"/>
  <match src="return_type_definition [43733,43763]" dest="return_type_definition [13830,13860]"/>
  <match src="return_type_definition [45032,45061]" dest="return_type_definition [15129,15158]"/>
  <match src="): ) [36325,36326]" dest="): ) [54037,54038]"/>
  <match src="call_struct_argument [6088,6099]" dest="call_struct_argument [6616,6627]"/>
  <match src="(: ( [53148,53149]" dest="(: ( [21272,21273]"/>
  <match src="call_argument [81019,81029]" dest="call_argument [72606,72616]"/>
  <match src="function: function [28182,28190]" dest="function: function [45894,45902]"/>
  <match src="identifier: totalSupply [92627,92638]" dest="identifier: totalSupply [32013,32024]"/>
  <match src="identifier: amount [98308,98314]" dest="identifier: amount [37694,37700]"/>
  <match src="expression_statement [34412,34416]" dest="expression_statement [52124,52128]"/>
  <match src="primitive_type [100536,100543]" dest="primitive_type [39922,39929]"/>
  <match src="string_literal [21086,21121]" dest="string_literal [63253,63290]"/>
  <match src="identifier: msg [79347,79350]" dest="identifier: msg [78262,78265]"/>
  <match src="parameter [90946,90951]" dest="parameter [30332,30337]"/>
  <match src="identifier: ASCII_ZERO [27353,27363]" dest="identifier: ASCII_ZERO [45065,45075]"/>
  <match src="visibility [91813,91819]" dest="visibility [31199,31205]"/>
  <match src="call_expression [80925,80939]" dest="call_expression [72980,72994]"/>
  <match src="): ) [45754,45755]" dest="): ) [15851,15852]"/>
  <match src="visibility [96554,96560]" dest="visibility [35940,35946]"/>
  <match src="identifier: getGovernanceEmergencyDelay [45153,45180]" dest="identifier: getGovernanceEmergencyDelay [15250,15277]"/>
  <match src="returns: returns [52928,52935]" dest="returns: returns [21052,21059]"/>
  <match src="call_expression [106204,106220]" dest="call_expression [69348,69364]"/>
  <match src="number_literal: 0 [34263,34264]" dest="number_literal: 0 [51975,51976]"/>
  <match src="(: ( [65243,65244]" dest="(: ( [67693,67694]"/>
  <match src="member_expression [100897,100923]" dest="member_expression [40283,40309]"/>
  <match src="type_name [44441,44448]" dest="type_name [14538,14545]"/>
  <match src="identifier: stringify [32579,32588]" dest="identifier: stringify [50291,50300]"/>
  <match src="identifier: staged [100428,100434]" dest="identifier: staged [39814,39820]"/>
  <match src="number_literal: 2 [8923,8924]" dest="number_literal: 2 [9451,9452]"/>
  <match src="internal: internal [29517,29525]" dest="internal: internal [47229,47237]"/>
  <match src="identifier: spender [13927,13934]" dest="identifier: spender [25228,25235]"/>
  <match src=".: . [91866,91867]" dest=".: . [31252,31253]"/>
  <match src="}: } [46036,46037]" dest="}: } [16133,16134]"/>
  <match src="): ) [98868,98869]" dest="): ) [38254,38255]"/>
  <match src="member_expression [98683,98706]" dest="member_expression [38069,38092]"/>
  <match src="function_body [89453,89752]" dest="function_body [76643,76942]"/>
  <match src="type_name [79217,79224]" dest="type_name [60942,60949]"/>
  <match src="string [2675,2703]" dest="string [3203,3231]"/>
  <match src="pure: pure [8129,8133]" dest="pure: pure [8657,8661]"/>
  <match src="identifier: amount [104125,104131]" dest="identifier: amount [43511,43517]"/>
  <match src="member_expression [95785,95819]" dest="member_expression [35171,35205]"/>
  <match src="/: / [2054,2055]" dest="/: / [2582,2583]"/>
  <match src="type_name [16168,16175]" dest="type_name [56442,56449]"/>
  <match src="identifier: a [803,804]" dest="identifier: a [1331,1332]"/>
  <match src="visibility [44532,44540]" dest="visibility [14629,14637]"/>
  <match src="parameter [91529,91536]" dest="parameter [30915,30922]"/>
  <match src="identifier: compareTo [9235,9244]" dest="identifier: compareTo [9763,9772]"/>
  <match src="): ) [80167,80168]" dest="): ) [59540,59541]"/>
  <match src="function: function [94488,94496]" dest="function: function [33874,33882]"/>
  <match src="call_argument [7798,7830]" dest="call_argument [8326,8358]"/>
  <match src="user_defined_type [44669,44681]" dest="user_defined_type [14766,14778]"/>
  <match src="state_mutability [9482,9486]" dest="state_mutability [10010,10014]"/>
  <match src="identifier: current [102292,102299]" dest="identifier: current [41678,41685]"/>
  <match src="(: ( [96437,96438]" dest="(: ( [35823,35824]"/>
  <match src="internal: internal [94514,94522]" dest="internal: internal [33900,33908]"/>
  <match src="[: [ [103432,103433]" dest="[: [ [42818,42819]"/>
  <match src="{: { [94307,94308]" dest="{: { [33693,33694]"/>
  <match src="identifier: a [10040,10041]" dest="identifier: a [10568,10569]"/>
  <match src="(: ( [13656,13657]" dest="(: ( [24957,24958]"/>
  <match src="): ) [9381,9382]" dest="): ) [9909,9910]"/>
  <match src="identifier: LPAREN [31073,31079]" dest="identifier: LPAREN [48785,48791]"/>
  <match src="for: for [35143,35146]" dest="for: for [52855,52858]"/>
  <match src="function_definition [52661,52727]" dest="function_definition [20785,20851]"/>
  <match src="return_type_definition [52230,52253]" dest="return_type_definition [20354,20377]"/>
  <match src="(: ( [2593,2594]" dest="(: ( [3121,3122]"/>
  <match src="(: ( [53776,53777]" dest="(: ( [21900,21901]"/>
  <match src="public: public [92538,92544]" dest="public: public [31924,31930]"/>
  <match src="call_expression [82668,82738]" dest="call_expression [62746,62787]"/>
  <match src=".: . [100605,100606]" dest=".: . [39991,39992]"/>
  <match src="}: } [44380,44381]" dest="}: } [14477,14478]"/>
  <match src="): ) [91436,91437]" dest="): ) [30822,30823]"/>
  <match src="function: function [92106,92114]" dest="function: function [31492,31500]"/>
  <match src="primitive_type [102464,102471]" dest="primitive_type [41850,41857]"/>
  <match src="string: string [52300,52306]" dest="string: string [20424,20430]"/>
  <match src="): ) [36839,36840]" dest="): ) [54551,54552]"/>
  <match src="primitive_type [35921,35926]" dest="primitive_type [53633,53638]"/>
  <match src="identifier: size [84677,84681]" dest="identifier: size [74005,74009]"/>
  <match src="user_defined_type [5955,5959]" dest="user_defined_type [6483,6487]"/>
  <match src="call_struct_argument [7115,7139]" dest="call_struct_argument [7643,7667]"/>
  <match src="identifier: encodePacked [28995,29007]" dest="identifier: encodePacked [46707,46719]"/>
  <match src="]: ] [101799,101800]" dest="]: ] [41185,41186]"/>
  <match src="]: ] [104822,104823]" dest="]: ] [44208,44209]"/>
  <match src="call_argument [83191,83204]" dest="call_argument [58798,58815]"/>
  <match src="address: address [88697,88704]" dest="address: address [75887,75894]"/>
  <match src="type_name [53632,53639]" dest="type_name [21756,21763]"/>
  <match src="using: using [69413,69418]" dest="using: using [55283,55288]"/>
  <match src="): ) [47992,47993]" dest="): ) [55725,55726]"/>
  <match src="type_name [62700,62707]" dest="type_name [60310,60317]"/>
  <match src="): ) [81361,81362]" dest="): ) [72198,72199]"/>
  <match src="(: ( [46182,46183]" dest="(: ( [16279,16280]"/>
  <match src="memory: memory [98627,98633]" dest="memory: memory [38013,38019]"/>
  <match src="comment: // 50% [43215,43221]" dest="comment: // 50% [13312,13318]"/>
  <match src="type_name [103490,103497]" dest="type_name [42876,42883]"/>
  <match src="parameter [53077,53090]" dest="parameter [21201,21214]"/>
  <match src="identifier: this [83147,83151]" dest="identifier: this [58999,59003]"/>
  <match src="{: { [5990,5991]" dest="{: { [6518,6519]"/>
  <match src="call_expression [6543,6585]" dest="call_expression [7071,7113]"/>
  <match src="identifier: redeemable [98847,98857]" dest="identifier: redeemable [38233,38243]"/>
  <match src="parameter [52534,52549]" dest="parameter [20658,20673]"/>
  <match src=".: . [79865,79866]" dest=".: . [71390,71391]"/>
  <match src="identifier: account [26340,26347]" dest="identifier: account [83360,83367]"/>
  <match src="returns: returns [52412,52419]" dest="returns: returns [20536,20543]"/>
  <match src="identifier: current [102269,102276]" dest="identifier: current [41655,41662]"/>
  <match src="parameter [94537,94544]" dest="parameter [33923,33930]"/>
  <match src="uint256: uint256 [76769,76776]" dest="uint256: uint256 [18191,18198]"/>
  <match src="number_literal: 1 [41333,41334]" dest="number_literal: 1 [11430,11431]"/>
  <match src="modifier: modifier [105654,105662]" dest="modifier: modifier [68798,68806]"/>
  <match src="return_type_definition [95599,95623]" dest="return_type_definition [34985,35009]"/>
  <match src="): ) [94014,94015]" dest="): ) [33400,33401]"/>
  <match src="): ) [44373,44374]" dest="): ) [14470,14471]"/>
  <match src="&quot;: &quot; [19090,19091]" dest="&quot;: &quot; [70766,70767]"/>
  <match src="identifier: Deposit [79527,79534]" dest="identifier: Deposit [71065,71072]"/>
  <match src="bytes32: bytes32 [90538,90545]" dest="bytes32: bytes32 [29924,29931]"/>
  <match src="(: ( [35710,35711]" dest="(: ( [53422,53423]"/>
  <match src="identifier: amount [19695,19701]" dest="identifier: amount [63871,63877]"/>
  <match src="function_definition [91894,91988]" dest="function_definition [31280,31374]"/>
  <match src="type_name [93670,93677]" dest="type_name [33056,33063]"/>
  <match src="parameter [91834,91841]" dest="parameter [31220,31227]"/>
  <match src="expression_statement [36117,36124]" dest="expression_statement [53829,53836]"/>
  <match src="type_name [94537,94544]" dest="type_name [33923,33930]"/>
  <match src=",: , [28022,28023]" dest=",: , [45734,45735]"/>
  <match src="(: ( [77199,77200]" dest="(: ( [59459,59460]"/>
  <match src="identifier: SafeMath [78501,78509]" dest="identifier: SafeMath [70224,70232]"/>
  <match src=",: , [106239,106240]" dest=",: , [69383,69384]"/>
  <match src="call_argument [106253,106274]" dest="call_argument [69397,69418]"/>
  <match src="identifier: payloadA [31481,31489]" dest="identifier: payloadA [49193,49201]"/>
  <match src="primitive_type [99513,99520]" dest="primitive_type [38899,38906]"/>
  <match src="number_literal: 42 [34895,34897]" dest="number_literal: 42 [52607,52609]"/>
  <match src="assignment_expression [103805,103926]" dest="assignment_expression [43191,43312]"/>
  <match src="identifier: balance [86013,86020]" dest="identifier: balance [27804,27811]"/>
  <match src="(: ( [100101,100102]" dest="(: ( [39487,39488]"/>
  <match src="identifier: j [34215,34216]" dest="identifier: j [51927,51928]"/>
  <match src="yul_identifier [96789,96793]" dest="yul_identifier [36175,36179]"/>
  <match src="identifier: sub [100435,100438]" dest="identifier: sub [39821,39824]"/>
  <match src="function_body [43768,43969]" dest="function_body [13865,14066]"/>
  <match src="member_expression [7821,7828]" dest="member_expression [8349,8356]"/>
  <match src="identifier: candidates [96058,96068]" dest="identifier: candidates [35444,35454]"/>
  <match src="call_expression [100294,100379]" dest="call_expression [39680,39765]"/>
  <match src="identifier: balanceOfBonded [81049,81064]" dest="identifier: epoch [62643,62648]"/>
  <match src="}: } [6364,6365]" dest="}: } [6892,6893]"/>
  <match src=",: , [103725,103726]" dest=",: , [43111,43112]"/>
  <match src="member_expression [92177,92191]" dest="member_expression [31563,31577]"/>
  <match src="call_expression [7109,7141]" dest="call_expression [7637,7669]"/>
  <match src=".: . [102536,102537]" dest=".: . [41922,41923]"/>
  <match src="identifier: spender [93817,93824]" dest="identifier: spender [33203,33210]"/>
  <match src=",: , [1689,1690]" dest=",: , [2217,2218]"/>
  <match src="variable_declaration_statement [7558,7572]" dest="variable_declaration_statement [8086,8100]"/>
  <match src="identifier: Approval [22048,22056]" dest="identifier: CouponApproval [63699,63713]"/>
  <match src="parameter [2639,2646]" dest="parameter [3167,3174]"/>
  <match src="string [83237,83267]" dest="string [58848,58871]"/>
  <match src="array_access [95152,95192]" dest="array_access [34538,34578]"/>
  <match src="type_name [68406,68413]" dest="type_name [65812,65819]"/>
  <match src="primitive_type [23030,23037]" dest="primitive_type [17900,17907]"/>
  <match src="(: ( [45040,45041]" dest="(: ( [15137,15138]"/>
  <match src="(: ( [52213,52214]" dest="(: ( [20337,20338]"/>
  <match src="primitive_type [97569,97576]" dest="primitive_type [36955,36962]"/>
  <match src="type_cast_expression [99410,99420]" dest="type_cast_expression [38796,38806]"/>
  <match src="identifier: mul [92708,92711]" dest="identifier: mul [32094,32097]"/>
  <match src="return_statement [92965,93012]" dest="return_statement [32351,32398]"/>
  <match src="function_definition [8424,8610]" dest="function_definition [8952,9138]"/>
  <match src="identifier: D256 [8437,8441]" dest="identifier: D256 [8965,8969]"/>
  <match src="): ) [80528,80529]" dest="): ) [71623,71624]"/>
  <match src="primitive_type [44151,44158]" dest="primitive_type [14248,14255]"/>
  <match src="(: ( [80422,80423]" dest="(: ( [71556,71557]"/>
  <match src="view: view [95100,95104]" dest="view: view [34486,34490]"/>
  <match src="state_variable_declaration [27578,27610]" dest="state_variable_declaration [45290,45322]"/>
  <match src="identifier: self [9578,9582]" dest="identifier: self [10106,10110]"/>
  <match src="uint256: uint256 [64236,64243]" dest="uint256: uint256 [80044,80051]"/>
  <match src="): ) [70314,70315]" dest="): ) [58662,58663]"/>
  <match src=",: , [49723,49724]" dest=",: , [26106,26107]"/>
  <match src="return_statement [96591,96639]" dest="return_statement [35977,36025]"/>
  <match src="]: ] [101171,101172]" dest="]: ] [40557,40558]"/>
  <match src="identifier: candidates [95924,95934]" dest="identifier: candidates [35310,35320]"/>
  <match src="variable_declaration [64941,64951]" dest="variable_declaration [67753,67763]"/>
  <match src="return: return [44700,44706]" dest="return: return [14797,14803]"/>
  <match src="state_variable_declaration [42206,42255]" dest="state_variable_declaration [12303,12352]"/>
  <match src="primitive_type [92521,92528]" dest="primitive_type [31907,31914]"/>
  <match src=".: . [62688,62689]" dest=".: . [65529,65530]"/>
  <match src="identifier: to [54141,54143]" dest="identifier: to [22265,22267]"/>
  <match src=".: . [8000,8001]" dest=".: . [8528,8529]"/>
  <match src="address: address [91251,91258]" dest="address: address [30637,30644]"/>
  <match src="member_expression [7999,8006]" dest="member_expression [8527,8534]"/>
  <match src="identifier: reason [101226,101232]" dest="identifier: reason [40612,40618]"/>
  <match src="contract_declaration [97509,104851]" dest="contract_declaration [36895,44237]"/>
  <match src="): ) [53467,53468]" dest="): ) [21591,21592]"/>
  <match src="call_expression [29198,29217]" dest="call_expression [46910,46929]"/>
  <match src="address: address [13398,13405]" dest="address: address [24699,24706]"/>
  <match src="(: ( [102463,102464]" dest="(: ( [41849,41850]"/>
  <match src="memory: memory [94231,94237]" dest="memory: memory [33617,33623]"/>
  <match src="function_definition [7666,7838]" dest="function_definition [8194,8366]"/>
  <match src="identifier: epoch [103004,103009]" dest="identifier: epoch [42390,42395]"/>
  <match src="function_definition [53756,53865]" dest="function_definition [21880,21989]"/>
  <match src="identifier: reason [100447,100453]" dest="identifier: reason [39833,39839]"/>
  <match src="identifier: reserve1 [77502,77510]" dest="identifier: newBonded [61658,61667]"/>
  <match src="): ) [94162,94163]" dest="): ) [33548,33549]"/>
  <match src="identifier: transferFrom [79387,79399]" dest="identifier: transferFrom [70950,70962]"/>
  <match src="): ) [53749,53750]" dest="): ) [21873,21874]"/>
  <match src=".: . [102299,102300]" dest=".: . [41685,41686]"/>
  <match src="call_argument [106204,106220]" dest="call_argument [69348,69364]"/>
  <match src="expression_statement [103398,103449]" dest="expression_statement [42784,42835]"/>
  <match src="address: address [19652,19659]" dest="address: address [63789,63796]"/>
  <match src="!: ! [27883,27884]" dest="!: ! [45595,45596]"/>
  <match src="identifier: must [31537,31541]" dest="identifier: must [49249,49253]"/>
  <match src="identifier: updateAllowanceCoupons [101658,101680]" dest="identifier: updateAllowanceCoupons [41044,41066]"/>
  <match src="function_body [91328,91353]" dest="function_body [30714,30739]"/>
  <match src="event_paramater [53314,53336]" dest="event_paramater [21438,21460]"/>
  <match src="struct: struct [86208,86214]" dest="struct: struct [27999,28005]"/>
  <match src="emit: emit [99790,99794]" dest="emit: emit [39176,39180]"/>
  <match src="(: ( [95263,95264]" dest="(: ( [34649,34650]"/>
  <match src="type_name [95759,95766]" dest="type_name [35145,35152]"/>
  <match src="identifier: DAO_EXIT_LOCKUP_EPOCHS [42718,42740]" dest="identifier: DAO_EXIT_LOCKUP_EPOCHS [12815,12837]"/>
  <match src="}: } [45852,45853]" dest="}: } [15949,15950]"/>
  <match src="user_defined_type [15700,15706]" dest="user_defined_type [60265,60270]"/>
  <match src="parameter [92864,92871]" dest="parameter [32250,32257]"/>
  <match src="primitive_type [8093,8099]" dest="primitive_type [8621,8627]"/>
  <match src="user_defined_type [62649,62656]" dest="user_defined_type [65454,65465]"/>
  <match src=",: , [33542,33543]" dest=",: , [51254,51255]"/>
  <match src="function: function [6231,6239]" dest="function: function [6759,6767]"/>
  <match src="): ) [61943,61944]" dest="): ) [26998,26999]"/>
  <match src="): ) [32521,32522]" dest="): ) [50233,50234]"/>
  <match src="type_name [92253,92260]" dest="type_name [31639,31646]"/>
  <match src="call_argument [82231,82235]" dest="call_argument [80183,80187]"/>
  <match src=".: . [103624,103625]" dest=".: . [43010,43011]"/>
  <match src="array_access [92452,92476]" dest="array_access [31838,31862]"/>
  <match src="type_name [28855,28862]" dest="type_name [46567,46574]"/>
  <match src="identifier: D256 [6433,6437]" dest="identifier: D256 [6961,6965]"/>
  <match src="identifier: value [6727,6732]" dest="identifier: value [7255,7260]"/>
  <match src=".: . [100825,100826]" dest=".: . [40211,40212]"/>
  <match src=".: . [104823,104824]" dest=".: . [44209,44210]"/>
  <match src="(: ( [4752,4753]" dest="(: ( [5280,5281]"/>
  <match src="function: function [4008,4016]" dest="function: function [4536,4544]"/>
  <match src="state_mutability [7221,7225]" dest="state_mutability [7749,7753]"/>
  <match src="(: ( [98418,98419]" dest="(: ( [37804,37805]"/>
  <match src="visibility [54277,54285]" dest="visibility [22401,22409]"/>
  <match src="{: { [92435,92436]" dest="{: { [31821,31822]"/>
  <match src="member_expression [83517,83529]" dest="member_expression [78288,78300]"/>
  <match src="returns: returns [11518,11525]" dest="returns: returns [22819,22826]"/>
  <match src=".: . [7994,7995]" dest=".: . [8522,8523]"/>
  <match src="(: ( [30635,30636]" dest="(: ( [48347,48348]"/>
  <match src="address: address [103967,103974]" dest="address: address [43353,43360]"/>
  <match src="yul_evm_builtin [89705,89711]" dest="yul_evm_builtin [76895,76901]"/>
  <match src="): ) [52275,52276]" dest="): ) [20399,20400]"/>
  <match src="binary_expression [10109,10126]" dest="binary_expression [10637,10654]"/>
  <match src="member_expression [91653,91668]" dest="member_expression [31039,31054]"/>
  <match src="(: ( [1252,1253]" dest="(: ( [1780,1781]"/>
  <match src="}: } [9432,9433]" dest="}: } [9960,9961]"/>
  <match src="binary_expression [34259,34264]" dest="binary_expression [51971,51976]"/>
  <match src="address: address [89418,89425]" dest="address: address [76608,76615]"/>
  <match src="identifier: LPAREN [30386,30392]" dest="identifier: LPAREN [48098,48104]"/>
  <match src="identifier: stringify [33728,33737]" dest="identifier: stringify [51440,51449]"/>
  <match src="member_expression [100076,100101]" dest="member_expression [39462,39487]"/>
  <match src=",: , [53239,53240]" dest=",: , [21363,21364]"/>
  <match src="variable_declaration_statement [419,437]" dest="variable_declaration_statement [947,965]"/>
  <match src="identifier: stringifyTruncated [32768,32786]" dest="identifier: stringifyTruncated [50480,50498]"/>
  <match src="{: { [7798,7799]" dest="{: { [8326,8327]"/>
  <match src="array_access [103215,103243]" dest="array_access [42601,42629]"/>
  <match src="): ) [83075,83076]" dest="): ) [58927,58928]"/>
  <match src="emit_statement [22043,22081]" dest="emit_statement [63694,63743]"/>
  <match src="user_defined_type [7075,7079]" dest="user_defined_type [7603,7607]"/>
  <match src="&gt;: &gt; [10117,10118]" dest="&gt;: &gt; [10645,10646]"/>
  <match src="string_literal [19752,19791]" dest="string_literal [63958,64005]"/>
  <match src="if_statement [92887,92956]" dest="if_statement [32273,32342]"/>
  <match src=",: , [53360,53361]" dest=",: , [21484,21485]"/>
  <match src="identifier: candidates [95792,95802]" dest="identifier: candidates [35178,35188]"/>
  <match src="(: ( [44032,44033]" dest="(: ( [14129,14130]"/>
  <match src="member_expression [93110,93146]" dest="member_expression [32496,32532]"/>
  <match src="type_name [79008,79015]" dest="type_name [70630,70637]"/>
  <match src="identifier: input [32804,32809]" dest="identifier: input [50516,50521]"/>
  <match src="memory: memory [8148,8154]" dest="memory: memory [8676,8682]"/>
  <match src="call_argument [2672,2673]" dest="call_argument [3200,3201]"/>
  <match src="constant: constant [43317,43325]" dest="constant: constant [13414,13422]"/>
  <match src="(: ( [35491,35492]" dest="(: ( [53203,53204]"/>
  <match src="yul_identifier [89718,89735]" dest="yul_identifier [76908,76925]"/>
  <match src="function_definition [96512,96645]" dest="function_definition [35898,36031]"/>
  <match src="state_mutability [44827,44831]" dest="state_mutability [14924,14928]"/>
  <match src="inheritance_specifier [49574,49580]" dest="inheritance_specifier [25957,25963]"/>
  <match src="identifier: _state [99352,99358]" dest="identifier: _state [38738,38744]"/>
  <match src="array_access [95785,95813]" dest="array_access [35171,35199]"/>
  <match src="address: address [43498,43505]" dest="address: address [13595,13602]"/>
  <match src="parameter [95719,95736]" dest="parameter [35105,35122]"/>
  <match src="(: ( [52274,52275]" dest="(: ( [20398,20399]"/>
  <match src="expression_statement [35386,35397]" dest="expression_statement [53098,53109]"/>
  <match src="public: public [92827,92833]" dest="public: public [32213,32219]"/>
  <match src="function_body [92262,92325]" dest="function_body [31648,31711]"/>
  <match src="string [62732,62740]" dest="string [60342,60350]"/>
  <match src="identifier: dollar [107437,107443]" dest="identifier: dollar [55443,55449]"/>
  <match src="(: ( [79657,79658]" dest="(: ( [83079,83080]"/>
  <match src="pure: pure [29530,29534]" dest="pure: pure [47242,47246]"/>
  <match src="parameter [16168,16175]" dest="parameter [56442,56449]"/>
  <match src="return_type_definition [96016,96033]" dest="return_type_definition [35402,35419]"/>
  <match src="identifier: D256 [7277,7281]" dest="identifier: D256 [7805,7809]"/>
  <match src="primitive_type [13029,13036]" dest="primitive_type [24330,24337]"/>
  <match src=",: , [12291,12292]" dest=",: , [23592,23593]"/>
  <match src="visibility [103379,103387]" dest="visibility [42765,42773]"/>
  <match src="contract_body [11404,13953]" dest="contract_body [22705,25254]"/>
  <match src="identifier: experimental [68,80]" dest="identifier: experimental [32,44]"/>
  <match src="type_name [100536,100543]" dest="type_name [39922,39929]"/>
  <match src="primitive_type [1680,1687]" dest="primitive_type [2208,2215]"/>
  <match src=".: . [47855,47856]" dest=".: . [55681,55682]"/>
  <match src="identifier: burn [54128,54132]" dest="identifier: burn [22252,22256]"/>
  <match src="call_argument [25192,25227]" dest="call_argument [79490,79520]"/>
  <match src="primitive_type [12333,12340]" dest="primitive_type [23634,23641]"/>
  <match src=",: , [3248,3249]" dest=",: , [3776,3777]"/>
  <match src="&lt;: &lt; [7575,7576]" dest="&lt;: &lt; [8103,8104]"/>
  <match src="identifier: unfreeze [101484,101492]" dest="identifier: unfreeze [40870,40878]"/>
  <match src="identifier: self [8186,8190]" dest="identifier: self [8714,8718]"/>
  <match src=".: . [91659,91660]" dest=".: . [31045,31046]"/>
  <match src="member_expression [75653,75664]" dest="member_expression [61380,61391]"/>
  <match src="}: } [85210,85211]" dest="}: } [74538,74539]"/>
  <match src="call_expression [28991,29347]" dest="call_expression [46703,47059]"/>
  <match src="yul_function_call [33529,33551]" dest="yul_function_call [51241,51263]"/>
  <match src="): ) [53519,53520]" dest="): ) [21643,21644]"/>
  <match src="call_argument [20033,20039]" dest="call_argument [55541,55547]"/>
  <match src=".: . [46177,46178]" dest=".: . [16274,16275]"/>
  <match src="function_body [21045,21330]" dest="function_body [56195,56380]"/>
  <match src="primitive_type [52140,52147]" dest="primitive_type [20264,20271]"/>
  <match src="): ) [99778,99779]" dest="): ) [39164,39165]"/>
  <match src="function: function [45271,45279]" dest="function: function [15368,15376]"/>
  <match src="indexed: indexed [78803,78810]" dest="indexed: indexed [70321,70328]"/>
  <match src="identifier: payloadB [30744,30752]" dest="identifier: payloadB [48456,48464]"/>
  <match src="function_definition [3226,3564]" dest="function_definition [3754,4092]"/>
  <match src="public: public [93986,93992]" dest="public: public [33372,33378]"/>
  <match src="}: } [95323,95324]" dest="}: } [34709,34710]"/>
  <match src="contract_body [62657,66580]" dest="contract_body [65466,67995]"/>
  <match src="uint256: uint256 [46490,46497]" dest="uint256: uint256 [16587,16594]"/>
  <match src="call_argument [82560,82568]" dest="call_argument [72656,72669]"/>
  <match src="): ) [100239,100240]" dest="): ) [39625,39626]"/>
  <match src="identifier: period [43919,43925]" dest="identifier: period [14016,14022]"/>
  <match src="identifier: incrementRejectFor [103948,103966]" dest="identifier: incrementRejectFor [43334,43352]"/>
  <match src="for: for [90515,90518]" dest="for: for [29901,29904]"/>
  <match src="return_type_definition [92142,92159]" dest="return_type_definition [31528,31545]"/>
  <match src="visibility [41384,41391]" dest="visibility [11481,11488]"/>
  <match src="state_mutability [30115,30119]" dest="state_mutability [47827,47831]"/>
  <match src="function_body [8884,8931]" dest="function_body [9412,9459]"/>
  <match src="if: if [27879,27881]" dest="if: if [45591,45593]"/>
  <match src="identifier: accounts [93117,93125]" dest="identifier: accounts [32503,32511]"/>
  <match src="): ) [43762,43763]" dest="): ) [13859,13860]"/>
  <match src="}: } [101841,101842]" dest="}: } [41227,41228]"/>
  <match src="): ) [51496,51497]" dest="): ) [60960,60961]"/>
  <match src="visibility [53779,53787]" dest="visibility [21903,21911]"/>
  <match src="call_expression [106295,106324]" dest="call_expression [69439,69468]"/>
  <match src="(: ( [30352,30353]" dest="(: ( [48064,48065]"/>
  <match src="emit: emit [89205,89209]" dest="emit: emit [76395,76399]"/>
  <match src="type_cast_expression [29598,29924]" dest="type_cast_expression [47310,47636]"/>
  <match src="member_expression [82153,82165]" dest="member_expression [80149,80161]"/>
  <match src="memory: memory [8817,8823]" dest="memory: memory [9345,9351]"/>
  <match src="member_expression [77107,77117]" dest="member_expression [82950,82960]"/>
  <match src="comment: // XXX Currently there is no better way to check if there is a contract in an address [84691,84776]" dest="comment: // XXX Currently there is no better way to check if there is a contract in an address [74019,74104]"/>
  <match src="number_literal: 4 [36349,36350]" dest="number_literal: 4 [54061,54062]"/>
  <match src=".: . [8743,8744]" dest=".: . [9271,9272]"/>
  <match src="return: return [6075,6081]" dest="return: return [6603,6609]"/>
  <match src="(: ( [83644,83645]" dest="(: ( [78818,78819]"/>
  <match src="assignment_expression [98985,99092]" dest="assignment_expression [38371,38478]"/>
  <match src="call_argument [80937,80938]" dest="call_argument [72992,72993]"/>
  <match src="member_expression [8593,8600]" dest="member_expression [9121,9128]"/>
  <match src="(: ( [100501,100502]" dest="(: ( [39887,39888]"/>
  <match src="identifier: sub [7853,7856]" dest="identifier: sub [8381,8384]"/>
  <match src="identifier: D256 [9937,9941]" dest="identifier: D256 [10465,10469]"/>
  <match src=".: . [96338,96339]" dest=".: . [35724,35725]"/>
  <match src="user_defined_type [105557,105564]" dest="user_defined_type [68701,68708]"/>
  <match src="{: { [106153,106154]" dest="{: { [69297,69298]"/>
  <match src="uint256: uint256 [68108,68115]" dest="uint256: uint256 [65571,65578]"/>
  <match src="type_name [92578,92585]" dest="type_name [31964,31971]"/>
  <match src="primitive_type [79106,79113]" dest="primitive_type [70494,70501]"/>
  <match src="call_argument [81226,81236]" dest="call_argument [78974,78984]"/>
  <match src="): ) [100453,100454]" dest="): ) [39839,39840]"/>
  <match src="uint256: uint256 [91157,91164]" dest="uint256: uint256 [30543,30550]"/>
  <match src="return_type_definition [91825,91842]" dest="return_type_definition [31211,31228]"/>
  <match src="primitive_type [99488,99495]" dest="primitive_type [38874,38881]"/>
  <match src="returns: returns [52354,52361]" dest="returns: returns [20478,20485]"/>
  <match src="identifier: bonded [102392,102398]" dest="identifier: bonded [41778,41784]"/>
  <match src="identifier: onlyFrozenOrFluid [105663,105680]" dest="identifier: onlyFrozenOrFluid [68807,68824]"/>
  <match src="type_name [99182,99189]" dest="type_name [38568,38575]"/>
  <match src="(: ( [8574,8575]" dest="(: ( [9102,9103]"/>
  <match src="): ) [92915,92916]" dest="): ) [32301,32302]"/>
  <match src=",: , [101954,101955]" dest=",: , [41340,41341]"/>
  <match src="call_expression [98532,98563]" dest="call_expression [37918,37949]"/>
  <match src="function: function [52661,52669]" dest="function: function [20785,20793]"/>
  <match src="parameter [52489,52493]" dest="parameter [20613,20617]"/>
  <match src="(: ( [95758,95759]" dest="(: ( [35144,35145]"/>
  <match src="identifier: from [52156,52160]" dest="identifier: from [20280,20284]"/>
  <match src="binary_expression [36308,36325]" dest="binary_expression [54020,54037]"/>
  <match src="struct: struct [5817,5823]" dest="struct: struct [6345,6351]"/>
  <match src="}: } [31378,31379]" dest="}: } [49090,49091]"/>
  <match src="member_expression [102530,102558]" dest="member_expression [41916,41944]"/>
  <match src="): ) [82824,82825]" dest="): ) [80821,80822]"/>
  <match src="call_argument [7476,7477]" dest="call_argument [8004,8005]"/>
  <match src="identifier: Require [81104,81111]" dest="identifier: Require [81127,81134]"/>
  <match src="returns: returns [44840,44847]" dest="returns: returns [14937,14944]"/>
  <match src="false: false [97924,97929]" dest="false: false [37310,37315]"/>
  <match src="identifier: success [89170,89177]" dest="identifier: success [76360,76367]"/>
  <match src="): ) [32814,32815]" dest="): ) [50526,50527]"/>
  <match src="function_body [96034,96094]" dest="function_body [35420,35480]"/>
  <match src="identifier: Bond [80908,80912]" dest="identifier: Unbond [72961,72967]"/>
  <match src="identifier: Permission [107312,107322]" dest="identifier: Permission [70201,70211]"/>
  <match src="(: ( [80912,80913]" dest="(: ( [72967,72968]"/>
  <match src="member_expression [91653,91673]" dest="member_expression [31039,31059]"/>
  <match src=",: , [29057,29058]" dest=",: , [46769,46770]"/>
  <match src="(: ( [103106,103107]" dest="(: ( [42492,42493]"/>
  <match src="primitive_type [28246,28253]" dest="primitive_type [45958,45965]"/>
  <match src="contract_declaration [86493,86746]" dest="contract_declaration [28284,28537]"/>
  <match src="primitive_type [78514,78521]" dest="primitive_type [70237,70244]"/>
  <match src="call_argument [32964,32969]" dest="call_argument [50676,50681]"/>
  <match src="return_type_definition [11669,11686]" dest="return_type_definition [22970,22987]"/>
  <match src="call_expression [83095,83277]" dest="call_expression [58682,58881]"/>
  <match src="user_defined_type [7697,7701]" dest="user_defined_type [8225,8229]"/>
  <match src="call_argument [8210,8216]" dest="call_argument [8738,8744]"/>
  <match src="[: [ [96478,96479]" dest="[: [ [35864,35865]"/>
  <match src="assignment_expression [36282,36326]" dest="assignment_expression [53994,54038]"/>
  <match src="(: ( [92425,92426]" dest="(: ( [31811,31812]"/>
  <match src="expression_statement [80011,80144]" dest="expression_statement [72209,72254]"/>
  <match src="state_mutability [45424,45428]" dest="state_mutability [15521,15525]"/>
  <match src="state_mutability [92137,92141]" dest="state_mutability [31523,31527]"/>
  <match src="[: [ [104812,104813]" dest="[: [ [44198,44199]"/>
  <match src="address: address [25654,25661]" dest="address: address [60727,60734]"/>
  <match src="identifier: State [87175,87180]" dest="identifier: State [28966,28971]"/>
  <match src="type_name [30645,30649]" dest="type_name [48357,48361]"/>
  <match src=",: , [20081,20082]" dest=",: , [64724,64725]"/>
  <match src="member_expression [98804,98829]" dest="member_expression [38190,38215]"/>
  <match src="visibility [93548,93554]" dest="visibility [32934,32940]"/>
  <match src="identifier: v [53098,53099]" dest="identifier: v [21222,21223]"/>
  <match src="function_body [102720,103041]" dest="function_body [42106,42427]"/>
  <match src="type_name [7558,7565]" dest="type_name [8086,8093]"/>
  <match src="call_argument [32579,32598]" dest="call_argument [50291,50310]"/>
  <match src="identifier: D256 [8070,8074]" dest="identifier: D256 [8598,8602]"/>
  <match src="}: } [96825,96826]" dest="}: } [36211,36212]"/>
  <match src="): ) [53607,53608]" dest="): ) [21731,21732]"/>
  <match src="{: { [49581,49582]" dest="{: { [25964,25965]"/>
  <match src="address: address [87156,87163]" dest="address: address [28947,28954]"/>
  <match src=",: , [29248,29249]" dest=",: , [46960,46961]"/>
  <match src="=: = [35701,35702]" dest="=: = [53413,53414]"/>
  <match src="&quot;: &quot; [63606,63607]" dest="&quot;: &quot; [81480,81481]"/>
  <match src=":: : [44726,44727]" dest=":: : [14823,14824]"/>
  <match src="primitive_type [52603,52610]" dest="primitive_type [20727,20734]"/>
  <match src="function_body [44160,44204]" dest="function_body [14257,14301]"/>
  <match src="contract: contract [62630,62638]" dest="contract: contract [65432,65440]"/>
  <match src="bytes32: bytes32 [31986,31993]" dest="bytes32: bytes32 [49698,49705]"/>
  <match src="call_struct_argument [44905,44941]" dest="call_struct_argument [15002,15038]"/>
  <match src="(: ( [95718,95719]" dest="(: ( [35104,35105]"/>
  <match src="internal: internal [73112,73120]" dest="internal: internal [55933,55941]"/>
  <match src="primitive_type [43226,43233]" dest="primitive_type [13323,13330]"/>
  <match src="bool: bool [89022,89026]" dest="bool: bool [76212,76216]"/>
  <match src="): ) [9500,9501]" dest="): ) [10028,10029]"/>
  <match src="identifier: _ [106335,106336]" dest="identifier: _ [69479,69480]"/>
  <match src="uint256: uint256 [3250,3257]" dest="uint256: uint256 [3778,3785]"/>
  <match src="identifier: EpochStrategy [43797,43810]" dest="identifier: EpochStrategy [13894,13907]"/>
  <match src="call_argument [28623,28631]" dest="call_argument [46335,46343]"/>
  <match src="}: } [79886,79887]" dest="}: } [71411,71412]"/>
  <match src="return_type_definition [94646,94663]" dest="return_type_definition [34032,34049]"/>
  <match src="): ) [31834,31835]" dest="): ) [49546,49547]"/>
  <match src="member_expression [80190,80200]" dest="member_expression [81545,81555]"/>
  <match src="interface: interface [52014,52023]" dest="interface: interface [20138,20147]"/>
  <match src="struct_declaration [86771,86864]" dest="struct_declaration [28562,28655]"/>
  <match src="identifier: vote [103444,103448]" dest="identifier: vote [42830,42834]"/>
  <match src="constant: constant [42643,42651]" dest="constant: constant [12740,12748]"/>
  <match src="identifier: div [7301,7304]" dest="identifier: div [7829,7832]"/>
  <match src="visibility [53902,53910]" dest="visibility [22026,22034]"/>
  <match src="uint256: uint256 [1691,1698]" dest="uint256: uint256 [2219,2226]"/>
  <match src="call_expression [92306,92317]" dest="call_expression [31692,31703]"/>
  <match src="function: function [44615,44623]" dest="function: function [14712,14720]"/>
  <match src="type_name [28805,28812]" dest="type_name [46517,46524]"/>
  <match src="member_expression [91068,91100]" dest="member_expression [30454,30486]"/>
  <match src="identifier: coupons [101410,101417]" dest="identifier: coupons [40796,40803]"/>
  <match src="primitive_type [13936,13943]" dest="primitive_type [25237,25244]"/>
  <match src=",: , [32048,32049]" dest=",: , [49760,49761]"/>
  <match src="address: address [52162,52169]" dest="address: address [20286,20293]"/>
  <match src="number_literal: 0 [7447,7448]" dest="number_literal: 0 [7975,7976]"/>
  <match src="==: == [8920,8922]" dest="==: == [9448,9450]"/>
  <match src="identifier: initialized [96627,96638]" dest="identifier: initialized [36013,36024]"/>
  <match src="(: ( [21176,21177]" dest="(: ( [56260,56261]"/>
  <match src="{: { [104785,104786]" dest="{: { [44171,44172]"/>
  <match src="call_expression [80011,80143]" dest="call_expression [72209,72253]"/>
  <match src="using_directive [5661,5688]" dest="using_directive [6189,6216]"/>
  <match src="return_statement [43778,43963]" dest="return_statement [13875,14060]"/>
  <match src="variable_declaration [76825,76843]" dest="variable_declaration [66393,66414]"/>
  <match src="visibility [1702,1710]" dest="visibility [2230,2238]"/>
  <match src="state_variable_declaration [41446,41499]" dest="state_variable_declaration [11543,11596]"/>
  <match src="(: ( [102347,102348]" dest="(: ( [41733,41734]"/>
  <match src="expression_statement [103805,103927]" dest="expression_statement [43191,43313]"/>
  <match src="variable_declaration [92578,92597]" dest="variable_declaration [31964,31983]"/>
  <match src="primitive_type [99896,99903]" dest="primitive_type [39282,39289]"/>
  <match src="parameter [91936,91943]" dest="parameter [31322,31329]"/>
  <match src="call_argument [35927,35937]" dest="call_argument [53639,53649]"/>
  <match src="identifier: approve [97842,97849]" dest="identifier: approve [37228,37235]"/>
  <match src="}: } [2006,2007]" dest="}: } [2534,2535]"/>
  <match src="visibility [43475,43483]" dest="visibility [13572,13580]"/>
  <match src="identifier: Unbond [81843,81849]" dest="identifier: Unbond [72425,72431]"/>
  <match src="): ) [28338,28339]" dest="): ) [46050,46051]"/>
  <match src="(: ( [49756,49757]" dest="(: ( [26139,26140]"/>
  <match src="using: using [78495,78500]" dest="using: using [70218,70223]"/>
  <match src="(: ( [96342,96343]" dest="(: ( [35728,35729]"/>
  <match src="function_body [44564,44609]" dest="function_body [14661,14706]"/>
  <match src="type_name [73357,73364]" dest="type_name [83295,83302]"/>
  <match src="bool: bool [86721,86725]" dest="bool: bool [28512,28516]"/>
  <match src="parameter [99182,99196]" dest="parameter [38568,38582]"/>
  <match src="primitive_type [53005,53009]" dest="primitive_type [21129,21133]"/>
  <match src="(: ( [79509,79510]" dest="(: ( [56792,56793]"/>
  <match src="): ) [107444,107445]" dest="): ) [55450,55451]"/>
  <match src="identifier: newImplementation [89219,89236]" dest="identifier: newImplementation [76409,76426]"/>
  <match src="identifier: GOVERNANCE_EXPIRATION [44581,44602]" dest="identifier: GOVERNANCE_EXPIRATION [14678,14699]"/>
  <match src="identifier: value [81878,81883]" dest="identifier: value [72460,72465]"/>
  <match src="call_expression [29114,29140]" dest="call_expression [46826,46852]"/>
  <match src="type_name [95355,95362]" dest="type_name [34741,34748]"/>
  <match src="): ) [70395,70396]" dest="): ) [58740,58741]"/>
  <match src="identifier: balanceOf [90994,91003]" dest="identifier: balanceOf [30380,30389]"/>
  <match src="identifier: dollar [86805,86811]" dest="identifier: dollar [28596,28602]"/>
  <match src="primitive_type [31967,31971]" dest="primitive_type [49679,49683]"/>
  <match src="): ) [82141,82142]" dest="): ) [80032,80033]"/>
  <match src=",: , [53253,53254]" dest=",: , [21377,21378]"/>
  <match src="identifier: reserveA [77359,77367]" dest="identifier: totalSupply [17560,17571]"/>
  <match src="primitive_type [49708,49715]" dest="primitive_type [26091,26098]"/>
  <match src=",: , [31124,31125]" dest=",: , [48836,48837]"/>
  <match src="primitive_type [53838,53844]" dest="primitive_type [21962,21968]"/>
  <match src="call_argument [102640,102645]" dest="call_argument [42026,42031]"/>
  <match src="parameter [7679,7695]" dest="parameter [8207,8223]"/>
  <match src="identifier: debt [98525,98529]" dest="identifier: debt [37911,37915]"/>
  <match src="identifier: accounts [101785,101793]" dest="identifier: accounts [41171,41179]"/>
  <match src="identifier: votes [103427,103432]" dest="identifier: votes [42813,42818]"/>
  <match src="identifier: Epoch [86196,86201]" dest="identifier: Epoch [27987,27992]"/>
  <match src="visibility [46089,46097]" dest="visibility [16186,16194]"/>
  <match src="type_name [9937,9941]" dest="type_name [10465,10469]"/>
  <match src="function: function [61799,61807]" dest="function: function [26854,26862]"/>
  <match src=".: . [101154,101155]" dest=".: . [40540,40541]"/>
  <match src="): ) [7194,7195]" dest="): ) [7722,7723]"/>
  <match src="[: [ [99633,99634]" dest="[: [ [39019,39020]"/>
  <match src="revert_statement [28939,29380]" dest="revert_statement [46651,47092]"/>
  <match src=",: , [31417,31418]" dest=",: , [49129,49130]"/>
  <match src="using_directive [97550,97577]" dest="using_directive [36936,36963]"/>
  <match src="type_name [47767,47774]" dest="type_name [60389,60396]"/>
  <match src="function_definition [29961,30616]" dest="function_definition [47673,48328]"/>
  <match src="call_argument [99825,99831]" dest="call_argument [39211,39217]"/>
  <match src="function_definition [101475,101643]" dest="function_definition [40861,41029]"/>
  <match src="primitive_type [54068,54075]" dest="primitive_type [22192,22199]"/>
  <match src="return_statement [9228,9258]" dest="return_statement [9756,9786]"/>
  <match src="visibility [42071,42078]" dest="visibility [12168,12175]"/>
  <match src="identifier: couponAllowances [102110,102126]" dest="identifier: couponAllowances [41496,41512]"/>
  <match src="address: address [51478,51485]" dest="address: address [61028,61035]"/>
  <match src="&lt;=: &lt;= [1355,1357]" dest="&lt;=: &lt;= [1883,1885]"/>
  <match src="private: private [78744,78751]" dest="private: private [70259,70266]"/>
  <match src="identifier: Status [93187,93193]" dest="identifier: Status [32573,32579]"/>
  <match src="state_mutability [61922,61926]" dest="state_mutability [26977,26981]"/>
  <match src="): ) [29511,29512]" dest="): ) [47223,47224]"/>
  <match src="type_name [33929,33936]" dest="type_name [51641,51648]"/>
  <match src="identifier: account [93050,93057]" dest="identifier: account [32436,32443]"/>
  <match src="identifier: dollar [76722,76728]" dest="identifier: dollar [58340,58346]"/>
  <match src="string [33866,33869]" dest="string [51578,51581]"/>
  <match src="visibility [80991,80999]" dest="visibility [72015,72023]"/>
  <match src="=: = [100639,100640]" dest="=: = [40025,40026]"/>
  <match src="{: { [46183,46184]" dest="{: { [16280,16281]"/>
  <match src="revert_statement [29574,29939]" dest="revert_statement [47286,47651]"/>
  <match src="member_expression [94681,94694]" dest="member_expression [34067,34080]"/>
  <match src="parameter [7167,7183]" dest="parameter [7695,7711]"/>
  <match src="bytes32: bytes32 [62700,62707]" dest="bytes32: bytes32 [60310,60317]"/>
  <match src="variable_declaration [35691,35700]" dest="variable_declaration [53403,53412]"/>
  <match src="member_expression [6205,6210]" dest="member_expression [6733,6738]"/>
  <match src="(: ( [75658,75659]" dest="(: ( [61385,61386]"/>
  <match src="(: ( [3404,3405]" dest="(: ( [3932,3933]"/>
  <match src="comment: // Mainnet [41336,41346]" dest="comment: // Mainnet [11433,11443]"/>
  <match src=",: , [8810,8811]" dest=",: , [9338,9339]"/>
  <match src="/: / [3449,3450]" dest="/: / [3977,3978]"/>
  <match src="state_mutability [96277,96281]" dest="state_mutability [35663,35667]"/>
  <match src="memory: memory [100221,100227]" dest="memory: memory [39607,39613]"/>
  <match src="=: = [102399,102400]" dest="=: = [41785,41786]"/>
  <match src="returns: returns [43489,43496]" dest="returns: returns [13586,13593]"/>
  <match src="for: for [36097,36100]" dest="for: for [53809,53812]"/>
  <match src="call_argument [100363,100369]" dest="call_argument [39749,39755]"/>
  <match src="type_name [52060,52067]" dest="type_name [20184,20191]"/>
  <match src=".: . [99342,99343]" dest=".: . [38728,38729]"/>
  <match src="=: = [43148,43149]" dest="=: = [13245,13246]"/>
  <match src="constant: constant [27585,27593]" dest="constant: constant [45297,45305]"/>
  <match src="parameter [9035,9039]" dest="parameter [9563,9567]"/>
  <match src="view: view [90840,90844]" dest="view: view [30226,30230]"/>
  <match src="returns: returns [91721,91728]" dest="returns: returns [31107,31114]"/>
  <match src=",: , [100526,100527]" dest=",: , [39912,39913]"/>
  <match src="primitive_type [3312,3319]" dest="primitive_type [3840,3847]"/>
  <match src="identifier: _state [104059,104065]" dest="identifier: _state [43445,43451]"/>
  <match src="(: ( [54132,54133]" dest="(: ( [22256,22257]"/>
  <match src="type_name [92804,92811]" dest="type_name [32190,32197]"/>
  <match src="user_defined_type [97529,97534]" dest="user_defined_type [36915,36920]"/>
  <match src="member_expression [104571,104594]" dest="member_expression [43957,43980]"/>
  <match src="boolean_literal [97815,97820]" dest="boolean_literal [37201,37206]"/>
  <match src="): ) [28923,28924]" dest="): ) [46635,46636]"/>
  <match src="comment: // SPDX-License-Identifier: apache [0,34]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [61,624]"/>
  <match src="constant: constant [105587,105595]" dest="constant: constant [68731,68739]"/>
  <match src="identifier: decrementTotalDebt [98585,98603]" dest="identifier: decrementTotalDebt [37971,37989]"/>
  <match src=",: , [79545,79546]" dest=",: , [71083,71084]"/>
  <match src="parameter [88928,88953]" dest="parameter [76118,76143]"/>
  <match src="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [11236,11386]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [44239,44838]"/>
  <match src="identifier: i [33399,33400]" dest="identifier: i [51111,51112]"/>
  <match src="=: = [33397,33398]" dest="=: = [51109,51110]"/>
  <match src="}: } [44949,44950]" dest="}: } [15046,15047]"/>
  <match src="expression_statement [19722,19793]" dest="expression_statement [63903,64016]"/>
  <match src="}: } [96644,96645]" dest="}: } [36030,36031]"/>
  <match src="uint256: uint256 [22301,22308]" dest="uint256: uint256 [58913,58920]"/>
  <match src="event_definition [78840,78895]" dest="event_definition [70358,70413]"/>
  <match src="return_type_definition [52291,52314]" dest="return_type_definition [20415,20438]"/>
  <match src="uint256: uint256 [46285,46292]" dest="uint256: uint256 [16382,16389]"/>
  <match src="call_argument [96328,96337]" dest="call_argument [35714,35723]"/>
  <match src="state_mutability [3298,3302]" dest="state_mutability [3826,3830]"/>
  <match src=",: , [48671,48672]" dest=",: , [62604,62605]"/>
  <match src="return: return [8732,8738]" dest="return: return [9260,9266]"/>
  <match src="call_expression [6334,6356]" dest="call_expression [6862,6884]"/>
  <match src="member_expression [99618,99650]" dest="member_expression [39004,39036]"/>
  <match src="address: address [97598,97605]" dest="address: address [36984,36991]"/>
  <match src="): ) [52980,52981]" dest="): ) [21104,21105]"/>
  <match src="{: { [92645,92646]" dest="{: { [32031,32032]"/>
  <match src="{: { [105565,105566]" dest="{: { [68709,68710]"/>
  <match src="identifier: must [28769,28773]" dest="identifier: must [46481,46485]"/>
  <match src="return_type_definition [94788,94805]" dest="return_type_definition [34174,34191]"/>
  <match src="primitive_type [30049,30056]" dest="primitive_type [47761,47768]"/>
  <match src="{: { [98975,98976]" dest="{: { [38361,38362]"/>
  <match src="identifier: D256 [7335,7339]" dest="identifier: D256 [7863,7867]"/>
  <match src="assignment_expression [99714,99779]" dest="assignment_expression [39100,39165]"/>
  <match src="return_statement [71718,71727]" dest="return_statement [58619,58628]"/>
  <match src="returns: returns [90937,90944]" dest="returns: returns [30323,30330]"/>
  <match src="state_mutability [44268,44272]" dest="state_mutability [14365,14369]"/>
  <match src="type_name [9455,9459]" dest="type_name [9983,9987]"/>
  <match src="public: public [90722,90728]" dest="public: public [30108,30114]"/>
  <match src="type_name [8143,8147]" dest="type_name [8671,8675]"/>
  <match src="identifier: input [35711,35716]" dest="identifier: input [53423,53428]"/>
  <match src="function_body [7428,7660]" dest="function_body [7956,8188]"/>
  <match src="!=: != [106018,106020]" dest="!=: != [69162,69164]"/>
  <match src="new_expression [34885,34894]" dest="new_expression [52597,52606]"/>
  <match src="returns: returns [46276,46283]" dest="returns: returns [16373,16380]"/>
  <match src="returns: returns [8865,8872]" dest="returns: returns [9393,9400]"/>
  <match src="function_body [94016,94170]" dest="function_body [33402,33556]"/>
  <match src="parameter [38220,38235]" dest="parameter [63840,63853]"/>
  <match src="struct_declaration [86870,87039]" dest="struct_declaration [28661,28830]"/>
  <match src="call_argument [6749,6760]" dest="call_argument [7277,7288]"/>
  <match src="member_expression [99217,99249]" dest="member_expression [38603,38635]"/>
  <match src="type_name [32084,32091]" dest="type_name [49796,49803]"/>
  <match src="internal: internal [9584,9592]" dest="internal: internal [10112,10120]"/>
  <match src="(: ( [6950,6951]" dest="(: ( [7478,7479]"/>
  <match src=",: , [6962,6963]" dest=",: , [7490,7491]"/>
  <match src="uint256: uint256 [20399,20406]" dest="uint256: uint256 [59098,59105]"/>
  <match src="uint256: uint256 [36190,36197]" dest="uint256: uint256 [53902,53909]"/>
  <match src="identifier: that [105716,105720]" dest="identifier: that [68860,68864]"/>
  <match src="unary_expression [32147,32152]" dest="unary_expression [49859,49864]"/>
  <match src="(: ( [63510,63511]" dest="(: ( [81377,81378]"/>
  <match src="): ) [83203,83204]" dest="): ) [58814,58815]"/>
  <match src="augmented_assignment_expression [34573,34580]" dest="augmented_assignment_expression [52285,52292]"/>
  <match src="function_body [46499,46531]" dest="function_body [16596,16628]"/>
  <match src="): ) [79287,79288]" dest="): ) [78156,78157]"/>
  <match src="identifier: greaterThan [8782,8793]" dest="identifier: greaterThan [9310,9321]"/>
  <match src=".: . [95432,95433]" dest=".: . [34818,34819]"/>
  <match src="identifier: D256 [44715,44719]" dest="identifier: D256 [14812,14816]"/>
  <match src="identifier: mod [4017,4020]" dest="identifier: mod [4545,4548]"/>
  <match src="parameter [31449,31463]" dest="parameter [49161,49175]"/>
  <match src="=: = [98391,98392]" dest="=: = [37777,37778]"/>
  <match src=",: , [103749,103750]" dest=",: , [43135,43136]"/>
  <match src="identifier: reason [8107,8113]" dest="identifier: reason [8635,8641]"/>
  <match src="{: { [79369,79370]" dest="{: { [70931,70932]"/>
  <match src=",: , [97534,97535]" dest=",: , [36920,36921]"/>
  <match src="visibility [52982,52990]" dest="visibility [21106,21114]"/>
  <match src="constant: constant [41313,41321]" dest="constant: constant [11410,11418]"/>
  <match src="(: ( [43741,43742]" dest="(: ( [13838,13839]"/>
  <match src="type_name [54042,54046]" dest="type_name [22166,22170]"/>
  <match src="type_name [13911,13918]" dest="type_name [25212,25219]"/>
  <match src="primitive_type [21788,21795]" dest="primitive_type [63459,63466]"/>
  <match src="internal: internal [21036,21044]" dest="internal: internal [56186,56194]"/>
  <match src="parameter [366,375]" dest="parameter [894,903]"/>
  <match src="call_expression [81208,81237]" dest="call_expression [78964,78985]"/>
  <match src="{: { [27285,27286]" dest="{: { [44997,44998]"/>
  <match src="expression_statement [25164,25229]" dest="expression_statement [79402,79535]"/>
  <match src="function: function [7322,7330]" dest="function: function [7850,7858]"/>
  <match src="{: { [93445,93446]" dest="{: { [32831,32832]"/>
  <match src="string_literal [105603,105615]" dest="string_literal [68747,68759]"/>
  <match src="variable_declaration_statement [33081,33096]" dest="variable_declaration_statement [50793,50808]"/>
  <match src="): ) [93246,93247]" dest="): ) [32632,32633]"/>
  <match src="bytes32: bytes32 [52937,52944]" dest="bytes32: bytes32 [21061,21068]"/>
  <match src="(: ( [71208,71209]" dest="(: ( [67320,67321]"/>
  <match src="address: address [83139,83146]" dest="address: address [58991,58998]"/>
  <match src="(: ( [31114,31115]" dest="(: ( [48826,48827]"/>
  <match src="=: = [32945,32946]" dest="=: = [50657,50658]"/>
  <match src="(: ( [100978,100979]" dest="(: ( [40364,40365]"/>
  <match src="): ) [104131,104132]" dest="): ) [43517,43518]"/>
  <match src=",: , [97987,97988]" dest=",: , [37373,37374]"/>
  <match src="identifier: div [92732,92735]" dest="identifier: div [32118,32121]"/>
  <match src="memory: memory [6057,6063]" dest="memory: memory [6585,6591]"/>
  <match src="return_type_definition [96689,96711]" dest="return_type_definition [36075,36097]"/>
  <match src="identifier: provider [91562,91570]" dest="identifier: provider [30948,30956]"/>
  <match src="parameter [12293,12308]" dest="parameter [23594,23609]"/>
  <match src="assignment_expression [99583,99704]" dest="assignment_expression [38969,39090]"/>
  <match src=".: . [98399,98400]" dest=".: . [37785,37786]"/>
  <match src=",: , [86547,86548]" dest=",: , [28338,28339]"/>
  <match src=".: . [100804,100805]" dest=".: . [40190,40191]"/>
  <match src="function: function [45499,45507]" dest="function: function [15596,15604]"/>
  <match src="function_body [44690,44754]" dest="function_body [14787,14851]"/>
  <match src="): ) [98256,98257]" dest="): ) [37642,37643]"/>
  <match src="type_cast_expression [30183,30585]" dest="type_cast_expression [47895,48297]"/>
  <match src="(: ( [29051,29052]" dest="(: ( [46763,46764]"/>
  <match src="member_expression [100413,100427]" dest="member_expression [39799,39813]"/>
  <match src=".: . [79538,79539]" dest=".: . [71076,71077]"/>
  <match src="): ) [54046,54047]" dest="): ) [22170,22171]"/>
  <match src="primitive_type [103490,103497]" dest="primitive_type [42876,42883]"/>
  <match src="member_expression [100872,100894]" dest="member_expression [40258,40280]"/>
  <match src="member_expression [6556,6570]" dest="member_expression [7084,7098]"/>
  <match src="type_name [42126,42133]" dest="type_name [12223,12230]"/>
  <match src="type_name [53149,53156]" dest="type_name [21273,21280]"/>
  <match src="call_argument [48742,48746]" dest="call_argument [62509,62513]"/>
  <match src="{: { [8884,8885]" dest="{: { [9412,9413]"/>
  <match src="identifier: EpochStrategy [43742,43755]" dest="identifier: EpochStrategy [13839,13852]"/>
  <match src="type_name [52967,52974]" dest="type_name [21091,21098]"/>
  <match src="{: { [97907,97908]" dest="{: { [37293,37294]"/>
  <match src="parameter [79584,79597]" dest="parameter [71122,71135]"/>
  <match src="type_name [36612,36616]" dest="type_name [54324,54328]"/>
  <match src="assignment_expression [99328,99385]" dest="assignment_expression [38714,38771]"/>
  <match src="external: external [98045,98053]" dest="external: external [37431,37439]"/>
  <match src="parameter [98300,98314]" dest="parameter [37686,37700]"/>
  <match src="parameter [104430,104445]" dest="parameter [43816,43831]"/>
  <match src="return: return [44325,44331]" dest="return: return [14422,14428]"/>
  <match src="primitive_type [89036,89041]" dest="primitive_type [76226,76231]"/>
  <match src="primitive_type [41297,41304]" dest="primitive_type [11394,11401]"/>
  <match src="}: } [31372,31373]" dest="}: } [49084,49085]"/>
  <match src="call_argument [9420,9421]" dest="call_argument [9948,9949]"/>
  <match src="): ) [92317,92318]" dest="): ) [31703,31704]"/>
  <match src="function_definition [46445,46531]" dest="function_definition [16542,16628]"/>
  <match src="identifier: candidate [96127,96136]" dest="identifier: candidate [35513,35522]"/>
  <match src="call_argument [45830,45853]" dest="call_argument [15927,15950]"/>
  <match src="parameter [6824,6833]" dest="parameter [7352,7361]"/>
  <match src="): ) [52192,52193]" dest="): ) [20316,20317]"/>
  <match src="user_defined_type [7759,7763]" dest="user_defined_type [8287,8291]"/>
  <match src="primitive_type [78820,78827]" dest="primitive_type [70338,70345]"/>
  <match src="primitive_type [32796,32803]" dest="primitive_type [50508,50515]"/>
  <match src=",: , [77117,77118]" dest=",: , [82960,82961]"/>
  <match src="identifier: epoch [75653,75658]" dest="identifier: epoch [61380,61385]"/>
  <match src="identifier: Candidate [87267,87276]" dest="identifier: Candidate [29058,29067]"/>
  <match src=",: , [28795,28796]" dest=",: , [46507,46508]"/>
  <match src="number_literal: 11e17 [41493,41498]" dest="number_literal: 11e17 [11590,11595]"/>
  <match src=",: , [66547,66548]" dest=",: , [72375,72376]"/>
  <match src=".: . [93944,93945]" dest=".: . [33330,33331]"/>
  <match src="contract_body [86512,86746]" dest="contract_body [28303,28537]"/>
  <match src="function_body [102520,102653]" dest="function_body [41906,42039]"/>
  <match src="identifier: D256 [8245,8249]" dest="identifier: D256 [8773,8777]"/>
  <match src="enum_value: UNDECIDED [86529,86538]" dest="enum_value: UNDECIDED [28320,28329]"/>
  <match src="identifier: period [103244,103250]" dest="identifier: period [42630,42636]"/>
  <match src=",: , [52778,52779]" dest=",: , [20902,20903]"/>
  <match src="returns: returns [94528,94535]" dest="returns: returns [33914,33921]"/>
  <match src="visibility [25746,25753]" dest="visibility [58929,58936]"/>
  <match src="return_type_definition [16159,16176]" dest="return_type_definition [56433,56450]"/>
  <match src="identifier: add [83187,83190]" dest="identifier: add [58794,58797]"/>
  <match src="type_name [84613,84620]" dest="type_name [73941,73948]"/>
  <match src="identifier: D256 [7167,7171]" dest="identifier: D256 [7695,7699]"/>
  <match src="type_name [2594,2601]" dest="type_name [3122,3129]"/>
  <match src="block_statement [36130,36499]" dest="block_statement [53842,54211]"/>
  <match src="identifier: startFor [104571,104579]" dest="identifier: startFor [43957,43965]"/>
  <match src="(: ( [91729,91730]" dest="(: ( [31115,31116]"/>
  <match src="identifier: lessPhantom [81731,81742]" dest="identifier: candidate [79792,79801]"/>
  <match src="identifier: totalSupply [92586,92597]" dest="identifier: totalSupply [31972,31983]"/>
  <match src="{: { [10060,10061]" dest="{: { [10588,10589]"/>
  <match src="}: } [29948,29949]" dest="}: } [47660,47661]"/>
  <match src="contract_declaration [86187,86491]" dest="contract_declaration [27978,28282]"/>
  <match src="(: ( [84652,84653]" dest="(: ( [73980,73981]"/>
  <match src="(: ( [89126,89127]" dest="(: ( [76316,76317]"/>
  <match src="member_expression [99252,99267]" dest="member_expression [38638,38653]"/>
  <match src="function_definition [98882,99099]" dest="function_definition [38268,38485]"/>
  <match src="type_name [103107,103114]" dest="type_name [42493,42500]"/>
  <match src="struct: struct [86420,86426]" dest="struct: struct [28211,28217]"/>
  <match src="call_expression [81469,81522]" dest="call_expression [71692,71731]"/>
  <match src=".: . [44856,44857]" dest=".: . [14953,14954]"/>
  <match src="member_expression [103544,103561]" dest="member_expression [42930,42947]"/>
  <match src="}: } [90978,90979]" dest="}: } [30364,30365]"/>
  <match src="=: = [27644,27645]" dest="=: = [45356,45357]"/>
  <match src="type_name [52768,52775]" dest="type_name [20892,20899]"/>
  <match src="(: ( [83349,83350]" dest="(: ( [80224,80225]"/>
  <match src="memory: memory [35669,35675]" dest="memory: memory [53381,53387]"/>
  <match src="return_statement [44884,44944]" dest="return_statement [14981,15041]"/>
  <match src="function: function [1240,1248]" dest="function: function [1768,1776]"/>
  <match src="expression_statement [100052,100110]" dest="expression_statement [39438,39496]"/>
  <match src="pure: pure [8690,8694]" dest="pure: pure [9218,9222]"/>
  <match src="address: address [96251,96258]" dest="address: address [35637,35644]"/>
  <match src="public: public [96677,96683]" dest="public: public [36063,36069]"/>
  <match src="identifier: price1Cumulative [65335,65351]" dest="identifier: newBonded [66825,66834]"/>
  <match src="(: ( [79861,79862]" dest="(: ( [71386,71387]"/>
  <match src="identifier: reason [102161,102167]" dest="identifier: reason [41547,41553]"/>
  <match src="public: public [96270,96276]" dest="public: public [35656,35662]"/>
  <match src="identifier: DEBT_RATIO_CAP [45838,45852]" dest="identifier: DEBT_RATIO_CAP [15935,15949]"/>
  <match src=".: . [6946,6947]" dest=".: . [7474,7475]"/>
  <match src="unary_expression [31536,31541]" dest="unary_expression [49248,49253]"/>
  <match src="type_cast_expression [89179,89193]" dest="type_cast_expression [76369,76383]"/>
  <match src="call_argument [36812,36839]" dest="call_argument [54524,54551]"/>
  <match src="member_expression [94377,94392]" dest="member_expression [33763,33778]"/>
  <match src="assignment_expression [36340,36350]" dest="assignment_expression [54052,54062]"/>
  <match src="function_body [99207,99445]" dest="function_body [38593,38831]"/>
  <match src=".: . [94365,94366]" dest=".: . [33751,33752]"/>
  <match src="identifier: transfer [79974,79982]" dest="identifier: transfer [71196,71204]"/>
  <match src="event_definition [78781,78835]" dest="event_definition [70299,70353]"/>
  <match src="function: function [52822,52830]" dest="function: function [20946,20954]"/>
  <match src="identifier: reason [30353,30359]" dest="identifier: reason [48065,48071]"/>
  <match src="visibility [8673,8681]" dest="visibility [9201,9209]"/>
  <match src="array_access [95152,95172]" dest="array_access [34538,34558]"/>
  <match src="&gt;&gt;: &gt;&gt; [35530,35532]" dest="&gt;&gt;: &gt;&gt; [53242,53244]"/>
  <match src="identifier: amount [101746,101752]" dest="identifier: amount [41132,41138]"/>
  <match src="identifier: value [44346,44351]" dest="identifier: value [14443,14448]"/>
  <match src="identifier: getDebtRatioCap [45738,45753]" dest="identifier: getDebtRatioCap [15835,15850]"/>
  <match src="pure: pure [9827,9831]" dest="pure: pure [10355,10359]"/>
  <match src="user_defined_type [8455,8459]" dest="user_defined_type [8983,8987]"/>
  <match src="&quot;: &quot; [4127,4128]" dest="&quot;: &quot; [4655,4656]"/>
  <match src="memory: memory [6616,6622]" dest="memory: memory [7144,7150]"/>
  <match src="primitive_type [42786,42793]" dest="primitive_type [12883,12890]"/>
  <match src="identifier: ORACLE_POOL_RATIO [46311,46328]" dest="identifier: ORACLE_POOL_RATIO [16408,16425]"/>
  <match src="function: function [91590,91598]" dest="function: function [30976,30984]"/>
  <match src="): ) [77185,77186]" dest="): ) [59445,59446]"/>
  <match src="identifier: sub [99760,99763]" dest="identifier: sub [39146,39149]"/>
  <match src="return_statement [8352,8412]" dest="return_statement [8880,8940]"/>
  <match src="internal: internal [9473,9481]" dest="internal: internal [10001,10009]"/>
  <match src="return_statement [90768,90803]" dest="return_statement [30154,30189]"/>
  <match src="function_definition [6776,6980]" dest="function_definition [7304,7508]"/>
  <match src="(: ( [106175,106176]" dest="(: ( [69319,69320]"/>
  <match src="call_expression [107457,107465]" dest="call_expression [67767,67775]"/>
  <match src=".: . [64849,64850]" dest=".: . [65883,65884]"/>
  <match src="primitive_type [16707,16714]" dest="primitive_type [58263,58270]"/>
  <match src="(: ( [66408,66409]" dest="(: ( [62238,62239]"/>
  <match src="state_mutability [43720,43724]" dest="state_mutability [13817,13821]"/>
  <match src="primitive_type [28205,28209]" dest="primitive_type [45917,45921]"/>
  <match src="call_argument [51052,51064]" dest="call_argument [64444,64454]"/>
  <match src="type_name [87219,87230]" dest="type_name [29010,29021]"/>
  <match src="identifier: epochs [100778,100784]" dest="identifier: epochs [40164,40170]"/>
  <match src="member_expression [45083,45095]" dest="member_expression [15180,15192]"/>
  <match src="array_access [35904,35913]" dest="array_access [53616,53625]"/>
  <match src="parameter [79312,79325]" dest="parameter [70876,70889]"/>
  <match src=".: . [80193,80194]" dest=".: . [81548,81549]"/>
  <match src="identifier: self [6556,6560]" dest="identifier: self [7084,7088]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [44353,44372]" dest="identifier: BOOTSTRAPPING_PRICE [14450,14469]"/>
  <match src="): ) [90756,90757]" dest="): ) [30142,30143]"/>
  <match src="function_definition [92212,92325]" dest="function_definition [31598,31711]"/>
  <match src="identifier: msg [81707,81710]" dest="identifier: msg [79780,79783]"/>
  <match src="indexed: indexed [53322,53329]" dest="indexed: indexed [21446,21453]"/>
  <match src="return_statement [45810,45855]" dest="return_statement [15907,15952]"/>
  <match src="type_name [15766,15773]" dest="type_name [60420,60427]"/>
  <match src="(: ( [44240,44241]" dest="(: ( [14337,14338]"/>
  <match src=",: , [8453,8454]" dest=",: , [8981,8982]"/>
  <match src="uint256: uint256 [86157,86164]" dest="uint256: uint256 [27948,27955]"/>
  <match src="member_expression [10119,10126]" dest="member_expression [10647,10654]"/>
  <match src="function_definition [9547,9660]" dest="function_definition [10075,10188]"/>
  <match src="visibility [9338,9346]" dest="visibility [9866,9874]"/>
  <match src="(: ( [96327,96328]" dest="(: ( [35713,35714]"/>
  <match src="primitive_type [65552,65559]" dest="primitive_type [72095,72102]"/>
  <match src="type_name [62986,62993]" dest="type_name [82766,82773]"/>
  <match src="internal: internal [104776,104784]" dest="internal: internal [44162,44170]"/>
  <match src="[: [ [35001,35002]" dest="[: [ [52713,52714]"/>
  <match src="parameter [6798,6814]" dest="parameter [7326,7342]"/>
  <match src="{: { [4075,4076]" dest="{: { [4603,4604]"/>
  <match src="returns: returns [93738,93745]" dest="returns: returns [33124,33131]"/>
  <match src="parameter [28764,28773]" dest="parameter [46476,46485]"/>
  <match src="): ) [52814,52815]" dest="): ) [20938,20939]"/>
  <match src="revert_statement [30159,30600]" dest="revert_statement [47871,48312]"/>
  <match src="return_statement [46411,46433]" dest="return_statement [16508,16530]"/>
  <match src="=&gt;: =&gt; [86091,86093]" dest="=&gt;: =&gt; [27882,27884]"/>
  <match src="call_argument [79943,79953]" dest="call_argument [72571,72581]"/>
  <match src="primitive_type [32032,32039]" dest="primitive_type [49744,49751]"/>
  <match src="primitive_type [48079,48086]" dest="primitive_type [72000,72007]"/>
  <match src="function_definition [1667,2126]" dest="function_definition [2195,2654]"/>
  <match src="struct: struct [41903,41909]" dest="struct: struct [12000,12006]"/>
  <match src="(: ( [52602,52603]" dest="(: ( [20726,20727]"/>
  <match src=",: , [29293,29294]" dest=",: , [47005,47006]"/>
  <match src="type_name [89637,89644]" dest="type_name [76827,76834]"/>
  <match src=",: , [32317,32318]" dest=",: , [50029,50030]"/>
  <match src="): ) [35033,35034]" dest="): ) [52745,52746]"/>
  <match src="variable_declaration [81301,81320]" dest="variable_declaration [61786,61806]"/>
  <match src="call_argument [6354,6355]" dest="call_argument [6882,6883]"/>
  <match src="): ) [91266,91267]" dest="): ) [30652,30653]"/>
  <match src="string_literal [19835,19872]" dest="string_literal [64083,64128]"/>
  <match src="): ) [52252,52253]" dest="): ) [20376,20377]"/>
  <match src="string: string [90854,90860]" dest="string: string [30240,30246]"/>
  <match src="&quot;: &quot; [21185,21186]" dest="&quot;: &quot; [56294,56295]"/>
  <match src="&gt;: &gt; [9254,9255]" dest="&gt;: &gt; [9782,9783]"/>
  <match src="identifier: lockedUntil [93135,93146]" dest="identifier: lockedUntil [32521,32532]"/>
  <match src=".: . [92074,92075]" dest=".: . [31460,31461]"/>
  <match src="parameter [92804,92817]" dest="parameter [32190,32203]"/>
  <match src="identifier: debt [98698,98702]" dest="identifier: debt [38084,38088]"/>
  <match src="user_defined_type [78466,78477]" dest="user_defined_type [70192,70199]"/>
  <match src="): ) [19974,19975]" dest="): ) [56768,56769]"/>
  <match src="identifier: coupons [103011,103018]" dest="identifier: coupons [42397,42404]"/>
  <match src="identifier: amount [16467,16473]" dest="identifier: amount [56684,56690]"/>
  <match src="string_literal [56276,56313]" dest="string_literal [72780,72816]"/>
  <match src="address: address [13414,13421]" dest="address: address [24715,24722]"/>
  <match src="=: = [103442,103443]" dest="=: = [42828,42829]"/>
  <match src="array_access [103161,103189]" dest="array_access [42547,42575]"/>
  <match src="{: { [47810,47811]" dest="{: { [55663,55664]"/>
  <match src="{: { [98794,98795]" dest="{: { [38180,38181]"/>
  <match src="returns: returns [90734,90741]" dest="returns: returns [30120,30127]"/>
  <match src="primitive_type [68457,68464]" dest="primitive_type [65625,65632]"/>
  <match src="type_name [89036,89041]" dest="type_name [76226,76231]"/>
  <match src="block_statement [102839,102870]" dest="block_statement [42225,42256]"/>
  <match src="]: ] [95191,95192]" dest="]: ] [34577,34578]"/>
  <match src="update_expression [34412,34415]" dest="update_expression [52124,52127]"/>
  <match src=",: , [82025,82026]" dest=",: , [80933,80934]"/>
  <match src="primitive_type [32058,32065]" dest="primitive_type [49770,49777]"/>
  <match src="public: public [91709,91715]" dest="public: public [31095,31101]"/>
  <match src="memory: memory [7080,7086]" dest="memory: memory [7608,7614]"/>
  <match src="}: } [95825,95826]" dest="}: } [35211,35212]"/>
  <match src="if_statement [27879,28170]" dest="if_statement [45591,45882]"/>
  <match src="(: ( [103698,103699]" dest="(: ( [43084,43085]"/>
  <match src=".: . [91197,91198]" dest=".: . [30583,30584]"/>
  <match src="primitive_type [41934,41941]" dest="primitive_type [12031,12038]"/>
  <match src="identifier: account [100519,100526]" dest="identifier: account [39905,39912]"/>
  <match src="type_name [86361,86368]" dest="type_name [28152,28159]"/>
  <match src="uint256: uint256 [87017,87024]" dest="uint256: uint256 [28808,28815]"/>
  <match src="returns: returns [6153,6160]" dest="returns: returns [6681,6688]"/>
  <match src="identifier: Withdraw [78846,78854]" dest="identifier: Withdraw [70364,70372]"/>
  <match src="(: ( [35017,35018]" dest="(: ( [52729,52730]"/>
  <match src="): ) [83204,83205]" dest="): ) [58815,58816]"/>
  <match src="uint256: uint256 [6257,6264]" dest="uint256: uint256 [6785,6792]"/>
  <match src="): ) [29923,29924]" dest="): ) [47635,47636]"/>
  <match src="variable_declaration [36190,36203]" dest="variable_declaration [53902,53915]"/>
  <match src="identifier: temp [7610,7614]" dest="identifier: temp [8138,8142]"/>
  <match src="block_statement [33995,34049]" dest="block_statement [51707,51761]"/>
  <match src="parameter [73357,73372]" dest="parameter [83295,83310]"/>
  <match src="): ) [33705,33706]" dest="): ) [51417,51418]"/>
  <match src="identifier: approve [86640,86647]" dest="identifier: approve [28431,28438]"/>
  <match src="return_statement [36698,36737]" dest="return_statement [54410,54449]"/>
  <match src="primitive_type [8874,8878]" dest="primitive_type [9402,9406]"/>
  <match src="function_body [92051,92100]" dest="function_body [31437,31486]"/>
  <match src="variable_declaration [82370,82402]" dest="variable_declaration [61733,61756]"/>
  <match src="parameter [50689,50704]" dest="parameter [55391,55406]"/>
  <match src="identifier: permit [53026,53032]" dest="identifier: permit [21150,21156]"/>
  <match src="call_argument [89555,89616]" dest="call_argument [76745,76806]"/>
  <match src="identifier: b [7821,7822]" dest="identifier: b [8349,8350]"/>
  <match src="boolean_literal [104838,104842]" dest="boolean_literal [44224,44228]"/>
  <match src="array_access [104795,104823]" dest="array_access [44181,44209]"/>
  <match src="function_definition [93965,94170]" dest="function_definition [33351,33556]"/>
  <match src="identifier: balance [98231,98238]" dest="identifier: balance [37617,37624]"/>
  <match src="string [89127,89141]" dest="string [76317,76331]"/>
  <match src=",: , [9783,9784]" dest=",: , [10311,10312]"/>
  <match src="visibility [46467,46475]" dest="visibility [16564,16572]"/>
  <match src=".: . [79661,79662]" dest=".: . [83083,83084]"/>
  <match src="primitive_type [16168,16175]" dest="primitive_type [56442,56449]"/>
  <match src="function_body [79369,79560]" dest="function_body [70931,71098]"/>
  <match src="type_name [1725,1732]" dest="type_name [2253,2260]"/>
  <match src="inheritance_specifier [15691,15698]" dest="inheritance_specifier [60252,60263]"/>
  <match src="call_expression [101286,101385]" dest="call_expression [40672,40771]"/>
  <match src="type_name [103353,103367]" dest="type_name [42739,42753]"/>
  <match src="[: [ [35472,35473]" dest="[: [ [53184,53185]"/>
  <match src="(: ( [90922,90923]" dest="(: ( [30308,30309]"/>
  <match src="state_mutability [45543,45547]" dest="state_mutability [15640,15644]"/>
  <match src="array_access [104279,104307]" dest="array_access [43665,43693]"/>
  <match src="memory: memory [44682,44688]" dest="memory: memory [14779,14785]"/>
  <match src="identifier: temp [7649,7653]" dest="identifier: temp [8177,8181]"/>
  <match src="parameter [84653,84657]" dest="parameter [73981,73985]"/>
  <match src="identifier: sender [81445,81451]" dest="identifier: sender [72728,72734]"/>
  <match src="public: public [61848,61854]" dest="public: public [26903,26909]"/>
  <match src="parameter [8245,8261]" dest="parameter [8773,8789]"/>
  <match src="call_argument [81885,81897]" dest="call_argument [72467,72473]"/>
  <match src="constant: constant [42024,42032]" dest="constant: constant [12121,12129]"/>
  <match src=".: . [61871,61872]" dest=".: . [26926,26927]"/>
  <match src="returns: returns [52230,52237]" dest="returns: returns [20354,20361]"/>
  <match src="): ) [28104,28105]" dest="): ) [45816,45817]"/>
  <match src="): ) [35675,35676]" dest="): ) [53387,53388]"/>
  <match src="returns: returns [43733,43740]" dest="returns: returns [13830,13837]"/>
  <match src="primitive_type [25654,25661]" dest="primitive_type [60727,60734]"/>
  <match src="=: = [64868,64869]" dest="=: = [65902,65903]"/>
  <match src="member_expression [103215,103250]" dest="member_expression [42601,42636]"/>
  <match src="): ) [22079,22080]" dest="): ) [63741,63742]"/>
  <match src="): ) [45130,45131]" dest="): ) [15227,15228]"/>
  <match src="identifier: reserveB [76777,76785]" dest="identifier: totalDebtEnd [18199,18211]"/>
  <match src="(: ( [80364,80365]" dest="(: ( [66627,66628]"/>
  <match src=",: , [30654,30655]" dest=",: , [48366,48367]"/>
  <match src="identifier: start [41966,41971]" dest="identifier: start [12063,12068]"/>
  <match src="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [1882,1953]" dest="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [2410,2481]"/>
  <match src="binary_expression [7442,7448]" dest="binary_expression [7970,7976]"/>
  <match src="type_name [35691,35698]" dest="type_name [53403,53410]"/>
  <match src="identifier: self [8644,8648]" dest="identifier: self [9172,9176]"/>
  <match src="address: address [19823,19830]" dest="address: address [64059,64066]"/>
  <match src="identifier: b [9158,9159]" dest="identifier: b [9686,9687]"/>
  <match src="parameter [104182,104199]" dest="parameter [43568,43585]"/>
  <match src="identifier: D256 [65252,65256]" dest="identifier: D256 [67702,67706]"/>
  <match src="identifier: isContract [84602,84612]" dest="identifier: isContract [73930,73940]"/>
  <match src="return_type_definition [52354,52369]" dest="return_type_definition [20478,20493]"/>
  <match src="call_struct_argument [45097,45129]" dest="call_struct_argument [15194,15226]"/>
  <match src="view: view [70456,70460]" dest="view: view [81625,81629]"/>
  <match src="): ) [32683,32684]" dest="): ) [50395,50396]"/>
  <match src="identifier: mint [49703,49707]" dest="identifier: mint [26086,26090]"/>
  <match src="identifier: candidate [103601,103610]" dest="identifier: candidate [42987,42996]"/>
  <match src="return: return [91646,91652]" dest="return: return [31032,31038]"/>
  <match src="uint256: uint256 [94761,94768]" dest="uint256: uint256 [34147,34154]"/>
  <match src="call_expression [81323,81351]" dest="call_expression [72168,72189]"/>
  <match src=".: . [103550,103551]" dest=".: . [42936,42937]"/>
  <match src="function_definition [93644,93832]" dest="function_definition [33030,33218]"/>
  <match src="identifier: accounts [93469,93477]" dest="identifier: accounts [32855,32863]"/>
  <match src="event_paramater [79184,79207]" dest="event_paramater [78106,78129]"/>
  <match src="identifier: GOVERNANCE_PERIOD [44467,44484]" dest="identifier: GOVERNANCE_PERIOD [14564,14581]"/>
  <match src="identifier: incrementTotalDebt [98456,98474]" dest="identifier: incrementTotalDebt [37842,37860]"/>
  <match src="public: public [49617,49623]" dest="public: public [26000,26006]"/>
  <match src="type_name [61885,61889]" dest="type_name [26940,26944]"/>
  <match src="}: } [86490,86491]" dest="}: } [28281,28282]"/>
  <match src="}: } [45264,45265]" dest="}: } [15361,15362]"/>
  <match src="user_defined_type [94207,94230]" dest="user_defined_type [33593,33616]"/>
  <match src="binary_expression [3405,3410]" dest="binary_expression [3933,3938]"/>
  <match src="variable_declaration [65975,65994]" dest="variable_declaration [71527,71542]"/>
  <match src="primitive_type [93398,93405]" dest="primitive_type [32784,32791]"/>
  <match src="parameter [105681,105696]" dest="parameter [68825,68840]"/>
  <match src="]: ] [35483,35484]" dest="]: ] [53195,53196]"/>
  <match src="returns: returns [7928,7935]" dest="returns: returns [8456,8463]"/>
  <match src="(: ( [99878,99879]" dest="(: ( [39264,39265]"/>
  <match src="{: { [97798,97799]" dest="{: { [37184,37185]"/>
  <match src="function_definition [53870,53931]" dest="function_definition [21994,22055]"/>
  <match src=".: . [75660,75661]" dest=".: . [61387,61388]"/>
  <match src="identifier: j [33937,33938]" dest="identifier: j [51649,51650]"/>
  <match src="is: is [97526,97528]" dest="is: is [36912,36914]"/>
  <match src="function_body [36622,36848]" dest="function_body [54334,54560]"/>
  <match src="yul_identifier [89712,89716]" dest="yul_identifier [76902,76906]"/>
  <match src="identifier: accounts [93784,93792]" dest="identifier: accounts [33170,33178]"/>
  <match src="assembly_statement [85137,85178]" dest="assembly_statement [74465,74506]"/>
  <match src="return_type_definition [44546,44563]" dest="return_type_definition [14643,14660]"/>
  <match src="parameter [8455,8468]" dest="parameter [8983,8996]"/>
  <match src="primitive_type [95544,95551]" dest="primitive_type [34930,34937]"/>
  <match src="primitive_type [77494,77501]" dest="primitive_type [61650,61657]"/>
  <match src="variable_declaration_tuple [77475,77513]" dest="variable_declaration_tuple [61625,61668]"/>
  <match src="identifier: newImplementation [89718,89735]" dest="identifier: newImplementation [76908,76925]"/>
  <match src="): ) [92300,92301]" dest="): ) [31686,31687]"/>
  <match src="identifier: b [6749,6750]" dest="identifier: b [7277,7278]"/>
  <match src="type_name [44849,44861]" dest="type_name [14946,14958]"/>
  <match src="visibility [54347,54355]" dest="visibility [22471,22479]"/>
  <match src=",: , [85936,85937]" dest=",: , [27727,27728]"/>
  <match src="}: } [6216,6217]" dest="}: } [6744,6745]"/>
  <match src="visibility [95571,95577]" dest="visibility [34957,34963]"/>
  <match src="call_argument [2052,2062]" dest="call_argument [2580,2590]"/>
  <match src="identifier: getDAOExitLockupEpochs [45390,45412]" dest="identifier: getDAOExitLockupEpochs [15487,15509]"/>
  <match src="primitive_type [86632,86639]" dest="primitive_type [28423,28430]"/>
  <match src="): ) [52701,52702]" dest="): ) [20825,20826]"/>
  <match src=".: . [100066,100067]" dest=".: . [39452,39453]"/>
  <match src="identifier: account [25670,25677]" dest="identifier: account [60743,60750]"/>
  <match src="assignment_expression [99943,100042]" dest="assignment_expression [39329,39428]"/>
  <match src="memory: memory [94050,94056]" dest="memory: memory [33436,33442]"/>
  <match src=",: , [81883,81884]" dest=",: , [72465,72466]"/>
  <match src="): ) [34897,34898]" dest="): ) [52609,52610]"/>
  <match src=".: . [104065,104066]" dest=".: . [43451,43452]"/>
  <match src="(: ( [103966,103967]" dest="(: ( [43352,43353]"/>
  <match src="): ) [19791,19792]" dest="): ) [64014,64015]"/>
  <match src="): ) [79597,79598]" dest="): ) [71135,71136]"/>
  <match src="primitive_type [101013,101020]" dest="primitive_type [40399,40406]"/>
  <match src=",: , [79668,79669]" dest=",: , [83090,83091]"/>
  <match src="visibility [42960,42967]" dest="visibility [13057,13064]"/>
  <match src="{: { [32133,32134]" dest="{: { [49845,49846]"/>
  <match src="call_argument [19752,19791]" dest="call_argument [63958,64005]"/>
  <match src="return_type_definition [44840,44869]" dest="return_type_definition [14937,14966]"/>
  <match src="function: function [102211,102219]" dest="function: function [41597,41605]"/>
  <match src="primitive_type [86845,86852]" dest="primitive_type [28636,28643]"/>
  <match src="call_expression [65399,65461]" dest="call_expression [66838,66863]"/>
  <match src="(: ( [52337,52338]" dest="(: ( [20461,20462]"/>
  <match src="returns: returns [92855,92862]" dest="returns: returns [32241,32248]"/>
  <match src="parameter [16707,16714]" dest="parameter [58263,58270]"/>
  <match src="function_definition [100122,100461]" dest="function_definition [39508,39847]"/>
  <match src="identifier: State [87277,87282]" dest="identifier: State [29068,29073]"/>
  <match src="): ) [71470,71471]" dest="): ) [81835,81836]"/>
  <match src=".: . [87333,87334]" dest=".: . [29124,29125]"/>
  <match src=",: , [8648,8649]" dest=",: , [9176,9177]"/>
  <match src="}: } [91679,91680]" dest="}: } [31065,31066]"/>
  <match src="parameter [92042,92049]" dest="parameter [31428,31435]"/>
  <match src="address: address [53314,53321]" dest="address: address [21438,21445]"/>
  <match src="identifier: _state [101395,101401]" dest="identifier: _state [40781,40787]"/>
  <match src="pure: pure [9355,9359]" dest="pure: pure [9883,9887]"/>
  <match src="parameter [95228,95241]" dest="parameter [34614,34627]"/>
  <match src="identifier: decrementBalanceOfStaged [80741,80765]" dest="identifier: decrementBalanceOfStaged [71778,71802]"/>
  <match src="state_mutability [94272,94276]" dest="state_mutability [33658,33662]"/>
  <match src="function_definition [9713,9912]" dest="function_definition [10241,10440]"/>
  <match src="identifier: statusOf [106000,106008]" dest="identifier: statusOf [69144,69152]"/>
  <match src="): ) [80946,80947]" dest="): ) [73010,73011]"/>
  <match src="type_name [101738,101745]" dest="type_name [41124,41131]"/>
  <match src="view: view [91820,91824]" dest="view: view [31206,31210]"/>
  <match src=",: , [7015,7016]" dest=",: , [7543,7544]"/>
  <match src="identifier: burnFrom [23004,23012]" dest="identifier: redeemToAccount [55884,55899]"/>
  <match src="call_argument [63524,63556]" dest="call_argument [81391,81435]"/>
  <match src="function: function [6986,6994]" dest="function: function [7514,7522]"/>
  <match src="): ) [104397,104398]" dest="): ) [43783,43784]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [46009,46028]" dest="identifier: SUPPLY_CHANGE_LIMIT [16106,16125]"/>
  <match src="identifier: balance [102911,102918]" dest="identifier: balance [42297,42304]"/>
  <match src="state_mutability [46476,46480]" dest="state_mutability [16573,16577]"/>
  <match src="expression_statement [33097,33103]" dest="expression_statement [50809,50815]"/>
  <match src="array_access [34950,34959]" dest="array_access [52662,52671]"/>
  <match src="parameter [36558,36571]" dest="parameter [54270,54283]"/>
  <match src="call_argument [101378,101384]" dest="call_argument [40764,40770]"/>
  <match src="identifier: errorMessage [3412,3424]" dest="identifier: errorMessage [3940,3952]"/>
  <match src="type_name [33747,33754]" dest="type_name [51459,51466]"/>
  <match src="primitive_type [35703,35710]" dest="primitive_type [53415,53422]"/>
  <match src="uint256: uint256 [64893,64900]" dest="uint256: uint256 [72628,72635]"/>
  <match src="event_paramater [13911,13934]" dest="event_paramater [25212,25235]"/>
  <match src="+: + [33401,33402]" dest="+: + [51113,51114]"/>
  <match src="address: address [95851,95858]" dest="address: address [35237,35244]"/>
  <match src="variable_declaration [1384,1393]" dest="variable_declaration [1912,1921]"/>
  <match src="parameter [6629,6638]" dest="parameter [7157,7166]"/>
  <match src="variable_declaration_statement [33929,33947]" dest="variable_declaration_statement [51641,51659]"/>
  <match src="function: function [3226,3234]" dest="function: function [3754,3762]"/>
  <match src="call_expression [83121,83205]" dest="call_expression [58708,58816]"/>
  <match src="user_defined_type [65244,65256]" dest="user_defined_type [67694,67706]"/>
  <match src="(: ( [79419,79420]" dest="(: ( [70982,70983]"/>
  <match src="}: } [75729,75730]" dest="}: } [61493,61494]"/>
  <match src="type_name [98916,98923]" dest="type_name [38302,38309]"/>
  <match src="member_expression [103161,103195]" dest="member_expression [42547,42581]"/>
  <match src="==: == [9081,9083]" dest="==: == [9609,9611]"/>
  <match src="identifier: Require [83095,83102]" dest="identifier: Require [58682,58689]"/>
  <match src="identifier: approve [103573,103580]" dest="identifier: approve [42959,42966]"/>
  <match src="primitive_type [35148,35155]" dest="primitive_type [52860,52867]"/>
  <match src="call_argument [7137,7138]" dest="call_argument [7665,7666]"/>
  <match src="function_definition [102211,102313]" dest="function_definition [41597,41699]"/>
  <match src="(: ( [32436,32437]" dest="(: ( [50148,50149]"/>
  <match src="(: ( [106306,106307]" dest="(: ( [69450,69451]"/>
  <match src="=: = [34108,34109]" dest="=: = [51820,51821]"/>
  <match src="member_expression [102279,102303]" dest="member_expression [41665,41689]"/>
  <match src=",: , [101453,101454]" dest=",: , [40839,40840]"/>
  <match src="uint256: uint256 [93906,93913]" dest="uint256: uint256 [33292,33299]"/>
  <match src="(: ( [1965,1966]" dest="(: ( [2493,2494]"/>
  <match src="identifier: pair [61906,61910]" dest="identifier: pair [26961,26965]"/>
  <match src="(: ( [54209,54210]" dest="(: ( [22333,22334]"/>
  <match src="type_name [9377,9381]" dest="type_name [9905,9909]"/>
  <match src=".: . [100777,100778]" dest=".: . [40163,40164]"/>
  <match src="member_expression [104317,104382]" dest="member_expression [43703,43768]"/>
  <match src="primitive_type [42272,42279]" dest="primitive_type [12369,12376]"/>
  <match src="primitive_type [100559,100566]" dest="primitive_type [39945,39952]"/>
  <match src="primitive_type [13414,13421]" dest="primitive_type [24715,24722]"/>
  <match src="bool: bool [29425,29429]" dest="bool: bool [47137,47141]"/>
  <match src="{: { [98500,98501]" dest="{: { [37886,37887]"/>
  <match src="member_expression [103161,103178]" dest="member_expression [42547,42564]"/>
  <match src="parameter [46590,46597]" dest="parameter [16687,16694]"/>
  <match src="function: function [81911,81919]" dest="function: function [79920,79928]"/>
  <match src="emit: emit [80903,80907]" dest="emit: emit [72956,72960]"/>
  <match src="(: ( [94935,94936]" dest="(: ( [34321,34322]"/>
  <match src="function_definition [44387,44491]" dest="function_definition [14484,14588]"/>
  <match src="call_argument [56636,56661]" dest="call_argument [72904,72935]"/>
  <match src="return: return [6916,6922]" dest="return: return [7444,7450]"/>
  <match src="return: return [102853,102859]" dest="return: return [42239,42245]"/>
  <match src="(: ( [46127,46128]" dest="(: ( [16224,16225]"/>
  <match src="=: = [102277,102278]" dest="=: = [41663,41664]"/>
  <match src="expression_statement [105974,106106]" dest="expression_statement [69118,69250]"/>
  <match src="identifier: amount [23038,23044]" dest="identifier: amount [17908,17914]"/>
  <match src="primitive_type [91236,91243]" dest="primitive_type [30622,30629]"/>
  <match src="uint256: uint256 [15875,15882]" dest="uint256: uint256 [82728,82735]"/>
  <match src="expression_statement [36420,36465]" dest="expression_statement [54132,54177]"/>
  <match src=",: , [8971,8972]" dest=",: , [9499,9500]"/>
  <match src="): ) [64882,64883]" dest="): ) [65918,65919]"/>
  <match src="new_expression [34110,34119]" dest="new_expression [51822,51831]"/>
  <match src="identifier: _state [104795,104801]" dest="identifier: _state [44181,44187]"/>
  <match src="identifier: balance [99277,99284]" dest="identifier: balance [38663,38670]"/>
  <match src="call_expression [3397,3425]" dest="call_expression [3925,3953]"/>
  <match src="string [82249,82280]" dest="string [80189,80200]"/>
  <match src="}: } [10142,10143]" dest="}: } [10670,10671]"/>
  <match src=".: . [103404,103405]" dest=".: . [42790,42791]"/>
  <match src="primitive_type [99537,99543]" dest="primitive_type [38923,38929]"/>
  <match src=".: . [102885,102886]" dest=".: . [42271,42272]"/>
  <match src="call_argument [78615,78625]" dest="call_argument [63178,63188]"/>
  <match src=".: . [99241,99242]" dest=".: . [38627,38628]"/>
  <match src="user_defined_type [45041,45053]" dest="user_defined_type [15138,15150]"/>
  <match src="uint256: uint256 [9766,9773]" dest="uint256: uint256 [10294,10301]"/>
  <match src="bytes32: bytes32 [30664,30671]" dest="bytes32: bytes32 [48376,48383]"/>
  <match src="identifier: balance [91763,91770]" dest="identifier: balance [31149,31156]"/>
  <match src="number_literal: 1e20 [42672,42676]" dest="number_literal: 1e20 [12769,12773]"/>
  <match src="): ) [7306,7307]" dest="): ) [7834,7835]"/>
  <match src="type_name [9766,9773]" dest="type_name [10294,10301]"/>
  <match src="&quot;: &quot; [106073,106074]" dest="&quot;: &quot; [69217,69218]"/>
  <match src="constant: constant [42345,42353]" dest="constant: constant [12442,12450]"/>
  <match src="identifier: sender [81230,81236]" dest="identifier: sender [78978,78984]"/>
  <match src="call_expression [81532,81658]" dest="call_expression [79818,79850]"/>
  <match src="{: { [35176,35177]" dest="{: { [52888,52889]"/>
  <match src="identifier: require [56611,56618]" dest="identifier: decrementBalanceOf [72827,72845]"/>
  <match src="identifier: require [2044,2051]" dest="identifier: require [2572,2579]"/>
  <match src="identifier: file [31435,31439]" dest="identifier: file [49147,49151]"/>
  <match src="uint256: uint256 [82320,82327]" dest="uint256: uint256 [56948,56955]"/>
  <match src="identifier: value [9524,9529]" dest="identifier: value [10052,10057]"/>
  <match src="member_expression [99013,99027]" dest="member_expression [38399,38413]"/>
  <match src=".: . [92082,92083]" dest=".: . [31468,31469]"/>
  <match src="identifier: coupons [86058,86065]" dest="identifier: coupons [27849,27856]"/>
  <match src="primitive_type [79266,79273]" dest="primitive_type [77924,77931]"/>
  <match src="identifier: reason [100363,100369]" dest="identifier: reason [39749,39755]"/>
  <match src="): ) [91164,91165]" dest="): ) [30550,30551]"/>
  <match src="++: ++ [34015,34017]" dest="++: ++ [51727,51729]"/>
  <match src="(: ( [6290,6291]" dest="(: ( [6818,6819]"/>
  <match src="identifier: value [80941,80946]" dest="identifier: value [73005,73010]"/>
  <match src="private: private [76463,76470]" dest="private: private [67110,67117]"/>
  <match src="function_definition [103670,103933]" dest="function_definition [43056,43319]"/>
  <match src="function_body [7092,7148]" dest="function_body [7620,7676]"/>
  <match src="return_type_definition [76639,76665]" dest="return_type_definition [56875,56901]"/>
  <match src="using_directive [90469,90496]" dest="using_directive [29855,29882]"/>
  <match src="identifier: reason [103919,103925]" dest="identifier: reason [43305,43311]"/>
  <match src="): ) [82568,82569]" dest="): ) [72669,72670]"/>
  <match src="return: return [7102,7108]" dest="return: return [7630,7636]"/>
  <match src="): ) [32969,32970]" dest="): ) [50681,50682]"/>
  <match src="string [19752,19791]" dest="string [63958,64005]"/>
  <match src="contract_body [97544,104851]" dest="contract_body [36930,44237]"/>
  <match src="string [48810,48819]" dest="string [55794,55836]"/>
  <match src="identifier: account [71462,71469]" dest="identifier: account [81791,81798]"/>
  <match src="identifier: value [44905,44910]" dest="identifier: value [15002,15007]"/>
  <match src="function_body [44450,44491]" dest="function_body [14547,14588]"/>
  <match src="): ) [21907,21908]" dest="): ) [62546,62547]"/>
  <match src="call_argument [28098,28104]" dest="call_argument [45810,45816]"/>
  <match src="identifier: Decimal [45083,45090]" dest="identifier: Decimal [15180,15187]"/>
  <match src="memory: memory [44303,44309]" dest="memory: memory [14400,14406]"/>
  <match src="member_expression [91962,91976]" dest="member_expression [31348,31362]"/>
  <match src=".: . [96489,96490]" dest=".: . [35875,35876]"/>
  <match src="update_expression [36125,36128]" dest="update_expression [53837,53840]"/>
  <match src="view: view [95250,95254]" dest="view: view [34636,34640]"/>
  <match src="=: = [99616,99617]" dest="=: = [39002,39003]"/>
  <match src="): ) [52368,52369]" dest="): ) [20492,20493]"/>
  <match src="): ) [99091,99092]" dest="): ) [38477,38478]"/>
  <match src="emit_statement [99790,99833]" dest="emit_statement [39176,39219]"/>
  <match src="call_expression [21918,21986]" dest="call_expression [63511,63621]"/>
  <match src="(: ( [91603,91604]" dest="(: ( [30989,30990]"/>
  <match src="}: } [92754,92755]" dest="}: } [32140,32141]"/>
  <match src="primitive_type [86943,86950]" dest="primitive_type [28734,28741]"/>
  <match src="user_defined_type [7167,7171]" dest="user_defined_type [7695,7699]"/>
  <match src="primitive_type [98475,98482]" dest="primitive_type [37861,37868]"/>
  <match src=".: . [44339,44340]" dest=".: . [14436,14437]"/>
  <match src="type_name [22871,22878]" dest="type_name [17608,17615]"/>
  <match src="revert: revert [32168,32174]" dest="revert: revert [49880,49886]"/>
  <match src="&gt;: &gt; [3407,3408]" dest="&gt;: &gt; [3935,3936]"/>
  <match src="member_expression [101395,101409]" dest="member_expression [40781,40795]"/>
  <match src="}: } [7837,7838]" dest="}: } [8365,8366]"/>
  <match src="return_type_definition [4057,4074]" dest="return_type_definition [4585,4602]"/>
  <match src="string [90886,90892]" dest="string [30272,30278]"/>
  <match src="primitive_type [62746,62753]" dest="primitive_type [77825,77832]"/>
  <match src="uint256: uint256 [2605,2612]" dest="uint256: uint256 [3133,3140]"/>
  <match src="internal: internal [377,385]" dest="internal: internal [905,913]"/>
  <match src="inheritance_specifier [62649,62656]" dest="inheritance_specifier [65454,65465]"/>
  <match src="): ) [93700,93701]" dest="): ) [33086,33087]"/>
  <match src=".: . [8196,8197]" dest=".: . [8724,8725]"/>
  <match src="): ) [8918,8919]" dest="): ) [9446,9447]"/>
  <match src="type_name [48102,48109]" dest="type_name [56831,56838]"/>
  <match src="identifier: totalStaged [91799,91810]" dest="identifier: totalStaged [31185,31196]"/>
  <match src="array_access [96461,96489]" dest="array_access [35847,35875]"/>
  <match src="function_body [100589,100938]" dest="function_body [39975,40324]"/>
  <match src="uint256: uint256 [92804,92811]" dest="uint256: uint256 [32190,32197]"/>
  <match src="): ) [34512,34513]" dest="): ) [52224,52225]"/>
  <match src="identifier: b [2672,2673]" dest="identifier: b [3200,3201]"/>
  <match src="uint256: uint256 [23030,23037]" dest="uint256: uint256 [17900,17907]"/>
  <match src="identifier: payloadA [28623,28631]" dest="identifier: payloadA [46335,46343]"/>
  <match src="(: ( [54041,54042]" dest="(: ( [22165,22166]"/>
  <match src="): ) [53995,53996]" dest="): ) [22119,22120]"/>
  <match src="uint256: uint256 [86389,86396]" dest="uint256: uint256 [28180,28187]"/>
  <match src=",: , [101003,101004]" dest=",: , [40389,40390]"/>
  <match src="return: return [91061,91067]" dest="return: return [30447,30453]"/>
  <match src="(: ( [91156,91157]" dest="(: ( [30542,30543]"/>
  <match src="function_definition [80960,81905]" dest="function_definition [71984,72481]"/>
  <match src=",: , [80200,80201]" dest=",: , [81555,81556]"/>
  <match src="type_name [7167,7171]" dest="type_name [7695,7699]"/>
  <match src="returns: returns [45316,45323]" dest="returns: returns [15413,15420]"/>
  <match src="pure: pure [53565,53569]" dest="pure: pure [21689,21693]"/>
  <match src="string: string [98932,98938]" dest="string: string [38318,38324]"/>
  <match src=",: , [99527,99528]" dest=",: , [38913,38914]"/>
  <match src="identifier: value [7295,7300]" dest="identifier: value [7823,7828]"/>
  <match src="return_type_definition [7928,7949]" dest="return_type_definition [8456,8477]"/>
  <match src=".: . [10110,10111]" dest=".: . [10638,10639]"/>
  <match src="uint256: uint256 [4066,4073]" dest="uint256: uint256 [4594,4601]"/>
  <match src="call_expression [92279,92318]" dest="call_expression [31665,31704]"/>
  <match src="returns: returns [6884,6891]" dest="returns: returns [7412,7419]"/>
  <match src="user_defined_type [7499,7503]" dest="user_defined_type [8027,8031]"/>
  <match src="): ) [53583,53584]" dest="): ) [21707,21708]"/>
  <match src="call_expression [31609,31889]" dest="call_expression [49321,49601]"/>
  <match src="function: function [61829,61837]" dest="function: function [26884,26892]"/>
  <match src="returns: returns [96282,96289]" dest="returns: returns [35668,35675]"/>
  <match src="): ) [96136,96137]" dest="): ) [35522,35523]"/>
  <match src="): ) [81173,81174]" dest="): ) [81353,81354]"/>
  <match src="): ) [34266,34267]" dest="): ) [51978,51979]"/>
  <match src="}: } [96370,96371]" dest="}: } [35756,35757]"/>
  <match src="(: ( [65275,65276]" dest="(: ( [66793,66794]"/>
  <match src="return_type_definition [5946,5967]" dest="return_type_definition [6474,6495]"/>
  <match src="function: function [97701,97709]" dest="function: function [37087,37095]"/>
  <match src="identifier: expiration [102606,102616]" dest="identifier: expiration [41992,42002]"/>
  <match src="identifier: outstandingCoupons [94600,94618]" dest="identifier: outstandingCoupons [33986,34004]"/>
  <match src="visibility [98045,98053]" dest="visibility [37431,37439]"/>
  <match src="number_literal: 2 [35256,35257]" dest="number_literal: 2 [52968,52969]"/>
  <match src="call_expression [80604,80617]" dest="call_expression [71668,71681]"/>
  <match src="member_expression [81862,81873]" dest="member_expression [72444,72455]"/>
  <match src="variable_declaration_statement [33956,33971]" dest="variable_declaration_statement [51668,51683]"/>
  <match src="expression_statement [80279,80300]" dest="expression_statement [71496,71517]"/>
  <match src="): ) [6215,6216]" dest="): ) [6743,6744]"/>
  <match src="identifier: a [4029,4030]" dest="identifier: a [4557,4558]"/>
  <match src="(: ( [77106,77107]" dest="(: ( [82949,82950]"/>
  <match src="(: ( [16007,16008]" dest="(: ( [17651,17652]"/>
  <match src="{: { [92568,92569]" dest="{: { [31954,31955]"/>
  <match src="}: } [51346,51347]" dest="}: } [64676,64677]"/>
  <match src="): ) [82289,82290]" dest="): ) [80200,80201]"/>
  <match src="primitive_type [95122,95129]" dest="primitive_type [34508,34515]"/>
  <match src="identifier: spender [91259,91266]" dest="identifier: spender [30645,30652]"/>
  <match src="(: ( [81496,81497]" dest="(: ( [71710,71711]"/>
  <match src="array_access [34995,35004]" dest="array_access [52707,52716]"/>
  <match src="): ) [51064,51065]" dest="): ) [64454,64455]"/>
  <match src="state_mutability [53977,53981]" dest="state_mutability [22101,22105]"/>
  <match src="pure: pure [31513,31517]" dest="pure: pure [49225,49229]"/>
  <match src="type_cast_expression [34967,34984]" dest="type_cast_expression [52679,52696]"/>
  <match src="call_expression [104317,104398]" dest="call_expression [43703,43784]"/>
  <match src="type_name [19668,19675]" dest="type_name [63813,63820]"/>
  <match src="=: = [103031,103032]" dest="=: = [42417,42418]"/>
  <match src="primitive_type [840,847]" dest="primitive_type [1368,1375]"/>
  <match src="type_name [70470,70474]" dest="type_name [81639,81643]"/>
  <match src="variable_declaration [33929,33938]" dest="variable_declaration [51641,51650]"/>
  <match src="variable_declaration_statement [36190,36212]" dest="variable_declaration_statement [53902,53924]"/>
  <match src="parameter [52679,52689]" dest="parameter [20803,20813]"/>
  <match src="return_type_definition [15999,16016]" dest="return_type_definition [17643,17660]"/>
  <match src="variable_declaration_statement [65275,65462]" dest="variable_declaration_statement [66793,66864]"/>
  <match src="(: ( [92890,92891]" dest="(: ( [32276,32277]"/>
  <match src="parameter [13467,13471]" dest="parameter [24768,24772]"/>
  <match src="if: if [31532,31534]" dest="if: if [49244,49246]"/>
  <match src="identifier: _state [101286,101292]" dest="identifier: _state [40672,40678]"/>
  <match src="uint256: uint256 [65289,65296]" dest="uint256: uint256 [66794,66801]"/>
  <match src="type_name [53255,53259]" dest="type_name [21379,21383]"/>
  <match src="identifier: D256 [90527,90531]" dest="identifier: D256 [29913,29917]"/>
  <match src="binary_expression [19730,19750]" dest="binary_expression [63924,63944]"/>
  <match src="identifier: amount [99521,99527]" dest="identifier: amount [38907,38913]"/>
  <match src="type_name [28829,28836]" dest="type_name [46541,46548]"/>
  <match src="identifier: payloadA [29208,29216]" dest="identifier: payloadA [46920,46928]"/>
  <match src="identifier: amount [100855,100861]" dest="identifier: amount [40241,40247]"/>
  <match src="(: ( [105986,105987]" dest="(: ( [69130,69131]"/>
  <match src="identifier: D256 [7759,7763]" dest="identifier: D256 [8287,8291]"/>
  <match src="primitive_type [36102,36109]" dest="primitive_type [53814,53821]"/>
  <match src="identifier: a [1966,1967]" dest="identifier: a [2494,2495]"/>
  <match src="bytes: bytes [34863,34868]" dest="bytes: bytes [52575,52580]"/>
  <match src="call_struct_argument [43875,43901]" dest="call_struct_argument [13972,13998]"/>
  <match src="=: = [27694,27695]" dest="=: = [45406,45407]"/>
  <match src="identifier: account [101501,101508]" dest="identifier: account [40887,40894]"/>
  <match src="type_name [78912,78919]" dest="type_name [82812,82819]"/>
  <match src="identifier: balance [98539,98546]" dest="identifier: balance [37925,37932]"/>
  <match src="string: string [101964,101970]" dest="string: string [41350,41356]"/>
  <match src="identifier: payloadA [30718,30726]" dest="identifier: payloadA [48430,48438]"/>
  <match src="): ) [50720,50721]" dest="): ) [55422,55423]"/>
  <match src="primitive_type [28270,28277]" dest="primitive_type [45982,45989]"/>
  <match src="primitive_type [34653,34660]" dest="primitive_type [52365,52372]"/>
  <match src="if_statement [51030,51347]" dest="if_statement [64366,64677]"/>
  <match src="identifier: target [9750,9756]" dest="identifier: target [10278,10284]"/>
  <match src="memory: memory [6438,6444]" dest="memory: memory [6966,6972]"/>
  <match src="): ) [82207,82208]" dest="): ) [78321,78322]"/>
  <match src="external: external [52216,52224]" dest="external: external [20340,20348]"/>
  <match src="): ) [104258,104259]" dest="): ) [43644,43645]"/>
  <match src="returns: returns [96016,96023]" dest="returns: returns [35402,35409]"/>
  <match src="identifier: _state [102990,102996]" dest="identifier: _state [42376,42382]"/>
  <match src="(: ( [94796,94797]" dest="(: ( [34182,34183]"/>
  <match src="call_argument [28658,28664]" dest="call_argument [46370,46376]"/>
  <match src="if_statement [32143,32695]" dest="if_statement [49855,50407]"/>
  <match src="return: return [64101,64107]" dest="return: return [67933,67939]"/>
  <match src="function_definition [35581,36529]" dest="function_definition [53293,54241]"/>
  <match src="parenthesized_expression [29580,29938]" dest="parenthesized_expression [47292,47650]"/>
  <match src="parameter [21805,21819]" dest="parameter [63476,63490]"/>
  <match src=".: . [93257,93258]" dest=".: . [32643,32644]"/>
  <match src="return: return [45576,45582]" dest="return: return [15673,15679]"/>
  <match src="primitive_type [99182,99189]" dest="primitive_type [38568,38575]"/>
  <match src="): ) [7448,7449]" dest="): ) [7976,7977]"/>
  <match src="member_expression [89059,89089]" dest="member_expression [76249,76279]"/>
  <match src="string [51261,51304]" dest="string [64614,64652]"/>
  <match src="identifier: sender [79662,79668]" dest="identifier: sender [83084,83090]"/>
  <match src="&quot;: &quot; [79767,79768]" dest="&quot;: &quot; [71314,71315]"/>
  <match src="(: ( [92305,92306]" dest="(: ( [31691,31692]"/>
  <match src="expression_statement [106335,106337]" dest="expression_statement [69479,69481]"/>
  <match src="private: private [42134,42141]" dest="private: private [12231,12238]"/>
  <match src="=: = [27601,27602]" dest="=: = [45313,45314]"/>
  <match src="return_statement [44052,44082]" dest="return_statement [14149,14179]"/>
  <match src="inheritance_specifier [97529,97534]" dest="inheritance_specifier [36915,36920]"/>
  <match src="if_statement [30821,31373]" dest="if_statement [48533,49085]"/>
  <match src="{: { [114,115]" dest="{: { [642,643]"/>
  <match src="function_body [44042,44088]" dest="function_body [14139,14185]"/>
  <match src="}: } [44753,44754]" dest="}: } [14850,14851]"/>
  <match src="member_expression [10051,10058]" dest="member_expression [10579,10586]"/>
  <match src="returns: returns [53916,53923]" dest="returns: returns [22040,22047]"/>
  <match src="uint112: uint112 [53802,53809]" dest="uint112: uint112 [21926,21933]"/>
  <match src="identifier: balanceOfRewarded [82179,82196]" dest="identifier: balanceOf [78301,78310]"/>
  <match src=".: . [45824,45825]" dest=".: . [15921,15922]"/>
  <match src="identifier: _state [98804,98810]" dest="identifier: _state [38190,38196]"/>
  <match src="state_mutability [6665,6669]" dest="state_mutability [7193,7197]"/>
  <match src="array_access [95645,95688]" dest="array_access [35031,35074]"/>
  <match src="(: ( [86037,86038]" dest="(: ( [27828,27829]"/>
  <match src="(: ( [92299,92300]" dest="(: ( [31685,31686]"/>
  <match src="parameter [7937,7948]" dest="parameter [8465,8476]"/>
  <match src="identifier: allowanceCoupons [93653,93669]" dest="identifier: allowanceCoupons [33039,33055]"/>
  <match src="false [98086,98091]" dest="false [37472,37477]"/>
  <match src="primitive_type [4021,4028]" dest="primitive_type [4549,4556]"/>
  <match src="): ) [6970,6971]" dest="): ) [7498,7499]"/>
  <match src=",: , [101050,101051]" dest=",: , [40436,40437]"/>
  <match src=".: . [103010,103011]" dest=".: . [42396,42397]"/>
  <match src="function_body [2648,2711]" dest="function_body [3176,3239]"/>
  <match src="address: address [92521,92528]" dest="address: address [31907,31914]"/>
  <match src="number_literal: 144 [42251,42254]" dest="number_literal: 144 [12348,12351]"/>
  <match src="return_type_definition [8865,8879]" dest="return_type_definition [9393,9407]"/>
  <match src="(: ( [52395,52396]" dest="(: ( [20519,20520]"/>
  <match src="identifier: b [8201,8202]" dest="identifier: b [8729,8730]"/>
  <match src="binary_expression [33097,33102]" dest="binary_expression [50809,50814]"/>
  <match src=".: . [99642,99643]" dest=".: . [39028,39029]"/>
  <match src="call_argument [83219,83223]" dest="call_argument [58830,58834]"/>
  <match src="visibility [92130,92136]" dest="visibility [31516,31522]"/>
  <match src="member_expression [93110,93125]" dest="member_expression [32496,32511]"/>
  <match src="identifier: epochs [94688,94694]" dest="identifier: epochs [34074,34080]"/>
  <match src="identifier: SafeMath [15719,15727]" dest="identifier: SafeMath [60283,60291]"/>
  <match src="comment: // ============ Constants ============ [27292,27330]" dest="comment: // ============ Constants ============ [45004,45042]"/>
  <match src="string [81756,81792]" dest="string [80581,80599]"/>
  <match src="visibility [76463,76470]" dest="visibility [67110,67117]"/>
  <match src="address: address [53048,53055]" dest="address: address [21172,21179]"/>
  <match src="): ) [34126,34127]" dest="): ) [51838,51839]"/>
  <match src="array_access [101778,101826]" dest="array_access [41164,41212]"/>
  <match src="(: ( [104429,104430]" dest="(: ( [43815,43816]"/>
  <match src="member_expression [28406,28422]" dest="member_expression [46118,46134]"/>
  <match src="): ) [35032,35033]" dest="): ) [52744,52745]"/>
  <match src="identifier: account [100615,100622]" dest="identifier: account [40001,40008]"/>
  <match src="parameter [18251,18269]" dest="parameter [17873,17890]"/>
  <match src="&quot;: &quot; [25192,25193]" dest="&quot;: &quot; [79490,79491]"/>
  <match src="type_name [91042,91049]" dest="type_name [30428,30435]"/>
  <match src="identifier: CHAIN_ID [41322,41330]" dest="identifier: CHAIN_ID [11419,11427]"/>
  <match src="uint256: uint256 [16707,16714]" dest="uint256: uint256 [58263,58270]"/>
  <match src="identifier: Global [86215,86221]" dest="identifier: Global [28006,28012]"/>
  <match src="parameter [91730,91737]" dest="parameter [31116,31123]"/>
  <match src="identifier: account [78811,78818]" dest="identifier: account [70329,70336]"/>
  <match src="}: } [30609,30610]" dest="}: } [48321,48322]"/>
  <match src="member_expression [81441,81451]" dest="member_expression [72724,72734]"/>
  <match src="}: } [7488,7489]" dest="}: } [8016,8017]"/>
  <match src=".: . [101213,101214]" dest=".: . [40599,40600]"/>
  <match src="uint: uint [53579,53583]" dest="uint: uint [21703,21707]"/>
  <match src="parameter [8325,8336]" dest="parameter [8853,8864]"/>
  <match src="parameter [103126,103140]" dest="parameter [42512,42526]"/>
  <match src="(: ( [11526,11527]" dest="(: ( [22827,22828]"/>
  <match src="comment: // 1% [43086,43091]" dest="comment: // 1% [13183,13188]"/>
  <match src="identifier: amount [73916,73922]" dest="identifier: amount [56034,56040]"/>
  <match src="uint256: uint256 [95122,95129]" dest="uint256: uint256 [34508,34515]"/>
  <match src="[: [ [35910,35911]" dest="[: [ [53622,53623]"/>
  <match src="identifier: account [79200,79207]" dest="identifier: account [78122,78129]"/>
  <match src="identifier: r [53109,53110]" dest="identifier: r [21233,21234]"/>
  <match src="identifier: _state [100413,100419]" dest="identifier: _state [39799,39805]"/>
  <match src="function_body [33819,34619]" dest="function_body [51531,52331]"/>
  <match src="identifier: candidate [95552,95561]" dest="identifier: candidate [34938,34947]"/>
  <match src="returns: returns [65947,65954]" dest="returns: returns [62450,62457]"/>
  <match src="function_definition [52259,52315]" dest="function_definition [20383,20439]"/>
  <match src="identifier: start [94366,94371]" dest="identifier: start [33752,33757]"/>
  <match src="member_expression [83121,83138]" dest="member_expression [58977,58990]"/>
  <match src="internal: internal [2616,2624]" dest="internal: internal [3144,3152]"/>
  <match src="&quot;: &quot; [21220,21221]" dest="&quot;: &quot; [56337,56338]"/>
  <match src="state_mutability [6879,6883]" dest="state_mutability [7407,7411]"/>
  <match src="identifier: staged [100319,100325]" dest="identifier: staged [39705,39711]"/>
  <match src="{: { [44720,44721]" dest="{: { [14817,14818]"/>
  <match src="user_defined_type [6162,6166]" dest="user_defined_type [6690,6694]"/>
  <match src="pure: pure [44268,44272]" dest="pure: pure [14365,14369]"/>
  <match src="primitive_type [79129,79136]" dest="primitive_type [78067,78074]"/>
  <match src="state_variable_declaration [42952,43000]" dest="state_variable_declaration [13049,13097]"/>
  <match src="): ) [91604,91605]" dest="): ) [30990,30991]"/>
  <match src="call_expression [65689,65791]" dest="call_expression [67767,67785]"/>
  <match src=".: . [104027,104028]" dest=".: . [43413,43414]"/>
  <match src="identifier: file [30272,30276]" dest="identifier: file [47984,47988]"/>
  <match src="visibility [98181,98189]" dest="visibility [37567,37575]"/>
  <match src="type_name [42206,42213]" dest="type_name [12303,12310]"/>
  <match src="): ) [13712,13713]" dest="): ) [25013,25014]"/>
  <match src="member_expression [101148,101163]" dest="member_expression [40534,40549]"/>
  <match src="type_name [86967,86974]" dest="type_name [28758,28765]"/>
  <match src="expression_statement [33250,33254]" dest="expression_statement [50962,50966]"/>
  <match src=".: . [100919,100920]" dest=".: . [40305,40306]"/>
  <match src="call_argument [80076,80081]" dest="call_argument [72773,72778]"/>
  <match src="address: address [101493,101500]" dest="address: address [40879,40886]"/>
  <match src="&quot;: &quot; [19871,19872]" dest="&quot;: &quot; [64127,64128]"/>
  <match src="memory: memory [6692,6698]" dest="memory: memory [7220,7226]"/>
  <match src="parameter [9297,9313]" dest="parameter [9825,9841]"/>
  <match src="[: [ [102089,102090]" dest="[: [ [41475,41476]"/>
  <match src="}: } [94169,94170]" dest="}: } [33555,33556]"/>
  <match src="{: { [3321,3322]" dest="{: { [3849,3850]"/>
  <match src="identifier: isZero [9448,9454]" dest="identifier: isZero [9976,9982]"/>
  <match src="identifier: lessThanOrEqualTo [9279,9296]" dest="identifier: lessThanOrEqualTo [9807,9824]"/>
  <match src="identifier: TREASURY_ADDRESS [43326,43342]" dest="identifier: TREASURY_ADDRESS [13423,13439]"/>
  <match src="primitive_type [42952,42959]" dest="primitive_type [13049,13056]"/>
  <match src="comment: /* Chain */ [41281,41292]" dest="comment: /* Chain */ [11378,11389]"/>
  <match src="uint8: uint8 [35921,35926]" dest="uint8: uint8 [53633,53638]"/>
  <match src="state_mutability [8690,8694]" dest="state_mutability [9218,9222]"/>
  <match src="primitive_type [102479,102486]" dest="primitive_type [41865,41872]"/>
  <match src="function: function [44210,44218]" dest="function: function [14307,14315]"/>
  <match src="type_name [52239,52245]" dest="type_name [20363,20369]"/>
  <match src="identifier: b [8593,8594]" dest="identifier: b [9121,9122]"/>
  <match src="call_expression [80925,80932]" dest="call_expression [72980,72987]"/>
  <match src="call_expression [92712,92730]" dest="call_expression [32098,32116]"/>
  <match src="indexed: indexed [13919,13926]" dest="indexed: indexed [25220,25227]"/>
  <match src="function: function [96377,96385]" dest="function: function [35763,35771]"/>
  <match src=":: : [45102,45103]" dest=":: : [15199,15200]"/>
  <match src="event_paramater [78968,78991]" dest="event_paramater [70574,70597]"/>
  <match src="identifier: epoch [94695,94700]" dest="identifier: epoch [34081,34086]"/>
  <match src="identifier: IOracle [61785,61792]" dest="identifier: IOracle [26840,26847]"/>
  <match src="type_name [52691,52695]" dest="type_name [20815,20819]"/>
  <match src="type_name [45557,45564]" dest="type_name [15654,15661]"/>
  <match src="type_name [79184,79191]" dest="type_name [78106,78113]"/>
  <match src="array_access [102369,102391]" dest="array_access [41755,41777]"/>
  <match src=".: . [103426,103427]" dest=".: . [42812,42813]"/>
  <match src="identifier: D256 [8650,8654]" dest="identifier: D256 [9178,9182]"/>
  <match src="(: ( [30137,30138]" dest="(: ( [47849,47850]"/>
  <match src="return_statement [7464,7479]" dest="return_statement [7992,8007]"/>
  <match src="memory: memory [9133,9139]" dest="memory: memory [9661,9667]"/>
  <match src="): ) [44800,44801]" dest="): ) [14897,14898]"/>
  <match src="(: ( [4020,4021]" dest="(: ( [4548,4549]"/>
  <match src="): ) [80931,80932]" dest="): ) [72986,72987]"/>
  <match src="identifier: stringify [31816,31825]" dest="identifier: stringify [49528,49537]"/>
  <match src="memory: memory [8637,8643]" dest="memory: memory [9165,9171]"/>
  <match src="inheritance_specifier [107047,107052]" dest="inheritance_specifier [82633,82638]"/>
  <match src="address: address [30049,30056]" dest="address: address [47761,47768]"/>
  <match src=",: , [4662,4663]" dest=",: , [5190,5191]"/>
  <match src="state_mutability [2625,2629]" dest="state_mutability [3153,3157]"/>
  <match src="identifier: Balance [86877,86884]" dest="identifier: Balance [28668,28675]"/>
  <match src="internal: internal [45002,45010]" dest="internal: internal [15099,15107]"/>
  <match src="identifier: newPhantom [80398,80408]" dest="identifier: newDebt [66340,66347]"/>
  <match src="identifier: lessPhantom [81309,81320]" dest="identifier: totalCoupons [61794,61806]"/>
  <match src="type_name [41981,41988]" dest="type_name [12078,12085]"/>
  <match src="(: ( [52678,52679]" dest="(: ( [20802,20803]"/>
  <match src="identifier: file [29452,29456]" dest="identifier: file [47164,47168]"/>
  <match src="identifier: candidates [103405,103415]" dest="identifier: candidates [42791,42801]"/>
  <match src="]: ] [104690,104691]" dest="]: ] [44076,44077]"/>
  <match src="view: view [91143,91147]" dest="view: view [30529,30533]"/>
  <match src="identifier: sub [6607,6610]" dest="identifier: sub [7135,7138]"/>
  <match src="pure: pure [45424,45428]" dest="pure: pure [15521,15525]"/>
  <match src="type_name [16008,16015]" dest="type_name [17652,17659]"/>
  <match src="): ) [6063,6064]" dest="): ) [6591,6592]"/>
  <match src="(: ( [27910,27911]" dest="(: ( [45622,45623]"/>
  <match src="}: } [106342,106343]" dest="}: } [69486,69487]"/>
  <match src="return: return [90963,90969]" dest="return: return [30349,30355]"/>
  <match src="identifier: a [3447,3448]" dest="identifier: a [3975,3976]"/>
  <match src="primitive_type [50931,50938]" dest="primitive_type [55638,55645]"/>
  <match src="): ) [90867,90868]" dest="): ) [30253,30254]"/>
  <match src="function_definition [50675,50843]" dest="function_definition [55368,55590]"/>
  <match src="using: using [5661,5666]" dest="using: using [6189,6194]"/>
  <match src="call_argument [36806,36840]" dest="call_argument [54518,54552]"/>
  <match src="view: view [52407,52411]" dest="view: view [20531,20535]"/>
  <match src="parameter [50706,50720]" dest="parameter [55408,55422]"/>
  <match src="member_expression [101286,101352]" dest="member_expression [40672,40738]"/>
  <match src="primitive_type [103509,103516]" dest="primitive_type [42895,42902]"/>
  <match src="string [56636,56661]" dest="string [72904,72935]"/>
  <match src="uint256: uint256 [49725,49732]" dest="uint256: uint256 [26108,26115]"/>
  <match src="if: if [63985,63987]" dest="if: if [67907,67909]"/>
  <match src="member_expression [102990,103003]" dest="member_expression [42376,42389]"/>
  <match src="state_mutability [386,390]" dest="state_mutability [914,918]"/>
  <match src="(: ( [46564,46565]" dest="(: ( [16661,16662]"/>
  <match src="parameter [8044,8060]" dest="parameter [8572,8588]"/>
  <match src="}: } [45129,45130]" dest="}: } [15226,15227]"/>
  <match src="primitive_type [7185,7192]" dest="primitive_type [7713,7720]"/>
  <match src="=: = [65687,65688]" dest="=: = [67765,67766]"/>
  <match src="identifier: msg [81019,81022]" dest="identifier: msg [72606,72609]"/>
  <match src="call_expression [81668,81802]" dest="call_expression [79769,79808]"/>
  <match src="function: function [8773,8781]" dest="function: function [9301,9309]"/>
  <match src="parameter [13012,13027]" dest="parameter [24313,24328]"/>
  <match src="primitive_type [53370,53374]" dest="primitive_type [21494,21498]"/>
  <match src="(: ( [61910,61911]" dest="(: ( [26965,26966]"/>
  <match src="view: view [11513,11517]" dest="view: view [22814,22818]"/>
  <match src=".: . [78618,78619]" dest=".: . [63181,63182]"/>
  <match src="identifier: dollar [107755,107761]" dest="identifier: dollar [56205,56211]"/>
  <match src="identifier: coupons [102919,102926]" dest="identifier: coupons [42305,42312]"/>
  <match src="identifier: self [8056,8060]" dest="identifier: self [8584,8588]"/>
  <match src="visibility [46262,46270]" dest="visibility [16359,16367]"/>
  <match src="identifier: D256 [6611,6615]" dest="identifier: D256 [7139,7143]"/>
  <match src="function_body [44874,44950]" dest="function_body [14971,15047]"/>
  <match src="(: ( [839,840]" dest="(: ( [1367,1368]"/>
  <match src="type_name [53579,53583]" dest="type_name [21703,21707]"/>
  <match src="event_definition [78957,79023]" dest="event_definition [70552,70683]"/>
  <match src="number_literal: 0 [33704,33705]" dest="number_literal: 0 [51416,51417]"/>
  <match src=",: , [100349,100350]" dest=",: , [39735,39736]"/>
  <match src="primitive_type [77476,77483]" dest="primitive_type [61626,61633]"/>
  <match src="identifier: spender [52099,52106]" dest="identifier: spender [20223,20230]"/>
  <match src="=: = [35526,35527]" dest="=: = [53238,53239]"/>
  <match src="parameter [52768,52778]" dest="parameter [20892,20902]"/>
  <match src=",: , [101376,101377]" dest=",: , [40762,40763]"/>
  <match src="type_name [46285,46292]" dest="type_name [16382,16389]"/>
  <match src="): ) [6762,6763]" dest="): ) [7290,7291]"/>
  <match src="external: external [52982,52990]" dest="external: external [21106,21114]"/>
  <match src=".: . [99019,99020]" dest=".: . [38405,38406]"/>
  <match src="call_expression [75653,75660]" dest="call_expression [61380,61387]"/>
  <match src="call_struct_argument [6929,6971]" dest="call_struct_argument [7457,7499]"/>
  <match src="visibility [41305,41312]" dest="visibility [11402,11409]"/>
  <match src="function: function [97833,97841]" dest="function: function [37219,37227]"/>
  <match src="call_expression [94336,94372]" dest="call_expression [33722,33758]"/>
  <match src="identifier: lockedUntil [104532,104543]" dest="identifier: lockedUntil [43918,43929]"/>
  <match src="member_expression [82072,82084]" dest="member_expression [79974,79986]"/>
  <match src="): ) [7477,7478]" dest="): ) [8005,8006]"/>
  <match src="identifier: State [87334,87339]" dest="identifier: State [29125,29130]"/>
  <match src="user_defined_type [8632,8636]" dest="user_defined_type [9160,9164]"/>
  <match src="identifier: a [6136,6137]" dest="identifier: a [6664,6665]"/>
  <match src="identifier: debt [87003,87007]" dest="identifier: debt [28794,28798]"/>
  <match src="): ) [56661,56662]" dest="): ) [72944,72945]"/>
  <match src="identifier: onlyFrozen [79932,79942]" dest="identifier: onlyFrozenOrFluid [72553,72570]"/>
  <match src=",: , [51239,51240]" dest=",: , [64544,64545]"/>
  <match src="call_argument [79547,79552]" dest="call_argument [71085,71090]"/>
  <match src=".: . [103811,103812]" dest=".: . [43197,43198]"/>
  <match src="return_statement [93221,93366]" dest="return_statement [32607,32752]"/>
  <match src="return_type_definition [8316,8337]" dest="return_type_definition [8844,8865]"/>
  <match src="): ) [79357,79358]" dest="): ) [78272,78273]"/>
  <match src="identifier: _state [92177,92183]" dest="identifier: _state [31563,31569]"/>
  <match src="type_name [45041,45053]" dest="type_name [15138,15150]"/>
  <match src="type_name [31427,31434]" dest="type_name [49139,49146]"/>
  <match src="array_access [101106,101130]" dest="array_access [40492,40516]"/>
  <match src="uint256: uint256 [4653,4660]" dest="uint256: uint256 [5181,5188]"/>
  <match src="parameter [13063,13067]" dest="parameter [24364,24368]"/>
  <match src="call_argument [8556,8602]" dest="call_argument [9084,9130]"/>
  <match src="array_access [104317,104345]" dest="array_access [43703,43731]"/>
  <match src="call_expression [83517,83576]" dest="call_expression [78288,78352]"/>
  <match src="parenthesized_expression [27910,28159]" dest="parenthesized_expression [45622,45871]"/>
  <match src="return: return [71718,71724]" dest="return: return [58619,58625]"/>
  <match src="member_expression [104667,104703]" dest="member_expression [44053,44089]"/>
  <match src="): ) [98721,98722]" dest="): ) [38107,38108]"/>
  <match src=",: , [50806,50807]" dest=",: , [55464,55465]"/>
  <match src="address: address [95719,95726]" dest="address: address [35105,35112]"/>
  <match src="parameter [95264,95271]" dest="parameter [34650,34657]"/>
  <match src="}: } [98097,98098]" dest="}: } [37483,37484]"/>
  <match src="[: [ [95662,95663]" dest="[: [ [35048,35049]"/>
  <match src="}: } [44745,44746]" dest="}: } [14842,14843]"/>
  <match src=".: . [99728,99729]" dest=".: . [39114,39115]"/>
  <match src="type_name [42693,42700]" dest="type_name [12790,12797]"/>
  <match src="state_mutability [45659,45663]" dest="state_mutability [15756,15760]"/>
  <match src="type_name [52780,52784]" dest="type_name [20904,20908]"/>
  <match src="(: ( [28466,28467]" dest="(: ( [46178,46179]"/>
  <match src="state_mutability [55477,55481]" dest="state_mutability [17929,17933]"/>
  <match src="uint256: uint256 [76751,76758]" dest="uint256: uint256 [18133,18140]"/>
  <match src="call_argument [35492,35509]" dest="call_argument [53204,53221]"/>
  <match src="return_statement [95283,95318]" dest="return_statement [34669,34704]"/>
  <match src="(: ( [102805,102806]" dest="(: ( [42191,42192]"/>
  <match src="visibility [66316,66324]" dest="visibility [72536,72544]"/>
  <match src="identifier: token1 [51470,51476]" dest="identifier: to [60899,60901]"/>
  <match src="type_name [53065,53069]" dest="type_name [21189,21193]"/>
  <match src="identifier: Burn [53212,53216]" dest="identifier: Burn [21336,21340]"/>
  <match src="identifier: balanceCheck [82749,82761]" dest="identifier: balanceCheck [58089,58101]"/>
  <match src="user_defined_type [86467,86474]" dest="user_defined_type [28258,28265]"/>
  <match src="pure: pure [32832,32836]" dest="pure: pure [50544,50548]"/>
  <match src="binary_expression [7573,7578]" dest="binary_expression [8101,8106]"/>
  <match src="(: ( [13466,13467]" dest="(: ( [24767,24768]"/>
  <match src="return_statement [1412,1421]" dest="return_statement [1940,1949]"/>
  <match src="primitive_type [70576,70583]" dest="primitive_type [81600,81607]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [88472,88538]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [75662,75728]"/>
  <match src="struct_member [86681,86712]" dest="struct_member [28472,28503]"/>
  <match src="type_name [104485,104492]" dest="type_name [43871,43878]"/>
  <match src="contract_body [49581,49765]" dest="contract_body [25964,26148]"/>
  <match src="visibility [73734,73742]" dest="visibility [56424,56432]"/>
  <match src="&quot;: &quot; [21120,21121]" dest="&quot;: &quot; [63289,63290]"/>
  <match src="variable_declaration_tuple [65275,65396]" dest="variable_declaration_tuple [66793,66835]"/>
  <match src="assignment_expression [101106,101233]" dest="assignment_expression [40492,40619]"/>
  <match src="call_expression [81862,81869]" dest="call_expression [72444,72451]"/>
  <match src="call_argument [82249,82280]" dest="call_argument [80189,80200]"/>
  <match src=".: . [100850,100851]" dest=".: . [40236,40237]"/>
  <match src="return: return [97917,97923]" dest="return: return [37303,37309]"/>
  <match src="return: return [91853,91859]" dest="return: return [31239,31245]"/>
  <match src="return_type_definition [53916,53930]" dest="return_type_definition [22040,22054]"/>
  <match src="=: = [94065,94066]" dest="=: = [33451,33452]"/>
  <match src="function_definition [44497,44609]" dest="function_definition [14594,14706]"/>
  <match src="type_name [32850,32855]" dest="type_name [50562,50567]"/>
  <match src="number_literal: 41 [35335,35337]" dest="number_literal: 41 [53047,53049]"/>
  <match src="visibility [61913,61921]" dest="visibility [26968,26976]"/>
  <match src="(: ( [89522,89523]" dest="(: ( [76712,76713]"/>
  <match src="user_defined_type [90519,90531]" dest="user_defined_type [29905,29917]"/>
  <match src="user_defined_type [8955,8959]" dest="user_defined_type [9483,9487]"/>
  <match src="return_type_definition [96429,96443]" dest="return_type_definition [35815,35829]"/>
  <match src="(: ( [794,795]" dest="(: ( [1322,1323]"/>
  <match src="contract_declaration [61776,61947]" dest="contract_declaration [26831,27002]"/>
  <match src="type_name [26111,26118]" dest="type_name [55621,55628]"/>
  <match src="return: return [93770,93776]" dest="return: return [33156,33162]"/>
  <match src="identifier: account [79066,79073]" dest="identifier: account [70454,70461]"/>
  <match src="address: address [62861,62868]" dest="address: address [78131,78138]"/>
  <match src="identifier: coupons [101264,101271]" dest="identifier: coupons [40650,40657]"/>
  <match src="identifier: i [95190,95191]" dest="identifier: i [34576,34577]"/>
  <match src=",: , [81717,81718]" dest=",: , [79790,79791]"/>
  <match src="primitive_type [6451,6458]" dest="primitive_type [6979,6986]"/>
  <match src="function_body [80269,80954]" dest="function_body [71486,71978]"/>
  <match src="call_expression [32262,32286]" dest="call_expression [49974,49998]"/>
  <match src="identifier: balance [102886,102893]" dest="identifier: balance [42272,42279]"/>
  <match src="identifier: file [31994,31998]" dest="identifier: file [49706,49710]"/>
  <match src="identifier: allowance [12268,12277]" dest="identifier: allowance [23569,23578]"/>
  <match src="pure: pure [52923,52927]" dest="pure: pure [21047,21051]"/>
  <match src="type_name [97997,98004]" dest="type_name [37383,37390]"/>
  <match src="identifier: dollar [70363,70369]" dest="identifier: dollar [58708,58714]"/>
  <match src="memory: memory [45792,45798]" dest="memory: memory [15889,15895]"/>
  <match src="&quot;: &quot; [81172,81173]" dest="&quot;: &quot; [81343,81344]"/>
  <match src="call_argument [105734,105776]" dest="call_argument [68878,68920]"/>
  <match src="call_argument [81340,81350]" dest="call_argument [72178,72188]"/>
  <match src="type_cast_expression [83139,83152]" dest="type_cast_expression [58991,59004]"/>
  <match src=".: . [64812,64813]" dest=".: . [19663,19664]"/>
  <match src=".: . [92458,92459]" dest=".: . [31844,31845]"/>
  <match src="): ) [46367,46368]" dest="): ) [16464,16465]"/>
  <match src="mapping: mapping [87200,87207]" dest="mapping: mapping [28991,28998]"/>
  <match src=".: . [82697,82698]" dest=".: . [62765,62766]"/>
  <match src="): ) [104589,104590]" dest="): ) [43975,43976]"/>
  <match src="(: ( [44289,44290]" dest="(: ( [14386,14387]"/>
  <match src="private: private [32820,32827]" dest="private: private [50532,50539]"/>
  <match src="string: string [31581,31587]" dest="string: string [49293,49299]"/>
  <match src="call_argument [55326,55327]" dest="call_argument [80279,80280]"/>
  <match src="(: ( [29604,29605]" dest="(: ( [47316,47317]"/>
  <match src="type_cast_expression [19740,19750]" dest="type_cast_expression [63934,63944]"/>
  <match src="}: } [98440,98441]" dest="}: } [37826,37827]"/>
  <match src=".: . [101340,101341]" dest=".: . [40726,40727]"/>
  <match src="identifier: totalRewardedWithPhantom [71293,71317]" dest="identifier: totalCoupons [67340,67352]"/>
  <match src="identifier: reason [100228,100234]" dest="identifier: reason [39614,39620]"/>
  <match src=".: . [91976,91977]" dest=".: . [31362,31363]"/>
  <match src="): ) [9817,9818]" dest="): ) [10345,10346]"/>
  <match src="comment: /* Bootstrapping */ [41352,41371]" dest="comment: /* Bootstrapping */ [11449,11468]"/>
  <match src="identifier: account [99268,99275]" dest="identifier: account [38654,38661]"/>
  <match src="identifier: start [79091,79096]" dest="identifier: start [70479,70484]"/>
  <match src="}: } [33646,33647]" dest="}: } [51358,51359]"/>
  <match src="): ) [93576,93577]" dest="): ) [32962,32963]"/>
  <match src="identifier: lockedUntil [86165,86176]" dest="identifier: lockedUntil [27956,27967]"/>
  <match src="primitive_type [34889,34894]" dest="primitive_type [52601,52606]"/>
  <match src="variable_declaration [89036,89055]" dest="variable_declaration [76226,76245]"/>
  <match src=",: , [30676,30677]" dest=",: , [48388,48389]"/>
  <match src="contract_body [90463,96826]" dest="contract_body [29849,36212]"/>
  <match src="user_defined_type [8812,8816]" dest="user_defined_type [9340,9344]"/>
  <match src=".: . [9637,9638]" dest=".: . [10165,10166]"/>
  <match src="call_expression [77081,77136]" dest="call_expression [82938,82994]"/>
  <match src="(: ( [28917,28918]" dest="(: ( [46629,46630]"/>
  <match src="call_argument [99302,99308]" dest="call_argument [38688,38694]"/>
  <match src="view: view [71142,71146]" dest="view: view [67126,67130]"/>
  <match src=",: , [99823,99824]" dest=",: , [39209,39210]"/>
  <match src="call_expression [47846,47993]" dest="call_expression [55673,55726]"/>
  <match src=":: : [6332,6333]" dest=":: : [6860,6861]"/>
  <match src="member_expression [48704,48716]" dest="member_expression [62478,62490]"/>
  <match src="call_argument [101370,101376]" dest="call_argument [40756,40762]"/>
  <match src="(: ( [44125,44126]" dest="(: ( [14222,14223]"/>
  <match src="/=: /= [34033,34035]" dest="/=: /= [51745,51747]"/>
  <match src="primitive_type [79312,79319]" dest="primitive_type [70876,70883]"/>
  <match src="primitive_type [84613,84620]" dest="primitive_type [73941,73948]"/>
  <match src="member_expression [81340,81350]" dest="member_expression [72178,72188]"/>
  <match src="identifier: couponAllowances [93800,93816]" dest="identifier: couponAllowances [33186,33202]"/>
  <match src="parameter [95851,95868]" dest="parameter [35237,35254]"/>
  <match src="primitive_type [95851,95858]" dest="primitive_type [35237,35244]"/>
  <match src=",: , [6833,6834]" dest=",: , [7361,7362]"/>
  <match src="return: return [96454,96460]" dest="return: return [35840,35846]"/>
  <match src="string_literal [876,908]" dest="string_literal [1404,1436]"/>
  <match src="identifier: amount [49609,49615]" dest="identifier: amount [25992,25998]"/>
  <match src=".: . [94568,94569]" dest=".: . [33954,33955]"/>
  <match src="member_expression [70363,70381]" dest="member_expression [58708,58726]"/>
  <match src="type_name [50706,50713]" dest="type_name [55408,55415]"/>
  <match src="return_type_definition [45770,45799]" dest="return_type_definition [15867,15896]"/>
  <match src="identifier: sub [101366,101369]" dest="identifier: sub [40752,40755]"/>
  <match src="): ) [8218,8219]" dest="): ) [8746,8747]"/>
  <match src="call_expression [32947,32970]" dest="call_expression [50659,50682]"/>
  <match src="{: { [6704,6705]" dest="{: { [7232,7233]"/>
  <match src="): ) [847,848]" dest="): ) [1375,1376]"/>
  <match src="expression_statement [51096,51337]" dest="expression_statement [64495,64667]"/>
  <match src=".: . [105981,105982]" dest=".: . [69125,69126]"/>
  <match src="identifier: candidates [103812,103822]" dest="identifier: candidates [43198,43208]"/>
  <match src="binary_expression [1396,1401]" dest="binary_expression [1924,1929]"/>
  <match src=".: . [8396,8397]" dest=".: . [8924,8925]"/>
  <match src="user_defined_type [45946,45958]" dest="user_defined_type [16043,16055]"/>
  <match src="function: function [49587,49595]" dest="function: function [25970,25978]"/>
  <match src="): ) [66441,66442]" dest="): ) [62283,62284]"/>
  <match src="identifier: amount [74253,74259]" dest="identifier: amount [64348,64354]"/>
  <match src="return: return [96044,96050]" dest="return: return [35430,35436]"/>
  <match src="}: } [104729,104730]" dest="}: } [44115,44116]"/>
  <match src="array_access [103398,103426]" dest="array_access [42784,42812]"/>
  <match src="identifier: candidate [104190,104199]" dest="identifier: candidate [43576,43585]"/>
  <match src="event_paramater [79129,79149]" dest="event_paramater [78067,78081]"/>
  <match src="identifier: balance [99721,99728]" dest="identifier: balance [39107,39114]"/>
  <match src="state_mutability [95745,95749]" dest="state_mutability [35131,35135]"/>
  <match src="&quot;: &quot; [19835,19836]" dest="&quot;: &quot; [64083,64084]"/>
  <match src="(: ( [85167,85168]" dest="(: ( [74495,74496]"/>
  <match src="return: return [6714,6720]" dest="return: return [7242,7248]"/>
  <match src="identifier: add [98552,98555]" dest="identifier: add [37938,37941]"/>
  <match src="): ) [20089,20090]" dest="): ) [64739,64740]"/>
  <match src="function_definition [91217,91353]" dest="function_definition [30603,30739]"/>
  <match src="type_name [4726,4733]" dest="type_name [5254,5261]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [44059,44081]" dest="identifier: INITIAL_STAKE_MULTIPLE [14156,14178]"/>
  <match src="call_expression [44707,44747]" dest="call_expression [14804,14844]"/>
  <match src="call_argument [79427,79432]" dest="call_argument [70990,70995]"/>
  <match src="type_name [76769,76776]" dest="type_name [18191,18198]"/>
  <match src="parameter [93685,93700]" dest="parameter [33071,33086]"/>
  <match src="(: ( [10012,10013]" dest="(: ( [10540,10541]"/>
  <match src="function_body [10026,10141]" dest="function_body [10554,10669]"/>
  <match src="function: function [96233,96241]" dest="function: function [35619,35627]"/>
  <match src="uint256: uint256 [7185,7192]" dest="uint256: uint256 [7713,7720]"/>
  <match src="]: ] [103425,103426]" dest="]: ] [42811,42812]"/>
  <match src="identifier: IERC20 [15700,15706]" dest="identifier: Curve [60265,60270]"/>
  <match src="type_name [68159,68166]" dest="type_name [65602,65609]"/>
  <match src="identifier: GOVERNANCE_PROPOSAL_THRESHOLD [44912,44941]" dest="identifier: GOVERNANCE_PROPOSAL_THRESHOLD [15009,15038]"/>
  <match src="uint256: uint256 [21020,21027]" dest="uint256: uint256 [56170,56177]"/>
  <match src="memory: memory [8075,8081]" dest="memory: memory [8603,8609]"/>
  <match src="type_name [79240,79247]" dest="type_name [82837,82844]"/>
  <match src="return_type_definition [53982,53996]" dest="return_type_definition [22106,22120]"/>
  <match src="string [48673,48692]" dest="string [64247,64284]"/>
  <match src="variable_declaration [104485,104504]" dest="variable_declaration [43871,43890]"/>
  <match src="type_name [91251,91258]" dest="type_name [30637,30644]"/>
  <match src="type_name [95544,95551]" dest="type_name [34930,34937]"/>
  <match src="type_name [53269,53276]" dest="type_name [21393,21400]"/>
  <match src="type_name [21805,21812]" dest="type_name [63476,63483]"/>
  <match src=".: . [93783,93784]" dest=".: . [33169,33170]"/>
  <match src="parameter [27800,27812]" dest="parameter [45512,45524]"/>
  <match src="}: } [89751,89752]" dest="}: } [76941,76942]"/>
  <match src=".: . [98697,98698]" dest=".: . [38083,38084]"/>
  <match src="pure: pure [6148,6152]" dest="pure: pure [6676,6680]"/>
  <match src="call_argument [105790,105794]" dest="call_argument [68934,68938]"/>
  <match src="address: address [12278,12285]" dest="address: address [23579,23586]"/>
  <match src="return_type_definition [6282,6303]" dest="return_type_definition [6810,6831]"/>
  <match src="{: { [85911,85912]" dest="{: { [27702,27703]"/>
  <match src="identifier: payloadB [32513,32521]" dest="identifier: payloadB [50225,50233]"/>
  <match src="identifier: b [6832,6833]" dest="identifier: b [7360,7361]"/>
  <match src="): ) [29774,29775]" dest="): ) [47486,47487]"/>
  <match src="): ) [81458,81459]" dest="): ) [72741,72742]"/>
  <match src="identifier: account [84621,84628]" dest="identifier: account [73949,73956]"/>
  <match src="): ) [79953,79954]" dest="): ) [72581,72582]"/>
  <match src="identifier: _state [99252,99258]" dest="identifier: _state [38638,38644]"/>
  <match src="identifier: amount [17732,17738]" dest="identifier: amount [17760,17766]"/>
  <match src="visibility [45756,45764]" dest="visibility [15853,15861]"/>
  <match src="parameter [9146,9159]" dest="parameter [9674,9687]"/>
  <match src="): ) [92817,92818]" dest="): ) [32203,32204]"/>
  <match src="address: address [70382,70389]" dest="address: address [58727,58734]"/>
  <match src="call_expression [6923,6973]" dest="call_expression [7451,7501]"/>
  <match src="uint256: uint256 [30736,30743]" dest="uint256: uint256 [48448,48455]"/>
  <match src="): ) [99831,99832]" dest="): ) [39217,39218]"/>
  <match src="identifier: b [8824,8825]" dest="identifier: b [9352,9353]"/>
  <match src="identifier: D256 [44857,44861]" dest="identifier: D256 [14954,14958]"/>
  <match src="): ) [79675,79676]" dest="): ) [83123,83124]"/>
  <match src="function_definition [8937,9092]" dest="function_definition [9465,9620]"/>
  <match src="(: ( [45299,45300]" dest="(: ( [15396,15397]"/>
  <match src="type_name [77476,77483]" dest="type_name [61626,61633]"/>
  <match src="return_type_definition [11518,11535]" dest="return_type_definition [22819,22836]"/>
  <match src=".: . [100082,100083]" dest=".: . [39468,39469]"/>
  <match src="expression_statement [101529,101637]" dest="expression_statement [40915,41023]"/>
  <match src="primitive_type [76751,76758]" dest="primitive_type [18133,18140]"/>
  <match src="comment: /* Oracle */ [41517,41529]" dest="comment: /* Oracle */ [11614,11626]"/>
  <match src="member_expression [91455,91477]" dest="member_expression [30841,30863]"/>
  <match src="identifier: outstandingCoupons [102767,102785]" dest="identifier: outstandingCoupons [42153,42171]"/>
  <match src="identifier: result [35830,35836]" dest="identifier: result [53542,53548]"/>
  <match src="enum_value: Fluid [85938,85943]" dest="enum_value: Fluid [27729,27734]"/>
  <match src="identifier: value [8001,8006]" dest="identifier: value [8529,8534]"/>
  <match src="(: ( [97963,97964]" dest="(: ( [37349,37350]"/>
  <match src="return: return [95283,95289]" dest="return: return [34669,34675]"/>
  <match src=".: . [75687,75688]" dest=".: . [61401,61402]"/>
  <match src="member_expression [101243,101271]" dest="member_expression [40629,40657]"/>
  <match src="member_expression [8186,8200]" dest="member_expression [8714,8728]"/>
  <match src="block_statement [10060,10093]" dest="block_statement [10588,10621]"/>
  <match src=",: , [32369,32370]" dest=",: , [50081,50082]"/>
  <match src=".: . [9643,9644]" dest=".: . [10171,10172]"/>
  <match src="parameter [46392,46399]" dest="parameter [16489,16496]"/>
  <match src="identifier: slot [89645,89649]" dest="identifier: slot [76835,76839]"/>
  <match src="): ) [76729,76730]" dest="): ) [58347,58348]"/>
  <match src="}: } [104404,104405]" dest="}: } [43790,43791]"/>
  <match src="call_argument [31226,31231]" dest="call_argument [48938,48943]"/>
  <match src="expression_statement [101243,101386]" dest="expression_statement [40629,40772]"/>
  <match src="memory: memory [89042,89048]" dest="memory: memory [76232,76238]"/>
  <match src="): ) [91737,91738]" dest="): ) [31123,31124]"/>
  <match src="): ) [53694,53695]" dest="): ) [21818,21819]"/>
  <match src="primitive_type [62986,62993]" dest="primitive_type [82766,82773]"/>
  <match src="external: external [54019,54027]" dest="external: external [22143,22151]"/>
  <match src="return_statement [46304,46329]" dest="return_statement [16401,16426]"/>
  <match src="visibility [6029,6037]" dest="visibility [6557,6565]"/>
  <match src="string_literal [83441,83453]" dest="string_literal [80354,80363]"/>
  <match src="identifier: Require [83632,83639]" dest="identifier: Require [78806,78813]"/>
  <match src="parameter [29466,29480]" dest="parameter [47178,47192]"/>
  <match src="event_paramater [78993,79006]" dest="event_paramater [70607,70620]"/>
  <match src="call_argument [30211,30567]" dest="call_argument [47923,48279]"/>
  <match src="member_expression [96051,96068]" dest="member_expression [35437,35454]"/>
  <match src="=: = [429,430]" dest="=: = [957,958]"/>
  <match src="identifier: coupons [100805,100812]" dest="identifier: coupons [40191,40198]"/>
  <match src="{: { [86765,86766]" dest="{: { [28556,28557]"/>
  <match src="identifier: _state [104317,104323]" dest="identifier: _state [43703,43709]"/>
  <match src="memory: memory [65674,65680]" dest="memory: memory [67739,67745]"/>
  <match src="): ) [491,492]" dest="): ) [1019,1020]"/>
  <match src="): ) [34671,34672]" dest="): ) [52383,52384]"/>
  <match src="type_name [43226,43233]" dest="type_name [13323,13330]"/>
  <match src="block_statement [93158,93211]" dest="block_statement [32544,32597]"/>
  <match src="visibility [98642,98650]" dest="visibility [38028,38036]"/>
  <match src="(: ( [12332,12333]" dest="(: ( [23633,23634]"/>
  <match src="): ) [98433,98434]" dest="): ) [37819,37820]"/>
  <match src="member_expression [92972,93004]" dest="member_expression [32358,32390]"/>
  <match src="modifier: modifier [106130,106138]" dest="modifier: modifier [69274,69282]"/>
  <match src="): ) [101232,101233]" dest="): ) [40618,40619]"/>
  <match src="(: ( [7441,7442]" dest="(: ( [7969,7970]"/>
  <match src="identifier: value [78945,78950]" dest="identifier: value [61069,61074]"/>
  <match src="return_statement [94317,94445]" dest="return_statement [33703,33831]"/>
  <match src="function_definition [92106,92206]" dest="function_definition [31492,31592]"/>
  <match src=".: . [103850,103851]" dest=".: . [43236,43237]"/>
  <match src="{: { [45682,45683]" dest="{: { [15779,15780]"/>
  <match src="type_name [86585,86592]" dest="type_name [28376,28383]"/>
  <match src="return_statement [91646,91674]" dest="return_statement [31032,31060]"/>
  <match src="identifier: b [3258,3259]" dest="identifier: b [3786,3787]"/>
  <match src="function: function [93510,93518]" dest="function: function [32896,32904]"/>
  <match src="identifier: balanceOfRewardedWithPhantom [71373,71401]" dest="identifier: bonded [78955,78961]"/>
  <match src="uint256: uint256 [76592,76599]" dest="uint256: uint256 [62419,62426]"/>
  <match src="primitive_type [86443,86450]" dest="primitive_type [28234,28241]"/>
  <match src="event: event [78781,78786]" dest="event: event [70299,70304]"/>
  <match src="array_access [96051,96079]" dest="array_access [35437,35465]"/>
  <match src="comment: // 2 cycles [42596,42607]" dest="comment: // 2 cycles [12693,12704]"/>
  <match src="primitive_type [30075,30082]" dest="primitive_type [47787,47794]"/>
  <match src="return: return [33609,33615]" dest="return: return [51321,51327]"/>
  <match src="call_argument [44345,44373]" dest="call_argument [14442,14470]"/>
  <match src="uint256: uint256 [6128,6135]" dest="uint256: uint256 [6656,6663]"/>
  <match src=",: , [31231,31232]" dest=",: , [48943,48944]"/>
  <match src="parameter [94207,94246]" dest="parameter [33593,33632]"/>
  <match src="identifier: stringify [34634,34643]" dest="identifier: stringify [52346,52355]"/>
  <match src="): ) [8336,8337]" dest="): ) [8864,8865]"/>
  <match src="state_variable_declaration [41376,41428]" dest="state_variable_declaration [11473,11525]"/>
  <match src=".: . [100300,100301]" dest=".: . [39686,39687]"/>
  <match src="sstore: sstore [89705,89711]" dest="sstore: sstore [76895,76901]"/>
  <match src="external: external [53779,53787]" dest="external: external [21903,21911]"/>
  <match src="): ) [6266,6267]" dest="): ) [6794,6795]"/>
  <match src="identifier: redeemable [99028,99038]" dest="identifier: redeemable [38414,38424]"/>
  <match src="source_file [0,107910]" dest="source_file [0,83432]"/>
  <match src="type_name [9566,9570]" dest="type_name [10094,10098]"/>
  <match src="&quot;: &quot; [83662,83663]" dest="&quot;: &quot; [78919,78920]"/>
  <match src="identifier: candidate [103562,103571]" dest="identifier: candidate [42948,42957]"/>
  <match src="function_definition [20988,21330]" dest="function_definition [56146,56380]"/>
  <match src="(: ( [45205,45206]" dest="(: ( [15302,15303]"/>
  <match src="(: ( [33080,33081]" dest="(: ( [50792,50793]"/>
  <match src="uint256: uint256 [42126,42133]" dest="uint256: uint256 [12223,12230]"/>
  <match src="primitive_type [36806,36811]" dest="primitive_type [54518,54523]"/>
  <match src="!=: != [105752,105754]" dest="!=: != [68896,68898]"/>
  <match src="identifier: PoolSetters [78466,78477]" dest="identifier: Setters [70192,70199]"/>
  <match src="(: ( [81440,81441]" dest="(: ( [72723,72724]"/>
  <match src="call_argument [20072,20081]" dest="call_argument [64715,64724]"/>
  <match src="): ) [35174,35175]" dest="): ) [52886,52887]"/>
  <match src=",: , [79006,79007]" dest=",: , [70620,70621]"/>
  <match src="parameter [355,364]" dest="parameter [883,892]"/>
  <match src="type_name [52810,52814]" dest="type_name [20934,20938]"/>
  <match src="identifier: add [100707,100710]" dest="identifier: add [40093,40096]"/>
  <match src="function: function [5916,5924]" dest="function: function [6444,6452]"/>
  <match src="uint256: uint256 [94797,94804]" dest="uint256: uint256 [34183,34190]"/>
  <match src="expression_statement [81010,81031]" dest="expression_statement [72597,72618]"/>
  <match src="returns: returns [8316,8323]" dest="returns: returns [8844,8851]"/>
  <match src="primitive_type [64893,64900]" dest="primitive_type [72628,72635]"/>
  <match src="member_expression [101286,101299]" dest="member_expression [40672,40685]"/>
  <match src="call_argument [21945,21946]" dest="call_argument [63551,63552]"/>
  <match src="(: ( [92626,92627]" dest="(: ( [32012,32013]"/>
  <match src="address: address [13888,13895]" dest="address: address [25189,25196]"/>
  <match src="): ) [97653,97654]" dest="): ) [37039,37040]"/>
  <match src="(: ( [28384,28385]" dest="(: ( [46096,46097]"/>
  <match src="identifier: mint [54063,54067]" dest="identifier: mint [22187,22191]"/>
  <match src="return_statement [6916,6974]" dest="return_statement [7444,7502]"/>
  <match src="identifier: getCurrentEpochStrategy [94090,94113]" dest="identifier: getCurrentEpochStrategy [33476,33499]"/>
  <match src="parameter [96159,96166]" dest="parameter [35545,35552]"/>
  <match src="identifier: current [86287,86294]" dest="identifier: current [28078,28085]"/>
  <match src="-: - [51077,51078]" dest="-: - [64467,64468]"/>
  <match src="string_literal [20465,20498]" dest="string_literal [63099,63128]"/>
  <match src="identifier: dollar [91399,91405]" dest="identifier: dollar [30785,30791]"/>
  <match src="identifier: amount [22879,22885]" dest="identifier: amount [17616,17622]"/>
  <match src="type_name [51454,51461]" dest="type_name [60883,60890]"/>
  <match src="bool: bool [52721,52725]" dest="bool: bool [20845,20849]"/>
  <match src="type_name [6629,6636]" dest="type_name [7157,7164]"/>
  <match src="event: event [78840,78845]" dest="event: event [70358,70363]"/>
  <match src="pure: pure [43720,43724]" dest="pure: pure [13817,13821]"/>
  <match src="parameter [96291,96298]" dest="parameter [35677,35684]"/>
  <match src="member_expression [100897,100911]" dest="member_expression [40283,40297]"/>
  <match src="type_name [99165,99172]" dest="type_name [38551,38558]"/>
  <match src="type_name [4664,4671]" dest="type_name [5192,5199]"/>
  <match src="identifier: univ2 [83121,83126]" dest="identifier: dollar [58977,58983]"/>
  <match src="type_name [66434,66441]" dest="type_name [62276,62283]"/>
  <match src="function: function [101475,101483]" dest="function: function [40861,40869]"/>
  <match src="pure: pure [43484,43488]" dest="pure: pure [13581,13585]"/>
  <match src="identifier: candidate [96543,96552]" dest="identifier: candidate [35929,35938]"/>
  <match src="return_statement [36794,36842]" dest="return_statement [54506,54554]"/>
  <match src="return: return [45692,45698]" dest="return: return [15789,15795]"/>
  <match src="returns: returns [1317,1324]" dest="returns: returns [1845,1852]"/>
  <match src="{: { [45066,45067]" dest="{: { [15163,15164]"/>
  <match src="primitive_type [52300,52306]" dest="primitive_type [20424,20430]"/>
  <match src="pure: pure [7053,7057]" dest="pure: pure [7581,7585]"/>
  <match src="call_argument [30463,30468]" dest="call_argument [48175,48180]"/>
  <match src="identifier: Coupons [86467,86474]" dest="identifier: Coupons [28258,28265]"/>
  <match src="(: ( [80615,80616]" dest="(: ( [71679,71680]"/>
  <match src="): ) [89141,89142]" dest="): ) [76331,76332]"/>
  <match src="{: { [46499,46500]" dest="{: { [16596,16597]"/>
  <match src="identifier: sender [13406,13412]" dest="identifier: sender [24707,24713]"/>
  <match src="=: = [34960,34961]" dest="=: = [52672,52673]"/>
  <match src="return_type_definition [53570,53584]" dest="return_type_definition [21694,21708]"/>
  <match src="identifier: FILE [83219,83223]" dest="identifier: FILE [58830,58834]"/>
  <match src="call_argument [51013,51019]" dest="call_argument [55719,55725]"/>
  <match src="function_definition [32759,33713]" dest="function_definition [50471,51425]"/>
  <match src=",: , [81451,81452]" dest=",: , [72734,72735]"/>
  <match src="return_type_definition [92417,92434]" dest="return_type_definition [31803,31820]"/>
  <match src="call_argument [31816,31835]" dest="call_argument [49528,49547]"/>
  <match src="member_expression [104059,104107]" dest="member_expression [43445,43493]"/>
  <match src="identifier: price0Cumulative [65297,65313]" dest="identifier: newRedeemable [66802,66815]"/>
  <match src="call_expression [81995,82061]" dest="call_expression [80898,80957]"/>
  <match src="identifier: _state [99977,99983]" dest="identifier: _state [39363,39369]"/>
  <match src="): ) [65395,65396]" dest="): ) [66834,66835]"/>
  <match src="return: return [33859,33865]" dest="return: return [51571,51577]"/>
  <match src="primitive_type [86389,86396]" dest="primitive_type [28180,28187]"/>
  <match src="contract_body [88192,89754]" dest="contract_body [75382,76944]"/>
  <match src="returns: returns [2630,2637]" dest="returns: returns [3158,3165]"/>
  <match src="user_defined_type [7937,7941]" dest="user_defined_type [8465,8469]"/>
  <match src="uint256: uint256 [30075,30082]" dest="uint256: uint256 [47787,47794]"/>
  <match src="return_type_definition [96150,96167]" dest="return_type_definition [35536,35553]"/>
  <match src="state_mutability [52475,52479]" dest="state_mutability [20599,20603]"/>
  <match src="view: view [93993,93997]" dest="view: view [33379,33383]"/>
  <match src="mstore: mstore [33529,33535]" dest="mstore: mstore [51241,51247]"/>
  <match src=".: . [93619,93620]" dest=".: . [33005,33006]"/>
  <match src="=: = [41422,41423]" dest="=: = [11519,11520]"/>
  <match src="returns: returns [6678,6685]" dest="returns: returns [7206,7213]"/>
  <match src="identifier: Swap [53300,53304]" dest="identifier: Swap [21424,21428]"/>
  <match src=",: , [80789,80790]" dest=",: , [71826,71827]"/>
  <match src="identifier: result [33348,33354]" dest="identifier: result [51060,51066]"/>
  <match src="identifier: b [7193,7194]" dest="identifier: b [7721,7722]"/>
  <match src="identifier: SafeMath [97556,97564]" dest="identifier: SafeMath [36942,36950]"/>
  <match src="address: address [97997,98004]" dest="address: address [37383,37390]"/>
  <match src=".: . [98214,98215]" dest=".: . [37600,37601]"/>
  <match src="call_argument [96343,96363]" dest="call_argument [35729,35749]"/>
  <match src="identifier: outstanding [86340,86351]" dest="identifier: outstanding [28131,28142]"/>
  <match src="(: ( [93530,93531]" dest="(: ( [32916,32917]"/>
  <match src=".: . [98383,98384]" dest=".: . [37769,37770]"/>
  <match src="address: address [99813,99820]" dest="address: address [39199,39206]"/>
  <match src="function_body [29539,29955]" dest="function_body [47251,47667]"/>
  <match src="expression_statement [98510,98564]" dest="expression_statement [37896,37950]"/>
  <match src="): ) [79154,79155]" dest="): ) [70545,70546]"/>
  <match src="primitive_type [98063,98067]" dest="primitive_type [37449,37453]"/>
  <match src="type_name [86232,86239]" dest="type_name [28023,28030]"/>
  <match src="function_body [35681,36529]" dest="function_body [53393,54241]"/>
  <match src="user_defined_type [87121,87129]" dest="user_defined_type [28912,28920]"/>
  <match src="identifier: sender [80056,80062]" dest="identifier: sender [72238,72244]"/>
  <match src="call_argument [44904,44942]" dest="call_argument [15001,15039]"/>
  <match src="returns: returns [7750,7757]" dest="returns: returns [8278,8285]"/>
  <match src=",: , [81876,81877]" dest=",: , [72458,72459]"/>
  <match src="expression_statement [81813,81828]" dest="expression_statement [56119,56134]"/>
  <match src="identifier: MINIMUM_LIQUIDITY [53536,53553]" dest="identifier: MINIMUM_LIQUIDITY [21660,21677]"/>
  <match src=",: , [4100,4101]" dest=",: , [4628,4629]"/>
  <match src="&quot;: &quot; [24940,24941]" dest="&quot;: &quot; [78498,78499]"/>
  <match src="identifier: MinterAdded [25642,25653]" dest="identifier: CouponRedemption [60701,60717]"/>
  <match src="]: ] [104530,104531]" dest="]: ] [43916,43917]"/>
  <match src="function_body [104269,104405]" dest="function_body [43655,43791]"/>
  <match src="(: ( [46489,46490]" dest="(: ( [16586,16587]"/>
  <match src="identifier: _state [95785,95791]" dest="identifier: _state [35171,35177]"/>
  <match src="call_argument [79420,79424]" dest="call_argument [70983,70987]"/>
  <match src="parameter [84613,84628]" dest="parameter [73941,73956]"/>
  <match src="visibility [44418,44426]" dest="visibility [14515,14523]"/>
  <match src="): ) [5966,5967]" dest="): ) [6494,6495]"/>
  <match src=",: , [6255,6256]" dest=",: , [6783,6784]"/>
  <match src="(: ( [8382,8383]" dest="(: ( [8910,8911]"/>
  <match src="returns: returns [44432,44439]" dest="returns: returns [14529,14536]"/>
  <match src="address: address [101713,101720]" dest="address: address [41099,41106]"/>
  <match src="&quot;: &quot; [89615,89616]" dest="&quot;: &quot; [76805,76806]"/>
  <match src="identifier: transfer [52670,52678]" dest="identifier: transfer [20794,20802]"/>
  <match src="event_paramater [97640,97653]" dest="event_paramater [37026,37039]"/>
  <match src="struct_member [41958,41972]" dest="struct_member [12055,12069]"/>
  <match src="type_name [68132,68139]" dest="type_name [65755,65762]"/>
  <match src="return_type_definition [91033,91050]" dest="return_type_definition [30419,30436]"/>
  <match src="identifier: sender [82698,82704]" dest="identifier: sender [62766,62772]"/>
  <match src="expression_statement [77081,77137]" dest="expression_statement [82938,82995]"/>
  <match src="constant: constant [41726,41734]" dest="constant: constant [11823,11831]"/>
  <match src="bool: bool [97788,97792]" dest="bool: bool [37174,37178]"/>
  <match src="call_expression [94067,94115]" dest="call_expression [33453,33501]"/>
  <match src="identifier: totalRewardedWithPhantom [82518,82542]" dest="identifier: value [72646,72651]"/>
  <match src="pure: pure [9013,9017]" dest="pure: pure [9541,9545]"/>
  <match src="pure: pure [28895,28899]" dest="pure: pure [46607,46611]"/>
  <match src="identifier: epochs [95297,95303]" dest="identifier: epochs [34683,34689]"/>
  <match src="for: for [33076,33079]" dest="for: for [50788,50791]"/>
  <match src="identifier: recordedVote [95514,95526]" dest="identifier: recordedVote [34900,34912]"/>
  <match src="(: ( [8200,8201]" dest="(: ( [8728,8729]"/>
  <match src="{: { [91538,91539]" dest="{: { [30924,30925]"/>
  <match src="parameter [52650,52654]" dest="parameter [20774,20778]"/>
  <match src="member_expression [81995,82007]" dest="member_expression [80898,80910]"/>
  <match src="visibility [6648,6656]" dest="visibility [7176,7184]"/>
  <match src="primitive_type [51478,51485]" dest="primitive_type [61028,61035]"/>
  <match src="): ) [46399,46400]" dest="): ) [16496,16497]"/>
  <match src="string [25192,25227]" dest="string [79490,79520]"/>
  <match src="number_literal: 120 [27474,27477]" dest="number_literal: 120 [45186,45189]"/>
  <match src="state_variable_declaration [42627,42677]" dest="state_variable_declaration [12724,12774]"/>
  <match src=".: . [80932,80933]" dest=".: . [72987,72988]"/>
  <match src="identifier: RPAREN [29878,29884]" dest="identifier: RPAREN [47590,47596]"/>
  <match src="identifier: reserve1 [53828,53836]" dest="identifier: reserve1 [21952,21960]"/>
  <match src="(: ( [98603,98604]" dest="(: ( [37989,37990]"/>
  <match src="address: address [79050,79057]" dest="address: address [70438,70445]"/>
  <match src="identifier: getBootstrappingPeriod [95433,95455]" dest="identifier: getBootstrappingPeriod [34819,34841]"/>
  <match src="address: address [62746,62753]" dest="address: address [77825,77832]"/>
  <match src="variable_declaration [64236,64259]" dest="variable_declaration [80044,80061]"/>
  <match src="(: ( [8244,8245]" dest="(: ( [8772,8773]"/>
  <match src="call_expression [70363,70396]" dest="call_expression [58708,58741]"/>
  <match src="type_name [41534,41541]" dest="type_name [11631,11638]"/>
  <match src="function_definition [4640,4803]" dest="function_definition [5168,5331]"/>
  <match src="return_statement [4784,4797]" dest="return_statement [5312,5325]"/>
  <match src="identifier: b [7887,7888]" dest="identifier: b [8415,8416]"/>
  <match src="call_argument [28017,28021]" dest="call_argument [45729,45733]"/>
  <match src="function: function [46537,46545]" dest="function: function [16634,16642]"/>
  <match src="call_argument [23082,23088]" dest="call_argument [55979,55985]"/>
  <match src="call_argument [870,871]" dest="call_argument [1398,1399]"/>
  <match src="identifier: i [35252,35253]" dest="identifier: i [52964,52965]"/>
  <match src="view: view [94523,94527]" dest="view: view [33909,33913]"/>
  <match src="call_argument [31751,31757]" dest="call_argument [49463,49469]"/>
  <match src="identifier: newClaimable [79137,79149]" dest="identifier: bonded [78075,78081]"/>
  <match src="primitive_type [43033,43040]" dest="primitive_type [13130,13137]"/>
  <match src="primitive_type [100511,100518]" dest="primitive_type [39897,39904]"/>
  <match src="member_expression [104021,104056]" dest="member_expression [43407,43442]"/>
  <match src="identifier: amount [21264,21270]" dest="identifier: amount [59184,59190]"/>
  <match src="}: } [44372,44373]" dest="}: } [14469,14470]"/>
  <match src="&quot;: &quot; [83237,83238]" dest="&quot;: &quot; [58848,58849]"/>
  <match src="memory: memory [8960,8966]" dest="memory: memory [9488,9494]"/>
  <match src="parameter [91004,91019]" dest="parameter [30390,30405]"/>
  <match src="primitive_type [84669,84676]" dest="primitive_type [73997,74004]"/>
  <match src="call_argument [82787,82797]" dest="call_argument [80800,80810]"/>
  <match src=".: . [94701,94702]" dest=".: . [34087,34088]"/>
  <match src="identifier: IERC20 [11397,11403]" dest="identifier: IERC20 [22698,22704]"/>
  <match src="identifier: transfer [97710,97718]" dest="identifier: transfer [37096,37104]"/>
  <match src="): ) [46292,46293]" dest="): ) [16389,16390]"/>
  <match src="function_body [27869,28176]" dest="function_body [45581,45888]"/>
  <match src="primitive_type [54305,54312]" dest="primitive_type [22429,22436]"/>
  <match src="primitive_type [50689,50696]" dest="primitive_type [55391,55398]"/>
  <match src="number_literal: 0 [9084,9085]" dest="number_literal: 0 [9612,9613]"/>
  <match src="state_mutability [39792,39796]" dest="state_mutability [19367,19371]"/>
  <match src="if: if [92623,92625]" dest="if: if [32009,32011]"/>
  <match src="visibility [53123,53131]" dest="visibility [21247,21255]"/>
  <match src="{: { [91843,91844]" dest="{: { [31229,31230]"/>
  <match src="state_mutability [91820,91824]" dest="state_mutability [31206,31210]"/>
  <match src="call_argument [21086,21121]" dest="call_argument [63253,63290]"/>
  <match src=".: . [48641,48642]" dest=".: . [62565,62566]"/>
  <match src="uint256: uint256 [78514,78521]" dest="uint256: uint256 [70237,70244]"/>
  <match src="call_argument [32281,32285]" dest="call_argument [49993,49997]"/>
  <match src="struct_member [87017,87033]" dest="struct_member [28808,28824]"/>
  <match src="): ) [7140,7141]" dest="): ) [7668,7669]"/>
  <match src=":: : [44910,44911]" dest=":: : [15007,15008]"/>
  <match src="identifier: amount [100711,100717]" dest="identifier: amount [40097,40103]"/>
  <match src="returns: returns [66425,66432]" dest="returns: returns [62267,62274]"/>
  <match src="uint256: uint256 [4032,4039]" dest="uint256: uint256 [4560,4567]"/>
  <match src=".: . [27959,27960]" dest=".: . [45671,45672]"/>
  <match src="function_body [46294,46335]" dest="function_body [16391,16432]"/>
  <match src="uint256: uint256 [103735,103742]" dest="uint256: uint256 [43121,43128]"/>
  <match src="private: private [42635,42642]" dest="private: private [12732,12739]"/>
  <match src="identifier: TREASURY_RATIO [46418,46432]" dest="identifier: TREASURY_RATIO [16515,16529]"/>
  <match src="state_mutability [9991,9995]" dest="state_mutability [10519,10523]"/>
  <match src="bytes: bytes [34090,34095]" dest="bytes: bytes [51802,51807]"/>
  <match src="function_definition [21755,22087]" dest="function_definition [63435,63749]"/>
  <match src="}: } [6007,6008]" dest="}: } [6535,6536]"/>
  <match src="identifier: _state [91555,91561]" dest="identifier: _state [30941,30947]"/>
  <match src="{: { [92923,92924]" dest="{: { [32309,32310]"/>
  <match src="function_definition [43541,43654]" dest="function_definition [13638,13751]"/>
  <match src="function_definition [53590,53641]" dest="function_definition [21714,21765]"/>
  <match src="): ) [84657,84658]" dest="): ) [73985,73986]"/>
  <match src="member_expression [104059,104124]" dest="member_expression [43445,43510]"/>
  <match src="identifier: msg [79724,79727]" dest="identifier: msg [71271,71274]"/>
  <match src="call_argument [6348,6352]" dest="call_argument [6876,6880]"/>
  <match src="): ) [6972,6973]" dest="): ) [7500,7501]"/>
  <match src="}: } [46530,46531]" dest="}: } [16627,16628]"/>
  <match src="contract_declaration [88162,89754]" dest="contract_declaration [75352,76944]"/>
  <match src="uint256: uint256 [806,813]" dest="uint256: uint256 [1334,1341]"/>
  <match src="identifier: Upgraded [89210,89218]" dest="identifier: Upgraded [76400,76408]"/>
  <match src="call_argument [28406,28686]" dest="call_argument [46118,46398]"/>
  <match src="(: ( [6210,6211]" dest="(: ( [6738,6739]"/>
  <match src="function: function [93965,93973]" dest="function: function [33351,33359]"/>
  <match src="call_expression [98832,98869]" dest="call_expression [38218,38255]"/>
  <match src=".: . [104049,104050]" dest=".: . [43435,43436]"/>
  <match src="return: return [8166,8172]" dest="return: return [8694,8700]"/>
  <match src="member_expression [81104,81116]" dest="member_expression [81127,81139]"/>
  <match src="uint256: uint256 [9793,9800]" dest="uint256: uint256 [10321,10328]"/>
  <match src="member_expression [81323,81355]" dest="member_expression [72112,72154]"/>
  <match src="identifier: self [9519,9523]" dest="identifier: self [10047,10051]"/>
  <match src="uint256: uint256 [98300,98307]" dest="uint256: uint256 [37686,37693]"/>
  <match src="returns: returns [95882,95889]" dest="returns: returns [35268,35275]"/>
  <match src="identifier: ASCII_ZERO [36724,36734]" dest="identifier: ASCII_ZERO [54436,54446]"/>
  <match src="type_name [94294,94301]" dest="type_name [33680,33687]"/>
  <match src="expression_statement [105708,105840]" dest="expression_statement [68852,68984]"/>
  <match src="): ) [43693,43694]" dest="): ) [13790,13791]"/>
  <match src="uint256: uint256 [98769,98776]" dest="uint256: uint256 [38155,38162]"/>
  <match src="bool: bool [8712,8716]" dest="bool: bool [9240,9244]"/>
  <match src="identifier: current [93945,93952]" dest="identifier: current [33331,33338]"/>
  <match src="public: public [91813,91819]" dest="public: public [31199,31205]"/>
  <match src="function: function [44094,44102]" dest="function: function [14191,14199]"/>
  <match src="binary_expression [8739,8760]" dest="binary_expression [9267,9288]"/>
  <match src="internal: internal [3289,3297]" dest="internal: internal [3817,3825]"/>
  <match src="identifier: z [35354,35355]" dest="identifier: z [53066,53067]"/>
  <match src="parameter [103986,104000]" dest="parameter [43372,43386]"/>
  <match src="returns: returns [46581,46588]" dest="returns: returns [16678,16685]"/>
  <match src="): ) [33993,33994]" dest="): ) [51705,51706]"/>
  <match src="identifier: dollar [91471,91477]" dest="identifier: dollar [30857,30863]"/>
  <match src="): ) [16175,16176]" dest="): ) [56449,56450]"/>
  <match src="identifier: Decimal [65244,65251]" dest="identifier: Decimal [67694,67701]"/>
  <match src="function: function [101848,101856]" dest="function: function [41234,41242]"/>
  <match src="bool: bool [52810,52814]" dest="bool: bool [20934,20938]"/>
  <match src="identifier: value [46002,46007]" dest="identifier: value [16099,16104]"/>
  <match src="visibility [12310,12318]" dest="visibility [23611,23619]"/>
  <match src="identifier: payloadB [29284,29292]" dest="identifier: payloadB [46996,47004]"/>
  <match src="): ) [44309,44310]" dest="): ) [14406,14407]"/>
  <match src="array_access [91068,91092]" dest="array_access [30454,30478]"/>
  <match src="function_body [45215,45265]" dest="function_body [15312,15362]"/>
  <match src="(: ( [53032,53033]" dest="(: ( [21156,21157]"/>
  <match src="(: ( [80930,80931]" dest="(: ( [72985,72986]"/>
  <match src="call_argument [98715,98721]" dest="call_argument [38101,38107]"/>
  <match src="primitive_type [52780,52784]" dest="primitive_type [20904,20908]"/>
  <match src="call_argument [30990,30995]" dest="call_argument [48702,48707]"/>
  <match src="=: = [100074,100075]" dest="=: = [39460,39461]"/>
  <match src="returns: returns [84644,84651]" dest="returns: returns [73972,73979]"/>
  <match src="call_expression [101567,101574]" dest="call_expression [40953,40960]"/>
  <match src="primitive_type [4032,4039]" dest="primitive_type [4560,4567]"/>
  <match src="identifier: amount [103517,103523]" dest="identifier: amount [42903,42909]"/>
  <match src="bool: bool [9377,9381]" dest="bool: bool [9905,9909]"/>
  <match src="identifier: D256 [5985,5989]" dest="identifier: D256 [6513,6517]"/>
  <match src="primitive_type [95051,95058]" dest="primitive_type [34437,34444]"/>
  <match src="identifier: valid [64946,64951]" dest="identifier: valid [67758,67763]"/>
  <match src="number_literal: 0 [35160,35161]" dest="number_literal: 0 [52872,52873]"/>
  <match src="identifier: epoch [71872,71877]" dest="identifier: epoch [81008,81013]"/>
  <match src="parameter [103353,103372]" dest="parameter [42739,42758]"/>
  <match src="call_argument [9251,9252]" dest="call_argument [9779,9780]"/>
  <match src="): ) [9904,9905]" dest="): ) [10432,10433]"/>
  <match src="member_expression [94962,95006]" dest="member_expression [34348,34392]"/>
  <match src="array_access [95290,95310]" dest="array_access [34676,34696]"/>
  <match src="}: } [95012,95013]" dest="}: } [34398,34399]"/>
  <match src="(: ( [99478,99479]" dest="(: ( [38864,38865]"/>
  <match src="state_mutability [96145,96149]" dest="state_mutability [35531,35535]"/>
  <match src="enum_declaration [86518,86556]" dest="enum_declaration [28309,28347]"/>
  <match src="): ) [63922,63923]" dest="): ) [67675,67676]"/>
  <match src=",: , [28236,28237]" dest=",: , [45948,45949]"/>
  <match src="type_name [12278,12285]" dest="type_name [23579,23586]"/>
  <match src="expression_statement [21918,21987]" dest="expression_statement [63511,63622]"/>
  <match src="assignment_expression [36420,36464]" dest="assignment_expression [54132,54176]"/>
  <match src="number_literal: 0 [21312,21313]" dest="number_literal: 0 [62169,62170]"/>
  <match src="identifier: _transfer [19642,19651]" dest="identifier: transferCoupons [63764,63779]"/>
  <match src="member_expression [79724,79734]" dest="member_expression [71271,71281]"/>
  <match src="string: string [30870,30876]" dest="string: string [48582,48588]"/>
  <match src="type_name [9841,9848]" dest="type_name [10369,10376]"/>
  <match src="}: } [104138,104139]" dest="}: } [43524,43525]"/>
  <match src="visibility [42337,42344]" dest="visibility [12434,12441]"/>
  <match src="uint256: uint256 [33081,33088]" dest="uint256: uint256 [50793,50800]"/>
  <match src="array_access [103583,103611]" dest="array_access [42969,42997]"/>
  <match src="member_expression [96185,96202]" dest="member_expression [35571,35588]"/>
  <match src="return: return [45344,45350]" dest="return: return [15441,15447]"/>
  <match src="return_type_definition [36603,36617]" dest="return_type_definition [54315,54329]"/>
  <match src="event_paramater [79266,79282]" dest="event_paramater [77924,77938]"/>
  <match src="}: } [34048,34049]" dest="}: } [51760,51761]"/>
  <match src="returns: returns [9598,9605]" dest="returns: returns [10126,10133]"/>
  <match src="identifier: _state [92068,92074]" dest="identifier: _state [31454,31460]"/>
  <match src="primitive_type [97738,97745]" dest="primitive_type [37124,37131]"/>
  <match src="type_name [29425,29429]" dest="type_name [47137,47141]"/>
  <match src="visibility [3289,3297]" dest="visibility [3817,3825]"/>
  <match src="uint256: uint256 [71285,71292]" dest="uint256: uint256 [67332,67339]"/>
  <match src="primitive_type [15875,15882]" dest="primitive_type [82728,82735]"/>
  <match src="return_type_definition [95382,95396]" dest="return_type_definition [34768,34782]"/>
  <match src="member_expression [81083,81093]" dest="member_expression [72138,72148]"/>
  <match src="call_expression [106190,106221]" dest="call_expression [69334,69365]"/>
  <match src="array_access [101106,101145]" dest="array_access [40492,40531]"/>
  <match src="type_name [71156,71163]" dest="type_name [67148,67160]"/>
  <match src="member_expression [31609,31625]" dest="member_expression [49321,49337]"/>
  <match src=".: . [83102,83103]" dest=".: . [58689,58690]"/>
  <match src="event_paramater [13936,13949]" dest="event_paramater [25237,25250]"/>
  <match src="binary_expression [9235,9257]" dest="binary_expression [9763,9785]"/>
  <match src="(: ( [92735,92736]" dest="(: ( [32121,32122]"/>
  <match src="call_argument [82694,82704]" dest="call_argument [62762,62772]"/>
  <match src="function: function [52259,52267]" dest="function: function [20383,20391]"/>
  <match src="function_definition [52500,52580]" dest="function_definition [20624,20704]"/>
  <match src="function_definition [44615,44754]" dest="function_definition [14712,14851]"/>
  <match src="memory: memory [8268,8274]" dest="memory: memory [8796,8802]"/>
  <match src="identifier: add [101575,101578]" dest="identifier: add [40961,40964]"/>
  <match src=",: , [83558,83559]" dest=",: , [78326,78327]"/>
  <match src=".: . [98689,98690]" dest=".: . [38075,38076]"/>
  <match src="uint256: uint256 [42206,42213]" dest="uint256: uint256 [12303,12310]"/>
  <match src="parameter [96398,96415]" dest="parameter [35784,35801]"/>
  <match src="): ) [66558,66559]" dest="): ) [72408,72409]"/>
  <match src="function: function [28741,28749]" dest="function: function [46453,46461]"/>
  <match src="call_argument [1361,1373]" dest="call_argument [1889,1901]"/>
  <match src="identifier: value [10121,10126]" dest="identifier: value [10649,10654]"/>
  <match src="identifier: coupons [101435,101442]" dest="identifier: coupons [40821,40828]"/>
  <match src="type_name [54256,54261]" dest="type_name [22380,22385]"/>
  <match src="visibility [48180,48188]" dest="visibility [62441,62449]"/>
  <match src="[: [ [99232,99233]" dest="[: [ [38618,38619]"/>
  <match src="): ) [12308,12309]" dest="): ) [23609,23610]"/>
  <match src="): ) [103140,103141]" dest="): ) [42526,42527]"/>
  <match src="returns: returns [94927,94934]" dest="returns: returns [34313,34320]"/>
  <match src="function: function [95330,95338]" dest="function: function [34716,34724]"/>
  <match src="user_defined_type [6433,6437]" dest="user_defined_type [6961,6965]"/>
  <match src="identifier: msg [80190,80193]" dest="identifier: msg [81545,81548]"/>
  <match src="external: external [79923,79931]" dest="external: external [80879,80887]"/>
  <match src="uint256: uint256 [795,802]" dest="uint256: uint256 [1323,1330]"/>
  <match src="identifier: epochTimeWithStrategy [94133,94154]" dest="identifier: epochTimeWithStrategy [33519,33540]"/>
  <match src="(: ( [44903,44904]" dest="(: ( [15000,15001]"/>
  <match src="array_access [35949,35958]" dest="array_access [53661,53670]"/>
  <match src="member_expression [104279,104296]" dest="member_expression [43665,43682]"/>
  <match src="return_statement [9397,9427]" dest="return_statement [9925,9955]"/>
  <match src="call_argument [80604,80617]" dest="call_argument [71668,71681]"/>
  <match src="type_alias [97556,97564]" dest="type_alias [36942,36950]"/>
  <match src="function_body [95397,95464]" dest="function_body [34783,34850]"/>
  <match src="): ) [8716,8717]" dest="): ) [9244,9245]"/>
  <match src="function: function [9918,9926]" dest="function: function [10446,10454]"/>
  <match src="(: ( [27771,27772]" dest="(: ( [45483,45484]"/>
  <match src="}: } [98875,98876]" dest="}: } [38261,38262]"/>
  <match src="identifier: _approve [21764,21772]" dest="identifier: approveCoupons [63444,63458]"/>
  <match src=":=: := [85153,85155]" dest=":=: := [74481,74483]"/>
  <match src="identifier: must [27786,27790]" dest="identifier: must [45498,45502]"/>
  <match src="bool: bool [28205,28209]" dest="bool: bool [45917,45921]"/>
  <match src="identifier: a [4096,4097]" dest="identifier: a [4624,4625]"/>
  <match src="parameter [19687,19701]" dest="parameter [63863,63877]"/>
  <match src="(: ( [44440,44441]" dest="(: ( [14537,14538]"/>
  <match src="): ) [94246,94247]" dest="): ) [33632,33633]"/>
  <match src="primitive_type [16008,16015]" dest="primitive_type [17652,17659]"/>
  <match src="function: function [102427,102435]" dest="function: function [41813,41821]"/>
  <match src="address: address [96535,96542]" dest="address: address [35921,35928]"/>
  <match src="(: ( [29642,29643]" dest="(: ( [47354,47355]"/>
  <match src="primitive_type [86967,86974]" dest="primitive_type [28758,28765]"/>
  <match src="): ) [94443,94444]" dest="): ) [33829,33830]"/>
  <match src="function_body [91051,91107]" dest="function_body [30437,30493]"/>
  <match src="(: ( [95850,95851]" dest="(: ( [35236,35237]"/>
  <match src="=: = [41851,41852]" dest="=: = [11948,11949]"/>
  <match src="function_definition [53646,53696]" dest="function_definition [21770,21820]"/>
  <match src="visibility [28882,28890]" dest="visibility [46594,46602]"/>
  <match src="member_expression [100413,100438]" dest="member_expression [39799,39824]"/>
  <match src="): ) [91536,91537]" dest="): ) [30922,30923]"/>
  <match src="identifier: mul [1676,1679]" dest="identifier: mul [2204,2207]"/>
  <match src="(: ( [7113,7114]" dest="(: ( [7641,7642]"/>
  <match src="inheritance_specifier [15700,15706]" dest="inheritance_specifier [60265,60270]"/>
  <match src=".: . [9873,9874]" dest=".: . [10401,10402]"/>
  <match src="visibility [96417,96423]" dest="visibility [35803,35809]"/>
  <match src="call_argument [79670,79675]" dest="call_argument [83092,83123]"/>
  <match src="identifier: getOracleReserveMinimum [43550,43573]" dest="identifier: getOracleReserveMinimum [13647,13670]"/>
  <match src="parameter [52574,52578]" dest="parameter [20698,20702]"/>
  <match src="++: ++ [7581,7583]" dest="++: ++ [8109,8111]"/>
  <match src="number_literal: 18 [90970,90972]" dest="number_literal: 18 [30356,30358]"/>
  <match src="identifier: State [87052,87057]" dest="identifier: State [28843,28848]"/>
  <match src="pure: pure [30115,30119]" dest="pure: pure [47827,47831]"/>
  <match src="private: private [9975,9982]" dest="private: private [10503,10510]"/>
  <match src="struct_member [87068,87087]" dest="struct_member [28859,28878]"/>
  <match src="identifier: b [3451,3452]" dest="identifier: b [3979,3980]"/>
  <match src=":: : [6732,6733]" dest=":: : [7260,7261]"/>
  <match src="type_name [53346,53350]" dest="type_name [21470,21474]"/>
  <match src="): ) [75712,75713]" dest="): ) [61422,61423]"/>
  <match src="): ) [80142,80143]" dest="): ) [72252,72253]"/>
  <match src="type_name [91936,91943]" dest="type_name [31322,31329]"/>
  <match src="function_definition [95330,95464]" dest="function_definition [34716,34850]"/>
  <match src="memory: memory [8460,8466]" dest="memory: memory [8988,8994]"/>
  <match src="(: ( [11977,11978]" dest="(: ( [23278,23279]"/>
  <match src="type_name [96159,96166]" dest="type_name [35545,35552]"/>
  <match src="private: private [88433,88440]" dest="private: private [75623,75630]"/>
  <match src="call_argument [31302,31308]" dest="call_argument [49014,49020]"/>
  <match src="): ) [7026,7027]" dest="): ) [7554,7555]"/>
  <match src="call_argument [79480,79485]" dest="call_argument [71043,71048]"/>
  <match src="user_defined_type [87267,87282]" dest="user_defined_type [29058,29073]"/>
  <match src="{: { [91739,91740]" dest="{: { [31125,31126]"/>
  <match src="uint256: uint256 [68382,68389]" dest="uint256: uint256 [65732,65739]"/>
  <match src="{: { [7585,7586]" dest="{: { [8113,8114]"/>
  <match src="function: function [93644,93652]" dest="function: function [33030,33038]"/>
  <match src="=: = [35837,35838]" dest="=: = [53549,53550]"/>
  <match src="return_type_definition [46481,46498]" dest="return_type_definition [16578,16595]"/>
  <match src="identifier: account [99599,99606]" dest="identifier: account [38985,38992]"/>
  <match src="parameter [45946,45965]" dest="parameter [16043,16062]"/>
  <match src="view: view [12319,12323]" dest="view: view [23620,23624]"/>
  <match src="function: function [92363,92371]" dest="function: function [31749,31757]"/>
  <match src="address: address [96698,96705]" dest="address: address [36084,36091]"/>
  <match src="primitive_type [49665,49672]" dest="primitive_type [26048,26055]"/>
  <match src="comment: // return ASCII letter (a-f) [36757,36785]" dest="comment: // return ASCII letter (a-f) [54469,54497]"/>
  <match src="identifier: price0CumulativeLast [53879,53899]" dest="identifier: price0CumulativeLast [22003,22023]"/>
  <match src="identifier: a [431,432]" dest="identifier: a [959,960]"/>
  <match src="(: ( [70400,70401]" dest="(: ( [58778,58779]"/>
  <match src="[: [ [34473,34474]" dest="[: [ [52185,52186]"/>
  <match src="member_expression [7806,7820]" dest="member_expression [8334,8348]"/>
  <match src="primitive_type [93670,93677]" dest="primitive_type [33056,33063]"/>
  <match src="function_body [1734,2126]" dest="function_body [2262,2654]"/>
  <match src="(: ( [4095,4096]" dest="(: ( [4623,4624]"/>
  <match src=",: , [101930,101931]" dest=",: , [41316,41317]"/>
  <match src="): ) [79021,79022]" dest="): ) [70681,70682]"/>
  <match src="struct_member [87248,87295]" dest="struct_member [29039,29086]"/>
  <match src="expression_statement [82153,82291]" dest="expression_statement [80149,80202]"/>
  <match src="parameter [53820,53836]" dest="parameter [21944,21960]"/>
  <match src="uint256: uint256 [41803,41810]" dest="uint256: uint256 [11900,11907]"/>
  <match src="pure: pure [46476,46480]" dest="pure: pure [16573,16577]"/>
  <match src="): ) [5930,5931]" dest="): ) [6458,6459]"/>
  <match src=".: . [79403,79404]" dest=".: . [70966,70967]"/>
  <match src="identifier: DOMAIN_SEPARATOR [52831,52847]" dest="identifier: DOMAIN_SEPARATOR [20955,20971]"/>
  <match src="address: address [26111,26118]" dest="address: address [55621,55628]"/>
  <match src="identifier: IOracle [86821,86828]" dest="identifier: IOracle [28612,28619]"/>
  <match src="type_name [53444,53451]" dest="type_name [21568,21575]"/>
  <match src="return_type_definition [70461,70475]" dest="return_type_definition [81630,81644]"/>
  <match src="call_argument [29274,29293]" dest="call_argument [46986,47005]"/>
  <match src="primitive_type [53173,53177]" dest="primitive_type [21297,21301]"/>
  <match src="identifier: Transfer [52131,52139]" dest="identifier: Transfer [20255,20263]"/>
  <match src="identifier: accounts [101536,101544]" dest="identifier: accounts [40922,40930]"/>
  <match src="public: public [91408,91414]" dest="public: public [30794,30800]"/>
  <match src="assignment_expression [103398,103448]" dest="assignment_expression [42784,42834]"/>
  <match src="identifier: D256 [6082,6086]" dest="identifier: D256 [6610,6614]"/>
  <match src="parameter [77288,77302]" dest="parameter [79936,79953]"/>
  <match src="indexed: indexed [52148,52155]" dest="indexed: indexed [20272,20279]"/>
  <match src="identifier: b [9078,9079]" dest="identifier: b [9606,9607]"/>
  <match src="private: private [43234,43241]" dest="private: private [13331,13338]"/>
  <match src="function_body [97798,97827]" dest="function_body [37184,37213]"/>
  <match src="identifier: sender [79623,79629]" dest="identifier: sender [72046,72052]"/>
  <match src="expression_statement [7573,7579]" dest="expression_statement [8101,8107]"/>
  <match src="function_definition [54291,54326]" dest="function_definition [22415,22450]"/>
  <match src="primitive_type [42008,42015]" dest="primitive_type [12105,12112]"/>
  <match src=",: , [4759,4760]" dest=",: , [5287,5288]"/>
  <match src="visibility [43174,43181]" dest="visibility [13271,13278]"/>
  <match src="}: } [102312,102313]" dest="}: } [41698,41699]"/>
  <match src="identifier: _state [100052,100058]" dest="identifier: _state [39438,39444]"/>
  <match src="identifier: account [105743,105750]" dest="identifier: account [68887,68894]"/>
  <match src="(: ( [31669,31670]" dest="(: ( [49381,49382]"/>
  <match src="function: function [6776,6784]" dest="function: function [7304,7312]"/>
  <match src="parameter [30736,30752]" dest="parameter [48448,48464]"/>
  <match src="(: ( [66522,66523]" dest="(: ( [72357,72358]"/>
  <match src="): ) [98640,98641]" dest="): ) [38026,38027]"/>
  <match src="pure: pure [52286,52290]" dest="pure: pure [20410,20414]"/>
  <match src=".: . [80518,80519]" dest=".: . [71583,71584]"/>
  <match src="visibility [54400,54408]" dest="visibility [22524,22532]"/>
  <match src="type_name [86608,86615]" dest="type_name [28399,28406]"/>
  <match src="visibility [96270,96276]" dest="visibility [35656,35662]"/>
  <match src="{: { [8556,8557]" dest="{: { [9084,9085]"/>
  <match src="identifier: BASE [6095,6099]" dest="identifier: BASE [6623,6627]"/>
  <match src="contract_body [52039,54411]" dest="contract_body [20163,22535]"/>
  <match src="type_name [25654,25661]" dest="type_name [60727,60734]"/>
  <match src="(: ( [21772,21773]" dest="(: ( [63458,63459]"/>
  <match src="): ) [8468,8469]" dest="): ) [8996,8997]"/>
  <match src="primitive_type [76455,76462]" dest="primitive_type [60997,61004]"/>
  <match src="type_name [16707,16714]" dest="type_name [58263,58270]"/>
  <match src="identifier: _state [103398,103404]" dest="identifier: _state [42784,42790]"/>
  <match src="primitive_type [31427,31434]" dest="primitive_type [49139,49146]"/>
  <match src="member_expression [102010,102049]" dest="member_expression [41396,41435]"/>
  <match src="expression_statement [106116,106118]" dest="expression_statement [69260,69262]"/>
  <match src="function_body [9045,9092]" dest="function_body [9573,9620]"/>
  <match src="{: { [94546,94547]" dest="{: { [33932,33933]"/>
  <match src="return_type_definition [11969,11983]" dest="return_type_definition [23270,23284]"/>
  <match src="parameter [9566,9582]" dest="parameter [10094,10110]"/>
  <match src="function_definition [101649,101842]" dest="function_definition [41035,41228]"/>
  <match src="identifier: balanceOf [83129,83138]" dest="identifier: mint [58986,58990]"/>
  <match src="member_expression [102061,102126]" dest="member_expression [41447,41512]"/>
  <match src="type_name [42272,42279]" dest="type_name [12369,12376]"/>
  <match src="visibility [6870,6878]" dest="visibility [7398,7406]"/>
  <match src="identifier: reason [98946,98952]" dest="identifier: reason [38332,38338]"/>
  <match src="visibility [79923,79931]" dest="visibility [80879,80887]"/>
  <match src="returns: returns [45032,45039]" dest="returns: returns [15129,15136]"/>
  <match src="uint256: uint256 [93747,93754]" dest="uint256: uint256 [33133,33140]"/>
  <match src=".: . [96191,96192]" dest=".: . [35577,35578]"/>
  <match src="comment: // 100 ZAI -&gt; 100M ZAIS [41858,41881]" dest="comment: // 100 ZAI -&gt; 100M ZAIS [11955,11978]"/>
  <match src="identifier: amount [104383,104389]" dest="identifier: amount [43769,43775]"/>
  <match src="member_expression [92068,92093]" dest="member_expression [31454,31479]"/>
  <match src="user_defined_type [7679,7683]" dest="user_defined_type [8207,8211]"/>
  <match src="primitive_type [101060,101066]" dest="primitive_type [40446,40452]"/>
  <match src="): ) [10020,10021]" dest="): ) [10548,10549]"/>
  <match src="(: ( [99654,99655]" dest="(: ( [39040,39041]"/>
  <match src="string_literal [80822,80857]" dest="string_literal [71859,71897]"/>
  <match src="variable_declaration [64842,64867]" dest="variable_declaration [65876,65901]"/>
  <match src="call_argument [106235,106239]" dest="call_argument [69379,69383]"/>
  <match src="]: ] [99966,99967]" dest="]: ] [39352,39353]"/>
  <match src="identifier: msg [80779,80782]" dest="identifier: msg [71816,71819]"/>
  <match src="=: = [80343,80344]" dest="=: = [66616,66617]"/>
  <match src="identifier: spender [53056,53063]" dest="identifier: spender [21180,21187]"/>
  <match src="state_mutability [29530,29534]" dest="state_mutability [47242,47246]"/>
  <match src="call_argument [106000,106041]" dest="call_argument [69144,69185]"/>
  <match src="array_access [99583,99607]" dest="array_access [38969,38993]"/>
  <match src="identifier: getAdvanceIncentive [45280,45299]" dest="identifier: getAdvanceIncentive [15377,15396]"/>
  <match src="(: ( [102234,102235]" dest="(: ( [41620,41621]"/>
  <match src="): ) [92049,92050]" dest="): ) [31435,31436]"/>
  <match src="]: ] [96212,96213]" dest="]: ] [35598,35599]"/>
  <match src="identifier: decrementBalanceOfStaged [100131,100155]" dest="identifier: decrementBalanceOfStaged [39517,39541]"/>
  <match src="return_type_definition [91420,91437]" dest="return_type_definition [30806,30823]"/>
  <match src="primitive_type [42882,42889]" dest="primitive_type [12979,12986]"/>
  <match src="parameter [30762,30778]" dest="parameter [48474,48490]"/>
  <match src="uint256: uint256 [43033,43040]" dest="uint256: uint256 [13130,13137]"/>
  <match src="type_name [29466,29473]" dest="type_name [47178,47185]"/>
  <match src="return_type_definition [95750,95767]" dest="return_type_definition [35136,35153]"/>
  <match src="call_expression [94336,94352]" dest="call_expression [33722,33738]"/>
  <match src="identifier: symbol [52268,52274]" dest="identifier: symbol [20392,20398]"/>
  <match src="uint: uint [53925,53929]" dest="uint: uint [22049,22053]"/>
  <match src="visibility [100241,100249]" dest="visibility [39627,39635]"/>
  <match src="{: { [91166,91167]" dest="{: { [30552,30553]"/>
  <match src=",: , [29723,29724]" dest=",: , [47435,47436]"/>
  <match src="view: view [93066,93070]" dest="view: view [32452,32456]"/>
  <match src="(: ( [6892,6893]" dest="(: ( [7420,7421]"/>
  <match src="identifier: result [33536,33542]" dest="identifier: result [51248,51254]"/>
  <match src="returns: returns [53678,53685]" dest="returns: returns [21802,21809]"/>
  <match src="call_argument [35972,35986]" dest="call_argument [53684,53698]"/>
  <match src="type_name [48079,48086]" dest="type_name [72000,72007]"/>
  <match src="identifier: balance [100396,100403]" dest="identifier: balance [39782,39789]"/>
  <match src="member_expression [6749,6754]" dest="member_expression [7277,7282]"/>
  <match src="): ) [99196,99197]" dest="): ) [38582,38583]"/>
  <match src="parameter [22871,22885]" dest="parameter [17608,17622]"/>
  <match src="identifier: that [31953,31957]" dest="identifier: that [49665,49669]"/>
  <match src="function: function [95701,95709]" dest="function: function [35087,35095]"/>
  <match src="return_type_definition [49748,49762]" dest="return_type_definition [26131,26145]"/>
  <match src="function: function [83053,83061]" dest="function: function [58894,58902]"/>
  <match src="type_name [13467,13471]" dest="type_name [24768,24772]"/>
  <match src="parameter [16008,16015]" dest="parameter [17652,17659]"/>
  <match src="primitive_type [52650,52654]" dest="primitive_type [20774,20778]"/>
  <match src="(: ( [44554,44555]" dest="(: ( [14651,14652]"/>
  <match src="parameter [54163,54175]" dest="parameter [22287,22299]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4142,4635]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4670,5163]"/>
  <match src="identifier: file [28017,28021]" dest="identifier: file [45729,45733]"/>
  <match src="[: [ [96202,96203]" dest="[: [ [35588,35589]"/>
  <match src="pure: pure [1312,1316]" dest="pure: pure [1840,1844]"/>
  <match src="]: ] [103188,103189]" dest="]: ] [42574,42575]"/>
  <match src="=: = [36439,36440]" dest="=: = [54151,54152]"/>
  <match src="type_name [9952,9956]" dest="type_name [10480,10484]"/>
  <match src="visibility [32111,32119]" dest="visibility [49823,49831]"/>
  <match src="): ) [105696,105697]" dest="): ) [68840,68841]"/>
  <match src="is: is [90454,90456]" dest="is: is [29840,29842]"/>
  <match src="parameter [70576,70591]" dest="parameter [81600,81615]"/>
  <match src="identifier: i [36110,36111]" dest="identifier: i [53822,53823]"/>
  <match src="primitive_type [53820,53827]" dest="primitive_type [21944,21951]"/>
  <match src="call_argument [89186,89192]" dest="call_argument [76376,76382]"/>
  <match src="): ) [77512,77513]" dest="): ) [61667,61668]"/>
  <match src="uint8: uint8 [36806,36811]" dest="uint8: uint8 [54518,54523]"/>
  <match src="primitive_type [95891,95898]" dest="primitive_type [35277,35284]"/>
  <match src="identifier: abi [32947,32950]" dest="identifier: abi [50659,50662]"/>
  <match src="return_statement [8544,8604]" dest="return_statement [9072,9132]"/>
  <match src="function: function [91113,91121]" dest="function: function [30499,30507]"/>
  <match src="return_type_definition [97779,97793]" dest="return_type_definition [37165,37179]"/>
  <match src="string [106253,106274]" dest="string [69397,69418]"/>
  <match src="binary_expression [4791,4796]" dest="binary_expression [5319,5324]"/>
  <match src="(: ( [29283,29284]" dest="(: ( [46995,46996]"/>
  <match src="function_definition [53017,53132]" dest="function_definition [21141,21256]"/>
  <match src="): ) [103523,103524]" dest="): ) [42909,42910]"/>
  <match src="member_expression [103583,103632]" dest="member_expression [42969,43018]"/>
  <match src="for: for [69428,69431]" dest="for: for [55298,55301]"/>
  <match src="address: address [99410,99417]" dest="address: address [38796,38803]"/>
  <match src="function_definition [43660,43969]" dest="function_definition [13757,14066]"/>
  <match src="member_expression [92068,92082]" dest="member_expression [31454,31468]"/>
  <match src="comment: /* Governance */ [42185,42201]" dest="comment: /* Governance */ [12282,12298]"/>
  <match src="function: function [96512,96520]" dest="function: function [35898,35906]"/>
  <match src="array_access [103844,103872]" dest="array_access [43230,43258]"/>
  <match src="{: { [94806,94807]" dest="{: { [34192,34193]"/>
  <match src="identifier: stringify [31257,31266]" dest="identifier: stringify [48969,48978]"/>
  <match src="}: } [61946,61947]" dest="}: } [27001,27002]"/>
  <match src="revert_statement [31557,31922]" dest="revert_statement [49269,49634]"/>
  <match src=".: . [82640,82641]" dest=".: . [62826,62827]"/>
  <match src="identifier: amount [100102,100108]" dest="identifier: amount [39488,39494]"/>
  <match src="emit_statement [99396,99439]" dest="emit_statement [38782,38825]"/>
  <match src="visibility [96677,96683]" dest="visibility [36063,36069]"/>
  <match src="internal: internal [8478,8486]" dest="internal: internal [9006,9014]"/>
  <match src="type_name [54133,54140]" dest="type_name [22257,22264]"/>
  <match src="identifier: result [35904,35910]" dest="identifier: result [53616,53622]"/>
  <match src="type_name [44669,44681]" dest="type_name [14766,14778]"/>
  <match src="identifier: epochs [95159,95165]" dest="identifier: epochs [34545,34551]"/>
  <match src="event_paramater [52182,52192]" dest="event_paramater [20306,20316]"/>
  <match src="call_expression [89059,89152]" dest="call_expression [76249,76342]"/>
  <match src="if_statement [28914,29390]" dest="if_statement [46626,47102]"/>
  <match src="private: private [42071,42078]" dest="private: private [12168,12175]"/>
  <match src="visibility [44646,44654]" dest="visibility [14743,14751]"/>
  <match src="user_defined_type [107066,107077]" dest="user_defined_type [77667,77678]"/>
  <match src="(: ( [36709,36710]" dest="(: ( [54421,54422]"/>
  <match src="comment: // 'a' - 10 [27424,27435]" dest="comment: // 'a' - 10 [45136,45147]"/>
  <match src="call_argument [31257,31276]" dest="call_argument [48969,48988]"/>
  <match src="visibility [91021,91027]" dest="visibility [30407,30413]"/>
  <match src="identifier: z [36344,36345]" dest="identifier: z [54056,54057]"/>
  <match src="identifier: _state [104667,104673]" dest="identifier: _state [44053,44059]"/>
  <match src="type_name [104209,104216]" dest="type_name [43595,43602]"/>
  <match src=",: , [52618,52619]" dest=",: , [20742,20743]"/>
  <match src="function_body [32868,33713]" dest="function_body [50580,51425]"/>
  <match src="identifier: sender [51122,51128]" dest="identifier: sender [64538,64544]"/>
  <match src="visibility [105579,105586]" dest="visibility [68723,68730]"/>
  <match src="call_argument [27998,28022]" dest="call_argument [45710,45734]"/>
  <match src="[: [ [100784,100785]" dest="[: [ [40170,40171]"/>
  <match src="): ) [9159,9160]" dest="): ) [9687,9688]"/>
  <match src="identifier: b [1353,1354]" dest="identifier: b [1881,1882]"/>
  <match src="return: return [91338,91344]" dest="return: return [30724,30730]"/>
  <match src="identifier: value [7524,7529]" dest="identifier: value [8052,8057]"/>
  <match src="identifier: file [29052,29056]" dest="identifier: file [46764,46768]"/>
  <match src="call_argument [104605,104614]" dest="call_argument [43991,44000]"/>
  <match src="{: { [101768,101769]" dest="{: { [41154,41155]"/>
  <match src="identifier: stringifyTruncated [29749,29767]" dest="identifier: stringifyTruncated [47461,47479]"/>
  <match src="identifier: reserve [66401,66408]" dest="identifier: couponPremium [62225,62238]"/>
  <match src="(: ( [32280,32281]" dest="(: ( [49992,49993]"/>
  <match src="function: function [35581,35589]" dest="function: function [53293,53301]"/>
  <match src="memory: memory [32856,32862]" dest="memory: memory [50568,50574]"/>
  <match src="user_defined_type [87096,87103]" dest="user_defined_type [28887,28894]"/>
  <match src="parameter [91042,91049]" dest="parameter [30428,30435]"/>
  <match src="identifier: candidate [104765,104774]" dest="identifier: candidate [44151,44160]"/>
  <match src="identifier: D256 [45787,45791]" dest="identifier: D256 [15884,15888]"/>
  <match src="): ) [46147,46148]" dest="): ) [16244,16245]"/>
  <match src="): ) [30276,30277]" dest="): ) [47988,47989]"/>
  <match src="identifier: length [33390,33396]" dest="identifier: length [51102,51108]"/>
  <match src="state_variable_declaration [62700,62741]" dest="state_variable_declaration [60310,60351]"/>
  <match src="function: function [34625,34633]" dest="function: function [52337,52345]"/>
  <match src="identifier: totalBonded [91695,91706]" dest="identifier: totalBonded [31081,31092]"/>
  <match src="type_name [93569,93576]" dest="type_name [32955,32962]"/>
  <match src="}: } [105857,105858]" dest="}: } [69001,69002]"/>
  <match src="string_literal [4102,4128]" dest="string_literal [4630,4656]"/>
  <match src="): ) [45680,45681]" dest="): ) [15777,15778]"/>
  <match src="{: { [96034,96035]" dest="{: { [35420,35421]"/>
  <match src="type_name [53112,53119]" dest="type_name [21236,21243]"/>
  <match src="member_expression [100728,100741]" dest="member_expression [40114,40127]"/>
  <match src="comment: // contracts then. [85054,85072]" dest="comment: // contracts then. [74382,74400]"/>
  <match src="identifier: FILE [62725,62729]" dest="identifier: FILE [60335,60339]"/>
  <match src="[: [ [94694,94695]" dest="[: [ [34080,34081]"/>
  <match src="parameter [53112,53121]" dest="parameter [21236,21245]"/>
  <match src="): ) [79432,79433]" dest="): ) [70995,70996]"/>
  <match src="function_definition [103461,103664]" dest="function_definition [42847,43050]"/>
  <match src="=: = [100895,100896]" dest="=: = [40281,40282]"/>
  <match src="call_expression [34885,34898]" dest="call_expression [52597,52610]"/>
  <match src="identifier: account [101122,101129]" dest="identifier: account [40508,40515]"/>
  <match src="identifier: sender [81023,81029]" dest="identifier: sender [72610,72616]"/>
  <match src="primitive_type [92253,92260]" dest="primitive_type [31639,31646]"/>
  <match src="expression_statement [2044,2101]" dest="expression_statement [2572,2629]"/>
  <match src="true [104838,104842]" dest="true [44224,44228]"/>
  <match src="type_name [3312,3319]" dest="type_name [3840,3847]"/>
  <match src="identifier: must [29554,29558]" dest="identifier: must [47266,47270]"/>
  <match src="identifier: tokenA [77280,77286]" dest="identifier: candidate [78186,78195]"/>
  <match src="member_expression [91962,91981]" dest="member_expression [31348,31367]"/>
  <match src="function: function [45144,45152]" dest="function: function [15241,15249]"/>
  <match src="type_name [13029,13036]" dest="type_name [24330,24337]"/>
  <match src="): ) [71354,71355]" dest="): ) [67368,67369]"/>
  <match src="bool: bool [13467,13471]" dest="bool: bool [24768,24772]"/>
  <match src="type_name [78993,79000]" dest="type_name [70607,70614]"/>
  <match src="primitive_type [93569,93576]" dest="primitive_type [32955,32962]"/>
  <match src="member_expression [101286,101369]" dest="member_expression [40672,40755]"/>
  <match src="uint256: uint256 [15766,15773]" dest="uint256: uint256 [60420,60427]"/>
  <match src="): ) [87180,87181]" dest="): ) [28971,28972]"/>
  <match src="): ) [82060,82061]" dest="): ) [80956,80957]"/>
  <match src="identifier: rejectFor [96343,96352]" dest="identifier: rejectFor [35729,35738]"/>
  <match src="(: ( [44848,44849]" dest="(: ( [14945,14946]"/>
  <match src="block_statement [33106,33647]" dest="block_statement [50818,51359]"/>
  <match src="): ) [104464,104465]" dest="): ) [43850,43851]"/>
  <match src="primitive_type [366,373]" dest="primitive_type [894,901]"/>
  <match src="call_argument [1353,1359]" dest="call_argument [1881,1887]"/>
  <match src="uint256: uint256 [65552,65559]" dest="uint256: uint256 [72095,72102]"/>
  <match src="variable_declaration [64893,64912]" dest="variable_declaration [72628,72643]"/>
  <match src="member_expression [79535,79545]" dest="member_expression [71073,71083]"/>
  <match src="call_argument [31701,31706]" dest="call_argument [49413,49418]"/>
  <match src="identifier: FOUR_BIT_MASK [35358,35371]" dest="identifier: FOUR_BIT_MASK [53070,53083]"/>
  <match src="external: external [82895,82903]" dest="external: external [83049,83057]"/>
  <match src="return_statement [5978,6002]" dest="return_statement [6506,6530]"/>
  <match src="identifier: errorMessage [3275,3287]" dest="identifier: errorMessage [3803,3815]"/>
  <match src="state_variable_declaration [42272,42324]" dest="state_variable_declaration [12369,12421]"/>
  <match src="identifier: recipient [11933,11942]" dest="identifier: recipient [23234,23243]"/>
  <match src="identifier: stringify [32503,32512]" dest="identifier: stringify [50215,50224]"/>
  <match src="member_expression [107457,107471]" dest="member_expression [67767,67783]"/>
  <match src="]: ] [94981,94982]" dest="]: ] [34367,34368]"/>
  <match src="type_name [806,813]" dest="type_name [1334,1341]"/>
  <match src="function_definition [44760,44950]" dest="function_definition [14857,15047]"/>
  <match src="string_literal [48748,48762]" dest="string_literal [56054,56098]"/>
  <match src="variable_declaration_statement [81185,81292]" dest="variable_declaration_statement [78947,78986]"/>
  <match src="{: { [93915,93916]" dest="{: { [33301,33302]"/>
  <match src="uint256: uint256 [48079,48086]" dest="uint256: uint256 [72000,72007]"/>
  <match src="identifier: implementation [88713,88727]" dest="identifier: implementation [75903,75917]"/>
  <match src="(: ( [21944,21945]" dest="(: ( [63550,63551]"/>
  <match src="identifier: candidate [104335,104344]" dest="identifier: candidate [43721,43730]"/>
  <match src="identifier: recipient [20072,20081]" dest="identifier: recipient [64715,64724]"/>
  <match src="call_expression [92279,92301]" dest="call_expression [31665,31687]"/>
  <match src="visibility [88433,88440]" dest="visibility [75623,75630]"/>
  <match src="primitive_type [53503,53510]" dest="primitive_type [21627,21634]"/>
  <match src="): ) [94774,94775]" dest="): ) [34160,34161]"/>
  <match src="): ) [19749,19750]" dest="): ) [63943,63944]"/>
  <match src="user_defined_type [9128,9132]" dest="user_defined_type [9656,9660]"/>
  <match src="type_name [68208,68215]" dest="type_name [70517,70524]"/>
  <match src="identifier: b [9964,9965]" dest="identifier: b [10492,10493]"/>
  <match src=",: , [101703,101704]" dest=",: , [41089,41090]"/>
  <match src="parameter [100559,100573]" dest="parameter [39945,39959]"/>
  <match src="=: = [101418,101419]" dest="=: = [40804,40805]"/>
  <match src="return: return [90768,90774]" dest="return: return [30154,30160]"/>
  <match src="number_literal: 1 [102304,102305]" dest="number_literal: 1 [41690,41691]"/>
  <match src="call_argument [36308,36325]" dest="call_argument [54020,54037]"/>
  <match src="call_argument [80202,80207]" dest="call_argument [71965,71970]"/>
  <match src="identifier: Status [93353,93359]" dest="identifier: Status [32739,32745]"/>
  <match src="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [88075,88161]" dest="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [75265,75351]"/>
  <match src="user_defined_type [88186,88191]" dest="user_defined_type [75376,75381]"/>
  <match src="event_paramater [51430,51452]" dest="event_paramater [60853,60873]"/>
  <match src=",: , [9418,9419]" dest=",: , [9946,9947]"/>
  <match src="primitive_type [95066,95073]" dest="primitive_type [34452,34459]"/>
  <match src="identifier: amount0In [53351,53360]" dest="identifier: amount0In [21475,21484]"/>
  <match src="identifier: payloadC [32092,32100]" dest="identifier: payloadC [49804,49812]"/>
  <match src="(: ( [91314,91315]" dest="(: ( [30700,30701]"/>
  <match src="): ) [95129,95130]" dest="): ) [34515,34516]"/>
  <match src="identifier: bonded [98384,98390]" dest="identifier: bonded [37770,37776]"/>
  <match src="(: ( [103910,103911]" dest="(: ( [43296,43297]"/>
  <match src=",: , [83654,83655]" dest=",: , [78887,78888]"/>
  <match src="call_argument [83423,83427]" dest="call_argument [80336,80340]"/>
  <match src="type_name [96251,96258]" dest="type_name [35637,35644]"/>
  <match src="]: ] [103832,103833]" dest="]: ] [43218,43219]"/>
  <match src="identifier: account [91084,91091]" dest="identifier: account [30470,30477]"/>
  <match src="type_name [35148,35155]" dest="type_name [52860,52867]"/>
  <match src=".: . [94709,94710]" dest=".: . [34095,34096]"/>
  <match src="state_variable_declaration [90538,90660]" dest="state_variable_declaration [29924,30046]"/>
  <match src="call_argument [8178,8218]" dest="call_argument [8706,8746]"/>
  <match src="member_expression [94681,94721]" dest="member_expression [34067,34107]"/>
  <match src="call_expression [64870,64883]" dest="call_expression [65904,65919]"/>
  <match src="function_definition [52822,52882]" dest="function_definition [20946,21006]"/>
  <match src="=: = [42992,42993]" dest="=: = [13089,13090]"/>
  <match src="!: ! [30825,30826]" dest="!: ! [48537,48538]"/>
  <match src="parameter [1253,1262]" dest="parameter [1781,1790]"/>
  <match src="(: ( [5954,5955]" dest="(: ( [6482,6483]"/>
  <match src="function: function [99845,99853]" dest="function: function [39231,39239]"/>
  <match src="(: ( [89711,89712]" dest="(: ( [76901,76902]"/>
  <match src="function_definition [103939,104139]" dest="function_definition [43325,43525]"/>
  <match src="indexed: indexed [25662,25669]" dest="indexed: indexed [60735,60742]"/>
  <match src="type_name [6128,6135]" dest="type_name [6656,6663]"/>
  <match src="visibility [9819,9826]" dest="visibility [10347,10354]"/>
  <match src="type_cast_expression [77192,77205]" dest="type_cast_expression [59452,59465]"/>
  <match src="[: [ [101544,101545]" dest="[: [ [40930,40931]"/>
  <match src="call_expression [102279,102306]" dest="call_expression [41665,41692]"/>
  <match src="(: ( [70313,70314]" dest="(: ( [58661,58662]"/>
  <match src="type_name [78855,78862]" dest="type_name [70373,70380]"/>
  <match src="while: while [33980,33985]" dest="while: while [51692,51697]"/>
  <match src="): ) [53863,53864]" dest="): ) [21987,21988]"/>
  <match src="primitive_type [62700,62707]" dest="primitive_type [60310,60317]"/>
  <match src=".: . [95945,95946]" dest=".: . [35331,35332]"/>
  <match src="(: ( [52362,52363]" dest="(: ( [20486,20487]"/>
  <match src="): ) [96442,96443]" dest="): ) [35828,35829]"/>
  <match src="binary_expression [36427,36437]" dest="binary_expression [54139,54149]"/>
  <match src="{: { [52039,52040]" dest="{: { [20163,20164]"/>
  <match src="if_statement [104626,104724]" dest="if_statement [44012,44110]"/>
  <match src="identifier: epochTimeWithStrategy [94185,94206]" dest="identifier: epochTimeWithStrategy [33571,33592]"/>
  <match src="): ) [30963,30964]" dest="): ) [48675,48676]"/>
  <match src="identifier: reason [29133,29139]" dest="identifier: reason [46845,46851]"/>
  <match src="): ) [30566,30567]" dest="): ) [48278,48279]"/>
  <match src="identifier: mint [50684,50688]" dest="identifier: mintToAccount [55377,55390]"/>
  <match src="state_mutability [1711,1715]" dest="state_mutability [2239,2243]"/>
  <match src="call_argument [82033,82060]" dest="call_argument [80941,80956]"/>
  <match src="primitive_type [2594,2601]" dest="primitive_type [3122,3129]"/>
  <match src="): ) [99317,99318]" dest="): ) [38703,38704]"/>
  <match src="return_statement [92272,92319]" dest="return_statement [31658,31705]"/>
  <match src="user_defined_type [6893,6897]" dest="user_defined_type [7421,7425]"/>
  <match src=",: , [13412,13413]" dest=",: , [24713,24714]"/>
  <match src="return_type_definition [95882,95899]" dest="return_type_definition [35268,35285]"/>
  <match src="{: { [8534,8535]" dest="{: { [9062,9063]"/>
  <match src="member_expression [80483,80522]" dest="member_expression [71578,71587]"/>
  <match src=",: , [103316,103317]" dest=",: , [42702,42703]"/>
  <match src=".: . [103243,103244]" dest=".: . [42629,42630]"/>
  <match src="identifier: account [100276,100283]" dest="identifier: account [39662,39669]"/>
  <match src="identifier: account [92529,92536]" dest="identifier: account [31915,31922]"/>
  <match src="call_argument [94155,94162]" dest="call_argument [33541,33548]"/>
  <match src="[: [ [102025,102026]" dest="[: [ [41411,41412]"/>
  <match src="visibility [45183,45191]" dest="visibility [15280,15288]"/>
  <match src="identifier: sender [51044,51050]" dest="identifier: sender [64436,64442]"/>
  <match src="internal: internal [7036,7044]" dest="internal: internal [7564,7572]"/>
  <match src="call_argument [20083,20089]" dest="call_argument [64733,64739]"/>
  <match src="identifier: Require [83337,83344]" dest="identifier: Require [80212,80219]"/>
  <match src="type_name [81301,81308]" dest="type_name [61786,61793]"/>
  <match src="identifier: factory [53599,53606]" dest="identifier: factory [21723,21730]"/>
  <match src="call_argument [100102,100108]" dest="call_argument [39488,39494]"/>
  <match src="parameter [43498,43505]" dest="parameter [13595,13602]"/>
  <match src="uint256: uint256 [68159,68166]" dest="uint256: uint256 [65602,65609]"/>
  <match src="{: { [96300,96301]" dest="{: { [35686,35687]"/>
  <match src="member_expression [93462,93497]" dest="member_expression [32848,32883]"/>
  <match src="(: ( [100923,100924]" dest="(: ( [40309,40310]"/>
  <match src="visibility [97883,97891]" dest="visibility [37269,37277]"/>
  <match src="identifier: msg [79983,79986]" dest="identifier: msg [71205,71208]"/>
  <match src="identifier: a [2056,2057]" dest="identifier: a [2584,2585]"/>
  <match src="type_name [49757,49761]" dest="type_name [26140,26144]"/>
  <match src="call_argument [81594,81599]" dest="call_argument [79840,79849]"/>
  <match src="{: { [29560,29561]" dest="{: { [47272,47273]"/>
  <match src="(: ( [105680,105681]" dest="(: ( [68824,68825]"/>
  <match src=",: , [78991,78992]" dest=",: , [70597,70598]"/>
  <match src="identifier: add [7675,7678]" dest="identifier: add [8203,8206]"/>
  <match src=",: , [101026,101027]" dest=",: , [40412,40413]"/>
  <match src="}: } [90898,90899]" dest="}: } [30284,30285]"/>
  <match src="}: } [45612,45613]" dest="}: } [15709,15710]"/>
  <match src="function: function [45729,45737]" dest="function: function [15826,15834]"/>
  <match src="call_argument [66549,66558]" dest="call_argument [72377,72408]"/>
  <match src="returns: returns [70461,70468]" dest="returns: returns [81630,81637]"/>
  <match src="call_argument [81570,81580]" dest="call_argument [79828,79838]"/>
  <match src="member_expression [66510,66522]" dest="member_expression [80968,80980]"/>
  <match src="identifier: Decimal [62669,62676]" dest="identifier: Decimal [65510,65517]"/>
  <match src="function: function [91994,92002]" dest="function: function [31380,31388]"/>
  <match src="primitive_type [98932,98938]" dest="primitive_type [38318,38324]"/>
  <match src="type_name [104430,104437]" dest="type_name [43816,43823]"/>
  <match src="type_name [52300,52306]" dest="type_name [20424,20430]"/>
  <match src="function_definition [27758,28176]" dest="function_definition [45470,45888]"/>
  <match src="call_argument [2669,2670]" dest="call_argument [3197,3198]"/>
  <match src="identifier: from [97614,97618]" dest="identifier: from [37000,37004]"/>
  <match src="}: } [94868,94869]" dest="}: } [34254,34255]"/>
  <match src="visibility [52850,52858]" dest="visibility [20974,20982]"/>
  <match src=".: . [100748,100749]" dest=".: . [40134,40135]"/>
  <match src="!=: != [33989,33991]" dest="!=: != [51701,51703]"/>
  <match src="parameter [54133,54143]" dest="parameter [22257,22267]"/>
  <match src="identifier: balanceCheck [80878,80890]" dest="identifier: balanceCheck [56359,56371]"/>
  <match src="{: { [86512,86513]" dest="{: { [28303,28304]"/>
  <match src="}: } [46334,46335]" dest="}: } [16431,16432]"/>
  <match src="type_name [51478,51485]" dest="type_name [61028,61035]"/>
  <match src=",: , [29692,29693]" dest=",: , [47404,47405]"/>
  <match src="]: ] [104344,104345]" dest="]: ] [43730,43731]"/>
  <match src="call_expression [89103,89142]" dest="call_expression [76293,76332]"/>
  <match src="identifier: spender [12301,12308]" dest="identifier: spender [23602,23609]"/>
  <match src="parameter [80976,80989]" dest="parameter [72513,72526]"/>
  <match src="return: return [7464,7470]" dest="return: return [7992,7998]"/>
  <match src="call_argument [462,491]" dest="call_argument [990,1019]"/>
  <match src="primitive_type [81185,81192]" dest="primitive_type [62668,62675]"/>
  <match src="function: function [96651,96659]" dest="function: function [36037,36045]"/>
  <match src="[: [ [101138,101139]" dest="[: [ [40524,40525]"/>
  <match src="}: } [92205,92206]" dest="}: } [31591,31592]"/>
  <match src="%: % [4793,4794]" dest="%: % [5321,5322]"/>
  <match src=".: . [104307,104308]" dest=".: . [43693,43694]"/>
  <match src="visibility [90925,90931]" dest="visibility [30311,30317]"/>
  <match src=".: . [91874,91875]" dest=".: . [31260,31261]"/>
  <match src=":: : [45836,45837]" dest=":: : [15933,15934]"/>
  <match src="return: return [45457,45463]" dest="return: return [15554,15560]"/>
  <match src="}: } [43968,43969]" dest="}: } [14065,14066]"/>
  <match src="function_definition [45619,45723]" dest="function_definition [15716,15820]"/>
  <match src="type_name [54227,54231]" dest="type_name [22351,22355]"/>
  <match src="contract: contract [90437,90445]" dest="contract: contract [29823,29831]"/>
  <match src="identifier: spender [101818,101825]" dest="identifier: spender [41204,41211]"/>
  <match src="function: function [80960,80968]" dest="function: function [71984,71992]"/>
  <match src="type_name [87248,87283]" dest="type_name [29039,29074]"/>
  <match src="identifier: result [33616,33622]" dest="identifier: result [51328,51334]"/>
  <match src="parameter [104233,104253]" dest="parameter [43619,43639]"/>
  <match src="comment: // 20% [43001,43007]" dest="comment: // 20% [13098,13104]"/>
  <match src="call_struct_argument [45831,45852]" dest="call_struct_argument [15928,15949]"/>
  <match src="identifier: _state [91455,91461]" dest="identifier: _state [30841,30847]"/>
  <match src="comment: /* Market */ [42865,42877]" dest="comment: /* Market */ [12962,12974]"/>
  <match src="identifier: token0 [53655,53661]" dest="identifier: token0 [21779,21785]"/>
  <match src="array_access [99618,99642]" dest="array_access [39004,39028]"/>
  <match src="parameter [8973,8986]" dest="parameter [9501,9514]"/>
  <match src="function_definition [94591,94728]" dest="function_definition [33977,34114]"/>
  <match src="{: { [10026,10027]" dest="{: { [10554,10555]"/>
  <match src="call_argument [21949,21985]" dest="call_argument [63567,63611]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [75734,76414]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [67997,68677]"/>
  <match src="bytes32: bytes32 [30003,30010]" dest="bytes32: bytes32 [47715,47722]"/>
  <match src="visibility [6139,6147]" dest="visibility [6667,6675]"/>
  <match src="): ) [92260,92261]" dest="): ) [31646,31647]"/>
  <match src="unary_expression [30138,30143]" dest="unary_expression [47850,47855]"/>
  <match src=":: : [46189,46190]" dest=":: : [16286,16287]"/>
  <match src="(: ( [81873,81874]" dest="(: ( [72455,72456]"/>
  <match src="): ) [80616,80617]" dest="): ) [71680,71681]"/>
  <match src="{: { [62657,62658]" dest="{: { [65466,65467]"/>
  <match src="internal: internal [28882,28890]" dest="internal: internal [46594,46602]"/>
  <match src="): ) [66409,66410]" dest="): ) [62253,62254]"/>
  <match src="identifier: account [78984,78991]" dest="identifier: account [70590,70597]"/>
  <match src="uint256: uint256 [45206,45213]" dest="uint256: uint256 [15303,15310]"/>
  <match src="): ) [6027,6028]" dest="): ) [6555,6556]"/>
  <match src="identifier: getChainId [46454,46464]" dest="identifier: getChainId [16551,16561]"/>
  <match src="internal: internal [8996,9004]" dest="internal: internal [9524,9532]"/>
  <match src="call_struct_argument [6549,6583]" dest="call_struct_argument [7077,7111]"/>
  <match src="call_argument [80779,80789]" dest="call_argument [71816,71826]"/>
  <match src="function: function [80221,80229]" dest="function: function [71418,71426]"/>
  <match src="return_statement [2111,2120]" dest="return_statement [2639,2648]"/>
  <match src="type_name [53742,53749]" dest="type_name [21866,21873]"/>
  <match src="function: function [90706,90714]" dest="function: function [30092,30100]"/>
  <match src="state_mutability [96424,96428]" dest="state_mutability [35810,35814]"/>
  <match src="=: = [104569,104570]" dest="=: = [43955,43956]"/>
  <match src="member_expression [28991,29007]" dest="member_expression [46703,46719]"/>
  <match src="function: function [70291,70299]" dest="function: function [58640,58648]"/>
  <match src="user_defined_type [6291,6295]" dest="user_defined_type [6819,6823]"/>
  <match src="): ) [41630,41631]" dest="): ) [11727,11728]"/>
  <match src="(: ( [101446,101447]" dest="(: ( [40832,40833]"/>
  <match src="function_body [8156,8226]" dest="function_body [8684,8754]"/>
  <match src="(: ( [90853,90854]" dest="(: ( [30239,30240]"/>
  <match src=".: . [94216,94217]" dest=".: . [33602,33603]"/>
  <match src="identifier: spender [52542,52549]" dest="identifier: spender [20666,20673]"/>
  <match src="call_argument [7999,8006]" dest="call_argument [8527,8534]"/>
  <match src="}: } [46438,46439]" dest="}: } [16535,16536]"/>
  <match src="type_name [42008,42015]" dest="type_name [12105,12112]"/>
  <match src="function: function [95832,95840]" dest="function: function [35218,35226]"/>
  <match src="identifier: balance [98668,98675]" dest="identifier: balance [38054,38061]"/>
  <match src="private: private [42214,42221]" dest="private: private [12311,12318]"/>
  <match src="identifier: file [30011,30015]" dest="identifier: file [47723,47727]"/>
  <match src="primitive_type [30664,30671]" dest="primitive_type [48376,48383]"/>
  <match src="identifier: coupons [100887,100894]" dest="identifier: coupons [40273,40280]"/>
  <match src="string_literal [83662,83670]" dest="string_literal [78919,78926]"/>
  <match src="identifier: D256 [8263,8267]" dest="identifier: D256 [8791,8795]"/>
  <match src="identifier: must [27884,27888]" dest="identifier: must [45596,45600]"/>
  <match src="}: } [81904,81905]" dest="}: } [72480,72481]"/>
  <match src="type_name [82320,82327]" dest="type_name [56948,56955]"/>
  <match src="member_expression [92279,92299]" dest="member_expression [31665,31685]"/>
  <match src="identifier: sender [10991,10997]" dest="identifier: sender [64387,64393]"/>
  <match src="type_name [86821,86828]" dest="type_name [28612,28619]"/>
  <match src="primitive_type [104233,104239]" dest="primitive_type [43619,43625]"/>
  <match src="return_type_definition [1317,1334]" dest="return_type_definition [1845,1862]"/>
  <match src="member_expression [99738,99763]" dest="member_expression [39124,39149]"/>
  <match src="identifier: SafeMath [90475,90483]" dest="identifier: SafeMath [29861,29869]"/>
  <match src="call_argument [6197,6217]" dest="call_argument [6725,6745]"/>
  <match src=",: , [31998,31999]" dest=",: , [49710,49711]"/>
  <match src="member_expression [102879,102893]" dest="member_expression [42265,42279]"/>
  <match src=",: , [80939,80940]" dest=",: , [72994,72995]"/>
  <match src="comment: /**      * Global      */ [91359,91384]" dest="comment: /**      * Global      */ [30745,30770]"/>
  <match src=".: . [81869,81870]" dest=".: . [72451,72452]"/>
  <match src="&quot;: &quot; [48761,48762]" dest="&quot;: &quot; [56097,56098]"/>
  <match src="call_expression [82749,82763]" dest="call_expression [58089,58103]"/>
  <match src="private: private [33771,33778]" dest="private: private [51483,51490]"/>
  <match src="type_name [52140,52147]" dest="type_name [20264,20271]"/>
  <match src="(: ( [8873,8874]" dest="(: ( [9401,9402]"/>
  <match src="primitive_type [68159,68166]" dest="primitive_type [65602,65609]"/>
  <match src="type_name [30710,30717]" dest="type_name [48422,48429]"/>
  <match src="identifier: sender [97981,97987]" dest="identifier: sender [37367,37373]"/>
  <match src="type_name [49665,49672]" dest="type_name [26048,26055]"/>
  <match src="call_expression [28079,28105]" dest="call_expression [45791,45817]"/>
  <match src="binary_expression [36812,36839]" dest="binary_expression [54524,54551]"/>
  <match src="comment: // 3 cycles fluid [42842,42859]" dest="comment: // 3 cycles fluid [12939,12956]"/>
  <match src="call_argument [105743,105750]" dest="call_argument [68887,68894]"/>
  <match src=".: . [93319,93320]" dest=".: . [32705,32706]"/>
  <match src="identifier: expiring [95181,95189]" dest="identifier: expiring [34567,34575]"/>
  <match src="): ) [102167,102168]" dest="): ) [41553,41554]"/>
  <match src="parameter [8632,8648]" dest="parameter [9160,9176]"/>
  <match src="): ) [81875,81876]" dest="): ) [72457,72458]"/>
  <match src="internal: internal [102507,102515]" dest="internal: internal [41893,41901]"/>
  <match src="&quot;: &quot; [89555,89556]" dest="&quot;: &quot; [76745,76746]"/>
  <match src="identifier: skim [54300,54304]" dest="identifier: skim [22424,22428]"/>
  <match src="primitive_type [12293,12300]" dest="primitive_type [23594,23601]"/>
  <match src="): ) [81897,81898]" dest="): ) [72473,72474]"/>
  <match src="(: ( [45324,45325]" dest="(: ( [15421,15422]"/>
  <match src="identifier: debt [98676,98680]" dest="identifier: debt [38062,38066]"/>
  <match src=".: . [65668,65669]" dest=".: . [67733,67734]"/>
  <match src="memory: memory [8799,8805]" dest="memory: memory [9327,9333]"/>
  <match src="{: { [32154,32155]" dest="{: { [49866,49867]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [84203,84230]" dest="identifier: OpenZeppelinUpgradesAddress [73531,73558]"/>
  <match src="type_alias [72878,72886]" dest="type_alias [82687,82695]"/>
  <match src="state_variable_declaration [41803,41857]" dest="state_variable_declaration [11900,11954]"/>
  <match src="type_name [96535,96542]" dest="type_name [35921,35928]"/>
  <match src="]: ] [104306,104307]" dest="]: ] [43692,43693]"/>
  <match src="return_type_definition [45429,45446]" dest="return_type_definition [15526,15543]"/>
  <match src=".: . [101442,101443]" dest=".: . [40828,40829]"/>
  <match src="): ) [8276,8277]" dest="): ) [8804,8805]"/>
  <match src="primitive_type [103107,103114]" dest="primitive_type [42493,42500]"/>
  <match src="string: string [89179,89185]" dest="string: string [76369,76375]"/>
  <match src="parameter [54305,54315]" dest="parameter [22429,22439]"/>
  <match src="identifier: equals [8625,8631]" dest="identifier: equals [9153,9159]"/>
  <match src="type_name [92042,92049]" dest="type_name [31428,31435]"/>
  <match src="state_mutability [93725,93729]" dest="state_mutability [33111,33115]"/>
  <match src="type_name [86049,86056]" dest="type_name [27840,27847]"/>
  <match src="identifier: b [9251,9252]" dest="identifier: b [9779,9780]"/>
  <match src="memory: memory [65257,65263]" dest="memory: memory [67707,67713]"/>
  <match src="identifier: value [8557,8562]" dest="identifier: value [9085,9090]"/>
  <match src="return_statement [44325,44375]" dest="return_statement [14422,14472]"/>
  <match src="visibility [11655,11663]" dest="visibility [22956,22964]"/>
  <match src=":=: := [96794,96796]" dest=":=: := [36180,36182]"/>
  <match src="function: function [7154,7162]" dest="function: function [7682,7690]"/>
  <match src="identifier: value [7799,7804]" dest="identifier: value [8327,8332]"/>
  <match src="(: ( [6998,6999]" dest="(: ( [7526,7527]"/>
  <match src="type_name [4675,4681]" dest="type_name [5203,5209]"/>
  <match src="parameter [102479,102497]" dest="parameter [41865,41883]"/>
  <match src=".: . [106028,106029]" dest=".: . [69172,69173]"/>
  <match src="primitive_type [101493,101500]" dest="primitive_type [40879,40886]"/>
  <match src="visibility [66212,66220]" dest="visibility [70705,70713]"/>
  <match src="(: ( [96290,96291]" dest="(: ( [35676,35677]"/>
  <match src="parameter [80235,80248]" dest="parameter [71432,71445]"/>
  <match src="): ) [93913,93914]" dest="): ) [33299,33300]"/>
  <match src="): ) [32105,32106]" dest="): ) [49817,49818]"/>
  <match src="state_mutability [94922,94926]" dest="state_mutability [34308,34312]"/>
  <match src="&lt;: &lt; [9423,9424]" dest="&lt;: &lt; [9951,9952]"/>
  <match src="function: function [50675,50683]" dest="function: function [55368,55376]"/>
  <match src="member_expression [99013,99042]" dest="member_expression [38399,38428]"/>
  <match src="visibility [53556,53564]" dest="visibility [21680,21688]"/>
  <match src="identifier: D256 [6052,6056]" dest="identifier: D256 [6580,6584]"/>
  <match src="function: function [12995,13003]" dest="function: function [24296,24304]"/>
  <match src="identifier: amount [22439,22445]" dest="identifier: amount [17731,17737]"/>
  <match src="identifier: BASE [8587,8591]" dest="identifier: BASE [9115,9119]"/>
  <match src="call_expression [79497,79511]" dest="call_expression [56780,56794]"/>
  <match src="array_access [100641,100693]" dest="array_access [40027,40079]"/>
  <match src="member_expression [96461,96495]" dest="member_expression [35847,35881]"/>
  <match src="identifier: encodePacked [32224,32236]" dest="identifier: encodePacked [49936,49948]"/>
  <match src="identifier: lessThan [8946,8954]" dest="identifier: lessThan [9474,9482]"/>
  <match src="(: ( [71117,71118]" dest="(: ( [67047,67048]"/>
  <match src="returns: returns [71147,71154]" dest="returns: returns [67139,67146]"/>
  <match src="identifier: PERMIT_TYPEHASH [52896,52911]" dest="identifier: PERMIT_TYPEHASH [21020,21035]"/>
  <match src=",: , [4030,4031]" dest=",: , [4558,4559]"/>
  <match src="visibility [67300,67308]" dest="visibility [78226,78234]"/>
  <match src="uint256: uint256 [65327,65334]" dest="uint256: uint256 [66817,66824]"/>
  <match src="call_argument [32220,32652]" dest="call_argument [49932,50364]"/>
  <match src="identifier: _state [96185,96191]" dest="identifier: _state [35571,35577]"/>
  <match src="&gt;: &gt; [104638,104639]" dest="&gt;: &gt; [44024,44025]"/>
  <match src="type_name [65956,65963]" dest="type_name [62459,62466]"/>
  <match src="type_name [96438,96442]" dest="type_name [35824,35828]"/>
  <match src="number_literal: 0 [96498,96499]" dest="number_literal: 0 [35884,35885]"/>
  <match src="(: ( [92018,92019]" dest="(: ( [31404,31405]"/>
  <match src="memory: memory [101971,101977]" dest="memory: memory [41357,41363]"/>
  <match src="type_name [31967,31971]" dest="type_name [49679,49683]"/>
  <match src="]: ] [92995,92996]" dest="]: ] [32381,32382]"/>
  <match src="parameter [16459,16473]" dest="parameter [56676,56690]"/>
  <match src="primitive_type [3239,3246]" dest="primitive_type [3767,3774]"/>
  <match src="public: public [96417,96423]" dest="public: public [35803,35809]"/>
  <match src="identifier: blockTimestamp [94497,94511]" dest="identifier: blockTimestamp [33883,33897]"/>
  <match src=".: . [105762,105763]" dest=".: . [68906,68907]"/>
  <match src="identifier: that [30631,30635]" dest="identifier: that [48343,48347]"/>
  <match src="variable_declaration_statement [71365,71502]" dest="variable_declaration_statement [81726,81837]"/>
  <match src="): ) [8600,8601]" dest="): ) [9128,9129]"/>
  <match src="call_expression [82587,82600]" dest="call_expression [72675,72688]"/>
  <match src="type_name [100988,100995]" dest="type_name [40374,40381]"/>
  <match src="call_argument [76943,76955]" dest="call_argument [62722,62734]"/>
  <match src="(: ( [7522,7523]" dest="(: ( [8050,8051]"/>
  <match src="): ) [98783,98784]" dest="): ) [38169,38170]"/>
  <match src="type_name [101036,101043]" dest="type_name [40422,40429]"/>
  <match src=".: . [94990,94991]" dest=".: . [34376,34377]"/>
  <match src="uint256: uint256 [94655,94662]" dest="uint256: uint256 [34041,34048]"/>
  <match src="visibility [42134,42141]" dest="visibility [12231,12238]"/>
  <match src="uint256: uint256 [3312,3319]" dest="uint256: uint256 [3840,3847]"/>
  <match src="number_literal: 10 [34578,34580]" dest="number_literal: 10 [52290,52292]"/>
  <match src="function: function [103461,103469]" dest="function: function [42847,42855]"/>
  <match src="call_argument [8404,8408]" dest="call_argument [8932,8936]"/>
  <match src="[: [ [101793,101794]" dest="[: [ [41179,41180]"/>
  <match src="return_statement [91448,91478]" dest="return_statement [30834,30864]"/>
  <match src="function: function [52200,52208]" dest="function: function [20324,20332]"/>
  <match src="): ) [28717,28718]" dest="): ) [46429,46430]"/>
  <match src=".: . [91968,91969]" dest=".: . [31354,31355]"/>
  <match src="call_argument [29033,29057]" dest="call_argument [46745,46769]"/>
  <match src="): ) [94544,94545]" dest="): ) [33930,33931]"/>
  <match src="member_expression [102010,102025]" dest="member_expression [41396,41411]"/>
  <match src="identifier: self [7122,7126]" dest="identifier: self [7650,7654]"/>
  <match src="}: } [92099,92100]" dest="}: } [31485,31486]"/>
  <match src="identifier: that [83525,83529]" dest="identifier: that [78296,78300]"/>
  <match src="identifier: file [29687,29691]" dest="identifier: file [47399,47403]"/>
  <match src="return_type_definition [6884,6905]" dest="return_type_definition [7412,7433]"/>
  <match src="member_expression [94336,94356]" dest="member_expression [33722,33742]"/>
  <match src="bytes32: bytes32 [30686,30693]" dest="bytes32: bytes32 [48398,48405]"/>
  <match src="view: view [96277,96281]" dest="view: view [35663,35667]"/>
  <match src="call_expression [100641,100718]" dest="call_expression [40027,40104]"/>
  <match src="solidity: solidity [43,51]" dest="solidity: solidity [7,15]"/>
  <match src="visibility [43703,43711]" dest="visibility [13800,13808]"/>
  <match src="state_variable_declaration [43226,43270]" dest="state_variable_declaration [13323,13367]"/>
  <match src="call_argument [32548,32553]" dest="call_argument [50260,50265]"/>
  <match src="state_mutability [96684,96688]" dest="state_mutability [36070,36074]"/>
  <match src="type_name [10013,10020]" dest="type_name [10541,10548]"/>
  <match src="[: [ [104296,104297]" dest="[: [ [43682,43683]"/>
  <match src="parameter [21020,21034]" dest="parameter [56170,56184]"/>
  <match src="primitive_type [4066,4073]" dest="primitive_type [4594,4601]"/>
  <match src="identifier: allowance [51034,51043]" dest="identifier: allowanceCoupons [64419,64435]"/>
  <match src="(: ( [46464,46465]" dest="(: ( [16561,16562]"/>
  <match src="type_name [65244,65256]" dest="type_name [67694,67706]"/>
  <match src="identifier: accounts [100648,100656]" dest="identifier: accounts [40034,40042]"/>
  <match src="(: ( [31563,31564]" dest="(: ( [49275,49276]"/>
  <match src="primitive_type [64941,64945]" dest="primitive_type [67753,67757]"/>
  <match src="call_expression [103583,103657]" dest="call_expression [42969,43043]"/>
  <match src="primitive_type [89022,89026]" dest="primitive_type [76212,76216]"/>
  <match src="): ) [50814,50815]" dest="): ) [55472,55473]"/>
  <match src="primitive_type [103986,103993]" dest="primitive_type [43372,43379]"/>
  <match src="identifier: amount [73294,73300]" dest="identifier: amount [56219,56225]"/>
  <match src="uint: uint [53419,53423]" dest="uint: uint [21543,21547]"/>
  <match src="primitive_type [98165,98172]" dest="primitive_type [37551,37558]"/>
  <match src="state_mutability [33783,33787]" dest="state_mutability [51495,51499]"/>
  <match src="array_access [100599,100638]" dest="array_access [39985,40024]"/>
  <match src="variable_declaration_statement [7499,7544]" dest="variable_declaration_statement [8027,8072]"/>
  <match src="(: ( [9454,9455]" dest="(: ( [9982,9983]"/>
  <match src="call_argument [21295,21302]" dest="call_argument [83407,83414]"/>
  <match src="identifier: must [28334,28338]" dest="identifier: must [46046,46050]"/>
  <match src=",: , [31835,31836]" dest=",: , [49547,49548]"/>
  <match src="}: } [22086,22087]" dest="}: } [63748,63749]"/>
  <match src="identifier: _state [95290,95296]" dest="identifier: _state [34676,34682]"/>
  <match src="return_statement [92659,92668]" dest="return_statement [32045,32054]"/>
  <match src="[: [ [103822,103823]" dest="[: [ [43208,43209]"/>
  <match src=",: , [102477,102478]" dest=",: , [41863,41864]"/>
  <match src="function_definition [12259,12342]" dest="function_definition [23560,23643]"/>
  <match src="(: ( [31750,31751]" dest="(: ( [49462,49463]"/>
  <match src="parameter [12333,12340]" dest="parameter [23634,23641]"/>
  <match src="function_definition [91490,91584]" dest="function_definition [30876,30970]"/>
  <match src=".: . [98230,98231]" dest=".: . [37616,37617]"/>
  <match src="identifier: sender [82201,82207]" dest="identifier: sender [78315,78321]"/>
  <match src="primitive_type [83139,83146]" dest="primitive_type [58991,58998]"/>
  <match src="call_argument [89484,89541]" dest="call_argument [76674,76731]"/>
  <match src="uint256: uint256 [102464,102471]" dest="uint256: uint256 [41850,41857]"/>
  <match src="private: private [41454,41461]" dest="private: private [11551,11558]"/>
  <match src="identifier: amount [73631,73637]" dest="identifier: amount [63676,63682]"/>
  <match src=".: . [102910,102911]" dest=".: . [42296,42297]"/>
  <match src="--: -- [33251,33253]" dest="--: -- [50963,50965]"/>
  <match src="identifier: reason [31040,31046]" dest="identifier: reason [48752,48758]"/>
  <match src="number_literal: 96 [42592,42594]" dest="number_literal: 96 [12689,12691]"/>
  <match src="internal: internal [46089,46097]" dest="internal: internal [16186,16194]"/>
  <match src="uint256: uint256 [97738,97745]" dest="uint256: uint256 [37124,37131]"/>
  <match src="visibility [97762,97770]" dest="visibility [37148,37156]"/>
  <match src="type_name [46590,46597]" dest="type_name [16687,16694]"/>
  <match src="private: private [94256,94263]" dest="private: private [33642,33649]"/>
  <match src="parameter [101915,101930]" dest="parameter [41301,41316]"/>
  <match src="): ) [92643,92644]" dest="): ) [32029,32030]"/>
  <match src=",: , [103984,103985]" dest=",: , [43370,43371]"/>
  <match src=".: . [91561,91562]" dest=".: . [30947,30948]"/>
  <match src=",: , [80923,80924]" dest=",: , [72978,72979]"/>
  <match src="identifier: _state [99217,99223]" dest="identifier: _state [38603,38609]"/>
  <match src="return_statement [96454,96500]" dest="return_statement [35840,35886]"/>
  <match src=".: . [102268,102269]" dest=".: . [41654,41655]"/>
  <match src="visibility [33771,33778]" dest="visibility [51483,51490]"/>
  <match src="return_statement [95638,95689]" dest="return_statement [35024,35075]"/>
  <match src="call_expression [36441,36464]" dest="call_expression [54153,54176]"/>
  <match src="state_mutability [53565,53569]" dest="state_mutability [21689,21693]"/>
  <match src="): ) [32862,32863]" dest="): ) [50574,50575]"/>
  <match src="}: } [44941,44942]" dest="}: } [15038,15039]"/>
  <match src="string [25904,25954]" dest="string [79281,79310]"/>
  <match src="(: ( [43810,43811]" dest="(: ( [13907,13908]"/>
  <match src="call_struct_argument [5991,5999]" dest="call_struct_argument [6519,6527]"/>
  <match src="state_mutability [52349,52353]" dest="state_mutability [20473,20477]"/>
  <match src="member_expression [93240,93365]" dest="member_expression [32626,32751]"/>
  <match src="identifier: value [6327,6332]" dest="identifier: value [6855,6860]"/>
  <match src="{: { [99207,99208]" dest="{: { [38593,38594]"/>
  <match src="): ) [6357,6358]" dest="): ) [6885,6886]"/>
  <match src="}: } [93637,93638]" dest="}: } [33023,33024]"/>
  <match src="return: return [92965,92971]" dest="return: return [32351,32357]"/>
  <match src="identifier: to [54313,54315]" dest="identifier: to [22437,22439]"/>
  <match src="parameter [101013,101026]" dest="parameter [40399,40412]"/>
  <match src="): ) [44530,44531]" dest="): ) [14627,14628]"/>
  <match src="member_expression [99013,99038]" dest="member_expression [38399,38424]"/>
  <match src="binary_expression [33399,33404]" dest="binary_expression [51111,51116]"/>
  <match src="+: + [34501,34502]" dest="+: + [52213,52214]"/>
  <match src="(: ( [79174,79175]" dest="(: ( [78105,78106]"/>
  <match src="): ) [46497,46498]" dest="): ) [16594,16595]"/>
  <match src="is: is [78463,78465]" dest="is: is [70189,70191]"/>
  <match src="[: [ [100631,100632]" dest="[: [ [40017,40018]"/>
  <match src="call_expression [70363,70371]" dest="call_expression [58708,58716]"/>
  <match src="type_name [101690,101697]" dest="type_name [41076,41083]"/>
  <match src="parameter [52300,52313]" dest="parameter [20424,20437]"/>
  <match src=",: , [2670,2671]" dest=",: , [3198,3199]"/>
  <match src="}: } [8417,8418]" dest="}: } [8945,8946]"/>
  <match src="identifier: LibEIP712 [47846,47855]" dest="identifier: transferFrom [55682,55694]"/>
  <match src="identifier: char [36303,36307]" dest="identifier: char [54015,54019]"/>
  <match src="function: function [53936,53944]" dest="function: function [22060,22068]"/>
  <match src="comment: // each byte takes two characters [36144,36177]" dest="comment: // each byte takes two characters [53856,53889]"/>
  <match src="(: ( [9127,9128]" dest="(: ( [9655,9656]"/>
  <match src="identifier: amount1 [53192,53199]" dest="identifier: amount1 [21316,21323]"/>
  <match src="(: ( [94760,94761]" dest="(: ( [34146,34147]"/>
  <match src="uint: uint [54177,54181]" dest="uint: uint [22301,22305]"/>
  <match src="identifier: accounts [102017,102025]" dest="identifier: accounts [41403,41411]"/>
  <match src="identifier: z [36340,36341]" dest="identifier: z [54052,54053]"/>
  <match src="identifier: reserve1 [53511,53519]" dest="identifier: reserve1 [21635,21643]"/>
  <match src="function_definition [13376,13473]" dest="function_definition [24677,24774]"/>
  <match src="type_name [27440,27447]" dest="type_name [45152,45159]"/>
  <match src="call_expression [6571,6582]" dest="call_expression [7099,7110]"/>
  <match src="call_expression [34110,34127]" dest="call_expression [51822,51839]"/>
  <match src="primitive_type [9035,9039]" dest="primitive_type [9563,9567]"/>
  <match src="identifier: candidate [95663,95672]" dest="identifier: candidate [35049,35058]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [49767,50447]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [26150,26830]"/>
  <match src="address: address [41534,41541]" dest="address: address [11631,11638]"/>
  <match src="view: view [90729,90733]" dest="view: view [30115,30119]"/>
  <match src="state_mutability [35645,35649]" dest="state_mutability [53357,53361]"/>
  <match src="address: address [54305,54312]" dest="address: address [22429,22436]"/>
  <match src="type_name [32058,32065]" dest="type_name [49770,49777]"/>
  <match src="identifier: balance [98839,98846]" dest="identifier: balance [38225,38232]"/>
  <match src="visibility [53719,53727]" dest="visibility [21843,21851]"/>
  <match src="]: ] [96625,96626]" dest="]: ] [36011,36012]"/>
  <match src="[: [ [102382,102383]" dest="[: [ [41768,41769]"/>
  <match src="identifier: getPartial [8372,8382]" dest="identifier: getPartial [8900,8910]"/>
  <match src="identifier: errorMessage [4689,4701]" dest="identifier: errorMessage [5217,5229]"/>
  <match src="call_argument [51002,51011]" dest="call_argument [64330,64339]"/>
  <match src="array_access [102061,102096]" dest="array_access [41447,41482]"/>
  <match src="=: = [5760,5761]" dest="=: = [6288,6289]"/>
  <match src="primitive_type [78912,78919]" dest="primitive_type [82812,82819]"/>
  <match src="): ) [9039,9040]" dest="): ) [9567,9568]"/>
  <match src="internal: internal [103379,103387]" dest="internal: internal [42765,42773]"/>
  <match src="return_type_definition [44142,44159]" dest="return_type_definition [14239,14256]"/>
  <match src="call_expression [21840,21908]" dest="call_expression [62478,62547]"/>
  <match src="identifier: SafeMath [5667,5675]" dest="identifier: SafeMath [6195,6203]"/>
  <match src="binary_expression [3447,3452]" dest="binary_expression [3975,3980]"/>
  <match src=".: . [83344,83345]" dest=".: . [80219,80220]"/>
  <match src="call_struct_argument [46002,46028]" dest="call_struct_argument [16099,16125]"/>
  <match src="function: function [44497,44505]" dest="function: function [14594,14602]"/>
  <match src="visibility [79599,79607]" dest="visibility [71137,71145]"/>
  <match src="(: ( [34966,34967]" dest="(: ( [52678,52679]"/>
  <match src="primitive_type [50706,50713]" dest="primitive_type [55408,55415]"/>
  <match src="(: ( [70381,70382]" dest="(: ( [58726,58727]"/>
  <match src="): ) [23044,23045]" dest="): ) [55931,55932]"/>
  <match src="identifier: lessUsdc [82310,82318]" dest="identifier: targetDebt [58294,58304]"/>
  <match src="identifier: _state [91068,91074]" dest="identifier: _state [30454,30460]"/>
  <match src="): ) [96166,96167]" dest="): ) [35552,35553]"/>
  <match src="primitive_type [54244,54251]" dest="primitive_type [22368,22375]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [13075,13371]" dest="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [24376,24672]"/>
  <match src="identifier: epoch [93240,93245]" dest="identifier: epoch [32626,32631]"/>
  <match src="identifier: amount [97875,97881]" dest="identifier: amount [37261,37267]"/>
  <match src="identifier: balance [98690,98697]" dest="identifier: balance [38076,38083]"/>
  <match src="identifier: that [106171,106175]" dest="identifier: that [69315,69319]"/>
  <match src="(: ( [21002,21003]" dest="(: ( [56169,56170]"/>
  <match src="state_mutability [45192,45196]" dest="state_mutability [15289,15293]"/>
  <match src="internal: internal [103786,103794]" dest="internal: internal [43172,43180]"/>
  <match src="user_defined_type [9455,9459]" dest="user_defined_type [9983,9987]"/>
  <match src="identifier: zero [5925,5929]" dest="identifier: zero [6453,6457]"/>
  <match src="=: = [78766,78767]" dest="=: = [70281,70282]"/>
  <match src="): ) [79972,79973]" dest="): ) [71194,71195]"/>
  <match src="member_expression [82518,82559]" dest="member_expression [72646,72655]"/>
  <match src="binary_expression [36344,36350]" dest="binary_expression [54056,54062]"/>
  <match src="assembly_statement [96766,96818]" dest="assembly_statement [36152,36204]"/>
  <match src="primitive_type [33956,33963]" dest="primitive_type [51668,51675]"/>
  <match src="identifier: bonded [98239,98245]" dest="identifier: bonded [37625,37631]"/>
  <match src="identifier: owner [52459,52464]" dest="identifier: owner [20583,20588]"/>
  <match src="identifier: file [30959,30963]" dest="identifier: file [48671,48675]"/>
  <match src="]: ] [103009,103010]" dest="]: ] [42395,42396]"/>
  <match src="return_type_definition [65235,65264]" dest="return_type_definition [67685,67714]"/>
  <match src="identifier: account [93478,93485]" dest="identifier: account [32864,32871]"/>
  <match src="return: return [96310,96316]" dest="return: return [35696,35702]"/>
  <match src="[: [ [95189,95190]" dest="[: [ [34575,34576]"/>
  <match src="type_name [5738,5745]" dest="type_name [6266,6273]"/>
  <match src="(: ( [36548,36549]" dest="(: ( [54260,54261]"/>
  <match src="): ) [99703,99704]" dest="): ) [39089,39090]"/>
  <match src="parameter [9607,9614]" dest="parameter [10135,10142]"/>
  <match src="(: ( [70369,70370]" dest="(: ( [58714,58715]"/>
  <match src="call_expression [89463,89626]" dest="call_expression [76653,76816]"/>
  <match src="type_name [61936,61943]" dest="type_name [26991,26998]"/>
  <match src="string_literal [81613,81648]" dest="string_literal [80722,80736]"/>
  <match src="expression_statement [35466,35511]" dest="expression_statement [53178,53223]"/>
  <match src="type_name [8794,8798]" dest="type_name [9322,9326]"/>
  <match src="}: } [21329,21330]" dest="}: } [56379,56380]"/>
  <match src="visibility [90722,90728]" dest="visibility [30108,30114]"/>
  <match src="uint: uint [53173,53177]" dest="uint: uint [21297,21301]"/>
  <match src=".: . [8579,8580]" dest=".: . [9107,9108]"/>
  <match src="identifier: redeemable [92083,92093]" dest="identifier: redeemable [31469,31479]"/>
  <match src="call_argument [3405,3410]" dest="call_argument [3933,3938]"/>
  <match src="visibility [101991,101999]" dest="visibility [41377,41385]"/>
  <match src="): ) [34511,34512]" dest="): ) [52223,52224]"/>
  <match src="(: ( [30271,30272]" dest="(: ( [47983,47984]"/>
  <match src="string_literal [106073,106095]" dest="string_literal [69217,69239]"/>
  <match src="struct_member [85981,85996]" dest="struct_member [27772,27787]"/>
  <match src="&quot;: &quot; [2675,2676]" dest="&quot;: &quot; [3203,3204]"/>
  <match src="parameter [101713,101728]" dest="parameter [41099,41114]"/>
  <match src="identifier: balance [101402,101409]" dest="identifier: balance [40788,40795]"/>
  <match src="identifier: stringify [29274,29283]" dest="identifier: stringify [46986,46995]"/>
  <match src="identifier: strategy [94357,94365]" dest="identifier: strategy [33743,33751]"/>
  <match src="(: ( [35848,35849]" dest="(: ( [53560,53561]"/>
  <match src=".: . [92476,92477]" dest=".: . [31862,31863]"/>
  <match src="identifier: D256 [6162,6166]" dest="identifier: D256 [6690,6694]"/>
  <match src="address: address [54133,54140]" dest="address: address [22257,22264]"/>
  <match src="identifier: b [6354,6355]" dest="identifier: b [6882,6883]"/>
  <match src="user_defined_type [8044,8048]" dest="user_defined_type [8572,8576]"/>
  <match src="parameter [12278,12291]" dest="parameter [23579,23592]"/>
  <match src="type_name [28270,28277]" dest="type_name [45982,45989]"/>
  <match src="type_name [101493,101500]" dest="type_name [40879,40886]"/>
  <match src="member_expression [93179,93200]" dest="member_expression [32565,32586]"/>
  <match src="(: ( [106321,106322]" dest="(: ( [69465,69466]"/>
  <match src=",: , [3259,3260]" dest=",: , [3787,3788]"/>
  <match src="call_expression [92891,92916]" dest="call_expression [32277,32302]"/>
  <match src="type_name [103967,103974]" dest="type_name [43353,43360]"/>
  <match src="memory: memory [6514,6520]" dest="memory: memory [7042,7048]"/>
  <match src="identifier: _state [98661,98667]" dest="identifier: _state [38047,38053]"/>
  <match src="function_definition [11907,11984]" dest="function_definition [23208,23285]"/>
  <match src="type_name [84653,84657]" dest="type_name [73981,73985]"/>
  <match src="identifier: D256 [6798,6802]" dest="identifier: D256 [7326,7330]"/>
  <match src="string: string [27928,27934]" dest="string: string [45640,45646]"/>
  <match src="variable_declaration [35236,35249]" dest="variable_declaration [52948,52961]"/>
  <match src="(: ( [52753,52754]" dest="(: ( [20877,20878]"/>
  <match src="&quot;: &quot; [56312,56313]" dest="&quot;: &quot; [72815,72816]"/>
  <match src=",: , [871,872]" dest=",: , [1399,1400]"/>
  <match src="uint256: uint256 [6629,6636]" dest="uint256: uint256 [7157,7164]"/>
  <match src=".: . [89076,89077]" dest=".: . [76266,76267]"/>
  <match src="uint256: uint256 [86129,86136]" dest="uint256: uint256 [27920,27927]"/>
  <match src="identifier: RPAREN [28658,28664]" dest="identifier: RPAREN [46370,46376]"/>
  <match src="(: ( [7678,7679]" dest="(: ( [8206,8207]"/>
  <match src="identifier: value [45831,45836]" dest="identifier: value [15928,15933]"/>
  <match src="call_expression [32427,32446]" dest="call_expression [50139,50158]"/>
  <match src="member_expression [100076,100097]" dest="member_expression [39462,39483]"/>
  <match src="type_name [400,407]" dest="type_name [928,935]"/>
  <match src="member_expression [101420,101446]" dest="member_expression [40806,40832]"/>
  <match src="type_name [30003,30010]" dest="type_name [47715,47722]"/>
  <match src="identifier: redeemable [99000,99010]" dest="identifier: redeemable [38386,38396]"/>
  <match src=".: . [104285,104286]" dest=".: . [43671,43672]"/>
  <match src="pure: pure [44827,44831]" dest="pure: pure [14924,14928]"/>
  <match src="(: ( [31190,31191]" dest="(: ( [48902,48903]"/>
  <match src="type_name [52162,52169]" dest="type_name [20286,20293]"/>
  <match src="}: } [33879,33880]" dest="}: } [51591,51592]"/>
  <match src="member_expression [102990,103018]" dest="member_expression [42376,42404]"/>
  <match src="(: ( [52488,52489]" dest="(: ( [20612,20613]"/>
  <match src="function_definition [11619,11687]" dest="function_definition [22920,22988]"/>
  <match src="function_definition [93378,93504]" dest="function_definition [32764,32890]"/>
  <match src="call_argument [75191,75197]" dest="call_argument [83369,83375]"/>
  <match src="): ) [7254,7255]" dest="): ) [7782,7783]"/>
  <match src="uint256: uint256 [63015,63022]" dest="uint256: uint256 [82751,82758]"/>
  <match src="identifier: getPartial [8564,8574]" dest="identifier: getPartial [9092,9102]"/>
  <match src="visibility [2616,2624]" dest="visibility [3144,3152]"/>
  <match src="function_body [90953,90979]" dest="function_body [30339,30365]"/>
  <match src="identifier: sender [79404,79410]" dest="identifier: sender [70967,70973]"/>
  <match src="identifier: require [19802,19809]" dest="identifier: require [64025,64032]"/>
  <match src="address: address [34653,34660]" dest="address: address [52365,52372]"/>
  <match src="function_definition [102427,102653]" dest="function_definition [41813,42039]"/>
  <match src="(: ( [103649,103650]" dest="(: ( [43035,43036]"/>
  <match src="type_name [90538,90545]" dest="type_name [29924,29931]"/>
  <match src=".: . [94982,94983]" dest=".: . [34368,34369]"/>
  <match src="external: external [83006,83014]" dest="external: external [63041,63049]"/>
  <match src="identifier: candidate [96328,96337]" dest="identifier: candidate [35714,35723]"/>
  <match src="primitive_type [82320,82327]" dest="primitive_type [56948,56955]"/>
  <match src="}: } [7631,7632]" dest="}: } [8159,8160]"/>
  <match src="]: ] [95687,95688]" dest="]: ] [35073,35074]"/>
  <match src="identifier: sub [103907,103910]" dest="identifier: sub [43293,43296]"/>
  <match src="visibility [42016,42023]" dest="visibility [12113,12120]"/>
  <match src="(: ( [78911,78912]" dest="(: ( [82811,82812]"/>
  <match src="bytes32: bytes32 [32008,32015]" dest="bytes32: bytes32 [49720,49727]"/>
  <match src="block_statement [34268,34591]" dest="block_statement [51980,52303]"/>
  <match src="type_name [53802,53809]" dest="type_name [21926,21933]"/>
  <match src=".: . [87224,87225]" dest=".: . [29015,29016]"/>
  <match src="function: function [52500,52508]" dest="function: function [20624,20632]"/>
  <match src="call_expression [99977,100042]" dest="call_expression [39363,39428]"/>
  <match src="&quot;: &quot; [83669,83670]" dest="&quot;: &quot; [78925,78926]"/>
  <match src="address: address [19740,19747]" dest="address: address [63934,63941]"/>
  <match src="): ) [45648,45649]" dest="): ) [15745,15746]"/>
  <match src="(: ( [102152,102153]" dest="(: ( [41538,41539]"/>
  <match src="parameter [61864,61883]" dest="parameter [26919,26938]"/>
  <match src=".: . [98414,98415]" dest=".: . [37800,37801]"/>
  <match src="type_name [53394,53398]" dest="type_name [21518,21522]"/>
  <match src="address: address [13911,13918]" dest="address: address [25212,25219]"/>
  <match src="type_name [27800,27807]" dest="type_name [45512,45519]"/>
  <match src="external: external [52398,52406]" dest="external: external [20522,20530]"/>
  <match src="comment: // 100 ZAI [42678,42688]" dest="comment: // 100 ZAI [12775,12785]"/>
  <match src="returns: returns [13458,13465]" dest="returns: returns [24759,24766]"/>
  <match src="}: } [36847,36848]" dest="}: } [54559,54560]"/>
  <match src="(: ( [8516,8517]" dest="(: ( [9044,9045]"/>
  <match src="return_type_definition [13458,13472]" dest="return_type_definition [24759,24773]"/>
  <match src="type_name [23030,23037]" dest="type_name [17900,17907]"/>
  <match src="string [90775,90802]" dest="string [30161,30188]"/>
  <match src="identifier: i [35171,35172]" dest="identifier: i [52883,52884]"/>
  <match src="parameter [29444,29456]" dest="parameter [47156,47168]"/>
  <match src="(: ( [44799,44800]" dest="(: ( [14896,14897]"/>
  <match src="(: ( [28622,28623]" dest="(: ( [46334,46335]"/>
  <match src="identifier: totalCoupons [92115,92127]" dest="identifier: totalCoupons [31501,31513]"/>
  <match src="user_defined_type [8437,8441]" dest="user_defined_type [8965,8969]"/>
  <match src="identifier: amount [98419,98425]" dest="identifier: amount [37805,37811]"/>
  <match src="identifier: reserve0 [53493,53501]" dest="identifier: reserve0 [21617,21625]"/>
  <match src="internal: internal [103525,103533]" dest="internal: internal [42911,42919]"/>
  <match src="if_statement [29549,29949]" dest="if_statement [47261,47661]"/>
  <match src="string_literal [25192,25227]" dest="string_literal [79490,79520]"/>
  <match src="&quot;: &quot; [82112,82113]" dest="&quot;: &quot; [80017,80018]"/>
  <match src="call_expression [96317,96338]" dest="call_expression [35703,35724]"/>
  <match src="identifier: _state [95152,95158]" dest="identifier: _state [34538,34544]"/>
  <match src="call_argument [22064,22071]" dest="call_argument [63726,63733]"/>
  <match src="type_name [31449,31456]" dest="type_name [49161,49168]"/>
  <match src="type_name [97738,97745]" dest="type_name [37124,37131]"/>
  <match src="): ) [95456,95457]" dest="): ) [34842,34843]"/>
  <match src=",: , [54225,54226]" dest=",: , [22349,22350]"/>
  <match src="call_argument [32312,32317]" dest="call_argument [50024,50029]"/>
  <match src="identifier: b [8985,8986]" dest="identifier: b [9513,9514]"/>
  <match src="): ) [101989,101990]" dest="): ) [41375,41376]"/>
  <match src="visibility [65939,65946]" dest="visibility [83328,83335]"/>
  <match src="): ) [45332,45333]" dest="): ) [15429,15430]"/>
  <match src="uint: uint [53005,53009]" dest="uint: uint [21129,21133]"/>
  <match src="constant: constant [78752,78760]" dest="constant: constant [70267,70275]"/>
  <match src="type_name [795,802]" dest="type_name [1323,1330]"/>
  <match src="primitive_type [7017,7024]" dest="primitive_type [7545,7552]"/>
  <match src="call_expression [98224,98257]" dest="call_expression [37610,37643]"/>
  <match src="bytes2: bytes2 [27578,27584]" dest="bytes2: bytes2 [45290,45296]"/>
  <match src="(: ( [23012,23013]" dest="(: ( [55899,55900]"/>
  <match src="member_expression [105734,105776]" dest="member_expression [68878,68920]"/>
  <match src="parameter [30003,30015]" dest="parameter [47715,47727]"/>
  <match src="identifier: owner [102026,102031]" dest="identifier: owner [41412,41417]"/>
  <match src="return_statement [10102,10135]" dest="return_statement [10630,10663]"/>
  <match src="function: function [30622,30630]" dest="function: function [48334,48342]"/>
  <match src="(: ( [96802,96803]" dest="(: ( [36188,36189]"/>
  <match src="(: ( [52720,52721]" dest="(: ( [20844,20845]"/>
  <match src="user_defined_type [87167,87180]" dest="user_defined_type [28958,28971]"/>
  <match src="function_definition [66392,66475]" dest="function_definition [62216,62388]"/>
  <match src="parameter [99879,99894]" dest="parameter [39265,39280]"/>
  <match src="(: ( [89169,89170]" dest="(: ( [76359,76360]"/>
  <match src=",: , [82797,82798]" dest=",: , [80810,80811]"/>
  <match src="private: private [90554,90561]" dest="private: private [29940,29947]"/>
  <match src="modifier: modifier [105919,105927]" dest="modifier: modifier [69063,69071]"/>
  <match src="call_argument [34484,34512]" dest="call_argument [52196,52224]"/>
  <match src="identifier: DEBT_RATIO_CAP [42977,42991]" dest="identifier: DEBT_RATIO_CAP [13074,13088]"/>
  <match src="type_name [8955,8959]" dest="type_name [9483,9487]"/>
  <match src="(: ( [36811,36812]" dest="(: ( [54523,54524]"/>
  <match src="assignment_expression [35328,35372]" dest="assignment_expression [53040,53084]"/>
  <match src="): ) [32669,32670]" dest="): ) [50381,50382]"/>
  <match src="type_name [32796,32803]" dest="type_name [50508,50515]"/>
  <match src="): ) [80938,80939]" dest="): ) [72993,72994]"/>
  <match src="): ) [103377,103378]" dest="): ) [42763,42764]"/>
  <match src="(: ( [93041,93042]" dest="(: ( [32427,32428]"/>
  <match src=",: , [54242,54243]" dest=",: , [22366,22367]"/>
  <match src="string_literal [62732,62740]" dest="string_literal [60342,60350]"/>
  <match src="array_access [104059,104087]" dest="array_access [43445,43473]"/>
  <match src="primitive_type [15766,15773]" dest="primitive_type [60420,60427]"/>
  <match src=",: , [1262,1263]" dest=",: , [1790,1791]"/>
  <match src="primitive_type [96119,96126]" dest="primitive_type [35505,35512]"/>
  <match src="type_name [103986,103993]" dest="type_name [43372,43379]"/>
  <match src="return: return [95407,95413]" dest="return: return [34793,34799]"/>
  <match src="type_name [54177,54181]" dest="type_name [22301,22305]"/>
  <match src="emit: emit [79848,79852]" dest="emit: emit [71373,71377]"/>
  <match src="address: address [13012,13019]" dest="address: address [24313,24320]"/>
  <match src=".: . [77186,77187]" dest=".: . [59446,59447]"/>
  <match src="parameter [104757,104774]" dest="parameter [44143,44160]"/>
  <match src="identifier: priceCumulative [64244,64259]" dest="identifier: endsAfter [80052,80061]"/>
  <match src="assembly: assembly [85137,85145]" dest="assembly: assembly [74465,74473]"/>
  <match src="(: ( [22056,22057]" dest="(: ( [63713,63714]"/>
  <match src="return_type_definition [93738,93755]" dest="return_type_definition [33124,33141]"/>
  <match src="return_type_definition [44660,44689]" dest="return_type_definition [14757,14786]"/>
  <match src="primitive_type [13063,13067]" dest="primitive_type [24364,24368]"/>
  <match src="identifier: oracle [107457,107463]" dest="identifier: oracle [67767,67773]"/>
  <match src="function: function [36535,36543]" dest="function: function [54247,54255]"/>
  <match src="number_literal: 1 [10081,10082]" dest="number_literal: 1 [10609,10610]"/>
  <match src="parameter [3250,3259]" dest="parameter [3778,3787]"/>
  <match src="view: view [61922,61926]" dest="view: view [26977,26981]"/>
  <match src="contract_body [78489,83692]" dest="contract_body [70212,73020]"/>
  <match src="): ) [89540,89541]" dest="): ) [76730,76731]"/>
  <match src="parameter [9208,9212]" dest="parameter [9736,9740]"/>
  <match src="): ) [52912,52913]" dest="): ) [21036,21037]"/>
  <match src="(: ( [53216,53217]" dest="(: ( [21340,21341]"/>
  <match src="identifier: amount [13441,13447]" dest="identifier: amount [24742,24748]"/>
  <match src="event: event [79028,79033]" dest="event: event [70418,70423]"/>
  <match src="identifier: require [446,453]" dest="identifier: require [974,981]"/>
  <match src="constant: constant [41462,41470]" dest="constant: constant [11559,11567]"/>
  <match src="uint: uint [53346,53350]" dest="uint: uint [21470,21474]"/>
  <match src="identifier: coupons [86475,86482]" dest="identifier: coupons [28266,28273]"/>
  <match src="call_argument [9648,9652]" dest="call_argument [10176,10180]"/>
  <match src="identifier: c [3556,3557]" dest="identifier: c [4084,4085]"/>
  <match src="member_expression [103215,103232]" dest="member_expression [42601,42618]"/>
  <match src="internal: internal [8120,8128]" dest="internal: internal [8648,8656]"/>
  <match src="identifier: candidates [96468,96478]" dest="identifier: candidates [35854,35864]"/>
  <match src="&quot;: &quot; [83574,83575]" dest="&quot;: &quot; [78350,78351]"/>
  <match src="primitive_type [27381,27388]" dest="primitive_type [45093,45100]"/>
  <match src="{: { [6197,6198]" dest="{: { [6725,6726]"/>
  <match src="member_expression [44707,44719]" dest="member_expression [14804,14816]"/>
  <match src="): ) [54398,54399]" dest="): ) [22522,22523]"/>
  <match src="return_statement [7786,7832]" dest="return_statement [8314,8360]"/>
  <match src="&quot;: &quot; [22484,22485]" dest="&quot;: &quot; [62622,62623]"/>
  <match src="identifier: candidates [103222,103232]" dest="identifier: candidates [42608,42618]"/>
  <match src="identifier: b [1699,1700]" dest="identifier: b [2227,2228]"/>
  <match src="identifier: epochs [102599,102605]" dest="identifier: epochs [41985,41991]"/>
  <match src="number_literal: 144 [42837,42840]" dest="number_literal: 144 [12934,12937]"/>
  <match src="return: return [45076,45082]" dest="return: return [15173,15179]"/>
  <match src="identifier: TREASURY_RATIO [43251,43265]" dest="identifier: TREASURY_RATIO [13348,13362]"/>
  <match src="{: { [44564,44565]" dest="{: { [14661,14662]"/>
  <match src="primitive_type [8712,8716]" dest="primitive_type [9240,9244]"/>
  <match src="contract: contract [105534,105542]" dest="contract: contract [68678,68686]"/>
  <match src=",: , [53090,53091]" dest=",: , [21214,21215]"/>
  <match src="primitive_type [5738,5745]" dest="primitive_type [6266,6273]"/>
  <match src=".: . [101553,101554]" dest=".: . [40939,40940]"/>
  <match src="(: ( [107761,107762]" dest="(: ( [56211,56212]"/>
  <match src="parameter [99165,99180]" dest="parameter [38551,38566]"/>
  <match src="type_name [91236,91243]" dest="type_name [30622,30629]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2132,2576]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [2660,3104]"/>
  <match src="primitive_type [53687,53694]" dest="primitive_type [21811,21818]"/>
  <match src="type_name [97598,97605]" dest="type_name [36984,36991]"/>
  <match src="parameter [27822,27836]" dest="parameter [45534,45548]"/>
  <match src="(: ( [61845,61846]" dest="(: ( [26900,26901]"/>
  <match src="contract_declaration [105534,106345]" dest="contract_declaration [68678,69489]"/>
  <match src="}: } [32700,32701]" dest="}: } [50412,50413]"/>
  <match src="}: } [80953,80954]" dest="}: } [71977,71978]"/>
  <match src="pure: pure [6487,6491]" dest="pure: pure [7015,7019]"/>
  <match src="function_body [9502,9541]" dest="function_body [10030,10069]"/>
  <match src="struct_member [86967,86986]" dest="struct_member [28758,28777]"/>
  <match src="type_name [97973,97980]" dest="type_name [37359,37366]"/>
  <match src="identifier: D256 [45049,45053]" dest="identifier: D256 [15146,15150]"/>
  <match src=".: . [91074,91075]" dest=".: . [30460,30461]"/>
  <match src="call_argument [32427,32446]" dest="call_argument [50139,50158]"/>
  <match src="address: address [52679,52686]" dest="address: address [20803,20810]"/>
  <match src="private: private [47659,47666]" dest="private: private [61546,61553]"/>
  <match src="identifier: input [34219,34224]" dest="identifier: input [51931,51936]"/>
  <match src="call_argument [34755,34760]" dest="call_argument [52467,52472]"/>
  <match src="&quot;: &quot; [82249,82250]" dest="&quot;: &quot; [80189,80190]"/>
  <match src="(: ( [35926,35927]" dest="(: ( [53638,53639]"/>
  <match src="{: { [45334,45335]" dest="{: { [15431,15432]"/>
  <match src="call_argument [28048,28053]" dest="call_argument [45760,45765]"/>
  <match src="visibility [99564,99572]" dest="visibility [38950,38958]"/>
  <match src="visibility [52632,52640]" dest="visibility [20756,20764]"/>
  <match src="type_name [51492,51496]" dest="type_name [60911,60918]"/>
  <match src="external: external [53556,53564]" dest="external: external [21680,21688]"/>
  <match src="member_expression [103805,103822]" dest="member_expression [43191,43208]"/>
  <match src="primitive_type [87156,87163]" dest="primitive_type [28947,28954]"/>
  <match src="string_literal [90886,90892]" dest="string_literal [30272,30278]"/>
  <match src="&quot;: &quot; [90801,90802]" dest="&quot;: &quot; [30187,30188]"/>
  <match src="parameter [92253,92260]" dest="parameter [31639,31646]"/>
  <match src="type_name [73382,73389]" dest="type_name [83312,83319]"/>
  <match src="visibility [61816,61822]" dest="visibility [26871,26877]"/>
  <match src="): ) [4733,4734]" dest="): ) [5261,5262]"/>
  <match src="): ) [64001,64002]" dest="): ) [67917,67918]"/>
  <match src="primitive_type [97850,97857]" dest="primitive_type [37236,37243]"/>
  <match src="function_definition [88909,89244]" dest="function_definition [76099,76434]"/>
  <match src="internal: internal [73734,73742]" dest="internal: internal [56424,56432]"/>
  <match src=".: . [102032,102033]" dest=".: . [41418,41419]"/>
  <match src="view: view [52991,52995]" dest="view: view [21115,21119]"/>
  <match src="call_argument [22439,22445]" dest="call_argument [17731,17737]"/>
  <match src="identifier: COMMA [31226,31231]" dest="identifier: COMMA [48938,48943]"/>
  <match src="}: } [8409,8410]" dest="}: } [8937,8938]"/>
  <match src=".: . [101800,101801]" dest=".: . [41186,41187]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [44177,44197]" dest="identifier: BOOTSTRAPPING_PERIOD [14274,14294]"/>
  <match src="internal: internal [44810,44818]" dest="internal: internal [14907,14915]"/>
  <match src="identifier: to [52178,52180]" dest="identifier: to [20302,20304]"/>
  <match src="update_expression [7580,7583]" dest="update_expression [8108,8111]"/>
  <match src="call_argument [98250,98256]" dest="call_argument [37636,37642]"/>
  <match src="): ) [6355,6356]" dest="): ) [6883,6884]"/>
  <match src="]: ] [91091,91092]" dest="]: ] [30477,30478]"/>
  <match src="): ) [28291,28292]" dest="): ) [46003,46004]"/>
  <match src="call_argument [20064,20070]" dest="call_argument [64707,64713]"/>
  <match src="): ) [6520,6521]" dest="): ) [7048,7049]"/>
  <match src="(: ( [33703,33704]" dest="(: ( [51415,51416]"/>
  <match src="call_expression [92694,92707]" dest="call_expression [32080,32093]"/>
  <match src="variable_declaration_statement [80390,80619]" dest="variable_declaration_statement [71527,71683]"/>
  <match src="parenthesized_expression [28945,29379]" dest="parenthesized_expression [46657,47091]"/>
  <match src="identifier: Getters [97536,97543]" dest="identifier: Getters [36922,36929]"/>
  <match src="number_literal: 1e22 [41760,41764]" dest="number_literal: 1e22 [11857,11861]"/>
  <match src="private: private [42400,42407]" dest="private: private [12497,12504]"/>
  <match src="identifier: account [100310,100317]" dest="identifier: account [39696,39703]"/>
  <match src="]: ] [35003,35004]" dest="]: ] [52715,52716]"/>
  <match src="call_argument [27956,28127]" dest="call_argument [45668,45839]"/>
  <match src="parameter [98165,98179]" dest="parameter [37551,37565]"/>
  <match src="primitive_type [41446,41453]" dest="primitive_type [11543,11550]"/>
  <match src="number_literal: 50 [43211,43213]" dest="number_literal: 50 [13308,13310]"/>
  <match src="parameter [3239,3248]" dest="parameter [3767,3776]"/>
  <match src="event_definition [53294,53469]" dest="event_definition [21418,21593]"/>
  <match src="{: { [44160,44161]" dest="{: { [14257,14258]"/>
  <match src="type_name [42882,42889]" dest="type_name [12979,12986]"/>
  <match src=".: . [81086,81087]" dest=".: . [72141,72142]"/>
  <match src="primitive_type [13467,13471]" dest="primitive_type [24768,24772]"/>
  <match src="primitive_type [11978,11982]" dest="primitive_type [23279,23283]"/>
  <match src="primitive_type [35007,35011]" dest="primitive_type [52719,52723]"/>
  <match src="identifier: mul [7133,7136]" dest="identifier: mul [7661,7664]"/>
  <match src="primitive_type [9742,9749]" dest="primitive_type [10270,10277]"/>
  <match src="==: == [10048,10050]" dest="==: == [10576,10578]"/>
  <match src="type_name [11638,11645]" dest="type_name [22939,22946]"/>
  <match src="return: return [93172,93178]" dest="return: return [32558,32564]"/>
  <match src="assignment_expression [101395,101462]" dest="assignment_expression [40781,40848]"/>
  <match src="return: return [93925,93931]" dest="return: return [33311,33317]"/>
  <match src="identifier: file [31670,31674]" dest="identifier: file [49382,49386]"/>
  <match src="call_argument [99804,99811]" dest="call_argument [39190,39197]"/>
  <match src="parameter [6291,6302]" dest="parameter [6819,6830]"/>
  <match src="uint256: uint256 [91936,91943]" dest="uint256: uint256 [31322,31329]"/>
  <match src="primitive_type [15732,15739]" dest="primitive_type [60296,60303]"/>
  <match src="returns: returns [61855,61862]" dest="returns: returns [26910,26917]"/>
  <match src="identifier: subtractedValue [18953,18968]" dest="identifier: totalSupply [17852,17863]"/>
  <match src="type_name [63948,63960]" dest="type_name [19312,19324]"/>
  <match src="identifier: to [54252,54254]" dest="identifier: to [22376,22378]"/>
  <match src="function_definition [80221,80954]" dest="function_definition [71418,71978]"/>
  <match src="identifier: outstandingCoupons [92891,92909]" dest="identifier: outstandingCoupons [32277,32295]"/>
  <match src="identifier: epochs [94969,94975]" dest="identifier: epochs [34355,34361]"/>
  <match src="internal: internal [100241,100249]" dest="internal: internal [39627,39635]"/>
  <match src="identifier: epochs [87232,87238]" dest="identifier: epochs [29023,29029]"/>
  <match src=",: , [103917,103918]" dest=",: , [43303,43304]"/>
  <match src="call_argument [20542,20548]" dest="call_argument [59006,59012]"/>
  <match src="uint256: uint256 [19687,19694]" dest="uint256: uint256 [63863,63870]"/>
  <match src="]: ] [95672,95673]" dest="]: ] [35058,35059]"/>
  <match src="variable_declaration [77494,77510]" dest="variable_declaration [61650,61667]"/>
  <match src="identifier: epoch [100785,100790]" dest="identifier: epoch [40171,40176]"/>
  <match src="identifier: decimals [90914,90922]" dest="identifier: decimals [30300,30308]"/>
  <match src="binary_expression [63524,63556]" dest="binary_expression [81391,81435]"/>
  <match src="return_statement [10074,10083]" dest="return_statement [10602,10611]"/>
  <match src="identifier: payloadA [28278,28286]" dest="identifier: payloadA [45990,45998]"/>
  <match src=".: . [30214,30215]" dest=".: . [47926,47927]"/>
  <match src="identifier: value [80803,80808]" dest="identifier: value [71840,71845]"/>
  <match src="parameter [53092,53099]" dest="parameter [21216,21223]"/>
  <match src="public: public [49681,49687]" dest="public: public [26064,26070]"/>
  <match src="member_expression [106000,106041]" dest="member_expression [69144,69185]"/>
  <match src="&gt;: &gt; [34261,34262]" dest="&gt;: &gt; [51973,51974]"/>
  <match src="type_name [94619,94626]" dest="type_name [34005,34012]"/>
  <match src="member_expression [100294,100329]" dest="member_expression [39680,39715]"/>
  <match src="identifier: supply [86903,86909]" dest="identifier: supply [28694,28700]"/>
  <match src="type_cast_expression [35012,35033]" dest="type_cast_expression [52724,52745]"/>
  <match src="assignment_expression [104279,104398]" dest="assignment_expression [43665,43784]"/>
  <match src="function: function [100122,100130]" dest="function: function [39508,39516]"/>
  <match src="parameter [31408,31417]" dest="parameter [49120,49129]"/>
  <match src="{: { [65265,65266]" dest="{: { [66589,66590]"/>
  <match src="member_expression [82518,82586]" dest="member_expression [72646,72674]"/>
  <match src="member_expression [101592,101624]" dest="member_expression [40978,41010]"/>
  <match src="call_argument [48667,48671]" dest="call_argument [62600,62604]"/>
  <match src="function: function [98882,98890]" dest="function: function [38268,38276]"/>
  <match src="return_type_definition [93998,94015]" dest="return_type_definition [33384,33401]"/>
  <match src="(: ( [8793,8794]" dest="(: ( [9321,9322]"/>
  <match src="using: using [15713,15718]" dest="using: using [60277,60282]"/>
  <match src="parameter [49601,49615]" dest="parameter [25984,25998]"/>
  <match src="(: ( [9647,9648]" dest="(: ( [10175,10176]"/>
  <match src="(: ( [8363,8364]" dest="(: ( [8891,8892]"/>
  <match src="&quot;: &quot; [106253,106254]" dest="&quot;: &quot; [69397,69398]"/>
  <match src="struct: struct [86307,86313]" dest="struct: struct [28098,28104]"/>
  <match src="primitive_type [94936,94943]" dest="primitive_type [34322,34329]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [90593,90659]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [29979,30045]"/>
  <match src="identifier: value [52113,52118]" dest="identifier: value [20237,20242]"/>
  <match src="primitive_type [102696,102703]" dest="primitive_type [42082,42089]"/>
  <match src="call_argument [89127,89141]" dest="call_argument [76317,76331]"/>
  <match src="uint256: uint256 [41934,41941]" dest="uint256: uint256 [12031,12038]"/>
  <match src="identifier: _state [93932,93938]" dest="identifier: _state [33318,33324]"/>
  <match src="identifier: getGovernanceSuperMajority [44965,44991]" dest="identifier: getGovernanceSuperMajority [15062,15088]"/>
  <match src="type_name [86030,86057]" dest="type_name [27821,27848]"/>
  <match src="): ) [71878,71879]" dest="): ) [81014,81015]"/>
  <match src="contract_body [85911,86185]" dest="contract_body [27702,27976]"/>
  <match src="struct_member [86797,86812]" dest="struct_member [28588,28603]"/>
  <match src="state_mutability [52225,52229]" dest="state_mutability [20349,20353]"/>
  <match src=",: , [32598,32599]" dest=",: , [50310,50311]"/>
  <match src="state_variable_declaration [42126,42179]" dest="state_variable_declaration [12223,12276]"/>
  <match src="identifier: b [7999,8000]" dest="identifier: b [8527,8528]"/>
  <match src="identifier: decrementAllowanceCoupons [101857,101882]" dest="identifier: decrementAllowanceCoupons [41243,41268]"/>
  <match src="primitive_type [86083,86090]" dest="primitive_type [27874,27881]"/>
  <match src="(: ( [9296,9297]" dest="(: ( [9824,9825]"/>
  <match src="call_expression [80483,80518]" dest="call_expression [71588,71623]"/>
  <match src="identifier: reason [27830,27836]" dest="identifier: reason [45542,45548]"/>
  <match src=".: . [91470,91471]" dest=".: . [30856,30857]"/>
  <match src="constant: constant [41819,41827]" dest="constant: constant [11916,11924]"/>
  <match src="string_literal [66549,66558]" dest="string_literal [72377,72408]"/>
  <match src="primitive_type [96398,96405]" dest="primitive_type [35784,35791]"/>
  <match src="event_definition [79161,79289]" dest="event_definition [78093,78158]"/>
  <match src="]: ] [95171,95172]" dest="]: ] [34557,34558]"/>
  <match src="(: ( [77180,77181]" dest="(: ( [59444,59445]"/>
  <match src="identifier: result [35562,35568]" dest="identifier: result [53274,53280]"/>
  <match src="call_expression [95423,95457]" dest="call_expression [34809,34843]"/>
  <match src="call_expression [80741,80867]" dest="call_expression [71778,71907]"/>
  <match src="type_name [53187,53191]" dest="type_name [21311,21315]"/>
  <match src="return_statement [7102,7142]" dest="return_statement [7630,7670]"/>
  <match src="parameter [97738,97752]" dest="parameter [37124,37138]"/>
  <match src="member_expression [104279,104314]" dest="member_expression [43665,43700]"/>
  <match src="): ) [95766,95767]" dest="): ) [35152,35153]"/>
  <match src="{: { [45566,45567]" dest="{: { [15663,15664]"/>
  <match src="): ) [92128,92129]" dest="): ) [31514,31515]"/>
  <match src="external: external [53609,53617]" dest="external: external [21733,21741]"/>
  <match src="identifier: supply [99343,99349]" dest="identifier: supply [38729,38735]"/>
  <match src="[: [ [36288,36289]" dest="[: [ [54000,54001]"/>
  <match src="function: function [92496,92504]" dest="function: function [31882,31890]"/>
  <match src="parameter [6999,7015]" dest="parameter [7527,7543]"/>
  <match src=".: . [104120,104121]" dest=".: . [43506,43507]"/>
  <match src=".: . [79727,79728]" dest=".: . [71274,71275]"/>
  <match src="external: external [13045,13053]" dest="external: external [24346,24354]"/>
  <match src="(: ( [41573,41574]" dest="(: ( [11670,11671]"/>
  <match src="address: address [77288,77295]" dest="address: address [79936,79943]"/>
  <match src="address: address [78855,78862]" dest="address: address [70373,70380]"/>
  <match src="event_definition [25636,25679]" dest="event_definition [60695,60818]"/>
  <match src="function_body [101519,101643]" dest="function_body [40905,41029]"/>
  <match src="(: ( [36101,36102]" dest="(: ( [53813,53814]"/>
  <match src="parameter [29490,29506]" dest="parameter [47202,47218]"/>
  <match src="function: function [27758,27766]" dest="function: function [45470,45478]"/>
  <match src="function: function [91390,91398]" dest="function: function [30776,30784]"/>
  <match src="return_statement [95910,95953]" dest="return_statement [35296,35339]"/>
  <match src="(: ( [31587,31588]" dest="(: ( [49299,49300]"/>
  <match src="{: { [97544,97545]" dest="{: { [36930,36931]"/>
  <match src="function_body [23053,23096]" dest="function_body [55942,56140]"/>
  <match src="(: ( [107443,107444]" dest="(: ( [55449,55450]"/>
  <match src="&quot;: &quot; [56636,56637]" dest="&quot;: &quot; [72904,72905]"/>
  <match src="identifier: a [1358,1359]" dest="identifier: a [1886,1887]"/>
  <match src="view: view [53788,53792]" dest="view: view [21912,21916]"/>
  <match src="call_expression [94336,94393]" dest="call_expression [33722,33779]"/>
  <match src="function: function [21755,21763]" dest="function: function [63435,63443]"/>
  <match src=",: , [82647,82648]" dest=",: , [62833,62834]"/>
  <match src="pure: pure [45192,45196]" dest="pure: pure [15289,15293]"/>
  <match src="uint256: uint256 [28855,28862]" dest="uint256: uint256 [46567,46574]"/>
  <match src="parameter [9952,9965]" dest="parameter [10480,10493]"/>
  <match src="(: ( [88696,88697]" dest="(: ( [75886,75887]"/>
  <match src="call_expression [83337,83463]" dest="call_expression [80212,80373]"/>
  <match src="call_argument [28079,28105]" dest="call_argument [45791,45817]"/>
  <match src="parameter [101060,101080]" dest="parameter [40446,40466]"/>
  <match src="identifier: stringify [32427,32436]" dest="identifier: stringify [50139,50148]"/>
  <match src="primitive_type [103126,103133]" dest="primitive_type [42512,42519]"/>
  <match src="call_argument [9078,9079]" dest="call_argument [9606,9607]"/>
  <match src="(: ( [97787,97788]" dest="(: ( [37173,37174]"/>
  <match src="]: ] [93274,93275]" dest="]: ] [32660,32661]"/>
  <match src="call_expression [82612,82658]" dest="call_expression [62797,62855]"/>
  <match src="=: = [98681,98682]" dest="=: = [38067,38068]"/>
  <match src="identifier: i [7566,7567]" dest="identifier: i [8094,8095]"/>
  <match src="[: [ [35955,35956]" dest="[: [ [53667,53668]"/>
  <match src="): ) [79879,79880]" dest="): ) [71404,71405]"/>
  <match src="function: function [90815,90823]" dest="function: function [30201,30209]"/>
  <match src="identifier: amount1 [53260,53267]" dest="identifier: amount1 [21384,21391]"/>
  <match src="=: = [1394,1395]" dest="=: = [1922,1923]"/>
  <match src="): ) [28144,28145]" dest="): ) [45856,45857]"/>
  <match src="(: ( [16706,16707]" dest="(: ( [58262,58263]"/>
  <match src="{: { [105698,105699]" dest="{: { [68842,68843]"/>
  <match src="visibility [42214,42221]" dest="visibility [12311,12318]"/>
  <match src="primitive_type [86094,86101]" dest="primitive_type [27885,27892]"/>
  <match src="identifier: balanceOfPhantom [71520,71536]" dest="identifier: newSupply [66738,66747]"/>
  <match src="visibility [101510,101518]" dest="visibility [40896,40904]"/>
  <match src=",: , [29217,29218]" dest=",: , [46929,46930]"/>
  <match src="identifier: success [89027,89034]" dest="identifier: success [76217,76224]"/>
  <match src="[: [ [102543,102544]" dest="[: [ [41929,41930]"/>
  <match src="returns: returns [15999,16006]" dest="returns: returns [17643,17650]"/>
  <match src=".: . [101112,101113]" dest=".: . [40498,40499]"/>
  <match src="call_argument [3412,3424]" dest="call_argument [3940,3952]"/>
  <match src="(: ( [81355,81356]" dest="(: ( [72154,72155]"/>
  <match src=",: , [103343,103344]" dest=",: , [42729,42730]"/>
  <match src="type_name [6509,6513]" dest="type_name [7037,7041]"/>
  <match src="): ) [83462,83463]" dest="): ) [80372,80373]"/>
  <match src="view: view [96011,96015]" dest="view: view [35397,35401]"/>
  <match src="bytes: bytes [35817,35822]" dest="bytes: bytes [53529,53534]"/>
  <match src="): ) [99384,99385]" dest="): ) [38770,38771]"/>
  <match src="identifier: getTreasuryAddress [46546,46564]" dest="identifier: getTreasuryAddress [16643,16661]"/>
  <match src="call_expression [21055,21122]" dest="call_expression [63139,63300]"/>
  <match src="emit: emit [22043,22047]" dest="emit: emit [63694,63698]"/>
  <match src="primitive_type [63015,63022]" dest="primitive_type [82751,82758]"/>
  <match src="type_name [29984,29988]" dest="type_name [47696,47700]"/>
  <match src="binary_expression [2052,2062]" dest="binary_expression [2580,2590]"/>
  <match src="primitive_type [98604,98611]" dest="primitive_type [37990,37997]"/>
  <match src="(: ( [49707,49708]" dest="(: ( [26090,26091]"/>
  <match src="(: ( [101680,101681]" dest="(: ( [41066,41067]"/>
  <match src="]: ] [103242,103243]" dest="]: ] [42628,42629]"/>
  <match src="identifier: FILE [66543,66547]" dest="identifier: FILE [81074,81078]"/>
  <match src="primitive_type [11678,11685]" dest="primitive_type [22979,22986]"/>
  <match src="identifier: add [75661,75664]" dest="identifier: add [61388,61391]"/>
  <match src="primitive_type [35817,35822]" dest="primitive_type [53529,53534]"/>
  <match src="call_argument [6326,6357]" dest="call_argument [6854,6885]"/>
  <match src="returns: returns [97892,97899]" dest="returns: returns [37278,37285]"/>
  <match src="identifier: sender [81711,81717]" dest="identifier: sender [79784,79790]"/>
  <match src="identifier: reason [30033,30039]" dest="identifier: reason [47745,47751]"/>
  <match src="primitive_type [93436,93443]" dest="primitive_type [32822,32829]"/>
  <match src="}: } [517,518]" dest="}: } [1045,1046]"/>
  <match src="type_name [16939,16946]" dest="type_name [59238,59245]"/>
  <match src="identifier: totalBondedAt [95214,95227]" dest="identifier: totalBondedAt [34600,34613]"/>
  <match src="identifier: sender [81501,81507]" dest="identifier: sender [71715,71721]"/>
  <match src="call_expression [79641,79676]" dest="call_expression [83068,83124]"/>
  <match src="uint256: uint256 [71175,71182]" dest="uint256: uint256 [67279,67286]"/>
  <match src="): ) [52848,52849]" dest="): ) [20972,20973]"/>
  <match src="visibility [7898,7906]" dest="visibility [8426,8434]"/>
  <match src="type_name [86895,86902]" dest="type_name [28686,28693]"/>
  <match src="primitive_type [52108,52112]" dest="primitive_type [20232,20236]"/>
  <match src="}: } [30615,30616]" dest="}: } [48327,48328]"/>
  <match src="visibility [78744,78751]" dest="visibility [70259,70266]"/>
  <match src="type_name [1275,1281]" dest="type_name [1803,1809]"/>
  <match src="identifier: require [89162,89169]" dest="identifier: require [76352,76359]"/>
  <match src="parameter [52519,52532]" dest="parameter [20643,20656]"/>
  <match src="return: return [44052,44058]" dest="return: return [14149,14155]"/>
  <match src="true: true [104838,104842]" dest="true: true [44224,44228]"/>
  <match src="function_body [95273,95324]" dest="function_body [34659,34710]"/>
  <match src="(: ( [45180,45181]" dest="(: ( [15277,15278]"/>
  <match src="state_mutability [95877,95881]" dest="state_mutability [35263,35267]"/>
  <match src=",: , [52160,52161]" dest=",: , [20284,20285]"/>
  <match src="&quot;: &quot; [25904,25905]" dest="&quot;: &quot; [79281,79282]"/>
  <match src="(: ( [36611,36612]" dest="(: ( [54323,54324]"/>
  <match src="identifier: i [33089,33090]" dest="identifier: i [50801,50802]"/>
  <match src="identifier: value [7127,7132]" dest="identifier: value [7655,7660]"/>
  <match src="(: ( [88927,88928]" dest="(: ( [76117,76118]"/>
  <match src="identifier: bond [80230,80234]" dest="identifier: bond [71427,71431]"/>
  <match src="returns: returns [91420,91427]" dest="returns: returns [30806,30813]"/>
  <match src="identifier: this [70390,70394]" dest="identifier: this [58735,58739]"/>
  <match src="expression_statement [81416,81460]" dest="expression_statement [72699,72743]"/>
  <match src="type_name [7679,7683]" dest="type_name [8207,8211]"/>
  <match src="&gt;=: &gt;= [93248,93250]" dest="&gt;=: &gt;= [32634,32636]"/>
  <match src="identifier: epoch [100544,100549]" dest="identifier: epoch [39930,39935]"/>
  <match src="member_expression [102256,102268]" dest="member_expression [41642,41654]"/>
  <match src=".: . [82160,82161]" dest=".: . [80156,80157]"/>
  <match src="return_type_definition [34698,34720]" dest="return_type_definition [52410,52432]"/>
  <match src="binary_expression [9404,9426]" dest="binary_expression [9932,9954]"/>
  <match src="identifier: _state [102279,102285]" dest="identifier: _state [41665,41671]"/>
  <match src="identifier: that [27767,27771]" dest="identifier: that [45479,45483]"/>
  <match src="primitive_type [54210,54214]" dest="primitive_type [22334,22338]"/>
  <match src="identifier: account [99993,100000]" dest="identifier: account [39379,39386]"/>
  <match src="call_argument [21848,21867]" dest="call_argument [62491,62507]"/>
  <match src="function_definition [46341,46439]" dest="function_definition [16438,16536]"/>
  <match src="): ) [52944,52945]" dest="): ) [21068,21069]"/>
  <match src="call_argument [57979,58004]" dest="call_argument [83245,83260]"/>
  <match src="]: ] [101305,101306]" dest="]: ] [40691,40692]"/>
  <match src=",: , [61883,61884]" dest=",: , [26938,26939]"/>
  <match src="private: private [42475,42482]" dest="private: private [12572,12579]"/>
  <match src="): ) [102305,102306]" dest="): ) [41691,41692]"/>
  <match src="member_expression [9633,9647]" dest="member_expression [10161,10175]"/>
  <match src="(: ( [70469,70470]" dest="(: ( [81638,81639]"/>
  <match src="visibility [91709,91715]" dest="visibility [31095,31101]"/>
  <match src="expression_statement [34469,34514]" dest="expression_statement [52181,52226]"/>
  <match src="type_name [99537,99543]" dest="type_name [38923,38929]"/>
  <match src="): ) [98179,98180]" dest="): ) [37565,37566]"/>
  <match src="visibility [5932,5940]" dest="visibility [6460,6468]"/>
  <match src="parameter [7411,7422]" dest="parameter [7939,7950]"/>
  <match src="): ) [81350,81351]" dest="): ) [72188,72189]"/>
  <match src="variable_declaration [77476,77492]" dest="variable_declaration [61626,61648]"/>
  <match src="=: = [101284,101285]" dest="=: = [40670,40671]"/>
  <match src="function_body [43608,43654]" dest="function_body [13705,13751]"/>
  <match src="(: ( [75664,75665]" dest="(: ( [61391,61392]"/>
  <match src="identifier: length [34009,34015]" dest="identifier: length [51721,51727]"/>
  <match src="returns: returns [391,398]" dest="returns: returns [919,926]"/>
  <match src="member_expression [95290,95303]" dest="member_expression [34676,34689]"/>
  <match src="): ) [80379,80380]" dest="): ) [66642,66643]"/>
  <match src="primitive_type [28805,28812]" dest="primitive_type [46517,46524]"/>
  <match src="function_definition [103272,103455]" dest="function_definition [42658,42841]"/>
  <match src=",: , [874,875]" dest=",: , [1402,1403]"/>
  <match src="type_name [53077,53081]" dest="type_name [21201,21205]"/>
  <match src="type_name [62746,62753]" dest="type_name [77825,77832]"/>
  <match src="call_argument [30504,30512]" dest="call_argument [48216,48224]"/>
  <match src="member_expression [95917,95934]" dest="member_expression [35303,35320]"/>
  <match src="array_access [102010,102058]" dest="array_access [41396,41444]"/>
  <match src="type_name [91529,91536]" dest="type_name [30915,30922]"/>
  <match src="type_name [6611,6615]" dest="type_name [7139,7143]"/>
  <match src="primitive_type [101940,101947]" dest="primitive_type [41326,41333]"/>
  <match src="identifier: encodePacked [27960,27972]" dest="identifier: encodePacked [45672,45684]"/>
  <match src="identifier: account [92396,92403]" dest="identifier: account [31782,31789]"/>
  <match src="identifier: Account [105755,105762]" dest="identifier: Account [68899,68906]"/>
  <match src="call_expression [107437,107445]" dest="call_expression [55443,55451]"/>
  <match src="primitive_type [99410,99417]" dest="primitive_type [38796,38803]"/>
  <match src="): ) [90720,90721]" dest="): ) [30106,30107]"/>
  <match src="external: external [54347,54355]" dest="external: external [22471,22479]"/>
  <match src="=: = [41491,41492]" dest="=: = [11588,11589]"/>
  <match src="]: ] [101129,101130]" dest="]: ] [40515,40516]"/>
  <match src="parameter [45206,45213]" dest="parameter [15303,15310]"/>
  <match src="primitive_type [94900,94907]" dest="primitive_type [34286,34293]"/>
  <match src="variable_declaration [33956,33970]" dest="variable_declaration [51668,51682]"/>
  <match src="return_type_definition [71147,71164]" dest="return_type_definition [67139,67168]"/>
  <match src="primitive_type [28764,28768]" dest="primitive_type [46476,46480]"/>
  <match src="identifier: that [48782,48786]" dest="identifier: that [70732,70736]"/>
  <match src="visibility [83006,83014]" dest="visibility [63041,63049]"/>
  <match src="public: public [91021,91027]" dest="public: public [30407,30413]"/>
  <match src="member_expression [94823,94862]" dest="member_expression [34209,34248]"/>
  <match src="): ) [94662,94663]" dest="): ) [34048,34049]"/>
  <match src="external: external [80991,80999]" dest="external: external [72015,72023]"/>
  <match src="array_access [95917,95945]" dest="array_access [35303,35331]"/>
  <match src="}: } [34590,34591]" dest="}: } [52302,52303]"/>
  <match src="parameter [34653,34666]" dest="parameter [52365,52378]"/>
  <match src="user_defined_type [87326,87339]" dest="user_defined_type [29117,29130]"/>
  <match src=",: , [30015,30016]" dest=",: , [47727,47728]"/>
  <match src="identifier: candidate [96406,96415]" dest="identifier: candidate [35792,35801]"/>
  <match src="identifier: D256 [62689,62693]" dest="identifier: D256 [65530,65534]"/>
  <match src="type_name [6798,6802]" dest="type_name [7326,7330]"/>
  <match src="type_name [71285,71292]" dest="type_name [67332,67339]"/>
  <match src="member_expression [99738,99759]" dest="member_expression [39124,39145]"/>
  <match src="returns: returns [43590,43597]" dest="returns: returns [13687,13694]"/>
  <match src="for: for [15728,15731]" dest="for: for [60292,60295]"/>
  <match src="(: ( [63921,63922]" dest="(: ( [67674,67675]"/>
  <match src="): ) [82762,82763]" dest="): ) [58102,58103]"/>
  <match src="identifier: accounts [104514,104522]" dest="identifier: accounts [43900,43908]"/>
  <match src="member_expression [93777,93816]" dest="member_expression [33163,33202]"/>
  <match src="pragma_value:  ABIEncoderV2 [80,93]" dest="pragma_value:  ABIEncoderV2 [44,57]"/>
  <match src="type_name [7857,7861]" dest="type_name [8385,8389]"/>
  <match src="function_definition [101848,102175]" dest="function_definition [41234,41561]"/>
  <match src="member_expression [105974,105986]" dest="member_expression [69118,69130]"/>
  <match src="&quot;: &quot; [78773,78774]" dest="&quot;: &quot; [70291,70292]"/>
  <match src="comment: // remove the last decimal digit [34528,34560]" dest="comment: // remove the last decimal digit [52240,52272]"/>
  <match src="comment: // get the final string length [33890,33920]" dest="comment: // get the final string length [51602,51632]"/>
  <match src="identifier: current [94155,94162]" dest="identifier: current [33541,33548]"/>
  <match src="type_name [93042,93049]" dest="type_name [32428,32435]"/>
  <match src="identifier: div [2590,2593]" dest="identifier: div [3118,3121]"/>
  <match src="state_variable_declaration [42008,42058]" dest="state_variable_declaration [12105,12155]"/>
  <match src="pure: pure [7737,7741]" dest="pure: pure [8265,8269]"/>
  <match src="function_definition [61799,61823]" dest="function_definition [26854,26878]"/>
  <match src="identifier: abi [28406,28409]" dest="identifier: abi [46118,46121]"/>
  <match src="identifier: self [8449,8453]" dest="identifier: self [8977,8981]"/>
  <match src="member_expression [102592,102625]" dest="member_expression [41978,42011]"/>
  <match src="member_expression [93179,93193]" dest="member_expression [32565,32579]"/>
  <match src="identifier: amount [20083,20089]" dest="identifier: amount [64733,64739]"/>
  <match src="variable_declaration_statement [35691,35718]" dest="variable_declaration_statement [53403,53430]"/>
  <match src="identifier: amount [99056,99062]" dest="identifier: amount [38442,38448]"/>
  <match src="visibility [42635,42642]" dest="visibility [12732,12739]"/>
  <match src="call_argument [21312,21313]" dest="call_argument [62169,62170]"/>
  <match src="visibility [83077,83084]" dest="visibility [58664,58671]"/>
  <match src="identifier: recipient [97727,97736]" dest="identifier: recipient [37113,37122]"/>
  <match src="variable_declaration_statement [35148,35162]" dest="variable_declaration_statement [52860,52874]"/>
  <match src=".: . [79350,79351]" dest=".: . [78265,78266]"/>
  <match src="address: address [104447,104454]" dest="address: address [43833,43840]"/>
  <match src="function_body [94806,94869]" dest="function_body [34192,34255]"/>
  <match src="(: ( [21847,21848]" dest="(: ( [62490,62491]"/>
  <match src="return_type_definition [9832,9849]" dest="return_type_definition [10360,10377]"/>
  <match src="): ) [100378,100379]" dest="): ) [39764,39765]"/>
  <match src="identifier: mul [80519,80522]" dest="identifier: mul [71584,71587]"/>
  <match src="]: ] [35345,35346]" dest="]: ] [53057,53058]"/>
  <match src="identifier: impl [96706,96710]" dest="identifier: impl [36092,36096]"/>
  <match src="uint256: uint256 [34747,34754]" dest="uint256: uint256 [52459,52466]"/>
  <match src="primitive_type [53112,53119]" dest="primitive_type [21236,21243]"/>
  <match src="library_declaration [97,4805]" dest="library_declaration [625,5333]"/>
  <match src="uint256: uint256 [66434,66441]" dest="uint256: uint256 [62276,62283]"/>
  <match src="function: function [63905,63913]" dest="function: function [67652,67660]"/>
  <match src="function_definition [7844,8016]" dest="function_definition [8372,8544]"/>
  <match src=".: . [83639,83640]" dest=".: . [78813,78814]"/>
  <match src="(: ( [34238,34239]" dest="(: ( [51950,51951]"/>
  <match src="identifier: amount [73840,73846]" dest="identifier: amount [59348,59354]"/>
  <match src="primitive_type [46392,46399]" dest="primitive_type [16489,16496]"/>
  <match src="primitive_type [81301,81308]" dest="primitive_type [61786,61793]"/>
  <match src="emit_statement [20050,20091]" dest="emit_statement [64687,64741]"/>
  <match src="identifier: approve [103834,103841]" dest="identifier: approve [43220,43227]"/>
  <match src="member_expression [102061,102089]" dest="member_expression [41447,41475]"/>
  <match src="identifier: msg [81340,81343]" dest="identifier: msg [72178,72181]"/>
  <match src="parameter [100511,100526]" dest="parameter [39897,39912]"/>
  <match src="indexed: indexed [25712,25719]" dest="indexed: indexed [60577,60584]"/>
  <match src="expression_statement [34215,34225]" dest="expression_statement [51927,51937]"/>
  <match src="visibility [32820,32827]" dest="visibility [50532,50539]"/>
  <match src="parameter [101964,101984]" dest="parameter [41350,41370]"/>
  <match src="string [79767,79802]" dest="string [71314,71352]"/>
  <match src="call_argument [21185,21221]" dest="call_argument [56294,56338]"/>
  <match src="function_definition [49587,49624]" dest="function_definition [25970,26007]"/>
  <match src="call_argument [80708,80718]" dest="call_argument [72859,72869]"/>
  <match src="(: ( [96674,96675]" dest="(: ( [36060,36061]"/>
  <match src="{: { [21830,21831]" dest="{: { [63501,63502]"/>
  <match src="(: ( [94376,94377]" dest="(: ( [33762,33763]"/>
  <match src="member_expression [99977,100008]" dest="member_expression [39363,39394]"/>
  <match src="): ) [106104,106105]" dest="): ) [69248,69249]"/>
  <match src="expression_statement [21055,21123]" dest="expression_statement [63139,63301]"/>
  <match src="(: ( [88991,88992]" dest="(: ( [76181,76182]"/>
  <match src="expression_statement [102530,102583]" dest="expression_statement [41916,41969]"/>
  <match src="[: [ [99958,99959]" dest="[: [ [39344,39345]"/>
  <match src="parameter [19668,19685]" dest="parameter [63813,63830]"/>
  <match src="call_argument [31040,31046]" dest="call_argument [48752,48758]"/>
  <match src="if: if [93106,93108]" dest="if: if [32492,32494]"/>
  <match src="state_mutability [7053,7057]" dest="state_mutability [7581,7585]"/>
  <match src="primitive_type [94761,94768]" dest="primitive_type [34147,34154]"/>
  <match src="user_defined_type [6687,6691]" dest="user_defined_type [7215,7219]"/>
  <match src="identifier: approveFor [96317,96327]" dest="identifier: approveFor [35703,35713]"/>
  <match src="function_definition [70291,70425]" dest="function_definition [58640,58888]"/>
  <match src="returns: returns [9199,9206]" dest="returns: returns [9727,9734]"/>
  <match src="identifier: oracle [91499,91505]" dest="identifier: oracle [30885,30891]"/>
  <match src="constant: constant [42408,42416]" dest="constant: constant [12505,12513]"/>
  <match src="identifier: coupons [102894,102901]" dest="identifier: coupons [42280,42287]"/>
  <match src="identifier: from [7471,7475]" dest="identifier: from [7999,8003]"/>
  <match src="parameter [46285,46292]" dest="parameter [16382,16389]"/>
  <match src="contract: contract [87305,87313]" dest="contract: contract [29096,29104]"/>
  <match src="user_defined_type [107312,107322]" dest="user_defined_type [70201,70211]"/>
  <match src="struct_declaration [41903,42002]" dest="struct_declaration [12000,12099]"/>
  <match src="primitive_type [45325,45332]" dest="primitive_type [15422,15429]"/>
  <match src="primitive_type [78993,79000]" dest="primitive_type [70607,70614]"/>
  <match src="uint256: uint256 [91730,91737]" dest="uint256: uint256 [31116,31123]"/>
  <match src=",: , [101224,101225]" dest=",: , [40610,40611]"/>
  <match src="(: ( [80765,80766]" dest="(: ( [71802,71803]"/>
  <match src="identifier: mod [4649,4652]" dest="identifier: mod [5177,5180]"/>
  <match src="uint256: uint256 [35148,35155]" dest="uint256: uint256 [52860,52867]"/>
  <match src="identifier: CURRENT_EPOCH_START [42088,42107]" dest="identifier: CURRENT_EPOCH_START [12185,12204]"/>
  <match src="pure: pure [45019,45023]" dest="pure: pure [15116,15120]"/>
  <match src="pure: pure [9186,9190]" dest="pure: pure [9714,9718]"/>
  <match src="(: ( [100854,100855]" dest="(: ( [40240,40241]"/>
  <match src="address: address [95985,95992]" dest="address: address [35371,35378]"/>
  <match src="string: string [28378,28384]" dest="string: string [46090,46096]"/>
  <match src="(: ( [7410,7411]" dest="(: ( [7938,7939]"/>
  <match src="identifier: candidate [104077,104086]" dest="identifier: candidate [43463,43472]"/>
  <match src="identifier: value [5847,5852]" dest="identifier: value [6375,6380]"/>
  <match src="identifier: IDollar [86797,86804]" dest="identifier: IDollar [28588,28595]"/>
  <match src="function_definition [96100,96227]" dest="function_definition [35486,35613]"/>
  <match src="[: [ [93477,93478]" dest="[: [ [32863,32864]"/>
  <match src="identifier: D256 [45825,45829]" dest="identifier: D256 [15922,15926]"/>
  <match src="user_defined_type [6509,6513]" dest="user_defined_type [7037,7041]"/>
  <match src="identifier: ASCII_LOWER_EX [35972,35986]" dest="identifier: ASCII_LOWER_EX [53684,53698]"/>
  <match src="(: ( [98768,98769]" dest="(: ( [38154,38155]"/>
  <match src="identifier: newUniv2 [79274,79282]" dest="identifier: period [77932,77938]"/>
  <match src=",: , [79872,79873]" dest=",: , [71397,71398]"/>
  <match src="parameter [29984,29993]" dest="parameter [47696,47705]"/>
  <match src="return_statement [43618,43648]" dest="return_statement [13715,13745]"/>
  <match src="function_body [103151,103266]" dest="function_body [42537,42652]"/>
  <match src="): ) [83152,83153]" dest="): ) [59012,59013]"/>
  <match src="expression_statement [83337,83464]" dest="expression_statement [80212,80374]"/>
  <match src="comment: // 0.5% [42455,42462]" dest="comment: // 0.5% [12552,12559]"/>
  <match src="): ) [83151,83152]" dest="): ) [59003,59004]"/>
  <match src="for: for [5676,5679]" dest="for: for [6204,6207]"/>
  <match src="binary_expression [35528,35534]" dest="binary_expression [53240,53246]"/>
  <match src="variable_declaration_statement [36102,36116]" dest="variable_declaration_statement [53814,53828]"/>
  <match src="comment: // benefit is lost if 'b' is also tested. [1832,1873]" dest="comment: // benefit is lost if 'b' is also tested. [2360,2401]"/>
  <match src="(: ( [8324,8325]" dest="(: ( [8852,8853]"/>
  <match src="identifier: balance [100420,100427]" dest="identifier: balance [39806,39813]"/>
  <match src="function_definition [61829,61891]" dest="function_definition [26884,26946]"/>
  <match src="(: ( [82165,82166]" dest="(: ( [80161,80162]"/>
  <match src="(: ( [61863,61864]" dest="(: ( [26918,26919]"/>
  <match src="identifier: D256 [9952,9956]" dest="identifier: D256 [10480,10484]"/>
  <match src="library: library [27269,27276]" dest="library: library [44981,44988]"/>
  <match src="internal: internal [44532,44540]" dest="internal: internal [14629,14637]"/>
  <match src="returns: returns [45197,45204]" dest="returns: returns [15294,15301]"/>
  <match src="): ) [81029,81030]" dest="): ) [72616,72617]"/>
  <match src="identifier: COMMA [27550,27555]" dest="identifier: COMMA [45262,45267]"/>
  <match src="*: * [35254,35255]" dest="*: * [52966,52967]"/>
  <match src="visibility [107228,107236]" dest="visibility [63884,63892]"/>
  <match src="type_name [52083,52090]" dest="type_name [20207,20214]"/>
  <match src="address: address [53149,53156]" dest="address: address [21273,21280]"/>
  <match src="{: { [9045,9046]" dest="{: { [9573,9574]"/>
  <match src="identifier: char [35349,35353]" dest="identifier: char [53061,53065]"/>
  <match src="call_expression [6951,6962]" dest="call_expression [7479,7490]"/>
  <match src="identifier: usdcAmount [76833,76843]" dest="identifier: cappedNewDebt [66401,66414]"/>
  <match src="expression_statement [80154,80169]" dest="expression_statement [59527,59542]"/>
  <match src="identifier: provider [91660,91668]" dest="identifier: provider [31046,31054]"/>
  <match src="state_mutability [93422,93426]" dest="state_mutability [32808,32812]"/>
  <match src="parameter [94761,94774]" dest="parameter [34147,34160]"/>
  <match src="identifier: _state [102061,102067]" dest="identifier: _state [41447,41453]"/>
  <match src="expression_statement [34259,34265]" dest="expression_statement [51971,51977]"/>
  <match src="private: private [41811,41818]" dest="private: private [11908,11915]"/>
  <match src="identifier: coupons [87025,87032]" dest="identifier: coupons [28816,28823]"/>
  <match src="type_name [52620,52624]" dest="type_name [20744,20748]"/>
  <match src="member_expression [7122,7132]" dest="member_expression [7650,7660]"/>
  <match src="uint256: uint256 [16008,16015]" dest="uint256: uint256 [17652,17659]"/>
  <match src="view: view [93422,93426]" dest="view: view [32808,32812]"/>
  <match src="{: { [7954,7955]" dest="{: { [8482,8483]"/>
  <match src="uint256: uint256 [93436,93443]" dest="uint256: uint256 [32822,32829]"/>
  <match src="external: external [66316,66324]" dest="external: external [72536,72544]"/>
  <match src="primitive_type [82370,82377]" dest="primitive_type [61733,61740]"/>
  <match src="}: } [29395,29396]" dest="}: } [47107,47108]"/>
  <match src="identifier: account [49656,49663]" dest="identifier: account [26039,26046]"/>
  <match src="primitive_type [52083,52090]" dest="primitive_type [20207,20214]"/>
  <match src="parameter [7075,7086]" dest="parameter [7603,7614]"/>
  <match src="identifier: bonded [86451,86457]" dest="identifier: bonded [28242,28248]"/>
  <match src="public: public [95738,95744]" dest="public: public [35124,35130]"/>
  <match src="uint: uint [52691,52695]" dest="uint: uint [20815,20819]"/>
  <match src="call_argument [21869,21907]" dest="call_argument [62515,62546]"/>
  <match src="function: function [102319,102327]" dest="function: function [41705,41713]"/>
  <match src="identifier: msg [82694,82697]" dest="identifier: msg [62762,62765]"/>
  <match src="=: = [35158,35159]" dest="=: = [52870,52871]"/>
  <match src="parameter [7857,7873]" dest="parameter [8385,8401]"/>
  <match src="type_name [41958,41965]" dest="type_name [12055,12062]"/>
  <match src="identifier: epochs [102376,102382]" dest="identifier: epochs [41762,41768]"/>
  <match src="(: ( [92705,92706]" dest="(: ( [32091,32092]"/>
  <match src="function: function [54054,54062]" dest="function: function [22178,22186]"/>
  <match src="): ) [44126,44127]" dest="): ) [14223,14224]"/>
  <match src="number_literal: 0 [5998,5999]" dest="number_literal: 0 [6526,6527]"/>
  <match src="bool: bool [70470,70474]" dest="bool: bool [81639,81643]"/>
  <match src="): ) [2703,2704]" dest="): ) [3231,3232]"/>
  <match src=".: . [63505,63506]" dest=".: . [81372,81373]"/>
  <match src="type_name [103708,103715]" dest="type_name [43094,43101]"/>
  <match src="public: public [95870,95876]" dest="public: public [35256,35262]"/>
  <match src="function: function [52732,52740]" dest="function: function [20856,20864]"/>
  <match src="primitive_type [104182,104189]" dest="primitive_type [43568,43575]"/>
  <match src=":: : [6554,6555]" dest=":: : [7082,7083]"/>
  <match src="function_body [99933,100116]" dest="function_body [39319,39502]"/>
  <match src=".: . [102996,102997]" dest=".: . [42382,42383]"/>
  <match src="member_expression [95423,95455]" dest="member_expression [34809,34841]"/>
  <match src="(: ( [71877,71878]" dest="(: ( [81013,81014]"/>
  <match src="(: ( [80522,80523]" dest="(: ( [71587,71588]"/>
  <match src="uint256: uint256 [98604,98611]" dest="uint256: uint256 [37990,37997]"/>
  <match src="function: function [9439,9447]" dest="function: function [9967,9975]"/>
  <match src="parameter [90743,90756]" dest="parameter [30129,30142]"/>
  <match src="constant: constant [27344,27352]" dest="constant: constant [45056,45064]"/>
  <match src="identifier: Account [93305,93312]" dest="identifier: Account [32691,32698]"/>
  <match src="event_definition [52125,52194]" dest="event_definition [20249,20318]"/>
  <match src="identifier: approve [13004,13011]" dest="identifier: approve [24305,24312]"/>
  <match src="bool: bool [31408,31412]" dest="bool: bool [49120,49124]"/>
  <match src="function_definition [28182,28735]" dest="function_definition [45894,46447]"/>
  <match src="event_paramater [53217,53239]" dest="event_paramater [21341,21363]"/>
  <match src="indexed: indexed [51438,51445]" dest="indexed: indexed [60861,60868]"/>
  <match src="(: ( [7557,7558]" dest="(: ( [8085,8086]"/>
  <match src="pure: pure [44019,44023]" dest="pure: pure [14116,14120]"/>
  <match src="parameter [8070,8083]" dest="parameter [8598,8611]"/>
  <match src="identifier: COLON [30303,30308]" dest="identifier: COLON [48015,48020]"/>
  <match src="member_expression [100897,100919]" dest="member_expression [40283,40305]"/>
  <match src=",: , [28472,28473]" dest=",: , [46184,46185]"/>
  <match src="identifier: account [103309,103316]" dest="identifier: account [42695,42702]"/>
  <match src="comment: // 66% [42527,42533]" dest="comment: // 66% [12624,12630]"/>
  <match src="return: return [94317,94323]" dest="return: return [33703,33709]"/>
  <match src="call_argument [88992,89009]" dest="call_argument [76182,76199]"/>
  <match src=".: . [94999,95000]" dest=".: . [34385,34386]"/>
  <match src="internal: internal [7204,7212]" dest="internal: internal [7732,7740]"/>
  <match src="): ) [65460,65461]" dest="): ) [66862,66863]"/>
  <match src="call_argument [99688,99694]" dest="call_argument [39074,39080]"/>
  <match src="contract_body [27285,36850]" dest="contract_body [44997,54562]"/>
  <match src=".: . [100419,100420]" dest=".: . [39805,39806]"/>
  <match src="&quot;: &quot; [21984,21985]" dest="&quot;: &quot; [63610,63611]"/>
  <match src="member_expression [79943,79953]" dest="member_expression [72571,72581]"/>
  <match src="view: view [92545,92549]" dest="view: view [31931,31935]"/>
  <match src="call_argument [32395,32401]" dest="call_argument [50107,50113]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [85081,85128]" dest="comment: // solhint-disable-next-line no-inline-assembly [74409,74456]"/>
  <match src="{: { [92051,92052]" dest="{: { [31437,31438]"/>
  <match src="call_argument [26340,26347]" dest="call_argument [83360,83367]"/>
  <match src=",: , [8915,8916]" dest=",: , [9443,9444]"/>
  <match src="identifier: D256 [7411,7415]" dest="identifier: D256 [7939,7943]"/>
  <match src="memory: memory [32931,32937]" dest="memory: memory [50643,50649]"/>
  <match src="]: ] [100637,100638]" dest="]: ] [40023,40024]"/>
  <match src="}: } [13952,13953]" dest="}: } [25253,25254]"/>
  <match src="&quot;: &quot; [19973,19974]" dest="&quot;: &quot; [56767,56768]"/>
  <match src="): ) [30096,30097]" dest="): ) [47808,47809]"/>
  <match src="function_definition [104736,104849]" dest="function_definition [44122,44235]"/>
  <match src="function_definition [4008,4136]" dest="function_definition [4536,4664]"/>
  <match src="primitive_type [54382,54389]" dest="primitive_type [22506,22513]"/>
  <match src="for: for [97565,97568]" dest="for: for [36951,36954]"/>
  <match src=",: , [32022,32023]" dest=",: , [49734,49735]"/>
  <match src="function_body [98500,98570]" dest="function_body [37886,37956]"/>
  <match src="call_expression [9867,9905]" dest="call_expression [10395,10433]"/>
  <match src="identifier: IDollar [91429,91436]" dest="identifier: IDollar [30815,30822]"/>
  <match src="(: ( [1352,1353]" dest="(: ( [1880,1881]"/>
  <match src="return_type_definition [91927,91944]" dest="return_type_definition [31313,31330]"/>
  <match src="{: { [6087,6088]" dest="{: { [6615,6616]"/>
  <match src="identifier: account [92988,92995]" dest="identifier: account [32374,32381]"/>
  <match src="type_name [93747,93754]" dest="type_name [33133,33140]"/>
  <match src="call_argument [21264,21270]" dest="call_argument [59184,59190]"/>
  <match src="primitive_type [36612,36616]" dest="primitive_type [54324,54328]"/>
  <match src="identifier: reason [101978,101984]" dest="identifier: reason [41364,41370]"/>
  <match src="state_mutability [91028,91032]" dest="state_mutability [30414,30418]"/>
  <match src="}: } [94584,94585]" dest="}: } [33970,33971]"/>
  <match src="identifier: require [21055,21062]" dest="identifier: decrementBalanceOfCoupons [63139,63164]"/>
  <match src="): ) [53966,53967]" dest="): ) [22090,22091]"/>
  <match src="returns: returns [4717,4724]" dest="returns: returns [5245,5252]"/>
  <match src="visibility [72953,72961]" dest="visibility [65857,65865]"/>
  <match src="]: ] [95812,95813]" dest="]: ] [35198,35199]"/>
  <match src="member_expression [32947,32963]" dest="member_expression [50659,50675]"/>
  <match src="}: } [45374,45375]" dest="}: } [15471,15472]"/>
  <match src="call_expression [107755,107763]" dest="call_expression [56205,56213]"/>
  <match src="&quot;: &quot; [80132,80133]" dest="&quot;: &quot; [81105,81106]"/>
  <match src="): ) [93094,93095]" dest="): ) [32480,32481]"/>
  <match src="identifier: amount [103994,104000]" dest="identifier: amount [43380,43386]"/>
  <match src="primitive_type [32008,32015]" dest="primitive_type [49720,49727]"/>
  <match src=".: . [93087,93088]" dest=".: . [32473,32474]"/>
  <match src="return: return [91749,91755]" dest="return: return [31135,31141]"/>
  <match src="identifier: _state [93110,93116]" dest="identifier: _state [32496,32502]"/>
  <match src="identifier: totalBonded [71197,71208]" dest="identifier: totalRedeemable [67305,67320]"/>
  <match src="{: { [7450,7451]" dest="{: { [7978,7979]"/>
  <match src="visibility [91915,91921]" dest="visibility [31301,31307]"/>
  <match src="}: } [6099,6100]" dest="}: } [6627,6628]"/>
  <match src="identifier: D256 [8812,8816]" dest="identifier: D256 [9340,9344]"/>
  <match src="library: library [41257,41264]" dest="library: library [11354,11361]"/>
  <match src="address: address [52451,52458]" dest="address: address [20575,20582]"/>
  <match src="(: ( [106150,106151]" dest="(: ( [69294,69295]"/>
  <match src="type_name [52603,52610]" dest="type_name [20727,20734]"/>
  <match src="event_paramater [78880,78893]" dest="event_paramater [70398,70411]"/>
  <match src="primitive_type [73088,73095]" dest="primitive_type [55917,55924]"/>
  <match src="identifier: lessUsdc [79248,79256]" dest="identifier: amount [82845,82851]"/>
  <match src="identifier: LPAREN [29166,29172]" dest="identifier: LPAREN [46878,46884]"/>
  <match src="function_definition [43975,44088]" dest="function_definition [14072,14185]"/>
  <match src="): ) [44644,44645]" dest="): ) [14741,14742]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [33175,33237]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [50887,50949]"/>
  <match src=".: . [80492,80493]" dest=".: . [71597,71598]"/>
  <match src="call_expression [75678,75713]" dest="call_expression [61392,61423]"/>
  <match src="identifier: stringifyTruncated [28448,28466]" dest="identifier: stringifyTruncated [46160,46178]"/>
  <match src="pure: pure [8495,8499]" dest="pure: pure [9023,9027]"/>
  <match src="): ) [3319,3320]" dest="): ) [3847,3848]"/>
  <match src="call_argument [29243,29248]" dest="call_argument [46955,46960]"/>
  <match src="function_definition [1240,1427]" dest="function_definition [1768,1955]"/>
  <match src="identifier: Account [87167,87174]" dest="identifier: Account [28958,28965]"/>
  <match src="(: ( [45945,45946]" dest="(: ( [16042,16043]"/>
  <match src="uint: uint [53241,53245]" dest="uint: uint [21365,21369]"/>
  <match src="&quot;: &quot; [80822,80823]" dest="&quot;: &quot; [71859,71860]"/>
  <match src="bool: bool [98063,98067]" dest="bool: bool [37449,37453]"/>
  <match src="(: ( [81693,81694]" dest="(: ( [79779,79780]"/>
  <match src="pure: pure [45659,45663]" dest="pure: pure [15756,15760]"/>
  <match src="parameter [6509,6520]" dest="parameter [7037,7048]"/>
  <match src="uint256: uint256 [68457,68464]" dest="uint256: uint256 [65625,65632]"/>
  <match src="{: { [45096,45097]" dest="{: { [15193,15194]"/>
  <match src="parameter [9937,9950]" dest="parameter [10465,10478]"/>
  <match src="(: ( [100155,100156]" dest="(: ( [39541,39542]"/>
  <match src="update_expression [34009,34017]" dest="update_expression [51721,51729]"/>
  <match src="identifier: CURRENT_EPOCH_OFFSET [43837,43857]" dest="identifier: CURRENT_EPOCH_OFFSET [13934,13954]"/>
  <match src="state_mutability [96561,96565]" dest="state_mutability [35947,35951]"/>
  <match src="function: function [53590,53598]" dest="function: function [21714,21722]"/>
  <match src="type_name [41803,41810]" dest="type_name [11900,11907]"/>
  <match src="variable_declaration [34090,34107]" dest="variable_declaration [51802,51819]"/>
  <match src="type_name [8044,8048]" dest="type_name [8572,8576]"/>
  <match src="parameter [8955,8971]" dest="parameter [9483,9499]"/>
  <match src="(: ( [83107,83108]" dest="(: ( [58694,58695]"/>
  <match src=".: . [101434,101435]" dest=".: . [40820,40821]"/>
  <match src="indexed: indexed [79058,79065]" dest="indexed: indexed [70446,70453]"/>
  <match src="identifier: FOUR_BIT_MASK [36312,36325]" dest="identifier: FOUR_BIT_MASK [54024,54037]"/>
  <match src="identifier: COUPON_EXPIRATION [42907,42924]" dest="identifier: COUPON_EXPIRATION [13004,13021]"/>
  <match src="type_alias [15719,15727]" dest="type_alias [60283,60291]"/>
  <match src="): ) [100108,100109]" dest="): ) [39494,39495]"/>
  <match src="identifier: accounts [92979,92987]" dest="identifier: accounts [32365,32373]"/>
  <match src="modifier_invocation [79608,79630]" dest="modifier_invocation [72024,72053]"/>
  <match src="private: private [41718,41725]" dest="private: private [11815,11822]"/>
  <match src="): ) [65790,65791]" dest="): ) [67784,67785]"/>
  <match src="): ) [28554,28555]" dest="): ) [46266,46267]"/>
  <match src="{: { [43811,43812]" dest="{: { [13908,13909]"/>
  <match src="]: ] [101552,101553]" dest="]: ] [40938,40939]"/>
  <match src="parameter [30025,30039]" dest="parameter [47737,47751]"/>
  <match src="identifier: Candidate [86502,86511]" dest="identifier: Candidate [28293,28302]"/>
  <match src="assignment_expression [102530,102582]" dest="assignment_expression [41916,41968]"/>
  <match src="identifier: self [9309,9313]" dest="identifier: self [9837,9841]"/>
  <match src="[: [ [92987,92988]" dest="[: [ [32373,32374]"/>
  <match src="(: ( [94154,94155]" dest="(: ( [33540,33541]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [12348,12990]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [23649,24291]"/>
  <match src="): ) [87230,87231]" dest="): ) [29021,29022]"/>
  <match src="}: } [44490,44491]" dest="}: } [14587,14588]"/>
  <match src="): ) [82737,82738]" dest="): ) [62786,62787]"/>
  <match src="(: ( [99803,99804]" dest="(: ( [39189,39190]"/>
  <match src="internal: internal [98962,98970]" dest="internal: internal [38348,38356]"/>
  <match src="constant: constant [5746,5754]" dest="constant: constant [6274,6282]"/>
  <match src="identifier: account [91012,91019]" dest="identifier: account [30398,30405]"/>
  <match src="[: [ [101256,101257]" dest="[: [ [40642,40643]"/>
  <match src="member_expression [91183,91204]" dest="member_expression [30569,30590]"/>
  <match src="call_argument [28991,29347]" dest="call_argument [46703,47059]"/>
  <match src="member_expression [10109,10116]" dest="member_expression [10637,10644]"/>
  <match src="type_name [103326,103333]" dest="type_name [42712,42719]"/>
  <match src="identifier: candidate [104039,104048]" dest="identifier: candidate [43425,43434]"/>
  <match src="visibility [43576,43584]" dest="visibility [13673,13681]"/>
  <match src="call_expression [88974,89010]" dest="call_expression [76164,76200]"/>
  <match src="identifier: getInitialStakeMultiple [43984,44007]" dest="identifier: getInitialStakeMultiple [14081,14104]"/>
  <match src="return_type_definition [6678,6699]" dest="return_type_definition [7206,7227]"/>
  <match src="parameter [9793,9812]" dest="parameter [10321,10340]"/>
  <match src="function_definition [49630,49688]" dest="function_definition [26013,26071]"/>
  <match src="event: event [53294,53299]" dest="event: event [21418,21423]"/>
  <match src="while_statement [33980,34049]" dest="while_statement [51692,51761]"/>
  <match src="identifier: _state [100260,100266]" dest="identifier: _state [39646,39652]"/>
  <match src="type_name [79266,79273]" dest="type_name [77924,77931]"/>
  <match src="(: ( [44007,44008]" dest="(: ( [14104,14105]"/>
  <match src="primitive_type [86049,86056]" dest="primitive_type [27840,27847]"/>
  <match src="pure: pure [44427,44431]" dest="pure: pure [14524,14528]"/>
  <match src="return_statement [6185,6219]" dest="return_statement [6713,6747]"/>
  <match src="member_expression [100389,100410]" dest="member_expression [39775,39796]"/>
  <match src="string: string [4675,4681]" dest="string: string [5203,5209]"/>
  <match src="comment: /**      * Account      */ [92331,92357]" dest="comment: /**      * Account      */ [31717,31743]"/>
  <match src="visibility [104466,104474]" dest="visibility [43852,43860]"/>
  <match src="user_defined_type [7411,7415]" dest="user_defined_type [7939,7943]"/>
  <match src="enum: enum [86518,86522]" dest="enum: enum [28309,28313]"/>
  <match src=".: . [92996,92997]" dest=".: . [32382,32383]"/>
  <match src="call_argument [79535,79545]" dest="call_argument [71073,71083]"/>
  <match src="parameter [100536,100549]" dest="parameter [39922,39935]"/>
  <match src="call_expression [81104,81174]" dest="call_expression [81127,81354]"/>
  <match src="(: ( [453,454]" dest="(: ( [981,982]"/>
  <match src="return_type_definition [9598,9615]" dest="return_type_definition [10126,10143]"/>
  <match src="call_argument [82637,82647]" dest="call_argument [62823,62833]"/>
  <match src="identifier: amount [13037,13043]" dest="identifier: amount [24338,24344]"/>
  <match src="identifier: that [83103,83107]" dest="identifier: that [58690,58694]"/>
  <match src="variable_declaration [82302,82318]" dest="variable_declaration [58286,58304]"/>
  <match src="member_expression [99618,99654]" dest="member_expression [39004,39040]"/>
  <match src="returns: returns [16159,16166]" dest="returns: returns [56433,56440]"/>
  <match src="function_body [96712,96824]" dest="function_body [36098,36210]"/>
  <match src="internal: internal [44418,44426]" dest="internal: internal [14515,14523]"/>
  <match src=".: . [82582,82583]" dest=".: . [72670,72671]"/>
  <match src="): ) [10058,10059]" dest="): ) [10586,10587]"/>
  <match src="identifier: fluidUntil [93487,93497]" dest="identifier: fluidUntil [32873,32883]"/>
  <match src="for: for [90484,90487]" dest="for: for [29870,29873]"/>
  <match src="user_defined_type [87219,87230]" dest="user_defined_type [29010,29021]"/>
  <match src="external: external [52632,52640]" dest="external: external [20756,20764]"/>
  <match src="identifier: SafeMath [105,113]" dest="identifier: SafeMath [633,641]"/>
  <match src="]: ] [103610,103611]" dest="]: ] [42996,42997]"/>
  <match src="(: ( [52518,52519]" dest="(: ( [20642,20643]"/>
  <match src="identifier: encodeWithSignature [89107,89126]" dest="identifier: encodeWithSignature [76297,76316]"/>
  <match src="!=: != [33358,33360]" dest="!=: != [51070,51072]"/>
  <match src="expression_statement [102369,102415]" dest="expression_statement [41755,41801]"/>
  <match src="(: ( [92387,92388]" dest="(: ( [31773,31774]"/>
  <match src="function: function [98135,98143]" dest="function: function [37521,37529]"/>
  <match src="public: public [50952,50958]" dest="public: public [62255,62261]"/>
  <match src="type_name [9742,9749]" dest="type_name [10270,10277]"/>
  <match src="call_argument [9878,9887]" dest="call_argument [10406,10415]"/>
  <match src="binary_expression [36206,36211]" dest="binary_expression [53918,53923]"/>
  <match src="}: } [102652,102653]" dest="}: } [42038,42039]"/>
  <match src="memory: memory [8655,8661]" dest="memory: memory [9183,9189]"/>
  <match src="call_struct_argument [43919,43947]" dest="call_struct_argument [14016,14044]"/>
  <match src="{: { [100250,100251]" dest="{: { [39636,39637]"/>
  <match src="function_definition [103082,103266]" dest="function_definition [42468,42652]"/>
  <match src="return_type_definition [45197,45214]" dest="return_type_definition [15294,15311]"/>
  <match src="=: = [101827,101828]" dest="=: = [41213,41214]"/>
  <match src="call_argument [29626,29906]" dest="call_argument [47338,47618]"/>
  <match src="identifier: outstanding [101272,101283]" dest="identifier: outstanding [40658,40669]"/>
  <match src="): ) [46260,46261]" dest="): ) [16357,16358]"/>
  <match src="): ) [75722,75723]" dest="): ) [61423,61424]"/>
  <match src="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [88198,88412]" dest="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [75388,75602]"/>
  <match src="expression_statement [99328,99386]" dest="expression_statement [38714,38772]"/>
  <match src="string: string [100214,100220]" dest="string: string [39600,39606]"/>
  <match src=".: . [102617,102618]" dest=".: . [42003,42004]"/>
  <match src="type_cast_expression [34747,34761]" dest="type_cast_expression [52459,52473]"/>
  <match src="identifier: totalRedeemable [92003,92018]" dest="identifier: totalRedeemable [31389,31404]"/>
  <match src="string_literal [83566,83575]" dest="string_literal [78334,78351]"/>
  <match src=",: , [21867,21868]" dest=",: , [62507,62508]"/>
  <match src="uint256: uint256 [95891,95898]" dest="uint256: uint256 [35277,35284]"/>
  <match src="identifier: amount1Out [54232,54242]" dest="identifier: amount1Out [22356,22366]"/>
  <match src="primitive_type [78795,78802]" dest="primitive_type [70313,70320]"/>
  <match src="public: public [92021,92027]" dest="public: public [31407,31413]"/>
  <match src="array_access [101243,101263]" dest="array_access [40629,40649]"/>
  <match src="identifier: sender [81087,81093]" dest="identifier: sender [72142,72148]"/>
  <match src="uint8: uint8 [34484,34489]" dest="uint8: uint8 [52196,52201]"/>
  <match src="variable_declaration_statement [104485,104544]" dest="variable_declaration_statement [43871,43930]"/>
  <match src="(: ( [33737,33738]" dest="(: ( [51449,51450]"/>
  <match src="): ) [6638,6639]" dest="): ) [7166,7167]"/>
  <match src="state_mutability [8852,8856]" dest="state_mutability [9380,9384]"/>
  <match src=".: . [95651,95652]" dest=".: . [35037,35038]"/>
  <match src="identifier: balanceOf [11628,11637]" dest="identifier: balanceOf [22929,22938]"/>
  <match src="member_expression [105708,105720]" dest="member_expression [68852,68864]"/>
  <match src="call_argument [77200,77204]" dest="call_argument [59460,59464]"/>
  <match src="call_expression [35487,35510]" dest="call_expression [53199,53222]"/>
  <match src="pure: pure [3298,3302]" dest="pure: pure [3826,3830]"/>
  <match src="type_name [43742,43755]" dest="type_name [13839,13852]"/>
  <match src="identifier: balance [98376,98383]" dest="identifier: balance [37762,37769]"/>
  <match src="primitive_type [54256,54261]" dest="primitive_type [22380,22385]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [61095,61775]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [27004,27684]"/>
  <match src="function: function [91790,91798]" dest="function: function [31176,31184]"/>
  <match src="uint256: uint256 [44151,44158]" dest="uint256: uint256 [14248,14255]"/>
  <match src="call_argument [92736,92747]" dest="call_argument [32122,32133]"/>
  <match src="): ) [54189,54190]" dest="): ) [22313,22314]"/>
  <match src="uint256: uint256 [42882,42889]" dest="uint256: uint256 [12979,12986]"/>
  <match src="(: ( [28754,28755]" dest="(: ( [46466,46467]"/>
  <match src="primitive_type [93531,93538]" dest="primitive_type [32917,32924]"/>
  <match src="(: ( [102412,102413]" dest="(: ( [41798,41799]"/>
  <match src="): ) [13043,13044]" dest="): ) [24344,24345]"/>
  <match src="): ) [82657,82658]" dest="): ) [62854,62855]"/>
  <match src="member_expression [80925,80936]" dest="member_expression [72980,72991]"/>
  <match src="call_argument [29687,29691]" dest="call_argument [47399,47403]"/>
  <match src="): ) [106323,106324]" dest="): ) [69467,69468]"/>
  <match src=".: . [101409,101410]" dest=".: . [40795,40796]"/>
  <match src="returns: returns [93071,93078]" dest="returns: returns [32457,32464]"/>
  <match src="primitive_type [53217,53224]" dest="primitive_type [21341,21348]"/>
  <match src="state_variable_declaration [42693,42747]" dest="state_variable_declaration [12790,12844]"/>
  <match src="primitive_type [95719,95726]" dest="primitive_type [35105,35112]"/>
  <match src="array_access [101148,101200]" dest="array_access [40534,40586]"/>
  <match src="identifier: must [30650,30654]" dest="identifier: must [48362,48366]"/>
  <match src="parameter [31473,31489]" dest="parameter [49185,49201]"/>
  <match src="function_definition [6231,6365]" dest="function_definition [6759,6893]"/>
  <match src="identifier: account [21295,21302]" dest="identifier: account [83407,83414]"/>
  <match src="=: = [35388,35389]" dest="=: = [53100,53101]"/>
  <match src="identifier: Transfer [99795,99803]" dest="identifier: Transfer [39181,39189]"/>
  <match src="identifier: coupons [101320,101327]" dest="identifier: coupons [40706,40713]"/>
  <match src="primitive_type [34707,34712]" dest="primitive_type [52419,52424]"/>
  <match src="&gt;&gt;: &gt;&gt; [36346,36348]" dest="&gt;&gt;: &gt;&gt; [54058,54060]"/>
  <match src="assignment_expression [101243,101385]" dest="assignment_expression [40629,40771]"/>
  <match src="function_definition [98270,98441]" dest="function_definition [37656,37827]"/>
  <match src="state_mutability [44541,44545]" dest="state_mutability [14638,14642]"/>
  <match src="primitive_type [6257,6264]" dest="primitive_type [6785,6792]"/>
  <match src="identifier: _state [98200,98206]" dest="identifier: _state [37586,37592]"/>
  <match src="state_mutability [6277,6281]" dest="state_mutability [6805,6809]"/>
  <match src="string_literal [82249,82280]" dest="string_literal [80189,80200]"/>
  <match src="]: ] [93824,93825]" dest="]: ] [33210,33211]"/>
  <match src="identifier: size [85148,85152]" dest="identifier: size [74476,74480]"/>
  <match src="(: ( [53004,53005]" dest="(: ( [21128,21129]"/>
  <match src="): ) [91406,91407]" dest="): ) [30792,30793]"/>
  <match src="constant: constant [27541,27549]" dest="constant: constant [45253,45261]"/>
  <match src="function: function [32759,32767]" dest="function: function [50471,50479]"/>
  <match src="indexed: indexed [88705,88712]" dest="indexed: indexed [75895,75902]"/>
  <match src="type_name [32925,32930]" dest="type_name [50637,50642]"/>
  <match src="return_statement [7642,7654]" dest="return_statement [8170,8182]"/>
  <match src="return_statement [44574,44603]" dest="return_statement [14671,14700]"/>
  <match src="public: public [88757,88763]" dest="public: public [75947,75953]"/>
  <match src="primitive_type [54133,54140]" dest="primitive_type [22257,22264]"/>
  <match src=".: . [100284,100285]" dest=".: . [39670,39671]"/>
  <match src="type_name [35663,35668]" dest="type_name [53375,53380]"/>
  <match src="type_name [43498,43505]" dest="type_name [13595,13602]"/>
  <match src="call_argument [73631,73637]" dest="call_argument [63676,63682]"/>
  <match src="expression_statement [35328,35373]" dest="expression_statement [53040,53085]"/>
  <match src=".: . [98375,98376]" dest=".: . [37761,37762]"/>
  <match src="(: ( [43692,43693]" dest="(: ( [13789,13790]"/>
  <match src="parameter [71156,71163]" dest="parameter [67148,67167]"/>
  <match src="primitive_type [95527,95534]" dest="primitive_type [34913,34920]"/>
  <match src="function: function [99137,99145]" dest="function: function [38523,38531]"/>
  <match src="type_name [71365,71372]" dest="type_name [78947,78954]"/>
  <match src="return_type_definition [8703,8717]" dest="return_type_definition [9231,9245]"/>
  <match src=".: . [32223,32224]" dest=".: . [49935,49936]"/>
  <match src="type_name [27578,27584]" dest="type_name [45290,45296]"/>
  <match src="return_type_definition [91306,91323]" dest="return_type_definition [30692,30709]"/>
  <match src="call_argument [80095,80133]" dest="call_argument [81092,81106]"/>
  <match src="type_name [27534,27540]" dest="type_name [45246,45252]"/>
  <match src="): ) [93443,93444]" dest="): ) [32829,32830]"/>
  <match src="uint256: uint256 [77369,77376]" dest="uint256: uint256 [17581,17588]"/>
  <match src="uint256: uint256 [86585,86592]" dest="uint256: uint256 [28376,28383]"/>
  <match src=".: . [102109,102110]" dest=".: . [41495,41496]"/>
  <match src="primitive_type [42627,42634]" dest="primitive_type [12724,12731]"/>
  <match src="function: function [45381,45389]" dest="function: function [15478,15486]"/>
  <match src="type_name [8650,8654]" dest="type_name [9178,9182]"/>
  <match src="type_name [97850,97857]" dest="type_name [37236,37243]"/>
  <match src="identifier: accounts [99224,99232]" dest="identifier: accounts [38610,38618]"/>
  <match src="call_argument [30334,30360]" dest="call_argument [48046,48072]"/>
  <match src="string_literal [17740,17782]" dest="string_literal [72292,72328]"/>
  <match src="indexed: indexed [78976,78983]" dest="indexed: indexed [70582,70589]"/>
  <match src=".: . [99759,99760]" dest=".: . [39145,39146]"/>
  <match src="return_statement [3549,3558]" dest="return_statement [4077,4086]"/>
  <match src="memory: memory [9460,9466]" dest="memory: memory [9988,9994]"/>
  <match src="contract: contract [15673,15681]" dest="contract: contract [60233,60241]"/>
  <match src="primitive_type [96535,96542]" dest="primitive_type [35921,35928]"/>
  <match src="struct_member [86657,86672]" dest="struct_member [28448,28463]"/>
  <match src="): ) [8663,8664]" dest="): ) [9191,9192]"/>
  <match src="identifier: account [95535,95542]" dest="identifier: account [34921,34928]"/>
  <match src="type_name [79083,79090]" dest="type_name [70471,70478]"/>
  <match src="]: ] [103871,103872]" dest="]: ] [43257,43258]"/>
  <match src="(: ( [54016,54017]" dest="(: ( [22140,22141]"/>
  <match src="expression_statement [100599,100719]" dest="expression_statement [39985,40105]"/>
  <match src="member_expression [92452,92483]" dest="member_expression [31838,31869]"/>
  <match src="identifier: i [34247,34248]" dest="identifier: i [51959,51960]"/>
  <match src="return_statement [9626,9654]" dest="return_statement [10154,10182]"/>
  <match src="call_argument [7976,8008]" dest="call_argument [8504,8536]"/>
  <match src="identifier: decrementBalanceOfClaimable [80011,80038]" dest="identifier: incrementBalanceOfStaged [72209,72233]"/>
  <match src="view: view [95745,95749]" dest="view: view [35131,35135]"/>
  <match src="returns: returns [93560,93567]" dest="returns: returns [32946,32953]"/>
  <match src="function_definition [54002,54048]" dest="function_definition [22126,22172]"/>
  <match src="): ) [98043,98044]" dest="): ) [37429,37430]"/>
  <match src="returns: returns [90845,90852]" dest="returns: returns [30231,30238]"/>
  <match src="return: return [66453,66459]" dest="return: return [62295,62301]"/>
  <match src="call_expression [100771,100862]" dest="call_expression [40157,40248]"/>
  <match src="string [2064,2099]" dest="string [2592,2627]"/>
  <match src="return: return [46509,46515]" dest="return: return [16606,16612]"/>
  <match src="identifier: Status [105763,105769]" dest="identifier: Status [68907,68913]"/>
  <match src="==: == [8750,8752]" dest="==: == [9278,9280]"/>
  <match src="primitive_type [31986,31993]" dest="primitive_type [49698,49705]"/>
  <match src="primitive_type [45673,45680]" dest="primitive_type [15770,15777]"/>
  <match src="library_declaration [27269,36850]" dest="library_declaration [44981,54562]"/>
  <match src="(: ( [56618,56619]" dest="(: ( [72845,72846]"/>
  <match src="identifier: a [2602,2603]" dest="identifier: a [3130,3131]"/>
  <match src="{: { [46153,46154]" dest="{: { [16250,16251]"/>
  <match src="return_type_definition [95113,95130]" dest="return_type_definition [34499,34516]"/>
  <match src="primitive_type [9841,9848]" dest="primitive_type [10369,10376]"/>
  <match src="contract_declaration [78449,83692]" dest="contract_declaration [70172,73020]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [120,337]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [648,865]"/>
  <match src="identifier: sender [80917,80923]" dest="identifier: sender [72972,72978]"/>
  <match src="identifier: sender [80783,80789]" dest="identifier: sender [71820,71826]"/>
  <match src=".: . [92287,92288]" dest=".: . [31673,31674]"/>
  <match src="identifier: accounts [100606,100614]" dest="identifier: accounts [39992,40000]"/>
  <match src="identifier: newClaimable [81509,81521]" dest="identifier: balance [71723,71730]"/>
  <match src="return: return [91548,91554]" dest="return: return [30934,30940]"/>
  <match src="expression_statement [105850,105852]" dest="expression_statement [68994,68996]"/>
  <match src="(: ( [28969,28970]" dest="(: ( [46681,46682]"/>
  <match src="uint256: uint256 [15732,15739]" dest="uint256: uint256 [60296,60303]"/>
  <match src="&lt;=: &lt;= [95420,95422]" dest="&lt;=: &lt;= [34806,34808]"/>
  <match src="identifier: b [4672,4673]" dest="identifier: b [5200,5201]"/>
  <match src="contract_body [61793,61947]" dest="contract_body [26848,27002]"/>
  <match src="identifier: msg [81570,81573]" dest="identifier: msg [79828,79831]"/>
  <match src="(: ( [94113,94114]" dest="(: ( [33499,33500]"/>
  <match src="identifier: balanceCheck [83062,83074]" dest="identifier: mintToDAO [58903,58912]"/>
  <match src="number_literal: 10 [34036,34038]" dest="number_literal: 10 [51748,51750]"/>
  <match src="identifier: spender [13020,13027]" dest="identifier: spender [24321,24328]"/>
  <match src="type_name [96722,96729]" dest="type_name [36108,36115]"/>
  <match src="identifier: Constants [95423,95432]" dest="identifier: Constants [34809,34818]"/>
  <match src="number_literal: 2 [36210,36211]" dest="number_literal: 2 [53922,53923]"/>
  <match src="}: } [8609,8610]" dest="}: } [9137,9138]"/>
  <match src="call_argument [81509,81521]" dest="call_argument [71723,71730]"/>
  <match src="&quot;: &quot; [89140,89141]" dest="&quot;: &quot; [76330,76331]"/>
  <match src="identifier: amount [16947,16953]" dest="identifier: amount [59246,59252]"/>
  <match src="(: ( [66433,66434]" dest="(: ( [62275,62276]"/>
  <match src=",: , [82110,82111]" dest=",: , [80015,80016]"/>
  <match src="type_alias [69419,69427]" dest="type_alias [55289,55297]"/>
  <match src="): ) [93984,93985]" dest="): ) [33370,33371]"/>
  <match src="&quot;: &quot; [105614,105615]" dest="&quot;: &quot; [68758,68759]"/>
  <match src="returns: returns [45548,45555]" dest="returns: returns [15645,15652]"/>
  <match src="): ) [8878,8879]" dest="): ) [9406,9407]"/>
  <match src="(: ( [82598,82599]" dest="(: ( [72686,72687]"/>
  <match src="comment: /* solium-disable-next-line security/no-inline-assembly */ [33423,33481]" dest="comment: /* solium-disable-next-line security/no-inline-assembly */ [51135,51193]"/>
  <match src="variable_declaration [80390,80408]" dest="variable_declaration [66332,66347]"/>
  <match src="identifier: payloadA [32040,32048]" dest="identifier: payloadA [49752,49760]"/>
  <match src="pure: pure [34689,34693]" dest="pure: pure [52401,52405]"/>
  <match src="identifier: Decimal [44332,44339]" dest="identifier: Decimal [14429,14436]"/>
  <match src="(: ( [96534,96535]" dest="(: ( [35920,35921]"/>
  <match src="member_expression [45988,46000]" dest="member_expression [16085,16097]"/>
  <match src="type_name [74648,74655]" dest="type_name [62239,62246]"/>
  <match src="parameter [6843,6863]" dest="parameter [7371,7391]"/>
  <match src="address: address [70576,70583]" dest="address: address [81600,81607]"/>
  <match src="expression_statement [99943,100043]" dest="expression_statement [39329,39429]"/>
  <match src="view: view [66420,66424]" dest="view: view [62262,62266]"/>
  <match src="function: function [102659,102667]" dest="function: function [42045,42053]"/>
  <match src=".: . [91461,91462]" dest=".: . [30847,30848]"/>
  <match src="primitive_type [53394,53398]" dest="primitive_type [21518,21522]"/>
  <match src="struct: struct [87045,87051]" dest="struct: struct [28836,28842]"/>
  <match src="primitive_type [82865,82872]" dest="primitive_type [80860,80867]"/>
  <match src="parameter [7017,7026]" dest="parameter [7545,7554]"/>
  <match src="=: = [27556,27557]" dest="=: = [45268,45269]"/>
  <match src="): ) [65263,65264]" dest="): ) [67713,67714]"/>
  <match src="visibility [53968,53976]" dest="visibility [22092,22100]"/>
  <match src="call_argument [96353,96362]" dest="call_argument [35739,35748]"/>
  <match src="address: address [101690,101697]" dest="address: address [41076,41083]"/>
  <match src="(: ( [35971,35972]" dest="(: ( [53683,53684]"/>
  <match src="member_expression [7531,7541]" dest="member_expression [8059,8069]"/>
  <match src="array_access [100641,100665]" dest="array_access [40027,40051]"/>
  <match src="(: ( [92520,92521]" dest="(: ( [31906,31907]"/>
  <match src="parameter [97850,97865]" dest="parameter [37236,37251]"/>
  <match src="}: } [31937,31938]" dest="}: } [49649,49650]"/>
  <match src="identifier: redeemable [86975,86985]" dest="identifier: redeemable [28766,28776]"/>
  <match src=",: , [83660,83661]" dest=",: , [78905,78906]"/>
  <match src="function_body [91945,91988]" dest="function_body [31331,31374]"/>
  <match src="if: if [33344,33346]" dest="if: if [51056,51058]"/>
  <match src="visibility [93885,93891]" dest="visibility [33271,33277]"/>
  <match src="type_name [13433,13440]" dest="type_name [24734,24741]"/>
  <match src="{: { [102246,102247]" dest="{: { [41632,41633]"/>
  <match src="(: ( [32236,32237]" dest="(: ( [49948,49949]"/>
  <match src="internal: internal [101510,101518]" dest="internal: internal [40896,40904]"/>
  <match src=".: . [100434,100435]" dest=".: . [39820,39821]"/>
  <match src="(: ( [43497,43498]" dest="(: ( [13594,13595]"/>
  <match src="array_access [35466,35484]" dest="array_access [53178,53196]"/>
  <match src="identifier: Decimal [45946,45953]" dest="identifier: Decimal [16043,16050]"/>
  <match src="return_type_definition [93897,93914]" dest="return_type_definition [33283,33300]"/>
  <match src="(: ( [9207,9208]" dest="(: ( [9735,9736]"/>
  <match src="(: ( [104594,104595]" dest="(: ( [43980,43981]"/>
  <match src="type_name [52679,52686]" dest="type_name [20803,20810]"/>
  <match src="return_statement [91061,91101]" dest="return_statement [30447,30487]"/>
  <match src="&quot;: &quot; [66557,66558]" dest="&quot;: &quot; [72407,72408]"/>
  <match src="(: ( [869,870]" dest="(: ( [1397,1398]"/>
  <match src="&quot;: &quot; [907,908]" dest="&quot;: &quot; [1435,1436]"/>
  <match src="identifier: amount [98924,98930]" dest="identifier: amount [38310,38316]"/>
  <match src="comment: /**      * ERC20 Interface      */ [97661,97695]" dest="comment: /**      * ERC20 Interface      */ [37047,37081]"/>
  <match src="primitive_type [86995,87002]" dest="primitive_type [28786,28793]"/>
  <match src="return_statement [503,512]" dest="return_statement [1031,1040]"/>
  <match src="type_name [53991,53995]" dest="type_name [22115,22119]"/>
  <match src="{: { [90463,90464]" dest="{: { [29849,29850]"/>
  <match src="identifier: to [52687,52689]" dest="identifier: to [20811,20813]"/>
  <match src="(: ( [94206,94207]" dest="(: ( [33592,33593]"/>
  <match src="(: ( [6748,6749]" dest="(: ( [7276,7277]"/>
  <match src="&gt;: &gt; [33099,33100]" dest="&gt;: &gt; [50811,50812]"/>
  <match src="type_name [30049,30056]" dest="type_name [47761,47768]"/>
  <match src="comment: // populate the least-significant character [35272,35315]" dest="comment: // populate the least-significant character [52984,53027]"/>
  <match src="identifier: _state [99738,99744]" dest="identifier: _state [39124,39130]"/>
  <match src="comment: // Can modify account state [105622,105649]" dest="comment: // Can modify account state [68766,68793]"/>
  <match src="return_statement [8166,8220]" dest="return_statement [8694,8748]"/>
  <match src="[: [ [101299,101300]" dest="[: [ [40685,40686]"/>
  <match src="type_name [53925,53929]" dest="type_name [22049,22053]"/>
  <match src="primitive_type [94797,94804]" dest="primitive_type [34183,34190]"/>
  <match src="identifier: CURRENT_EPOCH_START [43882,43901]" dest="identifier: CURRENT_EPOCH_START [13979,13998]"/>
  <match src="(: ( [93154,93155]" dest="(: ( [32540,32541]"/>
  <match src="uint256: uint256 [95355,95362]" dest="uint256: uint256 [34741,34748]"/>
  <match src="primitive_type [27490,27496]" dest="primitive_type [45202,45208]"/>
  <match src="): ) [6961,6962]" dest="): ) [7489,7490]"/>
  <match src="return: return [92272,92278]" dest="return: return [31658,31664]"/>
  <match src="external: external [53719,53727]" dest="external: external [21843,21851]"/>
  <match src="identifier: amount [102153,102159]" dest="identifier: amount [41539,41545]"/>
  <match src=",: , [47892,47893]" dest=",: , [55702,55703]"/>
  <match src="identifier: file [28467,28471]" dest="identifier: file [46179,46183]"/>
  <match src="&quot;: &quot; [4102,4103]" dest="&quot;: &quot; [4630,4631]"/>
  <match src="uint256: uint256 [49601,49608]" dest="uint256: uint256 [25984,25991]"/>
  <match src="type_name [86332,86339]" dest="type_name [28123,28130]"/>
  <match src="parameter [90854,90867]" dest="parameter [30240,30253]"/>
  <match src="primitive_type [13679,13686]" dest="primitive_type [24980,24987]"/>
  <match src="parameter [95051,95064]" dest="parameter [34437,34450]"/>
  <match src="address: address [99879,99886]" dest="address: address [39265,39272]"/>
  <match src="member_expression [100294,100325]" dest="member_expression [39680,39711]"/>
  <match src="type_name [62681,62693]" dest="type_name [65522,65534]"/>
  <match src=",: , [54254,54255]" dest=",: , [22378,22379]"/>
  <match src="call_argument [79619,79629]" dest="call_argument [72042,72052]"/>
  <match src="expression_statement [81104,81175]" dest="expression_statement [81127,81355]"/>
  <match src="=: = [80409,80410]" dest="=: = [71543,71544]"/>
  <match src="member_expression [94962,94990]" dest="member_expression [34348,34376]"/>
  <match src=",: , [43857,43858]" dest=",: , [13954,13955]"/>
  <match src="identifier: updatePrice [64870,64881]" dest="identifier: oracleCapture [65904,65917]"/>
  <match src="private: private [42890,42897]" dest="private: private [12987,12994]"/>
  <match src="primitive_type [51454,51461]" dest="primitive_type [60883,60890]"/>
  <match src="(: ( [101624,101625]" dest="(: ( [41010,41011]"/>
  <match src="uint: uint [54163,54167]" dest="uint: uint [22287,22291]"/>
  <match src="primitive_type [13012,13019]" dest="primitive_type [24313,24320]"/>
  <match src="}: } [79559,79560]" dest="}: } [71097,71098]"/>
  <match src="type_name [79584,79591]" dest="type_name [71122,71129]"/>
  <match src="identifier: recipient [13422,13431]" dest="identifier: recipient [24723,24732]"/>
  <match src="assignment_expression [100728,100862]" dest="assignment_expression [40114,40248]"/>
  <match src="identifier: COLON [28498,28503]" dest="identifier: COLON [46210,46215]"/>
  <match src="number_literal: 0 [33361,33362]" dest="number_literal: 0 [51073,51074]"/>
  <match src="identifier: coupons [94702,94709]" dest="identifier: coupons [34088,34095]"/>
  <match src="function_body [4735,4803]" dest="function_body [5263,5331]"/>
  <match src=".: . [7132,7133]" dest=".: . [7660,7661]"/>
  <match src="function: function [90985,90993]" dest="function: function [30371,30379]"/>
  <match src="identifier: totalBonded [92694,92705]" dest="identifier: totalBonded [32080,32091]"/>
  <match src="type_cast_expression [21937,21947]" dest="type_cast_expression [63543,63553]"/>
  <match src="call_argument [81878,81883]" dest="call_argument [72460,72465]"/>
  <match src="number_literal: 0 [80428,80429]" dest="number_literal: 0 [71562,71563]"/>
  <match src="}: } [104723,104724]" dest="}: } [44109,44110]"/>
  <match src="identifier: value [7823,7828]" dest="identifier: value [8351,8356]"/>
  <match src="indexed: indexed [53452,53459]" dest="indexed: indexed [21576,21583]"/>
  <match src="(: ( [79311,79312]" dest="(: ( [70875,70876]"/>
  <match src="primitive_type [52534,52541]" dest="primitive_type [20658,20665]"/>
  <match src="visibility [41454,41461]" dest="visibility [11551,11558]"/>
  <match src="member_expression [98532,98555]" dest="member_expression [37918,37941]"/>
  <match src="uint256: uint256 [1326,1333]" dest="uint256: uint256 [1854,1861]"/>
  <match src="call_expression [4745,4774]" dest="call_expression [5273,5302]"/>
  <match src="parameter [44033,44040]" dest="parameter [14130,14137]"/>
  <match src="type_name [8812,8816]" dest="type_name [9340,9344]"/>
  <match src="(: ( [34754,34755]" dest="(: ( [52466,52467]"/>
  <match src="uint256: uint256 [18251,18258]" dest="uint256: uint256 [17873,17880]"/>
  <match src="(: ( [6686,6687]" dest="(: ( [7214,7215]"/>
  <match src="{: { [92877,92878]" dest="{: { [32263,32264]"/>
  <match src="function: function [98270,98278]" dest="function: function [37656,37664]"/>
  <match src="function: function [52586,52594]" dest="function: function [20710,20718]"/>
  <match src="identifier: amount0 [54168,54175]" dest="identifier: amount0 [22292,22299]"/>
  <match src="identifier: Transfer [97589,97597]" dest="identifier: Transfer [36975,36983]"/>
  <match src="function_body [105964,106124]" dest="function_body [69108,69268]"/>
  <match src=",: , [79478,79479]" dest=",: , [71041,71042]"/>
  <match src="type_name [98932,98938]" dest="type_name [38318,38324]"/>
  <match src="state_mutability [45019,45023]" dest="state_mutability [15116,15120]"/>
  <match src="number_literal: 0xf [27696,27699]" dest="number_literal: 0xf [45408,45411]"/>
  <match src="memory: memory [7942,7948]" dest="memory: memory [8470,8476]"/>
  <match src="identifier: recordVote [103281,103291]" dest="identifier: recordVote [42667,42677]"/>
  <match src="call_expression [94133,94163]" dest="call_expression [33519,33549]"/>
  <match src="number_literal: 0 [43268,43269]" dest="number_literal: 0 [13365,13366]"/>
  <match src="member_expression [98532,98551]" dest="member_expression [37918,37937]"/>
  <match src="): ) [96002,96003]" dest="): ) [35388,35389]"/>
  <match src="identifier: self [8257,8261]" dest="identifier: self [8785,8789]"/>
  <match src="bool: bool [9208,9212]" dest="bool: bool [9736,9740]"/>
  <match src="(: ( [76728,76729]" dest="(: ( [58346,58347]"/>
  <match src="identifier: candidates [104286,104296]" dest="identifier: candidates [43672,43682]"/>
  <match src="external: external [53123,53131]" dest="external: external [21247,21255]"/>
  <match src="returns: returns [1716,1723]" dest="returns: returns [2244,2251]"/>
  <match src="(: ( [49600,49601]" dest="(: ( [25983,25984]"/>
  <match src="identifier: reason [29474,29480]" dest="identifier: reason [47186,47192]"/>
  <match src="&amp;: &amp; [35494,35495]" dest="&amp;: &amp; [53206,53207]"/>
  <match src="state_variable_declaration [27440,27478]" dest="state_variable_declaration [45152,45190]"/>
  <match src="call_argument [30353,30359]" dest="call_argument [48065,48071]"/>
  <match src="type_name [95985,95992]" dest="type_name [35371,35378]"/>
  <match src="identifier: decrementBalanceOfStaged [79686,79710]" dest="identifier: decrementBalanceOfStaged [71233,71257]"/>
  <match src="type_name [96398,96405]" dest="type_name [35784,35791]"/>
  <match src="}: } [89745,89746]" dest="}: } [76935,76936]"/>
  <match src="identifier: reason [103773,103779]" dest="identifier: reason [43159,43165]"/>
  <match src="{: { [9616,9617]" dest="{: { [10144,10145]"/>
  <match src="pragma: pragma [36,42]" dest="pragma: pragma [0,6]"/>
  <match src="uint256: uint256 [78993,79000]" dest="uint256: uint256 [70607,70614]"/>
  <match src=".: . [99624,99625]" dest=".: . [39010,39011]"/>
  <match src="return_type_definition [93427,93444]" dest="return_type_definition [32813,32830]"/>
  <match src="return: return [9512,9518]" dest="return: return [10040,10046]"/>
  <match src="(: ( [51076,51077]" dest="(: ( [64466,64467]"/>
  <match src="): ) [52464,52465]" dest="): ) [20588,20589]"/>
  <match src="visibility [99198,99206]" dest="visibility [38584,38592]"/>
  <match src="identifier: coupons [95173,95180]" dest="identifier: coupons [34559,34566]"/>
  <match src="{: { [85146,85147]" dest="{: { [74474,74475]"/>
  <match src="identifier: totalBonded [80604,80615]" dest="identifier: totalBonded [71668,71679]"/>
  <match src="expression_statement [82749,82764]" dest="expression_statement [58089,58104]"/>
  <match src="identifier: that [81112,81116]" dest="identifier: that [81135,81139]"/>
  <match src="internal: internal [72953,72961]" dest="internal: internal [65857,65865]"/>
  <match src="identifier: result [36516,36522]" dest="identifier: result [54228,54234]"/>
  <match src="identifier: owner [12286,12291]" dest="identifier: owner [23587,23592]"/>
  <match src="identifier: _state [98532,98538]" dest="identifier: _state [37918,37924]"/>
  <match src="): ) [30598,30599]" dest="): ) [48310,48311]"/>
  <match src="member_expression [104667,104682]" dest="member_expression [44053,44068]"/>
  <match src="memory: memory [6803,6809]" dest="memory: memory [7331,7337]"/>
  <match src="constant: constant [27497,27505]" dest="constant: constant [45209,45217]"/>
  <match src="call_argument [8364,8410]" dest="call_argument [8892,8938]"/>
  <match src="type_name [91627,91634]" dest="type_name [31013,31020]"/>
  <match src="[: [ [93004,93005]" dest="[: [ [32390,32391]"/>
  <match src="function_body [409,518]" dest="function_body [937,1046]"/>
  <match src="pure: pure [4052,4056]" dest="pure: pure [4580,4584]"/>
  <match src="identifier: account [23073,23080]" dest="identifier: account [55970,55977]"/>
  <match src="identifier: value [79874,79879]" dest="identifier: value [71399,71404]"/>
  <match src="type_name [18251,18258]" dest="type_name [17873,17880]"/>
  <match src="type_name [50689,50696]" dest="type_name [55391,55398]"/>
  <match src="call_argument [71462,71469]" dest="call_argument [81791,81798]"/>
  <match src="modifier_definition [105919,106124]" dest="modifier_definition [69063,69268]"/>
  <match src="identifier: snapshotTotalBonded [102328,102347]" dest="identifier: snapshotTotalBonded [41714,41733]"/>
  <match src="): ) [27888,27889]" dest="): ) [45600,45601]"/>
  <match src="state_mutability [7737,7741]" dest="state_mutability [8265,8269]"/>
  <match src="return_type_definition [2630,2647]" dest="return_type_definition [3158,3175]"/>
  <match src="uint256: uint256 [99513,99520]" dest="uint256: uint256 [38899,38906]"/>
  <match src="{: { [6548,6549]" dest="{: { [7076,7077]"/>
  <match src=",: , [6627,6628]" dest=",: , [7155,7156]"/>
  <match src="byte: byte [27623,27627]" dest="byte: byte [45335,45339]"/>
  <match src="identifier: account [92795,92802]" dest="identifier: account [32181,32188]"/>
  <match src="=: = [42835,42836]" dest="=: = [12932,12933]"/>
  <match src="parameter [54177,54189]" dest="parameter [22301,22313]"/>
  <match src="{: { [63975,63976]" dest="{: { [67715,67716]"/>
  <match src="identifier: payloadA [31115,31123]" dest="identifier: payloadA [48827,48835]"/>
  <match src="return_type_definition [91520,91537]" dest="return_type_definition [30906,30923]"/>
  <match src="identifier: add [351,354]" dest="identifier: add [879,882]"/>
  <match src="expression_statement [35904,35940]" dest="expression_statement [53616,53652]"/>
  <match src="call_argument [48847,48854]" dest="call_argument [63667,63674]"/>
  <match src="struct_member [86467,86483]" dest="struct_member [28258,28274]"/>
  <match src="call_argument [63588,63607]" dest="call_argument [81467,81481]"/>
  <match src="member_expression [101106,101121]" dest="member_expression [40492,40507]"/>
  <match src="member_expression [98224,98238]" dest="member_expression [37610,37624]"/>
  <match src="uint256: uint256 [76657,76664]" dest="uint256: uint256 [56893,56900]"/>
  <match src="parenthesized_expression [32174,32684]" dest="parenthesized_expression [49886,50396]"/>
  <match src="primitive_type [97719,97726]" dest="primitive_type [37105,37112]"/>
  <match src=".: . [90526,90527]" dest=".: . [29912,29913]"/>
  <match src="primitive_type [86279,86286]" dest="primitive_type [28070,28077]"/>
  <match src="member_expression [101148,101193]" dest="member_expression [40534,40579]"/>
  <match src="visibility [43041,43048]" dest="visibility [13138,13145]"/>
  <match src="uint256: uint256 [79217,79224]" dest="uint256: uint256 [60942,60949]"/>
  <match src="visibility [79327,79335]" dest="visibility [70891,70899]"/>
  <match src="array_access [100599,100623]" dest="array_access [39985,40009]"/>
  <match src="event_paramater [53419,53434]" dest="event_paramater [21543,21558]"/>
  <match src="}: } [9659,9660]" dest="}: } [10187,10188]"/>
  <match src="=: = [7568,7569]" dest="=: = [8096,8097]"/>
  <match src="primitive_type [98769,98776]" dest="primitive_type [38155,38162]"/>
  <match src="identifier: Fluid [93360,93365]" dest="identifier: Fluid [32746,32751]"/>
  <match src="identifier: getCouponExpiration [45628,45647]" dest="identifier: getCouponExpiration [15725,15744]"/>
  <match src="identifier: msg [80913,80916]" dest="identifier: msg [72968,72971]"/>
  <match src="state_mutability [43484,43488]" dest="state_mutability [13581,13585]"/>
  <match src="internal: internal [45534,45542]" dest="internal: internal [15631,15639]"/>
  <match src="identifier: Decimal [44707,44714]" dest="identifier: Decimal [14804,14811]"/>
  <match src="): ) [44942,44943]" dest="): ) [15039,15040]"/>
  <match src=":: : [6203,6204]" dest=":: : [6731,6732]"/>
  <match src="(: ( [91405,91406]" dest="(: ( [30791,30792]"/>
  <match src="): ) [77135,77136]" dest="): ) [82993,82994]"/>
  <match src="identifier: char [36544,36548]" dest="identifier: char [54256,54260]"/>
  <match src="identifier: candidate [103334,103343]" dest="identifier: candidate [42720,42729]"/>
  <match src="): ) [45532,45533]" dest="): ) [15629,15630]"/>
  <match src="(: ( [104579,104580]" dest="(: ( [43965,43966]"/>
  <match src="identifier: timestamp [57985,57994]" dest="identifier: timestamp [83251,83260]"/>
  <match src="{: { [33507,33508]" dest="{: { [51219,51220]"/>
  <match src="primitive_type [77192,77199]" dest="primitive_type [59452,59459]"/>
  <match src="identifier: balance [98992,98999]" dest="identifier: balance [38378,38385]"/>
  <match src="uint256: uint256 [76648,76655]" dest="uint256: uint256 [56884,56891]"/>
  <match src="call_expression [82008,82021]" dest="call_expression [58761,58774]"/>
  <match src="returns: returns [49748,49755]" dest="returns: returns [26131,26138]"/>
  <match src="function_definition [94734,94869]" dest="function_definition [34120,34255]"/>
  <match src="type_name [45325,45332]" dest="type_name [15422,15429]"/>
  <match src="assignment_expression [7599,7621]" dest="assignment_expression [8127,8149]"/>
  <match src="block_statement [29560,29949]" dest="block_statement [47272,47661]"/>
  <match src="type_cast_expression [79412,79425]" dest="type_cast_expression [70975,70988]"/>
  <match src="identifier: Decimal [63948,63955]" dest="identifier: Decimal [19312,19319]"/>
  <match src="identifier: D256 [45091,45095]" dest="identifier: D256 [15188,15192]"/>
  <match src="primitive_type [52182,52186]" dest="primitive_type [20306,20310]"/>
  <match src=",: , [23028,23029]" dest=",: , [55915,55916]"/>
  <match src="call_argument [50994,51000]" dest="call_argument [64188,64194]"/>
  <match src="parameter [26111,26126]" dest="parameter [55621,55636]"/>
  <match src="identifier: Require [66510,66517]" dest="identifier: Require [80968,80975]"/>
  <match src="[: [ [95303,95304]" dest="[: [ [34689,34690]"/>
  <match src="parameter [8263,8276]" dest="parameter [8791,8804]"/>
  <match src="function_definition [90815,90899]" dest="function_definition [30201,30285]"/>
  <match src="(: ( [46078,46079]" dest="(: ( [16175,16176]"/>
  <match src="return_statement [91548,91578]" dest="return_statement [30934,30964]"/>
  <match src="{: { [5829,5830]" dest="{: { [6357,6358]"/>
  <match src=",: , [31439,31440]" dest=",: , [49151,49152]"/>
  <match src="parameter [7759,7770]" dest="parameter [8287,8298]"/>
  <match src="primitive_type [4726,4733]" dest="primitive_type [5254,5261]"/>
  <match src="primitive_type [105681,105688]" dest="primitive_type [68825,68832]"/>
  <match src="private: private [43104,43111]" dest="private: private [13201,13208]"/>
  <match src="constant: constant [43112,43120]" dest="constant: constant [13209,13217]"/>
  <match src="memory: memory [9571,9577]" dest="memory: memory [10099,10105]"/>
  <match src="identifier: LPAREN [27594,27600]" dest="identifier: LPAREN [45306,45312]"/>
  <match src="call_expression [7290,7307]" dest="call_expression [7818,7835]"/>
  <match src="identifier: Claim [78906,78911]" dest="identifier: Incentivization [82796,82811]"/>
  <match src="array_access [100728,100748]" dest="array_access [40114,40134]"/>
  <match src="address: address [54244,54251]" dest="address: address [22368,22375]"/>
  <match src=",: , [7873,7874]" dest=",: , [8401,8402]"/>
  <match src="call_expression [102592,102646]" dest="call_expression [41978,42032]"/>
  <match src="{: { [45971,45972]" dest="{: { [16068,16069]"/>
  <match src="return_type_definition [52801,52815]" dest="return_type_definition [20925,20939]"/>
  <match src="identifier: _state [101420,101426]" dest="identifier: _state [40806,40812]"/>
  <match src="memory: memory [8049,8055]" dest="memory: memory [8577,8583]"/>
  <match src="external: external [53902,53910]" dest="external: external [22026,22034]"/>
  <match src="return_type_definition [45664,45681]" dest="return_type_definition [15761,15778]"/>
  <match src="): ) [52880,52881]" dest="): ) [21004,21005]"/>
  <match src="variable_declaration [84669,84681]" dest="variable_declaration [73997,74009]"/>
  <match src="assignment_expression [34950,34985]" dest="assignment_expression [52662,52697]"/>
  <match src="identifier: payloadC [32589,32597]" dest="identifier: payloadC [50301,50309]"/>
  <match src="internal: internal [77312,77320]" dest="internal: internal [17629,17637]"/>
  <match src="contract_declaration [49554,49765]" dest="contract_declaration [25937,26148]"/>
  <match src=",: , [32286,32287]" dest=",: , [49998,49999]"/>
  <match src="): ) [45181,45182]" dest="): ) [15278,15279]"/>
  <match src=",: , [97618,97619]" dest=",: , [37004,37005]"/>
  <match src="}: } [3563,3564]" dest="}: } [4091,4092]"/>
  <match src="parameter [6611,6627]" dest="parameter [7139,7155]"/>
  <match src="identifier: _state [104021,104027]" dest="identifier: _state [43407,43413]"/>
  <match src="call_expression [89484,89541]" dest="call_expression [76674,76731]"/>
  <match src="returns: returns [52291,52298]" dest="returns: returns [20415,20422]"/>
  <match src="member_expression [46170,46182]" dest="member_expression [16267,16279]"/>
  <match src="user_defined_type [49574,49580]" dest="user_defined_type [25957,25963]"/>
  <match src="identifier: statusOf [105734,105742]" dest="identifier: statusOf [68878,68886]"/>
  <match src="identifier: onlyFrozen [79608,79618]" dest="identifier: onlyFrozenOrFluid [72024,72041]"/>
  <match src="identifier: impl [96789,96793]" dest="identifier: impl [36175,36179]"/>
  <match src="(: ( [36307,36308]" dest="(: ( [54019,54020]"/>
  <match src="): ) [32368,32369]" dest="): ) [50080,50081]"/>
  <match src="struct_member [41934,41949]" dest="struct_member [12031,12046]"/>
  <match src="expression_statement [36478,36489]" dest="expression_statement [54190,54201]"/>
  <match src="(: ( [81339,81340]" dest="(: ( [72177,72178]"/>
  <match src="type_name [87017,87024]" dest="type_name [28808,28815]"/>
  <match src="pure: pure [6038,6042]" dest="pure: pure [6566,6570]"/>
  <match src="comment: // Overridable for testing [94457,94483]" dest="comment: // Overridable for testing [33843,33869]"/>
  <match src="call_argument [101447,101453]" dest="call_argument [40833,40839]"/>
  <match src="(: ( [53990,53991]" dest="(: ( [22114,22115]"/>
  <match src="(: ( [2668,2669]" dest="(: ( [3196,3197]"/>
  <match src="call_argument [20465,20498]" dest="call_argument [63099,63128]"/>
  <match src="type_name [102696,102703]" dest="type_name [42082,42089]"/>
  <match src=".: . [7822,7823]" dest=".: . [8350,8351]"/>
  <match src="&quot;: &quot; [81144,81145]" dest="&quot;: &quot; [81318,81319]"/>
  <match src=".: . [101784,101785]" dest=".: . [41170,41171]"/>
  <match src="primitive_type [71285,71292]" dest="primitive_type [67332,67339]"/>
  <match src="user_defined_type [7243,7247]" dest="user_defined_type [7771,7775]"/>
  <match src="primitive_type [3261,3267]" dest="primitive_type [3789,3795]"/>
  <match src="(: ( [93568,93569]" dest="(: ( [32954,32955]"/>
  <match src="address: address [53742,53749]" dest="address: address [21866,21873]"/>
  <match src="function: function [43541,43549]" dest="function: function [13638,13646]"/>
  <match src="uint256: uint256 [33929,33936]" dest="uint256: uint256 [51641,51648]"/>
  <match src="function: function [8022,8030]" dest="function: function [8550,8558]"/>
  <match src="identifier: start [95814,95819]" dest="identifier: start [35200,35205]"/>
  <match src="type_name [43033,43040]" dest="type_name [13130,13137]"/>
  <match src="contract_body [86765,87303]" dest="contract_body [28556,29094]"/>
  <match src="type_name [11944,11951]" dest="type_name [23245,23252]"/>
  <match src="assignment_expression [99217,99318]" dest="assignment_expression [38603,38704]"/>
  <match src="function: function [7666,7674]" dest="function: function [8194,8202]"/>
  <match src="bool: bool [27781,27785]" dest="bool: bool [45493,45497]"/>
  <match src="visibility [29517,29525]" dest="visibility [47229,47237]"/>
  <match src="modifier_invocation [107113,107124]" dest="modifier_invocation [82888,82899]"/>
  <match src="primitive_type [30686,30693]" dest="primitive_type [48398,48405]"/>
  <match src="expression_statement [100260,100380]" dest="expression_statement [39646,39766]"/>
  <match src="parameter [52721,52725]" dest="parameter [20845,20849]"/>
  <match src="{: { [85929,85930]" dest="{: { [27720,27721]"/>
  <match src="identifier: account [11646,11653]" dest="identifier: account [22947,22954]"/>
  <match src="address: address [52083,52090]" dest="address: address [20207,20214]"/>
  <match src="): ) [91841,91842]" dest="): ) [31227,31228]"/>
  <match src="parameter [53048,53063]" dest="parameter [21172,21187]"/>
  <match src="}: } [85208,85209]" dest="}: } [74536,74537]"/>
  <match src=",: , [2673,2674]" dest=",: , [3201,3202]"/>
  <match src="call_expression [32220,32652]" dest="call_expression [49932,50364]"/>
  <match src="identifier: D256 [64850,64854]" dest="identifier: D256 [65884,65888]"/>
  <match src="public: public [49741,49747]" dest="public: public [26124,26130]"/>
  <match src="member_expression [77166,77191]" dest="member_expression [59438,59451]"/>
  <match src="identifier: sub [99039,99042]" dest="identifier: sub [38425,38428]"/>
  <match src="member_expression [93462,93477]" dest="member_expression [32848,32863]"/>
  <match src="parameter [98916,98930]" dest="parameter [38302,38316]"/>
  <match src="state_mutability [6487,6491]" dest="state_mutability [7015,7019]"/>
  <match src="call_expression [19722,19792]" dest="call_expression [63903,64015]"/>
  <match src="contract_body [15707,22496]" dest="contract_body [60271,64749]"/>
  <match src="member_expression [99618,99633]" dest="member_expression [39004,39019]"/>
  <match src="call_expression [83173,83186]" dest="call_expression [58779,58792]"/>
  <match src="{: { [104011,104012]" dest="{: { [43397,43398]"/>
  <match src="identifier: sender [81344,81350]" dest="identifier: sender [72182,72188]"/>
  <match src="state_mutability [9827,9831]" dest="state_mutability [10355,10359]"/>
  <match src="function_body [94664,94728]" dest="function_body [34050,34114]"/>
  <match src="uint256: uint256 [42786,42793]" dest="uint256: uint256 [12883,12890]"/>
  <match src="identifier: dollar [92279,92285]" dest="identifier: dollar [31665,31671]"/>
  <match src="indexed: indexed [78920,78927]" dest="indexed: indexed [82820,82827]"/>
  <match src="call_argument [80190,80200]" dest="call_argument [81545,81555]"/>
  <match src="return: return [8544,8550]" dest="return: return [9072,9078]"/>
  <match src="function_body [96444,96506]" dest="function_body [35830,35892]"/>
  <match src="visibility [52914,52922]" dest="visibility [21038,21046]"/>
  <match src="primitive_type [30183,30189]" dest="primitive_type [47895,47901]"/>
  <match src="identifier: must [31413,31417]" dest="identifier: must [49125,49129]"/>
  <match src="visibility [95370,95376]" dest="visibility [34756,34762]"/>
  <match src="{: { [80269,80270]" dest="{: { [71486,71487]"/>
  <match src="type_name [6893,6897]" dest="type_name [7421,7425]"/>
  <match src="primitive_type [12278,12285]" dest="primitive_type [23579,23586]"/>
  <match src="identifier: FILE [106235,106239]" dest="identifier: FILE [69379,69383]"/>
  <match src="type_name [13398,13405]" dest="type_name [24699,24706]"/>
  <match src="(: ( [35965,35966]" dest="(: ( [53677,53678]"/>
  <match src="parameter [74648,74662]" dest="parameter [62239,62253]"/>
  <match src="identifier: amount [104217,104223]" dest="identifier: amount [43603,43609]"/>
  <match src="&quot;: &quot; [19128,19129]" dest="&quot;: &quot; [70786,70787]"/>
  <match src="parameter [95608,95622]" dest="parameter [34994,35008]"/>
  <match src="primitive_type [21020,21027]" dest="primitive_type [56170,56177]"/>
  <match src="): ) [8528,8529]" dest="): ) [9056,9057]"/>
  <match src="member_expression [102904,102918]" dest="member_expression [42290,42304]"/>
  <match src="identifier: that [28750,28754]" dest="identifier: that [46462,46466]"/>
  <match src="primitive_type [86332,86339]" dest="primitive_type [28123,28130]"/>
  <match src="binary_expression [106000,106035]" dest="binary_expression [69144,69179]"/>
  <match src="parameter [100165,100180]" dest="parameter [39551,39566]"/>
  <match src="identifier: account [99634,99641]" dest="identifier: account [39020,39027]"/>
  <match src="function_body [103534,103664]" dest="function_body [42920,43050]"/>
  <match src="memory: memory [7416,7422]" dest="memory: memory [7944,7950]"/>
  <match src="parameter [8437,8453]" dest="parameter [8965,8981]"/>
  <match src="state_variable_declaration [42329,42380]" dest="state_variable_declaration [12426,12477]"/>
  <match src="identifier: account [93406,93413]" dest="identifier: account [32792,32799]"/>
  <match src="type_name [2605,2612]" dest="type_name [3133,3140]"/>
  <match src="identifier: b [4040,4041]" dest="identifier: b [4568,4569]"/>
  <match src="visibility [52703,52711]" dest="visibility [20827,20835]"/>
  <match src="{: { [91636,91637]" dest="{: { [31022,31023]"/>
  <match src="{: { [46294,46295]" dest="{: { [16391,16392]"/>
  <match src=",: , [89034,89035]" dest=",: , [76224,76225]"/>
  <match src="array_access [104021,104049]" dest="array_access [43407,43435]"/>
  <match src="function_definition [96233,96371]" dest="function_definition [35619,35757]"/>
  <match src="identifier: stringify [31181,31190]" dest="identifier: stringify [48893,48902]"/>
  <match src="identifier: candidate [103179,103188]" dest="identifier: candidate [42565,42574]"/>
  <match src="(: ( [21062,21063]" dest="(: ( [63164,63165]"/>
  <match src="expression_statement [98369,98435]" dest="expression_statement [37755,37821]"/>
  <match src="(: ( [102695,102696]" dest="(: ( [42081,42082]"/>
  <match src="emit: emit [79522,79526]" dest="emit: emit [71060,71064]"/>
  <match src="state_mutability [4712,4716]" dest="state_mutability [5240,5244]"/>
  <match src="member_expression [10040,10047]" dest="member_expression [10568,10575]"/>
  <match src="identifier: msg [79943,79946]" dest="identifier: msg [72571,72574]"/>
  <match src="identifier: z [35390,35391]" dest="identifier: z [53102,53103]"/>
  <match src="return_type_definition [52996,53010]" dest="return_type_definition [21120,21134]"/>
  <match src="call_argument [73840,73846]" dest="call_argument [59348,59354]"/>
  <match src="visibility [82895,82903]" dest="visibility [83049,83057]"/>
  <match src="): ) [91049,91050]" dest="): ) [30435,30436]"/>
  <match src="function_body [103795,103933]" dest="function_body [43181,43319]"/>
  <match src="state_variable_declaration [78736,78775]" dest="state_variable_declaration [70251,70293]"/>
  <match src="}: } [102174,102175]" dest="}: } [41560,41561]"/>
  <match src="): ) [61846,61847]" dest="): ) [26901,26902]"/>
  <match src="state_variable_declaration [43166,43214]" dest="state_variable_declaration [13263,13311]"/>
  <match src="): ) [98336,98337]" dest="): ) [37722,37723]"/>
  <match src="(: ( [5929,5930]" dest="(: ( [6457,6458]"/>
  <match src="primitive_type [21805,21812]" dest="primitive_type [63476,63483]"/>
  <match src="): ) [9848,9849]" dest="): ) [10376,10377]"/>
  <match src="(: ( [80975,80976]" dest="(: ( [71999,72000]"/>
  <match src="uint: uint [53991,53995]" dest="uint: uint [22115,22119]"/>
  <match src="identifier: amount [21316,21322]" dest="identifier: amount [83416,83422]"/>
  <match src="address: address [104757,104764]" dest="address: address [44143,44150]"/>
  <match src="parameter [52603,52618]" dest="parameter [20727,20742]"/>
  <match src="(: ( [19809,19810]" dest="(: ( [64032,64033]"/>
  <match src="pure: pure [38294,38298]" dest="pure: pure [19734,19738]"/>
  <match src="address: address [96398,96405]" dest="address: address [35784,35791]"/>
  <match src="identifier: GOVERNANCE_PROPOSAL_THRESHOLD [42417,42446]" dest="identifier: GOVERNANCE_PROPOSAL_THRESHOLD [12514,12543]"/>
  <match src="(: ( [107463,107464]" dest="(: ( [67773,67774]"/>
  <match src="assignment_expression [35949,35988]" dest="assignment_expression [53661,53700]"/>
  <match src="+: + [433,434]" dest="+: + [961,962]"/>
  <match src=",: , [27790,27791]" dest=",: , [45502,45503]"/>
  <match src="boolean_literal [64124,64129]" dest="boolean_literal [81700,81705]"/>
  <match src="type_cast_expression [34962,34985]" dest="type_cast_expression [52674,52697]"/>
  <match src="call_argument [80365,80379]" dest="call_argument [66628,66642]"/>
  <match src="visibility [6470,6478]" dest="visibility [6998,7006]"/>
  <match src="address: address [100988,100995]" dest="address: address [40374,40381]"/>
  <match src="public: public [93885,93891]" dest="public: public [33271,33277]"/>
  <match src="binary_expression [82179,82217]" dest="binary_expression [78301,78326]"/>
  <match src="type_name [90519,90531]" dest="type_name [29905,29917]"/>
  <match src="(: ( [3311,3312]" dest="(: ( [3839,3840]"/>
  <match src="indexed: indexed [53157,53164]" dest="indexed: indexed [21281,21288]"/>
  <match src="(: ( [51043,51044]" dest="(: ( [64435,64436]"/>
  <match src="identifier: self [6623,6627]" dest="identifier: self [7151,7155]"/>
  <match src="primitive_type [34239,34246]" dest="primitive_type [51951,51958]"/>
  <match src="public: public [95370,95376]" dest="public: public [34756,34762]"/>
  <match src=",: , [23080,23081]" dest=",: , [55977,55978]"/>
  <match src="primitive_type [11638,11645]" dest="primitive_type [22939,22946]"/>
  <match src="primitive_type [97788,97792]" dest="primitive_type [37174,37178]"/>
  <match src="array_access [34469,34476]" dest="array_access [52181,52188]"/>
  <match src="}: } [86743,86744]" dest="}: } [28534,28535]"/>
  <match src="call_expression [101567,101636]" dest="call_expression [40953,41022]"/>
  <match src="identifier: b [1400,1401]" dest="identifier: b [1928,1929]"/>
  <match src="member_expression [81019,81029]" dest="member_expression [72606,72616]"/>
  <match src="internal: internal [7720,7728]" dest="internal: internal [8248,8256]"/>
  <match src="return_statement [98079,98092]" dest="return_statement [37465,37478]"/>
  <match src=".: . [44676,44677]" dest=".: . [14773,14774]"/>
  <match src="identifier: amount [21177,21183]" dest="identifier: amount [56274,56280]"/>
  <match src="member_expression [91860,91874]" dest="member_expression [31246,31260]"/>
  <match src=",: , [11942,11943]" dest=",: , [23243,23244]"/>
  <match src="type_name [87167,87180]" dest="type_name [28958,28971]"/>
  <match src="call_expression [81813,81827]" dest="call_expression [56119,56133]"/>
  <match src="yul_path [89718,89735]" dest="yul_path [76908,76925]"/>
  <match src="variable_declaration [7558,7567]" dest="variable_declaration [8086,8095]"/>
  <match src="(: ( [9413,9414]" dest="(: ( [9941,9942]"/>
  <match src="identifier: COUPON_EXPIRATION [45699,45716]" dest="identifier: COUPON_EXPIRATION [15796,15813]"/>
  <match src="function_body [19712,20097]" dest="function_body [63893,64747]"/>
  <match src="expression_statement [83632,83672]" dest="expression_statement [78806,78937]"/>
  <match src="function_body [70346,70425]" dest="function_body [58672,58888]"/>
  <match src="state_mutability [32124,32128]" dest="state_mutability [49836,49840]"/>
  <match src="private: private [41542,41549]" dest="private: private [11639,11646]"/>
  <match src="type_name [19687,19694]" dest="type_name [63863,63870]"/>
  <match src="identifier: getPoolExitLockupEpochs [45508,45531]" dest="identifier: getPoolExitLockupEpochs [15605,15628]"/>
  <match src="call_expression [8372,8409]" dest="call_expression [8900,8937]"/>
  <match src="(: ( [95390,95391]" dest="(: ( [34776,34777]"/>
  <match src="type_name [87121,87129]" dest="type_name [28912,28920]"/>
  <match src="): ) [92536,92537]" dest="): ) [31922,31923]"/>
  <match src="string [462,491]" dest="string [990,1019]"/>
  <match src="primitive_type [89179,89185]" dest="primitive_type [76369,76375]"/>
  <match src="member_expression [101106,101138]" dest="member_expression [40492,40524]"/>
  <match src="): ) [45564,45565]" dest="): ) [15661,15662]"/>
  <match src="}: } [91887,91888]" dest="}: } [31273,31274]"/>
  <match src="primitive_type [61885,61889]" dest="primitive_type [26940,26944]"/>
  <match src="identifier: period [86263,86269]" dest="identifier: period [28054,28060]"/>
  <match src="primitive_type [29984,29988]" dest="primitive_type [47696,47700]"/>
  <match src="{: { [1335,1336]" dest="{: { [1863,1864]"/>
  <match src="identifier: deadline [48110,48118]" dest="identifier: newSupply [56839,56848]"/>
  <match src="address: address [77192,77199]" dest="address: address [59452,59459]"/>
  <match src="visibility [62754,62761]" dest="visibility [66238,66245]"/>
  <match src="block_statement [31543,31932]" dest="block_statement [49255,49644]"/>
  <match src="type_name [97901,97905]" dest="type_name [37287,37291]"/>
  <match src="parameter [105947,105962]" dest="parameter [69091,69106]"/>
  <match src="[: [ [103600,103601]" dest="[: [ [42986,42987]"/>
  <match src="(: ( [30165,30166]" dest="(: ( [47877,47878]"/>
  <match src="{: { [6726,6727]" dest="{: { [7254,7255]"/>
  <match src="expression_statement [99217,99319]" dest="expression_statement [38603,38705]"/>
  <match src="call_expression [6734,6761]" dest="call_expression [7262,7289]"/>
  <match src="visibility [101087,101095]" dest="visibility [40473,40481]"/>
  <match src=".: . [93312,93313]" dest=".: . [32698,32699]"/>
  <match src="&gt;&gt;: &gt;&gt; [35392,35394]" dest="&gt;&gt;: &gt;&gt; [53104,53106]"/>
  <match src="identifier: must [30826,30830]" dest="identifier: must [48538,48542]"/>
  <match src="identifier: amount0Out [54215,54225]" dest="identifier: amount0Out [22339,22349]"/>
  <match src="primitive_type [79240,79247]" dest="primitive_type [82837,82844]"/>
  <match src="inheritance_specifier [97536,97543]" dest="inheritance_specifier [36922,36929]"/>
  <match src="identifier: value [6198,6203]" dest="identifier: value [6726,6731]"/>
  <match src="member_expression [100641,100686]" dest="member_expression [40027,40072]"/>
  <match src="expression_statement [50793,50816]" dest="expression_statement [55443,55474]"/>
  <match src="}: } [6591,6592]" dest="}: } [7119,7120]"/>
  <match src="user_defined_type [8325,8329]" dest="user_defined_type [8853,8857]"/>
  <match src="identifier: input [34661,34666]" dest="identifier: input [52373,52378]"/>
  <match src="=: = [99250,99251]" dest="=: = [38636,38637]"/>
  <match src="returns: returns [45937,45944]" dest="returns: returns [16034,16041]"/>
  <match src="parameter [16939,16953]" dest="parameter [59238,59252]"/>
  <match src="&quot;: &quot; [105603,105604]" dest="&quot;: &quot; [68747,68748]"/>
  <match src="address: address [11925,11932]" dest="address: address [23226,23233]"/>
  <match src="call_argument [29319,29325]" dest="call_argument [47031,47037]"/>
  <match src="identifier: spender [52611,52618]" dest="identifier: spender [20735,20742]"/>
  <match src="identifier: require [21918,21925]" dest="identifier: require [63511,63518]"/>
  <match src="): ) [102497,102498]" dest="): ) [41883,41884]"/>
  <match src="expression_statement [82072,82143]" dest="expression_statement [79974,80034]"/>
  <match src="=: = [35485,35486]" dest="=: = [53197,53198]"/>
  <match src="{: { [86322,86323]" dest="{: { [28113,28114]"/>
  <match src="call_expression [51176,51322]" dest="call_expression [64495,64666]"/>
  <match src="uint256: uint256 [101940,101947]" dest="uint256: uint256 [41326,41333]"/>
  <match src="identifier: amount [19926,19932]" dest="identifier: amount [56730,56736]"/>
  <match src="returns: returns [3303,3310]" dest="returns: returns [3831,3838]"/>
  <match src="returns: returns [44281,44288]" dest="returns: returns [14378,14385]"/>
  <match src="(: ( [31039,31040]" dest="(: ( [48751,48752]"/>
  <match src="primitive_type [5839,5846]" dest="primitive_type [6367,6374]"/>
  <match src="return_statement [44170,44198]" dest="return_statement [14267,14295]"/>
  <match src="}: } [94450,94451]" dest="}: } [33836,33837]"/>
  <match src="if: if [7438,7440]" dest="if: if [7966,7968]"/>
  <match src="visibility [52398,52406]" dest="visibility [20522,20530]"/>
  <match src="(: ( [79040,79041]" dest="(: ( [70428,70429]"/>
  <match src="struct_member [86255,86270]" dest="struct_member [28046,28061]"/>
  <match src="identifier: Require [105708,105715]" dest="identifier: Require [68852,68859]"/>
  <match src=".: . [93134,93135]" dest=".: . [32520,32521]"/>
  <match src="identifier: staged [91875,91881]" dest="identifier: staged [31261,31267]"/>
  <match src="member_expression [79400,79410]" dest="member_expression [70963,70973]"/>
  <match src="identifier: amount [20033,20039]" dest="identifier: amount [55541,55547]"/>
  <match src=",: , [30700,30701]" dest=",: , [48412,48413]"/>
  <match src="identifier: getCouponSupplyChangeLimit [46052,46078]" dest="identifier: getCouponSupplyChangeLimit [16149,16175]"/>
  <match src="identifier: i [36117,36118]" dest="identifier: i [53829,53830]"/>
  <match src="identifier: candidates [103168,103178]" dest="identifier: candidates [42554,42564]"/>
  <match src="call_expression [35349,35372]" dest="call_expression [53061,53084]"/>
  <match src="member_expression [102369,102382]" dest="member_expression [41755,41768]"/>
  <match src=".: . [81573,81574]" dest=".: . [79831,79832]"/>
  <match src="=: = [100292,100293]" dest="=: = [39678,39679]"/>
  <match src="private: private [43174,43181]" dest="private: private [13271,13278]"/>
  <match src="string: string [8093,8099]" dest="string: string [8621,8627]"/>
  <match src="primitive_type [42329,42336]" dest="primitive_type [12426,12433]"/>
  <match src="identifier: reason [99551,99557]" dest="identifier: reason [38937,38943]"/>
  <match src="expression_statement [100728,100863]" dest="expression_statement [40114,40249]"/>
  <match src="type_name [91157,91164]" dest="type_name [30543,30550]"/>
  <match src="^:  ^ [51,53]" dest="^:  ^ [15,17]"/>
  <match src="comment: // 14 cycles [41429,41441]" dest="comment: // 14 cycles [11526,11538]"/>
  <match src="call_argument [81453,81458]" dest="call_argument [72736,72741]"/>
  <match src="): ) [52725,52726]" dest="): ) [20849,20850]"/>
  <match src="identifier: Decimal [45041,45048]" dest="identifier: Decimal [15138,15145]"/>
  <match src="function_body [96300,96371]" dest="function_body [35686,35757]"/>
  <match src="}: } [96817,96818]" dest="}: } [36203,36204]"/>
  <match src="): ) [31494,31495]" dest="): ) [49206,49207]"/>
  <match src="primitive_type [36705,36709]" dest="primitive_type [54417,54421]"/>
  <match src="call_argument [45096,45130]" dest="call_argument [15193,15227]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [89652,89671]" dest="identifier: IMPLEMENTATION_SLOT [76842,76861]"/>
  <match src="identifier: amount [103743,103749]" dest="identifier: amount [43129,43135]"/>
  <match src="type_alias [78501,78509]" dest="type_alias [70224,70232]"/>
  <match src="uint256: uint256 [77494,77501]" dest="uint256: uint256 [61650,61657]"/>
  <match src="event_paramater [79106,79119]" dest="event_paramater [70494,70507]"/>
  <match src="member_expression [91455,91470]" dest="member_expression [30841,30856]"/>
  <match src="}: } [33590,33591]" dest="}: } [51302,51303]"/>
  <match src=".: . [99358,99359]" dest=".: . [38744,38745]"/>
  <match src="identifier: Account [85903,85910]" dest="identifier: Account [27694,27701]"/>
  <match src=".: . [79386,79387]" dest=".: . [70949,70950]"/>
  <match src="primitive_type [4653,4660]" dest="primitive_type [5181,5188]"/>
  <match src="parameter [11944,11958]" dest="parameter [23245,23259]"/>
  <match src="identifier: balance [99643,99650]" dest="identifier: balance [39029,39036]"/>
  <match src="identifier: epoch [102383,102388]" dest="identifier: epoch [41769,41774]"/>
  <match src="string_literal [25904,25954]" dest="string_literal [79281,79310]"/>
  <match src="(: ( [30227,30228]" dest="(: ( [47939,47940]"/>
  <match src="if: if [10036,10038]" dest="if: if [10564,10566]"/>
  <match src="{: { [33819,33820]" dest="{: { [51531,51532]"/>
  <match src="return_statement [6314,6359]" dest="return_statement [6842,6887]"/>
  <match src=",: , [89716,89717]" dest=",: , [76906,76907]"/>
  <match src="): ) [98562,98563]" dest="): ) [37948,37949]"/>
  <match src=":: : [7288,7289]" dest=":: : [7816,7817]"/>
  <match src="identifier: stringifyTruncated [30253,30271]" dest="identifier: stringifyTruncated [47965,47983]"/>
  <match src="identifier: accounts [99950,99958]" dest="identifier: accounts [39336,39344]"/>
  <match src="call_argument [20655,20661]" dest="call_argument [63735,63741]"/>
  <match src="pure: pure [33783,33787]" dest="pure: pure [51495,51499]"/>
  <match src="): ) [13471,13472]" dest="): ) [24772,24773]"/>
  <match src="(: ( [2638,2639]" dest="(: ( [3166,3167]"/>
  <match src="primitive_type [17569,17576]" dest="primitive_type [59404,59411]"/>
  <match src="external: external [54080,54088]" dest="external: external [22204,22212]"/>
  <match src="return: return [90879,90885]" dest="return: return [30265,30271]"/>
  <match src="identifier: account [99959,99966]" dest="identifier: account [39345,39352]"/>
  <match src="primitive_type [91730,91737]" dest="primitive_type [31116,31123]"/>
  <match src="(: ( [87255,87256]" dest="(: ( [29046,29047]"/>
  <match src="member_expression [103583,103649]" dest="member_expression [42969,43035]"/>
  <match src="(: ( [12277,12278]" dest="(: ( [23578,23579]"/>
  <match src="member_expression [99583,99598]" dest="member_expression [38969,38984]"/>
  <match src="address: address [96119,96126]" dest="address: address [35505,35512]"/>
  <match src="identifier: ERC20 [15682,15687]" dest="identifier: Market [60242,60248]"/>
  <match src="type_name [6843,6849]" dest="type_name [7371,7377]"/>
  <match src="address: address [78968,78975]" dest="address: address [70574,70581]"/>
  <match src="function: function [6420,6428]" dest="function: function [6948,6956]"/>
  <match src="member_expression [94962,94975]" dest="member_expression [34348,34361]"/>
  <match src="type_name [82302,82309]" dest="type_name [58286,58293]"/>
  <match src="): ) [82020,82021]" dest="): ) [58773,58774]"/>
  <match src="memory: memory [6898,6904]" dest="memory: memory [7426,7432]"/>
  <match src="variable_declaration [34735,34744]" dest="variable_declaration [52447,52456]"/>
  <match src="unary_expression [30825,30830]" dest="unary_expression [48537,48542]"/>
  <match src="=: = [7516,7517]" dest="=: = [8044,8045]"/>
  <match src="identifier: add [104121,104124]" dest="identifier: add [43507,43510]"/>
  <match src="identifier: periodFor [104595,104604]" dest="identifier: periodFor [43981,43990]"/>
  <match src="primitive_type [34735,34742]" dest="primitive_type [52447,52454]"/>
  <match src="call_expression [8173,8219]" dest="call_expression [8701,8747]"/>
  <match src="uint256: uint256 [21805,21812]" dest="uint256: uint256 [63476,63483]"/>
  <match src="memory: memory [7880,7886]" dest="memory: memory [8408,8414]"/>
  <match src="type_name [54163,54167]" dest="type_name [22287,22291]"/>
  <match src=",: , [63574,63575]" dest=",: , [81453,81454]"/>
  <match src="identifier: _state [101778,101784]" dest="identifier: _state [41164,41170]"/>
  <match src="identifier: initializer [106139,106150]" dest="identifier: initializer [69283,69294]"/>
  <match src="state_variable_declaration [5738,5769]" dest="state_variable_declaration [6266,6297]"/>
  <match src="identifier: start [43875,43880]" dest="identifier: start [13972,13977]"/>
  <match src="address: address [54382,54389]" dest="address: address [22506,22513]"/>
  <match src="parameter [91157,91164]" dest="parameter [30543,30550]"/>
  <match src="primitive_type [22871,22878]" dest="primitive_type [17608,17615]"/>
  <match src=",: , [29807,29808]" dest=",: , [47519,47520]"/>
  <match src="parameter [35663,35675]" dest="parameter [53375,53387]"/>
  <match src="primitive_type [19823,19830]" dest="primitive_type [64059,64066]"/>
  <match src=".: . [102016,102017]" dest=".: . [41402,41403]"/>
  <match src="type_name [73710,73717]" dest="type_name [56408,56415]"/>
  <match src="call_expression [82153,82290]" dest="call_expression [80149,80201]"/>
  <match src="member_expression [101286,101327]" dest="member_expression [40672,40713]"/>
  <match src="(: ( [33535,33536]" dest="(: ( [51247,51248]"/>
  <match src="call_argument [34895,34897]" dest="call_argument [52607,52609]"/>
  <match src="comment: // ============ Structs ============ [5775,5811]" dest="comment: // ============ Structs ============ [6303,6339]"/>
  <match src="(: ( [31398,31399]" dest="(: ( [49110,49111]"/>
  <match src="primitive_type [104553,104560]" dest="primitive_type [43939,43946]"/>
  <match src="array_access [93777,93825]" dest="array_access [33163,33211]"/>
  <match src="type_name [53314,53321]" dest="type_name [21438,21445]"/>
  <match src="bytes32: bytes32 [31449,31456]" dest="bytes32: bytes32 [49161,49168]"/>
  <match src="expression_statement [35163,35170]" dest="expression_statement [52875,52882]"/>
  <match src="): ) [46218,46219]" dest="): ) [16315,16316]"/>
  <match src="internal: internal [46262,46270]" dest="internal: internal [16359,16367]"/>
  <match src="pure: pure [9482,9486]" dest="pure: pure [10010,10014]"/>
  <match src="identifier: value [79320,79325]" dest="identifier: value [70884,70889]"/>
  <match src="number_literal: 0 [92642,92643]" dest="number_literal: 0 [32028,32029]"/>
  <match src="=: = [92598,92599]" dest="=: = [31984,31985]"/>
  <match src="parameter [45325,45332]" dest="parameter [15422,15429]"/>
  <match src="parameter [6162,6173]" dest="parameter [6690,6701]"/>
  <match src="call_argument [44720,44746]" dest="call_argument [14817,14843]"/>
  <match src="parameter [9496,9500]" dest="parameter [10024,10028]"/>
  <match src="number_literal: 10 [5762,5764]" dest="number_literal: 10 [6290,6292]"/>
  <match src="function_definition [7322,7660]" dest="function_definition [7850,8188]"/>
  <match src="identifier: a [3247,3248]" dest="identifier: a [3775,3776]"/>
  <match src="contract: contract [49554,49562]" dest="contract: contract [25937,25945]"/>
  <match src="identifier: add [81870,81873]" dest="identifier: add [72452,72455]"/>
  <match src="constant: constant [42483,42491]" dest="constant: constant [12580,12588]"/>
  <match src="call_argument [75678,75713]" dest="call_argument [61392,61423]"/>
  <match src="uint256: uint256 [79106,79113]" dest="uint256: uint256 [70494,70501]"/>
  <match src="type_name [78937,78944]" dest="type_name [61061,61068]"/>
  <match src="struct_member [87096,87112]" dest="struct_member [28887,28903]"/>
  <match src="expression_statement [36282,36327]" dest="expression_statement [53994,54039]"/>
  <match src="primitive_type [99165,99172]" dest="primitive_type [38551,38558]"/>
  <match src="call_expression [103844,103926]" dest="call_expression [43230,43312]"/>
  <match src="call_argument [8911,8915]" dest="call_argument [9439,9443]"/>
  <match src="internal: internal [44128,44136]" dest="internal: internal [14225,14233]"/>
  <match src="identifier: decrementBalanceOfBonded [81532,81556]" dest="identifier: placeLock [79818,79827]"/>
  <match src=".: . [100903,100904]" dest=".: . [40289,40290]"/>
  <match src="&quot;: &quot; [51303,51304]" dest="&quot;: &quot; [64651,64652]"/>
  <match src="identifier: that [82003,82007]" dest="identifier: that [80906,80910]"/>
  <match src=".: . [6750,6751]" dest=".: . [7278,7279]"/>
  <match src="identifier: epoch [102263,102268]" dest="identifier: epoch [41649,41654]"/>
  <match src="identifier: sender [53330,53336]" dest="identifier: sender [21454,21460]"/>
  <match src="identifier: push [102635,102639]" dest="identifier: push [42021,42025]"/>
  <match src="external: external [52850,52858]" dest="external: external [20974,20982]"/>
  <match src="identifier: expiring [102626,102634]" dest="identifier: expiring [42012,42020]"/>
  <match src="uint256: uint256 [81041,81048]" dest="uint256: uint256 [62635,62642]"/>
  <match src="state_mutability [12319,12323]" dest="state_mutability [23620,23624]"/>
  <match src="(: ( [71461,71462]" dest="(: ( [81790,81791]"/>
  <match src="state_mutability [95250,95254]" dest="state_mutability [34636,34640]"/>
  <match src="private: private [62708,62715]" dest="private: private [60318,60325]"/>
  <match src="function_definition [31385,31938]" dest="function_definition [49097,49650]"/>
  <match src="call_argument [51233,51239]" dest="call_argument [64590,64596]"/>
  <match src="identifier: stringify [30418,30427]" dest="identifier: stringify [48130,48139]"/>
  <match src="identifier: sub [100326,100329]" dest="identifier: sub [39712,39715]"/>
  <match src="user_defined_type [6999,7003]" dest="user_defined_type [7527,7531]"/>
  <match src=".: . [10052,10053]" dest=".: . [10580,10581]"/>
  <match src="identifier: from [6123,6127]" dest="identifier: from [6651,6655]"/>
  <match src="(: ( [91505,91506]" dest="(: ( [30891,30892]"/>
  <match src="identifier: oracle [86829,86835]" dest="identifier: oracle [28620,28626]"/>
  <match src="call_argument [9414,9418]" dest="call_argument [9942,9946]"/>
  <match src="identifier: self [8911,8915]" dest="identifier: self [9439,9443]"/>
  <match src="calldata: calldata [54262,54270]" dest="calldata: calldata [22386,22394]"/>
  <match src="): ) [7710,7711]" dest="): ) [8238,8239]"/>
  <match src="): ) [90831,90832]" dest="): ) [30217,30218]"/>
  <match src="(: ( [106203,106204]" dest="(: ( [69347,69348]"/>
  <match src="user_defined_type [8245,8249]" dest="user_defined_type [8773,8777]"/>
  <match src="]: ] [93133,93134]" dest="]: ] [32519,32520]"/>
  <match src="type_name [94655,94662]" dest="type_name [34041,34048]"/>
  <match src="identifier: value [13707,13712]" dest="identifier: value [25008,25013]"/>
  <match src="return: return [7642,7648]" dest="return: return [8170,8176]"/>
  <match src="type_name [25704,25711]" dest="type_name [60569,60576]"/>
  <match src="type_name [101892,101899]" dest="type_name [41278,41285]"/>
  <match src="call_argument [2675,2703]" dest="call_argument [3203,3231]"/>
  <match src="identifier: value [6929,6934]" dest="identifier: value [7457,7462]"/>
  <match src="identifier: transferFrom [52741,52753]" dest="identifier: transferFrom [20865,20877]"/>
  <match src="private: private [23259,23266]" dest="private: private [59114,59121]"/>
  <match src="identifier: _state [100641,100647]" dest="identifier: _state [40027,40033]"/>
  <match src="call_expression [75653,75723]" dest="call_expression [61380,61424]"/>
  <match src="visibility [26308,26316]" dest="visibility [58237,58245]"/>
  <match src="primitive_type [101036,101043]" dest="primitive_type [40422,40429]"/>
  <match src="return_type_definition [96282,96299]" dest="return_type_definition [35668,35685]"/>
  <match src="}: } [36746,36747]" dest="}: } [54458,54459]"/>
  <match src="return: return [8894,8900]" dest="return: return [9422,9428]"/>
  <match src="identifier: expiringCouponsAtIndex [95028,95050]" dest="identifier: expiringCouponsAtIndex [34414,34436]"/>
  <match src="identifier: owner [52975,52980]" dest="identifier: owner [21099,21104]"/>
  <match src="bytes: bytes [32925,32930]" dest="bytes: bytes [50637,50642]"/>
  <match src="variable_declaration [71512,71536]" dest="variable_declaration [66730,66747]"/>
  <match src="): ) [9582,9583]" dest="): ) [10110,10111]"/>
  <match src="(: ( [48786,48787]" dest="(: ( [55785,55786]"/>
  <match src="memory: memory [34096,34102]" dest="memory: memory [51808,51814]"/>
  <match src="primitive_type [97901,97905]" dest="primitive_type [37287,37291]"/>
  <match src="]: ] [102057,102058]" dest="]: ] [41443,41444]"/>
  <match src="enum_value: Frozen [85930,85936]" dest="enum_value: Frozen [27721,27727]"/>
  <match src="user_defined_type [8263,8267]" dest="user_defined_type [8791,8795]"/>
  <match src="member_expression [9519,9529]" dest="member_expression [10047,10057]"/>
  <match src="&quot;: &quot; [62732,62733]" dest="&quot;: &quot; [60342,60343]"/>
  <match src="=: = [3445,3446]" dest="=: = [3973,3974]"/>
  <match src="type_name [20399,20406]" dest="type_name [59098,59105]"/>
  <match src="call_expression [56611,56662]" dest="call_expression [72827,72945]"/>
  <match src="member_expression [98832,98861]" dest="member_expression [38218,38247]"/>
  <match src=".: . [99949,99950]" dest=".: . [39335,39336]"/>
  <match src="type_name [42786,42793]" dest="type_name [12883,12890]"/>
  <match src="identifier: setup [61808,61813]" dest="identifier: setup [26863,26868]"/>
  <match src="(: ( [79618,79619]" dest="(: ( [72041,72042]"/>
  <match src="identifier: _state [103161,103167]" dest="identifier: _state [42547,42553]"/>
  <match src="function: function [79566,79574]" dest="function: function [71104,71112]"/>
  <match src="call_argument [17740,17782]" dest="call_argument [72292,72328]"/>
  <match src="enum: enum [85917,85921]" dest="enum: enum [27708,27712]"/>
  <match src="member_expression [81497,81507]" dest="member_expression [71711,71721]"/>
  <match src="call_expression [99013,99092]" dest="call_expression [38399,38478]"/>
  <match src="identifier: epoch [102286,102291]" dest="identifier: epoch [41672,41677]"/>
  <match src="call_argument [19835,19872]" dest="call_argument [64083,64128]"/>
  <match src="identifier: COUPON_SUPPLY_CHANGE_LIMIT [43121,43147]" dest="identifier: COUPON_SUPPLY_CHANGE_LIMIT [13218,13244]"/>
  <match src="identifier: errorMessage [4761,4773]" dest="identifier: errorMessage [5289,5301]"/>
  <match src="uint256: uint256 [97569,97576]" dest="uint256: uint256 [36955,36962]"/>
  <match src="function_definition [95965,96094]" dest="function_definition [35351,35480]"/>
  <match src=".: . [28994,28995]" dest=".: . [46706,46707]"/>
  <match src="type_name [91730,91737]" dest="type_name [31116,31123]"/>
  <match src="uint256: uint256 [86443,86450]" dest="uint256: uint256 [28234,28241]"/>
  <match src="}: } [5858,5859]" dest="}: } [6386,6387]"/>
  <match src="visibility [94634,94640]" dest="visibility [34020,34026]"/>
  <match src="call_argument [29843,29851]" dest="call_argument [47555,47563]"/>
  <match src="(: ( [96352,96353]" dest="(: ( [35738,35739]"/>
  <match src=",: , [28819,28820]" dest=",: , [46531,46532]"/>
  <match src="public: public [96004,96010]" dest="public: public [35390,35396]"/>
  <match src="parameter [95985,96002]" dest="parameter [35371,35388]"/>
  <match src="return_type_definition [52712,52726]" dest="return_type_definition [20836,20850]"/>
  <match src="parameter [7243,7254]" dest="parameter [7771,7782]"/>
  <match src=".: . [91668,91669]" dest=".: . [31054,31055]"/>
  <match src="identifier: account [50799,50806]" dest="identifier: account [55457,55464]"/>
  <match src="member_expression [8753,8760]" dest="member_expression [9281,9288]"/>
  <match src="}: } [23095,23096]" dest="}: } [56139,56140]"/>
  <match src="]: ] [94842,94843]" dest="]: ] [34228,34229]"/>
  <match src="type_name [4032,4039]" dest="type_name [4560,4567]"/>
  <match src="{: { [86222,86223]" dest="{: { [28013,28014]"/>
  <match src="identifier: value [46184,46189]" dest="identifier: value [16281,16286]"/>
  <match src="{: { [27869,27870]" dest="{: { [45581,45582]"/>
  <match src="identifier: Storage [86757,86764]" dest="identifier: Storage [28548,28555]"/>
  <match src="(: ( [92611,92612]" dest="(: ( [31997,31998]"/>
  <match src="primitive_type [79083,79090]" dest="primitive_type [70471,70478]"/>
  <match src="variable_declaration_statement [89021,89153]" dest="variable_declaration_statement [76211,76343]"/>
  <match src="identifier: i [35163,35164]" dest="identifier: i [52875,52876]"/>
  <match src="call_expression [98683,98722]" dest="call_expression [38069,38108]"/>
  <match src=".: . [104673,104674]" dest=".: . [44059,44060]"/>
  <match src="identifier: b [435,436]" dest="identifier: b [963,964]"/>
  <match src="call_argument [6957,6961]" dest="call_argument [7485,7489]"/>
  <match src="type_name [77369,77376]" dest="type_name [17581,17588]"/>
  <match src="parameter [54382,54389]" dest="parameter [22506,22513]"/>
  <match src="==: == [7444,7446]" dest="==: == [7972,7974]"/>
  <match src="identifier: incrementApproveFor [103470,103489]" dest="identifier: incrementApproveFor [42856,42875]"/>
  <match src="): ) [7138,7139]" dest="): ) [7666,7667]"/>
  <match src="visibility [15775,15782]" dest="visibility [59420,59427]"/>
  <match src="struct_declaration [86420,86489]" dest="struct_declaration [28211,28280]"/>
  <match src="-: - [35476,35477]" dest="-: - [53188,53189]"/>
  <match src="{: { [70346,70347]" dest="{: { [58672,58673]"/>
  <match src="member_expression [63498,63510]" dest="member_expression [81365,81377]"/>
  <match src="{: { [33845,33846]" dest="{: { [51557,51558]"/>
  <match src="): ) [36616,36617]" dest="): ) [54328,54329]"/>
  <match src="primitive_type [90854,90860]" dest="primitive_type [30240,30246]"/>
  <match src="identifier: debt [91977,91981]" dest="identifier: debt [31363,31367]"/>
  <match src="library: library [84195,84202]" dest="library: library [73523,73530]"/>
  <match src="(: ( [7242,7243]" dest="(: ( [7770,7771]"/>
  <match src=".: . [82790,82791]" dest=".: . [80803,80804]"/>
  <match src="(: ( [91706,91707]" dest="(: ( [31092,31093]"/>
  <match src="identifier: target [9867,9873]" dest="identifier: target [10395,10401]"/>
  <match src="(: ( [27934,27935]" dest="(: ( [45646,45647]"/>
  <match src="array_access [103398,103441]" dest="array_access [42784,42827]"/>
  <match src="primitive_type [42392,42399]" dest="primitive_type [12489,12496]"/>
  <match src="(: ( [11924,11925]" dest="(: ( [23225,23226]"/>
  <match src="byte: byte [36612,36616]" dest="byte: byte [54324,54328]"/>
  <match src="identifier: coupons [102618,102625]" dest="identifier: coupons [42004,42011]"/>
  <match src="(: ( [45672,45673]" dest="(: ( [15769,15770]"/>
  <match src=".: . [8387,8388]" dest=".: . [8915,8916]"/>
  <match src="(: ( [78854,78855]" dest="(: ( [70372,70373]"/>
  <match src="identifier: incrementTotalBonded [98144,98164]" dest="identifier: incrementTotalBonded [37530,37550]"/>
  <match src="}: } [46640,46641]" dest="}: } [16737,16738]"/>
  <match src="visibility [23259,23266]" dest="visibility [59114,59121]"/>
  <match src="(: ( [93983,93984]" dest="(: ( [33369,33370]"/>
  <match src="identifier: sender [19730,19736]" dest="identifier: sender [63924,63930]"/>
  <match src="+: + [36818,36819]" dest="+: + [54530,54531]"/>
  <match src="}: } [32694,32695]" dest="}: } [50406,50407]"/>
  <match src="function: function [9547,9555]" dest="function: function [10075,10083]"/>
  <match src="type_name [82487,82494]" dest="type_name [61354,61361]"/>
  <match src="type_name [77288,77295]" dest="type_name [79936,79943]"/>
  <match src="identifier: COLON [28048,28053]" dest="identifier: COLON [45760,45765]"/>
  <match src="bytes32: bytes32 [105571,105578]" dest="bytes32: bytes32 [68715,68722]"/>
  <match src="visibility [102237,102245]" dest="visibility [41623,41631]"/>
  <match src="function_definition [52951,53011]" dest="function_definition [21075,21135]"/>
  <match src="}: } [10140,10141]" dest="}: } [10668,10669]"/>
  <match src="[: [ [103415,103416]" dest="[: [ [42801,42802]"/>
  <match src="primitive_type [36558,36565]" dest="primitive_type [54270,54277]"/>
  <match src="primitive_type [52967,52974]" dest="primitive_type [21091,21098]"/>
  <match src="returns: returns [8703,8710]" dest="returns: returns [9231,9238]"/>
  <match src="return_statement [9512,9535]" dest="return_statement [10040,10063]"/>
  <match src="): ) [30359,30360]" dest="): ) [48071,48072]"/>
  <match src="type_name [86094,86101]" dest="type_name [27885,27892]"/>
  <match src="return: return [91176,91182]" dest="return: return [30562,30568]"/>
  <match src="uint256: uint256 [27663,27670]" dest="uint256: uint256 [45375,45382]"/>
  <match src="=: = [35959,35960]" dest="=: = [53671,53672]"/>
  <match src="type_name [52108,52112]" dest="type_name [20232,20236]"/>
  <match src="type_name [6999,7003]" dest="type_name [7527,7531]"/>
  <match src="(: ( [95455,95456]" dest="(: ( [34841,34842]"/>
  <match src="is: is [15688,15690]" dest="is: is [60249,60251]"/>
  <match src="identifier: Unbond [79034,79040]" dest="identifier: Bond [70424,70428]"/>
  <match src="&quot;: &quot; [82140,82141]" dest="&quot;: &quot; [80031,80032]"/>
  <match src="parameter [101493,101508]" dest="parameter [40879,40894]"/>
  <match src="variable_declaration [89022,89034]" dest="variable_declaration [76212,76224]"/>
  <match src=",: , [13934,13935]" dest=",: , [25235,25236]"/>
  <match src="emit_statement [81838,81899]" dest="emit_statement [72420,72475]"/>
  <match src="(: ( [82019,82020]" dest="(: ( [58772,58773]"/>
  <match src="parameter [96438,96442]" dest="parameter [35824,35828]"/>
  <match src="): ) [33813,33814]" dest="): ) [51525,51526]"/>
  <match src=".: . [98538,98539]" dest=".: . [37924,37925]"/>
  <match src="identifier: must [31972,31976]" dest="identifier: must [49684,49688]"/>
  <match src="(: ( [53304,53305]" dest="(: ( [21428,21429]"/>
  <match src="identifier: Require [48774,48781]" dest="identifier: Require [70724,70731]"/>
  <match src="returns: returns [36603,36610]" dest="returns: returns [54315,54322]"/>
  <match src="[: [ [101163,101164]" dest="[: [ [40549,40550]"/>
  <match src="): ) [103784,103785]" dest="): ) [43170,43171]"/>
  <match src=",: , [13027,13028]" dest=",: , [24328,24329]"/>
  <match src=".: . [98238,98239]" dest=".: . [37624,37625]"/>
  <match src="assignment_expression [103544,103657]" dest="assignment_expression [42930,43043]"/>
  <match src="&quot;: &quot; [56660,56661]" dest="&quot;: &quot; [72934,72935]"/>
  <match src="primitive_type [101964,101970]" dest="primitive_type [41350,41356]"/>
  <match src="type_name [65289,65296]" dest="type_name [66794,66801]"/>
  <match src="): ) [4701,4702]" dest="): ) [5229,5230]"/>
  <match src="identifier: amount [99668,99674]" dest="identifier: amount [39054,39060]"/>
  <match src="call_argument [83560,83564]" dest="call_argument [78328,78332]"/>
  <match src="member_expression [80483,80516]" dest="member_expression [71588,71621]"/>
  <match src="public: public [91915,91921]" dest="public: public [31301,31307]"/>
  <match src="comment: // 10,000 DAI [41766,41779]" dest="comment: // 10,000 DAI [11863,11876]"/>
  <match src="[: [ [99992,99993]" dest="[: [ [39378,39379]"/>
  <match src="primitive_type [92151,92158]" dest="primitive_type [31537,31544]"/>
  <match src="parameter [52873,52880]" dest="parameter [20997,21004]"/>
  <match src="yul_assignment [85148,85176]" dest="yul_assignment [74476,74504]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [524,777]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1052,1305]"/>
  <match src="return_statement [95407,95458]" dest="return_statement [34793,34844]"/>
  <match src="call_expression [51034,51065]" dest="call_expression [64419,64455]"/>
  <match src="}: } [98263,98264]" dest="}: } [37649,37650]"/>
  <match src="(: ( [6754,6755]" dest="(: ( [7282,7283]"/>
  <match src="primitive_type [54098,54102]" dest="primitive_type [22222,22226]"/>
  <match src="(: ( [100329,100330]" dest="(: ( [39715,39716]"/>
  <match src="public: public [93548,93554]" dest="public: public [32934,32940]"/>
  <match src="identifier: nonces [52960,52966]" dest="identifier: nonces [21084,21090]"/>
  <match src="identifier: couponAllowances [102033,102049]" dest="identifier: couponAllowances [41419,41435]"/>
  <match src="event_paramater [97620,97638]" dest="event_paramater [37006,37024]"/>
  <match src="array_access [101148,101172]" dest="array_access [40534,40558]"/>
  <match src=",: , [100445,100446]" dest=",: , [39831,39832]"/>
  <match src="returns: returns [96150,96157]" dest="returns: returns [35536,35543]"/>
  <match src="): ) [96415,96416]" dest="): ) [35801,35802]"/>
  <match src="identifier: BASE [8404,8408]" dest="identifier: BASE [8932,8936]"/>
  <match src="expression_statement [79965,80002]" dest="expression_statement [71187,71224]"/>
  <match src="): ) [97792,97793]" dest="): ) [37178,37179]"/>
  <match src="type_name [4653,4660]" dest="type_name [5181,5188]"/>
  <match src="): ) [44416,44417]" dest="): ) [14513,14514]"/>
  <match src="contract_declaration [90437,96826]" dest="contract_declaration [29823,36212]"/>
  <match src="type_name [105571,105578]" dest="type_name [68715,68722]"/>
  <match src="returns: returns [33792,33799]" dest="returns: returns [51504,51511]"/>
  <match src="return_statement [9055,9086]" dest="return_statement [9583,9614]"/>
  <match src="type_name [19652,19659]" dest="type_name [63789,63796]"/>
  <match src="{: { [5968,5969]" dest="{: { [6496,6497]"/>
  <match src="=: = [42925,42926]" dest="=: = [13022,13023]"/>
  <match src="returns: returns [34698,34705]" dest="returns: returns [52410,52417]"/>
  <match src="identifier: candidates [104324,104334]" dest="identifier: candidates [43710,43720]"/>
  <match src="identifier: FILE [105596,105600]" dest="identifier: FILE [68740,68744]"/>
  <match src="event: event [51412,51417]" dest="event: event [60823,60828]"/>
  <match src=",: , [102159,102160]" dest=",: , [41545,41546]"/>
  <match src="identifier: D256 [9455,9459]" dest="identifier: D256 [9983,9987]"/>
  <match src="type_name [9607,9614]" dest="type_name [10135,10142]"/>
  <match src=",: , [13697,13698]" dest=",: , [24998,24999]"/>
  <match src="primitive_type [18945,18952]" dest="primitive_type [17844,17851]"/>
  <match src="type_name [80235,80242]" dest="type_name [71432,71439]"/>
  <match src="(: ( [98062,98063]" dest="(: ( [37448,37449]"/>
  <match src="): ) [106151,106152]" dest="): ) [69295,69296]"/>
  <match src="string: string [28963,28969]" dest="string: string [46675,46681]"/>
  <match src="struct_member [86157,86177]" dest="struct_member [27948,27968]"/>
  <match src="state_mutability [91143,91147]" dest="state_mutability [30529,30533]"/>
  <match src="identifier: _state [94681,94687]" dest="identifier: _state [34067,34073]"/>
  <match src="type_name [54244,54251]" dest="type_name [22368,22375]"/>
  <match src="pure: pure [826,830]" dest="pure: pure [1354,1358]"/>
  <match src="parameter [31427,31439]" dest="parameter [49139,49151]"/>
  <match src="identifier: epoch [93939,93944]" dest="identifier: epoch [33325,33330]"/>
  <match src="): ) [102645,102646]" dest="): ) [42031,42032]"/>
  <match src="identifier: EpochStrategy [94217,94230]" dest="identifier: EpochStrategy [33603,33616]"/>
  <match src="identifier: that [66518,66522]" dest="identifier: that [80976,80980]"/>
  <match src="variable_declaration [82487,82515]" dest="variable_declaration [61354,61377]"/>
  <match src="identifier: supply [99753,99759]" dest="identifier: supply [39139,39145]"/>
  <match src="identifier: totalSupply [102401,102412]" dest="identifier: totalSupply [41787,41798]"/>
  <match src="function: function [29402,29410]" dest="function: function [47114,47122]"/>
  <match src="parameter [54227,54242]" dest="parameter [22351,22366]"/>
  <match src="comment: // populate the most-significant character [36365,36407]" dest="comment: // populate the most-significant character [54077,54119]"/>
  <match src=".: . [104358,104359]" dest=".: . [43744,43745]"/>
  <match src="return_statement [46163,46220]" dest="return_statement [16260,16317]"/>
  <match src="identifier: incrementBalanceOfClaimable [81469,81496]" dest="identifier: incrementBalanceOf [71692,71710]"/>
  <match src="view: view [91613,91617]" dest="view: view [30999,31003]"/>
  <match src="function_definition [83053,83284]" dest="function_definition [58894,59072]"/>
  <match src="contract: contract [86748,86756]" dest="contract: contract [28539,28547]"/>
  <match src="identifier: value [52785,52790]" dest="identifier: value [20909,20914]"/>
  <match src="identifier: D256 [7875,7879]" dest="identifier: D256 [8403,8407]"/>
  <match src="primitive_type [3250,3257]" dest="primitive_type [3778,3785]"/>
  <match src="public: public [91606,91612]" dest="public: public [30992,30998]"/>
  <match src="yul_identifier [33536,33542]" dest="yul_identifier [51248,51254]"/>
  <match src="identifier: value [6739,6744]" dest="identifier: value [7267,7272]"/>
  <match src="call_argument [99418,99419]" dest="call_argument [38804,38805]"/>
  <match src=",: , [21786,21787]" dest=",: , [63474,63475]"/>
  <match src="identifier: file [28791,28795]" dest="identifier: file [46503,46507]"/>
  <match src="bytes32: bytes32 [29466,29473]" dest="bytes32: bytes32 [47178,47185]"/>
  <match src="(: ( [29580,29581]" dest="(: ( [47292,47293]"/>
  <match src="call_argument [8383,8393]" dest="call_argument [8911,8921]"/>
  <match src="call_argument [100026,100032]" dest="call_argument [39412,39418]"/>
  <match src="[: [ [100656,100657]" dest="[: [ [40042,40043]"/>
  <match src="return: return [36509,36515]" dest="return: return [54221,54227]"/>
  <match src="(: ( [6956,6957]" dest="(: ( [7484,7485]"/>
  <match src="uint256: uint256 [100559,100566]" dest="uint256: uint256 [39945,39952]"/>
  <match src="memory: memory [43756,43762]" dest="memory: memory [13853,13859]"/>
  <match src="identifier: start [86593,86598]" dest="identifier: start [28384,28389]"/>
  <match src="): ) [52630,52631]" dest="): ) [20754,20755]"/>
  <match src="returns: returns [44024,44031]" dest="returns: returns [14121,14128]"/>
  <match src="parameter [44849,44868]" dest="parameter [14946,14965]"/>
  <match src="memory: memory [63961,63967]" dest="memory: memory [19325,19331]"/>
  <match src="return: return [6314,6320]" dest="return: return [6842,6848]"/>
  <match src="primitive_type [52451,52458]" dest="primitive_type [20575,20582]"/>
  <match src="(: ( [86082,86083]" dest="(: ( [27873,27874]"/>
  <match src="call_argument [103911,103917]" dest="call_argument [43297,43303]"/>
  <match src="&quot;: &quot; [48818,48819]" dest="&quot;: &quot; [55835,55836]"/>
  <match src="parameter [6451,6460]" dest="parameter [6979,6988]"/>
  <match src=":: : [8370,8371]" dest=":: : [8898,8899]"/>
  <match src="uint256: uint256 [82302,82309]" dest="uint256: uint256 [58286,58293]"/>
  <match src="type_name [3239,3246]" dest="type_name [3767,3774]"/>
  <match src="emit: emit [80179,80183]" dest="emit: emit [81533,81537]"/>
  <match src="function: function [52432,52440]" dest="function: function [20556,20564]"/>
  <match src="variable_declaration [65289,65313]" dest="variable_declaration [66794,66815]"/>
  <match src="): ) [81826,81827]" dest="): ) [56132,56133]"/>
  <match src=",: , [28845,28846]" dest=",: , [46557,46558]"/>
  <match src="function_definition [102659,103041]" dest="function_definition [42045,42427]"/>
  <match src="}: } [64140,64141]" dest="}: } [67963,67964]"/>
  <match src="}: } [91210,91211]" dest="}: } [30596,30597]"/>
  <match src="private: private [42546,42553]" dest="private: private [12643,12650]"/>
  <match src=".: . [81966,81967]" dest=".: . [71477,71478]"/>
  <match src="return: return [94674,94680]" dest="return: return [34060,34066]"/>
  <match src="identifier: epoch [94908,94913]" dest="identifier: epoch [34294,34299]"/>
  <match src="member_expression [93932,93944]" dest="member_expression [33318,33330]"/>
  <match src="): ) [53639,53640]" dest="): ) [21763,21764]"/>
  <match src="state_mutability [93066,93070]" dest="state_mutability [32452,32456]"/>
  <match src=",: , [53046,53047]" dest=",: , [21170,21171]"/>
  <match src="call_argument [74253,74259]" dest="call_argument [64348,64354]"/>
  <match src="{: { [41275,41276]" dest="{: { [11372,11373]"/>
  <match src="}: } [104850,104851]" dest="}: } [44236,44237]"/>
  <match src="}: } [99098,99099]" dest="}: } [38484,38485]"/>
  <match src="[: [ [103561,103562]" dest="[: [ [42947,42948]"/>
  <match src="byte: byte [35961,35965]" dest="byte: byte [53673,53677]"/>
  <match src="library_declaration [84195,85211]" dest="library_declaration [73523,74539]"/>
  <match src="): ) [95395,95396]" dest="): ) [34781,34782]"/>
  <match src="&quot;: &quot; [48673,48674]" dest="&quot;: &quot; [64247,64248]"/>
  <match src="state_mutability [45765,45769]" dest="state_mutability [15862,15866]"/>
  <match src="=: = [71318,71319]" dest="=: = [67353,67354]"/>
  <match src="identifier: allowance [52509,52518]" dest="identifier: allowance [20633,20642]"/>
  <match src="function: function [94875,94883]" dest="function: function [34261,34269]"/>
  <match src="function_body [81000,81905]" dest="function_body [72054,72481]"/>
  <match src="string_literal [80095,80133]" dest="string_literal [81092,81106]"/>
  <match src="{: { [8178,8179]" dest="{: { [8706,8707]"/>
  <match src="identifier: msg [81441,81444]" dest="identifier: msg [72724,72727]"/>
  <match src="function: function [44387,44395]" dest="function: function [14484,14492]"/>
  <match src="identifier: amount [74557,74563]" dest="identifier: amount [18174,18180]"/>
  <match src="identifier: DAO_EXIT_LOCKUP_EPOCHS [45464,45486]" dest="identifier: DAO_EXIT_LOCKUP_EPOCHS [15561,15583]"/>
  <match src="primitive_type [95264,95271]" dest="primitive_type [34650,34657]"/>
  <match src="type_name [7243,7247]" dest="type_name [7771,7775]"/>
  <match src="number_literal: 0 [1971,1972]" dest="number_literal: 0 [2499,2500]"/>
  <match src="type_name [7937,7941]" dest="type_name [8465,8469]"/>
  <match src="identifier: mul [6207,6210]" dest="identifier: mul [6735,6738]"/>
  <match src="return_statement [45457,45487]" dest="return_statement [15554,15584]"/>
  <match src="parameter [33747,33760]" dest="parameter [51459,51472]"/>
  <match src="comment: /* Bonding */ [41785,41798]" dest="comment: /* Bonding */ [11882,11895]"/>
  <match src="primitive_type [70382,70389]" dest="primitive_type [58727,58734]"/>
  <match src="type_name [93398,93405]" dest="type_name [32784,32791]"/>
  <match src="&quot;: &quot; [21949,21950]" dest="&quot;: &quot; [63567,63568]"/>
  <match src="(: ( [81927,81928]" dest="(: ( [79935,79936]"/>
  <match src="(: ( [45829,45830]" dest="(: ( [15926,15927]"/>
  <match src="internal: internal [66212,66220]" dest="internal: internal [70705,70713]"/>
  <match src="(: ( [7475,7476]" dest="(: ( [8003,8004]"/>
  <match src="identifier: stringify [30494,30503]" dest="identifier: stringify [48206,48215]"/>
  <match src="identifier: _state [103583,103589]" dest="identifier: _state [42969,42975]"/>
  <match src="function_body [7260,7316]" dest="function_body [7788,7844]"/>
  <match src="identifier: D256 [7243,7247]" dest="identifier: D256 [7771,7775]"/>
  <match src="type_name [95891,95898]" dest="type_name [35277,35284]"/>
  <match src="{: { [4735,4736]" dest="{: { [5263,5264]"/>
  <match src="primitive_type [43301,43308]" dest="primitive_type [13398,13405]"/>
  <match src="): ) [101573,101574]" dest="): ) [40959,40960]"/>
  <match src="identifier: add [102300,102303]" dest="identifier: add [41686,41689]"/>
  <match src="call_struct_argument [44721,44745]" dest="call_struct_argument [14818,14842]"/>
  <match src="-: - [35338,35339]" dest="-: - [53050,53051]"/>
  <match src="function: function [53646,53654]" dest="function: function [21770,21778]"/>
  <match src="type_name [93531,93538]" dest="type_name [32917,32924]"/>
  <match src="visibility [91276,91284]" dest="visibility [30662,30670]"/>
  <match src="type_name [104757,104764]" dest="type_name [44143,44150]"/>
  <match src="(: ( [106008,106009]" dest="(: ( [69152,69153]"/>
  <match src="identifier: account [99422,99429]" dest="identifier: account [38808,38815]"/>
  <match src="function_definition [54119,54191]" dest="function_definition [22243,22315]"/>
  <match src="type_name [49601,49608]" dest="type_name [25984,25991]"/>
  <match src="type_cast_expression [99813,99823]" dest="type_cast_expression [39199,39209]"/>
  <match src="state_mutability [9593,9597]" dest="state_mutability [10121,10125]"/>
  <match src="call_struct_argument [8179,8217]" dest="call_struct_argument [8707,8745]"/>
  <match src="member_expression [81226,81236]" dest="member_expression [78974,78984]"/>
  <match src="visibility [30789,30797]" dest="visibility [48501,48509]"/>
  <match src="primitive_type [53092,53097]" dest="primitive_type [21216,21221]"/>
  <match src="}: } [46225,46226]" dest="}: } [16322,16323]"/>
  <match src="): ) [31906,31907]" dest="): ) [49618,49619]"/>
  <match src="call_argument [21926,21947]" dest="call_argument [63532,63553]"/>
  <match src="member_expression [92972,92987]" dest="member_expression [32358,32373]"/>
  <match src="): ) [29216,29217]" dest="): ) [46928,46929]"/>
  <match src="call_argument [31181,31200]" dest="call_argument [48893,48912]"/>
  <match src="[: [ [103003,103004]" dest="[: [ [42389,42390]"/>
  <match src="): ) [34760,34761]" dest="): ) [52472,52473]"/>
  <match src="function: function [94176,94184]" dest="function: function [33562,33570]"/>
  <match src="uint256: uint256 [41710,41717]" dest="uint256: uint256 [11807,11814]"/>
  <match src="identifier: self [9072,9076]" dest="identifier: self [9600,9604]"/>
  <match src="parameter [11925,11942]" dest="parameter [23226,23243]"/>
  <match src="identifier: add [98858,98861]" dest="identifier: add [38244,38247]"/>
  <match src="return_type_definition [46383,46400]" dest="return_type_definition [16480,16497]"/>
  <match src="primitive_type [96251,96258]" dest="primitive_type [35637,35644]"/>
  <match src="]: ] [92475,92476]" dest="]: ] [31861,31862]"/>
  <match src="binary_expression [35473,35483]" dest="binary_expression [53185,53195]"/>
  <match src="identifier: RPAREN [30539,30545]" dest="identifier: RPAREN [48251,48257]"/>
  <match src="(: ( [102303,102304]" dest="(: ( [41689,41690]"/>
  <match src="parameter [61936,61943]" dest="parameter [26991,26998]"/>
  <match src="function: function [96100,96108]" dest="function: function [35486,35494]"/>
  <match src="uint256: uint256 [42627,42634]" dest="uint256: uint256 [12724,12731]"/>
  <match src="uint256: uint256 [92559,92566]" dest="uint256: uint256 [31945,31952]"/>
  <match src="type_name [78795,78802]" dest="type_name [70313,70320]"/>
  <match src="struct_member [86232,86246]" dest="struct_member [28023,28037]"/>
  <match src="identifier: FOUR_BIT_MASK [35496,35509]" dest="identifier: FOUR_BIT_MASK [53208,53221]"/>
  <match src="): ) [61889,61890]" dest="): ) [26944,26945]"/>
  <match src="return_statement [45225,45259]" dest="return_statement [15322,15356]"/>
  <match src="(: ( [83126,83127]" dest="(: ( [58983,58984]"/>
  <match src="address: address [93531,93538]" dest="address: address [32917,32924]"/>
  <match src="type_name [54382,54389]" dest="type_name [22506,22513]"/>
  <match src="user_defined_type [15691,15698]" dest="user_defined_type [60252,60263]"/>
  <match src="function: function [97942,97950]" dest="function: function [37328,37336]"/>
  <match src="visibility [9473,9481]" dest="visibility [10001,10009]"/>
  <match src="bool: bool [84653,84657]" dest="bool: bool [73981,73985]"/>
  <match src="identifier: result [35466,35472]" dest="identifier: result [53178,53184]"/>
  <match src="expression_statement [102990,103035]" dest="expression_statement [42376,42421]"/>
  <match src="primitive_type [91834,91841]" dest="primitive_type [31220,31227]"/>
  <match src="(: ( [101369,101370]" dest="(: ( [40755,40756]"/>
  <match src="identifier: candidate [96259,96268]" dest="identifier: candidate [35645,35654]"/>
  <match src="type_name [42329,42336]" dest="type_name [12426,12433]"/>
  <match src=",: , [49663,49664]" dest=",: , [26046,26047]"/>
  <match src="identifier: length [34120,34126]" dest="identifier: length [51832,51838]"/>
  <match src=".: . [102558,102559]" dest=".: . [41944,41945]"/>
  <match src="primitive_type [32192,32198]" dest="primitive_type [49904,49910]"/>
  <match src="return_statement [90879,90893]" dest="return_statement [30265,30279]"/>
  <match src="type_name [87267,87282]" dest="type_name [29058,29073]"/>
  <match src=".: . [102080,102081]" dest=".: . [41466,41467]"/>
  <match src="parameter [103967,103984]" dest="parameter [43353,43370]"/>
  <match src="member_expression [93595,93631]" dest="member_expression [32981,33017]"/>
  <match src="expression_statement [102256,102307]" dest="expression_statement [41642,41693]"/>
  <match src="external: external [11504,11512]" dest="external: external [22805,22813]"/>
  <match src="call_expression [29749,29775]" dest="call_expression [47461,47487]"/>
  <match src="identifier: balance [92184,92191]" dest="identifier: balance [31570,31577]"/>
  <match src="identifier: msg [81850,81853]" dest="identifier: msg [72432,72435]"/>
  <match src="type_alias [90507,90514]" dest="type_alias [29893,29900]"/>
  <match src="parameter [11527,11534]" dest="parameter [22828,22835]"/>
  <match src="ternary_expression [10109,10134]" dest="ternary_expression [10637,10662]"/>
  <match src="identifier: FILE [63570,63574]" dest="identifier: FILE [81449,81453]"/>
  <match src="string [21869,21907]" dest="string [62515,62546]"/>
  <match src="}: } [6979,6980]" dest="}: } [7507,7508]"/>
  <match src="): ) [100861,100862]" dest="): ) [40247,40248]"/>
  <match src="uint256: uint256 [95066,95073]" dest="uint256: uint256 [34452,34459]"/>
  <match src="parameter [61885,61889]" dest="parameter [26940,26944]"/>
  <match src="struct_declaration [86562,86744]" dest="struct_declaration [28353,28535]"/>
  <match src="identifier: value [52187,52192]" dest="identifier: value [20311,20316]"/>
  <match src="function: function [103670,103678]" dest="function: function [43056,43064]"/>
  <match src="visibility [44010,44018]" dest="visibility [14107,14115]"/>
  <match src="): ) [29937,29938]" dest="): ) [47649,47650]"/>
  <match src="=: = [104315,104316]" dest="=: = [43701,43702]"/>
  <match src="state_mutability [52859,52863]" dest="state_mutability [20983,20987]"/>
  <match src="binary_expression [21926,21947]" dest="binary_expression [63532,63553]"/>
  <match src="identifier: _state [92972,92978]" dest="identifier: _state [32358,32364]"/>
  <match src="assembly_statement [89682,89746]" dest="assembly_statement [76872,76936]"/>
  <match src="identifier: a [2669,2670]" dest="identifier: a [3197,3198]"/>
  <match src="primitive_type [51492,51496]" dest="primitive_type [60911,60918]"/>
  <match src="): ) [89735,89736]" dest="): ) [76925,76926]"/>
  <match src="==: == [92639,92641]" dest="==: == [32025,32027]"/>
  <match src="identifier: State [97529,97534]" dest="identifier: State [36915,36920]"/>
  <match src="comment: /**      * ERC20 Interface      */ [90666,90700]" dest="comment: /**      * ERC20 Interface      */ [30052,30086]"/>
  <match src="primitive_type [96722,96729]" dest="primitive_type [36108,36115]"/>
  <match src="}: } [95958,95959]" dest="}: } [35344,35345]"/>
  <match src="]: ] [101199,101200]" dest="]: ] [40585,40586]"/>
  <match src="pragma_directive [61,94]" dest="pragma_directive [25,58]"/>
  <match src="member_expression [81707,81717]" dest="member_expression [79780,79790]"/>
  <match src="return: return [92687,92693]" dest="return: return [32073,32079]"/>
  <match src="(: ( [8711,8712]" dest="(: ( [9239,9240]"/>
  <match src="type_name [35843,35848]" dest="type_name [53555,53560]"/>
  <match src=",: , [9950,9951]" dest=",: , [10478,10479]"/>
  <match src="=: = [62730,62731]" dest="=: = [60340,60341]"/>
  <match src="address: address [21937,21944]" dest="address: address [63543,63550]"/>
  <match src="identifier: b [8662,8663]" dest="identifier: b [9190,9191]"/>
  <match src="]: ] [36437,36438]" dest="]: ] [54149,54150]"/>
  <match src="primitive_type [52162,52169]" dest="primitive_type [20286,20293]"/>
  <match src="identifier: account [26005,26012]" dest="identifier: account [55908,55915]"/>
  <match src="identifier: reason [28813,28819]" dest="identifier: reason [46525,46531]"/>
  <match src="function: function [100944,100952]" dest="function: function [40330,40338]"/>
  <match src="): ) [32597,32598]" dest="): ) [50309,50310]"/>
  <match src="type_cast_expression [36705,36736]" dest="type_cast_expression [54417,54448]"/>
  <match src="call_expression [71404,71471]" dest="call_expression [81754,81836]"/>
  <match src="identifier: mul [82556,82559]" dest="identifier: mul [72652,72655]"/>
  <match src="event_paramater [53269,53287]" dest="event_paramater [21393,21411]"/>
  <match src="member_expression [89484,89522]" dest="member_expression [76674,76712]"/>
  <match src="identifier: sub [92302,92305]" dest="identifier: sub [31688,31691]"/>
  <match src="): ) [19872,19873]" dest="): ) [64137,64138]"/>
  <match src="(: ( [65224,65225]" dest="(: ( [66553,66554]"/>
  <match src="identifier: pow [7331,7334]" dest="identifier: pow [7859,7862]"/>
  <match src="identifier: denominator [9893,9904]" dest="identifier: denominator [10421,10432]"/>
  <match src="returns: returns [8134,8141]" dest="returns: returns [8662,8669]"/>
  <match src="number_literal: 1 [81874,81875]" dest="number_literal: 1 [72456,72457]"/>
  <match src="indexed: indexed [79192,79199]" dest="indexed: indexed [78114,78121]"/>
  <match src="primitive_type [96025,96032]" dest="primitive_type [35411,35418]"/>
  <match src="(: ( [87207,87208]" dest="(: ( [28998,28999]"/>
  <match src="[: [ [101193,101194]" dest="[: [ [40579,40580]"/>
  <match src=".: . [91189,91190]" dest=".: . [30575,30576]"/>
  <match src="primitive_type [102730,102737]" dest="primitive_type [42116,42123]"/>
  <match src=",: , [53099,53100]" dest=",: , [21223,21224]"/>
  <match src="identifier: ASCII_ZERO [35927,35937]" dest="identifier: ASCII_ZERO [53639,53649]"/>
  <match src="identifier: z [36482,36483]" dest="identifier: z [54194,54195]"/>
  <match src="identifier: length [95000,95006]" dest="identifier: length [34386,34392]"/>
  <match src="identifier: balance [99745,99752]" dest="identifier: balance [39131,39138]"/>
  <match src="parameter [64805,64824]" dest="parameter [19656,19681]"/>
  <match src="contract: contract [88162,88170]" dest="contract: contract [75352,75360]"/>
  <match src="string [56276,56313]" dest="string [72780,72816]"/>
  <match src="number_literal: 1 [35956,35957]" dest="number_literal: 1 [53668,53669]"/>
  <match src="function_body [4075,4136]" dest="function_body [4603,4664]"/>
  <match src="external: external [54317,54325]" dest="external: external [22441,22449]"/>
  <match src="): ) [29558,29559]" dest="): ) [47270,47271]"/>
  <match src="identifier: a [4661,4662]" dest="identifier: a [5189,5190]"/>
  <match src="function: function [54362,54370]" dest="function: function [22486,22494]"/>
  <match src="type_name [64236,64243]" dest="type_name [80044,80051]"/>
  <match src="type_name [44290,44302]" dest="type_name [14387,14399]"/>
  <match src="call_argument [2064,2099]" dest="call_argument [2592,2627]"/>
  <match src="): ) [44992,44993]" dest="): ) [15089,15090]"/>
  <match src="identifier: value [8580,8585]" dest="identifier: value [9108,9113]"/>
  <match src="parameter [93436,93443]" dest="parameter [32822,32829]"/>
  <match src="}: } [6761,6762]" dest="}: } [7289,7290]"/>
  <match src="external: external [53664,53672]" dest="external: external [21788,21796]"/>
  <match src="address: address [52768,52775]" dest="address: address [20892,20899]"/>
  <match src="identifier: sender [79539,79545]" dest="identifier: sender [71077,71083]"/>
  <match src="[: [ [100686,100687]" dest="[: [ [40072,40073]"/>
  <match src="identifier: value [52696,52701]" dest="identifier: value [20820,20825]"/>
  <match src="uint256: uint256 [86657,86664]" dest="uint256: uint256 [28448,28455]"/>
  <match src="function_body [91166,91211]" dest="function_body [30552,30597]"/>
  <match src="[: [ [104522,104523]" dest="[: [ [43908,43909]"/>
  <match src="identifier: Require [48704,48711]" dest="identifier: Require [62478,62485]"/>
  <match src="binary_expression [19810,19833]" dest="binary_expression [64046,64069]"/>
  <match src="): ) [1972,1973]" dest="): ) [2500,2501]"/>
  <match src="if: if [51030,51032]" dest="if: if [64366,64368]"/>
  <match src=",: , [1273,1274]" dest=",: , [1801,1802]"/>
  <match src="event: event [53138,53143]" dest="event: event [21262,21267]"/>
  <match src="parameter [97901,97905]" dest="parameter [37287,37291]"/>
  <match src="contract_declaration [86748,87303]" dest="contract_declaration [28539,29094]"/>
  <match src="(: ( [102930,102931]" dest="(: ( [42316,42317]"/>
  <match src="uint256: uint256 [81185,81192]" dest="uint256: uint256 [62668,62675]"/>
  <match src="identifier: _state [98224,98230]" dest="identifier: _state [37610,37616]"/>
  <match src="private: private [34677,34684]" dest="private: private [52389,52396]"/>
  <match src="identifier: sub [791,794]" dest="identifier: sub [1319,1322]"/>
  <match src="identifier: GOVERNANCE_QUORUM [44728,44745]" dest="identifier: GOVERNANCE_QUORUM [14825,14842]"/>
  <match src="function_definition [45144,45265]" dest="function_definition [15241,15362]"/>
  <match src="(: ( [91133,91134]" dest="(: ( [30519,30520]"/>
  <match src="call_expression [80483,80529]" dest="call_expression [71578,71624]"/>
  <match src=".: . [80782,80783]" dest=".: . [71819,71820]"/>
  <match src="revert: revert [30846,30852]" dest="revert: revert [48558,48564]"/>
  <match src=".: . [98999,99000]" dest=".: . [38385,38386]"/>
  <match src="identifier: abi [30211,30214]" dest="identifier: abi [47923,47926]"/>
  <match src="primitive_type [419,426]" dest="primitive_type [947,954]"/>
  <match src="event: event [25636,25641]" dest="event: event [60695,60700]"/>
  <match src=",: , [28214,28215]" dest=",: , [45926,45927]"/>
  <match src="call_expression [8186,8217]" dest="call_expression [8714,8745]"/>
  <match src="type_name [86845,86852]" dest="type_name [28636,28643]"/>
  <match src="uint32: uint32 [53838,53844]" dest="uint32: uint32 [21962,21968]"/>
  <match src="if: if [28914,28916]" dest="if: if [46626,46628]"/>
  <match src="memory: memory [7504,7510]" dest="memory: memory [8032,8038]"/>
  <match src="function_definition [94176,94451]" dest="function_definition [33562,33837]"/>
  <match src="expression_statement [98804,98870]" dest="expression_statement [38190,38256]"/>
  <match src="primitive_type [41566,41573]" dest="primitive_type [11663,11670]"/>
  <match src="uint256: uint256 [79129,79136]" dest="uint256: uint256 [78067,78074]"/>
  <match src="variable_declaration [34863,34882]" dest="variable_declaration [52575,52594]"/>
  <match src="identifier: token1 [53710,53716]" dest="identifier: token1 [21834,21840]"/>
  <match src="identifier: balance [99335,99342]" dest="identifier: balance [38721,38728]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [68692,69372]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [59552,60232]"/>
  <match src="parameter [97973,97987]" dest="parameter [37359,37373]"/>
  <match src="): ) [92403,92404]" dest="): ) [31789,31790]"/>
  <match src="=: = [27418,27419]" dest="=: = [45130,45131]"/>
  <match src="false [97924,97929]" dest="false [37310,37315]"/>
  <match src="call_expression [101148,101233]" dest="call_expression [40534,40619]"/>
  <match src="type_cast_expression [35966,35987]" dest="type_cast_expression [53678,53699]"/>
  <match src="call_argument [35966,35987]" dest="call_argument [53678,53699]"/>
  <match src="identifier: amount [21813,21819]" dest="identifier: amount [63484,63490]"/>
  <match src="uint256: uint256 [91315,91322]" dest="uint256: uint256 [30701,30708]"/>
  <match src="block_statement [51082,51347]" dest="block_statement [64481,64677]"/>
  <match src="type_name [11678,11685]" dest="type_name [22979,22986]"/>
  <match src="parameter [44151,44158]" dest="parameter [14248,14255]"/>
  <match src="function: function [8424,8432]" dest="function: function [8952,8960]"/>
  <match src=".: . [46135,46136]" dest=".: . [16232,16233]"/>
  <match src="string [81144,81173]" dest="string [81318,81344]"/>
  <match src="identifier: from [13673,13677]" dest="identifier: from [24974,24978]"/>
  <match src="call_struct_argument [8557,8601]" dest="call_struct_argument [9085,9129]"/>
  <match src="): ) [81236,81237]" dest="): ) [78984,78985]"/>
  <match src="member_expression [80411,80603]" dest="member_expression [71545,71667]"/>
  <match src="): ) [99437,99438]" dest="): ) [38823,38824]"/>
  <match src="identifier: i [36125,36126]" dest="identifier: i [53837,53838]"/>
  <match src="primitive_type [104209,104216]" dest="primitive_type [43595,43602]"/>
  <match src="address: address [95544,95551]" dest="address: address [34930,34937]"/>
  <match src="visibility [42890,42897]" dest="visibility [12987,12994]"/>
  <match src="]: ] [101144,101145]" dest="]: ] [40530,40531]"/>
  <match src="): ) [94114,94115]" dest="): ) [33500,33501]"/>
  <match src="function_body [92877,93018]" dest="function_body [32263,32404]"/>
  <match src="(: ( [79346,79347]" dest="(: ( [78261,78262]"/>
  <match src="function_definition [98447,98570]" dest="function_definition [37833,37956]"/>
  <match src="identifier: initialized [86726,86737]" dest="identifier: initialized [28517,28528]"/>
  <match src="call_expression [50793,50815]" dest="call_expression [55443,55473]"/>
  <match src="private: private [65227,65234]" dest="private: private [67677,67684]"/>
  <match src="member_expression [98832,98857]" dest="member_expression [38218,38243]"/>
  <match src="member_expression [6734,6748]" dest="member_expression [7262,7276]"/>
  <match src="identifier: newImplementation [88992,89009]" dest="identifier: newImplementation [76182,76199]"/>
  <match src="call_argument [79347,79357]" dest="call_argument [78262,78272]"/>
  <match src="bytes32: bytes32 [32032,32039]" dest="bytes32: bytes32 [49744,49751]"/>
  <match src="primitive_type [28783,28790]" dest="primitive_type [46495,46502]"/>
  <match src="return_type_definition [92244,92261]" dest="return_type_definition [31630,31647]"/>
  <match src="}: } [95463,95464]" dest="}: } [34849,34850]"/>
  <match src="comment: /**      * Epoch      */ [93838,93862]" dest="comment: /**      * Epoch      */ [33224,33248]"/>
  <match src="call_argument [89103,89142]" dest="call_argument [76293,76332]"/>
  <match src="call_expression [70363,70418]" dest="call_expression [58708,58793]"/>
  <match src=",: , [48665,48666]" dest=",: , [62598,62599]"/>
  <match src="function_body [8534,8610]" dest="function_body [9062,9138]"/>
  <match src="primitive_type [30870,30876]" dest="primitive_type [48582,48588]"/>
  <match src="primitive_type [89418,89425]" dest="primitive_type [76608,76615]"/>
  <match src="constant: constant [42802,42810]" dest="constant: constant [12899,12907]"/>
  <match src="identifier: z [35528,35529]" dest="identifier: z [53240,53241]"/>
  <match src="member_expression [96598,96638]" dest="member_expression [35984,36024]"/>
  <match src="identifier: ratio [65697,65702]" dest="identifier: ratio [81762,81767]"/>
  <match src="primitive_type [13911,13918]" dest="primitive_type [25212,25219]"/>
  <match src="identifier: that [83640,83644]" dest="identifier: that [78814,78818]"/>
  <match src="[: [ [93610,93611]" dest="[: [ [32996,32997]"/>
  <match src="}: } [46217,46218]" dest="}: } [16314,16315]"/>
  <match src="number_literal: 0 [33842,33843]" dest="number_literal: 0 [51554,51555]"/>
  <match src="identifier: _state [91183,91189]" dest="identifier: _state [30569,30575]"/>
  <match src="function_definition [91113,91211]" dest="function_definition [30499,30597]"/>
  <match src="identifier: Vote [86523,86527]" dest="identifier: Vote [28314,28318]"/>
  <match src="identifier: statusOf [93033,93041]" dest="identifier: statusOf [32419,32427]"/>
  <match src="): ) [1700,1701]" dest="): ) [2228,2229]"/>
  <match src=",: , [99674,99675]" dest=",: , [39060,39061]"/>
  <match src="(: ( [103203,103204]" dest="(: ( [42589,42590]"/>
  <match src=".: . [95172,95173]" dest=".: . [34558,34559]"/>
  <match src="private: private [42337,42344]" dest="private: private [12434,12441]"/>
  <match src="view: view [94272,94276]" dest="view: view [33658,33662]"/>
  <match src="): ) [45897,45898]" dest="): ) [15994,15995]"/>
  <match src="type_name [5680,5687]" dest="type_name [6208,6215]"/>
  <match src="visibility [95085,95091]" dest="visibility [34471,34477]"/>
  <match src=",: , [31155,31156]" dest=",: , [48867,48868]"/>
  <match src="{: { [31522,31523]" dest="{: { [49234,49235]"/>
  <match src="identifier: add [99285,99288]" dest="identifier: add [38671,38674]"/>
  <match src="(: ( [90742,90743]" dest="(: ( [30128,30129]"/>
  <match src="modifier_definition [106130,106343]" dest="modifier_definition [69274,69487]"/>
  <match src="state_mutability [9355,9359]" dest="state_mutability [9883,9887]"/>
  <match src="): ) [13067,13068]" dest="): ) [24368,24369]"/>
  <match src="identifier: result [36420,36426]" dest="identifier: result [54132,54138]"/>
  <match src="identifier: div [8433,8436]" dest="identifier: div [8961,8964]"/>
  <match src="(: ( [92127,92128]" dest="(: ( [31513,31514]"/>
  <match src="uint256: uint256 [42467,42474]" dest="uint256: uint256 [12564,12571]"/>
  <match src="primitive_type [795,802]" dest="primitive_type [1323,1330]"/>
  <match src="identifier: char [35487,35491]" dest="identifier: char [53199,53203]"/>
  <match src="external: external [52792,52800]" dest="external: external [20916,20924]"/>
  <match src="unary_expression [106189,106221]" dest="unary_expression [69333,69365]"/>
  <match src="identifier: Context [15691,15698]" dest="identifier: Comptroller [60252,60263]"/>
  <match src="member_expression [103398,103432]" dest="member_expression [42784,42818]"/>
  <match src="primitive_type [2605,2612]" dest="primitive_type [3133,3140]"/>
  <match src="identifier: value [52625,52630]" dest="identifier: value [20749,20754]"/>
  <match src="state_mutability [11664,11668]" dest="state_mutability [22965,22969]"/>
  <match src="identifier: abi [89103,89106]" dest="identifier: abi [76293,76296]"/>
  <match src="(: ( [82084,82085]" dest="(: ( [79986,79987]"/>
  <match src="identifier: BASE [9648,9652]" dest="identifier: BASE [10176,10180]"/>
  <match src="indexed: indexed [78863,78870]" dest="indexed: indexed [70381,70388]"/>
  <match src="(: ( [53924,53925]" dest="(: ( [22048,22049]"/>
  <match src="binary_expression [33833,33843]" dest="binary_expression [51545,51555]"/>
  <match src="return_type_definition [52565,52579]" dest="return_type_definition [20689,20703]"/>
  <match src="binary_expression [36446,36463]" dest="binary_expression [54158,54175]"/>
  <match src="(: ( [8142,8143]" dest="(: ( [8670,8671]"/>
  <match src="call_argument [92712,92730]" dest="call_argument [32098,32116]"/>
  <match src="identifier: amount1In [53375,53384]" dest="identifier: amount1In [21499,21508]"/>
  <match src="primitive_type [13657,13664]" dest="primitive_type [24958,24965]"/>
  <match src="identifier: State [87314,87319]" dest="identifier: State [29105,29110]"/>
  <match src="}: } [83691,83692]" dest="}: } [73019,73020]"/>
  <match src="array_access [104507,104531]" dest="array_access [43893,43917]"/>
  <match src="parameter [92787,92802]" dest="parameter [32173,32188]"/>
  <match src="[: [ [101817,101818]" dest="[: [ [41203,41204]"/>
  <match src="identifier: amount [50939,50945]" dest="identifier: amount [55646,55652]"/>
  <match src="): ) [35371,35372]" dest="): ) [53083,53084]"/>
  <match src="view: view [91028,91032]" dest="view: view [30414,30418]"/>
  <match src="primitive_type [100214,100220]" dest="primitive_type [39600,39606]"/>
  <match src="): ) [7770,7771]" dest="): ) [8298,8299]"/>
  <match src="function: function [44956,44964]" dest="function: function [15053,15061]"/>
  <match src="}: } [99444,99445]" dest="}: } [38830,38831]"/>
  <match src="): ) [46079,46080]" dest="): ) [16176,16177]"/>
  <match src="identifier: coupons [101186,101193]" dest="identifier: coupons [40572,40579]"/>
  <match src="type_name [100559,100566]" dest="type_name [39945,39952]"/>
  <match src="parameter [94797,94804]" dest="parameter [34183,34190]"/>
  <match src="function: function [93024,93032]" dest="function: function [32410,32418]"/>
  <match src="variable_declaration_statement [71285,71356]" dest="variable_declaration_statement [67332,67370]"/>
  <match src="identifier: totalDebt [92306,92315]" dest="identifier: totalDebt [31692,31701]"/>
  <match src="): ) [92612,92613]" dest="): ) [31998,31999]"/>
  <match src="visibility [11504,11512]" dest="visibility [22805,22813]"/>
  <match src="[: [ [103861,103862]" dest="[: [ [43247,43248]"/>
  <match src=".: . [96626,96627]" dest=".: . [36012,36013]"/>
  <match src="call_argument [100711,100717]" dest="call_argument [40097,40103]"/>
  <match src="function_definition [88735,88764]" dest="function_definition [75925,75954]"/>
  <match src="member_expression [44891,44903]" dest="member_expression [14988,15000]"/>
  <match src="external: external [79599,79607]" dest="external: external [71137,71145]"/>
  <match src="identifier: BASE [6211,6215]" dest="identifier: BASE [6739,6743]"/>
  <match src="memory: memory [8978,8984]" dest="memory: memory [9506,9512]"/>
  <match src="returns: returns [52996,53003]" dest="returns: returns [21120,21127]"/>
  <match src="=&gt;: =&gt; [86697,86699]" dest="=&gt;: =&gt; [28488,28490]"/>
  <match src="string_literal [51261,51304]" dest="string_literal [64614,64652]"/>
  <match src="(: ( [7758,7759]" dest="(: ( [8286,8287]"/>
  <match src="): ) [12340,12341]" dest="): ) [23641,23642]"/>
  <match src="=: = [27512,27513]" dest="=: = [45224,45225]"/>
  <match src="[: [ [104334,104335]" dest="[: [ [43720,43721]"/>
  <match src="uint256: uint256 [96159,96166]" dest="uint256: uint256 [35545,35552]"/>
  <match src="call_expression [8359,8411]" dest="call_expression [8887,8939]"/>
  <match src="call_argument [82179,82217]" dest="call_argument [78301,78326]"/>
  <match src="call_argument [104383,104389]" dest="call_argument [43769,43775]"/>
  <match src=".: . [103645,103646]" dest=".: . [43031,43032]"/>
  <match src="function: function [8232,8240]" dest="function: function [8760,8768]"/>
  <match src="state_mutability [9186,9190]" dest="state_mutability [9714,9718]"/>
  <match src="call_argument [6571,6582]" dest="call_argument [7099,7110]"/>
  <match src="parameter [50931,50945]" dest="parameter [55638,55652]"/>
  <match src="{: { [96775,96776]" dest="{: { [36161,36162]"/>
  <match src=".: . [99589,99590]" dest=".: . [38975,38976]"/>
  <match src="binary_expression [85194,85202]" dest="binary_expression [74522,74530]"/>
  <match src="=: = [43343,43344]" dest="=: = [13440,13441]"/>
  <match src="view: view [92412,92416]" dest="view: view [31798,31802]"/>
  <match src="[: [ [95165,95166]" dest="[: [ [34551,34552]"/>
  <match src="address: address [52060,52067]" dest="address: address [20184,20191]"/>
  <match src="expression_statement [81995,82062]" dest="expression_statement [80898,80958]"/>
  <match src="member_expression [82637,82647]" dest="member_expression [62823,62833]"/>
  <match src="function_body [93760,93832]" dest="function_body [33146,33218]"/>
  <match src="identifier: outstanding [101341,101352]" dest="identifier: outstanding [40727,40738]"/>
  <match src="visibility [77312,77320]" dest="visibility [17629,17637]"/>
  <match src="address: address [54391,54398]" dest="address: address [22515,22522]"/>
  <match src="return_type_definition [92855,92872]" dest="return_type_definition [32241,32258]"/>
  <match src="uint256: uint256 [33382,33389]" dest="uint256: uint256 [51094,51101]"/>
  <match src="&lt;: &lt; [36678,36679]" dest="&lt;: &lt; [54390,54391]"/>
  <match src="type_name [54068,54075]" dest="type_name [22192,22199]"/>
  <match src="identifier: Require [83517,83524]" dest="identifier: Require [78288,78295]"/>
  <match src="call_expression [94336,94444]" dest="call_expression [33722,33830]"/>
  <match src="parameter [99488,99503]" dest="parameter [38874,38889]"/>
  <match src="}: } [93371,93372]" dest="}: } [32757,32758]"/>
  <match src="view: view [53977,53981]" dest="view: view [22101,22105]"/>
  <match src="uint256: uint256 [33747,33754]" dest="uint256: uint256 [51459,51466]"/>
  <match src="mapping: mapping [86681,86688]" dest="mapping: mapping [28472,28479]"/>
  <match src="call_argument [30272,30276]" dest="call_argument [47984,47988]"/>
  <match src="}: } [98569,98570]" dest="}: } [37955,37956]"/>
  <match src="identifier: self [9245,9249]" dest="identifier: self [9773,9777]"/>
  <match src="identifier: c [2052,2053]" dest="identifier: c [2580,2581]"/>
  <match src=",: , [29852,29853]" dest=",: , [47564,47565]"/>
  <match src="(: ( [98915,98916]" dest="(: ( [38301,38302]"/>
  <match src="type_name [64941,64945]" dest="type_name [67753,67757]"/>
  <match src="identifier: sender [78619,78625]" dest="identifier: sender [63182,63188]"/>
  <match src="expression_statement [106163,106285]" dest="expression_statement [69307,69429]"/>
  <match src="member_expression [29626,29642]" dest="member_expression [47338,47354]"/>
  <match src="call_expression [80154,80168]" dest="call_expression [59527,59541]"/>
  <match src="primitive_type [76657,76664]" dest="primitive_type [56893,56900]"/>
  <match src=",: , [31463,31464]" dest=",: , [49175,49176]"/>
  <match src="(: ( [5989,5990]" dest="(: ( [6517,6518]"/>
  <match src="parameter [20399,20413]" dest="parameter [59098,59112]"/>
  <match src="member_expression [102592,102634]" dest="member_expression [41978,42020]"/>
  <match src="uint256: uint256 [38220,38227]" dest="uint256: uint256 [63840,63847]"/>
  <match src="member_expression [94336,94397]" dest="member_expression [33722,33783]"/>
  <match src="parameter [53802,53818]" dest="parameter [21926,21942]"/>
  <match src="identifier: Locked [105770,105776]" dest="identifier: Locked [68914,68920]"/>
  <match src="visibility [50952,50958]" dest="visibility [62255,62261]"/>
  <match src="string_literal [19090,19129]" dest="string_literal [70766,70787]"/>
  <match src="block_statement [28340,28729]" dest="block_statement [46052,46441]"/>
  <match src="): ) [101635,101636]" dest="): ) [41021,41022]"/>
  <match src="string [66549,66558]" dest="string [72377,72408]"/>
  <match src="uint256: uint256 [10013,10020]" dest="uint256: uint256 [10541,10548]"/>
  <match src="function_body [100250,100461]" dest="function_body [39636,39847]"/>
  <match src="]: ] [102616,102617]" dest="]: ] [42002,42003]"/>
  <match src="identifier: stringify [28613,28622]" dest="identifier: stringify [46325,46334]"/>
  <match src="identifier: amount [49733,49739]" dest="identifier: amount [26116,26122]"/>
  <match src="identifier: candidate [103498,103507]" dest="identifier: candidate [42884,42893]"/>
  <match src="(: ( [78794,78795]" dest="(: ( [70312,70313]"/>
  <match src="for: for [34234,34237]" dest="for: for [51946,51949]"/>
  <match src="identifier: reason [89049,89055]" dest="identifier: reason [76239,76245]"/>
  <match src="return_type_definition [9368,9382]" dest="return_type_definition [9896,9910]"/>
  <match src="}: } [97826,97827]" dest="}: } [37212,37213]"/>
  <match src="primitive_type [29444,29451]" dest="primitive_type [47156,47163]"/>
  <match src="array_access [103805,103833]" dest="array_access [43191,43219]"/>
  <match src="primitive_type [806,813]" dest="primitive_type [1334,1341]"/>
  <match src="call_argument [31861,31867]" dest="call_argument [49573,49579]"/>
  <match src="[: [ [93125,93126]" dest="[: [ [32511,32512]"/>
  <match src="identifier: value [79547,79552]" dest="identifier: value [71085,71090]"/>
  <match src="{: { [78489,78490]" dest="{: { [70212,70213]"/>
  <match src="parameter [73382,73396]" dest="parameter [83312,83326]"/>
  <match src="uint256: uint256 [5738,5745]" dest="uint256: uint256 [6266,6273]"/>
  <match src="identifier: epochs [102997,103003]" dest="identifier: epochs [42383,42389]"/>
  <match src="identifier: getInitialStakeMultiple [80493,80516]" dest="identifier: getInitialStakeMultiple [71598,71621]"/>
  <match src="call_expression [8551,8603]" dest="call_expression [9079,9131]"/>
  <match src="identifier: _state [102530,102536]" dest="identifier: _state [41916,41922]"/>
  <match src=",: , [53110,53111]" dest=",: , [21234,21235]"/>
  <match src="identifier: D256 [64813,64817]" dest="identifier: D256 [19664,19668]"/>
  <match src="(: ( [97718,97719]" dest="(: ( [37104,37105]"/>
  <match src=",: , [81507,81508]" dest=",: , [71721,71722]"/>
  <match src="member_expression [83632,83644]" dest="member_expression [78806,78818]"/>
  <match src="identifier: totalDebt [91903,91912]" dest="identifier: totalDebt [31289,31298]"/>
  <match src="function_body [88964,89244]" dest="function_body [76154,76434]"/>
  <match src="primitive_type [1691,1698]" dest="primitive_type [2219,2226]"/>
  <match src="}: } [4135,4136]" dest="}: } [4663,4664]"/>
  <match src="mapping: mapping [87148,87155]" dest="mapping: mapping [28939,28946]"/>
  <match src="): ) [95368,95369]" dest="): ) [34754,34755]"/>
  <match src="==: == [80425,80427]" dest="==: == [71559,71561]"/>
  <match src="=: = [41331,41332]" dest="=: = [11428,11429]"/>
  <match src="identifier: totalRewarded [70300,70313]" dest="identifier: balanceCheck [58649,58661]"/>
  <match src="member_expression [100294,100309]" dest="member_expression [39680,39695]"/>
  <match src="(: ( [91235,91236]" dest="(: ( [30621,30622]"/>
  <match src="address: address [47970,47977]" dest="address: address [55704,55711]"/>
  <match src="identifier: candidate [104813,104822]" dest="identifier: candidate [44199,44208]"/>
  <match src="(: ( [92252,92253]" dest="(: ( [31638,31639]"/>
  <match src="using_directive [15713,15740]" dest="using_directive [60277,60304]"/>
  <match src="identifier: z [36308,36309]" dest="identifier: z [54020,54021]"/>
  <match src="visibility [6268,6276]" dest="visibility [6796,6804]"/>
  <match src="): ) [31888,31889]" dest="): ) [49600,49601]"/>
  <match src="type_name [6433,6437]" dest="type_name [6961,6965]"/>
  <match src="state_mutability [1312,1316]" dest="state_mutability [1840,1844]"/>
  <match src="uint256: uint256 [86038,86045]" dest="uint256: uint256 [27829,27836]"/>
  <match src="{: { [86202,86203]" dest="{: { [27993,27994]"/>
  <match src="uint256: uint256 [102479,102486]" dest="uint256: uint256 [41865,41872]"/>
  <match src="view: view [93892,93896]" dest="view: view [33278,33282]"/>
  <match src="member_expression [48634,48646]" dest="member_expression [62558,62570]"/>
  <match src="array_access [93595,93619]" dest="array_access [32981,33005]"/>
  <match src="public: public [93415,93421]" dest="public: public [32801,32807]"/>
  <match src="array_access [103544,103572]" dest="array_access [42930,42958]"/>
  <match src="&quot;: &quot; [22447,22448]" dest="&quot;: &quot; [62606,62607]"/>
  <match src="identifier: self [7347,7351]" dest="identifier: self [7875,7879]"/>
  <match src="identifier: add [99374,99377]" dest="identifier: add [38760,38763]"/>
  <match src="): ) [7542,7543]" dest="): ) [8070,8071]"/>
  <match src="identifier: div [94373,94376]" dest="identifier: div [33759,33762]"/>
  <match src="{: { [32868,32869]" dest="{: { [50580,50581]"/>
  <match src="call_expression [92694,92731]" dest="call_expression [32080,32117]"/>
  <match src="parameter [9315,9328]" dest="parameter [9843,9856]"/>
  <match src="call_argument [99422,99429]" dest="call_argument [38808,38815]"/>
  <match src="member_expression [75678,75711]" dest="member_expression [61392,61421]"/>
  <match src="identifier: encodePacked [29630,29642]" dest="identifier: encodePacked [47342,47354]"/>
  <match src="pure: pure [28310,28314]" dest="pure: pure [46022,46026]"/>
  <match src="function: function [103082,103090]" dest="function: function [42468,42476]"/>
  <match src="type_name [90854,90860]" dest="type_name [30240,30246]"/>
  <match src="function: function [8616,8624]" dest="function: function [9144,9152]"/>
  <match src="call_argument [4753,4759]" dest="call_argument [5281,5287]"/>
  <match src="uint256: uint256 [47767,47774]" dest="uint256: uint256 [60389,60396]"/>
  <match src="function_definition [22995,23096]" dest="function_definition [55875,56140]"/>
  <match src=".: . [45995,45996]" dest=".: . [16092,16093]"/>
  <match src="parameter [7353,7362]" dest="parameter [7881,7890]"/>
  <match src=".: . [104590,104591]" dest=".: . [43976,43977]"/>
  <match src="identifier: sender [79728,79734]" dest="identifier: sender [71275,71281]"/>
  <match src="function_definition [92496,92755]" dest="function_definition [31882,32141]"/>
  <match src="expression_statement [103161,103206]" dest="expression_statement [42547,42592]"/>
  <match src="call_argument [80913,80923]" dest="call_argument [72968,72978]"/>
  <match src="identifier: owner [93678,93683]" dest="identifier: owner [33064,33069]"/>
  <match src="uint: uint [54210,54214]" dest="uint: uint [22334,22338]"/>
  <match src="member_expression [83095,83107]" dest="member_expression [58682,58694]"/>
  <match src="visibility [53664,53672]" dest="visibility [21788,21796]"/>
  <match src="call_expression [104571,104616]" dest="call_expression [43957,44002]"/>
  <match src="identifier: value [79592,79597]" dest="identifier: value [71130,71135]"/>
  <match src="address: address [53444,53451]" dest="address: address [21568,21575]"/>
  <match src="parameter [53991,53995]" dest="parameter [22115,22119]"/>
  <match src="function_body [65265,65908]" dest="function_body [66589,67027]"/>
  <match src="internal: internal [99920,99928]" dest="internal: internal [39306,39314]"/>
  <match src="pure: pure [7389,7393]" dest="pure: pure [7917,7921]"/>
  <match src="view: view [95377,95381]" dest="view: view [34763,34767]"/>
  <match src="identifier: State [107047,107052]" dest="identifier: State [82633,82638]"/>
  <match src=".: . [83128,83129]" dest=".: . [58985,58986]"/>
  <match src="(: ( [35147,35148]" dest="(: ( [52859,52860]"/>
  <match src="call_expression [30211,30567]" dest="call_expression [47923,48279]"/>
  <match src="address: address [97620,97627]" dest="address: address [37006,37013]"/>
  <match src="expression_statement [34950,34986]" dest="expression_statement [52662,52698]"/>
  <match src="return_type_definition [7234,7255]" dest="return_type_definition [7762,7783]"/>
  <match src="identifier: totalBonded [82587,82598]" dest="identifier: totalBonded [72675,72686]"/>
  <match src="identifier: name [52209,52213]" dest="identifier: name [20333,20337]"/>
  <match src="return_statement [92445,92484]" dest="return_statement [31831,31870]"/>
  <match src=",: , [79425,79426]" dest=",: , [70988,70989]"/>
  <match src="identifier: amount [21028,21034]" dest="identifier: amount [56178,56184]"/>
  <match src="call_argument [32362,32368]" dest="call_argument [50074,50080]"/>
  <match src="identifier: _state [98683,98689]" dest="identifier: _state [38069,38075]"/>
  <match src="type_name [103509,103516]" dest="type_name [42895,42902]"/>
  <match src="struct_member [86943,86958]" dest="struct_member [28734,28749]"/>
  <match src="return_type_definition [54089,54113]" dest="return_type_definition [22213,22237]"/>
  <match src=",: , [29140,29141]" dest=",: , [46852,46853]"/>
  <match src="call_argument [79468,79478]" dest="call_argument [71031,71041]"/>
  <match src="function_definition [95019,95199]" dest="function_definition [34405,34585]"/>
  <match src="visibility [26436,26444]" dest="visibility [55654,55662]"/>
  <match src="(: ( [95984,95985]" dest="(: ( [35370,35371]"/>
  <match src="bool: bool [9496,9500]" dest="bool: bool [10024,10028]"/>
  <match src="internal: internal [104002,104010]" dest="internal: internal [43388,43396]"/>
  <match src=".: . [93601,93602]" dest=".: . [32987,32988]"/>
  <match src="string_literal [19934,19974]" dest="string_literal [56738,56768]"/>
  <match src="returns: returns [92244,92251]" dest="returns: returns [31630,31637]"/>
  <match src="(: ( [91041,91042]" dest="(: ( [30427,30428]"/>
  <match src="function_body [45066,45138]" dest="function_body [15163,15235]"/>
  <match src="[: [ [100309,100310]" dest="[: [ [39695,39696]"/>
  <match src="identifier: D256 [8325,8329]" dest="identifier: D256 [8853,8857]"/>
  <match src="bytes32: bytes32 [35609,35616]" dest="bytes32: bytes32 [53321,53328]"/>
  <match src="private: private [64788,64795]" dest="private: private [19718,19725]"/>
  <match src="identifier: stringifyTruncated [29114,29132]" dest="identifier: stringifyTruncated [46826,46844]"/>
  <match src="uint256: uint256 [101013,101020]" dest="uint256: uint256 [40399,40406]"/>
  <match src="{: { [104269,104270]" dest="{: { [43655,43656]"/>
  <match src="if: if [92887,92889]" dest="if: if [32273,32275]"/>
  <match src="(: ( [19729,19730]" dest="(: ( [63910,63911]"/>
  <match src="): ) [93057,93058]" dest="): ) [32443,32444]"/>
  <match src="type_name [95051,95058]" dest="type_name [34437,34444]"/>
  <match src="identifier: payloadC [31267,31275]" dest="identifier: payloadC [48979,48987]"/>
  <match src=".: . [44714,44715]" dest=".: . [14811,14812]"/>
  <match src="variable_declaration_statement [65661,65792]" dest="variable_declaration_statement [67725,67786]"/>
  <match src="identifier: amount [98483,98489]" dest="identifier: amount [37869,37875]"/>
  <match src="function_body [7954,8016]" dest="function_body [8482,8544]"/>
  <match src="primitive_type [101738,101745]" dest="primitive_type [41124,41131]"/>
  <match src="internal: internal [104466,104474]" dest="internal: internal [43852,43860]"/>
  <match src="identifier: i [7573,7574]" dest="identifier: i [8101,8102]"/>
  <match src="string: string [3261,3267]" dest="string: string [3789,3795]"/>
  <match src="identifier: couponsExpiration [94743,94760]" dest="identifier: couponsExpiration [34129,34146]"/>
  <match src="returns: returns [6500,6507]" dest="returns: returns [7028,7035]"/>
  <match src=".: . [7294,7295]" dest=".: . [7822,7823]"/>
  <match src="number_literal: 0x3e [27646,27650]" dest="number_literal: 0x3e [45358,45362]"/>
  <match src="primitive_type [29425,29429]" dest="primitive_type [47137,47141]"/>
  <match src="(: ( [82007,82008]" dest="(: ( [80910,80911]"/>
  <match src="): ) [105750,105751]" dest="): ) [68894,68895]"/>
  <match src="return_type_definition [44281,44310]" dest="return_type_definition [14378,14407]"/>
  <match src="identifier: token [82873,82878]" dest="identifier: candidate [80868,80877]"/>
  <match src="call_expression [32503,32522]" dest="call_expression [50215,50234]"/>
  <match src="member_expression [7122,7136]" dest="member_expression [7650,7664]"/>
  <match src="primitive_type [52679,52686]" dest="primitive_type [20803,20810]"/>
  <match src="identifier: start [86240,86245]" dest="identifier: start [28031,28036]"/>
  <match src="parameter [94007,94014]" dest="parameter [33393,33400]"/>
  <match src="function_definition [79566,79887]" dest="function_definition [71104,71412]"/>
  <match src="state_mutability [95100,95104]" dest="state_mutability [34486,34490]"/>
  <match src="uint: uint [53255,53259]" dest="uint: uint [21379,21383]"/>
  <match src="returns: returns [92142,92149]" dest="returns: returns [31528,31535]"/>
  <match src="memory: memory [7702,7708]" dest="memory: memory [8230,8236]"/>
  <match src="call_argument [31651,31675]" dest="call_argument [49363,49387]"/>
  <match src="): ) [97752,97753]" dest="): ) [37138,37139]"/>
  <match src="identifier: payloadB [30504,30512]" dest="identifier: payloadB [48216,48224]"/>
  <match src="variable_declaration_statement [92578,92614]" dest="variable_declaration_statement [31964,32000]"/>
  <match src="identifier: a [1688,1689]" dest="identifier: a [2216,2217]"/>
  <match src="bytes32: bytes32 [32796,32803]" dest="bytes32: bytes32 [50508,50515]"/>
  <match src="identifier: BASE [6755,6759]" dest="identifier: BASE [7283,7287]"/>
  <match src="number_literal: 32 [33093,33095]" dest="number_literal: 32 [50805,50807]"/>
  <match src="function_definition [100467,100938]" dest="function_definition [39853,40324]"/>
  <match src="(: ( [98861,98862]" dest="(: ( [38247,38248]"/>
  <match src="type_name [87068,87080]" dest="type_name [28859,28871]"/>
  <match src="returns: returns [91306,91313]" dest="returns: returns [30692,30699]"/>
  <match src="(: ( [96697,96698]" dest="(: ( [36083,36084]"/>
  <match src="identifier: _state [103544,103550]" dest="identifier: _state [42930,42936]"/>
  <match src="identifier: msg [10987,10990]" dest="identifier: msg [64383,64386]"/>
  <match src="{: { [46401,46402]" dest="{: { [16498,16499]"/>
  <match src="identifier: msg [77107,77110]" dest="identifier: msg [82950,82953]"/>
  <match src="internal: internal [817,825]" dest="internal: internal [1345,1353]"/>
  <match src="inheritance_specifier [105557,105564]" dest="inheritance_specifier [68701,68708]"/>
  <match src="{: { [15707,15708]" dest="{: { [60271,60272]"/>
  <match src="view: view [90932,90936]" dest="view: view [30318,30322]"/>
  <match src="visibility [45907,45915]" dest="visibility [16004,16012]"/>
  <match src="): ) [78893,78894]" dest="): ) [70411,70412]"/>
  <match src="inheritance_specifier [107066,107077]" dest="inheritance_specifier [77667,77678]"/>
  <match src="call_argument [19748,19749]" dest="call_argument [63942,63943]"/>
  <match src="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [88545,88677]" dest="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [75735,75867]"/>
  <match src="call_expression [83191,83204]" dest="call_expression [58798,58815]"/>
  <match src="): ) [83276,83277]" dest="): ) [58880,58881]"/>
  <match src="function_definition [96651,96824]" dest="function_definition [36037,36210]"/>
  <match src="call_argument [29133,29139]" dest="call_argument [46845,46851]"/>
  <match src="=: = [96735,96736]" dest="=: = [36121,36122]"/>
  <match src="event_definition [79028,79156]" dest="event_definition [70418,70547]"/>
  <match src="private: private [43041,43048]" dest="private: private [13138,13145]"/>
  <match src=",: , [53818,53819]" dest=",: , [21942,21943]"/>
  <match src="identifier: currentLock [104493,104504]" dest="identifier: currentLock [43879,43890]"/>
  <match src="expression_statement [98200,98258]" dest="expression_statement [37586,37644]"/>
  <match src="): ) [104615,104616]" dest="): ) [44001,44002]"/>
  <match src="function: function [8937,8945]" dest="function: function [9465,9473]"/>
  <match src="&lt;: &lt; [35165,35166]" dest="&lt;: &lt; [52877,52878]"/>
  <match src="primitive_type [27534,27540]" dest="primitive_type [45246,45252]"/>
  <match src="(: ( [99288,99289]" dest="(: ( [38674,38675]"/>
  <match src="internal: internal [46467,46475]" dest="internal: internal [16564,16572]"/>
  <match src="call_argument [19926,19932]" dest="call_argument [56730,56736]"/>
  <match src="type_name [92521,92528]" dest="type_name [31907,31914]"/>
  <match src="uint256: uint256 [71512,71519]" dest="uint256: uint256 [66730,66737]"/>
  <match src="visibility [92021,92027]" dest="visibility [31407,31413]"/>
  <match src="): ) [81868,81869]" dest="): ) [72450,72451]"/>
  <match src="primitive_type [86689,86696]" dest="primitive_type [28480,28487]"/>
  <match src="primitive_type [79217,79224]" dest="primitive_type [60942,60949]"/>
  <match src="identifier: div [3235,3238]" dest="identifier: div [3763,3766]"/>
  <match src="call_expression [9235,9253]" dest="call_expression [9763,9781]"/>
  <match src="(: ( [46366,46367]" dest="(: ( [16463,16464]"/>
  <match src="comment: /**      * Governance      */ [95470,95499]" dest="comment: /**      * Governance      */ [34856,34885]"/>
  <match src="parameter [30664,30676]" dest="parameter [48376,48388]"/>
  <match src="function_body [91538,91584]" dest="function_body [30924,30970]"/>
  <match src="visibility [84630,84638]" dest="visibility [73958,73966]"/>
  <match src="private: private [23206,23213]" dest="private: private [66581,66588]"/>
  <match src="uint256: uint256 [28829,28836]" dest="uint256: uint256 [46541,46548]"/>
  <match src="parameter [96251,96268]" dest="parameter [35637,35654]"/>
  <match src=".: . [100756,100757]" dest=".: . [40142,40143]"/>
  <match src="uint256: uint256 [79240,79247]" dest="uint256: uint256 [82837,82844]"/>
  <match src="uint256: uint256 [99182,99189]" dest="uint256: uint256 [38568,38575]"/>
  <match src="parameter [97867,97881]" dest="parameter [37253,37267]"/>
  <match src=".: . [99366,99367]" dest=".: . [38752,38753]"/>
  <match src="identifier: value [79225,79230]" dest="identifier: value [60950,60955]"/>
  <match src="primitive_type [77351,77358]" dest="primitive_type [17552,17559]"/>
  <match src="assignment_expression [103215,103259]" dest="assignment_expression [42601,42645]"/>
  <match src="}: } [6769,6770]" dest="}: } [7297,7298]"/>
  <match src="{: { [99573,99574]" dest="{: { [38959,38960]"/>
  <match src="(: ( [64120,64121]" dest="(: ( [67951,67952]"/>
  <match src="array_access [99217,99241]" dest="array_access [38603,38627]"/>
  <match src="function_definition [92761,93018]" dest="function_definition [32147,32404]"/>
  <match src="struct_member [86919,86934]" dest="struct_member [28710,28725]"/>
  <match src="uint256: uint256 [51069,51076]" dest="uint256: uint256 [64459,64466]"/>
  <match src="identifier: candidate [96203,96212]" dest="identifier: candidate [35589,35598]"/>
  <match src="type_name [30686,30693]" dest="type_name [48398,48405]"/>
  <match src="identifier: value [8595,8600]" dest="identifier: value [9123,9128]"/>
  <match src="&quot;: &quot; [2098,2099]" dest="&quot;: &quot; [2626,2627]"/>
  <match src="call_expression [81323,81362]" dest="call_expression [72112,72199]"/>
  <match src="): ) [93155,93156]" dest="): ) [32541,32542]"/>
  <match src="address: address [25997,26004]" dest="address: address [55900,55907]"/>
  <match src="parameter [53632,53639]" dest="parameter [21756,21763]"/>
  <match src="identifier: encodePacked [28410,28422]" dest="identifier: encodePacked [46122,46134]"/>
  <match src="variable_declaration_statement [34239,34258]" dest="variable_declaration_statement [51951,51970]"/>
  <match src="uint256: uint256 [45673,45680]" dest="uint256: uint256 [15770,15777]"/>
  <match src="identifier: msg [80052,80055]" dest="identifier: msg [72234,72237]"/>
  <match src="call_struct_argument [6198,6216]" dest="call_struct_argument [6726,6744]"/>
  <match src="state_mutability [90840,90844]" dest="state_mutability [30226,30230]"/>
  <match src="): ) [89009,89010]" dest="): ) [76199,76200]"/>
  <match src="number_literal: 0 [92920,92921]" dest="number_literal: 0 [32306,32307]"/>
  <match src="(: ( [88754,88755]" dest="(: ( [75944,75945]"/>
  <match src="primitive_type [31581,31587]" dest="primitive_type [49293,49299]"/>
  <match src="memory: memory [9942,9948]" dest="memory: memory [10470,10476]"/>
  <match src="return: return [503,509]" dest="return: return [1031,1037]"/>
  <match src="parenthesized_expression [30852,31362]" dest="parenthesized_expression [48564,49074]"/>
  <match src="}: } [103932,103933]" dest="}: } [43318,43319]"/>
  <match src="visibility [69594,69600]" dest="visibility [82881,82887]"/>
  <match src="number_literal: 0 [10133,10134]" dest="number_literal: 0 [10661,10662]"/>
  <match src=".: . [91770,91771]" dest=".: . [31156,31157]"/>
  <match src="identifier: candidate [104297,104306]" dest="identifier: candidate [43683,43692]"/>
  <match src="number_literal: 0 [21945,21946]" dest="number_literal: 0 [63551,63552]"/>
  <match src="return_statement [33609,33623]" dest="return_statement [51321,51335]"/>
  <match src="primitive_type [35691,35698]" dest="primitive_type [53403,53410]"/>
  <match src="(: ( [46000,46001]" dest="(: ( [16097,16098]"/>
  <match src="identifier: balance [99359,99366]" dest="identifier: balance [38745,38752]"/>
  <match src="identifier: account [73365,73372]" dest="identifier: account [83303,83310]"/>
  <match src="return_statement [93588,93632]" dest="return_statement [32974,33018]"/>
  <match src="call_argument [9245,9249]" dest="call_argument [9773,9777]"/>
  <match src="type_name [98604,98611]" dest="type_name [37990,37997]"/>
  <match src="type_name [99896,99903]" dest="type_name [39282,39289]"/>
  <match src="function: function [11619,11627]" dest="function: function [22920,22928]"/>
  <match src="call_expression [31105,31124]" dest="call_expression [48817,48836]"/>
  <match src="{: { [91051,91052]" dest="{: { [30437,30438]"/>
  <match src="(: ( [94350,94351]" dest="(: ( [33736,33737]"/>
  <match src="member_expression [96461,96478]" dest="member_expression [35847,35864]"/>
  <match src="identifier: z [36446,36447]" dest="identifier: z [54158,54159]"/>
  <match src="identifier: s [53120,53121]" dest="identifier: s [21244,21245]"/>
  <match src="identifier: b [9327,9328]" dest="identifier: b [9855,9856]"/>
  <match src="}: } [6583,6584]" dest="}: } [7111,7112]"/>
  <match src="using: using [90469,90474]" dest="using: using [29855,29860]"/>
  <match src="uint256: uint256 [840,847]" dest="uint256: uint256 [1368,1375]"/>
  <match src="member_expression [104317,104365]" dest="member_expression [43703,43751]"/>
  <match src="member_expression [100728,100768]" dest="member_expression [40114,40154]"/>
  <match src="uint256: uint256 [99896,99903]" dest="uint256: uint256 [39282,39289]"/>
  <match src="{: { [86885,86886]" dest="{: { [28676,28677]"/>
  <match src="string [22447,22485]" dest="string [62606,62623]"/>
  <match src="visibility [35633,35640]" dest="visibility [53345,53352]"/>
  <match src="function_body [43507,43535]" dest="function_body [13604,13632]"/>
  <match src="): ) [6000,6001]" dest="): ) [6528,6529]"/>
  <match src="{: { [101519,101520]" dest="{: { [40905,40906]"/>
  <match src=".: . [6940,6941]" dest=".: . [7468,7469]"/>
  <match src="type_name [53838,53844]" dest="type_name [21962,21968]"/>
  <match src="comment: // put the input bytes into the result [32878,32916]" dest="comment: // put the input bytes into the result [50590,50628]"/>
  <match src="return_statement [45344,45369]" dest="return_statement [15441,15466]"/>
  <match src="call_argument [100924,100930]" dest="call_argument [40310,40316]"/>
  <match src="state_variable_declaration [42392,42454]" dest="state_variable_declaration [12489,12551]"/>
  <match src=",: , [9144,9145]" dest=",: , [9672,9673]"/>
  <match src="[: [ [93792,93793]" dest="[: [ [33178,33179]"/>
  <match src="call_argument [8575,8585]" dest="call_argument [9103,9113]"/>
  <match src="&quot;: &quot; [106273,106274]" dest="&quot;: &quot; [69417,69418]"/>
  <match src=".: . [63955,63956]" dest=".: . [19319,19320]"/>
  <match src="parameter [30686,30700]" dest="parameter [48398,48412]"/>
  <match src="): ) [91134,91135]" dest="): ) [30520,30521]"/>
  <match src="visibility [61848,61854]" dest="visibility [26903,26909]"/>
  <match src="{: { [30124,30125]" dest="{: { [47836,47837]"/>
  <match src="function_body [83085,83284]" dest="function_body [58937,59072]"/>
  <match src="): ) [6759,6760]" dest="): ) [7287,7288]"/>
  <match src="(: ( [75578,75579]" dest="(: ( [61100,61101]"/>
  <match src=":: : [43925,43926]" dest=":: : [14022,14023]"/>
  <match src="(: ( [64881,64882]" dest="(: ( [65917,65918]"/>
  <match src="(: ( [52966,52967]" dest="(: ( [21090,21091]"/>
  <match src=".: . [93352,93353]" dest=".: . [32738,32739]"/>
  <match src="number_literal: 0 [85201,85202]" dest="number_literal: 0 [74529,74530]"/>
  <match src="(: ( [83202,83203]" dest="(: ( [58813,58814]"/>
  <match src="address: address [79184,79191]" dest="address: address [78106,78113]"/>
  <match src="parameter [98063,98067]" dest="parameter [37449,37453]"/>
  <match src="identifier: stringifyTruncated [32343,32361]" dest="identifier: stringifyTruncated [50055,50073]"/>
  <match src="identifier: data [54271,54275]" dest="identifier: data [22395,22399]"/>
  <match src="call_argument [47970,47983]" dest="call_argument [55704,55717]"/>
  <match src="primitive_type [79184,79191]" dest="primitive_type [78106,78113]"/>
  <match src="function_body [47810,48000]" dest="function_body [55663,55869]"/>
  <match src="(: ( [30876,30877]" dest="(: ( [48588,48589]"/>
  <match src="call_expression [96343,96363]" dest="call_expression [35729,35749]"/>
  <match src="external: external [52340,52348]" dest="external: external [20464,20472]"/>
  <match src="identifier: capture [63914,63921]" dest="identifier: oracleCapture [67661,67674]"/>
  <match src="parameter [806,815]" dest="parameter [1334,1343]"/>
  <match src="identifier: _state [95917,95923]" dest="identifier: _state [35303,35309]"/>
  <match src="identifier: must [28919,28923]" dest="identifier: must [46631,46635]"/>
  <match src="parameter [44441,44448]" dest="parameter [14538,14545]"/>
  <match src="): ) [908,909]" dest="): ) [1436,1437]"/>
  <match src="variable_declaration_statement [82487,82602]" dest="variable_declaration_statement [72628,72690]"/>
  <match src="member_expression [103544,103580]" dest="member_expression [42930,42966]"/>
  <match src="primitive_type [96698,96705]" dest="primitive_type [36084,36091]"/>
  <match src="function_definition [79295,79560]" dest="function_definition [70859,71098]"/>
  <match src="address: address [51454,51461]" dest="address: address [60883,60890]"/>
  <match src="call_argument [80654,80664]" dest="call_argument [72358,72368]"/>
  <match src="uint256: uint256 [46392,46399]" dest="uint256: uint256 [16489,16496]"/>
  <match src="external: external [12310,12318]" dest="external: external [23611,23619]"/>
  <match src="type_name [7185,7192]" dest="type_name [7713,7720]"/>
  <match src="=: = [42319,42320]" dest="=: = [12416,12417]"/>
  <match src="type_alias [62669,62676]" dest="type_alias [65510,65517]"/>
  <match src="identifier: initializeCouponsExpiration [102436,102463]" dest="identifier: initializeCouponsExpiration [41822,41849]"/>
  <match src="uint256: uint256 [1264,1271]" dest="uint256: uint256 [1792,1799]"/>
  <match src="(: ( [70389,70390]" dest="(: ( [58734,58735]"/>
  <match src="interface_declaration [52014,54411]" dest="interface_declaration [20138,22535]"/>
  <match src="(: ( [8177,8178]" dest="(: ( [8705,8706]"/>
  <match src="call_expression [79686,79812]" dest="call_expression [71233,71362]"/>
  <match src="identifier: FILE [48742,48746]" dest="identifier: FILE [62509,62513]"/>
  <match src="identifier: owner [101794,101799]" dest="identifier: owner [41180,41185]"/>
  <match src="identifier: candidate [103862,103871]" dest="identifier: candidate [43248,43257]"/>
  <match src="parameter [7875,7888]" dest="parameter [8403,8416]"/>
  <match src="&gt;: &gt; [96496,96497]" dest="&gt;: &gt; [35882,35883]"/>
  <match src="function_body [28904,29396]" dest="function_body [46616,47108]"/>
  <match src="address: address [12293,12300]" dest="address: address [23594,23601]"/>
  <match src="member_expression [30898,30914]" dest="member_expression [48610,48626]"/>
  <match src="type_name [42538,42545]" dest="type_name [12635,12642]"/>
  <match src="{: { [83085,83086]" dest="{: { [58937,58938]"/>
  <match src="identifier: recipient [51002,51011]" dest="identifier: recipient [64330,64339]"/>
  <match src="new_expression [35839,35848]" dest="new_expression [53551,53560]"/>
  <match src="address: address [97719,97726]" dest="address: address [37105,37112]"/>
  <match src="private: private [15775,15782]" dest="private: private [59420,59427]"/>
  <match src="identifier: bstr [34608,34612]" dest="identifier: bstr [52320,52324]"/>
  <match src="identifier: candidate [96616,96625]" dest="identifier: candidate [36002,36011]"/>
  <match src="call_argument [35012,35033]" dest="call_argument [52724,52745]"/>
  <match src="parameter [11638,11653]" dest="parameter [22939,22954]"/>
  <match src="identifier: stringifyTruncated [31021,31039]" dest="identifier: stringifyTruncated [48733,48751]"/>
  <match src=".: . [101365,101366]" dest=".: . [40751,40752]"/>
  <match src="): ) [7422,7423]" dest="): ) [7950,7951]"/>
  <match src="function_definition [91590,91680]" dest="function_definition [30976,31066]"/>
  <match src="identifier: epoch [101300,101305]" dest="identifier: epoch [40686,40691]"/>
  <match src="): ) [6868,6869]" dest="): ) [7396,7397]"/>
  <match src="identifier: RPAREN [31302,31308]" dest="identifier: RPAREN [49014,49020]"/>
  <match src="function_body [45800,45861]" dest="function_body [15897,15958]"/>
  <match src="member_expression [100771,100812]" dest="member_expression [40157,40198]"/>
  <match src="identifier: from [52762,52766]" dest="identifier: from [20886,20890]"/>
  <match src="primitive_type [91936,91943]" dest="primitive_type [31322,31329]"/>
  <match src="function: function [22995,23003]" dest="function: function [55875,55883]"/>
  <match src="return_type_definition [32841,32863]" dest="return_type_definition [50553,50575]"/>
  <match src="event: event [53474,53479]" dest="event: event [21598,21603]"/>
  <match src="member_expression [100771,100837]" dest="member_expression [40157,40223]"/>
  <match src="): ) [8825,8826]" dest="): ) [9353,9354]"/>
  <match src="is: is [105554,105556]" dest="is: is [68698,68700]"/>
  <match src="call_argument [80803,80808]" dest="call_argument [71840,71845]"/>
  <match src=",: , [79119,79120]" dest=",: , [70507,70508]"/>
  <match src="type_name [86919,86926]" dest="type_name [28710,28717]"/>
  <match src="primitive_type [25997,26004]" dest="primitive_type [55900,55907]"/>
  <match src="identifier: accounts [93258,93266]" dest="identifier: accounts [32644,32652]"/>
  <match src="identifier: epoch [103198,103203]" dest="identifier: epoch [42584,42589]"/>
  <match src="type_cast_expression [28378,28704]" dest="type_cast_expression [46090,46416]"/>
  <match src="function_body [102359,102421]" dest="function_body [41745,41807]"/>
  <match src="struct_member [86608,86623]" dest="struct_member [28399,28414]"/>
  <match src="return_statement [102853,102860]" dest="return_statement [42239,42246]"/>
  <match src="identifier: epoch [92812,92817]" dest="identifier: epoch [32198,32203]"/>
  <match src="identifier: deposit [79304,79311]" dest="identifier: deposit [70868,70875]"/>
  <match src="call_argument [33704,33705]" dest="call_argument [51416,51417]"/>
  <match src="internal: internal [76622,76630]" dest="internal: internal [56858,56866]"/>
  <match src=".: . [95310,95311]" dest=".: . [34696,34697]"/>
  <match src="return_type_definition [97892,97906]" dest="return_type_definition [37278,37292]"/>
  <match src="): ) [106283,106284]" dest="): ) [69427,69428]"/>
  <match src="visibility [31500,31508]" dest="visibility [49212,49220]"/>
  <match src="identifier: unfreeze [75570,75578]" dest="identifier: step [61096,61100]"/>
  <match src="call_argument [31670,31674]" dest="call_argument [49382,49386]"/>
  <match src="returns: returns [9026,9033]" dest="returns: returns [9554,9561]"/>
  <match src="call_expression [31181,31200]" dest="call_expression [48893,48912]"/>
  <match src="call_argument [31150,31155]" dest="call_argument [48862,48867]"/>
  <match src="identifier: _state [104279,104285]" dest="identifier: _state [43665,43671]"/>
  <match src="): ) [94301,94302]" dest="): ) [33687,33688]"/>
  <match src="binary_expression [33987,33993]" dest="binary_expression [51699,51705]"/>
  <match src="identifier: RPAREN [29319,29325]" dest="identifier: RPAREN [47031,47037]"/>
  <match src="state_mutability [31513,31517]" dest="state_mutability [49225,49229]"/>
  <match src="parameter [99896,99910]" dest="parameter [39282,39296]"/>
  <match src="): ) [99822,99823]" dest="): ) [39208,39209]"/>
  <match src="identifier: add [96339,96342]" dest="identifier: add [35725,35728]"/>
  <match src="call_expression [81067,81094]" dest="call_expression [72122,72149]"/>
  <match src="): ) [815,816]" dest="): ) [1343,1344]"/>
  <match src="variable_declaration [2017,2026]" dest="variable_declaration [2545,2554]"/>
  <match src="(: ( [90945,90946]" dest="(: ( [30331,30332]"/>
  <match src="state_mutability [93892,93896]" dest="state_mutability [33278,33282]"/>
  <match src="type_name [8517,8521]" dest="type_name [9045,9049]"/>
  <match src="visibility [47659,47666]" dest="visibility [61546,61553]"/>
  <match src="call_argument [79412,79425]" dest="call_argument [70975,70988]"/>
  <match src="identifier: LPAREN [29801,29807]" dest="identifier: LPAREN [47513,47519]"/>
  <match src="function_definition [9918,10141]" dest="function_definition [10446,10669]"/>
  <match src="state_mutability [4052,4056]" dest="state_mutability [4580,4584]"/>
  <match src="uint256: uint256 [32084,32091]" dest="uint256: uint256 [49796,49803]"/>
  <match src="parameter [103509,103523]" dest="parameter [42895,42909]"/>
  <match src="parameter [76592,76612]" dest="parameter [62419,62439]"/>
  <match src="call_argument [28529,28555]" dest="call_argument [46241,46267]"/>
  <match src=",: , [99503,99504]" dest=",: , [38889,38890]"/>
  <match src=",: , [97865,97866]" dest=",: , [37251,37252]"/>
  <match src="): ) [70370,70371]" dest="): ) [58715,58716]"/>
  <match src="(: ( [49647,49648]" dest="(: ( [26030,26031]"/>
  <match src="private: private [83077,83084]" dest="private: private [58664,58671]"/>
  <match src="type_name [50931,50938]" dest="type_name [55638,55645]"/>
  <match src=",: , [28555,28556]" dest=",: , [46267,46268]"/>
  <match src="address: address [53687,53694]" dest="address: address [21811,21818]"/>
  <match src="(: ( [36671,36672]" dest="(: ( [54383,54384]"/>
  <match src="string [19835,19872]" dest="string [64083,64128]"/>
  <match src="call_argument [83662,83670]" dest="call_argument [78919,78926]"/>
  <match src="revert_statement [27904,28160]" dest="revert_statement [45616,45872]"/>
  <match src="call_expression [7471,7478]" dest="call_expression [7999,8006]"/>
  <match src="(: ( [82693,82694]" dest="(: ( [62761,62762]"/>
  <match src="identifier: _state [100872,100878]" dest="identifier: _state [40258,40264]"/>
  <match src="uint256: uint256 [42272,42279]" dest="uint256: uint256 [12369,12376]"/>
  <match src="interface_declaration [11387,13953]" dest="interface_declaration [22688,25254]"/>
  <match src="view: view [53728,53732]" dest="view: view [21852,21856]"/>
  <match src="(: ( [19651,19652]" dest="(: ( [63779,63780]"/>
  <match src="parameter [43599,43606]" dest="parameter [13696,13703]"/>
  <match src="call_argument [17019,17025]" dest="call_argument [59467,59473]"/>
  <match src="function: function [54196,54204]" dest="function: function [22320,22328]"/>
  <match src="struct_member [86129,86148]" dest="struct_member [27920,27939]"/>
  <match src="internal: internal [5932,5940]" dest="internal: internal [6460,6468]"/>
  <match src="function_definition [8773,8931]" dest="function_definition [9301,9459]"/>
  <match src="event_paramater [52060,52081]" dest="event_paramater [20184,20205]"/>
  <match src="string [17740,17782]" dest="string [72292,72328]"/>
  <match src="identifier: totalSupply [92288,92299]" dest="identifier: totalSupply [31674,31685]"/>
  <match src="identifier: EpochStrategy [94036,94049]" dest="identifier: EpochStrategy [33422,33435]"/>
  <match src="call_argument [7523,7542]" dest="call_argument [8051,8070]"/>
  <match src="[: [ [100275,100276]" dest="[: [ [39661,39662]"/>
  <match src="view: view [53911,53915]" dest="view: view [22035,22039]"/>
  <match src="call_expression [32579,32598]" dest="call_expression [50291,50310]"/>
  <match src="primitive_type [27781,27785]" dest="primitive_type [45493,45497]"/>
  <match src="event_paramater [78855,78878]" dest="event_paramater [70373,70396]"/>
  <match src="comment: // 2% [43156,43161]" dest="comment: // 2% [13253,13258]"/>
  <match src="(: ( [83146,83147]" dest="(: ( [58998,58999]"/>
  <match src="call_argument [876,908]" dest="call_argument [1404,1436]"/>
  <match src="identifier: c [427,428]" dest="identifier: c [955,956]"/>
  <match src="): ) [1333,1334]" dest="): ) [1861,1862]"/>
  <match src="call_expression [106163,106284]" dest="call_expression [69307,69428]"/>
  <match src="(: ( [6432,6433]" dest="(: ( [6960,6961]"/>
  <match src="expression_statement [98661,98723]" dest="expression_statement [38047,38109]"/>
  <match src="parameter [49725,49739]" dest="parameter [26108,26122]"/>
  <match src="state_mutability [91293,91297]" dest="state_mutability [30679,30683]"/>
  <match src="identifier: coupons [94983,94990]" dest="identifier: coupons [34369,34376]"/>
  <match src="constant: constant [42554,42562]" dest="constant: constant [12651,12659]"/>
  <match src="return_type_definition [6043,6064]" dest="return_type_definition [6571,6592]"/>
  <match src="identifier: candidate [95993,96002]" dest="identifier: candidate [35379,35388]"/>
  <match src="(: ( [52936,52937]" dest="(: ( [21060,21061]"/>
  <match src="): ) [79424,79425]" dest="): ) [70987,70988]"/>
  <match src="identifier: shift [36294,36299]" dest="identifier: shift [54006,54011]"/>
  <match src="identifier: epoch [87081,87086]" dest="identifier: epoch [28872,28877]"/>
  <match src="event_paramater [25654,25677]" dest="event_paramater [60727,60750]"/>
  <match src="identifier: placeLock [104420,104429]" dest="identifier: placeLock [43806,43815]"/>
  <match src="(: ( [75711,75712]" dest="(: ( [61421,61422]"/>
  <match src="primitive_type [104430,104437]" dest="primitive_type [43816,43823]"/>
  <match src="(: ( [79534,79535]" dest="(: ( [71072,71073]"/>
  <match src="): ) [101508,101509]" dest="): ) [40894,40895]"/>
  <match src="(: ( [30824,30825]" dest="(: ( [48536,48537]"/>
  <match src="(: ( [102785,102786]" dest="(: ( [42171,42172]"/>
  <match src="}: } [93017,93018]" dest="}: } [32403,32404]"/>
  <match src="identifier: supply [99729,99735]" dest="identifier: supply [39115,39121]"/>
  <match src="function_definition [95832,95959]" dest="function_definition [35218,35345]"/>
  <match src="member_expression [101243,101283]" dest="member_expression [40629,40669]"/>
  <match src="type_name [42063,42070]" dest="type_name [12160,12167]"/>
  <match src="state_variable_declaration [42882,42933]" dest="state_variable_declaration [12979,13030]"/>
  <match src="}: } [89753,89754]" dest="}: } [76943,76944]"/>
  <match src="primitive_type [94655,94662]" dest="primitive_type [34041,34048]"/>
  <match src="(: ( [52573,52574]" dest="(: ( [20697,20698]"/>
  <match src="identifier: amount [99190,99196]" dest="identifier: amount [38576,38582]"/>
  <match src="call_expression [7806,7829]" dest="call_expression [8334,8357]"/>
  <match src="member_expression [98804,98818]" dest="member_expression [38190,38204]"/>
  <match src="(: ( [45896,45897]" dest="(: ( [15993,15994]"/>
  <match src="primitive_type [86157,86164]" dest="primitive_type [27948,27955]"/>
  <match src="type_name [42467,42474]" dest="type_name [12564,12571]"/>
  <match src="(: ( [36805,36806]" dest="(: ( [54517,54518]"/>
  <match src="): ) [53717,53718]" dest="): ) [21841,21842]"/>
  <match src="return: return [45225,45231]" dest="return: return [15322,15328]"/>
  <match src="return_type_definition [6153,6174]" dest="return_type_definition [6681,6702]"/>
  <match src="function: function [33719,33727]" dest="function: function [51431,51439]"/>
  <match src="{: { [7282,7283]" dest="{: { [7810,7811]"/>
  <match src=".: . [66517,66518]" dest=".: . [80975,80976]"/>
  <match src="uint256: uint256 [42063,42070]" dest="uint256: uint256 [12160,12167]"/>
  <match src="call_argument [48673,48692]" dest="call_argument [64247,64284]"/>
  <match src="pure: pure [6665,6669]" dest="pure: pure [7193,7197]"/>
  <match src=".: . [102262,102263]" dest=".: . [41648,41649]"/>
  <match src="identifier: reason [99772,99778]" dest="identifier: reason [39158,39164]"/>
  <match src="internal: internal [19703,19711]" dest="internal: internal [56692,56700]"/>
  <match src="call_argument [31784,31790]" dest="call_argument [49496,49502]"/>
  <match src="identifier: decrementBalanceOfCoupons [100953,100978]" dest="identifier: decrementBalanceOfCoupons [40339,40364]"/>
  <match src="visibility [104002,104010]" dest="visibility [43388,43396]"/>
  <match src="internal: internal [1303,1311]" dest="internal: internal [1831,1839]"/>
  <match src="{: { [89453,89454]" dest="{: { [76643,76644]"/>
  <match src="return_type_definition [831,848]" dest="return_type_definition [1359,1376]"/>
  <match src="return_statement [45981,46031]" dest="return_statement [16078,16128]"/>
  <match src="function_body [91739,91784]" dest="function_body [31125,31170]"/>
  <match src="parameter [52810,52814]" dest="parameter [20934,20938]"/>
  <match src="identifier: value [8191,8196]" dest="identifier: value [8719,8724]"/>
  <match src="=: = [89650,89651]" dest="=: = [76840,76841]"/>
  <match src="identifier: b [2613,2614]" dest="identifier: b [3141,3142]"/>
  <match src="call_argument [80052,80062]" dest="call_argument [72234,72244]"/>
  <match src="primitive_type [53149,53156]" dest="primitive_type [21273,21280]"/>
  <match src="identifier: msg [79862,79865]" dest="identifier: msg [71387,71390]"/>
  <match src="type_name [63015,63022]" dest="type_name [82751,82758]"/>
  <match src="call_argument [29284,29292]" dest="call_argument [46996,47004]"/>
  <match src="identifier: sub [6947,6950]" dest="identifier: sub [7475,7478]"/>
  <match src="identifier: newImplementation [89523,89540]" dest="identifier: newImplementation [76713,76730]"/>
  <match src="internal: internal [6139,6147]" dest="internal: internal [6667,6675]"/>
  <match src=",: , [52180,52181]" dest=",: , [20304,20305]"/>
  <match src="++: ++ [35172,35174]" dest="++: ++ [52884,52886]"/>
  <match src="private: private [15883,15890]" dest="private: private [19351,19358]"/>
  <match src="type_name [98769,98776]" dest="type_name [38155,38162]"/>
  <match src="parameter [91429,91436]" dest="parameter [30815,30822]"/>
  <match src="string: string [90743,90749]" dest="string: string [30129,30135]"/>
  <match src="function_definition [53701,53751]" dest="function_definition [21825,21875]"/>
  <match src=":: : [46007,46008]" dest=":: : [16104,16105]"/>
  <match src="(: ( [91833,91834]" dest="(: ( [31219,31220]"/>
  <match src="call_argument [106073,106095]" dest="call_argument [69217,69239]"/>
  <match src="expression_statement [34573,34581]" dest="expression_statement [52285,52293]"/>
  <match src="(: ( [95890,95891]" dest="(: ( [35276,35277]"/>
  <match src="identifier: D256 [9146,9150]" dest="identifier: D256 [9674,9678]"/>
  <match src="identifier: Claim [80184,80189]" dest="identifier: Commit [81538,81544]"/>
  <match src=".: . [9888,9889]" dest=".: . [10416,10417]"/>
  <match src="private: private [89445,89452]" dest="private: private [76635,76642]"/>
  <match src="primitive_type [11925,11932]" dest="primitive_type [23226,23233]"/>
  <match src="identifier: amount [97746,97752]" dest="identifier: amount [37132,37138]"/>
  <match src="=: = [65397,65398]" dest="=: = [66836,66837]"/>
  <match src="(: ( [105742,105743]" dest="(: ( [68886,68887]"/>
  <match src="member_expression [93305,93326]" dest="member_expression [32691,32712]"/>
  <match src="block_statement [35176,35545]" dest="block_statement [52888,53257]"/>
  <match src="state_mutability [6148,6152]" dest="state_mutability [6676,6680]"/>
  <match src="identifier: b [6459,6460]" dest="identifier: b [6987,6988]"/>
  <match src="uint: uint [52182,52186]" dest="uint: uint [20306,20310]"/>
  <match src="identifier: epoch [94837,94842]" dest="identifier: epoch [34223,34228]"/>
  <match src="identifier: USDC [43524,43528]" dest="identifier: USDC [13621,13625]"/>
  <match src="]: ] [104048,104049]" dest="]: ] [43434,43435]"/>
  <match src="internal: internal [102711,102719]" dest="internal: internal [42097,42105]"/>
  <match src="): ) [21121,21122]" dest="): ) [63299,63300]"/>
  <match src="type_name [45206,45213]" dest="type_name [15303,15310]"/>
  <match src=",: , [6346,6347]" dest=",: , [6874,6875]"/>
  <match src="view: view [96424,96428]" dest="view: view [35810,35814]"/>
  <match src="identifier: totalRewardedWithPhantom [82378,82402]" dest="identifier: totalRedeemable [61741,61756]"/>
  <match src="(: ( [6196,6197]" dest="(: ( [6724,6725]"/>
  <match src="): ) [45965,45966]" dest="): ) [16062,16063]"/>
  <match src="call_expression [80279,80299]" dest="call_expression [71496,71516]"/>
  <match src="parameter [13029,13043]" dest="parameter [24330,24344]"/>
  <match src="number_literal: 87 [27420,27422]" dest="number_literal: 87 [45132,45134]"/>
  <match src="return: return [33687,33693]" dest="return: return [51399,51405]"/>
  <match src="primitive_type [6128,6135]" dest="primitive_type [6656,6663]"/>
  <match src="return_statement [33859,33870]" dest="return_statement [51571,51582]"/>
  <match src="identifier: fluidUntil [93276,93286]" dest="identifier: fluidUntil [32662,32672]"/>
  <match src="): ) [31329,31330]" dest="): ) [49041,49042]"/>
  <match src="): ) [79325,79326]" dest="): ) [70889,70890]"/>
  <match src="visibility [94776,94782]" dest="visibility [34162,34168]"/>
  <match src="identifier: candidate [95859,95868]" dest="identifier: candidate [35245,35254]"/>
  <match src="call_expression [79823,79837]" dest="call_expression [56565,56579]"/>
  <match src="identifier: _state [100294,100300]" dest="identifier: _state [39680,39686]"/>
  <match src="(: ( [35662,35663]" dest="(: ( [53374,53375]"/>
  <match src="constant: constant [42898,42906]" dest="constant: constant [12995,13003]"/>
  <match src="): ) [11982,11983]" dest="): ) [23283,23284]"/>
  <match src="expression_statement [83517,83577]" dest="expression_statement [78288,78353]"/>
  <match src="parameter [4675,4701]" dest="parameter [5203,5229]"/>
  <match src="internal: internal [98346,98354]" dest="internal: internal [37732,37740]"/>
  <match src="uint256: uint256 [45325,45332]" dest="uint256: uint256 [15422,15429]"/>
  <match src="call_argument [83121,83205]" dest="call_argument [58708,58816]"/>
  <match src=",: , [83564,83565]" dest=",: , [78332,78333]"/>
  <match src="visibility [15849,15856]" dest="visibility [17921,17928]"/>
  <match src="identifier: stringifyTruncated [31651,31669]" dest="identifier: stringifyTruncated [49363,49381]"/>
  <match src="state_mutability [92239,92243]" dest="state_mutability [31625,31629]"/>
  <match src="identifier: D256 [7793,7797]" dest="identifier: D256 [8321,8325]"/>
  <match src="uint256: uint256 [2594,2601]" dest="uint256: uint256 [3122,3129]"/>
  <match src="returns: returns [7402,7409]" dest="returns: returns [7930,7937]"/>
  <match src=".: . [92707,92708]" dest=".: . [32093,32094]"/>
  <match src="string [19934,19974]" dest="string [56738,56768]"/>
  <match src="): ) [7948,7949]" dest="): ) [8476,8477]"/>
  <match src="): ) [80298,80299]" dest="): ) [71515,71516]"/>
  <match src="identifier: eliminateOutstandingCoupons [102668,102695]" dest="identifier: eliminateOutstandingCoupons [42054,42081]"/>
  <match src="parameter [103490,103507]" dest="parameter [42876,42893]"/>
  <match src="]: ] [100283,100284]" dest="]: ] [39669,39670]"/>
  <match src="(: ( [7856,7857]" dest="(: ( [8384,8385]"/>
  <match src="member_expression [94823,94851]" dest="member_expression [34209,34237]"/>
  <match src="&quot;: &quot; [48748,48749]" dest="&quot;: &quot; [56054,56055]"/>
  <match src="(: ( [104756,104757]" dest="(: ( [44142,44143]"/>
  <match src="identifier: sub [101214,101217]" dest="identifier: sub [40600,40603]"/>
  <match src="identifier: amount0 [53178,53185]" dest="identifier: amount0 [21302,21309]"/>
  <match src="uint256: uint256 [92864,92871]" dest="uint256: uint256 [32250,32257]"/>
  <match src="function_definition [6014,6108]" dest="function_definition [6542,6636]"/>
  <match src="returns: returns [54154,54161]" dest="returns: returns [22278,22285]"/>
  <match src="address: address [104430,104437]" dest="address: address [43816,43823]"/>
  <match src="if_statement [31532,31932]" dest="if_statement [49244,49644]"/>
  <match src="member_expression [95152,95180]" dest="member_expression [34538,34566]"/>
  <match src="member_expression [96185,96220]" dest="member_expression [35571,35606]"/>
  <match src="return_statement [8894,8925]" dest="return_statement [9422,9453]"/>
  <match src=".: . [99983,99984]" dest=".: . [39369,39370]"/>
  <match src="): ) [35937,35938]" dest="): ) [53649,53650]"/>
  <match src="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [13720,13868]" dest="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [25021,25169]"/>
  <match src="parameter [54210,54225]" dest="parameter [22334,22349]"/>
  <match src="): ) [70394,70395]" dest="): ) [58739,58740]"/>
  <match src="): ) [28703,28704]" dest="): ) [46415,46416]"/>
  <match src="call_expression [45817,45854]" dest="call_expression [15914,15951]"/>
  <match src="identifier: value [78888,78893]" dest="identifier: value [70406,70411]"/>
  <match src="return_type_definition [61855,61890]" dest="return_type_definition [26910,26945]"/>
  <match src="[: [ [93816,93817]" dest="[: [ [33202,33203]"/>
  <match src="identifier: _ [106116,106117]" dest="identifier: _ [69260,69261]"/>
  <match src="{: { [79631,79632]" dest="{: { [71177,71178]"/>
  <match src="number_literal: 0 [36114,36115]" dest="number_literal: 0 [53826,53827]"/>
  <match src="visibility [4043,4051]" dest="visibility [4571,4579]"/>
  <match src="(: ( [105720,105721]" dest="(: ( [68864,68865]"/>
  <match src="type_name [99513,99520]" dest="type_name [38899,38906]"/>
  <match src="comment: // find the last non-zero byte in order to determine the length [33268,33331]" dest="comment: // find the last non-zero byte in order to determine the length [50980,51043]"/>
  <match src="call_argument [30386,30392]" dest="call_argument [48098,48104]"/>
  <match src="type_name [87326,87339]" dest="type_name [29117,29130]"/>
  <match src="call_expression [82072,82142]" dest="call_expression [79974,80033]"/>
  <match src="return_statement [7270,7310]" dest="return_statement [7798,7838]"/>
  <match src="parameter [13433,13447]" dest="parameter [24734,24748]"/>
  <match src="parameter [52620,52630]" dest="parameter [20744,20754]"/>
  <match src="call_argument [102153,102159]" dest="call_argument [41539,41545]"/>
  <match src="indexed: indexed [52068,52075]" dest="indexed: indexed [20192,20199]"/>
  <match src="identifier: amount [101948,101954]" dest="identifier: amount [41334,41340]"/>
  <match src="expression_statement [99714,99780]" dest="expression_statement [39100,39166]"/>
  <match src="type_name [88697,88704]" dest="type_name [75887,75894]"/>
  <match src="identifier: epochs [94830,94836]" dest="identifier: epochs [34216,34222]"/>
  <match src="state_mutability [92545,92549]" dest="state_mutability [31931,31935]"/>
  <match src="string_literal [83237,83267]" dest="string_literal [58848,58871]"/>
  <match src="return: return [92445,92451]" dest="return: return [31831,31837]"/>
  <match src="): ) [61814,61815]" dest="): ) [26869,26870]"/>
  <match src="primitive_type [41534,41541]" dest="primitive_type [11631,11638]"/>
  <match src=".: . [101601,101602]" dest=".: . [40987,40988]"/>
  <match src="identifier: a [4791,4792]" dest="identifier: a [5319,5320]"/>
  <match src="parameter [54244,54254]" dest="parameter [22368,22378]"/>
  <match src=",: , [30437,30438]" dest=",: , [48149,48150]"/>
  <match src=".: . [102634,102635]" dest=".: . [42020,42021]"/>
  <match src=",: , [6449,6450]" dest=",: , [6977,6978]"/>
  <match src="member_expression [79619,79629]" dest="member_expression [72042,72052]"/>
  <match src="parameter [48079,48092]" dest="parameter [72000,72013]"/>
  <match src="): ) [71133,71134]" dest="): ) [67100,67101]"/>
  <match src="!=: != [19737,19739]" dest="!=: != [63931,63933]"/>
  <match src="uint256: uint256 [101738,101745]" dest="uint256: uint256 [41124,41131]"/>
  <match src="array_access [94962,94982]" dest="array_access [34348,34368]"/>
  <match src="type_name [30664,30671]" dest="type_name [48376,48383]"/>
  <match src="]: ] [100622,100623]" dest="]: ] [40008,40009]"/>
  <match src="private: private [23232,23239]" dest="private: private [59254,59261]"/>
  <match src="identifier: b [8275,8276]" dest="identifier: b [8803,8804]"/>
  <match src=",: , [7614,7615]" dest=",: , [8142,8143]"/>
  <match src=".: . [98206,98207]" dest=".: . [37592,37593]"/>
  <match src="(: ( [46391,46392]" dest="(: ( [16488,16489]"/>
  <match src="identifier: result [32938,32944]" dest="identifier: result [50650,50656]"/>
  <match src="(: ( [100012,100013]" dest="(: ( [39398,39399]"/>
  <match src="identifier: candidate [95803,95812]" dest="identifier: candidate [35189,35198]"/>
  <match src="number_literal: 10 [36680,36682]" dest="number_literal: 10 [54392,54394]"/>
  <match src="visibility [9975,9982]" dest="visibility [10503,10510]"/>
  <match src="string_literal [56636,56661]" dest="string_literal [72904,72935]"/>
  <match src="(: ( [7334,7335]" dest="(: ( [7862,7863]"/>
  <match src=".: . [102893,102894]" dest=".: . [42279,42280]"/>
  <match src="(: ( [96158,96159]" dest="(: ( [35544,35545]"/>
  <match src="identifier: _state [103805,103811]" dest="identifier: _state [43191,43197]"/>
  <match src="public: public [93710,93716]" dest="public: public [33096,33102]"/>
  <match src="identifier: getPartial [9722,9732]" dest="identifier: getPartial [10250,10260]"/>
  <match src="comment: // 'x' [27479,27485]" dest="comment: // 'x' [45191,45197]"/>
  <match src="identifier: value [81453,81458]" dest="identifier: value [72736,72741]"/>
  <match src="member_expression [98683,98697]" dest="member_expression [38069,38083]"/>
  <match src="function: function [99451,99459]" dest="function: function [38837,38845]"/>
  <match src=".: . [101319,101320]" dest=".: . [40705,40706]"/>
  <match src="state_mutability [32832,32836]" dest="state_mutability [50544,50548]"/>
  <match src="identifier: account [99804,99811]" dest="identifier: account [39190,39197]"/>
  <match src="returns: returns [8508,8515]" dest="returns: returns [9036,9043]"/>
  <match src="type_name [100214,100220]" dest="type_name [39600,39606]"/>
  <match src="): ) [7362,7363]" dest="): ) [7890,7891]"/>
  <match src="struct_member [86895,86910]" dest="struct_member [28686,28701]"/>
  <match src="identifier: account [85168,85175]" dest="identifier: account [74496,74503]"/>
  <match src="type_name [71175,71182]" dest="type_name [67279,67286]"/>
  <match src="function_body [7776,7838]" dest="function_body [8304,8366]"/>
  <match src="): ) [102348,102349]" dest="): ) [41734,41735]"/>
  <match src="modifier_definition [105654,105858]" dest="modifier_definition [68798,69002]"/>
  <match src="{: { [94016,94017]" dest="{: { [33402,33403]"/>
  <match src=",: , [98713,98714]" dest=",: , [38099,38100]"/>
  <match src="member_expression [102592,102605]" dest="member_expression [41978,41991]"/>
  <match src="uint256: uint256 [96025,96032]" dest="uint256: uint256 [35411,35418]"/>
  <match src="type_name [105947,105954]" dest="type_name [69091,69098]"/>
  <match src="type_name [52519,52526]" dest="type_name [20643,20650]"/>
  <match src=".: . [94393,94394]" dest=".: . [33779,33780]"/>
  <match src="identifier: incrementBalanceOf [99146,99164]" dest="identifier: incrementBalanceOf [38532,38550]"/>
  <match src="identifier: price [65681,65686]" dest="identifier: price [67746,67751]"/>
  <match src=".: . [48711,48712]" dest=".: . [62485,62486]"/>
  <match src="identifier: _state [93462,93468]" dest="identifier: _state [32848,32854]"/>
  <match src="(: ( [80890,80891]" dest="(: ( [56371,56372]"/>
  <match src="parameter [101036,101050]" dest="parameter [40422,40436]"/>
  <match src="type_name [62861,62868]" dest="type_name [78131,78138]"/>
  <match src="expression_statement [66510,66560]" dest="expression_statement [72339,72410]"/>
  <match src="!=: != [4755,4757]" dest="!=: != [5283,5285]"/>
  <match src="type_name [54305,54312]" dest="type_name [22429,22436]"/>
  <match src="if: if [32143,32145]" dest="if: if [49855,49857]"/>
  <match src="member_expression [99352,99373]" dest="member_expression [38738,38759]"/>
  <match src="member_expression [100728,100756]" dest="member_expression [40114,40142]"/>
  <match src="return_type_definition [53623,53640]" dest="return_type_definition [21747,21764]"/>
  <match src="member_expression [103844,103893]" dest="member_expression [43230,43279]"/>
  <match src="): ) [32152,32153]" dest="): ) [49864,49865]"/>
  <match src="identifier: sender [19660,19666]" dest="identifier: sender [63797,63803]"/>
  <match src="identifier: result [34950,34956]" dest="identifier: result [52662,52668]"/>
  <match src="primitive_type [53314,53321]" dest="primitive_type [21438,21445]"/>
  <match src="function_body [98651,98729]" dest="function_body [38037,38115]"/>
  <match src="]: ] [36299,36300]" dest="]: ] [54011,54012]"/>
  <match src="type_name [8070,8074]" dest="type_name [8598,8602]"/>
  <match src="member_expression [94823,94836]" dest="member_expression [34209,34222]"/>
  <match src="call_argument [24940,24973]" dest="call_argument [78498,78527]"/>
  <match src="uint256: uint256 [48102,48109]" dest="uint256: uint256 [56831,56838]"/>
  <match src="]: ] [101262,101263]" dest="]: ] [40648,40649]"/>
  <match src="primitive_type [34479,34483]" dest="primitive_type [52191,52195]"/>
  <match src="return_type_definition [53733,53750]" dest="return_type_definition [21857,21874]"/>
  <match src="event_paramater [79008,79021]" dest="event_paramater [70630,70643]"/>
  <match src=",: , [29993,29994]" dest=",: , [47705,47706]"/>
  <match src="visibility [91606,91612]" dest="visibility [30992,30998]"/>
  <match src="identifier: Permission [107054,107064]" dest="identifier: Permission [77655,77665]"/>
  <match src="user_defined_type [6798,6802]" dest="user_defined_type [7326,7330]"/>
  <match src="identifier: epoch [93149,93154]" dest="identifier: epoch [32535,32540]"/>
  <match src="=: = [42172,42173]" dest="=: = [12269,12270]"/>
  <match src="): ) [34983,34984]" dest="): ) [52695,52696]"/>
  <match src="&quot;: &quot; [462,463]" dest="&quot;: &quot; [990,991]"/>
  <match src="identifier: fluidUntil [93387,93397]" dest="identifier: fluidUntil [32773,32783]"/>
  <match src="identifier: owner [93793,93798]" dest="identifier: owner [33179,33184]"/>
  <match src="identifier: GOVERNANCE_EMERGENCY_DELAY [42563,42589]" dest="identifier: GOVERNANCE_EMERGENCY_DELAY [12660,12686]"/>
  <match src="returns: returns [53982,53989]" dest="returns: returns [22106,22113]"/>
  <match src="visibility [27847,27855]" dest="visibility [45559,45567]"/>
  <match src="call_expression [71446,71470]" dest="call_expression [81781,81799]"/>
  <match src="identifier: candidate [104580,104589]" dest="identifier: candidate [43966,43975]"/>
  <match src=",: , [105776,105777]" dest=",: , [68920,68921]"/>
  <match src="identifier: shift [36198,36203]" dest="identifier: shift [53910,53915]"/>
  <match src="identifier: numerator [9878,9887]" dest="identifier: numerator [10406,10415]"/>
  <match src="member_expression [105755,105769]" dest="member_expression [68899,68913]"/>
  <match src="}: } [44608,44609]" dest="}: } [14705,14706]"/>
  <match src="binary_expression [95414,95457]" dest="binary_expression [34800,34843]"/>
  <match src="identifier: owner [52076,52081]" dest="identifier: owner [20200,20205]"/>
  <match src="string_literal [79767,79802]" dest="string_literal [71314,71352]"/>
  <match src="): ) [104000,104001]" dest="): ) [43386,43387]"/>
  <match src="identifier: COLON [27506,27511]" dest="identifier: COLON [45218,45223]"/>
  <match src="type_name [52489,52493]" dest="type_name [20613,20617]"/>
  <match src="identifier: _state [100076,100082]" dest="identifier: _state [39462,39468]"/>
  <match src="primitive_type [36190,36197]" dest="primitive_type [53902,53909]"/>
  <match src="identifier: owner [91244,91249]" dest="identifier: owner [30630,30635]"/>
  <match src="primitive_type [103326,103333]" dest="primitive_type [42712,42719]"/>
  <match src="parameter [13414,13431]" dest="parameter [24715,24732]"/>
  <match src="identifier: balanceOf [92712,92721]" dest="identifier: balanceOf [32098,32107]"/>
  <match src="identifier: account [49716,49723]" dest="identifier: account [26099,26106]"/>
  <match src="primitive_type [29598,29604]" dest="primitive_type [47310,47316]"/>
  <match src="identifier: account [105955,105962]" dest="identifier: account [69099,69106]"/>
  <match src="return_type_definition [90734,90757]" dest="return_type_definition [30120,30143]"/>
  <match src="string: string [99537,99543]" dest="string: string [38923,38929]"/>
  <match src="uint256: uint256 [104209,104216]" dest="uint256: uint256 [43595,43602]"/>
  <match src="uint256: uint256 [80976,80983]" dest="uint256: uint256 [72513,72520]"/>
  <match src="view: view [96684,96688]" dest="view: view [36070,36074]"/>
  <match src="memory: memory [61877,61883]" dest="memory: memory [26932,26938]"/>
  <match src="type_name [3261,3267]" dest="type_name [3789,3795]"/>
  <match src="(: ( [9892,9893]" dest="(: ( [10420,10421]"/>
  <match src="identifier: self [7179,7183]" dest="identifier: self [7707,7711]"/>
  <match src="call_expression [9404,9422]" dest="call_expression [9932,9950]"/>
  <match src="identifier: j [34031,34032]" dest="identifier: j [51743,51744]"/>
  <match src="primitive_type [1275,1281]" dest="primitive_type [1803,1809]"/>
  <match src="(: ( [29415,29416]" dest="(: ( [47127,47128]"/>
  <match src="identifier: add [104591,104594]" dest="identifier: add [43977,43980]"/>
  <match src="public: public [94915,94921]" dest="public: public [34301,34307]"/>
  <match src="identifier: outstanding [103019,103030]" dest="identifier: outstanding [42405,42416]"/>
  <match src="internal: internal [43703,43711]" dest="internal: internal [13800,13808]"/>
  <match src="returns: returns [9832,9839]" dest="returns: returns [10360,10367]"/>
  <match src="{: { [100589,100590]" dest="{: { [39975,39976]"/>
  <match src=",: , [53836,53837]" dest=",: , [21960,21961]"/>
  <match src="type_name [13888,13895]" dest="type_name [25189,25196]"/>
  <match src="type_name [35236,35243]" dest="type_name [52948,52955]"/>
  <match src="): ) [9212,9213]" dest="): ) [9740,9741]"/>
  <match src="identifier: D256 [8044,8048]" dest="identifier: D256 [8572,8576]"/>
  <match src="visibility [45650,45658]" dest="visibility [15747,15755]"/>
  <match src="type_name [95228,95235]" dest="type_name [34614,34621]"/>
  <match src="identifier: msg [82637,82640]" dest="identifier: msg [62823,62826]"/>
  <match src="): ) [9421,9422]" dest="): ) [9949,9950]"/>
  <match src="type_name [28205,28209]" dest="type_name [45917,45921]"/>
  <match src="identifier: mul [7606,7609]" dest="identifier: mul [8134,8137]"/>
  <match src="(: ( [45095,45096]" dest="(: ( [15192,15193]"/>
  <match src="identifier: b [374,375]" dest="identifier: b [902,903]"/>
  <match src="identifier: Constants [41265,41274]" dest="identifier: Constants [11362,11371]"/>
  <match src="private: private [42280,42287]" dest="private: private [12377,12384]"/>
  <match src="struct_member [86279,86295]" dest="struct_member [28070,28086]"/>
  <match src="member_expression [93777,93792]" dest="member_expression [33163,33178]"/>
  <match src="=: = [34745,34746]" dest="=: = [52457,52458]"/>
  <match src="state_mutability [45311,45315]" dest="state_mutability [15408,15412]"/>
  <match src="primitive_type [78736,78743]" dest="primitive_type [70251,70258]"/>
  <match src="identifier: provide [81920,81927]" dest="identifier: commit [79929,79935]"/>
  <match src="return_statement [36509,36523]" dest="return_statement [54221,54235]"/>
  <match src="&quot;: &quot; [82279,82280]" dest="&quot;: &quot; [80199,80200]"/>
  <match src="identifier: COUPON_SUPPLY_CHANGE_LIMIT [46191,46217]" dest="identifier: COUPON_SUPPLY_CHANGE_LIMIT [16288,16314]"/>
  <match src="type_name [92559,92566]" dest="type_name [31945,31952]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [40576,41256]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [10673,11353]"/>
  <match src="parameter [103735,103749]" dest="parameter [43121,43135]"/>
  <match src="): ) [36576,36577]" dest="): ) [54288,54289]"/>
  <match src="(: ( [9244,9245]" dest="(: ( [9772,9773]"/>
  <match src=":: : [43835,43836]" dest=":: : [13932,13933]"/>
  <match src="(: ( [79384,79385]" dest="(: ( [70947,70948]"/>
  <match src="contract_declaration [15673,22496]" dest="contract_declaration [60233,64749]"/>
  <match src="call_argument [102161,102167]" dest="call_argument [41547,41553]"/>
  <match src=",: , [104445,104446]" dest=",: , [43831,43832]"/>
  <match src="parameter [101690,101703]" dest="parameter [41076,41089]"/>
  <match src="memory: memory [46141,46147]" dest="memory: memory [16238,16244]"/>
  <match src="call_argument [6964,6970]" dest="call_argument [7492,7498]"/>
  <match src="uint256: uint256 [42329,42336]" dest="uint256: uint256 [12426,12433]"/>
  <match src="identifier: token0 [51446,51452]" dest="identifier: from [60869,60873]"/>
  <match src="identifier: updatePrice [65213,65224]" dest="identifier: growSupply [66543,66553]"/>
  <match src="comment: // 1.10 DAI [41500,41511]" dest="comment: // 1.10 DAI [11597,11608]"/>
  <match src="call_expression [44332,44374]" dest="call_expression [14429,14471]"/>
  <match src="string [80095,80133]" dest="string [81092,81106]"/>
  <match src="): ) [88953,88954]" dest="): ) [76143,76144]"/>
  <match src=",: , [79753,79754]" dest=",: , [71300,71301]"/>
  <match src="type_name [33698,33703]" dest="type_name [51410,51415]"/>
  <match src="identifier: Require [48634,48641]" dest="identifier: Require [62558,62565]"/>
  <match src="(: ( [79982,79983]" dest="(: ( [71204,71205]"/>
  <match src="member_expression [10987,10997]" dest="member_expression [64383,64393]"/>
  <match src="identifier: ratio [6240,6245]" dest="identifier: ratio [6768,6773]"/>
  <match src="member_expression [101420,101434]" dest="member_expression [40806,40820]"/>
  <match src="}: } [101642,101643]" dest="}: } [41028,41029]"/>
  <match src="identifier: Withdraw [79853,79861]" dest="identifier: Withdraw [71378,71386]"/>
  <match src="identifier: candidates [95652,95662]" dest="identifier: candidates [35038,35048]"/>
  <match src="uint256: uint256 [1384,1391]" dest="uint256: uint256 [1912,1919]"/>
  <match src="solidity_version: 0.5.17 [53,59]" dest="solidity_version: 0.5.17 [17,23]"/>
  <match src="identifier: staged [100404,100410]" dest="identifier: staged [39790,39796]"/>
  <match src="&quot;: &quot; [17781,17782]" dest="&quot;: &quot; [72327,72328]"/>
  <match src="call_expression [80365,80379]" dest="call_expression [66628,66642]"/>
  <match src="(: ( [104124,104125]" dest="(: ( [43510,43511]"/>
  <match src="function_body [34725,35575]" dest="function_body [52437,53287]"/>
  <match src="parameter [97719,97736]" dest="parameter [37105,37122]"/>
  <match src="call_argument [29198,29217]" dest="call_argument [46910,46929]"/>
  <match src="visibility [41542,41549]" dest="visibility [11639,11646]"/>
  <match src="=: = [77514,77515]" dest="=: = [61669,61670]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [922,1235]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [1450,1763]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [77768,78448]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [69491,70171]"/>
  <match src="if_statement [102802,102870]" dest="if_statement [42188,42256]"/>
  <match src="identifier: bonded [86927,86933]" dest="identifier: bonded [28718,28724]"/>
  <match src="{: { [90758,90759]" dest="{: { [30144,30145]"/>
  <match src="comment: // TODO Check this again before the Serenity release, because all addresses will be [84962,85045]" dest="comment: // TODO Check this again before the Serenity release, because all addresses will be [74290,74373]"/>
  <match src="constant: constant [42142,42150]" dest="constant: constant [12239,12247]"/>
  <match src="identifier: lockedUntil [93519,93530]" dest="identifier: lockedUntil [32905,32916]"/>
  <match src="returns: returns [45429,45436]" dest="returns: returns [15526,15533]"/>
  <match src="bytes: bytes [34114,34119]" dest="bytes: bytes [51826,51831]"/>
  <match src="identifier: FILE [82106,82110]" dest="identifier: FILE [80011,80015]"/>
  <match src="parameter [4066,4073]" dest="parameter [4594,4601]"/>
  <match src="=: = [43266,43267]" dest="=: = [13363,13364]"/>
  <match src="uint256: uint256 [13029,13036]" dest="uint256: uint256 [24330,24337]"/>
  <match src="identifier: epoch [102640,102645]" dest="identifier: epoch [42026,42031]"/>
  <match src="[: [ [94975,94976]" dest="[: [ [34361,34362]"/>
  <match src="return_type_definition [35654,35676]" dest="return_type_definition [53366,53388]"/>
  <match src="yul_function_call [96797,96808]" dest="yul_function_call [36183,36194]"/>
  <match src="visibility [21036,21044]" dest="visibility [56186,56194]"/>
  <match src="pure: pure [27860,27864]" dest="pure: pure [45572,45576]"/>
  <match src="type_name [36190,36197]" dest="type_name [53902,53909]"/>
  <match src="uint256: uint256 [7558,7565]" dest="uint256: uint256 [8086,8093]"/>
  <match src="identifier: GOVERNANCE_SUPER_MAJORITY [42492,42517]" dest="identifier: GOVERNANCE_SUPER_MAJORITY [12589,12614]"/>
  <match src="primitive_type [45438,45445]" dest="primitive_type [15535,15542]"/>
  <match src="parameter [4653,4662]" dest="parameter [5181,5190]"/>
  <match src="identifier: candidate [95727,95736]" dest="identifier: candidate [35113,35122]"/>
  <match src="bytes32: bytes32 [89637,89644]" dest="bytes32: bytes32 [76827,76834]"/>
  <match src=".: . [82200,82201]" dest=".: . [78314,78315]"/>
  <match src="expression_statement [100872,100932]" dest="expression_statement [40258,40318]"/>
  <match src="{: { [96581,96582]" dest="{: { [35967,35968]"/>
  <match src="parameter [2605,2614]" dest="parameter [3133,3142]"/>
  <match src="uint256: uint256 [79083,79090]" dest="uint256: uint256 [70471,70478]"/>
  <match src="bool: bool [29984,29988]" dest="bool: bool [47696,47700]"/>
  <match src="state_variable_declaration [42063,42121]" dest="state_variable_declaration [12160,12218]"/>
  <match src="type_name [68183,68190]" dest="type_name [70653,70660]"/>
  <match src="parameter [30075,30091]" dest="parameter [47787,47803]"/>
  <match src="function: function [20988,20996]" dest="function: function [56146,56154]"/>
  <match src="returns: returns [53733,53740]" dest="returns: returns [21857,21864]"/>
  <match src="call_argument [83566,83575]" dest="call_argument [78334,78351]"/>
  <match src="identifier: expiring [94991,94999]" dest="identifier: expiring [34377,34385]"/>
  <match src="=: = [99736,99737]" dest="=: = [39122,39123]"/>
  <match src="): ) [21819,21820]" dest="): ) [63490,63491]"/>
  <match src="function_body [94546,94585]" dest="function_body [33932,33971]"/>
  <match src="=: = [7604,7605]" dest="=: = [8132,8133]"/>
  <match src="state_variable_declaration [27490,27521]" dest="state_variable_declaration [45202,45233]"/>
  <match src="returns: returns [44142,44149]" dest="returns: returns [14239,14246]"/>
  <match src="assignment_expression [100260,100379]" dest="assignment_expression [39646,39765]"/>
  <match src="function_body [94945,95013]" dest="function_body [34331,34399]"/>
  <match src="member_expression [7984,7998]" dest="member_expression [8512,8526]"/>
  <match src="call_expression [104595,104615]" dest="call_expression [43981,44001]"/>
  <match src="=: = [33939,33940]" dest="=: = [51651,51652]"/>
  <match src="primitive_type [68406,68413]" dest="primitive_type [65812,65819]"/>
  <match src="primitive_type [80390,80397]" dest="primitive_type [66332,66339]"/>
  <match src="call_argument [101226,101232]" dest="call_argument [40612,40618]"/>
  <match src="parameter [91627,91634]" dest="parameter [31013,31020]"/>
  <match src="type_name [52421,52425]" dest="type_name [20545,20549]"/>
  <match src="external: external [66411,66419]" dest="external: external [63492,63500]"/>
  <match src="identifier: reason [28548,28554]" dest="identifier: reason [46260,46266]"/>
  <match src="call_expression [102767,102792]" dest="call_expression [42153,42178]"/>
  <match src="function_definition [93868,93959]" dest="function_definition [33254,33345]"/>
  <match src="): ) [35851,35852]" dest="): ) [53563,53564]"/>
  <match src="identifier: epoch [100632,100637]" dest="identifier: epoch [40018,40023]"/>
  <match src="): ) [52118,52119]" dest="): ) [20242,20243]"/>
  <match src="call_expression [102904,102980]" dest="call_expression [42290,42366]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [13479,13637]" dest="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [24780,24938]"/>
  <match src="(: ( [11677,11678]" dest="(: ( [22978,22979]"/>
  <match src="): ) [64121,64122]" dest="): ) [67952,67953]"/>
  <match src="identifier: amount [100567,100573]" dest="identifier: amount [39953,39959]"/>
  <match src="): ) [29905,29906]" dest="): ) [47617,47618]"/>
  <match src="state_mutability [28310,28314]" dest="state_mutability [46022,46026]"/>
  <match src="pure: pure [54611,54615]" dest="pure: pure [17638,17642]"/>
  <match src=".: . [44297,44298]" dest=".: . [14394,14395]"/>
  <match src="return_type_definition [4717,4734]" dest="return_type_definition [5245,5262]"/>
  <match src="): ) [93156,93157]" dest="): ) [32542,32543]"/>
  <match src="primitive_type [33801,33806]" dest="primitive_type [51513,51518]"/>
  <match src="primitive_type [92787,92794]" dest="primitive_type [32173,32180]"/>
  <match src="call_argument [79995,80000]" dest="call_argument [71217,71222]"/>
  <match src="identifier: value [7283,7288]" dest="identifier: value [7811,7816]"/>
  <match src="member_expression [101395,101417]" dest="member_expression [40781,40803]"/>
  <match src="identifier: getPoolExitLockupEpochs [75688,75711]" dest="identifier: getCouponExpiration [61402,61421]"/>
  <match src="): ) [31199,31200]" dest="): ) [48911,48912]"/>
  <match src="call_argument [4099,4100]" dest="call_argument [4627,4628]"/>
  <match src="member_expression [100052,100066]" dest="member_expression [39438,39452]"/>
  <match src="function: function [95019,95027]" dest="function: function [34405,34413]"/>
  <match src="identifier: State [87225,87230]" dest="identifier: State [29016,29021]"/>
  <match src="parameter [4021,4030]" dest="parameter [4549,4558]"/>
  <match src="address: address [25704,25711]" dest="address: address [60569,60576]"/>
  <match src="): ) [101085,101086]" dest="): ) [40471,40472]"/>
  <match src="call_argument [80941,80946]" dest="call_argument [73005,73010]"/>
  <match src="bool: bool [13063,13067]" dest="bool: bool [24364,24368]"/>
  <match src=".: . [81351,81352]" dest=".: . [72150,72151]"/>
  <match src="visibility [45302,45310]" dest="visibility [15399,15407]"/>
  <match src="primitive_type [42467,42474]" dest="primitive_type [12564,12571]"/>
  <match src="function_body [45971,46037]" dest="function_body [16068,16134]"/>
  <match src=",: , [47920,47921]" dest=",: , [55717,55718]"/>
  <match src="identifier: D256 [45954,45958]" dest="identifier: D256 [16051,16055]"/>
  <match src="address: address [87256,87263]" dest="address: address [29047,29054]"/>
  <match src="{: { [28925,28926]" dest="{: { [46637,46638]"/>
  <match src="): ) [31361,31362]" dest="): ) [49073,49074]"/>
  <match src="type_name [8455,8459]" dest="type_name [8983,8987]"/>
  <match src="function_definition [63905,64147]" dest="function_definition [67652,67993]"/>
  <match src="type_name [53820,53827]" dest="type_name [21944,21951]"/>
  <match src=".: . [103221,103222]" dest=".: . [42607,42608]"/>
  <match src="type_name [6052,6056]" dest="type_name [6580,6584]"/>
  <match src="string_literal [2064,2099]" dest="string_literal [2592,2627]"/>
  <match src="identifier: value [81594,81599]" dest="identifier: candidate [79840,79849]"/>
  <match src="identifier: createCandidate [103091,103106]" dest="identifier: createCandidate [42477,42492]"/>
  <match src="=: = [81065,81066]" dest="=: = [62649,62650]"/>
  <match src="): ) [7620,7621]" dest="): ) [8148,8149]"/>
  <match src="visibility [91508,91514]" dest="visibility [30894,30900]"/>
  <match src="memory: memory [7862,7868]" dest="memory: memory [8390,8396]"/>
  <match src="): ) [94913,94914]" dest="): ) [34299,34300]"/>
  <match src="identifier: D256 [46178,46182]" dest="identifier: D256 [16275,16279]"/>
  <match src=",: , [22062,22063]" dest=",: , [63724,63725]"/>
  <match src="identifier: stringifyTruncated [30334,30352]" dest="identifier: stringifyTruncated [48046,48064]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens in existence.      */ [11410,11476]" dest="comment: /**      * @dev Returns the amount of tokens in existence.      */ [22711,22777]"/>
  <match src="uint: uint [53370,53374]" dest="uint: uint [21494,21498]"/>
  <match src="primitive_type [20399,20406]" dest="primitive_type [59098,59105]"/>
  <match src="{: { [9218,9219]" dest="{: { [9746,9747]"/>
  <match src="identifier: z [35524,35525]" dest="identifier: z [53236,53237]"/>
  <match src=".: . [80657,80658]" dest=".: . [72361,72362]"/>
  <match src="binary_expression [2052,2057]" dest="binary_expression [2580,2585]"/>
  <match src="primitive_type [77369,77376]" dest="primitive_type [17581,17588]"/>
  <match src="identifier: D256 [8517,8521]" dest="identifier: D256 [9045,9049]"/>
  <match src="uint256: uint256 [15839,15846]" dest="uint256: uint256 [60602,60609]"/>
  <match src="uint256: uint256 [69432,69439]" dest="uint256: uint256 [55302,55309]"/>
  <match src=".: . [94423,94424]" dest=".: . [33809,33810]"/>
  <match src="identifier: accounts [93602,93610]" dest="identifier: accounts [32988,32996]"/>
  <match src="variable_declaration_statement [81301,81406]" dest="variable_declaration_statement [72095,72200]"/>
  <match src="return: return [95145,95151]" dest="return: return [34531,34537]"/>
  <match src="parameter [10013,10020]" dest="parameter [10541,10548]"/>
  <match src=".: . [104691,104692]" dest=".: . [44077,44078]"/>
  <match src="number_literal: 0x203c [27603,27609]" dest="number_literal: 0x203c [45315,45321]"/>
  <match src="type_name [94026,94049]" dest="type_name [33412,33435]"/>
  <match src="): ) [102791,102792]" dest="): ) [42177,42178]"/>
  <match src="): ) [35987,35988]" dest="): ) [53699,53700]"/>
  <match src="identifier: value [7536,7541]" dest="identifier: value [8064,8069]"/>
  <match src="): ) [96675,96676]" dest="): ) [36061,36062]"/>
  <match src="returns: returns [52480,52487]" dest="returns: returns [20604,20611]"/>
  <match src="]: ] [99606,99607]" dest="]: ] [38992,38993]"/>
  <match src="visibility [103786,103794]" dest="visibility [43172,43180]"/>
  <match src="event: event [88682,88687]" dest="event: event [75872,75877]"/>
  <match src="identifier: Decimal [64842,64849]" dest="identifier: Decimal [65876,65883]"/>
  <match src="state_mutability [8303,8307]" dest="state_mutability [8831,8835]"/>
  <match src="primitive_type [96575,96579]" dest="primitive_type [35961,35965]"/>
  <match src="parameter [9742,9756]" dest="parameter [10270,10284]"/>
  <match src="state_mutability [44427,44431]" dest="state_mutability [14524,14528]"/>
  <match src="visibility [46369,46377]" dest="visibility [16466,16474]"/>
  <match src="bool: bool [61885,61889]" dest="bool: bool [26940,26944]"/>
  <match src="identifier: sender [53233,53239]" dest="identifier: sender [21357,21363]"/>
  <match src="): ) [92433,92434]" dest="): ) [31819,31820]"/>
  <match src="string_literal [48673,48692]" dest="string_literal [64247,64284]"/>
  <match src="identifier: account [101164,101171]" dest="identifier: account [40550,40557]"/>
  <match src="=: = [101565,101566]" dest="=: = [40951,40952]"/>
  <match src="parameter [6893,6904]" dest="parameter [7421,7432]"/>
  <match src="state_mutability [52923,52927]" dest="state_mutability [21047,21051]"/>
  <match src="identifier: self [8806,8810]" dest="identifier: self [9334,9338]"/>
  <match src="identifier: coupons [100679,100686]" dest="identifier: coupons [40065,40072]"/>
  <match src="(: ( [91935,91936]" dest="(: ( [31321,31322]"/>
  <match src="primitive_type [31408,31412]" dest="primitive_type [49120,49124]"/>
  <match src="identifier: COMMA [32472,32477]" dest="identifier: COMMA [50184,50189]"/>
  <match src="member_expression [100260,100291]" dest="member_expression [39646,39677]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [43058,43077]" dest="identifier: SUPPLY_CHANGE_LIMIT [13155,13174]"/>
  <match src="): ) [80423,80424]" dest="): ) [71557,71558]"/>
  <match src="identifier: D256 [44298,44302]" dest="identifier: D256 [14395,14399]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [89756,90436]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [76946,77626]"/>
  <match src="primitive_type [44441,44448]" dest="primitive_type [14538,14545]"/>
  <match src="state_variable_declaration [88417,88539]" dest="state_variable_declaration [75607,75729]"/>
  <match src="call_expression [83632,83671]" dest="call_expression [78806,78936]"/>
  <match src=".: . [100318,100319]" dest=".: . [39704,39705]"/>
  <match src="(: ( [9495,9496]" dest="(: ( [10023,10024]"/>
  <match src="memory: memory [35823,35829]" dest="memory: memory [53535,53541]"/>
  <match src=".: . [102926,102927]" dest=".: . [42312,42313]"/>
  <match src="state_mutability [92412,92416]" dest="state_mutability [31798,31802]"/>
  <match src="identifier: reason [98715,98721]" dest="identifier: reason [38101,38107]"/>
  <match src="(: ( [95227,95228]" dest="(: ( [34613,34614]"/>
  <match src="assignment_expression [103161,103205]" dest="assignment_expression [42547,42591]"/>
  <match src="view: view [92137,92141]" dest="view: view [31523,31527]"/>
  <match src=",: , [101905,101906]" dest=",: , [41291,41292]"/>
  <match src="primitive_type [355,362]" dest="primitive_type [883,890]"/>
  <match src="identifier: ASCII_ZERO [34490,34500]" dest="identifier: ASCII_ZERO [52202,52212]"/>
  <match src="state_mutability [46576,46580]" dest="state_mutability [16673,16677]"/>
  <match src="identifier: _state [102879,102885]" dest="identifier: _state [42265,42271]"/>
  <match src="array_access [92972,92996]" dest="array_access [32358,32382]"/>
  <match src="identifier: Status [85922,85928]" dest="identifier: Status [27713,27719]"/>
  <match src=":: : [7120,7121]" dest=":: : [7648,7649]"/>
  <match src="identifier: bonded [91771,91777]" dest="identifier: bonded [31157,31163]"/>
  <match src="call_expression [99352,99385]" dest="call_expression [38738,38771]"/>
  <match src="identifier: Fluid [106036,106041]" dest="identifier: Fluid [69180,69185]"/>
  <match src="returns: returns [92033,92040]" dest="returns: returns [31419,31426]"/>
  <match src="{: { [9502,9503]" dest="{: { [10030,10031]"/>
  <match src=",: , [99420,99421]" dest=",: , [38806,38807]"/>
  <match src="return: return [6185,6191]" dest="return: return [6713,6719]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [11542,11614]" dest="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [22843,22915]"/>
  <match src="(: ( [44344,44345]" dest="(: ( [14441,14442]"/>
  <match src="identifier: epoch [93877,93882]" dest="identifier: epoch [33263,33268]"/>
  <match src="identifier: self [7806,7810]" dest="identifier: self [8334,8338]"/>
  <match src="=: = [99011,99012]" dest="=: = [38397,38398]"/>
  <match src="emit_statement [79522,79554]" dest="emit_statement [71060,71092]"/>
  <match src=".: . [87174,87175]" dest=".: . [28965,28966]"/>
  <match src="}: } [87348,87349]" dest="}: } [29139,29140]"/>
  <match src="returns: returns [92550,92557]" dest="returns: returns [31936,31943]"/>
  <match src=".: . [98524,98525]" dest=".: . [37910,37911]"/>
  <match src="call_argument [99378,99384]" dest="call_argument [38764,38770]"/>
  <match src="): ) [54017,54018]" dest="): ) [22141,22142]"/>
  <match src=",: , [19685,19686]" dest=",: , [63830,63831]"/>
  <match src="return_statement [859,910]" dest="return_statement [1387,1438]"/>
  <match src="event_paramater [53241,53253]" dest="event_paramater [21365,21377]"/>
  <match src="uint256: uint256 [36558,36565]" dest="uint256: uint256 [54270,54277]"/>
  <match src="uint256: uint256 [41958,41965]" dest="uint256: uint256 [12055,12062]"/>
  <match src="state_variable_declaration [27534,27565]" dest="state_variable_declaration [45246,45277]"/>
  <match src="}: } [8015,8016]" dest="}: } [8543,8544]"/>
  <match src="type_name [93436,93443]" dest="type_name [32822,32829]"/>
  <match src="return_type_definition [45937,45966]" dest="return_type_definition [16034,16063]"/>
  <match src="contract_body [41275,46641]" dest="contract_body [11372,16738]"/>
  <match src="&gt;: &gt; [85199,85200]" dest="&gt;: &gt; [74527,74528]"/>
  <match src=",: , [460,461]" dest=",: , [988,989]"/>
  <match src="comment: // populate the most-significant character [35411,35453]" dest="comment: // populate the most-significant character [53123,53165]"/>
  <match src="(: ( [7975,7976]" dest="(: ( [8503,8504]"/>
  <match src="user_defined_type [9297,9301]" dest="user_defined_type [9825,9829]"/>
  <match src="return: return [10102,10108]" dest="return: return [10630,10636]"/>
  <match src="member_expression [79658,79668]" dest="member_expression [83080,83090]"/>
  <match src="?: ? [10127,10128]" dest="?: ? [10655,10656]"/>
  <match src="]: ] [102095,102096]" dest="]: ] [41481,41482]"/>
  <match src="return_statement [1988,1997]" dest="return_statement [2516,2525]"/>
  <match src="parameter [93747,93754]" dest="parameter [33133,33140]"/>
  <match src="type_name [95527,95534]" dest="type_name [34913,34920]"/>
  <match src="identifier: provider [91462,91470]" dest="identifier: provider [30848,30856]"/>
  <match src="identifier: account [99887,99894]" dest="identifier: account [39273,39280]"/>
  <match src="primitive_type [100190,100197]" dest="primitive_type [39576,39583]"/>
  <match src="): ) [65963,65964]" dest="): ) [62466,62467]"/>
  <match src="): ) [98952,98953]" dest="): ) [38338,38339]"/>
  <match src="number_literal: 5e15 [42449,42453]" dest="number_literal: 5e15 [12546,12550]"/>
  <match src="internal: internal [30102,30110]" dest="internal: internal [47814,47822]"/>
  <match src="function_definition [97942,98098]" dest="function_definition [37328,37484]"/>
  <match src="type_name [91834,91841]" dest="type_name [31220,31227]"/>
  <match src="uint256: uint256 [86361,86368]" dest="uint256: uint256 [28152,28159]"/>
  <match src="[: [ [95934,95935]" dest="[: [ [35320,35321]"/>
  <match src="identifier: msg [81226,81229]" dest="identifier: msg [78974,78977]"/>
  <match src="user_defined_type [91529,91536]" dest="user_defined_type [30915,30922]"/>
  <match src="identifier: tokenB [77296,77302]" dest="identifier: candidate [79944,79953]"/>
  <match src="identifier: D256 [8794,8798]" dest="identifier: D256 [9322,9326]"/>
  <match src="(: ( [83529,83530]" dest="(: ( [78300,78301]"/>
  <match src="call_argument [79748,79753]" dest="call_argument [71295,71300]"/>
  <match src="user_defined_type [86700,86704]" dest="user_defined_type [28491,28495]"/>
  <match src="): ) [52313,52314]" dest="): ) [20437,20438]"/>
  <match src="identifier: value [6941,6946]" dest="identifier: value [7469,7474]"/>
  <match src=".: . [8754,8755]" dest=".: . [9282,9283]"/>
  <match src="}: } [87302,87303]" dest="}: } [29093,29094]"/>
  <match src="(: ( [6788,6789]" dest="(: ( [7316,7317]"/>
  <match src="boolean_literal [97924,97929]" dest="boolean_literal [37310,37315]"/>
  <match src="(: ( [13397,13398]" dest="(: ( [24698,24699]"/>
  <match src="): ) [30436,30437]" dest="): ) [48148,48149]"/>
  <match src="state_variable_declaration [87326,87347]" dest="state_variable_declaration [29117,29138]"/>
  <match src="call_argument [82197,82207]" dest="call_argument [78311,78321]"/>
  <match src="assignment_expression [34215,34224]" dest="assignment_expression [51927,51936]"/>
  <match src="call_expression [28448,28472]" dest="call_expression [46160,46184]"/>
  <match src="type_name [11925,11932]" dest="type_name [23226,23233]"/>
  <match src="type_name [96025,96032]" dest="type_name [35411,35418]"/>
  <match src="if: if [29549,29551]" dest="if: if [47261,47263]"/>
  <match src="array_access [102592,102617]" dest="array_access [41978,42003]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [3570,4003]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4098,4531]"/>
  <match src="return_type_definition [61927,61944]" dest="return_type_definition [26982,26999]"/>
  <match src="identifier: epochTime [93974,93983]" dest="identifier: epochTime [33360,33369]"/>
  <match src="==: == [1968,1970]" dest="==: == [2496,2498]"/>
  <match src="member_expression [99714,99728]" dest="member_expression [39100,39114]"/>
  <match src="primitive_type [25704,25711]" dest="primitive_type [60569,60576]"/>
  <match src="address: address [51430,51437]" dest="address: address [60853,60860]"/>
  <match src="memory: memory [8442,8448]" dest="memory: memory [8970,8976]"/>
  <match src="internal: internal [7372,7380]" dest="internal: internal [7900,7908]"/>
  <match src=".: . [94843,94844]" dest=".: . [34229,34230]"/>
  <match src="state_mutability [826,830]" dest="state_mutability [1354,1358]"/>
  <match src="uint256: uint256 [28270,28277]" dest="uint256: uint256 [45982,45989]"/>
  <match src="function: function [91894,91902]" dest="function: function [31280,31288]"/>
  <match src="{: { [86787,86788]" dest="{: { [28578,28579]"/>
  <match src="member_expression [9867,9892]" dest="member_expression [10395,10420]"/>
  <match src="identifier: mod [4092,4095]" dest="identifier: mod [4620,4623]"/>
  <match src="indexed: indexed [53277,53284]" dest="indexed: indexed [21401,21408]"/>
  <match src="(: ( [89185,89186]" dest="(: ( [76375,76376]"/>
  <match src="): ) [32445,32446]" dest="): ) [50157,50158]"/>
  <match src="): ) [96363,96364]" dest="): ) [35749,35750]"/>
  <match src="assignment_expression [35904,35939]" dest="assignment_expression [53616,53651]"/>
  <match src="return: return [43618,43624]" dest="return: return [13715,13721]"/>
  <match src="number_literal: 65 [36289,36291]" dest="number_literal: 65 [54001,54003]"/>
  <match src="primitive_type [104485,104492]" dest="primitive_type [43871,43878]"/>
  <match src="identifier: reject [104359,104365]" dest="identifier: reject [43745,43751]"/>
  <match src="call_argument [73218,73224]" dest="call_argument [55786,55792]"/>
  <match src="type_name [2639,2646]" dest="type_name [3167,3174]"/>
  <match src="function_definition [7154,7316]" dest="function_definition [7682,7844]"/>
  <match src="visibility [95870,95876]" dest="visibility [35256,35262]"/>
  <match src="{: { [102000,102001]" dest="{: { [41386,41387]"/>
  <match src="type_name [79106,79113]" dest="type_name [70494,70501]"/>
  <match src="parameter [1680,1689]" dest="parameter [2208,2217]"/>
  <match src="(: ( [30427,30428]" dest="(: ( [48139,48140]"/>
  <match src="identifier: epoch [95236,95241]" dest="identifier: epoch [34622,34627]"/>
  <match src="identifier: mul [8241,8244]" dest="identifier: mul [8769,8772]"/>
  <match src="(: ( [32146,32147]" dest="(: ( [49858,49859]"/>
  <match src="identifier: b [4795,4796]" dest="identifier: b [5323,5324]"/>
  <match src="=: = [71402,71403]" dest="=: = [81752,81753]"/>
  <match src="}: } [28728,28729]" dest="}: } [46440,46441]"/>
  <match src="call_argument [56619,56634]" dest="call_argument [72883,72890]"/>
  <match src="identifier: Account [106021,106028]" dest="identifier: Account [69165,69172]"/>
  <match src="if_statement [28329,28729]" dest="if_statement [46041,46441]"/>
  <match src="identifier: D256 [9128,9132]" dest="identifier: D256 [9656,9660]"/>
  <match src="function: function [2581,2589]" dest="function: function [3109,3117]"/>
  <match src="): ) [88727,88728]" dest="): ) [75917,75918]"/>
  <match src=".: . [100911,100912]" dest=".: . [40297,40298]"/>
  <match src="): ) [44688,44689]" dest="): ) [14785,14786]"/>
  <match src="{: { [51082,51083]" dest="{: { [64481,64482]"/>
  <match src="identifier: msg [81083,81086]" dest="identifier: msg [72138,72141]"/>
  <match src="uint256: uint256 [97867,97874]" dest="uint256: uint256 [37253,37260]"/>
  <match src="function_definition [102319,102421]" dest="function_definition [41705,41807]"/>
  <match src="identifier: staged [100067,100073]" dest="identifier: staged [39453,39459]"/>
  <match src="identifier: msg [80708,80711]" dest="identifier: msg [72859,72862]"/>
  <match src="function: function [43449,43457]" dest="function: function [13546,13554]"/>
  <match src="identifier: sender [80292,80298]" dest="identifier: sender [71509,71515]"/>
  <match src="primitive_type [34090,34095]" dest="primitive_type [51802,51807]"/>
  <match src="(: ( [81082,81083]" dest="(: ( [72137,72138]"/>
  <match src="return_statement [9860,9906]" dest="return_statement [10388,10434]"/>
  <match src="call_expression [63498,63616]" dest="call_expression [81365,81491]"/>
  <match src="memory: memory [99544,99550]" dest="memory: memory [38930,38936]"/>
  <match src="identifier: shift [36432,36437]" dest="identifier: shift [54144,54149]"/>
  <match src="call_argument [29208,29216]" dest="call_argument [46920,46928]"/>
  <match src="call_expression [30253,30277]" dest="call_expression [47965,47989]"/>
  <match src="identifier: candidates [103590,103600]" dest="identifier: candidates [42976,42986]"/>
  <match src="call_expression [7122,7139]" dest="call_expression [7650,7667]"/>
  <match src=",: , [27812,27813]" dest=",: , [45524,45525]"/>
  <match src="visibility [98962,98970]" dest="visibility [38348,38356]"/>
  <match src="identifier: incrementTotalRedeemable [98744,98768]" dest="identifier: incrementTotalRedeemable [38130,38154]"/>
  <match src="uint256: uint256 [45438,45445]" dest="uint256: uint256 [15535,15542]"/>
  <match src="call_argument [79862,79872]" dest="call_argument [71387,71397]"/>
  <match src="return: return [43517,43523]" dest="return: return [13614,13620]"/>
  <match src="type_name [103126,103133]" dest="type_name [42512,42519]"/>
  <match src="function: function [90905,90913]" dest="function: function [30291,30299]"/>
  <match src="return_type_definition [45548,45565]" dest="return_type_definition [15645,15662]"/>
  <match src="parameter [52363,52368]" dest="parameter [20487,20492]"/>
  <match src="identifier: Sync [53480,53484]" dest="identifier: Sync [21604,21608]"/>
  <match src="number_literal: 0 [103033,103034]" dest="number_literal: 0 [42419,42420]"/>
  <match src="(: ( [52809,52810]" dest="(: ( [20933,20934]"/>
  <match src="event: event [52045,52050]" dest="event: event [20169,20174]"/>
  <match src="user_defined_type [64842,64854]" dest="user_defined_type [65876,65888]"/>
  <match src="parameter [95544,95561]" dest="parameter [34930,34947]"/>
  <match src="view: view [54028,54032]" dest="view: view [22152,22156]"/>
  <match src="identifier: RPAREN [27637,27643]" dest="identifier: RPAREN [45349,45355]"/>
  <match src="identifier: this [47978,47982]" dest="identifier: this [55712,55716]"/>
  <match src="call_expression [29626,29906]" dest="call_expression [47338,47618]"/>
  <match src="identifier: owner [21848,21853]" dest="identifier: dollarAmount [62491,62503]"/>
  <match src="visibility [80250,80258]" dest="visibility [71447,71455]"/>
  <match src="identifier: notPaused [80259,80268]" dest="identifier: onlyFrozenOrFluid [71456,71473]"/>
  <match src="): ) [1373,1374]" dest="): ) [1901,1902]"/>
  <match src="identifier: accounts [99259,99267]" dest="identifier: accounts [38645,38653]"/>
  <match src="return: return [44574,44580]" dest="return: return [14671,14677]"/>
  <match src=".: . [82555,82556]" dest=".: . [72651,72652]"/>
  <match src="parameter [28855,28871]" dest="parameter [46567,46583]"/>
  <match src="identifier: staged [85989,85995]" dest="identifier: staged [27780,27786]"/>
  <match src="function_body [98190,98264]" dest="function_body [37576,37650]"/>
  <match src="identifier: amount1Out [53424,53434]" dest="identifier: amount1Out [21548,21558]"/>
  <match src="type_name [45779,45791]" dest="type_name [15876,15888]"/>
  <match src="primitive_type [46590,46597]" dest="primitive_type [16687,16694]"/>
  <match src="type_name [86129,86136]" dest="type_name [27920,27927]"/>
  <match src="}: } [86413,86414]" dest="}: } [28204,28205]"/>
  <match src="return_type_definition [46276,46293]" dest="return_type_definition [16373,16390]"/>
  <match src="identifier: _state [98393,98399]" dest="identifier: _state [37779,37785]"/>
  <match src="(: ( [34894,34895]" dest="(: ( [52606,52607]"/>
  <match src="(: ( [93882,93883]" dest="(: ( [33268,33269]"/>
  <match src=",: , [28260,28261]" dest=",: , [45972,45973]"/>
  <match src="): ) [29056,29057]" dest="): ) [46768,46769]"/>
  <match src="identifier: length [34251,34257]" dest="identifier: length [51963,51969]"/>
  <match src="type_name [101964,101970]" dest="type_name [41350,41356]"/>
  <match src="returns: returns [53793,53800]" dest="returns: returns [21917,21924]"/>
  <match src="identifier: value [8179,8184]" dest="identifier: value [8707,8712]"/>
  <match src="): ) [29346,29347]" dest="): ) [47058,47059]"/>
  <match src="function: function [93378,93386]" dest="function: function [32764,32772]"/>
  <match src="address: address [30710,30717]" dest="address: address [48422,48429]"/>
  <match src="}: } [85177,85178]" dest="}: } [74505,74506]"/>
  <match src="): ) [95241,95242]" dest="): ) [34627,34628]"/>
  <match src="type_cast_expression [35916,35939]" dest="type_cast_expression [53628,53651]"/>
  <match src="identifier: reason [98634,98640]" dest="identifier: reason [38020,38026]"/>
  <match src="uint256: uint256 [11944,11951]" dest="uint256: uint256 [23245,23252]"/>
  <match src="parameter [94294,94301]" dest="parameter [33680,33687]"/>
  <match src="member_expression [102530,102569]" dest="member_expression [41916,41955]"/>
  <match src="type_name [101940,101947]" dest="type_name [41326,41333]"/>
  <match src="uint256: uint256 [4021,4028]" dest="uint256: uint256 [4549,4556]"/>
  <match src="(: ( [36715,36716]" dest="(: ( [54427,54428]"/>
  <match src="state_variable_declaration [42467,42526]" dest="state_variable_declaration [12564,12623]"/>
  <match src="if_statement [7438,7489]" dest="if_statement [7966,8017]"/>
  <match src="call_struct_argument [43829,43857]" dest="call_struct_argument [13926,13954]"/>
  <match src="(: ( [91003,91004]" dest="(: ( [30389,30390]"/>
  <match src="(: ( [28332,28333]" dest="(: ( [46044,46045]"/>
  <match src="&quot;: &quot; [21869,21870]" dest="&quot;: &quot; [62515,62516]"/>
  <match src=".: . [104531,104532]" dest=".: . [43917,43918]"/>
  <match src="string_literal [90775,90802]" dest="string_literal [30161,30188]"/>
  <match src="identifier: D256 [65669,65673]" dest="identifier: D256 [67734,67738]"/>
  <match src="comment: // 3 cycles [42256,42267]" dest="comment: // 3 cycles [12353,12364]"/>
  <match src="pure: pure [9991,9995]" dest="pure: pure [10519,10523]"/>
  <match src="identifier: self [8575,8579]" dest="identifier: self [9103,9107]"/>
  <match src="call_expression [104059,104132]" dest="call_expression [43445,43518]"/>
  <match src="parameter [49757,49761]" dest="parameter [26140,26144]"/>
  <match src=".: . [65696,65697]" dest=".: . [81761,81762]"/>
  <match src=",: , [22071,22072]" dest=",: , [63733,63734]"/>
  <match src="primitive_type [91004,91011]" dest="primitive_type [30390,30397]"/>
  <match src="member_expression [99943,99974]" dest="member_expression [39329,39360]"/>
  <match src="uint256: uint256 [32058,32065]" dest="uint256: uint256 [49770,49777]"/>
  <match src="bytes32: bytes32 [52873,52880]" dest="bytes32: bytes32 [20997,21004]"/>
  <match src="type_name [100511,100518]" dest="type_name [39897,39904]"/>
  <match src="identifier: Decimal [45779,45786]" dest="identifier: Decimal [15876,15883]"/>
  <match src="function: function [13376,13384]" dest="function: function [24677,24685]"/>
  <match src="identifier: payloadA [32437,32445]" dest="identifier: payloadA [50149,50157]"/>
  <match src="): ) [92566,92567]" dest="): ) [31952,31953]"/>
  <match src=",: , [28632,28633]" dest=",: , [46344,46345]"/>
  <match src="bytes32: bytes32 [96722,96729]" dest="bytes32: bytes32 [36108,36115]"/>
  <match src="{: { [46001,46002]" dest="{: { [16098,16099]"/>
  <match src="return_statement [92061,92094]" dest="return_statement [31447,31480]"/>
  <match src="): ) [31757,31758]" dest="): ) [49469,49470]"/>
  <match src="type_name [103735,103742]" dest="type_name [43121,43128]"/>
  <match src="): ) [49679,49680]" dest="): ) [26062,26063]"/>
  <match src="uint: uint [54042,54046]" dest="uint: uint [22166,22170]"/>
  <match src="=: = [35347,35348]" dest="=: = [53059,53060]"/>
  <match src="call_argument [81874,81875]" dest="call_argument [72456,72457]"/>
  <match src="number_literal: 0x0000000000000000000000000000000000000000 [43362,43404]" dest="number_literal: 0x0000000000000000000000000000000000000000 [13459,13501]"/>
  <match src="call_expression [76722,76730]" dest="call_expression [58340,58348]"/>
  <match src="internal: internal [10930,10938]" dest="internal: internal [55424,55432]"/>
  <match src="&quot;: &quot; [48691,48692]" dest="&quot;: &quot; [64283,64284]"/>
  <match src="): ) [95898,95899]" dest="): ) [35284,35285]"/>
  <match src="): ) [9252,9253]" dest="): ) [9780,9781]"/>
  <match src="member_expression [81850,81860]" dest="member_expression [72432,72442]"/>
  <match src="type_name [8437,8441]" dest="type_name [8965,8969]"/>
  <match src="identifier: reason [101074,101080]" dest="identifier: reason [40460,40466]"/>
  <match src="type_name [68382,68389]" dest="type_name [65732,65739]"/>
  <match src="identifier: accounts [99590,99598]" dest="identifier: accounts [38976,38984]"/>
  <match src="identifier: sender [77111,77117]" dest="identifier: sender [82954,82960]"/>
  <match src="uint256: uint256 [13936,13943]" dest="uint256: uint256 [25237,25244]"/>
  <match src=".: . [81444,81445]" dest=".: . [72727,72728]"/>
  <match src="struct: struct [86771,86777]" dest="struct: struct [28562,28568]"/>
  <match src="uint256: uint256 [400,407]" dest="uint256: uint256 [928,935]"/>
  <match src="uint256: uint256 [86967,86974]" dest="uint256: uint256 [28758,28765]"/>
  <match src="user_defined_type [8070,8074]" dest="user_defined_type [8598,8602]"/>
  <match src="member_expression [98393,98414]" dest="member_expression [37779,37800]"/>
  <match src="type_name [53092,53097]" dest="type_name [21216,21221]"/>
  <match src="identifier: FILE [83656,83660]" dest="identifier: FILE [78901,78905]"/>
  <match src="(: ( [44415,44416]" dest="(: ( [14512,14513]"/>
  <match src="primitive_type [86608,86615]" dest="primitive_type [28399,28406]"/>
  <match src="function: function [52887,52895]" dest="function: function [21011,21019]"/>
  <match src="): ) [44241,44242]" dest="): ) [14338,14339]"/>
  <match src="state_variable_declaration [41297,41335]" dest="state_variable_declaration [11394,11432]"/>
  <match src="internal: internal [104260,104268]" dest="internal: internal [43646,43654]"/>
  <match src="emit_statement [80903,80948]" dest="emit_statement [72956,73012]"/>
  <match src="event_paramater [88697,88727]" dest="event_paramater [75887,75917]"/>
  <match src="): ) [79629,79630]" dest="): ) [72052,72053]"/>
  <match src="contract_body [114,4805]" dest="contract_body [642,5333]"/>
  <match src="primitive_type [27578,27584]" dest="primitive_type [45290,45296]"/>
  <match src="(: ( [50688,50689]" dest="(: ( [55390,55391]"/>
  <match src="): ) [36735,36736]" dest="): ) [54447,54448]"/>
  <match src="comment: /* Epoch */ [41887,41898]" dest="comment: /* Epoch */ [11984,11995]"/>
  <match src="identifier: value [6561,6566]" dest="identifier: value [7089,7094]"/>
  <match src="member_expression [94336,94376]" dest="member_expression [33722,33762]"/>
  <match src="address: address [86083,86090]" dest="address: address [27874,27881]"/>
  <match src="member_expression [91068,91083]" dest="member_expression [30454,30469]"/>
  <match src="identifier: Provide [82779,82786]" dest="identifier: Commit [80793,80799]"/>
  <match src="call_argument [99076,99082]" dest="call_argument [38462,38468]"/>
  <match src="primitive_type [36710,36715]" dest="primitive_type [54422,54427]"/>
  <match src="memory: memory [7172,7178]" dest="memory: memory [7700,7706]"/>
  <match src="yul_path [85168,85175]" dest="yul_path [74496,74503]"/>
  <match src="type_name [12293,12300]" dest="type_name [23594,23601]"/>
  <match src="type_cast_expression [47970,47983]" dest="type_cast_expression [55704,55717]"/>
  <match src="type_name [68433,68440]" dest="type_name [65770,65777]"/>
  <match src="primitive_type [52363,52368]" dest="primitive_type [20487,20492]"/>
  <match src="uint256: uint256 [92578,92585]" dest="uint256: uint256 [31964,31971]"/>
  <match src="&quot;: &quot; [48810,48811]" dest="&quot;: &quot; [55794,55795]"/>
  <match src="identifier: b [8467,8468]" dest="identifier: b [8995,8996]"/>
  <match src="=: = [41564,41565]" dest="=: = [11661,11662]"/>
  <match src="number_literal: 0 [1995,1996]" dest="number_literal: 0 [2523,2524]"/>
  <match src="(: ( [29686,29687]" dest="(: ( [47398,47399]"/>
  <match src="member_expression [100771,100784]" dest="member_expression [40157,40170]"/>
  <match src="address: address [91004,91011]" dest="address: address [30390,30397]"/>
  <match src="event_paramater [51492,51496]" dest="event_paramater [60911,60932]"/>
  <match src="}: } [28169,28170]" dest="}: } [45881,45882]"/>
  <match src="number_literal: 0 [4758,4759]" dest="number_literal: 0 [5286,5287]"/>
  <match src="call_expression [19802,19873]" dest="call_expression [64025,64138]"/>
  <match src=".: . [98546,98547]" dest=".: . [37932,37933]"/>
  <match src="{: { [28340,28341]" dest="{: { [46052,46053]"/>
  <match src="[: [ [95679,95680]" dest="[: [ [35065,35066]"/>
  <match src=".: . [102550,102551]" dest=".: . [41936,41937]"/>
  <match src="call_expression [45988,46030]" dest="call_expression [16085,16127]"/>
  <match src="member_expression [9633,9643]" dest="member_expression [10161,10171]"/>
  <match src="): ) [1732,1733]" dest="): ) [2260,2261]"/>
  <match src="]: ] [99641,99642]" dest="]: ] [39027,39028]"/>
  <match src="assignment_expression [35386,35396]" dest="assignment_expression [53098,53108]"/>
  <match src="binary_expression [93240,93266]" dest="binary_expression [32626,32652]"/>
  <match src="parameter [21788,21803]" dest="parameter [63459,63474]"/>
  <match src="}: } [103454,103455]" dest="}: } [42840,42841]"/>
  <match src="ternary_expression [93240,93359]" dest="ternary_expression [32626,32745]"/>
  <match src="internal: internal [30789,30797]" dest="internal: internal [48501,48509]"/>
  <match src="member_expression [48774,48786]" dest="member_expression [70724,70736]"/>
  <match src="memory: memory [8522,8528]" dest="memory: memory [9050,9056]"/>
  <match src="identifier: initializer [107113,107124]" dest="identifier: initializer [82888,82899]"/>
  <match src="view: view [91922,91926]" dest="view: view [31308,31312]"/>
  <match src="visibility [8996,9004]" dest="visibility [9524,9532]"/>
  <match src="internal: internal [8835,8843]" dest="internal: internal [9363,9371]"/>
  <match src="pure: pure [43585,43589]" dest="pure: pure [13682,13686]"/>
  <match src="type_name [79050,79057]" dest="type_name [70438,70445]"/>
  <match src="identifier: amount [103650,103656]" dest="identifier: amount [43036,43042]"/>
  <match src="ternary_expression [80444,80549]" dest="ternary_expression [71545,71663]"/>
  <match src="identifier: amount [73096,73102]" dest="identifier: amount [55925,55931]"/>
  <match src="type_name [92426,92433]" dest="type_name [31812,31819]"/>
  <match src="call_argument [81356,81361]" dest="call_argument [72168,72189]"/>
  <match src="call_struct_argument [7977,8007]" dest="call_struct_argument [8505,8535]"/>
  <match src=",: , [82235,82236]" dest=",: , [80187,80188]"/>
  <match src="): ) [96268,96269]" dest="): ) [35654,35655]"/>
  <match src="state_variable_declaration [43033,43085]" dest="state_variable_declaration [13130,13182]"/>
  <match src=".: . [95791,95792]" dest=".: . [35177,35178]"/>
  <match src="(: ( [34643,34644]" dest="(: ( [52355,52356]"/>
  <match src="returns: returns [96429,96436]" dest="returns: returns [35815,35822]"/>
  <match src=",: , [53384,53385]" dest=",: , [21508,21509]"/>
  <match src="parameter [11678,11685]" dest="parameter [22979,22986]"/>
  <match src="identifier: D256 [8551,8555]" dest="identifier: D256 [9079,9083]"/>
  <match src="member_expression [101243,101256]" dest="member_expression [40629,40642]"/>
  <match src="call_expression [79965,79973]" dest="call_expression [71187,71195]"/>
  <match src="identifier: b [10051,10052]" dest="identifier: b [10579,10580]"/>
  <match src="primitive_type [68433,68440]" dest="primitive_type [65770,65777]"/>
  <match src="user_defined_type [9937,9941]" dest="user_defined_type [10465,10469]"/>
  <match src="(: ( [6547,6548]" dest="(: ( [7075,7076]"/>
  <match src="uint: uint [52780,52784]" dest="uint: uint [20904,20908]"/>
  <match src="type_name [92787,92794]" dest="type_name [32173,32180]"/>
  <match src="function: function [54002,54010]" dest="function: function [22126,22134]"/>
  <match src="{: { [9387,9388]" dest="{: { [9915,9916]"/>
  <match src="function_body [45447,45493]" dest="function_body [15544,15590]"/>
  <match src="expression_statement [79641,79677]" dest="expression_statement [83068,83125]"/>
  <match src=",: , [43901,43902]" dest=",: , [13998,13999]"/>
  <match src="call_expression [100897,100931]" dest="call_expression [40283,40317]"/>
  <match src=",: , [92802,92803]" dest=",: , [32188,32189]"/>
  <match src="): ) [51321,51322]" dest="): ) [64665,64666]"/>
  <match src="primitive_type [70470,70474]" dest="primitive_type [81639,81643]"/>
  <match src=",: , [48802,48803]" dest=",: , [55792,55793]"/>
  <match src="): ) [89151,89152]" dest="): ) [76341,76342]"/>
  <match src="call_expression [446,492]" dest="call_expression [974,1020]"/>
  <match src="{: { [85971,85972]" dest="{: { [27762,27763]"/>
  <match src="): ) [52493,52494]" dest="): ) [20617,20618]"/>
  <match src=",: , [81860,81861]" dest=",: , [72442,72443]"/>
  <match src="identifier: owner [53041,53046]" dest="identifier: owner [21165,21170]"/>
  <match src="parameter [94900,94913]" dest="parameter [34286,34299]"/>
  <match src="identifier: self [7290,7294]" dest="identifier: self [7818,7822]"/>
  <match src="identifier: value [48087,48092]" dest="identifier: value [72008,72013]"/>
  <match src="call_expression [80878,80892]" dest="call_expression [56359,56373]"/>
  <match src="event_definition [78900,78952]" dest="event_definition [82790,82853]"/>
  <match src="visibility [104260,104268]" dest="visibility [43646,43654]"/>
  <match src="member_expression [6951,6956]" dest="member_expression [7479,7484]"/>
  <match src=".: . [99967,99968]" dest=".: . [39353,39354]"/>
  <match src="identifier: Provider [86778,86786]" dest="identifier: Provider [28569,28577]"/>
  <match src="function_body [5968,6008]" dest="function_body [6496,6536]"/>
  <match src=",: , [66541,66542]" dest=",: , [72368,72369]"/>
  <match src="expression_statement [63498,63617]" dest="expression_statement [81365,81492]"/>
  <match src="number_literal: 0 [91345,91346]" dest="number_literal: 0 [30731,30732]"/>
  <match src="): ) [51079,51080]" dest="): ) [64469,64470]"/>
  <match src=".: . [10990,10991]" dest=".: . [64386,64387]"/>
  <match src="visibility [93710,93716]" dest="visibility [33096,33102]"/>
  <match src="visibility [11960,11968]" dest="visibility [23261,23269]"/>
  <match src="return_statement [6075,6102]" dest="return_statement [6603,6630]"/>
  <match src="comment: // ': ' [27522,27529]" dest="comment: // ': ' [45234,45241]"/>
  <match src="type_name [52451,52458]" dest="type_name [20575,20582]"/>
  <match src=".: . [99720,99721]" dest=".: . [39106,39107]"/>
  <match src="(: ( [91428,91429]" dest="(: ( [30814,30815]"/>
  <match src="function_definition [99451,99839]" dest="function_definition [38837,39225]"/>
  <match src="type_name [45438,45445]" dest="type_name [15535,15542]"/>
  <match src="identifier: amount [17019,17025]" dest="identifier: amount [59467,59473]"/>
  <match src="primitive_type [49725,49732]" dest="primitive_type [26108,26115]"/>
  <match src="(: ( [7166,7167]" dest="(: ( [7694,7695]"/>
  <match src="identifier: deadline [53082,53090]" dest="identifier: deadline [21206,21214]"/>
  <match src="type_name [76825,76832]" dest="type_name [66393,66400]"/>
  <match src="interface: interface [11387,11396]" dest="interface: interface [22688,22697]"/>
  <match src="identifier: balance [92075,92082]" dest="identifier: balance [31461,31468]"/>
  <match src="identifier: reason [6964,6970]" dest="identifier: reason [7492,7498]"/>
  <match src="number_literal: 17520 [42927,42932]" dest="number_literal: 17520 [13024,13029]"/>
  <match src="public: public [91136,91142]" dest="public: public [30522,30528]"/>
  <match src="return_type_definition [53678,53695]" dest="return_type_definition [21802,21819]"/>
  <match src="identifier: candidates [103551,103561]" dest="identifier: candidates [42937,42947]"/>
  <match src="internal: internal [46369,46377]" dest="internal: internal [16466,16474]"/>
  <match src=",: , [91249,91250]" dest=",: , [30635,30636]"/>
  <match src=".: . [99752,99753]" dest=".: . [39138,39139]"/>
  <match src="call_argument [89170,89177]" dest="call_argument [76360,76367]"/>
  <match src="member_expression [81963,81973]" dest="member_expression [71474,71484]"/>
  <match src="identifier: FILE [81138,81142]" dest="identifier: FILE [81300,81304]"/>
  <match src="parameter [93080,93094]" dest="parameter [32466,32480]"/>
  <match src="external: external [53968,53976]" dest="external: external [22092,22100]"/>
  <match src="call_argument [82112,82141]" dest="call_argument [80017,80032]"/>
  <match src="returns: returns [93897,93904]" dest="returns: returns [33283,33290]"/>
  <match src="state_mutability [90729,90733]" dest="state_mutability [30115,30119]"/>
  <match src="for_statement [35143,35545]" dest="for_statement [52855,53257]"/>
  <match src="internal: internal [6470,6478]" dest="internal: internal [6998,7006]"/>
  <match src="view: view [91716,91720]" dest="view: view [31102,31106]"/>
  <match src="number_literal: 1e16 [43080,43084]" dest="number_literal: 1e16 [13177,13181]"/>
  <match src="memory: memory [8100,8106]" dest="memory: memory [8628,8634]"/>
  <match src="identifier: Oracle [62639,62645]" dest="identifier: Regulator [65441,65450]"/>
  <match src="identifier: epoch [95166,95171]" dest="identifier: epoch [34552,34557]"/>
  <match src="==: == [2058,2060]" dest="==: == [2586,2588]"/>
  <match src=",: , [25190,25191]" dest=",: , [79448,79449]"/>
  <match src="&quot;: &quot; [51261,51262]" dest="&quot;: &quot; [64614,64615]"/>
  <match src="return_type_definition [94927,94944]" dest="return_type_definition [34313,34330]"/>
  <match src="return_statement [91955,91982]" dest="return_statement [31341,31368]"/>
  <match src="call_expression [21154,21222]" dest="call_expression [56236,56348]"/>
  <match src="}: } [6107,6108]" dest="}: } [6635,6636]"/>
  <match src="identifier: account [99233,99240]" dest="identifier: account [38619,38626]"/>
  <match src="identifier: Require [105974,105981]" dest="identifier: Require [69118,69125]"/>
  <match src="identifier: one [6023,6026]" dest="identifier: one [6551,6554]"/>
  <match src="}: } [87038,87039]" dest="}: } [28829,28830]"/>
  <match src="type_name [35817,35822]" dest="type_name [53529,53534]"/>
  <match src="parameter [73710,73724]" dest="parameter [56408,56422]"/>
  <match src="return_statement [94556,94579]" dest="return_statement [33942,33965]"/>
  <match src="memory: memory [9302,9308]" dest="memory: memory [9830,9836]"/>
  <match src="(: ( [6725,6726]" dest="(: ( [7253,7254]"/>
  <match src="): ) [21946,21947]" dest="): ) [63552,63553]"/>
  <match src="byte: byte [35007,35011]" dest="byte: byte [52719,52723]"/>
  <match src="&quot;: &quot; [83452,83453]" dest="&quot;: &quot; [80362,80363]"/>
  <match src="call_expression [79443,79486]" dest="call_expression [71006,71049]"/>
  <match src="call_expression [28613,28632]" dest="call_expression [46325,46344]"/>
  <match src="call_argument [28613,28632]" dest="call_argument [46325,46344]"/>
  <match src="identifier: staged [99968,99974]" dest="identifier: staged [39354,39360]"/>
  <match src="external: external [52277,52285]" dest="external: external [20401,20409]"/>
  <match src="memory: memory [52246,52252]" dest="memory: memory [20370,20376]"/>
  <match src="expression_statement [446,493]" dest="expression_statement [974,1021]"/>
  <match src="member_expression [89103,89126]" dest="member_expression [76293,76316]"/>
  <match src="visibility [13449,13457]" dest="visibility [24750,24758]"/>
  <match src="identifier: balance [101427,101434]" dest="identifier: balance [40813,40820]"/>
  <match src="primitive_type [92042,92049]" dest="primitive_type [31428,31435]"/>
  <match src="block_statement [92645,92678]" dest="block_statement [32031,32064]"/>
  <match src="expression_statement [19884,19976]" dest="expression_statement [56711,56770]"/>
  <match src="): ) [8154,8155]" dest="): ) [8682,8683]"/>
  <match src="primitive_type [9208,9212]" dest="primitive_type [9736,9740]"/>
  <match src="string [20465,20498]" dest="string [63099,63128]"/>
  <match src="call_argument [89523,89540]" dest="call_argument [76713,76730]"/>
  <match src="function_definition [5916,6008]" dest="function_definition [6444,6536]"/>
  <match src="=: = [42372,42373]" dest="=: = [12469,12470]"/>
  <match src="type_name [9496,9500]" dest="type_name [10024,10028]"/>
  <match src="primitive_type [49648,49655]" dest="primitive_type [26031,26038]"/>
  <match src="array_access [100294,100318]" dest="array_access [39680,39704]"/>
  <match src="]: ] [99275,99276]" dest="]: ] [38661,38662]"/>
  <match src="primitive_type [52574,52578]" dest="primitive_type [20698,20702]"/>
  <match src="(: ( [82586,82587]" dest="(: ( [72674,72675]"/>
  <match src="member_expression [100413,100434]" dest="member_expression [39799,39820]"/>
  <match src="identifier: reason [32362,32368]" dest="identifier: reason [50074,50080]"/>
  <match src="identifier: b [1272,1273]" dest="identifier: b [1800,1801]"/>
  <match src="type_name [43096,43103]" dest="type_name [13193,13200]"/>
  <match src="type_name [87148,87181]" dest="type_name [28939,28972]"/>
  <match src="call_expression [79965,80001]" dest="call_expression [71187,71223]"/>
  <match src="visibility [44810,44818]" dest="visibility [14907,14915]"/>
  <match src=".: . [99258,99259]" dest=".: . [38644,38645]"/>
  <match src="identifier: D256 [45996,46000]" dest="identifier: D256 [16093,16097]"/>
  <match src=".: . [94829,94830]" dest=".: . [34215,34216]"/>
  <match src="uint256: uint256 [41981,41988]" dest="uint256: uint256 [12078,12085]"/>
  <match src="parameter [94936,94943]" dest="parameter [34322,34329]"/>
  <match src="(: ( [399,400]" dest="(: ( [927,928]"/>
  <match src="(: ( [96118,96119]" dest="(: ( [35504,35505]"/>
  <match src="member_expression [79862,79872]" dest="member_expression [71387,71397]"/>
  <match src="type_name [8325,8329]" dest="type_name [8853,8857]"/>
  <match src="}: } [100115,100116]" dest="}: } [39501,39502]"/>
  <match src="[: [ [102126,102127]" dest="[: [ [41512,41513]"/>
  <match src="type_name [46490,46497]" dest="type_name [16587,16594]"/>
  <match src="member_expression [47846,47872]" dest="member_expression [55673,55694]"/>
  <match src="identifier: input [36716,36721]" dest="identifier: input [54428,54433]"/>
  <match src="): ) [82600,82601]" dest="): ) [72688,72689]"/>
  <match src="return: return [97808,97814]" dest="return: return [37194,37200]"/>
  <match src="identifier: msg [82787,82790]" dest="identifier: msg [80800,80803]"/>
  <match src="(: ( [52847,52848]" dest="(: ( [20971,20972]"/>
  <match src="identifier: candidate [103975,103984]" dest="identifier: candidate [43361,43370]"/>
  <match src="(: ( [33347,33348]" dest="(: ( [51059,51060]"/>
  <match src="primitive_type [27336,27343]" dest="primitive_type [45048,45055]"/>
  <match src=".: . [98818,98819]" dest=".: . [38204,38205]"/>
  <match src="call_struct_argument [8365,8409]" dest="call_struct_argument [8893,8937]"/>
  <match src="function_body [46401,46439]" dest="function_body [16498,16536]"/>
  <match src="primitive_type [52691,52695]" dest="primitive_type [20815,20819]"/>
  <match src="primitive_type [54042,54046]" dest="primitive_type [22166,22170]"/>
  <match src="identifier: balanceOfPhantom [81323,81339]" dest="identifier: balanceOf [72168,72177]"/>
  <match src="identifier: _state [98832,98838]" dest="identifier: _state [38218,38224]"/>
  <match src="}: } [91483,91484]" dest="}: } [30869,30870]"/>
  <match src="): ) [1301,1302]" dest="): ) [1829,1830]"/>
  <match src="): ) [75659,75660]" dest="): ) [61386,61387]"/>
  <match src="identifier: div [80600,80603]" dest="identifier: div [71664,71667]"/>
  <match src="event_definition [53474,53521]" dest="event_definition [21598,21645]"/>
  <match src="}: } [7829,7830]" dest="}: } [8357,8358]"/>
  <match src="member_expression [81570,81580]" dest="member_expression [79828,79838]"/>
  <match src="identifier: start [103190,103195]" dest="identifier: start [42576,42581]"/>
  <match src="identifier: SafeMath [69419,69427]" dest="identifier: SafeMath [55289,55297]"/>
  <match src="type_name [97788,97792]" dest="type_name [37174,37178]"/>
  <match src=".: . [100647,100648]" dest=".: . [40033,40034]"/>
  <match src="internal: internal [45907,45915]" dest="internal: internal [16004,16012]"/>
  <match src="identifier: incrementEpoch [102220,102234]" dest="identifier: incrementEpoch [41606,41620]"/>
  <match src="parameter [96698,96710]" dest="parameter [36084,36096]"/>
  <match src="}: } [86300,86301]" dest="}: } [28091,28092]"/>
  <match src="identifier: _state [101148,101154]" dest="identifier: _state [40534,40540]"/>
  <match src="(: ( [52872,52873]" dest="(: ( [20996,20997]"/>
  <match src="function: function [91686,91694]" dest="function: function [31072,31080]"/>
  <match src="member_expression [102592,102639]" dest="member_expression [41978,42025]"/>
  <match src="primitive_type [9766,9773]" dest="primitive_type [10294,10301]"/>
  <match src="visibility [54019,54027]" dest="visibility [22143,22151]"/>
  <match src="&quot;: &quot; [63588,63589]" dest="&quot;: &quot; [81467,81468]"/>
  <match src="(: ( [30852,30853]" dest="(: ( [48564,48565]"/>
  <match src="variable_declaration_statement [1384,1402]" dest="variable_declaration_statement [1912,1930]"/>
  <match src="): ) [103925,103926]" dest="): ) [43311,43312]"/>
  <match src="{: { [86433,86434]" dest="{: { [28224,28225]"/>
  <match src="(: ( [27972,27973]" dest="(: ( [45684,45685]"/>
  <match src="struct_member [86443,86458]" dest="struct_member [28234,28249]"/>
  <match src="function_body [96581,96645]" dest="function_body [35967,36031]"/>
  <match src="(: ( [53801,53802]" dest="(: ( [21925,21926]"/>
  <match src="number_literal: 0 [19748,19749]" dest="number_literal: 0 [63942,63943]"/>
  <match src="state_variable_declaration [43301,43411]" dest="state_variable_declaration [13398,13508]"/>
  <match src="): ) [96362,96363]" dest="): ) [35748,35749]"/>
  <match src="primitive_type [30003,30010]" dest="primitive_type [47715,47722]"/>
  <match src="primitive_type [65975,65982]" dest="primitive_type [71527,71534]"/>
  <match src="call_argument [8917,8918]" dest="call_argument [9445,9446]"/>
  <match src="expression_statement [103544,103658]" dest="expression_statement [42930,43044]"/>
  <match src="uint256: uint256 [92151,92158]" dest="uint256: uint256 [31537,31544]"/>
  <match src="identifier: Upgradeable [88171,88182]" dest="identifier: Upgradeable [75361,75372]"/>
  <match src="identifier: BASE [6577,6581]" dest="identifier: BASE [7105,7109]"/>
  <match src="=: = [71537,71538]" dest="=: = [67221,67222]"/>
  <match src="binary_expression [36716,36734]" dest="binary_expression [54428,54446]"/>
  <match src="assignment_expression [102879,102980]" dest="assignment_expression [42265,42366]"/>
  <match src="visibility [64181,64188]" dest="visibility [81617,81624]"/>
  <match src="call_expression [93240,93247]" dest="call_expression [32626,32633]"/>
  <match src="identifier: Frozen [93320,93326]" dest="identifier: Frozen [32706,32712]"/>
  <match src="): ) [30512,30513]" dest="): ) [48224,48225]"/>
  <match src="identifier: slot [96730,96734]" dest="identifier: slot [36116,36120]"/>
  <match src="visibility [93415,93421]" dest="visibility [32801,32807]"/>
  <match src="primitive_type [86129,86136]" dest="primitive_type [27920,27927]"/>
  <match src=".: . [82002,82003]" dest=".: . [80905,80906]"/>
  <match src="type_name [51430,51437]" dest="type_name [60853,60860]"/>
  <match src="member_expression [100389,100403]" dest="member_expression [39775,39789]"/>
  <match src="identifier: self [6810,6814]" dest="identifier: self [7338,7342]"/>
  <match src="%: % [34506,34507]" dest="%: % [52218,52219]"/>
  <match src="(: ( [6508,6509]" dest="(: ( [7036,7037]"/>
  <match src="{: { [35681,35682]" dest="{: { [53393,53394]"/>
  <match src="}: } [65907,65908]" dest="}: } [67026,67027]"/>
  <match src="memory: memory [98939,98945]" dest="memory: memory [38325,38331]"/>
  <match src="uint256: uint256 [36102,36109]" dest="uint256: uint256 [53814,53821]"/>
  <match src="uint256: uint256 [7353,7360]" dest="uint256: uint256 [7881,7888]"/>
  <match src="primitive_type [53065,53069]" dest="primitive_type [21189,21193]"/>
  <match src="(: ( [34483,34484]" dest="(: ( [52195,52196]"/>
  <match src="primitive_type [53419,53423]" dest="primitive_type [21543,21547]"/>
  <match src="identifier: balance [100083,100090]" dest="identifier: balance [39469,39476]"/>
  <match src="function_body [94307,94451]" dest="function_body [33693,33837]"/>
  <match src="identifier: D256 [44677,44681]" dest="identifier: D256 [14774,14778]"/>
  <match src=",: , [82217,82218]" dest=",: , [80181,80182]"/>
  <match src="member_expression [102061,102152]" dest="member_expression [41447,41538]"/>
  <match src="call_argument [19090,19129]" dest="call_argument [70766,70787]"/>
  <match src="identifier: require [89463,89470]" dest="identifier: require [76653,76660]"/>
  <match src="identifier: IDollar [49563,49570]" dest="identifier: IDollar [25946,25953]"/>
  <match src=",: , [103124,103125]" dest=",: , [42510,42511]"/>
  <match src="primitive_type [43166,43173]" dest="primitive_type [13263,13270]"/>
  <match src="array_access [101778,101800]" dest="array_access [41164,41186]"/>
  <match src="): ) [81941,81942]" dest="): ) [79953,79954]"/>
  <match src="(: ( [97597,97598]" dest="(: ( [36983,36984]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [13955,14518]" dest="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [44839,44980]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [11693,11902]" dest="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [22994,23203]"/>
  <match src="expression_statement [101106,101234]" dest="expression_statement [40492,40620]"/>
  <match src="type_name [69432,69439]" dest="type_name [55302,55309]"/>
  <match src="constant: constant [42079,42087]" dest="constant: constant [12176,12184]"/>
  <match src="{: { [75605,75606]" dest="{: { [61112,61113]"/>
  <match src="return_statement [91338,91347]" dest="return_statement [30724,30733]"/>
  <match src="internal: internal [26308,26316]" dest="internal: internal [58237,58245]"/>
  <match src="{: { [102520,102521]" dest="{: { [41906,41907]"/>
  <match src="identifier: account [104683,104690]" dest="identifier: account [44069,44076]"/>
  <match src="identifier: that [48642,48646]" dest="identifier: that [62566,62570]"/>
  <match src="): ) [44868,44869]" dest="): ) [14965,14966]"/>
  <match src="visibility [96138,96144]" dest="visibility [35524,35530]"/>
  <match src="=: = [27364,27365]" dest="=: = [45076,45077]"/>
  <match src="uint256: uint256 [35691,35698]" dest="uint256: uint256 [53403,53410]"/>
  <match src="primitive_type [105947,105954]" dest="primitive_type [69091,69098]"/>
  <match src="address: address [52519,52526]" dest="address: address [20643,20650]"/>
  <match src="parameter [45438,45445]" dest="parameter [15535,15542]"/>
  <match src="}: } [8766,8767]" dest="}: } [9294,9295]"/>
  <match src="(: ( [89417,89418]" dest="(: ( [76607,76608]"/>
  <match src="event_paramater [52108,52118]" dest="event_paramater [20232,20242]"/>
  <match src="): ) [78833,78834]" dest="): ) [70351,70352]"/>
  <match src="): ) [91634,91635]" dest="): ) [31020,31021]"/>
  <match src="function_body [84659,85209]" dest="function_body [73987,74537]"/>
  <match src="uint256: uint256 [86255,86262]" dest="uint256: uint256 [28046,28053]"/>
  <match src="call_argument [26167,26174]" dest="call_argument [55695,55702]"/>
  <match src="primitive_type [96159,96166]" dest="primitive_type [35545,35552]"/>
  <match src="visibility [52466,52474]" dest="visibility [20590,20598]"/>
  <match src="identifier: D256 [6543,6547]" dest="identifier: D256 [7071,7075]"/>
  <match src="type_name [68457,68464]" dest="type_name [65625,65632]"/>
  <match src="(: ( [76647,76648]" dest="(: ( [56883,56884]"/>
  <match src="call_expression [6936,6971]" dest="call_expression [7464,7499]"/>
  <match src="uint256: uint256 [6451,6458]" dest="uint256: uint256 [6979,6986]"/>
  <match src="revert_statement [28354,28719]" dest="revert_statement [46066,46431]"/>
  <match src="call_argument [89179,89193]" dest="call_argument [76369,76383]"/>
  <match src="(: ( [35011,35012]" dest="(: ( [52723,52724]"/>
  <match src="}: } [102420,102421]" dest="}: } [41806,41807]"/>
  <match src="identifier: implementation [96660,96674]" dest="identifier: implementation [36046,36060]"/>
  <match src="visibility [42794,42801]" dest="visibility [12891,12898]"/>
  <match src="function_definition [98735,98876]" dest="function_definition [38121,38262]"/>
  <match src="call_argument [22351,22357]" dest="call_argument [64227,64233]"/>
  <match src="identifier: votes [95674,95679]" dest="identifier: votes [35060,35065]"/>
  <match src="function_definition [44094,44204]" dest="function_definition [14191,14301]"/>
  <match src=".: . [95296,95297]" dest=".: . [34682,34683]"/>
  <match src="==: == [92917,92919]" dest="==: == [32303,32305]"/>
  <match src="uint256: uint256 [95051,95058]" dest="uint256: uint256 [34437,34444]"/>
  <match src="member_expression [44332,44344]" dest="member_expression [14429,14441]"/>
  <match src="memory: memory [34713,34719]" dest="memory: memory [52425,52431]"/>
  <match src="struct: struct [86562,86568]" dest="struct: struct [28353,28359]"/>
  <match src="function_definition [28741,29396]" dest="function_definition [46453,47108]"/>
  <match src="identifier: i [33355,33356]" dest="identifier: i [51067,51068]"/>
  <match src="visibility [41811,41818]" dest="visibility [11908,11915]"/>
  <match src="}: } [106344,106345]" dest="}: } [69488,69489]"/>
  <match src=".: . [80711,80712]" dest=".: . [72862,72863]"/>
  <match src="identifier: D256 [7679,7683]" dest="identifier: D256 [8207,8211]"/>
  <match src="}: } [9091,9092]" dest="}: } [9619,9620]"/>
  <match src="call_argument [34120,34126]" dest="call_argument [51832,51838]"/>
  <match src="call_argument [94357,94371]" dest="call_argument [33743,33757]"/>
  <match src="parameter [95122,95129]" dest="parameter [34508,34515]"/>
  <match src="function_definition [99137,99445]" dest="function_definition [38523,38831]"/>
  <match src="primitive_type [93685,93692]" dest="primitive_type [33071,33078]"/>
  <match src="variable_declaration_statement [104553,104617]" dest="variable_declaration_statement [43939,44003]"/>
  <match src="primitive_type [53241,53245]" dest="primitive_type [21365,21369]"/>
  <match src="identifier: amount [73718,73724]" dest="identifier: amount [56416,56422]"/>
  <match src="=: = [98530,98531]" dest="=: = [37916,37917]"/>
  <match src="primitive_type [101892,101899]" dest="primitive_type [41278,41285]"/>
  <match src="memory: memory [90861,90867]" dest="memory: memory [30247,30253]"/>
  <match src=",: , [29456,29457]" dest=",: , [47168,47169]"/>
  <match src="member_expression [8201,8208]" dest="member_expression [8729,8736]"/>
  <match src="call_argument [92910,92915]" dest="call_argument [32296,32301]"/>
  <match src="primitive_type [103301,103308]" dest="primitive_type [42687,42694]"/>
  <match src="identifier: approve [96080,96087]" dest="identifier: approve [35466,35473]"/>
  <match src="array_access [102530,102550]" dest="array_access [41916,41936]"/>
  <match src="primitive_type [13888,13895]" dest="primitive_type [25189,25196]"/>
  <match src="(: ( [101572,101573]" dest="(: ( [40958,40959]"/>
  <match src="call_argument [7616,7620]" dest="call_argument [8144,8148]"/>
  <match src="expression_statement [35949,35989]" dest="expression_statement [53661,53701]"/>
  <match src="identifier: balanceOfBonded [71446,71461]" dest="identifier: balanceOf [81781,81790]"/>
  <match src="{: { [96168,96169]" dest="{: { [35554,35555]"/>
  <match src="return: return [859,865]" dest="return: return [1387,1393]"/>
  <match src="type_name [53173,53177]" dest="type_name [21297,21301]"/>
  <match src="call_argument [81707,81717]" dest="call_argument [79780,79790]"/>
  <match src="identifier: epoch [95414,95419]" dest="identifier: epoch [34800,34805]"/>
  <match src="function_body [1335,1427]" dest="function_body [1863,1955]"/>
  <match src="): ) [77204,77205]" dest="): ) [59464,59465]"/>
  <match src="identifier: totalSupply [91122,91133]" dest="identifier: totalSupply [30508,30519]"/>
  <match src="(: ( [28945,28946]" dest="(: ( [46657,46658]"/>
  <match src=":: : [6093,6094]" dest=":: : [6621,6622]"/>
  <match src="identifier: epochs [102537,102543]" dest="identifier: epochs [41923,41929]"/>
  <match src="identifier: asUint256 [9556,9565]" dest="identifier: asUint256 [10084,10093]"/>
  <match src="]: ] [100692,100693]" dest="]: ] [40078,40079]"/>
  <match src="primitive_type [44033,44040]" dest="primitive_type [14130,14137]"/>
  <match src="comment: /* DAO */ [42613,42622]" dest="comment: /* DAO */ [12710,12719]"/>
  <match src="address: address [13657,13664]" dest="address: address [24958,24965]"/>
  <match src="): ) [107762,107763]" dest="): ) [56212,56213]"/>
  <match src="identifier: candidate [96353,96362]" dest="identifier: candidate [35739,35748]"/>
  <match src=".: . [106035,106036]" dest=".: . [69179,69180]"/>
  <match src="identifier: amount [22351,22357]" dest="identifier: amount [64227,64233]"/>
  <match src="state_mutability [8129,8133]" dest="state_mutability [8657,8661]"/>
  <match src="identifier: epoch [102544,102549]" dest="identifier: epoch [41930,41935]"/>
  <match src="function_body [105698,105858]" dest="function_body [68842,69002]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [41735,41757]" dest="identifier: ORACLE_RESERVE_MINIMUM [11832,11854]"/>
  <match src="private: private [65939,65946]" dest="private: private [83328,83335]"/>
  <match src=".: . [98857,98858]" dest=".: . [38243,38244]"/>
  <match src="call_expression [92279,92287]" dest="call_expression [31665,31673]"/>
  <match src="function_definition [52887,52946]" dest="function_definition [21011,21070]"/>
  <match src="constant: constant [62716,62724]" dest="constant: constant [60326,60334]"/>
  <match src="identifier: amount [50714,50720]" dest="identifier: amount [55416,55422]"/>
  <match src="parameter [48102,48118]" dest="parameter [56831,56848]"/>
  <match src="(: ( [7281,7282]" dest="(: ( [7809,7810]"/>
  <match src="primitive_type [53742,53749]" dest="primitive_type [21866,21873]"/>
  <match src="primitive_type [35663,35668]" dest="primitive_type [53375,53380]"/>
  <match src="state_mutability [44019,44023]" dest="state_mutability [14116,14120]"/>
  <match src=",: , [31200,31201]" dest=",: , [48912,48913]"/>
  <match src="visibility [34677,34684]" dest="visibility [52389,52396]"/>
  <match src="call_argument [4761,4773]" dest="call_argument [5289,5301]"/>
  <match src="address: address [91627,91634]" dest="address: address [31013,31020]"/>
  <match src="return_statement [44460,44485]" dest="return_statement [14557,14582]"/>
  <match src="identifier: reason [29768,29774]" dest="identifier: reason [47480,47486]"/>
  <match src=".: . [94352,94353]" dest=".: . [33738,33739]"/>
  <match src="): ) [86056,86057]" dest="): ) [27847,27848]"/>
  <match src="function_definition [97701,97827]" dest="function_definition [37087,37213]"/>
  <match src="function_definition [54362,54409]" dest="function_definition [22486,22533]"/>
  <match src="identifier: getTreasuryRatio [46350,46366]" dest="identifier: getTreasuryRatio [16447,16463]"/>
  <match src="type_name [53033,53040]" dest="type_name [21157,21164]"/>
  <match src="returns: returns [91618,91625]" dest="returns: returns [31004,31011]"/>
  <match src="(: ( [6325,6326]" dest="(: ( [6853,6854]"/>
  <match src="identifier: totalBonded [82008,82019]" dest="identifier: totalBonded [58761,58772]"/>
  <match src="call_argument [35711,35716]" dest="call_argument [53423,53428]"/>
  <match src="identifier: amount [100439,100445]" dest="identifier: amount [39825,39831]"/>
  <match src="private: private [43309,43316]" dest="private: private [13406,13413]"/>
  <match src="identifier: Setters [97518,97525]" dest="identifier: Setters [36904,36911]"/>
  <match src="variable_declaration [33382,33396]" dest="variable_declaration [51094,51108]"/>
  <match src="): ) [63615,63616]" dest="): ) [81490,81491]"/>
  <match src="identifier: input [33755,33760]" dest="identifier: input [51467,51472]"/>
  <match src="(: ( [81825,81826]" dest="(: ( [56131,56132]"/>
  <match src="call_expression [7518,7543]" dest="call_expression [8046,8071]"/>
  <match src="call_argument [102786,102791]" dest="call_argument [42172,42177]"/>
  <match src="public: public [94634,94640]" dest="public: public [34020,34026]"/>
  <match src="member_expression [98661,98680]" dest="member_expression [38047,38066]"/>
  <match src=".: . [28409,28410]" dest=".: . [46121,46122]"/>
  <match src="identifier: file [30672,30676]" dest="identifier: file [48384,48388]"/>
  <match src="identifier: PairCreated [51418,51429]" dest="identifier: CouponTransfer [60829,60843]"/>
  <match src="returns: returns [91927,91934]" dest="returns: returns [31313,31320]"/>
  <match src="comment: // ', ' [27566,27573]" dest="comment: // ', ' [45278,45285]"/>
  <match src="bytes32: bytes32 [88417,88424]" dest="bytes32: bytes32 [75607,75614]"/>
  <match src="return_type_definition [46581,46598]" dest="return_type_definition [16678,16695]"/>
  <match src="visibility [101759,101767]" dest="visibility [41145,41153]"/>
  <match src="{: { [43768,43769]" dest="{: { [13865,13866]"/>
  <match src="bytes: bytes [34889,34894]" dest="bytes: bytes [52601,52606]"/>
  <match src="member_expression [7290,7304]" dest="member_expression [7818,7832]"/>
  <match src="identifier: value [10042,10047]" dest="identifier: value [10570,10575]"/>
  <match src="): ) [34510,34511]" dest="): ) [52222,52223]"/>
  <match src="uint256: uint256 [7017,7024]" dest="uint256: uint256 [7545,7552]"/>
  <match src="uint256: uint256 [5839,5846]" dest="uint256: uint256 [6367,6374]"/>
  <match src="member_expression [100599,100631]" dest="member_expression [39985,40017]"/>
  <match src="type_name [63082,63089]" dest="type_name [77893,77900]"/>
  <match src="call_argument [50808,50814]" dest="call_argument [55466,55472]"/>
  <match src="memory: memory [7764,7770]" dest="memory: memory [8292,8298]"/>
  <match src="identifier: expiration [102487,102497]" dest="identifier: expiration [41873,41883]"/>
  <match src="private: private [9819,9826]" dest="private: private [10347,10354]"/>
  <match src=".: . [96057,96058]" dest=".: . [35443,35444]"/>
  <match src="(: ( [4725,4726]" dest="(: ( [5253,5254]"/>
  <match src="(: ( [80234,80235]" dest="(: ( [71431,71432]"/>
  <match src="call_argument [81117,81136]" dest="call_argument [81153,81286]"/>
  <match src="call_argument [100343,100349]" dest="call_argument [39729,39735]"/>
  <match src="{: { [95628,95629]" dest="{: { [35014,35015]"/>
  <match src="call_argument [35849,35851]" dest="call_argument [53561,53563]"/>
  <match src="return: return [5978,5984]" dest="return: return [6506,6512]"/>
  <match src="identifier: account [26167,26174]" dest="identifier: account [55695,55702]"/>
  <match src="uint256: uint256 [79584,79591]" dest="uint256: uint256 [71122,71129]"/>
  <match src="type_name [104447,104454]" dest="type_name [43833,43840]"/>
  <match src="]: ] [34958,34959]" dest="]: ] [52670,52671]"/>
  <match src="address: address [93685,93692]" dest="address: address [33071,33078]"/>
  <match src="identifier: onlyFrozen [79336,79346]" dest="identifier: onlyFrozenOrLocked [78243,78261]"/>
  <match src="identifier: i [95074,95075]" dest="identifier: i [34460,34461]"/>
  <match src="function_body [9387,9433]" dest="function_body [9915,9961]"/>
  <match src="parameter [29425,29434]" dest="parameter [47137,47146]"/>
  <match src="identifier: epoch [95059,95064]" dest="identifier: epoch [34445,34450]"/>
  <match src="identifier: stringify [35590,35599]" dest="identifier: stringify [53302,53311]"/>
  <match src="{: { [84231,84232]" dest="{: { [73559,73560]"/>
  <match src="constant: constant [41392,41400]" dest="constant: constant [11489,11497]"/>
  <match src="visibility [43234,43241]" dest="visibility [13331,13338]"/>
  <match src="parameter [46490,46497]" dest="parameter [16587,16594]"/>
  <match src="view: view [53618,53622]" dest="view: view [21742,21746]"/>
  <match src="member_expression [8383,8393]" dest="member_expression [8911,8921]"/>
  <match src="primitive_type [100988,100995]" dest="primitive_type [40374,40381]"/>
  <match src="constant: constant [42222,42230]" dest="constant: constant [12319,12327]"/>
  <match src="): ) [94804,94805]" dest="): ) [34190,34191]"/>
  <match src="identifier: newPhantomFromBonded [82495,82515]" dest="identifier: expirationEpoch [61362,61377]"/>
  <match src="variable_declaration [419,428]" dest="variable_declaration [947,956]"/>
  <match src="identifier: decrementBalanceOfPhantom [81668,81693]" dest="identifier: recordVote [79769,79779]"/>
  <match src="type_name [93080,93094]" dest="type_name [32466,32480]"/>
  <match src="member_expression [83337,83349]" dest="member_expression [80212,80224]"/>
  <match src="?: ? [93303,93304]" dest="?: ? [32689,32690]"/>
  <match src="): ) [79811,79812]" dest="): ) [71361,71362]"/>
  <match src="identifier: amount0 [53246,53253]" dest="identifier: amount0 [21370,21377]"/>
  <match src="variable_declaration_statement [35236,35258]" dest="variable_declaration_statement [52948,52970]"/>
  <match src="(: ( [30503,30504]" dest="(: ( [48215,48216]"/>
  <match src="parameter [92559,92566]" dest="parameter [31945,31952]"/>
  <match src="): ) [83127,83128]" dest="): ) [58984,58985]"/>
  <match src="call_argument [77107,77117]" dest="call_argument [82950,82960]"/>
  <match src="uint256: uint256 [22871,22878]" dest="uint256: uint256 [17608,17615]"/>
  <match src="public: public [92232,92238]" dest="public: public [31618,31624]"/>
  <match src="identifier: sub [6745,6748]" dest="identifier: sub [7273,7276]"/>
  <match src="identifier: incrementBalanceOfStaged [99854,99878]" dest="identifier: incrementBalanceOfStaged [39240,39264]"/>
  <match src="call_expression [99738,99779]" dest="call_expression [39124,39165]"/>
  <match src="returns: returns [95255,95262]" dest="returns: returns [34641,34648]"/>
  <match src="view: view [84639,84643]" dest="view: view [73967,73971]"/>
  <match src="external: external [54400,54408]" dest="external: external [22524,22532]"/>
  <match src="if_statement [1962,2007]" dest="if_statement [2490,2535]"/>
  <match src="event_paramater [78820,78833]" dest="event_paramater [70338,70351]"/>
  <match src="pure: pure [44655,44659]" dest="pure: pure [14752,14756]"/>
  <match src="variable_declaration [36102,36111]" dest="variable_declaration [53814,53823]"/>
  <match src="call_expression [48774,48820]" dest="call_expression [55767,55837]"/>
  <match src="address: address [103326,103333]" dest="address: address [42712,42719]"/>
  <match src="identifier: reason [31751,31757]" dest="identifier: reason [49463,49469]"/>
  <match src=",: , [98014,98015]" dest=",: , [37400,37401]"/>
  <match src="(: ( [7609,7610]" dest="(: ( [8137,8138]"/>
  <match src="primitive_type [1725,1732]" dest="primitive_type [2253,2260]"/>
  <match src="primitive_type [27928,27934]" dest="primitive_type [45640,45646]"/>
  <match src="struct_member [86030,86066]" dest="struct_member [27821,27857]"/>
  <match src="identifier: result [34995,35001]" dest="identifier: result [52707,52713]"/>
  <match src="identifier: getCurrentEpochStrategy [43669,43692]" dest="identifier: getCurrentEpochStrategy [13766,13789]"/>
  <match src="): ) [95075,95076]" dest="): ) [34461,34462]"/>
  <match src="identifier: Require [82153,82160]" dest="identifier: Require [80149,80156]"/>
  <match src="function: function [52320,52328]" dest="function: function [20444,20452]"/>
  <match src="identifier: must [29989,29993]" dest="identifier: must [47701,47705]"/>
  <match src="member_expression [95152,95189]" dest="member_expression [34538,34575]"/>
  <match src="identifier: couponAllowances [86103,86119]" dest="identifier: couponAllowances [27894,27910]"/>
  <match src="function_body [30124,30616]" dest="function_body [47836,48328]"/>
  <match src="type_name [101915,101922]" dest="type_name [41301,41308]"/>
  <match src="identifier: value [8397,8402]" dest="identifier: value [8925,8930]"/>
  <match src=".: . [81022,81023]" dest=".: . [72609,72610]"/>
  <match src="member_expression [94357,94371]" dest="member_expression [33743,33757]"/>
  <match src="{: { [43608,43609]" dest="{: { [13705,13706]"/>
  <match src="if: if [30134,30136]" dest="if: if [47846,47848]"/>
  <match src="memory: memory [1282,1288]" dest="memory: memory [1810,1816]"/>
  <match src="(: ( [45437,45438]" dest="(: ( [15534,15535]"/>
  <match src="pure: pure [1711,1715]" dest="pure: pure [2239,2243]"/>
  <match src="identifier: b [6571,6572]" dest="identifier: b [7099,7100]"/>
  <match src="identifier: amount [99825,99831]" dest="identifier: amount [39211,39217]"/>
  <match src="primitive_type [91627,91634]" dest="primitive_type [31013,31020]"/>
  <match src="internal: internal [98785,98793]" dest="internal: internal [38171,38179]"/>
  <match src="variable_declaration_statement [84669,84682]" dest="variable_declaration_statement [73997,74010]"/>
  <match src="member_expression [95917,95952]" dest="member_expression [35303,35338]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [96737,96756]" dest="identifier: IMPLEMENTATION_SLOT [36123,36142]"/>
  <match src="parameter [43742,43762]" dest="parameter [13839,13859]"/>
  <match src="array_access [93462,93486]" dest="array_access [32848,32872]"/>
  <match src="return_statement [85187,85203]" dest="return_statement [74515,74531]"/>
  <match src="-: - [36430,36431]" dest="-: - [54142,54143]"/>
  <match src="identifier: D256 [7937,7941]" dest="identifier: D256 [8465,8469]"/>
  <match src="member_expression [98200,98221]" dest="member_expression [37586,37607]"/>
  <match src="address: address [104182,104189]" dest="address: address [43568,43575]"/>
  <match src="indexed: indexed [97628,97635]" dest="indexed: indexed [37014,37021]"/>
  <match src="=: = [90591,90592]" dest="=: = [29977,29978]"/>
  <match src="parameter [91251,91266]" dest="parameter [30637,30652]"/>
  <match src="function: function [46341,46349]" dest="function: function [16438,16446]"/>
  <match src="identifier: require [19722,19729]" dest="identifier: require [63903,63910]"/>
  <match src="type_name [9035,9039]" dest="type_name [9563,9567]"/>
  <match src=",: , [52081,52082]" dest=",: , [20205,20206]"/>
  <match src="visibility [92405,92411]" dest="visibility [31791,31797]"/>
  <match src="return_type_definition [7066,7087]" dest="return_type_definition [7594,7615]"/>
  <match src="address: address [92388,92395]" dest="address: address [31774,31781]"/>
  <match src="call_argument [30428,30436]" dest="call_argument [48140,48148]"/>
  <match src="call_expression [96317,96364]" dest="call_expression [35703,35750]"/>
  <match src="identifier: _state [102592,102598]" dest="identifier: _state [41978,41984]"/>
  <match src="uint256: uint256 [86279,86286]" dest="uint256: uint256 [28070,28077]"/>
  <match src="call_expression [31257,31276]" dest="call_expression [48969,48988]"/>
  <match src=".: . [77110,77111]" dest=".: . [82953,82954]"/>
  <match src=".: . [8202,8203]" dest=".: . [8730,8731]"/>
  <match src="identifier: require [1345,1352]" dest="identifier: require [1873,1880]"/>
  <match src="variable_declaration_statement [64842,64884]" dest="variable_declaration_statement [65876,65920]"/>
  <match src=".: . [89106,89107]" dest=".: . [76296,76297]"/>
  <match src="variable_declaration [71175,71194]" dest="variable_declaration [67279,67302]"/>
  <match src="yul_identifier [33544,33550]" dest="yul_identifier [51256,51262]"/>
  <match src="pure: pure [52225,52229]" dest="pure: pure [20349,20353]"/>
  <match src="internal: internal [75596,75604]" dest="internal: internal [61103,61111]"/>
  <match src="uint256: uint256 [16168,16175]" dest="uint256: uint256 [56442,56449]"/>
  <match src="primitive_type [96291,96298]" dest="primitive_type [35677,35684]"/>
  <match src="): ) [54143,54144]" dest="): ) [22267,22268]"/>
  <match src="uint256: uint256 [366,373]" dest="uint256: uint256 [894,901]"/>
  <match src="expression_statement [104795,104843]" dest="expression_statement [44181,44229]"/>
  <match src="variable_declaration [76769,76785]" dest="variable_declaration [18191,18211]"/>
  <match src="(: ( [53741,53742]" dest="(: ( [21865,21866]"/>
  <match src="identifier: lockedUntil [104692,104703]" dest="identifier: lockedUntil [44078,44089]"/>
  <match src="byte: byte [36801,36805]" dest="byte: byte [54513,54517]"/>
  <match src="type_name [41710,41717]" dest="type_name [11807,11814]"/>
  <match src="variable_declaration_statement [35817,35853]" dest="variable_declaration_statement [53529,53565]"/>
  <match src="identifier: z [35386,35387]" dest="identifier: z [53098,53099]"/>
  <match src=".: . [81229,81230]" dest=".: . [78977,78978]"/>
  <match src="primitive_type [9496,9500]" dest="primitive_type [10024,10028]"/>
  <match src="): ) [28685,28686]" dest="): ) [46397,46398]"/>
  <match src="parameter [11978,11982]" dest="parameter [23279,23283]"/>
  <match src="call_argument [79658,79668]" dest="call_argument [83080,83090]"/>
  <match src="type_name [89418,89425]" dest="type_name [76608,76615]"/>
  <match src="byte: byte [36705,36709]" dest="byte: byte [54417,54421]"/>
  <match src="uint256: uint256 [84669,84676]" dest="uint256: uint256 [73997,74004]"/>
  <match src="type_name [28224,28231]" dest="type_name [45936,45943]"/>
  <match src="internal: internal [98642,98650]" dest="internal: internal [38028,38036]"/>
  <match src="block_statement [30832,31373]" dest="block_statement [48544,49085]"/>
  <match src="identifier: FILE [48804,48808]" dest="identifier: FILE [70760,70764]"/>
  <match src="user_defined_type [107047,107052]" dest="user_defined_type [82633,82638]"/>
  <match src="(: ( [43598,43599]" dest="(: ( [13695,13696]"/>
  <match src="parameter [32058,32074]" dest="parameter [49770,49786]"/>
  <match src="): ) [100930,100931]" dest="): ) [40316,40317]"/>
  <match src="primitive_type [68132,68139]" dest="primitive_type [65755,65762]"/>
  <match src="(: ( [54304,54305]" dest="(: ( [22428,22429]"/>
  <match src="visibility [42701,42708]" dest="visibility [12798,12805]"/>
  <match src="public: public [95243,95249]" dest="public: public [34629,34635]"/>
  <match src="identifier: _state [95645,95651]" dest="identifier: _state [35031,35037]"/>
  <match src="primitive_type [51430,51437]" dest="primitive_type [60853,60860]"/>
  <match src="member_expression [99977,100012]" dest="member_expression [39363,39398]"/>
  <match src="assignment_expression [100052,100109]" dest="assignment_expression [39438,39495]"/>
  <match src="public: public [92405,92411]" dest="public: public [31791,31797]"/>
  <match src="binary_expression [8901,8924]" dest="binary_expression [9429,9452]"/>
  <match src="state_mutability [52286,52290]" dest="state_mutability [20410,20414]"/>
  <match src="memory: memory [8330,8336]" dest="memory: memory [8858,8864]"/>
  <match src="): ) [6582,6583]" dest="): ) [7110,7111]"/>
  <match src="identifier: stringifyTruncated [27998,28016]" dest="identifier: stringifyTruncated [45710,45728]"/>
  <match src="): ) [33550,33551]" dest="): ) [51262,51263]"/>
  <match src="function_definition [96377,96506]" dest="function_definition [35763,35892]"/>
  <match src="identifier: sender [79472,79478]" dest="identifier: sender [71035,71041]"/>
  <match src="}: } [95694,95695]" dest="}: } [35080,35081]"/>
  <match src="=: = [98830,98831]" dest="=: = [38216,38217]"/>
  <match src="type_name [102730,102737]" dest="type_name [42116,42123]"/>
  <match src="identifier: transferFrom [97951,97963]" dest="identifier: transferFrom [37337,37349]"/>
  <match src="): ) [104614,104615]" dest="): ) [44000,44001]"/>
  <match src="parameter [95355,95368]" dest="parameter [34741,34754]"/>
  <match src="return_statement [93172,93201]" dest="return_statement [32558,32587]"/>
  <match src="function_definition [52732,52816]" dest="function_definition [20856,20940]"/>
  <match src=",: , [53267,53268]" dest=",: , [21391,21392]"/>
  <match src="): ) [83575,83576]" dest="): ) [78351,78352]"/>
  <match src="visibility [10930,10938]" dest="visibility [55424,55432]"/>
  <match src="member_expression [82787,82797]" dest="member_expression [80800,80810]"/>
  <match src="binary_expression [92891,92921]" dest="binary_expression [32277,32307]"/>
  <match src="{: { [44690,44691]" dest="{: { [14787,14788]"/>
  <match src="view: view [94922,94926]" dest="view: view [34308,34312]"/>
  <match src="primitive_type [49601,49608]" dest="primitive_type [25984,25991]"/>
  <match src="identifier: FILE [82231,82235]" dest="identifier: FILE [80183,80187]"/>
  <match src="call_struct_argument [6727,6761]" dest="call_struct_argument [7255,7289]"/>
  <match src="struct_declaration [86307,86414]" dest="struct_declaration [28098,28205]"/>
  <match src="member_expression [79983,79993]" dest="member_expression [71205,71215]"/>
  <match src="state_mutability [91922,91926]" dest="state_mutability [31308,31312]"/>
  <match src="(: ( [87155,87156]" dest="(: ( [28946,28947]"/>
  <match src="identifier: reserve0 [53810,53818]" dest="identifier: reserve0 [21934,21942]"/>
  <match src="function_body [98975,99099]" dest="function_body [38361,38485]"/>
  <match src=",: , [4097,4098]" dest=",: , [4625,4626]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [35863,35895]" dest="comment: // populate the result with &quot;0x&quot; [53575,53607]"/>
  <match src="type_name [86657,86664]" dest="type_name [28448,28455]"/>
  <match src="identifier: account [92468,92475]" dest="identifier: account [31854,31861]"/>
  <match src="string [24940,24973]" dest="string [78498,78527]"/>
  <match src="expression_statement [34031,34039]" dest="expression_statement [51743,51751]"/>
  <match src="return: return [9626,9632]" dest="return: return [10154,10160]"/>
  <match src="internal: internal [99198,99206]" dest="internal: internal [38584,38592]"/>
  <match src="view: view [96561,96565]" dest="view: view [35947,35951]"/>
  <match src="call_argument [56276,56313]" dest="call_argument [72780,72816]"/>
  <match src="identifier: offset [41942,41948]" dest="identifier: offset [12039,12045]"/>
  <match src="variable_declaration_statement [96722,96757]" dest="variable_declaration_statement [36108,36143]"/>
  <match src=".: . [71907,71908]" dest=".: . [81015,81016]"/>
  <match src="): ) [3287,3288]" dest="): ) [3815,3816]"/>
  <match src="primitive_type [28378,28384]" dest="primitive_type [46090,46096]"/>
  <match src="identifier: amount [101044,101050]" dest="identifier: amount [40430,40436]"/>
  <match src="(: ( [7304,7305]" dest="(: ( [7832,7833]"/>
  <match src="variable_declaration [71365,71401]" dest="variable_declaration [78947,78961]"/>
  <match src="identifier: value [10111,10116]" dest="identifier: value [10639,10644]"/>
  <match src="call_argument [35921,35938]" dest="call_argument [53633,53650]"/>
  <match src="function_body [91843,91888]" dest="function_body [31229,31274]"/>
  <match src="type_alias [90475,90483]" dest="type_alias [29861,29869]"/>
  <match src="identifier: sender [79866,79872]" dest="identifier: sender [71391,71397]"/>
  <match src="parameter [53687,53694]" dest="parameter [21811,21818]"/>
  <match src="&gt;: &gt; [93147,93148]" dest="&gt;: &gt; [32533,32534]"/>
  <match src="identifier: self [9140,9144]" dest="identifier: self [9668,9672]"/>
  <match src="using: using [97550,97555]" dest="using: using [36936,36941]"/>
  <match src="identifier: amount [51233,51239]" dest="identifier: amount [64590,64596]"/>
  <match src="event_paramater [78795,78818]" dest="event_paramater [70313,70336]"/>
  <match src="**: ** [5764,5766]" dest="**: ** [6292,6294]"/>
  <match src="identifier: value [80666,80671]" dest="identifier: value [72370,72375]"/>
  <match src=",: , [8591,8592]" dest=",: , [9119,9120]"/>
  <match src=".: . [79946,79947]" dest=".: . [72574,72575]"/>
  <match src="primitive_type [71365,71372]" dest="primitive_type [78947,78954]"/>
  <match src="=: = [103196,103197]" dest="=: = [42582,42583]"/>
  <match src="type_name [80976,80983]" dest="type_name [72513,72520]"/>
  <match src="identifier: burnFrom [49639,49647]" dest="identifier: burnFrom [26022,26030]"/>
  <match src="identifier: FILE [83423,83427]" dest="identifier: FILE [80336,80340]"/>
  <match src="array_access [101286,101306]" dest="array_access [40672,40692]"/>
  <match src="): ) [92871,92872]" dest="): ) [32257,32258]"/>
  <match src="identifier: Account [93080,93087]" dest="identifier: Account [32466,32473]"/>
  <match src="parameter [36612,36616]" dest="parameter [54324,54328]"/>
  <match src=":: : [44351,44352]" dest=":: : [14448,14449]"/>
  <match src="member_expression [100599,100614]" dest="member_expression [39985,40000]"/>
  <match src="identifier: that [28191,28195]" dest="identifier: that [45903,45907]"/>
  <match src="event_paramater [51454,51476]" dest="event_paramater [60883,60901]"/>
  <match src="identifier: swap [54205,54209]" dest="identifier: swap [22329,22333]"/>
  <match src="identifier: BASE [6957,6961]" dest="identifier: BASE [7485,7489]"/>
  <match src="parameter [53065,53075]" dest="parameter [21189,21199]"/>
  <match src="uint256: uint256 [65956,65963]" dest="uint256: uint256 [62459,62466]"/>
  <match src="parameter [98620,98640]" dest="parameter [38006,38026]"/>
  <match src="for_statement [36097,36499]" dest="for_statement [53809,54211]"/>
  <match src=".: . [100097,100098]" dest=".: . [39483,39484]"/>
  <match src="uint256: uint256 [103509,103516]" dest="uint256: uint256 [42895,42902]"/>
  <match src="primitive_type [41981,41988]" dest="primitive_type [12078,12085]"/>
  <match src="identifier: account [26119,26126]" dest="identifier: account [55629,55636]"/>
  <match src="unary_expression [28918,28923]" dest="unary_expression [46630,46635]"/>
  <match src="): ) [49739,49740]" dest="): ) [26122,26123]"/>
  <match src="view: view [91293,91297]" dest="view: view [30679,30683]"/>
  <match src=",: , [30039,30040]" dest=",: , [47751,47752]"/>
  <match src="function_definition [104411,104730]" dest="function_definition [43797,44116]"/>
  <match src="primitive_type [10013,10020]" dest="primitive_type [10541,10548]"/>
  <match src="call_argument [73916,73922]" dest="call_argument [56034,56040]"/>
  <match src="primitive_type [52873,52880]" dest="primitive_type [20997,21004]"/>
  <match src="parameter [96535,96552]" dest="parameter [35921,35938]"/>
  <match src="type_name [13063,13067]" dest="type_name [24364,24368]"/>
  <match src="): ) [8410,8411]" dest="): ) [8938,8939]"/>
  <match src="): ) [11502,11503]" dest="): ) [22803,22804]"/>
  <match src="): ) [6137,6138]" dest="): ) [6665,6666]"/>
  <match src="call_expression [9633,9653]" dest="call_expression [10161,10181]"/>
  <match src="new_expression [33694,33703]" dest="new_expression [51406,51415]"/>
  <match src="): ) [4041,4042]" dest="): ) [4569,4570]"/>
  <match src="): ) [89055,89056]" dest="): ) [76245,76246]"/>
  <match src="if_statement [93106,93211]" dest="if_statement [32492,32597]"/>
  <match src="user_defined_type [86821,86828]" dest="user_defined_type [28612,28619]"/>
  <match src=".: . [98667,98668]" dest=".: . [38053,38054]"/>
  <match src="identifier: self [6445,6449]" dest="identifier: self [6973,6977]"/>
  <match src="revert_statement [32168,32685]" dest="revert_statement [49880,50397]"/>
  <match src="): ) [103204,103205]" dest="): ) [42590,42591]"/>
  <match src="identifier: lastReserve [65983,65994]" dest="identifier: balance [71535,71542]"/>
  <match src="identifier: that [82161,82165]" dest="identifier: that [80157,80161]"/>
  <match src="identifier: input [33941,33946]" dest="identifier: input [51653,51658]"/>
  <match src="identifier: EpochStrategy [41910,41923]" dest="identifier: EpochStrategy [12007,12020]"/>
  <match src="parameter [3261,3287]" dest="parameter [3789,3815]"/>
  <match src="external: external [52914,52922]" dest="external: external [21038,21046]"/>
  <match src="{: { [44315,44316]" dest="{: { [14412,14413]"/>
  <match src="type_name [79312,79319]" dest="type_name [70876,70883]"/>
  <match src="identifier: symbol [90824,90830]" dest="identifier: symbol [30210,30216]"/>
  <match src="identifier: Require [81995,82002]" dest="identifier: Require [80898,80905]"/>
  <match src="identifier: incrementBalanceOfStaged [79443,79467]" dest="identifier: incrementBalanceOfStaged [71006,71030]"/>
  <match src="identifier: self [7011,7015]" dest="identifier: self [7539,7543]"/>
  <match src="{: { [93578,93579]" dest="{: { [32964,32965]"/>
  <match src="visibility [92538,92544]" dest="visibility [31924,31930]"/>
  <match src="=&gt;: =&gt; [86046,86048]" dest="=&gt;: =&gt; [27837,27839]"/>
  <match src="visibility [30102,30110]" dest="visibility [47814,47822]"/>
  <match src="function: function [31944,31952]" dest="function: function [49656,49664]"/>
  <match src="comment: // populate the least-significant character [36226,36269]" dest="comment: // populate the least-significant character [53938,53981]"/>
  <match src=".: . [101426,101427]" dest=".: . [40812,40813]"/>
  <match src="call_argument [104125,104131]" dest="call_argument [43511,43517]"/>
  <match src="member_expression [106021,106035]" dest="member_expression [69165,69179]"/>
  <match src="internal: internal [101759,101767]" dest="internal: internal [41145,41153]"/>
  <match src="event: event [52125,52130]" dest="event: event [20249,20254]"/>
  <match src="expression_statement [102592,102647]" dest="expression_statement [41978,42033]"/>
  <match src="type_name [7075,7079]" dest="type_name [7603,7607]"/>
  <match src=".: . [95673,95674]" dest=".: . [35059,35060]"/>
  <match src="[: [ [100741,100742]" dest="[: [ [40127,40128]"/>
  <match src="returns: returns [13054,13061]" dest="returns: returns [24355,24362]"/>
  <match src="type_name [91004,91011]" dest="type_name [30390,30397]"/>
  <match src="identifier: Require [27277,27284]" dest="identifier: Require [44989,44996]"/>
  <match src="identifier: accounts [100301,100309]" dest="identifier: accounts [39687,39695]"/>
  <match src=".: . [98846,98847]" dest=".: . [38232,38233]"/>
  <match src="type_name [86995,87002]" dest="type_name [28786,28793]"/>
  <match src="comment: // 0% [43271,43276]" dest="comment: // 0% [13368,13373]"/>
  <match src="type_name [65327,65334]" dest="type_name [66817,66824]"/>
  <match src="identifier: that [29970,29974]" dest="identifier: that [47682,47686]"/>
  <match src="(: ( [83190,83191]" dest="(: ( [58797,58798]"/>
  <match src="return_statement [96044,96088]" dest="return_statement [35430,35474]"/>
  <match src="enum_declaration [85917,85952]" dest="enum_declaration [27708,27743]"/>
  <match src="bytes32: bytes32 [28805,28812]" dest="bytes32: bytes32 [46517,46524]"/>
  <match src="member_expression [98985,98999]" dest="member_expression [38371,38385]"/>
  <match src="identifier: periodFor [95841,95850]" dest="identifier: periodFor [35227,35236]"/>
  <match src="identifier: Storage [87326,87333]" dest="identifier: Storage [29117,29124]"/>
  <match src="identifier: Provide [79167,79174]" dest="identifier: Commit [78099,78105]"/>
  <match src="type_name [34239,34246]" dest="type_name [51951,51958]"/>
  <match src="(: ( [8034,8035]" dest="(: ( [8562,8563]"/>
  <match src="member_expression [98985,99010]" dest="member_expression [38371,38396]"/>
  <match src="type_name [103759,103765]" dest="type_name [43145,43151]"/>
  <match src="(: ( [105946,105947]" dest="(: ( [69090,69091]"/>
  <match src="): ) [16714,16715]" dest="): ) [58270,58271]"/>
  <match src="call_expression [79379,79433]" dest="call_expression [70941,70996]"/>
  <match src="identifier: a [363,364]" dest="identifier: a [891,892]"/>
  <match src="parameter [65956,65963]" dest="parameter [62459,62466]"/>
  <match src="primitive_type [103759,103765]" dest="primitive_type [43145,43151]"/>
  <match src="]: ] [96488,96489]" dest="]: ] [35874,35875]"/>
  <match src="type_name [86389,86396]" dest="type_name [28180,28187]"/>
  <match src="function: function [89391,89399]" dest="function: function [76581,76589]"/>
  <match src="parameter [98475,98489]" dest="parameter [37861,37875]"/>
  <match src="call_argument [25904,25954]" dest="call_argument [79281,79310]"/>
  <match src="state_variable_declaration [42786,42841]" dest="state_variable_declaration [12883,12938]"/>
  <match src=".: . [99744,99745]" dest=".: . [39130,39131]"/>
  <match src="event_definition [52045,52120]" dest="event_definition [20169,20244]"/>
  <match src="primitive_type [34863,34868]" dest="primitive_type [52575,52580]"/>
  <match src="primitive_type [97598,97605]" dest="primitive_type [36984,36991]"/>
  <match src="type_name [86700,86704]" dest="type_name [28491,28495]"/>
  <match src="address: address [86689,86696]" dest="address: address [28480,28487]"/>
  <match src="primitive_type [53485,53492]" dest="primitive_type [21609,21616]"/>
  <match src="type_name [85981,85988]" dest="type_name [27772,27779]"/>
  <match src=",: , [104223,104224]" dest=",: , [43609,43610]"/>
  <match src="number_literal: 0 [33101,33102]" dest="number_literal: 0 [50813,50814]"/>
  <match src="identifier: sub [8197,8200]" dest="identifier: sub [8725,8728]"/>
  <match src="): ) [7086,7087]" dest="): ) [7614,7615]"/>
  <match src="function_body [3321,3564]" dest="function_body [3849,4092]"/>
  <match src="return: return [91448,91454]" dest="return: return [30834,30840]"/>
  <match src="identifier: spender [101923,101930]" dest="identifier: spender [41309,41316]"/>
  <match src="event_paramater [53173,53185]" dest="event_paramater [21297,21309]"/>
  <match src="call_argument [48647,48665]" dest="call_argument [62571,62598]"/>
  <match src="primitive_type [68108,68115]" dest="primitive_type [65571,65578]"/>
  <match src="internal: internal [88955,88963]" dest="internal: internal [76145,76153]"/>
  <match src="view: view [92028,92032]" dest="view: view [31414,31418]"/>
  <match src="member_expression [82197,82207]" dest="member_expression [78311,78321]"/>
  <match src="array_access [102990,103010]" dest="array_access [42376,42396]"/>
  <match src="identifier: amount [99904,99910]" dest="identifier: amount [39290,39296]"/>
  <match src=",: , [30277,30278]" dest=",: , [47989,47990]"/>
  <match src="unary_expression [27883,27888]" dest="unary_expression [45595,45600]"/>
  <match src="identifier: c [510,511]" dest="identifier: c [1038,1039]"/>
  <match src="identifier: dollarAmount [76600,76612]" dest="identifier: dollarAmount [62427,62439]"/>
  <match src="identifier: _state [92452,92458]" dest="identifier: _state [31838,31844]"/>
  <match src="(: ( [99409,99410]" dest="(: ( [38795,38796]"/>
  <match src="call_expression [19904,19975]" dest="call_expression [56711,56769]"/>
  <match src="(: ( [80189,80190]" dest="(: ( [81544,81545]"/>
  <match src="comment: /*     Copyright 2019 dYdX Trading Inc.     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [4807,5524]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [5335,6052]"/>
  <match src="expression_statement [81668,81803]" dest="expression_statement [79769,79809]"/>
  <match src="user_defined_type [8794,8798]" dest="user_defined_type [9322,9326]"/>
  <match src="identifier: b [7577,7578]" dest="identifier: b [8105,8106]"/>
  <match src="address: address [78795,78802]" dest="address: address [70313,70320]"/>
  <match src="type_name [7697,7701]" dest="type_name [8225,8229]"/>
  <match src="member_expression [79468,79478]" dest="member_expression [71031,71041]"/>
  <match src="return_type_definition [54154,54190]" dest="return_type_definition [22278,22314]"/>
  <match src="identifier: encodePacked [31613,31625]" dest="identifier: encodePacked [49325,49337]"/>
  <match src="function: function [45619,45627]" dest="function: function [15716,15724]"/>
  <match src="function: function [9098,9106]" dest="function: function [9626,9634]"/>
  <match src=".: . [94035,94036]" dest=".: . [33421,33422]"/>
  <match src="): ) [44158,44159]" dest="): ) [14255,14256]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [35045,35134]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [52757,52846]"/>
  <match src="primitive_type [78968,78975]" dest="primitive_type [70574,70581]"/>
  <match src="identifier: epoch [101257,101262]" dest="identifier: epoch [40643,40648]"/>
  <match src="call_argument [100439,100445]" dest="call_argument [39825,39831]"/>
  <match src="function_definition [90985,91107]" dest="function_definition [30371,30493]"/>
  <match src="(: ( [13887,13888]" dest="(: ( [25188,25189]"/>
  <match src="primitive_type [95355,95362]" dest="primitive_type [34741,34748]"/>
  <match src="binary_expression [104630,104651]" dest="binary_expression [44016,44037]"/>
  <match src="identifier: msg [80288,80291]" dest="identifier: msg [71505,71508]"/>
  <match src="=: = [34883,34884]" dest="=: = [52595,52596]"/>
  <match src="if_statement [10036,10093]" dest="if_statement [10564,10621]"/>
  <match src="type_name [98316,98322]" dest="type_name [37702,37708]"/>
  <match src="{: { [103534,103535]" dest="{: { [42920,42921]"/>
  <match src="view: view [91415,91419]" dest="view: view [30801,30805]"/>
  <match src="): ) [91707,91708]" dest="): ) [31093,31094]"/>
  <match src="identifier: Mint [53144,53148]" dest="identifier: Mint [21268,21272]"/>
  <match src="call_expression [7971,8009]" dest="call_expression [8499,8537]"/>
  <match src="primitive_type [33382,33389]" dest="primitive_type [51094,51101]"/>
  <match src=",: , [13431,13432]" dest=",: , [24732,24733]"/>
  <match src="user_defined_type [44849,44861]" dest="user_defined_type [14946,14958]"/>
  <match src=".: . [79986,79987]" dest=".: . [71208,71209]"/>
  <match src="member_expression [95645,95679]" dest="member_expression [35031,35065]"/>
  <match src="identifier: Transfer [20055,20063]" dest="identifier: CouponTransfer [64692,64706]"/>
  <match src="identifier: account [100996,101003]" dest="identifier: account [40382,40389]"/>
  <match src="identifier: Approval [52051,52059]" dest="identifier: Approval [20175,20183]"/>
  <match src="[: [ [103232,103233]" dest="[: [ [42618,42619]"/>
  <match src="function_definition [49694,49763]" dest="function_definition [26077,26146]"/>
  <match src="identifier: shift [35478,35483]" dest="identifier: shift [53190,53195]"/>
  <match src="{: { [33364,33365]" dest="{: { [51076,51077]"/>
  <match src="view: view [52859,52863]" dest="view: view [20983,20987]"/>
  <match src="primitive_type [97640,97647]" dest="primitive_type [37026,37033]"/>
  <match src="{: { [93760,93761]" dest="{: { [33146,33147]"/>
  <match src="visibility [65227,65234]" dest="visibility [67677,67684]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [67336,68016]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [54564,55244]"/>
  <match src="primitive_type [78855,78862]" dest="primitive_type [70373,70380]"/>
  <match src="identifier: expiration [94852,94862]" dest="identifier: expiration [34238,34248]"/>
  <match src="identifier: sender [82791,82797]" dest="identifier: sender [80804,80810]"/>
  <match src="false: false [98086,98091]" dest="false: false [37472,37477]"/>
  <match src="call_argument [19730,19750]" dest="call_argument [63924,63944]"/>
  <match src="parameter [7697,7710]" dest="parameter [8225,8238]"/>
  <match src="type_name [42627,42634]" dest="type_name [12724,12731]"/>
  <match src="): ) [30830,30831]" dest="): ) [48542,48543]"/>
  <match src="type_name [366,373]" dest="type_name [894,901]"/>
  <match src="call_argument [76722,76730]" dest="call_argument [58340,58362]"/>
  <match src="modifier_invocation [79932,79954]" dest="modifier_invocation [72553,72582]"/>
  <match src="type_name [52182,52186]" dest="type_name [20306,20310]"/>
  <match src="&quot;: &quot; [876,877]" dest="&quot;: &quot; [1404,1405]"/>
  <match src="state_mutability [53911,53915]" dest="state_mutability [22035,22039]"/>
  <match src="type_name [71512,71519]" dest="type_name [66730,66737]"/>
  <match src="number_literal: 0 [71725,71726]" dest="number_literal: 0 [58626,58627]"/>
  <match src="identifier: add [100851,100854]" dest="identifier: add [40237,40240]"/>
  <match src="}: } [91352,91353]" dest="}: } [30738,30739]"/>
  <match src="call_argument [32343,32369]" dest="call_argument [50055,50081]"/>
  <match src="state_mutability [46378,46382]" dest="state_mutability [16475,16479]"/>
  <match src="identifier: expiration [102572,102582]" dest="identifier: expiration [41958,41968]"/>
  <match src=".: . [93938,93939]" dest=".: . [33324,33325]"/>
  <match src="identifier: account [103433,103440]" dest="identifier: account [42819,42826]"/>
  <match src="primitive_type [7558,7565]" dest="primitive_type [8086,8093]"/>
  <match src="binary_expression [102806,102837]" dest="binary_expression [42192,42223]"/>
  <match src="member_expression [95785,95802]" dest="member_expression [35171,35188]"/>
  <match src="(: ( [47977,47978]" dest="(: ( [55711,55712]"/>
  <match src="identifier: period [103253,103259]" dest="identifier: period [42639,42645]"/>
  <match src=".: . [80599,80600]" dest=".: . [71663,71664]"/>
  <match src="parameter [19652,19666]" dest="parameter [63789,63803]"/>
  <match src="bytes32: bytes32 [53112,53119]" dest="bytes32: bytes32 [21236,21243]"/>
  <match src="identifier: candidate [103115,103124]" dest="identifier: candidate [42501,42510]"/>
  <match src="return: return [94126,94132]" dest="return: return [33512,33518]"/>
  <match src="call_argument [31191,31199]" dest="call_argument [48903,48911]"/>
  <match src="identifier: Status [93088,93094]" dest="identifier: Status [32474,32480]"/>
  <match src="(: ( [27882,27883]" dest="(: ( [45594,45595]"/>
  <match src="variable_declaration_statement [3435,3453]" dest="variable_declaration_statement [3963,3981]"/>
  <match src="function_definition [99845,100116]" dest="function_definition [39231,39502]"/>
  <match src=".: . [99027,99028]" dest=".: . [38413,38414]"/>
  <match src="identifier: Epoch [87219,87224]" dest="identifier: Epoch [29010,29015]"/>
  <match src="&amp;: &amp; [36310,36311]" dest="&amp;: &amp; [54022,54023]"/>
  <match src="function_definition [95205,95324]" dest="function_definition [34591,34710]"/>
  <match src="=: = [34217,34218]" dest="=: = [51929,51930]"/>
  <match src="member_expression [100641,100656]" dest="member_expression [40027,40042]"/>
  <match src="}: } [91987,91988]" dest="}: } [31373,31374]"/>
  <match src="identifier: that [83345,83349]" dest="identifier: that [80220,80224]"/>
  <match src="function_definition [45499,45613]" dest="function_definition [15596,15710]"/>
  <match src="-: - [1398,1399]" dest="-: - [1926,1927]"/>
  <match src="): ) [91322,91323]" dest="): ) [30708,30709]"/>
  <match src="]: ] [100790,100791]" dest="]: ] [40176,40177]"/>
  <match src="emit: emit [82774,82778]" dest="emit: emit [80788,80792]"/>
  <match src="identifier: outstanding [100826,100837]" dest="identifier: outstanding [40212,40223]"/>
  <match src="type_name [98024,98031]" dest="type_name [37410,37417]"/>
  <match src=",: , [52689,52690]" dest=",: , [20813,20814]"/>
  <match src="identifier: j [33987,33988]" dest="identifier: j [51699,51700]"/>
  <match src="identifier: amount [99302,99308]" dest="identifier: amount [38688,38694]"/>
  <match src="=: = [41758,41759]" dest="=: = [11855,11856]"/>
  <match src="array_access [102061,102135]" dest="array_access [41447,41521]"/>
  <match src=",: , [28773,28774]" dest=",: , [46485,46486]"/>
  <match src="uint256: uint256 [4664,4671]" dest="uint256: uint256 [5192,5199]"/>
  <match src="): ) [31920,31921]" dest="): ) [49632,49633]"/>
  <match src="type_name [28783,28790]" dest="type_name [46495,46502]"/>
  <match src="primitive_type [52754,52761]" dest="primitive_type [20878,20885]"/>
  <match src="internal: internal [7898,7906]" dest="internal: internal [8426,8434]"/>
  <match src="identifier: a [459,460]" dest="identifier: a [987,988]"/>
  <match src="visibility [42280,42287]" dest="visibility [12377,12384]"/>
  <match src="identifier: setImplementation [89400,89417]" dest="identifier: setImplementation [76590,76607]"/>
  <match src="identifier: b [7305,7306]" dest="identifier: b [7833,7834]"/>
  <match src="{: { [88964,88965]" dest="{: { [76154,76155]"/>
  <match src="return: return [94816,94822]" dest="return: return [34202,34208]"/>
  <match src="(: ( [32512,32513]" dest="(: ( [50224,50225]"/>
  <match src="identifier: accounts [99625,99633]" dest="identifier: accounts [39011,39019]"/>
  <match src="parameter [23030,23044]" dest="parameter [17900,17914]"/>
  <match src="identifier: errorMessage [1361,1373]" dest="identifier: errorMessage [1889,1901]"/>
  <match src="number_literal: 1800 [42174,42178]" dest="number_literal: 1800 [12271,12275]"/>
  <match src=",: , [8208,8209]" dest=",: , [8736,8737]"/>
  <match src="type_name [9315,9319]" dest="type_name [9843,9847]"/>
  <match src="primitive_type [65289,65296]" dest="primitive_type [66794,66801]"/>
  <match src="): ) [92729,92730]" dest="): ) [32115,32116]"/>
  <match src=".: . [7816,7817]" dest=".: . [8344,8345]"/>
  <match src="}: } [20096,20097]" dest="}: } [64746,64747]"/>
  <match src="=: = [34249,34250]" dest="=: = [51961,51962]"/>
  <match src="type_name [97620,97627]" dest="type_name [37006,37013]"/>
  <match src="member_expression [91555,91570]" dest="member_expression [30941,30956]"/>
  <match src="uint256: uint256 [9841,9848]" dest="uint256: uint256 [10369,10376]"/>
  <match src="returns: returns [94646,94653]" dest="returns: returns [34032,34039]"/>
  <match src="string_literal [21869,21907]" dest="string_literal [62515,62546]"/>
  <match src=".: . [7535,7536]" dest=".: . [8063,8064]"/>
  <match src="user_defined_type [43742,43755]" dest="user_defined_type [13839,13852]"/>
  <match src="constant: constant [88441,88449]" dest="constant: constant [75631,75639]"/>
  <match src="uint256: uint256 [27381,27388]" dest="uint256: uint256 [45093,45100]"/>
  <match src="): ) [36128,36129]" dest="): ) [53840,53841]"/>
  <match src="call_argument [9072,9076]" dest="call_argument [9600,9604]"/>
  <match src="event_paramater [52162,52180]" dest="event_paramater [20286,20304]"/>
  <match src="{: { [102839,102840]" dest="{: { [42225,42226]"/>
  <match src="identifier: coupons [100749,100756]" dest="identifier: coupons [40135,40142]"/>
  <match src="uint256: uint256 [97640,97647]" dest="uint256: uint256 [37026,37033]"/>
  <match src="uint256: uint256 [35703,35710]" dest="uint256: uint256 [53415,53422]"/>
  <match src="call_expression [1345,1374]" dest="call_expression [1873,1902]"/>
  <match src="identifier: Upgradeable [107066,107077]" dest="identifier: Upgradeable [77667,77678]"/>
  <match src="(: ( [45531,45532]" dest="(: ( [15628,15629]"/>
  <match src="array_access [95645,95673]" dest="array_access [35031,35059]"/>
  <match src=",: , [13677,13678]" dest=",: , [24978,24979]"/>
  <match src="variable_declaration [76751,76767]" dest="variable_declaration [18133,18155]"/>
  <match src="type_name [7411,7415]" dest="type_name [7939,7943]"/>
  <match src="string [78768,78774]" dest="string [70283,70292]"/>
  <match src="call_expression [7984,8007]" dest="call_expression [8512,8535]"/>
  <match src="uint: uint [54227,54231]" dest="uint: uint [22351,22355]"/>
  <match src="identifier: b [7361,7362]" dest="identifier: b [7889,7890]"/>
  <match src="identifier: account [99496,99503]" dest="identifier: account [38882,38889]"/>
  <match src="function_body [849,916]" dest="function_body [1377,1444]"/>
  <match src="call_expression [31816,31835]" dest="call_expression [49528,49547]"/>
  <match src="identifier: length [33544,33550]" dest="identifier: length [51256,51262]"/>
  <match src="primitive_type [97973,97980]" dest="primitive_type [37359,37366]"/>
  <match src="call_expression [31021,31047]" dest="call_expression [48733,48759]"/>
  <match src="parameter [8812,8825]" dest="parameter [9340,9353]"/>
  <match src="identifier: dollarAmount [77058,77070]" dest="identifier: dollarAmount [62774,62786]"/>
  <match src="state_mutability [53673,53677]" dest="state_mutability [21797,21801]"/>
  <match src="[: [ [36426,36427]" dest="[: [ [54138,54139]"/>
  <match src="): ) [43473,43474]" dest="): ) [13570,13571]"/>
  <match src="function_definition [34625,35575]" dest="function_definition [52337,53287]"/>
  <match src="member_expression [100771,100854]" dest="member_expression [40157,40240]"/>
  <match src="(: ( [83074,83075]" dest="(: ( [58912,58913]"/>
  <match src="(: ( [65955,65956]" dest="(: ( [62458,62459]"/>
  <match src="identifier: totalBonded [71183,71194]" dest="identifier: totalRedeemable [67287,67302]"/>
  <match src="): ) [43409,43410]" dest="): ) [13506,13507]"/>
  <match src="string_literal [21949,21985]" dest="string_literal [63567,63611]"/>
  <match src="call_expression [103198,103205]" dest="call_expression [42584,42591]"/>
  <match src="variable_declaration [3435,3444]" dest="variable_declaration [3963,3972]"/>
  <match src="pure: pure [44137,44141]" dest="pure: pure [14234,14238]"/>
  <match src="internal: internal [6029,6037]" dest="internal: internal [6557,6565]"/>
  <match src="}: } [86745,86746]" dest="}: } [28536,28537]"/>
  <match src="identifier: reason [101455,101461]" dest="identifier: reason [40841,40847]"/>
  <match src="): ) [23088,23089]" dest="): ) [55985,55986]"/>
  <match src="memory: memory [3268,3274]" dest="memory: memory [3796,3802]"/>
  <match src="primitive_type [13398,13405]" dest="primitive_type [24699,24706]"/>
  <match src="external: external [107228,107236]" dest="external: external [63884,63892]"/>
  <match src="uint256: uint256 [94619,94626]" dest="uint256: uint256 [34005,34012]"/>
  <match src="identifier: COMMA [30463,30468]" dest="identifier: COMMA [48175,48180]"/>
  <match src="primitive_type [41376,41383]" dest="primitive_type [11473,11480]"/>
  <match src="call_struct_argument [44346,44372]" dest="call_struct_argument [14443,14469]"/>
  <match src="identifier: getDAOExitLockupEpochs [101602,101624]" dest="identifier: getDAOExitLockupEpochs [40988,41010]"/>
  <match src="identifier: balance [98811,98818]" dest="identifier: balance [38197,38204]"/>
  <match src=",: , [81580,81581]" dest=",: , [79838,79839]"/>
  <match src="uint256: uint256 [80310,80317]" dest="uint256: uint256 [66599,66606]"/>
  <match src="struct_member [86632,86648]" dest="struct_member [28423,28439]"/>
  <match src="primitive_type [79584,79591]" dest="primitive_type [71122,71129]"/>
  <match src="(: ( [100710,100711]" dest="(: ( [40096,40097]"/>
  <match src="type_name [65975,65982]" dest="type_name [71527,71534]"/>
  <match src="expression_statement [88974,89011]" dest="expression_statement [76164,76201]"/>
  <match src="(: ( [92315,92316]" dest="(: ( [31701,31702]"/>
  <match src="call_argument [80925,80939]" dest="call_argument [72980,72994]"/>
  <match src="returns: returns [53623,53630]" dest="returns: returns [21747,21754]"/>
  <match src="indexed: indexed [13896,13903]" dest="indexed: indexed [25197,25204]"/>
  <match src="assignment_expression [36478,36488]" dest="assignment_expression [54190,54200]"/>
  <match src="primitive_type [94294,94301]" dest="primitive_type [33680,33687]"/>
  <match src="parameter [6687,6698]" dest="parameter [7215,7226]"/>
  <match src="identifier: totalNet [92221,92229]" dest="identifier: totalNet [31607,31615]"/>
  <match src=",: , [52532,52533]" dest=",: , [20656,20657]"/>
  <match src="event_paramater [78912,78935]" dest="event_paramater [82812,82835]"/>
  <match src="uint256: uint256 [68208,68215]" dest="uint256: uint256 [70517,70524]"/>
  <match src="primitive_type [87208,87215]" dest="primitive_type [28999,29006]"/>
  <match src="(: ( [6086,6087]" dest="(: ( [6614,6615]"/>
  <match src="(: ( [91528,91529]" dest="(: ( [30914,30915]"/>
  <match src="): ) [54112,54113]" dest="): ) [22236,22237]"/>
  <match src="call_expression [101420,101462]" dest="call_expression [40806,40848]"/>
  <match src="identifier: candidates [104066,104076]" dest="identifier: candidates [43452,43462]"/>
  <match src="comment: /**      * Global      */ [98104,98129]" dest="comment: /**      * Global      */ [37490,37515]"/>
  <match src="identifier: _state [100728,100734]" dest="identifier: _state [40114,40120]"/>
  <match src=".: . [105769,105770]" dest=".: . [68913,68914]"/>
  <match src="function_definition [52375,52427]" dest="function_definition [20499,20551]"/>
  <match src="identifier: value [79748,79753]" dest="identifier: value [71295,71300]"/>
  <match src="type_name [9128,9132]" dest="type_name [9656,9660]"/>
  <match src="parameter [73088,73102]" dest="parameter [55917,55931]"/>
  <match src="uint256: uint256 [78880,78887]" dest="uint256: uint256 [70398,70405]"/>
  <match src="returns: returns [52565,52572]" dest="returns: returns [20689,20696]"/>
  <match src="binary_expression [9062,9085]" dest="binary_expression [9590,9613]"/>
  <match src=".: . [103167,103168]" dest=".: . [42553,42554]"/>
  <match src="parameter [104209,104223]" dest="parameter [43595,43609]"/>
  <match src="identifier: getBootstrappingPrice [44219,44240]" dest="identifier: getBootstrappingPrice [14316,14337]"/>
  <match src="binary_expression [1966,1972]" dest="binary_expression [2494,2500]"/>
  <match src="(: ( [33832,33833]" dest="(: ( [51544,51545]"/>
  <match src="visibility [43309,43316]" dest="visibility [13406,13413]"/>
  <match src="==: == [102833,102835]" dest="==: == [42219,42221]"/>
  <match src=".: . [101271,101272]" dest=".: . [40657,40658]"/>
  <match src="address: address [88928,88935]" dest="address: address [76118,76125]"/>
  <match src="type_name [13699,13706]" dest="type_name [25000,25007]"/>
  <match src="member_expression [101148,101217]" dest="member_expression [40534,40603]"/>
  <match src="internal: internal [31500,31508]" dest="internal: internal [49212,49220]"/>
  <match src=":: : [7529,7530]" dest=":: : [8057,8058]"/>
  <match src="uint256: uint256 [94537,94544]" dest="uint256: uint256 [33923,33930]"/>
  <match src="call_argument [28548,28554]" dest="call_argument [46260,46266]"/>
  <match src="type_name [31408,31412]" dest="type_name [49120,49124]"/>
  <match src="}: } [43653,43654]" dest="}: } [13750,13751]"/>
  <match src="primitive_type [45206,45213]" dest="primitive_type [15303,15310]"/>
  <match src=",: , [51490,51491]" dest=",: , [60932,60933]"/>
  <match src="=: = [105601,105602]" dest="=: = [68745,68746]"/>
  <match src="state_mutability [30802,30806]" dest="state_mutability [48514,48518]"/>
  <match src="): ) [13949,13950]" dest="): ) [25250,25251]"/>
  <match src="identifier: payloadA [30057,30065]" dest="identifier: payloadA [47769,47777]"/>
  <match src="identifier: compareTo [8901,8910]" dest="identifier: compareTo [9429,9438]"/>
  <match src="identifier: withdraw [79575,79583]" dest="identifier: withdraw [71113,71121]"/>
  <match src="parameter [70470,70474]" dest="parameter [81639,81643]"/>
  <match src="function_definition [342,518]" dest="function_definition [870,1046]"/>
  <match src="uint256: uint256 [9742,9749]" dest="uint256: uint256 [10270,10277]"/>
  <match src="uint: uint [53187,53191]" dest="uint: uint [21311,21315]"/>
  <match src="identifier: stringifyTruncated [28079,28097]" dest="identifier: stringifyTruncated [45791,45809]"/>
  <match src="primitive_type [41803,41810]" dest="primitive_type [11900,11907]"/>
  <match src=".: . [98551,98552]" dest=".: . [37937,37938]"/>
  <match src="primitive_type [79008,79015]" dest="primitive_type [70630,70637]"/>
  <match src="return: return [44460,44466]" dest="return: return [14557,14563]"/>
  <match src="&quot;: &quot; [19790,19791]" dest="&quot;: &quot; [64004,64005]"/>
  <match src="identifier: dollarAmount [76943,76955]" dest="identifier: dollarAmount [62722,62734]"/>
  <match src="[: [ [93266,93267]" dest="[: [ [32652,32653]"/>
  <match src="contract_declaration [85894,86185]" dest="contract_declaration [27685,27976]"/>
  <match src="if_statement [33344,33637]" dest="if_statement [51056,51349]"/>
  <match src="uint256: uint256 [68183,68190]" dest="uint256: uint256 [70653,70660]"/>
  <match src="visibility [102507,102515]" dest="visibility [41893,41901]"/>
  <match src="identifier: epoch [101139,101144]" dest="identifier: epoch [40525,40530]"/>
  <match src="parameter [44290,44309]" dest="parameter [14387,14406]"/>
  <match src="number_literal: 0 [99418,99419]" dest="number_literal: 0 [38804,38805]"/>
  <match src="): ) [65225,65226]" dest="): ) [66579,66580]"/>
  <match src="address: address [84613,84620]" dest="address: address [73941,73948]"/>
  <match src="identifier: add [80933,80936]" dest="identifier: add [72988,72991]"/>
  <match src="return_type_definition [391,408]" dest="return_type_definition [919,936]"/>
  <match src="type_name [86279,86286]" dest="type_name [28070,28077]"/>
  <match src="identifier: epoch [102786,102791]" dest="identifier: epoch [42172,42177]"/>
  <match src="pragma: pragma [61,67]" dest="pragma: pragma [25,31]"/>
  <match src="identifier: candidate [103416,103425]" dest="identifier: candidate [42802,42811]"/>
  <match src="): ) [9887,9888]" dest="): ) [10415,10416]"/>
  <match src="uint256: uint256 [86943,86950]" dest="uint256: uint256 [28734,28741]"/>
  <match src="member_expression [100872,100886]" dest="member_expression [40258,40272]"/>
  <match src="=: = [104057,104058]" dest="=: = [43443,43444]"/>
  <match src="function: function [6114,6122]" dest="function: function [6642,6650]"/>
  <match src="): ) [100041,100042]" dest="): ) [39427,39428]"/>
  <match src="function: function [43660,43668]" dest="function: function [13757,13765]"/>
  <match src="type_name [49708,49715]" dest="type_name [26091,26098]"/>
  <match src="(: ( [93109,93110]" dest="(: ( [32495,32496]"/>
  <match src="identifier: D256 [6923,6927]" dest="identifier: D256 [7451,7455]"/>
  <match src="identifier: a [10109,10110]" dest="identifier: a [10637,10638]"/>
  <match src="address: address [52967,52974]" dest="address: address [21091,21098]"/>
  <match src="): ) [31347,31348]" dest="): ) [49059,49060]"/>
  <match src="primitive_type [68208,68215]" dest="primitive_type [70517,70524]"/>
  <match src="): ) [100717,100718]" dest="): ) [40103,40104]"/>
  <match src="function: function [79295,79303]" dest="function: function [70859,70867]"/>
  <match src="): ) [97905,97906]" dest="): ) [37291,37292]"/>
  <match src="internal: internal [27847,27855]" dest="internal: internal [45559,45567]"/>
  <match src="): ) [19701,19702]" dest="): ) [63882,63883]"/>
  <match src="type_name [15875,15882]" dest="type_name [82728,82735]"/>
  <match src="private: private [36582,36589]" dest="private: private [54294,54301]"/>
  <match src="call_argument [89219,89236]" dest="call_argument [76409,76426]"/>
  <match src="): ) [80617,80618]" dest="): ) [71681,71682]"/>
  <match src="bytes: bytes [33801,33806]" dest="bytes: bytes [51513,51518]"/>
  <match src="member_expression [103844,103910]" dest="member_expression [43230,43296]"/>
  <match src=",: , [93683,93684]" dest=",: , [33069,33070]"/>
  <match src="identifier: slot [96803,96807]" dest="identifier: slot [36189,36193]"/>
  <match src="}: } [35544,35545]" dest="}: } [53256,53257]"/>
  <match src="state_mutability [44655,44659]" dest="state_mutability [14752,14756]"/>
  <match src="expression_statement [21133,21223]" dest="expression_statement [56236,56349]"/>
  <match src="visibility [96004,96010]" dest="visibility [35390,35396]"/>
  <match src="{: { [93096,93097]" dest="{: { [32482,32483]"/>
  <match src="type_cast_expression [36710,36735]" dest="type_cast_expression [54422,54447]"/>
  <match src=",: , [97638,97639]" dest=",: , [37024,37025]"/>
  <match src="identifier: value [80202,80207]" dest="identifier: value [71965,71970]"/>
  <match src="): ) [99910,99911]" dest="): ) [39296,39297]"/>
  <match src="expression_statement [21232,21272]" dest="expression_statement [56205,56227]"/>
  <match src="event_paramater [25704,25727]" dest="event_paramater [60569,60592]"/>
  <match src="primitive_type [31449,31456]" dest="primitive_type [49161,49168]"/>
  <match src="call_expression [7606,7621]" dest="call_expression [8134,8149]"/>
  <match src="parameter [8794,8810]" dest="parameter [9322,9338]"/>
  <match src="primitive_type [103735,103742]" dest="primitive_type [43121,43128]"/>
  <match src="struct_member [86721,86738]" dest="struct_member [28512,28529]"/>
  <match src="(: ( [33800,33801]" dest="(: ( [51512,51513]"/>
  <match src="view: view [95586,95590]" dest="view: view [34972,34976]"/>
  <match src="string_literal [63588,63607]" dest="string_literal [81467,81481]"/>
  <match src="function: function [29961,29969]" dest="function: function [47673,47681]"/>
  <match src="identifier: delegatecall [89077,89089]" dest="identifier: delegatecall [76267,76279]"/>
  <match src="primitive_type [90946,90951]" dest="primitive_type [30332,30337]"/>
  <match src="identifier: balanceOfCoupons [92770,92786]" dest="identifier: balanceOfCoupons [32156,32172]"/>
  <match src="expression_statement [104279,104399]" dest="expression_statement [43665,43785]"/>
  <match src="type_name [1691,1698]" dest="type_name [2219,2226]"/>
  <match src="return_statement [97808,97821]" dest="return_statement [37194,37207]"/>
  <match src="member_expression [65689,65702]" dest="member_expression [81754,81767]"/>
  <match src="struct_member [41981,41996]" dest="struct_member [12078,12093]"/>
  <match src="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [84237,84588]" dest="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [73565,73916]"/>
  <match src="type_name [27381,27388]" dest="type_name [45093,45100]"/>
  <match src="identifier: expiringCoupons [94884,94899]" dest="identifier: expiringCoupons [34270,34285]"/>
  <match src="identifier: sender [79987,79993]" dest="identifier: sender [71209,71215]"/>
  <match src="identifier: Transfer [99401,99409]" dest="identifier: Transfer [38787,38795]"/>
  <match src="identifier: reserveA [76759,76767]" dest="identifier: totalSupplyEnd [18141,18155]"/>
  <match src="function_body [91438,91484]" dest="function_body [30824,30870]"/>
  <match src="primitive_type [43599,43606]" dest="primitive_type [13696,13703]"/>
  <match src="(: ( [31535,31536]" dest="(: ( [49247,49248]"/>
  <match src="identifier: value [6088,6093]" dest="identifier: value [6616,6621]"/>
  <match src="function: function [66392,66400]" dest="function: function [62216,62224]"/>
  <match src="identifier: sub [7995,7998]" dest="identifier: sub [8523,8526]"/>
  <match src="function_definition [52432,52495]" dest="function_definition [20556,20619]"/>
  <match src="variable_declaration [81185,81205]" dest="variable_declaration [62668,62688]"/>
  <match src="string [105603,105615]" dest="string [68747,68759]"/>
  <match src="type_name [45946,45958]" dest="type_name [16043,16055]"/>
  <match src=".: . [6744,6745]" dest=".: . [7272,7273]"/>
  <match src="array_access [100771,100791]" dest="array_access [40157,40177]"/>
  <match src="function_definition [81911,82832]" dest="function_definition [79920,80829]"/>
  <match src="uint256: uint256 [73710,73717]" dest="uint256: uint256 [56408,56415]"/>
  <match src="type_name [9297,9301]" dest="type_name [9825,9829]"/>
  <match src="return_statement [91176,91205]" dest="return_statement [30562,30591]"/>
  <match src="expression_statement [102010,102169]" dest="expression_statement [41396,41555]"/>
  <match src="identifier: _state [93251,93257]" dest="identifier: _state [32637,32643]"/>
  <match src="string_literal [2675,2703]" dest="string_literal [3203,3231]"/>
  <match src="(: ( [45753,45754]" dest="(: ( [15850,15851]"/>
  <match src=":: : [7982,7983]" dest=":: : [8510,8511]"/>
  <match src="(: ( [7797,7798]" dest="(: ( [8325,8326]"/>
  <match src="!=: != [19820,19822]" dest="!=: != [64056,64058]"/>
  <match src="event_definition [88682,88729]" dest="event_definition [75872,75919]"/>
  <match src="function_body [92160,92206]" dest="function_body [31546,31592]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [89484,89511]" dest="identifier: OpenZeppelinUpgradesAddress [76674,76701]"/>
  <match src="identifier: spender [48847,48854]" dest="identifier: spender [63667,63674]"/>
  <match src="(: ( [98299,98300]" dest="(: ( [37685,37686]"/>
  <match src="call_expression [29033,29057]" dest="call_expression [46745,46769]"/>
  <match src="primitive_type [27623,27627]" dest="primitive_type [45335,45339]"/>
  <match src="call_argument [35018,35032]" dest="call_argument [52730,52744]"/>
  <match src="primitive_type [53255,53259]" dest="primitive_type [21379,21383]"/>
  <match src="type_name [91315,91322]" dest="type_name [30701,30708]"/>
  <match src="function_definition [97833,97936]" dest="function_definition [37219,37322]"/>
  <match src="identifier: sender [79947,79953]" dest="identifier: sender [72575,72581]"/>
  <match src="type_name [90488,90495]" dest="type_name [29874,29881]"/>
  <match src="identifier: Decimal [90507,90514]" dest="identifier: Decimal [29893,29900]"/>
  <match src="(: ( [13062,13063]" dest="(: ( [24363,24364]"/>
  <match src="view: view [93555,93559]" dest="view: view [32941,32945]"/>
  <match src="identifier: sender [80194,80200]" dest="identifier: sender [81549,81555]"/>
  <match src="uint256: uint256 [91834,91841]" dest="uint256: uint256 [31220,31227]"/>
  <match src=",: , [3410,3411]" dest=",: , [3938,3939]"/>
  <match src="user_defined_type [95608,95622]" dest="user_defined_type [34994,35008]"/>
  <match src=":: : [43880,43881]" dest=":: : [13977,13978]"/>
  <match src="primitive_type [13699,13706]" dest="primitive_type [25000,25007]"/>
  <match src=".: . [102375,102376]" dest=".: . [41761,41762]"/>
  <match src="identifier: balance [99242,99249]" dest="identifier: balance [38628,38635]"/>
  <match src="type_cast_expression [31581,31907]" dest="type_cast_expression [49293,49619]"/>
  <match src="): ) [101757,101758]" dest="): ) [41143,41144]"/>
  <match src="state_mutability [52560,52564]" dest="state_mutability [20684,20688]"/>
  <match src="bytes: bytes [35843,35848]" dest="bytes: bytes [53555,53560]"/>
  <match src="function: function [91490,91498]" dest="function: function [30876,30884]"/>
  <match src="{: { [101096,101097]" dest="{: { [40482,40483]"/>
  <match src="primitive_type [53632,53639]" dest="primitive_type [21756,21763]"/>
  <match src="): ) [29292,29293]" dest="): ) [47004,47005]"/>
  <match src="member_expression [103844,103861]" dest="member_expression [43230,43247]"/>
  <match src="{: { [31543,31544]" dest="{: { [49255,49256]"/>
  <match src="): ) [102979,102980]" dest="): ) [42365,42366]"/>
  <match src="uint256: uint256 [86895,86902]" dest="uint256: uint256 [28686,28693]"/>
  <match src="identifier: coupons [101131,101138]" dest="identifier: coupons [40517,40524]"/>
  <match src="}: } [98728,98729]" dest="}: } [38114,38115]"/>
  <match src="): ) [43574,43575]" dest="): ) [13671,13672]"/>
  <match src="function_body [21830,22087]" dest="function_body [63501,63749]"/>
  <match src="event: event [97583,97588]" dest="event: event [36969,36974]"/>
  <match src="event_definition [13873,13951]" dest="event_definition [25174,25252]"/>
  <match src="identifier: expiring [86399,86407]" dest="identifier: expiring [28190,28198]"/>
  <match src="identifier: i [34259,34260]" dest="identifier: i [51971,51972]"/>
  <match src="(: ( [101492,101493]" dest="(: ( [40878,40879]"/>
  <match src="parameter [4664,4673]" dest="parameter [5192,5201]"/>
  <match src="modifier_invocation [80259,80268]" dest="modifier_invocation [71456,71485]"/>
  <match src=",: , [51476,51477]" dest=",: , [60901,60902]"/>
  <match src="): ) [83670,83671]" dest="): ) [78935,78936]"/>
  <match src="emit_statement [79848,79881]" dest="emit_statement [71373,71406]"/>
  <match src="call_argument [29833,29852]" dest="call_argument [47545,47564]"/>
  <match src="=: = [42590,42591]" dest="=: = [12687,12688]"/>
  <match src="identifier: i [34412,34413]" dest="identifier: i [52124,52125]"/>
  <match src="expression_statement [47820,47994]" dest="expression_statement [55673,55727]"/>
  <match src="parameter [92388,92403]" dest="parameter [31774,31789]"/>
  <match src="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [83694,84194]" dest="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [73022,73522]"/>
  <match src="): ) [84628,84629]" dest="): ) [73956,73957]"/>
  <match src="call_struct_argument [6327,6356]" dest="call_struct_argument [6855,6884]"/>
  <match src="call_expression [43797,43962]" dest="call_expression [13894,14059]"/>
  <match src="type_name [6687,6691]" dest="type_name [7215,7219]"/>
  <match src="number_literal: 4 [35533,35534]" dest="number_literal: 4 [53245,53246]"/>
  <match src="identifier: _state [93777,93783]" dest="identifier: _state [33163,33169]"/>
  <match src="memory: memory [98323,98329]" dest="memory: memory [37709,37715]"/>
  <match src="view: view [92842,92846]" dest="view: view [32228,32232]"/>
  <match src="[: [ [96615,96616]" dest="[: [ [36001,36002]"/>
  <match src="internal: internal [99564,99572]" dest="internal: internal [38950,38958]"/>
  <match src="yul_path [96789,96793]" dest="yul_path [36175,36179]"/>
  <match src="internal: internal [6870,6878]" dest="internal: internal [7398,7406]"/>
  <match src="parameter [4726,4733]" dest="parameter [5254,5261]"/>
  <match src="parameter [52421,52425]" dest="parameter [20545,20549]"/>
  <match src="return: return [36794,36800]" dest="return: return [54506,54512]"/>
  <match src="binary_expression [35492,35509]" dest="binary_expression [53204,53221]"/>
  <match src="call_argument [100855,100861]" dest="call_argument [40241,40247]"/>
  <match src="[: [ [102605,102606]" dest="[: [ [41991,41992]"/>
  <match src="address: address [105947,105954]" dest="address: address [69091,69098]"/>
  <match src="primitive_type [79050,79057]" dest="primitive_type [70438,70445]"/>
  <match src="): ) [6173,6174]" dest="): ) [6701,6702]"/>
  <match src="member_expression [104795,104812]" dest="member_expression [44181,44198]"/>
  <match src="visibility [41718,41725]" dest="visibility [11815,11822]"/>
  <match src="uint8: uint8 [53092,53097]" dest="uint8: uint8 [21216,21221]"/>
  <match src="expression_statement [82612,82659]" dest="expression_statement [62797,62856]"/>
  <match src="): ) [43961,43962]" dest="): ) [14058,14059]"/>
  <match src="function_body [66443,66475]" dest="function_body [62285,62388]"/>
  <match src="identifier: abi [32220,32223]" dest="identifier: abi [49932,49935]"/>
  <match src="assignment_expression [98200,98257]" dest="assignment_expression [37586,37643]"/>
  <match src="identifier: State [90457,90462]" dest="identifier: State [29843,29848]"/>
  <match src="array_access [33348,33357]" dest="array_access [51060,51069]"/>
  <match src="(: ( [79942,79943]" dest="(: ( [72570,72571]"/>
  <match src="identifier: FOUR_BIT_MASK [27680,27693]" dest="identifier: FOUR_BIT_MASK [45392,45405]"/>
  <match src="event_definition [51412,51498]" dest="event_definition [60823,60962]"/>
  <match src="type_name [8632,8636]" dest="type_name [9160,9164]"/>
  <match src="memory: memory [7340,7346]" dest="memory: memory [7868,7874]"/>
  <match src="identifier: getReserves [53765,53776]" dest="identifier: getReserves [21889,21900]"/>
  <match src="identifier: i [36206,36207]" dest="identifier: i [53918,53919]"/>
  <match src="identifier: ASCII_LOWER_EX [27457,27471]" dest="identifier: ASCII_LOWER_EX [45169,45183]"/>
  <match src="function_body [6175,6225]" dest="function_body [6703,6753]"/>
  <match src="identifier: sender [81574,81580]" dest="identifier: sender [79832,79838]"/>
  <match src="type_name [77494,77501]" dest="type_name [61650,61657]"/>
  <match src="call_argument [63570,63574]" dest="call_argument [81449,81453]"/>
  <match src="parameter [100190,100204]" dest="parameter [39576,39590]"/>
  <match src="state_mutability [53788,53792]" dest="state_mutability [21912,21916]"/>
  <match src="identifier: blockTimestampLast [53845,53863]" dest="identifier: blockTimestampLast [21969,21987]"/>
  <match src="return: return [92170,92176]" dest="return: return [31556,31562]"/>
  <match src="{: { [409,410]" dest="{: { [937,938]"/>
  <match src="parameter [93569,93576]" dest="parameter [32955,32962]"/>
  <match src="emit_statement [80179,80209]" dest="emit_statement [81533,81568]"/>
  <match src="identifier: b [8395,8396]" dest="identifier: b [8923,8924]"/>
  <match src="call_argument [19810,19833]" dest="call_argument [64046,64069]"/>
  <match src="call_expression [82179,82208]" dest="call_expression [78301,78322]"/>
  <match src="uint256: uint256 [71365,71372]" dest="uint256: uint256 [78947,78954]"/>
  <match src="): ) [106322,106323]" dest="): ) [69466,69467]"/>
  <match src="identifier: accounts [87182,87190]" dest="identifier: accounts [28973,28981]"/>
  <match src="identifier: period [86616,86622]" dest="identifier: period [28407,28413]"/>
  <match src="call_argument [51044,51050]" dest="call_argument [64436,64442]"/>
  <match src="identifier: b [8082,8083]" dest="identifier: b [8610,8611]"/>
  <match src="variable_declaration [94026,94064]" dest="variable_declaration [33412,33450]"/>
  <match src="uint256: uint256 [68406,68413]" dest="uint256: uint256 [65812,65819]"/>
  <match src="): ) [96032,96033]" dest="): ) [35418,35419]"/>
  <match src="{: { [44345,44346]" dest="{: { [14442,14443]"/>
  <match src="private: private [25746,25753]" dest="private: private [58929,58936]"/>
  <match src="string [19090,19129]" dest="string [70766,70787]"/>
  <match src="return_type_definition [94528,94545]" dest="return_type_definition [33914,33931]"/>
  <match src="identifier: add [6567,6570]" dest="identifier: add [7095,7098]"/>
  <match src="indexed: indexed [51462,51469]" dest="indexed: indexed [60891,60898]"/>
  <match src="bool: bool [28764,28768]" dest="bool: bool [46476,46480]"/>
  <match src="identifier: D256 [6192,6196]" dest="identifier: D256 [6720,6724]"/>
  <match src="parameter [101738,101752]" dest="parameter [41124,41138]"/>
  <match src="): ) [35986,35987]" dest="): ) [53698,53699]"/>
  <match src="call_argument [8587,8591]" dest="call_argument [9115,9119]"/>
  <match src="): ) [11534,11535]" dest="): ) [22835,22836]"/>
  <match src=",: , [63556,63557]" dest=",: , [81435,81436]"/>
  <match src="type_name [30075,30082]" dest="type_name [47787,47794]"/>
  <match src="identifier: epoch [95363,95368]" dest="identifier: epoch [34749,34754]"/>
  <match src=",: , [8060,8061]" dest=",: , [8588,8589]"/>
  <match src="): ) [25677,25678]" dest="): ) [60816,60817]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [2717,3221]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3245,3749]"/>
  <match src="event_paramater [13888,13909]" dest="event_paramater [25189,25210]"/>
  <match src="returns: returns [61927,61934]" dest="returns: returns [26982,26989]"/>
  <match src="internal: internal [9169,9177]" dest="internal: internal [9697,9705]"/>
  <match src="returns: returns [96689,96696]" dest="returns: returns [36075,36082]"/>
  <match src="type_name [73088,73095]" dest="type_name [55917,55924]"/>
  <match src="returns: returns [46481,46488]" dest="returns: returns [16578,16585]"/>
  <match src="member_expression [6734,6744]" dest="member_expression [7262,7272]"/>
  <match src=",: , [53185,53186]" dest=",: , [21309,21310]"/>
  <match src="function_body [79631,79887]" dest="function_body [71177,71412]"/>
  <match src="string: string [29598,29604]" dest="string: string [47310,47316]"/>
  <match src="function_body [30811,31379]" dest="function_body [48523,49091]"/>
  <match src="address: address [61936,61943]" dest="address: address [26991,26998]"/>
  <match src="identifier: upgradeTo [88918,88927]" dest="identifier: upgradeTo [76108,76117]"/>
  <match src="mapping: mapping [87248,87255]" dest="mapping: mapping [29039,29046]"/>
  <match src="pure: pure [8852,8856]" dest="pure: pure [9380,9384]"/>
  <match src="return_statement [35555,35569]" dest="return_statement [53267,53281]"/>
  <match src="identifier: b [7025,7026]" dest="identifier: b [7553,7554]"/>
  <match src="identifier: sender [82641,82647]" dest="identifier: sender [62827,62833]"/>
  <match src="address: address [29490,29497]" dest="address: address [47202,47209]"/>
  <match src="parameter [44669,44688]" dest="parameter [14766,14785]"/>
  <match src="identifier: incrementBalanceOfStaged [81416,81440]" dest="identifier: incrementBalanceOfStaged [72699,72723]"/>
  <match src="call_expression [7793,7831]" dest="call_expression [8321,8359]"/>
  <match src="identifier: decrementRejectFor [104154,104172]" dest="identifier: decrementRejectFor [43540,43558]"/>
  <match src="identifier: account [100173,100180]" dest="identifier: account [39559,39566]"/>
  <match src="call_argument [29768,29774]" dest="call_argument [47480,47486]"/>
  <match src="identifier: Candidate [95608,95617]" dest="identifier: Candidate [34994,35003]"/>
  <match src="identifier: char [36441,36445]" dest="identifier: char [54153,54157]"/>
  <match src="identifier: isInitialized [106190,106203]" dest="identifier: isInitialized [69334,69347]"/>
  <match src="internal: internal [6648,6656]" dest="internal: internal [7176,7184]"/>
  <match src="identifier: _state [102904,102910]" dest="identifier: _state [42290,42296]"/>
  <match src="number_literal: 2e16 [43150,43154]" dest="number_literal: 2e16 [13247,13251]"/>
  <match src="bool: bool [97901,97905]" dest="bool: bool [37287,37291]"/>
  <match src="call_argument [81613,81648]" dest="call_argument [80722,80736]"/>
  <match src=",: , [51050,51051]" dest=",: , [64442,64443]"/>
  <match src="uint8: uint8 [52363,52368]" dest="uint8: uint8 [20487,20492]"/>
  <match src="{: { [8156,8157]" dest="{: { [8684,8685]"/>
  <match src="(: ( [102388,102389]" dest="(: ( [41774,41775]"/>
  <match src="call_argument [81731,81742]" dest="call_argument [79792,79801]"/>
  <match src="internal: internal [28297,28305]" dest="internal: internal [46009,46017]"/>
  <match src=".: . [6206,6207]" dest=".: . [6734,6735]"/>
  <match src="number_literal: 0x6B175474E89094C44Da98b954EedeAC495271d0F [41583,41625]" dest="number_literal: 0x6B175474E89094C44Da98b954EedeAC495271d0F [11680,11722]"/>
  <match src="): ) [94392,94393]" dest="): ) [33778,33779]"/>
  <match src="identifier: _state [96598,96604]" dest="identifier: _state [35984,35990]"/>
  <match src="type_name [1253,1260]" dest="type_name [1781,1788]"/>
  <match src="identifier: BASE [6348,6352]" dest="identifier: BASE [6876,6880]"/>
  <match src="identifier: _state [99013,99019]" dest="identifier: _state [38399,38405]"/>
  <match src="identifier: i [34474,34475]" dest="identifier: i [52186,52187]"/>
  <match src="): ) [81521,81522]" dest="): ) [71730,71731]"/>
  <match src="uint256: uint256 [2639,2646]" dest="uint256: uint256 [3167,3174]"/>
  <match src="memory: memory [52307,52313]" dest="memory: memory [20431,20437]"/>
  <match src="identifier: epoch [95304,95309]" dest="identifier: epoch [34690,34695]"/>
  <match src="primitive_type [78880,78887]" dest="primitive_type [70398,70405]"/>
  <match src="parameter [6246,6255]" dest="parameter [6774,6783]"/>
  <match src=".: . [57984,57985]" dest=".: . [83250,83251]"/>
  <match src="call_expression [31732,31758]" dest="call_expression [49444,49470]"/>
  <match src="[: [ [104076,104077]" dest="[: [ [43462,43463]"/>
  <match src="=: = [101146,101147]" dest="=: = [40532,40533]"/>
  <match src="number_literal: 48 [42321,42323]" dest="number_literal: 48 [12418,12420]"/>
  <match src="call_argument [101592,101626]" dest="call_argument [40978,41012]"/>
  <match src="): ) [28876,28877]" dest="): ) [46588,46589]"/>
  <match src="mapping: mapping [86075,86082]" dest="mapping: mapping [27866,27873]"/>
  <match src="member_expression [101529,101564]" dest="member_expression [40915,40950]"/>
  <match src="): ) [44448,44449]" dest="): ) [14545,14546]"/>
  <match src="return_type_definition [90845,90868]" dest="return_type_definition [30231,30254]"/>
  <match src="indexed: indexed [52091,52098]" dest="indexed: indexed [20215,20222]"/>
  <match src="identifier: add [94394,94397]" dest="identifier: add [33780,33783]"/>
  <match src="primitive_type [1253,1260]" dest="primitive_type [1781,1788]"/>
  <match src="call_argument [83656,83660]" dest="call_argument [78901,78905]"/>
  <match src="call_argument [19934,19974]" dest="call_argument [56738,56768]"/>
  <match src="uint256: uint256 [73382,73389]" dest="uint256: uint256 [83312,83319]"/>
  <match src="=: = [82516,82517]" dest="=: = [72644,72645]"/>
  <match src="function_definition [6986,7148]" dest="function_definition [7514,7676]"/>
  <match src="): ) [53121,53122]" dest="): ) [21245,21246]"/>
  <match src="primitive_type [27440,27447]" dest="primitive_type [45152,45159]"/>
  <match src="identifier: reason [28254,28260]" dest="identifier: reason [45966,45972]"/>
  <match src=".: . [99607,99608]" dest=".: . [38993,38994]"/>
  <match src="expression_statement [89162,89195]" dest="expression_statement [76352,76385]"/>
  <match src="string: string [98316,98322]" dest="string: string [37702,37708]"/>
  <match src="state_mutability [92842,92846]" dest="state_mutability [32228,32232]"/>
  <match src="(: ( [83184,83185]" dest="(: ( [58790,58791]"/>
  <match src="function_body [98359,98441]" dest="function_body [37745,37827]"/>
  <match src=".: . [45786,45787]" dest=".: . [15883,15884]"/>
  <match src="variable_declaration [65327,65351]" dest="variable_declaration [66817,66834]"/>
  <match src="(: ( [29132,29133]" dest="(: ( [46844,46845]"/>
  <match src="type_alias [5667,5675]" dest="type_alias [6195,6203]"/>
  <match src="parameter [1725,1732]" dest="parameter [2253,2260]"/>
  <match src="return_type_definition [1716,1733]" dest="return_type_definition [2244,2261]"/>
  <match src="): ) [77205,77206]" dest="): ) [59473,59474]"/>
  <match src="byte: byte [34479,34483]" dest="byte: byte [52191,52195]"/>
  <match src="array_access [100260,100284]" dest="array_access [39646,39670]"/>
  <match src="identifier: compareTo [9062,9071]" dest="identifier: compareTo [9590,9599]"/>
  <match src="primitive_type [94619,94626]" dest="primitive_type [34005,34012]"/>
  <match src="identifier: recipient [19676,19685]" dest="identifier: recipient [63821,63830]"/>
  <match src="): ) [92706,92707]" dest="): ) [32092,32093]"/>
  <match src="yul_path [33536,33542]" dest="yul_path [51248,51254]"/>
  <match src="&quot;: &quot; [105808,105809]" dest="&quot;: &quot; [68952,68953]"/>
  <match src="}: } [96226,96227]" dest="}: } [35612,35613]"/>
  <match src="}: } [96505,96506]" dest="}: } [35891,35892]"/>
  <match src="return: return [36698,36704]" dest="return: return [54410,54416]"/>
  <match src="(: ( [28195,28196]" dest="(: ( [45907,45908]"/>
  <match src="array_access [94823,94843]" dest="array_access [34209,34229]"/>
  <match src="state_mutability [52991,52995]" dest="state_mutability [21115,21119]"/>
  <match src="type_name [15732,15739]" dest="type_name [60296,60303]"/>
  <match src="}: } [46638,46639]" dest="}: } [16735,16736]"/>
  <match src="): ) [47982,47983]" dest="): ) [55716,55717]"/>
  <match src="): ) [6904,6905]" dest="): ) [7432,7433]"/>
  <match src="identifier: that [31394,31398]" dest="identifier: that [49106,49110]"/>
  <match src="primitive_type [9607,9614]" dest="primitive_type [10135,10142]"/>
  <match src=".: . [98810,98811]" dest=".: . [38196,38197]"/>
  <match src="{: { [89691,89692]" dest="{: { [76881,76882]"/>
  <match src="type_name [94936,94943]" dest="type_name [34322,34329]"/>
  <match src="modifier_invocation [79336,79358]" dest="modifier_invocation [78243,78273]"/>
  <match src="bool: bool [30645,30649]" dest="bool: bool [48357,48361]"/>
  <match src="type_cast_expression [34479,34513]" dest="type_cast_expression [52191,52225]"/>
  <match src="identifier: candidates [103851,103861]" dest="identifier: candidates [43237,43247]"/>
  <match src="primitive_type [90488,90495]" dest="primitive_type [29874,29881]"/>
  <match src="identifier: sender [53165,53171]" dest="identifier: sender [21289,21295]"/>
  <match src="call_expression [28406,28686]" dest="call_expression [46118,46398]"/>
  <match src="(: ( [80038,80039]" dest="(: ( [72233,72234]"/>
  <match src="type_name [95066,95073]" dest="type_name [34452,34459]"/>
  <match src="&quot;: &quot; [21086,21087]" dest="&quot;: &quot; [63253,63254]"/>
  <match src="identifier: pool [91599,91603]" dest="identifier: pool [30985,30989]"/>
  <match src="expression_statement [21840,21909]" dest="expression_statement [62478,62548]"/>
  <match src="primitive_type [52519,52526]" dest="primitive_type [20643,20650]"/>
  <match src="returns: returns [44660,44667]" dest="returns: returns [14757,14764]"/>
  <match src="function_definition [75561,75730]" dest="function_definition [61087,61494]"/>
  <match src="type_name [96575,96579]" dest="type_name [35961,35965]"/>
  <match src="}: } [8225,8226]" dest="}: } [8753,8754]"/>
  <match src="array_access [99977,100001]" dest="array_access [39363,39387]"/>
  <match src="identifier: Decimal [64805,64812]" dest="identifier: Decimal [19656,19663]"/>
  <match src="member_expression [98224,98245]" dest="member_expression [37610,37631]"/>
  <match src="): ) [51080,51081]" dest="): ) [64479,64480]"/>
  <match src="[: [ [95802,95803]" dest="[: [ [35188,35189]"/>
  <match src="type_name [22301,22308]" dest="type_name [58913,58920]"/>
  <match src="call_expression [2044,2100]" dest="call_expression [2572,2628]"/>
  <match src="}: } [92489,92490]" dest="}: } [31875,31876]"/>
  <match src="}: } [106123,106124]" dest="}: } [69267,69268]"/>
  <match src=",: , [53434,53435]" dest=",: , [21558,21559]"/>
  <match src="visibility [64788,64795]" dest="visibility [19718,19725]"/>
  <match src="(: ( [29974,29975]" dest="(: ( [47686,47687]"/>
  <match src="(: ( [92786,92787]" dest="(: ( [32172,32173]"/>
  <match src="identifier: getSupplyChangeLimit [45876,45896]" dest="identifier: getSupplyChangeLimit [15973,15993]"/>
  <match src="call_argument [103919,103925]" dest="call_argument [43305,43311]"/>
  <match src="call_expression [6205,6216]" dest="call_expression [6733,6744]"/>
  <match src="call_expression [71320,71355]" dest="call_expression [67355,67369]"/>
  <match src="if: if [36668,36670]" dest="if: if [54380,54382]"/>
  <match src="identifier: that [29411,29415]" dest="identifier: that [47123,47127]"/>
  <match src="parameter [4032,4041]" dest="parameter [4560,4569]"/>
  <match src="function: function [104145,104153]" dest="function: function [43531,43539]"/>
  <match src="identifier: ASCII_LOWER_EX [35018,35032]" dest="identifier: ASCII_LOWER_EX [52730,52744]"/>
  <match src="primitive_type [86232,86239]" dest="primitive_type [28023,28030]"/>
  <match src="]: ] [34475,34476]" dest="]: ] [52187,52188]"/>
  <match src="function_body [8722,8767]" dest="function_body [9250,9295]"/>
  <match src="(: ( [94293,94294]" dest="(: ( [33679,33680]"/>
  <match src=",: , [30065,30066]" dest=",: , [47777,47778]"/>
  <match src=",: , [32522,32523]" dest=",: , [50234,50235]"/>
  <match src="type_name [80310,80317]" dest="type_name [66599,66606]"/>
  <match src="contract_declaration [87305,87349]" dest="contract_declaration [29096,29140]"/>
  <match src="): ) [48819,48820]" dest="): ) [55836,55837]"/>
  <match src="is: is [49571,49573]" dest="is: is [25954,25956]"/>
  <match src="identifier: payloadB [31191,31199]" dest="identifier: payloadB [48903,48911]"/>
  <match src="identifier: sender [81854,81860]" dest="identifier: sender [72436,72442]"/>
  <match src="parameter [28205,28214]" dest="parameter [45917,45926]"/>
  <match src="call_expression [71539,71564]" dest="call_expression [67223,67268]"/>
  <match src="): ) [89625,89626]" dest="): ) [76815,76816]"/>
  <match src="identifier: amount [98862,98868]" dest="identifier: amount [38248,38254]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [41828,41850]" dest="identifier: INITIAL_STAKE_MULTIPLE [11925,11947]"/>
  <match src="): ) [80000,80001]" dest="): ) [71222,71223]"/>
  <match src=".: . [102148,102149]" dest=".: . [41534,41535]"/>
  <match src="{: { [7260,7261]" dest="{: { [7788,7789]"/>
  <match src="uint256: uint256 [42008,42015]" dest="uint256: uint256 [12105,12112]"/>
  <match src="): ) [52549,52550]" dest="): ) [20673,20674]"/>
  <match src="identifier: shift [35340,35345]" dest="identifier: shift [53052,53057]"/>
  <match src="public: public [92130,92136]" dest="public: public [31516,31522]"/>
  <match src="type_name [76751,76758]" dest="type_name [18133,18140]"/>
  <match src="call_argument [71446,71470]" dest="call_argument [81781,81799]"/>
  <match src="return_statement [46509,46525]" dest="return_statement [16606,16622]"/>
  <match src="identifier: Approval [13879,13887]" dest="identifier: Approval [25180,25188]"/>
  <match src="): ) [80891,80892]" dest="): ) [56372,56373]"/>
  <match src="parameter [93670,93683]" dest="parameter [33056,33069]"/>
  <match src="call_argument [94415,94430]" dest="call_argument [33801,33816]"/>
  <match src="visibility [42400,42407]" dest="visibility [12497,12504]"/>
  <match src="(: ( [95354,95355]" dest="(: ( [34740,34741]"/>
  <match src="identifier: D256 [6687,6691]" dest="identifier: D256 [7215,7219]"/>
  <match src="identifier: balance [91190,91197]" dest="identifier: balance [30576,30583]"/>
  <match src="return_statement [45692,45717]" dest="return_statement [15789,15814]"/>
  <match src="call_argument [51261,51304]" dest="call_argument [64614,64652]"/>
  <match src="primitive_type [53077,53081]" dest="primitive_type [21201,21205]"/>
  <match src="function_body [93445,93504]" dest="function_body [32831,32890]"/>
  <match src="returns: returns [91033,91040]" dest="returns: returns [30419,30426]"/>
  <match src="call_argument [30898,31330]" dest="call_argument [48610,49042]"/>
  <match src="modifier_invocation [79359,79368]" dest="modifier_invocation [70900,70930]"/>
  <match src="address: address [11638,11645]" dest="address: address [22939,22946]"/>
  <match src="member_expression [93240,93286]" dest="member_expression [32626,32672]"/>
  <match src="member_expression [95645,95662]" dest="member_expression [35031,35048]"/>
  <match src="type_name [13012,13019]" dest="type_name [24313,24320]"/>
  <match src="address: address [97850,97857]" dest="address: address [37236,37243]"/>
  <match src="identifier: coupons [92192,92199]" dest="identifier: coupons [31578,31585]"/>
  <match src="comment: // '0' [27370,27376]" dest="comment: // '0' [45082,45088]"/>
  <match src="(: ( [29767,29768]" dest="(: ( [47479,47480]"/>
  <match src="=&gt;: =&gt; [87216,87218]" dest="=&gt;: =&gt; [29007,29009]"/>
  <match src="{: { [30832,30833]" dest="{: { [48544,48545]"/>
  <match src="parameter [95391,95395]" dest="parameter [34777,34781]"/>
  <match src="returns: returns [54033,54040]" dest="returns: returns [22157,22164]"/>
  <match src="expression_statement [79443,79487]" dest="expression_statement [71006,71050]"/>
  <match src="function: function [49694,49702]" dest="function: function [26077,26085]"/>
  <match src=".: . [89511,89512]" dest=".: . [76701,76702]"/>
  <match src="(: ( [6161,6162]" dest="(: ( [6689,6690]"/>
  <match src="identifier: IUniswapV2Pair [77166,77180]" dest="identifier: dollar [59438,59444]"/>
  <match src="binary_expression [35354,35371]" dest="binary_expression [53066,53083]"/>
  <match src="type_name [7759,7763]" dest="type_name [8287,8291]"/>
  <match src="{: { [30811,30812]" dest="{: { [48523,48524]"/>
  <match src="identifier: value [78828,78833]" dest="identifier: value [70346,70351]"/>
  <match src="): ) [30143,30144]" dest="): ) [47855,47856]"/>
  <match src="(: ( [93079,93080]" dest="(: ( [32465,32466]"/>
  <match src="returns: returns [95599,95606]" dest="returns: returns [34985,34992]"/>
  <match src="bytes32: bytes32 [27800,27807]" dest="bytes32: bytes32 [45512,45519]"/>
  <match src="identifier: isInitialized [96521,96534]" dest="identifier: isInitialized [35907,35920]"/>
  <match src=",: , [53063,53064]" dest=",: , [21187,21188]"/>
  <match src="(: ( [9877,9878]" dest="(: ( [10405,10406]"/>
  <match src="primitive_type [44555,44562]" dest="primitive_type [14652,14659]"/>
  <match src="): ) [45060,45061]" dest="): ) [15157,15158]"/>
  <match src="}: } [99838,99839]" dest="}: } [39224,39225]"/>
  <match src="member_expression [6556,6566]" dest="member_expression [7084,7094]"/>
  <match src="identifier: decimals [52329,52337]" dest="identifier: decimals [20453,20461]"/>
  <match src="primitive_type [101690,101697]" dest="primitive_type [41076,41083]"/>
  <match src="(: ( [31625,31626]" dest="(: ( [49337,49338]"/>
  <match src="): ) [6217,6218]" dest="): ) [6745,6746]"/>
  <match src="(: ( [45647,45648]" dest="(: ( [15744,15745]"/>
  <match src="}: } [44087,44088]" dest="}: } [14184,14185]"/>
  <match src="function: function [52375,52383]" dest="function: function [20499,20507]"/>
  <match src="(: ( [80287,80288]" dest="(: ( [71504,71505]"/>
  <match src="primitive_type [33698,33703]" dest="primitive_type [51410,51415]"/>
  <match src="function_definition [9439,9541]" dest="function_definition [9967,10069]"/>
  <match src="): ) [16015,16016]" dest="): ) [17659,17660]"/>
  <match src="identifier: approve [52595,52602]" dest="identifier: approve [20719,20726]"/>
  <match src="internal: internal [45415,45423]" dest="internal: internal [15512,15520]"/>
  <match src="type_name [30025,30032]" dest="type_name [47737,47744]"/>
  <match src="constant: constant [43049,43057]" dest="constant: constant [13146,13154]"/>
  <match src="uint256: uint256 [13433,13440]" dest="uint256: uint256 [24734,24741]"/>
  <match src="(: ( [43472,43473]" dest="(: ( [13569,13570]"/>
  <match src="constant: constant [27389,27397]" dest="constant: constant [45101,45109]"/>
  <match src="member_expression [104021,104038]" dest="member_expression [43407,43424]"/>
  <match src="primitive_type [4675,4681]" dest="primitive_type [5203,5209]"/>
  <match src="primitive_type [5680,5687]" dest="primitive_type [6208,6215]"/>
  <match src="]: ] [96078,96079]" dest="]: ] [35464,35465]"/>
  <match src="): ) [7308,7309]" dest="): ) [7836,7837]"/>
  <match src="&quot;: &quot; [90891,90892]" dest="&quot;: &quot; [30277,30278]"/>
  <match src="): ) [35716,35717]" dest="): ) [53428,53429]"/>
  <match src="number_literal: 0 [92666,92667]" dest="number_literal: 0 [32052,32053]"/>
  <match src="uint8: uint8 [35012,35017]" dest="uint8: uint8 [52724,52729]"/>
  <match src="member_expression [99738,99752]" dest="member_expression [39124,39138]"/>
  <match src="number_literal: 32 [36121,36123]" dest="number_literal: 32 [53833,53835]"/>
  <match src="return_type_definition [90937,90952]" dest="return_type_definition [30323,30338]"/>
  <match src="comment: // ============ Library Functions ============ [27706,27752]" dest="comment: // ============ Library Functions ============ [45418,45464]"/>
  <match src="type_name [28246,28253]" dest="type_name [45958,45965]"/>
  <match src="type_name [95719,95726]" dest="type_name [35105,35112]"/>
  <match src="return_type_definition [84644,84658]" dest="return_type_definition [73972,73986]"/>
  <match src="): ) [2614,2615]" dest="): ) [3142,3143]"/>
  <match src="identifier: account [100657,100664]" dest="identifier: account [40043,40050]"/>
  <match src="type_name [96698,96705]" dest="type_name [36084,36091]"/>
  <match src="type_name [13657,13664]" dest="type_name [24958,24965]"/>
  <match src=",: , [8402,8403]" dest=",: , [8930,8931]"/>
  <match src="identifier: accounts [99984,99992]" dest="identifier: accounts [39370,39378]"/>
  <match src="identifier: transferFrom [13385,13397]" dest="identifier: transferFrom [24686,24698]"/>
  <match src="returns: returns [96566,96573]" dest="returns: returns [35952,35959]"/>
  <match src="primitive_type [49757,49761]" dest="primitive_type [26140,26144]"/>
  <match src="function: function [52951,52959]" dest="function: function [21075,21083]"/>
  <match src="(: ( [46284,46285]" dest="(: ( [16381,16382]"/>
  <match src="identifier: outstandingCouponsForEpoch [102944,102970]" dest="identifier: outstandingCouponsForEpoch [42330,42356]"/>
  <match src="constant: constant [43182,43190]" dest="constant: constant [13279,13287]"/>
  <match src="visibility [52277,52285]" dest="visibility [20401,20409]"/>
  <match src="identifier: account [99173,99180]" dest="identifier: account [38559,38566]"/>
  <match src="primitive_type [95391,95395]" dest="primitive_type [34777,34781]"/>
  <match src="): ) [2646,2647]" dest="): ) [3174,3175]"/>
  <match src="call_argument [35354,35371]" dest="call_argument [53066,53083]"/>
  <match src="type_name [9793,9800]" dest="type_name [10321,10328]"/>
  <match src="): ) [91019,91020]" dest="): ) [30405,30406]"/>
  <match src="event_paramater [78937,78950]" dest="event_paramater [61061,61074]"/>
  <match src="++: ++ [36126,36128]" dest="++: ++ [53838,53840]"/>
  <match src="uint256: uint256 [30762,30769]" dest="uint256: uint256 [48474,48481]"/>
  <match src="call_expression [81416,81459]" dest="call_expression [72699,72742]"/>
  <match src="identifier: payloadA [30428,30436]" dest="identifier: payloadA [48140,48148]"/>
  <match src="identifier: reason [104247,104253]" dest="identifier: reason [43633,43639]"/>
  <match src="visibility [49617,49623]" dest="visibility [26000,26006]"/>
  <match src="(: ( [91810,91811]" dest="(: ( [31196,31197]"/>
  <match src="&quot;: &quot; [105828,105829]" dest="&quot;: &quot; [68972,68973]"/>
  <match src="memory: memory [45959,45965]" dest="memory: memory [16056,16062]"/>
  <match src="): ) [80207,80208]" dest="): ) [81566,81567]"/>
  <match src="identifier: totalBonded [83191,83202]" dest="identifier: totalRedeemable [58798,58813]"/>
  <match src="): ) [71209,71210]" dest="): ) [67321,67322]"/>
  <match src="return: return [96591,96597]" dest="return: return [35977,35983]"/>
  <match src="internal: internal [100580,100588]" dest="internal: internal [39966,39974]"/>
  <match src="variable_declaration_statement [102730,102793]" dest="variable_declaration_statement [42116,42179]"/>
  <match src="internal: internal [6268,6276]" dest="internal: internal [6796,6804]"/>
  <match src="identifier: result [35949,35955]" dest="identifier: result [53661,53667]"/>
  <match src="): ) [61911,61912]" dest="): ) [26966,26967]"/>
  <match src="function_body [98069,98098]" dest="function_body [37455,37484]"/>
  <match src="user_defined_type [44290,44302]" dest="user_defined_type [14387,14399]"/>
  <match src="=: = [27472,27473]" dest="=: = [45184,45185]"/>
  <match src="pure: pure [7221,7225]" dest="pure: pure [7749,7753]"/>
  <match src="return_type_definition [13054,13068]" dest="return_type_definition [24355,24369]"/>
  <match src="identifier: compareTo [9404,9413]" dest="identifier: compareTo [9932,9941]"/>
  <match src="primitive_type [104447,104454]" dest="primitive_type [43833,43840]"/>
  <match src="): ) [375,376]" dest="): ) [903,904]"/>
  <match src="(: ( [93435,93436]" dest="(: ( [32821,32822]"/>
  <match src="function: function [100467,100475]" dest="function: function [39853,39861]"/>
  <match src="function: function [92212,92220]" dest="function: function [31598,31606]"/>
  <match src="{: { [105964,105965]" dest="{: { [69108,69109]"/>
  <match src="member_expression [45817,45829]" dest="member_expression [15914,15926]"/>
  <match src="function: function [91217,91225]" dest="function: function [30603,30611]"/>
  <match src="parameter [1691,1700]" dest="parameter [2219,2228]"/>
  <match src="state_mutability [38294,38298]" dest="state_mutability [19734,19738]"/>
  <match src=",: , [28587,28588]" dest=",: , [46299,46300]"/>
  <match src="identifier: amount [22309,22315]" dest="identifier: amount [58921,58927]"/>
  <match src=".: . [106170,106171]" dest=".: . [69314,69315]"/>
  <match src="member_expression [99328,99349]" dest="member_expression [38714,38735]"/>
  <match src="binary_expression [454,460]" dest="binary_expression [982,988]"/>
  <match src="uint256: uint256 [6246,6253]" dest="uint256: uint256 [6774,6781]"/>
  <match src="type_name [6291,6295]" dest="type_name [6819,6823]"/>
  <match src="): ) [88755,88756]" dest="): ) [75945,75946]"/>
  <match src="(: ( [92721,92722]" dest="(: ( [32107,32108]"/>
  <match src="&quot;: &quot; [83441,83442]" dest="&quot;: &quot; [80354,80355]"/>
  <match src="(: ( [99763,99764]" dest="(: ( [39149,39150]"/>
  <match src="member_expression [9867,9877]" dest="member_expression [10395,10405]"/>
  <match src=",: , [98618,98619]" dest=",: , [38004,38005]"/>
  <match src="returns: returns [7234,7241]" dest="returns: returns [7762,7769]"/>
  <match src="{: { [88192,88193]" dest="{: { [75382,75383]"/>
  <match src="type_name [6824,6831]" dest="type_name [7352,7359]"/>
  <match src="}: } [100937,100938]" dest="}: } [40323,40324]"/>
  <match src="{: { [91438,91439]" dest="{: { [30824,30825]"/>
  <match src="call_argument [81144,81173]" dest="call_argument [81318,81344]"/>
  <match src="(: ( [92229,92230]" dest="(: ( [31615,31616]"/>
  <match src="}: } [45137,45138]" dest="}: } [15234,15235]"/>
  <match src="): ) [7583,7584]" dest="): ) [8111,8112]"/>
  <match src="member_expression [99977,99992]" dest="member_expression [39363,39378]"/>
  <match src="}: } [7307,7308]" dest="}: } [7835,7836]"/>
  <match src="struct_member [87200,87239]" dest="struct_member [28991,29030]"/>
  <match src="identifier: amount [98777,98783]" dest="identifier: amount [38163,38169]"/>
  <match src="primitive_type [43096,43103]" dest="primitive_type [13193,13200]"/>
  <match src="type_name [49648,49655]" dest="type_name [26031,26038]"/>
  <match src="visibility [49741,49747]" dest="visibility [26124,26130]"/>
  <match src="function: function [103272,103280]" dest="function: function [42658,42666]"/>
  <match src="indexed: indexed [52170,52177]" dest="indexed: indexed [20294,20301]"/>
  <match src="type_name [29444,29451]" dest="type_name [47156,47163]"/>
  <match src="member_expression [98369,98390]" dest="member_expression [37755,37776]"/>
  <match src="member_expression [80779,80789]" dest="member_expression [71816,71826]"/>
  <match src="identifier: newImplementation [89059,89076]" dest="identifier: newImplementation [76249,76266]"/>
  <match src="returns: returns [12324,12331]" dest="returns: returns [23625,23632]"/>
  <match src="identifier: Decimal [44290,44297]" dest="identifier: Decimal [14387,14394]"/>
  <match src="pure: pure [2625,2629]" dest="pure: pure [3153,3157]"/>
  <match src="identifier: D256 [6893,6897]" dest="identifier: D256 [7421,7425]"/>
  <match src="(: ( [82786,82787]" dest="(: ( [80799,80800]"/>
  <match src="identifier: staged [100002,100008]" dest="identifier: staged [39388,39394]"/>
  <match src="memory: memory [4682,4688]" dest="memory: memory [5210,5216]"/>
  <match src="(: ( [32963,32964]" dest="(: ( [50675,50676]"/>
  <match src="address: address [73357,73364]" dest="address: address [83295,83302]"/>
  <match src="parameter [53925,53929]" dest="parameter [22049,22053]"/>
  <match src=".: . [98702,98703]" dest=".: . [38088,38089]"/>
  <match src="identifier: State [88186,88191]" dest="identifier: State [75376,75381]"/>
  <match src="assignment_expression [100599,100718]" dest="assignment_expression [39985,40104]"/>
  <match src="): ) [35509,35510]" dest="): ) [53221,53222]"/>
  <match src="string_literal [82033,82060]" dest="string_literal [80941,80956]"/>
  <match src="primitive_type [84653,84657]" dest="primitive_type [73981,73985]"/>
  <match src="primitive_type [98300,98307]" dest="primitive_type [37686,37693]"/>
  <match src="identifier: payloadB [32066,32074]" dest="identifier: payloadB [49778,49786]"/>
  <match src="parameter [103326,103343]" dest="parameter [42712,42729]"/>
  <match src="string [83441,83453]" dest="string [80354,80363]"/>
  <match src="function: function [98735,98743]" dest="function: function [38121,38129]"/>
  <match src="return_type_definition [54033,54047]" dest="return_type_definition [22157,22171]"/>
  <match src="type_name [98165,98172]" dest="type_name [37551,37558]"/>
  <match src="identifier: amount [16542,16548]" dest="identifier: amount [56480,56486]"/>
  <match src="member_expression [99352,99377]" dest="member_expression [38738,38763]"/>
  <match src="identifier: value [7811,7816]" dest="identifier: value [8339,8344]"/>
  <match src="uint256: uint256 [86049,86056]" dest="uint256: uint256 [27840,27847]"/>
  <match src="uint256: uint256 [86332,86339]" dest="uint256: uint256 [28123,28130]"/>
  <match src="identifier: totalRewardedWithPhantom [80318,80342]" dest="identifier: lessDebt [66607,66615]"/>
  <match src="{: { [1734,1735]" dest="{: { [2262,2263]"/>
  <match src="!: ! [29553,29554]" dest="!: ! [47265,47266]"/>
  <match src="function_definition [33719,34619]" dest="function_definition [51431,52331]"/>
  <match src="=: = [35005,35006]" dest="=: = [52717,52718]"/>
  <match src="expression_statement [36340,36351]" dest="expression_statement [54052,54063]"/>
  <match src="function: function [53017,53025]" dest="function: function [21141,21149]"/>
  <match src="uint112: uint112 [53503,53510]" dest="uint112: uint112 [21627,21634]"/>
  <match src="public: public [95571,95577]" dest="public: public [34957,34963]"/>
  <match src="=: = [81206,81207]" dest="=: = [78962,78963]"/>
  <match src=".: . [96604,96605]" dest=".: . [35990,35991]"/>
  <match src="identifier: getGovernanceProposalThreshold [44769,44799]" dest="identifier: getGovernanceProposalThreshold [14866,14896]"/>
  <match src="string [876,908]" dest="string [1404,1436]"/>
  <match src="return_type_definition [9199,9213]" dest="return_type_definition [9727,9741]"/>
  <match src="): ) [95271,95272]" dest="): ) [34657,34658]"/>
  <match src="primitive_type [53033,53040]" dest="primitive_type [21157,21164]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [46643,47323]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [16740,17420]"/>
  <match src="parameter [8093,8113]" dest="parameter [8621,8641]"/>
  <match src="array_access [93777,93799]" dest="array_access [33163,33185]"/>
  <match src="identifier: Constants [80483,80492]" dest="identifier: Constants [71588,71597]"/>
  <match src="address: address [78912,78919]" dest="address: address [82812,82819]"/>
  <match src="state_mutability [34689,34693]" dest="state_mutability [52401,52405]"/>
  <match src="function: function [31385,31393]" dest="function: function [49097,49105]"/>
  <match src="type_name [32008,32015]" dest="type_name [49720,49727]"/>
  <match src="user_defined_type [45779,45791]" dest="user_defined_type [15876,15888]"/>
  <match src="function: function [11481,11489]" dest="function: function [22782,22790]"/>
  <match src="identifier: reason [28098,28104]" dest="identifier: reason [45810,45816]"/>
  <match src="}: } [92324,92325]" dest="}: } [31710,31711]"/>
  <match src="member_expression [64109,64120]" dest="member_expression [67940,67951]"/>
  <match src="string: string [104233,104239]" dest="string: string [43619,43625]"/>
  <match src="call_expression [102401,102414]" dest="call_expression [41787,41800]"/>
  <match src="visibility [90833,90839]" dest="visibility [30219,30225]"/>
  <match src="assignment_expression [98661,98722]" dest="assignment_expression [38047,38108]"/>
  <match src="internal: internal [102350,102358]" dest="internal: internal [41736,41744]"/>
  <match src="}: } [8930,8931]" dest="}: } [9458,9459]"/>
  <match src="identifier: div [2665,2668]" dest="identifier: div [3193,3196]"/>
  <match src="uint8: uint8 [35966,35971]" dest="uint8: uint8 [53678,53683]"/>
  <match src="parameter [103759,103779]" dest="parameter [43145,43165]"/>
  <match src="identifier: to [53460,53462]" dest="identifier: to [21584,21586]"/>
  <match src="call_expression [6749,6760]" dest="call_expression [7277,7288]"/>
  <match src="identifier: self [7691,7695]" dest="identifier: self [8219,8223]"/>
  <match src="bytes: bytes [54256,54261]" dest="bytes: bytes [22380,22385]"/>
  <match src="contract: contract [61776,61784]" dest="contract: contract [26831,26839]"/>
  <match src="=: = [43078,43079]" dest="=: = [13175,13176]"/>
  <match src="!=: != [21934,21936]" dest="!=: != [63540,63542]"/>
  <match src=",: , [104199,104200]" dest=",: , [43585,43586]"/>
  <match src="identifier: D256 [44899,44903]" dest="identifier: D256 [14996,15000]"/>
  <match src="identifier: b [6265,6266]" dest="identifier: b [6793,6794]"/>
  <match src="parameter [9377,9381]" dest="parameter [9905,9909]"/>
  <match src="): ) [29364,29365]" dest="): ) [47076,47077]"/>
  <match src="return_statement [8732,8761]" dest="return_statement [9260,9289]"/>
  <match src="return: return [7786,7792]" dest="return: return [8314,8320]"/>
  <match src="function: function [92761,92769]" dest="function: function [32147,32155]"/>
  <match src="member_expression [95152,95165]" dest="member_expression [34538,34551]"/>
  <match src="function_body [32133,32701]" dest="function_body [49845,50413]"/>
  <match src="(: ( [79835,79836]" dest="(: ( [56577,56578]"/>
  <match src="call_argument [32437,32445]" dest="call_argument [50149,50157]"/>
  <match src="): ) [80517,80518]" dest="): ) [71622,71623]"/>
  <match src="call_argument [7821,7828]" dest="call_argument [8349,8356]"/>
  <match src="identifier: spender [101721,101728]" dest="identifier: spender [41107,41114]"/>
  <match src="comment: // Anywhere the term USDC is refernenced, consider that as &quot;peg&quot;, really [41633,41705]" dest="comment: // Anywhere the term USDC is refernenced, consider that as &quot;peg&quot;, really [11730,11802]"/>
  <match src="uint256: uint256 [3435,3442]" dest="uint256: uint256 [3963,3970]"/>
  <match src="{: { [98190,98191]" dest="{: { [37576,37577]"/>
  <match src="(: ( [36445,36446]" dest="(: ( [54157,54158]"/>
  <match src="parameter [28224,28236]" dest="parameter [45936,45948]"/>
  <match src="return_statement [44700,44748]" dest="return_statement [14797,14845]"/>
  <match src="internal: internal [45183,45191]" dest="internal: internal [15280,15288]"/>
  <match src="identifier: stringifyTruncated [32262,32280]" dest="identifier: stringifyTruncated [49974,49992]"/>
  <match src="(: ( [93746,93747]" dest="(: ( [33132,33133]"/>
  <match src="}: } [86488,86489]" dest="}: } [28279,28280]"/>
  <match src="parameter [17569,17583]" dest="parameter [59404,59418]"/>
  <match src="type_name [13414,13421]" dest="type_name [24715,24722]"/>
  <match src="returns: returns [52712,52719]" dest="returns: returns [20836,20843]"/>
  <match src=",: , [101728,101729]" dest=",: , [41114,41115]"/>
  <match src="member_expression [96598,96615]" dest="member_expression [35984,36001]"/>
  <match src="}: } [8007,8008]" dest="}: } [8535,8536]"/>
  <match src="(: ( [99820,99821]" dest="(: ( [39206,39207]"/>
  <match src="{: { [30145,30146]" dest="{: { [47857,47858]"/>
  <match src="expression_statement [34009,34018]" dest="expression_statement [51721,51730]"/>
  <match src="identifier: payloadB [30083,30091]" dest="identifier: payloadB [47795,47803]"/>
  <match src="visibility [42475,42482]" dest="visibility [12572,12579]"/>
  <match src="call_argument [31115,31123]" dest="call_argument [48827,48835]"/>
  <match src="identifier: _ [105850,105851]" dest="identifier: _ [68994,68995]"/>
  <match src="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [88770,88904]" dest="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [75960,76094]"/>
  <match src="(: ( [6245,6246]" dest="(: ( [6773,6774]"/>
  <match src="): ) [99419,99420]" dest="): ) [38805,38806]"/>
  <match src="): ) [43606,43607]" dest="): ) [13703,13704]"/>
  <match src="type_name [27490,27496]" dest="type_name [45202,45208]"/>
  <match src="identifier: D256 [6291,6295]" dest="identifier: D256 [6819,6823]"/>
  <match src="type_name [94797,94804]" dest="type_name [34183,34190]"/>
  <match src="call_expression [71197,71210]" dest="call_expression [67305,67322]"/>
  <match src=",: , [52766,52767]" dest=",: , [20890,20891]"/>
  <match src="identifier: Constants [94207,94216]" dest="identifier: Constants [33593,33602]"/>
  <match src="identifier: account [78871,78878]" dest="identifier: account [70389,70396]"/>
  <match src="identifier: b [6637,6638]" dest="identifier: b [7165,7166]"/>
  <match src="parameter [103301,103316]" dest="parameter [42687,42702]"/>
  <match src="call_expression [6556,6583]" dest="call_expression [7084,7111]"/>
  <match src="primitive_type [98024,98031]" dest="primitive_type [37410,37417]"/>
  <match src=".: . [81343,81344]" dest=".: . [72181,72182]"/>
  <match src="call_argument [30494,30513]" dest="call_argument [48206,48225]"/>
  <match src="identifier: Decimal [45817,45824]" dest="identifier: Decimal [15914,15921]"/>
  <match src="type_cast_expression [70382,70395]" dest="type_cast_expression [58727,58740]"/>
  <match src="identifier: fluidUntil [101554,101564]" dest="identifier: fluidUntil [40940,40950]"/>
  <match src="&quot;: &quot; [81613,81614]" dest="&quot;: &quot; [80722,80723]"/>
  <match src="primitive_type [95985,95992]" dest="primitive_type [35371,35378]"/>
  <match src="function_body [9218,9264]" dest="function_body [9746,9792]"/>
  <match src="call_expression [30898,31330]" dest="call_expression [48610,49042]"/>
  <match src=",: , [106059,106060]" dest=",: , [69203,69204]"/>
  <match src="identifier: incrementBalanceOfBonded [82612,82636]" dest="identifier: incrementBalanceOfCoupons [62797,62822]"/>
  <match src="): ) [6698,6699]" dest="): ) [7226,7227]"/>
  <match src="array_access [99252,99276]" dest="array_access [38638,38662]"/>
  <match src="event: event [13873,13878]" dest="event: event [25174,25179]"/>
  <match src="call_argument [83441,83453]" dest="call_argument [80354,80363]"/>
  <match src="internal: internal [101087,101095]" dest="internal: internal [40473,40481]"/>
  <match src="identifier: fluidUntil [86137,86147]" dest="identifier: fluidUntil [27928,27938]"/>
  <match src=":: : [10131,10132]" dest=":: : [10659,10660]"/>
  <match src="identifier: initialize [54371,54381]" dest="identifier: initialize [22495,22505]"/>
  <match src="constant: constant [42288,42296]" dest="constant: constant [12385,12393]"/>
  <match src="function_definition [100944,101469]" dest="function_definition [40330,40855]"/>
  <match src="}: } [102869,102870]" dest="}: } [42255,42256]"/>
  <match src="if: if [30821,30823]" dest="if: if [48533,48535]"/>
  <match src="}: } [45492,45493]" dest="}: } [15589,15590]"/>
  <match src="uint: uint [54098,54102]" dest="uint: uint [22222,22226]"/>
  <match src="primitive_type [99879,99886]" dest="primitive_type [39265,39272]"/>
  <match src="=: = [43209,43210]" dest="=: = [13306,13307]"/>
  <match src=",: , [30468,30469]" dest=",: , [48180,48181]"/>
  <match src="member_expression [92452,92467]" dest="member_expression [31838,31853]"/>
  <match src="library: library [5639,5646]" dest="library: library [6167,6174]"/>
  <match src="{: { [45215,45216]" dest="{: { [15312,15313]"/>
  <match src="return: return [8352,8358]" dest="return: return [8880,8886]"/>
  <match src="call_argument [81138,81142]" dest="call_argument [81300,81304]"/>
  <match src="=: = [100411,100412]" dest="=: = [39797,39798]"/>
  <match src="primitive_type [18251,18258]" dest="primitive_type [17873,17880]"/>
  <match src="return: return [45981,45987]" dest="return: return [16078,16084]"/>
  <match src="returns: returns [45770,45777]" dest="returns: returns [15867,15874]"/>
  <match src="return_type_definition [98054,98068]" dest="return_type_definition [37440,37454]"/>
  <match src="struct_member [87121,87139]" dest="struct_member [28912,28930]"/>
  <match src="return: return [4085,4091]" dest="return: return [4613,4619]"/>
  <match src="identifier: expiration [102559,102569]" dest="identifier: expiration [41945,41955]"/>
  <match src="type_name [76648,76655]" dest="type_name [56884,56891]"/>
  <match src="primitive_type [35916,35920]" dest="primitive_type [53628,53632]"/>
  <match src="block_statement [1974,2007]" dest="block_statement [2502,2535]"/>
  <match src="identifier: price [64862,64867]" dest="identifier: price [65896,65901]"/>
  <match src="identifier: epoch [80925,80930]" dest="identifier: epoch [72980,72985]"/>
  <match src="identifier: sender [80658,80664]" dest="identifier: sender [72362,72368]"/>
  <match src="identifier: mul [6995,6998]" dest="identifier: mul [7523,7526]"/>
  <match src="&quot;: &quot; [90886,90887]" dest="&quot;: &quot; [30272,30273]"/>
  <match src="): ) [89192,89193]" dest="): ) [76382,76383]"/>
  <match src="user_defined_type [107054,107064]" dest="user_defined_type [77655,77665]"/>
  <match src="): ) [33362,33363]" dest="): ) [51074,51075]"/>
  <match src="}: } [2125,2126]" dest="}: } [2653,2654]"/>
  <match src="call_argument [83237,83267]" dest="call_argument [58848,58871]"/>
  <match src="type_name [42392,42399]" dest="type_name [12489,12496]"/>
  <match src="identifier: balance [91969,91976]" dest="identifier: balance [31355,31362]"/>
  <match src="string [21185,21221]" dest="string [56294,56338]"/>
  <match src="identifier: value [7989,7994]" dest="identifier: value [8517,8522]"/>
  <match src="identifier: chainId [38228,38235]" dest="identifier: epoch [63848,63853]"/>
  <match src="}: } [33712,33713]" dest="}: } [51424,51425]"/>
  <match src="&quot;: &quot; [19752,19753]" dest="&quot;: &quot; [63958,63959]"/>
  <match src="identifier: this [77200,77204]" dest="identifier: this [59460,59464]"/>
  <match src="visibility [23206,23213]" dest="visibility [66581,66588]"/>
  <match src="identifier: amount1 [54182,54189]" dest="identifier: amount1 [22306,22313]"/>
  <match src="]: ] [99240,99241]" dest="]: ] [38626,38627]"/>
  <match src="identifier: newLock [104630,104637]" dest="identifier: newLock [44016,44023]"/>
  <match src="visibility [104776,104784]" dest="visibility [44162,44170]"/>
  <match src="call_argument [6548,6584]" dest="call_argument [7076,7112]"/>
  <match src="private: private [41384,41391]" dest="private: private [11481,11488]"/>
  <match src="identifier: that [63506,63510]" dest="identifier: that [81373,81377]"/>
  <match src="{: { [7092,7093]" dest="{: { [7620,7621]"/>
  <match src="(: ( [78967,78968]" dest="(: ( [70564,70565]"/>
  <match src="function_definition [98576,98729]" dest="function_definition [37962,38115]"/>
  <match src="(: ( [92041,92042]" dest="(: ( [31427,31428]"/>
  <match src="returns: returns [52864,52871]" dest="returns: returns [20988,20995]"/>
  <match src="primitive_type [19740,19747]" dest="primitive_type [63934,63941]"/>
  <match src="function_definition [46043,46226]" dest="function_definition [16140,16323]"/>
  <match src=".: . [99334,99335]" dest=".: . [38720,38721]"/>
  <match src="revert: revert [29574,29580]" dest="revert: revert [47286,47292]"/>
  <match src="array_access [99943,99967]" dest="array_access [39329,39353]"/>
  <match src=",: , [31706,31707]" dest=",: , [49418,49419]"/>
  <match src="state_mutability [90932,90936]" dest="state_mutability [30318,30322]"/>
  <match src="}: } [91106,91107]" dest="}: } [30492,30493]"/>
  <match src="primitive_type [30645,30649]" dest="primitive_type [48357,48361]"/>
  <match src=",: , [30392,30393]" dest=",: , [48104,48105]"/>
  <match src="}: } [44203,44204]" dest="}: } [14300,14301]"/>
  <match src="(: ( [45778,45779]" dest="(: ( [15875,15876]"/>
  <match src="type_name [27623,27627]" dest="type_name [45335,45339]"/>
  <match src="identifier: USDC [41559,41563]" dest="identifier: USDC [11656,11660]"/>
  <match src="}: } [93210,93211]" dest="}: } [32596,32597]"/>
  <match src="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [61949,62629]" dest="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [29142,29822]"/>
  <match src="for: for [72887,72890]" dest="for: for [82696,82699]"/>
  <match src=".: . [8190,8191]" dest=".: . [8718,8719]"/>
  <match src="}: } [28734,28735]" dest="}: } [46446,46447]"/>
  <match src="): ) [98067,98068]" dest="): ) [37453,37454]"/>
  <match src=",: , [98425,98426]" dest=",: , [37811,37812]"/>
  <match src="identifier: stringifyTruncated [28529,28547]" dest="identifier: stringifyTruncated [46241,46259]"/>
  <match src="type_name [86681,86705]" dest="type_name [28472,28496]"/>
  <match src="visibility [9169,9177]" dest="visibility [9697,9705]"/>
  <match src="identifier: amount [101447,101453]" dest="identifier: amount [40833,40839]"/>
  <match src="identifier: numerator [9774,9783]" dest="identifier: numerator [10302,10311]"/>
  <match src="uint256: uint256 [1253,1260]" dest="uint256: uint256 [1781,1788]"/>
  <match src="unary_expression [51077,51079]" dest="unary_expression [64467,64469]"/>
  <match src="call_expression [8901,8919]" dest="call_expression [9429,9447]"/>
  <match src="(: ( [80516,80517]" dest="(: ( [71621,71622]"/>
  <match src="type_name [46128,46140]" dest="type_name [16225,16237]"/>
  <match src="identifier: _state [104507,104513]" dest="identifier: _state [43893,43899]"/>
  <match src="identifier: Decimal [46170,46177]" dest="identifier: Decimal [16267,16274]"/>
  <match src="(: ( [52059,52060]" dest="(: ( [20183,20184]"/>
  <match src=":: : [8562,8563]" dest=":: : [9090,9091]"/>
  <match src="identifier: msg [79619,79622]" dest="identifier: msg [72042,72045]"/>
  <match src="comment: // ============ Constants ============ [5694,5732]" dest="comment: // ============ Constants ============ [6222,6260]"/>
  <match src="internal: internal [98491,98499]" dest="internal: internal [37877,37885]"/>
  <match src=",: , [83223,83224]" dest=",: , [58834,58835]"/>
  <match src="member_expression [102369,102398]" dest="member_expression [41755,41784]"/>
  <match src=",: , [9756,9757]" dest=",: , [10284,10285]"/>
  <match src="type_name [72891,72898]" dest="type_name [82700,82707]"/>
  <match src="(: ( [43573,43574]" dest="(: ( [13670,13671]"/>
  <match src="number_literal: 1e6 [41853,41856]" dest="number_literal: 1e6 [11950,11953]"/>
  <match src="contract_body [87320,87349]" dest="contract_body [29111,29140]"/>
  <match src=",: , [89177,89178]" dest=",: , [76367,76368]"/>
  <match src="): ) [13447,13448]" dest="): ) [24748,24749]"/>
  <match src="(: ( [7936,7937]" dest="(: ( [8464,8465]"/>
  <match src="primitive_type [90743,90749]" dest="primitive_type [30129,30135]"/>
  <match src="identifier: bonded [95311,95317]" dest="identifier: bonded [34697,34703]"/>
  <match src="identifier: sub [98415,98418]" dest="identifier: sub [37801,37804]"/>
  <match src="): ) [105838,105839]" dest="): ) [68982,68983]"/>
  <match src="call_argument [29166,29172]" dest="call_argument [46878,46884]"/>
  <match src="assignment_expression [34995,35034]" dest="assignment_expression [52707,52746]"/>
  <match src="memory: memory [6167,6173]" dest="memory: memory [6695,6701]"/>
  <match src="function_definition [53527,53585]" dest="function_definition [21651,21709]"/>
  <match src="{: { [34725,34726]" dest="{: { [52437,52438]"/>
  <match src="visibility [1303,1311]" dest="visibility [1831,1839]"/>
  <match src="&quot;: &quot; [33866,33867]" dest="&quot;: &quot; [51578,51579]"/>
  <match src="type_name [8973,8977]" dest="type_name [9501,9505]"/>
  <match src="call_argument [66543,66547]" dest="call_argument [81074,81078]"/>
  <match src="primitive_type [53802,53809]" dest="primitive_type [21926,21933]"/>
  <match src="identifier: add [100920,100923]" dest="identifier: add [40306,40309]"/>
  <match src="identifier: TREASURY_ADDRESS [46616,46632]" dest="identifier: TREASURY_ADDRESS [16713,16729]"/>
  <match src="identifier: file [27808,27812]" dest="identifier: file [45520,45524]"/>
  <match src="(: ( [44719,44720]" dest="(: ( [14816,14817]"/>
  <match src="memory: memory [33807,33813]" dest="memory: memory [51519,51525]"/>
  <match src=",: , [82031,82032]" dest=",: , [80939,80940]"/>
  <match src="block_statement [104653,104724]" dest="block_statement [44039,44110]"/>
  <match src="function_body [104475,104730]" dest="function_body [43861,44116]"/>
  <match src="(: ( [93905,93906]" dest="(: ( [33291,33292]"/>
  <match src="[: [ [99598,99599]" dest="[: [ [38984,38985]"/>
  <match src="=: = [71195,71196]" dest="=: = [67303,67304]"/>
  <match src="): ) [2099,2100]" dest="): ) [2627,2628]"/>
  <match src="!: ! [28918,28919]" dest="!: ! [46630,46631]"/>
  <match src="type_cast_expression [35703,35717]" dest="type_cast_expression [53415,53429]"/>
  <match src="state_mutability [6038,6042]" dest="state_mutability [6566,6570]"/>
  <match src="comment: // determine the length of the input by finding the location of the last non-zero byte [32981,33067]" dest="comment: // determine the length of the input by finding the location of the last non-zero byte [50693,50779]"/>
  <match src="{: { [98069,98070]" dest="{: { [37455,37456]"/>
  <match src="uint256: uint256 [94294,94301]" dest="uint256: uint256 [33680,33687]"/>
  <match src=",: , [106041,106042]" dest=",: , [69185,69186]"/>
  <match src=":: : [5996,5997]" dest=":: : [6524,6525]"/>
  <match src="return_statement [94126,94164]" dest="return_statement [33512,33550]"/>
  <match src="(: ( [32198,32199]" dest="(: ( [49910,49911]"/>
  <match src="identifier: self [7531,7535]" dest="identifier: self [8059,8063]"/>
  <match src="function_body [90758,90809]" dest="function_body [30144,30195]"/>
  <match src="): ) [102389,102390]" dest="): ) [41775,41776]"/>
  <match src="function_body [95900,95959]" dest="function_body [35286,35345]"/>
  <match src="]: ] [104086,104087]" dest="]: ] [43472,43473]"/>
  <match src="identifier: Upgraded [88688,88696]" dest="identifier: Upgraded [75878,75886]"/>
  <match src="address: address [52603,52610]" dest="address: address [20727,20734]"/>
  <match src="(: ( [98474,98475]" dest="(: ( [37860,37861]"/>
  <match src="return: return [6536,6542]" dest="return: return [7064,7070]"/>
  <match src="identifier: value [6549,6554]" dest="identifier: value [7077,7082]"/>
  <match src="identifier: blockTimestamp [94336,94350]" dest="identifier: blockTimestamp [33722,33736]"/>
  <match src="type_name [52873,52880]" dest="type_name [20997,21004]"/>
  <match src="(: ( [92285,92286]" dest="(: ( [31671,31672]"/>
  <match src="call_expression [8564,8601]" dest="call_expression [9092,9129]"/>
  <match src=",: , [85943,85944]" dest=",: , [27734,27735]"/>
  <match src="identifier: ADVANCE_INCENTIVE [45351,45368]" dest="identifier: ADVANCE_INCENTIVE [15448,15465]"/>
  <match src=".: . [7300,7301]" dest=".: . [7828,7829]"/>
  <match src="address: address [77272,77279]" dest="address: address [78178,78185]"/>
  <match src="identifier: D256 [7075,7079]" dest="identifier: D256 [7603,7607]"/>
  <match src="(: ( [44529,44530]" dest="(: ( [14626,14627]"/>
  <match src="type_name [101013,101020]" dest="type_name [40399,40406]"/>
  <match src="(: ( [43352,43353]" dest="(: ( [13449,13450]"/>
  <match src="identifier: initialized [104745,104756]" dest="identifier: initialized [44131,44142]"/>
  <match src="}: } [101468,101469]" dest="}: } [40854,40855]"/>
  <match src="identifier: input [33833,33838]" dest="identifier: input [51545,51550]"/>
  <match src="function_body [63975,64147]" dest="function_body [67715,67993]"/>
  <match src="visibility [92232,92238]" dest="visibility [31618,31624]"/>
  <match src=",: , [65313,65314]" dest=",: , [66815,66816]"/>
  <match src="identifier: Epoch [87068,87073]" dest="identifier: Epoch [28859,28864]"/>
  <match src=",: , [29480,29481]" dest=",: , [47192,47193]"/>
  <match src="block_statement [28925,29390]" dest="block_statement [46637,47102]"/>
  <match src="false: false [64124,64129]" dest="false: false [81700,81705]"/>
  <match src="returns: returns [53570,53577]" dest="returns: returns [21694,21701]"/>
  <match src="uint256: uint256 [76825,76832]" dest="uint256: uint256 [66393,66400]"/>
  <match src="]: ] [100317,100318]" dest="]: ] [39703,39704]"/>
  <match src=".: . [102625,102626]" dest=".: . [42011,42012]"/>
  <match src="call_argument [77192,77205]" dest="call_argument [59452,59465]"/>
  <match src="primitive_type [52721,52725]" dest="primitive_type [20845,20849]"/>
  <match src="parameter [93906,93913]" dest="parameter [33292,33299]"/>
  <match src="parameter [89418,89443]" dest="parameter [76608,76633]"/>
  <match src="bytes: bytes [33698,33703]" dest="bytes: bytes [51410,51415]"/>
  <match src="function_body [9850,9912]" dest="function_body [10378,10440]"/>
  <match src="function_definition [46537,46639]" dest="function_definition [16634,16736]"/>
  <match src="identifier: value [13944,13949]" dest="identifier: value [25245,25250]"/>
  <match src="call_argument [22924,22930]" dest="call_argument [55750,55756]"/>
  <match src="(: ( [103489,103490]" dest="(: ( [42875,42876]"/>
  <match src="identifier: a [1396,1397]" dest="identifier: a [1924,1925]"/>
  <match src="identifier: input [34755,34760]" dest="identifier: input [52467,52472]"/>
  <match src="visibility [93986,93992]" dest="visibility [33372,33378]"/>
  <match src="binary_expression [80411,80429]" dest="binary_expression [71545,71563]"/>
  <match src=",: , [6814,6815]" dest=",: , [7342,7343]"/>
  <match src="identifier: payloadA [31826,31834]" dest="identifier: payloadA [49538,49546]"/>
  <match src="(: ( [53965,53966]" dest="(: ( [22089,22090]"/>
  <match src="call_argument [29801,29807]" dest="call_argument [47513,47519]"/>
  <match src="call_argument [99056,99062]" dest="call_argument [38442,38448]"/>
  <match src="uint: uint [53077,53081]" dest="uint: uint [21201,21205]"/>
  <match src="internal: internal [46567,46575]" dest="internal: internal [16664,16672]"/>
  <match src="primitive_type [88697,88704]" dest="primitive_type [75887,75894]"/>
  <match src="]: ] [93010,93011]" dest="]: ] [32396,32397]"/>
  <match src="): ) [45413,45414]" dest="): ) [15510,15511]"/>
  <match src=".: . [79622,79623]" dest=".: . [72045,72046]"/>
  <match src="}: } [83283,83284]" dest="}: } [59071,59072]"/>
  <match src="call_argument [98419,98425]" dest="call_argument [37805,37811]"/>
  <match src="uint256: uint256 [43226,43233]" dest="uint256: uint256 [13323,13330]"/>
  <match src="returns: returns [11669,11676]" dest="returns: returns [22970,22977]"/>
  <match src="&quot;: &quot; [83566,83567]" dest="&quot;: &quot; [78334,78335]"/>
  <match src="uint256: uint256 [101036,101043]" dest="uint256: uint256 [40422,40429]"/>
  <match src="(: ( [91626,91627]" dest="(: ( [31012,31013]"/>
  <match src="function: function [782,790]" dest="function: function [1310,1318]"/>
  <match src="): ) [25227,25228]" dest="): ) [79533,79534]"/>
  <match src="expression_statement [81532,81659]" dest="expression_statement [79818,79851]"/>
  <match src="call_argument [8593,8600]" dest="call_argument [9121,9128]"/>
  <match src="(: ( [71555,71556]" dest="(: ( [67266,67267]"/>
  <match src="address: address [86845,86852]" dest="address: address [28636,28643]"/>
  <match src="call_argument [30418,30437]" dest="call_argument [48130,48149]"/>
  <match src=".: . [91570,91571]" dest=".: . [30956,30957]"/>
  <match src="visibility [102711,102719]" dest="visibility [42097,42105]"/>
  <match src="string [105808,105829]" dest="string [68952,68973]"/>
  <match src="return_statement [92937,92946]" dest="return_statement [32323,32332]"/>
  <match src="enum_value: APPROVE [86540,86547]" dest="enum_value: APPROVE [28331,28338]"/>
  <match src="state_mutability [8495,8499]" dest="state_mutability [9023,9027]"/>
  <match src="type_name [86075,86102]" dest="type_name [27866,27893]"/>
  <match src="identifier: to [13695,13697]" dest="identifier: to [24996,24998]"/>
  <match src=",: , [100180,100181]" dest=",: , [39566,39567]"/>
  <match src="private: private [42960,42967]" dest="private: private [13057,13064]"/>
  <match src="memory: memory [9151,9157]" dest="memory: memory [9679,9685]"/>
  <match src="primitive_type [27800,27807]" dest="primitive_type [45512,45519]"/>
  <match src="public: public [91508,91514]" dest="public: public [30894,30900]"/>
  <match src="block_statement [7450,7489]" dest="block_statement [7978,8017]"/>
  <match src="identifier: GOVERNANCE_EMERGENCY_DELAY [45232,45258]" dest="identifier: GOVERNANCE_EMERGENCY_DELAY [15329,15355]"/>
  <match src="returns: returns [46383,46390]" dest="returns: returns [16480,16487]"/>
  <match src="function: function [53756,53764]" dest="function: function [21880,21888]"/>
  <match src="&quot;: &quot; [25953,25954]" dest="&quot;: &quot; [79309,79310]"/>
  <match src="call_argument [31021,31047]" dest="call_argument [48733,48759]"/>
  <match src="identifier: epoch [94976,94981]" dest="identifier: epoch [34362,34367]"/>
  <match src="(: ( [81867,81868]" dest="(: ( [72449,72450]"/>
  <match src="return: return [9397,9403]" dest="return: return [9925,9931]"/>
  <match src="call_argument [32589,32597]" dest="call_argument [50301,50309]"/>
  <match src="{: { [98651,98652]" dest="{: { [38037,38038]"/>
  <match src="function_definition [11481,11536]" dest="function_definition [22782,22837]"/>
  <match src="type_name [97640,97647]" dest="type_name [37026,37033]"/>
  <match src="constant: constant [27671,27679]" dest="constant: constant [45383,45391]"/>
  <match src="parameter [91315,91322]" dest="parameter [30701,30708]"/>
  <match src="identifier: State [86569,86574]" dest="identifier: State [28360,28365]"/>
  <match src=",: , [1359,1360]" dest=",: , [1887,1888]"/>
  <match src="type_cast_expression [19823,19833]" dest="type_cast_expression [64059,64069]"/>
  <match src=",: , [30964,30965]" dest=",: , [48676,48677]"/>
  <match src="!: ! [106189,106190]" dest="!: ! [69333,69334]"/>
  <match src="identifier: balance [100904,100911]" dest="identifier: balance [40290,40297]"/>
  <match src="): ) [28471,28472]" dest="): ) [46183,46184]"/>
  <match src="identifier: Status [93313,93319]" dest="identifier: Status [32699,32705]"/>
  <match src="returns: returns [35654,35661]" dest="returns: returns [53366,53373]"/>
  <match src="primitive_type [79412,79419]" dest="primitive_type [70975,70982]"/>
  <match src="block_statement [36684,36747]" dest="block_statement [54396,54459]"/>
  <match src="binary_expression [71872,71898]" dest="binary_expression [80994,81015]"/>
  <match src="identifier: Locked [93194,93200]" dest="identifier: Locked [32580,32586]"/>
  <match src="function_definition [90706,90809]" dest="function_definition [30092,30195]"/>
  <match src="parameter [6128,6137]" dest="parameter [6656,6665]"/>
  <match src="primitive_type [27663,27670]" dest="primitive_type [45375,45382]"/>
  <match src="visibility [90554,90561]" dest="visibility [29940,29947]"/>
  <match src="(: ( [34503,34504]" dest="(: ( [52215,52216]"/>
  <match src="primitive_type [6629,6636]" dest="primitive_type [7157,7164]"/>
  <match src="identifier: result [35328,35334]" dest="identifier: result [53040,53046]"/>
  <match src="member_expression [93932,93952]" dest="member_expression [33318,33338]"/>
  <match src="identifier: reason [104391,104397]" dest="identifier: reason [43777,43783]"/>
  <match src="comment: // Can participate in balance-dependant activities [105864,105914]" dest="comment: // Can participate in balance-dependant activities [69008,69058]"/>
  <match src=",: , [82104,82105]" dest=",: , [80009,80010]"/>
  <match src="identifier: amount [100924,100930]" dest="identifier: amount [40310,40316]"/>
  <match src="): ) [9079,9080]" dest="): ) [9607,9608]"/>
  <match src="returns: returns [44546,44553]" dest="returns: returns [14643,14650]"/>
  <match src="using_directive [72872,72899]" dest="using_directive [82681,82708]"/>
  <match src="&quot;: &quot; [24972,24973]" dest="&quot;: &quot; [78526,78527]"/>
  <match src="identifier: msg [79658,79661]" dest="identifier: msg [83080,83083]"/>
  <match src="(: ( [30189,30190]" dest="(: ( [47901,47902]"/>
  <match src="returns: returns [5946,5953]" dest="returns: returns [6474,6481]"/>
  <match src="(: ( [51211,51212]" dest="(: ( [64520,64521]"/>
  <match src="struct_member [86821,86836]" dest="struct_member [28612,28627]"/>
  <match src="identifier: _state [99328,99334]" dest="identifier: _state [38714,38720]"/>
  <match src="parameter [98604,98618]" dest="parameter [37990,38004]"/>
  <match src="return: return [4784,4790]" dest="return: return [5312,5318]"/>
  <match src="}: } [85951,85952]" dest="}: } [27742,27743]"/>
  <match src=".: . [102391,102392]" dest=".: . [41777,41778]"/>
  <match src="(: ( [6576,6577]" dest="(: ( [7104,7105]"/>
  <match src="identifier: epoch [81862,81867]" dest="identifier: epoch [72444,72449]"/>
  <match src="(: ( [81225,81226]" dest="(: ( [78973,78974]"/>
  <match src="assembly: assembly [96766,96774]" dest="assembly: assembly [36152,36160]"/>
  <match src="(: ( [96397,96398]" dest="(: ( [35783,35784]"/>
  <match src="event_paramater [53485,53501]" dest="event_paramater [21609,21625]"/>
  <match src="comment: // ============ Static Functions ============ [5865,5910]" dest="comment: // ============ Static Functions ============ [6393,6438]"/>
  <match src="identifier: balance [99608,99615]" dest="identifier: balance [38994,39001]"/>
  <match src=".: . [99373,99374]" dest=".: . [38759,38760]"/>
  <match src="revert_statement [30846,31363]" dest="revert_statement [48558,49075]"/>
  <match src="identifier: payloadA [28837,28845]" dest="identifier: payloadA [46549,46557]"/>
  <match src=".: . [99038,99039]" dest=".: . [38424,38425]"/>
  <match src="comment: /**      * Governance      */ [103047,103076]" dest="comment: /**      * Governance      */ [42433,42462]"/>
  <match src="type_name [99879,99886]" dest="type_name [39265,39272]"/>
  <match src="parameter [101892,101905]" dest="parameter [41278,41291]"/>
  <match src="function: function [46043,46051]" dest="function: function [16140,16148]"/>
  <match src="(: ( [53661,53662]" dest="(: ( [21785,21786]"/>
  <match src="primitive_type [28963,28969]" dest="primitive_type [46675,46681]"/>
  <match src="member_expression [100260,100275]" dest="member_expression [39646,39661]"/>
  <match src="identifier: reject [104308,104314]" dest="identifier: reject [43694,43700]"/>
  <match src="{: { [50783,50784]" dest="{: { [55433,55434]"/>
  <match src="{: { [102720,102721]" dest="{: { [42106,42107]"/>
  <match src=":: : [93343,93344]" dest=":: : [32729,32730]"/>
  <match src="binary_expression [9519,9534]" dest="binary_expression [10047,10062]"/>
  <match src="parameter [52691,52701]" dest="parameter [20815,20825]"/>
  <match src="): ) [92316,92317]" dest="): ) [31702,31703]"/>
  <match src="variable_declaration [35148,35157]" dest="variable_declaration [52860,52869]"/>
  <match src="call_expression [30494,30513]" dest="call_expression [48206,48225]"/>
  <match src="call_expression [98393,98434]" dest="call_expression [37779,37820]"/>
  <match src="uint256: uint256 [102730,102737]" dest="uint256: uint256 [42116,42123]"/>
  <match src="call_argument [32624,32630]" dest="call_argument [50336,50342]"/>
  <match src="{: { [86575,86576]" dest="{: { [28366,28367]"/>
  <match src="return_statement [94955,95007]" dest="return_statement [34341,34393]"/>
  <match src="member_expression [80052,80062]" dest="member_expression [72234,72244]"/>
  <match src="address: address [103708,103715]" dest="address: address [43094,43101]"/>
  <match src="{: { [71165,71166]" dest="{: { [67173,67174]"/>
  <match src="type_name [9208,9212]" dest="type_name [9736,9740]"/>
  <match src="identifier: _state [100897,100903]" dest="identifier: _state [40283,40289]"/>
  <match src="extcodesize: extcodesize [85156,85167]" dest="extcodesize: extcodesize [74484,74495]"/>
  <match src="(: ( [79971,79972]" dest="(: ( [71193,71194]"/>
  <match src="=: = [104836,104837]" dest="=: = [44222,44223]"/>
  <match src="inheritance_specifier [107054,107064]" dest="inheritance_specifier [77655,77665]"/>
  <match src="identifier: amount [17646,17652]" dest="identifier: amount [59509,59515]"/>
  <match src="event: event [79161,79166]" dest="event: event [78093,78098]"/>
  <match src="parameter [32850,32862]" dest="parameter [50562,50574]"/>
  <match src="call_argument [7114,7140]" dest="call_argument [7642,7668]"/>
  <match src="uint256: uint256 [94936,94943]" dest="uint256: uint256 [34322,34329]"/>
  <match src="function_definition [45381,45493]" dest="function_definition [15478,15590]"/>
  <match src="parameter [77351,77367]" dest="parameter [17552,17571]"/>
  <match src="type_name [77272,77279]" dest="type_name [78178,78185]"/>
  <match src="parameter [32084,32100]" dest="parameter [49796,49812]"/>
  <match src="uint256: uint256 [63082,63089]" dest="uint256: uint256 [77893,77900]"/>
  <match src="bytes32: bytes32 [28224,28231]" dest="bytes32: bytes32 [45936,45943]"/>
  <match src="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [3462,3539]" dest="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [3990,4067]"/>
  <match src="user_defined_type [7875,7879]" dest="user_defined_type [8403,8407]"/>
  <match src="): ) [101384,101385]" dest="): ) [40770,40771]"/>
  <match src="identifier: amount [73535,73541]" dest="identifier: amount [18228,18234]"/>
  <match src="): ) [93754,93755]" dest="): ) [33140,33141]"/>
  <match src="call_expression [104571,104590]" dest="call_expression [43957,43976]"/>
  <match src="uint256: uint256 [12333,12340]" dest="uint256: uint256 [23634,23641]"/>
  <match src=",: , [80808,80809]" dest=",: , [71845,71846]"/>
  <match src="(: ( [54067,54068]" dest="(: ( [22191,22192]"/>
  <match src="primitive_type [73357,73364]" dest="primitive_type [83295,83302]"/>
  <match src="primitive_type [35843,35848]" dest="primitive_type [53555,53560]"/>
  <match src="): ) [53554,53555]" dest="): ) [21678,21679]"/>
  <match src="): ) [86101,86102]" dest="): ) [27892,27893]"/>
  <match src="member_expression [95290,95317]" dest="member_expression [34676,34703]"/>
  <match src="identifier: timestamp [94569,94578]" dest="identifier: timestamp [33955,33964]"/>
  <match src="(: ( [84612,84613]" dest="(: ( [73940,73941]"/>
  <match src="(: ( [53631,53632]" dest="(: ( [21755,21756]"/>
  <match src="}: } [33636,33637]" dest="}: } [51348,51349]"/>
  <match src="type_name [86467,86474]" dest="type_name [28258,28265]"/>
  <match src="}: } [95198,95199]" dest="}: } [34584,34585]"/>
  <match src="=: = [33091,33092]" dest="=: = [50803,50804]"/>
  <match src=".: . [93116,93117]" dest=".: . [32502,32503]"/>
  <match src="function_body [95135,95199]" dest="function_body [34521,34585]"/>
  <match src="primitive_type [54163,54167]" dest="primitive_type [22287,22291]"/>
  <match src="member_expression [102530,102543]" dest="member_expression [41916,41929]"/>
  <match src="revert: revert [31557,31563]" dest="revert: revert [49269,49275]"/>
  <match src="return: return [93588,93594]" dest="return: return [32974,32980]"/>
  <match src="number_literal: 40 [35473,35475]" dest="number_literal: 40 [53185,53187]"/>
  <match src=",: , [83427,83428]" dest=",: , [80340,80341]"/>
  <match src=".: . [98407,98408]" dest=".: . [37793,37794]"/>
  <match src="type_name [30762,30769]" dest="type_name [48474,48481]"/>
  <match src="call_argument [32503,32522]" dest="call_argument [50215,50234]"/>
  <match src="identifier: owner [13904,13909]" dest="identifier: owner [25205,25210]"/>
  <match src="identifier: account [104523,104530]" dest="identifier: account [43909,43916]"/>
  <match src="number_literal: 4 [35395,35396]" dest="number_literal: 4 [53107,53108]"/>
  <match src="uint256: uint256 [79008,79015]" dest="uint256: uint256 [70630,70637]"/>
  <match src="call_argument [5990,6000]" dest="call_argument [6518,6528]"/>
  <match src="identifier: a [870,871]" dest="identifier: a [1398,1399]"/>
  <match src="user_defined_type [63948,63960]" dest="user_defined_type [19312,19324]"/>
  <match src="type_name [95264,95271]" dest="type_name [34650,34657]"/>
  <match src="member_expression [91860,91881]" dest="member_expression [31246,31267]"/>
  <match src="call_expression [6321,6358]" dest="call_expression [6849,6886]"/>
  <match src="returns: returns [11969,11976]" dest="returns: returns [23270,23277]"/>
  <match src="primitive_type [98620,98626]" dest="primitive_type [38006,38012]"/>
  <match src="type_name [15839,15846]" dest="type_name [60602,60609]"/>
  <match src="(: ( [6127,6128]" dest="(: ( [6655,6656]"/>
  <match src="member_expression [92177,92199]" dest="member_expression [31563,31585]"/>
  <match src="primitive_type [42206,42213]" dest="primitive_type [12303,12310]"/>
  <match src="identifier: isContract [89512,89522]" dest="identifier: isContract [76702,76712]"/>
  <match src="identifier: z [36478,36479]" dest="identifier: z [54190,54191]"/>
  <match src="type_name [16459,16466]" dest="type_name [56676,56683]"/>
  <match src="): ) [52425,52426]" dest="): ) [20549,20550]"/>
  <match src="member_expression [98832,98846]" dest="member_expression [38218,38232]"/>
  <match src="contract_body [5655,10143]" dest="contract_body [6183,10671]"/>
  <match src="array_access [35328,35346]" dest="array_access [53040,53058]"/>
  <match src="type_name [8712,8716]" dest="type_name [9240,9244]"/>
  <match src="call_argument [28448,28472]" dest="call_argument [46160,46184]"/>
  <match src="pure: pure [8303,8307]" dest="pure: pure [8831,8835]"/>
  <match src="=&gt;: =&gt; [87264,87266]" dest="=&gt;: =&gt; [29055,29057]"/>
  <match src="identifier: newImplementation [88936,88953]" dest="identifier: newImplementation [76126,76143]"/>
  <match src="}: } [43960,43961]" dest="}: } [14057,14058]"/>
  <match src="identifier: c [1392,1393]" dest="identifier: c [1920,1921]"/>
  <match src="identifier: epoch [92910,92915]" dest="identifier: epoch [32296,32301]"/>
  <match src=",: , [6352,6353]" dest=",: , [6880,6881]"/>
  <match src="function_body [90869,90899]" dest="function_body [30255,30285]"/>
  <match src="(: ( [89021,89022]" dest="(: ( [76211,76212]"/>
  <match src="&quot;: &quot; [20497,20498]" dest="&quot;: &quot; [63127,63128]"/>
  <match src="&quot;: &quot; [82059,82060]" dest="&quot;: &quot; [80955,80956]"/>
  <match src="&quot;: &quot; [17740,17741]" dest="&quot;: &quot; [72292,72293]"/>
  <match src="call_argument [16542,16548]" dest="call_argument [56480,56486]"/>
  <match src="identifier: a [6345,6346]" dest="identifier: a [6873,6874]"/>
  <match src="call_argument [6928,6972]" dest="call_argument [7456,7500]"/>
  <match src="identifier: FILE [82027,82031]" dest="identifier: FILE [80935,80939]"/>
  <match src="variable_declaration [71285,71317]" dest="variable_declaration [67332,67352]"/>
  <match src="parameter [52780,52790]" dest="parameter [20904,20914]"/>
  <match src="type_name [9146,9150]" dest="type_name [9674,9678]"/>
  <match src="memory: memory [34869,34875]" dest="memory: memory [52581,52587]"/>
  <match src=".: . [103885,103886]" dest=".: . [43271,43272]"/>
  <match src="): ) [29378,29379]" dest="): ) [47090,47091]"/>
  <match src="primitive_type [31473,31480]" dest="primitive_type [49185,49192]"/>
  <match src="{: { [64055,64056]" dest="{: { [67919,67920]"/>
  <match src="identifier: b [3405,3406]" dest="identifier: b [3933,3934]"/>
  <match src="=: = [104505,104506]" dest="=: = [43891,43892]"/>
  <match src="user_defined_type [6611,6615]" dest="user_defined_type [7139,7143]"/>
  <match src="type_name [81041,81048]" dest="type_name [62635,62642]"/>
  <match src="==: == [33839,33841]" dest="==: == [51551,51553]"/>
  <match src="primitive_type [54227,54231]" dest="primitive_type [22351,22355]"/>
  <match src="call_expression [80411,80424]" dest="call_expression [71545,71558]"/>
  <match src="variable_declaration [65552,65575]" dest="variable_declaration [72095,72109]"/>
  <match src="function_body [93915,93959]" dest="function_body [33301,33345]"/>
  <match src="identifier: _state [99943,99949]" dest="identifier: _state [39329,39335]"/>
  <match src="identifier: reason [8210,8216]" dest="identifier: reason [8738,8744]"/>
  <match src="visibility [103525,103533]" dest="visibility [42911,42919]"/>
  <match src="member_expression [80913,80923]" dest="member_expression [72968,72978]"/>
  <match src="call_argument [30959,30963]" dest="call_argument [48671,48675]"/>
  <match src="): ) [32651,32652]" dest="): ) [50363,50364]"/>
  <match src=".: . [104801,104802]" dest=".: . [44187,44188]"/>
  <match src="}: } [97935,97936]" dest="}: } [37321,37322]"/>
  <match src="comment: // allocate the string [34059,34081]" dest="comment: // allocate the string [51771,51793]"/>
  <match src="): ) [75594,75595]" dest="): ) [61101,61102]"/>
  <match src="{: { [61793,61794]" dest="{: { [26848,26849]"/>
  <match src="member_expression [8395,8402]" dest="member_expression [8923,8930]"/>
  <match src="identifier: c [2118,2119]" dest="identifier: c [2646,2647]"/>
  <match src=".: . [7810,7811]" dest=".: . [8338,8339]"/>
  <match src="function_body [44315,44381]" dest="function_body [14412,14478]"/>
  <match src="): ) [21985,21986]" dest="): ) [63620,63621]"/>
  <match src="struct_member [86389,86408]" dest="struct_member [28180,28199]"/>
  <match src="identifier: this [79420,79424]" dest="identifier: this [70983,70987]"/>
  <match src="string: string [1275,1281]" dest="string: string [1803,1809]"/>
  <match src="uint: uint [52620,52624]" dest="uint: uint [20744,20748]"/>
  <match src="parameter [1264,1273]" dest="parameter [1792,1801]"/>
  <match src="{: { [87320,87321]" dest="{: { [29111,29112]"/>
  <match src="pure: pure [32124,32128]" dest="pure: pure [49836,49840]"/>
  <match src="type_name [86632,86639]" dest="type_name [28423,28430]"/>
  <match src="identifier: votesFor [96242,96250]" dest="identifier: votesFor [35628,35636]"/>
  <match src="identifier: candidates [104028,104038]" dest="identifier: candidates [43414,43424]"/>
  <match src="}: } [50842,50843]" dest="}: } [55589,55590]"/>
  <match src="]: ] [93618,93619]" dest="]: ] [33004,33005]"/>
  <match src="call_argument [31105,31124]" dest="call_argument [48817,48836]"/>
  <match src="identifier: strategy [94238,94246]" dest="identifier: strategy [33624,33632]"/>
  <match src="): ) [91943,91944]" dest="): ) [31329,31330]"/>
  <match src=".: . [101249,101250]" dest=".: . [40635,40636]"/>
  <match src="primitive_type [19687,19694]" dest="primitive_type [63863,63870]"/>
  <match src="parameter [33801,33813]" dest="parameter [51513,51525]"/>
  <match src="revert: revert [28939,28945]" dest="revert: revert [46651,46657]"/>
  <match src="primitive_type [48102,48109]" dest="primitive_type [56831,56838]"/>
  <match src="=: = [36342,36343]" dest="=: = [54054,54055]"/>
  <match src="type_name [94207,94230]" dest="type_name [33593,33616]"/>
  <match src="parameter [93531,93546]" dest="parameter [32917,32932]"/>
  <match src="call_expression [30418,30437]" dest="call_expression [48130,48149]"/>
  <match src="identifier: reject [104101,104107]" dest="identifier: reject [43487,43493]"/>
  <match src="(: ( [8631,8632]" dest="(: ( [9159,9160]"/>
  <match src="(: ( [9071,9072]" dest="(: ( [9599,9600]"/>
  <match src="type_name [52754,52761]" dest="type_name [20878,20885]"/>
  <match src="binary_expression [5762,5768]" dest="binary_expression [6290,6296]"/>
  <match src="{: { [104475,104476]" dest="{: { [43861,43862]"/>
  <match src="expression_statement [48634,48694]" dest="expression_statement [62558,62625]"/>
  <match src="return_statement [94816,94863]" dest="return_statement [34202,34249]"/>
  <match src="): ) [92747,92748]" dest="): ) [32133,32134]"/>
  <match src="identifier: Coupons [86314,86321]" dest="identifier: Coupons [28105,28112]"/>
  <match src=",: , [28503,28504]" dest=",: , [46215,46216]"/>
  <match src="call_expression [35839,35852]" dest="call_expression [53551,53564]"/>
  <match src="user_defined_type [8650,8654]" dest="user_defined_type [9178,9182]"/>
  <match src="(: ( [8910,8911]" dest="(: ( [9438,9439]"/>
  <match src="string [21086,21121]" dest="string [63253,63290]"/>
  <match src=".: . [93468,93469]" dest=".: . [32854,32855]"/>
  <match src="(: ( [6051,6052]" dest="(: ( [6579,6580]"/>
  <match src="state_variable_declaration [43096,43155]" dest="state_variable_declaration [13193,13252]"/>
  <match src="yul_function_call [89705,89736]" dest="yul_function_call [76895,76926]"/>
  <match src="(: ( [25879,25880]" dest="(: ( [79212,79213]"/>
  <match src="address: address [62888,62895]" dest="address: address [78003,78010]"/>
  <match src=",: , [31079,31080]" dest=",: , [48791,48792]"/>
  <match src="type_name [104233,104239]" dest="type_name [43619,43625]"/>
  <match src="}: } [36849,36850]" dest="}: } [54561,54562]"/>
  <match src="identifier: _state [93595,93601]" dest="identifier: _state [32981,32987]"/>
  <match src="memory: memory [64855,64861]" dest="memory: memory [65889,65895]"/>
  <match src=",: , [56634,56635]" dest=",: , [72869,72870]"/>
  <match src="string [63588,63607]" dest="string [81467,81481]"/>
  <match src="identifier: _state [98369,98375]" dest="identifier: _state [37755,37761]"/>
  <match src="external: external [80250,80258]" dest="external: external [71447,71455]"/>
  <match src="identifier: a [6254,6255]" dest="identifier: a [6782,6783]"/>
  <match src="): ) [33765,33766]" dest="): ) [51477,51478]"/>
  <match src="(: ( [101882,101883]" dest="(: ( [41268,41269]"/>
  <match src="(: ( [80936,80937]" dest="(: ( [72991,72992]"/>
  <match src="uint8: uint8 [34967,34972]" dest="uint8: uint8 [52679,52684]"/>
  <match src="): ) [4773,4774]" dest="): ) [5301,5302]"/>
  <match src="(: ( [93245,93246]" dest="(: ( [32631,32632]"/>
  <match src="address: address [52534,52541]" dest="address: address [20658,20665]"/>
  <match src="(: ( [33986,33987]" dest="(: ( [51698,51699]"/>
  <match src="comment: /**      * Account      */ [99105,99131]" dest="comment: /**      * Account      */ [38491,38517]"/>
  <match src="[: [ [103178,103179]" dest="[: [ [42564,42565]"/>
  <match src="): ) [45798,45799]" dest="): ) [15895,15896]"/>
  <match src="call_expression [99618,99704]" dest="call_expression [39004,39090]"/>
  <match src="visibility [66411,66419]" dest="visibility [63492,63500]"/>
  <match src="return_type_definition [16698,16715]" dest="return_type_definition [58254,58271]"/>
  <match src="(: ( [92711,92712]" dest="(: ( [32097,32098]"/>
  <match src="{: { [95768,95769]" dest="{: { [35154,35155]"/>
  <match src="type_name [78880,78887]" dest="type_name [70398,70405]"/>
  <match src="identifier: D256 [8173,8177]" dest="identifier: D256 [8701,8705]"/>
  <match src="string [82112,82141]" dest="string [80017,80032]"/>
  <match src="return_type_definition [93071,93095]" dest="return_type_definition [32457,32481]"/>
  <match src="type_name [31986,31993]" dest="type_name [49698,49705]"/>
  <match src="identifier: LPAREN [32395,32401]" dest="identifier: LPAREN [50107,50113]"/>
  <match src=",: , [28053,28054]" dest=",: , [45765,45766]"/>
  <match src="uint256: uint256 [17569,17576]" dest="uint256: uint256 [59404,59411]"/>
  <match src="number_literal: 0 [99821,99822]" dest="number_literal: 0 [39207,39208]"/>
  <match src=".: . [101130,101131]" dest=".: . [40516,40517]"/>
  <match src="type_name [102479,102486]" dest="type_name [41865,41872]"/>
  <match src="identifier: mul [9874,9877]" dest="identifier: mul [10402,10405]"/>
  <match src="function_definition [782,916]" dest="function_definition [1310,1444]"/>
  <match src="primitive_type [86361,86368]" dest="primitive_type [28152,28159]"/>
  <match src="parameter [54256,54275]" dest="parameter [22380,22399]"/>
  <match src=".: . [100623,100624]" dest=".: . [40009,40010]"/>
  <match src="primitive_type [53444,53451]" dest="primitive_type [21568,21575]"/>
  <match src="(: ( [9376,9377]" dest="(: ( [9904,9905]"/>
  <match src="): ) [25954,25955]" dest="): ) [79323,79324]"/>
  <match src="struct_member [86361,86380]" dest="struct_member [28152,28171]"/>
  <match src="}: } [36498,36499]" dest="}: } [54210,54211]"/>
  <match src="identifier: Constants [101592,101601]" dest="identifier: Constants [40978,40987]"/>
  <match src="): ) [98489,98490]" dest="): ) [37875,37876]"/>
  <match src="identifier: Balance [87096,87103]" dest="identifier: Balance [28887,28894]"/>
  <match src="function_body [103388,103455]" dest="function_body [42774,42841]"/>
  <match src="(: ( [51429,51430]" dest="(: ( [60843,60844]"/>
  <match src="(: ( [19830,19831]" dest="(: ( [64066,64067]"/>
  <match src="type_cast_expression [28963,29365]" dest="type_cast_expression [46675,47077]"/>
  <match src="(: ( [9732,9733]" dest="(: ( [10260,10261]"/>
  <match src="state_mutability [95377,95381]" dest="state_mutability [34763,34767]"/>
  <match src="{: { [45830,45831]" dest="{: { [15927,15928]"/>
  <match src="call_expression [36303,36326]" dest="call_expression [54015,54038]"/>
  <match src="(: ( [54344,54345]" dest="(: ( [22468,22469]"/>
  <match src="): ) [96298,96299]" dest="): ) [35684,35685]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [34282,34324]" dest="comment: // reverse-for-loops with unsigned integer [51994,52036]"/>
  <match src="call_expression [83121,83128]" dest="call_expression [58977,58985]"/>
  <match src="block_statement [92923,92956]" dest="block_statement [32309,32342]"/>
  <match src="user_defined_type [8517,8521]" dest="user_defined_type [9045,9049]"/>
  <match src=".: . [91762,91763]" dest=".: . [31148,31149]"/>
  <match src="uint256: uint256 [50706,50713]" dest="uint256: uint256 [55408,55415]"/>
  <match src="function: function [98576,98584]" dest="function: function [37962,37970]"/>
  <match src="primitive_type [35609,35616]" dest="primitive_type [53321,53328]"/>
  <match src="): ) [36840,36841]" dest="): ) [54552,54553]"/>
  <match src="identifier: sender [20064,20070]" dest="identifier: sender [64707,64713]"/>
  <match src="return: return [3549,3555]" dest="return: return [4077,4083]"/>
  <match src="primitive_type [41958,41965]" dest="primitive_type [12055,12062]"/>
  <match src="return: return [34601,34607]" dest="return: return [52313,52319]"/>
  <match src="[: [ [102049,102050]" dest="[: [ [41435,41436]"/>
  <match src="function: function [95205,95213]" dest="function: function [34591,34599]"/>
  <match src="identifier: provider [87130,87138]" dest="identifier: provider [28921,28929]"/>
  <match src="{: { [8364,8365]" dest="{: { [8892,8893]"/>
  <match src="): ) [80378,80379]" dest="): ) [66641,66642]"/>
  <match src="identifier: i [7580,7581]" dest="identifier: i [8108,8109]"/>
  <match src="identifier: D256 [8455,8459]" dest="identifier: D256 [8983,8987]"/>
  <match src="call_expression [44891,44943]" dest="call_expression [14988,15040]"/>
  <match src="yul_assignment [96789,96808]" dest="yul_assignment [36175,36194]"/>
  <match src="type_name [30736,30743]" dest="type_name [48448,48455]"/>
  <match src="string_literal [78768,78774]" dest="string_literal [70283,70292]"/>
  <match src="call_argument [36446,36463]" dest="call_argument [54158,54175]"/>
  <match src="identifier: BASE [5755,5759]" dest="identifier: BASE [6283,6287]"/>
  <match src="return: return [92937,92943]" dest="return: return [32323,32329]"/>
  <match src="): ) [3424,3425]" dest="): ) [3952,3953]"/>
  <match src="identifier: accounts [102081,102089]" dest="identifier: accounts [41467,41475]"/>
  <match src="): ) [8986,8987]" dest="): ) [9514,9515]"/>
  <match src="): ) [87282,87283]" dest="): ) [29073,29074]"/>
  <match src="visibility [99920,99928]" dest="visibility [39306,39314]"/>
  <match src="(: ( [52420,52421]" dest="(: ( [20544,20545]"/>
  <match src="&quot;: &quot; [80856,80857]" dest="&quot;: &quot; [71896,71897]"/>
  <match src="identifier: epochs [100735,100741]" dest="identifier: epochs [40121,40127]"/>
  <match src="function_body [92435,92490]" dest="function_body [31821,31876]"/>
  <match src="function: function [94734,94742]" dest="function: function [34120,34128]"/>
  <match src="uint256: uint256 [95759,95766]" dest="uint256: uint256 [35145,35152]"/>
  <match src="): ) [8006,8007]" dest="): ) [8534,8535]"/>
  <match src="(: ( [95121,95122]" dest="(: ( [34507,34508]"/>
  <match src="call_expression [46170,46219]" dest="call_expression [16267,16316]"/>
  <match src="identifier: value [79016,79021]" dest="identifier: value [70638,70643]"/>
  <match src="member_expression [78615,78625]" dest="member_expression [63178,63188]"/>
  <match src=".: . [100678,100679]" dest=".: . [40064,40065]"/>
  <match src="identifier: to [52776,52778]" dest="identifier: to [20900,20902]"/>
  <match src=".: . [101574,101575]" dest=".: . [40960,40961]"/>
  <match src="primitive_type [78937,78944]" dest="primitive_type [61061,61068]"/>
  <match src="identifier: Global [87074,87080]" dest="identifier: Global [28865,28871]"/>
  <match src="function_definition [95701,95826]" dest="function_definition [35087,35212]"/>
  <match src="return_statement [96310,96365]" dest="return_statement [35696,35751]"/>
  <match src="primitive_type [72891,72898]" dest="primitive_type [82700,82707]"/>
  <match src="&quot;: &quot; [25226,25227]" dest="&quot;: &quot; [79519,79520]"/>
  <match src="identifier: _state [101106,101112]" dest="identifier: _state [40492,40498]"/>
  <match src="primitive_type [43345,43352]" dest="primitive_type [13442,13449]"/>
  <match src="primitive_type [34967,34972]" dest="primitive_type [52679,52684]"/>
  <match src="*: * [36208,36209]" dest="*: * [53920,53921]"/>
  <match src="returns: returns [93427,93434]" dest="returns: returns [32813,32820]"/>
  <match src="=: = [34477,34478]" dest="=: = [52189,52190]"/>
  <match src="returns: returns [92417,92424]" dest="returns: returns [31803,31810]"/>
  <match src=",: , [804,805]" dest=",: , [1332,1333]"/>
  <match src="): ) [4128,4129]" dest="): ) [4656,4657]"/>
  <match src="(: ( [98706,98707]" dest="(: ( [38092,38093]"/>
  <match src="identifier: epochs [101293,101299]" dest="identifier: epochs [40679,40685]"/>
  <match src="}: } [9540,9541]" dest="}: } [10068,10069]"/>
  <match src="call_expression [89162,89194]" dest="call_expression [76352,76384]"/>
  <match src="expression_statement [4745,4775]" dest="expression_statement [5273,5303]"/>
  <match src="function: function [75561,75569]" dest="function: function [61087,61095]"/>
  <match src="(: ( [7074,7075]" dest="(: ( [7602,7603]"/>
  <match src="call_argument [20603,20609]" dest="call_argument [59048,59054]"/>
  <match src=".: . [94385,94386]" dest=".: . [33771,33772]"/>
  <match src="primitive_type [89637,89644]" dest="primitive_type [76827,76834]"/>
  <match src="type_name [53419,53423]" dest="type_name [21543,21547]"/>
  <match src="struct_declaration [87045,87301]" dest="struct_declaration [28836,29092]"/>
  <match src="(: ( [86688,86689]" dest="(: ( [28479,28480]"/>
  <match src="identifier: stringifyTruncated [31732,31750]" dest="identifier: stringifyTruncated [49444,49462]"/>
  <match src="&amp;: &amp; [35356,35357]" dest="&amp;: &amp; [53068,53069]"/>
  <match src="return: return [9055,9061]" dest="return: return [9583,9589]"/>
  <match src="uint256: uint256 [27336,27343]" dest="uint256: uint256 [45048,45055]"/>
  <match src="external: external [11960,11968]" dest="external: external [23261,23269]"/>
  <match src="primitive_type [86038,86045]" dest="primitive_type [27829,27836]"/>
  <match src="external: external [97883,97891]" dest="external: external [37269,37277]"/>
  <match src="call_argument [98427,98433]" dest="call_argument [37813,37819]"/>
  <match src="uint: uint [53394,53398]" dest="uint: uint [21518,21522]"/>
  <match src="member_expression [102990,103030]" dest="member_expression [42376,42416]"/>
  <match src="member_expression [92694,92711]" dest="member_expression [32080,32097]"/>
  <match src="identifier: amount [99378,99384]" dest="identifier: amount [38764,38770]"/>
  <match src="identifier: Decimal [62681,62688]" dest="identifier: Decimal [65522,65529]"/>
  <match src="address: address [99488,99495]" dest="address: address [38874,38881]"/>
  <match src="state_variable_declaration [27663,27700]" dest="state_variable_declaration [45375,45412]"/>
  <match src="address: address [99165,99172]" dest="address: address [38551,38558]"/>
  <match src=".: . [65251,65252]" dest=".: . [67701,67702]"/>
  <match src="identifier: unfreeze [80279,80287]" dest="identifier: unfreeze [71496,71504]"/>
  <match src=",: , [100204,100205]" dest=",: , [39590,39591]"/>
  <match src="identifier: COMMA [32548,32553]" dest="identifier: COMMA [50260,50265]"/>
  <match src="identifier: CURRENT_EPOCH_PERIOD [43927,43947]" dest="identifier: CURRENT_EPOCH_PERIOD [14024,14044]"/>
  <match src="return_type_definition [44432,44449]" dest="return_type_definition [14529,14546]"/>
  <match src=".: . [95617,95618]" dest=".: . [35003,35004]"/>
  <match src="identifier: initialize [88744,88754]" dest="identifier: initialize [75934,75944]"/>
  <match src="primitive_type [54177,54181]" dest="primitive_type [22301,22305]"/>
  <match src="bool: bool [9035,9039]" dest="bool: bool [9563,9567]"/>
  <match src="number_literal: 1 [7570,7571]" dest="number_literal: 1 [8098,8099]"/>
  <match src="primitive_type [95759,95766]" dest="primitive_type [35145,35152]"/>
  <match src="return: return [94556,94562]" dest="return: return [33942,33948]"/>
  <match src="function_definition [8616,8767]" dest="function_definition [9144,9295]"/>
  <match src="(: ( [54162,54163]" dest="(: ( [22286,22287]"/>
  <match src="visibility [93059,93065]" dest="visibility [32445,32451]"/>
  <match src="identifier: D256 [8632,8636]" dest="identifier: D256 [9160,9164]"/>
  <match src="(: ( [90719,90720]" dest="(: ( [30105,30106]"/>
  <match src="type_name [86443,86450]" dest="type_name [28234,28241]"/>
  <match src="call_argument [65446,65460]" dest="call_argument [66853,66862]"/>
  <match src="parameter [45557,45564]" dest="parameter [15654,15661]"/>
  <match src="parameter [46128,46147]" dest="parameter [16225,16244]"/>
  <match src="function_definition [54196,54286]" dest="function_definition [22320,22410]"/>
  <match src="identifier: owner [52527,52532]" dest="identifier: owner [20651,20656]"/>
  <match src="identifier: bstr [34103,34107]" dest="identifier: bstr [51815,51819]"/>
  <match src="identifier: Setters [105557,105564]" dest="identifier: Setters [68701,68708]"/>
  <match src="primitive_type [95228,95235]" dest="primitive_type [34614,34621]"/>
  <match src="): ) [6100,6101]" dest="): ) [6628,6629]"/>
  <match src="call_argument [81963,81973]" dest="call_argument [71474,71484]"/>
  <match src="call_argument [7305,7306]" dest="call_argument [7833,7834]"/>
  <match src="identifier: Require [82072,82079]" dest="identifier: Require [79974,79981]"/>
  <match src="visibility [94915,94921]" dest="visibility [34301,34307]"/>
  <match src="call_expression [64109,64122]" dest="call_expression [67940,67953]"/>
  <match src="pure: pure [55477,55481]" dest="pure: pure [17929,17933]"/>
  <match src="type_name [36558,36565]" dest="type_name [54270,54277]"/>
  <match src="string [48748,48762]" dest="string [56054,56098]"/>
  <match src=",: , [99811,99812]" dest=",: , [39197,39198]"/>
  <match src="call_expression [29833,29852]" dest="call_expression [47545,47564]"/>
  <match src="view: view [95877,95881]" dest="view: view [35263,35267]"/>
  <match src="identifier: b [2061,2062]" dest="identifier: b [2589,2590]"/>
  <match src="): ) [36734,36735]" dest="): ) [54446,54447]"/>
  <match src="uint256: uint256 [94007,94014]" dest="uint256: uint256 [33393,33400]"/>
  <match src="function: function [88735,88743]" dest="function: function [75925,75933]"/>
  <match src="state_mutability [28895,28899]" dest="state_mutability [46607,46611]"/>
  <match src="return: return [9860,9866]" dest="return: return [10388,10394]"/>
  <match src="primitive_type [99813,99820]" dest="primitive_type [39199,39206]"/>
  <match src="type_name [21020,21027]" dest="type_name [56170,56177]"/>
  <match src="event_paramater [51478,51490]" dest="event_paramater [61028,61051]"/>
  <match src="parameter [93398,93413]" dest="parameter [32784,32799]"/>
  <match src="primitive_type [2017,2024]" dest="primitive_type [2545,2552]"/>
  <match src="string [83566,83575]" dest="string [78334,78351]"/>
  <match src="bytes32: bytes32 [31427,31434]" dest="bytes32: bytes32 [49139,49146]"/>
  <match src="parameter [53005,53009]" dest="parameter [21129,21133]"/>
  <match src="identifier: value [7977,7982]" dest="identifier: value [8505,8510]"/>
  <match src="parameter [8143,8154]" dest="parameter [8671,8682]"/>
  <match src="assignment_expression [101778,101835]" dest="assignment_expression [41164,41221]"/>
  <match src="call_argument [92306,92317]" dest="call_argument [31692,31703]"/>
  <match src="identifier: name [90715,90719]" dest="identifier: name [30101,30105]"/>
  <match src="identifier: msg [81963,81966]" dest="identifier: msg [71474,71477]"/>
  <match src="identifier: newLock [104706,104713]" dest="identifier: newLock [44092,44099]"/>
  <match src="call_argument [29083,29088]" dest="call_argument [46795,46800]"/>
  <match src="member_expression [104795,104835]" dest="member_expression [44181,44221]"/>
  <match src="identifier: errorMessage [1289,1301]" dest="identifier: errorMessage [1817,1829]"/>
  <match src="uint256: uint256 [98024,98031]" dest="uint256: uint256 [37410,37417]"/>
  <match src="state_mutability [53618,53622]" dest="state_mutability [21742,21746]"/>
  <match src="identifier: amount0Out [53399,53409]" dest="identifier: amount0Out [21523,21533]"/>
  <match src="type_name [34863,34868]" dest="type_name [52575,52580]"/>
  <match src="if_statement [33829,33880]" dest="if_statement [51541,51592]"/>
  <match src="primitive_type [19652,19659]" dest="primitive_type [63789,63796]"/>
  <match src="identifier: sub [99651,99654]" dest="identifier: sub [39037,39040]"/>
  <match src="if: if [28329,28331]" dest="if: if [46041,46043]"/>
  <match src="primitive_type [32850,32855]" dest="primitive_type [50562,50567]"/>
  <match src=",: , [99180,99181]" dest=",: , [38566,38567]"/>
  <match src="return: return [95778,95784]" dest="return: return [35164,35170]"/>
  <match src="parameter [49665,49679]" dest="parameter [26048,26062]"/>
  <match src="): ) [92921,92922]" dest="): ) [32307,32308]"/>
  <match src="(: ( [89089,89090]" dest="(: ( [76279,76280]"/>
  <match src="call_expression [5985,6001]" dest="call_expression [6513,6529]"/>
  <match src="identifier: accounts [101155,101163]" dest="identifier: accounts [40541,40549]"/>
  <match src="primitive_type [42693,42700]" dest="primitive_type [12790,12797]"/>
  <match src="primitive_type [87256,87263]" dest="primitive_type [29047,29054]"/>
  <match src="(: ( [34706,34707]" dest="(: ( [52418,52419]"/>
  <match src="=: = [35250,35251]" dest="=: = [52962,52963]"/>
  <match src="=: = [36112,36113]" dest="=: = [53824,53825]"/>
  <match src="internal: internal [32111,32119]" dest="internal: internal [49823,49831]"/>
  <match src="call_argument [83363,83409]" dest="call_argument [80238,80322]"/>
  <match src="type_name [76657,76664]" dest="type_name [56893,56900]"/>
  <match src="member_expression [98683,98702]" dest="member_expression [38069,38088]"/>
  <match src="parameter [82865,82878]" dest="parameter [80860,80877]"/>
  <match src="primitive_type [68382,68389]" dest="primitive_type [65732,65739]"/>
  <match src="call_argument [70401,70417]" dest="call_argument [58779,58792]"/>
  <match src="return_statement [97917,97930]" dest="return_statement [37303,37316]"/>
  <match src="(: ( [13011,13012]" dest="(: ( [24312,24313]"/>
  <match src="): ) [46029,46030]" dest="): ) [16126,16127]"/>
  <match src="{: { [9850,9851]" dest="{: { [10378,10379]"/>
  <match src="library_declaration [41257,46641]" dest="library_declaration [11354,16738]"/>
  <match src="(: ( [48646,48647]" dest="(: ( [62570,62571]"/>
  <match src="function_body [45334,45375]" dest="function_body [15431,15472]"/>
  <match src="identifier: reason [99076,99082]" dest="identifier: reason [38462,38468]"/>
  <match src="identifier: account [93539,93546]" dest="identifier: account [32925,32932]"/>
  <match src="call_argument [103650,103656]" dest="call_argument [43036,43042]"/>
  <match src="primitive_type [105571,105578]" dest="primitive_type [68715,68722]"/>
  <match src="identifier: amount [49673,49679]" dest="identifier: amount [26056,26062]"/>
  <match src="identifier: encodePacked [32951,32963]" dest="identifier: encodePacked [50663,50675]"/>
  <match src="inheritance_specifier [107312,107322]" dest="inheritance_specifier [70201,70211]"/>
  <match src="identifier: a [1261,1262]" dest="identifier: a [1789,1790]"/>
  <match src="array_access [102010,102032]" dest="array_access [41396,41418]"/>
  <match src="internal: internal [45302,45310]" dest="internal: internal [15399,15407]"/>
  <match src="identifier: SafeMath [72878,72886]" dest="identifier: SafeMath [82687,82695]"/>
  <match src="address: address [49648,49655]" dest="address: address [26031,26038]"/>
  <match src="primitive_type [30025,30032]" dest="primitive_type [47737,47744]"/>
  <match src="library_declaration [5639,10143]" dest="library_declaration [6167,10671]"/>
  <match src="return: return [35555,35561]" dest="return: return [53267,53273]"/>
  <match src="identifier: recipient [98005,98014]" dest="identifier: recipient [37391,37400]"/>
  <match src="uint8: uint8 [36710,36715]" dest="uint8: uint8 [54422,54427]"/>
  <match src="{: { [1974,1975]" dest="{: { [2502,2503]"/>
  <match src="call_expression [6192,6218]" dest="call_expression [6720,6746]"/>
  <match src="primitive_type [28829,28836]" dest="primitive_type [46541,46548]"/>
  <match src="): ) [91913,91914]" dest="): ) [31299,31300]"/>
  <match src="member_expression [106163,106175]" dest="member_expression [69307,69319]"/>
  <match src="address: address [13679,13686]" dest="address: address [24980,24987]"/>
  <match src=".: . [30901,30902]" dest=".: . [48613,48614]"/>
  <match src="return_type_definition [95255,95272]" dest="return_type_definition [34641,34658]"/>
  <match src="address: address [103301,103308]" dest="address: address [42687,42694]"/>
  <match src="primitive_type [92864,92871]" dest="primitive_type [32250,32257]"/>
  <match src="primitive_type [47767,47774]" dest="primitive_type [60389,60396]"/>
  <match src="(: ( [54381,54382]" dest="(: ( [22505,22506]"/>
  <match src="block_statement [27890,28170]" dest="block_statement [45602,45882]"/>
  <match src="return_type_definition [12324,12341]" dest="return_type_definition [23625,23642]"/>
  <match src="bool: bool [96575,96579]" dest="bool: bool [35961,35965]"/>
  <match src="call_argument [454,460]" dest="call_argument [982,988]"/>
  <match src="{: { [34268,34269]" dest="{: { [51980,51981]"/>
  <match src="number_literal: 2 [10129,10130]" dest="number_literal: 2 [10657,10658]"/>
  <match src="parameter [8517,8528]" dest="parameter [9045,9056]"/>
  <match src="): ) [96552,96553]" dest="): ) [35938,35939]"/>
  <match src="visibility [89445,89452]" dest="visibility [76635,76642]"/>
  <match src="identifier: self [7869,7873]" dest="identifier: self [8397,8401]"/>
  <match src="identifier: _state [96051,96057]" dest="identifier: _state [35437,35443]"/>
  <match src="parameter [30710,30726]" dest="parameter [48422,48438]"/>
  <match src="type_name [12333,12340]" dest="type_name [23634,23641]"/>
  <match src="type_name [8263,8267]" dest="type_name [8791,8795]"/>
  <match src="identifier: Pool [78458,78462]" dest="identifier: Bonding [70181,70188]"/>
  <match src="(: ( [20063,20064]" dest="(: ( [64706,64707]"/>
  <match src="[: [ [99267,99268]" dest="[: [ [38653,38654]"/>
  <match src="uint256: uint256 [92426,92433]" dest="uint256: uint256 [31812,31819]"/>
  <match src="type_name [3435,3442]" dest="type_name [3963,3970]"/>
  <match src="identifier: candidates [87284,87294]" dest="identifier: candidates [29075,29085]"/>
  <match src="identifier: Decimal [90519,90526]" dest="identifier: Decimal [29905,29912]"/>
  <match src="): ) [44746,44747]" dest="): ) [14843,14844]"/>
  <match src="uint256: uint256 [102696,102703]" dest="uint256: uint256 [42082,42089]"/>
  <match src=".: . [103362,103363]" dest=".: . [42748,42749]"/>
  <match src="call_argument [6345,6346]" dest="call_argument [6873,6874]"/>
  <match src="}: } [29389,29390]" dest="}: } [47101,47102]"/>
  <match src="identifier: approve [103886,103893]" dest="identifier: approve [43272,43279]"/>
  <match src="uint256: uint256 [92042,92049]" dest="uint256: uint256 [31428,31435]"/>
  <match src="identifier: div [7163,7166]" dest="identifier: div [7691,7694]"/>
  <match src="): ) [78950,78951]" dest="): ) [82851,82852]"/>
  <match src="binary_expression [36672,36682]" dest="binary_expression [54384,54394]"/>
  <match src="{: { [29539,29540]" dest="{: { [47251,47252]"/>
  <match src="type_cast_expression [32192,32670]" dest="type_cast_expression [49904,50382]"/>
  <match src="type_name [92864,92871]" dest="type_name [32250,32257]"/>
  <match src="emit_statement [89205,89238]" dest="emit_statement [76395,76428]"/>
  <match src="parameter [52967,52980]" dest="parameter [21091,21104]"/>
  <match src="primitive_type [1264,1271]" dest="primitive_type [1792,1799]"/>
  <match src="(: ( [61813,61814]" dest="(: ( [26868,26869]"/>
  <match src="function_body [95768,95826]" dest="function_body [35154,35212]"/>
  <match src="return: return [85187,85193]" dest="return: return [74515,74521]"/>
  <match src="external: external [13449,13457]" dest="external: external [24750,24758]"/>
  <match src="(: ( [32849,32850]" dest="(: ( [50561,50562]"/>
  <match src="call_expression [9062,9080]" dest="call_expression [9590,9608]"/>
  <match src="type_name [355,362]" dest="type_name [883,890]"/>
  <match src="{: { [87058,87059]" dest="{: { [28849,28850]"/>
  <match src="primitive_type [52239,52245]" dest="primitive_type [20363,20369]"/>
  <match src="parameter [9128,9144]" dest="parameter [9656,9672]"/>
  <match src="return_statement [34601,34613]" dest="return_statement [52313,52325]"/>
  <match src="): ) [28631,28632]" dest="): ) [46343,46344]"/>
  <match src="return_statement [92687,92749]" dest="return_statement [32073,32135]"/>
  <match src="[: [ [104682,104683]" dest="[: [ [44068,44069]"/>
  <match src="parameter [96575,96579]" dest="parameter [35961,35965]"/>
  <match src="type_name [103301,103308]" dest="type_name [42687,42694]"/>
  <match src="identifier: reason [89186,89192]" dest="identifier: reason [76376,76382]"/>
  <match src="): ) [86704,86705]" dest="): ) [28495,28496]"/>
  <match src="address: address [19668,19675]" dest="address: address [63813,63820]"/>
  <match src="member_expression [98200,98214]" dest="member_expression [37586,37600]"/>
  <match src="function: function [53701,53709]" dest="function: function [21825,21833]"/>
  <match src=".: . [103018,103019]" dest=".: . [42404,42405]"/>
  <match src="identifier: GOVERNANCE_EXPIRATION [42297,42318]" dest="identifier: GOVERNANCE_EXPIRATION [12394,12415]"/>
  <match src=",: , [30752,30753]" dest=",: , [48464,48465]"/>
  <match src="(: ( [104172,104173]" dest="(: ( [43558,43559]"/>
  <match src="function: function [6014,6022]" dest="function: function [6542,6550]"/>
  <match src="uint256: uint256 [6824,6831]" dest="uint256: uint256 [7352,7359]"/>
  <match src="identifier: D256 [5955,5959]" dest="identifier: D256 [6483,6487]"/>
  <match src="member_expression [94962,94999]" dest="member_expression [34348,34385]"/>
  <match src="member_expression [99252,99288]" dest="member_expression [38638,38674]"/>
  <match src="state_mutability [96011,96015]" dest="state_mutability [35397,35401]"/>
  <match src=",: , [25902,25903]" dest=",: , [79239,79240]"/>
  <match src="bytes32: bytes32 [28783,28790]" dest="bytes32: bytes32 [46495,46502]"/>
  <match src="parameter [103708,103725]" dest="parameter [43094,43111]"/>
  <match src="array_access [93240,93275]" dest="array_access [32626,32661]"/>
  <match src="indexed: indexed [13665,13672]" dest="indexed: indexed [24966,24973]"/>
  <match src="identifier: account [106009,106016]" dest="identifier: account [69153,69160]"/>
  <match src="event_paramater [53444,53462]" dest="event_paramater [21568,21586]"/>
  <match src="identifier: D256 [7971,7975]" dest="identifier: D256 [8499,8503]"/>
  <match src="identifier: amount [98173,98179]" dest="identifier: amount [37559,37565]"/>
  <match src="(: ( [4065,4066]" dest="(: ( [4593,4594]"/>
  <match src="(: ( [6026,6027]" dest="(: ( [6554,6555]"/>
  <match src="call_expression [92600,92613]" dest="call_expression [31986,31999]"/>
  <match src="bool: bool [11978,11982]" dest="bool: bool [23279,23283]"/>
  <match src="identifier: FILE [48667,48671]" dest="identifier: FILE [62600,62604]"/>
  <match src="identifier: input [36566,36571]" dest="identifier: input [54278,54283]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [36820,36839]" dest="identifier: ASCII_RELATIVE_ZERO [54532,54551]"/>
  <match src="uint256: uint256 [9607,9614]" dest="uint256: uint256 [10135,10142]"/>
  <match src="identifier: D256 [9315,9319]" dest="identifier: D256 [9843,9847]"/>
  <match src=",: , [21084,21085]" dest=",: , [63188,63189]"/>
  <match src="): ) [53929,53930]" dest="): ) [22053,22054]"/>
  <match src="}: } [9263,9264]" dest="}: } [9791,9792]"/>
  <match src="uint: uint [52421,52425]" dest="uint: uint [20545,20549]"/>
  <match src="identifier: FILE [83560,83564]" dest="identifier: FILE [78328,78332]"/>
  <match src="identifier: that [105982,105986]" dest="identifier: that [69126,69130]"/>
  <match src="identifier: balanceOf [52441,52450]" dest="identifier: balanceOf [20565,20574]"/>
  <match src=".: . [98516,98517]" dest=".: . [37902,37903]"/>
  <match src="(: ( [77191,77192]" dest="(: ( [59451,59452]"/>
  <match src="): ) [80248,80249]" dest="): ) [71445,71446]"/>
  <match src="identifier: D256 [44340,44344]" dest="identifier: D256 [14437,14441]"/>
  <match src="call_argument [70390,70394]" dest="call_argument [58735,58739]"/>
  <match src="{: { [7976,7977]" dest="{: { [8504,8505]"/>
  <match src="member_expression [93305,93319]" dest="member_expression [32691,32705]"/>
  <match src="primitive_type [88928,88935]" dest="primitive_type [76118,76125]"/>
  <match src="identifier: approve [103625,103632]" dest="identifier: approve [43011,43018]"/>
  <match src="call_argument [41583,41625]" dest="call_argument [11680,11722]"/>
  <match src="): ) [9471,9472]" dest="): ) [9999,10000]"/>
  <match src="identifier: balance [91093,91100]" dest="identifier: balance [30479,30486]"/>
  <match src="address: address [92787,92794]" dest="address: address [32173,32180]"/>
  <match src="primitive_type [35966,35971]" dest="primitive_type [53678,53683]"/>
  <match src="member_expression [70363,70400]" dest="member_expression [58708,58778]"/>
  <match src="): ) [33104,33105]" dest="): ) [50816,50817]"/>
  <match src="parameter [53579,53583]" dest="parameter [21703,21707]"/>
  <match src="uint256: uint256 [16459,16466]" dest="uint256: uint256 [56676,56683]"/>
  <match src=".: . [102598,102599]" dest=".: . [41984,41985]"/>
  <match src="if: if [104626,104628]" dest="if: if [44012,44014]"/>
  <match src="=: = [103842,103843]" dest="=: = [43228,43229]"/>
  <match src="user_defined_type [9566,9570]" dest="user_defined_type [10094,10098]"/>
  <match src="function: function [43975,43983]" dest="function: function [14072,14080]"/>
  <match src="=: = [42670,42671]" dest="=: = [12767,12768]"/>
  <match src="uint256: uint256 [79312,79319]" dest="uint256: uint256 [70876,70883]"/>
  <match src="call_argument [34490,34511]" dest="call_argument [52202,52223]"/>
  <match src="}: } [6971,6972]" dest="}: } [7499,7500]"/>
  <match src="binary_expression [1353,1359]" dest="binary_expression [1881,1887]"/>
  <match src=",: , [105794,105795]" dest=",: , [68938,68939]"/>
  <match src="&quot;: &quot; [20465,20466]" dest="&quot;: &quot; [63099,63100]"/>
  <match src="expression_statement [101778,101836]" dest="expression_statement [41164,41222]"/>
  <match src=",: , [77492,77493]" dest=",: , [61648,61649]"/>
  <match src="identifier: value [5991,5996]" dest="identifier: value [6519,6524]"/>
  <match src="function_body [75605,75730]" dest="function_body [61112,61494]"/>
  <match src="identifier: univ2 [79379,79384]" dest="identifier: dollar [70941,70947]"/>
  <match src="identifier: msg [79468,79471]" dest="identifier: msg [71031,71034]"/>
  <match src="for_statement [7553,7632]" dest="for_statement [8081,8160]"/>
  <match src="uint256: uint256 [44033,44040]" dest="uint256: uint256 [14130,14137]"/>
  <match src="identifier: balance [91867,91874]" dest="identifier: balance [31253,31260]"/>
  <match src="primitive_type [45557,45564]" dest="primitive_type [15654,15661]"/>
  <match src="identifier: D256 [6721,6725]" dest="identifier: D256 [7249,7253]"/>
  <match src="member_expression [103398,103415]" dest="member_expression [42784,42801]"/>
  <match src="(: ( [95607,95608]" dest="(: ( [34993,34994]"/>
  <match src="primitive_type [103708,103715]" dest="primitive_type [43094,43101]"/>
  <match src="): ) [29139,29140]" dest="): ) [46851,46852]"/>
  <match src=".: . [103589,103590]" dest=".: . [42975,42976]"/>
  <match src="type_name [13679,13686]" dest="type_name [24980,24987]"/>
  <match src=",: , [32446,32447]" dest=",: , [50158,50159]"/>
  <match src="primitive_type [35012,35017]" dest="primitive_type [52724,52729]"/>
  <match src="{: { [94945,94946]" dest="{: { [34331,34332]"/>
  <match src="call_expression [6721,6763]" dest="call_expression [7249,7291]"/>
  <match src="identifier: value [7115,7120]" dest="identifier: value [7643,7648]"/>
  <match src="parameter [7185,7194]" dest="parameter [7713,7722]"/>
  <match src="&quot;: &quot; [80095,80096]" dest="&quot;: &quot; [81092,81093]"/>
  <match src="primitive_type [16459,16466]" dest="primitive_type [56676,56683]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [43625,43647]" dest="identifier: ORACLE_RESERVE_MINIMUM [13722,13744]"/>
  <match src="): ) [44040,44041]" dest="): ) [14137,14138]"/>
  <match src="(: ( [53484,53485]" dest="(: ( [21608,21609]"/>
  <match src="return_statement [93455,93498]" dest="return_statement [32841,32884]"/>
  <match src="struct_member [87148,87191]" dest="struct_member [28939,28982]"/>
  <match src="type_name [97569,97576]" dest="type_name [36955,36962]"/>
  <match src="identifier: i [33097,33098]" dest="identifier: i [50809,50810]"/>
  <match src="address: address [53632,53639]" dest="address: address [21756,21763]"/>
  <match src="type_name [78736,78743]" dest="type_name [70251,70258]"/>
  <match src="type_name [44033,44040]" dest="type_name [14130,14137]"/>
  <match src="identifier: _state [100599,100605]" dest="identifier: _state [39985,39991]"/>
  <match src="}: } [87300,87301]" dest="}: } [29091,29092]"/>
  <match src="expression_statement [34995,35035]" dest="expression_statement [52707,52747]"/>
  <match src="address: address [82865,82872]" dest="address: address [80860,80867]"/>
  <match src="): ) [80989,80990]" dest="): ) [72013,72014]"/>
  <match src="visibility [8120,8128]" dest="visibility [8648,8656]"/>
  <match src="identifier: account [78928,78935]" dest="identifier: account [82828,82835]"/>
  <match src="identifier: balanceOf [70372,70381]" dest="identifier: balanceOf [58717,58726]"/>
  <match src="{: { [43507,43508]" dest="{: { [13604,13605]"/>
  <match src="visibility [53609,53617]" dest="visibility [21733,21741]"/>
  <match src="identifier: _state [91860,91866]" dest="identifier: _state [31246,31252]"/>
  <match src="identifier: reject [96214,96220]" dest="identifier: reject [35600,35606]"/>
  <match src="type_name [11527,11534]" dest="type_name [22828,22835]"/>
  <match src=",: , [9313,9314]" dest=",: , [9841,9842]"/>
  <match src="identifier: implementation [106307,106321]" dest="identifier: implementation [69451,69465]"/>
  <match src="identifier: epoch [94769,94774]" dest="identifier: epoch [34155,34160]"/>
  <match src="variable_declaration_statement [94026,94116]" dest="variable_declaration_statement [33412,33502]"/>
  <match src="): ) [4073,4074]" dest="): ) [4601,4602]"/>
  <match src="type_name [54098,54102]" dest="type_name [22222,22226]"/>
  <match src="event: event [78957,78962]" dest="event: event [70552,70557]"/>
  <match src="type_name [65552,65559]" dest="type_name [72095,72102]"/>
  <match src="member_expression [79379,79399]" dest="member_expression [70941,70962]"/>
  <match src="visibility [54317,54325]" dest="visibility [22441,22449]"/>
  <match src="primitive_type [94007,94014]" dest="primitive_type [33393,33400]"/>
  <match src="call_argument [36716,36734]" dest="call_argument [54428,54446]"/>
  <match src="bytes: bytes [89036,89041]" dest="bytes: bytes [76226,76231]"/>
  <match src="primitive_type [38220,38227]" dest="primitive_type [63840,63847]"/>
  <match src="identifier: COLON [31701,31706]" dest="identifier: COLON [49413,49418]"/>
  <match src="parameter [7335,7351]" dest="parameter [7863,7879]"/>
  <match src="internal: internal [1702,1710]" dest="internal: internal [2230,2238]"/>
  <match src=",: , [8393,8394]" dest=",: , [8921,8922]"/>
  <match src="}: } [64146,64147]" dest="}: } [67992,67993]"/>
  <match src="parameter [77369,77385]" dest="parameter [17581,17598]"/>
  <match src="yul_evm_builtin [85156,85167]" dest="yul_evm_builtin [74484,74495]"/>
  <match src="identifier: b [6951,6952]" dest="identifier: b [7479,7480]"/>
  <match src="identifier: self [9633,9637]" dest="identifier: self [10161,10165]"/>
  <match src="any_pragma_token [68,93]" dest="any_pragma_token [32,57]"/>
  <match src="identifier: Decimal [44849,44856]" dest="identifier: Decimal [14946,14953]"/>
  <match src="parameter [104447,104464]" dest="parameter [43833,43850]"/>
  <match src="function: function [342,350]" dest="function: function [870,878]"/>
  <match src="identifier: self [8967,8971]" dest="identifier: self [9495,9499]"/>
  <match src="constant: constant [27448,27456]" dest="constant: constant [45160,45168]"/>
  <match src="parameter [6257,6266]" dest="parameter [6785,6794]"/>
  <match src="identifier: spender [102127,102134]" dest="identifier: spender [41513,41520]"/>
  <match src="function: function [95505,95513]" dest="function: function [34891,34899]"/>
  <match src="call_expression [80411,80618]" dest="call_expression [71545,71682]"/>
  <match src="identifier: sub [6785,6788]" dest="identifier: sub [7313,7316]"/>
  <match src="member_expression [6936,6950]" dest="member_expression [7464,7478]"/>
  <match src="return_type_definition [9026,9040]" dest="return_type_definition [9554,9568]"/>
  <match src="parameter [3312,3319]" dest="parameter [3840,3847]"/>
  <match src="string_literal [48810,48819]" dest="string_literal [55794,55836]"/>
  <match src="address: address [100511,100518]" dest="address: address [39897,39904]"/>
  <match src="variable_declaration_statement [2017,2035]" dest="variable_declaration_statement [2545,2563]"/>
  <match src="function_definition [54331,54356]" dest="function_definition [22455,22480]"/>
  <match src="identifier: getGovernanceExpiration [44506,44529]" dest="identifier: getGovernanceExpiration [14603,14626]"/>
  <match src="indexed: indexed [53225,53232]" dest="indexed: indexed [21349,21356]"/>
  <match src="call_expression [27998,28022]" dest="call_expression [45710,45734]"/>
  <match src=".: . [99650,99651]" dest=".: . [39036,39037]"/>
  <match src="expression_statement [80878,80893]" dest="expression_statement [56359,56374]"/>
  <match src="}: } [7315,7316]" dest="}: } [7843,7844]"/>
  <match src="parameter [6052,6063]" dest="parameter [6580,6591]"/>
  <match src="&lt;: &lt; [36119,36120]" dest="&lt;: &lt; [53831,53832]"/>
  <match src="identifier: reason [32016,32022]" dest="identifier: reason [49728,49734]"/>
  <match src="identifier: RPAREN [31861,31867]" dest="identifier: RPAREN [49573,49579]"/>
  <match src=".: . [83524,83525]" dest=".: . [78295,78296]"/>
  <match src="function_body [95628,95695]" dest="function_body [35014,35081]"/>
  <match src="function_definition [2581,2711]" dest="function_definition [3109,3239]"/>
  <match src="identifier: getPartial [6334,6344]" dest="identifier: getPartial [6862,6872]"/>
  <match src="return_type_definition [93560,93577]" dest="return_type_definition [32946,32963]"/>
  <match src="): ) [36463,36464]" dest="): ) [54175,54176]"/>
  <match src="primitive_type [400,407]" dest="primitive_type [928,935]"/>
  <match src=".: . [102291,102292]" dest=".: . [41677,41678]"/>
  <match src="(: ( [52139,52140]" dest="(: ( [20263,20264]"/>
  <match src="identifier: setup [107466,107471]" dest="identifier: capture [67776,67783]"/>
  <match src="type_name [34653,34660]" dest="type_name [52365,52372]"/>
  <match src="identifier: totalSupply [11490,11501]" dest="identifier: totalSupply [22791,22802]"/>
  <match src="identifier: block [94563,94568]" dest="identifier: block [33949,33954]"/>
  <match src="!=: != [51066,51068]" dest="!=: != [64456,64458]"/>
  <match src="primitive_type [86919,86926]" dest="primitive_type [28710,28717]"/>
  <match src="identifier: amount [74901,74907]" dest="identifier: amount [62374,62380]"/>
  <match src="call_expression [77166,77186]" dest="call_expression [59438,59446]"/>
  <match src="visibility [92827,92833]" dest="visibility [32213,32219]"/>
  <match src="user_defined_type [103353,103367]" dest="user_defined_type [42739,42753]"/>
  <match src="uint256: uint256 [104553,104560]" dest="uint256: uint256 [43939,43946]"/>
  <match src="call_argument [31609,31889]" dest="call_argument [49321,49601]"/>
  <match src="return_statement [6536,6586]" dest="return_statement [7064,7114]"/>
  <match src="type_name [34114,34119]" dest="type_name [51826,51831]"/>
  <match src="=: = [102059,102060]" dest="=: = [41445,41446]"/>
  <match src="=: = [98222,98223]" dest="=: = [37608,37609]"/>
  <match src="call_argument [6211,6215]" dest="call_argument [6739,6743]"/>
  <match src="identifier: z [35492,35493]" dest="identifier: z [53204,53205]"/>
  <match src="type_name [54391,54398]" dest="type_name [22515,22522]"/>
  <match src="type_name [100190,100197]" dest="type_name [39576,39583]"/>
  <match src="type_name [52937,52944]" dest="type_name [21061,21068]"/>
  <match src="primitive_type [71512,71519]" dest="primitive_type [66730,66737]"/>
  <match src="comment: // 20% [42381,42387]" dest="comment: // 20% [12478,12484]"/>
  <match src="call_struct_argument [46184,46217]" dest="call_struct_argument [16281,16314]"/>
  <match src="type_name [82865,82872]" dest="type_name [80860,80867]"/>
  <match src="type_name [53503,53510]" dest="type_name [21627,21634]"/>
  <match src=".: . [95813,95814]" dest=".: . [35199,35200]"/>
  <match src="identifier: D256 [7697,7701]" dest="identifier: D256 [8225,8229]"/>
  <match src="): ) [9614,9615]" dest="): ) [10142,10143]"/>
</matches>
<actions>
  <move-tree tree="comment: // SPDX-License-Identifier: apache [0,34]" parent="source_file [0,83432]" at="2"/>
  <move-tree tree="interface_declaration [52014,54411]" parent="source_file [0,83432]" at="29"/>
  <move-tree tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [10145,10644]" parent="source_file [0,83432]" at="29"/>
  <move-tree tree="interface_declaration [11387,13953]" parent="source_file [0,83432]" at="29"/>
  <move-tree tree="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [61095,61775]" parent="source_file [0,83432]" at="47"/>
  <move-tree tree="contract_declaration [85894,86185]" parent="source_file [0,83432]" at="48"/>
  <move-tree tree="contract_declaration [86187,86491]" parent="source_file [0,83432]" at="49"/>
  <move-tree tree="contract_declaration [86493,86746]" parent="source_file [0,83432]" at="50"/>
  <move-tree tree="contract_declaration [86748,87303]" parent="source_file [0,83432]" at="51"/>
  <move-tree tree="contract_declaration [87305,87349]" parent="source_file [0,83432]" at="52"/>
  <move-tree tree="contract_declaration [90437,96826]" parent="source_file [0,83432]" at="54"/>
  <move-tree tree="contract_declaration [97509,104851]" parent="source_file [0,83432]" at="57"/>
  <move-tree tree="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [11236,11386]" parent="source_file [0,83432]" at="57"/>
  <move-tree tree="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [13955,14518]" parent="source_file [0,83432]" at="57"/>
  <move-tree tree="library_declaration [27269,36850]" parent="source_file [0,83432]" at="57"/>
  <move-tree tree="contract_declaration [15673,22496]" parent="source_file [0,83432]" at="63"/>
  <move-tree tree="contract_declaration [62630,66580]" parent="source_file [0,83432]" at="65"/>
  <move-tree tree="contract_declaration [105534,106345]" parent="source_file [0,83432]" at="68"/>
  <update-node tree="comment: // SPDX-License-Identifier: apache [0,34]" label="/**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */"/>
  <insert-node tree="contract_declaration [17421,20136]" parent="source_file [0,83432]" at="10"/>
  <update-node tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [10145,10644]" label="/**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */"/>
  <update-node tree="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [11236,11386]" label="/*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [13955,14518]" label="/**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */"/>
  <insert-node tree="contract_declaration [55245,59550]" parent="source_file [0,83432]" at="32"/>
  <insert-node tree="contract_declaration [77627,81923]" parent="source_file [0,83432]" at="47"/>
  <insert-node tree="contract_declaration [82606,83432]" parent="source_file [0,83432]" at="49"/>
  <insert-node tree="contract: contract [17421,17429]" parent="contract_declaration [17421,20136]" at="0"/>
  <insert-node tree="identifier: Curve [17430,17435]" parent="contract_declaration [17421,20136]" at="1"/>
  <insert-node tree="contract_body [17436,20136]" parent="contract_declaration [17421,20136]" at="2"/>
  <insert-node tree="contract: contract [55245,55253]" parent="contract_declaration [55245,59550]" at="0"/>
  <insert-node tree="identifier: Comptroller [55254,55265]" parent="contract_declaration [55245,59550]" at="1"/>
  <insert-node tree="is: is [55266,55268]" parent="contract_declaration [55245,59550]" at="2"/>
  <insert-tree tree="inheritance_specifier [55269,55276]" parent="contract_declaration [55245,59550]" at="3"/>
  <insert-node tree="contract_body [55277,59550]" parent="contract_declaration [55245,59550]" at="4"/>
  <update-node tree="identifier: ERC20 [15682,15687]" label="Market"/>
  <move-tree tree="function_definition [19633,20097]" parent="contract_body [60271,64749]" at="28"/>
  <update-node tree="identifier: Oracle [62639,62645]" label="Regulator"/>
  <move-tree tree="function_definition [63905,64147]" parent="contract_body [65466,67995]" at="18"/>
  <update-node tree="identifier: Pool [78458,78462]" label="Bonding"/>
  <move-tree tree="inheritance_specifier [107312,107322]" parent="contract_declaration [70172,73020]" at="5"/>
  <move-tree tree="event_definition [78957,79023]" parent="contract_body [70212,73020]" at="8"/>
  <insert-node tree="contract: contract [77627,77635]" parent="contract_declaration [77627,81923]" at="0"/>
  <insert-node tree="identifier: Govern [77636,77642]" parent="contract_declaration [77627,81923]" at="1"/>
  <insert-node tree="is: is [77643,77645]" parent="contract_declaration [77627,81923]" at="2"/>
  <insert-tree tree="inheritance_specifier [77646,77653]" parent="contract_declaration [77627,81923]" at="3"/>
  <insert-node tree=",: , [77653,77654]" parent="contract_declaration [77627,81923]" at="4"/>
  <move-tree tree="inheritance_specifier [107054,107064]" parent="contract_declaration [77627,81923]" at="5"/>
  <insert-node tree=",: , [77665,77666]" parent="contract_declaration [77627,81923]" at="6"/>
  <move-tree tree="inheritance_specifier [107066,107077]" parent="contract_declaration [77627,81923]" at="7"/>
  <insert-node tree="contract_body [77679,81923]" parent="contract_declaration [77627,81923]" at="8"/>
  <insert-node tree="contract: contract [82606,82614]" parent="contract_declaration [82606,83432]" at="0"/>
  <insert-node tree="identifier: Implementation [82615,82629]" parent="contract_declaration [82606,83432]" at="1"/>
  <insert-node tree="is: is [82630,82632]" parent="contract_declaration [82606,83432]" at="2"/>
  <move-tree tree="inheritance_specifier [107047,107052]" parent="contract_declaration [82606,83432]" at="3"/>
  <insert-node tree=",: , [82638,82639]" parent="contract_declaration [82606,83432]" at="4"/>
  <insert-tree tree="inheritance_specifier [82640,82647]" parent="contract_declaration [82606,83432]" at="5"/>
  <insert-node tree=",: , [82647,82648]" parent="contract_declaration [82606,83432]" at="6"/>
  <insert-tree tree="inheritance_specifier [82649,82655]" parent="contract_declaration [82606,83432]" at="7"/>
  <insert-node tree=",: , [82655,82656]" parent="contract_declaration [82606,83432]" at="8"/>
  <insert-tree tree="inheritance_specifier [82657,82666]" parent="contract_declaration [82606,83432]" at="9"/>
  <insert-node tree=",: , [82666,82667]" parent="contract_declaration [82606,83432]" at="10"/>
  <insert-tree tree="inheritance_specifier [82668,82674]" parent="contract_declaration [82606,83432]" at="11"/>
  <insert-node tree="contract_body [82675,83432]" parent="contract_declaration [82606,83432]" at="12"/>
  <insert-node tree="{: { [17436,17437]" parent="contract_body [17436,20136]" at="0"/>
  <insert-tree tree="using_directive [17442,17469]" parent="contract_body [17436,20136]" at="1"/>
  <insert-tree tree="using_directive [17474,17505]" parent="contract_body [17436,20136]" at="2"/>
  <insert-node tree="function_definition [17511,17803]" parent="contract_body [17436,20136]" at="3"/>
  <insert-node tree="function_definition [17809,19267]" parent="contract_body [17436,20136]" at="4"/>
  <insert-node tree="comment: // 1/(3(1-R)^2)-1/3 [19273,19292]" parent="contract_body [17436,20136]" at="5"/>
  <insert-node tree="function_definition [19297,19603]" parent="contract_body [17436,20136]" at="6"/>
  <insert-node tree="comment: // 1/(3(1-R)(1-R'))-1/3 [19609,19632]" parent="contract_body [17436,20136]" at="7"/>
  <insert-node tree="function_definition [19637,20134]" parent="contract_body [17436,20136]" at="8"/>
  <insert-node tree="}: } [20135,20136]" parent="contract_body [17436,20136]" at="9"/>
  <insert-node tree="{: { [55277,55278]" parent="contract_body [55277,59550]" at="0"/>
  <move-tree tree="using_directive [69413,69440]" parent="contract_body [55277,59550]" at="1"/>
  <insert-tree tree="state_variable_declaration [55316,55362]" parent="contract_body [55277,59550]" at="2"/>
  <move-tree tree="function_definition [50675,50843]" parent="contract_body [55277,59550]" at="3"/>
  <insert-node tree="function_definition [55596,55869]" parent="contract_body [55277,59550]" at="4"/>
  <move-tree tree="function_definition [22995,23096]" parent="contract_body [55277,59550]" at="5"/>
  <move-tree tree="function_definition [20988,21330]" parent="contract_body [55277,59550]" at="6"/>
  <insert-node tree="function_definition [56386,56648]" parent="contract_body [55277,59550]" at="7"/>
  <insert-node tree="function_definition [56654,56801]" parent="contract_body [55277,59550]" at="8"/>
  <insert-node tree="function_definition [56807,58167]" parent="contract_body [55277,59550]" at="9"/>
  <insert-node tree="function_definition [58173,58634]" parent="contract_body [55277,59550]" at="10"/>
  <move-tree tree="function_definition [70291,70425]" parent="contract_body [55277,59550]" at="11"/>
  <move-tree tree="function_definition [83053,83284]" parent="contract_body [55277,59550]" at="12"/>
  <insert-node tree="function_definition [59078,59208]" parent="contract_body [55277,59550]" at="13"/>
  <insert-node tree="function_definition [59214,59372]" parent="contract_body [55277,59550]" at="14"/>
  <insert-node tree="function_definition [59378,59548]" parent="contract_body [55277,59550]" at="15"/>
  <insert-node tree="}: } [59549,59550]" parent="contract_body [55277,59550]" at="16"/>
  <move-tree tree="state_variable_declaration [62700,62741]" parent="contract_body [60271,64749]" at="2"/>
  <insert-node tree="event_definition [60357,60534]" parent="contract_body [60271,64749]" at="3"/>
  <insert-node tree="event_definition [60539,60690]" parent="contract_body [60271,64749]" at="4"/>
  <move-tree tree="event_definition [25636,25679]" parent="contract_body [60271,64749]" at="5"/>
  <move-tree tree="event_definition [51412,51498]" parent="contract_body [60271,64749]" at="6"/>
  <move-tree tree=",: , [51490,51491]" parent="event_definition [60823,60962]" at="9"/>
  <insert-node tree="event_definition [60967,61081]" parent="contract_body [60271,64749]" at="7"/>
  <move-tree tree="function_definition [75561,75730]" parent="contract_body [60271,64749]" at="8"/>
  <insert-node tree="function_definition [61500,62210]" parent="contract_body [60271,64749]" at="9"/>
  <move-tree tree="function_definition [66392,66475]" parent="contract_body [60271,64749]" at="10"/>
  <insert-node tree="function_definition [62394,62969]" parent="contract_body [60271,64749]" at="11"/>
  <insert-node tree="function_definition [62975,63429]" parent="contract_body [60271,64749]" at="12"/>
  <move-tree tree=",: , [21786,21787]" parent="function_definition [63435,63749]" at="5"/>
  <insert-tree tree="using_directive [65472,65499]" parent="contract_body [65466,67995]" at="1"/>
  <insert-node tree="event_definition [65541,65706]" parent="contract_body [65466,67995]" at="3"/>
  <insert-node tree="event_definition [65711,65787]" parent="contract_body [65466,67995]" at="4"/>
  <insert-node tree="event_definition [65792,65835]" parent="contract_body [65466,67995]" at="5"/>
  <insert-node tree="function_definition [65841,66183]" parent="contract_body [65466,67995]" at="6"/>
  <insert-node tree="function_definition [66189,66528]" parent="contract_body [65466,67995]" at="7"/>
  <move-tree tree="function_definition [71091,71733]" parent="contract_body [65466,67995]" at="23"/>
  <insert-node tree="function_definition [70689,70853]" parent="contract_body [70212,73020]" at="7"/>
  <insert-node tree="function_definition [72487,73018]" parent="contract_body [70212,73020]" at="12"/>
  <insert-node tree="{: { [77679,77680]" parent="contract_body [77679,81923]" at="0"/>
  <insert-tree tree="using_directive [77685,77712]" parent="contract_body [77679,81923]" at="1"/>
  <insert-tree tree="using_directive [77717,77748]" parent="contract_body [77679,81923]" at="2"/>
  <insert-tree tree="state_variable_declaration [77754,77795]" parent="contract_body [77679,81923]" at="3"/>
  <insert-node tree="event_definition [77801,77945]" parent="contract_body [77679,81923]" at="4"/>
  <insert-node tree="event_definition [77950,78088]" parent="contract_body [77679,81923]" at="5"/>
  <move-tree tree="event_definition [79161,79289]" parent="contract_body [77679,81923]" at="6"/>
  <insert-node tree="function_definition [78164,79914]" parent="contract_body [77679,81923]" at="7"/>
  <move-tree tree="function_definition [81911,82832]" parent="contract_body [77679,81923]" at="8"/>
  <insert-node tree="function_definition [80835,81574]" parent="contract_body [77679,81923]" at="9"/>
  <insert-node tree="function_definition [81580,81921]" parent="contract_body [77679,81923]" at="10"/>
  <insert-node tree="}: } [81922,81923]" parent="contract_body [77679,81923]" at="11"/>
  <insert-node tree="{: { [82675,82676]" parent="contract_body [82675,83432]" at="0"/>
  <move-tree tree="using_directive [72872,72899]" parent="contract_body [82675,83432]" at="1"/>
  <insert-node tree="event_definition [82714,82785]" parent="contract_body [82675,83432]" at="2"/>
  <move-tree tree="event_definition [78900,78952]" parent="contract_body [82675,83432]" at="3"/>
  <insert-node tree="function_definition [82859,83024]" parent="contract_body [82675,83432]" at="4"/>
  <insert-node tree="function_definition [83030,83268]" parent="contract_body [82675,83432]" at="5"/>
  <insert-node tree="function_definition [83274,83430]" parent="contract_body [82675,83432]" at="6"/>
  <insert-node tree="}: } [83431,83432]" parent="contract_body [82675,83432]" at="7"/>
  <insert-node tree="function: function [17511,17519]" parent="function_definition [17511,17803]" at="0"/>
  <insert-node tree="identifier: calculateCouponPremium [17520,17542]" parent="function_definition [17511,17803]" at="1"/>
  <insert-node tree="(: ( [17542,17543]" parent="function_definition [17511,17803]" at="2"/>
  <move-tree tree="parameter [77351,77367]" parent="function_definition [17511,17803]" at="3"/>
  <insert-node tree=",: , [17571,17572]" parent="function_definition [17511,17803]" at="4"/>
  <move-tree tree="parameter [77369,77385]" parent="function_definition [17511,17803]" at="5"/>
  <insert-node tree=",: , [17598,17599]" parent="function_definition [17511,17803]" at="6"/>
  <move-tree tree="parameter [22871,22885]" parent="function_definition [17511,17803]" at="7"/>
  <insert-node tree="): ) [17627,17628]" parent="function_definition [17511,17803]" at="8"/>
  <move-tree tree="visibility [77312,77320]" parent="function_definition [17511,17803]" at="9"/>
  <move-tree tree="state_mutability [54611,54615]" parent="function_definition [17511,17803]" at="10"/>
  <move-tree tree="return_type_definition [15999,16016]" parent="function_definition [17511,17803]" at="11"/>
  <insert-node tree="function_body [17661,17803]" parent="function_definition [17511,17803]" at="12"/>
  <insert-node tree="function: function [17809,17817]" parent="function_definition [17809,19267]" at="0"/>
  <insert-node tree="identifier: effectivePremium [17818,17834]" parent="function_definition [17809,19267]" at="1"/>
  <insert-node tree="(: ( [17834,17835]" parent="function_definition [17809,19267]" at="2"/>
  <move-tree tree="parameter [18945,18968]" parent="function_definition [17809,19267]" at="3"/>
  <insert-node tree=",: , [17863,17864]" parent="function_definition [17809,19267]" at="4"/>
  <move-tree tree="parameter [18251,18269]" parent="function_definition [17809,19267]" at="5"/>
  <insert-node tree=",: , [17890,17891]" parent="function_definition [17809,19267]" at="6"/>
  <move-tree tree="parameter [23030,23044]" parent="function_definition [17809,19267]" at="7"/>
  <insert-node tree="): ) [17919,17920]" parent="function_definition [17809,19267]" at="8"/>
  <move-tree tree="visibility [15849,15856]" parent="function_definition [17809,19267]" at="9"/>
  <move-tree tree="state_mutability [55477,55481]" parent="function_definition [17809,19267]" at="10"/>
  <insert-tree tree="return_type_definition [17934,17963]" parent="function_definition [17809,19267]" at="11"/>
  <insert-node tree="function_body [17964,19267]" parent="function_definition [17809,19267]" at="12"/>
  <insert-node tree="function: function [19297,19305]" parent="function_definition [19297,19603]" at="0"/>
  <insert-node tree="identifier: curve [19306,19311]" parent="function_definition [19297,19603]" at="1"/>
  <insert-node tree="(: ( [19311,19312]" parent="function_definition [19297,19603]" at="2"/>
  <move-tree tree="parameter [63948,63967]" parent="function_definition [19297,19603]" at="3"/>
  <insert-node tree="): ) [19341,19342]" parent="function_definition [19297,19603]" at="4"/>
  <move-tree tree="visibility [15883,15890]" parent="function_definition [19297,19603]" at="5"/>
  <move-tree tree="state_mutability [39792,39796]" parent="function_definition [19297,19603]" at="6"/>
  <insert-tree tree="return_type_definition [19380,19409]" parent="function_definition [19297,19603]" at="7"/>
  <insert-tree tree="function_body [19414,19603]" parent="function_definition [19297,19603]" at="8"/>
  <insert-node tree="function: function [19637,19645]" parent="function_definition [19637,20134]" at="0"/>
  <insert-node tree="identifier: curveMean [19646,19655]" parent="function_definition [19637,20134]" at="1"/>
  <insert-node tree="(: ( [19655,19656]" parent="function_definition [19637,20134]" at="2"/>
  <move-tree tree="parameter [64805,64824]" parent="function_definition [19637,20134]" at="3"/>
  <insert-node tree=",: , [19681,19682]" parent="function_definition [19637,20134]" at="4"/>
  <insert-tree tree="parameter [19683,19708]" parent="function_definition [19637,20134]" at="5"/>
  <insert-node tree="): ) [19708,19709]" parent="function_definition [19637,20134]" at="6"/>
  <move-tree tree="visibility [64788,64795]" parent="function_definition [19637,20134]" at="7"/>
  <move-tree tree="state_mutability [38294,38298]" parent="function_definition [19637,20134]" at="8"/>
  <insert-tree tree="return_type_definition [19747,19776]" parent="function_definition [19637,20134]" at="9"/>
  <insert-tree tree="function_body [19781,20134]" parent="function_definition [19637,20134]" at="10"/>
  <update-node tree="identifier: mint [50684,50688]" label="mintToAccount"/>
  <move-tree tree="visibility [10930,10938]" parent="function_definition [55368,55590]" at="7"/>
  <insert-node tree="function: function [55596,55604]" parent="function_definition [55596,55869]" at="0"/>
  <insert-node tree="identifier: burnFromAccount [55605,55620]" parent="function_definition [55596,55869]" at="1"/>
  <insert-node tree="(: ( [55620,55621]" parent="function_definition [55596,55869]" at="2"/>
  <move-tree tree="parameter [26111,26126]" parent="function_definition [55596,55869]" at="3"/>
  <insert-node tree=",: , [55636,55637]" parent="function_definition [55596,55869]" at="4"/>
  <move-tree tree="parameter [50931,50945]" parent="function_definition [55596,55869]" at="5"/>
  <insert-node tree="): ) [55652,55653]" parent="function_definition [55596,55869]" at="6"/>
  <move-tree tree="visibility [26436,26444]" parent="function_definition [55596,55869]" at="7"/>
  <move-tree tree="function_body [47810,48000]" parent="function_definition [55596,55869]" at="8"/>
  <update-node tree="identifier: burnFrom [23004,23012]" label="redeemToAccount"/>
  <move-tree tree="parameter [25997,26012]" parent="function_definition [55875,56140]" at="3"/>
  <move-tree tree="parameter [73088,73102]" parent="function_definition [55875,56140]" at="6"/>
  <move-tree tree="visibility [73112,73120]" parent="function_definition [55875,56140]" at="8"/>
  <update-node tree="identifier: _burn [20997,21002]" label="burnRedeemable"/>
  <move-tree tree="expression_statement [21133,21223]" parent="function_body [56195,56380]" at="3"/>
  <insert-node tree="function: function [56386,56394]" parent="function_definition [56386,56648]" at="0"/>
  <insert-node tree="identifier: increaseDebt [56395,56407]" parent="function_definition [56386,56648]" at="1"/>
  <insert-node tree="(: ( [56407,56408]" parent="function_definition [56386,56648]" at="2"/>
  <move-tree tree="parameter [73710,73724]" parent="function_definition [56386,56648]" at="3"/>
  <insert-node tree="): ) [56422,56423]" parent="function_definition [56386,56648]" at="4"/>
  <move-tree tree="visibility [73734,73742]" parent="function_definition [56386,56648]" at="5"/>
  <move-tree tree="return_type_definition [16159,16176]" parent="function_definition [56386,56648]" at="6"/>
  <insert-node tree="function_body [56451,56648]" parent="function_definition [56386,56648]" at="7"/>
  <insert-node tree="function: function [56654,56662]" parent="function_definition [56654,56801]" at="0"/>
  <insert-node tree="identifier: decreaseDebt [56663,56675]" parent="function_definition [56654,56801]" at="1"/>
  <insert-node tree="(: ( [56675,56676]" parent="function_definition [56654,56801]" at="2"/>
  <move-tree tree="parameter [16459,16473]" parent="function_definition [56654,56801]" at="3"/>
  <insert-node tree="): ) [56690,56691]" parent="function_definition [56654,56801]" at="4"/>
  <move-tree tree="visibility [19703,19711]" parent="function_definition [56654,56801]" at="5"/>
  <insert-node tree="function_body [56701,56801]" parent="function_definition [56654,56801]" at="6"/>
  <insert-node tree="function: function [56807,56815]" parent="function_definition [56807,58167]" at="0"/>
  <insert-node tree="identifier: increaseSupply [56816,56830]" parent="function_definition [56807,58167]" at="1"/>
  <insert-node tree="(: ( [56830,56831]" parent="function_definition [56807,58167]" at="2"/>
  <move-tree tree="parameter [48102,48118]" parent="function_definition [56807,58167]" at="3"/>
  <insert-node tree="): ) [56848,56849]" parent="function_definition [56807,58167]" at="4"/>
  <move-tree tree="visibility [76622,76630]" parent="function_definition [56807,58167]" at="5"/>
  <move-tree tree="return_type_definition [76639,76665]" parent="function_definition [56807,58167]" at="6"/>
  <insert-node tree="function_body [56906,58167]" parent="function_definition [56807,58167]" at="7"/>
  <insert-node tree="function: function [58173,58181]" parent="function_definition [58173,58634]" at="0"/>
  <insert-node tree="identifier: resetDebt [58182,58191]" parent="function_definition [58173,58634]" at="1"/>
  <insert-node tree="(: ( [58191,58192]" parent="function_definition [58173,58634]" at="2"/>
  <insert-tree tree="parameter [58192,58227]" parent="function_definition [58173,58634]" at="3"/>
  <insert-node tree="): ) [58227,58228]" parent="function_definition [58173,58634]" at="4"/>
  <move-tree tree="visibility [26308,26316]" parent="function_definition [58173,58634]" at="5"/>
  <move-tree tree="return_type_definition [16698,16715]" parent="function_definition [58173,58634]" at="6"/>
  <insert-node tree="function_body [58276,58634]" parent="function_definition [58173,58634]" at="7"/>
  <update-node tree="identifier: totalRewarded [70300,70313]" label="balanceCheck"/>
  <move-tree tree="visibility [83077,83084]" parent="function_definition [58640,58888]" at="4"/>
  <update-node tree="identifier: balanceCheck [83062,83074]" label="mintToDAO"/>
  <move-tree tree="parameter [22301,22315]" parent="function_definition [58894,59072]" at="3"/>
  <move-tree tree="visibility [25746,25753]" parent="function_definition [58894,59072]" at="5"/>
  <insert-node tree="function: function [59078,59086]" parent="function_definition [59078,59208]" at="0"/>
  <insert-node tree="identifier: mintToPool [59087,59097]" parent="function_definition [59078,59208]" at="1"/>
  <insert-node tree="(: ( [59097,59098]" parent="function_definition [59078,59208]" at="2"/>
  <move-tree tree="parameter [20399,20413]" parent="function_definition [59078,59208]" at="3"/>
  <insert-node tree="): ) [59112,59113]" parent="function_definition [59078,59208]" at="4"/>
  <move-tree tree="visibility [23259,23266]" parent="function_definition [59078,59208]" at="5"/>
  <insert-node tree="function_body [59122,59208]" parent="function_definition [59078,59208]" at="6"/>
  <insert-node tree="function: function [59214,59222]" parent="function_definition [59214,59372]" at="0"/>
  <insert-node tree="identifier: mintToTreasury [59223,59237]" parent="function_definition [59214,59372]" at="1"/>
  <insert-node tree="(: ( [59237,59238]" parent="function_definition [59214,59372]" at="2"/>
  <move-tree tree="parameter [16939,16953]" parent="function_definition [59214,59372]" at="3"/>
  <insert-node tree="): ) [59252,59253]" parent="function_definition [59214,59372]" at="4"/>
  <move-tree tree="visibility [23232,23239]" parent="function_definition [59214,59372]" at="5"/>
  <insert-node tree="function_body [59262,59372]" parent="function_definition [59214,59372]" at="6"/>
  <insert-node tree="function: function [59378,59386]" parent="function_definition [59378,59548]" at="0"/>
  <insert-node tree="identifier: mintToRedeemable [59387,59403]" parent="function_definition [59378,59548]" at="1"/>
  <insert-node tree="(: ( [59403,59404]" parent="function_definition [59378,59548]" at="2"/>
  <move-tree tree="parameter [17569,17583]" parent="function_definition [59378,59548]" at="3"/>
  <insert-node tree="): ) [59418,59419]" parent="function_definition [59378,59548]" at="4"/>
  <move-tree tree="visibility [15775,15782]" parent="function_definition [59378,59548]" at="5"/>
  <insert-node tree="function_body [59428,59548]" parent="function_definition [59378,59548]" at="6"/>
  <update-node tree="identifier: Context [15691,15698]" label="Comptroller"/>
  <update-node tree="identifier: IERC20 [15700,15706]" label="Curve"/>
  <insert-node tree="event: event [60357,60362]" parent="event_definition [60357,60534]" at="0"/>
  <insert-node tree="identifier: CouponExpiration [60363,60379]" parent="event_definition [60357,60534]" at="1"/>
  <insert-node tree="(: ( [60379,60380]" parent="event_definition [60357,60534]" at="2"/>
  <insert-node tree="event_paramater [60389,60410]" parent="event_definition [60357,60534]" at="3"/>
  <insert-node tree=",: , [60410,60411]" parent="event_definition [60357,60534]" at="4"/>
  <insert-node tree="event_paramater [60420,60442]" parent="event_definition [60357,60534]" at="5"/>
  <insert-node tree=",: , [60442,60443]" parent="event_definition [60357,60534]" at="6"/>
  <insert-tree tree="event_paramater [60452,60474]" parent="event_definition [60357,60534]" at="7"/>
  <insert-node tree=",: , [60474,60475]" parent="event_definition [60357,60534]" at="8"/>
  <insert-tree tree="event_paramater [60484,60500]" parent="event_definition [60357,60534]" at="9"/>
  <insert-node tree=",: , [60500,60501]" parent="event_definition [60357,60534]" at="10"/>
  <insert-tree tree="event_paramater [60510,60527]" parent="event_definition [60357,60534]" at="11"/>
  <insert-node tree="): ) [60532,60533]" parent="event_definition [60357,60534]" at="12"/>
  <insert-node tree="event: event [60539,60544]" parent="event_definition [60539,60690]" at="0"/>
  <insert-node tree="identifier: CouponPurchase [60545,60559]" parent="event_definition [60539,60690]" at="1"/>
  <insert-node tree="(: ( [60559,60560]" parent="event_definition [60539,60690]" at="2"/>
  <move-tree tree="event_paramater [25704,25727]" parent="event_definition [60539,60690]" at="3"/>
  <insert-node tree=",: , [60592,60593]" parent="event_definition [60539,60690]" at="4"/>
  <insert-node tree="event_paramater [60602,60623]" parent="event_definition [60539,60690]" at="5"/>
  <insert-node tree=",: , [60623,60624]" parent="event_definition [60539,60690]" at="6"/>
  <insert-tree tree="event_paramater [60633,60653]" parent="event_definition [60539,60690]" at="7"/>
  <insert-node tree=",: , [60653,60654]" parent="event_definition [60539,60690]" at="8"/>
  <insert-tree tree="event_paramater [60663,60683]" parent="event_definition [60539,60690]" at="9"/>
  <insert-node tree="): ) [60688,60689]" parent="event_definition [60539,60690]" at="10"/>
  <update-node tree="identifier: MinterAdded [25642,25653]" label="CouponRedemption"/>
  <insert-node tree=",: , [60750,60751]" parent="event_definition [60695,60818]" at="4"/>
  <insert-tree tree="event_paramater [60760,60781]" parent="event_definition [60695,60818]" at="5"/>
  <insert-node tree=",: , [60781,60782]" parent="event_definition [60695,60818]" at="6"/>
  <insert-tree tree="event_paramater [60791,60811]" parent="event_definition [60695,60818]" at="7"/>
  <update-node tree="identifier: PairCreated [51418,51429]" label="CouponTransfer"/>
  <move-tree tree="event_paramater [79217,79230]" parent="event_definition [60823,60962]" at="10"/>
  <insert-node tree="event: event [60967,60972]" parent="event_definition [60967,61081]" at="0"/>
  <insert-node tree="identifier: CouponApproval [60973,60987]" parent="event_definition [60967,61081]" at="1"/>
  <insert-node tree="(: ( [60987,60988]" parent="event_definition [60967,61081]" at="2"/>
  <insert-node tree="event_paramater [60997,61018]" parent="event_definition [60967,61081]" at="3"/>
  <insert-node tree=",: , [61018,61019]" parent="event_definition [60967,61081]" at="4"/>
  <move-tree tree="event_paramater [51478,51490]" parent="event_definition [60967,61081]" at="5"/>
  <insert-node tree=",: , [61051,61052]" parent="event_definition [60967,61081]" at="6"/>
  <move-tree tree="event_paramater [78937,78950]" parent="event_definition [60967,61081]" at="7"/>
  <insert-node tree="): ) [61079,61080]" parent="event_definition [60967,61081]" at="8"/>
  <update-node tree="identifier: unfreeze [75570,75578]" label="step"/>
  <insert-node tree="function: function [61500,61508]" parent="function_definition [61500,62210]" at="0"/>
  <insert-node tree="identifier: expireCouponsForEpoch [61509,61530]" parent="function_definition [61500,62210]" at="1"/>
  <insert-node tree="(: ( [61530,61531]" parent="function_definition [61500,62210]" at="2"/>
  <insert-tree tree="parameter [61531,61544]" parent="function_definition [61500,62210]" at="3"/>
  <insert-node tree="): ) [61544,61545]" parent="function_definition [61500,62210]" at="4"/>
  <move-tree tree="visibility [47659,47666]" parent="function_definition [61500,62210]" at="5"/>
  <insert-node tree="function_body [61554,62210]" parent="function_definition [61500,62210]" at="6"/>
  <update-node tree="identifier: reserve [66401,66408]" label="couponPremium"/>
  <move-tree tree="parameter [74648,74662]" parent="function_definition [62216,62388]" at="3"/>
  <move-tree tree="visibility [50952,50958]" parent="function_definition [62216,62388]" at="5"/>
  <insert-node tree="function: function [62394,62402]" parent="function_definition [62394,62969]" at="0"/>
  <insert-node tree="identifier: purchaseCoupons [62403,62418]" parent="function_definition [62394,62969]" at="1"/>
  <insert-node tree="(: ( [62418,62419]" parent="function_definition [62394,62969]" at="2"/>
  <move-tree tree="parameter [76592,76612]" parent="function_definition [62394,62969]" at="3"/>
  <insert-node tree="): ) [62439,62440]" parent="function_definition [62394,62969]" at="4"/>
  <move-tree tree="visibility [48180,48188]" parent="function_definition [62394,62969]" at="5"/>
  <move-tree tree="return_type_definition [65947,65964]" parent="function_definition [62394,62969]" at="6"/>
  <insert-node tree="function_body [62468,62969]" parent="function_definition [62394,62969]" at="7"/>
  <insert-node tree="function: function [62975,62983]" parent="function_definition [62975,63429]" at="0"/>
  <insert-node tree="identifier: redeemCoupons [62984,62997]" parent="function_definition [62975,63429]" at="1"/>
  <insert-node tree="(: ( [62997,62998]" parent="function_definition [62975,63429]" at="2"/>
  <insert-tree tree="parameter [62998,63017]" parent="function_definition [62975,63429]" at="3"/>
  <insert-node tree=",: , [63017,63018]" parent="function_definition [62975,63429]" at="4"/>
  <insert-tree tree="parameter [63019,63039]" parent="function_definition [62975,63429]" at="5"/>
  <insert-node tree="): ) [63039,63040]" parent="function_definition [62975,63429]" at="6"/>
  <move-tree tree="visibility [83006,83014]" parent="function_definition [62975,63429]" at="7"/>
  <insert-node tree="function_body [63050,63429]" parent="function_definition [62975,63429]" at="8"/>
  <update-node tree="identifier: _approve [21764,21772]" label="approveCoupons"/>
  <move-tree tree="visibility [66411,66419]" parent="function_definition [63435,63749]" at="9"/>
  <update-node tree="identifier: _transfer [19642,19651]" label="transferCoupons"/>
  <move-tree tree="parameter [38220,38235]" parent="function_definition [63755,64747]" at="7"/>
  <insert-node tree=",: , [63853,63854]" parent="function_definition [63755,64747]" at="8"/>
  <move-tree tree="visibility [107228,107236]" parent="function_definition [63755,64747]" at="11"/>
  <update-node tree="identifier: IOracle [62649,62656]" label="Comptroller"/>
  <insert-node tree="event: event [65541,65546]" parent="event_definition [65541,65706]" at="0"/>
  <insert-node tree="identifier: SupplyIncrease [65547,65561]" parent="event_definition [65541,65706]" at="1"/>
  <insert-node tree="(: ( [65561,65562]" parent="event_definition [65541,65706]" at="2"/>
  <insert-node tree="event_paramater [65571,65592]" parent="event_definition [65541,65706]" at="3"/>
  <insert-node tree=",: , [65592,65593]" parent="event_definition [65541,65706]" at="4"/>
  <insert-node tree="event_paramater [65602,65615]" parent="event_definition [65541,65706]" at="5"/>
  <insert-node tree=",: , [65615,65616]" parent="event_definition [65541,65706]" at="6"/>
  <insert-node tree="event_paramater [65625,65646]" parent="event_definition [65541,65706]" at="7"/>
  <insert-node tree=",: , [65646,65647]" parent="event_definition [65541,65706]" at="8"/>
  <insert-tree tree="event_paramater [65656,65672]" parent="event_definition [65541,65706]" at="9"/>
  <insert-node tree=",: , [65672,65673]" parent="event_definition [65541,65706]" at="10"/>
  <insert-tree tree="event_paramater [65682,65699]" parent="event_definition [65541,65706]" at="11"/>
  <insert-node tree="): ) [65704,65705]" parent="event_definition [65541,65706]" at="12"/>
  <insert-node tree="event: event [65711,65716]" parent="event_definition [65711,65787]" at="0"/>
  <insert-node tree="identifier: SupplyDecrease [65717,65731]" parent="event_definition [65711,65787]" at="1"/>
  <insert-node tree="(: ( [65731,65732]" parent="event_definition [65711,65787]" at="2"/>
  <insert-node tree="event_paramater [65732,65753]" parent="event_definition [65711,65787]" at="3"/>
  <insert-node tree=",: , [65753,65754]" parent="event_definition [65711,65787]" at="4"/>
  <insert-node tree="event_paramater [65755,65768]" parent="event_definition [65711,65787]" at="5"/>
  <insert-node tree=",: , [65768,65769]" parent="event_definition [65711,65787]" at="6"/>
  <insert-node tree="event_paramater [65770,65785]" parent="event_definition [65711,65787]" at="7"/>
  <insert-node tree="): ) [65785,65786]" parent="event_definition [65711,65787]" at="8"/>
  <insert-node tree="event: event [65792,65797]" parent="event_definition [65792,65835]" at="0"/>
  <insert-node tree="identifier: SupplyNeutral [65798,65811]" parent="event_definition [65792,65835]" at="1"/>
  <insert-node tree="(: ( [65811,65812]" parent="event_definition [65792,65835]" at="2"/>
  <insert-node tree="event_paramater [65812,65833]" parent="event_definition [65792,65835]" at="3"/>
  <insert-node tree="): ) [65833,65834]" parent="event_definition [65792,65835]" at="4"/>
  <insert-node tree="function: function [65841,65849]" parent="function_definition [65841,66183]" at="0"/>
  <insert-node tree="identifier: step [65850,65854]" parent="function_definition [65841,66183]" at="1"/>
  <insert-node tree="(: ( [65854,65855]" parent="function_definition [65841,66183]" at="2"/>
  <insert-node tree="): ) [65855,65856]" parent="function_definition [65841,66183]" at="3"/>
  <move-tree tree="visibility [72953,72961]" parent="function_definition [65841,66183]" at="4"/>
  <insert-node tree="function_body [65866,66183]" parent="function_definition [65841,66183]" at="5"/>
  <insert-node tree="function: function [66189,66197]" parent="function_definition [66189,66528]" at="0"/>
  <insert-node tree="identifier: shrinkSupply [66198,66210]" parent="function_definition [66189,66528]" at="1"/>
  <insert-node tree="(: ( [66210,66211]" parent="function_definition [66189,66528]" at="2"/>
  <insert-tree tree="parameter [66211,66236]" parent="function_definition [66189,66528]" at="3"/>
  <insert-node tree="): ) [66236,66237]" parent="function_definition [66189,66528]" at="4"/>
  <move-tree tree="visibility [62754,62761]" parent="function_definition [66189,66528]" at="5"/>
  <insert-node tree="function_body [66246,66528]" parent="function_definition [66189,66528]" at="6"/>
  <update-node tree="identifier: updatePrice [65213,65224]" label="growSupply"/>
  <insert-tree tree="parameter [66554,66579]" parent="function_definition [66534,67027]" at="3"/>
  <move-tree tree="visibility [23206,23213]" parent="function_definition [66534,67027]" at="5"/>
  <update-node tree="identifier: balanceOfRewarded [71100,71117]" label="limit"/>
  <insert-tree tree="parameter [67048,67073]" parent="function_definition [67033,67646]" at="3"/>
  <insert-node tree=",: , [67073,67074]" parent="function_definition [67033,67646]" at="4"/>
  <insert-tree tree="parameter [67075,67100]" parent="function_definition [67033,67646]" at="5"/>
  <move-tree tree="visibility [76463,76470]" parent="function_definition [67033,67646]" at="8"/>
  <move-tree tree="variable_declaration_statement [71512,71565]" parent="function_body [67173,67646]" at="1"/>
  <update-node tree="identifier: capture [63914,63921]" label="oracleCapture"/>
  <move-tree tree="visibility [65227,65234]" parent="function_definition [67652,67993]" at="4"/>
  <move-tree tree="return_type_definition [65235,65264]" parent="function_definition [67652,67993]" at="5"/>
  <update-node tree="identifier: PoolSetters [78466,78477]" label="Setters"/>
  <update-node tree="identifier: Unbond [79034,79040]" label="Bond"/>
  <insert-node tree="event_paramater [70517,70540]" parent="event_definition [70418,70547]" at="9"/>
  <update-node tree="identifier: Bond [78963,78967]" label="Unbond"/>
  <insert-node tree=",: , [70643,70644]" parent="event_definition [70552,70683]" at="8"/>
  <insert-node tree="event_paramater [70653,70676]" parent="event_definition [70552,70683]" at="9"/>
  <insert-node tree="function: function [70689,70697]" parent="function_definition [70689,70853]" at="0"/>
  <insert-node tree="identifier: step [70698,70702]" parent="function_definition [70689,70853]" at="1"/>
  <insert-node tree="(: ( [70702,70703]" parent="function_definition [70689,70853]" at="2"/>
  <insert-node tree="): ) [70703,70704]" parent="function_definition [70689,70853]" at="3"/>
  <move-tree tree="visibility [66212,66220]" parent="function_definition [70689,70853]" at="4"/>
  <insert-node tree="function_body [70714,70853]" parent="function_definition [70689,70853]" at="5"/>
  <insert-tree tree="modifier_invocation [71146,71176]" parent="function_definition [71104,71412]" at="6"/>
  <move-tree tree="parameter [48079,48092]" parent="function_definition [71984,72481]" at="3"/>
  <move-tree tree="modifier_invocation [79608,79630]" parent="function_definition [71984,72481]" at="7"/>
  <insert-node tree="function: function [72487,72495]" parent="function_definition [72487,73018]" at="0"/>
  <insert-node tree="identifier: unbondUnderlying [72496,72512]" parent="function_definition [72487,73018]" at="1"/>
  <insert-node tree="(: ( [72512,72513]" parent="function_definition [72487,73018]" at="2"/>
  <move-tree tree="parameter [80976,80989]" parent="function_definition [72487,73018]" at="3"/>
  <insert-node tree="): ) [72526,72527]" parent="function_definition [72487,73018]" at="4"/>
  <move-tree tree="visibility [66316,66324]" parent="function_definition [72487,73018]" at="5"/>
  <move-tree tree="modifier_invocation [79932,79954]" parent="function_definition [72487,73018]" at="6"/>
  <insert-node tree="function_body [72587,73018]" parent="function_definition [72487,73018]" at="7"/>
  <insert-node tree="event: event [77801,77806]" parent="event_definition [77801,77945]" at="0"/>
  <insert-node tree="identifier: Proposal [77807,77815]" parent="event_definition [77801,77945]" at="1"/>
  <insert-node tree="(: ( [77815,77816]" parent="event_definition [77801,77945]" at="2"/>
  <insert-node tree="event_paramater [77825,77850]" parent="event_definition [77801,77945]" at="3"/>
  <insert-node tree=",: , [77850,77851]" parent="event_definition [77801,77945]" at="4"/>
  <insert-tree tree="event_paramater [77860,77883]" parent="event_definition [77801,77945]" at="5"/>
  <insert-node tree=",: , [77883,77884]" parent="event_definition [77801,77945]" at="6"/>
  <insert-node tree="event_paramater [77893,77914]" parent="event_definition [77801,77945]" at="7"/>
  <insert-node tree=",: , [77914,77915]" parent="event_definition [77801,77945]" at="8"/>
  <move-tree tree="event_paramater [79266,79282]" parent="event_definition [77801,77945]" at="9"/>
  <insert-node tree="): ) [77943,77944]" parent="event_definition [77801,77945]" at="10"/>
  <insert-node tree="event: event [77950,77955]" parent="event_definition [77950,78088]" at="0"/>
  <insert-node tree="identifier: Vote [77956,77960]" parent="event_definition [77950,78088]" at="1"/>
  <insert-node tree="(: ( [77960,77961]" parent="event_definition [77950,78088]" at="2"/>
  <insert-tree tree="event_paramater [77970,77993]" parent="event_definition [77950,78088]" at="3"/>
  <insert-node tree=",: , [77993,77994]" parent="event_definition [77950,78088]" at="4"/>
  <insert-node tree="event_paramater [78003,78028]" parent="event_definition [77950,78088]" at="5"/>
  <insert-node tree=",: , [78028,78029]" parent="event_definition [77950,78088]" at="6"/>
  <insert-tree tree="event_paramater [78038,78057]" parent="event_definition [77950,78088]" at="7"/>
  <insert-node tree=",: , [78057,78058]" parent="event_definition [77950,78088]" at="8"/>
  <move-tree tree="event_paramater [79129,79149]" parent="event_definition [77950,78088]" at="9"/>
  <insert-node tree="): ) [78086,78087]" parent="event_definition [77950,78088]" at="10"/>
  <update-node tree="identifier: Provide [79167,79174]" label="Commit"/>
  <insert-node tree="event_paramater [78131,78156]" parent="event_definition [78093,78158]" at="5"/>
  <insert-node tree="function: function [78164,78172]" parent="function_definition [78164,79914]" at="0"/>
  <insert-node tree="identifier: vote [78173,78177]" parent="function_definition [78164,79914]" at="1"/>
  <insert-node tree="(: ( [78177,78178]" parent="function_definition [78164,79914]" at="2"/>
  <move-tree tree="parameter [77272,77286]" parent="function_definition [78164,79914]" at="3"/>
  <insert-node tree=",: , [78195,78196]" parent="function_definition [78164,79914]" at="4"/>
  <insert-tree tree="parameter [78197,78216]" parent="function_definition [78164,79914]" at="5"/>
  <insert-node tree="): ) [78216,78217]" parent="function_definition [78164,79914]" at="6"/>
  <move-tree tree="visibility [67300,67308]" parent="function_definition [78164,79914]" at="7"/>
  <move-tree tree="modifier_invocation [79336,79358]" parent="function_definition [78164,79914]" at="8"/>
  <insert-node tree="function_body [78278,79914]" parent="function_definition [78164,79914]" at="9"/>
  <update-node tree="identifier: provide [81920,81927]" label="commit"/>
  <move-tree tree="parameter [77288,77302]" parent="function_definition [79920,80829]" at="3"/>
  <insert-node tree="function: function [80835,80843]" parent="function_definition [80835,81574]" at="0"/>
  <insert-node tree="identifier: emergencyCommit [80844,80859]" parent="function_definition [80835,81574]" at="1"/>
  <insert-node tree="(: ( [80859,80860]" parent="function_definition [80835,81574]" at="2"/>
  <move-tree tree="parameter [82865,82878]" parent="function_definition [80835,81574]" at="3"/>
  <insert-node tree="): ) [80877,80878]" parent="function_definition [80835,81574]" at="4"/>
  <move-tree tree="visibility [79923,79931]" parent="function_definition [80835,81574]" at="5"/>
  <insert-node tree="function_body [80888,81574]" parent="function_definition [80835,81574]" at="6"/>
  <insert-node tree="function: function [81580,81588]" parent="function_definition [81580,81921]" at="0"/>
  <insert-node tree="identifier: canPropose [81589,81599]" parent="function_definition [81580,81921]" at="1"/>
  <insert-node tree="(: ( [81599,81600]" parent="function_definition [81580,81921]" at="2"/>
  <move-tree tree="parameter [70576,70591]" parent="function_definition [81580,81921]" at="3"/>
  <insert-node tree="): ) [81615,81616]" parent="function_definition [81580,81921]" at="4"/>
  <move-tree tree="visibility [64181,64188]" parent="function_definition [81580,81921]" at="5"/>
  <move-tree tree="state_mutability [70456,70460]" parent="function_definition [81580,81921]" at="6"/>
  <move-tree tree="return_type_definition [70461,70475]" parent="function_definition [81580,81921]" at="7"/>
  <insert-node tree="function_body [81645,81921]" parent="function_definition [81580,81921]" at="8"/>
  <insert-node tree="event: event [82714,82719]" parent="event_definition [82714,82785]" at="0"/>
  <insert-node tree="identifier: Advance [82720,82727]" parent="event_definition [82714,82785]" at="1"/>
  <insert-node tree="(: ( [82727,82728]" parent="event_definition [82714,82785]" at="2"/>
  <insert-node tree="event_paramater [82728,82749]" parent="event_definition [82714,82785]" at="3"/>
  <insert-node tree=",: , [82749,82750]" parent="event_definition [82714,82785]" at="4"/>
  <insert-node tree="event_paramater [82751,82764]" parent="event_definition [82714,82785]" at="5"/>
  <insert-node tree=",: , [82764,82765]" parent="event_definition [82714,82785]" at="6"/>
  <insert-node tree="event_paramater [82766,82783]" parent="event_definition [82714,82785]" at="7"/>
  <insert-node tree="): ) [82783,82784]" parent="event_definition [82714,82785]" at="8"/>
  <update-node tree="identifier: Claim [78906,78911]" label="Incentivization"/>
  <move-tree tree="event_paramater [79240,79256]" parent="event_definition [82790,82853]" at="5"/>
  <insert-node tree="function: function [82859,82867]" parent="function_definition [82859,83024]" at="0"/>
  <insert-node tree="identifier: initialize [82868,82878]" parent="function_definition [82859,83024]" at="1"/>
  <insert-node tree="(: ( [82878,82879]" parent="function_definition [82859,83024]" at="2"/>
  <insert-node tree="): ) [82879,82880]" parent="function_definition [82859,83024]" at="3"/>
  <move-tree tree="visibility [69594,69600]" parent="function_definition [82859,83024]" at="4"/>
  <move-tree tree="modifier_invocation [107113,107124]" parent="function_definition [82859,83024]" at="5"/>
  <insert-node tree="function_body [82900,83024]" parent="function_definition [82859,83024]" at="6"/>
  <insert-node tree="function: function [83030,83038]" parent="function_definition [83030,83268]" at="0"/>
  <insert-node tree="identifier: advance [83039,83046]" parent="function_definition [83030,83268]" at="1"/>
  <insert-node tree="(: ( [83046,83047]" parent="function_definition [83030,83268]" at="2"/>
  <insert-node tree="): ) [83047,83048]" parent="function_definition [83030,83268]" at="3"/>
  <move-tree tree="visibility [82895,82903]" parent="function_definition [83030,83268]" at="4"/>
  <insert-node tree="function_body [83058,83268]" parent="function_definition [83030,83268]" at="5"/>
  <insert-node tree="function: function [83274,83282]" parent="function_definition [83274,83430]" at="0"/>
  <insert-node tree="identifier: incentivize [83283,83294]" parent="function_definition [83274,83430]" at="1"/>
  <insert-node tree="(: ( [83294,83295]" parent="function_definition [83274,83430]" at="2"/>
  <move-tree tree="parameter [73357,73372]" parent="function_definition [83274,83430]" at="3"/>
  <insert-node tree=",: , [83310,83311]" parent="function_definition [83274,83430]" at="4"/>
  <move-tree tree="parameter [73382,73396]" parent="function_definition [83274,83430]" at="5"/>
  <insert-node tree="): ) [83326,83327]" parent="function_definition [83274,83430]" at="6"/>
  <move-tree tree="visibility [65939,65946]" parent="function_definition [83274,83430]" at="7"/>
  <insert-node tree="function_body [83336,83430]" parent="function_definition [83274,83430]" at="8"/>
  <update-node tree="identifier: reserveA [77359,77367]" label="totalSupply"/>
  <update-node tree="identifier: reserveB [77377,77385]" label="totalDebt"/>
  <insert-node tree="{: { [17661,17662]" parent="function_body [17661,17803]" at="0"/>
  <insert-node tree="return_statement [17671,17797]" parent="function_body [17661,17803]" at="1"/>
  <insert-node tree="}: } [17802,17803]" parent="function_body [17661,17803]" at="2"/>
  <update-node tree="identifier: subtractedValue [18953,18968]" label="totalSupply"/>
  <update-node tree="identifier: addedValue [18259,18269]" label="totalDebt"/>
  <insert-node tree="{: { [17964,17965]" parent="function_body [17964,19267]" at="0"/>
  <insert-tree tree="variable_declaration_statement [17974,18044]" parent="function_body [17964,19267]" at="1"/>
  <insert-tree tree="variable_declaration_statement [18053,18123]" parent="function_body [17964,19267]" at="2"/>
  <insert-node tree="variable_declaration_statement [18133,18182]" parent="function_body [17964,19267]" at="3"/>
  <insert-node tree="variable_declaration_statement [18191,18236]" parent="function_body [17964,19267]" at="4"/>
  <insert-tree tree="variable_declaration_statement [18245,18358]" parent="function_body [17964,19267]" at="5"/>
  <insert-tree tree="if_statement [18368,19209]" parent="function_body [17964,19267]" at="6"/>
  <insert-tree tree="return_statement [19219,19261]" parent="function_body [17964,19267]" at="7"/>
  <insert-node tree="}: } [19266,19267]" parent="function_body [17964,19267]" at="8"/>
  <insert-node tree="identifier: debtRatio [19332,19341]" parent="parameter [19312,19341]" at="2"/>
  <insert-node tree="identifier: lower [19676,19681]" parent="parameter [19656,19681]" at="2"/>
  <insert-node tree="if_statement [55483,55559]" parent="function_body [55433,55590]" at="2"/>
  <insert-tree tree="expression_statement [55569,55584]" parent="function_body [55433,55590]" at="3"/>
  <insert-node tree="expression_statement [55736,55758]" parent="function_body [55663,55869]" at="2"/>
  <move-tree tree="expression_statement [48774,48821]" parent="function_body [55663,55869]" at="3"/>
  <insert-tree tree="expression_statement [55848,55863]" parent="function_body [55663,55869]" at="4"/>
  <insert-node tree="expression_statement [55996,56109]" parent="function_body [55942,56140]" at="2"/>
  <move-tree tree="expression_statement [81813,81828]" parent="function_body [55942,56140]" at="3"/>
  <move-tree tree="expression_statement [80878,80893]" parent="function_body [56195,56380]" at="4"/>
  <insert-node tree="{: { [56451,56452]" parent="function_body [56451,56648]" at="0"/>
  <insert-node tree="expression_statement [56461,56488]" parent="function_body [56451,56648]" at="1"/>
  <insert-tree tree="variable_declaration_statement [56497,56555]" parent="function_body [56451,56648]" at="2"/>
  <move-tree tree="expression_statement [79823,79838]" parent="function_body [56451,56648]" at="3"/>
  <insert-tree tree="return_statement [56590,56642]" parent="function_body [56451,56648]" at="4"/>
  <insert-node tree="}: } [56647,56648]" parent="function_body [56451,56648]" at="5"/>
  <insert-node tree="{: { [56701,56702]" parent="function_body [56701,56801]" at="0"/>
  <move-tree tree="expression_statement [19884,19976]" parent="function_body [56701,56801]" at="1"/>
  <move-tree tree="expression_statement [79497,79512]" parent="function_body [56701,56801]" at="2"/>
  <insert-node tree="}: } [56800,56801]" parent="function_body [56701,56801]" at="3"/>
  <update-node tree="identifier: deadline [48110,48118]" label="newSupply"/>
  <insert-node tree="{: { [56906,56907]" parent="function_body [56906,58167]" at="0"/>
  <insert-node tree="comment: // 0-a. Pay out to Pool [56916,56939]" parent="function_body [56906,58167]" at="1"/>
  <insert-node tree="variable_declaration_statement [56948,57046]" parent="function_body [56906,58167]" at="2"/>
  <insert-tree tree="expression_statement [57055,57078]" parent="function_body [56906,58167]" at="3"/>
  <insert-node tree="comment: // 0-b. Pay out to Treasury [57088,57115]" parent="function_body [56906,58167]" at="4"/>
  <insert-tree tree="variable_declaration_statement [57124,57230]" parent="function_body [56906,58167]" at="5"/>
  <insert-tree tree="expression_statement [57239,57270]" parent="function_body [56906,58167]" at="6"/>
  <insert-tree tree="variable_declaration_statement [57280,57329]" parent="function_body [56906,58167]" at="7"/>
  <insert-tree tree="expression_statement [57338,57399]" parent="function_body [56906,58167]" at="8"/>
  <insert-node tree="comment: // 1. True up redeemable pool [57409,57438]" parent="function_body [56906,58167]" at="9"/>
  <insert-tree tree="variable_declaration_statement [57447,57473]" parent="function_body [56906,58167]" at="10"/>
  <insert-tree tree="variable_declaration_statement [57482,57526]" parent="function_body [56906,58167]" at="11"/>
  <insert-tree tree="variable_declaration_statement [57535,57573]" parent="function_body [56906,58167]" at="12"/>
  <insert-tree tree="if_statement [57582,57906]" parent="function_body [56906,58167]" at="13"/>
  <insert-node tree="comment: // 2. Payout to DAO [57916,57935]" parent="function_body [56906,58167]" at="14"/>
  <insert-tree tree="if_statement [57944,58006]" parent="function_body [56906,58167]" at="15"/>
  <insert-tree tree="if_statement [58015,58079]" parent="function_body [56906,58167]" at="16"/>
  <move-tree tree="expression_statement [82749,82764]" parent="function_body [56906,58167]" at="17"/>
  <insert-tree tree="return_statement [58114,58161]" parent="function_body [56906,58167]" at="18"/>
  <insert-node tree="}: } [58166,58167]" parent="function_body [56906,58167]" at="19"/>
  <insert-node tree="{: { [58276,58277]" parent="function_body [58276,58634]" at="0"/>
  <insert-node tree="variable_declaration_statement [58286,58389]" parent="function_body [58276,58634]" at="1"/>
  <insert-tree tree="variable_declaration_statement [58398,58432]" parent="function_body [58276,58634]" at="2"/>
  <insert-tree tree="if_statement [58442,58609]" parent="function_body [58276,58634]" at="3"/>
  <move-tree tree="return_statement [71718,71727]" parent="function_body [58276,58634]" at="4"/>
  <insert-node tree="}: } [58633,58634]" parent="function_body [58276,58634]" at="5"/>
  <move-tree tree="expression_statement [83095,83278]" parent="function_body [58672,58888]" at="1"/>
  <insert-node tree="if_statement [58947,59066]" parent="function_body [58937,59072]" at="1"/>
  <insert-node tree="{: { [59122,59123]" parent="function_body [59122,59208]" at="0"/>
  <insert-node tree="if_statement [59132,59202]" parent="function_body [59122,59208]" at="1"/>
  <insert-node tree="}: } [59207,59208]" parent="function_body [59122,59208]" at="2"/>
  <insert-node tree="{: { [59262,59263]" parent="function_body [59262,59372]" at="0"/>
  <insert-node tree="if_statement [59272,59366]" parent="function_body [59262,59372]" at="1"/>
  <insert-node tree="}: } [59371,59372]" parent="function_body [59262,59372]" at="2"/>
  <insert-node tree="{: { [59428,59429]" parent="function_body [59428,59548]" at="0"/>
  <insert-node tree="expression_statement [59438,59475]" parent="function_body [59428,59548]" at="1"/>
  <insert-node tree="expression_statement [59484,59517]" parent="function_body [59428,59548]" at="2"/>
  <move-tree tree="expression_statement [80154,80169]" parent="function_body [59428,59548]" at="3"/>
  <insert-node tree="}: } [59547,59548]" parent="function_body [59428,59548]" at="4"/>
  <move-tree tree="type_name [47767,47774]" parent="event_paramater [60389,60410]" at="0"/>
  <insert-node tree="indexed: indexed [60397,60404]" parent="event_paramater [60389,60410]" at="1"/>
  <insert-node tree="identifier: epoch [60405,60410]" parent="event_paramater [60389,60410]" at="2"/>
  <move-tree tree="type_name [15766,15773]" parent="event_paramater [60420,60442]" at="0"/>
  <insert-node tree="identifier: couponsExpired [60428,60442]" parent="event_paramater [60420,60442]" at="1"/>
  <move-tree tree="type_name [15839,15846]" parent="event_paramater [60602,60623]" at="0"/>
  <insert-node tree="indexed: indexed [60610,60617]" parent="event_paramater [60602,60623]" at="1"/>
  <insert-node tree="identifier: epoch [60618,60623]" parent="event_paramater [60602,60623]" at="2"/>
  <update-node tree="identifier: token0 [51446,51452]" label="from"/>
  <update-node tree="identifier: token1 [51470,51476]" label="to"/>
  <insert-node tree="indexed: indexed [60919,60926]" parent="event_paramater [60911,60932]" at="1"/>
  <insert-node tree="identifier: epoch [60927,60932]" parent="event_paramater [60911,60932]" at="2"/>
  <move-tree tree="type_name [76455,76462]" parent="event_paramater [60997,61018]" at="0"/>
  <insert-node tree="indexed: indexed [61005,61012]" parent="event_paramater [60997,61018]" at="1"/>
  <insert-node tree="identifier: owner [61013,61018]" parent="event_paramater [60997,61018]" at="2"/>
  <insert-node tree="indexed: indexed [61036,61043]" parent="event_paramater [61028,61051]" at="1"/>
  <update-node tree="identifier: pair [51486,51490]" label="spender"/>
  <insert-node tree="comment: // Expire prior coupons [61122,61145]" parent="function_body [61112,61494]" at="1"/>
  <insert-tree tree="for_statement [61154,61291]" parent="function_body [61112,61494]" at="2"/>
  <insert-node tree="comment: // Record expiry for current epoch's coupons [61301,61345]" parent="function_body [61112,61494]" at="3"/>
  <insert-node tree="variable_declaration_statement [61354,61425]" parent="function_body [61112,61494]" at="4"/>
  <insert-node tree="{: { [61554,61555]" parent="function_body [61554,62210]" at="0"/>
  <insert-tree tree="variable_declaration_statement [61564,61616]" parent="function_body [61554,62210]" at="1"/>
  <move-tree tree="variable_declaration_statement [77475,77639]" parent="function_body [61554,62210]" at="2"/>
  <insert-tree tree="expression_statement [61688,61723]" parent="function_body [61554,62210]" at="3"/>
  <insert-node tree="variable_declaration_statement [61733,61777]" parent="function_body [61554,62210]" at="4"/>
  <insert-node tree="variable_declaration_statement [61786,61824]" parent="function_body [61554,62210]" at="5"/>
  <insert-tree tree="if_statement [61833,62048]" parent="function_body [61554,62210]" at="6"/>
  <insert-node tree="emit_statement [62058,62204]" parent="function_body [61554,62210]" at="7"/>
  <insert-node tree="}: } [62209,62210]" parent="function_body [61554,62210]" at="8"/>
  <insert-node tree="{: { [62468,62469]" parent="function_body [62468,62969]" at="0"/>
  <move-tree tree="expression_statement [21840,21909]" parent="function_body [62468,62969]" at="1"/>
  <move-tree tree="expression_statement [48634,48694]" parent="function_body [62468,62969]" at="2"/>
  <move-tree tree="variable_declaration_statement [81041,81095]" parent="function_body [62468,62969]" at="3"/>
  <insert-node tree="variable_declaration_statement [62668,62737]" parent="function_body [62468,62969]" at="4"/>
  <move-tree tree="expression_statement [82668,82739]" parent="function_body [62468,62969]" at="5"/>
  <move-tree tree="expression_statement [82612,82659]" parent="function_body [62468,62969]" at="6"/>
  <insert-tree tree="emit_statement [62866,62933]" parent="function_body [62468,62969]" at="7"/>
  <insert-tree tree="return_statement [62943,62963]" parent="function_body [62468,62969]" at="8"/>
  <insert-node tree="}: } [62968,62969]" parent="function_body [62468,62969]" at="9"/>
  <insert-node tree="{: { [63050,63051]" parent="function_body [63050,63429]" at="0"/>
  <insert-node tree="expression_statement [63060,63130]" parent="function_body [63050,63429]" at="1"/>
  <move-tree tree="expression_statement [21055,21123]" parent="function_body [63050,63429]" at="2"/>
  <insert-tree tree="expression_statement [63310,63352]" parent="function_body [63050,63429]" at="3"/>
  <insert-tree tree="emit_statement [63362,63423]" parent="function_body [63050,63429]" at="4"/>
  <insert-node tree="}: } [63428,63429]" parent="function_body [63050,63429]" at="5"/>
  <update-node tree="identifier: chainId [38228,38235]" label="epoch"/>
  <insert-node tree="expression_statement [64149,64295]" parent="function_body [63893,64747]" at="3"/>
  <insert-node tree="expression_statement [64304,64356]" parent="function_body [63893,64747]" at="4"/>
  <move-tree tree="if_statement [51030,51347]" parent="function_body [63893,64747]" at="5"/>
  <move-tree tree="type_name [68108,68115]" parent="event_paramater [65571,65592]" at="0"/>
  <insert-node tree="indexed: indexed [65579,65586]" parent="event_paramater [65571,65592]" at="1"/>
  <insert-node tree="identifier: epoch [65587,65592]" parent="event_paramater [65571,65592]" at="2"/>
  <move-tree tree="type_name [68159,68166]" parent="event_paramater [65602,65615]" at="0"/>
  <insert-node tree="identifier: price [65610,65615]" parent="event_paramater [65602,65615]" at="1"/>
  <move-tree tree="type_name [68457,68464]" parent="event_paramater [65625,65646]" at="0"/>
  <insert-node tree="identifier: newRedeemable [65633,65646]" parent="event_paramater [65625,65646]" at="1"/>
  <move-tree tree="type_name [68382,68389]" parent="event_paramater [65732,65753]" at="0"/>
  <insert-node tree="indexed: indexed [65740,65747]" parent="event_paramater [65732,65753]" at="1"/>
  <insert-node tree="identifier: epoch [65748,65753]" parent="event_paramater [65732,65753]" at="2"/>
  <move-tree tree="type_name [68132,68139]" parent="event_paramater [65755,65768]" at="0"/>
  <insert-node tree="identifier: price [65763,65768]" parent="event_paramater [65755,65768]" at="1"/>
  <move-tree tree="type_name [68433,68440]" parent="event_paramater [65770,65785]" at="0"/>
  <insert-node tree="identifier: newDebt [65778,65785]" parent="event_paramater [65770,65785]" at="1"/>
  <move-tree tree="type_name [68406,68413]" parent="event_paramater [65812,65833]" at="0"/>
  <insert-node tree="indexed: indexed [65820,65827]" parent="event_paramater [65812,65833]" at="1"/>
  <insert-node tree="identifier: epoch [65828,65833]" parent="event_paramater [65812,65833]" at="2"/>
  <insert-node tree="{: { [65866,65867]" parent="function_body [65866,66183]" at="0"/>
  <move-tree tree="variable_declaration_statement [64842,64884]" parent="function_body [65866,66183]" at="1"/>
  <insert-tree tree="if_statement [65930,66030]" parent="function_body [65866,66183]" at="2"/>
  <insert-tree tree="if_statement [66040,66139]" parent="function_body [65866,66183]" at="3"/>
  <insert-tree tree="emit_statement [66149,66177]" parent="function_body [65866,66183]" at="4"/>
  <insert-node tree="}: } [66182,66183]" parent="function_body [65866,66183]" at="5"/>
  <insert-node tree="{: { [66246,66247]" parent="function_body [66246,66528]" at="0"/>
  <insert-tree tree="variable_declaration_statement [66256,66323]" parent="function_body [66246,66528]" at="1"/>
  <insert-node tree="variable_declaration_statement [66332,66384]" parent="function_body [66246,66528]" at="2"/>
  <insert-node tree="variable_declaration_statement [66393,66439]" parent="function_body [66246,66528]" at="3"/>
  <insert-tree tree="emit_statement [66449,66506]" parent="function_body [66246,66528]" at="4"/>
  <insert-tree tree="return_statement [66515,66522]" parent="function_body [66246,66528]" at="5"/>
  <insert-node tree="}: } [66527,66528]" parent="function_body [66246,66528]" at="6"/>
  <move-tree tree="variable_declaration_statement [80310,80381]" parent="function_body [66589,67027]" at="1"/>
  <insert-tree tree="variable_declaration_statement [66654,66721]" parent="function_body [66589,67027]" at="2"/>
  <insert-node tree="variable_declaration_statement [66730,66784]" parent="function_body [66589,67027]" at="3"/>
  <insert-tree tree="emit_statement [66873,67021]" parent="function_body [66589,67027]" at="5"/>
  <insert-tree tree="if_statement [67379,67558]" parent="function_body [67173,67646]" at="4"/>
  <insert-tree tree="return_statement [67568,67640]" parent="function_body [67173,67646]" at="5"/>
  <move-tree tree="variable_declaration_statement [65661,65792]" parent="function_body [67715,67993]" at="1"/>
  <insert-tree tree="if_statement [67796,67898]" parent="function_body [67715,67993]" at="2"/>
  <insert-tree tree="return_statement [67974,67987]" parent="function_body [67715,67993]" at="4"/>
  <move-tree tree="type_name [68208,68215]" parent="event_paramater [70517,70540]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [70525,70540]" parent="event_paramater [70517,70540]" at="1"/>
  <move-tree tree="type_name [68183,68190]" parent="event_paramater [70653,70676]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [70661,70676]" parent="event_paramater [70653,70676]" at="1"/>
  <insert-node tree="{: { [70714,70715]" parent="function_body [70714,70853]" at="0"/>
  <insert-node tree="expression_statement [70724,70789]" parent="function_body [70714,70853]" at="1"/>
  <insert-tree tree="expression_statement [70799,70821]" parent="function_body [70714,70853]" at="2"/>
  <insert-tree tree="expression_statement [70830,70847]" parent="function_body [70714,70853]" at="3"/>
  <insert-node tree="}: } [70852,70853]" parent="function_body [70714,70853]" at="4"/>
  <update-node tree="identifier: notPaused [79359,79368]" label="onlyFrozenOrLocked"/>
  <insert-node tree="(: ( [70918,70919]" parent="modifier_invocation [70900,70930]" at="1"/>
  <insert-tree tree="call_argument [70919,70929]" parent="modifier_invocation [70900,70930]" at="2"/>
  <insert-node tree="): ) [70929,70930]" parent="modifier_invocation [70900,70930]" at="3"/>
  <move-tree tree="expression_statement [79965,80002]" parent="function_body [71177,71412]" at="1"/>
  <update-node tree="identifier: notPaused [80259,80268]" label="onlyFrozenOrFluid"/>
  <insert-node tree="(: ( [71473,71474]" parent="modifier_invocation [71456,71485]" at="1"/>
  <move-tree tree="call_argument [81963,81973]" parent="modifier_invocation [71456,71485]" at="2"/>
  <insert-node tree="): ) [71484,71485]" parent="modifier_invocation [71456,71485]" at="3"/>
  <move-tree tree="expression_statement [81469,81523]" parent="function_body [71486,71978]" at="3"/>
  <insert-node tree="expression_statement [71741,71769]" parent="function_body [71486,71978]" at="4"/>
  <insert-node tree="emit_statement [71918,71972]" parent="function_body [71486,71978]" at="6"/>
  <update-node tree="identifier: onlyFrozen [79608,79618]" label="onlyFrozenOrFluid"/>
  <insert-tree tree="expression_statement [72064,72085]" parent="function_body [72054,72481]" at="1"/>
  <move-tree tree="expression_statement [80011,80144]" parent="function_body [72054,72481]" at="6"/>
  <insert-node tree="expression_statement [72263,72330]" parent="function_body [72054,72481]" at="4"/>
  <move-tree tree="expression_statement [66510,66560]" parent="function_body [72054,72481]" at="8"/>
  <update-node tree="identifier: onlyFrozen [79932,79942]" label="onlyFrozenOrFluid"/>
  <insert-node tree="{: { [72587,72588]" parent="function_body [72587,73018]" at="0"/>
  <move-tree tree="expression_statement [81010,81031]" parent="function_body [72587,73018]" at="1"/>
  <move-tree tree="variable_declaration_statement [82487,82602]" parent="function_body [72587,73018]" at="2"/>
  <move-tree tree="expression_statement [81416,81460]" parent="function_body [72587,73018]" at="3"/>
  <insert-node tree="expression_statement [72752,72818]" parent="function_body [72587,73018]" at="4"/>
  <move-tree tree="expression_statement [56611,56663]" parent="function_body [72587,73018]" at="5"/>
  <move-tree tree="emit_statement [80903,80948]" parent="function_body [72587,73018]" at="6"/>
  <insert-node tree="}: } [73017,73018]" parent="function_body [72587,73018]" at="7"/>
  <move-tree tree="type_name [62746,62753]" parent="event_paramater [77825,77850]" at="0"/>
  <insert-node tree="indexed: indexed [77833,77840]" parent="event_paramater [77825,77850]" at="1"/>
  <insert-node tree="identifier: candidate [77841,77850]" parent="event_paramater [77825,77850]" at="2"/>
  <move-tree tree="type_name [63082,63089]" parent="event_paramater [77893,77914]" at="0"/>
  <insert-node tree="indexed: indexed [77901,77908]" parent="event_paramater [77893,77914]" at="1"/>
  <insert-node tree="identifier: start [77909,77914]" parent="event_paramater [77893,77914]" at="2"/>
  <update-node tree="identifier: newUniv2 [79274,79282]" label="period"/>
  <move-tree tree="type_name [62888,62895]" parent="event_paramater [78003,78028]" at="0"/>
  <insert-node tree="indexed: indexed [78011,78018]" parent="event_paramater [78003,78028]" at="1"/>
  <insert-node tree="identifier: candidate [78019,78028]" parent="event_paramater [78003,78028]" at="2"/>
  <update-node tree="identifier: newClaimable [79137,79149]" label="bonded"/>
  <move-tree tree="type_name [62861,62868]" parent="event_paramater [78131,78156]" at="0"/>
  <insert-node tree="indexed: indexed [78139,78146]" parent="event_paramater [78131,78156]" at="1"/>
  <insert-node tree="identifier: candidate [78147,78156]" parent="event_paramater [78131,78156]" at="2"/>
  <update-node tree="identifier: tokenA [77280,77286]" label="candidate"/>
  <update-node tree="identifier: onlyFrozen [79336,79346]" label="onlyFrozenOrLocked"/>
  <insert-node tree="{: { [78278,78279]" parent="function_body [78278,79914]" at="0"/>
  <move-tree tree="expression_statement [83517,83577]" parent="function_body [78278,79914]" at="1"/>
  <insert-node tree="if_statement [78363,78796]" parent="function_body [78278,79914]" at="2"/>
  <move-tree tree="expression_statement [83632,83672]" parent="function_body [78278,79914]" at="3"/>
  <move-tree tree="variable_declaration_statement [81185,81292]" parent="function_body [78278,79914]" at="4"/>
  <insert-tree tree="variable_declaration_statement [78995,79061]" parent="function_body [78278,79914]" at="5"/>
  <insert-tree tree="if_statement [79070,79127]" parent="function_body [78278,79914]" at="6"/>
  <insert-node tree="if_statement [79137,79335]" parent="function_body [78278,79914]" at="7"/>
  <insert-node tree="if_statement [79344,79545]" parent="function_body [78278,79914]" at="8"/>
  <insert-tree tree="if_statement [79554,79651]" parent="function_body [78278,79914]" at="9"/>
  <insert-tree tree="if_statement [79660,79759]" parent="function_body [78278,79914]" at="10"/>
  <move-tree tree="expression_statement [81668,81803]" parent="function_body [78278,79914]" at="11"/>
  <move-tree tree="expression_statement [81532,81659]" parent="function_body [78278,79914]" at="12"/>
  <insert-tree tree="emit_statement [79861,79908]" parent="function_body [78278,79914]" at="13"/>
  <insert-node tree="}: } [79913,79914]" parent="function_body [78278,79914]" at="14"/>
  <update-node tree="identifier: tokenB [77296,77302]" label="candidate"/>
  <insert-node tree="variable_declaration_statement [80044,80139]" parent="function_body [79964,80829]" at="2"/>
  <move-tree tree="expression_statement [83337,83464]" parent="function_body [79964,80829]" at="5"/>
  <insert-node tree="expression_statement [80384,80610]" parent="function_body [79964,80829]" at="5"/>
  <insert-node tree="expression_statement [80620,80747]" parent="function_body [79964,80829]" at="6"/>
  <insert-tree tree="expression_statement [80757,80778]" parent="function_body [79964,80829]" at="7"/>
  <update-node tree="identifier: token [82873,82878]" label="candidate"/>
  <insert-node tree="{: { [80888,80889]" parent="function_body [80888,81574]" at="0"/>
  <move-tree tree="expression_statement [81995,82062]" parent="function_body [80888,81574]" at="1"/>
  <insert-node tree="expression_statement [80968,81117]" parent="function_body [80888,81574]" at="2"/>
  <move-tree tree="expression_statement [81104,81175]" parent="function_body [80888,81574]" at="3"/>
  <move-tree tree="expression_statement [63498,63617]" parent="function_body [80888,81574]" at="4"/>
  <insert-tree tree="expression_statement [81502,81523]" parent="function_body [80888,81574]" at="5"/>
  <move-tree tree="emit_statement [80179,80209]" parent="function_body [80888,81574]" at="6"/>
  <insert-node tree="}: } [81573,81574]" parent="function_body [80888,81574]" at="7"/>
  <insert-node tree="{: { [81645,81646]" parent="function_body [81645,81921]" at="0"/>
  <insert-node tree="if_statement [81655,81716]" parent="function_body [81645,81921]" at="1"/>
  <move-tree tree="variable_declaration_statement [71365,71502]" parent="function_body [81645,81921]" at="2"/>
  <insert-tree tree="return_statement [81846,81915]" parent="function_body [81645,81921]" at="3"/>
  <insert-node tree="}: } [81920,81921]" parent="function_body [81645,81921]" at="4"/>
  <move-tree tree="type_name [15875,15882]" parent="event_paramater [82728,82749]" at="0"/>
  <insert-node tree="indexed: indexed [82736,82743]" parent="event_paramater [82728,82749]" at="1"/>
  <insert-node tree="identifier: epoch [82744,82749]" parent="event_paramater [82728,82749]" at="2"/>
  <move-tree tree="type_name [63015,63022]" parent="event_paramater [82751,82764]" at="0"/>
  <insert-node tree="identifier: block [82759,82764]" parent="event_paramater [82751,82764]" at="1"/>
  <move-tree tree="type_name [62986,62993]" parent="event_paramater [82766,82783]" at="0"/>
  <insert-node tree="identifier: timestamp [82774,82783]" parent="event_paramater [82766,82783]" at="1"/>
  <update-node tree="identifier: lessUsdc [79248,79256]" label="amount"/>
  <insert-node tree="{: { [82900,82901]" parent="function_body [82900,83024]" at="0"/>
  <insert-node tree="comment: // Reward committer [82910,82929]" parent="function_body [82900,83024]" at="1"/>
  <move-tree tree="expression_statement [77081,77137]" parent="function_body [82900,83024]" at="2"/>
  <insert-node tree="comment: // Dev rewards [83004,83018]" parent="function_body [82900,83024]" at="3"/>
  <insert-node tree="}: } [83023,83024]" parent="function_body [82900,83024]" at="4"/>
  <insert-node tree="{: { [83058,83059]" parent="function_body [83058,83268]" at="0"/>
  <move-tree tree="expression_statement [79641,79677]" parent="function_body [83058,83268]" at="1"/>
  <insert-tree tree="expression_statement [83135,83150]" parent="function_body [83058,83268]" at="2"/>
  <insert-tree tree="expression_statement [83159,83176]" parent="function_body [83058,83268]" at="3"/>
  <insert-tree tree="expression_statement [83185,83199]" parent="function_body [83058,83268]" at="4"/>
  <insert-node tree="emit_statement [83209,83262]" parent="function_body [83058,83268]" at="5"/>
  <insert-node tree="}: } [83267,83268]" parent="function_body [83058,83268]" at="6"/>
  <insert-node tree="{: { [83336,83337]" parent="function_body [83336,83430]" at="0"/>
  <insert-node tree="expression_statement [83346,83377]" parent="function_body [83336,83430]" at="1"/>
  <insert-node tree="emit_statement [83386,83424]" parent="function_body [83336,83430]" at="2"/>
  <insert-node tree="}: } [83429,83430]" parent="function_body [83336,83430]" at="3"/>
  <insert-node tree="return: return [17671,17677]" parent="return_statement [17671,17797]" at="0"/>
  <insert-node tree="call_expression [17690,17796]" parent="return_statement [17671,17797]" at="1"/>
  <move-tree tree="variable_declaration [76751,76767]" parent="variable_declaration_statement [18133,18182]" at="0"/>
  <insert-node tree="=: = [18156,18157]" parent="variable_declaration_statement [18133,18182]" at="1"/>
  <insert-node tree="call_expression [18158,18181]" parent="variable_declaration_statement [18133,18182]" at="2"/>
  <move-tree tree="variable_declaration [76769,76785]" parent="variable_declaration_statement [18191,18236]" at="0"/>
  <insert-node tree="=: = [18212,18213]" parent="variable_declaration_statement [18191,18236]" at="1"/>
  <insert-node tree="call_expression [18214,18235]" parent="variable_declaration_statement [18191,18236]" at="2"/>
  <insert-node tree="if: if [55483,55485]" parent="if_statement [55483,55559]" at="0"/>
  <insert-node tree="(: ( [55486,55487]" parent="if_statement [55483,55559]" at="1"/>
  <insert-tree tree="unary_expression [55487,55512]" parent="if_statement [55483,55559]" at="2"/>
  <insert-node tree="): ) [55512,55513]" parent="if_statement [55483,55559]" at="3"/>
  <insert-node tree="block_statement [55514,55559]" parent="if_statement [55483,55559]" at="4"/>
  <move-tree tree="call_expression [47846,47993]" parent="expression_statement [55673,55727]" at="0"/>
  <move-tree tree=",: , [47920,47921]" parent="call_expression [55673,55726]" at="8"/>
  <insert-node tree="call_expression [55736,55757]" parent="expression_statement [55736,55758]" at="0"/>
  <insert-node tree="call_expression [55996,56108]" parent="expression_statement [55996,56109]" at="0"/>
  <insert-node tree="call_expression [56205,56226]" parent="expression_statement [56205,56227]" at="0"/>
  <move-tree tree="call_expression [21154,21222]" parent="expression_statement [56236,56349]" at="0"/>
  <insert-node tree="call_expression [56461,56487]" parent="expression_statement [56461,56488]" at="0"/>
  <move-tree tree="call_expression [19904,19975]" parent="expression_statement [56711,56770]" at="0"/>
  <move-tree tree="variable_declaration [82320,82336]" parent="variable_declaration_statement [56948,57046]" at="0"/>
  <insert-node tree="=: = [56967,56968]" parent="variable_declaration_statement [56948,57046]" at="1"/>
  <insert-tree tree="call_expression [56969,57045]" parent="variable_declaration_statement [56948,57046]" at="2"/>
  <move-tree tree="variable_declaration [82302,82318]" parent="variable_declaration_statement [58286,58389]" at="0"/>
  <insert-node tree="=: = [58305,58306]" parent="variable_declaration_statement [58286,58389]" at="1"/>
  <insert-node tree="call_expression [58307,58388]" parent="variable_declaration_statement [58286,58389]" at="2"/>
  <insert-node tree="if: if [58947,58949]" parent="if_statement [58947,59066]" at="0"/>
  <insert-node tree="(: ( [58950,58951]" parent="if_statement [58947,59066]" at="1"/>
  <insert-tree tree="binary_expression [58951,58961]" parent="if_statement [58947,59066]" at="2"/>
  <insert-node tree="): ) [58961,58962]" parent="if_statement [58947,59066]" at="3"/>
  <insert-node tree="block_statement [58963,59066]" parent="if_statement [58947,59066]" at="4"/>
  <insert-node tree="if: if [59132,59134]" parent="if_statement [59132,59202]" at="0"/>
  <insert-node tree="(: ( [59135,59136]" parent="if_statement [59132,59202]" at="1"/>
  <insert-tree tree="binary_expression [59136,59146]" parent="if_statement [59132,59202]" at="2"/>
  <insert-node tree="): ) [59146,59147]" parent="if_statement [59132,59202]" at="3"/>
  <insert-node tree="block_statement [59148,59202]" parent="if_statement [59132,59202]" at="4"/>
  <insert-node tree="if: if [59272,59274]" parent="if_statement [59272,59366]" at="0"/>
  <insert-node tree="(: ( [59275,59276]" parent="if_statement [59272,59366]" at="1"/>
  <insert-tree tree="binary_expression [59276,59286]" parent="if_statement [59272,59366]" at="2"/>
  <insert-node tree="): ) [59286,59287]" parent="if_statement [59272,59366]" at="3"/>
  <insert-node tree="block_statement [59288,59366]" parent="if_statement [59272,59366]" at="4"/>
  <move-tree tree="call_expression [77166,77206]" parent="expression_statement [59438,59475]" at="0"/>
  <insert-node tree="call_expression [59484,59516]" parent="expression_statement [59484,59517]" at="0"/>
  <move-tree tree="variable_declaration [82487,82515]" parent="variable_declaration_statement [61354,61425]" at="0"/>
  <insert-node tree="=: = [61378,61379]" parent="variable_declaration_statement [61354,61425]" at="1"/>
  <move-tree tree="call_expression [75653,75723]" parent="variable_declaration_statement [61354,61425]" at="2"/>
  <insert-tree tree="call_expression [61434,61487]" parent="expression_statement [61434,61488]" at="0"/>
  <insert-tree tree="tuple_expression [61671,61677]" parent="variable_declaration_statement [61625,61678]" at="2"/>
  <move-tree tree="variable_declaration [82370,82402]" parent="variable_declaration_statement [61733,61777]" at="0"/>
  <insert-node tree="=: = [61757,61758]" parent="variable_declaration_statement [61733,61777]" at="1"/>
  <insert-tree tree="call_expression [61759,61776]" parent="variable_declaration_statement [61733,61777]" at="2"/>
  <move-tree tree="variable_declaration [81301,81320]" parent="variable_declaration_statement [61786,61824]" at="0"/>
  <insert-node tree="=: = [61807,61808]" parent="variable_declaration_statement [61786,61824]" at="1"/>
  <insert-tree tree="call_expression [61809,61823]" parent="variable_declaration_statement [61786,61824]" at="2"/>
  <insert-node tree="emit: emit [62058,62062]" parent="emit_statement [62058,62204]" at="0"/>
  <insert-node tree="identifier: CouponExpiration [62063,62079]" parent="emit_statement [62058,62204]" at="1"/>
  <insert-node tree="(: ( [62079,62080]" parent="emit_statement [62058,62204]" at="2"/>
  <insert-tree tree="call_argument [62093,62098]" parent="emit_statement [62058,62204]" at="3"/>
  <insert-node tree=",: , [62098,62099]" parent="emit_statement [62058,62204]" at="4"/>
  <insert-tree tree="call_argument [62112,62127]" parent="emit_statement [62058,62204]" at="5"/>
  <insert-node tree=",: , [62127,62128]" parent="emit_statement [62058,62204]" at="6"/>
  <insert-tree tree="call_argument [62141,62155]" parent="emit_statement [62058,62204]" at="7"/>
  <insert-node tree=",: , [62155,62156]" parent="emit_statement [62058,62204]" at="8"/>
  <move-tree tree="call_argument [21312,21313]" parent="emit_statement [62058,62204]" at="9"/>
  <insert-node tree=",: , [62170,62171]" parent="emit_statement [62058,62204]" at="10"/>
  <insert-tree tree="call_argument [62184,62193]" parent="emit_statement [62058,62204]" at="11"/>
  <insert-node tree="): ) [62202,62203]" parent="emit_statement [62058,62204]" at="12"/>
  <insert-node tree="call_expression [62314,62381]" parent="return_statement [62295,62382]" at="1"/>
  <insert-tree tree="call_expression [62651,62658]" parent="variable_declaration_statement [62635,62659]" at="2"/>
  <move-tree tree="variable_declaration [81185,81205]" parent="variable_declaration_statement [62668,62737]" at="0"/>
  <insert-node tree="=: = [62689,62690]" parent="variable_declaration_statement [62668,62737]" at="1"/>
  <insert-node tree="call_expression [62691,62736]" parent="variable_declaration_statement [62668,62737]" at="2"/>
  <insert-node tree="call_expression [63060,63129]" parent="expression_statement [63060,63130]" at="0"/>
  <insert-node tree="call_expression [63632,63683]" parent="expression_statement [63632,63684]" at="0"/>
  <update-node tree="identifier: Approval [22048,22056]" label="CouponApproval"/>
  <insert-tree tree="call_argument [63714,63724]" parent="emit_statement [63694,63743]" at="3"/>
  <move-tree tree="call_argument [20655,20661]" parent="emit_statement [63694,63743]" at="8"/>
  <insert-node tree="call_expression [64149,64294]" parent="expression_statement [64149,64295]" at="0"/>
  <insert-node tree="call_expression [64304,64355]" parent="expression_statement [64304,64356]" at="0"/>
  <insert-node tree="binary_expression [64383,64470]" parent="if_statement [64366,64677]" at="2"/>
  <update-node tree="identifier: Transfer [20055,20063]" label="CouponTransfer"/>
  <insert-tree tree="call_argument [64726,64731]" parent="emit_statement [64687,64741]" at="7"/>
  <insert-node tree=",: , [64731,64732]" parent="emit_statement [64687,64741]" at="8"/>
  <move-tree tree="variable_declaration [80390,80408]" parent="variable_declaration_statement [66332,66384]" at="0"/>
  <insert-node tree="=: = [66348,66349]" parent="variable_declaration_statement [66332,66384]" at="1"/>
  <insert-tree tree="call_expression [66350,66383]" parent="variable_declaration_statement [66332,66384]" at="2"/>
  <move-tree tree="variable_declaration [76825,76843]" parent="variable_declaration_statement [66393,66439]" at="0"/>
  <insert-node tree="=: = [66415,66416]" parent="variable_declaration_statement [66393,66439]" at="1"/>
  <insert-tree tree="call_expression [66417,66438]" parent="variable_declaration_statement [66393,66439]" at="2"/>
  <move-tree tree="variable_declaration [71512,71536]" parent="variable_declaration_statement [66730,66784]" at="0"/>
  <insert-node tree="=: = [66748,66749]" parent="variable_declaration_statement [66730,66784]" at="1"/>
  <insert-tree tree="call_expression [66750,66783]" parent="variable_declaration_statement [66730,66784]" at="2"/>
  <insert-node tree="memory: memory [67161,67167]" parent="parameter [67148,67167]" at="1"/>
  <insert-tree tree="variable_declaration [67183,67220]" parent="variable_declaration_statement [67183,67269]" at="0"/>
  <insert-node tree="variable_declaration_tuple [67725,67764]" parent="variable_declaration_statement [67725,67786]" at="0"/>
  <insert-tree tree="unary_expression [67911,67917]" parent="if_statement [67907,67964]" at="2"/>
  <insert-node tree="call_expression [70724,70788]" parent="expression_statement [70724,70789]" at="0"/>
  <move-tree tree="variable_declaration [65975,65994]" parent="variable_declaration_statement [71527,71683]" at="0"/>
  <insert-node tree="call_expression [71741,71768]" parent="expression_statement [71741,71769]" at="0"/>
  <insert-node tree="emit: emit [71918,71922]" parent="emit_statement [71918,71972]" at="0"/>
  <insert-node tree="identifier: Bond [71923,71927]" parent="emit_statement [71918,71972]" at="1"/>
  <insert-node tree="(: ( [71927,71928]" parent="emit_statement [71918,71972]" at="2"/>
  <insert-tree tree="call_argument [71928,71938]" parent="emit_statement [71918,71972]" at="3"/>
  <insert-node tree=",: , [71938,71939]" parent="emit_statement [71918,71972]" at="4"/>
  <insert-tree tree="call_argument [71940,71954]" parent="emit_statement [71918,71972]" at="5"/>
  <insert-node tree=",: , [71954,71955]" parent="emit_statement [71918,71972]" at="6"/>
  <insert-tree tree="call_argument [71956,71963]" parent="emit_statement [71918,71972]" at="7"/>
  <insert-node tree=",: , [71963,71964]" parent="emit_statement [71918,71972]" at="8"/>
  <move-tree tree="call_argument [80202,80207]" parent="emit_statement [71918,71972]" at="9"/>
  <insert-node tree="): ) [71970,71971]" parent="emit_statement [71918,71972]" at="10"/>
  <move-tree tree="variable_declaration [65552,65575]" parent="variable_declaration_statement [72095,72200]" at="0"/>
  <move-tree tree="call_expression [81323,81362]" parent="variable_declaration_statement [72095,72200]" at="2"/>
  <insert-node tree="call_expression [72263,72329]" parent="expression_statement [72263,72330]" at="0"/>
  <move-tree tree="variable_declaration [64893,64912]" parent="variable_declaration_statement [72628,72690]" at="0"/>
  <insert-node tree="call_expression [72752,72817]" parent="expression_statement [72752,72818]" at="0"/>
  <move-tree tree="call_argument [56619,56634]" parent="call_expression [72827,72945]" at="3"/>
  <update-node tree="identifier: Bond [80908,80912]" label="Unbond"/>
  <insert-tree tree="call_argument [72996,73003]" parent="emit_statement [72956,73012]" at="7"/>
  <insert-node tree=",: , [73003,73004]" parent="emit_statement [72956,73012]" at="8"/>
  <insert-node tree="if: if [78363,78365]" parent="if_statement [78363,78796]" at="0"/>
  <insert-node tree="(: ( [78366,78367]" parent="if_statement [78363,78796]" at="1"/>
  <insert-tree tree="unary_expression [78367,78390]" parent="if_statement [78363,78796]" at="2"/>
  <insert-node tree="): ) [78390,78391]" parent="if_statement [78363,78796]" at="3"/>
  <insert-node tree="block_statement [78392,78796]" parent="if_statement [78363,78796]" at="4"/>
  <move-tree tree="variable_declaration [71365,71401]" parent="variable_declaration_statement [78947,78986]" at="0"/>
  <move-tree tree="call_expression [81208,81237]" parent="variable_declaration_statement [78947,78986]" at="2"/>
  <insert-node tree="if: if [79137,79139]" parent="if_statement [79137,79335]" at="0"/>
  <insert-node tree="(: ( [79140,79141]" parent="if_statement [79137,79335]" at="1"/>
  <insert-tree tree="member_expression [79141,79178]" parent="if_statement [79137,79335]" at="2"/>
  <insert-node tree="): ) [79178,79179]" parent="if_statement [79137,79335]" at="3"/>
  <insert-node tree="block_statement [79180,79335]" parent="if_statement [79137,79335]" at="4"/>
  <insert-node tree="if: if [79344,79346]" parent="if_statement [79344,79545]" at="0"/>
  <insert-node tree="(: ( [79347,79348]" parent="if_statement [79344,79545]" at="1"/>
  <insert-tree tree="member_expression [79348,79386]" parent="if_statement [79344,79545]" at="2"/>
  <insert-node tree="): ) [79386,79387]" parent="if_statement [79344,79545]" at="3"/>
  <insert-node tree="block_statement [79388,79545]" parent="if_statement [79344,79545]" at="4"/>
  <move-tree tree="variable_declaration [64236,64259]" parent="variable_declaration_statement [80044,80139]" at="0"/>
  <insert-node tree="=: = [80062,80063]" parent="variable_declaration_statement [80044,80139]" at="1"/>
  <insert-tree tree="call_expression [80064,80138]" parent="variable_declaration_statement [80044,80139]" at="2"/>
  <insert-node tree="call_expression [80384,80609]" parent="expression_statement [80384,80610]" at="0"/>
  <insert-node tree="call_expression [80620,80746]" parent="expression_statement [80620,80747]" at="0"/>
  <update-node tree="identifier: Provide [82779,82786]" label="Commit"/>
  <insert-node tree="call_expression [80968,81116]" parent="expression_statement [80968,81117]" at="0"/>
  <update-node tree="identifier: Claim [80184,80189]" label="Commit"/>
  <insert-tree tree="call_argument [81557,81566]" parent="emit_statement [81533,81568]" at="5"/>
  <insert-node tree="if: if [81655,81657]" parent="if_statement [81655,81716]" at="0"/>
  <insert-node tree="(: ( [81658,81659]" parent="if_statement [81655,81716]" at="1"/>
  <insert-tree tree="binary_expression [81659,81677]" parent="if_statement [81655,81716]" at="2"/>
  <insert-node tree="): ) [81677,81678]" parent="if_statement [81655,81716]" at="3"/>
  <insert-node tree="block_statement [81679,81716]" parent="if_statement [81655,81716]" at="4"/>
  <insert-tree tree="variable_declaration [81726,81751]" parent="variable_declaration_statement [81726,81837]" at="0"/>
  <move-tree tree="call_expression [71404,71471]" parent="variable_declaration_statement [81726,81837]" at="2"/>
  <insert-node tree="emit: emit [83209,83213]" parent="emit_statement [83209,83262]" at="0"/>
  <insert-node tree="identifier: Advance [83214,83221]" parent="emit_statement [83209,83262]" at="1"/>
  <insert-node tree="(: ( [83221,83222]" parent="emit_statement [83209,83262]" at="2"/>
  <insert-tree tree="call_argument [83222,83229]" parent="emit_statement [83209,83262]" at="3"/>
  <insert-node tree=",: , [83229,83230]" parent="emit_statement [83209,83262]" at="4"/>
  <insert-tree tree="call_argument [83231,83243]" parent="emit_statement [83209,83262]" at="5"/>
  <insert-node tree=",: , [83243,83244]" parent="emit_statement [83209,83262]" at="6"/>
  <move-tree tree="call_argument [57979,58004]" parent="emit_statement [83209,83262]" at="7"/>
  <insert-node tree="): ) [83260,83261]" parent="emit_statement [83209,83262]" at="8"/>
  <insert-node tree="call_expression [83346,83376]" parent="expression_statement [83346,83377]" at="0"/>
  <insert-node tree="emit: emit [83386,83390]" parent="emit_statement [83386,83424]" at="0"/>
  <insert-node tree="identifier: Incentivization [83391,83406]" parent="emit_statement [83386,83424]" at="1"/>
  <insert-node tree="(: ( [83406,83407]" parent="emit_statement [83386,83424]" at="2"/>
  <move-tree tree="call_argument [21295,21302]" parent="emit_statement [83386,83424]" at="3"/>
  <insert-node tree=",: , [83414,83415]" parent="emit_statement [83386,83424]" at="4"/>
  <move-tree tree="call_argument [21316,21322]" parent="emit_statement [83386,83424]" at="5"/>
  <insert-node tree="): ) [83422,83423]" parent="emit_statement [83386,83424]" at="6"/>
  <insert-node tree="member_expression [17690,17794]" parent="call_expression [17690,17796]" at="0"/>
  <insert-node tree="(: ( [17794,17795]" parent="call_expression [17690,17796]" at="1"/>
  <insert-node tree="): ) [17795,17796]" parent="call_expression [17690,17796]" at="2"/>
  <update-node tree="identifier: reserveA [76759,76767]" label="totalSupplyEnd"/>
  <insert-tree tree="member_expression [18158,18173]" parent="call_expression [18158,18181]" at="0"/>
  <insert-node tree="(: ( [18173,18174]" parent="call_expression [18158,18181]" at="1"/>
  <move-tree tree="call_argument [74557,74563]" parent="call_expression [18158,18181]" at="2"/>
  <insert-node tree="): ) [18180,18181]" parent="call_expression [18158,18181]" at="3"/>
  <update-node tree="identifier: reserveB [76777,76785]" label="totalDebtEnd"/>
  <insert-tree tree="member_expression [18214,18227]" parent="call_expression [18214,18235]" at="0"/>
  <insert-node tree="(: ( [18227,18228]" parent="call_expression [18214,18235]" at="1"/>
  <move-tree tree="call_argument [73535,73541]" parent="call_expression [18214,18235]" at="2"/>
  <insert-node tree="): ) [18234,18235]" parent="call_expression [18214,18235]" at="3"/>
  <insert-node tree="member_expression [55443,55456]" parent="call_expression [55443,55473]" at="0"/>
  <insert-node tree="{: { [55514,55515]" parent="block_statement [55514,55559]" at="0"/>
  <insert-node tree="expression_statement [55528,55549]" parent="block_statement [55514,55559]" at="1"/>
  <insert-node tree="}: } [55558,55559]" parent="block_statement [55514,55559]" at="2"/>
  <move-tree tree="identifier: LibEIP712 [47846,47855]" parent="member_expression [55673,55694]" at="1"/>
  <move-tree tree="call_argument [26167,26174]" parent="call_expression [55673,55726]" at="2"/>
  <move-tree tree="call_argument [51013,51019]" parent="call_expression [55673,55726]" at="10"/>
  <insert-tree tree="member_expression [55736,55749]" parent="call_expression [55736,55757]" at="0"/>
  <insert-node tree="(: ( [55749,55750]" parent="call_expression [55736,55757]" at="1"/>
  <move-tree tree="call_argument [22924,22930]" parent="call_expression [55736,55757]" at="2"/>
  <insert-node tree="): ) [55756,55757]" parent="call_expression [55736,55757]" at="3"/>
  <insert-node tree="identifier: decrementTotalDebt [55767,55785]" parent="call_expression [55767,55837]" at="0"/>
  <move-tree tree="call_argument [73218,73224]" parent="call_expression [55767,55837]" at="3"/>
  <insert-tree tree="member_expression [55952,55969]" parent="call_expression [55952,55986]" at="0"/>
  <insert-node tree="identifier: decrementTotalRedeemable [55996,56020]" parent="call_expression [55996,56108]" at="0"/>
  <insert-node tree="(: ( [56020,56021]" parent="call_expression [55996,56108]" at="1"/>
  <move-tree tree="call_argument [73916,73922]" parent="call_expression [55996,56108]" at="2"/>
  <insert-node tree=",: , [56040,56041]" parent="call_expression [55996,56108]" at="3"/>
  <move-tree tree="call_argument [48748,48762]" parent="call_expression [55996,56108]" at="4"/>
  <insert-node tree="): ) [56107,56108]" parent="call_expression [55996,56108]" at="5"/>
  <insert-node tree="member_expression [56205,56218]" parent="call_expression [56205,56226]" at="0"/>
  <insert-node tree="(: ( [56218,56219]" parent="call_expression [56205,56226]" at="1"/>
  <move-tree tree="call_argument [73294,73300]" parent="call_expression [56205,56226]" at="2"/>
  <insert-node tree="): ) [56225,56226]" parent="call_expression [56205,56226]" at="3"/>
  <insert-node tree="identifier: decrementTotalRedeemable [56236,56260]" parent="call_expression [56236,56348]" at="0"/>
  <insert-node tree="identifier: incrementTotalDebt [56461,56479]" parent="call_expression [56461,56487]" at="0"/>
  <insert-node tree="(: ( [56479,56480]" parent="call_expression [56461,56487]" at="1"/>
  <move-tree tree="call_argument [16542,16548]" parent="call_expression [56461,56487]" at="2"/>
  <insert-node tree="): ) [56486,56487]" parent="call_expression [56461,56487]" at="3"/>
  <insert-node tree="identifier: decrementTotalDebt [56711,56729]" parent="call_expression [56711,56769]" at="0"/>
  <update-node tree="identifier: newUniv2 [82328,82336]" label="poolReward"/>
  <update-node tree="identifier: lessUsdc [82310,82318]" label="targetDebt"/>
  <insert-node tree="member_expression [58307,58386]" parent="call_expression [58307,58388]" at="0"/>
  <insert-node tree="(: ( [58386,58387]" parent="call_expression [58307,58388]" at="1"/>
  <insert-node tree="): ) [58387,58388]" parent="call_expression [58307,58388]" at="2"/>
  <insert-node tree="{: { [58963,58964]" parent="block_statement [58963,59066]" at="0"/>
  <insert-node tree="expression_statement [58977,59014]" parent="block_statement [58963,59066]" at="1"/>
  <insert-node tree="expression_statement [59027,59056]" parent="block_statement [58963,59066]" at="2"/>
  <insert-node tree="}: } [59065,59066]" parent="block_statement [58963,59066]" at="3"/>
  <insert-node tree="{: { [59148,59149]" parent="block_statement [59148,59202]" at="0"/>
  <insert-node tree="expression_statement [59162,59192]" parent="block_statement [59148,59202]" at="1"/>
  <insert-node tree="}: } [59201,59202]" parent="block_statement [59148,59202]" at="2"/>
  <insert-node tree="{: { [59288,59289]" parent="block_statement [59288,59366]" at="0"/>
  <insert-node tree="expression_statement [59302,59356]" parent="block_statement [59288,59366]" at="1"/>
  <insert-node tree="}: } [59365,59366]" parent="block_statement [59288,59366]" at="2"/>
  <insert-node tree=",: , [59465,59466]" parent="call_expression [59438,59474]" at="3"/>
  <move-tree tree="call_argument [17019,17025]" parent="call_expression [59438,59474]" at="4"/>
  <insert-node tree="identifier: incrementTotalRedeemable [59484,59508]" parent="call_expression [59484,59516]" at="0"/>
  <insert-node tree="(: ( [59508,59509]" parent="call_expression [59484,59516]" at="1"/>
  <move-tree tree="call_argument [17646,17652]" parent="call_expression [59484,59516]" at="2"/>
  <insert-node tree="): ) [59515,59516]" parent="call_expression [59484,59516]" at="3"/>
  <insert-node tree="uint256: uint256 [60911,60918]" parent="primitive_type [60911,60918]" at="0"/>
  <update-node tree="identifier: newPhantomFromBonded [82495,82515]" label="expirationEpoch"/>
  <update-node tree="identifier: totalRewardedWithPhantom [82378,82402]" label="totalRedeemable"/>
  <update-node tree="identifier: lessPhantom [81309,81320]" label="totalCoupons"/>
  <insert-node tree="identifier: calculateCouponPremium [62314,62336]" parent="call_expression [62314,62381]" at="0"/>
  <insert-node tree="(: ( [62336,62337]" parent="call_expression [62314,62381]" at="1"/>
  <insert-tree tree="call_argument [62337,62359]" parent="call_expression [62314,62381]" at="2"/>
  <insert-node tree=",: , [62359,62360]" parent="call_expression [62314,62381]" at="3"/>
  <insert-tree tree="call_argument [62361,62372]" parent="call_expression [62314,62381]" at="4"/>
  <insert-node tree=",: , [62372,62373]" parent="call_expression [62314,62381]" at="5"/>
  <move-tree tree="call_argument [74901,74907]" parent="call_expression [62314,62381]" at="6"/>
  <insert-node tree="): ) [62380,62381]" parent="call_expression [62314,62381]" at="7"/>
  <move-tree tree="member_expression [48704,48716]" parent="call_expression [62478,62547]" at="0"/>
  <move-tree tree="call_argument [48742,48746]" parent="call_expression [62478,62547]" at="5"/>
  <insert-node tree=",: , [62513,62514]" parent="call_expression [62478,62547]" at="5"/>
  <move-tree tree="call_argument [22447,22485]" parent="call_expression [62558,62624]" at="6"/>
  <update-node tree="identifier: balanceOfBonded [81049,81064]" label="epoch"/>
  <update-node tree="identifier: newClaimable [81193,81205]" label="couponAmount"/>
  <insert-tree tree="member_expression [62691,62707]" parent="call_expression [62691,62736]" at="0"/>
  <insert-node tree="(: ( [62707,62708]" parent="call_expression [62691,62736]" at="1"/>
  <insert-node tree="call_argument [62708,62735]" parent="call_expression [62691,62736]" at="2"/>
  <insert-node tree="): ) [62735,62736]" parent="call_expression [62691,62736]" at="3"/>
  <update-node tree="identifier: incrementBalanceOfPhantom [82668,82693]" label="burnFromAccount"/>
  <move-tree tree="call_argument [77058,77070]" parent="call_expression [62746,62787]" at="4"/>
  <update-node tree="identifier: incrementBalanceOfBonded [82612,82636]" label="incrementBalanceOfCoupons"/>
  <insert-node tree=",: , [62840,62841]" parent="call_expression [62797,62855]" at="5"/>
  <insert-tree tree="call_argument [62842,62854]" parent="call_expression [62797,62855]" at="6"/>
  <insert-node tree="identifier: require [63060,63067]" parent="call_expression [63060,63129]" at="0"/>
  <insert-node tree="(: ( [63067,63068]" parent="call_expression [63060,63129]" at="1"/>
  <insert-tree tree="call_argument [63068,63097]" parent="call_expression [63060,63129]" at="2"/>
  <insert-node tree=",: , [63097,63098]" parent="call_expression [63060,63129]" at="3"/>
  <move-tree tree="call_argument [20465,20498]" parent="call_expression [63060,63129]" at="4"/>
  <insert-node tree="): ) [63128,63129]" parent="call_expression [63060,63129]" at="5"/>
  <update-node tree="identifier: require [21055,21062]" label="decrementBalanceOfCoupons"/>
  <move-tree tree="call_argument [78615,78625]" parent="call_expression [63139,63300]" at="2"/>
  <insert-tree tree="call_argument [63202,63213]" parent="call_expression [63139,63300]" at="4"/>
  <insert-node tree=",: , [63213,63214]" parent="call_expression [63139,63300]" at="5"/>
  <insert-tree tree="call_argument [63227,63239]" parent="call_expression [63139,63300]" at="6"/>
  <insert-node tree=",: , [63239,63240]" parent="call_expression [63139,63300]" at="7"/>
  <insert-node tree="identifier: updateAllowanceCoupons [63632,63654]" parent="call_expression [63632,63683]" at="0"/>
  <insert-node tree="(: ( [63654,63655]" parent="call_expression [63632,63683]" at="1"/>
  <insert-tree tree="call_argument [63655,63665]" parent="call_expression [63632,63683]" at="2"/>
  <insert-node tree=",: , [63665,63666]" parent="call_expression [63632,63683]" at="3"/>
  <move-tree tree="call_argument [48847,48854]" parent="call_expression [63632,63683]" at="4"/>
  <insert-node tree=",: , [63674,63675]" parent="call_expression [63632,63683]" at="5"/>
  <move-tree tree="call_argument [73631,73637]" parent="call_expression [63632,63683]" at="6"/>
  <insert-node tree="): ) [63682,63683]" parent="call_expression [63632,63683]" at="7"/>
  <insert-node tree="identifier: decrementBalanceOfCoupons [64149,64174]" parent="call_expression [64149,64294]" at="0"/>
  <insert-node tree="(: ( [64174,64175]" parent="call_expression [64149,64294]" at="1"/>
  <move-tree tree="call_argument [50994,51000]" parent="call_expression [64149,64294]" at="2"/>
  <insert-node tree=",: , [64194,64195]" parent="call_expression [64149,64294]" at="3"/>
  <insert-tree tree="call_argument [64208,64213]" parent="call_expression [64149,64294]" at="4"/>
  <insert-node tree=",: , [64213,64214]" parent="call_expression [64149,64294]" at="5"/>
  <move-tree tree="call_argument [22351,22357]" parent="call_expression [64149,64294]" at="6"/>
  <insert-node tree=",: , [64233,64234]" parent="call_expression [64149,64294]" at="7"/>
  <move-tree tree="call_argument [48673,48692]" parent="call_expression [64149,64294]" at="8"/>
  <insert-node tree="): ) [64293,64294]" parent="call_expression [64149,64294]" at="9"/>
  <insert-node tree="identifier: incrementBalanceOfCoupons [64304,64329]" parent="call_expression [64304,64355]" at="0"/>
  <insert-node tree="(: ( [64329,64330]" parent="call_expression [64304,64355]" at="1"/>
  <move-tree tree="call_argument [51002,51011]" parent="call_expression [64304,64355]" at="2"/>
  <insert-node tree=",: , [64339,64340]" parent="call_expression [64304,64355]" at="3"/>
  <insert-tree tree="call_argument [64341,64346]" parent="call_expression [64304,64355]" at="4"/>
  <insert-node tree=",: , [64346,64347]" parent="call_expression [64304,64355]" at="5"/>
  <move-tree tree="call_argument [74253,74259]" parent="call_expression [64304,64355]" at="6"/>
  <insert-node tree="): ) [64354,64355]" parent="call_expression [64304,64355]" at="7"/>
  <insert-node tree="binary_expression [64383,64403]" parent="binary_expression [64383,64470]" at="0"/>
  <insert-node tree="&amp;&amp;: &amp;&amp; [64404,64406]" parent="binary_expression [64383,64470]" at="1"/>
  <move-tree tree="binary_expression [51034,51080]" parent="binary_expression [64383,64470]" at="2"/>
  <update-node tree="identifier: updatePrice [64870,64881]" label="oracleCapture"/>
  <update-node tree="identifier: newPhantom [80398,80408]" label="newDebt"/>
  <update-node tree="identifier: usdcAmount [76833,76843]" label="cappedNewDebt"/>
  <update-node tree="identifier: totalRewardedWithPhantom [80318,80342]" label="lessDebt"/>
  <insert-node tree="identifier: resetDebt [66618,66627]" parent="call_expression [66618,66643]" at="0"/>
  <update-node tree="identifier: balanceOfPhantom [71520,71536]" label="newSupply"/>
  <insert-node tree="identifier: increaseSupply [66838,66852]" parent="call_expression [66838,66863]" at="0"/>
  <insert-tree tree="user_defined_type [67148,67160]" parent="type_name [67148,67160]" at="0"/>
  <insert-tree tree="member_expression [67223,67266]" parent="call_expression [67223,67268]" at="0"/>
  <update-node tree="identifier: totalBonded [71183,71194]" label="totalRedeemable"/>
  <update-node tree="identifier: totalBonded [71197,71208]" label="totalRedeemable"/>
  <update-node tree="identifier: totalRewardedWithPhantom [71293,71317]" label="totalCoupons"/>
  <insert-node tree="identifier: totalCoupons [67355,67367]" parent="call_expression [67355,67369]" at="0"/>
  <insert-node tree="(: ( [67725,67726]" parent="variable_declaration_tuple [67725,67764]" at="0"/>
  <move-tree tree="variable_declaration [65661,65686]" parent="variable_declaration_tuple [67725,67764]" at="1"/>
  <insert-node tree=",: , [67751,67752]" parent="variable_declaration_tuple [67725,67764]" at="2"/>
  <move-tree tree="variable_declaration [64941,64951]" parent="variable_declaration_tuple [67725,67764]" at="3"/>
  <insert-node tree="): ) [67763,67764]" parent="variable_declaration_tuple [67725,67764]" at="4"/>
  <move-tree tree="member_expression [107457,107471]" parent="call_expression [67767,67785]" at="0"/>
  <move-tree tree="member_expression [48774,48786]" parent="call_expression [70724,70788]" at="0"/>
  <insert-node tree="(: ( [70736,70737]" parent="call_expression [70724,70788]" at="1"/>
  <insert-tree tree="call_argument [70737,70758]" parent="call_expression [70724,70788]" at="2"/>
  <insert-node tree=",: , [70758,70759]" parent="call_expression [70724,70788]" at="3"/>
  <move-tree tree="call_argument [48804,48808]" parent="call_expression [70724,70788]" at="4"/>
  <insert-node tree=",: , [70764,70765]" parent="call_expression [70724,70788]" at="5"/>
  <move-tree tree="call_argument [19090,19129]" parent="call_expression [70724,70788]" at="6"/>
  <insert-node tree="): ) [70787,70788]" parent="call_expression [70724,70788]" at="7"/>
  <update-node tree="identifier: lastReserve [65983,65994]" label="balance"/>
  <update-node tree="identifier: incrementBalanceOfClaimable [81469,81496]" label="incrementBalanceOf"/>
  <insert-node tree="identifier: incrementTotalBonded [71741,71761]" parent="call_expression [71741,71768]" at="0"/>
  <insert-node tree="(: ( [71761,71762]" parent="call_expression [71741,71768]" at="1"/>
  <move-tree tree="call_argument [48856,48861]" parent="call_expression [71741,71768]" at="2"/>
  <insert-node tree="): ) [71767,71768]" parent="call_expression [71741,71768]" at="3"/>
  <update-node tree="identifier: priceCumulative [65560,65575]" label="staged"/>
  <update-node tree="identifier: decrementBalanceOfClaimable [80011,80038]" label="incrementBalanceOfStaged"/>
  <insert-tree tree="call_argument [72246,72252]" parent="call_expression [72209,72253]" at="4"/>
  <insert-node tree="identifier: decrementTotalBonded [72263,72283]" parent="call_expression [72263,72329]" at="0"/>
  <insert-node tree="(: ( [72283,72284]" parent="call_expression [72263,72329]" at="1"/>
  <insert-tree tree="call_argument [72284,72290]" parent="call_expression [72263,72329]" at="2"/>
  <insert-node tree=",: , [72290,72291]" parent="call_expression [72263,72329]" at="3"/>
  <move-tree tree="call_argument [17740,17782]" parent="call_expression [72263,72329]" at="4"/>
  <insert-node tree="): ) [72328,72329]" parent="call_expression [72263,72329]" at="5"/>
  <insert-node tree="identifier: decrementBalanceOf [72339,72357]" parent="call_expression [72339,72409]" at="0"/>
  <move-tree tree="call_argument [80654,80664]" parent="call_expression [72339,72409]" at="3"/>
  <move-tree tree="call_argument [80666,80671]" parent="call_expression [72339,72409]" at="6"/>
  <update-node tree="identifier: newClaimable [81885,81897]" label="staged"/>
  <update-node tree="identifier: lastReserve [64901,64912]" label="balance"/>
  <insert-node tree="identifier: decrementTotalBonded [72752,72772]" parent="call_expression [72752,72817]" at="0"/>
  <insert-node tree="(: ( [72772,72773]" parent="call_expression [72752,72817]" at="1"/>
  <move-tree tree="call_argument [80076,80081]" parent="call_expression [72752,72817]" at="2"/>
  <insert-node tree=",: , [72778,72779]" parent="call_expression [72752,72817]" at="3"/>
  <move-tree tree="call_argument [56276,56313]" parent="call_expression [72752,72817]" at="4"/>
  <insert-node tree="): ) [72816,72817]" parent="call_expression [72752,72817]" at="5"/>
  <update-node tree="identifier: require [56611,56618]" label="decrementBalanceOf"/>
  <move-tree tree="call_argument [80708,80718]" parent="call_expression [72827,72945]" at="2"/>
  <insert-node tree=",: , [72890,72891]" parent="call_expression [72827,72945]" at="5"/>
  <move-tree tree="call_argument [82179,82217]" parent="call_expression [78288,78352]" at="2"/>
  <insert-node tree="{: { [78392,78393]" parent="block_statement [78392,78796]" at="0"/>
  <insert-node tree="expression_statement [78406,78542]" parent="block_statement [78392,78796]" at="1"/>
  <insert-tree tree="expression_statement [78556,78616]" parent="block_statement [78392,78796]" at="2"/>
  <insert-tree tree="emit_statement [78629,78786]" parent="block_statement [78392,78796]" at="3"/>
  <insert-node tree="}: } [78795,78796]" parent="block_statement [78392,78796]" at="4"/>
  <update-node tree="identifier: balanceOfRewardedWithPhantom [71373,71401]" label="bonded"/>
  <update-node tree="identifier: balanceOfRewarded [81208,81225]" label="balanceOf"/>
  <insert-node tree="{: { [79180,79181]" parent="block_statement [79180,79335]" at="0"/>
  <move-tree tree="expression_statement [25872,25956]" parent="block_statement [79180,79335]" at="1"/>
  <insert-node tree="}: } [79334,79335]" parent="block_statement [79180,79335]" at="2"/>
  <insert-node tree="{: { [79388,79389]" parent="block_statement [79388,79545]" at="0"/>
  <move-tree tree="expression_statement [25164,25229]" parent="block_statement [79388,79545]" at="1"/>
  <insert-node tree="}: } [79544,79545]" parent="block_statement [79388,79545]" at="2"/>
  <update-node tree="identifier: decrementBalanceOfPhantom [81668,81693]" label="recordVote"/>
  <insert-tree tree="call_argument [79803,79807]" parent="call_expression [79769,79808]" at="6"/>
  <update-node tree="identifier: decrementBalanceOfBonded [81532,81556]" label="placeLock"/>
  <update-node tree="identifier: priceCumulative [64244,64259]" label="endsAfter"/>
  <insert-tree tree="call_argument [80162,80181]" parent="call_expression [80149,80201]" at="2"/>
  <insert-tree tree="member_expression [80384,80396]" parent="call_expression [80384,80609]" at="0"/>
  <insert-node tree="(: ( [80396,80397]" parent="call_expression [80384,80609]" at="1"/>
  <insert-tree tree="call_argument [80410,80549]" parent="call_expression [80384,80609]" at="2"/>
  <insert-node tree=",: , [80549,80550]" parent="call_expression [80384,80609]" at="3"/>
  <insert-tree tree="call_argument [80563,80567]" parent="call_expression [80384,80609]" at="4"/>
  <insert-node tree=",: , [80567,80568]" parent="call_expression [80384,80609]" at="5"/>
  <move-tree tree="call_argument [81756,81792]" parent="call_expression [80384,80609]" at="6"/>
  <insert-node tree="): ) [80608,80609]" parent="call_expression [80384,80609]" at="7"/>
  <insert-tree tree="member_expression [80620,80632]" parent="call_expression [80620,80746]" at="0"/>
  <insert-node tree="(: ( [80632,80633]" parent="call_expression [80620,80746]" at="1"/>
  <insert-tree tree="call_argument [80646,80690]" parent="call_expression [80620,80746]" at="2"/>
  <insert-node tree=",: , [80690,80691]" parent="call_expression [80620,80746]" at="3"/>
  <insert-tree tree="call_argument [80704,80708]" parent="call_expression [80620,80746]" at="4"/>
  <insert-node tree=",: , [80708,80709]" parent="call_expression [80620,80746]" at="5"/>
  <move-tree tree="call_argument [81613,81648]" parent="call_expression [80620,80746]" at="6"/>
  <insert-node tree="): ) [80745,80746]" parent="call_expression [80620,80746]" at="7"/>
  <update-node tree="identifier: value [82799,82804]" label="candidate"/>
  <move-tree tree="member_expression [66510,66522]" parent="call_expression [80968,81116]" at="0"/>
  <insert-node tree="(: ( [80980,80981]" parent="call_expression [80968,81116]" at="1"/>
  <insert-node tree="call_argument [80994,81060]" parent="call_expression [80968,81116]" at="2"/>
  <insert-node tree=",: , [81060,81061]" parent="call_expression [80968,81116]" at="3"/>
  <move-tree tree="call_argument [66543,66547]" parent="call_expression [80968,81116]" at="4"/>
  <insert-node tree=",: , [81078,81079]" parent="call_expression [80968,81116]" at="5"/>
  <move-tree tree="call_argument [80095,80133]" parent="call_expression [80968,81116]" at="6"/>
  <insert-node tree="): ) [81115,81116]" parent="call_expression [80968,81116]" at="7"/>
  <insert-node tree="{: { [81679,81680]" parent="block_statement [81679,81716]" at="0"/>
  <insert-node tree="return_statement [81693,81706]" parent="block_statement [81679,81716]" at="1"/>
  <insert-node tree="}: } [81715,81716]" parent="block_statement [81679,81716]" at="2"/>
  <move-tree tree="member_expression [65689,65702]" parent="call_expression [81754,81836]" at="0"/>
  <insert-node tree=",: , [81799,81800]" parent="call_expression [81754,81836]" at="3"/>
  <insert-tree tree="call_argument [81813,81826]" parent="call_expression [81754,81836]" at="4"/>
  <insert-node tree="identifier: incentivize [82938,82949]" parent="call_expression [82938,82994]" at="0"/>
  <insert-tree tree="call_argument [82962,82993]" parent="call_expression [82938,82994]" at="4"/>
  <insert-node tree="identifier: incentivize [83068,83079]" parent="call_expression [83068,83124]" at="0"/>
  <move-tree tree="member_expression [57979,57994]" parent="call_argument [83245,83260]" at="0"/>
  <insert-node tree="identifier: mintToAccount [83346,83359]" parent="call_expression [83346,83376]" at="0"/>
  <insert-node tree="(: ( [83359,83360]" parent="call_expression [83346,83376]" at="1"/>
  <move-tree tree="call_argument [26340,26347]" parent="call_expression [83346,83376]" at="2"/>
  <insert-node tree=",: , [83367,83368]" parent="call_expression [83346,83376]" at="3"/>
  <move-tree tree="call_argument [75191,75197]" parent="call_expression [83346,83376]" at="4"/>
  <insert-node tree="): ) [83375,83376]" parent="call_expression [83346,83376]" at="5"/>
  <insert-node tree="call_expression [17690,17767]" parent="member_expression [17690,17794]" at="0"/>
  <insert-node tree=".: . [17784,17785]" parent="member_expression [17690,17794]" at="1"/>
  <insert-node tree="identifier: asUint256 [17785,17794]" parent="member_expression [17690,17794]" at="2"/>
  <move-tree tree="call_expression [107437,107445]" parent="member_expression [55443,55456]" at="0"/>
  <insert-node tree=".: . [55451,55452]" parent="member_expression [55443,55456]" at="1"/>
  <insert-node tree="identifier: mint [55452,55456]" parent="member_expression [55443,55456]" at="2"/>
  <insert-node tree="call_expression [55528,55548]" parent="expression_statement [55528,55549]" at="0"/>
  <insert-tree tree="call_expression [55673,55681]" parent="member_expression [55673,55694]" at="0"/>
  <update-node tree="identifier: LibEIP712 [47846,47855]" label="transferFrom"/>
  <move-tree tree="call_expression [107755,107763]" parent="member_expression [56205,56218]" at="0"/>
  <insert-node tree=".: . [56213,56214]" parent="member_expression [56205,56218]" at="1"/>
  <insert-node tree="identifier: burn [56214,56218]" parent="member_expression [56205,56218]" at="2"/>
  <insert-node tree="call_expression [58307,58363]" parent="member_expression [58307,58386]" at="0"/>
  <insert-node tree=".: . [58376,58377]" parent="member_expression [58307,58386]" at="1"/>
  <insert-node tree="identifier: asUint256 [58377,58386]" parent="member_expression [58307,58386]" at="2"/>
  <move-tree tree="call_expression [83121,83153]" parent="expression_statement [58977,59014]" at="0"/>
  <insert-node tree="call_expression [59027,59055]" parent="expression_statement [59027,59056]" at="0"/>
  <insert-node tree="call_expression [59162,59191]" parent="expression_statement [59162,59192]" at="0"/>
  <insert-node tree="call_expression [59302,59355]" parent="expression_statement [59302,59356]" at="0"/>
  <update-node tree="identifier: reserve0 [77484,77492]" label="lessRedeemable"/>
  <update-node tree="identifier: reserve1 [77502,77510]" label="newBonded"/>
  <insert-node tree="call_expression [62708,62735]" parent="call_argument [62708,62735]" at="0"/>
  <update-node tree="identifier: newUniv2 [82649,82657]" label="epoch"/>
  <move-tree tree="member_expression [10987,10997]" parent="binary_expression [64383,64403]" at="0"/>
  <insert-node tree="!=: != [64394,64396]" parent="binary_expression [64383,64403]" at="1"/>
  <insert-node tree="identifier: sender [64397,64403]" parent="binary_expression [64383,64403]" at="2"/>
  <move-tree tree="call_expression [51176,51322]" parent="expression_statement [64495,64667]" at="0"/>
  <move-tree tree="call_argument [51233,51239]" parent="call_expression [64495,64666]" at="3"/>
  <update-node tree="identifier: price0Cumulative [65297,65313]" label="newRedeemable"/>
  <update-node tree="identifier: price1Cumulative [65335,65351]" label="newBonded"/>
  <insert-node tree="identifier: newSupply [66853,66862]" parent="call_argument [66853,66862]" at="0"/>
  <update-node tree="identifier: setup [107466,107471]" label="capture"/>
  <move-tree tree="call_expression [64109,64122]" parent="return_statement [67933,67954]" at="1"/>
  <move-tree tree="ternary_expression [80444,80549]" parent="member_expression [71545,71667]" at="0"/>
  <update-node tree="identifier: newClaimable [81509,81521]" label="balance"/>
  <insert-node tree="call_expression [72112,72150]" parent="member_expression [72112,72154]" at="0"/>
  <update-node tree="identifier: mul [81352,81355]" label="div"/>
  <move-tree tree="call_expression [81323,81351]" parent="call_argument [72168,72189]" at="0"/>
  <insert-node tree="identifier: balance [72883,72890]" parent="call_argument [72883,72890]" at="0"/>
  <insert-node tree="call_expression [78406,78541]" parent="expression_statement [78406,78542]" at="0"/>
  <insert-tree tree="call_expression [78832,78887]" parent="call_argument [78832,78887]" at="0"/>
  <update-node tree="identifier: lessPhantom [81731,81742]" label="candidate"/>
  <update-node tree="identifier: value [81594,81599]" label="candidate"/>
  <insert-tree tree="call_expression [79987,80009]" parent="call_argument [79987,80009]" at="0"/>
  <insert-node tree="call_expression [80238,80322]" parent="call_argument [80238,80322]" at="0"/>
  <insert-tree tree="call_expression [80911,80933]" parent="call_argument [80911,80933]" at="0"/>
  <insert-node tree="call_expression [80994,81060]" parent="call_argument [80994,81060]" at="0"/>
  <insert-tree tree="call_expression [81153,81286]" parent="call_argument [81153,81286]" at="0"/>
  <insert-node tree="return: return [81693,81699]" parent="return_statement [81693,81706]" at="0"/>
  <move-tree tree="boolean_literal [64124,64129]" parent="return_statement [81693,81706]" at="1"/>
  <insert-tree tree="call_expression [83092,83123]" parent="call_argument [83092,83123]" at="0"/>
  <insert-node tree="member_expression [17690,17759]" parent="call_expression [17690,17767]" at="0"/>
  <insert-node tree="(: ( [17759,17760]" parent="call_expression [17690,17767]" at="1"/>
  <move-tree tree="call_argument [17732,17738]" parent="call_expression [17690,17767]" at="2"/>
  <insert-node tree="): ) [17766,17767]" parent="call_expression [17690,17767]" at="3"/>
  <insert-node tree="identifier: increaseDebt [55528,55540]" parent="call_expression [55528,55548]" at="0"/>
  <insert-node tree="(: ( [55540,55541]" parent="call_expression [55528,55548]" at="1"/>
  <move-tree tree="call_argument [20033,20039]" parent="call_expression [55528,55548]" at="2"/>
  <insert-node tree="): ) [55547,55548]" parent="call_expression [55528,55548]" at="3"/>
  <insert-tree tree="member_expression [58307,58339]" parent="call_expression [58307,58363]" at="0"/>
  <insert-node tree="(: ( [58339,58340]" parent="call_expression [58307,58363]" at="1"/>
  <move-tree tree="call_argument [76722,76730]" parent="call_expression [58307,58363]" at="2"/>
  <insert-node tree="): ) [58362,58363]" parent="call_expression [58307,58363]" at="3"/>
  <insert-node tree=",: , [59004,59005]" parent="call_expression [58977,59013]" at="3"/>
  <move-tree tree="call_argument [20542,20548]" parent="call_expression [58977,59013]" at="4"/>
  <insert-node tree="identifier: incrementTotalBonded [59027,59047]" parent="call_expression [59027,59055]" at="0"/>
  <insert-node tree="(: ( [59047,59048]" parent="call_expression [59027,59055]" at="1"/>
  <move-tree tree="call_argument [20603,20609]" parent="call_expression [59027,59055]" at="2"/>
  <insert-node tree="): ) [59054,59055]" parent="call_expression [59027,59055]" at="3"/>
  <insert-tree tree="member_expression [59162,59175]" parent="call_expression [59162,59191]" at="0"/>
  <insert-node tree="(: ( [59175,59176]" parent="call_expression [59162,59191]" at="1"/>
  <insert-tree tree="call_argument [59176,59182]" parent="call_expression [59162,59191]" at="2"/>
  <insert-node tree=",: , [59182,59183]" parent="call_expression [59162,59191]" at="3"/>
  <move-tree tree="call_argument [21264,21270]" parent="call_expression [59162,59191]" at="4"/>
  <insert-node tree="): ) [59190,59191]" parent="call_expression [59162,59191]" at="5"/>
  <insert-tree tree="member_expression [59302,59315]" parent="call_expression [59302,59355]" at="0"/>
  <insert-node tree="(: ( [59315,59316]" parent="call_expression [59302,59355]" at="1"/>
  <insert-tree tree="call_argument [59316,59346]" parent="call_expression [59302,59355]" at="2"/>
  <insert-node tree=",: , [59346,59347]" parent="call_expression [59302,59355]" at="3"/>
  <move-tree tree="call_argument [73840,73846]" parent="call_expression [59302,59355]" at="4"/>
  <insert-node tree="): ) [59354,59355]" parent="call_expression [59302,59355]" at="5"/>
  <update-node tree="identifier: IUniswapV2Pair [77166,77180]" label="dollar"/>
  <update-node tree="identifier: owner [21848,21853]" label="dollarAmount"/>
  <insert-node tree="&gt;: &gt; [62504,62505]" parent="binary_expression [62491,62507]" at="1"/>
  <insert-node tree="number_literal: 0 [62506,62507]" parent="binary_expression [62491,62507]" at="2"/>
  <insert-tree tree="call_expression [62571,62582]" parent="binary_expression [62571,62598]" at="0"/>
  <insert-node tree="&gt;=: &gt;= [62583,62585]" parent="binary_expression [62571,62598]" at="1"/>
  <update-node tree="identifier: recovered [48647,48656]" label="dollarAmount"/>
  <insert-node tree="identifier: couponPremium [62708,62721]" parent="call_expression [62708,62735]" at="0"/>
  <insert-node tree="(: ( [62721,62722]" parent="call_expression [62708,62735]" at="1"/>
  <move-tree tree="call_argument [76943,76955]" parent="call_expression [62708,62735]" at="2"/>
  <insert-node tree="): ) [62734,62735]" parent="call_expression [62708,62735]" at="3"/>
  <update-node tree="identifier: allowance [51034,51043]" label="allowanceCoupons"/>
  <insert-node tree="identifier: decrementAllowanceCoupons [64495,64520]" parent="call_expression [64495,64666]" at="0"/>
  <move-tree tree="call_argument [51122,51128]" parent="call_expression [64495,64666]" at="3"/>
  <insert-tree tree="call_argument [64562,64572]" parent="call_expression [64495,64666]" at="4"/>
  <insert-node tree=",: , [64572,64573]" parent="call_expression [64495,64666]" at="5"/>
  <insert-node tree=",: , [64596,64597]" parent="call_expression [64495,64666]" at="7"/>
  <insert-tree tree="member_expression [66628,66640]" parent="call_expression [66628,66642]" at="0"/>
  <update-node tree="identifier: univ2 [79379,79384]" label="dollar"/>
  <move-tree tree="binary_expression [80411,80429]" parent="ternary_expression [71545,71663]" at="0"/>
  <insert-tree tree="call_expression [71639,71663]" parent="ternary_expression [71545,71663]" at="4"/>
  <insert-tree tree="member_expression [72112,72121]" parent="call_expression [72112,72150]" at="0"/>
  <insert-node tree="(: ( [72121,72122]" parent="call_expression [72112,72150]" at="1"/>
  <insert-node tree="call_argument [72122,72149]" parent="call_expression [72112,72150]" at="2"/>
  <insert-node tree="): ) [72149,72150]" parent="call_expression [72112,72150]" at="3"/>
  <update-node tree="identifier: balanceOfPhantom [81323,81339]" label="balanceOf"/>
  <insert-node tree="&gt;: &gt; [78323,78324]" parent="binary_expression [78301,78326]" at="1"/>
  <insert-node tree="number_literal: 0 [78325,78326]" parent="binary_expression [78301,78326]" at="2"/>
  <insert-tree tree="member_expression [78406,78418]" parent="call_expression [78406,78541]" at="0"/>
  <insert-node tree="(: ( [78418,78419]" parent="call_expression [78406,78541]" at="1"/>
  <insert-tree tree="call_argument [78436,78458]" parent="call_expression [78406,78541]" at="2"/>
  <insert-node tree=",: , [78458,78459]" parent="call_expression [78406,78541]" at="3"/>
  <insert-tree tree="call_argument [78476,78480]" parent="call_expression [78406,78541]" at="4"/>
  <insert-node tree=",: , [78480,78481]" parent="call_expression [78406,78541]" at="5"/>
  <move-tree tree="call_argument [24940,24973]" parent="call_expression [78406,78541]" at="6"/>
  <insert-node tree="): ) [78540,78541]" parent="call_expression [78406,78541]" at="7"/>
  <update-node tree="identifier: require [25872,25879]" label="decrementRejectFor"/>
  <insert-tree tree="call_argument [79230,79239]" parent="call_expression [79194,79324]" at="2"/>
  <insert-tree tree="call_argument [79257,79263]" parent="call_expression [79194,79324]" at="4"/>
  <insert-node tree=",: , [79263,79264]" parent="call_expression [79194,79324]" at="5"/>
  <update-node tree="identifier: require [25164,25171]" label="decrementApproveFor"/>
  <insert-tree tree="call_argument [79439,79448]" parent="call_expression [79402,79534]" at="2"/>
  <insert-tree tree="call_argument [79466,79472]" parent="call_expression [79402,79534]" at="4"/>
  <insert-node tree=",: , [79472,79473]" parent="call_expression [79402,79534]" at="5"/>
  <insert-node tree="member_expression [80238,80285]" parent="call_expression [80238,80322]" at="0"/>
  <insert-node tree="(: ( [80285,80286]" parent="call_expression [80238,80322]" at="1"/>
  <insert-tree tree="call_argument [80286,80321]" parent="call_expression [80238,80322]" at="2"/>
  <insert-node tree="): ) [80321,80322]" parent="call_expression [80238,80322]" at="3"/>
  <move-tree tree="member_expression [71872,71918]" parent="call_expression [80994,81060]" at="0"/>
  <insert-node tree="(: ( [81019,81020]" parent="call_expression [80994,81060]" at="1"/>
  <insert-tree tree="call_argument [81020,81059]" parent="call_expression [80994,81060]" at="2"/>
  <insert-node tree="): ) [81059,81060]" parent="call_expression [80994,81060]" at="3"/>
  <insert-tree tree="call_expression [81391,81412]" parent="binary_expression [81391,81435]" at="0"/>
  <insert-node tree="&gt;: &gt; [81413,81414]" parent="binary_expression [81391,81435]" at="1"/>
  <insert-tree tree="call_expression [81415,81435]" parent="binary_expression [81391,81435]" at="2"/>
  <update-node tree="identifier: balanceOfBonded [71446,71461]" label="balanceOf"/>
  <insert-node tree="call_expression [17690,17738]" parent="member_expression [17690,17759]" at="0"/>
  <insert-node tree=".: . [17755,17756]" parent="member_expression [17690,17759]" at="1"/>
  <insert-node tree="identifier: mul [17756,17759]" parent="member_expression [17690,17759]" at="2"/>
  <insert-node tree="call_expression [58340,58362]" parent="call_argument [58340,58362]" at="0"/>
  <move-tree tree="call_expression [70363,70418]" parent="member_expression [58708,58797]" at="0"/>
  <update-node tree="identifier: balanceOf [83129,83138]" label="mint"/>
  <update-node tree="identifier: getPoolExitLockupEpochs [75688,75711]" label="getCouponExpiration"/>
  <insert-tree tree="member_expression [64444,64454]" parent="call_argument [64444,64454]" at="0"/>
  <move-tree tree="call_expression [81067,81094]" parent="call_argument [72122,72149]" at="0"/>
  <update-node tree="identifier: totalRewardedWithPhantom [82518,82542]" label="value"/>
  <insert-tree tree="call_expression [72656,72669]" parent="call_argument [72656,72669]" at="0"/>
  <update-node tree="identifier: balanceOfRewarded [82179,82196]" label="balanceOf"/>
  <insert-node tree="binary_expression [80238,80281]" parent="member_expression [80238,80285]" at="0"/>
  <insert-node tree=".: . [80281,80282]" parent="member_expression [80238,80285]" at="1"/>
  <insert-node tree="identifier: add [80282,80285]" parent="member_expression [80238,80285]" at="2"/>
  <move-tree tree="binary_expression [71872,71898]" parent="member_expression [80994,81019]" at="0"/>
  <update-node tree="identifier: fluidUntil [71908,71918]" label="add"/>
  <insert-node tree="identifier: effectivePremium [17690,17706]" parent="call_expression [17690,17738]" at="0"/>
  <insert-node tree="(: ( [17706,17707]" parent="call_expression [17690,17738]" at="1"/>
  <insert-tree tree="call_argument [17707,17718]" parent="call_expression [17690,17738]" at="2"/>
  <insert-node tree=",: , [17718,17719]" parent="call_expression [17690,17738]" at="3"/>
  <insert-tree tree="call_argument [17720,17729]" parent="call_expression [17690,17738]" at="4"/>
  <insert-node tree=",: , [17729,17730]" parent="call_expression [17690,17738]" at="5"/>
  <move-tree tree="call_argument [22439,22445]" parent="call_expression [17690,17738]" at="6"/>
  <insert-node tree="): ) [17737,17738]" parent="call_expression [17690,17738]" at="7"/>
  <insert-node tree="member_expression [58340,58360]" parent="call_expression [58340,58362]" at="0"/>
  <insert-node tree="(: ( [58360,58361]" parent="call_expression [58340,58362]" at="1"/>
  <insert-node tree="): ) [58361,58362]" parent="call_expression [58340,58362]" at="2"/>
  <update-node tree="identifier: totalBonded [83191,83202]" label="totalRedeemable"/>
  <update-node tree="identifier: univ2 [83121,83126]" label="dollar"/>
  <insert-node tree="identifier: value [71578,71583]" parent="member_expression [71578,71587]" at="0"/>
  <move-tree tree="call_expression [80483,80518]" parent="call_argument [71588,71623]" at="0"/>
  <insert-tree tree="call_expression [80238,80245]" parent="binary_expression [80238,80281]" at="0"/>
  <insert-node tree="&lt;=: &lt;= [80246,80248]" parent="binary_expression [80238,80281]" at="1"/>
  <insert-node tree="call_expression [80265,80281]" parent="binary_expression [80238,80281]" at="2"/>
  <insert-tree tree="call_expression [80994,81005]" parent="binary_expression [80994,81015]" at="0"/>
  <insert-node tree="&gt;: &gt; [81006,81007]" parent="binary_expression [80994,81015]" at="1"/>
  <move-tree tree="call_expression [76722,76730]" parent="member_expression [58340,58360]" at="0"/>
  <insert-node tree=".: . [58348,58349]" parent="member_expression [58340,58360]" at="1"/>
  <insert-node tree="identifier: totalSupply [58349,58360]" parent="member_expression [58340,58360]" at="2"/>
  <insert-node tree="binary_expression [58708,58774]" parent="member_expression [58708,58778]" at="0"/>
  <update-node tree="identifier: sub [70397,70400]" label="add"/>
  <move-tree tree="call_expression [83173,83186]" parent="call_argument [58779,58792]" at="0"/>
  <insert-tree tree="member_expression [80265,80278]" parent="call_expression [80265,80281]" at="0"/>
  <insert-node tree="(: ( [80278,80279]" parent="call_expression [80265,80281]" at="1"/>
  <move-tree tree="call_argument [55326,55327]" parent="call_expression [80265,80281]" at="2"/>
  <insert-node tree="): ) [80280,80281]" parent="call_expression [80265,80281]" at="3"/>
  <move-tree tree="call_expression [70363,70396]" parent="binary_expression [58708,58774]" at="0"/>
  <insert-node tree="&gt;=: &gt;= [58742,58744]" parent="binary_expression [58708,58774]" at="1"/>
  <move-tree tree="call_expression [82008,82021]" parent="binary_expression [58708,58774]" at="2"/>
  <delete-node tree="contract: contract [10645,10653]"/>
  <delete-node tree="identifier: Context [10654,10661]"/>
  <delete-node tree="{: { [10662,10663]"/>
  <delete-node tree="comment: // Empty internal constructor, to prevent people from mistakenly deploying [10668,10742]"/>
  <delete-node tree="comment: // an instance of this contract, which should be used via inheritance. [10747,10817]"/>
  <delete-tree tree="constructor_definition [10822,10849]"/>
  <delete-node tree="comment: // solhint-disable-previous-line no-empty-blocks [10854,10902]"/>
  <delete-node tree="function: function [10908,10916]"/>
  <delete-node tree="identifier: _msgSender [10917,10927]"/>
  <delete-node tree="(: ( [10927,10928]"/>
  <delete-node tree="): ) [10928,10929]"/>
  <delete-tree tree="state_mutability [10939,10943]"/>
  <delete-tree tree="return_type_definition [10944,10969]"/>
  <delete-node tree="{: { [10970,10971]"/>
  <delete-node tree="return: return [10980,10986]"/>
  <delete-node tree="return_statement [10980,10998]"/>
  <delete-node tree="}: } [11003,11004]"/>
  <delete-node tree="function_body [10970,11004]"/>
  <delete-node tree="function_definition [10908,11004]"/>
  <delete-tree tree="function_definition [11010,11232]"/>
  <delete-node tree="}: } [11233,11234]"/>
  <delete-node tree="contract_body [10662,11234]"/>
  <delete-node tree="contract_declaration [10645,11234]"/>
  <delete-node tree="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [14520,15672]"/>
  <delete-node tree="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [22498,22706]"/>
  <delete-node tree="contract: contract [22707,22715]"/>
  <delete-node tree="identifier: ERC20Burnable [22716,22729]"/>
  <delete-node tree="is: is [22730,22732]"/>
  <delete-tree tree="inheritance_specifier [22733,22740]"/>
  <delete-node tree=",: , [22740,22741]"/>
  <delete-tree tree="inheritance_specifier [22742,22747]"/>
  <delete-node tree="{: { [22748,22749]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from the caller.      *      * See {ERC20-_burn}.      */ [22754,22852]"/>
  <delete-node tree="function: function [22857,22865]"/>
  <delete-node tree="identifier: burn [22866,22870]"/>
  <delete-node tree="(: ( [22870,22871]"/>
  <delete-node tree="): ) [22885,22886]"/>
  <delete-tree tree="visibility [22887,22893]"/>
  <delete-node tree="{: { [22894,22895]"/>
  <delete-node tree="identifier: _burn [22904,22909]"/>
  <delete-node tree="(: ( [22909,22910]"/>
  <delete-tree tree="call_argument [22910,22922]"/>
  <delete-node tree=",: , [22922,22923]"/>
  <delete-node tree="): ) [22930,22931]"/>
  <delete-node tree="call_expression [22904,22931]"/>
  <delete-node tree="expression_statement [22904,22932]"/>
  <delete-node tree="}: } [22937,22938]"/>
  <delete-node tree="function_body [22894,22938]"/>
  <delete-node tree="function_definition [22857,22938]"/>
  <delete-node tree="comment: /**      * @dev See {ERC20-_burnFrom}.      */ [22944,22990]"/>
  <delete-node tree="}: } [23097,23098]"/>
  <delete-node tree="contract_body [22748,23098]"/>
  <delete-node tree="contract_declaration [22707,23098]"/>
  <delete-node tree="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [23100,23159]"/>
  <delete-node tree="contract: contract [23160,23168]"/>
  <delete-node tree="identifier: ERC20Detailed [23169,23182]"/>
  <delete-node tree="is: is [23183,23185]"/>
  <delete-tree tree="inheritance_specifier [23186,23192]"/>
  <delete-node tree="{: { [23193,23194]"/>
  <delete-tree tree="type_name [23199,23205]"/>
  <delete-node tree="identifier: _name [23214,23219]"/>
  <delete-node tree="state_variable_declaration [23199,23220]"/>
  <delete-tree tree="type_name [23225,23231]"/>
  <delete-node tree="identifier: _symbol [23240,23247]"/>
  <delete-node tree="state_variable_declaration [23225,23248]"/>
  <delete-tree tree="type_name [23253,23258]"/>
  <delete-node tree="identifier: _decimals [23267,23276]"/>
  <delete-node tree="state_variable_declaration [23253,23277]"/>
  <delete-node tree="comment: /**      * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of      * these values are immutable: they can only be set once during      * construction.      */ [23283,23462]"/>
  <delete-tree tree="constructor_definition [23467,23630]"/>
  <delete-node tree="comment: /**      * @dev Returns the name of the token.      */ [23636,23690]"/>
  <delete-tree tree="function_definition [23695,23776]"/>
  <delete-node tree="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [23782,23884]"/>
  <delete-tree tree="function_definition [23889,23974]"/>
  <delete-node tree="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [23980,24518]"/>
  <delete-tree tree="function_definition [24523,24604]"/>
  <delete-node tree="}: } [24605,24606]"/>
  <delete-node tree="contract_body [23193,24606]"/>
  <delete-node tree="contract_declaration [23160,24606]"/>
  <delete-node tree="comment: /**  * @title Roles  * @dev Library for managing addresses assigned to a Role.  */ [24608,24690]"/>
  <delete-node tree="library: library [24691,24698]"/>
  <delete-node tree="identifier: Roles [24699,24704]"/>
  <delete-node tree="{: { [24705,24706]"/>
  <delete-tree tree="struct_declaration [24711,24772]"/>
  <delete-node tree="comment: /**      * @dev Give an account access to this role.      */ [24778,24838]"/>
  <delete-node tree="function: function [24843,24851]"/>
  <delete-node tree="identifier: add [24852,24855]"/>
  <delete-node tree="(: ( [24855,24856]"/>
  <delete-tree tree="parameter [24856,24873]"/>
  <delete-node tree=",: , [24873,24874]"/>
  <delete-tree tree="parameter [24875,24890]"/>
  <delete-node tree="): ) [24890,24891]"/>
  <delete-tree tree="visibility [24892,24900]"/>
  <delete-node tree="{: { [24901,24902]"/>
  <delete-node tree="identifier: require [24911,24918]"/>
  <delete-node tree="(: ( [24918,24919]"/>
  <delete-tree tree="call_argument [24919,24938]"/>
  <delete-node tree=",: , [24938,24939]"/>
  <delete-node tree="): ) [24973,24974]"/>
  <delete-node tree="call_expression [24911,24974]"/>
  <delete-node tree="expression_statement [24911,24975]"/>
  <delete-tree tree="expression_statement [24984,25012]"/>
  <delete-node tree="}: } [25017,25018]"/>
  <delete-node tree="function_body [24901,25018]"/>
  <delete-node tree="function_definition [24843,25018]"/>
  <delete-node tree="comment: /**      * @dev Remove an account's access to this role.      */ [25024,25088]"/>
  <delete-node tree="function: function [25093,25101]"/>
  <delete-node tree="identifier: remove [25102,25108]"/>
  <delete-node tree="(: ( [25108,25109]"/>
  <delete-tree tree="parameter [25109,25126]"/>
  <delete-node tree=",: , [25126,25127]"/>
  <delete-tree tree="parameter [25128,25143]"/>
  <delete-node tree="): ) [25143,25144]"/>
  <delete-tree tree="visibility [25145,25153]"/>
  <delete-node tree="{: { [25154,25155]"/>
  <delete-tree tree="expression_statement [25238,25267]"/>
  <delete-node tree="}: } [25272,25273]"/>
  <delete-node tree="function_body [25154,25273]"/>
  <delete-node tree="function_definition [25093,25273]"/>
  <delete-node tree="comment: /**      * @dev Check if an account has this role.      * @return bool      */ [25279,25357]"/>
  <delete-tree tree="function_definition [25362,25562]"/>
  <delete-node tree="}: } [25563,25564]"/>
  <delete-node tree="contract_body [24705,25564]"/>
  <delete-node tree="library_declaration [24691,25564]"/>
  <delete-node tree="contract: contract [25566,25574]"/>
  <delete-node tree="identifier: MinterRole [25575,25585]"/>
  <delete-node tree="is: is [25586,25588]"/>
  <delete-tree tree="inheritance_specifier [25589,25596]"/>
  <delete-node tree="{: { [25597,25598]"/>
  <delete-tree tree="using_directive [25603,25630]"/>
  <delete-node tree="event: event [25684,25689]"/>
  <delete-node tree="identifier: MinterRemoved [25690,25703]"/>
  <delete-node tree="(: ( [25703,25704]"/>
  <delete-node tree="): ) [25727,25728]"/>
  <delete-node tree="event_definition [25684,25729]"/>
  <delete-tree tree="type_name [25735,25745]"/>
  <delete-node tree="identifier: _minters [25754,25762]"/>
  <delete-node tree="state_variable_declaration [25735,25763]"/>
  <delete-tree tree="constructor_definition [25769,25834]"/>
  <delete-node tree="modifier: modifier [25840,25848]"/>
  <delete-node tree="identifier: onlyMinter [25849,25859]"/>
  <delete-node tree="(: ( [25859,25860]"/>
  <delete-node tree="): ) [25860,25861]"/>
  <delete-node tree="{: { [25862,25863]"/>
  <delete-tree tree="expression_statement [25965,25967]"/>
  <delete-node tree="}: } [25972,25973]"/>
  <delete-node tree="function_body [25862,25973]"/>
  <delete-node tree="modifier_definition [25840,25973]"/>
  <delete-node tree="function: function [25979,25987]"/>
  <delete-node tree="identifier: isMinter [25988,25996]"/>
  <delete-node tree="(: ( [25996,25997]"/>
  <delete-node tree="): ) [26012,26013]"/>
  <delete-tree tree="visibility [26014,26020]"/>
  <delete-tree tree="state_mutability [26021,26025]"/>
  <delete-tree tree="return_type_definition [26026,26040]"/>
  <delete-tree tree="function_body [26041,26086]"/>
  <delete-node tree="function_definition [25979,26086]"/>
  <delete-node tree="function: function [26092,26100]"/>
  <delete-node tree="identifier: addMinter [26101,26110]"/>
  <delete-node tree="(: ( [26110,26111]"/>
  <delete-node tree="): ) [26126,26127]"/>
  <delete-tree tree="visibility [26128,26134]"/>
  <delete-tree tree="modifier_invocation [26135,26145]"/>
  <delete-node tree="{: { [26146,26147]"/>
  <delete-node tree="identifier: _addMinter [26156,26166]"/>
  <delete-node tree="(: ( [26166,26167]"/>
  <delete-node tree="): ) [26174,26175]"/>
  <delete-node tree="call_expression [26156,26175]"/>
  <delete-node tree="expression_statement [26156,26176]"/>
  <delete-node tree="}: } [26181,26182]"/>
  <delete-node tree="function_body [26146,26182]"/>
  <delete-node tree="function_definition [26092,26182]"/>
  <delete-tree tree="function_definition [26188,26265]"/>
  <delete-node tree="function: function [26271,26279]"/>
  <delete-node tree="identifier: _addMinter [26280,26290]"/>
  <delete-node tree="(: ( [26290,26291]"/>
  <delete-tree tree="parameter [26291,26306]"/>
  <delete-node tree="): ) [26306,26307]"/>
  <delete-node tree="{: { [26317,26318]"/>
  <delete-tree tree="member_expression [26327,26339]"/>
  <delete-node tree="(: ( [26339,26340]"/>
  <delete-node tree="): ) [26347,26348]"/>
  <delete-node tree="call_expression [26327,26348]"/>
  <delete-node tree="expression_statement [26327,26349]"/>
  <delete-tree tree="emit_statement [26358,26384]"/>
  <delete-node tree="}: } [26389,26390]"/>
  <delete-node tree="function_body [26317,26390]"/>
  <delete-node tree="function_definition [26271,26390]"/>
  <delete-node tree="function: function [26396,26404]"/>
  <delete-node tree="identifier: _removeMinter [26405,26418]"/>
  <delete-node tree="(: ( [26418,26419]"/>
  <delete-tree tree="parameter [26419,26434]"/>
  <delete-node tree="): ) [26434,26435]"/>
  <delete-tree tree="function_body [26445,26523]"/>
  <delete-node tree="function_definition [26396,26523]"/>
  <delete-node tree="}: } [26524,26525]"/>
  <delete-node tree="contract_body [25597,26525]"/>
  <delete-node tree="contract_declaration [25566,26525]"/>
  <delete-node tree="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [26527,27126]"/>
  <delete-node tree="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [27127,27268]"/>
  <delete-node tree="comment: /*     Copyright 2019 ZeroEx Intl.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [36852,37446]"/>
  <delete-node tree="library: library [37447,37454]"/>
  <delete-node tree="identifier: LibEIP712 [37455,37464]"/>
  <delete-node tree="{: { [37465,37466]"/>
  <delete-node tree="comment: // Hash of the EIP712 Domain Separator Schema [37472,37517]"/>
  <delete-node tree="comment: // keccak256(abi.encodePacked( [37522,37552]"/>
  <delete-node tree="comment: //     &quot;EIP712Domain(&quot;, [37557,37580]"/>
  <delete-node tree="comment: //     &quot;string name,&quot;, [37585,37607]"/>
  <delete-node tree="comment: //     &quot;string version,&quot;, [37612,37637]"/>
  <delete-node tree="comment: //     &quot;uint256 chainId,&quot;, [37642,37668]"/>
  <delete-node tree="comment: //     &quot;address verifyingContract&quot;, [37673,37708]"/>
  <delete-node tree="comment: //     &quot;)&quot; [37713,37723]"/>
  <delete-node tree="comment: // )) [37728,37733]"/>
  <delete-tree tree="state_variable_declaration [37738,37870]"/>
  <delete-node tree="comment: /// @dev Calculates a EIP712 domain separator. [37876,37922]"/>
  <delete-node tree="comment: /// @param name The EIP712 domain name. [37927,37966]"/>
  <delete-node tree="comment: /// @param version The EIP712 domain version. [37971,38016]"/>
  <delete-node tree="comment: /// @param verifyingContract The EIP712 verifying contract. [38021,38080]"/>
  <delete-node tree="comment: /// @return EIP712 domain separator. [38085,38121]"/>
  <delete-node tree="function: function [38126,38134]"/>
  <delete-node tree="identifier: hashEIP712Domain [38135,38151]"/>
  <delete-node tree="(: ( [38151,38152]"/>
  <delete-tree tree="parameter [38161,38179]"/>
  <delete-node tree=",: , [38179,38180]"/>
  <delete-tree tree="parameter [38189,38210]"/>
  <delete-node tree=",: , [38210,38211]"/>
  <delete-node tree=",: , [38235,38236]"/>
  <delete-tree tree="parameter [38245,38270]"/>
  <delete-node tree="): ) [38275,38276]"/>
  <delete-tree tree="visibility [38281,38289]"/>
  <delete-tree tree="return_type_definition [38303,38327]"/>
  <delete-tree tree="function_body [38332,39361]"/>
  <delete-node tree="function_definition [38126,39361]"/>
  <delete-node tree="comment: /// @dev Calculates EIP712 encoding for a hash struct with a given domain hash. [39367,39446]"/>
  <delete-node tree="comment: /// @param eip712DomainHash Hash of the domain domain separator data, computed [39451,39529]"/>
  <delete-node tree="comment: ///                         with getDomainHash(). [39534,39583]"/>
  <delete-node tree="comment: /// @param hashStruct The EIP712 hash struct. [39588,39633]"/>
  <delete-node tree="comment: /// @return EIP712 hash applied to the given EIP712 Domain. [39638,39697]"/>
  <delete-node tree="function: function [39702,39710]"/>
  <delete-node tree="identifier: hashEIP712Message [39711,39728]"/>
  <delete-node tree="(: ( [39728,39729]"/>
  <delete-tree tree="parameter [39729,39753]"/>
  <delete-node tree=",: , [39753,39754]"/>
  <delete-tree tree="parameter [39755,39773]"/>
  <delete-node tree="): ) [39773,39774]"/>
  <delete-tree tree="visibility [39779,39787]"/>
  <delete-tree tree="return_type_definition [39801,39825]"/>
  <delete-tree tree="function_body [39830,40572]"/>
  <delete-node tree="function_definition [39702,40572]"/>
  <delete-node tree="}: } [40573,40574]"/>
  <delete-node tree="contract_body [37465,40574]"/>
  <delete-node tree="library_declaration [37447,40574]"/>
  <delete-node tree="contract: contract [47324,47332]"/>
  <delete-node tree="identifier: Permittable [47333,47344]"/>
  <delete-node tree="is: is [47345,47347]"/>
  <delete-tree tree="inheritance_specifier [47348,47361]"/>
  <delete-node tree=",: , [47361,47362]"/>
  <delete-tree tree="inheritance_specifier [47363,47368]"/>
  <delete-node tree="{: { [47369,47370]"/>
  <delete-tree tree="state_variable_declaration [47375,47413]"/>
  <delete-node tree="comment: // keccak256(&quot;Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)&quot;); [47419,47518]"/>
  <delete-tree tree="state_variable_declaration [47523,47647]"/>
  <delete-tree tree="type_name [47652,47658]"/>
  <delete-node tree="constant: constant [47667,47675]"/>
  <delete-node tree="identifier: EIP712_VERSION [47676,47690]"/>
  <delete-node tree="=: = [47691,47692]"/>
  <delete-tree tree="string_literal [47693,47696]"/>
  <delete-node tree="state_variable_declaration [47652,47697]"/>
  <delete-tree tree="state_variable_declaration [47703,47742]"/>
  <delete-node tree="mapping: mapping [47748,47755]"/>
  <delete-node tree="(: ( [47755,47756]"/>
  <delete-tree tree="primitive_type [47756,47763]"/>
  <delete-node tree="=&gt;: =&gt; [47764,47766]"/>
  <delete-node tree="): ) [47774,47775]"/>
  <delete-node tree="type_name [47748,47775]"/>
  <delete-node tree="identifier: nonces [47776,47782]"/>
  <delete-node tree="state_variable_declaration [47748,47783]"/>
  <delete-node tree="constructor: constructor [47789,47800]"/>
  <delete-node tree="(: ( [47800,47801]"/>
  <delete-node tree="): ) [47801,47802]"/>
  <delete-node tree="public: public [47803,47809]"/>
  <delete-node tree="constructor_definition [47789,48000]"/>
  <delete-node tree="function: function [48006,48014]"/>
  <delete-node tree="identifier: permit [48015,48021]"/>
  <delete-node tree="(: ( [48021,48022]"/>
  <delete-tree tree="parameter [48031,48044]"/>
  <delete-node tree=",: , [48044,48045]"/>
  <delete-tree tree="parameter [48054,48069]"/>
  <delete-node tree=",: , [48069,48070]"/>
  <delete-node tree=",: , [48092,48093]"/>
  <delete-node tree=",: , [48118,48119]"/>
  <delete-tree tree="parameter [48128,48135]"/>
  <delete-node tree=",: , [48135,48136]"/>
  <delete-tree tree="parameter [48145,48154]"/>
  <delete-node tree=",: , [48154,48155]"/>
  <delete-tree tree="parameter [48164,48173]"/>
  <delete-node tree="): ) [48178,48179]"/>
  <delete-node tree="{: { [48189,48190]"/>
  <delete-tree tree="variable_declaration_statement [48199,48568]"/>
  <delete-tree tree="variable_declaration_statement [48578,48625]"/>
  <delete-node tree="(: ( [48716,48717]"/>
  <delete-tree tree="call_argument [48717,48740]"/>
  <delete-node tree=",: , [48740,48741]"/>
  <delete-node tree=",: , [48746,48747]"/>
  <delete-node tree="): ) [48762,48763]"/>
  <delete-node tree="call_expression [48704,48763]"/>
  <delete-node tree="expression_statement [48704,48764]"/>
  <delete-node tree="identifier: _approve [48831,48839]"/>
  <delete-node tree="(: ( [48839,48840]"/>
  <delete-tree tree="call_argument [48840,48845]"/>
  <delete-node tree=",: , [48845,48846]"/>
  <delete-node tree=",: , [48854,48855]"/>
  <delete-node tree="): ) [48861,48862]"/>
  <delete-node tree="call_expression [48831,48862]"/>
  <delete-node tree="expression_statement [48831,48863]"/>
  <delete-node tree="}: } [48868,48869]"/>
  <delete-node tree="function_body [48189,48869]"/>
  <delete-node tree="function_definition [48006,48869]"/>
  <delete-node tree="}: } [48870,48871]"/>
  <delete-node tree="contract_body [47369,48871]"/>
  <delete-node tree="contract_declaration [47324,48871]"/>
  <delete-node tree="contract: contract [50448,50456]"/>
  <delete-node tree="identifier: Dollar [50457,50463]"/>
  <delete-node tree="is: is [50464,50466]"/>
  <delete-tree tree="inheritance_specifier [50471,50478]"/>
  <delete-node tree=",: , [50478,50479]"/>
  <delete-tree tree="inheritance_specifier [50484,50494]"/>
  <delete-node tree=",: , [50494,50495]"/>
  <delete-tree tree="inheritance_specifier [50500,50513]"/>
  <delete-node tree=",: , [50513,50514]"/>
  <delete-tree tree="inheritance_specifier [50519,50530]"/>
  <delete-node tree=",: , [50530,50531]"/>
  <delete-tree tree="inheritance_specifier [50536,50549]"/>
  <delete-node tree="{: { [50550,50551]"/>
  <delete-tree tree="constructor_definition [50556,50669]"/>
  <delete-node tree="function: function [50849,50857]"/>
  <delete-node tree="identifier: transferFrom [50858,50870]"/>
  <delete-node tree="(: ( [50870,50871]"/>
  <delete-tree tree="parameter [50880,50894]"/>
  <delete-node tree=",: , [50894,50895]"/>
  <delete-tree tree="parameter [50904,50921]"/>
  <delete-node tree=",: , [50921,50922]"/>
  <delete-node tree="): ) [50950,50951]"/>
  <delete-tree tree="return_type_definition [50959,50973]"/>
  <delete-node tree="{: { [50974,50975]"/>
  <delete-node tree="identifier: _transfer [50984,50993]"/>
  <delete-node tree="(: ( [50993,50994]"/>
  <delete-node tree=",: , [51000,51001]"/>
  <delete-node tree=",: , [51011,51012]"/>
  <delete-node tree="): ) [51019,51020]"/>
  <delete-node tree="call_expression [50984,51020]"/>
  <delete-node tree="expression_statement [50984,51021]"/>
  <delete-tree tree="return_statement [51356,51368]"/>
  <delete-node tree="}: } [51373,51374]"/>
  <delete-node tree="function_body [50974,51374]"/>
  <delete-node tree="function_definition [50849,51374]"/>
  <delete-node tree="}: } [51375,51376]"/>
  <delete-node tree="contract_body [50550,51376]"/>
  <delete-node tree="contract_declaration [50448,51376]"/>
  <delete-node tree="interface: interface [51378,51387]"/>
  <delete-node tree="identifier: IUniswapV2Factory [51388,51405]"/>
  <delete-node tree="{: { [51406,51407]"/>
  <delete-tree tree="function_definition [51504,51553]"/>
  <delete-tree tree="function_definition [51558,51613]"/>
  <delete-tree tree="function_definition [51619,51705]"/>
  <delete-tree tree="function_definition [51710,51771]"/>
  <delete-tree tree="function_definition [51776,51831]"/>
  <delete-tree tree="function_definition [51837,51921]"/>
  <delete-tree tree="function_definition [51927,51963]"/>
  <delete-tree tree="function_definition [51968,52010]"/>
  <delete-node tree="}: } [52011,52012]"/>
  <delete-node tree="contract_body [51406,52012]"/>
  <delete-node tree="interface_declaration [51378,52012]"/>
  <delete-node tree="comment: //  [54413,54416]"/>
  <delete-node tree="comment: // computes square roots using the babylonian method [54417,54469]"/>
  <delete-node tree="comment: // https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method [54470,54554]"/>
  <delete-node tree="library: library [54555,54562]"/>
  <delete-node tree="identifier: Babylonian [54563,54573]"/>
  <delete-node tree="{: { [54574,54575]"/>
  <delete-node tree="function: function [54580,54588]"/>
  <delete-node tree="identifier: sqrt [54589,54593]"/>
  <delete-node tree="(: ( [54593,54594]"/>
  <delete-tree tree="parameter [54594,54600]"/>
  <delete-node tree="): ) [54600,54601]"/>
  <delete-tree tree="visibility [54602,54610]"/>
  <delete-tree tree="return_type_definition [54616,54632]"/>
  <delete-tree tree="function_body [54633,54894]"/>
  <delete-node tree="function_definition [54580,54894]"/>
  <delete-node tree="}: } [54895,54896]"/>
  <delete-node tree="contract_body [54574,54896]"/>
  <delete-node tree="library_declaration [54555,54896]"/>
  <delete-node tree="comment: //  [54898,54901]"/>
  <delete-node tree="comment: // a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format)) [54902,55004]"/>
  <delete-node tree="library: library [55005,55012]"/>
  <delete-node tree="identifier: FixedPoint [55013,55023]"/>
  <delete-node tree="{: { [55024,55025]"/>
  <delete-node tree="comment: // range: [0, 2**112 - 1] [55030,55055]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [55060,55085]"/>
  <delete-tree tree="struct_declaration [55090,55134]"/>
  <delete-node tree="comment: // range: [0, 2**144 - 1] [55140,55165]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [55170,55195]"/>
  <delete-tree tree="struct_declaration [55200,55241]"/>
  <delete-tree tree="state_variable_declaration [55247,55287]"/>
  <delete-tree tree="type_name [55292,55296]"/>
  <delete-tree tree="visibility [55297,55304]"/>
  <delete-node tree="constant: constant [55305,55313]"/>
  <delete-node tree="identifier: Q112 [55314,55318]"/>
  <delete-node tree="=: = [55319,55320]"/>
  <delete-tree tree="primitive_type [55321,55325]"/>
  <delete-node tree="(: ( [55325,55326]"/>
  <delete-node tree="): ) [55327,55328]"/>
  <delete-node tree="type_cast_expression [55321,55328]"/>
  <delete-node tree="&lt;&lt;: &lt;&lt; [55329,55331]"/>
  <delete-node tree="identifier: RESOLUTION [55332,55342]"/>
  <delete-node tree="binary_expression [55321,55342]"/>
  <delete-node tree="state_variable_declaration [55292,55343]"/>
  <delete-tree tree="state_variable_declaration [55348,55396]"/>
  <delete-node tree="comment: // encode a uint112 as a UQ112x112 [55402,55436]"/>
  <delete-node tree="function: function [55441,55449]"/>
  <delete-node tree="identifier: encode [55450,55456]"/>
  <delete-node tree="(: ( [55456,55457]"/>
  <delete-tree tree="parameter [55457,55466]"/>
  <delete-node tree="): ) [55466,55467]"/>
  <delete-tree tree="visibility [55468,55476]"/>
  <delete-tree tree="return_type_definition [55482,55508]"/>
  <delete-tree tree="function_body [55509,55568]"/>
  <delete-node tree="function_definition [55441,55568]"/>
  <delete-node tree="comment: // encodes a uint144 as a UQ144x112 [55574,55609]"/>
  <delete-tree tree="function_definition [55614,55744]"/>
  <delete-node tree="comment: // divide a UQ112x112 by a uint112, returning a UQ112x112 [55750,55807]"/>
  <delete-tree tree="function_definition [55812,56007]"/>
  <delete-node tree="comment: // multiply a UQ112x112 by a uint, returning a UQ144x112 [56013,56069]"/>
  <delete-node tree="comment: // reverts on overflow [56074,56096]"/>
  <delete-node tree="function: function [56101,56109]"/>
  <delete-node tree="identifier: mul [56110,56113]"/>
  <delete-node tree="(: ( [56113,56114]"/>
  <delete-tree tree="parameter [56114,56135]"/>
  <delete-node tree=",: , [56135,56136]"/>
  <delete-tree tree="parameter [56137,56143]"/>
  <delete-node tree="): ) [56143,56144]"/>
  <delete-tree tree="visibility [56145,56153]"/>
  <delete-tree tree="state_mutability [56154,56158]"/>
  <delete-tree tree="return_type_definition [56159,56185]"/>
  <delete-node tree="{: { [56186,56187]"/>
  <delete-tree tree="variable_declaration_statement [56196,56203]"/>
  <delete-node tree="identifier: require [56212,56219]"/>
  <delete-node tree="(: ( [56219,56220]"/>
  <delete-tree tree="call_argument [56220,56274]"/>
  <delete-node tree=",: , [56274,56275]"/>
  <delete-node tree="): ) [56313,56314]"/>
  <delete-node tree="call_expression [56212,56314]"/>
  <delete-node tree="expression_statement [56212,56315]"/>
  <delete-tree tree="return_statement [56324,56344]"/>
  <delete-node tree="}: } [56349,56350]"/>
  <delete-node tree="function_body [56186,56350]"/>
  <delete-node tree="function_definition [56101,56350]"/>
  <delete-node tree="comment: // returns a UQ112x112 which represents the ratio of the numerator to the denominator [56356,56441]"/>
  <delete-node tree="comment: // equivalent to encode(numerator).div(denominator) [56446,56497]"/>
  <delete-node tree="function: function [56502,56510]"/>
  <delete-node tree="identifier: fraction [56511,56519]"/>
  <delete-node tree="(: ( [56519,56520]"/>
  <delete-tree tree="parameter [56520,56537]"/>
  <delete-node tree=",: , [56537,56538]"/>
  <delete-tree tree="parameter [56539,56558]"/>
  <delete-node tree="): ) [56558,56559]"/>
  <delete-tree tree="visibility [56560,56568]"/>
  <delete-tree tree="state_mutability [56569,56573]"/>
  <delete-tree tree="return_type_definition [56574,56600]"/>
  <delete-node tree="{: { [56601,56602]"/>
  <delete-tree tree="return_statement [56672,56739]"/>
  <delete-node tree="}: } [56744,56745]"/>
  <delete-node tree="function_body [56601,56745]"/>
  <delete-node tree="function_definition [56502,56745]"/>
  <delete-node tree="comment: // decode a UQ112x112 into a uint112 by truncating after the radix point [56751,56823]"/>
  <delete-tree tree="function_definition [56828,56953]"/>
  <delete-node tree="comment: // decode a UQ144x112 into a uint144 by truncating after the radix point [56959,57031]"/>
  <delete-tree tree="function_definition [57036,57164]"/>
  <delete-node tree="comment: // take the reciprocal of a UQ112x112 [57170,57207]"/>
  <delete-tree tree="function_definition [57212,57416]"/>
  <delete-node tree="comment: // square root of a UQ112x112 [57422,57451]"/>
  <delete-tree tree="function_definition [57456,57617]"/>
  <delete-node tree="}: } [57618,57619]"/>
  <delete-node tree="contract_body [55024,57619]"/>
  <delete-node tree="library_declaration [55005,57619]"/>
  <delete-node tree="comment: // library with helper methods for oracles that are concerned with computing average prices [57621,57712]"/>
  <delete-node tree="library: library [57713,57720]"/>
  <delete-node tree="identifier: UniswapV2OracleLibrary [57721,57743]"/>
  <delete-node tree="{: { [57744,57745]"/>
  <delete-tree tree="using_directive [57750,57773]"/>
  <delete-node tree="comment: // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1] [57779,57886]"/>
  <delete-node tree="function: function [57891,57899]"/>
  <delete-node tree="identifier: currentBlockTimestamp [57900,57921]"/>
  <delete-node tree="(: ( [57921,57922]"/>
  <delete-node tree="): ) [57922,57923]"/>
  <delete-tree tree="visibility [57924,57932]"/>
  <delete-tree tree="state_mutability [57933,57937]"/>
  <delete-tree tree="return_type_definition [57938,57954]"/>
  <delete-node tree="{: { [57955,57956]"/>
  <delete-node tree="return: return [57965,57971]"/>
  <delete-tree tree="primitive_type [57972,57978]"/>
  <delete-node tree="(: ( [57978,57979]"/>
  <delete-node tree="): ) [58004,58005]"/>
  <delete-node tree="type_cast_expression [57972,58005]"/>
  <delete-node tree="return_statement [57965,58006]"/>
  <delete-node tree="}: } [58011,58012]"/>
  <delete-node tree="function_body [57955,58012]"/>
  <delete-node tree="function_definition [57891,58012]"/>
  <delete-node tree="comment: // produces the cumulative price using counterfactuals to save gas and avoid a call to sync. [58018,58110]"/>
  <delete-tree tree="function_definition [58115,59153]"/>
  <delete-node tree="}: } [59154,59155]"/>
  <delete-node tree="contract_body [57744,59155]"/>
  <delete-node tree="library_declaration [57713,59155]"/>
  <delete-tree tree="library_declaration [59157,61093]"/>
  <delete-node tree="contract: contract [67263,67271]"/>
  <delete-node tree="identifier: IDAO [67272,67276]"/>
  <delete-node tree="{: { [67277,67278]"/>
  <delete-node tree="function: function [67283,67291]"/>
  <delete-node tree="identifier: epoch [67292,67297]"/>
  <delete-node tree="(: ( [67297,67298]"/>
  <delete-node tree="): ) [67298,67299]"/>
  <delete-tree tree="state_mutability [67309,67313]"/>
  <delete-tree tree="return_type_definition [67314,67331]"/>
  <delete-node tree="function_definition [67283,67332]"/>
  <delete-node tree="}: } [67333,67334]"/>
  <delete-node tree="contract_body [67277,67334]"/>
  <delete-node tree="contract_declaration [67263,67334]"/>
  <delete-tree tree="visibility [50730,50736]"/>
  <delete-tree tree="modifier_invocation [50745,50755]"/>
  <delete-tree tree="return_type_definition [50764,50778]"/>
  <delete-node tree="identifier: _mint [50793,50798]"/>
  <delete-tree tree="return_statement [50825,50837]"/>
  <delete-node tree="identifier: hashEIP712Domain [47856,47872]"/>
  <delete-tree tree="call_argument [47886,47892]"/>
  <delete-tree tree="call_argument [47906,47920]"/>
  <delete-tree tree="call_argument [47934,47956]"/>
  <delete-node tree=",: , [47956,47957]"/>
  <delete-node tree="identifier: EIP712_DOMAIN_SEPARATOR [47820,47843]"/>
  <delete-node tree="=: = [47844,47845]"/>
  <delete-node tree="assignment_expression [47820,47993]"/>
  <delete-tree tree="call_argument [48787,48802]"/>
  <delete-node tree=",: , [48808,48809]"/>
  <delete-tree tree="parameter [23013,23028]"/>
  <delete-tree tree="visibility [23046,23052]"/>
  <delete-node tree="identifier: _burnFrom [23063,23072]"/>
  <delete-tree tree="parameter [21003,21018]"/>
  <delete-node tree=",: , [21018,21019]"/>
  <delete-node tree="identifier: _totalSupply [21232,21244]"/>
  <delete-node tree="=: = [21245,21246]"/>
  <delete-tree tree="member_expression [21247,21263]"/>
  <delete-node tree="(: ( [21263,21264]"/>
  <delete-node tree="): ) [21270,21271]"/>
  <delete-node tree="call_expression [21247,21271]"/>
  <delete-node tree="assignment_expression [21232,21271]"/>
  <delete-tree tree="member_expression [21154,21176]"/>
  <delete-tree tree="array_access [21133,21151]"/>
  <delete-node tree="=: = [21152,21153]"/>
  <delete-node tree="assignment_expression [21133,21222]"/>
  <delete-node tree="emit: emit [21281,21285]"/>
  <delete-node tree="identifier: Transfer [21286,21294]"/>
  <delete-node tree="(: ( [21294,21295]"/>
  <delete-node tree=",: , [21302,21303]"/>
  <delete-tree tree="primitive_type [21304,21311]"/>
  <delete-node tree="(: ( [21311,21312]"/>
  <delete-node tree="): ) [21313,21314]"/>
  <delete-node tree="type_cast_expression [21304,21314]"/>
  <delete-node tree="call_argument [21304,21314]"/>
  <delete-node tree=",: , [21314,21315]"/>
  <delete-node tree="): ) [21322,21323]"/>
  <delete-node tree="emit_statement [21281,21324]"/>
  <delete-tree tree="member_expression [19904,19925]"/>
  <delete-tree tree="array_access [19884,19901]"/>
  <delete-node tree="=: = [19902,19903]"/>
  <delete-node tree="assignment_expression [19884,19975]"/>
  <delete-tree tree="visibility [70316,70322]"/>
  <delete-tree tree="state_mutability [70323,70327]"/>
  <delete-tree tree="return_type_definition [70328,70345]"/>
  <delete-tree tree="call_expression [70401,70417]"/>
  <delete-node tree="&gt;=: &gt;= [83154,83156]"/>
  <delete-node tree="binary_expression [83121,83186]"/>
  <delete-node tree="return: return [70356,70362]"/>
  <delete-node tree="return_statement [70356,70419]"/>
  <delete-tree tree="call_argument [77181,77185]"/>
  <delete-node tree="contract: contract [68017,68025]"/>
  <delete-node tree="identifier: PoolAccount [68026,68037]"/>
  <delete-node tree="{: { [68038,68039]"/>
  <delete-tree tree="enum_declaration [68044,68079]"/>
  <delete-node tree="struct: struct [68085,68091]"/>
  <delete-node tree="identifier: State [68092,68097]"/>
  <delete-node tree="{: { [68098,68099]"/>
  <delete-node tree="identifier: staged [68116,68122]"/>
  <delete-node tree="struct_member [68108,68123]"/>
  <delete-node tree="identifier: claimable [68140,68149]"/>
  <delete-node tree="struct_member [68132,68150]"/>
  <delete-node tree="identifier: bonded [68167,68173]"/>
  <delete-node tree="struct_member [68159,68174]"/>
  <delete-node tree="identifier: phantom [68191,68198]"/>
  <delete-node tree="struct_member [68183,68199]"/>
  <delete-node tree="identifier: fluidUntil [68216,68226]"/>
  <delete-node tree="struct_member [68208,68227]"/>
  <delete-node tree="}: } [68232,68233]"/>
  <delete-node tree="struct_declaration [68085,68233]"/>
  <delete-node tree="}: } [68234,68235]"/>
  <delete-node tree="contract_body [68038,68235]"/>
  <delete-node tree="contract_declaration [68017,68235]"/>
  <delete-node tree="contract: contract [68237,68245]"/>
  <delete-node tree="identifier: PoolStorage [68246,68257]"/>
  <delete-node tree="{: { [68258,68259]"/>
  <delete-tree tree="struct_declaration [68264,68351]"/>
  <delete-node tree="struct: struct [68357,68363]"/>
  <delete-node tree="identifier: Balance [68364,68371]"/>
  <delete-node tree="{: { [68372,68373]"/>
  <delete-node tree="identifier: staged [68390,68396]"/>
  <delete-node tree="struct_member [68382,68397]"/>
  <delete-node tree="identifier: claimable [68414,68423]"/>
  <delete-node tree="struct_member [68406,68424]"/>
  <delete-node tree="identifier: bonded [68441,68447]"/>
  <delete-node tree="struct_member [68433,68448]"/>
  <delete-node tree="identifier: phantom [68465,68472]"/>
  <delete-node tree="struct_member [68457,68473]"/>
  <delete-node tree="}: } [68478,68479]"/>
  <delete-node tree="struct_declaration [68357,68479]"/>
  <delete-tree tree="struct_declaration [68485,68634]"/>
  <delete-node tree="}: } [68635,68636]"/>
  <delete-node tree="contract_body [68258,68636]"/>
  <delete-node tree="contract_declaration [68237,68636]"/>
  <delete-tree tree="contract_declaration [68638,68690]"/>
  <delete-node tree="uint: uint [51492,51496]"/>
  <delete-tree tree="parameter [75579,75594]"/>
  <delete-tree tree="member_expression [75615,75650]"/>
  <delete-node tree="=: = [75651,75652]"/>
  <delete-node tree="assignment_expression [75615,75723]"/>
  <delete-node tree=",: , [77510,77511]"/>
  <delete-tree tree="call_expression [77516,77638]"/>
  <delete-node tree="identifier: _reserve [66460,66468]"/>
  <delete-node tree="identifier: require [21840,21847]"/>
  <delete-node tree="!=: != [21854,21856]"/>
  <delete-tree tree="type_cast_expression [21857,21867]"/>
  <delete-node tree="==: == [48657,48659]"/>
  <delete-node tree="identifier: owner [48660,48665]"/>
  <delete-tree tree="call_argument [82706,82737]"/>
  <delete-tree tree="call_argument [21063,21084]"/>
  <delete-node tree="mapping: mapping [15746,15753]"/>
  <delete-node tree="(: ( [15754,15755]"/>
  <delete-tree tree="primitive_type [15755,15762]"/>
  <delete-node tree="=&gt;: =&gt; [15763,15765]"/>
  <delete-node tree="): ) [15773,15774]"/>
  <delete-node tree="type_name [15746,15774]"/>
  <delete-node tree="identifier: _balances [15783,15792]"/>
  <delete-node tree="state_variable_declaration [15746,15793]"/>
  <delete-node tree="mapping: mapping [15799,15806]"/>
  <delete-node tree="(: ( [15807,15808]"/>
  <delete-tree tree="primitive_type [15808,15815]"/>
  <delete-node tree="=&gt;: =&gt; [15816,15818]"/>
  <delete-node tree="mapping: mapping [15819,15826]"/>
  <delete-node tree="(: ( [15827,15828]"/>
  <delete-tree tree="primitive_type [15828,15835]"/>
  <delete-node tree="=&gt;: =&gt; [15836,15838]"/>
  <delete-node tree="): ) [15846,15847]"/>
  <delete-node tree="type_name [15819,15847]"/>
  <delete-node tree="): ) [15847,15848]"/>
  <delete-node tree="type_name [15799,15848]"/>
  <delete-node tree="identifier: _allowances [15857,15868]"/>
  <delete-node tree="state_variable_declaration [15799,15869]"/>
  <delete-node tree="identifier: _totalSupply [15891,15903]"/>
  <delete-node tree="state_variable_declaration [15875,15904]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-totalSupply}.      */ [15910,15959]"/>
  <delete-node tree="function: function [15964,15972]"/>
  <delete-node tree="identifier: totalSupply [15973,15984]"/>
  <delete-node tree="(: ( [15984,15985]"/>
  <delete-node tree="): ) [15985,15986]"/>
  <delete-tree tree="visibility [15987,15993]"/>
  <delete-tree tree="state_mutability [15994,15998]"/>
  <delete-tree tree="function_body [16017,16053]"/>
  <delete-node tree="function_definition [15964,16053]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-balanceOf}.      */ [16059,16106]"/>
  <delete-node tree="function: function [16111,16119]"/>
  <delete-node tree="identifier: balanceOf [16120,16129]"/>
  <delete-node tree="(: ( [16129,16130]"/>
  <delete-tree tree="parameter [16130,16145]"/>
  <delete-node tree="): ) [16145,16146]"/>
  <delete-tree tree="visibility [16147,16153]"/>
  <delete-tree tree="state_mutability [16154,16158]"/>
  <delete-tree tree="function_body [16177,16219]"/>
  <delete-node tree="function_definition [16111,16219]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [16225,16417]"/>
  <delete-node tree="function: function [16422,16430]"/>
  <delete-node tree="identifier: transfer [16431,16439]"/>
  <delete-node tree="(: ( [16439,16440]"/>
  <delete-tree tree="parameter [16440,16457]"/>
  <delete-node tree=",: , [16457,16458]"/>
  <delete-node tree="): ) [16473,16474]"/>
  <delete-tree tree="visibility [16475,16481]"/>
  <delete-tree tree="return_type_definition [16482,16496]"/>
  <delete-node tree="{: { [16497,16498]"/>
  <delete-node tree="identifier: _transfer [16507,16516]"/>
  <delete-node tree="(: ( [16516,16517]"/>
  <delete-tree tree="call_argument [16517,16529]"/>
  <delete-node tree=",: , [16529,16530]"/>
  <delete-tree tree="call_argument [16531,16540]"/>
  <delete-node tree=",: , [16540,16541]"/>
  <delete-node tree="): ) [16548,16549]"/>
  <delete-node tree="call_expression [16507,16549]"/>
  <delete-node tree="expression_statement [16507,16550]"/>
  <delete-tree tree="return_statement [16559,16571]"/>
  <delete-node tree="}: } [16576,16577]"/>
  <delete-node tree="function_body [16497,16577]"/>
  <delete-node tree="function_definition [16422,16577]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-allowance}.      */ [16583,16630]"/>
  <delete-node tree="function: function [16635,16643]"/>
  <delete-node tree="identifier: allowance [16644,16653]"/>
  <delete-node tree="(: ( [16653,16654]"/>
  <delete-tree tree="parameter [16654,16667]"/>
  <delete-node tree=",: , [16667,16668]"/>
  <delete-tree tree="parameter [16669,16684]"/>
  <delete-node tree="): ) [16684,16685]"/>
  <delete-tree tree="visibility [16686,16692]"/>
  <delete-tree tree="state_mutability [16693,16697]"/>
  <delete-tree tree="function_body [16716,16767]"/>
  <delete-node tree="function_definition [16635,16767]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [16773,16900]"/>
  <delete-node tree="function: function [16905,16913]"/>
  <delete-node tree="identifier: approve [16914,16921]"/>
  <delete-node tree="(: ( [16921,16922]"/>
  <delete-tree tree="parameter [16922,16937]"/>
  <delete-node tree=",: , [16937,16938]"/>
  <delete-node tree="): ) [16953,16954]"/>
  <delete-tree tree="visibility [16955,16961]"/>
  <delete-tree tree="return_type_definition [16962,16976]"/>
  <delete-node tree="{: { [16977,16978]"/>
  <delete-node tree="identifier: _approve [16987,16995]"/>
  <delete-node tree="(: ( [16995,16996]"/>
  <delete-tree tree="call_argument [16996,17008]"/>
  <delete-node tree=",: , [17008,17009]"/>
  <delete-tree tree="call_argument [17010,17017]"/>
  <delete-node tree=",: , [17017,17018]"/>
  <delete-node tree="): ) [17025,17026]"/>
  <delete-node tree="call_expression [16987,17026]"/>
  <delete-node tree="expression_statement [16987,17027]"/>
  <delete-tree tree="return_statement [17036,17048]"/>
  <delete-node tree="}: } [17053,17054]"/>
  <delete-node tree="function_body [16977,17054]"/>
  <delete-node tree="function_definition [16905,17054]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for `sender`'s tokens of at least      * `amount`.      */ [17060,17507]"/>
  <delete-node tree="function: function [17512,17520]"/>
  <delete-node tree="identifier: transferFrom [17521,17533]"/>
  <delete-node tree="(: ( [17533,17534]"/>
  <delete-tree tree="parameter [17534,17548]"/>
  <delete-node tree=",: , [17548,17549]"/>
  <delete-tree tree="parameter [17550,17567]"/>
  <delete-node tree=",: , [17567,17568]"/>
  <delete-node tree="): ) [17583,17584]"/>
  <delete-tree tree="visibility [17585,17591]"/>
  <delete-tree tree="return_type_definition [17592,17606]"/>
  <delete-node tree="{: { [17607,17608]"/>
  <delete-node tree="identifier: _transfer [17617,17626]"/>
  <delete-node tree="(: ( [17626,17627]"/>
  <delete-tree tree="call_argument [17627,17633]"/>
  <delete-node tree=",: , [17633,17634]"/>
  <delete-tree tree="call_argument [17635,17644]"/>
  <delete-node tree=",: , [17644,17645]"/>
  <delete-node tree="): ) [17652,17653]"/>
  <delete-node tree="call_expression [17617,17653]"/>
  <delete-node tree="expression_statement [17617,17654]"/>
  <delete-node tree="identifier: _approve [17663,17671]"/>
  <delete-node tree="(: ( [17671,17672]"/>
  <delete-tree tree="call_argument [17672,17678]"/>
  <delete-node tree=",: , [17678,17679]"/>
  <delete-tree tree="call_argument [17680,17692]"/>
  <delete-node tree=",: , [17692,17693]"/>
  <delete-tree tree="member_expression [17694,17731]"/>
  <delete-node tree="(: ( [17731,17732]"/>
  <delete-node tree=",: , [17738,17739]"/>
  <delete-node tree="): ) [17782,17783]"/>
  <delete-node tree="call_expression [17694,17783]"/>
  <delete-node tree="call_argument [17694,17783]"/>
  <delete-node tree="): ) [17783,17784]"/>
  <delete-node tree="call_expression [17663,17784]"/>
  <delete-node tree="expression_statement [17663,17785]"/>
  <delete-tree tree="return_statement [17794,17806]"/>
  <delete-node tree="}: } [17811,17812]"/>
  <delete-node tree="function_body [17607,17812]"/>
  <delete-node tree="function_definition [17512,17812]"/>
  <delete-node tree="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [17818,18202]"/>
  <delete-node tree="function: function [18207,18215]"/>
  <delete-node tree="identifier: increaseAllowance [18216,18233]"/>
  <delete-node tree="(: ( [18233,18234]"/>
  <delete-tree tree="parameter [18234,18249]"/>
  <delete-node tree=",: , [18249,18250]"/>
  <delete-node tree="): ) [18269,18270]"/>
  <delete-tree tree="visibility [18271,18277]"/>
  <delete-tree tree="return_type_definition [18278,18292]"/>
  <delete-tree tree="function_body [18293,18414]"/>
  <delete-node tree="function_definition [18207,18414]"/>
  <delete-node tree="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [18420,18896]"/>
  <delete-node tree="function: function [18901,18909]"/>
  <delete-node tree="identifier: decreaseAllowance [18910,18927]"/>
  <delete-node tree="(: ( [18927,18928]"/>
  <delete-tree tree="parameter [18928,18943]"/>
  <delete-node tree=",: , [18943,18944]"/>
  <delete-node tree="): ) [18968,18969]"/>
  <delete-tree tree="visibility [18970,18976]"/>
  <delete-tree tree="return_type_definition [18977,18991]"/>
  <delete-node tree="{: { [18992,18993]"/>
  <delete-node tree="identifier: _approve [19002,19010]"/>
  <delete-node tree="(: ( [19010,19011]"/>
  <delete-tree tree="call_argument [19011,19023]"/>
  <delete-node tree=",: , [19023,19024]"/>
  <delete-tree tree="call_argument [19025,19032]"/>
  <delete-node tree=",: , [19032,19033]"/>
  <delete-tree tree="member_expression [19034,19072]"/>
  <delete-node tree="(: ( [19072,19073]"/>
  <delete-tree tree="call_argument [19073,19088]"/>
  <delete-node tree=",: , [19088,19089]"/>
  <delete-node tree="): ) [19129,19130]"/>
  <delete-node tree="call_expression [19034,19130]"/>
  <delete-node tree="call_argument [19034,19130]"/>
  <delete-node tree="): ) [19130,19131]"/>
  <delete-node tree="call_expression [19002,19131]"/>
  <delete-node tree="expression_statement [19002,19132]"/>
  <delete-tree tree="return_statement [19141,19153]"/>
  <delete-node tree="}: } [19158,19159]"/>
  <delete-node tree="function_body [18992,19159]"/>
  <delete-node tree="function_definition [18901,19159]"/>
  <delete-node tree="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [19165,19628]"/>
  <delete-node tree="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [20103,20362]"/>
  <delete-node tree="function: function [20367,20375]"/>
  <delete-node tree="identifier: _mint [20376,20381]"/>
  <delete-node tree="(: ( [20381,20382]"/>
  <delete-tree tree="parameter [20382,20397]"/>
  <delete-node tree=",: , [20397,20398]"/>
  <delete-node tree="): ) [20413,20414]"/>
  <delete-tree tree="visibility [20415,20423]"/>
  <delete-node tree="{: { [20424,20425]"/>
  <delete-node tree="identifier: require [20434,20441]"/>
  <delete-node tree="(: ( [20441,20442]"/>
  <delete-tree tree="call_argument [20442,20463]"/>
  <delete-node tree=",: , [20463,20464]"/>
  <delete-node tree="): ) [20498,20499]"/>
  <delete-node tree="call_expression [20434,20499]"/>
  <delete-node tree="expression_statement [20434,20500]"/>
  <delete-node tree="identifier: _totalSupply [20510,20522]"/>
  <delete-node tree="=: = [20523,20524]"/>
  <delete-tree tree="member_expression [20525,20541]"/>
  <delete-node tree="(: ( [20541,20542]"/>
  <delete-node tree="): ) [20548,20549]"/>
  <delete-node tree="call_expression [20525,20549]"/>
  <delete-node tree="assignment_expression [20510,20549]"/>
  <delete-node tree="expression_statement [20510,20550]"/>
  <delete-tree tree="array_access [20559,20577]"/>
  <delete-node tree="=: = [20578,20579]"/>
  <delete-tree tree="member_expression [20580,20602]"/>
  <delete-node tree="(: ( [20602,20603]"/>
  <delete-node tree="): ) [20609,20610]"/>
  <delete-node tree="call_expression [20580,20610]"/>
  <delete-node tree="assignment_expression [20559,20610]"/>
  <delete-node tree="expression_statement [20559,20611]"/>
  <delete-node tree="emit: emit [20620,20624]"/>
  <delete-node tree="identifier: Transfer [20625,20633]"/>
  <delete-node tree="(: ( [20633,20634]"/>
  <delete-tree tree="call_argument [20634,20644]"/>
  <delete-node tree=",: , [20644,20645]"/>
  <delete-tree tree="call_argument [20646,20653]"/>
  <delete-node tree=",: , [20653,20654]"/>
  <delete-node tree="): ) [20661,20662]"/>
  <delete-node tree="emit_statement [20620,20663]"/>
  <delete-node tree="}: } [20668,20669]"/>
  <delete-node tree="function_body [20424,20669]"/>
  <delete-node tree="function_definition [20367,20669]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [20675,20983]"/>
  <delete-node tree="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [21336,21750]"/>
  <delete-tree tree="parameter [21773,21786]"/>
  <delete-node tree=",: , [21803,21804]"/>
  <delete-tree tree="visibility [21821,21829]"/>
  <delete-tree tree="assignment_expression [21997,22033]"/>
  <delete-tree tree="call_argument [22057,22062]"/>
  <delete-tree tree="call_argument [22073,22079]"/>
  <delete-tree tree="call_expression [51052,51064]"/>
  <delete-tree tree="member_expression [51176,51211]"/>
  <delete-node tree="identifier: _approve [51096,51104]"/>
  <delete-node tree="(: ( [51104,51105]"/>
  <delete-node tree=",: , [51128,51129]"/>
  <delete-tree tree="call_argument [51146,51158]"/>
  <delete-node tree=",: , [51158,51159]"/>
  <delete-node tree="call_argument [51176,51322]"/>
  <delete-node tree="): ) [51335,51336]"/>
  <delete-node tree="call_expression [51096,51336]"/>
  <delete-tree tree="array_access [19985,20005]"/>
  <delete-node tree="=: = [20006,20007]"/>
  <delete-tree tree="member_expression [20008,20032]"/>
  <delete-node tree="(: ( [20032,20033]"/>
  <delete-node tree="): ) [20039,20040]"/>
  <delete-node tree="call_expression [20008,20040]"/>
  <delete-node tree="assignment_expression [19985,20040]"/>
  <delete-node tree="expression_statement [19985,20041]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`.`amount` is then deducted      * from the caller's allowance.      *      * See {_burn} and {_approve}.      */ [22093,22260]"/>
  <delete-node tree="function: function [22265,22273]"/>
  <delete-node tree="identifier: _burnFrom [22274,22283]"/>
  <delete-node tree="(: ( [22283,22284]"/>
  <delete-tree tree="parameter [22284,22299]"/>
  <delete-node tree=",: , [22299,22300]"/>
  <delete-node tree="): ) [22315,22316]"/>
  <delete-tree tree="visibility [22317,22325]"/>
  <delete-node tree="{: { [22326,22327]"/>
  <delete-node tree="identifier: _burn [22336,22341]"/>
  <delete-node tree="(: ( [22341,22342]"/>
  <delete-tree tree="call_argument [22342,22349]"/>
  <delete-node tree=",: , [22349,22350]"/>
  <delete-node tree="): ) [22357,22358]"/>
  <delete-node tree="call_expression [22336,22358]"/>
  <delete-node tree="expression_statement [22336,22359]"/>
  <delete-node tree="identifier: _approve [22368,22376]"/>
  <delete-node tree="(: ( [22376,22377]"/>
  <delete-tree tree="call_argument [22377,22384]"/>
  <delete-node tree=",: , [22384,22385]"/>
  <delete-tree tree="call_argument [22386,22398]"/>
  <delete-node tree=",: , [22398,22399]"/>
  <delete-tree tree="member_expression [22400,22438]"/>
  <delete-node tree="(: ( [22438,22439]"/>
  <delete-node tree=",: , [22445,22446]"/>
  <delete-node tree="): ) [22485,22486]"/>
  <delete-node tree="call_expression [22400,22486]"/>
  <delete-node tree="call_argument [22400,22486]"/>
  <delete-node tree="): ) [22486,22487]"/>
  <delete-node tree="call_expression [22368,22487]"/>
  <delete-node tree="expression_statement [22368,22488]"/>
  <delete-node tree="}: } [22493,22494]"/>
  <delete-node tree="function_body [22326,22494]"/>
  <delete-node tree="function_definition [22265,22494]"/>
  <delete-node tree="contract: contract [69373,69381]"/>
  <delete-node tree="identifier: PoolGetters [69382,69393]"/>
  <delete-node tree="is: is [69394,69396]"/>
  <delete-tree tree="inheritance_specifier [69397,69406]"/>
  <delete-node tree="{: { [69407,69408]"/>
  <delete-node tree="comment: /**      * Global      */ [69446,69471]"/>
  <delete-tree tree="function_definition [69477,69573]"/>
  <delete-node tree="function: function [69579,69587]"/>
  <delete-node tree="identifier: dao [69588,69591]"/>
  <delete-node tree="(: ( [69591,69592]"/>
  <delete-node tree="): ) [69592,69593]"/>
  <delete-tree tree="state_mutability [69601,69605]"/>
  <delete-tree tree="return_type_definition [69606,69620]"/>
  <delete-tree tree="function_body [69621,69664]"/>
  <delete-node tree="function_definition [69579,69664]"/>
  <delete-tree tree="function_definition [69670,69764]"/>
  <delete-tree tree="function_definition [69770,69861]"/>
  <delete-tree tree="function_definition [69867,69965]"/>
  <delete-tree tree="function_definition [69971,70069]"/>
  <delete-tree tree="function_definition [70075,70179]"/>
  <delete-tree tree="function_definition [70185,70285]"/>
  <delete-node tree="function: function [70431,70439]"/>
  <delete-node tree="identifier: paused [70440,70446]"/>
  <delete-node tree="(: ( [70446,70447]"/>
  <delete-node tree="): ) [70447,70448]"/>
  <delete-tree tree="visibility [70449,70455]"/>
  <delete-tree tree="function_body [70476,70513]"/>
  <delete-node tree="function_definition [70431,70513]"/>
  <delete-node tree="comment: /**      * Account      */ [70519,70545]"/>
  <delete-node tree="function: function [70551,70559]"/>
  <delete-node tree="identifier: balanceOfStaged [70560,70575]"/>
  <delete-node tree="(: ( [70575,70576]"/>
  <delete-node tree="): ) [70591,70592]"/>
  <delete-tree tree="visibility [70593,70599]"/>
  <delete-tree tree="state_mutability [70600,70604]"/>
  <delete-tree tree="return_type_definition [70605,70622]"/>
  <delete-tree tree="function_body [70623,70678]"/>
  <delete-node tree="function_definition [70551,70678]"/>
  <delete-tree tree="function_definition [70684,70817]"/>
  <delete-tree tree="function_definition [70823,70950]"/>
  <delete-tree tree="function_definition [70956,71085]"/>
  <delete-node tree="function: function [71739,71747]"/>
  <delete-node tree="identifier: statusOf [71748,71756]"/>
  <delete-node tree="(: ( [71756,71757]"/>
  <delete-tree tree="parameter [71757,71772]"/>
  <delete-node tree="): ) [71772,71773]"/>
  <delete-tree tree="visibility [71782,71788]"/>
  <delete-tree tree="state_mutability [71797,71801]"/>
  <delete-tree tree="return_type_definition [71810,71838]"/>
  <delete-node tree="{: { [71843,71844]"/>
  <delete-node tree="return: return [71853,71859]"/>
  <delete-node tree="?: ? [71935,71936]"/>
  <delete-tree tree="member_expression [71937,71962]"/>
  <delete-node tree=":: : [71979,71980]"/>
  <delete-tree tree="member_expression [71981,71999]"/>
  <delete-node tree="ternary_expression [71872,71999]"/>
  <delete-node tree=".: . [71999,72000]"/>
  <delete-node tree="identifier: Fluid [72000,72005]"/>
  <delete-node tree="member_expression [71872,72005]"/>
  <delete-node tree="return_statement [71853,72006]"/>
  <delete-node tree="}: } [72011,72012]"/>
  <delete-node tree="function_body [71843,72012]"/>
  <delete-node tree="function_definition [71739,72012]"/>
  <delete-node tree="comment: /**      * Epoch      */ [72018,72042]"/>
  <delete-tree tree="function_definition [72048,72134]"/>
  <delete-node tree="}: } [72135,72136]"/>
  <delete-node tree="contract_body [69407,72136]"/>
  <delete-node tree="contract_declaration [69373,72136]"/>
  <delete-node tree="constant: constant [62762,62770]"/>
  <delete-node tree="identifier: UNISWAP_FACTORY [62771,62786]"/>
  <delete-node tree="=: = [62787,62788]"/>
  <delete-tree tree="type_cast_expression [62789,62854]"/>
  <delete-node tree="state_variable_declaration [62746,62855]"/>
  <delete-tree tree="visibility [62869,62877]"/>
  <delete-node tree="identifier: _dao [62878,62882]"/>
  <delete-node tree="state_variable_declaration [62861,62883]"/>
  <delete-tree tree="visibility [62896,62904]"/>
  <delete-node tree="identifier: _dollar [62905,62912]"/>
  <delete-node tree="state_variable_declaration [62888,62913]"/>
  <delete-tree tree="state_variable_declaration [62919,62946]"/>
  <delete-tree tree="state_variable_declaration [62951,62981]"/>
  <delete-tree tree="visibility [62994,63002]"/>
  <delete-node tree="identifier: _index [63003,63009]"/>
  <delete-node tree="state_variable_declaration [62986,63010]"/>
  <delete-tree tree="visibility [63023,63031]"/>
  <delete-node tree="identifier: _cumulative [63032,63043]"/>
  <delete-node tree="state_variable_declaration [63015,63044]"/>
  <delete-tree tree="state_variable_declaration [63049,63076]"/>
  <delete-tree tree="visibility [63090,63098]"/>
  <delete-node tree="identifier: _reserve [63099,63107]"/>
  <delete-node tree="state_variable_declaration [63082,63108]"/>
  <delete-tree tree="constructor_definition [63114,63209]"/>
  <delete-node tree="function: function [63215,63223]"/>
  <delete-node tree="identifier: setup [63224,63229]"/>
  <delete-node tree="(: ( [63229,63230]"/>
  <delete-node tree="): ) [63230,63231]"/>
  <delete-tree tree="visibility [63232,63238]"/>
  <delete-tree tree="modifier_invocation [63239,63246]"/>
  <delete-node tree="{: { [63247,63248]"/>
  <delete-tree tree="expression_statement [63257,63366]"/>
  <delete-tree tree="variable_declaration_statement [63376,63444]"/>
  <delete-tree tree="expression_statement [63453,63488]"/>
  <delete-node tree="}: } [63622,63623]"/>
  <delete-node tree="function_body [63247,63623]"/>
  <delete-node tree="function_definition [63215,63623]"/>
  <delete-node tree="comment: /**      * Trades/Liquidity: (1) Initializes reserve and blockTimestampLast (can calculate a price)      *                   (2) Has non-zero cumulative prices      *      * Steps: (1) Captures a reference blockTimestampLast      *        (2) First reported value      */ [63629,63900]"/>
  <delete-node tree="function: function [64153,64161]"/>
  <delete-node tree="identifier: initializeOracle [64162,64178]"/>
  <delete-node tree="(: ( [64178,64179]"/>
  <delete-node tree="): ) [64179,64180]"/>
  <delete-node tree="{: { [64189,64190]"/>
  <delete-tree tree="variable_declaration_statement [64199,64227]"/>
  <delete-node tree="=: = [64260,64261]"/>
  <delete-tree tree="ternary_expression [64262,64357]"/>
  <delete-node tree="variable_declaration_statement [64236,64358]"/>
  <delete-tree tree="variable_declaration_statement [64367,64465]"/>
  <delete-tree tree="if_statement [64474,64752]"/>
  <delete-node tree="}: } [64757,64758]"/>
  <delete-node tree="function_body [64189,64758]"/>
  <delete-node tree="function_definition [64153,64758]"/>
  <delete-node tree="function: function [64764,64772]"/>
  <delete-node tree="identifier: updateOracle [64773,64785]"/>
  <delete-node tree="(: ( [64785,64786]"/>
  <delete-node tree="): ) [64786,64787]"/>
  <delete-node tree="returns: returns [64796,64803]"/>
  <delete-node tree="(: ( [64804,64805]"/>
  <delete-node tree=",: , [64824,64825]"/>
  <delete-tree tree="parameter [64826,64830]"/>
  <delete-node tree="): ) [64830,64831]"/>
  <delete-node tree="return_type_definition [64796,64831]"/>
  <delete-node tree="{: { [64832,64833]"/>
  <delete-node tree="=: = [64913,64914]"/>
  <delete-tree tree="call_expression [64915,64930]"/>
  <delete-node tree="variable_declaration_statement [64893,64931]"/>
  <delete-node tree="=: = [64952,64953]"/>
  <delete-tree tree="boolean_literal [64954,64958]"/>
  <delete-node tree="variable_declaration_statement [64941,64959]"/>
  <delete-tree tree="if_statement [64968,65061]"/>
  <delete-tree tree="if_statement [65070,65160]"/>
  <delete-tree tree="return_statement [65170,65192]"/>
  <delete-node tree="}: } [65197,65198]"/>
  <delete-node tree="function_body [64832,65198]"/>
  <delete-node tree="function_definition [64764,65198]"/>
  <delete-tree tree="member_expression [80345,80364]"/>
  <delete-node tree="identifier: totalPhantom [80365,80377]"/>
  <delete-node tree=",: , [65351,65352]"/>
  <delete-tree tree="variable_declaration [65365,65386]"/>
  <delete-tree tree="member_expression [65399,65445]"/>
  <delete-tree tree="type_cast_expression [65446,65460]"/>
  <delete-tree tree="variable_declaration_statement [65471,65520]"/>
  <delete-node tree="comment: // overflow is desired [65521,65543]"/>
  <delete-node tree="=: = [65576,65577]"/>
  <delete-tree tree="ternary_expression [65578,65651]"/>
  <delete-node tree="variable_declaration_statement [65552,65652]"/>
  <delete-tree tree="expression_statement [65802,65830]"/>
  <delete-tree tree="expression_statement [65839,65869]"/>
  <delete-tree tree="return_statement [65879,65902]"/>
  <delete-tree tree="parameter [71118,71133]"/>
  <delete-tree tree="visibility [71135,71141]"/>
  <delete-tree tree="primitive_type [71156,71163]"/>
  <delete-node tree="identifier: balanceOfPhantom [71539,71555]"/>
  <delete-tree tree="call_argument [71556,71563]"/>
  <delete-tree tree="if_statement [71220,71275]"/>
  <delete-tree tree="member_expression [71320,71339]"/>
  <delete-tree tree="call_argument [71340,71354]"/>
  <delete-tree tree="if_statement [71574,71709]"/>
  <delete-tree tree="visibility [63924,63930]"/>
  <delete-tree tree="modifier_invocation [63931,63938]"/>
  <delete-node tree="returns: returns [63939,63946]"/>
  <delete-node tree="(: ( [63947,63948]"/>
  <delete-node tree=",: , [63967,63968]"/>
  <delete-tree tree="parameter [63969,63973]"/>
  <delete-node tree="): ) [63973,63974]"/>
  <delete-node tree="return_type_definition [63939,63974]"/>
  <delete-tree tree="call_argument [65716,65761]"/>
  <delete-node tree=",: , [65761,65762]"/>
  <delete-tree tree="call_argument [65775,65781]"/>
  <delete-node tree="identifier: _initialized [63989,64001]"/>
  <delete-tree tree="block_statement [64003,64049]"/>
  <delete-node tree="else: else [64050,64054]"/>
  <delete-tree tree="expression_statement [64069,64088]"/>
  <delete-node tree="(: ( [64108,64109]"/>
  <delete-node tree=",: , [64122,64123]"/>
  <delete-node tree="): ) [64129,64130]"/>
  <delete-node tree="tuple_expression [64108,64130]"/>
  <delete-node tree="function: function [65914,65922]"/>
  <delete-node tree="identifier: updateReserve [65923,65936]"/>
  <delete-node tree="(: ( [65936,65937]"/>
  <delete-node tree="): ) [65937,65938]"/>
  <delete-node tree="{: { [65965,65966]"/>
  <delete-node tree="=: = [65995,65996]"/>
  <delete-node tree="identifier: _reserve [65997,66005]"/>
  <delete-node tree="variable_declaration_statement [65975,66006]"/>
  <delete-tree tree="variable_declaration_statement [66015,66076]"/>
  <delete-tree tree="expression_statement [66085,66130]"/>
  <delete-node tree="comment: // get counter's reserve [66131,66155]"/>
  <delete-tree tree="return_statement [66165,66184]"/>
  <delete-node tree="}: } [66189,66190]"/>
  <delete-node tree="function_body [65965,66190]"/>
  <delete-node tree="function_definition [65914,66190]"/>
  <delete-node tree="function: function [66196,66204]"/>
  <delete-node tree="identifier: usdc [66205,66209]"/>
  <delete-node tree="(: ( [66209,66210]"/>
  <delete-node tree="): ) [66210,66211]"/>
  <delete-tree tree="state_mutability [66221,66225]"/>
  <delete-tree tree="return_type_definition [66226,66243]"/>
  <delete-tree tree="function_body [66244,66294]"/>
  <delete-node tree="function_definition [66196,66294]"/>
  <delete-node tree="function: function [66300,66308]"/>
  <delete-node tree="identifier: pair [66309,66313]"/>
  <delete-node tree="(: ( [66313,66314]"/>
  <delete-node tree="): ) [66314,66315]"/>
  <delete-tree tree="state_mutability [66325,66329]"/>
  <delete-tree tree="return_type_definition [66330,66347]"/>
  <delete-tree tree="function_body [66348,66386]"/>
  <delete-node tree="function_definition [66300,66386]"/>
  <delete-node tree="modifier: modifier [66481,66489]"/>
  <delete-node tree="identifier: onlyDao [66490,66497]"/>
  <delete-node tree="(: ( [66497,66498]"/>
  <delete-node tree="): ) [66498,66499]"/>
  <delete-node tree="{: { [66500,66501]"/>
  <delete-tree tree="expression_statement [66570,66572]"/>
  <delete-node tree="}: } [66577,66578]"/>
  <delete-node tree="function_body [66500,66578]"/>
  <delete-node tree="modifier_definition [66481,66578]"/>
  <delete-node tree="contract: contract [72819,72827]"/>
  <delete-node tree="identifier: PoolSetters [72828,72839]"/>
  <delete-node tree="is: is [72840,72842]"/>
  <delete-tree tree="inheritance_specifier [72843,72852]"/>
  <delete-node tree=",: , [72852,72853]"/>
  <delete-tree tree="inheritance_specifier [72854,72865]"/>
  <delete-node tree="{: { [72866,72867]"/>
  <delete-node tree="comment: /**      * Global      */ [72905,72930]"/>
  <delete-node tree="function: function [72936,72944]"/>
  <delete-node tree="identifier: pause [72945,72950]"/>
  <delete-node tree="(: ( [72950,72951]"/>
  <delete-node tree="): ) [72951,72952]"/>
  <delete-tree tree="function_body [72962,72999]"/>
  <delete-node tree="function_definition [72936,72999]"/>
  <delete-node tree="comment: /**      * Account      */ [73005,73031]"/>
  <delete-node tree="function: function [73037,73045]"/>
  <delete-node tree="identifier: incrementBalanceOfBonded [73046,73070]"/>
  <delete-node tree="(: ( [73070,73071]"/>
  <delete-tree tree="parameter [73071,73086]"/>
  <delete-node tree=",: , [73086,73087]"/>
  <delete-node tree="): ) [73102,73103]"/>
  <delete-node tree="{: { [73125,73126]"/>
  <delete-tree tree="member_expression [73135,73166]"/>
  <delete-node tree="=: = [73167,73168]"/>
  <delete-tree tree="member_expression [73169,73204]"/>
  <delete-node tree="(: ( [73204,73205]"/>
  <delete-node tree="): ) [73233,73234]"/>
  <delete-node tree="call_expression [73169,73234]"/>
  <delete-node tree="assignment_expression [73135,73234]"/>
  <delete-node tree="expression_statement [73135,73235]"/>
  <delete-tree tree="member_expression [73244,73265]"/>
  <delete-node tree="=: = [73266,73267]"/>
  <delete-tree tree="member_expression [73268,73293]"/>
  <delete-node tree="(: ( [73293,73294]"/>
  <delete-node tree="): ) [73300,73301]"/>
  <delete-node tree="call_expression [73268,73301]"/>
  <delete-node tree="assignment_expression [73244,73301]"/>
  <delete-node tree="expression_statement [73244,73302]"/>
  <delete-node tree="}: } [73307,73308]"/>
  <delete-node tree="function_body [73125,73308]"/>
  <delete-node tree="function_definition [73037,73308]"/>
  <delete-node tree="function: function [73314,73322]"/>
  <delete-node tree="identifier: decrementBalanceOfBonded [73323,73347]"/>
  <delete-node tree="(: ( [73347,73348]"/>
  <delete-node tree=",: , [73372,73373]"/>
  <delete-node tree=",: , [73396,73397]"/>
  <delete-tree tree="parameter [73406,73426]"/>
  <delete-node tree="): ) [73431,73432]"/>
  <delete-tree tree="visibility [73433,73441]"/>
  <delete-node tree="{: { [73442,73443]"/>
  <delete-tree tree="member_expression [73452,73483]"/>
  <delete-node tree="=: = [73484,73485]"/>
  <delete-tree tree="member_expression [73486,73521]"/>
  <delete-node tree="(: ( [73521,73522]"/>
  <delete-node tree=",: , [73541,73542]"/>
  <delete-tree tree="call_argument [73555,73561]"/>
  <delete-node tree="): ) [73570,73571]"/>
  <delete-node tree="call_expression [73486,73571]"/>
  <delete-node tree="assignment_expression [73452,73571]"/>
  <delete-node tree="expression_statement [73452,73572]"/>
  <delete-tree tree="member_expression [73581,73602]"/>
  <delete-node tree="=: = [73603,73604]"/>
  <delete-tree tree="member_expression [73605,73630]"/>
  <delete-node tree="(: ( [73630,73631]"/>
  <delete-node tree=",: , [73637,73638]"/>
  <delete-tree tree="call_argument [73639,73645]"/>
  <delete-node tree="): ) [73645,73646]"/>
  <delete-node tree="call_expression [73605,73646]"/>
  <delete-node tree="assignment_expression [73581,73646]"/>
  <delete-node tree="expression_statement [73581,73647]"/>
  <delete-node tree="}: } [73652,73653]"/>
  <delete-node tree="function_body [73442,73653]"/>
  <delete-node tree="function_definition [73314,73653]"/>
  <delete-node tree="function: function [73659,73667]"/>
  <delete-node tree="identifier: incrementBalanceOfStaged [73668,73692]"/>
  <delete-node tree="(: ( [73692,73693]"/>
  <delete-tree tree="parameter [73693,73708]"/>
  <delete-node tree=",: , [73708,73709]"/>
  <delete-node tree="): ) [73724,73725]"/>
  <delete-node tree="{: { [73747,73748]"/>
  <delete-tree tree="member_expression [73757,73788]"/>
  <delete-node tree="=: = [73789,73790]"/>
  <delete-tree tree="member_expression [73791,73826]"/>
  <delete-node tree="(: ( [73826,73827]"/>
  <delete-node tree="): ) [73855,73856]"/>
  <delete-node tree="call_expression [73791,73856]"/>
  <delete-node tree="assignment_expression [73757,73856]"/>
  <delete-node tree="expression_statement [73757,73857]"/>
  <delete-tree tree="member_expression [73866,73887]"/>
  <delete-node tree="=: = [73888,73889]"/>
  <delete-tree tree="member_expression [73890,73915]"/>
  <delete-node tree="(: ( [73915,73916]"/>
  <delete-node tree="): ) [73922,73923]"/>
  <delete-node tree="call_expression [73890,73923]"/>
  <delete-node tree="assignment_expression [73866,73923]"/>
  <delete-node tree="expression_statement [73866,73924]"/>
  <delete-node tree="}: } [73929,73930]"/>
  <delete-node tree="function_body [73747,73930]"/>
  <delete-node tree="function_definition [73659,73930]"/>
  <delete-node tree="function: function [73936,73944]"/>
  <delete-node tree="identifier: decrementBalanceOfStaged [73945,73969]"/>
  <delete-node tree="(: ( [73969,73970]"/>
  <delete-tree tree="parameter [73979,73994]"/>
  <delete-node tree=",: , [73994,73995]"/>
  <delete-tree tree="parameter [74004,74018]"/>
  <delete-node tree=",: , [74018,74019]"/>
  <delete-tree tree="parameter [74028,74048]"/>
  <delete-node tree="): ) [74053,74054]"/>
  <delete-tree tree="visibility [74055,74063]"/>
  <delete-node tree="{: { [74064,74065]"/>
  <delete-tree tree="expression_statement [74074,74194]"/>
  <delete-tree tree="member_expression [74203,74224]"/>
  <delete-node tree="=: = [74225,74226]"/>
  <delete-tree tree="member_expression [74227,74252]"/>
  <delete-node tree="(: ( [74252,74253]"/>
  <delete-node tree=",: , [74259,74260]"/>
  <delete-tree tree="call_argument [74261,74267]"/>
  <delete-node tree="): ) [74267,74268]"/>
  <delete-node tree="call_expression [74227,74268]"/>
  <delete-node tree="assignment_expression [74203,74268]"/>
  <delete-node tree="expression_statement [74203,74269]"/>
  <delete-node tree="}: } [74274,74275]"/>
  <delete-node tree="function_body [74064,74275]"/>
  <delete-node tree="function_definition [73936,74275]"/>
  <delete-node tree="function: function [74281,74289]"/>
  <delete-node tree="identifier: incrementBalanceOfClaimable [74290,74317]"/>
  <delete-node tree="(: ( [74317,74318]"/>
  <delete-tree tree="parameter [74318,74333]"/>
  <delete-node tree=",: , [74333,74334]"/>
  <delete-tree tree="parameter [74335,74349]"/>
  <delete-node tree="): ) [74349,74350]"/>
  <delete-tree tree="visibility [74359,74367]"/>
  <delete-node tree="{: { [74372,74373]"/>
  <delete-tree tree="expression_statement [74382,74492]"/>
  <delete-tree tree="member_expression [74501,74525]"/>
  <delete-node tree="=: = [74526,74527]"/>
  <delete-tree tree="member_expression [74528,74556]"/>
  <delete-node tree="(: ( [74556,74557]"/>
  <delete-node tree="): ) [74563,74564]"/>
  <delete-node tree="call_expression [74528,74564]"/>
  <delete-node tree="assignment_expression [74501,74564]"/>
  <delete-node tree="expression_statement [74501,74565]"/>
  <delete-node tree="}: } [74570,74571]"/>
  <delete-node tree="function_body [74372,74571]"/>
  <delete-node tree="function_definition [74281,74571]"/>
  <delete-node tree="function: function [74577,74585]"/>
  <delete-node tree="identifier: decrementBalanceOfClaimable [74586,74613]"/>
  <delete-node tree="(: ( [74613,74614]"/>
  <delete-tree tree="parameter [74623,74638]"/>
  <delete-node tree=",: , [74638,74639]"/>
  <delete-node tree=",: , [74662,74663]"/>
  <delete-tree tree="parameter [74672,74692]"/>
  <delete-node tree="): ) [74697,74698]"/>
  <delete-tree tree="visibility [74699,74707]"/>
  <delete-node tree="{: { [74708,74709]"/>
  <delete-tree tree="expression_statement [74718,74836]"/>
  <delete-tree tree="member_expression [74845,74869]"/>
  <delete-node tree="=: = [74870,74871]"/>
  <delete-tree tree="member_expression [74872,74900]"/>
  <delete-node tree="(: ( [74900,74901]"/>
  <delete-node tree=",: , [74907,74908]"/>
  <delete-tree tree="call_argument [74909,74915]"/>
  <delete-node tree="): ) [74915,74916]"/>
  <delete-node tree="call_expression [74872,74916]"/>
  <delete-node tree="assignment_expression [74845,74916]"/>
  <delete-node tree="expression_statement [74845,74917]"/>
  <delete-node tree="}: } [74922,74923]"/>
  <delete-node tree="function_body [74708,74923]"/>
  <delete-node tree="function_definition [74577,74923]"/>
  <delete-node tree="function: function [74929,74937]"/>
  <delete-node tree="identifier: incrementBalanceOfPhantom [74938,74963]"/>
  <delete-node tree="(: ( [74963,74964]"/>
  <delete-tree tree="parameter [74964,74979]"/>
  <delete-node tree=",: , [74979,74980]"/>
  <delete-tree tree="parameter [74981,74995]"/>
  <delete-node tree="): ) [74995,74996]"/>
  <delete-tree tree="visibility [75005,75013]"/>
  <delete-node tree="{: { [75018,75019]"/>
  <delete-tree tree="expression_statement [75028,75130]"/>
  <delete-tree tree="member_expression [75139,75161]"/>
  <delete-node tree="=: = [75162,75163]"/>
  <delete-tree tree="member_expression [75164,75190]"/>
  <delete-node tree="(: ( [75190,75191]"/>
  <delete-node tree="): ) [75197,75198]"/>
  <delete-node tree="call_expression [75164,75198]"/>
  <delete-node tree="assignment_expression [75139,75198]"/>
  <delete-node tree="expression_statement [75139,75199]"/>
  <delete-node tree="}: } [75204,75205]"/>
  <delete-node tree="function_body [75018,75205]"/>
  <delete-node tree="function_definition [74929,75205]"/>
  <delete-tree tree="function_definition [75211,75555]"/>
  <delete-node tree="}: } [75731,75732]"/>
  <delete-node tree="contract_body [72866,75732]"/>
  <delete-node tree="contract_declaration [72819,75732]"/>
  <delete-node tree="contract: contract [76415,76423]"/>
  <delete-node tree="identifier: Liquidity [76424,76433]"/>
  <delete-node tree="is: is [76434,76436]"/>
  <delete-tree tree="inheritance_specifier [76437,76448]"/>
  <delete-node tree="{: { [76449,76450]"/>
  <delete-node tree="constant: constant [76471,76479]"/>
  <delete-node tree="identifier: UNISWAP_FACTORY [76480,76495]"/>
  <delete-node tree="=: = [76496,76497]"/>
  <delete-tree tree="type_cast_expression [76498,76563]"/>
  <delete-node tree="state_variable_declaration [76455,76564]"/>
  <delete-node tree="function: function [76570,76578]"/>
  <delete-node tree="identifier: addLiquidity [76579,76591]"/>
  <delete-node tree="(: ( [76591,76592]"/>
  <delete-node tree="): ) [76612,76613]"/>
  <delete-node tree="{: { [76670,76671]"/>
  <delete-tree tree="variable_declaration_tuple [76680,76710]"/>
  <delete-node tree="=: = [76711,76712]"/>
  <delete-node tree="(: ( [76713,76714]"/>
  <delete-tree tree="primitive_type [76714,76721]"/>
  <delete-node tree="(: ( [76721,76722]"/>
  <delete-node tree="): ) [76730,76731]"/>
  <delete-node tree="type_cast_expression [76714,76731]"/>
  <delete-node tree=",: , [76731,76732]"/>
  <delete-tree tree="call_expression [76733,76739]"/>
  <delete-node tree="): ) [76739,76740]"/>
  <delete-node tree="tuple_expression [76713,76740]"/>
  <delete-node tree="variable_declaration_statement [76680,76741]"/>
  <delete-node tree="(: ( [76750,76751]"/>
  <delete-node tree=",: , [76767,76768]"/>
  <delete-node tree="): ) [76785,76786]"/>
  <delete-node tree="variable_declaration_tuple [76750,76786]"/>
  <delete-node tree="=: = [76787,76788]"/>
  <delete-tree tree="call_expression [76789,76814]"/>
  <delete-node tree="variable_declaration_statement [76750,76815]"/>
  <delete-node tree="=: = [76844,76845]"/>
  <delete-tree tree="parenthesized_expression [76846,76878]"/>
  <delete-node tree="?: ? [76891,76892]"/>
  <delete-node tree="identifier: dollarAmount [76893,76905]"/>
  <delete-node tree=":: : [76918,76919]"/>
  <delete-tree tree="member_expression [76920,76942]"/>
  <delete-node tree="(: ( [76942,76943]"/>
  <delete-node tree=",: , [76955,76956]"/>
  <delete-tree tree="call_argument [76957,76965]"/>
  <delete-node tree=",: , [76965,76966]"/>
  <delete-tree tree="call_argument [76967,76975]"/>
  <delete-node tree="): ) [76975,76976]"/>
  <delete-node tree="call_expression [76920,76976]"/>
  <delete-node tree="ternary_expression [76846,76976]"/>
  <delete-node tree="variable_declaration_statement [76825,76977]"/>
  <delete-tree tree="variable_declaration_statement [76987,77019]"/>
  <delete-tree tree="member_expression [77028,77051]"/>
  <delete-node tree="(: ( [77051,77052]"/>
  <delete-tree tree="call_argument [77052,77056]"/>
  <delete-node tree=",: , [77056,77057]"/>
  <delete-node tree="): ) [77070,77071]"/>
  <delete-node tree="call_expression [77028,77071]"/>
  <delete-node tree="expression_statement [77028,77072]"/>
  <delete-node tree="return: return [77146,77152]"/>
  <delete-node tree="(: ( [77153,77154]"/>
  <delete-node tree="identifier: usdcAmount [77154,77164]"/>
  <delete-node tree=",: , [77164,77165]"/>
  <delete-node tree="): ) [77206,77207]"/>
  <delete-node tree="tuple_expression [77153,77207]"/>
  <delete-node tree="return_statement [77146,77208]"/>
  <delete-node tree="}: } [77213,77214]"/>
  <delete-node tree="function_body [76670,77214]"/>
  <delete-node tree="function_definition [76570,77214]"/>
  <delete-node tree="comment: // overridable for testing [77220,77246]"/>
  <delete-node tree="function: function [77251,77259]"/>
  <delete-node tree="identifier: getReserves [77260,77271]"/>
  <delete-node tree="(: ( [77271,77272]"/>
  <delete-node tree=",: , [77286,77287]"/>
  <delete-node tree="): ) [77302,77303]"/>
  <delete-tree tree="state_mutability [77329,77333]"/>
  <delete-node tree="returns: returns [77342,77349]"/>
  <delete-node tree="(: ( [77350,77351]"/>
  <delete-node tree=",: , [77367,77368]"/>
  <delete-node tree="): ) [77385,77386]"/>
  <delete-node tree="return_type_definition [77342,77386]"/>
  <delete-node tree="{: { [77391,77392]"/>
  <delete-tree tree="variable_declaration_statement [77401,77466]"/>
  <delete-tree tree="expression_statement [77648,77758]"/>
  <delete-node tree="}: } [77763,77764]"/>
  <delete-node tree="function_body [77391,77764]"/>
  <delete-node tree="function_definition [77251,77764]"/>
  <delete-node tree="}: } [77765,77766]"/>
  <delete-node tree="contract_body [76449,77766]"/>
  <delete-node tree="contract_declaration [76415,77766]"/>
  <delete-tree tree="inheritance_specifier [78479,78488]"/>
  <delete-node tree="constructor: constructor [78528,78539]"/>
  <delete-node tree="(: ( [78539,78540]"/>
  <delete-tree tree="parameter [78540,78554]"/>
  <delete-node tree=",: , [78554,78555]"/>
  <delete-tree tree="parameter [78556,78569]"/>
  <delete-node tree="): ) [78569,78570]"/>
  <delete-node tree="public: public [78571,78577]"/>
  <delete-node tree="{: { [78578,78579]"/>
  <delete-tree tree="member_expression [78588,78607]"/>
  <delete-node tree="=: = [78608,78609]"/>
  <delete-node tree="identifier: IDAO [78610,78614]"/>
  <delete-node tree="(: ( [78614,78615]"/>
  <delete-node tree="): ) [78625,78626]"/>
  <delete-node tree="call_expression [78610,78626]"/>
  <delete-node tree="assignment_expression [78588,78626]"/>
  <delete-node tree="expression_statement [78588,78627]"/>
  <delete-tree tree="expression_statement [78636,78677]"/>
  <delete-tree tree="expression_statement [78686,78724]"/>
  <delete-node tree="}: } [78729,78730]"/>
  <delete-node tree="function_body [78578,78730]"/>
  <delete-node tree="constructor_definition [78528,78730]"/>
  <delete-node tree="function: function [79893,79901]"/>
  <delete-node tree="identifier: claim [79902,79907]"/>
  <delete-node tree="(: ( [79907,79908]"/>
  <delete-tree tree="parameter [79908,79921]"/>
  <delete-node tree="): ) [79921,79922]"/>
  <delete-node tree="{: { [79955,79956]"/>
  <delete-node tree="}: } [80214,80215]"/>
  <delete-node tree="function_body [79955,80215]"/>
  <delete-node tree="function_definition [79893,80215]"/>
  <delete-tree tree="binary_expression [80444,80464]"/>
  <delete-node tree="identifier: value [80523,80528]"/>
  <delete-node tree="number_literal: 0 [80548,80549]"/>
  <delete-node tree="?: ? [80442,80443]"/>
  <delete-node tree=":: : [80562,80563]"/>
  <delete-tree tree="call_expression [80564,80599]"/>
  <delete-node tree="ternary_expression [80411,80599]"/>
  <delete-node tree="identifier: incrementBalanceOfBonded [80629,80653]"/>
  <delete-node tree="(: ( [80653,80654]"/>
  <delete-node tree=",: , [80664,80665]"/>
  <delete-node tree="): ) [80671,80672]"/>
  <delete-node tree="call_expression [80629,80672]"/>
  <delete-node tree="expression_statement [80629,80673]"/>
  <delete-node tree="identifier: incrementBalanceOfPhantom [80682,80707]"/>
  <delete-node tree="(: ( [80707,80708]"/>
  <delete-node tree=",: , [80718,80719]"/>
  <delete-tree tree="call_argument [80720,80730]"/>
  <delete-node tree="): ) [80730,80731]"/>
  <delete-node tree="call_expression [80682,80731]"/>
  <delete-node tree="expression_statement [80682,80732]"/>
  <delete-node tree="identifier: value [81356,81361]"/>
  <delete-node tree=".: . [81362,81363]"/>
  <delete-node tree="identifier: div [81363,81366]"/>
  <delete-node tree="member_expression [81323,81366]"/>
  <delete-node tree="(: ( [81366,81367]"/>
  <delete-tree tree="call_argument [81380,81395]"/>
  <delete-node tree="): ) [81404,81405]"/>
  <delete-node tree="call_expression [81323,81405]"/>
  <delete-node tree=",: , [80081,80082]"/>
  <delete-tree tree="call_argument [66523,66541]"/>
  <delete-node tree="identifier: newUniv2 [82560,82568]"/>
  <delete-tree tree="binary_expression [56619,56634]"/>
  <delete-node tree="function: function [82838,82846]"/>
  <delete-node tree="identifier: emergencyWithdraw [82847,82864]"/>
  <delete-node tree="(: ( [82864,82865]"/>
  <delete-node tree=",: , [82878,82879]"/>
  <delete-tree tree="parameter [82880,82893]"/>
  <delete-node tree="): ) [82893,82894]"/>
  <delete-tree tree="modifier_invocation [82904,82911]"/>
  <delete-tree tree="function_body [82912,82974]"/>
  <delete-node tree="function_definition [82838,82974]"/>
  <delete-node tree="function: function [82980,82988]"/>
  <delete-node tree="identifier: emergencyPause [82989,83003]"/>
  <delete-node tree="(: ( [83003,83004]"/>
  <delete-node tree="): ) [83004,83005]"/>
  <delete-tree tree="modifier_invocation [83015,83022]"/>
  <delete-tree tree="function_body [83023,83047]"/>
  <delete-node tree="function_definition [82980,83047]"/>
  <delete-node tree="modifier: modifier [83290,83298]"/>
  <delete-node tree="identifier: onlyFrozen [83299,83309]"/>
  <delete-node tree="(: ( [83309,83310]"/>
  <delete-tree tree="parameter [83310,83325]"/>
  <delete-node tree="): ) [83325,83326]"/>
  <delete-node tree="{: { [83327,83328]"/>
  <delete-tree tree="expression_statement [83474,83476]"/>
  <delete-node tree="}: } [83481,83482]"/>
  <delete-node tree="function_body [83327,83482]"/>
  <delete-node tree="modifier_definition [83290,83482]"/>
  <delete-node tree="modifier: modifier [83488,83496]"/>
  <delete-node tree="identifier: onlyDao [83497,83504]"/>
  <delete-node tree="(: ( [83504,83505]"/>
  <delete-node tree="): ) [83505,83506]"/>
  <delete-node tree="{: { [83507,83508]"/>
  <delete-tree tree="expression_statement [83587,83589]"/>
  <delete-node tree="}: } [83594,83595]"/>
  <delete-node tree="function_body [83507,83595]"/>
  <delete-node tree="modifier_definition [83488,83595]"/>
  <delete-node tree="modifier: modifier [83601,83609]"/>
  <delete-node tree="identifier: notPaused [83610,83619]"/>
  <delete-node tree="(: ( [83619,83620]"/>
  <delete-node tree="): ) [83620,83621]"/>
  <delete-node tree="{: { [83622,83623]"/>
  <delete-tree tree="expression_statement [83682,83684]"/>
  <delete-node tree="}: } [83689,83690]"/>
  <delete-node tree="function_body [83622,83690]"/>
  <delete-node tree="modifier_definition [83601,83690]"/>
  <delete-node tree="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [85213,85893]"/>
  <delete-node tree=",: , [79230,79231]"/>
  <delete-node tree=",: , [79256,79257]"/>
  <delete-node tree="&gt;=: &gt;= [82209,82211]"/>
  <delete-node tree="identifier: value [82212,82217]"/>
  <delete-tree tree="call_argument [83530,83558]"/>
  <delete-tree tree="unary_expression [83645,83654]"/>
  <delete-node tree=".: . [81237,81238]"/>
  <delete-node tree="identifier: mul [81238,81241]"/>
  <delete-node tree="member_expression [81208,81241]"/>
  <delete-node tree="(: ( [81241,81242]"/>
  <delete-tree tree="call_argument [81242,81247]"/>
  <delete-node tree="): ) [81247,81248]"/>
  <delete-node tree="call_expression [81208,81248]"/>
  <delete-node tree=".: . [81248,81249]"/>
  <delete-node tree="identifier: div [81249,81252]"/>
  <delete-node tree="member_expression [81208,81252]"/>
  <delete-node tree="(: ( [81252,81253]"/>
  <delete-tree tree="call_argument [81266,81281]"/>
  <delete-node tree="): ) [81290,81291]"/>
  <delete-node tree="call_expression [81208,81291]"/>
  <delete-tree tree="call_argument [25880,25902]"/>
  <delete-tree tree="call_argument [25172,25190]"/>
  <delete-node tree=",: , [81599,81600]"/>
  <delete-tree tree="parameter [81928,81941]"/>
  <delete-node tree="identifier: onlyFrozen [81952,81962]"/>
  <delete-node tree="(: ( [81962,81963]"/>
  <delete-node tree="): ) [81973,81974]"/>
  <delete-node tree="modifier_invocation [81952,81974]"/>
  <delete-tree tree="modifier_invocation [81975,81984]"/>
  <delete-tree tree="binary_expression [82085,82104]"/>
  <delete-tree tree="member_expression [83363,83409]"/>
  <delete-node tree="(: ( [82301,82302]"/>
  <delete-node tree=",: , [82318,82319]"/>
  <delete-node tree="): ) [82336,82337]"/>
  <delete-node tree="variable_declaration_tuple [82301,82337]"/>
  <delete-node tree="=: = [82338,82339]"/>
  <delete-tree tree="call_expression [82340,82359]"/>
  <delete-node tree="variable_declaration_statement [82301,82360]"/>
  <delete-node tree="=: = [82403,82404]"/>
  <delete-tree tree="call_expression [82405,82477]"/>
  <delete-node tree="variable_declaration_statement [82370,82478]"/>
  <delete-node tree=",: , [82804,82805]"/>
  <delete-tree tree="call_argument [82806,82814]"/>
  <delete-node tree=",: , [82814,82815]"/>
  <delete-tree tree="call_argument [82816,82824]"/>
  <delete-node tree="&gt;: &gt; [82022,82023]"/>
  <delete-node tree="number_literal: 0 [82024,82025]"/>
  <delete-node tree="binary_expression [82008,82025]"/>
  <delete-node tree="&gt;=: &gt;= [71880,71882]"/>
  <delete-tree tree="member_expression [71883,71898]"/>
  <delete-node tree="[: [ [71898,71899]"/>
  <delete-node tree="identifier: account [71899,71906]"/>
  <delete-node tree="]: ] [71906,71907]"/>
  <delete-node tree="array_access [71872,71907]"/>
  <delete-tree tree="binary_expression [81117,81136]"/>
  <delete-tree tree="binary_expression [63524,63535]"/>
  <delete-node tree="||: || [63536,63538]"/>
  <delete-tree tree="binary_expression [63539,63556]"/>
  <delete-tree tree="member_expression [71404,71445]"/>
  <delete-node tree=".: . [71484,71485]"/>
  <delete-node tree="identifier: div [71485,71488]"/>
  <delete-node tree="member_expression [71404,71488]"/>
  <delete-node tree="(: ( [71488,71489]"/>
  <delete-tree tree="call_argument [71489,71500]"/>
  <delete-node tree="): ) [71500,71501]"/>
  <delete-node tree="call_expression [71404,71501]"/>
  <delete-tree tree="member_expression [77081,77106]"/>
  <delete-tree tree="call_argument [77119,77123]"/>
  <delete-node tree=",: , [77123,77124]"/>
  <delete-tree tree="call_argument [77125,77135]"/>
  <delete-tree tree="member_expression [79641,79657]"/>
  <delete-node tree="identifier: value [79670,79675]"/>
  <delete-node tree="%: % [57995,57996]"/>
  <delete-tree tree="binary_expression [57997,58004]"/>
  <delete-node tree="binary_expression [57979,58004]"/>
  <delete-node tree="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [104853,105533]"/>
  <delete-node tree="comment: /*     Copyright 2020 Zero Collateral Devs, standing on the shoulders of the Empty Set Squad &lt;zaifinance@protonmail.com&gt;     Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at     http://www.apache.org/licenses/LICENSE-2.0     Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [106347,107024]"/>
  <delete-node tree="contract: contract [107025,107033]"/>
  <delete-node tree="identifier: Deployer1 [107034,107043]"/>
  <delete-node tree="is: is [107044,107046]"/>
  <delete-node tree=",: , [107052,107053]"/>
  <delete-node tree=",: , [107064,107065]"/>
  <delete-node tree="{: { [107078,107079]"/>
  <delete-node tree="function: function [107084,107092]"/>
  <delete-node tree="identifier: initialize [107093,107103]"/>
  <delete-node tree="(: ( [107103,107104]"/>
  <delete-node tree="): ) [107104,107105]"/>
  <delete-tree tree="visibility [107106,107112]"/>
  <delete-tree tree="function_body [107125,107179]"/>
  <delete-node tree="function_definition [107084,107179]"/>
  <delete-node tree="function: function [107185,107193]"/>
  <delete-node tree="identifier: implement [107194,107203]"/>
  <delete-node tree="(: ( [107203,107204]"/>
  <delete-tree tree="parameter [107204,107226]"/>
  <delete-node tree="): ) [107226,107227]"/>
  <delete-tree tree="function_body [107237,107279]"/>
  <delete-node tree="function_definition [107185,107279]"/>
  <delete-node tree="}: } [107280,107281]"/>
  <delete-node tree="contract_body [107078,107281]"/>
  <delete-node tree="contract_declaration [107025,107281]"/>
  <delete-node tree="contract: contract [107283,107291]"/>
  <delete-node tree="identifier: Deployer2 [107292,107301]"/>
  <delete-node tree="is: is [107302,107304]"/>
  <delete-tree tree="inheritance_specifier [107305,107310]"/>
  <delete-node tree=",: , [107310,107311]"/>
  <delete-node tree=",: , [107322,107323]"/>
  <delete-tree tree="inheritance_specifier [107324,107335]"/>
  <delete-node tree="{: { [107336,107337]"/>
  <delete-node tree="function: function [107342,107350]"/>
  <delete-node tree="identifier: initialize [107351,107361]"/>
  <delete-node tree="(: ( [107361,107362]"/>
  <delete-node tree="): ) [107362,107363]"/>
  <delete-tree tree="visibility [107364,107370]"/>
  <delete-tree tree="modifier_invocation [107371,107382]"/>
  <delete-node tree="{: { [107383,107384]"/>
  <delete-tree tree="member_expression [107393,107415]"/>
  <delete-node tree="=: = [107416,107417]"/>
  <delete-tree tree="new_expression [107418,107428]"/>
  <delete-node tree="(: ( [107428,107429]"/>
  <delete-tree tree="primitive_type [107429,107436]"/>
  <delete-node tree="(: ( [107436,107437]"/>
  <delete-node tree="call_argument [107437,107445]"/>
  <delete-node tree="): ) [107445,107446]"/>
  <delete-node tree="type_cast_expression [107429,107446]"/>
  <delete-node tree="call_argument [107429,107446]"/>
  <delete-node tree="): ) [107446,107447]"/>
  <delete-node tree="call_expression [107418,107447]"/>
  <delete-node tree="assignment_expression [107393,107447]"/>
  <delete-node tree="expression_statement [107393,107448]"/>
  <delete-node tree="(: ( [107471,107472]"/>
  <delete-node tree="): ) [107472,107473]"/>
  <delete-node tree="call_expression [107457,107473]"/>
  <delete-node tree="expression_statement [107457,107474]"/>
  <delete-node tree="}: } [107479,107480]"/>
  <delete-node tree="function_body [107383,107480]"/>
  <delete-node tree="function_definition [107342,107480]"/>
  <delete-tree tree="function_definition [107486,107580]"/>
  <delete-node tree="}: } [107581,107582]"/>
  <delete-node tree="contract_body [107336,107582]"/>
  <delete-node tree="contract_declaration [107283,107582]"/>
  <delete-node tree="contract: contract [107584,107592]"/>
  <delete-node tree="identifier: Deployer3 [107593,107602]"/>
  <delete-node tree="is: is [107603,107605]"/>
  <delete-tree tree="inheritance_specifier [107606,107611]"/>
  <delete-node tree=",: , [107611,107612]"/>
  <delete-tree tree="inheritance_specifier [107613,107623]"/>
  <delete-node tree=",: , [107623,107624]"/>
  <delete-tree tree="inheritance_specifier [107625,107636]"/>
  <delete-node tree="{: { [107637,107638]"/>
  <delete-node tree="function: function [107643,107651]"/>
  <delete-node tree="identifier: initialize [107652,107662]"/>
  <delete-node tree="(: ( [107662,107663]"/>
  <delete-node tree="): ) [107663,107664]"/>
  <delete-tree tree="visibility [107665,107671]"/>
  <delete-tree tree="modifier_invocation [107672,107683]"/>
  <delete-node tree="{: { [107684,107685]"/>
  <delete-tree tree="member_expression [107694,107714]"/>
  <delete-node tree="=: = [107715,107716]"/>
  <delete-tree tree="primitive_type [107717,107724]"/>
  <delete-node tree="(: ( [107724,107725]"/>
  <delete-tree tree="new_expression [107738,107746]"/>
  <delete-node tree="(: ( [107746,107747]"/>
  <delete-tree tree="primitive_type [107747,107754]"/>
  <delete-node tree="(: ( [107754,107755]"/>
  <delete-node tree="call_argument [107755,107763]"/>
  <delete-node tree="): ) [107763,107764]"/>
  <delete-node tree="type_cast_expression [107747,107764]"/>
  <delete-node tree="call_argument [107747,107764]"/>
  <delete-node tree=",: , [107764,107765]"/>
  <delete-tree tree="call_argument [107766,107790]"/>
  <delete-node tree="): ) [107790,107791]"/>
  <delete-node tree="call_expression [107738,107791]"/>
  <delete-node tree="call_argument [107738,107791]"/>
  <delete-node tree="): ) [107800,107801]"/>
  <delete-node tree="type_cast_expression [107717,107801]"/>
  <delete-node tree="assignment_expression [107694,107801]"/>
  <delete-node tree="expression_statement [107694,107802]"/>
  <delete-node tree="}: } [107807,107808]"/>
  <delete-node tree="function_body [107684,107808]"/>
  <delete-node tree="function_definition [107643,107808]"/>
  <delete-tree tree="function_definition [107814,107908]"/>
  <delete-node tree="}: } [107909,107910]"/>
  <delete-node tree="contract_body [107637,107910]"/>
  <delete-node tree="contract_declaration [107584,107910]"/>
</actions>
