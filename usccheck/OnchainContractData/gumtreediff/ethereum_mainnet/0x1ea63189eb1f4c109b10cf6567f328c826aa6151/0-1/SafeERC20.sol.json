{
  "matches": [
    {
      "src": "identifier: value [2293,2298]",
      "dest": "identifier: value [2293,2298]"
    },
    {
      "src": "visibility [2300,2308]",
      "dest": "visibility [2300,2308]"
    },
    {
      "src": "variable_declaration_statement [2030,2104]",
      "dest": "variable_declaration_statement [2030,2104]"
    },
    {
      "src": "type_alias [613,621]",
      "dest": "type_alias [613,621]"
    },
    {
      "src": "primitive_type [2030,2037]",
      "dest": "primitive_type [2030,2037]"
    },
    {
      "src": "identifier: SafeMath [613,621]",
      "dest": "identifier: SafeMath [613,621]"
    },
    {
      "src": "(: ( [3601,3602]",
      "dest": "(: ( [3601,3602]"
    },
    {
      "src": "comment: // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that [3131,3238]",
      "dest": "comment: // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that [3131,3238]"
    },
    {
      "src": "expression_statement [3583,3669]",
      "dest": "expression_statement [3583,3669]"
    },
    {
      "src": "member_expression [3591,3601]",
      "dest": "member_expression [3591,3601]"
    },
    {
      "src": "member_expression [2497,2510]",
      "dest": "member_expression [2497,2510]"
    },
    {
      "src": "call_argument [1712,1725]",
      "dest": "call_argument [1712,1725]"
    },
    {
      "src": "primitive_type [2069,2076]",
      "dest": "primitive_type [2069,2076]"
    },
    {
      "src": "uint256: uint256 [2285,2292]",
      "dest": "uint256: uint256 [2285,2292]"
    },
    {
      "src": "(: ( [3461,3462]",
      "dest": "(: ( [3461,3462]"
    },
    {
      "src": "(: ( [2357,2358]",
      "dest": "(: ( [2357,2358]"
    },
    {
      "src": "function_definition [1934,2217]",
      "dest": "function_definition [1934,2217]"
    },
    {
      "src": "call_argument [1727,1734]",
      "dest": "call_argument [1727,1734]"
    },
    {
      "src": "binary_expression [1679,1741]",
      "dest": "binary_expression [1679,1741]"
    },
    {
      "src": "call_argument [3614,3620]",
      "dest": "call_argument [3614,3620]"
    },
    {
      "src": "identifier: approve [1887,1894]",
      "dest": "identifier: approve [1887,1894]"
    },
    {
      "src": "identifier: token [700,705]",
      "dest": "identifier: token [700,705]"
    },
    {
      "src": "call_argument [832,837]",
      "dest": "call_argument [832,837]"
    },
    {
      "src": "member_expression [2342,2357]",
      "dest": "member_expression [2342,2357]"
    },
    {
      "src": "string [109,122]",
      "dest": "string [109,122]"
    },
    {
      "src": "(: ( [1001,1002]",
      "dest": "(: ( [1001,1002]"
    },
    {
      "src": "): ) [1380,1381]",
      "dest": "): ) [1380,1381]"
    },
    {
      "src": "call_argument [2497,2519]",
      "dest": "call_argument [2497,2519]"
    },
    {
      "src": "primitive_type [2977,2982]",
      "dest": "primitive_type [2977,2982]"
    },
    {
      "src": "identifier: value [727,732]",
      "dest": "identifier: value [727,732]"
    },
    {
      "src": "call_argument [2373,2380]",
      "dest": "call_argument [2373,2380]"
    },
    {
      "src": "}: } [2216,2217]",
      "dest": "}: } [2216,2217]"
    },
    {
      "src": "^:  ^ [48,50]",
      "dest": "^:  ^ [48,50]"
    },
    {
      "src": ",: , [1994,1995]",
      "dest": ",: , [1994,1995]"
    },
    {
      "src": ".: . [1007,1008]",
      "dest": ".: . [1007,1008]"
    },
    {
      "src": "(: ( [2253,2254]",
      "dest": "(: ( [2253,2254]"
    },
    {
      "src": "\": \" [65,66]",
      "dest": "\": \" [65,66]"
    },
    {
      "src": "uint256: uint256 [2030,2037]",
      "dest": "uint256: uint256 [2030,2037]"
    },
    {
      "src": ".: . [2168,2169]",
      "dest": ".: . [2168,2169]"
    },
    {
      "src": "member_expression [2497,2519]",
      "dest": "member_expression [2497,2519]"
    },
    {
      "src": "\": \" [99,100]",
      "dest": "\": \" [99,100]"
    },
    {
      "src": "identifier: transferFrom [1008,1020]",
      "dest": "identifier: transferFrom [1008,1020]"
    },
    {
      "src": "==: == [1686,1688]",
      "dest": "==: == [1686,1688]"
    },
    {
      "src": "identifier: to [828,830]",
      "dest": "identifier: to [828,830]"
    },
    {
      "src": ",: , [2975,2976]",
      "dest": ",: , [2975,2976]"
    },
    {
      "src": "identifier: from [1031,1035]",
      "dest": "identifier: from [1031,1035]"
    },
    {
      "src": ",: , [1348,1349]",
      "dest": ",: , [1348,1349]"
    },
    {
      "src": "identifier: token [2342,2347]",
      "dest": "identifier: token [2342,2347]"
    },
    {
      "src": "function: function [2223,2231]",
      "dest": "function: function [2223,2231]"
    },
    {
      "src": "member_expression [2053,2096]",
      "dest": "member_expression [2053,2096]"
    },
    {
      "src": "identifier: SafeERC20 [591,600]",
      "dest": "identifier: SafeERC20 [591,600]"
    },
    {
      "src": "call_argument [2187,2194]",
      "dest": "call_argument [2187,2194]"
    },
    {
      "src": "import: import [79,85]",
      "dest": "import: import [79,85]"
    },
    {
      "src": "identifier: require [1671,1678]",
      "dest": "identifier: require [1671,1678]"
    },
    {
      "src": "call_expression [952,1048]",
      "dest": "call_expression [952,1048]"
    },
    {
      "src": ".: . [2477,2478]",
      "dest": ".: . [2477,2478]"
    },
    {
      "src": "type_name [2285,2292]",
      "dest": "type_name [2285,2292]"
    },
    {
      "src": "identifier: token [2163,2168]",
      "dest": "identifier: token [2163,2168]"
    },
    {
      "src": ",: , [2519,2520]",
      "dest": ",: , [2519,2520]"
    },
    {
      "src": ",: , [1977,1978]",
      "dest": ",: , [1977,1978]"
    },
    {
      "src": "call_argument [2366,2370]",
      "dest": "call_argument [2366,2370]"
    },
    {
      "src": "identifier: value [1680,1685]",
      "dest": "identifier: value [1680,1685]"
    },
    {
      "src": "primitive_type [2358,2365]",
      "dest": "primitive_type [2358,2365]"
    },
    {
      "src": "call_argument [2386,2391]",
      "dest": "call_argument [2386,2391]"
    },
    {
      "src": "identifier: this [1720,1724]",
      "dest": "identifier: this [1720,1724]"
    },
    {
      "src": "identifier: IERC20 [1965,1971]",
      "dest": "identifier: IERC20 [1965,1971]"
    },
    {
      "src": "primitive_type [3379,3386]",
      "dest": "primitive_type [3379,3386]"
    },
    {
      "src": "{: { [743,744]",
      "dest": "{: { [743,744]"
    },
    {
      "src": "primitive_type [2319,2326]",
      "dest": "primitive_type [2319,2326]"
    },
    {
      "src": "identifier: _callOptionalReturn [2943,2962]",
      "dest": "identifier: _callOptionalReturn [2943,2962]"
    },
    {
      "src": "parameter [1979,1994]",
      "dest": "parameter [1979,1994]"
    },
    {
      "src": "identifier: token [2970,2975]",
      "dest": "identifier: token [2970,2975]"
    },
    {
      "src": ".: . [1886,1887]",
      "dest": ".: . [1886,1887]"
    },
    {
      "src": ".: . [783,784]",
      "dest": ".: . [783,784]"
    },
    {
      "src": "address: address [3379,3386]",
      "dest": "address: address [3379,3386]"
    },
    {
      "src": "uint256: uint256 [626,633]",
      "dest": "uint256: uint256 [626,633]"
    },
    {
      "src": "call_argument [3387,3392]",
      "dest": "call_argument [3387,3392]"
    },
    {
      "src": "identifier: to [914,916]",
      "dest": "identifier: to [914,916]"
    },
    {
      "src": "visibility [933,941]",
      "dest": "visibility [933,941]"
    },
    {
      "src": "string_literal [2393,2436]",
      "dest": "string_literal [2393,2436]"
    },
    {
      "src": "if_statement [3458,3679]",
      "dest": "if_statement [3458,3679]"
    },
    {
      "src": "identifier: selector [1895,1903]",
      "dest": "identifier: selector [1895,1903]"
    },
    {
      "src": "type_name [918,925]",
      "dest": "type_name [918,925]"
    },
    {
      "src": "identifier: token [972,977]",
      "dest": "identifier: token [972,977]"
    },
    {
      "src": "identifier: selector [818,826]",
      "dest": "identifier: selector [818,826]"
    },
    {
      "src": ".: . [982,983]",
      "dest": ".: . [982,983]"
    },
    {
      "src": "parameter [1996,2009]",
      "dest": "parameter [1996,2009]"
    },
    {
      "src": "(: ( [1679,1680]",
      "dest": "(: ( [1679,1680]"
    },
    {
      "src": ".: . [2347,2348]",
      "dest": ".: . [2347,2348]"
    },
    {
      "src": "(: ( [2496,2497]",
      "dest": "(: ( [2496,2497]"
    },
    {
      "src": ",: , [830,831]",
      "dest": ",: , [830,831]"
    },
    {
      "src": "): ) [931,932]",
      "dest": "): ) [931,932]"
    },
    {
      "src": "call_argument [1905,1912]",
      "dest": "call_argument [1905,1912]"
    },
    {
      "src": ".: . [3594,3595]",
      "dest": ".: . [3594,3595]"
    },
    {
      "src": "function_definition [1315,1928]",
      "dest": "function_definition [1315,1928]"
    },
    {
      "src": "member_expression [2474,2496]",
      "dest": "member_expression [2474,2496]"
    },
    {
      "src": "internal: internal [1382,1390]",
      "dest": "internal: internal [1382,1390]"
    },
    {
      "src": "function_definition [852,1055]",
      "dest": "function_definition [852,1055]"
    },
    {
      "src": "(: ( [772,773]",
      "dest": "(: ( [772,773]"
    },
    {
      "src": "identifier: add [2093,2096]",
      "dest": "identifier: add [2093,2096]"
    },
    {
      "src": "type_name [626,633]",
      "dest": "type_name [626,633]"
    },
    {
      "src": "(: ( [2385,2386]",
      "dest": "(: ( [2385,2386]"
    },
    {
      "src": "}: } [2550,2551]",
      "dest": "}: } [2550,2551]"
    },
    {
      "src": "parameter [1367,1380]",
      "dest": "parameter [1367,1380]"
    },
    {
      "src": "primitive_type [626,633]",
      "dest": "primitive_type [626,633]"
    },
    {
      "src": "visibility [2011,2019]",
      "dest": "visibility [2011,2019]"
    },
    {
      "src": ",: , [705,706]",
      "dest": ",: , [705,706]"
    },
    {
      "src": "(: ( [2162,2163]",
      "dest": "(: ( [2162,2163]"
    },
    {
      "src": "type_name [707,714]",
      "dest": "type_name [707,714]"
    },
    {
      "src": "user_defined_type [1336,1342]",
      "dest": "user_defined_type [1336,1342]"
    },
    {
      "src": ",: , [3621,3622]",
      "dest": ",: , [3621,3622]"
    },
    {
      "src": "call_expression [2113,2210]",
      "dest": "call_expression [2113,2210]"
    },
    {
      "src": "user_defined_type [1965,1971]",
      "dest": "user_defined_type [1965,1971]"
    },
    {
      "src": "type_name [906,913]",
      "dest": "type_name [906,913]"
    },
    {
      "src": "identifier: _callOptionalReturn [2113,2132]",
      "dest": "identifier: _callOptionalReturn [2113,2132]"
    },
    {
      "src": "): ) [3483,3484]",
      "dest": "): ) [3483,3484]"
    },
    {
      "src": "\": \" [76,77]",
      "dest": "\": \" [76,77]"
    },
    {
      "src": "call_expression [780,838]",
      "dest": "call_expression [780,838]"
    },
    {
      "src": "call_argument [1755,1811]",
      "dest": "call_argument [1755,1811]"
    },
    {
      "src": "variable_declaration [3353,3376]",
      "dest": "variable_declaration [3353,3376]"
    },
    {
      "src": "address: address [906,913]",
      "dest": "address: address [906,913]"
    },
    {
      "src": "): ) [2009,2010]",
      "dest": "): ) [2009,2010]"
    },
    {
      "src": "identifier: data [2990,2994]",
      "dest": "identifier: data [2990,2994]"
    },
    {
      "src": "contract_body [601,3687]",
      "dest": "contract_body [601,3687]"
    },
    {
      "src": "call_expression [2053,2103]",
      "dest": "call_expression [2053,2103]"
    },
    {
      "src": "call_argument [2196,2208]",
      "dest": "call_argument [2196,2208]"
    },
    {
      "src": "user_defined_type [693,699]",
      "dest": "user_defined_type [693,699]"
    },
    {
      "src": "expression_statement [2113,2211]",
      "dest": "expression_statement [2113,2211]"
    },
    {
      "src": "identifier: _callOptionalReturn [1831,1850]",
      "dest": "identifier: _callOptionalReturn [1831,1850]"
    },
    {
      "src": "parameter [2254,2266]",
      "dest": "parameter [2254,2266]"
    },
    {
      "src": "function_body [2309,2551]",
      "dest": "function_body [2309,2551]"
    },
    {
      "src": ",: , [904,905]",
      "dest": ",: , [904,905]"
    },
    {
      "src": "call_expression [3591,3621]",
      "dest": "call_expression [3591,3621]"
    },
    {
      "src": "identifier: value [832,837]",
      "dest": "identifier: value [832,837]"
    },
    {
      "src": "type_name [878,884]",
      "dest": "type_name [878,884]"
    },
    {
      "src": "primitive_type [892,899]",
      "dest": "primitive_type [892,899]"
    },
    {
      "src": "identifier: encodeWithSelector [2144,2162]",
      "dest": "identifier: encodeWithSelector [2144,2162]"
    },
    {
      "src": "\": \" [3413,3414]",
      "dest": "\": \" [3413,3414]"
    },
    {
      "src": "{: { [942,943]",
      "dest": "{: { [942,943]"
    },
    {
      "src": "identifier: abi [979,982]",
      "dest": "identifier: abi [979,982]"
    },
    {
      "src": "primitive_type [2268,2275]",
      "dest": "primitive_type [2268,2275]"
    },
    {
      "src": "visibility [1382,1390]",
      "dest": "visibility [1382,1390]"
    },
    {
      "src": "call_argument [2133,2138]",
      "dest": "call_argument [2133,2138]"
    },
    {
      "src": "string [65,77]",
      "dest": "string [65,77]"
    },
    {
      "src": "string_literal [3623,3667]",
      "dest": "string_literal [3623,3667]"
    },
    {
      "src": "parameter [906,916]",
      "dest": "parameter [906,916]"
    },
    {
      "src": "call_argument [979,1047]",
      "dest": "call_argument [979,1047]"
    },
    {
      "src": "type_name [1336,1342]",
      "dest": "type_name [1336,1342]"
    },
    {
      "src": "member_expression [1881,1903]",
      "dest": "member_expression [1881,1903]"
    },
    {
      "src": "call_argument [2474,2543]",
      "dest": "call_argument [2474,2543]"
    },
    {
      "src": "address: address [707,714]",
      "dest": "address: address [707,714]"
    },
    {
      "src": "address: address [1979,1986]",
      "dest": "address: address [1979,1986]"
    },
    {
      "src": "identifier: allowance [2348,2357]",
      "dest": "identifier: allowance [2348,2357]"
    },
    {
      "src": "member_expression [1881,1894]",
      "dest": "member_expression [1881,1894]"
    },
    {
      "src": "parameter [2268,2283]",
      "dest": "parameter [2268,2283]"
    },
    {
      "src": "expression_statement [753,840]",
      "dest": "expression_statement [753,840]"
    },
    {
      "src": "type_name [2963,2969]",
      "dest": "type_name [2963,2969]"
    },
    {
      "src": "identifier: value [926,931]",
      "dest": "identifier: value [926,931]"
    },
    {
      "src": "identifier: _callOptionalReturn [2447,2466]",
      "dest": "identifier: _callOptionalReturn [2447,2466]"
    },
    {
      "src": ",: , [778,779]",
      "dest": ",: , [778,779]"
    },
    {
      "src": "internal: internal [734,742]",
      "dest": "internal: internal [734,742]"
    },
    {
      "src": "call_argument [1037,1039]",
      "dest": "call_argument [1037,1039]"
    },
    {
      "src": "identifier: IERC20 [2963,2969]",
      "dest": "identifier: IERC20 [2963,2969]"
    },
    {
      "src": "): ) [2436,2437]",
      "dest": "): ) [2436,2437]"
    },
    {
      "src": "): ) [2208,2209]",
      "dest": "): ) [2208,2209]"
    },
    {
      "src": "type_cast_expression [1712,1725]",
      "dest": "type_cast_expression [1712,1725]"
    },
    {
      "src": "identifier: this [2366,2370]",
      "dest": "identifier: this [2366,2370]"
    },
    {
      "src": ".: . [3472,3473]",
      "dest": ".: . [3472,3473]"
    },
    {
      "src": "primitive_type [1367,1374]",
      "dest": "primitive_type [1367,1374]"
    },
    {
      "src": "identifier: newAllowance [2038,2050]",
      "dest": "identifier: newAllowance [2038,2050]"
    },
    {
      "src": "function_body [1391,1928]",
      "dest": "function_body [1391,1928]"
    },
    {
      "src": "parameter [2963,2975]",
      "dest": "parameter [2963,2975]"
    },
    {
      "src": "expression_statement [1671,1822]",
      "dest": "expression_statement [1671,1822]"
    },
    {
      "src": "identifier: spender [1727,1734]",
      "dest": "identifier: spender [1727,1734]"
    },
    {
      "src": "type_name [3353,3358]",
      "dest": "type_name [3353,3358]"
    },
    {
      "src": ",: , [826,827]",
      "dest": ",: , [826,827]"
    },
    {
      "src": "address: address [1712,1719]",
      "dest": "address: address [1712,1719]"
    },
    {
      "src": "identifier: abi [780,783]",
      "dest": "identifier: abi [780,783]"
    },
    {
      "src": "function_body [3004,3685]",
      "dest": "function_body [3004,3685]"
    },
    {
      "src": "): ) [1820,1821]",
      "dest": "): ) [1820,1821]"
    },
    {
      "src": ".: . [808,809]",
      "dest": ".: . [808,809]"
    },
    {
      "src": "string [2393,2436]",
      "dest": "string [2393,2436]"
    },
    {
      "src": "type_cast_expression [3379,3393]",
      "dest": "type_cast_expression [3379,3393]"
    },
    {
      "src": "identifier: spender [2084,2091]",
      "dest": "identifier: spender [2084,2091]"
    },
    {
      "src": "): ) [2542,2543]",
      "dest": "): ) [2542,2543]"
    },
    {
      "src": "parameter [892,904]",
      "dest": "parameter [892,904]"
    },
    {
      "src": "}: } [3678,3679]",
      "dest": "}: } [3678,3679]"
    },
    {
      "src": "identifier: spender [1358,1365]",
      "dest": "identifier: spender [1358,1365]"
    },
    {
      "src": "member_expression [3379,3406]",
      "dest": "member_expression [3379,3406]"
    },
    {
      "src": "{: { [2309,2310]",
      "dest": "{: { [2309,2310]"
    },
    {
      "src": "(: ( [3614,3615]",
      "dest": "(: ( [3614,3615]"
    },
    {
      "src": "type_name [693,699]",
      "dest": "type_name [693,699]"
    },
    {
      "src": "identifier: spender [1987,1994]",
      "dest": "identifier: spender [1987,1994]"
    },
    {
      "src": "identifier: value [2386,2391]",
      "dest": "identifier: value [2386,2391]"
    },
    {
      "src": "call_expression [1696,1735]",
      "dest": "call_expression [1696,1735]"
    },
    {
      "src": "identifier: allowance [2059,2068]",
      "dest": "identifier: allowance [2059,2068]"
    },
    {
      "src": "uint256: uint256 [2319,2326]",
      "dest": "uint256: uint256 [2319,2326]"
    },
    {
      "src": "if: if [3458,3460]",
      "dest": "if: if [3458,3460]"
    },
    {
      "src": "primitive_type [906,913]",
      "dest": "primitive_type [906,913]"
    },
    {
      "src": "variable_declaration [2030,2050]",
      "dest": "variable_declaration [2030,2050]"
    },
    {
      "src": ",: , [1912,1913]",
      "dest": ",: , [1912,1913]"
    },
    {
      "src": "): ) [3447,3448]",
      "dest": "): ) [3447,3448]"
    },
    {
      "src": "string [3413,3447]",
      "dest": "string [3413,3447]"
    },
    {
      "src": "primitive_type [1996,2003]",
      "dest": "primitive_type [1996,2003]"
    },
    {
      "src": ",: , [3612,3613]",
      "dest": ",: , [3612,3613]"
    },
    {
      "src": "call_argument [1720,1724]",
      "dest": "call_argument [1720,1724]"
    },
    {
      "src": "expression_statement [952,1049]",
      "dest": "expression_statement [952,1049]"
    },
    {
      "src": "comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [2557,2929]",
      "dest": "comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [2557,2929]"
    },
    {
      "src": "comment: // Return data is optional [3487,3513]",
      "dest": "comment: // Return data is optional [3487,3513]"
    },
    {
      "src": "memory: memory [2983,2989]",
      "dest": "memory: memory [2983,2989]"
    },
    {
      "src": "): ) [1047,1048]",
      "dest": "): ) [1047,1048]"
    },
    {
      "src": "using: using [639,644]",
      "dest": "using: using [639,644]"
    },
    {
      "src": "primitive_type [1979,1986]",
      "dest": "primitive_type [1979,1986]"
    },
    {
      "src": "\": \" [121,122]",
      "dest": "\": \" [121,122]"
    },
    {
      "src": "member_expression [803,817]",
      "dest": "member_expression [803,817]"
    },
    {
      "src": ",: , [2138,2139]",
      "dest": ",: , [2138,2139]"
    },
    {
      "src": "visibility [2996,3003]",
      "dest": "visibility [2996,3003]"
    },
    {
      "src": "uint256: uint256 [918,925]",
      "dest": "uint256: uint256 [918,925]"
    },
    {
      "src": "call_argument [2140,2209]",
      "dest": "call_argument [2140,2209]"
    },
    {
      "src": "call_expression [1831,1921]",
      "dest": "call_expression [1831,1921]"
    },
    {
      "src": "identifier: require [3583,3590]",
      "dest": "identifier: require [3583,3590]"
    },
    {
      "src": "call_expression [3379,3448]",
      "dest": "call_expression [3379,3448]"
    },
    {
      "src": "call_argument [1041,1046]",
      "dest": "call_argument [1041,1046]"
    },
    {
      "src": "binary_expression [1696,1740]",
      "dest": "binary_expression [1696,1740]"
    },
    {
      "src": "function_body [942,1055]",
      "dest": "function_body [942,1055]"
    },
    {
      "src": "call_expression [2140,2209]",
      "dest": "call_expression [2140,2209]"
    },
    {
      "src": "solidity: solidity [40,48]",
      "dest": "solidity: solidity [40,48]"
    },
    {
      "src": ",: , [1856,1857]",
      "dest": ",: , [1856,1857]"
    },
    {
      "src": "type_name [1965,1971]",
      "dest": "type_name [1965,1971]"
    },
    {
      "src": "identifier: safeApprove [1324,1335]",
      "dest": "identifier: safeApprove [1324,1335]"
    },
    {
      "src": "): ) [2081,2082]",
      "dest": "): ) [2081,2082]"
    },
    {
      "src": "(: ( [877,878]",
      "dest": "(: ( [877,878]"
    },
    {
      "src": "identifier: token [1851,1856]",
      "dest": "identifier: token [1851,1856]"
    },
    {
      "src": "user_defined_type [2963,2969]",
      "dest": "user_defined_type [2963,2969]"
    },
    {
      "src": "using_directive [607,634]",
      "dest": "using_directive [607,634]"
    },
    {
      "src": "member_expression [979,1001]",
      "dest": "member_expression [979,1001]"
    },
    {
      "src": ",: , [977,978]",
      "dest": ",: , [977,978]"
    },
    {
      "src": "identifier: spender [2373,2380]",
      "dest": "identifier: spender [2373,2380]"
    },
    {
      "src": "identifier: encodeWithSelector [983,1001]",
      "dest": "identifier: encodeWithSelector [983,1001]"
    },
    {
      "src": "identifier: abi [3591,3594]",
      "dest": "identifier: abi [3591,3594]"
    },
    {
      "src": "\": \" [3446,3447]",
      "dest": "\": \" [3446,3447]"
    },
    {
      "src": "parenthesized_expression [1695,1741]",
      "dest": "parenthesized_expression [1695,1741]"
    },
    {
      "src": "{: { [1391,1392]",
      "dest": "{: { [1391,1392]"
    },
    {
      "src": "memory: memory [3359,3365]",
      "dest": "memory: memory [3359,3365]"
    },
    {
      "src": "(: ( [1711,1712]",
      "dest": "(: ( [1711,1712]"
    },
    {
      "src": "library_declaration [583,3687]",
      "dest": "library_declaration [583,3687]"
    },
    {
      "src": "): ) [1690,1691]",
      "dest": "): ) [1690,1691]"
    },
    {
      "src": "type_name [2319,2326]",
      "dest": "type_name [2319,2326]"
    },
    {
      "src": "call_argument [2393,2436]",
      "dest": "call_argument [2393,2436]"
    },
    {
      "src": "call_expression [1858,1920]",
      "dest": "call_expression [1858,1920]"
    },
    {
      "src": "type_name [1350,1357]",
      "dest": "type_name [1350,1357]"
    },
    {
      "src": "for: for [622,625]",
      "dest": "for: for [622,625]"
    },
    {
      "src": "}: } [845,846]",
      "dest": "}: } [845,846]"
    },
    {
      "src": ",: , [1903,1904]",
      "dest": ",: , [1903,1904]"
    },
    {
      "src": "): ) [1919,1920]",
      "dest": "): ) [1919,1920]"
    },
    {
      "src": "comment: /**      * @dev Deprecated. This function has issues similar to the ones found in      * {IERC20-approve}, and its usage is discouraged.      *      * Whenever possible, use {safeIncreaseAllowance} and      * {safeDecreaseAllowance} instead.      */ [1061,1310]",
      "dest": "comment: /**      * @dev Deprecated. This function has issues similar to the ones found in      * {IERC20-approve}, and its usage is discouraged.      *      * Whenever possible, use {safeIncreaseAllowance} and      * {safeDecreaseAllowance} instead.      */ [1061,1310]"
    },
    {
      "src": "identifier: value [1041,1046]",
      "dest": "identifier: value [1041,1046]"
    },
    {
      "src": ",: , [916,917]",
      "dest": ",: , [916,917]"
    },
    {
      "src": "identifier: spender [1905,1912]",
      "dest": "identifier: spender [1905,1912]"
    },
    {
      "src": ",: , [1039,1040]",
      "dest": ",: , [1039,1040]"
    },
    {
      "src": "parameter [707,717]",
      "dest": "parameter [707,717]"
    },
    {
      "src": "): ) [1920,1921]",
      "dest": "): ) [1920,1921]"
    },
    {
      "src": "member_expression [2163,2176]",
      "dest": "member_expression [2163,2176]"
    },
    {
      "src": "identifier: token [803,808]",
      "dest": "identifier: token [803,808]"
    },
    {
      "src": "}: } [1054,1055]",
      "dest": "}: } [1054,1055]"
    },
    {
      "src": ".: . [1701,1702]",
      "dest": ".: . [1701,1702]"
    },
    {
      "src": "): ) [1734,1735]",
      "dest": "): ) [1734,1735]"
    },
    {
      "src": "identifier: value [2004,2009]",
      "dest": "identifier: value [2004,2009]"
    },
    {
      "src": "): ) [3667,3668]",
      "dest": "): ) [3667,3668]"
    },
    {
      "src": "call_argument [972,977]",
      "dest": "call_argument [972,977]"
    },
    {
      "src": "member_expression [780,802]",
      "dest": "member_expression [780,802]"
    },
    {
      "src": "identifier: abi [1858,1861]",
      "dest": "identifier: abi [1858,1861]"
    },
    {
      "src": "import_directive [58,78]",
      "dest": "import_directive [58,78]"
    },
    {
      "src": "parameter [1965,1977]",
      "dest": "parameter [1965,1977]"
    },
    {
      "src": ",: , [890,891]",
      "dest": ",: , [890,891]"
    },
    {
      "src": "primitive_type [2285,2292]",
      "dest": "primitive_type [2285,2292]"
    },
    {
      "src": "comment: // safeApprove should only be called when setting an initial allowance, [1401,1472]",
      "dest": "comment: // safeApprove should only be called when setting an initial allowance, [1401,1472]"
    },
    {
      "src": "variable_declaration_statement [3353,3449]",
      "dest": "variable_declaration_statement [3353,3449]"
    },
    {
      "src": "member_expression [1696,1711]",
      "dest": "member_expression [1696,1711]"
    },
    {
      "src": ",: , [1725,1726]",
      "dest": ",: , [1725,1726]"
    },
    {
      "src": "\": \" [2435,2436]",
      "dest": "\": \" [2435,2436]"
    },
    {
      "src": "address: address [657,664]",
      "dest": "address: address [657,664]"
    },
    {
      "src": "\": \" [3623,3624]",
      "dest": "\": \" [3623,3624]"
    },
    {
      "src": "primitive_type [719,726]",
      "dest": "primitive_type [719,726]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "dest": "comment: // SPDX-License-Identifier: MIT [0,31]"
    },
    {
      "src": "solidity_pragma_token [40,55]",
      "dest": "solidity_pragma_token [40,55]"
    },
    {
      "src": "(: ( [2132,2133]",
      "dest": "(: ( [2132,2133]"
    },
    {
      "src": ">: > [3480,3481]",
      "dest": ">: > [3480,3481]"
    },
    {
      "src": ",: , [1029,1030]",
      "dest": ",: , [1029,1030]"
    },
    {
      "src": "type_name [1979,1986]",
      "dest": "type_name [1979,1986]"
    },
    {
      "src": "): ) [1724,1725]",
      "dest": "): ) [1724,1725]"
    },
    {
      "src": "): ) [2370,2371]",
      "dest": "): ) [2370,2371]"
    },
    {
      "src": "||: || [1692,1694]",
      "dest": "||: || [1692,1694]"
    },
    {
      "src": "identifier: spender [2521,2528]",
      "dest": "identifier: spender [2521,2528]"
    },
    {
      "src": "user_defined_type [2254,2260]",
      "dest": "user_defined_type [2254,2260]"
    },
    {
      "src": ".: . [1861,1862]",
      "dest": ".: . [1861,1862]"
    },
    {
      "src": "comment: // solhint-disable-next-line max-line-length [1618,1662]",
      "dest": "comment: // solhint-disable-next-line max-line-length [1618,1662]"
    },
    {
      "src": "call_argument [2069,2082]",
      "dest": "call_argument [2069,2082]"
    },
    {
      "src": "identifier: spender [2187,2194]",
      "dest": "identifier: spender [2187,2194]"
    },
    {
      "src": "member_expression [2053,2068]",
      "dest": "member_expression [2053,2068]"
    },
    {
      "src": ".: . [2058,2059]",
      "dest": ".: . [2058,2059]"
    },
    {
      "src": ",: , [1365,1366]",
      "dest": ",: , [1365,1366]"
    },
    {
      "src": "call_argument [2097,2102]",
      "dest": "call_argument [2097,2102]"
    },
    {
      "src": "call_argument [2467,2472]",
      "dest": "call_argument [2467,2472]"
    },
    {
      "src": "primitive_type [3353,3358]",
      "dest": "primitive_type [3353,3358]"
    },
    {
      "src": "bool: bool [3615,3619]",
      "dest": "bool: bool [3615,3619]"
    },
    {
      "src": "\": \" [86,87]",
      "dest": "\": \" [86,87]"
    },
    {
      "src": "(: ( [692,693]",
      "dest": "(: ( [692,693]"
    },
    {
      "src": "call_argument [1858,1920]",
      "dest": "call_argument [1858,1920]"
    },
    {
      "src": "identifier: transfer [809,817]",
      "dest": "identifier: transfer [809,817]"
    },
    {
      "src": ",: , [1035,1036]",
      "dest": ",: , [1035,1036]"
    },
    {
      "src": "call_argument [1881,1903]",
      "dest": "call_argument [1881,1903]"
    },
    {
      "src": "member_expression [803,826]",
      "dest": "member_expression [803,826]"
    },
    {
      "src": "identifier: approve [2503,2510]",
      "dest": "identifier: approve [2503,2510]"
    },
    {
      "src": "identifier: token [1881,1886]",
      "dest": "identifier: token [1881,1886]"
    },
    {
      "src": "number_literal: 0 [1739,1740]",
      "dest": "number_literal: 0 [1739,1740]"
    },
    {
      "src": "function_body [743,846]",
      "dest": "function_body [743,846]"
    },
    {
      "src": "call_argument [3413,3447]",
      "dest": "call_argument [3413,3447]"
    },
    {
      "src": ".: . [3393,3394]",
      "dest": ".: . [3393,3394]"
    },
    {
      "src": "comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [3014,3122]",
      "dest": "comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [3014,3122]"
    },
    {
      "src": "call_expression [2053,2092]",
      "dest": "call_expression [2053,2092]"
    },
    {
      "src": "type_name [2254,2260]",
      "dest": "type_name [2254,2260]"
    },
    {
      "src": "identifier: token [1343,1348]",
      "dest": "identifier: token [1343,1348]"
    },
    {
      "src": "parameter [2285,2298]",
      "dest": "parameter [2285,2298]"
    },
    {
      "src": "member_expression [1858,1880]",
      "dest": "member_expression [1858,1880]"
    },
    {
      "src": "identifier: encodeWithSelector [1862,1880]",
      "dest": "identifier: encodeWithSelector [1862,1880]"
    },
    {
      "src": "identifier: safeTransfer [680,692]",
      "dest": "identifier: safeTransfer [680,692]"
    },
    {
      "src": "call_argument [3602,3612]",
      "dest": "call_argument [3602,3612]"
    },
    {
      "src": "(: ( [2076,2077]",
      "dest": "(: ( [2076,2077]"
    },
    {
      "src": "(: ( [2466,2467]",
      "dest": "(: ( [2466,2467]"
    },
    {
      "src": ".: . [817,818]",
      "dest": ".: . [817,818]"
    },
    {
      "src": "call_argument [1679,1741]",
      "dest": "call_argument [1679,1741]"
    },
    {
      "src": "binary_expression [1680,1690]",
      "dest": "binary_expression [1680,1690]"
    },
    {
      "src": "identifier: sub [2382,2385]",
      "dest": "identifier: sub [2382,2385]"
    },
    {
      "src": "}: } [3684,3685]",
      "dest": "}: } [3684,3685]"
    },
    {
      "src": "parenthesized_expression [1679,1691]",
      "dest": "parenthesized_expression [1679,1691]"
    },
    {
      "src": "=: = [2051,2052]",
      "dest": "=: = [2051,2052]"
    },
    {
      "src": "call_argument [2077,2081]",
      "dest": "call_argument [2077,2081]"
    },
    {
      "src": "identifier: IERC20 [878,884]",
      "dest": "identifier: IERC20 [878,884]"
    },
    {
      "src": "call_expression [2447,2544]",
      "dest": "call_expression [2447,2544]"
    },
    {
      "src": "call_argument [2530,2542]",
      "dest": "call_argument [2530,2542]"
    },
    {
      "src": "identifier: to [715,717]",
      "dest": "identifier: to [715,717]"
    },
    {
      "src": "call_argument [3591,3621]",
      "dest": "call_argument [3591,3621]"
    },
    {
      "src": "uint256: uint256 [719,726]",
      "dest": "uint256: uint256 [719,726]"
    },
    {
      "src": "import: import [58,64]",
      "dest": "import: import [58,64]"
    },
    {
      "src": "): ) [2209,2210]",
      "dest": "): ) [2209,2210]"
    },
    {
      "src": "using: using [607,612]",
      "dest": "using: using [607,612]"
    },
    {
      "src": "): ) [3619,3620]",
      "dest": "): ) [3619,3620]"
    },
    {
      "src": "): ) [732,733]",
      "dest": "): ) [732,733]"
    },
    {
      "src": "parameter [1336,1348]",
      "dest": "parameter [1336,1348]"
    },
    {
      "src": "parameter [2977,2994]",
      "dest": "parameter [2977,2994]"
    },
    {
      "src": "variable_declaration [2319,2339]",
      "dest": "variable_declaration [2319,2339]"
    },
    {
      "src": "identifier: token [2261,2266]",
      "dest": "identifier: token [2261,2266]"
    },
    {
      "src": "identifier: abi [2474,2477]",
      "dest": "identifier: abi [2474,2477]"
    },
    {
      "src": "type_name [1996,2003]",
      "dest": "type_name [1996,2003]"
    },
    {
      "src": "address: address [2268,2275]",
      "dest": "address: address [2268,2275]"
    },
    {
      "src": "(: ( [2365,2366]",
      "dest": "(: ( [2365,2366]"
    },
    {
      "src": "source_file [0,3688]",
      "dest": "source_file [0,3688]"
    },
    {
      "src": "identifier: approve [2169,2176]",
      "dest": "identifier: approve [2169,2176]"
    },
    {
      "src": "): ) [838,839]",
      "dest": "): ) [838,839]"
    },
    {
      "src": "identifier: token [773,778]",
      "dest": "identifier: token [773,778]"
    },
    {
      "src": "=: = [2340,2341]",
      "dest": "=: = [2340,2341]"
    },
    {
      "src": "internal: internal [2011,2019]",
      "dest": "internal: internal [2011,2019]"
    },
    {
      "src": "solidity_version: 0.6.0 [50,55]",
      "dest": "solidity_version: 0.6.0 [50,55]"
    },
    {
      "src": "(: ( [1695,1696]",
      "dest": "(: ( [1695,1696]"
    },
    {
      "src": "string [1755,1811]",
      "dest": "string [1755,1811]"
    },
    {
      "src": "private: private [2996,3003]",
      "dest": "private: private [2996,3003]"
    },
    {
      "src": "identifier: returndata [3602,3612]",
      "dest": "identifier: returndata [3602,3612]"
    },
    {
      "src": "identifier: selector [2177,2185]",
      "dest": "identifier: selector [2177,2185]"
    },
    {
      "src": "internal: internal [2300,2308]",
      "dest": "internal: internal [2300,2308]"
    },
    {
      "src": "primitive_type [707,714]",
      "dest": "primitive_type [707,714]"
    },
    {
      "src": "call_argument [1914,1919]",
      "dest": "call_argument [1914,1919]"
    },
    {
      "src": ",: , [2082,2083]",
      "dest": ",: , [2082,2083]"
    },
    {
      "src": "identifier: abi [2140,2143]",
      "dest": "identifier: abi [2140,2143]"
    },
    {
      "src": "parameter [719,732]",
      "dest": "parameter [719,732]"
    },
    {
      "src": "identifier: IERC20 [1336,1342]",
      "dest": "identifier: IERC20 [1336,1342]"
    },
    {
      "src": "): ) [2380,2381]",
      "dest": "): ) [2380,2381]"
    },
    {
      "src": "identifier: selector [2511,2519]",
      "dest": "identifier: selector [2511,2519]"
    },
    {
      "src": "member_expression [3462,3479]",
      "dest": "member_expression [3462,3479]"
    },
    {
      "src": "type_alias [645,652]",
      "dest": "type_alias [645,652]"
    },
    {
      "src": "address: address [892,899]",
      "dest": "address: address [892,899]"
    },
    {
      "src": "identifier: safeIncreaseAllowance [1943,1964]",
      "dest": "identifier: safeIncreaseAllowance [1943,1964]"
    },
    {
      "src": "member_expression [2163,2185]",
      "dest": "member_expression [2163,2185]"
    },
    {
      "src": "member_expression [1002,1020]",
      "dest": "member_expression [1002,1020]"
    },
    {
      "src": "call_argument [1851,1856]",
      "dest": "call_argument [1851,1856]"
    },
    {
      "src": "string [3623,3667]",
      "dest": "string [3623,3667]"
    },
    {
      "src": "function: function [2934,2942]",
      "dest": "function: function [2934,2942]"
    },
    {
      "src": "call_argument [3623,3667]",
      "dest": "call_argument [3623,3667]"
    },
    {
      "src": "type_name [892,899]",
      "dest": "type_name [892,899]"
    },
    {
      "src": "): ) [3392,3393]",
      "dest": "): ) [3392,3393]"
    },
    {
      "src": "identifier: token [2467,2472]",
      "dest": "identifier: token [2467,2472]"
    },
    {
      "src": "(: ( [971,972]",
      "dest": "(: ( [971,972]"
    },
    {
      "src": "(: ( [1850,1851]",
      "dest": "(: ( [1850,1851]"
    },
    {
      "src": "uint256: uint256 [1996,2003]",
      "dest": "uint256: uint256 [1996,2003]"
    },
    {
      "src": ".: . [1020,1021]",
      "dest": ".: . [1020,1021]"
    },
    {
      "src": "identifier: value [1914,1919]",
      "dest": "identifier: value [1914,1919]"
    },
    {
      "src": "): ) [3620,3621]",
      "dest": "): ) [3620,3621]"
    },
    {
      "src": "library: library [583,590]",
      "dest": "library: library [583,590]"
    },
    {
      "src": "identifier: encodeWithSelector [2478,2496]",
      "dest": "identifier: encodeWithSelector [2478,2496]"
    },
    {
      "src": "string_literal [1755,1811]",
      "dest": "string_literal [1755,1811]"
    },
    {
      "src": "=: = [3377,3378]",
      "dest": "=: = [3377,3378]"
    },
    {
      "src": "import_directive [102,123]",
      "dest": "import_directive [102,123]"
    },
    {
      "src": "type_name [2268,2275]",
      "dest": "type_name [2268,2275]"
    },
    {
      "src": "binary_expression [3462,3483]",
      "dest": "binary_expression [3462,3483]"
    },
    {
      "src": "): ) [837,838]",
      "dest": "): ) [837,838]"
    },
    {
      "src": "primitive_type [3615,3619]",
      "dest": "primitive_type [3615,3619]"
    },
    {
      "src": "primitive_type [1350,1357]",
      "dest": "primitive_type [1350,1357]"
    },
    {
      "src": "function: function [1315,1323]",
      "dest": "function: function [1315,1323]"
    },
    {
      "src": "identifier: allowance [1702,1711]",
      "dest": "identifier: allowance [1702,1711]"
    },
    {
      "src": "{: { [601,602]",
      "dest": "{: { [601,602]"
    },
    {
      "src": "==: == [1736,1738]",
      "dest": "==: == [1736,1738]"
    },
    {
      "src": "(: ( [3590,3591]",
      "dest": "(: ( [3590,3591]"
    },
    {
      "src": "(: ( [1335,1336]",
      "dest": "(: ( [1335,1336]"
    },
    {
      "src": "identifier: newAllowance [2327,2339]",
      "dest": "identifier: newAllowance [2327,2339]"
    },
    {
      "src": "call_argument [2084,2091]",
      "dest": "call_argument [2084,2091]"
    },
    {
      "src": "expression_statement [2447,2545]",
      "dest": "expression_statement [2447,2545]"
    },
    {
      "src": "identifier: data [3407,3411]",
      "dest": "identifier: data [3407,3411]"
    },
    {
      "src": "number_literal: 0 [1689,1690]",
      "dest": "number_literal: 0 [1689,1690]"
    },
    {
      "src": ",: , [2266,2267]",
      "dest": ",: , [2266,2267]"
    },
    {
      "src": "identifier: IERC20 [2254,2260]",
      "dest": "identifier: IERC20 [2254,2260]"
    },
    {
      "src": "using_directive [639,665]",
      "dest": "using_directive [639,665]"
    },
    {
      "src": "}: } [3686,3687]",
      "dest": "}: } [3686,3687]"
    },
    {
      "src": "expression_statement [1831,1922]",
      "dest": "expression_statement [1831,1922]"
    },
    {
      "src": "identifier: value [2097,2102]",
      "dest": "identifier: value [2097,2102]"
    },
    {
      "src": "call_expression [1671,1821]",
      "dest": "call_expression [1671,1821]"
    },
    {
      "src": "member_expression [2140,2162]",
      "dest": "member_expression [2140,2162]"
    },
    {
      "src": "type_name [2030,2037]",
      "dest": "type_name [2030,2037]"
    },
    {
      "src": "number_literal: 0 [3482,3483]",
      "dest": "number_literal: 0 [3482,3483]"
    },
    {
      "src": "identifier: Address [645,652]",
      "dest": "identifier: Address [645,652]"
    },
    {
      "src": "function_definition [2223,2551]",
      "dest": "function_definition [2223,2551]"
    },
    {
      "src": "identifier: _callOptionalReturn [753,772]",
      "dest": "identifier: _callOptionalReturn [753,772]"
    },
    {
      "src": ",: , [2472,2473]",
      "dest": ",: , [2472,2473]"
    },
    {
      "src": ".: . [2381,2382]",
      "dest": ".: . [2381,2382]"
    },
    {
      "src": "type_cast_expression [2069,2082]",
      "dest": "type_cast_expression [2069,2082]"
    },
    {
      "src": "\": \" [2393,2394]",
      "dest": "\": \" [2393,2394]"
    },
    {
      "src": "): ) [2543,2544]",
      "dest": "): ) [2543,2544]"
    },
    {
      "src": "uint256: uint256 [1367,1374]",
      "dest": "uint256: uint256 [1367,1374]"
    },
    {
      "src": "pragma_directive [33,56]",
      "dest": "pragma_directive [33,56]"
    },
    {
      "src": "): ) [2298,2299]",
      "dest": "): ) [2298,2299]"
    },
    {
      "src": "import: import [102,108]",
      "dest": "import: import [102,108]"
    },
    {
      "src": "identifier: safeTransferFrom [861,877]",
      "dest": "identifier: safeTransferFrom [861,877]"
    },
    {
      "src": "call_argument [2163,2185]",
      "dest": "call_argument [2163,2185]"
    },
    {
      "src": "(: ( [2962,2963]",
      "dest": "(: ( [2962,2963]"
    },
    {
      "src": "identifier: this [2077,2081]",
      "dest": "identifier: this [2077,2081]"
    },
    {
      "src": "(: ( [2096,2097]",
      "dest": "(: ( [2096,2097]"
    },
    {
      "src": "parameter [1350,1365]",
      "dest": "parameter [1350,1365]"
    },
    {
      "src": ".: . [2092,2093]",
      "dest": ".: . [2092,2093]"
    },
    {
      "src": "identifier: newAllowance [2196,2208]",
      "dest": "identifier: newAllowance [2196,2208]"
    },
    {
      "src": "comment: // the target address contains contract code and also asserts for success in the low-level call. [3247,3343]",
      "dest": "comment: // the target address contains contract code and also asserts for success in the low-level call. [3247,3343]"
    },
    {
      "src": "function: function [671,679]",
      "dest": "function: function [671,679]"
    },
    {
      "src": ",: , [2194,2195]",
      "dest": ",: , [2194,2195]"
    },
    {
      "src": "parameter [693,705]",
      "dest": "parameter [693,705]"
    },
    {
      "src": "member_expression [1002,1029]",
      "dest": "member_expression [1002,1029]"
    },
    {
      "src": "import_directive [79,101]",
      "dest": "import_directive [79,101]"
    },
    {
      "src": "{: { [2020,2021]",
      "dest": "{: { [2020,2021]"
    },
    {
      "src": "call_expression [3583,3668]",
      "dest": "call_expression [3583,3668]"
    },
    {
      "src": "primitive_type [657,664]",
      "dest": "primitive_type [657,664]"
    },
    {
      "src": ".: . [1894,1895]",
      "dest": ".: . [1894,1895]"
    },
    {
      "src": "identifier: token [2497,2502]",
      "dest": "identifier: token [2497,2502]"
    },
    {
      "src": "(: ( [802,803]",
      "dest": "(: ( [802,803]"
    },
    {
      "src": "solidity_version_comparison_operator [48,50]",
      "dest": "solidity_version_comparison_operator [48,50]"
    },
    {
      "src": "comment: // solhint-disable-next-line max-line-length [3526,3570]",
      "dest": "comment: // solhint-disable-next-line max-line-length [3526,3570]"
    },
    {
      "src": "parameter [918,931]",
      "dest": "parameter [918,931]"
    },
    {
      "src": "comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [1555,1609]",
      "dest": "comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [1555,1609]"
    },
    {
      "src": "function_definition [671,846]",
      "dest": "function_definition [671,846]"
    },
    {
      "src": "identifier: _callOptionalReturn [952,971]",
      "dest": "identifier: _callOptionalReturn [952,971]"
    },
    {
      "src": "identifier: returndata [3366,3376]",
      "dest": "identifier: returndata [3366,3376]"
    },
    {
      "src": "call_argument [773,778]",
      "dest": "call_argument [773,778]"
    },
    {
      "src": ".: . [2143,2144]",
      "dest": ".: . [2143,2144]"
    },
    {
      "src": "type_name [657,664]",
      "dest": "type_name [657,664]"
    },
    {
      "src": "identifier: token [3387,3392]",
      "dest": "identifier: token [3387,3392]"
    },
    {
      "src": "\": \" [1755,1756]",
      "dest": "\": \" [1755,1756]"
    },
    {
      "src": "): ) [2994,2995]",
      "dest": "): ) [2994,2995]"
    },
    {
      "src": "(: ( [3386,3387]",
      "dest": "(: ( [3386,3387]"
    },
    {
      "src": "identifier: functionCall [3394,3406]",
      "dest": "identifier: functionCall [3394,3406]"
    },
    {
      "src": "call_argument [3407,3411]",
      "dest": "call_argument [3407,3411]"
    },
    {
      "src": ",: , [2391,2392]",
      "dest": ",: , [2391,2392]"
    },
    {
      "src": ",: , [1741,1742]",
      "dest": ",: , [1741,1742]"
    },
    {
      "src": ",: , [2283,2284]",
      "dest": ",: , [2283,2284]"
    },
    {
      "src": "{: { [3485,3486]",
      "dest": "{: { [3485,3486]"
    },
    {
      "src": ".: . [2510,2511]",
      "dest": ".: . [2510,2511]"
    },
    {
      "src": "visibility [734,742]",
      "dest": "visibility [734,742]"
    },
    {
      "src": "identifier: decode [3595,3601]",
      "dest": "identifier: decode [3595,3601]"
    },
    {
      "src": "identifier: token [1002,1007]",
      "dest": "identifier: token [1002,1007]"
    },
    {
      "src": "): ) [2091,2092]",
      "dest": "): ) [2091,2092]"
    },
    {
      "src": "identifier: safeDecreaseAllowance [2232,2253]",
      "dest": "identifier: safeDecreaseAllowance [2232,2253]"
    },
    {
      "src": "block_statement [3485,3679]",
      "dest": "block_statement [3485,3679]"
    },
    {
      "src": "call_expression [2474,2543]",
      "dest": "call_expression [2474,2543]"
    },
    {
      "src": "primitive_type [918,925]",
      "dest": "primitive_type [918,925]"
    },
    {
      "src": "call_argument [2358,2371]",
      "dest": "call_argument [2358,2371]"
    },
    {
      "src": "call_expression [753,839]",
      "dest": "call_expression [753,839]"
    },
    {
      "src": "user_defined_type [878,884]",
      "dest": "user_defined_type [878,884]"
    },
    {
      "src": "identifier: value [1375,1380]",
      "dest": "identifier: value [1375,1380]"
    },
    {
      "src": "call_expression [979,1047]",
      "dest": "call_expression [979,1047]"
    },
    {
      "src": "parameter [878,890]",
      "dest": "parameter [878,890]"
    },
    {
      "src": "type_name [1367,1374]",
      "dest": "type_name [1367,1374]"
    },
    {
      "src": "(: ( [3406,3407]",
      "dest": "(: ( [3406,3407]"
    },
    {
      "src": "call_expression [2342,2381]",
      "dest": "call_expression [2342,2381]"
    },
    {
      "src": "identifier: IERC20 [693,699]",
      "dest": "identifier: IERC20 [693,699]"
    },
    {
      "src": "(: ( [1964,1965]",
      "dest": "(: ( [1964,1965]"
    },
    {
      "src": "bytes: bytes [2977,2982]",
      "dest": "bytes: bytes [2977,2982]"
    },
    {
      "src": "(: ( [1880,1881]",
      "dest": "(: ( [1880,1881]"
    },
    {
      "src": "identifier: spender [2276,2283]",
      "dest": "identifier: spender [2276,2283]"
    },
    {
      "src": "comment: // or when resetting it to zero. To increase and decrease it, use [1481,1546]",
      "dest": "comment: // or when resetting it to zero. To increase and decrease it, use [1481,1546]"
    },
    {
      "src": "): ) [2102,2103]",
      "dest": "): ) [2102,2103]"
    },
    {
      "src": "identifier: selector [1021,1029]",
      "dest": "identifier: selector [1021,1029]"
    },
    {
      "src": "function: function [852,860]",
      "dest": "function: function [852,860]"
    },
    {
      "src": "identifier: to [1037,1039]",
      "dest": "identifier: to [1037,1039]"
    },
    {
      "src": "identifier: token [1972,1977]",
      "dest": "identifier: token [1972,1977]"
    },
    {
      "src": "identifier: length [3473,3479]",
      "dest": "identifier: length [3473,3479]"
    },
    {
      "src": "call_argument [803,826]",
      "dest": "call_argument [803,826]"
    },
    {
      "src": "\": \" [109,110]",
      "dest": "\": \" [109,110]"
    },
    {
      "src": "member_expression [2342,2385]",
      "dest": "member_expression [2342,2385]"
    },
    {
      "src": "primitive_type [1712,1719]",
      "dest": "primitive_type [1712,1719]"
    },
    {
      "src": ".: . [2176,2177]",
      "dest": ".: . [2176,2177]"
    },
    {
      "src": "): ) [1046,1047]",
      "dest": "): ) [1046,1047]"
    },
    {
      "src": "function_body [2020,2217]",
      "dest": "function_body [2020,2217]"
    },
    {
      "src": "identifier: encodeWithSelector [784,802]",
      "dest": "identifier: encodeWithSelector [784,802]"
    },
    {
      "src": "identifier: returndata [3462,3472]",
      "dest": "identifier: returndata [3462,3472]"
    },
    {
      "src": "string [86,100]",
      "dest": "string [86,100]"
    },
    {
      "src": "call_argument [828,830]",
      "dest": "call_argument [828,830]"
    },
    {
      "src": ".: . [2502,2503]",
      "dest": ".: . [2502,2503]"
    },
    {
      "src": "(: ( [1719,1720]",
      "dest": "(: ( [1719,1720]"
    },
    {
      "src": "(: ( [2068,2069]",
      "dest": "(: ( [2068,2069]"
    },
    {
      "src": ",: , [2528,2529]",
      "dest": ",: , [2528,2529]"
    },
    {
      "src": "bytes: bytes [3353,3358]",
      "dest": "bytes: bytes [3353,3358]"
    },
    {
      "src": "\": \" [1810,1811]",
      "dest": "\": \" [1810,1811]"
    },
    {
      "src": "type_name [2977,2982]",
      "dest": "type_name [2977,2982]"
    },
    {
      "src": "identifier: from [900,904]",
      "dest": "identifier: from [900,904]"
    },
    {
      "src": "(: ( [1678,1679]",
      "dest": "(: ( [1678,1679]"
    },
    {
      "src": "for: for [653,656]",
      "dest": "for: for [653,656]"
    },
    {
      "src": "type_cast_expression [2358,2371]",
      "dest": "type_cast_expression [2358,2371]"
    },
    {
      "src": "function_definition [2934,3685]",
      "dest": "function_definition [2934,3685]"
    },
    {
      "src": "identifier: token [885,890]",
      "dest": "identifier: token [885,890]"
    },
    {
      "src": "call_argument [1002,1029]",
      "dest": "call_argument [1002,1029]"
    },
    {
      "src": ",: , [2185,2186]",
      "dest": ",: , [2185,2186]"
    },
    {
      "src": "identifier: token [2133,2138]",
      "dest": "identifier: token [2133,2138]"
    },
    {
      "src": ",: , [2371,2372]",
      "dest": ",: , [2371,2372]"
    },
    {
      "src": "identifier: token [1696,1701]",
      "dest": "identifier: token [1696,1701]"
    },
    {
      "src": "}: } [1927,1928]",
      "dest": "}: } [1927,1928]"
    },
    {
      "src": "internal: internal [933,941]",
      "dest": "internal: internal [933,941]"
    },
    {
      "src": "identifier: token [2053,2058]",
      "dest": "identifier: token [2053,2058]"
    },
    {
      "src": "): ) [1740,1741]",
      "dest": "): ) [1740,1741]"
    },
    {
      "src": "type_name [719,726]",
      "dest": "type_name [719,726]"
    },
    {
      "src": "variable_declaration_statement [2319,2438]",
      "dest": "variable_declaration_statement [2319,2438]"
    },
    {
      "src": "call_expression [2342,2437]",
      "dest": "call_expression [2342,2437]"
    },
    {
      "src": "address: address [2358,2365]",
      "dest": "address: address [2358,2365]"
    },
    {
      "src": "address: address [1350,1357]",
      "dest": "address: address [1350,1357]"
    },
    {
      "src": "{: { [3004,3005]",
      "dest": "{: { [3004,3005]"
    },
    {
      "src": "identifier: newAllowance [2530,2542]",
      "dest": "identifier: newAllowance [2530,2542]"
    },
    {
      "src": "address: address [2069,2076]",
      "dest": "address: address [2069,2076]"
    },
    {
      "src": "call_argument [2521,2528]",
      "dest": "call_argument [2521,2528]"
    },
    {
      "src": ",: , [3411,3412]",
      "dest": ",: , [3411,3412]"
    },
    {
      "src": "call_argument [780,838]",
      "dest": "call_argument [780,838]"
    },
    {
      "src": "parenthesized_expression [3614,3620]",
      "dest": "parenthesized_expression [3614,3620]"
    },
    {
      "src": ",: , [717,718]",
      "dest": ",: , [717,718]"
    },
    {
      "src": "\": \" [3666,3667]",
      "dest": "\": \" [3666,3667]"
    },
    {
      "src": "string_literal [3413,3447]",
      "dest": "string_literal [3413,3447]"
    },
    {
      "src": "function: function [1934,1942]",
      "dest": "function: function [1934,1942]"
    },
    {
      "src": "pragma: pragma [33,39]",
      "dest": "pragma: pragma [33,39]"
    },
    {
      "src": "comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [125,582]",
      "dest": "comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [125,582]"
    },
    {
      "src": "call_argument [1031,1035]",
      "dest": "call_argument [1031,1035]"
    }
  ],
  "actions": []
}