{
  "matches": [
    {
      "src": ".: . [2498,2499]",
      "dest": ".: . [2498,2499]"
    },
    {
      "src": "(: ( [2508,2509]",
      "dest": "(: ( [2508,2509]"
    },
    {
      "src": "(: ( [2168,2169]",
      "dest": "(: ( [2168,2169]"
    },
    {
      "src": "primitive_type [669,676]",
      "dest": "primitive_type [669,676]"
    },
    {
      "src": "primitive_type [2169,2176]",
      "dest": "primitive_type [2169,2176]"
    },
    {
      "src": "address: address [669,676]",
      "dest": "address: address [669,676]"
    },
    {
      "src": ",: , [3822,3823]",
      "dest": ",: , [3822,3823]"
    },
    {
      "src": "variable_declaration_statement [3608,3704]",
      "dest": "variable_declaration_statement [3608,3704]"
    },
    {
      "src": "(: ( [3800,3801]",
      "dest": "(: ( [3800,3801]"
    },
    {
      "src": "identifier: decode [3805,3811]",
      "dest": "identifier: decode [3805,3811]"
    },
    {
      "src": "identifier: approve [2748,2755]",
      "dest": "identifier: approve [2748,2755]"
    },
    {
      "src": "number_literal: 0 [1809,1810]",
      "dest": "number_literal: 0 [1809,1810]"
    },
    {
      "src": "identifier: _callOptionalReturn [2210,2229]",
      "dest": "identifier: _callOptionalReturn [2210,2229]"
    },
    {
      "src": "identifier: token [2493,2498]",
      "dest": "identifier: token [2493,2498]"
    },
    {
      "src": "member_expression [3717,3734]",
      "dest": "member_expression [3717,3734]"
    },
    {
      "src": "binary_expression [2554,2575]",
      "dest": "binary_expression [2554,2575]"
    },
    {
      "src": "address: address [2066,2073]",
      "dest": "address: address [2066,2073]"
    },
    {
      "src": "expression_statement [1901,1992]",
      "dest": "expression_statement [1901,1992]"
    },
    {
      "src": "member_expression [1766,1781]",
      "dest": "member_expression [1766,1781]"
    },
    {
      "src": "primitive_type [3825,3829]",
      "dest": "primitive_type [3825,3829]"
    },
    {
      "src": "function: function [2004,2012]",
      "dest": "function: function [2004,2012]"
    },
    {
      "src": "identifier: value [764,769]",
      "dest": "identifier: value [764,769]"
    },
    {
      "src": "identifier: IERC20 [929,935]",
      "dest": "identifier: IERC20 [929,935]"
    },
    {
      "src": "call_expression [2546,2621]",
      "dest": "call_expression [2546,2621]"
    },
    {
      "src": "library_declaration [627,3897]",
      "dest": "library_declaration [627,3897]"
    },
    {
      "src": ",: , [1115,1116]",
      "dest": ",: , [1115,1116]"
    },
    {
      "src": "call_argument [1749,1811]",
      "dest": "call_argument [1749,1811]"
    },
    {
      "src": "identifier: token [2742,2747]",
      "dest": "identifier: token [2742,2747]"
    },
    {
      "src": "memory: memory [3238,3244]",
      "dest": "memory: memory [3238,3244]"
    },
    {
      "src": ",: , [820,821]",
      "dest": ",: , [820,821]"
    },
    {
      "src": "): ) [2620,2621]",
      "dest": "): ) [2620,2621]"
    },
    {
      "src": "type_name [2407,2414]",
      "dest": "type_name [2407,2414]"
    },
    {
      "src": "solidity_version_comparison_operator [115,117]",
      "dest": "solidity_version_comparison_operator [115,117]"
    },
    {
      "src": "type_name [2130,2137]",
      "dest": "type_name [2130,2137]"
    },
    {
      "src": "identifier: value [1121,1126]",
      "dest": "identifier: value [1121,1126]"
    },
    {
      "src": "): ) [2425,2426]",
      "dest": "): ) [2425,2426]"
    },
    {
      "src": "string [132,144]",
      "dest": "string [132,144]"
    },
    {
      "src": "address: address [2169,2176]",
      "dest": "address: address [2169,2176]"
    },
    {
      "src": "type_name [2360,2366]",
      "dest": "type_name [2360,2366]"
    },
    {
      "src": ".: . [2747,2748]",
      "dest": ".: . [2747,2748]"
    },
    {
      "src": "\": \" [153,154]",
      "dest": "\": \" [153,154]"
    },
    {
      "src": "): ) [1126,1127]",
      "dest": "): ) [1126,1127]"
    },
    {
      "src": "call_argument [1782,1795]",
      "dest": "call_argument [1782,1795]"
    },
    {
      "src": "type_name [929,935]",
      "dest": "type_name [929,935]"
    },
    {
      "src": "type_name [3232,3237]",
      "dest": "type_name [3232,3237]"
    },
    {
      "src": "function: function [1395,1403]",
      "dest": "function: function [1395,1403]"
    },
    {
      "src": "): ) [1490,1491]",
      "dest": "): ) [1490,1491]"
    },
    {
      "src": "identifier: require [2546,2553]",
      "dest": "identifier: require [2546,2553]"
    },
    {
      "src": "uint256: uint256 [2407,2414]",
      "dest": "uint256: uint256 [2407,2414]"
    },
    {
      "src": "): ) [2181,2182]",
      "dest": "): ) [2181,2182]"
    },
    {
      "src": "using: using [651,656]",
      "dest": "using: using [651,656]"
    },
    {
      "src": "parameter [2382,2397]",
      "dest": "parameter [2382,2397]"
    },
    {
      "src": "import_directive [146,167]",
      "dest": "import_directive [146,167]"
    },
    {
      "src": "(: ( [1765,1766]",
      "dest": "(: ( [1765,1766]"
    },
    {
      "src": "(: ( [1081,1082]",
      "dest": "(: ( [1081,1082]"
    },
    {
      "src": "call_argument [2742,2764]",
      "dest": "call_argument [2742,2764]"
    },
    {
      "src": "call_expression [2493,2532]",
      "dest": "call_expression [2493,2532]"
    },
    {
      "src": "parameter [2360,2372]",
      "dest": "parameter [2360,2372]"
    },
    {
      "src": ",: , [2773,2774]",
      "dest": ",: , [2773,2774]"
    },
    {
      "src": "visibility [2111,2119]",
      "dest": "visibility [2111,2119]"
    },
    {
      "src": "string_literal [2577,2620]",
      "dest": "string_literal [2577,2620]"
    },
    {
      "src": "(: ( [1781,1782]",
      "dest": "(: ( [1781,1782]"
    },
    {
      "src": "identifier: value [2570,2575]",
      "dest": "identifier: value [2570,2575]"
    },
    {
      "src": "identifier: newAllowance [2643,2655]",
      "dest": "identifier: newAllowance [2643,2655]"
    },
    {
      "src": "\": \" [1825,1826]",
      "dest": "\": \" [1825,1826]"
    },
    {
      "src": "identifier: value [2099,2104]",
      "dest": "identifier: value [2099,2104]"
    },
    {
      "src": "(: ( [3641,3642]",
      "dest": "(: ( [3641,3642]"
    },
    {
      "src": ".: . [825,826]",
      "dest": ".: . [825,826]"
    },
    {
      "src": "identifier: this [2517,2521]",
      "dest": "identifier: this [2517,2521]"
    },
    {
      "src": "parameter [3218,3230]",
      "dest": "parameter [3218,3230]"
    },
    {
      "src": "internal: internal [2111,2119]",
      "dest": "internal: internal [2111,2119]"
    },
    {
      "src": "parameter [3232,3249]",
      "dest": "parameter [3232,3249]"
    },
    {
      "src": "function_definition [2004,2314]",
      "dest": "function_definition [2004,2314]"
    },
    {
      "src": "call_argument [870,872]",
      "dest": "call_argument [870,872]"
    },
    {
      "src": "call_argument [3642,3647]",
      "dest": "call_argument [3642,3647]"
    },
    {
      "src": "(: ( [704,705]",
      "dest": "(: ( [704,705]"
    },
    {
      "src": "): ) [3647,3648]",
      "dest": "): ) [3647,3648]"
    },
    {
      "src": "expression_statement [1032,1129]",
      "dest": "expression_statement [1032,1129]"
    },
    {
      "src": "call_expression [1059,1127]",
      "dest": "call_expression [1059,1127]"
    },
    {
      "src": "-: - [2671,2672]",
      "dest": "-: - [2671,2672]"
    },
    {
      "src": "(: ( [3716,3717]",
      "dest": "(: ( [3716,3717]"
    },
    {
      "src": "(: ( [2034,2035]",
      "dest": "(: ( [2034,2035]"
    },
    {
      "src": "(: ( [1051,1052]",
      "dest": "(: ( [1051,1052]"
    },
    {
      "src": "identifier: token [1082,1087]",
      "dest": "identifier: token [1082,1087]"
    },
    {
      "src": "identifier: safeTransferFrom [903,919]",
      "dest": "identifier: safeTransferFrom [903,919]"
    },
    {
      "src": "call_argument [1111,1115]",
      "dest": "call_argument [1111,1115]"
    },
    {
      "src": "primitive_type [2130,2137]",
      "dest": "primitive_type [2130,2137]"
    },
    {
      "src": ".: . [1771,1772]",
      "dest": ".: . [1771,1772]"
    },
    {
      "src": "(: ( [2553,2554]",
      "dest": "(: ( [2553,2554]"
    },
    {
      "src": "member_expression [2742,2755]",
      "dest": "member_expression [2742,2755]"
    },
    {
      "src": "user_defined_type [929,935]",
      "dest": "user_defined_type [929,935]"
    },
    {
      "src": "call_argument [1059,1127]",
      "dest": "call_argument [1059,1127]"
    },
    {
      "src": "type_name [2044,2050]",
      "dest": "type_name [2044,2050]"
    },
    {
      "src": "call_argument [3812,3822]",
      "dest": "call_argument [3812,3822]"
    },
    {
      "src": "primitive_type [1447,1454]",
      "dest": "primitive_type [1447,1454]"
    },
    {
      "src": "identifier: encodeWithSelector [2723,2741]",
      "dest": "identifier: encodeWithSelector [2723,2741]"
    },
    {
      "src": "parenthesized_expression [1749,1761]",
      "dest": "parenthesized_expression [1749,1761]"
    },
    {
      "src": "primitive_type [951,958]",
      "dest": "primitive_type [951,958]"
    },
    {
      "src": "member_expression [845,868]",
      "dest": "member_expression [845,868]"
    },
    {
      "src": "(: ( [2259,2260]",
      "dest": "(: ( [2259,2260]"
    },
    {
      "src": "function: function [683,691]",
      "dest": "function: function [683,691]"
    },
    {
      "src": "uint256: uint256 [2635,2642]",
      "dest": "uint256: uint256 [2635,2642]"
    },
    {
      "src": "function_definition [3189,3895]",
      "dest": "function_definition [3189,3895]"
    },
    {
      "src": "comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [1665,1719]",
      "dest": "comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [1665,1719]"
    },
    {
      "src": "identifier: safeTransfer [692,704]",
      "dest": "identifier: safeTransfer [692,704]"
    },
    {
      "src": "member_expression [2153,2168]",
      "dest": "member_expression [2153,2168]"
    },
    {
      "src": "): ) [774,775]",
      "dest": "): ) [774,775]"
    },
    {
      "src": "function_definition [2320,2806]",
      "dest": "function_definition [2320,2806]"
    },
    {
      "src": "internal: internal [776,784]",
      "dest": "internal: internal [776,784]"
    },
    {
      "src": "primitive_type [1472,1479]",
      "dest": "primitive_type [1472,1479]"
    },
    {
      "src": "string [3833,3877]",
      "dest": "string [3833,3877]"
    },
    {
      "src": "identifier: approve [2266,2273]",
      "dest": "identifier: approve [2266,2273]"
    },
    {
      "src": "uint256: uint256 [2091,2098]",
      "dest": "uint256: uint256 [2091,2098]"
    },
    {
      "src": "internal: internal [1013,1021]",
      "dest": "internal: internal [1013,1021]"
    },
    {
      "src": ".: . [2273,2274]",
      "dest": ".: . [2273,2274]"
    },
    {
      "src": "{: { [3740,3741]",
      "dest": "{: { [3740,3741]"
    },
    {
      "src": "\": \" [132,133]",
      "dest": "\": \" [132,133]"
    },
    {
      "src": ".: . [859,860]",
      "dest": ".: . [859,860]"
    },
    {
      "src": "call_argument [1928,1990]",
      "dest": "call_argument [1928,1990]"
    },
    {
      "src": "primitive_type [3608,3613]",
      "dest": "primitive_type [3608,3613]"
    },
    {
      "src": "{: { [1022,1023]",
      "dest": "{: { [1022,1023]"
    },
    {
      "src": "call_expression [2153,2192]",
      "dest": "call_expression [2153,2192]"
    },
    {
      "src": "visibility [3251,3258]",
      "dest": "visibility [3251,3258]"
    },
    {
      "src": "type_alias [657,664]",
      "dest": "type_alias [657,664]"
    },
    {
      "src": "identifier: this [2177,2181]",
      "dest": "identifier: this [2177,2181]"
    },
    {
      "src": "address: address [2382,2389]",
      "dest": "address: address [2382,2389]"
    },
    {
      "src": "primitive_type [756,763]",
      "dest": "primitive_type [756,763]"
    },
    {
      "src": ".: . [2265,2266]",
      "dest": ".: . [2265,2266]"
    },
    {
      "src": "member_expression [1951,1973]",
      "dest": "member_expression [1951,1973]"
    },
    {
      "src": "visibility [2427,2435]",
      "dest": "visibility [2427,2435]"
    },
    {
      "src": "type_cast_expression [2509,2522]",
      "dest": "type_cast_expression [2509,2522]"
    },
    {
      "src": "): ) [1011,1012]",
      "dest": "): ) [1011,1012]"
    },
    {
      "src": ".: . [3804,3805]",
      "dest": ".: . [3804,3805]"
    },
    {
      "src": "identifier: token [936,941]",
      "dest": "identifier: token [936,941]"
    },
    {
      "src": "type_name [973,980]",
      "dest": "type_name [973,980]"
    },
    {
      "src": "primitive_type [993,1000]",
      "dest": "primitive_type [993,1000]"
    },
    {
      "src": "}: } [2313,2314]",
      "dest": "}: } [2313,2314]"
    },
    {
      "src": "): ) [3702,3703]",
      "dest": "): ) [3702,3703]"
    },
    {
      "src": ".: . [1062,1063]",
      "dest": ".: . [1062,1063]"
    },
    {
      "src": ",: , [1109,1110]",
      "dest": ",: , [1109,1110]"
    },
    {
      "src": "type_name [2470,2477]",
      "dest": "type_name [2470,2477]"
    },
    {
      "src": "binary_expression [1749,1811]",
      "dest": "binary_expression [1749,1811]"
    },
    {
      "src": ",: , [2282,2283]",
      "dest": ",: , [2282,2283]"
    },
    {
      "src": "import: import [125,131]",
      "dest": "import: import [125,131]"
    },
    {
      "src": "\": \" [3876,3877]",
      "dest": "\": \" [3876,3877]"
    },
    {
      "src": "visibility [1013,1021]",
      "dest": "visibility [1013,1021]"
    },
    {
      "src": "identifier: transferFrom [1088,1100]",
      "dest": "identifier: transferFrom [1088,1100]"
    },
    {
      "src": "type_name [1472,1479]",
      "dest": "type_name [1472,1479]"
    },
    {
      "src": "): ) [1989,1990]",
      "dest": "): ) [1989,1990]"
    },
    {
      "src": "identifier: abi [2719,2722]",
      "dest": "identifier: abi [2719,2722]"
    },
    {
      "src": "{: { [785,786]",
      "dest": "{: { [785,786]"
    },
    {
      "src": "variable_declaration_statement [2130,2201]",
      "dest": "variable_declaration_statement [2130,2201]"
    },
    {
      "src": "call_argument [2554,2575]",
      "dest": "call_argument [2554,2575]"
    },
    {
      "src": "): ) [1990,1991]",
      "dest": "): ) [1990,1991]"
    },
    {
      "src": "variable_declaration_statement [2470,2533]",
      "dest": "variable_declaration_statement [2470,2533]"
    },
    {
      "src": "identifier: encodeWithSelector [826,844]",
      "dest": "identifier: encodeWithSelector [826,844]"
    },
    {
      "src": "identifier: IERC20 [3218,3224]",
      "dest": "identifier: IERC20 [3218,3224]"
    },
    {
      "src": ",: , [1057,1058]",
      "dest": ",: , [1057,1058]"
    },
    {
      "src": "identifier: token [2712,2717]",
      "dest": "identifier: token [2712,2717]"
    },
    {
      "src": ".: . [850,851]",
      "dest": ".: . [850,851]"
    },
    {
      "src": "member_expression [822,844]",
      "dest": "member_expression [822,844]"
    },
    {
      "src": "(: ( [1415,1416]",
      "dest": "(: ( [1415,1416]"
    },
    {
      "src": ",: , [3230,3231]",
      "dest": ",: , [3230,3231]"
    },
    {
      "src": "identifier: _callOptionalReturn [2692,2711]",
      "dest": "identifier: _callOptionalReturn [2692,2711]"
    },
    {
      "src": ",: , [2397,2398]",
      "dest": ",: , [2397,2398]"
    },
    {
      "src": "): ) [1810,1811]",
      "dest": "): ) [1810,1811]"
    },
    {
      "src": "string [2577,2620]",
      "dest": "string [2577,2620]"
    },
    {
      "src": ">: > [3735,3736]",
      "dest": ">: > [3735,3736]"
    },
    {
      "src": "call_expression [1728,1891]",
      "dest": "call_expression [1728,1891]"
    },
    {
      "src": "(: ( [2176,2177]",
      "dest": "(: ( [2176,2177]"
    },
    {
      "src": "(: ( [1749,1750]",
      "dest": "(: ( [1749,1750]"
    },
    {
      "src": "user_defined_type [3218,3224]",
      "dest": "user_defined_type [3218,3224]"
    },
    {
      "src": "||: || [1762,1764]",
      "dest": "||: || [1762,1764]"
    },
    {
      "src": "call_expression [1901,1991]",
      "dest": "call_expression [1901,1991]"
    },
    {
      "src": "bytes: bytes [3608,3613]",
      "dest": "bytes: bytes [3608,3613]"
    },
    {
      "src": "(: ( [919,920]",
      "dest": "(: ( [919,920]"
    },
    {
      "src": "call_argument [1825,1881]",
      "dest": "call_argument [1825,1881]"
    },
    {
      "src": ",: , [868,869]",
      "dest": ",: , [868,869]"
    },
    {
      "src": "comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [3269,3377]",
      "dest": "comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [3269,3377]"
    },
    {
      "src": "identifier: encodeWithSelector [1932,1950]",
      "dest": "identifier: encodeWithSelector [1932,1950]"
    },
    {
      "src": "}: } [887,888]",
      "dest": "}: } [887,888]"
    },
    {
      "src": "identifier: value [2673,2678]",
      "dest": "identifier: value [2673,2678]"
    },
    {
      "src": "address: address [3634,3641]",
      "dest": "address: address [3634,3641]"
    },
    {
      "src": "identifier: abi [2237,2240]",
      "dest": "identifier: abi [2237,2240]"
    },
    {
      "src": "}: } [2805,2806]",
      "dest": "}: } [2805,2806]"
    },
    {
      "src": "parameter [993,1006]",
      "dest": "parameter [993,1006]"
    },
    {
      "src": "comment: // safeApprove should only be called when setting an initial allowance, [1511,1582]",
      "dest": "comment: // safeApprove should only be called when setting an initial allowance, [1511,1582]"
    },
    {
      "src": "primitive_type [3634,3641]",
      "dest": "primitive_type [3634,3641]"
    },
    {
      "src": "primitive_type [2509,2516]",
      "dest": "primitive_type [2509,2516]"
    },
    {
      "src": "): ) [3829,3830]",
      "dest": "): ) [3829,3830]"
    },
    {
      "src": "type_name [756,763]",
      "dest": "type_name [756,763]"
    },
    {
      "src": "variable_declaration [2130,2150]",
      "dest": "variable_declaration [2130,2150]"
    },
    {
      "src": "=: = [2656,2657]",
      "dest": "=: = [2656,2657]"
    },
    {
      "src": "): ) [1794,1795]",
      "dest": "): ) [1794,1795]"
    },
    {
      "src": "+: + [2193,2194]",
      "dest": "+: + [2193,2194]"
    },
    {
      "src": "): ) [2521,2522]",
      "dest": "): ) [2521,2522]"
    },
    {
      "src": "binary_expression [3717,3738]",
      "dest": "binary_expression [3717,3738]"
    },
    {
      "src": "function_body [1022,1135]",
      "dest": "function_body [1022,1135]"
    },
    {
      "src": "call_argument [2169,2182]",
      "dest": "call_argument [2169,2182]"
    },
    {
      "src": "identifier: IERC20 [2044,2050]",
      "dest": "identifier: IERC20 [2044,2050]"
    },
    {
      "src": "if: if [3713,3715]",
      "dest": "if: if [3713,3715]"
    },
    {
      "src": "\": \" [3701,3702]",
      "dest": "\": \" [3701,3702]"
    },
    {
      "src": "identifier: newAllowance [2138,2150]",
      "dest": "identifier: newAllowance [2138,2150]"
    },
    {
      "src": "(: ( [3824,3825]",
      "dest": "(: ( [3824,3825]"
    },
    {
      "src": "string [1825,1881]",
      "dest": "string [1825,1881]"
    },
    {
      "src": "identifier: encodeWithSelector [1063,1081]",
      "dest": "identifier: encodeWithSelector [1063,1081]"
    },
    {
      "src": "function: function [3189,3197]",
      "dest": "function: function [3189,3197]"
    },
    {
      "src": "call_expression [3793,3878]",
      "dest": "call_expression [3793,3878]"
    },
    {
      "src": "): ) [3249,3250]",
      "dest": "): ) [3249,3250]"
    },
    {
      "src": ",: , [1437,1438]",
      "dest": ",: , [1437,1438]"
    },
    {
      "src": "type_name [714,720]",
      "dest": "type_name [714,720]"
    },
    {
      "src": "{: { [2120,2121]",
      "dest": "{: { [2120,2121]"
    },
    {
      "src": "identifier: SafeERC20 [635,644]",
      "dest": "identifier: SafeERC20 [635,644]"
    },
    {
      "src": "): ) [879,880]",
      "dest": "): ) [879,880]"
    },
    {
      "src": "identifier: spender [2284,2291]",
      "dest": "identifier: spender [2284,2291]"
    },
    {
      "src": "function_body [3259,3895]",
      "dest": "function_body [3259,3895]"
    },
    {
      "src": "identifier: token [1052,1057]",
      "dest": "identifier: token [1052,1057]"
    },
    {
      "src": ",: , [2291,2292]",
      "dest": ",: , [2291,2292]"
    },
    {
      "src": "call_argument [1951,1973]",
      "dest": "call_argument [1951,1973]"
    },
    {
      "src": "call_expression [3801,3831]",
      "dest": "call_expression [3801,3831]"
    },
    {
      "src": "type_cast_expression [3634,3648]",
      "dest": "type_cast_expression [3634,3648]"
    },
    {
      "src": "user_defined_type [1425,1431]",
      "dest": "user_defined_type [1425,1431]"
    },
    {
      "src": "identifier: this [1790,1794]",
      "dest": "identifier: this [1790,1794]"
    },
    {
      "src": "identifier: abi [1059,1062]",
      "dest": "identifier: abi [1059,1062]"
    },
    {
      "src": "call_argument [2293,2305]",
      "dest": "call_argument [2293,2305]"
    },
    {
      "src": "solidity_pragma_token [107,122]",
      "dest": "solidity_pragma_token [107,122]"
    },
    {
      "src": "identifier: approve [1957,1964]",
      "dest": "identifier: approve [1957,1964]"
    },
    {
      "src": "primitive_type [2091,2098]",
      "dest": "primitive_type [2091,2098]"
    },
    {
      "src": "identifier: spender [1455,1462]",
      "dest": "identifier: spender [1455,1462]"
    },
    {
      "src": "call_argument [2237,2306]",
      "dest": "call_argument [2237,2306]"
    },
    {
      "src": ",: , [963,964]",
      "dest": ",: , [963,964]"
    },
    {
      "src": ".: . [1956,1957]",
      "dest": ".: . [1956,1957]"
    },
    {
      "src": "identifier: token [3225,3230]",
      "dest": "identifier: token [3225,3230]"
    },
    {
      "src": "for: for [665,668]",
      "dest": "for: for [665,668]"
    },
    {
      "src": "identifier: selector [1101,1109]",
      "dest": "identifier: selector [1101,1109]"
    },
    {
      "src": ".: . [1087,1088]",
      "dest": ".: . [1087,1088]"
    },
    {
      "src": "variable_declaration_statement [2635,2679]",
      "dest": "variable_declaration_statement [2635,2679]"
    },
    {
      "src": "identifier: from [1111,1115]",
      "dest": "identifier: from [1111,1115]"
    },
    {
      "src": "(: ( [3811,3812]",
      "dest": "(: ( [3811,3812]"
    },
    {
      "src": "if_statement [3713,3889]",
      "dest": "if_statement [3713,3889]"
    },
    {
      "src": "(: ( [1789,1790]",
      "dest": "(: ( [1789,1790]"
    },
    {
      "src": "binary_expression [1750,1760]",
      "dest": "binary_expression [1750,1760]"
    },
    {
      "src": "=: = [3632,3633]",
      "dest": "=: = [3632,3633]"
    },
    {
      "src": "==: == [1806,1808]",
      "dest": "==: == [1806,1808]"
    },
    {
      "src": "{: { [645,646]",
      "dest": "{: { [645,646]"
    },
    {
      "src": "primitive_type [1782,1789]",
      "dest": "primitive_type [1782,1789]"
    },
    {
      "src": "call_argument [2517,2521]",
      "dest": "call_argument [2517,2521]"
    },
    {
      "src": "identifier: oldAllowance [2658,2670]",
      "dest": "identifier: oldAllowance [2658,2670]"
    },
    {
      "src": "identifier: selector [1965,1973]",
      "dest": "identifier: selector [1965,1973]"
    },
    {
      "src": "internal: internal [1492,1500]",
      "dest": "internal: internal [1492,1500]"
    },
    {
      "src": "function_definition [683,888]",
      "dest": "function_definition [683,888]"
    },
    {
      "src": "type_name [951,958]",
      "dest": "type_name [951,958]"
    },
    {
      "src": "parameter [2044,2056]",
      "dest": "parameter [2044,2056]"
    },
    {
      "src": "parameter [2066,2081]",
      "dest": "parameter [2066,2081]"
    },
    {
      "src": "type_name [1447,1454]",
      "dest": "type_name [1447,1454]"
    },
    {
      "src": "identifier: IERC20 [1425,1431]",
      "dest": "identifier: IERC20 [1425,1431]"
    },
    {
      "src": "call_expression [1032,1128]",
      "dest": "call_expression [1032,1128]"
    },
    {
      "src": "user_defined_type [2044,2050]",
      "dest": "user_defined_type [2044,2050]"
    },
    {
      "src": "type_name [1425,1431]",
      "dest": "type_name [1425,1431]"
    },
    {
      "src": "visibility [776,784]",
      "dest": "visibility [776,784]"
    },
    {
      "src": "type_name [2066,2073]",
      "dest": "type_name [2066,2073]"
    },
    {
      "src": "(: ( [2350,2351]",
      "dest": "(: ( [2350,2351]"
    },
    {
      "src": "): ) [880,881]",
      "dest": "): ) [880,881]"
    },
    {
      "src": "parameter [1447,1462]",
      "dest": "parameter [1447,1462]"
    },
    {
      "src": "identifier: spender [1797,1804]",
      "dest": "identifier: spender [1797,1804]"
    },
    {
      "src": "identifier: _callOptionalReturn [1901,1920]",
      "dest": "identifier: _callOptionalReturn [1901,1920]"
    },
    {
      "src": "binary_expression [2153,2200]",
      "dest": "binary_expression [2153,2200]"
    },
    {
      "src": "}: } [3896,3897]",
      "dest": "}: } [3896,3897]"
    },
    {
      "src": "member_expression [1082,1100]",
      "dest": "member_expression [1082,1100]"
    },
    {
      "src": "identifier: selector [860,868]",
      "dest": "identifier: selector [860,868]"
    },
    {
      "src": "call_argument [1975,1982]",
      "dest": "call_argument [1975,1982]"
    },
    {
      "src": "solidity_version: 0.8.0 [117,122]",
      "dest": "solidity_version: 0.8.0 [117,122]"
    },
    {
      "src": "type_name [2091,2098]",
      "dest": "type_name [2091,2098]"
    },
    {
      "src": ",: , [983,984]",
      "dest": ",: , [983,984]"
    },
    {
      "src": "member_expression [2493,2508]",
      "dest": "member_expression [2493,2508]"
    },
    {
      "src": "identifier: value [1750,1755]",
      "dest": "identifier: value [1750,1755]"
    },
    {
      "src": "type_name [3608,3613]",
      "dest": "type_name [3608,3613]"
    },
    {
      "src": ",: , [1795,1796]",
      "dest": ",: , [1795,1796]"
    },
    {
      "src": "): ) [1890,1891]",
      "dest": "): ) [1890,1891]"
    },
    {
      "src": "call_expression [2692,2789]",
      "dest": "call_expression [2692,2789]"
    },
    {
      "src": "type_name [736,743]",
      "dest": "type_name [736,743]"
    },
    {
      "src": "}: } [3888,3889]",
      "dest": "}: } [3888,3889]"
    },
    {
      "src": "call_argument [815,820]",
      "dest": "call_argument [815,820]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "dest": "comment: // SPDX-License-Identifier: MIT [0,31]"
    },
    {
      "src": "pragma: pragma [100,106]",
      "dest": "pragma: pragma [100,106]"
    },
    {
      "src": "identifier: selector [2274,2282]",
      "dest": "identifier: selector [2274,2282]"
    },
    {
      "src": "): ) [3738,3739]",
      "dest": "): ) [3738,3739]"
    },
    {
      "src": "comment: /**      * @dev Deprecated. This function has issues similar to the ones found in      * {IERC20-approve}, and its usage is discouraged.      *      * Whenever possible, use {safeIncreaseAllowance} and      * {safeDecreaseAllowance} instead.      */ [1141,1390]",
      "dest": "comment: /**      * @dev Deprecated. This function has issues similar to the ones found in      * {IERC20-approve}, and its usage is discouraged.      *      * Whenever possible, use {safeIncreaseAllowance} and      * {safeDecreaseAllowance} instead.      */ [1141,1390]"
    },
    {
      "src": "function_body [2120,2314]",
      "dest": "function_body [2120,2314]"
    },
    {
      "src": "\": \" [1880,1881]",
      "dest": "\": \" [1880,1881]"
    },
    {
      "src": "\": \" [2577,2578]",
      "dest": "\": \" [2577,2578]"
    },
    {
      "src": "address: address [1782,1789]",
      "dest": "address: address [1782,1789]"
    },
    {
      "src": "identifier: newAllowance [2775,2787]",
      "dest": "identifier: newAllowance [2775,2787]"
    },
    {
      "src": "function_body [2436,2806]",
      "dest": "function_body [2436,2806]"
    },
    {
      "src": "identifier: spender [1975,1982]",
      "dest": "identifier: spender [1975,1982]"
    },
    {
      "src": "): ) [1760,1761]",
      "dest": "): ) [1760,1761]"
    },
    {
      "src": "expression_statement [2210,2308]",
      "dest": "expression_statement [2210,2308]"
    },
    {
      "src": "type_name [2382,2389]",
      "dest": "type_name [2382,2389]"
    },
    {
      "src": "call_argument [2184,2191]",
      "dest": "call_argument [2184,2191]"
    },
    {
      "src": "): ) [2191,2192]",
      "dest": "): ) [2191,2192]"
    },
    {
      "src": "comment: // or when resetting it to zero. To increase and decrease it, use [1591,1656]",
      "dest": "comment: // or when resetting it to zero. To increase and decrease it, use [1591,1656]"
    },
    {
      "src": "member_expression [2260,2282]",
      "dest": "member_expression [2260,2282]"
    },
    {
      "src": "call_argument [2719,2788]",
      "dest": "call_argument [2719,2788]"
    },
    {
      "src": "memory: memory [3614,3620]",
      "dest": "memory: memory [3614,3620]"
    },
    {
      "src": ",: , [3831,3832]",
      "dest": ",: , [3831,3832]"
    },
    {
      "src": "string [153,166]",
      "dest": "string [153,166]"
    },
    {
      "src": ",: , [746,747]",
      "dest": ",: , [746,747]"
    },
    {
      "src": ".: . [1964,1965]",
      "dest": ".: . [1964,1965]"
    },
    {
      "src": "function_definition [894,1135]",
      "dest": "function_definition [894,1135]"
    },
    {
      "src": "identifier: safeApprove [1404,1415]",
      "dest": "identifier: safeApprove [1404,1415]"
    },
    {
      "src": "identifier: value [1984,1989]",
      "dest": "identifier: value [1984,1989]"
    },
    {
      "src": "identifier: value [874,879]",
      "dest": "identifier: value [874,879]"
    },
    {
      "src": ",: , [2764,2765]",
      "dest": ",: , [2764,2765]"
    },
    {
      "src": "}: } [1997,1998]",
      "dest": "}: } [1997,1998]"
    },
    {
      "src": "call_argument [1921,1926]",
      "dest": "call_argument [1921,1926]"
    },
    {
      "src": "identifier: abi [822,825]",
      "dest": "identifier: abi [822,825]"
    },
    {
      "src": "string [3668,3702]",
      "dest": "string [3668,3702]"
    },
    {
      "src": "(: ( [3661,3662]",
      "dest": "(: ( [3661,3662]"
    },
    {
      "src": "comment: // the target address contains contract code and also asserts for success in the low-level call. [3502,3598]",
      "dest": "comment: // the target address contains contract code and also asserts for success in the low-level call. [3502,3598]"
    },
    {
      "src": ",: , [2182,2183]",
      "dest": ",: , [2182,2183]"
    },
    {
      "src": "internal: internal [2427,2435]",
      "dest": "internal: internal [2427,2435]"
    },
    {
      "src": "identifier: value [1480,1485]",
      "dest": "identifier: value [1480,1485]"
    },
    {
      "src": "=: = [2491,2492]",
      "dest": "=: = [2491,2492]"
    },
    {
      "src": ",: , [1973,1974]",
      "dest": ",: , [1973,1974]"
    },
    {
      "src": ",: , [1982,1983]",
      "dest": ",: , [1982,1983]"
    },
    {
      "src": "identifier: to [744,746]",
      "dest": "identifier: to [744,746]"
    },
    {
      "src": "call_argument [3824,3830]",
      "dest": "call_argument [3824,3830]"
    },
    {
      "src": "call_argument [2230,2235]",
      "dest": "call_argument [2230,2235]"
    },
    {
      "src": ",: , [2717,2718]",
      "dest": ",: , [2717,2718]"
    },
    {
      "src": "function: function [894,902]",
      "dest": "function: function [894,902]"
    },
    {
      "src": "call_expression [1766,1805]",
      "dest": "call_expression [1766,1805]"
    },
    {
      "src": "identifier: allowance [1772,1781]",
      "dest": "identifier: allowance [1772,1781]"
    },
    {
      "src": "primitive_type [2635,2642]",
      "dest": "primitive_type [2635,2642]"
    },
    {
      "src": "identifier: token [1766,1771]",
      "dest": "identifier: token [1766,1771]"
    },
    {
      "src": "call_argument [2177,2181]",
      "dest": "call_argument [2177,2181]"
    },
    {
      "src": "identifier: token [2230,2235]",
      "dest": "identifier: token [2230,2235]"
    },
    {
      "src": "address: address [973,980]",
      "dest": "address: address [973,980]"
    },
    {
      "src": "call_argument [2712,2717]",
      "dest": "call_argument [2712,2717]"
    },
    {
      "src": "): ) [2788,2789]",
      "dest": "): ) [2788,2789]"
    },
    {
      "src": "expression_statement [795,882]",
      "dest": "expression_statement [795,882]"
    },
    {
      "src": "identifier: abi [3801,3804]",
      "dest": "identifier: abi [3801,3804]"
    },
    {
      "src": "identifier: token [815,820]",
      "dest": "identifier: token [815,820]"
    },
    {
      "src": "import_directive [125,145]",
      "dest": "import_directive [125,145]"
    },
    {
      "src": "parameter [2407,2420]",
      "dest": "parameter [2407,2420]"
    },
    {
      "src": "type_name [669,676]",
      "dest": "type_name [669,676]"
    },
    {
      "src": "call_argument [3833,3877]",
      "dest": "call_argument [3833,3877]"
    },
    {
      "src": "call_argument [822,880]",
      "dest": "call_argument [822,880]"
    },
    {
      "src": "parameter [1472,1485]",
      "dest": "parameter [1472,1485]"
    },
    {
      "src": "primitive_type [3232,3237]",
      "dest": "primitive_type [3232,3237]"
    },
    {
      "src": "(: ( [2516,2517]",
      "dest": "(: ( [2516,2517]"
    },
    {
      "src": "block_statement [2446,2800]",
      "dest": "block_statement [2446,2800]"
    },
    {
      "src": "(: ( [2741,2742]",
      "dest": "(: ( [2741,2742]"
    },
    {
      "src": "uint256: uint256 [2130,2137]",
      "dest": "uint256: uint256 [2130,2137]"
    },
    {
      "src": "primitive_type [2470,2477]",
      "dest": "primitive_type [2470,2477]"
    },
    {
      "src": "call_argument [2577,2620]",
      "dest": "call_argument [2577,2620]"
    },
    {
      "src": "source_file [0,3898]",
      "dest": "source_file [0,3898]"
    },
    {
      "src": "user_defined_type [2360,2366]",
      "dest": "user_defined_type [2360,2366]"
    },
    {
      "src": "parameter [951,963]",
      "dest": "parameter [951,963]"
    },
    {
      "src": "identifier: token [845,850]",
      "dest": "identifier: token [845,850]"
    },
    {
      "src": "call_argument [2524,2531]",
      "dest": "call_argument [2524,2531]"
    },
    {
      "src": "identifier: token [2153,2158]",
      "dest": "identifier: token [2153,2158]"
    },
    {
      "src": "^:  ^ [115,117]",
      "dest": "^:  ^ [115,117]"
    },
    {
      "src": "call_argument [1790,1794]",
      "dest": "call_argument [1790,1794]"
    },
    {
      "src": "member_expression [1928,1950]",
      "dest": "member_expression [1928,1950]"
    },
    {
      "src": "{: { [3259,3260]",
      "dest": "{: { [3259,3260]"
    },
    {
      "src": "parenthesized_expression [3824,3830]",
      "dest": "parenthesized_expression [3824,3830]"
    },
    {
      "src": "identifier: token [2367,2372]",
      "dest": "identifier: token [2367,2372]"
    },
    {
      "src": "call_argument [2509,2522]",
      "dest": "call_argument [2509,2522]"
    },
    {
      "src": "function_body [785,888]",
      "dest": "function_body [785,888]"
    },
    {
      "src": "identifier: token [2051,2056]",
      "dest": "identifier: token [2051,2056]"
    },
    {
      "src": "call_expression [2237,2306]",
      "dest": "call_expression [2237,2306]"
    },
    {
      "src": "): ) [2305,2306]",
      "dest": "): ) [2305,2306]"
    },
    {
      "src": "identifier: _callOptionalReturn [795,814]",
      "dest": "identifier: _callOptionalReturn [795,814]"
    },
    {
      "src": "uint256: uint256 [1472,1479]",
      "dest": "uint256: uint256 [1472,1479]"
    },
    {
      "src": "variable_declaration [2635,2655]",
      "dest": "variable_declaration [2635,2655]"
    },
    {
      "src": "identifier: spender [2766,2773]",
      "dest": "identifier: spender [2766,2773]"
    },
    {
      "src": ".: . [3727,3728]",
      "dest": ".: . [3727,3728]"
    },
    {
      "src": "user_defined_type [714,720]",
      "dest": "user_defined_type [714,720]"
    },
    {
      "src": "uint256: uint256 [993,1000]",
      "dest": "uint256: uint256 [993,1000]"
    },
    {
      "src": ",: , [2081,2082]",
      "dest": ",: , [2081,2082]"
    },
    {
      "src": "identifier: safeDecreaseAllowance [2329,2350]",
      "dest": "identifier: safeDecreaseAllowance [2329,2350]"
    },
    {
      "src": ",: , [1119,1120]",
      "dest": ",: , [1119,1120]"
    },
    {
      "src": "identifier: token [1951,1956]",
      "dest": "identifier: token [1951,1956]"
    },
    {
      "src": "): ) [3877,3878]",
      "dest": "): ) [3877,3878]"
    },
    {
      "src": "(: ( [3217,3218]",
      "dest": "(: ( [3217,3218]"
    },
    {
      "src": "\": \" [3833,3834]",
      "dest": "\": \" [3833,3834]"
    },
    {
      "src": "type_name [993,1000]",
      "dest": "type_name [993,1000]"
    },
    {
      "src": "identifier: functionCall [3649,3661]",
      "dest": "identifier: functionCall [3649,3661]"
    },
    {
      "src": "call_expression [2719,2788]",
      "dest": "call_expression [2719,2788]"
    },
    {
      "src": "member_expression [1082,1109]",
      "dest": "member_expression [1082,1109]"
    },
    {
      "src": "member_expression [1951,1964]",
      "dest": "member_expression [1951,1964]"
    },
    {
      "src": "=: = [2151,2152]",
      "dest": "=: = [2151,2152]"
    },
    {
      "src": "): ) [1127,1128]",
      "dest": "): ) [1127,1128]"
    },
    {
      "src": ",: , [2056,2057]",
      "dest": ",: , [2056,2057]"
    },
    {
      "src": "string_literal [3833,3877]",
      "dest": "string_literal [3833,3877]"
    },
    {
      "src": "using_directive [651,677]",
      "dest": "using_directive [651,677]"
    },
    {
      "src": "member_expression [2742,2764]",
      "dest": "member_expression [2742,2764]"
    },
    {
      "src": "call_expression [1928,1990]",
      "dest": "call_expression [1928,1990]"
    },
    {
      "src": "member_expression [3634,3661]",
      "dest": "member_expression [3634,3661]"
    },
    {
      "src": "\": \" [165,166]",
      "dest": "\": \" [165,166]"
    },
    {
      "src": "variable_declaration [2470,2490]",
      "dest": "variable_declaration [2470,2490]"
    },
    {
      "src": "identifier: returndata [3717,3727]",
      "dest": "identifier: returndata [3717,3727]"
    },
    {
      "src": ",: , [941,942]",
      "dest": ",: , [941,942]"
    },
    {
      "src": "): ) [3830,3831]",
      "dest": "): ) [3830,3831]"
    },
    {
      "src": "function_body [1501,1998]",
      "dest": "function_body [1501,1998]"
    },
    {
      "src": "address: address [1447,1454]",
      "dest": "address: address [1447,1454]"
    },
    {
      "src": "): ) [1804,1805]",
      "dest": "): ) [1804,1805]"
    },
    {
      "src": "identifier: Address [657,664]",
      "dest": "identifier: Address [657,664]"
    },
    {
      "src": "(: ( [1920,1921]",
      "dest": "(: ( [1920,1921]"
    },
    {
      "src": "member_expression [3801,3811]",
      "dest": "member_expression [3801,3811]"
    },
    {
      "src": ",: , [1462,1463]",
      "dest": ",: , [1462,1463]"
    },
    {
      "src": ",: , [2522,2523]",
      "dest": ",: , [2522,2523]"
    },
    {
      "src": "member_expression [2237,2259]",
      "dest": "member_expression [2237,2259]"
    },
    {
      "src": "(: ( [2711,2712]",
      "dest": "(: ( [2711,2712]"
    },
    {
      "src": "call_argument [3668,3702]",
      "dest": "call_argument [3668,3702]"
    },
    {
      "src": "type_cast_expression [1782,1795]",
      "dest": "type_cast_expression [1782,1795]"
    },
    {
      "src": "{: { [2456,2457]",
      "dest": "{: { [2456,2457]"
    },
    {
      "src": "{: { [2436,2437]",
      "dest": "{: { [2436,2437]"
    },
    {
      "src": "parameter [714,726]",
      "dest": "parameter [714,726]"
    },
    {
      "src": "(: ( [1950,1951]",
      "dest": "(: ( [1950,1951]"
    },
    {
      "src": "member_expression [2260,2273]",
      "dest": "member_expression [2260,2273]"
    },
    {
      "src": "parenthesized_expression [1765,1811]",
      "dest": "parenthesized_expression [1765,1811]"
    },
    {
      "src": "identifier: newAllowance [2293,2305]",
      "dest": "identifier: newAllowance [2293,2305]"
    },
    {
      "src": "type_cast_expression [2169,2182]",
      "dest": "type_cast_expression [2169,2182]"
    },
    {
      "src": "block_statement [3740,3889]",
      "dest": "block_statement [3740,3889]"
    },
    {
      "src": "identifier: IERC20 [714,720]",
      "dest": "identifier: IERC20 [714,720]"
    },
    {
      "src": "primitive_type [2407,2414]",
      "dest": "primitive_type [2407,2414]"
    },
    {
      "src": "call_argument [845,868]",
      "dest": "call_argument [845,868]"
    },
    {
      "src": "member_expression [2719,2741]",
      "dest": "member_expression [2719,2741]"
    },
    {
      "src": "type_name [2635,2642]",
      "dest": "type_name [2635,2642]"
    },
    {
      "src": "call_expression [2210,2307]",
      "dest": "call_expression [2210,2307]"
    },
    {
      "src": "expression_statement [2692,2790]",
      "dest": "expression_statement [2692,2790]"
    },
    {
      "src": "comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [2812,3184]",
      "dest": "comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [2812,3184]"
    },
    {
      "src": "identifier: require [1728,1735]",
      "dest": "identifier: require [1728,1735]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol) [32,98]",
      "dest": "comment: // OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol) [32,98]"
    },
    {
      "src": "identifier: allowance [2499,2508]",
      "dest": "identifier: allowance [2499,2508]"
    },
    {
      "src": "comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [169,626]",
      "dest": "comment: /**  * @title SafeERC20  * @dev Wrappers around ERC20 operations that throw on failure (when the token  * contract returns false). Tokens that return no value (and instead revert or  * throw on failure) are also supported, non-reverting calls are assumed to be  * successful.  * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,  * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.  */ [169,626]"
    },
    {
      "src": "identifier: from [959,963]",
      "dest": "identifier: from [959,963]"
    },
    {
      "src": "function: function [2320,2328]",
      "dest": "function: function [2320,2328]"
    },
    {
      "src": "type_name [3218,3224]",
      "dest": "type_name [3218,3224]"
    },
    {
      "src": ",: , [2235,2236]",
      "dest": ",: , [2235,2236]"
    },
    {
      "src": "call_argument [2260,2282]",
      "dest": "call_argument [2260,2282]"
    },
    {
      "src": "visibility [1492,1500]",
      "dest": "visibility [1492,1500]"
    },
    {
      "src": "identifier: encodeWithSelector [2241,2259]",
      "dest": "identifier: encodeWithSelector [2241,2259]"
    },
    {
      "src": "identifier: spender [2390,2397]",
      "dest": "identifier: spender [2390,2397]"
    },
    {
      "src": "variable_declaration [3608,3631]",
      "dest": "variable_declaration [3608,3631]"
    },
    {
      "src": "address: address [736,743]",
      "dest": "address: address [736,743]"
    },
    {
      "src": "primitive_type [2382,2389]",
      "dest": "primitive_type [2382,2389]"
    },
    {
      "src": "parameter [756,769]",
      "dest": "parameter [756,769]"
    },
    {
      "src": "identifier: to [1117,1119]",
      "dest": "identifier: to [1117,1119]"
    },
    {
      "src": "\": \" [143,144]",
      "dest": "\": \" [143,144]"
    },
    {
      "src": "identifier: allowance [2159,2168]",
      "dest": "identifier: allowance [2159,2168]"
    },
    {
      "src": "call_argument [3801,3831]",
      "dest": "call_argument [3801,3831]"
    },
    {
      "src": "parameter [736,746]",
      "dest": "parameter [736,746]"
    },
    {
      "src": "identifier: safeIncreaseAllowance [2013,2034]",
      "dest": "identifier: safeIncreaseAllowance [2013,2034]"
    },
    {
      "src": ".: . [2755,2756]",
      "dest": ".: . [2755,2756]"
    },
    {
      "src": ",: , [872,873]",
      "dest": ",: , [872,873]"
    },
    {
      "src": "solidity: solidity [107,115]",
      "dest": "solidity: solidity [107,115]"
    },
    {
      "src": "identifier: require [3793,3800]",
      "dest": "identifier: require [3793,3800]"
    },
    {
      "src": "identifier: _callOptionalReturn [1032,1051]",
      "dest": "identifier: _callOptionalReturn [1032,1051]"
    },
    {
      "src": "number_literal: 0 [1759,1760]",
      "dest": "number_literal: 0 [1759,1760]"
    },
    {
      "src": "primitive_type [736,743]",
      "dest": "primitive_type [736,743]"
    },
    {
      "src": "call_argument [1082,1109]",
      "dest": "call_argument [1082,1109]"
    },
    {
      "src": "call_expression [3634,3703]",
      "dest": "call_expression [3634,3703]"
    },
    {
      "src": "member_expression [845,859]",
      "dest": "member_expression [845,859]"
    },
    {
      "src": "): ) [2306,2307]",
      "dest": "): ) [2306,2307]"
    },
    {
      "src": ",: , [726,727]",
      "dest": ",: , [726,727]"
    },
    {
      "src": ".: . [3648,3649]",
      "dest": ".: . [3648,3649]"
    },
    {
      "src": "identifier: abi [1928,1931]",
      "dest": "identifier: abi [1928,1931]"
    },
    {
      "src": "private: private [3251,3258]",
      "dest": "private: private [3251,3258]"
    },
    {
      "src": "identifier: token [3642,3647]",
      "dest": "identifier: token [3642,3647]"
    },
    {
      "src": "call_argument [3662,3666]",
      "dest": "call_argument [3662,3666]"
    },
    {
      "src": ",: , [3666,3667]",
      "dest": ",: , [3666,3667]"
    },
    {
      "src": "binary_expression [2658,2678]",
      "dest": "binary_expression [2658,2678]"
    },
    {
      "src": ",: , [1926,1927]",
      "dest": ",: , [1926,1927]"
    },
    {
      "src": "identifier: oldAllowance [2478,2490]",
      "dest": "identifier: oldAllowance [2478,2490]"
    },
    {
      "src": "expression_statement [3793,3879]",
      "dest": "expression_statement [3793,3879]"
    },
    {
      "src": "call_argument [2766,2773]",
      "dest": "call_argument [2766,2773]"
    },
    {
      "src": "call_expression [822,880]",
      "dest": "call_expression [822,880]"
    },
    {
      "src": "identifier: returndata [3812,3822]",
      "dest": "identifier: returndata [3812,3822]"
    },
    {
      "src": "call_argument [1121,1126]",
      "dest": "call_argument [1121,1126]"
    },
    {
      "src": ".: . [2240,2241]",
      "dest": ".: . [2240,2241]"
    },
    {
      "src": "identifier: value [2415,2420]",
      "dest": "identifier: value [2415,2420]"
    },
    {
      "src": "comment: // Return data is optional [3754,3780]",
      "dest": "comment: // Return data is optional [3754,3780]"
    },
    {
      "src": ".: . [2722,2723]",
      "dest": ".: . [2722,2723]"
    },
    {
      "src": "call_argument [1052,1057]",
      "dest": "call_argument [1052,1057]"
    },
    {
      "src": "identifier: oldAllowance [2554,2566]",
      "dest": "identifier: oldAllowance [2554,2566]"
    },
    {
      "src": "(: ( [844,845]",
      "dest": "(: ( [844,845]"
    },
    {
      "src": "primitive_type [973,980]",
      "dest": "primitive_type [973,980]"
    },
    {
      "src": "(: ( [1735,1736]",
      "dest": "(: ( [1735,1736]"
    },
    {
      "src": ".: . [1100,1101]",
      "dest": ".: . [1100,1101]"
    },
    {
      "src": "parameter [973,983]",
      "dest": "parameter [973,983]"
    },
    {
      "src": "expression_statement [1728,1892]",
      "dest": "expression_statement [1728,1892]"
    },
    {
      "src": "identifier: data [3662,3666]",
      "dest": "identifier: data [3662,3666]"
    },
    {
      "src": "expression_statement [2546,2622]",
      "dest": "expression_statement [2546,2622]"
    },
    {
      "src": "uint256: uint256 [756,763]",
      "dest": "uint256: uint256 [756,763]"
    },
    {
      "src": "parameter [2091,2104]",
      "dest": "parameter [2091,2104]"
    },
    {
      "src": "identifier: data [3245,3249]",
      "dest": "identifier: data [3245,3249]"
    },
    {
      "src": "call_argument [1984,1989]",
      "dest": "call_argument [1984,1989]"
    },
    {
      "src": "uint256: uint256 [2470,2477]",
      "dest": "uint256: uint256 [2470,2477]"
    },
    {
      "src": "==: == [1756,1758]",
      "dest": "==: == [1756,1758]"
    },
    {
      "src": "identifier: token [2260,2265]",
      "dest": "identifier: token [2260,2265]"
    },
    {
      "src": "}: } [1134,1135]",
      "dest": "}: } [1134,1135]"
    },
    {
      "src": "address: address [951,958]",
      "dest": "address: address [951,958]"
    },
    {
      "src": "parameter [1425,1437]",
      "dest": "parameter [1425,1437]"
    },
    {
      "src": "): ) [2109,2110]",
      "dest": "): ) [2109,2110]"
    },
    {
      "src": "number_literal: 0 [3737,3738]",
      "dest": "number_literal: 0 [3737,3738]"
    },
    {
      "src": "call_argument [874,879]",
      "dest": "call_argument [874,879]"
    },
    {
      "src": "library: library [627,634]",
      "dest": "library: library [627,634]"
    },
    {
      "src": "): ) [2531,2532]",
      "dest": "): ) [2531,2532]"
    },
    {
      "src": ",: , [1811,1812]",
      "dest": ",: , [1811,1812]"
    },
    {
      "src": "identifier: IERC20 [2360,2366]",
      "dest": "identifier: IERC20 [2360,2366]"
    },
    {
      "src": "identifier: token [1432,1437]",
      "dest": "identifier: token [1432,1437]"
    },
    {
      "src": ".: . [2158,2159]",
      "dest": ".: . [2158,2159]"
    },
    {
      "src": "identifier: to [870,872]",
      "dest": "identifier: to [870,872]"
    },
    {
      "src": "identifier: length [3728,3734]",
      "dest": "identifier: length [3728,3734]"
    },
    {
      "src": "import: import [146,152]",
      "dest": "import: import [146,152]"
    },
    {
      "src": "parameter [929,941]",
      "dest": "parameter [929,941]"
    },
    {
      "src": "identifier: selector [2756,2764]",
      "dest": "identifier: selector [2756,2764]"
    },
    {
      "src": "string_literal [1825,1881]",
      "dest": "string_literal [1825,1881]"
    },
    {
      "src": "identifier: value [2195,2200]",
      "dest": "identifier: value [2195,2200]"
    },
    {
      "src": "): ) [2787,2788]",
      "dest": "): ) [2787,2788]"
    },
    {
      "src": "identifier: returndata [3621,3631]",
      "dest": "identifier: returndata [3621,3631]"
    },
    {
      "src": ".: . [1931,1932]",
      "dest": ".: . [1931,1932]"
    },
    {
      "src": "bytes: bytes [3232,3237]",
      "dest": "bytes: bytes [3232,3237]"
    },
    {
      "src": "identifier: value [1001,1006]",
      "dest": "identifier: value [1001,1006]"
    },
    {
      "src": "binary_expression [1766,1810]",
      "dest": "binary_expression [1766,1810]"
    },
    {
      "src": "identifier: token [721,726]",
      "dest": "identifier: token [721,726]"
    },
    {
      "src": ">=: >= [2567,2569]",
      "dest": ">=: >= [2567,2569]"
    },
    {
      "src": "identifier: _callOptionalReturn [3198,3217]",
      "dest": "identifier: _callOptionalReturn [3198,3217]"
    },
    {
      "src": "identifier: to [981,983]",
      "dest": "identifier: to [981,983]"
    },
    {
      "src": "call_argument [1117,1119]",
      "dest": "call_argument [1117,1119]"
    },
    {
      "src": ",: , [2372,2373]",
      "dest": ",: , [2372,2373]"
    },
    {
      "src": "call_argument [2284,2291]",
      "dest": "call_argument [2284,2291]"
    },
    {
      "src": "\": \" [2619,2620]",
      "dest": "\": \" [2619,2620]"
    },
    {
      "src": "call_argument [1797,1804]",
      "dest": "call_argument [1797,1804]"
    },
    {
      "src": "primitive_type [2066,2073]",
      "dest": "primitive_type [2066,2073]"
    },
    {
      "src": "member_expression [1059,1081]",
      "dest": "member_expression [1059,1081]"
    },
    {
      "src": "identifier: spender [2184,2191]",
      "dest": "identifier: spender [2184,2191]"
    },
    {
      "src": "identifier: token [1921,1926]",
      "dest": "identifier: token [1921,1926]"
    },
    {
      "src": "(: ( [814,815]",
      "dest": "(: ( [814,815]"
    },
    {
      "src": "address: address [2509,2516]",
      "dest": "address: address [2509,2516]"
    },
    {
      "src": "identifier: spender [2524,2531]",
      "dest": "identifier: spender [2524,2531]"
    },
    {
      "src": ",: , [2575,2576]",
      "dest": ",: , [2575,2576]"
    },
    {
      "src": "{: { [1501,1502]",
      "dest": "{: { [1501,1502]"
    },
    {
      "src": "comment: // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that [3386,3493]",
      "dest": "comment: // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that [3386,3493]"
    },
    {
      "src": "}: } [2799,2800]",
      "dest": "}: } [2799,2800]"
    },
    {
      "src": "(: ( [2229,2230]",
      "dest": "(: ( [2229,2230]"
    },
    {
      "src": "call_argument [2775,2787]",
      "dest": "call_argument [2775,2787]"
    },
    {
      "src": "string_literal [3668,3702]",
      "dest": "string_literal [3668,3702]"
    },
    {
      "src": "identifier: transfer [851,859]",
      "dest": "identifier: transfer [851,859]"
    },
    {
      "src": "bool: bool [3825,3829]",
      "dest": "bool: bool [3825,3829]"
    },
    {
      "src": "call_expression [795,881]",
      "dest": "call_expression [795,881]"
    },
    {
      "src": "}: } [3894,3895]",
      "dest": "}: } [3894,3895]"
    },
    {
      "src": "\": \" [3668,3669]",
      "dest": "\": \" [3668,3669]"
    },
    {
      "src": "identifier: spender [2074,2081]",
      "dest": "identifier: spender [2074,2081]"
    },
    {
      "src": "pragma_directive [100,123]",
      "dest": "pragma_directive [100,123]"
    },
    {
      "src": "contract_body [645,3897]",
      "dest": "contract_body [645,3897]"
    },
    {
      "src": "function_definition [1395,1998]",
      "dest": "function_definition [1395,1998]"
    }
  ],
  "actions": []
}