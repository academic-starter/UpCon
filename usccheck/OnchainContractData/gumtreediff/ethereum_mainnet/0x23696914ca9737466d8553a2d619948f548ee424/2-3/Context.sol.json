{
  "matches": [
    {
      "src": "): ) [660,661]",
      "dest": "): ) [660,661]"
    },
    {
      "src": "): ) [807,808]",
      "dest": "): ) [807,808]"
    },
    {
      "src": "solidity_pragma_token [93,108]",
      "dest": "solidity_pragma_token [93,108]"
    },
    {
      "src": "identifier: data [830,834]",
      "dest": "identifier: data [830,834]"
    },
    {
      "src": "type_name [693,700]",
      "dest": "type_name [693,700]"
    },
    {
      "src": "comment: /**  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [111,607]",
      "dest": "comment: /**  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [111,607]"
    },
    {
      "src": "type_name [793,798]",
      "dest": "type_name [793,798]"
    },
    {
      "src": "parameter [693,700]",
      "dest": "parameter [693,700]"
    },
    {
      "src": ".: . [829,830]",
      "dest": ".: . [829,830]"
    },
    {
      "src": "contract_body [634,843]",
      "dest": "contract_body [634,843]"
    },
    {
      "src": "(: ( [759,760]",
      "dest": "(: ( [759,760]"
    },
    {
      "src": "identifier: _msgData [751,759]",
      "dest": "identifier: _msgData [751,759]"
    },
    {
      "src": "returns: returns [684,691]",
      "dest": "returns: returns [684,691]"
    },
    {
      "src": "calldata: calldata [799,807]",
      "dest": "calldata: calldata [799,807]"
    },
    {
      "src": "identifier: Context [626,633]",
      "dest": "identifier: Context [626,633]"
    },
    {
      "src": "(: ( [659,660]",
      "dest": "(: ( [659,660]"
    },
    {
      "src": "return_statement [712,730]",
      "dest": "return_statement [712,730]"
    },
    {
      "src": "): ) [700,701]",
      "dest": "): ) [700,701]"
    },
    {
      "src": "bytes: bytes [793,798]",
      "dest": "bytes: bytes [793,798]"
    },
    {
      "src": "(: ( [692,693]",
      "dest": "(: ( [692,693]"
    },
    {
      "src": "function: function [742,750]",
      "dest": "function: function [742,750]"
    },
    {
      "src": "contract: contract [617,625]",
      "dest": "contract: contract [617,625]"
    },
    {
      "src": "abstract: abstract [608,616]",
      "dest": "abstract: abstract [608,616]"
    },
    {
      "src": "contract_declaration [608,843]",
      "dest": "contract_declaration [608,843]"
    },
    {
      "src": "return_type_definition [684,701]",
      "dest": "return_type_definition [684,701]"
    },
    {
      "src": "primitive_type [793,798]",
      "dest": "primitive_type [793,798]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: MIT [0,31]",
      "dest": "comment: // SPDX-License-Identifier: MIT [0,31]"
    },
    {
      "src": "identifier: sender [723,729]",
      "dest": "identifier: sender [723,729]"
    },
    {
      "src": "): ) [760,761]",
      "dest": "): ) [760,761]"
    },
    {
      "src": "identifier: _msgSender [649,659]",
      "dest": "identifier: _msgSender [649,659]"
    },
    {
      "src": "solidity_version: 0.8.0 [103,108]",
      "dest": "solidity_version: 0.8.0 [103,108]"
    },
    {
      "src": "virtual: virtual [676,683]",
      "dest": "virtual: virtual [676,683]"
    },
    {
      "src": "source_file [0,844]",
      "dest": "source_file [0,844]"
    },
    {
      "src": "pragma: pragma [86,92]",
      "dest": "pragma: pragma [86,92]"
    },
    {
      "src": "internal: internal [662,670]",
      "dest": "internal: internal [662,670]"
    },
    {
      "src": ".: . [722,723]",
      "dest": ".: . [722,723]"
    },
    {
      "src": "view: view [771,775]",
      "dest": "view: view [771,775]"
    },
    {
      "src": "state_mutability [771,775]",
      "dest": "state_mutability [771,775]"
    },
    {
      "src": "identifier: msg [826,829]",
      "dest": "identifier: msg [826,829]"
    },
    {
      "src": "member_expression [719,729]",
      "dest": "member_expression [719,729]"
    },
    {
      "src": "state_mutability [671,675]",
      "dest": "state_mutability [671,675]"
    },
    {
      "src": "(: ( [792,793]",
      "dest": "(: ( [792,793]"
    },
    {
      "src": "visibility [762,770]",
      "dest": "visibility [762,770]"
    },
    {
      "src": "primitive_type [693,700]",
      "dest": "primitive_type [693,700]"
    },
    {
      "src": "{: { [809,810]",
      "dest": "{: { [809,810]"
    },
    {
      "src": "return_statement [819,835]",
      "dest": "return_statement [819,835]"
    },
    {
      "src": "internal: internal [762,770]",
      "dest": "internal: internal [762,770]"
    },
    {
      "src": "address: address [693,700]",
      "dest": "address: address [693,700]"
    },
    {
      "src": "returns: returns [784,791]",
      "dest": "returns: returns [784,791]"
    },
    {
      "src": "}: } [735,736]",
      "dest": "}: } [735,736]"
    },
    {
      "src": "member_expression [826,834]",
      "dest": "member_expression [826,834]"
    },
    {
      "src": "parameter [793,807]",
      "dest": "parameter [793,807]"
    },
    {
      "src": "visibility [662,670]",
      "dest": "visibility [662,670]"
    },
    {
      "src": "solidity_version_comparison_operator [101,103]",
      "dest": "solidity_version_comparison_operator [101,103]"
    },
    {
      "src": "view: view [671,675]",
      "dest": "view: view [671,675]"
    },
    {
      "src": "solidity: solidity [93,101]",
      "dest": "solidity: solidity [93,101]"
    },
    {
      "src": "{: { [634,635]",
      "dest": "{: { [634,635]"
    },
    {
      "src": "function_definition [640,736]",
      "dest": "function_definition [640,736]"
    },
    {
      "src": "return: return [712,718]",
      "dest": "return: return [712,718]"
    },
    {
      "src": "function_body [809,841]",
      "dest": "function_body [809,841]"
    },
    {
      "src": "}: } [842,843]",
      "dest": "}: } [842,843]"
    },
    {
      "src": "{: { [702,703]",
      "dest": "{: { [702,703]"
    },
    {
      "src": "return_type_definition [784,808]",
      "dest": "return_type_definition [784,808]"
    },
    {
      "src": "pragma_directive [86,109]",
      "dest": "pragma_directive [86,109]"
    },
    {
      "src": "identifier: msg [719,722]",
      "dest": "identifier: msg [719,722]"
    },
    {
      "src": "}: } [840,841]",
      "dest": "}: } [840,841]"
    },
    {
      "src": "function: function [640,648]",
      "dest": "function: function [640,648]"
    },
    {
      "src": "return: return [819,825]",
      "dest": "return: return [819,825]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts v4.4.1 (utils/Context.sol) [32,84]",
      "dest": "comment: // OpenZeppelin Contracts v4.4.1 (utils/Context.sol) [32,84]"
    },
    {
      "src": "^:  ^ [101,103]",
      "dest": "^:  ^ [101,103]"
    },
    {
      "src": "function_body [702,736]",
      "dest": "function_body [702,736]"
    },
    {
      "src": "function_definition [742,841]",
      "dest": "function_definition [742,841]"
    },
    {
      "src": "virtual: virtual [776,783]",
      "dest": "virtual: virtual [776,783]"
    }
  ],
  "actions": []
}