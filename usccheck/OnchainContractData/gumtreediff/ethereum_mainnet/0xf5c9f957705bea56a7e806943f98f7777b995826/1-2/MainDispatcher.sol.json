{
  "matches": [
    {
      "src": "type_cast_expression [1620,1679]",
      "dest": "type_cast_expression [2735,2794]"
    },
    {
      "src": "identifier: abi [1408,1411]",
      "dest": "identifier: abi [1408,1411]"
    },
    {
      "src": "string: string [1070,1076]",
      "dest": "string: string [1070,1076]"
    },
    {
      "src": "visibility [951,959]",
      "dest": "visibility [951,959]"
    },
    {
      "src": "parameter [1575,1582]",
      "dest": "parameter [3248,3255]"
    },
    {
      "src": ".: . [1242,1243]",
      "dest": ".: . [1242,1243]"
    },
    {
      "src": "): ) [859,860]",
      "dest": "): ) [859,860]"
    },
    {
      "src": ",: , [1429,1430]",
      "dest": ",: , [1429,1430]"
    },
    {
      "src": "primitive_type [1024,1031]",
      "dest": "primitive_type [1024,1031]"
    },
    {
      "src": "}: } [1989,1990]",
      "dest": "}: } [3018,3019]"
    },
    {
      "src": "{: { [790,791]",
      "dest": "{: { [790,791]"
    },
    {
      "src": "function: function [840,848]",
      "dest": "function: function [840,848]"
    },
    {
      "src": "return_type_definition [973,990]",
      "dest": "return_type_definition [973,990]"
    },
    {
      "src": "uint256: uint256 [1594,1601]",
      "dest": "uint256: uint256 [2709,2716]"
    },
    {
      "src": "contract_declaration [722,2147]",
      "dest": "contract_declaration [722,3481]"
    },
    {
      "src": "internal: internal [951,959]",
      "dest": "internal: internal [951,959]"
    },
    {
      "src": "return_type_definition [1061,1087]",
      "dest": "return_type_definition [1061,1087]"
    },
    {
      "src": "(: ( [1574,1575]",
      "dest": "(: ( [3247,3248]"
    },
    {
      "src": "type_name [1575,1582]",
      "dest": "type_name [3248,3255]"
    },
    {
      "src": "=: = [1214,1215]",
      "dest": "=: = [1214,1215]"
    },
    {
      "src": "visibility [861,869]",
      "dest": "visibility [861,869]"
    },
    {
      "src": "type_name [796,803]",
      "dest": "type_name [796,803]"
    },
    {
      "src": "return: return [1948,1954]",
      "dest": "return: return [2955,2961]"
    },
    {
      "src": "identifier: keccak256 [1628,1637]",
      "dest": "identifier: keccak256 [2743,2752]"
    },
    {
      "src": "identifier: index [1032,1037]",
      "dest": "identifier: index [1032,1037]"
    },
    {
      "src": "assignment_expression [2098,2138]",
      "dest": "assignment_expression [3432,3472]"
    },
    {
      "src": "(: ( [1336,1337]",
      "dest": "(: ( [1336,1337]"
    },
    {
      "src": "variable_declaration_statement [1197,1254]",
      "dest": "variable_declaration_statement [1197,1254]"
    },
    {
      "src": "(: ( [891,892]",
      "dest": "(: ( [891,892]"
    },
    {
      "src": "function_body [2088,2145]",
      "dest": "function_body [3422,3479]"
    },
    {
      "src": "visibility [1164,1172]",
      "dest": "visibility [1164,1172]"
    },
    {
      "src": "binary_expression [1907,1920]",
      "dest": "binary_expression [2981,2994]"
    },
    {
      "src": "parameter [1024,1037]",
      "dest": "parameter [1024,1037]"
    },
    {
      "src": "primitive_type [1526,1532]",
      "dest": "primitive_type [2650,2656]"
    },
    {
      "src": "pragma_directive [636,660]",
      "dest": "pragma_directive [636,660]"
    },
    {
      "src": "identifier: magicSalt [1665,1674]",
      "dest": "identifier: magicSalt [2780,2789]"
    },
    {
      "src": "identifier: abi [1302,1305]",
      "dest": "identifier: abi [1302,1305]"
    },
    {
      "src": "bytes4: bytes4 [1526,1532]",
      "dest": "bytes4: bytes4 [2650,2656]"
    },
    {
      "src": "import: import [662,668]",
      "dest": "import: import [662,668]"
    },
    {
      "src": "call_argument [1376,1429]",
      "dest": "call_argument [1376,1429]"
    },
    {
      "src": "returns: returns [973,980]",
      "dest": "returns: returns [973,980]"
    },
    {
      "src": "): ) [1427,1428]",
      "dest": "): ) [1427,1428]"
    },
    {
      "src": "primitive_type [1689,1696]",
      "dest": "primitive_type [2073,2080]"
    },
    {
      "src": ">>: >> [1916,1918]",
      "dest": ">>: >> [2990,2992]"
    },
    {
      "src": "call_expression [1398,1429]",
      "dest": "call_expression [1398,1429]"
    },
    {
      "src": "uint256: uint256 [1128,1135]",
      "dest": "uint256: uint256 [1128,1135]"
    },
    {
      "src": "variable_declaration_statement [1263,1346]",
      "dest": "variable_declaration_statement [1263,1346]"
    },
    {
      "src": "(: ( [1301,1302]",
      "dest": "(: ( [1301,1302]"
    },
    {
      "src": "identifier: abi [1638,1641]",
      "dest": "identifier: abi [2753,2756]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]",
      "dest": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]"
    },
    {
      "src": "variable_declaration [1721,1735]",
      "dest": "variable_declaration [2804,2818]"
    },
    {
      "src": "parameter [892,899]",
      "dest": "parameter [892,899]"
    },
    {
      "src": "visibility [2070,2078]",
      "dest": "visibility [3404,3412]"
    },
    {
      "src": "): ) [1920,1921]",
      "dest": "): ) [2994,2995]"
    },
    {
      "src": ".: . [1641,1642]",
      "dest": ".: . [2756,2757]"
    },
    {
      "src": "internal: internal [861,869]",
      "dest": "internal: internal [861,869]"
    },
    {
      "src": "): ) [1241,1242]",
      "dest": "): ) [1241,1242]"
    },
    {
      "src": "parameter [1143,1162]",
      "dest": "parameter [1143,1162]"
    },
    {
      "src": "identifier: keccak256 [1398,1407]",
      "dest": "identifier: keccak256 [1398,1407]"
    },
    {
      "src": "call_expression [1319,1343]",
      "dest": "call_expression [1319,1343]"
    },
    {
      "src": "comment: /*   Copyright 2019-2021 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]",
      "dest": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]"
    },
    {
      "src": "(: ( [1023,1024]",
      "dest": "(: ( [1023,1024]"
    },
    {
      "src": ">>: >> [1922,1924]",
      "dest": ">>: >> [2996,2998]"
    },
    {
      "src": "internal: internal [1543,1551]",
      "dest": "internal: internal [2667,2675]"
    },
    {
      "src": "inheritance_specifier [758,769]",
      "dest": "inheritance_specifier [758,769]"
    },
    {
      "src": ".: . [1411,1412]",
      "dest": ".: . [1411,1412]"
    },
    {
      "src": ".: . [1305,1306]",
      "dest": ".: . [1305,1306]"
    },
    {
      "src": "primitive_type [892,899]",
      "dest": "primitive_type [892,899]"
    },
    {
      "src": "state_mutability [1552,1556]",
      "dest": "state_mutability [3225,3229]"
    },
    {
      "src": "member_expression [1216,1251]",
      "dest": "member_expression [1216,1251]"
    },
    {
      "src": "identifier: setSubContractAddress [2005,2026]",
      "dest": "identifier: setSubContractAddress [3339,3360]"
    },
    {
      "src": "binary_expression [1613,1679]",
      "dest": "binary_expression [2728,2794]"
    },
    {
      "src": "function: function [997,1005]",
      "dest": "function: function [997,1005]"
    },
    {
      "src": "string [1443,1479]",
      "dest": "string [1443,1479]"
    },
    {
      "src": "internal: internal [1039,1047]",
      "dest": "internal: internal [1039,1047]"
    },
    {
      "src": "function: function [1094,1102]",
      "dest": "function: function [1094,1102]"
    },
    {
      "src": "variable_declaration_statement [1594,1680]",
      "dest": "variable_declaration_statement [2709,2795]"
    },
    {
      "src": "}: } [1495,1496]",
      "dest": "}: } [1962,1963]"
    },
    {
      "src": "(: ( [1654,1655]",
      "dest": "(: ( [2769,2770]"
    },
    {
      "src": "binary_expression [1376,1429]",
      "dest": "binary_expression [1376,1429]"
    },
    {
      "src": "uint256: uint256 [934,941]",
      "dest": "uint256: uint256 [934,941]"
    },
    {
      "src": "(: ( [1525,1526]",
      "dest": "(: ( [2649,2650]"
    },
    {
      "src": "inheritance_specifier [771,789]",
      "dest": "inheritance_specifier [771,789]"
    },
    {
      "src": "primitive_type [1070,1076]",
      "dest": "primitive_type [1070,1076]"
    },
    {
      "src": "returns: returns [1566,1573]",
      "dest": "returns: returns [3239,3246]"
    },
    {
      "src": "pragma: pragma [636,642]",
      "dest": "pragma: pragma [636,642]"
    },
    {
      "src": "uint256: uint256 [796,803]",
      "dest": "uint256: uint256 [796,803]"
    },
    {
      "src": "state_mutability [960,964]",
      "dest": "state_mutability [960,964]"
    },
    {
      "src": "): ) [1541,1542]",
      "dest": "): ) [2665,2666]"
    },
    {
      "src": "primitive_type [2042,2049]",
      "dest": "primitive_type [3376,3383]"
    },
    {
      "src": "override: override [1178,1186]",
      "dest": "override: override [1178,1186]"
    },
    {
      "src": "solidity_pragma_token [643,659]",
      "dest": "solidity_pragma_token [643,659]"
    },
    {
      "src": "type_name [1526,1532]",
      "dest": "type_name [2650,2656]"
    },
    {
      "src": "(: ( [1407,1408]",
      "dest": "(: ( [1407,1408]"
    },
    {
      "src": "memory: memory [1204,1210]",
      "dest": "memory: memory [1204,1210]"
    },
    {
      "src": "pure: pure [1173,1177]",
      "dest": "pure: pure [1173,1177]"
    },
    {
      "src": "identifier: hashed_expected_id [1271,1289]",
      "dest": "identifier: hashed_expected_id [1271,1289]"
    },
    {
      "src": "[: [ [2110,2111]",
      "dest": "[: [ [3444,3445]"
    },
    {
      "src": "): ) [1342,1343]",
      "dest": "): ) [1342,1343]"
    },
    {
      "src": "identifier: offset [1925,1931]",
      "dest": "identifier: offset [2999,3005]"
    },
    {
      "src": "import: import [688,694]",
      "dest": "import: import [688,694]"
    },
    {
      "src": "visibility [1543,1551]",
      "dest": "visibility [2667,2675]"
    },
    {
      "src": "function_body [1584,1990]",
      "dest": "function_body [2699,3019]"
    },
    {
      "src": "=: = [1736,1737]",
      "dest": "=: = [2819,2820]"
    },
    {
      "src": "override_specifier [1178,1186]",
      "dest": "override_specifier [1178,1186]"
    },
    {
      "src": "}: } [2144,2145]",
      "dest": "}: } [3478,3479]"
    },
    {
      "src": "identifier: selector [1655,1663]",
      "dest": "identifier: selector [2770,2778]"
    },
    {
      "src": "(: ( [1229,1230]",
      "dest": "(: ( [1229,1230]"
    },
    {
      "src": "type_name [2042,2049]",
      "dest": "type_name [3376,3383]"
    },
    {
      "src": "identifier: index [1136,1141]",
      "dest": "identifier: index [1136,1141]"
    },
    {
      "src": "): ) [899,900]",
      "dest": "): ) [899,900]"
    },
    {
      "src": "identifier: subContract [1151,1162]",
      "dest": "identifier: subContract [1151,1162]"
    },
    {
      "src": "identifier: index [2035,2040]",
      "dest": "identifier: index [3369,3374]"
    },
    {
      "src": "identifier: encodePacked [1306,1318]",
      "dest": "identifier: encodePacked [1306,1318]"
    },
    {
      "src": "(: ( [1888,1889]",
      "dest": "(: ( [2962,2963]"
    },
    {
      "src": "(: ( [1127,1128]",
      "dest": "(: ( [1127,1128]"
    },
    {
      "src": "type_name [1197,1203]",
      "dest": "type_name [1197,1203]"
    },
    {
      "src": "array_access [2098,2117]",
      "dest": "array_access [3432,3451]"
    },
    {
      "src": "call_expression [1628,1678]",
      "dest": "call_expression [2743,2793]"
    },
    {
      "src": "identifier: expectedIdByIndex [1319,1336]",
      "dest": "identifier: expectedIdByIndex [1319,1336]"
    },
    {
      "src": "call_argument [1907,1920]",
      "dest": "call_argument [2981,2994]"
    },
    {
      "src": "uint256: uint256 [1620,1627]",
      "dest": "uint256: uint256 [2735,2742]"
    },
    {
      "src": "return_statement [1948,1984]",
      "dest": "return_statement [2955,3013]"
    },
    {
      "src": "internal: internal [1164,1172]",
      "dest": "internal: internal [1164,1172]"
    },
    {
      "src": "): ) [1766,1767]",
      "dest": "): ) [2849,2850]"
    },
    {
      "src": "): ) [1344,1345]",
      "dest": "): ) [1344,1345]"
    },
    {
      "src": "call_argument [1665,1676]",
      "dest": "call_argument [2780,2791]"
    },
    {
      "src": "parenthesized_expression [1888,1932]",
      "dest": "parenthesized_expression [2962,3006]"
    },
    {
      "src": "(: ( [1627,1628]",
      "dest": "(: ( [2742,2743]"
    },
    {
      "src": "string [695,719]",
      "dest": "string [695,719]"
    },
    {
      "src": "&: & [1933,1934]",
      "dest": "&: & [3007,3008]"
    },
    {
      "src": "virtual: virtual [875,882]",
      "dest": "virtual: virtual [875,882]"
    },
    {
      "src": "type_name [1143,1150]",
      "dest": "type_name [1143,1150]"
    },
    {
      "src": "identifier: MainDispatcherBase [771,789]",
      "dest": "identifier: MainDispatcherBase [771,789]"
    },
    {
      "src": "identifier: encodePacked [1412,1424]",
      "dest": "identifier: encodePacked [1412,1424]"
    },
    {
      "src": "identifier: id [1084,1086]",
      "dest": "identifier: id [1084,1086]"
    },
    {
      "src": "identifier: subContracts [2098,2110]",
      "dest": "identifier: subContracts [3432,3444]"
    },
    {
      "src": "identifier: location [1758,1766]",
      "dest": "identifier: location [2841,2849]"
    },
    {
      "src": "user_defined_type [758,769]",
      "dest": "user_defined_type [758,769]"
    },
    {
      "src": "address: address [1143,1150]",
      "dest": "address: address [1143,1150]"
    },
    {
      "src": "function: function [907,915]",
      "dest": "function: function [907,915]"
    },
    {
      "src": "parameter [982,989]",
      "dest": "parameter [982,989]"
    },
    {
      "src": "==: == [1395,1397]",
      "dest": "==: == [1395,1397]"
    },
    {
      "src": "): ) [1488,1489]",
      "dest": "): ) [1488,1489]"
    },
    {
      "src": "(: ( [933,934]",
      "dest": "(: ( [933,934]"
    },
    {
      "src": "identifier: id [1425,1427]",
      "dest": "identifier: id [1425,1427]"
    },
    {
      "src": "type_name [1263,1270]",
      "dest": "type_name [1263,1270]"
    },
    {
      "src": "uint256: uint256 [1721,1728]",
      "dest": "uint256: uint256 [2804,2811]"
    },
    {
      "src": "parameter [2042,2068]",
      "dest": "parameter [3376,3402]"
    },
    {
      "src": "identifier: offset [1729,1735]",
      "dest": "identifier: offset [2812,2818]"
    },
    {
      "src": "user_defined_type [771,789]",
      "dest": "user_defined_type [771,789]"
    },
    {
      "src": ",: , [769,770]",
      "dest": ",: , [769,770]"
    },
    {
      "src": "call_argument [1628,1678]",
      "dest": "call_argument [2743,2793]"
    },
    {
      "src": "identifier: index [1337,1342]",
      "dest": "identifier: index [1337,1342]"
    },
    {
      "src": "string_literal [1443,1479]",
      "dest": "string_literal [1443,1479]"
    },
    {
      "src": "call_argument [1655,1663]",
      "dest": "call_argument [2770,2778]"
    },
    {
      "src": "identifier: hashed_expected_id [1376,1394]",
      "dest": "identifier: hashed_expected_id [1376,1394]"
    },
    {
      "src": "primitive_type [2027,2034]",
      "dest": "primitive_type [3361,3368]"
    },
    {
      "src": "return_type_definition [1566,1583]",
      "dest": "return_type_definition [3239,3256]"
    },
    {
      "src": "): ) [989,990]",
      "dest": "): ) [989,990]"
    },
    {
      "src": "state_variable_declaration [796,834]",
      "dest": "state_variable_declaration [796,834]"
    },
    {
      "src": "call_argument [1443,1479]",
      "dest": "call_argument [1443,1479]"
    },
    {
      "src": "(: ( [858,859]",
      "dest": "(: ( [858,859]"
    },
    {
      "src": "override_specifier [2079,2087]",
      "dest": "override_specifier [3413,3421]"
    },
    {
      "src": "*: * [1756,1757]",
      "dest": "*: * [2839,2840]"
    },
    {
      "src": "identifier: location [1907,1915]",
      "dest": "identifier: location [2981,2989]"
    },
    {
      "src": "parameter [2027,2040]",
      "dest": "parameter [3361,3374]"
    },
    {
      "src": "identifier: subContractIdx [1697,1711]",
      "dest": "identifier: index [2081,2086]"
    },
    {
      "src": "call_argument [1425,1427]",
      "dest": "call_argument [1425,1427]"
    },
    {
      "src": "call_argument [1337,1342]",
      "dest": "call_argument [1337,1342]"
    },
    {
      "src": "): ) [1582,1583]",
      "dest": "): ) [3255,3256]"
    },
    {
      "src": "): ) [1676,1677]",
      "dest": "): ) [2791,2792]"
    },
    {
      "src": "contract: contract [731,739]",
      "dest": "contract: contract [731,739]"
    },
    {
      "src": "\": \" [695,696]",
      "dest": "\": \" [695,696]"
    },
    {
      "src": "{: { [1187,1188]",
      "dest": "{: { [1187,1188]"
    },
    {
      "src": "return_type_definition [883,900]",
      "dest": "return_type_definition [883,900]"
    },
    {
      "src": "function: function [1996,2004]",
      "dest": "function: function [3330,3338]"
    },
    {
      "src": "\": \" [685,686]",
      "dest": "\": \" [685,686]"
    },
    {
      "src": "virtual: virtual [965,972]",
      "dest": "virtual: virtual [965,972]"
    },
    {
      "src": "identifier: validateSubContractIndex [1103,1127]",
      "dest": "identifier: validateSubContractIndex [1103,1127]"
    },
    {
      "src": "solidity: solidity [643,651]",
      "dest": "solidity: solidity [643,651]"
    },
    {
      "src": "binary_expression [1739,1766]",
      "dest": "binary_expression [2822,2849]"
    },
    {
      "src": "member_expression [1638,1654]",
      "dest": "member_expression [2753,2769]"
    },
    {
      "src": "uint256: uint256 [1024,1031]",
      "dest": "uint256: uint256 [1024,1031]"
    },
    {
      "src": "view: view [1552,1556]",
      "dest": "view: view [3225,3229]"
    },
    {
      "src": "call_expression [1638,1677]",
      "dest": "call_expression [2753,2792]"
    },
    {
      "src": "): ) [1428,1429]",
      "dest": "): ) [1428,1429]"
    },
    {
      "src": "identifier: selector [1533,1541]",
      "dest": "identifier: selector [2657,2665]"
    },
    {
      "src": "primitive_type [1128,1135]",
      "dest": "primitive_type [1128,1135]"
    },
    {
      "src": "(: ( [1637,1638]",
      "dest": "(: ( [2752,2753]"
    },
    {
      "src": "(: ( [1069,1070]",
      "dest": "(: ( [1069,1070]"
    },
    {
      "src": "member_expression [1408,1424]",
      "dest": "member_expression [1408,1424]"
    },
    {
      "src": "primitive_type [1594,1601]",
      "dest": "primitive_type [2709,2716]"
    },
    {
      "src": "returns: returns [883,890]",
      "dest": "returns: returns [883,890]"
    },
    {
      "src": "function: function [1502,1510]",
      "dest": "function: function [2621,2629]"
    },
    {
      "src": "state_mutability [1048,1052]",
      "dest": "state_mutability [1048,1052]"
    },
    {
      "src": "identifier: id [1211,1213]",
      "dest": "identifier: id [1211,1213]"
    },
    {
      "src": "call_expression [1216,1253]",
      "dest": "call_expression [1216,1253]"
    },
    {
      "src": "): ) [1677,1678]",
      "dest": "): ) [2792,2793]"
    },
    {
      "src": "type_name [1594,1601]",
      "dest": "type_name [2709,2716]"
    },
    {
      "src": "variable_declaration [1594,1610]",
      "dest": "variable_declaration [2709,2725]"
    },
    {
      "src": "call_argument [1408,1428]",
      "dest": "call_argument [1408,1428]"
    },
    {
      "src": "returns: returns [1061,1068]",
      "dest": "returns: returns [1061,1068]"
    },
    {
      "src": "uint256: uint256 [2027,2034]",
      "dest": "uint256: uint256 [3361,3368]"
    },
    {
      "src": "number_literal: 0xFF [1613,1617]",
      "dest": "number_literal: 0xFF [2728,2732]"
    },
    {
      "src": "primitive_type [1575,1582]",
      "dest": "primitive_type [3248,3255]"
    },
    {
      "src": "=: = [830,831]",
      "dest": "=: = [830,831]"
    },
    {
      "src": "expression_statement [1355,1490]",
      "dest": "expression_statement [1355,1490]"
    },
    {
      "src": "type_name [934,941]",
      "dest": "type_name [934,941]"
    },
    {
      "src": "(: ( [1318,1319]",
      "dest": "(: ( [1318,1319]"
    },
    {
      "src": "number_literal: 4 [832,833]",
      "dest": "number_literal: 4 [832,833]"
    },
    {
      "src": "constant: constant [804,812]",
      "dest": "constant: constant [804,812]"
    },
    {
      "src": "bytes32: bytes32 [1263,1270]",
      "dest": "bytes32: bytes32 [1263,1270]"
    },
    {
      "src": "number_literal: 6 [1919,1920]",
      "dest": "number_literal: 6 [2993,2994]"
    },
    {
      "src": "state_mutability [1173,1177]",
      "dest": "state_mutability [1173,1177]"
    },
    {
      "src": "variable_declaration [1197,1213]",
      "dest": "variable_declaration [1197,1213]"
    },
    {
      "src": "(: ( [1738,1739]",
      "dest": "(: ( [2821,2822]"
    },
    {
      "src": "call_expression [1292,1345]",
      "dest": "call_expression [1292,1345]"
    },
    {
      "src": "\": \" [669,670]",
      "dest": "\": \" [669,670]"
    },
    {
      "src": "call_expression [1355,1489]",
      "dest": "call_expression [1355,1489]"
    },
    {
      "src": "member_expression [1302,1318]",
      "dest": "member_expression [1302,1318]"
    },
    {
      "src": "(: ( [1424,1425]",
      "dest": "(: ( [1424,1425]"
    },
    {
      "src": "state_mutability [870,874]",
      "dest": "state_mutability [870,874]"
    },
    {
      "src": "function_definition [1502,1990]",
      "dest": "function_definition [2621,3019]"
    },
    {
      "src": "function_definition [1996,2145]",
      "dest": "function_definition [3330,3479]"
    },
    {
      "src": "primitive_type [796,803]",
      "dest": "primitive_type [796,803]"
    },
    {
      "src": "^:  ^ [651,653]",
      "dest": "^:  ^ [651,653]"
    },
    {
      "src": "call_expression [1216,1242]",
      "dest": "call_expression [1216,1242]"
    },
    {
      "src": "{: { [2088,2089]",
      "dest": "{: { [3422,3423]"
    },
    {
      "src": "virtual: virtual [1053,1060]",
      "dest": "virtual: virtual [1053,1060]"
    },
    {
      "src": "identifier: handlerMapSection [1889,1906]",
      "dest": "identifier: handlerMapSection [2963,2980]"
    },
    {
      "src": "identifier: section [942,949]",
      "dest": "identifier: section [942,949]"
    },
    {
      "src": "import_directive [662,687]",
      "dest": "import_directive [662,687]"
    },
    {
      "src": "function_definition [840,901]",
      "dest": "function_definition [840,901]"
    },
    {
      "src": "): ) [1037,1038]",
      "dest": "): ) [1037,1038]"
    },
    {
      "src": "primitive_type [982,989]",
      "dest": "primitive_type [982,989]"
    },
    {
      "src": "binary_expression [1889,1931]",
      "dest": "binary_expression [2963,3005]"
    },
    {
      "src": "type_name [1128,1135]",
      "dest": "type_name [1128,1135]"
    },
    {
      "src": "\": \" [1443,1444]",
      "dest": "\": \" [1443,1444]"
    },
    {
      "src": "=: = [1611,1612]",
      "dest": "=: = [2726,2727]"
    },
    {
      "src": "solidity_version_comparison_operator [651,653]",
      "dest": "solidity_version_comparison_operator [651,653]"
    },
    {
      "src": ",: , [1663,1664]",
      "dest": ",: , [2778,2779]"
    },
    {
      "src": "binary_expression [1738,1773]",
      "dest": "binary_expression [2821,2856]"
    },
    {
      "src": "\": \" [1478,1479]",
      "dest": "\": \" [1478,1479]"
    },
    {
      "src": "}: } [2146,2147]",
      "dest": "}: } [3480,3481]"
    },
    {
      "src": "type_name [1024,1031]",
      "dest": "type_name [1024,1031]"
    },
    {
      "src": "function_definition [997,1088]",
      "dest": "function_definition [997,1088]"
    },
    {
      "src": "parameter [934,949]",
      "dest": "parameter [934,949]"
    },
    {
      "src": "call_expression [1665,1676]",
      "dest": "call_expression [2780,2791]"
    },
    {
      "src": "type_name [2027,2034]",
      "dest": "type_name [3361,3368]"
    },
    {
      "src": "parameter [1070,1086]",
      "dest": "parameter [1070,1086]"
    },
    {
      "src": "primitive_type [934,941]",
      "dest": "primitive_type [934,941]"
    },
    {
      "src": "type_name [1070,1076]",
      "dest": "type_name [1070,1076]"
    },
    {
      "src": "]: ] [2116,2117]",
      "dest": "]: ] [3450,3451]"
    },
    {
      "src": "primitive_type [1721,1728]",
      "dest": "primitive_type [2804,2811]"
    },
    {
      "src": "identifier: MainDispatcher [740,754]",
      "dest": "identifier: MainDispatcher [740,754]"
    },
    {
      "src": "comment: // We have 64 locations in each register, hence the >>6 (i.e. location // 64). [1784,1862]",
      "dest": "comment: // We have 64 locations in each register, hence the >> 6 (i.e. location // 64). [2867,2946]"
    },
    {
      "src": "call_argument [1302,1344]",
      "dest": "call_argument [1302,1344]"
    },
    {
      "src": "visibility [1039,1047]",
      "dest": "visibility [1039,1047]"
    },
    {
      "src": "identifier: handlerMapSection [916,933]",
      "dest": "identifier: handlerMapSection [916,933]"
    },
    {
      "src": "override: override [1557,1565]",
      "dest": "override: override [3230,3238]"
    },
    {
      "src": "type_name [982,989]",
      "dest": "type_name [982,989]"
    },
    {
      "src": "call_expression [1889,1921]",
      "dest": "call_expression [2963,2995]"
    },
    {
      "src": ",: , [1141,1142]",
      "dest": ",: , [1141,1142]"
    },
    {
      "src": "uint256: uint256 [982,989]",
      "dest": "uint256: uint256 [982,989]"
    },
    {
      "src": "string [669,686]",
      "dest": "string [669,686]"
    },
    {
      "src": "identifier: SUBCONTRACT_BITS [1739,1755]",
      "dest": "identifier: SUBCONTRACT_BITS [2822,2838]"
    },
    {
      "src": "): ) [1086,1087]",
      "dest": "): ) [1086,1087]"
    },
    {
      "src": "): ) [949,950]",
      "dest": "): ) [949,950]"
    },
    {
      "src": "\": \" [718,719]",
      "dest": "\": \" [718,719]"
    },
    {
      "src": "function_body [1187,1496]",
      "dest": "function_body [1187,1963]"
    },
    {
      "src": "call_argument [1230,1241]",
      "dest": "call_argument [1230,1241]"
    },
    {
      "src": "pure: pure [1048,1052]",
      "dest": "pure: pure [1048,1052]"
    },
    {
      "src": "contract_body [790,2147]",
      "dest": "contract_body [790,3481]"
    },
    {
      "src": "): ) [1678,1679]",
      "dest": "): ) [2793,2794]"
    },
    {
      "src": "type_name [892,899]",
      "dest": "type_name [892,899]"
    },
    {
      "src": "number_literal: 256 [1770,1773]",
      "dest": "number_literal: 256 [2853,2856]"
    },
    {
      "src": "abstract: abstract [722,730]",
      "dest": "abstract: abstract [722,730]"
    },
    {
      "src": "pure: pure [870,874]",
      "dest": "pure: pure [870,874]"
    },
    {
      "src": "%: % [1768,1769]",
      "dest": "%: % [2851,2852]"
    },
    {
      "src": "(: ( [1906,1907]",
      "dest": "(: ( [2980,2981]"
    },
    {
      "src": "&: & [1618,1619]",
      "dest": "&: & [2733,2734]"
    },
    {
      "src": "internal: internal [2070,2078]",
      "dest": "internal: internal [3404,3412]"
    },
    {
      "src": "memory: memory [1077,1083]",
      "dest": "memory: memory [1077,1083]"
    },
    {
      "src": "string: string [1197,1203]",
      "dest": "string: string [1197,1203]"
    },
    {
      "src": "identifier: encodePacked [1642,1654]",
      "dest": "identifier: encodePacked [2757,2769]"
    },
    {
      "src": "call_expression [1408,1428]",
      "dest": "call_expression [1408,1428]"
    },
    {
      "src": "call_argument [1638,1677]",
      "dest": "call_argument [2753,2792]"
    },
    {
      "src": "binary_expression [1888,1938]",
      "dest": "binary_expression [2962,3012]"
    },
    {
      "src": "import_directive [688,720]",
      "dest": "import_directive [688,720]"
    },
    {
      "src": "identifier: keccak256 [1292,1301]",
      "dest": "identifier: keccak256 [1292,1301]"
    },
    {
      "src": "identifier: expectedIdByIndex [1006,1023]",
      "dest": "identifier: expectedIdByIndex [1006,1023]"
    },
    {
      "src": "variable_declaration_statement [1721,1774]",
      "dest": "variable_declaration_statement [2804,2857]"
    },
    {
      "src": "type_name [1689,1696]",
      "dest": "type_name [2073,2080]"
    },
    {
      "src": "(: ( [1674,1675]",
      "dest": "(: ( [2789,2790]"
    },
    {
      "src": "identifier: subContract [1230,1241]",
      "dest": "identifier: subContract [1230,1241]"
    },
    {
      "src": "address: address [2042,2049]",
      "dest": "address: address [3376,3383]"
    },
    {
      "src": "override_specifier [1557,1565]",
      "dest": "override_specifier [3230,3238]"
    },
    {
      "src": "): ) [1162,1163]",
      "dest": "): ) [1162,1163]"
    },
    {
      "src": "=: = [1290,1291]",
      "dest": "=: = [1290,1291]"
    },
    {
      "src": "): ) [1931,1932]",
      "dest": "): ) [3005,3006]"
    },
    {
      "src": "uint256: uint256 [1689,1696]",
      "dest": "uint256: uint256 [2073,2080]"
    },
    {
      "src": "source_file [0,2148]",
      "dest": "source_file [0,3482]"
    },
    {
      "src": "call_argument [1319,1343]",
      "dest": "call_argument [1319,1343]"
    },
    {
      "src": "variable_declaration_statement [1689,1712]",
      "dest": "variable_declaration_statement [2073,2119]"
    },
    {
      "src": "(: ( [1362,1363]",
      "dest": "(: ( [1362,1363]"
    },
    {
      "src": "=: = [2118,2119]",
      "dest": "=: = [3452,3453]"
    },
    {
      "src": "primitive_type [1197,1203]",
      "dest": "primitive_type [1197,1203]"
    },
    {
      "src": "identifier: SUBCONTRACT_BITS [813,829]",
      "dest": "identifier: SUBCONTRACT_BITS [813,829]"
    },
    {
      "src": "parenthesized_expression [1738,1767]",
      "dest": "parenthesized_expression [2821,2850]"
    },
    {
      "src": "override: override [2079,2087]",
      "dest": "override: override [3413,3421]"
    },
    {
      "src": "solidity_version: 0.6.11 [653,659]",
      "dest": "solidity_version: 0.6.12 [653,659]"
    },
    {
      "src": "parameter [1526,1541]",
      "dest": "parameter [2650,2665]"
    },
    {
      "src": "identifier: require [1355,1362]",
      "dest": "identifier: require [1355,1362]"
    },
    {
      "src": ",: , [2040,2041]",
      "dest": ",: , [3374,3375]"
    },
    {
      "src": "(: ( [981,982]",
      "dest": "(: ( [981,982]"
    },
    {
      "src": "identifier: magicSalt [849,858]",
      "dest": "identifier: magicSalt [849,858]"
    },
    {
      "src": "identifier: subContractAddress [2050,2068]",
      "dest": "identifier: subContractAddress [3384,3402]"
    },
    {
      "src": "): ) [1675,1676]",
      "dest": "): ) [2790,2791]"
    },
    {
      "src": "{: { [1584,1585]",
      "dest": "{: { [2699,2700]"
    },
    {
      "src": "(: ( [1251,1252]",
      "dest": "(: ( [1251,1252]"
    },
    {
      "src": "): ) [1343,1344]",
      "dest": "): ) [1343,1344]"
    },
    {
      "src": "number_literal: 0xF [1935,1938]",
      "dest": "number_literal: 0xF [3009,3012]"
    },
    {
      "src": "function_definition [907,991]",
      "dest": "function_definition [907,991]"
    },
    {
      "src": "primitive_type [1620,1627]",
      "dest": "primitive_type [2735,2742]"
    },
    {
      "src": "(: ( [2026,2027]",
      "dest": "(: ( [3360,3361]"
    },
    {
      "src": "type_name [1721,1728]",
      "dest": "type_name [2804,2811]"
    },
    {
      "src": "identifier: location [1602,1610]",
      "dest": "identifier: location [2717,2725]"
    },
    {
      "src": "identifier: index [2111,2116]",
      "dest": "identifier: index [3445,3450]"
    },
    {
      "src": "uint256: uint256 [892,899]",
      "dest": "uint256: uint256 [892,899]"
    },
    {
      "src": "call_expression [1302,1344]",
      "dest": "call_expression [1302,1344]"
    },
    {
      "src": "identifier: identify [1243,1251]",
      "dest": "identifier: identify [1243,1251]"
    },
    {
      "src": "parameter [1128,1141]",
      "dest": "parameter [1128,1141]"
    },
    {
      "src": "address: address [1575,1582]",
      "dest": "address: address [3248,3255]"
    },
    {
      "src": "identifier: MainStorage [758,769]",
      "dest": "identifier: MainStorage [758,769]"
    },
    {
      "src": "identifier: getSubContract [1511,1525]",
      "dest": "identifier: getSubContractIndex [2630,2649]"
    },
    {
      "src": "variable_declaration [1263,1289]",
      "dest": "variable_declaration [1263,1289]"
    },
    {
      "src": "): ) [1252,1253]",
      "dest": "): ) [1252,1253]"
    },
    {
      "src": "primitive_type [1263,1270]",
      "dest": "primitive_type [1263,1270]"
    },
    {
      "src": "variable_declaration [1689,1711]",
      "dest": "variable_declaration [2073,2086]"
    },
    {
      "src": "function_definition [1094,1496]",
      "dest": "function_definition [1094,1963]"
    },
    {
      "src": "): ) [2068,2069]",
      "dest": "): ) [3402,3403]"
    },
    {
      "src": "expression_statement [2098,2139]",
      "dest": "expression_statement [3432,3473]"
    },
    {
      "src": "primitive_type [1143,1150]",
      "dest": "primitive_type [1143,1150]"
    },
    {
      "src": "identifier: SubContractor [1216,1229]",
      "dest": "identifier: SubContractor [1216,1229]"
    },
    {
      "src": "identifier: subContractAddress [2120,2138]",
      "dest": "identifier: subContractAddress [3454,3472]"
    },
    {
      "src": "is: is [755,757]",
      "dest": "is: is [755,757]"
    }
  ],
  "actions": [
    {
      "action": "update-node",
      "tree": "comment: /*   Copyright 2019-2021 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]",
      "label": "/*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */"
    },
    {
      "action": "update-node",
      "tree": "solidity_version: 0.6.11 [653,659]",
      "label": "0.6.12"
    },
    {
      "action": "insert-node",
      "tree": "function_definition [1969,2166]",
      "parent": "contract_body [790,3481]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "comment: /*       Returns the index in subContracts where the address of the sub-contract implementing       the function with the queried selector is held.        Note: The nature of the sub-contracts handler map is such that all the required selectors       are mapped. However, other selectors, such that are not implemented in any subcontract,       may also return a sub-contract address.       This behavior is by-design, and not a problem.     */ [2172,2616]",
      "parent": "contract_body [790,3481]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "comment: /*       Returns the address of the sub-contract that would be delegated to handle a call       with the queried selector. (see note above).     */ [3025,3172]",
      "parent": "contract_body [790,3481]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "function_definition [3177,3324]",
      "parent": "contract_body [790,3481]",
      "at": 10
    },
    {
      "action": "insert-node",
      "tree": "function: function [1969,1977]",
      "parent": "function_definition [1969,2166]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: handlingContractId [1978,1996]",
      "parent": "function_definition [1969,2166]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [1996,1997]",
      "parent": "function_definition [1969,2166]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [1997,2012]",
      "parent": "function_definition [1969,2166]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "): ) [2012,2013]",
      "parent": "function_definition [1969,2166]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "visibility [2014,2022]",
      "parent": "function_definition [1969,2166]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [2023,2027]",
      "parent": "function_definition [1969,2166]",
      "at": 6
    },
    {
      "action": "insert-node",
      "tree": "virtual: virtual [2028,2035]",
      "parent": "function_definition [1969,2166]",
      "at": 7
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [2036,2062]",
      "parent": "function_definition [1969,2166]",
      "at": 8
    },
    {
      "action": "insert-node",
      "tree": "function_body [2063,2166]",
      "parent": "function_definition [1969,2166]",
      "at": 9
    },
    {
      "action": "update-node",
      "tree": "identifier: getSubContract [1511,1525]",
      "label": "getSubContractIndex"
    },
    {
      "action": "insert-tree",
      "tree": "state_mutability [2676,2680]",
      "parent": "function_definition [2621,3019]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "return_type_definition [2681,2698]",
      "parent": "function_definition [2621,3019]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "function: function [3177,3185]",
      "parent": "function_definition [3177,3324]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "identifier: getSubContract [3186,3200]",
      "parent": "function_definition [3177,3324]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "(: ( [3200,3201]",
      "parent": "function_definition [3177,3324]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "parameter [3201,3216]",
      "parent": "function_definition [3177,3324]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "): ) [3216,3217]",
      "parent": "function_definition [3177,3324]",
      "at": 4
    },
    {
      "action": "insert-tree",
      "tree": "visibility [3218,3224]",
      "parent": "function_definition [3177,3324]",
      "at": 5
    },
    {
      "action": "move-tree",
      "tree": "state_mutability [1552,1556]",
      "parent": "function_definition [3177,3324]",
      "at": 6
    },
    {
      "action": "move-tree",
      "tree": "override_specifier [1557,1565]",
      "parent": "function_definition [3177,3324]",
      "at": 7
    },
    {
      "action": "move-tree",
      "tree": "return_type_definition [1566,1583]",
      "parent": "function_definition [3177,3324]",
      "at": 8
    },
    {
      "action": "insert-tree",
      "tree": "function_body [3257,3324]",
      "parent": "function_definition [3177,3324]",
      "at": 9
    },
    {
      "action": "insert-node",
      "tree": "pure: pure [960,964]",
      "parent": "state_mutability [960,964]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "comment: // Gets the list of critical selectors from the sub-contract and checks that the selector [1500,1589]",
      "parent": "function_body [1187,1963]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "comment: // is mapped to that sub-contract. [1598,1632]",
      "parent": "function_body [1187,1963]",
      "at": 5
    },
    {
      "action": "insert-tree",
      "tree": "variable_declaration_statement [1641,1727]",
      "parent": "function_body [1187,1963]",
      "at": 6
    },
    {
      "action": "insert-tree",
      "tree": "for_statement [1737,1957]",
      "parent": "function_body [1187,1963]",
      "at": 7
    },
    {
      "action": "insert-node",
      "tree": "{: { [2063,2064]",
      "parent": "function_body [2063,2166]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "variable_declaration_statement [1689,1712]",
      "parent": "function_body [2063,2166]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "return_statement [2128,2160]",
      "parent": "function_body [2063,2166]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [2165,2166]",
      "parent": "function_body [2063,2166]",
      "at": 3
    },
    {
      "action": "update-node",
      "tree": "comment: // We have 64 locations in each register, hence the >>6 (i.e. location // 64). [1784,1862]",
      "label": "// We have 64 locations in each register, hence the >> 6 (i.e. location // 64)."
    },
    {
      "action": "insert-node",
      "tree": "=: = [2087,2088]",
      "parent": "variable_declaration_statement [2073,2119]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "call_expression [2089,2118]",
      "parent": "variable_declaration_statement [2073,2119]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "binary_expression [1888,1938]",
      "parent": "return_statement [2955,3013]",
      "at": 1
    },
    {
      "action": "update-node",
      "tree": "identifier: subContractIdx [1697,1711]",
      "label": "index"
    },
    {
      "action": "delete-node",
      "tree": "view: view [960,964]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: subContractIdx [1871,1885]"
    },
    {
      "action": "delete-node",
      "tree": "=: = [1886,1887]"
    },
    {
      "action": "delete-node",
      "tree": "assignment_expression [1871,1938]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [1871,1939]"
    },
    {
      "action": "delete-tree",
      "tree": "array_access [1955,1983]"
    }
  ]
}