{
  "matches": [
    {
      "src": "): ) [1180,1181]",
      "dest": "): ) [1177,1178]"
    },
    {
      "src": "contract: contract [944,952]",
      "dest": "contract: contract [943,951]"
    },
    {
      "src": "primitive_type [1047,1054]",
      "dest": "primitive_type [1044,1051]"
    },
    {
      "src": "address: address [1047,1054]",
      "dest": "address: address [1044,1051]"
    },
    {
      "src": "uint256: uint256 [1262,1269]",
      "dest": "uint256: uint256 [1259,1266]"
    },
    {
      "src": "parameter [1093,1106]",
      "dest": "parameter [1090,1103]"
    },
    {
      "src": "type_name [1108,1115]",
      "dest": "type_name [1105,1112]"
    },
    {
      "src": "virtual: virtual [1312,1319]",
      "dest": "virtual: virtual [1309,1316]"
    },
    {
      "src": "solidity_pragma_token [643,659]",
      "dest": "solidity_pragma_token [643,659]"
    },
    {
      "src": "primitive_type [1277,1284]",
      "dest": "primitive_type [1274,1281]"
    },
    {
      "src": "uint256: uint256 [1093,1100]",
      "dest": "uint256: uint256 [1090,1097]"
    },
    {
      "src": "contract_declaration [935,1458]",
      "dest": "contract_declaration [934,1455]"
    },
    {
      "src": "identifier: selector [1006,1014]",
      "dest": "identifier: selector [1005,1013]"
    },
    {
      "src": "internal: internal [1298,1306]",
      "dest": "internal: internal [1295,1303]"
    },
    {
      "src": "parameter [1213,1220]",
      "dest": "parameter [1210,1217]"
    },
    {
      "src": "identifier: validateSubContractIndex [1237,1261]",
      "dest": "identifier: validateSubContractIndex [1234,1258]"
    },
    {
      "src": "type_name [1213,1220]",
      "dest": "type_name [1210,1217]"
    },
    {
      "src": "identifier: subContract [1285,1296]",
      "dest": "identifier: subContract [1282,1293]"
    },
    {
      "src": "return_type_definition [1204,1221]",
      "dest": "return_type_definition [1201,1218]"
    },
    {
      "src": "address: address [1108,1115]",
      "dest": "address: address [1105,1112]"
    },
    {
      "src": "): ) [1127,1128]",
      "dest": "): ) [1124,1125]"
    },
    {
      "src": "visibility [1129,1137]",
      "dest": "visibility [1126,1134]"
    },
    {
      "src": "solidity_version_comparison_operator [651,653]",
      "dest": "solidity_version_comparison_operator [651,653]"
    },
    {
      "src": "view: view [1025,1029]",
      "dest": "view: view [1022,1026]"
    },
    {
      "src": "identifier: initializationSentinel [1409,1431]",
      "dest": "identifier: initializationSentinel [1406,1428]"
    },
    {
      "src": "state_mutability [1191,1195]",
      "dest": "state_mutability [1188,1192]"
    },
    {
      "src": "visibility [1182,1190]",
      "dest": "visibility [1179,1187]"
    },
    {
      "src": "parameter [1108,1127]",
      "dest": "parameter [1105,1124]"
    },
    {
      "src": "visibility [1434,1442]",
      "dest": "visibility [1431,1439]"
    },
    {
      "src": "visibility [1016,1024]",
      "dest": "visibility [1015,1021]"
    },
    {
      "src": "state_mutability [1443,1447]",
      "dest": "state_mutability [1440,1444]"
    },
    {
      "src": "returns: returns [1204,1211]",
      "dest": "returns: returns [1201,1208]"
    },
    {
      "src": "function_definition [975,1056]",
      "dest": "function_definition [974,1053]"
    },
    {
      "src": "primitive_type [1108,1115]",
      "dest": "primitive_type [1105,1112]"
    },
    {
      "src": "solidity_version: 0.6.11 [653,659]",
      "dest": "solidity_version: 0.6.12 [653,659]"
    },
    {
      "src": "state_mutability [1307,1311]",
      "dest": "state_mutability [1304,1308]"
    },
    {
      "src": "primitive_type [999,1005]",
      "dest": "primitive_type [998,1004]"
    },
    {
      "src": "internal: internal [1129,1137]",
      "dest": "internal: internal [1126,1134]"
    },
    {
      "src": "identifier: subContract [1116,1127]",
      "dest": "identifier: subContract [1113,1124]"
    },
    {
      "src": ",: , [1106,1107]",
      "dest": ",: , [1103,1104]"
    },
    {
      "src": "abstract: abstract [935,943]",
      "dest": "abstract: abstract [934,942]"
    },
    {
      "src": "parameter [999,1014]",
      "dest": "parameter [998,1013]"
    },
    {
      "src": "identifier: getSubContract [984,998]",
      "dest": "identifier: getSubContract [983,997]"
    },
    {
      "src": "pure: pure [1191,1195]",
      "dest": "pure: pure [1188,1192]"
    },
    {
      "src": "identifier: index [1270,1275]",
      "dest": "identifier: index [1267,1272]"
    },
    {
      "src": "address: address [1277,1284]",
      "dest": "address: address [1274,1281]"
    },
    {
      "src": "(: ( [1179,1180]",
      "dest": "(: ( [1176,1177]"
    },
    {
      "src": "type_name [1047,1054]",
      "dest": "type_name [1044,1051]"
    },
    {
      "src": "type_name [1093,1100]",
      "dest": "type_name [1090,1097]"
    },
    {
      "src": "uint256: uint256 [1213,1220]",
      "dest": "uint256: uint256 [1210,1217]"
    },
    {
      "src": "view: view [1443,1447]",
      "dest": "view: view [1440,1444]"
    },
    {
      "src": "comment: /*       Ensures initializer can be called. Reverts otherwise.     */ [1326,1395]",
      "dest": "comment: /*       Ensures initializer can be called. Reverts otherwise.     */ [1323,1392]"
    },
    {
      "src": "): ) [1296,1297]",
      "dest": "): ) [1293,1294]"
    },
    {
      "src": "visibility [1298,1306]",
      "dest": "visibility [1295,1303]"
    },
    {
      "src": "pure: pure [1307,1311]",
      "dest": "pure: pure [1304,1308]"
    },
    {
      "src": "}: } [1457,1458]",
      "dest": "}: } [1454,1455]"
    },
    {
      "src": "pragma_directive [636,660]",
      "dest": "pragma_directive [636,660]"
    },
    {
      "src": "(: ( [1431,1432]",
      "dest": "(: ( [1428,1429]"
    },
    {
      "src": "contract_body [969,1458]",
      "dest": "contract_body [968,1455]"
    },
    {
      "src": "function: function [1228,1236]",
      "dest": "function: function [1225,1233]"
    },
    {
      "src": "identifier: IDispatcherBase [953,968]",
      "dest": "identifier: IDispatcherBase [952,967]"
    },
    {
      "src": "bytes4: bytes4 [999,1005]",
      "dest": "bytes4: bytes4 [998,1004]"
    },
    {
      "src": "(: ( [1092,1093]",
      "dest": "(: ( [1089,1090]"
    },
    {
      "src": "function: function [1152,1160]",
      "dest": "function: function [1149,1157]"
    },
    {
      "src": "virtual: virtual [1030,1037]",
      "dest": "virtual: virtual [1027,1034]"
    },
    {
      "src": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]",
      "dest": "comment: // SPDX-License-Identifier: Apache-2.0. [596,635]"
    },
    {
      "src": "parameter [1047,1054]",
      "dest": "parameter [1044,1051]"
    },
    {
      "src": "primitive_type [1262,1269]",
      "dest": "primitive_type [1259,1266]"
    },
    {
      "src": "internal: internal [1434,1442]",
      "dest": "internal: internal [1431,1439]"
    },
    {
      "src": "primitive_type [1213,1220]",
      "dest": "primitive_type [1210,1217]"
    },
    {
      "src": "^:  ^ [651,653]",
      "dest": "^:  ^ [651,653]"
    },
    {
      "src": "parameter [1277,1296]",
      "dest": "parameter [1274,1293]"
    },
    {
      "src": "primitive_type [1093,1100]",
      "dest": "primitive_type [1090,1097]"
    },
    {
      "src": "): ) [1432,1433]",
      "dest": "): ) [1429,1430]"
    },
    {
      "src": "function: function [975,983]",
      "dest": "function: function [974,982]"
    },
    {
      "src": "function_definition [1228,1320]",
      "dest": "function_definition [1225,1317]"
    },
    {
      "src": "virtual: virtual [1196,1203]",
      "dest": "virtual: virtual [1193,1200]"
    },
    {
      "src": "solidity: solidity [643,651]",
      "dest": "solidity: solidity [643,651]"
    },
    {
      "src": "source_file [0,1459]",
      "dest": "source_file [0,1456]"
    },
    {
      "src": "function_definition [1062,1146]",
      "dest": "function_definition [1059,1143]"
    },
    {
      "src": "type_name [999,1005]",
      "dest": "type_name [998,1004]"
    },
    {
      "src": "function: function [1062,1070]",
      "dest": "function: function [1059,1067]"
    },
    {
      "src": "(: ( [998,999]",
      "dest": "(: ( [997,998]"
    },
    {
      "src": "identifier: setSubContractAddress [1071,1092]",
      "dest": "identifier: setSubContractAddress [1068,1089]"
    },
    {
      "src": "(: ( [1261,1262]",
      "dest": "(: ( [1258,1259]"
    },
    {
      "src": "identifier: index [1101,1106]",
      "dest": "identifier: index [1098,1103]"
    },
    {
      "src": "state_mutability [1025,1029]",
      "dest": "state_mutability [1022,1026]"
    },
    {
      "src": "type_name [1262,1269]",
      "dest": "type_name [1259,1266]"
    },
    {
      "src": "comment: /*   Copyright 2019-2021 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]",
      "dest": "comment: /*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]"
    },
    {
      "src": "): ) [1054,1055]",
      "dest": "): ) [1051,1052]"
    },
    {
      "src": "{: { [969,970]",
      "dest": "{: { [968,969]"
    },
    {
      "src": "internal: internal [1182,1190]",
      "dest": "internal: internal [1179,1187]"
    },
    {
      "src": "return_type_definition [1038,1055]",
      "dest": "return_type_definition [1035,1052]"
    },
    {
      "src": "(: ( [1212,1213]",
      "dest": "(: ( [1209,1210]"
    },
    {
      "src": "function_definition [1152,1222]",
      "dest": "function_definition [1149,1219]"
    },
    {
      "src": "): ) [1014,1015]",
      "dest": "): ) [1013,1014]"
    },
    {
      "src": "returns: returns [1038,1045]",
      "dest": "returns: returns [1035,1042]"
    },
    {
      "src": "type_name [1277,1284]",
      "dest": "type_name [1274,1281]"
    },
    {
      "src": "virtual: virtual [1138,1145]",
      "dest": "virtual: virtual [1135,1142]"
    },
    {
      "src": "parameter [1262,1275]",
      "dest": "parameter [1259,1272]"
    },
    {
      "src": "virtual: virtual [1448,1455]",
      "dest": "virtual: virtual [1445,1452]"
    },
    {
      "src": "comment: /*   Interface for generic dispatcher to use,   which the concrete dispatcher must implement.    I contains the functions that are specific to the concrete dispatcher instance.    The interface is implemented as contract, because interface implies all methods external. */ [662,934]",
      "dest": "comment: /*   Interface for a generic dispatcher to use, which the concrete dispatcher must implement.   It contains the functions that are specific to the concrete dispatcher instance.   The interface is implemented as contract, because interface implies all methods external. */ [662,933]"
    },
    {
      "src": "function_definition [1400,1456]",
      "dest": "function_definition [1397,1453]"
    },
    {
      "src": "(: ( [1046,1047]",
      "dest": "(: ( [1043,1044]"
    },
    {
      "src": ",: , [1275,1276]",
      "dest": ",: , [1272,1273]"
    },
    {
      "src": "function: function [1400,1408]",
      "dest": "function: function [1397,1405]"
    },
    {
      "src": "identifier: getNumSubcontracts [1161,1179]",
      "dest": "identifier: getNumSubcontracts [1158,1176]"
    },
    {
      "src": "pragma: pragma [636,642]",
      "dest": "pragma: pragma [636,642]"
    },
    {
      "src": "): ) [1220,1221]",
      "dest": "): ) [1217,1218]"
    }
  ],
  "actions": [
    {
      "action": "update-node",
      "tree": "comment: /*   Copyright 2019-2021 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */ [0,595]",
      "label": "/*   Copyright 2019-2022 StarkWare Industries Ltd.    Licensed under the Apache License, Version 2.0 (the \"License\").   You may not use this file except in compliance with the License.   You may obtain a copy of the License at    https://www.starkware.co/open-source-license/    Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an \"AS IS\" BASIS,   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the License for the specific language governing permissions   and limitations under the License. */"
    },
    {
      "action": "update-node",
      "tree": "comment: /*   Interface for generic dispatcher to use,   which the concrete dispatcher must implement.    I contains the functions that are specific to the concrete dispatcher instance.    The interface is implemented as contract, because interface implies all methods external. */ [662,934]",
      "label": "/*   Interface for a generic dispatcher to use, which the concrete dispatcher must implement.   It contains the functions that are specific to the concrete dispatcher instance.   The interface is implemented as contract, because interface implies all methods external. */"
    },
    {
      "action": "update-node",
      "tree": "solidity_version: 0.6.11 [653,659]",
      "label": "0.6.12"
    },
    {
      "action": "insert-node",
      "tree": "public: public [1015,1021]",
      "parent": "visibility [1015,1021]",
      "at": 0
    },
    {
      "action": "delete-node",
      "tree": "internal: internal [1016,1024]"
    }
  ]
}