<?xml version="1.0" ?>
<matches>
  <match src="state_variable_declaration [9120,9178]" dest="state_variable_declaration [9120,9178]"/>
  <match src="{: { [48449,48450]" dest="{: { [49064,49065]"/>
  <match src="}: } [35361,35362]" dest="}: } [35361,35362]"/>
  <match src="identifier: len [38319,38322]" dest="identifier: len [38319,38322]"/>
  <match src="call_expression [37407,37419]" dest="call_expression [37407,37419]"/>
  <match src="event_paramater [1439,1452]" dest="event_paramater [1439,1452]"/>
  <match src=",: , [32352,32353]" dest=",: , [32352,32353]"/>
  <match src="primitive_type [24106,24111]" dest="primitive_type [24106,24111]"/>
  <match src="parameter [16853,16860]" dest="parameter [16853,16860]"/>
  <match src="false [13036,13041]" dest="false [13036,13041]"/>
  <match src="yul_function_call [41118,41164]" dest="yul_function_call [41118,41164]"/>
  <match src="{: { [16068,16069]" dest="{: { [16068,16069]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens of token type `id` are transfered from `from` to `to` by `operator`.      */ [1210,1332]" dest="comment: /**      * @dev Emitted when `value` tokens of token type `id` are transfered from `from` to `to` by `operator`.      */ [1210,1332]"/>
  <match src="contract_body [6411,8693]" dest="contract_body [6411,8693]"/>
  <match src="]: ] [49012,49013]" dest="]: ] [49627,49628]"/>
  <match src="identifier: mint [5436,5440]" dest="identifier: mint [5436,5440]"/>
  <match src="user_defined_type [35449,35456]" dest="user_defined_type [35449,35456]"/>
  <match src="expression_statement [31109,31215]" dest="expression_statement [31109,31215]"/>
  <match src="call_argument [52005,52012]" dest="call_argument [52737,52744]"/>
  <match src=",: , [25138,25139]" dest=",: , [25138,25139]"/>
  <match src="(: ( [24252,24253]" dest="(: ( [24252,24253]"/>
  <match src="function_body [30412,30468]" dest="function_body [30412,30468]"/>
  <match src="address: address [24139,24146]" dest="address: address [24139,24146]"/>
  <match src="function_definition [46805,47656]" dest="function_definition [46803,47654]"/>
  <match src="function: function [30330,30338]" dest="function: function [30330,30338]"/>
  <match src="identifier: memPtr [36098,36104]" dest="identifier: memPtr [36098,36104]"/>
  <match src="function: function [23979,23987]" dest="function: function [23979,23987]"/>
  <match src="identifier: RLPItem [35449,35456]" dest="identifier: RLPItem [35449,35456]"/>
  <match src="): ) [31081,31082]" dest="): ) [31081,31082]"/>
  <match src="visibility [38694,38702]" dest="visibility [38694,38702]"/>
  <match src="{: { [34239,34240]" dest="{: { [34239,34240]"/>
  <match src="for: for [27860,27863]" dest="for: for [27860,27863]"/>
  <match src=",: , [33066,33067]" dest=",: , [33066,33067]"/>
  <match src="uint256: uint256 [42599,42606]" dest="uint256: uint256 [42599,42606]"/>
  <match src="}: } [17471,17472]" dest="}: } [17471,17472]"/>
  <match src="modifier_invocation [50236,50254]" dest="modifier_invocation [50851,50869]"/>
  <match src="block_statement [40967,41288]" dest="block_statement [40967,41288]"/>
  <match src="function: function [2875,2883]" dest="function: function [2875,2883]"/>
  <match src="string [52512,52514]" dest="string [53244,53246]"/>
  <match src="primitive_type [1635,1642]" dest="primitive_type [1635,1642]"/>
  <match src="(: ( [36684,36685]" dest="(: ( [36684,36685]"/>
  <match src="=: = [45056,45057]" dest="=: = [45054,45055]"/>
  <match src="(: ( [17716,17717]" dest="(: ( [17716,17717]"/>
  <match src="primitive_type [36756,36761]" dest="primitive_type [36756,36761]"/>
  <match src="]: ] [50284,50285]" dest="]: ] [50899,50900]"/>
  <match src="}: } [52855,52856]" dest="}: } [53587,53588]"/>
  <match src="expression_statement [14316,14355]" dest="expression_statement [14316,14355]"/>
  <match src="bytes: bytes [24106,24111]" dest="bytes: bytes [24106,24111]"/>
  <match src="yul_function_call [40698,40744]" dest="yul_function_call [40698,40744]"/>
  <match src=",: , [28442,28443]" dest=",: , [28442,28443]"/>
  <match src="(: ( [17359,17360]" dest="(: ( [17359,17360]"/>
  <match src="if: if [49594,49596]" dest="if: if [50209,50211]"/>
  <match src="comment: /**  * @dev _Available since v3.1._  */ [10608,10649]" dest="comment: /**  * @dev _Available since v3.1._  */ [10608,10649]"/>
  <match src="identifier: _remove [13245,13252]" dest="identifier: _remove [13245,13252]"/>
  <match src="else: else [40962,40966]" dest="else: else [40962,40966]"/>
  <match src="comment: // topic3 is to address [50658,50681]" dest="comment: // topic3 is to address [51273,51296]"/>
  <match src="parameter [46835,46852]" dest="parameter [46833,46850]"/>
  <match src="number_literal: 0xffffffff [10363,10373]" dest="number_literal: 0xffffffff [10363,10373]"/>
  <match src="identifier: byte0 [40200,40205]" dest="identifier: byte0 [40200,40205]"/>
  <match src="(: ( [10770,10771]" dest="(: ( [10770,10771]"/>
  <match src="new_expression [36808,36817]" dest="new_expression [36808,36817]"/>
  <match src="identifier: byte0 [40160,40165]" dest="identifier: byte0 [40160,40165]"/>
  <match src="bytes4: bytes4 [46066,46072]" dest="bytes4: bytes4 [46064,46070]"/>
  <match src="identifier: amount [21419,21425]" dest="identifier: amount [21419,21425]"/>
  <match src="member_expression [12952,12963]" dest="member_expression [12952,12963]"/>
  <match src="type_name [48939,48948]" dest="type_name [49554,49563]"/>
  <match src="type_name [9294,9298]" dest="type_name [9294,9298]"/>
  <match src="primitive_type [7386,7391]" dest="primitive_type [7386,7391]"/>
  <match src="variable_declaration_statement [50266,50331]" dest="variable_declaration_statement [50881,50946]"/>
  <match src="type_name [47994,48001]" dest="type_name [48609,48616]"/>
  <match src="!: ! [37096,37097]" dest="!: ! [37096,37097]"/>
  <match src="return: return [39199,39205]" dest="return: return [39199,39205]"/>
  <match src="parameter [7291,7307]" dest="parameter [7291,7307]"/>
  <match src="identifier: ids [52412,52415]" dest="identifier: ids [53144,53147]"/>
  <match src="&quot;: &quot; [15657,15658]" dest="&quot;: &quot; [15657,15658]"/>
  <match src="[: [ [47282,47283]" dest="[: [ [47280,47281]"/>
  <match src="identifier: amount [50906,50912]" dest="identifier: amount [51521,51527]"/>
  <match src="(: ( [41620,41621]" dest="(: ( [41620,41621]"/>
  <match src="type_name [15098,15101]" dest="type_name [15098,15101]"/>
  <match src="identifier: role [33513,33517]" dest="identifier: role [33513,33517]"/>
  <match src="type_name [38717,38722]" dest="type_name [38717,38722]"/>
  <match src="parameter [22545,22559]" dest="parameter [22545,22559]"/>
  <match src="type_name [2899,2906]" dest="type_name [2899,2906]"/>
  <match src="visibility [18234,18242]" dest="visibility [18234,18242]"/>
  <match src="(: ( [33053,33054]" dest="(: ( [33053,33054]"/>
  <match src="identifier: RLPReader [44910,44919]" dest="identifier: RLPReader [44908,44917]"/>
  <match src="function: function [17650,17658]" dest="function: function [17650,17658]"/>
  <match src="primitive_type [31052,31059]" dest="primitive_type [31052,31059]"/>
  <match src="comment: // one byte prefix [38384,38402]" dest="comment: // one byte prefix [38384,38402]"/>
  <match src="binary_expression [13477,13492]" dest="binary_expression [13477,13492]"/>
  <match src="}: } [39994,39995]" dest="}: } [39994,39995]"/>
  <match src="bytes: bytes [35051,35056]" dest="bytes: bytes [35051,35056]"/>
  <match src="uint256: uint256 [17360,17367]" dest="uint256: uint256 [17360,17367]"/>
  <match src="comment: // repetition as possible, we write it in terms of a generic Set type with [11836,11910]" dest="comment: // repetition as possible, we write it in terms of a generic Set type with [11836,11910]"/>
  <match src="): ) [35134,35135]" dest="): ) [35134,35135]"/>
  <match src="=: = [51175,51176]" dest="=: = [51790,51791]"/>
  <match src="type_cast_expression [34129,34195]" dest="type_cast_expression [34129,34195]"/>
  <match src="!=: != [13488,13490]" dest="!=: != [13488,13490]"/>
  <match src="memory: memory [24612,24618]" dest="memory: memory [24612,24618]"/>
  <match src="identifier: rootToken [47406,47415]" dest="identifier: rootToken [47404,47413]"/>
  <match src="expression_statement [24458,24519]" dest="expression_statement [24458,24519]"/>
  <match src="type_name [27950,27957]" dest="type_name [27950,27957]"/>
  <match src="variable_declaration_statement [49533,49547]" dest="variable_declaration_statement [50148,50162]"/>
  <match src="function_definition [29291,29430]" dest="function_definition [29291,29430]"/>
  <match src="view: view [9769,9773]" dest="view: view [9769,9773]"/>
  <match src="primitive_type [28791,28798]" dest="primitive_type [28791,28798]"/>
  <match src="identifier: inited [44611,44617]" dest="identifier: inited [44611,44617]"/>
  <match src="comment: /**      * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.      *      * Emits a {TransferSingle} event.      *      * Requirements:      *      * - `to` cannot be the zero address.      * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.      * - `from` must have a balance of tokens of type `id` of at least `amount`.      * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the      * acceptance magic value.      */ [3583,4154]" dest="comment: /**      * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.      *      * Emits a {TransferSingle} event.      *      * Requirements:      *      * - `to` cannot be the zero address.      * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.      * - `from` must have a balance of tokens of type `id` of at least `amount`.      * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the      * acceptance magic value.      */ [3583,4154]"/>
  <match src=".: . [39710,39711]" dest=".: . [39710,39711]"/>
  <match src="function_definition [18870,19007]" dest="function_definition [18870,19007]"/>
  <match src="(: ( [34257,34258]" dest="(: ( [34257,34258]"/>
  <match src="&quot;: &quot; [37225,37226]" dest="&quot;: &quot; [37225,37226]"/>
  <match src="uint256: uint256 [40152,40159]" dest="uint256: uint256 [40152,40159]"/>
  <match src="identifier: success [24684,24691]" dest="identifier: success [24684,24691]"/>
  <match src="type_name [4741,4750]" dest="type_name [4741,4750]"/>
  <match src="identifier: AccessControlMixin [44825,44843]" dest="identifier: AccessControlMixin [44823,44841]"/>
  <match src="(: ( [51200,51201]" dest="(: ( [51815,51816]"/>
  <match src="identifier: require [32321,32328]" dest="identifier: require [32321,32328]"/>
  <match src="array_access [50614,50632]" dest="array_access [51229,51247]"/>
  <match src="mload: mload [40217,40222]" dest="mload: mload [40217,40222]"/>
  <match src="memory: memory [39361,39367]" dest="memory: memory [39361,39367]"/>
  <match src="identifier: exitTokens [50129,50139]" dest="identifier: exitTokens [50744,50754]"/>
  <match src="call_argument [39153,39173]" dest="call_argument [39153,39173]"/>
  <match src=".: . [50919,50920]" dest=".: . [51534,51535]"/>
  <match src="uint256: uint256 [35857,35864]" dest="uint256: uint256 [35857,35864]"/>
  <match src="address: address [37068,37075]" dest="address: address [37068,37075]"/>
  <match src=",: , [38026,38027]" dest=",: , [38026,38027]"/>
  <match src="): ) [21519,21520]" dest="): ) [21519,21520]"/>
  <match src="memory: memory [2985,2991]" dest="memory: memory [2985,2991]"/>
  <match src="mload: mload [41524,41529]" dest="mload: mload [41524,41529]"/>
  <match src=",: , [34284,34285]" dest=",: , [34284,34285]"/>
  <match src="identifier: numItems [39344,39352]" dest="identifier: numItems [39344,39352]"/>
  <match src="identifier: role [29316,29320]" dest="identifier: role [29316,29320]"/>
  <match src="}: } [20360,20361]" dest="}: } [20360,20361]"/>
  <match src="identifier: dest [42477,42481]" dest="identifier: dest [42477,42481]"/>
  <match src="identifier: _roles [31598,31604]" dest="identifier: _roles [31598,31604]"/>
  <match src="return: return [35319,35325]" dest="return: return [35319,35325]"/>
  <match src="binary_expression [48434,48442]" dest="binary_expression [49049,49057]"/>
  <match src="[: [ [10437,10438]" dest="[: [ [10437,10438]"/>
  <match src="call_argument [52461,52468]" dest="call_argument [53193,53200]"/>
  <match src="string: string [34070,34076]" dest="string: string [34070,34076]"/>
  <match src="=: = [33458,33459]" dest="=: = [33458,33459]"/>
  <match src="address: address [47565,47572]" dest="address: address [47563,47570]"/>
  <match src="function_body [10741,10915]" dest="function_body [10741,10915]"/>
  <match src="identifier: sender [26038,26044]" dest="identifier: sender [26038,26044]"/>
  <match src="type_name [44287,44294]" dest="type_name [44287,44294]"/>
  <match src="&quot;: &quot; [48161,48162]" dest="&quot;: &quot; [48776,48777]"/>
  <match src="call_argument [31590,31635]" dest="call_argument [31590,31635]"/>
  <match src="visibility [16830,16838]" dest="visibility [16830,16838]"/>
  <match src="identifier: logData [52005,52012]" dest="identifier: logData [52737,52744]"/>
  <match src="indexed: indexed [45436,45443]" dest="indexed: indexed [45434,45441]"/>
  <match src="identifier: amount [51504,51510]" dest="identifier: amount [52119,52125]"/>
  <match src="call_argument [39184,39187]" dest="call_argument [39184,39187]"/>
  <match src="expression_statement [35554,35604]" dest="expression_statement [35554,35604]"/>
  <match src="identifier: len [35797,35800]" dest="identifier: len [35797,35800]"/>
  <match src="): ) [24414,24415]" dest="): ) [24414,24415]"/>
  <match src="parameter [16029,16042]" dest="parameter [16029,16042]"/>
  <match src="parameter [30403,30410]" dest="parameter [30403,30410]"/>
  <match src="address: address [1683,1690]" dest="address: address [1683,1690]"/>
  <match src="call_argument [33832,33839]" dest="call_argument [33832,33839]"/>
  <match src="visibility [45103,45109]" dest="visibility [45101,45107]"/>
  <match src="call_argument [52338,52385]" dest="call_argument [53070,53117]"/>
  <match src="binary_expression [39863,39880]" dest="binary_expression [39863,39880]"/>
  <match src="identifier: account [33784,33791]" dest="identifier: account [33784,33791]"/>
  <match src="}: } [18525,18526]" dest="}: } [18525,18526]"/>
  <match src="&quot;: &quot; [39927,39928]" dest="&quot;: &quot; [39927,39928]"/>
  <match src=",: , [49103,49104]" dest=",: , [49718,49719]"/>
  <match src="address: address [47994,48001]" dest="address: address [48609,48616]"/>
  <match src="call_argument [33584,33591]" dest="call_argument [33584,33591]"/>
  <match src="bytes: bytes [36786,36791]" dest="bytes: bytes [36786,36791]"/>
  <match src="solidity_version_comparison_operator [11032,11034]" dest="solidity_version_comparison_operator [11032,11034]"/>
  <match src="state_mutability [48049,48053]" dest="state_mutability [48664,48668]"/>
  <match src=".: . [37479,37480]" dest=".: . [37479,37480]"/>
  <match src="type_cast_expression [52188,52201]" dest="type_cast_expression [52920,52933]"/>
  <match src="]: ] [50464,50465]" dest="]: ] [51079,51080]"/>
  <match src="type_name [46835,46842]" dest="type_name [46833,46840]"/>
  <match src="address: address [51542,51549]" dest="address: address [52162,52169]"/>
  <match src="identifier: account [1937,1944]" dest="identifier: account [1937,1944]"/>
  <match src="comment: // skip over an item [39821,39841]" dest="comment: // skip over an item [39821,39841]"/>
  <match src="member_expression [39153,39164]" dest="member_expression [39153,39164]"/>
  <match src="address: address [48386,48393]" dest="address: address [49001,49008]"/>
  <match src="primitive_type [49238,49245]" dest="primitive_type [49853,49860]"/>
  <match src="identifier: _roles [33390,33396]" dest="identifier: _roles [33390,33396]"/>
  <match src="primitive_type [18903,18910]" dest="primitive_type [18903,18910]"/>
  <match src="type_name [38884,38891]" dest="type_name [38884,38891]"/>
  <match src="user_defined_type [35657,35664]" dest="user_defined_type [35657,35664]"/>
  <match src="}: } [22695,22696]" dest="}: } [22695,22696]"/>
  <match src=",: , [18069,18070]" dest=",: , [18069,18070]"/>
  <match src="identifier: _at [18976,18979]" dest="identifier: _at [18976,18979]"/>
  <match src="]: ] [50359,50360]" dest="]: ] [50974,50975]"/>
  <match src="type_name [20160,20167]" dest="type_name [20160,20167]"/>
  <match src="): ) [50749,50750]" dest="): ) [51364,51365]"/>
  <match src="identifier: remove [17966,17972]" dest="identifier: remove [17966,17972]"/>
  <match src="identifier: byte0 [40871,40876]" dest="identifier: byte0 [40871,40876]"/>
  <match src="comment: /*      * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7      */ [9034,9114]" dest="comment: /*      * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7      */ [9034,9114]"/>
  <match src=",: , [33412,33413]" dest=",: , [33412,33413]"/>
  <match src=".: . [38920,38921]" dest=".: . [38920,38921]"/>
  <match src="identifier: require [49033,49040]" dest="identifier: require [49648,49655]"/>
  <match src="solidity_version: 0.6.0 [6323,6328]" dest="solidity_version: 0.6.0 [6323,6328]"/>
  <match src="-: - [40373,40374]" dest="-: - [40373,40374]"/>
  <match src="identifier: i [49676,49677]" dest="identifier: i [50291,50292]"/>
  <match src="&quot;: &quot; [23713,23714]" dest="&quot;: &quot; [23713,23714]"/>
  <match src="): ) [45085,45086]" dest="): ) [45083,45084]"/>
  <match src="yul_hex_number: 0x20 [36897,36901]" dest="yul_hex_number: 0x20 [36897,36901]"/>
  <match src=".: . [14966,14967]" dest=".: . [14966,14967]"/>
  <match src="interface: interface [4914,4923]" dest="interface: interface [4914,4923]"/>
  <match src="user_defined_type [36685,36692]" dest="user_defined_type [36685,36692]"/>
  <match src="new_expression [48382,48395]" dest="new_expression [48997,49010]"/>
  <match src="mload: mload [42766,42771]" dest="mload: mload [42766,42771]"/>
  <match src="uint256: uint256 [15564,15571]" dest="uint256: uint256 [15564,15571]"/>
  <match src="if_statement [13473,14773]" dest="if_statement [13473,14773]"/>
  <match src="add: add [40580,40583]" dest="add: add [40580,40583]"/>
  <match src="function_definition [44257,44382]" dest="function_definition [44257,44382]"/>
  <match src="string [35802,35843]" dest="string [35802,35843]"/>
  <match src="comment: /**      * @notice accepts batch transfer      */ [46109,46160]" dest="comment: /**      * @notice accepts batch transfer      */ [46107,46158]"/>
  <match src="type_name [48353,48362]" dest="type_name [48968,48977]"/>
  <match src="type_name [40106,40113]" dest="type_name [40106,40113]"/>
  <match src="function_body [15146,15190]" dest="function_body [15146,15190]"/>
  <match src="call_argument [22655,22687]" dest="call_argument [22655,22687]"/>
  <match src="function_definition [16311,16460]" dest="function_definition [16311,16460]"/>
  <match src="): ) [31213,31214]" dest="): ) [31213,31214]"/>
  <match src="=: = [51044,51045]" dest="=: = [51659,51660]"/>
  <match src="call_expression [21447,21520]" dest="call_expression [21447,21520]"/>
  <match src="identifier: amountsToBeExited [48956,48973]" dest="identifier: amountsToBeExited [49571,49588]"/>
  <match src="member_expression [39637,39648]" dest="member_expression [39637,39648]"/>
  <match src="call_argument [51550,51554]" dest="call_argument [52170,52174]"/>
  <match src=",: , [1405,1406]" dest=",: , [1405,1406]"/>
  <match src="member_expression [12769,12780]" dest="member_expression [12769,12780]"/>
  <match src="]: ] [31136,31137]" dest="]: ] [31136,31137]"/>
  <match src="array_access [13441,13460]" dest="array_access [13441,13460]"/>
  <match src="contract_body [10713,10918]" dest="contract_body [10713,10918]"/>
  <match src="variable_declaration [39619,39634]" dest="variable_declaration [39619,39634]"/>
  <match src="+: + [38543,38544]" dest="+: + [38543,38544]"/>
  <match src="(: ( [8681,8682]" dest="(: ( [8681,8682]"/>
  <match src="binary_expression [41857,41878]" dest="binary_expression [41857,41878]"/>
  <match src="yul_assignment [38006,38051]" dest="yul_assignment [38006,38051]"/>
  <match src="identifier: adminRole [31138,31147]" dest="identifier: adminRole [31138,31147]"/>
  <match src="]: ] [4773,4774]" dest="]: ] [4773,4774]"/>
  <match src="{: { [35988,35989]" dest="{: { [35988,35989]"/>
  <match src="type_name [36685,36692]" dest="type_name [36685,36692]"/>
  <match src="(: ( [18975,18976]" dest="(: ( [18975,18976]"/>
  <match src="comment: /**  * @dev Library for managing  * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive  * types.  *  * Sets have the following properties:  *  * - Elements are added, removed, and checked for existence in constant time  * (O(1)).  * - Elements are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableSet for EnumerableSet.AddressSet;  *  *     // Declare a set state variable  *     EnumerableSet.AddressSet private mySet;  * }  * ```  *  * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`  * (`UintSet`) are supported.  */ [11044,11732]" dest="comment: /**  * @dev Library for managing  * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive  * types.  *  * Sets have the following properties:  *  * - Elements are added, removed, and checked for existence in constant time  * (O(1)).  * - Elements are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableSet for EnumerableSet.AddressSet;  *  *     // Declare a set state variable  *     EnumerableSet.AddressSet private mySet;  * }  * ```  *  * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`  * (`UintSet`) are supported.  */ [11044,11732]"/>
  <match src="call_argument [48128,48146]" dest="call_argument [48743,48761]"/>
  <match src="comment: /**      * @notice Lock ERC1155 tokens for deposit, callable only by manager      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on child chain      * @param rootToken Token which gets deposited      * @param depositData ABI encoded id array and amount array      */ [46443,46799]" dest="comment: /**      * @notice Lock ERC1155 tokens for deposit, callable only by manager      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on child chain      * @param rootToken Token which gets deposited      * @param depositData ABI encoded id array and amount array      */ [46441,46797]"/>
  <match src="identifier: returndata_size [25067,25082]" dest="identifier: returndata_size [25067,25082]"/>
  <match src="type_name [43753,43758]" dest="type_name [43753,43758]"/>
  <match src="identifier: require [44554,44561]" dest="identifier: require [44554,44561]"/>
  <match src="): ) [37385,37386]" dest="): ) [37385,37386]"/>
  <match src="number_literal: 1 [40948,40949]" dest="number_literal: 1 [40948,40949]"/>
  <match src="yul_evm_builtin [40501,40504]" dest="yul_evm_builtin [40501,40504]"/>
  <match src="variable_declaration [47208,47225]" dest="variable_declaration [47206,47223]"/>
  <match src="parameter [16327,16349]" dest="parameter [16327,16349]"/>
  <match src="comment: /**      * @notice Batched version of singular token minting, where      * for each token in `ids` respective amount to be minted from `amounts`      * array, for address `to`.      * @dev Should be callable only by MintableERC1155Predicate      * Make sure minting is done only by this function      * @param to user address for whom token is being minted      * @param ids tokens which are being minted      * @param amounts amount of each token being minted      * @param data extra byte data to be accompanied with minted tokens      */ [5524,6074]" dest="comment: /**      * @notice Batched version of singular token minting, where      * for each token in `ids` respective amount to be minted from `amounts`      * array, for address `to`.      * @dev Should be callable only by MintableERC1155Predicate      * Make sure minting is done only by this function      * @param to user address for whom token is being minted      * @param ids tokens which are being minted      * @param amounts amount of each token being minted      * @param data extra byte data to be accompanied with minted tokens      */ [5524,6074]"/>
  <match src="comment: /**      * @dev Returns `true` if `account` has been granted `role`.      */ [29207,29285]" dest="comment: /**      * @dev Returns `true` if `account` has been granted `role`.      */ [29207,29285]"/>
  <match src="variable_declaration [20133,20149]" dest="variable_declaration [20133,20149]"/>
  <match src="assembly_statement [42363,42430]" dest="assembly_statement [42363,42430]"/>
  <match src="primitive_type [27992,27999]" dest="primitive_type [27992,27999]"/>
  <match src="): ) [37418,37419]" dest="): ) [37418,37419]"/>
  <match src="expression_statement [14422,14466]" dest="expression_statement [14422,14466]"/>
  <match src=",: , [52223,52224]" dest=",: , [52955,52956]"/>
  <match src="identifier: _remove [16408,16415]" dest="identifier: _remove [16408,16415]"/>
  <match src="identifier: RLPItem [44934,44941]" dest="identifier: RLPItem [44932,44939]"/>
  <match src=",: , [6109,6110]" dest=",: , [6109,6110]"/>
  <match src="primitive_type [17352,17359]" dest="primitive_type [17352,17359]"/>
  <match src="type_name [45021,45028]" dest="type_name [45019,45026]"/>
  <match src="comment: // The Set implementation uses private functions, and user-facing [11940,12005]" dest="comment: // The Set implementation uses private functions, and user-facing [11940,12005]"/>
  <match src="function_definition [14866,14995]" dest="function_definition [14866,14995]"/>
  <match src="]: ] [2907,2908]" dest="]: ] [2907,2908]"/>
  <match src="string: string [22983,22989]" dest="string: string [22983,22989]"/>
  <match src="call_argument [34280,34284]" dest="call_argument [34280,34284]"/>
  <match src="view: view [2961,2965]" dest="view: view [2961,2965]"/>
  <match src="assignment_expression [34116,34195]" dest="assignment_expression [34116,34195]"/>
  <match src="primitive_type [2658,2665]" dest="primitive_type [2658,2665]"/>
  <match src="identifier: item [38269,38273]" dest="identifier: item [38269,38273]"/>
  <match src="comment: // the array, and then remove the last element (sometimes called as 'swap and pop'). [13667,13751]" dest="comment: // the array, and then remove the last element (sometimes called as 'swap and pop'). [13667,13751]"/>
  <match src="(: ( [25234,25235]" dest="(: ( [25234,25235]"/>
  <match src=",: , [12744,12745]" dest=",: , [12744,12745]"/>
  <match src="memory: memory [38681,38687]" dest="memory: memory [38681,38687]"/>
  <match src=",: , [46215,46216]" dest=",: , [46213,46214]"/>
  <match src="[: [ [51857,51858]" dest="[: [ [52589,52590]"/>
  <match src="pragma: pragma [42943,42949]" dest="pragma: pragma [42943,42949]"/>
  <match src="(: ( [15097,15098]" dest="(: ( [15097,15098]"/>
  <match src="parameter [4212,4222]" dest="parameter [4212,4222]"/>
  <match src="return: return [46370,46376]" dest="return: return [46368,46374]"/>
  <match src=",: , [4198,4199]" dest=",: , [4198,4199]"/>
  <match src="storage: storage [16338,16345]" dest="storage: storage [16338,16345]"/>
  <match src="identifier: _inner [16095,16101]" dest="identifier: _inner [16095,16101]"/>
  <match src="bytes32: bytes32 [16103,16110]" dest="bytes32: bytes32 [16103,16110]"/>
  <match src="(: ( [1634,1635]" dest="(: ( [1634,1635]"/>
  <match src="else: else [40408,40412]" dest="else: else [40408,40412]"/>
  <match src="comment: // underlying Set. [12085,12103]" dest="comment: // underlying Set. [12085,12103]"/>
  <match src="{: { [10329,10330]" dest="{: { [10329,10330]"/>
  <match src=".: . [37823,37824]" dest=".: . [37823,37824]"/>
  <match src="string: string [34129,34135]" dest="string: string [34129,34135]"/>
  <match src=",: , [8540,8541]" dest=",: , [8540,8541]"/>
  <match src="identifier: IERC1155 [4944,4952]" dest="identifier: IERC1155 [4944,4952]"/>
  <match src="identifier: TRANSFER_BATCH_EVENT_SIG [45262,45286]" dest="identifier: TRANSFER_BATCH_EVENT_SIG [45260,45284]"/>
  <match src="): ) [35645,35646]" dest="): ) [35645,35646]"/>
  <match src="): ) [42236,42237]" dest="): ) [42236,42237]"/>
  <match src="parameter [12677,12690]" dest="parameter [12677,12690]"/>
  <match src="): ) [13306,13307]" dest="): ) [13306,13307]"/>
  <match src="event_paramater [29128,29148]" dest="event_paramater [29128,29148]"/>
  <match src="comment: // left over bytes. Mask is used to remove unwanted bytes from the word [42518,42589]" dest="comment: // left over bytes. Mask is used to remove unwanted bytes from the word [42518,42589]"/>
  <match src="(: ( [52195,52196]" dest="(: ( [52927,52928]"/>
  <match src="(: ( [34135,34136]" dest="(: ( [34135,34136]"/>
  <match src="function: function [3485,3493]" dest="function: function [3485,3493]"/>
  <match src="identifier: tokenBalance [51570,51582]" dest="identifier: tokenBalance [52276,52288]"/>
  <match src="}: } [40241,40242]" dest="}: } [40241,40242]"/>
  <match src="{: { [9027,9028]" dest="{: { [9027,9028]"/>
  <match src="type_name [6135,6144]" dest="type_name [6135,6144]"/>
  <match src="uint256: uint256 [49533,49540]" dest="uint256: uint256 [50148,50155]"/>
  <match src="yul_evm_builtin [41137,41140]" dest="yul_evm_builtin [41137,41140]"/>
  <match src="bytes: bytes [47286,47291]" dest="bytes: bytes [47284,47289]"/>
  <match src="identifier: value [17766,17771]" dest="identifier: value [17766,17771]"/>
  <match src="type_name [36756,36761]" dest="type_name [36756,36761]"/>
  <match src="binary_expression [49055,49103]" dest="binary_expression [49670,49718]"/>
  <match src="type_cast_expression [51542,51555]" dest="type_cast_expression [52162,52175]"/>
  <match src="call_argument [31637,31687]" dest="call_argument [31637,31687]"/>
  <match src="primitive_type [8584,8591]" dest="primitive_type [8584,8591]"/>
  <match src="[: [ [49634,49635]" dest="[: [ [50249,50250]"/>
  <match src="yul_function_call [41122,41135]" dest="yul_function_call [41122,41135]"/>
  <match src="bytes: bytes [23029,23034]" dest="bytes: bytes [23029,23034]"/>
  <match src="identifier: _add [17741,17745]" dest="identifier: _add [17741,17745]"/>
  <match src="struct_member [27907,27940]" dest="struct_member [27907,27940]"/>
  <match src="): ) [40742,40743]" dest="): ) [40742,40743]"/>
  <match src="primitive_type [24010,24017]" dest="primitive_type [24010,24017]"/>
  <match src="variable_declaration [24606,24629]" dest="variable_declaration [24606,24629]"/>
  <match src="call_expression [37697,37724]" dest="call_expression [37697,37724]"/>
  <match src="sub: sub [41146,41149]" dest="sub: sub [41146,41149]"/>
  <match src="address: address [2606,2613]" dest="address: address [2606,2613]"/>
  <match src="call_argument [10862,10863]" dest="call_argument [10862,10863]"/>
  <match src="(: ( [49040,49041]" dest="(: ( [49655,49656]"/>
  <match src="(: ( [18979,18980]" dest="(: ( [18979,18980]"/>
  <match src="(: ( [24476,24477]" dest="(: ( [24476,24477]"/>
  <match src="type_alias [44878,44887]" dest="type_alias [44876,44885]"/>
  <match src="]: ] [47283,47284]" dest="]: ] [47281,47282]"/>
  <match src="type_name [5470,5477]" dest="type_name [5470,5477]"/>
  <match src="(: ( [32350,32351]" dest="(: ( [32350,32351]"/>
  <match src="member_expression [10785,10821]" dest="member_expression [10785,10821]"/>
  <match src="parameter [4715,4727]" dest="parameter [4715,4727]"/>
  <match src="state_variable_declaration [34679,34720]" dest="state_variable_declaration [34679,34720]"/>
  <match src="primitive_type [34925,34932]" dest="primitive_type [34925,34932]"/>
  <match src="identifier: byte0 [40505,40510]" dest="identifier: byte0 [40505,40510]"/>
  <match src="returns: returns [38708,38715]" dest="returns: returns [38708,38715]"/>
  <match src="return_type_definition [18932,18949]" dest="return_type_definition [18932,18949]"/>
  <match src="call_expression [12731,12752]" dest="call_expression [12731,12752]"/>
  <match src="bytes: bytes [39024,39029]" dest="bytes: bytes [39024,39029]"/>
  <match src="identifier: role [33309,33313]" dest="identifier: role [33309,33313]"/>
  <match src="primitive_type [18941,18948]" dest="primitive_type [18941,18948]"/>
  <match src="yul_identifier [40584,40590]" dest="yul_identifier [40584,40590]"/>
  <match src="(: ( [50766,50767]" dest="(: ( [51381,51382]"/>
  <match src="abstract: abstract [27741,27749]" dest="abstract: abstract [27741,27749]"/>
  <match src="view: view [3555,3559]" dest="view: view [3555,3559]"/>
  <match src="call_expression [51976,52068]" dest="call_expression [52708,52800]"/>
  <match src="identifier: id [51208,51210]" dest="identifier: id [51823,51825]"/>
  <match src="(: ( [37889,37890]" dest="(: ( [37889,37890]"/>
  <match src="(: ( [38716,38717]" dest="(: ( [38716,38717]"/>
  <match src="identifier: abi [51976,51979]" dest="identifier: abi [52708,52711]"/>
  <match src="identifier: itemLength [37545,37555]" dest="identifier: itemLength [37545,37555]"/>
  <match src="bytes: bytes [24606,24611]" dest="bytes: bytes [24606,24611]"/>
  <match src="member_expression [39666,39677]" dest="member_expression [39666,39677]"/>
  <match src="): ) [18997,18998]" dest="): ) [18997,18998]"/>
  <match src="member_expression [36938,36949]" dest="member_expression [36938,36949]"/>
  <match src="event_definition [45385,45591]" dest="event_definition [45383,45589]"/>
  <match src="identifier: returndata [25092,25102]" dest="identifier: returndata [25092,25102]"/>
  <match src="primitive_type [50981,50988]" dest="primitive_type [51596,51603]"/>
  <match src="visibility [31083,31089]" dest="visibility [31083,31089]"/>
  <match src="bytes32: bytes32 [29128,29135]" dest="bytes32: bytes32 [29128,29135]"/>
  <match src="(: ( [29127,29128]" dest="(: ( [29127,29128]"/>
  <match src="type_name [47134,47141]" dest="type_name [47132,47139]"/>
  <match src="parameter [7341,7351]" dest="parameter [7341,7351]"/>
  <match src="): ) [21753,21754]" dest="): ) [21753,21754]"/>
  <match src="storage: storage [18436,18443]" dest="storage: storage [18436,18443]"/>
  <match src="user_defined_type [36291,36298]" dest="user_defined_type [36291,36298]"/>
  <match src="function: function [17251,17259]" dest="function: function [17251,17259]"/>
  <match src="call_argument [35903,35914]" dest="call_argument [35903,35914]"/>
  <match src="array_access [49681,49701]" dest="array_access [50296,50316]"/>
  <match src="function_definition [33034,33146]" dest="function_definition [33034,33146]"/>
  <match src="): ) [43785,43786]" dest="): ) [43785,43786]"/>
  <match src="function: function [12646,12654]" dest="function: function [12646,12654]"/>
  <match src="identifier: contains [29405,29413]" dest="identifier: contains [29405,29413]"/>
  <match src="&quot;: &quot; [34165,34166]" dest="&quot;: &quot; [34165,34166]"/>
  <match src=",: , [42402,42403]" dest=",: , [42402,42403]"/>
  <match src="[: [ [47141,47142]" dest="[: [ [47139,47140]"/>
  <match src="primitive_type [1946,1953]" dest="primitive_type [1946,1953]"/>
  <match src="state_mutability [18243,18247]" dest="state_mutability [18243,18247]"/>
  <match src="if: if [40413,40415]" dest="if: if [40413,40415]"/>
  <match src="identifier: depositor [45444,45453]" dest="identifier: depositor [45442,45451]"/>
  <match src="bytes: bytes [44892,44897]" dest="bytes: bytes [44890,44895]"/>
  <match src="call_expression [52338,52385]" dest="call_expression [53070,53117]"/>
  <match src=",: , [32433,32434]" dest=",: , [32433,32434]"/>
  <match src="override: override [46968,46976]" dest="override: override [46966,46974]"/>
  <match src="calldata: calldata [6145,6153]" dest="calldata: calldata [6145,6153]"/>
  <match src="): ) [24286,24287]" dest="): ) [24286,24287]"/>
  <match src="): ) [8688,8689]" dest="): ) [8688,8689]"/>
  <match src="variable_declaration_statement [21611,21666]" dest="variable_declaration_statement [21611,21666]"/>
  <match src="primitive_type [18257,18261]" dest="primitive_type [18257,18261]"/>
  <match src="primitive_type [22545,22552]" dest="primitive_type [22545,22552]"/>
  <match src="): ) [16828,16829]" dest="): ) [16828,16829]"/>
  <match src="user_defined_type [16806,16816]" dest="user_defined_type [16806,16816]"/>
  <match src=".: . [33402,33403]" dest=".: . [33402,33403]"/>
  <match src="[: [ [8591,8592]" dest="[: [ [8591,8592]"/>
  <match src="public: public [44958,44964]" dest="public: public [44956,44962]"/>
  <match src="identifier: AddressSet [17263,17273]" dest="identifier: AddressSet [17263,17273]"/>
  <match src="yul_identifier [42846,42853]" dest="yul_identifier [42846,42853]"/>
  <match src="type_name [9792,9796]" dest="type_name [9792,9796]"/>
  <match src="!=: != [14983,14985]" dest="!=: != [14983,14985]"/>
  <match src="): ) [23608,23609]" dest="): ) [23608,23609]"/>
  <match src="uint256: uint256 [6111,6118]" dest="uint256: uint256 [6111,6118]"/>
  <match src="type_name [39353,39360]" dest="type_name [39353,39360]"/>
  <match src="type_name [48939,48946]" dest="type_name [49554,49561]"/>
  <match src="(: ( [24105,24106]" dest="(: ( [24105,24106]"/>
  <match src="for_statement [42305,42506]" dest="for_statement [42305,42506]"/>
  <match src="&quot;: &quot; [44999,45000]" dest="&quot;: &quot; [44997,44998]"/>
  <match src="identifier: rootToken [45522,45531]" dest="identifier: rootToken [45520,45529]"/>
  <match src="variable_declaration_statement [40152,40166]" dest="variable_declaration_statement [40152,40166]"/>
  <match src="function_body [38225,38648]" dest="function_body [38225,38648]"/>
  <match src="string_literal [21662,21664]" dest="string_literal [21662,21664]"/>
  <match src="function_definition [45908,46101]" dest="function_definition [45906,46099]"/>
  <match src="number_literal: 0 [24849,24850]" dest="number_literal: 0 [24849,24850]"/>
  <match src="parameter [24060,24086]" dest="parameter [24060,24086]"/>
  <match src=",: , [47596,47597]" dest=",: , [47594,47595]"/>
  <match src="binary_expression [32329,32352]" dest="binary_expression [32329,32352]"/>
  <match src="type_name [34726,34731]" dest="type_name [34726,34731]"/>
  <match src="uint256: uint256 [51948,51955]" dest="uint256: uint256 [52680,52687]"/>
  <match src="visibility [29339,29345]" dest="visibility [29339,29345]"/>
  <match src="member_expression [37615,37623]" dest="member_expression [37615,37623]"/>
  <match src="identifier: mask [42607,42611]" dest="identifier: mask [42607,42611]"/>
  <match src="): ) [35468,35469]" dest="): ) [35468,35469]"/>
  <match src="call_argument [34286,34298]" dest="call_argument [34286,34298]"/>
  <match src="==: == [42232,42234]" dest="==: == [42232,42234]"/>
  <match src=".: . [36960,36961]" dest=".: . [36960,36961]"/>
  <match src="type_name [35687,35694]" dest="type_name [35687,35694]"/>
  <match src="): ) [28507,28508]" dest="): ) [28507,28508]"/>
  <match src="comment: // copy as many word sizes as possible [42257,42295]" dest="comment: // copy as many word sizes as possible [42257,42295]"/>
  <match src="add: add [41246,41249]" dest="add: add [41246,41249]"/>
  <match src="parameter [22948,22962]" dest="parameter [22948,22962]"/>
  <match src="modifier_definition [34211,34355]" dest="modifier_definition [34211,34355]"/>
  <match src="function: function [43633,43641]" dest="function: function [43633,43641]"/>
  <match src="(: ( [16110,16111]" dest="(: ( [16110,16111]"/>
  <match src="parameter [19831,19846]" dest="parameter [19831,19846]"/>
  <match src="type_name [45238,45245]" dest="type_name [45236,45243]"/>
  <match src="member_expression [12930,12942]" dest="member_expression [12930,12942]"/>
  <match src="identifier: _values [13916,13923]" dest="identifier: _values [13916,13923]"/>
  <match src="type_name [39591,39598]" dest="type_name [39591,39598]"/>
  <match src="): ) [37896,37897]" dest="): ) [37896,37897]"/>
  <match src="primitive_type [34679,34684]" dest="primitive_type [34679,34684]"/>
  <match src="assembly: assembly [39073,39081]" dest="assembly: assembly [39073,39081]"/>
  <match src="): ) [48339,48340]" dest="): ) [48954,48955]"/>
  <match src="view: view [18458,18462]" dest="view: view [18458,18462]"/>
  <match src="identifier: itemLength [38300,38310]" dest="identifier: itemLength [38300,38310]"/>
  <match src=",: , [14900,14901]" dest=",: , [14900,14901]"/>
  <match src="}: } [45621,45622]" dest="}: } [45619,45620]"/>
  <match src="identifier: ids [52374,52377]" dest="identifier: ids [53106,53109]"/>
  <match src="struct_member [12423,12461]" dest="struct_member [12423,12461]"/>
  <match src="visibility [48031,48039]" dest="visibility [48646,48654]"/>
  <match src="identifier: result [38634,38640]" dest="identifier: result [38634,38640]"/>
  <match src="call_expression [24458,24518]" dest="call_expression [24458,24518]"/>
  <match src="variable_declaration [36840,36851]" dest="variable_declaration [36840,36851]"/>
  <match src="let: let [40486,40489]" dest="let: let [40486,40489]"/>
  <match src="{: { [35141,35142]" dest="{: { [35141,35142]"/>
  <match src=",: , [47193,47194]" dest=",: , [47191,47192]"/>
  <match src="&quot;: &quot; [31164,31165]" dest="&quot;: &quot; [31164,31165]"/>
  <match src="yul_decimal_number: 256 [38032,38035]" dest="yul_decimal_number: 256 [38032,38035]"/>
  <match src="(: ( [51925,51926]" dest="(: ( [52657,52658]"/>
  <match src="calldata: calldata [2909,2917]" dest="calldata: calldata [2909,2917]"/>
  <match src="primitive_type [33505,33512]" dest="primitive_type [33505,33512]"/>
  <match src="{: { [49022,49023]" dest="{: { [49637,49638]"/>
  <match src="calldata: calldata [4751,4759]" dest="calldata: calldata [4751,4759]"/>
  <match src="call_argument [16119,16124]" dest="call_argument [16119,16124]"/>
  <match src="(: ( [51779,51780]" dest="(: ( [52511,52512]"/>
  <match src="block_statement [51910,52760]" dest="block_statement [52642,53492]"/>
  <match src="bool: bool [18257,18261]" dest="bool: bool [18257,18261]"/>
  <match src="parameter [33519,33534]" dest="parameter [33519,33534]"/>
  <match src="yul_identifier [40570,40576]" dest="yul_identifier [40570,40576]"/>
  <match src="string [45309,45369]" dest="string [45307,45367]"/>
  <match src="identifier: byte0 [41635,41640]" dest="identifier: byte0 [41635,41640]"/>
  <match src="visibility [6184,6192]" dest="visibility [6184,6192]"/>
  <match src="indexed: indexed [1691,1698]" dest="indexed: indexed [1691,1698]"/>
  <match src="identifier: logTopicRLPList [50775,50790]" dest="identifier: logTopicRLPList [51390,51405]"/>
  <match src="uint256: uint256 [17684,17691]" dest="uint256: uint256 [17684,17691]"/>
  <match src="function_definition [26060,26293]" dest="function_definition [26060,26293]"/>
  <match src="parameter [50150,50157]" dest="parameter [50765,50772]"/>
  <match src="identifier: toBytes [38665,38672]" dest="identifier: toBytes [38665,38672]"/>
  <match src="function_definition [29604,29731]" dest="function_definition [29604,29731]"/>
  <match src="identifier: _revokeRole [31701,31712]" dest="identifier: _revokeRole [31701,31712]"/>
  <match src="true [44620,44624]" dest="true [44620,44624]"/>
  <match src="returns: returns [16375,16382]" dest="returns: returns [16375,16382]"/>
  <match src="type_name [42158,42165]" dest="type_name [42158,42165]"/>
  <match src="type_name [15796,15799]" dest="type_name [15796,15799]"/>
  <match src="call_argument [17384,17389]" dest="call_argument [17384,17389]"/>
  <match src="parameter [31066,31081]" dest="parameter [31066,31081]"/>
  <match src="visibility [24088,24096]" dest="visibility [24088,24096]"/>
  <match src="yul_evm_builtin [38028,38031]" dest="yul_evm_builtin [38028,38031]"/>
  <match src="): ) [44587,44588]" dest="): ) [44587,44588]"/>
  <match src="identifier: to [4208,4210]" dest="identifier: to [4208,4210]"/>
  <match src="{: { [33102,33103]" dest="{: { [33102,33103]"/>
  <match src="returns: returns [29658,29665]" dest="returns: returns [29658,29665]"/>
  <match src="visibility [16044,16052]" dest="visibility [16044,16052]"/>
  <match src="boolean_literal [36528,36533]" dest="boolean_literal [36528,36533]"/>
  <match src="boolean_literal [44620,44624]" dest="boolean_literal [44620,44624]"/>
  <match src="primitive_type [4741,4748]" dest="primitive_type [4741,4748]"/>
  <match src="expression_statement [49548,49573]" dest="expression_statement [50163,50188]"/>
  <match src="): ) [16451,16452]" dest="): ) [16451,16452]"/>
  <match src="memory: memory [22970,22976]" dest="memory: memory [22970,22976]"/>
  <match src="function: function [15534,15542]" dest="function: function [15534,15542]"/>
  <match src="binary_expression [15629,15655]" dest="binary_expression [15629,15655]"/>
  <match src="primitive_type [37281,37288]" dest="primitive_type [37281,37288]"/>
  <match src="(: ( [36066,36067]" dest="(: ( [36066,36067]"/>
  <match src="identifier: role [29391,29395]" dest="identifier: role [29391,29395]"/>
  <match src="returns: returns [25990,25997]" dest="returns: returns [25990,25997]"/>
  <match src="member_expression [46377,46427]" dest="member_expression [46375,46425]"/>
  <match src="(: ( [52563,52564]" dest="(: ( [53295,53296]"/>
  <match src="identifier: listLength [38750,38760]" dest="identifier: listLength [38750,38760]"/>
  <match src="=: = [35681,35682]" dest="=: = [35681,35682]"/>
  <match src="yul_identifier [39118,39124]" dest="yul_identifier [39118,39124]"/>
  <match src=",: , [16349,16350]" dest=",: , [16349,16350]"/>
  <match src="=: = [36105,36106]" dest="=: = [36105,36106]"/>
  <match src=",: , [35175,35176]" dest=",: , [35175,35176]"/>
  <match src="if_statement [36491,36534]" dest="if_statement [36491,36534]"/>
  <match src="boolean_literal [10453,10457]" dest="boolean_literal [10453,10457]"/>
  <match src="(: ( [50328,50329]" dest="(: ( [50943,50944]"/>
  <match src="function_body [46996,47656]" dest="function_body [46994,47654]"/>
  <match src="}: } [32450,32451]" dest="}: } [32450,32451]"/>
  <match src="): ) [1734,1735]" dest="): ) [1734,1735]"/>
  <match src=",: , [17756,17757]" dest=",: , [17756,17757]"/>
  <match src="}: } [33865,33866]" dest="}: } [33865,33866]"/>
  <match src="yul_function_call [40501,40517]" dest="yul_function_call [40501,40517]"/>
  <match src="type_name [44924,44941]" dest="type_name [44922,44939]"/>
  <match src=".: . [15640,15641]" dest=".: . [15640,15641]"/>
  <match src="expression_statement [37088,37150]" dest="expression_statement [37088,37150]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [24531,24581]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [24531,24581]"/>
  <match src="address: address [21455,21462]" dest="address: address [21455,21462]"/>
  <match src="identifier: token [51626,51631]" dest="identifier: token [52358,52363]"/>
  <match src="comment: // being explicit [41810,41827]" dest="comment: // being explicit [41810,41827]"/>
  <match src="comment: // File: contracts/root/TokenPredicates/ITokenPredicate.sol [42880,42939]" dest="comment: // File: contracts/root/TokenPredicates/ITokenPredicate.sol [42880,42939]"/>
  <match src="(: ( [41677,41678]" dest="(: ( [41677,41678]"/>
  <match src="identifier: require [39855,39862]" dest="identifier: require [39855,39862]"/>
  <match src="(: ( [21661,21662]" dest="(: ( [21661,21662]"/>
  <match src="identifier: RLPItem [39353,39360]" dest="identifier: RLPItem [39353,39360]"/>
  <match src="primitive_type [5486,5491]" dest="primitive_type [5486,5491]"/>
  <match src="!: ! [12730,12731]" dest="!: ! [12730,12731]"/>
  <match src="identifier: this [21463,21467]" dest="identifier: this [21463,21467]"/>
  <match src="identifier: role [34280,34284]" dest="identifier: role [34280,34284]"/>
  <match src="type_name [16029,16036]" dest="type_name [16029,16036]"/>
  <match src="identifier: endPtr [39756,39762]" dest="identifier: endPtr [39756,39762]"/>
  <match src="solidity: solidity [4895,4903]" dest="solidity: solidity [4895,4903]"/>
  <match src="member_expression [49079,49103]" dest="member_expression [49694,49718]"/>
  <match src="identifier: amounts [6154,6161]" dest="identifier: amounts [6154,6161]"/>
  <match src="=: = [45145,45146]" dest="=: = [45143,45144]"/>
  <match src="pragma_directive [19103,19126]" dest="pragma_directive [19103,19126]"/>
  <match src="parameter [39396,39403]" dest="parameter [39396,39403]"/>
  <match src="primitive_type [46244,46251]" dest="primitive_type [46242,46249]"/>
  <match src="visibility [35079,35087]" dest="visibility [35079,35087]"/>
  <match src="identifier: memPtr [41409,41415]" dest="identifier: memPtr [41409,41415]"/>
  <match src="identifier: set [14669,14672]" dest="identifier: set [14669,14672]"/>
  <match src="solidity_version:  0.6.6 [44451,44457]" dest="solidity_version:  0.6.6 [44451,44457]"/>
  <match src="member_expression [52374,52384]" dest="member_expression [53106,53116]"/>
  <match src="private: private [33536,33543]" dest="private: private [33536,33543]"/>
  <match src="variable_declaration [35714,35732]" dest="variable_declaration [35714,35732]"/>
  <match src="): ) [41536,41537]" dest="): ) [41536,41537]"/>
  <match src="memory: memory [36792,36798]" dest="memory: memory [36792,36798]"/>
  <match src="parameter [18198,18217]" dest="parameter [18198,18217]"/>
  <match src="bytes: bytes [24351,24356]" dest="bytes: bytes [24351,24356]"/>
  <match src="variable_declaration_statement [50488,50546]" dest="variable_declaration_statement [51103,51161]"/>
  <match src="event_paramater [29150,29173]" dest="event_paramater [29150,29173]"/>
  <match src="internal: internal [17699,17707]" dest="internal: internal [17699,17707]"/>
  <match src="identifier: _at [15543,15546]" dest="identifier: _at [15543,15546]"/>
  <match src="identifier: id [7349,7351]" dest="identifier: id [7349,7351]"/>
  <match src="): ) [16450,16451]" dest="): ) [16450,16451]"/>
  <match src="array_access [47264,47273]" dest="array_access [47262,47271]"/>
  <match src="event_paramater [1683,1701]" dest="event_paramater [1683,1701]"/>
  <match src="event_definition [2350,2394]" dest="event_definition [2350,2394]"/>
  <match src="identifier: items [35976,35981]" dest="identifier: items [35976,35981]"/>
  <match src="=: = [49232,49233]" dest="=: = [49847,49848]"/>
  <match src="uint256: uint256 [49197,49204]" dest="uint256: uint256 [49812,49819]"/>
  <match src="constant: constant [45036,45044]" dest="constant: constant [45034,45042]"/>
  <match src="-: - [42637,42638]" dest="-: - [42637,42638]"/>
  <match src="identifier: result [39206,39212]" dest="identifier: result [39206,39212]"/>
  <match src="call_argument [52698,52705]" dest="call_argument [53430,53437]"/>
  <match src="(: ( [42709,42710]" dest="(: ( [42709,42710]"/>
  <match src="identifier: data [22649,22653]" dest="identifier: data [22649,22653]"/>
  <match src="storage: storage [18206,18213]" dest="storage: storage [18206,18213]"/>
  <match src=",: , [52385,52386]" dest=",: , [53117,53118]"/>
  <match src="returns: returns [23587,23594]" dest="returns: returns [23587,23594]"/>
  <match src="call_argument [52367,52371]" dest="call_argument [53099,53103]"/>
  <match src="variable_declaration_statement [48419,48433]" dest="variable_declaration_statement [49034,49048]"/>
  <match src="type_name [37680,37687]" dest="type_name [37680,37687]"/>
  <match src="variable_declaration [38941,38952]" dest="variable_declaration [38941,38952]"/>
  <match src="public: public [30693,30699]" dest="public: public [30693,30699]"/>
  <match src="identifier: lockTokens [46814,46824]" dest="identifier: lockTokens [46812,46822]"/>
  <match src="array_access [15712,15730]" dest="array_access [15712,15730]"/>
  <match src="identifier: i [49699,49700]" dest="identifier: i [50314,50315]"/>
  <match src="identifier: _roles [31125,31131]" dest="identifier: _roles [31125,31131]"/>
  <match src="primitive_type [46351,46357]" dest="primitive_type [46349,46355]"/>
  <match src="type_name [46273,46282]" dest="type_name [46271,46280]"/>
  <match src="address: address [33716,33723]" dest="address: address [33716,33723]"/>
  <match src="member_expression [15164,15182]" dest="member_expression [15164,15182]"/>
  <match src="identifier: balance [21469,21476]" dest="identifier: balance [21469,21476]"/>
  <match src="primitive_type [35926,35933]" dest="primitive_type [35926,35933]"/>
  <match src="call_argument [18303,18317]" dest="call_argument [18303,18317]"/>
  <match src="type_name [18941,18948]" dest="type_name [18941,18948]"/>
  <match src="parameter [40106,40113]" dest="parameter [40106,40113]"/>
  <match src="): ) [26078,26079]" dest="): ) [26078,26079]"/>
  <match src="primitive_type [2374,2381]" dest="primitive_type [2374,2381]"/>
  <match src="(: ( [21383,21384]" dest="(: ( [21383,21384]"/>
  <match src="comment: /**      * @notice Validates log signature, from and to address      * then sends the correct tokenId, amount to withdrawer      * callable only by manager      * @param rootToken Token which gets withdrawn      * @param log Valid ERC1155 TransferSingle burn or TransferBatch burn log from child chain      */ [49799,50114]" dest="comment: /**      * @notice Validates log signature, from and to address      * then sends the correct tokenId, amount to withdrawer      * callable only by manager      * @param rootToken Token which gets withdrawn      * @param log Valid ERC1155 TransferSingle burn or TransferBatch burn log from child chain      */ [50414,50729]"/>
  <match src="type_name [27864,27871]" dest="type_name [27864,27871]"/>
  <match src="parameter [46351,46357]" dest="parameter [46349,46355]"/>
  <match src="identifier: depositReceiver [47376,47391]" dest="identifier: depositReceiver [47374,47389]"/>
  <match src="variable_declaration [37802,37816]" dest="variable_declaration [37802,37816]"/>
  <match src="yul_identifier [42410,42413]" dest="yul_identifier [42410,42413]"/>
  <match src="type_name [52085,52101]" dest="type_name [52817,52833]"/>
  <match src="variable_declaration [50429,50449]" dest="variable_declaration [51044,51064]"/>
  <match src="call_argument [38806,38828]" dest="call_argument [38806,38828]"/>
  <match src="parameter [18428,18447]" dest="parameter [18428,18447]"/>
  <match src="uint256: uint256 [48419,48426]" dest="uint256: uint256 [49034,49041]"/>
  <match src="visibility [7422,7430]" dest="visibility [7422,7430]"/>
  <match src="call_expression [35632,35646]" dest="call_expression [35632,35646]"/>
  <match src="(: ( [41249,41250]" dest="(: ( [41249,41250]"/>
  <match src="return_statement [29377,29423]" dest="return_statement [29377,29423]"/>
  <match src="}: } [21660,21661]" dest="}: } [21660,21661]"/>
  <match src="}: } [45841,45842]" dest="}: } [45839,45840]"/>
  <match src="identifier: toRlpBytes [36674,36684]" dest="identifier: toRlpBytes [36674,36684]"/>
  <match src="(: ( [4185,4186]" dest="(: ( [4185,4186]"/>
  <match src="parameter [14885,14900]" dest="parameter [14885,14900]"/>
  <match src="member_expression [18059,18069]" dest="member_expression [18059,18069]"/>
  <match src="mload: mload [36454,36459]" dest="mload: mload [36454,36459]"/>
  <match src="bool: bool [21612,21616]" dest="bool: bool [21612,21616]"/>
  <match src="new_expression [35683,35696]" dest="new_expression [35683,35696]"/>
  <match src="comment: // implementations (such as AddressSet) are just wrappers around the [12011,12079]" dest="comment: // implementations (such as AddressSet) are just wrappers around the [12011,12079]"/>
  <match src="call_argument [33626,33630]" dest="call_argument [33626,33630]"/>
  <match src="identifier: _roles [30741,30747]" dest="identifier: _roles [30741,30747]"/>
  <match src="mload: mload [37884,37889]" dest="mload: mload [37884,37889]"/>
  <match src="call_argument [51201,51205]" dest="call_argument [51816,51820]"/>
  <match src="}: } [13052,13053]" dest="}: } [13052,13053]"/>
  <match src="(: ( [40105,40106]" dest="(: ( [40105,40106]"/>
  <match src="}: } [4825,4826]" dest="}: } [4825,4826]"/>
  <match src="(: ( [44276,44277]" dest="(: ( [44276,44277]"/>
  <match src="identifier: set [16346,16349]" dest="identifier: set [16346,16349]"/>
  <match src="): ) [7454,7455]" dest="): ) [7454,7455]"/>
  <match src="binary_expression [37475,37489]" dest="binary_expression [37475,37489]"/>
  <match src="parameter [47994,48006]" dest="parameter [48609,48621]"/>
  <match src="call_expression [52547,52574]" dest="call_expression [53279,53306]"/>
  <match src="block_statement [39764,39963]" dest="block_statement [39764,39963]"/>
  <match src="identifier: balanceOf [2596,2605]" dest="identifier: balanceOf [2596,2605]"/>
  <match src="new: new [39020,39023]" dest="new: new [39020,39023]"/>
  <match src="bytes32: bytes32 [30353,30360]" dest="bytes32: bytes32 [30353,30360]"/>
  <match src=".: . [50399,50400]" dest=".: . [51014,51015]"/>
  <match src="==: == [50804,50806]" dest="==: == [51419,51421]"/>
  <match src="array_access [14662,14688]" dest="array_access [14662,14688]"/>
  <match src="identifier: _itemLength [37558,37569]" dest="identifier: _itemLength [37558,37569]"/>
  <match src="call_expression [36013,36032]" dest="call_expression [36013,36032]"/>
  <match src="type_name [44892,44897]" dest="type_name [44890,44895]"/>
  <match src="(: ( [40720,40721]" dest="(: ( [40720,40721]"/>
  <match src="identifier: memPtr [37717,37723]" dest="identifier: memPtr [37717,37723]"/>
  <match src="): ) [2633,2634]" dest="): ) [2633,2634]"/>
  <match src="address: address [22545,22552]" dest="address: address [22545,22552]"/>
  <match src=".: . [30450,30451]" dest=".: . [30450,30451]"/>
  <match src=",: , [52679,52680]" dest=",: , [53411,53412]"/>
  <match src="): ) [35295,35296]" dest="): ) [35295,35296]"/>
  <match src="bytes32: bytes32 [33315,33322]" dest="bytes32: bytes32 [33315,33322]"/>
  <match src="primitive_type [4224,4231]" dest="primitive_type [4224,4231]"/>
  <match src="identifier: balance [24153,24160]" dest="identifier: balance [24153,24160]"/>
  <match src="[: [ [33565,33566]" dest="[: [ [33565,33566]"/>
  <match src="variable_declaration_statement [37802,37840]" dest="variable_declaration_statement [37802,37840]"/>
  <match src="event: event [2350,2355]" dest="event: event [2350,2355]"/>
  <match src="type_cast_expression [52359,52372]" dest="type_cast_expression [53091,53104]"/>
  <match src="=: = [34759,34760]" dest="=: = [34759,34760]"/>
  <match src="member_expression [35792,35800]" dest="member_expression [35792,35800]"/>
  <match src="identifier: _inner [16420,16426]" dest="identifier: _inner [16420,16426]"/>
  <match src="calldata: calldata [43759,43767]" dest="calldata: calldata [43759,43767]"/>
  <match src="comment: // Currently locked tokens for `id` in this contract [51088,51140]" dest="comment: // Currently locked tokens for `id` in this contract [51703,51755]"/>
  <match src="): ) [52732,52733]" dest="): ) [53464,53465]"/>
  <match src="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [18334,18406]" dest="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [18334,18406]"/>
  <match src="call_expression [50452,50475]" dest="call_expression [51067,51090]"/>
  <match src="memory: memory [22567,22573]" dest="memory: memory [22567,22573]"/>
  <match src="{: { [31098,31099]" dest="{: { [31098,31099]"/>
  <match src="identifier: itemLen [41307,41314]" dest="identifier: itemLen [41307,41314]"/>
  <match src="binary_expression [36495,36519]" dest="binary_expression [36495,36519]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [20259,20306]" dest="comment: // solhint-disable-next-line no-inline-assembly [20259,20306]"/>
  <match src="): ) [51210,51211]" dest="): ) [51825,51826]"/>
  <match src="&quot;: &quot; [52835,52836]" dest="&quot;: &quot; [53567,53568]"/>
  <match src="emit_statement [33809,33855]" dest="emit_statement [33809,33855]"/>
  <match src="parameter [45650,45664]" dest="parameter [45648,45662]"/>
  <match src=",: , [16426,16427]" dest=",: , [16426,16427]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [17480,17644]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [17480,17644]"/>
  <match src="): ) [19846,19847]" dest="): ) [19846,19847]"/>
  <match src="return_type_definition [24097,24119]" dest="return_type_definition [24097,24119]"/>
  <match src="call_argument [51667,51680]" dest="call_argument [52399,52412]"/>
  <match src=",: , [44301,44302]" dest=",: , [44301,44302]"/>
  <match src="(: ( [50591,50592]" dest="(: ( [51206,51207]"/>
  <match src="parameter [38673,38692]" dest="parameter [38673,38692]"/>
  <match src="&quot;: &quot; [10404,10405]" dest="&quot;: &quot; [10404,10405]"/>
  <match src="inheritance_specifier [4944,4952]" dest="inheritance_specifier [4944,4952]"/>
  <match src="identifier: addr [48128,48132]" dest="identifier: addr [48743,48747]"/>
  <match src="yul_function_call [25125,25169]" dest="yul_function_call [25125,25169]"/>
  <match src="type_name [29667,29674]" dest="type_name [29667,29674]"/>
  <match src="string_literal [37111,37148]" dest="string_literal [37111,37148]"/>
  <match src="identifier: value [14682,14687]" dest="identifier: value [14682,14687]"/>
  <match src="uint256: uint256 [37680,37687]" dest="uint256: uint256 [37680,37687]"/>
  <match src="member_expression [39706,39717]" dest="member_expression [39706,39717]"/>
  <match src=":=: := [40695,40697]" dest=":=: := [40695,40697]"/>
  <match src="memory: memory [38180,38186]" dest="memory: memory [38180,38186]"/>
  <match src=".: . [39641,39642]" dest=".: . [39641,39642]"/>
  <match src="solidity_pragma_token [6313,6328]" dest="solidity_pragma_token [6313,6328]"/>
  <match src="returns: returns [18248,18255]" dest="returns: returns [18248,18255]"/>
  <match src="yul_evm_builtin [36893,36896]" dest="yul_evm_builtin [36893,36896]"/>
  <match src="(: ( [40067,40068]" dest="(: ( [40067,40068]"/>
  <match src="identifier: STRING_SHORT_START [34694,34712]" dest="identifier: STRING_SHORT_START [34694,34712]"/>
  <match src="(: ( [41438,41439]" dest="(: ( [41438,41439]"/>
  <match src="identifier: RLPItem [35520,35527]" dest="identifier: RLPItem [35520,35527]"/>
  <match src="): ) [36519,36520]" dest="): ) [36519,36520]"/>
  <match src="type_name [8551,8560]" dest="type_name [8551,8560]"/>
  <match src="primitive_type [36335,36339]" dest="primitive_type [36335,36339]"/>
  <match src="function_definition [24303,25282]" dest="function_definition [24303,25282]"/>
  <match src="identifier: target [23650,23656]" dest="identifier: target [23650,23656]"/>
  <match src="identifier: value [24267,24272]" dest="identifier: value [24267,24272]"/>
  <match src="uint256: uint256 [16853,16860]" dest="uint256: uint256 [16853,16860]"/>
  <match src="internal: internal [33085,33093]" dest="internal: internal [33085,33093]"/>
  <match src="&quot;: &quot; [22686,22687]" dest="&quot;: &quot; [22686,22687]"/>
  <match src="primitive_type [12443,12450]" dest="primitive_type [12443,12450]"/>
  <match src="type_name [27815,27839]" dest="type_name [27815,27839]"/>
  <match src="[: [ [47176,47177]" dest="[: [ [47174,47175]"/>
  <match src="function_definition [2875,2993]" dest="function_definition [2875,2993]"/>
  <match src="type_name [34925,34932]" dest="type_name [34925,34932]"/>
  <match src="primitive_type [35714,35721]" dest="primitive_type [35714,35721]"/>
  <match src="primitive_type [38514,38521]" dest="primitive_type [38514,38521]"/>
  <match src=".: . [13923,13924]" dest=".: . [13923,13924]"/>
  <match src="}: } [38614,38615]" dest="}: } [38614,38615]"/>
  <match src="identifier: role [30748,30752]" dest="identifier: role [30748,30752]"/>
  <match src="primitive_type [42158,42165]" dest="primitive_type [42158,42165]"/>
  <match src="member_expression [24633,24644]" dest="member_expression [24633,24644]"/>
  <match src="type_name [5486,5491]" dest="type_name [5486,5491]"/>
  <match src="parenthesized_expression [25234,25248]" dest="parenthesized_expression [25234,25248]"/>
  <match src="): ) [16124,16125]" dest="): ) [16124,16125]"/>
  <match src="if: if [42224,42226]" dest="if: if [42224,42226]"/>
  <match src="}: } [40849,40850]" dest="}: } [40849,40850]"/>
  <match src="public: public [29646,29652]" dest="public: public [29646,29652]"/>
  <match src="array_access [31598,31610]" dest="array_access [31598,31610]"/>
  <match src="): ) [40516,40517]" dest="): ) [40516,40517]"/>
  <match src="=: = [50304,50305]" dest="=: = [50919,50920]"/>
  <match src="parenthesized_expression [41677,41731]" dest="parenthesized_expression [41677,41731]"/>
  <match src="]: ] [52051,52052]" dest="]: ] [52783,52784]"/>
  <match src="primitive_type [52359,52366]" dest="primitive_type [53091,53098]"/>
  <match src="identifier: _roles [33756,33762]" dest="identifier: _roles [33756,33762]"/>
  <match src="call_argument [47633,47637]" dest="call_argument [47631,47635]"/>
  <match src="internal: internal [34096,34104]" dest="internal: internal [34096,34104]"/>
  <match src="identifier: account [31244,31251]" dest="identifier: account [31244,31251]"/>
  <match src="revert: revert [52781,52787]" dest="revert: revert [53513,53519]"/>
  <match src="primitive_type [34817,34822]" dest="primitive_type [34817,34822]"/>
  <match src="primitive_type [6135,6142]" dest="primitive_type [6135,6142]"/>
  <match src="variable_declaration_statement [38236,38282]" dest="variable_declaration_statement [38236,38282]"/>
  <match src="yul_function_call [37884,37897]" dest="yul_function_call [37884,37897]"/>
  <match src="primitive_type [34947,34954]" dest="primitive_type [34947,34954]"/>
  <match src="(: ( [35696,35697]" dest="(: ( [35696,35697]"/>
  <match src="parameter [2623,2633]" dest="parameter [2623,2633]"/>
  <match src="address: address [50168,50175]" dest="address: address [50783,50790]"/>
  <match src="}: } [25202,25203]" dest="}: } [25202,25203]"/>
  <match src="parameter [33716,33731]" dest="parameter [33716,33731]"/>
  <match src="(: ( [10800,10801]" dest="(: ( [10800,10801]"/>
  <match src="&quot;: &quot; [38371,38372]" dest="&quot;: &quot; [38371,38372]"/>
  <match src="event_definition [1615,1736]" dest="event_definition [1615,1736]"/>
  <match src="identifier: RLPItem [34906,34913]" dest="identifier: RLPItem [34906,34913]"/>
  <match src="comment: // Iteratively calculating amounts of token to be minted [49306,49362]" dest="comment: // Iteratively calculating amounts of token to be minted [49921,49977]"/>
  <match src="identifier: IMintableERC1155 [52110,52126]" dest="identifier: IMintableERC1155 [52842,52858]"/>
  <match src="identifier: set [18898,18901]" dest="identifier: set [18898,18901]"/>
  <match src="): ) [36964,36965]" dest="): ) [36964,36965]"/>
  <match src="primitive_type [30353,30360]" dest="primitive_type [30353,30360]"/>
  <match src="identifier: toRlpItem [35041,35050]" dest="identifier: toRlpItem [35041,35050]"/>
  <match src="{: { [18481,18482]" dest="{: { [18481,18482]"/>
  <match src="call_argument [31149,31161]" dest="call_argument [31149,31161]"/>
  <match src="pragma: pragma [33932,33938]" dest="pragma: pragma [33932,33938]"/>
  <match src="yul_decimal_number: 32 [25136,25138]" dest="yul_decimal_number: 32 [25136,25138]"/>
  <match src="member_expression [50306,50328]" dest="member_expression [50921,50943]"/>
  <match src="if: if [33555,33557]" dest="if: if [33555,33557]"/>
  <match src="uint256: uint256 [13892,13899]" dest="uint256: uint256 [13892,13899]"/>
  <match src="{: { [37987,37988]" dest="{: { [37987,37988]"/>
  <match src="identifier: addr [48479,48483]" dest="identifier: addr [49094,49098]"/>
  <match src="identifier: length [16799,16805]" dest="identifier: length [16799,16805]"/>
  <match src="identifier: _payloadOffset [39651,39665]" dest="identifier: _payloadOffset [39651,39665]"/>
  <match src="array_access [52032,52041]" dest="array_access [52764,52773]"/>
  <match src="storage: storage [18890,18897]" dest="storage: storage [18890,18897]"/>
  <match src="yul_decimal_number: 32 [41150,41152]" dest="yul_decimal_number: 32 [41150,41152]"/>
  <match src="yul_evm_builtin [42706,42709]" dest="yul_evm_builtin [42706,42709]"/>
  <match src="assignment_expression [36047,36083]" dest="assignment_expression [36047,36083]"/>
  <match src="): ) [29421,29422]" dest="): ) [29421,29422]"/>
  <match src="address: address [46863,46870]" dest="address: address [46861,46868]"/>
  <match src="variable_declaration [52085,52107]" dest="variable_declaration [52817,52839]"/>
  <match src="type_name [17994,18001]" dest="type_name [17994,18001]"/>
  <match src="identifier: len [34933,34936]" dest="identifier: len [34933,34936]"/>
  <match src="binary_expression [42620,42635]" dest="binary_expression [42620,42635]"/>
  <match src="call_argument [31125,31147]" dest="call_argument [31125,31147]"/>
  <match src="bytes32: bytes32 [28422,28429]" dest="bytes32: bytes32 [28422,28429]"/>
  <match src="indexed: indexed [1367,1374]" dest="indexed: indexed [1367,1374]"/>
  <match src="return_type_definition [30394,30411]" dest="return_type_definition [30394,30411]"/>
  <match src="primitive_type [16351,16358]" dest="primitive_type [16351,16358]"/>
  <match src="memory: memory [50286,50292]" dest="memory: memory [50901,50907]"/>
  <match src=".: . [16891,16892]" dest=".: . [16891,16892]"/>
  <match src="type_name [34225,34232]" dest="type_name [34225,34232]"/>
  <match src="expression_statement [50584,50751]" dest="expression_statement [51199,51366]"/>
  <match src="(: ( [38019,38020]" dest="(: ( [38019,38020]"/>
  <match src="library: library [34654,34661]" dest="library: library [34654,34661]"/>
  <match src="identifier: adminRole [27958,27967]" dest="identifier: adminRole [27958,27967]"/>
  <match src="address: address [45945,45952]" dest="address: address [45943,45950]"/>
  <match src="new: new [48382,48385]" dest="new: new [48997,49000]"/>
  <match src="parameter [3290,3306]" dest="parameter [3290,3306]"/>
  <match src="call_expression [37467,37524]" dest="call_expression [37467,37524]"/>
  <match src="identifier: require [10340,10347]" dest="identifier: require [10340,10347]"/>
  <match src="&lt;: &lt; [35974,35975]" dest="&lt;: &lt; [35974,35975]"/>
  <match src="(: ( [24009,24010]" dest="(: ( [24009,24010]"/>
  <match src="string_literal [44999,45013]" dest="string_literal [44997,45011]"/>
  <match src="call_argument [16091,16101]" dest="call_argument [16091,16101]"/>
  <match src="call_expression [45753,45791]" dest="call_expression [45751,45789]"/>
  <match src="pure: pure [39382,39386]" dest="pure: pure [39382,39386]"/>
  <match src="identifier: require [24458,24465]" dest="identifier: require [24458,24465]"/>
  <match src="comment: // topics [50410,50419]" dest="comment: // topics [51025,51034]"/>
  <match src="identifier: account [31719,31726]" dest="identifier: account [31719,31726]"/>
  <match src="&quot;: &quot; [45012,45013]" dest="&quot;: &quot; [45010,45011]"/>
  <match src="string_literal [35177,35210]" dest="string_literal [35177,35210]"/>
  <match src="type_name [4212,4219]" dest="type_name [4212,4219]"/>
  <match src="identifier: byteLen [41250,41257]" dest="identifier: byteLen [41250,41257]"/>
  <match src="yul_evm_builtin [41524,41529]" dest="yul_evm_builtin [41524,41529]"/>
  <match src="(: ( [52358,52359]" dest="(: ( [53090,53091]"/>
  <match src=".: . [46418,46419]" dest=".: . [46416,46417]"/>
  <match src="identifier: item [36956,36960]" dest="identifier: item [36956,36960]"/>
  <match src="type_name [12677,12684]" dest="type_name [12677,12684]"/>
  <match src="&quot;: &quot; [50738,50739]" dest="&quot;: &quot; [51353,51354]"/>
  <match src=",: , [51730,51731]" dest=",: , [52462,52463]"/>
  <match src="address: address [8528,8535]" dest="address: address [8528,8535]"/>
  <match src="return: return [16873,16879]" dest="return: return [16873,16879]"/>
  <match src="identifier: TRANSFER_SINGLE_EVENT_SIG [50807,50832]" dest="identifier: TRANSFER_SINGLE_EVENT_SIG [51422,51447]"/>
  <match src="mstore: mstore [42820,42826]" dest="mstore: mstore [42820,42826]"/>
  <match src="&quot;: &quot; [52788,52789]" dest="&quot;: &quot; [53520,53521]"/>
  <match src="variable_declaration [38884,38898]" dest="variable_declaration [38884,38898]"/>
  <match src="(: ( [38040,38041]" dest="(: ( [38040,38041]"/>
  <match src="identifier: count [39982,39987]" dest="identifier: count [39982,39987]"/>
  <match src="): ) [50320,50321]" dest="): ) [50935,50936]"/>
  <match src="solidity_version_comparison_operator [112,114]" dest="solidity_version_comparison_operator [112,114]"/>
  <match src="identifier: Address [19209,19216]" dest="identifier: Address [19209,19216]"/>
  <match src="-: - [13931,13932]" dest="-: - [13931,13932]"/>
  <match src="]: ] [2936,2937]" dest="]: ] [2936,2937]"/>
  <match src="visibility [17699,17707]" dest="visibility [17699,17707]"/>
  <match src=",: , [33630,33631]" dest=",: , [33630,33631]"/>
  <match src="uint256: uint256 [7341,7348]" dest="uint256: uint256 [7341,7348]"/>
  <match src="type_name [17454,17457]" dest="type_name [17454,17457]"/>
  <match src="uint256: uint256 [34925,34932]" dest="uint256: uint256 [34925,34932]"/>
  <match src="identifier: result [38006,38012]" dest="identifier: result [38006,38012]"/>
  <match src="solidity: solidity [19110,19118]" dest="solidity: solidity [19110,19118]"/>
  <match src="type_name [51154,51161]" dest="type_name [51769,51776]"/>
  <match src=",: , [41135,41136]" dest=",: , [41135,41136]"/>
  <match src="uint8: uint8 [34861,34866]" dest="uint8: uint8 [34861,34866]"/>
  <match src="identifier: toUint [50633,50639]" dest="identifier: toUint [51248,51254]"/>
  <match src="identifier: logTopicRLPList [50517,50532]" dest="identifier: logTopicRLPList [51132,51147]"/>
  <match src=",: , [37981,37982]" dest=",: , [37981,37982]"/>
  <match src="[: [ [4772,4773]" dest="[: [ [4772,4773]"/>
  <match src="identifier: item [38775,38779]" dest="identifier: item [38775,38779]"/>
  <match src="call_argument [22649,22653]" dest="call_argument [22649,22653]"/>
  <match src="type_name [38236,38243]" dest="type_name [38236,38243]"/>
  <match src="&quot;: &quot; [49118,49119]" dest="&quot;: &quot; [49733,49734]"/>
  <match src="identifier: _msgSender [31149,31159]" dest="identifier: _msgSender [31149,31159]"/>
  <match src="&quot;: &quot; [45223,45224]" dest="&quot;: &quot; [45221,45222]"/>
  <match src="(: ( [40707,40708]" dest="(: ( [40707,40708]"/>
  <match src="bytes32: bytes32 [20133,20140]" dest="bytes32: bytes32 [20133,20140]"/>
  <match src="comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [14071,14163]" dest="comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [14071,14163]"/>
  <match src="identifier: amount [21480,21486]" dest="identifier: amount [21480,21486]"/>
  <match src="(: ( [50473,50474]" dest="(: ( [51088,51089]"/>
  <match src="identifier: RLPReader [50341,50350]" dest="identifier: RLPReader [50956,50965]"/>
  <match src="member_expression [15164,15175]" dest="member_expression [15164,15175]"/>
  <match src="identifier: set [18444,18447]" dest="identifier: set [18444,18447]"/>
  <match src="): ) [46957,46958]" dest="): ) [46955,46956]"/>
  <match src="call_expression [38763,38787]" dest="call_expression [38763,38787]"/>
  <match src="event_paramater [1718,1734]" dest="event_paramater [1718,1734]"/>
  <match src="identifier: memPtr [38597,38603]" dest="identifier: memPtr [38597,38603]"/>
  <match src="uint256: uint256 [42136,42143]" dest="uint256: uint256 [42136,42143]"/>
  <match src="identifier: _inner [18295,18301]" dest="identifier: _inner [18295,18301]"/>
  <match src="&quot;: &quot; [21488,21489]" dest="&quot;: &quot; [21488,21489]"/>
  <match src="return_statement [39199,39213]" dest="return_statement [39199,39213]"/>
  <match src="(: ( [47337,47338]" dest="(: ( [47335,47336]"/>
  <match src="identifier: withdrawer [50496,50506]" dest="identifier: withdrawer [51111,51121]"/>
  <match src="(: ( [42409,42410]" dest="(: ( [42409,42410]"/>
  <match src="): ) [45790,45791]" dest="): ) [45788,45789]"/>
  <match src=",: , [47154,47155]" dest=",: , [47152,47153]"/>
  <match src="{: { [38731,38732]" dest="{: { [38731,38732]"/>
  <match src="identifier: tokenBalances [49262,49275]" dest="identifier: tokenBalances [49877,49890]"/>
  <match src="primitive_type [36812,36817]" dest="primitive_type [36812,36817]"/>
  <match src="yul_hex_number: 0xb7 [40512,40516]" dest="yul_hex_number: 0xb7 [40512,40516]"/>
  <match src=".: . [10887,10888]" dest=".: . [10887,10888]"/>
  <match src="primitive_type [16853,16860]" dest="primitive_type [16853,16860]"/>
  <match src="string [31637,31687]" dest="string [31637,31687]"/>
  <match src="identifier: _INTERFACE_ID_ERC165 [9144,9164]" dest="identifier: _INTERFACE_ID_ERC165 [9144,9164]"/>
  <match src="==: == [50643,50645]" dest="==: == [51258,51260]"/>
  <match src="string [45068,45085]" dest="string [45066,45083]"/>
  <match src=",: , [24368,24369]" dest=",: , [24368,24369]"/>
  <match src="primitive_type [51584,51589]" dest="primitive_type [52316,52321]"/>
  <match src="parameter [46302,46316]" dest="parameter [46300,46314]"/>
  <match src="primitive_type [34861,34866]" dest="primitive_type [34861,34866]"/>
  <match src="return_statement [38627,38641]" dest="return_statement [38627,38641]"/>
  <match src="comment: // To implement this library for multiple types with as little code [11763,11830]" dest="comment: // To implement this library for multiple types with as little code [11763,11830]"/>
  <match src="state_mutability [48990,48994]" dest="state_mutability [49605,49609]"/>
  <match src="type_name [10292,10298]" dest="type_name [10292,10298]"/>
  <match src="): ) [41537,41538]" dest="): ) [41537,41538]"/>
  <match src="primitive_type [48353,48360]" dest="primitive_type [48968,48975]"/>
  <match src="new: new [35683,35686]" dest="new: new [35683,35686]"/>
  <match src="(: ( [3510,3511]" dest="(: ( [3510,3511]"/>
  <match src="call_argument [32435,32442]" dest="call_argument [32435,32442]"/>
  <match src="call_argument [47611,47618]" dest="call_argument [47609,47616]"/>
  <match src=",: , [1383,1384]" dest=",: , [1383,1384]"/>
  <match src="bytes4: bytes4 [818,824]" dest="bytes4: bytes4 [818,824]"/>
  <match src="=: = [45287,45288]" dest="=: = [45285,45286]"/>
  <match src="type_name [38216,38223]" dest="type_name [38216,38223]"/>
  <match src="call_argument [45827,45833]" dest="call_argument [45825,45831]"/>
  <match src="(: ( [51062,51063]" dest="(: ( [51677,51678]"/>
  <match src="primitive_type [16680,16687]" dest="primitive_type [16680,16687]"/>
  <match src="identifier: functionCall [22935,22947]" dest="identifier: functionCall [22935,22947]"/>
  <match src="identifier: this [52367,52371]" dest="identifier: this [53099,53103]"/>
  <match src="[: [ [45549,45550]" dest="[: [ [45547,45548]"/>
  <match src="uint8: uint8 [34772,34777]" dest="uint8: uint8 [34772,34777]"/>
  <match src="(: ( [51541,51542]" dest="(: ( [52161,52162]"/>
  <match src="abstract: abstract [10651,10659]" dest="abstract: abstract [10651,10659]"/>
  <match src="call_expression [23628,23715]" dest="call_expression [23628,23715]"/>
  <match src="call_expression [51626,51798]" dest="call_expression [52358,52530]"/>
  <match src="identifier: byte0 [40417,40422]" dest="identifier: byte0 [40417,40422]"/>
  <match src="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [21770,22517]" dest="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [21770,22517]"/>
  <match src=",: , [44843,44844]" dest=",: , [44841,44842]"/>
  <match src="function: function [46166,46174]" dest="function: function [46164,46172]"/>
  <match src="solidity: solidity [6313,6321]" dest="solidity: solidity [6313,6321]"/>
  <match src="return: return [18274,18280]" dest="return: return [18274,18280]"/>
  <match src="identifier: RLPItem [35687,35694]" dest="identifier: RLPItem [35687,35694]"/>
  <match src="binary_expression [38806,38828]" dest="binary_expression [38806,38828]"/>
  <match src="primitive_type [51193,51200]" dest="primitive_type [51808,51815]"/>
  <match src="identifier: contains [18189,18197]" dest="identifier: contains [18189,18197]"/>
  <match src="call_argument [24139,24169]" dest="call_argument [24139,24169]"/>
  <match src="event_paramater [1661,1681]" dest="event_paramater [1661,1681]"/>
  <match src=":=: := [36890,36892]" dest=":=: := [36890,36892]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [8758,8789]" dest="comment: // SPDX-License-Identifier: MIT [8758,8789]"/>
  <match src="visibility [44373,44381]" dest="visibility [44373,44381]"/>
  <match src="for: for [42305,42308]" dest="for: for [42305,42308]"/>
  <match src=",: , [33830,33831]" dest=",: , [33830,33831]"/>
  <match src="memory: memory [47179,47185]" dest="memory: memory [47177,47183]"/>
  <match src="primitive_type [24045,24052]" dest="primitive_type [24045,24052]"/>
  <match src="(: ( [48887,48888]" dest="(: ( [49502,49503]"/>
  <match src="pragma_directive [10577,10600]" dest="pragma_directive [10577,10600]"/>
  <match src="return_statement [18044,18087]" dest="return_statement [18044,18087]"/>
  <match src="identifier: _setupRole [33043,33053]" dest="identifier: _setupRole [33043,33053]"/>
  <match src="variable_declaration_statement [35616,35647]" dest="variable_declaration_statement [35616,35647]"/>
  <match src="block_statement [40443,40861]" dest="block_statement [40443,40861]"/>
  <match src="identifier: errorMessage [24274,24286]" dest="identifier: errorMessage [24274,24286]"/>
  <match src="contract_body [9027,10468]" dest="contract_body [9027,10468]"/>
  <match src="identifier: _registerInterface [10752,10770]" dest="identifier: _registerInterface [10752,10770]"/>
  <match src="identifier: _registerInterface [9510,9528]" dest="identifier: _registerInterface [9510,9528]"/>
  <match src="(: ( [17745,17746]" dest="(: ( [17745,17746]"/>
  <match src="primitive_type [24351,24356]" dest="primitive_type [24351,24356]"/>
  <match src="identifier: RLPItem [36291,36298]" dest="identifier: RLPItem [36291,36298]"/>
  <match src="identifier: _setupContractId [34053,34069]" dest="identifier: _setupContractId [34053,34069]"/>
  <match src="parameter [46897,46914]" dest="parameter [46895,46912]"/>
  <match src="sub: sub [41025,41028]" dest="sub: sub [41025,41028]"/>
  <match src="primitive_type [40106,40113]" dest="primitive_type [40106,40113]"/>
  <match src="primitive_type [52188,52195]" dest="primitive_type [52920,52927]"/>
  <match src="{: { [37387,37388]" dest="{: { [37387,37388]"/>
  <match src="call_expression [44554,44588]" dest="call_expression [44554,44588]"/>
  <match src="struct_member [12268,12286]" dest="struct_member [12268,12286]"/>
  <match src="identifier: index [18992,18997]" dest="identifier: index [18992,18997]"/>
  <match src="call_argument [52188,52201]" dest="call_argument [52920,52933]"/>
  <match src="string [35576,35602]" dest="string [35576,35602]"/>
  <match src="{: { [40115,40116]" dest="{: { [40115,40116]"/>
  <match src="state_mutability [29346,29350]" dest="state_mutability [29346,29350]"/>
  <match src="identifier: item [39706,39710]" dest="identifier: item [39706,39710]"/>
  <match src="identifier: amounts [52698,52705]" dest="identifier: amounts [53430,53437]"/>
  <match src="member_expression [38314,38322]" dest="member_expression [38314,38322]"/>
  <match src="type_name [35120,35127]" dest="type_name [35120,35127]"/>
  <match src="parameter [12660,12675]" dest="parameter [12660,12675]"/>
  <match src="type_name [22545,22552]" dest="type_name [22545,22552]"/>
  <match src="primitive_type [6099,6106]" dest="primitive_type [6099,6106]"/>
  <match src="=: = [38899,38900]" dest="=: = [38899,38900]"/>
  <match src="expression_statement [31582,31689]" dest="expression_statement [31582,31689]"/>
  <match src="member_expression [30741,30763]" dest="member_expression [30741,30763]"/>
  <match src="pragma_directive [42943,42965]" dest="pragma_directive [42943,42965]"/>
  <match src="]: ] [14444,14445]" dest="]: ] [14444,14445]"/>
  <match src="primitive_type [30714,30721]" dest="primitive_type [30714,30721]"/>
  <match src="identifier: initialize [45639,45649]" dest="identifier: initialize [45637,45647]"/>
  <match src="identifier: _msgSender [25955,25965]" dest="identifier: _msgSender [25955,25965]"/>
  <match src="solidity: solidity [25383,25391]" dest="solidity: solidity [25383,25391]"/>
  <match src="identifier: Context [25931,25938]" dest="identifier: Context [25931,25938]"/>
  <match src="identifier: len [38960,38963]" dest="identifier: len [38960,38963]"/>
  <match src="): ) [17390,17391]" dest="): ) [17390,17391]"/>
  <match src="primitive_type [10292,10298]" dest="primitive_type [10292,10298]"/>
  <match src="identifier: data [23658,23662]" dest="identifier: data [23658,23662]"/>
  <match src="type_name [36352,36357]" dest="type_name [36352,36357]"/>
  <match src="(: ( [40729,40730]" dest="(: ( [40729,40730]"/>
  <match src="number_literal: 0xc0 [34806,34810]" dest="number_literal: 0xc0 [34806,34810]"/>
  <match src="]: ] [35665,35666]" dest="]: ] [35665,35666]"/>
  <match src="}: } [36996,36997]" dest="}: } [36996,36997]"/>
  <match src="yul_decimal_number: 256 [41141,41144]" dest="yul_decimal_number: 256 [41141,41144]"/>
  <match src="&quot;: &quot; [45167,45168]" dest="&quot;: &quot; [45165,45166]"/>
  <match src="call_expression [47239,47293]" dest="call_expression [47237,47291]"/>
  <match src="pragma: pragma [11017,11023]" dest="pragma: pragma [11017,11023]"/>
  <match src="return_type_definition [36326,36340]" dest="return_type_definition [36326,36340]"/>
  <match src="): ) [29722,29723]" dest="): ) [29722,29723]"/>
  <match src="type_name [43691,43698]" dest="type_name [43691,43698]"/>
  <match src="string [37421,37455]" dest="string [37421,37455]"/>
  <match src="): ) [29364,29365]" dest="): ) [29364,29365]"/>
  <match src="identifier: sendValue [21374,21383]" dest="identifier: sendValue [21374,21383]"/>
  <match src="identifier: data [24261,24265]" dest="identifier: data [24261,24265]"/>
  <match src="calldata: calldata [46254,46262]" dest="calldata: calldata [46252,46260]"/>
  <match src="function_body [50255,52856]" dest="function_body [50870,53588]"/>
  <match src="): ) [14943,14944]" dest="): ) [14943,14944]"/>
  <match src="call_argument [51774,51783]" dest="call_argument [52506,52515]"/>
  <match src="identifier: set [18507,18510]" dest="identifier: set [18507,18510]"/>
  <match src="comment: // UintSet [17410,17420]" dest="comment: // UintSet [17410,17420]"/>
  <match src="string [50695,50739]" dest="string [51310,51354]"/>
  <match src="external: external [46039,46047]" dest="external: external [46037,46045]"/>
  <match src="type_name [46244,46251]" dest="type_name [46242,46249]"/>
  <match src="}: } [18093,18094]" dest="}: } [18093,18094]"/>
  <match src="): ) [26014,26015]" dest="): ) [26014,26015]"/>
  <match src="identifier: withdrawer [52647,52657]" dest="identifier: withdrawer [53379,53389]"/>
  <match src="indexed: indexed [28452,28459]" dest="indexed: indexed [28452,28459]"/>
  <match src="identifier: srcpart [42846,42853]" dest="identifier: srcpart [42846,42853]"/>
  <match src="primitive_type [18303,18310]" dest="primitive_type [18303,18310]"/>
  <match src="identifier: i [49541,49542]" dest="identifier: i [50156,50157]"/>
  <match src="(: ( [50139,50140]" dest="(: ( [50754,50755]"/>
  <match src="primitive_type [52506,52511]" dest="primitive_type [53238,53243]"/>
  <match src="): ) [42703,42704]" dest="): ) [42703,42704]"/>
  <match src="identifier: memPtr [41530,41536]" dest="identifier: memPtr [41530,41536]"/>
  <match src="): ) [10802,10803]" dest="): ) [10802,10803]"/>
  <match src="number_literal: 0 [42235,42236]" dest="number_literal: 0 [42235,42236]"/>
  <match src="): ) [41446,41447]" dest="): ) [41446,41447]"/>
  <match src="type_name [35857,35864]" dest="type_name [35857,35864]"/>
  <match src="number_literal: 1 [41933,41934]" dest="number_literal: 1 [41933,41934]"/>
  <match src="call_argument [37096,37109]" dest="call_argument [37096,37109]"/>
  <match src="]: ] [47142,47143]" dest="]: ] [47140,47141]"/>
  <match src="constant: constant [34867,34875]" dest="constant: constant [34867,34875]"/>
  <match src="virtual: virtual [33094,33101]" dest="virtual: virtual [33094,33101]"/>
  <match src="address: address [3511,3518]" dest="address: address [3511,3518]"/>
  <match src="storage: storage [14889,14896]" dest="storage: storage [14889,14896]"/>
  <match src="call_expression [31149,31161]" dest="call_expression [31149,31161]"/>
  <match src="assignment_expression [10417,10457]" dest="assignment_expression [10417,10457]"/>
  <match src="uint256: uint256 [39689,39696]" dest="uint256: uint256 [39689,39696]"/>
  <match src="yul_path [35271,35277]" dest="yul_path [35271,35277]"/>
  <match src="[: [ [31131,31132]" dest="[: [ [31131,31132]"/>
  <match src="number_literal: 0 [23098,23099]" dest="number_literal: 0 [23098,23099]"/>
  <match src="identifier: LockedBatchMintableERC1155 [45391,45417]" dest="identifier: LockedBatchMintableERC1155 [45389,45415]"/>
  <match src="primitive_type [35051,35056]" dest="primitive_type [35051,35056]"/>
  <match src="uint256: uint256 [52043,52050]" dest="uint256: uint256 [52775,52782]"/>
  <match src="yul_decimal_number: 32 [37983,37985]" dest="yul_decimal_number: 32 [37983,37985]"/>
  <match src="call_argument [37475,37489]" dest="call_argument [37475,37489]"/>
  <match src="primitive_type [2975,2982]" dest="primitive_type [2975,2982]"/>
  <match src="function_definition [15081,15190]" dest="function_definition [15081,15190]"/>
  <match src="identifier: memPtr [38780,38786]" dest="identifier: memPtr [38780,38786]"/>
  <match src="yul_identifier [41029,41034]" dest="yul_identifier [41029,41034]"/>
  <match src="expression_statement [37398,37457]" dest="expression_statement [37398,37457]"/>
  <match src="call_expression [34250,34335]" dest="call_expression [34250,34335]"/>
  <match src="(: ( [28421,28422]" dest="(: ( [28421,28422]"/>
  <match src="return_type_definition [38207,38224]" dest="return_type_definition [38207,38224]"/>
  <match src="[: [ [6118,6119]" dest="[: [ [6118,6119]"/>
  <match src="call_expression [47477,47648]" dest="call_expression [47475,47646]"/>
  <match src="assignment_expression [12930,12970]" dest="assignment_expression [12930,12970]"/>
  <match src="type_name [26111,26116]" dest="type_name [26111,26116]"/>
  <match src="binary_expression [49548,49572]" dest="binary_expression [50163,50187]"/>
  <match src="parameter [7448,7454]" dest="parameter [7448,7454]"/>
  <match src="identifier: UintSet [18882,18889]" dest="identifier: UintSet [18882,18889]"/>
  <match src="(: ( [40222,40223]" dest="(: ( [40222,40223]"/>
  <match src="}: } [34354,34355]" dest="}: } [34354,34355]"/>
  <match src="}: } [38076,38077]" dest="}: } [38076,38077]"/>
  <match src="parameter [15098,15113]" dest="parameter [15098,15113]"/>
  <match src=",: , [33388,33389]" dest=",: , [33388,33389]"/>
  <match src="identifier: selector [46419,46427]" dest="identifier: selector [46417,46425]"/>
  <match src="function: function [21365,21373]" dest="function: function [21365,21373]"/>
  <match src="(: ( [18310,18311]" dest="(: ( [18310,18311]"/>
  <match src="comment: // All indexes are 1-based [14467,14493]" dest="comment: // All indexes are 1-based [14467,14493]"/>
  <match src="indexed: indexed [28487,28494]" dest="indexed: indexed [28487,28494]"/>
  <match src="): ) [30691,30692]" dest="): ) [30691,30692]"/>
  <match src="type_cast_expression [17352,17392]" dest="type_cast_expression [17352,17392]"/>
  <match src="comment: /**      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.      *      * Requirements:      *      * - `accounts` and `ids` must have the same length.      */ [2675,2869]" dest="comment: /**      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.      *      * Requirements:      *      * - `accounts` and `ids` must have the same length.      */ [2675,2869]"/>
  <match src="if_statement [41561,41940]" dest="if_statement [41561,41940]"/>
  <match src="parameter [46925,46951]" dest="parameter [46923,46949]"/>
  <match src=",: , [38035,38036]" dest=",: , [38035,38036]"/>
  <match src="returns: returns [24097,24104]" dest="returns: returns [24097,24104]"/>
  <match src="pragma_directive [97,120]" dest="pragma_directive [97,120]"/>
  <match src="primitive_type [16436,16443]" dest="primitive_type [16436,16443]"/>
  <match src="variable_declaration_statement [38884,38929]" dest="variable_declaration_statement [38884,38929]"/>
  <match src="block_statement [13494,14728]" dest="block_statement [13494,14728]"/>
  <match src="uint256: uint256 [38884,38891]" dest="uint256: uint256 [38884,38891]"/>
  <match src="yul_path [42710,42714]" dest="yul_path [42710,42714]"/>
  <match src="(: ( [18427,18428]" dest="(: ( [18427,18428]"/>
  <match src="type_name [51948,51955]" dest="type_name [52680,52687]"/>
  <match src="=: = [14197,14198]" dest="=: = [14197,14198]"/>
  <match src="identifier: _revokeRole [33690,33701]" dest="identifier: _revokeRole [33690,33701]"/>
  <match src="pure: pure [48990,48994]" dest="pure: pure [49605,49609]"/>
  <match src="identifier: WORD_SIZE [42337,42346]" dest="identifier: WORD_SIZE [42337,42346]"/>
  <match src="): ) [41163,41164]" dest="): ) [41163,41164]"/>
  <match src="identifier: set [16024,16027]" dest="identifier: set [16024,16027]"/>
  <match src="identifier: this [51201,51205]" dest="identifier: this [51816,51820]"/>
  <match src="type_name [2975,2982]" dest="type_name [2975,2982]"/>
  <match src="identifier: memPtr [37824,37830]" dest="identifier: memPtr [37824,37830]"/>
  <match src="identifier: byte0 [36437,36442]" dest="identifier: byte0 [36437,36442]"/>
  <match src="(: ( [42765,42766]" dest="(: ( [42765,42766]"/>
  <match src="): ) [33534,33535]" dest="): ) [33534,33535]"/>
  <match src="identifier: _setupRole [45802,45812]" dest="identifier: _setupRole [45800,45810]"/>
  <match src="override_specifier [9774,9782]" dest="override_specifier [9774,9782]"/>
  <match src="identifier: Initializable [44471,44484]" dest="identifier: Initializable [44471,44484]"/>
  <match src="yul_path [41059,41065]" dest="yul_path [41059,41065]"/>
  <match src="call_argument [52412,52415]" dest="call_argument [53144,53147]"/>
  <match src="array_access [33390,33402]" dest="array_access [33390,33402]"/>
  <match src="yul_assignment [38581,38604]" dest="yul_assignment [38581,38604]"/>
  <match src="identifier: _itemLength [38257,38268]" dest="identifier: _itemLength [38257,38268]"/>
  <match src="identifier: _grantRole [31227,31237]" dest="identifier: _grantRole [31227,31237]"/>
  <match src="memory: memory [48949,48955]" dest="memory: memory [49564,49570]"/>
  <match src="uint256: uint256 [8551,8558]" dest="uint256: uint256 [8551,8558]"/>
  <match src="(: ( [44561,44562]" dest="(: ( [44561,44562]"/>
  <match src="(: ( [37095,37096]" dest="(: ( [37095,37096]"/>
  <match src=".: . [33447,33448]" dest=".: . [33447,33448]"/>
  <match src="virtual: virtual [25982,25989]" dest="virtual: virtual [25982,25989]"/>
  <match src="returns: returns [7440,7447]" dest="returns: returns [7440,7447]"/>
  <match src="): ) [35536,35537]" dest="): ) [35536,35537]"/>
  <match src=",: , [36901,36902]" dest=",: , [36901,36902]"/>
  <match src="identifier: inited [44563,44569]" dest="identifier: inited [44563,44569]"/>
  <match src="identifier: logData [50945,50952]" dest="identifier: logData [51560,51567]"/>
  <match src="{: { [1203,1204]" dest="{: { [1203,1204]"/>
  <match src="(: ( [3289,3290]" dest="(: ( [3289,3290]"/>
  <match src="expression_statement [32417,32444]" dest="expression_statement [32417,32444]"/>
  <match src="&quot;: &quot; [37625,37626]" dest="&quot;: &quot; [37625,37626]"/>
  <match src="memory: memory [23035,23041]" dest="memory: memory [23035,23041]"/>
  <match src="identifier: memPtr [35271,35277]" dest="identifier: memPtr [35271,35277]"/>
  <match src="): ) [18084,18085]" dest="): ) [18084,18085]"/>
  <match src="&quot;: &quot; [44571,44572]" dest="&quot;: &quot; [44571,44572]"/>
  <match src=",: , [31717,31718]" dest=",: , [31717,31718]"/>
  <match src="variable_declaration_statement [42599,42641]" dest="variable_declaration_statement [42599,42641]"/>
  <match src="comment: /*      * @param item RLP encoded bytes      */ [34977,35026]" dest="comment: /*      * @param item RLP encoded bytes      */ [34977,35026]"/>
  <match src="if_statement [49594,49736]" dest="if_statement [50209,50351]"/>
  <match src="parameter [19871,19875]" dest="parameter [19871,19875]"/>
  <match src="binary_expression [51489,51510]" dest="binary_expression [52104,52125]"/>
  <match src="=&gt;: =&gt; [28000,28002]" dest="=&gt;: =&gt; [28000,28002]"/>
  <match src="member_expression [50614,50639]" dest="member_expression [51229,51254]"/>
  <match src="return_type_definition [16375,16389]" dest="return_type_definition [16375,16389]"/>
  <match src="if: if [24825,24827]" dest="if: if [24825,24827]"/>
  <match src="address: address [4200,4207]" dest="address: address [4200,4207]"/>
  <match src="yul_function_call [40209,40231]" dest="yul_function_call [40209,40231]"/>
  <match src="): ) [42346,42347]" dest="): ) [42346,42347]"/>
  <match src="&quot;: &quot; [38436,38437]" dest="&quot;: &quot; [38436,38437]"/>
  <match src="}: } [48530,48531]" dest="}: } [49145,49146]"/>
  <match src="primitive_type [31539,31546]" dest="primitive_type [31539,31546]"/>
  <match src="parameter [40068,40082]" dest="parameter [40068,40082]"/>
  <match src="call_argument [50775,50802]" dest="call_argument [51390,51417]"/>
  <match src="return_type_definition [24424,24446]" dest="return_type_definition [24424,24446]"/>
  <match src="call_argument [38269,38280]" dest="call_argument [38269,38280]"/>
  <match src="call_expression [33113,33138]" dest="call_expression [33113,33138]"/>
  <match src="variable_declaration_statement [13892,13935]" dest="variable_declaration_statement [13892,13935]"/>
  <match src="primitive_type [34012,34018]" dest="primitive_type [34012,34018]"/>
  <match src="string [34165,34193]" dest="string [34165,34193]"/>
  <match src="call_expression [38292,38373]" dest="call_expression [38292,38373]"/>
  <match src="visibility [24416,24423]" dest="visibility [24416,24423]"/>
  <match src="call_argument [37225,37260]" dest="call_argument [37225,37260]"/>
  <match src="internal: internal [16366,16374]" dest="internal: internal [16366,16374]"/>
  <match src="identifier: account [29330,29337]" dest="identifier: account [29330,29337]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [16914,17245]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [16914,17245]"/>
  <match src="identifier: only [46977,46981]" dest="identifier: only [46975,46979]"/>
  <match src="primitive_type [38884,38891]" dest="primitive_type [38884,38891]"/>
  <match src="(: ( [41400,41401]" dest="(: ( [41400,41401]"/>
  <match src="call_argument [38300,38322]" dest="call_argument [38300,38322]"/>
  <match src="event_paramater [1972,1985]" dest="event_paramater [1972,1985]"/>
  <match src="yul_evm_builtin [41516,41520]" dest="yul_evm_builtin [41516,41520]"/>
  <match src="): ) [17391,17392]" dest="): ) [17391,17392]"/>
  <match src="identifier: byte0 [41507,41512]" dest="identifier: byte0 [41507,41512]"/>
  <match src="call_argument [46393,46394]" dest="call_argument [46391,46392]"/>
  <match src="identifier: set [14897,14900]" dest="identifier: set [14897,14900]"/>
  <match src="identifier: sender [44295,44301]" dest="identifier: sender [44295,44301]"/>
  <match src="): ) [45741,45742]" dest="): ) [45739,45740]"/>
  <match src="call_argument [35177,35210]" dest="call_argument [35177,35210]"/>
  <match src="identifier: memPtr [40570,40576]" dest="identifier: memPtr [40570,40576]"/>
  <match src="identifier: offset [39167,39173]" dest="identifier: offset [39167,39173]"/>
  <match src=",: , [21486,21487]" dest=",: , [21486,21487]"/>
  <match src="indexed: indexed [28430,28437]" dest="indexed: indexed [28430,28437]"/>
  <match src="call_argument [52374,52384]" dest="call_argument [53106,53116]"/>
  <match src=",: , [4210,4211]" dest=",: , [4210,4211]"/>
  <match src="identifier: require [35152,35159]" dest="identifier: require [35152,35159]"/>
  <match src="uint256: uint256 [36374,36381]" dest="uint256: uint256 [36374,36381]"/>
  <match src="call_argument [37209,37223]" dest="call_argument [37209,37223]"/>
  <match src=":=: := [41513,41515]" dest=":=: := [41513,41515]"/>
  <match src="member_expression [12952,12970]" dest="member_expression [12952,12970]"/>
  <match src="function: function [4684,4692]" dest="function: function [4684,4692]"/>
  <match src="identifier: keccak256 [45058,45067]" dest="identifier: keccak256 [45056,45065]"/>
  <match src="parameter [21411,21425]" dest="parameter [21411,21425]"/>
  <match src="}: } [29429,29430]" dest="}: } [29429,29430]"/>
  <match src="primitive_type [2360,2366]" dest="primitive_type [2360,2366]"/>
  <match src="): ) [13492,13493]" dest="): ) [13492,13493]"/>
  <match src="member_expression [14963,14975]" dest="member_expression [14963,14975]"/>
  <match src="(: ( [32263,32264]" dest="(: ( [32263,32264]"/>
  <match src="(: ( [16563,16564]" dest="(: ( [16563,16564]"/>
  <match src="member_expression [33756,33783]" dest="member_expression [33756,33783]"/>
  <match src="identifier: safeTransferFrom [51632,51648]" dest="identifier: safeTransferFrom [52364,52380]"/>
  <match src="(: ( [24663,24664]" dest="(: ( [24663,24664]"/>
  <match src="&gt;: &gt; [15648,15649]" dest="&gt;: &gt; [15648,15649]"/>
  <match src="): ) [38223,38224]" dest="): ) [38223,38224]"/>
  <match src="constant: constant [9135,9143]" dest="constant: constant [9135,9143]"/>
  <match src="bytes32: bytes32 [12432,12439]" dest="bytes32: bytes32 [12432,12439]"/>
  <match src="(: ( [31237,31238]" dest="(: ( [31237,31238]"/>
  <match src="identifier: IERC165 [423,430]" dest="identifier: IERC165 [423,430]"/>
  <match src="yul_function_call [41069,41083]" dest="yul_function_call [41069,41083]"/>
  <match src="if_statement [51816,52849]" dest="if_statement [52548,53581]"/>
  <match src="{: { [18033,18034]" dest="{: { [18033,18034]"/>
  <match src="else: else [51811,51815]" dest="else: else [52543,52547]"/>
  <match src="indexed: indexed [29158,29165]" dest="indexed: indexed [29158,29165]"/>
  <match src="): ) [18916,18917]" dest="): ) [18916,18917]"/>
  <match src="=: = [48380,48381]" dest="=: = [48995,48996]"/>
  <match src="uint256: uint256 [37735,37742]" dest="uint256: uint256 [37735,37742]"/>
  <match src="parameter [29632,29644]" dest="parameter [29632,29644]"/>
  <match src="yul_function_call [35281,35296]" dest="yul_function_call [35281,35296]"/>
  <match src="primitive_type [48898,48905]" dest="primitive_type [49513,49520]"/>
  <match src="primitive_type [16111,16118]" dest="primitive_type [16111,16118]"/>
  <match src="type_name [15564,15571]" dest="type_name [15564,15571]"/>
  <match src="solidity_version: 0.6.0 [25393,25398]" dest="solidity_version: 0.6.0 [25393,25398]"/>
  <match src="identifier: result [36903,36909]" dest="identifier: result [36903,36909]"/>
  <match src="identifier: item [37615,37619]" dest="identifier: item [37615,37619]"/>
  <match src="solidity_version_comparison_operator [25391,25393]" dest="solidity_version_comparison_operator [25391,25393]"/>
  <match src="identifier: target [22553,22559]" dest="identifier: target [22553,22559]"/>
  <match src="call_argument [51590,51592]" dest="call_argument [52322,52324]"/>
  <match src="pragma: pragma [10577,10583]" dest="pragma: pragma [10577,10583]"/>
  <match src="if_statement [40413,41288]" dest="if_statement [40413,41288]"/>
  <match src="contract_declaration [27741,33876]" dest="contract_declaration [27741,33876]"/>
  <match src="identifier: LIST_SHORT_START [41687,41703]" dest="identifier: LIST_SHORT_START [41687,41703]"/>
  <match src="(: ( [7447,7448]" dest="(: ( [7447,7448]"/>
  <match src="=: = [34713,34714]" dest="=: = [34713,34714]"/>
  <match src="identifier: value [17692,17697]" dest="identifier: value [17692,17697]"/>
  <match src="returns: returns [38207,38214]" dest="returns: returns [38207,38214]"/>
  <match src="identifier: members [27932,27939]" dest="identifier: members [27932,27939]"/>
  <match src=".: . [16663,16664]" dest=".: . [16663,16664]"/>
  <match src="(: ( [41127,41128]" dest="(: ( [41127,41128]"/>
  <match src="): ) [30410,30411]" dest="): ) [30410,30411]"/>
  <match src="binary_expression [49598,49634]" dest="binary_expression [50213,50249]"/>
  <match src="bytes4: bytes4 [9742,9748]" dest="bytes4: bytes4 [9742,9748]"/>
  <match src="user_defined_type [50341,50358]" dest="user_defined_type [50956,50973]"/>
  <match src="view: view [30700,30704]" dest="view: view [30700,30704]"/>
  <match src="primitive_type [48419,48426]" dest="primitive_type [49034,49041]"/>
  <match src="private: private [40084,40091]" dest="private: private [40084,40091]"/>
  <match src="(: ( [12740,12741]" dest="(: ( [12740,12741]"/>
  <match src="function_definition [33681,33873]" dest="function_definition [33681,33873]"/>
  <match src="): ) [38280,38281]" dest="): ) [38280,38281]"/>
  <match src="bytes32: bytes32 [12268,12275]" dest="bytes32: bytes32 [12268,12275]"/>
  <match src="==: == [35789,35791]" dest="==: == [35789,35791]"/>
  <match src="abstract: abstract [25913,25921]" dest="abstract: abstract [25913,25921]"/>
  <match src="type_name [5458,5465]" dest="type_name [5458,5465]"/>
  <match src="yul_path [40810,40817]" dest="yul_path [40810,40817]"/>
  <match src="primitive_type [7291,7298]" dest="primitive_type [7291,7298]"/>
  <match src="identifier: _values [15716,15723]" dest="identifier: _values [15716,15723]"/>
  <match src="yul_identifier [25092,25102]" dest="yul_identifier [25092,25102]"/>
  <match src="address: address [29322,29329]" dest="address: address [29322,29329]"/>
  <match src="primitive_type [51948,51955]" dest="primitive_type [52680,52687]"/>
  <match src="primitive_type [3528,3535]" dest="primitive_type [3528,3535]"/>
  <match src=",: , [52628,52629]" dest=",: , [53360,53361]"/>
  <match src="type_name [5441,5448]" dest="type_name [5441,5448]"/>
  <match src="{: { [27896,27897]" dest="{: { [27896,27897]"/>
  <match src="call_expression [22628,22688]" dest="call_expression [22628,22688]"/>
  <match src=",: , [37489,37490]" dest=",: , [37489,37490]"/>
  <match src="identifier: item [38820,38824]" dest="identifier: item [38820,38824]"/>
  <match src="returns: returns [2966,2973]" dest="returns: returns [2966,2973]"/>
  <match src="parameter [16564,16586]" dest="parameter [16564,16586]"/>
  <match src="yul_identifier [42710,42714]" dest="yul_identifier [42710,42714]"/>
  <match src="parameter [18903,18916]" dest="parameter [18903,18916]"/>
  <match src="binary_expression [10785,10864]" dest="binary_expression [10785,10864]"/>
  <match src="binary_expression [41678,41730]" dest="binary_expression [41678,41730]"/>
  <match src="{: { [45687,45688]" dest="{: { [45685,45686]"/>
  <match src="(: ( [52311,52312]" dest="(: ( [53043,53044]"/>
  <match src="call_argument [10375,10405]" dest="call_argument [10375,10405]"/>
  <match src="call_argument [37289,37301]" dest="call_argument [37289,37301]"/>
  <match src="yul_evm_builtin [40698,40701]" dest="yul_evm_builtin [40698,40701]"/>
  <match src="(: ( [21611,21612]" dest="(: ( [21611,21612]"/>
  <match src="}: } [16906,16907]" dest="}: } [16906,16907]"/>
  <match src="]: ] [1711,1712]" dest="]: ] [1711,1712]"/>
  <match src="uint256: uint256 [1703,1710]" dest="uint256: uint256 [1703,1710]"/>
  <match src="function_body [46359,46435]" dest="function_body [46357,46433]"/>
  <match src="identifier: id [2390,2392]" dest="identifier: id [2390,2392]"/>
  <match src="{: { [44485,44486]" dest="{: { [44485,44486]"/>
  <match src="yul_function_call [42820,42855]" dest="yul_function_call [42820,42855]"/>
  <match src="type_name [3290,3297]" dest="type_name [3290,3297]"/>
  <match src="identifier: role [33397,33401]" dest="identifier: role [33397,33401]"/>
  <match src="=: = [37556,37557]" dest="=: = [37556,37557]"/>
  <match src="pragma_directive [4888,4910]" dest="pragma_directive [4888,4910]"/>
  <match src="): ) [30721,30722]" dest="): ) [30721,30722]"/>
  <match src="identifier: value [12943,12948]" dest="identifier: value [12943,12948]"/>
  <match src="identifier: _indexes [14967,14975]" dest="identifier: _indexes [14967,14975]"/>
  <match src="): ) [40082,40083]" dest="): ) [40082,40083]"/>
  <match src="): ) [47235,47236]" dest="): ) [47233,47234]"/>
  <match src="identifier: _msgSender [33641,33651]" dest="identifier: _msgSender [33641,33651]"/>
  <match src="sub: sub [40501,40504]" dest="sub: sub [40501,40504]"/>
  <match src="binary_expression [20379,20421]" dest="binary_expression [20379,20421]"/>
  <match src="): ) [12690,12691]" dest="): ) [12690,12691]"/>
  <match src="uint256: uint256 [45981,45988]" dest="uint256: uint256 [45979,45986]"/>
  <match src="or: or [42833,42835]" dest="or: or [42833,42835]"/>
  <match src="identifier: _itemLength [38763,38774]" dest="identifier: _itemLength [38763,38774]"/>
  <match src="!=: != [10360,10362]" dest="!=: != [10360,10362]"/>
  <match src="solidity: solidity [11024,11032]" dest="solidity: solidity [11024,11032]"/>
  <match src="yul_identifier [41107,41114]" dest="yul_identifier [41107,41114]"/>
  <match src="identifier: toUint [51861,51867]" dest="identifier: toUint [52593,52599]"/>
  <match src="call_argument [35160,35175]" dest="call_argument [35160,35175]"/>
  <match src="]: ] [48906,48907]" dest="]: ] [49521,49522]"/>
  <match src="type_name [17325,17332]" dest="type_name [17325,17332]"/>
  <match src="(: ( [31124,31125]" dest="(: ( [31124,31125]"/>
  <match src="yul_evm_builtin [40217,40222]" dest="yul_evm_builtin [40217,40222]"/>
  <match src="&quot;: &quot; [21752,21753]" dest="&quot;: &quot; [21752,21753]"/>
  <match src=",: , [42844,42845]" dest=",: , [42844,42845]"/>
  <match src="identifier: amounts [47448,47455]" dest="identifier: amounts [47446,47453]"/>
  <match src="return: return [23621,23627]" dest="return: return [23621,23627]"/>
  <match src=",: , [39880,39881]" dest=",: , [39880,39881]"/>
  <match src="primitive_type [18219,18226]" dest="primitive_type [18219,18226]"/>
  <match src="type_name [24335,24342]" dest="type_name [24335,24342]"/>
  <match src="identifier: set [16416,16419]" dest="identifier: set [16416,16419]"/>
  <match src="+: + [39649,39650]" dest="+: + [39649,39650]"/>
  <match src="identifier: adminRole [33403,33412]" dest="identifier: adminRole [33403,33412]"/>
  <match src="string_literal [51590,51592]" dest="string_literal [52322,52324]"/>
  <match src="user_defined_type [16564,16574]" dest="user_defined_type [16564,16574]"/>
  <match src="+: + [39718,39719]" dest="+: + [39718,39719]"/>
  <match src="function_body [9361,9558]" dest="function_body [9361,9558]"/>
  <match src="address: address [4715,4722]" dest="address: address [4715,4722]"/>
  <match src="identifier: revokeRole [31514,31524]" dest="identifier: revokeRole [31514,31524]"/>
  <match src="call_argument [12786,12791]" dest="call_argument [12786,12791]"/>
  <match src="): ) [33653,33654]" dest="): ) [33653,33654]"/>
  <match src="call_expression [38798,38873]" dest="call_expression [38798,38873]"/>
  <match src="(: ( [18290,18291]" dest="(: ( [18290,18291]"/>
  <match src="function_definition [38150,38648]" dest="function_definition [38150,38648]"/>
  <match src="): ) [31633,31634]" dest="): ) [31633,31634]"/>
  <match src="constructor: constructor [9337,9348]" dest="constructor: constructor [9337,9348]"/>
  <match src="bool: bool [16626,16630]" dest="bool: bool [16626,16630]"/>
  <match src="(: ( [10861,10862]" dest="(: ( [10861,10862]"/>
  <match src="(: ( [45156,45157]" dest="(: ( [45154,45155]"/>
  <match src="struct: struct [17428,17434]" dest="struct: struct [17428,17434]"/>
  <match src="(: ( [30713,30714]" dest="(: ( [30713,30714]"/>
  <match src="identifier: account [31074,31081]" dest="identifier: account [31074,31081]"/>
  <match src="call_argument [33632,33639]" dest="call_argument [33632,33639]"/>
  <match src="type_name [44950,44957]" dest="type_name [44948,44955]"/>
  <match src="primitive_type [28766,28773]" dest="primitive_type [28766,28773]"/>
  <match src="assignment_expression [48464,48483]" dest="assignment_expression [49079,49098]"/>
  <match src="variable_declaration [24592,24604]" dest="variable_declaration [24592,24604]"/>
  <match src="=: = [12950,12951]" dest="=: = [12950,12951]"/>
  <match src="inheritance_specifier [44781,44796]" dest="inheritance_specifier [44779,44794]"/>
  <match src=".: . [14202,14203]" dest=".: . [14202,14203]"/>
  <match src="address: address [4729,4736]" dest="address: address [4729,4736]"/>
  <match src="return_statement [26027,26045]" dest="return_statement [26027,26045]"/>
  <match src="member_expression [50386,50406]" dest="member_expression [51001,51021]"/>
  <match src="&quot;: &quot; [45740,45741]" dest="&quot;: &quot; [45738,45739]"/>
  <match src="identifier: amounts [52461,52468]" dest="identifier: amounts [53193,53200]"/>
  <match src="type_name [8584,8591]" dest="type_name [8584,8591]"/>
  <match src="bytes: bytes [36756,36761]" dest="bytes: bytes [36756,36761]"/>
  <match src="]: ] [10449,10450]" dest="]: ] [10449,10450]"/>
  <match src="identifier: adminRole [33448,33457]" dest="identifier: adminRole [33448,33457]"/>
  <match src="call_argument [37296,37300]" dest="call_argument [37296,37300]"/>
  <match src="call_argument [52615,52628]" dest="call_argument [53347,53360]"/>
  <match src="identifier: adminRole [31611,31620]" dest="identifier: adminRole [31611,31620]"/>
  <match src="binary_expression [37749,37766]" dest="binary_expression [37749,37766]"/>
  <match src=".: . [16419,16420]" dest=".: . [16419,16420]"/>
  <match src="if_statement [51485,51610]" dest="if_statement [52100,52342]"/>
  <match src="yul_path [36903,36909]" dest="yul_path [36903,36909]"/>
  <match src="identifier: AddressSet [27921,27931]" dest="identifier: AddressSet [27921,27931]"/>
  <match src="div: div [40698,40701]" dest="div: div [40698,40701]"/>
  <match src="(: ( [37333,37334]" dest="(: ( [37333,37334]"/>
  <match src="event_paramater [1427,1437]" dest="event_paramater [1427,1437]"/>
  <match src="internal: internal [24088,24096]" dest="internal: internal [24088,24096]"/>
  <match src="function: function [33034,33042]" dest="function: function [33034,33042]"/>
  <match src="solidity_pragma_token [34635,34649]" dest="solidity_pragma_token [34635,34649]"/>
  <match src="call_expression [52242,52487]" dest="call_expression [52974,53219]"/>
  <match src="yul_function_call [38016,38051]" dest="yul_function_call [38016,38051]"/>
  <match src="identifier: offset [38966,38972]" dest="identifier: offset [38966,38972]"/>
  <match src="identifier: Initializable [44850,44863]" dest="identifier: Initializable [44848,44861]"/>
  <match src="parameter [17717,17721]" dest="parameter [17717,17721]"/>
  <match src="(: ( [41072,41073]" dest="(: ( [41072,41073]"/>
  <match src="array_access [52043,52052]" dest="array_access [52775,52784]"/>
  <match src="): ) [17300,17301]" dest="): ) [17300,17301]"/>
  <match src="variable_declaration_tuple [51925,51973]" dest="variable_declaration_tuple [52657,52705]"/>
  <match src="function: function [18412,18420]" dest="function: function [18412,18420]"/>
  <match src="identifier: count [39944,39949]" dest="identifier: count [39944,39949]"/>
  <match src="identifier: IERC1155Receiver [6383,6399]" dest="identifier: IERC1155Receiver [6383,6399]"/>
  <match src="function_definition [36275,36563]" dest="function_definition [36275,36563]"/>
  <match src="identifier: _inner [17376,17382]" dest="identifier: _inner [17376,17382]"/>
  <match src="!=: != [20415,20417]" dest="!=: != [20415,20417]"/>
  <match src="exp: exp [40717,40720]" dest="exp: exp [40717,40720]"/>
  <match src=",: , [32276,32277]" dest=",: , [32276,32277]"/>
  <match src="number_literal: 2 [50463,50464]" dest="number_literal: 2 [51078,51079]"/>
  <match src="expression_statement [44611,44625]" dest="expression_statement [44611,44625]"/>
  <match src="identifier: value [24164,24169]" dest="identifier: value [24164,24169]"/>
  <match src="): ) [42776,42777]" dest="): ) [42776,42777]"/>
  <match src="comment: /**         @dev Handles the receipt of a multiple ERC1155 token types. This function         is called at the end of a `safeBatchTransferFrom` after the balances have         been updated. To accept the transfer(s), this must return         `bytes4(keccak256(&quot;onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)&quot;))`         (i.e. 0xbc197c81, or its own function selector).         @param operator The address which initiated the batch transfer (i.e. msg.sender)         @param from The address which previously owned the token         @param ids An array containing ids of each token being transferred (order and length must match values array)         @param values An array containing amounts of each token being transferred (order and length must match ids array)         @param data Additional data with no specified format         @return `bytes4(keccak256(&quot;onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)&quot;))` if transfer is allowed     */ [7464,8453]" dest="comment: /**         @dev Handles the receipt of a multiple ERC1155 token types. This function         is called at the end of a `safeBatchTransferFrom` after the balances have         been updated. To accept the transfer(s), this must return         `bytes4(keccak256(&quot;onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)&quot;))`         (i.e. 0xbc197c81, or its own function selector).         @param operator The address which initiated the batch transfer (i.e. msg.sender)         @param from The address which previously owned the token         @param ids An array containing ids of each token being transferred (order and length must match values array)         @param values An array containing amounts of each token being transferred (order and length must match ids array)         @param data Additional data with no specified format         @return `bytes4(keccak256(&quot;onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)&quot;))` if transfer is allowed     */ [7464,8453]"/>
  <match src="identifier: item [37414,37418]" dest="identifier: item [37414,37418]"/>
  <match src="primitive_type [29667,29674]" dest="primitive_type [29667,29674]"/>
  <match src="address: address [44287,44294]" dest="address: address [44287,44294]"/>
  <match src="array_access [14963,14982]" dest="array_access [14963,14982]"/>
  <match src="block_statement [24743,25275]" dest="block_statement [24743,25275]"/>
  <match src="identifier: data [5501,5505]" dest="identifier: data [5501,5505]"/>
  <match src="comment: /**      * @dev Revokes `role` from `account`.      *      * If `account` had been granted `role`, emits a {RoleRevoked} event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [31268,31499]" dest="comment: /**      * @dev Revokes `role` from `account`.      *      * If `account` had been granted `role`, emits a {RoleRevoked} event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [31268,31499]"/>
  <match src="=: = [48429,48430]" dest="=: = [49044,49045]"/>
  <match src="identifier: toAddress [37014,37023]" dest="identifier: toAddress [37014,37023]"/>
  <match src="return_type_definition [19862,19876]" dest="return_type_definition [19862,19876]"/>
  <match src="parameter [33505,33517]" dest="parameter [33505,33517]"/>
  <match src="): ) [36909,36910]" dest="): ) [36909,36910]"/>
  <match src="emit_statement [33609,33655]" dest="emit_statement [33609,33655]"/>
  <match src="identifier: length [18421,18427]" dest="identifier: length [18421,18427]"/>
  <match src="primitive_type [4729,4736]" dest="primitive_type [4729,4736]"/>
  <match src="identifier: UintSet [17663,17670]" dest="identifier: UintSet [17663,17670]"/>
  <match src="type_name [7291,7298]" dest="type_name [7291,7298]"/>
  <match src="parameter [4224,4238]" dest="parameter [4224,4238]"/>
  <match src="type_name [31539,31546]" dest="type_name [31539,31546]"/>
  <match src="revert: revert [25125,25131]" dest="revert: revert [25125,25131]"/>
  <match src="call_argument [16103,16126]" dest="call_argument [16103,16126]"/>
  <match src="identifier: item [37209,37213]" dest="identifier: item [37209,37213]"/>
  <match src="comment: // right shifting to the correct length [41165,41204]" dest="comment: // right shifting to the correct length [41165,41204]"/>
  <match src="memory: memory [24395,24401]" dest="memory: memory [24395,24401]"/>
  <match src="yul_path [40584,40590]" dest="yul_path [40584,40590]"/>
  <match src="identifier: item [37104,37108]" dest="identifier: item [37104,37108]"/>
  <match src="member_expression [17372,17382]" dest="member_expression [17372,17382]"/>
  <match src="primitive_type [12677,12684]" dest="primitive_type [12677,12684]"/>
  <match src=",: , [1970,1971]" dest=",: , [1970,1971]"/>
  <match src="call_argument [21488,21519]" dest="call_argument [21488,21519]"/>
  <match src="): ) [33852,33853]" dest="): ) [33852,33853]"/>
  <match src="string: string [34012,34018]" dest="string: string [34012,34018]"/>
  <match src="event: event [1338,1343]" dest="event: event [1338,1343]"/>
  <match src="identifier: value [18079,18084]" dest="identifier: value [18079,18084]"/>
  <match src="true: true [36551,36555]" dest="true: true [36551,36555]"/>
  <match src="(: ( [39862,39863]" dest="(: ( [39862,39863]"/>
  <match src="[: [ [29700,29701]" dest="[: [ [29700,29701]"/>
  <match src="(: ( [37711,37712]" dest="(: ( [37711,37712]"/>
  <match src="return: return [41743,41749]" dest="return: return [41743,41749]"/>
  <match src="{: { [36422,36423]" dest="{: { [36422,36423]"/>
  <match src="string_literal [38436,38475]" dest="string_literal [38436,38475]"/>
  <match src="identifier: value [12786,12791]" dest="identifier: value [12786,12791]"/>
  <match src="user_defined_type [9019,9026]" dest="user_defined_type [9019,9026]"/>
  <match src="identifier: _msgSender [34286,34296]" dest="identifier: _msgSender [34286,34296]"/>
  <match src="): ) [38049,38050]" dest="): ) [38049,38050]"/>
  <match src="uint256: uint256 [2928,2935]" dest="uint256: uint256 [2928,2935]"/>
  <match src="type_name [38941,38948]" dest="type_name [38941,38948]"/>
  <match src="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event. Note that unlike {grantRole}, this function doesn't perform any      * checks on the calling account.      *      * [WARNING]      * ====      * This function should only be called from the constructor when setting      * up the initial roles for the system.      *      * Using this function in any other way is effectively circumventing the admin      * system imposed by {AccessControl}.      * ====      */ [32459,33028]" dest="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event. Note that unlike {grantRole}, this function doesn't perform any      * checks on the calling account.      *      * [WARNING]      * ====      * This function should only be called from the constructor when setting      * up the initial roles for the system.      *      * Using this function in any other way is effectively circumventing the admin      * system imposed by {AccessControl}.      * ====      */ [32459,33028]"/>
  <match src="yul_hex_number: 0x20 [35291,35295]" dest="yul_hex_number: 0x20 [35291,35295]"/>
  <match src="string_literal [22655,22687]" dest="string_literal [22655,22687]"/>
  <match src="visibility [30382,30388]" dest="visibility [30382,30388]"/>
  <match src="new_expression [49234,49247]" dest="new_expression [49849,49862]"/>
  <match src="identifier: len [36961,36964]" dest="identifier: len [36961,36964]"/>
  <match src="): ) [32403,32404]" dest="): ) [32403,32404]"/>
  <match src="solidity_pragma_token [4895,4909]" dest="solidity_pragma_token [4895,4909]"/>
  <match src="visibility [39374,39381]" dest="visibility [39374,39381]"/>
  <match src="identifier: item [36938,36942]" dest="identifier: item [36938,36942]"/>
  <match src="bool: bool [9792,9796]" dest="bool: bool [9792,9796]"/>
  <match src="(: ( [35284,35285]" dest="(: ( [35284,35285]"/>
  <match src="(: ( [33851,33852]" dest="(: ( [33851,33852]"/>
  <match src=":=: := [39105,39107]" dest=":=: := [39105,39107]"/>
  <match src="function: function [35433,35441]" dest="function: function [35433,35441]"/>
  <match src="identifier: adminRole [33414,33423]" dest="identifier: adminRole [33414,33423]"/>
  <match src="-: - [51568,51569]" dest="-: - [52274,52275]"/>
  <match src=",: , [36949,36950]" dest=",: , [36949,36950]"/>
  <match src=",: , [24043,24044]" dest=",: , [24043,24044]"/>
  <match src="type_name [39047,39054]" dest="type_name [39047,39054]"/>
  <match src="(: ( [46197,46198]" dest="(: ( [46195,46196]"/>
  <match src="assignment_expression [14422,14465]" dest="assignment_expression [14422,14465]"/>
  <match src="type_name [33716,33723]" dest="type_name [33716,33723]"/>
  <match src="variable_declaration [51154,51174]" dest="variable_declaration [51769,51789]"/>
  <match src="type_name [18219,18226]" dest="type_name [18219,18226]"/>
  <match src="=: = [38529,38530]" dest="=: = [38529,38530]"/>
  <match src=",: , [22653,22654]" dest=",: , [22653,22654]"/>
  <match src="type_name [1407,1414]" dest="type_name [1407,1414]"/>
  <match src="&gt;=: &gt;= [24161,24163]" dest="&gt;=: &gt;= [24161,24163]"/>
  <match src=".: . [36942,36943]" dest=".: . [36942,36943]"/>
  <match src="identifier: from [4194,4198]" dest="identifier: from [4194,4198]"/>
  <match src="primitive_type [45650,45657]" dest="primitive_type [45648,45655]"/>
  <match src="parameter [16351,16364]" dest="parameter [16351,16364]"/>
  <match src="): ) [16601,16602]" dest="): ) [16601,16602]"/>
  <match src="visibility [9300,9307]" dest="visibility [9300,9307]"/>
  <match src="): ) [45611,45612]" dest="): ) [45609,45610]"/>
  <match src="member_expression [13912,13930]" dest="member_expression [13912,13930]"/>
  <match src="member_expression [14199,14210]" dest="member_expression [14199,14210]"/>
  <match src="): ) [17721,17722]" dest="): ) [17721,17722]"/>
  <match src="identifier: ids [45552,45555]" dest="identifier: ids [45550,45553]"/>
  <match src="identifier: toDeleteIndex [14328,14341]" dest="identifier: toDeleteIndex [14328,14341]"/>
  <match src="view: view [26089,26093]" dest="view: view [26089,26093]"/>
  <match src="bool: bool [24592,24596]" dest="bool: bool [24592,24596]"/>
  <match src="parameter [13253,13268]" dest="parameter [13253,13268]"/>
  <match src="visibility [40084,40091]" dest="visibility [40084,40091]"/>
  <match src="): ) [31161,31162]" dest="): ) [31161,31162]"/>
  <match src="]: ] [35528,35529]" dest="]: ] [35528,35529]"/>
  <match src="function: function [37318,37326]" dest="function: function [37318,37326]"/>
  <match src="identifier: _length [18499,18506]" dest="identifier: _length [18499,18506]"/>
  <match src="override_specifier [46968,46976]" dest="override_specifier [46966,46974]"/>
  <match src="parameter [37378,37385]" dest="parameter [37378,37385]"/>
  <match src="state_mutability [40092,40096]" dest="state_mutability [40092,40096]"/>
  <match src="constructor: constructor [45599,45610]" dest="constructor: constructor [45597,45608]"/>
  <match src="yul_function_call [38037,38049]" dest="yul_function_call [38037,38049]"/>
  <match src="parameter [31539,31554]" dest="parameter [31539,31554]"/>
  <match src="private: private [33733,33740]" dest="private: private [33733,33740]"/>
  <match src="return_type_definition [25990,26015]" dest="return_type_definition [25990,26015]"/>
  <match src="{: { [50255,50256]" dest="{: { [50870,50871]"/>
  <match src="number_literal: 0x01ffc9a7 [9167,9177]" dest="number_literal: 0x01ffc9a7 [9167,9177]"/>
  <match src=",: , [29148,29149]" dest=",: , [29148,29149]"/>
  <match src="[: [ [14327,14328]" dest="[: [ [14327,14328]"/>
  <match src="identifier: operator [1962,1970]" dest="identifier: operator [1962,1970]"/>
  <match src="comment: // @returns raw rlp encoding in bytes [36622,36659]" dest="comment: // @returns raw rlp encoding in bytes [36622,36659]"/>
  <match src="): ) [40834,40835]" dest="): ) [40834,40835]"/>
  <match src="comment: /**         @dev Handles the receipt of a single ERC1155 token type. This function is         called at the end of a `safeTransferFrom` after the balance has been updated.         To accept the transfer, this must return         `bytes4(keccak256(&quot;onERC1155Received(address,address,uint256,uint256,bytes)&quot;))`         (i.e. 0xf23a6e61, or its own function selector).         @param operator The address which initiated the transfer (i.e. msg.sender)         @param from The address which previously owned the token         @param id The ID of the token being transferred         @param value The amount of tokens being transferred         @param data Additional data with no specified format         @return `bytes4(keccak256(&quot;onERC1155Received(address,address,uint256,uint256,bytes)&quot;))` if transfer is allowed     */ [6420,7248]" dest="comment: /**         @dev Handles the receipt of a single ERC1155 token type. This function is         called at the end of a `safeTransferFrom` after the balance has been updated.         To accept the transfer, this must return         `bytes4(keccak256(&quot;onERC1155Received(address,address,uint256,uint256,bytes)&quot;))`         (i.e. 0xf23a6e61, or its own function selector).         @param operator The address which initiated the transfer (i.e. msg.sender)         @param from The address which previously owned the token         @param id The ID of the token being transferred         @param value The amount of tokens being transferred         @param data Additional data with no specified format         @return `bytes4(keccak256(&quot;onERC1155Received(address,address,uint256,uint256,bytes)&quot;))` if transfer is allowed     */ [6420,7248]"/>
  <match src="primitive_type [8551,8558]" dest="primitive_type [8551,8558]"/>
  <match src="identifier: toUint [50794,50800]" dest="identifier: toUint [51409,51415]"/>
  <match src="identifier: _payloadOffset [38901,38915]" dest="identifier: _payloadOffset [38901,38915]"/>
  <match src="yul_assignment [40200,40231]" dest="yul_assignment [40200,40231]"/>
  <match src="call_argument [37601,37623]" dest="call_argument [37601,37623]"/>
  <match src="identifier: depositReceiver [46871,46886]" dest="identifier: depositReceiver [46869,46884]"/>
  <match src="{: { [431,432]" dest="{: { [431,432]"/>
  <match src="variable_declaration [37680,37694]" dest="variable_declaration [37680,37694]"/>
  <match src="else: else [40862,40866]" dest="else: else [40862,40866]"/>
  <match src="function: function [16546,16554]" dest="function: function [16546,16554]"/>
  <match src="): ) [24151,24152]" dest="): ) [24151,24152]"/>
  <match src="(: ( [2898,2899]" dest="(: ( [2898,2899]"/>
  <match src="identifier: length [35339,35345]" dest="identifier: length [35339,35345]"/>
  <match src="binary_expression [40417,40441]" dest="binary_expression [40417,40441]"/>
  <match src="(: ( [42699,42700]" dest="(: ( [42699,42700]"/>
  <match src="type_name [29150,29157]" dest="type_name [29150,29157]"/>
  <match src="]: ] [51934,51935]" dest="]: ] [52666,52667]"/>
  <match src="parameter [22598,22610]" dest="parameter [22598,22610]"/>
  <match src="uint256: uint256 [30367,30374]" dest="uint256: uint256 [30367,30374]"/>
  <match src="identifier: index [15724,15729]" dest="identifier: index [15724,15729]"/>
  <match src=",: , [8517,8518]" dest=",: , [8517,8518]"/>
  <match src=",: , [18217,18218]" dest=",: , [18217,18218]"/>
  <match src="return: return [14705,14711]" dest="return: return [14705,14711]"/>
  <match src="solidity_version_comparison_operator [10592,10594]" dest="solidity_version_comparison_operator [10592,10594]"/>
  <match src="identifier: length [49069,49075]" dest="identifier: length [49684,49690]"/>
  <match src="member_expression [29384,29413]" dest="member_expression [29384,29413]"/>
  <match src="call_argument [24477,24483]" dest="call_argument [24477,24483]"/>
  <match src="for: for [27811,27814]" dest="for: for [27811,27814]"/>
  <match src="identifier: token [51177,51182]" dest="identifier: token [51792,51797]"/>
  <match src="address: address [45428,45435]" dest="address: address [45426,45433]"/>
  <match src="type_name [16384,16388]" dest="type_name [16384,16388]"/>
  <match src="storage: storage [15102,15109]" dest="storage: storage [15102,15109]"/>
  <match src="yul_decimal_number: 1 [41259,41260]" dest="yul_decimal_number: 1 [41259,41260]"/>
  <match src=".: . [51536,51537]" dest=".: . [52151,52152]"/>
  <match src="primitive_type [24388,24394]" dest="primitive_type [24388,24394]"/>
  <match src="using_directive [27791,27840]" dest="using_directive [27791,27840]"/>
  <match src="primitive_type [43753,43758]" dest="primitive_type [43753,43758]"/>
  <match src="&quot;: &quot; [21662,21663]" dest="&quot;: &quot; [21662,21663]"/>
  <match src="primitive_type [21455,21462]" dest="primitive_type [21455,21462]"/>
  <match src="yul_path [25153,25168]" dest="yul_path [25153,25168]"/>
  <match src="): ) [49183,49184]" dest="): ) [49798,49799]"/>
  <match src="identifier: role [33062,33066]" dest="identifier: role [33062,33066]"/>
  <match src="identifier: account [5449,5456]" dest="identifier: account [5449,5456]"/>
  <match src="}: } [15813,15814]" dest="}: } [15813,15814]"/>
  <match src="identifier: msg [26034,26037]" dest="identifier: msg [26034,26037]"/>
  <match src="type_name [33068,33075]" dest="type_name [33068,33075]"/>
  <match src="variable_declaration [50886,50896]" dest="variable_declaration [51501,51511]"/>
  <match src="}: } [25284,25285]" dest="}: } [25284,25285]"/>
  <match src="return_statement [22621,22689]" dest="return_statement [22621,22689]"/>
  <match src="call_expression [37593,37667]" dest="call_expression [37593,37667]"/>
  <match src="returns: returns [17708,17715]" dest="returns: returns [17708,17715]"/>
  <match src="comment: // To delete an element from the _values array in O(1), we swap the element to delete with the last one in [13547,13653]" dest="comment: // To delete an element from the _values array in O(1), we swap the element to delete with the last one in [13547,13653]"/>
  <match src="identifier: rootToken [43733,43742]" dest="identifier: rootToken [43733,43742]"/>
  <match src=".: . [15175,15176]" dest=".: . [15175,15176]"/>
  <match src="memory: memory [37032,37038]" dest="memory: memory [37032,37038]"/>
  <match src="member_expression [30430,30453]" dest="member_expression [30430,30453]"/>
  <match src="struct_member [34925,34937]" dest="struct_member [34925,34937]"/>
  <match src="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [19224,19805]" dest="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [19224,19805]"/>
  <match src="identifier: _grantRole [33494,33504]" dest="identifier: _grantRole [33494,33504]"/>
  <match src="visibility [18009,18017]" dest="visibility [18009,18017]"/>
  <match src="(: ( [40213,40214]" dest="(: ( [40213,40214]"/>
  <match src="call_argument [16444,16449]" dest="call_argument [16444,16449]"/>
  <match src="user_defined_type [14885,14888]" dest="user_defined_type [14885,14888]"/>
  <match src="function: function [10264,10272]" dest="function: function [10264,10272]"/>
  <match src="return_type_definition [2966,2992]" dest="return_type_definition [2966,2992]"/>
  <match src="identifier: values [1728,1734]" dest="identifier: values [1728,1734]"/>
  <match src="identifier: returndata [24715,24725]" dest="identifier: returndata [24715,24725]"/>
  <match src="yul_identifier [40223,40229]" dest="yul_identifier [40223,40229]"/>
  <match src="identifier: TransferSingle [1344,1358]" dest="identifier: TransferSingle [1344,1358]"/>
  <match src="function: function [16311,16319]" dest="function: function [16311,16319]"/>
  <match src="function_definition [15534,15738]" dest="function_definition [15534,15738]"/>
  <match src="==: == [38817,38819]" dest="==: == [38817,38819]"/>
  <match src="function: function [24303,24311]" dest="function: function [24303,24311]"/>
  <match src="emit_statement [47306,47467]" dest="emit_statement [47304,47465]"/>
  <match src=".: . [10803,10804]" dest=".: . [10803,10804]"/>
  <match src="return: return [26027,26033]" dest="return: return [26027,26033]"/>
  <match src="}: } [12467,12468]" dest="}: } [12467,12468]"/>
  <match src="function_definition [12646,13060]" dest="function_definition [12646,13060]"/>
  <match src=".: . [51631,51632]" dest=".: . [52363,52364]"/>
  <match src="type_name [51948,51957]" dest="type_name [52680,52689]"/>
  <match src="): ) [29644,29645]" dest="): ) [29644,29645]"/>
  <match src="{: { [29366,29367]" dest="{: { [29366,29367]"/>
  <match src="return_statement [42238,42245]" dest="return_statement [42238,42245]"/>
  <match src="): ) [24483,24484]" dest="): ) [24483,24484]"/>
  <match src="(: ( [46350,46351]" dest="(: ( [46348,46349]"/>
  <match src="}: } [6195,6196]" dest="}: } [6195,6196]"/>
  <match src="pure: pure [36733,36737]" dest="pure: pure [36733,36737]"/>
  <match src="return_type_definition [18248,18262]" dest="return_type_definition [18248,18262]"/>
  <match src="bytes: bytes [5486,5491]" dest="bytes: bytes [5486,5491]"/>
  <match src="returns: returns [3560,3567]" dest="returns: returns [3560,3567]"/>
  <match src="call_expression [21630,21665]" dest="call_expression [21630,21665]"/>
  <match src="call_argument [10348,10373]" dest="call_argument [10348,10373]"/>
  <match src="comment: // we register support for ERC165 itself here [9455,9500]" dest="comment: // we register support for ERC165 itself here [9455,9500]"/>
  <match src="primitive_type [46302,46307]" dest="primitive_type [46300,46305]"/>
  <match src="binary_expression [41848,41879]" dest="binary_expression [41848,41879]"/>
  <match src="contract_declaration [33960,34358]" dest="contract_declaration [33960,34358]"/>
  <match src="(: ( [42693,42694]" dest="(: ( [42693,42694]"/>
  <match src="identifier: mintBatch [6089,6098]" dest="identifier: mintBatch [6089,6098]"/>
  <match src="}: } [14727,14728]" dest="}: } [14727,14728]"/>
  <match src="constant: constant [45253,45261]" dest="constant: constant [45251,45259]"/>
  <match src="parameter [6163,6182]" dest="parameter [6163,6182]"/>
  <match src="return: return [38627,38633]" dest="return: return [38627,38633]"/>
  <match src="): ) [25247,25248]" dest="): ) [25247,25248]"/>
  <match src=",: , [6133,6134]" dest=",: , [6133,6134]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [18102,18174]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [18102,18174]"/>
  <match src="string_literal [31637,31687]" dest="string_literal [31637,31687]"/>
  <match src="): ) [39403,39404]" dest="): ) [39403,39404]"/>
  <match src="type_name [51926,51935]" dest="type_name [52658,52667]"/>
  <match src="identifier: depositReceiver [43699,43714]" dest="identifier: depositReceiver [43699,43714]"/>
  <match src="expression_statement [49658,49721]" dest="expression_statement [50273,50336]"/>
  <match src="): ) [24517,24518]" dest="): ) [24517,24518]"/>
  <match src="comment: /**      * @dev Returns one of the accounts that have `role`. `index` must be a      * value between 0 and {getRoleMemberCount}, non-inclusive.      *      * Role bearers are not sorted in any particular way, and their ordering may      * change at any point.      *      * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure      * you perform all queries on the same block. See the following      * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]      * for more information.      */ [29739,30324]" dest="comment: /**      * @dev Returns one of the accounts that have `role`. `index` must be a      * value between 0 and {getRoleMemberCount}, non-inclusive.      *      * Role bearers are not sorted in any particular way, and their ordering may      * change at any point.      *      * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure      * you perform all queries on the same block. See the following      * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]      * for more information.      */ [29739,30324]"/>
  <match src="primitive_type [38236,38243]" dest="primitive_type [38236,38243]"/>
  <match src="]: ] [46252,46253]" dest="]: ] [46250,46251]"/>
  <match src="function_definition [13236,14780]" dest="function_definition [13236,14780]"/>
  <match src="type_name [46925,46930]" dest="type_name [46923,46928]"/>
  <match src="type_name [46244,46253]" dest="type_name [46242,46251]"/>
  <match src="): ) [33423,33424]" dest="): ) [33423,33424]"/>
  <match src="identifier: RoleRevoked [33814,33825]" dest="identifier: RoleRevoked [33814,33825]"/>
  <match src="type_name [23544,23549]" dest="type_name [23544,23549]"/>
  <match src="call_argument [31238,31242]" dest="call_argument [31238,31242]"/>
  <match src="type_name [7341,7348]" dest="type_name [7341,7348]"/>
  <match src="member_expression [37209,37217]" dest="member_expression [37209,37217]"/>
  <match src="calldata: calldata [46283,46291]" dest="calldata: calldata [46281,46289]"/>
  <match src="identifier: id [1435,1437]" dest="identifier: id [1435,1437]"/>
  <match src="): ) [50912,50913]" dest="): ) [51527,51528]"/>
  <match src="type_name [21612,21616]" dest="type_name [21612,21616]"/>
  <match src="parameter [16005,16027]" dest="parameter [16005,16027]"/>
  <match src="): ) [35986,35987]" dest="): ) [35986,35987]"/>
  <match src="address: address [4186,4193]" dest="address: address [4186,4193]"/>
  <match src="function_definition [15992,16135]" dest="function_definition [15992,16135]"/>
  <match src="): ) [24445,24446]" dest="): ) [24445,24446]"/>
  <match src="state_variable_declaration [44950,45015]" dest="state_variable_declaration [44948,45013]"/>
  <match src="identifier: set [12952,12955]" dest="identifier: set [12952,12955]"/>
  <match src="identifier: data [47221,47225]" dest="identifier: data [47219,47223]"/>
  <match src="parameter [36685,36704]" dest="parameter [36685,36704]"/>
  <match src="solidity_pragma_token [19110,19125]" dest="solidity_pragma_token [19110,19125]"/>
  <match src="binary_expression [36107,36123]" dest="binary_expression [36107,36123]"/>
  <match src="number_literal: 1 [40296,40297]" dest="number_literal: 1 [40296,40297]"/>
  <match src="binary_expression [35874,35915]" dest="binary_expression [35874,35915]"/>
  <match src="): ) [10906,10907]" dest="): ) [10906,10907]"/>
  <match src="inheritance_specifier [44803,44818]" dest="inheritance_specifier [44801,44816]"/>
  <match src="identifier: value [23664,23669]" dest="identifier: value [23664,23669]"/>
  <match src="(: ( [39395,39396]" dest="(: ( [39395,39396]"/>
  <match src="array_access [14199,14221]" dest="array_access [14199,14221]"/>
  <match src="call_expression [34286,34298]" dest="call_expression [34286,34298]"/>
  <match src="return_type_definition [3560,3574]" dest="return_type_definition [3560,3574]"/>
  <match src="call_argument [12741,12744]" dest="call_argument [12741,12744]"/>
  <match src="): ) [9796,9797]" dest="): ) [9796,9797]"/>
  <match src="): ) [12752,12753]" dest="): ) [12752,12753]"/>
  <match src="augmented_assignment_expression [42330,42346]" dest="augmented_assignment_expression [42330,42346]"/>
  <match src="struct_member [17454,17465]" dest="struct_member [17454,17465]"/>
  <match src="bytes32: bytes32 [28479,28486]" dest="bytes32: bytes32 [28479,28486]"/>
  <match src="function_body [31098,31260]" dest="function_body [31098,31260]"/>
  <match src="parameter [18472,18479]" dest="parameter [18472,18479]"/>
  <match src="=: = [10451,10452]" dest="=: = [10451,10452]"/>
  <match src="): ) [52437,52438]" dest="): ) [53169,53170]"/>
  <match src="string_literal [45167,45224]" dest="string_literal [45165,45222]"/>
  <match src="yul_function_call [20339,20359]" dest="yul_function_call [20339,20359]"/>
  <match src="primitive_type [35222,35229]" dest="primitive_type [35222,35229]"/>
  <match src="parameter [33315,33332]" dest="parameter [33315,33332]"/>
  <match src="user_defined_type [15547,15550]" dest="user_defined_type [15547,15550]"/>
  <match src="function: function [31505,31513]" dest="function: function [31505,31513]"/>
  <match src="primitive_type [26111,26116]" dest="primitive_type [26111,26116]"/>
  <match src="[: [ [30436,30437]" dest="[: [ [30436,30437]"/>
  <match src="&quot;: &quot; [31686,31687]" dest="&quot;: &quot; [31686,31687]"/>
  <match src="&quot;: &quot; [35177,35178]" dest="&quot;: &quot; [35177,35178]"/>
  <match src="&lt;: &lt; [40423,40424]" dest="&lt;: &lt; [40423,40424]"/>
  <match src="identifier: ids [47151,47154]" dest="identifier: ids [47149,47152]"/>
  <match src="parameter [17663,17682]" dest="parameter [17663,17682]"/>
  <match src="number_literal: 256 [42614,42617]" dest="number_literal: 256 [42614,42617]"/>
  <match src="call_argument [23671,23714]" dest="call_argument [23671,23714]"/>
  <match src="parameter [16626,16630]" dest="parameter [16626,16630]"/>
  <match src="yul_evm_builtin [39108,39111]" dest="yul_evm_builtin [39108,39111]"/>
  <match src="{: { [12754,12755]" dest="{: { [12754,12755]"/>
  <match src="call_argument [49118,49173]" dest="call_argument [49733,49788]"/>
  <match src="identifier: _values [15168,15175]" dest="identifier: _values [15168,15175]"/>
  <match src="identifier: ids [51943,51946]" dest="identifier: ids [52675,52678]"/>
  <match src="if: if [51816,51818]" dest="if: if [52548,52550]"/>
  <match src=",: , [45782,45783]" dest=",: , [45780,45781]"/>
  <match src="primitive_type [29150,29157]" dest="primitive_type [29150,29157]"/>
  <match src=",: , [40715,40716]" dest=",: , [40715,40716]"/>
  <match src="virtual: virtual [10321,10328]" dest="virtual: virtual [10321,10328]"/>
  <match src="type_name [51021,51037]" dest="type_name [51636,51652]"/>
  <match src="): ) [39124,39125]" dest="): ) [39124,39125]"/>
  <match src="identifier: STRING_LONG_START [41643,41660]" dest="identifier: STRING_LONG_START [41643,41660]"/>
  <match src="comment: /**      * @dev Sets `adminRole` as ``role``'s admin role.      *      * Emits a {RoleAdminChanged} event.      */ [33154,33272]" dest="comment: /**      * @dev Sets `adminRole` as ``role``'s admin role.      *      * Emits a {RoleAdminChanged} event.      */ [33154,33272]"/>
  <match src="identifier: require [34250,34257]" dest="identifier: require [34250,34257]"/>
  <match src="call_argument [33841,33853]" dest="call_argument [33841,33853]"/>
  <match src="type_name [1385,1392]" dest="type_name [1385,1392]"/>
  <match src="identifier: data [4808,4812]" dest="identifier: data [4808,4812]"/>
  <match src="type_cast_expression [18071,18085]" dest="type_cast_expression [18071,18085]"/>
  <match src="variable_declaration_statement [51154,51212]" dest="variable_declaration_statement [51769,51827]"/>
  <match src="(: ( [48143,48144]" dest="(: ( [48758,48759]"/>
  <match src="(: ( [25998,25999]" dest="(: ( [25998,25999]"/>
  <match src="parameter [5441,5456]" dest="parameter [5441,5456]"/>
  <match src="bool: bool [3569,3573]" dest="bool: bool [3569,3573]"/>
  <match src="binary_expression [13863,13877]" dest="binary_expression [13863,13877]"/>
  <match src="): ) [16449,16450]" dest="): ) [16449,16450]"/>
  <match src="identifier: item [35285,35289]" dest="identifier: item [35285,35289]"/>
  <match src="]: ] [49700,49701]" dest="]: ] [50315,50316]"/>
  <match src="&lt;: &lt; [41641,41642]" dest="&lt;: &lt; [41641,41642]"/>
  <match src="type_name [34070,34076]" dest="type_name [34070,34076]"/>
  <match src="variable_declaration [35616,35629]" dest="variable_declaration [35616,35629]"/>
  <match src="type_name [20133,20140]" dest="type_name [20133,20140]"/>
  <match src=",: , [33714,33715]" dest=",: , [33714,33715]"/>
  <match src=".: . [47504,47505]" dest=".: . [47502,47503]"/>
  <match src="private: private [9300,9307]" dest="private: private [9300,9307]"/>
  <match src="identifier: data [22574,22578]" dest="identifier: data [22574,22578]"/>
  <match src="binary_expression [41906,41935]" dest="binary_expression [41906,41935]"/>
  <match src="uint256: uint256 [6135,6142]" dest="uint256: uint256 [6135,6142]"/>
  <match src="yul_evm_builtin [42690,42693]" dest="yul_evm_builtin [42690,42693]"/>
  <match src="identifier: result [38497,38503]" dest="identifier: result [38497,38503]"/>
  <match src="-: - [41931,41932]" dest="-: - [41931,41932]"/>
  <match src="state_mutability [19857,19861]" dest="state_mutability [19857,19861]"/>
  <match src="identifier: memPtr [35347,35353]" dest="identifier: memPtr [35347,35353]"/>
  <match src="identifier: _functionCallWithValue [24312,24334]" dest="identifier: _functionCallWithValue [24312,24334]"/>
  <match src="bool: bool [14939,14943]" dest="bool: bool [14939,14943]"/>
  <match src="call_expression [36808,36827]" dest="call_expression [36808,36827]"/>
  <match src="address: address [46226,46233]" dest="address: address [46224,46231]"/>
  <match src="variable_declaration_statement [36374,36403]" dest="variable_declaration_statement [36374,36403]"/>
  <match src="uint256: uint256 [38742,38749]" dest="uint256: uint256 [38742,38749]"/>
  <match src="identifier: byte0 [41565,41570]" dest="identifier: byte0 [41565,41570]"/>
  <match src="identifier: _msgSender [33841,33851]" dest="identifier: _msgSender [33841,33851]"/>
  <match src="type_name [14939,14943]" dest="type_name [14939,14943]"/>
  <match src="uint256: uint256 [39591,39598]" dest="uint256: uint256 [39591,39598]"/>
  <match src="comment: // Update the index for the moved value [14369,14408]" dest="comment: // Update the index for the moved value [14369,14408]"/>
  <match src="variable_declaration_tuple [47119,47236]" dest="variable_declaration_tuple [47117,47234]"/>
  <match src="function: function [37005,37013]" dest="function: function [37005,37013]"/>
  <match src="comment: /**      * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.      *      * If an {URI} event was emitted for `id`, the standard      * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value      * returned by {IERC1155MetadataURI-uri}.      */ [1995,2344]" dest="comment: /**      * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.      *      * If an {URI} event was emitted for `id`, the standard      * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value      * returned by {IERC1155MetadataURI-uri}.      */ [1995,2344]"/>
  <match src="return_type_definition [35111,35135]" dest="return_type_definition [35111,35135]"/>
  <match src="(: ( [41121,41122]" dest="(: ( [41121,41122]"/>
  <match src="function_body [16390,16460]" dest="function_body [16390,16460]"/>
  <match src="number_literal: 0 [13491,13492]" dest="number_literal: 0 [13491,13492]"/>
  <match src="type_name [50266,50285]" dest="type_name [50881,50900]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [25341,25372]" dest="comment: // SPDX-License-Identifier: MIT [25341,25372]"/>
  <match src="parameter [24433,24445]" dest="parameter [24433,24445]"/>
  <match src="call_argument [16680,16694]" dest="call_argument [16680,16694]"/>
  <match src="call_expression [50306,50330]" dest="call_expression [50921,50945]"/>
  <match src="primitive_type [27950,27957]" dest="primitive_type [27950,27957]"/>
  <match src="identifier: TransferBatch [1621,1634]" dest="identifier: TransferBatch [1621,1634]"/>
  <match src="binary_expression [48128,48146]" dest="binary_expression [48743,48761]"/>
  <match src="state_variable_declaration [45021,45087]" dest="state_variable_declaration [45019,45085]"/>
  <match src="identifier: memPtr [36076,36082]" dest="identifier: memPtr [36076,36082]"/>
  <match src="return: return [29377,29383]" dest="return: return [29377,29383]"/>
  <match src="pragma: pragma [25376,25382]" dest="pragma: pragma [25376,25382]"/>
  <match src="yul_identifier [39097,39104]" dest="yul_identifier [39097,39104]"/>
  <match src=":=: := [38013,38015]" dest=":=: := [38013,38015]"/>
  <match src="binary_expression [39789,39819]" dest="binary_expression [39789,39819]"/>
  <match src="emit: emit [33362,33366]" dest="emit: emit [33362,33366]"/>
  <match src="]: ] [12276,12277]" dest="]: ] [12276,12277]"/>
  <match src="number_literal: 0 [14986,14987]" dest="number_literal: 0 [14986,14987]"/>
  <match src="member_expression [15712,15723]" dest="member_expression [15712,15723]"/>
  <match src="): ) [50641,50642]" dest="): ) [51256,51257]"/>
  <match src="if: if [41617,41619]" dest="if: if [41617,41619]"/>
  <match src="return: return [12985,12991]" dest="return: return [12985,12991]"/>
  <match src="{: { [39764,39765]" dest="{: { [39764,39765]"/>
  <match src="{: { [51512,51513]" dest="{: { [52127,52128]"/>
  <match src="bytes32: bytes32 [20160,20167]" dest="bytes32: bytes32 [20160,20167]"/>
  <match src="type_name [16005,16015]" dest="type_name [16005,16015]"/>
  <match src="type_name [16062,16066]" dest="type_name [16062,16066]"/>
  <match src="yul_path [40734,40741]" dest="yul_path [40734,40741]"/>
  <match src="type_name [3308,3312]" dest="type_name [3308,3312]"/>
  <match src="return_type_definition [29351,29365]" dest="return_type_definition [29351,29365]"/>
  <match src="number_literal: 0 [48255,48256]" dest="number_literal: 0 [48870,48871]"/>
  <match src="identifier: abi [34136,34139]" dest="identifier: abi [34136,34139]"/>
  <match src="): ) [16364,16365]" dest="): ) [16364,16365]"/>
  <match src="if_statement [12726,13053]" dest="if_statement [12726,13053]"/>
  <match src="variable_declaration [13892,13909]" dest="variable_declaration [13892,13909]"/>
  <match src="uint256: uint256 [4741,4748]" dest="uint256: uint256 [4741,4748]"/>
  <match src="!=: != [48133,48135]" dest="!=: != [48748,48750]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol [6200,6267]" dest="comment: // File: @openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol [6200,6267]"/>
  <match src="identifier: _supportedInterfaces [9816,9836]" dest="identifier: _supportedInterfaces [9816,9836]"/>
  <match src="mload: mload [40702,40707]" dest="mload: mload [40702,40707]"/>
  <match src="call_expression [44989,45014]" dest="call_expression [44987,45012]"/>
  <match src="call_argument [47250,47261]" dest="call_argument [47248,47259]"/>
  <match src="function: function [16790,16798]" dest="function: function [16790,16798]"/>
  <match src="indexed: indexed [28752,28759]" dest="indexed: indexed [28752,28759]"/>
  <match src="yul_variable_declaration [41103,41164]" dest="yul_variable_declaration [41103,41164]"/>
  <match src="type_name [22948,22955]" dest="type_name [22948,22955]"/>
  <match src="&lt;: &lt; [49615,49616]" dest="&lt;: &lt; [50230,50231]"/>
  <match src="type_name [23563,23570]" dest="type_name [23563,23570]"/>
  <match src="[: [ [50462,50463]" dest="[: [ [51077,51078]"/>
  <match src="==: == [37218,37220]" dest="==: == [37218,37220]"/>
  <match src="identifier: adminRole [33323,33332]" dest="identifier: adminRole [33323,33332]"/>
  <match src="call_argument [18079,18084]" dest="call_argument [18079,18084]"/>
  <match src="identifier: tokenBalance [51162,51174]" dest="identifier: tokenBalance [51777,51789]"/>
  <match src="^:  ^ [11032,11034]" dest="^:  ^ [11032,11034]"/>
  <match src="bytes32: bytes32 [33505,33512]" dest="bytes32: bytes32 [33505,33512]"/>
  <match src="variable_declaration [38514,38528]" dest="variable_declaration [38514,38528]"/>
  <match src="}: } [51809,51810]" dest="}: } [52541,52542]"/>
  <match src="state_mutability [35097,35101]" dest="state_mutability [35097,35101]"/>
  <match src="struct_field_assignment [24646,24661]" dest="struct_field_assignment [24646,24661]"/>
  <match src="yul_evm_builtin [41122,41127]" dest="yul_evm_builtin [41122,41127]"/>
  <match src="type_name [42136,42143]" dest="type_name [42136,42143]"/>
  <match src="uint256: uint256 [39047,39054]" dest="uint256: uint256 [39047,39054]"/>
  <match src="type_cast_expression [24139,24152]" dest="type_cast_expression [24139,24152]"/>
  <match src="state_mutability [15123,15127]" dest="state_mutability [15123,15127]"/>
  <match src="comment: // @return entire rlp item byte length [40003,40041]" dest="comment: // @return entire rlp item byte length [40003,40041]"/>
  <match src=",: , [33517,33518]" dest=",: , [33517,33518]"/>
  <match src="constant: constant [34732,34740]" dest="constant: constant [34732,34740]"/>
  <match src="call_expression [34136,34194]" dest="call_expression [34136,34194]"/>
  <match src=",: , [8609,8610]" dest=",: , [8609,8610]"/>
  <match src="=&gt;: =&gt; [9291,9293]" dest="=&gt;: =&gt; [9291,9293]"/>
  <match src="(: ( [42309,42310]" dest="(: ( [42309,42310]"/>
  <match src="identifier: i [35972,35973]" dest="identifier: i [35972,35973]"/>
  <match src="[: [ [30747,30748]" dest="[: [ [30747,30748]"/>
  <match src="): ) [42783,42784]" dest="): ) [42783,42784]"/>
  <match src="yul_identifier [40810,40817]" dest="yul_identifier [40810,40817]"/>
  <match src="uint256: uint256 [13839,13846]" dest="uint256: uint256 [13839,13846]"/>
  <match src="event_paramater [1946,1970]" dest="event_paramater [1946,1970]"/>
  <match src="member_expression [51177,51192]" dest="member_expression [51792,51807]"/>
  <match src="identifier: _revertMsg [34116,34126]" dest="identifier: _revertMsg [34116,34126]"/>
  <match src="parameter [33702,33714]" dest="parameter [33702,33714]"/>
  <match src="&quot;: &quot; [45715,45716]" dest="&quot;: &quot; [45713,45714]"/>
  <match src="identifier: len [37620,37623]" dest="identifier: len [37620,37623]"/>
  <match src="): ) [17771,17772]" dest="): ) [17771,17772]"/>
  <match src="primitive_type [50898,50905]" dest="primitive_type [51513,51520]"/>
  <match src="call_argument [50517,50544]" dest="call_argument [51132,51159]"/>
  <match src="yul_identifier [36460,36466]" dest="yul_identifier [36460,36466]"/>
  <match src="memory: memory [36299,36305]" dest="memory: memory [36299,36305]"/>
  <match src="yul_evm_builtin [38016,38019]" dest="yul_evm_builtin [38016,38019]"/>
  <match src="type_name [41439,41446]" dest="type_name [41439,41446]"/>
  <match src="call_argument [36067,36074]" dest="call_argument [36067,36074]"/>
  <match src="=: = [44987,44988]" dest="=: = [44985,44986]"/>
  <match src=",: , [42147,42148]" dest=",: , [42147,42148]"/>
  <match src="identifier: isApprovedForAll [3494,3510]" dest="identifier: isApprovedForAll [3494,3510]"/>
  <match src="{: { [34672,34673]" dest="{: { [34672,34673]"/>
  <match src="visibility [38193,38201]" dest="visibility [38193,38201]"/>
  <match src=",: , [16101,16102]" dest=",: , [16101,16102]"/>
  <match src="variable_declaration_statement [40126,40142]" dest="variable_declaration_statement [40126,40142]"/>
  <match src="user_defined_type [27907,27931]" dest="user_defined_type [27907,27931]"/>
  <match src="string_literal [35576,35602]" dest="string_literal [35576,35602]"/>
  <match src="=: = [37747,37748]" dest="=: = [37747,37748]"/>
  <match src="identifier: set [12930,12933]" dest="identifier: set [12930,12933]"/>
  <match src="): ) [36031,36032]" dest="): ) [36031,36032]"/>
  <match src="function_definition [3485,3575]" dest="function_definition [3485,3575]"/>
  <match src="calldata: calldata [7392,7400]" dest="calldata: calldata [7392,7400]"/>
  <match src="returns: returns [16617,16624]" dest="returns: returns [16617,16624]"/>
  <match src="call_argument [38916,38927]" dest="call_argument [38916,38927]"/>
  <match src="uint256: uint256 [21411,21418]" dest="uint256: uint256 [21411,21418]"/>
  <match src="if: if [40254,40256]" dest="if: if [40254,40256]"/>
  <match src="visibility [46324,46332]" dest="visibility [46322,46330]"/>
  <match src="variable_declaration_statement [35857,35916]" dest="variable_declaration_statement [35857,35916]"/>
  <match src="variable_declaration [36352,36363]" dest="variable_declaration [36352,36363]"/>
  <match src="visibility [32295,32301]" dest="visibility [32295,32301]"/>
  <match src="identifier: data [8635,8639]" dest="identifier: data [8635,8639]"/>
  <match src="bytes4: bytes4 [46351,46357]" dest="bytes4: bytes4 [46349,46355]"/>
  <match src="(: ( [36450,36451]" dest="(: ( [36450,36451]"/>
  <match src="identifier: set [17989,17992]" dest="identifier: set [17989,17992]"/>
  <match src="): ) [50218,50219]" dest="): ) [50833,50834]"/>
  <match src="yul_identifier [41530,41536]" dest="yul_identifier [41530,41536]"/>
  <match src="payable: payable [21392,21399]" dest="payable: payable [21392,21399]"/>
  <match src="expression_statement [10417,10458]" dest="expression_statement [10417,10458]"/>
  <match src="identifier: data [26281,26285]" dest="identifier: data [26281,26285]"/>
  <match src="contract_body [44865,52859]" dest="contract_body [44863,53591]"/>
  <match src="(: ( [42771,42772]" dest="(: ( [42771,42772]"/>
  <match src="return_statement [20371,20423]" dest="return_statement [20371,20423]"/>
  <match src="variable_declaration [13420,13438]" dest="variable_declaration [13420,13438]"/>
  <match src="{: { [13308,13309]" dest="{: { [13308,13309]"/>
  <match src="parameter [15564,15577]" dest="parameter [15564,15577]"/>
  <match src="{: { [16390,16391]" dest="{: { [16390,16391]"/>
  <match src="state_variable_declaration [44492,44512]" dest="state_variable_declaration [44492,44512]"/>
  <match src="member_expression [31598,31620]" dest="member_expression [31598,31620]"/>
  <match src="&amp;&amp;: &amp;&amp; [20403,20405]" dest="&amp;&amp;: &amp;&amp; [20403,20405]"/>
  <match src="identifier: _indexes [12452,12460]" dest="identifier: _indexes [12452,12460]"/>
  <match src="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [26142,26260]" dest="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [26142,26260]"/>
  <match src="]: ] [52040,52041]" dest="]: ] [52772,52773]"/>
  <match src="parameter [14939,14943]" dest="parameter [14939,14943]"/>
  <match src="parameter [16062,16066]" dest="parameter [16062,16066]"/>
  <match src="parameter [15601,15608]" dest="parameter [15601,15608]"/>
  <match src="yul_function_call [42694,42704]" dest="yul_function_call [42694,42704]"/>
  <match src="primitive_type [18027,18031]" dest="primitive_type [18027,18031]"/>
  <match src="(: ( [45812,45813]" dest="(: ( [45810,45811]"/>
  <match src="type_name [18472,18479]" dest="type_name [18472,18479]"/>
  <match src="state_variable_declaration [34012,34038]" dest="state_variable_declaration [34012,34038]"/>
  <match src="type_name [33301,33308]" dest="type_name [33301,33308]"/>
  <match src="comment: // Look for revert reason and bubble it up if present [24758,24811]" dest="comment: // Look for revert reason and bubble it up if present [24758,24811]"/>
  <match src="call_expression [35888,35915]" dest="call_expression [35888,35915]"/>
  <match src="bool: bool [44492,44496]" dest="bool: bool [44492,44496]"/>
  <match src="string: string [2360,2366]" dest="string: string [2360,2366]"/>
  <match src="): ) [46357,46358]" dest="): ) [46355,46356]"/>
  <match src="comment: // Equivalent to contains(set, value) [13496,13533]" dest="comment: // Equivalent to contains(set, value) [13496,13533]"/>
  <match src="primitive_type [51154,51161]" dest="primitive_type [51769,51776]"/>
  <match src=",: , [45453,45454]" dest=",: , [45451,45452]"/>
  <match src="identifier: src [42446,42449]" dest="identifier: src [42446,42449]"/>
  <match src="type_cast_expression [51774,51783]" dest="type_cast_expression [52506,52515]"/>
  <match src="type_name [16853,16860]" dest="type_name [16853,16860]"/>
  <match src="call_argument [52359,52372]" dest="call_argument [53091,53104]"/>
  <match src="): ) [15577,15578]" dest="): ) [15577,15578]"/>
  <match src="): ) [33791,33792]" dest="): ) [33791,33792]"/>
  <match src="solidity_version_comparison_operator [987,989]" dest="solidity_version_comparison_operator [987,989]"/>
  <match src=",: , [47284,47285]" dest=",: , [47282,47283]"/>
  <match src="expression_statement [35152,35212]" dest="expression_statement [35152,35212]"/>
  <match src="bool: bool [16062,16066]" dest="bool: bool [16062,16066]"/>
  <match src="return_type_definition [17316,17333]" dest="return_type_definition [17316,17333]"/>
  <match src="visibility [28044,28050]" dest="visibility [28044,28050]"/>
  <match src="mload: mload [41122,41127]" dest="mload: mload [41122,41127]"/>
  <match src="call_argument [38420,38434]" dest="call_argument [38420,38434]"/>
  <match src="yul_identifier [25067,25082]" dest="yul_identifier [25067,25082]"/>
  <match src=",: , [24484,24485]" dest=",: , [24484,24485]"/>
  <match src="identifier: weiValue [24653,24661]" dest="identifier: weiValue [24653,24661]"/>
  <match src="constant: constant [44965,44973]" dest="constant: constant [44963,44971]"/>
  <match src="&quot;: &quot; [31212,31213]" dest="&quot;: &quot; [31212,31213]"/>
  <match src="identifier: returndata [25140,25150]" dest="identifier: returndata [25140,25150]"/>
  <match src="type_name [29322,29329]" dest="type_name [29322,29329]"/>
  <match src=":=: := [42759,42761]" dest=":=: := [42759,42761]"/>
  <match src="identifier: value [24053,24058]" dest="identifier: value [24053,24058]"/>
  <match src="yul_variable_declaration [42675,42716]" dest="yul_variable_declaration [42675,42716]"/>
  <match src="(: ( [45417,45418]" dest="(: ( [45415,45416]"/>
  <match src="call_argument [23092,23096]" dest="call_argument [23092,23096]"/>
  <match src="call_expression [21676,21754]" dest="call_expression [21676,21754]"/>
  <match src="primitive_type [48136,48143]" dest="primitive_type [48751,48758]"/>
  <match src="identifier: EnumerableSet [27815,27828]" dest="identifier: EnumerableSet [27815,27828]"/>
  <match src="): ) [32293,32294]" dest="): ) [32293,32294]"/>
  <match src="identifier: only [50236,50240]" dest="identifier: only [50851,50855]"/>
  <match src=",: , [6161,6162]" dest=",: , [6161,6162]"/>
  <match src="number_literal: 0 [50791,50792]" dest="number_literal: 0 [51406,51407]"/>
  <match src="return_statement [13029,13042]" dest="return_statement [13029,13042]"/>
  <match src="parameter [3569,3573]" dest="parameter [3569,3573]"/>
  <match src=",: , [15655,15656]" dest=",: , [15655,15656]"/>
  <match src="type_name [50898,50905]" dest="type_name [51513,51520]"/>
  <match src="type_name [39024,39029]" dest="type_name [39024,39029]"/>
  <match src="identifier: amounts [4784,4791]" dest="identifier: amounts [4784,4791]"/>
  <match src="identifier: RoleData [28003,28011]" dest="identifier: RoleData [28003,28011]"/>
  <match src="type_name [37068,37075]" dest="type_name [37068,37075]"/>
  <match src="memory: memory [23550,23556]" dest="memory: memory [23550,23556]"/>
  <match src="identifier: _at [17368,17371]" dest="identifier: _at [17368,17371]"/>
  <match src="identifier: pop [14586,14589]" dest="identifier: pop [14586,14589]"/>
  <match src="string [49118,49173]" dest="string [49733,49788]"/>
  <match src="expression_statement [36047,36084]" dest="expression_statement [36047,36084]"/>
  <match src="): ) [47292,47293]" dest="): ) [47290,47291]"/>
  <match src="): ) [42635,42636]" dest="): ) [42635,42636]"/>
  <match src="identifier: role [31713,31717]" dest="identifier: role [31713,31717]"/>
  <match src="return_type_definition [40097,40114]" dest="return_type_definition [40097,40114]"/>
  <match src="primitive_type [44312,44319]" dest="primitive_type [44312,44319]"/>
  <match src="member_expression [39720,39728]" dest="member_expression [39720,39728]"/>
  <match src="yul_function_call [40580,40594]" dest="yul_function_call [40580,40594]"/>
  <match src="{: { [26016,26017]" dest="{: { [26016,26017]"/>
  <match src="type_name [28036,28043]" dest="type_name [28036,28043]"/>
  <match src="primitive_type [2606,2613]" dest="primitive_type [2606,2613]"/>
  <match src="&quot;: &quot; [51781,51782]" dest="&quot;: &quot; [52513,52514]"/>
  <match src="memory: memory [47214,47220]" dest="memory: memory [47212,47218]"/>
  <match src=",: , [5468,5469]" dest=",: , [5468,5469]"/>
  <match src="): ) [5505,5506]" dest="): ) [5505,5506]"/>
  <match src="(: ( [38805,38806]" dest="(: ( [38805,38806]"/>
  <match src="yul_evm_builtin [40819,40822]" dest="yul_evm_builtin [40819,40822]"/>
  <match src="call_expression [37289,37301]" dest="call_expression [37289,37301]"/>
  <match src="type_name [36374,36381]" dest="type_name [36374,36381]"/>
  <match src="yul_path [37978,37981]" dest="yul_path [37978,37981]"/>
  <match src="(: ( [16061,16062]" dest="(: ( [16061,16062]"/>
  <match src="yul_assignment [41059,41083]" dest="yul_assignment [41059,41083]"/>
  <match src="memory: memory [50202,50208]" dest="memory: memory [50817,50823]"/>
  <match src="identifier: item [35464,35468]" dest="identifier: item [35464,35468]"/>
  <match src="assignment_expression [36098,36123]" dest="assignment_expression [36098,36123]"/>
  <match src="&lt;=: &lt;= [37484,37486]" dest="&lt;=: &lt;= [37484,37486]"/>
  <match src="function_body [40115,41322]" dest="function_body [40115,41322]"/>
  <match src="variable_declaration_tuple [50885,50913]" dest="variable_declaration_tuple [51500,51528]"/>
  <match src="identifier: len [38825,38828]" dest="identifier: len [38825,38828]"/>
  <match src="(: ( [860,861]" dest="(: ( [860,861]"/>
  <match src="identifier: item [38955,38959]" dest="identifier: item [38955,38959]"/>
  <match src="identifier: account [33527,33534]" dest="identifier: account [33527,33534]"/>
  <match src="assignment_expression [40286,40297]" dest="assignment_expression [40286,40297]"/>
  <match src="primitive_type [50488,50495]" dest="primitive_type [51103,51110]"/>
  <match src="variable_declaration_statement [36352,36364]" dest="variable_declaration_statement [36352,36364]"/>
  <match src="call_expression [18499,18518]" dest="call_expression [18499,18518]"/>
  <match src="): ) [51972,51973]" dest="): ) [52704,52705]"/>
  <match src="): ) [51869,51870]" dest="): ) [52601,52602]"/>
  <match src="parameter [45945,45952]" dest="parameter [45943,45950]"/>
  <match src="function: function [34044,34052]" dest="function: function [34044,34052]"/>
  <match src="function_definition [45630,45842]" dest="function_definition [45628,45840]"/>
  <match src="identifier: memPtr [40708,40714]" dest="identifier: memPtr [40708,40714]"/>
  <match src="(: ( [6098,6099]" dest="(: ( [6098,6099]"/>
  <match src="struct: struct [15767,15773]" dest="struct: struct [15767,15773]"/>
  <match src="}: } [36478,36479]" dest="}: } [36478,36479]"/>
  <match src="state_mutability [42208,42212]" dest="state_mutability [42208,42212]"/>
  <match src="call_expression [37088,37149]" dest="call_expression [37088,37149]"/>
  <match src="user_defined_type [44825,44843]" dest="user_defined_type [44823,44841]"/>
  <match src="identifier: _registerInterface [10273,10291]" dest="identifier: _registerInterface [10273,10291]"/>
  <match src="primitive_type [52032,52039]" dest="primitive_type [52764,52771]"/>
  <match src="comment: // bytes32 values. [11916,11934]" dest="comment: // bytes32 values. [11916,11934]"/>
  <match src="function_body [17334,17400]" dest="function_body [17334,17400]"/>
  <match src="identifier: newAdminRole [28495,28507]" dest="identifier: newAdminRole [28495,28507]"/>
  <match src="[: [ [6142,6143]" dest="[: [ [6142,6143]"/>
  <match src="function: function [6080,6088]" dest="function: function [6080,6088]"/>
  <match src="type_name [21384,21399]" dest="type_name [21384,21399]"/>
  <match src="yul_decimal_number: 32 [40730,40732]" dest="yul_decimal_number: 32 [40730,40732]"/>
  <match src="): ) [51072,51073]" dest="): ) [51687,51688]"/>
  <match src="call_argument [48248,48256]" dest="call_argument [48863,48871]"/>
  <match src="call_argument [18976,18998]" dest="call_argument [18976,18998]"/>
  <match src="inheritance_specifier [33991,34004]" dest="inheritance_specifier [33991,34004]"/>
  <match src="bytes: bytes [22598,22603]" dest="bytes: bytes [22598,22603]"/>
  <match src="string [32354,32403]" dest="string [32354,32403]"/>
  <match src="{: { [4953,4954]" dest="{: { [4953,4954]"/>
  <match src="user_defined_type [4944,4952]" dest="user_defined_type [4944,4952]"/>
  <match src="(: ( [47493,47494]" dest="(: ( [47491,47492]"/>
  <match src="assembly: assembly [42363,42371]" dest="assembly: assembly [42363,42371]"/>
  <match src="identifier: makeArrayWithAddress [47973,47993]" dest="identifier: makeArrayWithAddress [48588,48608]"/>
  <match src="contract_body [34005,34358]" dest="contract_body [34005,34358]"/>
  <match src="call_argument [21693,21753]" dest="call_argument [21693,21753]"/>
  <match src="yul_path [40708,40714]" dest="yul_path [40708,40714]"/>
  <match src="identifier: functionCallWithValue [23628,23649]" dest="identifier: functionCallWithValue [23628,23649]"/>
  <match src="identifier: AddressSet [16806,16816]" dest="identifier: AddressSet [16806,16816]"/>
  <match src="comment: /**      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.      *      * Emits a {TransferBatch} event.      *      * Requirements:      *      * - `ids` and `amounts` must have the same length.      * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the      * acceptance magic value.      */ [4278,4678]" dest="comment: /**      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.      *      * Emits a {TransferBatch} event.      *      * Requirements:      *      * - `ids` and `amounts` must have the same length.      * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the      * acceptance magic value.      */ [4278,4678]"/>
  <match src="(: ( [35050,35051]" dest="(: ( [35050,35051]"/>
  <match src="=: = [39605,39606]" dest="=: = [39605,39606]"/>
  <match src="=: = [21628,21629]" dest="=: = [21628,21629]"/>
  <match src="parameter [38216,38223]" dest="parameter [38216,38223]"/>
  <match src=".: . [49565,49566]" dest=".: . [50180,50181]"/>
  <match src="event_paramater [1407,1425]" dest="event_paramater [1407,1425]"/>
  <match src="string_literal [37421,37455]" dest="string_literal [37421,37455]"/>
  <match src="bytes4: bytes4 [9120,9126]" dest="bytes4: bytes4 [9120,9126]"/>
  <match src="address: address [23528,23535]" dest="address: address [23528,23535]"/>
  <match src="false [36528,36533]" dest="false [36528,36533]"/>
  <match src="(: ( [23649,23650]" dest="(: ( [23649,23650]"/>
  <match src="string_literal [48161,48204]" dest="string_literal [48776,48819]"/>
  <match src="string [48161,48204]" dest="string [48776,48819]"/>
  <match src="identifier: ids [47430,47433]" dest="identifier: ids [47428,47431]"/>
  <match src="): ) [12450,12451]" dest="): ) [12450,12451]"/>
  <match src="primitive_type [46226,46233]" dest="primitive_type [46224,46231]"/>
  <match src="bytes32: bytes32 [44950,44957]" dest="bytes32: bytes32 [44948,44955]"/>
  <match src="): ) [45375,45376]" dest="): ) [45373,45374]"/>
  <match src="override_specifier [46048,46056]" dest="override_specifier [46046,46054]"/>
  <match src="internal: internal [36715,36723]" dest="internal: internal [36715,36723]"/>
  <match src="variable_declaration [48419,48428]" dest="variable_declaration [49034,49043]"/>
  <match src="visibility [12692,12699]" dest="visibility [12692,12699]"/>
  <match src=",: , [47273,47274]" dest=",: , [47271,47272]"/>
  <match src=",: , [48928,48929]" dest=",: , [49543,49544]"/>
  <match src="identifier: AddressSet [15774,15784]" dest="identifier: AddressSet [15774,15784]"/>
  <match src="bool: bool [9294,9298]" dest="bool: bool [9294,9298]"/>
  <match src="parameter [17994,18007]" dest="parameter [17994,18007]"/>
  <match src="return: return [49759,49765]" dest="return: return [50374,50380]"/>
  <match src="type_name [39396,39403]" dest="type_name [39396,39403]"/>
  <match src="private: private [14917,14924]" dest="private: private [14917,14924]"/>
  <match src="assembly: assembly [20316,20324]" dest="assembly: assembly [20316,20324]"/>
  <match src="identifier: depositor [47541,47550]" dest="identifier: depositor [47539,47548]"/>
  <match src="if: if [50763,50765]" dest="if: if [51378,51380]"/>
  <match src="(: ( [24465,24466]" dest="(: ( [24465,24466]"/>
  <match src="type_name [17684,17691]" dest="type_name [17684,17691]"/>
  <match src=".: . [35796,35797]" dest=".: . [35796,35797]"/>
  <match src="identifier: require [21447,21454]" dest="identifier: require [21447,21454]"/>
  <match src="{: { [24447,24448]" dest="{: { [24447,24448]"/>
  <match src="contract_body [4953,6196]" dest="contract_body [4953,6196]"/>
  <match src="number_literal: 0 [41600,41601]" dest="number_literal: 0 [41600,41601]"/>
  <match src="yul_identifier [41014,41021]" dest="yul_identifier [41014,41021]"/>
  <match src="external: external [8656,8664]" dest="external: external [8656,8664]"/>
  <match src="identifier: functionCall [22532,22544]" dest="identifier: functionCall [22532,22544]"/>
  <match src="(: ( [37288,37289]" dest="(: ( [37288,37289]"/>
  <match src="uint256: uint256 [41459,41466]" dest="uint256: uint256 [41459,41466]"/>
  <match src="else: else [25204,25208]" dest="else: else [25204,25208]"/>
  <match src="return_type_definition [7440,7455]" dest="return_type_definition [7440,7455]"/>
  <match src=",: , [28789,28790]" dest=",: , [28789,28790]"/>
  <match src="return_statement [14705,14717]" dest="return_statement [14705,14717]"/>
  <match src="(: ( [16852,16853]" dest="(: ( [16852,16853]"/>
  <match src="call_argument [47430,47433]" dest="call_argument [47428,47431]"/>
  <match src="parameter [33054,33066]" dest="parameter [33054,33066]"/>
  <match src="return: return [46085,46091]" dest="return: return [46083,46089]"/>
  <match src="=: = [35872,35873]" dest="=: = [35872,35873]"/>
  <match src="(: ( [18940,18941]" dest="(: ( [18940,18941]"/>
  <match src="call_argument [48144,48145]" dest="call_argument [48759,48760]"/>
  <match src="&quot;: &quot; [38474,38475]" dest="&quot;: &quot; [38474,38475]"/>
  <match src="return_statement [41743,41752]" dest="return_statement [41743,41752]"/>
  <match src="identifier: exitTokens [44266,44276]" dest="identifier: exitTokens [44266,44276]"/>
  <match src="yul_identifier [42750,42758]" dest="yul_identifier [42750,42758]"/>
  <match src="identifier: rootToken [44320,44329]" dest="identifier: rootToken [44320,44329]"/>
  <match src="return_statement [30734,30764]" dest="return_statement [30734,30764]"/>
  <match src="internal: internal [22580,22588]" dest="internal: internal [22580,22588]"/>
  <match src="call_argument [50606,50656]" dest="call_argument [51221,51271]"/>
  <match src="]: ] [14220,14221]" dest="]: ] [14220,14221]"/>
  <match src="event_paramater [2374,2392]" dest="event_paramater [2374,2392]"/>
  <match src=",: , [21624,21625]" dest=",: , [21624,21625]"/>
  <match src="[: [ [48393,48394]" dest="[: [ [49008,49009]"/>
  <match src="visibility [28013,28020]" dest="visibility [28013,28020]"/>
  <match src="binary_expression [42614,42640]" dest="binary_expression [42614,42640]"/>
  <match src="parameter [44340,44365]" dest="parameter [44340,44365]"/>
  <match src="event_paramater [45566,45583]" dest="event_paramater [45564,45581]"/>
  <match src="array_access [14316,14342]" dest="array_access [14316,14342]"/>
  <match src="): ) [15693,15694]" dest="): ) [15693,15694]"/>
  <match src="primitive_type [16588,16595]" dest="primitive_type [16588,16595]"/>
  <match src="memory: memory [49207,49213]" dest="memory: memory [49822,49828]"/>
  <match src="identifier: len [42228,42231]" dest="identifier: len [42228,42231]"/>
  <match src="): ) [31634,31635]" dest="): ) [31634,31635]"/>
  <match src="identifier: calculateAmountsToBeMinted [48861,48887]" dest="identifier: calculateAmountsToBeMinted [49476,49502]"/>
  <match src="function_definition [41377,41947]" dest="function_definition [41377,41947]"/>
  <match src="]: ] [14341,14342]" dest="]: ] [14341,14342]"/>
  <match src="(: ( [12708,12709]" dest="(: ( [12708,12709]"/>
  <match src="(: ( [2359,2360]" dest="(: ( [2359,2360]"/>
  <match src="return_statement [26270,26286]" dest="return_statement [26270,26286]"/>
  <match src="yul_decimal_number: 1 [41081,41082]" dest="yul_decimal_number: 1 [41081,41082]"/>
  <match src="yul_function_call [41524,41537]" dest="yul_function_call [41524,41537]"/>
  <match src="primitive_type [45238,45245]" dest="primitive_type [45236,45243]"/>
  <match src="returns: returns [23020,23027]" dest="returns: returns [23020,23027]"/>
  <match src="private: private [13285,13292]" dest="private: private [13285,13292]"/>
  <match src="=: = [39635,39636]" dest="=: = [39635,39636]"/>
  <match src="yul_evm_builtin [41118,41121]" dest="yul_evm_builtin [41118,41121]"/>
  <match src="call_argument [33641,33653]" dest="call_argument [33641,33653]"/>
  <match src="]: ] [9848,9849]" dest="]: ] [9848,9849]"/>
  <match src="(: ( [51674,51675]" dest="(: ( [52406,52407]"/>
  <match src="yul_identifier [36437,36442]" dest="yul_identifier [36437,36442]"/>
  <match src="expression_statement [32321,32405]" dest="expression_statement [32321,32405]"/>
  <match src="public: public [29339,29345]" dest="public: public [29339,29345]"/>
  <match src=".: . [33768,33769]" dest=".: . [33768,33769]"/>
  <match src=".: . [34139,34140]" dest=".: . [34139,34140]"/>
  <match src="visibility [4814,4822]" dest="visibility [4814,4822]"/>
  <match src="memory: memory [24439,24445]" dest="memory: memory [24439,24445]"/>
  <match src="event: event [1900,1905]" dest="event: event [1900,1905]"/>
  <match src="contract_body [1203,4826]" dest="contract_body [1203,4826]"/>
  <match src="}: } [33875,33876]" dest="}: } [33875,33876]"/>
  <match src=",: , [28764,28765]" dest=",: , [28764,28765]"/>
  <match src="call_argument [37421,37455]" dest="call_argument [37421,37455]"/>
  <match src="call_argument [23101,23113]" dest="call_argument [23101,23113]"/>
  <match src="bool: bool [1972,1976]" dest="bool: bool [1972,1976]"/>
  <match src="primitive_type [46835,46842]" dest="primitive_type [46833,46840]"/>
  <match src="identifier: IMintableERC1155 [52085,52101]" dest="identifier: IMintableERC1155 [52817,52833]"/>
  <match src="=: = [13861,13862]" dest="=: = [13861,13862]"/>
  <match src=".: . [52574,52575]" dest=".: . [53306,53307]"/>
  <match src="): ) [31726,31727]" dest="): ) [31726,31727]"/>
  <match src="solidity: solidity [42950,42958]" dest="solidity: solidity [42950,42958]"/>
  <match src=".: . [12780,12781]" dest=".: . [12780,12781]"/>
  <match src="return_statement [41300,41315]" dest="return_statement [41300,41315]"/>
  <match src="return_statement [39975,39988]" dest="return_statement [39975,39988]"/>
  <match src="member_expression [49055,49075]" dest="member_expression [49670,49690]"/>
  <match src="address: address [1921,1928]" dest="address: address [1921,1928]"/>
  <match src="(: ( [52126,52127]" dest="(: ( [52858,52859]"/>
  <match src=",: , [46291,46292]" dest=",: , [46289,46290]"/>
  <match src="memory: memory [37342,37348]" dest="memory: memory [37342,37348]"/>
  <match src="primitive_type [16062,16066]" dest="primitive_type [16062,16066]"/>
  <match src="function_definition [46166,46435]" dest="function_definition [46164,46433]"/>
  <match src="(: ( [36937,36938]" dest="(: ( [36937,36938]"/>
  <match src="yul_function_call [42404,42414]" dest="yul_function_call [42404,42414]"/>
  <match src="]: ] [30441,30442]" dest="]: ] [30441,30442]"/>
  <match src="identifier: byteLen [40823,40830]" dest="identifier: byteLen [40823,40830]"/>
  <match src="type_name [35520,35529]" dest="type_name [35520,35529]"/>
  <match src="identifier: LIST_LONG_START [41715,41730]" dest="identifier: LIST_LONG_START [41715,41730]"/>
  <match src="(: ( [37569,37570]" dest="(: ( [37569,37570]"/>
  <match src="identifier: dataLen [35934,35941]" dest="identifier: dataLen [35934,35941]"/>
  <match src="type_name [50488,50495]" dest="type_name [51103,51110]"/>
  <match src="variable_declaration_statement [35222,35237]" dest="variable_declaration_statement [35222,35237]"/>
  <match src="identifier: copy [36933,36937]" dest="identifier: copy [36933,36937]"/>
  <match src="(: ( [39810,39811]" dest="(: ( [39810,39811]"/>
  <match src="member_expression [35874,35885]" dest="member_expression [35874,35885]"/>
  <match src="}: } [9557,9558]" dest="}: } [9557,9558]"/>
  <match src="variable_declaration [40126,40141]" dest="variable_declaration [40126,40141]"/>
  <match src="memory: memory [22604,22610]" dest="memory: memory [22604,22610]"/>
  <match src="return_statement [41593,41602]" dest="return_statement [41593,41602]"/>
  <match src="): ) [10732,10733]" dest="): ) [10732,10733]"/>
  <match src="): ) [20358,20359]" dest="): ) [20358,20359]"/>
  <match src=":=: := [25083,25085]" dest=":=: := [25083,25085]"/>
  <match src="type_name [47134,47143]" dest="type_name [47132,47141]"/>
  <match src="identifier: i [48434,48435]" dest="identifier: i [49049,49050]"/>
  <match src="{: { [33544,33545]" dest="{: { [33544,33545]"/>
  <match src="constant: constant [34778,34786]" dest="constant: constant [34778,34786]"/>
  <match src="parameter [24370,24386]" dest="parameter [24370,24386]"/>
  <match src="identifier: ids [52220,52223]" dest="identifier: ids [52952,52955]"/>
  <match src="yul_identifier [41128,41134]" dest="yul_identifier [41128,41134]"/>
  <match src="yul_path [41128,41134]" dest="yul_path [41128,41134]"/>
  <match src="visibility [2635,2643]" dest="visibility [2635,2643]"/>
  <match src="identifier: role [28438,28442]" dest="identifier: role [28438,28442]"/>
  <match src="if_statement [40254,41288]" dest="if_statement [40254,41288]"/>
  <match src="{: { [9798,9799]" dest="{: { [9798,9799]"/>
  <match src="(: ( [25965,25966]" dest="(: ( [25965,25966]"/>
  <match src="identifier: _revokeRole [32417,32428]" dest="identifier: _revokeRole [32417,32428]"/>
  <match src="identifier: DEFAULT_ADMIN_ROLE [45764,45782]" dest="identifier: DEFAULT_ADMIN_ROLE [45762,45780]"/>
  <match src="type_name [24606,24611]" dest="type_name [24606,24611]"/>
  <match src="function_body [10329,10465]" dest="function_body [10329,10465]"/>
  <match src="block_statement [49579,49747]" dest="block_statement [50194,50362]"/>
  <match src="{: { [40896,40897]" dest="{: { [40896,40897]"/>
  <match src="string [31164,31213]" dest="string [31164,31213]"/>
  <match src="[: [ [46251,46252]" dest="[: [ [46249,46250]"/>
  <match src="identifier: itemLen [41222,41229]" dest="identifier: itemLen [41222,41229]"/>
  <match src=".: . [18294,18295]" dest=".: . [18294,18295]"/>
  <match src="expression_statement [14574,14592]" dest="expression_statement [14574,14592]"/>
  <match src="}: } [16703,16704]" dest="}: } [16703,16704]"/>
  <match src="identifier: toRlpItem [50310,50319]" dest="identifier: toRlpItem [50925,50934]"/>
  <match src="call_expression [51842,51869]" dest="call_expression [52574,52601]"/>
  <match src="identifier: AddressSet [16327,16337]" dest="identifier: AddressSet [16327,16337]"/>
  <match src="(: ( [47119,47120]" dest="(: ( [47117,47118]"/>
  <match src="parameter [23563,23576]" dest="parameter [23563,23576]"/>
  <match src=".: . [50793,50794]" dest=".: . [51408,51409]"/>
  <match src="identifier: data [23092,23096]" dest="identifier: data [23092,23096]"/>
  <match src="{: { [36871,36872]" dest="{: { [36871,36872]"/>
  <match src="state_mutability [30700,30704]" dest="state_mutability [30700,30704]"/>
  <match src="identifier: data [4255,4259]" dest="identifier: data [4255,4259]"/>
  <match src="identifier: set [16660,16663]" dest="identifier: set [16660,16663]"/>
  <match src="(: ( [33504,33505]" dest="(: ( [33504,33505]"/>
  <match src=",: , [24169,24170]" dest=",: , [24169,24170]"/>
  <match src="}: } [52848,52849]" dest="}: } [53580,53581]"/>
  <match src="sub: sub [38037,38040]" dest="sub: sub [38037,38040]"/>
  <match src="&quot;: &quot; [35842,35843]" dest="&quot;: &quot; [35842,35843]"/>
  <match src="{: { [37077,37078]" dest="{: { [37077,37078]"/>
  <match src=",: , [48256,48257]" dest=",: , [48871,48872]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [23731,23973]" dest="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [23731,23973]"/>
  <match src="primitive_type [46863,46870]" dest="primitive_type [46861,46868]"/>
  <match src="identifier: this [51550,51554]" dest="identifier: this [52170,52174]"/>
  <match src="identifier: at [17260,17262]" dest="identifier: at [17260,17262]"/>
  <match src="call_argument [51842,51869]" dest="call_argument [52574,52601]"/>
  <match src="user_defined_type [50266,50283]" dest="user_defined_type [50881,50898]"/>
  <match src="true [10453,10457]" dest="true [10453,10457]"/>
  <match src="internal: internal [37355,37363]" dest="internal: internal [37355,37363]"/>
  <match src="uint256: uint256 [37378,37385]" dest="uint256: uint256 [37378,37385]"/>
  <match src="identifier: RoleRevoked [29116,29127]" dest="identifier: RoleRevoked [29116,29127]"/>
  <match src="): ) [51868,51869]" dest="): ) [52600,52601]"/>
  <match src="): ) [40743,40744]" dest="): ) [40743,40744]"/>
  <match src="pragma: pragma [34628,34634]" dest="pragma: pragma [34628,34634]"/>
  <match src="): ) [41878,41879]" dest="): ) [41878,41879]"/>
  <match src="visibility [37355,37363]" dest="visibility [37355,37363]"/>
  <match src="call_argument [52676,52679]" dest="call_argument [53408,53411]"/>
  <match src="yul_path [39118,39124]" dest="yul_path [39118,39124]"/>
  <match src="identifier: URI [2356,2359]" dest="identifier: URI [2356,2359]"/>
  <match src="(: ( [50639,50640]" dest="(: ( [51254,51255]"/>
  <match src="type_name [14179,14186]" dest="type_name [14179,14186]"/>
  <match src="event_paramater [1921,1944]" dest="event_paramater [1921,1944]"/>
  <match src="variable_declaration_statement [52085,52138]" dest="variable_declaration_statement [52817,52870]"/>
  <match src="yul_function_call [40806,40835]" dest="yul_function_call [40806,40835]"/>
  <match src="return: return [24223,24229]" dest="return: return [24223,24229]"/>
  <match src="function: function [42112,42120]" dest="function: function [42112,42120]"/>
  <match src="identifier: index [30454,30459]" dest="identifier: index [30454,30459]"/>
  <match src="identifier: interfaceId [10438,10449]" dest="identifier: interfaceId [10438,10449]"/>
  <match src="visibility [46039,46047]" dest="visibility [46037,46045]"/>
  <match src="]: ] [50534,50535]" dest="]: ] [51149,51150]"/>
  <match src="==: == [51871,51873]" dest="==: == [52603,52605]"/>
  <match src="(: ( [38268,38269]" dest="(: ( [38268,38269]"/>
  <match src="identifier: _owner [45658,45664]" dest="identifier: _owner [45656,45662]"/>
  <match src="(: ( [45934,45935]" dest="(: ( [45932,45933]"/>
  <match src="identifier: len [37480,37483]" dest="identifier: len [37480,37483]"/>
  <match src="): ) [37723,37724]" dest="): ) [37723,37724]"/>
  <match src="identifier: ids [47593,47596]" dest="identifier: ids [47591,47594]"/>
  <match src="]: ] [49613,49614]" dest="]: ] [50228,50229]"/>
  <match src="parameter [35520,35536]" dest="parameter [35520,35536]"/>
  <match src="function_body [41448,41947]" dest="function_body [41448,41947]"/>
  <match src="assembly: assembly [37850,37858]" dest="assembly: assembly [37850,37858]"/>
  <match src=",: , [17382,17383]" dest=",: , [17382,17383]"/>
  <match src="event_paramater [1359,1383]" dest="event_paramater [1359,1383]"/>
  <match src="primitive_type [39047,39054]" dest="primitive_type [39047,39054]"/>
  <match src="memory: memory [48082,48088]" dest="memory: memory [48697,48703]"/>
  <match src="function_definition [23979,24295]" dest="function_definition [23979,24295]"/>
  <match src="(: ( [45714,45715]" dest="(: ( [45712,45713]"/>
  <match src="yul_decimal_number: 256 [40721,40724]" dest="yul_decimal_number: 256 [40721,40724]"/>
  <match src="identifier: role [34233,34237]" dest="identifier: role [34233,34237]"/>
  <match src="variable_declaration [51948,51972]" dest="variable_declaration [52680,52704]"/>
  <match src="identifier: ITokenPredicate [44781,44796]" dest="identifier: ITokenPredicate [44779,44794]"/>
  <match src="=: = [44618,44619]" dest="=: = [44618,44619]"/>
  <match src="return: return [17345,17351]" dest="return: return [17345,17351]"/>
  <match src="{: { [42348,42349]" dest="{: { [42348,42349]"/>
  <match src="): ) [24668,24669]" dest="): ) [24668,24669]"/>
  <match src="type_name [818,824]" dest="type_name [818,824]"/>
  <match src="member_expression [13912,13923]" dest="member_expression [13912,13923]"/>
  <match src="): ) [51592,51593]" dest="): ) [52324,52325]"/>
  <match src="variable_declaration_statement [39591,39609]" dest="variable_declaration_statement [39591,39609]"/>
  <match src="type_name [23528,23535]" dest="type_name [23528,23535]"/>
  <match src="type_name [33315,33322]" dest="type_name [33315,33322]"/>
  <match src="=: = [52108,52109]" dest="=: = [52840,52841]"/>
  <match src="(: ( [39111,39112]" dest="(: ( [39111,39112]"/>
  <match src="type_name [17287,17294]" dest="type_name [17287,17294]"/>
  <match src="yul_path [41507,41512]" dest="yul_path [41507,41512]"/>
  <match src="internal: internal [9352,9360]" dest="internal: internal [9352,9360]"/>
  <match src="primitive_type [45963,45970]" dest="primitive_type [45961,45968]"/>
  <match src="yul_decimal_number: 0 [40214,40215]" dest="yul_decimal_number: 0 [40214,40215]"/>
  <match src="comment: /**      * @notice Creates an array of `size` by repeating provided address,      * to be required for passing to batch balance checking function of ERC1155 tokens.      * @param addr Address to be repeated `size` times in resulting array      * @param size Size of resulting array      */ [47664,47958]" dest="comment: /**      * @notice Creates an array of `size` by repeating provided address,      * to be required for passing to batch balance checking function of ERC1155 tokens.      * @param addr Address to be repeated `size` times in resulting array      * @param size Size of resulting array      */ [48279,48573]"/>
  <match src="yul_path [40505,40510]" dest="yul_path [40505,40510]"/>
  <match src="address: address [1946,1953]" dest="address: address [1946,1953]"/>
  <match src="user_defined_type [10688,10694]" dest="user_defined_type [10688,10694]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [22704,22920]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [22704,22920]"/>
  <match src="function: function [46805,46813]" dest="function: function [46803,46811]"/>
  <match src="identifier: _owner [45784,45790]" dest="identifier: _owner [45782,45788]"/>
  <match src="user_defined_type [6403,6410]" dest="user_defined_type [6403,6410]"/>
  <match src="yul_variable_declaration [40683,40744]" dest="yul_variable_declaration [40683,40744]"/>
  <match src="identifier: to [1699,1701]" dest="identifier: to [1699,1701]"/>
  <match src="identifier: value [16688,16693]" dest="identifier: value [16688,16693]"/>
  <match src="bool: bool [19871,19875]" dest="bool: bool [19871,19875]"/>
  <match src="return: return [16643,16649]" dest="return: return [16643,16649]"/>
  <match src="): ) [33591,33592]" dest="): ) [33591,33592]"/>
  <match src="for_statement [49528,49747]" dest="for_statement [50143,50362]"/>
  <match src="**: ** [42617,42619]" dest="**: ** [42617,42619]"/>
  <match src="!: ! [37406,37407]" dest="!: ! [37406,37407]"/>
  <match src="call_argument [45068,45085]" dest="call_argument [45066,45083]"/>
  <match src="identifier: size [48396,48400]" dest="identifier: size [49011,49015]"/>
  <match src="user_defined_type [44803,44818]" dest="user_defined_type [44801,44816]"/>
  <match src="comment: // Please note, in some cases it can be 0, but that will not [49384,49444]" dest="comment: // Please note, in some cases it can be 0, but that will not [49999,50059]"/>
  <match src="identifier: onERC1155BatchReceived [46175,46197]" dest="identifier: onERC1155BatchReceived [46173,46195]"/>
  <match src="comment: // shfit to the correct location if neccesary [37913,37958]" dest="comment: // shfit to the correct location if neccesary [37913,37958]"/>
  <match src="comment: // File: contracts/root/RootToken/IMintableERC1155.sol [4830,4884]" dest="comment: // File: contracts/root/RootToken/IMintableERC1155.sol [4830,4884]"/>
  <match src="address: address [43691,43698]" dest="address: address [43691,43698]"/>
  <match src="memory: memory [36693,36699]" dest="memory: memory [36693,36699]"/>
  <match src="identifier: ptr [36886,36889]" dest="identifier: ptr [36886,36889]"/>
  <match src="override: override [9774,9782]" dest="override: override [9774,9782]"/>
  <match src="identifier: Context [27776,27783]" dest="identifier: Context [27776,27783]"/>
  <match src="yul_identifier [42779,42783]" dest="yul_identifier [42779,42783]"/>
  <match src="identifier: errorMessage [25235,25247]" dest="identifier: errorMessage [25235,25247]"/>
  <match src="identifier: item [38187,38191]" dest="identifier: item [38187,38191]"/>
  <match src="string [21693,21753]" dest="string [21693,21753]"/>
  <match src="+: + [39165,39166]" dest="+: + [39165,39166]"/>
  <match src="): ) [33652,33653]" dest="): ) [33652,33653]"/>
  <match src="identifier: item [35903,35907]" dest="identifier: item [35903,35907]"/>
  <match src="): ) [16066,16067]" dest="): ) [16066,16067]"/>
  <match src="identifier: contains [16555,16563]" dest="identifier: contains [16555,16563]"/>
  <match src="identifier: toDeleteIndex [13847,13860]" dest="identifier: toDeleteIndex [13847,13860]"/>
  <match src="=: = [34886,34887]" dest="=: = [34886,34887]"/>
  <match src="comment: /**      * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,      *      * Emits an {ApprovalForAll} event.      *      * Requirements:      *      * - `operator` cannot be the caller.      */ [3001,3257]" dest="comment: /**      * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,      *      * Emits an {ApprovalForAll} event.      *      * Requirements:      *      * - `operator` cannot be the caller.      */ [3001,3257]"/>
  <match src="event: event [29110,29115]" dest="event: event [29110,29115]"/>
  <match src="identifier: value [23571,23576]" dest="identifier: value [23571,23576]"/>
  <match src="call_argument [24664,24668]" dest="call_argument [24664,24668]"/>
  <match src="function: function [9715,9723]" dest="function: function [9715,9723]"/>
  <match src="state_mutability [9769,9773]" dest="state_mutability [9769,9773]"/>
  <match src=",: , [31147,31148]" dest=",: , [31147,31148]"/>
  <match src="address: address [7318,7325]" dest="address: address [7318,7325]"/>
  <match src="identifier: token [51531,51536]" dest="identifier: token [52146,52151]"/>
  <match src="identifier: item [35569,35573]" dest="identifier: item [35569,35573]"/>
  <match src="identifier: _setupContractId [45698,45714]" dest="identifier: _setupContractId [45696,45712]"/>
  <match src="call_argument [44562,44569]" dest="call_argument [44562,44569]"/>
  <match src="yul_function_call [38591,38604]" dest="yul_function_call [38591,38604]"/>
  <match src="let: let [41010,41013]" dest="let: let [41010,41013]"/>
  <match src="comment: /**      * @dev See {IERC165-supportsInterface}.      *      * Time complexity O(1), guaranteed to always use less than 30 000 gas.      */ [9566,9709]" dest="comment: /**      * @dev See {IERC165-supportsInterface}.      *      * Time complexity O(1), guaranteed to always use less than 30 000 gas.      */ [9566,9709]"/>
  <match src="expression_statement [10752,10908]" dest="expression_statement [10752,10908]"/>
  <match src="address: address [50646,50653]" dest="address: address [51261,51268]"/>
  <match src="}: } [31734,31735]" dest="}: } [31734,31735]"/>
  <match src="identifier: i [48444,48445]" dest="identifier: i [49059,49060]"/>
  <match src="bytes: bytes [46017,46022]" dest="bytes: bytes [46015,46020]"/>
  <match src="): ) [40441,40442]" dest="): ) [40441,40442]"/>
  <match src="primitive_type [47134,47141]" dest="primitive_type [47132,47139]"/>
  <match src=".: . [50275,50276]" dest=".: . [50890,50891]"/>
  <match src="visibility [46959,46967]" dest="visibility [46957,46965]"/>
  <match src="): ) [15144,15145]" dest="): ) [15144,15145]"/>
  <match src="call_expression [52547,52748]" dest="call_expression [53279,53480]"/>
  <match src="call_argument [38830,38872]" dest="call_argument [38830,38872]"/>
  <match src="&amp;&amp;: &amp;&amp; [41704,41706]" dest="&amp;&amp;: &amp;&amp; [41704,41706]"/>
  <match src="pure: pure [40092,40096]" dest="pure: pure [40092,40096]"/>
  <match src="else: else [24738,24742]" dest="else: else [24738,24742]"/>
  <match src="identifier: lockTokens [43642,43652]" dest="identifier: lockTokens [43642,43652]"/>
  <match src="if_statement [41767,41940]" dest="if_statement [41767,41940]"/>
  <match src="return_type_definition [18018,18032]" dest="return_type_definition [18018,18032]"/>
  <match src="function_definition [5427,5516]" dest="function_definition [5427,5516]"/>
  <match src="member_expression [51531,51541]" dest="member_expression [52146,52161]"/>
  <match src="(: ( [39029,39030]" dest="(: ( [39029,39030]"/>
  <match src="struct_member [15796,15807]" dest="struct_member [15796,15807]"/>
  <match src="else: else [41612,41616]" dest="else: else [41612,41616]"/>
  <match src="parameter [22561,22578]" dest="parameter [22561,22578]"/>
  <match src="): ) [33731,33732]" dest="): ) [33731,33732]"/>
  <match src="comment: // Storage of set values [12234,12258]" dest="comment: // Storage of set values [12234,12258]"/>
  <match src="identifier: ptr [36951,36954]" dest="identifier: ptr [36951,36954]"/>
  <match src="identifier: RLPItem [36685,36692]" dest="identifier: RLPItem [36685,36692]"/>
  <match src="assignment_expression [39779,39819]" dest="assignment_expression [39779,39819]"/>
  <match src="type_name [45650,45657]" dest="type_name [45648,45655]"/>
  <match src="identifier: value [16596,16601]" dest="identifier: value [16596,16601]"/>
  <match src="type_name [8501,8508]" dest="type_name [8501,8508]"/>
  <match src="variable_declaration_statement [20160,20249]" dest="variable_declaration_statement [20160,20249]"/>
  <match src="parameter [8584,8609]" dest="parameter [8584,8609]"/>
  <match src="type_name [25999,26014]" dest="type_name [25999,26014]"/>
  <match src="type_name [2975,2984]" dest="type_name [2975,2984]"/>
  <match src="identifier: toBeMintedAmounts [49214,49231]" dest="identifier: toBeMintedAmounts [49829,49846]"/>
  <match src="yul_path [36460,36466]" dest="yul_path [36460,36466]"/>
  <match src="yul_path [40823,40830]" dest="yul_path [40823,40830]"/>
  <match src="primitive_type [37680,37687]" dest="primitive_type [37680,37687]"/>
  <match src="visibility [18449,18457]" dest="visibility [18449,18457]"/>
  <match src=",: , [45555,45556]" dest=",: , [45553,45554]"/>
  <match src="primitive_type [9294,9298]" dest="primitive_type [9294,9298]"/>
  <match src="comment: /**      * @dev Returns the admin role that controls `role`. See {grantRole} and      * {revokeRole}.      *      * To change a role's admin, use {_setRoleAdmin}.      */ [30476,30651]" dest="comment: /**      * @dev Returns the admin role that controls `role`. See {grantRole} and      * {revokeRole}.      *      * To change a role's admin, use {_setRoleAdmin}.      */ [30476,30651]"/>
  <match src="(: ( [43652,43653]" dest="(: ( [43652,43653]"/>
  <match src=",: , [41522,41523]" dest=",: , [41522,41523]"/>
  <match src="uint256: uint256 [35616,35623]" dest="uint256: uint256 [35616,35623]"/>
  <match src="type_name [4793,4798]" dest="type_name [4793,4798]"/>
  <match src="primitive_type [23563,23570]" dest="primitive_type [23563,23570]"/>
  <match src="call_expression [37097,37109]" dest="call_expression [37097,37109]"/>
  <match src="member_expression [35334,35345]" dest="member_expression [35334,35345]"/>
  <match src="identifier: memPtr [40584,40590]" dest="identifier: memPtr [40584,40590]"/>
  <match src="primitive_type [3308,3312]" dest="primitive_type [3308,3312]"/>
  <match src="identifier: _itemLength [35735,35746]" dest="identifier: _itemLength [35735,35746]"/>
  <match src="binary_expression [39637,39678]" dest="binary_expression [39637,39678]"/>
  <match src="return_statement [14956,14988]" dest="return_statement [14956,14988]"/>
  <match src="visibility [29646,29652]" dest="visibility [29646,29652]"/>
  <match src="primitive_type [22964,22969]" dest="primitive_type [22964,22969]"/>
  <match src="interface_declaration [43114,44385]" dest="interface_declaration [43114,44385]"/>
  <match src="function: function [15992,16000]" dest="function: function [15992,16000]"/>
  <match src="call_expression [39651,39678]" dest="call_expression [39651,39678]"/>
  <match src="type_name [36335,36339]" dest="type_name [36335,36339]"/>
  <match src="comment: // File: contracts/lib/RLPReader.sol [34362,34398]" dest="comment: // File: contracts/lib/RLPReader.sol [34362,34398]"/>
  <match src="yul_evm_builtin [37975,37977]" dest="yul_evm_builtin [37975,37977]"/>
  <match src="identifier: len [37978,37981]" dest="identifier: len [37978,37981]"/>
  <match src="identifier: safeBatchTransferFrom [47505,47526]" dest="identifier: safeBatchTransferFrom [47503,47524]"/>
  <match src=",: , [23561,23562]" dest=",: , [23561,23562]"/>
  <match src="call_argument [52647,52657]" dest="call_argument [53379,53389]"/>
  <match src="address: address [24010,24017]" dest="address: address [24010,24017]"/>
  <match src="identifier: inited [44497,44503]" dest="identifier: inited [44497,44503]"/>
  <match src="string_literal [31164,31213]" dest="string_literal [31164,31213]"/>
  <match src="(: ( [9349,9350]" dest="(: ( [9349,9350]"/>
  <match src="parameter [4741,4763]" dest="parameter [4741,4763]"/>
  <match src="}: } [44634,44635]" dest="}: } [44634,44635]"/>
  <match src="member_expression [51626,51648]" dest="member_expression [52358,52380]"/>
  <match src="parameter [5458,5468]" dest="parameter [5458,5468]"/>
  <match src="call_argument [36076,36082]" dest="call_argument [36076,36082]"/>
  <match src="identifier: ERC1155Receiver [46377,46392]" dest="identifier: ERC1155Receiver [46375,46390]"/>
  <match src="(: ( [51589,51590]" dest="(: ( [52321,52322]"/>
  <match src="identifier: makeArrayWithAddress [52338,52358]" dest="identifier: makeArrayWithAddress [53070,53090]"/>
  <match src=".: . [47242,47243]" dest=".: . [47240,47241]"/>
  <match src=",: , [24386,24387]" dest=",: , [24386,24387]"/>
  <match src="identifier: _indexes [13445,13453]" dest="identifier: _indexes [13445,13453]"/>
  <match src="type_name [2374,2381]" dest="type_name [2374,2381]"/>
  <match src="member_expression [50452,50473]" dest="member_expression [51067,51088]"/>
  <match src="primitive_type [45981,45988]" dest="primitive_type [45979,45986]"/>
  <match src="return: return [23054,23060]" dest="return: return [23054,23060]"/>
  <match src="uint256: uint256 [47264,47271]" dest="uint256: uint256 [47262,47269]"/>
  <match src="string_literal [48271,48329]" dest="string_literal [48886,48944]"/>
  <match src="primitive_type [16626,16630]" dest="primitive_type [16626,16630]"/>
  <match src="primitive_type [41401,41408]" dest="primitive_type [41401,41408]"/>
  <match src="event: event [28726,28731]" dest="event: event [28726,28731]"/>
  <match src="(: ( [37977,37978]" dest="(: ( [37977,37978]"/>
  <match src="identifier: set [17746,17749]" dest="identifier: set [17746,17749]"/>
  <match src="tuple_expression [52031,52053]" dest="tuple_expression [52763,52785]"/>
  <match src="not: not [42706,42709]" dest="not: not [42706,42709]"/>
  <match src="{: { [34105,34106]" dest="{: { [34105,34106]"/>
  <match src="primitive_type [38742,38749]" dest="primitive_type [38742,38749]"/>
  <match src="interface_declaration [1173,4826]" dest="interface_declaration [1173,4826]"/>
  <match src="&quot;: &quot; [24171,24172]" dest="&quot;: &quot; [24171,24172]"/>
  <match src="add: add [41233,41236]" dest="add: add [41233,41236]"/>
  <match src="(: ( [29631,29632]" dest="(: ( [29631,29632]"/>
  <match src="call_argument [16888,16898]" dest="call_argument [16888,16898]"/>
  <match src="identifier: memPtr [39711,39717]" dest="identifier: memPtr [39711,39717]"/>
  <match src="primitive_type [52615,52622]" dest="primitive_type [53347,53354]"/>
  <match src="identifier: token [51038,51043]" dest="identifier: token [51653,51658]"/>
  <match src="parameter [43753,43779]" dest="parameter [43753,43779]"/>
  <match src="type_name [45542,45549]" dest="type_name [45540,45547]"/>
  <match src="yul_path [38597,38603]" dest="yul_path [38597,38603]"/>
  <match src="type_cast_expression [50606,50642]" dest="type_cast_expression [51221,51257]"/>
  <match src="type_cast_expression [18968,18999]" dest="type_cast_expression [18968,18999]"/>
  <match src="member_expression [33559,33579]" dest="member_expression [33559,33579]"/>
  <match src="identifier: onERC1155BatchReceived [8468,8490]" dest="identifier: onERC1155BatchReceived [8468,8490]"/>
  <match src="): ) [836,837]" dest="): ) [836,837]"/>
  <match src="): ) [36466,36467]" dest="): ) [36466,36467]"/>
  <match src="call_argument [35576,35602]" dest="call_argument [35576,35602]"/>
  <match src="): ) [16694,16695]" dest="): ) [16694,16695]"/>
  <match src="type_name [36812,36817]" dest="type_name [36812,36817]"/>
  <match src="event_paramater [1385,1405]" dest="event_paramater [1385,1405]"/>
  <match src="primitive_type [5441,5448]" dest="primitive_type [5441,5448]"/>
  <match src="mapping: mapping [12423,12430]" dest="mapping: mapping [12423,12430]"/>
  <match src="calldata: calldata [46931,46939]" dest="calldata: calldata [46929,46937]"/>
  <match src="number_literal: 1 [41938,41939]" dest="number_literal: 1 [41938,41939]"/>
  <match src="&gt;=: &gt;= [42316,42318]" dest="&gt;=: &gt;= [42316,42318]"/>
  <match src="call_expression [33756,33792]" dest="call_expression [33756,33792]"/>
  <match src="identifier: tokenBalances [49055,49068]" dest="identifier: tokenBalances [49670,49683]"/>
  <match src="(: ( [17765,17766]" dest="(: ( [17765,17766]"/>
  <match src="primitive_type [46897,46904]" dest="primitive_type [46895,46902]"/>
  <match src="call_expression [31109,31214]" dest="call_expression [31109,31214]"/>
  <match src="using: using [44904,44909]" dest="using: using [44902,44907]"/>
  <match src="type_name [29175,29182]" dest="type_name [29175,29182]"/>
  <match src="type_name [14902,14909]" dest="type_name [14902,14909]"/>
  <match src="string_literal [45309,45369]" dest="string_literal [45307,45367]"/>
  <match src="call_argument [24147,24151]" dest="call_argument [24147,24151]"/>
  <match src="type_name [35449,35456]" dest="type_name [35449,35456]"/>
  <match src="inheritance_specifier [10688,10694]" dest="inheritance_specifier [10688,10694]"/>
  <match src="variable_declaration [38489,38503]" dest="variable_declaration [38489,38503]"/>
  <match src="&quot;: &quot; [51590,51591]" dest="&quot;: &quot; [52322,52323]"/>
  <match src="return: return [18961,18967]" dest="return: return [18961,18967]"/>
  <match src="identifier: offset [37688,37694]" dest="identifier: offset [37688,37694]"/>
  <match src="}: } [21761,21762]" dest="}: } [21761,21762]"/>
  <match src="user_defined_type [1195,1202]" dest="user_defined_type [1195,1202]"/>
  <match src="view: view [2644,2648]" dest="view: view [2644,2648]"/>
  <match src="identifier: byte0 [40367,40372]" dest="identifier: byte0 [40367,40372]"/>
  <match src="call_expression [36933,36965]" dest="call_expression [36933,36965]"/>
  <match src="address: address [44312,44319]" dest="address: address [44312,44319]"/>
  <match src=":=: := [40206,40208]" dest=":=: := [40206,40208]"/>
  <match src=",: , [4238,4239]" dest=",: , [4238,4239]"/>
  <match src=".: . [44933,44934]" dest=".: . [44931,44932]"/>
  <match src=",: , [43742,43743]" dest=",: , [43742,43743]"/>
  <match src="]: ] [48475,48476]" dest="]: ] [49090,49091]"/>
  <match src="(: ( [35640,35641]" dest="(: ( [35640,35641]"/>
  <match src="identifier: require [38292,38299]" dest="identifier: require [38292,38299]"/>
  <match src="yul_decimal_number: 0 [41521,41522]" dest="yul_decimal_number: 0 [41521,41522]"/>
  <match src="primitive_type [7362,7369]" dest="primitive_type [7362,7369]"/>
  <match src="call_expression [36059,36083]" dest="call_expression [36059,36083]"/>
  <match src="}: } [33476,33477]" dest="}: } [33476,33477]"/>
  <match src="visibility [45246,45252]" dest="visibility [45244,45250]"/>
  <match src="primitive_type [34129,34135]" dest="primitive_type [34129,34135]"/>
  <match src="variable_declaration [20160,20179]" dest="variable_declaration [20160,20179]"/>
  <match src="}: } [42429,42430]" dest="}: } [42429,42430]"/>
  <match src="call_argument [48271,48329]" dest="call_argument [48886,48944]"/>
  <match src="parameter [6111,6133]" dest="parameter [6111,6133]"/>
  <match src="[: [ [2906,2907]" dest="[: [ [2906,2907]"/>
  <match src="type_name [1703,1712]" dest="type_name [1703,1712]"/>
  <match src="): ) [7411,7412]" dest="): ) [7411,7412]"/>
  <match src="yul_function_call [42766,42777]" dest="yul_function_call [42766,42777]"/>
  <match src="call_expression [10785,10803]" dest="call_expression [10785,10803]"/>
  <match src="(: ( [22597,22598]" dest="(: ( [22597,22598]"/>
  <match src="yul_function_call [40819,40834]" dest="yul_function_call [40819,40834]"/>
  <match src="identifier: result [36047,36053]" dest="identifier: result [36047,36053]"/>
  <match src="identifier: items [35697,35702]" dest="identifier: items [35697,35702]"/>
  <match src=",: , [31162,31163]" dest=",: , [31162,31163]"/>
  <match src="returns: returns [36326,36333]" dest="returns: returns [36326,36333]"/>
  <match src="(: ( [16326,16327]" dest="(: ( [16326,16327]"/>
  <match src="true [12992,12996]" dest="true [12992,12996]"/>
  <match src="}: } [10917,10918]" dest="}: } [10917,10918]"/>
  <match src="type_name [12660,12663]" dest="type_name [12660,12663]"/>
  <match src="&quot;: &quot; [52731,52732]" dest="&quot;: &quot; [53463,53464]"/>
  <match src="call_expression [45289,45376]" dest="call_expression [45287,45374]"/>
  <match src="call_expression [37558,37582]" dest="call_expression [37558,37582]"/>
  <match src="identifier: WORD_SIZE [42620,42629]" dest="identifier: WORD_SIZE [42620,42629]"/>
  <match src="(: ( [19830,19831]" dest="(: ( [19830,19831]"/>
  <match src="primitive_type [9120,9126]" dest="primitive_type [9120,9126]"/>
  <match src="identifier: success [21684,21691]" dest="identifier: success [21684,21691]"/>
  <match src="): ) [16693,16694]" dest="): ) [16693,16694]"/>
  <match src="(: ( [16887,16888]" dest="(: ( [16887,16888]"/>
  <match src="(: ( [17324,17325]" dest="(: ( [17324,17325]"/>
  <match src="calldata: calldata [44346,44354]" dest="calldata: calldata [44346,44354]"/>
  <match src=",: , [51206,51207]" dest=",: , [51821,51822]"/>
  <match src="type_name [31525,31532]" dest="type_name [31525,31532]"/>
  <match src="identifier: memPtr [38522,38528]" dest="identifier: memPtr [38522,38528]"/>
  <match src="type_name [17263,17273]" dest="type_name [17263,17273]"/>
  <match src="): ) [35068,35069]" dest="): ) [35068,35069]"/>
  <match src="primitive_type [37378,37385]" dest="primitive_type [37378,37385]"/>
  <match src="{: { [15610,15611]" dest="{: { [15610,15611]"/>
  <match src="returns: returns [852,859]" dest="returns: returns [852,859]"/>
  <match src="state_mutability [36321,36325]" dest="state_mutability [36321,36325]"/>
  <match src="external: external [5507,5515]" dest="external: external [5507,5515]"/>
  <match src="return_statement [17734,17774]" dest="return_statement [17734,17774]"/>
  <match src="call_expression [14574,14591]" dest="call_expression [14574,14591]"/>
  <match src="inheritance_specifier [27776,27783]" dest="inheritance_specifier [27776,27783]"/>
  <match src="call_expression [38412,38476]" dest="call_expression [38412,38476]"/>
  <match src=".: . [31137,31138]" dest=".: . [31137,31138]"/>
  <match src="}: } [13059,13060]" dest="}: } [13059,13060]"/>
  <match src="type_name [45945,45952]" dest="type_name [45943,45950]"/>
  <match src="address: address [46208,46215]" dest="address: address [46206,46213]"/>
  <match src="parameter [25999,26014]" dest="parameter [25999,26014]"/>
  <match src="type_name [29632,29639]" dest="type_name [29632,29639]"/>
  <match src="(: ( [31632,31633]" dest="(: ( [31632,31633]"/>
  <match src="array_access [33435,33447]" dest="array_access [33435,33447]"/>
  <match src="(: ( [48113,48114]" dest="(: ( [48728,48729]"/>
  <match src="uint256: uint256 [37802,37809]" dest="uint256: uint256 [37802,37809]"/>
  <match src="function_definition [16546,16704]" dest="function_definition [16546,16704]"/>
  <match src="): ) [37075,37076]" dest="): ) [37075,37076]"/>
  <match src="[: [ [9836,9837]" dest="[: [ [9836,9837]"/>
  <match src="variable_declaration_statement [39619,39679]" dest="variable_declaration_statement [39619,39679]"/>
  <match src="return_type_definition [23020,23042]" dest="return_type_definition [23020,23042]"/>
  <match src="identifier: item [38531,38535]" dest="identifier: item [38531,38535]"/>
  <match src="bytes: bytes [38717,38722]" dest="bytes: bytes [38717,38722]"/>
  <match src="return_type_definition [38708,38730]" dest="return_type_definition [38708,38730]"/>
  <match src="bytes32: bytes32 [29632,29639]" dest="bytes32: bytes32 [29632,29639]"/>
  <match src="identifier: len [37754,37757]" dest="identifier: len [37754,37757]"/>
  <match src="type_name [2623,2630]" dest="type_name [2623,2630]"/>
  <match src="return_statement [36976,36990]" dest="return_statement [36976,36990]"/>
  <match src="): ) [49020,49021]" dest="): ) [49635,49636]"/>
  <match src="block_statement [42348,42506]" dest="block_statement [42348,42506]"/>
  <match src="comment: // File: contracts/common/Initializable.sol [44389,44432]" dest="comment: // File: contracts/common/Initializable.sol [44389,44432]"/>
  <match src="member_expression [30430,30450]" dest="member_expression [30430,30450]"/>
  <match src="primitive_type [1439,1446]" dest="primitive_type [1439,1446]"/>
  <match src="type_name [16626,16630]" dest="type_name [16626,16630]"/>
  <match src="return_type_definition [30705,30722]" dest="return_type_definition [30705,30722]"/>
  <match src=",: , [51559,51560]" dest=",: , [52224,52225]"/>
  <match src="call_expression [39799,39819]" dest="call_expression [39799,39819]"/>
  <match src="==: == [38429,38431]" dest="==: == [38429,38431]"/>
  <match src="array_access [30430,30442]" dest="array_access [30430,30442]"/>
  <match src="add: add [40819,40822]" dest="add: add [40819,40822]"/>
  <match src="identifier: functionCall [22628,22640]" dest="identifier: functionCall [22628,22640]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC165} interface.  *  * Contracts may inherit from this and call {_registerInterface} to declare  * their support of an interface.  */ [8822,8998]" dest="comment: /**  * @dev Implementation of the {IERC165} interface.  *  * Contracts may inherit from this and call {_registerInterface} to declare  * their support of an interface.  */ [8822,8998]"/>
  <match src="identifier: i [36054,36055]" dest="identifier: i [36054,36055]"/>
  <match src="(: ( [30402,30403]" dest="(: ( [30402,30403]"/>
  <match src="type_name [12268,12275]" dest="type_name [12268,12275]"/>
  <match src="function: function [14866,14874]" dest="function: function [14866,14874]"/>
  <match src="comment: // Checking whether MintableERC1155 contract has enough [51228,51283]" dest="comment: // Checking whether MintableERC1155 contract has enough [51843,51898]"/>
  <match src="bytes: bytes [24433,24438]" dest="bytes: bytes [24433,24438]"/>
  <match src="type_name [45428,45435]" dest="type_name [45426,45433]"/>
  <match src="block_statement [51512,51610]" dest="block_statement [52127,52342]"/>
  <match src="identifier: numItems [35632,35640]" dest="identifier: numItems [35632,35640]"/>
  <match src="member_expression [13441,13453]" dest="member_expression [13441,13453]"/>
  <match src="(: ( [42619,42620]" dest="(: ( [42619,42620]"/>
  <match src="identifier: isContract [19820,19830]" dest="identifier: isContract [19820,19830]"/>
  <match src="memory: memory [50361,50367]" dest="memory: memory [50976,50982]"/>
  <match src="call_argument [46982,46994]" dest="call_argument [46980,46992]"/>
  <match src="(: ( [12431,12432]" dest="(: ( [12431,12432]"/>
  <match src="number_literal: 32 [34888,34890]" dest="number_literal: 32 [34888,34890]"/>
  <match src="): ) [25168,25169]" dest="): ) [25168,25169]"/>
  <match src="identifier: members [29397,29404]" dest="identifier: members [29397,29404]"/>
  <match src="identifier: LIST_SHORT_START [40425,40441]" dest="identifier: LIST_SHORT_START [40425,40441]"/>
  <match src="{: { [34914,34915]" dest="{: { [34914,34915]"/>
  <match src="): ) [38603,38604]" dest="): ) [38603,38604]"/>
  <match src="identifier: byte0 [36358,36363]" dest="identifier: byte0 [36358,36363]"/>
  <match src="}: } [18325,18326]" dest="}: } [18325,18326]"/>
  <match src="[: [ [1710,1711]" dest="[: [ [1710,1711]"/>
  <match src="(: ( [47993,47994]" dest="(: ( [48608,48609]"/>
  <match src="bytes32: bytes32 [12677,12684]" dest="bytes32: bytes32 [12677,12684]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [23130,23491]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [23130,23491]"/>
  <match src="type_cast_expression [52724,52733]" dest="type_cast_expression [53456,53465]"/>
  <match src="identifier: _setupRole [45753,45763]" dest="identifier: _setupRole [45751,45761]"/>
  <match src="parameter [29667,29674]" dest="parameter [29667,29674]"/>
  <match src="(: ( [27991,27992]" dest="(: ( [27991,27992]"/>
  <match src="yul_identifier [41059,41065]" dest="yul_identifier [41059,41065]"/>
  <match src="identifier: RLPReader [50266,50275]" dest="identifier: RLPReader [50881,50890]"/>
  <match src="&quot;: &quot; [37111,37112]" dest="&quot;: &quot; [37111,37112]"/>
  <match src="primitive_type [29175,29182]" dest="primitive_type [29175,29182]"/>
  <match src="function: function [3263,3271]" dest="function: function [3263,3271]"/>
  <match src="identifier: memPtr [35879,35885]" dest="identifier: memPtr [35879,35885]"/>
  <match src="uint256: uint256 [16111,16118]" dest="uint256: uint256 [16111,16118]"/>
  <match src="identifier: initializer [44529,44540]" dest="identifier: initializer [44529,44540]"/>
  <match src="returns: returns [16844,16851]" dest="returns: returns [16844,16851]"/>
  <match src="): ) [12751,12752]" dest="): ) [12751,12752]"/>
  <match src="string [45715,45741]" dest="string [45713,45739]"/>
  <match src=".: . [51979,51980]" dest=".: . [52711,52712]"/>
  <match src="memory: memory [22990,22996]" dest="memory: memory [22990,22996]"/>
  <match src="external: external [3546,3554]" dest="external: external [3546,3554]"/>
  <match src="identifier: id [5466,5468]" dest="identifier: id [5466,5468]"/>
  <match src="call_argument [51193,51206]" dest="call_argument [51808,51821]"/>
  <match src="&quot;: &quot; [24486,24487]" dest="&quot;: &quot; [24486,24487]"/>
  <match src="memory: memory [49014,49020]" dest="memory: memory [49629,49635]"/>
  <match src="bytes32: bytes32 [28036,28043]" dest="bytes32: bytes32 [28036,28043]"/>
  <match src="state_mutability [25977,25981]" dest="state_mutability [25977,25981]"/>
  <match src="return_type_definition [26102,26124]" dest="return_type_definition [26102,26124]"/>
  <match src="}: } [34202,34203]" dest="}: } [34202,34203]"/>
  <match src="(: ( [37208,37209]" dest="(: ( [37208,37209]"/>
  <match src="{: { [33741,33742]" dest="{: { [33741,33742]"/>
  <match src="type_name [12423,12451]" dest="type_name [12423,12451]"/>
  <match src="type_name [3528,3535]" dest="type_name [3528,3535]"/>
  <match src="[: [ [48360,48361]" dest="[: [ [48975,48976]"/>
  <match src="[: [ [35664,35665]" dest="[: [ [35664,35665]"/>
  <match src="identifier: TOKEN_TYPE [45045,45055]" dest="identifier: TOKEN_TYPE [45043,45053]"/>
  <match src="identifier: item [39637,39641]" dest="identifier: item [39637,39641]"/>
  <match src="{: { [21644,21645]" dest="{: { [21644,21645]"/>
  <match src="type_name [1359,1366]" dest="type_name [1359,1366]"/>
  <match src="member_expression [51842,51867]" dest="member_expression [52574,52599]"/>
  <match src="variable_declaration [13839,13860]" dest="variable_declaration [13839,13860]"/>
  <match src="variable_declaration_statement [37777,37792]" dest="variable_declaration_statement [37777,37792]"/>
  <match src="return_statement [36521,36534]" dest="return_statement [36521,36534]"/>
  <match src="): ) [25966,25967]" dest="): ) [25966,25967]"/>
  <match src="identifier: item [37349,37353]" dest="identifier: item [37349,37353]"/>
  <match src="binary_expression [40258,40284]" dest="binary_expression [40258,40284]"/>
  <match src="member_expression [29694,29714]" dest="member_expression [29694,29714]"/>
  <match src="binary_expression [51561,51582]" dest="binary_expression [52267,52288]"/>
  <match src="): ) [18948,18949]" dest="): ) [18948,18949]"/>
  <match src="identifier: id [4220,4222]" dest="identifier: id [4220,4222]"/>
  <match src="=: = [28079,28080]" dest="=: = [28079,28080]"/>
  <match src="type_name [28791,28798]" dest="type_name [28791,28798]"/>
  <match src="call_argument [24253,24259]" dest="call_argument [24253,24259]"/>
  <match src="address: address [52359,52366]" dest="address: address [53091,53098]"/>
  <match src="visibility [18918,18926]" dest="visibility [18918,18926]"/>
  <match src="): ) [49292,49293]" dest="): ) [49907,49908]"/>
  <match src="expression_statement [52547,52749]" dest="expression_statement [53279,53481]"/>
  <match src=".: . [50535,50536]" dest=".: . [51150,51151]"/>
  <match src="(: ( [30453,30454]" dest="(: ( [30453,30454]"/>
  <match src="identifier: onERC1155BatchReceived [10865,10887]" dest="identifier: onERC1155BatchReceived [10865,10887]"/>
  <match src="primitive_type [38941,38948]" dest="primitive_type [38941,38948]"/>
  <match src="): ) [40894,40895]" dest="): ) [40894,40895]"/>
  <match src=",: , [22647,22648]" dest=",: , [22647,22648]"/>
  <match src="): ) [52384,52385]" dest="): ) [53116,53117]"/>
  <match src="expression_statement [37467,37525]" dest="expression_statement [37467,37525]"/>
  <match src=",: , [1716,1717]" dest=",: , [1716,1717]"/>
  <match src="parameter [43691,43714]" dest="parameter [43691,43714]"/>
  <match src="pragma: pragma [6306,6312]" dest="pragma: pragma [6306,6312]"/>
  <match src="yul_identifier [41507,41512]" dest="yul_identifier [41507,41512]"/>
  <match src="identifier: depositor [47352,47361]" dest="identifier: depositor [47350,47359]"/>
  <match src="{: { [10713,10714]" dest="{: { [10713,10714]"/>
  <match src="identifier: amount [51749,51755]" dest="identifier: amount [52481,52487]"/>
  <match src="if: if [36491,36493]" dest="if: if [36491,36493]"/>
  <match src="primitive_type [7318,7325]" dest="primitive_type [7318,7325]"/>
  <match src="member_expression [18507,18517]" dest="member_expression [18507,18517]"/>
  <match src=".: . [33776,33777]" dest=".: . [33776,33777]"/>
  <match src="(: ( [40822,40823]" dest="(: ( [40822,40823]"/>
  <match src="user_defined_type [27815,27839]" dest="user_defined_type [27815,27839]"/>
  <match src="number_literal: 0 [48431,48432]" dest="number_literal: 0 [49046,49047]"/>
  <match src="(: ( [13252,13253]" dest="(: ( [13252,13253]"/>
  <match src="yul_function_call [42706,42715]" dest="yul_function_call [42706,42715]"/>
  <match src="identifier: byte0 [41707,41712]" dest="identifier: byte0 [41707,41712]"/>
  <match src="assembly: assembly [36413,36421]" dest="assembly: assembly [36413,36421]"/>
  <match src="yul_identifier [38597,38603]" dest="yul_identifier [38597,38603]"/>
  <match src="identifier: LIST_SHORT_START [40929,40945]" dest="identifier: LIST_SHORT_START [40929,40945]"/>
  <match src="comment: /**      * @dev Returns true if this contract implements the interface defined by      * `interfaceId`. See the corresponding      * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]      * to learn more about how these ids are created.      *      * This function call must use less than 30 000 gas.      */ [438,785]" dest="comment: /**      * @dev Returns true if this contract implements the interface defined by      * `interfaceId`. See the corresponding      * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]      * to learn more about how these ids are created.      *      * This function call must use less than 30 000 gas.      */ [438,785]"/>
  <match src="view: view [847,851]" dest="view: view [847,851]"/>
  <match src="): ) [42853,42854]" dest="): ) [42853,42854]"/>
  <match src="primitive_type [40068,40075]" dest="primitive_type [40068,40075]"/>
  <match src="revert_statement [25228,25249]" dest="revert_statement [25228,25249]"/>
  <match src=",: , [47415,47416]" dest=",: , [47413,47414]"/>
  <match src="}: } [35306,35307]" dest="}: } [35306,35307]"/>
  <match src="identifier: require [37201,37208]" dest="identifier: require [37201,37208]"/>
  <match src="identifier: copy [42121,42125]" dest="identifier: copy [42121,42125]"/>
  <match src="): ) [16388,16389]" dest="): ) [16388,16389]"/>
  <match src="contract_body [34672,42876]" dest="contract_body [34672,42876]"/>
  <match src="div: div [41118,41121]" dest="div: div [41118,41121]"/>
  <match src="indexed: indexed [1929,1936]" dest="indexed: indexed [1929,1936]"/>
  <match src="assembly: assembly [36862,36870]" dest="assembly: assembly [36862,36870]"/>
  <match src="user_defined_type [35687,35694]" dest="user_defined_type [35687,35694]"/>
  <match src="return_type_definition [22589,22611]" dest="return_type_definition [22589,22611]"/>
  <match src="primitive_type [31525,31532]" dest="primitive_type [31525,31532]"/>
  <match src="++: ++ [35984,35986]" dest="++: ++ [35984,35986]"/>
  <match src="string_literal [24171,24211]" dest="string_literal [24171,24211]"/>
  <match src="type_name [18198,18205]" dest="type_name [18198,18205]"/>
  <match src="using: using [27846,27851]" dest="using: using [27846,27851]"/>
  <match src="parameter [6099,6109]" dest="parameter [6099,6109]"/>
  <match src="): ) [16898,16899]" dest="): ) [16898,16899]"/>
  <match src="contract_body [25939,26296]" dest="contract_body [25939,26296]"/>
  <match src="identifier: contractId [34153,34163]" dest="identifier: contractId [34153,34163]"/>
  <match src="&lt;: &lt; [36501,36502]" dest="&lt;: &lt; [36501,36502]"/>
  <match src="member_expression [38955,38963]" dest="member_expression [38955,38963]"/>
  <match src="identifier: rootToken [52564,52573]" dest="identifier: rootToken [53296,53305]"/>
  <match src="expression_statement [38292,38374]" dest="expression_statement [38292,38374]"/>
  <match src="primitive_type [19831,19838]" dest="primitive_type [19831,19838]"/>
  <match src="identifier: memPtr [37810,37816]" dest="identifier: memPtr [37810,37816]"/>
  <match src=".: . [24152,24153]" dest=".: . [24152,24153]"/>
  <match src="(: ( [5440,5441]" dest="(: ( [5440,5441]"/>
  <match src="): ) [41261,41262]" dest="): ) [41261,41262]"/>
  <match src="call_argument [52506,52515]" dest="call_argument [53238,53247]"/>
  <match src="type_name [30353,30360]" dest="type_name [30353,30360]"/>
  <match src="bytes: bytes [22561,22566]" dest="bytes: bytes [22561,22566]"/>
  <match src="let: let [42675,42678]" dest="let: let [42675,42678]"/>
  <match src="pure: pure [37364,37368]" dest="pure: pure [37364,37368]"/>
  <match src="identifier: _functionCallWithValue [24230,24252]" dest="identifier: _functionCallWithValue [24230,24252]"/>
  <match src="(: ( [16415,16416]" dest="(: ( [16415,16416]"/>
  <match src="variable_declaration_statement [35957,35971]" dest="variable_declaration_statement [35957,35971]"/>
  <match src="function_body [49022,49791]" dest="function_body [49637,50406]"/>
  <match src="(: ( [42835,42836]" dest="(: ( [42835,42836]"/>
  <match src="variable_declaration [49197,49231]" dest="variable_declaration [49812,49846]"/>
  <match src="primitive_type [6163,6168]" dest="primitive_type [6163,6168]"/>
  <match src=",: , [44818,44819]" dest=",: , [44816,44817]"/>
  <match src="function: function [30657,30665]" dest="function: function [30657,30665]"/>
  <match src="yul_identifier [40734,40741]" dest="yul_identifier [40734,40741]"/>
  <match src="}: } [14772,14773]" dest="}: } [14772,14773]"/>
  <match src="bytes: bytes [52724,52729]" dest="bytes: bytes [53456,53461]"/>
  <match src="identifier: result [39118,39124]" dest="identifier: result [39118,39124]"/>
  <match src="call_expression [16086,16127]" dest="call_expression [16086,16127]"/>
  <match src="primitive_type [861,865]" dest="primitive_type [861,865]"/>
  <match src="identifier: len [39184,39187]" dest="identifier: len [39184,39187]"/>
  <match src="function_body [18950,19007]" dest="function_body [18950,19007]"/>
  <match src="}: } [30770,30771]" dest="}: } [30770,30771]"/>
  <match src="]: ] [49205,49206]" dest="]: ] [49820,49821]"/>
  <match src="parameter [29322,29337]" dest="parameter [29322,29337]"/>
  <match src="[: [ [49204,49205]" dest="[: [ [49819,49820]"/>
  <match src="primitive_type [13839,13846]" dest="primitive_type [13839,13846]"/>
  <match src="identifier: account [33724,33731]" dest="identifier: account [33724,33731]"/>
  <match src="{: { [33794,33795]" dest="{: { [33794,33795]"/>
  <match src="solidity_version_comparison_operator [26411,26413]" dest="solidity_version_comparison_operator [26411,26413]"/>
  <match src="type_name [35926,35933]" dest="type_name [35926,35933]"/>
  <match src="primitive_type [5458,5465]" dest="primitive_type [5458,5465]"/>
  <match src="(: ( [32328,32329]" dest="(: ( [32328,32329]"/>
  <match src="(: ( [37377,37378]" dest="(: ( [37377,37378]"/>
  <match src="state_variable_declaration [27983,28028]" dest="state_variable_declaration [27983,28028]"/>
  <match src=".: . [12955,12956]" dest=".: . [12955,12956]"/>
  <match src="call_expression [39148,39188]" dest="call_expression [39148,39188]"/>
  <match src="yul_variable_declaration [41010,41041]" dest="yul_variable_declaration [41010,41041]"/>
  <match src="call_argument [18059,18069]" dest="call_argument [18059,18069]"/>
  <match src="function: function [32242,32250]" dest="function: function [32242,32250]"/>
  <match src="identifier: endPtr [39874,39880]" dest="identifier: endPtr [39874,39880]"/>
  <match src="identifier: interfaceId [10299,10310]" dest="identifier: interfaceId [10299,10310]"/>
  <match src="comment: /**  * @dev Interface of the ERC165 standard, as defined in the  * https://eips.ethereum.org/EIPS/eip-165[EIP].  *  * Implementers can declare support of contract interfaces, which can then be  * queried by others ({ERC165Checker}).  *  * For an implementation, see {ERC165}.  */ [124,411]" dest="comment: /**  * @dev Interface of the ERC165 standard, as defined in the  * https://eips.ethereum.org/EIPS/eip-165[EIP].  *  * Implementers can declare support of contract interfaces, which can then be  * queried by others ({ERC165Checker}).  *  * For an implementation, see {ERC165}.  */ [124,411]"/>
  <match src="public: public [31083,31089]" dest="public: public [31083,31089]"/>
  <match src="(: ( [40316,40317]" dest="(: ( [40316,40317]"/>
  <match src="}: } [41276,41277]" dest="}: } [41276,41277]"/>
  <match src="call_argument [37414,37418]" dest="call_argument [37414,37418]"/>
  <match src="member_expression [15629,15647]" dest="member_expression [15629,15647]"/>
  <match src="bool: bool [3308,3312]" dest="bool: bool [3308,3312]"/>
  <match src="return_type_definition [852,866]" dest="return_type_definition [852,866]"/>
  <match src="identifier: _itemLength [40056,40067]" dest="identifier: _itemLength [40056,40067]"/>
  <match src="member_expression [37570,37581]" dest="member_expression [37570,37581]"/>
  <match src="type_name [4765,4772]" dest="type_name [4765,4772]"/>
  <match src="{: { [38566,38567]" dest="{: { [38566,38567]"/>
  <match src="yul_function_call [42833,42854]" dest="yul_function_call [42833,42854]"/>
  <match src="identifier: DEFAULT_ADMIN_ROLE [28060,28078]" dest="identifier: DEFAULT_ADMIN_ROLE [28060,28078]"/>
  <match src="]: ] [8592,8593]" dest="]: ] [8592,8593]"/>
  <match src="binary_expression [41906,41939]" dest="binary_expression [41906,41939]"/>
  <match src="(: ( [41856,41857]" dest="(: ( [41856,41857]"/>
  <match src="call_argument [35641,35645]" dest="call_argument [35641,35645]"/>
  <match src="): ) [51679,51680]" dest="): ) [52411,52412]"/>
  <match src="}: } [33872,33873]" dest="}: } [33872,33873]"/>
  <match src="identifier: rootToken [52127,52136]" dest="identifier: rootToken [52859,52868]"/>
  <match src="uint256: uint256 [35714,35721]" dest="uint256: uint256 [35714,35721]"/>
  <match src="(: ( [35561,35562]" dest="(: ( [35561,35562]"/>
  <match src="identifier: set [18059,18062]" dest="identifier: set [18059,18062]"/>
  <match src="visibility [15579,15586]" dest="visibility [15579,15586]"/>
  <match src="function: function [791,799]" dest="function: function [791,799]"/>
  <match src="function_body [37387,38110]" dest="function_body [37387,38110]"/>
  <match src="primitive_type [38998,39003]" dest="primitive_type [38998,39003]"/>
  <match src="primitive_type [14939,14943]" dest="primitive_type [14939,14943]"/>
  <match src="tuple_expression [50971,50989]" dest="tuple_expression [51586,51604]"/>
  <match src="bytes32: bytes32 [33054,33061]" dest="bytes32: bytes32 [33054,33061]"/>
  <match src=".: . [13915,13916]" dest=".: . [13915,13916]"/>
  <match src="call_expression [50306,50321]" dest="call_expression [50921,50936]"/>
  <match src="call_argument [37712,37723]" dest="call_argument [37712,37723]"/>
  <match src="type_name [46273,46280]" dest="type_name [46271,46278]"/>
  <match src="(: ( [18197,18198]" dest="(: ( [18197,18198]"/>
  <match src="visibility [30693,30699]" dest="visibility [30693,30699]"/>
  <match src="member_expression [37819,37830]" dest="member_expression [37819,37830]"/>
  <match src="interface_declaration [413,870]" dest="interface_declaration [413,870]"/>
  <match src="uint256: uint256 [16436,16443]" dest="uint256: uint256 [16436,16443]"/>
  <match src=",: , [52438,52439]" dest=",: , [53170,53171]"/>
  <match src="number_literal: 33 [37487,37489]" dest="number_literal: 33 [37487,37489]"/>
  <match src="identifier: item [37475,37479]" dest="identifier: item [37475,37479]"/>
  <match src="uint256: uint256 [2975,2982]" dest="uint256: uint256 [2975,2982]"/>
  <match src="call_argument [51728,51730]" dest="call_argument [52460,52462]"/>
  <match src="identifier: dataLen [36116,36123]" dest="identifier: dataLen [36116,36123]"/>
  <match src="visibility [42200,42207]" dest="visibility [42200,42207]"/>
  <match src="contract_body [43140,44385]" dest="contract_body [43140,44385]"/>
  <match src="comment: // @return number of payload items inside an encoded list. [39271,39329]" dest="comment: // @return number of payload items inside an encoded list. [39271,39329]"/>
  <match src="identifier: dataLen [40810,40817]" dest="identifier: dataLen [40810,40817]"/>
  <match src="}: } [23121,23122]" dest="}: } [23121,23122]"/>
  <match src="function: function [36275,36283]" dest="function: function [36275,36283]"/>
  <match src="identifier: item [37712,37716]" dest="identifier: item [37712,37716]"/>
  <match src="return: return [16079,16085]" dest="return: return [16079,16085]"/>
  <match src="type_name [46017,46022]" dest="type_name [46015,46020]"/>
  <match src="]: ] [8559,8560]" dest="]: ] [8559,8560]"/>
  <match src=".: . [15715,15716]" dest=".: . [15715,15716]"/>
  <match src="(: ( [16118,16119]" dest="(: ( [16118,16119]"/>
  <match src="override: override [46333,46341]" dest="override: override [46331,46339]"/>
  <match src="identifier: selector [10822,10830]" dest="identifier: selector [10822,10830]"/>
  <match src="): ) [1452,1453]" dest="): ) [1452,1453]"/>
  <match src="comment: // This modifies the order of the array, as noted in {at}. [13765,13823]" dest="comment: // This modifies the order of the array, as noted in {at}. [13765,13823]"/>
  <match src="visibility [9762,9768]" dest="visibility [9762,9768]"/>
  <match src="function: function [4160,4168]" dest="function: function [4160,4168]"/>
  <match src="function: function [40047,40055]" dest="function: function [40047,40055]"/>
  <match src=",: , [52657,52658]" dest=",: , [53389,53390]"/>
  <match src="comment: /** RLPItem conversions into data types **/ [36571,36614]" dest="comment: /** RLPItem conversions into data types **/ [36571,36614]"/>
  <match src="}: } [15189,15190]" dest="}: } [15189,15190]"/>
  <match src="type_name [16588,16595]" dest="type_name [16588,16595]"/>
  <match src="identifier: dataLen [36003,36010]" dest="identifier: dataLen [36003,36010]"/>
  <match src="let: let [42746,42749]" dest="let: let [42746,42749]"/>
  <match src="return_statement [38089,38103]" dest="return_statement [38089,38103]"/>
  <match src="identifier: toUint [50536,50542]" dest="identifier: toUint [51151,51157]"/>
  <match src="variable_declaration [41459,41472]" dest="variable_declaration [41459,41472]"/>
  <match src="call_argument [21463,21467]" dest="call_argument [21463,21467]"/>
  <match src="]: ] [35695,35696]" dest="]: ] [35695,35696]"/>
  <match src="member_expression [16091,16101]" dest="member_expression [16091,16101]"/>
  <match src="return_type_definition [29658,29675]" dest="return_type_definition [29658,29675]"/>
  <match src="solidity: solidity [26403,26411]" dest="solidity: solidity [26403,26411]"/>
  <match src="type_name [4224,4231]" dest="type_name [4224,4231]"/>
  <match src=",: , [12675,12676]" dest=",: , [12675,12676]"/>
  <match src="identifier: memPtr [36460,36466]" dest="identifier: memPtr [36460,36466]"/>
  <match src="call_argument [50971,50989]" dest="call_argument [51586,51604]"/>
  <match src="type_name [35714,35721]" dest="type_name [35714,35721]"/>
  <match src="number_literal: 1 [14464,14465]" dest="number_literal: 1 [14464,14465]"/>
  <match src=",: , [45952,45953]" dest=",: , [45950,45951]"/>
  <match src="identifier: LIST_LONG_START [41915,41930]" dest="identifier: LIST_LONG_START [41915,41930]"/>
  <match src="type_name [1635,1642]" dest="type_name [1635,1642]"/>
  <match src="identifier: byte0 [41678,41683]" dest="identifier: byte0 [41678,41683]"/>
  <match src="member_expression [14316,14327]" dest="member_expression [14316,14327]"/>
  <match src="+: + [39797,39798]" dest="+: + [39797,39798]"/>
  <match src=":=: := [35278,35280]" dest=":=: := [35278,35280]"/>
  <match src="address: address [16588,16595]" dest="address: address [16588,16595]"/>
  <match src="): ) [16860,16861]" dest="): ) [16860,16861]"/>
  <match src=".: . [10821,10822]" dest=".: . [10821,10822]"/>
  <match src="yul_path [42700,42703]" dest="yul_path [42700,42703]"/>
  <match src="yul_evm_builtin [41069,41072]" dest="yul_evm_builtin [41069,41072]"/>
  <match src="primitive_type [13892,13899]" dest="primitive_type [13892,13899]"/>
  <match src="(: ( [15600,15601]" dest="(: ( [15600,15601]"/>
  <match src="internal: internal [21427,21435]" dest="internal: internal [21427,21435]"/>
  <match src="identifier: account [28782,28789]" dest="identifier: account [28782,28789]"/>
  <match src="): ) [39762,39763]" dest="): ) [39762,39763]"/>
  <match src="(: ( [18058,18059]" dest="(: ( [18058,18059]"/>
  <match src="yul_evm_builtin [42391,42397]" dest="yul_evm_builtin [42391,42397]"/>
  <match src="): ) [41415,41416]" dest="): ) [41415,41416]"/>
  <match src="array_access [33756,33768]" dest="array_access [33756,33768]"/>
  <match src="function_body [18481,18526]" dest="function_body [18481,18526]"/>
  <match src=".: . [12963,12964]" dest=".: . [12963,12964]"/>
  <match src="visibility [35479,35487]" dest="visibility [35479,35487]"/>
  <match src="type_name [48386,48395]" dest="type_name [49001,49010]"/>
  <match src="identifier: _values [14578,14585]" dest="identifier: _values [14578,14585]"/>
  <match src="expression_statement [34116,34196]" dest="expression_statement [34116,34196]"/>
  <match src="identifier: endPtr [39697,39703]" dest="identifier: endPtr [39697,39703]"/>
  <match src="comment: /**      * @dev Emitted when `account` is revoked `role`.      *      * `sender` is the account that originated the contract call:      *   - if using `revokeRole`, it is the admin role bearer      *   - if using `renounceRole`, it is the role bearer (i.e. `account`)      */ [28823,29104]" dest="comment: /**      * @dev Emitted when `account` is revoked `role`.      *      * `sender` is the account that originated the contract call:      *   - if using `revokeRole`, it is the admin role bearer      *   - if using `renounceRole`, it is the role bearer (i.e. `account`)      */ [28823,29104]"/>
  <match src="comment: /**      * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all      * transfers.      */ [1462,1609]" dest="comment: /**      * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all      * transfers.      */ [1462,1609]"/>
  <match src="primitive_type [34726,34731]" dest="primitive_type [34726,34731]"/>
  <match src="parameter [4240,4259]" dest="parameter [4240,4259]"/>
  <match src=",: , [38434,38435]" dest=",: , [38434,38435]"/>
  <match src="call_expression [35152,35211]" dest="call_expression [35152,35211]"/>
  <match src="(: ( [44540,44541]" dest="(: ( [44540,44541]"/>
  <match src="identifier: value [12685,12690]" dest="identifier: value [12685,12690]"/>
  <match src="primitive_type [44892,44897]" dest="primitive_type [44890,44895]"/>
  <match src="mload: mload [42694,42699]" dest="mload: mload [42694,42699]"/>
  <match src="identifier: onERC1155Received [10804,10821]" dest="identifier: onERC1155Received [10804,10821]"/>
  <match src="type_name [46226,46233]" dest="type_name [46224,46231]"/>
  <match src="}: } [29730,29731]" dest="}: } [29730,29731]"/>
  <match src="identifier: account [2614,2621]" dest="identifier: account [2614,2621]"/>
  <match src="]: ] [45574,45575]" dest="]: ] [45572,45573]"/>
  <match src="pragma: pragma [4888,4894]" dest="pragma: pragma [4888,4894]"/>
  <match src="identifier: length [15176,15182]" dest="identifier: length [15176,15182]"/>
  <match src="pragma_directive [33932,33954]" dest="pragma_directive [33932,33954]"/>
  <match src="type_name [27983,28012]" dest="type_name [27983,28012]"/>
  <match src="): ) [39677,39678]" dest="): ) [39677,39678]"/>
  <match src="identifier: _inner [17750,17756]" dest="identifier: _inner [17750,17756]"/>
  <match src="call_argument [38436,38475]" dest="call_argument [38436,38475]"/>
  <match src="}: } [41321,41322]" dest="}: } [41321,41322]"/>
  <match src="primitive_type [16029,16036]" dest="primitive_type [16029,16036]"/>
  <match src="identifier: memPtr [36382,36388]" dest="identifier: memPtr [36382,36388]"/>
  <match src=",: , [4727,4728]" dest=",: , [4727,4728]"/>
  <match src="function_definition [37318,38110]" dest="function_definition [37318,38110]"/>
  <match src="function_definition [17251,17400]" dest="function_definition [17251,17400]"/>
  <match src="): ) [52514,52515]" dest="): ) [53246,53247]"/>
  <match src="[: [ [14681,14682]" dest="[: [ [14681,14682]"/>
  <match src="number_literal: 0 [49545,49546]" dest="number_literal: 0 [50160,50161]"/>
  <match src="primitive_type [49004,49011]" dest="primitive_type [49619,49626]"/>
  <match src="call_expression [50614,50641]" dest="call_expression [51229,51256]"/>
  <match src="return_type_definition [14930,14944]" dest="return_type_definition [14930,14944]"/>
  <match src="]: ] [2983,2984]" dest="]: ] [2983,2984]"/>
  <match src="uint256: uint256 [46273,46280]" dest="uint256: uint256 [46271,46278]"/>
  <match src="number_literal: 1 [13876,13877]" dest="number_literal: 1 [13876,13877]"/>
  <match src="-: - [41875,41876]" dest="-: - [41875,41876]"/>
  <match src="identifier: len [42312,42315]" dest="identifier: len [42312,42315]"/>
  <match src="comment: // for accounts without code, i.e. `keccak256('')` [20073,20123]" dest="comment: // for accounts without code, i.e. `keccak256('')` [20073,20123]"/>
  <match src="identifier: index [30375,30380]" dest="identifier: index [30375,30380]"/>
  <match src="parameter [44312,44329]" dest="parameter [44312,44329]"/>
  <match src="(: ( [9741,9742]" dest="(: ( [9741,9742]"/>
  <match src="call_expression [39020,39034]" dest="call_expression [39020,39034]"/>
  <match src="solidity_version: 0.6.0 [8810,8815]" dest="solidity_version: 0.6.0 [8810,8815]"/>
  <match src=",: , [44329,44330]" dest=",: , [44329,44330]"/>
  <match src="comment: /**      * @notice Deposit tokens into pos portal      * @dev When `depositor` deposits tokens into pos portal, tokens get locked into predicate contract.      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on side chain      * @param rootToken Token which gets deposited      * @param depositData Extra data for deposit (amount for ERC20, token id for ERC721 etc.) [ABI encoded]      */ [43149,43627]" dest="comment: /**      * @notice Deposit tokens into pos portal      * @dev When `depositor` deposits tokens into pos portal, tokens get locked into predicate contract.      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on side chain      * @param rootToken Token which gets deposited      * @param depositData Extra data for deposit (amount for ERC20, token id for ERC721 etc.) [ABI encoded]      */ [43149,43627]"/>
  <match src="bytes: bytes [50429,50434]" dest="bytes: bytes [51044,51049]"/>
  <match src="&quot;: &quot; [37421,37422]" dest="&quot;: &quot; [37421,37422]"/>
  <match src="(: ( [34224,34225]" dest="(: ( [34224,34225]"/>
  <match src="type_name [22964,22969]" dest="type_name [22964,22969]"/>
  <match src="yul_evm_builtin [37884,37889]" dest="yul_evm_builtin [37884,37889]"/>
  <match src="binary_expression [40367,40393]" dest="binary_expression [40367,40393]"/>
  <match src=",: , [29173,29174]" dest=",: , [29173,29174]"/>
  <match src="call_argument [34153,34163]" dest="call_argument [34153,34163]"/>
  <match src="identifier: set [12769,12772]" dest="identifier: set [12769,12772]"/>
  <match src="type_name [4200,4207]" dest="type_name [4200,4207]"/>
  <match src=",: , [7307,7308]" dest=",: , [7307,7308]"/>
  <match src="identifier: accounts [2918,2926]" dest="identifier: accounts [2918,2926]"/>
  <match src="return: return [36147,36153]" dest="return: return [36147,36153]"/>
  <match src="[: [ [48079,48080]" dest="[: [ [48694,48695]"/>
  <match src="member_expression [49262,49282]" dest="member_expression [49877,49897]"/>
  <match src="-: - [41912,41913]" dest="-: - [41912,41913]"/>
  <match src="assembly_statement [40458,40850]" dest="assembly_statement [40458,40850]"/>
  <match src="address: address [2899,2906]" dest="address: address [2899,2906]"/>
  <match src=",: , [47618,47619]" dest=",: , [47616,47617]"/>
  <match src="type_name [6163,6168]" dest="type_name [6163,6168]"/>
  <match src="yul_path [41073,41079]" dest="yul_path [41073,41079]"/>
  <match src="primitive_type [24592,24596]" dest="primitive_type [24592,24596]"/>
  <match src="): ) [4259,4260]" dest="): ) [4259,4260]"/>
  <match src="expression_statement [39855,39930]" dest="expression_statement [39855,39930]"/>
  <match src=",: , [42170,42171]" dest=",: , [42170,42171]"/>
  <match src="identifier: target [24477,24483]" dest="identifier: target [24477,24483]"/>
  <match src="identifier: returndata [24829,24839]" dest="identifier: returndata [24829,24839]"/>
  <match src="inheritance_specifier [10696,10712]" dest="inheritance_specifier [10696,10712]"/>
  <match src="block_statement [35988,36135]" dest="block_statement [35988,36135]"/>
  <match src="[: [ [47271,47272]" dest="[: [ [47269,47270]"/>
  <match src="identifier: getRoleMember [30339,30352]" dest="identifier: getRoleMember [30339,30352]"/>
  <match src="array_access [51842,51860]" dest="array_access [52574,52592]"/>
  <match src="{: { [40467,40468]" dest="{: { [40467,40468]"/>
  <match src="): ) [51797,51798]" dest="): ) [52529,52530]"/>
  <match src="call_argument [45167,45224]" dest="call_argument [45165,45222]"/>
  <match src="member_expression [12769,12785]" dest="member_expression [12769,12785]"/>
  <match src="]: ] [49677,49678]" dest="]: ] [50292,50293]"/>
  <match src="(: ( [10291,10292]" dest="(: ( [10291,10292]"/>
  <match src="binary_expression [10348,10373]" dest="binary_expression [10348,10373]"/>
  <match src="solidity: solidity [8800,8808]" dest="solidity: solidity [8800,8808]"/>
  <match src="call_argument [34272,34299]" dest="call_argument [34272,34299]"/>
  <match src="identifier: LIST_SHORT_START [34787,34803]" dest="identifier: LIST_SHORT_START [34787,34803]"/>
  <match src=".: . [38959,38960]" dest=".: . [38959,38960]"/>
  <match src="private: private [15115,15122]" dest="private: private [15115,15122]"/>
  <match src="}: } [39135,39136]" dest="}: } [39135,39136]"/>
  <match src="and: and [42762,42765]" dest="and: and [42762,42765]"/>
  <match src="identifier: item [37570,37574]" dest="identifier: item [37570,37574]"/>
  <match src="number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [20182,20248]" dest="number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [20182,20248]"/>
  <match src="public: public [45029,45035]" dest="public: public [45027,45033]"/>
  <match src="call_expression [17368,17390]" dest="call_expression [17368,17390]"/>
  <match src="address: address [29175,29182]" dest="address: address [29175,29182]"/>
  <match src="identifier: logRLPList [44355,44365]" dest="identifier: logRLPList [44355,44365]"/>
  <match src="): ) [40833,40834]" dest="): ) [40833,40834]"/>
  <match src="): ) [16042,16043]" dest="): ) [16042,16043]"/>
  <match src="assignment_expression [44611,44624]" dest="assignment_expression [44611,44624]"/>
  <match src="function_body [19877,20430]" dest="function_body [19877,20430]"/>
  <match src="variable_declaration [50341,50383]" dest="variable_declaration [50956,50998]"/>
  <match src="(: ( [26077,26078]" dest="(: ( [26077,26078]"/>
  <match src="-: - [13874,13875]" dest="-: - [13874,13875]"/>
  <match src="call_argument [47494,47503]" dest="call_argument [47492,47501]"/>
  <match src="binary_expression [40921,40949]" dest="binary_expression [40921,40949]"/>
  <match src="yul_path [42779,42783]" dest="yul_path [42779,42783]"/>
  <match src="[: [ [29390,29391]" dest="[: [ [29390,29391]"/>
  <match src="identifier: to [4737,4739]" dest="identifier: to [4737,4739]"/>
  <match src="identifier: _add [12655,12659]" dest="identifier: _add [12655,12659]"/>
  <match src="}: } [14779,14780]" dest="}: } [14779,14780]"/>
  <match src="visibility [4261,4269]" dest="visibility [4261,4269]"/>
  <match src="): ) [41162,41163]" dest="): ) [41162,41163]"/>
  <match src="): ) [44371,44372]" dest="): ) [44371,44372]"/>
  <match src="=: = [37817,37818]" dest="=: = [37817,37818]"/>
  <match src="&gt;: &gt; [48253,48254]" dest="&gt;: &gt; [48868,48869]"/>
  <match src=",: , [35345,35346]" dest=",: , [35345,35346]"/>
  <match src="}: } [41946,41947]" dest="}: } [41946,41947]"/>
  <match src="identifier: _payloadOffset [37697,37711]" dest="identifier: _payloadOffset [37697,37711]"/>
  <match src="yul_path [40200,40205]" dest="yul_path [40200,40205]"/>
  <match src="type_name [30679,30686]" dest="type_name [30679,30686]"/>
  <match src="identifier: target [24633,24639]" dest="identifier: target [24633,24639]"/>
  <match src="return_type_definition [48995,49021]" dest="return_type_definition [49610,49636]"/>
  <match src="variable_declaration [51926,51946]" dest="variable_declaration [52658,52678]"/>
  <match src="primitive_type [39619,39626]" dest="primitive_type [39619,39626]"/>
  <match src="string_literal [10375,10405]" dest="string_literal [10375,10405]"/>
  <match src="type_cast_expression [16672,16695]" dest="type_cast_expression [16672,16695]"/>
  <match src="identifier: role [33626,33630]" dest="identifier: role [33626,33630]"/>
  <match src="function_body [18033,18094]" dest="function_body [18033,18094]"/>
  <match src="yul_function_call [42690,42716]" dest="yul_function_call [42690,42716]"/>
  <match src="public: public [45103,45109]" dest="public: public [45101,45107]"/>
  <match src="primitive_type [47208,47213]" dest="primitive_type [47206,47211]"/>
  <match src="contract_body [19217,25285]" dest="contract_body [19217,25285]"/>
  <match src="variable_declaration_statement [37735,37767]" dest="variable_declaration_statement [37735,37767]"/>
  <match src="primitive_type [45999,46006]" dest="primitive_type [45997,46004]"/>
  <match src=",: , [51582,51583]" dest=",: , [52292,52293]"/>
  <match src="call_argument [45715,45741]" dest="call_argument [45713,45739]"/>
  <match src="return_statement [30423,30461]" dest="return_statement [30423,30461]"/>
  <match src="identifier: data [24039,24043]" dest="identifier: data [24039,24043]"/>
  <match src="expression_statement [52154,52531]" dest="expression_statement [52886,53263]"/>
  <match src="view: view [17311,17315]" dest="view: view [17311,17315]"/>
  <match src="memory: memory [48908,48914]" dest="memory: memory [49523,49529]"/>
  <match src="user_defined_type [44781,44796]" dest="user_defined_type [44779,44794]"/>
  <match src="{: { [24693,24694]" dest="{: { [24693,24694]"/>
  <match src="): ) [41082,41083]" dest="): ) [41082,41083]"/>
  <match src="call_argument [52564,52573]" dest="call_argument [53296,53305]"/>
  <match src="identifier: role [30687,30691]" dest="identifier: role [30687,30691]"/>
  <match src="identifier: _inner [18063,18069]" dest="identifier: _inner [18063,18069]"/>
  <match src="{: { [12715,12716]" dest="{: { [12715,12716]"/>
  <match src="call_expression [35770,35844]" dest="call_expression [35770,35844]"/>
  <match src=",: , [48146,48147]" dest=",: , [48761,48762]"/>
  <match src="contract_body [11756,19010]" dest="contract_body [11756,19010]"/>
  <match src="primitive_type [42181,42188]" dest="primitive_type [42181,42188]"/>
  <match src="type_name [6111,6118]" dest="type_name [6111,6118]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [15197,15528]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [15197,15528]"/>
  <match src="identifier: require [15621,15628]" dest="identifier: require [15621,15628]"/>
  <match src="&quot;: &quot; [49172,49173]" dest="&quot;: &quot; [49787,49788]"/>
  <match src="parameter [45999,46006]" dest="parameter [45997,46004]"/>
  <match src="parameter [48939,48973]" dest="parameter [49554,49588]"/>
  <match src="): ) [41161,41162]" dest="): ) [41161,41162]"/>
  <match src="(: ( [16383,16384]" dest="(: ( [16383,16384]"/>
  <match src="(: ( [9528,9529]" dest="(: ( [9528,9529]"/>
  <match src="primitive_type [45945,45952]" dest="primitive_type [45943,45950]"/>
  <match src="type_name [34947,34954]" dest="type_name [34947,34954]"/>
  <match src="}: } [10914,10915]" dest="}: } [10914,10915]"/>
  <match src="call_argument [38775,38786]" dest="call_argument [38775,38786]"/>
  <match src="string_literal [21693,21753]" dest="string_literal [21693,21753]"/>
  <match src="(: ( [37023,37024]" dest="(: ( [37023,37024]"/>
  <match src="type_name [23596,23601]" dest="type_name [23596,23601]"/>
  <match src="solidity: solidity [44718,44726]" dest="solidity: solidity [44718,44726]"/>
  <match src="}: } [25187,25188]" dest="}: } [25187,25188]"/>
  <match src="yul_evm_builtin [25086,25091]" dest="yul_evm_builtin [25086,25091]"/>
  <match src="yul_variable_declaration [42746,42784]" dest="yul_variable_declaration [42746,42784]"/>
  <match src="call_argument [34314,34324]" dest="call_argument [34314,34324]"/>
  <match src="address: address [31066,31073]" dest="address: address [31066,31073]"/>
  <match src="call_expression [31590,31635]" dest="call_expression [31590,31635]"/>
  <match src="(: ( [2605,2606]" dest="(: ( [2605,2606]"/>
  <match src="identifier: RoleGranted [28732,28743]" dest="identifier: RoleGranted [28732,28743]"/>
  <match src="primitive_type [51926,51933]" dest="primitive_type [52658,52665]"/>
  <match src="identifier: keccak256 [45147,45156]" dest="identifier: keccak256 [45145,45154]"/>
  <match src="=: = [48477,48478]" dest="=: = [49092,49093]"/>
  <match src="yul_identifier [25153,25168]" dest="yul_identifier [25153,25168]"/>
  <match src="library: library [19201,19208]" dest="library: library [19201,19208]"/>
  <match src="internal: internal [19848,19856]" dest="internal: internal [19848,19856]"/>
  <match src="&quot;: &quot; [10375,10376]" dest="&quot;: &quot; [10375,10376]"/>
  <match src="user_defined_type [18428,18435]" dest="user_defined_type [18428,18435]"/>
  <match src=".: . [49096,49097]" dest=".: . [49711,49712]"/>
  <match src=",: , [36074,36075]" dest=",: , [36074,36075]"/>
  <match src="&lt;: &lt; [51502,51503]" dest="&lt;: &lt; [52117,52118]"/>
  <match src="state_mutability [37054,37058]" dest="state_mutability [37054,37058]"/>
  <match src="call_expression [50517,50544]" dest="call_expression [51132,51159]"/>
  <match src="identifier: call [21640,21644]" dest="identifier: call [21640,21644]"/>
  <match src="{: { [17334,17335]" dest="{: { [17334,17335]"/>
  <match src=",: , [22962,22963]" dest=",: , [22962,22963]"/>
  <match src="variable_declaration_statement [51021,51074]" dest="variable_declaration_statement [51636,51689]"/>
  <match src="[: [ [49245,49246]" dest="[: [ [49860,49861]"/>
  <match src="type_name [49004,49013]" dest="type_name [49619,49628]"/>
  <match src="]: ] [45550,45551]" dest="]: ] [45548,45549]"/>
  <match src="&quot;: &quot; [37147,37148]" dest="&quot;: &quot; [37147,37148]"/>
  <match src="calldata: calldata [8561,8569]" dest="calldata: calldata [8561,8569]"/>
  <match src="{: { [35256,35257]" dest="{: { [35256,35257]"/>
  <match src="identifier: len [37743,37746]" dest="identifier: len [37743,37746]"/>
  <match src="state_mutability [2644,2648]" dest="state_mutability [2644,2648]"/>
  <match src="(: ( [26110,26111]" dest="(: ( [26110,26111]"/>
  <match src="identifier: id [50894,50896]" dest="identifier: id [51509,51511]"/>
  <match src="}: } [38647,38648]" dest="}: } [38647,38648]"/>
  <match src="contract: contract [25922,25930]" dest="contract: contract [25922,25930]"/>
  <match src="): ) [51782,51783]" dest="): ) [52514,52515]"/>
  <match src="using_directive [44872,44898]" dest="using_directive [44870,44896]"/>
  <match src="binary_expression [41707,41730]" dest="binary_expression [41707,41730]"/>
  <match src="}: } [24736,24737]" dest="}: } [24736,24737]"/>
  <match src="primitive_type [8682,8688]" dest="primitive_type [8682,8688]"/>
  <match src="identifier: item [38916,38920]" dest="identifier: item [38916,38920]"/>
  <match src="member_expression [38420,38428]" dest="member_expression [38420,38428]"/>
  <match src="visibility [17302,17310]" dest="visibility [17302,17310]"/>
  <match src="number_literal: 0xf8 [34850,34854]" dest="number_literal: 0xf8 [34850,34854]"/>
  <match src="memory: memory [24032,24038]" dest="memory: memory [24032,24038]"/>
  <match src="&quot;: &quot; [48271,48272]" dest="&quot;: &quot; [48886,48887]"/>
  <match src="expression_statement [42446,42463]" dest="expression_statement [42446,42463]"/>
  <match src="assembly_statement [38557,38615]" dest="assembly_statement [38557,38615]"/>
  <match src="}: } [48494,48495]" dest="}: } [49109,49110]"/>
  <match src="(: ( [35902,35903]" dest="(: ( [35902,35903]"/>
  <match src="]: ] [51859,51860]" dest="]: ] [52591,52592]"/>
  <match src="parameter [34070,34094]" dest="parameter [34070,34094]"/>
  <match src="]: ] [47272,47273]" dest="]: ] [47270,47271]"/>
  <match src="type_name [49238,49245]" dest="type_name [49853,49860]"/>
  <match src="}: } [34357,34358]" dest="}: } [34357,34358]"/>
  <match src="event_paramater [28744,28764]" dest="event_paramater [28744,28764]"/>
  <match src="call_expression [24633,24669]" dest="call_expression [24633,24669]"/>
  <match src="identifier: i [48474,48475]" dest="identifier: i [49089,49090]"/>
  <match src="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [30779,31027]" dest="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [30779,31027]"/>
  <match src="external: external [43787,43795]" dest="external: external [43787,43795]"/>
  <match src="(: ( [24432,24433]" dest="(: ( [24432,24433]"/>
  <match src="struct_field_assignment [21646,21659]" dest="struct_field_assignment [21646,21659]"/>
  <match src="identifier: id [51557,51559]" dest="identifier: id [52218,52220]"/>
  <match src=".: . [17749,17750]" dest=".: . [17749,17750]"/>
  <match src="identifier: withdrawer [51699,51709]" dest="identifier: withdrawer [52431,52441]"/>
  <match src="): ) [34194,34195]" dest="): ) [34194,34195]"/>
  <match src="call_argument [37104,37108]" dest="call_argument [37104,37108]"/>
  <match src=",: , [17992,17993]" dest=",: , [17992,17993]"/>
  <match src="visibility [13285,13292]" dest="visibility [13285,13292]"/>
  <match src="identifier: add [16001,16004]" dest="identifier: add [16001,16004]"/>
  <match src="primitive_type [34070,34076]" dest="primitive_type [34070,34076]"/>
  <match src="identifier: operator [8509,8517]" dest="identifier: operator [8509,8517]"/>
  <match src="): ) [33332,33333]" dest="): ) [33332,33333]"/>
  <match src="type_name [38172,38179]" dest="type_name [38172,38179]"/>
  <match src="visibility [3546,3554]" dest="visibility [3546,3554]"/>
  <match src="identifier: item [39666,39670]" dest="identifier: item [39666,39670]"/>
  <match src="call_expression [23061,23114]" dest="call_expression [23061,23114]"/>
  <match src="parameter [37024,37043]" dest="parameter [37024,37043]"/>
  <match src="function_body [45687,45842]" dest="function_body [45685,45840]"/>
  <match src="): ) [38191,38192]" dest="): ) [38191,38192]"/>
  <match src="byte: byte [40209,40213]" dest="byte: byte [40209,40213]"/>
  <match src="new_expression [39020,39029]" dest="new_expression [39020,39029]"/>
  <match src="}: } [24662,24663]" dest="}: } [24662,24663]"/>
  <match src=".: . [26280,26281]" dest=".: . [26280,26281]"/>
  <match src=".: . [29714,29715]" dest=".: . [29714,29715]"/>
  <match src="primitive_type [8620,8625]" dest="primitive_type [8620,8625]"/>
  <match src="user_defined_type [15796,15799]" dest="user_defined_type [15796,15799]"/>
  <match src="comment: // @return number of bytes until the data [41330,41371]" dest="comment: // @return number of bytes until the data [41330,41371]"/>
  <match src="(: ( [28743,28744]" dest="(: ( [28743,28744]"/>
  <match src="identifier: TRANSFER_SINGLE_EVENT_SIG [45119,45144]" dest="identifier: TRANSFER_SINGLE_EVENT_SIG [45117,45142]"/>
  <match src="call_expression [24230,24287]" dest="call_expression [24230,24287]"/>
  <match src="uint256: uint256 [38514,38521]" dest="uint256: uint256 [38514,38521]"/>
  <match src="primitive_type [12432,12439]" dest="primitive_type [12432,12439]"/>
  <match src="(: ( [39745,39746]" dest="(: ( [39745,39746]"/>
  <match src="primitive_type [8528,8535]" dest="primitive_type [8528,8535]"/>
  <match src="function_body [36775,36997]" dest="function_body [36775,36997]"/>
  <match src="comment: /**      * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.      *      * See {setApprovalForAll}.      */ [3340,3479]" dest="comment: /**      * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.      *      * See {setApprovalForAll}.      */ [3340,3479]"/>
  <match src="(: ( [40257,40258]" dest="(: ( [40257,40258]"/>
  <match src="(: ( [52511,52512]" dest="(: ( [53243,53244]"/>
  <match src="string [22655,22687]" dest="string [22655,22687]"/>
  <match src="&quot;: &quot; [24210,24211]" dest="&quot;: &quot; [24210,24211]"/>
  <match src="call_argument [29414,29421]" dest="call_argument [29414,29421]"/>
  <match src="member_expression [49552,49572]" dest="member_expression [50167,50187]"/>
  <match src="identifier: value [16037,16042]" dest="identifier: value [16037,16042]"/>
  <match src="address: address [8501,8508]" dest="address: address [8501,8508]"/>
  <match src="pragma_directive [11017,11040]" dest="pragma_directive [11017,11040]"/>
  <match src="expression_statement [9510,9551]" dest="expression_statement [9510,9551]"/>
  <match src="&quot;: &quot; [35209,35210]" dest="&quot;: &quot; [35209,35210]"/>
  <match src="primitive_type [32278,32285]" dest="primitive_type [32278,32285]"/>
  <match src="identifier: from [7326,7330]" dest="identifier: from [7326,7330]"/>
  <match src=".: . [38535,38536]" dest=".: . [38535,38536]"/>
  <match src="string_literal [45715,45741]" dest="string_literal [45713,45739]"/>
  <match src="primitive_type [46925,46930]" dest="primitive_type [46923,46928]"/>
  <match src="primitive_type [51542,51549]" dest="primitive_type [52162,52169]"/>
  <match src=",: , [40724,40725]" dest=",: , [40724,40725]"/>
  <match src="yul_evm_builtin [41246,41249]" dest="yul_evm_builtin [41246,41249]"/>
  <match src="}: } [16459,16460]" dest="}: } [16459,16460]"/>
  <match src="member_expression [31125,31147]" dest="member_expression [31125,31147]"/>
  <match src="pragma: pragma [97,103]" dest="pragma: pragma [97,103]"/>
  <match src="function_body [31571,31735]" dest="function_body [31571,31735]"/>
  <match src="identifier: _inner [17458,17464]" dest="identifier: _inner [17458,17464]"/>
  <match src="let: let [40683,40686]" dest="let: let [40683,40686]"/>
  <match src="parameter [5470,5484]" dest="parameter [5470,5484]"/>
  <match src="(: ( [44998,44999]" dest="(: ( [44996,44997]"/>
  <match src="variable_declaration [48353,48379]" dest="variable_declaration [48968,48994]"/>
  <match src="member_expression [36391,36402]" dest="member_expression [36391,36402]"/>
  <match src="identifier: WORD_SIZE [34876,34885]" dest="identifier: WORD_SIZE [34876,34885]"/>
  <match src="returns: returns [22589,22596]" dest="returns: returns [22589,22596]"/>
  <match src="): ) [30380,30381]" dest="): ) [30380,30381]"/>
  <match src="private: private [42200,42207]" dest="private: private [42200,42207]"/>
  <match src="string [24486,24517]" dest="string [24486,24517]"/>
  <match src="identifier: logRLPList [50452,50462]" dest="identifier: logRLPList [51067,51077]"/>
  <match src=",: , [41244,41245]" dest=",: , [41244,41245]"/>
  <match src="(: ( [29666,29667]" dest="(: ( [29666,29667]"/>
  <match src="): ) [2392,2393]" dest="): ) [2392,2393]"/>
  <match src="expression_statement [10340,10407]" dest="expression_statement [10340,10407]"/>
  <match src="(: ( [14884,14885]" dest="(: ( [14884,14885]"/>
  <match src="identifier: selector [10888,10896]" dest="identifier: selector [10888,10896]"/>
  <match src="identifier: role [30437,30441]" dest="identifier: role [30437,30441]"/>
  <match src="]: ] [14687,14688]" dest="]: ] [14687,14688]"/>
  <match src=",: , [36452,36453]" dest=",: , [36452,36453]"/>
  <match src="state_mutability [3555,3559]" dest="state_mutability [3555,3559]"/>
  <match src=",: , [47578,47579]" dest=",: , [47576,47577]"/>
  <match src="comment: // File: contracts/common/AccessControlMixin.sol [33880,33928]" dest="comment: // File: contracts/common/AccessControlMixin.sol [33880,33928]"/>
  <match src="update_expression [35983,35986]" dest="update_expression [35983,35986]"/>
  <match src="identifier: offset [38892,38898]" dest="identifier: offset [38892,38898]"/>
  <match src="(: ( [34296,34297]" dest="(: ( [34296,34297]"/>
  <match src="user_defined_type [15098,15101]" dest="user_defined_type [15098,15101]"/>
  <match src="call_argument [45813,45825]" dest="call_argument [45811,45823]"/>
  <match src="return_type_definition [13293,13307]" dest="return_type_definition [13293,13307]"/>
  <match src="block_statement [14734,14773]" dest="block_statement [14734,14773]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [62,93]" dest="comment: // SPDX-License-Identifier: MIT [62,93]"/>
  <match src="calldata: calldata [6169,6177]" dest="calldata: calldata [6169,6177]"/>
  <match src="virtual: virtual [32302,32309]" dest="virtual: virtual [32302,32309]"/>
  <match src="private: private [39374,39381]" dest="private: private [39374,39381]"/>
  <match src="): ) [36310,36311]" dest="): ) [36310,36311]"/>
  <match src="identifier: depositData [46940,46951]" dest="identifier: depositData [46938,46949]"/>
  <match src="primitive_type [45464,45471]" dest="primitive_type [45462,45469]"/>
  <match src="identifier: only [34220,34224]" dest="identifier: only [34220,34224]"/>
  <match src="delete: delete [14662,14668]" dest="delete: delete [14662,14668]"/>
  <match src="member_expression [33756,33776]" dest="member_expression [33756,33776]"/>
  <match src="): ) [37260,37261]" dest="): ) [37260,37261]"/>
  <match src="primitive_type [28036,28043]" dest="primitive_type [28036,28043]"/>
  <match src="call_expression [10752,10907]" dest="call_expression [10752,10907]"/>
  <match src="primitive_type [50972,50979]" dest="primitive_type [51587,51594]"/>
  <match src=":=: := [40498,40500]" dest=":=: := [40498,40500]"/>
  <match src="{: { [46074,46075]" dest="{: { [46072,46073]"/>
  <match src="type_name [24106,24111]" dest="type_name [24106,24111]"/>
  <match src="type_name [18903,18910]" dest="type_name [18903,18910]"/>
  <match src="function_definition [33278,33477]" dest="function_definition [33278,33477]"/>
  <match src="identifier: interfaceId [10348,10359]" dest="identifier: interfaceId [10348,10359]"/>
  <match src="return_type_definition [35511,35537]" dest="return_type_definition [35511,35537]"/>
  <match src="user_defined_type [13253,13256]" dest="user_defined_type [13253,13256]"/>
  <match src="return_statement [15157,15183]" dest="return_statement [15157,15183]"/>
  <match src="identifier: role [33124,33128]" dest="identifier: role [33124,33128]"/>
  <match src="yul_evm_builtin [42762,42765]" dest="yul_evm_builtin [42762,42765]"/>
  <match src="returns: returns [40097,40104]" dest="returns: returns [40097,40104]"/>
  <match src="yul_path [41530,41536]" dest="yul_path [41530,41536]"/>
  <match src="+: + [14462,14463]" dest="+: + [14462,14463]"/>
  <match src="override_specifier [50227,50235]" dest="override_specifier [50842,50850]"/>
  <match src="call_argument [47448,47455]" dest="call_argument [47446,47453]"/>
  <match src="member_expression [18980,18990]" dest="member_expression [18980,18990]"/>
  <match src="]: ] [33570,33571]" dest="]: ] [33570,33571]"/>
  <match src="bytes32: bytes32 [30714,30721]" dest="bytes32: bytes32 [30714,30721]"/>
  <match src="identifier: valueIndex [13863,13873]" dest="identifier: valueIndex [13863,13873]"/>
  <match src="): ) [41591,41592]" dest="): ) [41591,41592]"/>
  <match src="identifier: require [48106,48113]" dest="identifier: require [48721,48728]"/>
  <match src="uint256: uint256 [36840,36847]" dest="uint256: uint256 [36840,36847]"/>
  <match src="call_argument [52291,52438]" dest="call_argument [53023,53170]"/>
  <match src="identifier: destpart [42836,42844]" dest="identifier: destpart [42836,42844]"/>
  <match src="number_literal: 0x0 [20418,20421]" dest="number_literal: 0x0 [20418,20421]"/>
  <match src="identifier: memPtr [35230,35236]" dest="identifier: memPtr [35230,35236]"/>
  <match src="}: } [26295,26296]" dest="}: } [26295,26296]"/>
  <match src="parameter [42136,42147]" dest="parameter [42136,42147]"/>
  <match src="parameter [24388,24414]" dest="parameter [24388,24414]"/>
  <match src="return: return [20371,20377]" dest="return: return [20371,20377]"/>
  <match src="call_expression [31622,31634]" dest="call_expression [31622,31634]"/>
  <match src="[: [ [14975,14976]" dest="[: [ [14975,14976]"/>
  <match src="): ) [21626,21627]" dest="): ) [21626,21627]"/>
  <match src="identifier: decode [51980,51986]" dest="identifier: decode [52712,52718]"/>
  <match src="identifier: calculateAmountsToBeMinted [52242,52268]" dest="identifier: calculateAmountsToBeMinted [52974,53000]"/>
  <match src="address: address [17352,17359]" dest="address: address [17352,17359]"/>
  <match src="): ) [45833,45834]" dest="): ) [45831,45832]"/>
  <match src="identifier: result [36983,36989]" dest="identifier: result [36983,36989]"/>
  <match src="call_expression [18976,18998]" dest="call_expression [18976,18998]"/>
  <match src="yul_decimal_number: 0 [36451,36452]" dest="yul_decimal_number: 0 [36451,36452]"/>
  <match src="(: ( [42227,42228]" dest="(: ( [42227,42228]"/>
  <match src="identifier: index [15572,15577]" dest="identifier: index [15572,15577]"/>
  <match src="identifier: onERC1155BatchReceived [46396,46418]" dest="identifier: onERC1155BatchReceived [46394,46416]"/>
  <match src="parameter [41439,41446]" dest="parameter [41439,41446]"/>
  <match src="string: string [24388,24394]" dest="string: string [24388,24394]"/>
  <match src=".: . [30442,30443]" dest=".: . [30442,30443]"/>
  <match src="comment: // data length [38974,38988]" dest="comment: // data length [38974,38988]"/>
  <match src="address: address [25999,26006]" dest="address: address [25999,26006]"/>
  <match src="return_type_definition [12700,12714]" dest="return_type_definition [12700,12714]"/>
  <match src="primitive_type [20133,20140]" dest="primitive_type [20133,20140]"/>
  <match src="identifier: toList [50400,50406]" dest="identifier: toList [51015,51021]"/>
  <match src="type_name [1972,1976]" dest="type_name [1972,1976]"/>
  <match src="return: return [26270,26276]" dest="return: return [26270,26276]"/>
  <match src="calldata: calldata [4246,4254]" dest="calldata: calldata [4246,4254]"/>
  <match src="identifier: role [30361,30365]" dest="identifier: role [30361,30365]"/>
  <match src="}: } [33672,33673]" dest="}: } [33672,33673]"/>
  <match src="member_expression [46377,46418]" dest="member_expression [46375,46416]"/>
  <match src="return_type_definition [23587,23609]" dest="return_type_definition [23587,23609]"/>
  <match src="uint256: uint256 [40068,40075]" dest="uint256: uint256 [40068,40075]"/>
  <match src="identifier: safeBatchTransferFrom [52575,52596]" dest="identifier: safeBatchTransferFrom [53307,53328]"/>
  <match src="primitive_type [14902,14909]" dest="primitive_type [14902,14909]"/>
  <match src="call_argument [31244,31251]" dest="call_argument [31244,31251]"/>
  <match src="identifier: dataLen [36067,36074]" dest="identifier: dataLen [36067,36074]"/>
  <match src="]: ] [31609,31610]" dest="]: ] [31609,31610]"/>
  <match src="private: private [9127,9134]" dest="private: private [9127,9134]"/>
  <match src="call_argument [21455,21486]" dest="call_argument [21455,21486]"/>
  <match src="comment: /**      * @dev Registers the contract as an implementer of the interface defined by      * `interfaceId`. Support of the actual ERC165 interface is automatic and      * registering its interface id is not required.      *      * See {IERC165-supportsInterface}.      *      * Requirements:      *      * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).      */ [9865,10258]" dest="comment: /**      * @dev Registers the contract as an implementer of the interface defined by      * `interfaceId`. Support of the actual ERC165 interface is automatic and      * registering its interface id is not required.      *      * See {IERC165-supportsInterface}.      *      * Requirements:      *      * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).      */ [9865,10258]"/>
  <match src="bytes32: bytes32 [16428,16435]" dest="bytes32: bytes32 [16428,16435]"/>
  <match src="): ) [9549,9550]" dest="): ) [9549,9550]"/>
  <match src="&quot;: &quot; [44586,44587]" dest="&quot;: &quot; [44586,44587]"/>
  <match src="}: } [47655,47656]" dest="}: } [47653,47654]"/>
  <match src="primitive_type [39591,39598]" dest="primitive_type [39591,39598]"/>
  <match src="type_name [41401,41408]" dest="type_name [41401,41408]"/>
  <match src="expression_statement [37593,37668]" dest="expression_statement [37593,37668]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [13068,13230]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [13068,13230]"/>
  <match src="type_name [45566,45573]" dest="type_name [45564,45571]"/>
  <match src=",: , [40830,40831]" dest=",: , [40830,40831]"/>
  <match src="variable_declaration [35222,35236]" dest="variable_declaration [35222,35236]"/>
  <match src="identifier: dataLen [41237,41244]" dest="identifier: dataLen [41237,41244]"/>
  <match src="): ) [42198,42199]" dest="): ) [42198,42199]"/>
  <match src="yul_evm_builtin [25125,25131]" dest="yul_evm_builtin [25125,25131]"/>
  <match src="primitive_type [16384,16388]" dest="primitive_type [16384,16388]"/>
  <match src="identifier: memPtr [38536,38542]" dest="identifier: memPtr [38536,38542]"/>
  <match src="identifier: ids [6130,6133]" dest="identifier: ids [6130,6133]"/>
  <match src=",: , [17285,17286]" dest=",: , [17285,17286]"/>
  <match src="event_definition [28399,28509]" dest="event_definition [28399,28509]"/>
  <match src=",: , [23656,23657]" dest=",: , [23656,23657]"/>
  <match src="solidity_pragma_token [44718,44732]" dest="solidity_pragma_token [44718,44732]"/>
  <match src="call_expression [34272,34299]" dest="call_expression [34272,34299]"/>
  <match src="primitive_type [30403,30410]" dest="primitive_type [30403,30410]"/>
  <match src="): ) [3544,3545]" dest="): ) [3544,3545]"/>
  <match src="call_argument [36025,36031]" dest="call_argument [36025,36031]"/>
  <match src="]: ] [49636,49637]" dest="]: ] [50251,50252]"/>
  <match src="memory: memory [36762,36768]" dest="memory: memory [36762,36768]"/>
  <match src="identifier: item [36818,36822]" dest="identifier: item [36818,36822]"/>
  <match src="{: { [35543,35544]" dest="{: { [35543,35544]"/>
  <match src="identifier: RLPItem [38673,38680]" dest="identifier: RLPItem [38673,38680]"/>
  <match src="): ) [45589,45590]" dest="): ) [45587,45588]"/>
  <match src="(: ( [17662,17663]" dest="(: ( [17662,17663]"/>
  <match src="identifier: _indexes [14426,14434]" dest="identifier: _indexes [14426,14434]"/>
  <match src="type_cast_expression [50767,50803]" dest="type_cast_expression [51382,51418]"/>
  <match src="+=: += [42482,42484]" dest="+=: += [42482,42484]"/>
  <match src="comment: // This means that we can only create new EnumerableSets for types that fit [12109,12184]" dest="comment: // This means that we can only create new EnumerableSets for types that fit [12109,12184]"/>
  <match src=".: . [24639,24640]" dest=".: . [24639,24640]"/>
  <match src="state_variable_declaration [34861,34891]" dest="state_variable_declaration [34861,34891]"/>
  <match src="primitive_type [33702,33709]" dest="primitive_type [33702,33709]"/>
  <match src="): ) [22687,22688]" dest="): ) [22687,22688]"/>
  <match src="visibility [33085,33093]" dest="visibility [33085,33093]"/>
  <match src=",: , [45531,45532]" dest=",: , [45529,45530]"/>
  <match src="^:  ^ [6321,6323]" dest="^:  ^ [6321,6323]"/>
  <match src="string_literal [32354,32403]" dest="string_literal [32354,32403]"/>
  <match src="): ) [41260,41261]" dest="): ) [41260,41261]"/>
  <match src="block_statement [48449,48495]" dest="block_statement [49064,49110]"/>
  <match src="external: external [46959,46967]" dest="external: external [46957,46965]"/>
  <match src="expression_statement [48106,48216]" dest="expression_statement [48721,48831]"/>
  <match src="call_argument [39175,39182]" dest="call_argument [39175,39182]"/>
  <match src="primitive_type [47264,47271]" dest="primitive_type [47262,47269]"/>
  <match src="]: ] [29705,29706]" dest="]: ] [29705,29706]"/>
  <match src="): ) [37108,37109]" dest="): ) [37108,37109]"/>
  <match src="primitive_type [3511,3518]" dest="primitive_type [3511,3518]"/>
  <match src="expression_statement [45802,45835]" dest="expression_statement [45800,45833]"/>
  <match src="variable_declaration_statement [35714,35760]" dest="variable_declaration_statement [35714,35760]"/>
  <match src="number_literal: 33 [38432,38434]" dest="number_literal: 33 [38432,38434]"/>
  <match src="identifier: logTopicRLPList [51842,51857]" dest="identifier: logTopicRLPList [52574,52589]"/>
  <match src="(: ( [41028,41029]" dest="(: ( [41028,41029]"/>
  <match src="call_expression [45698,45742]" dest="call_expression [45696,45740]"/>
  <match src="}: } [51609,51610]" dest="}: } [52341,52342]"/>
  <match src="type_name [8682,8688]" dest="type_name [8682,8688]"/>
  <match src="(: ( [23028,23029]" dest="(: ( [23028,23029]"/>
  <match src="identifier: Set [15098,15101]" dest="identifier: Set [15098,15101]"/>
  <match src="type_name [24026,24031]" dest="type_name [24026,24031]"/>
  <match src="function: function [45630,45638]" dest="function: function [45628,45636]"/>
  <match src="): ) [36704,36705]" dest="): ) [36704,36705]"/>
  <match src=",: , [35574,35575]" dest=",: , [35574,35575]"/>
  <match src="identifier: memPtr [36107,36113]" dest="identifier: memPtr [36107,36113]"/>
  <match src="expression_statement [40911,40950]" dest="expression_statement [40911,40950]"/>
  <match src="parameter [24045,24058]" dest="parameter [24045,24058]"/>
  <match src="internal: internal [18009,18017]" dest="internal: internal [18009,18017]"/>
  <match src="type_name [32264,32271]" dest="type_name [32264,32271]"/>
  <match src="{: { [39082,39083]" dest="{: { [39082,39083]"/>
  <match src="(: ( [8490,8491]" dest="(: ( [8490,8491]"/>
  <match src="yul_path [38020,38026]" dest="yul_path [38020,38026]"/>
  <match src="): ) [14590,14591]" dest="): ) [14590,14591]"/>
  <match src="&quot;: &quot; [37491,37492]" dest="&quot;: &quot; [37491,37492]"/>
  <match src="public: public [45246,45252]" dest="public: public [45244,45250]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [15822,15986]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [15822,15986]"/>
  <match src="call_argument [35747,35758]" dest="call_argument [35747,35758]"/>
  <match src="variable_declaration_statement [50885,51005]" dest="variable_declaration_statement [51500,51620]"/>
  <match src="if: if [37972,37974]" dest="if: if [37972,37974]"/>
  <match src="library: library [11734,11741]" dest="library: library [11734,11741]"/>
  <match src="function_definition [791,867]" dest="function_definition [791,867]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [16143,16305]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [16143,16305]"/>
  <match src="primitive_type [35957,35964]" dest="primitive_type [35957,35964]"/>
  <match src="identifier: memPtr [37575,37581]" dest="identifier: memPtr [37575,37581]"/>
  <match src="{: { [13014,13015]" dest="{: { [13014,13015]"/>
  <match src="): ) [23714,23715]" dest="): ) [23714,23715]"/>
  <match src="uint256: uint256 [46244,46251]" dest="uint256: uint256 [46242,46249]"/>
  <match src="}: } [14994,14995]" dest="}: } [14994,14995]"/>
  <match src="function_definition [17957,18094]" dest="function_definition [17957,18094]"/>
  <match src="(: ( [2974,2975]" dest="(: ( [2974,2975]"/>
  <match src="call_argument [48396,48400]" dest="call_argument [49011,49015]"/>
  <match src="primitive_type [35857,35864]" dest="primitive_type [35857,35864]"/>
  <match src="event_paramater [45464,45495]" dest="event_paramater [45462,45493]"/>
  <match src="type_name [1718,1725]" dest="type_name [1718,1725]"/>
  <match src="return: return [36976,36982]" dest="return: return [36976,36982]"/>
  <match src="call_argument [16428,16451]" dest="call_argument [16428,16451]"/>
  <match src="view: view [29653,29657]" dest="view: view [29653,29657]"/>
  <match src="uint256: uint256 [51926,51933]" dest="uint256: uint256 [52658,52665]"/>
  <match src="yul_decimal_number: 32 [38041,38043]" dest="yul_decimal_number: 32 [38041,38043]"/>
  <match src="identifier: set [17282,17285]" dest="identifier: set [17282,17285]"/>
  <match src="user_defined_type [17973,17980]" dest="user_defined_type [17973,17980]"/>
  <match src="identifier: byteLen [40734,40741]" dest="identifier: byteLen [40734,40741]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [6271,6302]" dest="comment: // SPDX-License-Identifier: MIT [6271,6302]"/>
  <match src="binary_expression [50767,50832]" dest="binary_expression [51382,51447]"/>
  <match src="for: for [44920,44923]" dest="for: for [44918,44921]"/>
  <match src="identifier: decode [47243,47249]" dest="identifier: decode [47241,47247]"/>
  <match src="assembly: assembly [25031,25039]" dest="assembly: assembly [25031,25039]"/>
  <match src=".: . [14425,14426]" dest=".: . [14425,14426]"/>
  <match src="returns: returns [8674,8681]" dest="returns: returns [8674,8681]"/>
  <match src="): ) [18031,18032]" dest="): ) [18031,18032]"/>
  <match src="type_name [861,865]" dest="type_name [861,865]"/>
  <match src="parameter [4765,4791]" dest="parameter [4765,4791]"/>
  <match src=",: , [41079,41080]" dest=",: , [41079,41080]"/>
  <match src="type_name [33519,33526]" dest="type_name [33519,33526]"/>
  <match src="identifier: Set [14885,14888]" dest="identifier: Set [14885,14888]"/>
  <match src="parameter [44287,44301]" dest="parameter [44287,44301]"/>
  <match src="primitive_type [35616,35623]" dest="primitive_type [35616,35623]"/>
  <match src="view: view [25977,25981]" dest="view: view [25977,25981]"/>
  <match src=",: , [45988,45989]" dest=",: , [45986,45987]"/>
  <match src=",: , [24604,24605]" dest=",: , [24604,24605]"/>
  <match src="primitive_type [47169,47176]" dest="primitive_type [47167,47174]"/>
  <match src=",: , [46233,46234]" dest=",: , [46231,46232]"/>
  <match src="function: function [35032,35040]" dest="function: function [35032,35040]"/>
  <match src="memory: memory [24112,24118]" dest="memory: memory [24112,24118]"/>
  <match src="array_access [36047,36056]" dest="array_access [36047,36056]"/>
  <match src="): ) [51003,51004]" dest="): ) [51618,51619]"/>
  <match src="type_name [1661,1668]" dest="type_name [1661,1668]"/>
  <match src="yul_identifier [38006,38012]" dest="yul_identifier [38006,38012]"/>
  <match src="(: ( [41140,41141]" dest="(: ( [41140,41141]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [19068,19099]" dest="comment: // SPDX-License-Identifier: MIT [19068,19099]"/>
  <match src="member_expression [37475,37483]" dest="member_expression [37475,37483]"/>
  <match src="}: } [42505,42506]" dest="}: } [42505,42506]"/>
  <match src="yul_identifier [42679,42686]" dest="yul_identifier [42679,42686]"/>
  <match src="function_definition [32242,32451]" dest="function_definition [32242,32451]"/>
  <match src="{: { [21436,21437]" dest="{: { [21436,21437]"/>
  <match src="solidity_pragma_token [44443,44457]" dest="solidity_pragma_token [44443,44457]"/>
  <match src="parameter [18257,18261]" dest="parameter [18257,18261]"/>
  <match src="function_definition [50120,52856]" dest="function_definition [50735,53588]"/>
  <match src="identifier: addresses [48464,48473]" dest="identifier: addresses [49079,49088]"/>
  <match src="member_expression [16660,16670]" dest="member_expression [16660,16670]"/>
  <match src="public: public [10734,10740]" dest="public: public [10734,10740]"/>
  <match src="variable_declaration_statement [14179,14222]" dest="variable_declaration_statement [14179,14222]"/>
  <match src="call_argument [18291,18301]" dest="call_argument [18291,18301]"/>
  <match src="function: function [29291,29299]" dest="function: function [29291,29299]"/>
  <match src="returns: returns [30705,30712]" dest="returns: returns [30705,30712]"/>
  <match src=",: , [4763,4764]" dest=",: , [4763,4764]"/>
  <match src="primitive_type [15564,15571]" dest="primitive_type [15564,15571]"/>
  <match src="uint256: uint256 [35957,35964]" dest="uint256: uint256 [35957,35964]"/>
  <match src=".: . [37619,37620]" dest=".: . [37619,37620]"/>
  <match src="==: == [37612,37614]" dest="==: == [37612,37614]"/>
  <match src="): ) [38372,38373]" dest="): ) [38372,38373]"/>
  <match src="primitive_type [18968,18975]" dest="primitive_type [18968,18975]"/>
  <match src="return_type_definition [36747,36769]" dest="return_type_definition [36747,36769]"/>
  <match src="struct_declaration [12212,12468]" dest="struct_declaration [12212,12468]"/>
  <match src="identifier: account [33076,33083]" dest="identifier: account [33076,33083]"/>
  <match src="identifier: _functionCallWithValue [23061,23083]" dest="identifier: _functionCallWithValue [23061,23083]"/>
  <match src="address: address [27864,27871]" dest="address: address [27864,27871]"/>
  <match src="(: ( [51986,51987]" dest="(: ( [52718,52719]"/>
  <match src="call_expression [33641,33653]" dest="call_expression [33641,33653]"/>
  <match src=",: , [7330,7331]" dest=",: , [7330,7331]"/>
  <match src="primitive_type [36374,36381]" dest="primitive_type [36374,36381]"/>
  <match src="identifier: memPtr [39158,39164]" dest="identifier: memPtr [39158,39164]"/>
  <match src="{: { [40967,40968]" dest="{: { [40967,40968]"/>
  <match src="identifier: _values [14320,14327]" dest="identifier: _values [14320,14327]"/>
  <match src="visibility [5507,5515]" dest="visibility [5507,5515]"/>
  <match src="update_expression [48444,48447]" dest="update_expression [49059,49062]"/>
  <match src="user_defined_type [17663,17670]" dest="user_defined_type [17663,17670]"/>
  <match src="(: ( [33300,33301]" dest="(: ( [33300,33301]"/>
  <match src="): ) [46072,46073]" dest="): ) [46070,46071]"/>
  <match src="call_expression [48106,48215]" dest="call_expression [48721,48830]"/>
  <match src=".: . [27828,27829]" dest=".: . [27828,27829]"/>
  <match src="identifier: copy [39148,39152]" dest="identifier: copy [39148,39152]"/>
  <match src="identifier: errorMessage [23101,23113]" dest="identifier: errorMessage [23101,23113]"/>
  <match src="uint256: uint256 [13420,13427]" dest="uint256: uint256 [13420,13427]"/>
  <match src=",: , [7375,7376]" dest=",: , [7375,7376]"/>
  <match src="identifier: currPtr [39779,39786]" dest="identifier: currPtr [39779,39786]"/>
  <match src="(: ( [20350,20351]" dest="(: ( [20350,20351]"/>
  <match src="uint256: uint256 [16680,16687]" dest="uint256: uint256 [16680,16687]"/>
  <match src="returns: returns [30394,30401]" dest="returns: returns [30394,30401]"/>
  <match src="yul_function_call [36446,36468]" dest="yul_function_call [36446,36468]"/>
  <match src="(: ( [34152,34153]" dest="(: ( [34152,34153]"/>
  <match src="(: ( [51867,51868]" dest="(: ( [52599,52600]"/>
  <match src="call_expression [51177,51211]" dest="call_expression [51792,51826]"/>
  <match src="&lt;: &lt; [40877,40878]" dest="&lt;: &lt; [40877,40878]"/>
  <match src=",: , [4222,4223]" dest=",: , [4222,4223]"/>
  <match src=".: . [10864,10865]" dest=".: . [10864,10865]"/>
  <match src="identifier: addr [48002,48006]" dest="identifier: addr [48617,48621]"/>
  <match src="parameter [13302,13306]" dest="parameter [13302,13306]"/>
  <match src="): ) [23009,23010]" dest="): ) [23009,23010]"/>
  <match src="block_statement [50834,51810]" dest="block_statement [51449,52542]"/>
  <match src=".: . [12933,12934]" dest=".: . [12933,12934]"/>
  <match src="array_access [29384,29396]" dest="array_access [29384,29396]"/>
  <match src="variable_declaration [51021,51043]" dest="variable_declaration [51636,51658]"/>
  <match src="comment: // tokens locked in to transfer to withdrawer, if not [51297,51350]" dest="comment: // tokens locked in to transfer to withdrawer, if not [51912,51965]"/>
  <match src="yul_function_call [41146,41162]" dest="yul_function_call [41146,41162]"/>
  <match src="bytes: bytes [6163,6168]" dest="bytes: bytes [6163,6168]"/>
  <match src=",: , [24272,24273]" dest=",: , [24272,24273]"/>
  <match src="}: } [34968,34969]" dest="}: } [34968,34969]"/>
  <match src="primitive_type [1359,1366]" dest="primitive_type [1359,1366]"/>
  <match src="parameter [4186,4198]" dest="parameter [4186,4198]"/>
  <match src="&lt;: &lt; [41571,41572]" dest="&lt;: &lt; [41571,41572]"/>
  <match src="[: [ [13453,13454]" dest="[: [ [13453,13454]"/>
  <match src="struct: struct [34899,34905]" dest="struct: struct [34899,34905]"/>
  <match src="parameter [18219,18232]" dest="parameter [18219,18232]"/>
  <match src="binary_expression [13912,13934]" dest="binary_expression [13912,13934]"/>
  <match src=",: , [16027,16028]" dest=",: , [16027,16028]"/>
  <match src="view: view [19857,19861]" dest="view: view [19857,19861]"/>
  <match src="address: address [46897,46904]" dest="address: address [46895,46902]"/>
  <match src="identifier: EnumerableSet [27907,27920]" dest="identifier: EnumerableSet [27907,27920]"/>
  <match src="variable_declaration [35957,35966]" dest="variable_declaration [35957,35966]"/>
  <match src="yul_function_call [40702,40715]" dest="yul_function_call [40702,40715]"/>
  <match src="function_body [32310,32451]" dest="function_body [32310,32451]"/>
  <match src="identifier: set [13441,13444]" dest="identifier: set [13441,13444]"/>
  <match src="identifier: role [32272,32276]" dest="identifier: role [32272,32276]"/>
  <match src="identifier: role [31238,31242]" dest="identifier: role [31238,31242]"/>
  <match src="identifier: target [24018,24024]" dest="identifier: target [24018,24024]"/>
  <match src="(: ( [14938,14939]" dest="(: ( [14938,14939]"/>
  <match src="else: else [52761,52765]" dest="else: else [53493,53497]"/>
  <match src="&quot;: &quot; [38871,38872]" dest="&quot;: &quot; [38871,38872]"/>
  <match src="identifier: logRLPList [50293,50303]" dest="identifier: logRLPList [50908,50918]"/>
  <match src="calldata: calldata [2938,2946]" dest="calldata: calldata [2938,2946]"/>
  <match src="string [38830,38872]" dest="string [38830,38872]"/>
  <match src="primitive_type [48939,48946]" dest="primitive_type [49554,49561]"/>
  <match src="bytes32: bytes32 [31052,31059]" dest="bytes32: bytes32 [31052,31059]"/>
  <match src="primitive_type [23029,23034]" dest="primitive_type [23029,23034]"/>
  <match src="): ) [21467,21468]" dest="): ) [21467,21468]"/>
  <match src="comment: // File: @openzeppelin/contracts/introspection/ERC165.sol [8697,8754]" dest="comment: // File: @openzeppelin/contracts/introspection/ERC165.sol [8697,8754]"/>
  <match src="primitive_type [36840,36847]" dest="primitive_type [36840,36847]"/>
  <match src="external: external [4261,4269]" dest="external: external [4261,4269]"/>
  <match src="[: [ [8558,8559]" dest="[: [ [8558,8559]"/>
  <match src="(: ( [7280,7281]" dest="(: ( [7280,7281]"/>
  <match src="): ) [2991,2992]" dest="): ) [2991,2992]"/>
  <match src="}: } [24294,24295]" dest="}: } [24294,24295]"/>
  <match src="): ) [17772,17773]" dest="): ) [17772,17773]"/>
  <match src="indexed: indexed [28799,28806]" dest="indexed: indexed [28799,28806]"/>
  <match src="comment: /**      * @notice Creates `amount` tokens of token type `id`, and assigns them to `account`.      * @dev Should be callable only by MintableERC1155Predicate      * Make sure minting is done only by this function      * @param account user address for whom token is being minted      * @param id token which is being minted      * @param amount amount of token being minted      * @param data extra byte data to be accompanied with minted tokens      */ [4960,5421]" dest="comment: /**      * @notice Creates `amount` tokens of token type `id`, and assigns them to `account`.      * @dev Should be callable only by MintableERC1155Predicate      * Make sure minting is done only by this function      * @param account user address for whom token is being minted      * @param id token which is being minted      * @param amount amount of token being minted      * @param data extra byte data to be accompanied with minted tokens      */ [4960,5421]"/>
  <match src="(: ( [24146,24147]" dest="(: ( [24146,24147]"/>
  <match src="identifier: MANAGER_ROLE [45813,45825]" dest="identifier: MANAGER_ROLE [45811,45823]"/>
  <match src="member_expression [10785,10896]" dest="member_expression [10785,10896]"/>
  <match src="primitive_type [17994,18001]" dest="primitive_type [17994,18001]"/>
  <match src="}: } [10467,10468]" dest="}: } [10467,10468]"/>
  <match src="identifier: ids [52676,52679]" dest="identifier: ids [53408,53411]"/>
  <match src="call_argument [35802,35843]" dest="call_argument [35802,35843]"/>
  <match src="internal: internal [37045,37053]" dest="internal: internal [37045,37053]"/>
  <match src="call_expression [45058,45086]" dest="call_expression [45056,45084]"/>
  <match src="bytes: bytes [36812,36817]" dest="bytes: bytes [36812,36817]"/>
  <match src="call_argument [31719,31726]" dest="call_argument [31719,31726]"/>
  <match src="view: view [18243,18247]" dest="view: view [18243,18247]"/>
  <match src="type_name [39619,39626]" dest="type_name [39619,39626]"/>
  <match src="pragma_directive [6306,6329]" dest="pragma_directive [6306,6329]"/>
  <match src="identifier: result [35674,35680]" dest="identifier: result [35674,35680]"/>
  <match src="identifier: value [1447,1452]" dest="identifier: value [1447,1452]"/>
  <match src="assembly_statement [36413,36479]" dest="assembly_statement [36413,36479]"/>
  <match src="call_argument [47573,47577]" dest="call_argument [47571,47575]"/>
  <match src="type_cast_expression [17360,17391]" dest="type_cast_expression [17360,17391]"/>
  <match src="function_definition [34044,34203]" dest="function_definition [34044,34203]"/>
  <match src="): ) [8645,8646]" dest="): ) [8645,8646]"/>
  <match src="identifier: byte0 [40921,40926]" dest="identifier: byte0 [40921,40926]"/>
  <match src="primitive_type [40152,40159]" dest="primitive_type [40152,40159]"/>
  <match src="parameter [18027,18031]" dest="parameter [18027,18031]"/>
  <match src="identifier: account [33632,33639]" dest="identifier: account [33632,33639]"/>
  <match src="internal: internal [16603,16611]" dest="internal: internal [16603,16611]"/>
  <match src="string [45167,45224]" dest="string [45165,45222]"/>
  <match src="identifier: isList [35562,35568]" dest="identifier: isList [35562,35568]"/>
  <match src="identifier: remove [33777,33783]" dest="identifier: remove [33777,33783]"/>
  <match src=",: , [4739,4740]" dest=",: , [4739,4740]"/>
  <match src="}: } [15737,15738]" dest="}: } [15737,15738]"/>
  <match src="{: { [10741,10742]" dest="{: { [10741,10742]"/>
  <match src="call_argument [18980,18990]" dest="call_argument [18980,18990]"/>
  <match src="string [38324,38372]" dest="string [38324,38372]"/>
  <match src="visibility [15115,15122]" dest="visibility [15115,15122]"/>
  <match src="solidity_version: 0.6.2 [19120,19125]" dest="solidity_version: 0.6.2 [19120,19125]"/>
  <match src="}: } [38065,38066]" dest="}: } [38065,38066]"/>
  <match src="identifier: byte0 [41029,41034]" dest="identifier: byte0 [41029,41034]"/>
  <match src="return: return [41300,41306]" dest="return: return [41300,41306]"/>
  <match src="identifier: AddressSet [16564,16574]" dest="identifier: AddressSet [16564,16574]"/>
  <match src="return_type_definition [16053,16067]" dest="return_type_definition [16053,16067]"/>
  <match src="storage: storage [17274,17281]" dest="storage: storage [17274,17281]"/>
  <match src="yul_function_call [41246,41261]" dest="yul_function_call [41246,41261]"/>
  <match src="visibility [14917,14924]" dest="visibility [14917,14924]"/>
  <match src="identifier: RLPItem [38172,38179]" dest="identifier: RLPItem [38172,38179]"/>
  <match src="==: == [32337,32339]" dest="==: == [32337,32339]"/>
  <match src="member_expression [52154,52169]" dest="member_expression [52886,52901]"/>
  <match src="call_expression [39855,39929]" dest="call_expression [39855,39929]"/>
  <match src="identifier: item [37039,37043]" dest="identifier: item [37039,37043]"/>
  <match src="number_literal: 0 [46092,46093]" dest="number_literal: 0 [46090,46091]"/>
  <match src="): ) [45013,45014]" dest="): ) [45011,45012]"/>
  <match src="user_defined_type [38172,38179]" dest="user_defined_type [38172,38179]"/>
  <match src="&quot;: &quot; [37665,37666]" dest="&quot;: &quot; [37665,37666]"/>
  <match src="bytes32: bytes32 [33301,33308]" dest="bytes32: bytes32 [33301,33308]"/>
  <match src="(: ( [35777,35778]" dest="(: ( [35777,35778]"/>
  <match src="{: { [42660,42661]" dest="{: { [42660,42661]"/>
  <match src="&quot;: &quot; [35576,35577]" dest="&quot;: &quot; [35576,35577]"/>
  <match src="(: ( [25135,25136]" dest="(: ( [25135,25136]"/>
  <match src="expression_statement [21676,21755]" dest="expression_statement [21676,21755]"/>
  <match src="call_argument [16436,16450]" dest="call_argument [16436,16450]"/>
  <match src="type_name [8551,8558]" dest="type_name [8551,8558]"/>
  <match src="call_expression [18051,18086]" dest="call_expression [18051,18086]"/>
  <match src="expression_statement [26136,26141]" dest="expression_statement [26136,26141]"/>
  <match src="uint8: uint8 [34679,34684]" dest="uint8: uint8 [34679,34684]"/>
  <match src="call_argument [52730,52732]" dest="call_argument [53462,53464]"/>
  <match src="calldata: calldata [8594,8602]" dest="calldata: calldata [8594,8602]"/>
  <match src="type_name [28003,28011]" dest="type_name [28003,28011]"/>
  <match src="pure: pure [38703,38707]" dest="pure: pure [38703,38707]"/>
  <match src="parameter [31525,31537]" dest="parameter [31525,31537]"/>
  <match src="(: ( [21683,21684]" dest="(: ( [21683,21684]"/>
  <match src="primitive_type [39396,39403]" dest="primitive_type [39396,39403]"/>
  <match src="state_mutability [30389,30393]" dest="state_mutability [30389,30393]"/>
  <match src="identifier: require [37467,37474]" dest="identifier: require [37467,37474]"/>
  <match src="function_definition [38656,39220]" dest="function_definition [38656,39220]"/>
  <match src="private: private [15579,15586]" dest="private: private [15579,15586]"/>
  <match src="): ) [18317,18318]" dest="): ) [18317,18318]"/>
  <match src="primitive_type [41459,41466]" dest="primitive_type [41459,41466]"/>
  <match src="type_name [14885,14888]" dest="type_name [14885,14888]"/>
  <match src="): ) [36082,36083]" dest="): ) [36082,36083]"/>
  <match src="identifier: memPtr [36943,36949]" dest="identifier: memPtr [36943,36949]"/>
  <match src="contract_declaration [44462,44635]" dest="contract_declaration [44462,44635]"/>
  <match src=",: , [13268,13269]" dest=",: , [13268,13269]"/>
  <match src="&gt;: &gt; [35172,35173]" dest="&gt;: &gt; [35172,35173]"/>
  <match src="comment: /*  * @author Hamdi Allam hamdi.allam97@gmail.com  * Please reach out with any questions or concerns  * https://github.com/hamdiallam/Solidity-RLP/blob/e681e25a376dbd5426b509380bc03446f05d0f97/contracts/RLPReader.sol  */ [34402,34626]" dest="comment: /*  * @author Hamdi Allam hamdi.allam97@gmail.com  * Please reach out with any questions or concerns  * https://github.com/hamdiallam/Solidity-RLP/blob/e681e25a376dbd5426b509380bc03446f05d0f97/contracts/RLPReader.sol  */ [34402,34626]"/>
  <match src="): ) [33083,33084]" dest="): ) [33083,33084]"/>
  <match src=",: , [3306,3307]" dest=",: , [3306,3307]"/>
  <match src="identifier: value [14910,14915]" dest="identifier: value [14910,14915]"/>
  <match src="identifier: _add [16086,16090]" dest="identifier: _add [16086,16090]"/>
  <match src="identifier: amount [21653,21659]" dest="identifier: amount [21653,21659]"/>
  <match src="yul_identifier [36903,36909]" dest="yul_identifier [36903,36909]"/>
  <match src="=: = [36011,36012]" dest="=: = [36011,36012]"/>
  <match src="identifier: set [14316,14319]" dest="identifier: set [14316,14319]"/>
  <match src="primitive_type [28422,28429]" dest="primitive_type [28422,28429]"/>
  <match src="type_name [1427,1434]" dest="type_name [1427,1434]"/>
  <match src="address: address [52188,52195]" dest="address: address [52920,52927]"/>
  <match src="call_argument [50614,50641]" dest="call_argument [51229,51256]"/>
  <match src=",: , [21691,21692]" dest=",: , [21691,21692]"/>
  <match src="member_expression [29694,29721]" dest="member_expression [29694,29721]"/>
  <match src="call_argument [24486,24517]" dest="call_argument [24486,24517]"/>
  <match src="{: { [44543,44544]" dest="{: { [44543,44544]"/>
  <match src="primitive_type [13302,13306]" dest="primitive_type [13302,13306]"/>
  <match src="call_argument [51749,51755]" dest="call_argument [52481,52487]"/>
  <match src="member_expression [50306,50319]" dest="member_expression [50921,50934]"/>
  <match src="memory: memory [35057,35063]" dest="memory: memory [35057,35063]"/>
  <match src="member_expression [18291,18301]" dest="member_expression [18291,18301]"/>
  <match src="(: ( [36459,36460]" dest="(: ( [36459,36460]"/>
  <match src="identifier: _inner [18984,18990]" dest="identifier: _inner [18984,18990]"/>
  <match src="binary_expression [41635,41660]" dest="binary_expression [41635,41660]"/>
  <match src="identifier: index [17295,17300]" dest="identifier: index [17295,17300]"/>
  <match src="parameter [17287,17300]" dest="parameter [17287,17300]"/>
  <match src="function_body [29366,29430]" dest="function_body [29366,29430]"/>
  <match src="function_body [24120,24295]" dest="function_body [24120,24295]"/>
  <match src="identifier: _payloadOffset [35888,35902]" dest="identifier: _payloadOffset [35888,35902]"/>
  <match src="): ) [37581,37582]" dest="): ) [37581,37582]"/>
  <match src="for: for [48414,48417]" dest="for: for [49029,49032]"/>
  <match src=",: , [10373,10374]" dest=",: , [10373,10374]"/>
  <match src="public: public [45613,45619]" dest="public: public [45611,45617]"/>
  <match src="return: return [14749,14755]" dest="return: return [14749,14755]"/>
  <match src="bool: bool [29360,29364]" dest="bool: bool [29360,29364]"/>
  <match src=".: . [29396,29397]" dest=".: . [29396,29397]"/>
  <match src=",: , [31635,31636]" dest=",: , [31635,31636]"/>
  <match src="parenthesized_expression [20378,20422]" dest="parenthesized_expression [20378,20422]"/>
  <match src="[: [ [50629,50630]" dest="[: [ [51244,51245]"/>
  <match src="call_argument [16111,16125]" dest="call_argument [16111,16125]"/>
  <match src="member_expression [38531,38542]" dest="member_expression [38531,38542]"/>
  <match src="}: } [31259,31260]" dest="}: } [31259,31260]"/>
  <match src="primitive_type [33068,33075]" dest="primitive_type [33068,33075]"/>
  <match src="yul_assignment [20327,20359]" dest="yul_assignment [20327,20359]"/>
  <match src="{: { [40185,40186]" dest="{: { [40185,40186]"/>
  <match src="identifier: require [35554,35561]" dest="identifier: require [35554,35561]"/>
  <match src="(: ( [36024,36025]" dest="(: ( [36024,36025]"/>
  <match src="call_argument [39666,39677]" dest="call_argument [39666,39677]"/>
  <match src="identifier: token [52102,52107]" dest="identifier: token [52834,52839]"/>
  <match src="bytes32: bytes32 [29308,29315]" dest="bytes32: bytes32 [29308,29315]"/>
  <match src="variable_declaration [35857,35871]" dest="variable_declaration [35857,35871]"/>
  <match src="identifier: isList [36284,36290]" dest="identifier: isList [36284,36290]"/>
  <match src="number_literal: 21 [37221,37223]" dest="number_literal: 21 [37221,37223]"/>
  <match src="}: } [46100,46101]" dest="}: } [46098,46099]"/>
  <match src="identifier: memPtr [41059,41065]" dest="identifier: memPtr [41059,41065]"/>
  <match src="call_expression [52110,52137]" dest="call_expression [52842,52869]"/>
  <match src=",: , [23669,23670]" dest=",: , [23669,23670]"/>
  <match src="): ) [50543,50544]" dest="): ) [51158,51159]"/>
  <match src="return_statement [12985,12997]" dest="return_statement [12985,12997]"/>
  <match src="identifier: account [31547,31554]" dest="identifier: account [31547,31554]"/>
  <match src="identifier: byte0 [41771,41776]" dest="identifier: byte0 [41771,41776]"/>
  <match src="-: - [42630,42631]" dest="-: - [42630,42631]"/>
  <match src="block_statement [49639,49736]" dest="block_statement [50254,50351]"/>
  <match src="{: { [30412,30413]" dest="{: { [30412,30413]"/>
  <match src="array_access [49681,49720]" dest="array_access [50296,50335]"/>
  <match src="modifier_invocation [45675,45686]" dest="modifier_invocation [45673,45684]"/>
  <match src="bytes: bytes [44340,44345]" dest="bytes: bytes [44340,44345]"/>
  <match src="primitive_type [1661,1668]" dest="primitive_type [1661,1668]"/>
  <match src="identifier: value [12746,12751]" dest="identifier: value [12746,12751]"/>
  <match src="): ) [35602,35603]" dest="): ) [35602,35603]"/>
  <match src="type_name [24060,24066]" dest="type_name [24060,24066]"/>
  <match src=",: , [46852,46853]" dest=",: , [46850,46851]"/>
  <match src="is: is [1192,1194]" dest="is: is [1192,1194]"/>
  <match src=",: , [46262,46263]" dest=",: , [46260,46261]"/>
  <match src="identifier: valueIndex [13477,13487]" dest="identifier: valueIndex [13477,13487]"/>
  <match src="{: { [24644,24645]" dest="{: { [24644,24645]"/>
  <match src="yul_evm_builtin [41233,41236]" dest="yul_evm_builtin [41233,41236]"/>
  <match src=",: , [46914,46915]" dest=",: , [46912,46913]"/>
  <match src="type_name [4186,4193]" dest="type_name [4186,4193]"/>
  <match src="identifier: from [1677,1681]" dest="identifier: from [1677,1681]"/>
  <match src="return_statement [18961,19000]" dest="return_statement [18961,19000]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC1155/IERC1155.sol [874,933]" dest="comment: // File: @openzeppelin/contracts/token/ERC1155/IERC1155.sol [874,933]"/>
  <match src="state_mutability [36733,36737]" dest="state_mutability [36733,36737]"/>
  <match src="identifier: len [38045,38048]" dest="identifier: len [38045,38048]"/>
  <match src="return_type_definition [46342,46358]" dest="return_type_definition [46340,46356]"/>
  <match src="event_paramater [28479,28507]" dest="event_paramater [28479,28507]"/>
  <match src="function: function [18870,18878]" dest="function: function [18870,18878]"/>
  <match src="{: { [18263,18264]" dest="{: { [18263,18264]"/>
  <match src="string_literal [38324,38372]" dest="string_literal [38324,38372]"/>
  <match src=".: . [35751,35752]" dest=".: . [35751,35752]"/>
  <match src="identifier: recipient [21630,21639]" dest="identifier: recipient [21630,21639]"/>
  <match src="identifier: operator [1651,1659]" dest="identifier: operator [1651,1659]"/>
  <match src="pragma_directive [34628,34650]" dest="pragma_directive [34628,34650]"/>
  <match src="primitive_type [8501,8508]" dest="primitive_type [8501,8508]"/>
  <match src="): ) [50832,50833]" dest="): ) [51447,51448]"/>
  <match src="[: [ [31604,31605]" dest="[: [ [31604,31605]"/>
  <match src="assignment_expression [49658,49720]" dest="assignment_expression [50273,50335]"/>
  <match src="identifier: item [35064,35068]" dest="identifier: item [35064,35068]"/>
  <match src="internal: internal [48031,48039]" dest="internal: internal [48646,48654]"/>
  <match src=":=: := [37881,37883]" dest=":=: := [37881,37883]"/>
  <match src="if_statement [40867,41288]" dest="if_statement [40867,41288]"/>
  <match src="(: ( [42397,42398]" dest="(: ( [42397,42398]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [25403,25911]" dest="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [25403,25911]"/>
  <match src="(: ( [40583,40584]" dest="(: ( [40583,40584]"/>
  <match src="): ) [23041,23042]" dest="): ) [23041,23042]"/>
  <match src="identifier: role [33763,33767]" dest="identifier: role [33763,33767]"/>
  <match src="returns: returns [15592,15599]" dest="returns: returns [15592,15599]"/>
  <match src="identifier: valueIndex [13428,13438]" dest="identifier: valueIndex [13428,13438]"/>
  <match src="call_expression [33841,33853]" dest="call_expression [33841,33853]"/>
  <match src="&quot;: &quot; [50695,50696]" dest="&quot;: &quot; [51310,51311]"/>
  <match src="primitive_type [37735,37742]" dest="primitive_type [37735,37742]"/>
  <match src="return_statement [41899,41940]" dest="return_statement [41899,41940]"/>
  <match src="]: ] [29395,29396]" dest="]: ] [29395,29396]"/>
  <match src="bytes: bytes [43753,43758]" dest="bytes: bytes [43753,43758]"/>
  <match src="private: private [41417,41424]" dest="private: private [41417,41424]"/>
  <match src="identifier: IMintableERC1155 [51046,51062]" dest="identifier: IMintableERC1155 [51661,51677]"/>
  <match src="primitive_type [43725,43732]" dest="primitive_type [43725,43732]"/>
  <match src="[: [ [48905,48906]" dest="[: [ [49520,49521]"/>
  <match src="internal: internal [18918,18926]" dest="internal: internal [18918,18926]"/>
  <match src="function_definition [37005,37310]" dest="function_definition [37005,37310]"/>
  <match src="uint256: uint256 [45999,46006]" dest="uint256: uint256 [45997,46004]"/>
  <match src="identifier: mintBatch [52160,52169]" dest="identifier: mintBatch [52892,52901]"/>
  <match src="comment: // right shifting to get the len [40745,40777]" dest="comment: // right shifting to get the len [40745,40777]"/>
  <match src="identifier: set [18214,18217]" dest="identifier: set [18214,18217]"/>
  <match src="): ) [18261,18262]" dest="): ) [18261,18262]"/>
  <match src="identifier: returndata_size [25153,25168]" dest="identifier: returndata_size [25153,25168]"/>
  <match src="primitive_type [50646,50653]" dest="primitive_type [51261,51268]"/>
  <match src="identifier: approved [3313,3321]" dest="identifier: approved [3313,3321]"/>
  <match src="): ) [16126,16127]" dest="): ) [16126,16127]"/>
  <match src="uint256: uint256 [34947,34954]" dest="uint256: uint256 [34947,34954]"/>
  <match src="binary_expression [41848,41883]" dest="binary_expression [41848,41883]"/>
  <match src="interface: interface [1173,1182]" dest="interface: interface [1173,1182]"/>
  <match src="parameter [7362,7375]" dest="parameter [7362,7375]"/>
  <match src="identifier: accountHash [20391,20402]" dest="identifier: accountHash [20391,20402]"/>
  <match src="(: ( [33123,33124]" dest="(: ( [33123,33124]"/>
  <match src="type_name [43663,43670]" dest="type_name [43663,43670]"/>
  <match src="uint256: uint256 [1718,1725]" dest="uint256: uint256 [1718,1725]"/>
  <match src="(: ( [41770,41771]" dest="(: ( [41770,41771]"/>
  <match src="returns: returns [35511,35518]" dest="returns: returns [35511,35518]"/>
  <match src="member_expression [21630,21644]" dest="member_expression [21630,21644]"/>
  <match src="for: for [49528,49531]" dest="for: for [50143,50146]"/>
  <match src=",: , [41034,41035]" dest=",: , [41034,41035]"/>
  <match src="): ) [31160,31161]" dest="): ) [31160,31161]"/>
  <match src="primitive_type [28744,28751]" dest="primitive_type [28744,28751]"/>
  <match src="identifier: value [24646,24651]" dest="identifier: value [24646,24651]"/>
  <match src="identifier: data [47633,47637]" dest="identifier: data [47631,47635]"/>
  <match src="storage: storage [16817,16824]" dest="storage: storage [16817,16824]"/>
  <match src="expression_statement [48226,48341]" dest="expression_statement [48841,48956]"/>
  <match src="return_statement [9809,9850]" dest="return_statement [9809,9850]"/>
  <match src=",: , [23090,23091]" dest=",: , [23090,23091]"/>
  <match src="(: ( [36494,36495]" dest="(: ( [36494,36495]"/>
  <match src=",: , [1681,1682]" dest=",: , [1681,1682]"/>
  <match src="type_name [24351,24356]" dest="type_name [24351,24356]"/>
  <match src="primitive_type [5470,5477]" dest="primitive_type [5470,5477]"/>
  <match src="address: address [51667,51674]" dest="address: address [52399,52406]"/>
  <match src="parameter [42158,42170]" dest="parameter [42158,42170]"/>
  <match src="memory: memory [35457,35463]" dest="memory: memory [35457,35463]"/>
  <match src="identifier: items [35624,35629]" dest="identifier: items [35624,35629]"/>
  <match src="[: [ [12942,12943]" dest="[: [ [12942,12943]"/>
  <match src="array_access [49598,49614]" dest="array_access [50213,50229]"/>
  <match src="(: ( [9283,9284]" dest="(: ( [9283,9284]"/>
  <match src="function_body [15610,15738]" dest="function_body [15610,15738]"/>
  <match src="(: ( [16687,16688]" dest="(: ( [16687,16688]"/>
  <match src="yul_identifier [40687,40694]" dest="yul_identifier [40687,40694]"/>
  <match src="identifier: toUint [37289,37295]" dest="identifier: toUint [37289,37295]"/>
  <match src="identifier: abi [47239,47242]" dest="identifier: abi [47237,47240]"/>
  <match src="(: ( [13301,13302]" dest="(: ( [13301,13302]"/>
  <match src="identifier: toBeMintedAmounts [49766,49783]" dest="identifier: toBeMintedAmounts [50381,50398]"/>
  <match src="expression_statement [40286,40298]" dest="expression_statement [40286,40298]"/>
  <match src="]: ] [4749,4750]" dest="]: ] [4749,4750]"/>
  <match src="contract: contract [27750,27758]" dest="contract: contract [27750,27758]"/>
  <match src="identifier: item [35792,35796]" dest="identifier: item [35792,35796]"/>
  <match src="comment: // AddressSet [15746,15759]" dest="comment: // AddressSet [15746,15759]"/>
  <match src="(: ( [36896,36897]" dest="(: ( [36896,36897]"/>
  <match src="expression_statement [48464,48484]" dest="expression_statement [49079,49099]"/>
  <match src="view: view [30389,30393]" dest="view: view [30389,30393]"/>
  <match src="yul_evm_builtin [38037,38040]" dest="yul_evm_builtin [38037,38040]"/>
  <match src="pragma_directive [8793,8816]" dest="pragma_directive [8793,8816]"/>
  <match src="type_name [30367,30374]" dest="type_name [30367,30374]"/>
  <match src="function_body [33351,33477]" dest="function_body [33351,33477]"/>
  <match src="override: override [50227,50235]" dest="override: override [50842,50850]"/>
  <match src="call_argument [16672,16695]" dest="call_argument [16672,16695]"/>
  <match src="&quot;: &quot; [39882,39883]" dest="&quot;: &quot; [39882,39883]"/>
  <match src="^:  ^ [8808,8810]" dest="^:  ^ [8808,8810]"/>
  <match src="comment: // @return indicator whether encoded payload is a list. negate this function call for isData. [36176,36269]" dest="comment: // @return indicator whether encoded payload is a list. negate this function call for isData. [36176,36269]"/>
  <match src=".: . [38273,38274]" dest=".: . [38273,38274]"/>
  <match src="identifier: itemLen [40357,40364]" dest="identifier: itemLen [40357,40364]"/>
  <match src="primitive_type [16672,16679]" dest="primitive_type [16672,16679]"/>
  <match src="type_name [2606,2613]" dest="type_name [2606,2613]"/>
  <match src="function_body [34239,34355]" dest="function_body [34239,34355]"/>
  <match src="mapping: mapping [9276,9283]" dest="mapping: mapping [9276,9283]"/>
  <match src="(: ( [33558,33559]" dest="(: ( [33558,33559]"/>
  <match src="primitive_type [1385,1392]" dest="primitive_type [1385,1392]"/>
  <match src="parameter [30714,30721]" dest="parameter [30714,30721]"/>
  <match src="{: { [9361,9362]" dest="{: { [9361,9362]"/>
  <match src="(: ( [48071,48072]" dest="(: ( [48686,48687]"/>
  <match src="identifier: RLPReader [44878,44887]" dest="identifier: RLPReader [44876,44885]"/>
  <match src="comment: // topic2 is from address [50547,50572]" dest="comment: // topic2 is from address [51162,51187]"/>
  <match src="function_definition [22926,23122]" dest="function_definition [22926,23122]"/>
  <match src="returns: returns [14930,14937]" dest="returns: returns [14930,14937]"/>
  <match src="return_statement [24223,24288]" dest="return_statement [24223,24288]"/>
  <match src="yul_path [42772,42776]" dest="yul_path [42772,42776]"/>
  <match src="primitive_type [6111,6118]" dest="primitive_type [6111,6118]"/>
  <match src="internal: internal [33334,33342]" dest="internal: internal [33334,33342]"/>
  <match src="returns: returns [18018,18025]" dest="returns: returns [18018,18025]"/>
  <match src="identifier: members [29707,29714]" dest="identifier: members [29707,29714]"/>
  <match src="type_name [13839,13846]" dest="type_name [13839,13846]"/>
  <match src="return_type_definition [16617,16631]" dest="return_type_definition [16617,16631]"/>
  <match src="}: } [42872,42873]" dest="}: } [42872,42873]"/>
  <match src=",: , [52372,52373]" dest=",: , [53104,53105]"/>
  <match src="call_argument [47593,47596]" dest="call_argument [47591,47594]"/>
  <match src="bytes32: bytes32 [28744,28751]" dest="bytes32: bytes32 [28744,28751]"/>
  <match src="primitive_type [45428,45435]" dest="primitive_type [45426,45433]"/>
  <match src="identifier: data [24364,24368]" dest="identifier: data [24364,24368]"/>
  <match src="identifier: supportsInterface [9724,9741]" dest="identifier: supportsInterface [9724,9741]"/>
  <match src="primitive_type [30367,30374]" dest="primitive_type [30367,30374]"/>
  <match src="(: ( [46065,46066]" dest="(: ( [46063,46064]"/>
  <match src="identifier: len [42330,42333]" dest="identifier: len [42330,42333]"/>
  <match src="=: = [39704,39705]" dest="=: = [39704,39705]"/>
  <match src="yul_identifier [38045,38048]" dest="yul_identifier [38045,38048]"/>
  <match src="function_definition [4160,4270]" dest="function_definition [4160,4270]"/>
  <match src="uint256: uint256 [35222,35229]" dest="uint256: uint256 [35222,35229]"/>
  <match src="type_name [2360,2366]" dest="type_name [2360,2366]"/>
  <match src="identifier: interfaceId [825,836]" dest="identifier: interfaceId [825,836]"/>
  <match src="call_argument [15657,15693]" dest="call_argument [15657,15693]"/>
  <match src="(: ( [31524,31525]" dest="(: ( [31524,31525]"/>
  <match src="call_argument [52031,52053]" dest="call_argument [52763,52785]"/>
  <match src="]: ] [48947,48948]" dest="]: ] [49562,49563]"/>
  <match src="identifier: STRING_LONG_START [40325,40342]" dest="identifier: STRING_LONG_START [40325,40342]"/>
  <match src="identifier: add [33580,33583]" dest="identifier: add [33580,33583]"/>
  <match src="identifier: require [50584,50591]" dest="identifier: require [51199,51206]"/>
  <match src="{: { [13494,13495]" dest="{: { [13494,13495]"/>
  <match src="(: ( [2657,2658]" dest="(: ( [2657,2658]"/>
  <match src="visibility [36715,36723]" dest="visibility [36715,36723]"/>
  <match src="yul_identifier [41237,41244]" dest="yul_identifier [41237,41244]"/>
  <match src="struct_member [27950,27968]" dest="struct_member [27950,27968]"/>
  <match src="parameter [39353,39372]" dest="parameter [39353,39372]"/>
  <match src="bytes32: bytes32 [30679,30686]" dest="bytes32: bytes32 [30679,30686]"/>
  <match src="yul_evm_builtin [20339,20350]" dest="yul_evm_builtin [20339,20350]"/>
  <match src="identifier: adminRole [33460,33469]" dest="identifier: adminRole [33460,33469]"/>
  <match src="identifier: set [15712,15715]" dest="identifier: set [15712,15715]"/>
  <match src="address: address [33519,33526]" dest="address: address [33519,33526]"/>
  <match src="struct_declaration [34899,34969]" dest="struct_declaration [34899,34969]"/>
  <match src="bytes: bytes [8620,8625]" dest="bytes: bytes [8620,8625]"/>
  <match src="memory: memory [39004,39010]" dest="memory: memory [39004,39010]"/>
  <match src="): ) [41730,41731]" dest="): ) [41730,41731]"/>
  <match src="primitive_type [2899,2906]" dest="primitive_type [2899,2906]"/>
  <match src="): ) [48020,48021]" dest="): ) [48635,48636]"/>
  <match src="primitive_type [47275,47282]" dest="primitive_type [47273,47280]"/>
  <match src=",: , [47261,47262]" dest=",: , [47259,47260]"/>
  <match src="identifier: IMintableERC1155 [52547,52563]" dest="identifier: IMintableERC1155 [53279,53295]"/>
  <match src="call_argument [52724,52733]" dest="call_argument [53456,53465]"/>
  <match src="call_expression [32321,32404]" dest="call_expression [32321,32404]"/>
  <match src="parameter [48072,48088]" dest="parameter [48687,48703]"/>
  <match src="function: function [25946,25954]" dest="function: function [25946,25954]"/>
  <match src="(: ( [32428,32429]" dest="(: ( [32428,32429]"/>
  <match src="expression_statement [44554,44589]" dest="expression_statement [44554,44589]"/>
  <match src=",: , [1944,1945]" dest=",: , [1944,1945]"/>
  <match src="type_name [17663,17670]" dest="type_name [17663,17670]"/>
  <match src="=: = [50450,50451]" dest="=: = [51065,51066]"/>
  <match src="call_argument [33414,33423]" dest="call_argument [33414,33423]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens of token type `id` owned by `account`.      *      * Requirements:      *      * - `account` cannot be the zero address.      */ [2402,2581]" dest="comment: /**      * @dev Returns the amount of tokens of token type `id` owned by `account`.      *      * Requirements:      *      * - `account` cannot be the zero address.      */ [2402,2581]"/>
  <match src="memory: memory [23602,23608]" dest="memory: memory [23602,23608]"/>
  <match src="if_statement [33752,33866]" dest="if_statement [33752,33866]"/>
  <match src="inheritance_specifier [9019,9026]" dest="inheritance_specifier [9019,9026]"/>
  <match src="identifier: _values [14203,14210]" dest="identifier: _values [14203,14210]"/>
  <match src="identifier: length [52378,52384]" dest="identifier: length [53110,53116]"/>
  <match src="yul_identifier [40708,40714]" dest="yul_identifier [40708,40714]"/>
  <match src="function_body [16862,16907]" dest="function_body [16862,16907]"/>
  <match src="(: ( [22947,22948]" dest="(: ( [22947,22948]"/>
  <match src="identifier: codehash [20406,20414]" dest="identifier: codehash [20406,20414]"/>
  <match src="uint256: uint256 [1427,1434]" dest="uint256: uint256 [1427,1434]"/>
  <match src="identifier: this [47573,47577]" dest="identifier: this [47571,47575]"/>
  <match src="): ) [50474,50475]" dest="): ) [51089,51090]"/>
  <match src="identifier: adminRole [30754,30763]" dest="identifier: adminRole [30754,30763]"/>
  <match src="identifier: dest [42827,42831]" dest="identifier: dest [42827,42831]"/>
  <match src="identifier: role [31060,31064]" dest="identifier: role [31060,31064]"/>
  <match src="): ) [42413,42414]" dest="): ) [42413,42414]"/>
  <match src="binary_expression [40367,40397]" dest="binary_expression [40367,40397]"/>
  <match src="call_argument [24267,24272]" dest="call_argument [24267,24272]"/>
  <match src="identifier: safeTransferFrom [4169,4185]" dest="identifier: safeTransferFrom [4169,4185]"/>
  <match src="yul_path [25140,25150]" dest="yul_path [25140,25150]"/>
  <match src="=: = [13910,13911]" dest="=: = [13910,13911]"/>
  <match src="function: function [17957,17965]" dest="function: function [17957,17965]"/>
  <match src="): ) [16695,16696]" dest="): ) [16695,16696]"/>
  <match src="call_expression [32417,32443]" dest="call_expression [32417,32443]"/>
  <match src="string_literal [49118,49173]" dest="string_literal [49733,49788]"/>
  <match src="type_name [8620,8625]" dest="type_name [8620,8625]"/>
  <match src="calldata: calldata [46023,46031]" dest="calldata: calldata [46021,46029]"/>
  <match src="string_literal [24486,24517]" dest="string_literal [24486,24517]"/>
  <match src="parameter [17973,17992]" dest="parameter [17973,17992]"/>
  <match src="call_expression [52154,52530]" dest="call_expression [52886,53262]"/>
  <match src="comment: /**  * @dev Required interface of an ERC1155 compliant contract, as defined in the  * https://eips.ethereum.org/EIPS/eip-1155[EIP].  *  * _Available since v3.1._  */ [1001,1171]" dest="comment: /**  * @dev Required interface of an ERC1155 compliant contract, as defined in the  * https://eips.ethereum.org/EIPS/eip-1155[EIP].  *  * _Available since v3.1._  */ [1001,1171]"/>
  <match src="true: true [44620,44624]" dest="true: true [44620,44624]"/>
  <match src="identifier: length [15641,15647]" dest="identifier: length [15641,15647]"/>
  <match src="identifier: depositReceiver [45480,45495]" dest="identifier: depositReceiver [45478,45493]"/>
  <match src="is: is [33988,33990]" dest="is: is [33988,33990]"/>
  <match src="calldata: calldata [4775,4783]" dest="calldata: calldata [4775,4783]"/>
  <match src="array_access [30741,30753]" dest="array_access [30741,30753]"/>
  <match src="bytes32: bytes32 [32264,32271]" dest="bytes32: bytes32 [32264,32271]"/>
  <match src="type_cast_expression [51667,51680]" dest="type_cast_expression [52399,52412]"/>
  <match src="parameter [35449,35468]" dest="parameter [35449,35468]"/>
  <match src="if: if [40867,40869]" dest="if: if [40867,40869]"/>
  <match src="identifier: accountHash [20168,20179]" dest="identifier: accountHash [20168,20179]"/>
  <match src="}: } [40960,40961]" dest="}: } [40960,40961]"/>
  <match src="type_name [33054,33061]" dest="type_name [33054,33061]"/>
  <match src=",: , [16670,16671]" dest=",: , [16670,16671]"/>
  <match src="bytes32: bytes32 [50767,50774]" dest="bytes32: bytes32 [51382,51389]"/>
  <match src="identifier: value [16359,16364]" dest="identifier: value [16359,16364]"/>
  <match src="string [37111,37148]" dest="string [37111,37148]"/>
  <match src="primitive_type [17360,17367]" dest="primitive_type [17360,17367]"/>
  <match src="type_name [15137,15144]" dest="type_name [15137,15144]"/>
  <match src=".: . [52296,52297]" dest=".: . [53028,53029]"/>
  <match src="primitive_type [818,824]" dest="primitive_type [818,824]"/>
  <match src="(: ( [12659,12660]" dest="(: ( [12659,12660]"/>
  <match src="identifier: _msgSender [32340,32350]" dest="identifier: _msgSender [32340,32350]"/>
  <match src="(: ( [42125,42126]" dest="(: ( [42125,42126]"/>
  <match src="identifier: LIST_LONG_START [40879,40894]" dest="identifier: LIST_LONG_START [40879,40894]"/>
  <match src="library_declaration [11734,19010]" dest="library_declaration [11734,19010]"/>
  <match src="if_statement [40313,41288]" dest="if_statement [40313,41288]"/>
  <match src="return: return [29687,29693]" dest="return: return [29687,29693]"/>
  <match src="call_expression [35735,35759]" dest="call_expression [35735,35759]"/>
  <match src="=: = [35733,35734]" dest="=: = [35733,35734]"/>
  <match src="(: ( [33825,33826]" dest="(: ( [33825,33826]"/>
  <match src="[: [ [51955,51956]" dest="[: [ [52687,52688]"/>
  <match src="event_paramater [28766,28789]" dest="event_paramater [28766,28789]"/>
  <match src="parameter [49004,49020]" dest="parameter [49619,49635]"/>
  <match src="function_definition [6080,6193]" dest="function_definition [6080,6193]"/>
  <match src="uint256: uint256 [38489,38496]" dest="uint256: uint256 [38489,38496]"/>
  <match src="identifier: operator [3536,3544]" dest="identifier: operator [3536,3544]"/>
  <match src="type_name [50150,50157]" dest="type_name [50765,50772]"/>
  <match src="type_name [29308,29315]" dest="type_name [29308,29315]"/>
  <match src="primitive_type [45021,45028]" dest="primitive_type [45019,45026]"/>
  <match src="primitive_type [48008,48015]" dest="primitive_type [48623,48630]"/>
  <match src="return_type_definition [8674,8689]" dest="return_type_definition [8674,8689]"/>
  <match src="call_argument [21684,21691]" dest="call_argument [21684,21691]"/>
  <match src="identifier: to [6107,6109]" dest="identifier: to [6107,6109]"/>
  <match src="identifier: lastvalue [14345,14354]" dest="identifier: lastvalue [14345,14354]"/>
  <match src="external: external [46324,46332]" dest="external: external [46322,46330]"/>
  <match src="identifier: amountsToBeExited [49079,49096]" dest="identifier: amountsToBeExited [49694,49711]"/>
  <match src="type_name [18257,18261]" dest="type_name [18257,18261]"/>
  <match src="primitive_type [50509,50516]" dest="primitive_type [51124,51131]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [14788,14860]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [14788,14860]"/>
  <match src="member_expression [26034,26044]" dest="member_expression [26034,26044]"/>
  <match src="(: ( [38299,38300]" dest="(: ( [38299,38300]"/>
  <match src="memory: memory [50435,50441]" dest="memory: memory [51050,51056]"/>
  <match src="identifier: role [31605,31609]" dest="identifier: role [31605,31609]"/>
  <match src="visibility [45666,45674]" dest="visibility [45664,45672]"/>
  <match src="modifier: modifier [44520,44528]" dest="modifier: modifier [44520,44528]"/>
  <match src="): ) [41934,41935]" dest="): ) [41934,41935]"/>
  <match src="call_expression [45147,45231]" dest="call_expression [45145,45229]"/>
  <match src="identifier: lastIndex [14211,14220]" dest="identifier: lastIndex [14211,14220]"/>
  <match src="yul_evm_builtin [40717,40720]" dest="yul_evm_builtin [40717,40720]"/>
  <match src="type_name [45506,45513]" dest="type_name [45504,45511]"/>
  <match src="user_defined_type [44850,44863]" dest="user_defined_type [44848,44861]"/>
  <match src=",: , [39173,39174]" dest=",: , [39173,39174]"/>
  <match src="||: || [41661,41663]" dest="||: || [41661,41663]"/>
  <match src="): ) [41795,41796]" dest="): ) [41795,41796]"/>
  <match src="visibility [26080,26088]" dest="visibility [26080,26088]"/>
  <match src="struct_expression [24633,24663]" dest="struct_expression [24633,24663]"/>
  <match src="primitive_type [29360,29364]" dest="primitive_type [29360,29364]"/>
  <match src="identifier: lastvalue [14187,14196]" dest="identifier: lastvalue [14187,14196]"/>
  <match src=".: . [38779,38780]" dest=".: . [38779,38780]"/>
  <match src=".: . [50309,50310]" dest=".: . [50924,50925]"/>
  <match src="number_literal: 0x80 [34715,34719]" dest="number_literal: 0x80 [34715,34719]"/>
  <match src="member_expression [17746,17756]" dest="member_expression [17746,17756]"/>
  <match src="primitive_type [48386,48393]" dest="primitive_type [49001,49008]"/>
  <match src="comment: /*      * @param src Pointer to source      * @param dest Pointer to destination      * @param len Amount of memory to copy from the source      */ [41955,42106]" dest="comment: /*      * @param src Pointer to source      * @param dest Pointer to destination      * @param len Amount of memory to copy from the source      */ [41955,42106]"/>
  <match src="primitive_type [17684,17691]" dest="primitive_type [17684,17691]"/>
  <match src=".: . [50321,50322]" dest=".: . [50936,50937]"/>
  <match src="visibility [2952,2960]" dest="visibility [2952,2960]"/>
  <match src="identifier: data [6178,6182]" dest="identifier: data [6178,6182]"/>
  <match src="array_access [10417,10450]" dest="array_access [10417,10450]"/>
  <match src=",: , [24265,24266]" dest=",: , [24265,24266]"/>
  <match src="identifier: token [52291,52296]" dest="identifier: token [53023,53028]"/>
  <match src="bytes32: bytes32 [14179,14186]" dest="bytes32: bytes32 [14179,14186]"/>
  <match src="(: ( [9791,9792]" dest="(: ( [9791,9792]"/>
  <match src="parameter [7318,7330]" dest="parameter [7318,7330]"/>
  <match src="yul_identifier [40200,40205]" dest="yul_identifier [40200,40205]"/>
  <match src="(: ( [21462,21463]" dest="(: ( [21462,21463]"/>
  <match src="(: ( [23083,23084]" dest="(: ( [23083,23084]"/>
  <match src="yul_path [42846,42853]" dest="yul_path [42846,42853]"/>
  <match src="augmented_assignment_expression [42477,42494]" dest="augmented_assignment_expression [42477,42494]"/>
  <match src="contract: contract [44739,44747]" dest="contract: contract [44737,44745]"/>
  <match src="identifier: account [20351,20358]" dest="identifier: account [20351,20358]"/>
  <match src=".: . [52159,52160]" dest=".: . [52891,52892]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [12476,12640]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [12476,12640]"/>
  <match src="call_expression [16880,16899]" dest="call_expression [16880,16899]"/>
  <match src="type_name [3569,3573]" dest="type_name [3569,3573]"/>
  <match src="identifier: errorMessage [24074,24086]" dest="identifier: errorMessage [24074,24086]"/>
  <match src="call_expression [31227,31252]" dest="call_expression [31227,31252]"/>
  <match src="visibility [23011,23019]" dest="visibility [23011,23019]"/>
  <match src="(: ( [38171,38172]" dest="(: ( [38171,38172]"/>
  <match src="external: external [6184,6192]" dest="external: external [6184,6192]"/>
  <match src="yul_evm_builtin [42820,42826]" dest="yul_evm_builtin [42820,42826]"/>
  <match src="primitive_type [29308,29315]" dest="primitive_type [29308,29315]"/>
  <match src="&lt;: &lt; [49550,49551]" dest="&lt;: &lt; [50165,50166]"/>
  <match src="): ) [37353,37354]" dest="): ) [37353,37354]"/>
  <match src="is: is [9016,9018]" dest="is: is [9016,9018]"/>
  <match src="state_mutability [17311,17315]" dest="state_mutability [17311,17315]"/>
  <match src="=: = [49543,49544]" dest="=: = [50158,50159]"/>
  <match src="call_expression [35326,35354]" dest="call_expression [35326,35354]"/>
  <match src="type_name [24433,24438]" dest="type_name [24433,24438]"/>
  <match src="pragma: pragma [44711,44717]" dest="pragma: pragma [44711,44717]"/>
  <match src="binary_expression [51834,51898]" dest="binary_expression [52566,52630]"/>
  <match src="visibility [16603,16611]" dest="visibility [16603,16611]"/>
  <match src="bytes32: bytes32 [16672,16679]" dest="bytes32: bytes32 [16672,16679]"/>
  <match src="{: { [16862,16863]" dest="{: { [16862,16863]"/>
  <match src="type_name [13302,13306]" dest="type_name [13302,13306]"/>
  <match src="(: ( [20378,20379]" dest="(: ( [20378,20379]"/>
  <match src="^:  ^ [19118,19120]" dest="^:  ^ [19118,19120]"/>
  <match src="variable_declaration [36786,36805]" dest="variable_declaration [36786,36805]"/>
  <match src="function_definition [42112,42873]" dest="function_definition [42112,42873]"/>
  <match src="(: ( [3568,3569]" dest="(: ( [3568,3569]"/>
  <match src="parameter [48008,48020]" dest="parameter [48623,48635]"/>
  <match src="(: ( [21454,21455]" dest="(: ( [21454,21455]"/>
  <match src="identifier: require [31582,31589]" dest="identifier: require [31582,31589]"/>
  <match src=",: , [5484,5485]" dest=",: , [5484,5485]"/>
  <match src="type_cast_expression [48136,48146]" dest="type_cast_expression [48751,48761]"/>
  <match src="identifier: account [33584,33591]" dest="identifier: account [33584,33591]"/>
  <match src="identifier: _supportedInterfaces [9308,9328]" dest="identifier: _supportedInterfaces [9308,9328]"/>
  <match src="function_body [46074,46101]" dest="function_body [46072,46099]"/>
  <match src="identifier: LIST_SHORT_START [41779,41795]" dest="identifier: LIST_SHORT_START [41779,41795]"/>
  <match src="number_literal: 2 [50533,50534]" dest="number_literal: 2 [51148,51149]"/>
  <match src="function_body [37077,37310]" dest="function_body [37077,37310]"/>
  <match src="revert: revert [25228,25234]" dest="revert: revert [25228,25234]"/>
  <match src="comment: // topic0 is event sig [50849,50871]" dest="comment: // topic0 is event sig [51464,51486]"/>
  <match src="parameter [33301,33313]" dest="parameter [33301,33313]"/>
  <match src="bytes: bytes [4240,4245]" dest="bytes: bytes [4240,4245]"/>
  <match src="primitive_type [29128,29135]" dest="primitive_type [29128,29135]"/>
  <match src="yul_function_call [25132,25151]" dest="yul_function_call [25132,25151]"/>
  <match src="bytes: bytes [26111,26116]" dest="bytes: bytes [26111,26116]"/>
  <match src="[: [ [33762,33763]" dest="[: [ [33762,33763]"/>
  <match src="parameter [5486,5505]" dest="parameter [5486,5505]"/>
  <match src="memory: memory [38723,38729]" dest="memory: memory [38723,38729]"/>
  <match src="yul_evm_builtin [40209,40213]" dest="yul_evm_builtin [40209,40213]"/>
  <match src="(: ( [41564,41565]" dest="(: ( [41564,41565]"/>
  <match src="identifier: _itemLength [39799,39810]" dest="identifier: _itemLength [39799,39810]"/>
  <match src="function: function [33485,33493]" dest="function: function [33485,33493]"/>
  <match src="binary_expression [40871,40894]" dest="binary_expression [40871,40894]"/>
  <match src="primitive_type [39024,39029]" dest="primitive_type [39024,39029]"/>
  <match src="identifier: itemLen [40911,40918]" dest="identifier: itemLen [40911,40918]"/>
  <match src="memory: memory [24357,24363]" dest="memory: memory [24357,24363]"/>
  <match src="yul_path [41154,41161]" dest="yul_path [41154,41161]"/>
  <match src="): ) [38872,38873]" dest="): ) [38872,38873]"/>
  <match src="identifier: logTopicRLPList [50614,50629]" dest="identifier: logTopicRLPList [51229,51244]"/>
  <match src="identifier: currPtr [39746,39753]" dest="identifier: currPtr [39746,39753]"/>
  <match src="interface: interface [6373,6382]" dest="interface: interface [6373,6382]"/>
  <match src="identifier: item [39153,39157]" dest="identifier: item [39153,39157]"/>
  <match src="{: { [43140,43141]" dest="{: { [43140,43141]"/>
  <match src="identifier: mask [42710,42714]" dest="identifier: mask [42710,42714]"/>
  <match src="variable_declaration_statement [20133,20150]" dest="variable_declaration_statement [20133,20150]"/>
  <match src="member_expression [15629,15640]" dest="member_expression [15629,15640]"/>
  <match src="call_expression [33559,33592]" dest="call_expression [33559,33592]"/>
  <match src="call_expression [9510,9550]" dest="call_expression [9510,9550]"/>
  <match src=",: , [10694,10695]" dest=",: , [10694,10695]"/>
  <match src="number_literal: 1 [40396,40397]" dest="number_literal: 1 [40396,40397]"/>
  <match src="return_type_definition [2649,2666]" dest="return_type_definition [2649,2666]"/>
  <match src=".: . [29404,29405]" dest=".: . [29404,29405]"/>
  <match src="binary_expression [24139,24169]" dest="binary_expression [24139,24169]"/>
  <match src=",: , [38322,38323]" dest=",: , [38322,38323]"/>
  <match src="indexed: indexed [29136,29143]" dest="indexed: indexed [29136,29143]"/>
  <match src="state_mutability [16612,16616]" dest="state_mutability [16612,16616]"/>
  <match src="{: { [39405,39406]" dest="{: { [39405,39406]"/>
  <match src="member_expression [51976,51986]" dest="member_expression [52708,52718]"/>
  <match src="type_name [47169,47178]" dest="type_name [47167,47176]"/>
  <match src="type_name [9276,9299]" dest="type_name [9276,9299]"/>
  <match src="bytes32: bytes32 [18303,18310]" dest="bytes32: bytes32 [18303,18310]"/>
  <match src="event_definition [28726,28815]" dest="event_definition [28726,28815]"/>
  <match src="contract_declaration [25913,26296]" dest="contract_declaration [25913,26296]"/>
  <match src="internal: internal [23578,23586]" dest="internal: internal [23578,23586]"/>
  <match src="storage: storage [12664,12671]" dest="storage: storage [12664,12671]"/>
  <match src="{: { [45620,45621]" dest="{: { [45618,45619]"/>
  <match src="{: { [24120,24121]" dest="{: { [24120,24121]"/>
  <match src="uint8: uint8 [34726,34731]" dest="uint8: uint8 [34726,34731]"/>
  <match src="): ) [24086,24087]" dest="): ) [24086,24087]"/>
  <match src="block_statement [40896,40961]" dest="block_statement [40896,40961]"/>
  <match src="type_name [22983,22989]" dest="type_name [22983,22989]"/>
  <match src="pure: pure [36321,36325]" dest="pure: pure [36321,36325]"/>
  <match src="): ) [29674,29675]" dest="): ) [29674,29675]"/>
  <match src="address: address [22948,22955]" dest="address: address [22948,22955]"/>
  <match src="identifier: members [33769,33776]" dest="identifier: members [33769,33776]"/>
  <match src="parameter [3528,3544]" dest="parameter [3528,3544]"/>
  <match src="string [52788,52836]" dest="string [53520,53568]"/>
  <match src="call_argument [51675,51679]" dest="call_argument [52407,52411]"/>
  <match src="event_paramater [45506,45531]" dest="event_paramater [45504,45529]"/>
  <match src="pure: pure [42208,42212]" dest="pure: pure [42208,42212]"/>
  <match src="primitive_type [24060,24066]" dest="primitive_type [24060,24066]"/>
  <match src="=: = [35630,35631]" dest="=: = [35630,35631]"/>
  <match src="and: and [42690,42693]" dest="and: and [42690,42693]"/>
  <match src="if: if [40313,40315]" dest="if: if [40313,40315]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/EnumerableSet.sol [10922,10978]" dest="comment: // File: @openzeppelin/contracts/utils/EnumerableSet.sol [10922,10978]"/>
  <match src="parameter [10292,10310]" dest="parameter [10292,10310]"/>
  <match src="comment: // in bytes32. [12190,12204]" dest="comment: // in bytes32. [12190,12204]"/>
  <match src="indexed: indexed [2382,2389]" dest="indexed: indexed [2382,2389]"/>
  <match src="primitive_type [41439,41446]" dest="primitive_type [41439,41446]"/>
  <match src="address: address [17325,17332]" dest="address: address [17325,17332]"/>
  <match src="(: ( [31589,31590]" dest="(: ( [31589,31590]"/>
  <match src="comment: // require(isList(item), &quot;RLPReader: NUM_ITEMS_NOT_LIST&quot;); [39521,39579]" dest="comment: // require(isList(item), &quot;RLPReader: NUM_ITEMS_NOT_LIST&quot;); [39521,39579]"/>
  <match src="(: ( [50926,50927]" dest="(: ( [51541,51542]"/>
  <match src="tuple_expression [47263,47292]" dest="tuple_expression [47261,47290]"/>
  <match src="identifier: WORD_SIZE [42319,42328]" dest="identifier: WORD_SIZE [42319,42328]"/>
  <match src="): ) [22610,22611]" dest="): ) [22610,22611]"/>
  <match src="(: ( [45298,45299]" dest="(: ( [45296,45297]"/>
  <match src="address: address [21384,21391]" dest="address: address [21384,21391]"/>
  <match src="type_name [40068,40075]" dest="type_name [40068,40075]"/>
  <match src="binary_expression [35778,35800]" dest="binary_expression [35778,35800]"/>
  <match src="identifier: require [38798,38805]" dest="identifier: require [38798,38805]"/>
  <match src="comment: // retrieve the bytes [42785,42806]" dest="comment: // retrieve the bytes [42785,42806]"/>
  <match src="function_body [12715,13060]" dest="function_body [12715,13060]"/>
  <match src="if: if [12726,12728]" dest="if: if [12726,12728]"/>
  <match src="{: { [23043,23044]" dest="{: { [23043,23044]"/>
  <match src="identifier: codehash [20379,20387]" dest="identifier: codehash [20379,20387]"/>
  <match src="&quot;: &quot; [22655,22656]" dest="&quot;: &quot; [22655,22656]"/>
  <match src="identifier: count [39599,39604]" dest="identifier: count [39599,39604]"/>
  <match src=",: , [43714,43715]" dest=",: , [43714,43715]"/>
  <match src="type_name [45963,45970]" dest="type_name [45961,45968]"/>
  <match src="type_name [46863,46870]" dest="type_name [46861,46868]"/>
  <match src="return_type_definition [15128,15145]" dest="return_type_definition [15128,15145]"/>
  <match src="comment: // Delete the slot where the moved value was stored [14509,14560]" dest="comment: // Delete the slot where the moved value was stored [14509,14560]"/>
  <match src="address: address [1385,1392]" dest="address: address [1385,1392]"/>
  <match src="type_name [50168,50175]" dest="type_name [50783,50790]"/>
  <match src="): ) [36339,36340]" dest="): ) [36339,36340]"/>
  <match src="type_name [22561,22566]" dest="type_name [22561,22566]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [18533,18864]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [18533,18864]"/>
  <match src="member_expression [14574,14589]" dest="member_expression [14574,14589]"/>
  <match src="identifier: amount [51561,51567]" dest="identifier: amount [52267,52273]"/>
  <match src="]: ] [33401,33402]" dest="]: ] [33401,33402]"/>
  <match src="comment: // 1 byte for the length prefix [37160,37191]" dest="comment: // 1 byte for the length prefix [37160,37191]"/>
  <match src="uint256: uint256 [4212,4219]" dest="uint256: uint256 [4212,4219]"/>
  <match src="): ) [24850,24851]" dest="): ) [24850,24851]"/>
  <match src="&quot;: &quot; [34192,34193]" dest="&quot;: &quot; [34192,34193]"/>
  <match src="let: let [41103,41106]" dest="let: let [41103,41106]"/>
  <match src="[: [ [49675,49676]" dest="[: [ [50290,50291]"/>
  <match src="identifier: UintSet [17435,17442]" dest="identifier: UintSet [17435,17442]"/>
  <match src="): ) [51554,51555]" dest="): ) [52174,52175]"/>
  <match src="identifier: push [12781,12785]" dest="identifier: push [12781,12785]"/>
  <match src=",: , [52012,52013]" dest=",: , [52744,52745]"/>
  <match src="internal: internal [17302,17310]" dest="internal: internal [17302,17310]"/>
  <match src="emit: emit [33609,33613]" dest="emit: emit [33609,33613]"/>
  <match src="yul_variable_declaration [40486,40517]" dest="yul_variable_declaration [40486,40517]"/>
  <match src="expression_statement [42477,42495]" dest="expression_statement [42477,42495]"/>
  <match src="is: is [10685,10687]" dest="is: is [10685,10687]"/>
  <match src="string [37625,37666]" dest="string [37625,37666]"/>
  <match src="call_argument [44999,45013]" dest="call_argument [44997,45011]"/>
  <match src="(: ( [18471,18472]" dest="(: ( [18471,18472]"/>
  <match src="primitive_type [1921,1928]" dest="primitive_type [1921,1928]"/>
  <match src="number_literal: 0 [35969,35970]" dest="number_literal: 0 [35969,35970]"/>
  <match src="type_name [48072,48081]" dest="type_name [48687,48696]"/>
  <match src="identifier: tokenBalances [49552,49565]" dest="identifier: tokenBalances [50167,50180]"/>
  <match src="comment: /**      * @dev Mapping of interface ids to whether or not it's supported.      */ [9186,9270]" dest="comment: /**      * @dev Mapping of interface ids to whether or not it's supported.      */ [9186,9270]"/>
  <match src="comment: /**      * @notice rejects single transfer      */ [45850,45902]" dest="comment: /**      * @notice rejects single transfer      */ [45848,45900]"/>
  <match src="primitive_type [1972,1976]" dest="primitive_type [1972,1976]"/>
  <match src="identifier: item [39368,39372]" dest="identifier: item [39368,39372]"/>
  <match src="type_name [24045,24052]" dest="type_name [24045,24052]"/>
  <match src="for: for [44888,44891]" dest="for: for [44886,44889]"/>
  <match src="view: view [18927,18931]" dest="view: view [18927,18931]"/>
  <match src="identifier: amountsToBeExited [49681,49698]" dest="identifier: amountsToBeExited [50296,50313]"/>
  <match src="call_argument [47352,47361]" dest="call_argument [47350,47359]"/>
  <match src="solidity_version_comparison_operator [19118,19120]" dest="solidity_version_comparison_operator [19118,19120]"/>
  <match src="parameter [17263,17285]" dest="parameter [17263,17285]"/>
  <match src="bytes: bytes [23544,23549]" dest="bytes: bytes [23544,23549]"/>
  <match src="&quot;: &quot; [21518,21519]" dest="&quot;: &quot; [21518,21519]"/>
  <match src="bytes32: bytes32 [13270,13277]" dest="bytes32: bytes32 [13270,13277]"/>
  <match src="identifier: item [38688,38692]" dest="identifier: item [38688,38692]"/>
  <match src="identifier: getRoleAdmin [30666,30678]" dest="identifier: getRoleAdmin [30666,30678]"/>
  <match src="block_statement [24852,25203]" dest="block_statement [24852,25203]"/>
  <match src="(: ( [22640,22641]" dest="(: ( [22640,22641]"/>
  <match src="identifier: toList [35442,35448]" dest="identifier: toList [35442,35448]"/>
  <match src="identifier: addresses [48370,48379]" dest="identifier: addresses [48985,48994]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC1155/ERC1155Receiver.sol [10472,10538]" dest="comment: // File: @openzeppelin/contracts/token/ERC1155/ERC1155Receiver.sol [10472,10538]"/>
  <match src="identifier: Set [12660,12663]" dest="identifier: Set [12660,12663]"/>
  <match src="parameter [24106,24118]" dest="parameter [24106,24118]"/>
  <match src="visibility [10312,10320]" dest="visibility [10312,10320]"/>
  <match src="parameter [4793,4812]" dest="parameter [4793,4812]"/>
  <match src="(: ( [33701,33702]" dest="(: ( [33701,33702]"/>
  <match src="solidity_pragma_token [26403,26418]" dest="solidity_pragma_token [26403,26418]"/>
  <match src="yul_identifier [41222,41229]" dest="yul_identifier [41222,41229]"/>
  <match src="identifier: set [16091,16094]" dest="identifier: set [16091,16094]"/>
  <match src="}: } [40860,40861]" dest="}: } [40860,40861]"/>
  <match src="(: ( [33651,33652]" dest="(: ( [33651,33652]"/>
  <match src="&quot;: &quot; [37522,37523]" dest="&quot;: &quot; [37522,37523]"/>
  <match src="type_name [12443,12450]" dest="type_name [12443,12450]"/>
  <match src="type_name [50886,50893]" dest="type_name [51501,51508]"/>
  <match src="comment: // File: contracts/root/TokenPredicates/MintableERC1155Predicate.sol [44639,44707]" dest="comment: // File: contracts/root/TokenPredicates/MintableERC1155Predicate.sol [44639,44707]"/>
  <match src="}: } [39962,39963]" dest="}: } [39962,39963]"/>
  <match src="yul_function_call [42391,42415]" dest="yul_function_call [42391,42415]"/>
  <match src=",: , [3526,3527]" dest=",: , [3526,3527]"/>
  <match src="boolean_literal [36551,36555]" dest="boolean_literal [36551,36555]"/>
  <match src="primitive_type [43691,43698]" dest="primitive_type [43691,43698]"/>
  <match src="address: address [19831,19838]" dest="address: address [19831,19838]"/>
  <match src="identifier: interfaceId [9837,9848]" dest="identifier: interfaceId [9837,9848]"/>
  <match src="return: return [9809,9815]" dest="return: return [9809,9815]"/>
  <match src="visibility [3323,3331]" dest="visibility [3323,3331]"/>
  <match src="calldata: calldata [46308,46316]" dest="calldata: calldata [46306,46314]"/>
  <match src="(: ( [30352,30353]" dest="(: ( [30352,30353]"/>
  <match src="pure: pure [38202,38206]" dest="pure: pure [38202,38206]"/>
  <match src="primitive_type [21411,21418]" dest="primitive_type [21411,21418]"/>
  <match src="parameter [3511,3526]" dest="parameter [3511,3526]"/>
  <match src="return_type_definition [9783,9797]" dest="return_type_definition [9783,9797]"/>
  <match src="binary_expression [40921,40945]" dest="binary_expression [40921,40945]"/>
  <match src="address: address [1407,1414]" dest="address: address [1407,1414]"/>
  <match src=".: . [38824,38825]" dest=".: . [38824,38825]"/>
  <match src="bytes: bytes [23596,23601]" dest="bytes: bytes [23596,23601]"/>
  <match src="call_argument [17368,17390]" dest="call_argument [17368,17390]"/>
  <match src="call_argument [12746,12751]" dest="call_argument [12746,12751]"/>
  <match src="uint256: uint256 [4224,4231]" dest="uint256: uint256 [4224,4231]"/>
  <match src="call_argument [39030,39033]" dest="call_argument [39030,39033]"/>
  <match src="solidity_version: 0.6.0 [10594,10599]" dest="solidity_version: 0.6.0 [10594,10599]"/>
  <match src="identifier: members [30443,30450]" dest="identifier: members [30443,30450]"/>
  <match src="function: function [29604,29612]" dest="function: function [29604,29612]"/>
  <match src="): ) [39818,39819]" dest="): ) [39818,39819]"/>
  <match src="state_variable_declaration [45095,45232]" dest="state_variable_declaration [45093,45230]"/>
  <match src="identifier: role [33710,33714]" dest="identifier: role [33710,33714]"/>
  <match src="member_expression [35747,35758]" dest="member_expression [35747,35758]"/>
  <match src="identifier: RLPItem [35657,35664]" dest="identifier: RLPItem [35657,35664]"/>
  <match src="expression_statement [37201,37262]" dest="expression_statement [37201,37262]"/>
  <match src="primitive_type [29632,29639]" dest="primitive_type [29632,29639]"/>
  <match src="visibility [9127,9134]" dest="visibility [9127,9134]"/>
  <match src=",: , [33313,33314]" dest=",: , [33313,33314]"/>
  <match src="type_name [1718,1727]" dest="type_name [1718,1727]"/>
  <match src="indexed: indexed [1954,1961]" dest="indexed: indexed [1954,1961]"/>
  <match src="identifier: ids [4760,4763]" dest="identifier: ids [4760,4763]"/>
  <match src="struct_member [34947,34962]" dest="struct_member [34947,34962]"/>
  <match src=".: . [15632,15633]" dest=".: . [15632,15633]"/>
  <match src="array_access [31125,31137]" dest="array_access [31125,31137]"/>
  <match src="call_argument [31117,31162]" dest="call_argument [31117,31162]"/>
  <match src="assembly: assembly [40176,40184]" dest="assembly: assembly [40176,40184]"/>
  <match src="(: ( [25091,25092]" dest="(: ( [25091,25092]"/>
  <match src="identifier: _roles [28021,28027]" dest="identifier: _roles [28021,28027]"/>
  <match src="function_body [21436,21762]" dest="function_body [21436,21762]"/>
  <match src="call_argument [39811,39818]" dest="call_argument [39811,39818]"/>
  <match src="visibility [33536,33543]" dest="visibility [33536,33543]"/>
  <match src="yul_identifier [20351,20358]" dest="yul_identifier [20351,20358]"/>
  <match src="address: address [48353,48360]" dest="address: address [48968,48975]"/>
  <match src="call_expression [15621,15694]" dest="call_expression [15621,15694]"/>
  <match src="uint256: uint256 [37777,37784]" dest="uint256: uint256 [37777,37784]"/>
  <match src="}: } [46434,46435]" dest="}: } [46432,46433]"/>
  <match src="identifier: index [18911,18916]" dest="identifier: index [18911,18916]"/>
  <match src="function_body [45620,45622]" dest="function_body [45618,45620]"/>
  <match src="call_expression [10340,10406]" dest="call_expression [10340,10406]"/>
  <match src="): ) [50253,50254]" dest="): ) [50868,50869]"/>
  <match src="variable_declaration_statement [39689,39729]" dest="variable_declaration_statement [39689,39729]"/>
  <match src="=: = [50384,50385]" dest="=: = [50999,51000]"/>
  <match src="pragma: pragma [972,978]" dest="pragma: pragma [972,978]"/>
  <match src="using: using [27791,27796]" dest="using: using [27791,27796]"/>
  <match src="identifier: account [33832,33839]" dest="identifier: account [33832,33839]"/>
  <match src="yul_evm_builtin [41025,41028]" dest="yul_evm_builtin [41025,41028]"/>
  <match src="returns: returns [26102,26109]" dest="returns: returns [26102,26109]"/>
  <match src="parameter [24026,24043]" dest="parameter [24026,24043]"/>
  <match src="function: function [5427,5435]" dest="function: function [5427,5435]"/>
  <match src="]: ] [50792,50793]" dest="]: ] [51407,51408]"/>
  <match src=",: , [40510,40511]" dest=",: , [40510,40511]"/>
  <match src="state_mutability [16839,16843]" dest="state_mutability [16839,16843]"/>
  <match src=",: , [40215,40216]" dest=",: , [40215,40216]"/>
  <match src="parameter [16588,16601]" dest="parameter [16588,16601]"/>
  <match src=",: , [39182,39183]" dest=",: , [39182,39183]"/>
  <match src="function: function [45908,45916]" dest="function: function [45906,45914]"/>
  <match src="visibility [36312,36320]" dest="visibility [36312,36320]"/>
  <match src="call_argument [45309,45369]" dest="call_argument [45307,45367]"/>
  <match src="(: ( [40809,40810]" dest="(: ( [40809,40810]"/>
  <match src="identifier: length [49097,49103]" dest="identifier: length [49712,49718]"/>
  <match src="parameter [34225,34237]" dest="parameter [34225,34237]"/>
  <match src="returns: returns [46342,46349]" dest="returns: returns [46340,46347]"/>
  <match src="address: address [45963,45970]" dest="address: address [45961,45968]"/>
  <match src="parameter [2606,2621]" dest="parameter [2606,2621]"/>
  <match src="identifier: STRING_SHORT_START [40266,40284]" dest="identifier: STRING_SHORT_START [40266,40284]"/>
  <match src=".: . [37716,37717]" dest=".: . [37716,37717]"/>
  <match src="identifier: memPtr [40223,40229]" dest="identifier: memPtr [40223,40229]"/>
  <match src="&quot;: &quot; [45084,45085]" dest="&quot;: &quot; [45082,45083]"/>
  <match src="identifier: _values [15633,15640]" dest="identifier: _values [15633,15640]"/>
  <match src="call_argument [31164,31213]" dest="call_argument [31164,31213]"/>
  <match src="yul_evm_builtin [42766,42771]" dest="yul_evm_builtin [42766,42771]"/>
  <match src="identifier: initializer [45675,45686]" dest="identifier: initializer [45673,45684]"/>
  <match src=".: . [39157,39158]" dest=".: . [39157,39158]"/>
  <match src="yul_path [41237,41244]" dest="yul_path [41237,41244]"/>
  <match src="return: return [15157,15163]" dest="return: return [15157,15163]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [10982,11013]" dest="comment: // SPDX-License-Identifier: MIT [10982,11013]"/>
  <match src="yul_identifier [40490,40497]" dest="yul_identifier [40490,40497]"/>
  <match src=".: . [52377,52378]" dest=".: . [53109,53110]"/>
  <match src="identifier: length [49276,49282]" dest="identifier: length [49891,49897]"/>
  <match src="primitive_type [37068,37075]" dest="primitive_type [37068,37075]"/>
  <match src="variable_declaration [37735,37746]" dest="variable_declaration [37735,37746]"/>
  <match src="): ) [17697,17698]" dest="): ) [17697,17698]"/>
  <match src="function_definition [33485,33673]" dest="function_definition [33485,33673]"/>
  <match src="yul_identifier [42827,42831]" dest="yul_identifier [42827,42831]"/>
  <match src="identifier: set [15164,15167]" dest="identifier: set [15164,15167]"/>
  <match src="identifier: size [48248,48252]" dest="identifier: size [48863,48867]"/>
  <match src="(: ( [52787,52788]" dest="(: ( [53519,53520]"/>
  <match src="member_expression [47477,47526]" dest="member_expression [47475,47524]"/>
  <match src="uint256: uint256 [50886,50893]" dest="uint256: uint256 [51501,51508]"/>
  <match src="primitive_type [46273,46280]" dest="primitive_type [46271,46278]"/>
  <match src="]: ] [49246,49247]" dest="]: ] [49861,49862]"/>
  <match src="identifier: item [35874,35878]" dest="identifier: item [35874,35878]"/>
  <match src="expression_statement [36098,36124]" dest="expression_statement [36098,36124]"/>
  <match src="(: ( [41149,41150]" dest="(: ( [41149,41150]"/>
  <match src=",: , [41152,41153]" dest=",: , [41152,41153]"/>
  <match src="identifier: result [37874,37880]" dest="identifier: result [37874,37880]"/>
  <match src="uint256: uint256 [40126,40133]" dest="uint256: uint256 [40126,40133]"/>
  <match src="number_literal: 0x00 [28081,28085]" dest="number_literal: 0x00 [28081,28085]"/>
  <match src="primitive_type [24139,24146]" dest="primitive_type [24139,24146]"/>
  <match src="parameter [35120,35134]" dest="parameter [35120,35134]"/>
  <match src="parameter [18882,18901]" dest="parameter [18882,18901]"/>
  <match src="yul_path [35285,35289]" dest="yul_path [35285,35289]"/>
  <match src="): ) [40284,40285]" dest="): ) [40284,40285]"/>
  <match src="identifier: onERC1155Received [45917,45934]" dest="identifier: onERC1155Received [45915,45932]"/>
  <match src=",: , [37223,37224]" dest=",: , [37223,37224]"/>
  <match src="}: } [26292,26293]" dest="}: } [26292,26293]"/>
  <match src="): ) [36768,36769]" dest="): ) [36768,36769]"/>
  <match src="type_name [45999,46006]" dest="type_name [45997,46004]"/>
  <match src="assembly_statement [36862,36921]" dest="assembly_statement [36862,36921]"/>
  <match src="type_cast_expression [52506,52515]" dest="type_cast_expression [53238,53247]"/>
  <match src="identifier: this [51675,51679]" dest="identifier: this [52407,52411]"/>
  <match src="identifier: _values [12278,12285]" dest="identifier: _values [12278,12285]"/>
  <match src="call_expression [35562,35574]" dest="call_expression [35562,35574]"/>
  <match src="expression_statement [39944,39952]" dest="expression_statement [39944,39952]"/>
  <match src="unary_expression [12730,12752]" dest="unary_expression [12730,12752]"/>
  <match src="parameter [43725,43742]" dest="parameter [43725,43742]"/>
  <match src="yul_evm_builtin [42404,42409]" dest="yul_evm_builtin [42404,42409]"/>
  <match src="function: function [31033,31041]" dest="function: function [31033,31041]"/>
  <match src="yul_assignment [36886,36910]" dest="yul_assignment [36886,36910]"/>
  <match src="call_expression [31582,31688]" dest="call_expression [31582,31688]"/>
  <match src="virtual: virtual [31090,31097]" dest="virtual: virtual [31090,31097]"/>
  <match src="identifier: at [18879,18881]" dest="identifier: at [18879,18881]"/>
  <match src="identifier: account [3519,3526]" dest="identifier: account [3519,3526]"/>
  <match src="return: return [30734,30740]" dest="return: return [30734,30740]"/>
  <match src="block_statement [33594,33666]" dest="block_statement [33594,33666]"/>
  <match src="): ) [33853,33854]" dest="): ) [33853,33854]"/>
  <match src="(: ( [45067,45068]" dest="(: ( [45065,45066]"/>
  <match src="identifier: memPtr [35752,35758]" dest="identifier: memPtr [35752,35758]"/>
  <match src="parameter [38172,38191]" dest="parameter [38172,38191]"/>
  <match src="}: } [20429,20430]" dest="}: } [20429,20430]"/>
  <match src="storage: storage [16016,16023]" dest="storage: storage [16016,16023]"/>
  <match src="uint256: uint256 [8584,8591]" dest="uint256: uint256 [8584,8591]"/>
  <match src="yul_evm_builtin [40806,40809]" dest="yul_evm_builtin [40806,40809]"/>
  <match src="type_name [49004,49011]" dest="type_name [49619,49626]"/>
  <match src="byte: byte [36446,36450]" dest="byte: byte [36446,36450]"/>
  <match src="comment: // it'll mint those tokens for this contract and return [51364,51419]" dest="comment: // it'll mint those tokens for this contract and return [51979,52034]"/>
  <match src="type_name [41459,41466]" dest="type_name [41459,41466]"/>
  <match src="identifier: value [14976,14981]" dest="identifier: value [14976,14981]"/>
  <match src="]: ] [48394,48395]" dest="]: ] [49009,49010]"/>
  <match src="type_name [42181,42188]" dest="type_name [42181,42188]"/>
  <match src="[: [ [14434,14435]" dest="[: [ [14434,14435]"/>
  <match src="function_definition [35032,35362]" dest="function_definition [35032,35362]"/>
  <match src="call_argument [50695,50739]" dest="call_argument [51310,51354]"/>
  <match src="(: ( [47526,47527]" dest="(: ( [47524,47525]"/>
  <match src="[: [ [49717,49718]" dest="[: [ [50332,50333]"/>
  <match src="comment: // File: @openzeppelin/contracts/access/AccessControl.sol [26300,26357]" dest="comment: // File: @openzeppelin/contracts/access/AccessControl.sol [26300,26357]"/>
  <match src="): ) [37301,37302]" dest="): ) [37301,37302]"/>
  <match src="uint256: uint256 [52032,52039]" dest="uint256: uint256 [52764,52771]"/>
  <match src="function_definition [2587,2667]" dest="function_definition [2587,2667]"/>
  <match src="primitive_type [50196,50201]" dest="primitive_type [50811,50816]"/>
  <match src="return: return [16401,16407]" dest="return: return [16401,16407]"/>
  <match src="identifier: amountsToBeExited [49617,49634]" dest="identifier: amountsToBeExited [50232,50249]"/>
  <match src="function_definition [17650,17781]" dest="function_definition [17650,17781]"/>
  <match src="state_mutability [26089,26093]" dest="state_mutability [26089,26093]"/>
  <match src="&lt;: &lt; [48436,48437]" dest="&lt;: &lt; [49051,49052]"/>
  <match src="expression_statement [48434,48443]" dest="expression_statement [49049,49058]"/>
  <match src="): ) [37043,37044]" dest="): ) [37043,37044]"/>
  <match src="array_access [50386,50399]" dest="array_access [51001,51014]"/>
  <match src="type_name [48386,48393]" dest="type_name [49001,49008]"/>
  <match src="primitive_type [37537,37544]" dest="primitive_type [37537,37544]"/>
  <match src="parameter [46244,46262]" dest="parameter [46242,46260]"/>
  <match src="identifier: memPtr [38921,38927]" dest="identifier: memPtr [38921,38927]"/>
  <match src="primitive_type [15601,15608]" dest="primitive_type [15601,15608]"/>
  <match src="call_expression [24466,24484]" dest="call_expression [24466,24484]"/>
  <match src="}: } [13007,13008]" dest="}: } [13007,13008]"/>
  <match src="}: } [869,870]" dest="}: } [869,870]"/>
  <match src="(: ( [47249,47250]" dest="(: ( [47247,47248]"/>
  <match src="): ) [38729,38730]" dest="): ) [38729,38730]"/>
  <match src="uint256: uint256 [17287,17294]" dest="uint256: uint256 [17287,17294]"/>
  <match src="): ) [21425,21426]" dest="): ) [21425,21426]"/>
  <match src="uint256: uint256 [47169,47176]" dest="uint256: uint256 [47167,47174]"/>
  <match src="member_expression [24829,24846]" dest="member_expression [24829,24846]"/>
  <match src="identifier: STRING_LONG_START [41857,41874]" dest="identifier: STRING_LONG_START [41857,41874]"/>
  <match src="function_body [48095,48531]" dest="function_body [48710,49146]"/>
  <match src="+: + [40946,40947]" dest="+: + [40946,40947]"/>
  <match src="bytes4: bytes4 [9284,9290]" dest="bytes4: bytes4 [9284,9290]"/>
  <match src=".: . [51182,51183]" dest=".: . [51797,51798]"/>
  <match src="identifier: dataLen [40687,40694]" dest="identifier: dataLen [40687,40694]"/>
  <match src="constant: constant [34685,34693]" dest="constant: constant [34685,34693]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [17789,17951]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [17789,17951]"/>
  <match src=",: , [33639,33640]" dest=",: , [33639,33640]"/>
  <match src="expression_statement [35770,35845]" dest="expression_statement [35770,35845]"/>
  <match src="identifier: set [12672,12675]" dest="identifier: set [12672,12675]"/>
  <match src="identifier: _msgData [26069,26077]" dest="identifier: _msgData [26069,26077]"/>
  <match src="number_literal: 0 [39607,39608]" dest="number_literal: 0 [39607,39608]"/>
  <match src="[: [ [52050,52051]" dest="[: [ [52782,52783]"/>
  <match src="state_mutability [15587,15591]" dest="state_mutability [15587,15591]"/>
  <match src="type_name [35657,35664]" dest="type_name [35657,35664]"/>
  <match src="assignment_expression [40357,40397]" dest="assignment_expression [40357,40397]"/>
  <match src="number_literal: 1 [41750,41751]" dest="number_literal: 1 [41750,41751]"/>
  <match src="identifier: _roles [29384,29390]" dest="identifier: _roles [29384,29390]"/>
  <match src="binary_expression [20379,20402]" dest="binary_expression [20379,20402]"/>
  <match src="user_defined_type [35520,35527]" dest="user_defined_type [35520,35527]"/>
  <match src="type_name [37334,37341]" dest="type_name [37334,37341]"/>
  <match src=".: . [27920,27921]" dest=".: . [27920,27921]"/>
  <match src="primitive_type [1703,1710]" dest="primitive_type [1703,1710]"/>
  <match src="primitive_type [4186,4193]" dest="primitive_type [4186,4193]"/>
  <match src=",: , [38043,38044]" dest=",: , [38043,38044]"/>
  <match src="return: return [15705,15711]" dest="return: return [15705,15711]"/>
  <match src="unary_expression [37096,37109]" dest="unary_expression [37096,37109]"/>
  <match src="add: add [25132,25135]" dest="add: add [25132,25135]"/>
  <match src="user_defined_type [16327,16337]" dest="user_defined_type [16327,16337]"/>
  <match src="yul_variable_declaration [25063,25103]" dest="yul_variable_declaration [25063,25103]"/>
  <match src="comment: // Move the last value to the index where the value to delete is [14238,14302]" dest="comment: // Move the last value to the index where the value to delete is [14238,14302]"/>
  <match src="primitive_type [29322,29329]" dest="primitive_type [29322,29329]"/>
  <match src="(: ( [50885,50886]" dest="(: ( [51500,51501]"/>
  <match src=",: , [45970,45971]" dest=",: , [45968,45969]"/>
  <match src="identifier: value [21646,21651]" dest="identifier: value [21646,21651]"/>
  <match src="modifier: modifier [34211,34219]" dest="modifier: modifier [34211,34219]"/>
  <match src="]: ] [50398,50399]" dest="]: ] [51013,51014]"/>
  <match src="call_argument [23084,23090]" dest="call_argument [23084,23090]"/>
  <match src="identifier: _inner [16892,16898]" dest="identifier: _inner [16892,16898]"/>
  <match src="identifier: size [48438,48442]" dest="identifier: size [49053,49057]"/>
  <match src="): ) [41040,41041]" dest="): ) [41040,41041]"/>
  <match src="update_expression [49574,49577]" dest="update_expression [50189,50192]"/>
  <match src="call_argument [35334,35345]" dest="call_argument [35334,35345]"/>
  <match src="variable_declaration_statement [38941,38973]" dest="variable_declaration_statement [38941,38973]"/>
  <match src="identifier: destPtr [39097,39104]" dest="identifier: destPtr [39097,39104]"/>
  <match src="(: ( [50319,50320]" dest="(: ( [50934,50935]"/>
  <match src="solidity_pragma_token [979,994]" dest="solidity_pragma_token [979,994]"/>
  <match src="address: address [43725,43732]" dest="address: address [43725,43732]"/>
  <match src="): ) [33137,33138]" dest="): ) [33137,33138]"/>
  <match src="primitive_type [50606,50613]" dest="primitive_type [51221,51228]"/>
  <match src="{: { [19217,19218]" dest="{: { [19217,19218]"/>
  <match src="primitive_type [27864,27871]" dest="primitive_type [27864,27871]"/>
  <match src="identifier: set [13265,13268]" dest="identifier: set [13265,13268]"/>
  <match src="identifier: hasRole [31117,31124]" dest="identifier: hasRole [31117,31124]"/>
  <match src="yul_path [42398,42402]" dest="yul_path [42398,42402]"/>
  <match src="(: ( [46981,46982]" dest="(: ( [46979,46980]"/>
  <match src="): ) [50988,50989]" dest="): ) [51603,51604]"/>
  <match src="(: ( [49003,49004]" dest="(: ( [49618,49619]"/>
  <match src="): ) [18998,18999]" dest="): ) [18998,18999]"/>
  <match src="function_definition [16790,16907]" dest="function_definition [16790,16907]"/>
  <match src="primitive_type [9792,9796]" dest="primitive_type [9792,9796]"/>
  <match src="type_name [18882,18889]" dest="type_name [18882,18889]"/>
  <match src="external: external [3323,3331]" dest="external: external [3323,3331]"/>
  <match src=",: , [36954,36955]" dest=",: , [36954,36955]"/>
  <match src="=: = [38761,38762]" dest="=: = [38761,38762]"/>
  <match src="augmented_assignment_expression [42446,42462]" dest="augmented_assignment_expression [42446,42462]"/>
  <match src="indexed: indexed [45472,45479]" dest="indexed: indexed [45470,45477]"/>
  <match src="comment: /**      * @dev Returns the number of accounts that have `role`. Can be used      * together with {getRoleMember} to enumerate all bearers of a role.      */ [29438,29598]" dest="comment: /**      * @dev Returns the number of accounts that have `role`. Can be used      * together with {getRoleMember} to enumerate all bearers of a role.      */ [29438,29598]"/>
  <match src="visibility [8656,8664]" dest="visibility [8656,8664]"/>
  <match src="assembly_statement [20316,20361]" dest="assembly_statement [20316,20361]"/>
  <match src="[: [ [4748,4749]" dest="[: [ [4748,4749]"/>
  <match src="}: } [42865,42866]" dest="}: } [42865,42866]"/>
  <match src="internal: internal [18234,18242]" dest="internal: internal [18234,18242]"/>
  <match src="variable_declaration [50488,50506]" dest="variable_declaration [51103,51121]"/>
  <match src="]: ] [6143,6144]" dest="]: ] [6143,6144]"/>
  <match src="yul_path [41029,41034]" dest="yul_path [41029,41034]"/>
  <match src="yul_identifier [41073,41079]" dest="yul_identifier [41073,41079]"/>
  <match src="expression_statement [31227,31253]" dest="expression_statement [31227,31253]"/>
  <match src="identifier: Address [27852,27859]" dest="identifier: Address [27852,27859]"/>
  <match src="interface_declaration [6373,8693]" dest="interface_declaration [6373,8693]"/>
  <match src="): ) [39372,39373]" dest="): ) [39372,39373]"/>
  <match src="user_defined_type [27776,27783]" dest="user_defined_type [27776,27783]"/>
  <match src="call_argument [52220,52223]" dest="call_argument [52952,52955]"/>
  <match src="solidity_version:  0.6.6 [4903,4909]" dest="solidity_version:  0.6.6 [4903,4909]"/>
  <match src=",: , [50157,50158]" dest=",: , [50772,50773]"/>
  <match src="): ) [42414,42415]" dest="): ) [42414,42415]"/>
  <match src="identifier: _roles [29694,29700]" dest="identifier: _roles [29694,29700]"/>
  <match src="identifier: item [35641,35645]" dest="identifier: item [35641,35645]"/>
  <match src="return_type_definition [17708,17722]" dest="return_type_definition [17708,17722]"/>
  <match src="add: add [41069,41072]" dest="add: add [41069,41072]"/>
  <match src="(: ( [33583,33584]" dest="(: ( [33583,33584]"/>
  <match src="assembly_statement [25031,25188]" dest="assembly_statement [25031,25188]"/>
  <match src="solidity: solidity [979,987]" dest="solidity: solidity [979,987]"/>
  <match src="struct_expression [21630,21661]" dest="struct_expression [21630,21661]"/>
  <match src="comment: // and use 0 as a sentinel value [12884,12916]" dest="comment: // and use 0 as a sentinel value [12884,12916]"/>
  <match src="identifier: safeBatchTransferFrom [4693,4714]" dest="identifier: safeBatchTransferFrom [4693,4714]"/>
  <match src="(: ( [51192,51193]" dest="(: ( [51807,51808]"/>
  <match src=",: , [47361,47362]" dest=",: , [47359,47360]"/>
  <match src="call_expression [31701,31727]" dest="call_expression [31701,31727]"/>
  <match src="using_directive [27846,27872]" dest="using_directive [27846,27872]"/>
  <match src="call_argument [17746,17756]" dest="call_argument [17746,17756]"/>
  <match src="bytes32: bytes32 [17758,17765]" dest="bytes32: bytes32 [17758,17765]"/>
  <match src="view: view [29346,29350]" dest="view: view [29346,29350]"/>
  <match src="identifier: UintSet [18198,18205]" dest="identifier: UintSet [18198,18205]"/>
  <match src="yul_path [36886,36889]" dest="yul_path [36886,36889]"/>
  <match src="string_literal [50695,50739]" dest="string_literal [51310,51354]"/>
  <match src="binary_expression [41635,41731]" dest="binary_expression [41635,41731]"/>
  <match src="primitive_type [22598,22603]" dest="primitive_type [22598,22603]"/>
  <match src="type_name [15547,15550]" dest="type_name [15547,15550]"/>
  <match src="private: private [24416,24423]" dest="private: private [24416,24423]"/>
  <match src="primitive_type [22948,22955]" dest="primitive_type [22948,22955]"/>
  <match src="&gt;: &gt; [24847,24848]" dest="&gt;: &gt; [24847,24848]"/>
  <match src="identifier: memPtr [37890,37896]" dest="identifier: memPtr [37890,37896]"/>
  <match src="(: ( [36817,36818]" dest="(: ( [36817,36818]"/>
  <match src="internal: internal [35479,35487]" dest="internal: internal [35479,35487]"/>
  <match src=",: , [18301,18302]" dest=",: , [18301,18302]"/>
  <match src="using_directive [44904,44942]" dest="using_directive [44902,44940]"/>
  <match src="comment: /**      * @dev Emitted when `account` is granted `role`.      *      * `sender` is the account that originated the contract call, an admin role      * bearer except when using {_setupRole}.      */ [28517,28720]" dest="comment: /**      * @dev Emitted when `account` is granted `role`.      *      * `sender` is the account that originated the contract call, an admin role      * bearer except when using {_setupRole}.      */ [28517,28720]"/>
  <match src=",: , [41144,41145]" dest=",: , [41144,41145]"/>
  <match src="for: for [35952,35955]" dest="for: for [35952,35955]"/>
  <match src="contract_declaration [44739,52859]" dest="contract_declaration [44737,53591]"/>
  <match src="external: external [838,846]" dest="external: external [838,846]"/>
  <match src="function_body [33544,33673]" dest="function_body [33544,33673]"/>
  <match src=",: , [2621,2622]" dest=",: , [2621,2622]"/>
  <match src="view: view [16612,16616]" dest="view: view [16612,16616]"/>
  <match src=":: : [24651,24652]" dest=":: : [24651,24652]"/>
  <match src="call_argument [17372,17382]" dest="call_argument [17372,17382]"/>
  <match src="new: new [36808,36811]" dest="new: new [36808,36811]"/>
  <match src=".: . [30753,30754]" dest=".: . [30753,30754]"/>
  <match src="address: address [30403,30410]" dest="address: address [30403,30410]"/>
  <match src="): ) [32351,32352]" dest="): ) [32351,32352]"/>
  <match src="bool: bool [36335,36339]" dest="bool: bool [36335,36339]"/>
  <match src="type_name [19871,19875]" dest="type_name [19871,19875]"/>
  <match src="type_name [47169,47176]" dest="type_name [47167,47174]"/>
  <match src="^:  ^ [112,114]" dest="^:  ^ [112,114]"/>
  <match src="pragma_directive [26396,26419]" dest="pragma_directive [26396,26419]"/>
  <match src="type_name [1946,1953]" dest="type_name [1946,1953]"/>
  <match src="internal: internal [25968,25976]" dest="internal: internal [25968,25976]"/>
  <match src="type_name [28479,28486]" dest="type_name [28479,28486]"/>
  <match src="identifier: RoleData [27887,27895]" dest="identifier: RoleData [27887,27895]"/>
  <match src="event_paramater [28444,28477]" dest="event_paramater [28444,28477]"/>
  <match src="function: function [19811,19819]" dest="function: function [19811,19819]"/>
  <match src="type_name [30403,30410]" dest="type_name [30403,30410]"/>
  <match src="add: add [35281,35284]" dest="add: add [35281,35284]"/>
  <match src="identifier: Set [15547,15550]" dest="identifier: Set [15547,15550]"/>
  <match src="return: return [17734,17740]" dest="return: return [17734,17740]"/>
  <match src="address: address [1635,1642]" dest="address: address [1635,1642]"/>
  <match src="indexed: indexed [1393,1400]" dest="indexed: indexed [1393,1400]"/>
  <match src="number_literal: 1 [41877,41878]" dest="number_literal: 1 [41877,41878]"/>
  <match src="-: - [38964,38965]" dest="-: - [38964,38965]"/>
  <match src="identifier: ERC165 [10688,10694]" dest="identifier: ERC165 [10688,10694]"/>
  <match src="address: address [50606,50613]" dest="address: address [51221,51228]"/>
  <match src="(: ( [18026,18027]" dest="(: ( [18026,18027]"/>
  <match src="bytes32: bytes32 [31525,31532]" dest="bytes32: bytes32 [31525,31532]"/>
  <match src="public: public [9762,9768]" dest="public: public [9762,9768]"/>
  <match src="state_mutability [38202,38206]" dest="state_mutability [38202,38206]"/>
  <match src="identifier: destPtr [39175,39182]" dest="identifier: destPtr [39175,39182]"/>
  <match src="string [44571,44587]" dest="string [44571,44587]"/>
  <match src="): ) [33792,33793]" dest="): ) [33792,33793]"/>
  <match src="identifier: set [17372,17375]" dest="identifier: set [17372,17375]"/>
  <match src="primitive_type [42599,42606]" dest="primitive_type [42599,42606]"/>
  <match src="event_definition [1338,1454]" dest="event_definition [1338,1454]"/>
  <match src="storage: storage [17981,17988]" dest="storage: storage [17981,17988]"/>
  <match src="type_name [36840,36847]" dest="type_name [36840,36847]"/>
  <match src="): ) [37985,37986]" dest="): ) [37985,37986]"/>
  <match src=",: , [41257,41258]" dest=",: , [41257,41258]"/>
  <match src="type_name [21411,21418]" dest="type_name [21411,21418]"/>
  <match src="): ) [52486,52487]" dest="): ) [53218,53219]"/>
  <match src="bytes: bytes [38998,39003]" dest="bytes: bytes [38998,39003]"/>
  <match src="): ) [40741,40742]" dest="): ) [40741,40742]"/>
  <match src="(: ( [29307,29308]" dest="(: ( [29307,29308]"/>
  <match src="indexed: indexed [1669,1676]" dest="indexed: indexed [1669,1676]"/>
  <match src="type_name [34679,34684]" dest="type_name [34679,34684]"/>
  <match src="identifier: renounceRole [32251,32263]" dest="identifier: renounceRole [32251,32263]"/>
  <match src="user_defined_type [44924,44941]" dest="user_defined_type [44922,44939]"/>
  <match src="parameter [50168,50185]" dest="parameter [50783,50800]"/>
  <match src="{: { [17443,17444]" dest="{: { [17443,17444]"/>
  <match src="(: ( [36755,36756]" dest="(: ( [36755,36756]"/>
  <match src="primitive_type [43663,43670]" dest="primitive_type [43663,43670]"/>
  <match src="parameter [46863,46886]" dest="parameter [46861,46884]"/>
  <match src="identifier: dest [42772,42776]" dest="identifier: dest [42772,42776]"/>
  <match src="parameter [24010,24024]" dest="parameter [24010,24024]"/>
  <match src="returns: returns [18463,18470]" dest="returns: returns [18463,18470]"/>
  <match src="event_definition [29110,29199]" dest="event_definition [29110,29199]"/>
  <match src="function_body [33102,33146]" dest="function_body [33102,33146]"/>
  <match src="block_statement [25209,25264]" dest="block_statement [25209,25264]"/>
  <match src="function_definition [7254,7456]" dest="function_definition [7254,7456]"/>
  <match src="identifier: memPtr [35865,35871]" dest="identifier: memPtr [35865,35871]"/>
  <match src="): ) [21664,21665]" dest="): ) [21664,21665]"/>
  <match src="parameter [32278,32293]" dest="parameter [32278,32293]"/>
  <match src="type_alias [44910,44919]" dest="type_alias [44908,44917]"/>
  <match src="user_defined_type [18198,18205]" dest="user_defined_type [18198,18205]"/>
  <match src="identifier: memPtr [39642,39648]" dest="identifier: memPtr [39642,39648]"/>
  <match src="]: ] [49719,49720]" dest="]: ] [50334,50335]"/>
  <match src="boolean_literal [12992,12996]" dest="boolean_literal [12992,12996]"/>
  <match src="}: } [33665,33666]" dest="}: } [33665,33666]"/>
  <match src="call_argument [48161,48204]" dest="call_argument [48776,48819]"/>
  <match src=",: , [37623,37624]" dest=",: , [37623,37624]"/>
  <match src=",: , [50656,50657]" dest=",: , [51271,51272]"/>
  <match src="member_expression [34136,34152]" dest="member_expression [34136,34152]"/>
  <match src="view: view [15123,15127]" dest="view: view [15123,15127]"/>
  <match src="pragma: pragma [26396,26402]" dest="pragma: pragma [26396,26402]"/>
  <match src="call_argument [17758,17772]" dest="call_argument [17758,17772]"/>
  <match src="type_cast_expression [17758,17772]" dest="type_cast_expression [17758,17772]"/>
  <match src="identifier: require [24131,24138]" dest="identifier: require [24131,24138]"/>
  <match src=",: , [33839,33840]" dest=",: , [33839,33840]"/>
  <match src="comment: // zero out src [42717,42732]" dest="comment: // zero out src [42717,42732]"/>
  <match src="!=: != [20388,20390]" dest="!=: != [20388,20390]"/>
  <match src="yul_evm_builtin [35281,35284]" dest="yul_evm_builtin [35281,35284]"/>
  <match src="type_name [31052,31059]" dest="type_name [31052,31059]"/>
  <match src="primitive_type [40126,40133]" dest="primitive_type [40126,40133]"/>
  <match src="comment: /**  * @dev Collection of functions related to the address type  */ [19130,19199]" dest="comment: /**  * @dev Collection of functions related to the address type  */ [19130,19199]"/>
  <match src="string [15657,15693]" dest="string [15657,15693]"/>
  <match src="returns: returns [48995,49002]" dest="returns: returns [49610,49617]"/>
  <match src="uint256: uint256 [47134,47141]" dest="uint256: uint256 [47132,47139]"/>
  <match src="call_argument [45764,45782]" dest="call_argument [45762,45780]"/>
  <match src="visibility [21427,21435]" dest="visibility [21427,21435]"/>
  <match src="variable_declaration_statement [38742,38788]" dest="variable_declaration_statement [38742,38788]"/>
  <match src=",: , [50896,50897]" dest=",: , [51511,51512]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/Address.sol [19014,19064]" dest="comment: // File: @openzeppelin/contracts/utils/Address.sol [19014,19064]"/>
  <match src="(: ( [50406,50407]" dest="(: ( [51021,51022]"/>
  <match src="identifier: hasRole [31590,31597]" dest="identifier: hasRole [31590,31597]"/>
  <match src="type_name [2928,2935]" dest="type_name [2928,2935]"/>
  <match src="): ) [52836,52837]" dest="): ) [53568,53569]"/>
  <match src="user_defined_type [52085,52101]" dest="user_defined_type [52817,52833]"/>
  <match src="call_expression [35683,35703]" dest="call_expression [35683,35703]"/>
  <match src="call_argument [30454,30459]" dest="call_argument [30454,30459]"/>
  <match src="primitive_type [47994,48001]" dest="primitive_type [48609,48616]"/>
  <match src="parameter [26111,26123]" dest="parameter [26111,26123]"/>
  <match src="yul_function_call [40726,40742]" dest="yul_function_call [40726,40742]"/>
  <match src="primitive_type [7448,7454]" dest="primitive_type [7448,7454]"/>
  <match src="=: = [50914,50915]" dest="=: = [51529,51530]"/>
  <match src="): ) [42715,42716]" dest="): ) [42715,42716]"/>
  <match src="identifier: ERC1155Receiver [10785,10800]" dest="identifier: ERC1155Receiver [10785,10800]"/>
  <match src="member_expression [36956,36964]" dest="member_expression [36956,36964]"/>
  <match src="(: ( [52596,52597]" dest="(: ( [53328,53329]"/>
  <match src="assembly: assembly [35247,35255]" dest="assembly: assembly [35247,35255]"/>
  <match src="bytes: bytes [46302,46307]" dest="bytes: bytes [46300,46305]"/>
  <match src=",: , [22559,22560]" dest=",: , [22559,22560]"/>
  <match src="assembly: assembly [38557,38565]" dest="assembly: assembly [38557,38565]"/>
  <match src="): ) [34297,34298]" dest="): ) [34297,34298]"/>
  <match src="return: return [48507,48513]" dest="return: return [49122,49128]"/>
  <match src="type_name [12709,12713]" dest="type_name [12709,12713]"/>
  <match src="identifier: index [17384,17389]" dest="identifier: index [17384,17389]"/>
  <match src="call_argument [18071,18085]" dest="call_argument [18071,18085]"/>
  <match src="type_name [15601,15608]" dest="type_name [15601,15608]"/>
  <match src="type_cast_expression [16103,16126]" dest="type_cast_expression [16103,16126]"/>
  <match src="type_name [4715,4722]" dest="type_name [4715,4722]"/>
  <match src="member_expression [52291,52311]" dest="member_expression [53023,53043]"/>
  <match src="call_expression [17741,17773]" dest="call_expression [17741,17773]"/>
  <match src="type_name [37802,37809]" dest="type_name [37802,37809]"/>
  <match src="identifier: result [38581,38587]" dest="identifier: result [38581,38587]"/>
  <match src="user_defined_type [12660,12663]" dest="user_defined_type [12660,12663]"/>
  <match src=":=: := [40577,40579]" dest=":=: := [40577,40579]"/>
  <match src="function: function [48852,48860]" dest="function: function [49467,49475]"/>
  <match src="): ) [34334,34335]" dest="): ) [34334,34335]"/>
  <match src="=: = [40365,40366]" dest="=: = [40365,40366]"/>
  <match src="visibility [19848,19856]" dest="visibility [19848,19856]"/>
  <match src="identifier: at [30451,30453]" dest="identifier: at [30451,30453]"/>
  <match src="comment: /**  * @dev Contract module that allows children to implement role-based access  * control mechanisms.  *  * Roles are referred to by their `bytes32` identifier. These should be exposed  * in the external API and be unique. The best way to achieve this is by  * using `public constant` hash digests:  *  * ```  * bytes32 public constant MY_ROLE = keccak256(&quot;MY_ROLE&quot;);  * ```  *  * Roles can be used to represent a set of permissions. To restrict access to a  * function call, use {hasRole}:  *  * ```  * function foo() public {  *     require(hasRole(MY_ROLE, msg.sender));  *     ...  * }  * ```  *  * Roles can be granted and revoked dynamically via the {grantRole} and  * {revokeRole} functions. Each role has an associated admin role, and only  * accounts that have a role's admin role can call {grantRole} and {revokeRole}.  *  * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means  * that only accounts with this role will be able to grant or revoke other  * roles. More complex role relationships can be created by using  * {_setRoleAdmin}.  *  * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to  * grant and revoke this role. Extra precautions should be taken to secure  * accounts that have been granted it.  */ [26429,27739]" dest="comment: /**  * @dev Contract module that allows children to implement role-based access  * control mechanisms.  *  * Roles are referred to by their `bytes32` identifier. These should be exposed  * in the external API and be unique. The best way to achieve this is by  * using `public constant` hash digests:  *  * ```  * bytes32 public constant MY_ROLE = keccak256(&quot;MY_ROLE&quot;);  * ```  *  * Roles can be used to represent a set of permissions. To restrict access to a  * function call, use {hasRole}:  *  * ```  * function foo() public {  *     require(hasRole(MY_ROLE, msg.sender));  *     ...  * }  * ```  *  * Roles can be granted and revoked dynamically via the {grantRole} and  * {revokeRole} functions. Each role has an associated admin role, and only  * accounts that have a role's admin role can call {grantRole} and {revokeRole}.  *  * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means  * that only accounts with this role will be able to grant or revoke other  * roles. More complex role relationships can be created by using  * {_setRoleAdmin}.  *  * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to  * grant and revoke this role. Extra precautions should be taken to secure  * accounts that have been granted it.  */ [26429,27739]"/>
  <match src="): ) [47465,47466]" dest="): ) [47463,47464]"/>
  <match src="]: ] [30752,30753]" dest="]: ] [30752,30753]"/>
  <match src="solidity_version_comparison_operator [8808,8810]" dest="solidity_version_comparison_operator [8808,8810]"/>
  <match src=",: , [1659,1660]" dest=",: , [1659,1660]"/>
  <match src="identifier: values [8603,8609]" dest="identifier: values [8603,8609]"/>
  <match src=":: : [21651,21652]" dest=":: : [21651,21652]"/>
  <match src="identifier: IERC165 [9019,9026]" dest="identifier: IERC165 [9019,9026]"/>
  <match src="type_cast_expression [51584,51593]" dest="type_cast_expression [52316,52325]"/>
  <match src="{: { [46996,46997]" dest="{: { [46994,46995]"/>
  <match src="variable_declaration [40152,40165]" dest="variable_declaration [40152,40165]"/>
  <match src="bytes: bytes [50196,50201]" dest="bytes: bytes [50811,50816]"/>
  <match src="[: [ [48946,48947]" dest="[: [ [49561,49562]"/>
  <match src="parameter [2899,2926]" dest="parameter [2899,2926]"/>
  <match src="): ) [3573,3574]" dest="): ) [3573,3574]"/>
  <match src="user_defined_type [17454,17457]" dest="user_defined_type [17454,17457]"/>
  <match src="returns: returns [46057,46064]" dest="returns: returns [46055,46062]"/>
  <match src="(: ( [34279,34280]" dest="(: ( [34279,34280]"/>
  <match src="primitive_type [23544,23549]" dest="primitive_type [23544,23549]"/>
  <match src=",: , [38828,38829]" dest=",: , [38828,38829]"/>
  <match src="type_cast_expression [16111,16125]" dest="type_cast_expression [16111,16125]"/>
  <match src="identifier: logRLPList [50386,50396]" dest="identifier: logRLPList [51001,51011]"/>
  <match src="uint256: uint256 [38236,38243]" dest="uint256: uint256 [38236,38243]"/>
  <match src="public: public [30382,30388]" dest="public: public [30382,30388]"/>
  <match src="yul_identifier [38020,38026]" dest="yul_identifier [38020,38026]"/>
  <match src="yul_function_call [40717,40743]" dest="yul_function_call [40717,40743]"/>
  <match src="call_argument [16416,16426]" dest="call_argument [16416,16426]"/>
  <match src="member_expression [38820,38828]" dest="member_expression [38820,38828]"/>
  <match src="identifier: codehash [20141,20149]" dest="identifier: codehash [20141,20149]"/>
  <match src="type_name [28744,28751]" dest="type_name [28744,28751]"/>
  <match src="identifier: _inner [15800,15806]" dest="identifier: _inner [15800,15806]"/>
  <match src="): ) [52067,52068]" dest="): ) [52799,52800]"/>
  <match src="&quot;: &quot; [52512,52513]" dest="&quot;: &quot; [53244,53245]"/>
  <match src="else: else [14729,14733]" dest="else: else [14729,14733]"/>
  <match src="): ) [45230,45231]" dest="): ) [45228,45229]"/>
  <match src="): ) [9298,9299]" dest="): ) [9298,9299]"/>
  <match src="identifier: grantRole [31042,31051]" dest="identifier: grantRole [31042,31051]"/>
  <match src="(: ( [24683,24684]" dest="(: ( [24683,24684]"/>
  <match src="identifier: addresses [48514,48523]" dest="identifier: addresses [49129,49138]"/>
  <match src=",: , [15562,15563]" dest=",: , [15562,15563]"/>
  <match src="number_literal: 0 [10801,10802]" dest="number_literal: 0 [10801,10802]"/>
  <match src="parameter [37334,37353]" dest="parameter [37334,37353]"/>
  <match src="constructor_definition [45599,45622]" dest="constructor_definition [45597,45620]"/>
  <match src="): ) [13283,13284]" dest="): ) [13283,13284]"/>
  <match src="bytes: bytes [46925,46930]" dest="bytes: bytes [46923,46928]"/>
  <match src="number_literal: 1 [38545,38546]" dest="number_literal: 1 [38545,38546]"/>
  <match src="variable_declaration [37777,37791]" dest="variable_declaration [37777,37791]"/>
  <match src="): ) [42854,42855]" dest="): ) [42854,42855]"/>
  <match src="number_literal: 0 [46393,46394]" dest="number_literal: 0 [46391,46392]"/>
  <match src="yul_evm_builtin [36454,36459]" dest="yul_evm_builtin [36454,36459]"/>
  <match src="expression_statement [45753,45792]" dest="expression_statement [45751,45790]"/>
  <match src="parameter [2658,2665]" dest="parameter [2658,2665]"/>
  <match src="identifier: memPtr [38274,38280]" dest="identifier: memPtr [38274,38280]"/>
  <match src="function_definition [48852,49791]" dest="function_definition [49467,50406]"/>
  <match src="calldata: calldata [4799,4807]" dest="calldata: calldata [4799,4807]"/>
  <match src="identifier: _grantRole [33113,33123]" dest="identifier: _grantRole [33113,33123]"/>
  <match src="call_argument [22641,22647]" dest="call_argument [22641,22647]"/>
  <match src="returns: returns [9783,9790]" dest="returns: returns [9783,9790]"/>
  <match src="binary_expression [38955,38972]" dest="binary_expression [38955,38972]"/>
  <match src="identifier: TRANSFER_BATCH_EVENT_SIG [51874,51898]" dest="identifier: TRANSFER_BATCH_EVENT_SIG [52606,52630]"/>
  <match src="type_name [31066,31073]" dest="type_name [31066,31073]"/>
  <match src="assembly_statement [40176,40242]" dest="assembly_statement [40176,40242]"/>
  <match src="call_expression [37201,37261]" dest="call_expression [37201,37261]"/>
  <match src="identifier: LockedBatchMintableERC1155 [47311,47337]" dest="identifier: LockedBatchMintableERC1155 [47309,47335]"/>
  <match src="string_literal [37491,37523]" dest="string_literal [37491,37523]"/>
  <match src="parameter [22983,23009]" dest="parameter [22983,23009]"/>
  <match src="}: } [33145,33146]" dest="}: } [33145,33146]"/>
  <match src="assembly_statement [35247,35307]" dest="assembly_statement [35247,35307]"/>
  <match src="return_statement [16401,16453]" dest="return_statement [16401,16453]"/>
  <match src="for_statement [35952,36135]" dest="for_statement [35952,36135]"/>
  <match src="uint256: uint256 [41401,41408]" dest="uint256: uint256 [41401,41408]"/>
  <match src="type_name [46066,46072]" dest="type_name [46064,46070]"/>
  <match src="expression_statement [12769,12793]" dest="expression_statement [12769,12793]"/>
  <match src="uint256: uint256 [39619,39626]" dest="uint256: uint256 [39619,39626]"/>
  <match src="): ) [4812,4813]" dest="): ) [4812,4813]"/>
  <match src="identifier: _revertMsg [34314,34324]" dest="identifier: _revertMsg [34314,34324]"/>
  <match src="external: external [2635,2643]" dest="external: external [2635,2643]"/>
  <match src="identifier: _contains [12731,12740]" dest="identifier: _contains [12731,12740]"/>
  <match src="primitive_type [17325,17332]" dest="primitive_type [17325,17332]"/>
  <match src="identifier: call [24640,24644]" dest="identifier: call [24640,24644]"/>
  <match src="function_definition [39335,39995]" dest="function_definition [39335,39995]"/>
  <match src="state_mutability [39382,39386]" dest="state_mutability [39382,39386]"/>
  <match src="external: external [45666,45674]" dest="external: external [45664,45672]"/>
  <match src="string_literal [35802,35843]" dest="string_literal [35802,35843]"/>
  <match src="): ) [31687,31688]" dest="): ) [31687,31688]"/>
  <match src="yul_identifier [37978,37981]" dest="yul_identifier [37978,37981]"/>
  <match src="&quot;: &quot; [35802,35803]" dest="&quot;: &quot; [35802,35803]"/>
  <match src="{: { [29676,29677]" dest="{: { [29676,29677]"/>
  <match src="solidity: solidity [10584,10592]" dest="solidity: solidity [10584,10592]"/>
  <match src="function_body [34105,34203]" dest="function_body [34105,34203]"/>
  <match src="identifier: set [14574,14577]" dest="identifier: set [14574,14577]"/>
  <match src="(: ( [52366,52367]" dest="(: ( [53098,53099]"/>
  <match src="identifier: value [7370,7375]" dest="identifier: value [7370,7375]"/>
  <match src="member_expression [50775,50800]" dest="member_expression [51390,51415]"/>
  <match src="address: address [33068,33075]" dest="address: address [33068,33075]"/>
  <match src="function: function [38656,38664]" dest="function: function [38656,38664]"/>
  <match src="parameter [23528,23542]" dest="parameter [23528,23542]"/>
  <match src="bytes32: bytes32 [45095,45102]" dest="bytes32: bytes32 [45093,45100]"/>
  <match src="(: ( [38419,38420]" dest="(: ( [38419,38420]"/>
  <match src="call_expression [16408,16452]" dest="call_expression [16408,16452]"/>
  <match src="string_literal [23671,23714]" dest="string_literal [23671,23714]"/>
  <match src="member_expression [14422,14434]" dest="member_expression [14422,14434]"/>
  <match src="(: ( [39665,39666]" dest="(: ( [39665,39666]"/>
  <match src="identifier: value [18227,18232]" dest="identifier: value [18227,18232]"/>
  <match src="primitive_type [3290,3297]" dest="primitive_type [3290,3297]"/>
  <match src="call_argument [51584,51593]" dest="call_argument [52316,52325]"/>
  <match src="identifier: amounts [47186,47193]" dest="identifier: amounts [47184,47191]"/>
  <match src="(: ( [14589,14590]" dest="(: ( [14589,14590]"/>
  <match src="type_name [34772,34777]" dest="type_name [34772,34777]"/>
  <match src=",: , [23542,23543]" dest=",: , [23542,23543]"/>
  <match src="type_cast_expression [16428,16451]" dest="type_cast_expression [16428,16451]"/>
  <match src="}: } [52759,52760]" dest="}: } [53491,53492]"/>
  <match src="visibility [838,846]" dest="visibility [838,846]"/>
  <match src="yul_function_call [41233,41262]" dest="yul_function_call [41233,41262]"/>
  <match src="identifier: require [31109,31116]" dest="identifier: require [31109,31116]"/>
  <match src="): ) [48979,48980]" dest="): ) [49594,49595]"/>
  <match src="returns: returns [15128,15135]" dest="returns: returns [15128,15135]"/>
  <match src="parameter [15137,15144]" dest="parameter [15137,15144]"/>
  <match src="pragma_directive [44436,44458]" dest="pragma_directive [44436,44458]"/>
  <match src="=: = [40919,40920]" dest="=: = [40919,40920]"/>
  <match src="indexed: indexed [28774,28781]" dest="indexed: indexed [28774,28781]"/>
  <match src="identifier: value [2367,2372]" dest="identifier: value [2367,2372]"/>
  <match src="primitive_type [33716,33723]" dest="primitive_type [33716,33723]"/>
  <match src="type_name [13892,13899]" dest="type_name [13892,13899]"/>
  <match src=".: . [46395,46396]" dest=".: . [46393,46394]"/>
  <match src="[: [ [50396,50397]" dest="[: [ [51011,51012]"/>
  <match src="function_definition [18180,18326]" dest="function_definition [18180,18326]"/>
  <match src=".: . [50632,50633]" dest=".: . [51247,51248]"/>
  <match src="=&gt;: =&gt; [12440,12442]" dest="=&gt;: =&gt; [12440,12442]"/>
  <match src="contract: contract [10660,10668]" dest="contract: contract [10660,10668]"/>
  <match src="[: [ [49698,49699]" dest="[: [ [50313,50314]"/>
  <match src="yul_identifier [37890,37896]" dest="yul_identifier [37890,37896]"/>
  <match src="): ) [38927,38928]" dest="): ) [38927,38928]"/>
  <match src="string [21488,21519]" dest="string [21488,21519]"/>
  <match src="identifier: role [33384,33388]" dest="identifier: role [33384,33388]"/>
  <match src="call_argument [52242,52487]" dest="call_argument [52974,53219]"/>
  <match src="(: ( [37413,37414]" dest="(: ( [37413,37414]"/>
  <match src="state_variable_declaration [9276,9329]" dest="state_variable_declaration [9276,9329]"/>
  <match src="call_argument [31713,31717]" dest="call_argument [31713,31717]"/>
  <match src="block_statement [33794,33866]" dest="block_statement [33794,33866]"/>
  <match src="): ) [16630,16631]" dest="): ) [16630,16631]"/>
  <match src="]: ] [33767,33768]" dest="]: ] [33767,33768]"/>
  <match src="function: function [2587,2595]" dest="function: function [2587,2595]"/>
  <match src="identifier: log [50306,50309]" dest="identifier: log [50921,50924]"/>
  <match src="virtual: virtual [33343,33350]" dest="virtual: virtual [33343,33350]"/>
  <match src="{: { [41448,41449]" dest="{: { [41448,41449]"/>
  <match src="return_statement [14749,14762]" dest="return_statement [14749,14762]"/>
  <match src="): ) [23576,23577]" dest="): ) [23576,23577]"/>
  <match src="call_argument [39882,39928]" dest="call_argument [39882,39928]"/>
  <match src="function_body [33741,33873]" dest="function_body [33741,33873]"/>
  <match src="library_declaration [19201,25285]" dest="library_declaration [19201,25285]"/>
  <match src="(: ( [17262,17263]" dest="(: ( [17262,17263]"/>
  <match src=".: . [18062,18063]" dest=".: . [18062,18063]"/>
  <match src="binary_expression [35160,35175]" dest="binary_expression [35160,35175]"/>
  <match src="number_literal: 0 [50654,50655]" dest="number_literal: 0 [51269,51270]"/>
  <match src="parameter [861,865]" dest="parameter [861,865]"/>
  <match src="binary_expression [50606,50656]" dest="binary_expression [51221,51271]"/>
  <match src="if_statement [50763,52849]" dest="if_statement [51378,53581]"/>
  <match src="binary_expression [38420,38434]" dest="binary_expression [38420,38434]"/>
  <match src="true [36551,36555]" dest="true [36551,36555]"/>
  <match src="uint256: uint256 [42158,42165]" dest="uint256: uint256 [42158,42165]"/>
  <match src="call_argument [16660,16670]" dest="call_argument [16660,16670]"/>
  <match src="}: } [9856,9857]" dest="}: } [9856,9857]"/>
  <match src="returns: returns [17316,17323]" dest="returns: returns [17316,17323]"/>
  <match src="): ) [50802,50803]" dest="): ) [51417,51418]"/>
  <match src="return_type_definition [37059,37076]" dest="return_type_definition [37059,37076]"/>
  <match src="(: ( [24334,24335]" dest="(: ( [24334,24335]"/>
  <match src="}: } [17780,17781]" dest="}: } [17780,17781]"/>
  <match src="&quot;: &quot; [37259,37260]" dest="&quot;: &quot; [37259,37260]"/>
  <match src="array_access [33559,33571]" dest="array_access [33559,33571]"/>
  <match src="function_body [29676,29731]" dest="function_body [29676,29731]"/>
  <match src="): ) [48400,48401]" dest="): ) [49015,49016]"/>
  <match src="override_specifier [46333,46341]" dest="override_specifier [46331,46339]"/>
  <match src="virtual: virtual [31563,31570]" dest="virtual: virtual [31563,31570]"/>
  <match src="primitive_type [2928,2935]" dest="primitive_type [2928,2935]"/>
  <match src="assembly_statement [40982,41277]" dest="assembly_statement [40982,41277]"/>
  <match src="string_literal [52788,52836]" dest="string_literal [53520,53568]"/>
  <match src="byte: byte [41516,41520]" dest="byte: byte [41516,41520]"/>
  <match src="interface: interface [43114,43123]" dest="interface: interface [43114,43123]"/>
  <match src="call_expression [50916,51004]" dest="call_expression [51531,51619]"/>
  <match src="identifier: require [48226,48233]" dest="identifier: require [48841,48848]"/>
  <match src="(: ( [31597,31598]" dest="(: ( [31597,31598]"/>
  <match src="binary_expression [38300,38322]" dest="binary_expression [38300,38322]"/>
  <match src="binary_expression [20406,20421]" dest="binary_expression [20406,20421]"/>
  <match src="return_statement [23054,23115]" dest="return_statement [23054,23115]"/>
  <match src="type_cast_expression [21455,21468]" dest="type_cast_expression [21455,21468]"/>
  <match src="identifier: AddressSet [16005,16015]" dest="identifier: AddressSet [16005,16015]"/>
  <match src="[: [ [2982,2983]" dest="[: [ [2982,2983]"/>
  <match src=",: , [52201,52202]" dest=",: , [52933,52934]"/>
  <match src="type_name [44492,44496]" dest="type_name [44492,44496]"/>
  <match src="): ) [44541,44542]" dest="): ) [44541,44542]"/>
  <match src="let: let [25063,25066]" dest="let: let [25063,25066]"/>
  <match src="uint256: uint256 [49238,49245]" dest="uint256: uint256 [49853,49860]"/>
  <match src="): ) [37523,37524]" dest="): ) [37523,37524]"/>
  <match src="call_argument [32429,32433]" dest="call_argument [32429,32433]"/>
  <match src="expression_statement [33435,33470]" dest="expression_statement [33435,33470]"/>
  <match src="parameter [4200,4210]" dest="parameter [4200,4210]"/>
  <match src="type_name [48898,48907]" dest="type_name [49513,49522]"/>
  <match src="identifier: recipient [21400,21409]" dest="identifier: recipient [21400,21409]"/>
  <match src=".: . [29706,29707]" dest=".: . [29706,29707]"/>
  <match src=",: , [31242,31243]" dest=",: , [31242,31243]"/>
  <match src="mstore: mstore [42391,42397]" dest="mstore: mstore [42391,42397]"/>
  <match src="{: { [52766,52767]" dest="{: { [53498,53499]"/>
  <match src="}: } [8692,8693]" dest="}: } [8692,8693]"/>
  <match src="{: { [23610,23611]" dest="{: { [23610,23611]"/>
  <match src="add: add [39108,39111]" dest="add: add [39108,39111]"/>
  <match src="identifier: role [29701,29705]" dest="identifier: role [29701,29705]"/>
  <match src="function_body [36341,36563]" dest="function_body [36341,36563]"/>
  <match src="(: ( [50613,50614]" dest="(: ( [51228,51229]"/>
  <match src="parameter [22964,22981]" dest="parameter [22964,22981]"/>
  <match src="expression_statement [36933,36966]" dest="expression_statement [36933,36966]"/>
  <match src="call_argument [50241,50253]" dest="call_argument [50856,50868]"/>
  <match src="member_expression [37712,37723]" dest="member_expression [37712,37723]"/>
  <match src="external: external [44373,44381]" dest="external: external [44373,44381]"/>
  <match src="{: { [33594,33595]" dest="{: { [33594,33595]"/>
  <match src="): ) [35702,35703]" dest="): ) [35702,35703]"/>
  <match src="interface_declaration [4914,6196]" dest="interface_declaration [4914,6196]"/>
  <match src="comment: // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs [13951,14057]" dest="comment: // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs [13951,14057]"/>
  <match src="identifier: itemLength [37601,37611]" dest="identifier: itemLength [37601,37611]"/>
  <match src="parameter [23029,23041]" dest="parameter [23029,23041]"/>
  <match src="identifier: value [16444,16449]" dest="identifier: value [16444,16449]"/>
  <match src=".: . [12772,12773]" dest=".: . [12772,12773]"/>
  <match src="(: ( [37295,37296]" dest="(: ( [37295,37296]"/>
  <match src="boolean_literal [44506,44511]" dest="boolean_literal [44506,44511]"/>
  <match src="++: ++ [39949,39951]" dest="++: ++ [39949,39951]"/>
  <match src="call_argument [36818,36826]" dest="call_argument [36818,36826]"/>
  <match src="(: ( [10731,10732]" dest="(: ( [10731,10732]"/>
  <match src="function_definition [35433,36168]" dest="function_definition [35433,36168]"/>
  <match src="contract: contract [44462,44470]" dest="contract: contract [44462,44470]"/>
  <match src="identifier: _roles [33435,33441]" dest="identifier: _roles [33435,33441]"/>
  <match src="function_definition [43633,43796]" dest="function_definition [43633,43796]"/>
  <match src="address: address [48072,48079]" dest="address: address [48687,48694]"/>
  <match src="type_name [6111,6120]" dest="type_name [6111,6120]"/>
  <match src="address: address [3528,3535]" dest="address: address [3528,3535]"/>
  <match src="string: string [24060,24066]" dest="string: string [24060,24066]"/>
  <match src="member_expression [38775,38786]" dest="member_expression [38775,38786]"/>
  <match src="parameter [30367,30380]" dest="parameter [30367,30380]"/>
  <match src="identifier: supportsInterface [800,817]" dest="identifier: supportsInterface [800,817]"/>
  <match src="-=: -= [42334,42336]" dest="-=: -= [42334,42336]"/>
  <match src="expression_statement [12930,12971]" dest="expression_statement [12930,12971]"/>
  <match src="(: ( [50240,50241]" dest="(: ( [50855,50856]"/>
  <match src="bool: bool [13302,13306]" dest="bool: bool [13302,13306]"/>
  <match src="identifier: len [36823,36826]" dest="identifier: len [36823,36826]"/>
  <match src="uint256: uint256 [38941,38948]" dest="uint256: uint256 [38941,38948]"/>
  <match src="variable_declaration [37537,37555]" dest="variable_declaration [37537,37555]"/>
  <match src="=: = [50507,50508]" dest="=: = [51122,51123]"/>
  <match src="string [39882,39928]" dest="string [39882,39928]"/>
  <match src="(: ( [18506,18507]" dest="(: ( [18506,18507]"/>
  <match src="event_paramater [28791,28813]" dest="event_paramater [28791,28813]"/>
  <match src="): ) [24691,24692]" dest="): ) [24691,24692]"/>
  <match src="source_file [0,52859]" dest="source_file [0,53591]"/>
  <match src="primitive_type [25999,26014]" dest="primitive_type [25999,26014]"/>
  <match src="address: address [5441,5448]" dest="address: address [5441,5448]"/>
  <match src="type_cast_expression [51834,51870]" dest="type_cast_expression [52566,52602]"/>
  <match src="state_mutability [38703,38707]" dest="state_mutability [38703,38707]"/>
  <match src="assignment_expression [33435,33469]" dest="assignment_expression [33435,33469]"/>
  <match src="+: + [41880,41881]" dest="+: + [41880,41881]"/>
  <match src="identifier: set [14199,14202]" dest="identifier: set [14199,14202]"/>
  <match src="assembly: assembly [40458,40466]" dest="assembly: assembly [40458,40466]"/>
  <match src=".: . [37574,37575]" dest=".: . [37574,37575]"/>
  <match src="call_expression [10846,10864]" dest="call_expression [10846,10864]"/>
  <match src="function_definition [18412,18526]" dest="function_definition [18412,18526]"/>
  <match src="): ) [35210,35211]" dest="): ) [35210,35211]"/>
  <match src="bool: bool [861,865]" dest="bool: bool [861,865]"/>
  <match src="&quot;: &quot; [45068,45069]" dest="&quot;: &quot; [45066,45067]"/>
  <match src="return: return [41593,41599]" dest="return: return [41593,41599]"/>
  <match src="yul_assignment [39097,39125]" dest="yul_assignment [39097,39125]"/>
  <match src="call_argument [51542,51555]" dest="call_argument [52162,52175]"/>
  <match src="call_argument [32354,32403]" dest="call_argument [32354,32403]"/>
  <match src="): ) [32442,32443]" dest="): ) [32442,32443]"/>
  <match src="(: ( [29413,29414]" dest="(: ( [29413,29414]"/>
  <match src="primitive_type [42136,42143]" dest="primitive_type [42136,42143]"/>
  <match src="uint256: uint256 [29667,29674]" dest="uint256: uint256 [29667,29674]"/>
  <match src="variable_declaration_statement [35657,35704]" dest="variable_declaration_statement [35657,35704]"/>
  <match src="yul_path [40795,40802]" dest="yul_path [40795,40802]"/>
  <match src="pragma_directive [44711,44733]" dest="pragma_directive [44711,44733]"/>
  <match src=".: . [15167,15168]" dest=".: . [15167,15168]"/>
  <match src="if: if [41767,41769]" dest="if: if [41767,41769]"/>
  <match src="returns: returns [29351,29358]" dest="returns: returns [29351,29358]"/>
  <match src="): ) [2665,2666]" dest="): ) [2665,2666]"/>
  <match src="): ) [10310,10311]" dest="): ) [10310,10311]"/>
  <match src="calldata: calldata [6121,6129]" dest="calldata: calldata [6121,6129]"/>
  <match src="struct_declaration [27880,27975]" dest="struct_declaration [27880,27975]"/>
  <match src="call_argument [31598,31620]" dest="call_argument [31598,31620]"/>
  <match src="private: private [28013,28020]" dest="private: private [28013,28020]"/>
  <match src="variable_declaration_statement [37680,37725]" dest="variable_declaration_statement [37680,37725]"/>
  <match src="(: ( [13476,13477]" dest="(: ( [13476,13477]"/>
  <match src="parameter [23544,23561]" dest="parameter [23544,23561]"/>
  <match src="identifier: destPtr [39055,39062]" dest="identifier: destPtr [39055,39062]"/>
  <match src="inheritance_specifier [6403,6410]" dest="inheritance_specifier [6403,6410]"/>
  <match src="): ) [50329,50330]" dest="): ) [50944,50945]"/>
  <match src="solidity: solidity [33939,33947]" dest="solidity: solidity [33939,33947]"/>
  <match src="[: [ [14210,14211]" dest="[: [ [14210,14211]"/>
  <match src="-: - [41854,41855]" dest="-: - [41854,41855]"/>
  <match src="address: address [7291,7298]" dest="address: address [7291,7298]"/>
  <match src="returns: returns [36747,36754]" dest="returns: returns [36747,36754]"/>
  <match src="type_name [30714,30721]" dest="type_name [30714,30721]"/>
  <match src="event: event [1615,1620]" dest="event: event [1615,1620]"/>
  <match src=",: , [23662,23663]" dest=",: , [23662,23663]"/>
  <match src="pure: pure [37054,37058]" dest="pure: pure [37054,37058]"/>
  <match src="string_literal [21488,21519]" dest="string_literal [21488,21519]"/>
  <match src="identifier: weiValue [24378,24386]" dest="identifier: weiValue [24378,24386]"/>
  <match src="identifier: Set [15796,15799]" dest="identifier: Set [15796,15799]"/>
  <match src="(: ( [34069,34070]" dest="(: ( [34069,34070]"/>
  <match src="number_literal: 0xb8 [34761,34765]" dest="number_literal: 0xb8 [34761,34765]"/>
  <match src="yul_function_call [40217,40230]" dest="yul_function_call [40217,40230]"/>
  <match src="memory: memory [26117,26123]" dest="memory: memory [26117,26123]"/>
  <match src="uint256: uint256 [18941,18948]" dest="uint256: uint256 [18941,18948]"/>
  <match src="{: { [31571,31572]" dest="{: { [31571,31572]"/>
  <match src="event_paramater [45428,45453]" dest="event_paramater [45426,45451]"/>
  <match src=",: , [44796,44797]" dest=",: , [44794,44795]"/>
  <match src="type_name [38514,38521]" dest="type_name [38514,38521]"/>
  <match src=",: , [2926,2927]" dest=",: , [2926,2927]"/>
  <match src="++: ++ [48445,48447]" dest="++: ++ [49060,49062]"/>
  <match src="yul_path [37890,37896]" dest="yul_path [37890,37896]"/>
  <match src="public: public [50220,50226]" dest="public: public [50835,50841]"/>
  <match src="type_name [37735,37742]" dest="type_name [37735,37742]"/>
  <match src="): ) [24118,24119]" dest="): ) [24118,24119]"/>
  <match src="expression_statement [39148,39189]" dest="expression_statement [39148,39189]"/>
  <match src="event_paramater [28422,28442]" dest="event_paramater [28422,28442]"/>
  <match src="identifier: RoleAdminChanged [28405,28421]" dest="identifier: RoleAdminChanged [28405,28421]"/>
  <match src="identifier: msg [26277,26280]" dest="identifier: msg [26277,26280]"/>
  <match src="identifier: value [18002,18007]" dest="identifier: value [18002,18007]"/>
  <match src="): ) [36826,36827]" dest="): ) [36826,36827]"/>
  <match src="call_argument [51557,51559]" dest="call_argument [52218,52220]"/>
  <match src=".: . [51860,51861]" dest=".: . [52592,52593]"/>
  <match src="identifier: srcpart [42679,42686]" dest="identifier: srcpart [42679,42686]"/>
  <match src="comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [19978,20063]" dest="comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [19978,20063]"/>
  <match src="call_expression [38901,38928]" dest="call_expression [38901,38928]"/>
  <match src="identifier: src [42700,42703]" dest="identifier: src [42700,42703]"/>
  <match src="bool: bool [16384,16388]" dest="bool: bool [16384,16388]"/>
  <match src="): ) [1985,1986]" dest="): ) [1985,1986]"/>
  <match src="expression_statement [38798,38874]" dest="expression_statement [38798,38874]"/>
  <match src="identifier: _roles [33559,33565]" dest="identifier: _roles [33559,33565]"/>
  <match src="calldata: calldata [8626,8634]" dest="calldata: calldata [8626,8634]"/>
  <match src="bytes32: bytes32 [33702,33709]" dest="bytes32: bytes32 [33702,33709]"/>
  <match src="address: address [48136,48143]" dest="address: address [48751,48758]"/>
  <match src="identifier: item [36391,36395]" dest="identifier: item [36391,36395]"/>
  <match src="assignment_expression [36003,36032]" dest="assignment_expression [36003,36032]"/>
  <match src="type_name [35051,35056]" dest="type_name [35051,35056]"/>
  <match src="): ) [40342,40343]" dest="): ) [40342,40343]"/>
  <match src="(: ( [40870,40871]" dest="(: ( [40870,40871]"/>
  <match src="parameter [30353,30365]" dest="parameter [30353,30365]"/>
  <match src="identifier: id [2631,2633]" dest="identifier: id [2631,2633]"/>
  <match src=",: , [47391,47392]" dest=",: , [47389,47390]"/>
  <match src="identifier: toBytes [50466,50473]" dest="identifier: toBytes [51081,51088]"/>
  <match src=",: , [47433,47434]" dest=",: , [47431,47432]"/>
  <match src="(: ( [18256,18257]" dest="(: ( [18256,18257]"/>
  <match src="function_definition [4684,4823]" dest="function_definition [4684,4823]"/>
  <match src="using: using [44872,44877]" dest="using: using [44870,44875]"/>
  <match src="=: = [14446,14447]" dest="=: = [14446,14447]"/>
  <match src="identifier: depositor [46843,46852]" dest="identifier: depositor [46841,46850]"/>
  <match src="pragma_directive [972,995]" dest="pragma_directive [972,995]"/>
  <match src=".: . [50350,50351]" dest=".: . [50965,50966]"/>
  <match src="type_name [24388,24394]" dest="type_name [24388,24394]"/>
  <match src="identifier: offset [37760,37766]" dest="identifier: offset [37760,37766]"/>
  <match src="type_name [9742,9748]" dest="type_name [9742,9748]"/>
  <match src="identifier: tokenBalances [49704,49717]" dest="identifier: tokenBalances [50319,50332]"/>
  <match src=":=: := [41022,41024]" dest=":=: := [41022,41024]"/>
  <match src="parameter [48898,48928]" dest="parameter [49513,49543]"/>
  <match src="new: new [49234,49237]" dest="new: new [49849,49852]"/>
  <match src="state_mutability [2961,2965]" dest="state_mutability [2961,2965]"/>
  <match src="array_access [12930,12949]" dest="array_access [12930,12949]"/>
  <match src="call_expression [31117,31162]" dest="call_expression [31117,31162]"/>
  <match src=",: , [31064,31065]" dest=",: , [31064,31065]"/>
  <match src="}: } [36167,36168]" dest="}: } [36167,36168]"/>
  <match src="member_expression [37749,37757]" dest="member_expression [37749,37757]"/>
  <match src=",: , [1701,1702]" dest=",: , [1701,1702]"/>
  <match src="uint256: uint256 [18903,18910]" dest="uint256: uint256 [18903,18910]"/>
  <match src="type_alias [27852,27859]" dest="type_alias [27852,27859]"/>
  <match src=",: , [45825,45826]" dest=",: , [45823,45824]"/>
  <match src="call_argument [51561,51582]" dest="call_argument [52267,52288]"/>
  <match src="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [15003,15075]" dest="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [15003,15075]"/>
  <match src="variable_declaration [35926,35941]" dest="variable_declaration [35926,35941]"/>
  <match src="primitive_type [50168,50175]" dest="primitive_type [50783,50790]"/>
  <match src="call_argument [50945,50952]" dest="call_argument [51560,51567]"/>
  <match src="returns: returns [12700,12707]" dest="returns: returns [12700,12707]"/>
  <match src="member_expression [16888,16898]" dest="member_expression [16888,16898]"/>
  <match src="internal: internal [38694,38702]" dest="internal: internal [38694,38702]"/>
  <match src=".: . [39670,39671]" dest=".: . [39670,39671]"/>
  <match src="is: is [27773,27775]" dest="is: is [27773,27775]"/>
  <match src="[: [ [50283,50284]" dest="[: [ [50898,50899]"/>
  <match src="identifier: setApprovalForAll [3272,3289]" dest="identifier: setApprovalForAll [3272,3289]"/>
  <match src="(: ( [18881,18882]" dest="(: ( [18881,18882]"/>
  <match src="&quot;: &quot; [52513,52514]" dest="&quot;: &quot; [53245,53246]"/>
  <match src="{: { [33351,33352]" dest="{: { [33351,33352]"/>
  <match src="function_definition [36665,36997]" dest="function_definition [36665,36997]"/>
  <match src="]: ] [6119,6120]" dest="]: ] [6119,6120]"/>
  <match src="binary_expression [39706,39728]" dest="binary_expression [39706,39728]"/>
  <match src="=: = [34848,34849]" dest="=: = [34848,34849]"/>
  <match src="identifier: i [48427,48428]" dest="identifier: i [49042,49043]"/>
  <match src="}: } [16134,16135]" dest="}: } [16134,16135]"/>
  <match src="primitive_type [16103,16110]" dest="primitive_type [16103,16110]"/>
  <match src="primitive_type [33315,33322]" dest="primitive_type [33315,33322]"/>
  <match src="mapping: mapping [27983,27990]" dest="mapping: mapping [27983,27990]"/>
  <match src="identifier: item [36700,36704]" dest="identifier: item [36700,36704]"/>
  <match src="variable_declaration [42599,42611]" dest="variable_declaration [42599,42611]"/>
  <match src="library_declaration [34654,42876]" dest="library_declaration [34654,42876]"/>
  <match src="yul_assignment [40795,40835]" dest="yul_assignment [40795,40835]"/>
  <match src="identifier: i [49548,49549]" dest="identifier: i [50163,50164]"/>
  <match src="}: } [27974,27975]" dest="}: } [27974,27975]"/>
  <match src="variable_declaration_tuple [21611,21627]" dest="variable_declaration_tuple [21611,21627]"/>
  <match src="}: } [10464,10465]" dest="}: } [10464,10465]"/>
  <match src="identifier: _ [34346,34347]" dest="identifier: _ [34346,34347]"/>
  <match src="variable_declaration [50266,50303]" dest="variable_declaration [50881,50918]"/>
  <match src="comment: // File: @openzeppelin/contracts/introspection/IERC165.sol [0,58]" dest="comment: // File: @openzeppelin/contracts/introspection/IERC165.sol [0,58]"/>
  <match src="true: true [14712,14716]" dest="true: true [14712,14716]"/>
  <match src=",: , [51555,51556]" dest=",: , [52175,52176]"/>
  <match src="constructor_definition [9337,9558]" dest="constructor_definition [9337,9558]"/>
  <match src="parenthesized_expression [41856,41879]" dest="parenthesized_expression [41856,41879]"/>
  <match src="yul_evm_builtin [40726,40729]" dest="yul_evm_builtin [40726,40729]"/>
  <match src="identifier: value [18311,18316]" dest="identifier: value [18311,18316]"/>
  <match src="returns: returns [18932,18939]" dest="returns: returns [18932,18939]"/>
  <match src="(: ( [16625,16626]" dest="(: ( [16625,16626]"/>
  <match src="call_argument [51063,51072]" dest="call_argument [51678,51687]"/>
  <match src=",: , [25151,25152]" dest=",: , [25151,25152]"/>
  <match src="call_argument [47263,47292]" dest="call_argument [47261,47290]"/>
  <match src="): ) [45664,45665]" dest="): ) [45662,45663]"/>
  <match src="identifier: item [35334,35338]" dest="identifier: item [35334,35338]"/>
  <match src="{: { [38225,38226]" dest="{: { [38225,38226]"/>
  <match src="call_argument [52623,52627]" dest="call_argument [53355,53359]"/>
  <match src="internal: internal [23011,23019]" dest="internal: internal [23011,23019]"/>
  <match src="]: ] [33446,33447]" dest="]: ] [33446,33447]"/>
  <match src="emit: emit [47306,47310]" dest="emit: emit [47304,47308]"/>
  <match src="): ) [38786,38787]" dest="): ) [38786,38787]"/>
  <match src="(: ( [35119,35120]" dest="(: ( [35119,35120]"/>
  <match src="yul_identifier [40505,40510]" dest="yul_identifier [40505,40510]"/>
  <match src="identifier: Set [13253,13256]" dest="identifier: Set [13253,13256]"/>
  <match src="type_name [44340,44345]" dest="type_name [44340,44345]"/>
  <match src="yul_identifier [37874,37880]" dest="yul_identifier [37874,37880]"/>
  <match src="primitive_type [21384,21399]" dest="primitive_type [21384,21399]"/>
  <match src="primitive_type [33519,33526]" dest="primitive_type [33519,33526]"/>
  <match src="return: return [30423,30429]" dest="return: return [30423,30429]"/>
  <match src="call_argument [24261,24265]" dest="call_argument [24261,24265]"/>
  <match src="bytes: bytes [52506,52511]" dest="bytes: bytes [53238,53243]"/>
  <match src="yul_path [41250,41257]" dest="yul_path [41250,41257]"/>
  <match src="address: address [1661,1668]" dest="address: address [1661,1668]"/>
  <match src="constant: constant [34823,34831]" dest="constant: constant [34823,34831]"/>
  <match src="type_cast_expression [51193,51206]" dest="type_cast_expression [51808,51821]"/>
  <match src="{: { [16632,16633]" dest="{: { [16632,16633]"/>
  <match src="function: function [33681,33689]" dest="function: function [33681,33689]"/>
  <match src="type_name [35222,35229]" dest="type_name [35222,35229]"/>
  <match src="member_expression [14574,14585]" dest="member_expression [14574,14585]"/>
  <match src="type_cast_expression [52615,52628]" dest="type_cast_expression [53347,53360]"/>
  <match src="user_defined_type [16005,16015]" dest="user_defined_type [16005,16015]"/>
  <match src="number_literal: 0 [48144,48145]" dest="number_literal: 0 [48759,48760]"/>
  <match src="): ) [52136,52137]" dest="): ) [52868,52869]"/>
  <match src="bytes: bytes [22964,22969]" dest="bytes: bytes [22964,22969]"/>
  <match src="(: ( [4714,4715]" dest="(: ( [4714,4715]"/>
  <match src="primitive_type [4240,4245]" dest="primitive_type [4240,4245]"/>
  <match src="}: } [49735,49736]" dest="}: } [50350,50351]"/>
  <match src="call_expression [38257,38281]" dest="call_expression [38257,38281]"/>
  <match src="uint256: uint256 [42181,42188]" dest="uint256: uint256 [42181,42188]"/>
  <match src="parenthesized_expression [52787,52837]" dest="parenthesized_expression [53519,53569]"/>
  <match src="type_name [17973,17980]" dest="type_name [17973,17980]"/>
  <match src="return_statement [29687,29724]" dest="return_statement [29687,29724]"/>
  <match src="}: } [17399,17400]" dest="}: } [17399,17400]"/>
  <match src="]: ] [12948,12949]" dest="]: ] [12948,12949]"/>
  <match src="returns: returns [19862,19869]" dest="returns: returns [19862,19869]"/>
  <match src="return_statement [35319,35355]" dest="return_statement [35319,35355]"/>
  <match src="if_statement [24680,25275]" dest="if_statement [24680,25275]"/>
  <match src="storage: storage [15551,15558]" dest="storage: storage [15551,15558]"/>
  <match src="primitive_type [44340,44345]" dest="primitive_type [44340,44345]"/>
  <match src="uint256: uint256 [39396,39403]" dest="uint256: uint256 [39396,39403]"/>
  <match src="{: { [6411,6412]" dest="{: { [6411,6412]"/>
  <match src="address: address [3290,3297]" dest="address: address [3290,3297]"/>
  <match src=",: , [35800,35801]" dest=",: , [35800,35801]"/>
  <match src="exp: exp [41137,41140]" dest="exp: exp [41137,41140]"/>
  <match src="identifier: isContract [24466,24476]" dest="identifier: isContract [24466,24476]"/>
  <match src="type_cast_expression [16436,16450]" dest="type_cast_expression [16436,16450]"/>
  <match src=".: . [36822,36823]" dest=".: . [36822,36823]"/>
  <match src="bytes: bytes [51584,51589]" dest="bytes: bytes [52316,52321]"/>
  <match src="{: { [30723,30724]" dest="{: { [30723,30724]"/>
  <match src="variable_declaration [35657,35680]" dest="variable_declaration [35657,35680]"/>
  <match src="comment: /// @title Token predicate interface for all pos portal predicates [42971,43037]" dest="comment: /// @title Token predicate interface for all pos portal predicates [42971,43037]"/>
  <match src="uint256: uint256 [18472,18479]" dest="uint256: uint256 [18472,18479]"/>
  <match src="]: ] [14981,14982]" dest="]: ] [14981,14982]"/>
  <match src="type_name [9120,9126]" dest="type_name [9120,9126]"/>
  <match src="yul_function_call [36454,36467]" dest="yul_function_call [36454,36467]"/>
  <match src="identifier: item [37296,37300]" dest="identifier: item [37296,37300]"/>
  <match src="else: else [13009,13013]" dest="else: else [13009,13013]"/>
  <match src="primitive_type [16428,16435]" dest="primitive_type [16428,16435]"/>
  <match src="identifier: account [32435,32442]" dest="identifier: account [32435,32442]"/>
  <match src="return_statement [41841,41884]" dest="return_statement [41841,41884]"/>
  <match src="yul_identifier [40795,40802]" dest="yul_identifier [40795,40802]"/>
  <match src="variable_declaration [36374,36388]" dest="variable_declaration [36374,36388]"/>
  <match src="}: } [49790,49791]" dest="}: } [50405,50406]"/>
  <match src="type_name [46351,46357]" dest="type_name [46349,46355]"/>
  <match src=":=: := [42687,42689]" dest=":=: := [42687,42689]"/>
  <match src="call_argument [21662,21664]" dest="call_argument [21662,21664]"/>
  <match src="): ) [50544,50545]" dest="): ) [51159,51160]"/>
  <match src="visibility [25968,25976]" dest="visibility [25968,25976]"/>
  <match src="bytes32: bytes32 [28444,28451]" dest="bytes32: bytes32 [28444,28451]"/>
  <match src="function: function [26060,26068]" dest="function: function [26060,26068]"/>
  <match src="(: ( [12729,12730]" dest="(: ( [12729,12730]"/>
  <match src="call_expression [12769,12792]" dest="call_expression [12769,12792]"/>
  <match src="type_name [16351,16358]" dest="type_name [16351,16358]"/>
  <match src="return: return [36544,36550]" dest="return: return [36544,36550]"/>
  <match src="type_name [4240,4245]" dest="type_name [4240,4245]"/>
  <match src="identifier: RLPItem [50351,50358]" dest="identifier: RLPItem [50966,50973]"/>
  <match src="assembly: assembly [41483,41491]" dest="assembly: assembly [41483,41491]"/>
  <match src="comment: // The value is stored at length-1, but we add 1 to all indexes [12807,12870]" dest="comment: // The value is stored at length-1, but we add 1 to all indexes [12807,12870]"/>
  <match src="struct: struct [12212,12218]" dest="struct: struct [12212,12218]"/>
  <match src="): ) [40593,40594]" dest="): ) [40593,40594]"/>
  <match src="primitive_type [18071,18078]" dest="primitive_type [18071,18078]"/>
  <match src="expression_statement [24131,24213]" dest="expression_statement [24131,24213]"/>
  <match src="number_literal: 0 [10862,10863]" dest="number_literal: 0 [10862,10863]"/>
  <match src="number_literal: 1 [13933,13934]" dest="number_literal: 1 [13933,13934]"/>
  <match src="(: ( [39352,39353]" dest="(: ( [39352,39353]"/>
  <match src="identifier: target [23084,23090]" dest="identifier: target [23084,23090]"/>
  <match src="address: address [24335,24342]" dest="address: address [24335,24342]"/>
  <match src="): ) [35573,35574]" dest="): ) [35573,35574]"/>
  <match src="): ) [2950,2951]" dest="): ) [2950,2951]"/>
  <match src=",: , [24259,24260]" dest=",: , [24259,24260]"/>
  <match src="call_argument [34136,34194]" dest="call_argument [34136,34194]"/>
  <match src="visibility [43787,43795]" dest="visibility [43787,43795]"/>
  <match src="solidity_version:  0.6.6 [34643,34649]" dest="solidity_version:  0.6.6 [34643,34649]"/>
  <match src="identifier: result [36154,36160]" dest="identifier: result [36154,36160]"/>
  <match src="): ) [18007,18008]" dest="): ) [18007,18008]"/>
  <match src="call_expression [52291,52438]" dest="call_expression [53023,53170]"/>
  <match src="primitive_type [12268,12275]" dest="primitive_type [12268,12275]"/>
  <match src="view: view [16839,16843]" dest="view: view [16839,16843]"/>
  <match src="primitive_type [1718,1725]" dest="primitive_type [1718,1725]"/>
  <match src=",: , [24058,24059]" dest=",: , [24058,24059]"/>
  <match src="primitive_type [24433,24438]" dest="primitive_type [24433,24438]"/>
  <match src=".: . [39724,39725]" dest=".: . [39724,39725]"/>
  <match src="unary_expression [37406,37419]" dest="unary_expression [37406,37419]"/>
  <match src=",: , [50952,50953]" dest=",: , [51567,51568]"/>
  <match src="identifier: role [31132,31136]" dest="identifier: role [31132,31136]"/>
  <match src="{: { [37859,37860]" dest="{: { [37859,37860]"/>
  <match src="primitive_type [50429,50434]" dest="primitive_type [51044,51049]"/>
  <match src="identifier: Set [17454,17457]" dest="identifier: Set [17454,17457]"/>
  <match src="call_argument [17766,17771]" dest="call_argument [17766,17771]"/>
  <match src=".: . [35907,35908]" dest=".: . [35907,35908]"/>
  <match src="identifier: keccak256 [45289,45298]" dest="identifier: keccak256 [45287,45296]"/>
  <match src="(: ( [40416,40417]" dest="(: ( [40416,40417]"/>
  <match src="internal: internal [18449,18457]" dest="internal: internal [18449,18457]"/>
  <match src=",: , [51680,51681]" dest=",: , [52412,52413]"/>
  <match src="(: ( [17972,17973]" dest="(: ( [17972,17973]"/>
  <match src="identifier: src [42410,42413]" dest="identifier: src [42410,42413]"/>
  <match src="function_definition [31033,31260]" dest="function_definition [31033,31260]"/>
  <match src="primitive_type [45542,45549]" dest="primitive_type [45540,45547]"/>
  <match src="identifier: abi [50916,50919]" dest="identifier: abi [51531,51534]"/>
  <match src="storage: storage [16575,16582]" dest="storage: storage [16575,16582]"/>
  <match src="bytes32: bytes32 [45238,45245]" dest="bytes32: bytes32 [45236,45243]"/>
  <match src="[: [ [12275,12276]" dest="[: [ [12275,12276]"/>
  <match src="assembly: assembly [42651,42659]" dest="assembly: assembly [42651,42659]"/>
  <match src="visibility [50220,50226]" dest="visibility [50835,50841]"/>
  <match src="address: address [1359,1366]" dest="address: address [1359,1366]"/>
  <match src="[: [ [33396,33397]" dest="[: [ [33396,33397]"/>
  <match src="event: event [28399,28404]" dest="event: event [28399,28404]"/>
  <match src="comment: /**      * @notice Validates and processes exit while withdraw process      * @dev Validates exit log emitted on sidechain. Reverts if validation fails.      * @dev Processes withdraw based on custom logic. Example: transfer ERC20/ERC721, mint ERC721 if mintable withdraw      * @param sender Address      * @param rootToken Token which gets withdrawn      * @param logRLPList Valid sidechain log for data like amount, token id etc.      */ [43804,44251]" dest="comment: /**      * @notice Validates and processes exit while withdraw process      * @dev Validates exit log emitted on sidechain. Reverts if validation fails.      * @dev Processes withdraw based on custom logic. Example: transfer ERC20/ERC721, mint ERC721 if mintable withdraw      * @param sender Address      * @param rootToken Token which gets withdrawn      * @param logRLPList Valid sidechain log for data like amount, token id etc.      */ [43804,44251]"/>
  <match src="user_defined_type [18882,18889]" dest="user_defined_type [18882,18889]"/>
  <match src="type_name [16806,16816]" dest="type_name [16806,16816]"/>
  <match src="return_type_definition [18463,18480]" dest="return_type_definition [18463,18480]"/>
  <match src="memory: memory [35530,35536]" dest="memory: memory [35530,35536]"/>
  <match src="): ) [20421,20422]" dest="): ) [20421,20422]"/>
  <match src="identifier: set [13912,13915]" dest="identifier: set [13912,13915]"/>
  <match src="identifier: data [22977,22981]" dest="identifier: data [22977,22981]"/>
  <match src="function: function [22523,22531]" dest="function: function [22523,22531]"/>
  <match src="type_name [29360,29364]" dest="type_name [29360,29364]"/>
  <match src="type_name [16327,16337]" dest="type_name [16327,16337]"/>
  <match src="uint256: uint256 [41439,41446]" dest="uint256: uint256 [41439,41446]"/>
  <match src="type_name [34817,34822]" dest="type_name [34817,34822]"/>
  <match src="bytes4: bytes4 [7448,7454]" dest="bytes4: bytes4 [7448,7454]"/>
  <match src="primitive_type [20160,20167]" dest="primitive_type [20160,20167]"/>
  <match src="(: ( [16805,16806]" dest="(: ( [16805,16806]"/>
  <match src="state_mutability [37364,37368]" dest="state_mutability [37364,37368]"/>
  <match src="variable_declaration_statement [24591,24670]" dest="variable_declaration_statement [24591,24670]"/>
  <match src="parameter [38717,38729]" dest="parameter [38717,38729]"/>
  <match src="call_expression [35554,35603]" dest="call_expression [35554,35603]"/>
  <match src="=: = [13439,13440]" dest="=: = [13439,13440]"/>
  <match src="): ) [28011,28012]" dest="): ) [28011,28012]"/>
  <match src="identifier: _msgSender [31622,31632]" dest="identifier: _msgSender [31622,31632]"/>
  <match src="if_statement [41617,41940]" dest="if_statement [41617,41940]"/>
  <match src="return_type_definition [39387,39404]" dest="return_type_definition [39387,39404]"/>
  <match src="returns: returns [48063,48070]" dest="returns: returns [48678,48685]"/>
  <match src="string_literal [52730,52732]" dest="string_literal [53462,53464]"/>
  <match src="internal: internal [36312,36320]" dest="internal: internal [36312,36320]"/>
  <match src="identifier: len [42189,42192]" dest="identifier: len [42189,42192]"/>
  <match src="true: true [10453,10457]" dest="true: true [10453,10457]"/>
  <match src="[: [ [36053,36054]" dest="[: [ [36053,36054]"/>
  <match src="binary_expression [39746,39762]" dest="binary_expression [39746,39762]"/>
  <match src="&quot;: &quot; [51591,51592]" dest="&quot;: &quot; [52323,52324]"/>
  <match src="primitive_type [17717,17721]" dest="primitive_type [17717,17721]"/>
  <match src="&quot;: &quot; [51780,51781]" dest="&quot;: &quot; [52512,52513]"/>
  <match src="type_cast_expression [18303,18317]" dest="type_cast_expression [18303,18317]"/>
  <match src="(: ( [19870,19871]" dest="(: ( [19870,19871]"/>
  <match src="identifier: value [13454,13459]" dest="identifier: value [13454,13459]"/>
  <match src="): ) [50801,50802]" dest="): ) [51416,51417]"/>
  <match src="identifier: result [37785,37791]" dest="identifier: result [37785,37791]"/>
  <match src="(: ( [38915,38916]" dest="(: ( [38915,38916]"/>
  <match src="member_expression [26277,26285]" dest="member_expression [26277,26285]"/>
  <match src="solidity_version: 0.6.0 [26413,26418]" dest="solidity_version: 0.6.0 [26413,26418]"/>
  <match src="): ) [41741,41742]" dest="): ) [41741,41742]"/>
  <match src="expression_statement [45698,45743]" dest="expression_statement [45696,45741]"/>
  <match src="): ) [49637,49638]" dest="): ) [50252,50253]"/>
  <match src="state_mutability [35497,35501]" dest="state_mutability [35497,35501]"/>
  <match src="=: = [49679,49680]" dest="=: = [50294,50295]"/>
  <match src="false [44506,44511]" dest="false [44506,44511]"/>
  <match src="(: ( [10347,10348]" dest="(: ( [10347,10348]"/>
  <match src="constant: constant [45110,45118]" dest="constant: constant [45108,45116]"/>
  <match src="address: address [31539,31546]" dest="address: address [31539,31546]"/>
  <match src="primitive_type [50150,50157]" dest="primitive_type [50765,50772]"/>
  <match src="mload: mload [42404,42409]" dest="mload: mload [42404,42409]"/>
  <match src="=: = [9165,9166]" dest="=: = [9165,9166]"/>
  <match src="(: ( [37600,37601]" dest="(: ( [37600,37601]"/>
  <match src="string_literal [15657,15693]" dest="string_literal [15657,15693]"/>
  <match src="solidity_version: 0.6.2 [989,994]" dest="solidity_version: 0.6.2 [989,994]"/>
  <match src="identifier: listLength [35778,35788]" dest="identifier: listLength [35778,35788]"/>
  <match src="identifier: role [28760,28764]" dest="identifier: role [28760,28764]"/>
  <match src="identifier: dest [42398,42402]" dest="identifier: dest [42398,42402]"/>
  <match src="function_body [9798,9857]" dest="function_body [9798,9857]"/>
  <match src="primitive_type [45506,45513]" dest="primitive_type [45504,45511]"/>
  <match src="return: return [24708,24714]" dest="return: return [24708,24714]"/>
  <match src="member_expression [33559,33583]" dest="member_expression [33559,33583]"/>
  <match src="{: { [42213,42214]" dest="{: { [42213,42214]"/>
  <match src="call_argument [37111,37148]" dest="call_argument [37111,37148]"/>
  <match src="while: while [39739,39744]" dest="while: while [39739,39744]"/>
  <match src="call_argument [47406,47415]" dest="call_argument [47404,47413]"/>
  <match src="function: function [13236,13244]" dest="function: function [13236,13244]"/>
  <match src="type_name [35657,35666]" dest="type_name [35657,35666]"/>
  <match src="external: external [7422,7430]" dest="external: external [7422,7430]"/>
  <match src="&quot;: &quot; [45309,45310]" dest="&quot;: &quot; [45307,45308]"/>
  <match src=",: , [45495,45496]" dest=",: , [45493,45494]"/>
  <match src=",: , [50979,50980]" dest=",: , [51594,51595]"/>
  <match src="): ) [3321,3322]" dest="): ) [3321,3322]"/>
  <match src="identifier: account [33130,33137]" dest="identifier: account [33130,33137]"/>
  <match src="identifier: value [13278,13283]" dest="identifier: value [13278,13283]"/>
  <match src="{: { [17723,17724]" dest="{: { [17723,17724]"/>
  <match src="pragma: pragma [44436,44442]" dest="pragma: pragma [44436,44442]"/>
  <match src="primitive_type [28479,28486]" dest="primitive_type [28479,28486]"/>
  <match src="identifier: dataLen [41107,41114]" dest="identifier: dataLen [41107,41114]"/>
  <match src="parameter [24351,24368]" dest="parameter [24351,24368]"/>
  <match src="identifier: MANAGER_ROLE [44974,44986]" dest="identifier: MANAGER_ROLE [44972,44984]"/>
  <match src="pragma_directive [25376,25399]" dest="pragma_directive [25376,25399]"/>
  <match src="function_body [44543,44632]" dest="function_body [44543,44632]"/>
  <match src="primitive_type [33301,33308]" dest="primitive_type [33301,33308]"/>
  <match src="function_body [35141,35362]" dest="function_body [35141,35362]"/>
  <match src="function_definition [9715,9857]" dest="function_definition [9715,9857]"/>
  <match src="(: ( [35159,35160]" dest="(: ( [35159,35160]"/>
  <match src="(: ( [35519,35520]" dest="(: ( [35519,35520]"/>
  <match src="identifier: set [17679,17682]" dest="identifier: set [17679,17682]"/>
  <match src="array_access [50517,50535]" dest="array_access [51132,51150]"/>
  <match src="contract_declaration [9000,10468]" dest="contract_declaration [9000,10468]"/>
  <match src="function_body [14945,14995]" dest="function_body [14945,14995]"/>
  <match src="parameter [36756,36768]" dest="parameter [36756,36768]"/>
  <match src=",: , [31537,31538]" dest=",: , [31537,31538]"/>
  <match src="solidity_pragma_token [33939,33953]" dest="solidity_pragma_token [33939,33953]"/>
  <match src="): ) [36467,36468]" dest="): ) [36467,36468]"/>
  <match src="binary_expression [41678,41703]" dest="binary_expression [41678,41703]"/>
  <match src="primitive_type [44287,44294]" dest="primitive_type [44287,44294]"/>
  <match src="identifier: item [36306,36310]" dest="identifier: item [36306,36310]"/>
  <match src="): ) [25102,25103]" dest="): ) [25102,25103]"/>
  <match src="call_expression [30430,30460]" dest="call_expression [30430,30460]"/>
  <match src=",: , [24024,24025]" dest=",: , [24024,24025]"/>
  <match src="expression_statement [40357,40398]" dest="expression_statement [40357,40398]"/>
  <match src="identifier: ids [1713,1716]" dest="identifier: ids [1713,1716]"/>
  <match src="identifier: len [39725,39728]" dest="identifier: len [39725,39728]"/>
  <match src="(: ( [50542,50543]" dest="(: ( [51157,51158]"/>
  <match src="call_argument [52127,52136]" dest="call_argument [52859,52868]"/>
  <match src="identifier: memPtr [35908,35914]" dest="identifier: memPtr [35908,35914]"/>
  <match src="member_expression [36818,36826]" dest="member_expression [36818,36826]"/>
  <match src="identifier: AccessControl [27759,27772]" dest="identifier: AccessControl [27759,27772]"/>
  <match src="function_definition [3263,3332]" dest="function_definition [3263,3332]"/>
  <match src="): ) [34193,34194]" dest="): ) [34193,34194]"/>
  <match src="identifier: item [38420,38424]" dest="identifier: item [38420,38424]"/>
  <match src="solidity_version: 0.6.0 [11034,11039]" dest="solidity_version: 0.6.0 [11034,11039]"/>
  <match src="identifier: role [29640,29644]" dest="identifier: role [29640,29644]"/>
  <match src="indexed: indexed [1643,1650]" dest="indexed: indexed [1643,1650]"/>
  <match src="block_statement [24693,24737]" dest="block_statement [24693,24737]"/>
  <match src="identifier: ptr [36848,36851]" dest="identifier: ptr [36848,36851]"/>
  <match src="identifier: errorMessage [24402,24414]" dest="identifier: errorMessage [24402,24414]"/>
  <match src="(: ( [16090,16091]" dest="(: ( [16090,16091]"/>
  <match src="string [37491,37523]" dest="string [37491,37523]"/>
  <match src="]: ] [51956,51957]" dest="]: ] [52688,52689]"/>
  <match src="): ) [52371,52372]" dest="): ) [53103,53104]"/>
  <match src="function_body [18263,18326]" dest="function_body [18263,18326]"/>
  <match src="pure: pure [35497,35501]" dest="pure: pure [35497,35501]"/>
  <match src="identifier: WORD_SIZE [42485,42494]" dest="identifier: WORD_SIZE [42485,42494]"/>
  <match src="type_name [49533,49540]" dest="type_name [50148,50155]"/>
  <match src="type_name [4765,4774]" dest="type_name [4765,4774]"/>
  <match src="(: ( [29721,29722]" dest="(: ( [29721,29722]"/>
  <match src="visibility [48981,48989]" dest="visibility [49596,49604]"/>
  <match src="uint256: uint256 [50972,50979]" dest="uint256: uint256 [51587,51594]"/>
  <match src=",: , [28477,28478]" dest=",: , [28477,28478]"/>
  <match src="primitive_type [31066,31073]" dest="primitive_type [31066,31073]"/>
  <match src="yul_evm_builtin [40580,40583]" dest="yul_evm_builtin [40580,40583]"/>
  <match src="identifier: AccessControl [33991,34004]" dest="identifier: AccessControl [33991,34004]"/>
  <match src="call_argument [49055,49103]" dest="call_argument [49670,49718]"/>
  <match src="identifier: _supportedInterfaces [10417,10437]" dest="identifier: _supportedInterfaces [10417,10437]"/>
  <match src="call_argument [37570,37581]" dest="call_argument [37570,37581]"/>
  <match src="{: { [48095,48096]" dest="{: { [48710,48711]"/>
  <match src="comment: // [49372,49374]" dest="comment: // [49987,49989]"/>
  <match src="call_argument [18992,18997]" dest="call_argument [18992,18997]"/>
  <match src="primitive_type [4200,4207]" dest="primitive_type [4200,4207]"/>
  <match src="assembly: assembly [40982,40990]" dest="assembly: assembly [40982,40990]"/>
  <match src="): ) [34094,34095]" dest="): ) [34094,34095]"/>
  <match src="identifier: tokenBalances [49598,49611]" dest="identifier: tokenBalances [50213,50226]"/>
  <match src="type_name [48419,48426]" dest="type_name [49034,49041]"/>
  <match src="{: { [44865,44866]" dest="{: { [44863,44864]"/>
  <match src="function: function [44257,44265]" dest="function: function [44257,44265]"/>
  <match src="): ) [22578,22579]" dest="): ) [22578,22579]"/>
  <match src="identifier: byte0 [41848,41853]" dest="identifier: byte0 [41848,41853]"/>
  <match src="identifier: set [15629,15632]" dest="identifier: set [15629,15632]"/>
  <match src="uint256: uint256 [50981,50988]" dest="uint256: uint256 [51596,51603]"/>
  <match src="expression_statement [34346,34348]" dest="expression_statement [34346,34348]"/>
  <match src="(: ( [51819,51820]" dest="(: ( [52551,52552]"/>
  <match src="(: ( [24828,24829]" dest="(: ( [24828,24829]"/>
  <match src="event_paramater [2360,2372]" dest="event_paramater [2360,2372]"/>
  <match src="function_body [23043,23122]" dest="function_body [23043,23122]"/>
  <match src="event_paramater [1703,1716]" dest="event_paramater [1703,1716]"/>
  <match src="return_type_definition [37369,37386]" dest="return_type_definition [37369,37386]"/>
  <match src="function_body [24447,25282]" dest="function_body [24447,25282]"/>
  <match src="number_literal: 1 [50397,50398]" dest="number_literal: 1 [51012,51013]"/>
  <match src="type_name [29128,29135]" dest="type_name [29128,29135]"/>
  <match src="identifier: item [39720,39724]" dest="identifier: item [39720,39724]"/>
  <match src="type_name [6099,6106]" dest="type_name [6099,6106]"/>
  <match src="identifier: length [12964,12970]" dest="identifier: length [12964,12970]"/>
  <match src="call_argument [23650,23656]" dest="call_argument [23650,23656]"/>
  <match src="&quot;: &quot; [48203,48204]" dest="&quot;: &quot; [48818,48819]"/>
  <match src="identifier: length [24840,24846]" dest="identifier: length [24840,24846]"/>
  <match src="identifier: STRING_LONG_START [34741,34758]" dest="identifier: STRING_LONG_START [34741,34758]"/>
  <match src="return_statement [36544,36556]" dest="return_statement [36544,36556]"/>
  <match src=",: , [30365,30366]" dest=",: , [30365,30366]"/>
  <match src="user_defined_type [37334,37341]" dest="user_defined_type [37334,37341]"/>
  <match src="primitive_type [44950,44957]" dest="primitive_type [44948,44955]"/>
  <match src="member_expression [33390,33412]" dest="member_expression [33390,33412]"/>
  <match src="yul_decimal_number: 1 [40592,40593]" dest="yul_decimal_number: 1 [40592,40593]"/>
  <match src="): ) [37300,37301]" dest="): ) [37300,37301]"/>
  <match src="+: + [36114,36115]" dest="+: + [36114,36115]"/>
  <match src="function_definition [22523,22696]" dest="function_definition [22523,22696]"/>
  <match src="{: { [24852,24853]" dest="{: { [24852,24853]"/>
  <match src="identifier: this [52196,52200]" dest="identifier: this [52928,52932]"/>
  <match src="function_definition [30330,30468]" dest="function_definition [30330,30468]"/>
  <match src="yul_function_call [36893,36910]" dest="yul_function_call [36893,36910]"/>
  <match src="type_name [50341,50360]" dest="type_name [50956,50975]"/>
  <match src=".: . [35164,35165]" dest=".: . [35164,35165]"/>
  <match src="(: ( [16435,16436]" dest="(: ( [16435,16436]"/>
  <match src="(: ( [52169,52170]" dest="(: ( [52901,52902]"/>
  <match src="identifier: balanceOfBatch [2884,2898]" dest="identifier: balanceOfBatch [2884,2898]"/>
  <match src="solidity: solidity [104,112]" dest="solidity: solidity [104,112]"/>
  <match src="return_type_definition [16844,16861]" dest="return_type_definition [16844,16861]"/>
  <match src=",: , [29320,29321]" dest=",: , [29320,29321]"/>
  <match src="type_name [18428,18435]" dest="type_name [18428,18435]"/>
  <match src="function_body [13308,14780]" dest="function_body [13308,14780]"/>
  <match src="identifier: balanceOfBatch [52297,52311]" dest="identifier: balanceOfBatch [53029,53043]"/>
  <match src="primitive_type [21612,21616]" dest="primitive_type [21612,21616]"/>
  <match src="returns: returns [24424,24431]" dest="returns: returns [24424,24431]"/>
  <match src="yul_identifier [25140,25150]" dest="yul_identifier [25140,25150]"/>
  <match src="=: = [44504,44505]" dest="=: = [44504,44505]"/>
  <match src="primitive_type [37802,37809]" dest="primitive_type [37802,37809]"/>
  <match src="number_literal: 0 [51858,51859]" dest="number_literal: 0 [52590,52591]"/>
  <match src="variable_declaration_statement [38998,39035]" dest="variable_declaration_statement [38998,39035]"/>
  <match src="contract_body [27784,33876]" dest="contract_body [27784,33876]"/>
  <match src="identifier: result [36799,36805]" dest="identifier: result [36799,36805]"/>
  <match src="identifier: target [24343,24349]" dest="identifier: target [24343,24349]"/>
  <match src="state_mutability [14925,14929]" dest="state_mutability [14925,14929]"/>
  <match src=".: . [33571,33572]" dest=".: . [33571,33572]"/>
  <match src="binary_expression [37819,37839]" dest="binary_expression [37819,37839]"/>
  <match src="primitive_type [34772,34777]" dest="primitive_type [34772,34777]"/>
  <match src="string_literal [37225,37260]" dest="string_literal [37225,37260]"/>
  <match src="identifier: ERC1155Receiver [44803,44818]" dest="identifier: ERC1155Receiver [44801,44816]"/>
  <match src="identifier: to [1423,1425]" dest="identifier: to [1423,1425]"/>
  <match src="-: - [40927,40928]" dest="-: - [40927,40928]"/>
  <match src="&lt;: &lt; [40323,40324]" dest="&lt;: &lt; [40323,40324]"/>
  <match src="if_statement [33555,33666]" dest="if_statement [33555,33666]"/>
  <match src="yul_path [41222,41229]" dest="yul_path [41222,41229]"/>
  <match src="function_definition [30657,30771]" dest="function_definition [30657,30771]"/>
  <match src="uint256: uint256 [1439,1446]" dest="uint256: uint256 [1439,1446]"/>
  <match src="user_defined_type [35120,35127]" dest="user_defined_type [35120,35127]"/>
  <match src="): ) [19875,19876]" dest="): ) [19875,19876]"/>
  <match src="member_expression [33435,33457]" dest="member_expression [33435,33457]"/>
  <match src="function_body [35543,36168]" dest="function_body [35543,36168]"/>
  <match src="call_argument [37625,37666]" dest="call_argument [37625,37666]"/>
  <match src="uint256: uint256 [24370,24377]" dest="uint256: uint256 [24370,24377]"/>
  <match src="primitive_type [50767,50774]" dest="primitive_type [51382,51389]"/>
  <match src="is: is [44773,44775]" dest="is: is [44771,44773]"/>
  <match src=",: , [21409,21410]" dest=",: , [21409,21410]"/>
  <match src="identifier: account [32329,32336]" dest="identifier: account [32329,32336]"/>
  <match src="solidity_pragma_token [42950,42964]" dest="solidity_pragma_token [42950,42964]"/>
  <match src="address: address [16029,16036]" dest="address: address [16029,16036]"/>
  <match src="(: ( [25131,25132]" dest="(: ( [25131,25132]"/>
  <match src="identifier: set [18980,18983]" dest="identifier: set [18980,18983]"/>
  <match src="identifier: account [32286,32293]" dest="identifier: account [32286,32293]"/>
  <match src="pure: pure [48049,48053]" dest="pure: pure [48664,48668]"/>
  <match src="visibility [44958,44964]" dest="visibility [44956,44962]"/>
  <match src=",: , [40590,40591]" dest=",: , [40590,40591]"/>
  <match src="): ) [14915,14916]" dest="): ) [14915,14916]"/>
  <match src="member_expression [29384,29404]" dest="member_expression [29384,29404]"/>
  <match src="): ) [24211,24212]" dest="): ) [24211,24212]"/>
  <match src="type_name [1683,1690]" dest="type_name [1683,1690]"/>
  <match src="visibility [16366,16374]" dest="visibility [16366,16374]"/>
  <match src=":=: := [41230,41232]" dest=":=: := [41230,41232]"/>
  <match src="parameter [8501,8517]" dest="parameter [8501,8517]"/>
  <match src="}: } [42875,42876]" dest="}: } [42875,42876]"/>
  <match src="call_argument [10801,10802]" dest="call_argument [10801,10802]"/>
  <match src="user_defined_type [28003,28011]" dest="user_defined_type [28003,28011]"/>
  <match src="primitive_type [33054,33061]" dest="primitive_type [33054,33061]"/>
  <match src="address: address [37281,37288]" dest="address: address [37281,37288]"/>
  <match src="call_argument [52196,52200]" dest="call_argument [52928,52932]"/>
  <match src="visibility [37045,37053]" dest="visibility [37045,37053]"/>
  <match src="identifier: amount [4232,4238]" dest="identifier: amount [4232,4238]"/>
  <match src="=: = [36389,36390]" dest="=: = [36389,36390]"/>
  <match src="solidity_version:  0.6.6 [44726,44732]" dest="solidity_version:  0.6.6 [44726,44732]"/>
  <match src="identifier: RLPReader [34662,34671]" dest="identifier: RLPReader [34662,34671]"/>
  <match src="identifier: size [48016,48020]" dest="identifier: size [48631,48635]"/>
  <match src="return_statement [24708,24726]" dest="return_statement [24708,24726]"/>
  <match src="type_name [2899,2908]" dest="type_name [2899,2908]"/>
  <match src=":=: := [41115,41117]" dest=":=: := [41115,41117]"/>
  <match src="return: return [37274,37280]" dest="return: return [37274,37280]"/>
  <match src="public: public [28044,28050]" dest="public: public [28044,28050]"/>
  <match src="parameter [8682,8688]" dest="parameter [8682,8688]"/>
  <match src="(: ( [17371,17372]" dest="(: ( [17371,17372]"/>
  <match src="{: { [36341,36342]" dest="{: { [36341,36342]"/>
  <match src="(: ( [45649,45650]" dest="(: ( [45647,45648]"/>
  <match src="{: { [18950,18951]" dest="{: { [18950,18951]"/>
  <match src="identifier: id [51728,51730]" dest="identifier: id [52460,52462]"/>
  <match src="comment: // Delete the index for the deleted slot [14608,14648]" dest="comment: // Delete the index for the deleted slot [14608,14648]"/>
  <match src="identifier: set [15559,15562]" dest="identifier: set [15559,15562]"/>
  <match src="identifier: depositor [43671,43680]" dest="identifier: depositor [43671,43680]"/>
  <match src="boolean_literal [14712,14716]" dest="boolean_literal [14712,14716]"/>
  <match src="uint256: uint256 [48939,48946]" dest="uint256: uint256 [49554,49561]"/>
  <match src="identifier: approved [1977,1985]" dest="identifier: approved [1977,1985]"/>
  <match src="identifier: LIST_LONG_START [34832,34847]" dest="identifier: LIST_LONG_START [34832,34847]"/>
  <match src="return: return [36521,36527]" dest="return: return [36521,36527]"/>
  <match src="boolean_literal [14756,14761]" dest="boolean_literal [14756,14761]"/>
  <match src="expression_statement [33113,33139]" dest="expression_statement [33113,33139]"/>
  <match src="bytes32: bytes32 [14902,14909]" dest="bytes32: bytes32 [14902,14909]"/>
  <match src="member_expression [38916,38927]" dest="member_expression [38916,38927]"/>
  <match src="call_expression [48226,48340]" dest="call_expression [48841,48955]"/>
  <match src="call_argument [15629,15655]" dest="call_argument [15629,15655]"/>
  <match src="function_body [26016,26052]" dest="function_body [26016,26052]"/>
  <match src="yul_function_call [41137,41163]" dest="yul_function_call [41137,41163]"/>
  <match src=",: , [2372,2373]" dest=",: , [2372,2373]"/>
  <match src="identifier: listLength [35722,35732]" dest="identifier: listLength [35722,35732]"/>
  <match src="visibility [34096,34104]" dest="visibility [34096,34104]"/>
  <match src="yul_block [37987,38066]" dest="yul_block [37987,38066]"/>
  <match src="function_definition [8459,8690]" dest="function_definition [8459,8690]"/>
  <match src="uint256: uint256 [49004,49011]" dest="uint256: uint256 [49619,49626]"/>
  <match src="identifier: success [24597,24604]" dest="identifier: success [24597,24604]"/>
  <match src="): ) [12791,12792]" dest="): ) [12791,12792]"/>
  <match src=".: . [35338,35339]" dest=".: . [35338,35339]"/>
  <match src="): ) [52529,52530]" dest="): ) [53261,53262]"/>
  <match src="parameter [16384,16388]" dest="parameter [16384,16388]"/>
  <match src="parameter [2928,2950]" dest="parameter [2928,2950]"/>
  <match src="internal: internal [26080,26088]" dest="internal: internal [26080,26088]"/>
  <match src="(: ( [48233,48234]" dest="(: ( [48848,48849]"/>
  <match src="contract_declaration [10651,10918]" dest="contract_declaration [10651,10918]"/>
  <match src="identifier: byte0 [41467,41472]" dest="identifier: byte0 [41467,41472]"/>
  <match src="}: } [38109,38110]" dest="}: } [38109,38110]"/>
  <match src="identifier: _revertMsg [34027,34037]" dest="identifier: _revertMsg [34027,34037]"/>
  <match src="): ) [47291,47292]" dest="): ) [47289,47290]"/>
  <match src="yul_identifier [41154,41161]" dest="yul_identifier [41154,41161]"/>
  <match src="return_statement [18492,18519]" dest="return_statement [18492,18519]"/>
  <match src="number_literal: 1 [41882,41883]" dest="number_literal: 1 [41882,41883]"/>
  <match src="(: ( [38672,38673]" dest="(: ( [38672,38673]"/>
  <match src="identifier: index [15650,15655]" dest="identifier: index [15650,15655]"/>
  <match src="(: ( [51549,51550]" dest="(: ( [52169,52170]"/>
  <match src="parameter [36335,36339]" dest="parameter [36335,36339]"/>
  <match src="binary_expression [42614,42636]" dest="binary_expression [42614,42636]"/>
  <match src="type_name [1921,1928]" dest="type_name [1921,1928]"/>
  <match src="(: ( [46392,46393]" dest="(: ( [46390,46391]"/>
  <match src="return_statement [36147,36161]" dest="return_statement [36147,36161]"/>
  <match src="type_name [51926,51933]" dest="type_name [52658,52665]"/>
  <match src="identifier: _inner [16664,16670]" dest="identifier: _inner [16664,16670]"/>
  <match src="identifier: _length [15090,15097]" dest="identifier: _length [15090,15097]"/>
  <match src="identifier: set [16825,16828]" dest="identifier: set [16825,16828]"/>
  <match src=".: . [49275,49276]" dest=".: . [49890,49891]"/>
  <match src="return_type_definition [48063,48089]" dest="return_type_definition [48678,48704]"/>
  <match src="): ) [18085,18086]" dest="): ) [18085,18086]"/>
  <match src="solidity_pragma_token [104,119]" dest="solidity_pragma_token [104,119]"/>
  <match src="type_name [7386,7391]" dest="type_name [7386,7391]"/>
  <match src="type_name [45095,45102]" dest="type_name [45093,45100]"/>
  <match src="uint256: uint256 [37537,37544]" dest="uint256: uint256 [37537,37544]"/>
  <match src="user_defined_type [38673,38680]" dest="user_defined_type [38673,38680]"/>
  <match src="address: address [52615,52622]" dest="address: address [53347,53354]"/>
  <match src="identifier: item [37749,37753]" dest="identifier: item [37749,37753]"/>
  <match src="&quot;: &quot; [24516,24517]" dest="&quot;: &quot; [24516,24517]"/>
  <match src="identifier: role [29144,29148]" dest="identifier: role [29144,29148]"/>
  <match src="comment: // File: @openzeppelin/contracts/GSN/Context.sol [25289,25337]" dest="comment: // File: @openzeppelin/contracts/GSN/Context.sol [25289,25337]"/>
  <match src="yul_hex_number: 0xf7 [41036,41040]" dest="yul_hex_number: 0xf7 [41036,41040]"/>
  <match src=".: . [16094,16095]" dest=".: . [16094,16095]"/>
  <match src=",: , [40732,40733]" dest=",: , [40732,40733]"/>
  <match src="comment: // We read and store the value's index to prevent multiple reads from the same storage slot [13319,13410]" dest="comment: // We read and store the value's index to prevent multiple reads from the same storage slot [13319,13410]"/>
  <match src="primitive_type [46017,46022]" dest="primitive_type [46015,46020]"/>
  <match src="primitive_type [19871,19875]" dest="primitive_type [19871,19875]"/>
  <match src="): ) [52627,52628]" dest="): ) [53359,53360]"/>
  <match src="primitive_type [44492,44496]" dest="primitive_type [44492,44496]"/>
  <match src="): ) [38048,38049]" dest="): ) [38048,38049]"/>
  <match src="uint256: uint256 [35926,35933]" dest="uint256: uint256 [35926,35933]"/>
  <match src="parameter [16806,16828]" dest="parameter [16806,16828]"/>
  <match src="uint256: uint256 [18219,18226]" dest="uint256: uint256 [18219,18226]"/>
  <match src="string_literal [51780,51782]" dest="string_literal [52512,52514]"/>
  <match src="member_expression [24139,24160]" dest="member_expression [24139,24160]"/>
  <match src="else: else [41762,41766]" dest="else: else [41762,41766]"/>
  <match src="identifier: tokenBalances [48915,48928]" dest="identifier: tokenBalances [49530,49543]"/>
  <match src="=: = [34804,34805]" dest="=: = [34804,34805]"/>
  <match src="type_name [37537,37544]" dest="type_name [37537,37544]"/>
  <match src="primitive_type [1683,1690]" dest="primitive_type [1683,1690]"/>
  <match src="returns: returns [41430,41437]" dest="returns: returns [41430,41437]"/>
  <match src="}: } [19009,19010]" dest="}: } [19009,19010]"/>
  <match src="identifier: toBeMintedAmounts [49658,49675]" dest="identifier: toBeMintedAmounts [50273,50290]"/>
  <match src=".: . [26037,26038]" dest=".: . [26037,26038]"/>
  <match src="yul_assignment [36437,36468]" dest="yul_assignment [36437,36468]"/>
  <match src="memory: memory [47144,47150]" dest="memory: memory [47142,47148]"/>
  <match src="(: ( [38596,38597]" dest="(: ( [38596,38597]"/>
  <match src="string [52730,52732]" dest="string [53462,53464]"/>
  <match src="=: = [39018,39019]" dest="=: = [39018,39019]"/>
  <match src="call_argument [45784,45790]" dest="call_argument [45782,45788]"/>
  <match src="=: = [40294,40295]" dest="=: = [40294,40295]"/>
  <match src="visibility [41417,41424]" dest="visibility [41417,41424]"/>
  <match src="&quot;: &quot; [32354,32355]" dest="&quot;: &quot; [32354,32355]"/>
  <match src="identifier: hasRole [29300,29307]" dest="identifier: hasRole [29300,29307]"/>
  <match src="identifier: toList [50322,50328]" dest="identifier: toList [50937,50943]"/>
  <match src=",: , [42777,42778]" dest=",: , [42777,42778]"/>
  <match src="primitive_type [22561,22566]" dest="primitive_type [22561,22566]"/>
  <match src="identifier: RLPItem [35326,35333]" dest="identifier: RLPItem [35326,35333]"/>
  <match src="uint256: uint256 [50898,50905]" dest="uint256: uint256 [51513,51520]"/>
  <match src="primitive_type [13270,13277]" dest="primitive_type [13270,13277]"/>
  <match src="returns: returns [2649,2656]" dest="returns: returns [2649,2656]"/>
  <match src="identifier: _itemLength [36013,36024]" dest="identifier: _itemLength [36013,36024]"/>
  <match src="parameter [8551,8573]" dest="parameter [8551,8573]"/>
  <match src="modifier_invocation [46977,46995]" dest="modifier_invocation [46975,46993]"/>
  <match src="call_argument [33826,33830]" dest="call_argument [33826,33830]"/>
  <match src="uint256: uint256 [23563,23570]" dest="uint256: uint256 [23563,23570]"/>
  <match src="return: return [39975,39981]" dest="return: return [39975,39981]"/>
  <match src="): ) [51593,51594]" dest="): ) [52325,52326]"/>
  <match src="identifier: require [37593,37600]" dest="identifier: require [37593,37600]"/>
  <match src="yul_function_call [38028,38050]" dest="yul_function_call [38028,38050]"/>
  <match src="identifier: RoleGranted [33614,33625]" dest="identifier: RoleGranted [33614,33625]"/>
  <match src="(: ( [35448,35449]" dest="(: ( [35448,35449]"/>
  <match src="(: ( [48418,48419]" dest="(: ( [49033,49034]"/>
  <match src="false: false [36528,36533]" dest="false: false [36528,36533]"/>
  <match src="=: = [38255,38256]" dest="=: = [38255,38256]"/>
  <match src="identifier: sender [29191,29197]" dest="identifier: sender [29191,29197]"/>
  <match src="variable_declaration_statement [49197,49294]" dest="variable_declaration_statement [49812,49909]"/>
  <match src="add: add [40806,40809]" dest="add: add [40806,40809]"/>
  <match src="yul_evm_builtin [38591,38596]" dest="yul_evm_builtin [38591,38596]"/>
  <match src="(: ( [1358,1359]" dest="(: ( [1358,1359]"/>
  <match src="primitive_type [23528,23535]" dest="primitive_type [23528,23535]"/>
  <match src="): ) [31251,31252]" dest="): ) [31251,31252]"/>
  <match src="^: ^ [10831,10832]" dest="^: ^ [10831,10832]"/>
  <match src="uint256: uint256 [24045,24052]" dest="uint256: uint256 [24045,24052]"/>
  <match src="type_name [1703,1710]" dest="type_name [1703,1710]"/>
  <match src="type_name [27907,27931]" dest="type_name [27907,27931]"/>
  <match src="identifier: functionCallWithValue [23988,24009]" dest="identifier: functionCallWithValue [23988,24009]"/>
  <match src="=: = [47237,47238]" dest="=: = [47235,47236]"/>
  <match src="identifier: _ [44599,44600]" dest="identifier: _ [44599,44600]"/>
  <match src="type_name [33505,33512]" dest="type_name [33505,33512]"/>
  <match src="): ) [41134,41135]" dest="): ) [41134,41135]"/>
  <match src="call_argument [36956,36964]" dest="call_argument [36956,36964]"/>
  <match src="string_literal [38830,38872]" dest="string_literal [38830,38872]"/>
  <match src="(: ( [42826,42827]" dest="(: ( [42826,42827]"/>
  <match src="comment: /**  * _Available since v3.1._  */ [6335,6371]" dest="comment: /**  * _Available since v3.1._  */ [6335,6371]"/>
  <match src="==: == [49076,49078]" dest="==: == [49691,49693]"/>
  <match src="call_argument [51699,51709]" dest="call_argument [52431,52441]"/>
  <match src="identifier: functionCallWithValue [23506,23527]" dest="identifier: functionCallWithValue [23506,23527]"/>
  <match src="identifier: remove [16320,16326]" dest="identifier: remove [16320,16326]"/>
  <match src="primitive_type [22983,22989]" dest="primitive_type [22983,22989]"/>
  <match src="(: ( [31116,31117]" dest="(: ( [31116,31117]"/>
  <match src="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [20438,21359]" dest="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [20438,21359]"/>
  <match src="string_literal [39882,39928]" dest="string_literal [39882,39928]"/>
  <match src="primitive_type [3569,3573]" dest="primitive_type [3569,3573]"/>
  <match src="address: address [16351,16358]" dest="address: address [16351,16358]"/>
  <match src="call_argument [34165,34193]" dest="call_argument [34165,34193]"/>
  <match src="identifier: codehash [20327,20335]" dest="identifier: codehash [20327,20335]"/>
  <match src="parameter [42181,42192]" dest="parameter [42181,42192]"/>
  <match src="binary_expression [49681,49717]" dest="binary_expression [50296,50332]"/>
  <match src="parameter [30679,30691]" dest="parameter [30679,30691]"/>
  <match src="identifier: set [14963,14966]" dest="identifier: set [14963,14966]"/>
  <match src="identifier: balanceOf [51183,51192]" dest="identifier: balanceOf [51798,51807]"/>
  <match src="primitive_type [52043,52050]" dest="primitive_type [52775,52782]"/>
  <match src="(: ( [36290,36291]" dest="(: ( [36290,36291]"/>
  <match src="type_name [46208,46215]" dest="type_name [46206,46213]"/>
  <match src="parameter [13270,13283]" dest="parameter [13270,13283]"/>
  <match src="type_name [40152,40159]" dest="type_name [40152,40159]"/>
  <match src="): ) [34237,34238]" dest="): ) [34237,34238]"/>
  <match src=",: , [46006,46007]" dest=",: , [46004,46005]"/>
  <match src="binary_expression [14963,14987]" dest="binary_expression [14963,14987]"/>
  <match src="bytes4: bytes4 [8682,8688]" dest="bytes4: bytes4 [8682,8688]"/>
  <match src="variable_declaration_statement [50341,50409]" dest="variable_declaration_statement [50956,51024]"/>
  <match src="&quot;: &quot; [48328,48329]" dest="&quot;: &quot; [48943,48944]"/>
  <match src="identifier: set [18291,18294]" dest="identifier: set [18291,18294]"/>
  <match src=".: . [18983,18984]" dest=".: . [18983,18984]"/>
  <match src="uint256: uint256 [47275,47282]" dest="uint256: uint256 [47273,47280]"/>
  <match src="identifier: toUintStrict [38159,38171]" dest="identifier: toUintStrict [38159,38171]"/>
  <match src="constructor_definition [10720,10915]" dest="constructor_definition [10720,10915]"/>
  <match src="comment: // Position of the value in the `values` array, plus 1 because index 0 [12298,12368]" dest="comment: // Position of the value in the `values` array, plus 1 because index 0 [12298,12368]"/>
  <match src="yul_path [36437,36442]" dest="yul_path [36437,36442]"/>
  <match src="primitive_type [49533,49540]" dest="primitive_type [50148,50155]"/>
  <match src="return_statement [17345,17393]" dest="return_statement [17345,17393]"/>
  <match src=",: , [4791,4792]" dest=",: , [4791,4792]"/>
  <match src="comment: // The easiest way to bubble the revert reason is using memory via assembly [24871,24946]" dest="comment: // The easiest way to bubble the revert reason is using memory via assembly [24871,24946]"/>
  <match src="(: ( [52729,52730]" dest="(: ( [53461,53462]"/>
  <match src="internal: internal [10312,10320]" dest="internal: internal [10312,10320]"/>
  <match src="variable_declaration_tuple [24591,24630]" dest="variable_declaration_tuple [24591,24630]"/>
  <match src="virtual: virtual [26094,26101]" dest="virtual: virtual [26094,26101]"/>
  <match src="call_argument [38324,38372]" dest="call_argument [38324,38372]"/>
  <match src="array_access [29694,29706]" dest="array_access [29694,29706]"/>
  <match src="primitive_type [51774,51779]" dest="primitive_type [52506,52511]"/>
  <match src="pragma: pragma [19103,19109]" dest="pragma: pragma [19103,19109]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [24966,25013]" dest="comment: // solhint-disable-next-line no-inline-assembly [24966,25013]"/>
  <match src="identifier: getRoleMemberCount [29613,29631]" dest="identifier: getRoleMemberCount [29613,29631]"/>
  <match src="type_name [38742,38749]" dest="type_name [38742,38749]"/>
  <match src="call_expression [29694,29723]" dest="call_expression [29694,29723]"/>
  <match src="identifier: returndata [24619,24629]" dest="identifier: returndata [24619,24629]"/>
  <match src="{: { [41492,41493]" dest="{: { [41492,41493]"/>
  <match src="type_name [35520,35527]" dest="type_name [35520,35527]"/>
  <match src="identifier: itemLength [38244,38254]" dest="identifier: itemLength [38244,38254]"/>
  <match src="memory: memory [24067,24073]" dest="memory: memory [24067,24073]"/>
  <match src=",: , [51946,51947]" dest=",: , [52678,52679]"/>
  <match src="): ) [25150,25151]" dest="): ) [25150,25151]"/>
  <match src="(: ( [33625,33626]" dest="(: ( [33625,33626]"/>
  <match src="+: + [37831,37832]" dest="+: + [37831,37832]"/>
  <match src="comment: /* 32 byte word size */ [40642,40665]" dest="comment: /* 32 byte word size */ [40642,40665]"/>
  <match src="yul_function_call [25086,25103]" dest="yul_function_call [25086,25103]"/>
  <match src="(: ( [24591,24592]" dest="(: ( [24591,24592]"/>
  <match src="[: [ [15723,15724]" dest="[: [ [15723,15724]"/>
  <match src="identifier: require [38412,38419]" dest="identifier: require [38412,38419]"/>
  <match src="return_statement [16873,16900]" dest="return_statement [16873,16900]"/>
  <match src="{: { [27784,27785]" dest="{: { [27784,27785]"/>
  <match src="solidity: solidity [34635,34643]" dest="solidity: solidity [34635,34643]"/>
  <match src="uint256: uint256 [45566,45573]" dest="uint256: uint256 [45564,45571]"/>
  <match src="}: } [30467,30468]" dest="}: } [30467,30468]"/>
  <match src="add: add [36893,36896]" dest="add: add [36893,36896]"/>
  <match src="user_defined_type [39353,39360]" dest="user_defined_type [39353,39360]"/>
  <match src="is: is [6400,6402]" dest="is: is [6400,6402]"/>
  <match src="variable_declaration_statement [36840,36852]" dest="variable_declaration_statement [36840,36852]"/>
  <match src="(: ( [37474,37475]" dest="(: ( [37474,37475]"/>
  <match src="]: ] [48361,48362]" dest="]: ] [48976,48977]"/>
  <match src="visibility [45029,45035]" dest="visibility [45027,45033]"/>
  <match src="type_name [34861,34866]" dest="type_name [34861,34866]"/>
  <match src="string_literal [45068,45085]" dest="string_literal [45066,45083]"/>
  <match src="type_name [24592,24596]" dest="type_name [24592,24596]"/>
  <match src="address: address [50509,50516]" dest="address: address [51124,51131]"/>
  <match src="): ) [18232,18233]" dest="): ) [18232,18233]"/>
  <match src="uint256: uint256 [5458,5465]" dest="uint256: uint256 [5458,5465]"/>
  <match src="(: ( [37067,37068]" dest="(: ( [37067,37068]"/>
  <match src="type_name [50429,50434]" dest="type_name [51044,51049]"/>
  <match src="identifier: ERC1155Receiver [10669,10684]" dest="identifier: ERC1155Receiver [10669,10684]"/>
  <match src="identifier: IERC1155 [1183,1191]" dest="identifier: IERC1155 [1183,1191]"/>
  <match src="{: { [34005,34006]" dest="{: { [34005,34006]"/>
  <match src=".: . [21639,21640]" dest=".: . [21639,21640]"/>
  <match src="parameter [41401,41415]" dest="parameter [41401,41415]"/>
  <match src="returns: returns [37369,37376]" dest="returns: returns [37369,37376]"/>
  <match src="inheritance_specifier [44825,44843]" dest="inheritance_specifier [44823,44841]"/>
  <match src="identifier: encodePacked [34140,34152]" dest="identifier: encodePacked [34140,34152]"/>
  <match src="&quot;: &quot; [45368,45369]" dest="&quot;: &quot; [45366,45367]"/>
  <match src=",: , [31620,31621]" dest=",: , [31620,31621]"/>
  <match src="return: return [38089,38095]" dest="return: return [38089,38095]"/>
  <match src="identifier: i [49574,49575]" dest="identifier: i [50189,50190]"/>
  <match src="primitive_type [9284,9290]" dest="primitive_type [9284,9290]"/>
  <match src="primitive_type [2623,2630]" dest="primitive_type [2623,2630]"/>
  <match src="parameter [45981,45988]" dest="parameter [45979,45986]"/>
  <match src=".: . [33579,33580]" dest=".: . [33579,33580]"/>
  <match src=".: . [18510,18511]" dest=".: . [18510,18511]"/>
  <match src="}: } [37309,37310]" dest="}: } [37309,37310]"/>
  <match src="(: ( [51648,51649]" dest="(: ( [52380,52381]"/>
  <match src="comment: /**      * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to      * `approved`.      */ [1744,1894]" dest="comment: /**      * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to      * `approved`.      */ [1744,1894]"/>
  <match src="identifier: errorMessage [22997,23009]" dest="identifier: errorMessage [22997,23009]"/>
  <match src="+: + [40394,40395]" dest="+: + [40394,40395]"/>
  <match src="state_mutability [18458,18462]" dest="state_mutability [18458,18462]"/>
  <match src="identifier: dest [42166,42170]" dest="identifier: dest [42166,42170]"/>
  <match src="[: [ [52039,52040]" dest="[: [ [52771,52772]"/>
  <match src="bytes: bytes [24026,24031]" dest="bytes: bytes [24026,24031]"/>
  <match src="call_argument [52512,52514]" dest="call_argument [53244,53246]"/>
  <match src="contract_body [44485,44635]" dest="contract_body [44485,44635]"/>
  <match src="returns: returns [37059,37066]" dest="returns: returns [37059,37066]"/>
  <match src="address: address [51193,51200]" dest="address: address [51808,51815]"/>
  <match src="return_statement [48507,48524]" dest="return_statement [49122,49139]"/>
  <match src="call_expression [47477,47504]" dest="call_expression [47475,47502]"/>
  <match src="identifier: _contains [16650,16659]" dest="identifier: _contains [16650,16659]"/>
  <match src="uint256: uint256 [51154,51161]" dest="uint256: uint256 [51769,51776]"/>
  <match src="identifier: amounts [51965,51972]" dest="identifier: amounts [52697,52704]"/>
  <match src=".: . [14577,14578]" dest=".: . [14577,14578]"/>
  <match src="identifier: toUint [37327,37333]" dest="identifier: toUint [37327,37333]"/>
  <match src="): ) [10863,10864]" dest="): ) [10863,10864]"/>
  <match src="binary_expression [42312,42328]" dest="binary_expression [42312,42328]"/>
  <match src=":=: := [41066,41068]" dest=":=: := [41066,41068]"/>
  <match src="=: = [24631,24632]" dest="=: = [24631,24632]"/>
  <match src="yul_evm_builtin [25132,25135]" dest="yul_evm_builtin [25132,25135]"/>
  <match src="bytes4: bytes4 [10292,10298]" dest="bytes4: bytes4 [10292,10298]"/>
  <match src="call_argument [16688,16693]" dest="call_argument [16688,16693]"/>
  <match src="identifier: this [52623,52627]" dest="identifier: this [53355,53359]"/>
  <match src="}: } [39219,39220]" dest="}: } [39219,39220]"/>
  <match src="call_expression [49033,49184]" dest="call_expression [49648,49799]"/>
  <match src="indexed: indexed [1415,1422]" dest="indexed: indexed [1415,1422]"/>
  <match src="{: { [25209,25210]" dest="{: { [25209,25210]"/>
  <match src="identifier: set [16888,16891]" dest="identifier: set [16888,16891]"/>
  <match src="identifier: listLength [38806,38816]" dest="identifier: listLength [38806,38816]"/>
  <match src="^:  ^ [25391,25393]" dest="^:  ^ [25391,25393]"/>
  <match src="variable_declaration_statement [41459,41473]" dest="variable_declaration_statement [41459,41473]"/>
  <match src="&quot;: &quot; [52730,52731]" dest="&quot;: &quot; [53462,53463]"/>
  <match src="bytes: bytes [4793,4798]" dest="bytes: bytes [4793,4798]"/>
  <match src="]: ] [46281,46282]" dest="]: ] [46279,46280]"/>
  <match src="identifier: MANAGER_ROLE [46982,46994]" dest="identifier: MANAGER_ROLE [46980,46992]"/>
  <match src="address: address [50488,50495]" dest="address: address [51103,51110]"/>
  <match src="(: ( [37405,37406]" dest="(: ( [37405,37406]"/>
  <match src="primitive_type [24026,24031]" dest="primitive_type [24026,24031]"/>
  <match src="]: ] [36055,36056]" dest="]: ] [36055,36056]"/>
  <match src="identifier: require [37088,37095]" dest="identifier: require [37088,37095]"/>
  <match src="identifier: result [39011,39017]" dest="identifier: result [39011,39017]"/>
  <match src="identifier: logData [50442,50449]" dest="identifier: logData [51057,51064]"/>
  <match src="call_argument [23664,23669]" dest="call_argument [23664,23669]"/>
  <match src="false [14756,14761]" dest="false [14756,14761]"/>
  <match src="): ) [49577,49578]" dest="): ) [50192,50193]"/>
  <match src="comment: // forcing batch deposit since supporting both single and batch deposit introduces too much complexity [47007,47109]" dest="comment: // forcing batch deposit since supporting both single and batch deposit introduces too much complexity [47005,47107]"/>
  <match src="identifier: operator [7299,7307]" dest="identifier: operator [7299,7307]"/>
  <match src="member_expression [47239,47249]" dest="member_expression [47237,47247]"/>
  <match src="identifier: add [17659,17662]" dest="identifier: add [17659,17662]"/>
  <match src="type_name [48353,48360]" dest="type_name [48968,48975]"/>
  <match src="): ) [33592,33593]" dest="): ) [33592,33593]"/>
  <match src="): ) [29197,29198]" dest="): ) [29197,29198]"/>
  <match src="(: ( [52031,52032]" dest="(: ( [52763,52764]"/>
  <match src="primitive_type [46208,46215]" dest="primitive_type [46206,46213]"/>
  <match src=",: , [48006,48007]" dest=",: , [48621,48622]"/>
  <match src="): ) [51908,51909]" dest="): ) [52640,52641]"/>
  <match src="): ) [17332,17333]" dest="): ) [17332,17333]"/>
  <match src="yul_evm_builtin [36446,36450]" dest="yul_evm_builtin [36446,36450]"/>
  <match src="identifier: target [22956,22962]" dest="identifier: target [22956,22962]"/>
  <match src="assembly_statement [37850,38077]" dest="assembly_statement [37850,38077]"/>
  <match src="primitive_type [24335,24342]" dest="primitive_type [24335,24342]"/>
  <match src="type_name [1439,1446]" dest="type_name [1439,1446]"/>
  <match src="uint256: uint256 [48898,48905]" dest="uint256: uint256 [49513,49520]"/>
  <match src="(: ( [1920,1921]" dest="(: ( [1920,1921]"/>
  <match src="call_expression [51531,51594]" dest="call_expression [52146,52326]"/>
  <match src=",: , [37109,37110]" dest=",: , [37109,37110]"/>
  <match src=".: . [14585,14586]" dest=".: . [14585,14586]"/>
  <match src="type_name [37024,37031]" dest="type_name [37024,37031]"/>
  <match src="}: } [25274,25275]" dest="}: } [25274,25275]"/>
  <match src="parameter [35051,35068]" dest="parameter [35051,35068]"/>
  <match src="yul_evm_builtin [42833,42835]" dest="yul_evm_builtin [42833,42835]"/>
  <match src="primitive_type [30679,30686]" dest="primitive_type [30679,30686]"/>
  <match src="call_argument [35778,35800]" dest="call_argument [35778,35800]"/>
  <match src="member_expression [14669,14681]" dest="member_expression [14669,14681]"/>
  <match src="): ) [42714,42715]" dest="): ) [42714,42715]"/>
  <match src="call_argument [35697,35702]" dest="call_argument [35697,35702]"/>
  <match src="parameter [9742,9760]" dest="parameter [9742,9760]"/>
  <match src="-: - [49702,49703]" dest="-: - [50317,50318]"/>
  <match src="public: public [31556,31562]" dest="public: public [31556,31562]"/>
  <match src=":=: := [36443,36445]" dest=":=: := [36443,36445]"/>
  <match src="string_literal [34165,34193]" dest="string_literal [34165,34193]"/>
  <match src="contract: contract [33960,33968]" dest="contract: contract [33960,33968]"/>
  <match src=",: , [1425,1426]" dest=",: , [1425,1426]"/>
  <match src="identifier: length [49566,49572]" dest="identifier: length [50181,50187]"/>
  <match src="call_expression [46377,46395]" dest="call_expression [46375,46393]"/>
  <match src="(: ( [46824,46825]" dest="(: ( [46822,46823]"/>
  <match src="identifier: EnumerableSet [11742,11755]" dest="identifier: EnumerableSet [11742,11755]"/>
  <match src="external: external [4814,4822]" dest="external: external [4814,4822]"/>
  <match src="): ) [34298,34299]" dest="): ) [34298,34299]"/>
  <match src="identifier: RLPItem [35120,35127]" dest="identifier: RLPItem [35120,35127]"/>
  <match src="modifier_definition [44520,44632]" dest="modifier_definition [44520,44632]"/>
  <match src="event: event [45385,45390]" dest="event: event [45383,45388]"/>
  <match src="visibility [31556,31562]" dest="visibility [31556,31562]"/>
  <match src="call_expression [49234,49293]" dest="call_expression [49849,49908]"/>
  <match src="(: ( [33755,33756]" dest="(: ( [33755,33756]"/>
  <match src="): ) [30459,30460]" dest="): ) [30459,30460]"/>
  <match src="if: if [13473,13475]" dest="if: if [13473,13475]"/>
  <match src="identifier: amounts [47611,47618]" dest="identifier: amounts [47609,47616]"/>
  <match src="(: ( [50971,50972]" dest="(: ( [51586,51587]"/>
  <match src="parenthesized_expression [42619,42636]" dest="parenthesized_expression [42619,42636]"/>
  <match src="return: return [42238,42244]" dest="return: return [42238,42244]"/>
  <match src="function: function [39335,39343]" dest="function: function [39335,39343]"/>
  <match src="identifier: _values [12773,12780]" dest="identifier: _values [12773,12780]"/>
  <match src="call_argument [31622,31634]" dest="call_argument [31622,31634]"/>
  <match src="identifier: RLPItem [36059,36066]" dest="identifier: RLPItem [36059,36066]"/>
  <match src="&lt;: &lt; [40264,40265]" dest="&lt;: &lt; [40264,40265]"/>
  <match src="parameter [21384,21409]" dest="parameter [21384,21409]"/>
  <match src="type_name [23029,23034]" dest="type_name [23029,23034]"/>
  <match src="(: ( [52622,52623]" dest="(: ( [53354,53355]"/>
  <match src="state_variable_declaration [45238,45377]" dest="state_variable_declaration [45236,45375]"/>
  <match src="identifier: memPtr [40076,40082]" dest="identifier: memPtr [40076,40082]"/>
  <match src="return_statement [15705,15731]" dest="return_statement [15705,15731]"/>
  <match src="(: ( [39152,39153]" dest="(: ( [39152,39153]"/>
  <match src="identifier: _indexes [14673,14681]" dest="identifier: _indexes [14673,14681]"/>
  <match src="comment: /// @notice Abstract interface that defines methods for custom predicates [43039,43112]" dest="comment: /// @notice Abstract interface that defines methods for custom predicates [43039,43112]"/>
  <match src="identifier: LIST_SHORT_START [36503,36519]" dest="identifier: LIST_SHORT_START [36503,36519]"/>
  <match src="identifier: length [35165,35171]" dest="identifier: length [35165,35171]"/>
  <match src="yul_path [39097,39104]" dest="yul_path [39097,39104]"/>
  <match src="variable_declaration [47134,47154]" dest="variable_declaration [47132,47152]"/>
  <match src="): ) [52052,52053]" dest="): ) [52784,52785]"/>
  <match src="view: view [15587,15591]" dest="view: view [15587,15591]"/>
  <match src="(: ( [35956,35957]" dest="(: ( [35956,35957]"/>
  <match src="assignment_expression [40911,40949]" dest="assignment_expression [40911,40949]"/>
  <match src="): ) [38692,38693]" dest="): ) [38692,38693]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [10542,10573]" dest="comment: // SPDX-License-Identifier: MIT [10542,10573]"/>
  <match src="identifier: ITokenPredicate [43124,43139]" dest="identifier: ITokenPredicate [43124,43139]"/>
  <match src="): ) [48214,48215]" dest="): ) [48829,48830]"/>
  <match src="primitive_type [38216,38223]" dest="primitive_type [38216,38223]"/>
  <match src="{: { [24743,24744]" dest="{: { [24743,24744]"/>
  <match src="): ) [47647,47648]" dest="): ) [47645,47646]"/>
  <match src=",: , [1437,1438]" dest=",: , [1437,1438]"/>
  <match src="type_name [4729,4736]" dest="type_name [4729,4736]"/>
  <match src="call_argument [33390,33412]" dest="call_argument [33390,33412]"/>
  <match src="identifier: target [23536,23542]" dest="identifier: target [23536,23542]"/>
  <match src="comment: // be a problem, due to implementation of mint logic for ERC1155 [49454,49518]" dest="comment: // be a problem, due to implementation of mint logic for ERC1155 [50069,50133]"/>
  <match src="type_name [8584,8593]" dest="type_name [8584,8593]"/>
  <match src="primitive_type [47286,47291]" dest="primitive_type [47284,47289]"/>
  <match src="internal: internal [16044,16052]" dest="internal: internal [16044,16052]"/>
  <match src="function_body [16068,16135]" dest="function_body [16068,16135]"/>
  <match src="!: ! [44562,44563]" dest="!: ! [44562,44563]"/>
  <match src="yul_path [42827,42831]" dest="yul_path [42827,42831]"/>
  <match src="primitive_type [14179,14186]" dest="primitive_type [14179,14186]"/>
  <match src="return: return [22621,22627]" dest="return: return [22621,22627]"/>
  <match src=",: , [43680,43681]" dest=",: , [43680,43681]"/>
  <match src="identifier: len [38949,38952]" dest="identifier: len [38949,38952]"/>
  <match src="identifier: _INTERFACE_ID_ERC165 [9529,9549]" dest="identifier: _INTERFACE_ID_ERC165 [9529,9549]"/>
  <match src=",: , [44569,44570]" dest=",: , [44569,44570]"/>
  <match src="assignment_expression [14316,14354]" dest="assignment_expression [14316,14354]"/>
  <match src="call_expression [48382,48401]" dest="call_expression [48997,49016]"/>
  <match src="]: ] [15729,15730]" dest="]: ] [15729,15730]"/>
  <match src="bytes32: bytes32 [18071,18078]" dest="bytes32: bytes32 [18071,18078]"/>
  <match src="[: [ [2935,2936]" dest="[: [ [2935,2936]"/>
  <match src="[: [ [50790,50791]" dest="[: [ [51405,51406]"/>
  <match src="type_name [36786,36791]" dest="type_name [36786,36791]"/>
  <match src="type_name [47208,47213]" dest="type_name [47206,47211]"/>
  <match src="yul_path [25092,25102]" dest="yul_path [25092,25102]"/>
  <match src="returns: returns [16053,16060]" dest="returns: returns [16053,16060]"/>
  <match src="primitive_type [18472,18479]" dest="primitive_type [18472,18479]"/>
  <match src="yul_hex_number: 0x20 [39112,39116]" dest="yul_hex_number: 0x20 [39112,39116]"/>
  <match src="variable_declaration_statement [48353,48402]" dest="variable_declaration_statement [48968,49017]"/>
  <match src="yul_identifier [36886,36889]" dest="yul_identifier [36886,36889]"/>
  <match src="private: private [12692,12699]" dest="private: private [12692,12699]"/>
  <match src="struct: struct [27880,27886]" dest="struct: struct [27880,27886]"/>
  <match src="): ) [35914,35915]" dest="): ) [35914,35915]"/>
  <match src="yul_path [20351,20358]" dest="yul_path [20351,20358]"/>
  <match src="binary_expression [48248,48256]" dest="binary_expression [48863,48871]"/>
  <match src="parameter [32264,32276]" dest="parameter [32264,32276]"/>
  <match src="{: { [50834,50835]" dest="{: { [51449,51450]"/>
  <match src="identifier: IMintableERC1155 [51021,51037]" dest="identifier: IMintableERC1155 [51636,51652]"/>
  <match src="parameter [818,836]" dest="parameter [818,836]"/>
  <match src="type_name [34012,34018]" dest="type_name [34012,34018]"/>
  <match src="primitive_type [36352,36357]" dest="primitive_type [36352,36357]"/>
  <match src="(: ( [16004,16005]" dest="(: ( [16004,16005]"/>
  <match src="): ) [16125,16126]" dest="): ) [16125,16126]"/>
  <match src="type_name [35957,35964]" dest="type_name [35957,35964]"/>
  <match src="expression_statement [44599,44601]" dest="expression_statement [44599,44601]"/>
  <match src="function_body [22612,22696]" dest="function_body [22612,22696]"/>
  <match src="call_argument [47565,47578]" dest="call_argument [47563,47576]"/>
  <match src="solidity_pragma_token [8800,8815]" dest="solidity_pragma_token [8800,8815]"/>
  <match src="type_name [46897,46904]" dest="type_name [46895,46902]"/>
  <match src="variable_declaration [38998,39017]" dest="variable_declaration [38998,39017]"/>
  <match src="identifier: amount [5478,5484]" dest="identifier: amount [5478,5484]"/>
  <match src="identifier: i [35983,35984]" dest="identifier: i [35983,35984]"/>
  <match src="call_expression [18281,18318]" dest="call_expression [18281,18318]"/>
  <match src="identifier: operator [1375,1383]" dest="identifier: operator [1375,1383]"/>
  <match src="array_access [50452,50465]" dest="array_access [51067,51080]"/>
  <match src="(: ( [50516,50517]" dest="(: ( [51131,51132]"/>
  <match src="): ) [40113,40114]" dest="): ) [40113,40114]"/>
  <match src="(: ( [29359,29360]" dest="(: ( [29359,29360]"/>
  <match src="parameter [6135,6161]" dest="parameter [6135,6161]"/>
  <match src="type_name [42599,42606]" dest="type_name [42599,42606]"/>
  <match src="(: ( [18078,18079]" dest="(: ( [18078,18079]"/>
  <match src="identifier: rootToken [50176,50185]" dest="identifier: rootToken [50791,50800]"/>
  <match src="yul_if_statement [37972,38066]" dest="yul_if_statement [37972,38066]"/>
  <match src="(: ( [50653,50654]" dest="(: ( [51268,51269]"/>
  <match src="}: } [36562,36563]" dest="}: } [36562,36563]"/>
  <match src="primitive_type [36786,36791]" dest="primitive_type [36786,36791]"/>
  <match src="): ) [37148,37149]" dest="): ) [37148,37149]"/>
  <match src="yul_assignment [35271,35296]" dest="yul_assignment [35271,35296]"/>
  <match src="primitive_type [24606,24611]" dest="primitive_type [24606,24611]"/>
  <match src="bytes32: bytes32 [27950,27957]" dest="bytes32: bytes32 [27950,27957]"/>
  <match src="comment: // safely transfer those to withdrawer [51433,51471]" dest="comment: // safely transfer those to withdrawer [52048,52086]"/>
  <match src=",: , [51755,51756]" dest=",: , [52487,52488]"/>
  <match src="memory: memory [48363,48369]" dest="memory: memory [48978,48984]"/>
  <match src="identifier: role [33442,33446]" dest="identifier: role [33442,33446]"/>
  <match src=",: , [42831,42832]" dest=",: , [42831,42832]"/>
  <match src="type_name [3511,3518]" dest="type_name [3511,3518]"/>
  <match src="): ) [31554,31555]" dest="): ) [31554,31555]"/>
  <match src="block_statement [52766,52849]" dest="block_statement [53498,53581]"/>
  <match src="return: return [18044,18050]" dest="return: return [18044,18050]"/>
  <match src="{: { [15785,15786]" dest="{: { [15785,15786]"/>
  <match src="call_argument [47376,47391]" dest="call_argument [47374,47389]"/>
  <match src="user_defined_type [37024,37031]" dest="user_defined_type [37024,37031]"/>
  <match src="identifier: result [38020,38026]" dest="identifier: result [38020,38026]"/>
  <match src="identifier: role [32429,32433]" dest="identifier: role [32429,32433]"/>
  <match src="type_name [2658,2665]" dest="type_name [2658,2665]"/>
  <match src="parameter [3308,3321]" dest="parameter [3308,3321]"/>
  <match src=".: . [50465,50466]" dest=".: . [51080,51081]"/>
  <match src="variable_declaration_statement [39047,39063]" dest="variable_declaration_statement [39047,39063]"/>
  <match src="}: } [44631,44632]" dest="}: } [44631,44632]"/>
  <match src="identifier: len [37214,37217]" dest="identifier: len [37214,37217]"/>
  <match src="identifier: item [35160,35164]" dest="identifier: item [35160,35164]"/>
  <match src="parameter [2975,2991]" dest="parameter [2975,2991]"/>
  <match src="{: { [22612,22613]" dest="{: { [22612,22613]"/>
  <match src="comment: /*      * @param item RLP encoded list in bytes      */ [35370,35427]" dest="comment: /*      * @param item RLP encoded list in bytes      */ [35370,35427]"/>
  <match src="return: return [41899,41905]" dest="return: return [41899,41905]"/>
  <match src=",: , [18990,18991]" dest=",: , [18990,18991]"/>
  <match src="identifier: isList [37407,37413]" dest="identifier: isList [37407,37413]"/>
  <match src="override: override [46048,46056]" dest="override: override [46046,46054]"/>
  <match src="primitive_type [45566,45573]" dest="primitive_type [45564,45571]"/>
  <match src="identifier: tokenBalance [51489,51501]" dest="identifier: tokenBalance [52104,52116]"/>
  <match src="identifier: _owner [45827,45833]" dest="identifier: _owner [45825,45831]"/>
  <match src="string [38436,38475]" dest="string [38436,38475]"/>
  <match src="=: = [42612,42613]" dest="=: = [42612,42613]"/>
  <match src="returns: returns [35111,35118]" dest="returns: returns [35111,35118]"/>
  <match src="uint256: uint256 [2623,2630]" dest="uint256: uint256 [2623,2630]"/>
  <match src="internal: internal [38193,38201]" dest="internal: internal [38193,38201]"/>
  <match src="call_argument [23098,23099]" dest="call_argument [23098,23099]"/>
  <match src="call_argument [37406,37419]" dest="call_argument [37406,37419]"/>
  <match src="expression_statement [42312,42329]" dest="expression_statement [42312,42329]"/>
  <match src="type_name [35687,35696]" dest="type_name [35687,35696]"/>
  <match src="yul_decimal_number: 1 [40832,40833]" dest="yul_decimal_number: 1 [40832,40833]"/>
  <match src="bool: bool [17717,17721]" dest="bool: bool [17717,17721]"/>
  <match src="&lt;: &lt; [41713,41714]" dest="&lt;: &lt; [41713,41714]"/>
  <match src="solidity_version: 0.6.0 [114,119]" dest="solidity_version: 0.6.0 [114,119]"/>
  <match src="state_mutability [18927,18931]" dest="state_mutability [18927,18931]"/>
  <match src=",: , [16586,16587]" dest=",: , [16586,16587]"/>
  <match src=",: , [47550,47551]" dest=",: , [47548,47549]"/>
  <match src="pure: pure [35097,35101]" dest="pure: pure [35097,35101]"/>
  <match src="contract_body [431,870]" dest="contract_body [431,870]"/>
  <match src="identifier: rootToken [47494,47503]" dest="identifier: rootToken [47492,47501]"/>
  <match src="primitive_type [24370,24377]" dest="primitive_type [24370,24377]"/>
  <match src="call_argument [18311,18316]" dest="call_argument [18311,18316]"/>
  <match src="identifier: currPtr [39789,39796]" dest="identifier: currPtr [39789,39796]"/>
  <match src="bool: bool [12709,12713]" dest="bool: bool [12709,12713]"/>
  <match src="type_name [46302,46307]" dest="type_name [46300,46305]"/>
  <match src="type_name [48008,48015]" dest="type_name [48623,48630]"/>
  <match src="yul_path [40570,40576]" dest="yul_path [40570,40576]"/>
  <match src="constructor: constructor [10720,10731]" dest="constructor: constructor [10720,10731]"/>
  <match src="identifier: role [33826,33830]" dest="identifier: role [33826,33830]"/>
  <match src="}: } [36920,36921]" dest="}: } [36920,36921]"/>
  <match src="type_name [16564,16574]" dest="type_name [16564,16574]"/>
  <match src="(: ( [22544,22545]" dest="(: ( [22544,22545]"/>
  <match src="string_literal [44571,44587]" dest="string_literal [44571,44587]"/>
  <match src="): ) [23113,23114]" dest="): ) [23113,23114]"/>
  <match src="yul_path [20327,20335]" dest="yul_path [20327,20335]"/>
  <match src="type_name [28444,28451]" dest="type_name [28444,28451]"/>
  <match src="type_cast_expression [50646,50656]" dest="type_cast_expression [51261,51271]"/>
  <match src="identifier: result [38096,38102]" dest="identifier: result [38096,38102]"/>
  <match src="): ) [51510,51511]" dest="): ) [52125,52126]"/>
  <match src="^:  ^ [987,989]" dest="^:  ^ [987,989]"/>
  <match src="array_access [49598,49637]" dest="array_access [50213,50252]"/>
  <match src="): ) [24629,24630]" dest="): ) [24629,24630]"/>
  <match src="address: address [45464,45471]" dest="address: address [45462,45469]"/>
  <match src="identifier: RLPItem [37334,37341]" dest="identifier: RLPItem [37334,37341]"/>
  <match src="type_alias [27797,27810]" dest="type_alias [27797,27810]"/>
  <match src="+: + [35886,35887]" dest="+: + [35886,35887]"/>
  <match src="binary_expression [35972,35981]" dest="binary_expression [35972,35981]"/>
  <match src="): ) [46394,46395]" dest="): ) [46392,46393]"/>
  <match src="bool: bool [18027,18031]" dest="bool: bool [18027,18031]"/>
  <match src=".: . [17375,17376]" dest=".: . [17375,17376]"/>
  <match src="comment: /**      * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`      *      * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite      * {RoleAdminChanged} not being emitted signaling this.      *      * _Available since v3.1._      */ [28094,28393]" dest="comment: /**      * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`      *      * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite      * {RoleAdminChanged} not being emitted signaling this.      *      * _Available since v3.1._      */ [28094,28393]"/>
  <match src="^:  ^ [10592,10594]" dest="^:  ^ [10592,10594]"/>
  <match src="variable_declaration [38236,38254]" dest="variable_declaration [38236,38254]"/>
  <match src="identifier: src [42144,42147]" dest="identifier: src [42144,42147]"/>
  <match src="uint256: uint256 [38216,38223]" dest="uint256: uint256 [38216,38223]"/>
  <match src="return: return [13029,13035]" dest="return: return [13029,13035]"/>
  <match src="type_name [13420,13427]" dest="type_name [13420,13427]"/>
  <match src="primitive_type [17758,17765]" dest="primitive_type [17758,17765]"/>
  <match src="for_statement [48414,48495]" dest="for_statement [49029,49110]"/>
  <match src="identifier: STRING_SHORT_START [40375,40393]" dest="identifier: STRING_SHORT_START [40375,40393]"/>
  <match src="variable_declaration_statement [47119,47294]" dest="variable_declaration_statement [47117,47292]"/>
  <match src="{: { [26125,26126]" dest="{: { [26125,26126]"/>
  <match src="parameter [37068,37075]" dest="parameter [37068,37075]"/>
  <match src="variable_declaration_statement [38489,38504]" dest="variable_declaration_statement [38489,38504]"/>
  <match src="solidity_pragma_token [25383,25398]" dest="solidity_pragma_token [25383,25398]"/>
  <match src="^:  ^ [26411,26413]" dest="^:  ^ [26411,26413]"/>
  <match src="type_name [45542,45551]" dest="type_name [45540,45549]"/>
  <match src="function: function [47964,47972]" dest="function: function [48579,48587]"/>
  <match src="yul_path [38006,38012]" dest="yul_path [38006,38012]"/>
  <match src="identifier: _roles [30430,30436]" dest="identifier: _roles [30430,30436]"/>
  <match src="identifier: account [19839,19846]" dest="identifier: account [19839,19846]"/>
  <match src="pragma: pragma [8793,8799]" dest="pragma: pragma [8793,8799]"/>
  <match src="(: ( [31712,31713]" dest="(: ( [31712,31713]"/>
  <match src="identifier: data [24664,24668]" dest="identifier: data [24664,24668]"/>
  <match src="call_expression [50584,50750]" dest="call_expression [51199,51365]"/>
  <match src="type_name [44312,44319]" dest="type_name [44312,44319]"/>
  <match src="(: ( [37103,37104]" dest="(: ( [37103,37104]"/>
  <match src="variable_declaration_statement [13420,13461]" dest="variable_declaration_statement [13420,13461]"/>
  <match src="array_access [47275,47284]" dest="array_access [47273,47282]"/>
  <match src="expression_statement [15621,15695]" dest="expression_statement [15621,15695]"/>
  <match src=".: . [13444,13445]" dest=".: . [13444,13445]"/>
  <match src="yul_identifier [38581,38587]" dest="yul_identifier [38581,38587]"/>
  <match src="memory: memory [51936,51942]" dest="memory: memory [52668,52674]"/>
  <match src="indexed: indexed [45514,45521]" dest="indexed: indexed [45512,45519]"/>
  <match src="): ) [38050,38051]" dest="): ) [38050,38051]"/>
  <match src="[: [ [35527,35528]" dest="[: [ [35527,35528]"/>
  <match src="contract: contract [9000,9008]" dest="contract: contract [9000,9008]"/>
  <match src="{: { [12223,12224]" dest="{: { [12223,12224]"/>
  <match src="type_name [24370,24377]" dest="type_name [24370,24377]"/>
  <match src="parameter [29360,29364]" dest="parameter [29360,29364]"/>
  <match src="identifier: amounts [45576,45583]" dest="identifier: amounts [45574,45581]"/>
  <match src="identifier: rootToken [46905,46914]" dest="identifier: rootToken [46903,46912]"/>
  <match src="identifier: MintableERC1155Predicate [44748,44772]" dest="identifier: MintableERC1155Predicate [44746,44770]"/>
  <match src="variable_declaration [21612,21624]" dest="variable_declaration [21612,21624]"/>
  <match src="call_argument [39863,39880]" dest="call_argument [39863,39880]"/>
  <match src="identifier: byteLen [41014,41021]" dest="identifier: byteLen [41014,41021]"/>
  <match src="): ) [18517,18518]" dest="): ) [18517,18518]"/>
  <match src="storage: storage [13257,13264]" dest="storage: storage [13257,13264]"/>
  <match src="primitive_type [7341,7348]" dest="primitive_type [7341,7348]"/>
  <match src="expression_statement [14662,14689]" dest="expression_statement [14662,14689]"/>
  <match src="struct_declaration [15767,15814]" dest="struct_declaration [15767,15814]"/>
  <match src="address: address [32278,32285]" dest="address: address [32278,32285]"/>
  <match src="address: address [50150,50157]" dest="address: address [50765,50772]"/>
  <match src="member_expression [50916,50926]" dest="member_expression [51531,51541]"/>
  <match src="array_access [50775,50793]" dest="array_access [51390,51408]"/>
  <match src="): ) [12713,12714]" dest="): ) [12713,12714]"/>
  <match src="identifier: AccessControlMixin [33969,33987]" dest="identifier: AccessControlMixin [33969,33987]"/>
  <match src=".: . [31610,31611]" dest=".: . [31610,31611]"/>
  <match src="primitive_type [32264,32271]" dest="primitive_type [32264,32271]"/>
  <match src="type_name [2928,2937]" dest="type_name [2928,2937]"/>
  <match src="=: = [38953,38954]" dest="=: = [38953,38954]"/>
  <match src="identifier: require [35770,35777]" dest="identifier: require [35770,35777]"/>
  <match src="variable_declaration [49533,49542]" dest="variable_declaration [50148,50157]"/>
  <match src="parameter [46066,46072]" dest="parameter [46064,46070]"/>
  <match src="primitive_type [38717,38722]" dest="primitive_type [38717,38722]"/>
  <match src="primitive_type [4793,4798]" dest="primitive_type [4793,4798]"/>
  <match src="type_name [45981,45988]" dest="type_name [45979,45986]"/>
  <match src="expression_statement [36003,36033]" dest="expression_statement [36003,36033]"/>
  <match src="primitive_type [34225,34232]" dest="primitive_type [34225,34232]"/>
  <match src="call_argument [17360,17391]" dest="call_argument [17360,17391]"/>
  <match src=".: . [37753,37754]" dest=".: . [37753,37754]"/>
  <match src="}: } [44384,44385]" dest="}: } [44384,44385]"/>
  <match src="identifier: IMintableERC1155 [4924,4940]" dest="identifier: IMintableERC1155 [4924,4940]"/>
  <match src="): ) [40714,40715]" dest="): ) [40714,40715]"/>
  <match src="parameter [24335,24349]" dest="parameter [24335,24349]"/>
  <match src="identifier: sender [28807,28813]" dest="identifier: sender [28807,28813]"/>
  <match src="type_cast_expression [37281,37302]" dest="type_cast_expression [37281,37302]"/>
  <match src="expression_statement [38412,38477]" dest="expression_statement [38412,38477]"/>
  <match src="address: address [46835,46842]" dest="address: address [46833,46840]"/>
  <match src="(: ( [40701,40702]" dest="(: ( [40701,40702]"/>
  <match src="): ) [52747,52748]" dest="): ) [53479,53480]"/>
  <match src="primitive_type [48072,48079]" dest="primitive_type [48687,48694]"/>
  <match src="identifier: byte0 [36495,36500]" dest="identifier: byte0 [36495,36500]"/>
  <match src="variable_declaration [50898,50912]" dest="variable_declaration [51513,51527]"/>
  <match src="): ) [10405,10406]" dest="): ) [10405,10406]"/>
  <match src="address: address [43663,43670]" dest="address: address [43663,43670]"/>
  <match src="binary_expression [37209,37223]" dest="binary_expression [37209,37223]"/>
  <match src="primitive_type [4715,4722]" dest="primitive_type [4715,4722]"/>
  <match src="identifier: role [33566,33570]" dest="identifier: role [33566,33570]"/>
  <match src="&quot;: &quot; [15692,15693]" dest="&quot;: &quot; [15692,15693]"/>
  <match src=".: . [38424,38425]" dest=".: . [38424,38425]"/>
  <match src="&gt;=: &gt;= [21477,21479]" dest="&gt;=: &gt;= [21477,21479]"/>
  <match src="): ) [48145,48146]" dest="): ) [48760,48761]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [26361,26392]" dest="comment: // SPDX-License-Identifier: MIT [26361,26392]"/>
  <match src="call_argument [33130,33137]" dest="call_argument [33130,33137]"/>
  <match src="(: ( [41520,41521]" dest="(: ( [41520,41521]"/>
  <match src="identifier: i [49612,49613]" dest="identifier: i [50227,50228]"/>
  <match src="internal: internal [48981,48989]" dest="internal: internal [49596,49604]"/>
  <match src=".: . [21468,21469]" dest=".: . [21468,21469]"/>
  <match src="yul_assignment [40570,40594]" dest="yul_assignment [40570,40594]"/>
  <match src="-: - [37758,37759]" dest="-: - [37758,37759]"/>
  <match src="expression_statement [21447,21521]" dest="expression_statement [21447,21521]"/>
  <match src="memory: memory [35667,35673]" dest="memory: memory [35667,35673]"/>
  <match src="visibility [34019,34026]" dest="visibility [34019,34026]"/>
  <match src="yul_function_call [42762,42784]" dest="yul_function_call [42762,42784]"/>
  <match src="if_statement [24825,25264]" dest="if_statement [24825,25264]"/>
  <match src="call_argument [33124,33128]" dest="call_argument [33124,33128]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [16468,16540]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [16468,16540]"/>
  <match src="member_expression [21455,21476]" dest="member_expression [21455,21476]"/>
  <match src=".: . [49068,49069]" dest=".: . [49683,49684]"/>
  <match src="parameter [18941,18948]" dest="parameter [18941,18948]"/>
  <match src="): ) [15608,15609]" dest="): ) [15608,15609]"/>
  <match src="identifier: from [1401,1405]" dest="identifier: from [1401,1405]"/>
  <match src="parameter [15547,15562]" dest="parameter [15547,15562]"/>
  <match src="call_argument [51780,51782]" dest="call_argument [52512,52514]"/>
  <match src="variable_declaration [39047,39062]" dest="variable_declaration [39047,39062]"/>
  <match src="type_name [35616,35623]" dest="type_name [35616,35623]"/>
  <match src="identifier: itemLen [40134,40141]" dest="identifier: itemLen [40134,40141]"/>
  <match src="parameter [36291,36310]" dest="parameter [36291,36310]"/>
  <match src="=: = [37695,37696]" dest="=: = [37695,37696]"/>
  <match src="yul_function_call [37975,37986]" dest="yul_function_call [37975,37986]"/>
  <match src="parameter [23596,23608]" dest="parameter [23596,23608]"/>
  <match src="identifier: decode [50920,50926]" dest="identifier: decode [51535,51541]"/>
  <match src="type_name [17717,17721]" dest="type_name [17717,17721]"/>
  <match src="(: ( [12785,12786]" dest="(: ( [12785,12786]"/>
  <match src="type_name [49197,49204]" dest="type_name [49812,49819]"/>
  <match src="yul_path [37874,37880]" dest="yul_path [37874,37880]"/>
  <match src=",: , [39116,39117]" dest=",: , [39116,39117]"/>
  <match src="member_expression [16416,16426]" dest="member_expression [16416,16426]"/>
  <match src="type_name [19831,19838]" dest="type_name [19831,19838]"/>
  <match src="uint256: uint256 [12443,12450]" dest="uint256: uint256 [12443,12450]"/>
  <match src="primitive_type [23596,23601]" dest="primitive_type [23596,23601]"/>
  <match src="external: external [2952,2960]" dest="external: external [2952,2960]"/>
  <match src=",: , [52487,52488]" dest=",: , [53219,53220]"/>
  <match src="type_name [13253,13256]" dest="type_name [13253,13256]"/>
  <match src="(: ( [52268,52269]" dest="(: ( [53000,53001]"/>
  <match src="(: ( [38774,38775]" dest="(: ( [38774,38775]"/>
  <match src=",: , [37419,37420]" dest=",: , [37419,37420]"/>
  <match src="primitive_type [28444,28451]" dest="primitive_type [28444,28451]"/>
  <match src="call_expression [37398,37456]" dest="call_expression [37398,37456]"/>
  <match src="type_name [38489,38496]" dest="type_name [38489,38496]"/>
  <match src="identifier: role [31533,31537]" dest="identifier: role [31533,31537]"/>
  <match src="(: ( [47263,47264]" dest="(: ( [47261,47262]"/>
  <match src="returns: returns [39387,39394]" dest="returns: returns [39387,39394]"/>
  <match src="function_definition [23497,23723]" dest="function_definition [23497,23723]"/>
  <match src="member_expression [52547,52596]" dest="member_expression [53279,53328]"/>
  <match src="[: [ [50532,50533]" dest="[: [ [51147,51148]"/>
  <match src="identifier: data [23557,23561]" dest="identifier: data [23557,23561]"/>
  <match src="identifier: operator [3298,3306]" dest="identifier: operator [3298,3306]"/>
  <match src="identifier: toDeleteIndex [14448,14461]" dest="identifier: toDeleteIndex [14448,14461]"/>
  <match src="solidity_pragma_token [10584,10599]" dest="solidity_pragma_token [10584,10599]"/>
  <match src="memory: memory [34077,34083]" dest="memory: memory [34077,34083]"/>
  <match src="): ) [39033,39034]" dest="): ) [39033,39034]"/>
  <match src="identifier: set [15110,15113]" dest="identifier: set [15110,15113]"/>
  <match src="call_expression [50386,50408]" dest="call_expression [51001,51023]"/>
  <match src="(: ( [817,818]" dest="(: ( [817,818]"/>
  <match src="variable_declaration [14179,14196]" dest="variable_declaration [14179,14196]"/>
  <match src="assembly_statement [41483,41549]" dest="assembly_statement [41483,41549]"/>
  <match src="bytes32: bytes32 [27992,27999]" dest="bytes32: bytes32 [27992,27999]"/>
  <match src="private: private [34019,34026]" dest="private: private [34019,34026]"/>
  <match src=".: . [14319,14320]" dest=".: . [14319,14320]"/>
  <match src="mload: mload [38591,38596]" dest="mload: mload [38591,38596]"/>
  <match src="identifier: set [12741,12744]" dest="identifier: set [12741,12744]"/>
  <match src="(: ( [33383,33384]" dest="(: ( [33383,33384]"/>
  <match src="function: function [38150,38158]" dest="function: function [38150,38158]"/>
  <match src="binary_expression [21455,21486]" dest="binary_expression [21455,21486]"/>
  <match src="{: { [25939,25940]" dest="{: { [25939,25940]"/>
  <match src=",: , [23096,23097]" dest=",: , [23096,23097]"/>
  <match src="type_name [13270,13277]" dest="type_name [13270,13277]"/>
  <match src="]: ] [13459,13460]" dest="]: ] [13459,13460]"/>
  <match src="): ) [37455,37456]" dest="): ) [37455,37456]"/>
  <match src="member_expression [50517,50542]" dest="member_expression [51132,51157]"/>
  <match src="uint256: uint256 [4765,4772]" dest="uint256: uint256 [4765,4772]"/>
  <match src="assembly_statement [39073,39136]" dest="assembly_statement [39073,39136]"/>
  <match src="(: ( [31051,31052]" dest="(: ( [31051,31052]"/>
  <match src="identifier: i [35965,35966]" dest="identifier: i [35965,35966]"/>
  <match src="pure: pure [41425,41429]" dest="pure: pure [41425,41429]"/>
  <match src="type_cast_expression [50509,50545]" dest="type_cast_expression [51124,51160]"/>
  <match src="(: ( [16679,16680]" dest="(: ( [16679,16680]"/>
  <match src="identifier: RLPItem [37024,37031]" dest="identifier: RLPItem [37024,37031]"/>
  <match src="expression_statement [34250,34336]" dest="expression_statement [34250,34336]"/>
  <match src="memory: memory [51958,51964]" dest="memory: memory [52690,52696]"/>
  <match src="(: ( [16443,16444]" dest="(: ( [16443,16444]"/>
  <match src="primitive_type [45095,45102]" dest="primitive_type [45093,45100]"/>
  <match src="&quot;: &quot; [38830,38831]" dest="&quot;: &quot; [38830,38831]"/>
  <match src="identifier: success [21617,21624]" dest="identifier: success [21617,21624]"/>
  <match src="=: = [39787,39788]" dest="=: = [39787,39788]"/>
  <match src="[: [ [35694,35695]" dest="[: [ [35694,35695]"/>
  <match src="{: { [40991,40992]" dest="{: { [40991,40992]"/>
  <match src="visibility [23578,23586]" dest="visibility [23578,23586]"/>
  <match src="call_argument [33784,33791]" dest="call_argument [33784,33791]"/>
  <match src="primitive_type [9742,9748]" dest="primitive_type [9742,9748]"/>
  <match src="(: ( [23527,23528]" dest="(: ( [23527,23528]"/>
  <match src="true [14712,14716]" dest="true [14712,14716]"/>
  <match src="call_expression [32340,32352]" dest="call_expression [32340,32352]"/>
  <match src="address: address [28791,28798]" dest="address: address [28791,28798]"/>
  <match src="identifier: _payloadOffset [41386,41400]" dest="identifier: _payloadOffset [41386,41400]"/>
  <match src="(: ( [41236,41237]" dest="(: ( [41236,41237]"/>
  <match src="call_argument [51208,51210]" dest="call_argument [51823,51825]"/>
  <match src="&quot;: &quot; [37454,37455]" dest="&quot;: &quot; [37454,37455]"/>
  <match src="): ) [26123,26124]" dest="): ) [26123,26124]"/>
  <match src="string_literal [52512,52514]" dest="string_literal [53244,53246]"/>
  <match src="is: is [4941,4943]" dest="is: is [4941,4943]"/>
  <match src="type_name [18027,18031]" dest="type_name [18027,18031]"/>
  <match src="state_mutability [41425,41429]" dest="state_mutability [41425,41429]"/>
  <match src="state_variable_declaration [34817,34855]" dest="state_variable_declaration [34817,34855]"/>
  <match src="binary_expression [41915,41934]" dest="binary_expression [41915,41934]"/>
  <match src="comment: // add `isList` check if `item` is expected to be passsed without a check from calling function [39416,39511]" dest="comment: // add `isList` check if `item` is expected to be passsed without a check from calling function [39416,39511]"/>
  <match src="identifier: Set [12219,12222]" dest="identifier: Set [12219,12222]"/>
  <match src="): ) [50407,50408]" dest="): ) [51022,51023]"/>
  <match src="uint256: uint256 [15137,15144]" dest="uint256: uint256 [15137,15144]"/>
  <match src="yul_path [42410,42413]" dest="yul_path [42410,42413]"/>
  <match src="user_defined_type [33991,34004]" dest="user_defined_type [33991,34004]"/>
  <match src="): ) [47577,47578]" dest="): ) [47575,47576]"/>
  <match src="yul_identifier [40823,40830]" dest="yul_identifier [40823,40830]"/>
  <match src="): ) [18316,18317]" dest="): ) [18316,18317]"/>
  <match src="yul_path [38045,38048]" dest="yul_path [38045,38048]"/>
  <match src="identifier: len [39030,39033]" dest="identifier: len [39030,39033]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [937,968]" dest="comment: // SPDX-License-Identifier: MIT [937,968]"/>
  <match src="): ) [18447,18448]" dest="): ) [18447,18448]"/>
  <match src="): ) [40230,40231]" dest="): ) [40230,40231]"/>
  <match src="yul_identifier [42772,42776]" dest="yul_identifier [42772,42776]"/>
  <match src="user_defined_type [51021,51037]" dest="user_defined_type [51636,51652]"/>
  <match src="comment: /*      * Private Helpers      */ [39228,39263]" dest="comment: /*      * Private Helpers      */ [39228,39263]"/>
  <match src=",: , [42704,42705]" dest=",: , [42704,42705]"/>
  <match src="false: false [13036,13041]" dest="false: false [13036,13041]"/>
  <match src="visibility [33733,33740]" dest="visibility [33733,33740]"/>
  <match src=",: , [50185,50186]" dest=",: , [50800,50801]"/>
  <match src="function_body [16632,16704]" dest="function_body [16632,16704]"/>
  <match src="div: div [38016,38019]" dest="div: div [38016,38019]"/>
  <match src="==: == [38311,38313]" dest="==: == [38311,38313]"/>
  <match src="(: ( [49597,49598]" dest="(: ( [50212,50213]"/>
  <match src="): ) [35353,35354]" dest="): ) [35353,35354]"/>
  <match src="yul_path [40223,40229]" dest="yul_path [40223,40229]"/>
  <match src="type_name [33702,33709]" dest="type_name [33702,33709]"/>
  <match src="assembly_statement [42651,42866]" dest="assembly_statement [42651,42866]"/>
  <match src="): ) [9350,9351]" dest="): ) [9350,9351]"/>
  <match src="[: [ [1725,1726]" dest="[: [ [1725,1726]"/>
  <match src="identifier: AddressSet [27829,27839]" dest="identifier: AddressSet [27829,27839]"/>
  <match src="unary_expression [14662,14681]" dest="unary_expression [14662,14681]"/>
  <match src="returns: returns [13293,13300]" dest="returns: returns [13293,13300]"/>
  <match src="(: ( [41529,41530]" dest="(: ( [41529,41530]"/>
  <match src="[: [ [49611,49612]" dest="[: [ [50226,50227]"/>
  <match src="parameter [46273,46291]" dest="parameter [46271,46289]"/>
  <match src="parameter [7386,7405]" dest="parameter [7386,7405]"/>
  <match src="return_type_definition [41430,41447]" dest="return_type_definition [41430,41447]"/>
  <match src="call_argument [9529,9549]" dest="call_argument [9529,9549]"/>
  <match src="call_argument [49262,49282]" dest="call_argument [49877,49897]"/>
  <match src="if: if [51485,51487]" dest="if: if [52100,52102]"/>
  <match src="): ) [39187,39188]" dest="): ) [39187,39188]"/>
  <match src=",: , [33128,33129]" dest=",: , [33128,33129]"/>
  <match src="address: address [29150,29157]" dest="address: address [29150,29157]"/>
  <match src="identifier: require [21676,21683]" dest="identifier: require [21676,21683]"/>
  <match src="expression_statement [35972,35982]" dest="expression_statement [35972,35982]"/>
  <match src="identifier: this [26136,26140]" dest="identifier: this [26136,26140]"/>
  <match src="string [51590,51592]" dest="string [52322,52324]"/>
  <match src="function: function [41377,41385]" dest="function: function [41377,41385]"/>
  <match src="): ) [865,866]" dest="): ) [865,866]"/>
  <match src="primitive_type [15137,15144]" dest="primitive_type [15137,15144]"/>
  <match src="bytes32: bytes32 [15601,15608]" dest="bytes32: bytes32 [15601,15608]"/>
  <match src="identifier: require [37398,37405]" dest="identifier: require [37398,37405]"/>
  <match src="return_type_definition [46057,46073]" dest="return_type_definition [46055,46071]"/>
  <match src="primitive_type [39689,39696]" dest="primitive_type [39689,39696]"/>
  <match src="user_defined_type [17263,17273]" dest="user_defined_type [17263,17273]"/>
  <match src="type_name [28766,28773]" dest="type_name [28766,28773]"/>
  <match src="visibility [33334,33342]" dest="visibility [33334,33342]"/>
  <match src="primitive_type [4212,4219]" dest="primitive_type [4212,4219]"/>
  <match src="call_argument [24171,24211]" dest="call_argument [24171,24211]"/>
  <match src="if: if [41561,41563]" dest="if: if [41561,41563]"/>
  <match src="primitive_type [51834,51841]" dest="primitive_type [52566,52573]"/>
  <match src="}: } [25263,25264]" dest="}: } [25263,25264]"/>
  <match src=",: , [40817,40818]" dest=",: , [40817,40818]"/>
  <match src="parenthesized_expression [41914,41935]" dest="parenthesized_expression [41914,41935]"/>
  <match src="yul_evm_builtin [40702,40707]" dest="yul_evm_builtin [40702,40707]"/>
  <match src="(: ( [47572,47573]" dest="(: ( [47570,47571]"/>
  <match src="&lt;=: &lt;= [39871,39873]" dest="&lt;=: &lt;= [39871,39873]"/>
  <match src="type_name [48072,48079]" dest="type_name [48687,48694]"/>
  <match src="primitive_type [46066,46072]" dest="primitive_type [46064,46070]"/>
  <match src="public: public [32295,32301]" dest="public: public [32295,32301]"/>
  <match src="block_statement [13014,13053]" dest="block_statement [13014,13053]"/>
  <match src=",: , [52705,52706]" dest=",: , [53437,53438]"/>
  <match src="identifier: currPtr [39811,39818]" dest="identifier: currPtr [39811,39818]"/>
  <match src="call_argument [36951,36954]" dest="call_argument [36951,36954]"/>
  <match src="identifier: mint [51537,51541]" dest="identifier: mintBatch [52152,52161]"/>
  <match src="string [37225,37260]" dest="string [37225,37260]"/>
  <match src="&quot;: &quot; [31637,31638]" dest="&quot;: &quot; [31637,31638]"/>
  <match src="yul_assignment [41507,41538]" dest="yul_assignment [41507,41538]"/>
  <match src="(: ( [51488,51489]" dest="(: ( [52103,52104]"/>
  <match src=",: , [34299,34300]" dest=",: , [34299,34300]"/>
  <match src="}: } [36134,36135]" dest="}: } [36134,36135]"/>
  <match src="type_name [43725,43732]" dest="type_name [43725,43732]"/>
  <match src="yul_function_call [41025,41041]" dest="yul_function_call [41025,41041]"/>
  <match src="expression_statement [51626,51799]" dest="expression_statement [52358,52531]"/>
  <match src="bytes32: bytes32 [34225,34232]" dest="bytes32: bytes32 [34225,34232]"/>
  <match src="binary_expression [24829,24850]" dest="binary_expression [24829,24850]"/>
  <match src="bytes: bytes [7386,7391]" dest="bytes: bytes [7386,7391]"/>
  <match src="[: [ [46280,46281]" dest="[: [ [46278,46279]"/>
  <match src="=: = [51974,51975]" dest="=: = [52706,52707]"/>
  <match src="call_argument [35562,35574]" dest="call_argument [35562,35574]"/>
  <match src="type_name [24010,24017]" dest="type_name [24010,24017]"/>
  <match src="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [16712,16784]" dest="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [16712,16784]"/>
  <match src="[: [ [48473,48474]" dest="[: [ [49088,49089]"/>
  <match src="): ) [51205,51206]" dest="): ) [51820,51821]"/>
  <match src="identifier: _indexes [12934,12942]" dest="identifier: _indexes [12934,12942]"/>
  <match src="parameter [8620,8639]" dest="parameter [8620,8639]"/>
  <match src="identifier: IERC165 [6403,6410]" dest="identifier: IERC165 [6403,6410]"/>
  <match src="yul_identifier [42700,42703]" dest="yul_identifier [42700,42703]"/>
  <match src="payable: payable [26007,26014]" dest="payable: payable [26007,26014]"/>
  <match src="identifier: ERC1155Receiver [10846,10861]" dest="identifier: ERC1155Receiver [10846,10861]"/>
  <match src="parameter [45963,45970]" dest="parameter [45961,45968]"/>
  <match src="): ) [15113,15114]" dest="): ) [15113,15114]"/>
  <match src="expression_statement [31701,31728]" dest="expression_statement [31701,31728]"/>
  <match src="(: ( [16659,16660]" dest="(: ( [16659,16660]"/>
  <match src="parameter [17325,17332]" dest="parameter [17325,17332]"/>
  <match src="{: { [20325,20326]" dest="{: { [20325,20326]"/>
  <match src="identifier: IERC1155Receiver [10696,10712]" dest="identifier: IERC1155Receiver [10696,10712]"/>
  <match src="yul_identifier [35285,35289]" dest="yul_identifier [35285,35289]"/>
  <match src="identifier: rootToken [51063,51072]" dest="identifier: rootToken [51678,51687]"/>
  <match src="): ) [40229,40230]" dest="): ) [40229,40230]"/>
  <match src="yul_identifier [41250,41257]" dest="yul_identifier [41250,41257]"/>
  <match src="unary_expression [44562,44569]" dest="unary_expression [44562,44569]"/>
  <match src="comment: /**      * @notice Calculates amount of tokens to be minted, by subtracting available      * token balances from amount of tokens to be exited      * @param tokenBalances Token balances this contract holds for some ordered token ids      * @param amountsToBeExited Amount of tokens being exited      */ [48539,48846]" dest="comment: /**      * @notice Calculates amount of tokens to be minted, by subtracting available      * token balances from amount of tokens to be exited      * @param tokenBalances Token balances this contract holds for some ordered token ids      * @param amountsToBeExited Amount of tokens being exited      */ [49154,49461]"/>
  <match src="function_definition [19811,20430]" dest="function_definition [19811,20430]"/>
  <match src="): ) [6182,6183]" dest="): ) [6182,6183]"/>
  <match src="identifier: from [8536,8540]" dest="identifier: from [8536,8540]"/>
  <match src="&quot;: &quot; [21693,21694]" dest="&quot;: &quot; [21693,21694]"/>
  <match src="identifier: byteLen [40490,40497]" dest="identifier: byteLen [40490,40497]"/>
  <match src="identifier: _inner [18511,18517]" dest="identifier: _inner [18511,18517]"/>
  <match src="while_statement [39739,39963]" dest="while_statement [39739,39963]"/>
  <match src="identifier: _setRoleAdmin [33287,33300]" dest="identifier: _setRoleAdmin [33287,33300]"/>
  <match src="): ) [48447,48448]" dest="): ) [49062,49063]"/>
  <match src="{: { [49579,49580]" dest="{: { [50194,50195]"/>
  <match src="{: { [49639,49640]" dest="{: { [50254,50255]"/>
  <match src="]: ] [50631,50632]" dest="]: ] [51246,51247]"/>
  <match src="): ) [35758,35759]" dest="): ) [35758,35759]"/>
  <match src="identifier: _contains [18281,18290]" dest="identifier: _contains [18281,18290]"/>
  <match src="identifier: _remove [18051,18058]" dest="identifier: _remove [18051,18058]"/>
  <match src="identifier: depositData [43768,43779]" dest="identifier: depositData [43768,43779]"/>
  <match src=".: . [38318,38319]" dest=".: . [38318,38319]"/>
  <match src="function_definition [47964,48531]" dest="function_definition [48579,49146]"/>
  <match src="variable_declaration_statement [36786,36828]" dest="variable_declaration_statement [36786,36828]"/>
  <match src="interface: interface [413,422]" dest="interface: interface [413,422]"/>
  <match src="yul_assignment [37874,37897]" dest="yul_assignment [37874,37897]"/>
  <match src="comment: // skip over the first byte [40595,40622]" dest="comment: // skip over the first byte [40595,40622]"/>
  <match src="state_variable_declaration [34726,34766]" dest="state_variable_declaration [34726,34766]"/>
  <match src="(: ( [49247,49248]" dest="(: ( [49862,49863]"/>
  <match src="yul_path [42836,42844]" dest="yul_path [42836,42844]"/>
  <match src="number_literal: 3 [50630,50631]" dest="number_literal: 3 [51245,51246]"/>
  <match src="call_argument [37491,37523]" dest="call_argument [37491,37523]"/>
  <match src="{: { [15146,15147]" dest="{: { [15146,15147]"/>
  <match src="binary_expression [39153,39173]" dest="binary_expression [39153,39173]"/>
  <match src="type_name [32278,32285]" dest="type_name [32278,32285]"/>
  <match src="): ) [46322,46323]" dest="): ) [46320,46321]"/>
  <match src="internal: internal [35079,35087]" dest="internal: internal [35079,35087]"/>
  <match src="identifier: hasRole [34272,34279]" dest="identifier: hasRole [34272,34279]"/>
  <match src="{: { [14734,14735]" dest="{: { [14734,14735]"/>
  <match src="event_paramater [1635,1659]" dest="event_paramater [1635,1659]"/>
  <match src="uint256: uint256 [5470,5477]" dest="uint256: uint256 [5470,5477]"/>
  <match src="update_expression [39944,39951]" dest="update_expression [39944,39951]"/>
  <match src="call_argument [23658,23662]" dest="call_argument [23658,23662]"/>
  <match src="identifier: len [38425,38428]" dest="identifier: len [38425,38428]"/>
  <match src="identifier: IMintableERC1155 [47477,47493]" dest="identifier: IMintableERC1155 [47475,47491]"/>
  <match src="[: [ [45573,45574]" dest="[: [ [45571,45572]"/>
  <match src="bytes: bytes [51774,51779]" dest="bytes: bytes [52506,52511]"/>
  <match src="[: [ [50358,50359]" dest="[: [ [50973,50974]"/>
  <match src="(: ( [23595,23596]" dest="(: ( [23595,23596]"/>
  <match src="comment: // Derived contracts need only register support for their own interfaces, [9372,9445]" dest="comment: // Derived contracts need only register support for their own interfaces, [9372,9445]"/>
  <match src="{: { [11756,11757]" dest="{: { [11756,11757]"/>
  <match src="identifier: i [49635,49636]" dest="identifier: i [50250,50251]"/>
  <match src="(: ( [50774,50775]" dest="(: ( [51389,51390]"/>
  <match src="identifier: target [24253,24259]" dest="identifier: target [24253,24259]"/>
  <match src="call_argument [10785,10896]" dest="call_argument [10785,10896]"/>
  <match src="&quot;: &quot; [23671,23672]" dest="&quot;: &quot; [23671,23672]"/>
  <match src="[: [ [33441,33442]" dest="[: [ [33441,33442]"/>
  <match src="primitive_type [47565,47572]" dest="primitive_type [47563,47570]"/>
  <match src="exp: exp [38028,38031]" dest="exp: exp [38028,38031]"/>
  <match src="variable_declaration [39689,39703]" dest="variable_declaration [39689,39703]"/>
  <match src="comment: /**      * @dev Revokes `role` from the calling account.      *      * Roles are often managed via {grantRole} and {revokeRole}: this function's      * purpose is to provide a mechanism for accounts to lose their privileges      * if they are compromised (such as when a trusted device is misplaced).      *      * If the calling account had been granted `role`, emits a {RoleRevoked}      * event.      *      * Requirements:      *      * - the caller must be `account`.      */ [31743,32236]" dest="comment: /**      * @dev Revokes `role` from the calling account.      *      * Roles are often managed via {grantRole} and {revokeRole}: this function's      * purpose is to provide a mechanism for accounts to lose their privileges      * if they are compromised (such as when a trusted device is misplaced).      *      * If the calling account had been granted `role`, emits a {RoleRevoked}      * event.      *      * Requirements:      *      * - the caller must be `account`.      */ [31743,32236]"/>
  <match src="function_body [39405,39995]" dest="function_body [39405,39995]"/>
  <match src="return_statement [16643,16697]" dest="return_statement [16643,16697]"/>
  <match src="return_statement [46085,46094]" dest="return_statement [46083,46092]"/>
  <match src="): ) [9760,9761]" dest="): ) [9760,9761]"/>
  <match src="[: [ [51933,51934]" dest="[: [ [52665,52666]"/>
  <match src="identifier: destpart [42750,42758]" dest="identifier: destpart [42750,42758]"/>
  <match src="type_name [45464,45471]" dest="type_name [45462,45469]"/>
  <match src="}: } [49746,49747]" dest="}: } [50361,50362]"/>
  <match src=":=: := [20336,20338]" dest=":=: := [20336,20338]"/>
  <match src="identifier: previousAdminRole [28460,28477]" dest="identifier: previousAdminRole [28460,28477]"/>
  <match src="binary_expression [42228,42236]" dest="binary_expression [42228,42236]"/>
  <match src="binary_expression [41565,41591]" dest="binary_expression [41565,41591]"/>
  <match src="parameter [14902,14915]" dest="parameter [14902,14915]"/>
  <match src="return_statement [23621,23716]" dest="return_statement [23621,23716]"/>
  <match src="function: function [36665,36673]" dest="function: function [36665,36673]"/>
  <match src="member_expression [35160,35171]" dest="member_expression [35160,35171]"/>
  <match src="return: return [41841,41847]" dest="return: return [41841,41847]"/>
  <match src="variable_declaration_statement [35926,35942]" dest="variable_declaration_statement [35926,35942]"/>
  <match src="(: ( [41914,41915]" dest="(: ( [41914,41915]"/>
  <match src="return_statement [49759,49784]" dest="return_statement [50374,50399]"/>
  <match src="inheritance_specifier [1195,1202]" dest="inheritance_specifier [1195,1202]"/>
  <match src="{: { [40443,40444]" dest="{: { [40443,40444]"/>
  <match src="parameter [8528,8540]" dest="parameter [8528,8540]"/>
  <match src="(: ( [36334,36335]" dest="(: ( [36334,36335]"/>
  <match src="false: false [44506,44511]" dest="false: false [44506,44511]"/>
  <match src="string_literal [37625,37666]" dest="string_literal [37625,37666]"/>
  <match src="(: ( [17367,17368]" dest="(: ( [17367,17368]"/>
  <match src="return_statement [46370,46428]" dest="return_statement [46368,46426]"/>
  <match src="(: ( [35746,35747]" dest="(: ( [35746,35747]"/>
  <match src="storage: storage [17671,17678]" dest="storage: storage [17671,17678]"/>
  <match src="{: { [46359,46360]" dest="{: { [46357,46358]"/>
  <match src="{: { [14945,14946]" dest="{: { [14945,14946]"/>
  <match src="yul_evm_builtin [42694,42699]" dest="yul_evm_builtin [42694,42699]"/>
  <match src="]: ] [48080,48081]" dest="]: ] [48695,48696]"/>
  <match src="parameter [9792,9796]" dest="parameter [9792,9796]"/>
  <match src="(: ( [49532,49533]" dest="(: ( [50147,50148]"/>
  <match src="(: ( [48395,48396]" dest="(: ( [49010,49011]"/>
  <match src="type_cast_expression [47565,47578]" dest="type_cast_expression [47563,47576]"/>
  <match src="function_definition [10264,10465]" dest="function_definition [10264,10465]"/>
  <match src="]: ] [47177,47178]" dest="]: ] [47175,47176]"/>
  <match src="identifier: memPtr [36025,36031]" dest="identifier: memPtr [36025,36031]"/>
  <match src="identifier: depositData [47250,47261]" dest="identifier: depositData [47248,47259]"/>
  <match src="identifier: set [16583,16586]" dest="identifier: set [16583,16586]"/>
  <match src="identifier: memPtr [36396,36402]" dest="identifier: memPtr [36396,36402]"/>
  <match src="function: function [8459,8467]" dest="function: function [8459,8467]"/>
  <match src="{: { [32310,32311]" dest="{: { [32310,32311]"/>
  <match src="identifier: lastIndex [13900,13909]" dest="identifier: lastIndex [13900,13909]"/>
  <match src="parameter [33068,33083]" dest="parameter [33068,33083]"/>
  <match src="parameter [46017,46031]" dest="parameter [46015,46029]"/>
  <match src=",: , [22981,22982]" dest=",: , [22981,22982]"/>
  <match src="): ) [37666,37667]" dest="): ) [37666,37667]"/>
  <match src="type_name [50266,50283]" dest="type_name [50881,50898]"/>
  <match src="function: function [23497,23505]" dest="function: function [23497,23505]"/>
  <match src="call_argument [24466,24484]" dest="call_argument [24466,24484]"/>
  <match src="call_expression [51046,51073]" dest="call_expression [51661,51688]"/>
  <match src="member_expression [38269,38280]" dest="member_expression [38269,38280]"/>
  <match src="): ) [52573,52574]" dest="): ) [53305,53306]"/>
  <match src="type_name [40126,40133]" dest="type_name [40126,40133]"/>
  <match src="): ) [29337,29338]" dest="): ) [29337,29338]"/>
  <match src="yul_function_call [39108,39125]" dest="yul_function_call [39108,39125]"/>
  <match src="type_name [12268,12277]" dest="type_name [12268,12277]"/>
  <match src="&quot;: &quot; [35601,35602]" dest="&quot;: &quot; [35601,35602]"/>
  <match src=":=: := [38588,38590]" dest=":=: := [38588,38590]"/>
  <match src="comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [19888,19968]" dest="comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [19888,19968]"/>
  <match src="identifier: target [22641,22647]" dest="identifier: target [22641,22647]"/>
  <match src="if: if [33752,33754]" dest="if: if [33752,33754]"/>
  <match src="identifier: memPtr [34955,34961]" dest="identifier: memPtr [34955,34961]"/>
  <match src="function: function [7254,7262]" dest="function: function [7254,7262]"/>
  <match src="function_definition [40047,41322]" dest="function_definition [40047,41322]"/>
  <match src="(: ( [40504,40505]" dest="(: ( [40504,40505]"/>
  <match src="{: { [36775,36776]" dest="{: { [36775,36776]"/>
  <match src="): ) [52200,52201]" dest="): ) [52932,52933]"/>
  <match src="identifier: byteLen [41154,41161]" dest="identifier: byteLen [41154,41161]"/>
  <match src="comment: // enforces 32 byte length [38118,38144]" dest="comment: // enforces 32 byte length [38118,38144]"/>
  <match src="identifier: isList [37097,37103]" dest="identifier: isList [37097,37103]"/>
  <match src="string [10375,10405]" dest="string [10375,10405]"/>
  <match src="array_access [9816,9849]" dest="array_access [9816,9849]"/>
  <match src="(: ( [15136,15137]" dest="(: ( [15136,15137]"/>
  <match src="comment: // means a value is not in the set. [12378,12413]" dest="comment: // means a value is not in the set. [12378,12413]"/>
  <match src="type_cast_expression [16680,16694]" dest="type_cast_expression [16680,16694]"/>
  <match src=",: , [7351,7352]" dest=",: , [7351,7352]"/>
  <match src="array_access [14422,14445]" dest="array_access [14422,14445]"/>
  <match src="): ) [47503,47504]" dest="): ) [47501,47502]"/>
  <match src="&lt;: &lt; [39754,39755]" dest="&lt;: &lt; [39754,39755]"/>
  <match src="type_name [38673,38680]" dest="type_name [38673,38680]"/>
  <match src="else: else [41894,41898]" dest="else: else [41894,41898]"/>
  <match src="comment: // # of bytes the actual length is [40518,40552]" dest="comment: // # of bytes the actual length is [40518,40552]"/>
  <match src="primitive_type [38489,38496]" dest="primitive_type [38489,38496]"/>
  <match src="identifier: account [29166,29173]" dest="identifier: account [29166,29173]"/>
  <match src="identifier: RoleAdminChanged [33367,33383]" dest="identifier: RoleAdminChanged [33367,33383]"/>
  <match src="binary_expression [38531,38546]" dest="binary_expression [38531,38546]"/>
  <match src="(: ( [31159,31160]" dest="(: ( [31159,31160]"/>
  <match src="=: = [36806,36807]" dest="=: = [36806,36807]"/>
  <match src="identifier: itemLen [40795,40802]" dest="identifier: itemLen [40795,40802]"/>
  <match src="block_statement [12754,13008]" dest="block_statement [12754,13008]"/>
  <match src="identifier: length [29715,29721]" dest="identifier: length [29715,29721]"/>
  <match src="binary_expression [41771,41795]" dest="binary_expression [41771,41795]"/>
  <match src="function_body [30723,30771]" dest="function_body [30723,30771]"/>
  <match src="=: = [34127,34128]" dest="=: = [34127,34128]"/>
  <match src="view: view [14925,14929]" dest="view: view [14925,14929]"/>
  <match src=".: . [35878,35879]" dest=".: . [35878,35879]"/>
  <match src="type_name [4741,4748]" dest="type_name [4741,4748]"/>
  <match src="(: ( [45610,45611]" dest="(: ( [45608,45609]"/>
  <match src="identifier: keccak256 [44989,44998]" dest="identifier: keccak256 [44987,44996]"/>
  <match src="type_name [37378,37385]" dest="type_name [37378,37385]"/>
  <match src="variable_declaration_statement [13839,13878]" dest="variable_declaration_statement [13839,13878]"/>
  <match src="call_expression [16650,16696]" dest="call_expression [16650,16696]"/>
  <match src="variable_declaration_statement [51925,52069]" dest="variable_declaration_statement [52657,52801]"/>
  <match src="primitive_type [50886,50893]" dest="primitive_type [51501,51508]"/>
  <match src="identifier: ERC165 [9009,9015]" dest="identifier: ERC165 [9009,9015]"/>
  <match src="type_name [28422,28429]" dest="type_name [28422,28429]"/>
  <match src="bytes: bytes [47208,47213]" dest="bytes: bytes [47206,47211]"/>
  <match src="yul_identifier [35271,35277]" dest="yul_identifier [35271,35277]"/>
  <match src="(: ( [30678,30679]" dest="(: ( [30678,30679]"/>
  <match src="solidity: solidity [44443,44451]" dest="solidity: solidity [44443,44451]"/>
  <match src="type_name [48898,48905]" dest="type_name [49513,49520]"/>
  <match src="}: } [41548,41549]" dest="}: } [41548,41549]"/>
  <match src="type_name [39689,39696]" dest="type_name [39689,39696]"/>
  <match src="): ) [50640,50641]" dest="): ) [51255,51256]"/>
  <match src="solidity_version:  0.6.6 [33947,33953]" dest="solidity_version:  0.6.6 [33947,33953]"/>
  <match src="identifier: MANAGER_ROLE [50241,50253]" dest="identifier: MANAGER_ROLE [50856,50868]"/>
  <match src="expression_statement [49033,49185]" dest="expression_statement [49648,49800]"/>
  <match src=".: . [37213,37214]" dest=".: . [37213,37214]"/>
  <match src="identifier: token [52154,52159]" dest="identifier: token [52886,52891]"/>
  <match src="type_name [6135,6142]" dest="type_name [6135,6142]"/>
  <match src="solidity_version_comparison_operator [6321,6323]" dest="solidity_version_comparison_operator [6321,6323]"/>
  <match src="array_access [48464,48476]" dest="array_access [49079,49091]"/>
  <match src="parameter [29308,29320]" dest="parameter [29308,29320]"/>
  <match src="return: return [18492,18498]" dest="return: return [18492,18498]"/>
  <match src="function_body [42213,42873]" dest="function_body [42213,42873]"/>
  <match src="state_variable_declaration [34772,34811]" dest="state_variable_declaration [34772,34811]"/>
  <match src="call_argument [44571,44587]" dest="call_argument [44571,44587]"/>
  <match src="uint256: uint256 [17994,18001]" dest="uint256: uint256 [17994,18001]"/>
  <match src="array_access [49658,49678]" dest="array_access [50273,50293]"/>
  <match src="expression_statement [47477,47649]" dest="expression_statement [47475,47647]"/>
  <match src=",: , [51709,51710]" dest=",: , [52441,52442]"/>
  <match src="address: address [45650,45657]" dest="address: address [45648,45655]"/>
  <match src="if: if [24680,24682]" dest="if: if [24680,24682]"/>
  <match src="type_name [36291,36298]" dest="type_name [36291,36298]"/>
  <match src="identifier: _contains [14875,14884]" dest="identifier: _contains [14875,14884]"/>
  <match src="uint256: uint256 [48008,48015]" dest="uint256: uint256 [48623,48630]"/>
  <match src="[: [ [49011,49012]" dest="[: [ [49626,49627]"/>
  <match src="}: } [52858,52859]" dest="}: } [53590,53591]"/>
  <match src="&gt;=: &gt;= [41684,41686]" dest="&gt;=: &gt;= [41684,41686]"/>
  <match src="): ) [28813,28814]" dest="): ) [28813,28814]"/>
  <match src="string [21662,21664]" dest="string [21662,21664]"/>
  <match src=".: . [36395,36396]" dest=".: . [36395,36396]"/>
  <match src="type_name [7448,7454]" dest="type_name [7448,7454]"/>
  <match src="(: ( [38215,38216]" dest="(: ( [38215,38216]"/>
  <match src="&quot;: &quot; [32402,32403]" dest="&quot;: &quot; [32402,32403]"/>
  <match src="uint256: uint256 [2374,2381]" dest="uint256: uint256 [2374,2381]"/>
  <match src="identifier: WORD_SIZE [42453,42462]" dest="identifier: WORD_SIZE [42453,42462]"/>
  <match src="number_literal: 0 [35174,35175]" dest="number_literal: 0 [35174,35175]"/>
  <match src="yul_path [38581,38587]" dest="yul_path [38581,38587]"/>
  <match src="variable_declaration_statement [38514,38547]" dest="variable_declaration_statement [38514,38547]"/>
  <match src="yul_identifier [42836,42844]" dest="yul_identifier [42836,42844]"/>
  <match src="identifier: data [7401,7405]" dest="identifier: data [7401,7405]"/>
  <match src="+: + [41936,41937]" dest="+: + [41936,41937]"/>
  <match src="identifier: currPtr [39863,39870]" dest="identifier: currPtr [39863,39870]"/>
  <match src="identifier: item [35747,35751]" dest="identifier: item [35747,35751]"/>
  <match src="(: ( [45763,45764]" dest="(: ( [45761,45762]"/>
  <match src="identifier: _values [12956,12963]" dest="identifier: _values [12956,12963]"/>
  <match src="variable_declaration [47169,47193]" dest="variable_declaration [47167,47191]"/>
  <match src="solidity_version:  0.6.6 [42958,42964]" dest="solidity_version:  0.6.6 [42958,42964]"/>
  <match src="): ) [17389,17390]" dest="): ) [17389,17390]"/>
  <match src="]: ] [1726,1727]" dest="]: ] [1726,1727]"/>
  <match src="identifier: item [38314,38318]" dest="identifier: item [38314,38318]"/>
  <match src="identifier: currPtr [39627,39634]" dest="identifier: currPtr [39627,39634]"/>
  <match src="}: } [19006,19007]" dest="}: } [19006,19007]"/>
  <match src="uint256: uint256 [40106,40113]" dest="uint256: uint256 [40106,40113]"/>
  <match src="call_expression [29384,29422]" dest="call_expression [29384,29422]"/>
  <match src="state_mutability [847,851]" dest="state_mutability [847,851]"/>
  <match src="return_statement [37274,37303]" dest="return_statement [37274,37303]"/>
  <match src=".: . [14672,14673]" dest=".: . [14672,14673]"/>
  <match src="identifier: memPtr [41073,41079]" dest="identifier: memPtr [41073,41079]"/>
  <match src="call_argument [35347,35353]" dest="call_argument [35347,35353]"/>
  <match src="uint256: uint256 [45542,45549]" dest="uint256: uint256 [45540,45547]"/>
  <match src="identifier: interfaceId [9749,9760]" dest="identifier: interfaceId [9749,9760]"/>
  <match src="inheritance_specifier [44850,44863]" dest="inheritance_specifier [44848,44861]"/>
  <match src="): ) [35843,35844]" dest="): ) [35843,35844]"/>
  <match src="primitive_type [1407,1414]" dest="primitive_type [1407,1414]"/>
  <match src="identifier: IERC165 [1195,1202]" dest="identifier: IERC165 [1195,1202]"/>
  <match src="function_body [17723,17781]" dest="function_body [17723,17781]"/>
  <match src="{: { [19877,19878]" dest="{: { [19877,19878]"/>
  <match src="parameter [12709,12713]" dest="parameter [12709,12713]"/>
  <match src="string [48271,48329]" dest="string [48886,48944]"/>
  <match src="uint256: uint256 [7362,7369]" dest="uint256: uint256 [7362,7369]"/>
  <match src="identifier: onERC1155Received [7263,7280]" dest="identifier: onERC1155Received [7263,7280]"/>
  <match src="mload: mload [25086,25091]" dest="mload: mload [25086,25091]"/>
  <match src="identifier: mask [42779,42783]" dest="identifier: mask [42779,42783]"/>
  <match src="false: false [14756,14761]" dest="false: false [14756,14761]"/>
  <match src="): ) [50655,50656]" dest="): ) [51270,51271]"/>
  <match src="primitive_type [12709,12713]" dest="primitive_type [12709,12713]"/>
  <match src="}: } [26051,26052]" dest="}: } [26051,26052]"/>
  <match src="=: = [14343,14344]" dest="=: = [14343,14344]"/>
  <match src="type_name [50196,50201]" dest="type_name [50811,50816]"/>
  <match src="variable_declaration_statement [37537,37583]" dest="variable_declaration_statement [37537,37583]"/>
  <match src="yul_identifier [42398,42402]" dest="yul_identifier [42398,42402]"/>
  <match src="return_type_definition [15592,15609]" dest="return_type_definition [15592,15609]"/>
  <match src="call_argument [33384,33388]" dest="call_argument [33384,33388]"/>
  <match src="identifier: STRING_SHORT_START [41573,41591]" dest="identifier: STRING_SHORT_START [41573,41591]"/>
  <match src="identifier: this [24147,24151]" dest="identifier: this [24147,24151]"/>
  <match src="function: function [22926,22934]" dest="function: function [22926,22934]"/>
  <match src="identifier: account [29414,29421]" dest="identifier: account [29414,29421]"/>
  <match src="identifier: byte0 [41906,41911]" dest="identifier: byte0 [41906,41911]"/>
  <match src="address: address [6099,6106]" dest="address: address [6099,6106]"/>
  <match src="{: { [25040,25041]" dest="{: { [25040,25041]"/>
  <match src="function: function [18180,18188]" dest="function: function [18180,18188]"/>
  <match src="parameter [31052,31064]" dest="parameter [31052,31064]"/>
  <match src="internal: internal [16830,16838]" dest="internal: internal [16830,16838]"/>
  <match src="event_definition [1900,1987]" dest="event_definition [1900,1987]"/>
  <match src="call_argument [35569,35573]" dest="call_argument [35569,35573]"/>
  <match src="user_defined_type [10696,10712]" dest="user_defined_type [10696,10712]"/>
  <match src=",: , [24349,24350]" dest=",: , [24349,24350]"/>
  <match src="type_name [38998,39003]" dest="type_name [38998,39003]"/>
  <match src="string [23671,23714]" dest="string [23671,23714]"/>
  <match src="identifier: value [16119,16124]" dest="identifier: value [16119,16124]"/>
  <match src="event_paramater [29175,29197]" dest="event_paramater [29175,29197]"/>
  <match src="function_body [26125,26293]" dest="function_body [26125,26293]"/>
  <match src="=: = [35967,35968]" dest="=: = [35967,35968]"/>
  <match src="parameter [17684,17697]" dest="parameter [17684,17697]"/>
  <match src=",: , [8573,8574]" dest=",: , [8573,8574]"/>
  <match src="type_name [7318,7325]" dest="type_name [7318,7325]"/>
  <match src="number_literal: 1 [42639,42640]" dest="number_literal: 1 [42639,42640]"/>
  <match src="function_body [23610,23723]" dest="function_body [23610,23723]"/>
  <match src="indexed: indexed [29183,29190]" dest="indexed: indexed [29183,29190]"/>
  <match src="identifier: itemLen [40286,40293]" dest="identifier: itemLen [40286,40293]"/>
  <match src="calldata: calldata [5492,5500]" dest="calldata: calldata [5492,5500]"/>
  <match src="identifier: ApprovalForAll [1906,1920]" dest="identifier: ApprovalForAll [1906,1920]"/>
  <match src=",: , [35289,35290]" dest=",: , [35289,35290]"/>
  <match src="identifier: memPtr [41128,41134]" dest="identifier: memPtr [41128,41134]"/>
  <match src="variable_declaration [38742,38760]" dest="variable_declaration [38742,38760]"/>
  <match src="{: { [42372,42373]" dest="{: { [42372,42373]"/>
  <match src="primitive_type [49197,49204]" dest="primitive_type [49812,49819]"/>
  <match src="): ) [46994,46995]" dest="): ) [46992,46993]"/>
  <match src=",: , [18901,18902]" dest=",: , [18901,18902]"/>
  <match src="expression_statement [39779,39820]" dest="expression_statement [39779,39820]"/>
  <match src="function_definition [31505,31735]" dest="function_definition [31505,31735]"/>
  <match src="primitive_type [13420,13427]" dest="primitive_type [13420,13427]"/>
  <match src="emit: emit [33809,33813]" dest="emit: emit [33809,33813]"/>
  <match src="else: else [40308,40312]" dest="else: else [40308,40312]"/>
  <match src="(: ( [15546,15547]" dest="(: ( [15546,15547]"/>
  <match src="return_statement [16079,16128]" dest="return_statement [16079,16128]"/>
  <match src="if_statement [42224,42245]" dest="if_statement [42224,42245]"/>
  <match src="}: } [25281,25282]" dest="}: } [25281,25282]"/>
  <match src="type_name [8528,8535]" dest="type_name [8528,8535]"/>
  <match src=",: , [17682,17683]" dest=",: , [17682,17683]"/>
  <match src="call_argument [18507,18517]" dest="call_argument [18507,18517]"/>
  <match src="parameter [4729,4739]" dest="parameter [4729,4739]"/>
  <match src="type_name [50341,50358]" dest="type_name [50956,50973]"/>
  <match src="identifier: length [13924,13930]" dest="identifier: length [13924,13930]"/>
  <match src="=: = [36057,36058]" dest="=: = [36057,36058]"/>
  <match src="identifier: item [37819,37823]" dest="identifier: item [37819,37823]"/>
  <match src="visibility [22580,22588]" dest="visibility [22580,22588]"/>
  <match src=",: , [52041,52042]" dest=",: , [52773,52774]"/>
  <match src="&quot;: &quot; [38324,38325]" dest="&quot;: &quot; [38324,38325]"/>
  <match src="identifier: byte0 [40317,40322]" dest="identifier: byte0 [40317,40322]"/>
  <match src="identifier: _length [16880,16887]" dest="identifier: _length [16880,16887]"/>
  <match src="event_paramater [45542,45555]" dest="event_paramater [45540,45553]"/>
  <match src="state_variable_declaration [28036,28086]" dest="state_variable_declaration [28036,28086]"/>
  <match src="primitive_type [4765,4772]" dest="primitive_type [4765,4772]"/>
  <match src="type_name [49197,49206]" dest="type_name [49812,49821]"/>
  <match src="type_name [45566,45575]" dest="type_name [45564,45573]"/>
  <match src="): ) [18479,18480]" dest="): ) [18479,18480]"/>
  <match src="(: ( [15628,15629]" dest="(: ( [15628,15629]"/>
  <match src="identifier: i [49718,49719]" dest="identifier: i [50333,50334]"/>
  <match src="address: address [28766,28773]" dest="address: address [28766,28773]"/>
  <match src="variable_declaration_statement [50429,50476]" dest="variable_declaration_statement [51044,51091]"/>
  <match src="primitive_type [1427,1434]" dest="primitive_type [1427,1434]"/>
  <match src="function_body [38731,39220]" dest="function_body [38731,39220]"/>
  <match src="(: ( [35568,35569]" dest="(: ( [35568,35569]"/>
  <match src="call_argument [36938,36949]" dest="call_argument [36938,36949]"/>
  <match src="call_argument [50654,50655]" dest="call_argument [51269,51270]"/>
  <match src="return: return [14956,14962]" dest="return: return [14956,14962]"/>
  <match src="identifier: memPtr [39671,39677]" dest="identifier: memPtr [39671,39677]"/>
  <match src="identifier: UintSet [18428,18435]" dest="identifier: UintSet [18428,18435]"/>
  <match src="(: ( [50800,50801]" dest="(: ( [51415,51416]"/>
  <match src="function_definition [21365,21762]" dest="function_definition [21365,21762]"/>
  <match src="binary_expression [40317,40342]" dest="binary_expression [40317,40342]"/>
  <match src="call_expression [24131,24212]" dest="call_expression [24131,24212]"/>
  <match src="binary_expression [37601,37623]" dest="binary_expression [37601,37623]"/>
  <match src="identifier: byte0 [40258,40263]" dest="identifier: byte0 [40258,40263]"/>
  <match src="function: function [15081,15089]" dest="function: function [15081,15089]"/>
  <match src="emit_statement [33362,33425]" dest="emit_statement [33362,33425]"/>
  <match src="expression_statement [51531,51595]" dest="expression_statement [52146,52327]"/>
  <match src="identifier: log [50209,50212]" dest="identifier: log [50824,50827]"/>
  <match src="identifier: members [33572,33579]" dest="identifier: members [33572,33579]"/>
  <match src="identifier: from [4723,4727]" dest="identifier: from [4723,4727]"/>
  <match src="bytes32: bytes32 [45021,45028]" dest="bytes32: bytes32 [45019,45026]"/>
  <match src="++: ++ [49575,49577]" dest="++: ++ [50190,50192]"/>
  <match src="(: ( [24138,24139]" dest="(: ( [24138,24139]"/>
  <match src="identifier: lastvalue [14435,14444]" dest="identifier: lastvalue [14435,14444]"/>
  <match src="string [24171,24211]" dest="string [24171,24211]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [21533,21601]" dest="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [21533,21601]"/>
  <match src="primitive_type [52724,52729]" dest="primitive_type [53456,53461]"/>
  <match src="yul_identifier [20327,20335]" dest="yul_identifier [20327,20335]"/>
  <match src="identifier: ids [8570,8573]" dest="identifier: ids [8570,8573]"/>
  <match src="call_argument [24274,24286]" dest="call_argument [24274,24286]"/>
  <match src="&lt;: &lt; [41777,41778]" dest="&lt;: &lt; [41777,41778]"/>
  <match src="address: address [45506,45513]" dest="address: address [45504,45511]"/>
  <match src="call_argument [47541,47550]" dest="call_argument [47539,47548]"/>
  <match src="identifier: offset [37833,37839]" dest="identifier: offset [37833,37839]"/>
  <match src=",: , [23099,23100]" dest=",: , [23099,23100]"/>
  <match src="bytes32: bytes32 [51834,51841]" dest="bytes32: bytes32 [52566,52573]"/>
  <match src=",: , [5456,5457]" dest=",: , [5456,5457]"/>
  <match src=".: . [24839,24840]" dest=".: . [24839,24840]"/>
  <match src="member_expression [10785,10887]" dest="member_expression [10785,10887]"/>
  <match src="function: function [50120,50128]" dest="function: function [50735,50743]"/>
  <match src="primitive_type [17287,17294]" dest="primitive_type [17287,17294]"/>
  <match src="parameter [46226,46233]" dest="parameter [46224,46231]"/>
  <match src="extcodehash: extcodehash [20339,20350]" dest="extcodehash: extcodehash [20339,20350]"/>
  <match src="revert_statement [52781,52838]" dest="revert_statement [53513,53570]"/>
  <match src="identifier: len [42632,42635]" dest="identifier: len [42632,42635]"/>
  <match src="uint8: uint8 [34817,34822]" dest="uint8: uint8 [34817,34822]"/>
  <match src="type_name [22598,22603]" dest="type_name [22598,22603]"/>
  <match src="): ) [38475,38476]" dest="): ) [38475,38476]"/>
  <match src="identifier: RLPItem [50276,50283]" dest="identifier: RLPItem [50891,50898]"/>
  <match src="true: true [12992,12996]" dest="true: true [12992,12996]"/>
  <match src="primitive_type [51667,51674]" dest="primitive_type [52399,52406]"/>
  <match src="string [35177,35210]" dest="string [35177,35210]"/>
  <match src="member_expression [10785,10830]" dest="member_expression [10785,10830]"/>
  <match src="identifier: set [14422,14425]" dest="identifier: set [14422,14425]"/>
  <match src="identifier: ids [2947,2950]" dest="identifier: ids [2947,2950]"/>
  <match src="type_name [49238,49247]" dest="type_name [49853,49862]"/>
  <match src="solidity_pragma_token [11024,11039]" dest="solidity_pragma_token [11024,11039]"/>
  <match src="uint256: uint256 [18968,18975]" dest="uint256: uint256 [18968,18975]"/>
  <match src="): ) [46037,46038]" dest="): ) [46035,46036]"/>
  <match src="(: ( [35333,35334]" dest="(: ( [35333,35334]"/>
  <match src="}: } [23722,23723]" dest="}: } [23722,23723]"/>
  <match src="identifier: EnumerableSet [27797,27810]" dest="identifier: EnumerableSet [27797,27810]"/>
  <match src=":=: := [40803,40805]" dest=":=: := [40803,40805]"/>
  <match src="return_statement [18274,18319]" dest="return_statement [18274,18319]"/>
  <match src="type_name [7362,7369]" dest="type_name [7362,7369]"/>
  <match src="string [44999,45013]" dest="string [44997,45011]"/>
  <match src="yul_assignment [41222,41262]" dest="yul_assignment [41222,41262]"/>
  <match src="+=: += [42450,42452]" dest="+=: += [42450,42452]"/>
  <match src="(: ( [38031,38032]" dest="(: ( [38031,38032]"/>
  <match src="&quot;: &quot; [21663,21664]" dest="&quot;: &quot; [21663,21664]"/>
  <match src="(: ( [51841,51842]" dest="(: ( [52573,52574]"/>
  <match src="): ) [48088,48089]" dest="): ) [48703,48704]"/>
  <match src="lt: lt [37975,37977]" dest="lt: lt [37975,37977]"/>
  <match src="call_expression [45802,45834]" dest="call_expression [45800,45832]"/>
  <match src="function: function [33278,33286]" dest="function: function [33278,33286]"/>
  <match src="identifier: logTopicRLPList [50368,50383]" dest="identifier: logTopicRLPList [50983,50998]"/>
  <match src="}: } [41287,41288]" dest="}: } [41287,41288]"/>
  <match src="yul_function_call [41516,41538]" dest="yul_function_call [41516,41538]"/>
  <match src=",: , [34163,34164]" dest=",: , [34163,34164]"/>
  <match src="): ) [39928,39929]" dest="): ) [39928,39929]"/>
  <match src="call_expression [50775,50802]" dest="call_expression [51390,51417]"/>
  <match src="parameter [46208,46215]" dest="parameter [46206,46213]"/>
  <match src="identifier: UintSet [17973,17980]" dest="identifier: UintSet [17973,17980]"/>
  <match src="constant: constant [28051,28059]" dest="constant: constant [28051,28059]"/>
  <match src="yul_evm_builtin [41146,41149]" dest="yul_evm_builtin [41146,41149]"/>
  <match src="uint8: uint8 [36352,36357]" dest="uint8: uint8 [36352,36357]"/>
  <match src="memory: memory [35128,35134]" dest="memory: memory [35128,35134]"/>
  <match src="uint256: uint256 [2658,2665]" dest="uint256: uint256 [2658,2665]"/>
  <match src="boolean_literal [13036,13041]" dest="boolean_literal [13036,13041]"/>
  <match src="type_name [37777,37784]" dest="type_name [37777,37784]"/>
  <match src=",: , [46886,46887]" dest=",: , [46884,46885]"/>
  <match src="identifier: RLPReader [44924,44933]" dest="identifier: RLPReader [44922,44931]"/>
  <match src="primitive_type [37777,37784]" dest="primitive_type [37777,37784]"/>
  <match src="state_mutability [29653,29657]" dest="state_mutability [29653,29657]"/>
  <match src="variable_declaration [39591,39604]" dest="variable_declaration [39591,39604]"/>
  <match src="identifier: contractId [34084,34094]" dest="identifier: contractId [34084,34094]"/>
  <match src="(: ( [33783,33784]" dest="(: ( [33783,33784]"/>
  <match src="parameter [43663,43680]" dest="parameter [43663,43680]"/>
  <match src="sub: sub [40726,40729]" dest="sub: sub [40726,40729]"/>
  <match src="function_definition [25946,26052]" dest="function_definition [25946,26052]"/>
  <match src="{: { [51910,51911]" dest="{: { [52642,52643]"/>
  <match src="binary_expression [14448,14465]" dest="binary_expression [14448,14465]"/>
  <match src="member_expression [35903,35914]" dest="member_expression [35903,35914]"/>
  <match src="struct_declaration [17428,17472]" dest="struct_declaration [17428,17472]"/>
  <match src="call_argument [32329,32352]" dest="call_argument [32329,32352]"/>
  <match src="string [51780,51782]" dest="string [52512,52514]"/>
  <match src="parameter [50196,50212]" dest="parameter [50811,50827]"/>
  <match src="=: = [20180,20181]" dest="=: = [20180,20181]"/>
</matches>
<actions>
  <insert-node tree="comment: // Used when attempting to exit with single token, single amount/ id is converted into [47666,47752]" parent="contract_body [44863,53591]" at="16"/>
  <insert-node tree="comment: // slice of amounts/ ids [47758,47782]" parent="contract_body [44863,53591]" at="17"/>
  <insert-node tree="comment: // Generally size is going to be `1` i.e. single element array, but it's kept generic [47788,47873]" parent="contract_body [44863,53591]" at="18"/>
  <insert-tree tree="function_definition [47879,48271]" parent="contract_body [44863,53591]" at="19"/>
  <insert-node tree="call_argument [52199,52224]" parent="call_expression [52146,52326]" at="4"/>
  <insert-node tree="call_argument [52248,52292]" parent="call_expression [52146,52326]" at="6"/>
  <update-node tree="identifier: mint [51537,51541]" label="mintBatch"/>
  <insert-node tree="call_expression [52199,52224]" parent="call_argument [52199,52224]" at="0"/>
  <insert-node tree="call_expression [52248,52292]" parent="call_argument [52248,52292]" at="0"/>
  <insert-node tree="identifier: makeArrayWithValue [52199,52217]" parent="call_expression [52199,52224]" at="0"/>
  <insert-node tree="(: ( [52217,52218]" parent="call_expression [52199,52224]" at="1"/>
  <move-tree tree="call_argument [51557,51559]" parent="call_expression [52199,52224]" at="2"/>
  <insert-node tree=",: , [52220,52221]" parent="call_expression [52199,52224]" at="3"/>
  <insert-tree tree="call_argument [52222,52223]" parent="call_expression [52199,52224]" at="4"/>
  <insert-node tree="): ) [52223,52224]" parent="call_expression [52199,52224]" at="5"/>
  <insert-node tree="identifier: makeArrayWithValue [52248,52266]" parent="call_expression [52248,52292]" at="0"/>
  <insert-node tree="(: ( [52266,52267]" parent="call_expression [52248,52292]" at="1"/>
  <move-tree tree="call_argument [51561,51582]" parent="call_expression [52248,52292]" at="2"/>
  <insert-node tree=",: , [52288,52289]" parent="call_expression [52248,52292]" at="3"/>
  <insert-tree tree="call_argument [52290,52291]" parent="call_expression [52248,52292]" at="4"/>
  <insert-node tree="): ) [52291,52292]" parent="call_expression [52248,52292]" at="5"/>
</actions>
