<?xml version="1.0" ?>
<matches>
  <match src="(: ( [39810,39811]" dest="(: ( [42290,42291]"/>
  <match src="using: using [44902,44907]" dest="using: using [47243,47248]"/>
  <match src="(: ( [21383,21384]" dest="(: ( [21383,21384]"/>
  <match src="sub: sub [41146,41149]" dest="sub: sub [43588,43591]"/>
  <match src="(: ( [25234,25235]" dest="(: ( [25234,25235]"/>
  <match src="user_defined_type [9019,9026]" dest="user_defined_type [9019,9026]"/>
  <match src="returns: returns [30705,30712]" dest="returns: returns [30705,30712]"/>
  <match src="external: external [2635,2643]" dest="external: external [2635,2643]"/>
  <match src="pure: pure [42208,42212]" dest="pure: pure [44585,44589]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [16468,16540]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [16468,16540]"/>
  <match src="): ) [47575,47576]" dest="): ) [49916,49917]"/>
  <match src="string_literal [52512,52514]" dest="string_literal [54698,54700]"/>
  <match src="return_statement [42238,42245]" dest="return_statement [44615,44622]"/>
  <match src="yul_identifier [42779,42783]" dest="yul_identifier [45199,45203]"/>
  <match src="(: ( [49502,49503]" dest="(: ( [51843,51844]"/>
  <match src="parameter [21411,21425]" dest="parameter [21411,21425]"/>
  <match src="type_name [861,865]" dest="type_name [861,865]"/>
  <match src="identifier: _roles [33435,33441]" dest="identifier: _roles [33435,33441]"/>
  <match src="}: } [32450,32451]" dest="}: } [32450,32451]"/>
  <match src="identifier: account [31074,31081]" dest="identifier: account [31074,31081]"/>
  <match src="primitive_type [46224,46231]" dest="primitive_type [48565,48572]"/>
  <match src="identifier: role [30748,30752]" dest="identifier: role [30748,30752]"/>
  <match src="identifier: initializer [44529,44540]" dest="identifier: initializer [46968,46979]"/>
  <match src="primitive_type [26111,26116]" dest="primitive_type [26111,26116]"/>
  <match src="primitive_type [23528,23535]" dest="primitive_type [23528,23535]"/>
  <match src="{: { [30412,30413]" dest="{: { [30412,30413]"/>
  <match src="identifier: memPtr [38522,38528]" dest="identifier: memPtr [41333,41339]"/>
  <match src="): ) [40082,40083]" dest="): ) [42469,42470]"/>
  <match src="type_name [21411,21418]" dest="type_name [21411,21418]"/>
  <match src="state_mutability [847,851]" dest="state_mutability [847,851]"/>
  <match src="identifier: _add [12655,12659]" dest="identifier: _add [12655,12659]"/>
  <match src="&lt;: &lt; [48187,48188]" dest="&lt;: &lt; [50528,50529]"/>
  <match src="identifier: len [42312,42315]" dest="identifier: len [44689,44692]"/>
  <match src="call_argument [53144,53147]" dest="call_argument [55137,55140]"/>
  <match src="state_mutability [18243,18247]" dest="state_mutability [18243,18247]"/>
  <match src="visibility [3546,3554]" dest="visibility [3546,3554]"/>
  <match src="type_name [52817,52833]" dest="type_name [54970,54986]"/>
  <match src="): ) [16364,16365]" dest="): ) [16364,16365]"/>
  <match src="identifier: tokenBalances [49530,49543]" dest="identifier: tokenBalances [51871,51884]"/>
  <match src="[: [ [33762,33763]" dest="[: [ [33762,33763]"/>
  <match src="bytes: bytes [46015,46020]" dest="bytes: bytes [48356,48361]"/>
  <match src="return_type_definition [38207,38224]" dest="return_type_definition [41216,41230]"/>
  <match src="type_cast_expression [24139,24152]" dest="type_cast_expression [24139,24152]"/>
  <match src="parameter [4200,4210]" dest="parameter [4200,4210]"/>
  <match src="): ) [24211,24212]" dest="): ) [24211,24212]"/>
  <match src="(: ( [30713,30714]" dest="(: ( [30713,30714]"/>
  <match src="call_argument [53238,53247]" dest="call_argument [55458,55467]"/>
  <match src="identifier: AddressSet [15774,15784]" dest="identifier: AddressSet [15774,15784]"/>
  <match src="type_name [5441,5448]" dest="type_name [5441,5448]"/>
  <match src="(: ( [3289,3290]" dest="(: ( [3289,3290]"/>
  <match src="yul_evm_builtin [36893,36896]" dest="yul_evm_builtin [39667,39670]"/>
  <match src="identifier: value [16359,16364]" dest="identifier: value [16359,16364]"/>
  <match src="expression_statement [36047,36084]" dest="expression_statement [37862,37899]"/>
  <match src=",: , [51511,51512]" dest=",: , [54098,54099]"/>
  <match src="function_definition [15081,15190]" dest="function_definition [15081,15190]"/>
  <match src="identifier: index [18992,18997]" dest="identifier: index [18992,18997]"/>
  <match src="call_argument [24274,24286]" dest="call_argument [24274,24286]"/>
  <match src="[: [ [14975,14976]" dest="[: [ [14975,14976]"/>
  <match src="struct_declaration [27880,27975]" dest="struct_declaration [27880,27975]"/>
  <match src="): ) [42714,42715]" dest="): ) [45130,45131]"/>
  <match src="&quot;: &quot; [45066,45067]" dest="&quot;: &quot; [47407,47408]"/>
  <match src="return_statement [38627,38641]" dest="return_statement [41438,41452]"/>
  <match src="type_cast_expression [52316,52325]" dest="type_cast_expression [54445,54454]"/>
  <match src="(: ( [52406,52407]" dest="(: ( [54575,54576]"/>
  <match src="identifier: value [24646,24651]" dest="identifier: value [24646,24651]"/>
  <match src="function: function [50735,50743]" dest="function: function [53320,53328]"/>
  <match src="!=: != [13488,13490]" dest="!=: != [13488,13490]"/>
  <match src="(: ( [50855,50856]" dest="(: ( [53440,53441]"/>
  <match src="identifier: account [33724,33731]" dest="identifier: account [33724,33731]"/>
  <match src="[: [ [47269,47270]" dest="[: [ [49610,49611]"/>
  <match src="primitive_type [50148,50155]" dest="primitive_type [52561,52568]"/>
  <match src="user_defined_type [38172,38179]" dest="user_defined_type [41181,41188]"/>
  <match src="type_cast_expression [17352,17392]" dest="type_cast_expression [17352,17392]"/>
  <match src="address: address [46833,46840]" dest="address: address [49174,49181]"/>
  <match src="new: new [49849,49852]" dest="new: new [52202,52205]"/>
  <match src=",: , [12675,12676]" dest=",: , [12675,12676]"/>
  <match src="primitive_type [28766,28773]" dest="primitive_type [28766,28773]"/>
  <match src="call_expression [38292,38373]" dest="call_expression [41553,41574]"/>
  <match src="}: } [38109,38110]" dest="}: } [41118,41119]"/>
  <match src="(: ( [42619,42620]" dest="(: ( [45027,45028]"/>
  <match src="type_name [48687,48694]" dest="type_name [51028,51035]"/>
  <match src="member_expression [53106,53116]" dest="member_expression [55124,55134]"/>
  <match src="view: view [3555,3559]" dest="view: view [3555,3559]"/>
  <match src="(: ( [817,818]" dest="(: ( [817,818]"/>
  <match src="): ) [41162,41163]" dest="): ) [43604,43605]"/>
  <match src="identifier: _contains [14875,14884]" dest="identifier: _contains [14875,14884]"/>
  <match src="parameter [10292,10310]" dest="parameter [10292,10310]"/>
  <match src="identifier: isContract [19820,19830]" dest="identifier: isContract [19820,19830]"/>
  <match src="address: address [3290,3297]" dest="address: address [3290,3297]"/>
  <match src="type_name [19871,19875]" dest="type_name [19871,19875]"/>
  <match src="identifier: amounts [53430,53437]" dest="identifier: amounts [55267,55274]"/>
  <match src="uint256: uint256 [48109,48116]" dest="uint256: uint256 [50450,50457]"/>
  <match src="call_argument [39030,39033]" dest="call_argument [41677,41680]"/>
  <match src="call_argument [31622,31634]" dest="call_argument [31622,31634]"/>
  <match src="bytes32: bytes32 [31525,31532]" dest="bytes32: bytes32 [31525,31532]"/>
  <match src="(: ( [42397,42398]" dest="(: ( [44774,44775]"/>
  <match src="identifier: initialize [45637,45647]" dest="identifier: initialize [47978,47988]"/>
  <match src="type_name [45564,45571]" dest="type_name [47905,47912]"/>
  <match src="identifier: _ [44599,44600]" dest="identifier: _ [47038,47039]"/>
  <match src=",: , [6109,6110]" dest=",: , [6109,6110]"/>
  <match src="yul_evm_builtin [39108,39111]" dest="yul_evm_builtin [41752,41755]"/>
  <match src="state_variable_declaration [34772,34811]" dest="state_variable_declaration [34773,34814]"/>
  <match src="identifier: set [14422,14425]" dest="identifier: set [14422,14425]"/>
  <match src="variable_declaration_statement [49034,49048]" dest="variable_declaration_statement [51375,51389]"/>
  <match src="++: ++ [48196,48198]" dest="++: ++ [50537,50539]"/>
  <match src="&gt;: &gt; [24847,24848]" dest="&gt;: &gt; [24847,24848]"/>
  <match src="identifier: _indexes [14967,14975]" dest="identifier: _indexes [14967,14975]"/>
  <match src="}: } [31734,31735]" dest="}: } [31734,31735]"/>
  <match src="identifier: keccak256 [45145,45154]" dest="identifier: keccak256 [47486,47495]"/>
  <match src="if: if [52100,52102]" dest="if: if [54359,54361]"/>
  <match src="): ) [15113,15114]" dest="): ) [15113,15114]"/>
  <match src="uint256: uint256 [13839,13846]" dest="uint256: uint256 [13839,13846]"/>
  <match src="uint256: uint256 [13420,13427]" dest="uint256: uint256 [13420,13427]"/>
  <match src="{: { [50254,50255]" dest="{: { [52667,52668]"/>
  <match src="identifier: target [22641,22647]" dest="identifier: target [22641,22647]"/>
  <match src="expression_statement [39148,39189]" dest="expression_statement [41792,41819]"/>
  <match src="): ) [24629,24630]" dest="): ) [24629,24630]"/>
  <match src="identifier: LIST_LONG_START [40879,40894]" dest="identifier: LIST_LONG_START [43309,43324]"/>
  <match src="identifier: _roles [28021,28027]" dest="identifier: _roles [28021,28027]"/>
  <match src="call_expression [51067,51090]" dest="call_expression [53652,53675]"/>
  <match src="parameter [17287,17300]" dest="parameter [17287,17300]"/>
  <match src="identifier: vals [48215,48219]" dest="identifier: vals [50556,50560]"/>
  <match src="comment: // the array, and then remove the last element (sometimes called as 'swap and pop'). [13667,13751]" dest="comment: // the array, and then remove the last element (sometimes called as 'swap and pop'). [13667,13751]"/>
  <match src="visibility [45664,45672]" dest="visibility [48005,48013]"/>
  <match src="}: } [34354,34355]" dest="}: } [34354,34355]"/>
  <match src=",: , [18217,18218]" dest=",: , [18217,18218]"/>
  <match src="variable_declaration_statement [51103,51161]" dest="variable_declaration_statement [53688,53746]"/>
  <match src=",: , [8540,8541]" dest=",: , [8540,8541]"/>
  <match src="!=: != [20388,20390]" dest="!=: != [20388,20390]"/>
  <match src="uint256: uint256 [36840,36847]" dest="uint256: uint256 [38692,38699]"/>
  <match src="binary_expression [51221,51271]" dest="binary_expression [53806,53856]"/>
  <match src="identifier: decode [51535,51541]" dest="identifier: decode [54122,54128]"/>
  <match src="private: private [33733,33740]" dest="private: private [33733,33740]"/>
  <match src="(: ( [35561,35562]" dest="(: ( [37557,37558]"/>
  <match src=",: , [48012,48013]" dest=",: , [50353,50354]"/>
  <match src="type_name [49812,49821]" dest="type_name [52165,52174]"/>
  <match src="identifier: set [18980,18983]" dest="identifier: set [18980,18983]"/>
  <match src="(: ( [50147,50148]" dest="(: ( [52560,52561]"/>
  <match src="identifier: item [35569,35573]" dest="identifier: item [37565,37569]"/>
  <match src="type_name [37024,37031]" dest="type_name [40463,40470]"/>
  <match src="identifier: operator [8509,8517]" dest="identifier: operator [8509,8517]"/>
  <match src="parameter [2623,2633]" dest="parameter [2623,2633]"/>
  <match src="[: [ [33441,33442]" dest="[: [ [33441,33442]"/>
  <match src="identifier: result [36983,36989]" dest="identifier: result [39757,39763]"/>
  <match src="if: if [13473,13475]" dest="if: if [13473,13475]"/>
  <match src="): ) [21467,21468]" dest="): ) [21467,21468]"/>
  <match src="primitive_type [22598,22603]" dest="primitive_type [22598,22603]"/>
  <match src="identifier: role [31238,31242]" dest="identifier: role [31238,31242]"/>
  <match src="(: ( [47491,47492]" dest="(: ( [49832,49833]"/>
  <match src="primitive_type [46206,46213]" dest="primitive_type [48547,48554]"/>
  <match src="parameter [49619,49635]" dest="parameter [51960,51976]"/>
  <match src="{: { [42660,42661]" dest="{: { [45072,45073]"/>
  <match src="call_expression [33641,33653]" dest="call_expression [33641,33653]"/>
  <match src=":=: := [38588,38590]" dest=":=: := [41399,41401]"/>
  <match src="identifier: safeBatchTransferFrom [53307,53328]" dest="identifier: safeBatchTransferFrom [55564,55585]"/>
  <match src="(: ( [9791,9792]" dest="(: ( [9791,9792]"/>
  <match src="return_statement [14705,14717]" dest="return_statement [14705,14717]"/>
  <match src=",: , [44329,44330]" dest=",: , [46768,46769]"/>
  <match src=",: , [42170,42171]" dest=",: , [44565,44566]"/>
  <match src="for: for [49029,49032]" dest="for: for [51370,51373]"/>
  <match src="return_statement [14749,14762]" dest="return_statement [14749,14762]"/>
  <match src="yul_path [42846,42853]" dest="yul_path [45270,45277]"/>
  <match src="identifier: _payloadOffset [41386,41400]" dest="identifier: _payloadOffset [43828,43842]"/>
  <match src="type_name [35687,35694]" dest="type_name [37652,37659]"/>
  <match src="identifier: data [24261,24265]" dest="identifier: data [24261,24265]"/>
  <match src="primitive_type [38489,38496]" dest="primitive_type [41306,41310]"/>
  <match src="=: = [40294,40295]" dest="=: = [42685,42686]"/>
  <match src=".: . [33571,33572]" dest=".: . [33571,33572]"/>
  <match src="identifier: byte0 [36437,36442]" dest="identifier: byte0 [38294,38299]"/>
  <match src="identifier: item [37615,37619]" dest="identifier: item [35941,35945]"/>
  <match src="}: } [37309,37310]" dest="}: } [40639,40640]"/>
  <match src="identifier: set [14669,14672]" dest="identifier: set [14669,14672]"/>
  <match src="=: = [13439,13440]" dest="=: = [13439,13440]"/>
  <match src="comment: // slice of amounts/ ids [47758,47782]" dest="comment: // slice of amounts/ ids [50099,50123]"/>
  <match src="type_name [45961,45968]" dest="type_name [48302,48309]"/>
  <match src="type_alias [44876,44885]" dest="type_alias [47217,47226]"/>
  <match src="{: { [38731,38732]" dest="{: { [41542,41543]"/>
  <match src="identifier: withdrawer [51111,51121]" dest="identifier: withdrawer [53696,53706]"/>
  <match src="update_expression [49059,49062]" dest="update_expression [51400,51403]"/>
  <match src="identifier: push [12781,12785]" dest="identifier: push [12781,12785]"/>
  <match src="}: } [21660,21661]" dest="}: } [21660,21661]"/>
  <match src="parameter [29308,29320]" dest="parameter [29308,29320]"/>
  <match src="identifier: data [4808,4812]" dest="identifier: data [4808,4812]"/>
  <match src="revert: revert [53513,53519]" dest="revert: revert [55810,55816]"/>
  <match src="uint256: uint256 [47907,47914]" dest="uint256: uint256 [50248,50255]"/>
  <match src="identifier: toRlpItem [35041,35050]" dest="identifier: toRlpItem [36027,36036]"/>
  <match src="expression_statement [34250,34336]" dest="expression_statement [34250,34336]"/>
  <match src="]: ] [36055,36056]" dest="]: ] [37870,37871]"/>
  <match src="member_expression [37615,37623]" dest="member_expression [35941,35949]"/>
  <match src="parameter [4715,4727]" dest="parameter [4715,4727]"/>
  <match src="): ) [16126,16127]" dest="): ) [16126,16127]"/>
  <match src="identifier: _itemLength [39799,39810]" dest="identifier: _itemLength [42279,42290]"/>
  <match src="call_argument [51132,51159]" dest="call_argument [53717,53744]"/>
  <match src="identifier: set [12930,12933]" dest="identifier: set [12930,12933]"/>
  <match src="(: ( [42826,42827]" dest="(: ( [45250,45251]"/>
  <match src="parameter [15564,15577]" dest="parameter [15564,15577]"/>
  <match src="identifier: i [50314,50315]" dest="identifier: i [52727,52728]"/>
  <match src="type_name [30403,30410]" dest="type_name [30403,30410]"/>
  <match src="): ) [51270,51271]" dest="): ) [53855,53856]"/>
  <match src="string: string [24388,24394]" dest="string: string [24388,24394]"/>
  <match src="(: ( [41914,41915]" dest="(: ( [44338,44339]"/>
  <match src="(: ( [24146,24147]" dest="(: ( [24146,24147]"/>
  <match src="constant: constant [34867,34875]" dest="constant: constant [34873,34881]"/>
  <match src="{: { [18481,18482]" dest="{: { [18481,18482]"/>
  <match src="memory: memory [47142,47148]" dest="memory: memory [49483,49489]"/>
  <match src="bool: bool [36335,36339]" dest="bool: bool [38151,38155]"/>
  <match src="): ) [15693,15694]" dest="): ) [15693,15694]"/>
  <match src="function_body [22612,22696]" dest="function_body [22612,22696]"/>
  <match src="primitive_type [50811,50816]" dest="primitive_type [53396,53401]"/>
  <match src="returns: returns [14930,14937]" dest="returns: returns [14930,14937]"/>
  <match src="call_argument [51310,51354]" dest="call_argument [53895,53939]"/>
  <match src="primitive_type [9742,9748]" dest="primitive_type [9742,9748]"/>
  <match src="else: else [52543,52547]" dest="else: else [54748,54752]"/>
  <match src="bytes: bytes [46923,46928]" dest="bytes: bytes [49264,49269]"/>
  <match src="): ) [29197,29198]" dest="): ) [29197,29198]"/>
  <match src="indexed: indexed [1367,1374]" dest="indexed: indexed [1367,1374]"/>
  <match src="parameter [7341,7351]" dest="parameter [7341,7351]"/>
  <match src="identifier: EnumerableSet [27907,27920]" dest="identifier: EnumerableSet [27907,27920]"/>
  <match src=":=: := [42759,42761]" dest=":=: := [45179,45181]"/>
  <match src="identifier: set [14199,14202]" dest="identifier: set [14199,14202]"/>
  <match src="function_definition [7254,7456]" dest="function_definition [7254,7456]"/>
  <match src="(: ( [18975,18976]" dest="(: ( [18975,18976]"/>
  <match src="type_name [14179,14186]" dest="type_name [14179,14186]"/>
  <match src="comment: // underlying Set. [12085,12103]" dest="comment: // underlying Set. [12085,12103]"/>
  <match src="assembly_statement [42651,42866]" dest="assembly_statement [45063,45294]"/>
  <match src="type_name [17663,17670]" dest="type_name [17663,17670]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [6271,6302]" dest="comment: // SPDX-License-Identifier: MIT [6271,6302]"/>
  <match src="yul_decimal_number: 1 [40832,40833]" dest="yul_decimal_number: 1 [43251,43252]"/>
  <match src="comment: // @return indicator whether encoded payload is a list. negate this function call for isData. [36176,36269]" dest="comment: // @return indicator whether encoded payload is a list. negate this function call for isData. [37992,38085]"/>
  <match src="identifier: onERC1155Received [7263,7280]" dest="identifier: onERC1155Received [7263,7280]"/>
  <match src="bytes: bytes [23029,23034]" dest="bytes: bytes [23029,23034]"/>
  <match src="array_access [51390,51408]" dest="array_access [53990,54008]"/>
  <match src="address: address [24139,24146]" dest="address: address [24139,24146]"/>
  <match src="parameter [47907,47918]" dest="parameter [50248,50259]"/>
  <match src="&quot;: &quot; [53462,53463]" dest="&quot;: &quot; [55740,55741]"/>
  <match src="(: ( [9741,9742]" dest="(: ( [9741,9742]"/>
  <match src="primitive_type [35051,35056]" dest="primitive_type [36037,36042]"/>
  <match src="(: ( [32350,32351]" dest="(: ( [32350,32351]"/>
  <match src="identifier: log [50921,50924]" dest="identifier: log [53506,53509]"/>
  <match src="identifier: returndata_size [25153,25168]" dest="identifier: returndata_size [25153,25168]"/>
  <match src="primitive_type [16351,16358]" dest="primitive_type [16351,16358]"/>
  <match src="call_argument [15629,15655]" dest="call_argument [15629,15655]"/>
  <match src="type_cast_expression [51261,51271]" dest="type_cast_expression [53846,53856]"/>
  <match src="type_name [1385,1392]" dest="type_name [1385,1392]"/>
  <match src="): ) [41415,41416]" dest="): ) [43854,43855]"/>
  <match src="function: function [45628,45636]" dest="function: function [47969,47977]"/>
  <match src="type_name [34225,34232]" dest="type_name [34225,34232]"/>
  <match src="(: ( [18058,18059]" dest="(: ( [18058,18059]"/>
  <match src="yul_path [42410,42413]" dest="yul_path [44787,44790]"/>
  <match src="call_expression [39651,39678]" dest="call_expression [37709,37736]"/>
  <match src="}: } [25281,25282]" dest="}: } [25281,25282]"/>
  <match src="member_expression [52886,52901]" dest="member_expression [55328,55343]"/>
  <match src="{: { [33594,33595]" dest="{: { [33594,33595]"/>
  <match src="identifier: TransferBatch [1621,1634]" dest="identifier: TransferBatch [1621,1634]"/>
  <match src="function: function [3263,3271]" dest="function: function [3263,3271]"/>
  <match src="string_literal [53244,53246]" dest="string_literal [55464,55466]"/>
  <match src="): ) [41741,41742]" dest="): ) [44151,44152]"/>
  <match src="identifier: len [42632,42635]" dest="identifier: len [45040,45043]"/>
  <match src="bool: bool [29360,29364]" dest="bool: bool [29360,29364]"/>
  <match src="identifier: _supportedInterfaces [9308,9328]" dest="identifier: _supportedInterfaces [9308,9328]"/>
  <match src="assignment_expression [48215,48228]" dest="assignment_expression [50556,50569]"/>
  <match src=",: , [51821,51822]" dest=",: , [54339,54340]"/>
  <match src="type_name [48109,48118]" dest="type_name [50450,50459]"/>
  <match src="primitive_type [49513,49520]" dest="primitive_type [51854,51861]"/>
  <match src="mload: mload [41122,41127]" dest="mload: mload [43564,43569]"/>
  <match src="visibility [33085,33093]" dest="visibility [33085,33093]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [12476,12640]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [12476,12640]"/>
  <match src="identifier: _setRoleAdmin [33287,33300]" dest="identifier: _setRoleAdmin [33287,33300]"/>
  <match src="type_name [46833,46840]" dest="type_name [49174,49181]"/>
  <match src="array_access [50213,50252]" dest="array_access [52626,52665]"/>
  <match src="identifier: from [1401,1405]" dest="identifier: from [1401,1405]"/>
  <match src="): ) [47645,47646]" dest="): ) [49986,49987]"/>
  <match src="inheritance_specifier [1195,1202]" dest="inheritance_specifier [1195,1202]"/>
  <match src="return_type_definition [39387,39404]" dest="return_type_definition [42015,42029]"/>
  <match src="identifier: index [15572,15577]" dest="identifier: index [15572,15577]"/>
  <match src="visibility [9300,9307]" dest="visibility [9300,9307]"/>
  <match src="): ) [37300,37301]" dest="): ) [40630,40631]"/>
  <match src=",: , [40724,40725]" dest=",: , [43143,43144]"/>
  <match src="]: ] [48117,48118]" dest="]: ] [50458,50459]"/>
  <match src="call_expression [37407,37419]" dest="call_expression [37331,37352]"/>
  <match src="{: { [21644,21645]" dest="{: { [21644,21645]"/>
  <match src="uint256: uint256 [17994,18001]" dest="uint256: uint256 [17994,18001]"/>
  <match src=",: , [6133,6134]" dest=",: , [6133,6134]"/>
  <match src="primitive_type [40068,40075]" dest="primitive_type [42458,42462]"/>
  <match src=",: , [52441,52442]" dest=",: , [54614,54615]"/>
  <match src="call_expression [51199,51365]" dest="call_expression [53784,53950]"/>
  <match src="comment: // @return number of payload items inside an encoded list. [39271,39329]" dest="comment: // @return number of payload items inside an encoded list. [41899,41957]"/>
  <match src="uint256: uint256 [18219,18226]" dest="uint256: uint256 [18219,18226]"/>
  <match src="identifier: add [33580,33583]" dest="identifier: add [33580,33583]"/>
  <match src="memory: memory [48119,48125]" dest="memory: memory [50460,50466]"/>
  <match src="member_expression [36938,36949]" dest="member_expression [39712,39723]"/>
  <match src="(: ( [15136,15137]" dest="(: ( [15136,15137]"/>
  <match src="call_expression [39799,39819]" dest="call_expression [42279,42299]"/>
  <match src="primitive_type [16588,16595]" dest="primitive_type [16588,16595]"/>
  <match src="variable_declaration_statement [38998,39035]" dest="variable_declaration_statement [41645,41682]"/>
  <match src="visibility [4261,4269]" dest="visibility [4261,4269]"/>
  <match src="(: ( [37333,37334]" dest="(: ( [40663,40664]"/>
  <match src="&quot;: &quot; [24210,24211]" dest="&quot;: &quot; [24210,24211]"/>
  <match src="identifier: dest [42827,42831]" dest="identifier: dest [45251,45255]"/>
  <match src="): ) [35536,35537]" dest="): ) [37537,37538]"/>
  <match src="primitive_type [8584,8591]" dest="primitive_type [8584,8591]"/>
  <match src="array_access [50273,50293]" dest="array_access [52686,52706]"/>
  <match src="(: ( [16563,16564]" dest="(: ( [16563,16564]"/>
  <match src="identifier: role [29391,29395]" dest="identifier: role [29391,29395]"/>
  <match src=",: , [4222,4223]" dest=",: , [4222,4223]"/>
  <match src="block_statement [42348,42506]" dest="block_statement [44725,44883]"/>
  <match src="returns: returns [16053,16060]" dest="returns: returns [16053,16060]"/>
  <match src="member_expression [30430,30450]" dest="member_expression [30430,30450]"/>
  <match src="]: ] [31609,31610]" dest="]: ] [31609,31610]"/>
  <match src="yul_path [40570,40576]" dest="yul_path [42973,42979]"/>
  <match src="view: view [16612,16616]" dest="view: view [16612,16616]"/>
  <match src=",: , [35345,35346]" dest=",: , [36226,36227]"/>
  <match src="function: function [34044,34052]" dest="function: function [34044,34052]"/>
  <match src="yul_path [42827,42831]" dest="yul_path [45251,45255]"/>
  <match src="identifier: val [47915,47918]" dest="identifier: val [50256,50259]"/>
  <match src="identifier: account [31547,31554]" dest="identifier: account [31547,31554]"/>
  <match src=",: , [45986,45987]" dest=",: , [48327,48328]"/>
  <match src="identifier: AccessControlMixin [33969,33987]" dest="identifier: AccessControlMixin [33969,33987]"/>
  <match src="contract: contract [10660,10668]" dest="contract: contract [10660,10668]"/>
  <match src=".: . [10864,10865]" dest=".: . [10864,10865]"/>
  <match src=".: . [15632,15633]" dest=".: . [15632,15633]"/>
  <match src="identifier: Set [12660,12663]" dest="identifier: Set [12660,12663]"/>
  <match src="array_access [49079,49091]" dest="array_access [51420,51432]"/>
  <match src="function_definition [13236,14780]" dest="function_definition [13236,14780]"/>
  <match src="call_argument [52737,52744]" dest="call_argument [54890,54897]"/>
  <match src="identifier: len [38045,38048]" dest="identifier: len [41054,41057]"/>
  <match src="=: = [49092,49093]" dest="=: = [51433,51434]"/>
  <match src="array_access [15712,15730]" dest="array_access [15712,15730]"/>
  <match src="function_body [37077,37310]" dest="function_body [40516,40640]"/>
  <match src="identifier: byte0 [36358,36363]" dest="identifier: byte0 [38218,38223]"/>
  <match src="identifier: adminRole [33414,33423]" dest="identifier: adminRole [33414,33423]"/>
  <match src="primitive_type [53238,53243]" dest="primitive_type [55458,55463]"/>
  <match src="yul_path [40795,40802]" dest="yul_path [43214,43221]"/>
  <match src="storage: storage [12664,12671]" dest="storage: storage [12664,12671]"/>
  <match src="expression_statement [33435,33470]" dest="expression_statement [33435,33470]"/>
  <match src="binary_expression [40367,40393]" dest="binary_expression [42768,42794]"/>
  <match src=",: , [31620,31621]" dest=",: , [31620,31621]"/>
  <match src="array_access [14316,14342]" dest="array_access [14316,14342]"/>
  <match src="internal: internal [47931,47939]" dest="internal: internal [50272,50280]"/>
  <match src="bytes: bytes [24433,24438]" dest="bytes: bytes [24433,24438]"/>
  <match src="): ) [32403,32404]" dest="): ) [32403,32404]"/>
  <match src="solidity_pragma_token [11024,11039]" dest="solidity_pragma_token [11024,11039]"/>
  <match src="view: view [847,851]" dest="view: view [847,851]"/>
  <match src="type_name [6135,6142]" dest="type_name [6135,6142]"/>
  <match src="identifier: ids [6130,6133]" dest="identifier: ids [6130,6133]"/>
  <match src="binary_expression [52104,52125]" dest="binary_expression [54363,54379]"/>
  <match src="primitive_type [28744,28751]" dest="primitive_type [28744,28751]"/>
  <match src="&quot;: &quot; [48886,48887]" dest="&quot;: &quot; [51227,51228]"/>
  <match src="internal: internal [23578,23586]" dest="internal: internal [23578,23586]"/>
  <match src="[: [ [2906,2907]" dest="[: [ [2906,2907]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [22704,22920]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [22704,22920]"/>
  <match src="identifier: i [50333,50334]" dest="identifier: i [52746,52747]"/>
  <match src=".: . [37823,37824]" dest=".: . [37074,37075]"/>
  <match src="): ) [53103,53104]" dest="): ) [55121,55122]"/>
  <match src="): ) [45831,45832]" dest="): ) [48172,48173]"/>
  <match src="identifier: size [48147,48151]" dest="identifier: size [50488,50492]"/>
  <match src="bytes32: bytes32 [18071,18078]" dest="bytes32: bytes32 [18071,18078]"/>
  <match src="identifier: memPtr [36396,36402]" dest="identifier: memPtr [38253,38259]"/>
  <match src="address: address [48687,48694]" dest="address: address [51028,51035]"/>
  <match src="visibility [15579,15586]" dest="visibility [15579,15586]"/>
  <match src="identifier: _msgSender [33641,33651]" dest="identifier: _msgSender [33641,33651]"/>
  <match src="type_cast_expression [53091,53104]" dest="type_cast_expression [55109,55122]"/>
  <match src="call_expression [31117,31162]" dest="call_expression [31117,31162]"/>
  <match src="type_name [28036,28043]" dest="type_name [28036,28043]"/>
  <match src="expression_statement [48721,48831]" dest="expression_statement [51062,51172]"/>
  <match src="indexed: indexed [28774,28781]" dest="indexed: indexed [28774,28781]"/>
  <match src=",: , [2621,2622]" dest=",: , [2621,2622]"/>
  <match src="type_name [2606,2613]" dest="type_name [2606,2613]"/>
  <match src="address: address [51124,51131]" dest="address: address [53709,53716]"/>
  <match src="type_name [2928,2937]" dest="type_name [2928,2937]"/>
  <match src="identifier: index [18911,18916]" dest="identifier: index [18911,18916]"/>
  <match src="comment: // skip over an item [39821,39841]" dest="comment: // skip over an item [42301,42321]"/>
  <match src="yul_identifier [38020,38026]" dest="yul_identifier [41029,41035]"/>
  <match src="assembly: assembly [35247,35255]" dest="assembly: assembly [36128,36136]"/>
  <match src="): ) [41934,41935]" dest="): ) [44358,44359]"/>
  <match src="(: ( [30352,30353]" dest="(: ( [30352,30353]"/>
  <match src="variable_declaration [13839,13860]" dest="variable_declaration [13839,13860]"/>
  <match src="): ) [42715,42716]" dest="): ) [45131,45132]"/>
  <match src="state_mutability [30700,30704]" dest="state_mutability [30700,30704]"/>
  <match src="internal: internal [18009,18017]" dest="internal: internal [18009,18017]"/>
  <match src="array_access [14963,14982]" dest="array_access [14963,14982]"/>
  <match src=",: , [41079,41080]" dest=",: , [43521,43522]"/>
  <match src="indexed: indexed [28452,28459]" dest="indexed: indexed [28452,28459]"/>
  <match src=",: , [52292,52293]" dest=",: , [54443,54444]"/>
  <match src="function_body [32310,32451]" dest="function_body [32310,32451]"/>
  <match src="function: function [30657,30665]" dest="function: function [30657,30665]"/>
  <match src="(: ( [10347,10348]" dest="(: ( [10347,10348]"/>
  <match src="identifier: IERC1155Receiver [10696,10712]" dest="identifier: IERC1155Receiver [10696,10712]"/>
  <match src="[: [ [33396,33397]" dest="[: [ [33396,33397]"/>
  <match src="identifier: _setupContractId [45696,45712]" dest="identifier: _setupContractId [48037,48053]"/>
  <match src="identifier: logTopicRLPList [51229,51244]" dest="identifier: logTopicRLPList [53814,53829]"/>
  <match src="{: { [40467,40468]" dest="{: { [42870,42871]"/>
  <match src="view: view [18243,18247]" dest="view: view [18243,18247]"/>
  <match src="identifier: amount [21419,21425]" dest="identifier: amount [21419,21425]"/>
  <match src="[: [ [48219,48220]" dest="[: [ [50560,50561]"/>
  <match src="type_name [17994,18001]" dest="type_name [17994,18001]"/>
  <match src="identifier: isContract [24466,24476]" dest="identifier: isContract [24466,24476]"/>
  <match src="(: ( [21683,21684]" dest="(: ( [21683,21684]"/>
  <match src="uint256: uint256 [5470,5477]" dest="uint256: uint256 [5470,5477]"/>
  <match src="visibility [18009,18017]" dest="visibility [18009,18017]"/>
  <match src="(: ( [16679,16680]" dest="(: ( [16679,16680]"/>
  <match src="string_literal [53462,53464]" dest="string_literal [55740,55742]"/>
  <match src="parameter [29322,29337]" dest="parameter [29322,29337]"/>
  <match src="variable_declaration_statement [48170,48184]" dest="variable_declaration_statement [50511,50525]"/>
  <match src="): ) [41537,41538]" dest="): ) [43970,43971]"/>
  <match src="user_defined_type [1195,1202]" dest="user_defined_type [1195,1202]"/>
  <match src="(: ( [34135,34136]" dest="(: ( [34135,34136]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [19068,19099]" dest="comment: // SPDX-License-Identifier: MIT [19068,19099]"/>
  <match src="pure: pure [41425,41429]" dest="pure: pure [43864,43868]"/>
  <match src="identifier: length [13924,13930]" dest="identifier: length [13924,13930]"/>
  <match src="yul_function_call [40806,40835]" dest="yul_function_call [43225,43254]"/>
  <match src="is: is [10685,10687]" dest="is: is [10685,10687]"/>
  <match src="(: ( [38171,38172]" dest="(: ( [41180,41181]"/>
  <match src="type_name [13270,13277]" dest="type_name [13270,13277]"/>
  <match src="==: == [38429,38431]" dest="==: == [41287,41289]"/>
  <match src="): ) [39403,39404]" dest="): ) [42028,42029]"/>
  <match src="type_name [39353,39360]" dest="type_name [41981,41988]"/>
  <match src="type_name [48968,48975]" dest="type_name [51309,51316]"/>
  <match src="type_name [42599,42606]" dest="type_name [45008,45012]"/>
  <match src="(: ( [41140,41141]" dest="(: ( [43582,43583]"/>
  <match src="&lt;: &lt; [41777,41778]" dest="&lt;: &lt; [44200,44201]"/>
  <match src="+: + [35886,35887]" dest="+: + [42133,42134]"/>
  <match src="identifier: role [33710,33714]" dest="identifier: role [33710,33714]"/>
  <match src="yul_evm_builtin [37975,37977]" dest="yul_evm_builtin [40984,40986]"/>
  <match src="(: ( [12431,12432]" dest="(: ( [12431,12432]"/>
  <match src="identifier: role [31533,31537]" dest="identifier: role [31533,31537]"/>
  <match src=",: , [24349,24350]" dest=",: , [24349,24350]"/>
  <match src="{: { [15610,15611]" dest="{: { [15610,15611]"/>
  <match src="bool: bool [19871,19875]" dest="bool: bool [19871,19875]"/>
  <match src="identifier: from [7326,7330]" dest="identifier: from [7326,7330]"/>
  <match src="assignment_expression [40911,40949]" dest="assignment_expression [43341,43379]"/>
  <match src="internal: internal [33334,33342]" dest="internal: internal [33334,33342]"/>
  <match src="function_definition [37005,37310]" dest="function_definition [40444,40640]"/>
  <match src="): ) [42635,42636]" dest="): ) [45043,45044]"/>
  <match src="call_expression [49849,49908]" dest="call_expression [52202,52261]"/>
  <match src="yul_function_call [42820,42855]" dest="yul_function_call [45244,45279]"/>
  <match src="pragma: pragma [33932,33938]" dest="pragma: pragma [33932,33938]"/>
  <match src="): ) [45373,45374]" dest="): ) [47714,47715]"/>
  <match src="event: event [1338,1343]" dest="event: event [1338,1343]"/>
  <match src="(: ( [36290,36291]" dest="(: ( [38106,38107]"/>
  <match src="user_defined_type [44823,44841]" dest="user_defined_type [47164,47182]"/>
  <match src="bytes32: bytes32 [33315,33322]" dest="bytes32: bytes32 [33315,33322]"/>
  <match src="call_expression [48721,48830]" dest="call_expression [51062,51171]"/>
  <match src="type_name [49853,49860]" dest="type_name [52206,52213]"/>
  <match src="call_argument [15657,15693]" dest="call_argument [15657,15693]"/>
  <match src="): ) [38692,38693]" dest="): ) [41503,41504]"/>
  <match src="(: ( [17359,17360]" dest="(: ( [17359,17360]"/>
  <match src="member_expression [38531,38542]" dest="member_expression [41342,41353]"/>
  <match src="identifier: token [52146,52151]" dest="identifier: token [54400,54405]"/>
  <match src="(: ( [4185,4186]" dest="(: ( [4185,4186]"/>
  <match src="identifier: rootToken [51678,51687]" dest="identifier: rootToken [54265,54274]"/>
  <match src="type_name [12443,12450]" dest="type_name [12443,12450]"/>
  <match src="function_definition [25946,26052]" dest="function_definition [25946,26052]"/>
  <match src="type_name [8620,8625]" dest="type_name [8620,8625]"/>
  <match src="yul_hex_number: 0x20 [39112,39116]" dest="yul_hex_number: 0x20 [41756,41760]"/>
  <match src="uint256: uint256 [1427,1434]" dest="uint256: uint256 [1427,1434]"/>
  <match src="type_cast_expression [17758,17772]" dest="type_cast_expression [17758,17772]"/>
  <match src="call_argument [47374,47389]" dest="call_argument [49715,49730]"/>
  <match src="function_definition [3485,3575]" dest="function_definition [3485,3575]"/>
  <match src="visibility [49596,49604]" dest="visibility [51937,51945]"/>
  <match src="bytes4: bytes4 [818,824]" dest="bytes4: bytes4 [818,824]"/>
  <match src="identifier: role [30687,30691]" dest="identifier: role [30687,30691]"/>
  <match src="block_statement [40896,40961]" dest="block_statement [43326,43391]"/>
  <match src="yul_path [39097,39104]" dest="yul_path [41741,41748]"/>
  <match src="call_expression [39148,39188]" dest="call_expression [41792,41818]"/>
  <match src="override_specifier [50842,50850]" dest="override_specifier [53427,53435]"/>
  <match src="variable_declaration [39619,39634]" dest="variable_declaration [37681,37692]"/>
  <match src="]: ] [52666,52667]" dest="]: ] [54819,54820]"/>
  <match src="primitive_type [25999,26014]" dest="primitive_type [25999,26014]"/>
  <match src="type_name [9120,9126]" dest="type_name [9120,9126]"/>
  <match src="state_mutability [35497,35501]" dest="state_mutability [37507,37511]"/>
  <match src="(: ( [47524,47525]" dest="(: ( [49865,49866]"/>
  <match src="type_name [24106,24111]" dest="type_name [24106,24111]"/>
  <match src="(: ( [39111,39112]" dest="(: ( [41755,41756]"/>
  <match src="if_statement [52100,52342]" dest="if_statement [54359,54471]"/>
  <match src=",: , [1701,1702]" dest=",: , [1701,1702]"/>
  <match src="return_type_definition [29351,29365]" dest="return_type_definition [29351,29365]"/>
  <match src="function_body [46994,47654]" dest="function_body [49335,49995]"/>
  <match src="member_expression [47237,47247]" dest="member_expression [49578,49588]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [24966,25013]" dest="comment: // solhint-disable-next-line no-inline-assembly [24966,25013]"/>
  <match src="): ) [23113,23114]" dest="): ) [23113,23114]"/>
  <match src="call_argument [45811,45823]" dest="call_argument [48152,48164]"/>
  <match src="): ) [33791,33792]" dest="): ) [33791,33792]"/>
  <match src="assembly: assembly [38557,38565]" dest="assembly: assembly [41368,41376]"/>
  <match src="call_argument [35562,35574]" dest="call_argument [37558,37570]"/>
  <match src="parameter [12709,12713]" dest="parameter [12709,12713]"/>
  <match src="}: } [36996,36997]" dest="}: } [39770,39771]"/>
  <match src="&quot;: &quot; [21663,21664]" dest="&quot;: &quot; [21663,21664]"/>
  <match src="): ) [13306,13307]" dest="): ) [13306,13307]"/>
  <match src="event_paramater [1407,1425]" dest="event_paramater [1407,1425]"/>
  <match src="address: address [23528,23535]" dest="address: address [23528,23535]"/>
  <match src="variable_declaration_statement [20160,20249]" dest="variable_declaration_statement [20160,20249]"/>
  <match src="string: string [24060,24066]" dest="string: string [24060,24066]"/>
  <match src="if: if [51378,51380]" dest="if: if [54029,54031]"/>
  <match src=",: , [51567,51568]" dest=",: , [54154,54155]"/>
  <match src="call_argument [53099,53103]" dest="call_argument [55117,55121]"/>
  <match src="parameter [4240,4259]" dest="parameter [4240,4259]"/>
  <match src="(: ( [42693,42694]" dest="(: ( [45109,45110]"/>
  <match src="(: ( [15628,15629]" dest="(: ( [15628,15629]"/>
  <match src="identifier: depositData [47248,47259]" dest="identifier: depositData [49589,49600]"/>
  <match src="member_expression [24633,24644]" dest="member_expression [24633,24644]"/>
  <match src="call_argument [31590,31635]" dest="call_argument [31590,31635]"/>
  <match src="parameter [38216,38223]" dest="parameter [41225,41229]"/>
  <match src="identifier: adminRole [27958,27967]" dest="identifier: adminRole [27958,27967]"/>
  <match src="number_literal: 1 [38545,38546]" dest="number_literal: 1 [41356,41357]"/>
  <match src="identifier: Set [17454,17457]" dest="identifier: Set [17454,17457]"/>
  <match src="(: ( [17367,17368]" dest="(: ( [17367,17368]"/>
  <match src="[: [ [14681,14682]" dest="[: [ [14681,14682]"/>
  <match src="primitive_type [28444,28451]" dest="primitive_type [28444,28451]"/>
  <match src="&quot;: &quot; [52323,52324]" dest="&quot;: &quot; [54452,54453]"/>
  <match src="primitive_type [13839,13846]" dest="primitive_type [13839,13846]"/>
  <match src="assembly: assembly [41483,41491]" dest="assembly: assembly [43916,43924]"/>
  <match src="type_name [27983,28012]" dest="type_name [27983,28012]"/>
  <match src="array_access [48215,48222]" dest="array_access [50556,50563]"/>
  <match src="call_argument [47492,47501]" dest="call_argument [49833,49842]"/>
  <match src="expression_statement [14574,14592]" dest="expression_statement [14574,14592]"/>
  <match src="yul_path [42836,42844]" dest="yul_path [45260,45268]"/>
  <match src="member_expression [51390,51415]" dest="member_expression [53990,54015]"/>
  <match src="=: = [51659,51660]" dest="=: = [54246,54247]"/>
  <match src="primitive_type [13892,13899]" dest="primitive_type [13892,13899]"/>
  <match src="primitive_type [19831,19838]" dest="primitive_type [19831,19838]"/>
  <match src="yul_assignment [38006,38051]" dest="yul_assignment [41015,41060]"/>
  <match src="visibility [16830,16838]" dest="visibility [16830,16838]"/>
  <match src="else: else [41612,41616]" dest="else: else [44059,44063]"/>
  <match src="bytes32: bytes32 [33702,33709]" dest="bytes32: bytes32 [33702,33709]"/>
  <match src="member_expression [49877,49897]" dest="member_expression [52230,52250]"/>
  <match src="}: } [21761,21762]" dest="}: } [21761,21762]"/>
  <match src="): ) [17300,17301]" dest="): ) [17300,17301]"/>
  <match src="solidity_pragma_token [25383,25398]" dest="solidity_pragma_token [25383,25398]"/>
  <match src=",: , [24265,24266]" dest=",: , [24265,24266]"/>
  <match src="primitive_type [48623,48630]" dest="primitive_type [50964,50971]"/>
  <match src="while: while [39739,39744]" dest="while: while [42220,42225]"/>
  <match src="override_specifier [9774,9782]" dest="override_specifier [9774,9782]"/>
  <match src="identifier: _msgSender [31149,31159]" dest="identifier: _msgSender [31149,31159]"/>
  <match src="]: ] [6143,6144]" dest="]: ] [6143,6144]"/>
  <match src="address: address [4186,4193]" dest="address: address [4186,4193]"/>
  <match src="{: { [46994,46995]" dest="{: { [49335,49336]"/>
  <match src="visibility [35479,35487]" dest="visibility [37498,37506]"/>
  <match src="identifier: to [1699,1701]" dest="identifier: to [1699,1701]"/>
  <match src="comment: /**      * @notice accepts batch transfer      */ [46107,46158]" dest="comment: /**      * @notice accepts batch transfer      */ [48448,48499]"/>
  <match src="return_type_definition [23020,23042]" dest="return_type_definition [23020,23042]"/>
  <match src="expression_statement [37201,37262]" dest="expression_statement [40568,40592]"/>
  <match src="identifier: endPtr [39697,39703]" dest="identifier: endPtr [42178,42184]"/>
  <match src="(: ( [50754,50755]" dest="(: ( [53339,53340]"/>
  <match src="call_expression [18281,18318]" dest="call_expression [18281,18318]"/>
  <match src="function_definition [49467,50406]" dest="function_definition [51808,52991]"/>
  <match src="(: ( [51254,51255]" dest="(: ( [53839,53840]"/>
  <match src="number_literal: 0 [13491,13492]" dest="number_literal: 0 [13491,13492]"/>
  <match src="}: } [33875,33876]" dest="}: } [33875,33876]"/>
  <match src="user_defined_type [18428,18435]" dest="user_defined_type [18428,18435]"/>
  <match src="indexed: indexed [29183,29190]" dest="indexed: indexed [29183,29190]"/>
  <match src="visibility [48646,48654]" dest="visibility [50987,50995]"/>
  <match src="primitive_type [33716,33723]" dest="primitive_type [33716,33723]"/>
  <match src="(: ( [29721,29722]" dest="(: ( [29721,29722]"/>
  <match src="expression_statement [9510,9551]" dest="expression_statement [9510,9551]"/>
  <match src="identifier: _revokeRole [33690,33701]" dest="identifier: _revokeRole [33690,33701]"/>
  <match src="): ) [38603,38604]" dest="): ) [41414,41415]"/>
  <match src="identifier: i [50227,50228]" dest="identifier: i [52640,52641]"/>
  <match src=",: , [40510,40511]" dest=",: , [42913,42914]"/>
  <match src="identifier: value [12943,12948]" dest="identifier: value [12943,12948]"/>
  <match src="(: ( [46348,46349]" dest="(: ( [48689,48690]"/>
  <match src="uint256: uint256 [47273,47280]" dest="uint256: uint256 [49614,49621]"/>
  <match src="type_name [36786,36791]" dest="type_name [39507,39512]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC165} interface.  *  * Contracts may inherit from this and call {_registerInterface} to declare  * their support of an interface.  */ [8822,8998]" dest="comment: /**  * @dev Implementation of the {IERC165} interface.  *  * Contracts may inherit from this and call {_registerInterface} to declare  * their support of an interface.  */ [8822,8998]"/>
  <match src="contract_body [6411,8693]" dest="contract_body [6411,8693]"/>
  <match src="type_name [43753,43758]" dest="type_name [46192,46197]"/>
  <match src="visibility [46957,46965]" dest="visibility [49298,49306]"/>
  <match src="primitive_type [27992,27999]" dest="primitive_type [27992,27999]"/>
  <match src="identifier: target [22956,22962]" dest="identifier: target [22956,22962]"/>
  <match src="(: ( [44561,44562]" dest="(: ( [47000,47001]"/>
  <match src="call_argument [48776,48819]" dest="call_argument [51117,51160]"/>
  <match src="]: ] [49090,49091]" dest="]: ] [51431,51432]"/>
  <match src="return_type_definition [14930,14944]" dest="return_type_definition [14930,14944]"/>
  <match src="uint256: uint256 [49619,49626]" dest="uint256: uint256 [51960,51967]"/>
  <match src="user_defined_type [27815,27839]" dest="user_defined_type [27815,27839]"/>
  <match src="&gt;=: &gt;= [42316,42318]" dest="&gt;=: &gt;= [44693,44695]"/>
  <match src="identifier: RLPItem [39353,39360]" dest="identifier: RLPItem [41981,41988]"/>
  <match src="yul_identifier [40708,40714]" dest="yul_identifier [43127,43133]"/>
  <match src="}: } [18093,18094]" dest="}: } [18093,18094]"/>
  <match src="primitive_type [33519,33526]" dest="primitive_type [33519,33526]"/>
  <match src="(: ( [45932,45933]" dest="(: ( [48273,48274]"/>
  <match src="call_argument [12741,12744]" dest="call_argument [12741,12744]"/>
  <match src=",: , [48871,48872]" dest=",: , [51212,51213]"/>
  <match src="[: [ [50249,50250]" dest="[: [ [52662,52663]"/>
  <match src="comment: /**      * @notice Lock ERC1155 tokens for deposit, callable only by manager      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on child chain      * @param rootToken Token which gets deposited      * @param depositData ABI encoded id array and amount array      */ [46441,46797]" dest="comment: /**      * @notice Lock ERC1155 tokens for deposit, callable only by manager      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on child chain      * @param rootToken Token which gets deposited      * @param depositData ABI encoded id array and amount array      */ [48782,49138]"/>
  <match src="(: ( [51228,51229]" dest="(: ( [53813,53814]"/>
  <match src=",: , [40215,40216]" dest=",: , [42593,42594]"/>
  <match src=",: , [50800,50801]" dest=",: , [53385,53386]"/>
  <match src="struct_expression [21630,21661]" dest="struct_expression [21630,21661]"/>
  <match src="call_argument [16680,16694]" dest="call_argument [16680,16694]"/>
  <match src=",: , [45780,45781]" dest=",: , [48121,48122]"/>
  <match src="type_name [28444,28451]" dest="type_name [28444,28451]"/>
  <match src="member_expression [24139,24160]" dest="member_expression [24139,24160]"/>
  <match src="parameter [39353,39372]" dest="parameter [41981,42000]"/>
  <match src="function_body [36341,36563]" dest="function_body [38157,38433]"/>
  <match src="else: else [41762,41766]" dest="else: else [44185,44189]"/>
  <match src="type_name [4793,4798]" dest="type_name [4793,4798]"/>
  <match src="type_name [24045,24052]" dest="type_name [24045,24052]"/>
  <match src="identifier: DEFAULT_ADMIN_ROLE [28060,28078]" dest="identifier: DEFAULT_ADMIN_ROLE [28060,28078]"/>
  <match src="): ) [40113,40114]" dest="): ) [42497,42498]"/>
  <match src="expression_statement [21676,21755]" dest="expression_statement [21676,21755]"/>
  <match src="returns: returns [35511,35518]" dest="returns: returns [37512,37519]"/>
  <match src="identifier: ITokenPredicate [43124,43139]" dest="identifier: ITokenPredicate [45563,45578]"/>
  <match src="solidity: solidity [44443,44451]" dest="solidity: solidity [46882,46890]"/>
  <match src="): ) [46392,46393]" dest="): ) [48733,48734]"/>
  <match src="yul_assignment [40795,40835]" dest="yul_assignment [43214,43254]"/>
  <match src="function_definition [46164,46433]" dest="function_definition [48505,48774]"/>
  <match src="}: } [50405,50406]" dest="}: } [52990,52991]"/>
  <match src=",: , [52933,52934]" dest=",: , [55376,55377]"/>
  <match src="view: view [14925,14929]" dest="view: view [14925,14929]"/>
  <match src="]: ] [9848,9849]" dest="]: ] [9848,9849]"/>
  <match src="identifier: item [37104,37108]" dest="identifier: item [39177,39181]"/>
  <match src=",: , [1405,1406]" dest=",: , [1405,1406]"/>
  <match src="expression_statement [40286,40298]" dest="expression_statement [42677,42689]"/>
  <match src="call_argument [33784,33791]" dest="call_argument [33784,33791]"/>
  <match src="member_expression [14574,14589]" dest="member_expression [14574,14589]"/>
  <match src="call_argument [35334,35345]" dest="call_argument [36215,36226]"/>
  <match src="}: } [13052,13053]" dest="}: } [13052,13053]"/>
  <match src="expression_statement [26136,26141]" dest="expression_statement [26136,26141]"/>
  <match src=",: , [52224,52225]" dest=",: , [54425,54426]"/>
  <match src="): ) [41591,41592]" dest="): ) [44024,44025]"/>
  <match src="identifier: STRING_SHORT_START [40375,40393]" dest="identifier: STRING_SHORT_START [42776,42794]"/>
  <match src="return_statement [23054,23115]" dest="return_statement [23054,23115]"/>
  <match src="identifier: AddressSet [16005,16015]" dest="identifier: AddressSet [16005,16015]"/>
  <match src="(: ( [40583,40584]" dest="(: ( [42986,42987]"/>
  <match src="&lt;: &lt; [36501,36502]" dest="&lt;: &lt; [38358,38359]"/>
  <match src="identifier: account [28782,28789]" dest="identifier: account [28782,28789]"/>
  <match src="type_name [46271,46278]" dest="type_name [48612,48619]"/>
  <match src="(: ( [36684,36685]" dest="(: ( [39437,39438]"/>
  <match src="}: } [33872,33873]" dest="}: } [33872,33873]"/>
  <match src="binary_expression [20379,20421]" dest="binary_expression [20379,20421]"/>
  <match src="(: ( [52763,52764]" dest="(: ( [54916,54917]"/>
  <match src="function_definition [31033,31260]" dest="function_definition [31033,31260]"/>
  <match src="]: ] [35665,35666]" dest="]: ] [37630,37631]"/>
  <match src="yul_path [40708,40714]" dest="yul_path [43127,43133]"/>
  <match src="}: } [33665,33666]" dest="}: } [33665,33666]"/>
  <match src="(: ( [10731,10732]" dest="(: ( [10731,10732]"/>
  <match src="&quot;: &quot; [52512,52513]" dest="&quot;: &quot; [54698,54699]"/>
  <match src="(: ( [22597,22598]" dest="(: ( [22597,22598]"/>
  <match src="indexed: indexed [1643,1650]" dest="indexed: indexed [1643,1650]"/>
  <match src="call_argument [48863,48871]" dest="call_argument [51204,51212]"/>
  <match src="identifier: sender [28807,28813]" dest="identifier: sender [28807,28813]"/>
  <match src="parameter [861,865]" dest="parameter [861,865]"/>
  <match src="function_definition [16790,16907]" dest="function_definition [16790,16907]"/>
  <match src="): ) [24086,24087]" dest="): ) [24086,24087]"/>
  <match src="identifier: hasRole [34272,34279]" dest="identifier: hasRole [34272,34279]"/>
  <match src="(: ( [53243,53244]" dest="(: ( [55463,55464]"/>
  <match src="calldata: calldata [44346,44354]" dest="calldata: calldata [46785,46793]"/>
  <match src="identifier: operator [1651,1659]" dest="identifier: operator [1651,1659]"/>
  <match src="external: external [3546,3554]" dest="external: external [3546,3554]"/>
  <match src="solidity_pragma_token [4895,4909]" dest="solidity_pragma_token [4895,4909]"/>
  <match src=".: . [34139,34140]" dest=".: . [34139,34140]"/>
  <match src="visibility [30693,30699]" dest="visibility [30693,30699]"/>
  <match src="public: public [45611,45617]" dest="public: public [47952,47958]"/>
  <match src="}: } [39135,39136]" dest="}: } [41779,41780]"/>
  <match src=",: , [53437,53438]" dest=",: , [55711,55712]"/>
  <match src="uint256: uint256 [12443,12450]" dest="uint256: uint256 [12443,12450]"/>
  <match src="): ) [51527,51528]" dest="): ) [54114,54115]"/>
  <match src="type_name [38236,38243]" dest="type_name [39973,39977]"/>
  <match src="memory: memory [35057,35063]" dest="memory: memory [36043,36049]"/>
  <match src="call_expression [32417,32443]" dest="call_expression [32417,32443]"/>
  <match src="): ) [26014,26015]" dest="): ) [26014,26015]"/>
  <match src="if: if [24680,24682]" dest="if: if [24680,24682]"/>
  <match src="binary_expression [41635,41731]" dest="binary_expression [44068,44151]"/>
  <match src="): ) [40516,40517]" dest="): ) [42919,42920]"/>
  <match src="array_access [14422,14445]" dest="array_access [14422,14445]"/>
  <match src="struct: struct [15767,15773]" dest="struct: struct [15767,15773]"/>
  <match src=",: , [41034,41035]" dest=",: , [43476,43477]"/>
  <match src="identifier: _values [14203,14210]" dest="identifier: _values [14203,14210]"/>
  <match src="memory: memory [48697,48703]" dest="memory: memory [51038,51044]"/>
  <match src="parameter [24388,24414]" dest="parameter [24388,24414]"/>
  <match src="identifier: Set [14885,14888]" dest="identifier: Set [14885,14888]"/>
  <match src="identifier: ERC165 [10688,10694]" dest="identifier: ERC165 [10688,10694]"/>
  <match src="type_name [16853,16860]" dest="type_name [16853,16860]"/>
  <match src="member_expression [21455,21476]" dest="member_expression [21455,21476]"/>
  <match src="returns: returns [24097,24104]" dest="returns: returns [24097,24104]"/>
  <match src="call_expression [23628,23715]" dest="call_expression [23628,23715]"/>
  <match src="(: ( [31124,31125]" dest="(: ( [31124,31125]"/>
  <match src="primitive_type [30367,30374]" dest="primitive_type [30367,30374]"/>
  <match src="call_expression [31109,31214]" dest="call_expression [31109,31214]"/>
  <match src="return_type_definition [2649,2666]" dest="return_type_definition [2649,2666]"/>
  <match src="primitive_type [52658,52665]" dest="primitive_type [54811,54818]"/>
  <match src="identifier: hasRole [29300,29307]" dest="identifier: hasRole [29300,29307]"/>
  <match src="memory: memory [49523,49529]" dest="memory: memory [51864,51870]"/>
  <match src="): ) [10863,10864]" dest="): ) [10863,10864]"/>
  <match src="function_definition [22523,22696]" dest="function_definition [22523,22696]"/>
  <match src="library: library [11734,11741]" dest="library: library [11734,11741]"/>
  <match src="parameter [46064,46070]" dest="parameter [48405,48411]"/>
  <match src="struct_member [12423,12461]" dest="struct_member [12423,12461]"/>
  <match src="identifier: onERC1155BatchReceived [46394,46416]" dest="identifier: onERC1155BatchReceived [48735,48757]"/>
  <match src="identifier: count [39982,39987]" dest="identifier: count [42372,42377]"/>
  <match src="primitive_type [17758,17765]" dest="primitive_type [17758,17765]"/>
  <match src=",: , [31635,31636]" dest=",: , [31635,31636]"/>
  <match src="public: public [45244,45250]" dest="public: public [47585,47591]"/>
  <match src="): ) [33083,33084]" dest="): ) [33083,33084]"/>
  <match src="(: ( [1358,1359]" dest="(: ( [1358,1359]"/>
  <match src="storage: storage [17981,17988]" dest="storage: storage [17981,17988]"/>
  <match src="primitive_type [16111,16118]" dest="primitive_type [16111,16118]"/>
  <match src="returns: returns [25990,25997]" dest="returns: returns [25990,25997]"/>
  <match src="identifier: from [8536,8540]" dest="identifier: from [8536,8540]"/>
  <match src="identifier: length [15641,15647]" dest="identifier: length [15641,15647]"/>
  <match src="uint256: uint256 [17360,17367]" dest="uint256: uint256 [17360,17367]"/>
  <match src="bytes32: bytes32 [33505,33512]" dest="bytes32: bytes32 [33505,33512]"/>
  <match src="}: } [33672,33673]" dest="}: } [33672,33673]"/>
  <match src="type_name [44287,44294]" dest="type_name [46726,46733]"/>
  <match src="&quot;: &quot; [48084,48085]" dest="&quot;: &quot; [50425,50426]"/>
  <match src="uint256: uint256 [7362,7369]" dest="uint256: uint256 [7362,7369]"/>
  <match src="binary_expression [10785,10864]" dest="binary_expression [10785,10864]"/>
  <match src="assignment_expression [36098,36123]" dest="assignment_expression [37914,37939]"/>
  <match src="): ) [41082,41083]" dest="): ) [43524,43525]"/>
  <match src="): ) [40743,40744]" dest="): ) [43162,43163]"/>
  <match src="}: } [10914,10915]" dest="}: } [10914,10915]"/>
  <match src="string_literal [21693,21753]" dest="string_literal [21693,21753]"/>
  <match src="): ) [35353,35354]" dest="): ) [36234,36235]"/>
  <match src=",: , [33066,33067]" dest=",: , [33066,33067]"/>
  <match src="identifier: rootToken [43733,43742]" dest="identifier: rootToken [46172,46181]"/>
  <match src="(: ( [38215,38216]" dest="(: ( [41224,41225]"/>
  <match src="user_defined_type [33991,34004]" dest="user_defined_type [33991,34004]"/>
  <match src="identifier: byteLen [41154,41161]" dest="identifier: byteLen [43596,43603]"/>
  <match src="primitive_type [44492,44496]" dest="primitive_type [46931,46935]"/>
  <match src="(: ( [10861,10862]" dest="(: ( [10861,10862]"/>
  <match src="function_body [33544,33673]" dest="function_body [33544,33673]"/>
  <match src="binary_expression [49049,49057]" dest="binary_expression [51390,51398]"/>
  <match src="call_argument [24477,24483]" dest="call_argument [24477,24483]"/>
  <match src="{: { [26125,26126]" dest="{: { [26125,26126]"/>
  <match src="contract_body [19217,25285]" dest="contract_body [19217,25285]"/>
  <match src="new: new [48997,49000]" dest="new: new [51338,51341]"/>
  <match src="{: { [44485,44486]" dest="{: { [46924,46925]"/>
  <match src="call_argument [10375,10405]" dest="call_argument [10375,10405]"/>
  <match src="parameter [7291,7307]" dest="parameter [7291,7307]"/>
  <match src="): ) [32442,32443]" dest="): ) [32442,32443]"/>
  <match src="): ) [49907,49908]" dest="): ) [52260,52261]"/>
  <match src=",: , [40830,40831]" dest=",: , [43249,43250]"/>
  <match src="type_name [34679,34684]" dest="type_name [34679,34684]"/>
  <match src="function: function [2587,2595]" dest="function: function [2587,2595]"/>
  <match src="comment: // Move the last value to the index where the value to delete is [14238,14302]" dest="comment: // Move the last value to the index where the value to delete is [14238,14302]"/>
  <match src="&quot;: &quot; [44586,44587]" dest="&quot;: &quot; [47025,47026]"/>
  <match src="call_argument [49733,49788]" dest="call_argument [52086,52141]"/>
  <match src="=: = [33458,33459]" dest="=: = [33458,33459]"/>
  <match src="expression_statement [49049,49058]" dest="expression_statement [51390,51399]"/>
  <match src="returns: returns [16617,16624]" dest="returns: returns [16617,16624]"/>
  <match src="parameter [18428,18447]" dest="parameter [18428,18447]"/>
  <match src=",: , [23090,23091]" dest=",: , [23090,23091]"/>
  <match src="identifier: Context [25931,25938]" dest="identifier: Context [25931,25938]"/>
  <match src="type_name [33519,33526]" dest="type_name [33519,33526]"/>
  <match src="identifier: to [4737,4739]" dest="identifier: to [4737,4739]"/>
  <match src=".: . [10887,10888]" dest=".: . [10887,10888]"/>
  <match src="): ) [18261,18262]" dest="): ) [18261,18262]"/>
  <match src="}: } [50350,50351]" dest="}: } [52801,52802]"/>
  <match src="inheritance_specifier [6403,6410]" dest="inheritance_specifier [6403,6410]"/>
  <match src="new_expression [39020,39029]" dest="new_expression [41667,41676]"/>
  <match src="identifier: mint [5436,5440]" dest="identifier: mint [5436,5440]"/>
  <match src="(: ( [46195,46196]" dest="(: ( [48536,48537]"/>
  <match src="address: address [1407,1414]" dest="address: address [1407,1414]"/>
  <match src="(: ( [2898,2899]" dest="(: ( [2898,2899]"/>
  <match src="): ) [35986,35987]" dest="): ) [37801,37802]"/>
  <match src="): ) [35602,35603]" dest="): ) [37570,37571]"/>
  <match src="identifier: i [48178,48179]" dest="identifier: i [50519,50520]"/>
  <match src="identifier: item [36818,36822]" dest="identifier: item [39539,39543]"/>
  <match src="(: ( [40870,40871]" dest="(: ( [43300,43301]"/>
  <match src="contract_declaration [10651,10918]" dest="contract_declaration [10651,10918]"/>
  <match src="identifier: dest [42398,42402]" dest="identifier: dest [44775,44779]"/>
  <match src="identifier: memPtr [38780,38786]" dest="identifier: memPtr [38711,38717]"/>
  <match src="string [51310,51354]" dest="string [53895,53939]"/>
  <match src="identifier: WORD_SIZE [34876,34885]" dest="identifier: WORD_SIZE [34882,34891]"/>
  <match src="{: { [38566,38567]" dest="{: { [41377,41378]"/>
  <match src=".: . [51080,51081]" dest=".: . [53665,53666]"/>
  <match src="identifier: byte0 [40258,40263]" dest="identifier: byte0 [42636,42641]"/>
  <match src="(: ( [51500,51501]" dest="(: ( [54087,54088]"/>
  <match src="internal: internal [23011,23019]" dest="internal: internal [23011,23019]"/>
  <match src="return: return [30423,30429]" dest="return: return [30423,30429]"/>
  <match src="identifier: dataLen [36116,36123]" dest="identifier: dataLen [37932,37939]"/>
  <match src="identifier: amounts [47609,47616]" dest="identifier: amounts [49950,49957]"/>
  <match src="number_literal: 1 [13876,13877]" dest="number_literal: 1 [13876,13877]"/>
  <match src=",: , [31537,31538]" dest=",: , [31537,31538]"/>
  <match src="visibility [8656,8664]" dest="visibility [8656,8664]"/>
  <match src="type_name [20160,20167]" dest="type_name [20160,20167]"/>
  <match src="uint256: uint256 [16680,16687]" dest="uint256: uint256 [16680,16687]"/>
  <match src=",: , [17285,17286]" dest=",: , [17285,17286]"/>
  <match src="): ) [33652,33653]" dest="): ) [33652,33653]"/>
  <match src="pure: pure [38202,38206]" dest="pure: pure [41211,41215]"/>
  <match src="call_expression [24466,24484]" dest="call_expression [24466,24484]"/>
  <match src="identifier: i [36054,36055]" dest="identifier: i [37869,37870]"/>
  <match src="+: + [39718,39719]" dest="+: + [42199,42200]"/>
  <match src="primitive_type [2658,2665]" dest="primitive_type [2658,2665]"/>
  <match src="yul_evm_builtin [37884,37889]" dest="yul_evm_builtin [40893,40898]"/>
  <match src="function_definition [18870,19007]" dest="function_definition [18870,19007]"/>
  <match src=".: . [12780,12781]" dest=".: . [12780,12781]"/>
  <match src="identifier: byte0 [40921,40926]" dest="identifier: byte0 [43351,43356]"/>
  <match src="function: function [14866,14874]" dest="function: function [14866,14874]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [25341,25372]" dest="comment: // SPDX-License-Identifier: MIT [25341,25372]"/>
  <match src="{: { [34105,34106]" dest="{: { [34105,34106]"/>
  <match src="type_cast_expression [51808,51821]" dest="type_cast_expression [54326,54339]"/>
  <match src="primitive_type [4186,4193]" dest="primitive_type [4186,4193]"/>
  <match src="{: { [43140,43141]" dest="{: { [45579,45580]"/>
  <match src="state_mutability [37054,37058]" dest="state_mutability [40493,40497]"/>
  <match src="primitive_type [3528,3535]" dest="primitive_type [3528,3535]"/>
  <match src="identifier: onERC1155BatchReceived [10865,10887]" dest="identifier: onERC1155BatchReceived [10865,10887]"/>
  <match src="}: } [40849,40850]" dest="}: } [43268,43269]"/>
  <match src="identifier: itemLength [38244,38254]" dest="identifier: memPtr [39978,39984]"/>
  <match src="call_argument [53355,53359]" dest="call_argument [55616,55620]"/>
  <match src="parameter [16588,16601]" dest="parameter [16588,16601]"/>
  <match src=".: . [10803,10804]" dest=".: . [10803,10804]"/>
  <match src="&quot;: &quot; [45221,45222]" dest="&quot;: &quot; [47562,47563]"/>
  <match src="identifier: memPtr [40223,40229]" dest="identifier: memPtr [42601,42607]"/>
  <match src="identifier: copy [42121,42125]" dest="identifier: copy [44541,44545]"/>
  <match src="pragma_directive [34628,34650]" dest="pragma_directive [34628,34650]"/>
  <match src="(: ( [40822,40823]" dest="(: ( [43241,43242]"/>
  <match src="if_statement [12726,13053]" dest="if_statement [12726,13053]"/>
  <match src="address: address [29175,29182]" dest="address: address [29175,29182]"/>
  <match src="let: let [41103,41106]" dest="let: let [43545,43548]"/>
  <match src="array_access [9816,9849]" dest="array_access [9816,9849]"/>
  <match src="): ) [42854,42855]" dest="): ) [45278,45279]"/>
  <match src="variable_declaration [42599,42611]" dest="variable_declaration [45008,45017]"/>
  <match src="primitive_type [7291,7298]" dest="primitive_type [7291,7298]"/>
  <match src="type_name [36685,36692]" dest="type_name [39438,39445]"/>
  <match src="}: } [15813,15814]" dest="}: } [15813,15814]"/>
  <match src="identifier: role [34233,34237]" dest="identifier: role [34233,34237]"/>
  <match src="=&gt;: =&gt; [28000,28002]" dest="=&gt;: =&gt; [28000,28002]"/>
  <match src="constructor_definition [9337,9558]" dest="constructor_definition [9337,9558]"/>
  <match src="external: external [46957,46965]" dest="external: external [49298,49306]"/>
  <match src="&quot;: &quot; [48943,48944]" dest="&quot;: &quot; [51284,51285]"/>
  <match src="primitive_type [12709,12713]" dest="primitive_type [12709,12713]"/>
  <match src="comment: // Position of the value in the `values` array, plus 1 because index 0 [12298,12368]" dest="comment: // Position of the value in the `values` array, plus 1 because index 0 [12298,12368]"/>
  <match src=".: . [17749,17750]" dest=".: . [17749,17750]"/>
  <match src="): ) [48760,48761]" dest="): ) [51101,51102]"/>
  <match src="visibility [28013,28020]" dest="visibility [28013,28020]"/>
  <match src="identifier: valueIndex [13477,13487]" dest="identifier: valueIndex [13477,13487]"/>
  <match src="): ) [18084,18085]" dest="): ) [18084,18085]"/>
  <match src="): ) [12690,12691]" dest="): ) [12690,12691]"/>
  <match src="}: } [24294,24295]" dest="}: } [24294,24295]"/>
  <match src=".: . [15640,15641]" dest=".: . [15640,15641]"/>
  <match src="primitive_type [34070,34076]" dest="primitive_type [34070,34076]"/>
  <match src="view: view [2644,2648]" dest="view: view [2644,2648]"/>
  <match src="[: [ [8591,8592]" dest="[: [ [8591,8592]"/>
  <match src="visibility [45027,45033]" dest="visibility [47368,47374]"/>
  <match src="{: { [44863,44864]" dest="{: { [47204,47205]"/>
  <match src="assignment_expression [36003,36032]" dest="assignment_expression [37818,37847]"/>
  <match src="): ) [31161,31162]" dest="): ) [31161,31162]"/>
  <match src="call_argument [52431,52441]" dest="call_argument [54604,54614]"/>
  <match src="): ) [10802,10803]" dest="): ) [10802,10803]"/>
  <match src="type_name [12423,12451]" dest="type_name [12423,12451]"/>
  <match src="(: ( [42765,42766]" dest="(: ( [45185,45186]"/>
  <match src="primitive_type [37281,37288]" dest="primitive_type [40611,40618]"/>
  <match src="visibility [17302,17310]" dest="visibility [17302,17310]"/>
  <match src="memory: memory [50817,50823]" dest="memory: memory [53402,53408]"/>
  <match src="call_expression [21676,21754]" dest="call_expression [21676,21754]"/>
  <match src=".: . [36942,36943]" dest=".: . [39716,39717]"/>
  <match src="primitive_type [53091,53098]" dest="primitive_type [55109,55116]"/>
  <match src="type_name [39689,39696]" dest="type_name [42173,42177]"/>
  <match src="return: return [39199,39205]" dest="return: return [41829,41835]"/>
  <match src="binary_expression [39746,39762]" dest="binary_expression [42227,42243]"/>
  <match src="(: ( [41072,41073]" dest="(: ( [43514,43515]"/>
  <match src="string: string [2360,2366]" dest="string: string [2360,2366]"/>
  <match src="identifier: role [29316,29320]" dest="identifier: role [29316,29320]"/>
  <match src="(: ( [33701,33702]" dest="(: ( [33701,33702]"/>
  <match src="expression_statement [10752,10908]" dest="expression_statement [10752,10908]"/>
  <match src="pure: pure [35497,35501]" dest="pure: pure [37507,37511]"/>
  <match src="type_name [18941,18948]" dest="type_name [18941,18948]"/>
  <match src="identifier: role [30361,30365]" dest="identifier: role [30361,30365]"/>
  <match src="identifier: memPtr [38536,38542]" dest="identifier: memPtr [41347,41353]"/>
  <match src="view: view [15587,15591]" dest="view: view [15587,15591]"/>
  <match src="indexed: indexed [28752,28759]" dest="indexed: indexed [28752,28759]"/>
  <match src="}: } [9557,9558]" dest="}: } [9557,9558]"/>
  <match src="memory: memory [35530,35536]" dest="memory: memory [37531,37537]"/>
  <match src="identifier: addr [48743,48747]" dest="identifier: addr [51084,51088]"/>
  <match src="identifier: success [21684,21691]" dest="identifier: success [21684,21691]"/>
  <match src="identifier: set [12741,12744]" dest="identifier: set [12741,12744]"/>
  <match src="parameter [48623,48635]" dest="parameter [50964,50976]"/>
  <match src="return: return [30734,30740]" dest="return: return [30734,30740]"/>
  <match src="identifier: weiValue [24378,24386]" dest="identifier: weiValue [24378,24386]"/>
  <match src="identifier: require [35554,35561]" dest="identifier: require [37550,37557]"/>
  <match src="return_type_definition [18018,18032]" dest="return_type_definition [18018,18032]"/>
  <match src="assembly: assembly [42651,42659]" dest="assembly: assembly [45063,45071]"/>
  <match src="): ) [30459,30460]" dest="): ) [30459,30460]"/>
  <match src="yul_path [42700,42703]" dest="yul_path [45116,45119]"/>
  <match src="identifier: IMintableERC1155 [51636,51652]" dest="identifier: IMintableERC1155 [54223,54239]"/>
  <match src="binary_expression [37601,37623]" dest="binary_expression [35912,35949]"/>
  <match src="[: [ [4772,4773]" dest="[: [ [4772,4773]"/>
  <match src="call_argument [53106,53116]" dest="call_argument [55124,55134]"/>
  <match src="primitive_type [21612,21616]" dest="primitive_type [21612,21616]"/>
  <match src="parameter [15601,15608]" dest="parameter [15601,15608]"/>
  <match src="call_argument [31117,31162]" dest="call_argument [31117,31162]"/>
  <match src="+: + [39797,39798]" dest="+: + [42277,42278]"/>
  <match src="call_argument [18992,18997]" dest="call_argument [18992,18997]"/>
  <match src="identifier: depositReceiver [45478,45493]" dest="identifier: depositReceiver [47819,47834]"/>
  <match src="parameter [4224,4238]" dest="parameter [4224,4238]"/>
  <match src="): ) [49635,49636]" dest="): ) [51988,51989]"/>
  <match src="call_expression [31149,31161]" dest="call_expression [31149,31161]"/>
  <match src="return_type_definition [23587,23609]" dest="return_type_definition [23587,23609]"/>
  <match src="call_argument [48004,48012]" dest="call_argument [50345,50353]"/>
  <match src="[: [ [50973,50974]" dest="[: [ [53558,53559]"/>
  <match src="call_argument [36067,36074]" dest="call_argument [37882,37889]"/>
  <match src="expression_statement [51199,51366]" dest="expression_statement [53784,53951]"/>
  <match src="{: { [16390,16391]" dest="{: { [16390,16391]"/>
  <match src="virtual: virtual [10321,10328]" dest="virtual: virtual [10321,10328]"/>
  <match src="(: ( [14938,14939]" dest="(: ( [14938,14939]"/>
  <match src="identifier: members [33572,33579]" dest="identifier: members [33572,33579]"/>
  <match src="}: } [25187,25188]" dest="}: } [25187,25188]"/>
  <match src="member_expression [50921,50934]" dest="member_expression [53506,53519]"/>
  <match src="visibility [47931,47939]" dest="visibility [50272,50280]"/>
  <match src="]: ] [33570,33571]" dest="]: ] [33570,33571]"/>
  <match src="variable_declaration_tuple [21611,21627]" dest="variable_declaration_tuple [21611,21627]"/>
  <match src="bool: bool [14939,14943]" dest="bool: bool [14939,14943]"/>
  <match src="call_argument [45713,45739]" dest="call_argument [48054,48080]"/>
  <match src="member_expression [14422,14434]" dest="member_expression [14422,14434]"/>
  <match src="function_definition [41377,41947]" dest="function_definition [43819,44371]"/>
  <match src=",: , [41144,41145]" dest=",: , [43586,43587]"/>
  <match src="return_type_definition [19862,19876]" dest="return_type_definition [19862,19876]"/>
  <match src="call_argument [53456,53465]" dest="call_argument [55734,55743]"/>
  <match src="address: address [28766,28773]" dest="address: address [28766,28773]"/>
  <match src="): ) [12791,12792]" dest="): ) [12791,12792]"/>
  <match src="parameter [8501,8517]" dest="parameter [8501,8517]"/>
  <match src="call_argument [46391,46392]" dest="call_argument [48732,48733]"/>
  <match src="call_argument [53430,53437]" dest="call_argument [55267,55274]"/>
  <match src="internal: internal [9352,9360]" dest="internal: internal [9352,9360]"/>
  <match src="(: ( [38596,38597]" dest="(: ( [41407,41408]"/>
  <match src="return_statement [46368,46426]" dest="return_statement [48709,48767]"/>
  <match src="return_statement [12985,12997]" dest="return_statement [12985,12997]"/>
  <match src="type_name [9742,9748]" dest="type_name [9742,9748]"/>
  <match src="(: ( [3510,3511]" dest="(: ( [3510,3511]"/>
  <match src="address: address [37281,37288]" dest="address: address [40611,40618]"/>
  <match src="binary_expression [36107,36123]" dest="binary_expression [37923,37939]"/>
  <match src="): ) [30380,30381]" dest="): ) [30380,30381]"/>
  <match src="identifier: data [23658,23662]" dest="identifier: data [23658,23662]"/>
  <match src="primitive_type [16029,16036]" dest="primitive_type [16029,16036]"/>
  <match src="call_argument [10785,10896]" dest="call_argument [10785,10896]"/>
  <match src="string_literal [21662,21664]" dest="string_literal [21662,21664]"/>
  <match src="call_argument [24486,24517]" dest="call_argument [24486,24517]"/>
  <match src="): ) [16601,16602]" dest="): ) [16601,16602]"/>
  <match src="identifier: toRlpBytes [36674,36684]" dest="identifier: toRlpBytes [39427,39437]"/>
  <match src="identifier: require [38412,38419]" dest="identifier: require [41270,41277]"/>
  <match src="): ) [23608,23609]" dest="): ) [23608,23609]"/>
  <match src="returns: returns [26102,26109]" dest="returns: returns [26102,26109]"/>
  <match src="identifier: item [37039,37043]" dest="identifier: item [40478,40482]"/>
  <match src="type_cast_expression [52506,52515]" dest="type_cast_expression [54692,54701]"/>
  <match src="(: ( [45761,45762]" dest="(: ( [48102,48103]"/>
  <match src="}: } [53580,53581]" dest="}: } [55877,55878]"/>
  <match src="type_name [27815,27839]" dest="type_name [27815,27839]"/>
  <match src="function_body [31098,31260]" dest="function_body [31098,31260]"/>
  <match src="&quot;: &quot; [44571,44572]" dest="&quot;: &quot; [47010,47011]"/>
  <match src="returns: returns [18932,18939]" dest="returns: returns [18932,18939]"/>
  <match src="identifier: _payloadOffset [38901,38915]" dest="identifier: _payloadOffset [37018,37032]"/>
  <match src="number_literal: 1 [41882,41883]" dest="number_literal: 1 [44293,44294]"/>
  <match src="identifier: len [39725,39728]" dest="identifier: len [42206,42209]"/>
  <match src="}: } [10467,10468]" dest="}: } [10467,10468]"/>
  <match src="call_argument [49011,49015]" dest="call_argument [51352,51356]"/>
  <match src="primitive_type [3511,3518]" dest="primitive_type [3511,3518]"/>
  <match src="identifier: result [36047,36053]" dest="identifier: result [37862,37868]"/>
  <match src=",: , [39173,39174]" dest=",: , [41803,41804]"/>
  <match src="inheritance_specifier [9019,9026]" dest="inheritance_specifier [9019,9026]"/>
  <match src="primitive_type [48609,48616]" dest="primitive_type [50950,50957]"/>
  <match src="(: ( [33851,33852]" dest="(: ( [33851,33852]"/>
  <match src="parameter [5458,5468]" dest="parameter [5458,5468]"/>
  <match src="): ) [18916,18917]" dest="): ) [18916,18917]"/>
  <match src="string [48776,48819]" dest="string [51117,51160]"/>
  <match src="primitive_type [52399,52406]" dest="primitive_type [54568,54575]"/>
  <match src="call_expression [33756,33792]" dest="call_expression [33756,33792]"/>
  <match src="function: function [18412,18420]" dest="function: function [18412,18420]"/>
  <match src="identifier: index [17295,17300]" dest="identifier: index [17295,17300]"/>
  <match src="{: { [34005,34006]" dest="{: { [34005,34006]"/>
  <match src="primitive_type [17994,18001]" dest="primitive_type [17994,18001]"/>
  <match src="{: { [16862,16863]" dest="{: { [16862,16863]"/>
  <match src="(: ( [22640,22641]" dest="(: ( [22640,22641]"/>
  <match src="primitive_type [17717,17721]" dest="primitive_type [17717,17721]"/>
  <match src="{: { [24644,24645]" dest="{: { [24644,24645]"/>
  <match src="identifier: dataLen [36067,36074]" dest="identifier: dataLen [37882,37889]"/>
  <match src="identifier: onERC1155Received [10804,10821]" dest="identifier: onERC1155Received [10804,10821]"/>
  <match src="solidity_version_comparison_operator [10592,10594]" dest="solidity_version_comparison_operator [10592,10594]"/>
  <match src="uint256: uint256 [52658,52665]" dest="uint256: uint256 [54811,54818]"/>
  <match src="identifier: ptr [36951,36954]" dest="identifier: ptr [39725,39728]"/>
  <match src="binary_expression [41771,41795]" dest="binary_expression [44194,44218]"/>
  <match src="type_name [7291,7298]" dest="type_name [7291,7298]"/>
  <match src=",: , [52462,52463]" dest=",: , [54639,54640]"/>
  <match src="member_expression [51531,51541]" dest="member_expression [54118,54128]"/>
  <match src="(: ( [37023,37024]" dest="(: ( [40462,40463]"/>
  <match src="identifier: lastvalue [14345,14354]" dest="identifier: lastvalue [14345,14354]"/>
  <match src="yul_function_call [20339,20359]" dest="yul_function_call [20339,20359]"/>
  <match src="{: { [6411,6412]" dest="{: { [6411,6412]"/>
  <match src="type_name [29632,29639]" dest="type_name [29632,29639]"/>
  <match src="internal: internal [36715,36723]" dest="internal: internal [39459,39467]"/>
  <match src="function: function [19811,19819]" dest="function: function [19811,19819]"/>
  <match src="type_name [33505,33512]" dest="type_name [33505,33512]"/>
  <match src="yul_path [40823,40830]" dest="yul_path [43242,43249]"/>
  <match src="): ) [40284,40285]" dest="): ) [42662,42663]"/>
  <match src="bytes: bytes [51044,51049]" dest="bytes: bytes [53629,53634]"/>
  <match src="identifier: lockTokens [46812,46822]" dest="identifier: lockTokens [49153,49163]"/>
  <match src="(: ( [12729,12730]" dest="(: ( [12729,12730]"/>
  <match src="call_expression [16408,16452]" dest="call_expression [16408,16452]"/>
  <match src="}: } [25202,25203]" dest="}: } [25202,25203]"/>
  <match src="comment: // File: @openzeppelin/contracts/introspection/ERC165.sol [8697,8754]" dest="comment: // File: @openzeppelin/contracts/introspection/ERC165.sol [8697,8754]"/>
  <match src="update_expression [48195,48198]" dest="update_expression [50536,50539]"/>
  <match src="{: { [4953,4954]" dest="{: { [4953,4954]"/>
  <match src="}: } [36167,36168]" dest="}: } [37983,37984]"/>
  <match src=":=: := [41066,41068]" dest=":=: := [43508,43510]"/>
  <match src="function_definition [50735,53588]" dest="function_definition [53320,55885]"/>
  <match src=":=: := [36443,36445]" dest=":=: := [38300,38302]"/>
  <match src="member_expression [38314,38322]" dest="member_expression [41561,41569]"/>
  <match src="number_literal: 0 [49046,49047]" dest="number_literal: 0 [51387,51388]"/>
  <match src="visibility [15115,15122]" dest="visibility [15115,15122]"/>
  <match src="function_definition [45628,45840]" dest="function_definition [47969,48181]"/>
  <match src="identifier: require [51199,51206]" dest="identifier: require [53784,53791]"/>
  <match src="assembly: assembly [40982,40990]" dest="assembly: assembly [43424,43432]"/>
  <match src="return_type_definition [35111,35135]" dest="return_type_definition [36070,36094]"/>
  <match src="primitive_type [46833,46840]" dest="primitive_type [49174,49181]"/>
  <match src="variable_declaration [51103,51121]" dest="variable_declaration [53688,53706]"/>
  <match src="(: ( [41529,41530]" dest="(: ( [43962,43963]"/>
  <match src="for: for [27811,27814]" dest="for: for [27811,27814]"/>
  <match src="&quot;: &quot; [48818,48819]" dest="&quot;: &quot; [51159,51160]"/>
  <match src="if_statement [41561,41940]" dest="if_statement [43994,44364]"/>
  <match src="type_name [5470,5477]" dest="type_name [5470,5477]"/>
  <match src="return_type_definition [46340,46356]" dest="return_type_definition [48681,48697]"/>
  <match src="function_definition [3263,3332]" dest="function_definition [3263,3332]"/>
  <match src="identifier: memPtr [38921,38927]" dest="identifier: memPtr [37038,37044]"/>
  <match src="]: ] [49521,49522]" dest="]: ] [51862,51863]"/>
  <match src="state_mutability [17311,17315]" dest="state_mutability [17311,17315]"/>
  <match src="identifier: itemLen [40911,40918]" dest="identifier: itemLen [43341,43348]"/>
  <match src="public: public [30693,30699]" dest="public: public [30693,30699]"/>
  <match src=",: , [1681,1682]" dest=",: , [1681,1682]"/>
  <match src="identifier: _values [12773,12780]" dest="identifier: _values [12773,12780]"/>
  <match src="call_argument [12786,12791]" dest="call_argument [12786,12791]"/>
  <match src="identifier: UintSet [18428,18435]" dest="identifier: UintSet [18428,18435]"/>
  <match src="number_literal: 0 [48870,48871]" dest="number_literal: 0 [51211,51212]"/>
  <match src="return: return [46083,46089]" dest="return: return [48424,48430]"/>
  <match src="array_access [33390,33402]" dest="array_access [33390,33402]"/>
  <match src="private: private [41417,41424]" dest="private: private [43856,43863]"/>
  <match src="primitive_type [43691,43698]" dest="primitive_type [46130,46137]"/>
  <match src="yul_function_call [42766,42777]" dest="yul_function_call [45186,45197]"/>
  <match src="return_statement [18044,18087]" dest="return_statement [18044,18087]"/>
  <match src="function_body [16632,16704]" dest="function_body [16632,16704]"/>
  <match src="true [44620,44624]" dest="true [47059,47063]"/>
  <match src="call_expression [47475,47502]" dest="call_expression [49816,49843]"/>
  <match src=",: , [52955,52956]" dest=",: , [55402,55403]"/>
  <match src="primitive_type [51044,51049]" dest="primitive_type [53629,53634]"/>
  <match src="memory: memory [36693,36699]" dest="memory: memory [39446,39452]"/>
  <match src="yul_function_call [40726,40742]" dest="yul_function_call [43145,43161]"/>
  <match src="identifier: target [24018,24024]" dest="identifier: target [24018,24024]"/>
  <match src="[: [ [35527,35528]" dest="[: [ [37528,37529]"/>
  <match src="uint256: uint256 [18472,18479]" dest="uint256: uint256 [18472,18479]"/>
  <match src="(: ( [49862,49863]" dest="(: ( [52215,52216]"/>
  <match src="primitive_type [45564,45571]" dest="primitive_type [47905,47912]"/>
  <match src=",: , [51594,51595]" dest=",: , [54181,54182]"/>
  <match src=".: . [16419,16420]" dest=".: . [16419,16420]"/>
  <match src="address: address [33716,33723]" dest="address: address [33716,33723]"/>
  <match src="address: address [51103,51110]" dest="address: address [53688,53695]"/>
  <match src="identifier: Set [12219,12222]" dest="identifier: Set [12219,12222]"/>
  <match src="div: div [41118,41121]" dest="div: div [43560,43563]"/>
  <match src="uint256: uint256 [7341,7348]" dest="uint256: uint256 [7341,7348]"/>
  <match src="type_name [35957,35964]" dest="type_name [37775,37779]"/>
  <match src="identifier: destpart [42750,42758]" dest="identifier: destpart [45170,45178]"/>
  <match src=".: . [50924,50925]" dest=".: . [53509,53510]"/>
  <match src="identifier: call [24640,24644]" dest="identifier: call [24640,24644]"/>
  <match src="): ) [37385,37386]" dest="): ) [40712,40713]"/>
  <match src="identifier: memPtr [40076,40082]" dest="identifier: memPtr [42463,42469]"/>
  <match src="): ) [51159,51160]" dest="): ) [53744,53745]"/>
  <match src="(: ( [21462,21463]" dest="(: ( [21462,21463]"/>
  <match src="memory: memory [24395,24401]" dest="memory: memory [24395,24401]"/>
  <match src=".: . [50936,50937]" dest=".: . [53521,53522]"/>
  <match src="identifier: RLPItem [36291,36298]" dest="identifier: RLPItem [38107,38114]"/>
  <match src="]: ] [51079,51080]" dest="]: ] [53664,53665]"/>
  <match src="function: function [49467,49475]" dest="function: function [51808,51816]"/>
  <match src="(: ( [53043,53044]" dest="(: ( [55087,55088]"/>
  <match src="sub: sub [40501,40504]" dest="sub: sub [42904,42907]"/>
  <match src="]: ] [29395,29396]" dest="]: ] [29395,29396]"/>
  <match src="extcodehash: extcodehash [20339,20350]" dest="extcodehash: extcodehash [20339,20350]"/>
  <match src="parameter [48609,48621]" dest="parameter [50950,50962]"/>
  <match src="{: { [39082,39083]" dest="{: { [41726,41727]"/>
  <match src=",: , [45968,45969]" dest=",: , [48309,48310]"/>
  <match src="(: ( [44540,44541]" dest="(: ( [46979,46980]"/>
  <match src="identifier: data [8635,8639]" dest="identifier: data [8635,8639]"/>
  <match src="identifier: value [18227,18232]" dest="identifier: value [18227,18232]"/>
  <match src="address: address [45943,45950]" dest="address: address [48284,48291]"/>
  <match src="yul_function_call [36893,36910]" dest="yul_function_call [39667,39684]"/>
  <match src="string [34165,34193]" dest="string [34165,34193]"/>
  <match src="call_argument [35903,35914]" dest="call_argument [42150,42161]"/>
  <match src="identifier: src [42410,42413]" dest="identifier: src [44787,44790]"/>
  <match src="call_expression [45145,45229]" dest="call_expression [47486,47570]"/>
  <match src="primitive_type [1427,1434]" dest="primitive_type [1427,1434]"/>
  <match src="type_name [32278,32285]" dest="type_name [32278,32285]"/>
  <match src="identifier: _length [15090,15097]" dest="identifier: _length [15090,15097]"/>
  <match src="return: return [18044,18050]" dest="return: return [18044,18050]"/>
  <match src="yul_evm_builtin [41246,41249]" dest="yul_evm_builtin [43688,43691]"/>
  <match src=",: , [36074,36075]" dest=",: , [37889,37890]"/>
  <match src="=: = [34713,34714]" dest="=: = [34713,34714]"/>
  <match src="type_name [7448,7454]" dest="type_name [7448,7454]"/>
  <match src="storage: storage [14889,14896]" dest="storage: storage [14889,14896]"/>
  <match src="identifier: account [31244,31251]" dest="identifier: account [31244,31251]"/>
  <match src="yul_function_call [41122,41135]" dest="yul_function_call [43564,43577]"/>
  <match src="identifier: ids [52675,52678]" dest="identifier: ids [54828,54831]"/>
  <match src="): ) [47969,47970]" dest="): ) [50310,50311]"/>
  <match src="call_argument [48147,48151]" dest="call_argument [50488,50492]"/>
  <match src="(: ( [37413,37414]" dest="(: ( [37346,37347]"/>
  <match src="): ) [41134,41135]" dest="): ) [43576,43577]"/>
  <match src=",: , [31242,31243]" dest=",: , [31242,31243]"/>
  <match src="identifier: returndata [24829,24839]" dest="identifier: returndata [24829,24839]"/>
  <match src="type_name [1427,1434]" dest="type_name [1427,1434]"/>
  <match src="expression_statement [45696,45741]" dest="expression_statement [48037,48082]"/>
  <match src="primitive_type [2899,2906]" dest="primitive_type [2899,2906]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol [6200,6267]" dest="comment: // File: @openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol [6200,6267]"/>
  <match src="(: ( [12785,12786]" dest="(: ( [12785,12786]"/>
  <match src="user_defined_type [16806,16816]" dest="user_defined_type [16806,16816]"/>
  <match src="yul_evm_builtin [41137,41140]" dest="yul_evm_builtin [43579,43582]"/>
  <match src="}: } [52341,52342]" dest="}: } [54470,54471]"/>
  <match src="parameter [17263,17285]" dest="parameter [17263,17285]"/>
  <match src="(: ( [39745,39746]" dest="(: ( [42226,42227]"/>
  <match src="parameter [3511,3526]" dest="parameter [3511,3526]"/>
  <match src="): ) [51256,51257]" dest="): ) [53841,53842]"/>
  <match src="function: function [17251,17259]" dest="function: function [17251,17259]"/>
  <match src="identifier: byte0 [41771,41776]" dest="identifier: byte0 [44194,44199]"/>
  <match src="&quot;: &quot; [45366,45367]" dest="&quot;: &quot; [47707,47708]"/>
  <match src="pragma: pragma [972,978]" dest="pragma: pragma [972,978]"/>
  <match src="variable_declaration [20160,20179]" dest="variable_declaration [20160,20179]"/>
  <match src="string_literal [15657,15693]" dest="string_literal [15657,15693]"/>
  <match src="identifier: _indexes [13445,13453]" dest="identifier: _indexes [13445,13453]"/>
  <match src="type_name [28003,28011]" dest="type_name [28003,28011]"/>
  <match src="(: ( [5440,5441]" dest="(: ( [5440,5441]"/>
  <match src="uint256: uint256 [51769,51776]" dest="uint256: uint256 [54292,54299]"/>
  <match src="primitive_type [33702,33709]" dest="primitive_type [33702,33709]"/>
  <match src="solidity_pragma_token [42950,42964]" dest="solidity_pragma_token [45389,45403]"/>
  <match src="{: { [19877,19878]" dest="{: { [19877,19878]"/>
  <match src="&quot;: &quot; [23671,23672]" dest="&quot;: &quot; [23671,23672]"/>
  <match src="else: else [24738,24742]" dest="else: else [24738,24742]"/>
  <match src="identifier: at [17260,17262]" dest="identifier: at [17260,17262]"/>
  <match src="mload: mload [38591,38596]" dest="mload: mload [41402,41407]"/>
  <match src="for: for [27860,27863]" dest="for: for [27860,27863]"/>
  <match src="contract_body [25939,26296]" dest="contract_body [25939,26296]"/>
  <match src="primitive_type [37068,37075]" dest="primitive_type [40507,40514]"/>
  <match src="identifier: memPtr [35879,35885]" dest="identifier: memPtr [42126,42132]"/>
  <match src="-: - [41912,41913]" dest="-: - [44336,44337]"/>
  <match src="false [44506,44511]" dest="false [46945,46950]"/>
  <match src="primitive_type [8682,8688]" dest="primitive_type [8682,8688]"/>
  <match src="[: [ [1710,1711]" dest="[: [ [1710,1711]"/>
  <match src="identifier: exitTokens [44266,44276]" dest="identifier: exitTokens [46705,46715]"/>
  <match src="(: ( [45608,45609]" dest="(: ( [47949,47950]"/>
  <match src="(: ( [31712,31713]" dest="(: ( [31712,31713]"/>
  <match src="call_argument [47261,47290]" dest="call_argument [49602,49631]"/>
  <match src="identifier: memPtr [41073,41079]" dest="identifier: memPtr [43515,43521]"/>
  <match src="bytes32: bytes32 [45019,45026]" dest="bytes32: bytes32 [47360,47367]"/>
  <match src="identifier: id [7349,7351]" dest="identifier: id [7349,7351]"/>
  <match src="pragma_directive [42943,42965]" dest="pragma_directive [45382,45404]"/>
  <match src="type_cast_expression [16428,16451]" dest="type_cast_expression [16428,16451]"/>
  <match src="uint256: uint256 [4765,4772]" dest="uint256: uint256 [4765,4772]"/>
  <match src="parameter [6163,6182]" dest="parameter [6163,6182]"/>
  <match src="call_argument [51269,51270]" dest="call_argument [53854,53855]"/>
  <match src="type_cast_expression [53347,53360]" dest="type_cast_expression [55608,55621]"/>
  <match src="): ) [49062,49063]" dest="): ) [51403,51404]"/>
  <match src="primitive_type [34861,34866]" dest="primitive_type [34867,34872]"/>
  <match src="): ) [40593,40594]" dest="): ) [42996,42997]"/>
  <match src="): ) [25966,25967]" dest="): ) [25966,25967]"/>
  <match src="yul_path [20351,20358]" dest="yul_path [20351,20358]"/>
  <match src=",: , [42704,42705]" dest=",: , [45120,45121]"/>
  <match src="{: { [1203,1204]" dest="{: { [1203,1204]"/>
  <match src="[: [ [47139,47140]" dest="[: [ [49480,49481]"/>
  <match src="visibility [24416,24423]" dest="visibility [24416,24423]"/>
  <match src="yul_variable_declaration [40486,40517]" dest="yul_variable_declaration [42889,42920]"/>
  <match src=",: , [28789,28790]" dest=",: , [28789,28790]"/>
  <match src="): ) [15577,15578]" dest="): ) [15577,15578]"/>
  <match src="function_definition [38150,38648]" dest="function_definition [41159,41459]"/>
  <match src="call_argument [17372,17382]" dest="call_argument [17372,17382]"/>
  <match src="member_expression [38820,38828]" dest="member_expression [39926,39934]"/>
  <match src=",: , [10694,10695]" dest=",: , [10694,10695]"/>
  <match src="variable_declaration_statement [41459,41473]" dest="variable_declaration_statement [43895,43906]"/>
  <match src="parameter [4186,4198]" dest="parameter [4186,4198]"/>
  <match src="yul_function_call [41069,41083]" dest="yul_function_call [43511,43525]"/>
  <match src="yul_evm_builtin [42391,42397]" dest="yul_evm_builtin [44768,44774]"/>
  <match src="(: ( [38031,38032]" dest="(: ( [41040,41041]"/>
  <match src="identifier: approved [1977,1985]" dest="identifier: approved [1977,1985]"/>
  <match src="user_defined_type [16564,16574]" dest="user_defined_type [16564,16574]"/>
  <match src="identifier: item [35874,35878]" dest="identifier: item [42121,42125]"/>
  <match src="type_name [46224,46231]" dest="type_name [48565,48572]"/>
  <match src="yul_hex_number: 0x20 [36897,36901]" dest="yul_hex_number: 0x20 [39671,39675]"/>
  <match src="[: [ [45547,45548]" dest="[: [ [47888,47889]"/>
  <match src="type_name [46349,46355]" dest="type_name [48690,48696]"/>
  <match src="identifier: amountsToBeExited [50232,50249]" dest="identifier: amountsToBeExited [52645,52662]"/>
  <match src="identifier: value [14910,14915]" dest="identifier: value [14910,14915]"/>
  <match src="parameter [43691,43714]" dest="parameter [46130,46153]"/>
  <match src="yul_identifier [41128,41134]" dest="yul_identifier [43570,43576]"/>
  <match src="returns: returns [22589,22596]" dest="returns: returns [22589,22596]"/>
  <match src="primitive_type [37378,37385]" dest="primitive_type [40708,40712]"/>
  <match src="identifier: _add [16086,16090]" dest="identifier: _add [16086,16090]"/>
  <match src="identifier: MANAGER_ROLE [50856,50868]" dest="identifier: MANAGER_ROLE [53441,53453]"/>
  <match src="comment: /*  * @author Hamdi Allam hamdi.allam97@gmail.com  * Please reach out with any questions or concerns  * https://github.com/hamdiallam/Solidity-RLP/blob/e681e25a376dbd5426b509380bc03446f05d0f97/contracts/RLPReader.sol  */ [34402,34626]" dest="comment: /*  * @author Hamdi Allam hamdi.allam97@gmail.com  * Please reach out with any questions or concerns  * https://github.com/hamdiallam/Solidity-RLP/blob/e681e25a376dbd5426b509380bc03446f05d0f97/contracts/RLPReader.sol  */ [34402,34626]"/>
  <match src="primitive_type [35222,35229]" dest="primitive_type [55039,55046]"/>
  <match src="primitive_type [47284,47289]" dest="primitive_type [49625,49630]"/>
  <match src="&quot;: &quot; [32402,32403]" dest="&quot;: &quot; [32402,32403]"/>
  <match src="{: { [45685,45686]" dest="{: { [48026,48027]"/>
  <match src="identifier: _roles [33390,33396]" dest="identifier: _roles [33390,33396]"/>
  <match src=".: . [36960,36961]" dest=".: . [39734,39735]"/>
  <match src="call_expression [33841,33853]" dest="call_expression [33841,33853]"/>
  <match src="type_name [41439,41446]" dest="type_name [43878,43882]"/>
  <match src="pure: pure [40092,40096]" dest="pure: pure [42479,42483]"/>
  <match src="): ) [42346,42347]" dest="): ) [44723,44724]"/>
  <match src="indexed: indexed [29158,29165]" dest="indexed: indexed [29158,29165]"/>
  <match src="^:  ^ [11032,11034]" dest="^:  ^ [11032,11034]"/>
  <match src="if: if [40313,40315]" dest="if: if [42714,42716]"/>
  <match src="): ) [12751,12752]" dest="): ) [12751,12752]"/>
  <match src="identifier: id [51823,51825]" dest="identifier: id [54341,54343]"/>
  <match src="]: ] [1711,1712]" dest="]: ] [1711,1712]"/>
  <match src="storage: storage [18436,18443]" dest="storage: storage [18436,18443]"/>
  <match src="&lt;: &lt; [49051,49052]" dest="&lt;: &lt; [51392,51393]"/>
  <match src="}: } [19009,19010]" dest="}: } [19009,19010]"/>
  <match src="call_argument [17368,17390]" dest="call_argument [17368,17390]"/>
  <match src="call_argument [33641,33653]" dest="call_argument [33641,33653]"/>
  <match src="type_name [51513,51520]" dest="type_name [54100,54107]"/>
  <match src="{: { [25040,25041]" dest="{: { [25040,25041]"/>
  <match src="{: { [15785,15786]" dest="{: { [15785,15786]"/>
  <match src="bytes32: bytes32 [28036,28043]" dest="bytes32: bytes32 [28036,28043]"/>
  <match src="type_name [2899,2906]" dest="type_name [2899,2906]"/>
  <match src="memory: memory [49629,49635]" dest="memory: memory [51970,51976]"/>
  <match src="uint256: uint256 [51596,51603]" dest="uint256: uint256 [54183,54190]"/>
  <match src="}: } [18525,18526]" dest="}: } [18525,18526]"/>
  <match src="identifier: toBytes [51081,51088]" dest="identifier: toBytes [53666,53673]"/>
  <match src="type_cast_expression [51124,51160]" dest="type_cast_expression [53709,53745]"/>
  <match src="identifier: byte0 [40367,40372]" dest="identifier: byte0 [42768,42773]"/>
  <match src="&quot;: &quot; [51353,51354]" dest="&quot;: &quot; [53938,53939]"/>
  <match src="member_expression [46375,46425]" dest="member_expression [48716,48766]"/>
  <match src="binary_expression [41915,41934]" dest="binary_expression [44339,44358]"/>
  <match src="primitive_type [14902,14909]" dest="primitive_type [14902,14909]"/>
  <match src="yul_identifier [37874,37880]" dest="yul_identifier [40883,40889]"/>
  <match src=",: , [44841,44842]" dest=",: , [47182,47183]"/>
  <match src="parameter [43663,43680]" dest="parameter [46102,46119]"/>
  <match src="binary_expression [15629,15655]" dest="binary_expression [15629,15655]"/>
  <match src="primitive_type [39689,39696]" dest="primitive_type [42173,42177]"/>
  <match src="member_expression [38916,38927]" dest="member_expression [37033,37044]"/>
  <match src="storage: storage [18890,18897]" dest="storage: storage [18890,18897]"/>
  <match src="bool: bool [12709,12713]" dest="bool: bool [12709,12713]"/>
  <match src="identifier: id [51509,51511]" dest="identifier: id [54096,54098]"/>
  <match src="}: } [53590,53591]" dest="}: } [55887,55888]"/>
  <match src="): ) [16450,16451]" dest="): ) [16450,16451]"/>
  <match src="primitive_type [33301,33308]" dest="primitive_type [33301,33308]"/>
  <match src="comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [19978,20063]" dest="comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [19978,20063]"/>
  <match src="not: not [42706,42709]" dest="not: not [45122,45125]"/>
  <match src="type_name [2975,2982]" dest="type_name [2975,2982]"/>
  <match src="is: is [6400,6402]" dest="is: is [6400,6402]"/>
  <match src="identifier: set [15110,15113]" dest="identifier: set [15110,15113]"/>
  <match src="type_name [28744,28751]" dest="type_name [28744,28751]"/>
  <match src="primitive_type [18903,18910]" dest="primitive_type [18903,18910]"/>
  <match src="bytes32: bytes32 [30353,30360]" dest="bytes32: bytes32 [30353,30360]"/>
  <match src="true: true [14712,14716]" dest="true: true [14712,14716]"/>
  <match src="returns: returns [48678,48685]" dest="returns: returns [51019,51026]"/>
  <match src="[: [ [31131,31132]" dest="[: [ [31131,31132]"/>
  <match src="primitive_type [1635,1642]" dest="primitive_type [1635,1642]"/>
  <match src="identifier: lastIndex [14211,14220]" dest="identifier: lastIndex [14211,14220]"/>
  <match src="(: ( [51131,51132]" dest="(: ( [53716,53717]"/>
  <match src=",: , [1716,1717]" dest=",: , [1716,1717]"/>
  <match src="identifier: _indexes [14426,14434]" dest="identifier: _indexes [14426,14434]"/>
  <match src=",: , [45451,45452]" dest=",: , [47792,47793]"/>
  <match src="yul_evm_builtin [38037,38040]" dest="yul_evm_builtin [41046,41049]"/>
  <match src="bytes: bytes [7386,7391]" dest="bytes: bytes [7386,7391]"/>
  <match src="call_argument [52859,52868]" dest="call_argument [55012,55021]"/>
  <match src="address: address [43663,43670]" dest="address: address [46102,46109]"/>
  <match src="function_definition [45906,46099]" dest="function_definition [48247,48440]"/>
  <match src="call_expression [12731,12752]" dest="call_expression [12731,12752]"/>
  <match src="bytes4: bytes4 [10292,10298]" dest="bytes4: bytes4 [10292,10298]"/>
  <match src="primitive_type [48751,48758]" dest="primitive_type [51092,51099]"/>
  <match src=":=: := [41022,41024]" dest=":=: := [43464,43466]"/>
  <match src="parameter [8584,8609]" dest="parameter [8584,8609]"/>
  <match src="primitive_type [45426,45433]" dest="primitive_type [47767,47774]"/>
  <match src="(: ( [37208,37209]" dest="(: ( [40575,40576]"/>
  <match src=",: , [1944,1945]" dest=",: , [1944,1945]"/>
  <match src="function_definition [34044,34203]" dest="function_definition [34044,34203]"/>
  <match src=".: . [51408,51409]" dest=".: . [54008,54009]"/>
  <match src="identifier: account [3519,3526]" dest="identifier: account [3519,3526]"/>
  <match src="): ) [46355,46356]" dest="): ) [48696,48697]"/>
  <match src="external: external [838,846]" dest="external: external [838,846]"/>
  <match src="comment: /**      * @notice Deposit tokens into pos portal      * @dev When `depositor` deposits tokens into pos portal, tokens get locked into predicate contract.      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on side chain      * @param rootToken Token which gets deposited      * @param depositData Extra data for deposit (amount for ERC20, token id for ERC721 etc.) [ABI encoded]      */ [43149,43627]" dest="comment: /**      * @notice Deposit tokens into pos portal      * @dev When `depositor` deposits tokens into pos portal, tokens get locked into predicate contract.      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on side chain      * @param rootToken Token which gets deposited      * @param depositData Extra data for deposit (amount for ERC20, token id for ERC721 etc.) [ABI encoded]      */ [45588,46066]"/>
  <match src="identifier: mintBatch [6089,6098]" dest="identifier: mintBatch [6089,6098]"/>
  <match src="identifier: RLPReader [44908,44917]" dest="identifier: RLPReader [47249,47258]"/>
  <match src="call_argument [31598,31620]" dest="call_argument [31598,31620]"/>
  <match src="expression_statement [39944,39952]" dest="expression_statement [42334,42342]"/>
  <match src="identifier: RLPItem [35120,35127]" dest="identifier: RLPItem [36079,36086]"/>
  <match src="function_body [33741,33873]" dest="function_body [33741,33873]"/>
  <match src="return_statement [24223,24288]" dest="return_statement [24223,24288]"/>
  <match src="call_argument [51560,51567]" dest="call_argument [54147,54154]"/>
  <match src="variable_declaration [49812,49846]" dest="variable_declaration [52165,52199]"/>
  <match src="number_literal: 0 [39607,39608]" dest="number_literal: 0 [42094,42095]"/>
  <match src="identifier: returndata_size [25067,25082]" dest="identifier: returndata_size [25067,25082]"/>
  <match src="(: ( [33825,33826]" dest="(: ( [33825,33826]"/>
  <match src="uint256: uint256 [8551,8558]" dest="uint256: uint256 [8551,8558]"/>
  <match src="yul_variable_declaration [40683,40744]" dest="yul_variable_declaration [43102,43163]"/>
  <match src="pure: pure [37054,37058]" dest="pure: pure [40493,40497]"/>
  <match src="address: address [1635,1642]" dest="address: address [1635,1642]"/>
  <match src="identifier: errorMessage [24402,24414]" dest="identifier: errorMessage [24402,24414]"/>
  <match src="yul_function_call [42391,42415]" dest="yul_function_call [44768,44792]"/>
  <match src="struct_member [15796,15807]" dest="struct_member [15796,15807]"/>
  <match src="identifier: returndata [25092,25102]" dest="identifier: returndata [25092,25102]"/>
  <match src="call_expression [39020,39034]" dest="call_expression [41667,41681]"/>
  <match src="^:  ^ [112,114]" dest="^:  ^ [112,114]"/>
  <match src="): ) [30691,30692]" dest="): ) [30691,30692]"/>
  <match src=",: , [53104,53105]" dest=",: , [55122,55123]"/>
  <match src="emit: emit [33609,33613]" dest="emit: emit [33609,33613]"/>
  <match src="else: else [40862,40866]" dest="else: else [43292,43296]"/>
  <match src="boolean_literal [12992,12996]" dest="boolean_literal [12992,12996]"/>
  <match src="type_name [4200,4207]" dest="type_name [4200,4207]"/>
  <match src="(: ( [16435,16436]" dest="(: ( [16435,16436]"/>
  <match src="(: ( [33504,33505]" dest="(: ( [33504,33505]"/>
  <match src="visibility [2952,2960]" dest="visibility [2952,2960]"/>
  <match src="visibility [33334,33342]" dest="visibility [33334,33342]"/>
  <match src="identifier: size [48863,48867]" dest="identifier: size [51204,51208]"/>
  <match src="false: false [14756,14761]" dest="false: false [14756,14761]"/>
  <match src="identifier: mintBatch [52892,52901]" dest="identifier: mintBatch [55334,55343]"/>
  <match src=".: . [38779,38780]" dest=".: . [38710,38711]"/>
  <match src="binary_expression [42228,42236]" dest="binary_expression [44605,44613]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [937,968]" dest="comment: // SPDX-License-Identifier: MIT [937,968]"/>
  <match src="type_name [23563,23570]" dest="type_name [23563,23570]"/>
  <match src="external: external [3323,3331]" dest="external: external [3323,3331]"/>
  <match src="assignment_expression [10417,10457]" dest="assignment_expression [10417,10457]"/>
  <match src="call_expression [35554,35603]" dest="call_expression [37550,37571]"/>
  <match src="contract_body [27784,33876]" dest="contract_body [27784,33876]"/>
  <match src="user_defined_type [16005,16015]" dest="user_defined_type [16005,16015]"/>
  <match src="binary_expression [52566,52630]" dest="binary_expression [54757,54793]"/>
  <match src="assembly_statement [40176,40242]" dest="assembly_statement [42554,42620]"/>
  <match src="call_argument [38806,38828]" dest="call_argument [39926,39939]"/>
  <match src=":=: := [39105,39107]" dest=":=: := [41749,41751]"/>
  <match src="identifier: grantRole [31042,31051]" dest="identifier: grantRole [31042,31051]"/>
  <match src="pragma_directive [25376,25399]" dest="pragma_directive [25376,25399]"/>
  <match src="(: ( [18506,18507]" dest="(: ( [18506,18507]"/>
  <match src="}: } [25274,25275]" dest="}: } [25274,25275]"/>
  <match src="function_body [26016,26052]" dest="function_body [26016,26052]"/>
  <match src="identifier: exitTokens [50744,50754]" dest="identifier: exitTokens [53329,53339]"/>
  <match src="identifier: byte0 [41906,41911]" dest="identifier: byte0 [44330,44335]"/>
  <match src="bytes32: bytes32 [32264,32271]" dest="bytes32: bytes32 [32264,32271]"/>
  <match src="parameter [7386,7405]" dest="parameter [7386,7405]"/>
  <match src="]: ] [50251,50252]" dest="]: ] [52664,52665]"/>
  <match src="&quot;: &quot; [24486,24487]" dest="&quot;: &quot; [24486,24487]"/>
  <match src=",: , [34163,34164]" dest=",: , [34163,34164]"/>
  <match src="identifier: toBeMintedAmounts [49829,49846]" dest="identifier: toBeMintedAmounts [52182,52199]"/>
  <match src="private: private [24416,24423]" dest="private: private [24416,24423]"/>
  <match src="call_argument [35697,35702]" dest="call_argument [37662,37667]"/>
  <match src="&gt;: &gt; [48868,48869]" dest="&gt;: &gt; [51209,51210]"/>
  <match src="visibility [36715,36723]" dest="visibility [39459,39467]"/>
  <match src="primitive_type [3569,3573]" dest="primitive_type [3569,3573]"/>
  <match src="call_argument [50856,50868]" dest="call_argument [53441,53453]"/>
  <match src="parameter [7448,7454]" dest="parameter [7448,7454]"/>
  <match src="(: ( [32428,32429]" dest="(: ( [32428,32429]"/>
  <match src="function_body [39405,39995]" dest="function_body [42030,42385]"/>
  <match src="interface: interface [1173,1182]" dest="interface: interface [1173,1182]"/>
  <match src="comment: // Look for revert reason and bubble it up if present [24758,24811]" dest="comment: // Look for revert reason and bubble it up if present [24758,24811]"/>
  <match src="{: { [16632,16633]" dest="{: { [16632,16633]"/>
  <match src="(: ( [31237,31238]" dest="(: ( [31237,31238]"/>
  <match src="return: return [15705,15711]" dest="return: return [15705,15711]"/>
  <match src="(: ( [35448,35449]" dest="(: ( [37476,37477]"/>
  <match src="call_argument [24664,24668]" dest="call_argument [24664,24668]"/>
  <match src="identifier: approved [3313,3321]" dest="identifier: approved [3313,3321]"/>
  <match src="primitive_type [45236,45243]" dest="primitive_type [47577,47584]"/>
  <match src=",: , [53411,53412]" dest=",: , [55680,55681]"/>
  <match src="user_defined_type [28003,28011]" dest="user_defined_type [28003,28011]"/>
  <match src="yul_evm_builtin [42690,42693]" dest="yul_evm_builtin [45106,45109]"/>
  <match src="function_body [47971,48271]" dest="function_body [50312,50612]"/>
  <match src="(: ( [48608,48609]" dest="(: ( [50949,50950]"/>
  <match src="identifier: i [35983,35984]" dest="identifier: i [37798,37799]"/>
  <match src="expression_statement [24131,24213]" dest="expression_statement [24131,24213]"/>
  <match src="identifier: amountsToBeExited [49694,49711]" dest="identifier: amountsToBeExited [52047,52064]"/>
  <match src="identifier: value [14682,14687]" dest="identifier: value [14682,14687]"/>
  <match src="(: ( [26077,26078]" dest="(: ( [26077,26078]"/>
  <match src="identifier: memPtr [40570,40576]" dest="identifier: memPtr [42973,42979]"/>
  <match src="): ) [17390,17391]" dest="): ) [17390,17391]"/>
  <match src="parameter [24010,24024]" dest="parameter [24010,24024]"/>
  <match src="identifier: len [35797,35800]" dest="identifier: len [40738,40741]"/>
  <match src=",: , [41244,41245]" dest=",: , [43686,43687]"/>
  <match src="binary_expression [39789,39819]" dest="binary_expression [42269,42299]"/>
  <match src="]: ] [48221,48222]" dest="]: ] [50562,50563]"/>
  <match src="block_statement [40967,41288]" dest="block_statement [43409,43730]"/>
  <match src="(: ( [51807,51808]" dest="(: ( [54325,54326]"/>
  <match src="]: ] [12948,12949]" dest="]: ] [12948,12949]"/>
  <match src="identifier: this [53099,53103]" dest="identifier: this [55117,55121]"/>
  <match src="(: ( [20378,20379]" dest="(: ( [20378,20379]"/>
  <match src="comment: /**      * @dev Returns `true` if `account` has been granted `role`.      */ [29207,29285]" dest="comment: /**      * @dev Returns `true` if `account` has been granted `role`.      */ [29207,29285]"/>
  <match src="}: } [26292,26293]" dest="}: } [26292,26293]"/>
  <match src="&quot;: &quot; [49733,49734]" dest="&quot;: &quot; [52086,52087]"/>
  <match src="assembly_statement [39073,39136]" dest="assembly_statement [41717,41780]"/>
  <match src="(: ( [24476,24477]" dest="(: ( [24476,24477]"/>
  <match src="string [53520,53568]" dest="string [55817,55865]"/>
  <match src="identifier: balanceOfBatch [53029,53043]" dest="identifier: balanceOfBatch [55073,55087]"/>
  <match src="binary_expression [13863,13877]" dest="binary_expression [13863,13877]"/>
  <match src="memory: memory [24439,24445]" dest="memory: memory [24439,24445]"/>
  <match src="yul_assignment [35271,35296]" dest="yul_assignment [36152,36177]"/>
  <match src="): ) [20358,20359]" dest="): ) [20358,20359]"/>
  <match src="yul_function_call [42690,42716]" dest="yul_function_call [45106,45132]"/>
  <match src="call_argument [38300,38322]" dest="call_argument [41561,41573]"/>
  <match src="private: private [13285,13292]" dest="private: private [13285,13292]"/>
  <match src="call_argument [37414,37418]" dest="call_argument [37347,37351]"/>
  <match src="primitive_type [21384,21399]" dest="primitive_type [21384,21399]"/>
  <match src="return_type_definition [40097,40114]" dest="return_type_definition [42484,42498]"/>
  <match src="member_expression [51132,51157]" dest="member_expression [53717,53742]"/>
  <match src="{: { [24447,24448]" dest="{: { [24447,24448]"/>
  <match src="(: ( [30453,30454]" dest="(: ( [30453,30454]"/>
  <match src="identifier: Set [13253,13256]" dest="identifier: Set [13253,13256]"/>
  <match src=",: , [43742,43743]" dest=",: , [46181,46182]"/>
  <match src="address: address [53347,53354]" dest="address: address [55608,55615]"/>
  <match src="return_type_definition [48678,48704]" dest="return_type_definition [51019,51045]"/>
  <match src="{: { [11756,11757]" dest="{: { [11756,11757]"/>
  <match src="identifier: sender [29191,29197]" dest="identifier: sender [29191,29197]"/>
  <match src="function: function [31033,31041]" dest="function: function [31033,31041]"/>
  <match src="): ) [24445,24446]" dest="): ) [24445,24446]"/>
  <match src="return_statement [36544,36556]" dest="return_statement [38414,38426]"/>
  <match src="type_name [1407,1414]" dest="type_name [1407,1414]"/>
  <match src="comment: /**      * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to      * `approved`.      */ [1744,1894]" dest="comment: /**      * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to      * `approved`.      */ [1744,1894]"/>
  <match src="identifier: LockedBatchMintableERC1155 [45389,45415]" dest="identifier: LockedBatchMintableERC1155 [47730,47756]"/>
  <match src="primitive_type [35857,35864]" dest="primitive_type [42106,42110]"/>
  <match src=",: , [4210,4211]" dest=",: , [4210,4211]"/>
  <match src="identifier: _roles [31598,31604]" dest="identifier: _roles [31598,31604]"/>
  <match src="bytes32: bytes32 [14902,14909]" dest="bytes32: bytes32 [14902,14909]"/>
  <match src=",: , [7307,7308]" dest=",: , [7307,7308]"/>
  <match src="primitive_type [21455,21462]" dest="primitive_type [21455,21462]"/>
  <match src="yul_path [25092,25102]" dest="yul_path [25092,25102]"/>
  <match src="address: address [49001,49008]" dest="address: address [51342,51349]"/>
  <match src="): ) [25150,25151]" dest="): ) [25150,25151]"/>
  <match src="): ) [14915,14916]" dest="): ) [14915,14916]"/>
  <match src="=: = [40919,40920]" dest="=: = [43349,43350]"/>
  <match src="(: ( [7447,7448]" dest="(: ( [7447,7448]"/>
  <match src="identifier: depositData [43768,43779]" dest="identifier: depositData [46207,46218]"/>
  <match src="constant: constant [45034,45042]" dest="constant: constant [47375,47383]"/>
  <match src="[: [ [6142,6143]" dest="[: [ [6142,6143]"/>
  <match src="pragma_directive [4888,4910]" dest="pragma_directive [4888,4910]"/>
  <match src="(: ( [24138,24139]" dest="(: ( [24138,24139]"/>
  <match src="type_cast_expression [16111,16125]" dest="type_cast_expression [16111,16125]"/>
  <match src="user_defined_type [44801,44816]" dest="user_defined_type [47142,47157]"/>
  <match src="comment: // and use 0 as a sentinel value [12884,12916]" dest="comment: // and use 0 as a sentinel value [12884,12916]"/>
  <match src="number_literal: 0 [14986,14987]" dest="number_literal: 0 [14986,14987]"/>
  <match src="block_statement [40443,40861]" dest="block_statement [42846,43280]"/>
  <match src="yul_path [36437,36442]" dest="yul_path [38294,38299]"/>
  <match src="inheritance_specifier [44801,44816]" dest="inheritance_specifier [47142,47157]"/>
  <match src="identifier: len [39030,39033]" dest="identifier: len [41677,41680]"/>
  <match src="identifier: byte0 [40505,40510]" dest="identifier: byte0 [42908,42913]"/>
  <match src="(: ( [16118,16119]" dest="(: ( [16118,16119]"/>
  <match src="primitive_type [1703,1710]" dest="primitive_type [1703,1710]"/>
  <match src="uint256: uint256 [50148,50155]" dest="uint256: uint256 [52561,52568]"/>
  <match src="}: } [30770,30771]" dest="}: } [30770,30771]"/>
  <match src="number_literal: 256 [42614,42617]" dest="number_literal: 256 [45020,45023]"/>
  <match src="}: } [20429,20430]" dest="}: } [20429,20430]"/>
  <match src="state_mutability [15587,15591]" dest="state_mutability [15587,15591]"/>
  <match src="): ) [18317,18318]" dest="): ) [18317,18318]"/>
  <match src="expression_statement [10417,10458]" dest="expression_statement [10417,10458]"/>
  <match src="calldata: calldata [6145,6153]" dest="calldata: calldata [6145,6153]"/>
  <match src="type_name [51769,51776]" dest="type_name [54292,54299]"/>
  <match src="(: ( [33383,33384]" dest="(: ( [33383,33384]"/>
  <match src="primitive_type [45997,46004]" dest="primitive_type [48338,48345]"/>
  <match src="type_name [29128,29135]" dest="type_name [29128,29135]"/>
  <match src="private: private [40084,40091]" dest="private: private [42471,42478]"/>
  <match src="identifier: msg [26277,26280]" dest="identifier: msg [26277,26280]"/>
  <match src="): ) [47289,47290]" dest="): ) [49630,49631]"/>
  <match src="[: [ [10437,10438]" dest="[: [ [10437,10438]"/>
  <match src="state_mutability [48664,48668]" dest="state_mutability [51005,51009]"/>
  <match src="=: = [37817,37818]" dest="=: = [37068,37069]"/>
  <match src="&lt;: &lt; [41641,41642]" dest="&lt;: &lt; [44074,44075]"/>
  <match src="array_access [10417,10450]" dest="array_access [10417,10450]"/>
  <match src="or: or [42833,42835]" dest="or: or [45257,45259]"/>
  <match src="): ) [45788,45789]" dest="): ) [48129,48130]"/>
  <match src="): ) [31554,31555]" dest="): ) [31554,31555]"/>
  <match src="call_argument [53462,53464]" dest="call_argument [55740,55742]"/>
  <match src="{: { [36775,36776]" dest="{: { [39496,39497]"/>
  <match src="event_paramater [1439,1452]" dest="event_paramater [1439,1452]"/>
  <match src="parameter [46861,46884]" dest="parameter [49202,49225]"/>
  <match src="call_argument [16688,16693]" dest="call_argument [16688,16693]"/>
  <match src="call_expression [31227,31252]" dest="call_expression [31227,31252]"/>
  <match src="if: if [37972,37974]" dest="if: if [40981,40983]"/>
  <match src=",: , [28477,28478]" dest=",: , [28477,28478]"/>
  <match src="bytes32: bytes32 [27950,27957]" dest="bytes32: bytes32 [27950,27957]"/>
  <match src="parameter [33054,33066]" dest="parameter [33054,33066]"/>
  <match src="state_variable_declaration [44948,45013]" dest="state_variable_declaration [47289,47354]"/>
  <match src=",: , [53117,53118]" dest=",: , [55135,55136]"/>
  <match src="identifier: rootToken [47404,47413]" dest="identifier: rootToken [49745,49754]"/>
  <match src="(: ( [36755,36756]" dest="(: ( [39481,39482]"/>
  <match src="memory: memory [37032,37038]" dest="memory: memory [40471,40477]"/>
  <match src="): ) [53169,53170]" dest="): ) [55140,55141]"/>
  <match src="call_expression [33113,33138]" dest="call_expression [33113,33138]"/>
  <match src="primitive_type [29150,29157]" dest="primitive_type [29150,29157]"/>
  <match src="&lt;: &lt; [40423,40424]" dest="&lt;: &lt; [42826,42827]"/>
  <match src=",: , [4198,4199]" dest=",: , [4198,4199]"/>
  <match src="identifier: only [46975,46979]" dest="identifier: only [49316,49320]"/>
  <match src="(: ( [24591,24592]" dest="(: ( [24591,24592]"/>
  <match src="type_name [46242,46249]" dest="type_name [48583,48590]"/>
  <match src="number_literal: 0 [10862,10863]" dest="number_literal: 0 [10862,10863]"/>
  <match src="identifier: _revertMsg [34116,34126]" dest="identifier: _revertMsg [34116,34126]"/>
  <match src="type_name [38489,38496]" dest="type_name [41306,41310]"/>
  <match src="]: ] [49820,49821]" dest="]: ] [52173,52174]"/>
  <match src="primitive_type [4741,4748]" dest="primitive_type [4741,4748]"/>
  <match src="type_name [15098,15101]" dest="type_name [15098,15101]"/>
  <match src="primitive_type [1683,1690]" dest="primitive_type [1683,1690]"/>
  <match src="(: ( [40222,40223]" dest="(: ( [42600,42601]"/>
  <match src="if: if [41767,41769]" dest="if: if [44190,44192]"/>
  <match src="): ) [35295,35296]" dest="): ) [36176,36177]"/>
  <match src="call_argument [51823,51825]" dest="call_argument [54341,54343]"/>
  <match src="identifier: interfaceId [10299,10310]" dest="identifier: interfaceId [10299,10310]"/>
  <match src="parameter [32264,32276]" dest="parameter [32264,32276]"/>
  <match src="state_mutability [15123,15127]" dest="state_mutability [15123,15127]"/>
  <match src="yul_function_call [37975,37986]" dest="yul_function_call [40984,40995]"/>
  <match src="contract: contract [44737,44745]" dest="contract: contract [47078,47086]"/>
  <match src="identifier: operator [1375,1383]" dest="identifier: operator [1375,1383]"/>
  <match src="type_name [44948,44955]" dest="type_name [47289,47296]"/>
  <match src="): ) [46992,46993]" dest="): ) [49333,49334]"/>
  <match src="call_argument [12746,12751]" dest="call_argument [12746,12751]"/>
  <match src="call_argument [31125,31147]" dest="call_argument [31125,31147]"/>
  <match src="visibility [35079,35087]" dest="visibility [36056,36064]"/>
  <match src="): ) [52325,52326]" dest="): ) [54454,54455]"/>
  <match src="state_variable_declaration [34012,34038]" dest="state_variable_declaration [34012,34038]"/>
  <match src="constructor: constructor [45597,45608]" dest="constructor: constructor [47938,47949]"/>
  <match src="member_expression [33390,33412]" dest="member_expression [33390,33412]"/>
  <match src="virtual: virtual [25982,25989]" dest="virtual: virtual [25982,25989]"/>
  <match src="identifier: DEFAULT_ADMIN_ROLE [45762,45780]" dest="identifier: DEFAULT_ADMIN_ROLE [48103,48121]"/>
  <match src="identifier: value [18002,18007]" dest="identifier: value [18002,18007]"/>
  <match src="public: public [31556,31562]" dest="public: public [31556,31562]"/>
  <match src="(: ( [51206,51207]" dest="(: ( [53791,53792]"/>
  <match src=".: . [38535,38536]" dest=".: . [41346,41347]"/>
  <match src="(: ( [45296,45297]" dest="(: ( [47637,47638]"/>
  <match src=",: , [24169,24170]" dest=",: , [24169,24170]"/>
  <match src="]: ] [48695,48696]" dest="]: ] [51036,51037]"/>
  <match src="pragma_directive [6306,6329]" dest="pragma_directive [6306,6329]"/>
  <match src="event: event [28399,28404]" dest="event: event [28399,28404]"/>
  <match src="type_name [51501,51508]" dest="type_name [54088,54095]"/>
  <match src="primitive_type [45462,45469]" dest="primitive_type [47803,47810]"/>
  <match src="pragma: pragma [97,103]" dest="pragma: pragma [97,103]"/>
  <match src="function_definition [17650,17781]" dest="function_definition [17650,17781]"/>
  <match src="yul_identifier [37890,37896]" dest="yul_identifier [40899,40905]"/>
  <match src="(: ( [18310,18311]" dest="(: ( [18310,18311]"/>
  <match src="(: ( [41677,41678]" dest="(: ( [44097,44098]"/>
  <match src="mapping: mapping [12423,12430]" dest="mapping: mapping [12423,12430]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [62,93]" dest="comment: // SPDX-License-Identifier: MIT [62,93]"/>
  <match src="virtual: virtual [33094,33101]" dest="virtual: virtual [33094,33101]"/>
  <match src="function_body [44543,44632]" dest="function_body [46982,47071]"/>
  <match src="address: address [48609,48616]" dest="address: address [50950,50957]"/>
  <match src="uint256: uint256 [8584,8591]" dest="uint256: uint256 [8584,8591]"/>
  <match src="yul_assignment [40200,40231]" dest="yul_assignment [42578,42609]"/>
  <match src="binary_expression [13912,13934]" dest="binary_expression [13912,13934]"/>
  <match src="function_body [33351,33477]" dest="function_body [33351,33477]"/>
  <match src="string [52512,52514]" dest="string [54698,54700]"/>
  <match src="array_access [50296,50335]" dest="array_access [52709,52748]"/>
  <match src="(: ( [31589,31590]" dest="(: ( [31589,31590]"/>
  <match src="identifier: Initializable [44471,44484]" dest="identifier: Initializable [46910,46923]"/>
  <match src="parameter [26111,26123]" dest="parameter [26111,26123]"/>
  <match src="yul_identifier [41107,41114]" dest="yul_identifier [43549,43556]"/>
  <match src="array_access [51132,51150]" dest="array_access [53717,53735]"/>
  <match src="): ) [44371,44372]" dest="): ) [46810,46811]"/>
  <match src="{: { [29676,29677]" dest="{: { [29676,29677]"/>
  <match src=",: , [7351,7352]" dest=",: , [7351,7352]"/>
  <match src="return: return [36147,36153]" dest="return: return [37963,37969]"/>
  <match src="state_mutability [39382,39386]" dest="state_mutability [42010,42014]"/>
  <match src="{: { [24743,24744]" dest="{: { [24743,24744]"/>
  <match src="identifier: i [50156,50157]" dest="identifier: i [52569,52570]"/>
  <match src="public: public [28044,28050]" dest="public: public [28044,28050]"/>
  <match src="identifier: amounts [47446,47453]" dest="identifier: amounts [49787,49794]"/>
  <match src="type_name [23029,23034]" dest="type_name [23029,23034]"/>
  <match src="parameter [38673,38692]" dest="parameter [41484,41503]"/>
  <match src="call_argument [47428,47431]" dest="call_argument [49769,49772]"/>
  <match src="parameter [31525,31537]" dest="parameter [31525,31537]"/>
  <match src="(: ( [35777,35778]" dest="(: ( [40732,40733]"/>
  <match src="identifier: RLPItem [38673,38680]" dest="identifier: RLPItem [41484,41491]"/>
  <match src="primitive_type [24139,24146]" dest="primitive_type [24139,24146]"/>
  <match src="primitive_type [38236,38243]" dest="primitive_type [39973,39977]"/>
  <match src="identifier: target [23536,23542]" dest="identifier: target [23536,23542]"/>
  <match src=".: . [15167,15168]" dest=".: . [15167,15168]"/>
  <match src="identifier: data [22649,22653]" dest="identifier: data [22649,22653]"/>
  <match src="memory: memory [34077,34083]" dest="memory: memory [34077,34083]"/>
  <match src="state_mutability [30389,30393]" dest="state_mutability [30389,30393]"/>
  <match src="}: } [46098,46099]" dest="}: } [48439,48440]"/>
  <match src="type_name [13892,13899]" dest="type_name [13892,13899]"/>
  <match src="identifier: i [48220,48221]" dest="identifier: i [50561,50562]"/>
  <match src="pragma_directive [97,120]" dest="pragma_directive [97,120]"/>
  <match src="yul_path [35271,35277]" dest="yul_path [36152,36158]"/>
  <match src="): ) [18031,18032]" dest="): ) [18031,18032]"/>
  <match src="type_name [3528,3535]" dest="type_name [3528,3535]"/>
  <match src="parameter [5470,5484]" dest="parameter [5470,5484]"/>
  <match src="(: ( [860,861]" dest="(: ( [860,861]"/>
  <match src="]: ] [48976,48977]" dest="]: ] [51317,51318]"/>
  <match src="identifier: logData [51560,51567]" dest="identifier: logData [54147,54154]"/>
  <match src="): ) [33731,33732]" dest="): ) [33731,33732]"/>
  <match src="): ) [51417,51418]" dest="): ) [54017,54018]"/>
  <match src="): ) [36082,36083]" dest="): ) [37897,37898]"/>
  <match src="): ) [34297,34298]" dest="): ) [34297,34298]"/>
  <match src="assembly: assembly [20316,20324]" dest="assembly: assembly [20316,20324]"/>
  <match src="comment: // enforces 32 byte length [38118,38144]" dest="comment: // enforces 32 byte length [41127,41153]"/>
  <match src=",: , [52744,52745]" dest=",: , [54897,54898]"/>
  <match src="type_name [35616,35623]" dest="type_name [55157,55164]"/>
  <match src="(: ( [47117,47118]" dest="(: ( [49458,49459]"/>
  <match src="primitive_type [7386,7391]" dest="primitive_type [7386,7391]"/>
  <match src="yul_evm_builtin [36446,36450]" dest="yul_evm_builtin [38303,38307]"/>
  <match src="]: ] [46250,46251]" dest="]: ] [48591,48592]"/>
  <match src="calldata: calldata [8594,8602]" dest="calldata: calldata [8594,8602]"/>
  <match src="bytes32: bytes32 [20160,20167]" dest="bytes32: bytes32 [20160,20167]"/>
  <match src="(: ( [42125,42126]" dest="(: ( [44545,44546]"/>
  <match src="return_type_definition [15592,15609]" dest="return_type_definition [15592,15609]"/>
  <match src="(: ( [3568,3569]" dest="(: ( [3568,3569]"/>
  <match src="parameter [18257,18261]" dest="parameter [18257,18261]"/>
  <match src="return_type_definition [30394,30411]" dest="return_type_definition [30394,30411]"/>
  <match src="address: address [1921,1928]" dest="address: address [1921,1928]"/>
  <match src="returns: returns [13293,13300]" dest="returns: returns [13293,13300]"/>
  <match src="yul_identifier [42846,42853]" dest="yul_identifier [45270,45277]"/>
  <match src="modifier_invocation [46975,46993]" dest="modifier_invocation [49316,49334]"/>
  <match src="identifier: role [33384,33388]" dest="identifier: role [33384,33388]"/>
  <match src="identifier: _grantRole [33113,33123]" dest="identifier: _grantRole [33113,33123]"/>
  <match src="identifier: amounts [6154,6161]" dest="identifier: amounts [6154,6161]"/>
  <match src="(: ( [16004,16005]" dest="(: ( [16004,16005]"/>
  <match src="call_argument [37296,37300]" dest="call_argument [40626,40630]"/>
  <match src="string_literal [10375,10405]" dest="string_literal [10375,10405]"/>
  <match src="{: { [13308,13309]" dest="{: { [13308,13309]"/>
  <match src="type_cast_expression [17360,17391]" dest="type_cast_expression [17360,17391]"/>
  <match src="identifier: amounts [52697,52704]" dest="identifier: amounts [54850,54857]"/>
  <match src="identifier: i [48195,48196]" dest="identifier: i [50536,50537]"/>
  <match src="yul_identifier [42679,42686]" dest="yul_identifier [45095,45102]"/>
  <match src="visibility [4814,4822]" dest="visibility [4814,4822]"/>
  <match src="(: ( [52321,52322]" dest="(: ( [54450,54451]"/>
  <match src="member_expression [50167,50187]" dest="member_expression [52580,52600]"/>
  <match src="type_name [40106,40113]" dest="type_name [42493,42497]"/>
  <match src="parameter [50783,50800]" dest="parameter [53368,53385]"/>
  <match src="indexed: indexed [1691,1698]" dest="indexed: indexed [1691,1698]"/>
  <match src="return: return [20371,20377]" dest="return: return [20371,20377]"/>
  <match src="primitive_type [36786,36791]" dest="primitive_type [39507,39512]"/>
  <match src="solidity_version_comparison_operator [987,989]" dest="solidity_version_comparison_operator [987,989]"/>
  <match src="call_argument [17360,17391]" dest="call_argument [17360,17391]"/>
  <match src="&gt;: &gt; [48009,48010]" dest="&gt;: &gt; [50350,50351]"/>
  <match src="identifier: RLPItem [35520,35527]" dest="identifier: RLPItem [37521,37528]"/>
  <match src="bool: bool [21612,21616]" dest="bool: bool [21612,21616]"/>
  <match src="primitive_type [34225,34232]" dest="primitive_type [34225,34232]"/>
  <match src="address: address [43725,43732]" dest="address: address [46164,46171]"/>
  <match src="identifier: interfaceId [10348,10359]" dest="identifier: interfaceId [10348,10359]"/>
  <match src="(: ( [45415,45416]" dest="(: ( [47756,47757]"/>
  <match src="): ) [28813,28814]" dest="): ) [28813,28814]"/>
  <match src="): ) [17697,17698]" dest="): ) [17697,17698]"/>
  <match src="primitive_type [18303,18310]" dest="primitive_type [18303,18310]"/>
  <match src="): ) [41260,41261]" dest="): ) [43702,43703]"/>
  <match src="=: = [44504,44505]" dest="=: = [46943,46944]"/>
  <match src="type_name [17717,17721]" dest="type_name [17717,17721]"/>
  <match src="call_argument [34153,34163]" dest="call_argument [34153,34163]"/>
  <match src="function: function [21365,21373]" dest="function: function [21365,21373]"/>
  <match src="primitive_type [38884,38891]" dest="primitive_type [37004,37008]"/>
  <match src="member_expression [31125,31147]" dest="member_expression [31125,31147]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [26361,26392]" dest="comment: // SPDX-License-Identifier: MIT [26361,26392]"/>
  <match src="+: + [41880,41881]" dest="+: + [44291,44292]"/>
  <match src="yul_path [38581,38587]" dest="yul_path [41392,41398]"/>
  <match src=",: , [24272,24273]" dest=",: , [24272,24273]"/>
  <match src=",: , [23669,23670]" dest=",: , [23669,23670]"/>
  <match src="(: ( [12708,12709]" dest="(: ( [12708,12709]"/>
  <match src="(: ( [17324,17325]" dest="(: ( [17324,17325]"/>
  <match src="parameter [40068,40082]" dest="parameter [42458,42469]"/>
  <match src="^:  ^ [19118,19120]" dest="^:  ^ [19118,19120]"/>
  <match src=":=: := [42687,42689]" dest=":=: := [45103,45105]"/>
  <match src="number_literal: 1 [41877,41878]" dest="number_literal: 1 [44288,44289]"/>
  <match src="number_literal: 1 [13933,13934]" dest="number_literal: 1 [13933,13934]"/>
  <match src="}: } [10464,10465]" dest="}: } [10464,10465]"/>
  <match src="{: { [37077,37078]" dest="{: { [40516,40517]"/>
  <match src="string [24486,24517]" dest="string [24486,24517]"/>
  <match src="pragma: pragma [42943,42949]" dest="pragma: pragma [45382,45388]"/>
  <match src="visibility [19848,19856]" dest="visibility [19848,19856]"/>
  <match src="identifier: contains [16555,16563]" dest="identifier: contains [16555,16563]"/>
  <match src="identifier: value [1447,1452]" dest="identifier: value [1447,1452]"/>
  <match src="comment: /**      * @dev Revokes `role` from `account`.      *      * If `account` had been granted `role`, emits a {RoleRevoked} event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [31268,31499]" dest="comment: /**      * @dev Revokes `role` from `account`.      *      * If `account` had been granted `role`, emits a {RoleRevoked} event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [31268,31499]"/>
  <match src="type_name [2360,2366]" dest="type_name [2360,2366]"/>
  <match src=".: . [49711,49712]" dest=".: . [52064,52065]"/>
  <match src="yul_path [42398,42402]" dest="yul_path [44775,44779]"/>
  <match src="user_defined_type [35520,35527]" dest="user_defined_type [37521,37528]"/>
  <match src="variable_declaration_statement [51636,51689]" dest="variable_declaration_statement [54223,54276]"/>
  <match src="bytes: bytes [35051,35056]" dest="bytes: bytes [36037,36042]"/>
  <match src="): ) [51022,51023]" dest="): ) [53607,53608]"/>
  <match src="{: { [35141,35142]" dest="{: { [36095,36096]"/>
  <match src="{: { [42213,42214]" dest="{: { [44590,44591]"/>
  <match src="identifier: functionCallWithValue [23506,23527]" dest="identifier: functionCallWithValue [23506,23527]"/>
  <match src="call_argument [45782,45788]" dest="call_argument [48123,48129]"/>
  <match src="): ) [13283,13284]" dest="): ) [13283,13284]"/>
  <match src="}: } [40860,40861]" dest="}: } [43279,43280]"/>
  <match src="identifier: pop [14586,14589]" dest="identifier: pop [14586,14589]"/>
  <match src="uint256: uint256 [52775,52782]" dest="uint256: uint256 [54928,54935]"/>
  <match src="+: + [41936,41937]" dest="+: + [44360,44361]"/>
  <match src="return_type_definition [46055,46071]" dest="return_type_definition [48396,48412]"/>
  <match src="[: [ [47280,47281]" dest="[: [ [49621,49622]"/>
  <match src="expression_statement [36003,36033]" dest="expression_statement [37818,37848]"/>
  <match src="comment: // one byte prefix [38384,38402]" dest="comment: // one byte prefix [41242,41260]"/>
  <match src="): ) [36310,36311]" dest="): ) [38126,38127]"/>
  <match src="return: return [17345,17351]" dest="return: return [17345,17351]"/>
  <match src="member_expression [14574,14585]" dest="member_expression [14574,14585]"/>
  <match src="function: function [35032,35040]" dest="function: function [36018,36026]"/>
  <match src="identifier: require [34250,34257]" dest="identifier: require [34250,34257]"/>
  <match src="): ) [47463,47464]" dest="): ) [49804,49805]"/>
  <match src="primitive_type [47563,47570]" dest="primitive_type [49904,49911]"/>
  <match src="): ) [16042,16043]" dest="): ) [16042,16043]"/>
  <match src="uint256: uint256 [49554,49561]" dest="uint256: uint256 [51895,51902]"/>
  <match src="block_statement [39764,39963]" dest="block_statement [42245,42353]"/>
  <match src="string [45713,45739]" dest="string [48054,48080]"/>
  <match src="address: address [50783,50790]" dest="address: address [53368,53375]"/>
  <match src="call_argument [44997,45011]" dest="call_argument [47338,47352]"/>
  <match src="new_expression [48133,48146]" dest="new_expression [50474,50487]"/>
  <match src=",: , [1425,1426]" dest=",: , [1425,1426]"/>
  <match src="string [44571,44587]" dest="string [47010,47026]"/>
  <match src="identifier: item [35064,35068]" dest="identifier: item [36050,36054]"/>
  <match src="]: ] [50974,50975]" dest="]: ] [53559,53560]"/>
  <match src="yul_path [38020,38026]" dest="yul_path [41029,41035]"/>
  <match src="add: add [35281,35284]" dest="add: add [36162,36165]"/>
  <match src="identifier: _inner [15800,15806]" dest="identifier: _inner [15800,15806]"/>
  <match src="function_definition [2587,2667]" dest="function_definition [2587,2667]"/>
  <match src="visibility [5507,5515]" dest="visibility [5507,5515]"/>
  <match src="identifier: value [16444,16449]" dest="identifier: value [16444,16449]"/>
  <match src="type_name [29322,29329]" dest="type_name [29322,29329]"/>
  <match src="}: } [36920,36921]" dest="}: } [39694,39695]"/>
  <match src="identifier: _roles [29694,29700]" dest="identifier: _roles [29694,29700]"/>
  <match src="identifier: memPtr [35908,35914]" dest="identifier: memPtr [42155,42161]"/>
  <match src="(: ( [24828,24829]" dest="(: ( [24828,24829]"/>
  <match src="array_access [52764,52773]" dest="array_access [54917,54926]"/>
  <match src="identifier: makeArrayWithAddress [48588,48608]" dest="identifier: makeArrayWithAddress [50929,50949]"/>
  <match src="identifier: ids [53408,53411]" dest="identifier: ids [55677,55680]"/>
  <match src="identifier: result [38497,38503]" dest="identifier: result [41311,41317]"/>
  <match src="primitive_type [46064,46070]" dest="primitive_type [48405,48411]"/>
  <match src="new_expression [49849,49862]" dest="new_expression [52202,52215]"/>
  <match src="}: } [41276,41277]" dest="}: } [43718,43719]"/>
  <match src="}: } [39962,39963]" dest="}: } [42352,42353]"/>
  <match src="identifier: account [19839,19846]" dest="identifier: account [19839,19846]"/>
  <match src="&quot;: &quot; [31686,31687]" dest="&quot;: &quot; [31686,31687]"/>
  <match src="parameter [16564,16586]" dest="parameter [16564,16586]"/>
  <match src="&quot;: &quot; [53567,53568]" dest="&quot;: &quot; [55864,55865]"/>
  <match src="member_expression [17746,17756]" dest="member_expression [17746,17756]"/>
  <match src="identifier: set [13265,13268]" dest="identifier: set [13265,13268]"/>
  <match src="identifier: _roles [30741,30747]" dest="identifier: _roles [30741,30747]"/>
  <match src="+: + [37831,37832]" dest="+: + [37082,37083]"/>
  <match src="): ) [38048,38049]" dest="): ) [41057,41058]"/>
  <match src="yul_evm_builtin [40209,40213]" dest="yul_evm_builtin [42587,42591]"/>
  <match src=",: , [46884,46885]" dest=",: , [49225,49226]"/>
  <match src="type_name [38172,38179]" dest="type_name [41181,41188]"/>
  <match src="(: ( [14884,14885]" dest="(: ( [14884,14885]"/>
  <match src="identifier: memPtr [36076,36082]" dest="identifier: memPtr [37891,37897]"/>
  <match src="(: ( [39152,39153]" dest="(: ( [41796,41797]"/>
  <match src="type_name [49853,49862]" dest="type_name [52206,52215]"/>
  <match src="constructor_definition [10720,10915]" dest="constructor_definition [10720,10915]"/>
  <match src="=: = [48131,48132]" dest="=: = [50472,50473]"/>
  <match src="{: { [39764,39765]" dest="{: { [42245,42246]"/>
  <match src=",: , [10373,10374]" dest=",: , [10373,10374]"/>
  <match src="string [45066,45083]" dest="string [47407,47424]"/>
  <match src="returns: returns [18018,18025]" dest="returns: returns [18018,18025]"/>
  <match src="identifier: inited [44563,44569]" dest="identifier: inited [47002,47008]"/>
  <match src="visibility [23011,23019]" dest="visibility [23011,23019]"/>
  <match src="): ) [50192,50193]" dest="): ) [52605,52606]"/>
  <match src=".: . [46393,46394]" dest=".: . [48734,48735]"/>
  <match src="identifier: _inner [18511,18517]" dest="identifier: _inner [18511,18517]"/>
  <match src="(: ( [16090,16091]" dest="(: ( [16090,16091]"/>
  <match src="bytes: bytes [53456,53461]" dest="bytes: bytes [55734,55739]"/>
  <match src="type_name [48109,48116]" dest="type_name [50450,50457]"/>
  <match src="bool: bool [9792,9796]" dest="bool: bool [9792,9796]"/>
  <match src="identifier: depositReceiver [43699,43714]" dest="identifier: depositReceiver [46138,46153]"/>
  <match src="yul_identifier [40490,40497]" dest="yul_identifier [42893,42900]"/>
  <match src="external: external [4261,4269]" dest="external: external [4261,4269]"/>
  <match src="for: for [50143,50146]" dest="for: for [52556,52559]"/>
  <match src="yul_decimal_number: 0 [40214,40215]" dest="yul_decimal_number: 0 [42592,42593]"/>
  <match src="identifier: value [24053,24058]" dest="identifier: value [24053,24058]"/>
  <match src="returns: returns [23587,23594]" dest="returns: returns [23587,23594]"/>
  <match src="if_statement [40867,41288]" dest="if_statement [43297,43730]"/>
  <match src="uint256: uint256 [16853,16860]" dest="uint256: uint256 [16853,16860]"/>
  <match src="}: } [23121,23122]" dest="}: } [23121,23122]"/>
  <match src=",: , [17756,17757]" dest=",: , [17756,17757]"/>
  <match src="identifier: item [36938,36942]" dest="identifier: item [39712,39716]"/>
  <match src="type_name [36756,36761]" dest="type_name [39482,39487]"/>
  <match src="abstract: abstract [10651,10659]" dest="abstract: abstract [10651,10659]"/>
  <match src="yul_assignment [41059,41083]" dest="yul_assignment [43501,43525]"/>
  <match src="}: } [47653,47654]" dest="}: } [49994,49995]"/>
  <match src="): ) [14943,14944]" dest="): ) [14943,14944]"/>
  <match src="assembly_statement [42363,42430]" dest="assembly_statement [44740,44807]"/>
  <match src="variable_declaration_statement [21611,21666]" dest="variable_declaration_statement [21611,21666]"/>
  <match src="comment: /* 32 byte word size */ [40642,40665]" dest="comment: /* 32 byte word size */ [43061,43084]"/>
  <match src="call_argument [23084,23090]" dest="call_argument [23084,23090]"/>
  <match src="call_argument [36938,36949]" dest="call_argument [39712,39723]"/>
  <match src="call_argument [52460,52462]" dest="call_argument [54637,54639]"/>
  <match src="type_name [1921,1928]" dest="type_name [1921,1928]"/>
  <match src="assignment_expression [12930,12970]" dest="assignment_expression [12930,12970]"/>
  <match src="address: address [27864,27871]" dest="address: address [27864,27871]"/>
  <match src="type_name [15137,15144]" dest="type_name [15137,15144]"/>
  <match src="comment: // File: @openzeppelin/contracts/access/AccessControl.sol [26300,26357]" dest="comment: // File: @openzeppelin/contracts/access/AccessControl.sol [26300,26357]"/>
  <match src="call_expression [22628,22688]" dest="call_expression [22628,22688]"/>
  <match src="call_argument [23658,23662]" dest="call_argument [23658,23662]"/>
  <match src="function_body [35141,35362]" dest="function_body [36095,36243]"/>
  <match src="bytes: bytes [24026,24031]" dest="bytes: bytes [24026,24031]"/>
  <match src="type_name [4729,4736]" dest="type_name [4729,4736]"/>
  <match src="(: ( [53461,53462]" dest="(: ( [55739,55740]"/>
  <match src="uint256: uint256 [17287,17294]" dest="uint256: uint256 [17287,17294]"/>
  <match src="using: using [27846,27851]" dest="using: using [27846,27851]"/>
  <match src="call_expression [51531,51619]" dest="call_expression [54118,54206]"/>
  <match src=",: , [44816,44817]" dest=",: , [47157,47158]"/>
  <match src="return_statement [18492,18519]" dest="return_statement [18492,18519]"/>
  <match src="}: } [34357,34358]" dest="}: } [34357,34358]"/>
  <match src="uint256: uint256 [47132,47139]" dest="uint256: uint256 [49473,49480]"/>
  <match src="): ) [1452,1453]" dest="): ) [1452,1453]"/>
  <match src="): ) [51603,51604]" dest="): ) [54190,54191]"/>
  <match src="address: address [8528,8535]" dest="address: address [8528,8535]"/>
  <match src="inheritance_specifier [27776,27783]" dest="inheritance_specifier [27776,27783]"/>
  <match src="boolean_literal [36551,36555]" dest="boolean_literal [38421,38425]"/>
  <match src="function: function [33485,33493]" dest="function: function [33485,33493]"/>
  <match src="pragma_directive [972,995]" dest="pragma_directive [972,995]"/>
  <match src="-: - [41875,41876]" dest="-: - [44286,44287]"/>
  <match src="type_cast_expression [47563,47576]" dest="type_cast_expression [49904,49917]"/>
  <match src="memory: memory [47177,47183]" dest="memory: memory [49518,49524]"/>
  <match src="): ) [35914,35915]" dest="): ) [42161,42162]"/>
  <match src="call_argument [18311,18316]" dest="call_argument [18311,18316]"/>
  <match src="parameter [4765,4791]" dest="parameter [4765,4791]"/>
  <match src="identifier: i [50189,50190]" dest="identifier: i [52602,52603]"/>
  <match src="memory: memory [48978,48984]" dest="memory: memory [51319,51325]"/>
  <match src="]: ] [47961,47962]" dest="]: ] [50302,50303]"/>
  <match src="comment: /**  * @dev Required interface of an ERC1155 compliant contract, as defined in the  * https://eips.ethereum.org/EIPS/eip-1155[EIP].  *  * _Available since v3.1._  */ [1001,1171]" dest="comment: /**  * @dev Required interface of an ERC1155 compliant contract, as defined in the  * https://eips.ethereum.org/EIPS/eip-1155[EIP].  *  * _Available since v3.1._  */ [1001,1171]"/>
  <match src=".: . [52711,52712]" dest=".: . [54864,54865]"/>
  <match src=",: , [32276,32277]" dest=",: , [32276,32277]"/>
  <match src="&quot;: &quot; [22686,22687]" dest="&quot;: &quot; [22686,22687]"/>
  <match src="type_name [50881,50900]" dest="type_name [53466,53485]"/>
  <match src="address: address [37068,37075]" dest="address: address [40507,40514]"/>
  <match src="): ) [53359,53360]" dest="): ) [55620,55621]"/>
  <match src="type_name [18198,18205]" dest="type_name [18198,18205]"/>
  <match src="update_expression [39944,39951]" dest="update_expression [42334,42341]"/>
  <match src="function_body [46072,46099]" dest="function_body [48413,48440]"/>
  <match src="state_mutability [2644,2648]" dest="state_mutability [2644,2648]"/>
  <match src="): ) [33653,33654]" dest="): ) [33653,33654]"/>
  <match src=",: , [47152,47153]" dest=",: , [49493,49494]"/>
  <match src="contract_declaration [44737,53591]" dest="contract_declaration [47078,55888]"/>
  <match src="parameter [44340,44365]" dest="parameter [46779,46804]"/>
  <match src="override: override [50842,50850]" dest="override: override [53427,53435]"/>
  <match src="identifier: len [38319,38322]" dest="identifier: len [41566,41569]"/>
  <match src="): ) [19875,19876]" dest="): ) [19875,19876]"/>
  <match src="(: ( [47570,47571]" dest="(: ( [49911,49912]"/>
  <match src="constant: constant [45251,45259]" dest="constant: constant [47592,47600]"/>
  <match src="returns: returns [2966,2973]" dest="returns: returns [2966,2973]"/>
  <match src="+=: += [42482,42484]" dest="+=: += [44859,44861]"/>
  <match src="type_name [16564,16574]" dest="type_name [16564,16574]"/>
  <match src="if: if [52548,52550]" dest="if: if [54753,54755]"/>
  <match src="yul_identifier [41222,41229]" dest="yul_identifier [43664,43671]"/>
  <match src="identifier: _msgSender [32340,32350]" dest="identifier: _msgSender [32340,32350]"/>
  <match src="comment: // topic3 is to address [51273,51296]" dest="comment: // topic3 is to address [53858,53881]"/>
  <match src="string [49733,49788]" dest="string [52086,52141]"/>
  <match src="virtual: virtual [31563,31570]" dest="virtual: virtual [31563,31570]"/>
  <match src="call_expression [31701,31727]" dest="call_expression [31701,31727]"/>
  <match src=",: , [7330,7331]" dest=",: , [7330,7331]"/>
  <match src="function: function [33034,33042]" dest="function: function [33034,33042]"/>
  <match src="identifier: initializer [45673,45684]" dest="identifier: initializer [48014,48025]"/>
  <match src="}: } [39219,39220]" dest="}: } [41849,41850]"/>
  <match src="=: = [36105,36106]" dest="=: = [37921,37922]"/>
  <match src="(: ( [18471,18472]" dest="(: ( [18471,18472]"/>
  <match src="comment: /**      * @dev Returns the admin role that controls `role`. See {grantRole} and      * {revokeRole}.      *      * To change a role's admin, use {_setRoleAdmin}.      */ [30476,30651]" dest="comment: /**      * @dev Returns the admin role that controls `role`. See {grantRole} and      * {revokeRole}.      *      * To change a role's admin, use {_setRoleAdmin}.      */ [30476,30651]"/>
  <match src="identifier: set [18291,18294]" dest="identifier: set [18291,18294]"/>
  <match src="returns: returns [36747,36754]" dest="returns: returns [39473,39480]"/>
  <match src="function: function [29604,29612]" dest="function: function [29604,29612]"/>
  <match src="identifier: amount [52119,52125]" dest="identifier: amount [54373,54379]"/>
  <match src="bytes32: bytes32 [28479,28486]" dest="bytes32: bytes32 [28479,28486]"/>
  <match src="identifier: i [50163,50164]" dest="identifier: i [52576,52577]"/>
  <match src="for_statement [35952,36135]" dest="for_statement [37770,37951]"/>
  <match src="identifier: item [39666,39670]" dest="identifier: item [37724,37728]"/>
  <match src="=: = [44618,44619]" dest="=: = [47057,47058]"/>
  <match src="function: function [39335,39343]" dest="function: function [41963,41971]"/>
  <match src="pragma_directive [19103,19126]" dest="pragma_directive [19103,19126]"/>
  <match src="(: ( [47261,47262]" dest="(: ( [49602,49603]"/>
  <match src="}: } [13059,13060]" dest="}: } [13059,13060]"/>
  <match src="}: } [42429,42430]" dest="}: } [44806,44807]"/>
  <match src="visibility [39374,39381]" dest="visibility [42002,42009]"/>
  <match src="(: ( [39665,39666]" dest="(: ( [37723,37724]"/>
  <match src="memory: memory [24612,24618]" dest="memory: memory [24612,24618]"/>
  <match src="call_expression [29694,29723]" dest="call_expression [29694,29723]"/>
  <match src="type_name [3308,3312]" dest="type_name [3308,3312]"/>
  <match src="address: address [45961,45968]" dest="address: address [48302,48309]"/>
  <match src=",: , [52487,52488]" dest=",: , [54669,54670]"/>
  <match src="(: ( [41564,41565]" dest="(: ( [43997,43998]"/>
  <match src="call_argument [36076,36082]" dest="call_argument [37891,37897]"/>
  <match src="): ) [42853,42854]" dest="): ) [45277,45278]"/>
  <match src="identifier: target [23084,23090]" dest="identifier: target [23084,23090]"/>
  <match src="): ) [37260,37261]" dest="): ) [40590,40591]"/>
  <match src="return: return [18274,18280]" dest="return: return [18274,18280]"/>
  <match src="calldata: calldata [8626,8634]" dest="calldata: calldata [8626,8634]"/>
  <match src="private: private [14917,14924]" dest="private: private [14917,14924]"/>
  <match src="[: [ [14434,14435]" dest="[: [ [14434,14435]"/>
  <match src="&quot;: &quot; [15657,15658]" dest="&quot;: &quot; [15657,15658]"/>
  <match src="expression_statement [42477,42495]" dest="expression_statement [44854,44872]"/>
  <match src="identifier: length [35339,35345]" dest="identifier: length [36220,36226]"/>
  <match src="identifier: item [35641,35645]" dest="identifier: item [37606,37610]"/>
  <match src="(: ( [12740,12741]" dest="(: ( [12740,12741]"/>
  <match src=".: . [16094,16095]" dest=".: . [16094,16095]"/>
  <match src="call_expression [44554,44588]" dest="call_expression [46993,47027]"/>
  <match src="yul_variable_declaration [25063,25103]" dest="yul_variable_declaration [25063,25103]"/>
  <match src="type_name [38941,38948]" dest="type_name [38728,38735]"/>
  <match src="string_literal [23671,23714]" dest="string_literal [23671,23714]"/>
  <match src="yul_function_call [40819,40834]" dest="yul_function_call [43238,43253]"/>
  <match src="call_argument [47563,47576]" dest="call_argument [49904,49917]"/>
  <match src="identifier: set [16416,16419]" dest="identifier: set [16416,16419]"/>
  <match src="uint256: uint256 [21411,21418]" dest="uint256: uint256 [21411,21418]"/>
  <match src="type_name [23528,23535]" dest="type_name [23528,23535]"/>
  <match src="else: else [40308,40312]" dest="else: else [42709,42713]"/>
  <match src="primitive_type [14939,14943]" dest="primitive_type [14939,14943]"/>
  <match src="block_statement [12754,13008]" dest="block_statement [12754,13008]"/>
  <match src=".: . [12963,12964]" dest=".: . [12963,12964]"/>
  <match src="]: ] [49861,49862]" dest="]: ] [52214,52215]"/>
  <match src="member_expression [15164,15182]" dest="member_expression [15164,15182]"/>
  <match src=",: , [23656,23657]" dest=",: , [23656,23657]"/>
  <match src="is: is [9016,9018]" dest="is: is [9016,9018]"/>
  <match src="primitive_type [49001,49008]" dest="primitive_type [51342,51349]"/>
  <match src="variable_declaration_statement [35857,35916]" dest="variable_declaration_statement [42106,42163]"/>
  <match src=",: , [33412,33413]" dest=",: , [33412,33413]"/>
  <match src=",: , [33313,33314]" dest=",: , [33313,33314]"/>
  <match src="(: ( [47989,47990]" dest="(: ( [50330,50331]"/>
  <match src="^:  ^ [25391,25393]" dest="^:  ^ [25391,25393]"/>
  <match src="primitive_type [34817,34822]" dest="primitive_type [34820,34825]"/>
  <match src="function: function [15992,16000]" dest="function: function [15992,16000]"/>
  <match src="(: ( [47335,47336]" dest="(: ( [49676,49677]"/>
  <match src="comment: /**  * @dev Interface of the ERC165 standard, as defined in the  * https://eips.ethereum.org/EIPS/eip-165[EIP].  *  * Implementers can declare support of contract interfaces, which can then be  * queried by others ({ERC165Checker}).  *  * For an implementation, see {ERC165}.  */ [124,411]" dest="comment: /**  * @dev Interface of the ERC165 standard, as defined in the  * https://eips.ethereum.org/EIPS/eip-165[EIP].  *  * Implementers can declare support of contract interfaces, which can then be  * queried by others ({ERC165Checker}).  *  * For an implementation, see {ERC165}.  */ [124,411]"/>
  <match src="primitive_type [24060,24066]" dest="primitive_type [24060,24066]"/>
  <match src="(: ( [17972,17973]" dest="(: ( [17972,17973]"/>
  <match src="identifier: target [24633,24639]" dest="identifier: target [24633,24639]"/>
  <match src="(: ( [52858,52859]" dest="(: ( [55011,55012]"/>
  <match src="state_mutability [9769,9773]" dest="state_mutability [9769,9773]"/>
  <match src="}: } [35306,35307]" dest="}: } [36187,36188]"/>
  <match src="identifier: adminRole [33460,33469]" dest="identifier: adminRole [33460,33469]"/>
  <match src="type_name [35222,35229]" dest="type_name [55039,55046]"/>
  <match src="]: ] [2983,2984]" dest="]: ] [2983,2984]"/>
  <match src="primitive_type [5470,5477]" dest="primitive_type [5470,5477]"/>
  <match src=".: . [27828,27829]" dest=".: . [27828,27829]"/>
  <match src="address: address [16029,16036]" dest="address: address [16029,16036]"/>
  <match src="variable_declaration [38514,38528]" dest="variable_declaration [41328,41339]"/>
  <match src="=: = [34759,34760]" dest="=: = [34760,34761]"/>
  <match src="type_name [47907,47914]" dest="type_name [50248,50255]"/>
  <match src="type_name [47953,47962]" dest="type_name [50294,50303]"/>
  <match src="indexed: indexed [29136,29143]" dest="indexed: indexed [29136,29143]"/>
  <match src="member_expression [53023,53043]" dest="member_expression [55067,55087]"/>
  <match src="type_name [41459,41466]" dest="type_name [43895,43899]"/>
  <match src="call_argument [18059,18069]" dest="call_argument [18059,18069]"/>
  <match src="uint256: uint256 [47953,47960]" dest="uint256: uint256 [50294,50301]"/>
  <match src="&quot;: &quot; [10375,10376]" dest="&quot;: &quot; [10375,10376]"/>
  <match src="event: event [28726,28731]" dest="event: event [28726,28731]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [15822,15986]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [15822,15986]"/>
  <match src=",: , [30365,30366]" dest=",: , [30365,30366]"/>
  <match src="primitive_type [2606,2613]" dest="primitive_type [2606,2613]"/>
  <match src="revert_statement [53513,53570]" dest="revert_statement [55810,55867]"/>
  <match src="pragma: pragma [6306,6312]" dest="pragma: pragma [6306,6312]"/>
  <match src="{: { [19217,19218]" dest="{: { [19217,19218]"/>
  <match src="comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [14071,14163]" dest="comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [14071,14163]"/>
  <match src="event_definition [28399,28509]" dest="event_definition [28399,28509]"/>
  <match src="add: add [41069,41072]" dest="add: add [43511,43514]"/>
  <match src="if_statement [40254,41288]" dest="if_statement [42632,43730]"/>
  <match src="): ) [39818,39819]" dest="): ) [42298,42299]"/>
  <match src="primitive_type [29667,29674]" dest="primitive_type [29667,29674]"/>
  <match src="primitive_type [24106,24111]" dest="primitive_type [24106,24111]"/>
  <match src="parameter [30367,30380]" dest="parameter [30367,30380]"/>
  <match src="(: ( [35568,35569]" dest="(: ( [37564,37565]"/>
  <match src="call_argument [35569,35573]" dest="call_argument [37565,37569]"/>
  <match src="type_name [38717,38722]" dest="type_name [41528,41533]"/>
  <match src="): ) [39187,39188]" dest="): ) [41817,41818]"/>
  <match src="&gt;=: &gt;= [24161,24163]" dest="&gt;=: &gt;= [24161,24163]"/>
  <match src="]: ] [50228,50229]" dest="]: ] [52641,52642]"/>
  <match src="yul_identifier [42710,42714]" dest="yul_identifier [45126,45130]"/>
  <match src="function_body [9798,9857]" dest="function_body [9798,9857]"/>
  <match src="call_argument [47350,47359]" dest="call_argument [49691,49700]"/>
  <match src="): ) [45083,45084]" dest="): ) [47424,47425]"/>
  <match src="address: address [4729,4736]" dest="address: address [4729,4736]"/>
  <match src="primitive_type [36812,36817]" dest="primitive_type [39533,39538]"/>
  <match src="uint256: uint256 [13892,13899]" dest="uint256: uint256 [13892,13899]"/>
  <match src="identifier: byte0 [41848,41853]" dest="identifier: byte0 [44259,44264]"/>
  <match src="call_argument [34280,34284]" dest="call_argument [34280,34284]"/>
  <match src="parameter [50765,50772]" dest="parameter [53350,53357]"/>
  <match src="parameter [31539,31554]" dest="parameter [31539,31554]"/>
  <match src="function: function [4160,4168]" dest="function: function [4160,4168]"/>
  <match src="identifier: result [38581,38587]" dest="identifier: result [41392,41398]"/>
  <match src="type_name [22598,22603]" dest="type_name [22598,22603]"/>
  <match src=".: . [27920,27921]" dest=".: . [27920,27921]"/>
  <match src="primitive_type [31525,31532]" dest="primitive_type [31525,31532]"/>
  <match src="call_argument [53244,53246]" dest="call_argument [55464,55466]"/>
  <match src="function_body [17334,17400]" dest="function_body [17334,17400]"/>
  <match src="type_name [16384,16388]" dest="type_name [16384,16388]"/>
  <match src="event_paramater [28766,28789]" dest="event_paramater [28766,28789]"/>
  <match src="variable_declaration [35616,35629]" dest="variable_declaration [55157,55184]"/>
  <match src="function: function [37318,37326]" dest="function: function [40648,40656]"/>
  <match src="(: ( [9283,9284]" dest="(: ( [9283,9284]"/>
  <match src="assembly: assembly [25031,25039]" dest="assembly: assembly [25031,25039]"/>
  <match src="member_expression [16888,16898]" dest="member_expression [16888,16898]"/>
  <match src="expression_statement [36933,36966]" dest="expression_statement [39707,39740]"/>
  <match src="parameter [33068,33083]" dest="parameter [33068,33083]"/>
  <match src="primitive_type [6099,6106]" dest="primitive_type [6099,6106]"/>
  <match src="identifier: byte0 [41635,41640]" dest="identifier: byte0 [44068,44073]"/>
  <match src="visibility [2635,2643]" dest="visibility [2635,2643]"/>
  <match src="identifier: ids [53106,53109]" dest="identifier: ids [55124,55127]"/>
  <match src="call_argument [22649,22653]" dest="call_argument [22649,22653]"/>
  <match src="[: [ [49088,49089]" dest="[: [ [51429,51430]"/>
  <match src="identifier: tokenBalances [50167,50180]" dest="identifier: tokenBalances [52580,52593]"/>
  <match src="add: add [41246,41249]" dest="add: add [43688,43691]"/>
  <match src="): ) [17389,17390]" dest="): ) [17389,17390]"/>
  <match src="return_type_definition [18463,18480]" dest="return_type_definition [18463,18480]"/>
  <match src="identifier: ERC1155Receiver [46375,46390]" dest="identifier: ERC1155Receiver [48716,48731]"/>
  <match src="event: event [29110,29115]" dest="event: event [29110,29115]"/>
  <match src="type_name [45093,45100]" dest="type_name [47434,47441]"/>
  <match src="type_name [49619,49626]" dest="type_name [51960,51967]"/>
  <match src="number_literal: 0x00 [28081,28085]" dest="number_literal: 0x00 [28081,28085]"/>
  <match src="identifier: RLPReader [44876,44885]" dest="identifier: RLPReader [47217,47226]"/>
  <match src="augmented_assignment_expression [42446,42462]" dest="augmented_assignment_expression [44823,44839]"/>
  <match src="returns: returns [18248,18255]" dest="returns: returns [18248,18255]"/>
  <match src=",: , [47271,47272]" dest=",: , [49612,49613]"/>
  <match src="]: ] [1726,1727]" dest="]: ] [1726,1727]"/>
  <match src="variable_declaration_statement [39619,39679]" dest="variable_declaration_statement [37681,37737]"/>
  <match src="parameter [17994,18007]" dest="parameter [17994,18007]"/>
  <match src="type_name [8584,8593]" dest="type_name [8584,8593]"/>
  <match src="primitive_type [39619,39626]" dest="primitive_type [37681,37685]"/>
  <match src="(: ( [42699,42700]" dest="(: ( [45115,45116]"/>
  <match src="(: ( [16805,16806]" dest="(: ( [16805,16806]"/>
  <match src="(: ( [37067,37068]" dest="(: ( [40506,40507]"/>
  <match src="true: true [36551,36555]" dest="true: true [38421,38425]"/>
  <match src="(: ( [16443,16444]" dest="(: ( [16443,16444]"/>
  <match src="identifier: set [17282,17285]" dest="identifier: set [17282,17285]"/>
  <match src="): ) [36467,36468]" dest="): ) [38324,38325]"/>
  <match src="member_expression [29384,29413]" dest="member_expression [29384,29413]"/>
  <match src="solidity: solidity [34635,34643]" dest="solidity: solidity [34635,34643]"/>
  <match src="array_access [14199,14221]" dest="array_access [14199,14221]"/>
  <match src="function_definition [16546,16704]" dest="function_definition [16546,16704]"/>
  <match src="identifier: lockTokens [43642,43652]" dest="identifier: lockTokens [46081,46091]"/>
  <match src="yul_identifier [35285,35289]" dest="yul_identifier [36166,36170]"/>
  <match src="user_defined_type [44779,44794]" dest="user_defined_type [47120,47135]"/>
  <match src="address: address [24010,24017]" dest="address: address [24010,24017]"/>
  <match src="(: ( [45712,45713]" dest="(: ( [48053,48054]"/>
  <match src=",: , [44301,44302]" dest=",: , [46740,46741]"/>
  <match src="new: new [48133,48136]" dest="new: new [50474,50477]"/>
  <match src="(: ( [31524,31525]" dest="(: ( [31524,31525]"/>
  <match src="]: ] [51407,51408]" dest="]: ] [54007,54008]"/>
  <match src="yul_evm_builtin [42694,42699]" dest="yul_evm_builtin [45110,45115]"/>
  <match src="comment: /**      * @notice Batched version of singular token minting, where      * for each token in `ids` respective amount to be minted from `amounts`      * array, for address `to`.      * @dev Should be callable only by MintableERC1155Predicate      * Make sure minting is done only by this function      * @param to user address for whom token is being minted      * @param ids tokens which are being minted      * @param amounts amount of each token being minted      * @param data extra byte data to be accompanied with minted tokens      */ [5524,6074]" dest="comment: /**      * @notice Batched version of singular token minting, where      * for each token in `ids` respective amount to be minted from `amounts`      * array, for address `to`.      * @dev Should be callable only by MintableERC1155Predicate      * Make sure minting is done only by this function      * @param to user address for whom token is being minted      * @param ids tokens which are being minted      * @param amounts amount of each token being minted      * @param data extra byte data to be accompanied with minted tokens      */ [5524,6074]"/>
  <match src="identifier: length [49684,49690]" dest="identifier: length [52037,52043]"/>
  <match src="library_declaration [11734,19010]" dest="library_declaration [11734,19010]"/>
  <match src="bytes32: bytes32 [29632,29639]" dest="bytes32: bytes32 [29632,29639]"/>
  <match src="identifier: account [33527,33534]" dest="identifier: account [33527,33534]"/>
  <match src="emit_statement [33809,33855]" dest="emit_statement [33809,33855]"/>
  <match src="external: external [8656,8664]" dest="external: external [8656,8664]"/>
  <match src="=: = [50158,50159]" dest="=: = [52571,52572]"/>
  <match src="parameter [46015,46029]" dest="parameter [48356,48370]"/>
  <match src="}: } [16703,16704]" dest="}: } [16703,16704]"/>
  <match src="variable_declaration_statement [51500,51620]" dest="variable_declaration_statement [54087,54207]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [14788,14860]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [14788,14860]"/>
  <match src=",: , [42831,42832]" dest=",: , [45255,45256]"/>
  <match src="{: { [33544,33545]" dest="{: { [33544,33545]"/>
  <match src="(: ( [25131,25132]" dest="(: ( [25131,25132]"/>
  <match src="address: address [47563,47570]" dest="address: address [49904,49911]"/>
  <match src="type_name [24433,24438]" dest="type_name [24433,24438]"/>
  <match src="(: ( [18078,18079]" dest="(: ( [18078,18079]"/>
  <match src="yul_function_call [37884,37897]" dest="yul_function_call [40893,40906]"/>
  <match src=",: , [46260,46261]" dest=",: , [48601,48602]"/>
  <match src="primitive_type [16103,16110]" dest="primitive_type [16103,16110]"/>
  <match src="(: ( [21454,21455]" dest="(: ( [21454,21455]"/>
  <match src=",: , [17382,17383]" dest=",: , [17382,17383]"/>
  <match src="+: + [40394,40395]" dest="+: + [42795,42796]"/>
  <match src="parameter [22964,22981]" dest="parameter [22964,22981]"/>
  <match src="{: { [40115,40116]" dest="{: { [42499,42500]"/>
  <match src="number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [20182,20248]" dest="number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [20182,20248]"/>
  <match src="parameter [24433,24445]" dest="parameter [24433,24445]"/>
  <match src="identifier: len [36823,36826]" dest="identifier: len [39544,39547]"/>
  <match src="array_access [14662,14688]" dest="array_access [14662,14688]"/>
  <match src=",: , [22653,22654]" dest=",: , [22653,22654]"/>
  <match src="address: address [45504,45511]" dest="address: address [47845,47852]"/>
  <match src="function_body [14945,14995]" dest="function_body [14945,14995]"/>
  <match src="identifier: role [29144,29148]" dest="identifier: role [29144,29148]"/>
  <match src="address: address [17325,17332]" dest="address: address [17325,17332]"/>
  <match src="call_argument [18980,18990]" dest="call_argument [18980,18990]"/>
  <match src="identifier: _ [34346,34347]" dest="identifier: _ [34346,34347]"/>
  <match src="): ) [32351,32352]" dest="): ) [32351,32352]"/>
  <match src="identifier: ptr [36848,36851]" dest="identifier: ptr [38700,38703]"/>
  <match src="identifier: onERC1155Received [45915,45932]" dest="identifier: onERC1155Received [48256,48273]"/>
  <match src=".: . [49890,49891]" dest=".: . [52243,52244]"/>
  <match src="call_expression [10752,10907]" dest="call_expression [10752,10907]"/>
  <match src=",: , [31162,31163]" dest=",: , [31162,31163]"/>
  <match src="block_statement [33594,33666]" dest="block_statement [33594,33666]"/>
  <match src="storage: storage [16575,16582]" dest="storage: storage [16575,16582]"/>
  <match src="identifier: AddressSet [16564,16574]" dest="identifier: AddressSet [16564,16574]"/>
  <match src="identifier: LIST_SHORT_START [36503,36519]" dest="identifier: LIST_SHORT_START [38360,38376]"/>
  <match src="parameter [5441,5456]" dest="parameter [5441,5456]"/>
  <match src="parameter [15137,15144]" dest="parameter [15137,15144]"/>
  <match src="identifier: memPtr [35271,35277]" dest="identifier: memPtr [36152,36158]"/>
  <match src="call_expression [53070,53117]" dest="call_expression [55088,55135]"/>
  <match src="primitive_type [39591,39598]" dest="primitive_type [42081,42085]"/>
  <match src=".: . [31610,31611]" dest=".: . [31610,31611]"/>
  <match src="identifier: item [37296,37300]" dest="identifier: item [40626,40630]"/>
  <match src="parameter [40106,40113]" dest="parameter [42493,42497]"/>
  <match src="identifier: ptr [36886,36889]" dest="identifier: ptr [39660,39663]"/>
  <match src="identifier: remove [16320,16326]" dest="identifier: remove [16320,16326]"/>
  <match src="address: address [7318,7325]" dest="address: address [7318,7325]"/>
  <match src="identifier: _contains [16650,16659]" dest="identifier: _contains [16650,16659]"/>
  <match src="number_literal: 0 [48759,48760]" dest="number_literal: 0 [51100,51101]"/>
  <match src="identifier: id [2390,2392]" dest="identifier: id [2390,2392]"/>
  <match src="}: } [33145,33146]" dest="}: } [33145,33146]"/>
  <match src="indexed: indexed [1393,1400]" dest="indexed: indexed [1393,1400]"/>
  <match src="array_access [29694,29706]" dest="array_access [29694,29706]"/>
  <match src="identifier: getRoleMemberCount [29613,29631]" dest="identifier: getRoleMemberCount [29613,29631]"/>
  <match src=",: , [24368,24369]" dest=",: , [24368,24369]"/>
  <match src="identifier: token [52834,52839]" dest="identifier: token [54987,54992]"/>
  <match src="parameter [46349,46355]" dest="parameter [48690,48696]"/>
  <match src="bool: bool [1972,1976]" dest="bool: bool [1972,1976]"/>
  <match src="memory: memory [49822,49828]" dest="memory: memory [52175,52181]"/>
  <match src="(: ( [31051,31052]" dest="(: ( [31051,31052]"/>
  <match src="(: ( [41438,41439]" dest="(: ( [43877,43878]"/>
  <match src="binary_expression [40921,40945]" dest="binary_expression [43351,43375]"/>
  <match src="return_statement [22621,22689]" dest="return_statement [22621,22689]"/>
  <match src="struct_expression [24633,24663]" dest="struct_expression [24633,24663]"/>
  <match src="identifier: rootToken [50791,50800]" dest="identifier: rootToken [53376,53385]"/>
  <match src="): ) [30410,30411]" dest="): ) [30410,30411]"/>
  <match src="]: ] [2907,2908]" dest="]: ] [2907,2908]"/>
  <match src="): ) [33137,33138]" dest="): ) [33137,33138]"/>
  <match src="yul_evm_builtin [41516,41520]" dest="yul_evm_builtin [43949,43953]"/>
  <match src="call_argument [51586,51604]" dest="call_argument [54173,54191]"/>
  <match src="(: ( [25135,25136]" dest="(: ( [25135,25136]"/>
  <match src="yul_identifier [25153,25168]" dest="yul_identifier [25153,25168]"/>
  <match src="calldata: calldata [6121,6129]" dest="calldata: calldata [6121,6129]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/Address.sol [19014,19064]" dest="comment: // File: @openzeppelin/contracts/utils/Address.sol [19014,19064]"/>
  <match src="identifier: result [37874,37880]" dest="identifier: result [40883,40889]"/>
  <match src="identifier: role [33309,33313]" dest="identifier: role [33309,33313]"/>
  <match src="(: ( [16061,16062]" dest="(: ( [16061,16062]"/>
  <match src="identifier: set [17679,17682]" dest="identifier: set [17679,17682]"/>
  <match src="(: ( [38419,38420]" dest="(: ( [41277,41278]"/>
  <match src="add: add [25132,25135]" dest="add: add [25132,25135]"/>
  <match src="): ) [33853,33854]" dest="): ) [33853,33854]"/>
  <match src=".: . [52363,52364]" dest=".: . [54528,54529]"/>
  <match src="bool: bool [13302,13306]" dest="bool: bool [13302,13306]"/>
  <match src=".: . [53306,53307]" dest=".: . [55563,55564]"/>
  <match src="returns: returns [37059,37066]" dest="returns: returns [40498,40505]"/>
  <match src="): ) [45228,45229]" dest="): ) [47569,47570]"/>
  <match src="parameter [33519,33534]" dest="parameter [33519,33534]"/>
  <match src="{: { [16068,16069]" dest="{: { [16068,16069]"/>
  <match src="type_name [31066,31073]" dest="type_name [31066,31073]"/>
  <match src="call_expression [17741,17773]" dest="call_expression [17741,17773]"/>
  <match src="]: ] [46279,46280]" dest="]: ] [48620,48621]"/>
  <match src="(: ( [51541,51542]" dest="(: ( [54128,54129]"/>
  <match src=".: . [51014,51015]" dest=".: . [53599,53600]"/>
  <match src="primitive_type [41459,41466]" dest="primitive_type [43895,43899]"/>
  <match src="parameter [33315,33332]" dest="parameter [33315,33332]"/>
  <match src="(: ( [41121,41122]" dest="(: ( [43563,43564]"/>
  <match src="number_literal: 1 [40296,40297]" dest="number_literal: 1 [42687,42688]"/>
  <match src="yul_path [40584,40590]" dest="yul_path [42987,42993]"/>
  <match src="expression_statement [39779,39820]" dest="expression_statement [42259,42300]"/>
  <match src="{: { [9798,9799]" dest="{: { [9798,9799]"/>
  <match src="): ) [36909,36910]" dest="): ) [39683,39684]"/>
  <match src="identifier: require [21447,21454]" dest="identifier: require [21447,21454]"/>
  <match src="return_statement [16873,16900]" dest="return_statement [16873,16900]"/>
  <match src="yul_decimal_number: 32 [40730,40732]" dest="yul_decimal_number: 32 [43149,43151]"/>
  <match src="comment: /**      * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.      *      * See {setApprovalForAll}.      */ [3340,3479]" dest="comment: /**      * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.      *      * See {setApprovalForAll}.      */ [3340,3479]"/>
  <match src="storage: storage [13257,13264]" dest="storage: storage [13257,13264]"/>
  <match src="type_name [34772,34777]" dest="type_name [34773,34778]"/>
  <match src="function_body [30412,30468]" dest="function_body [30412,30468]"/>
  <match src="storage: storage [16016,16023]" dest="storage: storage [16016,16023]"/>
  <match src="pure: pure [39382,39386]" dest="pure: pure [42010,42014]"/>
  <match src=".: . [52151,52152]" dest=".: . [54405,54406]"/>
  <match src="expression_statement [48185,48194]" dest="expression_statement [50526,50535]"/>
  <match src="call_argument [33390,33412]" dest="call_argument [33390,33412]"/>
  <match src="add: add [39108,39111]" dest="add: add [41752,41755]"/>
  <match src="comment: /**      * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,      *      * Emits an {ApprovalForAll} event.      *      * Requirements:      *      * - `operator` cannot be the caller.      */ [3001,3257]" dest="comment: /**      * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,      *      * Emits an {ApprovalForAll} event.      *      * Requirements:      *      * - `operator` cannot be the caller.      */ [3001,3257]"/>
  <match src="identifier: _remove [18051,18058]" dest="identifier: _remove [18051,18058]"/>
  <match src=",: , [31717,31718]" dest=",: , [31717,31718]"/>
  <match src="}: } [44634,44635]" dest="}: } [47073,47074]"/>
  <match src="identifier: _values [13916,13923]" dest="identifier: _values [13916,13923]"/>
  <match src="parameter [29667,29674]" dest="parameter [29667,29674]"/>
  <match src="call_argument [52763,52785]" dest="call_argument [54916,54938]"/>
  <match src="visibility [33536,33543]" dest="visibility [33536,33543]"/>
  <match src="parameter [13302,13306]" dest="parameter [13302,13306]"/>
  <match src="]: ] [2936,2937]" dest="]: ] [2936,2937]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [16914,17245]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [16914,17245]"/>
  <match src="identifier: depositor [45442,45451]" dest="identifier: depositor [47783,47792]"/>
  <match src="identifier: len [38825,38828]" dest="identifier: len [39931,39934]"/>
  <match src="user_defined_type [15098,15101]" dest="user_defined_type [15098,15101]"/>
  <match src="member_expression [15629,15640]" dest="member_expression [15629,15640]"/>
  <match src="{: { [18950,18951]" dest="{: { [18950,18951]"/>
  <match src="type_name [29308,29315]" dest="type_name [29308,29315]"/>
  <match src="number_literal: 0 [42235,42236]" dest="number_literal: 0 [44612,44613]"/>
  <match src="]: ] [15729,15730]" dest="]: ] [15729,15730]"/>
  <match src="binary_expression [39637,39678]" dest="binary_expression [37695,37736]"/>
  <match src="contract_declaration [25913,26296]" dest="contract_declaration [25913,26296]"/>
  <match src="type_name [2374,2381]" dest="type_name [2374,2381]"/>
  <match src="{: { [50870,50871]" dest="{: { [53455,53456]"/>
  <match src="): ) [34193,34194]" dest="): ) [34193,34194]"/>
  <match src="indexed: indexed [1954,1961]" dest="indexed: indexed [1954,1961]"/>
  <match src="identifier: RLPItem [35687,35694]" dest="identifier: RLPItem [37652,37659]"/>
  <match src="comment: /// @notice Abstract interface that defines methods for custom predicates [43039,43112]" dest="comment: /// @notice Abstract interface that defines methods for custom predicates [45478,45551]"/>
  <match src="): ) [46035,46036]" dest="): ) [48376,48377]"/>
  <match src="type_name [18257,18261]" dest="type_name [18257,18261]"/>
  <match src="parenthesized_expression [25234,25248]" dest="parenthesized_expression [25234,25248]"/>
  <match src="==: == [52603,52605]" dest="==: == [54766,54768]"/>
  <match src="bytes: bytes [44890,44895]" dest="bytes: bytes [47231,47236]"/>
  <match src="yul_evm_builtin [40806,40809]" dest="yul_evm_builtin [43225,43228]"/>
  <match src="call_argument [52512,52514]" dest="call_argument [54698,54700]"/>
  <match src="identifier: this [24147,24151]" dest="identifier: this [24147,24151]"/>
  <match src="uint256: uint256 [24370,24377]" dest="uint256: uint256 [24370,24377]"/>
  <match src="uint256: uint256 [45564,45571]" dest="uint256: uint256 [47905,47912]"/>
  <match src="(: ( [37977,37978]" dest="(: ( [40986,40987]"/>
  <match src="identifier: set [18507,18510]" dest="identifier: set [18507,18510]"/>
  <match src="internal: internal [33085,33093]" dest="internal: internal [33085,33093]"/>
  <match src="yul_hex_number: 0xf7 [41036,41040]" dest="yul_hex_number: 0xf7 [43478,43482]"/>
  <match src="(: ( [28743,28744]" dest="(: ( [28743,28744]"/>
  <match src=".: . [13444,13445]" dest=".: . [13444,13445]"/>
  <match src="identifier: result [38020,38026]" dest="identifier: result [41029,41035]"/>
  <match src="primitive_type [43663,43670]" dest="primitive_type [46102,46109]"/>
  <match src="call_expression [51792,51826]" dest="call_expression [54310,54344]"/>
  <match src="function: function [22926,22934]" dest="function: function [22926,22934]"/>
  <match src="call_argument [47571,47575]" dest="call_argument [49912,49916]"/>
  <match src="uint256: uint256 [1703,1710]" dest="uint256: uint256 [1703,1710]"/>
  <match src="): ) [35843,35844]" dest="): ) [40763,40764]"/>
  <match src="identifier: selector [10822,10830]" dest="identifier: selector [10822,10830]"/>
  <match src="expression_statement [10340,10407]" dest="expression_statement [10340,10407]"/>
  <match src="^:  ^ [26411,26413]" dest="^:  ^ [26411,26413]"/>
  <match src="array_access [51067,51080]" dest="array_access [53652,53665]"/>
  <match src="]: ] [6119,6120]" dest="]: ] [6119,6120]"/>
  <match src="yul_evm_builtin [38591,38596]" dest="yul_evm_builtin [41402,41407]"/>
  <match src="]: ] [29705,29706]" dest="]: ] [29705,29706]"/>
  <match src="call_argument [31713,31717]" dest="call_argument [31713,31717]"/>
  <match src="&quot;: &quot; [53245,53246]" dest="&quot;: &quot; [55465,55466]"/>
  <match src="): ) [9298,9299]" dest="): ) [9298,9299]"/>
  <match src=",: , [45529,45530]" dest=",: , [47870,47871]"/>
  <match src="type_name [45564,45573]" dest="type_name [47905,47914]"/>
  <match src="(: ( [7280,7281]" dest="(: ( [7280,7281]"/>
  <match src="state_mutability [41425,41429]" dest="state_mutability [43864,43868]"/>
  <match src="&quot;: &quot; [21488,21489]" dest="&quot;: &quot; [21488,21489]"/>
  <match src="identifier: toRlpItem [50925,50934]" dest="identifier: toRlpItem [53510,53519]"/>
  <match src="=: = [38953,38954]" dest="=: = [37110,37111]"/>
  <match src="type_name [12268,12275]" dest="type_name [12268,12275]"/>
  <match src="parameter [16384,16388]" dest="parameter [16384,16388]"/>
  <match src="indexed: indexed [45512,45519]" dest="indexed: indexed [47853,47860]"/>
  <match src="identifier: _inner [18984,18990]" dest="identifier: _inner [18984,18990]"/>
  <match src="call_expression [36013,36032]" dest="call_expression [37828,37847]"/>
  <match src="return_type_definition [8674,8689]" dest="return_type_definition [8674,8689]"/>
  <match src=".: . [37213,37214]" dest=".: . [40580,40581]"/>
  <match src="identifier: copy [39148,39152]" dest="identifier: copy [41792,41796]"/>
  <match src="(: ( [15600,15601]" dest="(: ( [15600,15601]"/>
  <match src="identifier: memPtr [36382,36388]" dest="identifier: memPtr [38239,38245]"/>
  <match src="primitive_type [46923,46928]" dest="primitive_type [49264,49269]"/>
  <match src="identifier: remove [33777,33783]" dest="identifier: remove [33777,33783]"/>
  <match src=".: . [49683,49684]" dest=".: . [52036,52037]"/>
  <match src="solidity_version: 0.6.0 [10594,10599]" dest="solidity_version: 0.6.0 [10594,10599]"/>
  <match src="expression_statement [12769,12793]" dest="expression_statement [12769,12793]"/>
  <match src="member_expression [17372,17382]" dest="member_expression [17372,17382]"/>
  <match src="visibility [14917,14924]" dest="visibility [14917,14924]"/>
  <match src="primitive_type [32264,32271]" dest="primitive_type [32264,32271]"/>
  <match src="}: } [41946,41947]" dest="}: } [44370,44371]"/>
  <match src="comment: // UintSet [17410,17420]" dest="comment: // UintSet [17410,17420]"/>
  <match src="[: [ [4748,4749]" dest="[: [ [4748,4749]"/>
  <match src="type_name [38673,38680]" dest="type_name [41484,41491]"/>
  <match src="member_expression [35903,35914]" dest="member_expression [42150,42161]"/>
  <match src="function: function [13236,13244]" dest="function: function [13236,13244]"/>
  <match src=",: , [47359,47360]" dest=",: , [49700,49701]"/>
  <match src="{: { [17334,17335]" dest="{: { [17334,17335]"/>
  <match src="type_name [28791,28798]" dest="type_name [28791,28798]"/>
  <match src="bytes: bytes [43753,43758]" dest="bytes: bytes [46192,46197]"/>
  <match src="primitive_type [41401,41408]" dest="primitive_type [43843,43847]"/>
  <match src="call_expression [24458,24518]" dest="call_expression [24458,24518]"/>
  <match src="): ) [9549,9550]" dest="): ) [9549,9550]"/>
  <match src="call_argument [24147,24151]" dest="call_argument [24147,24151]"/>
  <match src=".: . [14577,14578]" dest=".: . [14577,14578]"/>
  <match src="comment: /**      * @notice rejects single transfer      */ [45848,45900]" dest="comment: /**      * @notice rejects single transfer      */ [48189,48241]"/>
  <match src="): ) [1734,1735]" dest="): ) [1734,1735]"/>
  <match src="function_body [34239,34355]" dest="function_body [34239,34355]"/>
  <match src="type_name [51044,51049]" dest="type_name [53629,53634]"/>
  <match src="identifier: memPtr [37824,37830]" dest="identifier: memPtr [37075,37081]"/>
  <match src="expression_statement [35770,35845]" dest="expression_statement [40725,40765]"/>
  <match src="uint256: uint256 [24045,24052]" dest="uint256: uint256 [24045,24052]"/>
  <match src="pragma_directive [11017,11040]" dest="pragma_directive [11017,11040]"/>
  <match src="call_argument [16103,16126]" dest="call_argument [16103,16126]"/>
  <match src="yul_hex_number: 0xb7 [40512,40516]" dest="yul_hex_number: 0xb7 [42915,42919]"/>
  <match src="variable_declaration_statement [48968,49017]" dest="variable_declaration_statement [51309,51358]"/>
  <match src="binary_expression [42614,42640]" dest="binary_expression [45020,45048]"/>
  <match src="&quot;: &quot; [45082,45083]" dest="&quot;: &quot; [47423,47424]"/>
  <match src="parameter [46300,46314]" dest="parameter [48641,48655]"/>
  <match src="=: = [35630,35631]" dest="=: = [37595,37596]"/>
  <match src="storage: storage [17274,17281]" dest="storage: storage [17274,17281]"/>
  <match src="): ) [21626,21627]" dest="): ) [21626,21627]"/>
  <match src="[: [ [29700,29701]" dest="[: [ [29700,29701]"/>
  <match src=":: : [24651,24652]" dest=":: : [24651,24652]"/>
  <match src="while_statement [39739,39963]" dest="while_statement [42220,42353]"/>
  <match src="!=: != [20415,20417]" dest="!=: != [20415,20417]"/>
  <match src="member_expression [15712,15723]" dest="member_expression [15712,15723]"/>
  <match src="[: [ [49561,49562]" dest="[: [ [51902,51903]"/>
  <match src="type_name [22545,22552]" dest="type_name [22545,22552]"/>
  <match src="member_expression [14199,14210]" dest="member_expression [14199,14210]"/>
  <match src="pragma: pragma [10577,10583]" dest="pragma: pragma [10577,10583]"/>
  <match src="return: return [9809,9815]" dest="return: return [9809,9815]"/>
  <match src="return: return [41899,41905]" dest="return: return [44323,44329]"/>
  <match src="return_type_definition [25990,26015]" dest="return_type_definition [25990,26015]"/>
  <match src="state_mutability [29346,29350]" dest="state_mutability [29346,29350]"/>
  <match src="yul_evm_builtin [40217,40222]" dest="yul_evm_builtin [42595,42600]"/>
  <match src="identifier: ids [47428,47431]" dest="identifier: ids [49769,49772]"/>
  <match src="]: ] [14220,14221]" dest="]: ] [14220,14221]"/>
  <match src="return: return [23621,23627]" dest="return: return [23621,23627]"/>
  <match src="): ) [49798,49799]" dest="): ) [52151,52152]"/>
  <match src="bytes4: bytes4 [9120,9126]" dest="bytes4: bytes4 [9120,9126]"/>
  <match src="yul_identifier [40810,40817]" dest="yul_identifier [43229,43236]"/>
  <match src="visibility [38694,38702]" dest="visibility [41505,41513]"/>
  <match src="add: add [40819,40822]" dest="add: add [43238,43241]"/>
  <match src="member_expression [29694,29714]" dest="member_expression [29694,29714]"/>
  <match src="identifier: _msgSender [33841,33851]" dest="identifier: _msgSender [33841,33851]"/>
  <match src="array_access [30430,30442]" dest="array_access [30430,30442]"/>
  <match src="type_name [50881,50898]" dest="type_name [53466,53483]"/>
  <match src="primitive_type [7318,7325]" dest="primitive_type [7318,7325]"/>
  <match src="address: address [45426,45433]" dest="address: address [47767,47774]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/EnumerableSet.sol [10922,10978]" dest="comment: // File: @openzeppelin/contracts/utils/EnumerableSet.sol [10922,10978]"/>
  <match src="yul_identifier [39118,39124]" dest="yul_identifier [41762,41768]"/>
  <match src="+: + [38543,38544]" dest="+: + [41354,41355]"/>
  <match src="function: function [23497,23505]" dest="function: function [23497,23505]"/>
  <match src="): ) [39762,39763]" dest="): ) [42243,42244]"/>
  <match src="identifier: TRANSFER_BATCH_EVENT_SIG [52606,52630]" dest="identifier: TRANSFER_BATCH_EVENT_SIG [54769,54793]"/>
  <match src="(: ( [33651,33652]" dest="(: ( [33651,33652]"/>
  <match src="&quot;: &quot; [31212,31213]" dest="&quot;: &quot; [31212,31213]"/>
  <match src="primitive_type [49619,49626]" dest="primitive_type [51960,51967]"/>
  <match src="(: ( [38915,38916]" dest="(: ( [37032,37033]"/>
  <match src="(: ( [29413,29414]" dest="(: ( [29413,29414]"/>
  <match src="member_expression [38420,38428]" dest="member_expression [41278,41286]"/>
  <match src="identifier: account [1937,1944]" dest="identifier: account [1937,1944]"/>
  <match src="identifier: set [16825,16828]" dest="identifier: set [16825,16828]"/>
  <match src="parameter [5486,5505]" dest="parameter [5486,5505]"/>
  <match src=",: , [40817,40818]" dest=",: , [43236,43237]"/>
  <match src="type_name [9792,9796]" dest="type_name [9792,9796]"/>
  <match src="uint256: uint256 [4224,4231]" dest="uint256: uint256 [4224,4231]"/>
  <match src=".: . [33447,33448]" dest=".: . [33447,33448]"/>
  <match src="type_name [18428,18435]" dest="type_name [18428,18435]"/>
  <match src="variable_declaration_statement [48109,48153]" dest="variable_declaration_statement [50450,50494]"/>
  <match src="returns: returns [12700,12707]" dest="returns: returns [12700,12707]"/>
  <match src="=: = [36057,36058]" dest="=: = [37872,37873]"/>
  <match src="bytes32: bytes32 [31052,31059]" dest="bytes32: bytes32 [31052,31059]"/>
  <match src="identifier: set [16660,16663]" dest="identifier: set [16660,16663]"/>
  <match src="(: ( [25965,25966]" dest="(: ( [25965,25966]"/>
  <match src="function_definition [2875,2993]" dest="function_definition [2875,2993]"/>
  <match src=".: . [14425,14426]" dest=".: . [14425,14426]"/>
  <match src="identifier: role [33826,33830]" dest="identifier: role [33826,33830]"/>
  <match src="]: ] [12276,12277]" dest="]: ] [12276,12277]"/>
  <match src="bytes32: bytes32 [45093,45100]" dest="bytes32: bytes32 [47434,47441]"/>
  <match src="function: function [47879,47887]" dest="function: function [50220,50228]"/>
  <match src="return_type_definition [9783,9797]" dest="return_type_definition [9783,9797]"/>
  <match src="user_defined_type [35657,35664]" dest="user_defined_type [37622,37629]"/>
  <match src="parameter [24060,24086]" dest="parameter [24060,24086]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [21533,21601]" dest="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [21533,21601]"/>
  <match src="uint256: uint256 [2374,2381]" dest="uint256: uint256 [2374,2381]"/>
  <match src="): ) [24286,24287]" dest="): ) [24286,24287]"/>
  <match src="function_body [17723,17781]" dest="function_body [17723,17781]"/>
  <match src="primitive_type [18027,18031]" dest="primitive_type [18027,18031]"/>
  <match src="=: = [34848,34849]" dest="=: = [34854,34855]"/>
  <match src="parameter [35120,35134]" dest="parameter [36079,36093]"/>
  <match src="function: function [44257,44265]" dest="function: function [46696,46704]"/>
  <match src="identifier: logTopicRLPList [50983,50998]" dest="identifier: logTopicRLPList [53568,53583]"/>
  <match src="yul_function_call [42833,42854]" dest="yul_function_call [45257,45278]"/>
  <match src="identifier: data [4255,4259]" dest="identifier: data [4255,4259]"/>
  <match src="primitive_type [861,865]" dest="primitive_type [861,865]"/>
  <match src="calldata: calldata [6169,6177]" dest="calldata: calldata [6169,6177]"/>
  <match src="{: { [37987,37988]" dest="{: { [40996,40997]"/>
  <match src="): ) [41795,41796]" dest="): ) [44218,44219]"/>
  <match src="memory: memory [38681,38687]" dest="memory: memory [41492,41498]"/>
  <match src=".: . [30753,30754]" dest=".: . [30753,30754]"/>
  <match src=",: , [21409,21410]" dest=",: , [21409,21410]"/>
  <match src="identifier: this [52407,52411]" dest="identifier: this [54576,54580]"/>
  <match src="function_body [18950,19007]" dest="function_body [18950,19007]"/>
  <match src="yul_identifier [41250,41257]" dest="yul_identifier [43692,43699]"/>
  <match src="}: } [49145,49146]" dest="}: } [51486,51487]"/>
  <match src="comment: // # of bytes the actual length is [40518,40552]" dest="comment: // # of bytes the actual length is [42921,42955]"/>
  <match src="bytes32: bytes32 [28744,28751]" dest="bytes32: bytes32 [28744,28751]"/>
  <match src="return: return [36521,36527]" dest="return: return [38391,38397]"/>
  <match src="identifier: safeTransferFrom [52364,52380]" dest="identifier: safeTransferFrom [54529,54545]"/>
  <match src=",: , [15562,15563]" dest=",: , [15562,15563]"/>
  <match src="(: ( [24432,24433]" dest="(: ( [24432,24433]"/>
  <match src="function: function [15081,15089]" dest="function: function [15081,15089]"/>
  <match src="comment: /*      * @param item RLP encoded bytes      */ [34977,35026]" dest="comment: /*     * @dev Returns the next element in the iteration. Reverts if it has not next element.     * @param self The iterator.     * @return The next element in the iteration.     */ [35137,35321]"/>
  <match src="parameter [37378,37385]" dest="parameter [40708,40712]"/>
  <match src=".: . [44931,44932]" dest=".: . [47272,47273]"/>
  <match src="bytes32: bytes32 [45236,45243]" dest="bytes32: bytes32 [47577,47584]"/>
  <match src="identifier: recipient [21630,21639]" dest="identifier: recipient [21630,21639]"/>
  <match src=",: , [41135,41136]" dest=",: , [43577,43578]"/>
  <match src="identifier: AddressSet [17263,17273]" dest="identifier: AddressSet [17263,17273]"/>
  <match src="state_mutability [38703,38707]" dest="state_mutability [41514,41518]"/>
  <match src="call_argument [23101,23113]" dest="call_argument [23101,23113]"/>
  <match src="primitive_type [49812,49819]" dest="primitive_type [52165,52172]"/>
  <match src="=: = [10451,10452]" dest="=: = [10451,10452]"/>
  <match src="return: return [36544,36550]" dest="return: return [38414,38420]"/>
  <match src="member_expression [37819,37830]" dest="member_expression [37070,37081]"/>
  <match src="[: [ [48116,48117]" dest="[: [ [50457,50458]"/>
  <match src="{: { [34239,34240]" dest="{: { [34239,34240]"/>
  <match src="identifier: contains [18189,18197]" dest="identifier: contains [18189,18197]"/>
  <match src="binary_expression [38420,38434]" dest="binary_expression [41278,41292]"/>
  <match src="-: - [42630,42631]" dest="-: - [45038,45039]"/>
  <match src="call_argument [39175,39182]" dest="call_argument [41805,41812]"/>
  <match src="): ) [18479,18480]" dest="): ) [18479,18480]"/>
  <match src="is: is [33988,33990]" dest="is: is [33988,33990]"/>
  <match src="event_paramater [29128,29148]" dest="event_paramater [29128,29148]"/>
  <match src="identifier: set [16091,16094]" dest="identifier: set [16091,16094]"/>
  <match src="identifier: require [35770,35777]" dest="identifier: require [40725,40732]"/>
  <match src="identifier: data [23092,23096]" dest="identifier: data [23092,23096]"/>
  <match src="&quot;: &quot; [21693,21694]" dest="&quot;: &quot; [21693,21694]"/>
  <match src="parameter [7318,7330]" dest="parameter [7318,7330]"/>
  <match src="solidity: solidity [10584,10592]" dest="solidity: solidity [10584,10592]"/>
  <match src="function_body [23610,23723]" dest="function_body [23610,23723]"/>
  <match src="event_paramater [1385,1405]" dest="event_paramater [1385,1405]"/>
  <match src="): ) [34094,34095]" dest="): ) [34094,34095]"/>
  <match src="-: - [40373,40374]" dest="-: - [42774,42775]"/>
  <match src="function_body [18263,18326]" dest="function_body [18263,18326]"/>
  <match src="string: string [34129,34135]" dest="string: string [34129,34135]"/>
  <match src="constant: constant [34823,34831]" dest="constant: constant [34826,34834]"/>
  <match src="identifier: currPtr [39811,39818]" dest="identifier: currPtr [42291,42298]"/>
  <match src="comment: /**      * @dev Emitted when `account` is granted `role`.      *      * `sender` is the account that originated the contract call, an admin role      * bearer except when using {_setupRole}.      */ [28517,28720]" dest="comment: /**      * @dev Emitted when `account` is granted `role`.      *      * `sender` is the account that originated the contract call, an admin role      * bearer except when using {_setupRole}.      */ [28517,28720]"/>
  <match src="primitive_type [2374,2381]" dest="primitive_type [2374,2381]"/>
  <match src="comment: /**      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.      *      * Requirements:      *      * - `accounts` and `ids` must have the same length.      */ [2675,2869]" dest="comment: /**      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.      *      * Requirements:      *      * - `accounts` and `ids` must have the same length.      */ [2675,2869]"/>
  <match src="parameter [2975,2991]" dest="parameter [2975,2991]"/>
  <match src="): ) [7411,7412]" dest="): ) [7411,7412]"/>
  <match src="contract_body [11756,19010]" dest="contract_body [11756,19010]"/>
  <match src=",: , [2926,2927]" dest=",: , [2926,2927]"/>
  <match src="type_name [19831,19838]" dest="type_name [19831,19838]"/>
  <match src="yul_path [25153,25168]" dest="yul_path [25153,25168]"/>
  <match src="bytes: bytes [47206,47211]" dest="bytes: bytes [49547,49552]"/>
  <match src="bytes: bytes [23596,23601]" dest="bytes: bytes [23596,23601]"/>
  <match src="primitive_type [4212,4219]" dest="primitive_type [4212,4219]"/>
  <match src="identifier: item [35464,35468]" dest="identifier: item [37492,37496]"/>
  <match src="solidity: solidity [979,987]" dest="solidity: solidity [979,987]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC1155/IERC1155.sol [874,933]" dest="comment: // File: @openzeppelin/contracts/token/ERC1155/IERC1155.sol [874,933]"/>
  <match src="comment: // right shifting to the correct length [41165,41204]" dest="comment: // right shifting to the correct length [43607,43646]"/>
  <match src="): ) [10310,10311]" dest="): ) [10310,10311]"/>
  <match src="function: function [7254,7262]" dest="function: function [7254,7262]"/>
  <match src="visibility [25968,25976]" dest="visibility [25968,25976]"/>
  <match src=",: , [8573,8574]" dest=",: , [8573,8574]"/>
  <match src="]: ] [51149,51150]" dest="]: ] [53734,53735]"/>
  <match src="type_name [35051,35056]" dest="type_name [36037,36042]"/>
  <match src=",: , [40715,40716]" dest=",: , [43134,43135]"/>
  <match src="type_name [1703,1710]" dest="type_name [1703,1710]"/>
  <match src="): ) [39372,39373]" dest="): ) [42000,42001]"/>
  <match src="=: = [24631,24632]" dest="=: = [24631,24632]"/>
  <match src="(: ( [35284,35285]" dest="(: ( [36165,36166]"/>
  <match src="comment: // be a problem, due to implementation of mint logic for ERC1155 [50069,50133]" dest="comment: // be a problem, due to implementation of mint logic for ERC1155 [52482,52546]"/>
  <match src="variable_declaration [14179,14196]" dest="variable_declaration [14179,14196]"/>
  <match src="call_expression [29384,29422]" dest="call_expression [29384,29422]"/>
  <match src="comment: // bytes32 values. [11916,11934]" dest="comment: // bytes32 values. [11916,11934]"/>
  <match src="type_name [12677,12684]" dest="type_name [12677,12684]"/>
  <match src="user_defined_type [12660,12663]" dest="user_defined_type [12660,12663]"/>
  <match src="state_mutability [25977,25981]" dest="state_mutability [25977,25981]"/>
  <match src=":=: := [40695,40697]" dest=":=: := [43114,43116]"/>
  <match src="if: if [36491,36493]" dest="if: if [38348,38350]"/>
  <match src="identifier: target [24477,24483]" dest="identifier: target [24477,24483]"/>
  <match src="): ) [42783,42784]" dest="): ) [45203,45204]"/>
  <match src="call_expression [18051,18086]" dest="call_expression [18051,18086]"/>
  <match src="primitive_type [46242,46249]" dest="primitive_type [48583,48590]"/>
  <match src="variable_declaration_statement [51044,51091]" dest="variable_declaration_statement [53629,53676]"/>
  <match src="indexed: indexed [1929,1936]" dest="indexed: indexed [1929,1936]"/>
  <match src="primitive_type [46349,46355]" dest="primitive_type [48690,48696]"/>
  <match src="comment: // Delete the index for the deleted slot [14608,14648]" dest="comment: // Delete the index for the deleted slot [14608,14648]"/>
  <match src="(: ( [41236,41237]" dest="(: ( [43678,43679]"/>
  <match src="uint256: uint256 [46242,46249]" dest="uint256: uint256 [48583,48590]"/>
  <match src="identifier: _inner [16095,16101]" dest="identifier: _inner [16095,16101]"/>
  <match src="identifier: account [29166,29173]" dest="identifier: account [29166,29173]"/>
  <match src="call_argument [23098,23099]" dest="call_argument [23098,23099]"/>
  <match src="type_name [46206,46213]" dest="type_name [48547,48554]"/>
  <match src="return_statement [41743,41752]" dest="return_statement [44166,44175]"/>
  <match src="identifier: revokeRole [31514,31524]" dest="identifier: revokeRole [31514,31524]"/>
  <match src="primitive_type [36756,36761]" dest="primitive_type [39482,39487]"/>
  <match src="member_expression [21630,21644]" dest="member_expression [21630,21644]"/>
  <match src="bool: bool [18257,18261]" dest="bool: bool [18257,18261]"/>
  <match src="primitive_type [34129,34135]" dest="primitive_type [34129,34135]"/>
  <match src="): ) [35068,35069]" dest="): ) [36054,36055]"/>
  <match src="^: ^ [10831,10832]" dest="^: ^ [10831,10832]"/>
  <match src="bytes32: bytes32 [33054,33061]" dest="bytes32: bytes32 [33054,33061]"/>
  <match src="): ) [37985,37986]" dest="): ) [40994,40995]"/>
  <match src="call_argument [45825,45831]" dest="call_argument [48166,48172]"/>
  <match src="returns: returns [15592,15599]" dest="returns: returns [15592,15599]"/>
  <match src="call_argument [10862,10863]" dest="call_argument [10862,10863]"/>
  <match src="comment: // means a value is not in the set. [12378,12413]" dest="comment: // means a value is not in the set. [12378,12413]"/>
  <match src="identifier: value [23664,23669]" dest="identifier: value [23664,23669]"/>
  <match src="(: ( [48848,48849]" dest="(: ( [51189,51190]"/>
  <match src="inheritance_specifier [44779,44794]" dest="inheritance_specifier [47120,47135]"/>
  <match src="identifier: IMintableERC1155 [52842,52858]" dest="identifier: IMintableERC1155 [54995,55011]"/>
  <match src="public: public [29646,29652]" dest="public: public [29646,29652]"/>
  <match src="payable: payable [26007,26014]" dest="payable: payable [26007,26014]"/>
  <match src="(: ( [42409,42410]" dest="(: ( [44786,44787]"/>
  <match src="identifier: _inner [16420,16426]" dest="identifier: _inner [16420,16426]"/>
  <match src="identifier: _registerInterface [9510,9528]" dest="identifier: _registerInterface [9510,9528]"/>
  <match src="identifier: success [24684,24691]" dest="identifier: success [24684,24691]"/>
  <match src="identifier: data [6178,6182]" dest="identifier: data [6178,6182]"/>
  <match src="[: [ [51077,51078]" dest="[: [ [53662,53663]"/>
  <match src="string [22655,22687]" dest="string [22655,22687]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens of token type `id` are transfered from `from` to `to` by `operator`.      */ [1210,1332]" dest="comment: /**      * @dev Emitted when `value` tokens of token type `id` are transfered from `from` to `to` by `operator`.      */ [1210,1332]"/>
  <match src="memory: memory [50901,50907]" dest="memory: memory [53486,53492]"/>
  <match src="solidity: solidity [25383,25391]" dest="solidity: solidity [25383,25391]"/>
  <match src="): ) [2633,2634]" dest="): ) [2633,2634]"/>
  <match src="solidity_pragma_token [33939,33953]" dest="solidity_pragma_token [33939,33953]"/>
  <match src="assignment_expression [33435,33469]" dest="assignment_expression [33435,33469]"/>
  <match src="): ) [29364,29365]" dest="): ) [29364,29365]"/>
  <match src="primitive_type [36352,36357]" dest="primitive_type [38212,38217]"/>
  <match src=".: . [52891,52892]" dest=".: . [55333,55334]"/>
  <match src="call_expression [31582,31688]" dest="call_expression [31582,31688]"/>
  <match src="identifier: mask [42779,42783]" dest="identifier: mask [45199,45203]"/>
  <match src="identifier: item [38916,38920]" dest="identifier: item [37033,37037]"/>
  <match src="identifier: dest [42477,42481]" dest="identifier: dest [44854,44858]"/>
  <match src=".: . [36395,36396]" dest=".: . [38252,38253]"/>
  <match src="(: ( [48169,48170]" dest="(: ( [50510,50511]"/>
  <match src="solidity_version: 0.6.0 [8810,8815]" dest="solidity_version: 0.6.0 [8810,8815]"/>
  <match src="}: } [24736,24737]" dest="}: } [24736,24737]"/>
  <match src="memory: memory [38723,38729]" dest="memory: memory [41534,41540]"/>
  <match src="visibility [43787,43795]" dest="visibility [46226,46234]"/>
  <match src="call_argument [52481,52487]" dest="call_argument [54662,54669]"/>
  <match src="identifier: item [36956,36960]" dest="identifier: item [39730,39734]"/>
  <match src="type_name [50765,50772]" dest="type_name [53350,53357]"/>
  <match src="call_argument [21662,21664]" dest="call_argument [21662,21664]"/>
  <match src=".: . [14202,14203]" dest=".: . [14202,14203]"/>
  <match src="bytes32: bytes32 [28422,28429]" dest="bytes32: bytes32 [28422,28429]"/>
  <match src="function: function [42112,42120]" dest="function: function [44532,44540]"/>
  <match src="comment: /**      * @dev Sets `adminRole` as ``role``'s admin role.      *      * Emits a {RoleAdminChanged} event.      */ [33154,33272]" dest="comment: /**      * @dev Sets `adminRole` as ``role``'s admin role.      *      * Emits a {RoleAdminChanged} event.      */ [33154,33272]"/>
  <match src="div: div [40698,40701]" dest="div: div [43117,43120]"/>
  <match src="type_name [44492,44496]" dest="type_name [46931,46935]"/>
  <match src="(: ( [24105,24106]" dest="(: ( [24105,24106]"/>
  <match src="yul_function_call [25132,25151]" dest="yul_function_call [25132,25151]"/>
  <match src="uint256: uint256 [15137,15144]" dest="uint256: uint256 [15137,15144]"/>
  <match src="function_definition [26060,26293]" dest="function_definition [26060,26293]"/>
  <match src="}: } [49109,49110]" dest="}: } [51450,51451]"/>
  <match src="type_name [45979,45986]" dest="type_name [48320,48327]"/>
  <match src="identifier: IMintableERC1155 [4924,4940]" dest="identifier: IMintableERC1155 [4924,4940]"/>
  <match src="identifier: to [6107,6109]" dest="identifier: to [6107,6109]"/>
  <match src="): ) [31081,31082]" dest="): ) [31081,31082]"/>
  <match src="function_definition [33681,33873]" dest="function_definition [33681,33873]"/>
  <match src="block_statement [49064,49110]" dest="block_statement [51405,51451]"/>
  <match src=".: . [33776,33777]" dest=".: . [33776,33777]"/>
  <match src="identifier: byte0 [41467,41472]" dest="identifier: byte0 [43900,43905]"/>
  <match src="uint256: uint256 [46271,46278]" dest="uint256: uint256 [48612,48619]"/>
  <match src="type_name [34070,34076]" dest="type_name [34070,34076]"/>
  <match src="=: = [12950,12951]" dest="=: = [12950,12951]"/>
  <match src="function_definition [16311,16460]" dest="function_definition [16311,16460]"/>
  <match src="primitive_type [29175,29182]" dest="primitive_type [29175,29182]"/>
  <match src="type_name [33716,33723]" dest="type_name [33716,33723]"/>
  <match src="identifier: _INTERFACE_ID_ERC165 [9529,9549]" dest="identifier: _INTERFACE_ID_ERC165 [9529,9549]"/>
  <match src="parameter [36685,36704]" dest="parameter [39438,39457]"/>
  <match src="binary_expression [40258,40284]" dest="binary_expression [42636,42662]"/>
  <match src="{: { [44543,44544]" dest="{: { [46982,46983]"/>
  <match src="identifier: amount [52481,52487]" dest="identifier: balance [54662,54669]"/>
  <match src="function_definition [17251,17400]" dest="function_definition [17251,17400]"/>
  <match src="primitive_type [9792,9796]" dest="primitive_type [9792,9796]"/>
  <match src="call_argument [18976,18998]" dest="call_argument [18976,18998]"/>
  <match src="identifier: item [39720,39724]" dest="identifier: item [42201,42205]"/>
  <match src="memory: memory [24067,24073]" dest="memory: memory [24067,24073]"/>
  <match src="state_mutability [37364,37368]" dest="state_mutability [40694,40698]"/>
  <match src="(: ( [49010,49011]" dest="(: ( [51351,51352]"/>
  <match src="type_name [44312,44319]" dest="type_name [46751,46758]"/>
  <match src=",: , [16101,16102]" dest=",: , [16101,16102]"/>
  <match src="comment: /*      * @param item RLP encoded list in bytes      */ [35370,35427]" dest="comment: /*     * @dev Returns true if the iteration has more elements.     * @param self The iterator.     * @return true if the iteration has more elements.     */ [35618,35778]"/>
  <match src="type_name [36840,36847]" dest="type_name [38692,38699]"/>
  <match src="(: ( [18427,18428]" dest="(: ( [18427,18428]"/>
  <match src=".: . [17375,17376]" dest=".: . [17375,17376]"/>
  <match src="(: ( [24009,24010]" dest="(: ( [24009,24010]"/>
  <match src="identifier: _values [12278,12285]" dest="identifier: _values [12278,12285]"/>
  <match src="{: { [37387,37388]" dest="{: { [40714,40715]"/>
  <match src="parameter [16351,16364]" dest="parameter [16351,16364]"/>
  <match src="state_variable_declaration [9276,9329]" dest="state_variable_declaration [9276,9329]"/>
  <match src="inheritance_specifier [44848,44861]" dest="inheritance_specifier [47189,47202]"/>
  <match src="visibility [18918,18926]" dest="visibility [18918,18926]"/>
  <match src=",: , [14900,14901]" dest=",: , [14900,14901]"/>
  <match src="solidity_version_comparison_operator [8808,8810]" dest="solidity_version_comparison_operator [8808,8810]"/>
  <match src="identifier: item [38955,38959]" dest="identifier: item [37112,37116]"/>
  <match src="address: address [33068,33075]" dest="address: address [33068,33075]"/>
  <match src="yul_path [36460,36466]" dest="yul_path [38317,38323]"/>
  <match src="binary_expression [20379,20402]" dest="binary_expression [20379,20402]"/>
  <match src="solidity: solidity [19110,19118]" dest="solidity: solidity [19110,19118]"/>
  <match src="identifier: returndata [24715,24725]" dest="identifier: returndata [24715,24725]"/>
  <match src="identifier: _add [17741,17745]" dest="identifier: _add [17741,17745]"/>
  <match src="uint256: uint256 [1439,1446]" dest="uint256: uint256 [1439,1446]"/>
  <match src="function: function [16546,16554]" dest="function: function [16546,16554]"/>
  <match src="identifier: token [52886,52891]" dest="identifier: token [55328,55333]"/>
  <match src=".: . [37619,37620]" dest=".: . [35945,35946]"/>
  <match src="identifier: data [24364,24368]" dest="identifier: data [24364,24368]"/>
  <match src="&quot;: &quot; [45010,45011]" dest="&quot;: &quot; [47351,47352]"/>
  <match src="identifier: RLPItem [50966,50973]" dest="identifier: RLPItem [53551,53558]"/>
  <match src="call_argument [21684,21691]" dest="call_argument [21684,21691]"/>
  <match src="visibility [37045,37053]" dest="visibility [40484,40492]"/>
  <match src="identifier: RoleRevoked [29116,29127]" dest="identifier: RoleRevoked [29116,29127]"/>
  <match src="visibility [7422,7430]" dest="visibility [7422,7430]"/>
  <match src="identifier: require [44554,44561]" dest="identifier: require [46993,47000]"/>
  <match src="parameter [23029,23041]" dest="parameter [23029,23041]"/>
  <match src="type_name [31052,31059]" dest="type_name [31052,31059]"/>
  <match src="uint256: uint256 [48623,48630]" dest="uint256: uint256 [50964,50971]"/>
  <match src="(: ( [42309,42310]" dest="(: ( [44686,44687]"/>
  <match src="type_name [2899,2908]" dest="type_name [2899,2908]"/>
  <match src="uint256: uint256 [48137,48144]" dest="uint256: uint256 [50478,50485]"/>
  <match src="internal: internal [24088,24096]" dest="internal: internal [24088,24096]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [25403,25911]" dest="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [25403,25911]"/>
  <match src="identifier: _values [12956,12963]" dest="identifier: _values [12956,12963]"/>
  <match src="block_statement [33794,33866]" dest="block_statement [33794,33866]"/>
  <match src="identifier: memPtr [41128,41134]" dest="identifier: memPtr [43570,43576]"/>
  <match src="call_expression [34136,34194]" dest="call_expression [34136,34194]"/>
  <match src="yul_function_call [40717,40743]" dest="yul_function_call [43136,43162]"/>
  <match src="comment: // @return entire rlp item byte length [40003,40041]" dest="comment: // @return entire rlp item byte length [42393,42431]"/>
  <match src="): ) [52514,52515]" dest="): ) [54700,54701]"/>
  <match src="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [30779,31027]" dest="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [30779,31027]"/>
  <match src="type_name [38216,38223]" dest="type_name [41225,41229]"/>
  <match src="): ) [16693,16694]" dest="): ) [16693,16694]"/>
  <match src="if: if [33752,33754]" dest="if: if [33752,33754]"/>
  <match src="function_body [26125,26293]" dest="function_body [26125,26293]"/>
  <match src="indexed: indexed [28799,28806]" dest="indexed: indexed [28799,28806]"/>
  <match src=".: . [18294,18295]" dest=".: . [18294,18295]"/>
  <match src=",: , [25138,25139]" dest=",: , [25138,25139]"/>
  <match src="primitive_type [38216,38223]" dest="primitive_type [41225,41229]"/>
  <match src="address: address [31066,31073]" dest="address: address [31066,31073]"/>
  <match src="(: ( [1634,1635]" dest="(: ( [1634,1635]"/>
  <match src="memory: memory [22970,22976]" dest="memory: memory [22970,22976]"/>
  <match src="comment: // retrieve the bytes [42785,42806]" dest="comment: // retrieve the bytes [45205,45226]"/>
  <match src="identifier: set [18898,18901]" dest="identifier: set [18898,18901]"/>
  <match src="event_definition [45383,45589]" dest="event_definition [47724,47930]"/>
  <match src="type_name [36374,36381]" dest="type_name [38234,38238]"/>
  <match src="primitive_type [46300,46305]" dest="primitive_type [48641,48646]"/>
  <match src="identifier: logRLPList [51001,51011]" dest="identifier: logRLPList [53586,53596]"/>
  <match src="visibility [16044,16052]" dest="visibility [16044,16052]"/>
  <match src="&lt;: &lt; [41713,41714]" dest="&lt;: &lt; [44133,44134]"/>
  <match src="function_body [13308,14780]" dest="function_body [13308,14780]"/>
  <match src="identifier: ids [47591,47594]" dest="identifier: ids [49932,49935]"/>
  <match src="(: ( [13476,13477]" dest="(: ( [13476,13477]"/>
  <match src="return_statement [49122,49139]" dest="return_statement [51463,51480]"/>
  <match src="interface: interface [413,422]" dest="interface: interface [413,422]"/>
  <match src="variable_declaration_statement [42599,42641]" dest="variable_declaration_statement [45008,45049]"/>
  <match src="modifier_invocation [45673,45684]" dest="modifier_invocation [48014,48025]"/>
  <match src="visibility [37355,37363]" dest="visibility [40685,40693]"/>
  <match src="identifier: result [38006,38012]" dest="identifier: result [41015,41021]"/>
  <match src="variable_declaration_statement [51769,51827]" dest="variable_declaration_statement [54292,54345]"/>
  <match src="primitive_type [43753,43758]" dest="primitive_type [46192,46197]"/>
  <match src="bytes: bytes [44340,44345]" dest="bytes: bytes [46779,46784]"/>
  <match src="address: address [22948,22955]" dest="address: address [22948,22955]"/>
  <match src="identifier: returndata [25140,25150]" dest="identifier: returndata [25140,25150]"/>
  <match src="yul_function_call [42404,42414]" dest="yul_function_call [44781,44791]"/>
  <match src="variable_declaration [13420,13438]" dest="variable_declaration [13420,13438]"/>
  <match src="(: ( [16383,16384]" dest="(: ( [16383,16384]"/>
  <match src="parameter [4793,4812]" dest="parameter [4793,4812]"/>
  <match src="parameter [8682,8688]" dest="parameter [8682,8688]"/>
  <match src="true [14712,14716]" dest="true [14712,14716]"/>
  <match src="call_argument [37289,37301]" dest="call_argument [40619,40631]"/>
  <match src="return_type_definition [852,866]" dest="return_type_definition [852,866]"/>
  <match src="}: } [15189,15190]" dest="}: } [15189,15190]"/>
  <match src="): ) [16694,16695]" dest="): ) [16694,16695]"/>
  <match src="}: } [25263,25264]" dest="}: } [25263,25264]"/>
  <match src="string_literal [44997,45011]" dest="string_literal [47338,47352]"/>
  <match src="identifier: abi [47237,47240]" dest="identifier: abi [49578,49581]"/>
  <match src="]: ] [49562,49563]" dest="]: ] [51903,51904]"/>
  <match src="user_defined_type [14885,14888]" dest="user_defined_type [14885,14888]"/>
  <match src="else: else [40408,40412]" dest="else: else [42811,42815]"/>
  <match src="struct: struct [12212,12218]" dest="struct: struct [12212,12218]"/>
  <match src="user_defined_type [18882,18889]" dest="user_defined_type [18882,18889]"/>
  <match src="pragma_directive [44436,44458]" dest="pragma_directive [46875,46897]"/>
  <match src="call_expression [51001,51023]" dest="call_expression [53586,53608]"/>
  <match src="interface: interface [4914,4923]" dest="interface: interface [4914,4923]"/>
  <match src="comment: // 1 byte for the length prefix [37160,37191]" dest="comment: // 1 byte for the length prefix [40527,40558]"/>
  <match src="identifier: value [17692,17697]" dest="identifier: value [17692,17697]"/>
  <match src="parameter [17663,17682]" dest="parameter [17663,17682]"/>
  <match src=".: . [21639,21640]" dest=".: . [21639,21640]"/>
  <match src="identifier: i [35972,35973]" dest="identifier: i [37787,37788]"/>
  <match src="yul_function_call [42694,42704]" dest="yul_function_call [45110,45120]"/>
  <match src="if: if [33555,33557]" dest="if: if [33555,33557]"/>
  <match src="call_argument [39153,39173]" dest="call_argument [41797,41803]"/>
  <match src="function: function [22523,22531]" dest="function: function [22523,22531]"/>
  <match src="string [52322,52324]" dest="string [54451,54453]"/>
  <match src="&gt;=: &gt;= [21477,21479]" dest="&gt;=: &gt;= [21477,21479]"/>
  <match src="primitive_type [4793,4798]" dest="primitive_type [4793,4798]"/>
  <match src="variable_declaration [47167,47191]" dest="variable_declaration [49508,49532]"/>
  <match src="expression_statement [35972,35982]" dest="expression_statement [37787,37797]"/>
  <match src="): ) [25168,25169]" dest="): ) [25168,25169]"/>
  <match src="block_statement [13014,13053]" dest="block_statement [13014,13053]"/>
  <match src="): ) [41878,41879]" dest="): ) [44289,44290]"/>
  <match src="primitive_type [45979,45986]" dest="primitive_type [48320,48327]"/>
  <match src="returns: returns [36326,36333]" dest="returns: returns [38142,38149]"/>
  <match src="): ) [53116,53117]" dest="): ) [55134,55135]"/>
  <match src="comment: // @returns raw rlp encoding in bytes [36622,36659]" dest="comment: // @returns raw rlp encoding in bytes [39375,39412]"/>
  <match src="solidity_version_comparison_operator [19118,19120]" dest="solidity_version_comparison_operator [19118,19120]"/>
  <match src=":=: := [40577,40579]" dest=":=: := [42980,42982]"/>
  <match src="type_name [48623,48630]" dest="type_name [50964,50971]"/>
  <match src="returns: returns [46340,46347]" dest="returns: returns [48681,48688]"/>
  <match src="(: ( [40720,40721]" dest="(: ( [43139,43140]"/>
  <match src="number_literal: 0x80 [34715,34719]" dest="number_literal: 0x80 [34715,34719]"/>
  <match src="event_paramater [1683,1701]" dest="event_paramater [1683,1701]"/>
  <match src="yul_function_call [38037,38049]" dest="yul_function_call [41046,41058]"/>
  <match src="visibility [33733,33740]" dest="visibility [33733,33740]"/>
  <match src="if_statement [40313,41288]" dest="if_statement [42714,43730]"/>
  <match src="identifier: itemLen [40286,40293]" dest="identifier: itemLen [42677,42684]"/>
  <match src="memory: memory [51050,51056]" dest="memory: memory [53635,53641]"/>
  <match src=".: . [39710,39711]" dest=".: . [42191,42192]"/>
  <match src="type_name [23544,23549]" dest="type_name [23544,23549]"/>
  <match src="function: function [17957,17965]" dest="function: function [17957,17965]"/>
  <match src="yul_function_call [41524,41537]" dest="yul_function_call [43957,43970]"/>
  <match src="{: { [13494,13495]" dest="{: { [13494,13495]"/>
  <match src="call_argument [16091,16101]" dest="call_argument [16091,16101]"/>
  <match src="visibility [29646,29652]" dest="visibility [29646,29652]"/>
  <match src="primitive_type [23563,23570]" dest="primitive_type [23563,23570]"/>
  <match src="yul_evm_builtin [40580,40583]" dest="yul_evm_builtin [42983,42986]"/>
  <match src="call_argument [47591,47594]" dest="call_argument [49932,49935]"/>
  <match src="yul_evm_builtin [41524,41529]" dest="yul_evm_builtin [43957,43962]"/>
  <match src="unary_expression [44562,44569]" dest="unary_expression [47001,47008]"/>
  <match src="identifier: item [38187,38191]" dest="identifier: item [41196,41200]"/>
  <match src=",: , [47282,47283]" dest=",: , [49623,49624]"/>
  <match src="event_definition [1338,1454]" dest="event_definition [1338,1454]"/>
  <match src="string: string [34012,34018]" dest="string: string [34012,34018]"/>
  <match src="parameter [49554,49588]" dest="parameter [51895,51929]"/>
  <match src=",: , [45553,45554]" dest=",: , [47894,47895]"/>
  <match src="parameter [37334,37353]" dest="parameter [40664,40683]"/>
  <match src="type_name [14885,14888]" dest="type_name [14885,14888]"/>
  <match src="): ) [33852,33853]" dest="): ) [33852,33853]"/>
  <match src="yul_identifier [41507,41512]" dest="yul_identifier [43940,43945]"/>
  <match src="identifier: require [24131,24138]" dest="identifier: require [24131,24138]"/>
  <match src="call_argument [46980,46992]" dest="call_argument [49321,49333]"/>
  <match src="[: [ [1725,1726]" dest="[: [ [1725,1726]"/>
  <match src="function_body [23043,23122]" dest="function_body [23043,23122]"/>
  <match src="view: view [18458,18462]" dest="view: view [18458,18462]"/>
  <match src="{: { [40991,40992]" dest="{: { [43433,43434]"/>
  <match src="{: { [41492,41493]" dest="{: { [43925,43926]"/>
  <match src="identifier: _length [16880,16887]" dest="identifier: _length [16880,16887]"/>
  <match src="state_variable_declaration [27983,28028]" dest="state_variable_declaration [27983,28028]"/>
  <match src="call_argument [21693,21753]" dest="call_argument [21693,21753]"/>
  <match src=",: , [47616,47617]" dest=",: , [49957,49958]"/>
  <match src="type_name [25999,26014]" dest="type_name [25999,26014]"/>
  <match src="variable_declaration [39689,39703]" dest="variable_declaration [42173,42184]"/>
  <match src=",: , [24058,24059]" dest=",: , [24058,24059]"/>
  <match src="internal: internal [36312,36320]" dest="internal: internal [38128,38136]"/>
  <match src="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [21770,22517]" dest="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [21770,22517]"/>
  <match src="identifier: require [38798,38805]" dest="identifier: require [39918,39925]"/>
  <match src="block_statement [52127,52342]" dest="block_statement [54381,54471]"/>
  <match src="parameter [17717,17721]" dest="parameter [17717,17721]"/>
  <match src="variable_declaration_statement [39689,39729]" dest="variable_declaration_statement [42173,42210]"/>
  <match src="identifier: _at [17368,17371]" dest="identifier: _at [17368,17371]"/>
  <match src="): ) [14590,14591]" dest="): ) [14590,14591]"/>
  <match src="(: ( [20350,20351]" dest="(: ( [20350,20351]"/>
  <match src="identifier: values [1728,1734]" dest="identifier: values [1728,1734]"/>
  <match src="returns: returns [2649,2656]" dest="returns: returns [2649,2656]"/>
  <match src="primitive_type [34012,34018]" dest="primitive_type [34012,34018]"/>
  <match src="}: } [18325,18326]" dest="}: } [18325,18326]"/>
  <match src="primitive_type [16428,16435]" dest="primitive_type [16428,16435]"/>
  <match src="]: ] [47175,47176]" dest="]: ] [49516,49517]"/>
  <match src="{: { [27896,27897]" dest="{: { [27896,27897]"/>
  <match src="type_name [6099,6106]" dest="type_name [6099,6106]"/>
  <match src="call_expression [14574,14591]" dest="call_expression [14574,14591]"/>
  <match src=",: , [4791,4792]" dest=",: , [4791,4792]"/>
  <match src=".: . [18062,18063]" dest=".: . [18062,18063]"/>
  <match src="internal: internal [16830,16838]" dest="internal: internal [16830,16838]"/>
  <match src="parameter [44287,44301]" dest="parameter [46726,46740]"/>
  <match src="new_expression [48997,49010]" dest="new_expression [51338,51351]"/>
  <match src="): ) [21425,21426]" dest="): ) [21425,21426]"/>
  <match src="type_name [39591,39598]" dest="type_name [42081,42085]"/>
  <match src="=: = [34886,34887]" dest="=: = [34892,34893]"/>
  <match src="variable_declaration [48109,48130]" dest="variable_declaration [50450,50471]"/>
  <match src="comment: // Update the index for the moved value [14369,14408]" dest="comment: // Update the index for the moved value [14369,14408]"/>
  <match src="if: if [50209,50211]" dest="if: if [52622,52624]"/>
  <match src="uint256: uint256 [6111,6118]" dest="uint256: uint256 [6111,6118]"/>
  <match src="return_type_definition [41430,41447]" dest="return_type_definition [43869,43883]"/>
  <match src="contract_body [10713,10918]" dest="contract_body [10713,10918]"/>
  <match src="yul_identifier [41237,41244]" dest="yul_identifier [43679,43686]"/>
  <match src="function_body [19877,20430]" dest="function_body [19877,20430]"/>
  <match src="identifier: logRLPList [50908,50918]" dest="identifier: logRLPList [53493,53503]"/>
  <match src="override: override [46046,46054]" dest="override: override [48387,48395]"/>
  <match src="): ) [18316,18317]" dest="): ) [18316,18317]"/>
  <match src="type_name [34012,34018]" dest="type_name [34012,34018]"/>
  <match src="identifier: offset [37833,37839]" dest="identifier: offset [37084,37090]"/>
  <match src="(: ( [26110,26111]" dest="(: ( [26110,26111]"/>
  <match src="call_argument [35347,35353]" dest="call_argument [36228,36234]"/>
  <match src="function: function [36275,36283]" dest="function: function [38091,38099]"/>
  <match src="(: ( [46979,46980]" dest="(: ( [49320,49321]"/>
  <match src="yul_evm_builtin [42404,42409]" dest="yul_evm_builtin [44781,44786]"/>
  <match src="=: = [39605,39606]" dest="=: = [42092,42093]"/>
  <match src="identifier: _values [14320,14327]" dest="identifier: _values [14320,14327]"/>
  <match src=",: , [4238,4239]" dest=",: , [4238,4239]"/>
  <match src="identifier: dataLen [41237,41244]" dest="identifier: dataLen [43679,43686]"/>
  <match src="function: function [16790,16798]" dest="function: function [16790,16798]"/>
  <match src="identifier: len [37978,37981]" dest="identifier: len [40987,40990]"/>
  <match src="identifier: rootToken [47492,47501]" dest="identifier: rootToken [49833,49842]"/>
  <match src="&quot;: &quot; [23713,23714]" dest="&quot;: &quot; [23713,23714]"/>
  <match src="(: ( [25091,25092]" dest="(: ( [25091,25092]"/>
  <match src="address: address [2899,2906]" dest="address: address [2899,2906]"/>
  <match src="library: library [34654,34661]" dest="library: library [34654,34661]"/>
  <match src=".: . [33768,33769]" dest=".: . [33768,33769]"/>
  <match src="(: ( [41620,41621]" dest="(: ( [44067,44068]"/>
  <match src="comment: // File: contracts/root/TokenPredicates/ITokenPredicate.sol [42880,42939]" dest="comment: // File: contracts/root/TokenPredicates/ITokenPredicate.sol [45319,45378]"/>
  <match src="): ) [42776,42777]" dest="): ) [45196,45197]"/>
  <match src="=: = [45143,45144]" dest="=: = [47484,47485]"/>
  <match src="(: ( [41856,41857]" dest="(: ( [44267,44268]"/>
  <match src="=: = [51065,51066]" dest="=: = [53650,53651]"/>
  <match src="(: ( [9528,9529]" dest="(: ( [9528,9529]"/>
  <match src="string_literal [53520,53568]" dest="string_literal [55817,55865]"/>
  <match src="identifier: UintSet [17663,17670]" dest="identifier: UintSet [17663,17670]"/>
  <match src="type_name [18027,18031]" dest="type_name [18027,18031]"/>
  <match src="(: ( [34224,34225]" dest="(: ( [34224,34225]"/>
  <match src=".: . [26280,26281]" dest=".: . [26280,26281]"/>
  <match src="type_name [45540,45549]" dest="type_name [47881,47890]"/>
  <match src="false [13036,13041]" dest="false [13036,13041]"/>
  <match src="): ) [10405,10406]" dest="): ) [10405,10406]"/>
  <match src="yul_path [41530,41536]" dest="yul_path [43963,43969]"/>
  <match src="comment: /**      * @dev Registers the contract as an implementer of the interface defined by      * `interfaceId`. Support of the actual ERC165 interface is automatic and      * registering its interface id is not required.      *      * See {IERC165-supportsInterface}.      *      * Requirements:      *      * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).      */ [9865,10258]" dest="comment: /**      * @dev Registers the contract as an implementer of the interface defined by      * `interfaceId`. Support of the actual ERC165 interface is automatic and      * registering its interface id is not required.      *      * See {IERC165-supportsInterface}.      *      * Requirements:      *      * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).      */ [9865,10258]"/>
  <match src="primitive_type [48170,48177]" dest="primitive_type [50511,50518]"/>
  <match src="public: public [29339,29345]" dest="public: public [29339,29345]"/>
  <match src="comment: // right shifting to get the len [40745,40777]" dest="comment: // right shifting to get the len [43164,43196]"/>
  <match src="identifier: set [15559,15562]" dest="identifier: set [15559,15562]"/>
  <match src="primitive_type [6163,6168]" dest="primitive_type [6163,6168]"/>
  <match src="primitive_type [48137,48144]" dest="primitive_type [50478,50485]"/>
  <match src="{: { [34672,34673]" dest="{: { [34672,34673]"/>
  <match src="binary_expression [38531,38546]" dest="binary_expression [41342,41357]"/>
  <match src="visibility [40084,40091]" dest="visibility [42471,42478]"/>
  <match src="-: - [42637,42638]" dest="-: - [45045,45046]"/>
  <match src="memory: memory [23550,23556]" dest="memory: memory [23550,23556]"/>
  <match src="internal: internal [17699,17707]" dest="internal: internal [17699,17707]"/>
  <match src="primitive_type [15601,15608]" dest="primitive_type [15601,15608]"/>
  <match src="identifier: WORD_SIZE [42620,42629]" dest="identifier: WORD_SIZE [45028,45037]"/>
  <match src="call_argument [16436,16450]" dest="call_argument [16436,16450]"/>
  <match src="array_access [31598,31610]" dest="array_access [31598,31610]"/>
  <match src=".: . [14672,14673]" dest=".: . [14672,14673]"/>
  <match src="call_argument [17766,17771]" dest="call_argument [17766,17771]"/>
  <match src="visibility [31556,31562]" dest="visibility [31556,31562]"/>
  <match src="primitive_type [9284,9290]" dest="primitive_type [9284,9290]"/>
  <match src="): ) [32293,32294]" dest="): ) [32293,32294]"/>
  <match src="type_cast_expression [18968,18999]" dest="type_cast_expression [18968,18999]"/>
  <match src="comment: // File: contracts/lib/RLPReader.sol [34362,34398]" dest="comment: // File: contracts/lib/RLPReader.sol [34362,34398]"/>
  <match src="primitive_type [23029,23034]" dest="primitive_type [23029,23034]"/>
  <match src="{: { [41448,41449]" dest="{: { [43884,43885]"/>
  <match src="bytes: bytes [26111,26116]" dest="bytes: bytes [26111,26116]"/>
  <match src="function_definition [33278,33477]" dest="function_definition [33278,33477]"/>
  <match src="identifier: toList [35442,35448]" dest="identifier: toList [37470,37476]"/>
  <match src="): ) [15608,15609]" dest="): ) [15608,15609]"/>
  <match src="if: if [42224,42226]" dest="if: if [44601,44603]"/>
  <match src="(: ( [51415,51416]" dest="(: ( [54015,54016]"/>
  <match src="]: ] [50315,50316]" dest="]: ] [52728,52729]"/>
  <match src="return: return [37274,37280]" dest="return: return [40604,40610]"/>
  <match src="primitive_type [51501,51508]" dest="primitive_type [54088,54095]"/>
  <match src="): ) [48198,48199]" dest="): ) [50539,50540]"/>
  <match src="identifier: _registerInterface [10752,10770]" dest="identifier: _registerInterface [10752,10770]"/>
  <match src="identifier: length [12964,12970]" dest="identifier: length [12964,12970]"/>
  <match src="identifier: depositReceiver [46869,46884]" dest="identifier: depositReceiver [49210,49225]"/>
  <match src="comment: // We read and store the value's index to prevent multiple reads from the same storage slot [13319,13410]" dest="comment: // We read and store the value's index to prevent multiple reads from the same storage slot [13319,13410]"/>
  <match src="primitive_type [18472,18479]" dest="primitive_type [18472,18479]"/>
  <match src="if_statement [40413,41288]" dest="if_statement [42816,43730]"/>
  <match src="call_expression [34272,34299]" dest="call_expression [34272,34299]"/>
  <match src="parameter [3308,3321]" dest="parameter [3308,3321]"/>
  <match src="): ) [6182,6183]" dest="): ) [6182,6183]"/>
  <match src="call_argument [16111,16125]" dest="call_argument [16111,16125]"/>
  <match src=",: , [52175,52176]" dest=",: , [54421,54422]"/>
  <match src="identifier: safeBatchTransferFrom [47503,47524]" dest="identifier: safeBatchTransferFrom [49844,49865]"/>
  <match src="yul_function_call [39108,39125]" dest="yul_function_call [41752,41769]"/>
  <match src="}: } [34202,34203]" dest="}: } [34202,34203]"/>
  <match src="}: } [53491,53492]" dest="}: } [55788,55789]"/>
  <match src="identifier: AddressSet [16327,16337]" dest="identifier: AddressSet [16327,16337]"/>
  <match src="member_expression [18507,18517]" dest="member_expression [18507,18517]"/>
  <match src="(: ( [45810,45811]" dest="(: ( [48151,48152]"/>
  <match src="&lt;: &lt; [39754,39755]" dest="&lt;: &lt; [42235,42236]"/>
  <match src="identifier: LIST_LONG_START [41715,41730]" dest="identifier: LIST_LONG_START [44135,44150]"/>
  <match src="variable_declaration [39591,39604]" dest="variable_declaration [42081,42091]"/>
  <match src="parameter [50811,50827]" dest="parameter [53396,53412]"/>
  <match src="): ) [16630,16631]" dest="): ) [16630,16631]"/>
  <match src="comment: // File: @openzeppelin/contracts/GSN/Context.sol [25289,25337]" dest="comment: // File: @openzeppelin/contracts/GSN/Context.sol [25289,25337]"/>
  <match src="yul_evm_builtin [40717,40720]" dest="yul_evm_builtin [43136,43139]"/>
  <match src="primitive_type [50783,50790]" dest="primitive_type [53368,53375]"/>
  <match src="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [20438,21359]" dest="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [20438,21359]"/>
  <match src="{: { [17723,17724]" dest="{: { [17723,17724]"/>
  <match src="yul_identifier [40570,40576]" dest="yul_identifier [42973,42979]"/>
  <match src="}: } [14994,14995]" dest="}: } [14994,14995]"/>
  <match src="visibility [46322,46330]" dest="visibility [48663,48671]"/>
  <match src="call_argument [31637,31687]" dest="call_argument [31637,31687]"/>
  <match src="yul_evm_builtin [42766,42771]" dest="yul_evm_builtin [45186,45191]"/>
  <match src="virtual: virtual [33343,33350]" dest="virtual: virtual [33343,33350]"/>
  <match src="bytes32: bytes32 [14179,14186]" dest="bytes32: bytes32 [14179,14186]"/>
  <match src="primitive_type [51513,51520]" dest="primitive_type [54100,54107]"/>
  <match src="event: event [2350,2355]" dest="event: event [2350,2355]"/>
  <match src="contract_body [43140,44385]" dest="contract_body [45579,46824]"/>
  <match src="primitive_type [4765,4772]" dest="primitive_type [4765,4772]"/>
  <match src="type_cast_expression [18303,18317]" dest="type_cast_expression [18303,18317]"/>
  <match src="expression_statement [34116,34196]" dest="expression_statement [34116,34196]"/>
  <match src="yul_identifier [40584,40590]" dest="yul_identifier [42987,42993]"/>
  <match src="identifier: len [38949,38952]" dest="identifier: len [38736,38739]"/>
  <match src="^:  ^ [10592,10594]" dest="^:  ^ [10592,10594]"/>
  <match src=",: , [46231,46232]" dest=",: , [48572,48573]"/>
  <match src="identifier: at [30451,30453]" dest="identifier: at [30451,30453]"/>
  <match src="call_expression [33559,33592]" dest="call_expression [33559,33592]"/>
  <match src="return_type_definition [2966,2992]" dest="return_type_definition [2966,2992]"/>
  <match src="(: ( [42709,42710]" dest="(: ( [45125,45126]"/>
  <match src="yul_path [37890,37896]" dest="yul_path [40899,40905]"/>
  <match src="function: function [32242,32250]" dest="function: function [32242,32250]"/>
  <match src="uint256: uint256 [45997,46004]" dest="uint256: uint256 [48338,48345]"/>
  <match src="call_argument [16444,16449]" dest="call_argument [16444,16449]"/>
  <match src="): ) [33792,33793]" dest="): ) [33792,33793]"/>
  <match src="override: override [46331,46339]" dest="override: override [48672,48680]"/>
  <match src="calldata: calldata [4799,4807]" dest="calldata: calldata [4799,4807]"/>
  <match src="source_file [0,53591]" dest="source_file [0,55888]"/>
  <match src="memory: memory [22567,22573]" dest="memory: memory [22567,22573]"/>
  <match src="call_expression [35562,35574]" dest="call_expression [37558,37570]"/>
  <match src="identifier: tokenBalance [52104,52116]" dest="identifier: balance [54363,54370]"/>
  <match src="): ) [17772,17773]" dest="): ) [17772,17773]"/>
  <match src="}: } [36562,36563]" dest="}: } [38432,38433]"/>
  <match src="identifier: MANAGER_ROLE [46980,46992]" dest="identifier: MANAGER_ROLE [49321,49333]"/>
  <match src="): ) [47233,47234]" dest="): ) [49574,49575]"/>
  <match src="}: } [42865,42866]" dest="}: } [45293,45294]"/>
  <match src="): ) [38927,38928]" dest="): ) [37044,37045]"/>
  <match src="identifier: mask [42710,42714]" dest="identifier: mask [45126,45130]"/>
  <match src="bool: bool [16626,16630]" dest="bool: bool [16626,16630]"/>
  <match src="identifier: id [1435,1437]" dest="identifier: id [1435,1437]"/>
  <match src=",: , [45493,45494]" dest=",: , [47834,47835]"/>
  <match src="): ) [39677,39678]" dest="): ) [37735,37736]"/>
  <match src="identifier: item [38775,38779]" dest="identifier: item [38706,38710]"/>
  <match src="): ) [10906,10907]" dest="): ) [10906,10907]"/>
  <match src="string_literal [45307,45367]" dest="string_literal [47648,47708]"/>
  <match src="identifier: contractId [34084,34094]" dest="identifier: contractId [34084,34094]"/>
  <match src="function_body [12715,13060]" dest="function_body [12715,13060]"/>
  <match src="identifier: RoleGranted [28732,28743]" dest="identifier: RoleGranted [28732,28743]"/>
  <match src="&quot;: &quot; [24516,24517]" dest="&quot;: &quot; [24516,24517]"/>
  <match src="comment: /**      * @dev Returns one of the accounts that have `role`. `index` must be a      * value between 0 and {getRoleMemberCount}, non-inclusive.      *      * Role bearers are not sorted in any particular way, and their ordering may      * change at any point.      *      * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure      * you perform all queries on the same block. See the following      * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]      * for more information.      */ [29739,30324]" dest="comment: /**      * @dev Returns one of the accounts that have `role`. `index` must be a      * value between 0 and {getRoleMemberCount}, non-inclusive.      *      * Role bearers are not sorted in any particular way, and their ordering may      * change at any point.      *      * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure      * you perform all queries on the same block. See the following      * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]      * for more information.      */ [29739,30324]"/>
  <match src="): ) [44541,44542]" dest="): ) [46980,46981]"/>
  <match src="identifier: role [33062,33066]" dest="identifier: role [33062,33066]"/>
  <match src="call_argument [32354,32403]" dest="call_argument [32354,32403]"/>
  <match src="state_mutability [18458,18462]" dest="state_mutability [18458,18462]"/>
  <match src="return: return [48252,48258]" dest="return: return [50593,50599]"/>
  <match src="visibility [838,846]" dest="visibility [838,846]"/>
  <match src="variable_declaration_statement [52657,52801]" dest="variable_declaration_statement [54810,54954]"/>
  <match src="inheritance_specifier [44823,44841]" dest="inheritance_specifier [47164,47182]"/>
  <match src=",: , [8517,8518]" dest=",: , [8517,8518]"/>
  <match src="=: = [45285,45286]" dest="=: = [47626,47627]"/>
  <match src="member_expression [35334,35345]" dest="member_expression [36215,36226]"/>
  <match src="type_name [5486,5491]" dest="type_name [5486,5491]"/>
  <match src="emit_statement [33362,33425]" dest="emit_statement [33362,33425]"/>
  <match src="number_literal: 0 [51406,51407]" dest="number_literal: 0 [54006,54007]"/>
  <match src="binary_expression [38955,38972]" dest="binary_expression [37112,37129]"/>
  <match src="identifier: RLPItem [44932,44939]" dest="identifier: RLPItem [47273,47280]"/>
  <match src="type_name [33054,33061]" dest="type_name [33054,33061]"/>
  <match src="function_body [34105,34203]" dest="function_body [34105,34203]"/>
  <match src="(: ( [34152,34153]" dest="(: ( [34152,34153]"/>
  <match src="identifier: amount [51521,51527]" dest="identifier: amount [54108,54114]"/>
  <match src="string_literal [48886,48944]" dest="string_literal [51227,51285]"/>
  <match src="identifier: destpart [42836,42844]" dest="identifier: destpart [45260,45268]"/>
  <match src="function_definition [23497,23723]" dest="function_definition [23497,23723]"/>
  <match src="identifier: success [24597,24604]" dest="identifier: success [24597,24604]"/>
  <match src="internal: internal [35079,35087]" dest="internal: internal [36056,36064]"/>
  <match src="yul_function_call [40217,40230]" dest="yul_function_call [42595,42608]"/>
  <match src="primitive_type [28422,28429]" dest="primitive_type [28422,28429]"/>
  <match src="memory: memory [2985,2991]" dest="memory: memory [2985,2991]"/>
  <match src="): ) [29337,29338]" dest="): ) [29337,29338]"/>
  <match src="assembly_statement [38557,38615]" dest="assembly_statement [41368,41426]"/>
  <match src="yul_identifier [42772,42776]" dest="yul_identifier [45192,45196]"/>
  <match src="): ) [24691,24692]" dest="): ) [24691,24692]"/>
  <match src="primitive_type [44948,44955]" dest="primitive_type [47289,47296]"/>
  <match src="identifier: codehash [20327,20335]" dest="identifier: codehash [20327,20335]"/>
  <match src="comment: // skip over the first byte [40595,40622]" dest="comment: // skip over the first byte [42998,43025]"/>
  <match src="return_statement [36521,36534]" dest="return_statement [38391,38404]"/>
  <match src="yul_assignment [36437,36468]" dest="yul_assignment [38294,38325]"/>
  <match src="primitive_type [12432,12439]" dest="primitive_type [12432,12439]"/>
  <match src=".: . [36822,36823]" dest=".: . [39543,39544]"/>
  <match src="): ) [35645,35646]" dest="): ) [37610,37611]"/>
  <match src="(: ( [51677,51678]" dest="(: ( [54264,54265]"/>
  <match src="identifier: set [17372,17375]" dest="identifier: set [17372,17375]"/>
  <match src="type_name [32264,32271]" dest="type_name [32264,32271]"/>
  <match src="member_expression [12930,12942]" dest="member_expression [12930,12942]"/>
  <match src="pragma: pragma [26396,26402]" dest="pragma: pragma [26396,26402]"/>
  <match src=":=: := [41230,41232]" dest=":=: := [43672,43674]"/>
  <match src="external: external [2952,2960]" dest="external: external [2952,2960]"/>
  <match src="type_name [36335,36339]" dest="type_name [38151,38155]"/>
  <match src="type_cast_expression [51221,51257]" dest="type_cast_expression [53806,53842]"/>
  <match src="(: ( [10800,10801]" dest="(: ( [10800,10801]"/>
  <match src=".: . [30450,30451]" dest=".: . [30450,30451]"/>
  <match src=".: . [38424,38425]" dest=".: . [41282,41283]"/>
  <match src="(: ( [18197,18198]" dest="(: ( [18197,18198]"/>
  <match src="comment: // in bytes32. [12190,12204]" dest="comment: // in bytes32. [12190,12204]"/>
  <match src="primitive_type [34679,34684]" dest="primitive_type [34679,34684]"/>
  <match src="}: } [22695,22696]" dest="}: } [22695,22696]"/>
  <match src="parameter [33301,33313]" dest="parameter [33301,33313]"/>
  <match src="interface_declaration [4914,6196]" dest="interface_declaration [4914,6196]"/>
  <match src="identifier: size [48004,48008]" dest="identifier: size [50345,50349]"/>
  <match src="expression_statement [50273,50336]" dest="expression_statement [52686,52749]"/>
  <match src="comment: /**      * @notice Creates an array of `size` by repeating provided address,      * to be required for passing to batch balance checking function of ERC1155 tokens.      * @param addr Address to be repeated `size` times in resulting array      * @param size Size of resulting array      */ [48279,48573]" dest="comment: /**      * @notice Creates an array of `size` by repeating provided address,      * to be required for passing to batch balance checking function of ERC1155 tokens.      * @param addr Address to be repeated `size` times in resulting array      * @param size Size of resulting array      */ [50620,50914]"/>
  <match src="identifier: tokenBalances [49670,49683]" dest="identifier: tokenBalances [52023,52036]"/>
  <match src="function_definition [35032,35362]" dest="function_definition [36018,36243]"/>
  <match src="bytes: bytes [5486,5491]" dest="bytes: bytes [5486,5491]"/>
  <match src="): ) [31633,31634]" dest="): ) [31633,31634]"/>
  <match src="identifier: currPtr [39627,39634]" dest="identifier: memPtr [37686,37692]"/>
  <match src="identifier: RLPReader [44922,44931]" dest="identifier: RLPReader [47263,47272]"/>
  <match src="identifier: IERC165 [423,430]" dest="identifier: IERC165 [423,430]"/>
  <match src="}: } [31259,31260]" dest="}: } [31259,31260]"/>
  <match src="indexed: indexed [28430,28437]" dest="indexed: indexed [28430,28437]"/>
  <match src="identifier: amount [4232,4238]" dest="identifier: amount [4232,4238]"/>
  <match src="member_expression [39706,39717]" dest="member_expression [42187,42198]"/>
  <match src="for: for [48165,48168]" dest="for: for [50506,50509]"/>
  <match src="(: ( [24663,24664]" dest="(: ( [24663,24664]"/>
  <match src="primitive_type [4729,4736]" dest="primitive_type [4729,4736]"/>
  <match src=",: , [47431,47432]" dest=",: , [49772,49773]"/>
  <match src="number_literal: 0 [48011,48012]" dest="number_literal: 0 [50352,50353]"/>
  <match src="primitive_type [52764,52771]" dest="primitive_type [54917,54924]"/>
  <match src="): ) [53568,53569]" dest="): ) [55865,55866]"/>
  <match src="yul_path [41029,41034]" dest="yul_path [43471,43476]"/>
  <match src=",: , [50772,50773]" dest=",: , [53357,53358]"/>
  <match src="type_name [36352,36357]" dest="type_name [38212,38217]"/>
  <match src="call_expression [10340,10406]" dest="call_expression [10340,10406]"/>
  <match src="member_expression [14316,14327]" dest="member_expression [14316,14327]"/>
  <match src="call_argument [29414,29421]" dest="call_argument [29414,29421]"/>
  <match src="comment: /**  * @dev Collection of functions related to the address type  */ [19130,19199]" dest="comment: /**  * @dev Collection of functions related to the address type  */ [19130,19199]"/>
  <match src="): ) [24517,24518]" dest="): ) [24517,24518]"/>
  <match src="): ) [41040,41041]" dest="): ) [43482,43483]"/>
  <match src="parameter [15098,15113]" dest="parameter [15098,15113]"/>
  <match src="false: false [13036,13041]" dest="false: false [13036,13041]"/>
  <match src="identifier: _revokeRole [31701,31712]" dest="identifier: _revokeRole [31701,31712]"/>
  <match src="{: { [53498,53499]" dest="{: { [55795,55796]"/>
  <match src="view: view [26089,26093]" dest="view: view [26089,26093]"/>
  <match src="identifier: depositReceiver [47374,47389]" dest="identifier: depositReceiver [49715,49730]"/>
  <match src="identifier: length [16799,16805]" dest="identifier: length [16799,16805]"/>
  <match src="primitive_type [5486,5491]" dest="primitive_type [5486,5491]"/>
  <match src="call_argument [51390,51417]" dest="call_argument [53990,54017]"/>
  <match src="primitive_type [31066,31073]" dest="primitive_type [31066,31073]"/>
  <match src="identifier: EnumerableSet [11742,11755]" dest="identifier: EnumerableSet [11742,11755]"/>
  <match src="+: + [14462,14463]" dest="+: + [14462,14463]"/>
  <match src="identifier: _functionCallWithValue [24230,24252]" dest="identifier: _functionCallWithValue [24230,24252]"/>
  <match src="state_variable_declaration [45019,45085]" dest="state_variable_declaration [47360,47426]"/>
  <match src="(: ( [36937,36938]" dest="(: ( [39711,39712]"/>
  <match src="return_statement [36976,36990]" dest="return_statement [39750,39764]"/>
  <match src="primitive_type [15137,15144]" dest="primitive_type [15137,15144]"/>
  <match src="member_expression [33756,33776]" dest="member_expression [33756,33776]"/>
  <match src="variable_declaration [38236,38254]" dest="variable_declaration [39973,39984]"/>
  <match src="function_definition [29291,29430]" dest="function_definition [29291,29430]"/>
  <match src="identifier: role [31060,31064]" dest="identifier: role [31060,31064]"/>
  <match src="abstract: abstract [25913,25921]" dest="abstract: abstract [25913,25921]"/>
  <match src="identifier: memPtr [36460,36466]" dest="identifier: memPtr [38317,38323]"/>
  <match src=".: . [47502,47503]" dest=".: . [49843,49844]"/>
  <match src="identifier: token [51653,51658]" dest="identifier: token [54240,54245]"/>
  <match src="pure: pure [36733,36737]" dest="pure: pure [39468,39472]"/>
  <match src="address: address [45462,45469]" dest="address: address [47803,47810]"/>
  <match src="visibility [42200,42207]" dest="visibility [44577,44584]"/>
  <match src="identifier: accountHash [20168,20179]" dest="identifier: accountHash [20168,20179]"/>
  <match src="function_body [38225,38648]" dest="function_body [41231,41459]"/>
  <match src="return_statement [38089,38103]" dest="return_statement [41098,41112]"/>
  <match src="comment: // The Set implementation uses private functions, and user-facing [11940,12005]" dest="comment: // The Set implementation uses private functions, and user-facing [11940,12005]"/>
  <match src=",: , [42147,42148]" dest=",: , [44554,44555]"/>
  <match src="identifier: set [16024,16027]" dest="identifier: set [16024,16027]"/>
  <match src="bytes32: bytes32 [16672,16679]" dest="bytes32: bytes32 [16672,16679]"/>
  <match src="constant: constant [44963,44971]" dest="constant: constant [47304,47312]"/>
  <match src="event_paramater [1703,1716]" dest="event_paramater [1703,1716]"/>
  <match src="user_defined_type [6403,6410]" dest="user_defined_type [6403,6410]"/>
  <match src="identifier: onERC1155BatchReceived [8468,8490]" dest="identifier: onERC1155BatchReceived [8468,8490]"/>
  <match src="{: { [35543,35544]" dest="{: { [37539,37540]"/>
  <match src="): ) [3544,3545]" dest="): ) [3544,3545]"/>
  <match src="}: } [15737,15738]" dest="}: } [15737,15738]"/>
  <match src="type_name [50811,50816]" dest="type_name [53396,53401]"/>
  <match src="}: } [23722,23723]" dest="}: } [23722,23723]"/>
  <match src="identifier: IMintableERC1155 [52817,52833]" dest="identifier: IMintableERC1155 [54970,54986]"/>
  <match src=".: . [10821,10822]" dest=".: . [10821,10822]"/>
  <match src="(: ( [29127,29128]" dest="(: ( [29127,29128]"/>
  <match src="identifier: data [26281,26285]" dest="identifier: data [26281,26285]"/>
  <match src="identifier: remove [17966,17972]" dest="identifier: remove [17966,17972]"/>
  <match src="expression_statement [31582,31689]" dest="expression_statement [31582,31689]"/>
  <match src="type_cast_expression [16672,16695]" dest="type_cast_expression [16672,16695]"/>
  <match src="address: address [25999,26006]" dest="address: address [25999,26006]"/>
  <match src="return: return [35319,35325]" dest="return: return [36200,36206]"/>
  <match src="): ) [37301,37302]" dest="): ) [40631,40632]"/>
  <match src="member_expression [49670,49690]" dest="member_expression [52023,52043]"/>
  <match src="=: = [50999,51000]" dest="=: = [53584,53585]"/>
  <match src="number_literal: 1 [41750,41751]" dest="number_literal: 1 [44173,44174]"/>
  <match src="string: string [34070,34076]" dest="string: string [34070,34076]"/>
  <match src="calldata: calldata [46252,46260]" dest="calldata: calldata [48593,48601]"/>
  <match src="binary_expression [41635,41660]" dest="binary_expression [44068,44093]"/>
  <match src="identifier: data [24039,24043]" dest="identifier: data [24039,24043]"/>
  <match src="): ) [37108,37109]" dest="): ) [39181,39182]"/>
  <match src="uint8: uint8 [36352,36357]" dest="uint8: uint8 [38212,38217]"/>
  <match src="function_definition [40047,41322]" dest="function_definition [42437,43764]"/>
  <match src="returns: returns [23020,23027]" dest="returns: returns [23020,23027]"/>
  <match src="identifier: value [12786,12791]" dest="identifier: value [12786,12791]"/>
  <match src="=: = [48223,48224]" dest="=: = [50564,50565]"/>
  <match src="identifier: depositor [46841,46850]" dest="identifier: depositor [49182,49191]"/>
  <match src="identifier: RLPItem [37024,37031]" dest="identifier: RLPItem [40463,40470]"/>
  <match src="binary_expression [41678,41703]" dest="binary_expression [44098,44123]"/>
  <match src="type_name [10292,10298]" dest="type_name [10292,10298]"/>
  <match src="function_body [36775,36997]" dest="function_body [39496,39771]"/>
  <match src="identifier: valueIndex [13863,13873]" dest="identifier: valueIndex [13863,13873]"/>
  <match src="parameter [23596,23608]" dest="parameter [23596,23608]"/>
  <match src="type_name [48170,48177]" dest="type_name [50511,50518]"/>
  <match src="return: return [41593,41599]" dest="return: return [44040,44046]"/>
  <match src=",: , [51271,51272]" dest=",: , [53856,53857]"/>
  <match src="(: ( [44276,44277]" dest="(: ( [46715,46716]"/>
  <match src="): ) [24850,24851]" dest="): ) [24850,24851]"/>
  <match src="augmented_assignment_expression [42477,42494]" dest="augmented_assignment_expression [44854,44871]"/>
  <match src=",: , [18990,18991]" dest=",: , [18990,18991]"/>
  <match src="primitive_type [36335,36339]" dest="primitive_type [38151,38155]"/>
  <match src="identifier: require [15621,15628]" dest="identifier: require [15621,15628]"/>
  <match src="function_body [9361,9558]" dest="function_body [9361,9558]"/>
  <match src="return_type_definition [30705,30722]" dest="return_type_definition [30705,30722]"/>
  <match src="identifier: size [49053,49057]" dest="identifier: size [51394,51398]"/>
  <match src="): ) [52704,52705]" dest="): ) [54857,54858]"/>
  <match src="function_body [10329,10465]" dest="function_body [10329,10465]"/>
  <match src="uint256: uint256 [51501,51508]" dest="uint256: uint256 [54088,54095]"/>
  <match src="{: { [21436,21437]" dest="{: { [21436,21437]"/>
  <match src="user_defined_type [37334,37341]" dest="user_defined_type [40664,40671]"/>
  <match src="identifier: depositData [46938,46949]" dest="identifier: depositData [49279,49290]"/>
  <match src="byte: byte [36446,36450]" dest="byte: byte [38303,38307]"/>
  <match src="expression_statement [52358,52531]" dest="expression_statement [54523,54721]"/>
  <match src="type_name [52680,52687]" dest="type_name [54833,54840]"/>
  <match src="type_name [18472,18479]" dest="type_name [18472,18479]"/>
  <match src="state_mutability [14925,14929]" dest="state_mutability [14925,14929]"/>
  <match src="primitive_type [17287,17294]" dest="primitive_type [17287,17294]"/>
  <match src="(: ( [35902,35903]" dest="(: ( [42149,42150]"/>
  <match src="block_statement [50194,50362]" dest="block_statement [52607,52913]"/>
  <match src="parameter [47920,47929]" dest="parameter [50261,50270]"/>
  <match src="identifier: result [35674,35680]" dest="identifier: result [37639,37645]"/>
  <match src="return: return [46368,46374]" dest="return: return [48709,48715]"/>
  <match src="type_name [38514,38521]" dest="type_name [41328,41332]"/>
  <match src="primitive_type [17325,17332]" dest="primitive_type [17325,17332]"/>
  <match src="number_literal: 0xc0 [34806,34810]" dest="number_literal: 0xc0 [34809,34813]"/>
  <match src="primitive_type [24351,24356]" dest="primitive_type [24351,24356]"/>
  <match src="call_argument [33626,33630]" dest="call_argument [33626,33630]"/>
  <match src="mload: mload [37884,37889]" dest="mload: mload [40893,40898]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [10542,10573]" dest="comment: // SPDX-License-Identifier: MIT [10542,10573]"/>
  <match src="type_name [18903,18910]" dest="type_name [18903,18910]"/>
  <match src="call_argument [9529,9549]" dest="call_argument [9529,9549]"/>
  <match src="{: { [27784,27785]" dest="{: { [27784,27785]"/>
  <match src=".: . [38824,38825]" dest=".: . [39930,39931]"/>
  <match src="yul_assignment [20327,20359]" dest="yul_assignment [20327,20359]"/>
  <match src="visibility [38193,38201]" dest="visibility [41202,41210]"/>
  <match src="call_argument [17746,17756]" dest="call_argument [17746,17756]"/>
  <match src="): ) [31213,31214]" dest="): ) [31213,31214]"/>
  <match src="contract_declaration [27741,33876]" dest="contract_declaration [27741,33876]"/>
  <match src="calldata: calldata [8561,8569]" dest="calldata: calldata [8561,8569]"/>
  <match src="identifier: LIST_LONG_START [41915,41930]" dest="identifier: LIST_LONG_START [44339,44354]"/>
  <match src="comment: /**      * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`      *      * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite      * {RoleAdminChanged} not being emitted signaling this.      *      * _Available since v3.1._      */ [28094,28393]" dest="comment: /**      * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`      *      * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite      * {RoleAdminChanged} not being emitted signaling this.      *      * _Available since v3.1._      */ [28094,28393]"/>
  <match src="member_expression [33435,33457]" dest="member_expression [33435,33457]"/>
  <match src="identifier: RoleGranted [33614,33625]" dest="identifier: RoleGranted [33614,33625]"/>
  <match src="solidity_version: 0.6.2 [19120,19125]" dest="solidity_version: 0.6.2 [19120,19125]"/>
  <match src="identifier: setApprovalForAll [3272,3289]" dest="identifier: setApprovalForAll [3272,3289]"/>
  <match src=",: , [24484,24485]" dest=",: , [24484,24485]"/>
  <match src="comment: // Please note, in some cases it can be 0, but that will not [49999,50059]" dest="comment: // Please note, in some cases it can be 0, but that will not [52412,52472]"/>
  <match src="primitive_type [47907,47914]" dest="primitive_type [50248,50255]"/>
  <match src="memory: memory [24032,24038]" dest="memory: memory [24032,24038]"/>
  <match src="identifier: set [17989,17992]" dest="identifier: set [17989,17992]"/>
  <match src="identifier: ids [47149,47152]" dest="identifier: ids [49490,49493]"/>
  <match src="primitive_type [16853,16860]" dest="primitive_type [16853,16860]"/>
  <match src="identifier: _grantRole [31227,31237]" dest="identifier: _grantRole [31227,31237]"/>
  <match src="identifier: memPtr [36107,36113]" dest="identifier: memPtr [37923,37929]"/>
  <match src="parameter [46271,46289]" dest="parameter [48612,48630]"/>
  <match src="true [12992,12996]" dest="true [12992,12996]"/>
  <match src="identifier: RLPItem [38172,38179]" dest="identifier: RLPItem [41181,41188]"/>
  <match src="identifier: item [37819,37823]" dest="identifier: item [37070,37074]"/>
  <match src="bytes32: bytes32 [34225,34232]" dest="bytes32: bytes32 [34225,34232]"/>
  <match src="bytes: bytes [39024,39029]" dest="bytes: bytes [41671,41676]"/>
  <match src="identifier: this [26136,26140]" dest="identifier: this [26136,26140]"/>
  <match src=",: , [43680,43681]" dest=",: , [46119,46120]"/>
  <match src="parenthesized_expression [53519,53569]" dest="parenthesized_expression [55816,55866]"/>
  <match src="identifier: length [29715,29721]" dest="identifier: length [29715,29721]"/>
  <match src="parameter [14902,14915]" dest="parameter [14902,14915]"/>
  <match src="emit: emit [33809,33813]" dest="emit: emit [33809,33813]"/>
  <match src="comment: // being explicit [41810,41827]" dest="comment: // being explicit [44221,44238]"/>
  <match src="primitive_type [7362,7369]" dest="primitive_type [7362,7369]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [23130,23491]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [23130,23491]"/>
  <match src="type_name [8551,8558]" dest="type_name [8551,8558]"/>
  <match src="primitive_type [45019,45026]" dest="primitive_type [47360,47367]"/>
  <match src="): ) [41536,41537]" dest="): ) [43969,43970]"/>
  <match src="identifier: members [27932,27939]" dest="identifier: members [27932,27939]"/>
  <match src=",: , [35289,35290]" dest=",: , [36170,36171]"/>
  <match src="primitive_type [1661,1668]" dest="primitive_type [1661,1668]"/>
  <match src="primitive_type [45504,45511]" dest="primitive_type [47845,47852]"/>
  <match src="yul_assignment [39097,39125]" dest="yul_assignment [41741,41769]"/>
  <match src="-: - [13931,13932]" dest="-: - [13931,13932]"/>
  <match src="storage: storage [16817,16824]" dest="storage: storage [16817,16824]"/>
  <match src="identifier: byte0 [40417,40422]" dest="identifier: byte0 [42820,42825]"/>
  <match src="bytes32: bytes32 [16103,16110]" dest="bytes32: bytes32 [16103,16110]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [20259,20306]" dest="comment: // solhint-disable-next-line no-inline-assembly [20259,20306]"/>
  <match src="call_argument [16672,16695]" dest="call_argument [16672,16695]"/>
  <match src="function_definition [17957,18094]" dest="function_definition [17957,18094]"/>
  <match src="identifier: _revokeRole [32417,32428]" dest="identifier: _revokeRole [32417,32428]"/>
  <match src="type_name [1439,1446]" dest="type_name [1439,1446]"/>
  <match src="comment: // implementations (such as AddressSet) are just wrappers around the [12011,12079]" dest="comment: // implementations (such as AddressSet) are just wrappers around the [12011,12079]"/>
  <match src=".: . [39641,39642]" dest=".: . [37699,37700]"/>
  <match src="uint256: uint256 [2928,2935]" dest="uint256: uint256 [2928,2935]"/>
  <match src="user_defined_type [4944,4952]" dest="user_defined_type [4944,4952]"/>
  <match src="uint256: uint256 [30367,30374]" dest="uint256: uint256 [30367,30374]"/>
  <match src="block_statement [48200,48240]" dest="block_statement [50541,50581]"/>
  <match src="call_expression [38901,38928]" dest="call_expression [37018,37045]"/>
  <match src=",: , [46213,46214]" dest=",: , [48554,48555]"/>
  <match src="variable_declaration [36352,36363]" dest="variable_declaration [38212,38223]"/>
  <match src="comment: // File: contracts/root/RootToken/IMintableERC1155.sol [4830,4884]" dest="comment: // File: contracts/root/RootToken/IMintableERC1155.sol [4830,4884]"/>
  <match src="call_argument [52399,52412]" dest="call_argument [54568,54581]"/>
  <match src="identifier: _functionCallWithValue [23061,23083]" dest="identifier: _functionCallWithValue [23061,23083]"/>
  <match src="[: [ [50290,50291]" dest="[: [ [52703,52704]"/>
  <match src="return: return [24223,24229]" dest="return: return [24223,24229]"/>
  <match src="parameter [24335,24349]" dest="parameter [24335,24349]"/>
  <match src="identifier: this [21463,21467]" dest="identifier: this [21463,21467]"/>
  <match src="}: } [12467,12468]" dest="}: } [12467,12468]"/>
  <match src="(: ( [44996,44997]" dest="(: ( [47337,47338]"/>
  <match src="returns: returns [3560,3567]" dest="returns: returns [3560,3567]"/>
  <match src="parameter [18219,18232]" dest="parameter [18219,18232]"/>
  <match src="string_literal [31637,31687]" dest="string_literal [31637,31687]"/>
  <match src="call_argument [10801,10802]" dest="call_argument [10801,10802]"/>
  <match src="parameter [43725,43742]" dest="parameter [46164,46181]"/>
  <match src="(: ( [29307,29308]" dest="(: ( [29307,29308]"/>
  <match src="type_name [52658,52665]" dest="type_name [54811,54818]"/>
  <match src="identifier: value [16688,16693]" dest="identifier: value [16688,16693]"/>
  <match src="number_literal: 21 [37221,37223]" dest="number_literal: 21 [40588,40590]"/>
  <match src="identifier: LIST_SHORT_START [34787,34803]" dest="identifier: LIST_SHORT_START [34788,34804]"/>
  <match src="identifier: value [13454,13459]" dest="identifier: value [13454,13459]"/>
  <match src="visibility [26080,26088]" dest="visibility [26080,26088]"/>
  <match src="identifier: data [24664,24668]" dest="identifier: data [24664,24668]"/>
  <match src="call_argument [36951,36954]" dest="call_argument [39725,39728]"/>
  <match src="): ) [21753,21754]" dest="): ) [21753,21754]"/>
  <match src="yul_path [41237,41244]" dest="yul_path [43679,43686]"/>
  <match src="function: function [33278,33286]" dest="function: function [33278,33286]"/>
  <match src="return_statement [16401,16453]" dest="return_statement [16401,16453]"/>
  <match src="member_expression [29384,29404]" dest="member_expression [29384,29404]"/>
  <match src=",: , [46850,46851]" dest=",: , [49191,49192]"/>
  <match src="]: ] [30441,30442]" dest="]: ] [30441,30442]"/>
  <match src=".: . [24152,24153]" dest=".: . [24152,24153]"/>
  <match src="): ) [21519,21520]" dest="): ) [21519,21520]"/>
  <match src=",: , [23542,23543]" dest=",: , [23542,23543]"/>
  <match src="(: ( [16326,16327]" dest="(: ( [16326,16327]"/>
  <match src="call_argument [30454,30459]" dest="call_argument [30454,30459]"/>
  <match src="member_expression [36391,36402]" dest="member_expression [38248,38259]"/>
  <match src="uint256: uint256 [4741,4748]" dest="uint256: uint256 [4741,4748]"/>
  <match src="): ) [8688,8689]" dest="): ) [8688,8689]"/>
  <match src="primitive_type [13270,13277]" dest="primitive_type [13270,13277]"/>
  <match src="member_expression [38269,38280]" dest="member_expression [39987,39998]"/>
  <match src="binary_expression [40871,40894]" dest="binary_expression [43301,43324]"/>
  <match src="identifier: byte0 [41565,41570]" dest="identifier: byte0 [43998,44003]"/>
  <match src="&lt;: &lt; [40323,40324]" dest="&lt;: &lt; [42724,42725]"/>
  <match src="identifier: _itemLength [40056,40067]" dest="identifier: _itemLength [42446,42457]"/>
  <match src="boolean_literal [10453,10457]" dest="boolean_literal [10453,10457]"/>
  <match src="solidity_version:  0.6.6 [4903,4909]" dest="solidity_version:  0.6.6 [4903,4909]"/>
  <match src=",: , [47413,47414]" dest=",: , [49754,49755]"/>
  <match src="address: address [22545,22552]" dest="address: address [22545,22552]"/>
  <match src="bytes: bytes [52316,52321]" dest="bytes: bytes [54445,54450]"/>
  <match src="(: ( [40809,40810]" dest="(: ( [43228,43229]"/>
  <match src="modifier_invocation [50851,50869]" dest="modifier_invocation [53436,53454]"/>
  <match src="address: address [1359,1366]" dest="address: address [1359,1366]"/>
  <match src="parameter [22983,23009]" dest="parameter [22983,23009]"/>
  <match src="(: ( [40416,40417]" dest="(: ( [42819,42820]"/>
  <match src="variable_declaration_statement [50956,51024]" dest="variable_declaration_statement [53541,53609]"/>
  <match src="identifier: items [35624,35629]" dest="identifier: toBeMinted [55174,55184]"/>
  <match src="primitive_type [30403,30410]" dest="primitive_type [30403,30410]"/>
  <match src="number_literal: 1 [41938,41939]" dest="number_literal: 1 [44362,44363]"/>
  <match src="identifier: safeBatchTransferFrom [4693,4714]" dest="identifier: safeBatchTransferFrom [4693,4714]"/>
  <match src="): ) [51825,51826]" dest="): ) [54343,54344]"/>
  <match src="primitive_type [44890,44895]" dest="primitive_type [47231,47236]"/>
  <match src="call_argument [22641,22647]" dest="call_argument [22641,22647]"/>
  <match src="): ) [24483,24484]" dest="): ) [24483,24484]"/>
  <match src=",: , [1659,1660]" dest=",: , [1659,1660]"/>
  <match src="parameter [25999,26014]" dest="parameter [25999,26014]"/>
  <match src="emit: emit [33362,33366]" dest="emit: emit [33362,33366]"/>
  <match src="-: - [40927,40928]" dest="-: - [43357,43358]"/>
  <match src="primitive_type [2928,2935]" dest="primitive_type [2928,2935]"/>
  <match src="yul_identifier [37978,37981]" dest="yul_identifier [40987,40990]"/>
  <match src="identifier: from [4723,4727]" dest="identifier: from [4723,4727]"/>
  <match src="comment: // Derived contracts need only register support for their own interfaces, [9372,9445]" dest="comment: // Derived contracts need only register support for their own interfaces, [9372,9445]"/>
  <match src="internal: internal [16044,16052]" dest="internal: internal [16044,16052]"/>
  <match src="binary_expression [32329,32352]" dest="binary_expression [32329,32352]"/>
  <match src="type_name [4765,4772]" dest="type_name [4765,4772]"/>
  <match src="uint256: uint256 [16436,16443]" dest="uint256: uint256 [16436,16443]"/>
  <match src="primitive_type [49853,49860]" dest="primitive_type [52206,52213]"/>
  <match src="(: ( [41770,41771]" dest="(: ( [44193,44194]"/>
  <match src=",: , [21624,21625]" dest=",: , [21624,21625]"/>
  <match src="variable_declaration [38941,38952]" dest="variable_declaration [38728,38739]"/>
  <match src="internal: internal [38193,38201]" dest="internal: internal [41202,41210]"/>
  <match src="identifier: token [52358,52363]" dest="identifier: token [54523,54528]"/>
  <match src="state_variable_declaration [34726,34766]" dest="state_variable_declaration [34726,34767]"/>
  <match src=".: . [38920,38921]" dest=".: . [37037,37038]"/>
  <match src="identifier: role [31605,31609]" dest="identifier: role [31605,31609]"/>
  <match src="identifier: Address [19209,19216]" dest="identifier: Address [19209,19216]"/>
  <match src="parameter [30714,30721]" dest="parameter [30714,30721]"/>
  <match src="call_argument [23092,23096]" dest="call_argument [23092,23096]"/>
  <match src="variable_declaration_statement [38941,38973]" dest="variable_declaration_statement [37101,37130]"/>
  <match src="): ) [40834,40835]" dest="): ) [43253,43254]"/>
  <match src="identifier: value [16596,16601]" dest="identifier: value [16596,16601]"/>
  <match src="assignment_expression [40286,40297]" dest="assignment_expression [42677,42688]"/>
  <match src="primitive_type [18219,18226]" dest="primitive_type [18219,18226]"/>
  <match src="identifier: _inner [18295,18301]" dest="identifier: _inner [18295,18301]"/>
  <match src="): ) [40229,40230]" dest="): ) [42607,42608]"/>
  <match src="(: ( [8681,8682]" dest="(: ( [8681,8682]"/>
  <match src="identifier: mask [42607,42611]" dest="identifier: mask [45013,45017]"/>
  <match src="type_name [27907,27931]" dest="type_name [27907,27931]"/>
  <match src="address: address [51221,51228]" dest="address: address [53806,53813]"/>
  <match src="function_body [48710,49146]" dest="function_body [51051,51487]"/>
  <match src="if_statement [52548,53581]" dest="if_statement [54753,55878]"/>
  <match src="function_body [50870,53588]" dest="function_body [53455,55885]"/>
  <match src="type_name [44922,44939]" dest="type_name [47263,47280]"/>
  <match src="primitive_type [1972,1976]" dest="primitive_type [1972,1976]"/>
  <match src="member_expression [18980,18990]" dest="member_expression [18980,18990]"/>
  <match src="identifier: len [38960,38963]" dest="identifier: len [37117,37120]"/>
  <match src="address: address [48751,48758]" dest="address: address [51092,51099]"/>
  <match src="(: ( [45647,45648]" dest="(: ( [47988,47989]"/>
  <match src="bytes4: bytes4 [46349,46355]" dest="bytes4: bytes4 [48690,48696]"/>
  <match src="]: ] [47140,47141]" dest="]: ] [49481,49482]"/>
  <match src="type_name [22983,22989]" dest="type_name [22983,22989]"/>
  <match src="let: let [40486,40489]" dest="let: let [42889,42892]"/>
  <match src="assembly: assembly [40458,40466]" dest="assembly: assembly [42861,42869]"/>
  <match src="): ) [41161,41162]" dest="): ) [43603,43604]"/>
  <match src="identifier: makeArrayWithValue [47888,47906]" dest="identifier: makeArrayWithValue [50229,50247]"/>
  <match src="call_argument [24171,24211]" dest="call_argument [24171,24211]"/>
  <match src="comment: // we register support for ERC165 itself here [9455,9500]" dest="comment: // we register support for ERC165 itself here [9455,9500]"/>
  <match src="variable_declaration [52658,52678]" dest="variable_declaration [54811,54831]"/>
  <match src="identifier: account [29414,29421]" dest="identifier: account [29414,29421]"/>
  <match src="augmented_assignment_expression [42330,42346]" dest="augmented_assignment_expression [44707,44723]"/>
  <match src="array_access [33435,33447]" dest="array_access [33435,33447]"/>
  <match src="solidity_version:  0.6.6 [44451,44457]" dest="solidity_version:  0.6.6 [46890,46896]"/>
  <match src="identifier: _supportedInterfaces [10417,10437]" dest="identifier: _supportedInterfaces [10417,10437]"/>
  <match src="(: ( [43652,43653]" dest="(: ( [46091,46092]"/>
  <match src="call_argument [52952,52955]" dest="call_argument [55399,55402]"/>
  <match src="string [23671,23714]" dest="string [23671,23714]"/>
  <match src="identifier: set [13441,13444]" dest="identifier: set [13441,13444]"/>
  <match src="public: public [44956,44962]" dest="public: public [47297,47303]"/>
  <match src="visibility [16366,16374]" dest="visibility [16366,16374]"/>
  <match src="identifier: item [37209,37213]" dest="identifier: item [40576,40580]"/>
  <match src="type_name [3569,3573]" dest="type_name [3569,3573]"/>
  <match src="member_expression [52708,52718]" dest="member_expression [54861,54871]"/>
  <match src="identifier: count [39599,39604]" dest="identifier: count [42086,42091]"/>
  <match src="=: = [34804,34805]" dest="=: = [34807,34808]"/>
  <match src="type_name [13420,13427]" dest="type_name [13420,13427]"/>
  <match src="identifier: role [29640,29644]" dest="identifier: role [29640,29644]"/>
  <match src="visibility [45244,45250]" dest="visibility [47585,47591]"/>
  <match src="state_mutability [36733,36737]" dest="state_mutability [39468,39472]"/>
  <match src="identifier: _values [14578,14585]" dest="identifier: _values [14578,14585]"/>
  <match src="call_argument [34314,34324]" dest="call_argument [34314,34324]"/>
  <match src="identifier: value [2367,2372]" dest="identifier: value [2367,2372]"/>
  <match src="parameter [46206,46213]" dest="parameter [48547,48554]"/>
  <match src="parameter [24026,24043]" dest="parameter [24026,24043]"/>
  <match src="type_name [48137,48144]" dest="type_name [50478,50485]"/>
  <match src="bytes32: bytes32 [33301,33308]" dest="bytes32: bytes32 [33301,33308]"/>
  <match src="type_cast_expression [53456,53465]" dest="type_cast_expression [55734,55743]"/>
  <match src="}: } [16134,16135]" dest="}: } [16134,16135]"/>
  <match src="parameter [34070,34094]" dest="parameter [34070,34094]"/>
  <match src="true: true [10453,10457]" dest="true: true [10453,10457]"/>
  <match src="{: { [29366,29367]" dest="{: { [29366,29367]"/>
  <match src="call_argument [36818,36826]" dest="call_argument [39539,39547]"/>
  <match src="call_expression [45800,45832]" dest="call_expression [48141,48173]"/>
  <match src="contract_declaration [9000,10468]" dest="contract_declaration [9000,10468]"/>
  <match src="^:  ^ [6321,6323]" dest="^:  ^ [6321,6323]"/>
  <match src="function_definition [36665,36997]" dest="function_definition [39418,39771]"/>
  <match src="internal: internal [16603,16611]" dest="internal: internal [16603,16611]"/>
  <match src="identifier: require [31109,31116]" dest="identifier: require [31109,31116]"/>
  <match src="type_name [40068,40075]" dest="type_name [42458,42462]"/>
  <match src="sub: sub [38037,38040]" dest="sub: sub [41046,41049]"/>
  <match src="function_body [40115,41322]" dest="function_body [42499,43764]"/>
  <match src="parameter [17325,17332]" dest="parameter [17325,17332]"/>
  <match src="identifier: ERC1155Receiver [10846,10861]" dest="identifier: ERC1155Receiver [10846,10861]"/>
  <match src="pure: pure [48664,48668]" dest="pure: pure [51005,51009]"/>
  <match src="identifier: IMintableERC1155 [47475,47491]" dest="identifier: IMintableERC1155 [49816,49832]"/>
  <match src="identifier: contractId [34153,34163]" dest="identifier: contractId [34153,34163]"/>
  <match src="identifier: length [49712,49718]" dest="identifier: length [52065,52071]"/>
  <match src="assembly: assembly [42363,42371]" dest="assembly: assembly [44740,44748]"/>
  <match src="identifier: data [22977,22981]" dest="identifier: data [22977,22981]"/>
  <match src="comment: // topic2 is from address [51162,51187]" dest="comment: // topic2 is from address [53747,53772]"/>
  <match src="user_defined_type [15796,15799]" dest="user_defined_type [15796,15799]"/>
  <match src="binary_expression [51382,51447]" dest="binary_expression [54033,54070]"/>
  <match src="parameter [7362,7375]" dest="parameter [7362,7375]"/>
  <match src="public: public [9762,9768]" dest="public: public [9762,9768]"/>
  <match src="identifier: _roles [30430,30436]" dest="identifier: _roles [30430,30436]"/>
  <match src="identifier: STRING_LONG_START [41857,41874]" dest="identifier: STRING_LONG_START [44268,44285]"/>
  <match src="identifier: set [12769,12772]" dest="identifier: set [12769,12772]"/>
  <match src="primitive_type [51808,51815]" dest="primitive_type [54326,54333]"/>
  <match src="assembly: assembly [40176,40184]" dest="assembly: assembly [42554,42562]"/>
  <match src="member_expression [12769,12785]" dest="member_expression [12769,12785]"/>
  <match src="comment: // zero out src [42717,42732]" dest="comment: // zero out src [45133,45148]"/>
  <match src="parameter [818,836]" dest="parameter [818,836]"/>
  <match src="[: [ [29390,29391]" dest="[: [ [29390,29391]"/>
  <match src="mapping: mapping [27983,27990]" dest="mapping: mapping [27983,27990]"/>
  <match src="type_name [24351,24356]" dest="type_name [24351,24356]"/>
  <match src="identifier: only [50851,50855]" dest="identifier: only [53436,53440]"/>
  <match src="member_expression [51067,51088]" dest="member_expression [53652,53673]"/>
  <match src="identifier: hasRole [31117,31124]" dest="identifier: hasRole [31117,31124]"/>
  <match src="comment: /**      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.      *      * Emits a {TransferBatch} event.      *      * Requirements:      *      * - `ids` and `amounts` must have the same length.      * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the      * acceptance magic value.      */ [4278,4678]" dest="comment: /**      * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.      *      * Emits a {TransferBatch} event.      *      * Requirements:      *      * - `ids` and `amounts` must have the same length.      * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the      * acceptance magic value.      */ [4278,4678]"/>
  <match src="type_name [6111,6120]" dest="type_name [6111,6120]"/>
  <match src="binary_expression [38300,38322]" dest="binary_expression [41561,41573]"/>
  <match src="]: ] [30752,30753]" dest="]: ] [30752,30753]"/>
  <match src="): ) [18998,18999]" dest="): ) [18998,18999]"/>
  <match src=".: . [39670,39671]" dest=".: . [37728,37729]"/>
  <match src=",: , [4739,4740]" dest=",: , [4739,4740]"/>
  <match src="type_name [39396,39403]" dest="type_name [42024,42028]"/>
  <match src="primitive_type [51587,51594]" dest="primitive_type [54174,54181]"/>
  <match src="}: } [33865,33866]" dest="}: } [33865,33866]"/>
  <match src="memory: memory [22604,22610]" dest="memory: memory [22604,22610]"/>
  <match src="bool: bool [24592,24596]" dest="bool: bool [24592,24596]"/>
  <match src="function_definition [24303,25282]" dest="function_definition [24303,25282]"/>
  <match src="): ) [8645,8646]" dest="): ) [8645,8646]"/>
  <match src="[: [ [48694,48695]" dest="[: [ [51035,51036]"/>
  <match src="primitive_type [14179,14186]" dest="primitive_type [14179,14186]"/>
  <match src="type_name [51636,51652]" dest="type_name [54223,54239]"/>
  <match src="&quot;: &quot; [21662,21663]" dest="&quot;: &quot; [21662,21663]"/>
  <match src="variable_declaration_statement [52817,52870]" dest="variable_declaration_statement [54970,55023]"/>
  <match src="): ) [52868,52869]" dest="): ) [55021,55022]"/>
  <match src="identifier: functionCallWithValue [23988,24009]" dest="identifier: functionCallWithValue [23988,24009]"/>
  <match src="!=: != [10360,10362]" dest="!=: != [10360,10362]"/>
  <match src="type_name [3290,3297]" dest="type_name [3290,3297]"/>
  <match src="identifier: require [47982,47989]" dest="identifier: require [50323,50330]"/>
  <match src="identifier: set [16346,16349]" dest="identifier: set [16346,16349]"/>
  <match src=".: . [14966,14967]" dest=".: . [14966,14967]"/>
  <match src="identifier: ids [4760,4763]" dest="identifier: ids [4760,4763]"/>
  <match src="yul_assignment [37874,37897]" dest="yul_assignment [40883,40906]"/>
  <match src="function_definition [43633,43796]" dest="function_definition [46072,46235]"/>
  <match src="event: event [1900,1905]" dest="event: event [1900,1905]"/>
  <match src="identifier: TRANSFER_SINGLE_EVENT_SIG [51422,51447]" dest="identifier: TRANSFER_SINGLE_EVENT_SIG [54045,54070]"/>
  <match src="call_argument [21488,21519]" dest="call_argument [21488,21519]"/>
  <match src="primitive_type [44312,44319]" dest="primitive_type [46751,46758]"/>
  <match src="emit_statement [47304,47465]" dest="emit_statement [49645,49806]"/>
  <match src=".: . [18983,18984]" dest=".: . [18983,18984]"/>
  <match src="(: ( [37377,37378]" dest="(: ( [40707,40708]"/>
  <match src=",: , [47918,47919]" dest=",: , [50259,50260]"/>
  <match src="return: return [38627,38633]" dest="return: return [41438,41444]"/>
  <match src="identifier: calculateAmountsToBeMinted [49476,49502]" dest="identifier: calculateAmountsToBeMinted [51817,51843]"/>
  <match src="yul_path [41154,41161]" dest="yul_path [43596,43603]"/>
  <match src="address: address [46861,46868]" dest="address: address [49202,49209]"/>
  <match src="identifier: memPtr [38274,38280]" dest="identifier: memPtr [39992,39998]"/>
  <match src="assembly_statement [40982,41277]" dest="assembly_statement [43424,43719]"/>
  <match src="identifier: _remove [16408,16415]" dest="identifier: _remove [16408,16415]"/>
  <match src="expression_statement [44554,44589]" dest="expression_statement [46993,47028]"/>
  <match src="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [16712,16784]" dest="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [16712,16784]"/>
  <match src="event_paramater [1718,1734]" dest="event_paramater [1718,1734]"/>
  <match src="identifier: depositor [47539,47548]" dest="identifier: depositor [49880,49889]"/>
  <match src="type_name [2928,2935]" dest="type_name [2928,2935]"/>
  <match src="primitive_type [16672,16679]" dest="primitive_type [16672,16679]"/>
  <match src="binary_expression [41848,41879]" dest="binary_expression [44259,44290]"/>
  <match src="identifier: byte0 [41029,41034]" dest="identifier: byte0 [43471,43476]"/>
  <match src="expression_statement [50163,50188]" dest="expression_statement [52576,52601]"/>
  <match src="member_expression [33559,33579]" dest="member_expression [33559,33579]"/>
  <match src="identifier: _indexes [14673,14681]" dest="identifier: _indexes [14673,14681]"/>
  <match src="variable_declaration [24592,24604]" dest="variable_declaration [24592,24604]"/>
  <match src="yul_identifier [41029,41034]" dest="yul_identifier [43471,43476]"/>
  <match src="(: ( [40504,40505]" dest="(: ( [42907,42908]"/>
  <match src="(: ( [52718,52719]" dest="(: ( [54871,54872]"/>
  <match src="): ) [22578,22579]" dest="): ) [22578,22579]"/>
  <match src="member_expression [18291,18301]" dest="member_expression [18291,18301]"/>
  <match src=".: . [37479,37480]" dest=".: . [38176,38177]"/>
  <match src="(: ( [21611,21612]" dest="(: ( [21611,21612]"/>
  <match src="identifier: account [32435,32442]" dest="identifier: account [32435,32442]"/>
  <match src="=: = [9165,9166]" dest="=: = [9165,9166]"/>
  <match src="primitive_type [28479,28486]" dest="primitive_type [28479,28486]"/>
  <match src="indexed: indexed [1669,1676]" dest="indexed: indexed [1669,1676]"/>
  <match src="calldata: calldata [4775,4783]" dest="calldata: calldata [4775,4783]"/>
  <match src="): ) [50252,50253]" dest="): ) [52665,52666]"/>
  <match src="): ) [36466,36467]" dest="): ) [38323,38324]"/>
  <match src="inheritance_specifier [10688,10694]" dest="inheritance_specifier [10688,10694]"/>
  <match src="function_definition [42112,42873]" dest="function_definition [44532,45312]"/>
  <match src="): ) [42413,42414]" dest="): ) [44790,44791]"/>
  <match src="type_name [12660,12663]" dest="type_name [12660,12663]"/>
  <match src="identifier: data [7401,7405]" dest="identifier: data [7401,7405]"/>
  <match src="identifier: newAdminRole [28495,28507]" dest="identifier: newAdminRole [28495,28507]"/>
  <match src="identifier: lastIndex [13900,13909]" dest="identifier: lastIndex [13900,13909]"/>
  <match src="function_definition [47879,48271]" dest="function_definition [50220,50612]"/>
  <match src="function: function [46164,46172]" dest="function: function [48505,48513]"/>
  <match src="&lt;: &lt; [40264,40265]" dest="&lt;: &lt; [42642,42643]"/>
  <match src="bytes32: bytes32 [12432,12439]" dest="bytes32: bytes32 [12432,12439]"/>
  <match src="type_name [47167,47176]" dest="type_name [49508,49517]"/>
  <match src="identifier: require [48841,48848]" dest="identifier: require [51182,51189]"/>
  <match src="call_argument [16888,16898]" dest="call_argument [16888,16898]"/>
  <match src="if_statement [41767,41940]" dest="if_statement [44190,44364]"/>
  <match src="(: ( [23527,23528]" dest="(: ( [23527,23528]"/>
  <match src="function_body [24447,25282]" dest="function_body [24447,25282]"/>
  <match src="bytes32: bytes32 [20133,20140]" dest="bytes32: bytes32 [20133,20140]"/>
  <match src="type_name [52658,52667]" dest="type_name [54811,54820]"/>
  <match src="type_name [49554,49561]" dest="type_name [51895,51902]"/>
  <match src="return: return [41841,41847]" dest="return: return [44252,44258]"/>
  <match src=",: , [47594,47595]" dest=",: , [49935,49936]"/>
  <match src="memory: memory [35128,35134]" dest="memory: memory [36087,36093]"/>
  <match src="event_paramater [28444,28477]" dest="event_paramater [28444,28477]"/>
  <match src="): ) [24414,24415]" dest="): ) [24414,24415]"/>
  <match src="]: ] [51013,51014]" dest="]: ] [53598,53599]"/>
  <match src="{: { [23043,23044]" dest="{: { [23043,23044]"/>
  <match src="function: function [5427,5435]" dest="function: function [5427,5435]"/>
  <match src=".: . [33579,33580]" dest=".: . [33579,33580]"/>
  <match src="identifier: TRANSFER_SINGLE_EVENT_SIG [45117,45142]" dest="identifier: TRANSFER_SINGLE_EVENT_SIG [47458,47483]"/>
  <match src="memory: memory [38180,38186]" dest="memory: memory [41189,41195]"/>
  <match src="event_definition [28726,28815]" dest="event_definition [28726,28815]"/>
  <match src="}: } [26051,26052]" dest="}: } [26051,26052]"/>
  <match src="function_body [31571,31735]" dest="function_body [31571,31735]"/>
  <match src="member_expression [50921,50943]" dest="member_expression [53506,53528]"/>
  <match src="member_expression [39720,39728]" dest="member_expression [42201,42209]"/>
  <match src="(: ( [19830,19831]" dest="(: ( [19830,19831]"/>
  <match src="(: ( [37889,37890]" dest="(: ( [40898,40899]"/>
  <match src="(: ( [48758,48759]" dest="(: ( [51099,51100]"/>
  <match src="primitive_type [24045,24052]" dest="primitive_type [24045,24052]"/>
  <match src="}: } [52541,52542]" dest="}: } [54746,54747]"/>
  <match src="uint: uint [47920,47924]" dest="uint: uint [50261,50265]"/>
  <match src="address: address [17352,17359]" dest="address: address [17352,17359]"/>
  <match src="): ) [2950,2951]" dest="): ) [2950,2951]"/>
  <match src="[: [ [2935,2936]" dest="[: [ [2935,2936]"/>
  <match src="call_argument [45762,45780]" dest="call_argument [48103,48121]"/>
  <match src="primitive_type [30714,30721]" dest="primitive_type [30714,30721]"/>
  <match src="): ) [22687,22688]" dest="): ) [22687,22688]"/>
  <match src="binary_expression [40417,40441]" dest="binary_expression [42820,42844]"/>
  <match src="internal: internal [10312,10320]" dest="internal: internal [10312,10320]"/>
  <match src="identifier: tokenBalances [50213,50226]" dest="identifier: tokenBalances [52626,52639]"/>
  <match src="variable_declaration [51513,51527]" dest="variable_declaration [54100,54114]"/>
  <match src="identifier: memPtr [35865,35871]" dest="identifier: currPtr [42111,42118]"/>
  <match src="identifier: LIST_SHORT_START [41687,41703]" dest="identifier: LIST_SHORT_START [44107,44123]"/>
  <match src="identifier: _setupRole [45751,45761]" dest="identifier: _setupRole [48092,48102]"/>
  <match src=",: , [45823,45824]" dest=",: , [48164,48165]"/>
  <match src="type_name [8584,8591]" dest="type_name [8584,8591]"/>
  <match src="function_definition [37318,38110]" dest="function_definition [40648,41119]"/>
  <match src="call_argument [45165,45222]" dest="call_argument [47506,47563]"/>
  <match src="identifier: IERC165 [1195,1202]" dest="identifier: IERC165 [1195,1202]"/>
  <match src="comment: // repetition as possible, we write it in terms of a generic Set type with [11836,11910]" dest="comment: // repetition as possible, we write it in terms of a generic Set type with [11836,11910]"/>
  <match src=",: , [7375,7376]" dest=",: , [7375,7376]"/>
  <match src="variable_declaration_tuple [52657,52705]" dest="variable_declaration_tuple [54810,54858]"/>
  <match src=",: , [34284,34285]" dest=",: , [34284,34285]"/>
  <match src="!=: != [14983,14985]" dest="!=: != [14983,14985]"/>
  <match src="identifier: balance [21469,21476]" dest="identifier: balance [21469,21476]"/>
  <match src="call_expression [23061,23114]" dest="call_expression [23061,23114]"/>
  <match src="assignment_expression [14316,14354]" dest="assignment_expression [14316,14354]"/>
  <match src="call_expression [53023,53170]" dest="call_expression [55067,55141]"/>
  <match src="): ) [33534,33535]" dest="): ) [33534,33535]"/>
  <match src="): ) [45662,45663]" dest="): ) [48003,48004]"/>
  <match src="identifier: functionCall [22628,22640]" dest="identifier: functionCall [22628,22640]"/>
  <match src="uint256: uint256 [23563,23570]" dest="uint256: uint256 [23563,23570]"/>
  <match src="binary_expression [24829,24850]" dest="binary_expression [24829,24850]"/>
  <match src=",: , [16426,16427]" dest=",: , [16426,16427]"/>
  <match src="private: private [33536,33543]" dest="private: private [33536,33543]"/>
  <match src="view: view [30389,30393]" dest="view: view [30389,30393]"/>
  <match src="identifier: byte0 [41507,41512]" dest="identifier: byte0 [43940,43945]"/>
  <match src="bytes4: bytes4 [7448,7454]" dest="bytes4: bytes4 [7448,7454]"/>
  <match src="{: { [17443,17444]" dest="{: { [17443,17444]"/>
  <match src="{: { [18263,18264]" dest="{: { [18263,18264]"/>
  <match src="]: ] [50292,50293]" dest="]: ] [52705,52706]"/>
  <match src="address: address [46224,46231]" dest="address: address [48565,48572]"/>
  <match src="identifier: tokenBalances [50319,50332]" dest="identifier: tokenBalances [52732,52745]"/>
  <match src="expression_statement [35554,35604]" dest="expression_statement [37550,37572]"/>
  <match src="variable_declaration_statement [35957,35971]" dest="variable_declaration_statement [37775,37786]"/>
  <match src="type_name [21612,21616]" dest="type_name [21612,21616]"/>
  <match src="identifier: getRoleAdmin [30666,30678]" dest="identifier: getRoleAdmin [30666,30678]"/>
  <match src="&quot;: &quot; [31637,31638]" dest="&quot;: &quot; [31637,31638]"/>
  <match src="member_expression [16660,16670]" dest="member_expression [16660,16670]"/>
  <match src="parameter [37024,37043]" dest="parameter [40463,40482]"/>
  <match src="identifier: require [49648,49655]" dest="identifier: require [52001,52008]"/>
  <match src="identifier: addresses [49129,49138]" dest="identifier: addresses [51470,51479]"/>
  <match src="identifier: value [24164,24169]" dest="identifier: value [24164,24169]"/>
  <match src="}: } [40960,40961]" dest="}: } [43390,43391]"/>
  <match src="number_literal: 33 [37487,37489]" dest="number_literal: 0 [38184,38185]"/>
  <match src="uint256: uint256 [5458,5465]" dest="uint256: uint256 [5458,5465]"/>
  <match src="variable_declaration [49034,49043]" dest="variable_declaration [51375,51384]"/>
  <match src="call_argument [48743,48761]" dest="call_argument [51084,51102]"/>
  <match src="(: ( [52380,52381]" dest="(: ( [54545,54546]"/>
  <match src=",: , [41152,41153]" dest=",: , [43594,43595]"/>
  <match src="type_name [38884,38891]" dest="type_name [37004,37008]"/>
  <match src="parameter [22561,22578]" dest="parameter [22561,22578]"/>
  <match src="event_paramater [28422,28442]" dest="event_paramater [28422,28442]"/>
  <match src="variable_declaration_statement [36352,36364]" dest="variable_declaration_statement [38212,38224]"/>
  <match src="parameter [8551,8573]" dest="parameter [8551,8573]"/>
  <match src="binary_expression [50296,50332]" dest="binary_expression [52709,52745]"/>
  <match src="internal: internal [37045,37053]" dest="internal: internal [40484,40492]"/>
  <match src="parameter [19831,19846]" dest="parameter [19831,19846]"/>
  <match src="): ) [40742,40743]" dest="): ) [43161,43162]"/>
  <match src="call_argument [16119,16124]" dest="call_argument [16119,16124]"/>
  <match src=",: , [18069,18070]" dest=",: , [18069,18070]"/>
  <match src="solidity_version: 0.6.0 [25393,25398]" dest="solidity_version: 0.6.0 [25393,25398]"/>
  <match src="return_statement [15705,15731]" dest="return_statement [15705,15731]"/>
  <match src="}: } [38614,38615]" dest="}: } [41425,41426]"/>
  <match src=".: . [29396,29397]" dest=".: . [29396,29397]"/>
  <match src="solidity_version_comparison_operator [6321,6323]" dest="solidity_version_comparison_operator [6321,6323]"/>
  <match src="address: address [44287,44294]" dest="address: address [46726,46733]"/>
  <match src="[: [ [47174,47175]" dest="[: [ [49515,49516]"/>
  <match src="function: function [9715,9723]" dest="function: function [9715,9723]"/>
  <match src="identifier: srcpart [42679,42686]" dest="identifier: srcpart [45095,45102]"/>
  <match src="[: [ [36053,36054]" dest="[: [ [37868,37869]"/>
  <match src="yul_decimal_number: 1 [40592,40593]" dest="yul_decimal_number: 1 [42995,42996]"/>
  <match src="primitive_type [17684,17691]" dest="primitive_type [17684,17691]"/>
  <match src="type_name [50148,50155]" dest="type_name [52561,52568]"/>
  <match src="identifier: MANAGER_ROLE [45811,45823]" dest="identifier: MANAGER_ROLE [48152,48164]"/>
  <match src="view: view [16839,16843]" dest="view: view [16839,16843]"/>
  <match src="primitive_type [45943,45950]" dest="primitive_type [48284,48291]"/>
  <match src="identifier: item [38688,38692]" dest="identifier: item [41499,41503]"/>
  <match src="yul_evm_builtin [42706,42709]" dest="yul_evm_builtin [45122,45125]"/>
  <match src="{: { [49064,49065]" dest="{: { [51405,51406]"/>
  <match src="string_literal [24486,24517]" dest="string_literal [24486,24517]"/>
  <match src="member_expression [38955,38963]" dest="member_expression [37112,37120]"/>
  <match src="[: [ [33565,33566]" dest="[: [ [33565,33566]"/>
  <match src="parameter [16062,16066]" dest="parameter [16062,16066]"/>
  <match src="internal: internal [48646,48654]" dest="internal: internal [50987,50995]"/>
  <match src="identifier: require [48721,48728]" dest="identifier: require [51062,51069]"/>
  <match src="primitive_type [33054,33061]" dest="primitive_type [33054,33061]"/>
  <match src="number_literal: 0 [51269,51270]" dest="number_literal: 0 [53854,53855]"/>
  <match src="=: = [36011,36012]" dest="=: = [37826,37827]"/>
  <match src="memory: memory [49564,49570]" dest="memory: memory [51905,51911]"/>
  <match src=".: . [35907,35908]" dest=".: . [42154,42155]"/>
  <match src="primitive_type [41439,41446]" dest="primitive_type [43878,43882]"/>
  <match src="type_name [1359,1366]" dest="type_name [1359,1366]"/>
  <match src="&quot;: &quot; [10404,10405]" dest="&quot;: &quot; [10404,10405]"/>
  <match src="}: } [10917,10918]" dest="}: } [10917,10918]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [17480,17644]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [17480,17644]"/>
  <match src="state_mutability [36321,36325]" dest="state_mutability [38137,38141]"/>
  <match src="is: is [27773,27775]" dest="is: is [27773,27775]"/>
  <match src="variable_declaration [52680,52704]" dest="variable_declaration [54833,54857]"/>
  <match src="address: address [52399,52406]" dest="address: address [54568,54575]"/>
  <match src="primitive_type [37802,37809]" dest="primitive_type [37056,37060]"/>
  <match src="memory: memory [39361,39367]" dest="memory: memory [41989,41995]"/>
  <match src="struct: struct [17428,17434]" dest="struct: struct [17428,17434]"/>
  <match src="expression_statement [21447,21521]" dest="expression_statement [21447,21521]"/>
  <match src="(: ( [28421,28422]" dest="(: ( [28421,28422]"/>
  <match src="return_type_definition [36747,36769]" dest="return_type_definition [39473,39495]"/>
  <match src="(: ( [16415,16416]" dest="(: ( [16415,16416]"/>
  <match src="identifier: operator [7299,7307]" dest="identifier: operator [7299,7307]"/>
  <match src="parameter [41439,41446]" dest="parameter [43878,43882]"/>
  <match src=":=: := [41513,41515]" dest=":=: := [43946,43948]"/>
  <match src="identifier: data [5501,5505]" dest="identifier: data [5501,5505]"/>
  <match src="): ) [31687,31688]" dest="): ) [31687,31688]"/>
  <match src="address: address [2606,2613]" dest="address: address [2606,2613]"/>
  <match src="primitive_type [34726,34731]" dest="primitive_type [34726,34731]"/>
  <match src=":=: := [35278,35280]" dest=":=: := [36159,36161]"/>
  <match src="function_definition [29604,29731]" dest="function_definition [29604,29731]"/>
  <match src="identifier: errorMessage [24074,24086]" dest="identifier: errorMessage [24074,24086]"/>
  <match src="return_statement [35319,35355]" dest="return_statement [36200,36236]"/>
  <match src="call_argument [31149,31161]" dest="call_argument [31149,31161]"/>
  <match src="}: } [45619,45620]" dest="}: } [47960,47961]"/>
  <match src="call_argument [17758,17772]" dest="call_argument [17758,17772]"/>
  <match src="(: ( [35956,35957]" dest="(: ( [37774,37775]"/>
  <match src="primitive_type [21411,21418]" dest="primitive_type [21411,21418]"/>
  <match src="): ) [36704,36705]" dest="): ) [39457,39458]"/>
  <match src="=: = [21628,21629]" dest="=: = [21628,21629]"/>
  <match src="type_name [35520,35527]" dest="type_name [37521,37528]"/>
  <match src=",: , [36901,36902]" dest=",: , [39675,39676]"/>
  <match src="(: ( [45065,45066]" dest="(: ( [47406,47407]"/>
  <match src="primitive_type [47206,47211]" dest="primitive_type [49547,49552]"/>
  <match src="expression_statement [44611,44625]" dest="expression_statement [47050,47064]"/>
  <match src=",: , [2372,2373]" dest=",: , [2372,2373]"/>
  <match src="identifier: inited [44497,44503]" dest="identifier: inited [46936,46942]"/>
  <match src="comment: // AddressSet [15746,15759]" dest="comment: // AddressSet [15746,15759]"/>
  <match src="): ) [9796,9797]" dest="): ) [9796,9797]"/>
  <match src="member_expression [38775,38786]" dest="member_expression [38706,38717]"/>
  <match src="let: let [25063,25066]" dest="let: let [25063,25066]"/>
  <match src="bytes: bytes [36812,36817]" dest="bytes: bytes [39533,39538]"/>
  <match src="return: return [15157,15163]" dest="return: return [15157,15163]"/>
  <match src="bytes32: bytes32 [44948,44955]" dest="bytes32: bytes32 [47289,47296]"/>
  <match src="expression_statement [52146,52327]" dest="expression_statement [54400,54456]"/>
  <match src="parameter [22598,22610]" dest="parameter [22598,22610]"/>
  <match src="emit: emit [47304,47308]" dest="emit: emit [49645,49649]"/>
  <match src="yul_evm_builtin [38028,38031]" dest="yul_evm_builtin [41037,41040]"/>
  <match src="primitive_type [24388,24394]" dest="primitive_type [24388,24394]"/>
  <match src="type_alias [44908,44917]" dest="type_alias [47249,47258]"/>
  <match src="identifier: onERC1155BatchReceived [46173,46195]" dest="identifier: onERC1155BatchReceived [48514,48536]"/>
  <match src="binary_expression [40921,40949]" dest="binary_expression [43351,43379]"/>
  <match src="solidity_pragma_token [6313,6328]" dest="solidity_pragma_token [6313,6328]"/>
  <match src="user_defined_type [51636,51652]" dest="user_defined_type [54223,54239]"/>
  <match src="return: return [26270,26276]" dest="return: return [26270,26276]"/>
  <match src=",: , [52773,52774]" dest=",: , [54926,54927]"/>
  <match src="event_definition [2350,2394]" dest="event_definition [2350,2394]"/>
  <match src="{: { [14734,14735]" dest="{: { [14734,14735]"/>
  <match src="parameter [23563,23576]" dest="parameter [23563,23576]"/>
  <match src="(: ( [41127,41128]" dest="(: ( [43569,43570]"/>
  <match src="user_defined_type [15547,15550]" dest="user_defined_type [15547,15550]"/>
  <match src="identifier: URI [2356,2359]" dest="identifier: URI [2356,2359]"/>
  <match src=".: . [35338,35339]" dest=".: . [36219,36220]"/>
  <match src="identifier: i [48185,48186]" dest="identifier: i [50526,50527]"/>
  <match src="identifier: keccak256 [45056,45065]" dest="identifier: keccak256 [47397,47406]"/>
  <match src="variable_declaration [35657,35680]" dest="variable_declaration [37622,37645]"/>
  <match src="identifier: supportsInterface [9724,9741]" dest="identifier: supportsInterface [9724,9741]"/>
  <match src="function_body [46357,46433]" dest="function_body [48698,48774]"/>
  <match src="return_statement [39199,39213]" dest="return_statement [41829,41843]"/>
  <match src="event_paramater [45462,45493]" dest="event_paramater [47803,47834]"/>
  <match src="primitive_type [29308,29315]" dest="primitive_type [29308,29315]"/>
  <match src="binary_expression [41857,41878]" dest="binary_expression [44268,44289]"/>
  <match src="parameter [31066,31081]" dest="parameter [31066,31081]"/>
  <match src="function: function [10264,10272]" dest="function: function [10264,10272]"/>
  <match src="return: return [18492,18498]" dest="return: return [18492,18498]"/>
  <match src="[: [ [52771,52772]" dest="[: [ [54924,54925]"/>
  <match src="]: ] [4749,4750]" dest="]: ] [4749,4750]"/>
  <match src="state_mutability [26089,26093]" dest="state_mutability [26089,26093]"/>
  <match src="event_paramater [1921,1944]" dest="event_paramater [1921,1944]"/>
  <match src="view: view [18927,18931]" dest="view: view [18927,18931]"/>
  <match src="type_name [33702,33709]" dest="type_name [33702,33709]"/>
  <match src="identifier: item [37414,37418]" dest="identifier: item [37347,37351]"/>
  <match src="): ) [5505,5506]" dest="): ) [5505,5506]"/>
  <match src="memory: memory [36762,36768]" dest="memory: memory [39488,39494]"/>
  <match src="): ) [31160,31161]" dest="): ) [31160,31161]"/>
  <match src="event_paramater [45540,45553]" dest="event_paramater [47881,47894]"/>
  <match src="member_expression [26277,26285]" dest="member_expression [26277,26285]"/>
  <match src="primitive_type [35957,35964]" dest="primitive_type [37775,37779]"/>
  <match src="(: ( [52511,52512]" dest="(: ( [54697,54698]"/>
  <match src="function_body [18033,18094]" dest="function_body [18033,18094]"/>
  <match src="expression_statement [14422,14466]" dest="expression_statement [14422,14466]"/>
  <match src="number_literal: 1 [40948,40949]" dest="number_literal: 1 [43378,43379]"/>
  <match src="state_variable_declaration [34861,34891]" dest="state_variable_declaration [34867,34897]"/>
  <match src="=: = [51790,51791]" dest="=: = [54308,54309]"/>
  <match src="{: { [20325,20326]" dest="{: { [20325,20326]"/>
  <match src="type_name [37068,37075]" dest="type_name [40507,40514]"/>
  <match src="type_name [41401,41408]" dest="type_name [43843,43847]"/>
  <match src="array_access [47262,47271]" dest="array_access [49603,49612]"/>
  <match src="calldata: calldata [7392,7400]" dest="calldata: calldata [7392,7400]"/>
  <match src="]: ] [33446,33447]" dest="]: ] [33446,33447]"/>
  <match src="yul_identifier [42750,42758]" dest="yul_identifier [45170,45178]"/>
  <match src="identifier: _at [15543,15546]" dest="identifier: _at [15543,15546]"/>
  <match src="new: new [35683,35686]" dest="new: new [37648,37651]"/>
  <match src="): ) [39124,39125]" dest="): ) [41768,41769]"/>
  <match src="false: false [36528,36533]" dest="false: false [38398,38403]"/>
  <match src="identifier: balance [24153,24160]" dest="identifier: balance [24153,24160]"/>
  <match src=",: , [16670,16671]" dest=",: , [16670,16671]"/>
  <match src="mstore: mstore [42391,42397]" dest="mstore: mstore [44768,44774]"/>
  <match src="variable_declaration_statement [13839,13878]" dest="variable_declaration_statement [13839,13878]"/>
  <match src="override_specifier [46331,46339]" dest="override_specifier [48672,48680]"/>
  <match src="): ) [34298,34299]" dest="): ) [34298,34299]"/>
  <match src="type_name [49812,49819]" dest="type_name [52165,52172]"/>
  <match src="]: ] [47281,47282]" dest="]: ] [49622,49623]"/>
  <match src="[: [ [49860,49861]" dest="[: [ [52213,52214]"/>
  <match src="call_expression [10846,10864]" dest="call_expression [10846,10864]"/>
  <match src="return_statement [13029,13042]" dest="return_statement [13029,13042]"/>
  <match src="call_argument [17384,17389]" dest="call_argument [17384,17389]"/>
  <match src=":=: := [37881,37883]" dest=":=: := [40890,40892]"/>
  <match src="binary_expression [42620,42635]" dest="binary_expression [45028,45043]"/>
  <match src="comment: /** RLPItem conversions into data types **/ [36571,36614]" dest="comment: /** RLPItem conversions into data types **/ [39324,39367]"/>
  <match src="identifier: account [33784,33791]" dest="identifier: account [33784,33791]"/>
  <match src="function_body [37387,38110]" dest="function_body [40714,41119]"/>
  <match src="identifier: makeArrayWithAddress [53070,53090]" dest="identifier: makeArrayWithAddress [55088,55108]"/>
  <match src="=: = [35872,35873]" dest="=: = [42119,42120]"/>
  <match src="variable_declaration_statement [36374,36403]" dest="variable_declaration_statement [38234,38260]"/>
  <match src="call_expression [50921,50936]" dest="call_expression [53506,53521]"/>
  <match src="parameter [3569,3573]" dest="parameter [3569,3573]"/>
  <match src="identifier: toUint [51248,51254]" dest="identifier: toUint [53833,53839]"/>
  <match src="call_expression [51132,51159]" dest="call_expression [53717,53744]"/>
  <match src="(: ( [53354,53355]" dest="(: ( [55615,55616]"/>
  <match src="parameter [41401,41415]" dest="parameter [43843,43854]"/>
  <match src="call_expression [35326,35354]" dest="call_expression [36207,36235]"/>
  <match src="identifier: getRoleMember [30339,30352]" dest="identifier: getRoleMember [30339,30352]"/>
  <match src="external: external [43787,43795]" dest="external: external [46226,46234]"/>
  <match src="=: = [39787,39788]" dest="=: = [42267,42268]"/>
  <match src="parameter [33716,33731]" dest="parameter [33716,33731]"/>
  <match src="function_definition [15992,16135]" dest="function_definition [15992,16135]"/>
  <match src="(: ( [2657,2658]" dest="(: ( [2657,2658]"/>
  <match src=",: , [29320,29321]" dest=",: , [29320,29321]"/>
  <match src="identifier: Context [27776,27783]" dest="identifier: Context [27776,27783]"/>
  <match src="}: } [46432,46433]" dest="}: } [48773,48774]"/>
  <match src="parameter [18882,18901]" dest="parameter [18882,18901]"/>
  <match src="type_name [818,824]" dest="type_name [818,824]"/>
  <match src="function_definition [18180,18326]" dest="function_definition [18180,18326]"/>
  <match src="variable_declaration [50956,50998]" dest="variable_declaration [53541,53583]"/>
  <match src="storage: storage [15551,15558]" dest="storage: storage [15551,15558]"/>
  <match src="expression_statement [31109,31215]" dest="expression_statement [31109,31215]"/>
  <match src="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event. Note that unlike {grantRole}, this function doesn't perform any      * checks on the calling account.      *      * [WARNING]      * ====      * This function should only be called from the constructor when setting      * up the initial roles for the system.      *      * Using this function in any other way is effectively circumventing the admin      * system imposed by {AccessControl}.      * ====      */ [32459,33028]" dest="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event. Note that unlike {grantRole}, this function doesn't perform any      * checks on the calling account.      *      * [WARNING]      * ====      * This function should only be called from the constructor when setting      * up the initial roles for the system.      *      * Using this function in any other way is effectively circumventing the admin      * system imposed by {AccessControl}.      * ====      */ [32459,33028]"/>
  <match src="(: ( [4714,4715]" dest="(: ( [4714,4715]"/>
  <match src="indexed: indexed [2382,2389]" dest="indexed: indexed [2382,2389]"/>
  <match src="call_argument [53070,53117]" dest="call_argument [55088,55135]"/>
  <match src="identifier: srcpart [42846,42853]" dest="identifier: srcpart [45270,45277]"/>
  <match src="{: { [31571,31572]" dest="{: { [31571,31572]"/>
  <match src="primitive_type [4715,4722]" dest="primitive_type [4715,4722]"/>
  <match src="member_expression [33559,33583]" dest="member_expression [33559,33583]"/>
  <match src=",: , [39116,39117]" dest=",: , [41760,41761]"/>
  <match src=",: , [47259,47260]" dest=",: , [49600,49601]"/>
  <match src="parameter [47953,47969]" dest="parameter [50294,50310]"/>
  <match src="number_literal: 0 [46391,46392]" dest="number_literal: 0 [48732,48733]"/>
  <match src="interface_declaration [43114,44385]" dest="interface_declaration [45553,46824]"/>
  <match src="function_body [45618,45620]" dest="function_body [47959,47961]"/>
  <match src="identifier: recipient [21400,21409]" dest="identifier: recipient [21400,21409]"/>
  <match src="identifier: value [16119,16124]" dest="identifier: value [16119,16124]"/>
  <match src="(: ( [34257,34258]" dest="(: ( [34257,34258]"/>
  <match src="identifier: toUint [37327,37333]" dest="identifier: toUint [40657,40663]"/>
  <match src="address: address [16351,16358]" dest="address: address [16351,16358]"/>
  <match src=".: . [53109,53110]" dest=".: . [55127,55128]"/>
  <match src="internal: internal [34096,34104]" dest="internal: internal [34096,34104]"/>
  <match src="comment: /**      * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.      *      * If an {URI} event was emitted for `id`, the standard      * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value      * returned by {IERC1155MetadataURI-uri}.      */ [1995,2344]" dest="comment: /**      * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.      *      * If an {URI} event was emitted for `id`, the standard      * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value      * returned by {IERC1155MetadataURI-uri}.      */ [1995,2344]"/>
  <match src="identifier: to [1423,1425]" dest="identifier: to [1423,1425]"/>
  <match src="(: ( [24683,24684]" dest="(: ( [24683,24684]"/>
  <match src="primitive_type [3290,3297]" dest="primitive_type [3290,3297]"/>
  <match src=",: , [46912,46913]" dest=",: , [49253,49254]"/>
  <match src="identifier: account [33632,33639]" dest="identifier: account [33632,33639]"/>
  <match src="view: view [9769,9773]" dest="view: view [9769,9773]"/>
  <match src="(: ( [17745,17746]" dest="(: ( [17745,17746]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [16143,16305]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [16143,16305]"/>
  <match src=".: . [15175,15176]" dest=".: . [15175,15176]"/>
  <match src=".: . [26037,26038]" dest=".: . [26037,26038]"/>
  <match src="=&gt;: =&gt; [9291,9293]" dest="=&gt;: =&gt; [9291,9293]"/>
  <match src="parameter [22545,22559]" dest="parameter [22545,22559]"/>
  <match src="(: ( [22544,22545]" dest="(: ( [22544,22545]"/>
  <match src="visibility [44373,44381]" dest="visibility [46812,46820]"/>
  <match src="identifier: role [33397,33401]" dest="identifier: role [33397,33401]"/>
  <match src="function_definition [6080,6193]" dest="function_definition [6080,6193]"/>
  <match src="identifier: len [37480,37483]" dest="identifier: len [38177,38180]"/>
  <match src="yul_path [42772,42776]" dest="yul_path [45192,45196]"/>
  <match src="yul_decimal_number: 1 [41259,41260]" dest="yul_decimal_number: 1 [43701,43702]"/>
  <match src="): ) [36964,36965]" dest="): ) [39738,39739]"/>
  <match src="address: address [45648,45655]" dest="address: address [47989,47996]"/>
  <match src="&quot;: &quot; [53244,53245]" dest="&quot;: &quot; [55464,55465]"/>
  <match src="identifier: len [39184,39187]" dest="identifier: len [41814,41817]"/>
  <match src="type_name [37378,37385]" dest="type_name [40708,40712]"/>
  <match src="): ) [9350,9351]" dest="): ) [9350,9351]"/>
  <match src="identifier: keccak256 [44987,44996]" dest="identifier: keccak256 [47328,47337]"/>
  <match src="): ) [28507,28508]" dest="): ) [28507,28508]"/>
  <match src="identifier: interfaceId [10438,10449]" dest="identifier: interfaceId [10438,10449]"/>
  <match src="yul_identifier [42836,42844]" dest="yul_identifier [45260,45268]"/>
  <match src="{: { [48710,48711]" dest="{: { [51051,51052]"/>
  <match src="identifier: byte0 [40200,40205]" dest="identifier: byte0 [42578,42583]"/>
  <match src="): ) [41730,41731]" dest="): ) [44150,44151]"/>
  <match src="yul_function_call [41137,41163]" dest="yul_function_call [43579,43605]"/>
  <match src="type_name [8551,8560]" dest="type_name [8551,8560]"/>
  <match src="]: ] [50899,50900]" dest="]: ] [53484,53485]"/>
  <match src="bool: bool [17717,17721]" dest="bool: bool [17717,17721]"/>
  <match src="identifier: tokenBalance [51777,51789]" dest="identifier: balance [54300,54307]"/>
  <match src="identifier: logTopicRLPList [51390,51405]" dest="identifier: logTopicRLPList [53990,54005]"/>
  <match src="type_name [16005,16015]" dest="type_name [16005,16015]"/>
  <match src="(: ( [52551,52552]" dest="(: ( [54756,54757]"/>
  <match src="[: [ [13453,13454]" dest="[: [ [13453,13454]"/>
  <match src="primitive_type [17360,17367]" dest="primitive_type [17360,17367]"/>
  <match src="user_defined_type [17454,17457]" dest="user_defined_type [17454,17457]"/>
  <match src="parameter [18941,18948]" dest="parameter [18941,18948]"/>
  <match src="mload: mload [36454,36459]" dest="mload: mload [38311,38316]"/>
  <match src="): ) [31634,31635]" dest="): ) [31634,31635]"/>
  <match src="call_expression [45751,45789]" dest="call_expression [48092,48130]"/>
  <match src="if: if [12726,12728]" dest="if: if [12726,12728]"/>
  <match src="inheritance_specifier [10696,10712]" dest="inheritance_specifier [10696,10712]"/>
  <match src="primitive_type [4224,4231]" dest="primitive_type [4224,4231]"/>
  <match src="using: using [44870,44875]" dest="using: using [47211,47216]"/>
  <match src="return_statement [17734,17774]" dest="return_statement [17734,17774]"/>
  <match src="identifier: safeTransferFrom [4169,4185]" dest="identifier: safeTransferFrom [4169,4185]"/>
  <match src="call_argument [51816,51820]" dest="call_argument [54334,54338]"/>
  <match src="identifier: abi [51531,51534]" dest="identifier: abi [54118,54121]"/>
  <match src="{: { [31098,31099]" dest="{: { [31098,31099]"/>
  <match src="comment: /**  * @dev Library for managing  * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive  * types.  *  * Sets have the following properties:  *  * - Elements are added, removed, and checked for existence in constant time  * (O(1)).  * - Elements are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableSet for EnumerableSet.AddressSet;  *  *     // Declare a set state variable  *     EnumerableSet.AddressSet private mySet;  * }  * ```  *  * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`  * (`UintSet`) are supported.  */ [11044,11732]" dest="comment: /**  * @dev Library for managing  * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive  * types.  *  * Sets have the following properties:  *  * - Elements are added, removed, and checked for existence in constant time  * (O(1)).  * - Elements are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableSet for EnumerableSet.AddressSet;  *  *     // Declare a set state variable  *     EnumerableSet.AddressSet private mySet;  * }  * ```  *  * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`  * (`UintSet`) are supported.  */ [11044,11732]"/>
  <match src="call_argument [33632,33639]" dest="call_argument [33632,33639]"/>
  <match src="identifier: amounts [45574,45581]" dest="identifier: amounts [47915,47922]"/>
  <match src="return_statement [41300,41315]" dest="return_statement [43742,43757]"/>
  <match src="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [15003,15075]" dest="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [15003,15075]"/>
  <match src="}: } [27974,27975]" dest="}: } [27974,27975]"/>
  <match src="identifier: toAddress [37014,37023]" dest="identifier: toAddress [40453,40462]"/>
  <match src="): ) [29421,29422]" dest="): ) [29421,29422]"/>
  <match src="uint256: uint256 [18903,18910]" dest="uint256: uint256 [18903,18910]"/>
  <match src="identifier: set [18214,18217]" dest="identifier: set [18214,18217]"/>
  <match src="expression_statement [34346,34348]" dest="expression_statement [34346,34348]"/>
  <match src="identifier: _roles [33559,33565]" dest="identifier: _roles [33559,33565]"/>
  <match src="uint256: uint256 [2658,2665]" dest="uint256: uint256 [2658,2665]"/>
  <match src="pragma_directive [26396,26419]" dest="pragma_directive [26396,26419]"/>
  <match src="primitive_type [30679,30686]" dest="primitive_type [30679,30686]"/>
  <match src="primitive_type [7341,7348]" dest="primitive_type [7341,7348]"/>
  <match src="return_statement [29377,29423]" dest="return_statement [29377,29423]"/>
  <match src="sub: sub [41025,41028]" dest="sub: sub [43467,43470]"/>
  <match src="identifier: item [38531,38535]" dest="identifier: item [41342,41346]"/>
  <match src="number_literal: 3 [51245,51246]" dest="number_literal: 3 [53830,53831]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [18533,18864]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [18533,18864]"/>
  <match src="primitive_type [38717,38722]" dest="primitive_type [41528,41533]"/>
  <match src="identifier: _owner [45656,45662]" dest="identifier: _owner [47997,48003]"/>
  <match src="yul_evm_builtin [25132,25135]" dest="yul_evm_builtin [25132,25135]"/>
  <match src="type_name [50956,50975]" dest="type_name [53541,53560]"/>
  <match src="identifier: currPtr [39779,39786]" dest="identifier: currPtr [42259,42266]"/>
  <match src="view: view [2961,2965]" dest="view: view [2961,2965]"/>
  <match src="identifier: accountHash [20391,20402]" dest="identifier: accountHash [20391,20402]"/>
  <match src="function_definition [31505,31735]" dest="function_definition [31505,31735]"/>
  <match src="call_argument [33124,33128]" dest="call_argument [33124,33128]"/>
  <match src="event_definition [1900,1987]" dest="event_definition [1900,1987]"/>
  <match src="(: ( [2359,2360]" dest="(: ( [2359,2360]"/>
  <match src="parameter [2658,2665]" dest="parameter [2658,2665]"/>
  <match src="identifier: item [38269,38273]" dest="identifier: item [39987,39991]"/>
  <match src="identifier: target [24253,24259]" dest="identifier: target [24253,24259]"/>
  <match src="return: return [17734,17740]" dest="return: return [17734,17740]"/>
  <match src="pragma_directive [10577,10600]" dest="pragma_directive [10577,10600]"/>
  <match src="identifier: AddressSet [27921,27931]" dest="identifier: AddressSet [27921,27931]"/>
  <match src="primitive_type [8501,8508]" dest="primitive_type [8501,8508]"/>
  <match src="lt: lt [37975,37977]" dest="lt: lt [40984,40986]"/>
  <match src="return_statement [9809,9850]" dest="return_statement [9809,9850]"/>
  <match src="binary_expression [50163,50187]" dest="binary_expression [52576,52600]"/>
  <match src="user_defined_type [35687,35694]" dest="user_defined_type [37652,37659]"/>
  <match src="event_paramater [45426,45451]" dest="event_paramater [47767,47792]"/>
  <match src="solidity_version:  0.6.6 [34643,34649]" dest="solidity_version:  0.6.6 [34643,34649]"/>
  <match src="type_name [17454,17457]" dest="type_name [17454,17457]"/>
  <match src="}: } [41321,41322]" dest="}: } [43763,43764]"/>
  <match src="call_expression [24633,24669]" dest="call_expression [24633,24669]"/>
  <match src="call_argument [51221,51271]" dest="call_argument [53806,53856]"/>
  <match src="identifier: account [33076,33083]" dest="identifier: account [33076,33083]"/>
  <match src="identifier: abi [52708,52711]" dest="identifier: abi [54861,54864]"/>
  <match src="type_name [6135,6144]" dest="type_name [6135,6144]"/>
  <match src="identifier: role [32429,32433]" dest="identifier: role [32429,32433]"/>
  <match src="call_expression [37201,37261]" dest="call_expression [40568,40591]"/>
  <match src="(: ( [36450,36451]" dest="(: ( [38307,38308]"/>
  <match src="primitive_type [44287,44294]" dest="primitive_type [46726,46733]"/>
  <match src="primitive_type [12677,12684]" dest="primitive_type [12677,12684]"/>
  <match src="(: ( [15097,15098]" dest="(: ( [15097,15098]"/>
  <match src="return_type_definition [17316,17333]" dest="return_type_definition [17316,17333]"/>
  <match src="expression_statement [14662,14689]" dest="expression_statement [14662,14689]"/>
  <match src="[: [ [49819,49820]" dest="[: [ [52172,52173]"/>
  <match src=".: . [38318,38319]" dest=".: . [41565,41566]"/>
  <match src="): ) [16125,16126]" dest="): ) [16125,16126]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [13068,13230]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [13068,13230]"/>
  <match src="type_name [16327,16337]" dest="type_name [16327,16337]"/>
  <match src="): ) [38191,38192]" dest="): ) [41200,41201]"/>
  <match src="(: ( [31159,31160]" dest="(: ( [31159,31160]"/>
  <match src="parameter [16626,16630]" dest="parameter [16626,16630]"/>
  <match src=".: . [12772,12773]" dest=".: . [12772,12773]"/>
  <match src="(: ( [45154,45155]" dest="(: ( [47495,47496]"/>
  <match src="comment: // All indexes are 1-based [14467,14493]" dest="comment: // All indexes are 1-based [14467,14493]"/>
  <match src="(: ( [42227,42228]" dest="(: ( [44604,44605]"/>
  <match src="array_access [13441,13460]" dest="array_access [13441,13460]"/>
  <match src="+: + [36114,36115]" dest="+: + [37930,37931]"/>
  <match src="mload: mload [41524,41529]" dest="mload: mload [43957,43962]"/>
  <match src="string [53244,53246]" dest="string [55464,55466]"/>
  <match src="identifier: set [18444,18447]" dest="identifier: set [18444,18447]"/>
  <match src="parameter [34225,34237]" dest="parameter [34225,34237]"/>
  <match src=".: . [47240,47241]" dest=".: . [49581,49582]"/>
  <match src="type_name [35657,35666]" dest="type_name [37622,37631]"/>
  <match src="{: { [9027,9028]" dest="{: { [9027,9028]"/>
  <match src="indexed: indexed [45470,45477]" dest="indexed: indexed [47811,47818]"/>
  <match src="return: return [18961,18967]" dest="return: return [18961,18967]"/>
  <match src="uint256: uint256 [15564,15571]" dest="uint256: uint256 [15564,15571]"/>
  <match src="boolean_literal [36528,36533]" dest="boolean_literal [38398,38403]"/>
  <match src="identifier: _owner [45825,45831]" dest="identifier: _owner [48166,48172]"/>
  <match src="member_expression [30741,30763]" dest="member_expression [30741,30763]"/>
  <match src="(: ( [41149,41150]" dest="(: ( [43591,43592]"/>
  <match src="solidity_pragma_token [979,994]" dest="solidity_pragma_token [979,994]"/>
  <match src="primitive_type [6135,6142]" dest="primitive_type [6135,6142]"/>
  <match src="identifier: ApprovalForAll [1906,1920]" dest="identifier: ApprovalForAll [1906,1920]"/>
  <match src="member_expression [13912,13923]" dest="member_expression [13912,13923]"/>
  <match src="): ) [33423,33424]" dest="): ) [33423,33424]"/>
  <match src="call_expression [45056,45084]" dest="call_expression [47397,47425]"/>
  <match src="&quot;: &quot; [48776,48777]" dest="&quot;: &quot; [51117,51118]"/>
  <match src=",: , [5484,5485]" dest=",: , [5484,5485]"/>
  <match src="identifier: interfaceId [9837,9848]" dest="identifier: interfaceId [9837,9848]"/>
  <match src=".: . [29714,29715]" dest=".: . [29714,29715]"/>
  <match src=".: . [35878,35879]" dest=".: . [42125,42126]"/>
  <match src="bytes32: bytes32 [30714,30721]" dest="bytes32: bytes32 [30714,30721]"/>
  <match src="{: { [10713,10714]" dest="{: { [10713,10714]"/>
  <match src="bytes32: bytes32 [30679,30686]" dest="bytes32: bytes32 [30679,30686]"/>
  <match src="function: function [16311,16319]" dest="function: function [16311,16319]"/>
  <match src="type_name [29360,29364]" dest="type_name [29360,29364]"/>
  <match src="memory: memory [23602,23608]" dest="memory: memory [23602,23608]"/>
  <match src="return_statement [26027,26045]" dest="return_statement [26027,26045]"/>
  <match src="address: address [29322,29329]" dest="address: address [29322,29329]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC1155/ERC1155Receiver.sol [10472,10538]" dest="comment: // File: @openzeppelin/contracts/token/ERC1155/ERC1155Receiver.sol [10472,10538]"/>
  <match src="parameter [44312,44329]" dest="parameter [46751,46768]"/>
  <match src="member_expression [36956,36964]" dest="member_expression [39730,39738]"/>
  <match src="yul_identifier [40200,40205]" dest="yul_identifier [42578,42583]"/>
  <match src="solidity_version_comparison_operator [26411,26413]" dest="solidity_version_comparison_operator [26411,26413]"/>
  <match src="identifier: ITokenPredicate [44779,44794]" dest="identifier: ITokenPredicate [47120,47135]"/>
  <match src="parameter [17973,17992]" dest="parameter [17973,17992]"/>
  <match src="(: ( [30678,30679]" dest="(: ( [30678,30679]"/>
  <match src="call_expression [21630,21665]" dest="call_expression [21630,21665]"/>
  <match src="bytes32: bytes32 [18303,18310]" dest="bytes32: bytes32 [18303,18310]"/>
  <match src="using_directive [44870,44896]" dest="using_directive [47211,47237]"/>
  <match src="identifier: length [15176,15182]" dest="identifier: length [15176,15182]"/>
  <match src="type_cast_expression [37281,37302]" dest="type_cast_expression [40611,40632]"/>
  <match src="]: ] [49627,49628]" dest="]: ] [51968,51969]"/>
  <match src="): ) [16860,16861]" dest="): ) [16860,16861]"/>
  <match src="yul_evm_builtin [38016,38019]" dest="yul_evm_builtin [41025,41028]"/>
  <match src="uint256: uint256 [2975,2982]" dest="uint256: uint256 [2975,2982]"/>
  <match src="address: address [8501,8508]" dest="address: address [8501,8508]"/>
  <match src=".: . [13915,13916]" dest=".: . [13915,13916]"/>
  <match src="identifier: isList [36284,36290]" dest="identifier: isList [38100,38106]"/>
  <match src="bool: bool [18027,18031]" dest="bool: bool [18027,18031]"/>
  <match src=",: , [29148,29149]" dest=",: , [29148,29149]"/>
  <match src="(: ( [38672,38673]" dest="(: ( [41483,41484]"/>
  <match src="using_directive [27846,27872]" dest="using_directive [27846,27872]"/>
  <match src="identifier: set [14897,14900]" dest="identifier: set [14897,14900]"/>
  <match src="function: function [35433,35441]" dest="function: function [37461,37469]"/>
  <match src="comment: // topics [51025,51034]" dest="comment: // topics [53610,53619]"/>
  <match src="internal: internal [22580,22588]" dest="internal: internal [22580,22588]"/>
  <match src="identifier: _contains [12731,12740]" dest="identifier: _contains [12731,12740]"/>
  <match src="): ) [18517,18518]" dest="): ) [18517,18518]"/>
  <match src="solidity_pragma_token [34635,34649]" dest="solidity_pragma_token [34635,34649]"/>
  <match src=".: . [29404,29405]" dest=".: . [29404,29405]"/>
  <match src="contract: contract [27750,27758]" dest="contract: contract [27750,27758]"/>
  <match src="state_variable_declaration [9120,9178]" dest="state_variable_declaration [9120,9178]"/>
  <match src="function: function [29291,29299]" dest="function: function [29291,29299]"/>
  <match src="comment: // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs [13951,14057]" dest="comment: // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs [13951,14057]"/>
  <match src="&quot;: &quot; [52513,52514]" dest="&quot;: &quot; [54699,54700]"/>
  <match src="identifier: item [38820,38824]" dest="identifier: item [39926,39930]"/>
  <match src="type_name [46895,46902]" dest="type_name [49236,49243]"/>
  <match src="(: ( [23649,23650]" dest="(: ( [23649,23650]"/>
  <match src="primitive_type [28791,28798]" dest="primitive_type [28791,28798]"/>
  <match src="(: ( [49033,49034]" dest="(: ( [51374,51375]"/>
  <match src="]: ] [51246,51247]" dest="]: ] [53831,53832]"/>
  <match src="variable_declaration_statement [36786,36828]" dest="variable_declaration_statement [39507,39549]"/>
  <match src="primitive_type [51124,51131]" dest="primitive_type [53709,53716]"/>
  <match src="{: { [24693,24694]" dest="{: { [24693,24694]"/>
  <match src="variable_declaration [36840,36851]" dest="variable_declaration [38692,38703]"/>
  <match src="{: { [32310,32311]" dest="{: { [32310,32311]"/>
  <match src="): ) [48151,48152]" dest="): ) [50492,50493]"/>
  <match src="): ) [16449,16450]" dest="): ) [16449,16450]"/>
  <match src="solidity_pragma_token [10584,10599]" dest="solidity_pragma_token [10584,10599]"/>
  <match src="[: [ [50313,50314]" dest="[: [ [52726,52727]"/>
  <match src="[: [ [51244,51245]" dest="[: [ [53829,53830]"/>
  <match src=",: , [3526,3527]" dest=",: , [3526,3527]"/>
  <match src="identifier: len [37620,37623]" dest="identifier: len [35946,35949]"/>
  <match src="identifier: role [33442,33446]" dest="identifier: role [33442,33446]"/>
  <match src="state_mutability [2961,2965]" dest="state_mutability [2961,2965]"/>
  <match src="identifier: items [35697,35702]" dest="identifier: items [37662,37667]"/>
  <match src="comment: /**      * @notice Calculates amount of tokens to be minted, by subtracting available      * token balances from amount of tokens to be exited      * @param tokenBalances Token balances this contract holds for some ordered token ids      * @param amountsToBeExited Amount of tokens being exited      */ [49154,49461]" dest="comment: /**      * @notice Calculates amount of tokens to be minted, by subtracting available      * token balances from amount of tokens to be exited      * @param tokenBalances Token balances this contract holds for some ordered token ids      * @param amountsToBeExited Amount of tokens being exited      */ [51495,51802]"/>
  <match src="function_body [15610,15738]" dest="function_body [15610,15738]"/>
  <match src="storage: storage [18206,18213]" dest="storage: storage [18206,18213]"/>
  <match src="): ) [18948,18949]" dest="): ) [18948,18949]"/>
  <match src="yul_evm_builtin [40501,40504]" dest="yul_evm_builtin [42904,42907]"/>
  <match src="state_variable_declaration [44492,44512]" dest="state_variable_declaration [46931,46951]"/>
  <match src="[: [ [48975,48976]" dest="[: [ [51316,51317]"/>
  <match src="memory: memory [22990,22996]" dest="memory: memory [22990,22996]"/>
  <match src="boolean_literal [44506,44511]" dest="boolean_literal [46945,46950]"/>
  <match src="identifier: TOKEN_TYPE [45043,45053]" dest="identifier: TOKEN_TYPE [47384,47394]"/>
  <match src="yul_identifier [40223,40229]" dest="yul_identifier [42601,42607]"/>
  <match src="identifier: toDeleteIndex [13847,13860]" dest="identifier: toDeleteIndex [13847,13860]"/>
  <match src="identifier: index [30454,30459]" dest="identifier: index [30454,30459]"/>
  <match src="assignment_expression [49079,49098]" dest="assignment_expression [51420,51439]"/>
  <match src="]: ] [50334,50335]" dest="]: ] [52747,52748]"/>
  <match src="identifier: accounts [2918,2926]" dest="identifier: accounts [2918,2926]"/>
  <match src="return: return [29687,29693]" dest="return: return [29687,29693]"/>
  <match src="private: private [28013,28020]" dest="private: private [28013,28020]"/>
  <match src="function_definition [12646,13060]" dest="function_definition [12646,13060]"/>
  <match src="bytes: bytes [46300,46305]" dest="bytes: bytes [48641,48646]"/>
  <match src="variable_declaration_statement [38236,38282]" dest="variable_declaration_statement [39973,39999]"/>
  <match src="expression_statement [32321,32405]" dest="expression_statement [32321,32405]"/>
  <match src=",: , [29173,29174]" dest=",: , [29173,29174]"/>
  <match src="address: address [21384,21391]" dest="address: address [21384,21391]"/>
  <match src="type_name [34861,34866]" dest="type_name [34867,34872]"/>
  <match src="view: view [30700,30704]" dest="view: view [30700,30704]"/>
  <match src="identifier: toUint [37289,37295]" dest="identifier: toUint [40619,40625]"/>
  <match src="address: address [43691,43698]" dest="address: address [46130,46137]"/>
  <match src="identifier: RLPItem [36059,36066]" dest="identifier: RLPItem [37874,37881]"/>
  <match src="call_expression [16650,16696]" dest="call_expression [16650,16696]"/>
  <match src="call_argument [47631,47635]" dest="call_argument [49972,49976]"/>
  <match src="uint256: uint256 [16111,16118]" dest="uint256: uint256 [16111,16118]"/>
  <match src="type_name [43663,43670]" dest="type_name [46102,46109]"/>
  <match src="identifier: STRING_LONG_START [40325,40342]" dest="identifier: STRING_LONG_START [42726,42743]"/>
  <match src="}: } [14779,14780]" dest="}: } [14779,14780]"/>
  <match src="identifier: set [18059,18062]" dest="identifier: set [18059,18062]"/>
  <match src="call_argument [36956,36964]" dest="call_argument [39730,39738]"/>
  <match src="function_body [24120,24295]" dest="function_body [24120,24295]"/>
  <match src="bytes: bytes [52506,52511]" dest="bytes: bytes [54692,54697]"/>
  <match src="member_expression [34136,34152]" dest="member_expression [34136,34152]"/>
  <match src="yul_path [35285,35289]" dest="yul_path [36166,36170]"/>
  <match src="yul_function_call [35281,35296]" dest="yul_function_call [36162,36177]"/>
  <match src="call_expression [36933,36965]" dest="call_expression [39707,39739]"/>
  <match src="memory: memory [26117,26123]" dest="memory: memory [26117,26123]"/>
  <match src="identifier: memPtr [41059,41065]" dest="identifier: memPtr [43501,43507]"/>
  <match src="primitive_type [27864,27871]" dest="primitive_type [27864,27871]"/>
  <match src="identifier: memPtr [36943,36949]" dest="identifier: memPtr [39717,39723]"/>
  <match src="): ) [35468,35469]" dest="): ) [37496,37497]"/>
  <match src="[: [ [45571,45572]" dest="[: [ [47912,47913]"/>
  <match src="storage: storage [16338,16345]" dest="storage: storage [16338,16345]"/>
  <match src="): ) [51447,51448]" dest="): ) [54070,54071]"/>
  <match src="): ) [12752,12753]" dest="): ) [12752,12753]"/>
  <match src="function: function [30330,30338]" dest="function: function [30330,30338]"/>
  <match src="yul_path [37978,37981]" dest="yul_path [40987,40990]"/>
  <match src=",: , [3306,3307]" dest=",: , [3306,3307]"/>
  <match src="identifier: _remove [13245,13252]" dest="identifier: _remove [13245,13252]"/>
  <match src="type_name [46271,46280]" dest="type_name [48612,48621]"/>
  <match src="function: function [25946,25954]" dest="function: function [25946,25954]"/>
  <match src="member_expression [14669,14681]" dest="member_expression [14669,14681]"/>
  <match src="primitive_type [43725,43732]" dest="primitive_type [46164,46171]"/>
  <match src="identifier: target [22553,22559]" dest="identifier: target [22553,22559]"/>
  <match src="(: ( [21661,21662]" dest="(: ( [21661,21662]"/>
  <match src="return_statement [24708,24726]" dest="return_statement [24708,24726]"/>
  <match src="internal: internal [25968,25976]" dest="internal: internal [25968,25976]"/>
  <match src="type_name [45019,45026]" dest="type_name [47360,47367]"/>
  <match src="identifier: logData [52737,52744]" dest="identifier: logData [54890,54897]"/>
  <match src="call_argument [49670,49718]" dest="call_argument [52023,52071]"/>
  <match src="identifier: selector [10888,10896]" dest="identifier: selector [10888,10896]"/>
  <match src="solidity: solidity [42950,42958]" dest="solidity: solidity [45389,45397]"/>
  <match src="(: ( [47247,47248]" dest="(: ( [49588,49589]"/>
  <match src="identifier: IERC165 [6403,6410]" dest="identifier: IERC165 [6403,6410]"/>
  <match src="comment: /*      * @param src Pointer to source      * @param dest Pointer to destination      * @param len Amount of memory to copy from the source      */ [41955,42106]" dest="comment: /*     * @dev Create an iterator. Reverts if item is not a list.     * @param self The RLP item.     * @return An 'Iterator' over the item.     */ [36251,36401]"/>
  <match src="}: } [869,870]" dest="}: } [869,870]"/>
  <match src="]: ] [14981,14982]" dest="]: ] [14981,14982]"/>
  <match src="string [32354,32403]" dest="string [32354,32403]"/>
  <match src="+=: += [42450,42452]" dest="+=: += [44827,44829]"/>
  <match src="type_name [50956,50973]" dest="type_name [53541,53558]"/>
  <match src="struct_member [27907,27940]" dest="struct_member [27907,27940]"/>
  <match src="unary_expression [14662,14681]" dest="unary_expression [14662,14681]"/>
  <match src="identifier: isList [37097,37103]" dest="identifier: payloadLocation [39161,39176]"/>
  <match src="call_argument [49877,49897]" dest="call_argument [52230,52250]"/>
  <match src="): ) [34334,34335]" dest="): ) [34334,34335]"/>
  <match src="variable_declaration [36374,36388]" dest="variable_declaration [38234,38245]"/>
  <match src="identifier: log [50824,50827]" dest="identifier: log [53409,53412]"/>
  <match src="identifier: data [47219,47223]" dest="identifier: data [49560,49564]"/>
  <match src="mload: mload [40702,40707]" dest="mload: mload [43121,43126]"/>
  <match src="solidity_pragma_token [104,119]" dest="solidity_pragma_token [104,119]"/>
  <match src="(: ( [51268,51269]" dest="(: ( [53853,53854]"/>
  <match src="++: ++ [49060,49062]" dest="++: ++ [51401,51403]"/>
  <match src="member_expression [35874,35885]" dest="member_expression [42121,42132]"/>
  <match src="variable_declaration_tuple [51500,51528]" dest="variable_declaration_tuple [54087,54115]"/>
  <match src="[: [ [14327,14328]" dest="[: [ [14327,14328]"/>
  <match src="(: ( [35119,35120]" dest="(: ( [36078,36079]"/>
  <match src="identifier: require [38292,38299]" dest="identifier: require [41553,41560]"/>
  <match src="yul_variable_declaration [42675,42716]" dest="yul_variable_declaration [45091,45132]"/>
  <match src="type_name [39024,39029]" dest="type_name [41671,41676]"/>
  <match src="function_body [16390,16460]" dest="function_body [16390,16460]"/>
  <match src="assembly: assembly [36413,36421]" dest="assembly: assembly [38270,38278]"/>
  <match src="identifier: role [30437,30441]" dest="identifier: role [30437,30441]"/>
  <match src="identifier: _values [15633,15640]" dest="identifier: _values [15633,15640]"/>
  <match src="primitive_type [2623,2630]" dest="primitive_type [2623,2630]"/>
  <match src="identifier: Set [15098,15101]" dest="identifier: Set [15098,15101]"/>
  <match src="uint256: uint256 [1718,1725]" dest="uint256: uint256 [1718,1725]"/>
  <match src="if_statement [13473,14773]" dest="if_statement [13473,14773]"/>
  <match src="bytes: bytes [38717,38722]" dest="bytes: bytes [41528,41533]"/>
  <match src="function_definition [10264,10465]" dest="function_definition [10264,10465]"/>
  <match src="type_name [23596,23601]" dest="type_name [23596,23601]"/>
  <match src="(: ( [51381,51382]" dest="(: ( [54032,54033]"/>
  <match src="user_defined_type [38673,38680]" dest="user_defined_type [41484,41491]"/>
  <match src="call_expression [16086,16127]" dest="call_expression [16086,16127]"/>
  <match src="(: ( [53519,53520]" dest="(: ( [55816,55817]"/>
  <match src=",: , [42844,42845]" dest=",: , [45268,45269]"/>
  <match src="uint256: uint256 [48170,48177]" dest="uint256: uint256 [50511,50518]"/>
  <match src="identifier: item [35334,35338]" dest="identifier: item [36215,36219]"/>
  <match src="{: { [15146,15147]" dest="{: { [15146,15147]"/>
  <match src="add: add [40580,40583]" dest="add: add [42983,42986]"/>
  <match src="view: view [15123,15127]" dest="view: view [15123,15127]"/>
  <match src="call_argument [47248,47259]" dest="call_argument [49589,49600]"/>
  <match src="type_name [7318,7325]" dest="type_name [7318,7325]"/>
  <match src="function_body [18481,18526]" dest="function_body [18481,18526]"/>
  <match src="member_expression [13441,13453]" dest="member_expression [13441,13453]"/>
  <match src="identifier: _inner [16664,16670]" dest="identifier: _inner [16664,16670]"/>
  <match src="): ) [46955,46956]" dest="): ) [49296,49297]"/>
  <match src="expression_statement [15621,15695]" dest="expression_statement [15621,15695]"/>
  <match src=",: , [33714,33715]" dest=",: , [33714,33715]"/>
  <match src="identifier: returndata [24619,24629]" dest="identifier: returndata [24619,24629]"/>
  <match src="identifier: memPtr [40584,40590]" dest="identifier: memPtr [42987,42993]"/>
  <match src="type_name [4186,4193]" dest="type_name [4186,4193]"/>
  <match src="uint256: uint256 [49812,49819]" dest="uint256: uint256 [52165,52172]"/>
  <match src="(: ( [18881,18882]" dest="(: ( [18881,18882]"/>
  <match src="override_specifier [46966,46974]" dest="override_specifier [49307,49315]"/>
  <match src="type_name [50783,50790]" dest="type_name [53368,53375]"/>
  <match src="assembly_statement [36862,36921]" dest="assembly_statement [39636,39695]"/>
  <match src="call_argument [22655,22687]" dest="call_argument [22655,22687]"/>
  <match src="parameter [23528,23542]" dest="parameter [23528,23542]"/>
  <match src="return_type_definition [16617,16631]" dest="return_type_definition [16617,16631]"/>
  <match src="identifier: item [37349,37353]" dest="identifier: item [40679,40683]"/>
  <match src="(: ( [16625,16626]" dest="(: ( [16625,16626]"/>
  <match src="): ) [40741,40742]" dest="): ) [43160,43161]"/>
  <match src="return: return [14956,14962]" dest="return: return [14956,14962]"/>
  <match src="is: is [4941,4943]" dest="is: is [4941,4943]"/>
  <match src="[: [ [30747,30748]" dest="[: [ [30747,30748]"/>
  <match src="view: view [19857,19861]" dest="view: view [19857,19861]"/>
  <match src="uint256: uint256 [49034,49041]" dest="uint256: uint256 [51375,51382]"/>
  <match src="}: } [20360,20361]" dest="}: } [20360,20361]"/>
  <match src="return_statement [15157,15183]" dest="return_statement [15157,15183]"/>
  <match src="comment: // copy as many word sizes as possible [42257,42295]" dest="comment: // copy as many word sizes as possible [44634,44672]"/>
  <match src="): ) [38729,38730]" dest="): ) [41540,41541]"/>
  <match src="variable_declaration_statement [35657,35704]" dest="variable_declaration_statement [37622,37669]"/>
  <match src="member_expression [24829,24846]" dest="member_expression [24829,24846]"/>
  <match src="call_expression [24230,24287]" dest="call_expression [24230,24287]"/>
  <match src="primitive_type [38941,38948]" dest="primitive_type [38728,38735]"/>
  <match src="memory: memory [24357,24363]" dest="memory: memory [24357,24363]"/>
  <match src="(: ( [33755,33756]" dest="(: ( [33755,33756]"/>
  <match src="binary_expression [35972,35981]" dest="binary_expression [37787,37796]"/>
  <match src=",: , [21486,21487]" dest=",: , [21486,21487]"/>
  <match src="boolean_literal [14756,14761]" dest="boolean_literal [14756,14761]"/>
  <match src="): ) [52529,52530]" dest="): ) [54719,54720]"/>
  <match src="call_argument [18079,18084]" dest="call_argument [18079,18084]"/>
  <match src="{: { [431,432]" dest="{: { [431,432]"/>
  <match src="comment: // Generally size is going to be `1` i.e. single element array, but it's kept generic [47788,47873]" dest="comment: // Generally size is going to be `1` i.e. single element array, but it's kept generic [50129,50214]"/>
  <match src="parameter [24370,24386]" dest="parameter [24370,24386]"/>
  <match src="member_expression [51229,51254]" dest="member_expression [53814,53839]"/>
  <match src="type_name [8501,8508]" dest="type_name [8501,8508]"/>
  <match src="returns: returns [852,859]" dest="returns: returns [852,859]"/>
  <match src="type_name [49034,49041]" dest="type_name [51375,51382]"/>
  <match src="=: = [52840,52841]" dest="=: = [54993,54994]"/>
  <match src=",: , [36954,36955]" dest=",: , [39728,39729]"/>
  <match src="(: ( [46390,46391]" dest="(: ( [48731,48732]"/>
  <match src="]: ] [35695,35696]" dest="]: ] [37660,37661]"/>
  <match src="and: and [42690,42693]" dest="and: and [45106,45109]"/>
  <match src="type_name [22561,22566]" dest="type_name [22561,22566]"/>
  <match src="(: ( [41028,41029]" dest="(: ( [43470,43471]"/>
  <match src="): ) [45011,45012]" dest="): ) [47352,47353]"/>
  <match src="using: using [27791,27796]" dest="using: using [27791,27796]"/>
  <match src="member_expression [47475,47524]" dest="member_expression [49816,49865]"/>
  <match src="return_statement [16079,16128]" dest="return_statement [16079,16128]"/>
  <match src="identifier: dest [42772,42776]" dest="identifier: dest [45192,45196]"/>
  <match src="primitive_type [24026,24031]" dest="primitive_type [24026,24031]"/>
  <match src="call_expression [49648,49799]" dest="call_expression [52001,52152]"/>
  <match src="(: ( [16887,16888]" dest="(: ( [16887,16888]"/>
  <match src="-: - [41931,41932]" dest="-: - [44355,44356]"/>
  <match src="for: for [44886,44889]" dest="for: for [47227,47230]"/>
  <match src="member_expression [53279,53328]" dest="member_expression [55558,55585]"/>
  <match src="): ) [17771,17772]" dest="): ) [17771,17772]"/>
  <match src="solidity: solidity [4895,4903]" dest="solidity: solidity [4895,4903]"/>
  <match src="library: library [19201,19208]" dest="library: library [19201,19208]"/>
  <match src="assignment_expression [36047,36083]" dest="assignment_expression [37862,37898]"/>
  <match src="identifier: result [36799,36805]" dest="identifier: result [39520,39526]"/>
  <match src="yul_evm_builtin [25086,25091]" dest="yul_evm_builtin [25086,25091]"/>
  <match src="}: } [33476,33477]" dest="}: } [33476,33477]"/>
  <match src="identifier: RLPItem [35326,35333]" dest="identifier: RLPItem [36207,36214]"/>
  <match src="event_definition [1615,1736]" dest="event_definition [1615,1736]"/>
  <match src="(: ( [38040,38041]" dest="(: ( [41049,41050]"/>
  <match src="assignment_expression [50273,50335]" dest="assignment_expression [52686,52748]"/>
  <match src="state_mutability [3555,3559]" dest="state_mutability [3555,3559]"/>
  <match src="{: { [36341,36342]" dest="{: { [38157,38158]"/>
  <match src="binary_expression [37209,37223]" dest="binary_expression [40576,40590]"/>
  <match src="primitive_type [36840,36847]" dest="primitive_type [38692,38699]"/>
  <match src="type_name [24592,24596]" dest="type_name [24592,24596]"/>
  <match src="): ) [35134,35135]" dest="): ) [36093,36094]"/>
  <match src="number_literal: 32 [34888,34890]" dest="number_literal: 32 [34894,34896]"/>
  <match src="=: = [40365,40366]" dest="=: = [42766,42767]"/>
  <match src="return: return [39975,39981]" dest="return: return [42365,42371]"/>
  <match src=".: . [12933,12934]" dest=".: . [12933,12934]"/>
  <match src=",: , [47191,47192]" dest=",: , [49532,49533]"/>
  <match src="constructor_definition [45597,45620]" dest="constructor_definition [47938,47961]"/>
  <match src="solidity_version: 0.6.0 [114,119]" dest="solidity_version: 0.6.0 [114,119]"/>
  <match src="primitive_type [31539,31546]" dest="primitive_type [31539,31546]"/>
  <match src="{: { [37859,37860]" dest="{: { [40868,40869]"/>
  <match src="binary_expression [37475,37489]" dest="binary_expression [38172,38185]"/>
  <match src="bytes32: bytes32 [12677,12684]" dest="bytes32: bytes32 [12677,12684]"/>
  <match src="identifier: ids [2947,2950]" dest="identifier: ids [2947,2950]"/>
  <match src="struct: struct [27880,27886]" dest="struct: struct [27880,27886]"/>
  <match src="identifier: account [32286,32293]" dest="identifier: account [32286,32293]"/>
  <match src="user_defined_type [17663,17670]" dest="user_defined_type [17663,17670]"/>
  <match src="uint8: uint8 [34772,34777]" dest="uint8: uint8 [34773,34778]"/>
  <match src="type_name [16351,16358]" dest="type_name [16351,16358]"/>
  <match src="string_literal [45066,45083]" dest="string_literal [47407,47424]"/>
  <match src="string [53462,53464]" dest="string [55740,55742]"/>
  <match src="struct_declaration [15767,15814]" dest="struct_declaration [15767,15814]"/>
  <match src="): ) [51416,51417]" dest="): ) [54016,54017]"/>
  <match src="user_defined_type [10688,10694]" dest="user_defined_type [10688,10694]"/>
  <match src="function: function [4684,4692]" dest="function: function [4684,4692]"/>
  <match src="]: ] [10449,10450]" dest="]: ] [10449,10450]"/>
  <match src="function: function [43633,43641]" dest="function: function [46072,46080]"/>
  <match src="bytes: bytes [22561,22566]" dest="bytes: bytes [22561,22566]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [10982,11013]" dest="comment: // SPDX-License-Identifier: MIT [10982,11013]"/>
  <match src="variable_declaration_statement [14179,14222]" dest="variable_declaration_statement [14179,14222]"/>
  <match src="primitive_type [33505,33512]" dest="primitive_type [33505,33512]"/>
  <match src="type_name [47167,47174]" dest="type_name [49508,49515]"/>
  <match src="identifier: amount [21653,21659]" dest="identifier: amount [21653,21659]"/>
  <match src="type_name [15547,15550]" dest="type_name [15547,15550]"/>
  <match src="): ) [17391,17392]" dest="): ) [17391,17392]"/>
  <match src="identifier: _setupRole [45800,45810]" dest="identifier: _setupRole [48141,48151]"/>
  <match src="abstract: abstract [27741,27749]" dest="abstract: abstract [27741,27749]"/>
  <match src="binary_expression [21455,21486]" dest="binary_expression [21455,21486]"/>
  <match src="yul_function_call [25125,25169]" dest="yul_function_call [25125,25169]"/>
  <match src="{: { [42372,42373]" dest="{: { [44749,44750]"/>
  <match src="(: ( [40213,40214]" dest="(: ( [42591,42592]"/>
  <match src="primitive_type [35616,35623]" dest="primitive_type [55157,55164]"/>
  <match src="parameter [36291,36310]" dest="parameter [38107,38126]"/>
  <match src="identifier: LIST_SHORT_START [40929,40945]" dest="identifier: LIST_SHORT_START [43359,43375]"/>
  <match src="primitive_type [47273,47280]" dest="primitive_type [49614,49621]"/>
  <match src="struct_field_assignment [24646,24661]" dest="struct_field_assignment [24646,24661]"/>
  <match src="call_argument [32435,32442]" dest="call_argument [32435,32442]"/>
  <match src="address: address [1385,1392]" dest="address: address [1385,1392]"/>
  <match src="==: == [32337,32339]" dest="==: == [32337,32339]"/>
  <match src="identifier: keccak256 [45287,45296]" dest="identifier: keccak256 [47628,47637]"/>
  <match src="function_body [45685,45840]" dest="function_body [48026,48181]"/>
  <match src="identifier: memPtr [35230,35236]" dest="identifier: balances [55056,55064]"/>
  <match src="): ) [38872,38873]" dest="): ) [39939,39940]"/>
  <match src="identifier: role [28438,28442]" dest="identifier: role [28438,28442]"/>
  <match src="variable_declaration [48170,48179]" dest="variable_declaration [50511,50520]"/>
  <match src="}: } [29429,29430]" dest="}: } [29429,29430]"/>
  <match src="parameter [2899,2926]" dest="parameter [2899,2926]"/>
  <match src="member_expression [37209,37217]" dest="member_expression [40576,40584]"/>
  <match src="member_expression [16416,16426]" dest="member_expression [16416,16426]"/>
  <match src="{: { [36871,36872]" dest="{: { [39645,39646]"/>
  <match src="identifier: memPtr [37890,37896]" dest="identifier: memPtr [40899,40905]"/>
  <match src="identifier: codehash [20406,20414]" dest="identifier: codehash [20406,20414]"/>
  <match src="[: [ [12942,12943]" dest="[: [ [12942,12943]"/>
  <match src="visibility [13285,13292]" dest="visibility [13285,13292]"/>
  <match src="]: ] [52688,52689]" dest="]: ] [54841,54842]"/>
  <match src="visibility [45101,45107]" dest="visibility [47442,47448]"/>
  <match src="assignment_expression [34116,34195]" dest="assignment_expression [34116,34195]"/>
  <match src="identifier: WORD_SIZE [42319,42328]" dest="identifier: WORD_SIZE [44696,44705]"/>
  <match src="): ) [37353,37354]" dest="): ) [40683,40684]"/>
  <match src="identifier: IERC1155Receiver [6383,6399]" dest="identifier: IERC1155Receiver [6383,6399]"/>
  <match src="call_argument [18071,18085]" dest="call_argument [18071,18085]"/>
  <match src="(: ( [42771,42772]" dest="(: ( [45191,45192]"/>
  <match src="state_mutability [47940,47944]" dest="state_mutability [50281,50285]"/>
  <match src="call_argument [52218,52220]" dest="call_argument [54423,54425]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens of token type `id` owned by `account`.      *      * Requirements:      *      * - `account` cannot be the zero address.      */ [2402,2581]" dest="comment: /**      * @dev Returns the amount of tokens of token type `id` owned by `account`.      *      * Requirements:      *      * - `account` cannot be the zero address.      */ [2402,2581]"/>
  <match src="{: { [35256,35257]" dest="{: { [36137,36138]"/>
  <match src="identifier: i [49042,49043]" dest="identifier: i [51383,51384]"/>
  <match src="identifier: copy [36933,36937]" dest="identifier: copy [39707,39711]"/>
  <match src="(: ( [53328,53329]" dest="(: ( [55585,55586]"/>
  <match src="identifier: require [24458,24465]" dest="identifier: require [24458,24465]"/>
  <match src="type_name [12709,12713]" dest="type_name [12709,12713]"/>
  <match src="parameter [18198,18217]" dest="parameter [18198,18217]"/>
  <match src="{: { [25939,25940]" dest="{: { [25939,25940]"/>
  <match src="memory: memory [37342,37348]" dest="memory: memory [40672,40678]"/>
  <match src="(: ( [34279,34280]" dest="(: ( [34279,34280]"/>
  <match src="state_mutability [18927,18931]" dest="state_mutability [18927,18931]"/>
  <match src="primitive_type [48687,48694]" dest="primitive_type [51028,51035]"/>
  <match src="): ) [9760,9761]" dest="): ) [9760,9761]"/>
  <match src="call_argument [10348,10373]" dest="call_argument [10348,10373]"/>
  <match src="bytes4: bytes4 [9742,9748]" dest="bytes4: bytes4 [9742,9748]"/>
  <match src="return: return [16401,16407]" dest="return: return [16401,16407]"/>
  <match src="type_cast_expression [16436,16450]" dest="type_cast_expression [16436,16450]"/>
  <match src="type_name [7341,7348]" dest="type_name [7341,7348]"/>
  <match src="binary_expression [42312,42328]" dest="binary_expression [44689,44705]"/>
  <match src="type_name [34817,34822]" dest="type_name [34820,34825]"/>
  <match src="=: = [13861,13862]" dest="=: = [13861,13862]"/>
  <match src="): ) [44587,44588]" dest="): ) [47026,47027]"/>
  <match src="): ) [33592,33593]" dest="): ) [33592,33593]"/>
  <match src="function: function [18180,18188]" dest="function: function [18180,18188]"/>
  <match src="identifier: _msgData [26069,26077]" dest="identifier: _msgData [26069,26077]"/>
  <match src="variable_declaration [38489,38503]" dest="variable_declaration [41306,41317]"/>
  <match src="identifier: call [21640,21644]" dest="identifier: call [21640,21644]"/>
  <match src="call_expression [52842,52869]" dest="call_expression [54995,55022]"/>
  <match src="identifier: from [4194,4198]" dest="identifier: from [4194,4198]"/>
  <match src="bytes32: bytes32 [16428,16435]" dest="bytes32: bytes32 [16428,16435]"/>
  <match src="type_name [35687,35696]" dest="type_name [37652,37661]"/>
  <match src="call_argument [32329,32352]" dest="call_argument [32329,32352]"/>
  <match src="{: { [52127,52128]" dest="{: { [54381,54382]"/>
  <match src="identifier: item [38314,38318]" dest="identifier: item [41561,41565]"/>
  <match src="identifier: RoleAdminChanged [28405,28421]" dest="identifier: RoleAdminChanged [28405,28421]"/>
  <match src="variable_declaration [35222,35236]" dest="variable_declaration [55039,55064]"/>
  <match src="): ) [53479,53480]" dest="): ) [55761,55762]"/>
  <match src="parameter [8620,8639]" dest="parameter [8620,8639]"/>
  <match src="call_argument [53379,53389]" dest="call_argument [55644,55654]"/>
  <match src="comment: /**      * @dev Mapping of interface ids to whether or not it's supported.      */ [9186,9270]" dest="comment: /**      * @dev Mapping of interface ids to whether or not it's supported.      */ [9186,9270]"/>
  <match src="for: for [42305,42308]" dest="for: for [44682,44685]"/>
  <match src="type_name [4224,4231]" dest="type_name [4224,4231]"/>
  <match src="calldata: calldata [4246,4254]" dest="calldata: calldata [4246,4254]"/>
  <match src="string_literal [45713,45739]" dest="string_literal [48054,48080]"/>
  <match src="): ) [48635,48636]" dest="): ) [50976,50977]"/>
  <match src="type_name [24370,24377]" dest="type_name [24370,24377]"/>
  <match src="array_access [36047,36056]" dest="array_access [37862,37871]"/>
  <match src="primitive_type [17352,17359]" dest="primitive_type [17352,17359]"/>
  <match src="bytes32: bytes32 [29128,29135]" dest="bytes32: bytes32 [29128,29135]"/>
  <match src="number_literal: 0x01ffc9a7 [9167,9177]" dest="number_literal: 0x01ffc9a7 [9167,9177]"/>
  <match src="variable_declaration_tuple [47117,47234]" dest="variable_declaration_tuple [49458,49575]"/>
  <match src="call_argument [31244,31251]" dest="call_argument [31244,31251]"/>
  <match src="primitive_type [29322,29329]" dest="primitive_type [29322,29329]"/>
  <match src="virtual: virtual [32302,32309]" dest="virtual: virtual [32302,32309]"/>
  <match src=":=: := [40803,40805]" dest=":=: := [43222,43224]"/>
  <match src="function: function [24303,24311]" dest="function: function [24303,24311]"/>
  <match src="visibility [21427,21435]" dest="visibility [21427,21435]"/>
  <match src=",: , [48761,48762]" dest=",: , [51102,51103]"/>
  <match src="call_argument [51678,51687]" dest="call_argument [54265,54274]"/>
  <match src="identifier: amount [5478,5484]" dest="identifier: amount [5478,5484]"/>
  <match src="visibility [16603,16611]" dest="visibility [16603,16611]"/>
  <match src="primitive_type [22964,22969]" dest="primitive_type [22964,22969]"/>
  <match src="library_declaration [34654,42876]" dest="library_declaration [34654,45315]"/>
  <match src="type_name [35857,35864]" dest="type_name [42106,42110]"/>
  <match src="identifier: tokenBalances [49877,49890]" dest="identifier: tokenBalances [52230,52243]"/>
  <match src="identifier: memPtr [35347,35353]" dest="identifier: memPtr [36228,36234]"/>
  <match src="(: ( [1920,1921]" dest="(: ( [1920,1921]"/>
  <match src="expression_statement [31701,31728]" dest="expression_statement [31701,31728]"/>
  <match src="bool: bool [3308,3312]" dest="bool: bool [3308,3312]"/>
  <match src="identifier: errorMessage [24274,24286]" dest="identifier: errorMessage [24274,24286]"/>
  <match src="identifier: selector [46417,46425]" dest="identifier: selector [48758,48766]"/>
  <match src="parameter [46224,46231]" dest="parameter [48565,48572]"/>
  <match src="identifier: functionCallWithValue [23628,23649]" dest="identifier: functionCallWithValue [23628,23649]"/>
  <match src="&quot;: &quot; [34165,34166]" dest="&quot;: &quot; [34165,34166]"/>
  <match src="identifier: IMintableERC1155 [51661,51677]" dest="identifier: IMintableERC1155 [54248,54264]"/>
  <match src="identifier: id [5466,5468]" dest="identifier: id [5466,5468]"/>
  <match src="identifier: WORD_SIZE [42337,42346]" dest="identifier: WORD_SIZE [44714,44723]"/>
  <match src="primitive_type [5441,5448]" dest="primitive_type [5441,5448]"/>
  <match src="type_cast_expression [34129,34195]" dest="type_cast_expression [34129,34195]"/>
  <match src="address: address [46206,46213]" dest="address: address [48547,48554]"/>
  <match src="identifier: account [20351,20358]" dest="identifier: account [20351,20358]"/>
  <match src="variable_declaration [47132,47152]" dest="variable_declaration [49473,49493]"/>
  <match src="pragma: pragma [34628,34634]" dest="pragma: pragma [34628,34634]"/>
  <match src="uint256: uint256 [4212,4219]" dest="uint256: uint256 [4212,4219]"/>
  <match src="variable_declaration_statement [35616,35647]" dest="variable_declaration_statement [37584,37612]"/>
  <match src="storage: storage [17671,17678]" dest="storage: storage [17671,17678]"/>
  <match src="expression_statement [44599,44601]" dest="expression_statement [47038,47040]"/>
  <match src="return: return [12985,12991]" dest="return: return [12985,12991]"/>
  <match src="return_statement [18961,19000]" dest="return_statement [18961,19000]"/>
  <match src="public: public [45101,45107]" dest="public: public [47442,47448]"/>
  <match src="return_statement [50374,50399]" dest="return_statement [52925,52984]"/>
  <match src="calldata: calldata [4751,4759]" dest="calldata: calldata [4751,4759]"/>
  <match src="external: external [7422,7430]" dest="external: external [7422,7430]"/>
  <match src="event_paramater [45564,45581]" dest="event_paramater [47905,47922]"/>
  <match src="memory: memory [50976,50982]" dest="memory: memory [53561,53567]"/>
  <match src="yul_identifier [41059,41065]" dest="yul_identifier [43501,43507]"/>
  <match src="]: ] [13459,13460]" dest="]: ] [13459,13460]"/>
  <match src="assembly: assembly [39073,39081]" dest="assembly: assembly [41717,41725]"/>
  <match src="type_name [44340,44345]" dest="type_name [46779,46784]"/>
  <match src="call_expression [44987,45012]" dest="call_expression [47328,47353]"/>
  <match src="): ) [3321,3322]" dest="): ) [3321,3322]"/>
  <match src="internal: internal [18234,18242]" dest="internal: internal [18234,18242]"/>
  <match src="binary_expression [39706,39728]" dest="binary_expression [42187,42209]"/>
  <match src="parameter [4729,4739]" dest="parameter [4729,4739]"/>
  <match src="parameter [24351,24368]" dest="parameter [24351,24368]"/>
  <match src="yul_identifier [40823,40830]" dest="yul_identifier [43242,43249]"/>
  <match src="(: ( [16687,16688]" dest="(: ( [16687,16688]"/>
  <match src="type_name [27864,27871]" dest="type_name [27864,27871]"/>
  <match src="{: { [33741,33742]" dest="{: { [33741,33742]"/>
  <match src="{: { [13014,13015]" dest="{: { [13014,13015]"/>
  <match src="return_type_definition [16053,16067]" dest="return_type_definition [16053,16067]"/>
  <match src="type_name [45648,45655]" dest="type_name [47989,47996]"/>
  <match src="variable_declaration_statement [36840,36852]" dest="variable_declaration_statement [38692,38718]"/>
  <match src="}: } [38647,38648]" dest="}: } [41458,41459]"/>
  <match src="identifier: ERC1155Receiver [10669,10684]" dest="identifier: ERC1155Receiver [10669,10684]"/>
  <match src="type_name [8682,8688]" dest="type_name [8682,8688]"/>
  <match src="): ) [51687,51688]" dest="): ) [54274,54275]"/>
  <match src="parameter [3528,3544]" dest="parameter [3528,3544]"/>
  <match src="string [24171,24211]" dest="string [24171,24211]"/>
  <match src="call_argument [52407,52411]" dest="call_argument [54576,54580]"/>
  <match src="identifier: _payloadOffset [39651,39665]" dest="identifier: _payloadOffset [37709,37723]"/>
  <match src="identifier: _length [18499,18506]" dest="identifier: _length [18499,18506]"/>
  <match src="call_expression [30430,30460]" dest="call_expression [30430,30460]"/>
  <match src="address: address [48968,48975]" dest="address: address [51309,51316]"/>
  <match src="[: [ [6118,6119]" dest="[: [ [6118,6119]"/>
  <match src="): ) [50833,50834]" dest="): ) [53418,53419]"/>
  <match src="[: [ [52665,52666]" dest="[: [ [54818,54819]"/>
  <match src="type_name [33068,33075]" dest="type_name [33068,33075]"/>
  <match src="identifier: ERC1155Receiver [44801,44816]" dest="identifier: ERC1155Receiver [47142,47157]"/>
  <match src="return_type_definition [36326,36340]" dest="return_type_definition [38142,38156]"/>
  <match src=",: , [22647,22648]" dest=",: , [22647,22648]"/>
  <match src="type_name [28479,28486]" dest="type_name [28479,28486]"/>
  <match src="variable_declaration_statement [49812,49909]" dest="variable_declaration_statement [52165,52262]"/>
  <match src="(: ( [52103,52104]" dest="(: ( [54362,54363]"/>
  <match src="identifier: size [48631,48635]" dest="identifier: size [50972,50976]"/>
  <match src="type_name [45997,46004]" dest="type_name [48338,48345]"/>
  <match src="[: [ [14210,14211]" dest="[: [ [14210,14211]"/>
  <match src="call_expression [36808,36827]" dest="call_expression [39529,39548]"/>
  <match src="member_expression [37475,37483]" dest="member_expression [38172,38180]"/>
  <match src="): ) [37043,37044]" dest="): ) [40482,40483]"/>
  <match src="identifier: depositor [43671,43680]" dest="identifier: depositor [46110,46119]"/>
  <match src="&quot;: &quot; [53520,53521]" dest="&quot;: &quot; [55817,55818]"/>
  <match src="identifier: isList [35562,35568]" dest="identifier: isList [37558,37564]"/>
  <match src="identifier: byteLen [40490,40497]" dest="identifier: byteLen [42893,42900]"/>
  <match src="): ) [36031,36032]" dest="): ) [37846,37847]"/>
  <match src="call_expression [48133,48152]" dest="call_expression [50474,50493]"/>
  <match src="parameter [46895,46912]" dest="parameter [49236,49253]"/>
  <match src="type_name [4240,4245]" dest="type_name [4240,4245]"/>
  <match src="primitive_type [4240,4245]" dest="primitive_type [4240,4245]"/>
  <match src="{: { [30723,30724]" dest="{: { [30723,30724]"/>
  <match src="let: let [42675,42678]" dest="let: let [45091,45094]"/>
  <match src="comment: /**  * _Available since v3.1._  */ [6335,6371]" dest="comment: /**  * _Available since v3.1._  */ [6335,6371]"/>
  <match src="internal: internal [18449,18457]" dest="internal: internal [18449,18457]"/>
  <match src="identifier: AccessControl [27759,27772]" dest="identifier: AccessControl [27759,27772]"/>
  <match src="yul_identifier [20351,20358]" dest="yul_identifier [20351,20358]"/>
  <match src="identifier: supportsInterface [800,817]" dest="identifier: supportsInterface [800,817]"/>
  <match src="return_statement [14956,14988]" dest="return_statement [14956,14988]"/>
  <match src=",: , [46004,46005]" dest=",: , [48345,48346]"/>
  <match src="uint256: uint256 [47262,47269]" dest="uint256: uint256 [49603,49610]"/>
  <match src="mload: mload [42766,42771]" dest="mload: mload [45186,45191]"/>
  <match src="identifier: RoleData [27887,27895]" dest="identifier: RoleData [27887,27895]"/>
  <match src="visibility [12692,12699]" dest="visibility [12692,12699]"/>
  <match src="uint256: uint256 [35222,35229]" dest="uint256: uint256 [55039,55046]"/>
  <match src="parameter [8528,8540]" dest="parameter [8528,8540]"/>
  <match src=".: . [51797,51798]" dest=".: . [54315,54316]"/>
  <match src="address: address [33519,33526]" dest="address: address [33519,33526]"/>
  <match src="identifier: isList [37407,37413]" dest="identifier: payloadLocation [37331,37346]"/>
  <match src="): ) [21664,21665]" dest="): ) [21664,21665]"/>
  <match src="[: [ [46278,46279]" dest="[: [ [48619,48620]"/>
  <match src="yul_identifier [36437,36442]" dest="yul_identifier [38294,38299]"/>
  <match src=",: , [16027,16028]" dest=",: , [16027,16028]"/>
  <match src="number_literal: 0 [50160,50161]" dest="number_literal: 0 [52573,52574]"/>
  <match src="visibility [18449,18457]" dest="visibility [18449,18457]"/>
  <match src="inheritance_specifier [33991,34004]" dest="inheritance_specifier [33991,34004]"/>
  <match src="call_argument [24466,24484]" dest="call_argument [24466,24484]"/>
  <match src="identifier: RoleRevoked [33814,33825]" dest="identifier: RoleRevoked [33814,33825]"/>
  <match src="primitive_type [38998,39003]" dest="primitive_type [41645,41650]"/>
  <match src="pure: pure [49605,49609]" dest="pure: pure [51946,51950]"/>
  <match src="yul_identifier [20327,20335]" dest="yul_identifier [20327,20335]"/>
  <match src="event_paramater [28791,28813]" dest="event_paramater [28791,28813]"/>
  <match src="struct_declaration [12212,12468]" dest="struct_declaration [12212,12468]"/>
  <match src="identifier: val [48225,48228]" dest="identifier: val [50566,50569]"/>
  <match src="constant: constant [34685,34693]" dest="constant: constant [34685,34693]"/>
  <match src="function_body [49637,50406]" dest="function_body [51990,52991]"/>
  <match src="identifier: memPtr [41409,41415]" dest="identifier: memPtr [43848,43854]"/>
  <match src="function: function [3485,3493]" dest="function: function [3485,3493]"/>
  <match src="): ) [4812,4813]" dest="): ) [4812,4813]"/>
  <match src="identifier: amounts [47184,47191]" dest="identifier: amounts [49525,49532]"/>
  <match src="identifier: IERC1155 [1183,1191]" dest="identifier: IERC1155 [1183,1191]"/>
  <match src=",: , [33630,33631]" dest=",: , [33630,33631]"/>
  <match src="identifier: id [4220,4222]" dest="identifier: id [4220,4222]"/>
  <match src="identifier: memPtr [40708,40714]" dest="identifier: memPtr [43127,43133]"/>
  <match src="struct_member [12268,12286]" dest="struct_member [12268,12286]"/>
  <match src="primitive_type [9120,9126]" dest="primitive_type [9120,9126]"/>
  <match src="variable_declaration_statement [39591,39609]" dest="variable_declaration_statement [42081,42096]"/>
  <match src="string [15657,15693]" dest="string [15657,15693]"/>
  <match src="mload: mload [42694,42699]" dest="mload: mload [45110,45115]"/>
  <match src="}: } [48270,48271]" dest="}: } [50611,50612]"/>
  <match src="identifier: Set [15547,15550]" dest="identifier: Set [15547,15550]"/>
  <match src="identifier: encodePacked [34140,34152]" dest="identifier: encodePacked [34140,34152]"/>
  <match src="primitive_type [46271,46278]" dest="primitive_type [48612,48619]"/>
  <match src="yul_identifier [38006,38012]" dest="yul_identifier [41015,41021]"/>
  <match src=".: . [46416,46417]" dest=".: . [48757,48758]"/>
  <match src="(: ( [35519,35520]" dest="(: ( [37520,37521]"/>
  <match src="if_statement [36491,36534]" dest="if_statement [38348,38404]"/>
  <match src=",: , [28442,28443]" dest=",: , [28442,28443]"/>
  <match src="identifier: currPtr [39789,39796]" dest="identifier: currPtr [42269,42276]"/>
  <match src="member_expression [14963,14975]" dest="member_expression [14963,14975]"/>
  <match src="{: { [36422,36423]" dest="{: { [38279,38280]"/>
  <match src="let: let [42746,42749]" dest="let: let [45166,45169]"/>
  <match src="**: ** [42617,42619]" dest="**: ** [45024,45026]"/>
  <match src="state_variable_declaration [34679,34720]" dest="state_variable_declaration [34679,34720]"/>
  <match src="address: address [3528,3535]" dest="address: address [3528,3535]"/>
  <match src="variable_declaration [35957,35966]" dest="variable_declaration [37775,37781]"/>
  <match src="expression_statement [48215,48229]" dest="expression_statement [50556,50570]"/>
  <match src="return_statement [29687,29724]" dest="return_statement [29687,29724]"/>
  <match src="{: { [12754,12755]" dest="{: { [12754,12755]"/>
  <match src="is: is [44771,44773]" dest="is: is [47112,47114]"/>
  <match src="contract_body [1203,4826]" dest="contract_body [1203,4826]"/>
  <match src="identifier: dataLen [41107,41114]" dest="identifier: dataLen [43549,43556]"/>
  <match src="}: } [26295,26296]" dest="}: } [26295,26296]"/>
  <match src="parameter [45943,45950]" dest="parameter [48284,48291]"/>
  <match src="identifier: byte0 [40871,40876]" dest="identifier: byte0 [43301,43306]"/>
  <match src="parameter [16005,16027]" dest="parameter [16005,16027]"/>
  <match src="event_paramater [1635,1659]" dest="event_paramater [1635,1659]"/>
  <match src="identifier: value [12746,12751]" dest="identifier: value [12746,12751]"/>
  <match src="): ) [34237,34238]" dest="): ) [34237,34238]"/>
  <match src="calldata: calldata [5492,5500]" dest="calldata: calldata [5492,5500]"/>
  <match src="call_argument [47404,47413]" dest="call_argument [49745,49754]"/>
  <match src="yul_identifier [38581,38587]" dest="yul_identifier [41392,41398]"/>
  <match src="identifier: item [36391,36395]" dest="identifier: item [38248,38252]"/>
  <match src=",: , [33517,33518]" dest=",: , [33517,33518]"/>
  <match src="identifier: role [33763,33767]" dest="identifier: role [33763,33767]"/>
  <match src="binary_expression [41678,41730]" dest="binary_expression [44098,44150]"/>
  <match src="identifier: RLPItem [36685,36692]" dest="identifier: RLPItem [39438,39445]"/>
  <match src="event: event [45383,45388]" dest="event: event [47724,47729]"/>
  <match src="comment: /**      * @dev Returns true if this contract implements the interface defined by      * `interfaceId`. See the corresponding      * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]      * to learn more about how these ids are created.      *      * This function call must use less than 30 000 gas.      */ [438,785]" dest="comment: /**      * @dev Returns true if this contract implements the interface defined by      * `interfaceId`. See the corresponding      * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]      * to learn more about how these ids are created.      *      * This function call must use less than 30 000 gas.      */ [438,785]"/>
  <match src="): ) [31726,31727]" dest="): ) [31726,31727]"/>
  <match src="identifier: STRING_SHORT_START [34694,34712]" dest="identifier: STRING_SHORT_START [34694,34712]"/>
  <match src="primitive_type [47132,47139]" dest="primitive_type [49473,49480]"/>
  <match src="contract_body [34005,34358]" dest="contract_body [34005,34358]"/>
  <match src="): ) [25102,25103]" dest="): ) [25102,25103]"/>
  <match src="variable_declaration [52817,52839]" dest="variable_declaration [54970,54992]"/>
  <match src="comment: // This means that we can only create new EnumerableSets for types that fit [12109,12184]" dest="comment: // This means that we can only create new EnumerableSets for types that fit [12109,12184]"/>
  <match src="(: ( [40701,40702]" dest="(: ( [43120,43121]"/>
  <match src="internal: internal [18918,18926]" dest="internal: internal [18918,18926]"/>
  <match src="parameter [24045,24058]" dest="parameter [24045,24058]"/>
  <match src="type_name [49513,49522]" dest="type_name [51854,51863]"/>
  <match src="yul_path [41128,41134]" dest="yul_path [43570,43576]"/>
  <match src="function_definition [38656,39220]" dest="function_definition [41467,41850]"/>
  <match src=",: , [52678,52679]" dest=",: , [54831,54832]"/>
  <match src="primitive_type [51261,51268]" dest="primitive_type [53846,53853]"/>
  <match src="event_paramater [29175,29197]" dest="event_paramater [29175,29197]"/>
  <match src="{: { [51449,51450]" dest="{: { [54072,54073]"/>
  <match src="]: ] [45572,45573]" dest="]: ] [47913,47914]"/>
  <match src=".: . [12955,12956]" dest=".: . [12955,12956]"/>
  <match src="return_statement [37274,37303]" dest="return_statement [40604,40633]"/>
  <match src="type_name [33315,33322]" dest="type_name [33315,33322]"/>
  <match src="identifier: interfaceId [825,836]" dest="identifier: interfaceId [825,836]"/>
  <match src="(: ( [39029,39030]" dest="(: ( [41676,41677]"/>
  <match src="identifier: value [14976,14981]" dest="identifier: value [14976,14981]"/>
  <match src="(: ( [40105,40106]" dest="(: ( [42492,42493]"/>
  <match src="return: return [24708,24714]" dest="return: return [24708,24714]"/>
  <match src="binary_expression [40317,40342]" dest="binary_expression [42718,42743]"/>
  <match src="for_statement [50143,50362]" dest="for_statement [52556,52913]"/>
  <match src="identifier: inited [44611,44617]" dest="identifier: inited [47050,47056]"/>
  <match src="parameter [29360,29364]" dest="parameter [29360,29364]"/>
  <match src="memory: memory [52690,52696]" dest="memory: memory [54843,54849]"/>
  <match src="state_mutability [40092,40096]" dest="state_mutability [42479,42483]"/>
  <match src="yul_path [20327,20335]" dest="yul_path [20327,20335]"/>
  <match src="comment: /**      * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all      * transfers.      */ [1462,1609]" dest="comment: /**      * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all      * transfers.      */ [1462,1609]"/>
  <match src="type_name [22964,22969]" dest="type_name [22964,22969]"/>
  <match src="): ) [16828,16829]" dest="): ) [16828,16829]"/>
  <match src="number_literal: 0 [35969,35970]" dest="number_literal: 0 [37784,37785]"/>
  <match src="identifier: lastvalue [14187,14196]" dest="identifier: lastvalue [14187,14196]"/>
  <match src="identifier: vals [48259,48263]" dest="identifier: vals [50600,50604]"/>
  <match src="}: } [36134,36135]" dest="}: } [37950,37951]"/>
  <match src="comment: // [49987,49989]" dest="comment: // [52400,52402]"/>
  <match src="): ) [36519,36520]" dest="): ) [38376,38377]"/>
  <match src="primitive_type [2975,2982]" dest="primitive_type [2975,2982]"/>
  <match src="string [31637,31687]" dest="string [31637,31687]"/>
  <match src="comment: // Equivalent to contains(set, value) [13496,13533]" dest="comment: // Equivalent to contains(set, value) [13496,13533]"/>
  <match src="-: - [13874,13875]" dest="-: - [13874,13875]"/>
  <match src="(: ( [38299,38300]" dest="(: ( [41560,41561]"/>
  <match src="call_expression [38412,38476]" dest="call_expression [41270,41293]"/>
  <match src="): ) [22610,22611]" dest="): ) [22610,22611]"/>
  <match src="identifier: values [8603,8609]" dest="identifier: values [8603,8609]"/>
  <match src="yul_evm_builtin [40819,40822]" dest="yul_evm_builtin [43238,43241]"/>
  <match src="identifier: item [39368,39372]" dest="identifier: item [41996,42000]"/>
  <match src="true [36551,36555]" dest="true [38421,38425]"/>
  <match src="{: { [22612,22613]" dest="{: { [22612,22613]"/>
  <match src="): ) [52125,52126]" dest="): ) [54379,54380]"/>
  <match src="member_expression [26034,26044]" dest="member_expression [26034,26044]"/>
  <match src="): ) [48095,48096]" dest="): ) [50436,50437]"/>
  <match src="function: function [33681,33689]" dest="function: function [33681,33689]"/>
  <match src="state_mutability [35097,35101]" dest="state_mutability [36065,36069]"/>
  <match src="return_type_definition [37369,37386]" dest="return_type_definition [40699,40713]"/>
  <match src="): ) [39033,39034]" dest="): ) [41680,41681]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [8758,8789]" dest="comment: // SPDX-License-Identifier: MIT [8758,8789]"/>
  <match src="(: ( [52657,52658]" dest="(: ( [54810,54811]"/>
  <match src="=&gt;: =&gt; [12440,12442]" dest="=&gt;: =&gt; [12440,12442]"/>
  <match src="(: ( [29666,29667]" dest="(: ( [29666,29667]"/>
  <match src="yul_path [41222,41229]" dest="yul_path [43664,43671]"/>
  <match src="type_name [37334,37341]" dest="type_name [40664,40671]"/>
  <match src="event: event [1615,1620]" dest="event: event [1615,1620]"/>
  <match src="returns: returns [30394,30401]" dest="returns: returns [30394,30401]"/>
  <match src="returns: returns [9783,9790]" dest="returns: returns [9783,9790]"/>
  <match src=",: , [44794,44795]" dest=",: , [47135,47136]"/>
  <match src="expression_statement [14316,14355]" dest="expression_statement [14316,14355]"/>
  <match src="parameter [48687,48703]" dest="parameter [51028,51044]"/>
  <match src="(: ( [51088,51089]" dest="(: ( [53673,53674]"/>
  <match src="&quot;: &quot; [51310,51311]" dest="&quot;: &quot; [53895,53896]"/>
  <match src="call_argument [52322,52324]" dest="call_argument [54451,54453]"/>
  <match src="call_argument [39666,39677]" dest="call_argument [37724,37735]"/>
  <match src="binary_expression [41565,41591]" dest="binary_expression [43998,44024]"/>
  <match src="function_body [10741,10915]" dest="function_body [10741,10915]"/>
  <match src="): ) [29674,29675]" dest="): ) [29674,29675]"/>
  <match src="event_paramater [1661,1681]" dest="event_paramater [1661,1681]"/>
  <match src="): ) [36768,36769]" dest="): ) [39494,39495]"/>
  <match src="call_argument [16660,16670]" dest="call_argument [16660,16670]"/>
  <match src="bool: bool [861,865]" dest="bool: bool [861,865]"/>
  <match src="yul_function_call [42762,42784]" dest="yul_function_call [45182,45204]"/>
  <match src="identifier: ERC165 [9009,9015]" dest="identifier: ERC165 [9009,9015]"/>
  <match src="primitive_type [46895,46902]" dest="primitive_type [49236,49243]"/>
  <match src="identifier: rootToken [46903,46912]" dest="identifier: rootToken [49244,49253]"/>
  <match src="user_defined_type [16327,16337]" dest="user_defined_type [16327,16337]"/>
  <match src="parameter [6099,6109]" dest="parameter [6099,6109]"/>
  <match src="): ) [37075,37076]" dest="): ) [40514,40515]"/>
  <match src="parameter [43753,43779]" dest="parameter [46192,46218]"/>
  <match src="identifier: addr [48617,48621]" dest="identifier: addr [50958,50962]"/>
  <match src="solidity_version: 0.6.0 [11034,11039]" dest="solidity_version: 0.6.0 [11034,11039]"/>
  <match src="&quot;: &quot; [45165,45166]" dest="&quot;: &quot; [47506,47507]"/>
  <match src="primitive_type [18941,18948]" dest="primitive_type [18941,18948]"/>
  <match src="variable_declaration [36786,36805]" dest="variable_declaration [39507,39526]"/>
  <match src="identifier: itemLen [40795,40802]" dest="identifier: itemLen [43214,43221]"/>
  <match src="identifier: _indexes [12934,12942]" dest="identifier: _indexes [12934,12942]"/>
  <match src="): ) [28011,28012]" dest="): ) [28011,28012]"/>
  <match src="): ) [52799,52800]" dest="): ) [54952,54953]"/>
  <match src="emit_statement [33609,33655]" dest="emit_statement [33609,33655]"/>
  <match src="): ) [25247,25248]" dest="): ) [25247,25248]"/>
  <match src="=: = [45054,45055]" dest="=: = [47395,47396]"/>
  <match src=",: , [53360,53361]" dest=",: , [55621,55622]"/>
  <match src="function_definition [39335,39995]" dest="function_definition [41963,42385]"/>
  <match src="bytes: bytes [8620,8625]" dest="bytes: bytes [8620,8625]"/>
  <match src="primitive_type [44340,44345]" dest="primitive_type [46779,46784]"/>
  <match src="event_paramater [1946,1970]" dest="event_paramater [1946,1970]"/>
  <match src="identifier: sender [44295,44301]" dest="identifier: sender [46734,46740]"/>
  <match src="(: ( [35333,35334]" dest="(: ( [36214,36215]"/>
  <match src="]: ] [52772,52773]" dest="]: ] [54925,54926]"/>
  <match src="return: return [16873,16879]" dest="return: return [16873,16879]"/>
  <match src="&gt;=: &gt;= [41684,41686]" dest="&gt;=: &gt;= [44104,44106]"/>
  <match src=".: . [29706,29707]" dest=".: . [29706,29707]"/>
  <match src="}: } [14727,14728]" dest="}: } [14727,14728]"/>
  <match src="): ) [43785,43786]" dest="): ) [46224,46225]"/>
  <match src="visibility [34096,34104]" dest="visibility [34096,34104]"/>
  <match src="calldata: calldata [2909,2917]" dest="calldata: calldata [2909,2917]"/>
  <match src="bytes: bytes [4793,4798]" dest="bytes: bytes [4793,4798]"/>
  <match src="yul_function_call [36454,36467]" dest="yul_function_call [38311,38324]"/>
  <match src="comment: // for accounts without code, i.e. `keccak256('')` [20073,20123]" dest="comment: // for accounts without code, i.e. `keccak256('')` [20073,20123]"/>
  <match src="call_argument [36025,36031]" dest="call_argument [37840,37846]"/>
  <match src="primitive_type [45093,45100]" dest="primitive_type [47434,47441]"/>
  <match src="identifier: itemLen [41222,41229]" dest="identifier: itemLen [43664,43671]"/>
  <match src="{: { [24120,24121]" dest="{: { [24120,24121]"/>
  <match src="bytes32: bytes32 [17758,17765]" dest="bytes32: bytes32 [17758,17765]"/>
  <match src="type_name [1972,1976]" dest="type_name [1972,1976]"/>
  <match src="identifier: item [35285,35289]" dest="identifier: item [36166,36170]"/>
  <match src="override_specifier [46046,46054]" dest="override_specifier [48387,48395]"/>
  <match src="(: ( [2974,2975]" dest="(: ( [2974,2975]"/>
  <match src="variable_declaration [24606,24629]" dest="variable_declaration [24606,24629]"/>
  <match src="type_name [9276,9299]" dest="type_name [9276,9299]"/>
  <match src="array_access [31125,31137]" dest="array_access [31125,31137]"/>
  <match src="pure: pure [37364,37368]" dest="pure: pure [40694,40698]"/>
  <match src="function_definition [4684,4823]" dest="function_definition [4684,4823]"/>
  <match src="number_literal: 0 [24849,24850]" dest="number_literal: 0 [24849,24850]"/>
  <match src="call_argument [37209,37223]" dest="call_argument [40576,40590]"/>
  <match src="yul_decimal_number: 32 [37983,37985]" dest="yul_decimal_number: 32 [40992,40994]"/>
  <match src="identifier: RLPItem [35657,35664]" dest="identifier: RLPItem [37622,37629]"/>
  <match src="return: return [26027,26033]" dest="return: return [26027,26033]"/>
  <match src="binary_expression [50213,50249]" dest="binary_expression [52626,52662]"/>
  <match src="identifier: item [35792,35796]" dest="identifier: item [40733,40737]"/>
  <match src="function: function [8459,8467]" dest="function: function [8459,8467]"/>
  <match src="identifier: balanceOf [51798,51807]" dest="identifier: balanceOf [54316,54325]"/>
  <match src="visibility [44956,44962]" dest="visibility [47297,47303]"/>
  <match src="internal: internal [16366,16374]" dest="internal: internal [16366,16374]"/>
  <match src="type_name [17263,17273]" dest="type_name [17263,17273]"/>
  <match src="byte: byte [41516,41520]" dest="byte: byte [43949,43953]"/>
  <match src="++: ++ [50190,50192]" dest="++: ++ [52603,52605]"/>
  <match src="constant: constant [34732,34740]" dest="constant: constant [34732,34740]"/>
  <match src="=: = [42612,42613]" dest="=: = [45018,45019]"/>
  <match src="type_name [8528,8535]" dest="type_name [8528,8535]"/>
  <match src="return: return [36976,36982]" dest="return: return [39750,39756]"/>
  <match src="exp: exp [41137,41140]" dest="exp: exp [43579,43582]"/>
  <match src="boolean_literal [44620,44624]" dest="boolean_literal [47059,47063]"/>
  <match src="user_defined_type [27776,27783]" dest="user_defined_type [27776,27783]"/>
  <match src="identifier: contains [29405,29413]" dest="identifier: contains [29405,29413]"/>
  <match src="primitive_type [27950,27957]" dest="primitive_type [27950,27957]"/>
  <match src="call_expression [47475,47646]" dest="call_expression [49816,49987]"/>
  <match src="identifier: logData [51057,51064]" dest="identifier: logData [53642,53649]"/>
  <match src="): ) [33591,33592]" dest="): ) [33591,33592]"/>
  <match src="): ) [51618,51619]" dest="): ) [54205,54206]"/>
  <match src="=: = [50919,50920]" dest="=: = [53504,53505]"/>
  <match src="call_expression [32340,32352]" dest="call_expression [32340,32352]"/>
  <match src="expression_statement [38292,38374]" dest="expression_statement [41553,41575]"/>
  <match src="uint256: uint256 [35616,35623]" dest="uint256: uint256 [55157,55164]"/>
  <match src="): ) [40342,40343]" dest="): ) [42743,42744]"/>
  <match src="constant: constant [9135,9143]" dest="constant: constant [9135,9143]"/>
  <match src="(: ( [53090,53091]" dest="(: ( [55108,55109]"/>
  <match src="identifier: logTopicRLPList [51132,51147]" dest="identifier: logTopicRLPList [53717,53732]"/>
  <match src="call_argument [53347,53360]" dest="call_argument [55608,55621]"/>
  <match src="identifier: src [42700,42703]" dest="identifier: src [45116,45119]"/>
  <match src="type_alias [27852,27859]" dest="type_alias [27852,27859]"/>
  <match src="internal: internal [26080,26088]" dest="internal: internal [26080,26088]"/>
  <match src="): ) [38050,38051]" dest="): ) [41059,41060]"/>
  <match src="type_name [7362,7369]" dest="type_name [7362,7369]"/>
  <match src="identifier: _inner [18063,18069]" dest="identifier: _inner [18063,18069]"/>
  <match src=".: . [38273,38274]" dest=".: . [39991,39992]"/>
  <match src="type_name [30353,30360]" dest="type_name [30353,30360]"/>
  <match src="(: ( [13301,13302]" dest="(: ( [13301,13302]"/>
  <match src="): ) [26078,26079]" dest="): ) [26078,26079]"/>
  <match src="call_argument [23650,23656]" dest="call_argument [23650,23656]"/>
  <match src="constant: constant [45108,45116]" dest="constant: constant [47449,47457]"/>
  <match src="visibility [29339,29345]" dest="visibility [29339,29345]"/>
  <match src="returns: returns [24424,24431]" dest="returns: returns [24424,24431]"/>
  <match src="yul_function_call [40580,40594]" dest="yul_function_call [42983,42997]"/>
  <match src="(: ( [51389,51390]" dest="(: ( [53989,53990]"/>
  <match src="(: ( [35696,35697]" dest="(: ( [37661,37662]"/>
  <match src="&quot;: &quot; [21752,21753]" dest="&quot;: &quot; [21752,21753]"/>
  <match src="assembly_statement [40458,40850]" dest="assembly_statement [42861,43269]"/>
  <match src="array_access [29384,29396]" dest="array_access [29384,29396]"/>
  <match src="call_argument [35778,35800]" dest="call_argument [40733,40763]"/>
  <match src="address: address [1683,1690]" dest="address: address [1683,1690]"/>
  <match src="yul_identifier [25067,25082]" dest="yul_identifier [25067,25082]"/>
  <match src="identifier: RLPReader [50881,50890]" dest="identifier: RLPReader [53466,53475]"/>
  <match src="pure: pure [36321,36325]" dest="pure: pure [38137,38141]"/>
  <match src="bytes: bytes [36756,36761]" dest="bytes: bytes [39482,39487]"/>
  <match src="}: } [14772,14773]" dest="}: } [14772,14773]"/>
  <match src=".: . [50965,50966]" dest=".: . [53550,53551]"/>
  <match src="identifier: _functionCallWithValue [24312,24334]" dest="identifier: _functionCallWithValue [24312,24334]"/>
  <match src="comment: // shfit to the correct location if neccesary [37913,37958]" dest="comment: // shfit to the correct location if neccesary [40922,40967]"/>
  <match src="call_argument [39184,39187]" dest="call_argument [41814,41817]"/>
  <match src="(: ( [18979,18980]" dest="(: ( [18979,18980]"/>
  <match src="call_expression [51229,51256]" dest="call_expression [53814,53841]"/>
  <match src="type_name [21384,21399]" dest="type_name [21384,21399]"/>
  <match src="uint256: uint256 [51587,51594]" dest="uint256: uint256 [54174,54181]"/>
  <match src=".: . [51150,51151]" dest=".: . [53735,53736]"/>
  <match src="identifier: memPtr [41530,41536]" dest="identifier: memPtr [43963,43969]"/>
  <match src="identifier: len [36961,36964]" dest="identifier: len [39735,39738]"/>
  <match src="parameter [30679,30691]" dest="parameter [30679,30691]"/>
  <match src="{: { [12715,12716]" dest="{: { [12715,12716]"/>
  <match src="return_statement [26270,26286]" dest="return_statement [26270,26286]"/>
  <match src="{: { [18033,18034]" dest="{: { [18033,18034]"/>
  <match src="identifier: memPtr [39671,39677]" dest="identifier: memPtr [37729,37735]"/>
  <match src="primitive_type [24335,24342]" dest="primitive_type [24335,24342]"/>
  <match src="member_expression [12952,12970]" dest="member_expression [12952,12970]"/>
  <match src="assignment_expression [40357,40397]" dest="assignment_expression [42758,42798]"/>
  <match src="{: { [40185,40186]" dest="{: { [42563,42564]"/>
  <match src="block_statement [14734,14773]" dest="block_statement [14734,14773]"/>
  <match src="[: [ [49008,49009]" dest="[: [ [51349,51350]"/>
  <match src="address: address [6099,6106]" dest="address: address [6099,6106]"/>
  <match src="user_defined_type [35449,35456]" dest="user_defined_type [37477,37484]"/>
  <match src="comment: /**      * @dev Revokes `role` from the calling account.      *      * Roles are often managed via {grantRole} and {revokeRole}: this function's      * purpose is to provide a mechanism for accounts to lose their privileges      * if they are compromised (such as when a trusted device is misplaced).      *      * If the calling account had been granted `role`, emits a {RoleRevoked}      * event.      *      * Requirements:      *      * - the caller must be `account`.      */ [31743,32236]" dest="comment: /**      * @dev Revokes `role` from the calling account.      *      * Roles are often managed via {grantRole} and {revokeRole}: this function's      * purpose is to provide a mechanism for accounts to lose their privileges      * if they are compromised (such as when a trusted device is misplaced).      *      * If the calling account had been granted `role`, emits a {RoleRevoked}      * event.      *      * Requirements:      *      * - the caller must be `account`.      */ [31743,32236]"/>
  <match src="contract_body [44863,53591]" dest="contract_body [47204,55888]"/>
  <match src="modifier_definition [44520,44632]" dest="modifier_definition [46959,47071]"/>
  <match src="identifier: role [33124,33128]" dest="identifier: role [33124,33128]"/>
  <match src="parameter [12660,12675]" dest="parameter [12660,12675]"/>
  <match src="[: [ [51147,51148]" dest="[: [ [53732,53733]"/>
  <match src=",: , [17682,17683]" dest=",: , [17682,17683]"/>
  <match src="update_expression [50189,50192]" dest="update_expression [52602,52605]"/>
  <match src="internal: internal [35479,35487]" dest="internal: internal [37498,37506]"/>
  <match src="bytes32: bytes32 [15601,15608]" dest="bytes32: bytes32 [15601,15608]"/>
  <match src="if: if [40413,40415]" dest="if: if [42816,42818]"/>
  <match src="private: private [34019,34026]" dest="private: private [34019,34026]"/>
  <match src="binary_expression [48863,48871]" dest="binary_expression [51204,51212]"/>
  <match src="): ) [46070,46071]" dest="): ) [48411,48412]"/>
  <match src="variable_declaration_statement [37802,37840]" dest="variable_declaration_statement [37056,37091]"/>
  <match src="=: = [20180,20181]" dest="=: = [20180,20181]"/>
  <match src="): ) [17332,17333]" dest="): ) [17332,17333]"/>
  <match src="bytes32: bytes32 [13270,13277]" dest="bytes32: bytes32 [13270,13277]"/>
  <match src="primitive_type [51769,51776]" dest="primitive_type [54292,54299]"/>
  <match src="(: ( [53098,53099]" dest="(: ( [55116,55117]"/>
  <match src="}: } [45839,45840]" dest="}: } [48180,48181]"/>
  <match src="identifier: set [17746,17749]" dest="identifier: set [17746,17749]"/>
  <match src="{: { [26016,26017]" dest="{: { [26016,26017]"/>
  <match src="struct_field_assignment [21646,21659]" dest="struct_field_assignment [21646,21659]"/>
  <match src="primitive_type [16062,16066]" dest="primitive_type [16062,16066]"/>
  <match src="override: override [46966,46974]" dest="override: override [49307,49315]"/>
  <match src="visibility [41417,41424]" dest="visibility [43856,43863]"/>
  <match src="struct_declaration [17428,17472]" dest="struct_declaration [17428,17472]"/>
  <match src="solidity_pragma_token [26403,26418]" dest="solidity_pragma_token [26403,26418]"/>
  <match src="&quot;: &quot; [45713,45714]" dest="&quot;: &quot; [48054,48055]"/>
  <match src="[: [ [49520,49521]" dest="[: [ [51861,51862]"/>
  <match src="call_expression [37289,37301]" dest="call_expression [40619,40631]"/>
  <match src="solidity_version_comparison_operator [112,114]" dest="solidity_version_comparison_operator [112,114]"/>
  <match src="identifier: len [42330,42333]" dest="identifier: len [44707,44710]"/>
  <match src="primitive_type [8528,8535]" dest="primitive_type [8528,8535]"/>
  <match src="identifier: src [42446,42449]" dest="identifier: src [44823,44826]"/>
  <match src="yul_identifier [40505,40510]" dest="yul_identifier [42908,42913]"/>
  <match src="function_body [29676,29731]" dest="function_body [29676,29731]"/>
  <match src=",: , [13268,13269]" dest=",: , [13268,13269]"/>
  <match src="==: == [42232,42234]" dest="==: == [44609,44611]"/>
  <match src="identifier: add [17659,17662]" dest="identifier: add [17659,17662]"/>
  <match src="): ) [50868,50869]" dest="): ) [53453,53454]"/>
  <match src="string_literal [24171,24211]" dest="string_literal [24171,24211]"/>
  <match src="{: { [46357,46358]" dest="{: { [48698,48699]"/>
  <match src="visibility [30382,30388]" dest="visibility [30382,30388]"/>
  <match src=",: , [24604,24605]" dest=",: , [24604,24605]"/>
  <match src="identifier: RoleData [28003,28011]" dest="identifier: RoleData [28003,28011]"/>
  <match src="&quot;: &quot; [31164,31165]" dest="&quot;: &quot; [31164,31165]"/>
  <match src="member_expression [49694,49718]" dest="member_expression [52047,52071]"/>
  <match src="=: = [35967,35968]" dest="=: = [37782,37783]"/>
  <match src=",: , [47389,47390]" dest=",: , [49730,49731]"/>
  <match src="binary_expression [48004,48012]" dest="binary_expression [50345,50353]"/>
  <match src="): ) [10732,10733]" dest="): ) [10732,10733]"/>
  <match src="storage: storage [15102,15109]" dest="storage: storage [15102,15109]"/>
  <match src=",: , [36452,36453]" dest=",: , [38309,38310]"/>
  <match src="identifier: addr [49094,49098]" dest="identifier: addr [51435,51439]"/>
  <match src="(: ( [8490,8491]" dest="(: ( [8490,8491]"/>
  <match src="parameter [36756,36768]" dest="parameter [39482,39494]"/>
  <match src="}: } [41287,41288]" dest="}: } [43729,43730]"/>
  <match src="number_literal: 1 [42639,42640]" dest="number_literal: 1 [45047,45048]"/>
  <match src="identifier: len [37214,37217]" dest="identifier: len [40581,40584]"/>
  <match src="yul_identifier [40795,40802]" dest="yul_identifier [43214,43221]"/>
  <match src=",: , [40590,40591]" dest=",: , [42993,42994]"/>
  <match src="type_name [30714,30721]" dest="type_name [30714,30721]"/>
  <match src="function: function [40047,40055]" dest="function: function [42437,42445]"/>
  <match src="variable_declaration_statement [13420,13461]" dest="variable_declaration_statement [13420,13461]"/>
  <match src="pragma: pragma [44436,44442]" dest="pragma: pragma [46875,46881]"/>
  <match src="comment: /**      * @notice Creates `amount` tokens of token type `id`, and assigns them to `account`.      * @dev Should be callable only by MintableERC1155Predicate      * Make sure minting is done only by this function      * @param account user address for whom token is being minted      * @param id token which is being minted      * @param amount amount of token being minted      * @param data extra byte data to be accompanied with minted tokens      */ [4960,5421]" dest="comment: /**      * @notice Creates `amount` tokens of token type `id`, and assigns them to `account`.      * @dev Should be callable only by MintableERC1155Predicate      * Make sure minting is done only by this function      * @param account user address for whom token is being minted      * @param id token which is being minted      * @param amount amount of token being minted      * @param data extra byte data to be accompanied with minted tokens      */ [4960,5421]"/>
  <match src="contract_body [4953,6196]" dest="contract_body [4953,6196]"/>
  <match src="type_name [4741,4750]" dest="type_name [4741,4750]"/>
  <match src="address: address [24335,24342]" dest="address: address [24335,24342]"/>
  <match src="identifier: item [35903,35907]" dest="identifier: item [42150,42154]"/>
  <match src="else: else [53493,53497]" dest="else: else [55790,55794]"/>
  <match src="type_name [33301,33308]" dest="type_name [33301,33308]"/>
  <match src=",: , [18301,18302]" dest=",: , [18301,18302]"/>
  <match src="identifier: only [34220,34224]" dest="identifier: only [34220,34224]"/>
  <match src="comment: // The value is stored at length-1, but we add 1 to all indexes [12807,12870]" dest="comment: // The value is stored at length-1, but we add 1 to all indexes [12807,12870]"/>
  <match src="visibility [9762,9768]" dest="visibility [9762,9768]"/>
  <match src="function_definition [18412,18526]" dest="function_definition [18412,18526]"/>
  <match src="primitive_type [1439,1446]" dest="primitive_type [1439,1446]"/>
  <match src="primitive_type [52506,52511]" dest="primitive_type [54692,54697]"/>
  <match src="identifier: itemLen [41307,41314]" dest="identifier: itemLen [43749,43756]"/>
  <match src="expression_statement [52886,53263]" dest="expression_statement [55328,55487]"/>
  <match src="!: ! [12730,12731]" dest="!: ! [12730,12731]"/>
  <match src="[: [ [35664,35665]" dest="[: [ [37629,37630]"/>
  <match src="type_name [43725,43732]" dest="type_name [46164,46171]"/>
  <match src="primitive_type [42599,42606]" dest="primitive_type [45008,45012]"/>
  <match src="&lt;: &lt; [50165,50166]" dest="&lt;: &lt; [52578,52579]"/>
  <match src="returns: returns [38207,38214]" dest="returns: returns [41216,41223]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [23731,23973]" dest="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [23731,23973]"/>
  <match src="): ) [23041,23042]" dest="): ) [23041,23042]"/>
  <match src="function_definition [19811,20430]" dest="function_definition [19811,20430]"/>
  <match src="(: ( [15546,15547]" dest="(: ( [15546,15547]"/>
  <match src="): ) [16124,16125]" dest="): ) [16124,16125]"/>
  <match src="): ) [26123,26124]" dest="): ) [26123,26124]"/>
  <match src="identifier: byte0 [36495,36500]" dest="identifier: byte0 [38352,38357]"/>
  <match src="function: function [36665,36673]" dest="function: function [39418,39426]"/>
  <match src="): ) [48703,48704]" dest="): ) [51044,51045]"/>
  <match src="variable_declaration [38884,38898]" dest="variable_declaration [37004,37015]"/>
  <match src="function_definition [46803,47654]" dest="function_definition [49144,49995]"/>
  <match src="variable_declaration [51636,51658]" dest="variable_declaration [54223,54245]"/>
  <match src="expression_statement [31227,31253]" dest="expression_statement [31227,31253]"/>
  <match src="yul_evm_builtin [40698,40701]" dest="yul_evm_builtin [43117,43120]"/>
  <match src="primitive_type [45540,45547]" dest="primitive_type [47881,47888]"/>
  <match src="memory: memory [36792,36798]" dest="memory: memory [39513,39519]"/>
  <match src="identifier: toList [51015,51021]" dest="identifier: toList [53600,53606]"/>
  <match src="bool: bool [16384,16388]" dest="bool: bool [16384,16388]"/>
  <match src="yul_identifier [42700,42703]" dest="yul_identifier [45116,45119]"/>
  <match src="}: } [42875,42876]" dest="}: } [45314,45315]"/>
  <match src="): ) [51820,51821]" dest="): ) [54338,54339]"/>
  <match src="function: function [41377,41385]" dest="function: function [43819,43827]"/>
  <match src="interface: interface [6373,6382]" dest="interface: interface [6373,6382]"/>
  <match src="primitive_type [818,824]" dest="primitive_type [818,824]"/>
  <match src=",: , [23561,23562]" dest=",: , [23561,23562]"/>
  <match src="let: let [40683,40686]" dest="let: let [43102,43105]"/>
  <match src="call_expression [35770,35844]" dest="call_expression [40725,40764]"/>
  <match src="identifier: i [49059,49060]" dest="identifier: i [51400,51401]"/>
  <match src="expression_statement [42312,42329]" dest="expression_statement [44689,44706]"/>
  <match src="user_defined_type [52817,52833]" dest="user_defined_type [54970,54986]"/>
  <match src="function: function [46803,46811]" dest="function: function [49144,49152]"/>
  <match src="yul_decimal_number: 256 [38032,38035]" dest="yul_decimal_number: 256 [41041,41044]"/>
  <match src="primitive_type [22948,22955]" dest="primitive_type [22948,22955]"/>
  <match src="type_name [36291,36298]" dest="type_name [38107,38114]"/>
  <match src="function: function [2875,2883]" dest="function: function [2875,2883]"/>
  <match src="(: ( [12659,12660]" dest="(: ( [12659,12660]"/>
  <match src="identifier: set [14316,14319]" dest="identifier: set [14316,14319]"/>
  <match src="if_statement [50209,50351]" dest="if_statement [52622,52802]"/>
  <match src="number_literal: 2 [51078,51079]" dest="number_literal: 2 [53663,53664]"/>
  <match src="primitive_type [49034,49041]" dest="primitive_type [51375,51382]"/>
  <match src="]: ] [33767,33768]" dest="]: ] [33767,33768]"/>
  <match src="array_access [52775,52784]" dest="array_access [54928,54937]"/>
  <match src="call_argument [24139,24169]" dest="call_argument [24139,24169]"/>
  <match src="assignment_expression [14422,14465]" dest="assignment_expression [14422,14465]"/>
  <match src="identifier: ERC1155Receiver [10785,10800]" dest="identifier: ERC1155Receiver [10785,10800]"/>
  <match src="identifier: i [50250,50251]" dest="identifier: i [52663,52664]"/>
  <match src="primitive_type [1359,1366]" dest="primitive_type [1359,1366]"/>
  <match src="is: is [1192,1194]" dest="is: is [1192,1194]"/>
  <match src="tuple_expression [52763,52785]" dest="tuple_expression [54916,54938]"/>
  <match src="mload: mload [42404,42409]" dest="mload: mload [44781,44786]"/>
  <match src="): ) [24151,24152]" dest="): ) [24151,24152]"/>
  <match src="): ) [18232,18233]" dest="): ) [18232,18233]"/>
  <match src="contract_body [34672,42876]" dest="contract_body [34672,45315]"/>
  <match src="type_name [16062,16066]" dest="type_name [16062,16066]"/>
  <match src="yul_decimal_number: 0 [36451,36452]" dest="yul_decimal_number: 0 [38308,38309]"/>
  <match src=",: , [42402,42403]" dest=",: , [44779,44780]"/>
  <match src="user_defined_type [36685,36692]" dest="user_defined_type [39438,39445]"/>
  <match src="primitive_type [28036,28043]" dest="primitive_type [28036,28043]"/>
  <match src="(: ( [51586,51587]" dest="(: ( [54173,54174]"/>
  <match src="interface_declaration [6373,8693]" dest="interface_declaration [6373,8693]"/>
  <match src="parenthesized_expression [41677,41731]" dest="parenthesized_expression [44097,44151]"/>
  <match src="type_name [45426,45433]" dest="type_name [47767,47774]"/>
  <match src="(: ( [17662,17663]" dest="(: ( [17662,17663]"/>
  <match src="parameter [16029,16042]" dest="parameter [16029,16042]"/>
  <match src="expression_statement [48841,48956]" dest="expression_statement [51182,51297]"/>
  <match src="identifier: addresses [49079,49088]" dest="identifier: addresses [51420,51429]"/>
  <match src="primitive_type [1921,1928]" dest="primitive_type [1921,1928]"/>
  <match src="(: ( [37103,37104]" dest="(: ( [39176,39177]"/>
  <match src="(: ( [33053,33054]" dest="(: ( [33053,33054]"/>
  <match src="number_literal: 0x0 [20418,20421]" dest="number_literal: 0x0 [20418,20421]"/>
  <match src="yul_decimal_number: 1 [41081,41082]" dest="yul_decimal_number: 1 [43523,43524]"/>
  <match src="identifier: account [33832,33839]" dest="identifier: account [33832,33839]"/>
  <match src="return: return [29377,29383]" dest="return: return [29377,29383]"/>
  <match src="): ) [51158,51159]" dest="): ) [53743,53744]"/>
  <match src="unary_expression [12730,12752]" dest="unary_expression [12730,12752]"/>
  <match src="state_mutability [19857,19861]" dest="state_mutability [19857,19861]"/>
  <match src="identifier: set [15629,15632]" dest="identifier: set [15629,15632]"/>
  <match src="identifier: byteLen [40734,40741]" dest="identifier: byteLen [43153,43160]"/>
  <match src="identifier: AddressSet [27829,27839]" dest="identifier: AddressSet [27829,27839]"/>
  <match src="uint256: uint256 [49853,49860]" dest="uint256: uint256 [52206,52213]"/>
  <match src="parameter [46242,46260]" dest="parameter [48583,48601]"/>
  <match src="virtual: virtual [31090,31097]" dest="virtual: virtual [31090,31097]"/>
  <match src="member_expression [33756,33783]" dest="member_expression [33756,33783]"/>
  <match src="type_cast_expression [16680,16694]" dest="type_cast_expression [16680,16694]"/>
  <match src=":=: := [38013,38015]" dest=":=: := [41022,41024]"/>
  <match src="variable_declaration_statement [38489,38504]" dest="variable_declaration_statement [41306,41318]"/>
  <match src="member_expression [10785,10821]" dest="member_expression [10785,10821]"/>
  <match src="(: ( [52901,52902]" dest="(: ( [55343,55344]"/>
  <match src="primitive_type [1946,1953]" dest="primitive_type [1946,1953]"/>
  <match src="type_name [43691,43698]" dest="type_name [46130,46137]"/>
  <match src="assembly_statement [20316,20361]" dest="assembly_statement [20316,20361]"/>
  <match src="call_argument [33826,33830]" dest="call_argument [33826,33830]"/>
  <match src="comment: /*      * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7      */ [9034,9114]" dest="comment: /*      * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7      */ [9034,9114]"/>
  <match src="call_expression [37097,37109]" dest="call_expression [39161,39182]"/>
  <match src="expression_statement [47475,47647]" dest="expression_statement [49816,49988]"/>
  <match src=".: . [50180,50181]" dest=".: . [52593,52594]"/>
  <match src="(: ( [33558,33559]" dest="(: ( [33558,33559]"/>
  <match src="view: view [29346,29350]" dest="view: view [29346,29350]"/>
  <match src="variable_declaration [37802,37816]" dest="variable_declaration [37056,37067]"/>
  <match src="new_expression [36808,36817]" dest="new_expression [39529,39538]"/>
  <match src="memory: memory [39004,39010]" dest="memory: memory [41651,41657]"/>
  <match src="yul_evm_builtin [41118,41121]" dest="yul_evm_builtin [43560,43563]"/>
  <match src="pragma: pragma [4888,4894]" dest="pragma: pragma [4888,4894]"/>
  <match src="}: } [17780,17781]" dest="}: } [17780,17781]"/>
  <match src="member_expression [39637,39648]" dest="member_expression [37695,37706]"/>
  <match src="address: address [4715,4722]" dest="address: address [4715,4722]"/>
  <match src="identifier: msg [26034,26037]" dest="identifier: msg [26034,26037]"/>
  <match src="type_name [3511,3518]" dest="type_name [3511,3518]"/>
  <match src="call_argument [34165,34193]" dest="call_argument [34165,34193]"/>
  <match src="identifier: codehash [20379,20387]" dest="identifier: codehash [20379,20387]"/>
  <match src="call_argument [31719,31726]" dest="call_argument [31719,31726]"/>
  <match src="type_name [47132,47141]" dest="type_name [49473,49482]"/>
  <match src="=: = [13910,13911]" dest="=: = [13910,13911]"/>
  <match src="return: return [42238,42244]" dest="return: return [44615,44621]"/>
  <match src="): ) [51089,51090]" dest="): ) [53674,53675]"/>
  <match src="bytes: bytes [22598,22603]" dest="bytes: bytes [22598,22603]"/>
  <match src="address: address [16588,16595]" dest="address: address [16588,16595]"/>
  <match src="address: address [31539,31546]" dest="address: address [31539,31546]"/>
  <match src="identifier: from [1677,1681]" dest="identifier: from [1677,1681]"/>
  <match src=",: , [53389,53390]" dest=",: , [55654,55655]"/>
  <match src="type_name [24335,24342]" dest="type_name [24335,24342]"/>
  <match src="call_expression [46375,46393]" dest="call_expression [48716,48734]"/>
  <match src="member_expression [51001,51021]" dest="member_expression [53586,53606]"/>
  <match src="return: return [50374,50380]" dest="return: return [52925,52931]"/>
  <match src="identifier: value [21646,21651]" dest="identifier: value [21646,21651]"/>
  <match src="bool: bool [9294,9298]" dest="bool: bool [9294,9298]"/>
  <match src="returns: returns [40097,40104]" dest="returns: returns [42484,42491]"/>
  <match src="=: = [48995,48996]" dest="=: = [51336,51337]"/>
  <match src="number_literal: 1 [41933,41934]" dest="number_literal: 1 [44357,44358]"/>
  <match src="==: == [51258,51260]" dest="==: == [53843,53845]"/>
  <match src="call_argument [39811,39818]" dest="call_argument [42291,42298]"/>
  <match src="comment: // File: @openzeppelin/contracts/introspection/IERC165.sol [0,58]" dest="comment: // File: @openzeppelin/contracts/introspection/IERC165.sol [0,58]"/>
  <match src=",: , [24043,24044]" dest=",: , [24043,24044]"/>
  <match src=":=: := [25083,25085]" dest=":=: := [25083,25085]"/>
  <match src="contract_body [44485,44635]" dest="contract_body [46924,47074]"/>
  <match src="type_name [1661,1668]" dest="type_name [1661,1668]"/>
  <match src="assembly: assembly [37850,37858]" dest="assembly: assembly [40859,40867]"/>
  <match src="address: address [53091,53098]" dest="address: address [55109,55116]"/>
  <match src="identifier: _inner [17458,17464]" dest="identifier: _inner [17458,17464]"/>
  <match src="bool: bool [16062,16066]" dest="bool: bool [16062,16066]"/>
  <match src="identifier: item [39637,39641]" dest="identifier: item [37695,37699]"/>
  <match src="call_argument [23671,23714]" dest="call_argument [23671,23714]"/>
  <match src="(: ( [36817,36818]" dest="(: ( [39538,39539]"/>
  <match src="call_argument [18303,18317]" dest="call_argument [18303,18317]"/>
  <match src="bytes32: bytes32 [28444,28451]" dest="bytes32: bytes32 [28444,28451]"/>
  <match src="type_name [45236,45243]" dest="type_name [47577,47584]"/>
  <match src="yul_function_call [41516,41538]" dest="yul_function_call [43949,43971]"/>
  <match src=",: , [5456,5457]" dest=",: , [5456,5457]"/>
  <match src="primitive_type [1407,1414]" dest="primitive_type [1407,1414]"/>
  <match src="): ) [24118,24119]" dest="): ) [24118,24119]"/>
  <match src="variable_declaration [41459,41472]" dest="variable_declaration [43895,43905]"/>
  <match src="identifier: _inner [16892,16898]" dest="identifier: _inner [16892,16898]"/>
  <match src="{: { [39405,39406]" dest="{: { [42030,42031]"/>
  <match src="identifier: _values [15716,15723]" dest="identifier: _values [15716,15723]"/>
  <match src="external: external [4814,4822]" dest="external: external [4814,4822]"/>
  <match src="): ) [30721,30722]" dest="): ) [30721,30722]"/>
  <match src="identifier: _setupContractId [34053,34069]" dest="identifier: _setupContractId [34053,34069]"/>
  <match src="comment: // This modifies the order of the array, as noted in {at}. [13765,13823]" dest="comment: // This modifies the order of the array, as noted in {at}. [13765,13823]"/>
  <match src="comment: /**      * @dev Returns the number of accounts that have `role`. Can be used      * together with {getRoleMember} to enumerate all bearers of a role.      */ [29438,29598]" dest="comment: /**      * @dev Returns the number of accounts that have `role`. Can be used      * together with {getRoleMember} to enumerate all bearers of a role.      */ [29438,29598]"/>
  <match src="]: ] [31136,31137]" dest="]: ] [31136,31137]"/>
  <match src="&quot;: &quot; [21518,21519]" dest="&quot;: &quot; [21518,21519]"/>
  <match src="(: ( [51815,51816]" dest="(: ( [54333,54334]"/>
  <match src="=: = [39704,39705]" dest="=: = [42185,42186]"/>
  <match src="public: public [31083,31089]" dest="public: public [31083,31089]"/>
  <match src="identifier: vals [48126,48130]" dest="identifier: vals [50467,50471]"/>
  <match src="identifier: data [23557,23561]" dest="identifier: data [23557,23561]"/>
  <match src="type_name [4741,4748]" dest="type_name [4741,4748]"/>
  <match src="identifier: role [33626,33630]" dest="identifier: role [33626,33630]"/>
  <match src="uint256: uint256 [2623,2630]" dest="uint256: uint256 [2623,2630]"/>
  <match src="}: } [53587,53588]" dest="}: } [55884,55885]"/>
  <match src="function_definition [30657,30771]" dest="function_definition [30657,30771]"/>
  <match src="function: function [31505,31513]" dest="function: function [31505,31513]"/>
  <match src="]: ] [14444,14445]" dest="]: ] [14444,14445]"/>
  <match src="revert: revert [25228,25234]" dest="revert: revert [25228,25234]"/>
  <match src="identifier: item [36306,36310]" dest="identifier: item [38122,38126]"/>
  <match src="identifier: numItems [39344,39352]" dest="identifier: numItems [41972,41980]"/>
  <match src="comment: /**         @dev Handles the receipt of a single ERC1155 token type. This function is         called at the end of a `safeTransferFrom` after the balance has been updated.         To accept the transfer, this must return         `bytes4(keccak256(&quot;onERC1155Received(address,address,uint256,uint256,bytes)&quot;))`         (i.e. 0xf23a6e61, or its own function selector).         @param operator The address which initiated the transfer (i.e. msg.sender)         @param from The address which previously owned the token         @param id The ID of the token being transferred         @param value The amount of tokens being transferred         @param data Additional data with no specified format         @return `bytes4(keccak256(&quot;onERC1155Received(address,address,uint256,uint256,bytes)&quot;))` if transfer is allowed     */ [6420,7248]" dest="comment: /**         @dev Handles the receipt of a single ERC1155 token type. This function is         called at the end of a `safeTransferFrom` after the balance has been updated.         To accept the transfer, this must return         `bytes4(keccak256(&quot;onERC1155Received(address,address,uint256,uint256,bytes)&quot;))`         (i.e. 0xf23a6e61, or its own function selector).         @param operator The address which initiated the transfer (i.e. msg.sender)         @param from The address which previously owned the token         @param id The ID of the token being transferred         @param value The amount of tokens being transferred         @param data Additional data with no specified format         @return `bytes4(keccak256(&quot;onERC1155Received(address,address,uint256,uint256,bytes)&quot;))` if transfer is allowed     */ [6420,7248]"/>
  <match src=",: , [40732,40733]" dest=",: , [43151,43152]"/>
  <match src="identifier: operator [3536,3544]" dest="identifier: operator [3536,3544]"/>
  <match src="): ) [4259,4260]" dest="): ) [4259,4260]"/>
  <match src="identifier: functionCall [22935,22947]" dest="identifier: functionCall [22935,22947]"/>
  <match src="}: } [9856,9857]" dest="}: } [9856,9857]"/>
  <match src="function: function [38656,38664]" dest="function: function [41467,41475]"/>
  <match src="private: private [15579,15586]" dest="private: private [15579,15586]"/>
  <match src="variable_declaration [48968,48994]" dest="variable_declaration [51309,51335]"/>
  <match src="variable_declaration_statement [38514,38547]" dest="variable_declaration_statement [41328,41358]"/>
  <match src="&lt;: &lt; [35974,35975]" dest="&lt;: &lt; [37789,37790]"/>
  <match src="type_name [4715,4722]" dest="type_name [4715,4722]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [18102,18174]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [18102,18174]"/>
  <match src="comment: /**      * @dev See {IERC165-supportsInterface}.      *      * Time complexity O(1), guaranteed to always use less than 30 000 gas.      */ [9566,9709]" dest="comment: /**      * @dev See {IERC165-supportsInterface}.      *      * Time complexity O(1), guaranteed to always use less than 30 000 gas.      */ [9566,9709]"/>
  <match src="contract_body [431,870]" dest="contract_body [431,870]"/>
  <match src="(: ( [50212,50213]" dest="(: ( [52625,52626]"/>
  <match src="type_name [1718,1727]" dest="type_name [1718,1727]"/>
  <match src="call_argument [18291,18301]" dest="call_argument [18291,18301]"/>
  <match src="identifier: _payloadOffset [35888,35902]" dest="identifier: _payloadOffset [42135,42149]"/>
  <match src="=: = [51122,51123]" dest="=: = [53707,53708]"/>
  <match src="identifier: IERC1155 [4944,4952]" dest="identifier: IERC1155 [4944,4952]"/>
  <match src="=: = [49044,49045]" dest="=: = [51385,51386]"/>
  <match src="parameter [2606,2621]" dest="parameter [2606,2621]"/>
  <match src="primitive_type [48968,48975]" dest="primitive_type [51309,51316]"/>
  <match src="address: address [21455,21462]" dest="address: address [21455,21462]"/>
  <match src="using_directive [27791,27840]" dest="using_directive [27791,27840]"/>
  <match src="returns: returns [29351,29358]" dest="returns: returns [29351,29358]"/>
  <match src=",: , [28764,28765]" dest=",: , [28764,28765]"/>
  <match src="expression_statement [45751,45790]" dest="expression_statement [48092,48131]"/>
  <match src="primitive_type [1385,1392]" dest="primitive_type [1385,1392]"/>
  <match src="function_body [16862,16907]" dest="function_body [16862,16907]"/>
  <match src="member_expression [10785,10887]" dest="member_expression [10785,10887]"/>
  <match src="call_expression [34250,34335]" dest="call_expression [34250,34335]"/>
  <match src="identifier: balanceOf [2596,2605]" dest="identifier: balanceOf [2596,2605]"/>
  <match src="yul_decimal_number: 32 [25136,25138]" dest="yul_decimal_number: 32 [25136,25138]"/>
  <match src="call_expression [31590,31635]" dest="call_expression [31590,31635]"/>
  <match src="string_literal [51310,51354]" dest="string_literal [53895,53939]"/>
  <match src="identifier: set [12672,12675]" dest="identifier: set [12672,12675]"/>
  <match src=".: . [21468,21469]" dest=".: . [21468,21469]"/>
  <match src="(: ( [52161,52162]" dest="(: ( [54410,54411]"/>
  <match src="expression_statement [42446,42463]" dest="expression_statement [44823,44840]"/>
  <match src="pragma: pragma [8793,8799]" dest="pragma: pragma [8793,8799]"/>
  <match src="identifier: ids [8570,8573]" dest="identifier: ids [8570,8573]"/>
  <match src="return_statement [17345,17393]" dest="return_statement [17345,17393]"/>
  <match src="variable_declaration_statement [13892,13935]" dest="variable_declaration_statement [13892,13935]"/>
  <match src="call_argument [44562,44569]" dest="call_argument [47001,47008]"/>
  <match src="function_body [41448,41947]" dest="function_body [43884,44371]"/>
  <match src="primitive_type [23596,23601]" dest="primitive_type [23596,23601]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [17789,17951]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [17789,17951]"/>
  <match src="tuple_expression [51586,51604]" dest="tuple_expression [54173,54191]"/>
  <match src=",: , [23096,23097]" dest=",: , [23096,23097]"/>
  <match src="number_literal: 1 [14464,14465]" dest="number_literal: 1 [14464,14465]"/>
  <match src="address: address [4200,4207]" dest="address: address [4200,4207]"/>
  <match src="call_argument [35641,35645]" dest="call_argument [37606,37610]"/>
  <match src="string_literal [48776,48819]" dest="string_literal [51117,51160]"/>
  <match src="}: } [38076,38077]" dest="}: } [41085,41086]"/>
  <match src="string_literal [34165,34193]" dest="string_literal [34165,34193]"/>
  <match src="identifier: id [52218,52220]" dest="identifier: id [54423,54425]"/>
  <match src="(: ( [40707,40708]" dest="(: ( [43126,43127]"/>
  <match src="expression_statement [12930,12971]" dest="expression_statement [12930,12971]"/>
  <match src=".: . [35796,35797]" dest=".: . [40737,40738]"/>
  <match src="solidity_version_comparison_operator [11032,11034]" dest="solidity_version_comparison_operator [11032,11034]"/>
  <match src="identifier: index [17384,17389]" dest="identifier: index [17384,17389]"/>
  <match src="identifier: i [50291,50292]" dest="identifier: i [52704,52705]"/>
  <match src="[: [ [51011,51012]" dest="[: [ [53596,53597]"/>
  <match src="identifier: toBytes [38665,38672]" dest="identifier: toBytes [41476,41483]"/>
  <match src="internal: internal [21427,21435]" dest="internal: internal [21427,21435]"/>
  <match src="-: - [50317,50318]" dest="-: - [52730,52731]"/>
  <match src="call_expression [9510,9550]" dest="call_expression [9510,9550]"/>
  <match src=".: . [50890,50891]" dest=".: . [53475,53476]"/>
  <match src="string_literal [52322,52324]" dest="string_literal [54451,54453]"/>
  <match src="variable_declaration [51501,51511]" dest="variable_declaration [54088,54098]"/>
  <match src="bytes32: bytes32 [51382,51389]" dest="bytes32: bytes32 [53982,53989]"/>
  <match src="primitive_type [7448,7454]" dest="primitive_type [7448,7454]"/>
  <match src="identifier: value [18079,18084]" dest="identifier: value [18079,18084]"/>
  <match src="public: public [45027,45033]" dest="public: public [47368,47374]"/>
  <match src="): ) [40441,40442]" dest="): ) [42844,42845]"/>
  <match src="primitive_type [47262,47269]" dest="primitive_type [49603,49610]"/>
  <match src="}: } [41548,41549]" dest="}: } [43981,43982]"/>
  <match src="): ) [38372,38373]" dest="): ) [41573,41574]"/>
  <match src="=: = [38255,38256]" dest="=: = [39985,39986]"/>
  <match src="number_literal: 1 [51012,51013]" dest="number_literal: 1 [53597,53598]"/>
  <match src="): ) [53464,53465]" dest="): ) [55742,55743]"/>
  <match src="return_type_definition [22589,22611]" dest="return_type_definition [22589,22611]"/>
  <match src=",: , [44569,44570]" dest=",: , [47008,47009]"/>
  <match src="external: external [5507,5515]" dest="external: external [5507,5515]"/>
  <match src="primitive_type [18071,18078]" dest="primitive_type [18071,18078]"/>
  <match src="yul_identifier [35271,35277]" dest="yul_identifier [36152,36158]"/>
  <match src="(: ( [32263,32264]" dest="(: ( [32263,32264]"/>
  <match src="type_name [35657,35664]" dest="type_name [37622,37629]"/>
  <match src="user_defined_type [17973,17980]" dest="user_defined_type [17973,17980]"/>
  <match src="if_statement [24680,25275]" dest="if_statement [24680,25275]"/>
  <match src="identifier: toDeleteIndex [14448,14461]" dest="identifier: toDeleteIndex [14448,14461]"/>
  <match src=":: : [21651,21652]" dest=":: : [21651,21652]"/>
  <match src="call_argument [37104,37108]" dest="call_argument [39177,39181]"/>
  <match src="pure: pure [38703,38707]" dest="pure: pure [41514,41518]"/>
  <match src="identifier: amountsToBeExited [49571,49588]" dest="identifier: amountsToBeExited [51912,51929]"/>
  <match src="returns: returns [39387,39394]" dest="returns: returns [42015,42022]"/>
  <match src="[: [ [52687,52688]" dest="[: [ [54840,54841]"/>
  <match src="type_name [4212,4219]" dest="type_name [4212,4219]"/>
  <match src=",: , [5468,5469]" dest=",: , [5468,5469]"/>
  <match src="): ) [16451,16452]" dest="): ) [16451,16452]"/>
  <match src=",: , [31147,31148]" dest=",: , [31147,31148]"/>
  <match src="identifier: _registerInterface [10273,10291]" dest="identifier: _registerInterface [10273,10291]"/>
  <match src="call_expression [51661,51688]" dest="call_expression [54248,54275]"/>
  <match src="call_expression [50921,50945]" dest="call_expression [53506,53530]"/>
  <match src="identifier: decode [52712,52718]" dest="identifier: decode [54865,54871]"/>
  <match src="number_literal: 0 [46090,46091]" dest="number_literal: 0 [48431,48432]"/>
  <match src="primitive_type [19871,19875]" dest="primitive_type [19871,19875]"/>
  <match src="identifier: rootToken [45520,45529]" dest="identifier: rootToken [47861,47870]"/>
  <match src="comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [19888,19968]" dest="comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [19888,19968]"/>
  <match src="call_expression [21447,21520]" dest="call_expression [21447,21520]"/>
  <match src="): ) [3573,3574]" dest="): ) [3573,3574]"/>
  <match src="identifier: LIST_LONG_START [34832,34847]" dest="identifier: LIST_LONG_START [34835,34850]"/>
  <match src="yul_path [40223,40229]" dest="yul_path [42601,42607]"/>
  <match src="member_expression [36818,36826]" dest="member_expression [39539,39547]"/>
  <match src="else: else [41894,41898]" dest="else: else [44305,44309]"/>
  <match src="&quot;: &quot; [24171,24172]" dest="&quot;: &quot; [24171,24172]"/>
  <match src="returns: returns [7440,7447]" dest="returns: returns [7440,7447]"/>
  <match src="type_name [24060,24066]" dest="type_name [24060,24066]"/>
  <match src="call_expression [17368,17390]" dest="call_expression [17368,17390]"/>
  <match src="(: ( [23595,23596]" dest="(: ( [23595,23596]"/>
  <match src="expression_statement [32417,32444]" dest="expression_statement [32417,32444]"/>
  <match src="type_name [46242,46251]" dest="type_name [48583,48592]"/>
  <match src="[: [ [30436,30437]" dest="[: [ [30436,30437]"/>
  <match src="parameter [15547,15562]" dest="parameter [15547,15562]"/>
  <match src="=: = [14446,14447]" dest="=: = [14446,14447]"/>
  <match src="&lt;: &lt; [52117,52118]" dest="&lt;: &lt; [54371,54372]"/>
  <match src="yul_path [41507,41512]" dest="yul_path [43940,43945]"/>
  <match src="if_statement [33555,33666]" dest="if_statement [33555,33666]"/>
  <match src="(: ( [22947,22948]" dest="(: ( [22947,22948]"/>
  <match src="(: ( [24334,24335]" dest="(: ( [24334,24335]"/>
  <match src="identifier: logRLPList [51067,51077]" dest="identifier: logRLPList [53652,53662]"/>
  <match src="function_body [35543,36168]" dest="function_body [37539,37984]"/>
  <match src="for_statement [48165,48240]" dest="for_statement [50506,50581]"/>
  <match src="yul_function_call [41233,41262]" dest="yul_function_call [43675,43704]"/>
  <match src="view: view [25977,25981]" dest="view: view [25977,25981]"/>
  <match src="function_definition [32242,32451]" dest="function_definition [32242,32451]"/>
  <match src="bytes: bytes [24351,24356]" dest="bytes: bytes [24351,24356]"/>
  <match src="call_argument [31238,31242]" dest="call_argument [31238,31242]"/>
  <match src="call_argument [47609,47616]" dest="call_argument [49950,49957]"/>
  <match src="identifier: byte0 [40317,40322]" dest="identifier: byte0 [42718,42723]"/>
  <match src="]: ] [33401,33402]" dest="]: ] [33401,33402]"/>
  <match src="parameter [33702,33714]" dest="parameter [33702,33714]"/>
  <match src="comment: /// @title Token predicate interface for all pos portal predicates [42971,43037]" dest="comment: /// @title Token predicate interface for all pos portal predicates [45410,45476]"/>
  <match src="(: ( [48728,48729]" dest="(: ( [51069,51070]"/>
  <match src="function_body [21436,21762]" dest="function_body [21436,21762]"/>
  <match src="type_name [18219,18226]" dest="type_name [18219,18226]"/>
  <match src="pragma_directive [8793,8816]" dest="pragma_directive [8793,8816]"/>
  <match src="return_type_definition [26102,26124]" dest="return_type_definition [26102,26124]"/>
  <match src="yul_evm_builtin [42762,42765]" dest="yul_evm_builtin [45182,45185]"/>
  <match src="): ) [36339,36340]" dest="): ) [38155,38156]"/>
  <match src="primitive_type [5458,5465]" dest="primitive_type [5458,5465]"/>
  <match src="solidity: solidity [26403,26411]" dest="solidity: solidity [26403,26411]"/>
  <match src="): ) [836,837]" dest="): ) [836,837]"/>
  <match src="&quot;: &quot; [15692,15693]" dest="&quot;: &quot; [15692,15693]"/>
  <match src="primitive_type [47953,47960]" dest="primitive_type [50294,50301]"/>
  <match src="yul_identifier [42827,42831]" dest="yul_identifier [45251,45255]"/>
  <match src=".: . [51534,51535]" dest=".: . [54121,54122]"/>
  <match src="number_literal: 1 [40396,40397]" dest="number_literal: 1 [42797,42798]"/>
  <match src="constant: constant [34778,34786]" dest="constant: constant [34779,34787]"/>
  <match src="identifier: this [53355,53359]" dest="identifier: this [55616,55620]"/>
  <match src="): ) [47929,47930]" dest="): ) [50270,50271]"/>
  <match src="variable_declaration [51769,51789]" dest="variable_declaration [54292,54307]"/>
  <match src="identifier: destPtr [39175,39182]" dest="identifier: destPtr [41805,41812]"/>
  <match src="return_type_definition [16375,16389]" dest="return_type_definition [16375,16389]"/>
  <match src="]: ] [35528,35529]" dest="]: ] [37529,37530]"/>
  <match src="string [48027,48085]" dest="string [50368,50426]"/>
  <match src="yul_path [36903,36909]" dest="yul_path [39677,39683]"/>
  <match src="identifier: currPtr [39746,39753]" dest="identifier: currPtr [42227,42234]"/>
  <match src="&lt;: &lt; [50230,50231]" dest="&lt;: &lt; [52643,52644]"/>
  <match src="comment: /**      * @dev Emitted when `account` is revoked `role`.      *      * `sender` is the account that originated the contract call:      *   - if using `revokeRole`, it is the admin role bearer      *   - if using `renounceRole`, it is the role bearer (i.e. `account`)      */ [28823,29104]" dest="comment: /**      * @dev Emitted when `account` is revoked `role`.      *      * `sender` is the account that originated the contract call:      *   - if using `revokeRole`, it is the admin role bearer      *   - if using `renounceRole`, it is the role bearer (i.e. `account`)      */ [28823,29104]"/>
  <match src="function: function [17650,17658]" dest="function: function [17650,17658]"/>
  <match src="identifier: decode [47241,47247]" dest="identifier: decode [49582,49588]"/>
  <match src="interface_declaration [413,870]" dest="interface_declaration [413,870]"/>
  <match src="(: ( [33123,33124]" dest="(: ( [33123,33124]"/>
  <match src="primitive_type [32278,32285]" dest="primitive_type [32278,32285]"/>
  <match src="parameter [37068,37075]" dest="parameter [40507,40514]"/>
  <match src="returns: returns [41430,41437]" dest="returns: returns [43869,43876]"/>
  <match src=",: , [49718,49719]" dest=",: , [52071,52072]"/>
  <match src="identifier: members [29397,29404]" dest="identifier: members [29397,29404]"/>
  <match src="binary_expression [35874,35915]" dest="binary_expression [42121,42162]"/>
  <match src="yul_path [25140,25150]" dest="yul_path [25140,25150]"/>
  <match src="type_name [31525,31532]" dest="type_name [31525,31532]"/>
  <match src="primitive_type [39396,39403]" dest="primitive_type [42024,42028]"/>
  <match src=",: , [45950,45951]" dest=",: , [48291,48292]"/>
  <match src="parameter [6135,6161]" dest="parameter [6135,6161]"/>
  <match src="identifier: lastvalue [14435,14444]" dest="identifier: lastvalue [14435,14444]"/>
  <match src="identifier: endPtr [39756,39762]" dest="identifier: endPtr [42237,42243]"/>
  <match src="type_name [30367,30374]" dest="type_name [30367,30374]"/>
  <match src="): ) [35573,35574]" dest="): ) [37569,37570]"/>
  <match src="public: public [32295,32301]" dest="public: public [32295,32301]"/>
  <match src="constructor: constructor [10720,10731]" dest="constructor: constructor [10720,10731]"/>
  <match src="memory: memory [24112,24118]" dest="memory: memory [24112,24118]"/>
  <match src="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [26142,26260]" dest="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [26142,26260]"/>
  <match src="yul_evm_builtin [25125,25131]" dest="yul_evm_builtin [25125,25131]"/>
  <match src="primitive_type [51103,51110]" dest="primitive_type [53688,53695]"/>
  <match src=":=: := [40206,40208]" dest=":=: := [42584,42586]"/>
  <match src=".: . [15715,15716]" dest=".: . [15715,15716]"/>
  <match src="yul_function_call [25086,25103]" dest="yul_function_call [25086,25103]"/>
  <match src="parameter [23544,23561]" dest="parameter [23544,23561]"/>
  <match src="identifier: role [28760,28764]" dest="identifier: role [28760,28764]"/>
  <match src="call_expression [32321,32404]" dest="call_expression [32321,32404]"/>
  <match src="call_argument [33584,33591]" dest="call_argument [33584,33591]"/>
  <match src="type_name [26111,26116]" dest="type_name [26111,26116]"/>
  <match src=",: , [24386,24387]" dest=",: , [24386,24387]"/>
  <match src="type_name [20133,20140]" dest="type_name [20133,20140]"/>
  <match src="address: address [1661,1668]" dest="address: address [1661,1668]"/>
  <match src="identifier: role [33566,33570]" dest="identifier: role [33566,33570]"/>
  <match src="binary_expression [42614,42636]" dest="binary_expression [45020,45044]"/>
  <match src="identifier: id [2631,2633]" dest="identifier: id [2631,2633]"/>
  <match src="external: external [45664,45672]" dest="external: external [48005,48013]"/>
  <match src="call_argument [48886,48944]" dest="call_argument [51227,51285]"/>
  <match src="identifier: IERC165 [9019,9026]" dest="identifier: IERC165 [9019,9026]"/>
  <match src=",: , [33639,33640]" dest=",: , [33639,33640]"/>
  <match src="constant: constant [28051,28059]" dest="constant: constant [28051,28059]"/>
  <match src="): ) [38475,38476]" dest="): ) [41292,41293]"/>
  <match src="): ) [31251,31252]" dest="): ) [31251,31252]"/>
  <match src="function_definition [33034,33146]" dest="function_definition [33034,33146]"/>
  <match src="user_defined_type [50881,50898]" dest="user_defined_type [53466,53483]"/>
  <match src="): ) [40714,40715]" dest="): ) [43133,43134]"/>
  <match src="(: ( [33300,33301]" dest="(: ( [33300,33301]"/>
  <match src="true: true [12992,12996]" dest="true: true [12992,12996]"/>
  <match src="(: ( [40067,40068]" dest="(: ( [42457,42458]"/>
  <match src="identifier: require [10340,10347]" dest="identifier: require [10340,10347]"/>
  <match src="call_argument [24267,24272]" dest="call_argument [24267,24272]"/>
  <match src=".: . [31137,31138]" dest=".: . [31137,31138]"/>
  <match src="-: - [41854,41855]" dest="-: - [44265,44266]"/>
  <match src="=: = [35681,35682]" dest="=: = [37646,37647]"/>
  <match src="identifier: RLPItem [35449,35456]" dest="identifier: RLPItem [37477,37484]"/>
  <match src="exp: exp [40717,40720]" dest="exp: exp [43136,43139]"/>
  <match src="{: { [10741,10742]" dest="{: { [10741,10742]"/>
  <match src=".: . [24839,24840]" dest=".: . [24839,24840]"/>
  <match src="solidity: solidity [6313,6321]" dest="solidity: solidity [6313,6321]"/>
  <match src=",: , [16349,16350]" dest=",: , [16349,16350]"/>
  <match src="function: function [15534,15542]" dest="function: function [15534,15542]"/>
  <match src="identifier: length [49891,49897]" dest="identifier: length [52244,52250]"/>
  <match src="return: return [16643,16649]" dest="return: return [16643,16649]"/>
  <match src="type_name [46300,46305]" dest="type_name [48641,48646]"/>
  <match src="): ) [49594,49595]" dest="): ) [51935,51936]"/>
  <match src="returns: returns [19862,19869]" dest="returns: returns [19862,19869]"/>
  <match src="): ) [34194,34195]" dest="): ) [34194,34195]"/>
  <match src="number_literal: 2 [51148,51149]" dest="number_literal: 2 [53733,53734]"/>
  <match src="call_argument [21463,21467]" dest="call_argument [21463,21467]"/>
  <match src=":=: := [40498,40500]" dest=":=: := [42901,42903]"/>
  <match src="string [31164,31213]" dest="string [31164,31213]"/>
  <match src="yul_identifier [38045,38048]" dest="yul_identifier [41054,41057]"/>
  <match src="): ) [42198,42199]" dest="): ) [44575,44576]"/>
  <match src="false: false [44506,44511]" dest="false: false [46945,46950]"/>
  <match src="identifier: Address [27852,27859]" dest="identifier: Address [27852,27859]"/>
  <match src="): ) [47501,47502]" dest="): ) [49842,49843]"/>
  <match src="solidity: solidity [8800,8808]" dest="solidity: solidity [8800,8808]"/>
  <match src="call_argument [32429,32433]" dest="call_argument [32429,32433]"/>
  <match src="type_name [47920,47924]" dest="type_name [50261,50265]"/>
  <match src="call_expression [52146,52326]" dest="call_expression [54400,54455]"/>
  <match src="identifier: set [15712,15715]" dest="identifier: set [15712,15715]"/>
  <match src="): ) [51255,51256]" dest="): ) [53840,53841]"/>
  <match src="binary_expression [41848,41883]" dest="binary_expression [44259,44294]"/>
  <match src="expression_statement [45800,45833]" dest="expression_statement [48141,48174]"/>
  <match src=",: , [31064,31065]" dest=",: , [31064,31065]"/>
  <match src="event_paramater [1427,1437]" dest="event_paramater [1427,1437]"/>
  <match src="(: ( [16659,16660]" dest="(: ( [16659,16660]"/>
  <match src="return_type_definition [18932,18949]" dest="return_type_definition [18932,18949]"/>
  <match src="identifier: AccessControl [33991,34004]" dest="identifier: AccessControl [33991,34004]"/>
  <match src="): ) [42414,42415]" dest="): ) [44791,44792]"/>
  <match src="identifier: length [53110,53116]" dest="identifier: length [55128,55134]"/>
  <match src="assembly_statement [25031,25188]" dest="assembly_statement [25031,25188]"/>
  <match src="(: ( [33583,33584]" dest="(: ( [33583,33584]"/>
  <match src="primitive_type [24592,24596]" dest="primitive_type [24592,24596]"/>
  <match src="parameter [39396,39403]" dest="parameter [42024,42028]"/>
  <match src="): ) [23714,23715]" dest="): ) [23714,23715]"/>
  <match src="internal: internal [37355,37363]" dest="internal: internal [40685,40693]"/>
  <match src="if_statement [51378,53581]" dest="if_statement [54029,55878]"/>
  <match src="call_argument [38420,38434]" dest="call_argument [41278,41292]"/>
  <match src="pragma: pragma [11017,11023]" dest="pragma: pragma [11017,11023]"/>
  <match src="identifier: renounceRole [32251,32263]" dest="identifier: renounceRole [32251,32263]"/>
  <match src="parenthesized_expression [42619,42636]" dest="parenthesized_expression [45027,45044]"/>
  <match src="}: } [16459,16460]" dest="}: } [16459,16460]"/>
  <match src="(: ( [41400,41401]" dest="(: ( [43842,43843]"/>
  <match src="{: { [24852,24853]" dest="{: { [24852,24853]"/>
  <match src="identifier: WORD_SIZE [42485,42494]" dest="identifier: WORD_SIZE [44862,44871]"/>
  <match src="primitive_type [3308,3312]" dest="primitive_type [3308,3312]"/>
  <match src="identifier: target [23650,23656]" dest="identifier: target [23650,23656]"/>
  <match src="return: return [49122,49128]" dest="return: return [51463,51469]"/>
  <match src="identifier: memPtr [39711,39717]" dest="identifier: memPtr [42192,42198]"/>
  <match src="&lt;: &lt; [41571,41572]" dest="&lt;: &lt; [44004,44005]"/>
  <match src="type_name [47132,47139]" dest="type_name [49473,49480]"/>
  <match src="identifier: withdrawer [52431,52441]" dest="identifier: withdrawer [54604,54614]"/>
  <match src="identifier: STRING_LONG_START [41643,41660]" dest="identifier: STRING_LONG_START [44076,44093]"/>
  <match src="identifier: MintableERC1155Predicate [44746,44770]" dest="identifier: MintableERC1155Predicate [47087,47111]"/>
  <match src="yul_variable_declaration [42746,42784]" dest="yul_variable_declaration [45166,45204]"/>
  <match src="call_expression [10785,10803]" dest="call_expression [10785,10803]"/>
  <match src="parameter [24106,24118]" dest="parameter [24106,24118]"/>
  <match src="&amp;&amp;: &amp;&amp; [41704,41706]" dest="&amp;&amp;: &amp;&amp; [44124,44126]"/>
  <match src="primitive_type [10292,10298]" dest="primitive_type [10292,10298]"/>
  <match src="memory: memory [52668,52674]" dest="memory: memory [54821,54827]"/>
  <match src="return_statement [41841,41884]" dest="return_statement [44252,44295]"/>
  <match src="array_access [12930,12949]" dest="array_access [12930,12949]"/>
  <match src="uint8: uint8 [34726,34731]" dest="uint8: uint8 [34726,34731]"/>
  <match src="call_expression [47237,47291]" dest="call_expression [49578,49632]"/>
  <match src="identifier: require [37201,37208]" dest="identifier: require [40568,40575]"/>
  <match src="call_expression [45287,45374]" dest="call_expression [47628,47715]"/>
  <match src="type_name [16588,16595]" dest="type_name [16588,16595]"/>
  <match src="type_name [49619,49628]" dest="type_name [51960,51969]"/>
  <match src="identifier: functionCall [22532,22544]" dest="identifier: functionCall [22532,22544]"/>
  <match src="&quot;: &quot; [48027,48028]" dest="&quot;: &quot; [50368,50369]"/>
  <match src="(: ( [39352,39353]" dest="(: ( [41980,41981]"/>
  <match src="identifier: byteLen [40823,40830]" dest="identifier: byteLen [43242,43249]"/>
  <match src=",: , [42777,42778]" dest=",: , [45197,45198]"/>
  <match src="[: [ [31604,31605]" dest="[: [ [31604,31605]"/>
  <match src="function_body [42213,42873]" dest="function_body [44590,45312]"/>
  <match src="): ) [53261,53262]" dest="): ) [55485,55486]"/>
  <match src="): ) [20421,20422]" dest="): ) [20421,20422]"/>
  <match src="^:  ^ [8808,8810]" dest="^:  ^ [8808,8810]"/>
  <match src="solidity_pragma_token [44443,44457]" dest="solidity_pragma_token [46882,46896]"/>
  <match src="identifier: members [33769,33776]" dest="identifier: members [33769,33776]"/>
  <match src=",: , [1437,1438]" dest=",: , [1437,1438]"/>
  <match src="member_expression [51792,51807]" dest="member_expression [54310,54325]"/>
  <match src="identifier: STRING_LONG_START [34741,34758]" dest="identifier: STRING_LONG_START [34741,34758]"/>
  <match src="(: ( [18940,18941]" dest="(: ( [18940,18941]"/>
  <match src="identifier: set [16888,16891]" dest="identifier: set [16888,16891]"/>
  <match src="yul_identifier [41014,41021]" dest="yul_identifier [43456,43463]"/>
  <match src="call_expression [47982,48096]" dest="call_expression [50323,50437]"/>
  <match src="type_name [16626,16630]" dest="type_name [16626,16630]"/>
  <match src="type_name [49001,49010]" dest="type_name [51342,51351]"/>
  <match src=",: , [49543,49544]" dest=",: , [51884,51885]"/>
  <match src="parameter [17684,17697]" dest="parameter [17684,17697]"/>
  <match src="primitive_type [12443,12450]" dest="primitive_type [12443,12450]"/>
  <match src="tuple_expression [47261,47290]" dest="tuple_expression [49602,49631]"/>
  <match src="return_statement [23621,23716]" dest="return_statement [23621,23716]"/>
  <match src="(: ( [18256,18257]" dest="(: ( [18256,18257]"/>
  <match src="pragma: pragma [19103,19109]" dest="pragma: pragma [19103,19109]"/>
  <match src="bytes: bytes [23544,23549]" dest="bytes: bytes [23544,23549]"/>
  <match src="{: { [33351,33352]" dest="{: { [33351,33352]"/>
  <match src="calldata: calldata [46021,46029]" dest="calldata: calldata [48362,48370]"/>
  <match src="): ) [1985,1986]" dest="): ) [1985,1986]"/>
  <match src="parameter [46833,46850]" dest="parameter [49174,49191]"/>
  <match src="identifier: account [2614,2621]" dest="identifier: account [2614,2621]"/>
  <match src="type_name [48609,48616]" dest="type_name [50950,50957]"/>
  <match src="call_argument [53408,53411]" dest="call_argument [55677,55680]"/>
  <match src="binary_expression [40367,40397]" dest="binary_expression [42768,42798]"/>
  <match src="identifier: _indexes [12452,12460]" dest="identifier: _indexes [12452,12460]"/>
  <match src=",: , [33830,33831]" dest=",: , [33830,33831]"/>
  <match src="yul_identifier [40687,40694]" dest="yul_identifier [43106,43113]"/>
  <match src="identifier: require [31582,31589]" dest="identifier: require [31582,31589]"/>
  <match src="uint256: uint256 [6135,6142]" dest="uint256: uint256 [6135,6142]"/>
  <match src="variable_declaration_statement [38884,38929]" dest="variable_declaration_statement [37004,37046]"/>
  <match src="solidity_version:  0.6.6 [33947,33953]" dest="solidity_version:  0.6.6 [33947,33953]"/>
  <match src="call_argument [16416,16426]" dest="call_argument [16416,16426]"/>
  <match src="identifier: data [47631,47635]" dest="identifier: data [49972,49976]"/>
  <match src="identifier: value [16037,16042]" dest="identifier: value [16037,16042]"/>
  <match src="&quot;: &quot; [34192,34193]" dest="&quot;: &quot; [34192,34193]"/>
  <match src="call_argument [33841,33853]" dest="call_argument [33841,33853]"/>
  <match src="variable_declaration [50881,50918]" dest="variable_declaration [53466,53503]"/>
  <match src="else: else [40962,40966]" dest="else: else [43404,43408]"/>
  <match src="&quot;: &quot; [52322,52323]" dest="&quot;: &quot; [54451,54452]"/>
  <match src=",: , [22962,22963]" dest=",: , [22962,22963]"/>
  <match src="(: ( [2605,2606]" dest="(: ( [2605,2606]"/>
  <match src="(: ( [48686,48687]" dest="(: ( [51027,51028]"/>
  <match src="identifier: memPtr [38597,38603]" dest="identifier: memPtr [41408,41414]"/>
  <match src="identifier: numItems [35632,35640]" dest="identifier: numItems [37597,37605]"/>
  <match src="}: } [39994,39995]" dest="}: } [42384,42385]"/>
  <match src="array_access [30741,30753]" dest="array_access [30741,30753]"/>
  <match src="}: } [17399,17400]" dest="}: } [17399,17400]"/>
  <match src="call_expression [35888,35915]" dest="call_expression [42135,42162]"/>
  <match src="yul_path [42710,42714]" dest="yul_path [45126,45130]"/>
  <match src="(: ( [10770,10771]" dest="(: ( [10770,10771]"/>
  <match src="identifier: itemLen [40357,40364]" dest="identifier: itemLen [42758,42765]"/>
  <match src="parameter [16853,16860]" dest="parameter [16853,16860]"/>
  <match src="return_type_definition [47945,47970]" dest="return_type_definition [50286,50311]"/>
  <match src="identifier: amountsToBeExited [50296,50313]" dest="identifier: amountsToBeExited [52709,52726]"/>
  <match src="type_name [24010,24017]" dest="type_name [24010,24017]"/>
  <match src="[: [ [12275,12276]" dest="[: [ [12275,12276]"/>
  <match src="assembly_statement [37850,38077]" dest="assembly_statement [40859,41086]"/>
  <match src="boolean_literal [13036,13041]" dest="boolean_literal [13036,13041]"/>
  <match src="identifier: set [15164,15167]" dest="identifier: set [15164,15167]"/>
  <match src="state_mutability [16839,16843]" dest="state_mutability [16839,16843]"/>
  <match src="identifier: token [53023,53028]" dest="identifier: token [55067,55072]"/>
  <match src="parameter [45648,45662]" dest="parameter [47989,48003]"/>
  <match src="call_argument [18507,18517]" dest="call_argument [18507,18517]"/>
  <match src="address: address [28791,28798]" dest="address: address [28791,28798]"/>
  <match src="private: private [9300,9307]" dest="private: private [9300,9307]"/>
  <match src="&amp;&amp;: &amp;&amp; [20403,20405]" dest="&amp;&amp;: &amp;&amp; [20403,20405]"/>
  <match src="variable_declaration [50148,50157]" dest="variable_declaration [52561,52570]"/>
  <match src="type_name [9294,9298]" dest="type_name [9294,9298]"/>
  <match src="false [36528,36533]" dest="false [38398,38403]"/>
  <match src="return: return [23054,23060]" dest="return: return [23054,23060]"/>
  <match src="uint256: uint256 [45979,45986]" dest="uint256: uint256 [48320,48327]"/>
  <match src="external: external [44373,44381]" dest="external: external [46812,46820]"/>
  <match src="identifier: role [29701,29705]" dest="identifier: role [29701,29705]"/>
  <match src="yul_function_call [36446,36468]" dest="yul_function_call [38303,38325]"/>
  <match src="function_definition [14866,14995]" dest="function_definition [14866,14995]"/>
  <match src="identifier: LIST_SHORT_START [40425,40441]" dest="identifier: LIST_SHORT_START [42828,42844]"/>
  <match src="): ) [40894,40895]" dest="): ) [43324,43325]"/>
  <match src="): ) [35702,35703]" dest="): ) [37667,37668]"/>
  <match src="payable: payable [21392,21399]" dest="payable: payable [21392,21399]"/>
  <match src="[: [ [50226,50227]" dest="[: [ [52639,52640]"/>
  <match src="bytes: bytes [24106,24111]" dest="bytes: bytes [24106,24111]"/>
  <match src="yul_function_call [41118,41164]" dest="yul_function_call [43560,43606]"/>
  <match src="external: external [6184,6192]" dest="external: external [6184,6192]"/>
  <match src="state_variable_declaration [45093,45230]" dest="state_variable_declaration [47434,47571]"/>
  <match src="return: return [16079,16085]" dest="return: return [16079,16085]"/>
  <match src="primitive_type [12268,12275]" dest="primitive_type [12268,12275]"/>
  <match src="type_name [29667,29674]" dest="type_name [29667,29674]"/>
  <match src=",: , [37981,37982]" dest=",: , [40990,40991]"/>
  <match src="identifier: value [7370,7375]" dest="identifier: value [7370,7375]"/>
  <match src="visibility [34019,34026]" dest="visibility [34019,34026]"/>
  <match src="}: } [30467,30468]" dest="}: } [30467,30468]"/>
  <match src="{: { [42348,42349]" dest="{: { [44725,44726]"/>
  <match src="return_statement [30423,30461]" dest="return_statement [30423,30461]"/>
  <match src="identifier: destPtr [39097,39104]" dest="identifier: destPtr [41741,41748]"/>
  <match src="=: = [49847,49848]" dest="=: = [52200,52201]"/>
  <match src="primitive_type [51382,51389]" dest="primitive_type [53982,53989]"/>
  <match src=",: , [16586,16587]" dest=",: , [16586,16587]"/>
  <match src="(: ( [24465,24466]" dest="(: ( [24465,24466]"/>
  <match src="call_expression [12769,12792]" dest="call_expression [12769,12792]"/>
  <match src="function: function [18870,18878]" dest="function: function [18870,18878]"/>
  <match src="(: ( [42835,42836]" dest="(: ( [45259,45260]"/>
  <match src="identifier: items [35976,35981]" dest="identifier: items [37791,37796]"/>
  <match src="return_type_definition [29658,29675]" dest="return_type_definition [29658,29675]"/>
  <match src=",: , [1383,1384]" dest=",: , [1383,1384]"/>
  <match src="primitive_type [29360,29364]" dest="primitive_type [29360,29364]"/>
  <match src="): ) [865,866]" dest="): ) [865,866]"/>
  <match src="type_alias [27797,27810]" dest="type_alias [27797,27810]"/>
  <match src="else: else [14729,14733]" dest="else: else [14729,14733]"/>
  <match src="using_directive [44902,44940]" dest="using_directive [47243,47281]"/>
  <match src="identifier: result [36154,36160]" dest="identifier: result [37970,37976]"/>
  <match src="+: + [39649,39650]" dest="+: + [37707,37708]"/>
  <match src="indexed: indexed [1415,1422]" dest="indexed: indexed [1415,1422]"/>
  <match src="]: ] [48145,48146]" dest="]: ] [50486,50487]"/>
  <match src="identifier: _msgSender [34286,34296]" dest="identifier: _msgSender [34286,34296]"/>
  <match src="visibility [46037,46045]" dest="visibility [48378,48386]"/>
  <match src="identifier: value [17766,17771]" dest="identifier: value [17766,17771]"/>
  <match src="[: [ [50332,50333]" dest="[: [ [52745,52746]"/>
  <match src="): ) [46320,46321]" dest="): ) [48661,48662]"/>
  <match src="parenthesized_expression [41914,41935]" dest="parenthesized_expression [44338,44359]"/>
  <match src="&quot;: &quot; [53463,53464]" dest="&quot;: &quot; [55741,55742]"/>
  <match src="parameter [33505,33517]" dest="parameter [33505,33517]"/>
  <match src="[: [ [9836,9837]" dest="[: [ [9836,9837]"/>
  <match src="identifier: value [23571,23576]" dest="identifier: value [23571,23576]"/>
  <match src="identifier: set [14963,14966]" dest="identifier: set [14963,14966]"/>
  <match src="return_statement [46083,46092]" dest="return_statement [48424,48433]"/>
  <match src="binary_expression [48185,48193]" dest="binary_expression [50526,50534]"/>
  <match src=".: . [38959,38960]" dest=".: . [37116,37117]"/>
  <match src="binary_expression [41906,41935]" dest="binary_expression [44330,44359]"/>
  <match src="primitive_type [52316,52321]" dest="primitive_type [54445,54450]"/>
  <match src="identifier: len [38425,38428]" dest="identifier: len [41283,41286]"/>
  <match src="block_statement [52642,53492]" dest="block_statement [54795,55789]"/>
  <match src="call_argument [48759,48760]" dest="call_argument [51100,51101]"/>
  <match src="primitive_type [47920,47924]" dest="primitive_type [50261,50265]"/>
  <match src="yul_evm_builtin [41025,41028]" dest="yul_evm_builtin [43467,43470]"/>
  <match src="call_expression [18976,18998]" dest="call_expression [18976,18998]"/>
  <match src="primitive_type [24010,24017]" dest="primitive_type [24010,24017]"/>
  <match src="): ) [2991,2992]" dest="): ) [2991,2992]"/>
  <match src="identifier: require [32321,32328]" dest="identifier: require [32321,32328]"/>
  <match src="contract_declaration [44462,44635]" dest="contract_declaration [46901,47074]"/>
  <match src="(: ( [37295,37296]" dest="(: ( [40625,40626]"/>
  <match src="identifier: hasRole [31590,31597]" dest="identifier: hasRole [31590,31597]"/>
  <match src="=: = [36389,36390]" dest="=: = [38246,38247]"/>
  <match src="yul_decimal_number: 32 [41150,41152]" dest="yul_decimal_number: 32 [43592,43594]"/>
  <match src="function: function [26060,26068]" dest="function: function [26060,26068]"/>
  <match src="identifier: count [39944,39949]" dest="identifier: count [42334,42339]"/>
  <match src="): ) [38223,38224]" dest="): ) [41229,41230]"/>
  <match src="(: ( [32328,32329]" dest="(: ( [32328,32329]"/>
  <match src="identifier: _msgSender [25955,25965]" dest="identifier: _msgSender [25955,25965]"/>
  <match src="return_type_definition [12700,12714]" dest="return_type_definition [12700,12714]"/>
  <match src="identifier: sender [26038,26044]" dest="identifier: sender [26038,26044]"/>
  <match src="call_expression [31622,31634]" dest="call_expression [31622,31634]"/>
  <match src="): ) [16898,16899]" dest="): ) [16898,16899]"/>
  <match src="call_argument [21455,21486]" dest="call_argument [21455,21486]"/>
  <match src=":=: := [41115,41117]" dest=":=: := [43557,43559]"/>
  <match src="type_name [30679,30686]" dest="type_name [30679,30686]"/>
  <match src="identifier: offset [38966,38972]" dest="identifier: offset [37123,37129]"/>
  <match src="user_defined_type [50956,50973]" dest="user_defined_type [53541,53558]"/>
  <match src=",: , [33388,33389]" dest=",: , [33388,33389]"/>
  <match src="identifier: _setupRole [33043,33053]" dest="identifier: _setupRole [33043,33053]"/>
  <match src="interface: interface [43114,43123]" dest="interface: interface [45553,45562]"/>
  <match src="yul_evm_builtin [40726,40729]" dest="yul_evm_builtin [43145,43148]"/>
  <match src="identifier: index [15724,15729]" dest="identifier: index [15724,15729]"/>
  <match src=",: , [32352,32353]" dest=",: , [32352,32353]"/>
  <match src="(: ( [31597,31598]" dest="(: ( [31597,31598]"/>
  <match src="primitive_type [46015,46020]" dest="primitive_type [48356,48361]"/>
  <match src="bytes: bytes [47284,47289]" dest="bytes: bytes [49625,49630]"/>
  <match src="yul_assignment [41222,41262]" dest="yul_assignment [43664,43704]"/>
  <match src="type_name [2658,2665]" dest="type_name [2658,2665]"/>
  <match src=",: , [46289,46290]" dest=",: , [48630,48631]"/>
  <match src="type_name [24388,24394]" dest="type_name [24388,24394]"/>
  <match src="type_name [13839,13846]" dest="type_name [13839,13846]"/>
  <match src="identifier: len [42228,42231]" dest="identifier: len [44605,44608]"/>
  <match src="identifier: ids [52952,52955]" dest="identifier: ids [55399,55402]"/>
  <match src="identifier: target [24343,24349]" dest="identifier: target [24343,24349]"/>
  <match src="identifier: STRING_SHORT_START [40266,40284]" dest="identifier: STRING_SHORT_START [42644,42662]"/>
  <match src="type_cast_expression [53238,53247]" dest="type_cast_expression [55458,55467]"/>
  <match src="primitive_type [50765,50772]" dest="primitive_type [53350,53357]"/>
  <match src="solidity_version:  0.6.6 [42958,42964]" dest="solidity_version:  0.6.6 [45397,45403]"/>
  <match src="number_literal: 0 [10801,10802]" dest="number_literal: 0 [10801,10802]"/>
  <match src="member_expression [31598,31620]" dest="member_expression [31598,31620]"/>
  <match src="identifier: _INTERFACE_ID_ERC165 [9144,9164]" dest="identifier: _INTERFACE_ID_ERC165 [9144,9164]"/>
  <match src="yul_function_call [40209,40231]" dest="yul_function_call [42587,42609]"/>
  <match src="type_name [48687,48696]" dest="type_name [51028,51037]"/>
  <match src="primitive_type [24606,24611]" dest="primitive_type [24606,24611]"/>
  <match src="uint256: uint256 [18941,18948]" dest="uint256: uint256 [18941,18948]"/>
  <match src="[: [ [47960,47961]" dest="[: [ [50301,50302]"/>
  <match src="type_name [28422,28429]" dest="type_name [28422,28429]"/>
  <match src="identifier: AddressSet [16806,16816]" dest="identifier: AddressSet [16806,16816]"/>
  <match src="{: { [9361,9362]" dest="{: { [9361,9362]"/>
  <match src="yul_identifier [25140,25150]" dest="yul_identifier [25140,25150]"/>
  <match src="type_name [48137,48146]" dest="type_name [50478,50487]"/>
  <match src="solidity: solidity [33939,33947]" dest="solidity: solidity [33939,33947]"/>
  <match src="visibility [10312,10320]" dest="visibility [10312,10320]"/>
  <match src="(: ( [38716,38717]" dest="(: ( [41527,41528]"/>
  <match src="[: [ [8558,8559]" dest="[: [ [8558,8559]"/>
  <match src="yul_variable_declaration [41010,41041]" dest="yul_variable_declaration [43452,43483]"/>
  <match src="yul_assignment [36886,36910]" dest="yul_assignment [39660,39684]"/>
  <match src="call_argument [45066,45083]" dest="call_argument [47407,47424]"/>
  <match src="(: ( [36494,36495]" dest="(: ( [38351,38352]"/>
  <match src="new_expression [35683,35696]" dest="new_expression [37648,37661]"/>
  <match src="solidity_version_comparison_operator [25391,25393]" dest="solidity_version_comparison_operator [25391,25393]"/>
  <match src="identifier: size [49011,49015]" dest="identifier: size [51352,51356]"/>
  <match src="mload: mload [25086,25091]" dest="mload: mload [25086,25091]"/>
  <match src="): ) [45609,45610]" dest="): ) [47950,47951]"/>
  <match src="identifier: item [37475,37479]" dest="identifier: item [38172,38176]"/>
  <match src="function_body [29366,29430]" dest="function_body [29366,29430]"/>
  <match src="primitive_type [15564,15571]" dest="primitive_type [15564,15571]"/>
  <match src="type_name [48968,48977]" dest="type_name [51309,51318]"/>
  <match src="(: ( [17765,17766]" dest="(: ( [17765,17766]"/>
  <match src="function_definition [33485,33673]" dest="function_definition [33485,33673]"/>
  <match src="identifier: members [30443,30450]" dest="identifier: members [30443,30450]"/>
  <match src="array_access [33756,33768]" dest="array_access [33756,33768]"/>
  <match src="primitive_type [51596,51603]" dest="primitive_type [54183,54190]"/>
  <match src="type_name [24606,24611]" dest="type_name [24606,24611]"/>
  <match src="uint8: uint8 [34679,34684]" dest="uint8: uint8 [34679,34684]"/>
  <match src=",: , [1970,1971]" dest=",: , [1970,1971]"/>
  <match src="identifier: withdrawer [53379,53389]" dest="identifier: withdrawer [55644,55654]"/>
  <match src="identifier: adminRole [33403,33412]" dest="identifier: adminRole [33403,33412]"/>
  <match src="identifier: rootToken [52859,52868]" dest="identifier: rootToken [55012,55021]"/>
  <match src="yul_identifier [25092,25102]" dest="yul_identifier [25092,25102]"/>
  <match src="parameter [45979,45986]" dest="parameter [48320,48327]"/>
  <match src="yul_path [38597,38603]" dest="yul_path [41408,41414]"/>
  <match src="(: ( [34069,34070]" dest="(: ( [34069,34070]"/>
  <match src="identifier: RLPReader [34662,34671]" dest="identifier: RLPReader [34662,34671]"/>
  <match src="parameter [18027,18031]" dest="parameter [18027,18031]"/>
  <match src="call_argument [16428,16451]" dest="call_argument [16428,16451]"/>
  <match src="address: address [51261,51268]" dest="address: address [53846,53853]"/>
  <match src="[: [ [51405,51406]" dest="[: [ [54005,54006]"/>
  <match src="(: ( [31632,31633]" dest="(: ( [31632,31633]"/>
  <match src=",: , [32433,32434]" dest=",: , [32433,32434]"/>
  <match src="(: ( [37288,37289]" dest="(: ( [40618,40619]"/>
  <match src="event_paramater [2374,2392]" dest="event_paramater [2374,2392]"/>
  <match src=",: , [33839,33840]" dest=",: , [33839,33840]"/>
  <match src="): ) [13492,13493]" dest="): ) [13492,13493]"/>
  <match src="mstore: mstore [42820,42826]" dest="mstore: mstore [45244,45250]"/>
  <match src="returns: returns [49610,49617]" dest="returns: returns [51951,51958]"/>
  <match src="primitive_type [33068,33075]" dest="primitive_type [33068,33075]"/>
  <match src="identifier: balanceOfBatch [2884,2898]" dest="identifier: balanceOfBatch [2884,2898]"/>
  <match src=",: , [12744,12745]" dest=",: , [12744,12745]"/>
  <match src="call_expression [16880,16899]" dest="call_expression [16880,16899]"/>
  <match src="=: = [44985,44986]" dest="=: = [47326,47327]"/>
  <match src="{: { [25209,25210]" dest="{: { [25209,25210]"/>
  <match src=".: . [30442,30443]" dest=".: . [30442,30443]"/>
  <match src="number_literal: 0 [23098,23099]" dest="number_literal: 0 [23098,23099]"/>
  <match src=".: . [24639,24640]" dest=".: . [24639,24640]"/>
  <match src="return: return [13029,13035]" dest="return: return [13029,13035]"/>
  <match src="public: public [30382,30388]" dest="public: public [30382,30388]"/>
  <match src="binary_expression [41707,41730]" dest="binary_expression [44127,44150]"/>
  <match src="private: private [39374,39381]" dest="private: private [42002,42009]"/>
  <match src="yul_identifier [36886,36889]" dest="yul_identifier [39660,39663]"/>
  <match src="visibility [50835,50841]" dest="visibility [53420,53426]"/>
  <match src="return_type_definition [3560,3574]" dest="return_type_definition [3560,3574]"/>
  <match src="bytes: bytes [50811,50816]" dest="bytes: bytes [53396,53401]"/>
  <match src="[: [ [35694,35695]" dest="[: [ [37659,37660]"/>
  <match src="}: } [6195,6196]" dest="}: } [6195,6196]"/>
  <match src="identifier: adminRole [33448,33457]" dest="identifier: adminRole [33448,33457]"/>
  <match src="): ) [52324,52325]" dest="): ) [54453,54454]"/>
  <match src="primitive_type [33315,33322]" dest="primitive_type [33315,33322]"/>
  <match src="[: [ [2982,2983]" dest="[: [ [2982,2983]"/>
  <match src="type_name [24026,24031]" dest="type_name [24026,24031]"/>
  <match src="identifier: account [29330,29337]" dest="identifier: account [29330,29337]"/>
  <match src="type_cast_expression [51382,51418]" dest="type_cast_expression [53982,54018]"/>
  <match src=",: , [52412,52413]" dest=",: , [54581,54582]"/>
  <match src="(: ( [40729,40730]" dest="(: ( [43148,43149]"/>
  <match src="return_type_definition [35511,35537]" dest="return_type_definition [37512,37538]"/>
  <match src="identifier: role [31132,31136]" dest="identifier: role [31132,31136]"/>
  <match src="identifier: toUint [51409,51415]" dest="identifier: toUint [54009,54015]"/>
  <match src="if_statement [42224,42245]" dest="if_statement [44601,44622]"/>
  <match src="yul_function_call [42706,42715]" dest="yul_function_call [45122,45131]"/>
  <match src="): ) [24668,24669]" dest="): ) [24668,24669]"/>
  <match src="if: if [41561,41563]" dest="if: if [43994,43996]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [24531,24581]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [24531,24581]"/>
  <match src="{: { [33102,33103]" dest="{: { [33102,33103]"/>
  <match src="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [19224,19805]" dest="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [19224,19805]"/>
  <match src="identifier: UintSet [18882,18889]" dest="identifier: UintSet [18882,18889]"/>
  <match src="external: external [46322,46330]" dest="external: external [48663,48671]"/>
  <match src="visibility [22580,22588]" dest="visibility [22580,22588]"/>
  <match src="number_literal: 0 [41600,41601]" dest="number_literal: 0 [44047,44048]"/>
  <match src="): ) [18447,18448]" dest="): ) [18447,18448]"/>
  <match src="string [21693,21753]" dest="string [21693,21753]"/>
  <match src="return_type_definition [38708,38730]" dest="return_type_definition [41519,41541]"/>
  <match src="type_name [45540,45547]" dest="type_name [47881,47888]"/>
  <match src="bytes: bytes [36786,36791]" dest="bytes: bytes [39507,39512]"/>
  <match src="function_definition [8459,8690]" dest="function_definition [8459,8690]"/>
  <match src="primitive_type [9294,9298]" dest="primitive_type [9294,9298]"/>
  <match src=",: , [24024,24025]" dest=",: , [24024,24025]"/>
  <match src=".: . [51247,51248]" dest=".: . [53832,53833]"/>
  <match src="(: ( [48146,48147]" dest="(: ( [50487,50488]"/>
  <match src="returns: returns [47945,47952]" dest="returns: returns [50286,50293]"/>
  <match src="assembly: assembly [36862,36870]" dest="assembly: assembly [39636,39644]"/>
  <match src="): ) [37896,37897]" dest="): ) [40905,40906]"/>
  <match src="parameter [38717,38729]" dest="parameter [41528,41540]"/>
  <match src="}: } [48239,48240]" dest="}: } [50580,50581]"/>
  <match src="array_access [51229,51247]" dest="array_access [53814,53832]"/>
  <match src="(: ( [19870,19871]" dest="(: ( [19870,19871]"/>
  <match src="[: [ [50898,50899]" dest="[: [ [53483,53484]"/>
  <match src="identifier: item [36700,36704]" dest="identifier: item [39453,39457]"/>
  <match src="comment: /**         @dev Handles the receipt of a multiple ERC1155 token types. This function         is called at the end of a `safeBatchTransferFrom` after the balances have         been updated. To accept the transfer(s), this must return         `bytes4(keccak256(&quot;onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)&quot;))`         (i.e. 0xbc197c81, or its own function selector).         @param operator The address which initiated the batch transfer (i.e. msg.sender)         @param from The address which previously owned the token         @param ids An array containing ids of each token being transferred (order and length must match values array)         @param values An array containing amounts of each token being transferred (order and length must match ids array)         @param data Additional data with no specified format         @return `bytes4(keccak256(&quot;onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)&quot;))` if transfer is allowed     */ [7464,8453]" dest="comment: /**         @dev Handles the receipt of a multiple ERC1155 token types. This function         is called at the end of a `safeBatchTransferFrom` after the balances have         been updated. To accept the transfer(s), this must return         `bytes4(keccak256(&quot;onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)&quot;))`         (i.e. 0xbc197c81, or its own function selector).         @param operator The address which initiated the batch transfer (i.e. msg.sender)         @param from The address which previously owned the token         @param ids An array containing ids of each token being transferred (order and length must match values array)         @param values An array containing amounts of each token being transferred (order and length must match ids array)         @param data Additional data with no specified format         @return `bytes4(keccak256(&quot;onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)&quot;))` if transfer is allowed     */ [7464,8453]"/>
  <match src="expression_statement [38798,38874]" dest="expression_statement [39918,39941]"/>
  <match src="function_definition [44257,44382]" dest="function_definition [46696,46821]"/>
  <match src="comment: /**      * @notice Validates log signature, from and to address      * then sends the correct tokenId, amount to withdrawer      * callable only by manager      * @param rootToken Token which gets withdrawn      * @param log Valid ERC1155 TransferSingle burn or TransferBatch burn log from child chain      */ [50414,50729]" dest="comment: /**      * @notice Validates log signature, from and to address      * then sends the correct tokenId, amount to withdrawer      * callable only by manager      * @param rootToken Token which gets withdrawn      * @param log Valid ERC1155 TransferSingle burn or TransferBatch burn log from child chain      */ [52999,53314]"/>
  <match src="calldata: calldata [46281,46289]" dest="calldata: calldata [48622,48630]"/>
  <match src="parameter [36335,36339]" dest="parameter [38151,38155]"/>
  <match src="primitive_type [18257,18261]" dest="primitive_type [18257,18261]"/>
  <match src="): ) [18007,18008]" dest="): ) [18007,18008]"/>
  <match src="comment: // To delete an element from the _values array in O(1), we swap the element to delete with the last one in [13547,13653]" dest="comment: // To delete an element from the _values array in O(1), we swap the element to delete with the last one in [13547,13653]"/>
  <match src="]: ] [8559,8560]" dest="]: ] [8559,8560]"/>
  <match src="identifier: errorMessage [23101,23113]" dest="identifier: errorMessage [23101,23113]"/>
  <match src="function_body [15146,15190]" dest="function_body [15146,15190]"/>
  <match src="identifier: EnumerableSet [27815,27828]" dest="identifier: EnumerableSet [27815,27828]"/>
  <match src="identifier: _roles [29384,29390]" dest="identifier: _roles [29384,29390]"/>
  <match src="call_argument [33832,33839]" dest="call_argument [33832,33839]"/>
  <match src="type_name [14902,14909]" dest="type_name [14902,14909]"/>
  <match src="array_access [47273,47282]" dest="array_access [49614,49623]"/>
  <match src="primitive_type [13420,13427]" dest="primitive_type [13420,13427]"/>
  <match src="(: ( [38019,38020]" dest="(: ( [41028,41029]"/>
  <match src="if: if [41617,41619]" dest="if: if [44064,44066]"/>
  <match src="return_type_definition [24097,24119]" dest="return_type_definition [24097,24119]"/>
  <match src="primitive_type [20133,20140]" dest="primitive_type [20133,20140]"/>
  <match src="identifier: value [13278,13283]" dest="identifier: value [13278,13283]"/>
  <match src="identifier: role [33513,33517]" dest="identifier: role [33513,33517]"/>
  <match src="primitive_type [47167,47174]" dest="primitive_type [49508,49515]"/>
  <match src="bytes: bytes [22964,22969]" dest="bytes: bytes [22964,22969]"/>
  <match src="parameter [16327,16349]" dest="parameter [16327,16349]"/>
  <match src="function: function [12646,12654]" dest="function: function [12646,12654]"/>
  <match src="yul_decimal_number: 0 [41521,41522]" dest="yul_decimal_number: 0 [43954,43955]"/>
  <match src="type_name [34726,34731]" dest="type_name [34726,34731]"/>
  <match src="yul_path [41073,41079]" dest="yul_path [43515,43521]"/>
  <match src="identifier: role [32272,32276]" dest="identifier: role [32272,32276]"/>
  <match src="identifier: MANAGER_ROLE [44972,44984]" dest="identifier: MANAGER_ROLE [47313,47325]"/>
  <match src="type_name [51103,51110]" dest="type_name [53688,53695]"/>
  <match src="uint256: uint256 [29667,29674]" dest="uint256: uint256 [29667,29674]"/>
  <match src="call_argument [47539,47548]" dest="call_argument [49880,49889]"/>
  <match src="identifier: this [47571,47575]" dest="identifier: this [49912,49916]"/>
  <match src="): ) [50935,50936]" dest="): ) [53520,53521]"/>
  <match src="identifier: at [18879,18881]" dest="identifier: at [18879,18881]"/>
  <match src="address: address [29150,29157]" dest="address: address [29150,29157]"/>
  <match src="identifier: id [52460,52462]" dest="identifier: id [54637,54639]"/>
  <match src="member_expression [12952,12963]" dest="member_expression [12952,12963]"/>
  <match src="type_name [45504,45511]" dest="type_name [47845,47852]"/>
  <match src="identifier: toList [50937,50943]" dest="identifier: toList [53522,53528]"/>
  <match src="uint8: uint8 [34861,34866]" dest="uint8: uint8 [34867,34872]"/>
  <match src="): ) [47290,47291]" dest="): ) [49631,49632]"/>
  <match src="}: } [4825,4826]" dest="}: } [4825,4826]"/>
  <match src="call_argument [51808,51821]" dest="call_argument [54326,54339]"/>
  <match src="div: div [38016,38019]" dest="div: div [41025,41028]"/>
  <match src="identifier: mintBatch [52152,52161]" dest="identifier: mint [54406,54410]"/>
  <match src=",: , [24259,24260]" dest=",: , [24259,24260]"/>
  <match src="&quot;: &quot; [32354,32355]" dest="&quot;: &quot; [32354,32355]"/>
  <match src=",: , [47548,47549]" dest=",: , [49889,49890]"/>
  <match src="identifier: addresses [48985,48994]" dest="identifier: addresses [51326,51335]"/>
  <match src="type_name [13302,13306]" dest="type_name [13302,13306]"/>
  <match src="number_literal: 33 [38432,38434]" dest="number_literal: 33 [41290,41292]"/>
  <match src="primitive_type [24370,24377]" dest="primitive_type [24370,24377]"/>
  <match src="-=: -= [42334,42336]" dest="-=: -= [44711,44713]"/>
  <match src="parameter [22948,22962]" dest="parameter [22948,22962]"/>
  <match src="identifier: _revertMsg [34314,34324]" dest="identifier: _revertMsg [34314,34324]"/>
  <match src="function: function [45906,45914]" dest="function: function [48247,48255]"/>
  <match src="number_literal: 0xb8 [34761,34765]" dest="number_literal: 0xb8 [34762,34766]"/>
  <match src="array_access [51001,51014]" dest="array_access [53586,53599]"/>
  <match src="exp: exp [38028,38031]" dest="exp: exp [41037,41040]"/>
  <match src="bytes4: bytes4 [8682,8688]" dest="bytes4: bytes4 [8682,8688]"/>
  <match src="call_expression [35632,35646]" dest="call_expression [37597,37611]"/>
  <match src="primitive_type [38514,38521]" dest="primitive_type [41328,41332]"/>
  <match src="memory: memory [47963,47969]" dest="memory: memory [50304,50310]"/>
  <match src=",: , [23662,23663]" dest=",: , [23662,23663]"/>
  <match src="call_argument [47446,47453]" dest="call_argument [49787,49794]"/>
  <match src="event_paramater [1359,1383]" dest="event_paramater [1359,1383]"/>
  <match src=",: , [22981,22982]" dest=",: , [22981,22982]"/>
  <match src="yul_identifier [39097,39104]" dest="yul_identifier [41741,41748]"/>
  <match src="event_paramater [29150,29173]" dest="event_paramater [29150,29173]"/>
  <match src="identifier: result [38634,38640]" dest="identifier: result [41445,41451]"/>
  <match src="comment: /**  * @dev _Available since v3.1._  */ [10608,10649]" dest="comment: /**  * @dev _Available since v3.1._  */ [10608,10649]"/>
  <match src="}: } [13007,13008]" dest="}: } [13007,13008]"/>
  <match src="(: ( [23028,23029]" dest="(: ( [23028,23029]"/>
  <match src="): ) [51364,51365]" dest="): ) [53949,53950]"/>
  <match src="!=: != [48748,48750]" dest="!=: != [51089,51091]"/>
  <match src="byte: byte [40209,40213]" dest="byte: byte [42587,42591]"/>
  <match src="type_name [14939,14943]" dest="type_name [14939,14943]"/>
  <match src="&quot;: &quot; [45738,45739]" dest="&quot;: &quot; [48079,48080]"/>
  <match src="visibility [18234,18242]" dest="visibility [18234,18242]"/>
  <match src="contract_declaration [33960,34358]" dest="contract_declaration [33960,34358]"/>
  <match src="function: function [48579,48587]" dest="function: function [50920,50928]"/>
  <match src="add: add [40806,40809]" dest="add: add [43225,43228]"/>
  <match src="identifier: _itemLength [36013,36024]" dest="identifier: _itemLength [37828,37839]"/>
  <match src="call_expression [24131,24212]" dest="call_expression [24131,24212]"/>
  <match src="call_argument [24261,24265]" dest="call_argument [24261,24265]"/>
  <match src="block_statement [24693,24737]" dest="block_statement [24693,24737]"/>
  <match src=":=: := [20336,20338]" dest=":=: := [20336,20338]"/>
  <match src="identifier: adminRole [31611,31620]" dest="identifier: adminRole [31611,31620]"/>
  <match src="yul_identifier [42398,42402]" dest="yul_identifier [44775,44779]"/>
  <match src="call_argument [45307,45367]" dest="call_argument [47648,47708]"/>
  <match src="type_name [35520,35529]" dest="type_name [37521,37530]"/>
  <match src="type_name [46064,46070]" dest="type_name [48405,48411]"/>
  <match src=".: . [39724,39725]" dest=".: . [42205,42206]"/>
  <match src="address: address [50765,50772]" dest="address: address [53350,53357]"/>
  <match src="(: ( [51157,51158]" dest="(: ( [53742,53743]"/>
  <match src="type_name [18882,18889]" dest="type_name [18882,18889]"/>
  <match src=",: , [36949,36950]" dest=",: , [39723,39724]"/>
  <match src="): ) [7454,7455]" dest="): ) [7454,7455]"/>
  <match src="==: == [51419,51421]" dest="==: == [54042,54044]"/>
  <match src="bytes: bytes [53238,53243]" dest="bytes: bytes [55458,55463]"/>
  <match src="(: ( [41520,41521]" dest="(: ( [43953,43954]"/>
  <match src="]: ] [4773,4774]" dest="]: ] [4773,4774]"/>
  <match src="identifier: depositor [47350,47359]" dest="identifier: depositor [49691,49700]"/>
  <match src="variable_declaration_statement [24591,24670]" dest="variable_declaration_statement [24591,24670]"/>
  <match src="&lt;: &lt; [40877,40878]" dest="&lt;: &lt; [43307,43308]"/>
  <match src="call_argument [53091,53104]" dest="call_argument [55109,55122]"/>
  <match src="type_name [49513,49520]" dest="type_name [51854,51861]"/>
  <match src="primitive_type [49554,49561]" dest="primitive_type [51895,51902]"/>
  <match src="type_name [13253,13256]" dest="type_name [13253,13256]"/>
  <match src="yul_path [37874,37880]" dest="yul_path [40883,40889]"/>
  <match src="yul_path [39118,39124]" dest="yul_path [41762,41768]"/>
  <match src="bytes4: bytes4 [9284,9290]" dest="bytes4: bytes4 [9284,9290]"/>
  <match src="if: if [24825,24827]" dest="if: if [24825,24827]"/>
  <match src="variable_declaration [20133,20149]" dest="variable_declaration [20133,20149]"/>
  <match src="variable_declaration [51044,51064]" dest="variable_declaration [53629,53649]"/>
  <match src="type_name [29150,29157]" dest="type_name [29150,29157]"/>
  <match src="parameter [21384,21409]" dest="parameter [21384,21409]"/>
  <match src="uint256: uint256 [17684,17691]" dest="uint256: uint256 [17684,17691]"/>
  <match src="identifier: size [47925,47929]" dest="identifier: size [50266,50270]"/>
  <match src="type_name [35449,35456]" dest="type_name [37477,37484]"/>
  <match src="identifier: errorMessage [25235,25247]" dest="identifier: errorMessage [25235,25247]"/>
  <match src="identifier: result [39206,39212]" dest="identifier: result [41836,41842]"/>
  <match src="comment: // @return number of bytes until the data [41330,41371]" dest="comment: // @return number of bytes until the data [43772,43813]"/>
  <match src="(: ( [10291,10292]" dest="(: ( [10291,10292]"/>
  <match src="{: { [49637,49638]" dest="{: { [51990,51991]"/>
  <match src="variable_declaration [35857,35871]" dest="variable_declaration [42106,42118]"/>
  <match src="yul_function_call [41246,41261]" dest="yul_function_call [43688,43703]"/>
  <match src="return_type_definition [18248,18262]" dest="return_type_definition [18248,18262]"/>
  <match src="internal: internal [19848,19856]" dest="internal: internal [19848,19856]"/>
  <match src="binary_expression [36495,36519]" dest="binary_expression [38352,38376]"/>
  <match src="identifier: memPtr [37810,37816]" dest="identifier: memPtr [37061,37067]"/>
  <match src="yul_path [41059,41065]" dest="yul_path [43501,43507]"/>
  <match src="parameter [29632,29644]" dest="parameter [29632,29644]"/>
  <match src="revert_statement [25228,25249]" dest="revert_statement [25228,25249]"/>
  <match src="(: ( [39395,39396]" dest="(: ( [42023,42024]"/>
  <match src="(: ( [18026,18027]" dest="(: ( [18026,18027]"/>
  <match src="identifier: require [21676,21683]" dest="identifier: require [21676,21683]"/>
  <match src="(: ( [16110,16111]" dest="(: ( [16110,16111]"/>
  <match src="identifier: to [4208,4210]" dest="identifier: to [4208,4210]"/>
  <match src="identifier: _inner [17376,17382]" dest="identifier: _inner [17376,17382]"/>
  <match src="expression_statement [49079,49099]" dest="expression_statement [51420,51440]"/>
  <match src="primitive_type [1718,1725]" dest="primitive_type [1718,1725]"/>
  <match src="): ) [19846,19847]" dest="): ) [19846,19847]"/>
  <match src="string_literal [31164,31213]" dest="string_literal [31164,31213]"/>
  <match src="): ) [48829,48830]" dest="): ) [51170,51171]"/>
  <match src="(: ( [14589,14590]" dest="(: ( [14589,14590]"/>
  <match src=",: , [15655,15656]" dest=",: , [15655,15656]"/>
  <match src="identifier: _at [18976,18979]" dest="identifier: _at [18976,18979]"/>
  <match src="function_definition [9715,9857]" dest="function_definition [9715,9857]"/>
  <match src="function: function [37005,37013]" dest="function: function [40444,40452]"/>
  <match src="contract_body [9027,10468]" dest="contract_body [9027,10468]"/>
  <match src="}: } [44384,44385]" dest="}: } [46823,46824]"/>
  <match src="return_type_definition [24424,24446]" dest="return_type_definition [24424,24446]"/>
  <match src="identifier: ids [1713,1716]" dest="identifier: ids [1713,1716]"/>
  <match src="type_name [28766,28773]" dest="type_name [28766,28773]"/>
  <match src="): ) [50944,50945]" dest="): ) [53529,53530]"/>
  <match src="): ) [29644,29645]" dest="): ) [29644,29645]"/>
  <match src="call_expression [51390,51417]" dest="call_expression [53990,54017]"/>
  <match src="call_argument [34286,34298]" dest="call_argument [34286,34298]"/>
  <match src="address: address [5441,5448]" dest="address: address [5441,5448]"/>
  <match src="=: = [39018,39019]" dest="=: = [41665,41666]"/>
  <match src="identifier: dataLen [36003,36010]" dest="identifier: dataLen [37818,37825]"/>
  <match src="user_defined_type [35120,35127]" dest="user_defined_type [36079,36086]"/>
  <match src="solidity: solidity [104,112]" dest="solidity: solidity [104,112]"/>
  <match src="let: let [41010,41013]" dest="let: let [43452,43455]"/>
  <match src="(: ( [36896,36897]" dest="(: ( [39670,39671]"/>
  <match src="binary_expression [49670,49718]" dest="binary_expression [52023,52071]"/>
  <match src="identifier: _msgSender [31622,31632]" dest="identifier: _msgSender [31622,31632]"/>
  <match src="{: { [10329,10330]" dest="{: { [10329,10330]"/>
  <match src="revert: revert [25125,25131]" dest="revert: revert [25125,25131]"/>
  <match src="&quot;: &quot; [22655,22656]" dest="&quot;: &quot; [22655,22656]"/>
  <match src="identifier: result [39011,39017]" dest="identifier: result [41658,41664]"/>
  <match src="): ) [23009,23010]" dest="): ) [23009,23010]"/>
  <match src="type_name [4765,4774]" dest="type_name [4765,4774]"/>
  <match src="visibility [3323,3331]" dest="visibility [3323,3331]"/>
  <match src="inheritance_specifier [4944,4952]" dest="inheritance_specifier [4944,4952]"/>
  <match src="yul_variable_declaration [41103,41164]" dest="yul_variable_declaration [43545,43606]"/>
  <match src="identifier: _inner [17750,17756]" dest="identifier: _inner [17750,17756]"/>
  <match src="yul_block [37987,38066]" dest="yul_block [40996,41075]"/>
  <match src="primitive_type [40106,40113]" dest="primitive_type [42493,42497]"/>
  <match src="parameter [35449,35468]" dest="parameter [37477,37496]"/>
  <match src="yul_identifier [41073,41079]" dest="yul_identifier [43515,43521]"/>
  <match src="contract: contract [44462,44470]" dest="contract: contract [46901,46909]"/>
  <match src="solidity_pragma_token [8800,8815]" dest="solidity_pragma_token [8800,8815]"/>
  <match src="bytes: bytes [4240,4245]" dest="bytes: bytes [4240,4245]"/>
  <match src="array_access [50213,50229]" dest="array_access [52626,52642]"/>
  <match src="type_name [15564,15571]" dest="type_name [15564,15571]"/>
  <match src="returns: returns [46055,46062]" dest="returns: returns [48396,48403]"/>
  <match src="yul_identifier [36460,36466]" dest="yul_identifier [38317,38323]"/>
  <match src="bytes: bytes [24606,24611]" dest="bytes: bytes [24606,24611]"/>
  <match src="yul_path [41250,41257]" dest="yul_path [43692,43699]"/>
  <match src="call_expression [53279,53480]" dest="call_expression [55558,55762]"/>
  <match src="): ) [40833,40834]" dest="): ) [43252,43253]"/>
  <match src="[: [ [46249,46250]" dest="[: [ [48590,48591]"/>
  <match src="identifier: abi [34136,34139]" dest="identifier: abi [34136,34139]"/>
  <match src="=: = [38529,38530]" dest="=: = [41340,41341]"/>
  <match src="(: ( [9349,9350]" dest="(: ( [9349,9350]"/>
  <match src="primitive_type [8620,8625]" dest="primitive_type [8620,8625]"/>
  <match src="identifier: role [31713,31717]" dest="identifier: role [31713,31717]"/>
  <match src="identifier: result [39118,39124]" dest="identifier: result [41762,41768]"/>
  <match src="}: } [24662,24663]" dest="}: } [24662,24663]"/>
  <match src="memory: memory [47212,47218]" dest="memory: memory [49553,49559]"/>
  <match src="comment: // Storage of set values [12234,12258]" dest="comment: // Storage of set values [12234,12258]"/>
  <match src="call_argument [33384,33388]" dest="call_argument [33384,33388]"/>
  <match src="{: { [40967,40968]" dest="{: { [43409,43410]"/>
  <match src="type_cast_expression [21455,21468]" dest="type_cast_expression [21455,21468]"/>
  <match src="): ) [36826,36827]" dest="): ) [39547,39548]"/>
  <match src="type_name [38998,39003]" dest="type_name [41645,41650]"/>
  <match src="call_argument [31164,31213]" dest="call_argument [31164,31213]"/>
  <match src="): ) [45739,45740]" dest="): ) [48080,48081]"/>
  <match src="primitive_type [36374,36381]" dest="primitive_type [38234,38238]"/>
  <match src="visibility [28044,28050]" dest="visibility [28044,28050]"/>
  <match src="]: ] [14687,14688]" dest="]: ] [14687,14688]"/>
  <match src="==: == [49691,49693]" dest="==: == [52044,52046]"/>
  <match src="primitive_type [16384,16388]" dest="primitive_type [16384,16388]"/>
  <match src="for_statement [49029,49110]" dest="for_statement [51370,51451]"/>
  <match src="state_mutability [42208,42212]" dest="state_mutability [44585,44589]"/>
  <match src="identifier: STRING_SHORT_START [41573,41591]" dest="identifier: STRING_SHORT_START [44006,44024]"/>
  <match src="identifier: LockedBatchMintableERC1155 [47309,47335]" dest="identifier: LockedBatchMintableERC1155 [49650,49676]"/>
  <match src="function_body [38731,39220]" dest="function_body [41542,41850]"/>
  <match src="{: { [50194,50195]" dest="{: { [52607,52608]"/>
  <match src="(: ( [47952,47953]" dest="(: ( [50293,50294]"/>
  <match src="primitive_type [8551,8558]" dest="primitive_type [8551,8558]"/>
  <match src="}: } [8692,8693]" dest="}: } [8692,8693]"/>
  <match src="identifier: token [51792,51797]" dest="identifier: token [54310,54315]"/>
  <match src="identifier: set [12952,12955]" dest="identifier: set [12952,12955]"/>
  <match src="identifier: data [22574,22578]" dest="identifier: data [22574,22578]"/>
  <match src="identifier: i [35965,35966]" dest="identifier: i [37780,37781]"/>
  <match src="parameter [12677,12690]" dest="parameter [12677,12690]"/>
  <match src="visibility [36312,36320]" dest="visibility [38128,38136]"/>
  <match src="=: = [38899,38900]" dest="=: = [37016,37017]"/>
  <match src="memory: memory [23035,23041]" dest="memory: memory [23035,23041]"/>
  <match src="=: = [48180,48181]" dest="=: = [50521,50522]"/>
  <match src="parameter [3290,3306]" dest="parameter [3290,3306]"/>
  <match src="identifier: dataLen [40687,40694]" dest="identifier: dataLen [43106,43113]"/>
  <match src="binary_expression [38806,38828]" dest="binary_expression [39926,39939]"/>
  <match src="identifier: add [16001,16004]" dest="identifier: add [16001,16004]"/>
  <match src="identifier: _roles [31125,31131]" dest="identifier: _roles [31125,31131]"/>
  <match src="type_name [6111,6118]" dest="type_name [6111,6118]"/>
  <match src="comment: // The easiest way to bubble the revert reason is using memory via assembly [24871,24946]" dest="comment: // The easiest way to bubble the revert reason is using memory via assembly [24871,24946]"/>
  <match src="): ) [41163,41164]" dest="): ) [43605,43606]"/>
  <match src="type_name [15796,15799]" dest="type_name [15796,15799]"/>
  <match src="visibility [24088,24096]" dest="visibility [24088,24096]"/>
  <match src="=: = [51529,51530]" dest="=: = [54116,54117]"/>
  <match src="): ) [52411,52412]" dest="): ) [54580,54581]"/>
  <match src="block_statement [24743,25275]" dest="block_statement [24743,25275]"/>
  <match src="solidity_version: 0.6.0 [6323,6328]" dest="solidity_version: 0.6.0 [6323,6328]"/>
  <match src="memory: memory [35667,35673]" dest="memory: memory [37632,37638]"/>
  <match src="]: ] [47270,47271]" dest="]: ] [49611,49612]"/>
  <match src="internal: internal [38694,38702]" dest="internal: internal [41505,41513]"/>
  <match src="yul_evm_builtin [41233,41236]" dest="yul_evm_builtin [43675,43678]"/>
  <match src="bytes32: bytes32 [27992,27999]" dest="bytes32: bytes32 [27992,27999]"/>
  <match src="identifier: length [50181,50187]" dest="identifier: length [52594,52600]"/>
  <match src="uint256: uint256 [52680,52687]" dest="uint256: uint256 [54833,54840]"/>
  <match src="user_defined_type [17263,17273]" dest="user_defined_type [17263,17273]"/>
  <match src="identifier: result [36903,36909]" dest="identifier: result [39677,39683]"/>
  <match src="and: and [42762,42765]" dest="and: and [45182,45185]"/>
  <match src="(: ( [27991,27992]" dest="(: ( [27991,27992]"/>
  <match src="identifier: index [15650,15655]" dest="identifier: index [15650,15655]"/>
  <match src="yul_function_call [40698,40744]" dest="yul_function_call [43117,43163]"/>
  <match src="user_defined_type [27907,27931]" dest="user_defined_type [27907,27931]"/>
  <match src="string [21662,21664]" dest="string [21662,21664]"/>
  <match src="{: { [47971,47972]" dest="{: { [50312,50313]"/>
  <match src="parameter [18472,18479]" dest="parameter [18472,18479]"/>
  <match src="parameter [32278,32293]" dest="parameter [32278,32293]"/>
  <match src="type_name [52680,52689]" dest="type_name [54833,54842]"/>
  <match src="type_name [1703,1712]" dest="type_name [1703,1712]"/>
  <match src="type_name [27950,27957]" dest="type_name [27950,27957]"/>
  <match src="yul_evm_builtin [42833,42835]" dest="yul_evm_builtin [45257,45259]"/>
  <match src="}: } [42872,42873]" dest="}: } [45311,45312]"/>
  <match src="identifier: i [49089,49090]" dest="identifier: i [51430,51431]"/>
  <match src="type_name [47206,47211]" dest="type_name [49547,49552]"/>
  <match src="private: private [42200,42207]" dest="private: private [44577,44584]"/>
  <match src="): ) [41446,41447]" dest="): ) [43882,43883]"/>
  <match src="variable_declaration_statement [47117,47292]" dest="variable_declaration_statement [49458,49633]"/>
  <match src="identifier: AccessControlMixin [44823,44841]" dest="identifier: AccessControlMixin [47164,47182]"/>
  <match src="user_defined_type [13253,13256]" dest="user_defined_type [13253,13256]"/>
  <match src="binary_expression [10348,10373]" dest="binary_expression [10348,10373]"/>
  <match src="identifier: success [21617,21624]" dest="identifier: success [21617,21624]"/>
  <match src="mapping: mapping [9276,9283]" dest="mapping: mapping [9276,9283]"/>
  <match src="binary_expression [14963,14987]" dest="binary_expression [14963,14987]"/>
  <match src="): ) [23576,23577]" dest="): ) [23576,23577]"/>
  <match src="yul_assignment [40570,40594]" dest="yul_assignment [42973,42997]"/>
  <match src="yul_path [40810,40817]" dest="yul_path [43229,43236]"/>
  <match src="}: } [29730,29731]" dest="}: } [29730,29731]"/>
  <match src="}: } [50361,50362]" dest="}: } [52912,52913]"/>
  <match src="primitive_type [4200,4207]" dest="primitive_type [4200,4207]"/>
  <match src="string [45307,45367]" dest="string [47648,47708]"/>
  <match src="block_statement [53498,53581]" dest="block_statement [55795,55878]"/>
  <match src="yul_identifier [40734,40741]" dest="yul_identifier [43153,43160]"/>
  <match src="primitive_type [13302,13306]" dest="primitive_type [13302,13306]"/>
  <match src="type_name [1635,1642]" dest="type_name [1635,1642]"/>
  <match src="{: { [38225,38226]" dest="{: { [41231,41232]"/>
  <match src="call_argument [34136,34194]" dest="call_argument [34136,34194]"/>
  <match src="function_definition [30330,30468]" dest="function_definition [30330,30468]"/>
  <match src="identifier: this [51816,51820]" dest="identifier: this [54334,54338]"/>
  <match src="if_statement [33752,33866]" dest="if_statement [33752,33866]"/>
  <match src="(: ( [33625,33626]" dest="(: ( [33625,33626]"/>
  <match src="uint256: uint256 [38941,38948]" dest="uint256: uint256 [38728,38735]"/>
  <match src="): ) [12713,12714]" dest="): ) [12713,12714]"/>
  <match src="}: } [25284,25285]" dest="}: } [25284,25285]"/>
  <match src="identifier: account [5449,5456]" dest="identifier: account [5449,5456]"/>
  <match src="else: else [25204,25208]" dest="else: else [25204,25208]"/>
  <match src="identifier: byteLen [41250,41257]" dest="identifier: byteLen [43692,43699]"/>
  <match src="return_type_definition [7440,7455]" dest="return_type_definition [7440,7455]"/>
  <match src="variable_declaration [13892,13909]" dest="variable_declaration [13892,13909]"/>
  <match src="state_mutability [29653,29657]" dest="state_mutability [29653,29657]"/>
  <match src="(: ( [33783,33784]" dest="(: ( [33783,33784]"/>
  <match src="): ) [40230,40231]" dest="): ) [42608,42609]"/>
  <match src="member_expression [29694,29721]" dest="member_expression [29694,29721]"/>
  <match src="type_name [49554,49563]" dest="type_name [51895,51904]"/>
  <match src="function_definition [36275,36563]" dest="function_definition [38091,38433]"/>
  <match src="call_argument [48027,48085]" dest="call_argument [50368,50426]"/>
  <match src="variable_declaration_statement [50148,50162]" dest="variable_declaration_statement [52561,52575]"/>
  <match src="parameter [13253,13268]" dest="parameter [13253,13268]"/>
  <match src="returns: returns [38708,38715]" dest="returns: returns [41519,41526]"/>
  <match src="type_name [46861,46868]" dest="type_name [49202,49209]"/>
  <match src="type_name [35120,35127]" dest="type_name [36079,36086]"/>
  <match src="binary_expression [37819,37839]" dest="binary_expression [37070,37090]"/>
  <match src=".: . [16891,16892]" dest=".: . [16891,16892]"/>
  <match src="yul_identifier [42410,42413]" dest="yul_identifier [44787,44790]"/>
  <match src="expression_statement [47982,48097]" dest="expression_statement [50323,50438]"/>
  <match src="bytes32: bytes32 [12268,12275]" dest="bytes32: bytes32 [12268,12275]"/>
  <match src="]: ] [52783,52784]" dest="]: ] [54936,54937]"/>
  <match src="yul_function_call [41025,41041]" dest="yul_function_call [43467,43483]"/>
  <match src="struct_member [27950,27968]" dest="struct_member [27950,27968]"/>
  <match src="pragma: pragma [25376,25382]" dest="pragma: pragma [25376,25382]"/>
  <match src="(: ( [29631,29632]" dest="(: ( [29631,29632]"/>
  <match src="call_expression [38798,38873]" dest="call_expression [39918,39940]"/>
  <match src="return: return [41300,41306]" dest="return: return [43742,43748]"/>
  <match src="(: ( [40257,40258]" dest="(: ( [42635,42636]"/>
  <match src="mload: mload [40217,40222]" dest="mload: mload [42595,42600]"/>
  <match src="parameter [13270,13283]" dest="parameter [13270,13283]"/>
  <match src="function_definition [791,867]" dest="function_definition [791,867]"/>
  <match src="primitive_type [22983,22989]" dest="primitive_type [22983,22989]"/>
  <match src="public: public [50835,50841]" dest="public: public [53420,53426]"/>
  <match src="returns: returns [16844,16851]" dest="returns: returns [16844,16851]"/>
  <match src="yul_path [40200,40205]" dest="yul_path [42578,42583]"/>
  <match src="event_paramater [2360,2372]" dest="event_paramater [2360,2372]"/>
  <match src="variable_declaration_tuple [24591,24630]" dest="variable_declaration_tuple [24591,24630]"/>
  <match src="call_argument [38916,38927]" dest="call_argument [37033,37044]"/>
  <match src="contract: contract [9000,9008]" dest="contract: contract [9000,9008]"/>
  <match src="(: ( [49618,49619]" dest="(: ( [51959,51960]"/>
  <match src="identifier: size [48189,48193]" dest="identifier: size [50530,50534]"/>
  <match src=".: . [33402,33403]" dest=".: . [33402,33403]"/>
  <match src="type_name [1683,1690]" dest="type_name [1683,1690]"/>
  <match src="member_expression [12769,12780]" dest="member_expression [12769,12780]"/>
  <match src="=: = [28079,28080]" dest="=: = [28079,28080]"/>
  <match src=".: . [14585,14586]" dest=".: . [14585,14586]"/>
  <match src="primitive_type [53347,53354]" dest="primitive_type [55608,55615]"/>
  <match src=",: , [21691,21692]" dest=",: , [21691,21692]"/>
  <match src="returns: returns [16375,16382]" dest="returns: returns [16375,16382]"/>
  <match src="identifier: members [29707,29714]" dest="identifier: members [29707,29714]"/>
  <match src="yul_if_statement [37972,38066]" dest="yul_if_statement [40981,41075]"/>
  <match src="identifier: rootToken [44320,44329]" dest="identifier: rootToken [46759,46768]"/>
  <match src="uint256: uint256 [45540,45547]" dest="uint256: uint256 [47881,47888]"/>
  <match src="returns: returns [29658,29665]" dest="returns: returns [29658,29665]"/>
  <match src="(: ( [46063,46064]" dest="(: ( [48404,48405]"/>
  <match src="||: || [41661,41663]" dest="||: || [44094,44096]"/>
  <match src="parameter [6111,6133]" dest="parameter [6111,6133]"/>
  <match src="type_name [16806,16816]" dest="type_name [16806,16816]"/>
  <match src=".: . [16663,16664]" dest=".: . [16663,16664]"/>
  <match src="visibility [9127,9134]" dest="visibility [9127,9134]"/>
  <match src=",: , [53219,53220]" dest=",: , [55435,55436]"/>
  <match src="if: if [40254,40256]" dest="if: if [42632,42634]"/>
  <match src="yul_evm_builtin [36454,36459]" dest="yul_evm_builtin [38311,38316]"/>
  <match src="identifier: _roles [33756,33762]" dest="identifier: _roles [33756,33762]"/>
  <match src="type_name [39619,39626]" dest="type_name [37681,37685]"/>
  <match src=",: , [4763,4764]" dest=",: , [4763,4764]"/>
  <match src="return_type_definition [16844,16861]" dest="return_type_definition [16844,16861]"/>
  <match src="member_expression [10785,10896]" dest="member_expression [10785,10896]"/>
  <match src="(: ( [17716,17717]" dest="(: ( [17716,17717]"/>
  <match src="identifier: set [13912,13915]" dest="identifier: set [13912,13915]"/>
  <match src="yul_decimal_number: 32 [38041,38043]" dest="yul_decimal_number: 32 [41050,41052]"/>
  <match src="parameter [35520,35536]" dest="parameter [37521,37537]"/>
  <match src="}: } [35361,35362]" dest="}: } [36242,36243]"/>
  <match src="type_name [46923,46928]" dest="type_name [49264,49269]"/>
  <match src="): ) [18085,18086]" dest="): ) [18085,18086]"/>
  <match src="type_name [47953,47960]" dest="type_name [50294,50301]"/>
  <match src="type_cast_expression [16103,16126]" dest="type_cast_expression [16103,16126]"/>
  <match src="call_expression [48841,48955]" dest="call_expression [51182,51296]"/>
  <match src="+: + [40946,40947]" dest="+: + [43376,43377]"/>
  <match src="(: ( [13252,13253]" dest="(: ( [13252,13253]"/>
  <match src="): ) [48954,48955]" dest="): ) [51295,51296]"/>
  <match src="returns: returns [15128,15135]" dest="returns: returns [15128,15135]"/>
  <match src="call_expression [18499,18518]" dest="call_expression [18499,18518]"/>
  <match src="bytes: bytes [38998,39003]" dest="bytes: bytes [41645,41650]"/>
  <match src="block_statement [13494,14728]" dest="block_statement [13494,14728]"/>
  <match src="identifier: length [18421,18427]" dest="identifier: length [18421,18427]"/>
  <match src="yul_path [38045,38048]" dest="yul_path [41054,41057]"/>
  <match src="calldata: calldata [43759,43767]" dest="calldata: calldata [46198,46206]"/>
  <match src="type_name [1946,1953]" dest="type_name [1946,1953]"/>
  <match src="if: if [40867,40869]" dest="if: if [43297,43299]"/>
  <match src="yul_decimal_number: 256 [41141,41144]" dest="yul_decimal_number: 256 [43583,43586]"/>
  <match src="add: add [36893,36896]" dest="add: add [39667,39670]"/>
  <match src="identifier: sendValue [21374,21383]" dest="identifier: sendValue [21374,21383]"/>
  <match src="private: private [15115,15122]" dest="private: private [15115,15122]"/>
  <match src=",: , [43714,43715]" dest=",: , [46153,46154]"/>
  <match src="(: ( [18290,18291]" dest="(: ( [18290,18291]"/>
  <match src="indexed: indexed [45434,45441]" dest="indexed: indexed [47775,47782]"/>
  <match src="solidity_version: 0.6.0 [26413,26418]" dest="solidity_version: 0.6.0 [26413,26418]"/>
  <match src="parameter [45961,45968]" dest="parameter [48302,48309]"/>
  <match src="return_statement [41593,41602]" dest="return_statement [44040,44049]"/>
  <match src="identifier: _supportedInterfaces [9816,9836]" dest="identifier: _supportedInterfaces [9816,9836]"/>
  <match src="user_defined_type [39353,39360]" dest="user_defined_type [41981,41988]"/>
  <match src="number_literal: 0xffffffff [10363,10373]" dest="number_literal: 0xffffffff [10363,10373]"/>
  <match src="(: ( [35050,35051]" dest="(: ( [36036,36037]"/>
  <match src="yul_assignment [38581,38604]" dest="yul_assignment [41392,41415]"/>
  <match src="type_name [17287,17294]" dest="type_name [17287,17294]"/>
  <match src="yul_identifier [36903,36909]" dest="yul_identifier [39677,39683]"/>
  <match src="update_expression [35983,35986]" dest="update_expression [37798,37801]"/>
  <match src="(: ( [16852,16853]" dest="(: ( [16852,16853]"/>
  <match src="event_paramater [45504,45529]" dest="event_paramater [47845,47870]"/>
  <match src="assembly_statement [35247,35307]" dest="assembly_statement [36128,36188]"/>
  <match src="binary_expression [13477,13492]" dest="binary_expression [13477,13492]"/>
  <match src="primitive_type [52680,52687]" dest="primitive_type [54833,54840]"/>
  <match src=",: , [6161,6162]" dest=",: , [6161,6162]"/>
  <match src="indexed: indexed [28487,28494]" dest="indexed: indexed [28487,28494]"/>
  <match src="identifier: errorMessage [22997,23009]" dest="identifier: errorMessage [22997,23009]"/>
  <match src="primitive_type [51221,51228]" dest="primitive_type [53806,53813]"/>
  <match src="}: } [36478,36479]" dest="}: } [38335,38336]"/>
  <match src="parameter [16806,16828]" dest="parameter [16806,16828]"/>
  <match src="parameter [46923,46949]" dest="parameter [49264,49290]"/>
  <match src="variable_declaration [47206,47223]" dest="variable_declaration [49547,49564]"/>
  <match src="block_statement [25209,25264]" dest="block_statement [25209,25264]"/>
  <match src="for: for [35952,35955]" dest="for: for [37770,37773]"/>
  <match src="=: = [14343,14344]" dest="=: = [14343,14344]"/>
  <match src="parameter [2928,2950]" dest="parameter [2928,2950]"/>
  <match src="{: { [46072,46073]" dest="{: { [48413,48414]"/>
  <match src="function: function [6080,6088]" dest="function: function [6080,6088]"/>
  <match src="uint256: uint256 [52764,52771]" dest="uint256: uint256 [54917,54924]"/>
  <match src="parameter [31052,31064]" dest="parameter [31052,31064]"/>
  <match src="view: view [17311,17315]" dest="view: view [17311,17315]"/>
  <match src=",: , [33128,33129]" dest=",: , [33128,33129]"/>
  <match src="function_body [33102,33146]" dest="function_body [33102,33146]"/>
  <match src="member_expression [16091,16101]" dest="member_expression [16091,16101]"/>
  <match src="!: ! [44562,44563]" dest="!: ! [47001,47002]"/>
  <match src="return_type_definition [17708,17722]" dest="return_type_definition [17708,17722]"/>
  <match src="identifier: Set [15796,15799]" dest="identifier: Set [15796,15799]"/>
  <match src="block_statement [51449,52542]" dest="block_statement [54072,54747]"/>
  <match src="boolean_literal [14712,14716]" dest="boolean_literal [14712,14716]"/>
  <match src="++: ++ [35984,35986]" dest="++: ++ [37799,37801]"/>
  <match src="assembly_statement [36413,36479]" dest="assembly_statement [38270,38336]"/>
  <match src="call_expression [52886,53262]" dest="call_expression [55328,55486]"/>
  <match src="block_statement [50254,50351]" dest="block_statement [52667,52802]"/>
  <match src="delete: delete [14662,14668]" dest="delete: delete [14662,14668]"/>
  <match src="expression_statement [24458,24519]" dest="expression_statement [24458,24519]"/>
  <match src="identifier: length [24840,24846]" dest="identifier: length [24840,24846]"/>
  <match src="variable_declaration_statement [35222,35237]" dest="variable_declaration_statement [36106,36118]"/>
  <match src="]: ] [8592,8593]" dest="]: ] [8592,8593]"/>
  <match src="}: } [16906,16907]" dest="}: } [16906,16907]"/>
  <match src="yul_function_call [38591,38604]" dest="yul_function_call [41402,41415]"/>
  <match src="return_statement [48252,48264]" dest="return_statement [50593,50605]"/>
  <match src="primitive_type [23544,23549]" dest="primitive_type [23544,23549]"/>
  <match src="): ) [16388,16389]" dest="): ) [16388,16389]"/>
  <match src="yul_function_call [38028,38050]" dest="yul_function_call [41037,41059]"/>
  <match src="uint8: uint8 [34817,34822]" dest="uint8: uint8 [34820,34825]"/>
  <match src="number_literal: 0 [48182,48183]" dest="number_literal: 0 [50523,50524]"/>
  <match src="address: address [32278,32285]" dest="address: address [32278,32285]"/>
  <match src="member_expression [52358,52380]" dest="member_expression [54523,54545]"/>
  <match src="call_argument [33414,33423]" dest="call_argument [33414,33423]"/>
  <match src="identifier: amount [21480,21486]" dest="identifier: amount [21480,21486]"/>
  <match src="member_expression [30430,30453]" dest="member_expression [30430,30453]"/>
  <match src="): ) [2392,2393]" dest="): ) [2392,2393]"/>
  <match src="member_expression [35792,35800]" dest="member_expression [40733,40741]"/>
  <match src="user_defined_type [44922,44939]" dest="user_defined_type [47263,47280]"/>
  <match src="solidity_version: 0.6.2 [989,994]" dest="solidity_version: 0.6.2 [989,994]"/>
  <match src="): ) [42236,42237]" dest="): ) [44613,44614]"/>
  <match src="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [18334,18406]" dest="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [18334,18406]"/>
  <match src="identifier: _revertMsg [34027,34037]" dest="identifier: _revertMsg [34027,34037]"/>
  <match src="primitive_type [46861,46868]" dest="primitive_type [49202,49209]"/>
  <match src=",: , [8609,8610]" dest=",: , [8609,8610]"/>
  <match src="event_paramater [1972,1985]" dest="event_paramater [1972,1985]"/>
  <match src="comment: /*      * Private Helpers      */ [39228,39263]" dest="comment: /*     * @param item RLP encoded bytes     */ [35965,36012]"/>
  <match src="type_name [2975,2984]" dest="type_name [2975,2984]"/>
  <match src="identifier: role [34280,34284]" dest="identifier: role [34280,34284]"/>
  <match src="==: == [38817,38819]" dest="==: == [39935,39937]"/>
  <match src="uint256: uint256 [18968,18975]" dest="uint256: uint256 [18968,18975]"/>
  <match src="return_statement [20371,20423]" dest="return_statement [20371,20423]"/>
  <match src=",: , [41522,41523]" dest=",: , [43955,43956]"/>
  <match src="return_type_definition [15128,15145]" dest="return_type_definition [15128,15145]"/>
  <match src="primitive_type [16680,16687]" dest="primitive_type [16680,16687]"/>
  <match src="(: ( [50934,50935]" dest="(: ( [53519,53520]"/>
  <match src="=: = [34127,34128]" dest="=: = [34127,34128]"/>
  <match src="event_paramater [28744,28764]" dest="event_paramater [28744,28764]"/>
  <match src="call_expression [15621,15694]" dest="call_expression [15621,15694]"/>
  <match src="): ) [49015,49016]" dest="): ) [51356,51357]"/>
  <match src="binary_expression [14448,14465]" dest="binary_expression [14448,14465]"/>
  <match src="call_expression [52708,52800]" dest="call_expression [54861,54953]"/>
  <match src="==: == [37218,37220]" dest="==: == [40585,40587]"/>
  <match src=":=: := [36890,36892]" dest=":=: := [39664,39666]"/>
  <match src="=: = [50294,50295]" dest="=: = [52707,52708]"/>
  <match src="string [45165,45222]" dest="string [47506,47563]"/>
  <match src="bool: bool [44492,44496]" dest="bool: bool [46931,46935]"/>
  <match src="primitive_type [22561,22566]" dest="primitive_type [22561,22566]"/>
  <match src="type_cast_expression [48751,48761]" dest="type_cast_expression [51092,51102]"/>
  <match src="identifier: amounts [4784,4791]" dest="identifier: amounts [4784,4791]"/>
  <match src="yul_evm_builtin [41146,41149]" dest="yul_evm_builtin [43588,43591]"/>
  <match src="call_expression [36059,36083]" dest="call_expression [37874,37898]"/>
  <match src="call_argument [24253,24259]" dest="call_argument [24253,24259]"/>
  <match src="pragma_directive [33932,33954]" dest="pragma_directive [33932,33954]"/>
  <match src="yul_path [40734,40741]" dest="yul_path [43153,43160]"/>
  <match src="[: [ [15723,15724]" dest="[: [ [15723,15724]"/>
  <match src="): ) [38049,38050]" dest="): ) [41058,41059]"/>
  <match src="user_defined_type [10696,10712]" dest="user_defined_type [10696,10712]"/>
  <match src="call_argument [52316,52325]" dest="call_argument [54445,54454]"/>
  <match src=",: , [18901,18902]" dest=",: , [18901,18902]"/>
  <match src="string_literal [45165,45222]" dest="string_literal [47506,47563]"/>
  <match src="(: ( [40316,40317]" dest="(: ( [42717,42718]"/>
  <match src="calldata: calldata [46929,46937]" dest="calldata: calldata [49270,49278]"/>
  <match src="identifier: valueIndex [13428,13438]" dest="identifier: valueIndex [13428,13438]"/>
  <match src="bytes4: bytes4 [46064,46070]" dest="bytes4: bytes4 [48405,48411]"/>
  <match src="assembly_statement [41483,41549]" dest="assembly_statement [43916,43982]"/>
  <match src="yul_assignment [41507,41538]" dest="yul_assignment [43940,43971]"/>
  <match src="address: address [19831,19838]" dest="address: address [19831,19838]"/>
  <match src="{: { [48200,48201]" dest="{: { [50541,50542]"/>
  <match src="identifier: byte0 [41678,41683]" dest="identifier: byte0 [44098,44103]"/>
  <match src="return_type_definition [37059,37076]" dest="return_type_definition [40498,40515]"/>
  <match src="false [14756,14761]" dest="false [14756,14761]"/>
  <match src="identifier: index [30375,30380]" dest="identifier: index [30375,30380]"/>
  <match src="add: add [41233,41236]" dest="add: add [43675,43678]"/>
  <match src="++: ++ [39949,39951]" dest="++: ++ [42339,42341]"/>
  <match src="identifier: toUintStrict [38159,38171]" dest="identifier: toUintStrict [41168,41180]"/>
  <match src="): ) [29722,29723]" dest="): ) [29722,29723]"/>
  <match src="type_name [45462,45469]" dest="type_name [47803,47810]"/>
  <match src=",: , [38043,38044]" dest=",: , [41052,41053]"/>
  <match src="function: function [38150,38158]" dest="function: function [41159,41167]"/>
  <match src="identifier: toBeMintedAmounts [50273,50290]" dest="identifier: toBeMintedAmounts [52686,52703]"/>
  <match src="returns: returns [35111,35118]" dest="returns: returns [36070,36077]"/>
  <match src="visibility [31083,31089]" dest="visibility [31083,31089]"/>
  <match src="): ) [18997,18998]" dest="): ) [18997,18998]"/>
  <match src="parameter [30403,30410]" dest="parameter [30403,30410]"/>
  <match src="identifier: toUint [51151,51157]" dest="identifier: toUint [53736,53742]"/>
  <match src="{: { [40896,40897]" dest="{: { [43326,43327]"/>
  <match src="identifier: toDeleteIndex [14328,14341]" dest="identifier: toDeleteIndex [14328,14341]"/>
  <match src="returns: returns [8674,8681]" dest="returns: returns [8674,8681]"/>
  <match src="member_expression [13912,13930]" dest="member_expression [13912,13930]"/>
  <match src="address: address [1946,1953]" dest="address: address [1946,1953]"/>
  <match src="&quot;: &quot; [45307,45308]" dest="&quot;: &quot; [47648,47649]"/>
  <match src="identifier: ids [45550,45553]" dest="identifier: ids [47891,47894]"/>
  <match src="identifier: RoleAdminChanged [33367,33383]" dest="identifier: RoleAdminChanged [33367,33383]"/>
  <match src="(: ( [49655,49656]" dest="(: ( [52008,52009]"/>
  <match src="returns: returns [18463,18470]" dest="returns: returns [18463,18470]"/>
  <match src="new: new [36808,36811]" dest="new: new [39529,39532]"/>
  <match src="(: ( [34296,34297]" dest="(: ( [34296,34297]"/>
  <match src="type_name [5458,5465]" dest="type_name [5458,5465]"/>
  <match src=",: , [17992,17993]" dest=",: , [17992,17993]"/>
  <match src="returns: returns [17316,17323]" dest="returns: returns [17316,17323]"/>
  <match src="identifier: LIST_SHORT_START [41779,41795]" dest="identifier: LIST_SHORT_START [44202,44218]"/>
  <match src="&quot;: &quot; [49787,49788]" dest="&quot;: &quot; [52140,52141]"/>
  <match src="primitive_type [30353,30360]" dest="primitive_type [30353,30360]"/>
  <match src="binary_expression [24139,24169]" dest="binary_expression [24139,24169]"/>
  <match src="variable_declaration_statement [20133,20150]" dest="variable_declaration_statement [20133,20150]"/>
  <match src="}: } [17471,17472]" dest="}: } [17471,17472]"/>
  <match src="type_name [22948,22955]" dest="type_name [22948,22955]"/>
  <match src="function_definition [35433,36168]" dest="function_definition [37461,37984]"/>
  <match src="returns: returns [17708,17715]" dest="returns: returns [17708,17715]"/>
  <match src="external: external [46037,46045]" dest="external: external [48378,48386]"/>
  <match src="type_name [36812,36817]" dest="type_name [39533,39538]"/>
  <match src="type_name [15601,15608]" dest="type_name [15601,15608]"/>
  <match src="{: { [23610,23611]" dest="{: { [23610,23611]"/>
  <match src="identifier: RLPItem [50891,50898]" dest="identifier: RLPItem [53476,53483]"/>
  <match src="yul_function_call [40501,40517]" dest="yul_function_call [42904,42920]"/>
  <match src="identifier: operator [3298,3306]" dest="identifier: operator [3298,3306]"/>
  <match src="primitive_type [22545,22552]" dest="primitive_type [22545,22552]"/>
  <match src="bool: bool [3569,3573]" dest="bool: bool [3569,3573]"/>
  <match src="return_statement [41899,41940]" dest="return_statement [44323,44364]"/>
  <match src="identifier: value [18311,18316]" dest="identifier: value [18311,18316]"/>
  <match src="yul_identifier [38597,38603]" dest="yul_identifier [41408,41414]"/>
  <match src="): ) [45587,45588]" dest="): ) [47928,47929]"/>
  <match src="type_name [44890,44895]" dest="type_name [47231,47236]"/>
  <match src="yul_hex_number: 0x20 [35291,35295]" dest="yul_hex_number: 0x20 [36172,36176]"/>
  <match src="(: ( [23083,23084]" dest="(: ( [23083,23084]"/>
  <match src="type_name [1718,1725]" dest="type_name [1718,1725]"/>
  <match src="function: function [23979,23987]" dest="function: function [23979,23987]"/>
  <match src="identifier: ids [53144,53147]" dest="identifier: ids [55137,55140]"/>
  <match src="state_variable_declaration [34817,34855]" dest="state_variable_declaration [34820,34861]"/>
  <match src="-: - [38964,38965]" dest="-: - [37121,37122]"/>
  <match src="(: ( [29359,29360]" dest="(: ( [29359,29360]"/>
  <match src="yul_path [40505,40510]" dest="yul_path [42908,42913]"/>
  <match src="view: view [29653,29657]" dest="view: view [29653,29657]"/>
  <match src="type_name [31539,31546]" dest="type_name [31539,31546]"/>
  <match src="yul_evm_builtin [41122,41127]" dest="yul_evm_builtin [43564,43569]"/>
  <match src="{: { [33794,33795]" dest="{: { [33794,33795]"/>
  <match src="return: return [38089,38095]" dest="return: return [41098,41104]"/>
  <match src=",: , [38026,38027]" dest=",: , [41035,41036]"/>
  <match src="call_expression [52358,52530]" dest="call_expression [54523,54720]"/>
  <match src="{: { [14945,14946]" dest="{: { [14945,14946]"/>
  <match src="call_expression [45696,45740]" dest="call_expression [48037,48081]"/>
  <match src="return_type_definition [13293,13307]" dest="return_type_definition [13293,13307]"/>
  <match src="variable_declaration [21612,21624]" dest="variable_declaration [21612,21624]"/>
  <match src="type_name [12268,12277]" dest="type_name [12268,12277]"/>
  <match src="modifier: modifier [34211,34219]" dest="modifier: modifier [34211,34219]"/>
  <match src="type_name [29175,29182]" dest="type_name [29175,29182]"/>
  <match src="identifier: RLPReader [50956,50965]" dest="identifier: RLPReader [53541,53550]"/>
  <match src="comment: /**      * @notice Validates and processes exit while withdraw process      * @dev Validates exit log emitted on sidechain. Reverts if validation fails.      * @dev Processes withdraw based on custom logic. Example: transfer ERC20/ERC721, mint ERC721 if mintable withdraw      * @param sender Address      * @param rootToken Token which gets withdrawn      * @param logRLPList Valid sidechain log for data like amount, token id etc.      */ [43804,44251]" dest="comment: /**      * @notice Validates and processes exit while withdraw process      * @dev Validates exit log emitted on sidechain. Reverts if validation fails.      * @dev Processes withdraw based on custom logic. Example: transfer ERC20/ERC721, mint ERC721 if mintable withdraw      * @param sender Address      * @param rootToken Token which gets withdrawn      * @param logRLPList Valid sidechain log for data like amount, token id etc.      */ [46243,46690]"/>
  <match src="comment: // Used when attempting to exit with single token, single amount/ id is converted into [47666,47752]" dest="comment: // Used when attempting to exit with single token, single amount/ id is converted into [50007,50093]"/>
  <match src="parameter [49513,49543]" dest="parameter [51854,51884]"/>
  <match src="comment: // File: contracts/common/AccessControlMixin.sol [33880,33928]" dest="comment: // File: contracts/common/AccessControlMixin.sol [33880,33928]"/>
  <match src="library_declaration [19201,25285]" dest="library_declaration [19201,25285]"/>
  <match src="user_defined_type [44848,44861]" dest="user_defined_type [47189,47202]"/>
  <match src="parameter [14885,14900]" dest="parameter [14885,14900]"/>
  <match src="member_expression [15629,15647]" dest="member_expression [15629,15647]"/>
  <match src="(: ( [24252,24253]" dest="(: ( [24252,24253]"/>
  <match src="identifier: account [33584,33591]" dest="identifier: account [33584,33591]"/>
  <match src="primitive_type [16626,16630]" dest="primitive_type [16626,16630]"/>
  <match src="identifier: byteLen [41014,41021]" dest="identifier: byteLen [43456,43463]"/>
  <match src="identifier: weiValue [24653,24661]" dest="identifier: weiValue [24653,24661]"/>
  <match src="uint256: uint256 [51513,51520]" dest="uint256: uint256 [54100,54107]"/>
  <match src="yul_evm_builtin [35281,35284]" dest="yul_evm_builtin [36162,36165]"/>
  <match src="user_defined_type [36291,36298]" dest="user_defined_type [38107,38114]"/>
  <match src="identifier: memPtr [36098,36104]" dest="identifier: memPtr [37914,37920]"/>
  <match src="address: address [46895,46902]" dest="address: address [49236,49243]"/>
  <match src="interface_declaration [1173,4826]" dest="interface_declaration [1173,4826]"/>
  <match src="&quot;: &quot; [44997,44998]" dest="&quot;: &quot; [47338,47339]"/>
  <match src="primitive_type [2360,2366]" dest="primitive_type [2360,2366]"/>
  <match src="return_statement [39975,39988]" dest="return_statement [42365,42378]"/>
  <match src="user_defined_type [37024,37031]" dest="user_defined_type [40463,40470]"/>
  <match src="comment: // Delete the slot where the moved value was stored [14509,14560]" dest="comment: // Delete the slot where the moved value was stored [14509,14560]"/>
  <match src="yul_path [38006,38012]" dest="yul_path [41015,41021]"/>
  <match src="): ) [12450,12451]" dest="): ) [12450,12451]"/>
  <match src="type_name [17684,17691]" dest="type_name [17684,17691]"/>
  <match src="&gt;: &gt; [15648,15649]" dest="&gt;: &gt; [15648,15649]"/>
  <match src=",: , [41257,41258]" dest=",: , [43699,43700]"/>
  <match src="type_name [6163,6168]" dest="type_name [6163,6168]"/>
  <match src="[: [ [52782,52783]" dest="[: [ [54935,54936]"/>
  <match src="comment: // To implement this library for multiple types with as little code [11763,11830]" dest="comment: // To implement this library for multiple types with as little code [11763,11830]"/>
  <match src="address: address [7291,7298]" dest="address: address [7291,7298]"/>
  <match src="identifier: value [24267,24272]" dest="identifier: value [24267,24272]"/>
  <match src="): ) [16066,16067]" dest="): ) [16066,16067]"/>
  <match src="(: ( [38805,38806]" dest="(: ( [39925,39926]"/>
  <match src="virtual: virtual [26094,26101]" dest="virtual: virtual [26094,26101]"/>
  <match src="identifier: UintSet [17435,17442]" dest="identifier: UintSet [17435,17442]"/>
  <match src="member_expression [46375,46416]" dest="member_expression [48716,48757]"/>
  <match src="primitive_type [48109,48116]" dest="primitive_type [50450,50457]"/>
  <match src="parenthesized_expression [41856,41879]" dest="parenthesized_expression [44267,44290]"/>
  <match src="string_literal [22655,22687]" dest="string_literal [22655,22687]"/>
  <match src="identifier: result [38096,38102]" dest="identifier: result [41105,41111]"/>
  <match src="type_name [45943,45950]" dest="type_name [48284,48291]"/>
  <match src=",: , [25151,25152]" dest=",: , [25151,25152]"/>
  <match src="identifier: operator [1962,1970]" dest="identifier: operator [1962,1970]"/>
  <match src="yul_identifier [41530,41536]" dest="yul_identifier [43963,43969]"/>
  <match src="): ) [33332,33333]" dest="): ) [33332,33333]"/>
  <match src="assignment_expression [39779,39819]" dest="assignment_expression [42259,42299]"/>
  <match src="function_definition [5427,5516]" dest="function_definition [5427,5516]"/>
  <match src="call_argument [52506,52515]" dest="call_argument [54692,54701]"/>
  <match src="(: ( [36066,36067]" dest="(: ( [37881,37882]"/>
  <match src="yul_evm_builtin [20339,20350]" dest="yul_evm_builtin [20339,20350]"/>
  <match src="calldata: calldata [46306,46314]" dest="calldata: calldata [48647,48655]"/>
  <match src="type_name [46015,46020]" dest="type_name [48356,48361]"/>
  <match src="(: ( [36334,36335]" dest="(: ( [38150,38151]"/>
  <match src="): ) [42703,42704]" dest="): ) [45119,45120]"/>
  <match src="internal: internal [17302,17310]" dest="internal: internal [17302,17310]"/>
  <match src="]: ] [14341,14342]" dest="]: ] [14341,14342]"/>
  <match src="{: { [35988,35989]" dest="{: { [37803,37804]"/>
  <match src="constructor: constructor [9337,9348]" dest="constructor: constructor [9337,9348]"/>
  <match src="comment: /**  * @dev Contract module that allows children to implement role-based access  * control mechanisms.  *  * Roles are referred to by their `bytes32` identifier. These should be exposed  * in the external API and be unique. The best way to achieve this is by  * using `public constant` hash digests:  *  * ```  * bytes32 public constant MY_ROLE = keccak256(&quot;MY_ROLE&quot;);  * ```  *  * Roles can be used to represent a set of permissions. To restrict access to a  * function call, use {hasRole}:  *  * ```  * function foo() public {  *     require(hasRole(MY_ROLE, msg.sender));  *     ...  * }  * ```  *  * Roles can be granted and revoked dynamically via the {grantRole} and  * {revokeRole} functions. Each role has an associated admin role, and only  * accounts that have a role's admin role can call {grantRole} and {revokeRole}.  *  * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means  * that only accounts with this role will be able to grant or revoke other  * roles. More complex role relationships can be created by using  * {_setRoleAdmin}.  *  * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to  * grant and revoke this role. Extra precautions should be taken to secure  * accounts that have been granted it.  */ [26429,27739]" dest="comment: /**  * @dev Contract module that allows children to implement role-based access  * control mechanisms.  *  * Roles are referred to by their `bytes32` identifier. These should be exposed  * in the external API and be unique. The best way to achieve this is by  * using `public constant` hash digests:  *  * ```  * bytes32 public constant MY_ROLE = keccak256(&quot;MY_ROLE&quot;);  * ```  *  * Roles can be used to represent a set of permissions. To restrict access to a  * function call, use {hasRole}:  *  * ```  * function foo() public {  *     require(hasRole(MY_ROLE, msg.sender));  *     ...  * }  * ```  *  * Roles can be granted and revoked dynamically via the {grantRole} and  * {revokeRole} functions. Each role has an associated admin role, and only  * accounts that have a role's admin role can call {grantRole} and {revokeRole}.  *  * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means  * that only accounts with this role will be able to grant or revoke other  * roles. More complex role relationships can be created by using  * {_setRoleAdmin}.  *  * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to  * grant and revoke this role. Extra precautions should be taken to secure  * accounts that have been granted it.  */ [26429,27739]"/>
  <match src="(: ( [51021,51022]" dest="(: ( [53606,53607]"/>
  <match src="yul_evm_builtin [42820,42826]" dest="yul_evm_builtin [45244,45250]"/>
  <match src="primitive_type [45961,45968]" dest="primitive_type [48302,48309]"/>
  <match src="if_statement [24825,25264]" dest="if_statement [24825,25264]"/>
  <match src="}: } [44631,44632]" dest="}: } [47070,47071]"/>
  <match src="): ) [52640,52641]" dest="): ) [54793,54794]"/>
  <match src="array_access [33559,33571]" dest="array_access [33559,33571]"/>
  <match src="state_variable_declaration [45236,45375]" dest="state_variable_declaration [47577,47716]"/>
  <match src="memory: memory [36299,36305]" dest="memory: memory [38115,38121]"/>
  <match src="for: for [44918,44921]" dest="for: for [47259,47262]"/>
  <match src="primitive_type [45648,45655]" dest="primitive_type [47989,47996]"/>
  <match src="type_name [49001,49008]" dest="type_name [51342,51349]"/>
  <match src="type_name [17973,17980]" dest="type_name [17973,17980]"/>
  <match src="public: public [10734,10740]" dest="public: public [10734,10740]"/>
  <match src="(: ( [50943,50944]" dest="(: ( [53528,53529]"/>
  <match src="parameter [4741,4763]" dest="parameter [4741,4763]"/>
  <match src="array_access [50296,50316]" dest="array_access [52709,52729]"/>
  <match src="identifier: item [39706,39710]" dest="identifier: item [42187,42191]"/>
  <match src="identifier: account [31719,31726]" dest="identifier: account [31719,31726]"/>
  <match src="visibility [23578,23586]" dest="visibility [23578,23586]"/>
  <match src="return_type_definition [49610,49636]" dest="return_type_definition [51951,51989]"/>
  <match src="return: return [41743,41749]" dest="return: return [44166,44172]"/>
  <match src="member_expression [39666,39677]" dest="member_expression [37724,37735]"/>
  <match src="yul_path [42779,42783]" dest="yul_path [45199,45203]"/>
  <match src="(: ( [17371,17372]" dest="(: ( [17371,17372]"/>
  <match src="primitive_type [6111,6118]" dest="primitive_type [6111,6118]"/>
  <match src="identifier: previousAdminRole [28460,28477]" dest="identifier: previousAdminRole [28460,28477]"/>
  <match src="function_definition [23979,24295]" dest="function_definition [23979,24295]"/>
  <match src="yul_evm_builtin [41069,41072]" dest="yul_evm_builtin [43511,43514]"/>
  <match src="new: new [39020,39023]" dest="new: new [41667,41670]"/>
  <match src=".: . [53028,53029]" dest=".: . [55072,55073]"/>
  <match src="[: [ [49626,49627]" dest="[: [ [51967,51968]"/>
  <match src="identifier: UintSet [18198,18205]" dest="identifier: UintSet [18198,18205]"/>
  <match src="comment: // Iteratively calculating amounts of token to be minted [49921,49977]" dest="comment: // Iteratively calculating amounts of token to be minted [52334,52390]"/>
  <match src="identifier: codehash [20141,20149]" dest="identifier: codehash [20141,20149]"/>
  <match src="{: { [12223,12224]" dest="{: { [12223,12224]"/>
  <match src="}: } [38065,38066]" dest="}: } [41074,41075]"/>
  <match src="identifier: offset [38892,38898]" dest="identifier: offset [37009,37015]"/>
  <match src="): ) [41261,41262]" dest="): ) [43703,43704]"/>
  <match src="parameter [18903,18916]" dest="parameter [18903,18916]"/>
  <match src="private: private [9127,9134]" dest="private: private [9127,9134]"/>
  <match src="member_expression [52146,52161]" dest="member_expression [54400,54410]"/>
  <match src="): ) [17721,17722]" dest="): ) [17721,17722]"/>
  <match src="return: return [14705,14711]" dest="return: return [14705,14711]"/>
  <match src=",: , [22559,22560]" dest=",: , [22559,22560]"/>
  <match src="comment: // File: contracts/common/Initializable.sol [44389,44432]" dest="comment: // File: contracts/common/Initializable.sol [46828,46871]"/>
  <match src="true [10453,10457]" dest="true [10453,10457]"/>
  <match src="identifier: isApprovedForAll [3494,3510]" dest="identifier: isApprovedForAll [3494,3510]"/>
  <match src="expression_statement [38412,38477]" dest="expression_statement [41270,41294]"/>
  <match src="yul_function_call [41146,41162]" dest="yul_function_call [43588,43604]"/>
  <match src="internal: internal [49596,49604]" dest="internal: internal [51937,51945]"/>
  <match src="=: = [14197,14198]" dest="=: = [14197,14198]"/>
  <match src="pure: pure [47940,47944]" dest="pure: pure [50281,50285]"/>
  <match src="parameter [14939,14943]" dest="parameter [14939,14943]"/>
  <match src="identifier: _owner [45782,45788]" dest="identifier: _owner [48123,48129]"/>
  <match src="type_name [37802,37809]" dest="type_name [37056,37060]"/>
  <match src="block_statement [24852,25203]" dest="block_statement [24852,25203]"/>
  <match src="parameter [35051,35068]" dest="parameter [36037,36054]"/>
  <match src="identifier: memPtr [39642,39648]" dest="identifier: memPtr [37700,37706]"/>
  <match src="if_statement [41617,41940]" dest="if_statement [44064,44364]"/>
  <match src="primitive_type [16436,16443]" dest="primitive_type [16436,16443]"/>
  <match src="function_definition [21365,21762]" dest="function_definition [21365,21762]"/>
  <match src="}: } [40241,40242]" dest="}: } [42619,42620]"/>
  <match src="]: ] [45548,45549]" dest="]: ] [47889,47890]"/>
  <match src="{: { [52642,52643]" dest="{: { [54795,54796]"/>
  <match src="return: return [22621,22627]" dest="return: return [22621,22627]"/>
  <match src="parameter [4212,4222]" dest="parameter [4212,4222]"/>
  <match src="modifier_definition [34211,34355]" dest="modifier_definition [34211,34355]"/>
  <match src="identifier: item [38420,38424]" dest="identifier: item [41278,41282]"/>
  <match src="return_statement [36147,36161]" dest="return_statement [37963,37977]"/>
  <match src="identifier: Initializable [44848,44861]" dest="identifier: Initializable [47189,47202]"/>
  <match src="): ) [37418,37419]" dest="): ) [37351,37352]"/>
  <match src="string_literal [32354,32403]" dest="string_literal [32354,32403]"/>
  <match src=".: . [18510,18511]" dest=".: . [18510,18511]"/>
  <match src="identifier: byte0 [41707,41712]" dest="identifier: byte0 [44127,44132]"/>
  <match src="identifier: memPtr [36025,36031]" dest="identifier: memPtr [37840,37846]"/>
  <match src="expression_statement [40357,40398]" dest="expression_statement [42758,42799]"/>
  <match src="type_cast_expression [18071,18085]" dest="type_cast_expression [18071,18085]"/>
  <match src="binary_expression [35778,35800]" dest="binary_expression [40733,40745]"/>
  <match src="uint256: uint256 [47167,47174]" dest="uint256: uint256 [49508,49515]"/>
  <match src="): ) [52784,52785]" dest="): ) [54937,54938]"/>
  <match src="type_name [17325,17332]" dest="type_name [17325,17332]"/>
  <match src="identifier: adminRole [30754,30763]" dest="identifier: adminRole [30754,30763]"/>
  <match src="bytes32: bytes32 [29308,29315]" dest="bytes32: bytes32 [29308,29315]"/>
  <match src="contract: contract [25922,25930]" dest="contract: contract [25922,25930]"/>
  <match src="visibility [17699,17707]" dest="visibility [17699,17707]"/>
  <match src="call_argument [44571,44587]" dest="call_argument [47010,47026]"/>
  <match src="expression_statement [36098,36124]" dest="expression_statement [37914,37940]"/>
  <match src="parameter [9792,9796]" dest="parameter [9792,9796]"/>
  <match src="identifier: account [32329,32336]" dest="identifier: account [32329,32336]"/>
  <match src=",: , [48621,48622]" dest=",: , [50962,50963]"/>
  <match src="function: function [791,799]" dest="function: function [791,799]"/>
  <match src="type_name [2623,2630]" dest="type_name [2623,2630]"/>
  <match src="string [21488,21519]" dest="string [21488,21519]"/>
  <match src="primitive_type [18968,18975]" dest="primitive_type [18968,18975]"/>
  <match src="identifier: adminRole [31138,31147]" dest="identifier: adminRole [31138,31147]"/>
  <match src="parameter [9742,9760]" dest="parameter [9742,9760]"/>
  <match src="else: else [13009,13013]" dest="else: else [13009,13013]"/>
  <match src="(: ( [30402,30403]" dest="(: ( [30402,30403]"/>
  <match src="identifier: TransferSingle [1344,1358]" dest="identifier: TransferSingle [1344,1358]"/>
  <match src="bytes: bytes [6163,6168]" dest="bytes: bytes [6163,6168]"/>
  <match src="(: ( [36459,36460]" dest="(: ( [38316,38317]"/>
  <match src="string: string [22983,22989]" dest="string: string [22983,22989]"/>
  <match src="function_definition [4160,4270]" dest="function_definition [4160,4270]"/>
  <match src="identifier: RLPItem [37334,37341]" dest="identifier: RLPItem [40664,40671]"/>
  <match src="variable_declaration [38998,39017]" dest="variable_declaration [41645,41664]"/>
  <match src="state_mutability [49605,49609]" dest="state_mutability [51946,51950]"/>
  <match src="primitive_type [53456,53461]" dest="primitive_type [55734,55739]"/>
  <match src="identifier: _contains [18281,18290]" dest="identifier: _contains [18281,18290]"/>
  <match src="parameter [30353,30365]" dest="parameter [30353,30365]"/>
  <match src="visibility [6184,6192]" dest="visibility [6184,6192]"/>
  <match src="member_expression [15164,15175]" dest="member_expression [15164,15175]"/>
  <match src="identifier: TRANSFER_BATCH_EVENT_SIG [45260,45284]" dest="identifier: TRANSFER_BATCH_EVENT_SIG [47601,47625]"/>
  <match src="string [10375,10405]" dest="string [10375,10405]"/>
  <match src="parenthesized_expression [20378,20422]" dest="parenthesized_expression [20378,20422]"/>
  <match src="identifier: set [16583,16586]" dest="identifier: set [16583,16586]"/>
  <match src="memory: memory [35457,35463]" dest="memory: memory [37485,37491]"/>
  <match src="private: private [12692,12699]" dest="private: private [12692,12699]"/>
  <match src="member_expression [18059,18069]" dest="member_expression [18059,18069]"/>
  <match src="expression_statement [49648,49800]" dest="expression_statement [52001,52153]"/>
  <match src="modifier: modifier [44520,44528]" dest="modifier: modifier [46959,46967]"/>
  <match src="identifier: i [49049,49050]" dest="identifier: i [51390,51391]"/>
  <match src="identifier: set [14574,14577]" dest="identifier: set [14574,14577]"/>
  <match src="type_name [7386,7391]" dest="type_name [7386,7391]"/>
  <match src="expression_statement [53279,53481]" dest="expression_statement [55558,55763]"/>
  <match src="identifier: logRLPList [44355,44365]" dest="identifier: logRLPList [46794,46804]"/>
  <match src="identifier: _values [15168,15175]" dest="identifier: _values [15168,15175]"/>
  <match src="comment: // forcing batch deposit since supporting both single and batch deposit introduces too much complexity [47005,47107]" dest="comment: // forcing batch deposit since supporting both single and batch deposit introduces too much complexity [49346,49448]"/>
  <match src=",: , [47576,47577]" dest=",: , [49917,49918]"/>
  <match src="identifier: UintSet [17973,17980]" dest="identifier: UintSet [17973,17980]"/>
  <match src=",: , [39182,39183]" dest=",: , [41812,41813]"/>
  <match src="expression_statement [33113,33139]" dest="expression_statement [33113,33139]"/>
  <match src="call_argument [51229,51256]" dest="call_argument [53814,53841]"/>
  <match src="comment: /**      * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.      *      * Emits a {TransferSingle} event.      *      * Requirements:      *      * - `to` cannot be the zero address.      * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.      * - `from` must have a balance of tokens of type `id` of at least `amount`.      * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the      * acceptance magic value.      */ [3583,4154]" dest="comment: /**      * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.      *      * Emits a {TransferSingle} event.      *      * Requirements:      *      * - `to` cannot be the zero address.      * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.      * - `from` must have a balance of tokens of type `id` of at least `amount`.      * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the      * acceptance magic value.      */ [3583,4154]"/>
  <match src="]: ] [49009,49010]" dest="]: ] [51350,51351]"/>
  <match src=",: , [23099,23100]" dest=",: , [23099,23100]"/>
  <match src="yul_decimal_number: 256 [40721,40724]" dest="yul_decimal_number: 256 [43140,43143]"/>
  <match src="event_definition [29110,29199]" dest="event_definition [29110,29199]"/>
  <match src="identifier: _grantRole [33494,33504]" dest="identifier: _grantRole [33494,33504]"/>
  <match src="yul_identifier [41154,41161]" dest="yul_identifier [43596,43603]"/>
  <match src="function_definition [15534,15738]" dest="function_definition [15534,15738]"/>
  <match src="): ) [2665,2666]" dest="): ) [2665,2666]"/>
  <match src="identifier: WORD_SIZE [42453,42462]" dest="identifier: WORD_SIZE [44830,44839]"/>
  <match src="variable_declaration_statement [50881,50946]" dest="variable_declaration_statement [53466,53531]"/>
  <match src="for_statement [42305,42506]" dest="for_statement [44682,44883]"/>
  <match src="call_expression [48997,49016]" dest="call_expression [51338,51357]"/>
  <match src="=: = [47235,47236]" dest="=: = [49576,49577]"/>
  <match src="=: = [36806,36807]" dest="=: = [39527,39528]"/>
  <match src="(: ( [6098,6099]" dest="(: ( [6098,6099]"/>
  <match src="identifier: value [12685,12690]" dest="identifier: value [12685,12690]"/>
  <match src="string_literal [21488,21519]" dest="string_literal [21488,21519]"/>
  <match src="primitive_type [24433,24438]" dest="primitive_type [24433,24438]"/>
  <match src="(: ( [36024,36025]" dest="(: ( [37839,37840]"/>
  <match src="binary_expression [41906,41939]" dest="binary_expression [44330,44363]"/>
  <match src="returns: returns [37369,37376]" dest="returns: returns [40699,40706]"/>
  <match src=".: . [14319,14320]" dest=".: . [14319,14320]"/>
  <match src="string [48886,48944]" dest="string [51227,51285]"/>
  <match src="identifier: EnumerableSet [27797,27810]" dest="identifier: EnumerableSet [27797,27810]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [15197,15528]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [15197,15528]"/>
  <match src="function_body [30723,30771]" dest="function_body [30723,30771]"/>
  <match src="{: { [40443,40444]" dest="{: { [42846,42847]"/>
  <match src="): ) [15144,15145]" dest="): ) [15144,15145]"/>
  <match src="(: ( [46822,46823]" dest="(: ( [49163,49164]"/>
  <match src="primitive_type [52775,52782]" dest="primitive_type [54928,54935]"/>
  <match src="call_expression [35683,35703]" dest="call_expression [37648,37668]"/>
  <match src="solidity: solidity [11024,11032]" dest="solidity: solidity [11024,11032]"/>
  <match src="override: override [9774,9782]" dest="override: override [9774,9782]"/>
  <match src="^:  ^ [987,989]" dest="^:  ^ [987,989]"/>
  <match src="): ) [53246,53247]" dest="): ) [55466,55467]"/>
  <match src="yul_path [36886,36889]" dest="yul_path [39660,39663]"/>
  <match src="return_statement [30734,30764]" dest="return_statement [30734,30764]"/>
  <match src="primitive_type [31052,31059]" dest="primitive_type [31052,31059]"/>
  <match src="state_variable_declaration [28036,28086]" dest="state_variable_declaration [28036,28086]"/>
  <match src="true: true [44620,44624]" dest="true: true [47059,47063]"/>
  <match src="call_expression [34286,34298]" dest="call_expression [34286,34298]"/>
  <match src="solidity_pragma_token [19110,19125]" dest="solidity_pragma_token [19110,19125]"/>
  <match src="(: ( [31116,31117]" dest="(: ( [31116,31117]"/>
  <match src="struct_member [17454,17465]" dest="struct_member [17454,17465]"/>
  <match src="sub: sub [40726,40729]" dest="sub: sub [43145,43148]"/>
  <match src="primitive_type [29632,29639]" dest="primitive_type [29632,29639]"/>
  <match src="call_argument [33130,33137]" dest="call_argument [33130,33137]"/>
  <match src="assignment_expression [44611,44624]" dest="assignment_expression [47050,47063]"/>
  <match src="visibility [32295,32301]" dest="visibility [32295,32301]"/>
  <match src="}: } [19006,19007]" dest="}: } [19006,19007]"/>
  <match src="calldata: calldata [2938,2946]" dest="calldata: calldata [2938,2946]"/>
  <match src=",: , [34299,34300]" dest=",: , [34299,34300]"/>
  <match src="return_statement [18274,18319]" dest="return_statement [18274,18319]"/>
  <match src="yul_function_call [38016,38051]" dest="yul_function_call [41025,41060]"/>
  <match src="member_expression [10785,10830]" dest="member_expression [10785,10830]"/>
  <match src="primitive_type [29128,29135]" dest="primitive_type [29128,29135]"/>
  <match src="string_literal [49733,49788]" dest="string_literal [52086,52141]"/>
  <match src="(: ( [41249,41250]" dest="(: ( [43691,43692]"/>
  <match src=",: , [38035,38036]" dest=",: , [41044,41045]"/>
  <match src="identifier: interfaceId [9749,9760]" dest="identifier: interfaceId [9749,9760]"/>
  <match src="{: { [45618,45619]" dest="{: { [47959,47960]"/>
  <match src="primitive_type [20160,20167]" dest="primitive_type [20160,20167]"/>
  <match src="contract: contract [33960,33968]" dest="contract: contract [33960,33968]"/>
  <match src="address: address [51808,51815]" dest="address: address [54326,54333]"/>
  <match src="block_statement [35988,36135]" dest="block_statement [37803,37951]"/>
  <match src="(: ( [47906,47907]" dest="(: ( [50247,50248]"/>
  <match src="binary_expression [20406,20421]" dest="binary_expression [20406,20421]"/>
  <match src="address: address [30403,30410]" dest="address: address [30403,30410]"/>
  <match src="function_body [16068,16135]" dest="function_body [16068,16135]"/>
  <match src="binary_expression [48743,48761]" dest="binary_expression [51084,51102]"/>
  <match src="state_mutability [38202,38206]" dest="state_mutability [41211,41215]"/>
  <match src="return_statement [16643,16697]" dest="return_statement [16643,16697]"/>
  <match src="user_defined_type [18198,18205]" dest="user_defined_type [18198,18205]"/>
  <match src="expression_statement [40911,40950]" dest="expression_statement [43341,43380]"/>
  <match src="event_paramater [28479,28507]" dest="event_paramater [28479,28507]"/>
  <match src="identifier: account [33130,33137]" dest="identifier: account [33130,33137]"/>
  <match src="primitive_type [34772,34777]" dest="primitive_type [34773,34778]"/>
  <match src="identifier: dataLen [40810,40817]" dest="identifier: dataLen [43229,43236]"/>
  <match src="=: = [52706,52707]" dest="=: = [54859,54860]"/>
  <match src="pure: pure [35097,35101]" dest="pure: pure [36065,36069]"/>
  <match src="): ) [16695,16696]" dest="): ) [16695,16696]"/>
  <match src="(: ( [17262,17263]" dest="(: ( [17262,17263]"/>
  <match src="number_literal: 0xf8 [34850,34854]" dest="number_literal: 0xf8 [34856,34860]"/>
  <match src="[: [ [48144,48145]" dest="[: [ [50485,50486]"/>
  <match src="parameter [38172,38191]" dest="parameter [41181,41200]"/>
  <match src="return: return [14749,14755]" dest="return: return [14749,14755]"/>
  <match src="parameter [45997,46004]" dest="parameter [48338,48345]"/>
  <match src="primitive_type [39024,39029]" dest="primitive_type [41671,41676]"/>
  <match src=",: , [4727,4728]" dest=",: , [4727,4728]"/>
  <match src="}: } [42505,42506]" dest="}: } [44882,44883]"/>
  <match src="state_mutability [16612,16616]" dest="state_mutability [16612,16616]"/>
  <match src="string [44997,45011]" dest="string [47338,47352]"/>
  <match src="call_argument [23664,23669]" dest="call_argument [23664,23669]"/>
  <match src="parameter [19871,19875]" dest="parameter [19871,19875]"/>
  <match src="uint256: uint256 [49513,49520]" dest="uint256: uint256 [51854,51861]"/>
  <match src="yul_function_call [40702,40715]" dest="yul_function_call [43121,43134]"/>
  <match src="=: = [39635,39636]" dest="=: = [37693,37694]"/>
  <match src="yul_evm_builtin [40702,40707]" dest="yul_evm_builtin [43121,43126]"/>
  <match src="(: ( [25998,25999]" dest="(: ( [25998,25999]"/>
  <match src=".: . [13923,13924]" dest=".: . [13923,13924]"/>
  <match src="string_literal [48027,48085]" dest="string_literal [50368,50426]"/>
  <match src="address: address [44312,44319]" dest="address: address [46751,46758]"/>
  <match src="type_cast_expression [52399,52412]" dest="type_cast_expression [54568,54581]"/>
  <match src="type_name [16029,16036]" dest="type_name [16029,16036]"/>
  <match src="identifier: adminRole [33323,33332]" dest="identifier: adminRole [33323,33332]"/>
  <match src="function_definition [48579,49146]" dest="function_definition [50920,51487]"/>
  <match src="function_definition [22926,23122]" dest="function_definition [22926,23122]"/>
  <match src="address: address [3511,3518]" dest="address: address [3511,3518]"/>
  <match src="(: ( [35640,35641]" dest="(: ( [37605,37606]"/>
  <match src="call_argument [34272,34299]" dest="call_argument [34272,34299]"/>
  <match src="string_literal [44571,44587]" dest="string_literal [47010,47026]"/>
</matches>
<actions>
  <move-tree tree="comment: /*      * Private Helpers      */ [39228,39263]" parent="contract_body [34672,45315]" at="10"/>
  <move-tree tree="function_definition [35032,35362]" parent="contract_body [34672,45315]" at="10"/>
  <move-tree tree="comment: /*      * @param src Pointer to source      * @param dest Pointer to destination      * @param len Amount of memory to copy from the source      */ [41955,42106]" parent="contract_body [34672,45315]" at="11"/>
  <insert-tree tree="struct_declaration [34905,34969]" parent="contract_body [34672,45315]" at="6"/>
  <insert-tree tree="struct_declaration [34977,35129]" parent="contract_body [34672,45315]" at="7"/>
  <update-node tree="comment: /*      * @param item RLP encoded bytes      */ [34977,35026]" label="/*     * @dev Returns the next element in the iteration. Reverts if it has not next element.     * @param self The iterator.     * @return The next element in the iteration.     */"/>
  <insert-tree tree="function_definition [35327,35610]" parent="contract_body [34672,45315]" at="9"/>
  <update-node tree="comment: /*      * @param item RLP encoded list in bytes      */ [35370,35427]" label="/*     * @dev Returns true if the iteration has more elements.     * @param self The iterator.     * @return true if the iteration has more elements.     */"/>
  <insert-node tree="function_definition [35784,35957]" parent="contract_body [34672,45315]" at="11"/>
  <update-node tree="comment: /*      * Private Helpers      */ [39228,39263]" label="/*     * @param item RLP encoded bytes     */"/>
  <update-node tree="comment: /*      * @param src Pointer to source      * @param dest Pointer to destination      * @param len Amount of memory to copy from the source      */ [41955,42106]" label="/*     * @dev Create an iterator. Reverts if item is not a list.     * @param self The RLP item.     * @return An 'Iterator' over the item.     */"/>
  <insert-tree tree="function_definition [36407,36628]" parent="contract_body [34672,45315]" at="15"/>
  <insert-node tree="comment: /*     * @param the RLP item.     */ [36636,36674]" parent="contract_body [34672,45315]" at="16"/>
  <insert-tree tree="function_definition [36680,36780]" parent="contract_body [34672,45315]" at="17"/>
  <insert-node tree="comment: /*      * @param the RLP item.      * @return (memPtr, len) pair: location of the item's payload in memory.      */ [36788,36906]" parent="contract_body [34672,45315]" at="18"/>
  <insert-node tree="function_definition [36912,37183]" parent="contract_body [34672,45315]" at="19"/>
  <insert-node tree="comment: /*     * @param the RLP item.     */ [37191,37229]" parent="contract_body [34672,45315]" at="20"/>
  <insert-node tree="function_definition [37235,37381]" parent="contract_body [34672,45315]" at="21"/>
  <insert-node tree="comment: /*     * @param the RLP item containing the encoded list.     */ [37389,37455]" parent="contract_body [34672,45315]" at="22"/>
  <insert-node tree="comment: /*      * @dev A cheaper version of keccak256(toRlpBytes(item)) that avoids copying memory.      * @return keccak256 hash of RLP encoded bytes.      */ [38441,38595]" parent="contract_body [34672,45315]" at="26"/>
  <insert-node tree="function_definition [38601,38881]" parent="contract_body [34672,45315]" at="27"/>
  <insert-node tree="comment: /*      * @dev A cheaper version of keccak256(toBytes(item)) that avoids copying memory.      * @return keccak256 hash of the item payload.      */ [38889,39039]" parent="contract_body [34672,45315]" at="28"/>
  <insert-node tree="function_definition [39045,39316]" parent="contract_body [34672,45315]" at="29"/>
  <insert-node tree="comment: // any non-zero byte except &quot;0x80&quot; is considered true [39779,39832]" parent="contract_body [34672,45315]" at="33"/>
  <insert-node tree="function_definition [39838,40436]" parent="contract_body [34672,45315]" at="34"/>
  <insert-node tree="comment: /*     * Private Helpers     */ [41858,41891]" parent="contract_body [34672,45315]" at="40"/>
  <insert-node tree="comment: /*     * @param src Pointer to source     * @param dest Pointer to destination     * @param len Amount of memory to copy from the source     */ [44379,44526]" parent="contract_body [34672,45315]" at="47"/>
  <insert-node tree="function: function [35784,35792]" parent="function_definition [35784,35957]" at="0"/>
  <insert-node tree="identifier: hasNext [35793,35800]" parent="function_definition [35784,35957]" at="1"/>
  <insert-node tree="(: ( [35800,35801]" parent="function_definition [35784,35957]" at="2"/>
  <insert-tree tree="parameter [35801,35821]" parent="function_definition [35784,35957]" at="3"/>
  <insert-node tree="): ) [35821,35822]" parent="function_definition [35784,35957]" at="4"/>
  <insert-tree tree="visibility [35823,35831]" parent="function_definition [35784,35957]" at="5"/>
  <insert-tree tree="state_mutability [35832,35836]" parent="function_definition [35784,35957]" at="6"/>
  <insert-tree tree="return_type_definition [35837,35851]" parent="function_definition [35784,35957]" at="7"/>
  <insert-node tree="function_body [35852,35957]" parent="function_definition [35784,35957]" at="8"/>
  <insert-node tree="function: function [36912,36920]" parent="function_definition [36912,37183]" at="0"/>
  <insert-node tree="identifier: payloadLocation [36921,36936]" parent="function_definition [36912,37183]" at="1"/>
  <insert-node tree="(: ( [36936,36937]" parent="function_definition [36912,37183]" at="2"/>
  <insert-tree tree="parameter [36937,36956]" parent="function_definition [36912,37183]" at="3"/>
  <insert-node tree="): ) [36956,36957]" parent="function_definition [36912,37183]" at="4"/>
  <insert-tree tree="visibility [36958,36966]" parent="function_definition [36912,37183]" at="5"/>
  <insert-tree tree="state_mutability [36967,36971]" parent="function_definition [36912,37183]" at="6"/>
  <insert-tree tree="return_type_definition [36972,36992]" parent="function_definition [36912,37183]" at="7"/>
  <insert-node tree="function_body [36993,37183]" parent="function_definition [36912,37183]" at="8"/>
  <insert-node tree="function: function [37235,37243]" parent="function_definition [37235,37381]" at="0"/>
  <insert-node tree="identifier: payloadLen [37244,37254]" parent="function_definition [37235,37381]" at="1"/>
  <insert-node tree="(: ( [37254,37255]" parent="function_definition [37235,37381]" at="2"/>
  <insert-tree tree="parameter [37255,37274]" parent="function_definition [37235,37381]" at="3"/>
  <insert-node tree="): ) [37274,37275]" parent="function_definition [37235,37381]" at="4"/>
  <insert-tree tree="visibility [37276,37284]" parent="function_definition [37235,37381]" at="5"/>
  <insert-tree tree="state_mutability [37285,37289]" parent="function_definition [37235,37381]" at="6"/>
  <insert-tree tree="return_type_definition [37290,37304]" parent="function_definition [37235,37381]" at="7"/>
  <insert-node tree="function_body [37305,37381]" parent="function_definition [37235,37381]" at="8"/>
  <insert-node tree="function: function [38601,38609]" parent="function_definition [38601,38881]" at="0"/>
  <insert-node tree="identifier: rlpBytesKeccak256 [38610,38627]" parent="function_definition [38601,38881]" at="1"/>
  <insert-node tree="(: ( [38627,38628]" parent="function_definition [38601,38881]" at="2"/>
  <insert-tree tree="parameter [38628,38647]" parent="function_definition [38601,38881]" at="3"/>
  <insert-node tree="): ) [38647,38648]" parent="function_definition [38601,38881]" at="4"/>
  <insert-tree tree="visibility [38649,38657]" parent="function_definition [38601,38881]" at="5"/>
  <insert-tree tree="state_mutability [38658,38662]" parent="function_definition [38601,38881]" at="6"/>
  <insert-tree tree="return_type_definition [38663,38680]" parent="function_definition [38601,38881]" at="7"/>
  <insert-node tree="function_body [38681,38881]" parent="function_definition [38601,38881]" at="8"/>
  <insert-node tree="function: function [39045,39053]" parent="function_definition [39045,39316]" at="0"/>
  <insert-node tree="identifier: payloadKeccak256 [39054,39070]" parent="function_definition [39045,39316]" at="1"/>
  <insert-node tree="(: ( [39070,39071]" parent="function_definition [39045,39316]" at="2"/>
  <insert-tree tree="parameter [39071,39090]" parent="function_definition [39045,39316]" at="3"/>
  <insert-node tree="): ) [39090,39091]" parent="function_definition [39045,39316]" at="4"/>
  <insert-tree tree="visibility [39092,39100]" parent="function_definition [39045,39316]" at="5"/>
  <insert-tree tree="state_mutability [39101,39105]" parent="function_definition [39045,39316]" at="6"/>
  <insert-tree tree="return_type_definition [39106,39123]" parent="function_definition [39045,39316]" at="7"/>
  <insert-node tree="function_body [39124,39316]" parent="function_definition [39045,39316]" at="8"/>
  <insert-node tree="function: function [39838,39846]" parent="function_definition [39838,40436]" at="0"/>
  <insert-node tree="identifier: toBoolean [39847,39856]" parent="function_definition [39838,40436]" at="1"/>
  <insert-node tree="(: ( [39856,39857]" parent="function_definition [39838,40436]" at="2"/>
  <insert-tree tree="parameter [39857,39876]" parent="function_definition [39838,40436]" at="3"/>
  <insert-node tree="): ) [39876,39877]" parent="function_definition [39838,40436]" at="4"/>
  <insert-tree tree="visibility [39878,39886]" parent="function_definition [39838,40436]" at="5"/>
  <insert-tree tree="state_mutability [39887,39891]" parent="function_definition [39838,40436]" at="6"/>
  <insert-tree tree="return_type_definition [39892,39906]" parent="function_definition [39838,40436]" at="7"/>
  <insert-node tree="function_body [39907,40436]" parent="function_definition [39838,40436]" at="8"/>
  <insert-tree tree="parameter [44546,44554]" parent="function_definition [44532,45312]" at="3"/>
  <insert-tree tree="parameter [44556,44565]" parent="function_definition [44532,45312]" at="5"/>
  <insert-tree tree="parameter [44567,44575]" parent="function_definition [44532,45312]" at="7"/>
  <insert-node tree="{: { [35852,35853]" parent="function_body [35852,35957]" at="0"/>
  <insert-tree tree="variable_declaration_statement [35863,35895]" parent="function_body [35852,35957]" at="1"/>
  <insert-node tree="return_statement [35905,35950]" parent="function_body [35852,35957]" at="2"/>
  <insert-node tree="}: } [35956,35957]" parent="function_body [35852,35957]" at="3"/>
  <insert-node tree="{: { [36993,36994]" parent="function_body [36993,37183]" at="0"/>
  <move-tree tree="variable_declaration_statement [38884,38929]" parent="function_body [36993,37183]" at="1"/>
  <move-tree tree="variable_declaration_statement [37802,37840]" parent="function_body [36993,37183]" at="2"/>
  <move-tree tree="variable_declaration_statement [38941,38973]" parent="function_body [36993,37183]" at="3"/>
  <insert-node tree="comment: // data length [37131,37145]" parent="function_body [36993,37183]" at="4"/>
  <insert-tree tree="return_statement [37155,37176]" parent="function_body [36993,37183]" at="5"/>
  <insert-node tree="}: } [37182,37183]" parent="function_body [36993,37183]" at="6"/>
  <insert-node tree="{: { [37305,37306]" parent="function_body [37305,37381]" at="0"/>
  <insert-node tree="variable_declaration_statement [37316,37353]" parent="function_body [37305,37381]" at="1"/>
  <insert-tree tree="return_statement [37363,37374]" parent="function_body [37305,37381]" at="2"/>
  <insert-node tree="}: } [37380,37381]" parent="function_body [37305,37381]" at="3"/>
  <move-tree tree="variable_declaration_statement [39619,39679]" parent="function_body [37539,37984]" at="4"/>
  <insert-tree tree="variable_declaration_statement [37747,37760]" parent="function_body [37539,37984]" at="5"/>
  <insert-node tree="if_statement [38168,38200]" parent="function_body [38157,38433]" at="1"/>
  <insert-node tree="{: { [38681,38682]" parent="function_body [38681,38881]" at="0"/>
  <move-tree tree="variable_declaration_statement [36840,36852]" parent="function_body [38681,38881]" at="1"/>
  <insert-node tree="variable_declaration_statement [38728,38751]" parent="function_body [38681,38881]" at="2"/>
  <insert-tree tree="variable_declaration_statement [38761,38776]" parent="function_body [38681,38881]" at="3"/>
  <insert-tree tree="assembly_statement [38786,38850]" parent="function_body [38681,38881]" at="4"/>
  <insert-tree tree="return_statement [38860,38874]" parent="function_body [38681,38881]" at="5"/>
  <insert-node tree="}: } [38880,38881]" parent="function_body [38681,38881]" at="6"/>
  <insert-node tree="{: { [39124,39125]" parent="function_body [39124,39316]" at="0"/>
  <insert-node tree="variable_declaration_statement [39135,39183]" parent="function_body [39124,39316]" at="1"/>
  <insert-tree tree="variable_declaration_statement [39193,39208]" parent="function_body [39124,39316]" at="2"/>
  <insert-tree tree="assembly_statement [39218,39285]" parent="function_body [39124,39316]" at="3"/>
  <insert-tree tree="return_statement [39295,39309]" parent="function_body [39124,39316]" at="4"/>
  <insert-node tree="}: } [39315,39316]" parent="function_body [39124,39316]" at="5"/>
  <insert-tree tree="if_statement [39559,39597]" parent="function_body [39496,39771]" at="2"/>
  <insert-tree tree="variable_declaration_statement [39617,39626]" parent="function_body [39496,39771]" at="3"/>
  <insert-node tree="{: { [39907,39908]" parent="function_body [39907,40436]" at="0"/>
  <move-tree tree="expression_statement [38798,38874]" parent="function_body [39907,40436]" at="1"/>
  <insert-tree tree="variable_declaration_statement [39951,39963]" parent="function_body [39907,40436]" at="2"/>
  <move-tree tree="variable_declaration_statement [38236,38282]" parent="function_body [39907,40436]" at="3"/>
  <insert-tree tree="assembly_statement [40009,40076]" parent="function_body [39907,40436]" at="4"/>
  <insert-node tree="comment: // SEE Github Issue #5. [40088,40111]" parent="function_body [39907,40436]" at="5"/>
  <insert-node tree="comment: // Summary: Most commonly used RLP libraries (i.e Geth) will encode [40121,40188]" parent="function_body [39907,40436]" at="6"/>
  <insert-node tree="comment: // &quot;0&quot; as &quot;0x80&quot; instead of as &quot;0&quot;. We handle this edge case explicitly [40198,40269]" parent="function_body [39907,40436]" at="7"/>
  <insert-node tree="comment: // here. [40279,40287]" parent="function_body [39907,40436]" at="8"/>
  <insert-tree tree="if_statement [40297,40429]" parent="function_body [39907,40436]" at="9"/>
  <insert-node tree="}: } [40435,40436]" parent="function_body [39907,40436]" at="10"/>
  <move-tree tree="expression_statement [35770,35845]" parent="function_body [40714,41119]" at="1"/>
  <insert-tree tree="variable_declaration_statement [40777,40825]" parent="function_body [40714,41119]" at="2"/>
  <insert-tree tree="variable_declaration_statement [40837,40849]" parent="function_body [40714,41119]" at="3"/>
  <move-tree tree="expression_statement [38292,38374]" parent="function_body [41542,41850]" at="1"/>
  <insert-tree tree="variable_declaration_statement [41587,41635]" parent="function_body [41542,41850]" at="2"/>
  <insert-tree tree="variable_declaration_statement [41694,41707]" parent="function_body [41542,41850]" at="4"/>
  <insert-tree tree="if_statement [42041,42069]" parent="function_body [42030,42385]" at="1"/>
  <move-tree tree="variable_declaration_statement [35857,35916]" parent="function_body [42030,42385]" at="5"/>
  <insert-tree tree="variable_declaration_statement [42510,42523]" parent="function_body [42499,43764]" at="1"/>
  <insert-tree tree="variable_declaration_statement [42533,42544]" parent="function_body [42499,43764]" at="2"/>
  <insert-node tree="if_statement [44895,45305]" parent="function_body [44590,45312]" at="4"/>
  <insert-node tree=",: , [51976,51977]" parent="return_type_definition [51951,51989]" at="3"/>
  <insert-tree tree="parameter [51978,51982]" parent="return_type_definition [51951,51989]" at="4"/>
  <insert-node tree=",: , [51982,51983]" parent="return_type_definition [51951,51989]" at="5"/>
  <insert-tree tree="parameter [51984,51988]" parent="return_type_definition [51951,51989]" at="6"/>
  <insert-tree tree="variable_declaration_statement [52272,52290]" parent="function_body [51990,52991]" at="3"/>
  <insert-tree tree="variable_declaration_statement [52300,52322]" parent="function_body [51990,52991]" at="4"/>
  <insert-node tree="variable_declaration_statement [53963,54019]" parent="function_body [53455,55885]" at="8"/>
  <insert-node tree="return: return [35905,35911]" parent="return_statement [35905,35950]" at="0"/>
  <move-tree tree="binary_expression [37601,37623]" parent="return_statement [35905,35950]" at="1"/>
  <insert-tree tree="variable_declaration [36106,36117]" parent="variable_declaration_statement [36106,36118]" at="0"/>
  <insert-tree tree="variable_declaration [37101,37109]" parent="variable_declaration_statement [37101,37130]" at="0"/>
  <insert-tree tree="variable_declaration_tuple [37316,37328]" parent="variable_declaration_statement [37316,37353]" at="0"/>
  <insert-node tree="=: = [37329,37330]" parent="variable_declaration_statement [37316,37353]" at="1"/>
  <move-tree tree="call_expression [37407,37419]" parent="variable_declaration_statement [37316,37353]" at="2"/>
  <insert-tree tree="variable_declaration [37584,37594]" parent="variable_declaration_statement [37584,37612]" at="0"/>
  <insert-node tree="if: if [38168,38170]" parent="if_statement [38168,38200]" at="0"/>
  <insert-node tree="(: ( [38171,38172]" parent="if_statement [38168,38200]" at="1"/>
  <move-tree tree="binary_expression [37475,37489]" parent="if_statement [38168,38200]" at="2"/>
  <insert-node tree="): ) [38185,38186]" parent="if_statement [38168,38200]" at="3"/>
  <insert-tree tree="return_statement [38187,38200]" parent="if_statement [38168,38200]" at="4"/>
  <insert-node tree="=: = [38704,38705]" parent="variable_declaration_statement [38692,38718]" at="1"/>
  <move-tree tree="member_expression [38775,38786]" parent="variable_declaration_statement [38692,38718]" at="2"/>
  <move-tree tree="variable_declaration [38941,38952]" parent="variable_declaration_statement [38728,38751]" at="0"/>
  <insert-node tree="=: = [38740,38741]" parent="variable_declaration_statement [38728,38751]" at="1"/>
  <insert-tree tree="member_expression [38742,38750]" parent="variable_declaration_statement [38728,38751]" at="2"/>
  <insert-tree tree="variable_declaration_tuple [39135,39158]" parent="variable_declaration_statement [39135,39183]" at="0"/>
  <insert-node tree="=: = [39159,39160]" parent="variable_declaration_statement [39135,39183]" at="1"/>
  <move-tree tree="call_expression [37097,37109]" parent="variable_declaration_statement [39135,39183]" at="2"/>
  <move-tree tree="member_expression [38269,38280]" parent="variable_declaration_statement [39973,39999]" at="2"/>
  <insert-node tree="if: if [44895,44897]" parent="if_statement [44895,45305]" at="0"/>
  <insert-node tree="(: ( [44898,44899]" parent="if_statement [44895,45305]" at="1"/>
  <insert-tree tree="binary_expression [44899,44906]" parent="if_statement [44895,45305]" at="2"/>
  <insert-node tree="): ) [44906,44907]" parent="if_statement [44895,45305]" at="3"/>
  <insert-node tree="block_statement [44908,45305]" parent="if_statement [44895,45305]" at="4"/>
  <insert-tree tree="tuple_expression [52932,52983]" parent="return_statement [52925,52984]" at="1"/>
  <insert-tree tree="variable_declaration [53963,53979]" parent="variable_declaration_statement [53963,54019]" at="0"/>
  <insert-node tree="=: = [53980,53981]" parent="variable_declaration_statement [53963,54019]" at="1"/>
  <move-tree tree="type_cast_expression [51382,51418]" parent="variable_declaration_statement [53963,54019]" at="2"/>
  <insert-tree tree="member_expression [35912,35938]" parent="binary_expression [35912,35949]" at="0"/>
  <insert-node tree="+: + [35939,35940]" parent="binary_expression [35912,35949]" at="1"/>
  <update-node tree="identifier: isList [37407,37413]" label="payloadLocation"/>
  <update-node tree="identifier: currPtr [39627,39634]" label="memPtr"/>
  <insert-node tree="==: == [38181,38183]" parent="binary_expression [38172,38185]" at="1"/>
  <update-node tree="number_literal: 33 [37487,37489]" label="0"/>
  <update-node tree="identifier: isList [37097,37103]" label="payloadLocation"/>
  <update-node tree="identifier: itemLength [38244,38254]" label="memPtr"/>
  <update-node tree="identifier: memPtr [35865,35871]" label="currPtr"/>
  <insert-node tree="uint: uint [42458,42462]" parent="primitive_type [42458,42462]" at="0"/>
  <insert-node tree="uint: uint [43843,43847]" parent="primitive_type [43843,43847]" at="0"/>
  <insert-node tree="{: { [44908,44909]" parent="block_statement [44908,45305]" at="0"/>
  <insert-node tree="comment: // left over bytes. Mask is used to remove unwanted bytes from the word [44923,44994]" parent="block_statement [44908,45305]" at="1"/>
  <move-tree tree="variable_declaration_statement [42599,42641]" parent="block_statement [44908,45305]" at="2"/>
  <move-tree tree="assembly_statement [42651,42866]" parent="block_statement [44908,45305]" at="3"/>
  <insert-node tree="}: } [45304,45305]" parent="block_statement [44908,45305]" at="4"/>
  <insert-tree tree="if_statement [52818,52902]" parent="block_statement [52607,52913]" at="2"/>
  <insert-node tree="identifier: eventSig [54033,54041]" parent="binary_expression [54033,54070]" at="0"/>
  <insert-node tree="if_statement [54487,54736]" parent="block_statement [54072,54747]" at="5"/>
  <move-tree tree="==: == [38817,38819]" parent="binary_expression [39926,39939]" at="2"/>
  <insert-node tree="uint: uint [40708,40712]" parent="primitive_type [40708,40712]" at="0"/>
  <insert-node tree="binary_expression [40733,40763]" parent="call_argument [40733,40763]" at="0"/>
  <insert-node tree="uint: uint [41225,41229]" parent="primitive_type [41225,41229]" at="0"/>
  <insert-node tree="identifier: memPtr [41797,41803]" parent="call_argument [41797,41803]" at="0"/>
  <insert-node tree="uint: uint [42024,42028]" parent="primitive_type [42024,42028]" at="0"/>
  <insert-node tree="uint: uint [42493,42497]" parent="primitive_type [42493,42497]" at="0"/>
  <insert-node tree="uint: uint [43878,43882]" parent="primitive_type [43878,43882]" at="0"/>
  <insert-node tree="if: if [54487,54489]" parent="if_statement [54487,54736]" at="0"/>
  <insert-node tree="(: ( [54489,54490]" parent="if_statement [54487,54736]" at="1"/>
  <insert-tree tree="binary_expression [54490,54502]" parent="if_statement [54487,54736]" at="2"/>
  <insert-node tree="): ) [54502,54503]" parent="if_statement [54487,54736]" at="3"/>
  <insert-node tree="block_statement [54504,54736]" parent="if_statement [54487,54736]" at="4"/>
  <insert-node tree="identifier: eventSig [54757,54765]" parent="binary_expression [54757,54793]" at="0"/>
  <insert-node tree="variable_declaration_statement [55039,55142]" parent="block_statement [54795,55789]" at="3"/>
  <insert-node tree="variable_declaration_statement [55156,55276]" parent="block_statement [54795,55789]" at="4"/>
  <insert-node tree="if_statement [55292,55502]" parent="block_statement [54795,55789]" at="5"/>
  <insert-node tree="if_statement [55518,55778]" parent="block_statement [54795,55789]" at="6"/>
  <insert-node tree="uint: uint [37004,37008]" parent="primitive_type [37004,37008]" at="0"/>
  <insert-node tree="uint: uint [37056,37060]" parent="primitive_type [37056,37060]" at="0"/>
  <insert-node tree="uint: uint [37681,37685]" parent="primitive_type [37681,37685]" at="0"/>
  <insert-node tree="uint: uint [38234,38238]" parent="primitive_type [38234,38238]" at="0"/>
  <insert-node tree="number_literal: 1 [39938,39939]" parent="binary_expression [39926,39939]" at="2"/>
  <insert-node tree="uint: uint [39973,39977]" parent="primitive_type [39973,39977]" at="0"/>
  <insert-node tree="member_expression [40733,40757]" parent="binary_expression [40733,40763]" at="0"/>
  <insert-node tree="&lt;=: &lt;= [40758,40760]" parent="binary_expression [40733,40763]" at="1"/>
  <insert-node tree="number_literal: 33 [40761,40763]" parent="binary_expression [40733,40763]" at="2"/>
  <insert-node tree="uint: uint [41306,41310]" parent="primitive_type [41306,41310]" at="0"/>
  <insert-node tree="uint: uint [41328,41332]" parent="primitive_type [41328,41332]" at="0"/>
  <insert-node tree="&gt;: &gt; [41570,41571]" parent="binary_expression [41561,41573]" at="1"/>
  <insert-node tree="number_literal: 0 [41572,41573]" parent="binary_expression [41561,41573]" at="2"/>
  <insert-node tree="uint: uint [42081,42085]" parent="primitive_type [42081,42085]" at="0"/>
  <insert-node tree="uint: uint [42106,42110]" parent="primitive_type [42106,42110]" at="0"/>
  <insert-node tree="uint: uint [42173,42177]" parent="primitive_type [42173,42177]" at="0"/>
  <insert-node tree="uint: uint [43895,43899]" parent="primitive_type [43895,43899]" at="0"/>
  <insert-tree tree="expression_statement [52767,52787]" parent="block_statement [52667,52802]" at="2"/>
  <update-node tree="identifier: tokenBalance [51777,51789]" label="balance"/>
  <update-node tree="identifier: tokenBalance [52104,52116]" label="balance"/>
  <insert-node tree="{: { [54504,54505]" parent="block_statement [54504,54736]" at="0"/>
  <move-tree tree="expression_statement [52358,52531]" parent="block_statement [54504,54736]" at="1"/>
  <insert-node tree="}: } [54735,54736]" parent="block_statement [54504,54736]" at="2"/>
  <move-tree tree="variable_declaration [35222,35236]" parent="variable_declaration_statement [55039,55142]" at="0"/>
  <insert-node tree="=: = [55065,55066]" parent="variable_declaration_statement [55039,55142]" at="1"/>
  <move-tree tree="call_expression [53023,53170]" parent="variable_declaration_statement [55039,55142]" at="2"/>
  <insert-node tree="variable_declaration_tuple [55156,55227]" parent="variable_declaration_statement [55156,55276]" at="0"/>
  <insert-node tree="=: = [55228,55229]" parent="variable_declaration_statement [55156,55276]" at="1"/>
  <insert-node tree="call_expression [55230,55275]" parent="variable_declaration_statement [55156,55276]" at="2"/>
  <insert-node tree="if: if [55292,55294]" parent="if_statement [55292,55502]" at="0"/>
  <insert-node tree="(: ( [55294,55295]" parent="if_statement [55292,55502]" at="1"/>
  <insert-node tree="identifier: needMintStep [55295,55307]" parent="if_statement [55292,55502]" at="2"/>
  <insert-node tree="): ) [55307,55308]" parent="if_statement [55292,55502]" at="3"/>
  <insert-node tree="block_statement [55309,55502]" parent="if_statement [55292,55502]" at="4"/>
  <insert-node tree="if: if [55518,55520]" parent="if_statement [55518,55778]" at="0"/>
  <insert-node tree="(: ( [55520,55521]" parent="if_statement [55518,55778]" at="1"/>
  <insert-node tree="identifier: needTransferStep [55521,55537]" parent="if_statement [55518,55778]" at="2"/>
  <insert-node tree="): ) [55537,55538]" parent="if_statement [55518,55778]" at="3"/>
  <insert-node tree="block_statement [55539,55778]" parent="if_statement [55518,55778]" at="4"/>
  <insert-node tree="uint: uint [37775,37779]" parent="primitive_type [37775,37779]" at="0"/>
  <insert-node tree="binary_expression [40733,40753]" parent="member_expression [40733,40757]" at="0"/>
  <insert-node tree=".: . [40753,40754]" parent="member_expression [40733,40757]" at="1"/>
  <insert-node tree="identifier: len [40754,40757]" parent="member_expression [40733,40757]" at="2"/>
  <insert-node tree="type_name [55039,55048]" parent="variable_declaration [55039,55064]" at="0"/>
  <insert-node tree="memory: memory [55049,55055]" parent="variable_declaration [55039,55064]" at="1"/>
  <update-node tree="identifier: memPtr [35230,35236]" label="balances"/>
  <insert-node tree="(: ( [55156,55157]" parent="variable_declaration_tuple [55156,55227]" at="0"/>
  <move-tree tree="variable_declaration [35616,35629]" parent="variable_declaration_tuple [55156,55227]" at="1"/>
  <insert-node tree=",: , [55184,55185]" parent="variable_declaration_tuple [55156,55227]" at="2"/>
  <insert-tree tree="variable_declaration [55186,55203]" parent="variable_declaration_tuple [55156,55227]" at="3"/>
  <insert-node tree=",: , [55203,55204]" parent="variable_declaration_tuple [55156,55227]" at="4"/>
  <insert-tree tree="variable_declaration [55205,55226]" parent="variable_declaration_tuple [55156,55227]" at="5"/>
  <insert-node tree="): ) [55226,55227]" parent="variable_declaration_tuple [55156,55227]" at="6"/>
  <insert-node tree="identifier: calculateAmountsToBeMinted [55230,55256]" parent="call_expression [55230,55275]" at="0"/>
  <insert-node tree="(: ( [55256,55257]" parent="call_expression [55230,55275]" at="1"/>
  <insert-tree tree="call_argument [55257,55265]" parent="call_expression [55230,55275]" at="2"/>
  <insert-node tree=",: , [55265,55266]" parent="call_expression [55230,55275]" at="3"/>
  <move-tree tree="call_argument [53430,53437]" parent="call_expression [55230,55275]" at="4"/>
  <insert-node tree="): ) [55274,55275]" parent="call_expression [55230,55275]" at="5"/>
  <insert-node tree="{: { [55309,55310]" parent="block_statement [55309,55502]" at="0"/>
  <move-tree tree="expression_statement [52886,53263]" parent="block_statement [55309,55502]" at="1"/>
  <insert-node tree="}: } [55501,55502]" parent="block_statement [55309,55502]" at="2"/>
  <insert-node tree="{: { [55539,55540]" parent="block_statement [55539,55778]" at="0"/>
  <move-tree tree="expression_statement [53279,53481]" parent="block_statement [55539,55778]" at="1"/>
  <insert-node tree="}: } [55777,55778]" parent="block_statement [55539,55778]" at="2"/>
  <move-tree tree="binary_expression [35778,35800]" parent="binary_expression [40733,40753]" at="0"/>
  <insert-node tree="&amp;&amp;: &amp;&amp; [40746,40748]" parent="binary_expression [40733,40753]" at="1"/>
  <insert-node tree="identifier: item [40749,40753]" parent="binary_expression [40733,40753]" at="2"/>
  <insert-node tree="uint: uint [45008,45012]" parent="primitive_type [45008,45012]" at="0"/>
  <insert-tree tree="call_argument [54411,54421]" parent="call_expression [54400,54455]" at="2"/>
  <move-tree tree="call_argument [52218,52220]" parent="call_expression [54400,54455]" at="5"/>
  <insert-tree tree="call_argument [54427,54443]" parent="call_expression [54400,54455]" at="6"/>
  <move-tree tree="type_name [35222,35229]" parent="type_name [55039,55048]" at="0"/>
  <insert-node tree="[: [ [55046,55047]" parent="type_name [55039,55048]" at="1"/>
  <insert-node tree="]: ] [55047,55048]" parent="type_name [55039,55048]" at="2"/>
  <insert-node tree="type_name [55157,55166]" parent="variable_declaration [55157,55184]" at="0"/>
  <insert-node tree="memory: memory [55167,55173]" parent="variable_declaration [55157,55184]" at="1"/>
  <update-node tree="identifier: items [35624,35629]" label="toBeMinted"/>
  <insert-node tree="&gt;: &gt; [40742,40743]" parent="binary_expression [40733,40745]" at="1"/>
  <insert-node tree="number_literal: 0 [40744,40745]" parent="binary_expression [40733,40745]" at="2"/>
  <update-node tree="identifier: mintBatch [52152,52161]" label="mint"/>
  <update-node tree="identifier: amount [52481,52487]" label="balance"/>
  <move-tree tree="type_name [35616,35623]" parent="type_name [55157,55166]" at="0"/>
  <insert-node tree="[: [ [55164,55165]" parent="type_name [55157,55166]" at="1"/>
  <insert-node tree="]: ] [55165,55166]" parent="type_name [55157,55166]" at="2"/>
  <insert-tree tree="call_argument [55366,55376]" parent="call_expression [55328,55486]" at="2"/>
  <insert-tree tree="call_argument [55425,55435]" parent="call_expression [55328,55486]" at="6"/>
  <insert-tree tree="call_argument [55703,55711]" parent="call_expression [55558,55762]" at="8"/>
  <insert-node tree="identifier: token [55558,55563]" parent="member_expression [55558,55585]" at="0"/>
  <delete-tree tree="struct_declaration [34899,34969]"/>
  <delete-node tree="identifier: itemLength [37601,37611]"/>
  <delete-node tree="==: == [37612,37614]"/>
  <delete-tree tree="expression_statement [35152,35212]"/>
  <delete-node tree="uint256: uint256 [38884,38891]"/>
  <delete-node tree="uint256: uint256 [37802,37809]"/>
  <delete-node tree=",: , [35574,35575]"/>
  <delete-tree tree="call_argument [35576,35602]"/>
  <delete-node tree="uint256: uint256 [39619,39626]"/>
  <delete-tree tree="variable_declaration_statement [35714,35760]"/>
  <delete-tree tree="variable_declaration_statement [35926,35942]"/>
  <delete-node tree="uint256: uint256 [35957,35964]"/>
  <delete-node tree="&lt;=: &lt;= [37484,37486]"/>
  <delete-node tree="uint256: uint256 [36374,36381]"/>
  <delete-node tree="identifier: listLength [38806,38816]"/>
  <delete-node tree=",: , [38828,38829]"/>
  <delete-tree tree="call_argument [38830,38872]"/>
  <delete-node tree="uint256: uint256 [38236,38243]"/>
  <delete-node tree="identifier: _itemLength [38257,38268]"/>
  <delete-node tree="(: ( [38268,38269]"/>
  <delete-node tree="call_argument [38269,38280]"/>
  <delete-node tree="): ) [38280,38281]"/>
  <delete-node tree="call_expression [38257,38281]"/>
  <delete-node tree="identifier: require [37088,37095]"/>
  <delete-node tree="(: ( [37095,37096]"/>
  <delete-node tree="!: ! [37096,37097]"/>
  <delete-node tree="unary_expression [37096,37109]"/>
  <delete-node tree="call_argument [37096,37109]"/>
  <delete-node tree=",: , [37109,37110]"/>
  <delete-tree tree="call_argument [37111,37148]"/>
  <delete-node tree="): ) [37148,37149]"/>
  <delete-node tree="call_expression [37088,37149]"/>
  <delete-node tree="expression_statement [37088,37150]"/>
  <delete-node tree=",: , [37223,37224]"/>
  <delete-tree tree="call_argument [37225,37260]"/>
  <delete-node tree="uint256: uint256 [37378,37385]"/>
  <delete-node tree="identifier: listLength [35778,35788]"/>
  <delete-node tree="==: == [35789,35791]"/>
  <delete-node tree=",: , [35800,35801]"/>
  <delete-tree tree="call_argument [35802,35843]"/>
  <delete-node tree="identifier: require [37398,37405]"/>
  <delete-node tree="(: ( [37405,37406]"/>
  <delete-node tree="!: ! [37406,37407]"/>
  <delete-node tree="unary_expression [37406,37419]"/>
  <delete-node tree="call_argument [37406,37419]"/>
  <delete-node tree=",: , [37419,37420]"/>
  <delete-tree tree="call_argument [37421,37455]"/>
  <delete-node tree="): ) [37455,37456]"/>
  <delete-node tree="call_expression [37398,37456]"/>
  <delete-node tree="expression_statement [37398,37457]"/>
  <delete-node tree="identifier: require [37467,37474]"/>
  <delete-node tree="(: ( [37474,37475]"/>
  <delete-node tree="call_argument [37475,37489]"/>
  <delete-node tree=",: , [37489,37490]"/>
  <delete-tree tree="call_argument [37491,37523]"/>
  <delete-node tree="): ) [37523,37524]"/>
  <delete-node tree="call_expression [37467,37524]"/>
  <delete-node tree="expression_statement [37467,37525]"/>
  <delete-tree tree="variable_declaration_statement [37537,37583]"/>
  <delete-node tree="identifier: require [37593,37600]"/>
  <delete-node tree="(: ( [37600,37601]"/>
  <delete-node tree="call_argument [37601,37623]"/>
  <delete-node tree=",: , [37623,37624]"/>
  <delete-tree tree="call_argument [37625,37666]"/>
  <delete-node tree="): ) [37666,37667]"/>
  <delete-node tree="call_expression [37593,37667]"/>
  <delete-node tree="expression_statement [37593,37668]"/>
  <delete-tree tree="variable_declaration_statement [37680,37725]"/>
  <delete-tree tree="variable_declaration_statement [37735,37767]"/>
  <delete-tree tree="variable_declaration_statement [37777,37792]"/>
  <delete-node tree="uint256: uint256 [38216,38223]"/>
  <delete-node tree=",: , [38434,38435]"/>
  <delete-tree tree="call_argument [38436,38475]"/>
  <delete-node tree="uint256: uint256 [38489,38496]"/>
  <delete-node tree="uint256: uint256 [38514,38521]"/>
  <delete-node tree="identifier: itemLength [38300,38310]"/>
  <delete-node tree="==: == [38311,38313]"/>
  <delete-node tree=",: , [38322,38323]"/>
  <delete-tree tree="call_argument [38324,38372]"/>
  <delete-tree tree="variable_declaration [38742,38760]"/>
  <delete-node tree="=: = [38761,38762]"/>
  <delete-node tree="identifier: _itemLength [38763,38774]"/>
  <delete-node tree="(: ( [38774,38775]"/>
  <delete-node tree="call_argument [38775,38786]"/>
  <delete-node tree="): ) [38786,38787]"/>
  <delete-node tree="call_expression [38763,38787]"/>
  <delete-node tree="variable_declaration_statement [38742,38788]"/>
  <delete-node tree="comment: // data length [38974,38988]"/>
  <delete-tree tree="variable_declaration_statement [39047,39063]"/>
  <delete-tree tree="binary_expression [39153,39173]"/>
  <delete-node tree="uint256: uint256 [39396,39403]"/>
  <delete-node tree="comment: // add `isList` check if `item` is expected to be passsed without a check from calling function [39416,39511]"/>
  <delete-node tree="comment: // require(isList(item), &quot;RLPReader: NUM_ITEMS_NOT_LIST&quot;); [39521,39579]"/>
  <delete-node tree="uint256: uint256 [39591,39598]"/>
  <delete-node tree="uint256: uint256 [35857,35864]"/>
  <delete-node tree="uint256: uint256 [39689,39696]"/>
  <delete-tree tree="expression_statement [39855,39930]"/>
  <delete-node tree="uint256: uint256 [40068,40075]"/>
  <delete-node tree="uint256: uint256 [40106,40113]"/>
  <delete-tree tree="variable_declaration_statement [40126,40142]"/>
  <delete-tree tree="variable_declaration_statement [40152,40166]"/>
  <delete-node tree="uint256: uint256 [41401,41408]"/>
  <delete-node tree="uint256: uint256 [41439,41446]"/>
  <delete-node tree="uint256: uint256 [41459,41466]"/>
  <delete-tree tree="parameter [42136,42147]"/>
  <delete-tree tree="parameter [42158,42170]"/>
  <delete-tree tree="parameter [42181,42192]"/>
  <delete-node tree="uint256: uint256 [42599,42606]"/>
  <delete-node tree="comment: // left over bytes. Mask is used to remove unwanted bytes from the word [42518,42589]"/>
  <delete-node tree="comment: // File: contracts/root/TokenPredicates/MintableERC1155Predicate.sol [44639,44707]"/>
  <delete-tree tree="pragma_directive [44711,44733]"/>
  <delete-node tree="identifier: toBeMintedAmounts [50381,50398]"/>
  <delete-node tree="comment: // topic0 is event sig [51464,51486]"/>
  <delete-node tree="comment: // Currently locked tokens for `id` in this contract [51703,51755]"/>
  <delete-node tree="comment: // Checking whether MintableERC1155 contract has enough [51843,51898]"/>
  <delete-node tree="comment: // tokens locked in to transfer to withdrawer, if not [51912,51965]"/>
  <delete-node tree="comment: // it'll mint those tokens for this contract and return [51979,52034]"/>
  <delete-node tree="comment: // safely transfer those to withdrawer [52048,52086]"/>
  <delete-tree tree="call_argument [52162,52175]"/>
  <delete-node tree="identifier: makeArrayWithValue [52199,52217]"/>
  <delete-node tree="(: ( [52217,52218]"/>
  <delete-node tree=",: , [52220,52221]"/>
  <delete-tree tree="call_argument [52222,52223]"/>
  <delete-node tree="): ) [52223,52224]"/>
  <delete-node tree="call_expression [52199,52224]"/>
  <delete-node tree="call_argument [52199,52224]"/>
  <delete-tree tree="call_argument [52248,52292]"/>
  <delete-tree tree="type_cast_expression [52566,52602]"/>
  <delete-tree tree="call_argument [52920,52933]"/>
  <delete-node tree="identifier: calculateAmountsToBeMinted [52974,53000]"/>
  <delete-node tree="(: ( [53000,53001]"/>
  <delete-node tree="call_argument [53023,53170]"/>
  <delete-node tree=",: , [53170,53171]"/>
  <delete-tree tree="call_argument [53193,53200]"/>
  <delete-node tree="): ) [53218,53219]"/>
  <delete-node tree="call_expression [52974,53219]"/>
  <delete-node tree="call_argument [52974,53219]"/>
  <delete-tree tree="call_expression [53279,53306]"/>
</actions>
