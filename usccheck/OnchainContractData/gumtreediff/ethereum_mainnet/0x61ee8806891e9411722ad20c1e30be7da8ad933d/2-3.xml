<?xml version="1.0" ?>
<matches>
  <match src=".: . [103407,103408]" dest=".: . [41969,41970]"/>
  <match src="ternary_expression [81224,81297]" dest="ternary_expression [69968,70088]"/>
  <match src="visibility [2848,2856]" dest="visibility [3427,3435]"/>
  <match src="call_argument [30135,30161]" dest="call_argument [44716,44742]"/>
  <match src="identifier: stringify [34671,34680]" dest="identifier: stringify [49252,49261]"/>
  <match src=",: , [33180,33181]" dest=",: , [47761,47762]"/>
  <match src=",: , [101849,101850]" dest=",: , [40411,40412]"/>
  <match src="for_statement [8998,9079]" dest="for_statement [9583,9664]"/>
  <match src="function_body [98907,98987]" dest="function_body [37469,37549]"/>
  <match src="identifier: IERC20 [50808,50814]" dest="identifier: IERC20 [25967,25973]"/>
  <match src="returns: returns [47285,47292]" dest="returns: returns [16442,16449]"/>
  <match src="/: / [4640,4641]" dest="/: / [5219,5220]"/>
  <match src="variable_declaration [66547,66572]" dest="variable_declaration [64878,64903]"/>
  <match src="member_expression [80381,80391]" dest="member_expression [69529,69539]"/>
  <match src="identifier: FILE [65253,65257]" dest="identifier: FILE [79329,79333]"/>
  <match src="): ) [80937,80938]" dest="): ) [59176,59177]"/>
  <match src="(: ( [10830,10831]" dest="(: ( [11415,11416]"/>
  <match src="[: [ [38332,38333]" dest="[: [ [52913,52914]"/>
  <match src="variable_declaration [97100,97112]" dest="variable_declaration [35664,35676]"/>
  <match src="call_expression [82643,82759]" dest="call_expression [58290,58404]"/>
  <match src="parameter [98311,98315]" dest="parameter [36873,36877]"/>
  <match src="uint256: uint256 [83078,83085]" dest="uint256: uint256 [65835,65842]"/>
  <match src="function_definition [94964,95103]" dest="function_definition [33528,33667]"/>
  <match src="state_mutability [96642,96646]" dest="state_mutability [35206,35210]"/>
  <match src=":: : [45816,45817]" dest=":: : [14973,14974]"/>
  <match src="member_expression [93693,93708]" dest="member_expression [32257,32272]"/>
  <match src=".: . [102858,102859]" dest=".: . [41420,41421]"/>
  <match src=".: . [80244,80245]" dest=".: . [69419,69420]"/>
  <match src="return_statement [3139,3148]" dest="return_statement [3718,3727]"/>
  <match src="primitive_type [93296,93303]" dest="primitive_type [31860,31867]"/>
  <match src="): ) [30202,30203]" dest="): ) [44783,44784]"/>
  <match src="member_expression [101356,101370]" dest="member_expression [39918,39932]"/>
  <match src="=: = [83251,83252]" dest="=: = [71003,71004]"/>
  <match src="call_argument [9930,9940]" dest="call_argument [10515,10525]"/>
  <match src="function: function [14585,14593]" dest="function: function [24376,24384]"/>
  <match src="identifier: Require [105587,105594]" dest="identifier: Require [67655,67662]"/>
  <match src="): ) [9671,9672]" dest="): ) [10256,10257]"/>
  <match src="}: } [9078,9079]" dest="}: } [9663,9664]"/>
  <match src="identifier: account [101146,101153]" dest="identifier: account [39708,39715]"/>
  <match src="identifier: b [9022,9023]" dest="identifier: b [9607,9608]"/>
  <match src="%: % [6020,6021]" dest="%: % [6599,6600]"/>
  <match src="parameter [101072,101086]" dest="parameter [39634,39648]"/>
  <match src="inheritance_specifier [79364,79375]" dest="inheritance_specifier [68653,68660]"/>
  <match src=",: , [31323,31324]" dest=",: , [45904,45905]"/>
  <match src="==: == [8882,8884]" dest="==: == [9467,9469]"/>
  <match src="{: { [96954,96955]" dest="{: { [35518,35519]"/>
  <match src="}: } [90055,90056]" dest="}: } [74688,74689]"/>
  <match src="identifier: mod [5301,5304]" dest="identifier: mod [5880,5883]"/>
  <match src="(: ( [92954,92955]" dest="(: ( [31518,31519]"/>
  <match src="call_expression [84420,84509]" dest="call_expression [76846,76980]"/>
  <match src="): ) [30217,30218]" dest="): ) [44798,44799]"/>
  <match src="&quot;: &quot; [23707,23708]" dest="&quot;: &quot; [61915,61916]"/>
  <match src="constant: constant [45018,45026]" dest="constant: constant [14175,14183]"/>
  <match src="(: ( [46697,46698]" dest="(: ( [15854,15855]"/>
  <match src="call_argument [101338,101344]" dest="call_argument [39900,39906]"/>
  <match src="for_statement [35345,35932]" dest="for_statement [49926,50513]"/>
  <match src="identifier: amount [100240,100246]" dest="identifier: amount [38802,38808]"/>
  <match src="visibility [100420,100428]" dest="visibility [38982,38990]"/>
  <match src="]: ] [101940,101941]" dest="]: ] [40502,40503]"/>
  <match src="): ) [7204,7205]" dest="): ) [7789,7790]"/>
  <match src="call_argument [99207,99213]" dest="call_argument [37769,37775]"/>
  <match src="bytes: bytes [38190,38195]" dest="bytes: bytes [52771,52776]"/>
  <match src="uint256: uint256 [87274,87281]" dest="uint256: uint256 [28117,28124]"/>
  <match src="state_mutability [40747,40751]" dest="state_mutability [19826,19830]"/>
  <match src="memory: memory [10229,10235]" dest="memory: memory [10814,10820]"/>
  <match src="member_expression [104259,104282]" dest="member_expression [42821,42844]"/>
  <match src="return: return [96402,96408]" dest="return: return [34966,34972]"/>
  <match src="user_defined_type [47705,47717]" dest="user_defined_type [16862,16874]"/>
  <match src="{: { [12951,12952]" dest="{: { [22742,22743]"/>
  <match src="event_paramater [54463,54478]" dest="event_paramater [21553,21568]"/>
  <match src="(: ( [31975,31976]" dest="(: ( [46556,46557]"/>
  <match src="returns: returns [47165,47172]" dest="returns: returns [16322,16329]"/>
  <match src="struct_member [87968,87987]" dest="struct_member [28811,28830]"/>
  <match src="uint256: uint256 [18146,18153]" dest="uint256: uint256 [55736,55743]"/>
  <match src="function_body [99311,99403]" dest="function_body [37873,37965]"/>
  <match src="type_name [32126,32130]" dest="type_name [46707,46711]"/>
  <match src="struct_member [88053,88096]" dest="struct_member [28896,28939]"/>
  <match src="parameter [92435,92442]" dest="parameter [30999,31006]"/>
  <match src="uint256: uint256 [44323,44330]" dest="uint256: uint256 [13480,13487]"/>
  <match src="returns: returns [53250,53257]" dest="returns: returns [20340,20347]"/>
  <match src="return_statement [92779,92812]" dest="return_statement [31343,31376]"/>
  <match src="(: ( [3840,3841]" dest="(: ( [4419,4420]"/>
  <match src="returns: returns [54029,54036]" dest="returns: returns [21119,21126]"/>
  <match src="identifier: Approval [53068,53076]" dest="identifier: Approval [20158,20166]"/>
  <match src="primitive_type [53630,53637]" dest="primitive_type [20720,20727]"/>
  <match src="type_name [11232,11239]" dest="type_name [11817,11824]"/>
  <match src="identifier: State [88080,88085]" dest="identifier: State [28923,28928]"/>
  <match src="for: for [8998,9001]" dest="for: for [9583,9586]"/>
  <match src="public: public [62961,62967]" dest="public: public [26820,26826]"/>
  <match src="type_name [105282,105289]" dest="type_name [67350,67357]"/>
  <match src="identifier: implementation [105936,105950]" dest="identifier: implementation [68004,68018]"/>
  <match src="binary_expression [37743,37749]" dest="binary_expression [52324,52330]"/>
  <match src="identifier: balance [100567,100574]" dest="identifier: balance [39129,39136]"/>
  <match src="parameter [99113,99127]" dest="parameter [37675,37689]"/>
  <match src="identifier: vote [103203,103207]" dest="identifier: vote [41765,41769]"/>
  <match src="function_definition [53853,53913]" dest="function_definition [20943,21003]"/>
  <match src="{: { [10837,10838]" dest="{: { [11422,11423]"/>
  <match src="primitive_type [38190,38195]" dest="primitive_type [52771,52776]"/>
  <match src="identifier: amount [104066,104072]" dest="identifier: amount [42628,42634]"/>
  <match src="identifier: amount [103754,103760]" dest="identifier: amount [42316,42322]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [37251,37283]" dest="comment: // populate the result with &quot;0x&quot; [51832,51864]"/>
  <match src="identifier: oracle [92196,92202]" dest="identifier: oracle [30760,30766]"/>
  <match src="address: address [21431,21438]" dest="address: address [63178,63185]"/>
  <match src="(: ( [7636,7637]" dest="(: ( [8221,8222]"/>
  <match src="identifier: reason [32177,32183]" dest="identifier: reason [46758,46764]"/>
  <match src="identifier: sub [2379,2382]" dest="identifier: sub [2958,2961]"/>
  <match src="identifier: getEpochStrategy [45699,45715]" dest="identifier: getEpochStrategy [14856,14872]"/>
  <match src="type_name [37229,37234]" dest="type_name [51810,51815]"/>
  <match src="(: ( [8088,8089]" dest="(: ( [8673,8674]"/>
  <match src="function_definition [91822,91922]" dest="function_definition [30386,30486]"/>
  <match src="user_defined_type [10775,10779]" dest="user_defined_type [11360,11364]"/>
  <match src=".: . [102779,102780]" dest=".: . [41341,41342]"/>
  <match src="(: ( [103458,103459]" dest="(: ( [42020,42021]"/>
  <match src="uint256: uint256 [87811,87818]" dest="uint256: uint256 [28654,28661]"/>
  <match src="uint256: uint256 [67756,67763]" dest="uint256: uint256 [69950,69957]"/>
  <match src="type_name [53783,53790]" dest="type_name [20873,20880]"/>
  <match src="identifier: Account [93804,93811]" dest="identifier: Account [32368,32375]"/>
  <match src="type_name [80433,80440]" dest="type_name [69581,69588]"/>
  <match src="{: { [94915,94916]" dest="{: { [33479,33480]"/>
  <match src="identifier: from [15282,15286]" dest="identifier: from [25073,25077]"/>
  <match src="visibility [46623,46631]" dest="visibility [15780,15788]"/>
  <match src="}: } [32782,32783]" dest="}: } [47363,47364]"/>
  <match src="parameter [2826,2835]" dest="parameter [3405,3414]"/>
  <match src="identifier: length [36268,36274]" dest="identifier: length [50849,50855]"/>
  <match src="string_literal [90349,90410]" dest="string_literal [74982,75043]"/>
  <match src=".: . [93717,93718]" dest=".: . [32281,32282]"/>
  <match src="function: function [10190,10198]" dest="function: function [10775,10783]"/>
  <match src="(: ( [82574,82575]" dest="(: ( [58254,58255]"/>
  <match src="identifier: State [87951,87956]" dest="identifier: State [28794,28799]"/>
  <match src="call_expression [47744,47788]" dest="call_expression [16901,16945]"/>
  <match src="address: address [98124,98131]" dest="address: address [36686,36693]"/>
  <match src="uint256: uint256 [95028,95035]" dest="uint256: uint256 [33592,33599]"/>
  <match src="identifier: _state [96831,96837]" dest="identifier: _state [35395,35401]"/>
  <match src="function_definition [96885,97020]" dest="function_definition [35449,35584]"/>
  <match src=",: , [52477,52478]" dest=",: , [60320,60321]"/>
  <match src="call_argument [73143,73167]" dest="call_argument [79662,79680]"/>
  <match src="(: ( [39012,39013]" dest="(: ( [53593,53594]"/>
  <match src="identifier: State [97810,97815]" dest="identifier: State [36372,36377]"/>
  <match src="): ) [102258,102259]" dest="): ) [40820,40821]"/>
  <match src="identifier: setup [107011,107016]" dest="identifier: capture [66380,66387]"/>
  <match src="identifier: i [35358,35359]" dest="identifier: i [49939,49940]"/>
  <match src="identifier: BASE [8327,8331]" dest="identifier: BASE [8912,8916]"/>
  <match src="type_name [87732,87739]" dest="type_name [28575,28582]"/>
  <match src="call_argument [18230,18236]" dest="call_argument [55615,55621]"/>
  <match src="parameter [91647,91652]" dest="parameter [30211,30216]"/>
  <match src="): ) [89958,89959]" dest="): ) [74591,74592]"/>
  <match src="event_paramater [27623,27646]" dest="event_paramater [60183,60206]"/>
  <match src="member_expression [99642,99656]" dest="member_expression [38204,38218]"/>
  <match src="identifier: owner [101909,101914]" dest="identifier: owner [40471,40476]"/>
  <match src="function: function [96461,96469]" dest="function: function [35025,35033]"/>
  <match src="}: } [88208,88209]" dest="}: } [29051,29052]"/>
  <match src="call_argument [81902,81931]" dest="call_argument [79193,79219]"/>
  <match src="}: } [99221,99222]" dest="}: } [37783,37784]"/>
  <match src="view: view [95014,95018]" dest="view: view [33578,33582]"/>
  <match src="identifier: coupons [101306,101313]" dest="identifier: coupons [39868,39875]"/>
  <match src="primitive_type [44839,44846]" dest="primitive_type [13996,14003]"/>
  <match src=",: , [34722,34723]" dest=",: , [49303,49304]"/>
  <match src=".: . [10978,10979]" dest=".: . [11563,11564]"/>
  <match src="): ) [81600,81601]" dest="): ) [55521,55522]"/>
  <match src="contract: contract [62888,62896]" dest="contract: contract [26747,26755]"/>
  <match src=",: , [49164,49165]" dest=",: , [54916,54917]"/>
  <match src="address: address [15526,15533]" dest="address: address [25317,25324]"/>
  <match src="return_type_definition [37033,37055]" dest="return_type_definition [51614,51636]"/>
  <match src="returns: returns [93150,93157]" dest="returns: returns [31714,31721]"/>
  <match src="returns: returns [67098,67105]" dest="returns: returns [66288,66295]"/>
  <match src="member_expression [80241,80251]" dest="member_expression [69416,69426]"/>
  <match src="constant: constant [29665,29673]" dest="constant: constant [44246,44254]"/>
  <match src="identifier: amount [99121,99127]" dest="identifier: amount [37683,37689]"/>
  <match src="call_argument [10434,10438]" dest="call_argument [11019,11023]"/>
  <match src="identifier: approve [53622,53629]" dest="identifier: approve [20712,20719]"/>
  <match src="identifier: that [29809,29813]" dest="identifier: that [44390,44394]"/>
  <match src="constant: constant [45173,45181]" dest="constant: constant [14330,14338]"/>
  <match src="(: ( [83917,83918]" dest="(: ( [58146,58147]"/>
  <match src="function_body [100159,100323]" dest="function_body [38721,38885]"/>
  <match src="string [105879,105900]" dest="string [67947,67968]"/>
  <match src="==: == [10985,10987]" dest="==: == [11570,11572]"/>
  <match src="=: = [104531,104532]" dest="=: = [43093,43094]"/>
  <match src="returns: returns [9419,9426]" dest="returns: returns [10004,10011]"/>
  <match src="comment: // library with helper methods for oracles that are concerned with computing average prices [58769,58860]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [75184,75765]"/>
  <match src="identifier: value [80808,80813]" dest="identifier: value [69677,69682]"/>
  <match src="call_argument [9292,9299]" dest="call_argument [9877,9884]"/>
  <match src="): ) [82960,82961]" dest="): ) [76390,76391]"/>
  <match src="identifier: staged [100465,100471]" dest="identifier: staged [39027,39033]"/>
  <match src="}: } [103123,103124]" dest="}: } [41685,41686]"/>
  <match src="]: ] [100785,100786]" dest="]: ] [39347,39348]"/>
  <match src=".: . [103594,103595]" dest=".: . [42156,42157]"/>
  <match src="[: [ [95523,95524]" dest="[: [ [34087,34088]"/>
  <match src="identifier: _state [95991,95997]" dest="identifier: _state [34555,34561]"/>
  <match src="for: for [17385,17388]" dest="for: for [59835,59838]"/>
  <match src="enum_declaration [86688,86757]" dest="enum_declaration [27531,27600]"/>
  <match src="identifier: Storage [87640,87647]" dest="identifier: Storage [28483,28490]"/>
  <match src="internal: internal [100700,100708]" dest="internal: internal [39262,39270]"/>
  <match src="memory: memory [103953,103959]" dest="memory: memory [42515,42521]"/>
  <match src="returns: returns [47696,47703]" dest="returns: returns [16853,16860]"/>
  <match src="returns: returns [14644,14651]" dest="returns: returns [24435,24442]"/>
  <match src="expression_statement [36790,36835]" dest="expression_statement [51371,51416]"/>
  <match src="): ) [46244,46245]" dest="): ) [15401,15402]"/>
  <match src="member_expression [99884,99920]" dest="member_expression [38446,38482]"/>
  <match src="member_expression [100258,100279]" dest="member_expression [38820,38841]"/>
  <match src="primitive_type [32910,32917]" dest="primitive_type [47491,47498]"/>
  <match src="type_name [85473,85480]" dest="type_name [72279,72286]"/>
  <match src="new: new [37225,37228]" dest="new: new [51806,51809]"/>
  <match src="identifier: self [9478,9482]" dest="identifier: self [10063,10067]"/>
  <match src="identifier: D256 [47451,47455]" dest="identifier: D256 [16608,16612]"/>
  <match src="function: function [54052,54060]" dest="function: function [21142,21150]"/>
  <match src="type_name [101818,101825]" dest="type_name [40380,40387]"/>
  <match src="identifier: reject [104017,104023]" dest="identifier: reject [42579,42585]"/>
  <match src="parameter [96382,96389]" dest="parameter [34946,34953]"/>
  <match src="identifier: amount [52073,52079]" dest="identifier: amount [54918,54924]"/>
  <match src="primitive_type [37305,37309]" dest="primitive_type [51886,51890]"/>
  <match src="primitive_type [53719,53723]" dest="primitive_type [20809,20813]"/>
  <match src="member_expression [95344,95388]" dest="member_expression [33908,33952]"/>
  <match src="type_name [3765,3772]" dest="type_name [4344,4351]"/>
  <match src="type_name [15308,15315]" dest="type_name [25099,25106]"/>
  <match src="identifier: length [36315,36321]" dest="identifier: length [50896,50902]"/>
  <match src="): ) [55021,55022]" dest="): ) [22111,22112]"/>
  <match src="primitive_type [1921,1928]" dest="primitive_type [2500,2507]"/>
  <match src="}: } [2561,2562]" dest="}: } [3140,3141]"/>
  <match src="&quot;: &quot; [36167,36168]" dest="&quot;: &quot; [50748,50749]"/>
  <match src="primitive_type [30896,30903]" dest="primitive_type [45477,45484]"/>
  <match src="&lt;=: &lt;= [2486,2488]" dest="&lt;=: &lt;= [3065,3067]"/>
  <match src=":: : [46283,46284]" dest=":: : [15440,15441]"/>
  <match src="call_argument [32665,32673]" dest="call_argument [47246,47254]"/>
  <match src="return: return [47314,47320]" dest="return: return [16471,16477]"/>
  <match src="memory: memory [66522,66528]" dest="memory: memory [19762,19768]"/>
  <match src="identifier: amount [19300,19306]" dest="identifier: amount [59044,59050]"/>
  <match src="parameter [34236,34250]" dest="parameter [48817,48831]"/>
  <match src="identifier: b [8178,8179]" dest="identifier: b [8763,8764]"/>
  <match src="visibility [74689,74697]" dest="visibility [55139,55147]"/>
  <match src="number_literal: 4 [38877,38878]" dest="number_literal: 4 [53458,53459]"/>
  <match src="=: = [100280,100281]" dest="=: = [38842,38843]"/>
  <match src="primitive_type [93121,93128]" dest="primitive_type [31685,31692]"/>
  <match src="&quot;: &quot; [80581,80582]" dest="&quot;: &quot; [69738,69739]"/>
  <match src="number_literal: 0 [36297,36298]" dest="number_literal: 0 [50878,50879]"/>
  <match src="(: ( [100805,100806]" dest="(: ( [39367,39368]"/>
  <match src="visibility [7991,7999]" dest="visibility [8576,8584]"/>
  <match src="returns: returns [1490,1497]" dest="returns: returns [2069,2076]"/>
  <match src=":: : [7169,7170]" dest=":: : [7754,7755]"/>
  <match src="parameter [22836,22850]" dest="parameter [55349,55363]"/>
  <match src="identifier: updateAllowanceCoupons [101604,101626]" dest="identifier: updateAllowanceCoupons [40166,40188]"/>
  <match src="identifier: dollarAmount [77705,77717]" dest="identifier: dollarAmount [61786,61798]"/>
  <match src="identifier: encodePacked [30013,30025]" dest="identifier: encodePacked [44594,44606]"/>
  <match src="): ) [92766,92767]" dest="): ) [31330,31331]"/>
  <match src="type_name [23642,23649]" dest="type_name [62900,62907]"/>
  <match src="(: ( [46810,46811]" dest="(: ( [15967,15968]"/>
  <match src=".: . [103788,103789]" dest=".: . [42350,42351]"/>
  <match src="state_mutability [63714,63718]" dest="state_mutability [66035,66039]"/>
  <match src="parameter [10206,10222]" dest="parameter [10791,10807]"/>
  <match src="identifier: Fluid [105650,105655]" dest="identifier: Fluid [67718,67723]"/>
  <match src="contract: contract [87631,87639]" dest="contract: contract [28474,28482]"/>
  <match src="primitive_type [100117,100124]" dest="primitive_type [38679,38686]"/>
  <match src="assignment_expression [102238,102283]" dest="assignment_expression [40800,40845]"/>
  <match src="call_struct_argument [7619,7648]" dest="call_struct_argument [8204,8233]"/>
  <match src="member_expression [94335,94347]" dest="member_expression [32899,32911]"/>
  <match src="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [6653,6771]" dest="comment: /**  * @title Decimal  * @author dYdX  *  * Library that defines a fixed-point number with 18 decimal places.  */ [7238,7356]"/>
  <match src="}: } [95830,95831]" dest="}: } [34394,34395]"/>
  <match src="comment: // for more details about how this works. [85777,85818]" dest="comment: // for more details about how this works. [72583,72624]"/>
  <match src="identifier: getDAOExitLockupEpochs [101554,101576]" dest="identifier: getDAOExitLockupEpochs [40116,40138]"/>
  <match src="call_argument [5987,5999]" dest="call_argument [6566,6578]"/>
  <match src="identifier: Decimal [46490,46497]" dest="identifier: Decimal [15647,15654]"/>
  <match src="primitive_type [98876,98882]" dest="primitive_type [37438,37444]"/>
  <match src="call_expression [3837,3876]" dest="call_expression [4416,4455]"/>
  <match src="function_body [97089,97206]" dest="function_body [35653,35770]"/>
  <match src="member_expression [9930,9940]" dest="member_expression [10515,10525]"/>
  <match src="): ) [54632,54633]" dest="): ) [21722,21723]"/>
  <match src="{: { [17363,17364]" dest="{: { [59813,59814]"/>
  <match src="}: } [96737,96738]" dest="}: } [35301,35302]"/>
  <match src="constant: constant [43883,43891]" dest="constant: constant [13040,13048]"/>
  <match src="(: ( [53629,53630]" dest="(: ( [20719,20720]"/>
  <match src="variable_declaration [36260,36274]" dest="variable_declaration [50841,50855]"/>
  <match src="bytes32: bytes32 [30312,30319]" dest="bytes32: bytes32 [44893,44900]"/>
  <match src="primitive_type [30853,30857]" dest="primitive_type [45434,45438]"/>
  <match src="(: ( [67508,67509]" dest="(: ( [66387,66388]"/>
  <match src="call_argument [9268,9302]" dest="call_argument [9853,9887]"/>
  <match src="parameter [98258,98275]" dest="parameter [36820,36837]"/>
  <match src=",: , [54081,54082]" dest=",: , [21171,21172]"/>
  <match src="member_expression [101130,101145]" dest="member_expression [39692,39707]"/>
  <match src="external: external [13055,13063]" dest="external: external [22846,22854]"/>
  <match src="(: ( [102671,102672]" dest="(: ( [41233,41234]"/>
  <match src="identifier: getPartial [10134,10144]" dest="identifier: getPartial [10719,10729]"/>
  <match src="(: ( [104450,104451]" dest="(: ( [43012,43013]"/>
  <match src=":: : [45884,45885]" dest=":: : [15041,15042]"/>
  <match src="}: } [36915,36916]" dest="}: } [51496,51497]"/>
  <match src="primitive_type [102596,102603]" dest="primitive_type [41158,41165]"/>
  <match src="identifier: ERC20 [17338,17343]" dest="identifier: Market [59784,59790]"/>
  <match src="emit: emit [90016,90020]" dest="emit: emit [74649,74653]"/>
  <match src="=: = [99882,99883]" dest="=: = [38444,38445]"/>
  <match src="parameter [36984,36997]" dest="parameter [51565,51578]"/>
  <match src="primitive_type [102981,102988]" dest="primitive_type [41543,41550]"/>
  <match src="(: ( [89994,89995]" dest="(: ( [74627,74628]"/>
  <match src="): ) [46081,46082]" dest="): ) [15238,15239]"/>
  <match src="returns: returns [77728,77735]" dest="returns: returns [55925,55932]"/>
  <match src="type_name [53475,53482]" dest="type_name [20565,20572]"/>
  <match src="): ) [45716,45717]" dest="): ) [14873,14874]"/>
  <match src="function_body [102380,102516]" dest="function_body [40942,41078]"/>
  <match src="function_body [1964,2033]" dest="function_body [2543,2612]"/>
  <match src="identifier: to [15304,15306]" dest="identifier: to [25095,25097]"/>
  <match src=",: , [32158,32159]" dest=",: , [46739,46740]"/>
  <match src="call_argument [81996,82006]" dest="call_argument [77020,77030]"/>
  <match src="identifier: Account [105358,105365]" dest="identifier: Account [67426,67433]"/>
  <match src="primitive_type [53904,53911]" dest="primitive_type [20994,21001]"/>
  <match src="identifier: COMMA [33339,33344]" dest="identifier: COMMA [47920,47925]"/>
  <match src="return_type_definition [10075,10096]" dest="return_type_definition [10660,10681]"/>
  <match src="function: function [96322,96330]" dest="function: function [34886,34894]"/>
  <match src="expression_statement [105966,105968]" dest="expression_statement [68034,68036]"/>
  <match src="member_expression [96409,96426]" dest="member_expression [34973,34990]"/>
  <match src="uint256: uint256 [43797,43804]" dest="uint256: uint256 [12954,12961]"/>
  <match src="(: ( [105827,105828]" dest="(: ( [67895,67896]"/>
  <match src="comment: // remove the last decimal digit [36851,36883]" dest="comment: // remove the last decimal digit [51432,51464]"/>
  <match src="string [21532,21571]" dest="string [63294,63341]"/>
  <match src="variable_declaration [2516,2525]" dest="variable_declaration [3095,3104]"/>
  <match src="comment: // get the final string length [36192,36222]" dest="comment: // get the final string length [50773,50803]"/>
  <match src="primitive_type [50900,50907]" dest="primitive_type [26059,26066]"/>
  <match src="identifier: a [1462,1463]" dest="identifier: a [2041,2042]"/>
  <match src="struct_member [87890,87903]" dest="struct_member [28733,28746]"/>
  <match src="primitive_type [4427,4434]" dest="primitive_type [5006,5013]"/>
  <match src="member_expression [104194,104209]" dest="member_expression [42756,42771]"/>
  <match src="type_name [95625,95632]" dest="type_name [34189,34196]"/>
  <match src="member_expression [83505,83515]" dest="member_expression [78640,78650]"/>
  <match src="(: ( [80507,80508]" dest="(: ( [70136,70137]"/>
  <match src="identifier: epoch [103054,103059]" dest="identifier: epoch [41616,41621]"/>
  <match src="identifier: epoch [102151,102156]" dest="identifier: epoch [40713,40718]"/>
  <match src="*: * [3185,3186]" dest="*: * [3764,3765]"/>
  <match src="{: { [43691,43692]" dest="{: { [12848,12849]"/>
  <match src="identifier: sender [80512,80518]" dest="identifier: sender [70141,70147]"/>
  <match src="uint256: uint256 [87157,87164]" dest="uint256: uint256 [28000,28007]"/>
  <match src="identifier: blockTimestamp [94866,94880]" dest="identifier: blockTimestamp [33430,33444]"/>
  <match src="visibility [80167,80175]" dest="visibility [69343,69351]"/>
  <match src="identifier: sub [99917,99920]" dest="identifier: sub [38479,38482]"/>
  <match src=",: , [83920,83921]" dest=",: , [58149,58150]"/>
  <match src="assembly_statement [35777,35872]" dest="assembly_statement [50358,50453]"/>
  <match src="identifier: abi [30481,30484]" dest="identifier: abi [45062,45065]"/>
  <match src="(: ( [4499,4500]" dest="(: ( [5078,5079]"/>
  <match src="): ) [66587,66588]" dest="): ) [64920,64921]"/>
  <match src="call_expression [8501,8535]" dest="call_expression [9086,9120]"/>
  <match src="array_access [99563,99587]" dest="array_access [38125,38149]"/>
  <match src=".: . [62984,62985]" dest=".: . [26843,26844]"/>
  <match src="identifier: account [72257,72264]" dest="identifier: account [79497,79504]"/>
  <match src="type_name [91436,91442]" dest="type_name [30000,30006]"/>
  <match src="identifier: supply [99986,99992]" dest="identifier: supply [38548,38554]"/>
  <match src="string [82852,82881]" dest="string [78825,78840]"/>
  <match src="identifier: BASE [7894,7898]" dest="identifier: BASE [8479,8483]"/>
  <match src="function_definition [104097,104422]" dest="function_definition [42659,42984]"/>
  <match src="call_argument [21510,21530]" dest="call_argument [63272,63292]"/>
  <match src="function_definition [99447,99738]" dest="function_definition [38009,38300]"/>
  <match src="call_expression [83253,83310]" dest="call_expression [71005,71048]"/>
  <match src="variable_declaration_statement [38061,38088]" dest="variable_declaration_statement [52642,52669]"/>
  <match src="]: ] [103406,103407]" dest="]: ] [41968,41969]"/>
  <match src="call_argument [102169,102170]" dest="call_argument [40731,40732]"/>
  <match src="identifier: Provider [88023,88031]" dest="identifier: Provider [28866,28874]"/>
  <match src="call_argument [46277,46305]" dest="call_argument [15434,15462]"/>
  <match src="identifier: Decimal [67107,67114]" dest="identifier: Decimal [66297,66304]"/>
  <match src="=: = [66573,66574]" dest="=: = [64904,64905]"/>
  <match src="&quot;: &quot; [3253,3254]" dest="&quot;: &quot; [3832,3833]"/>
  <match src="yul_path [35824,35830]" dest="yul_path [50405,50411]"/>
  <match src="comment: /**      * Governance      */ [102898,102929]" dest="comment: /**      * Governance      */ [41460,41491]"/>
  <match src="function: function [50822,50830]" dest="function: function [25981,25989]"/>
  <match src="variable_declaration_statement [37495,37509]" dest="variable_declaration_statement [52076,52090]"/>
  <match src="]: ] [103271,103272]" dest="]: ] [41833,41834]"/>
  <match src="if_statement [8876,8929]" dest="if_statement [9461,9514]"/>
  <match src="function_definition [1441,1622]" dest="function_definition [2020,2201]"/>
  <match src="type_name [13907,13914]" dest="type_name [23698,23705]"/>
  <match src=",: , [82237,82238]" dest=",: , [62300,62301]"/>
  <match src="revert: revert [32311,32317]" dest="revert: revert [46892,46898]"/>
  <match src="&quot;: &quot; [23039,23040]" dest="&quot;: &quot; [55493,55494]"/>
  <match src="identifier: b [11632,11633]" dest="identifier: b [12217,12218]"/>
  <match src="identifier: account [93266,93273]" dest="identifier: account [31830,31837]"/>
  <match src="visibility [62961,62967]" dest="visibility [26820,26826]"/>
  <match src="): ) [31984,31985]" dest="): ) [46565,46566]"/>
  <match src="identifier: D256 [7432,7436]" dest="identifier: D256 [8017,8021]"/>
  <match src="type_name [98009,98016]" dest="type_name [36571,36578]"/>
  <match src="): ) [95934,95935]" dest="): ) [34498,34499]"/>
  <match src="parameter [45741,45761]" dest="parameter [14898,14918]"/>
  <match src="]: ] [91797,91798]" dest="]: ] [30361,30362]"/>
  <match src="function_body [46511,46577]" dest="function_body [15668,15734]"/>
  <match src="binary_expression [10974,10989]" dest="binary_expression [11559,11574]"/>
  <match src="]: ] [37697,37698]" dest="]: ] [52278,52279]"/>
  <match src="parameter [1955,1962]" dest="parameter [2534,2541]"/>
  <match src="parameter [30873,30885]" dest="parameter [45454,45466]"/>
  <match src="uint256: uint256 [37084,37091]" dest="uint256: uint256 [51665,51672]"/>
  <match src="view: view [53890,53894]" dest="view: view [20980,20984]"/>
  <match src="call_argument [28155,28162]" dest="call_argument [54894,54901]"/>
  <match src="visibility [47151,47159]" dest="visibility [16308,16316]"/>
  <match src="primitive_type [24905,24912]" dest="primitive_type [18200,18207]"/>
  <match src="(: ( [97881,97882]" dest="(: ( [36443,36444]"/>
  <match src="memory: memory [8470,8476]" dest="memory: memory [9055,9061]"/>
  <match src="assignment_expression [98457,98514]" dest="assignment_expression [37019,37076]"/>
  <match src="call_argument [81538,81573]" dest="call_argument [70250,70288]"/>
  <match src="state_mutability [1941,1945]" dest="state_mutability [2520,2524]"/>
  <match src="type_name [72135,72139]" dest="type_name [79528,79532]"/>
  <match src="parameter [101457,101472]" dest="parameter [40019,40034]"/>
  <match src="primitive_type [96244,96251]" dest="primitive_type [34808,34815]"/>
  <match src="(: ( [8094,8095]" dest="(: ( [8679,8680]"/>
  <match src="identifier: totalSupply [53407,53418]" dest="identifier: totalSupply [20497,20508]"/>
  <match src="identifier: _account [63695,63703]" dest="identifier: candidate [76260,76269]"/>
  <match src="): ) [67743,67744]" dest="): ) [61825,61826]"/>
  <match src="identifier: value [80520,80525]" dest="identifier: balance [70149,70156]"/>
  <match src="string [57391,57428]" dest="string [71141,71177]"/>
  <match src="identifier: Decimal [67467,67474]" dest="identifier: Decimal [66330,66337]"/>
  <match src="primitive_type [79880,79887]" dest="primitive_type [68996,69003]"/>
  <match src="call_argument [102800,102826]" dest="call_argument [41362,41388]"/>
  <match src="expression_statement [21667,21759]" dest="expression_statement [55772,55831]"/>
  <match src="(: ( [36553,36554]" dest="(: ( [51134,51135]"/>
  <match src="member_expression [46685,46697]" dest="member_expression [15842,15854]"/>
  <match src="internal: internal [28303,28311]" dest="internal: internal [57679,57687]"/>
  <match src=".: . [96415,96416]" dest=".: . [34979,34980]"/>
  <match src="identifier: FILE [50113,50117]" dest="identifier: FILE [69183,69187]"/>
  <match src="): ) [10690,10691]" dest="): ) [11275,11276]"/>
  <match src="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [85712,85767]" dest="comment: // See https://ethereum.stackexchange.com/a/14016/36603 [72518,72573]"/>
  <match src=".: . [101395,101396]" dest=".: . [39957,39958]"/>
  <match src="array_access [96972,97000]" dest="array_access [35536,35564]"/>
  <match src="type_name [10950,10954]" dest="type_name [11535,11539]"/>
  <match src="call_expression [93005,93027]" dest="call_expression [31569,31591]"/>
  <match src="return_statement [7605,7652]" dest="return_statement [8190,8237]"/>
  <match src="returns: returns [55037,55044]" dest="returns: returns [22127,22134]"/>
  <match src=",: , [79903,79904]" dest=",: , [69019,69020]"/>
  <match src="expression_statement [36529,36539]" dest="expression_statement [51110,51120]"/>
  <match src="visibility [35081,35088]" dest="visibility [49662,49669]"/>
  <match src="identifier: Account [94006,94013]" dest="identifier: Account [32570,32577]"/>
  <match src="function: function [45926,45934]" dest="function: function [15083,15091]"/>
  <match src="primitive_type [39210,39214]" dest="primitive_type [53791,53795]"/>
  <match src="call_expression [80630,80644]" dest="call_expression [55684,55698]"/>
  <match src="internal: internal [2848,2856]" dest="internal: internal [3427,3435]"/>
  <match src="(: ( [5273,5274]" dest="(: ( [5852,5853]"/>
  <match src="parameter [34193,34202]" dest="parameter [48774,48783]"/>
  <match src="bool: bool [53677,53681]" dest="bool: bool [20767,20771]"/>
  <match src=".: . [101403,101404]" dest=".: . [39965,39966]"/>
  <match src="parameter [53630,53645]" dest="parameter [20720,20735]"/>
  <match src="(: ( [31108,31109]" dest="(: ( [45689,45690]"/>
  <match src="identifier: D256 [46693,46697]" dest="identifier: D256 [15850,15854]"/>
  <match src="primitive_type [55446,55453]" dest="primitive_type [22536,22543]"/>
  <match src="}: } [95395,95396]" dest="}: } [33959,33960]"/>
  <match src="identifier: payloadA [31976,31984]" dest="identifier: payloadA [46557,46565]"/>
  <match src=".: . [99977,99978]" dest=".: . [38539,38540]"/>
  <match src="parameter [95281,95294]" dest="parameter [33845,33858]"/>
  <match src="state_variable_declaration [105169,105214]" dest="state_variable_declaration [67237,67282]"/>
  <match src="parameter [9594,9614]" dest="parameter [10179,10199]"/>
  <match src="(: ( [103910,103911]" dest="(: ( [42472,42473]"/>
  <match src="call_argument [33124,33148]" dest="call_argument [47705,47729]"/>
  <match src="variable_declaration [38190,38209]" dest="variable_declaration [52771,52790]"/>
  <match src="identifier: owner [53093,53098]" dest="identifier: owner [20183,20188]"/>
  <match src="}: } [105977,105978]" dest="}: } [68045,68046]"/>
  <match src="uint256: uint256 [37585,37592]" dest="uint256: uint256 [52166,52173]"/>
  <match src=".: . [98463,98464]" dest=".: . [37025,37026]"/>
  <match src="expression_statement [2476,2506]" dest="expression_statement [3055,3085]"/>
  <match src="}: } [93418,93419]" dest="}: } [31982,31983]"/>
  <match src="primitive_type [96767,96774]" dest="primitive_type [35331,35338]"/>
  <match src="call_argument [89995,90001]" dest="call_argument [74628,74634]"/>
  <match src="identifier: account [100778,100785]" dest="identifier: account [39340,39347]"/>
  <match src="call_expression [7888,7899]" dest="call_expression [8473,8484]"/>
  <match src="&quot;: &quot; [89944,89945]" dest="&quot;: &quot; [74577,74578]"/>
  <match src="identifier: GOVERNANCE_EMERGENCY_DELAY [46838,46864]" dest="identifier: GOVERNANCE_EMERGENCY_DELAY [15995,16021]"/>
  <match src="call_argument [82522,82527]" dest="call_argument [70833,70838]"/>
  <match src="function: function [7067,7075]" dest="function: function [7652,7660]"/>
  <match src="identifier: accounts [100481,100489]" dest="identifier: accounts [39043,39051]"/>
  <match src="function: function [96598,96606]" dest="function: function [35162,35170]"/>
  <match src="call_argument [33226,33232]" dest="call_argument [47807,47813]"/>
  <match src="returns: returns [96373,96380]" dest="returns: returns [34937,34944]"/>
  <match src="return: return [5294,5300]" dest="return: return [5873,5879]"/>
  <match src="state_mutability [11305,11309]" dest="state_mutability [11890,11894]"/>
  <match src="{: { [10102,10103]" dest="{: { [10687,10688]"/>
  <match src="uint256: uint256 [98560,98567]" dest="uint256: uint256 [37122,37129]"/>
  <match src=",: , [49148,49149]" dest=",: , [54901,54902]"/>
  <match src=".: . [96859,96860]" dest=".: . [35423,35424]"/>
  <match src="address: address [96480,96487]" dest="address: address [35044,35051]"/>
  <match src="): ) [93448,93449]" dest="): ) [32012,32013]"/>
  <match src="identifier: incrementTotalRedeemable [99088,99112]" dest="identifier: incrementTotalRedeemable [37650,37674]"/>
  <match src=",: , [10438,10439]" dest=",: , [11023,11024]"/>
  <match src="parameter [11521,11528]" dest="parameter [12106,12113]"/>
  <match src="enum_value: Frozen [86711,86717]" dest="enum_value: Frozen [27554,27560]"/>
  <match src="identifier: Burn [54250,54254]" dest="identifier: Burn [21340,21344]"/>
  <match src="}: } [8542,8543]" dest="}: } [9127,9128]"/>
  <match src="=: = [67493,67494]" dest="=: = [66369,66370]"/>
  <match src=".: . [100272,100273]" dest=".: . [38834,38835]"/>
  <match src="bytes: bytes [55316,55321]" dest="bytes: bytes [22406,22411]"/>
  <match src="): ) [100148,100149]" dest="): ) [38710,38711]"/>
  <match src="identifier: COLON [34553,34558]" dest="identifier: COLON [49134,49139]"/>
  <match src="parameter [11024,11040]" dest="parameter [11609,11625]"/>
  <match src="identifier: value [9715,9720]" dest="identifier: value [10300,10305]"/>
  <match src="string [81902,81931]" dest="string [79193,79219]"/>
  <match src="internal: internal [10663,10671]" dest="internal: internal [11248,11256]"/>
  <match src="identifier: input [35230,35235]" dest="identifier: input [49811,49816]"/>
  <match src="(: ( [94500,94501]" dest="(: ( [33064,33065]"/>
  <match src="): ) [47969,47970]" dest="): ) [17126,17127]"/>
  <match src="identifier: that [68318,68322]" dest="identifier: that [78872,78876]"/>
  <match src="(: ( [9772,9773]" dest="(: ( [10357,10358]"/>
  <match src="inheritance_specifier [97810,97815]" dest="inheritance_specifier [36372,36377]"/>
  <match src=".: . [82779,82780]" dest=".: . [78749,78750]"/>
  <match src="member_expression [94689,94723]" dest="member_expression [33253,33287]"/>
  <match src="returns: returns [96099,96106]" dest="returns: returns [34663,34670]"/>
  <match src="member_expression [91774,91806]" dest="member_expression [30338,30370]"/>
  <match src="identifier: sender [82498,82504]" dest="identifier: sender [70809,70815]"/>
  <match src="=: = [98479,98480]" dest="=: = [37041,37042]"/>
  <match src="member_expression [92899,92921]" dest="member_expression [31463,31485]"/>
  <match src="struct_member [44347,44362]" dest="struct_member [13504,13519]"/>
  <match src="false [98335,98340]" dest="false [36897,36902]"/>
  <match src="function: function [98391,98399]" dest="function: function [36953,36961]"/>
  <match src="identifier: b [6022,6023]" dest="identifier: b [6601,6602]"/>
  <match src="uint256: uint256 [37495,37502]" dest="uint256: uint256 [52076,52083]"/>
  <match src="primitive_type [92649,92656]" dest="primitive_type [31213,31220]"/>
  <match src="): ) [53944,53945]" dest="): ) [21034,21035]"/>
  <match src="type_name [54738,54745]" dest="type_name [21828,21835]"/>
  <match src="state_mutability [2442,2446]" dest="state_mutability [3021,3025]"/>
  <match src="identifier: b [10440,10441]" dest="identifier: b [11025,11026]"/>
  <match src="emit: emit [21835,21839]" dest="emit: emit [63820,63824]"/>
  <match src="type_name [103727,103734]" dest="type_name [42289,42296]"/>
  <match src="): ) [33887,33888]" dest="): ) [48468,48469]"/>
  <match src="bytes32: bytes32 [54147,54154]" dest="bytes32: bytes32 [21237,21244]"/>
  <match src="uint256: uint256 [96108,96115]" dest="uint256: uint256 [34672,34679]"/>
  <match src="expression_statement [100170,100248]" dest="expression_statement [38732,38810]"/>
  <match src="member_expression [93905,93926]" dest="member_expression [32469,32490]"/>
  <match src="view: view [93282,93286]" dest="view: view [31846,31850]"/>
  <match src="parameter [47962,47969]" dest="parameter [17119,17126]"/>
  <match src="string: string [30452,30458]" dest="string: string [45033,45039]"/>
  <match src="identifier: BASE [6894,6898]" dest="identifier: BASE [7479,7483]"/>
  <match src="call_argument [10571,10575]" dest="call_argument [11156,11160]"/>
  <match src="memory: memory [10914,10920]" dest="memory: memory [11499,11505]"/>
  <match src="identifier: EpochStrategy [44273,44286]" dest="identifier: EpochStrategy [13430,13443]"/>
  <match src=".: . [100726,100727]" dest=".: . [39288,39289]"/>
  <match src="member_expression [94933,94948]" dest="member_expression [33497,33512]"/>
  <match src="uint: uint [53200,53204]" dest="uint: uint [20290,20294]"/>
  <match src="user_defined_type [67107,67119]" dest="user_defined_type [66297,66309]"/>
  <match src="}: } [7182,7183]" dest="}: } [7767,7768]"/>
  <match src="parameter [10084,10095]" dest="parameter [10669,10680]"/>
  <match src="&quot;: &quot; [19506,19507]" dest="&quot;: &quot; [70697,70698]"/>
  <match src="function: function [46169,46177]" dest="function: function [15326,15334]"/>
  <match src="call_expression [81353,81366]" dest="call_expression [70093,70106]"/>
  <match src="): ) [83882,83883]" dest="): ) [58788,58789]"/>
  <match src="primitive_type [86905,86912]" dest="primitive_type [27748,27755]"/>
  <match src="uint256: uint256 [2456,2463]" dest="uint256: uint256 [3035,3042]"/>
  <match src="assignment_expression [100170,100247]" dest="assignment_expression [38732,38809]"/>
  <match src="(: ( [37315,37316]" dest="(: ( [51896,51897]"/>
  <match src="identifier: candidate [103397,103406]" dest="identifier: candidate [41959,41968]"/>
  <match src=".: . [93473,93474]" dest=".: . [32037,32038]"/>
  <match src="(: ( [103151,103152]" dest="(: ( [41713,41714]"/>
  <match src="interface: interface [12934,12943]" dest="interface: interface [22725,22734]"/>
  <match src="identifier: ASCII_LOWER_EX [38349,38363]" dest="identifier: ASCII_LOWER_EX [52930,52944]"/>
  <match src="return_type_definition [46637,46666]" dest="return_type_definition [15794,15823]"/>
  <match src="identifier: sender [82614,82620]" dest="identifier: sender [69898,69904]"/>
  <match src="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [28533,29146]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [43114,43727]"/>
  <match src="parameter [62977,62996]" dest="parameter [26836,26855]"/>
  <match src="identifier: balanceOfRewardedWithPhantom [73069,73097]" dest="identifier: couponAmount [62141,62153]"/>
  <match src="call_expression [105936,105952]" dest="call_expression [68004,68020]"/>
  <match src=",: , [80681,80682]" dest=",: , [69814,69815]"/>
  <match src="identifier: amount [99380,99386]" dest="identifier: amount [37942,37948]"/>
  <match src="): ) [52125,52126]" dest="): ) [63670,63671]"/>
  <match src="parameter [32126,32135]" dest="parameter [46707,46716]"/>
  <match src="identifier: createCandidate [102946,102961]" dest="identifier: createCandidate [41508,41523]"/>
  <match src="member_expression [96409,96445]" dest="member_expression [34973,35009]"/>
  <match src="event_paramater [80051,80074]" dest="event_paramater [76178,76201]"/>
  <match src="uint256: uint256 [45101,45108]" dest="uint256: uint256 [14258,14265]"/>
  <match src="indexed: indexed [79831,79838]" dest="indexed: indexed [80576,80583]"/>
  <match src="type_name [69851,69858]" dest="type_name [64628,64635]"/>
  <match src="returns: returns [91427,91434]" dest="returns: returns [29991,29998]"/>
  <match src="call_argument [3847,3875]" dest="call_argument [4426,4454]"/>
  <match src="parameter [101659,101673]" dest="parameter [40221,40235]"/>
  <match src="binary_expression [93957,93983]" dest="binary_expression [32521,32547]"/>
  <match src="member_expression [103229,103246]" dest="member_expression [41791,41808]"/>
  <match src="type_name [53809,53813]" dest="type_name [20899,20903]"/>
  <match src="return_type_definition [46367,46384]" dest="return_type_definition [15524,15541]"/>
  <match src="type_cast_expression [38338,38365]" dest="type_cast_expression [52919,52946]"/>
  <match src="parameter [8601,8610]" dest="parameter [9186,9195]"/>
  <match src="bool: bool [87600,87604]" dest="bool: bool [28443,28447]"/>
  <match src="=: = [99348,99349]" dest="=: = [37910,37911]"/>
  <match src="bool: bool [95756,95760]" dest="bool: bool [34320,34324]"/>
  <match src="string_literal [81902,81931]" dest="string_literal [79193,79219]"/>
  <match src="member_expression [100440,100455]" dest="member_expression [39002,39017]"/>
  <match src="type_name [27623,27630]" dest="type_name [60183,60190]"/>
  <match src="binary_expression [37885,37891]" dest="binary_expression [52466,52472]"/>
  <match src="return_statement [8903,8918]" dest="return_statement [9488,9503]"/>
  <match src="internal: internal [9395,9403]" dest="internal: internal [9980,9988]"/>
  <match src="bytes32: bytes32 [33677,33684]" dest="bytes32: bytes32 [48258,48265]"/>
  <match src="variable_declaration_statement [38482,38496]" dest="variable_declaration_statement [53063,53077]"/>
  <match src="identifier: div [3761,3764]" dest="identifier: div [4340,4343]"/>
  <match src="identifier: D256 [7741,7745]" dest="identifier: D256 [8326,8330]"/>
  <match src="function_definition [102937,103124]" dest="function_definition [41499,41686]"/>
  <match src="(: ( [50835,50836]" dest="(: ( [25994,25995]"/>
  <match src="state_mutability [55677,55681]" dest="state_mutability [17977,17981]"/>
  <match src="string_literal [82721,82748]" dest="string_literal [58368,58393]"/>
  <match src=".: . [99992,99993]" dest=".: . [38554,38555]"/>
  <match src="): ) [9302,9303]" dest="): ) [9887,9888]"/>
  <match src=".: . [72058,72059]" dest=".: . [58107,58108]"/>
  <match src="identifier: lockedUntil [104219,104230]" dest="identifier: lockedUntil [42781,42792]"/>
  <match src="call_argument [46698,46732]" dest="call_argument [15855,15889]"/>
  <match src="uint256: uint256 [68229,68236]" dest="uint256: uint256 [61643,61650]"/>
  <match src="returns: returns [92217,92224]" dest="returns: returns [30781,30788]"/>
  <match src="): ) [96497,96498]" dest="): ) [35061,35062]"/>
  <match src="{: { [87365,87366]" dest="{: { [28208,28209]"/>
  <match src="): ) [93350,93351]" dest="): ) [31914,31915]"/>
  <match src="visibility [53421,53429]" dest="visibility [20511,20519]"/>
  <match src="visibility [28303,28311]" dest="visibility [57679,57687]"/>
  <match src="uint256: uint256 [101835,101842]" dest="uint256: uint256 [40397,40404]"/>
  <match src="type_name [55192,55199]" dest="type_name [22282,22289]"/>
  <match src=",: , [7644,7645]" dest=",: , [8229,8230]"/>
  <match src="library: library [29296,29303]" dest="library: library [43877,43884]"/>
  <match src="}: } [81665,81666]" dest="}: } [70362,70363]"/>
  <match src="identifier: COMMA [29585,29590]" dest="identifier: COMMA [44166,44171]"/>
  <match src="*: * [37603,37604]" dest="*: * [52184,52185]"/>
  <match src="type_name [35350,35357]" dest="type_name [49931,49938]"/>
  <match src="expression_statement [99947,100013]" dest="expression_statement [38509,38575]"/>
  <match src="type_name [3810,3817]" dest="type_name [4389,4396]"/>
  <match src="user_defined_type [79364,79375]" dest="user_defined_type [68653,68660]"/>
  <match src="address: address [54354,54361]" dest="address: address [21444,21451]"/>
  <match src="identifier: D256 [10648,10652]" dest="identifier: D256 [11233,11237]"/>
  <match src="function_body [92658,92703]" dest="function_body [31222,31267]"/>
  <match src="return_type_definition [95474,95491]" dest="return_type_definition [34038,34055]"/>
  <match src="identifier: sender [82292,82298]" dest="identifier: sender [62232,62238]"/>
  <match src="primitive_type [36039,36046]" dest="primitive_type [50620,50627]"/>
  <match src="identifier: incrementEpoch [102084,102098]" dest="identifier: incrementEpoch [40646,40660]"/>
  <match src="type_name [50883,50890]" dest="type_name [26042,26049]"/>
  <match src=".: . [99953,99954]" dest=".: . [38515,38516]"/>
  <match src="call_argument [105623,105630]" dest="call_argument [67691,67698]"/>
  <match src="=: = [64421,64422]" dest="=: = [59885,59886]"/>
  <match src="(: ( [82784,82785]" dest="(: ( [78754,78755]"/>
  <match src="type_name [22196,22203]" dest="type_name [58696,58703]"/>
  <match src="identifier: char [37701,37705]" dest="identifier: char [52282,52286]"/>
  <match src="identifier: value [80974,80979]" dest="identifier: value [70349,70354]"/>
  <match src="identifier: FILE [105194,105198]" dest="identifier: FILE [67262,67266]"/>
  <match src=".: . [95530,95531]" dest=".: . [34094,34095]"/>
  <match src="type_name [64569,64576]" dest="type_name [76095,76102]"/>
  <match src="string [52285,52328]" dest="string [63757,63795]"/>
  <match src="function_definition [100331,100609]" dest="function_definition [38893,39171]"/>
  <match src="call_struct_argument [9912,9956]" dest="call_struct_argument [10497,10541]"/>
  <match src=",: , [34006,34007]" dest=",: , [48587,48588]"/>
  <match src="primitive_type [35350,35357]" dest="primitive_type [49931,49938]"/>
  <match src=".: . [80384,80385]" dest=".: . [69532,69533]"/>
  <match src=":: : [9917,9918]" dest=":: : [10502,10503]"/>
  <match src="identifier: D256 [67475,67479]" dest="identifier: D256 [66338,66342]"/>
  <match src="(: ( [33458,33459]" dest="(: ( [48039,48040]"/>
  <match src="return_type_definition [9419,9440]" dest="return_type_definition [10004,10025]"/>
  <match src="identifier: msg [80187,80190]" dest="identifier: msg [76320,76323]"/>
  <match src="type_name [80009,80016]" dest="type_name [76143,76150]"/>
  <match src="expression_statement [36574,36580]" dest="expression_statement [51155,51161]"/>
  <match src=",: , [68355,68356]" dest=",: , [70739,70740]"/>
  <match src="emit_statement [100025,100068]" dest="emit_statement [38587,38630]"/>
  <match src="identifier: encodePacked [32369,32381]" dest="identifier: encodePacked [46950,46962]"/>
  <match src=",: , [52491,52492]" dest=",: , [60343,60344]"/>
  <match src="internal: internal [9627,9635]" dest="internal: internal [10212,10220]"/>
  <match src="(: ( [79703,79704]" dest="(: ( [68778,68779]"/>
  <match src="returns: returns [55147,55154]" dest="returns: returns [22237,22244]"/>
  <match src="call_argument [77808,77816]" dest="call_argument [57740,57762]"/>
  <match src="(: ( [83905,83906]" dest="(: ( [58130,58131]"/>
  <match src="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [43096,43671]" dest="comment: /*     Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [35777,36350]"/>
  <match src="identifier: reason [101338,101344]" dest="identifier: reason [39900,39906]"/>
  <match src="call_expression [80220,80274]" dest="call_expression [69394,69449]"/>
  <match src="identifier: account [100736,100743]" dest="identifier: account [39298,39305]"/>
  <match src="type_name [46934,46941]" dest="type_name [16091,16098]"/>
  <match src="identifier: D256 [47412,47416]" dest="identifier: D256 [16569,16573]"/>
  <match src="identifier: _state [100720,100726]" dest="identifier: _state [39282,39288]"/>
  <match src="primitive_type [93766,93773]" dest="primitive_type [32330,32337]"/>
  <match src="call_expression [8321,8332]" dest="call_expression [8906,8917]"/>
  <match src="{: { [87146,87147]" dest="{: { [27989,27990]"/>
  <match src="primitive_type [99791,99798]" dest="primitive_type [38353,38360]"/>
  <match src="string [49891,49910]" dest="string [63494,63531]"/>
  <match src="}: } [31509,31510]" dest="}: } [46090,46091]"/>
  <match src="using: using [17370,17375]" dest="using: using [59820,59825]"/>
  <match src="identifier: Approval [23890,23898]" dest="identifier: CouponApproval [63094,63108]"/>
  <match src="visibility [92628,92634]" dest="visibility [31192,31198]"/>
  <match src="parameter [63049,63056]" dest="parameter [26908,26915]"/>
  <match src="parameter [67736,67743]" dest="parameter [61818,61825]"/>
  <match src=".: . [98959,98960]" dest=".: . [37521,37522]"/>
  <match src="primitive_type [15266,15273]" dest="primitive_type [25057,25064]"/>
  <match src="primitive_type [30948,30955]" dest="primitive_type [45529,45536]"/>
  <match src="function: function [103295,103303]" dest="function: function [41857,41865]"/>
  <match src=".: . [101899,101900]" dest=".: . [40461,40462]"/>
  <match src="bool: bool [10537,10541]" dest="bool: bool [11122,11126]"/>
  <match src=".: . [100895,100896]" dest=".: . [39457,39458]"/>
  <match src="member_expression [100204,100239]" dest="member_expression [38766,38801]"/>
  <match src="(: ( [7120,7121]" dest="(: ( [7705,7706]"/>
  <match src=".: . [99648,99649]" dest=".: . [38210,38211]"/>
  <match src="function: function [95111,95119]" dest="function: function [33675,33683]"/>
  <match src="=: = [37505,37506]" dest="=: = [52086,52087]"/>
  <match src="emit: emit [82482,82486]" dest="emit: emit [70793,70797]"/>
  <match src=".: . [96978,96979]" dest=".: . [35542,35543]"/>
  <match src="identifier: epoch [95597,95602]" dest="identifier: epoch [34161,34166]"/>
  <match src="type_name [54293,54297]" dest="type_name [21383,21387]"/>
  <match src="identifier: dollar [93005,93011]" dest="identifier: dollar [31569,31575]"/>
  <match src="type_name [97075,97082]" dest="type_name [35639,35646]"/>
  <match src="visibility [46353,46361]" dest="visibility [15510,15518]"/>
  <match src="return_type_definition [96511,96528]" dest="return_type_definition [35075,35092]"/>
  <match src="identifier: POOL_EXIT_LOCKUP_EPOCHS [47201,47224]" dest="identifier: POOL_EXIT_LOCKUP_EPOCHS [16358,16381]"/>
  <match src="type_name [53797,53804]" dest="type_name [20887,20894]"/>
  <match src="(: ( [10144,10145]" dest="(: ( [10729,10730]"/>
  <match src="assignment_expression [101893,102025]" dest="assignment_expression [40455,40587]"/>
  <match src="}: } [93497,93498]" dest="}: } [32061,32062]"/>
  <match src="primitive_type [95138,95145]" dest="primitive_type [33702,33709]"/>
  <match src="identifier: D256 [47713,47717]" dest="identifier: D256 [16870,16874]"/>
  <match src="return_type_definition [54846,54917]" dest="return_type_definition [21936,22007]"/>
  <match src="identifier: D256 [9141,9145]" dest="identifier: D256 [9726,9730]"/>
  <match src="): ) [68236,68237]" dest="): ) [61650,61651]"/>
  <match src=":: : [94028,94029]" dest=":: : [32592,32593]"/>
  <match src="parameter [76007,76021]" dest="parameter [61606,61620]"/>
  <match src="expression_statement [80220,80275]" dest="expression_statement [69394,69450]"/>
  <match src="): ) [55102,55103]" dest="): ) [22192,22193]"/>
  <match src="parameter [8190,8210]" dest="parameter [8775,8795]"/>
  <match src="call_argument [99668,99674]" dest="call_argument [38230,38236]"/>
  <match src=",: , [87403,87404]" dest=",: , [28246,28247]"/>
  <match src=",: , [8332,8333]" dest=",: , [8917,8918]"/>
  <match src="type_name [98876,98882]" dest="type_name [37438,37444]"/>
  <match src="internal: internal [47271,47279]" dest="internal: internal [16428,16436]"/>
  <match src="): ) [86912,86913]" dest="): ) [27755,27756]"/>
  <match src="uint256: uint256 [98860,98867]" dest="uint256: uint256 [37422,37429]"/>
  <match src="): ) [4614,4615]" dest="): ) [5193,5194]"/>
  <match src="member_expression [92253,92275]" dest="member_expression [30817,30839]"/>
  <match src="identifier: add [102165,102168]" dest="identifier: add [40727,40730]"/>
  <match src="primitive_type [96616,96623]" dest="primitive_type [35180,35187]"/>
  <match src="identifier: epoch [93957,93962]" dest="identifier: epoch [32521,32526]"/>
  <match src="address: address [78284,78291]" dest="address: address [59085,59092]"/>
  <match src="return_statement [92246,92276]" dest="return_statement [30810,30840]"/>
  <match src="call_argument [98972,98978]" dest="call_argument [37534,37540]"/>
  <match src="parameter [7521,7530]" dest="parameter [8106,8115]"/>
  <match src="identifier: implementation [89532,89546]" dest="identifier: implementation [74165,74179]"/>
  <match src="(: ( [81647,81648]" dest="(: ( [71309,71310]"/>
  <match src="member_expression [95510,95547]" dest="member_expression [34074,34111]"/>
  <match src="=: = [103625,103626]" dest="=: = [42187,42188]"/>
  <match src="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [13924,14579]" dest="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [23715,24370]"/>
  <match src="visibility [45382,45389]" dest="visibility [14539,14546]"/>
  <match src="struct: struct [87026,87032]" dest="struct: struct [27869,27875]"/>
  <match src=":: : [11644,11645]" dest=":: : [12229,12230]"/>
  <match src=".: . [82650,82651]" dest=".: . [58297,58298]"/>
  <match src="identifier: lessPhantom [82058,82069]" dest="identifier: totalCoupons [61204,61216]"/>
  <match src="parameter [8792,8801]" dest="parameter [9377,9386]"/>
  <match src="call_expression [93454,93472]" dest="call_expression [32018,32036]"/>
  <match src="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [15573,16148]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [12247,12828]"/>
  <match src="{: { [36300,36301]" dest="{: { [50881,50882]"/>
  <match src="identifier: balance [102780,102787]" dest="identifier: balance [41342,41349]"/>
  <match src="expression_statement [82145,82189]" dest="expression_statement [71059,71103]"/>
  <match src="identifier: value [8979,8984]" dest="identifier: value [9564,9569]"/>
  <match src="): ) [54156,54157]" dest="): ) [21246,21247]"/>
  <match src="}: } [47639,47640]" dest="}: } [16796,16797]"/>
  <match src="**: ** [6903,6905]" dest="**: ** [7488,7490]"/>
  <match src="primitive_type [13078,13085]" dest="primitive_type [22869,22876]"/>
  <match src="call_expression [81190,81367]" dest="call_expression [69968,70107]"/>
  <match src="return: return [46396,46402]" dest="return: return [15553,15559]"/>
  <match src="): ) [76938,76939]" dest="): ) [60801,60802]"/>
  <match src="): ) [92520,92521]" dest="): ) [31084,31085]"/>
  <match src="identifier: impl [97083,97087]" dest="identifier: impl [35647,35651]"/>
  <match src="(: ( [72031,72032]" dest="(: ( [58063,58064]"/>
  <match src="identifier: result [37216,37222]" dest="identifier: result [51797,51803]"/>
  <match src="{: { [83814,83815]" dest="{: { [58720,58721]"/>
  <match src="member_expression [34459,34475]" dest="member_expression [49040,49056]"/>
  <match src="identifier: D256 [8292,8296]" dest="identifier: D256 [8877,8881]"/>
  <match src="return: return [95194,95200]" dest="return: return [33758,33764]"/>
  <match src="string [22263,22296]" dest="string [62574,62603]"/>
  <match src="user_defined_type [9543,9547]" dest="user_defined_type [10128,10132]"/>
  <match src="primitive_type [54083,54090]" dest="primitive_type [21173,21180]"/>
  <match src="function_body [95037,95103]" dest="function_body [33601,33667]"/>
  <match src="identifier: account [79970,79977]" dest="identifier: account [68913,68920]"/>
  <match src="identifier: newClaimable [82239,82251]" dest="identifier: epoch [62302,62307]"/>
  <match src="&gt;=: &gt;= [1557,1559]" dest="&gt;=: &gt;= [2136,2138]"/>
  <match src="call_expression [8960,8987]" dest="call_expression [9545,9572]"/>
  <match src="identifier: spender [101826,101833]" dest="identifier: spender [40388,40395]"/>
  <match src="call_expression [80537,80617]" dest="call_expression [69694,69777]"/>
  <match src="variable_declaration_tuple [67139,67214]" dest="variable_declaration_tuple [65793,65853]"/>
  <match src="): ) [80226,80227]" dest="): ) [69401,69402]"/>
  <match src="constant: constant [29375,29383]" dest="constant: constant [43956,43964]"/>
  <match src="}: } [92598,92599]" dest="}: } [31162,31163]"/>
  <match src="variable_declaration_tuple [83059,83095]" dest="variable_declaration_tuple [61009,61070]"/>
  <match src="return_statement [9898,9960]" dest="return_statement [10483,10545]"/>
  <match src="): ) [46909,46910]" dest="): ) [16066,16067]"/>
  <match src="array_access [100824,100844]" dest="array_access [39386,39406]"/>
  <match src="bool: bool [33609,33613]" dest="bool: bool [48190,48194]"/>
  <match src="visibility [7211,7219]" dest="visibility [7796,7804]"/>
  <match src="uint112: uint112 [54550,54557]" dest="uint112: uint112 [21640,21647]"/>
  <match src="function_definition [30245,30821]" dest="function_definition [44826,45402]"/>
  <match src="returns: returns [54846,54853]" dest="returns: returns [21936,21943]"/>
  <match src=".: . [95798,95799]" dest=".: . [34362,34363]"/>
  <match src="call_expression [100282,100315]" dest="call_expression [38844,38877]"/>
  <match src="identifier: swap [55265,55269]" dest="identifier: swap [22355,22359]"/>
  <match src="uint256: uint256 [6877,6884]" dest="uint256: uint256 [7462,7469]"/>
  <match src="primitive_type [53125,53129]" dest="primitive_type [20215,20219]"/>
  <match src="identifier: COLON [32459,32464]" dest="identifier: COLON [47040,47045]"/>
  <match src="type_name [69823,69830]" dest="type_name [64753,64760]"/>
  <match src=",: , [30548,30549]" dest=",: , [45129,45130]"/>
  <match src="function: function [100617,100625]" dest="function: function [39179,39187]"/>
  <match src="call_expression [82072,82111]" dest="call_expression [70502,70567]"/>
  <match src="number_literal: 10 [6901,6903]" dest="number_literal: 10 [7486,7488]"/>
  <match src="=: = [38586,38587]" dest="=: = [53167,53168]"/>
  <match src="(: ( [95280,95281]" dest="(: ( [33844,33845]"/>
  <match src="identifier: value [8508,8513]" dest="identifier: value [9093,9098]"/>
  <match src=".: . [100210,100211]" dest=".: . [38772,38773]"/>
  <match src="): ) [53879,53880]" dest="): ) [20969,20970]"/>
  <match src="=&gt;: =&gt; [88069,88071]" dest="=&gt;: =&gt; [28912,28914]"/>
  <match src="identifier: incrementTotalBonded [98400,98420]" dest="identifier: incrementTotalBonded [36962,36982]"/>
  <match src="identifier: msg [80853,80856]" dest="identifier: msg [70603,70606]"/>
  <match src="memory: memory [7828,7834]" dest="memory: memory [8413,8419]"/>
  <match src="identifier: reason [89995,90001]" dest="identifier: reason [74628,74634]"/>
  <match src="state_mutability [92858,92862]" dest="state_mutability [31422,31426]"/>
  <match src="&gt;: &gt; [10729,10730]" dest="&gt;: &gt; [11314,11315]"/>
  <match src="{: { [95973,95974]" dest="{: { [34537,34538]"/>
  <match src="identifier: mint [50938,50942]" dest="identifier: mint [26097,26101]"/>
  <match src="): ) [96115,96116]" dest="): ) [34679,34680]"/>
  <match src="member_expression [11092,11102]" dest="member_expression [11677,11687]"/>
  <match src="primitive_type [36425,36430]" dest="primitive_type [51006,51011]"/>
  <match src="(: ( [34042,34043]" dest="(: ( [48623,48624]"/>
  <match src="contract_body [29312,39261]" dest="contract_body [43893,53842]"/>
  <match src="}: } [96876,96877]" dest="}: } [35440,35441]"/>
  <match src="identifier: deadline [54117,54125]" dest="identifier: deadline [21207,21215]"/>
  <match src="return: return [45540,45546]" dest="return: return [14697,14703]"/>
  <match src="type_name [36097,36102]" dest="type_name [50678,50683]"/>
  <match src="memory: memory [65656,65662]" dest="memory: memory [19470,19476]"/>
  <match src=",: , [21464,21465]" dest=",: , [63211,63212]"/>
  <match src="primitive_type [99807,99813]" dest="primitive_type [38369,38375]"/>
  <match src="call_argument [34638,34644]" dest="call_argument [49219,49225]"/>
  <match src="): ) [21571,21572]" dest="): ) [63341,63342]"/>
  <match src="binary_expression [11550,11568]" dest="binary_expression [12135,12153]"/>
  <match src="primitive_type [5240,5247]" dest="primitive_type [5819,5826]"/>
  <match src="external: external [15050,15058]" dest="external: external [24841,24849]"/>
  <match src="): ) [97052,97053]" dest="): ) [35616,35617]"/>
  <match src="identifier: value [10165,10170]" dest="identifier: value [10750,10755]"/>
  <match src="identifier: supply [87794,87800]" dest="identifier: supply [28637,28643]"/>
  <match src="user_defined_type [10499,10503]" dest="user_defined_type [11084,11088]"/>
  <match src="): ) [50996,50997]" dest="): ) [26155,26156]"/>
  <match src="call_expression [78172,78227]" dest="call_expression [77710,77749]"/>
  <match src="function: function [92711,92719]" dest="function: function [31275,31283]"/>
  <match src="): ) [93136,93137]" dest="): ) [31700,31701]"/>
  <match src="parameter [55270,55285]" dest="parameter [22360,22375]"/>
  <match src="memory: memory [35197,35203]" dest="memory: memory [49778,49784]"/>
  <match src="pure: pure [56573,56577]" dest="pure: pure [18230,18234]"/>
  <match src="member_expression [9292,9299]" dest="member_expression [9877,9884]"/>
  <match src="): ) [32243,32244]" dest="): ) [46824,46825]"/>
  <match src="comment: // each byte takes two characters [37538,37571]" dest="comment: // each byte takes two characters [52119,52152]"/>
  <match src="}: } [45558,45559]" dest="}: } [14715,14716]"/>
  <match src="parameter [29824,29833]" dest="parameter [44405,44414]"/>
  <match src=",: , [79788,79789]" dest=",: , [68863,68864]"/>
  <match src="call_argument [1989,1990]" dest="call_argument [2568,2569]"/>
  <match src="&quot;: &quot; [82341,82342]" dest="&quot;: &quot; [78570,78571]"/>
  <match src="identifier: unfreeze [101448,101456]" dest="identifier: unfreeze [40010,40018]"/>
  <match src="parameter [5878,5887]" dest="parameter [6457,6466]"/>
  <match src="type_name [87913,87920]" dest="type_name [28756,28763]"/>
  <match src=",: , [34250,34251]" dest=",: , [48831,48832]"/>
  <match src="visibility [9836,9844]" dest="visibility [10421,10429]"/>
  <match src="primitive_type [13852,13859]" dest="primitive_type [23643,23650]"/>
  <match src="&quot;: &quot; [80872,80873]" dest="&quot;: &quot; [78991,78992]"/>
  <match src="identifier: epoch [102252,102257]" dest="identifier: epoch [40814,40819]"/>
  <match src="=: = [102879,102880]" dest="=: = [41441,41442]"/>
  <match src="identifier: setImplementation [89802,89819]" dest="identifier: setImplementation [74435,74452]"/>
  <match src="&quot;: &quot; [52285,52286]" dest="&quot;: &quot; [63757,63758]"/>
  <match src="): ) [2878,2879]" dest="): ) [3457,3458]"/>
  <match src="identifier: pool [87740,87744]" dest="identifier: pool [28583,28587]"/>
  <match src="(: ( [91550,91551]" dest="(: ( [30114,30115]"/>
  <match src="identifier: amount [98429,98435]" dest="identifier: amount [36991,36997]"/>
  <match src="parameter [13509,13523]" dest="parameter [23300,23314]"/>
  <match src="uint256: uint256 [81088,81095]" dest="uint256: uint256 [60947,60954]"/>
  <match src="identifier: account [95908,95915]" dest="identifier: account [34472,34479]"/>
  <match src="==: == [93635,93637]" dest="==: == [32199,32201]"/>
  <match src="constant: constant [44441,44449]" dest="constant: constant [13598,13606]"/>
  <match src="identifier: D256 [9810,9814]" dest="identifier: D256 [10395,10399]"/>
  <match src="identifier: amount [99668,99674]" dest="identifier: amount [38230,38236]"/>
  <match src="primitive_type [47294,47301]" dest="primitive_type [16451,16458]"/>
  <match src=".: . [102260,102261]" dest=".: . [40822,40823]"/>
  <match src="[: [ [37686,37687]" dest="[: [ [52267,52268]"/>
  <match src="(: ( [82226,82227]" dest="(: ( [62289,62290]"/>
  <match src="=: = [1529,1530]" dest="=: = [2108,2109]"/>
  <match src="primitive_type [39013,39017]" dest="primitive_type [53594,53598]"/>
  <match src=",: , [93547,93548]" dest=",: , [32111,32112]"/>
  <match src="function_definition [47116,47232]" dest="function_definition [16273,16389]"/>
  <match src="call_argument [76903,76938]" dest="call_argument [60770,60801]"/>
  <match src=",: , [65257,65258]" dest=",: , [79333,79334]"/>
  <match src="view: view [54965,54969]" dest="view: view [22055,22059]"/>
  <match src=",: , [23904,23905]" dest=",: , [63119,63120]"/>
  <match src="return_type_definition [85504,85518]" dest="return_type_definition [72310,72324]"/>
  <match src="type_name [85513,85517]" dest="type_name [72319,72323]"/>
  <match src="pragma_directive [1121,1145]" dest="pragma_directive [1123,1147]"/>
  <match src="(: ( [92225,92226]" dest="(: ( [30789,30790]"/>
  <match src="primitive_type [99280,99286]" dest="primitive_type [37842,37848]"/>
  <match src=".: . [94341,94342]" dest=".: . [32905,32906]"/>
  <match src="event_paramater [54210,54222]" dest="event_paramater [21300,21312]"/>
  <match src="member_expression [35213,35229]" dest="member_expression [49794,49810]"/>
  <match src="): ) [100918,100919]" dest="): ) [39480,39481]"/>
  <match src="function_body [101684,101760]" dest="function_body [40246,40322]"/>
  <match src="external: external [80167,80175]" dest="external: external [69343,69351]"/>
  <match src="visibility [103968,103976]" dest="visibility [42530,42538]"/>
  <match src="primitive_type [52431,52438]" dest="primitive_type [60280,60287]"/>
  <match src="(: ( [98506,98507]" dest="(: ( [37068,37069]"/>
  <match src="function_body [92337,92383]" dest="function_body [30901,30947]"/>
  <match src="library_declaration [43673,48008]" dest="library_declaration [12830,17165]"/>
  <match src="call_expression [76891,76939]" dest="call_expression [60758,60802]"/>
  <match src="{: { [98181,98182]" dest="{: { [36743,36744]"/>
  <match src="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [62311,62886]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [79775,80356]"/>
  <match src="type_name [88023,88031]" dest="type_name [28866,28874]"/>
  <match src=".: . [80471,80472]" dest=".: . [70432,70433]"/>
  <match src="identifier: balance [99156,99163]" dest="identifier: balance [37718,37725]"/>
  <match src=",: , [55234,55235]" dest=",: , [22324,22325]"/>
  <match src="identifier: sub [101326,101329]" dest="identifier: sub [39888,39891]"/>
  <match src=":: : [8972,8973]" dest=":: : [9557,9558]"/>
  <match src="primitive_type [34236,34243]" dest="primitive_type [48817,48824]"/>
  <match src=",: , [103944,103945]" dest=",: , [42506,42507]"/>
  <match src="type_name [91647,91652]" dest="type_name [30211,30216]"/>
  <match src="uint256: uint256 [82050,82057]" dest="uint256: uint256 [61196,61203]"/>
  <match src="[: [ [101972,101973]" dest="[: [ [40534,40535]"/>
  <match src="identifier: _state [100955,100961]" dest="identifier: _state [39517,39523]"/>
  <match src="parameter [98277,98291]" dest="parameter [36839,36853]"/>
  <match src="function_definition [96050,96177]" dest="function_definition [34614,34741]"/>
  <match src="call_argument [31880,31906]" dest="call_argument [46461,46487]"/>
  <match src="call_argument [82529,82541]" dest="call_argument [70840,70846]"/>
  <match src="identifier: capture [62951,62958]" dest="identifier: capture [26810,26817]"/>
  <match src="): ) [103966,103967]" dest="): ) [42528,42529]"/>
  <match src="address: address [103152,103159]" dest="address: address [41714,41721]"/>
  <match src="view: view [63714,63718]" dest="view: view [66035,66039]"/>
  <match src="expression_statement [80285,80329]" dest="expression_statement [69460,69504]"/>
  <match src="visibility [66492,66499]" dest="visibility [19818,19825]"/>
  <match src="event_paramater [79979,79992]" dest="event_paramater [68922,68935]"/>
  <match src="identifier: bonded [98633,98639]" dest="identifier: bonded [37195,37201]"/>
  <match src="contract_body [89007,90547]" dest="contract_body [73640,75180]"/>
  <match src="string_literal [23707,23745]" dest="string_literal [61915,61946]"/>
  <match src="identifier: _state [96972,96978]" dest="identifier: _state [35536,35542]"/>
  <match src="type_name [44674,44681]" dest="type_name [13831,13838]"/>
  <match src="(: ( [8529,8530]" dest="(: ( [9114,9115]"/>
  <match src=",: , [97922,97923]" dest=",: , [36484,36485]"/>
  <match src="{: { [98068,98069]" dest="{: { [36630,36631]"/>
  <match src=".: . [65816,65817]" dest=".: . [66557,66558]"/>
  <match src="primitive_type [32937,32944]" dest="primitive_type [47518,47525]"/>
  <match src="primitive_type [77737,77744]" dest="primitive_type [55934,55941]"/>
  <match src="string_literal [21717,21757]" dest="string_literal [55799,55829]"/>
  <match src="visibility [50916,50922]" dest="visibility [26075,26081]"/>
  <match src="identifier: LPAREN [31271,31277]" dest="identifier: LPAREN [45852,45858]"/>
  <match src="&quot;: &quot; [91589,91590]" dest="&quot;: &quot; [30153,30154]"/>
  <match src="visibility [17434,17441]" dest="visibility [59052,59059]"/>
  <match src="[: [ [100880,100881]" dest="[: [ [39442,39443]"/>
  <match src="state_mutability [94294,94298]" dest="state_mutability [32858,32862]"/>
  <match src="state_mutability [96094,96098]" dest="state_mutability [34658,34662]"/>
  <match src="call_expression [94689,94705]" dest="call_expression [33253,33269]"/>
  <match src="call_argument [83282,83290]" dest="call_argument [71015,71028]"/>
  <match src="parameter [10262,10266]" dest="parameter [10847,10851]"/>
  <match src="&quot;: &quot; [24337,24338]" dest="&quot;: &quot; [62074,62075]"/>
  <match src="identifier: newLock [104396,104403]" dest="identifier: newLock [42958,42965]"/>
  <match src="): ) [92412,92413]" dest="): ) [30976,30977]"/>
  <match src=".: . [92905,92906]" dest=".: . [31469,31470]"/>
  <match src="return_statement [95773,95824]" dest="return_statement [34337,34388]"/>
  <match src="parameter [19992,20010]" dest="parameter [18172,18189]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [35446,35508]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [50027,50089]"/>
  <match src="visibility [95462,95468]" dest="visibility [34026,34032]"/>
  <match src="address: address [87567,87574]" dest="address: address [28410,28417]"/>
  <match src="parameter [24739,24753]" dest="parameter [17946,17960]"/>
  <match src="identifier: GOVERNANCE_PERIOD [46403,46420]" dest="identifier: GOVERNANCE_PERIOD [15560,15577]"/>
  <match src=".: . [76898,76899]" dest=".: . [60765,60766]"/>
  <match src="identifier: stringifyTruncated [30524,30542]" dest="identifier: stringifyTruncated [45105,45123]"/>
  <match src="): ) [36141,36142]" dest="): ) [50722,50723]"/>
  <match src="pure: pure [5260,5264]" dest="pure: pure [5839,5843]"/>
  <match src="identifier: EPOCH_PERIOD [44506,44518]" dest="identifier: EPOCH_PERIOD [13663,13675]"/>
  <match src="member_expression [98481,98506]" dest="member_expression [37043,37068]"/>
  <match src="{: { [46698,46699]" dest="{: { [15855,15856]"/>
  <match src="call_argument [31350,31355]" dest="call_argument [45931,45936]"/>
  <match src="struct_member [86941,86960]" dest="struct_member [27784,27803]"/>
  <match src="type_name [29867,29874]" dest="type_name [44448,44455]"/>
  <match src="identifier: candidates [96838,96848]" dest="identifier: candidates [35402,35412]"/>
  <match src="primitive_type [2516,2523]" dest="primitive_type [3095,3102]"/>
  <match src="call_expression [31797,31821]" dest="call_expression [46378,46402]"/>
  <match src="): ) [1474,1475]" dest="): ) [2053,2054]"/>
  <match src="]: ] [103809,103810]" dest="]: ] [42371,42372]"/>
  <match src="primitive_type [87187,87194]" dest="primitive_type [28030,28037]"/>
  <match src="constant: constant [45390,45398]" dest="constant: constant [14547,14555]"/>
  <match src="member_expression [101893,101908]" dest="member_expression [40455,40470]"/>
  <match src="function_definition [4414,4759]" dest="function_definition [4993,5338]"/>
  <match src="function_definition [91930,92040]" dest="function_definition [30494,30604]"/>
  <match src="): ) [82519,82520]" dest="): ) [70830,70831]"/>
  <match src="primitive_type [78284,78291]" dest="primitive_type [59085,59092]"/>
  <match src="expression_statement [84420,84510]" dest="expression_statement [76846,76981]"/>
  <match src="identifier: balance [99357,99364]" dest="identifier: balance [37919,37926]"/>
  <match src="return: return [102720,102726]" dest="return: return [41282,41288]"/>
  <match src="type_name [70111,70118]" dest="type_name [64811,64818]"/>
  <match src="primitive_type [37585,37592]" dest="primitive_type [52166,52173]"/>
  <match src="primitive_type [72249,72256]" dest="primitive_type [79489,79496]"/>
  <match src="(: ( [96479,96480]" dest="(: ( [35043,35044]"/>
  <match src="}: } [98098,98099]" dest="}: } [36660,36661]"/>
  <match src="call_argument [32701,32707]" dest="call_argument [47282,47288]"/>
  <match src="): ) [95822,95823]" dest="): ) [34386,34387]"/>
  <match src="identifier: self [9354,9358]" dest="identifier: self [9939,9943]"/>
  <match src="return_type_definition [92426,92443]" dest="return_type_definition [30990,31007]"/>
  <match src="function_definition [8120,8352]" dest="function_definition [8705,8937]"/>
  <match src="identifier: epoch [93557,93562]" dest="identifier: epoch [32121,32126]"/>
  <match src="+: + [39127,39128]" dest="+: + [53708,53709]"/>
  <match src="): ) [13209,13210]" dest="): ) [23000,23001]"/>
  <match src="identifier: Permission [105138,105148]" dest="identifier: Permission [67206,67216]"/>
  <match src="comment: // return ASCII digit (0-9) [39035,39062]" dest="comment: // return ASCII digit (0-9) [53616,53643]"/>
  <match src=":: : [47763,47764]" dest=":: : [16920,16921]"/>
  <match src="primitive_type [54068,54075]" dest="primitive_type [21158,21165]"/>
  <match src="address: address [54307,54314]" dest="address: address [21397,21404]"/>
  <match src="identifier: j [36897,36898]" dest="identifier: j [51478,51479]"/>
  <match src="}: } [86046,86047]" dest="}: } [72852,72853]"/>
  <match src="identifier: success [89979,89986]" dest="identifier: success [74612,74619]"/>
  <match src="return: return [8285,8291]" dest="return: return [8870,8876]"/>
  <match src="type_name [53077,53084]" dest="type_name [20167,20174]"/>
  <match src="update_expression [36315,36323]" dest="update_expression [50896,50904]"/>
  <match src="(: ( [94880,94881]" dest="(: ( [33444,33445]"/>
  <match src="parameter [49296,49309]" dest="parameter [70387,70400]"/>
  <match src="primitive_type [92759,92766]" dest="primitive_type [31323,31330]"/>
  <match src="number_literal: 0 [93381,93382]" dest="number_literal: 0 [31945,31946]"/>
  <match src="user_defined_type [10648,10652]" dest="user_defined_type [11233,11237]"/>
  <match src="(: ( [8132,8133]" dest="(: ( [8717,8718]"/>
  <match src="identifier: staged [100273,100279]" dest="identifier: staged [38835,38841]"/>
  <match src="}: } [48007,48008]" dest="}: } [17164,17165]"/>
  <match src="identifier: balanceCheck [82455,82467]" dest="identifier: balanceCheck [55295,55307]"/>
  <match src="type_name [98258,98265]" dest="type_name [36820,36827]"/>
  <match src="type_cast_expression [36805,36833]" dest="type_cast_expression [51386,51414]"/>
  <match src="identifier: candidate [102970,102979]" dest="identifier: candidate [41532,41541]"/>
  <match src="function_definition [93506,93740]" dest="function_definition [32070,32304]"/>
  <match src="(: ( [13489,13490]" dest="(: ( [23280,23281]"/>
  <match src="(: ( [76936,76937]" dest="(: ( [60799,60800]"/>
  <match src="event_paramater [15526,15549]" dest="event_paramater [25317,25340]"/>
  <match src="): ) [96359,96360]" dest="): ) [34923,34924]"/>
  <match src="variable_declaration [36401,36418]" dest="variable_declaration [50982,50999]"/>
  <match src="): ) [94551,94552]" dest="): ) [33115,33116]"/>
  <match src="visibility [45165,45172]" dest="visibility [14322,14329]"/>
  <match src="parameter [40669,40684]" dest="parameter [63213,63226]"/>
  <match src="comment: // '&gt;' [29689,29695]" dest="comment: // '&gt;' [44270,44276]"/>
  <match src="identifier: account [27690,27697]" dest="identifier: account [60078,60085]"/>
  <match src=".: . [93027,93028]" dest=".: . [31591,31592]"/>
  <match src="identifier: FOUR_BIT_MASK [38697,38710]" dest="identifier: FOUR_BIT_MASK [53278,53291]"/>
  <match src="identifier: compareTo [11419,11428]" dest="identifier: compareTo [12004,12013]"/>
  <match src=".: . [10164,10165]" dest=".: . [10749,10750]"/>
  <match src="}: } [102290,102291]" dest="}: } [40852,40853]"/>
  <match src="identifier: periodFor [96194,96203]" dest="identifier: periodFor [34758,34767]"/>
  <match src="call_argument [82089,82099]" dest="call_argument [70555,70565]"/>
  <match src="): ) [30632,30633]" dest="): ) [45213,45214]"/>
  <match src="}: } [38922,38923]" dest="}: } [53503,53504]"/>
  <match src="parameter [32169,32183]" dest="parameter [46750,46764]"/>
  <match src="expression_statement [99618,99676]" dest="expression_statement [38180,38238]"/>
  <match src="address: address [89516,89523]" dest="address: address [74149,74156]"/>
  <match src="primitive_type [95720,95727]" dest="primitive_type [34284,34291]"/>
  <match src="return_type_definition [9218,9239]" dest="return_type_definition [9803,9824]"/>
  <match src="primitive_type [80253,80260]" dest="primitive_type [69428,69435]"/>
  <match src="type_name [17389,17396]" dest="type_name [59839,59846]"/>
  <match src="[: [ [100752,100753]" dest="[: [ [39314,39315]"/>
  <match src="): ) [99300,99301]" dest="): ) [37862,37863]"/>
  <match src="event_paramater [97924,97937]" dest="event_paramater [36486,36499]"/>
  <match src="visibility [93783,93789]" dest="visibility [32347,32353]"/>
  <match src="): ) [86866,86867]" dest="): ) [27709,27710]"/>
  <match src=".: . [98632,98633]" dest=".: . [37194,37195]"/>
  <match src="function: function [47354,47362]" dest="function: function [16511,16519]"/>
  <match src="{: { [46820,46821]" dest="{: { [15977,15978]"/>
  <match src="(: ( [80561,80562]" dest="(: ( [69718,69719]"/>
  <match src="primitive_type [76559,76566]" dest="primitive_type [58255,58262]"/>
  <match src="call_argument [31092,31457]" dest="call_argument [45673,46038]"/>
  <match src="identifier: candidate [103035,103044]" dest="identifier: candidate [41597,41606]"/>
  <match src="type_name [44906,44913]" dest="type_name [14063,14070]"/>
  <match src="primitive_type [89516,89523]" dest="primitive_type [74149,74156]"/>
  <match src="member_expression [103017,103034]" dest="member_expression [41579,41596]"/>
  <match src="string: string [89988,89994]" dest="string: string [74621,74627]"/>
  <match src="): ) [45527,45528]" dest="): ) [14684,14685]"/>
  <match src="type_name [81169,81176]" dest="type_name [61142,61149]"/>
  <match src="visibility [15050,15058]" dest="visibility [24841,24849]"/>
  <match src="function_body [7262,7309]" dest="function_body [7847,7894]"/>
  <match src="visibility [13055,13063]" dest="visibility [22846,22854]"/>
  <match src="while_statement [36285,36357]" dest="while_statement [50866,50938]"/>
  <match src="identifier: greaterThan [10332,10343]" dest="identifier: greaterThan [10917,10928]"/>
  <match src="visibility [7363,7371]" dest="visibility [7948,7956]"/>
  <match src="expression_statement [80825,80912]" dest="expression_statement [70578,70623]"/>
  <match src="user_defined_type [8465,8469]" dest="user_defined_type [9050,9054]"/>
  <match src="identifier: _state [99618,99624]" dest="identifier: _state [38180,38186]"/>
  <match src="}: } [10181,10182]" dest="}: } [10766,10767]"/>
  <match src="parameter [8765,8781]" dest="parameter [9350,9366]"/>
  <match src="address: address [83870,83877]" dest="address: address [58776,58783]"/>
  <match src="identifier: BASE [10157,10161]" dest="identifier: BASE [10742,10746]"/>
  <match src="internal: internal [104470,104478]" dest="internal: internal [43032,43040]"/>
  <match src="): ) [85488,85489]" dest="): ) [72294,72295]"/>
  <match src="identifier: reason [33660,33666]" dest="identifier: reason [48241,48247]"/>
  <match src="comment: // r.length = length; [35832,35853]" dest="comment: // r.length = length; [50413,50434]"/>
  <match src="parameter [55446,55453]" dest="parameter [22536,22543]"/>
  <match src="function: function [80415,80423]" dest="function: function [69563,69571]"/>
  <match src="): ) [101230,101231]" dest="): ) [39792,39793]"/>
  <match src="comment: // computes square roots using the babylonian method [55480,55532]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [66614,67195]"/>
  <match src="primitive_type [98141,98148]" dest="primitive_type [36703,36710]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [43892,43911]" dest="identifier: BOOTSTRAPPING_PRICE [13049,13068]"/>
  <match src="parameter [103324,103341]" dest="parameter [41886,41903]"/>
  <match src="identifier: _state [101381,101387]" dest="identifier: _state [39943,39949]"/>
  <match src="return: return [94682,94688]" dest="return: return [33246,33252]"/>
  <match src="type_name [94599,94622]" dest="type_name [33163,33186]"/>
  <match src="number_literal: 1 [43751,43752]" dest="number_literal: 1 [12908,12909]"/>
  <match src=".: . [102496,102497]" dest=".: . [41058,41059]"/>
  <match src="address: address [97882,97889]" dest="address: address [36444,36451]"/>
  <match src="user_defined_type [8143,8147]" dest="user_defined_type [8728,8732]"/>
  <match src="{: { [31001,31002]" dest="{: { [45582,45583]"/>
  <match src="call_argument [1986,1987]" dest="call_argument [2565,2566]"/>
  <match src="call_argument [99714,99721]" dest="call_argument [38276,38283]"/>
  <match src="): ) [78297,78298]" dest="): ) [59106,59107]"/>
  <match src="primitive_type [87075,87082]" dest="primitive_type [27918,27925]"/>
  <match src="identifier: _state [99947,99953]" dest="identifier: _state [38509,38515]"/>
  <match src="primitive_type [37084,37091]" dest="primitive_type [51665,51672]"/>
  <match src="}: } [94362,94363]" dest="}: } [32926,32927]"/>
  <match src="type_name [95589,95596]" dest="type_name [34153,34160]"/>
  <match src="identifier: require [57733,57740]" dest="identifier: decrementBalanceOf [71189,71207]"/>
  <match src="visibility [47528,47536]" dest="visibility [16685,16693]"/>
  <match src="{: { [8065,8066]" dest="{: { [8650,8651]"/>
  <match src="internal: internal [100420,100428]" dest="internal: internal [38982,38990]"/>
  <match src="function: function [53280,53288]" dest="function: function [20370,20378]"/>
  <match src=",: , [50098,50099]" dest=",: , [54993,54994]"/>
  <match src="{: { [94671,94672]" dest="{: { [33235,33236]"/>
  <match src="): ) [73049,73050]" dest="): ) [65424,65425]"/>
  <match src=".: . [33824,33825]" dest=".: . [48405,48406]"/>
  <match src="): ) [7132,7133]" dest="): ) [7717,7718]"/>
  <match src="identifier: a [1560,1561]" dest="identifier: a [2139,2140]"/>
  <match src="(: ( [45958,45959]" dest="(: ( [15115,15116]"/>
  <match src="(: ( [9987,9988]" dest="(: ( [10572,10573]"/>
  <match src="member_expression [96271,96306]" dest="member_expression [34835,34870]"/>
  <match src="parameter [53321,53334]" dest="parameter [20411,20424]"/>
  <match src="call_expression [90290,90347]" dest="call_expression [74923,74980]"/>
  <match src="type_name [104172,104179]" dest="type_name [42734,42741]"/>
  <match src="!=: != [35633,35635]" dest="!=: != [50214,50216]"/>
  <match src="(: ( [67087,67088]" dest="(: ( [65572,65573]"/>
  <match src="identifier: account [99782,99789]" dest="identifier: account [38344,38351]"/>
  <match src="{: { [93820,93821]" dest="{: { [32384,32385]"/>
  <match src="uint256: uint256 [1454,1461]" dest="uint256: uint256 [2033,2040]"/>
  <match src="return: return [92669,92675]" dest="return: return [31233,31239]"/>
  <match src=".: . [94801,94802]" dest=".: . [33365,33366]"/>
  <match src="type_name [55236,55240]" dest="type_name [22326,22330]"/>
  <match src="revert: revert [30427,30433]" dest="revert: revert [45008,45014]"/>
  <match src="binary_expression [38588,38593]" dest="binary_expression [53169,53174]"/>
  <match src="member_expression [100867,100911]" dest="member_expression [39429,39473]"/>
  <match src="identifier: reserve1 [54558,54566]" dest="identifier: reserve1 [21648,21656]"/>
  <match src="return_statement [8285,8345]" dest="return_statement [8870,8930]"/>
  <match src="[: [ [94187,94188]" dest="[: [ [32751,32752]"/>
  <match src="identifier: stringify [31966,31975]" dest="identifier: stringify [46547,46556]"/>
  <match src="variable_declaration_statement [81088,81159]" dest="variable_declaration_statement [60947,60999]"/>
  <match src="identifier: subtractedValue [20713,20728]" dest="identifier: totalSupply [18150,18161]"/>
  <match src="): ) [11528,11529]" dest="): ) [12113,12114]"/>
  <match src="=: = [99561,99562]" dest="=: = [38123,38124]"/>
  <match src="external: external [53881,53889]" dest="external: external [20971,20979]"/>
  <match src="call_argument [31754,32041]" dest="call_argument [46335,46622]"/>
  <match src="): ) [8216,8217]" dest="): ) [8801,8802]"/>
  <match src="call_argument [30543,30547]" dest="call_argument [45124,45128]"/>
  <match src="call_argument [10440,10441]" dest="call_argument [11025,11026]"/>
  <match src="function_definition [91399,91504]" dest="function_definition [29963,30068]"/>
  <match src="identifier: epochs [102398,102404]" dest="identifier: epochs [40960,40966]"/>
  <match src="inheritance_specifier [64337,64344]" dest="inheritance_specifier [64493,64504]"/>
  <match src="variable_declaration_tuple [89851,89886]" dest="variable_declaration_tuple [74484,74519]"/>
  <match src="parameter [47404,47423]" dest="parameter [16561,16580]"/>
  <match src="=: = [101283,101284]" dest="=: = [39845,39846]"/>
  <match src="function_definition [46436,46577]" dest="function_definition [15593,15734]"/>
  <match src="identifier: LPAREN [34000,34006]" dest="identifier: LPAREN [48581,48587]"/>
  <match src="identifier: errorMessage [5914,5926]" dest="identifier: errorMessage [6493,6505]"/>
  <match src="yul_evm_builtin [90495,90501]" dest="yul_evm_builtin [75128,75134]"/>
  <match src="type_name [10831,10835]" dest="type_name [11416,11420]"/>
  <match src="primitive_type [3171,3178]" dest="primitive_type [3750,3757]"/>
  <match src="identifier: MINIMUM_LIQUIDITY [54585,54602]" dest="identifier: MINIMUM_LIQUIDITY [21675,21692]"/>
  <match src="type_cast_expression [37084,37098]" dest="type_cast_expression [51665,51679]"/>
  <match src="function_definition [54052,54167]" dest="function_definition [21142,21257]"/>
  <match src="{: { [97154,97155]" dest="{: { [35718,35719]"/>
  <match src="{: { [67128,67129]" dest="{: { [65608,65609]"/>
  <match src="call_expression [98481,98514]" dest="call_expression [37043,37076]"/>
  <match src=".: . [93841,93842]" dest=".: . [32405,32406]"/>
  <match src="): ) [33311,33312]" dest="): ) [47892,47893]"/>
  <match src="address: address [64541,64548]" dest="address: address [76203,76210]"/>
  <match src="returns: returns [10253,10260]" dest="returns: returns [10838,10845]"/>
  <match src="type_name [77572,77579]" dest="type_name [60387,60394]"/>
  <match src="public: public [52011,52017]" dest="public: public [61622,61628]"/>
  <match src="uint8: uint8 [36805,36810]" dest="uint8: uint8 [51386,51391]"/>
  <match src="(: ( [36028,36029]" dest="(: ( [50609,50610]"/>
  <match src="type_name [87299,87306]" dest="type_name [28142,28149]"/>
  <match src="parameter [101088,101108]" dest="parameter [39650,39670]"/>
  <match src="type_name [88174,88189]" dest="type_name [29017,29032]"/>
  <match src="external: external [53576,53584]" dest="external: external [20666,20674]"/>
  <match src="): ) [11393,11394]" dest="): ) [11978,11979]"/>
  <match src="member_expression [80853,80863]" dest="member_expression [70603,70613]"/>
  <match src="uint256: uint256 [91747,91754]" dest="uint256: uint256 [30311,30318]"/>
  <match src="(: ( [105599,105600]" dest="(: ( [67667,67668]"/>
  <match src="type_name [81010,81017]" dest="type_name [69852,69859]"/>
  <match src="identifier: FILE [68370,68374]" dest="identifier: FILE [78972,78976]"/>
  <match src="): ) [33467,33468]" dest="): ) [48048,48049]"/>
  <match src="call_argument [31154,31158]" dest="call_argument [45735,45739]"/>
  <match src="state_mutability [96506,96510]" dest="state_mutability [35070,35074]"/>
  <match src="call_expression [37843,37866]" dest="call_expression [52424,52447]"/>
  <match src="function_body [33730,34161]" dest="function_body [48311,48742]"/>
  <match src="type_name [5240,5247]" dest="type_name [5819,5826]"/>
  <match src="uint: uint [54112,54116]" dest="uint: uint [21202,21206]"/>
  <match src="call_argument [8334,8340]" dest="call_argument [8919,8925]"/>
  <match src="identifier: _state [101172,101178]" dest="identifier: _state [39734,39740]"/>
  <match src="primitive_type [95436,95443]" dest="primitive_type [34000,34007]"/>
  <match src="function: function [10323,10331]" dest="function: function [10908,10916]"/>
  <match src="member_expression [30009,30025]" dest="member_expression [44590,44606]"/>
  <match src="function_body [102110,102179]" dest="function_body [40672,40741]"/>
  <match src="{: { [9030,9031]" dest="{: { [9615,9616]"/>
  <match src="parameter [102351,102369]" dest="parameter [40913,40931]"/>
  <match src="state_mutability [92108,92112]" dest="state_mutability [30672,30676]"/>
  <match src="identifier: abi [33821,33824]" dest="identifier: abi [48402,48405]"/>
  <match src="identifier: Decimal [47551,47558]" dest="identifier: Decimal [16708,16715]"/>
  <match src="&quot;: &quot; [105710,105711]" dest="&quot;: &quot; [67778,67779]"/>
  <match src="returns: returns [68220,68227]" dest="returns: returns [61634,61641]"/>
  <match src=".: . [10149,10150]" dest=".: . [10734,10735]"/>
  <match src="state_variable_declaration [29413,29455]" dest="state_variable_declaration [43994,44036]"/>
  <match src="function: function [94964,94972]" dest="function: function [33528,33536]"/>
  <match src="(: ( [30842,30843]" dest="(: ( [45423,45424]"/>
  <match src="}: } [51000,51001]" dest="}: } [26159,26160]"/>
  <match src="string: string [98576,98582]" dest="string: string [37138,37144]"/>
  <match src="parameter [46490,46509]" dest="parameter [15647,15666]"/>
  <match src="string_literal [105201,105213]" dest="string_literal [67269,67281]"/>
  <match src="memory: memory [10367,10373]" dest="memory: memory [10952,10958]"/>
  <match src="(: ( [99773,99774]" dest="(: ( [38335,38336]"/>
  <match src="identifier: candidate [96289,96298]" dest="identifier: candidate [34853,34862]"/>
  <match src="function: function [8360,8368]" dest="function: function [8945,8953]"/>
  <match src="member_expression [101356,101378]" dest="member_expression [39918,39940]"/>
  <match src="-: - [38677,38678]" dest="-: - [53258,53259]"/>
  <match src="call_argument [31816,31820]" dest="call_argument [46397,46401]"/>
  <match src="function_definition [7919,8112]" dest="function_definition [8504,8697]"/>
  <match src="bool: bool [10400,10404]" dest="bool: bool [10985,10989]"/>
  <match src="identifier: outstandingCoupons [102633,102651]" dest="identifier: outstandingCoupons [41195,41213]"/>
  <match src=".: . [94044,94045]" dest=".: . [32608,32609]"/>
  <match src="memory: memory [98583,98589]" dest="memory: memory [37145,37151]"/>
  <match src="identifier: amount [99207,99213]" dest="identifier: amount [37769,37775]"/>
  <match src="identifier: c [3179,3180]" dest="identifier: c [3758,3759]"/>
  <match src="): ) [89780,89781]" dest="): ) [74413,74414]"/>
  <match src="return: return [7852,7858]" dest="return: return [8437,8443]"/>
  <match src="call_argument [81460,81470]" dest="call_argument [71208,71218]"/>
  <match src="identifier: self [8974,8978]" dest="identifier: self [9559,9563]"/>
  <match src="state_mutability [93571,93575]" dest="state_mutability [32135,32139]"/>
  <match src="member_expression [103988,104023]" dest="member_expression [42550,42585]"/>
  <match src="function_definition [95256,95396]" dest="function_definition [33820,33960]"/>
  <match src="&quot;: &quot; [49891,49892]" dest="&quot;: &quot; [63494,63495]"/>
  <match src=".: . [35216,35217]" dest=".: . [49797,49798]"/>
  <match src="expression_statement [103782,103868]" dest="expression_statement [42344,42430]"/>
  <match src="user_defined_type [47551,47563]" dest="user_defined_type [16708,16720]"/>
  <match src="): ) [53296,53297]" dest="): ) [20386,20387]"/>
  <match src="public: public [93275,93281]" dest="public: public [31839,31845]"/>
  <match src="pure: pure [9641,9645]" dest="pure: pure [10226,10230]"/>
  <match src=".: . [100969,100970]" dest=".: . [39531,39532]"/>
  <match src="parameter [21447,21464]" dest="parameter [63194,63211]"/>
  <match src="function: function [65600,65608]" dest="function: function [66255,66263]"/>
  <match src="function_definition [50865,50923]" dest="function_definition [26024,26082]"/>
  <match src="identifier: must [32820,32824]" dest="identifier: must [47401,47405]"/>
  <match src="): ) [44058,44059]" dest="): ) [13215,13216]"/>
  <match src="parameter [13078,13085]" dest="parameter [22869,22876]"/>
  <match src="user_defined_type [11439,11443]" dest="user_defined_type [12024,12028]"/>
  <match src="parameter [33677,33693]" dest="parameter [48258,48274]"/>
  <match src="--: -- [36731,36733]" dest="--: -- [51312,51314]"/>
  <match src="{: { [44287,44288]" dest="{: { [13444,13445]"/>
  <match src="function: function [23592,23600]" dest="function: function [62859,62867]"/>
  <match src="=: = [37741,37742]" dest="=: = [52322,52323]"/>
  <match src="!: ! [34383,34384]" dest="!: ! [48964,48965]"/>
  <match src="variable_declaration [36554,36563]" dest="variable_declaration [51135,51144]"/>
  <match src="identifier: startFor [96059,96067]" dest="identifier: startFor [34623,34631]"/>
  <match src="identifier: supply [99657,99663]" dest="identifier: supply [38219,38225]"/>
  <match src="expression_statement [83825,83996]" dest="expression_statement [58030,58218]"/>
  <match src="block_statement [32296,32776]" dest="block_statement [46877,47357]"/>
  <match src="primitive_type [37042,37047]" dest="primitive_type [51623,51628]"/>
  <match src="member_expression [95652,95665]" dest="member_expression [34216,34229]"/>
  <match src="visibility [97054,97060]" dest="visibility [35618,35624]"/>
  <match src="parameter [105282,105297]" dest="parameter [67350,67365]"/>
  <match src="user_defined_type [95957,95971]" dest="user_defined_type [34521,34535]"/>
  <match src="state_variable_declaration [29367,29400]" dest="state_variable_declaration [43948,43981]"/>
  <match src="identifier: Mint [54181,54185]" dest="identifier: Mint [21271,21275]"/>
  <match src="type_name [44481,44488]" dest="type_name [13638,13645]"/>
  <match src="is: is [64334,64336]" dest="is: is [64490,64492]"/>
  <match src="(: ( [80050,80051]" dest="(: ( [76177,76178]"/>
  <match src="&gt;&gt;: &gt;&gt; [38732,38734]" dest="&gt;&gt;: &gt;&gt; [53313,53315]"/>
  <match src="identifier: decrementBalanceOfStaged [81494,81518]" dest="identifier: decrementBalanceOfStaged [70206,70230]"/>
  <match src="primitive_type [30289,30296]" dest="primitive_type [44870,44877]"/>
  <match src="call_argument [31848,31853]" dest="call_argument [46429,46434]"/>
  <match src="identifier: Account [93905,93912]" dest="identifier: Account [32469,32476]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [97115,97134]" dest="identifier: IMPLEMENTATION_SLOT [35679,35698]"/>
  <match src="bytes32: bytes32 [31562,31569]" dest="bytes32: bytes32 [46143,46150]"/>
  <match src="identifier: self [9153,9157]" dest="identifier: self [9738,9742]"/>
  <match src="pure: pure [8828,8832]" dest="pure: pure [9413,9417]"/>
  <match src="number_literal: 1609430400 [44464,44474]" dest="number_literal: 1609430400 [13621,13631]"/>
  <match src="member_expression [95344,95381]" dest="member_expression [33908,33945]"/>
  <match src="identifier: price0Cumulative [67148,67164]" dest="identifier: newRedeemable [65802,65815]"/>
  <match src="identifier: isContract [85462,85472]" dest="identifier: isContract [72268,72278]"/>
  <match src="call_argument [73159,73166]" dest="call_argument [79672,79679]"/>
  <match src="(: ( [9130,9131]" dest="(: ( [9715,9716]"/>
  <match src="assignment_expression [98918,98979]" dest="assignment_expression [37480,37541]"/>
  <match src="identifier: _state [101957,101963]" dest="identifier: _state [40519,40525]"/>
  <match src="return_statement [8494,8536]" dest="return_statement [9079,9121]"/>
  <match src="pure: pure [10523,10527]" dest="pure: pure [11108,11112]"/>
  <match src="identifier: amount [100390,100396]" dest="identifier: amount [38952,38958]"/>
  <match src="expression_statement [80491,80527]" dest="expression_statement [70118,70158]"/>
  <match src="member_expression [80310,80320]" dest="member_expression [69485,69495]"/>
  <match src="constant: constant [29576,29584]" dest="constant: constant [44157,44165]"/>
  <match src="uint256: uint256 [94906,94913]" dest="uint256: uint256 [33470,33477]"/>
  <match src="call_argument [30660,30666]" dest="call_argument [45241,45247]"/>
  <match src="function: function [35017,35025]" dest="function: function [49598,49606]"/>
  <match src="call_argument [104283,104303]" dest="call_argument [42845,42865]"/>
  <match src="identifier: account [105346,105353]" dest="identifier: account [67414,67421]"/>
  <match src="identifier: self [11092,11096]" dest="identifier: self [11677,11681]"/>
  <match src="identifier: delegatecall [89907,89919]" dest="identifier: delegatecall [74540,74552]"/>
  <match src="=: = [79673,79674]" dest="=: = [68745,68746]"/>
  <match src="type_name [35191,35196]" dest="type_name [49772,49777]"/>
  <match src="member_expression [101285,101329]" dest="member_expression [39847,39891]"/>
  <match src="memory: memory [9433,9439]" dest="memory: memory [10018,10024]"/>
  <match src="primitive_type [40669,40676]" dest="primitive_type [63213,63220]"/>
  <match src="}: } [91503,91504]" dest="}: } [30067,30068]"/>
  <match src="==: == [93378,93380]" dest="==: == [31942,31944]"/>
  <match src=".: . [9714,9715]" dest=".: . [10299,10300]"/>
  <match src="call_argument [89944,89958]" dest="call_argument [74577,74591]"/>
  <match src="identifier: msg [82089,82092]" dest="identifier: msg [70555,70558]"/>
  <match src="visibility [98437,98445]" dest="visibility [36999,37007]"/>
  <match src="comment: // ============ Constants ============ [6831,6869]" dest="comment: // ============ Constants ============ [7416,7454]"/>
  <match src="type_name [38031,38036]" dest="type_name [52612,52617]"/>
  <match src="call_expression [100955,100989]" dest="call_expression [39517,39551]"/>
  <match src="function: function [101595,101603]" dest="function: function [40157,40165]"/>
  <match src="expression_statement [37680,37725]" dest="expression_statement [52261,52306]"/>
  <match src="call_expression [73100,73168]" dest="call_expression [79648,79696]"/>
  <match src="type_name [92872,92879]" dest="type_name [31436,31443]"/>
  <match src="{: { [39024,39025]" dest="{: { [53605,53606]"/>
  <match src="): ) [9958,9959]" dest="): ) [10543,10544]"/>
  <match src="identifier: value [10150,10155]" dest="identifier: value [10735,10740]"/>
  <match src="uint256: uint256 [102561,102568]" dest="uint256: uint256 [41123,41130]"/>
  <match src="address: address [54738,54745]" dest="address: address [21828,21835]"/>
  <match src="type_name [100134,100141]" dest="type_name [38696,38703]"/>
  <match src="indexed: indexed [15534,15541]" dest="indexed: indexed [25325,25332]"/>
  <match src="call_expression [80285,80328]" dest="call_expression [69460,69503]"/>
  <match src="{: { [101483,101484]" dest="{: { [40045,40046]"/>
  <match src="return_type_definition [10391,10405]" dest="return_type_definition [10976,10990]"/>
  <match src="type_name [86859,86866]" dest="type_name [27702,27709]"/>
  <match src="uint256: uint256 [29473,29480]" dest="uint256: uint256 [44054,44061]"/>
  <match src="primitive_type [104133,104140]" dest="primitive_type [42695,42702]"/>
  <match src="(: ( [93477,93478]" dest="(: ( [32041,32042]"/>
  <match src="identifier: SUPPLY_CHANGE_DIVISOR [47765,47786]" dest="identifier: SUPPLY_CHANGE_DIVISOR [16922,16943]"/>
  <match src=".: . [34462,34463]" dest=".: . [49043,49044]"/>
  <match src="{: { [51776,51777]" dest="{: { [80658,80659]"/>
  <match src=",: , [33973,33974]" dest=",: , [48554,48555]"/>
  <match src="call_expression [81247,81282]" dest="call_expression [70012,70047]"/>
  <match src="identifier: onlyFrozen [80176,80186]" dest="identifier: onlyFrozenOrLocked [76301,76319]"/>
  <match src="type_name [29614,29620]" dest="type_name [44195,44201]"/>
  <match src="call_expression [30607,30633]" dest="call_expression [45188,45214]"/>
  <match src="identifier: State [88225,88230]" dest="identifier: State [29068,29073]"/>
  <match src=",: , [83416,83417]" dest=",: , [63058,63059]"/>
  <match src=".: . [96437,96438]" dest=".: . [35001,35002]"/>
  <match src="call_expression [105310,105445]" dest="call_expression [67378,67513]"/>
  <match src="identifier: spender [23765,23772]" dest="identifier: spender [62944,62951]"/>
  <match src="identifier: value [9703,9708]" dest="identifier: value [10288,10293]"/>
  <match src="): ) [53976,53977]" dest="): ) [21066,21067]"/>
  <match src="identifier: bond [81005,81009]" dest="identifier: bond [69847,69851]"/>
  <match src="identifier: coupons [102480,102487]" dest="identifier: coupons [41042,41049]"/>
  <match src="parameter [96908,96925]" dest="parameter [35472,35489]"/>
  <match src="primitive_type [5274,5281]" dest="primitive_type [5853,5860]"/>
  <match src="): ) [7647,7648]" dest="): ) [8232,8233]"/>
  <match src="identifier: require [5971,5978]" dest="identifier: require [6550,6557]"/>
  <match src="call_argument [34717,34722]" dest="call_argument [49298,49303]"/>
  <match src="(: ( [54793,54794]" dest="(: ( [21883,21884]"/>
  <match src="type_name [29569,29575]" dest="type_name [44150,44156]"/>
  <match src="[: [ [103089,103090]" dest="[: [ [41651,41652]"/>
  <match src="view: view [96642,96646]" dest="view: view [35206,35210]"/>
  <match src="identifier: self [10010,10014]" dest="identifier: self [10595,10599]"/>
  <match src="(: ( [92848,92849]" dest="(: ( [31412,31413]"/>
  <match src="comment: /*  ██╗   ██╗██╗  ████████╗██╗██╗███╗   ███╗ █████╗ ████████╗███████╗    ███████╗███████╗████████╗    ██████╗  ██████╗ ██╗     ██╗      █████╗ ██████╗  ██║   ██║██║  ╚══██╔══╝██║██║████╗ ████║██╔══██╗╚══██╔══╝██╔════╝    ██╔════╝██╔════╝╚══██╔══╝    ██╔══██╗██╔═══██╗██║     ██║     ██╔══██╗██╔══██╗ ██║   ██║██║     ██║   ██║██║██╔████╔██║███████║   ██║   █████╗      ███████╗█████╗     ██║       ██║  ██║██║   ██║██║     ██║     ███████║██████╔╝ ██║   ██║██║     ██║   ██║██║██║╚██╔╝██║██╔══██║   ██║   ██╔══╝      ╚════██║██╔══╝     ██║       ██║  ██║██║   ██║██║     ██║     ██╔══██║██╔══██╗ ╚██████╔╝███████╗██║   ██║██║██║ ╚═╝ ██║██║  ██║   ██║   ███████╗    ███████║███████╗   ██║       ██████╔╝╚██████╔╝███████╗███████╗██║  ██║██║  ██║  ╚═════╝ ╚══════╝╚═╝   ╚═╝╚═╝╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝   ╚══════╝    ╚══════╝╚══════╝   ╚═╝       ╚═════╝  ╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝                                                                                                                                                      A project forked from Empty Set Dollar and Dynamic Set Dollar.  */ [0,1119]" dest="comment: /*  ██╗   ██╗██╗  ████████╗██╗██╗███╗   ███╗ █████╗ ████████╗███████╗    ███████╗███████╗████████╗    ██████╗  ██████╗ ██╗     ██╗      █████╗ ██████╗  ██║   ██║██║  ╚══██╔══╝██║██║████╗ ████║██╔══██╗╚══██╔══╝██╔════╝    ██╔════╝██╔════╝╚══██╔══╝    ██╔══██╗██╔═══██╗██║     ██║     ██╔══██╗██╔══██╗ ██║   ██║██║     ██║   ██║██║██╔████╔██║███████║   ██║   █████╗      ███████╗█████╗     ██║       ██║  ██║██║   ██║██║     ██║     ███████║██████╔╝ ██║   ██║██║     ██║   ██║██║██║╚██╔╝██║██╔══██║   ██║   ██╔══╝      ╚════██║██╔══╝     ██║       ██║  ██║██║   ██║██║     ██║     ██╔══██║██╔══██╗ ╚██████╔╝███████╗██║   ██║██║██║ ╚═╝ ██║██║  ██║   ██║   ███████╗    ███████║███████╗   ██║       ██████╔╝╚██████╔╝███████╗███████╗██║  ██║██║  ██║  ╚═════╝ ╚══════╝╚═╝   ╚═╝╚═╝╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝   ╚══════╝    ╚══════╝╚══════╝   ╚═╝       ╚═════╝  ╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝                                                                                                                                                      A project forked from Empty Set Dollar and Dynamic Set Dollar.  */ [0,1119]"/>
  <match src="]: ] [99907,99908]" dest="]: ] [38469,38470]"/>
  <match src=".: . [95075,95076]" dest=".: . [33639,33640]"/>
  <match src="call_argument [32491,32517]" dest="call_argument [47072,47098]"/>
  <match src=",: , [101086,101087]" dest=",: , [39648,39649]"/>
  <match src="uint256: uint256 [44674,44681]" dest="uint256: uint256 [13831,13838]"/>
  <match src="comment: // ' &lt;' [29647,29654]" dest="comment: // ' &lt;' [44228,44235]"/>
  <match src="assignment_expression [99849,99936]" dest="assignment_expression [38411,38498]"/>
  <match src="(: ( [14652,14653]" dest="(: ( [24443,24444]"/>
  <match src="call_argument [52105,52111]" dest="call_argument [63652,63658]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [5354,5859]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [5933,6438]"/>
  <match src="(: ( [81834,81835]" dest="(: ( [79041,79042]"/>
  <match src="(: ( [101407,101408]" dest="(: ( [39969,39970]"/>
  <match src="identifier: amount [50844,50850]" dest="identifier: amount [26003,26009]"/>
  <match src="memory: memory [9665,9671]" dest="memory: memory [10250,10256]"/>
  <match src="(: ( [102335,102336]" dest="(: ( [40897,40898]"/>
  <match src="function_definition [47240,47346]" dest="function_definition [16397,16503]"/>
  <match src="uint256: uint256 [11065,11072]" dest="uint256: uint256 [11650,11657]"/>
  <match src="constant: constant [44082,44090]" dest="constant: constant [13239,13247]"/>
  <match src="(: ( [34182,34183]" dest="(: ( [48763,48764]"/>
  <match src="(: ( [98859,98860]" dest="(: ( [37421,37422]"/>
  <match src="identifier: i [36562,36563]" dest="identifier: i [51143,51144]"/>
  <match src="): ) [95760,95761]" dest="): ) [34324,34325]"/>
  <match src="primitive_type [54532,54539]" dest="primitive_type [21622,21629]"/>
  <match src="expression_statement [1547,1594]" dest="expression_statement [2126,2173]"/>
  <match src="[: [ [104372,104373]" dest="[: [ [42934,42935]"/>
  <match src="call_argument [9942,9949]" dest="call_argument [10527,10534]"/>
  <match src="identifier: account [99900,99907]" dest="identifier: account [38462,38469]"/>
  <match src="type_name [38482,38489]" dest="type_name [53063,53070]"/>
  <match src="identifier: a [7349,7350]" dest="identifier: a [7934,7935]"/>
  <match src="call_argument [31218,31244]" dest="call_argument [45799,45825]"/>
  <match src="pure: pure [2857,2861]" dest="pure: pure [3436,3440]"/>
  <match src="event: event [54521,54526]" dest="event: event [21611,21616]"/>
  <match src="call_argument [82405,82441]" dest="call_argument [78410,78428]"/>
  <match src="visibility [52011,52017]" dest="visibility [61622,61628]"/>
  <match src="internal: internal [21482,21490]" dest="internal: internal [55752,55760]"/>
  <match src="(: ( [100911,100912]" dest="(: ( [39473,39474]"/>
  <match src="state_mutability [54965,54969]" dest="state_mutability [22055,22059]"/>
  <match src="identifier: div [9984,9987]" dest="identifier: div [10569,10572]"/>
  <match src="parameter [99492,99506]" dest="parameter [38054,38068]"/>
  <match src="number_literal: 0x2c20 [29593,29599]" dest="number_literal: 0x2c20 [44174,44180]"/>
  <match src="type_name [7244,7248]" dest="type_name [7829,7833]"/>
  <match src="primitive_type [95900,95907]" dest="primitive_type [34464,34471]"/>
  <match src="member_expression [101381,101407]" dest="member_expression [39943,39969]"/>
  <match src="identifier: candidates [104497,104507]" dest="identifier: candidates [43059,43069]"/>
  <match src="type_alias [79400,79408]" dest="type_alias [68686,68694]"/>
  <match src="member_expression [100560,100574]" dest="member_expression [39122,39136]"/>
  <match src="primitive_type [53259,53265]" dest="primitive_type [20349,20355]"/>
  <match src="array_access [101130,101169]" dest="array_access [39692,39731]"/>
  <match src="primitive_type [62998,63002]" dest="primitive_type [26857,26861]"/>
  <match src="identifier: _state [98481,98487]" dest="identifier: _state [37043,37049]"/>
  <match src="&quot;: &quot; [3847,3848]" dest="&quot;: &quot; [4426,4427]"/>
  <match src="member_expression [98940,98954]" dest="member_expression [37502,37516]"/>
  <match src="function: function [95566,95574]" dest="function: function [34130,34138]"/>
  <match src="parameter [95756,95760]" dest="parameter [34320,34324]"/>
  <match src="call_argument [105670,105674]" dest="call_argument [67738,67742]"/>
  <match src=".: . [100228,100229]" dest=".: . [38790,38791]"/>
  <match src="{: { [103368,103369]" dest="{: { [41930,41931]"/>
  <match src="primitive_type [34213,34220]" dest="primitive_type [48794,48801]"/>
  <match src="primitive_type [96807,96811]" dest="primitive_type [35371,35375]"/>
  <match src="primitive_type [54682,54689]" dest="primitive_type [21772,21779]"/>
  <match src="{: { [91875,91876]" dest="{: { [30439,30440]"/>
  <match src="library_declaration [29296,39261]" dest="library_declaration [43877,53842]"/>
  <match src="primitive_type [2405,2411]" dest="primitive_type [2984,2990]"/>
  <match src="primitive_type [4438,4445]" dest="primitive_type [5017,5024]"/>
  <match src="member_expression [100474,100509]" dest="member_expression [39036,39071]"/>
  <match src="contract_declaration [79347,84534]" dest="contract_declaration [68633,71340]"/>
  <match src="string_literal [1563,1592]" dest="string_literal [2142,2171]"/>
  <match src="identifier: epoch [82506,82511]" dest="identifier: epoch [70817,70822]"/>
  <match src="uint256: uint256 [17676,17683]" dest="uint256: uint256 [17991,17998]"/>
  <match src="identifier: FILE [49872,49876]" dest="identifier: FILE [62039,62043]"/>
  <match src="}: } [104414,104415]" dest="}: } [42976,42977]"/>
  <match src="user_defined_type [88174,88189]" dest="user_defined_type [29017,29032]"/>
  <match src="identifier: stringify [33293,33302]" dest="identifier: stringify [47874,47883]"/>
  <match src="modifier: modifier [105752,105760]" dest="modifier: modifier [67820,67828]"/>
  <match src="identifier: candidate [103735,103744]" dest="identifier: candidate [42297,42306]"/>
  <match src="type_name [64370,64382]" dest="type_name [64563,64575]"/>
  <match src="visibility [95936,95942]" dest="visibility [34500,34506]"/>
  <match src="}: } [47487,47488]" dest="}: } [16644,16645]"/>
  <match src="(: ( [31069,31070]" dest="(: ( [45650,45651]"/>
  <match src="): ) [8886,8887]" dest="): ) [9471,9472]"/>
  <match src="parameter [85473,85488]" dest="parameter [72279,72294]"/>
  <match src=",: , [80572,80573]" dest=",: , [69729,69730]"/>
  <match src="function_body [104161,104422]" dest="function_body [42723,42984]"/>
  <match src="{: { [98317,98318]" dest="{: { [36879,36880]"/>
  <match src="return_type_definition [94136,94153]" dest="return_type_definition [32700,32717]"/>
  <match src="string [27883,27933]" dest="string [77285,77314]"/>
  <match src="number_literal: 10 [36343,36345]" dest="number_literal: 10 [50924,50926]"/>
  <match src="identifier: b [9292,9293]" dest="identifier: b [9877,9878]"/>
  <match src="array_access [101695,101717]" dest="array_access [40257,40279]"/>
  <match src="bytes32: bytes32 [29867,29874]" dest="bytes32: bytes32 [44448,44455]"/>
  <match src=",: , [15306,15307]" dest=",: , [25097,25098]"/>
  <match src="number_literal: 2 [38592,38593]" dest="number_literal: 2 [53173,53174]"/>
  <match src="&gt;&gt;: &gt;&gt; [38874,38876]" dest="&gt;&gt;: &gt;&gt; [53455,53457]"/>
  <match src="=: = [44798,44799]" dest="=: = [13955,13956]"/>
  <match src="member_expression [10145,10155]" dest="member_expression [10730,10740]"/>
  <match src=".: . [94732,94733]" dest=".: . [33296,33297]"/>
  <match src="(: ( [96907,96908]" dest="(: ( [35471,35472]"/>
  <match src="(: ( [23685,23686]" dest="(: ( [61850,61851]"/>
  <match src="call_argument [32459,32464]" dest="call_argument [47040,47045]"/>
  <match src="identifier: self [10571,10575]" dest="identifier: self [11156,11160]"/>
  <match src="}: } [104088,104089]" dest="}: } [42650,42651]"/>
  <match src="return: return [4743,4749]" dest="return: return [5322,5328]"/>
  <match src="view: view [13893,13897]" dest="view: view [23684,23688]"/>
  <match src="(: ( [93608,93609]" dest="(: ( [32172,32173]"/>
  <match src="call_argument [90329,90346]" dest="call_argument [74962,74979]"/>
  <match src="return_statement [93898,93927]" dest="return_statement [32462,32491]"/>
  <match src="(: ( [82493,82494]" dest="(: ( [70804,70805]"/>
  <match src="identifier: onlyFrozenOrLocked [105540,105558]" dest="identifier: onlyFrozenOrLocked [67608,67626]"/>
  <match src="identifier: balance [98925,98932]" dest="identifier: balance [37487,37494]"/>
  <match src=",: , [23623,23624]" dest=",: , [62898,62899]"/>
  <match src="&quot;: &quot; [50132,50133]" dest="&quot;: &quot; [54995,54996]"/>
  <match src="primitive_type [46934,46941]" dest="primitive_type [16091,16098]"/>
  <match src="identifier: BASE [7452,7456]" dest="identifier: BASE [8037,8041]"/>
  <match src="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [48012,48587]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [53846,54427]"/>
  <match src="primitive_type [10400,10404]" dest="primitive_type [10985,10989]"/>
  <match src="comment: /* solium-disable-next-line security/no-inline-assembly */ [35701,35759]" dest="comment: /* solium-disable-next-line security/no-inline-assembly */ [50282,50340]"/>
  <match src="identifier: payloadA [34269,34277]" dest="identifier: payloadA [48850,48858]"/>
  <match src="pure: pure [37023,37027]" dest="pure: pure [51604,51608]"/>
  <match src="call_expression [67226,67288]" dest="call_expression [65856,65881]"/>
  <match src="type_name [72980,72987]" dest="type_name [65374,65381]"/>
  <match src="type_name [64541,64548]" dest="type_name [76203,76210]"/>
  <match src="identifier: amount [14627,14633]" dest="identifier: amount [24418,24424]"/>
  <match src="string_literal [19465,19507]" dest="string_literal [70662,70698]"/>
  <match src="primitive_type [79765,79772]" dest="primitive_type [68840,68847]"/>
  <match src="string_literal [79675,79681]" dest="string_literal [68747,68756]"/>
  <match src="function: function [67067,67075]" dest="function: function [65553,65561]"/>
  <match src="pure: pure [7804,7808]" dest="pure: pure [8389,8393]"/>
  <match src="type_name [80109,80116]" dest="type_name [76037,76044]"/>
  <match src="identifier: value [11097,11102]" dest="identifier: value [11682,11687]"/>
  <match src="identifier: reason [99294,99300]" dest="identifier: reason [37856,37862]"/>
  <match src="identifier: epoch [102405,102410]" dest="identifier: epoch [40967,40972]"/>
  <match src="): ) [93781,93782]" dest="): ) [32345,32346]"/>
  <match src=".: . [59138,59139]" dest=".: . [80845,80846]"/>
  <match src="&quot;: &quot; [57758,57759]" dest="&quot;: &quot; [71229,71230]"/>
  <match src="): ) [47269,47270]" dest="): ) [16426,16427]"/>
  <match src="identifier: redeemable [99192,99202]" dest="identifier: redeemable [37754,37764]"/>
  <match src="=: = [29591,29592]" dest="=: = [44172,44173]"/>
  <match src="bool: bool [34193,34197]" dest="bool: bool [48774,48778]"/>
  <match src="binary_expression [81190,81208]" dest="binary_expression [69968,69986]"/>
  <match src="): ) [2024,2025]" dest="): ) [2603,2604]"/>
  <match src="return_statement [92998,93045]" dest="return_statement [31562,31609]"/>
  <match src="(: ( [38348,38349]" dest="(: ( [52929,52930]"/>
  <match src="call_argument [72052,72056]" dest="call_argument [58084,58088]"/>
  <match src="bytes2: bytes2 [29524,29530]" dest="bytes2: bytes2 [44105,44111]"/>
  <match src="member_expression [104026,104043]" dest="member_expression [42588,42605]"/>
  <match src="member_expression [82772,82784]" dest="member_expression [78742,78754]"/>
  <match src="member_expression [93005,93025]" dest="member_expression [31569,31589]"/>
  <match src="}: } [34160,34161]" dest="}: } [48741,48742]"/>
  <match src="member_expression [81734,81744]" dest="member_expression [70963,70973]"/>
  <match src="returns: returns [45616,45623]" dest="returns: returns [14773,14780]"/>
  <match src=",: , [77744,77745]" dest=",: , [55941,55942]"/>
  <match src="if: if [35619,35621]" dest="if: if [50200,50202]"/>
  <match src="return: return [92142,92148]" dest="return: return [30706,30712]"/>
  <match src="uint256: uint256 [44347,44354]" dest="uint256: uint256 [13504,13511]"/>
  <match src="binary_expression [23765,23786]" dest="binary_expression [62944,62965]"/>
  <match src="type_name [8465,8469]" dest="type_name [9050,9054]"/>
  <match src="returns: returns [95165,95172]" dest="returns: returns [33729,33736]"/>
  <match src="(: ( [34475,34476]" dest="(: ( [49056,49057]"/>
  <match src="visibility [102997,103005]" dest="visibility [41559,41567]"/>
  <match src="identifier: provider [92362,92370]" dest="identifier: provider [30926,30934]"/>
  <match src=",: , [54208,54209]" dest=",: , [21298,21299]"/>
  <match src="identifier: amount [101408,101414]" dest="identifier: amount [39970,39976]"/>
  <match src="uint: uint [54224,54228]" dest="uint: uint [21314,21318]"/>
  <match src="array_access [37822,37840]" dest="array_access [52403,52421]"/>
  <match src="function_definition [95111,95248]" dest="function_definition [33675,33812]"/>
  <match src=".: . [7889,7890]" dest=".: . [8474,8475]"/>
  <match src="(: ( [11106,11107]" dest="(: ( [11691,11692]"/>
  <match src="member_expression [105310,105322]" dest="member_expression [67378,67390]"/>
  <match src="memory: memory [8148,8154]" dest="memory: memory [8733,8739]"/>
  <match src="enum: enum [86688,86692]" dest="enum: enum [27531,27535]"/>
  <match src="): ) [92203,92204]" dest="): ) [30767,30768]"/>
  <match src="parameter [96342,96359]" dest="parameter [34906,34923]"/>
  <match src="parameter [67107,67126]" dest="parameter [66297,66316]"/>
  <match src="return_type_definition [72126,72140]" dest="return_type_definition [79519,79533]"/>
  <match src="indexed: indexed [97890,97897]" dest="indexed: indexed [36452,36459]"/>
  <match src="uint256: uint256 [99791,99798]" dest="uint256: uint256 [38353,38360]"/>
  <match src="&quot;: &quot; [20889,20890]" dest="&quot;: &quot; [69222,69223]"/>
  <match src="update_expression [35522,35525]" dest="update_expression [50103,50106]"/>
  <match src=",: , [53123,53124]" dest=",: , [20213,20214]"/>
  <match src="type_name [95028,95035]" dest="type_name [33592,33599]"/>
  <match src="external: external [54605,54613]" dest="external: external [21695,21703]"/>
  <match src="variable_declaration_statement [35191,35237]" dest="variable_declaration_statement [49772,49818]"/>
  <match src="return_type_definition [95747,95761]" dest="return_type_definition [34311,34325]"/>
  <match src="call_expression [2476,2505]" dest="call_expression [3055,3084]"/>
  <match src="): ) [2504,2505]" dest="): ) [3083,3084]"/>
  <match src="expression_statement [105310,105446]" dest="expression_statement [67378,67514]"/>
  <match src="): ) [99711,99712]" dest="): ) [38273,38274]"/>
  <match src="type_cast_expression [72044,72057]" dest="type_cast_expression [58076,58089]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [2041,2364]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [2620,2943]"/>
  <match src="primitive_type [8170,8177]" dest="primitive_type [8755,8762]"/>
  <match src="primitive_type [15015,15022]" dest="primitive_type [24806,24813]"/>
  <match src="uint256: uint256 [36260,36267]" dest="uint256: uint256 [50841,50848]"/>
  <match src="primitive_type [87861,87868]" dest="primitive_type [28704,28711]"/>
  <match src="identifier: D256 [7121,7125]" dest="identifier: D256 [7706,7710]"/>
  <match src="function_body [94154,94228]" dest="function_body [32718,32792]"/>
  <match src="uint256: uint256 [87216,87223]" dest="uint256: uint256 [28059,28066]"/>
  <match src="&gt;: &gt; [35368,35369]" dest="&gt;: &gt; [49949,49950]"/>
  <match src="member_expression [103072,103089]" dest="member_expression [41634,41651]"/>
  <match src="type_name [32194,32201]" dest="type_name [46775,46782]"/>
  <match src="comment: // populate the least-significant character [37623,37666]" dest="comment: // populate the least-significant character [52204,52247]"/>
  <match src="type_name [7768,7775]" dest="type_name [8353,8360]"/>
  <match src="(: ( [105558,105559]" dest="(: ( [67626,67627]"/>
  <match src="expression_statement [98918,98980]" dest="expression_statement [37480,37542]"/>
  <match src="primitive_type [101659,101666]" dest="primitive_type [40221,40228]"/>
  <match src="member_expression [103418,103435]" dest="member_expression [41980,41997]"/>
  <match src="primitive_type [14619,14626]" dest="primitive_type [24410,24417]"/>
  <match src="identifier: Decimal [47590,47597]" dest="identifier: Decimal [16747,16754]"/>
  <match src="user_defined_type [88023,88031]" dest="user_defined_type [28866,28874]"/>
  <match src="[: [ [104043,104044]" dest="[: [ [42605,42606]"/>
  <match src="public: public [92851,92857]" dest="public: public [31415,31421]"/>
  <match src="parameter [9227,9238]" dest="parameter [9812,9823]"/>
  <match src="visibility [94640,94647]" dest="visibility [33204,33211]"/>
  <match src="primitive_type [29524,29530]" dest="primitive_type [44105,44111]"/>
  <match src="primitive_type [35191,35196]" dest="primitive_type [49772,49777]"/>
  <match src="(: ( [10433,10434]" dest="(: ( [11018,11019]"/>
  <match src="): ) [5958,5959]" dest="): ) [6537,6538]"/>
  <match src="assignment_expression [102838,102882]" dest="assignment_expression [41400,41444]"/>
  <match src=",: , [83939,83940]" dest=",: , [58168,58169]"/>
  <match src="call_argument [103676,103682]" dest="call_argument [42238,42244]"/>
  <match src="function_definition [38931,39258]" dest="function_definition [53512,53839]"/>
  <match src="identifier: file [30543,30547]" dest="identifier: file [45124,45128]"/>
  <match src="identifier: errorMessage [5987,5999]" dest="identifier: errorMessage [6566,6578]"/>
  <match src="return_type_definition [45616,45633]" dest="return_type_definition [14773,14790]"/>
  <match src="call_argument [75049,75055]" dest="call_argument [61730,61736]"/>
  <match src="function: function [47496,47504]" dest="function: function [16653,16661]"/>
  <match src="identifier: b [1989,1990]" dest="identifier: b [2568,2569]"/>
  <match src="array_access [101893,101941]" dest="array_access [40455,40503]"/>
  <match src="return_statement [47877,47902]" dest="return_statement [17034,17059]"/>
  <match src="number_literal: 0 [21528,21529]" dest="number_literal: 0 [63290,63291]"/>
  <match src=".: . [93192,93193]" dest=".: . [31756,31757]"/>
  <match src="visibility [95735,95741]" dest="visibility [34299,34305]"/>
  <match src="parameter [14619,14633]" dest="parameter [24410,24424]"/>
  <match src="identifier: b [2484,2485]" dest="identifier: b [3063,3064]"/>
  <match src="private: private [66492,66499]" dest="private: private [19818,19825]"/>
  <match src="return_statement [86057,86073]" dest="return_statement [72863,72879]"/>
  <match src="string: string [34430,34436]" dest="string: string [49011,49017]"/>
  <match src="external: external [54832,54840]" dest="external: external [21922,21930]"/>
  <match src="): ) [4507,4508]" dest="): ) [5086,5087]"/>
  <match src="yul_evm_builtin [86025,86036]" dest="yul_evm_builtin [72831,72842]"/>
  <match src="identifier: _state [94172,94178]" dest="identifier: _state [32736,32742]"/>
  <match src="function_body [96253,96314]" dest="function_body [34817,34878]"/>
  <match src="address: address [88061,88068]" dest="address: address [28904,28911]"/>
  <match src=".: . [98799,98800]" dest=".: . [37361,37362]"/>
  <match src="primitive_type [15526,15533]" dest="primitive_type [25317,25324]"/>
  <match src="uint112: uint112 [54532,54539]" dest="uint112: uint112 [21622,21629]"/>
  <match src="call_argument [82170,82180]" dest="call_argument [71084,71094]"/>
  <match src="{: { [8506,8507]" dest="{: { [9091,9092]"/>
  <match src=",: , [10161,10162]" dest=",: , [10746,10747]"/>
  <match src="event_paramater [54550,54566]" dest="event_paramater [21640,21656]"/>
  <match src="number_literal: 48 [44956,44958]" dest="number_literal: 48 [14113,14115]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [29430,29449]" dest="identifier: ASCII_RELATIVE_ZERO [44011,44030]"/>
  <match src="string [24300,24338]" dest="string [62058,62075]"/>
  <match src="modifier: modifier [105255,105263]" dest="modifier: modifier [67323,67331]"/>
  <match src="return_type_definition [7567,7588]" dest="return_type_definition [8152,8173]"/>
  <match src="): ) [8807,8808]" dest="): ) [9392,9393]"/>
  <match src="primitive_type [93549,93556]" dest="primitive_type [32113,32120]"/>
  <match src="): ) [83045,83046]" dest="): ) [78230,78231]"/>
  <match src="binary_expression [37510,37516]" dest="binary_expression [52091,52097]"/>
  <match src="identifier: b [8321,8322]" dest="identifier: b [8906,8907]"/>
  <match src="return_type_definition [91427,91450]" dest="return_type_definition [29991,30014]"/>
  <match src="contract_body [105160,105978]" dest="contract_body [67228,68046]"/>
  <match src=",: , [87385,87386]" dest=",: , [28228,28229]"/>
  <match src="type_name [54532,54539]" dest="type_name [21622,21629]"/>
  <match src="identifier: current [94464,94471]" dest="identifier: current [33028,33035]"/>
  <match src="identifier: require [23757,23764]" dest="identifier: require [62936,62943]"/>
  <match src="primitive_type [1955,1962]" dest="primitive_type [2534,2541]"/>
  <match src="(: ( [99701,99702]" dest="(: ( [38263,38264]"/>
  <match src="identifier: COLON [30575,30580]" dest="identifier: COLON [45156,45161]"/>
  <match src="(: ( [21527,21528]" dest="(: ( [63289,63290]"/>
  <match src="number_literal: 0 [35636,35637]" dest="number_literal: 0 [50217,50218]"/>
  <match src="variable_declaration [85530,85542]" dest="variable_declaration [72336,72348]"/>
  <match src="identifier: amount [99600,99606]" dest="identifier: amount [38162,38168]"/>
  <match src="number_literal: 1 [9015,9016]" dest="number_literal: 1 [9600,9601]"/>
  <match src="function: function [55178,55186]" dest="function: function [22268,22276]"/>
  <match src="identifier: must [32290,32294]" dest="identifier: must [46871,46875]"/>
  <match src="identifier: POOL_EXIT_LOCKUP_EPOCHS [45027,45050]" dest="identifier: POOL_EXIT_LOCKUP_EPOCHS [14184,14207]"/>
  <match src="(: ( [92003,92004]" dest="(: ( [30567,30568]"/>
  <match src="number_literal: 18 [6905,6907]" dest="number_literal: 18 [7490,7492]"/>
  <match src="&gt;: &gt; [82684,82685]" dest="&gt;: &gt; [58331,58332]"/>
  <match src="call_argument [82182,82187]" dest="call_argument [71096,71101]"/>
  <match src="if: if [102669,102671]" dest="if: if [41231,41233]"/>
  <match src="identifier: D256 [8941,8945]" dest="identifier: D256 [9526,9530]"/>
  <match src="member_expression [102748,102762]" dest="member_expression [41310,41324]"/>
  <match src="identifier: candidate [96350,96359]" dest="identifier: candidate [34914,34923]"/>
  <match src="type_name [54127,54132]" dest="type_name [21217,21222]"/>
  <match src="uint256: uint256 [64771,64778]" dest="uint256: uint256 [76014,76021]"/>
  <match src="): ) [54566,54567]" dest="): ) [21656,21657]"/>
  <match src="identifier: accounts [99535,99543]" dest="identifier: accounts [38097,38105]"/>
  <match src="[: [ [101908,101909]" dest="[: [ [40470,40471]"/>
  <match src="parameter [17676,17683]" dest="parameter [17991,17998]"/>
  <match src="unary_expression [30405,30410]" dest="unary_expression [44986,44991]"/>
  <match src="update_expression [37518,37521]" dest="update_expression [52099,52102]"/>
  <match src="user_defined_type [9141,9145]" dest="user_defined_type [9726,9730]"/>
  <match src="[: [ [103396,103397]" dest="[: [ [41958,41959]"/>
  <match src="identifier: getPartial [7626,7636]" dest="identifier: getPartial [8211,8221]"/>
  <match src="uint256: uint256 [103530,103537]" dest="uint256: uint256 [42092,42099]"/>
  <match src="event_paramater [15266,15286]" dest="event_paramater [25057,25077]"/>
  <match src="return_type_definition [2862,2879]" dest="return_type_definition [3441,3458]"/>
  <match src="): ) [72899,72900]" dest="): ) [58106,58107]"/>
  <match src="call_expression [99350,99395]" dest="call_expression [37912,37957]"/>
  <match src="assembly_statement [90471,90537]" dest="assembly_statement [75104,75170]"/>
  <match src="function_body [46385,46428]" dest="function_body [15542,15585]"/>
  <match src="pure: pure [9208,9212]" dest="pure: pure [9793,9797]"/>
  <match src="function_definition [31518,32094]" dest="function_definition [46099,46675]"/>
  <match src="uint256: uint256 [85530,85537]" dest="uint256: uint256 [72336,72343]"/>
  <match src="function: function [100083,100091]" dest="function: function [38645,38653]"/>
  <match src="type_name [91212,91224]" dest="type_name [29776,29788]"/>
  <match src="type_name [104116,104123]" dest="type_name [42678,42685]"/>
  <match src="number_literal: 66 [38222,38224]" dest="number_literal: 66 [52803,52805]"/>
  <match src="identifier: fluidUntil [86949,86959]" dest="identifier: fluidUntil [27792,27802]"/>
  <match src="identifier: that [84428,84432]" dest="identifier: that [76854,76858]"/>
  <match src="): ) [21480,21481]" dest="): ) [63242,63243]"/>
  <match src="&quot;: &quot; [50140,50141]" dest="&quot;: &quot; [55036,55037]"/>
  <match src="(: ( [37091,37092]" dest="(: ( [51672,51673]"/>
  <match src="returns: returns [10075,10082]" dest="returns: returns [10660,10667]"/>
  <match src="identifier: stringifyTruncated [33124,33142]" dest="identifier: stringifyTruncated [47705,47723]"/>
  <match src=",: , [67164,67165]" dest=",: , [65815,65816]"/>
  <match src="identifier: decrementRejectFor [103892,103910]" dest="identifier: decrementRejectFor [42454,42472]"/>
  <match src="(: ( [10480,10481]" dest="(: ( [11065,11066]"/>
  <match src="(: ( [44015,44016]" dest="(: ( [13172,13173]"/>
  <match src="): ) [100011,100012]" dest="): ) [38573,38574]"/>
  <match src="type_name [15288,15295]" dest="type_name [25079,25086]"/>
  <match src="pure: pure [10065,10069]" dest="pure: pure [10650,10654]"/>
  <match src="event: event [15251,15256]" dest="event: event [25042,25047]"/>
  <match src="{: { [30390,30391]" dest="{: { [44971,44972]"/>
  <match src="unary_expression [105813,105845]" dest="unary_expression [67881,67913]"/>
  <match src="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [37111,37193]" dest="comment: // addresses are &quot;0x&quot; followed by 20 bytes of data which take up 2 characters each [51692,51774]"/>
  <match src="return_type_definition [92969,92986]" dest="return_type_definition [31533,31550]"/>
  <match src="primitive_type [15308,15315]" dest="primitive_type [25099,25106]"/>
  <match src="identifier: _state [100824,100830]" dest="identifier: _state [39386,39392]"/>
  <match src="comment: // take last decimal digit [36750,36776]" dest="comment: // take last decimal digit [51331,51357]"/>
  <match src="(: ( [10343,10344]" dest="(: ( [10928,10929]"/>
  <match src=",: , [34644,34645]" dest=",: , [49225,49226]"/>
  <match src="number_literal: 0xf [29734,29737]" dest="number_literal: 0xf [44315,44318]"/>
  <match src="event_paramater [53200,53210]" dest="event_paramater [20290,20300]"/>
  <match src="{: { [10543,10544]" dest="{: { [11128,11129]"/>
  <match src="binary_expression [2484,2490]" dest="binary_expression [3063,3069]"/>
  <match src="): ) [8331,8332]" dest="): ) [8916,8917]"/>
  <match src="): ) [105574,105575]" dest="): ) [67642,67643]"/>
  <match src="): ) [52140,52141]" dest="): ) [63685,63686]"/>
  <match src="call_expression [93436,93449]" dest="call_expression [32000,32013]"/>
  <match src="yul_evm_builtin [35809,35815]" dest="yul_evm_builtin [50390,50396]"/>
  <match src="{: { [86681,86682]" dest="{: { [27524,27525]"/>
  <match src="call_expression [101544,101578]" dest="call_expression [40106,40140]"/>
  <match src=",: , [21715,21716]" dest=",: , [55797,55798]"/>
  <match src="pure: pure [47390,47394]" dest="pure: pure [16547,16551]"/>
  <match src=".: . [101270,101271]" dest=".: . [39832,39833]"/>
  <match src="parameter [93159,93166]" dest="parameter [31723,31730]"/>
  <match src="identifier: sender [80966,80972]" dest="identifier: sender [79435,79441]"/>
  <match src="address: address [54255,54262]" dest="address: address [21345,21352]"/>
  <match src="identifier: reserve [68196,68203]" dest="identifier: couponPremium [61592,61605]"/>
  <match src="member_expression [59133,59148]" dest="member_expression [80840,80855]"/>
  <match src="}: } [47786,47787]" dest="}: } [16943,16944]"/>
  <match src="): ) [11331,11332]" dest="): ) [11916,11917]"/>
  <match src="address: address [104451,104458]" dest="address: address [43013,43020]"/>
  <match src=".: . [101248,101249]" dest=".: . [39810,39811]"/>
  <match src=".: . [94037,94038]" dest=".: . [32601,32602]"/>
  <match src="}: } [94227,94228]" dest="}: } [32791,32792]"/>
  <match src="identifier: value [80084,80089]" dest="identifier: value [60353,60358]"/>
  <match src=".: . [94194,94195]" dest=".: . [32758,32759]"/>
  <match src="call_expression [35982,35994]" dest="call_expression [50563,50575]"/>
  <match src="identifier: D256 [66517,66521]" dest="identifier: D256 [19757,19761]"/>
  <match src="call_expression [83465,83479]" dest="call_expression [58647,58661]"/>
  <match src="identifier: statusOf [105337,105345]" dest="identifier: statusOf [67405,67413]"/>
  <match src="=: = [99175,99176]" dest="=: = [37737,37738]"/>
  <match src="}: } [92178,92179]" dest="}: } [30742,30743]"/>
  <match src="(: ( [83857,83858]" dest="(: ( [58768,58769]"/>
  <match src="identifier: reason [103676,103682]" dest="identifier: reason [42238,42244]"/>
  <match src="): ) [104150,104151]" dest="): ) [42712,42713]"/>
  <match src="primitive_type [79704,79711]" dest="primitive_type [68779,68786]"/>
  <match src="(: ( [8846,8847]" dest="(: ( [9431,9432]"/>
  <match src="&quot;: &quot; [3219,3220]" dest="&quot;: &quot; [3798,3799]"/>
  <match src="identifier: reason [31593,31599]" dest="identifier: reason [46174,46180]"/>
  <match src="&amp;: &amp; [37850,37851]" dest="&amp;: &amp; [52431,52432]"/>
  <match src="state_variable_declaration [29473,29511]" dest="state_variable_declaration [44054,44092]"/>
  <match src="(: ( [30497,30498]" dest="(: ( [45078,45079]"/>
  <match src="identifier: to [55374,55376]" dest="identifier: to [22464,22466]"/>
  <match src="call_argument [32510,32516]" dest="call_argument [47091,47097]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [38378,38467]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [52959,53048]"/>
  <match src="uint256: uint256 [3171,3178]" dest="uint256: uint256 [3750,3757]"/>
  <match src="(: ( [80353,80354]" dest="(: ( [55855,55856]"/>
  <match src="using: using [64352,64357]" dest="using: using [64545,64550]"/>
  <match src="uint8: uint8 [54127,54132]" dest="uint8: uint8 [21217,21222]"/>
  <match src="struct_member [87786,87801]" dest="struct_member [28629,28644]"/>
  <match src="parameter [92649,92656]" dest="parameter [31213,31220]"/>
  <match src="identifier: must [31547,31551]" dest="identifier: must [46128,46132]"/>
  <match src="primitive_type [101057,101064]" dest="primitive_type [39619,39626]"/>
  <match src="primitive_type [92978,92985]" dest="primitive_type [31542,31549]"/>
  <match src="}: } [95557,95558]" dest="}: } [34121,34122]"/>
  <match src="identifier: SafeMath [1194,1202]" dest="identifier: SafeMath [1773,1781]"/>
  <match src="call_argument [33260,33266]" dest="call_argument [47841,47847]"/>
  <match src="identifier: outstanding [100853,100864]" dest="identifier: outstanding [39415,39426]"/>
  <match src="return: return [91462,91468]" dest="return: return [30026,30032]"/>
  <match src="(: ( [93011,93012]" dest="(: ( [31575,31576]"/>
  <match src="call_argument [8065,8103]" dest="call_argument [8650,8688]"/>
  <match src="function_definition [9118,9311]" dest="function_definition [9703,9896]"/>
  <match src="identifier: epochTimeWithStrategy [94577,94598]" dest="identifier: epochTimeWithStrategy [33141,33162]"/>
  <match src="identifier: this [49198,49202]" dest="identifier: this [54911,54915]"/>
  <match src="internal: internal [7543,7551]" dest="internal: internal [8128,8136]"/>
  <match src="identifier: epochs [95659,95665]" dest="identifier: epochs [34223,34229]"/>
  <match src="return: return [11615,11621]" dest="return: return [12200,12206]"/>
  <match src="(: ( [93627,93628]" dest="(: ( [32191,32192]"/>
  <match src=",: , [84132,84133]" dest=",: , [77971,77972]"/>
  <match src="string [68389,68398]" dest="string [70748,70779]"/>
  <match src="call_argument [75381,75387]" dest="call_argument [55229,55235]"/>
  <match src=",: , [79846,79847]" dest=",: , [80591,80592]"/>
  <match src="identifier: account [99865,99872]" dest="identifier: account [38427,38434]"/>
  <match src="member_expression [99177,99202]" dest="member_expression [37739,37764]"/>
  <match src="identifier: reason [104074,104080]" dest="identifier: reason [42636,42642]"/>
  <match src="identifier: decrementBalanceOfPhantom [82354,82379]" dest="identifier: placeLock [77760,77769]"/>
  <match src="identifier: current [94544,94551]" dest="identifier: current [33108,33115]"/>
  <match src="call_expression [83253,83291]" dest="call_expression [71005,71029]"/>
  <match src=".: . [99595,99596]" dest=".: . [38157,38158]"/>
  <match src="primitive_type [94308,94315]" dest="primitive_type [32872,32879]"/>
  <match src="number_literal: 1 [81648,81649]" dest="number_literal: 1 [71310,71311]"/>
  <match src=".: . [10301,10302]" dest=".: . [10886,10887]"/>
  <match src="(: ( [100585,100586]" dest="(: ( [39147,39148]"/>
  <match src="type_name [7521,7528]" dest="type_name [8106,8113]"/>
  <match src="member_expression [49115,49141]" dest="member_expression [54872,54893]"/>
  <match src=",: , [99721,99722]" dest=",: , [38283,38284]"/>
  <match src="parameter [103152,103167]" dest="parameter [41714,41729]"/>
  <match src="function_body [94915,94956]" dest="function_body [33479,33520]"/>
  <match src="bytes32: bytes32 [105169,105176]" dest="bytes32: bytes32 [67237,67244]"/>
  <match src=",: , [10222,10223]" dest=",: , [10807,10808]"/>
  <match src="type_name [7341,7348]" dest="type_name [7926,7933]"/>
  <match src="identifier: result [38909,38915]" dest="identifier: result [53490,53496]"/>
  <match src="}: } [7658,7659]" dest="}: } [8243,8244]"/>
  <match src="): ) [46200,46201]" dest="): ) [15357,15358]"/>
  <match src=".: . [73030,73031]" dest=".: . [65413,65414]"/>
  <match src="constant: constant [6885,6893]" dest="constant: constant [7470,7478]"/>
  <match src="identifier: sender [81628,81634]" dest="identifier: sender [71290,71296]"/>
  <match src="array_access [38809,38827]" dest="array_access [53390,53408]"/>
  <match src=",: , [81529,81530]" dest=",: , [70241,70242]"/>
  <match src="identifier: provide [82567,82574]" dest="identifier: mintToBonded [58242,58254]"/>
  <match src="parameter [30896,30910]" dest="parameter [45477,45491]"/>
  <match src="type_name [77908,77915]" dest="type_name [76993,77000]"/>
  <match src="(: ( [80642,80643]" dest="(: ( [55696,55697]"/>
  <match src="): ) [32763,32764]" dest="): ) [47344,47345]"/>
  <match src="identifier: sender [81068,81074]" dest="identifier: sender [69930,69936]"/>
  <match src="function: function [13032,13040]" dest="function: function [22823,22831]"/>
  <match src="primitive_type [104116,104123]" dest="primitive_type [42678,42685]"/>
  <match src="constant: constant [29531,29539]" dest="constant: constant [44112,44120]"/>
  <match src="): ) [80398,80399]" dest="): ) [69546,69547]"/>
  <match src=".: . [101963,101964]" dest=".: . [40525,40526]"/>
  <match src="identifier: account [96026,96033]" dest="identifier: account [34590,34597]"/>
  <match src="pure: pure [1941,1945]" dest="pure: pure [2520,2524]"/>
  <match src="visibility [5928,5936]" dest="visibility [6507,6515]"/>
  <match src="if: if [11546,11548]" dest="if: if [12131,12133]"/>
  <match src="call_argument [101408,101414]" dest="call_argument [39970,39976]"/>
  <match src="yul_identifier [86037,86044]" dest="yul_identifier [72843,72850]"/>
  <match src="identifier: block [94933,94938]" dest="identifier: block [33497,33502]"/>
  <match src="event_definition [54521,54568]" dest="event_definition [21611,21658]"/>
  <match src="call_argument [81531,81536]" dest="call_argument [70243,70248]"/>
  <match src="array_access [103782,103810]" dest="array_access [42344,42372]"/>
  <match src="function_body [105775,105975]" dest="function_body [67843,68043]"/>
  <match src="primitive_type [15288,15295]" dest="primitive_type [25079,25086]"/>
  <match src="identifier: msg [82170,82173]" dest="identifier: msg [71084,71087]"/>
  <match src="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [36654,36716]" dest="comment: /* solium-disable-next-line security/no-modify-for-iter-var */ [51235,51297]"/>
  <match src="): ) [29938,29939]" dest="): ) [44519,44520]"/>
  <match src="identifier: getInitialStakeMultiple [81257,81280]" dest="identifier: getInitialStakeMultiple [70022,70045]"/>
  <match src="internal: internal [4477,4485]" dest="internal: internal [5056,5064]"/>
  <match src="user_defined_type [66547,66559]" dest="user_defined_type [64878,64890]"/>
  <match src=".: . [101387,101388]" dest=".: . [39949,39950]"/>
  <match src="memory: memory [8661,8667]" dest="memory: memory [9246,9252]"/>
  <match src="comment: // 24 epochs [43849,43861]" dest="comment: // 24 epochs [13006,13018]"/>
  <match src="): ) [67213,67214]" dest="): ) [65852,65853]"/>
  <match src="byte: byte [29660,29664]" dest="byte: byte [44241,44245]"/>
  <match src="): ) [9955,9956]" dest="): ) [10540,10541]"/>
  <match src="}: } [63060,63061]" dest="}: } [26919,26920]"/>
  <match src="uint256: uint256 [79413,79420]" dest="uint256: uint256 [68699,68706]"/>
  <match src=".: . [76912,76913]" dest=".: . [60779,60780]"/>
  <match src="visibility [79651,79658]" dest="visibility [68723,68730]"/>
  <match src="function_definition [34169,34955]" dest="function_definition [48750,49536]"/>
  <match src="pure: pure [54614,54618]" dest="pure: pure [21704,21708]"/>
  <match src="}: } [47345,47346]" dest="}: } [16502,16503]"/>
  <match src="using_directive [17370,17397]" dest="using_directive [59820,59847]"/>
  <match src="identifier: payloadA [33303,33311]" dest="identifier: payloadA [47884,47892]"/>
  <match src="contract: contract [97790,97798]" dest="contract: contract [36352,36360]"/>
  <match src="&quot;: &quot; [1591,1592]" dest="&quot;: &quot; [2170,2171]"/>
  <match src="binary_expression [35623,35637]" dest="binary_expression [50204,50218]"/>
  <match src="expression_statement [38280,38316]" dest="expression_statement [52861,52897]"/>
  <match src="(: ( [33142,33143]" dest="(: ( [47723,47724]"/>
  <match src="string_literal [52285,52328]" dest="string_literal [63757,63795]"/>
  <match src="{: { [24928,24929]" dest="{: { [55148,55149]"/>
  <match src="identifier: epoch [95358,95363]" dest="identifier: epoch [33922,33927]"/>
  <match src="expression_statement [100258,100316]" dest="expression_statement [38820,38878]"/>
  <match src="=: = [100558,100559]" dest="=: = [39120,39121]"/>
  <match src="): ) [45991,45992]" dest="): ) [15148,15149]"/>
  <match src="internal: internal [74689,74697]" dest="internal: internal [55139,55147]"/>
  <match src="primitive_type [95483,95490]" dest="primitive_type [34047,34054]"/>
  <match src="identifier: msg [80381,80384]" dest="identifier: msg [69529,69532]"/>
  <match src="identifier: newPhantom [81177,81187]" dest="identifier: totalRedeemable [61150,61165]"/>
  <match src="parenthesized_expression [34411,34936]" dest="parenthesized_expression [48992,49517]"/>
  <match src="return_statement [10417,10448]" dest="return_statement [11002,11033]"/>
  <match src="identifier: balanceOf [93454,93463]" dest="identifier: balanceOf [32018,32027]"/>
  <match src="identifier: b [10726,10727]" dest="identifier: b [11311,11312]"/>
  <match src="type_name [92649,92656]" dest="type_name [31213,31220]"/>
  <match src="return_type_definition [94404,94421]" dest="return_type_definition [32968,32985]"/>
  <match src="identifier: account [103160,103167]" dest="identifier: account [41722,41729]"/>
  <match src="member_expression [93835,93871]" dest="member_expression [32399,32435]"/>
  <match src="[: [ [99899,99900]" dest="[: [ [38461,38462]"/>
  <match src="identifier: balanceOfStaged [93105,93120]" dest="identifier: balanceOfStaged [31669,31684]"/>
  <match src="byte: byte [37305,37309]" dest="byte: byte [51886,51890]"/>
  <match src="call_argument [100308,100314]" dest="call_argument [38870,38876]"/>
  <match src="identifier: provider [88032,88040]" dest="identifier: provider [28875,28883]"/>
  <match src="event_paramater [15551,15564]" dest="event_paramater [25342,25355]"/>
  <match src="address: address [15015,15022]" dest="address: address [24806,24813]"/>
  <match src="identifier: PoolSetters [79364,79375]" dest="identifier: Setters [68653,68660]"/>
  <match src="member_expression [105614,105655]" dest="member_expression [67682,67723]"/>
  <match src="function: function [55393,55401]" dest="function: function [22483,22491]"/>
  <match src="primitive_type [34315,34322]" dest="primitive_type [48896,48903]"/>
  <match src="}: } [91597,91598]" dest="}: } [30161,30162]"/>
  <match src="identifier: incrementBalanceOfClaimable [82199,82226]" dest="identifier: incrementBalanceOfCoupons [62264,62289]"/>
  <match src="): ) [92849,92850]" dest="): ) [31413,31414]"/>
  <match src="return_statement [47583,47633]" dest="return_statement [16740,16790]"/>
  <match src="user_defined_type [97810,97815]" dest="user_defined_type [36372,36377]"/>
  <match src="member_expression [102144,102164]" dest="member_expression [40706,40726]"/>
  <match src="identifier: start [94733,94738]" dest="identifier: start [33297,33302]"/>
  <match src="(: ( [94905,94906]" dest="(: ( [33469,33470]"/>
  <match src="(: ( [8064,8065]" dest="(: ( [8649,8650]"/>
  <match src="identifier: amount [99723,99729]" dest="identifier: amount [38285,38291]"/>
  <match src="member_expression [11356,11381]" dest="member_expression [11941,11966]"/>
  <match src="parameter [94992,95005]" dest="parameter [33556,33569]"/>
  <match src="view: view [95303,95307]" dest="view: view [33867,33871]"/>
  <match src=".: . [47558,47559]" dest=".: . [16715,16716]"/>
  <match src="(: ( [47936,47937]" dest="(: ( [17093,17094]"/>
  <match src="type_name [86814,86821]" dest="type_name [27657,27664]"/>
  <match src="for: for [79409,79412]" dest="for: for [68695,68698]"/>
  <match src="}: } [100608,100609]" dest="}: } [39170,39171]"/>
  <match src="call_argument [101224,101230]" dest="call_argument [39786,39792]"/>
  <match src="function: function [99079,99087]" dest="function: function [37641,37649]"/>
  <match src="]: ] [95671,95672]" dest="]: ] [34235,34236]"/>
  <match src="uint256: uint256 [4438,4445]" dest="uint256: uint256 [5017,5024]"/>
  <match src="call_argument [81519,81529]" dest="call_argument [70231,70241]"/>
  <match src="using_directive [79394,79421]" dest="using_directive [68680,68707]"/>
  <match src="type_name [87786,87793]" dest="type_name [28629,28636]"/>
  <match src=".: . [68317,68318]" dest=".: . [78871,78872]"/>
  <match src="identifier: char [38940,38944]" dest="identifier: char [53521,53525]"/>
  <match src="state_mutability [92635,92639]" dest="state_mutability [31199,31203]"/>
  <match src="}: } [1621,1622]" dest="}: } [2200,2201]"/>
  <match src="identifier: spender [13875,13882]" dest="identifier: spender [23666,23673]"/>
  <match src="parameter [34261,34277]" dest="parameter [48842,48858]"/>
  <match src=".: . [8978,8979]" dest=".: . [9563,9564]"/>
  <match src="call_expression [23678,23746]" dest="call_expression [61838,61957]"/>
  <match src="primitive_type [96342,96349]" dest="primitive_type [34906,34913]"/>
  <match src="): ) [80354,80355]" dest="): ) [55856,55857]"/>
  <match src="assignment_expression [98618,98683]" dest="assignment_expression [37180,37245]"/>
  <match src="visibility [91845,91851]" dest="visibility [30409,30415]"/>
  <match src="number_literal: 1 [35679,35680]" dest="number_literal: 1 [50260,50261]"/>
  <match src="function_definition [11005,11120]" dest="function_definition [11590,11705]"/>
  <match src="identifier: msg [81734,81737]" dest="identifier: msg [70963,70966]"/>
  <match src="identifier: start [79987,79992]" dest="identifier: start [68930,68935]"/>
  <match src="{: { [35786,35787]" dest="{: { [50367,50368]"/>
  <match src=".: . [84256,84257]" dest=".: . [76350,76351]"/>
  <match src="internal: internal [7363,7371]" dest="internal: internal [7948,7956]"/>
  <match src="address: address [99774,99781]" dest="address: address [38336,38343]"/>
  <match src="identifier: b [1535,1536]" dest="identifier: b [2114,2115]"/>
  <match src="}: } [6030,6031]" dest="}: } [6609,6610]"/>
  <match src="return_statement [46257,46307]" dest="return_statement [15414,15464]"/>
  <match src="if_statement [104315,104415]" dest="if_statement [42877,42977]"/>
  <match src="function_body [9887,9967]" dest="function_body [10472,10552]"/>
  <match src="function: function [11177,11185]" dest="function: function [11762,11770]"/>
  <match src="member_expression [102454,102467]" dest="member_expression [41016,41029]"/>
  <match src="member_expression [102838,102878]" dest="member_expression [41400,41440]"/>
  <match src="identifier: value [6993,6998]" dest="identifier: value [7578,7583]"/>
  <match src="binary_expression [38497,38503]" dest="binary_expression [53078,53084]"/>
  <match src="call_argument [24793,24799]" dest="call_argument [54950,54956]"/>
  <match src="identifier: sender [98250,98256]" dest="identifier: sender [36812,36818]"/>
  <match src="): ) [45959,45960]" dest="): ) [15116,15117]"/>
  <match src="identifier: epoch [95444,95449]" dest="identifier: epoch [34008,34013]"/>
  <match src="identifier: IUniswapV2Pair [78258,78272]" dest="identifier: dollar [59071,59077]"/>
  <match src=",: , [33888,33889]" dest=",: , [48469,48470]"/>
  <match src="block_statement [31685,32087]" dest="block_statement [46266,46668]"/>
  <match src="state_mutability [91990,91994]" dest="state_mutability [30554,30558]"/>
  <match src="call_argument [47757,47787]" dest="call_argument [16914,16944]"/>
  <match src="identifier: b [1929,1930]" dest="identifier: b [2508,2509]"/>
  <match src="state_mutability [91422,91426]" dest="state_mutability [29986,29990]"/>
  <match src="return_statement [7425,7461]" dest="return_statement [8010,8046]"/>
  <match src="(: ( [102281,102282]" dest="(: ( [40843,40844]"/>
  <match src="-: - [52138,52139]" dest="-: - [63683,63684]"/>
  <match src="return: return [94165,94171]" dest="return: return [32729,32735]"/>
  <match src="identifier: candidates [103595,103605]" dest="identifier: candidates [42157,42167]"/>
  <match src="event_definition [54333,54515]" dest="event_definition [21423,21605]"/>
  <match src="call_argument [52277,52283]" dest="call_argument [63749,63755]"/>
  <match src="member_expression [103820,103855]" dest="member_expression [42382,42417]"/>
  <match src="]: ] [38288,38289]" dest="]: ] [52869,52870]"/>
  <match src="function_definition [10190,10315]" dest="function_definition [10775,10900]"/>
  <match src=".: . [102150,102151]" dest=".: . [40712,40713]"/>
  <match src="returns: returns [35104,35111]" dest="returns: returns [49685,49692]"/>
  <match src="identifier: file [34521,34525]" dest="identifier: file [49102,49106]"/>
  <match src="(: ( [94991,94992]" dest="(: ( [33555,33556]"/>
  <match src="(: ( [47268,47269]" dest="(: ( [16425,16426]"/>
  <match src="uint256: uint256 [15551,15558]" dest="uint256: uint256 [25342,25349]"/>
  <match src="address: address [101457,101464]" dest="address: address [40019,40026]"/>
  <match src="view: view [95742,95746]" dest="view: view [34306,34310]"/>
  <match src="number_literal: 0 [82686,82687]" dest="number_literal: 0 [58333,58334]"/>
  <match src="(: ( [102799,102800]" dest="(: ( [41361,41362]"/>
  <match src=".: . [93919,93920]" dest=".: . [32483,32484]"/>
  <match src="inheritance_specifier [50808,50814]" dest="inheritance_specifier [25967,25973]"/>
  <match src="type_name [62998,63002]" dest="type_name [26857,26861]"/>
  <match src="parameter [103911,103928]" dest="parameter [42473,42490]"/>
  <match src="): ) [32748,32749]" dest="): ) [47329,47330]"/>
  <match src="call_argument [105860,105864]" dest="call_argument [67928,67932]"/>
  <match src="identifier: updatePrice [67076,67087]" dest="identifier: growSupply [65562,65572]"/>
  <match src="parameter [53444,53448]" dest="parameter [20534,20538]"/>
  <match src="{: { [102227,102228]" dest="{: { [40789,40790]"/>
  <match src="return: return [91886,91892]" dest="return: return [30450,30456]"/>
  <match src="visibility [94287,94293]" dest="visibility [32851,32857]"/>
  <match src="(: ( [93834,93835]" dest="(: ( [32398,32399]"/>
  <match src="call_argument [52073,52079]" dest="call_argument [54918,54924]"/>
  <match src="array_access [95652,95672]" dest="array_access [34216,34236]"/>
  <match src="parameter [30312,30326]" dest="parameter [44893,44907]"/>
  <match src="parenthesized_expression [32317,32764]" dest="parenthesized_expression [46898,47345]"/>
  <match src="identifier: candidate [103919,103928]" dest="identifier: candidate [42481,42490]"/>
  <match src="uint256: uint256 [51995,52002]" dest="uint256: uint256 [54836,54843]"/>
  <match src="(: ( [67272,67273]" dest="(: ( [65870,65871]"/>
  <match src="function_definition [92499,92599]" dest="function_definition [31063,31163]"/>
  <match src="call_argument [82494,82504]" dest="call_argument [70805,70815]"/>
  <match src="): ) [101871,101872]" dest="): ) [40433,40434]"/>
  <match src="identifier: transferFrom [80228,80240]" dest="identifier: transferFrom [69403,69415]"/>
  <match src=",: , [33641,33642]" dest=",: , [48222,48223]"/>
  <match src="struct_member [87459,87473]" dest="struct_member [28302,28316]"/>
  <match src="type_name [8601,8608]" dest="type_name [9186,9193]"/>
  <match src="type_name [87811,87818]" dest="type_name [28654,28661]"/>
  <match src="struct_member [44323,44337]" dest="struct_member [13480,13494]"/>
  <match src="type_cast_expression [49190,49203]" dest="type_cast_expression [54903,54916]"/>
  <match src="{: { [29940,29941]" dest="{: { [44521,44522]"/>
  <match src=".: . [99587,99588]" dest=".: . [38149,38150]"/>
  <match src=",: , [83076,83077]" dest=",: , [61032,61033]"/>
  <match src="function_body [85519,86080]" dest="function_body [72325,72886]"/>
  <match src="expression_statement [50056,50153]" dest="expression_statement [54968,55039]"/>
  <match src="function_body [105576,105744]" dest="function_body [67644,67812]"/>
  <match src="uint256: uint256 [103930,103937]" dest="uint256: uint256 [42492,42499]"/>
  <match src="identifier: accounts [104201,104209]" dest="identifier: accounts [42763,42771]"/>
  <match src="identifier: ADVANCE_INCENTIVE [44864,44881]" dest="identifier: ADVANCE_INCENTIVE [14021,14038]"/>
  <match src="constant: constant [45117,45125]" dest="constant: constant [14274,14282]"/>
  <match src="identifier: FILE [84147,84151]" dest="identifier: FILE [77986,77990]"/>
  <match src="array_access [101695,101743]" dest="array_access [40257,40305]"/>
  <match src="function_definition [7191,7309]" dest="function_definition [7776,7894]"/>
  <match src="event_definition [79750,79805]" dest="event_definition [68825,68880]"/>
  <match src="identifier: LPAREN [29630,29636]" dest="identifier: LPAREN [44211,44217]"/>
  <match src="=: = [104192,104193]" dest="=: = [42754,42755]"/>
  <match src="identifier: Vote [103198,103202]" dest="identifier: Vote [41760,41764]"/>
  <match src="call_expression [81055,81075]" dest="call_expression [69917,69937]"/>
  <match src="memory: memory [67480,67486]" dest="memory: memory [66343,66349]"/>
  <match src="identifier: this [78292,78296]" dest="identifier: this [59093,59097]"/>
  <match src="identifier: that [84067,84071]" dest="identifier: that [77930,77934]"/>
  <match src=":: : [7871,7872]" dest=":: : [8456,8457]"/>
  <match src="expression_statement [89971,90004]" dest="expression_statement [74604,74637]"/>
  <match src="identifier: _state [91893,91899]" dest="identifier: _state [30457,30463]"/>
  <match src="view: view [92635,92639]" dest="view: view [31199,31203]"/>
  <match src="identifier: account [100490,100497]" dest="identifier: account [39052,39059]"/>
  <match src=".: . [104016,104017]" dest=".: . [42578,42579]"/>
  <match src="identifier: amount [74681,74687]" dest="identifier: amount [55131,55137]"/>
  <match src="identifier: add [98503,98506]" dest="identifier: add [37065,37068]"/>
  <match src="(: ( [50882,50883]" dest="(: ( [26041,26042]"/>
  <match src="uint256: uint256 [79905,79912]" dest="uint256: uint256 [69021,69028]"/>
  <match src="identifier: State [88246,88251]" dest="identifier: State [29089,29094]"/>
  <match src=",: , [53198,53199]" dest=",: , [20288,20289]"/>
  <match src="): ) [9503,9504]" dest="): ) [10088,10089]"/>
  <match src=".: . [46653,46654]" dest=".: . [15810,15811]"/>
  <match src="assignment_expression [37293,37328]" dest="assignment_expression [51874,51909]"/>
  <match src="}: } [7005,7006]" dest="}: } [7590,7591]"/>
  <match src="function: function [54809,54817]" dest="function: function [21899,21907]"/>
  <match src="identifier: payloadC [34837,34845]" dest="identifier: payloadC [49418,49426]"/>
  <match src="identifier: amount [75659,75665]" dest="identifier: amount [63587,63593]"/>
  <match src="struct_member [87508,87524]" dest="struct_member [28351,28367]"/>
  <match src="address: address [104116,104123]" dest="address: address [42678,42685]"/>
  <match src="identifier: Account [88072,88079]" dest="identifier: Account [28915,28922]"/>
  <match src="member_expression [101532,101543]" dest="member_expression [40094,40105]"/>
  <match src="bytes: bytes [37042,37047]" dest="bytes: bytes [51623,51628]"/>
  <match src="identifier: value [9270,9275]" dest="identifier: value [9855,9860]"/>
  <match src=",: , [34526,34527]" dest=",: , [49107,49108]"/>
  <match src="identifier: that [49942,49946]" dest="identifier: that [61846,61850]"/>
  <match src="expression_statement [82643,82760]" dest="expression_statement [58290,58405]"/>
  <match src="]: ] [101978,101979]" dest="]: ] [40540,40541]"/>
  <match src="): ) [73166,73167]" dest="): ) [79679,79680]"/>
  <match src="call_expression [67495,67563]" dest="call_expression [66371,66389]"/>
  <match src="identifier: mod [5874,5877]" dest="identifier: mod [6453,6456]"/>
  <match src="(: ( [11064,11065]" dest="(: ( [11649,11650]"/>
  <match src="): ) [100057,100058]" dest="): ) [38619,38620]"/>
  <match src="call_expression [100204,100247]" dest="call_expression [38766,38809]"/>
  <match src="primitive_type [54307,54314]" dest="primitive_type [21397,21404]"/>
  <match src="call_argument [105879,105900]" dest="call_argument [67947,67968]"/>
  <match src="(: ( [34603,34604]" dest="(: ( [49184,49185]"/>
  <match src="{: { [9268,9269]" dest="{: { [9853,9854]"/>
  <match src="external: external [53821,53829]" dest="external: external [20911,20919]"/>
  <match src=",: , [32899,32900]" dest=",: , [47480,47481]"/>
  <match src=".: . [98502,98503]" dest=".: . [37064,37065]"/>
  <match src="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [15331,15482]" dest="comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [25122,25273]"/>
  <match src="member_expression [100824,100864]" dest="member_expression [39386,39426]"/>
  <match src=".: . [98954,98955]" dest=".: . [37516,37517]"/>
  <match src="): ) [105630,105631]" dest="): ) [67698,67699]"/>
  <match src=",: , [5887,5888]" dest=",: , [6466,6467]"/>
  <match src=",: , [90506,90507]" dest=",: , [75139,75140]"/>
  <match src="{: { [86700,86701]" dest="{: { [27543,27544]"/>
  <match src="type_name [66724,66728]" dest="type_name [66357,66361]"/>
  <match src=",: , [84456,84457]" dest=",: , [76928,76929]"/>
  <match src="assembly: assembly [35777,35785]" dest="assembly: assembly [50358,50366]"/>
  <match src="(: ( [38692,38693]" dest="(: ( [53273,53274]"/>
  <match src="): ) [46621,46622]" dest="): ) [15778,15779]"/>
  <match src="): ) [34610,34611]" dest="): ) [49191,49192]"/>
  <match src="expression_statement [38868,38879]" dest="expression_statement [53449,53460]"/>
  <match src="call_expression [99177,99214]" dest="call_expression [37739,37776]"/>
  <match src="&amp;: &amp; [38837,38838]" dest="&amp;: &amp; [53418,53419]"/>
  <match src="identifier: sub [94720,94723]" dest="identifier: sub [33284,33287]"/>
  <match src="(: ( [11549,11550]" dest="(: ( [12134,12135]"/>
  <match src="(: ( [88113,88114]" dest="(: ( [28956,28957]"/>
  <match src="returns: returns [91542,91549]" dest="returns: returns [30106,30113]"/>
  <match src="member_expression [46264,46276]" dest="member_expression [15421,15433]"/>
  <match src="identifier: newPhantomFromBonded [83230,83250]" dest="identifier: totalDebt [57107,57116]"/>
  <match src="state_mutability [94131,94135]" dest="state_mutability [32695,32699]"/>
  <match src="identifier: upgradeTo [89745,89754]" dest="identifier: upgradeTo [74378,74387]"/>
  <match src="expression_statement [4587,4616]" dest="expression_statement [5166,5195]"/>
  <match src="visibility [54956,54964]" dest="visibility [22046,22054]"/>
  <match src="primitive_type [29867,29874]" dest="primitive_type [44448,44455]"/>
  <match src="binary_expression [37687,37697]" dest="binary_expression [52268,52278]"/>
  <match src="(: ( [5228,5229]" dest="(: ( [5807,5808]"/>
  <match src="string [23707,23745]" dest="string [61915,61946]"/>
  <match src="uint256: uint256 [36232,36239]" dest="uint256: uint256 [50813,50820]"/>
  <match src="array_access [95991,96019]" dest="array_access [34555,34583]"/>
  <match src="(: ( [80795,80796]" dest="(: ( [69664,69665]"/>
  <match src="primitive_type [81169,81176]" dest="primitive_type [61142,61149]"/>
  <match src="identifier: self [8155,8159]" dest="identifier: self [8740,8744]"/>
  <match src="function_body [51867,51930]" dest="function_body [54622,54786]"/>
  <match src="identifier: D256 [47559,47563]" dest="identifier: D256 [16716,16720]"/>
  <match src="identifier: _state [100560,100566]" dest="identifier: _state [39122,39128]"/>
  <match src="identifier: b [10163,10164]" dest="identifier: b [10748,10749]"/>
  <match src="address: address [52479,52486]" dest="address: address [60410,60417]"/>
  <match src="(: ( [53359,53360]" dest="(: ( [20449,20450]"/>
  <match src="type_name [89852,89856]" dest="type_name [74485,74489]"/>
  <match src="(: ( [22818,22819]" dest="(: ( [55348,55349]"/>
  <match src="bool: bool [29824,29828]" dest="bool: bool [44405,44409]"/>
  <match src="visibility [31639,31647]" dest="visibility [46220,46228]"/>
  <match src="primitive_type [32858,32865]" dest="primitive_type [47439,47446]"/>
  <match src="identifier: FOUR_BIT_MASK [38839,38852]" dest="identifier: FOUR_BIT_MASK [53420,53433]"/>
  <match src="primitive_type [104451,104458]" dest="primitive_type [43013,43020]"/>
  <match src="(: ( [95173,95174]" dest="(: ( [33737,33738]"/>
  <match src="return: return [46126,46132]" dest="return: return [15283,15289]"/>
  <match src=".: . [82230,82231]" dest=".: . [62293,62294]"/>
  <match src="type_name [10775,10779]" dest="type_name [11360,11364]"/>
  <match src="member_expression [76903,76936]" dest="member_expression [60770,60799]"/>
  <match src="visibility [53881,53889]" dest="visibility [20971,20979]"/>
  <match src=".: . [8078,8079]" dest=".: . [8663,8664]"/>
  <match src="call_argument [100912,100918]" dest="call_argument [39474,39480]"/>
  <match src="=: = [44211,44212]" dest="=: = [13368,13369]"/>
  <match src="call_argument [81064,81074]" dest="call_argument [69926,69936]"/>
  <match src="type_name [44839,44846]" dest="type_name [13996,14003]"/>
  <match src="}: } [10996,10997]" dest="}: } [11581,11582]"/>
  <match src="call_expression [96683,96730]" dest="call_expression [35247,35294]"/>
  <match src=".: . [81803,81804]" dest=".: . [70531,70532]"/>
  <match src="(: ( [24887,24888]" dest="(: ( [55105,55106]"/>
  <match src="&gt;: &gt; [11630,11631]" dest="&gt;: &gt; [12215,12216]"/>
  <match src="]: ] [101716,101717]" dest="]: ] [40278,40279]"/>
  <match src="identifier: _state [98642,98648]" dest="identifier: _state [37204,37210]"/>
  <match src="): ) [53360,53361]" dest="): ) [20450,20451]"/>
  <match src="parameter [102561,102574]" dest="parameter [41123,41136]"/>
  <match src="return_type_definition [47696,47725]" dest="return_type_definition [16853,16882]"/>
  <match src="visibility [93564,93570]" dest="visibility [32128,32134]"/>
  <match src="identifier: b [4595,4596]" dest="identifier: b [5174,5175]"/>
  <match src="{: { [9469,9470]" dest="{: { [10054,10055]"/>
  <match src="function: function [98107,98115]" dest="function: function [36669,36677]"/>
  <match src="type_name [54186,54193]" dest="type_name [21276,21283]"/>
  <match src="call_expression [34459,34902]" dest="call_expression [49040,49483]"/>
  <match src="array_access [103418,103446]" dest="array_access [41980,42008]"/>
  <match src="visibility [10514,10522]" dest="visibility [11099,11107]"/>
  <match src="identifier: account [101465,101472]" dest="identifier: account [40027,40034]"/>
  <match src="primitive_type [93159,93166]" dest="primitive_type [31723,31730]"/>
  <match src="parameter [54738,54745]" dest="parameter [21828,21835]"/>
  <match src="byte: byte [38292,38296]" dest="byte: byte [52873,52877]"/>
  <match src="call_argument [83004,83035]" dest="call_argument [78209,78220]"/>
  <match src="(: ( [52094,52095]" dest="(: ( [63610,63611]"/>
  <match src="primitive_type [15551,15558]" dest="primitive_type [25342,25349]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [47611,47630]" dest="identifier: SUPPLY_CHANGE_LIMIT [16768,16787]"/>
  <match src="call_expression [81636,81643]" dest="call_expression [71298,71305]"/>
  <match src=".: . [99534,99535]" dest=".: . [38096,38097]"/>
  <match src="call_argument [105346,105353]" dest="call_argument [67414,67421]"/>
  <match src="primitive_type [94992,94999]" dest="primitive_type [33556,33563]"/>
  <match src="(: ( [47050,47051]" dest="(: ( [16207,16208]"/>
  <match src=".: . [88079,88080]" dest=".: . [28922,28923]"/>
  <match src="call_expression [100762,100813]" dest="call_expression [39324,39375]"/>
  <match src="mapping: mapping [87559,87566]" dest="mapping: mapping [28402,28409]"/>
  <match src="primitive_type [53100,53107]" dest="primitive_type [20190,20197]"/>
  <match src=",: , [13865,13866]" dest=",: , [23656,23657]"/>
  <match src="identifier: amount [99921,99927]" dest="identifier: amount [38483,38489]"/>
  <match src="(: ( [53233,53234]" dest="(: ( [20323,20324]"/>
  <match src="!=: != [105355,105357]" dest="!=: != [67423,67425]"/>
  <match src="!: ! [33745,33746]" dest="!: ! [48326,48327]"/>
  <match src="call_expression [22872,22939]" dest="call_expression [62615,62718]"/>
  <match src="member_expression [100930,100944]" dest="member_expression [39492,39506]"/>
  <match src="revert: revert [29955,29961]" dest="revert: revert [44536,44542]"/>
  <match src=".: . [102762,102763]" dest=".: . [41324,41325]"/>
  <match src="member_expression [83253,83295]" dest="member_expression [71005,71033]"/>
  <match src="type_name [98421,98428]" dest="type_name [36983,36990]"/>
  <match src="(: ( [98008,98009]" dest="(: ( [36570,36571]"/>
  <match src="function_definition [46585,46741]" dest="function_definition [15742,15898]"/>
  <match src="expression_statement [81822,81943]" dest="expression_statement [79029,79231]"/>
  <match src="struct_member [87836,87851]" dest="struct_member [28679,28694]"/>
  <match src="primitive_type [54293,54297]" dest="primitive_type [21383,21387]"/>
  <match src="type_name [95138,95145]" dest="type_name [33702,33709]"/>
  <match src="primitive_type [32336,32342]" dest="primitive_type [46917,46923]"/>
  <match src="identifier: must [33614,33618]" dest="identifier: must [48195,48199]"/>
  <match src="identifier: reason [8334,8340]" dest="identifier: reason [8919,8925]"/>
  <match src="state_variable_declaration [45002,45056]" dest="state_variable_declaration [14159,14213]"/>
  <match src="identifier: i [37503,37504]" dest="identifier: i [52084,52085]"/>
  <match src="identifier: account [50951,50958]" dest="identifier: account [26110,26117]"/>
  <match src="parameter [53719,53729]" dest="parameter [20809,20819]"/>
  <match src="): ) [100314,100315]" dest="): ) [38876,38877]"/>
  <match src="identifier: input [39076,39081]" dest="identifier: input [53657,53662]"/>
  <match src="binary_expression [93835,93881]" dest="binary_expression [32399,32445]"/>
  <match src="type_name [29367,29374]" dest="type_name [43948,43955]"/>
  <match src="return: return [91577,91583]" dest="return: return [30141,30147]"/>
  <match src="string: string [99280,99286]" dest="string: string [37842,37848]"/>
  <match src="{: { [5960,5961]" dest="{: { [6539,6540]"/>
  <match src="(: ( [34411,34412]" dest="(: ( [48992,48993]"/>
  <match src="expression_statement [76853,76940]" dest="expression_statement [60813,60867]"/>
  <match src="]: ] [100463,100464]" dest="]: ] [39025,39026]"/>
  <match src="function_definition [89556,89585]" dest="function_definition [74189,74218]"/>
  <match src=".: . [98777,98778]" dest=".: . [37339,37340]"/>
  <match src="(: ( [38342,38343]" dest="(: ( [52923,52924]"/>
  <match src="return: return [96676,96682]" dest="return: return [35240,35246]"/>
  <match src="identifier: Context [17347,17354]" dest="identifier: Comptroller [59794,59805]"/>
  <match src="): ) [53574,53575]" dest="): ) [20664,20665]"/>
  <match src="primitive_type [54387,54391]" dest="primitive_type [21477,21481]"/>
  <match src="[: [ [101145,101146]" dest="[: [ [39707,39708]"/>
  <match src="internal: internal [103209,103217]" dest="internal: internal [41771,41779]"/>
  <match src="expression_statement [103588,103684]" dest="expression_statement [42150,42246]"/>
  <match src="assignment_expression [101242,101345]" dest="assignment_expression [39804,39907]"/>
  <match src="type_name [37072,37079]" dest="type_name [51653,51660]"/>
  <match src="identifier: b [10660,10661]" dest="identifier: b [11245,11246]"/>
  <match src="type_name [54147,54154]" dest="type_name [21237,21244]"/>
  <match src="primitive_type [17500,17507]" dest="primitive_type [17918,17925]"/>
  <match src="member_expression [102454,102487]" dest="member_expression [41016,41049]"/>
  <match src="call_expression [34585,34611]" dest="call_expression [49166,49192]"/>
  <match src="state_variable_declaration [45157,45205]" dest="state_variable_declaration [14314,14362]"/>
  <match src="identifier: sender [80245,80251]" dest="identifier: sender [69420,69426]"/>
  <match src="identifier: D256 [10481,10485]" dest="identifier: D256 [11066,11070]"/>
  <match src="): ) [54713,54714]" dest="): ) [21803,21804]"/>
  <match src="struct: struct [87655,87661]" dest="struct: struct [28498,28504]"/>
  <match src="identifier: that [30838,30842]" dest="identifier: that [45419,45423]"/>
  <match src="call_argument [5311,5337]" dest="call_argument [5890,5916]"/>
  <match src="identifier: owner [94188,94193]" dest="identifier: owner [32752,32757]"/>
  <match src=",: , [105845,105846]" dest=",: , [67913,67914]"/>
  <match src="uint256: uint256 [93316,93323]" dest="uint256: uint256 [31880,31887]"/>
  <match src="uint256: uint256 [47174,47181]" dest="uint256: uint256 [16331,16338]"/>
  <match src="(: ( [37962,37963]" dest="(: ( [52543,52544]"/>
  <match src="[: [ [93725,93726]" dest="[: [ [32289,32290]"/>
  <match src="primitive_type [96204,96211]" dest="primitive_type [34768,34775]"/>
  <match src="visibility [98157,98165]" dest="visibility [36719,36727]"/>
  <match src=",: , [4447,4448]" dest=",: , [5026,5027]"/>
  <match src="visibility [9627,9635]" dest="visibility [10212,10220]"/>
  <match src="(: ( [93041,93042]" dest="(: ( [31605,31606]"/>
  <match src="(: ( [93120,93121]" dest="(: ( [31684,31685]"/>
  <match src="address: address [93121,93128]" dest="address: address [31685,31692]"/>
  <match src="(: ( [82287,82288]" dest="(: ( [62227,62228]"/>
  <match src="assignment_expression [100824,100919]" dest="assignment_expression [39386,39481]"/>
  <match src="{: { [9887,9888]" dest="{: { [10472,10473]"/>
  <match src="identifier: c [3275,3276]" dest="identifier: c [3854,3855]"/>
  <match src="primitive_type [5900,5906]" dest="primitive_type [6479,6485]"/>
  <match src="member_expression [10300,10307]" dest="member_expression [10885,10892]"/>
  <match src="function_body [93305,93498]" dest="function_body [31869,32062]"/>
  <match src="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [90064,90203]" dest="comment: /**      * @dev Sets the implementation address of the proxy.      * @param newImplementation Address of the new implementation.      */ [74697,74836]"/>
  <match src="array_access [100440,100464]" dest="array_access [39002,39026]"/>
  <match src=",: , [54277,54278]" dest=",: , [21367,21368]"/>
  <match src="state_mutability [8446,8450]" dest="state_mutability [9031,9035]"/>
  <match src="identifier: that [105595,105599]" dest="identifier: that [67663,67667]"/>
  <match src="string [1992,2024]" dest="string [2571,2603]"/>
  <match src=",: , [55453,55454]" dest=",: , [22543,22544]"/>
  <match src="identifier: stringify [33371,33380]" dest="identifier: stringify [47952,47961]"/>
  <match src="variable_declaration_statement [35658,35681]" dest="variable_declaration_statement [50239,50262]"/>
  <match src="): ) [3785,3786]" dest="): ) [4364,4365]"/>
  <match src="{: { [46542,46543]" dest="{: { [15699,15700]"/>
  <match src="identifier: account [105623,105630]" dest="identifier: account [67691,67698]"/>
  <match src="address: address [96616,96623]" dest="address: address [35180,35187]"/>
  <match src=".: . [98648,98649]" dest=".: . [37210,37211]"/>
  <match src="type_name [53630,53637]" dest="type_name [20720,20727]"/>
  <match src="type_name [86970,86977]" dest="type_name [27813,27820]"/>
  <match src="state_mutability [7377,7381]" dest="state_mutability [7962,7966]"/>
  <match src="identifier: balance [99909,99916]" dest="identifier: balance [38471,38478]"/>
  <match src="call_argument [7640,7644]" dest="call_argument [8225,8229]"/>
  <match src="if_statement [39072,39153]" dest="if_statement [53653,53734]"/>
  <match src="identifier: owner [94100,94105]" dest="identifier: owner [32664,32669]"/>
  <match src="returns: returns [85504,85511]" dest="returns: returns [72310,72317]"/>
  <match src="&quot;: &quot; [50031,50032]" dest="&quot;: &quot; [55280,55281]"/>
  <match src="returns: returns [45732,45739]" dest="returns: returns [14889,14896]"/>
  <match src="call_expression [10134,10171]" dest="call_expression [10719,10756]"/>
  <match src="visibility [103762,103770]" dest="visibility [42324,42332]"/>
  <match src="): ) [32959,32960]" dest="): ) [47540,47541]"/>
  <match src="type_name [21466,21473]" dest="type_name [63228,63235]"/>
  <match src="address: address [27674,27681]" dest="address: address [60062,60069]"/>
  <match src="identifier: z [37743,37744]" dest="identifier: z [52324,52325]"/>
  <match src="primitive_type [8190,8196]" dest="primitive_type [8775,8781]"/>
  <match src="identifier: balance [98947,98954]" dest="identifier: balance [37509,37516]"/>
  <match src="identifier: EPOCH_START [45852,45863]" dest="identifier: EPOCH_START [15009,15020]"/>
  <match src="call_expression [94689,94774]" dest="call_expression [33253,33338]"/>
  <match src="function: function [96050,96058]" dest="function: function [34614,34622]"/>
  <match src="member_expression [103820,103837]" dest="member_expression [42382,42399]"/>
  <match src="(: ( [7451,7452]" dest="(: ( [8036,8037]"/>
  <match src="identifier: current [102157,102164]" dest="identifier: current [40719,40726]"/>
  <match src="primitive_type [86941,86948]" dest="primitive_type [27784,27791]"/>
  <match src="identifier: sender [80759,80765]" dest="identifier: sender [70935,70941]"/>
  <match src="call_argument [33459,33467]" dest="call_argument [48040,48048]"/>
  <match src="return_type_definition [96798,96812]" dest="return_type_definition [35362,35376]"/>
  <match src="identifier: totalBonded [81353,81364]" dest="identifier: totalBonded [70093,70104]"/>
  <match src="{: { [96529,96530]" dest="{: { [35093,35094]"/>
  <match src="address: address [97075,97082]" dest="address: address [35639,35646]"/>
  <match src=",: , [21866,21867]" dest=",: , [63857,63858]"/>
  <match src="[: [ [101255,101256]" dest="[: [ [39817,39818]"/>
  <match src="type_name [23625,23632]" dest="type_name [62883,62890]"/>
  <match src="identifier: lessThanOrEqualTo [10757,10774]" dest="identifier: lessThanOrEqualTo [11342,11359]"/>
  <match src=".: . [11633,11634]" dest=".: . [12218,12219]"/>
  <match src="call_argument [46542,46568]" dest="call_argument [15699,15725]"/>
  <match src="variable_declaration_statement [37072,37099]" dest="variable_declaration_statement [51653,51680]"/>
  <match src="{: { [22861,22862]" dest="{: { [55374,55375]"/>
  <match src="type_name [1454,1461]" dest="type_name [2033,2040]"/>
  <match src="): ) [80643,80644]" dest="): ) [55697,55698]"/>
  <match src="=: = [102431,102432]" dest="=: = [40993,40994]"/>
  <match src="identifier: shift [37593,37598]" dest="identifier: shift [52174,52179]"/>
  <match src="returns: returns [8015,8022]" dest="returns: returns [8600,8607]"/>
  <match src="): ) [10578,10579]" dest="): ) [11163,11164]"/>
  <match src="function_definition [53613,53683]" dest="function_definition [20703,20773]"/>
  <match src="type_name [89516,89523]" dest="type_name [74149,74156]"/>
  <match src="identifier: value [53652,53657]" dest="identifier: value [20742,20747]"/>
  <match src="(: ( [7490,7491]" dest="(: ( [8075,8076]"/>
  <match src="identifier: i [35522,35523]" dest="identifier: i [50103,50104]"/>
  <match src="uint256: uint256 [103746,103753]" dest="uint256: uint256 [42308,42315]"/>
  <match src="assignment_expression [38326,38365]" dest="assignment_expression [52907,52946]"/>
  <match src="(: ( [54737,54738]" dest="(: ( [21827,21828]"/>
  <match src="(: ( [13851,13852]" dest="(: ( [23642,23643]"/>
  <match src="return_statement [1975,2026]" dest="return_statement [2554,2605]"/>
  <match src="identifier: D256 [9783,9787]" dest="identifier: D256 [10368,10372]"/>
  <match src="identifier: _state [96135,96141]" dest="identifier: _state [34699,34705]"/>
  <match src="type_name [3171,3178]" dest="type_name [3750,3757]"/>
  <match src=",: , [29833,29834]" dest=",: , [44414,44415]"/>
  <match src="event_paramater [79823,79846]" dest="event_paramater [80568,80591]"/>
  <match src="(: ( [47602,47603]" dest="(: ( [16759,16760]"/>
  <match src="array_access [95991,96034]" dest="array_access [34555,34598]"/>
  <match src="member_expression [81519,81529]" dest="member_expression [70231,70241]"/>
  <match src="call_expression [102773,102827]" dest="call_expression [41335,41389]"/>
  <match src="type_alias [71042,71050]" dest="type_alias [54474,54482]"/>
  <match src=".: . [99046,99047]" dest=".: . [37608,37609]"/>
  <match src="call_expression [101381,101423]" dest="call_expression [39943,39985]"/>
  <match src="parameter [54068,54081]" dest="parameter [21158,21171]"/>
  <match src="type_cast_expression [37305,37328]" dest="type_cast_expression [51886,51909]"/>
  <match src="call_argument [8321,8332]" dest="call_argument [8906,8917]"/>
  <match src="type_name [14999,15006]" dest="type_name [24790,24797]"/>
  <match src="state_mutability [5937,5941]" dest="state_mutability [6516,6520]"/>
  <match src="return_statement [68249,68265]" dest="return_statement [61663,61738]"/>
  <match src="identifier: a [7509,7510]" dest="identifier: a [8094,8095]"/>
  <match src="identifier: b [5248,5249]" dest="identifier: b [5827,5828]"/>
  <match src="(: ( [13052,13053]" dest="(: ( [22843,22844]"/>
  <match src="identifier: b [8800,8801]" dest="identifier: b [9385,9386]"/>
  <match src="}: } [36946,36947]" dest="}: } [51527,51528]"/>
  <match src="=: = [99640,99641]" dest="=: = [38202,38203]"/>
  <match src="return: return [47737,47743]" dest="return: return [16894,16900]"/>
  <match src="identifier: D256 [9168,9172]" dest="identifier: D256 [9753,9757]"/>
  <match src="type_name [98576,98582]" dest="type_name [37138,37144]"/>
  <match src="function_definition [53761,53845]" dest="function_definition [20851,20935]"/>
  <match src="primitive_type [36554,36561]" dest="primitive_type [51135,51142]"/>
  <match src="(: ( [102168,102169]" dest="(: ( [40730,40731]"/>
  <match src="uint: uint [54463,54467]" dest="uint: uint [21553,21557]"/>
  <match src=".: . [98656,98657]" dest=".: . [37218,37219]"/>
  <match src="array_access [36790,36797]" dest="array_access [51371,51378]"/>
  <match src="visibility [91981,91989]" dest="visibility [30545,30553]"/>
  <match src="(: ( [96381,96382]" dest="(: ( [34945,34946]"/>
  <match src="visibility [53236,53244]" dest="visibility [20326,20334]"/>
  <match src="type_name [92978,92985]" dest="type_name [31542,31549]"/>
  <match src="address: address [103511,103518]" dest="address: address [42073,42080]"/>
  <match src="variable_declaration_statement [3171,3189]" dest="variable_declaration_statement [3750,3768]"/>
  <match src="user_defined_type [88238,88251]" dest="user_defined_type [29081,29094]"/>
  <match src="call_expression [49812,49921]" dest="call_expression [61970,62086]"/>
  <match src="identifier: _state [101494,101500]" dest="identifier: _state [40056,40062]"/>
  <match src="return: return [46522,46528]" dest="return: return [15679,15685]"/>
  <match src="primitive_type [54127,54132]" dest="primitive_type [21217,21222]"/>
  <match src="identifier: compareTo [10710,10719]" dest="identifier: compareTo [11295,11304]"/>
  <match src="call_expression [102454,102508]" dest="call_expression [41016,41070]"/>
  <match src="call_struct_argument [46543,46567]" dest="call_struct_argument [15700,15724]"/>
  <match src="]: ] [95363,95364]" dest="]: ] [33927,33928]"/>
  <match src="returns: returns [5942,5949]" dest="returns: returns [6521,6528]"/>
  <match src="binary_expression [105337,105372]" dest="binary_expression [67405,67440]"/>
  <match src="internal: internal [77719,77727]" dest="internal: internal [55916,55924]"/>
  <match src="identifier: spender [14610,14617]" dest="identifier: spender [24401,24408]"/>
  <match src="[: [ [35629,35630]" dest="[: [ [50210,50211]"/>
  <match src="primitive_type [99702,99709]" dest="primitive_type [38264,38271]"/>
  <match src="identifier: _state [92899,92905]" dest="identifier: _state [31463,31469]"/>
  <match src="contract_declaration [50788,51001]" dest="contract_declaration [25947,26160]"/>
  <match src="state_mutability [34358,34362]" dest="state_mutability [48939,48943]"/>
  <match src="identifier: Require [105310,105317]" dest="identifier: Require [67378,67385]"/>
  <match src="call_argument [80755,80765]" dest="call_argument [70931,70941]"/>
  <match src="address: address [101642,101649]" dest="address: address [40204,40211]"/>
  <match src="(: ( [103510,103511]" dest="(: ( [42072,42073]"/>
  <match src="): ) [67126,67127]" dest="): ) [66316,66317]"/>
  <match src="): ) [98741,98742]" dest="): ) [37303,37304]"/>
  <match src="struct_declaration [87250,87322]" dest="struct_declaration [28093,28165]"/>
  <match src="user_defined_type [7741,7745]" dest="user_defined_type [8326,8330]"/>
  <match src="): ) [95971,95972]" dest="): ) [34535,34536]"/>
  <match src="call_argument [49839,49857]" dest="call_argument [61997,62024]"/>
  <match src="member_expression [81190,81352]" dest="member_expression [69968,70092]"/>
  <match src="type_name [87559,87583]" dest="type_name [28402,28426]"/>
  <match src="visibility [46911,46919]" dest="visibility [16068,16076]"/>
  <match src="identifier: msg [83406,83409]" dest="identifier: msg [63048,63051]"/>
  <match src="identifier: _state [99177,99183]" dest="identifier: _state [37739,37745]"/>
  <match src="array_access [101242,101262]" dest="array_access [39804,39824]"/>
  <match src=",: , [101336,101337]" dest=",: , [39898,39899]"/>
  <match src="]: ] [102410,102411]" dest="]: ] [40972,40973]"/>
  <match src="parameter [100684,100698]" dest="parameter [39246,39260]"/>
  <match src="type_name [18645,18652]" dest="type_name [58888,58895]"/>
  <match src="user_defined_type [9369,9373]" dest="user_defined_type [9954,9958]"/>
  <match src="parameter [10775,10791]" dest="parameter [11360,11376]"/>
  <match src="type_name [20705,20712]" dest="type_name [18142,18149]"/>
  <match src="member_expression [96547,96582]" dest="member_expression [35111,35146]"/>
  <match src="&quot;: &quot; [1992,1993]" dest="&quot;: &quot; [2571,2572]"/>
  <match src="visibility [54158,54166]" dest="visibility [21248,21256]"/>
  <match src="type_name [90424,90431]" dest="type_name [75057,75064]"/>
  <match src="type_name [55222,55226]" dest="type_name [22312,22316]"/>
  <match src="type_name [11207,11214]" dest="type_name [11792,11799]"/>
  <match src=",: , [80806,80807]" dest=",: , [69675,69676]"/>
  <match src="identifier: decimals [53351,53359]" dest="identifier: decimals [20441,20449]"/>
  <match src="member_expression [65809,65820]" dest="member_expression [66550,66561]"/>
  <match src="function_body [94317,94363]" dest="function_body [32881,32927]"/>
  <match src="(: ( [72898,72899]" dest="(: ( [58105,58106]"/>
  <match src="uint256: uint256 [67736,67743]" dest="uint256: uint256 [61818,61825]"/>
  <match src="public: public [94124,94130]" dest="public: public [32688,32694]"/>
  <match src="type_name [10206,10210]" dest="type_name [10791,10795]"/>
  <match src="member_expression [92676,92690]" dest="member_expression [31240,31254]"/>
  <match src="array_access [93957,93992]" dest="array_access [32521,32556]"/>
  <match src="(: ( [3809,3810]" dest="(: ( [4388,4389]"/>
  <match src="call_argument [47456,47479]" dest="call_argument [16613,16636]"/>
  <match src="primitive_type [32126,32130]" dest="primitive_type [46707,46711]"/>
  <match src="[: [ [103799,103800]" dest="[: [ [42361,42362]"/>
  <match src="primitive_type [70111,70118]" dest="primitive_type [64811,64818]"/>
  <match src="expression_statement [102238,102284]" dest="expression_statement [40800,40846]"/>
  <match src="parameter [2871,2878]" dest="parameter [3450,3457]"/>
  <match src="identifier: that [84257,84261]" dest="identifier: that [76351,76355]"/>
  <match src="pure: pure [32980,32984]" dest="pure: pure [47561,47565]"/>
  <match src="return_statement [10279,10308]" dest="return_statement [10864,10893]"/>
  <match src="(: ( [54656,54657]" dest="(: ( [21746,21747]"/>
  <match src="address: address [101627,101634]" dest="address: address [40189,40196]"/>
  <match src="block_statement [33752,34154]" dest="block_statement [48333,48735]"/>
  <match src="member_expression [105786,105798]" dest="member_expression [67854,67866]"/>
  <match src="identifier: Claim [80956,80961]" dest="identifier: Commit [79424,79430]"/>
  <match src="primitive_type [98576,98582]" dest="primitive_type [37138,37144]"/>
  <match src="pragma: pragma [1121,1127]" dest="pragma: pragma [1123,1129]"/>
  <match src="(: ( [32317,32318]" dest="(: ( [46898,46899]"/>
  <match src="identifier: account [100456,100463]" dest="identifier: account [39018,39025]"/>
  <match src="&gt;&gt;: &gt;&gt; [37745,37747]" dest="&gt;&gt;: &gt;&gt; [52326,52328]"/>
  <match src="identifier: must [33006,33010]" dest="identifier: must [47587,47591]"/>
  <match src=".: . [104496,104497]" dest=".: . [43058,43059]"/>
  <match src="member_expression [8974,8984]" dest="member_expression [9559,9569]"/>
  <match src="identifier: accounts [101900,101908]" dest="identifier: accounts [40462,40470]"/>
  <match src="[: [ [95357,95358]" dest="[: [ [33921,33922]"/>
  <match src="return: return [10113,10119]" dest="return: return [10698,10704]"/>
  <match src=",: , [34202,34203]" dest=",: , [48783,48784]"/>
  <match src="identifier: period [87083,87089]" dest="identifier: period [27926,27932]"/>
  <match src="primitive_type [17425,17432]" dest="primitive_type [17888,17895]"/>
  <match src="event_paramater [79790,79803]" dest="event_paramater [68865,68878]"/>
  <match src="new: new [35982,35985]" dest="new: new [50563,50566]"/>
  <match src="primitive_type [69798,69805]" dest="primitive_type [64605,64612]"/>
  <match src="(: ( [14601,14602]" dest="(: ( [24392,24393]"/>
  <match src="{: { [99311,99312]" dest="{: { [37873,37874]"/>
  <match src="type_cast_expression [38297,38314]" dest="type_cast_expression [52878,52895]"/>
  <match src="call_argument [9951,9955]" dest="call_argument [10536,10540]"/>
  <match src="visibility [99020,99028]" dest="visibility [37582,37590]"/>
  <match src="identifier: FILE [105394,105398]" dest="identifier: FILE [67462,67466]"/>
  <match src="): ) [65697,65698]" dest="): ) [66526,66527]"/>
  <match src="): ) [9829,9830]" dest="): ) [10414,10415]"/>
  <match src="type_name [99774,99781]" dest="type_name [38336,38343]"/>
  <match src="returns: returns [92113,92120]" dest="returns: returns [30677,30684]"/>
  <match src="indexed: indexed [80059,80066]" dest="indexed: indexed [76186,76193]"/>
  <match src="identifier: input [36992,36997]" dest="identifier: input [51573,51578]"/>
  <match src="uint256: uint256 [95281,95288]" dest="uint256: uint256 [33845,33852]"/>
  <match src="string [27144,27179]" dest="string [77435,77465]"/>
  <match src="function_body [95634,95687]" dest="function_body [34198,34251]"/>
  <match src="modifier: modifier [105531,105539]" dest="modifier: modifier [67599,67607]"/>
  <match src="event_definition [80037,80127]" dest="event_definition [76165,76230]"/>
  <match src="return_statement [93686,93733]" dest="return_statement [32250,32297]"/>
  <match src="call_argument [31428,31434]" dest="call_argument [46009,46015]"/>
  <match src="call_argument [80381,80391]" dest="call_argument [69529,69539]"/>
  <match src="call_argument [82670,82687]" dest="call_argument [58317,58334]"/>
  <match src="identifier: _state [99149,99155]" dest="identifier: _state [37711,37717]"/>
  <match src="): ) [91652,91653]" dest="): ) [30216,30217]"/>
  <match src="returns: returns [54729,54736]" dest="returns: returns [21819,21826]"/>
  <match src="function_body [8042,8112]" dest="function_body [8627,8697]"/>
  <match src="=: = [37841,37842]" dest="=: = [52422,52423]"/>
  <match src="=: = [101744,101745]" dest="=: = [40306,40307]"/>
  <match src="address: address [96767,96774]" dest="address: address [35331,35338]"/>
  <match src="pure: pure [45611,45615]" dest="pure: pure [14768,14772]"/>
  <match src="view: view [92421,92425]" dest="view: view [30985,30989]"/>
  <match src="yul_function_call [97177,97188]" dest="yul_function_call [35741,35752]"/>
  <match src="&quot;: &quot; [82747,82748]" dest="&quot;: &quot; [58392,58393]"/>
  <match src="call_expression [82263,82343]" dest="call_expression [62212,62253]"/>
  <match src="function_definition [96322,96453]" dest="function_definition [34886,35017]"/>
  <match src="call_argument [82392,82403]" dest="call_argument [77782,77791]"/>
  <match src="identifier: recovered [49839,49848]" dest="identifier: dollarAmount [62012,62024]"/>
  <match src="primitive_type [103946,103952]" dest="primitive_type [42508,42514]"/>
  <match src="): ) [14657,14658]" dest="): ) [24448,24449]"/>
  <match src="event_paramater [79704,79727]" dest="event_paramater [68779,68802]"/>
  <match src="primitive_type [66724,66728]" dest="primitive_type [66357,66361]"/>
  <match src="assignment_expression [9045,9067]" dest="assignment_expression [9630,9652]"/>
  <match src="state_mutability [92314,92318]" dest="state_mutability [30878,30882]"/>
  <match src="identifier: value [7439,7444]" dest="identifier: value [8024,8029]"/>
  <match src=".: . [97000,97001]" dest=".: . [35564,35565]"/>
  <match src="private: private [44754,44761]" dest="private: private [13911,13918]"/>
  <match src="uint256: uint256 [5240,5247]" dest="uint256: uint256 [5819,5826]"/>
  <match src="identifier: IDollar [87682,87689]" dest="identifier: IDollar [28525,28532]"/>
  <match src="identifier: accounts [93842,93850]" dest="identifier: accounts [32406,32414]"/>
  <match src="parameter [54038,54042]" dest="parameter [21128,21132]"/>
  <match src="(: ( [33225,33226]" dest="(: ( [47806,47807]"/>
  <match src=",: , [15032,15033]" dest=",: , [24823,24824]"/>
  <match src="identifier: coupons [100970,100977]" dest="identifier: coupons [39532,39539]"/>
  <match src="address: address [90236,90243]" dest="address: address [74869,74876]"/>
  <match src="type_name [1465,1472]" dest="type_name [2044,2051]"/>
  <match src="member_expression [81636,81647]" dest="member_expression [71298,71309]"/>
  <match src="identifier: value [11624,11629]" dest="identifier: value [12209,12214]"/>
  <match src=".: . [9494,9495]" dest=".: . [10079,10080]"/>
  <match src=".: . [93013,93014]" dest=".: . [31577,31578]"/>
  <match src="{: { [93384,93385]" dest="{: { [31948,31949]"/>
  <match src="visibility [55464,55472]" dest="visibility [22554,22562]"/>
  <match src="member_expression [101494,101529]" dest="member_expression [40056,40091]"/>
  <match src="user_defined_type [46490,46502]" dest="user_defined_type [15647,15659]"/>
  <match src=",: , [32517,32518]" dest=",: , [47098,47099]"/>
  <match src="{: { [7864,7865]" dest="{: { [8449,8450]"/>
  <match src="[: [ [102251,102252]" dest="[: [ [40813,40814]"/>
  <match src="call_argument [105614,105655]" dest="call_argument [67682,67723]"/>
  <match src="string: string [32336,32342]" dest="string: string [46917,46923]"/>
  <match src="array_access [102391,102411]" dest="array_access [40953,40973]"/>
  <match src="primitive_type [99774,99781]" dest="primitive_type [38336,38343]"/>
  <match src="type_name [99264,99271]" dest="type_name [37826,37833]"/>
  <match src="identifier: coupons [93718,93725]" dest="identifier: coupons [32282,32289]"/>
  <match src="primitive_type [55236,55240]" dest="primitive_type [22326,22330]"/>
  <match src="uint256: uint256 [45002,45009]" dest="uint256: uint256 [14159,14166]"/>
  <match src="(: ( [53384,53385]" dest="(: ( [20474,20475]"/>
  <match src="emit_statement [80368,80400]" dest="emit_statement [69516,69548]"/>
  <match src="call_expression [101532,101579]" dest="call_expression [40094,40141]"/>
  <match src="(: ( [71974,71975]" dest="(: ( [58008,58009]"/>
  <match src="returns: returns [9651,9658]" dest="returns: returns [10236,10243]"/>
  <match src="identifier: getOraclePoolRatio [47813,47831]" dest="identifier: getOraclePoolRatio [16970,16988]"/>
  <match src="): ) [107009,107010]" dest="): ) [66378,66379]"/>
  <match src="}: } [98347,98348]" dest="}: } [36909,36910]"/>
  <match src="enum_value: REJECT [87414,87420]" dest="enum_value: REJECT [28257,28263]"/>
  <match src=",: , [32872,32873]" dest=",: , [47453,47454]"/>
  <match src="identifier: i [38497,38498]" dest="identifier: i [53078,53079]"/>
  <match src="identifier: D256 [9263,9267]" dest="identifier: D256 [9848,9852]"/>
  <match src="type_name [44746,44753]" dest="type_name [13903,13910]"/>
  <match src="call_argument [74779,74785]" dest="call_argument [54987,54993]"/>
  <match src="call_expression [37701,37724]" dest="call_expression [52282,52305]"/>
  <match src="parameter [32815,32824]" dest="parameter [47396,47405]"/>
  <match src="identifier: amount [50968,50974]" dest="identifier: amount [26127,26133]"/>
  <match src="state_mutability [95469,95473]" dest="state_mutability [34033,34037]"/>
  <match src="call_argument [80468,80478]" dest="call_argument [70429,70439]"/>
  <match src="contract_body [43691,48008]" dest="contract_body [12848,17165]"/>
  <match src="call_argument [81405,81415]" dest="call_argument [70729,70739]"/>
  <match src="assignment_expression [99149,99214]" dest="assignment_expression [37711,37776]"/>
  <match src="call_argument [50181,50188]" dest="call_argument [63060,63067]"/>
  <match src="visibility [46202,46210]" dest="visibility [15359,15367]"/>
  <match src="identifier: getGovernanceEmergencyDelay [46758,46785]" dest="identifier: getGovernanceEmergencyDelay [15915,15942]"/>
  <match src="string [91469,91496]" dest="string [30033,30060]"/>
  <match src="}: } [95247,95248]" dest="}: } [33811,33812]"/>
  <match src=",: , [10575,10576]" dest=",: , [11160,11161]"/>
  <match src=",: , [8159,8160]" dest=",: , [8744,8745]"/>
  <match src="{: { [102705,102706]" dest="{: { [41267,41268]"/>
  <match src=",: , [100058,100059]" dest=",: , [38620,38621]"/>
  <match src="]: ] [99586,99587]" dest="]: ] [38148,38149]"/>
  <match src="identifier: debt [87898,87902]" dest="identifier: debt [28741,28745]"/>
  <match src="(: ( [95755,95756]" dest="(: ( [34319,34320]"/>
  <match src="primitive_type [88163,88170]" dest="primitive_type [29006,29013]"/>
  <match src="{: { [105576,105577]" dest="{: { [67644,67645]"/>
  <match src="): ) [13053,13054]" dest="): ) [22844,22845]"/>
  <match src=".: . [67114,67115]" dest=".: . [66304,66305]"/>
  <match src=",: , [31906,31907]" dest=",: , [46487,46488]"/>
  <match src="member_expression [104357,104372]" dest="member_expression [42919,42934]"/>
  <match src="type_name [45308,45315]" dest="type_name [14465,14472]"/>
  <match src="parameter [54628,54632]" dest="parameter [21718,21722]"/>
  <match src="/=: /= [36899,36901]" dest="/=: /= [51480,51482]"/>
  <match src="parameter [101040,101055]" dest="parameter [39602,39617]"/>
  <match src="): ) [33699,33700]" dest="): ) [48280,48281]"/>
  <match src="primitive_type [39110,39114]" dest="primitive_type [53691,53695]"/>
  <match src="unary_expression [31678,31683]" dest="unary_expression [46259,46264]"/>
  <match src="variable_declaration_statement [81169,81368]" dest="variable_declaration_statement [69950,70108]"/>
  <match src="(: ( [34836,34837]" dest="(: ( [49417,49418]"/>
  <match src="(: ( [10719,10720]" dest="(: ( [11304,11305]"/>
  <match src=".: . [103385,103386]" dest=".: . [41947,41948]"/>
  <match src="type_name [15503,15510]" dest="type_name [25294,25301]"/>
  <match src="identifier: D256 [46233,46237]" dest="identifier: D256 [15390,15394]"/>
  <match src="member_expression [100282,100303]" dest="member_expression [38844,38865]"/>
  <match src="identifier: a [2391,2392]" dest="identifier: a [2970,2971]"/>
  <match src=",: , [34304,34305]" dest=",: , [48885,48886]"/>
  <match src="unary_expression [52138,52140]" dest="unary_expression [63683,63685]"/>
  <match src="primitive_type [67381,67388]" dest="primitive_type [70485,70492]"/>
  <match src="}: } [35871,35872]" dest="}: } [50452,50453]"/>
  <match src="identifier: _state [101893,101899]" dest="identifier: _state [40455,40461]"/>
  <match src="return_type_definition [46216,46245]" dest="return_type_definition [15373,15402]"/>
  <match src="call_expression [30009,30184]" dest="call_expression [44590,44765]"/>
  <match src="returns: returns [50983,50990]" dest="returns: returns [26142,26149]"/>
  <match src="): ) [8476,8477]" dest="): ) [9061,9062]"/>
  <match src="comment: // 40% [45423,45429]" dest="comment: // 40% [14580,14586]"/>
  <match src="function_body [101119,101431]" dest="function_body [39681,39993]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [85055,85082]" dest="identifier: OpenZeppelinUpgradesAddress [71861,71888]"/>
  <match src=".: . [104381,104382]" dest=".: . [42943,42944]"/>
  <match src=".: . [103045,103046]" dest=".: . [41607,41608]"/>
  <match src=",: , [32464,32465]" dest=",: , [47045,47046]"/>
  <match src="): ) [91449,91450]" dest="): ) [30013,30014]"/>
  <match src="{: { [2465,2466]" dest="{: { [3044,3045]"/>
  <match src="primitive_type [92543,92550]" dest="primitive_type [31107,31114]"/>
  <match src=",: , [50958,50959]" dest=",: , [26117,26118]"/>
  <match src="user_defined_type [88125,88136]" dest="user_defined_type [28968,28979]"/>
  <match src="identifier: Status [105366,105372]" dest="identifier: Status [67434,67440]"/>
  <match src="(: ( [53903,53904]" dest="(: ( [20993,20994]"/>
  <match src="identifier: reason [101865,101871]" dest="identifier: reason [40427,40433]"/>
  <match src="augmented_assignment_expression [36338,36345]" dest="augmented_assignment_expression [50919,50926]"/>
  <match src="primitive_type [79979,79986]" dest="primitive_type [68922,68929]"/>
  <match src="(: ( [32381,32382]" dest="(: ( [46962,46963]"/>
  <match src="member_expression [103627,103667]" dest="member_expression [42189,42229]"/>
  <match src="type_cast_expression [29980,30203]" dest="type_cast_expression [44561,44784]"/>
  <match src="identifier: symbol [53289,53295]" dest="identifier: symbol [20379,20385]"/>
  <match src="block_statement [102705,102738]" dest="block_statement [41267,41300]"/>
  <match src="identifier: deadline [49328,49336]" dest="identifier: newSupply [55905,55914]"/>
  <match src="function_body [92444,92491]" dest="function_body [31008,31055]"/>
  <match src="{: { [36116,36117]" dest="{: { [50697,50698]"/>
  <match src="(: ( [30153,30154]" dest="(: ( [44734,44735]"/>
  <match src="call_argument [51884,51891]" dest="call_argument [54647,54654]"/>
  <match src="private: private [64446,64453]" dest="private: private [65285,65292]"/>
  <match src="type_name [91551,91557]" dest="type_name [30115,30121]"/>
  <match src="public: public [96927,96933]" dest="public: public [35491,35497]"/>
  <match src="call_argument [105413,105434]" dest="call_argument [67481,67502]"/>
  <match src="parameter [47294,47301]" dest="parameter [16451,16458]"/>
  <match src="event: event [54175,54180]" dest="event: event [21265,21270]"/>
  <match src="): ) [102170,102171]" dest="): ) [40732,40733]"/>
  <match src="identifier: stringifyTruncated [32408,32426]" dest="identifier: stringifyTruncated [46989,47007]"/>
  <match src="variable_declaration [8941,8957]" dest="variable_declaration [9526,9542]"/>
  <match src="primitive_type [49296,49303]" dest="primitive_type [70387,70394]"/>
  <match src="pure: pure [36078,36082]" dest="pure: pure [50659,50663]"/>
  <match src="identifier: FILE [64416,64420]" dest="identifier: FILE [59880,59884]"/>
  <match src="call_expression [94474,94502]" dest="call_expression [33038,33066]"/>
  <match src="identifier: start [45845,45850]" dest="identifier: start [15002,15007]"/>
  <match src="{: { [87348,87349]" dest="{: { [28191,28192]"/>
  <match src="pure: pure [11305,11309]" dest="pure: pure [11890,11894]"/>
  <match src=".: . [102487,102488]" dest=".: . [41049,41050]"/>
  <match src="&quot;: &quot; [23788,23789]" dest="&quot;: &quot; [62967,62968]"/>
  <match src="pure: pure [4486,4490]" dest="pure: pure [5065,5069]"/>
  <match src="identifier: candidate [96212,96221]" dest="identifier: candidate [34776,34785]"/>
  <match src="uint: uint [54279,54283]" dest="uint: uint [21369,21373]"/>
  <match src="identifier: supply [99633,99639]" dest="identifier: supply [38195,38201]"/>
  <match src="type_name [78384,78391]" dest="type_name [78703,78710]"/>
  <match src="parameter [35055,35068]" dest="parameter [49636,49649]"/>
  <match src="identifier: D256 [8465,8469]" dest="identifier: D256 [9050,9054]"/>
  <match src="expression_statement [9045,9068]" dest="expression_statement [9630,9653]"/>
  <match src="(: ( [95821,95822]" dest="(: ( [34385,34386]"/>
  <match src="call_argument [32408,32432]" dest="call_argument [46989,47013]"/>
  <match src="}: } [94057,94058]" dest="}: } [32621,32622]"/>
  <match src="): ) [53753,53754]" dest="): ) [20843,20844]"/>
  <match src="type_name [55446,55453]" dest="type_name [22536,22543]"/>
  <match src="member_expression [98481,98502]" dest="member_expression [37043,37064]"/>
  <match src="): ) [98682,98683]" dest="): ) [37244,37245]"/>
  <match src="}: } [103473,103474]" dest="}: } [42035,42036]"/>
  <match src="return_statement [11085,11113]" dest="return_statement [11670,11698]"/>
  <match src="struct_member [87075,87090]" dest="struct_member [27918,27933]"/>
  <match src="(: ( [11196,11197]" dest="(: ( [11781,11782]"/>
  <match src="member_expression [99322,99336]" dest="member_expression [37884,37898]"/>
  <match src="uint256: uint256 [11260,11267]" dest="uint256: uint256 [11845,11852]"/>
  <match src="identifier: sender [82000,82006]" dest="identifier: sender [77024,77030]"/>
  <match src="(: ( [94389,94390]" dest="(: ( [32953,32954]"/>
  <match src=".: . [95350,95351]" dest=".: . [33914,33915]"/>
  <match src="identifier: msg [80962,80965]" dest="identifier: msg [79431,79434]"/>
  <match src="identifier: b [9381,9382]" dest="identifier: b [9966,9967]"/>
  <match src="return: return [10848,10854]" dest="return: return [11433,11439]"/>
  <match src="variable_declaration [37072,37081]" dest="variable_declaration [51653,51662]"/>
  <match src="identifier: reason [101416,101422]" dest="identifier: reason [39978,39984]"/>
  <match src="primitive_type [73061,73068]" dest="primitive_type [62133,62140]"/>
  <match src="identifier: file [30297,30301]" dest="identifier: file [44878,44882]"/>
  <match src="unary_expression [33005,33010]" dest="unary_expression [47586,47591]"/>
  <match src="call_argument [105337,105379]" dest="call_argument [67405,67447]"/>
  <match src="identifier: _state [99849,99855]" dest="identifier: _state [38411,38417]"/>
  <match src="(: ( [1498,1499]" dest="(: ( [2077,2078]"/>
  <match src="identifier: abi [33081,33084]" dest="identifier: abi [47662,47665]"/>
  <match src="primitive_type [37072,37079]" dest="primitive_type [51653,51660]"/>
  <match src="identifier: liquidity [55161,55170]" dest="identifier: liquidity [22251,22260]"/>
  <match src="uint256: uint256 [87187,87194]" dest="uint256: uint256 [28030,28037]"/>
  <match src="type_name [34261,34268]" dest="type_name [48842,48849]"/>
  <match src="identifier: Status [86693,86699]" dest="identifier: Status [27536,27542]"/>
  <match src=".: . [47450,47451]" dest=".: . [16607,16608]"/>
  <match src="expression_statement [80778,80815]" dest="expression_statement [69647,69684]"/>
  <match src="function: function [80135,80143]" dest="function: function [69311,69319]"/>
  <match src="=: = [101530,101531]" dest="=: = [40092,40093]"/>
  <match src="identifier: tokenB [78392,78398]" dest="identifier: candidate [78711,78720]"/>
  <match src="identifier: epoch [102502,102507]" dest="identifier: epoch [41064,41069]"/>
  <match src="(: ( [92121,92122]" dest="(: ( [30685,30686]"/>
  <match src="identifier: State [89001,89006]" dest="identifier: State [73634,73639]"/>
  <match src="primitive_type [49320,49327]" dest="primitive_type [55897,55904]"/>
  <match src="state_mutability [46476,46480]" dest="state_mutability [15633,15637]"/>
  <match src="public: public [94287,94293]" dest="public: public [32851,32857]"/>
  <match src="private: private [105177,105184]" dest="private: private [67245,67252]"/>
  <match src=".: . [103424,103425]" dest=".: . [41986,41987]"/>
  <match src="identifier: coupons [100745,100752]" dest="identifier: coupons [39307,39314]"/>
  <match src="): ) [80525,80526]" dest="): ) [70156,70157]"/>
  <match src="primitive_type [11260,11267]" dest="primitive_type [11845,11852]"/>
  <match src="return_type_definition [67098,67127]" dest="return_type_definition [66288,66317]"/>
  <match src="}: } [46576,46577]" dest="}: } [15733,15734]"/>
  <match src=".: . [12524,12525]" dest=".: . [63614,63615]"/>
  <match src=",: , [31939,31940]" dest=",: , [46520,46521]"/>
  <match src=",: , [80579,80580]" dest=",: , [69736,69737]"/>
  <match src="parameter [38031,38043]" dest="parameter [52612,52624]"/>
  <match src="state_variable_declaration [44425,44475]" dest="state_variable_declaration [13582,13632]"/>
  <match src=".: . [93699,93700]" dest=".: . [32263,32264]"/>
  <match src="(: ( [80309,80310]" dest="(: ( [69484,69485]"/>
  <match src="identifier: Status [93913,93919]" dest="identifier: Status [32477,32483]"/>
  <match src="type_name [43715,43722]" dest="type_name [12872,12879]"/>
  <match src="internal: internal [76833,76841]" dest="internal: internal [60474,60482]"/>
  <match src="identifier: getGovernancePeriod [46331,46350]" dest="identifier: getGovernancePeriod [15488,15507]"/>
  <match src="(: ( [35815,35816]" dest="(: ( [50396,50397]"/>
  <match src="call_argument [37235,37237]" dest="call_argument [51816,51818]"/>
  <match src="user_defined_type [87997,88004]" dest="user_defined_type [28840,28847]"/>
  <match src="(: ( [67735,67736]" dest="(: ( [61817,61818]"/>
  <match src="struct_member [87216,87235]" dest="struct_member [28059,28078]"/>
  <match src="identifier: to [55134,55136]" dest="identifier: to [22224,22226]"/>
  <match src="(: ( [33598,33599]" dest="(: ( [48179,48180]"/>
  <match src="return_type_definition [95308,95325]" dest="return_type_definition [33872,33889]"/>
  <match src="): ) [93166,93167]" dest="): ) [31730,31731]"/>
  <match src="boolean_literal [104533,104537]" dest="boolean_literal [43095,43099]"/>
  <match src="bytes32: bytes32 [33652,33659]" dest="bytes32: bytes32 [48233,48240]"/>
  <match src="parameter [54127,54134]" dest="parameter [21217,21224]"/>
  <match src="bytes: bytes [38031,38036]" dest="bytes: bytes [52612,52617]"/>
  <match src="member_expression [98642,98663]" dest="member_expression [37204,37225]"/>
  <match src="function_definition [95878,96042]" dest="function_definition [34442,34606]"/>
  <match src="): ) [9028,9029]" dest="): ) [9613,9614]"/>
  <match src="): ) [30075,30076]" dest="): ) [44656,44657]"/>
  <match src="expression_statement [37510,37517]" dest="expression_statement [52091,52098]"/>
  <match src="state_mutability [46362,46366]" dest="state_mutability [15519,15523]"/>
  <match src="struct: struct [87131,87137]" dest="struct: struct [27974,27980]"/>
  <match src="function: function [7317,7325]" dest="function: function [7902,7910]"/>
  <match src="identifier: epoch [100753,100758]" dest="identifier: epoch [39315,39320]"/>
  <match src=".: . [96141,96142]" dest=".: . [34705,34706]"/>
  <match src="identifier: amount [18154,18160]" dest="identifier: amount [55744,55750]"/>
  <match src="parameter [9869,9880]" dest="parameter [10454,10465]"/>
  <match src="type_name [104241,104248]" dest="type_name [42803,42810]"/>
  <match src="primitive_type [50836,50843]" dest="primitive_type [25995,26002]"/>
  <match src="identifier: self [8395,8399]" dest="identifier: self [8980,8984]"/>
  <match src="): ) [101108,101109]" dest="): ) [39670,39671]"/>
  <match src="call_expression [22973,23041]" dest="call_expression [55417,55495]"/>
  <match src="return_type_definition [98166,98180]" dest="return_type_definition [36728,36742]"/>
  <match src="): ) [93880,93881]" dest="): ) [32444,32445]"/>
  <match src="identifier: balance [99625,99632]" dest="identifier: balance [38187,38194]"/>
  <match src="member_expression [95991,96025]" dest="member_expression [34555,34589]"/>
  <match src="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [89014,89232]" dest="comment: /**      * @dev Storage slot with the address of the current implementation.      * This is the keccak-256 hash of &quot;eip1967.proxy.implementation&quot; subtracted by 1, and is      * validated in the constructor.      */ [73647,73865]"/>
  <match src="identifier: a [11451,11452]" dest="identifier: a [12036,12037]"/>
  <match src="identifier: candidate [96694,96703]" dest="identifier: candidate [35258,35267]"/>
  <match src="identifier: b [4642,4643]" dest="identifier: b [5221,5222]"/>
  <match src="return_type_definition [47848,47865]" dest="return_type_definition [17005,17022]"/>
  <match src="primitive_type [102962,102969]" dest="primitive_type [41524,41531]"/>
  <match src="return_statement [96128,96170]" dest="return_statement [34692,34734]"/>
  <match src="array_access [100867,100887]" dest="array_access [39429,39449]"/>
  <match src="state_mutability [96793,96797]" dest="state_mutability [35357,35361]"/>
  <match src="}: } [9310,9311]" dest="}: } [9895,9896]"/>
  <match src="uint256: uint256 [100382,100389]" dest="uint256: uint256 [38944,38951]"/>
  <match src="): ) [46113,46114]" dest="): ) [15270,15271]"/>
  <match src="}: } [24972,24973]" dest="}: } [55316,55317]"/>
  <match src="): ) [98513,98514]" dest="): ) [37075,37076]"/>
  <match src="call_argument [52138,52140]" dest="call_argument [63683,63685]"/>
  <match src=".: . [80674,80675]" dest=".: . [69807,69808]"/>
  <match src="member_expression [95055,95068]" dest="member_expression [33619,33632]"/>
  <match src="user_defined_type [97817,97824]" dest="user_defined_type [36379,36386]"/>
  <match src="expression_statement [38667,38712]" dest="expression_statement [53248,53293]"/>
  <match src="modifier_definition [105255,105467]" dest="modifier_definition [67323,67535]"/>
  <match src="type_name [51801,51808]" dest="type_name [54580,54587]"/>
  <match src="function_body [46820,46872]" dest="function_body [15977,16029]"/>
  <match src="identifier: dollar [107297,107303]" dest="identifier: dollar [55385,55391]"/>
  <match src="return: return [9256,9262]" dest="return: return [9841,9847]"/>
  <match src=",: , [100380,100381]" dest=",: , [38942,38943]"/>
  <match src=",: , [79977,79978]" dest=",: , [68920,68921]"/>
  <match src="call_argument [8297,8343]" dest="call_argument [8882,8928]"/>
  <match src="(: ( [80852,80853]" dest="(: ( [70602,70603]"/>
  <match src="identifier: _state [92786,92792]" dest="identifier: _state [31350,31356]"/>
  <match src="identifier: coupons [87921,87928]" dest="identifier: coupons [28764,28771]"/>
  <match src="}: } [8111,8112]" dest="}: } [8696,8697]"/>
  <match src="call_argument [23686,23705]" dest="call_argument [61865,61881]"/>
  <match src="identifier: D256 [9696,9700]" dest="identifier: D256 [10281,10285]"/>
  <match src="function_body [103006,103124]" dest="function_body [41568,41686]"/>
  <match src="identifier: spender [101933,101940]" dest="identifier: spender [40495,40502]"/>
  <match src="variable_declaration [93316,93335]" dest="variable_declaration [31880,31899]"/>
  <match src="member_expression [82072,82104]" dest="member_expression [70502,70544]"/>
  <match src="false [98199,98204]" dest="false [36761,36766]"/>
  <match src="string_literal [82852,82881]" dest="string_literal [78825,78840]"/>
  <match src="function: function [53919,53927]" dest="function: function [21009,21017]"/>
  <match src="return: return [94328,94334]" dest="return: return [32892,32898]"/>
  <match src="type_name [95451,95458]" dest="type_name [34015,34022]"/>
  <match src="=&gt;: =&gt; [86856,86858]" dest="=&gt;: =&gt; [27699,27701]"/>
  <match src="expression_statement [105786,105912]" dest="expression_statement [67854,67980]"/>
  <match src="identifier: balanceOf [13184,13193]" dest="identifier: balanceOf [22975,22984]"/>
  <match src="uint256: uint256 [77746,77753]" dest="uint256: uint256 [55943,55950]"/>
  <match src="call_expression [101957,102025]" dest="call_expression [40519,40587]"/>
  <match src="identifier: b [9725,9726]" dest="identifier: b [10310,10311]"/>
  <match src="visibility [8432,8440]" dest="visibility [9017,9025]"/>
  <match src="identifier: msg [81405,81408]" dest="identifier: msg [70729,70732]"/>
  <match src="pure: pure [47160,47164]" dest="pure: pure [16317,16321]"/>
  <match src="function_definition [33585,34161]" dest="function_definition [48166,48742]"/>
  <match src="(: ( [53443,53444]" dest="(: ( [20533,20534]"/>
  <match src="primitive_type [51995,52002]" dest="primitive_type [54836,54843]"/>
  <match src="internal: internal [99302,99310]" dest="internal: internal [37864,37872]"/>
  <match src="call_expression [1547,1593]" dest="call_expression [2126,2172]"/>
  <match src="(: ( [47025,47026]" dest="(: ( [16182,16183]"/>
  <match src="(: ( [11023,11024]" dest="(: ( [11608,11609]"/>
  <match src="type_name [97904,97911]" dest="type_name [36466,36473]"/>
  <match src="identifier: totalRewardedWithPhantom [72988,73012]" dest="identifier: newDebt [65382,65389]"/>
  <match src="identifier: stringify [32577,32586]" dest="identifier: stringify [47158,47167]"/>
  <match src="identifier: epoch [101163,101168]" dest="identifier: epoch [39725,39730]"/>
  <match src="identifier: LibEIP712 [49115,49124]" dest="identifier: transferFrom [54881,54893]"/>
  <match src="bytes2: bytes2 [29569,29575]" dest="bytes2: bytes2 [44150,44156]"/>
  <match src="(: ( [7822,7823]" dest="(: ( [8407,8408]"/>
  <match src=".: . [102244,102245]" dest=".: . [40806,40807]"/>
  <match src="): ) [99506,99507]" dest="): ) [38068,38069]"/>
  <match src="array_access [91774,91798]" dest="array_access [30338,30362]"/>
  <match src="function: function [50929,50937]" dest="function: function [26088,26096]"/>
  <match src="[: [ [37299,37300]" dest="[: [ [51880,51881]"/>
  <match src="identifier: _state [98618,98624]" dest="identifier: _state [37180,37186]"/>
  <match src="): ) [94808,94809]" dest="): ) [33372,33373]"/>
  <match src="{: { [11535,11536]" dest="{: { [12120,12121]"/>
  <match src="(: ( [103667,103668]" dest="(: ( [42229,42230]"/>
  <match src="uint256: uint256 [95625,95632]" dest="uint256: uint256 [34189,34196]"/>
  <match src="call_argument [9493,9500]" dest="call_argument [10078,10085]"/>
  <match src="call_argument [37310,37327]" dest="call_argument [51891,51908]"/>
  <match src="state_mutability [54724,54728]" dest="state_mutability [21814,21818]"/>
  <match src="identifier: Upgraded [89507,89515]" dest="identifier: Upgraded [74140,74148]"/>
  <match src="&quot;: &quot; [83034,83035]" dest="&quot;: &quot; [78219,78220]"/>
  <match src="member_expression [98457,98478]" dest="member_expression [37019,37040]"/>
  <match src="true: true [104533,104537]" dest="true: true [43095,43099]"/>
  <match src="identifier: to [97920,97922]" dest="identifier: to [36482,36484]"/>
  <match src="block_statement [35639,35921]" dest="block_statement [50220,50502]"/>
  <match src=",: , [9157,9158]" dest=",: , [9742,9743]"/>
  <match src="comment: // ============ Self Functions ============ [7667,7710]" dest="comment: // ============ Self Functions ============ [8252,8295]"/>
  <match src="{: { [94317,94318]" dest="{: { [32881,32882]"/>
  <match src="call_expression [21583,21654]" dest="call_expression [63353,63432]"/>
  <match src="parameter [10537,10541]" dest="parameter [11122,11126]"/>
  <match src="identifier: oracle [92269,92275]" dest="identifier: oracle [30833,30839]"/>
  <match src="state_mutability [91852,91856]" dest="state_mutability [30416,30420]"/>
  <match src="type_name [91709,91716]" dest="type_name [30273,30280]"/>
  <match src="primitive_type [10537,10541]" dest="primitive_type [11122,11126]"/>
  <match src="): ) [93562,93563]" dest="): ) [32126,32127]"/>
  <match src="): ) [9880,9881]" dest="): ) [10465,10466]"/>
  <match src="type_name [77697,77704]" dest="type_name [61778,61785]"/>
  <match src="string [65272,65291]" dest="string [79348,79362]"/>
  <match src="identifier: msg [80508,80511]" dest="identifier: msg [70137,70140]"/>
  <match src="identifier: coupons [100945,100952]" dest="identifier: coupons [39507,39514]"/>
  <match src="function: function [47804,47812]" dest="function: function [16961,16969]"/>
  <match src="call_expression [100867,100919]" dest="call_expression [39429,39481]"/>
  <match src="&gt;: &gt; [4597,4598]" dest="&gt;: &gt; [5176,5177]"/>
  <match src="=: = [6899,6900]" dest="=: = [7484,7485]"/>
  <match src="function: function [9319,9327]" dest="function: function [9904,9912]"/>
  <match src="function_body [94671,94817]" dest="function_body [33235,33381]"/>
  <match src="type_name [93549,93556]" dest="type_name [32113,32120]"/>
  <match src=",: , [86733,86734]" dest=",: , [27576,27577]"/>
  <match src="): ) [96085,96086]" dest="): ) [34649,34650]"/>
  <match src="visibility [91530,91536]" dest="visibility [30094,30100]"/>
  <match src="}: } [32093,32094]" dest="}: } [46674,46675]"/>
  <match src=".: . [99656,99657]" dest=".: . [38218,38219]"/>
  <match src="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [84538,85045]" dest="comment: /**  * Utility library of inline functions on addresses  *  * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol  * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts  * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the  * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.  */ [71344,71851]"/>
  <match src="): ) [93382,93383]" dest="): ) [31946,31947]"/>
  <match src="uint256: uint256 [43867,43874]" dest="uint256: uint256 [13024,13031]"/>
  <match src="parameter [1499,1506]" dest="parameter [2078,2085]"/>
  <match src="(: ( [53076,53077]" dest="(: ( [20166,20167]"/>
  <match src="uint256: uint256 [13907,13914]" dest="uint256: uint256 [23698,23705]"/>
  <match src="expression_statement [51878,51901]" dest="expression_statement [54633,54664]"/>
  <match src="primitive_type [67756,67763]" dest="primitive_type [69950,69957]"/>
  <match src="return_type_definition [8247,8268]" dest="return_type_definition [8832,8853]"/>
  <match src="state_mutability [47843,47847]" dest="state_mutability [17000,17004]"/>
  <match src="parameter [103746,103760]" dest="parameter [42308,42322]"/>
  <match src="primitive_type [55455,55462]" dest="primitive_type [22545,22552]"/>
  <match src="(: ( [83059,83060]" dest="(: ( [61009,61010]"/>
  <match src="identifier: value [80393,80398]" dest="identifier: value [69541,69546]"/>
  <match src="parameter [103530,103544]" dest="parameter [42092,42106]"/>
  <match src="address: address [53180,53187]" dest="address: address [20270,20277]"/>
  <match src="state_mutability [94648,94652]" dest="state_mutability [33212,33216]"/>
  <match src="}: } [39152,39153]" dest="}: } [53733,53734]"/>
  <match src="return_type_definition [91857,91874]" dest="return_type_definition [30421,30438]"/>
  <match src="constant: constant [64407,64415]" dest="constant: constant [59871,59879]"/>
  <match src="}: } [7299,7300]" dest="}: } [7884,7885]"/>
  <match src="call_expression [93436,93490]" dest="call_expression [32000,32054]"/>
  <match src="return_type_definition [55213,55249]" dest="return_type_definition [22303,22339]"/>
  <match src="user_defined_type [11463,11467]" dest="user_defined_type [12048,12052]"/>
  <match src="mapping: mapping [86840,86847]" dest="mapping: mapping [27683,27690]"/>
  <match src="visibility [71227,71233]" dest="visibility [80651,80657]"/>
  <match src="identifier: balanceOfCoupons [93515,93531]" dest="identifier: balanceOfCoupons [32079,32095]"/>
  <match src="bytes: bytes [35191,35196]" dest="bytes: bytes [49772,49777]"/>
  <match src="yul_path [90502,90506]" dest="yul_path [75135,75139]"/>
  <match src="function_definition [45926,46041]" dest="function_definition [15083,15198]"/>
  <match src="indexed: indexed [53188,53195]" dest="indexed: indexed [20278,20285]"/>
  <match src="=: = [44653,44654]" dest="=: = [13810,13811]"/>
  <match src="identifier: msg [82950,82953]" dest="identifier: msg [76380,76383]"/>
  <match src="identifier: sub [9721,9724]" dest="identifier: sub [10306,10309]"/>
  <match src="): ) [93471,93472]" dest="): ) [32035,32036]"/>
  <match src="identifier: add [99596,99599]" dest="identifier: add [38158,38161]"/>
  <match src="type_name [101659,101666]" dest="type_name [40221,40228]"/>
  <match src="identifier: add [94789,94792]" dest="identifier: add [33353,33356]"/>
  <match src="memory: memory [36407,36413]" dest="memory: memory [50988,50994]"/>
  <match src="state_mutability [9850,9854]" dest="state_mutability [10435,10439]"/>
  <match src="): ) [55073,55074]" dest="): ) [22163,22164]"/>
  <match src="]: ] [103256,103257]" dest="]: ] [41818,41819]"/>
  <match src="memory: memory [9347,9353]" dest="memory: memory [9932,9938]"/>
  <match src="type_name [53158,53165]" dest="type_name [20248,20255]"/>
  <match src="identifier: epoch [101065,101070]" dest="identifier: epoch [39627,39632]"/>
  <match src="call_argument [34502,34526]" dest="call_argument [49083,49107]"/>
  <match src="function: function [94568,94576]" dest="function: function [33132,33140]"/>
  <match src="function_body [82632,83551]" dest="function_body [58279,58669]"/>
  <match src="string_literal [5311,5337]" dest="string_literal [5890,5916]"/>
  <match src="parameter [45520,45527]" dest="parameter [14677,14684]"/>
  <match src="): ) [10835,10836]" dest="): ) [11420,11421]"/>
  <match src="identifier: balance [92683,92690]" dest="identifier: balance [31247,31254]"/>
  <match src="primitive_type [87157,87164]" dest="primitive_type [28000,28007]"/>
  <match src="primitive_type [91747,91754]" dest="primitive_type [30311,30318]"/>
  <match src="call_argument [94544,94551]" dest="call_argument [33108,33115]"/>
  <match src="identifier: SUPPLY_CHANGE_LIMIT [45333,45352]" dest="identifier: SUPPLY_CHANGE_LIMIT [14490,14509]"/>
  <match src="internal: internal [22852,22860]" dest="internal: internal [55365,55373]"/>
  <match src="}: } [102178,102179]" dest="}: } [40740,40741]"/>
  <match src="call_argument [102652,102657]" dest="call_argument [41214,41219]"/>
  <match src=".: . [8710,8711]" dest=".: . [9295,9296]"/>
  <match src="): ) [101472,101473]" dest="): ) [40034,40035]"/>
  <match src="address: address [93766,93773]" dest="address: address [32330,32337]"/>
  <match src="uint256: uint256 [87051,87058]" dest="uint256: uint256 [27894,27901]"/>
  <match src="view: view [92964,92968]" dest="view: view [31528,31532]"/>
  <match src="identifier: reason [32866,32872]" dest="identifier: reason [47447,47453]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [46133,46153]" dest="identifier: BOOTSTRAPPING_PERIOD [15290,15310]"/>
  <match src="emit: emit [80368,80372]" dest="emit: emit [69516,69520]"/>
  <match src="view: view [68215,68219]" dest="view: view [61629,61633]"/>
  <match src="view: view [92745,92749]" dest="view: view [31309,31313]"/>
  <match src="uint256: uint256 [15308,15315]" dest="uint256: uint256 [25099,25106]"/>
  <match src="identifier: rejectFor [96709,96718]" dest="identifier: rejectFor [35273,35282]"/>
  <match src="(: ( [67139,67140]" dest="(: ( [65793,65794]"/>
  <match src="identifier: strategy [94630,94638]" dest="identifier: strategy [33194,33202]"/>
  <match src="call_argument [83906,83919]" dest="call_argument [58131,58148]"/>
  <match src="assembly: assembly [86006,86014]" dest="assembly: assembly [72812,72820]"/>
  <match src=".: . [95061,95062]" dest=".: . [33625,33626]"/>
  <match src="{: { [85519,85520]" dest="{: { [72325,72326]"/>
  <match src="memory: memory [8197,8203]" dest="memory: memory [8782,8788]"/>
  <match src="(: ( [98241,98242]" dest="(: ( [36803,36804]"/>
  <match src="): ) [82891,82892]" dest="): ) [78850,78851]"/>
  <match src="inheritance_specifier [106598,106609]" dest="inheritance_specifier [75807,75818]"/>
  <match src=".: . [31095,31096]" dest=".: . [45676,45677]"/>
  <match src="view: view [53585,53589]" dest="view: view [20675,20679]"/>
  <match src="}: } [98211,98212]" dest="}: } [36773,36774]"/>
  <match src="call_argument [80261,80265]" dest="call_argument [69436,69440]"/>
  <match src=".: . [9287,9288]" dest=".: . [9872,9873]"/>
  <match src="variable_declaration_statement [4626,4644]" dest="variable_declaration_statement [5205,5223]"/>
  <match src="=: = [44462,44463]" dest="=: = [13619,13620]"/>
  <match src="call_argument [1555,1561]" dest="call_argument [2134,2140]"/>
  <match src="&quot;: &quot; [23744,23745]" dest="&quot;: &quot; [61945,61946]"/>
  <match src="): ) [105721,105722]" dest="): ) [67789,67790]"/>
  <match src="public: public [95604,95610]" dest="public: public [34168,34174]"/>
  <match src=".: . [80758,80759]" dest=".: . [70934,70935]"/>
  <match src="identifier: D256 [10775,10779]" dest="identifier: D256 [11360,11364]"/>
  <match src="identifier: allowance [13842,13851]" dest="identifier: allowance [23633,23642]"/>
  <match src="call_argument [31976,31984]" dest="call_argument [46557,46565]"/>
  <match src="identifier: COMMA [31350,31355]" dest="identifier: COMMA [45931,45936]"/>
  <match src="type_cast_expression [37351,37378]" dest="type_cast_expression [51932,51959]"/>
  <match src=",: , [30910,30911]" dest=",: , [45491,45492]"/>
  <match src="uint256: uint256 [7768,7775]" dest="uint256: uint256 [8353,8360]"/>
  <match src="function_definition [53280,53336]" dest="function_definition [20370,20426]"/>
  <match src="user_defined_type [8847,8851]" dest="user_defined_type [9432,9436]"/>
  <match src="(: ( [104318,104319]" dest="(: ( [42880,42881]"/>
  <match src="identifier: _state [92149,92155]" dest="identifier: _state [30713,30719]"/>
  <match src="): ) [53657,53658]" dest="): ) [20747,20748]"/>
  <match src="identifier: balance [86822,86829]" dest="identifier: balance [27665,27672]"/>
  <match src="call_argument [79517,79527]" dest="call_argument [62641,62651]"/>
  <match src="variable_declaration_statement [36401,36439]" dest="variable_declaration_statement [50982,51020]"/>
  <match src="identifier: getPartial [11186,11196]" dest="identifier: getPartial [11771,11781]"/>
  <match src="(: ( [53474,53475]" dest="(: ( [20564,20565]"/>
  <match src="function_body [92768,92819]" dest="function_body [31332,31383]"/>
  <match src="member_expression [100282,100307]" dest="member_expression [38844,38869]"/>
  <match src="): ) [10661,10662]" dest="): ) [11246,11247]"/>
  <match src="returns: returns [46802,46809]" dest="returns: returns [15959,15966]"/>
  <match src="member_expression [103627,103663]" dest="member_expression [42189,42225]"/>
  <match src="returns: returns [10677,10684]" dest="returns: returns [11262,11269]"/>
  <match src="primitive_type [54855,54862]" dest="primitive_type [21945,21952]"/>
  <match src=".: . [81067,81068]" dest=".: . [69929,69930]"/>
  <match src="(: ( [54712,54713]" dest="(: ( [21802,21803]"/>
  <match src="identifier: account [27988,27995]" dest="identifier: account [55114,55121]"/>
  <match src="type_name [6985,6992]" dest="type_name [7570,7577]"/>
  <match src=".: . [99191,99192]" dest=".: . [37753,37754]"/>
  <match src="): ) [100600,100601]" dest="): ) [39162,39163]"/>
  <match src="assignment_expression [101356,101423]" dest="assignment_expression [39918,39985]"/>
  <match src="primitive_type [53077,53084]" dest="primitive_type [20167,20174]"/>
  <match src="uint256: uint256 [67140,67147]" dest="uint256: uint256 [65794,65801]"/>
  <match src="): ) [99827,99828]" dest="): ) [38389,38390]"/>
  <match src="member_expression [80796,80806]" dest="member_expression [69665,69675]"/>
  <match src="identifier: candidate [103800,103809]" dest="identifier: candidate [42362,42371]"/>
  <match src="identifier: equals [10199,10205]" dest="identifier: equals [10784,10790]"/>
  <match src="string [83004,83035]" dest="string [78209,78220]"/>
  <match src=",: , [5898,5899]" dest=",: , [6477,6478]"/>
  <match src="parameter [104133,104150]" dest="parameter [42695,42712]"/>
  <match src="type_name [44610,44617]" dest="type_name [13767,13774]"/>
  <match src="identifier: self [7954,7958]" dest="identifier: self [8539,8543]"/>
  <match src="return: return [95337,95343]" dest="return: return [33901,33907]"/>
  <match src="{: { [29918,29919]" dest="{: { [44499,44500]"/>
  <match src="identifier: totalRewarded [71961,71974]" dest="identifier: balanceCheck [57996,58008]"/>
  <match src="function: function [91690,91698]" dest="function: function [30254,30262]"/>
  <match src="primitive_type [72980,72987]" dest="primitive_type [65374,65381]"/>
  <match src="state_mutability [47948,47952]" dest="state_mutability [17105,17109]"/>
  <match src="): ) [102099,102100]" dest="): ) [40661,40662]"/>
  <match src="identifier: value [97932,97937]" dest="identifier: value [36494,36499]"/>
  <match src="view: view [92529,92533]" dest="view: view [31093,31097]"/>
  <match src="member_expression [101494,101509]" dest="member_expression [40056,40071]"/>
  <match src="returns: returns [94404,94411]" dest="returns: returns [32968,32975]"/>
  <match src="member_expression [101172,101215]" dest="member_expression [39734,39777]"/>
  <match src="identifier: amount [101667,101673]" dest="identifier: amount [40229,40235]"/>
  <match src="identifier: epochs [95351,95357]" dest="identifier: epochs [33915,33921]"/>
  <match src="member_expression [81247,81286]" dest="member_expression [70002,70011]"/>
  <match src="primitive_type [44746,44753]" dest="primitive_type [13903,13910]"/>
  <match src="): ) [29887,29888]" dest="): ) [44468,44469]"/>
  <match src="emit_statement [90016,90049]" dest="emit_statement [74649,74682]"/>
  <match src="identifier: i [37510,37511]" dest="identifier: i [52091,52092]"/>
  <match src="return: return [1975,1981]" dest="return: return [2554,2560]"/>
  <match src="identifier: decrementTotalRedeemable [99239,99263]" dest="identifier: decrementTotalRedeemable [37801,37825]"/>
  <match src="return_type_definition [7235,7256]" dest="return_type_definition [7820,7841]"/>
  <match src="primitive_type [65942,65949]" dest="primitive_type [78044,78051]"/>
  <match src="address: address [43976,43983]" dest="address: address [13133,13140]"/>
  <match src="memory: memory [8852,8858]" dest="memory: memory [9437,9443]"/>
  <match src="return_type_definition [91738,91755]" dest="return_type_definition [30302,30319]"/>
  <match src="primitive_type [98727,98734]" dest="primitive_type [37289,37296]"/>
  <match src="identifier: Constants [43681,43690]" dest="identifier: Constants [12838,12847]"/>
  <match src="call_argument [80872,80910]" dest="call_argument [78991,79005]"/>
  <match src="contract_body [86681,87000]" dest="contract_body [27524,27843]"/>
  <match src="function: function [47240,47248]" dest="function: function [16397,16405]"/>
  <match src="call_expression [81190,81203]" dest="call_expression [69968,69981]"/>
  <match src="if: if [36127,36129]" dest="if: if [50708,50710]"/>
  <match src="parameter [10686,10690]" dest="parameter [11271,11275]"/>
  <match src="uint256: uint256 [102981,102988]" dest="uint256: uint256 [41543,41550]"/>
  <match src="event_paramater [97904,97922]" dest="event_paramater [36466,36484]"/>
  <match src="user_defined_type [9869,9873]" dest="user_defined_type [10454,10458]"/>
  <match src="(: ( [45983,45984]" dest="(: ( [15140,15141]"/>
  <match src="identifier: Swap [54339,54343]" dest="identifier: Swap [21429,21433]"/>
  <match src="inheritance_specifier [106579,106584]" dest="inheritance_specifier [80385,80390]"/>
  <match src=".: . [9726,9727]" dest=".: . [10311,10312]"/>
  <match src="primitive_type [94145,94152]" dest="primitive_type [32709,32716]"/>
  <match src="]: ] [100758,100759]" dest="]: ] [39320,39321]"/>
  <match src="-: - [37832,37833]" dest="-: - [52413,52414]"/>
  <match src="(: ( [103726,103727]" dest="(: ( [42288,42289]"/>
  <match src="returns: returns [96235,96242]" dest="returns: returns [34799,34806]"/>
  <match src="call_expression [73015,73030]" dest="call_expression [65392,65413]"/>
  <match src="address: address [54186,54193]" dest="address: address [21276,21283]"/>
  <match src="{: { [36143,36144]" dest="{: { [50724,50725]"/>
  <match src="): ) [39017,39018]" dest="): ) [53598,53599]"/>
  <match src=",: , [51816,51817]" dest=",: , [54595,54596]"/>
  <match src="identifier: amount [102010,102016]" dest="identifier: amount [40572,40578]"/>
  <match src="assignment_expression [100258,100315]" dest="assignment_expression [38820,38877]"/>
  <match src="==: == [102699,102701]" dest="==: == [41261,41263]"/>
  <match src="parameter [53904,53911]" dest="parameter [20994,21001]"/>
  <match src=",: , [21530,21531]" dest=",: , [63292,63293]"/>
  <match src="identifier: that [82913,82917]" dest="identifier: that [78137,78141]"/>
  <match src="uint256: uint256 [80433,80440]" dest="uint256: uint256 [69581,69588]"/>
  <match src="(: ( [86036,86037]" dest="(: ( [72842,72843]"/>
  <match src="identifier: _state [99563,99569]" dest="identifier: _state [38125,38131]"/>
  <match src="address: address [53544,53551]" dest="address: address [20634,20641]"/>
  <match src="member_expression [95201,95229]" dest="member_expression [33765,33793]"/>
  <match src="string_literal [23004,23040]" dest="string_literal [55450,55494]"/>
  <match src="view: view [94294,94298]" dest="view: view [32858,32862]"/>
  <match src="identifier: lessPhantom [82392,82403]" dest="identifier: candidate [77782,77791]"/>
  <match src="): ) [93303,93304]" dest="): ) [31867,31868]"/>
  <match src="}: } [83550,83551]" dest="}: } [58668,58669]"/>
  <match src="state_mutability [11051,11055]" dest="state_mutability [11636,11640]"/>
  <match src="identifier: balance [98625,98632]" dest="identifier: balance [37187,37194]"/>
  <match src="identifier: i [95548,95549]" dest="identifier: i [34112,34113]"/>
  <match src="type_name [54210,54214]" dest="type_name [21300,21304]"/>
  <match src="member_expression [50056,50068]" dest="member_expression [69120,69132]"/>
  <match src="(: ( [29986,29987]" dest="(: ( [44567,44568]"/>
  <match src="type_name [103324,103331]" dest="type_name [41886,41893]"/>
  <match src="type_name [89755,89762]" dest="type_name [74388,74395]"/>
  <match src="identifier: amount [21817,21823]" dest="identifier: amount [54733,54739]"/>
  <match src="visibility [28436,28444]" dest="visibility [54852,54860]"/>
  <match src="byte: byte [39013,39017]" dest="byte: byte [53594,53598]"/>
  <match src="event_paramater [15288,15306]" dest="event_paramater [25079,25097]"/>
  <match src="identifier: votes [87584,87589]" dest="identifier: votes [28427,28432]"/>
  <match src="primitive_type [83130,83137]" dest="primitive_type [58500,58507]"/>
  <match src="yul_evm_builtin [97177,97182]" dest="yul_evm_builtin [35741,35746]"/>
  <match src="number_literal: 15e16 [45355,45360]" dest="number_literal: 15e16 [14512,14517]"/>
  <match src="type_name [54068,54075]" dest="type_name [21158,21165]"/>
  <match src="parameter [100117,100132]" dest="parameter [38679,38694]"/>
  <match src="public: public [91415,91421]" dest="public: public [29979,29985]"/>
  <match src="struct_declaration [86765,86997]" dest="struct_declaration [27608,27840]"/>
  <match src="): ) [53843,53844]" dest="): ) [20933,20934]"/>
  <match src="!: ! [30405,30406]" dest="!: ! [44986,44987]"/>
  <match src="member_expression [7888,7893]" dest="member_expression [8473,8478]"/>
  <match src="identifier: balanceCheck [80630,80642]" dest="identifier: balanceCheck [55684,55696]"/>
  <match src=".: . [102479,102480]" dest=".: . [41041,41042]"/>
  <match src="call_argument [21717,21757]" dest="call_argument [55799,55829]"/>
  <match src="identifier: getSupplyChangeDivisor [47657,47679]" dest="identifier: getSupplyChangeDivisor [16814,16836]"/>
  <match src="function_definition [103482,103691]" dest="function_definition [42044,42253]"/>
  <match src="identifier: mul [8369,8372]" dest="identifier: mul [8954,8957]"/>
  <match src="+: + [39227,39228]" dest="+: + [53808,53809]"/>
  <match src="uint256: uint256 [1910,1917]" dest="uint256: uint256 [2489,2496]"/>
  <match src="identifier: msg [80468,80471]" dest="identifier: msg [70429,70432]"/>
  <match src="}: } [87935,87936]" dest="}: } [28778,28779]"/>
  <match src="primitive_type [70164,70171]" dest="primitive_type [64643,64650]"/>
  <match src="call_argument [93478,93489]" dest="call_argument [32042,32053]"/>
  <match src=".: . [82613,82614]" dest=".: . [69897,69898]"/>
  <match src=":: : [7292,7293]" dest=":: : [7877,7878]"/>
  <match src="}: } [34947,34948]" dest="}: } [49528,49529]"/>
  <match src="type_name [53707,53714]" dest="type_name [20797,20804]"/>
  <match src="(: ( [7863,7864]" dest="(: ( [8448,8449]"/>
  <match src="identifier: transfer [13481,13489]" dest="identifier: transfer [23272,23280]"/>
  <match src="uint256: uint256 [17389,17396]" dest="uint256: uint256 [59839,59846]"/>
  <match src="identifier: sender [81409,81415]" dest="identifier: sender [70733,70739]"/>
  <match src="identifier: COLON [30103,30108]" dest="identifier: COLON [44684,44689]"/>
  <match src="identifier: _state [95652,95658]" dest="identifier: _state [34216,34222]"/>
  <match src="&quot;: &quot; [105413,105414]" dest="&quot;: &quot; [67481,67482]"/>
  <match src="parameter [9168,9181]" dest="parameter [9753,9766]"/>
  <match src="returns: returns [53830,53837]" dest="returns: returns [20920,20927]"/>
  <match src="return_statement [11615,11648]" dest="return_statement [12200,12233]"/>
  <match src="function_definition [104430,104545]" dest="function_definition [42992,43107]"/>
  <match src="(: ( [96203,96204]" dest="(: ( [34767,34768]"/>
  <match src="identifier: sender [81738,81744]" dest="identifier: sender [70967,70973]"/>
  <match src="identifier: staged [92585,92591]" dest="identifier: staged [31149,31155]"/>
  <match src="event_paramater [80109,80125]" dest="event_paramater [76037,76051]"/>
  <match src="(: ( [63048,63049]" dest="(: ( [26907,26908]"/>
  <match src="parameter [53783,53795]" dest="parameter [20873,20885]"/>
  <match src="number_literal: 1 [82518,82519]" dest="number_literal: 1 [70829,70830]"/>
  <match src="bytes32: bytes32 [32169,32176]" dest="bytes32: bytes32 [46750,46757]"/>
  <match src="call_expression [94522,94552]" dest="call_expression [33086,33116]"/>
  <match src="call_expression [105337,105354]" dest="call_expression [67405,67422]"/>
  <match src="primitive_type [31610,31617]" dest="primitive_type [46191,46198]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [35390,35432]" dest="comment: // reverse-for-loops with unsigned integer [49971,50013]"/>
  <match src="identifier: account [93129,93136]" dest="identifier: account [31693,31700]"/>
  <match src="primitive_type [38955,38962]" dest="primitive_type [53536,53543]"/>
  <match src="type_name [92328,92335]" dest="type_name [30892,30899]"/>
  <match src="function_definition [89736,90056]" dest="function_definition [74369,74689]"/>
  <match src="): ) [102703,102704]" dest="): ) [41265,41266]"/>
  <match src="number_literal: 1 [11592,11593]" dest="number_literal: 1 [12177,12178]"/>
  <match src="(: ( [36430,36431]" dest="(: ( [51011,51012]"/>
  <match src=",: , [80007,80008]" dest=",: , [68950,68951]"/>
  <match src="private: private [11292,11299]" dest="private: private [11877,11884]"/>
  <match src="primitive_type [27980,27987]" dest="primitive_type [55106,55113]"/>
  <match src="): ) [87582,87583]" dest="): ) [28425,28426]"/>
  <match src="(: ( [14998,14999]" dest="(: ( [24789,24790]"/>
  <match src="): ) [23921,23922]" dest="): ) [63136,63137]"/>
  <match src="call_argument [65272,65291]" dest="call_argument [79348,79362]"/>
  <match src="): ) [32516,32517]" dest="): ) [47097,47098]"/>
  <match src="variable_declaration [89852,89864]" dest="variable_declaration [74485,74497]"/>
  <match src="type_name [69876,69883]" dest="type_name [69051,69058]"/>
  <match src="(: ( [81280,81281]" dest="(: ( [70045,70046]"/>
  <match src="string [82405,82441]" dest="string [78410,78428]"/>
  <match src="uint256: uint256 [29701,29708]" dest="uint256: uint256 [44282,44289]"/>
  <match src="=: = [38336,38337]" dest="=: = [52917,52918]"/>
  <match src=".: . [46536,46537]" dest=".: . [15693,15694]"/>
  <match src="identifier: decrementTotalBonded [98539,98559]" dest="identifier: decrementTotalBonded [37101,37121]"/>
  <match src="call_argument [49872,49876]" dest="call_argument [62039,62043]"/>
  <match src="mapping: mapping [86886,86893]" dest="mapping: mapping [27729,27736]"/>
  <match src="number_literal: 0 [10988,10989]" dest="number_literal: 0 [11573,11574]"/>
  <match src="): ) [92442,92443]" dest="): ) [31006,31007]"/>
  <match src="parameter [74673,74687]" dest="parameter [55123,55137]"/>
  <match src="member_expression [9277,9291]" dest="member_expression [9862,9876]"/>
  <match src=".: . [98791,98792]" dest=".: . [37353,37354]"/>
  <match src="identifier: _state [104357,104363]" dest="identifier: _state [42919,42925]"/>
  <match src="=: = [100472,100473]" dest="=: = [39034,39035]"/>
  <match src="): ) [63002,63003]" dest="): ) [26861,26862]"/>
  <match src="identifier: Constants [81247,81256]" dest="identifier: Constants [70012,70021]"/>
  <match src="): ) [54042,54043]" dest="): ) [21132,21133]"/>
  <match src="uint256: uint256 [86848,86855]" dest="uint256: uint256 [27691,27698]"/>
  <match src="visibility [91415,91421]" dest="visibility [29979,29985]"/>
  <match src="function_definition [47804,47909]" dest="function_definition [16961,17066]"/>
  <match src="binary_expression [82670,82687]" dest="binary_expression [58317,58334]"/>
  <match src="comment: /**      * ERC20 Interface      */ [91355,91391]" dest="comment: /**      * ERC20 Interface      */ [29919,29955]"/>
  <match src="function_definition [96185,96314]" dest="function_definition [34749,34878]"/>
  <match src="{: { [95183,95184]" dest="{: { [33747,33748]"/>
  <match src="&quot;: &quot; [83954,83955]" dest="&quot;: &quot; [58183,58184]"/>
  <match src="member_expression [92149,92164]" dest="member_expression [30713,30728]"/>
  <match src="): ) [54745,54746]" dest="): ) [21835,21836]"/>
  <match src="(: ( [90029,90030]" dest="(: ( [74662,74663]"/>
  <match src="): ) [21653,21654]" dest="): ) [63431,63432]"/>
  <match src="=: = [45197,45198]" dest="=: = [14354,14355]"/>
  <match src="return_statement [47071,47101]" dest="return_statement [16228,16258]"/>
  <match src="uint256: uint256 [79979,79986]" dest="uint256: uint256 [68922,68929]"/>
  <match src="(: ( [31313,31314]" dest="(: ( [45894,45895]"/>
  <match src="member_expression [100867,100907]" dest="member_expression [39429,39469]"/>
  <match src="type_name [72249,72256]" dest="type_name [79489,79496]"/>
  <match src="): ) [36109,36110]" dest="): ) [50690,50691]"/>
  <match src="identifier: must [34198,34202]" dest="identifier: must [48779,48783]"/>
  <match src="parenthesized_expression [36824,36832]" dest="parenthesized_expression [51405,51413]"/>
  <match src=".: . [102133,102134]" dest=".: . [40695,40696]"/>
  <match src="primitive_type [95756,95760]" dest="primitive_type [34320,34324]"/>
  <match src="identifier: self [10493,10497]" dest="identifier: self [11078,11082]"/>
  <match src="struct: struct [86765,86771]" dest="struct: struct [27608,27614]"/>
  <match src="number_literal: 0 [11646,11647]" dest="number_literal: 0 [12231,12232]"/>
  <match src=".: . [104278,104279]" dest=".: . [42840,42841]"/>
  <match src="uint256: uint256 [98141,98148]" dest="uint256: uint256 [36703,36710]"/>
  <match src="identifier: candidates [104033,104043]" dest="identifier: candidates [42595,42605]"/>
  <match src="parameter [96948,96952]" dest="parameter [35512,35516]"/>
  <match src="returns: returns [53590,53597]" dest="returns: returns [20680,20687]"/>
  <match src="type_name [95917,95924]" dest="type_name [34481,34488]"/>
  <match src="returns: returns [39004,39011]" dest="returns: returns [53585,53592]"/>
  <match src="user_defined_type [10793,10797]" dest="user_defined_type [11378,11382]"/>
  <match src="primitive_type [81690,81697]" dest="primitive_type [70889,70896]"/>
  <match src="(: ( [36810,36811]" dest="(: ( [51391,51392]"/>
  <match src="function_definition [92187,92283]" dest="function_definition [30751,30847]"/>
  <match src="expression_statement [22952,23042]" dest="expression_statement [55417,55496]"/>
  <match src="(: ( [96947,96948]" dest="(: ( [35511,35512]"/>
  <match src="comment: // Can modify account state [105222,105249]" dest="comment: // Can modify account state [67290,67317]"/>
  <match src="identifier: candidates [96142,96152]" dest="identifier: candidates [34706,34716]"/>
  <match src="): ) [7899,7900]" dest="): ) [8484,8485]"/>
  <match src="parameter [98242,98256]" dest="parameter [36804,36818]"/>
  <match src="): ) [83883,83884]" dest="): ) [58797,58798]"/>
  <match src="visibility [98293,98301]" dest="visibility [36855,36863]"/>
  <match src="expression_statement [37881,37892]" dest="expression_statement [52462,52473]"/>
  <match src="identifier: balanceOfBonded [81784,81799]" dest="identifier: balanceOfBonded [70512,70527]"/>
  <match src="identifier: epochs [100831,100837]" dest="identifier: epochs [39393,39399]"/>
  <match src="pure: pure [45970,45974]" dest="pure: pure [15127,15131]"/>
  <match src="expression_statement [23757,23826]" dest="expression_statement [62936,63013]"/>
  <match src="using_directive [91161,91188]" dest="using_directive [29725,29752]"/>
  <match src="state_mutability [85499,85503]" dest="state_mutability [72305,72309]"/>
  <match src="identifier: _state [100170,100176]" dest="identifier: _state [38732,38738]"/>
  <match src="identifier: mul [83278,83281]" dest="identifier: mul [71011,71014]"/>
  <match src="identifier: amount [22844,22850]" dest="identifier: amount [55357,55363]"/>
  <match src=".: . [98495,98496]" dest=".: . [37057,37058]"/>
  <match src="identifier: self [10642,10646]" dest="identifier: self [11227,11231]"/>
  <match src="parameter [11065,11072]" dest="parameter [11650,11657]"/>
  <match src="): ) [94773,94774]" dest="): ) [33337,33338]"/>
  <match src="identifier: price1CumulativeLast [55000,55020]" dest="identifier: price1CumulativeLast [22090,22110]"/>
  <match src="user_defined_type [91212,91224]" dest="user_defined_type [29776,29788]"/>
  <match src="[: [ [103644,103645]" dest="[: [ [42206,42207]"/>
  <match src="(: ( [2382,2383]" dest="(: ( [2961,2962]"/>
  <match src="identifier: getPoolExitLockupEpochs [76913,76936]" dest="identifier: getCouponExpiration [60780,60799]"/>
  <match src="assignment_expression [37822,37866]" dest="assignment_expression [52403,52447]"/>
  <match src="): ) [80785,80786]" dest="): ) [69654,69655]"/>
  <match src="identifier: amount [18726,18732]" dest="identifier: amount [59100,59106]"/>
  <match src="identifier: sender [83509,83515]" dest="identifier: sender [78644,78650]"/>
  <match src="identifier: decrementTotalDebt [98841,98859]" dest="identifier: decrementTotalDebt [37403,37421]"/>
  <match src="}: } [97205,97206]" dest="}: } [35769,35770]"/>
  <match src="type_name [100669,100676]" dest="type_name [39231,39238]"/>
  <match src="variable_declaration_statement [83059,83118]" dest="variable_declaration_statement [61009,61083]"/>
  <match src="): ) [38314,38315]" dest="): ) [52895,52896]"/>
  <match src=":: : [8513,8514]" dest=":: : [9098,9099]"/>
  <match src="member_expression [103229,103263]" dest="member_expression [41791,41825]"/>
  <match src="): ) [8722,8723]" dest="): ) [9307,9308]"/>
  <match src="}: } [96313,96314]" dest="}: } [34877,34878]"/>
  <match src="primitive_type [46106,46113]" dest="primitive_type [15263,15270]"/>
  <match src="constant: constant [44762,44770]" dest="constant: constant [13919,13927]"/>
  <match src="primitive_type [18645,18652]" dest="primitive_type [58888,58895]"/>
  <match src="using_directive [74443,74470]" dest="using_directive [80434,80461]"/>
  <match src="primitive_type [32883,32890]" dest="primitive_type [47464,47471]"/>
  <match src="): ) [96663,96664]" dest="): ) [35227,35228]"/>
  <match src="{: { [102110,102111]" dest="{: { [40672,40673]"/>
  <match src="public: public [95462,95468]" dest="public: public [34026,34032]"/>
  <match src="+: + [1533,1534]" dest="+: + [2112,2113]"/>
  <match src="identifier: account [99579,99586]" dest="identifier: account [38141,38148]"/>
  <match src="(: ( [62926,62927]" dest="(: ( [26785,26786]"/>
  <match src="(: ( [85512,85513]" dest="(: ( [72318,72319]"/>
  <match src="identifier: periodFor [104283,104292]" dest="identifier: periodFor [42845,42854]"/>
  <match src="(: ( [102257,102258]" dest="(: ( [40819,40820]"/>
  <match src="parameter [75207,75221]" dest="parameter [55560,55574]"/>
  <match src="comment: // ============ Private Functions ============ [34963,35009]" dest="comment: // ============ Private Functions ============ [49544,49590]"/>
  <match src="(: ( [89575,89576]" dest="(: ( [74208,74209]"/>
  <match src="function_body [4509,4759]" dest="function_body [5088,5338]"/>
  <match src="}: } [24350,24351]" dest="}: } [63883,63884]"/>
  <match src="event_definition [79869,79935]" dest="event_definition [68983,69076]"/>
  <match src="type_name [29701,29708]" dest="type_name [44282,44289]"/>
  <match src="return: return [9457,9463]" dest="return: return [10042,10048]"/>
  <match src="library: library [85047,85054]" dest="library: library [71853,71860]"/>
  <match src="primitive_type [38338,38342]" dest="primitive_type [52919,52923]"/>
  <match src="type_name [55098,55102]" dest="type_name [22188,22192]"/>
  <match src="{: { [91451,91452]" dest="{: { [30015,30016]"/>
  <match src="contract_declaration [64318,68434]" dest="contract_declaration [64471,66610]"/>
  <match src="string_literal [105413,105434]" dest="string_literal [67481,67502]"/>
  <match src="returns: returns [36088,36095]" dest="returns: returns [50669,50676]"/>
  <match src="parameter [5274,5281]" dest="parameter [5853,5860]"/>
  <match src="identifier: i [9018,9019]" dest="identifier: i [9603,9604]"/>
  <match src="{: { [65670,65671]" dest="{: { [66318,66319]"/>
  <match src="call_argument [80253,80266]" dest="call_argument [69428,69441]"/>
  <match src="identifier: Storage [88238,88245]" dest="identifier: Storage [29081,29088]"/>
  <match src="member_expression [94793,94808]" dest="member_expression [33357,33372]"/>
  <match src="using: using [97832,97837]" dest="using: using [36394,36399]"/>
  <match src="primitive_type [87786,87793]" dest="primitive_type [28629,28636]"/>
  <match src="): ) [21874,21875]" dest="): ) [63872,63873]"/>
  <match src="returns: returns [37033,37040]" dest="returns: returns [51614,51621]"/>
  <match src="visibility [45718,45726]" dest="visibility [14875,14883]"/>
  <match src=",: , [104131,104132]" dest=",: , [42693,42694]"/>
  <match src="identifier: Sync [54527,54531]" dest="identifier: Sync [21617,21621]"/>
  <match src="type_name [95720,95727]" dest="type_name [34284,34291]"/>
  <match src="]: ] [102259,102260]" dest="]: ] [40821,40822]"/>
  <match src="identifier: _ [105458,105459]" dest="identifier: _ [67526,67527]"/>
  <match src="number_literal: 48 [29397,29399]" dest="number_literal: 48 [43978,43980]"/>
  <match src="state_mutability [2857,2861]" dest="state_mutability [3436,3440]"/>
  <match src="parameter [96108,96115]" dest="parameter [34672,34679]"/>
  <match src="parameter [45625,45632]" dest="parameter [14782,14789]"/>
  <match src="array_access [100170,100194]" dest="array_access [38732,38756]"/>
  <match src="internal: internal [47682,47690]" dest="internal: internal [16839,16847]"/>
  <match src="internal: internal [12463,12471]" dest="internal: internal [54613,54621]"/>
  <match src="}: } [92282,92283]" dest="}: } [30846,30847]"/>
  <match src="identifier: amount [15042,15048]" dest="identifier: amount [24833,24839]"/>
  <match src="contract_body [87019,87325]" dest="contract_body [27862,28168]"/>
  <match src="uint256: uint256 [72980,72987]" dest="uint256: uint256 [65374,65381]"/>
  <match src="(: ( [68203,68204]" dest="(: ( [61605,61606]"/>
  <match src="member_expression [93968,93983]" dest="member_expression [32532,32547]"/>
  <match src="(: ( [53157,53158]" dest="(: ( [20247,20248]"/>
  <match src="identifier: add [103455,103458]" dest="identifier: add [42017,42020]"/>
  <match src="member_expression [107002,107016]" dest="member_expression [66371,66387]"/>
  <match src="visibility [46467,46475]" dest="visibility [15624,15632]"/>
  <match src="comment: // ============ Structs ============ [6916,6952]" dest="comment: // ============ Structs ============ [7501,7537]"/>
  <match src="string_literal [21532,21571]" dest="string_literal [63294,63341]"/>
  <match src="{: { [89007,89008]" dest="{: { [73640,73641]"/>
  <match src="string: string [31063,31069]" dest="string: string [45644,45650]"/>
  <match src="(: ( [95899,95900]" dest="(: ( [34463,34464]"/>
  <match src="call_expression [101285,101345]" dest="call_expression [39847,39907]"/>
  <match src="type_name [47962,47969]" dest="type_name [17119,17126]"/>
  <match src="state_variable_declaration [64391,64432]" dest="state_variable_declaration [59855,59896]"/>
  <match src=".: . [7447,7448]" dest=".: . [8032,8033]"/>
  <match src="primitive_type [45002,45009]" dest="primitive_type [14159,14166]"/>
  <match src="parameter [37973,37986]" dest="parameter [52554,52567]"/>
  <match src="parameter [55304,55314]" dest="parameter [22394,22404]"/>
  <match src="): ) [11040,11041]" dest="): ) [11625,11626]"/>
  <match src="visibility [100150,100158]" dest="visibility [38712,38720]"/>
  <match src="expression_statement [3199,3256]" dest="expression_statement [3778,3835]"/>
  <match src="event_definition [15488,15566]" dest="event_definition [25279,25357]"/>
  <match src=".: . [102460,102461]" dest=".: . [41022,41023]"/>
  <match src="visibility [2433,2441]" dest="visibility [3012,3020]"/>
  <match src="visibility [94124,94130]" dest="visibility [32688,32694]"/>
  <match src="calldata: calldata [55322,55330]" dest="calldata: calldata [22412,22420]"/>
  <match src="type_name [2871,2878]" dest="type_name [3450,3457]"/>
  <match src="interface_declaration [53030,55476]" dest="interface_declaration [20120,22566]"/>
  <match src="parameter [33629,33641]" dest="parameter [48210,48222]"/>
  <match src="call_argument [84086,84132]" dest="call_argument [77949,77971]"/>
  <match src=",: , [99386,99387]" dest=",: , [37948,37949]"/>
  <match src="type_name [82050,82057]" dest="type_name [61196,61203]"/>
  <match src="identifier: totalBondedAt [95575,95588]" dest="identifier: totalBondedAt [34139,34152]"/>
  <match src="identifier: abi [31754,31757]" dest="identifier: abi [46335,46338]"/>
  <match src="function: function [31518,31526]" dest="function: function [46099,46107]"/>
  <match src="parameter [34213,34225]" dest="parameter [48794,48806]"/>
  <match src="return_type_definition [96647,96664]" dest="return_type_definition [35211,35228]"/>
  <match src="comment: // populate the most-significant character [38753,38795]" dest="comment: // populate the most-significant character [53334,53376]"/>
  <match src="parameter [92543,92550]" dest="parameter [31107,31114]"/>
  <match src=".: . [92268,92269]" dest=".: . [30832,30833]"/>
  <match src=",: , [31277,31278]" dest=",: , [45858,45859]"/>
  <match src="type_name [87100,87107]" dest="type_name [27943,27950]"/>
  <match src="primitive_type [95451,95458]" dest="primitive_type [34015,34022]"/>
  <match src="function_definition [83782,84003]" dest="function_definition [58677,58860]"/>
  <match src="block_statement [34390,34948]" dest="block_statement [48971,49529]"/>
  <match src="false: false [98335,98340]" dest="false: false [36897,36902]"/>
  <match src="variable_declaration_statement [37203,37239]" dest="variable_declaration_statement [51784,51820]"/>
  <match src=".: . [100446,100447]" dest=".: . [39008,39009]"/>
  <match src="function_body [30390,30821]" dest="function_body [44971,45402]"/>
  <match src="): ) [33750,33751]" dest="): ) [48331,48332]"/>
  <match src="primitive_type [91709,91716]" dest="primitive_type [30273,30280]"/>
  <match src="number_literal: 0 [10731,10732]" dest="number_literal: 0 [11316,11317]"/>
  <match src="identifier: c [4750,4751]" dest="identifier: c [5329,5330]"/>
  <match src="identifier: COLON [31186,31191]" dest="identifier: COLON [45767,45772]"/>
  <match src="type_name [13234,13241]" dest="type_name [23025,23032]"/>
  <match src="uint: uint [55236,55240]" dest="uint: uint [22326,22330]"/>
  <match src="identifier: Status [93812,93818]" dest="identifier: Status [32376,32382]"/>
  <match src="parameter [98727,98741]" dest="parameter [37289,37303]"/>
  <match src="yul_identifier [35816,35822]" dest="yul_identifier [50397,50403]"/>
  <match src="(: ( [46080,46081]" dest="(: ( [15237,15238]"/>
  <match src="identifier: sub [8085,8088]" dest="identifier: sub [8670,8673]"/>
  <match src="identifier: ASCII_ZERO [37316,37326]" dest="identifier: ASCII_ZERO [51897,51907]"/>
  <match src="(: ( [94661,94662]" dest="(: ( [33225,33226]"/>
  <match src="parameter [96204,96221]" dest="parameter [34768,34785]"/>
  <match src="primitive_type [53180,53187]" dest="primitive_type [20270,20277]"/>
  <match src="primitive_type [77572,77579]" dest="primitive_type [60387,60394]"/>
  <match src="identifier: file [30881,30885]" dest="identifier: file [45462,45466]"/>
  <match src="bytes32: bytes32 [31585,31592]" dest="bytes32: bytes32 [46166,46173]"/>
  <match src="parameter [101803,101816]" dest="parameter [40365,40378]"/>
  <match src="]: ] [93991,93992]" dest="]: ] [32555,32556]"/>
  <match src="call_expression [94689,94809]" dest="call_expression [33253,33373]"/>
  <match src="contract: contract [50788,50796]" dest="contract: contract [25947,25955]"/>
  <match src="(: ( [31706,31707]" dest="(: ( [46287,46288]"/>
  <match src="address: address [99475,99482]" dest="address: address [38037,38044]"/>
  <match src="(: ( [83295,83296]" dest="(: ( [71033,71034]"/>
  <match src="identifier: expiringCoupons [95265,95280]" dest="identifier: expiringCoupons [33829,33844]"/>
  <match src="identifier: factory [54649,54656]" dest="identifier: factory [21739,21746]"/>
  <match src="primitive_type [95174,95181]" dest="primitive_type [33738,33745]"/>
  <match src="call_argument [49198,49202]" dest="call_argument [54911,54915]"/>
  <match src="return: return [38902,38908]" dest="return: return [53483,53489]"/>
  <match src="parameter [20705,20728]" dest="parameter [18142,18161]"/>
  <match src="): ) [80478,80479]" dest="): ) [70439,70440]"/>
  <match src="member_expression [8074,8088]" dest="member_expression [8659,8673]"/>
  <match src="member_expression [103782,103817]" dest="member_expression [42344,42379]"/>
  <match src=".: . [94442,94443]" dest=".: . [33006,33007]"/>
  <match src="(: ( [7436,7437]" dest="(: ( [8021,8022]"/>
  <match src="internal: internal [7991,7999]" dest="internal: internal [8576,8584]"/>
  <match src="state_mutability [10936,10940]" dest="state_mutability [11521,11525]"/>
  <match src="): ) [54916,54917]" dest="): ) [22006,22007]"/>
  <match src="(: ( [77736,77737]" dest="(: ( [55933,55934]"/>
  <match src="comment: // 100 ULD [44890,44900]" dest="comment: // 100 ULD [14047,14057]"/>
  <match src="uint256: uint256 [46106,46113]" dest="uint256: uint256 [15263,15270]"/>
  <match src="): ) [10925,10926]" dest="): ) [11510,11511]"/>
  <match src="identifier: transfer [98000,98008]" dest="identifier: transfer [36562,36570]"/>
  <match src="primitive_type [81955,81962]" dest="primitive_type [60732,60739]"/>
  <match src="return_type_definition [46925,46942]" dest="return_type_definition [16082,16099]"/>
  <match src="(: ( [98559,98560]" dest="(: ( [37121,37122]"/>
  <match src="user_defined_type [106854,106864]" dest="user_defined_type [68662,68672]"/>
  <match src="identifier: _state [103820,103826]" dest="identifier: _state [42382,42388]"/>
  <match src="identifier: balanceOf [83860,83869]" dest="identifier: mint [58771,58775]"/>
  <match src="type_name [79880,79887]" dest="type_name [68996,69003]"/>
  <match src=":: : [47462,47463]" dest=":: : [16619,16620]"/>
  <match src="function_definition [101595,101760]" dest="function_definition [40157,40322]"/>
  <match src="identifier: D256 [8024,8028]" dest="identifier: D256 [8609,8613]"/>
  <match src="member_expression [81624,81634]" dest="member_expression [71286,71296]"/>
  <match src="(: ( [10536,10537]" dest="(: ( [11121,11122]"/>
  <match src="{: { [94422,94423]" dest="{: { [32986,32987]"/>
  <match src="uint256: uint256 [81955,81962]" dest="uint256: uint256 [60732,60739]"/>
  <match src="internal: internal [47151,47159]" dest="internal: internal [16308,16316]"/>
  <match src="identifier: value [9944,9949]" dest="identifier: value [10529,10534]"/>
  <match src="): ) [92305,92306]" dest="): ) [30869,30870]"/>
  <match src="modifier_invocation [80176,80198]" dest="modifier_invocation [76301,76331]"/>
  <match src="return: return [11585,11591]" dest="return: return [12170,12176]"/>
  <match src="): ) [98291,98292]" dest="): ) [36853,36854]"/>
  <match src="private: private [43805,43812]" dest="private: private [12962,12969]"/>
  <match src="identifier: getChainId [47926,47936]" dest="identifier: getChainId [17083,17093]"/>
  <match src="): ) [98042,98043]" dest="): ) [36604,36605]"/>
  <match src="call_argument [96694,96703]" dest="call_argument [35258,35267]"/>
  <match src="indexed: indexed [79888,79895]" dest="indexed: indexed [69004,69011]"/>
  <match src="memory: memory [47417,47423]" dest="memory: memory [16574,16580]"/>
  <match src="binary_expression [4638,4643]" dest="binary_expression [5217,5222]"/>
  <match src="&quot;: &quot; [21717,21718]" dest="&quot;: &quot; [55799,55800]"/>
  <match src="): ) [7300,7301]" dest="): ) [7885,7886]"/>
  <match src="member_expression [99528,99560]" dest="member_expression [38090,38122]"/>
  <match src="identifier: recordedVote [95887,95899]" dest="identifier: recordedVote [34451,34463]"/>
  <match src="member_expression [82494,82504]" dest="member_expression [70805,70815]"/>
  <match src="array_access [94172,94220]" dest="array_access [32736,32784]"/>
  <match src="visibility [99829,99837]" dest="visibility [38391,38399]"/>
  <match src="call_argument [100056,100057]" dest="call_argument [38618,38619]"/>
  <match src="identifier: slot [90502,90506]" dest="identifier: slot [75135,75139]"/>
  <match src="comment: /**      * Epoch      */ [102041,102067]" dest="comment: /**      * Epoch      */ [40603,40629]"/>
  <match src="): ) [9500,9501]" dest="): ) [10085,10086]"/>
  <match src="identifier: amount0In [54392,54401]" dest="identifier: amount0In [21482,21491]"/>
  <match src=",: , [30937,30938]" dest=",: , [45518,45519]"/>
  <match src="[: [ [103837,103838]" dest="[: [ [42399,42400]"/>
  <match src="function_definition [46749,46872]" dest="function_definition [15906,16029]"/>
  <match src=".: . [84066,84067]" dest=".: . [77929,77930]"/>
  <match src="member_expression [94689,94792]" dest="member_expression [33253,33356]"/>
  <match src="state_variable_declaration [44610,44661]" dest="state_variable_declaration [13767,13818]"/>
  <match src="identifier: asUint256 [11014,11023]" dest="identifier: asUint256 [11599,11608]"/>
  <match src="(: ( [7161,7162]" dest="(: ( [7746,7747]"/>
  <match src="call_argument [93628,93633]" dest="call_argument [32192,32197]"/>
  <match src="identifier: candidate [104293,104302]" dest="identifier: candidate [42855,42864]"/>
  <match src="{: { [98907,98908]" dest="{: { [37469,37470]"/>
  <match src="identifier: self [10145,10149]" dest="identifier: self [10730,10734]"/>
  <match src="address: address [98009,98016]" dest="address: address [36571,36578]"/>
  <match src="return_type_definition [1490,1507]" dest="return_type_definition [2069,2086]"/>
  <match src="identifier: burnFrom [24879,24887]" dest="identifier: redeemToAccount [55090,55105]"/>
  <match src="event: event [15488,15493]" dest="event: event [25279,25284]"/>
  <match src="return_type_definition [17667,17684]" dest="return_type_definition [17982,17999]"/>
  <match src="uint256: uint256 [102596,102603]" dest="uint256: uint256 [41158,41165]"/>
  <match src="event_paramater [54307,54325]" dest="event_paramater [21397,21415]"/>
  <match src="primitive_type [54038,54042]" dest="primitive_type [21128,21132]"/>
  <match src="identifier: value [80002,80007]" dest="identifier: value [68945,68950]"/>
  <match src="type_name [29824,29828]" dest="type_name [44405,44409]"/>
  <match src="return_type_definition [98302,98316]" dest="return_type_definition [36864,36878]"/>
  <match src="function_definition [91512,91598]" dest="function_definition [30076,30162]"/>
  <match src="assignment_expression [99040,99063]" dest="assignment_expression [37602,37625]"/>
  <match src="): ) [100524,100525]" dest="): ) [39086,39087]"/>
  <match src=".: . [94766,94767]" dest=".: . [33330,33331]"/>
  <match src="]: ] [95529,95530]" dest="]: ] [34093,34094]"/>
  <match src="byte: byte [38338,38342]" dest="byte: byte [52919,52923]"/>
  <match src="internal: internal [1476,1484]" dest="internal: internal [2055,2063]"/>
  <match src="state_mutability [46920,46924]" dest="state_mutability [16077,16081]"/>
  <match src="call_argument [34759,34767]" dest="call_argument [49340,49348]"/>
  <match src="constant: constant [44179,44187]" dest="constant: constant [13336,13344]"/>
  <match src=",: , [9583,9584]" dest=",: , [10168,10169]"/>
  <match src="]: ] [104380,104381]" dest="]: ] [42942,42943]"/>
  <match src="parameter [55316,55335]" dest="parameter [22406,22425]"/>
  <match src="uint256: uint256 [83060,83067]" dest="uint256: uint256 [61010,61017]"/>
  <match src="identifier: sub [9328,9331]" dest="identifier: sub [9913,9916]"/>
  <match src="(: ( [9468,9469]" dest="(: ( [10053,10054]"/>
  <match src="(: ( [101456,101457]" dest="(: ( [40018,40019]"/>
  <match src="return_statement [92024,92033]" dest="return_statement [30588,30597]"/>
  <match src="return_statement [9689,9745]" dest="return_statement [10274,10330]"/>
  <match src="): ) [100812,100813]" dest="): ) [39374,39375]"/>
  <match src="public: public [95735,95741]" dest="public: public [34299,34305]"/>
  <match src="identifier: candidate [104141,104150]" dest="identifier: candidate [42703,42712]"/>
  <match src="memory: memory [7401,7407]" dest="memory: memory [7986,7992]"/>
  <match src="identifier: temp [8953,8957]" dest="identifier: temp [9538,9542]"/>
  <match src="public: public [95007,95013]" dest="public: public [33571,33577]"/>
  <match src="identifier: D256 [7280,7284]" dest="identifier: D256 [7865,7869]"/>
  <match src="identifier: coupons [92914,92921]" dest="identifier: coupons [31478,31485]"/>
  <match src="parameter [50836,50850]" dest="parameter [25995,26009]"/>
  <match src="struct_member [86840,86876]" dest="struct_member [27683,27719]"/>
  <match src="identifier: epochs [95517,95523]" dest="identifier: epochs [34081,34087]"/>
  <match src="function_body [1508,1622]" dest="function_body [2087,2201]"/>
  <match src="parameter [8656,8667]" dest="parameter [9241,9252]"/>
  <match src="primitive_type [96382,96389]" dest="primitive_type [34946,34953]"/>
  <match src=":: : [8304,8305]" dest=":: : [8889,8890]"/>
  <match src="parameter [100398,100418]" dest="parameter [38960,38980]"/>
  <match src="(: ( [101802,101803]" dest="(: ( [40364,40365]"/>
  <match src="identifier: value [47457,47462]" dest="identifier: value [16614,16619]"/>
  <match src="function: function [93506,93514]" dest="function: function [32070,32078]"/>
  <match src="identifier: value [46543,46548]" dest="identifier: value [15700,15705]"/>
  <match src="string_literal [83954,83984]" dest="string_literal [58183,58206]"/>
  <match src="primitive_type [86859,86866]" dest="primitive_type [27702,27709]"/>
  <match src="type_name [49320,49327]" dest="type_name [55897,55904]"/>
  <match src="pure: pure [10817,10821]" dest="pure: pure [11402,11406]"/>
  <match src="visibility [89246,89253]" dest="visibility [73879,73886]"/>
  <match src="&quot;: &quot; [19465,19466]" dest="&quot;: &quot; [70662,70663]"/>
  <match src="(: ( [98123,98124]" dest="(: ( [36685,36686]"/>
  <match src="parameter [3776,3785]" dest="parameter [4355,4364]"/>
  <match src="uint256: uint256 [65942,65949]" dest="uint256: uint256 [78044,78051]"/>
  <match src="parameter [36039,36052]" dest="parameter [50620,50633]"/>
  <match src="identifier: staged [100499,100505]" dest="identifier: staged [39061,39067]"/>
  <match src="internal: internal [45497,45505]" dest="internal: internal [14654,14662]"/>
  <match src="): ) [82758,82759]" dest="): ) [58403,58404]"/>
  <match src="identifier: votesFor [96607,96615]" dest="identifier: votesFor [35171,35179]"/>
  <match src="identifier: account [79896,79903]" dest="identifier: account [69012,69019]"/>
  <match src="function_body [67128,67686]" dest="function_body [65608,65977]"/>
  <match src="identifier: COUPON_EXPIRATION [47321,47338]" dest="identifier: COUPON_EXPIRATION [16478,16495]"/>
  <match src="identifier: incrementBalanceOfStaged [80285,80309]" dest="identifier: incrementBalanceOfStaged [69460,69484]"/>
  <match src="return_type_definition [54619,54633]" dest="return_type_definition [21709,21723]"/>
  <match src="identifier: stringify [32655,32664]" dest="identifier: stringify [47236,47245]"/>
  <match src=",: , [54291,54292]" dest=",: , [21381,21382]"/>
  <match src="identifier: mul [82101,82104]" dest="identifier: div [70541,70544]"/>
  <match src="identifier: div [8717,8720]" dest="identifier: div [9302,9305]"/>
  <match src="function_body [99138,99222]" dest="function_body [37700,37784]"/>
  <match src=".: . [104200,104201]" dest=".: . [42762,42763]"/>
  <match src=".: . [94938,94939]" dest=".: . [33502,33503]"/>
  <match src="(: ( [96766,96767]" dest="(: ( [35330,35331]"/>
  <match src=",: , [82837,82838]" dest=",: , [78810,78811]"/>
  <match src=".: . [11377,11378]" dest=".: . [11962,11963]"/>
  <match src="identifier: account [104124,104131]" dest="identifier: account [42686,42693]"/>
  <match src="{: { [96665,96666]" dest="{: { [35229,35230]"/>
  <match src="type_name [85530,85537]" dest="type_name [72336,72343]"/>
  <match src="): ) [102995,102996]" dest="): ) [41557,41558]"/>
  <match src=",: , [31191,31192]" dest=",: , [45772,45773]"/>
  <match src="): ) [7255,7256]" dest="): ) [7840,7841]"/>
  <match src="assignment_expression [101695,101752]" dest="assignment_expression [40257,40314]"/>
  <match src="identifier: z [37080,37081]" dest="identifier: z [51661,51662]"/>
  <match src="call_expression [93005,93013]" dest="call_expression [31569,31577]"/>
  <match src="identifier: bstr [36790,36794]" dest="identifier: bstr [51371,51375]"/>
  <match src="-: - [37690,37691]" dest="-: - [52271,52272]"/>
  <match src=".: . [83832,83833]" dest=".: . [58037,58038]"/>
  <match src="): ) [73546,73547]" dest="): ) [78911,78912]"/>
  <match src="): ) [94315,94316]" dest="): ) [32879,32880]"/>
  <match src=",: , [100516,100517]" dest=",: , [39078,39079]"/>
  <match src="return_statement [93656,93665]" dest="return_statement [32220,32229]"/>
  <match src="address: address [15288,15295]" dest="address: address [25079,25086]"/>
  <match src=",: , [105864,105865]" dest=",: , [67932,67933]"/>
  <match src="identifier: totalSupply [93338,93349]" dest="identifier: totalSupply [31902,31913]"/>
  <match src="return_statement [93399,93408]" dest="return_statement [31963,31972]"/>
  <match src="]: ] [35631,35632]" dest="]: ] [50212,50213]"/>
  <match src="return_statement [46678,46734]" dest="return_statement [15835,15891]"/>
  <match src="identifier: input [37981,37986]" dest="identifier: input [52562,52567]"/>
  <match src="(: ( [91842,91843]" dest="(: ( [30406,30407]"/>
  <match src="event_paramater [79729,79742]" dest="event_paramater [68804,68817]"/>
  <match src="visibility [32966,32974]" dest="visibility [47547,47555]"/>
  <match src=".: . [95672,95673]" dest=".: . [34236,34237]"/>
  <match src="identifier: payloadA [31618,31626]" dest="identifier: payloadA [46199,46207]"/>
  <match src="return_type_definition [95019,95036]" dest="return_type_definition [33583,33600]"/>
  <match src="): ) [3122,3123]" dest="): ) [3701,3702]"/>
  <match src="type_name [46490,46502]" dest="type_name [15647,15659]"/>
  <match src="): ) [34126,34127]" dest="): ) [48707,48708]"/>
  <match src="identifier: amount [98285,98291]" dest="identifier: amount [36847,36853]"/>
  <match src="number_literal: 0 [38287,38288]" dest="number_literal: 0 [52868,52869]"/>
  <match src="string_literal [49891,49910]" dest="string_literal [63494,63531]"/>
  <match src="call_argument [81624,81634]" dest="call_argument [71286,71296]"/>
  <match src="call_expression [82670,82683]" dest="call_expression [58317,58330]"/>
  <match src="uint8: uint8 [53385,53390]" dest="uint8: uint8 [20475,20480]"/>
  <match src="bool: bool [53839,53843]" dest="bool: bool [20929,20933]"/>
  <match src=",: , [81650,81651]" dest=",: , [71312,71313]"/>
  <match src="function_definition [50822,50859]" dest="function_definition [25981,26018]"/>
  <match src="): ) [96527,96528]" dest="): ) [35091,35092]"/>
  <match src="}: } [30236,30237]" dest="}: } [44817,44818]"/>
  <match src="): ) [31322,31323]" dest="): ) [45903,45904]"/>
  <match src="call_argument [33371,33390]" dest="call_argument [47952,47971]"/>
  <match src="): ) [37097,37098]" dest="): ) [51678,51679]"/>
  <match src="type_name [35658,35665]" dest="type_name [50239,50246]"/>
  <match src="function: function [93233,93241]" dest="function: function [31797,31805]"/>
  <match src="return_statement [35975,35995]" dest="return_statement [50556,50576]"/>
  <match src="identifier: totalSupply [102270,102281]" dest="identifier: totalSupply [40832,40843]"/>
  <match src="number_literal: 1 [37346,37347]" dest="number_literal: 1 [51927,51928]"/>
  <match src="function: function [14977,14985]" dest="function: function [24768,24776]"/>
  <match src="primitive_type [31585,31592]" dest="primitive_type [46166,46173]"/>
  <match src="): ) [92879,92880]" dest="): ) [31443,31444]"/>
  <match src="): ) [49203,49204]" dest="): ) [54924,54925]"/>
  <match src="member_expression [99849,99864]" dest="member_expression [38411,38426]"/>
  <match src="): ) [81642,81643]" dest="): ) [71304,71305]"/>
  <match src="call_argument [9910,9958]" dest="call_argument [10495,10543]"/>
  <match src="call_expression [105924,105953]" dest="call_expression [67992,68021]"/>
  <match src="identifier: value [81531,81536]" dest="identifier: value [70243,70248]"/>
  <match src="(: ( [83477,83478]" dest="(: ( [58659,58660]"/>
  <match src=",: , [9799,9800]" dest=",: , [10384,10385]"/>
  <match src="function_definition [100083,100323]" dest="function_definition [38645,38885]"/>
  <match src="call_expression [81978,82007]" dest="call_expression [77010,77031]"/>
  <match src="private: private [44074,44081]" dest="private: private [13231,13238]"/>
  <match src="primitive_type [86789,86796]" dest="primitive_type [27632,27639]"/>
  <match src="): ) [17683,17684]" dest="): ) [17998,17999]"/>
  <match src="binary_expression [37829,37839]" dest="binary_expression [52410,52420]"/>
  <match src="member_expression [93436,93477]" dest="member_expression [32000,32041]"/>
  <match src="primitive_type [98175,98179]" dest="primitive_type [36737,36741]"/>
  <match src="identifier: D256 [66555,66559]" dest="identifier: D256 [64886,64890]"/>
  <match src="call_argument [31797,31821]" dest="call_argument [46378,46402]"/>
  <match src="identifier: SafeMath [6802,6810]" dest="identifier: SafeMath [7387,7395]"/>
  <match src="identifier: RPAREN [32701,32707]" dest="identifier: RPAREN [47282,47288]"/>
  <match src="[: [ [96564,96565]" dest="[: [ [35128,35129]"/>
  <match src="(: ( [47173,47174]" dest="(: ( [16330,16331]"/>
  <match src="call_argument [103668,103674]" dest="call_argument [42230,42236]"/>
  <match src="primitive_type [53444,53448]" dest="primitive_type [20534,20538]"/>
  <match src="identifier: Constants [95789,95798]" dest="identifier: Constants [34353,34362]"/>
  <match src="member_expression [9942,9949]" dest="member_expression [10527,10534]"/>
  <match src="identifier: self [10434,10438]" dest="identifier: self [11019,11023]"/>
  <match src="uint256: uint256 [3810,3817]" dest="uint256: uint256 [4389,4396]"/>
  <match src="): ) [53488,53489]" dest="): ) [20578,20579]"/>
  <match src="=: = [99060,99061]" dest="=: = [37622,37623]"/>
  <match src="primitive_type [43976,43983]" dest="primitive_type [13133,13140]"/>
  <match src="visibility [25117,25124]" dest="visibility [58904,58911]"/>
  <match src="function_definition [100617,100997]" dest="function_definition [39179,39559]"/>
  <match src="type_name [79765,79772]" dest="type_name [68840,68847]"/>
  <match src="identifier: totalSupply [93478,93489]" dest="identifier: totalSupply [32042,32053]"/>
  <match src="return: return [93429,93435]" dest="return: return [31993,31999]"/>
  <match src="expression_statement [82263,82344]" dest="expression_statement [62212,62254]"/>
  <match src="identifier: value [8067,8072]" dest="identifier: value [8652,8657]"/>
  <match src="identifier: FOUR_BIT_MASK [37852,37865]" dest="identifier: FOUR_BIT_MASK [52433,52446]"/>
  <match src="address: address [64438,64445]" dest="address: address [75962,75969]"/>
  <match src="return_statement [92455,92484]" dest="return_statement [31019,31048]"/>
  <match src="return: return [96264,96270]" dest="return: return [34828,34834]"/>
  <match src="function_body [68238,68272]" dest="function_body [61652,61745]"/>
  <match src="identifier: balance [99978,99985]" dest="identifier: balance [38540,38547]"/>
  <match src="primitive_type [77908,77915]" dest="primitive_type [76993,77000]"/>
  <match src="call_argument [100048,100058]" dest="call_argument [38610,38620]"/>
  <match src=",: , [53807,53808]" dest=",: , [20897,20898]"/>
  <match src="type_name [8410,8417]" dest="type_name [8995,9002]"/>
  <match src="primitive_type [101851,101857]" dest="primitive_type [40413,40419]"/>
  <match src="returns: returns [93287,93294]" dest="returns: returns [31851,31858]"/>
  <match src="type_name [94992,94999]" dest="type_name [33556,33563]"/>
  <match src="type_name [95174,95181]" dest="type_name [33738,33745]"/>
  <match src="call_argument [65253,65257]" dest="call_argument [79329,79333]"/>
  <match src="state_mutability [93282,93286]" dest="state_mutability [31846,31850]"/>
  <match src="(: ( [83504,83505]" dest="(: ( [78639,78640]"/>
  <match src="identifier: zero [7076,7080]" dest="identifier: zero [7661,7665]"/>
  <match src="}: } [23151,23152]" dest="}: } [55529,55530]"/>
  <match src="address: address [100048,100055]" dest="address: address [38610,38617]"/>
  <match src="call_argument [23084,23090]" dest="call_argument [58976,58982]"/>
  <match src="identifier: value [8311,8316]" dest="identifier: value [8896,8901]"/>
  <match src="expression_statement [52158,52331]" dest="expression_statement [63703,63797]"/>
  <match src="identifier: result [37822,37828]" dest="identifier: result [52403,52409]"/>
  <match src="visibility [8814,8822]" dest="visibility [9399,9407]"/>
  <match src="type_name [55156,55160]" dest="type_name [22246,22250]"/>
  <match src="identifier: amount [98868,98874]" dest="identifier: amount [37430,37436]"/>
  <match src="parameter [91436,91449]" dest="parameter [30000,30013]"/>
  <match src="member_expression [81822,81834]" dest="member_expression [79029,79041]"/>
  <match src="type_name [62977,62989]" dest="type_name [26836,26848]"/>
  <match src="call_argument [50113,50117]" dest="call_argument [69183,69187]"/>
  <match src="): ) [88136,88137]" dest="): ) [28979,28980]"/>
  <match src="state_variable_declaration [29660,29688]" dest="state_variable_declaration [44241,44269]"/>
  <match src="identifier: length [36431,36437]" dest="identifier: length [51012,51018]"/>
  <match src="pure: pure [8237,8241]" dest="pure: pure [8822,8826]"/>
  <match src="primitive_type [34430,34436]" dest="primitive_type [49011,49017]"/>
  <match src="address: address [103169,103176]" dest="address: address [41731,41738]"/>
  <match src="): ) [73167,73168]" dest="): ) [79695,79696]"/>
  <match src="primitive_type [54437,54441]" dest="primitive_type [21527,21531]"/>
  <match src=",: , [33233,33234]" dest=",: , [47814,47815]"/>
  <match src="call_expression [103418,103466]" dest="call_expression [41980,42028]"/>
  <match src="call_expression [8706,8723]" dest="call_expression [9291,9308]"/>
  <match src="call_expression [31880,31906]" dest="call_expression [46461,46487]"/>
  <match src="internal: internal [8814,8822]" dest="internal: internal [9399,9407]"/>
  <match src="identifier: one [65817,65820]" dest="identifier: one [66558,66561]"/>
  <match src="returns: returns [10528,10535]" dest="returns: returns [11113,11120]"/>
  <match src="uint256: uint256 [86859,86866]" dest="uint256: uint256 [27702,27709]"/>
  <match src="function_definition [45690,45918]" dest="function_definition [14847,15075]"/>
  <match src="member_expression [105358,105372]" dest="member_expression [67426,67440]"/>
  <match src="function: function [53853,53861]" dest="function: function [20943,20951]"/>
  <match src="return: return [94515,94521]" dest="return: return [33079,33085]"/>
  <match src="return: return [46954,46960]" dest="return: return [16111,16117]"/>
  <match src="(: ( [84432,84433]" dest="(: ( [76858,76859]"/>
  <match src="): ) [32074,32075]" dest="): ) [46655,46656]"/>
  <match src="identifier: candidates [96979,96989]" dest="identifier: candidates [35543,35553]"/>
  <match src="(: ( [46105,46106]" dest="(: ( [15262,15263]"/>
  <match src="call_argument [82239,82251]" dest="call_argument [62302,62307]"/>
  <match src="==: == [10580,10582]" dest="==: == [11165,11167]"/>
  <match src="type_name [22836,22843]" dest="type_name [55349,55356]"/>
  <match src="identifier: totalBonded [82670,82681]" dest="identifier: totalBonded [58317,58328]"/>
  <match src="member_expression [102773,102787]" dest="member_expression [41335,41349]"/>
  <match src="identifier: Decimal [64370,64377]" dest="identifier: Decimal [64563,64570]"/>
  <match src="bool: bool [98175,98179]" dest="bool: bool [36737,36741]"/>
  <match src="identifier: amount [103459,103465]" dest="identifier: amount [42021,42027]"/>
  <match src="identifier: spender [54091,54098]" dest="identifier: spender [21181,21188]"/>
  <match src="(: ( [82517,82518]" dest="(: ( [70828,70829]"/>
  <match src=",: , [99490,99491]" dest=",: , [38052,38053]"/>
  <match src="identifier: require [4587,4594]" dest="identifier: require [5166,5173]"/>
  <match src="address: address [86894,86901]" dest="address: address [27737,27744]"/>
  <match src="library: library [1186,1193]" dest="library: library [1765,1772]"/>
  <match src="parameter [14999,15013]" dest="parameter [24790,24804]"/>
  <match src="identifier: amount [103351,103357]" dest="identifier: amount [41913,41919]"/>
  <match src="type_name [36401,36406]" dest="type_name [50982,50987]"/>
  <match src="identifier: dollar [92092,92098]" dest="identifier: dollar [30656,30662]"/>
  <match src=".: . [11562,11563]" dest=".: . [12147,12148]"/>
  <match src=".: . [92584,92585]" dest=".: . [31148,31149]"/>
  <match src="identifier: sub [7928,7931]" dest="identifier: sub [8513,8516]"/>
  <match src="return_type_definition [92319,92336]" dest="return_type_definition [30883,30900]"/>
  <match src="function: function [3752,3760]" dest="function: function [4331,4339]"/>
  <match src=".: . [9293,9294]" dest=".: . [9878,9879]"/>
  <match src="parameter [99280,99300]" dest="parameter [37842,37862]"/>
  <match src="identifier: initialized [104439,104450]" dest="identifier: initialized [43001,43012]"/>
  <match src="type_name [30853,30857]" dest="type_name [45434,45438]"/>
  <match src="call_argument [8095,8099]" dest="call_argument [8680,8684]"/>
  <match src="(: ( [9291,9292]" dest="(: ( [9876,9877]"/>
  <match src="identifier: _state [92570,92576]" dest="identifier: _state [31134,31140]"/>
  <match src="return_type_definition [93287,93304]" dest="return_type_definition [31851,31868]"/>
  <match src="uint256: uint256 [17538,17545]" dest="uint256: uint256 [80483,80490]"/>
  <match src="type_name [95317,95324]" dest="type_name [33881,33888]"/>
  <match src="state_mutability [38994,38998]" dest="state_mutability [53575,53579]"/>
  <match src="type_name [38216,38221]" dest="type_name [52797,52802]"/>
  <match src="state_mutability [47280,47284]" dest="state_mutability [16437,16441]"/>
  <match src="?: ? [94004,94005]" dest="?: ? [32568,32569]"/>
  <match src="external: external [55023,55031]" dest="external: external [22113,22121]"/>
  <match src="(: ( [8326,8327]" dest="(: ( [8911,8912]"/>
  <match src="state_mutability [45970,45974]" dest="state_mutability [15127,15131]"/>
  <match src="identifier: spender [23633,23640]" dest="identifier: spender [62891,62898]"/>
  <match src=".: . [92468,92469]" dest=".: . [31032,31033]"/>
  <match src=",: , [82687,82688]" dest=",: , [58334,58335]"/>
  <match src="inheritance_specifier [106586,106596]" dest="inheritance_specifier [75795,75805]"/>
  <match src="identifier: payloadC [32945,32953]" dest="identifier: payloadC [47526,47534]"/>
  <match src="parameter [91747,91754]" dest="parameter [30311,30318]"/>
  <match src="parameter [53513,53517]" dest="parameter [20603,20607]"/>
  <match src="]: ] [38826,38827]" dest="]: ] [53407,53408]"/>
  <match src="public: public [91626,91632]" dest="public: public [30190,30196]"/>
  <match src="!=: != [52127,52129]" dest="!=: != [63672,63674]"/>
  <match src=":: : [9708,9709]" dest=":: : [10293,10294]"/>
  <match src="visibility [92522,92528]" dest="visibility [31086,31092]"/>
  <match src="if: if [93831,93833]" dest="if: if [32395,32397]"/>
  <match src="view: view [85499,85503]" dest="view: view [72305,72309]"/>
  <match src="event: event [54244,54249]" dest="event: event [21334,21339]"/>
  <match src="identifier: amount [100692,100698]" dest="identifier: amount [39254,39260]"/>
  <match src="identifier: value [79856,79861]" dest="identifier: value [60443,60448]"/>
  <match src="memory: memory [11444,11450]" dest="memory: memory [12029,12035]"/>
  <match src="internal: internal [98898,98906]" dest="internal: internal [37460,37468]"/>
  <match src="type_name [87968,87980]" dest="type_name [28811,28823]"/>
  <match src=".: . [83351,83352]" dest=".: . [62748,62749]"/>
  <match src="]: ] [101914,101915]" dest="]: ] [40476,40477]"/>
  <match src="(: ( [92304,92305]" dest="(: ( [30868,30869]"/>
  <match src="&quot;: &quot; [81538,81539]" dest="&quot;: &quot; [70250,70251]"/>
  <match src="identifier: reason [30904,30910]" dest="identifier: reason [45485,45491]"/>
  <match src="member_expression [99947,99968]" dest="member_expression [38509,38530]"/>
  <match src="type_name [64701,64708]" dest="type_name [80506,80513]"/>
  <match src="(: ( [55269,55270]" dest="(: ( [22359,22360]"/>
  <match src="bool: bool [14653,14657]" dest="bool: bool [24444,24448]"/>
  <match src="view: view [97061,97065]" dest="view: view [35625,35629]"/>
  <match src="(: ( [55072,55073]" dest="(: ( [22162,22163]"/>
  <match src="): ) [34845,34846]" dest="): ) [49426,49427]"/>
  <match src="public: public [96223,96229]" dest="public: public [34787,34793]"/>
  <match src="): ) [81281,81282]" dest="): ) [70046,70047]"/>
  <match src="): ) [79933,79934]" dest="): ) [69074,69075]"/>
  <match src="type_cast_expression [39110,39141]" dest="type_cast_expression [53691,53722]"/>
  <match src="user_defined_type [7396,7400]" dest="user_defined_type [7981,7985]"/>
  <match src=".: . [101262,101263]" dest=".: . [39824,39825]"/>
  <match src="(: ( [50068,50069]" dest="(: ( [54986,54987]"/>
  <match src="type_name [8383,8387]" dest="type_name [8968,8972]"/>
  <match src="array_access [103988,104016]" dest="array_access [42550,42578]"/>
  <match src=",: , [11221,11222]" dest=",: , [11806,11807]"/>
  <match src="contract: contract [17329,17337]" dest="contract: contract [59775,59783]"/>
  <match src="internal: internal [8223,8231]" dest="internal: internal [8808,8816]"/>
  <match src="parameter [76559,76573]" dest="parameter [58255,58269]"/>
  <match src="identifier: sub [100506,100509]" dest="identifier: sub [39068,39071]"/>
  <match src="state_mutability [7225,7229]" dest="state_mutability [7810,7814]"/>
  <match src="primitive_type [44674,44681]" dest="primitive_type [13831,13838]"/>
  <match src="public: public [92957,92963]" dest="public: public [31521,31527]"/>
  <match src="binary_expression [3183,3188]" dest="binary_expression [3762,3767]"/>
  <match src="state_mutability [13220,13224]" dest="state_mutability [23011,23015]"/>
  <match src="state_mutability [56573,56577]" dest="state_mutability [18230,18234]"/>
  <match src="member_expression [92570,92591]" dest="member_expression [31134,31155]"/>
  <match src="function_body [45634,45682]" dest="function_body [14791,14839]"/>
  <match src="): ) [80327,80328]" dest="): ) [69502,69503]"/>
  <match src="uint256: uint256 [11232,11239]" dest="uint256: uint256 [11817,11824]"/>
  <match src=",: , [98139,98140]" dest=",: , [36701,36702]"/>
  <match src=",: , [98674,98675]" dest=",: , [37236,37237]"/>
  <match src="identifier: candidates [103024,103034]" dest="identifier: candidates [41586,41596]"/>
  <match src="identifier: msg [83348,83351]" dest="identifier: msg [62745,62748]"/>
  <match src="primitive_type [6877,6884]" dest="primitive_type [7462,7469]"/>
  <match src="identifier: spender [101650,101657]" dest="identifier: spender [40212,40219]"/>
  <match src="primitive_type [79994,80001]" dest="primitive_type [68937,68944]"/>
  <match src="mapping: mapping [88106,88113]" dest="mapping: mapping [28949,28956]"/>
  <match src="identifier: getCouponExpiration [47249,47268]" dest="identifier: getCouponExpiration [16406,16425]"/>
  <match src="member_expression [102748,102770]" dest="member_expression [41310,41332]"/>
  <match src="=: = [38686,38687]" dest="=: = [53267,53268]"/>
  <match src="identifier: denominator [11268,11279]" dest="identifier: denominator [11853,11864]"/>
  <match src="primitive_type [80051,80058]" dest="primitive_type [76178,76185]"/>
  <match src="state_mutability [92964,92968]" dest="state_mutability [31528,31532]"/>
  <match src="(: ( [95482,95483]" dest="(: ( [34046,34047]"/>
  <match src="function: function [10600,10608]" dest="function: function [11185,11193]"/>
  <match src="primitive_type [53797,53804]" dest="primitive_type [20887,20894]"/>
  <match src="call_argument [84471,84475]" dest="call_argument [76943,76947]"/>
  <match src="variable_declaration_statement [94433,94503]" dest="variable_declaration_statement [32997,33067]"/>
  <match src="identifier: ASCII_ZERO [38303,38313]" dest="identifier: ASCII_ZERO [52884,52894]"/>
  <match src="identifier: z [38872,38873]" dest="identifier: z [53453,53454]"/>
  <match src="function_body [96665,96738]" dest="function_body [35229,35302]"/>
  <match src="identifier: staged [87844,87850]" dest="identifier: staged [28687,28693]"/>
  <match src="user_defined_type [8574,8578]" dest="user_defined_type [9159,9163]"/>
  <match src="function_definition [10893,10997]" dest="function_definition [11478,11582]"/>
  <match src="identifier: D256 [62985,62989]" dest="identifier: D256 [26844,26848]"/>
  <match src="expression_statement [89802,89839]" dest="expression_statement [74435,74472]"/>
  <match src="memory: memory [2412,2418]" dest="memory: memory [2991,2997]"/>
  <match src="for_statement [36549,36916]" dest="for_statement [51130,51497]"/>
  <match src="call_argument [83954,83984]" dest="call_argument [58183,58206]"/>
  <match src="identifier: amount [24292,24298]" dest="identifier: amount [18059,18065]"/>
  <match src="identifier: add [1450,1453]" dest="identifier: add [2029,2032]"/>
  <match src="identifier: D256 [47752,47756]" dest="identifier: D256 [16909,16913]"/>
  <match src="number_literal: 1 [38333,38334]" dest="number_literal: 1 [52914,52915]"/>
  <match src=".: . [102419,102420]" dest=".: . [40981,40982]"/>
  <match src="primitive_type [5951,5958]" dest="primitive_type [6530,6537]"/>
  <match src="type_name [54412,54416]" dest="type_name [21502,21506]"/>
  <match src=".: . [103655,103656]" dest=".: . [42217,42218]"/>
  <match src="visibility [53298,53306]" dest="visibility [20388,20396]"/>
  <match src="(: ( [93584,93585]" dest="(: ( [32148,32149]"/>
  <match src="): ) [31683,31684]" dest="): ) [46264,46265]"/>
  <match src=",: , [101816,101817]" dest=",: , [40378,40379]"/>
  <match src="member_expression [100824,100837]" dest="member_expression [39386,39399]"/>
  <match src="(: ( [89943,89944]" dest="(: ( [74576,74577]"/>
  <match src="identifier: notPaused [80199,80208]" dest="identifier: onlyFrozenOrLocked [69352,69370]"/>
  <match src="user_defined_type [106579,106584]" dest="user_defined_type [80385,80390]"/>
  <match src="internal: internal [102576,102584]" dest="internal: internal [41138,41146]"/>
  <match src=".: . [100176,100177]" dest=".: . [38738,38739]"/>
  <match src="identifier: Vote [87578,87582]" dest="identifier: Vote [28421,28425]"/>
  <match src="): ) [95151,95152]" dest="): ) [33715,33716]"/>
  <match src="): ) [80446,80447]" dest="): ) [69594,69595]"/>
  <match src="{: { [85083,85084]" dest="{: { [71889,71890]"/>
  <match src="number_literal: 72 [44601,44603]" dest="number_literal: 72 [13758,13760]"/>
  <match src="identifier: value [9282,9287]" dest="identifier: value [9867,9872]"/>
  <match src="parameter [55192,55202]" dest="parameter [22282,22292]"/>
  <match src="bytes32: bytes32 [64391,64398]" dest="bytes32: bytes32 [59855,59862]"/>
  <match src="function: function [95404,95412]" dest="function: function [33968,33976]"/>
  <match src=".: . [49819,49820]" dest=".: . [61977,61978]"/>
  <match src="string_literal [3847,3875]" dest="string_literal [4426,4454]"/>
  <match src="identifier: getBootstrappingPeriod [46058,46080]" dest="identifier: getBootstrappingPeriod [15215,15237]"/>
  <match src="): ) [46568,46569]" dest="): ) [15725,15726]"/>
  <match src="variable_declaration_statement [1519,1537]" dest="variable_declaration_statement [2098,2116]"/>
  <match src="(: ( [81142,81143]" dest="(: ( [60991,60992]"/>
  <match src="expression_statement [102748,102828]" dest="expression_statement [41310,41390]"/>
  <match src="uint256: uint256 [100669,100676]" dest="uint256: uint256 [39231,39238]"/>
  <match src=",: , [79992,79993]" dest=",: , [68935,68936]"/>
  <match src="assignment_expression [104357,104403]" dest="assignment_expression [42919,42965]"/>
  <match src="uint256: uint256 [95174,95181]" dest="uint256: uint256 [33738,33745]"/>
  <match src="(: ( [47293,47294]" dest="(: ( [16450,16451]"/>
  <match src="): ) [47631,47632]" dest="): ) [16788,16789]"/>
  <match src=",: , [80266,80267]" dest=",: , [69441,69442]"/>
  <match src="parameter [96068,96085]" dest="parameter [34632,34649]"/>
  <match src="call_argument [90030,90047]" dest="call_argument [74663,74680]"/>
  <match src="): ) [33232,33233]" dest="): ) [47813,47814]"/>
  <match src="function_body [8674,8734]" dest="function_body [9259,9319]"/>
  <match src="external: external [63705,63713]" dest="external: external [76292,76300]"/>
  <match src="view: view [13220,13224]" dest="view: view [23011,23015]"/>
  <match src="type_name [9998,10002]" dest="type_name [10583,10587]"/>
  <match src="type_name [3776,3783]" dest="type_name [4355,4362]"/>
  <match src="internal: internal [11042,11050]" dest="internal: internal [11627,11635]"/>
  <match src="identifier: amount [75125,75131]" dest="identifier: amount [63069,63075]"/>
  <match src="primitive_type [96108,96115]" dest="primitive_type [34672,34679]"/>
  <match src="identifier: mul [2822,2825]" dest="identifier: mul [3401,3404]"/>
  <match src="): ) [10266,10267]" dest="): ) [10851,10852]"/>
  <match src="type_name [52493,52497]" dest="type_name [60322,60329]"/>
  <match src="member_expression [101695,101710]" dest="member_expression [40257,40272]"/>
  <match src="identifier: totalBonded [83296,83307]" dest="identifier: totalBonded [71034,71045]"/>
  <match src="parameter [53809,53819]" dest="parameter [20899,20909]"/>
  <match src="return: return [10703,10709]" dest="return: return [11288,11294]"/>
  <match src="function: function [95878,95886]" dest="function: function [34442,34450]"/>
  <match src="identifier: candidate [96009,96018]" dest="identifier: candidate [34573,34582]"/>
  <match src="address: address [53707,53714]" dest="address: address [20797,20804]"/>
  <match src="identifier: size [85538,85542]" dest="identifier: size [72344,72348]"/>
  <match src="identifier: account [51884,51891]" dest="identifier: account [54647,54654]"/>
  <match src="identifier: newLock [104249,104256]" dest="identifier: newLock [42811,42818]"/>
  <match src="variable_declaration_statement [81955,82040]" dest="variable_declaration_statement [76993,77032]"/>
  <match src="returns: returns [13225,13232]" dest="returns: returns [23016,23023]"/>
  <match src="address: address [78384,78391]" dest="address: address [78703,78710]"/>
  <match src="binary_expression [38674,38684]" dest="binary_expression [53255,53265]"/>
  <match src="private: private [37010,37017]" dest="private: private [51591,51598]"/>
  <match src="primitive_type [2383,2390]" dest="primitive_type [2962,2969]"/>
  <match src="identifier: balanceOfPhantom [82072,82088]" dest="identifier: balanceOf [70545,70554]"/>
  <match src="(: ( [102961,102962]" dest="(: ( [41523,41524]"/>
  <match src="): ) [3817,3818]" dest="): ) [4396,4397]"/>
  <match src=",: , [10014,10015]" dest=",: , [10599,10600]"/>
  <match src="): ) [94638,94639]" dest="): ) [33202,33203]"/>
  <match src="call_expression [82506,82513]" dest="call_expression [70817,70824]"/>
  <match src="revert: revert [33027,33033]" dest="revert: revert [47608,47614]"/>
  <match src="external: external [98293,98301]" dest="external: external [36855,36863]"/>
  <match src="state_mutability [93145,93149]" dest="state_mutability [31709,31713]"/>
  <match src="address: address [64569,64576]" dest="address: address [76095,76102]"/>
  <match src="): ) [93012,93013]" dest="): ) [31576,31577]"/>
  <match src="identifier: staged [86797,86803]" dest="identifier: staged [27640,27646]"/>
  <match src="identifier: abi [32365,32368]" dest="identifier: abi [46946,46949]"/>
  <match src="parameter [7121,7132]" dest="parameter [7706,7717]"/>
  <match src="type_name [1955,1962]" dest="type_name [2534,2541]"/>
  <match src="): ) [23824,23825]" dest="): ) [63011,63012]"/>
  <match src="member_expression [101172,101204]" dest="member_expression [39734,39766]"/>
  <match src="pure: pure [38012,38016]" dest="pure: pure [52593,52597]"/>
  <match src="bool: bool [66724,66728]" dest="bool: bool [66357,66361]"/>
  <match src="): ) [53210,53211]" dest="): ) [20300,20301]"/>
  <match src=",: , [30278,30279]" dest=",: , [44859,44860]"/>
  <match src="{: { [39088,39089]" dest="{: { [53669,53670]"/>
  <match src=",: , [33468,33469]" dest=",: , [48049,48050]"/>
  <match src="}: } [93051,93052]" dest="}: } [31615,31616]"/>
  <match src="parameter [47705,47724]" dest="parameter [16862,16881]"/>
  <match src="event_paramater [79994,80007]" dest="event_paramater [68937,68950]"/>
  <match src="identifier: errorMessage [4602,4614]" dest="identifier: errorMessage [5181,5193]"/>
  <match src="(: ( [46199,46200]" dest="(: ( [15356,15357]"/>
  <match src="if: if [31012,31014]" dest="if: if [45593,45595]"/>
  <match src="function_definition [92711,92819]" dest="function_definition [31275,31383]"/>
  <match src="state_mutability [29908,29912]" dest="state_mutability [44489,44493]"/>
  <match src="member_expression [32365,32381]" dest="member_expression [46946,46962]"/>
  <match src="returns: returns [53312,53319]" dest="returns: returns [20402,20409]"/>
  <match src=".: . [80856,80857]" dest=".: . [70606,70607]"/>
  <match src="call_expression [106981,106989]" dest="call_expression [54633,54641]"/>
  <match src="assignment_expression [103379,103466]" dest="assignment_expression [41941,42028]"/>
  <match src="type_name [54873,54880]" dest="type_name [21963,21970]"/>
  <match src="primitive_type [64541,64548]" dest="primitive_type [76203,76210]"/>
  <match src="number_literal: 10 [36829,36831]" dest="number_literal: 10 [51410,51412]"/>
  <match src="call_argument [78198,78208]" dest="call_argument [77721,77731]"/>
  <match src="visibility [83616,83624]" dest="visibility [62515,62523]"/>
  <match src="parameter [30921,30937]" dest="parameter [45502,45518]"/>
  <match src="primitive_type [103546,103552]" dest="primitive_type [42108,42114]"/>
  <match src="variable_declaration [37203,37222]" dest="variable_declaration [51784,51803]"/>
  <match src="primitive_type [8410,8417]" dest="primitive_type [8995,9002]"/>
  <match src="): ) [45600,45601]" dest="): ) [14757,14758]"/>
  <match src="visibility [38981,38988]" dest="visibility [53562,53569]"/>
  <match src="primitive_type [83870,83877]" dest="primitive_type [58776,58783]"/>
  <match src="call_argument [7617,7650]" dest="call_argument [8202,8235]"/>
  <match src="variable_declaration [81169,81187]" dest="variable_declaration [61142,61165]"/>
  <match src="identifier: a [4435,4436]" dest="identifier: a [5014,5015]"/>
  <match src="): ) [7984,7985]" dest="): ) [8569,8570]"/>
  <match src="type_name [9594,9600]" dest="type_name [10179,10185]"/>
  <match src="variable_declaration [104172,104191]" dest="variable_declaration [42734,42753]"/>
  <match src="function: function [102299,102307]" dest="function: function [40861,40869]"/>
  <match src="=: = [29450,29451]" dest="=: = [44031,44032]"/>
  <match src="type_name [9227,9231]" dest="type_name [9812,9816]"/>
  <match src="type_name [45520,45527]" dest="type_name [14677,14684]"/>
  <match src="function_body [10102,10182]" dest="function_body [10687,10767]"/>
  <match src="type_cast_expression [38343,38364]" dest="type_cast_expression [52924,52945]"/>
  <match src="call_argument [38343,38364]" dest="call_argument [52924,52945]"/>
  <match src=".: . [100566,100567]" dest=".: . [39128,39129]"/>
  <match src="(: ( [1554,1555]" dest="(: ( [2133,2134]"/>
  <match src="return_type_definition [2447,2464]" dest="return_type_definition [3026,3043]"/>
  <match src="external: external [91981,91989]" dest="external: external [30545,30553]"/>
  <match src="call_argument [37316,37326]" dest="call_argument [51897,51907]"/>
  <match src="member_expression [103627,103644]" dest="member_expression [42189,42206]"/>
  <match src="comment: /**      * Epoch      */ [94236,94262]" dest="comment: /**      * Epoch      */ [32800,32826]"/>
  <match src="internal: internal [101873,101881]" dest="internal: internal [40435,40443]"/>
  <match src="uint256: uint256 [75207,75214]" dest="uint256: uint256 [55560,55567]"/>
  <match src="state_variable_declaration [44556,44604]" dest="state_variable_declaration [13713,13761]"/>
  <match src="primitive_type [21520,21527]" dest="primitive_type [63282,63289]"/>
  <match src="type_name [94145,94152]" dest="type_name [32709,32716]"/>
  <match src="using: using [74443,74448]" dest="using: using [80434,80439]"/>
  <match src="return: return [45774,45780]" dest="return: return [14931,14937]"/>
  <match src="state_mutability [9409,9413]" dest="state_mutability [9994,9998]"/>
  <match src="parameter [103727,103744]" dest="parameter [42289,42306]"/>
  <match src="(: ( [92434,92435]" dest="(: ( [30998,30999]"/>
  <match src="(: ( [80240,80241]" dest="(: ( [69415,69416]"/>
  <match src="identifier: Candidate [103188,103197]" dest="identifier: Candidate [41750,41759]"/>
  <match src="identifier: token1 [52471,52477]" dest="identifier: to [60318,60320]"/>
  <match src=",: , [50898,50899]" dest=",: , [26057,26058]"/>
  <match src="identifier: Provider [87662,87670]" dest="identifier: Provider [28505,28513]"/>
  <match src="uint256: uint256 [64671,64678]" dest="uint256: uint256 [80521,80528]"/>
  <match src="): ) [71975,71976]" dest="): ) [58009,58010]"/>
  <match src="address: address [63049,63056]" dest="address: address [26908,26915]"/>
  <match src="identifier: z [38069,38070]" dest="identifier: z [52650,52651]"/>
  <match src="function: function [101439,101447]" dest="function: function [40001,40009]"/>
  <match src="function_definition [94568,94817]" dest="function_definition [33132,33381]"/>
  <match src="identifier: i [38505,38506]" dest="identifier: i [53086,53087]"/>
  <match src="number_literal: 0 [99710,99711]" dest="number_literal: 0 [38272,38273]"/>
  <match src="member_expression [11356,11366]" dest="member_expression [11941,11951]"/>
  <match src="}: } [98823,98824]" dest="}: } [37385,37386]"/>
  <match src=".: . [90317,90318]" dest=".: . [74950,74951]"/>
  <match src="}: } [9751,9752]" dest="}: } [10336,10337]"/>
  <match src="identifier: bonded [98472,98478]" dest="identifier: bonded [37034,37040]"/>
  <match src="identifier: b [8721,8722]" dest="identifier: b [9306,9307]"/>
  <match src="identifier: transfer [53698,53706]" dest="identifier: transfer [20788,20796]"/>
  <match src=",: , [81536,81537]" dest=",: , [70248,70249]"/>
  <match src="type_name [8656,8660]" dest="type_name [9241,9245]"/>
  <match src="if_statement [32285,32776]" dest="if_statement [46866,47357]"/>
  <match src=".: . [96553,96554]" dest=".: . [35117,35118]"/>
  <match src="expression_statement [101242,101346]" dest="expression_statement [39804,39908]"/>
  <match src="call_expression [65179,65301]" dest="call_expression [79243,79373]"/>
  <match src="primitive_type [55126,55133]" dest="primitive_type [22216,22223]"/>
  <match src="identifier: balance [98770,98777]" dest="identifier: balance [37332,37339]"/>
  <match src="address: address [13194,13201]" dest="address: address [22985,22992]"/>
  <match src="identifier: value [79798,79803]" dest="identifier: value [68873,68878]"/>
  <match src="identifier: epochs [102245,102251]" dest="identifier: epochs [40807,40813]"/>
  <match src="identifier: temp [9045,9049]" dest="identifier: temp [9630,9634]"/>
  <match src="function_body [10406,10455]" dest="function_body [10991,11040]"/>
  <match src="): ) [90001,90002]" dest="): ) [74634,74635]"/>
  <match src="type_name [91866,91873]" dest="type_name [30430,30437]"/>
  <match src="bytes32: bytes32 [34261,34268]" dest="bytes32: bytes32 [48842,48849]"/>
  <match src="function: function [53984,53992]" dest="function: function [21074,21082]"/>
  <match src="primitive_type [30873,30880]" dest="primitive_type [45454,45461]"/>
  <match src=",: , [32674,32675]" dest=",: , [47255,47256]"/>
  <match src="binary_expression [8880,8886]" dest="binary_expression [9465,9471]"/>
  <match src="function: function [68187,68195]" dest="function: function [61583,61591]"/>
  <match src="identifier: candidates [96416,96426]" dest="identifier: candidates [34980,34990]"/>
  <match src="identifier: sub [98960,98963]" dest="identifier: sub [37522,37525]"/>
  <match src="): ) [9743,9744]" dest="): ) [10328,10329]"/>
  <match src="expression_statement [90282,90412]" dest="expression_statement [74915,75045]"/>
  <match src=".: . [79520,79521]" dest=".: . [62644,62645]"/>
  <match src="state_mutability [94892,94896]" dest="state_mutability [33456,33460]"/>
  <match src="call_expression [83380,83450]" dest="call_expression [63025,63076]"/>
  <match src="(: ( [53999,54000]" dest="(: ( [21089,21090]"/>
  <match src=".: . [103810,103811]" dest=".: . [42372,42373]"/>
  <match src="primitive_type [33052,33058]" dest="primitive_type [47633,47639]"/>
  <match src="(: ( [33097,33098]" dest="(: ( [47678,47679]"/>
  <match src="member_expression [100720,100735]" dest="member_expression [39282,39297]"/>
  <match src="}: } [90543,90544]" dest="}: } [75176,75177]"/>
  <match src="primitive_type [63687,63694]" dest="primitive_type [76252,76259]"/>
  <match src="visibility [17510,17517]" dest="visibility [18222,18229]"/>
  <match src="type_name [92435,92442]" dest="type_name [30999,31006]"/>
  <match src="visibility [45010,45017]" dest="visibility [14167,14174]"/>
  <match src=".: . [47597,47598]" dest=".: . [16754,16755]"/>
  <match src="): ) [53448,53449]" dest="): ) [20538,20539]"/>
  <match src="identifier: self [9795,9799]" dest="identifier: self [10380,10384]"/>
  <match src="visibility [83731,83739]" dest="visibility [63244,63252]"/>
  <match src="identifier: z [37885,37886]" dest="identifier: z [52466,52467]"/>
  <match src="type_cast_expression [39215,39249]" dest="type_cast_expression [53796,53830]"/>
  <match src="return_statement [95984,96035]" dest="return_statement [34548,34599]"/>
  <match src="type_name [77746,77753]" dest="type_name [55943,55950]"/>
  <match src="type_name [96948,96952]" dest="type_name [35512,35516]"/>
  <match src="function_definition [80135,80407]" dest="function_definition [69311,69555]"/>
  <match src="(: ( [55020,55021]" dest="(: ( [22110,22111]"/>
  <match src="type_cast_expression [33052,33543]" dest="type_cast_expression [47633,48124]"/>
  <match src="identifier: totalSupply [93014,93025]" dest="identifier: totalSupply [31578,31589]"/>
  <match src="string_literal [21616,21653]" dest="string_literal [63386,63431]"/>
  <match src="&quot;: &quot; [57391,57392]" dest="&quot;: &quot; [71141,71142]"/>
  <match src="call_argument [27883,27933]" dest="call_argument [77285,77314]"/>
  <match src="}: } [10314,10315]" dest="}: } [10899,10900]"/>
  <match src="number_literal: 0 [36140,36141]" dest="number_literal: 0 [50721,50722]"/>
  <match src="[: [ [95214,95215]" dest="[: [ [33778,33779]"/>
  <match src="yul_assignment [97169,97188]" dest="yul_assignment [35733,35752]"/>
  <match src="}: } [105974,105975]" dest="}: } [68042,68043]"/>
  <match src="identifier: _state [104026,104032]" dest="identifier: _state [42588,42594]"/>
  <match src="): ) [11111,11112]" dest="): ) [11696,11697]"/>
  <match src="address: address [77572,77579]" dest="address: address [60387,60394]"/>
  <match src="identifier: coupons [95531,95538]" dest="identifier: coupons [34095,34102]"/>
  <match src="]: ] [96033,96034]" dest="]: ] [34597,34598]"/>
  <match src="function: function [9975,9983]" dest="function: function [10560,10568]"/>
  <match src="}: } [37935,37936]" dest="}: } [52516,52517]"/>
  <match src="number_literal: 0 [92031,92032]" dest="number_literal: 0 [30595,30596]"/>
  <match src="call_argument [9062,9066]" dest="call_argument [9647,9651]"/>
  <match src="==: == [3213,3215]" dest="==: == [3792,3794]"/>
  <match src="identifier: totalBonded [72887,72898]" dest="identifier: totalBonded [58094,58105]"/>
  <match src="uint: uint [54100,54104]" dest="uint: uint [21190,21194]"/>
  <match src="identifier: account [101188,101195]" dest="identifier: account [39750,39757]"/>
  <match src="identifier: candidates [103789,103799]" dest="identifier: candidates [42351,42361]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [91258,91277]" dest="identifier: IMPLEMENTATION_SLOT [29822,29841]"/>
  <match src="variable_declaration [72980,73012]" dest="variable_declaration [65374,65389]"/>
  <match src="parameter [9810,9823]" dest="parameter [10395,10408]"/>
  <match src="function_body [45993,46041]" dest="function_body [15150,15198]"/>
  <match src="primitive_type [54255,54262]" dest="primitive_type [21345,21352]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [11662,12170]" dest="comment: /*     Copyright 2019 dYdX Trading Inc.           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [6617,7236]"/>
  <match src="identifier: USDC [44001,44005]" dest="identifier: USDC [13158,13162]"/>
  <match src="): ) [83094,83095]" dest="): ) [61069,61070]"/>
  <match src="): ) [34525,34526]" dest="): ) [49106,49107]"/>
  <match src="function: function [94066,94074]" dest="function: function [32630,32638]"/>
  <match src="view: view [96094,96098]" dest="view: view [34658,34662]"/>
  <match src="primitive_type [87890,87897]" dest="primitive_type [28733,28740]"/>
  <match src="number_literal: 1440 [45146,45150]" dest="number_literal: 1440 [14303,14307]"/>
  <match src="type_name [53677,53681]" dest="type_name [20767,20771]"/>
  <match src=",: , [33344,33345]" dest=",: , [47925,47926]"/>
  <match src="{: { [33730,33731]" dest="{: { [48311,48312]"/>
  <match src="{: { [87648,87649]" dest="{: { [28491,28492]"/>
  <match src="member_expression [81064,81074]" dest="member_expression [69926,69936]"/>
  <match src="call_argument [78292,78296]" dest="call_argument [59093,59097]"/>
  <match src="inheritance_specifier [89001,89006]" dest="inheritance_specifier [73634,73639]"/>
  <match src="identifier: bonded [87282,87288]" dest="identifier: bonded [28125,28131]"/>
  <match src="array_access [103229,103272]" dest="array_access [41791,41834]"/>
  <match src="returns: returns [2447,2454]" dest="returns: returns [3026,3033]"/>
  <match src="identifier: must [30274,30278]" dest="identifier: must [44855,44859]"/>
  <match src="): ) [24964,24965]" dest="): ) [55192,55193]"/>
  <match src="identifier: result [38809,38815]" dest="identifier: result [53390,53396]"/>
  <match src="call_argument [33947,33973]" dest="call_argument [48528,48554]"/>
  <match src="identifier: expiring [87226,87234]" dest="identifier: expiring [28069,28077]"/>
  <match src=".: . [99155,99156]" dest=".: . [37717,37718]"/>
  <match src="type_name [87578,87582]" dest="type_name [28421,28425]"/>
  <match src="return_type_definition [36088,36110]" dest="return_type_definition [50669,50691]"/>
  <match src="parameter [2394,2403]" dest="parameter [2973,2982]"/>
  <match src="identifier: b [8880,8881]" dest="identifier: b [9465,9466]"/>
  <match src="primitive_type [94107,94114]" dest="primitive_type [32671,32678]"/>
  <match src="(: ( [86847,86848]" dest="(: ( [27690,27691]"/>
  <match src="type_name [13867,13874]" dest="type_name [23658,23665]"/>
  <match src="identifier: char [37843,37847]" dest="identifier: char [52424,52428]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [89285,89351]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [73918,73984]"/>
  <match src=",: , [78208,78209]" dest=",: , [77731,77732]"/>
  <match src="state_mutability [95160,95164]" dest="state_mutability [33724,33728]"/>
  <match src="(: ( [91623,91624]" dest="(: ( [30187,30188]"/>
  <match src=".: . [92259,92260]" dest=".: . [30823,30824]"/>
  <match src="state_variable_declaration [44746,44803]" dest="state_variable_declaration [13903,13960]"/>
  <match src="identifier: add [100236,100239]" dest="identifier: add [38798,38801]"/>
  <match src="memory: memory [9874,9880]" dest="memory: memory [10459,10465]"/>
  <match src="parameter [4449,4475]" dest="parameter [5028,5054]"/>
  <match src="external: external [53946,53954]" dest="external: external [21036,21044]"/>
  <match src="identifier: reason [103960,103966]" dest="identifier: reason [42522,42528]"/>
  <match src="function_definition [99079,99222]" dest="function_definition [37641,37784]"/>
  <match src="function_definition [7067,7183]" dest="function_definition [7652,7768]"/>
  <match src="event: event [79869,79874]" dest="event: event [68983,68988]"/>
  <match src="(: ( [90289,90290]" dest="(: ( [74922,74923]"/>
  <match src="number_literal: 0 [5984,5985]" dest="number_literal: 0 [6563,6564]"/>
  <match src="primitive_type [28098,28105]" dest="primitive_type [54819,54826]"/>
  <match src=":: : [9476,9477]" dest=":: : [10061,10062]"/>
  <match src="struct_member [87600,87617]" dest="struct_member [28443,28460]"/>
  <match src="member_expression [93186,93201]" dest="member_expression [31750,31765]"/>
  <match src="return: return [11085,11091]" dest="return: return [11670,11676]"/>
  <match src="parameter [3810,3817]" dest="parameter [4389,4396]"/>
  <match src="new: new [36421,36424]" dest="new: new [51002,51005]"/>
  <match src="identifier: value [8699,8704]" dest="identifier: value [9284,9289]"/>
  <match src="visibility [102101,102109]" dest="visibility [40663,40671]"/>
  <match src="return: return [91665,91671]" dest="return: return [30229,30235]"/>
  <match src="parameter [53647,53657]" dest="parameter [20737,20747]"/>
  <match src="identifier: D256 [9998,10002]" dest="identifier: D256 [10583,10587]"/>
  <match src="binary_expression [36131,36141]" dest="binary_expression [50712,50722]"/>
  <match src="function: function [98995,99003]" dest="function: function [37557,37565]"/>
  <match src="expression_statement [23678,23747]" dest="expression_statement [61838,61958]"/>
  <match src="binary_expression [38835,38852]" dest="binary_expression [53416,53433]"/>
  <match src="primitive_type [103511,103518]" dest="primitive_type [42073,42080]"/>
  <match src="return_statement [91665,91675]" dest="return_statement [30229,30239]"/>
  <match src="identifier: Epoch [87013,87018]" dest="identifier: Epoch [27856,27861]"/>
  <match src="(: ( [73142,73143]" dest="(: ( [79661,79662]"/>
  <match src="number_literal: 0 [37300,37301]" dest="number_literal: 0 [51881,51882]"/>
  <match src="return_statement [46831,46865]" dest="return_statement [15988,16022]"/>
  <match src="returns: returns [13069,13076]" dest="returns: returns [22860,22867]"/>
  <match src="binary_expression [37601,37606]" dest="binary_expression [52182,52187]"/>
  <match src="comment: // 48 epochs fluid [44960,44978]" dest="comment: // 48 epochs fluid [14117,14135]"/>
  <match src="user_defined_type [7576,7580]" dest="user_defined_type [8161,8165]"/>
  <match src="function_definition [92937,93052]" dest="function_definition [31501,31616]"/>
  <match src="event_paramater [54387,54401]" dest="event_paramater [21477,21491]"/>
  <match src="identifier: sender [21510,21516]" dest="identifier: sender [63272,63278]"/>
  <match src="for: for [64366,64369]" dest="for: for [64559,64562]"/>
  <match src="identifier: Approval [15494,15502]" dest="identifier: Approval [25285,25293]"/>
  <match src="visibility [69053,69061]" dest="visibility [80693,80701]"/>
  <match src="identifier: D256 [8501,8505]" dest="identifier: D256 [9086,9090]"/>
  <match src="): ) [94152,94153]" dest="): ) [32716,32717]"/>
  <match src="member_expression [93693,93725]" dest="member_expression [32257,32289]"/>
  <match src="member_expression [96135,96169]" dest="member_expression [34699,34733]"/>
  <match src="primitive_type [54224,54228]" dest="primitive_type [21314,21318]"/>
  <match src="): ) [37723,37724]" dest="): ) [52304,52305]"/>
  <match src="identifier: b [5308,5309]" dest="identifier: b [5887,5888]"/>
  <match src="uint256: uint256 [45308,45315]" dest="uint256: uint256 [14465,14472]"/>
  <match src="internal: internal [74530,74538]" dest="internal: internal [64858,64866]"/>
  <match src="(: ( [98808,98809]" dest="(: ( [37370,37371]"/>
  <match src="{: { [46277,46278]" dest="{: { [15434,15435]"/>
  <match src="member_expression [7873,7883]" dest="member_expression [8458,8468]"/>
  <match src="expression_statement [98763,98817]" dest="expression_statement [37325,37379]"/>
  <match src="primitive_type [44008,44015]" dest="primitive_type [13165,13172]"/>
  <match src="expression_statement [102391,102444]" dest="expression_statement [40953,41006]"/>
  <match src="): ) [1592,1593]" dest="): ) [2171,2172]"/>
  <match src="primitive_type [53599,53603]" dest="primitive_type [20689,20693]"/>
  <match src="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [1210,1435]" dest="comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [1789,2014]"/>
  <match src="identifier: startFor [104259,104267]" dest="identifier: startFor [42821,42829]"/>
  <match src="): ) [54657,54658]" dest="): ) [21747,21748]"/>
  <match src="user_defined_type [87578,87582]" dest="user_defined_type [28421,28425]"/>
  <match src="identifier: period [103101,103107]" dest="identifier: period [41663,41669]"/>
  <match src="returns: returns [7235,7242]" dest="returns: returns [7820,7827]"/>
  <match src="identifier: COLON [33175,33180]" dest="identifier: COLON [47756,47761]"/>
  <match src="primitive_type [70086,70093]" dest="primitive_type [64730,64737]"/>
  <match src="]: ] [103099,103100]" dest="]: ] [41661,41662]"/>
  <match src="=: = [94472,94473]" dest="=: = [33036,33037]"/>
  <match src="call_argument [34043,34051]" dest="call_argument [48624,48632]"/>
  <match src="identifier: totalBonded [81190,81201]" dest="identifier: totalBonded [69968,69979]"/>
  <match src="call_argument [32012,32018]" dest="call_argument [46593,46599]"/>
  <match src="parameter [13852,13865]" dest="parameter [23643,23656]"/>
  <match src="!: ! [32289,32290]" dest="!: ! [46870,46871]"/>
  <match src="[: [ [103605,103606]" dest="[: [ [42167,42168]"/>
  <match src="expression_statement [105587,105723]" dest="expression_statement [67655,67791]"/>
  <match src="primitive_type [100365,100372]" dest="primitive_type [38927,38934]"/>
  <match src="): ) [91873,91874]" dest="): ) [30437,30438]"/>
  <match src="identifier: EPOCH_OFFSET [45818,45830]" dest="identifier: EPOCH_OFFSET [14975,14987]"/>
  <match src="member_expression [7446,7451]" dest="member_expression [8031,8036]"/>
  <match src="variable_declaration [89866,89885]" dest="variable_declaration [74499,74518]"/>
  <match src="{: { [46943,46944]" dest="{: { [16100,16101]"/>
  <match src=".: . [9720,9721]" dest=".: . [10305,10306]"/>
  <match src="visibility [50976,50982]" dest="visibility [26135,26141]"/>
  <match src="identifier: must [34384,34388]" dest="identifier: must [48965,48969]"/>
  <match src="parameter [50883,50898]" dest="parameter [26042,26057]"/>
  <match src="&gt;: &gt; [96866,96867]" dest="&gt;: &gt; [35430,35431]"/>
  <match src="call_expression [89920,89959]" dest="call_expression [74553,74592]"/>
  <match src="identifier: sub [8317,8320]" dest="identifier: sub [8902,8905]"/>
  <match src="&quot;: &quot; [84490,84491]" dest="&quot;: &quot; [76962,76963]"/>
  <match src="primitive_type [36232,36239]" dest="primitive_type [50813,50820]"/>
  <match src="parameter [1921,1930]" dest="parameter [2500,2509]"/>
  <match src="view: view [53499,53503]" dest="view: view [20589,20593]"/>
  <match src="address: address [50943,50950]" dest="address: address [26102,26109]"/>
  <match src="call_expression [81636,81650]" dest="call_expression [71298,71312]"/>
  <match src="expression_statement [102454,102509]" dest="expression_statement [41016,41071]"/>
  <match src="primitive_type [50883,50890]" dest="primitive_type [26042,26049]"/>
  <match src="return_type_definition [91638,91653]" dest="return_type_definition [30202,30217]"/>
  <match src="identifier: payloadB [30956,30964]" dest="identifier: payloadB [45537,45545]"/>
  <match src="returns: returns [98302,98309]" dest="returns: returns [36864,36871]"/>
  <match src="member_expression [98642,98656]" dest="member_expression [37204,37218]"/>
  <match src="uint: uint [53599,53603]" dest="uint: uint [20689,20693]"/>
  <match src="visibility [11042,11050]" dest="visibility [11627,11635]"/>
  <match src="state_variable_declaration [44377,44419]" dest="state_variable_declaration [13534,13576]"/>
  <match src="call_expression [73239,73264]" dest="call_expression [62115,62122]"/>
  <match src="=: = [29546,29547]" dest="=: = [44127,44128]"/>
  <match src="primitive_type [15503,15510]" dest="primitive_type [25294,25301]"/>
  <match src="event_paramater [54412,54426]" dest="event_paramater [21502,21516]"/>
  <match src="primitive_type [69902,69909]" dest="primitive_type [68952,68959]"/>
  <match src="array_access [100720,100744]" dest="array_access [39282,39306]"/>
  <match src="event_paramater [52479,52491]" dest="event_paramater [60410,60433]"/>
  <match src="type_name [104451,104458]" dest="type_name [43013,43020]"/>
  <match src="contract_declaration [17329,24351]" dest="contract_declaration [59775,63884]"/>
  <match src="}: } [8733,8734]" dest="}: } [9318,9319]"/>
  <match src="call_struct_argument [9471,9501]" dest="call_struct_argument [10056,10086]"/>
  <match src="member_expression [46529,46541]" dest="member_expression [15686,15698]"/>
  <match src="external: external [69053,69061]" dest="external: external [80693,80701]"/>
  <match src="uint256: uint256 [95317,95324]" dest="uint256: uint256 [33881,33888]"/>
  <match src="identifier: totalBonded [83906,83917]" dest="identifier: totalRedeemable [58131,58146]"/>
  <match src="(: ( [47403,47404]" dest="(: ( [16560,16561]"/>
  <match src="primitive_type [79905,79912]" dest="primitive_type [69021,69028]"/>
  <match src="identifier: reason [103560,103566]" dest="identifier: reason [42122,42128]"/>
  <match src="identifier: _state [103588,103594]" dest="identifier: _state [42150,42156]"/>
  <match src="identifier: sub [101404,101407]" dest="identifier: sub [39966,39969]"/>
  <match src="identifier: require [21502,21509]" dest="identifier: require [63264,63271]"/>
  <match src="(: ( [93765,93766]" dest="(: ( [32329,32330]"/>
  <match src="visibility [30366,30374]" dest="visibility [44947,44955]"/>
  <match src="call_struct_argument [45878,45898]" dest="call_struct_argument [15035,15055]"/>
  <match src="state_mutability [91733,91737]" dest="state_mutability [30297,30301]"/>
  <match src="type_name [94107,94114]" dest="type_name [32671,32678]"/>
  <match src="string [79675,79681]" dest="string [68747,68756]"/>
  <match src="type_name [103911,103918]" dest="type_name [42473,42480]"/>
  <match src="}: } [95686,95687]" dest="}: } [34250,34251]"/>
  <match src="bytes: bytes [35113,35118]" dest="bytes: bytes [49694,49699]"/>
  <match src="new: new [38212,38215]" dest="new: new [52793,52796]"/>
  <match src="string: string [103546,103552]" dest="string: string [42108,42114]"/>
  <match src=":: : [7624,7625]" dest=":: : [8209,8210]"/>
  <match src=".: . [104054,104055]" dest=".: . [42616,42617]"/>
  <match src="identifier: _state [101695,101701]" dest="identifier: _state [40257,40263]"/>
  <match src="visibility [53576,53584]" dest="visibility [20666,20674]"/>
  <match src="uint256: uint256 [77737,77744]" dest="uint256: uint256 [55934,55941]"/>
  <match src="state_mutability [72121,72125]" dest="state_mutability [79514,79518]"/>
  <match src="library: library [43673,43680]" dest="library: library [12830,12837]"/>
  <match src="identifier: unfreeze [81725,81733]" dest="identifier: unfreeze [70954,70962]"/>
  <match src="number_literal: 20 [37514,37516]" dest="number_literal: 20 [52095,52097]"/>
  <match src="identifier: Transfer [97873,97881]" dest="identifier: Transfer [36435,36443]"/>
  <match src="identifier: newClaimable [80017,80029]" dest="identifier: bonded [76151,76157]"/>
  <match src="pure: pure [10248,10252]" dest="pure: pure [10833,10837]"/>
  <match src="expression_statement [104357,104404]" dest="expression_statement [42919,42966]"/>
  <match src="identifier: _approve [23601,23609]" dest="identifier: approveCoupons [62868,62882]"/>
  <match src="uint256: uint256 [35658,35665]" dest="uint256: uint256 [50239,50246]"/>
  <match src="&lt;: &lt; [39082,39083]" dest="&lt;: &lt; [53663,53664]"/>
  <match src="uint256: uint256 [37072,37079]" dest="uint256: uint256 [51653,51660]"/>
  <match src="identifier: b [9493,9494]" dest="identifier: b [10078,10079]"/>
  <match src="(: ( [95027,95028]" dest="(: ( [33591,33592]"/>
  <match src="call_argument [39115,39140]" dest="call_argument [53696,53721]"/>
  <match src="internal: internal [99508,99516]" dest="internal: internal [38070,38078]"/>
  <match src="parameter [93296,93303]" dest="parameter [31860,31867]"/>
  <match src="visibility [95604,95610]" dest="visibility [34168,34174]"/>
  <match src="identifier: reserve0 [54540,54548]" dest="identifier: reserve0 [21630,21638]"/>
  <match src="identifier: approveFor [96683,96693]" dest="identifier: approveFor [35247,35257]"/>
  <match src="uint256: uint256 [36039,36046]" dest="uint256: uint256 [50620,50627]"/>
  <match src="identifier: Decimal [47443,47450]" dest="identifier: Decimal [16600,16607]"/>
  <match src="function_body [98181,98212]" dest="function_body [36743,36774]"/>
  <match src="pure: pure [38994,38998]" dest="pure: pure [53575,53579]"/>
  <match src="}: } [8342,8343]" dest="}: } [8927,8928]"/>
  <match src="): ) [96952,96953]" dest="): ) [35516,35517]"/>
  <match src="(: ( [102501,102502]" dest="(: ( [41063,41064]"/>
  <match src="type_name [89866,89871]" dest="type_name [74499,74504]"/>
  <match src="identifier: lessThan [10472,10480]" dest="identifier: lessThan [11057,11065]"/>
  <match src=":=: := [97174,97176]" dest=":=: := [35738,35740]"/>
  <match src="call_argument [32427,32431]" dest="call_argument [47008,47012]"/>
  <match src="): ) [91979,91980]" dest="): ) [30543,30544]"/>
  <match src="type_name [92543,92550]" dest="type_name [31107,31114]"/>
  <match src="identifier: a [3841,3842]" dest="identifier: a [4420,4421]"/>
  <match src="returns: returns [53435,53442]" dest="returns: returns [20525,20532]"/>
  <match src=",: , [31985,31986]" dest=",: , [46566,46567]"/>
  <match src="binary_expression [36811,36832]" dest="binary_expression [51392,51413]"/>
  <match src="identifier: coupons [95365,95372]" dest="identifier: coupons [33929,33936]"/>
  <match src="primitive_type [1454,1461]" dest="primitive_type [2033,2040]"/>
  <match src="identifier: Fluid [94045,94050]" dest="identifier: Fluid [32609,32614]"/>
  <match src="identifier: reason [98676,98682]" dest="identifier: reason [37238,37244]"/>
  <match src="&gt;: &gt; [93872,93873]" dest="&gt;: &gt; [32436,32437]"/>
  <match src="type_name [44066,44073]" dest="type_name [13223,13230]"/>
  <match src="(: ( [7893,7894]" dest="(: ( [8478,8479]"/>
  <match src="ternary_expression [93957,94044]" dest="ternary_expression [32521,32608]"/>
  <match src="returns: returns [94299,94306]" dest="returns: returns [32863,32870]"/>
  <match src="type_name [89238,89245]" dest="type_name [73871,73878]"/>
  <match src="function: function [80996,81004]" dest="function: function [69838,69846]"/>
  <match src="[: [ [103034,103035]" dest="[: [ [41596,41597]"/>
  <match src="member_expression [31754,31770]" dest="member_expression [46335,46351]"/>
  <match src="public: public [92307,92313]" dest="public: public [30871,30877]"/>
  <match src="private: private [37999,38006]" dest="private: private [52580,52587]"/>
  <match src="identifier: amount [21709,21715]" dest="identifier: amount [55791,55797]"/>
  <match src="address: address [53797,53804]" dest="address: address [20887,20894]"/>
  <match src=",: , [33666,33667]" dest=",: , [48247,48248]"/>
  <match src=",: , [24903,24904]" dest=",: , [55121,55122]"/>
  <match src=",: , [99805,99806]" dest=",: , [38367,38368]"/>
  <match src="returns: returns [91638,91645]" dest="returns: returns [30202,30209]"/>
  <match src=".: . [82291,82292]" dest=".: . [62231,62232]"/>
  <match src="call_argument [103459,103465]" dest="call_argument [42021,42027]"/>
  <match src="identifier: coupons [101197,101204]" dest="identifier: coupons [39759,39766]"/>
  <match src=",: , [105674,105675]" dest=",: , [67742,67743]"/>
  <match src="): ) [54801,54802]" dest="): ) [21891,21892]"/>
  <match src="binary_expression [38872,38878]" dest="binary_expression [53453,53459]"/>
  <match src="block_statement [30412,30814]" dest="block_statement [44993,45395]"/>
  <match src="visibility [45961,45969]" dest="visibility [15118,15126]"/>
  <match src="): ) [47479,47480]" dest="): ) [16636,16637]"/>
  <match src=",: , [84475,84476]" dest=",: , [76947,76948]"/>
  <match src="}: } [8724,8725]" dest="}: } [9309,9310]"/>
  <match src="identifier: amount0Out [55275,55285]" dest="identifier: amount0Out [22365,22375]"/>
  <match src="function_definition [32791,33577]" dest="function_definition [47372,48158]"/>
  <match src="(: ( [30070,30071]" dest="(: ( [44651,44652]"/>
  <match src="(: ( [37705,37706]" dest="(: ( [52286,52287]"/>
  <match src="identifier: msg [80671,80674]" dest="identifier: msg [69804,69807]"/>
  <match src="): ) [67088,67089]" dest="): ) [65598,65599]"/>
  <match src="identifier: stringify [30693,30702]" dest="identifier: stringify [45274,45283]"/>
  <match src="state_variable_declaration [45374,45422]" dest="state_variable_declaration [14531,14579]"/>
  <match src="for: for [36549,36552]" dest="for: for [51130,51133]"/>
  <match src="type_name [90236,90243]" dest="type_name [74869,74876]"/>
  <match src="primitive_type [51818,51825]" dest="primitive_type [54597,54604]"/>
  <match src="member_expression [11622,11629]" dest="member_expression [12207,12214]"/>
  <match src="=: = [100953,100954]" dest="=: = [39515,39516]"/>
  <match src=".: . [8525,8526]" dest=".: . [9110,9111]"/>
  <match src=".: . [94753,94754]" dest=".: . [33317,33318]"/>
  <match src="identifier: offset [94802,94808]" dest="identifier: offset [33366,33372]"/>
  <match src="function_definition [98220,98348]" dest="function_definition [36782,36910]"/>
  <match src="identifier: to [55200,55202]" dest="identifier: to [22290,22292]"/>
  <match src="type_name [13078,13085]" dest="type_name [22869,22876]"/>
  <match src="uint256: uint256 [36554,36561]" dest="uint256: uint256 [51135,51142]"/>
  <match src="primitive_type [31562,31569]" dest="primitive_type [46143,46150]"/>
  <match src="=: = [104394,104395]" dest="=: = [42956,42957]"/>
  <match src="(: ( [52137,52138]" dest="(: ( [63682,63683]"/>
  <match src="string_literal [57758,57783]" dest="string_literal [71229,71260]"/>
  <match src="contract: contract [105129,105137]" dest="contract: contract [67197,67205]"/>
  <match src="parameter [2405,2431]" dest="parameter [2984,3010]"/>
  <match src="(: ( [13077,13078]" dest="(: ( [22868,22869]"/>
  <match src="call_argument [34079,34085]" dest="call_argument [48660,48666]"/>
  <match src="{: { [76842,76843]" dest="{: { [60483,60484]"/>
  <match src="}: } [34153,34154]" dest="}: } [48734,48735]"/>
  <match src="): ) [105444,105445]" dest="): ) [67512,67513]"/>
  <match src="comment: // 100 ULD -&gt; 100M ULDS [44218,44241]" dest="comment: // 100 ULD -&gt; 100M ULDS [13375,13398]"/>
  <match src="call_argument [8721,8722]" dest="call_argument [9306,9307]"/>
  <match src="identifier: b [10300,10301]" dest="identifier: b [10885,10886]"/>
  <match src="return: return [8903,8909]" dest="return: return [9488,9494]"/>
  <match src="identifier: candidate [103838,103847]" dest="identifier: candidate [42400,42409]"/>
  <match src="(: ( [46785,46786]" dest="(: ( [15942,15943]"/>
  <match src="function_definition [101439,101587]" dest="function_definition [40001,40149]"/>
  <match src="parameter [103511,103528]" dest="parameter [42073,42090]"/>
  <match src="primitive_type [91949,91956]" dest="primitive_type [30513,30520]"/>
  <match src="internal: internal [46623,46631]" dest="internal: internal [15780,15788]"/>
  <match src="visibility [80735,80743]" dest="visibility [78722,78730]"/>
  <match src="call_argument [89988,90002]" dest="call_argument [74621,74635]"/>
  <match src="{: { [103977,103978]" dest="{: { [42539,42540]"/>
  <match src="}: } [80406,80407]" dest="}: } [69554,69555]"/>
  <match src="uint256: uint256 [93549,93556]" dest="uint256: uint256 [32113,32120]"/>
  <match src="identifier: c [3207,3208]" dest="identifier: c [3786,3787]"/>
  <match src="return: return [6011,6017]" dest="return: return [6590,6596]"/>
  <match src="primitive_type [93316,93323]" dest="primitive_type [31880,31887]"/>
  <match src="primitive_type [87459,87466]" dest="primitive_type [28302,28309]"/>
  <match src="identifier: stringify [31304,31313]" dest="identifier: stringify [45885,45894]"/>
  <match src="state_mutability [95943,95947]" dest="state_mutability [34507,34511]"/>
  <match src="indexed: indexed [89524,89531]" dest="indexed: indexed [74157,74164]"/>
  <match src=",: , [79918,79919]" dest=",: , [69034,69035]"/>
  <match src="): ) [94704,94705]" dest="): ) [33268,33269]"/>
  <match src="member_expression [95344,95357]" dest="member_expression [33908,33921]"/>
  <match src="call_argument [10145,10155]" dest="call_argument [10730,10740]"/>
  <match src=",: , [82180,82181]" dest=",: , [71094,71095]"/>
  <match src="private: private [43723,43730]" dest="private: private [12880,12887]"/>
  <match src="}: } [44368,44369]" dest="}: } [13525,13526]"/>
  <match src="): ) [96703,96704]" dest="): ) [35267,35268]"/>
  <match src="function_body [9245,9311]" dest="function_body [9830,9896]"/>
  <match src="function_body [10956,10997]" dest="function_body [11541,11582]"/>
  <match src="uint256: uint256 [4500,4507]" dest="uint256: uint256 [5079,5086]"/>
  <match src="struct_member [88155,88202]" dest="struct_member [28998,29045]"/>
  <match src="identifier: account [80067,80074]" dest="identifier: account [76194,76201]"/>
  <match src="function: function [96185,96193]" dest="function: function [34749,34757]"/>
  <match src="]: ] [96298,96299]" dest="]: ] [34862,34863]"/>
  <match src="): ) [50850,50851]" dest="): ) [26009,26010]"/>
  <match src="visibility [8623,8631]" dest="visibility [9208,9216]"/>
  <match src="identifier: PairCreated [52419,52430]" dest="identifier: CouponTransfer [60265,60279]"/>
  <match src="struct: struct [87435,87441]" dest="struct: struct [28278,28284]"/>
  <match src="identifier: c [1555,1556]" dest="identifier: c [2134,2135]"/>
  <match src="identifier: amount [98735,98741]" dest="identifier: amount [37297,37303]"/>
  <match src="identifier: z [38693,38694]" dest="identifier: z [53274,53275]"/>
  <match src="parameter [100652,100667]" dest="parameter [39214,39229]"/>
  <match src="): ) [34107,34108]" dest="): ) [48688,48689]"/>
  <match src="member_expression [99350,99364]" dest="member_expression [37912,37926]"/>
  <match src="primitive_type [2837,2844]" dest="primitive_type [3416,3423]"/>
  <match src="identifier: value [9935,9940]" dest="identifier: value [10520,10525]"/>
  <match src="): ) [7356,7357]" dest="): ) [7941,7942]"/>
  <match src="uint256: uint256 [100134,100141]" dest="uint256: uint256 [38696,38703]"/>
  <match src="(: ( [90328,90329]" dest="(: ( [74961,74962]"/>
  <match src="{: { [35375,35376]" dest="{: { [49956,49957]"/>
  <match src="function: function [104097,104105]" dest="function: function [42659,42667]"/>
  <match src="type_name [44377,44384]" dest="type_name [13534,13541]"/>
  <match src="(: ( [9055,9056]" dest="(: ( [9640,9641]"/>
  <match src="parameter [92004,92011]" dest="parameter [30568,30575]"/>
  <match src="&quot;: &quot; [3874,3875]" dest="&quot;: &quot; [4453,4454]"/>
  <match src="(: ( [65820,65821]" dest="(: ( [66561,66562]"/>
  <match src="{: { [38510,38511]" dest="{: { [53091,53092]"/>
  <match src="member_expression [100930,100952]" dest="member_expression [39492,39514]"/>
  <match src="call_expression [98940,98979]" dest="call_expression [37502,37541]"/>
  <match src="assignment_expression [36790,36834]" dest="assignment_expression [51371,51415]"/>
  <match src="binary_expression [10286,10307]" dest="binary_expression [10871,10892]"/>
  <match src="type_name [96244,96251]" dest="type_name [34808,34815]"/>
  <match src="primitive_type [54100,54104]" dest="primitive_type [21190,21194]"/>
  <match src="primitive_type [47857,47864]" dest="primitive_type [17014,17021]"/>
  <match src="return: return [47877,47883]" dest="return: return [17034,17040]"/>
  <match src="event: event [27605,27610]" dest="event: event [60160,60165]"/>
  <match src="{: { [35132,35133]" dest="{: { [49713,49714]"/>
  <match src="identifier: _state [103988,103994]" dest="identifier: _state [42550,42556]"/>
  <match src="(: ( [79953,79954]" dest="(: ( [68896,68897]"/>
  <match src="identifier: incrementBalanceOfStaged [82145,82169]" dest="identifier: incrementBalanceOfStaged [71059,71083]"/>
  <match src="member_expression [99971,99992]" dest="member_expression [38533,38554]"/>
  <match src="uint256: uint256 [102336,102343]" dest="uint256: uint256 [40898,40905]"/>
  <match src="]: ] [93858,93859]" dest="]: ] [32422,32423]"/>
  <match src="): ) [91724,91725]" dest="): ) [30288,30289]"/>
  <match src="indexed: indexed [53108,53115]" dest="indexed: indexed [20198,20205]"/>
  <match src="[: [ [93201,93202]" dest="[: [ [31765,31766]"/>
  <match src="identifier: encodePacked [31758,31770]" dest="identifier: encodePacked [46339,46351]"/>
  <match src="pure: pure [30380,30384]" dest="pure: pure [44961,44965]"/>
  <match src="identifier: amount [98809,98815]" dest="identifier: amount [37371,37377]"/>
  <match src="parameter [32194,32210]" dest="parameter [46775,46791]"/>
  <match src="identifier: amount0Out [54442,54452]" dest="identifier: amount0Out [21532,21542]"/>
  <match src="(: ( [49141,49142]" dest="(: ( [54893,54894]"/>
  <match src="comment: // than to check the size of the code at that address. [85648,85702]" dest="comment: // than to check the size of the code at that address. [72454,72508]"/>
  <match src="{: { [93305,93306]" dest="{: { [31869,31870]"/>
  <match src="memory: memory [10504,10510]" dest="memory: memory [11089,11095]"/>
  <match src="call_argument [82610,82620]" dest="call_argument [69894,69904]"/>
  <match src="private: private [25117,25124]" dest="private: private [58904,58911]"/>
  <match src="identifier: _state [92253,92259]" dest="identifier: _state [30817,30823]"/>
  <match src="public: public [96786,96792]" dest="public: public [35350,35356]"/>
  <match src="{: { [81714,81715]" dest="{: { [70441,70442]"/>
  <match src="primitive_type [44066,44073]" dest="primitive_type [13223,13230]"/>
  <match src="call_struct_argument [47604,47630]" dest="call_struct_argument [16761,16787]"/>
  <match src="{: { [6974,6975]" dest="{: { [7559,7560]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [44188,44210]" dest="identifier: INITIAL_STAKE_MULTIPLE [13345,13367]"/>
  <match src="type_name [83078,83085]" dest="type_name [65835,65842]"/>
  <match src=".: . [83901,83902]" dest=".: . [58126,58127]"/>
  <match src="identifier: account [91717,91724]" dest="identifier: account [30281,30288]"/>
  <match src=".: . [96163,96164]" dest=".: . [34727,34728]"/>
  <match src="(: ( [102560,102561]" dest="(: ( [41122,41123]"/>
  <match src=".: . [91219,91220]" dest=".: . [29783,29784]"/>
  <match src="call_argument [83360,83368]" dest="call_argument [62757,62769]"/>
  <match src="parameter [102962,102979]" dest="parameter [41524,41541]"/>
  <match src="(: ( [99379,99380]" dest="(: ( [37941,37942]"/>
  <match src="identifier: _state [101356,101362]" dest="identifier: _state [39918,39924]"/>
  <match src="identifier: sender [21439,21445]" dest="identifier: sender [63186,63192]"/>
  <match src="(: ( [82681,82682]" dest="(: ( [58328,58329]"/>
  <match src="type_name [55316,55321]" dest="type_name [22406,22411]"/>
  <match src="}: } [96452,96453]" dest="}: } [35016,35017]"/>
  <match src="array_access [100762,100786]" dest="array_access [39324,39348]"/>
  <match src="event: event [79941,79946]" dest="event: event [68886,68891]"/>
  <match src="identifier: value [53814,53819]" dest="identifier: value [20904,20909]"/>
  <match src="identifier: a [11550,11551]" dest="identifier: a [12135,12136]"/>
  <match src="contract_body [87648,88212]" dest="contract_body [28491,29055]"/>
  <match src="identifier: i [9025,9026]" dest="identifier: i [9610,9611]"/>
  <match src="): ) [30183,30184]" dest="): ) [44764,44765]"/>
  <match src="return_statement [94926,94949]" dest="return_statement [33490,33513]"/>
  <match src="type_name [7576,7580]" dest="type_name [8161,8165]"/>
  <match src="variable_declaration_statement [81758,81812]" dest="variable_declaration_statement [70485,70568]"/>
  <match src="function_definition [53525,53605]" dest="function_definition [20615,20695]"/>
  <match src="identifier: RPAREN [34873,34879]" dest="identifier: RPAREN [49454,49460]"/>
  <match src="(: ( [54768,54769]" dest="(: ( [21858,21859]"/>
  <match src="visibility [67999,68007]" dest="visibility [69100,69108]"/>
  <match src="member_expression [99971,99996]" dest="member_expression [38533,38558]"/>
  <match src="type_name [33677,33684]" dest="type_name [48258,48265]"/>
  <match src="member_expression [8321,8326]" dest="member_expression [8906,8911]"/>
  <match src="primitive_type [1499,1506]" dest="primitive_type [2078,2085]"/>
  <match src="&quot;: &quot; [50018,50019]" dest="&quot;: &quot; [55237,55238]"/>
  <match src="call_argument [23906,23913]" dest="call_argument [63121,63128]"/>
  <match src="): ) [92955,92956]" dest="): ) [31519,31520]"/>
  <match src="identifier: amount [13517,13523]" dest="identifier: amount [23308,23314]"/>
  <match src="(: ( [37494,37495]" dest="(: ( [52075,52076]"/>
  <match src="call_expression [32365,32730]" dest="call_expression [46946,47311]"/>
  <match src="expression_statement [37293,37329]" dest="expression_statement [51874,51910]"/>
  <match src="string [50132,50141]" dest="string [54995,55037]"/>
  <match src="primitive_type [96480,96487]" dest="primitive_type [35044,35051]"/>
  <match src="=: = [45051,45052]" dest="=: = [14208,14209]"/>
  <match src="(: ( [76902,76903]" dest="(: ( [60769,60770]"/>
  <match src="&quot;: &quot; [91469,91470]" dest="&quot;: &quot; [30033,30034]"/>
  <match src="returns: returns [46481,46488]" dest="returns: returns [15638,15645]"/>
  <match src="identifier: to [53805,53807]" dest="identifier: to [20895,20897]"/>
  <match src="(: ( [30433,30434]" dest="(: ( [45014,45015]"/>
  <match src="call_argument [34604,34610]" dest="call_argument [49185,49191]"/>
  <match src="=: = [38870,38871]" dest="=: = [53451,53452]"/>
  <match src="): ) [53234,53235]" dest="): ) [20324,20325]"/>
  <match src="parameter [63687,63703]" dest="parameter [76252,76269]"/>
  <match src="pragma: pragma [1147,1153]" dest="pragma: pragma [1149,1155]"/>
  <match src="return_type_definition [93795,93819]" dest="return_type_definition [32359,32383]"/>
  <match src="address: address [79880,79887]" dest="address: address [68996,69003]"/>
  <match src="address: address [96908,96915]" dest="address: address [35472,35479]"/>
  <match src=",: , [31244,31245]" dest=",: , [45825,45826]"/>
  <match src="array_access [102238,102260]" dest="array_access [40800,40822]"/>
  <match src="expression_statement [23838,23875]" dest="expression_statement [63025,63077]"/>
  <match src="type_name [13509,13516]" dest="type_name [23300,23307]"/>
  <match src="parameter [28098,28113]" dest="parameter [54819,54834]"/>
  <match src=",: , [80972,80973]" dest=",: , [79441,79442]"/>
  <match src="{: { [100159,100160]" dest="{: { [38721,38722]"/>
  <match src="identifier: DEBT_RATIO_CAP [45182,45196]" dest="identifier: DEBT_RATIO_CAP [14339,14353]"/>
  <match src="call_argument [7894,7898]" dest="call_argument [8479,8483]"/>
  <match src="return: return [7150,7156]" dest="return: return [7735,7741]"/>
  <match src="return_type_definition [3801,3818]" dest="return_type_definition [4380,4397]"/>
  <match src=".: . [93449,93450]" dest=".: . [32013,32014]"/>
  <match src="return_type_definition [53312,53335]" dest="return_type_definition [20402,20425]"/>
  <match src="function_body [93820,94058]" dest="function_body [32384,32622]"/>
  <match src="type_name [87274,87281]" dest="type_name [28117,28124]"/>
  <match src="return: return [7425,7431]" dest="return: return [8010,8016]"/>
  <match src="call_argument [7646,7647]" dest="call_argument [8231,8232]"/>
  <match src="memory: memory [8388,8394]" dest="memory: memory [8973,8979]"/>
  <match src="bytes32: bytes32 [37973,37980]" dest="bytes32: bytes32 [52554,52561]"/>
  <match src="uint256: uint256 [50960,50967]" dest="uint256: uint256 [26119,26126]"/>
  <match src="&quot;: &quot; [22263,22264]" dest="&quot;: &quot; [62574,62575]"/>
  <match src="event_definition [15251,15323]" dest="event_definition [25042,25114]"/>
  <match src="identifier: stringifyTruncated [31218,31236]" dest="identifier: stringifyTruncated [45799,45817]"/>
  <match src="identifier: balance [88005,88012]" dest="identifier: balance [28848,28855]"/>
  <match src="event_definition [79811,79863]" dest="event_definition [80546,80609]"/>
  <match src="identifier: value [83517,83522]" dest="identifier: candidate [78652,78661]"/>
  <match src="call_expression [93032,93043]" dest="call_expression [31596,31607]"/>
  <match src="emit_statement [80951,80981]" dest="emit_statement [79419,79454]"/>
  <match src="(: ( [30625,30626]" dest="(: ( [45206,45207]"/>
  <match src="): ) [101422,101423]" dest="): ) [39984,39985]"/>
  <match src="identifier: value [53205,53210]" dest="identifier: value [20295,20300]"/>
  <match src=",: , [31551,31552]" dest=",: , [46132,46133]"/>
  <match src="identifier: _state [98457,98463]" dest="identifier: _state [37019,37025]"/>
  <match src="identifier: amount [51893,51899]" dest="identifier: amount [54656,54662]"/>
  <match src="memory: memory [10798,10804]" dest="memory: memory [11383,11389]"/>
  <match src="): ) [7783,7784]" dest="): ) [8368,8369]"/>
  <match src="return_statement [10554,10585]" dest="return_statement [11139,11170]"/>
  <match src="call_expression [46529,46569]" dest="call_expression [15686,15726]"/>
  <match src="identifier: D256 [10362,10366]" dest="identifier: D256 [10947,10951]"/>
  <match src="visibility [95296,95302]" dest="visibility [33860,33866]"/>
  <match src="identifier: payloadC [33459,33467]" dest="identifier: payloadC [48040,48048]"/>
  <match src="user_defined_type [7244,7248]" dest="user_defined_type [7829,7833]"/>
  <match src="identifier: D256 [7823,7827]" dest="identifier: D256 [8408,8412]"/>
  <match src=",: , [15013,15014]" dest=",: , [24804,24805]"/>
  <match src=":: : [47609,47610]" dest=":: : [16766,16767]"/>
  <match src="=: = [103416,103417]" dest="=: = [41978,41979]"/>
  <match src="=: = [97113,97114]" dest="=: = [35677,35678]"/>
  <match src="event_paramater [54437,54452]" dest="event_paramater [21527,21542]"/>
  <match src="identifier: self [8306,8310]" dest="identifier: self [8891,8895]"/>
  <match src="call_argument [98809,98815]" dest="call_argument [37371,37377]"/>
  <match src="=: = [98938,98939]" dest="=: = [37500,37501]"/>
  <match src="state_mutability [45611,45615]" dest="state_mutability [14768,14772]"/>
  <match src="member_expression [99040,99054]" dest="member_expression [37602,37616]"/>
  <match src="identifier: deposit [80144,80151]" dest="identifier: deposit [69320,69327]"/>
  <match src="parameter [5229,5238]" dest="parameter [5808,5817]"/>
  <match src="[: [ [101509,101510]" dest="[: [ [40071,40072]"/>
  <match src="(: ( [35044,35045]" dest="(: ( [49625,49626]"/>
  <match src="identifier: amount [98964,98970]" dest="identifier: amount [37526,37532]"/>
  <match src="return_type_definition [47953,47970]" dest="return_type_definition [17110,17127]"/>
  <match src="call_argument [57741,57756]" dest="call_argument [71220,71227]"/>
  <match src="number_literal: 0x3e [29683,29687]" dest="number_literal: 0x3e [44264,44268]"/>
  <match src="identifier: encodePacked [33085,33097]" dest="identifier: encodePacked [47666,47678]"/>
  <match src="parameter [98062,98066]" dest="parameter [36624,36628]"/>
  <match src="function_definition [93233,93498]" dest="function_definition [31797,32062]"/>
  <match src="primitive_type [31542,31546]" dest="primitive_type [46123,46127]"/>
  <match src="state_mutability [47537,47541]" dest="state_mutability [16694,16698]"/>
  <match src="uint: uint [53809,53813]" dest="uint: uint [20899,20903]"/>
  <match src="number_literal: 0 [93406,93407]" dest="number_literal: 0 [31970,31971]"/>
  <match src="visibility [45602,45610]" dest="visibility [14759,14767]"/>
  <match src=".: . [92913,92914]" dest=".: . [31477,31478]"/>
  <match src="identifier: balance [99329,99336]" dest="identifier: balance [37891,37898]"/>
  <match src=".: . [105642,105643]" dest=".: . [67710,67711]"/>
  <match src="false: false [65824,65829]" dest="false: false [79591,79596]"/>
  <match src="parameter [89755,89780]" dest="parameter [74388,74413]"/>
  <match src="identifier: target [11356,11362]" dest="identifier: target [11941,11947]"/>
  <match src="type_name [87216,87223]" dest="type_name [28059,28066]"/>
  <match src="): ) [57783,57784]" dest="): ) [71260,71261]"/>
  <match src="parameter [100365,100380]" dest="parameter [38927,38942]"/>
  <match src="yul_identifier [90502,90506]" dest="yul_identifier [75135,75139]"/>
  <match src="): ) [47864,47865]" dest="): ) [17021,17022]"/>
  <match src="function_definition [54697,54747]" dest="function_definition [21787,21837]"/>
  <match src="call_expression [34749,34768]" dest="call_expression [49330,49349]"/>
  <match src="extcodesize: extcodesize [86025,86036]" dest="extcodesize: extcodesize [72831,72842]"/>
  <match src="member_expression [96972,97012]" dest="member_expression [35536,35576]"/>
  <match src="=: = [44519,44520]" dest="=: = [13676,13677]"/>
  <match src="identifier: coupons [101396,101403]" dest="identifier: coupons [39958,39965]"/>
  <match src="primitive_type [10831,10835]" dest="primitive_type [11416,11420]"/>
  <match src="uint256: uint256 [87534,87541]" dest="uint256: uint256 [28377,28384]"/>
  <match src="expression_statement [84059,84190]" dest="expression_statement [77922,78032]"/>
  <match src="identifier: getEpochStrategy [94484,94500]" dest="identifier: getEpochStrategy [33048,33064]"/>
  <match src="call_argument [81652,81657]" dest="call_argument [71323,71328]"/>
  <match src="parameter [72135,72139]" dest="parameter [79528,79532]"/>
  <match src="return_type_definition [94299,94316]" dest="return_type_definition [32863,32880]"/>
  <match src="identifier: _state [100930,100936]" dest="identifier: _state [39492,39498]"/>
  <match src="primitive_type [101642,101649]" dest="primitive_type [40204,40211]"/>
  <match src=",: , [78214,78215]" dest=",: , [77742,77743]"/>
  <match src="(: ( [102215,102216]" dest="(: ( [40777,40778]"/>
  <match src="uint256: uint256 [92543,92550]" dest="uint256: uint256 [31107,31114]"/>
  <match src="call_argument [33864,33888]" dest="call_argument [48445,48469]"/>
  <match src="member_expression [98642,98667]" dest="member_expression [37204,37229]"/>
  <match src="=: = [89283,89284]" dest="=: = [73916,73917]"/>
  <match src="identifier: payloadB [32665,32673]" dest="identifier: payloadB [47246,47254]"/>
  <match src="}: } [47107,47108]" dest="}: } [16264,16265]"/>
  <match src="uint256: uint256 [83130,83137]" dest="uint256: uint256 [58500,58507]"/>
  <match src="(: ( [3206,3207]" dest="(: ( [3785,3786]"/>
  <match src="identifier: candidate [103645,103654]" dest="identifier: candidate [42207,42216]"/>
  <match src="function_body [3819,3884]" dest="function_body [4398,4463]"/>
  <match src="number_literal: 3600 [44521,44525]" dest="number_literal: 3600 [13678,13682]"/>
  <match src="comment: // populate the string starting with the least-significant character [36451,36519]" dest="comment: // populate the string starting with the least-significant character [51032,51100]"/>
  <match src="type_name [8574,8578]" dest="type_name [9159,9163]"/>
  <match src="bytes32: bytes32 [35055,35062]" dest="bytes32: bytes32 [49636,49643]"/>
  <match src="primitive_type [45241,45248]" dest="primitive_type [14398,14405]"/>
  <match src="binary_expression [1555,1561]" dest="binary_expression [2134,2140]"/>
  <match src="number_literal: 32 [35362,35364]" dest="number_literal: 32 [49943,49945]"/>
  <match src="number_literal: 12 [44800,44802]" dest="number_literal: 12 [13957,13959]"/>
  <match src="{: { [92987,92988]" dest="{: { [31551,31552]"/>
  <match src="variable_declaration [35350,35359]" dest="variable_declaration [49931,49940]"/>
  <match src="identifier: balance [100937,100944]" dest="identifier: balance [39499,39506]"/>
  <match src="parenthesized_expression [33773,34142]" dest="parenthesized_expression [48354,48723]"/>
  <match src="call_expression [32491,32517]" dest="call_expression [47072,47098]"/>
  <match src=".: . [102866,102867]" dest=".: . [41428,41429]"/>
  <match src="return: return [46257,46263]" dest="return: return [15414,15420]"/>
  <match src="comment: // ============ Static Functions ============ [7014,7059]" dest="comment: // ============ Static Functions ============ [7599,7644]"/>
  <match src="returns: returns [91995,92002]" dest="returns: returns [30559,30566]"/>
  <match src="parameter [15015,15032]" dest="parameter [24806,24823]"/>
  <match src="identifier: errorMessage [2419,2431]" dest="identifier: errorMessage [2998,3010]"/>
  <match src="identifier: Locked [105373,105379]" dest="identifier: Locked [67441,67447]"/>
  <match src="]: ] [101168,101169]" dest="]: ] [39730,39731]"/>
  <match src="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [24980,25041]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [26164,26745]"/>
  <match src="uint256: uint256 [98727,98734]" dest="uint256: uint256 [37289,37296]"/>
  <match src="member_expression [101242,101282]" dest="member_expression [39804,39844]"/>
  <match src="comment: // 35% [45206,45212]" dest="comment: // 35% [14363,14369]"/>
  <match src="(: ( [66586,66587]" dest="(: ( [64919,64920]"/>
  <match src="identifier: onlyFrozenOrFluid [105264,105281]" dest="identifier: onlyFrozenOrFluid [67332,67349]"/>
  <match src="identifier: j [36825,36826]" dest="identifier: j [51406,51407]"/>
  <match src=",: , [34800,34801]" dest=",: , [49381,49382]"/>
  <match src="): ) [72056,72057]" dest="): ) [58088,58089]"/>
  <match src="=: = [101170,101171]" dest="=: = [39732,39733]"/>
  <match src="): ) [37992,37993]" dest="): ) [52573,52574]"/>
  <match src="user_defined_type [46225,46237]" dest="user_defined_type [15382,15394]"/>
  <match src="pure: pure [8446,8450]" dest="pure: pure [9031,9035]"/>
  <match src="bytes: bytes [89866,89871]" dest="bytes: bytes [74499,74504]"/>
  <match src="string_literal [22903,22938]" dest="string_literal [62680,62717]"/>
  <match src="): ) [97087,97088]" dest="): ) [35651,35652]"/>
  <match src="type_name [47857,47864]" dest="type_name [17014,17021]"/>
  <match src="member_expression [92462,92483]" dest="member_expression [31026,31047]"/>
  <match src="uint256: uint256 [86905,86912]" dest="uint256: uint256 [27748,27755]"/>
  <match src="call_argument [31237,31243]" dest="call_argument [45818,45824]"/>
  <match src="address: address [79765,79772]" dest="address: address [68840,68847]"/>
  <match src="array_access [101130,101154]" dest="array_access [39692,39716]"/>
  <match src="type_name [10481,10485]" dest="type_name [11066,11070]"/>
  <match src="(: ( [65191,65192]" dest="(: ( [79255,79256]"/>
  <match src="call_argument [22263,22296]" dest="call_argument [62574,62603]"/>
  <match src="type_name [11521,11528]" dest="type_name [12106,12113]"/>
  <match src="state_mutability [96230,96234]" dest="state_mutability [34794,34798]"/>
  <match src="function_definition [45471,45559]" dest="function_definition [14628,14716]"/>
  <match src="uint256: uint256 [15034,15041]" dest="uint256: uint256 [24825,24832]"/>
  <match src=".: . [9281,9282]" dest=".: . [9866,9867]"/>
  <match src="): ) [55202,55203]" dest="): ) [22292,22293]"/>
  <match src="parenthesized_expression [30433,30802]" dest="parenthesized_expression [45014,45383]"/>
  <match src="primitive_type [10950,10954]" dest="primitive_type [11535,11539]"/>
  <match src="return: return [47194,47200]" dest="return: return [16351,16357]"/>
  <match src="returns: returns [47395,47402]" dest="returns: returns [16552,16559]"/>
  <match src="parameter [7244,7255]" dest="parameter [7829,7840]"/>
  <match src="parameter [78384,78398]" dest="parameter [78703,78720]"/>
  <match src="user_defined_type [7823,7827]" dest="user_defined_type [8408,8412]"/>
  <match src="identifier: b [10511,10512]" dest="identifier: b [11096,11097]"/>
  <match src="number_literal: 0x3a20 [29548,29554]" dest="number_literal: 0x3a20 [44129,44135]"/>
  <match src="{: { [9701,9702]" dest="{: { [10286,10287]"/>
  <match src="identifier: to [54323,54325]" dest="identifier: to [21413,21415]"/>
  <match src=".: . [100887,100888]" dest=".: . [39449,39450]"/>
  <match src="&lt;: &lt; [37512,37513]" dest="&lt;: &lt; [52093,52094]"/>
  <match src="primitive_type [29569,29575]" dest="primitive_type [44150,44156]"/>
  <match src="call_argument [80187,80197]" dest="call_argument [76320,76330]"/>
  <match src="variable_declaration [35191,35210]" dest="variable_declaration [49772,49791]"/>
  <match src="parameter [13194,13209]" dest="parameter [22985,23000]"/>
  <match src="type_name [31610,31617]" dest="type_name [46191,46198]"/>
  <match src="identifier: decrementBalanceOf [99755,99773]" dest="identifier: decrementBalanceOf [38317,38335]"/>
  <match src="identifier: spender [53567,53574]" dest="identifier: spender [20657,20664]"/>
  <match src="call_argument [10577,10578]" dest="call_argument [11162,11163]"/>
  <match src="returns: returns [46925,46932]" dest="returns: returns [16082,16089]"/>
  <match src="identifier: amount0 [54284,54291]" dest="identifier: amount0 [21374,21381]"/>
  <match src="call_expression [8692,8726]" dest="call_expression [9277,9311]"/>
  <match src="(: ( [81063,81064]" dest="(: ( [69925,69926]"/>
  <match src="identifier: COUPON_EXPIRATION [45126,45143]" dest="identifier: COUPON_EXPIRATION [14283,14300]"/>
  <match src="user_defined_type [10344,10348]" dest="user_defined_type [10929,10933]"/>
  <match src="returns: returns [94136,94143]" dest="returns: returns [32700,32707]"/>
  <match src="identifier: balance [100962,100969]" dest="identifier: balance [39524,39531]"/>
  <match src=".: . [100480,100481]" dest=".: . [39042,39043]"/>
  <match src="uint256: uint256 [4626,4633]" dest="uint256: uint256 [5205,5212]"/>
  <match src="=: = [38290,38291]" dest="=: = [52871,52872]"/>
  <match src="block_statement [65753,65842]" dest="block_statement [66528,66575]"/>
  <match src="parameter [32835,32847]" dest="parameter [47416,47428]"/>
  <match src="member_expression [100762,100777]" dest="member_expression [39324,39339]"/>
  <match src="view: view [96230,96234]" dest="view: view [34794,34798]"/>
  <match src="uint256: uint256 [30921,30928]" dest="uint256: uint256 [45502,45509]"/>
  <match src="primitive_type [98421,98428]" dest="primitive_type [36983,36990]"/>
  <match src="call_argument [103860,103866]" dest="call_argument [42422,42428]"/>
  <match src="user_defined_type [106598,106609]" dest="user_defined_type [75807,75818]"/>
  <match src="visibility [98898,98906]" dest="visibility [37460,37468]"/>
  <match src="(: ( [89819,89820]" dest="(: ( [74452,74453]"/>
  <match src="&quot;: &quot; [27144,27145]" dest="&quot;: &quot; [77435,77436]"/>
  <match src="return_type_definition [10677,10691]" dest="return_type_definition [11262,11276]"/>
  <match src="): ) [94122,94123]" dest="): ) [32686,32687]"/>
  <match src="call_expression [9919,9956]" dest="call_expression [10504,10541]"/>
  <match src=".: . [91798,91799]" dest=".: . [30362,30363]"/>
  <match src="): ) [93042,93043]" dest="): ) [31606,31607]"/>
  <match src="type_name [80076,80083]" dest="type_name [60345,60352]"/>
  <match src="function_definition [8551,8734]" dest="function_definition [9136,9319]"/>
  <match src="call_expression [93338,93351]" dest="call_expression [31902,31915]"/>
  <match src="identifier: epoch [81636,81641]" dest="identifier: epoch [71298,71303]"/>
  <match src="user_defined_type [9342,9346]" dest="user_defined_type [9927,9931]"/>
  <match src="identifier: coupons [102859,102866]" dest="identifier: coupons [41421,41428]"/>
  <match src="identifier: epoch [95666,95671]" dest="identifier: epoch [34230,34235]"/>
  <match src="(: ( [46350,46351]" dest="(: ( [15507,15508]"/>
  <match src="identifier: reason [100518,100524]" dest="identifier: reason [39080,39086]"/>
  <match src="identifier: dollar [72025,72031]" dest="identifier: dollar [58057,58063]"/>
  <match src="type_name [67756,67763]" dest="type_name [69950,69957]"/>
  <match src="(: ( [94284,94285]" dest="(: ( [32848,32849]"/>
  <match src="visibility [94392,94398]" dest="visibility [32956,32962]"/>
  <match src="identifier: _state [100204,100210]" dest="identifier: _state [38766,38772]"/>
  <match src="type_name [32858,32865]" dest="type_name [47439,47446]"/>
  <match src="): ) [3875,3876]" dest="): ) [4454,4455]"/>
  <match src="(: ( [80260,80261]" dest="(: ( [69435,69436]"/>
  <match src="identifier: totalSupply [13041,13052]" dest="identifier: totalSupply [22832,22843]"/>
  <match src="uint256: uint256 [51818,51825]" dest="uint256: uint256 [54597,54604]"/>
  <match src="parameter [95625,95632]" dest="parameter [34189,34196]"/>
  <match src="comment: // 15% [45362,45368]" dest="comment: // 15% [14519,14525]"/>
  <match src="}: } [102515,102516]" dest="}: } [41077,41078]"/>
  <match src="identifier: D256 [10499,10503]" dest="identifier: D256 [11084,11088]"/>
  <match src="uint256: uint256 [71055,71062]" dest="uint256: uint256 [54487,54494]"/>
  <match src="identifier: encodePacked [30485,30497]" dest="identifier: encodePacked [45066,45078]"/>
  <match src="identifier: owner [54076,54081]" dest="identifier: owner [21166,21171]"/>
  <match src="member_expression [84249,84261]" dest="member_expression [76343,76355]"/>
  <match src="variable_declaration_statement [36554,36573]" dest="variable_declaration_statement [51135,51154]"/>
  <match src="(: ( [81352,81353]" dest="(: ( [70092,70093]"/>
  <match src="identifier: D256 [8256,8260]" dest="identifier: D256 [8841,8845]"/>
  <match src="): ) [90002,90003]" dest="): ) [74635,74636]"/>
  <match src="function_body [46667,46741]" dest="function_body [15824,15898]"/>
  <match src="type_name [87459,87466]" dest="type_name [28302,28309]"/>
  <match src="identifier: Transfer [53149,53157]" dest="identifier: Transfer [20239,20247]"/>
  <match src="function_definition [9760,9967]" dest="function_definition [10345,10552]"/>
  <match src="identifier: account [73159,73166]" dest="identifier: account [79672,79679]"/>
  <match src=".: . [89923,89924]" dest=".: . [74556,74557]"/>
  <match src="identifier: D256 [11024,11028]" dest="identifier: D256 [11609,11613]"/>
  <match src="primitive_type [33792,33798]" dest="primitive_type [48373,48379]"/>
  <match src="identifier: COLON [31848,31853]" dest="identifier: COLON [46429,46434]"/>
  <match src="function_definition [2370,2562]" dest="function_definition [2949,3141]"/>
  <match src="function_definition [94270,94363]" dest="function_definition [32834,32927]"/>
  <match src="parenthesized_expression [33033,33558]" dest="parenthesized_expression [47614,48139]"/>
  <match src="): ) [37327,37328]" dest="): ) [51908,51909]"/>
  <match src="): ) [105297,105298]" dest="): ) [67365,67366]"/>
  <match src="identifier: epoch [95146,95151]" dest="identifier: epoch [33710,33715]"/>
  <match src="state_mutability [46797,46801]" dest="state_mutability [15954,15958]"/>
  <match src="function: function [101005,101013]" dest="function: function [39567,39575]"/>
  <match src="): ) [45632,45633]" dest="): ) [14789,14790]"/>
  <match src="view: view [54668,54672]" dest="view: view [21758,21762]"/>
  <match src=".: . [99961,99962]" dest=".: . [38523,38524]"/>
  <match src="identifier: account [104210,104217]" dest="identifier: account [42772,42779]"/>
  <match src="member_expression [100536,100550]" dest="member_expression [39098,39112]"/>
  <match src="visibility [100700,100708]" dest="visibility [39262,39270]"/>
  <match src="return_statement [9091,9103]" dest="return_statement [9676,9688]"/>
  <match src=",: , [10155,10156]" dest=",: , [10740,10741]"/>
  <match src=",: , [99927,99928]" dest=",: , [38489,38490]"/>
  <match src="external: external [55464,55472]" dest="external: external [22554,22562]"/>
  <match src="uint256: uint256 [49033,49040]" dest="uint256: uint256 [59927,59934]"/>
  <match src="identifier: candidates [103079,103089]" dest="identifier: candidates [41641,41651]"/>
  <match src="state_mutability [10248,10252]" dest="state_mutability [10833,10837]"/>
  <match src="member_expression [83253,83281]" dest="member_expression [71005,71014]"/>
  <match src="identifier: accounts [101179,101187]" dest="identifier: accounts [39741,39749]"/>
  <match src="parameter [7768,7777]" dest="parameter [8353,8362]"/>
  <match src=",: , [82706,82707]" dest=",: , [58353,58354]"/>
  <match src="type_name [28098,28105]" dest="type_name [54819,54826]"/>
  <match src="return_statement [35892,35906]" dest="return_statement [50473,50487]"/>
  <match src="primitive_type [96656,96663]" dest="primitive_type [35220,35227]"/>
  <match src="primitive_type [38061,38068]" dest="primitive_type [52642,52649]"/>
  <match src="): ) [47423,47424]" dest="): ) [16580,16581]"/>
  <match src="parameter [8465,8476]" dest="parameter [9050,9061]"/>
  <match src="primitive_type [83078,83085]" dest="primitive_type [65835,65842]"/>
  <match src="): ) [10173,10174]" dest="): ) [10758,10759]"/>
  <match src="): ) [23656,23657]" dest="): ) [62914,62915]"/>
  <match src="string [105689,105711]" dest="string [67757,67779]"/>
  <match src="identifier: recipient [21857,21866]" dest="identifier: recipient [63848,63857]"/>
  <match src="member_expression [96831,96848]" dest="member_expression [35395,35412]"/>
  <match src="member_expression [92355,92375]" dest="member_expression [30919,30939]"/>
  <match src="address: address [79823,79830]" dest="address: address [80568,80575]"/>
  <match src="primitive_type [47051,47058]" dest="primitive_type [16208,16215]"/>
  <match src="(: ( [2825,2826]" dest="(: ( [3404,3405]"/>
  <match src="identifier: value [81018,81023]" dest="identifier: value [69860,69865]"/>
  <match src="call_expression [33293,33312]" dest="call_expression [47874,47893]"/>
  <match src="type_alias [64358,64365]" dest="type_alias [64551,64558]"/>
  <match src="identifier: coupons [95076,95083]" dest="identifier: coupons [33640,33647]"/>
  <match src="identifier: z [38835,38836]" dest="identifier: z [53416,53417]"/>
  <match src="parameter [54147,54156]" dest="parameter [21237,21246]"/>
  <match src="identifier: kLast [55067,55072]" dest="identifier: kLast [22157,22162]"/>
  <match src="primitive_type [64701,64708]" dest="primitive_type [80506,80513]"/>
  <match src="primitive_type [79823,79830]" dest="primitive_type [80568,80575]"/>
  <match src="parameter [2456,2463]" dest="parameter [3035,3042]"/>
  <match src="return: return [7605,7611]" dest="return: return [8190,8196]"/>
  <match src="call_expression [93609,93634]" dest="call_expression [32173,32198]"/>
  <match src="identifier: stringifyTruncated [31797,31815]" dest="identifier: stringifyTruncated [46378,46396]"/>
  <match src="identifier: statusOf [93757,93765]" dest="identifier: statusOf [32321,32329]"/>
  <match src="[: [ [99864,99865]" dest="[: [ [38426,38427]"/>
  <match src="{: { [102585,102586]" dest="{: { [41147,41148]"/>
  <match src="visibility [37999,38006]" dest="visibility [52580,52587]"/>
  <match src="function_definition [82558,83551]" dest="function_definition [58233,58669]"/>
  <match src="uint256: uint256 [92872,92879]" dest="uint256: uint256 [31436,31443]"/>
  <match src=",: , [100396,100397]" dest=",: , [38958,38959]"/>
  <match src="return_statement [10848,10878]" dest="return_statement [11433,11463]"/>
  <match src="uint256: uint256 [7341,7348]" dest="uint256: uint256 [7926,7933]"/>
  <match src="function: function [54576,54584]" dest="function: function [21666,21674]"/>
  <match src="): ) [39086,39087]" dest="): ) [53667,53668]"/>
  <match src="(: ( [31677,31678]" dest="(: ( [46258,46259]"/>
  <match src="comment: // put the input bytes into the result [35143,35181]" dest="comment: // put the input bytes into the result [49724,49762]"/>
  <match src="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [38100,38180]" dest="comment: // bytes32 are &quot;0x&quot; followed by 32 bytes of data which take up 2 characters each [52681,52761]"/>
  <match src="function_body [93168,93225]" dest="function_body [31732,31789]"/>
  <match src="identifier: staged [93211,93217]" dest="identifier: staged [31775,31781]"/>
  <match src="primitive_type [7521,7528]" dest="primitive_type [8106,8113]"/>
  <match src="identifier: timestamp [59139,59148]" dest="identifier: timestamp [80846,80855]"/>
  <match src="): ) [37054,37055]" dest="): ) [51635,51636]"/>
  <match src="function_definition [95695,95831]" dest="function_definition [34259,34395]"/>
  <match src="modifier_invocation [106639,106650]" dest="modifier_invocation [80639,80650]"/>
  <match src="member_expression [9710,9720]" dest="member_expression [10295,10305]"/>
  <match src="identifier: abi [30009,30012]" dest="identifier: abi [44590,44593]"/>
  <match src="public: public [89578,89584]" dest="public: public [74211,74217]"/>
  <match src="parameter [32858,32872]" dest="parameter [47439,47453]"/>
  <match src="function: function [98530,98538]" dest="function: function [37092,37100]"/>
  <match src="uint256: uint256 [69902,69909]" dest="uint256: uint256 [68952,68959]"/>
  <match src="]: ] [38334,38335]" dest="]: ] [52915,52916]"/>
  <match src="primitive_type [95281,95288]" dest="primitive_type [33845,33852]"/>
  <match src="{: { [32274,32275]" dest="{: { [46855,46856]"/>
  <match src="for: for [91176,91179]" dest="for: for [29740,29743]"/>
  <match src="for: for [91208,91211]" dest="for: for [29772,29775]"/>
  <match src="call_argument [30575,30580]" dest="call_argument [45156,45161]"/>
  <match src="identifier: EpochStrategy [45781,45794]" dest="identifier: EpochStrategy [14938,14951]"/>
  <match src="): ) [46665,46666]" dest="): ) [15822,15823]"/>
  <match src="user_defined_type [8383,8387]" dest="user_defined_type [8968,8972]"/>
  <match src="identifier: account [101510,101517]" dest="identifier: account [40072,40079]"/>
  <match src="function: function [53525,53533]" dest="function: function [20615,20623]"/>
  <match src="return_type_definition [97066,97088]" dest="return_type_definition [35630,35652]"/>
  <match src="identifier: abi [31092,31095]" dest="identifier: abi [45673,45676]"/>
  <match src="call_expression [9052,9067]" dest="call_expression [9637,9652]"/>
  <match src="assignment_expression [99618,99675]" dest="assignment_expression [38180,38237]"/>
  <match src="memory: memory [100405,100411]" dest="memory: memory [38967,38973]"/>
  <match src="call_expression [93436,93473]" dest="call_expression [32000,32037]"/>
  <match src="identifier: price0CumulativeLast [54933,54953]" dest="identifier: price0CumulativeLast [22023,22043]"/>
  <match src="): ) [83919,83920]" dest="): ) [58148,58149]"/>
  <match src=".: . [98946,98947]" dest=".: . [37508,37509]"/>
  <match src=".: . [92361,92362]" dest=".: . [30925,30926]"/>
  <match src="identifier: couponAllowances [94195,94211]" dest="identifier: couponAllowances [32759,32775]"/>
  <match src="]: ] [100193,100194]" dest="]: ] [38755,38756]"/>
  <match src="parameter [46646,46665]" dest="parameter [15803,15822]"/>
  <match src="): ) [31820,31821]" dest="): ) [46401,46402]"/>
  <match src="(: ( [107008,107009]" dest="(: ( [66377,66378]"/>
  <match src="comment: // all bytes are zero [35944,35965]" dest="comment: // all bytes are zero [50525,50546]"/>
  <match src=",: , [82390,82391]" dest=",: , [77780,77781]"/>
  <match src="&quot;: &quot; [22903,22904]" dest="&quot;: &quot; [62680,62681]"/>
  <match src="(: ( [80961,80962]" dest="(: ( [79430,79431]"/>
  <match src="call_argument [75125,75131]" dest="call_argument [63069,63075]"/>
  <match src="private: private [45165,45172]" dest="private: private [14322,14329]"/>
  <match src="primitive_type [10262,10266]" dest="primitive_type [10847,10851]"/>
  <match src="identifier: stringifyTruncated [34585,34603]" dest="identifier: stringifyTruncated [49166,49184]"/>
  <match src="function_body [7841,7911]" dest="function_body [8426,8496]"/>
  <match src="call_expression [33864,33888]" dest="call_expression [48445,48469]"/>
  <match src="identifier: msg [80562,80565]" dest="identifier: msg [69719,69722]"/>
  <match src="): ) [53272,53273]" dest="): ) [20362,20363]"/>
  <match src="identifier: outstandingCoupons [94973,94991]" dest="identifier: outstandingCoupons [33537,33555]"/>
  <match src="block_statement [9030,9079]" dest="block_statement [9615,9664]"/>
  <match src=".: . [95372,95373]" dest=".: . [33936,33937]"/>
  <match src="function_body [95183,95248]" dest="function_body [33747,33812]"/>
  <match src="uint256: uint256 [93296,93303]" dest="uint256: uint256 [31860,31867]"/>
  <match src="array_access [38667,38685]" dest="array_access [53248,53266]"/>
  <match src="memory: memory [10211,10217]" dest="memory: memory [10796,10802]"/>
  <match src="identifier: amount [101080,101086]" dest="identifier: amount [39642,39648]"/>
  <match src="function_definition [8360,8543]" dest="function_definition [8945,9128]"/>
  <match src="block_statement [52143,52342]" dest="block_statement [63688,63808]"/>
  <match src="(: ( [7284,7285]" dest="(: ( [7869,7870]"/>
  <match src="type_name [87682,87689]" dest="type_name [28525,28532]"/>
  <match src="primitive_type [53158,53165]" dest="primitive_type [20248,20255]"/>
  <match src="(: ( [33058,33059]" dest="(: ( [47639,47640]"/>
  <match src="returns: returns [97066,97073]" dest="returns: returns [35630,35637]"/>
  <match src="): ) [9066,9067]" dest="): ) [9651,9652]"/>
  <match src="parameter [95589,95602]" dest="parameter [34153,34166]"/>
  <match src="call_argument [50132,50141]" dest="call_argument [54995,55037]"/>
  <match src="identifier: amount [98568,98574]" dest="identifier: amount [37130,37136]"/>
  <match src="identifier: b [2402,2403]" dest="identifier: b [2981,2982]"/>
  <match src="identifier: b [5979,5980]" dest="identifier: b [6558,6559]"/>
  <match src="identifier: must [31017,31021]" dest="identifier: must [45598,45602]"/>
  <match src="primitive_type [13234,13241]" dest="primitive_type [23025,23032]"/>
  <match src="{: { [4509,4510]" dest="{: { [5088,5089]"/>
  <match src="identifier: outstanding [102867,102878]" dest="identifier: outstanding [41429,41440]"/>
  <match src="variable_declaration_statement [2516,2534]" dest="variable_declaration_statement [3095,3113]"/>
  <match src="type_name [54489,54496]" dest="type_name [21579,21586]"/>
  <match src="parameter [7501,7510]" dest="parameter [8086,8095]"/>
  <match src="return_type_definition [53895,53912]" dest="return_type_definition [20985,21002]"/>
  <match src="expression_statement [103017,103062]" dest="expression_statement [41579,41624]"/>
  <match src="parameter [93532,93547]" dest="parameter [32096,32111]"/>
  <match src="(: ( [81623,81624]" dest="(: ( [71285,71286]"/>
  <match src=".: . [92792,92793]" dest=".: . [31356,31357]"/>
  <match src="identifier: epoch [101205,101210]" dest="identifier: epoch [39767,39772]"/>
  <match src="bytes32: bytes32 [91233,91240]" dest="bytes32: bytes32 [29797,29804]"/>
  <match src="primitive_type [44377,44384]" dest="primitive_type [13534,13541]"/>
  <match src="assignment_expression [37881,37891]" dest="assignment_expression [52462,52472]"/>
  <match src="return_type_definition [11512,11529]" dest="return_type_definition [12097,12114]"/>
  <match src="memory: memory [10349,10355]" dest="memory: memory [10934,10940]"/>
  <match src="): ) [54689,54690]" dest="): ) [21779,21780]"/>
  <match src="returns: returns [46216,46223]" dest="returns: returns [15373,15380]"/>
  <match src="state_mutability [47691,47695]" dest="state_mutability [16848,16852]"/>
  <match src="function: function [53613,53621]" dest="function: function [20703,20711]"/>
  <match src="block_statement [36143,36180]" dest="block_statement [50724,50761]"/>
  <match src="bool: bool [98311,98315]" dest="bool: bool [36873,36877]"/>
  <match src="parameter [93258,93273]" dest="parameter [31822,31837]"/>
  <match src="type_name [36260,36267]" dest="type_name [50841,50848]"/>
  <match src="(: ( [68228,68229]" dest="(: ( [61642,61643]"/>
  <match src="identifier: supply [99962,99968]" dest="identifier: supply [38524,38530]"/>
  <match src="function_definition [53342,53392]" dest="function_definition [20432,20482]"/>
  <match src="member_expression [101285,101298]" dest="member_expression [39847,39860]"/>
  <match src="): ) [15048,15049]" dest="): ) [24839,24840]"/>
  <match src="): ) [65821,65822]" dest="): ) [66562,66563]"/>
  <match src="==: == [81204,81206]" dest="==: == [69982,69984]"/>
  <match src="function_definition [2813,3284]" dest="function_definition [3392,3863]"/>
  <match src=".: . [103023,103024]" dest=".: . [41585,41586]"/>
  <match src="user_defined_type [87299,87306]" dest="user_defined_type [28142,28149]"/>
  <match src="type_name [87508,87515]" dest="type_name [28351,28358]"/>
  <match src="call_argument [75659,75665]" dest="call_argument [63587,63593]"/>
  <match src="identifier: amount [100806,100812]" dest="identifier: amount [39368,39374]"/>
  <match src="(: ( [91746,91747]" dest="(: ( [30310,30311]"/>
  <match src="uint256: uint256 [22836,22843]" dest="uint256: uint256 [55349,55356]"/>
  <match src="identifier: balanceCheck [80341,80353]" dest="identifier: balanceCheck [55843,55855]"/>
  <match src="identifier: _state [103017,103023]" dest="identifier: _state [41579,41585]"/>
  <match src="identifier: self [11036,11040]" dest="identifier: self [11621,11625]"/>
  <match src="identifier: push [102497,102501]" dest="identifier: push [41059,41063]"/>
  <match src="call_expression [102633,102658]" dest="call_expression [41195,41220]"/>
  <match src="function_body [31001,31510]" dest="function_body [45582,46091]"/>
  <match src="identifier: totalSupply [93324,93335]" dest="identifier: totalSupply [31888,31899]"/>
  <match src="return_type_definition [50983,50997]" dest="return_type_definition [26142,26156]"/>
  <match src="primitive_type [101818,101825]" dest="primitive_type [40380,40387]"/>
  <match src="member_expression [33081,33097]" dest="member_expression [47662,47678]"/>
  <match src="array_access [100474,100498]" dest="array_access [39036,39060]"/>
  <match src="expression_statement [78172,78228]" dest="expression_statement [77710,77750]"/>
  <match src="view: view [55032,55036]" dest="view: view [22122,22126]"/>
  <match src="memory: memory [45755,45761]" dest="memory: memory [14912,14918]"/>
  <match src="memory: memory [10780,10786]" dest="memory: memory [11365,11371]"/>
  <match src="identifier: require [22872,22879]" dest="identifier: decrementBalanceOfCoupons [62615,62640]"/>
  <match src="string [83954,83984]" dest="string [58183,58206]"/>
  <match src="call_argument [81353,81366]" dest="call_argument [70093,70106]"/>
  <match src="string_literal [36165,36168]" dest="string_literal [50746,50749]"/>
  <match src="new_expression [38212,38221]" dest="new_expression [52793,52802]"/>
  <match src="identifier: balance [99553,99560]" dest="identifier: balance [38115,38122]"/>
  <match src="[: [ [101710,101711]" dest="[: [ [40272,40273]"/>
  <match src="identifier: bstr [36935,36939]" dest="identifier: bstr [51516,51520]"/>
  <match src="}: } [103690,103691]" dest="}: } [42252,42253]"/>
  <match src="contract_declaration [88977,90547]" dest="contract_declaration [73610,75180]"/>
  <match src="): ) [101344,101345]" dest="): ) [39906,39907]"/>
  <match src="call_argument [37356,37377]" dest="call_argument [51937,51958]"/>
  <match src="type_name [44347,44354]" dest="type_name [13504,13511]"/>
  <match src="call_expression [78258,78298]" dest="call_expression [59071,59107]"/>
  <match src="comment: /* Chain */ [43698,43709]" dest="comment: /* Chain */ [12855,12866]"/>
  <match src="identifier: result [38667,38673]" dest="identifier: result [53248,53254]"/>
  <match src="): ) [55407,55408]" dest="): ) [22497,22498]"/>
  <match src="identifier: stringifyTruncated [33207,33225]" dest="identifier: stringifyTruncated [47788,47806]"/>
  <match src="using: using [91161,91166]" dest="using: using [29725,29730]"/>
  <match src="&quot;: &quot; [83004,83005]" dest="&quot;: &quot; [78209,78210]"/>
  <match src="}: } [47478,47479]" dest="}: } [16635,16636]"/>
  <match src="return_statement [98079,98092]" dest="return_statement [36641,36654]"/>
  <match src="}: } [93224,93225]" dest="}: } [31788,31789]"/>
  <match src="type_name [37042,37047]" dest="type_name [51623,51628]"/>
  <match src=".: . [83291,83292]" dest=".: . [71029,71030]"/>
  <match src="internal: internal [45718,45726]" dest="internal: internal [14875,14883]"/>
  <match src="identifier: Candidate [87338,87347]" dest="identifier: Candidate [28181,28190]"/>
  <match src="function_definition [1897,2033]" dest="function_definition [2476,2612]"/>
  <match src="primitive_type [15068,15072]" dest="primitive_type [24859,24863]"/>
  <match src="returns: returns [95019,95026]" dest="returns: returns [33583,33590]"/>
  <match src="identifier: RPAREN [33495,33501]" dest="identifier: RPAREN [48076,48082]"/>
  <match src="{: { [46385,46386]" dest="{: { [15542,15543]"/>
  <match src="call_argument [74847,74853]" dest="call_argument [55399,55405]"/>
  <match src="function: function [47648,47656]" dest="function: function [16805,16813]"/>
  <match src="return_type_definition [35104,35126]" dest="return_type_definition [49685,49707]"/>
  <match src="function: function [7476,7484]" dest="function: function [8061,8069]"/>
  <match src="address: address [78368,78375]" dest="address: address [77883,77890]"/>
  <match src="address: address [49190,49197]" dest="address: address [54903,54910]"/>
  <match src="state_variable_declaration [91233,91347]" dest="state_variable_declaration [29797,29911]"/>
  <match src="member_expression [100536,100557]" dest="member_expression [39098,39119]"/>
  <match src=".: . [105372,105373]" dest=".: . [67440,67441]"/>
  <match src="primitive_type [54489,54496]" dest="primitive_type [21579,21586]"/>
  <match src="): ) [82512,82513]" dest="): ) [70823,70824]"/>
  <match src="public: public [96635,96641]" dest="public: public [35199,35205]"/>
  <match src="(: ( [93962,93963]" dest="(: ( [32526,32527]"/>
  <match src=",: , [53795,53796]" dest=",: , [20885,20886]"/>
  <match src="identifier: input [39221,39226]" dest="identifier: input [53802,53807]"/>
  <match src="identifier: c [4634,4635]" dest="identifier: c [5213,5214]"/>
  <match src="type_cast_expression [39210,39250]" dest="type_cast_expression [53791,53831]"/>
  <match src="type_name [54354,54361]" dest="type_name [21444,21451]"/>
  <match src="type_cast_expression [30452,30787]" dest="type_cast_expression [45033,45368]"/>
  <match src="primitive_type [93585,93592]" dest="primitive_type [32149,32156]"/>
  <match src="}: } [102737,102738]" dest="}: } [41299,41300]"/>
  <match src="function_definition [13032,13087]" dest="function_definition [22823,22878]"/>
  <match src="type_name [95957,95971]" dest="type_name [34521,34535]"/>
  <match src="identifier: msg [80241,80244]" dest="identifier: msg [69416,69419]"/>
  <match src="type_name [10025,10029]" dest="type_name [10610,10614]"/>
  <match src="{: { [47757,47758]" dest="{: { [16914,16915]"/>
  <match src="identifier: getOracleReserveMinimum [45576,45599]" dest="identifier: getOracleReserveMinimum [14733,14756]"/>
  <match src="{: { [92444,92445]" dest="{: { [31008,31009]"/>
  <match src="identifier: LPAREN [30660,30666]" dest="identifier: LPAREN [45241,45247]"/>
  <match src="parameter [30337,30353]" dest="parameter [44918,44934]"/>
  <match src="call_expression [99563,99607]" dest="call_expression [38125,38169]"/>
  <match src="identifier: recipient [98017,98026]" dest="identifier: recipient [36579,36588]"/>
  <match src="visibility [55138,55146]" dest="visibility [22228,22236]"/>
  <match src="return_statement [93179,93218]" dest="return_statement [31743,31782]"/>
  <match src="identifier: EpochStrategy [45741,45754]" dest="identifier: EpochStrategy [14898,14911]"/>
  <match src="call_expression [33124,33148]" dest="call_expression [47705,47729]"/>
  <match src="number_literal: 0 [3121,3122]" dest="number_literal: 0 [3700,3701]"/>
  <match src="call_argument [35992,35993]" dest="call_argument [50573,50574]"/>
  <match src="return_type_definition [47042,47059]" dest="return_type_definition [16199,16216]"/>
  <match src="identifier: getInitialStakeMultiple [45935,45958]" dest="identifier: getInitialStakeMultiple [15092,15115]"/>
  <match src="}: } [11604,11605]" dest="}: } [12189,12190]"/>
  <match src="]: ] [104217,104218]" dest="]: ] [42779,42780]"/>
  <match src="visibility [91726,91732]" dest="visibility [30290,30296]"/>
  <match src="[: [ [101932,101933]" dest="[: [ [40494,40495]"/>
  <match src="member_expression [11092,11106]" dest="member_expression [11677,11691]"/>
  <match src="identifier: Decimal [46685,46692]" dest="identifier: Decimal [15842,15849]"/>
  <match src="function_body [105299,105467]" dest="function_body [67367,67535]"/>
  <match src="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [89593,89730]" dest="comment: /**      * @dev Upgrades the proxy to a new implementation.      * @param newImplementation Address of the new implementation.      */ [74226,74363]"/>
  <match src="visibility [55075,55083]" dest="visibility [22165,22173]"/>
  <match src="identifier: value [82522,82527]" dest="identifier: value [70833,70838]"/>
  <match src="=: = [73098,73099]" dest="=: = [79646,79647]"/>
  <match src=":: : [45850,45851]" dest=":: : [15007,15008]"/>
  <match src="visibility [33706,33714]" dest="visibility [48287,48295]"/>
  <match src="): ) [81703,81704]" dest="): ) [70400,70401]"/>
  <match src="user_defined_type [94599,94622]" dest="user_defined_type [33163,33186]"/>
  <match src="): ) [99606,99607]" dest="): ) [38168,38169]"/>
  <match src="}: } [87321,87322]" dest="}: } [28164,28165]"/>
  <match src="identifier: reason [101224,101230]" dest="identifier: reason [39786,39792]"/>
  <match src="identifier: ratio [67503,67508]" dest="identifier: ratio [79656,79661]"/>
  <match src="call_argument [33883,33887]" dest="call_argument [48464,48468]"/>
  <match src="member_expression [98618,98639]" dest="member_expression [37180,37201]"/>
  <match src="{: { [96391,96392]" dest="{: { [34955,34956]"/>
  <match src="identifier: Decimal [47404,47411]" dest="identifier: Decimal [16561,16568]"/>
  <match src="identifier: require [1547,1554]" dest="identifier: require [2126,2133]"/>
  <match src="(: ( [10205,10206]" dest="(: ( [10790,10791]"/>
  <match src=".: . [81737,81738]" dest=".: . [70966,70967]"/>
  <match src="call_expression [33371,33390]" dest="call_expression [47952,47971]"/>
  <match src="call_argument [33339,33344]" dest="call_argument [47920,47925]"/>
  <match src="if_statement [93605,93676]" dest="if_statement [32169,32240]"/>
  <match src="call_expression [31382,31401]" dest="call_expression [45963,45982]"/>
  <match src="using: using [6796,6801]" dest="using: using [7381,7386]"/>
  <match src="variable_declaration [77908,77926]" dest="variable_declaration [76993,77007]"/>
  <match src="binary_expression [36292,36298]" dest="binary_expression [50873,50879]"/>
  <match src="identifier: sender [54370,54376]" dest="identifier: sender [21460,21466]"/>
  <match src="): ) [21613,21614]" dest="): ) [63383,63384]"/>
  <match src="uint256: uint256 [79994,80001]" dest="uint256: uint256 [68937,68944]"/>
  <match src="type_name [37973,37980]" dest="type_name [52554,52561]"/>
  <match src="return: return [8685,8691]" dest="return: return [9270,9276]"/>
  <match src="primitive_type [54738,54745]" dest="primitive_type [21828,21835]"/>
  <match src="identifier: RPAREN [31428,31434]" dest="identifier: RPAREN [46009,46015]"/>
  <match src="state_mutability [33720,33724]" dest="state_mutability [48301,48305]"/>
  <match src="primitive_type [98311,98315]" dest="primitive_type [36873,36877]"/>
  <match src="returns: returns [94897,94904]" dest="returns: returns [33461,33468]"/>
  <match src="identifier: Decimal [64358,64365]" dest="identifier: Decimal [64551,64558]"/>
  <match src="}: } [93937,93938]" dest="}: } [32501,32502]"/>
  <match src="identifier: isInitialized [105814,105827]" dest="identifier: isInitialized [67882,67895]"/>
  <match src="identifier: EPOCH_OFFSET [44402,44414]" dest="identifier: EPOCH_OFFSET [13559,13571]"/>
  <match src="=: = [44114,44115]" dest="=: = [13271,13272]"/>
  <match src="): ) [98155,98156]" dest="): ) [36717,36718]"/>
  <match src="uint256: uint256 [98421,98428]" dest="uint256: uint256 [36983,36990]"/>
  <match src="string: string [2405,2411]" dest="string: string [2984,2990]"/>
  <match src="pure: pure [3796,3800]" dest="pure: pure [4375,4379]"/>
  <match src="primitive_type [94662,94669]" dest="primitive_type [33226,33233]"/>
  <match src="type_name [96068,96075]" dest="type_name [34632,34639]"/>
  <match src="identifier: require [3199,3206]" dest="identifier: require [3778,3785]"/>
  <match src="call_expression [81822,81942]" dest="call_expression [79029,79230]"/>
  <match src="identifier: add [7727,7730]" dest="identifier: add [8312,8315]"/>
  <match src="(: ( [65616,65617]" dest="(: ( [66277,66278]"/>
  <match src="type_name [11024,11028]" dest="type_name [11609,11613]"/>
  <match src="=: = [73237,73238]" dest="=: = [62113,62114]"/>
  <match src="array_access [103588,103616]" dest="array_access [42150,42178]"/>
  <match src="{: { [47572,47573]" dest="{: { [16729,16730]"/>
  <match src="parameter [37042,37054]" dest="parameter [51623,51635]"/>
  <match src="identifier: value [10302,10307]" dest="identifier: value [10887,10892]"/>
  <match src="visibility [94883,94891]" dest="visibility [33447,33455]"/>
  <match src="member_expression [80755,80765]" dest="member_expression [70931,70941]"/>
  <match src="identifier: LPAREN [31933,31939]" dest="identifier: LPAREN [46514,46520]"/>
  <match src="address: address [97904,97911]" dest="address: address [36466,36473]"/>
  <match src="identifier: amount [98668,98674]" dest="identifier: amount [37230,37236]"/>
  <match src="identifier: stringifyTruncated [31135,31153]" dest="identifier: stringifyTruncated [45716,45734]"/>
  <match src="): ) [5926,5927]" dest="): ) [6505,6506]"/>
  <match src="type_name [7396,7400]" dest="type_name [7981,7985]"/>
  <match src="uint256: uint256 [34315,34322]" dest="uint256: uint256 [48896,48903]"/>
  <match src="number_literal: 64 [38816,38818]" dest="number_literal: 64 [53397,53399]"/>
  <match src="call_argument [82307,82342]" dest="call_argument [78557,78571]"/>
  <match src="identifier: sub [8129,8132]" dest="identifier: sub [8714,8717]"/>
  <match src="call_argument [30607,30633]" dest="call_argument [45188,45214]"/>
  <match src="return_statement [98328,98341]" dest="return_statement [36890,36903]"/>
  <match src="member_expression [100955,100969]" dest="member_expression [39517,39531]"/>
  <match src="call_expression [27851,27934]" dest="call_expression [77247,77315]"/>
  <match src="call_argument [105813,105845]" dest="call_argument [67881,67913]"/>
  <match src="(: ( [10570,10571]" dest="(: ( [11155,11156]"/>
  <match src="call_expression [21502,21572]" dest="call_expression [63264,63342]"/>
  <match src="primitive_type [3810,3817]" dest="primitive_type [4389,4396]"/>
  <match src="uint256: uint256 [69876,69883]" dest="uint256: uint256 [69051,69058]"/>
  <match src="identifier: Require [49934,49941]" dest="identifier: Require [61838,61845]"/>
  <match src=".: . [31757,31758]" dest=".: . [46338,46339]"/>
  <match src="comment: // https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method [55534,55618]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [68050,68631]"/>
  <match src="): ) [27933,27934]" dest="): ) [77314,77315]"/>
  <match src=",: , [30633,30634]" dest=",: , [45214,45215]"/>
  <match src="call_expression [11356,11394]" dest="call_expression [11941,11979]"/>
  <match src="(: ( [39075,39076]" dest="(: ( [53656,53657]"/>
  <match src="variable_declaration_statement [66547,66589]" dest="variable_declaration_statement [64878,64922]"/>
  <match src="identifier: numerator [11240,11249]" dest="identifier: numerator [11825,11834]"/>
  <match src="identifier: c [2524,2525]" dest="identifier: c [3103,3104]"/>
  <match src="binary_expression [36825,36831]" dest="binary_expression [51406,51412]"/>
  <match src="solidity: solidity [1128,1136]" dest="solidity: solidity [1130,1138]"/>
  <match src="revert_statement [29955,30219]" dest="revert_statement [44536,44800]"/>
  <match src="type_cast_expression [83870,83883]" dest="type_cast_expression [58776,58789]"/>
  <match src="call_argument [98676,98682]" dest="call_argument [37238,37244]"/>
  <match src="member_expression [98918,98937]" dest="member_expression [37480,37499]"/>
  <match src="function: function [7718,7726]" dest="function: function [8303,8311]"/>
  <match src="return_type_definition [93150,93167]" dest="return_type_definition [31714,31731]"/>
  <match src="identifier: from [7326,7330]" dest="identifier: from [7911,7915]"/>
  <match src="identifier: period [87491,87497]" dest="identifier: period [28334,28340]"/>
  <match src="identifier: Deposit [80373,80380]" dest="identifier: Deposit [69521,69528]"/>
  <match src="(: ( [38296,38297]" dest="(: ( [52877,52878]"/>
  <match src="primitive_type [11065,11072]" dest="primitive_type [11650,11657]"/>
  <match src="identifier: amount [98036,98042]" dest="identifier: amount [36598,36604]"/>
  <match src=",: , [21445,21446]" dest=",: , [63192,63193]"/>
  <match src="bytes32: bytes32 [54136,54143]" dest="bytes32: bytes32 [21226,21233]"/>
  <match src="member_expression [8089,8094]" dest="member_expression [8674,8679]"/>
  <match src="function: function [1441,1449]" dest="function: function [2020,2028]"/>
  <match src="uint256: uint256 [100684,100691]" dest="uint256: uint256 [39246,39253]"/>
  <match src="primitive_type [36805,36810]" dest="primitive_type [51386,51391]"/>
  <match src=".: . [99552,99553]" dest=".: . [38114,38115]"/>
  <match src="visibility [7088,7096]" dest="visibility [7673,7681]"/>
  <match src="identifier: D256 [46654,46658]" dest="identifier: D256 [15811,15815]"/>
  <match src="primitive_type [55222,55226]" dest="primitive_type [22312,22316]"/>
  <match src="identifier: Provide [83497,83504]" dest="identifier: Commit [78633,78639]"/>
  <match src="parameter [54873,54889]" dest="parameter [21963,21979]"/>
  <match src="): ) [38710,38711]" dest="): ) [53291,53292]"/>
  <match src="primitive_type [102561,102568]" dest="primitive_type [41123,41130]"/>
  <match src="expression_statement [99849,99937]" dest="expression_statement [38411,38499]"/>
  <match src=",: , [10791,10792]" dest=",: , [11376,11377]"/>
  <match src="&quot;: &quot; [65290,65291]" dest="&quot;: &quot; [79361,79362]"/>
  <match src="function: function [30245,30253]" dest="function: function [44826,44834]"/>
  <match src="identifier: numerator [11367,11376]" dest="identifier: numerator [11952,11961]"/>
  <match src="identifier: amount [100142,100148]" dest="identifier: amount [38704,38710]"/>
  <match src="expression_statement [36730,36734]" dest="expression_statement [51311,51315]"/>
  <match src="parameter [95900,95915]" dest="parameter [34464,34479]"/>
  <match src="array_access [100720,100759]" dest="array_access [39282,39321]"/>
  <match src="(: ( [80186,80187]" dest="(: ( [76319,76320]"/>
  <match src="member_expression [76891,76902]" dest="member_expression [60758,60769]"/>
  <match src="identifier: ASCII_ZERO [29384,29394]" dest="identifier: ASCII_ZERO [43965,43975]"/>
  <match src="call_expression [34827,34846]" dest="call_expression [49408,49427]"/>
  <match src="primitive_type [29824,29828]" dest="primitive_type [44405,44409]"/>
  <match src="type_name [87075,87082]" dest="type_name [27918,27925]"/>
  <match src="primitive_type [76007,76014]" dest="primitive_type [61606,61613]"/>
  <match src="string [26884,26917]" dest="string [76609,76638]"/>
  <match src="identifier: amount [103860,103866]" dest="identifier: amount [42422,42428]"/>
  <match src="identifier: b [10577,10578]" dest="identifier: b [11162,11163]"/>
  <match src="): ) [104277,104278]" dest="): ) [42839,42840]"/>
  <match src="identifier: a [2489,2490]" dest="identifier: a [3068,3069]"/>
  <match src="view: view [96506,96510]" dest="view: view [35070,35074]"/>
  <match src="expression_statement [82455,82470]" dest="expression_statement [55295,55310]"/>
  <match src="uint256: uint256 [1955,1962]" dest="uint256: uint256 [2534,2541]"/>
  <match src="return_type_definition [14644,14658]" dest="return_type_definition [24435,24449]"/>
  <match src="function_definition [7317,7468]" dest="function_definition [7902,8053]"/>
  <match src="function_definition [7718,7911]" dest="function_definition [8303,8496]"/>
  <match src="returns: returns [2862,2869]" dest="returns: returns [3441,3448]"/>
  <match src="primitive_type [89238,89245]" dest="primitive_type [73871,73878]"/>
  <match src="return_statement [94515,94553]" dest="return_statement [33079,33117]"/>
  <match src="uint: uint [54210,54214]" dest="uint: uint [21300,21304]"/>
  <match src="primitive_type [55156,55160]" dest="primitive_type [22246,22250]"/>
  <match src="uint256: uint256 [101057,101064]" dest="uint256: uint256 [39619,39626]"/>
  <match src="}: } [97208,97209]" dest="}: } [35772,35773]"/>
  <match src="address: address [95900,95907]" dest="address: address [34464,34471]"/>
  <match src="primitive_type [97904,97911]" dest="primitive_type [36466,36473]"/>
  <match src="member_expression [100474,100489]" dest="member_expression [39036,39051]"/>
  <match src="event_paramater [89516,89546]" dest="event_paramater [74149,74179]"/>
  <match src="number_literal: 0 [36578,36579]" dest="number_literal: 0 [51159,51160]"/>
  <match src=".: . [99356,99357]" dest=".: . [37918,37919]"/>
  <match src="identifier: stringify [34827,34836]" dest="identifier: stringify [49408,49417]"/>
  <match src="{: { [72007,72008]" dest="{: { [58019,58020]"/>
  <match src="private: private [64399,64406]" dest="private: private [59863,59870]"/>
  <match src="identifier: shift [38679,38684]" dest="identifier: shift [53260,53265]"/>
  <match src="primitive_type [98258,98265]" dest="primitive_type [36820,36827]"/>
  <match src="internal: internal [31639,31647]" dest="internal: internal [46220,46228]"/>
  <match src="&quot;: &quot; [21652,21653]" dest="&quot;: &quot; [63430,63431]"/>
  <match src="identifier: allowance [53534,53543]" dest="identifier: allowance [20624,20633]"/>
  <match src="type_name [65942,65949]" dest="type_name [78044,78051]"/>
  <match src="identifier: D256 [67115,67119]" dest="identifier: D256 [66305,66309]"/>
  <match src=".: . [96575,96576]" dest=".: . [35139,35140]"/>
  <match src="): ) [83368,83369]" dest="): ) [62769,62770]"/>
  <match src="(: ( [33004,33005]" dest="(: ( [47585,47586]"/>
  <match src="identifier: debt [98955,98959]" dest="identifier: debt [37517,37521]"/>
  <match src="function_body [81044,81666]" dest="function_body [69906,70363]"/>
  <match src="visibility [10239,10247]" dest="visibility [10824,10832]"/>
  <match src="function_definition [62912,62936]" dest="function_definition [26771,26795]"/>
  <match src="type_name [11439,11443]" dest="type_name [12024,12028]"/>
  <match src=",: , [4600,4601]" dest=",: , [5179,5180]"/>
  <match src="{: { [1203,1204]" dest="{: { [1782,1783]"/>
  <match src="parameter [77746,77753]" dest="parameter [55943,55950]"/>
  <match src="primitive_type [103152,103159]" dest="primitive_type [41714,41721]"/>
  <match src=",: , [3842,3843]" dest=",: , [4421,4422]"/>
  <match src="type_name [47551,47563]" dest="type_name [16708,16720]"/>
  <match src="[: [ [102851,102852]" dest="[: [ [41413,41414]"/>
  <match src="]: ] [104015,104016]" dest="]: ] [42577,42578]"/>
  <match src="primitive_type [2394,2401]" dest="primitive_type [2973,2980]"/>
  <match src="(: ( [73158,73159]" dest="(: ( [79671,79672]"/>
  <match src="block_statement [11570,11605]" dest="block_statement [12155,12190]"/>
  <match src="call_argument [21849,21855]" dest="call_argument [63840,63846]"/>
  <match src="type_name [15015,15022]" dest="type_name [24806,24813]"/>
  <match src="string [21717,21757]" dest="string [55799,55829]"/>
  <match src=".: . [94608,94609]" dest=".: . [33172,33173]"/>
  <match src="primitive_type [79413,79420]" dest="primitive_type [68699,68706]"/>
  <match src="struct: struct [87250,87256]" dest="struct: struct [28093,28099]"/>
  <match src="memory: memory [91443,91449]" dest="memory: memory [30007,30013]"/>
  <match src="type_name [50943,50950]" dest="type_name [26102,26109]"/>
  <match src="returns: returns [11056,11063]" dest="returns: returns [11641,11648]"/>
  <match src="(: ( [39214,39215]" dest="(: ( [53795,53796]"/>
  <match src="number_literal: 24 [45053,45055]" dest="number_literal: 24 [14210,14212]"/>
  <match src="identifier: D256 [6969,6973]" dest="identifier: D256 [7554,7558]"/>
  <match src="(: ( [7887,7888]" dest="(: ( [8472,8473]"/>
  <match src="visibility [101110,101118]" dest="visibility [39672,39680]"/>
  <match src="returns: returns [96798,96805]" dest="returns: returns [35362,35369]"/>
  <match src="visibility [17546,17553]" dest="visibility [19488,19495]"/>
  <match src="public: public [62929,62935]" dest="public: public [26788,26794]"/>
  <match src="visibility [103568,103576]" dest="visibility [42130,42138]"/>
  <match src="variable_declaration [67192,67213]" dest="variable_declaration [65835,65852]"/>
  <match src=",: , [24956,24957]" dest=",: , [55184,55185]"/>
  <match src="function: function [36010,36018]" dest="function: function [50591,50599]"/>
  <match src="call_argument [80574,80579]" dest="call_argument [69731,69736]"/>
  <match src="function_body [92131,92179]" dest="function_body [30695,30743]"/>
  <match src="struct_member [87913,87929]" dest="struct_member [28756,28772]"/>
  <match src="struct_member [87861,87880]" dest="struct_member [28704,28723]"/>
  <match src="identifier: _state [96271,96277]" dest="identifier: _state [34835,34841]"/>
  <match src="function: function [53342,53350]" dest="function: function [20432,20440]"/>
  <match src="(: ( [21509,21510]" dest="(: ( [63271,63272]"/>
  <match src="call_expression [83888,83901]" dest="call_expression [58112,58125]"/>
  <match src=".: . [88183,88184]" dest=".: . [29026,29027]"/>
  <match src="identifier: LPAREN [33260,33266]" dest="identifier: LPAREN [47841,47847]"/>
  <match src="identifier: account [100220,100227]" dest="identifier: account [38782,38789]"/>
  <match src="uint256: uint256 [74673,74680]" dest="uint256: uint256 [55123,55130]"/>
  <match src="identifier: value [8520,8525]" dest="identifier: value [9105,9110]"/>
  <match src="call_argument [34000,34006]" dest="call_argument [48581,48587]"/>
  <match src="for: for [37490,37493]" dest="for: for [52071,52074]"/>
  <match src="type_name [79729,79736]" dest="type_name [68804,68811]"/>
  <match src="array_access [100762,100801]" dest="array_access [39324,39363]"/>
  <match src=".: . [96019,96020]" dest=".: . [34583,34584]"/>
  <match src="identifier: account [100186,100193]" dest="identifier: account [38748,38755]"/>
  <match src="type_name [2837,2844]" dest="type_name [3416,3423]"/>
  <match src="uint256: uint256 [4427,4434]" dest="uint256: uint256 [5006,5013]"/>
  <match src="function_body [10692,10740]" dest="function_body [11277,11325]"/>
  <match src="string [84338,84347]" dest="string [76429,76446]"/>
  <match src="internal: internal [2433,2441]" dest="internal: internal [3012,3020]"/>
  <match src="return_statement [91886,91915]" dest="return_statement [30450,30479]"/>
  <match src="indexed: indexed [52439,52446]" dest="indexed: indexed [60288,60295]"/>
  <match src="}: } [93739,93740]" dest="}: } [32303,32304]"/>
  <match src="primitive_type [4449,4455]" dest="primitive_type [5028,5034]"/>
  <match src="call_argument [31392,31400]" dest="call_argument [45973,45981]"/>
  <match src="library_declaration [1186,6034]" dest="library_declaration [1765,6613]"/>
  <match src="primitive_type [63049,63056]" dest="primitive_type [26908,26915]"/>
  <match src="array_access [103072,103100]" dest="array_access [41634,41662]"/>
  <match src="): ) [39248,39249]" dest="): ) [53829,53830]"/>
  <match src="type_name [19292,19299]" dest="type_name [59036,59043]"/>
  <match src="uint256: uint256 [64701,64708]" dest="uint256: uint256 [80506,80513]"/>
  <match src="++: ++ [37519,37521]" dest="++: ++ [52100,52102]"/>
  <match src="indexed: indexed [52463,52470]" dest="indexed: indexed [60310,60317]"/>
  <match src="type_name [52455,52462]" dest="type_name [60302,60309]"/>
  <match src="call_expression [83323,83369]" dest="call_expression [62729,62770]"/>
  <match src="identifier: mint [55121,55125]" dest="identifier: mint [22211,22215]"/>
  <match src="(: ( [93531,93532]" dest="(: ( [32095,32096]"/>
  <match src="primitive_type [38297,38302]" dest="primitive_type [52878,52883]"/>
  <match src="memory: memory [9374,9380]" dest="memory: memory [9959,9965]"/>
  <match src="identifier: usdcAmount [77916,77926]" dest="identifier: bonded [77001,77007]"/>
  <match src="identifier: getAdvanceIncentive [46889,46908]" dest="identifier: getAdvanceIncentive [16046,16065]"/>
  <match src="): ) [105951,105952]" dest="): ) [68019,68020]"/>
  <match src="expression_statement [36897,36905]" dest="expression_statement [51478,51486]"/>
  <match src="function_definition [9319,9512]" dest="function_definition [9904,10097]"/>
  <match src="identifier: sub [9529,9532]" dest="identifier: sub [10114,10117]"/>
  <match src="): ) [7587,7588]" dest="): ) [8172,8173]"/>
  <match src="): ) [53729,53730]" dest="): ) [20819,20820]"/>
  <match src="&quot;: &quot; [21756,21757]" dest="&quot;: &quot; [55828,55829]"/>
  <match src="identifier: encodePacked [31096,31108]" dest="identifier: encodePacked [45677,45689]"/>
  <match src="function: function [94857,94865]" dest="function: function [33421,33429]"/>
  <match src="type_name [53559,53566]" dest="type_name [20649,20656]"/>
  <match src="type_name [101072,101079]" dest="type_name [39634,39641]"/>
  <match src="function: function [9760,9768]" dest="function: function [10345,10353]"/>
  <match src="!=: != [105632,105634]" dest="!=: != [67700,67702]"/>
  <match src=".: . [89906,89907]" dest=".: . [74539,74540]"/>
  <match src="block_statement [37523,37903]" dest="block_statement [52104,52484]"/>
  <match src="number_literal: 0 [93663,93664]" dest="number_literal: 0 [32227,32228]"/>
  <match src="return_type_definition [45511,45528]" dest="return_type_definition [14668,14685]"/>
  <match src="identifier: IUniswapV2Pair [53040,53054]" dest="identifier: IUniswapV2Pair [20130,20144]"/>
  <match src=".: . [92690,92691]" dest=".: . [31254,31255]"/>
  <match src="bool: bool [10686,10690]" dest="bool: bool [11271,11275]"/>
  <match src="=: = [103273,103274]" dest="=: = [41835,41836]"/>
  <match src="identifier: amount [103668,103674]" dest="identifier: amount [42230,42236]"/>
  <match src="type_name [103746,103753]" dest="type_name [42308,42315]"/>
  <match src="identifier: dollarAmount [78148,78160]" dest="identifier: dollarAmount [62240,62252]"/>
  <match src="view: view [55084,55088]" dest="view: view [22174,22178]"/>
  <match src="&quot;: &quot; [49909,49910]" dest="&quot;: &quot; [63530,63531]"/>
  <match src="member_expression [100258,100272]" dest="member_expression [38820,38834]"/>
  <match src="number_literal: 87 [29452,29454]" dest="number_literal: 87 [44033,44035]"/>
  <match src="return: return [35975,35981]" dest="return: return [50556,50562]"/>
  <match src="(: ( [55221,55222]" dest="(: ( [22311,22312]"/>
  <match src="(: ( [91865,91866]" dest="(: ( [30429,30430]"/>
  <match src="type_name [96807,96811]" dest="type_name [35371,35375]"/>
  <match src="using_directive [97832,97859]" dest="using_directive [36394,36421]"/>
  <match src="return_statement [36158,36169]" dest="return_statement [50739,50750]"/>
  <match src="{: { [47425,47426]" dest="{: { [16582,16583]"/>
  <match src="user_defined_type [64370,64382]" dest="user_defined_type [64563,64575]"/>
  <match src="call_argument [93032,93043]" dest="call_argument [31596,31607]"/>
  <match src="{: { [7414,7415]" dest="{: { [7999,8000]"/>
  <match src="): ) [33523,33524]" dest="): ) [48104,48105]"/>
  <match src="}: } [7910,7911]" dest="}: } [8495,8496]"/>
  <match src=",: , [54305,54306]" dest=",: , [21395,21396]"/>
  <match src="internal: internal [99129,99137]" dest="internal: internal [37691,37699]"/>
  <match src="string [64423,64431]" dest="string [59887,59895]"/>
  <match src="identifier: _state [100762,100768]" dest="identifier: _state [39324,39330]"/>
  <match src="(: ( [38030,38031]" dest="(: ( [52611,52612]"/>
  <match src="parameter [95174,95181]" dest="parameter [33738,33745]"/>
  <match src="type_name [88155,88190]" dest="type_name [28998,29033]"/>
  <match src=",: , [98275,98276]" dest=",: , [36837,36838]"/>
  <match src="string: string [103946,103952]" dest="string: string [42508,42514]"/>
  <match src=".: . [7877,7878]" dest=".: . [8462,8463]"/>
  <match src="(: ( [54254,54255]" dest="(: ( [21344,21345]"/>
  <match src="&quot;: &quot; [81902,81903]" dest="&quot;: &quot; [79193,79194]"/>
  <match src="}: } [87623,87624]" dest="}: } [28466,28467]"/>
  <match src="type_name [105559,105566]" dest="type_name [67627,67634]"/>
  <match src="function_definition [14585,14659]" dest="function_definition [24376,24450]"/>
  <match src="emit: emit [80657,80661]" dest="emit: emit [69790,69794]"/>
  <match src="call_argument [82985,82989]" dest="call_argument [78190,78194]"/>
  <match src="]: ] [96574,96575]" dest="]: ] [35138,35139]"/>
  <match src="primitive_type [85473,85480]" dest="primitive_type [72279,72286]"/>
  <match src="identifier: current [94348,94355]" dest="identifier: current [32912,32919]"/>
  <match src="): ) [96925,96926]" dest="): ) [35489,35490]"/>
  <match src="identifier: State [87257,87262]" dest="identifier: State [28100,28105]"/>
  <match src="=: = [43843,43844]" dest="=: = [13000,13001]"/>
  <match src="return_type_definition [11056,11073]" dest="return_type_definition [11641,11658]"/>
  <match src="(: ( [38080,38081]" dest="(: ( [52661,52662]"/>
  <match src="call_expression [7446,7457]" dest="call_expression [8031,8042]"/>
  <match src="public: public [50852,50858]" dest="public: public [26011,26017]"/>
  <match src="visibility [54659,54667]" dest="visibility [21749,21757]"/>
  <match src="type_name [74673,74680]" dest="type_name [55123,55130]"/>
  <match src="(: ( [83869,83870]" dest="(: ( [58775,58776]"/>
  <match src="identifier: epochs [100874,100880]" dest="identifier: epochs [39436,39442]"/>
  <match src="): ) [10541,10542]" dest="): ) [11126,11127]"/>
  <match src="returns: returns [11512,11519]" dest="returns: returns [12097,12104]"/>
  <match src="returns: returns [92319,92326]" dest="returns: returns [30883,30890]"/>
  <match src="visibility [44171,44178]" dest="visibility [13328,13335]"/>
  <match src="private: private [67090,67097]" dest="private: private [66280,66287]"/>
  <match src="{: { [53055,53056]" dest="{: { [20145,20146]"/>
  <match src="expression_statement [38497,38504]" dest="expression_statement [53078,53085]"/>
  <match src="identifier: stringifyTruncated [33864,33882]" dest="identifier: stringifyTruncated [48445,48463]"/>
  <match src="identifier: balance [91799,91806]" dest="identifier: balance [30363,30370]"/>
  <match src=",: , [30076,30077]" dest=",: , [44657,44658]"/>
  <match src="function_definition [62942,63004]" dest="function_definition [26801,26863]"/>
  <match src="private: private [44564,44571]" dest="private: private [13721,13728]"/>
  <match src="(: ( [84261,84262]" dest="(: ( [76355,76356]"/>
  <match src="function: function [89556,89564]" dest="function: function [74189,74197]"/>
  <match src="identifier: initialize [89565,89575]" dest="identifier: initialize [74198,74208]"/>
  <match src="identifier: payloadA [33685,33693]" dest="identifier: payloadA [48266,48274]"/>
  <match src="returns: returns [45975,45982]" dest="returns: returns [15132,15139]"/>
  <match src="=: = [81121,81122]" dest="=: = [60971,60972]"/>
  <match src="number_literal: 42 [37235,37237]" dest="number_literal: 42 [51816,51818]"/>
  <match src="(: ( [101215,101216]" dest="(: ( [39777,39778]"/>
  <match src="type_name [4438,4445]" dest="type_name [5017,5024]"/>
  <match src="identifier: experimental [1154,1166]" dest="identifier: experimental [1156,1168]"/>
  <match src="identifier: onlyFrozen [80457,80467]" dest="identifier: onlyFrozenOrFluid [70411,70428]"/>
  <match src="): ) [9439,9440]" dest="): ) [10024,10025]"/>
  <match src="member_expression [102838,102866]" dest="member_expression [41400,41428]"/>
  <match src="internal: internal [9836,9844]" dest="internal: internal [10421,10429]"/>
  <match src="internal: internal [46788,46796]" dest="internal: internal [15945,15953]"/>
  <match src="function_definition [53689,53755]" dest="function_definition [20779,20845]"/>
  <match src="identifier: j [36529,36530]" dest="identifier: j [51110,51111]"/>
  <match src="internal: internal [103762,103770]" dest="internal: internal [42324,42332]"/>
  <match src="event_paramater [53100,53123]" dest="event_paramater [20190,20213]"/>
  <match src="member_expression [82089,82099]" dest="member_expression [70555,70565]"/>
  <match src="member_expression [98785,98808]" dest="member_expression [37347,37370]"/>
  <match src="[: [ [102404,102405]" dest="[: [ [40966,40967]"/>
  <match src="identifier: _state [99528,99534]" dest="identifier: _state [38090,38096]"/>
  <match src="function_body [92881,92929]" dest="function_body [31445,31493]"/>
  <match src="function: function [51787,51795]" dest="function: function [54557,54565]"/>
  <match src="identifier: value [7287,7292]" dest="identifier: value [7872,7877]"/>
  <match src="&quot;: &quot; [64423,64424]" dest="&quot;: &quot; [59887,59888]"/>
  <match src="return: return [96128,96134]" dest="return: return [34692,34698]"/>
  <match src="identifier: Bond [79875,79879]" dest="identifier: Unbond [68989,68995]"/>
  <match src="(: ( [46375,46376]" dest="(: ( [15532,15533]"/>
  <match src="return_type_definition [7814,7835]" dest="return_type_definition [8399,8420]"/>
  <match src="type_name [53749,53753]" dest="type_name [20839,20843]"/>
  <match src="if_statement [33741,34154]" dest="if_statement [48322,48735]"/>
  <match src="address: address [94107,94114]" dest="address: address [32671,32678]"/>
  <match src="primitive_type [53707,53714]" dest="primitive_type [20797,20804]"/>
  <match src="uint256: uint256 [92759,92766]" dest="uint256: uint256 [31323,31330]"/>
  <match src="(: ( [53943,53944]" dest="(: ( [21033,21034]"/>
  <match src=".: . [101154,101155]" dest=".: . [39716,39717]"/>
  <match src="variable_declaration_statement [8941,8988]" dest="variable_declaration_statement [9526,9573]"/>
  <match src="identifier: D256 [10025,10029]" dest="identifier: D256 [10610,10614]"/>
  <match src="expression_statement [99040,99064]" dest="expression_statement [37602,37626]"/>
  <match src="private: private [45382,45389]" dest="private: private [14539,14546]"/>
  <match src="identifier: SafeMath [74449,74457]" dest="identifier: SafeMath [80440,80448]"/>
  <match src="member_expression [102773,102799]" dest="member_expression [41335,41361]"/>
  <match src="struct_member [87707,87722]" dest="struct_member [28550,28565]"/>
  <match src=".: . [9488,9489]" dest=".: . [10073,10074]"/>
  <match src="return_type_definition [92113,92130]" dest="return_type_definition [30677,30694]"/>
  <match src="identifier: start [87059,87064]" dest="identifier: start [27902,27907]"/>
  <match src="primitive_type [104241,104248]" dest="primitive_type [42803,42810]"/>
  <match src="): ) [54769,54770]" dest="): ) [21859,21860]"/>
  <match src="): ) [38313,38314]" dest="): ) [52894,52895]"/>
  <match src="type_name [10262,10266]" dest="type_name [10847,10851]"/>
  <match src="(: ( [21590,21591]" dest="(: ( [63360,63361]"/>
  <match src=",: , [101222,101223]" dest=",: , [39784,39785]"/>
  <match src="parameter [54112,54125]" dest="parameter [21202,21215]"/>
  <match src="member_expression [99563,99595]" dest="member_expression [38125,38157]"/>
  <match src="identifier: INITIAL_STAKE_MULTIPLE [46011,46033]" dest="identifier: INITIAL_STAKE_MULTIPLE [15168,15190]"/>
  <match src="memory: memory [10635,10641]" dest="memory: memory [11220,11226]"/>
  <match src="call_argument [59133,59158]" dest="call_argument [80840,80855]"/>
  <match src="): ) [30786,30787]" dest="): ) [45367,45368]"/>
  <match src="number_literal: 40 [45419,45421]" dest="number_literal: 40 [14576,14578]"/>
  <match src="}: } [48004,48005]" dest="}: } [17161,17162]"/>
  <match src="expression_statement [81494,81575]" dest="expression_statement [70206,70290]"/>
  <match src="primitive_type [17538,17545]" dest="primitive_type [80483,80490]"/>
  <match src="type_name [96382,96389]" dest="type_name [34946,34953]"/>
  <match src="call_argument [3207,3217]" dest="call_argument [3786,3796]"/>
  <match src="call_expression [10424,10442]" dest="call_expression [11009,11027]"/>
  <match src="expression_statement [49812,49922]" dest="expression_statement [61970,62087]"/>
  <match src="identifier: Decimal [6781,6788]" dest="identifier: Decimal [7366,7373]"/>
  <match src="return_type_definition [4491,4508]" dest="return_type_definition [5070,5087]"/>
  <match src="(: ( [17675,17676]" dest="(: ( [17990,17991]"/>
  <match src="primitive_type [55366,55373]" dest="primitive_type [22456,22463]"/>
  <match src="state_variable_declaration [79643,79682]" dest="state_variable_declaration [68715,68757]"/>
  <match src=",: , [68374,68375]" dest=",: , [70746,70747]"/>
  <match src="(: ( [93453,93454]" dest="(: ( [32017,32018]"/>
  <match src="identifier: Upgradeable [88986,88997]" dest="identifier: Upgradeable [73619,73630]"/>
  <match src="indexed: indexed [97912,97919]" dest="indexed: indexed [36474,36481]"/>
  <match src="identifier: dollar [80778,80784]" dest="identifier: dollar [69647,69653]"/>
  <match src="bool: bool [98062,98066]" dest="bool: bool [36624,36628]"/>
  <match src="internal: internal [102997,103005]" dest="internal: internal [41559,41567]"/>
  <match src="): ) [80273,80274]" dest="): ) [69448,69449]"/>
  <match src="identifier: _state [102773,102779]" dest="identifier: _state [41335,41341]"/>
  <match src="primitive_type [54186,54193]" dest="primitive_type [21276,21283]"/>
  <match src=".: . [65186,65187]" dest=".: . [79250,79251]"/>
  <match src="number_literal: 0 [38494,38495]" dest="number_literal: 0 [53075,53076]"/>
  <match src="call_argument [98507,98513]" dest="call_argument [37069,37075]"/>
  <match src="identifier: amount [103538,103544]" dest="identifier: amount [42100,42106]"/>
  <match src="memory: memory [5907,5913]" dest="memory: memory [6486,6492]"/>
  <match src="call_expression [105614,105631]" dest="call_expression [67682,67699]"/>
  <match src="type_name [96616,96623]" dest="type_name [35180,35187]"/>
  <match src="type_name [55046,55050]" dest="type_name [22136,22140]"/>
  <match src="identifier: decrementBalanceOfBonded [82263,82287]" dest="identifier: burnFromAccount [62212,62227]"/>
  <match src="identifier: EPOCH_PERIOD [45886,45898]" dest="identifier: EPOCH_PERIOD [15043,15055]"/>
  <match src="]: ] [96858,96859]" dest="]: ] [35422,35423]"/>
  <match src=".: . [82173,82174]" dest=".: . [71087,71088]"/>
  <match src="external: external [81025,81033]" dest="external: external [69867,69875]"/>
  <match src="state_variable_declaration [29614,29646]" dest="state_variable_declaration [44195,44227]"/>
  <match src="state_mutability [91537,91541]" dest="state_mutability [30101,30105]"/>
  <match src="identifier: b [7776,7777]" dest="identifier: b [8361,8362]"/>
  <match src="state_mutability [55084,55088]" dest="state_mutability [22174,22178]"/>
  <match src="comment: // find the last non-zero byte in order to determine the length [35542,35605]" dest="comment: // find the last non-zero byte in order to determine the length [50123,50186]"/>
  <match src=".: . [8316,8317]" dest=".: . [8901,8902]"/>
  <match src="call_argument [32544,32550]" dest="call_argument [47125,47131]"/>
  <match src="identifier: D256 [8765,8769]" dest="identifier: D256 [9350,9354]"/>
  <match src="number_literal: 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 [44016,44058]" dest="number_literal: 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 [13173,13215]"/>
  <match src="parameter [54891,54916]" dest="parameter [21981,22006]"/>
  <match src="primitive_type [43715,43722]" dest="primitive_type [12872,12879]"/>
  <match src="=: = [44725,44726]" dest="=: = [13882,13883]"/>
  <match src="): ) [82588,82589]" dest="): ) [58269,58270]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [45652,45674]" dest="identifier: ORACLE_RESERVE_MINIMUM [14809,14831]"/>
  <match src="address: address [55366,55373]" dest="address: address [22456,22463]"/>
  <match src="call_struct_argument [9703,9741]" dest="call_struct_argument [10288,10326]"/>
  <match src="string: string [9594,9600]" dest="string: string [10179,10185]"/>
  <match src="call_argument [23765,23786]" dest="call_argument [62944,62965]"/>
  <match src="call_expression [80778,80786]" dest="call_expression [69647,69655]"/>
  <match src="parameter [7396,7407]" dest="parameter [7981,7992]"/>
  <match src="(: ( [15265,15266]" dest="(: ( [25056,25057]"/>
  <match src=",: , [57756,57757]" dest=",: , [71218,71219]"/>
  <match src=".: . [100296,100297]" dest=".: . [38858,38859]"/>
  <match src="identifier: amount [101330,101336]" dest="identifier: amount [39892,39898]"/>
  <match src="private: private [25145,25152]" dest="private: private [58712,58719]"/>
  <match src="(: ( [101576,101577]" dest="(: ( [40138,40139]"/>
  <match src="identifier: symbol [91521,91527]" dest="identifier: symbol [30085,30091]"/>
  <match src="external: external [54715,54723]" dest="external: external [21805,21813]"/>
  <match src="identifier: Decimal [66547,66554]" dest="identifier: Decimal [64878,64885]"/>
  <match src="type_name [100652,100659]" dest="type_name [39214,39221]"/>
  <match src="return_type_definition [9860,9881]" dest="return_type_definition [10445,10466]"/>
  <match src="identifier: tokenA [78376,78382]" dest="identifier: candidate [77891,77900]"/>
  <match src="member_expression [91893,91914]" dest="member_expression [30457,30478]"/>
  <match src="member_expression [89889,89919]" dest="member_expression [74522,74552]"/>
  <match src="type_name [87836,87843]" dest="type_name [28679,28686]"/>
  <match src="return_statement [96402,96446]" dest="return_statement [34966,35010]"/>
  <match src="type_name [79905,79912]" dest="type_name [69021,69028]"/>
  <match src="state_mutability [53245,53249]" dest="state_mutability [20335,20339]"/>
  <match src="contract_declaration [91128,97209]" dest="contract_declaration [29692,35773]"/>
  <match src="uint256: uint256 [46934,46941]" dest="uint256: uint256 [16091,16098]"/>
  <match src="indexed: indexed [54362,54369]" dest="indexed: indexed [21452,21459]"/>
  <match src="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [50211,50786]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [59192,59773]"/>
  <match src="identifier: FILE [81883,81887]" dest="identifier: FILE [79174,79178]"/>
  <match src="(: ( [9700,9701]" dest="(: ( [10285,10286]"/>
  <match src="state_mutability [7804,7808]" dest="state_mutability [8389,8393]"/>
  <match src="identifier: D256 [7859,7863]" dest="identifier: D256 [8444,8448]"/>
  <match src="{: { [103771,103772]" dest="{: { [42333,42334]"/>
  <match src="parameter [99791,99805]" dest="parameter [38353,38367]"/>
  <match src="parameter [102981,102995]" dest="parameter [41543,41557]"/>
  <match src="call_expression [31304,31323]" dest="call_expression [45885,45904]"/>
  <match src="): ) [96729,96730]" dest="): ) [35293,35294]"/>
  <match src="identifier: size [86017,86021]" dest="identifier: size [72823,72827]"/>
  <match src=",: , [32596,32597]" dest=",: , [47177,47178]"/>
  <match src="identifier: candidate [96153,96162]" dest="identifier: candidate [34717,34726]"/>
  <match src="user_defined_type [8256,8260]" dest="user_defined_type [8841,8845]"/>
  <match src="number_literal: 0 [99062,99063]" dest="number_literal: 0 [37624,37625]"/>
  <match src="): ) [80616,80617]" dest="): ) [69776,69777]"/>
  <match src="uint256: uint256 [87483,87490]" dest="uint256: uint256 [28326,28333]"/>
  <match src="variable_declaration [81088,81120]" dest="variable_declaration [60947,60970]"/>
  <match src="identifier: self [8515,8519]" dest="identifier: self [9100,9104]"/>
  <match src="): ) [96221,96222]" dest="): ) [34785,34786]"/>
  <match src="function: function [92827,92835]" dest="function: function [31391,31399]"/>
  <match src="address: address [53783,53790]" dest="address: address [20873,20880]"/>
  <match src="): ) [103060,103061]" dest="): ) [41622,41623]"/>
  <match src=".: . [102844,102845]" dest=".: . [41406,41407]"/>
  <match src="struct_member [87559,87590]" dest="struct_member [28402,28433]"/>
  <match src="(: ( [53512,53513]" dest="(: ( [20602,20603]"/>
  <match src="parameter [14653,14657]" dest="parameter [24444,24448]"/>
  <match src="function: function [55352,55360]" dest="function: function [22442,22450]"/>
  <match src="function: function [71952,71960]" dest="function: function [57987,57995]"/>
  <match src="is: is [50805,50807]" dest="is: is [25964,25966]"/>
  <match src="identifier: candidates [88191,88201]" dest="identifier: candidates [29034,29044]"/>
  <match src="primitive_type [74462,74469]" dest="primitive_type [80453,80460]"/>
  <match src="type_name [32835,32842]" dest="type_name [47416,47423]"/>
  <match src="}: } [104544,104545]" dest="}: } [43106,43107]"/>
  <match src="(: ( [89515,89516]" dest="(: ( [74148,74149]"/>
  <match src="return_statement [93950,94051]" dest="return_statement [32514,32615]"/>
  <match src="!: ! [29933,29934]" dest="!: ! [44514,44515]"/>
  <match src="identifier: must [33746,33750]" dest="identifier: must [48327,48331]"/>
  <match src="): ) [91564,91565]" dest="): ) [30128,30129]"/>
  <match src="state_mutability [94399,94403]" dest="state_mutability [32963,32967]"/>
  <match src="contract_body [87348,87627]" dest="contract_body [28191,28470]"/>
  <match src="identifier: priceCumulative [67389,67404]" dest="identifier: staged [70493,70499]"/>
  <match src="type_name [15266,15273]" dest="type_name [25057,25064]"/>
  <match src="identifier: result [35204,35210]" dest="identifier: result [49785,49791]"/>
  <match src="]: ] [94193,94194]" dest="]: ] [32757,32758]"/>
  <match src="function_body [49078,49212]" dest="function_body [54861,55073]"/>
  <match src="expression_statement [103379,103467]" dest="expression_statement [41941,42029]"/>
  <match src="return: return [93656,93662]" dest="return: return [32220,32226]"/>
  <match src="pure: pure [47280,47284]" dest="pure: pure [16437,16441]"/>
  <match src="): ) [93043,93044]" dest="): ) [31607,31608]"/>
  <match src="(: ( [97182,97183]" dest="(: ( [35746,35747]"/>
  <match src="primitive_type [53839,53843]" dest="primitive_type [20929,20933]"/>
  <match src="number_literal: 10 [39084,39086]" dest="number_literal: 10 [53665,53667]"/>
  <match src="member_expression [9493,9500]" dest="member_expression [10078,10085]"/>
  <match src=".: . [94020,94021]" dest=".: . [32584,32585]"/>
  <match src="primitive_type [52130,52137]" dest="primitive_type [63675,63682]"/>
  <match src=",: , [35822,35823]" dest=",: , [50403,50404]"/>
  <match src="private: private [17546,17553]" dest="private: private [19488,19495]"/>
  <match src="primitive_type [44425,44432]" dest="primitive_type [13582,13589]"/>
  <match src="): ) [34767,34768]" dest="): ) [49348,49349]"/>
  <match src="internal: internal [99020,99028]" dest="internal: internal [37582,37590]"/>
  <match src="identifier: candidate [95925,95934]" dest="identifier: candidate [34489,34498]"/>
  <match src="type_name [15551,15558]" dest="type_name [25342,25349]"/>
  <match src="comment: // 'x' [29512,29518]" dest="comment: // 'x' [44093,44099]"/>
  <match src="}: } [8928,8929]" dest="}: } [9513,9514]"/>
  <match src="parameter [50992,50996]" dest="parameter [26151,26155]"/>
  <match src="returns: returns [13898,13905]" dest="returns: returns [23689,23696]"/>
  <match src="user_defined_type [65643,65655]" dest="user_defined_type [19457,19469]"/>
  <match src="call_expression [7157,7175]" dest="call_expression [7742,7760]"/>
  <match src="state_mutability [35094,35098]" dest="state_mutability [49675,49679]"/>
  <match src="uint256: uint256 [92004,92011]" dest="uint256: uint256 [30568,30575]"/>
  <match src="primitive_type [13867,13874]" dest="primitive_type [23658,23665]"/>
  <match src="type_name [30948,30955]" dest="type_name [45529,45536]"/>
  <match src="type_name [9783,9787]" dest="type_name [10368,10372]"/>
  <match src="function: function [54640,54648]" dest="function: function [21730,21738]"/>
  <match src="(: ( [100116,100117]" dest="(: ( [38678,38679]"/>
  <match src="identifier: dollar [106981,106987]" dest="identifier: dollar [54633,54639]"/>
  <match src="call_expression [103054,103061]" dest="call_expression [41616,41623]"/>
  <match src="): ) [47379,47380]" dest="): ) [16536,16537]"/>
  <match src="comment: // XXX Currently there is no better way to check if there is a contract in an address [85553,85638]" dest="comment: // XXX Currently there is no better way to check if there is a contract in an address [72359,72444]"/>
  <match src=",: , [1463,1464]" dest=",: , [2042,2043]"/>
  <match src="{: { [104342,104343]" dest="{: { [42904,42905]"/>
  <match src="type_name [67140,67147]" dest="type_name [65794,65801]"/>
  <match src="state_mutability [68215,68219]" dest="state_mutability [61629,61633]"/>
  <match src="parameter [105559,105574]" dest="parameter [67627,67642]"/>
  <match src="type_name [5878,5885]" dest="type_name [6457,6464]"/>
  <match src="(: ( [23898,23899]" dest="(: ( [63108,63109]"/>
  <match src="member_expression [82643,82655]" dest="member_expression [58290,58302]"/>
  <match src="}: } [45908,45909]" dest="}: } [15065,15066]"/>
  <match src="identifier: amount [100308,100314]" dest="identifier: amount [38870,38876]"/>
  <match src="address: address [100652,100659]" dest="address: address [39214,39221]"/>
  <match src="user_defined_type [9428,9432]" dest="user_defined_type [10013,10017]"/>
  <match src="identifier: totalNet [92946,92954]" dest="identifier: totalNet [31510,31518]"/>
  <match src="identifier: Require [105786,105793]" dest="identifier: Require [67854,67861]"/>
  <match src="=&gt;: =&gt; [88171,88173]" dest="=&gt;: =&gt; [29014,29016]"/>
  <match src="identifier: _state [101285,101291]" dest="identifier: _state [39847,39853]"/>
  <match src="constant: constant [44626,44634]" dest="constant: constant [13783,13791]"/>
  <match src="identifier: totalRewardedWithPhantom [83253,83277]" dest="identifier: value [71005,71010]"/>
  <match src="call_expression [9277,9300]" dest="call_expression [9862,9885]"/>
  <match src="memory: memory [8261,8267]" dest="memory: memory [8846,8852]"/>
  <match src="function_body [95762,95831]" dest="function_body [34326,34395]"/>
  <match src="call_struct_argument [45845,45863]" dest="call_struct_argument [15002,15020]"/>
  <match src="call_argument [96719,96728]" dest="call_argument [35283,35292]"/>
  <match src="identifier: _state [99350,99356]" dest="identifier: _state [37912,37918]"/>
  <match src="function_body [93594,93740]" dest="function_body [32158,32304]"/>
  <match src="type_name [55287,55291]" dest="type_name [22377,22381]"/>
  <match src="): ) [82541,82542]" dest="): ) [70846,70847]"/>
  <match src="member_expression [100204,100219]" dest="member_expression [38766,38781]"/>
  <match src="): ) [55376,55377]" dest="): ) [22466,22467]"/>
  <match src="type_cast_expression [44008,44059]" dest="type_cast_expression [13165,13216]"/>
  <match src="): ) [47570,47571]" dest="): ) [16727,16728]"/>
  <match src="(: ( [32804,32805]" dest="(: ( [47385,47386]"/>
  <match src="identifier: account [99483,99490]" dest="identifier: account [38045,38052]"/>
  <match src="}: } [10884,10885]" dest="}: } [11469,11470]"/>
  <match src="function: function [98220,98228]" dest="function: function [36782,36790]"/>
  <match src="mapping: mapping [88053,88060]" dest="mapping: mapping [28896,28903]"/>
  <match src="type_name [100117,100124]" dest="type_name [38679,38686]"/>
  <match src="(: ( [93879,93880]" dest="(: ( [32443,32444]"/>
  <match src="comment: // TODO Check this again before the Serenity release, because all addresses will be [85828,85911]" dest="comment: // TODO Check this again before the Serenity release, because all addresses will be [72634,72717]"/>
  <match src="expression_statement [102121,102172]" dest="expression_statement [40683,40734]"/>
  <match src="return_statement [91462,91497]" dest="return_statement [30026,30061]"/>
  <match src="if: if [34379,34381]" dest="if: if [48960,48962]"/>
  <match src="call_argument [84490,84498]" dest="call_argument [76962,76969]"/>
  <match src="primitive_type [55046,55050]" dest="primitive_type [22136,22140]"/>
  <match src="primitive_type [1465,1472]" dest="primitive_type [2044,2051]"/>
  <match src="external: external [55337,55345]" dest="external: external [22427,22435]"/>
  <match src="call_expression [76891,76898]" dest="call_expression [60758,60765]"/>
  <match src="=: = [2526,2527]" dest="=: = [3105,3106]"/>
  <match src="identifier: account [79720,79727]" dest="identifier: account [68795,68802]"/>
  <match src="identifier: sender [81523,81529]" dest="identifier: sender [70235,70241]"/>
  <match src="identifier: div [81349,81352]" dest="identifier: div [70089,70092]"/>
  <match src="binary_expression [36574,36579]" dest="binary_expression [51155,51160]"/>
  <match src="internal: internal [8623,8631]" dest="internal: internal [9208,9216]"/>
  <match src="}: } [90546,90547]" dest="}: } [75179,75180]"/>
  <match src="identifier: LPAREN [32544,32550]" dest="identifier: LPAREN [47125,47131]"/>
  <match src="address: address [94092,94099]" dest="address: address [32656,32663]"/>
  <match src="): ) [13882,13883]" dest="): ) [23673,23674]"/>
  <match src="): ) [34388,34389]" dest="): ) [48969,48970]"/>
  <match src="identifier: result [37293,37299]" dest="identifier: result [51874,51880]"/>
  <match src="identifier: stringify [36019,36028]" dest="identifier: stringify [50600,50609]"/>
  <match src="struct_member [87051,87065]" dest="struct_member [27894,27908]"/>
  <match src="call_argument [9469,9503]" dest="call_argument [10054,10088]"/>
  <match src="(: ( [91435,91436]" dest="(: ( [29999,30000]"/>
  <match src="returns: returns [91738,91745]" dest="returns: returns [30302,30309]"/>
  <match src="identifier: transferFrom [53770,53782]" dest="identifier: transferFrom [20860,20872]"/>
  <match src="identifier: Constants [94433,94442]" dest="identifier: Constants [32997,33006]"/>
  <match src=",: , [101055,101056]" dest=",: , [39617,39618]"/>
  <match src="identifier: accounts [93975,93983]" dest="identifier: accounts [32539,32547]"/>
  <match src="return_statement [98192,98205]" dest="return_statement [36754,36767]"/>
  <match src="identifier: newUniv2 [83360,83368]" dest="identifier: couponAmount [62757,62769]"/>
  <match src="]: ] [38684,38685]" dest="]: ] [53265,53266]"/>
  <match src="primitive_type [100652,100659]" dest="primitive_type [39214,39221]"/>
  <match src="returns: returns [1946,1953]" dest="returns: returns [2525,2532]"/>
  <match src="address: address [55192,55199]" dest="address: address [22282,22289]"/>
  <match src="identifier: self [9062,9066]" dest="identifier: self [9647,9651]"/>
  <match src="(: ( [54953,54954]" dest="(: ( [22043,22044]"/>
  <match src="visibility [21482,21490]" dest="visibility [55752,55760]"/>
  <match src="identifier: stringifyTruncated [35026,35044]" dest="identifier: stringifyTruncated [49607,49625]"/>
  <match src="): ) [10512,10513]" dest="): ) [11097,11098]"/>
  <match src="primitive_type [36800,36804]" dest="primitive_type [51381,51385]"/>
  <match src="member_expression [83406,83416]" dest="member_expression [63048,63058]"/>
  <match src="{: { [93883,93884]" dest="{: { [32447,32448]"/>
  <match src=",: , [84304,84305]" dest=",: , [76395,76396]"/>
  <match src=",: , [32135,32136]" dest=",: , [46716,46717]"/>
  <match src="identifier: totalDebt [92616,92625]" dest="identifier: totalDebt [31180,31189]"/>
  <match src="function_definition [54576,54634]" dest="function_definition [21666,21724]"/>
  <match src="&quot;: &quot; [27932,27933]" dest="&quot;: &quot; [77313,77314]"/>
  <match src="): ) [37326,37327]" dest="): ) [51907,51908]"/>
  <match src="type_name [10224,10228]" dest="type_name [10809,10813]"/>
  <match src=".: . [92476,92477]" dest=".: . [31040,31041]"/>
  <match src="function: function [54991,54999]" dest="function: function [22081,22089]"/>
  <match src="function_body [8483,8543]" dest="function_body [9068,9128]"/>
  <match src="call_argument [9056,9060]" dest="call_argument [9641,9645]"/>
  <match src="&quot;: &quot; [2023,2024]" dest="&quot;: &quot; [2602,2603]"/>
  <match src="function_definition [55058,55104]" dest="function_definition [22148,22194]"/>
  <match src="identifier: start [87467,87472]" dest="identifier: start [28310,28315]"/>
  <match src="identifier: FILE [84471,84475]" dest="identifier: FILE [76943,76947]"/>
  <match src="): ) [53681,53682]" dest="): ) [20771,20772]"/>
  <match src=".: . [100907,100908]" dest=".: . [39469,39470]"/>
  <match src="}: } [15568,15569]" dest="}: } [25359,25360]"/>
  <match src="type_name [15068,15072]" dest="type_name [24859,24863]"/>
  <match src="identifier: epoch [95000,95005]" dest="identifier: epoch [33564,33569]"/>
  <match src="visibility [43984,43991]" dest="visibility [13141,13148]"/>
  <match src=".: . [81348,81349]" dest=".: . [70088,70089]"/>
  <match src="type_name [103169,103176]" dest="type_name [41731,41738]"/>
  <match src="primitive_type [87811,87818]" dest="primitive_type [28654,28661]"/>
  <match src="identifier: recipient [98266,98275]" dest="identifier: recipient [36828,36837]"/>
  <match src=".: . [66516,66517]" dest=".: . [19756,19757]"/>
  <match src=".: . [83859,83860]" dest=".: . [58770,58771]"/>
  <match src="identifier: epoch [93874,93879]" dest="identifier: epoch [32438,32443]"/>
  <match src="contract_declaration [87329,87627]" dest="contract_declaration [28172,28470]"/>
  <match src="parameter [95451,95460]" dest="parameter [34015,34024]"/>
  <match src="struct_member [88106,88145]" dest="struct_member [28949,28988]"/>
  <match src="type_name [103530,103537]" dest="type_name [42092,42099]"/>
  <match src="visibility [29894,29902]" dest="visibility [44475,44483]"/>
  <match src="function_definition [101768,102033]" dest="function_definition [40330,40595]"/>
  <match src="string_literal [84166,84178]" dest="string_literal [78005,78020]"/>
  <match src="parameter [93766,93781]" dest="parameter [32330,32345]"/>
  <match src="visibility [44754,44761]" dest="visibility [13911,13918]"/>
  <match src="identifier: input [35063,35068]" dest="identifier: input [49644,49649]"/>
  <match src="user_defined_type [87682,87689]" dest="user_defined_type [28525,28532]"/>
  <match src="identifier: spender [94115,94122]" dest="identifier: spender [32679,32686]"/>
  <match src="call_argument [105689,105711]" dest="call_argument [67757,67779]"/>
  <match src="array_access [96409,96437]" dest="array_access [34973,35001]"/>
  <match src="call_argument [4595,4600]" dest="call_argument [5174,5179]"/>
  <match src="comment: /**      * Getters      */ [45437,45465]" dest="comment: /**      * Getters      */ [14594,14622]"/>
  <match src="parameter [72249,72264]" dest="parameter [79489,79504]"/>
  <match src="(: ( [37847,37848]" dest="(: ( [52428,52429]"/>
  <match src="identifier: shift [38580,38585]" dest="identifier: shift [53161,53166]"/>
  <match src="is: is [91145,91147]" dest="is: is [29709,29711]"/>
  <match src="=: = [98640,98641]" dest="=: = [37202,37203]"/>
  <match src="member_expression [101381,101403]" dest="member_expression [39943,39965]"/>
  <match src="identifier: incrementBalanceOfBonded [83323,83347]" dest="identifier: redeemToAccount [62729,62744]"/>
  <match src="(: ( [101543,101544]" dest="(: ( [40105,40106]"/>
  <match src=".: . [105649,105650]" dest=".: . [67717,67718]"/>
  <match src="(: ( [99206,99207]" dest="(: ( [37768,37769]"/>
  <match src="identifier: implementation [97037,97051]" dest="identifier: implementation [35601,35615]"/>
  <match src="expression_statement [37739,37750]" dest="expression_statement [52320,52331]"/>
  <match src="(: ( [93349,93350]" dest="(: ( [31913,31914]"/>
  <match src="identifier: msg [80310,80313]" dest="identifier: msg [69485,69488]"/>
  <match src="pure: pure [31653,31657]" dest="pure: pure [46234,46238]"/>
  <match src="): ) [88085,88086]" dest="): ) [28928,28929]"/>
  <match src="indexed: indexed [54497,54504]" dest="indexed: indexed [21587,21594]"/>
  <match src="identifier: COLON [29540,29545]" dest="identifier: COLON [44121,44126]"/>
  <match src="return_statement [47194,47225]" dest="return_statement [16351,16382]"/>
  <match src="identifier: D256 [8383,8387]" dest="identifier: D256 [8968,8972]"/>
  <match src="internal: internal [101110,101118]" dest="internal: internal [39672,39680]"/>
  <match src="type_alias [6802,6810]" dest="type_alias [7387,7395]"/>
  <match src="type_name [9342,9346]" dest="type_name [9927,9931]"/>
  <match src="identifier: period [96300,96306]" dest="identifier: period [34864,34870]"/>
  <match src="primitive_type [38572,38579]" dest="primitive_type [53153,53160]"/>
  <match src=".: . [100961,100962]" dest=".: . [39523,39524]"/>
  <match src="call_expression [3199,3255]" dest="call_expression [3778,3834]"/>
  <match src="primitive_type [103727,103734]" dest="primitive_type [42289,42296]"/>
  <match src="block_statement [104342,104415]" dest="block_statement [42904,42977]"/>
  <match src="identifier: D256 [91220,91224]" dest="identifier: D256 [29784,29788]"/>
  <match src="comment: /* Pool */ [44986,44996]" dest="comment: /* Pool */ [14143,14153]"/>
  <match src="visibility [55409,55417]" dest="visibility [22499,22507]"/>
  <match src="identifier: Constants [76903,76912]" dest="identifier: Constants [60770,60779]"/>
  <match src="uint256: uint256 [11521,11528]" dest="uint256: uint256 [12106,12113]"/>
  <match src="(: ( [81364,81365]" dest="(: ( [70104,70105]"/>
  <match src="primitive_type [7768,7775]" dest="primitive_type [8353,8360]"/>
  <match src="): ) [78226,78227]" dest="): ) [77748,77749]"/>
  <match src="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [4654,4731]" dest="comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [5233,5310]"/>
  <match src="identifier: GOVERNANCE_PERIOD [44581,44598]" dest="identifier: GOVERNANCE_PERIOD [13738,13755]"/>
  <match src="array_access [101172,101211]" dest="array_access [39734,39773]"/>
  <match src="type_name [50992,50996]" dest="type_name [26151,26155]"/>
  <match src="(: ( [92625,92626]" dest="(: ( [31189,31190]"/>
  <match src="(: ( [51800,51801]" dest="(: ( [54579,54580]"/>
  <match src="identifier: D256 [11439,11443]" dest="identifier: D256 [12024,12028]"/>
  <match src="primitive_type [64771,64778]" dest="primitive_type [76014,76021]"/>
  <match src="primitive_type [31725,31731]" dest="primitive_type [46306,46312]"/>
  <match src="parameter [95720,95733]" dest="parameter [34284,34297]"/>
  <match src="(: ( [105798,105799]" dest="(: ( [67866,67867]"/>
  <match src="type_name [54387,54391]" dest="type_name [21477,21481]"/>
  <match src="primitive_type [51801,51808]" dest="primitive_type [54580,54587]"/>
  <match src="}: } [21882,21883]" dest="}: } [63880,63881]"/>
  <match src="visibility [55204,55212]" dest="visibility [22294,22302]"/>
  <match src="call_expression [31092,31457]" dest="call_expression [45673,46038]"/>
  <match src="yul_function_call [35809,35831]" dest="yul_function_call [50390,50412]"/>
  <match src="member_expression [100282,100296]" dest="member_expression [38844,38858]"/>
  <match src=",: , [97815,97816]" dest=",: , [36377,36378]"/>
  <match src="member_expression [94172,94211]" dest="member_expression [32736,32775]"/>
  <match src="state_mutability [46092,46096]" dest="state_mutability [15249,15253]"/>
  <match src="function: function [10893,10901]" dest="function: function [11478,11486]"/>
  <match src="memory: memory [11468,11474]" dest="memory: memory [12053,12059]"/>
  <match src="identifier: mod [5225,5228]" dest="identifier: mod [5804,5807]"/>
  <match src=".: . [81408,81409]" dest=".: . [70732,70733]"/>
  <match src="primitive_type [93532,93539]" dest="primitive_type [32096,32103]"/>
  <match src="expression_statement [80341,80356]" dest="expression_statement [55843,55858]"/>
  <match src="primitive_type [101803,101810]" dest="primitive_type [40365,40372]"/>
  <match src="identifier: j [36338,36339]" dest="identifier: j [50919,50920]"/>
  <match src="type_name [2826,2833]" dest="type_name [3405,3412]"/>
  <match src="event_definition [54244,54327]" dest="event_definition [21334,21417]"/>
  <match src="(: ( [31531,31532]" dest="(: ( [46112,46113]"/>
  <match src="[: [ [100219,100220]" dest="[: [ [38781,38782]"/>
  <match src="member_expression [95344,95372]" dest="member_expression [33908,33936]"/>
  <match src="primitive_type [79954,79961]" dest="primitive_type [68897,68904]"/>
  <match src="identifier: initialized [87605,87616]" dest="identifier: initialized [28448,28459]"/>
  <match src="function: function [92187,92195]" dest="function: function [30751,30759]"/>
  <match src=".: . [105317,105318]" dest=".: . [67385,67386]"/>
  <match src="function_definition [11410,11655]" dest="function_definition [11995,12240]"/>
  <match src="type_name [102561,102568]" dest="type_name [41123,41130]"/>
  <match src="identifier: GOVERNANCE_SUPER_MAJORITY [44699,44724]" dest="identifier: GOVERNANCE_SUPER_MAJORITY [13856,13881]"/>
  <match src="identifier: payloadB [32918,32926]" dest="identifier: payloadB [47499,47507]"/>
  <match src="contract_declaration [62888,63061]" dest="contract_declaration [26747,26920]"/>
  <match src="type_name [4626,4633]" dest="type_name [5205,5212]"/>
  <match src="function_definition [53398,53450]" dest="function_definition [20488,20540]"/>
  <match src="primitive_type [21604,21611]" dest="primitive_type [63374,63381]"/>
  <match src="call_argument [100518,100524]" dest="call_argument [39080,39086]"/>
  <match src="call_expression [7626,7648]" dest="call_expression [8211,8233]"/>
  <match src="type_name [37585,37592]" dest="type_name [52166,52173]"/>
  <match src="comment: // 12 epochs [44804,44816]" dest="comment: // 12 epochs [13961,13973]"/>
  <match src="{: { [87775,87776]" dest="{: { [28618,28619]"/>
  <match src="{: { [87040,87041]" dest="{: { [27883,27884]"/>
  <match src="call_expression [81725,81745]" dest="call_expression [70954,70974]"/>
  <match src="): ) [8986,8987]" dest="): ) [9571,9572]"/>
  <match src=".: . [99916,99917]" dest=".: . [38478,38479]"/>
  <match src=",: , [102016,102017]" dest=",: , [40578,40579]"/>
  <match src="primitive_type [103746,103753]" dest="primitive_type [42308,42315]"/>
  <match src="function_definition [53220,53274]" dest="function_definition [20310,20364]"/>
  <match src="type_name [30269,30273]" dest="type_name [44850,44854]"/>
  <match src="{: { [91756,91757]" dest="{: { [30320,30321]"/>
  <match src="type_name [1910,1917]" dest="type_name [2489,2496]"/>
  <match src="parameter [55156,55170]" dest="parameter [22246,22260]"/>
  <match src="(: ( [54681,54682]" dest="(: ( [21771,21772]"/>
  <match src="type_name [96108,96115]" dest="type_name [34672,34679]"/>
  <match src="call_expression [10855,10873]" dest="call_expression [11440,11458]"/>
  <match src="type_name [97882,97889]" dest="type_name [36444,36451]"/>
  <match src="identifier: spender [53638,53645]" dest="identifier: spender [20728,20735]"/>
  <match src="identifier: spender [101997,102004]" dest="identifier: spender [40559,40566]"/>
  <match src=",: , [17354,17355]" dest=",: , [59805,59806]"/>
  <match src="function_body [7414,7468]" dest="function_body [7999,8053]"/>
  <match src="=: = [37082,37083]" dest="=: = [51663,51664]"/>
  <match src="function_definition [46049,46161]" dest="function_definition [15206,15318]"/>
  <match src="return_statement [38902,38916]" dest="return_statement [53483,53497]"/>
  <match src="call_struct_argument [46699,46731]" dest="call_struct_argument [15856,15888]"/>
  <match src="return: return [11349,11355]" dest="return: return [11934,11940]"/>
  <match src="call_expression [96683,96704]" dest="call_expression [35247,35268]"/>
  <match src="call_argument [78216,78226]" dest="call_argument [77744,77748]"/>
  <match src="parameter [92759,92766]" dest="parameter [31323,31330]"/>
  <match src="(: ( [99996,99997]" dest="(: ( [38558,38559]"/>
  <match src="primitive_type [102351,102358]" dest="primitive_type [40913,40920]"/>
  <match src="identifier: epochs [101249,101255]" dest="identifier: epochs [39811,39817]"/>
  <match src="pure: pure [11051,11055]" dest="pure: pure [11636,11640]"/>
  <match src="): ) [38974,38975]" dest="): ) [53555,53556]"/>
  <match src="}: } [46304,46305]" dest="}: } [15461,15462]"/>
  <match src="state_mutability [32264,32268]" dest="state_mutability [46845,46849]"/>
  <match src="(: ( [10124,10125]" dest="(: ( [10709,10710]"/>
  <match src="address: address [13867,13874]" dest="address: address [23658,23665]"/>
  <match src="uint256: uint256 [7501,7508]" dest="uint256: uint256 [8086,8093]"/>
  <match src="{: { [8042,8043]" dest="{: { [8627,8628]"/>
  <match src="member_expression [95652,95679]" dest="member_expression [34216,34243]"/>
  <match src="if: if [29929,29931]" dest="if: if [44510,44512]"/>
  <match src="primitive_type [44481,44488]" dest="primitive_type [13638,13645]"/>
  <match src="memory: memory [94457,94463]" dest="memory: memory [33021,33027]"/>
  <match src="string_literal [24300,24338]" dest="string_literal [62058,62075]"/>
  <match src="library_declaration [6773,11658]" dest="library_declaration [7358,12243]"/>
  <match src="{: { [9245,9246]" dest="{: { [9830,9831]"/>
  <match src="state_mutability [8005,8009]" dest="state_mutability [8590,8594]"/>
  <match src="parameter [101642,101657]" dest="parameter [40204,40219]"/>
  <match src="type_name [55304,55311]" dest="type_name [22394,22401]"/>
  <match src="identifier: value [11634,11639]" dest="identifier: value [12219,12224]"/>
  <match src="identifier: IOracle [62897,62904]" dest="identifier: IOracle [26756,26763]"/>
  <match src="returns: returns [63040,63047]" dest="returns: returns [26899,26906]"/>
  <match src="state_mutability [8237,8241]" dest="state_mutability [8822,8826]"/>
  <match src="identifier: getPartial [9919,9929]" dest="identifier: getPartial [10504,10514]"/>
  <match src="(: ( [80670,80671]" dest="(: ( [69803,69804]"/>
  <match src="identifier: msg [81460,81463]" dest="identifier: msg [71208,71211]"/>
  <match src="call_expression [10120,10174]" dest="call_expression [10705,10759]"/>
  <match src="private: private [44433,44440]" dest="private: private [13590,13597]"/>
  <match src="function: function [89736,89744]" dest="function: function [74369,74377]"/>
  <match src="(: ( [99112,99113]" dest="(: ( [37674,37675]"/>
  <match src="identifier: accounts [94179,94187]" dest="identifier: accounts [32743,32751]"/>
  <match src="(: ( [32509,32510]" dest="(: ( [47090,47091]"/>
  <match src="{: { [90480,90481]" dest="{: { [75113,75114]"/>
  <match src=".: . [99985,99986]" dest=".: . [38547,38548]"/>
  <match src="contract_body [50815,51001]" dest="contract_body [25974,26160]"/>
  <match src="type_cast_expression [31725,32060]" dest="type_cast_expression [46306,46641]"/>
  <match src="state_variable_declaration [6877,6908]" dest="state_variable_declaration [7462,7493]"/>
  <match src="primitive_type [98009,98016]" dest="primitive_type [36571,36578]"/>
  <match src="identifier: strategy [94724,94732]" dest="identifier: strategy [33288,33296]"/>
  <match src="primitive_type [53749,53753]" dest="primitive_type [20839,20843]"/>
  <match src="number_literal: 4 [38735,38736]" dest="number_literal: 4 [53316,53317]"/>
  <match src="&quot;: &quot; [57427,57428]" dest="&quot;: &quot; [71176,71177]"/>
  <match src="visibility [63705,63713]" dest="visibility [76292,76300]"/>
  <match src="call_argument [23707,23745]" dest="call_argument [61915,61946]"/>
  <match src="call_expression [9263,9303]" dest="call_expression [9848,9888]"/>
  <match src="identifier: totalSupply [91831,91842]" dest="identifier: totalSupply [30395,30406]"/>
  <match src="visibility [104152,104160]" dest="visibility [42714,42722]"/>
  <match src="array_access [101172,101196]" dest="array_access [39734,39758]"/>
  <match src="call_argument [89979,89986]" dest="call_argument [74612,74619]"/>
  <match src="memory: memory [47718,47724]" dest="memory: memory [16875,16881]"/>
  <match src="type_name [35986,35991]" dest="type_name [50567,50572]"/>
  <match src=",: , [54401,54402]" dest=",: , [21491,21492]"/>
  <match src="call_argument [49891,49910]" dest="call_argument [63494,63531]"/>
  <match src="uint256: uint256 [79920,79927]" dest="uint256: uint256 [69036,69043]"/>
  <match src="address: address [15266,15273]" dest="address: address [25057,25064]"/>
  <match src="(: ( [92735,92736]" dest="(: ( [31299,31300]"/>
  <match src=",: , [105379,105380]" dest=",: , [67447,67448]"/>
  <match src="parameter [94308,94315]" dest="parameter [32872,32879]"/>
  <match src="state_variable_declaration [89238,89352]" dest="state_variable_declaration [73871,73985]"/>
  <match src="primitive_type [19292,19299]" dest="primitive_type [59036,59043]"/>
  <match src="}: } [10591,10592]" dest="}: } [11176,11177]"/>
  <match src="identifier: sender [81804,81810]" dest="identifier: sender [70532,70538]"/>
  <match src="parameter [53559,53574]" dest="parameter [20649,20664]"/>
  <match src="identifier: b [7888,7889]" dest="identifier: b [8473,8474]"/>
  <match src=".: . [104518,104519]" dest=".: . [43080,43081]"/>
  <match src="block_statement [3124,3159]" dest="block_statement [3703,3738]"/>
  <match src="variable_declaration [94433,94471]" dest="variable_declaration [32997,33035]"/>
  <match src="uint256: uint256 [95138,95145]" dest="uint256: uint256 [33702,33709]"/>
  <match src="type_name [101088,101094]" dest="type_name [39650,39656]"/>
  <match src="pure: pure [47691,47695]" dest="pure: pure [16848,16852]"/>
  <match src="(: ( [53418,53419]" dest="(: ( [20508,20509]"/>
  <match src="identifier: add [83902,83905]" dest="identifier: add [58127,58130]"/>
  <match src="return: return [92563,92569]" dest="return: return [31127,31133]"/>
  <match src="public: public [92738,92744]" dest="public: public [31302,31308]"/>
  <match src="member_expression [102454,102496]" dest="member_expression [41016,41058]"/>
  <match src="primitive_type [91436,91442]" dest="primitive_type [30000,30006]"/>
  <match src="identifier: blockTimestamp [94689,94703]" dest="identifier: blockTimestamp [33253,33267]"/>
  <match src="(: ( [8754,8755]" dest="(: ( [9339,9340]"/>
  <match src="function_body [37061,37936]" dest="function_body [51642,52517]"/>
  <match src="function_body [10268,10315]" dest="function_body [10853,10900]"/>
  <match src=".: . [11551,11552]" dest=".: . [12136,12137]"/>
  <match src="function_body [101483,101587]" dest="function_body [40045,40149]"/>
  <match src="call_argument [31304,31323]" dest="call_argument [45885,45904]"/>
  <match src=".: . [82953,82954]" dest=".: . [76383,76384]"/>
  <match src="type_name [53321,53327]" dest="type_name [20411,20417]"/>
  <match src="type_name [54307,54314]" dest="type_name [21397,21404]"/>
  <match src="(: ( [83281,83282]" dest="(: ( [71014,71015]"/>
  <match src="type_name [101627,101634]" dest="type_name [40189,40196]"/>
  <match src="type_name [2516,2523]" dest="type_name [3095,3102]"/>
  <match src="primitive_type [105559,105566]" dest="primitive_type [67627,67634]"/>
  <match src="member_expression [103418,103454]" dest="member_expression [41980,42016]"/>
  <match src="type_name [94906,94913]" dest="type_name [33470,33477]"/>
  <match src="uint: uint [55046,55050]" dest="uint: uint [22136,22140]"/>
  <match src="): ) [8099,8100]" dest="): ) [8684,8685]"/>
  <match src=".: . [103663,103664]" dest=".: . [42225,42226]"/>
  <match src="internal: internal [98598,98606]" dest="internal: internal [37160,37168]"/>
  <match src="type_name [103546,103552]" dest="type_name [42108,42114]"/>
  <match src="identifier: amount [103938,103944]" dest="identifier: amount [42500,42506]"/>
  <match src="}: } [92928,92929]" dest="}: } [31492,31493]"/>
  <match src="pure: pure [46362,46366]" dest="pure: pure [15519,15523]"/>
  <match src="bytes: bytes [36425,36430]" dest="bytes: bytes [51006,51011]"/>
  <match src="binary_expression [38693,38710]" dest="binary_expression [53274,53291]"/>
  <match src="comment: // Mainnet [43754,43764]" dest="comment: // Mainnet [12911,12921]"/>
  <match src="view: view [63035,63039]" dest="view: view [26894,26898]"/>
  <match src="return_type_definition [5942,5959]" dest="return_type_definition [6521,6538]"/>
  <match src="number_literal: 1e10 [44116,44120]" dest="number_literal: 1e10 [13273,13277]"/>
  <match src="}: } [33576,33577]" dest="}: } [48157,48158]"/>
  <match src="uint256: uint256 [79848,79855]" dest="uint256: uint256 [60435,60442]"/>
  <match src="bool: bool [10831,10835]" dest="bool: bool [11416,11420]"/>
  <match src="return_type_definition [38022,38044]" dest="return_type_definition [52603,52625]"/>
  <match src="member_expression [80562,80572]" dest="member_expression [69719,69729]"/>
  <match src="type_name [45741,45754]" dest="type_name [14898,14911]"/>
  <match src=".: . [92155,92156]" dest=".: . [30719,30720]"/>
  <match src="&quot;: &quot; [90409,90410]" dest="&quot;: &quot; [75042,75043]"/>
  <match src="pure: pure [29908,29912]" dest="pure: pure [44489,44493]"/>
  <match src="type_name [38572,38579]" dest="type_name [53153,53160]"/>
  <match src="using_directive [6796,6823]" dest="using_directive [7381,7408]"/>
  <match src="return_type_definition [9651,9672]" dest="return_type_definition [10236,10257]"/>
  <match src="}: } [98521,98522]" dest="}: } [37083,37084]"/>
  <match src="): ) [35074,35075]" dest="): ) [49655,49656]"/>
  <match src="identifier: account [93464,93471]" dest="identifier: account [32028,32035]"/>
  <match src="&quot;: &quot; [84346,84347]" dest="&quot;: &quot; [76445,76446]"/>
  <match src="}: } [98986,98987]" dest="}: } [37548,37549]"/>
  <match src="identifier: balance [100543,100550]" dest="identifier: balance [39105,39112]"/>
  <match src="}: } [6033,6034]" dest="}: } [6612,6613]"/>
  <match src="event_definition [27605,27648]" dest="event_definition [60160,60253]"/>
  <match src="): ) [77753,77754]" dest="): ) [55959,55960]"/>
  <match src="state_mutability [13064,13068]" dest="state_mutability [22855,22859]"/>
  <match src="return_type_definition [8838,8859]" dest="return_type_definition [9423,9444]"/>
  <match src="identifier: Decimal [47705,47712]" dest="identifier: Decimal [16862,16869]"/>
  <match src="identifier: _state [100258,100264]" dest="identifier: _state [38820,38826]"/>
  <match src="member_expression [92462,92476]" dest="member_expression [31026,31040]"/>
  <match src=".: . [101136,101137]" dest=".: . [39698,39699]"/>
  <match src="indexed: indexed [54263,54270]" dest="indexed: indexed [21353,21360]"/>
  <match src="identifier: _state [92355,92361]" dest="identifier: _state [30919,30925]"/>
  <match src="identifier: b [4446,4447]" dest="identifier: b [5025,5026]"/>
  <match src=",: , [31159,31160]" dest=",: , [45740,45741]"/>
  <match src=".: . [46271,46272]" dest=".: . [15428,15429]"/>
  <match src=".: . [103235,103236]" dest=".: . [41797,41798]"/>
  <match src="bool: bool [32126,32130]" dest="bool: bool [46707,46711]"/>
  <match src="identifier: epoch [76891,76896]" dest="identifier: epoch [60758,60763]"/>
  <match src="parameter [32221,32237]" dest="parameter [46802,46818]"/>
  <match src="external: external [68107,68115]" dest="external: external [70904,70912]"/>
  <match src="identifier: _state [95344,95350]" dest="identifier: _state [33908,33914]"/>
  <match src="identifier: getGovernanceSuperMajority [46594,46620]" dest="identifier: getGovernanceSuperMajority [15751,15777]"/>
  <match src="primitive_type [30312,30319]" dest="primitive_type [44893,44900]"/>
  <match src="identifier: approve [87516,87523]" dest="identifier: approve [28359,28366]"/>
  <match src="call_argument [35230,35235]" dest="call_argument [49811,49816]"/>
  <match src="pure: pure [46211,46215]" dest="pure: pure [15368,15372]"/>
  <match src="{: { [91154,91155]" dest="{: { [29718,29719]"/>
  <match src="function: function [99230,99238]" dest="function: function [37792,37800]"/>
  <match src="type_name [11324,11331]" dest="type_name [11909,11916]"/>
  <match src="function_definition [95566,95687]" dest="function_definition [34130,34251]"/>
  <match src="variable_declaration [1519,1528]" dest="variable_declaration [2098,2107]"/>
  <match src="identifier: _transfer [21421,21430]" dest="identifier: transferCoupons [63162,63177]"/>
  <match src="identifier: GOVERNANCE_QUORUM [46550,46567]" dest="identifier: GOVERNANCE_QUORUM [15707,15724]"/>
  <match src="type_name [40669,40676]" dest="type_name [63213,63220]"/>
  <match src="number_literal: 0 [7171,7172]" dest="number_literal: 0 [7756,7757]"/>
  <match src="): ) [10441,10442]" dest="): ) [11026,11027]"/>
  <match src="function_body [9446,9512]" dest="function_body [10031,10097]"/>
  <match src="state_variable_declaration [29524,29555]" dest="state_variable_declaration [44105,44136]"/>
  <match src="[: [ [102467,102468]" dest="[: [ [41029,41030]"/>
  <match src="return_statement [45774,45911]" dest="return_statement [14931,15068]"/>
  <match src="return: return [8494,8500]" dest="return: return [9079,9085]"/>
  <match src="member_expression [101957,101972]" dest="member_expression [40519,40534]"/>
  <match src="function_body [47572,47640]" dest="function_body [16729,16797]"/>
  <match src="): ) [53603,53604]" dest="): ) [20693,20694]"/>
  <match src="type_name [101851,101857]" dest="type_name [40413,40419]"/>
  <match src="assignment_expression [38667,38711]" dest="assignment_expression [53248,53292]"/>
  <match src="address: address [55126,55133]" dest="address: address [22216,22223]"/>
  <match src="=: = [36242,36243]" dest="=: = [50823,50824]"/>
  <match src="identifier: dollarAmount [78030,78042]" dest="identifier: dollarAmount [62187,62199]"/>
  <match src="primitive_type [101040,101047]" dest="primitive_type [39602,39609]"/>
  <match src="call_expression [82145,82188]" dest="call_expression [71059,71102]"/>
  <match src="type_name [32815,32819]" dest="type_name [47396,47400]"/>
  <match src="identifier: amount [74847,74853]" dest="identifier: amount [55399,55405]"/>
  <match src="identifier: epoch [95069,95074]" dest="identifier: epoch [33633,33638]"/>
  <match src="(: ( [55406,55407]" dest="(: ( [22496,22497]"/>
  <match src="{: { [94154,94155]" dest="{: { [32718,32719]"/>
  <match src="type_name [45101,45108]" dest="type_name [14258,14265]"/>
  <match src="identifier: reason [30626,30632]" dest="identifier: reason [45207,45213]"/>
  <match src="call_argument [34827,34846]" dest="call_argument [49408,49427]"/>
  <match src="identifier: mul [9769,9772]" dest="identifier: mul [10354,10357]"/>
  <match src="): ) [62959,62960]" dest="): ) [26818,26819]"/>
  <match src="member_expression [95510,95523]" dest="member_expression [34074,34087]"/>
  <match src="): ) [38224,38225]" dest="): ) [52805,52806]"/>
  <match src="parameter [94107,94122]" dest="parameter [32671,32686]"/>
  <match src="primitive_type [13194,13201]" dest="primitive_type [22985,22992]"/>
  <match src="&quot;: &quot; [23823,23824]" dest="&quot;: &quot; [63010,63011]"/>
  <match src="identifier: Require [82643,82650]" dest="identifier: Require [58290,58297]"/>
  <match src="uint256: uint256 [80109,80116]" dest="uint256: uint256 [76037,76044]"/>
  <match src="uint256: uint256 [45625,45632]" dest="uint256: uint256 [14782,14789]"/>
  <match src="address: address [88163,88170]" dest="address: address [29006,29013]"/>
  <match src="identifier: Status [94014,94020]" dest="identifier: Status [32578,32584]"/>
  <match src="type_name [53839,53843]" dest="type_name [20929,20933]"/>
  <match src="identifier: amount [76015,76021]" dest="identifier: amount [61614,61620]"/>
  <match src="identifier: D256 [8574,8578]" dest="identifier: D256 [9159,9163]"/>
  <match src="pure: pure [42287,42291]" dest="pure: pure [19496,19500]"/>
  <match src="inheritance_specifier [97817,97824]" dest="inheritance_specifier [36379,36386]"/>
  <match src="call_argument [8915,8916]" dest="call_argument [9500,9501]"/>
  <match src="identifier: Account [94030,94037]" dest="identifier: Account [32594,32601]"/>
  <match src="): ) [32040,32041]" dest="): ) [46621,46622]"/>
  <match src="state_mutability [30380,30384]" dest="state_mutability [44961,44965]"/>
  <match src=",: , [31355,31356]" dest=",: , [45936,45937]"/>
  <match src="=: = [38071,38072]" dest="=: = [52652,52653]"/>
  <match src="parameter [85513,85517]" dest="parameter [72319,72323]"/>
  <match src="type_name [8941,8945]" dest="type_name [9526,9530]"/>
  <match src="comment: /**      * Global      */ [92048,92075]" dest="comment: /**      * Global      */ [30612,30639]"/>
  <match src="visibility [99508,99516]" dest="visibility [38070,38078]"/>
  <match src="identifier: couponAllowances [101718,101734]" dest="identifier: couponAllowances [40280,40296]"/>
  <match src="primitive_type [36097,36102]" dest="primitive_type [50678,50683]"/>
  <match src=".: . [93859,93860]" dest=".: . [32423,32424]"/>
  <match src=":: : [81294,81295]" dest=":: : [70049,70050]"/>
  <match src=",: , [79375,79376]" dest=",: , [68660,68661]"/>
  <match src=".: . [78278,78279]" dest=".: . [59079,59080]"/>
  <match src="expression_statement [82772,82893]" dest="expression_statement [78742,78852]"/>
  <match src="bytes32: bytes32 [34213,34220]" dest="bytes32: bytes32 [48794,48801]"/>
  <match src="event_paramater [52431,52453]" dest="event_paramater [60280,60300]"/>
  <match src=".: . [91907,91908]" dest=".: . [30471,30472]"/>
  <match src="(: ( [11381,11382]" dest="(: ( [11966,11967]"/>
  <match src="(: ( [46908,46909]" dest="(: ( [16065,16066]"/>
  <match src="call_expression [46685,46733]" dest="call_expression [15842,15890]"/>
  <match src="type_name [14602,14609]" dest="type_name [24393,24400]"/>
  <match src="event_paramater [54489,54507]" dest="event_paramater [21579,21597]"/>
  <match src="): ) [33389,33390]" dest="): ) [47970,47971]"/>
  <match src="binary_expression [5979,5985]" dest="binary_expression [6558,6564]"/>
  <match src="variable_declaration [73212,73236]" dest="variable_declaration [62099,62112]"/>
  <match src="): ) [90047,90048]" dest="): ) [74680,74681]"/>
  <match src="call_expression [82199,82252]" dest="call_expression [62264,62322]"/>
  <match src="identifier: a [5886,5887]" dest="identifier: a [6465,6466]"/>
  <match src="(: ( [45624,45625]" dest="(: ( [14781,14782]"/>
  <match src="internal: internal [89782,89790]" dest="internal: internal [74415,74423]"/>
  <match src="}: } [4758,4759]" dest="}: } [5337,5338]"/>
  <match src="expression_statement [83465,83480]" dest="expression_statement [58647,58662]"/>
  <match src="false: false [98199,98204]" dest="false: false [36761,36766]"/>
  <match src="function_body [96391,96453]" dest="function_body [34955,35017]"/>
  <match src="primitive_type [44906,44913]" dest="primitive_type [14063,14070]"/>
  <match src="external: external [54015,54023]" dest="external: external [21105,21113]"/>
  <match src="(: ( [83307,83308]" dest="(: ( [71045,71046]"/>
  <match src="call_argument [30703,30711]" dest="call_argument [45284,45292]"/>
  <match src="identifier: BOOTSTRAPPING_PRICE [46285,46304]" dest="identifier: BOOTSTRAPPING_PRICE [15442,15461]"/>
  <match src="identifier: balanceOfRewarded [82932,82949]" dest="identifier: balanceOf [76370,76379]"/>
  <match src="): ) [34051,34052]" dest="): ) [48632,48633]"/>
  <match src="return: return [10417,10423]" dest="return: return [11002,11008]"/>
  <match src="{: { [93168,93169]" dest="{: { [31732,31733]"/>
  <match src="uint256: uint256 [44746,44753]" dest="uint256: uint256 [13903,13910]"/>
  <match src="expression_statement [98457,98515]" dest="expression_statement [37019,37077]"/>
  <match src="{: { [31023,31024]" dest="{: { [45604,45605]"/>
  <match src="): ) [33557,33558]" dest="): ) [48138,48139]"/>
  <match src="state_mutability [10817,10821]" dest="state_mutability [11402,11406]"/>
  <match src="identifier: setup [62921,62926]" dest="identifier: setup [26780,26785]"/>
  <match src="identifier: onlyFrozen [80744,80754]" dest="identifier: onlyFrozenOrFluid [70913,70930]"/>
  <match src="type_name [96767,96774]" dest="type_name [35331,35338]"/>
  <match src="uint256: uint256 [1499,1506]" dest="uint256: uint256 [2078,2085]"/>
  <match src="(: ( [81518,81519]" dest="(: ( [70230,70231]"/>
  <match src="returns: returns [53895,53902]" dest="returns: returns [20985,20992]"/>
  <match src="state_mutability [95014,95018]" dest="state_mutability [33578,33582]"/>
  <match src="if: if [8876,8878]" dest="if: if [9461,9463]"/>
  <match src="address: address [45520,45527]" dest="address: address [14677,14684]"/>
  <match src="parameter [13543,13547]" dest="parameter [23334,23338]"/>
  <match src="string [3847,3875]" dest="string [4426,4454]"/>
  <match src="identifier: msg [81996,81999]" dest="identifier: msg [77020,77023]"/>
  <match src="}: } [94559,94560]" dest="}: } [33123,33124]"/>
  <match src="parameter [97075,97087]" dest="parameter [35639,35651]"/>
  <match src="}: } [11654,11655]" dest="}: } [12239,12240]"/>
  <match src="}: } [99402,99403]" dest="}: } [37964,37965]"/>
  <match src="type_name [55270,55274]" dest="type_name [22360,22364]"/>
  <match src="/: / [3209,3210]" dest="/: / [3788,3789]"/>
  <match src="function: function [50865,50873]" dest="function: function [26024,26032]"/>
  <match src="type_name [30896,30903]" dest="type_name [45477,45484]"/>
  <match src="): ) [45495,45496]" dest="): ) [14652,14653]"/>
  <match src="(: ( [73545,73546]" dest="(: ( [78910,78911]"/>
  <match src="call_expression [49115,49204]" dest="call_expression [54872,54925]"/>
  <match src="identifier: stringifyTruncated [32491,32509]" dest="identifier: stringifyTruncated [47072,47090]"/>
  <match src="identifier: reason [98590,98596]" dest="identifier: reason [37152,37158]"/>
  <match src="member_expression [100955,100977]" dest="member_expression [39517,39539]"/>
  <match src="returns: returns [9860,9867]" dest="returns: returns [10445,10452]"/>
  <match src="): ) [45909,45910]" dest="): ) [15066,15067]"/>
  <match src="(: ( [53295,53296]" dest="(: ( [20385,20386]"/>
  <match src=",: , [34277,34278]" dest=",: , [48858,48859]"/>
  <match src="identifier: owner [53483,53488]" dest="identifier: owner [20573,20578]"/>
  <match src="): ) [98978,98979]" dest="): ) [37540,37541]"/>
  <match src="parameter [99475,99490]" dest="parameter [38037,38052]"/>
  <match src="): ) [47680,47681]" dest="): ) [16837,16838]"/>
  <match src="identifier: z [37881,37882]" dest="identifier: z [52462,52463]"/>
  <match src="identifier: div [94754,94757]" dest="identifier: div [33318,33321]"/>
  <match src="identifier: rejectFor [96470,96479]" dest="identifier: rejectFor [35034,35043]"/>
  <match src="call_argument [3841,3842]" dest="call_argument [4420,4421]"/>
  <match src="function: function [45567,45575]" dest="function: function [14724,14732]"/>
  <match src="identifier: transfer [80787,80795]" dest="identifier: transfer [69656,69664]"/>
  <match src="user_defined_type [9570,9574]" dest="user_defined_type [10155,10159]"/>
  <match src="identifier: b [3216,3217]" dest="identifier: b [3795,3796]"/>
  <match src="parameter [11324,11331]" dest="parameter [11909,11916]"/>
  <match src="member_expression [94006,94020]" dest="member_expression [32570,32584]"/>
  <match src="primitive_type [91866,91873]" dest="primitive_type [30430,30437]"/>
  <match src="member_expression [99528,99543]" dest="member_expression [38090,38105]"/>
  <match src="call_argument [81648,81649]" dest="call_argument [71310,71311]"/>
  <match src="visibility [64399,64406]" dest="visibility [59863,59870]"/>
  <match src="(: ( [93257,93258]" dest="(: ( [31821,31822]"/>
  <match src="call_argument [38303,38313]" dest="call_argument [52884,52894]"/>
  <match src="primitive_type [83060,83067]" dest="primitive_type [61010,61017]"/>
  <match src="identifier: bonded [102261,102267]" dest="identifier: bonded [40823,40829]"/>
  <match src="internal: internal [3787,3795]" dest="internal: internal [4366,4374]"/>
  <match src="}: } [87324,87325]" dest="}: } [28167,28168]"/>
  <match src="if_statement [11546,11605]" dest="if_statement [12131,12190]"/>
  <match src="): ) [30410,30411]" dest="): ) [44991,44992]"/>
  <match src="identifier: balance [92469,92476]" dest="identifier: balance [31033,31040]"/>
  <match src="): ) [94285,94286]" dest="): ) [32849,32850]"/>
  <match src="member_expression [91774,91789]" dest="member_expression [30338,30353]"/>
  <match src="primitive_type [71055,71062]" dest="primitive_type [54487,54494]"/>
  <match src="primitive_type [23642,23649]" dest="primitive_type [62900,62907]"/>
  <match src="type_name [43797,43804]" dest="type_name [12954,12961]"/>
  <match src="(: ( [92327,92328]" dest="(: ( [30891,30892]"/>
  <match src="return: return [47583,47589]" dest="return: return [16740,16746]"/>
  <match src="visibility [9395,9403]" dest="visibility [9980,9988]"/>
  <match src="private: private [25090,25097]" dest="private: private [65600,65607]"/>
  <match src="sload: sload [97177,97182]" dest="sload: sload [35741,35746]"/>
  <match src="user_defined_type [46646,46658]" dest="user_defined_type [15803,15815]"/>
  <match src="identifier: epochTimeWithStrategy [94522,94543]" dest="identifier: epochTimeWithStrategy [33086,33107]"/>
  <match src="visibility [45249,45256]" dest="visibility [14406,14413]"/>
  <match src="number_literal: 0x203c [29639,29645]" dest="number_literal: 0x203c [44220,44226]"/>
  <match src="(: ( [90501,90502]" dest="(: ( [75134,75135]"/>
  <match src="(: ( [9002,9003]" dest="(: ( [9587,9588]"/>
  <match src="call_expression [31218,31244]" dest="call_expression [45799,45825]"/>
  <match src="identifier: owner [54008,54013]" dest="identifier: owner [21098,21103]"/>
  <match src="): ) [72139,72140]" dest="): ) [79532,79533]"/>
  <match src="primitive_type [34193,34197]" dest="primitive_type [48774,48778]"/>
  <match src="number_literal: 33e16 [44655,44660]" dest="number_literal: 33e16 [13812,13817]"/>
  <match src="function_definition [54924,54985]" dest="function_definition [22014,22075]"/>
  <match src="): ) [38364,38365]" dest="): ) [52945,52946]"/>
  <match src="if: if [65681,65683]" dest="if: if [66516,66518]"/>
  <match src="indexed: indexed [15511,15518]" dest="indexed: indexed [25302,25309]"/>
  <match src=",: , [33312,33313]" dest=",: , [47893,47894]"/>
  <match src="): ) [7174,7175]" dest="): ) [7759,7760]"/>
  <match src="uint256: uint256 [18645,18652]" dest="uint256: uint256 [58888,58895]"/>
  <match src="call_argument [7285,7300]" dest="call_argument [7870,7885]"/>
  <match src="comment: // Overridable for testing [94825,94851]" dest="comment: // Overridable for testing [33389,33415]"/>
  <match src="struct_member [87299,87315]" dest="struct_member [28142,28158]"/>
  <match src="type_name [69798,69805]" dest="type_name [64605,64612]"/>
  <match src="): ) [46786,46787]" dest="): ) [15943,15944]"/>
  <match src="identifier: accounts [101702,101710]" dest="identifier: accounts [40264,40272]"/>
  <match src="identifier: reason [89879,89885]" dest="identifier: reason [74512,74518]"/>
  <match src=".: . [8090,8091]" dest=".: . [8675,8676]"/>
  <match src="state_mutability [54024,54028]" dest="state_mutability [21114,21118]"/>
  <match src="(: ( [47148,47149]" dest="(: ( [16305,16306]"/>
  <match src="emit_statement [81614,81659]" dest="emit_statement [71274,71330]"/>
  <match src="identifier: add [99664,99667]" dest="identifier: add [38226,38229]"/>
  <match src="binary_expression [1531,1536]" dest="binary_expression [2110,2115]"/>
  <match src=".: . [98769,98770]" dest=".: . [37331,37332]"/>
  <match src="call_argument [82506,82520]" dest="call_argument [70817,70831]"/>
  <match src="user_defined_type [92226,92233]" dest="user_defined_type [30790,30797]"/>
  <match src="{: { [7617,7618]" dest="{: { [8202,8203]"/>
  <match src="uint256: uint256 [19292,19299]" dest="uint256: uint256 [59036,59043]"/>
  <match src="identifier: initializer [106639,106650]" dest="identifier: initializer [80639,80650]"/>
  <match src="type_name [54855,54862]" dest="type_name [21945,21952]"/>
  <match src="function: function [95695,95703]" dest="function: function [34259,34267]"/>
  <match src="call_argument [11107,11111]" dest="call_argument [11692,11696]"/>
  <match src="address: address [99702,99709]" dest="address: address [38264,38271]"/>
  <match src=".: . [100786,100787]" dest=".: . [39348,39349]"/>
  <match src="member_expression [101242,101270]" dest="member_expression [39804,39832]"/>
  <match src="return: return [96824,96830]" dest="return: return [35388,35394]"/>
  <match src="parameter [98009,98026]" dest="parameter [36571,36588]"/>
  <match src="revert_statement [31038,31492]" dest="revert_statement [45619,46073]"/>
  <match src=",: , [33618,33619]" dest=",: , [48199,48200]"/>
  <match src="primitive_type [33609,33613]" dest="primitive_type [48190,48194]"/>
  <match src="identifier: COMMA [34717,34722]" dest="identifier: COMMA [49298,49303]"/>
  <match src="member_expression [99971,99985]" dest="member_expression [38533,38547]"/>
  <match src="): ) [92099,92100]" dest="): ) [30663,30664]"/>
  <match src="function_definition [32102,32783]" dest="function_definition [46683,47364]"/>
  <match src="number_literal: 2 [10446,10447]" dest="number_literal: 2 [11031,11032]"/>
  <match src="identifier: sender [82174,82180]" dest="identifier: sender [71088,71094]"/>
  <match src="member_expression [101957,101996]" dest="member_expression [40519,40558]"/>
  <match src="primitive_type [87216,87223]" dest="primitive_type [28059,28066]"/>
  <match src="identifier: value [81698,81703]" dest="identifier: value [70897,70902]"/>
  <match src="state_mutability [8637,8641]" dest="state_mutability [9222,9226]"/>
  <match src=".: . [82100,82101]" dest=".: . [70540,70541]"/>
  <match src="variable_declaration [67140,67164]" dest="variable_declaration [65794,65815]"/>
  <match src="comment: // benefit is lost if 'b' is also tested. [2980,3021]" dest="comment: // benefit is lost if 'b' is also tested. [3559,3600]"/>
  <match src="}: } [92039,92040]" dest="}: } [30603,30604]"/>
  <match src="type_name [79954,79961]" dest="type_name [68897,68904]"/>
  <match src="primitive_type [55316,55321]" dest="primitive_type [22406,22411]"/>
  <match src="{: { [100429,100430]" dest="{: { [38991,38992]"/>
  <match src="(: ( [9929,9930]" dest="(: ( [10514,10515]"/>
  <match src="(: ( [89851,89852]" dest="(: ( [74484,74485]"/>
  <match src="(: ( [50942,50943]" dest="(: ( [26101,26102]"/>
  <match src="identifier: pair [63019,63023]" dest="identifier: pair [26878,26882]"/>
  <match src="identifier: expiration [102420,102430]" dest="identifier: expiration [40982,40992]"/>
  <match src="type_name [93766,93773]" dest="type_name [32330,32337]"/>
  <match src="identifier: from [53791,53795]" dest="identifier: from [20881,20885]"/>
  <match src="): ) [31632,31633]" dest="): ) [46213,46214]"/>
  <match src="type_name [36232,36239]" dest="type_name [50813,50820]"/>
  <match src="identifier: Getters [91137,91144]" dest="identifier: Getters [29701,29708]"/>
  <match src="memory: memory [38196,38202]" dest="memory: memory [52777,52783]"/>
  <match src="type_name [11260,11267]" dest="type_name [11845,11852]"/>
  <match src="internal: internal [46083,46091]" dest="internal: internal [15240,15248]"/>
  <match src="function_body [51776,51779]" dest="function_body [80658,80666]"/>
  <match src="return: return [93399,93405]" dest="return: return [31963,31969]"/>
  <match src="visibility [47834,47842]" dest="visibility [16991,16999]"/>
  <match src="(: ( [73255,73256]" dest="(: ( [62120,62121]"/>
  <match src="parameter [99264,99278]" dest="parameter [37826,37840]"/>
  <match src="): ) [102024,102025]" dest="): ) [40586,40587]"/>
  <match src="type_name [14619,14626]" dest="type_name [24410,24417]"/>
  <match src="number_literal: 1 [56418,56419]" dest="number_literal: 1 [78114,78115]"/>
  <match src="identifier: that [82651,82655]" dest="identifier: that [58298,58302]"/>
  <match src="type_name [100398,100404]" dest="type_name [38960,38966]"/>
  <match src="string [36165,36168]" dest="string [50746,50749]"/>
  <match src="return_statement [47436,47481]" dest="return_statement [16593,16638]"/>
  <match src="struct_member [87732,87745]" dest="struct_member [28575,28588]"/>
  <match src="{: { [8674,8675]" dest="{: { [9259,9260]"/>
  <match src="address: address [55455,55462]" dest="address: address [22545,22552]"/>
  <match src="returns: returns [10941,10948]" dest="returns: returns [11526,11533]"/>
  <match src="call_argument [81849,81868]" dest="call_argument [79056,79159]"/>
  <match src="}: } [92702,92703]" dest="}: } [31266,31267]"/>
  <match src="&quot;: &quot; [91495,91496]" dest="&quot;: &quot; [30059,30060]"/>
  <match src="identifier: getSupplyChangeLimit [47505,47525]" dest="identifier: getSupplyChangeLimit [16662,16682]"/>
  <match src="internal: internal [46911,46919]" dest="internal: internal [16068,16076]"/>
  <match src="parameter [93804,93818]" dest="parameter [32368,32382]"/>
  <match src="identifier: c [1613,1614]" dest="identifier: c [2192,2193]"/>
  <match src="identifier: ASCII_ZERO [36811,36821]" dest="identifier: ASCII_ZERO [51392,51402]"/>
  <match src="type_name [7969,7976]" dest="type_name [8554,8561]"/>
  <match src="identifier: debt [98800,98804]" dest="identifier: debt [37362,37366]"/>
  <match src="member_expression [101130,101162]" dest="member_expression [39692,39724]"/>
  <match src="type_name [45374,45381]" dest="type_name [14531,14538]"/>
  <match src="uint256: uint256 [74462,74469]" dest="uint256: uint256 [80453,80460]"/>
  <match src="revert_statement [31700,32076]" dest="revert_statement [46281,46657]"/>
  <match src="[: [ [100185,100186]" dest="[: [ [38747,38748]"/>
  <match src="memory: memory [9788,9794]" dest="memory: memory [10373,10379]"/>
  <match src="identifier: getUsdcAddress [45480,45494]" dest="identifier: getUsdcAddress [14637,14651]"/>
  <match src="variable_declaration [38061,38070]" dest="variable_declaration [52642,52651]"/>
  <match src="(: ( [105935,105936]" dest="(: ( [68003,68004]"/>
  <match src=",: , [7757,7758]" dest=",: , [8342,8343]"/>
  <match src="identifier: supply [91908,91914]" dest="identifier: supply [30472,30478]"/>
  <match src="}: } [87626,87627]" dest="}: } [28469,28470]"/>
  <match src="parameter [10909,10925]" dest="parameter [11494,11510]"/>
  <match src="identifier: div [8560,8563]" dest="identifier: div [9145,9148]"/>
  <match src="internal: internal [103359,103367]" dest="internal: internal [41921,41929]"/>
  <match src="}: } [10739,10740]" dest="}: } [11324,11325]"/>
  <match src="identifier: _state [100867,100873]" dest="identifier: _state [39429,39435]"/>
  <match src="uint256: uint256 [5274,5281]" dest="uint256: uint256 [5853,5860]"/>
  <match src="=&gt;: =&gt; [88122,88124]" dest="=&gt;: =&gt; [28965,28967]"/>
  <match src="return_type_definition [96235,96252]" dest="return_type_definition [34799,34816]"/>
  <match src="string [105201,105213]" dest="string [67269,67281]"/>
  <match src="primitive_type [44556,44563]" dest="primitive_type [13713,13720]"/>
  <match src="&quot;: &quot; [5336,5337]" dest="&quot;: &quot; [5915,5916]"/>
  <match src="for: for [38477,38480]" dest="for: for [53058,53061]"/>
  <match src="type_name [93532,93539]" dest="type_name [32096,32103]"/>
  <match src="{: { [82632,82633]" dest="{: { [58279,58280]"/>
  <match src="parameter [9141,9157]" dest="parameter [9726,9742]"/>
  <match src="uint: uint [54387,54391]" dest="uint: uint [21477,21481]"/>
  <match src="parameter [54083,54098]" dest="parameter [21173,21188]"/>
  <match src="constant: constant [29621,29629]" dest="constant: constant [44202,44210]"/>
  <match src="): ) [2463,2464]" dest="): ) [3042,3043]"/>
  <match src="(: ( [15502,15503]" dest="(: ( [25293,25294]"/>
  <match src="internal: internal [5251,5259]" dest="internal: internal [5830,5838]"/>
  <match src="uint256: uint256 [38955,38962]" dest="uint256: uint256 [53536,53543]"/>
  <match src="{: { [10956,10957]" dest="{: { [11541,11542]"/>
  <match src="identifier: provider [92156,92164]" dest="identifier: provider [30720,30728]"/>
  <match src="): ) [47937,47938]" dest="): ) [17094,17095]"/>
  <match src="state_variable_declaration [29569,29600]" dest="state_variable_declaration [44150,44181]"/>
  <match src="identifier: getDAOExitLockupEpochs [47003,47025]" dest="identifier: getDAOExitLockupEpochs [16160,16182]"/>
  <match src=".: . [99632,99633]" dest=".: . [38194,38195]"/>
  <match src="{: { [11074,11075]" dest="{: { [11659,11660]"/>
  <match src=",: , [98256,98257]" dest=",: , [36818,36819]"/>
  <match src="call_argument [7864,7902]" dest="call_argument [8449,8487]"/>
  <match src="user_defined_type [66509,66521]" dest="user_defined_type [19749,19761]"/>
  <match src=".: . [104363,104364]" dest=".: . [42925,42926]"/>
  <match src="identifier: accounts [100447,100455]" dest="identifier: accounts [39009,39017]"/>
  <match src="): ) [31021,31022]" dest="): ) [45602,45603]"/>
  <match src="call_argument [1992,2024]" dest="call_argument [2571,2603]"/>
  <match src="comment: // populate the most-significant character [37766,37808]" dest="comment: // populate the most-significant character [52347,52389]"/>
  <match src="address: address [101803,101810]" dest="address: address [40365,40372]"/>
  <match src="expression_statement [105458,105460]" dest="expression_statement [67526,67528]"/>
  <match src="struct_declaration [87026,87123]" dest="struct_declaration [27869,27966]"/>
  <match src="member_expression [80778,80795]" dest="member_expression [69647,69664]"/>
  <match src="identifier: lockedUntil [86978,86989]" dest="identifier: lockedUntil [27821,27832]"/>
  <match src="bool: bool [10950,10954]" dest="bool: bool [11535,11539]"/>
  <match src="]: ] [101742,101743]" dest="]: ] [40304,40305]"/>
  <match src="visibility [101474,101482]" dest="visibility [40036,40044]"/>
  <match src="contract_body [62905,63061]" dest="contract_body [26764,26920]"/>
  <match src=".: . [80313,80314]" dest=".: . [69488,69489]"/>
  <match src="parameter [50960,50974]" dest="parameter [26119,26133]"/>
  <match src="type_name [83060,83067]" dest="type_name [61010,61017]"/>
  <match src="call_expression [8910,8917]" dest="call_expression [9495,9502]"/>
  <match src="return_statement [11585,11594]" dest="return_statement [12170,12179]"/>
  <match src="member_expression [95055,95083]" dest="member_expression [33619,33647]"/>
  <match src="public: public [92205,92211]" dest="public: public [30769,30775]"/>
  <match src="): ) [89959,89960]" dest="): ) [74592,74593]"/>
  <match src="visibility [10377,10385]" dest="visibility [10962,10970]"/>
  <match src="identifier: b [3784,3785]" dest="identifier: b [4363,4364]"/>
  <match src="identifier: i [35675,35676]" dest="identifier: i [50256,50257]"/>
  <match src=".: . [94788,94789]" dest=".: . [33352,33353]"/>
  <match src="=: = [35673,35674]" dest="=: = [50254,50255]"/>
  <match src="identifier: valid [66729,66734]" dest="identifier: valid [66362,66367]"/>
  <match src="parameter [49320,49336]" dest="parameter [55897,55914]"/>
  <match src="assembly: assembly [97145,97153]" dest="assembly: assembly [35709,35717]"/>
  <match src=".: . [102787,102788]" dest=".: . [41349,41350]"/>
  <match src="uint256: uint256 [67166,67173]" dest="uint256: uint256 [65817,65824]"/>
  <match src=".: . [101313,101314]" dest=".: . [39875,39876]"/>
  <match src=",: , [8590,8591]" dest=",: , [9175,9176]"/>
  <match src="parameter [8143,8159]" dest="parameter [8728,8744]"/>
  <match src="contract_body [64345,68434]" dest="contract_body [64505,66610]"/>
  <match src="returns: returns [91857,91864]" dest="returns: returns [30421,30428]"/>
  <match src="returns: returns [54673,54680]" dest="returns: returns [21763,21770]"/>
  <match src="internal: internal [32250,32258]" dest="internal: internal [46831,46839]"/>
  <match src="function: function [55112,55120]" dest="function: function [22202,22210]"/>
  <match src="identifier: Locked [93920,93926]" dest="identifier: Locked [32484,32490]"/>
  <match src="member_expression [96831,96865]" dest="member_expression [35395,35429]"/>
  <match src="identifier: balanceOfPhantom [73239,73255]" dest="identifier: epoch [62115,62120]"/>
  <match src="]: ] [93716,93717]" dest="]: ] [32280,32281]"/>
  <match src="memory: memory [9146,9152]" dest="memory: memory [9731,9737]"/>
  <match src="call_argument [99388,99394]" dest="call_argument [37950,37956]"/>
  <match src="{: { [100709,100710]" dest="{: { [39271,39272]"/>
  <match src="(: ( [93295,93296]" dest="(: ( [31859,31860]"/>
  <match src="parameter [5240,5249]" dest="parameter [5819,5828]"/>
  <match src="parameter [50943,50958]" dest="parameter [26102,26117]"/>
  <match src="update_expression [9025,9028]" dest="update_expression [9610,9613]"/>
  <match src="member_expression [65179,65191]" dest="member_expression [79243,79255]"/>
  <match src="array_access [94172,94194]" dest="array_access [32736,32758]"/>
  <match src="identifier: account [79781,79788]" dest="identifier: account [68856,68863]"/>
  <match src="{: { [47971,47972]" dest="{: { [17128,17129]"/>
  <match src="event: event [80037,80042]" dest="event: event [76165,76170]"/>
  <match src="identifier: name [53229,53233]" dest="identifier: name [20319,20323]"/>
  <match src="primitive_type [87534,87541]" dest="primitive_type [28377,28384]"/>
  <match src="identifier: a [7637,7638]" dest="identifier: a [8222,8223]"/>
  <match src="parameter [96616,96633]" dest="parameter [35180,35197]"/>
  <match src="type_name [99492,99499]" dest="type_name [38054,38061]"/>
  <match src="call_expression [103820,103867]" dest="call_expression [42382,42429]"/>
  <match src=".: . [81627,81628]" dest=".: . [71289,71290]"/>
  <match src="function_definition [10323,10455]" dest="function_definition [10908,11040]"/>
  <match src=",: , [105398,105399]" dest=",: , [67466,67467]"/>
  <match src="function_definition [53919,53978]" dest="function_definition [21009,21068]"/>
  <match src=".: . [80965,80966]" dest=".: . [79434,79435]"/>
  <match src="identifier: must [30858,30862]" dest="identifier: must [45439,45443]"/>
  <match src="): ) [32595,32596]" dest="): ) [47176,47177]"/>
  <match src="address: address [91949,91956]" dest="address: address [30513,30520]"/>
  <match src="private: private [44682,44689]" dest="private: private [13839,13846]"/>
  <match src="bytes32: bytes32 [53904,53911]" dest="bytes32: bytes32 [20994,21001]"/>
  <match src="primitive_type [32194,32201]" dest="primitive_type [46775,46782]"/>
  <match src="memory: memory [46238,46244]" dest="memory: memory [15395,15401]"/>
  <match src="): ) [78296,78297]" dest="): ) [59097,59098]"/>
  <match src="member_expression [101695,101734]" dest="member_expression [40257,40296]"/>
  <match src="returns: returns [92969,92976]" dest="returns: returns [31533,31540]"/>
  <match src="identifier: balance [99649,99656]" dest="identifier: balance [38211,38218]"/>
  <match src=".: . [88245,88246]" dest=".: . [29088,29089]"/>
  <match src="assignment_expression [36529,36538]" dest="assignment_expression [51110,51119]"/>
  <match src=",: , [53178,53179]" dest=",: , [20268,20269]"/>
  <match src="parameter [51995,52009]" dest="parameter [54836,54850]"/>
  <match src="identifier: value [53130,53135]" dest="identifier: value [20220,20225]"/>
  <match src="address: address [96342,96349]" dest="address: address [34906,34913]"/>
  <match src="call_expression [30524,30548]" dest="call_expression [45105,45129]"/>
  <match src=",: , [54889,54890]" dest=",: , [21979,21980]"/>
  <match src="if: if [31674,31676]" dest="if: if [46255,46257]"/>
  <match src="returns: returns [92534,92541]" dest="returns: returns [31098,31105]"/>
  <match src="primitive_type [53559,53566]" dest="primitive_type [20649,20656]"/>
  <match src="uint256: uint256 [69823,69830]" dest="uint256: uint256 [64753,64760]"/>
  <match src="parameter [15034,15048]" dest="parameter [24825,24839]"/>
  <match src="(: ( [5877,5878]" dest="(: ( [6456,6457]"/>
  <match src="primitive_type [99113,99120]" dest="primitive_type [37675,37682]"/>
  <match src="external: external [13211,13219]" dest="external: external [23002,23010]"/>
  <match src="}: } [100074,100075]" dest="}: } [38636,38637]"/>
  <match src=".: . [93992,93993]" dest=".: . [32556,32557]"/>
  <match src="): ) [83290,83291]" dest="): ) [71028,71029]"/>
  <match src="identifier: input [38081,38086]" dest="identifier: input [52662,52667]"/>
  <match src="call_argument [82288,82298]" dest="call_argument [62228,62238]"/>
  <match src="&quot;: &quot; [105879,105880]" dest="&quot;: &quot; [67947,67948]"/>
  <match src=",: , [3774,3775]" dest=",: , [4353,4354]"/>
  <match src=".: . [107010,107011]" dest=".: . [66379,66380]"/>
  <match src="): ) [46941,46942]" dest="): ) [16098,16099]"/>
  <match src="new_expression [37225,37234]" dest="new_expression [51806,51815]"/>
  <match src="expression_statement [99528,99608]" dest="expression_statement [38090,38170]"/>
  <match src="function: function [55256,55264]" dest="function: function [22346,22354]"/>
  <match src="type_name [80152,80159]" dest="type_name [69328,69335]"/>
  <match src=".: . [102411,102412]" dest=".: . [40973,40974]"/>
  <match src="function_definition [98699,98824]" dest="function_definition [37261,37386]"/>
  <match src="): ) [2431,2432]" dest="): ) [3010,3011]"/>
  <match src="uint256: uint256 [30337,30344]" dest="uint256: uint256 [44918,44925]"/>
  <match src="variable_declaration_statement [102596,102659]" dest="variable_declaration_statement [41158,41221]"/>
  <match src="(: ( [98174,98175]" dest="(: ( [36736,36737]"/>
  <match src="identifier: value [7619,7624]" dest="identifier: value [8204,8209]"/>
  <match src="type_name [54083,54090]" dest="type_name [21173,21180]"/>
  <match src="expression_statement [5971,6001]" dest="expression_statement [6550,6580]"/>
  <match src="returns: returns [46637,46644]" dest="returns: returns [15794,15801]"/>
  <match src="identifier: sub [99993,99996]" dest="identifier: sub [38555,38558]"/>
  <match src="uint: uint [55098,55102]" dest="uint: uint [22188,22192]"/>
  <match src="return_statement [96965,97013]" dest="return_statement [35529,35577]"/>
  <match src="bytes32: bytes32 [90424,90431]" dest="bytes32: bytes32 [75057,75064]"/>
  <match src="parameter [77697,77717]" dest="parameter [61778,61798]"/>
  <match src="): ) [34689,34690]" dest="): ) [49270,49271]"/>
  <match src="{: { [97825,97826]" dest="{: { [36387,36388]"/>
  <match src="return_type_definition [13225,13242]" dest="return_type_definition [23016,23033]"/>
  <match src="type_name [34315,34322]" dest="type_name [48896,48903]"/>
  <match src="&quot;: &quot; [81930,81931]" dest="&quot;: &quot; [79218,79219]"/>
  <match src="call_argument [83517,83522]" dest="call_argument [78652,78661]"/>
  <match src="assignment_expression [38280,38315]" dest="assignment_expression [52861,52896]"/>
  <match src="): ) [50914,50915]" dest="): ) [26073,26074]"/>
  <match src="number_literal: 65 [38674,38676]" dest="number_literal: 65 [53255,53257]"/>
  <match src="identifier: sub [93028,93031]" dest="identifier: sub [31592,31595]"/>
  <match src="parameter [23625,23640]" dest="parameter [62883,62898]"/>
  <match src="identifier: bonded [98657,98663]" dest="identifier: bonded [37219,37225]"/>
  <match src=",: , [54452,54453]" dest=",: , [21542,21543]"/>
  <match src="returns: returns [4491,4498]" dest="returns: returns [5070,5077]"/>
  <match src="primitive_type [98277,98284]" dest="primitive_type [36839,36846]"/>
  <match src="identifier: reason [98972,98978]" dest="identifier: reason [37534,37540]"/>
  <match src="uint256: uint256 [38572,38579]" dest="uint256: uint256 [53153,53160]"/>
  <match src="identifier: b [11561,11562]" dest="identifier: b [12146,12147]"/>
  <match src="binary_expression [105614,105649]" dest="binary_expression [67682,67717]"/>
  <match src="unary_expression [34383,34388]" dest="unary_expression [48964,48969]"/>
  <match src="parameter [101835,101849]" dest="parameter [40397,40411]"/>
  <match src="&quot;: &quot; [22937,22938]" dest="&quot;: &quot; [62716,62717]"/>
  <match src="address: address [92328,92335]" dest="address: address [30892,30899]"/>
  <match src="identifier: b [10037,10038]" dest="identifier: b [10622,10623]"/>
  <match src="identifier: b [3187,3188]" dest="identifier: b [3766,3767]"/>
  <match src="augmented_assignment_expression [36897,36904]" dest="augmented_assignment_expression [51478,51485]"/>
  <match src="(: ( [32586,32587]" dest="(: ( [47167,47168]"/>
  <match src="(: ( [34382,34383]" dest="(: ( [48963,48964]"/>
  <match src="primitive_type [5878,5885]" dest="primitive_type [6457,6464]"/>
  <match src="return_type_definition [53590,53604]" dest="return_type_definition [20680,20694]"/>
  <match src="yul_function_call [86025,86045]" dest="yul_function_call [72831,72851]"/>
  <match src="parameter [33652,33666]" dest="parameter [48233,48247]"/>
  <match src="function: function [102075,102083]" dest="function: function [40637,40645]"/>
  <match src="}: } [30813,30814]" dest="}: } [45394,45395]"/>
  <match src="call_expression [7280,7301]" dest="call_expression [7865,7886]"/>
  <match src="): ) [105910,105911]" dest="): ) [67978,67979]"/>
  <match src="identifier: balanceCheck [83791,83803]" dest="identifier: mintToDAO [58686,58695]"/>
  <match src="if_statement [30401,30814]" dest="if_statement [44982,45395]"/>
  <match src=".: . [81999,82000]" dest=".: . [77023,77024]"/>
  <match src="identifier: D256 [9660,9664]" dest="identifier: D256 [10245,10249]"/>
  <match src="identifier: value [8299,8304]" dest="identifier: value [8884,8889]"/>
  <match src="uint256: uint256 [92978,92985]" dest="uint256: uint256 [31542,31549]"/>
  <match src="type_name [4427,4434]" dest="type_name [5006,5013]"/>
  <match src="{: { [98607,98608]" dest="{: { [37169,37170]"/>
  <match src="call_argument [89920,89959]" dest="call_argument [74553,74592]"/>
  <match src=".: . [93912,93913]" dest=".: . [32476,32477]"/>
  <match src="): ) [92129,92130]" dest="): ) [30693,30694]"/>
  <match src="identifier: account [99544,99551]" dest="identifier: account [38106,38113]"/>
  <match src="uint256: uint256 [45241,45248]" dest="uint256: uint256 [14398,14405]"/>
  <match src="call_argument [21616,21653]" dest="call_argument [63386,63431]"/>
  <match src="address: address [53077,53084]" dest="address: address [20167,20174]"/>
  <match src="identifier: amount [75930,75936]" dest="identifier: amount [18534,18540]"/>
  <match src="type_name [95900,95907]" dest="type_name [34464,34471]"/>
  <match src="private: private [17510,17517]" dest="private: private [18222,18229]"/>
  <match src="function_definition [93096,93225]" dest="function_definition [31660,31789]"/>
  <match src="): ) [94420,94421]" dest="): ) [32984,32985]"/>
  <match src="function: function [1897,1905]" dest="function: function [2476,2484]"/>
  <match src="{: { [29312,29313]" dest="{: { [43893,43894]"/>
  <match src=",: , [10360,10361]" dest=",: , [10945,10946]"/>
  <match src="function_definition [55393,55418]" dest="function_definition [22483,22508]"/>
  <match src="(: ( [82467,82468]" dest="(: ( [55307,55308]"/>
  <match src="{: { [87019,87020]" dest="{: { [27862,27863]"/>
  <match src="): ) [93963,93964]" dest="): ) [32527,32528]"/>
  <match src="]: ] [100497,100498]" dest="]: ] [39059,39060]"/>
  <match src="comment: // Can participate in balance-dependant activities [105475,105525]" dest="comment: // Can participate in balance-dependant activities [67543,67593]"/>
  <match src="variable_declaration_statement [35350,35365]" dest="variable_declaration_statement [49931,49946]"/>
  <match src="identifier: accounts [101501,101509]" dest="identifier: accounts [40063,40071]"/>
  <match src="member_expression [8306,8320]" dest="member_expression [8891,8905]"/>
  <match src="type_name [83222,83229]" dest="type_name [57099,57106]"/>
  <match src="(: ( [82088,82089]" dest="(: ( [70554,70555]"/>
  <match src="primitive_type [36401,36406]" dest="primitive_type [50982,50987]"/>
  <match src="visibility [54605,54613]" dest="visibility [21695,21703]"/>
  <match src="event_paramater [79954,79977]" dest="event_paramater [68897,68920]"/>
  <match src="address: address [54068,54075]" dest="address: address [21158,21165]"/>
  <match src="call_expression [24939,24965]" dest="call_expression [55159,55193]"/>
  <match src="identifier: coupons [87307,87314]" dest="identifier: coupons [28150,28157]"/>
  <match src="expression_statement [101130,101232]" dest="expression_statement [39692,39794]"/>
  <match src="(: ( [33302,33303]" dest="(: ( [47883,47884]"/>
  <match src="=: = [35211,35212]" dest="=: = [49792,49793]"/>
  <match src=",: , [98026,98027]" dest=",: , [36588,36589]"/>
  <match src="function: function [99746,99754]" dest="function: function [38308,38316]"/>
  <match src="): ) [22850,22851]" dest="): ) [55363,55364]"/>
  <match src="identifier: shift [38821,38826]" dest="identifier: shift [53402,53407]"/>
  <match src="function_body [11535,11655]" dest="function_body [12120,12240]"/>
  <match src="call_argument [31314,31322]" dest="call_argument [45895,45903]"/>
  <match src="call_expression [32408,32432]" dest="call_expression [46989,47013]"/>
  <match src="indexed: indexed [54194,54201]" dest="indexed: indexed [21284,21291]"/>
  <match src="visibility [48921,48928]" dest="visibility [60928,60935]"/>
  <match src="identifier: self [10865,10869]" dest="identifier: self [11450,11454]"/>
  <match src="visibility [95153,95159]" dest="visibility [33717,33723]"/>
  <match src="primitive_type [95589,95596]" dest="primitive_type [34153,34160]"/>
  <match src="address: address [53158,53165]" dest="address: address [20248,20255]"/>
  <match src=",: , [29856,29857]" dest=",: , [44437,44438]"/>
  <match src=".: . [96704,96705]" dest=".: . [35268,35269]"/>
  <match src="uint256: uint256 [80152,80159]" dest="uint256: uint256 [69328,69335]"/>
  <match src="array_access [101957,101979]" dest="array_access [40519,40541]"/>
  <match src="state_variable_declaration [45101,45151]" dest="state_variable_declaration [14258,14308]"/>
  <match src="==: == [11558,11560]" dest="==: == [12143,12145]"/>
  <match src="): ) [98315,98316]" dest="): ) [36877,36878]"/>
  <match src="}: } [96176,96177]" dest="}: } [34740,34741]"/>
  <match src="call_expression [72025,72080]" dest="call_expression [58057,58126]"/>
  <match src="function_body [46943,46986]" dest="function_body [16100,16143]"/>
  <match src="{: { [8274,8275]" dest="{: { [8859,8860]"/>
  <match src="state_mutability [47160,47164]" dest="state_mutability [16317,16321]"/>
  <match src="identifier: require [27851,27858]" dest="identifier: decrementRejectFor [77247,77265]"/>
  <match src="event_paramater [80076,80089]" dest="event_paramater [60345,60358]"/>
  <match src="type_cast_expression [32336,32749]" dest="type_cast_expression [46917,47330]"/>
  <match src="constant: constant [91249,91257]" dest="constant: constant [29813,29821]"/>
  <match src="(: ( [31153,31154]" dest="(: ( [45734,45735]"/>
  <match src=",: , [11249,11250]" dest=",: , [11834,11835]"/>
  <match src="identifier: decrementBalanceOfClaimable [80825,80852]" dest="identifier: incrementBalanceOfStaged [70578,70602]"/>
  <match src="member_expression [100560,100581]" dest="member_expression [39122,39143]"/>
  <match src="(: ( [46933,46934]" dest="(: ( [16090,16091]"/>
  <match src="(: ( [10083,10084]" dest="(: ( [10668,10669]"/>
  <match src="comment: // 66% [44734,44740]" dest="comment: // 66% [13891,13897]"/>
  <match src="pure: pure [46476,46480]" dest="pure: pure [15633,15637]"/>
  <match src="primitive_type [54891,54897]" dest="primitive_type [21981,21987]"/>
  <match src="identifier: amount1Out [54468,54478]" dest="identifier: amount1Out [21558,21568]"/>
  <match src="identifier: candidate [104006,104015]" dest="identifier: candidate [42568,42577]"/>
  <match src="function: function [96885,96893]" dest="function: function [35449,35457]"/>
  <match src=".: . [8310,8311]" dest=".: . [8895,8896]"/>
  <match src="function_definition [101005,101431]" dest="function_definition [39567,39993]"/>
  <match src="(: ( [9331,9332]" dest="(: ( [9916,9917]"/>
  <match src="state_mutability [47037,47041]" dest="state_mutability [16194,16198]"/>
  <match src="function_definition [103883,104089]" dest="function_definition [42445,42651]"/>
  <match src="identifier: r [54144,54145]" dest="identifier: r [21234,21235]"/>
  <match src="user_defined_type [10909,10913]" dest="user_defined_type [11494,11498]"/>
  <match src="primitive_type [53677,53681]" dest="primitive_type [20767,20771]"/>
  <match src="): ) [80125,80126]" dest="): ) [76228,76229]"/>
  <match src="call_argument [75313,75319]" dest="call_argument [18479,18485]"/>
  <match src="binary_expression [93609,93639]" dest="binary_expression [32173,32203]"/>
  <match src="identifier: RPAREN [29674,29680]" dest="identifier: RPAREN [44255,44261]"/>
  <match src="(: ( [99709,99710]" dest="(: ( [38271,38272]"/>
  <match src="state_mutability [42287,42291]" dest="state_mutability [19496,19500]"/>
  <match src="call_expression [31754,32041]" dest="call_expression [46335,46622]"/>
  <match src="=: = [43912,43913]" dest="=: = [13069,13070]"/>
  <match src="identifier: sender [21849,21855]" dest="identifier: sender [63840,63846]"/>
  <match src="): ) [96389,96390]" dest="): ) [34953,34954]"/>
  <match src=",: , [100003,100004]" dest=",: , [38565,38566]"/>
  <match src="): ) [65300,65301]" dest="): ) [79372,79373]"/>
  <match src="binary_expression [3116,3122]" dest="binary_expression [3695,3701]"/>
  <match src="type_name [39013,39017]" dest="type_name [53594,53598]"/>
  <match src="): ) [99018,99019]" dest="): ) [37580,37581]"/>
  <match src="identifier: that [50064,50068]" dest="identifier: that [69128,69132]"/>
  <match src="inheritance_specifier [17347,17354]" dest="inheritance_specifier [59794,59805]"/>
  <match src="function_definition [98995,99071]" dest="function_definition [37557,37633]"/>
  <match src="=: = [100865,100866]" dest="=: = [39427,39428]"/>
  <match src="variable_declaration [9003,9012]" dest="variable_declaration [9588,9597]"/>
  <match src="parameter [30948,30964]" dest="parameter [45529,45545]"/>
  <match src="function_body [22861,23152]" dest="function_body [55374,55530]"/>
  <match src="identifier: setImplementation [90218,90235]" dest="identifier: setImplementation [74851,74868]"/>
  <match src="type_name [81758,81765]" dest="type_name [58417,58424]"/>
  <match src="}: } [33569,33570]" dest="}: } [48150,48151]"/>
  <match src="{: { [47060,47061]" dest="{: { [16217,16218]"/>
  <match src="): ) [103760,103761]" dest="): ) [42322,42323]"/>
  <match src="=: = [44599,44600]" dest="=: = [13756,13757]"/>
  <match src="visibility [11489,11496]" dest="visibility [12074,12081]"/>
  <match src="visibility [22852,22860]" dest="visibility [55365,55373]"/>
  <match src=".: . [100852,100853]" dest=".: . [39414,39415]"/>
  <match src="]: ] [100886,100887]" dest="]: ] [39448,39449]"/>
  <match src=",: , [101657,101658]" dest=",: , [40219,40220]"/>
  <match src="): ) [92550,92551]" dest="): ) [31114,31115]"/>
  <match src="identifier: ORACLE_RESERVE_MINIMUM [44091,44113]" dest="identifier: ORACLE_RESERVE_MINIMUM [13248,13270]"/>
  <match src="pure: pure [8005,8009]" dest="pure: pure [8590,8594]"/>
  <match src="type_name [79848,79855]" dest="type_name [60435,60442]"/>
  <match src="call_expression [104026,104081]" dest="call_expression [42588,42643]"/>
  <match src="(: ( [98420,98421]" dest="(: ( [36982,36983]"/>
  <match src="primitive_type [35055,35062]" dest="primitive_type [49636,49643]"/>
  <match src="assignment_expression [101494,101579]" dest="assignment_expression [40056,40141]"/>
  <match src="member_expression [101957,102009]" dest="member_expression [40519,40571]"/>
  <match src="parameter [7942,7958]" dest="parameter [8527,8543]"/>
  <match src="(: ( [37234,37235]" dest="(: ( [51815,51816]"/>
  <match src=",: , [30326,30327]" dest=",: , [44907,44908]"/>
  <match src=".: . [47712,47713]" dest=".: . [16869,16870]"/>
  <match src="): ) [31158,31159]" dest="): ) [45739,45740]"/>
  <match src="identifier: length [36566,36572]" dest="identifier: length [51147,51153]"/>
  <match src="user_defined_type [9998,10002]" dest="user_defined_type [10583,10587]"/>
  <match src="identifier: add [100802,100805]" dest="identifier: add [39364,39367]"/>
  <match src=",: , [30885,30886]" dest=",: , [45466,45467]"/>
  <match src="): ) [31456,31457]" dest="): ) [46037,46038]"/>
  <match src="function_body [47303,47346]" dest="function_body [16460,16503]"/>
  <match src="external: external [53362,53370]" dest="external: external [20452,20460]"/>
  <match src="identifier: s [54155,54156]" dest="identifier: s [21245,21246]"/>
  <match src="parameter [91551,91564]" dest="parameter [30115,30128]"/>
  <match src="address: address [32883,32890]" dest="address: address [47464,47471]"/>
  <match src="type_cast_expression [38292,38315]" dest="type_cast_expression [52873,52896]"/>
  <match src="memory: memory [10003,10009]" dest="memory: memory [10588,10594]"/>
  <match src="identifier: slot [97183,97187]" dest="identifier: slot [35747,35751]"/>
  <match src="modifier_invocation [81034,81043]" dest="modifier_invocation [69876,69905]"/>
  <match src="emit: emit [23885,23889]" dest="emit: emit [63089,63093]"/>
  <match src="identifier: D256 [8847,8851]" dest="identifier: D256 [9432,9436]"/>
  <match src="type_name [10793,10797]" dest="type_name [11378,11382]"/>
  <match src="identifier: epoch [101532,101537]" dest="identifier: epoch [40094,40099]"/>
  <match src="array_access [96135,96163]" dest="array_access [34699,34727]"/>
  <match src="type_name [5889,5896]" dest="type_name [6468,6475]"/>
  <match src="(: ( [39120,39121]" dest="(: ( [53701,53702]"/>
  <match src=":: : [46548,46549]" dest=":: : [15705,15706]"/>
  <match src="identifier: D256 [7244,7248]" dest="identifier: D256 [7829,7833]"/>
  <match src="[: [ [103246,103247]" dest="[: [ [41808,41809]"/>
  <match src="]: ] [101153,101154]" dest="]: ] [39715,39716]"/>
  <match src="function: function [53398,53406]" dest="function: function [20488,20496]"/>
  <match src="state_mutability [97061,97065]" dest="state_mutability [35625,35629]"/>
  <match src="}: } [103286,103287]" dest="}: } [41848,41849]"/>
  <match src="parameter [80152,80165]" dest="parameter [69328,69341]"/>
  <match src="type_name [94092,94099]" dest="type_name [32656,32663]"/>
  <match src="): ) [80029,80030]" dest="): ) [68975,68976]"/>
  <match src="): ) [81366,81367]" dest="): ) [70106,70107]"/>
  <match src="internal: internal [47939,47947]" dest="internal: internal [17096,17104]"/>
  <match src="pure: pure [10672,10676]" dest="pure: pure [11257,11261]"/>
  <match src="&gt;: &gt; [86069,86070]" dest="&gt;: &gt; [72875,72876]"/>
  <match src="indexed: indexed [53085,53092]" dest="indexed: indexed [20175,20182]"/>
  <match src="(: ( [30404,30405]" dest="(: ( [44985,44986]"/>
  <match src="any_pragma_token [1154,1179]" dest="any_pragma_token [1156,1181]"/>
  <match src="identifier: D256 [8960,8964]" dest="identifier: D256 [9545,9549]"/>
  <match src="identifier: period [45878,45884]" dest="identifier: period [15035,15041]"/>
  <match src="uint: uint [55287,55291]" dest="uint: uint [22377,22381]"/>
  <match src="(: ( [94598,94599]" dest="(: ( [33162,33163]"/>
  <match src="string_literal [82307,82342]" dest="string_literal [78557,78571]"/>
  <match src="(: ( [54627,54628]" dest="(: ( [21717,21718]"/>
  <match src="identifier: value [10979,10984]" dest="identifier: value [11564,11569]"/>
  <match src=",: , [4436,4437]" dest=",: , [5015,5016]"/>
  <match src="return_statement [9457,9505]" dest="return_statement [10042,10090]"/>
  <match src="block_statement [38510,38890]" dest="block_statement [53091,53471]"/>
  <match src="identifier: D256 [46498,46502]" dest="identifier: D256 [15655,15659]"/>
  <match src="identifier: newLock [104319,104326]" dest="identifier: newLock [42881,42888]"/>
  <match src="(: ( [53878,53879]" dest="(: ( [20968,20969]"/>
  <match src="call_expression [99971,100012]" dest="call_expression [38533,38574]"/>
  <match src="contract_declaration [105129,105978]" dest="contract_declaration [67197,68046]"/>
  <match src="identifier: msg [81519,81522]" dest="identifier: msg [70231,70234]"/>
  <match src="identifier: msg [81800,81803]" dest="identifier: msg [70528,70531]"/>
  <match src="bytes32: bytes32 [79643,79650]" dest="bytes32: bytes32 [68715,68722]"/>
  <match src="primitive_type [67140,67147]" dest="primitive_type [65794,65801]"/>
  <match src="}: } [32086,32087]" dest="}: } [46667,46668]"/>
  <match src="uint256: uint256 [34288,34295]" dest="uint256: uint256 [48869,48876]"/>
  <match src="function_body [47060,47108]" dest="function_body [16217,16265]"/>
  <match src="visibility [65885,65892]" dest="visibility [79506,79513]"/>
  <match src="(: ( [53676,53677]" dest="(: ( [20766,20767]"/>
  <match src="function_definition [22804,23152]" dest="function_definition [55325,55530]"/>
  <match src="uint256: uint256 [94662,94669]" dest="uint256: uint256 [33226,33233]"/>
  <match src=",: , [100592,100593]" dest=",: , [39154,39155]"/>
  <match src="member_expression [99884,99916]" dest="member_expression [38446,38478]"/>
  <match src="primitive_type [54628,54632]" dest="primitive_type [21718,21722]"/>
  <match src="member_expression [90290,90328]" dest="member_expression [74923,74961]"/>
  <match src="emit: emit [99688,99692]" dest="emit: emit [38250,38254]"/>
  <match src="): ) [94913,94914]" dest="): ) [33477,33478]"/>
  <match src="{: { [45529,45530]" dest="{: { [14686,14687]"/>
  <match src="identifier: payloadA [34681,34689]" dest="identifier: payloadA [49262,49270]"/>
  <match src="type_name [50836,50843]" dest="type_name [25995,26002]"/>
  <match src=".: . [81522,81523]" dest=".: . [70234,70235]"/>
  <match src=",: , [30712,30713]" dest=",: , [45293,45294]"/>
  <match src="parameter [8256,8267]" dest="parameter [8841,8852]"/>
  <match src="): ) [92011,92012]" dest="): ) [30575,30576]"/>
  <match src="expression_statement [84249,84359]" dest="expression_statement [76343,76458]"/>
  <match src="return_statement [96540,96583]" dest="return_statement [35104,35147]"/>
  <match src="identifier: getReserves [54818,54829]" dest="identifier: getReserves [21908,21919]"/>
  <match src="call_expression [93874,93881]" dest="call_expression [32438,32445]"/>
  <match src="(: ( [101626,101627]" dest="(: ( [40188,40189]"/>
  <match src="expression_statement [68422,68424]" dest="expression_statement [81110,81112]"/>
  <match src=".: . [103257,103258]" dest=".: . [41819,41820]"/>
  <match src="uint: uint [54038,54042]" dest="uint: uint [21128,21132]"/>
  <match src="{: { [92768,92769]" dest="{: { [31332,31333]"/>
  <match src="=: = [29681,29682]" dest="=: = [44262,44263]"/>
  <match src="): ) [55248,55249]" dest="): ) [22338,22339]"/>
  <match src=".: . [95083,95084]" dest=".: . [33647,33648]"/>
  <match src="identifier: value [47604,47609]" dest="identifier: value [16761,16766]"/>
  <match src="uint256: uint256 [70086,70093]" dest="uint256: uint256 [64730,64737]"/>
  <match src="return_type_definition [91995,92012]" dest="return_type_definition [30559,30576]"/>
  <match src="): ) [33972,33973]" dest="): ) [48553,48554]"/>
  <match src="type_name [54682,54689]" dest="type_name [21772,21779]"/>
  <match src="memory: memory [38037,38043]" dest="memory: memory [52618,52624]"/>
  <match src="type_name [46646,46658]" dest="type_name [15803,15815]"/>
  <match src="type_name [97100,97107]" dest="type_name [35664,35671]"/>
  <match src="uint256: uint256 [2516,2523]" dest="uint256: uint256 [3095,3102]"/>
  <match src="state_mutability [7102,7106]" dest="state_mutability [7687,7691]"/>
  <match src="=: = [37699,37700]" dest="=: = [52280,52281]"/>
  <match src="primitive_type [54210,54214]" dest="primitive_type [21300,21304]"/>
  <match src="function_body [104479,104545]" dest="function_body [43041,43107]"/>
  <match src="primitive_type [8601,8608]" dest="primitive_type [9186,9193]"/>
  <match src="call_expression [65809,65822]" dest="call_expression [66550,66563]"/>
  <match src="primitive_type [14653,14657]" dest="primitive_type [24444,24448]"/>
  <match src="type_name [63687,63694]" dest="type_name [76252,76259]"/>
  <match src="): ) [102574,102575]" dest="): ) [41136,41137]"/>
  <match src="uint256: uint256 [98028,98035]" dest="uint256: uint256 [36590,36597]"/>
  <match src="(: ( [10949,10950]" dest="(: ( [11534,11535]"/>
  <match src="number_literal: 0 [102702,102703]" dest="number_literal: 0 [41264,41265]"/>
  <match src="): ) [104080,104081]" dest="): ) [42642,42643]"/>
  <match src="): ) [47149,47150]" dest="): ) [16306,16307]"/>
  <match src="unary_expression [33745,33750]" dest="unary_expression [48326,48331]"/>
  <match src="variable_declaration [90424,90436]" dest="variable_declaration [75057,75069]"/>
  <match src="call_argument [39221,39248]" dest="call_argument [53802,53829]"/>
  <match src="comment: /**      * Governance      */ [95839,95870]" dest="comment: /**      * Governance      */ [34403,34434]"/>
  <match src="returns: returns [47953,47960]" dest="returns: returns [17110,17117]"/>
  <match src="identifier: epoch [100881,100886]" dest="identifier: epoch [39443,39448]"/>
  <match src="identifier: value [15559,15564]" dest="identifier: value [25350,25355]"/>
  <match src="assignment_expression [38726,38736]" dest="assignment_expression [53307,53317]"/>
  <match src="member_expression [82905,82917]" dest="member_expression [78129,78141]"/>
  <match src="identifier: currentLock [104180,104191]" dest="identifier: currentLock [42742,42753]"/>
  <match src=",: , [13507,13508]" dest=",: , [23298,23299]"/>
  <match src="): ) [96251,96252]" dest="): ) [34815,34816]"/>
  <match src="internal: internal [1932,1940]" dest="internal: internal [2511,2519]"/>
  <match src="state_mutability [95611,95615]" dest="state_mutability [34175,34179]"/>
  <match src="&quot;: &quot; [20851,20852]" dest="&quot;: &quot; [69202,69203]"/>
  <match src="=: = [102771,102772]" dest="=: = [41333,41334]"/>
  <match src="primitive_type [80076,80083]" dest="primitive_type [60345,60352]"/>
  <match src="call_argument [99929,99935]" dest="call_argument [38491,38497]"/>
  <match src="identifier: reason [32510,32516]" dest="identifier: reason [47091,47097]"/>
  <match src="type_name [87483,87490]" dest="type_name [28326,28333]"/>
  <match src="variable_declaration [66599,66618]" dest="variable_declaration [70987,71002]"/>
  <match src="internal: internal [10051,10059]" dest="internal: internal [10636,10644]"/>
  <match src="call_argument [82227,82237]" dest="call_argument [62290,62300]"/>
  <match src="&gt;&gt;: &gt;&gt; [37887,37889]" dest="&gt;&gt;: &gt;&gt; [52468,52470]"/>
  <match src=".: . [99624,99625]" dest=".: . [38186,38187]"/>
  <match src="): ) [99674,99675]" dest="): ) [38236,38237]"/>
  <match src="): ) [47526,47527]" dest="): ) [16683,16684]"/>
  <match src="contract_declaration [87004,87325]" dest="contract_declaration [27847,28168]"/>
  <match src="uint256: uint256 [66599,66606]" dest="uint256: uint256 [70987,70994]"/>
  <match src="call_argument [9701,9743]" dest="call_argument [10286,10328]"/>
  <match src="]: ] [104053,104054]" dest="]: ] [42615,42616]"/>
  <match src="type_name [64671,64678]" dest="type_name [80521,80528]"/>
  <match src="number_literal: 35e16 [45199,45204]" dest="number_literal: 35e16 [14356,14361]"/>
  <match src="type_name [63049,63056]" dest="type_name [26908,26915]"/>
  <match src="): ) [5999,6000]" dest="): ) [6578,6579]"/>
  <match src="constant: constant [45324,45332]" dest="constant: constant [14481,14489]"/>
  <match src="identifier: univ2 [80220,80225]" dest="identifier: dollar [69394,69400]"/>
  <match src="type_name [96204,96211]" dest="type_name [34768,34775]"/>
  <match src="identifier: owner [53552,53557]" dest="identifier: owner [20642,20647]"/>
  <match src="address: address [91709,91716]" dest="address: address [30273,30280]"/>
  <match src="{: { [45993,45994]" dest="{: { [15150,15151]"/>
  <match src="(: ( [96693,96694]" dest="(: ( [35257,35258]"/>
  <match src="call_expression [89889,89960]" dest="call_expression [74522,74593]"/>
  <match src="parameter [66509,66528]" dest="parameter [19749,19774]"/>
  <match src="function_body [98446,98522]" dest="function_body [37008,37084]"/>
  <match src="returns: returns [95474,95481]" dest="returns: returns [34038,34045]"/>
  <match src="{: { [96813,96814]" dest="{: { [35377,35378]"/>
  <match src="call_argument [80268,80273]" dest="call_argument [69443,69448]"/>
  <match src="visibility [96786,96792]" dest="visibility [35350,35356]"/>
  <match src="function: function [21412,21420]" dest="function: function [63153,63161]"/>
  <match src=",: , [1561,1562]" dest=",: , [2140,2141]"/>
  <match src="primitive_type [29614,29620]" dest="primitive_type [44195,44201]"/>
  <match src="): ) [39140,39141]" dest="): ) [53721,53722]"/>
  <match src="number_literal: 0 [44417,44418]" dest="number_literal: 0 [13574,13575]"/>
  <match src="state_mutability [93790,93794]" dest="state_mutability [32354,32358]"/>
  <match src="visibility [53659,53667]" dest="visibility [20749,20757]"/>
  <match src="=: = [45353,45354]" dest="=: = [14510,14511]"/>
  <match src="member_expression [81247,81280]" dest="member_expression [70012,70045]"/>
  <match src="): ) [83858,83859]" dest="): ) [58769,58770]"/>
  <match src="user_defined_type [8024,8028]" dest="user_defined_type [8609,8613]"/>
  <match src="state_variable_declaration [43715,43753]" dest="state_variable_declaration [12872,12910]"/>
  <match src="member_expression [81460,81470]" dest="member_expression [71208,71218]"/>
  <match src="uint: uint [53125,53129]" dest="uint: uint [20215,20219]"/>
  <match src="identifier: couponAllowances [101980,101996]" dest="identifier: couponAllowances [40542,40558]"/>
  <match src="function_definition [55112,55172]" dest="function_definition [22202,22262]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [89263,89282]" dest="identifier: IMPLEMENTATION_SLOT [73896,73915]"/>
  <match src="{: { [92658,92659]" dest="{: { [31222,31223]"/>
  <match src="{: { [81044,81045]" dest="{: { [69906,69907]"/>
  <match src="emit_statement [83492,83544]" dest="emit_statement [78628,78663]"/>
  <match src="primitive_type [39115,39120]" dest="primitive_type [53696,53701]"/>
  <match src="(: ( [72134,72135]" dest="(: ( [79527,79528]"/>
  <match src="primitive_type [30269,30273]" dest="primitive_type [44850,44854]"/>
  <match src="(: ( [8255,8256]" dest="(: ( [8840,8841]"/>
  <match src="state_variable_declaration [44066,44121]" dest="state_variable_declaration [13223,13278]"/>
  <match src="=: = [103108,103109]" dest="=: = [41670,41671]"/>
  <match src="memory: memory [62990,62996]" dest="memory: memory [26849,26855]"/>
  <match src="function: function [91606,91614]" dest="function: function [30170,30178]"/>
  <match src="return_type_definition [96099,96116]" dest="return_type_definition [34663,34680]"/>
  <match src="array_access [38280,38289]" dest="array_access [52861,52870]"/>
  <match src="type_name [15526,15533]" dest="type_name [25317,25324]"/>
  <match src="call_argument [19465,19507]" dest="call_argument [70662,70698]"/>
  <match src="call_argument [101416,101422]" dest="call_argument [39978,39984]"/>
  <match src="returns: returns [92426,92433]" dest="returns: returns [30990,30997]"/>
  <match src="constant: constant [44855,44863]" dest="constant: constant [14012,14020]"/>
  <match src="address: address [54489,54496]" dest="address: address [21579,21586]"/>
  <match src="internal: internal [94883,94891]" dest="internal: internal [33447,33455]"/>
  <match src="}: } [87751,87752]" dest="}: } [28594,28595]"/>
  <match src=",: , [100667,100668]" dest=",: , [39229,39230]"/>
  <match src="state_mutability [53955,53959]" dest="state_mutability [21045,21049]"/>
  <match src="identifier: transferFrom [14986,14998]" dest="identifier: transferFrom [24777,24789]"/>
  <match src="struct_declaration [87131,87242]" dest="struct_declaration [27974,28085]"/>
  <match src="call_expression [9464,9504]" dest="call_expression [10049,10089]"/>
  <match src=",: , [98874,98875]" dest=",: , [37436,37437]"/>
  <match src="identifier: _state [103627,103633]" dest="identifier: _state [42189,42195]"/>
  <match src="visibility [3787,3795]" dest="visibility [4366,4374]"/>
  <match src="type_alias [17376,17384]" dest="type_alias [59826,59834]"/>
  <match src="(: ( [8655,8656]" dest="(: ( [9240,9241]"/>
  <match src="(: ( [31815,31816]" dest="(: ( [46396,46397]"/>
  <match src="identifier: value [46278,46283]" dest="identifier: value [15435,15440]"/>
  <match src="returns: returns [67727,67734]" dest="returns: returns [61809,61816]"/>
  <match src="}: } [51778,51779]" dest="}: } [80665,80666]"/>
  <match src="state_mutability [9208,9212]" dest="state_mutability [9793,9797]"/>
  <match src="if_statement [93362,93419]" dest="if_statement [31926,31983]"/>
  <match src="returns: returns [93576,93583]" dest="returns: returns [32140,32147]"/>
  <match src="state_mutability [95742,95746]" dest="state_mutability [34306,34310]"/>
  <match src="}: } [30229,30230]" dest="}: } [44810,44811]"/>
  <match src="comment: // contracts then. [85921,85939]" dest="comment: // contracts then. [72727,72745]"/>
  <match src="variable_declaration_statement [73061,73200]" dest="variable_declaration_statement [79620,79697]"/>
  <match src="returns: returns [54970,54977]" dest="returns: returns [22060,22067]"/>
  <match src="yul_path [97183,97187]" dest="yul_path [35747,35751]"/>
  <match src="primitive_type [88061,88068]" dest="primitive_type [28904,28911]"/>
  <match src=",: , [95449,95450]" dest=",: , [34013,34014]"/>
  <match src="{: { [30412,30413]" dest="{: { [44993,44994]"/>
  <match src="function: function [10748,10756]" dest="function: function [11333,11341]"/>
  <match src="): ) [91413,91414]" dest="): ) [29977,29978]"/>
  <match src="function_body [103218,103287]" dest="function_body [41780,41849]"/>
  <match src=".: . [103446,103447]" dest=".: . [42008,42009]"/>
  <match src="(: ( [98061,98062]" dest="(: ( [36623,36624]"/>
  <match src="primitive_type [13907,13914]" dest="primitive_type [23698,23705]"/>
  <match src="=: = [81782,81783]" dest="=: = [70500,70501]"/>
  <match src="(: ( [92202,92203]" dest="(: ( [30766,30767]"/>
  <match src=".: . [98804,98805]" dest=".: . [37366,37367]"/>
  <match src="uint256: uint256 [44906,44913]" dest="uint256: uint256 [14063,14070]"/>
  <match src="contract_declaration [86664,87000]" dest="contract_declaration [27507,27843]"/>
  <match src="}: } [3283,3284]" dest="}: } [3862,3863]"/>
  <match src="assignment_expression [37739,37749]" dest="assignment_expression [52320,52330]"/>
  <match src=".: . [95364,95365]" dest=".: . [33928,33929]"/>
  <match src="internal: internal [32966,32974]" dest="internal: internal [47547,47555]"/>
  <match src="type_name [54891,54897]" dest="type_name [21981,21987]"/>
  <match src="(: ( [10908,10909]" dest="(: ( [11493,11494]"/>
  <match src="): ) [103357,103358]" dest="): ) [41919,41920]"/>
  <match src="[: [ [37345,37346]" dest="[: [ [51926,51927]"/>
  <match src="uint256: uint256 [5951,5958]" dest="uint256: uint256 [6530,6537]"/>
  <match src="function: function [100331,100339]" dest="function: function [38893,38901]"/>
  <match src="}: } [104547,104548]" dest="}: } [43109,43110]"/>
  <match src="parameter [30853,30862]" dest="parameter [45434,45443]"/>
  <match src="primitive_type [44298,44305]" dest="primitive_type [13455,13462]"/>
  <match src="): ) [92985,92986]" dest="): ) [31549,31550]"/>
  <match src="parameter [98175,98179]" dest="parameter [36737,36741]"/>
  <match src=",: , [82818,82819]" dest=",: , [78791,78792]"/>
  <match src="revert_statement [32311,32765]" dest="revert_statement [46892,47346]"/>
  <match src="bool: bool [15068,15072]" dest="bool: bool [24859,24863]"/>
  <match src="primitive_type [86848,86855]" dest="primitive_type [27691,27698]"/>
  <match src="enum_value: APPROVE [87396,87403]" dest="enum_value: APPROVE [28239,28246]"/>
  <match src="assignment_expression [101130,101231]" dest="assignment_expression [39692,39793]"/>
  <match src="returns: returns [55213,55220]" dest="returns: returns [22303,22310]"/>
  <match src="): ) [81810,81811]" dest="): ) [70538,70539]"/>
  <match src="primitive_type [34261,34268]" dest="primitive_type [48842,48849]"/>
  <match src="=: = [3181,3182]" dest="=: = [3760,3761]"/>
  <match src="state_mutability [53890,53894]" dest="state_mutability [20980,20984]"/>
  <match src="address: address [54794,54801]" dest="address: address [21884,21891]"/>
  <match src="memory: memory [101095,101101]" dest="memory: memory [39657,39663]"/>
  <match src="identifier: _state [102121,102127]" dest="identifier: _state [40683,40689]"/>
  <match src="function_definition [96746,96877]" dest="function_definition [35310,35441]"/>
  <match src="call_expression [98785,98816]" dest="call_expression [37347,37378]"/>
  <match src="(: ( [36973,36974]" dest="(: ( [51554,51555]"/>
  <match src="call_struct_argument [47457,47478]" dest="call_struct_argument [16614,16635]"/>
  <match src="identifier: msg [80755,80758]" dest="identifier: msg [70931,70934]"/>
  <match src=",: , [31401,31402]" dest=",: , [45982,45983]"/>
  <match src="function_body [81714,82550]" dest="function_body [70441,70855]"/>
  <match src=",: , [34558,34559]" dest=",: , [49139,49140]"/>
  <match src="): ) [37377,37378]" dest="): ) [51958,51959]"/>
  <match src="member_expression [98785,98804]" dest="member_expression [37347,37366]"/>
  <match src="pure: pure [46092,46096]" dest="pure: pure [15249,15253]"/>
  <match src="(: ( [54343,54344]" dest="(: ( [21433,21434]"/>
  <match src="call_argument [100240,100246]" dest="call_argument [38802,38808]"/>
  <match src="]: ] [103445,103446]" dest="]: ] [42007,42008]"/>
  <match src="parameter [102336,102349]" dest="parameter [40898,40911]"/>
  <match src="primitive_type [45520,45527]" dest="primitive_type [14677,14684]"/>
  <match src="identifier: this [72052,72056]" dest="identifier: this [58084,58088]"/>
  <match src="&quot;: &quot; [82852,82853]" dest="&quot;: &quot; [78825,78826]"/>
  <match src="function_definition [92607,92703]" dest="function_definition [31171,31267]"/>
  <match src="identifier: amount [75049,75055]" dest="identifier: amount [61730,61736]"/>
  <match src="member_expression [101242,101255]" dest="member_expression [39804,39817]"/>
  <match src="return: return [92024,92030]" dest="return: return [30588,30594]"/>
  <match src="identifier: candidate [103519,103528]" dest="identifier: candidate [42081,42090]"/>
  <match src="visibility [96499,96505]" dest="visibility [35063,35069]"/>
  <match src="call_argument [50018,50032]" dest="call_argument [55237,55281]"/>
  <match src="): ) [83308,83309]" dest="): ) [71046,71047]"/>
  <match src="expression_statement [83323,83370]" dest="expression_statement [62729,62771]"/>
  <match src="function_definition [92291,92383]" dest="function_definition [30855,30947]"/>
  <match src="constant: constant [105185,105193]" dest="constant: constant [67253,67261]"/>
  <match src="(: ( [8505,8506]" dest="(: ( [9090,9091]"/>
  <match src="call_argument [80393,80398]" dest="call_argument [69541,69546]"/>
  <match src="{: { [11570,11571]" dest="{: { [12155,12156]"/>
  <match src=",: , [9060,9061]" dest=",: , [9645,9646]"/>
  <match src="call_argument [83870,83883]" dest="call_argument [58776,58789]"/>
  <match src="comment: /* Epoch */ [44249,44260]" dest="comment: /* Epoch */ [13406,13417]"/>
  <match src="call_argument [7437,7459]" dest="call_argument [8022,8044]"/>
  <match src="call_argument [93454,93472]" dest="call_argument [32018,32036]"/>
  <match src="type_name [54038,54042]" dest="type_name [21128,21132]"/>
  <match src="identifier: fluidUntil [73576,73586]" dest="identifier: add [78913,78916]"/>
  <match src="member_expression [102121,102141]" dest="member_expression [40683,40703]"/>
  <match src="function_body [99517,99738]" dest="function_body [38079,38300]"/>
  <match src="identifier: account [101048,101055]" dest="identifier: account [39610,39617]"/>
  <match src="function: function [62912,62920]" dest="function: function [26771,26779]"/>
  <match src="(: ( [96708,96709]" dest="(: ( [35272,35273]"/>
  <match src="identifier: account [27639,27646]" dest="identifier: account [60199,60206]"/>
  <match src="memory: memory [11029,11035]" dest="memory: memory [11614,11620]"/>
  <match src="uint: uint [54412,54416]" dest="uint: uint [21502,21506]"/>
  <match src="]: ] [95549,95550]" dest="]: ] [34113,34114]"/>
  <match src="(: ( [98726,98727]" dest="(: ( [37288,37289]"/>
  <match src="call_expression [23757,23825]" dest="call_expression [62936,63012]"/>
  <match src="user_defined_type [88072,88085]" dest="user_defined_type [28915,28928]"/>
  <match src="): ) [7536,7537]" dest="): ) [8121,8122]"/>
  <match src="member_expression [10163,10170]" dest="member_expression [10748,10755]"/>
  <match src="): ) [90346,90347]" dest="): ) [74979,74980]"/>
  <match src="identifier: sub [1982,1985]" dest="identifier: sub [2561,2564]"/>
  <match src="parameter [81010,81023]" dest="parameter [69852,69865]"/>
  <match src="identifier: ADVANCE_INCENTIVE [46961,46978]" dest="identifier: ADVANCE_INCENTIVE [16118,16135]"/>
  <match src="indexed: indexed [53166,53173]" dest="indexed: indexed [20256,20263]"/>
  <match src="address: address [52431,52438]" dest="address: address [60280,60287]"/>
  <match src="function: function [53220,53228]" dest="function: function [20310,20318]"/>
  <match src="view: view [72121,72125]" dest="view: view [79514,79518]"/>
  <match src="function: function [90209,90217]" dest="function: function [74842,74850]"/>
  <match src="primitive_type [21431,21438]" dest="primitive_type [63178,63185]"/>
  <match src="parameter [100669,100682]" dest="parameter [39231,39244]"/>
  <match src="identifier: owner [23686,23691]" dest="identifier: dollarAmount [61865,61877]"/>
  <match src="identifier: sender [81464,81470]" dest="identifier: sender [71212,71218]"/>
  <match src="(: ( [9226,9227]" dest="(: ( [9811,9812]"/>
  <match src="identifier: v [54133,54134]" dest="identifier: v [21223,21224]"/>
  <match src="internal: internal [67999,68007]" dest="internal: internal [69100,69108]"/>
  <match src="): ) [103566,103567]" dest="): ) [42128,42129]"/>
  <match src="identifier: reason [101102,101108]" dest="identifier: reason [39664,39670]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [13251,13466]" dest="comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [23042,23257]"/>
  <match src=".: . [80565,80566]" dest=".: . [69722,69723]"/>
  <match src=",: , [82527,82528]" dest=",: , [70838,70839]"/>
  <match src="identifier: dollar [87690,87696]" dest="identifier: dollar [28533,28539]"/>
  <match src="}: } [94955,94956]" dest="}: } [33519,33520]"/>
  <match src="indexed: indexed [27631,27638]" dest="indexed: indexed [60191,60198]"/>
  <match src="primitive_type [6985,6992]" dest="primitive_type [7570,7577]"/>
  <match src="update_expression [36730,36733]" dest="update_expression [51311,51314]"/>
  <match src="external: external [49402,49410]" dest="external: external [61800,61808]"/>
  <match src="(: ( [92648,92649]" dest="(: ( [31212,31213]"/>
  <match src="primitive_type [92872,92879]" dest="primitive_type [31436,31443]"/>
  <match src="): ) [68408,68409]" dest="): ) [70779,70780]"/>
  <match src="primitive_type [34288,34295]" dest="primitive_type [48869,48876]"/>
  <match src="identifier: amount [75215,75221]" dest="identifier: amount [55568,55574]"/>
  <match src="if_statement [29929,30230]" dest="if_statement [44510,44811]"/>
  <match src="): ) [106988,106989]" dest="): ) [54640,54641]"/>
  <match src="identifier: accounts [93193,93201]" dest="identifier: accounts [31757,31765]"/>
  <match src="parameter [98124,98139]" dest="parameter [36686,36701]"/>
  <match src=".: . [101500,101501]" dest=".: . [40062,40063]"/>
  <match src="variable_declaration [82050,82069]" dest="variable_declaration [61196,61216]"/>
  <match src="): ) [95294,95295]" dest="): ) [33858,33859]"/>
  <match src="event_paramater [79920,79933]" dest="event_paramater [69036,69049]"/>
  <match src=".: . [9934,9935]" dest=".: . [10519,10520]"/>
  <match src="identifier: sub [102796,102799]" dest="identifier: sub [41358,41361]"/>
  <match src="primitive_type [70139,70146]" dest="primitive_type [64768,64775]"/>
  <match src="(: ( [37361,37362]" dest="(: ( [51942,51943]"/>
  <match src="call_expression [72025,72058]" dest="call_expression [58057,58090]"/>
  <match src="string [20851,20890]" dest="string [69202,69223]"/>
  <match src="visibility [102371,102379]" dest="visibility [40933,40941]"/>
  <match src="assignment_expression [103988,104081]" dest="assignment_expression [42550,42643]"/>
  <match src="identifier: getBootstrappingPeriod [95799,95821]" dest="identifier: getBootstrappingPeriod [34363,34385]"/>
  <match src="function: function [11005,11013]" dest="function: function [11590,11598]"/>
  <match src="): ) [22938,22939]" dest="): ) [62717,62718]"/>
  <match src="): ) [32059,32060]" dest="): ) [46640,46641]"/>
  <match src="variable_declaration [38572,38585]" dest="variable_declaration [53153,53166]"/>
  <match src=".: . [100464,100465]" dest=".: . [39026,39027]"/>
  <match src="parameter [13907,13914]" dest="parameter [23698,23705]"/>
  <match src="block_statement [36300,36357]" dest="block_statement [50881,50938]"/>
  <match src="type_name [86905,86912]" dest="type_name [27748,27755]"/>
  <match src="identifier: amount [101216,101222]" dest="identifier: amount [39778,39784]"/>
  <match src=",: , [7958,7959]" dest=",: , [8543,8544]"/>
  <match src="primitive_type [20705,20712]" dest="primitive_type [18142,18149]"/>
  <match src="member_expression [102238,102267]" dest="member_expression [40800,40829]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [13095,13169]" dest="comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [22886,22960]"/>
  <match src="identifier: amount [98149,98155]" dest="identifier: amount [36711,36717]"/>
  <match src="call_expression [102270,102283]" dest="call_expression [40832,40845]"/>
  <match src="event_paramater [54186,54208]" dest="event_paramater [21276,21298]"/>
  <match src="string_literal [20851,20890]" dest="string_literal [69202,69223]"/>
  <match src=".: . [83277,83278]" dest=".: . [71010,71011]"/>
  <match src="comment: // ': ' [29556,29563]" dest="comment: // ': ' [44137,44144]"/>
  <match src="identifier: balance [92793,92800]" dest="identifier: balance [31357,31364]"/>
  <match src="[: [ [93983,93984]" dest="[: [ [32547,32548]"/>
  <match src="): ) [35993,35994]" dest="): ) [50574,50575]"/>
  <match src="is: is [79361,79363]" dest="is: is [68650,68652]"/>
  <match src="{: { [88231,88232]" dest="{: { [29074,29075]"/>
  <match src="return_statement [39103,39142]" dest="return_statement [53684,53723]"/>
  <match src="(: ( [81799,81800]" dest="(: ( [70527,70528]"/>
  <match src="identifier: account [91790,91797]" dest="identifier: account [30354,30361]"/>
  <match src="visibility [44074,44081]" dest="visibility [13231,13238]"/>
  <match src="string [81538,81573]" dest="string [70250,70288]"/>
  <match src="memory: memory [46659,46665]" dest="memory: memory [15816,15822]"/>
  <match src="return_type_definition [92534,92551]" dest="return_type_definition [31098,31115]"/>
  <match src="identifier: Decimal [62977,62984]" dest="identifier: Decimal [26836,26843]"/>
  <match src="address: address [53100,53107]" dest="address: address [20190,20197]"/>
  <match src="{: { [80480,80481]" dest="{: { [69636,69637]"/>
  <match src="(: ( [10261,10262]" dest="(: ( [10846,10847]"/>
  <match src="uint256: uint256 [50900,50907]" dest="uint256: uint256 [26059,26066]"/>
  <match src="type_name [10344,10348]" dest="type_name [10929,10933]"/>
  <match src="parameter [101818,101833]" dest="parameter [40380,40395]"/>
  <match src="]: ] [94219,94220]" dest="]: ] [32783,32784]"/>
  <match src="call_expression [57733,57784]" dest="call_expression [71189,71261]"/>
  <match src="function_body [101882,102033]" dest="function_body [40444,40595]"/>
  <match src="function_definition [91606,91682]" dest="function_definition [30170,30246]"/>
  <match src="return_statement [96676,96731]" dest="return_statement [35240,35295]"/>
  <match src="identifier: isContract [90318,90328]" dest="identifier: isContract [74951,74961]"/>
  <match src="function: function [103883,103891]" dest="function: function [42445,42453]"/>
  <match src="&quot;: &quot; [68397,68398]" dest="&quot;: &quot; [70778,70779]"/>
  <match src="return_type_definition [47285,47302]" dest="return_type_definition [16442,16459]"/>
  <match src="(: ( [99263,99264]" dest="(: ( [37825,37826]"/>
  <match src="identifier: _state [92462,92468]" dest="identifier: _state [31026,31032]"/>
  <match src="[: [ [96288,96289]" dest="[: [ [34852,34853]"/>
  <match src="function: function [45471,45479]" dest="function: function [14628,14636]"/>
  <match src="call_argument [83935,83939]" dest="call_argument [58164,58168]"/>
  <match src="): ) [80165,80166]" dest="): ) [69341,69342]"/>
  <match src="number_literal: 1 [102169,102170]" dest="number_literal: 1 [40731,40732]"/>
  <match src=".: . [95221,95222]" dest=".: . [33785,33786]"/>
  <match src="identifier: recipient [13498,13507]" dest="identifier: recipient [23289,23298]"/>
  <match src=",: , [80320,80321]" dest=",: , [69495,69496]"/>
  <match src="primitive_type [92328,92335]" dest="primitive_type [30892,30899]"/>
  <match src="external: external [80735,80743]" dest="external: external [78722,78730]"/>
  <match src="return_statement [3268,3277]" dest="return_statement [3847,3856]"/>
  <match src="return: return [47982,47988]" dest="return: return [17139,17145]"/>
  <match src="member_expression [83852,83869]" dest="member_expression [58762,58775]"/>
  <match src=",: , [8781,8782]" dest=",: , [9366,9367]"/>
  <match src="function_definition [102524,102890]" dest="function_definition [41086,41452]"/>
  <match src="identifier: _state [103379,103385]" dest="identifier: _state [41941,41947]"/>
  <match src="&quot;: &quot; [90349,90350]" dest="&quot;: &quot; [74982,74983]"/>
  <match src="primitive_type [11207,11214]" dest="primitive_type [11792,11799]"/>
  <match src="uint256: uint256 [49296,49303]" dest="uint256: uint256 [70387,70394]"/>
  <match src="type_name [53385,53390]" dest="type_name [20475,20480]"/>
  <match src="}: } [10172,10173]" dest="}: } [10757,10758]"/>
  <match src="[: [ [37828,37829]" dest="[: [ [52409,52410]"/>
  <match src="member_expression [98918,98932]" dest="member_expression [37480,37494]"/>
  <match src="call_struct_argument [8508,8532]" dest="call_struct_argument [9093,9117]"/>
  <match src="): ) [8035,8036]" dest="): ) [8620,8621]"/>
  <match src="return_type_definition [47542,47571]" dest="return_type_definition [16699,16728]"/>
  <match src="type_name [96342,96349]" dest="type_name [34906,34913]"/>
  <match src="expression_statement [22872,22940]" dest="expression_statement [62615,62719]"/>
  <match src="array_access [101285,101305]" dest="array_access [39847,39867]"/>
  <match src="}: } [7467,7468]" dest="}: } [8052,8053]"/>
  <match src="identifier: outstanding [101314,101325]" dest="identifier: outstanding [39876,39887]"/>
  <match src="call_argument [68370,68374]" dest="call_argument [78972,78976]"/>
  <match src="{: { [7139,7140]" dest="{: { [7724,7725]"/>
  <match src="function_definition [76798,76947]" dest="function_definition [60458,60874]"/>
  <match src="primitive_type [91180,91187]" dest="primitive_type [29744,29751]"/>
  <match src="for_statement [37490,37903]" dest="for_statement [52071,52484]"/>
  <match src="identifier: add [9127,9130]" dest="identifier: add [9712,9715]"/>
  <match src="): ) [54325,54326]" dest="): ) [21415,21416]"/>
  <match src="public: public [95153,95159]" dest="public: public [33717,33723]"/>
  <match src="function_body [9678,9752]" dest="function_body [10263,10337]"/>
  <match src="function_body [11074,11120]" dest="function_body [11659,11705]"/>
  <match src="comment: /**      * Account      */ [99411,99439]" dest="comment: /**      * Account      */ [37973,38001]"/>
  <match src=",: , [55285,55286]" dest=",: , [22375,22376]"/>
  <match src="): ) [98815,98816]" dest="): ) [37377,37378]"/>
  <match src="visibility [101873,101881]" dest="visibility [40435,40443]"/>
  <match src="identifier: period [102989,102995]" dest="identifier: period [41551,41557]"/>
  <match src=".: . [93974,93975]" dest=".: . [32538,32539]"/>
  <match src="): ) [83478,83479]" dest="): ) [58660,58661]"/>
  <match src="parameter [9342,9358]" dest="parameter [9927,9943]"/>
  <match src="identifier: incrementBalanceOf [99456,99474]" dest="identifier: incrementBalanceOf [38018,38036]"/>
  <match src="identifier: b [3844,3845]" dest="identifier: b [4423,4424]"/>
  <match src="memory: memory [10030,10036]" dest="memory: memory [10615,10621]"/>
  <match src="uint256: uint256 [44481,44488]" dest="uint256: uint256 [13638,13645]"/>
  <match src="function_definition [80996,81666]" dest="function_definition [69838,70363]"/>
  <match src="internal: internal [103968,103976]" dest="internal: internal [42530,42538]"/>
  <match src="function_definition [98107,98212]" dest="function_definition [36669,36774]"/>
  <match src="call_argument [52113,52125]" dest="call_argument [63660,63670]"/>
  <match src="identifier: start [44331,44336]" dest="identifier: start [13488,13493]"/>
  <match src="uint256: uint256 [87100,87107]" dest="uint256: uint256 [27943,27950]"/>
  <match src=",: , [100046,100047]" dest=",: , [38608,38609]"/>
  <match src="primitive_type [15034,15041]" dest="primitive_type [24825,24832]"/>
  <match src="identifier: outstanding [101271,101282]" dest="identifier: outstanding [39833,39844]"/>
  <match src="identifier: spender [101735,101742]" dest="identifier: spender [40297,40304]"/>
  <match src="view: view [93571,93575]" dest="view: view [32135,32139]"/>
  <match src="uint256: uint256 [45374,45381]" dest="uint256: uint256 [14531,14538]"/>
  <match src="): ) [30160,30161]" dest="): ) [44741,44742]"/>
  <match src="): ) [38043,38044]" dest="): ) [52624,52625]"/>
  <match src="}: } [7901,7902]" dest="}: } [8486,8487]"/>
  <match src="?: ? [81245,81246]" dest="?: ? [69987,69988]"/>
  <match src="identifier: start [79913,79918]" dest="identifier: start [69029,69034]"/>
  <match src="type_name [46811,46818]" dest="type_name [15968,15975]"/>
  <match src="call_argument [105828,105844]" dest="call_argument [67896,67912]"/>
  <match src="return_statement [96824,96870]" dest="return_statement [35388,35434]"/>
  <match src="type_name [38190,38195]" dest="type_name [52771,52776]"/>
  <match src=".: . [101915,101916]" dest=".: . [40477,40478]"/>
  <match src="primitive_type [53647,53651]" dest="primitive_type [20737,20741]"/>
  <match src="internal: internal [7790,7798]" dest="internal: internal [8375,8383]"/>
  <match src="=: = [98783,98784]" dest="=: = [37345,37346]"/>
  <match src="state_mutability [53430,53434]" dest="state_mutability [20520,20524]"/>
  <match src="identifier: balanceCheck [80924,80936]" dest="identifier: balanceCheck [59163,59175]"/>
  <match src="primitive_type [23625,23632]" dest="primitive_type [62883,62890]"/>
  <match src="identifier: balance [98488,98495]" dest="identifier: balance [37050,37057]"/>
  <match src=",: , [32824,32825]" dest=",: , [47405,47406]"/>
  <match src="uint256: uint256 [99113,99120]" dest="uint256: uint256 [37675,37682]"/>
  <match src="function_body [95326,95396]" dest="function_body [33890,33960]"/>
  <match src="(: ( [45494,45495]" dest="(: ( [14651,14652]"/>
  <match src="struct_member [87811,87826]" dest="struct_member [28654,28669]"/>
  <match src="uint256: uint256 [97851,97858]" dest="uint256: uint256 [36413,36420]"/>
  <match src="identifier: Decimal [46264,46271]" dest="identifier: Decimal [15421,15428]"/>
  <match src="function_definition [46322,46428]" dest="function_definition [15479,15585]"/>
  <match src="identifier: value [10127,10132]" dest="identifier: value [10712,10717]"/>
  <match src="identifier: _state [93186,93192]" dest="identifier: _state [31750,31756]"/>
  <match src="(: ( [3764,3765]" dest="(: ( [4343,4344]"/>
  <match src="function_body [10543,10592]" dest="function_body [11128,11177]"/>
  <match src="primitive_type [101835,101842]" dest="primitive_type [40397,40404]"/>
  <match src=",: , [81887,81888]" dest=",: , [79178,79179]"/>
  <match src="type_name [38061,38068]" dest="type_name [52642,52649]"/>
  <match src="{: { [10406,10407]" dest="{: { [10991,10992]"/>
  <match src="state_mutability [47390,47394]" dest="state_mutability [16547,16551]"/>
  <match src="call_argument [82721,82748]" dest="call_argument [58368,58393]"/>
  <match src="visibility [95007,95013]" dest="visibility [33571,33577]"/>
  <match src="byte: byte [37351,37355]" dest="byte: byte [51932,51936]"/>
  <match src="parameter [46376,46383]" dest="parameter [15533,15540]"/>
  <match src="identifier: Claim [79817,79822]" dest="identifier: Incentivization [80552,80567]"/>
  <match src="): ) [100988,100989]" dest="): ) [39550,39551]"/>
  <match src="(: ( [72062,72063]" dest="(: ( [58111,58112]"/>
  <match src="call_expression [30693,30712]" dest="call_expression [45274,45293]"/>
  <match src="call_argument [30693,30712]" dest="call_argument [45274,45293]"/>
  <match src="identifier: epoch [102652,102657]" dest="identifier: epoch [41214,41219]"/>
  <match src="emit_statement [21835,21876]" dest="emit_statement [63820,63874]"/>
  <match src="return: return [9898,9904]" dest="return: return [10483,10489]"/>
  <match src="call_argument [75930,75936]" dest="call_argument [18534,18540]"/>
  <match src="identifier: epoch [100677,100682]" dest="identifier: epoch [39239,39244]"/>
  <match src="uint256: uint256 [86970,86977]" dest="uint256: uint256 [27813,27820]"/>
  <match src="identifier: _state [102838,102844]" dest="identifier: _state [41400,41406]"/>
  <match src="return: return [86057,86063]" dest="return: return [72863,72869]"/>
  <match src="return_statement [93429,93491]" dest="return_statement [31993,32055]"/>
  <match src="call_expression [1982,2025]" dest="call_expression [2561,2604]"/>
  <match src=",: , [54098,54099]" dest=",: , [21188,21189]"/>
  <match src="primitive_type [45308,45315]" dest="primitive_type [14465,14472]"/>
  <match src="identifier: require [90282,90289]" dest="identifier: require [74915,74922]"/>
  <match src="view: view [53430,53434]" dest="view: view [20520,20524]"/>
  <match src="event_paramater [54224,54236]" dest="event_paramater [21314,21326]"/>
  <match src="(: ( [47550,47551]" dest="(: ( [16707,16708]"/>
  <match src="): ) [34935,34936]" dest="): ) [49516,49517]"/>
  <match src="returns: returns [96511,96518]" dest="returns: returns [35075,35082]"/>
  <match src="): ) [73029,73030]" dest="): ) [65412,65413]"/>
  <match src="]: ] [100800,100801]" dest="]: ] [39362,39363]"/>
  <match src="address: address [23776,23783]" dest="address: address [62955,62962]"/>
  <match src="member_expression [94006,94027]" dest="member_expression [32570,32591]"/>
  <match src="(: ( [96806,96807]" dest="(: ( [35370,35371]"/>
  <match src="contract_body [91154,97209]" dest="contract_body [29718,35773]"/>
  <match src="member_expression [8306,8316]" dest="member_expression [8891,8901]"/>
  <match src="primitive_type [73212,73219]" dest="primitive_type [62099,62106]"/>
  <match src="(: ( [93447,93448]" dest="(: ( [32011,32012]"/>
  <match src="visibility [11292,11299]" dest="visibility [11877,11884]"/>
  <match src="type_name [92226,92233]" dest="type_name [30790,30797]"/>
  <match src="uint256: uint256 [73212,73219]" dest="uint256: uint256 [62099,62106]"/>
  <match src="type_name [49033,49040]" dest="type_name [59927,59934]"/>
  <match src="return_type_definition [45975,45992]" dest="return_type_definition [15132,15149]"/>
  <match src="function: function [93096,93104]" dest="function: function [31660,31668]"/>
  <match src="parameter [94662,94669]" dest="parameter [33226,33233]"/>
  <match src=",: , [102979,102980]" dest=",: , [41541,41542]"/>
  <match src="(: ( [99667,99668]" dest="(: ( [38229,38230]"/>
  <match src="primitive_type [64438,64445]" dest="primitive_type [75962,75969]"/>
  <match src="call_argument [83852,83920]" dest="call_argument [58057,58149]"/>
  <match src=",: , [54110,54111]" dest=",: , [21200,21201]"/>
  <match src="function_body [5283,5346]" dest="function_body [5862,5925]"/>
  <match src="(: ( [11520,11521]" dest="(: ( [12105,12106]"/>
  <match src="return_statement [94328,94356]" dest="return_statement [32892,32920]"/>
  <match src="identifier: reason [34604,34610]" dest="identifier: reason [49185,49191]"/>
  <match src="uint256: uint256 [94992,94999]" dest="uint256: uint256 [33556,33563]"/>
  <match src=".: . [96277,96278]" dest=".: . [34841,34842]"/>
  <match src="function: function [2813,2821]" dest="function: function [3392,3400]"/>
  <match src="call_expression [21687,21758]" dest="call_expression [55772,55830]"/>
  <match src="function_definition [45567,45682]" dest="function_definition [14724,14839]"/>
  <match src="visibility [46083,46091]" dest="visibility [15240,15248]"/>
  <match src="parameter [101627,101640]" dest="parameter [40189,40202]"/>
  <match src="event_paramater [79848,79861]" dest="event_paramater [60435,60448]"/>
  <match src="call_expression [95789,95823]" dest="call_expression [34353,34387]"/>
  <match src="identifier: notPaused [81034,81043]" dest="identifier: onlyFrozenOrFluid [69876,69893]"/>
  <match src="(: ( [94091,94092]" dest="(: ( [32655,32656]"/>
  <match src="(: ( [103859,103860]" dest="(: ( [42421,42422]"/>
  <match src="(: ( [45794,45795]" dest="(: ( [14951,14952]"/>
  <match src="return_type_definition [96373,96390]" dest="return_type_definition [34937,34954]"/>
  <match src="parameter [54100,54110]" dest="parameter [21190,21200]"/>
  <match src="identifier: account [105567,105574]" dest="identifier: account [67635,67642]"/>
  <match src="identifier: target [11215,11221]" dest="identifier: target [11800,11806]"/>
  <match src="identifier: DAO_EXIT_LOCKUP_EPOCHS [47078,47100]" dest="identifier: DAO_EXIT_LOCKUP_EPOCHS [16235,16257]"/>
  <match src="]: ] [37839,37840]" dest="]: ] [52420,52421]"/>
  <match src="uint256: uint256 [1921,1928]" dest="uint256: uint256 [2500,2507]"/>
  <match src="): ) [67287,67288]" dest="): ) [65880,65881]"/>
  <match src="call_argument [82105,82110]" dest="call_argument [70545,70566]"/>
  <match src="constant: constant [44690,44698]" dest="constant: constant [13847,13855]"/>
  <match src="}: } [92818,92819]" dest="}: } [31382,31383]"/>
  <match src="state_variable_declaration [44674,44733]" dest="state_variable_declaration [13831,13890]"/>
  <match src="identifier: j [36240,36241]" dest="identifier: j [50821,50822]"/>
  <match src="return_type_definition [46097,46114]" dest="return_type_definition [15254,15271]"/>
  <match src="function_body [39024,39258]" dest="function_body [53605,53839]"/>
  <match src="identifier: input [39121,39126]" dest="identifier: input [53702,53707]"/>
  <match src="function_definition [94371,94560]" dest="function_definition [32935,33124]"/>
  <match src="): ) [50151,50152]" dest="): ) [55037,55038]"/>
  <match src="pure: pure [7557,7561]" dest="pure: pure [8142,8146]"/>
  <match src=",: , [23002,23003]" dest=",: , [55448,55449]"/>
  <match src="identifier: D256 [9428,9432]" dest="identifier: D256 [10013,10017]"/>
  <match src="visibility [83806,83813]" dest="visibility [58011,58018]"/>
  <match src="identifier: coupons [100845,100852]" dest="identifier: coupons [39407,39414]"/>
  <match src="function_definition [11177,11402]" dest="function_definition [11762,11987]"/>
  <match src="(: ( [35622,35623]" dest="(: ( [50203,50204]"/>
  <match src="primitive_type [29367,29374]" dest="primitive_type [43948,43955]"/>
  <match src="member_expression [99350,99375]" dest="member_expression [37912,37937]"/>
  <match src="constant: constant [44393,44401]" dest="constant: constant [13550,13558]"/>
  <match src="member_expression [92786,92800]" dest="member_expression [31350,31364]"/>
  <match src="type_name [99280,99286]" dest="type_name [37842,37848]"/>
  <match src="identifier: div [3837,3840]" dest="identifier: div [4416,4419]"/>
  <match src="uint256: uint256 [44839,44846]" dest="uint256: uint256 [13996,14003]"/>
  <match src=",: , [2835,2836]" dest=",: , [3414,3415]"/>
  <match src="address: address [93532,93539]" dest="address: address [32096,32103]"/>
  <match src="member_expression [103782,103799]" dest="member_expression [42344,42361]"/>
  <match src="primitive_type [53321,53327]" dest="primitive_type [20411,20417]"/>
  <match src="&quot;: &quot; [82307,82308]" dest="&quot;: &quot; [78557,78558]"/>
  <match src="function: function [9118,9126]" dest="function: function [9703,9711]"/>
  <match src="parameter [47174,47181]" dest="parameter [16331,16338]"/>
  <match src="uint256: uint256 [1519,1526]" dest="uint256: uint256 [2098,2105]"/>
  <match src="address: address [44008,44015]" dest="address: address [13165,13172]"/>
  <match src="identifier: Decimal [66509,66516]" dest="identifier: Decimal [19749,19756]"/>
  <match src="identifier: sync [55402,55406]" dest="identifier: sync [22492,22496]"/>
  <match src="call_struct_argument [10127,10171]" dest="call_struct_argument [10712,10756]"/>
  <match src="comment: // ============ Core Methods ============ [11128,11169]" dest="comment: // ============ Core Methods ============ [11713,11754]"/>
  <match src="struct: struct [87760,87766]" dest="struct: struct [28603,28609]"/>
  <match src="identifier: spender [15542,15549]" dest="identifier: spender [25333,25340]"/>
  <match src=".: . [103616,103617]" dest=".: . [42178,42179]"/>
  <match src="}: } [97019,97020]" dest="}: } [35583,35584]"/>
  <match src="function_definition [93748,94058]" dest="function_definition [32312,32622]"/>
  <match src="member_expression [105337,105379]" dest="member_expression [67405,67447]"/>
  <match src="): ) [37237,37238]" dest="): ) [51818,51819]"/>
  <match src="function: function [8120,8128]" dest="function: function [8705,8713]"/>
  <match src="return_type_definition [53250,53273]" dest="return_type_definition [20340,20363]"/>
  <match src="pure: pure [8637,8641]" dest="pure: pure [9222,9226]"/>
  <match src="return_type_definition [95165,95182]" dest="return_type_definition [33729,33746]"/>
  <match src="function: function [46585,46593]" dest="function: function [15742,15750]"/>
  <match src="(: ( [78291,78292]" dest="(: ( [59092,59093]"/>
  <match src=",: , [7510,7511]" dest=",: , [8095,8096]"/>
  <match src="{: { [92131,92132]" dest="{: { [30695,30696]"/>
  <match src="identifier: value [7164,7169]" dest="identifier: value [7749,7754]"/>
  <match src="identifier: b [7977,7978]" dest="identifier: b [8562,8563]"/>
  <match src="visibility [10051,10059]" dest="visibility [10636,10644]"/>
  <match src="identifier: value [80322,80327]" dest="identifier: value [69497,69502]"/>
  <match src="call_expression [77808,77816]" dest="call_expression [57740,57748]"/>
  <match src="[: [ [91789,91790]" dest="[: [ [30353,30354]"/>
  <match src="type_name [10537,10541]" dest="type_name [11122,11126]"/>
  <match src=".: . [98932,98933]" dest=".: . [37494,37495]"/>
  <match src="call_struct_argument [8967,8984]" dest="call_struct_argument [9552,9569]"/>
  <match src="type_name [86941,86948]" dest="type_name [27784,27791]"/>
  <match src="boolean_literal [65824,65829]" dest="boolean_literal [79591,79596]"/>
  <match src="primitive_type [101457,101464]" dest="primitive_type [40019,40026]"/>
  <match src="private: private [44914,44921]" dest="private: private [14071,14078]"/>
  <match src="string_literal [83004,83035]" dest="string_literal [78209,78220]"/>
  <match src="(: ( [8563,8564]" dest="(: ( [9148,9149]"/>
  <match src="{: { [34368,34369]" dest="{: { [48949,48950]"/>
  <match src="parameter [93549,93562]" dest="parameter [32113,32126]"/>
  <match src="call_argument [7452,7456]" dest="call_argument [8037,8041]"/>
  <match src="(: ( [95624,95625]" dest="(: ( [34188,34189]"/>
  <match src="uint256: uint256 [47857,47864]" dest="uint256: uint256 [17014,17021]"/>
  <match src="): ) [49920,49921]" dest="): ) [62085,62086]"/>
  <match src=".: . [100801,100802]" dest=".: . [39363,39364]"/>
  <match src="parameter [103169,103186]" dest="parameter [41731,41748]"/>
  <match src="type_name [44163,44170]" dest="type_name [13320,13327]"/>
  <match src="type_name [17425,17432]" dest="type_name [17888,17895]"/>
  <match src="(: ( [33033,33034]" dest="(: ( [47614,47615]"/>
  <match src="uint256: uint256 [91180,91187]" dest="uint256: uint256 [29744,29751]"/>
  <match src="identifier: a [3116,3117]" dest="identifier: a [3695,3696]"/>
  <match src="primitive_type [54147,54154]" dest="primitive_type [21237,21244]"/>
  <match src="(: ( [72043,72044]" dest="(: ( [58075,58076]"/>
  <match src="member_expression [103379,103396]" dest="member_expression [41941,41958]"/>
  <match src="{: { [99029,99030]" dest="{: { [37591,37592]"/>
  <match src="type_name [103152,103159]" dest="type_name [41714,41721]"/>
  <match src="(: ( [30025,30026]" dest="(: ( [44606,44607]"/>
  <match src="member_expression [9277,9287]" dest="member_expression [9862,9872]"/>
  <match src="): ) [79803,79804]" dest="): ) [68878,68879]"/>
  <match src="call_struct_argument [45810,45830]" dest="call_struct_argument [14967,14987]"/>
  <match src="identifier: Require [84420,84427]" dest="identifier: Require [76846,76853]"/>
  <match src=",: , [9732,9733]" dest=",: , [10317,10318]"/>
  <match src="}: } [98690,98691]" dest="}: } [37252,37253]"/>
  <match src="member_expression [98785,98799]" dest="member_expression [37347,37361]"/>
  <match src="identifier: _state [98918,98924]" dest="identifier: _state [37480,37486]"/>
  <match src="type_name [10909,10913]" dest="type_name [11494,11498]"/>
  <match src="return_type_definition [8015,8036]" dest="return_type_definition [8600,8621]"/>
  <match src="primitive_type [32146,32153]" dest="primitive_type [46727,46734]"/>
  <match src="emit_statement [23885,23923]" dest="emit_statement [63089,63138]"/>
  <match src="(: ( [47961,47962]" dest="(: ( [17118,17119]"/>
  <match src="identifier: BASE [8095,8099]" dest="identifier: BASE [8680,8684]"/>
  <match src="identifier: FILE [83935,83939]" dest="identifier: FILE [58164,58168]"/>
  <match src="function_definition [54640,54691]" dest="function_definition [21730,21781]"/>
  <match src="identifier: Constants [101544,101553]" dest="identifier: Constants [40106,40115]"/>
  <match src="view: view [91733,91737]" dest="view: view [30297,30301]"/>
  <match src="binary_expression [93366,93382]" dest="binary_expression [31930,31946]"/>
  <match src="{: { [102380,102381]" dest="{: { [40942,40943]"/>
  <match src="function: function [103482,103490]" dest="function: function [42044,42052]"/>
  <match src="call_expression [89802,89838]" dest="call_expression [74435,74471]"/>
  <match src=".: . [82497,82498]" dest=".: . [70808,70809]"/>
  <match src="binary_expression [39121,39139]" dest="binary_expression [53702,53720]"/>
  <match src="member_expression [79517,79527]" dest="member_expression [62641,62651]"/>
  <match src="comment: // a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format)) [55979,56081]" dest="comment: /*     Copyright 2018-2019 zOS Global Limited           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [72893,73518]"/>
  <match src="identifier: FILE [82833,82837]" dest="identifier: FILE [78806,78810]"/>
  <match src="): ) [32673,32674]" dest="): ) [47254,47255]"/>
  <match src="identifier: self [9710,9714]" dest="identifier: self [10295,10299]"/>
  <match src="call_argument [21709,21715]" dest="call_argument [55791,55797]"/>
  <match src="}: } [102032,102033]" dest="}: } [40594,40595]"/>
  <match src="identifier: FILE [105860,105864]" dest="identifier: FILE [67928,67932]"/>
  <match src="return_statement [46396,46421]" dest="return_statement [15553,15578]"/>
  <match src="[: [ [100735,100736]" dest="[: [ [39297,39298]"/>
  <match src="type_name [95483,95490]" dest="type_name [34047,34054]"/>
  <match src="identifier: account [79839,79846]" dest="identifier: account [80584,80591]"/>
  <match src="identifier: Upgradeable [106598,106609]" dest="identifier: Upgradeable [75807,75818]"/>
  <match src="=: = [44006,44007]" dest="=: = [13163,13164]"/>
  <match src="visibility [49402,49410]" dest="visibility [61800,61808]"/>
  <match src="parameter [9660,9671]" dest="parameter [10245,10256]"/>
  <match src="returns: returns [53960,53967]" dest="returns: returns [21050,21057]"/>
  <match src="identifier: amount [50908,50914]" dest="identifier: amount [26067,26073]"/>
  <match src="visibility [54771,54779]" dest="visibility [21861,21869]"/>
  <match src="primitive_type [91647,91652]" dest="primitive_type [30211,30216]"/>
  <match src="event: event [54333,54338]" dest="event: event [21423,21428]"/>
  <match src="(: ( [94412,94413]" dest="(: ( [32976,32977]"/>
  <match src="return: return [92998,93004]" dest="return: return [31562,31568]"/>
  <match src="identifier: epoch [102569,102574]" dest="identifier: epoch [41131,41136]"/>
  <match src="identifier: totalSupply [93366,93377]" dest="identifier: totalSupply [31930,31941]"/>
  <match src="function_definition [13175,13243]" dest="function_definition [22966,23034]"/>
  <match src="expression_statement [35366,35372]" dest="expression_statement [49947,49953]"/>
  <match src="array_access [37293,37302]" dest="array_access [51874,51883]"/>
  <match src="parameter [38955,38968]" dest="parameter [53536,53549]"/>
  <match src="%: % [36827,36828]" dest="%: % [51408,51409]"/>
  <match src="identifier: _state [102238,102244]" dest="identifier: _state [40800,40806]"/>
  <match src="return_type_definition [96939,96953]" dest="return_type_definition [35503,35517]"/>
  <match src="}: } [97198,97199]" dest="}: } [35762,35763]"/>
  <match src="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [12779,12932]" dest="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [22570,22723]"/>
  <match src="{: { [38050,38051]" dest="{: { [52631,52632]"/>
  <match src="(: ( [5304,5305]" dest="(: ( [5883,5884]"/>
  <match src="type_name [36039,36046]" dest="type_name [50620,50627]"/>
  <match src="primitive_type [38073,38080]" dest="primitive_type [52654,52661]"/>
  <match src="identifier: isInitialized [96894,96907]" dest="identifier: isInitialized [35458,35471]"/>
  <match src="returns: returns [9218,9225]" dest="returns: returns [9803,9810]"/>
  <match src="uint256: uint256 [38482,38489]" dest="uint256: uint256 [53063,53070]"/>
  <match src=".: . [95966,95967]" dest=".: . [34530,34531]"/>
  <match src="using: using [79394,79399]" dest="using: using [68680,68685]"/>
  <match src=",: , [21614,21615]" dest=",: , [63384,63385]"/>
  <match src="+: + [35677,35678]" dest="+: + [50258,50259]"/>
  <match src="type_name [46376,46383]" dest="type_name [15533,15540]"/>
  <match src="{: { [47183,47184]" dest="{: { [16340,16341]"/>
  <match src="=: = [104024,104025]" dest="=: = [42586,42587]"/>
  <match src="(: ( [36804,36805]" dest="(: ( [51385,51386]"/>
  <match src="}: } [93675,93676]" dest="}: } [32239,32240]"/>
  <match src="==: == [3118,3120]" dest="==: == [3697,3699]"/>
  <match src="variable_declaration_statement [36232,36250]" dest="variable_declaration_statement [50813,50831]"/>
  <match src=",: , [15549,15550]" dest=",: , [25340,25341]"/>
  <match src="(: ( [88060,88061]" dest="(: ( [28903,28904]"/>
  <match src="constant: constant [43813,43821]" dest="constant: constant [12970,12978]"/>
  <match src="member_expression [12521,12531]" dest="member_expression [63611,63621]"/>
  <match src="private: private [48921,48928]" dest="private: private [60928,60935]"/>
  <match src=".: . [92370,92371]" dest=".: . [30934,30935]"/>
  <match src="primitive_type [4626,4633]" dest="primitive_type [5205,5212]"/>
  <match src="internal: internal [104152,104160]" dest="internal: internal [42714,42722]"/>
  <match src="expression_statement [24939,24966]" dest="expression_statement [55159,55194]"/>
  <match src="primitive_type [95317,95324]" dest="primitive_type [33881,33888]"/>
  <match src="uint256: uint256 [76007,76014]" dest="uint256: uint256 [61606,61613]"/>
  <match src="pure: pure [7377,7381]" dest="pure: pure [7962,7966]"/>
  <match src="parameter [53797,53807]" dest="parameter [20887,20897]"/>
  <match src="(: ( [54067,54068]" dest="(: ( [21157,21158]"/>
  <match src="call_argument [7888,7899]" dest="call_argument [8473,8484]"/>
  <match src="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [13557,13827]" dest="comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [23348,23618]"/>
  <match src="return: return [98079,98085]" dest="return: return [36641,36647]"/>
  <match src="function_body [91566,91598]" dest="function_body [30130,30162]"/>
  <match src="type_name [102336,102343]" dest="type_name [40898,40905]"/>
  <match src="(: ( [22879,22880]" dest="(: ( [62640,62641]"/>
  <match src="identifier: allowance [52095,52104]" dest="identifier: allowanceCoupons [63635,63651]"/>
  <match src="primitive_type [103530,103537]" dest="primitive_type [42092,42099]"/>
  <match src="memory: memory [7581,7587]" dest="memory: memory [8166,8172]"/>
  <match src="type_name [45984,45991]" dest="type_name [15141,15148]"/>
  <match src="primitive_type [37495,37502]" dest="primitive_type [52076,52083]"/>
  <match src="state_mutability [54668,54672]" dest="state_mutability [21758,21762]"/>
  <match src="identifier: coupons [100888,100895]" dest="identifier: coupons [39450,39457]"/>
  <match src="parameter [93121,93136]" dest="parameter [31685,31700]"/>
  <match src="expression_statement [9018,9024]" dest="expression_statement [9603,9609]"/>
  <match src="identifier: require [27116,27123]" dest="identifier: decrementApproveFor [77396,77415]"/>
  <match src="identifier: epoch [95289,95294]" dest="identifier: epoch [33853,33858]"/>
  <match src="event_paramater [53077,53098]" dest="event_paramater [20167,20188]"/>
  <match src="(: ( [34680,34681]" dest="(: ( [49261,49262]"/>
  <match src="): ) [46305,46306]" dest="): ) [15462,15463]"/>
  <match src="(: ( [89754,89755]" dest="(: ( [74387,74388]"/>
  <match src="]: ] [100743,100744]" dest="]: ] [39305,39306]"/>
  <match src="function: function [98699,98707]" dest="function: function [37261,37269]"/>
  <match src="{: { [86778,86779]" dest="{: { [27621,27622]"/>
  <match src="comment: /*     Copyright 2019 ZeroEx Intl.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [39265,39873]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [29109,29690]"/>
  <match src="=: = [36419,36420]" dest="=: = [51000,51001]"/>
  <match src="identifier: value [9912,9917]" dest="identifier: value [10497,10502]"/>
  <match src="identifier: candidate [103436,103445]" dest="identifier: candidate [41998,42007]"/>
  <match src="): ) [55136,55137]" dest="): ) [22226,22227]"/>
  <match src="identifier: Account [86673,86680]" dest="identifier: Account [27516,27523]"/>
  <match src="call_argument [99723,99729]" dest="call_argument [38285,38291]"/>
  <match src="(: ( [100651,100652]" dest="(: ( [39213,39214]"/>
  <match src="primitive_type [3765,3772]" dest="primitive_type [4344,4351]"/>
  <match src="public: public [93138,93144]" dest="public: public [31702,31708]"/>
  <match src="identifier: pow [8751,8754]" dest="identifier: pow [9336,9339]"/>
  <match src="call_expression [10561,10579]" dest="call_expression [11146,11164]"/>
  <match src="variable_declaration [72865,72884]" dest="variable_declaration [65729,65746]"/>
  <match src="type_name [88053,88086]" dest="type_name [28896,28929]"/>
  <match src="type_name [9003,9010]" dest="type_name [9588,9595]"/>
  <match src="primitive_type [54412,54416]" dest="primitive_type [21502,21506]"/>
  <match src="=: = [29395,29396]" dest="=: = [43976,43977]"/>
  <match src="identifier: value [8967,8972]" dest="identifier: value [9552,9557]"/>
  <match src="uint256: uint256 [38061,38068]" dest="uint256: uint256 [52642,52649]"/>
  <match src=".: . [105793,105794]" dest=".: . [67861,67862]"/>
  <match src="type_name [54224,54228]" dest="type_name [21314,21318]"/>
  <match src="}: } [8533,8534]" dest="}: } [9118,9119]"/>
  <match src="state_mutability [53307,53311]" dest="state_mutability [20397,20401]"/>
  <match src=".: . [81463,81464]" dest=".: . [71211,71212]"/>
  <match src="bool: bool [31542,31546]" dest="bool: bool [46123,46127]"/>
  <match src="identifier: add [100978,100981]" dest="identifier: add [39540,39543]"/>
  <match src="{: { [87671,87672]" dest="{: { [28514,28515]"/>
  <match src="member_expression [8515,8529]" dest="member_expression [9100,9114]"/>
  <match src="primitive_type [53385,53390]" dest="primitive_type [20475,20480]"/>
  <match src="identifier: newImplementation [90508,90525]" dest="identifier: newImplementation [75141,75158]"/>
  <match src="function_body [102585,102890]" dest="function_body [41147,41452]"/>
  <match src="): ) [54603,54604]" dest="): ) [21693,21694]"/>
  <match src=".: . [88130,88131]" dest=".: . [28973,28974]"/>
  <match src="type_name [10400,10404]" dest="type_name [10985,10989]"/>
  <match src="(: ( [94792,94793]" dest="(: ( [33356,33357]"/>
  <match src="parameter [93585,93592]" dest="parameter [32149,32156]"/>
  <match src="[: [ [96008,96009]" dest="[: [ [34572,34573]"/>
  <match src="}: } [92382,92383]" dest="}: } [30946,30947]"/>
  <match src="for: for [6811,6814]" dest="for: for [7396,7399]"/>
  <match src="member_expression [67495,67508]" dest="member_expression [79648,79661]"/>
  <match src="(: ( [8964,8965]" dest="(: ( [9549,9550]"/>
  <match src=".: . [80190,80191]" dest=".: . [76323,76324]"/>
  <match src="identifier: that [82780,82784]" dest="identifier: that [78750,78754]"/>
  <match src="identifier: sender [15007,15013]" dest="identifier: sender [24798,24804]"/>
  <match src="revert_statement [30427,30803]" dest="revert_statement [45008,45384]"/>
  <match src="identifier: BASE [7294,7298]" dest="identifier: BASE [7879,7883]"/>
  <match src="view: view [92314,92318]" dest="view: view [30878,30882]"/>
  <match src="variable_declaration_statement [90424,90459]" dest="variable_declaration_statement [75057,75092]"/>
  <match src="(: ( [37355,37356]" dest="(: ( [51936,51937]"/>
  <match src="call_expression [105814,105845]" dest="call_expression [67882,67913]"/>
  <match src="primitive_type [83222,83229]" dest="primitive_type [57099,57106]"/>
  <match src="contract_body [17363,24351]" dest="contract_body [59813,63884]"/>
  <match src=",: , [103674,103675]" dest=",: , [42236,42237]"/>
  <match src="primitive_type [72044,72051]" dest="primitive_type [58076,58083]"/>
  <match src="==: == [10443,10445]" dest="==: == [11028,11030]"/>
  <match src="address: address [52455,52462]" dest="address: address [60302,60309]"/>
  <match src="expression_statement [38809,38854]" dest="expression_statement [53390,53435]"/>
  <match src=".: . [99054,99055]" dest=".: . [37616,37617]"/>
  <match src=".: . [101553,101554]" dest=".: . [40115,40116]"/>
  <match src="&quot;: &quot; [79680,79681]" dest="&quot;: &quot; [68755,68756]"/>
  <match src="number_literal: 0 [81207,81208]" dest="number_literal: 0 [69985,69986]"/>
  <match src="new_expression [36421,36430]" dest="new_expression [51002,51011]"/>
  <match src="uint: uint [53513,53517]" dest="uint: uint [20603,20607]"/>
  <match src="call_argument [72044,72057]" dest="call_argument [58076,58089]"/>
  <match src="struct_member [6985,6999]" dest="struct_member [7570,7584]"/>
  <match src="primitive_type [47962,47969]" dest="primitive_type [17119,17126]"/>
  <match src="uint256: uint256 [8410,8417]" dest="uint256: uint256 [8995,9002]"/>
  <match src="uint256: uint256 [20705,20712]" dest="uint256: uint256 [18142,18149]"/>
  <match src="call_expression [8074,8101]" dest="call_expression [8659,8686]"/>
  <match src="identifier: amount [23084,23090]" dest="identifier: amount [58976,58982]"/>
  <match src="memory: memory [37048,37054]" dest="memory: memory [51629,51635]"/>
  <match src="type_name [5274,5281]" dest="type_name [5853,5860]"/>
  <match src="identifier: b [1473,1474]" dest="identifier: b [2052,2053]"/>
  <match src="function_definition [30829,31510]" dest="function_definition [45410,46091]"/>
  <match src="identifier: i [35630,35631]" dest="identifier: i [50211,50212]"/>
  <match src="identifier: mul [7448,7451]" dest="identifier: mul [8033,8036]"/>
  <match src="identifier: D256 [10630,10634]" dest="identifier: D256 [11215,11219]"/>
  <match src=",: , [10646,10647]" dest=",: , [11231,11232]"/>
  <match src="{: { [89791,89792]" dest="{: { [74424,74425]"/>
  <match src="): ) [82468,82469]" dest="): ) [55308,55309]"/>
  <match src="identifier: b [8609,8610]" dest="identifier: b [9194,9195]"/>
  <match src="identifier: account [51809,51816]" dest="identifier: account [54588,54595]"/>
  <match src="parameter [8024,8035]" dest="parameter [8609,8620]"/>
  <match src="emit: emit [83492,83496]" dest="emit: emit [78628,78632]"/>
  <match src="{: { [8483,8484]" dest="{: { [9068,9069]"/>
  <match src="call_argument [36431,36437]" dest="call_argument [51012,51018]"/>
  <match src=".: . [67502,67503]" dest=".: . [79655,79656]"/>
  <match src="view: view [92108,92112]" dest="view: view [30672,30676]"/>
  <match src="call_expression [73143,73167]" dest="call_expression [79662,79680]"/>
  <match src="&quot;: &quot; [24300,24301]" dest="&quot;: &quot; [62058,62059]"/>
  <match src="identifier: SafeMath [97838,97846]" dest="identifier: SafeMath [36400,36408]"/>
  <match src="call_expression [11356,11377]" dest="call_expression [11941,11962]"/>
  <match src="visibility [54015,54023]" dest="visibility [21105,21113]"/>
  <match src="type_name [81088,81095]" dest="type_name [60947,60954]"/>
  <match src="identifier: candidate [96427,96436]" dest="identifier: candidate [34991,35000]"/>
  <match src=",: , [31574,31575]" dest=",: , [46155,46156]"/>
  <match src="): ) [8343,8344]" dest="): ) [8928,8929]"/>
  <match src="call_expression [99884,99936]" dest="call_expression [38446,38498]"/>
  <match src="primitive_type [87913,87920]" dest="primitive_type [28756,28763]"/>
  <match src=".: . [11362,11363]" dest=".: . [11947,11948]"/>
  <match src="type_name [73212,73219]" dest="type_name [62099,62106]"/>
  <match src="}: } [45681,45682]" dest="}: } [14838,14839]"/>
  <match src="address: address [21604,21611]" dest="address: address [63374,63381]"/>
  <match src=".: . [102164,102165]" dest=".: . [40726,40727]"/>
  <match src="bytes32: bytes32 [32835,32842]" dest="bytes32: bytes32 [47416,47423]"/>
  <match src="identifier: D256 [9543,9547]" dest="identifier: D256 [10128,10132]"/>
  <match src="member_expression [100204,100235]" dest="member_expression [38766,38797]"/>
  <match src="expression_statement [38326,38366]" dest="expression_statement [52907,52947]"/>
  <match src="primitive_type [87051,87058]" dest="primitive_type [27894,27901]"/>
  <match src="constant: constant [43731,43739]" dest="constant: constant [12888,12896]"/>
  <match src="uint256: uint256 [22196,22203]" dest="uint256: uint256 [58696,58703]"/>
  <match src="function_body [2465,2562]" dest="function_body [3044,3141]"/>
  <match src="return_type_definition [63040,63057]" dest="return_type_definition [26899,26916]"/>
  <match src="contract_body [88231,88262]" dest="contract_body [29074,29105]"/>
  <match src="identifier: account [103264,103271]" dest="identifier: account [41826,41833]"/>
  <match src=".: . [99183,99184]" dest=".: . [37745,37746]"/>
  <match src="call_expression [82932,82961]" dest="call_expression [76370,76391]"/>
  <match src="identifier: _ [105966,105967]" dest="identifier: _ [68034,68035]"/>
  <match src="parameter [55366,55376]" dest="parameter [22456,22466]"/>
  <match src="identifier: amount [74779,74785]" dest="identifier: amount [54987,54993]"/>
  <match src="[: [ [96426,96427]" dest="[: [ [34990,34991]"/>
  <match src="binary_expression [10710,10732]" dest="binary_expression [11295,11317]"/>
  <match src="identifier: self [9930,9934]" dest="identifier: self [10515,10519]"/>
  <match src="function_body [99029,99071]" dest="function_body [37591,37633]"/>
  <match src="member_expression [102391,102404]" dest="member_expression [40953,40966]"/>
  <match src="primitive_type [53200,53204]" dest="primitive_type [20290,20294]"/>
  <match src="identifier: a [1531,1532]" dest="identifier: a [2110,2111]"/>
  <match src="{: { [37523,37524]" dest="{: { [52104,52105]"/>
  <match src="): ) [83542,83543]" dest="): ) [78661,78662]"/>
  <match src="parameter [55455,55462]" dest="parameter [22545,22552]"/>
  <match src="&quot;: &quot; [52327,52328]" dest="&quot;: &quot; [63794,63795]"/>
  <match src="call_argument [78030,78042]" dest="call_argument [62187,62199]"/>
  <match src="external: external [53731,53739]" dest="external: external [20821,20829]"/>
  <match src="return: return [3830,3836]" dest="return: return [4409,4415]"/>
  <match src="=: = [43749,43750]" dest="=: = [12906,12907]"/>
  <match src="call_struct_argument [7164,7172]" dest="call_struct_argument [7749,7757]"/>
  <match src="parameter [7576,7587]" dest="parameter [8161,8172]"/>
  <match src="identifier: file [33637,33641]" dest="identifier: file [48218,48222]"/>
  <match src="(: ( [49824,49825]" dest="(: ( [61982,61983]"/>
  <match src="(: ( [2870,2871]" dest="(: ( [3449,3450]"/>
  <match src="identifier: reason [99821,99827]" dest="identifier: reason [38383,38389]"/>
  <match src="call_argument [80853,80863]" dest="call_argument [70603,70613]"/>
  <match src="(: ( [31044,31045]" dest="(: ( [45625,45626]"/>
  <match src="primitive_type [103169,103176]" dest="primitive_type [41731,41738]"/>
  <match src="member_expression [72025,72062]" dest="member_expression [58057,58111]"/>
  <match src="identifier: spender [53116,53123]" dest="identifier: spender [20206,20213]"/>
  <match src="state_mutability [53499,53503]" dest="state_mutability [20589,20593]"/>
  <match src="primitive_type [69851,69858]" dest="primitive_type [64628,64635]"/>
  <match src="identifier: candidates [103425,103435]" dest="identifier: candidates [41987,41997]"/>
  <match src="{: { [105160,105161]" dest="{: { [67228,67229]"/>
  <match src="!=: != [21517,21519]" dest="!=: != [63279,63281]"/>
  <match src="parameter [92872,92879]" dest="parameter [31436,31443]"/>
  <match src="}: } [94816,94817]" dest="}: } [33380,33381]"/>
  <match src="++: ++ [36321,36323]" dest="++: ++ [50902,50904]"/>
  <match src="user_defined_type [8941,8945]" dest="user_defined_type [9526,9530]"/>
  <match src="public: public [96499,96505]" dest="public: public [35063,35069]"/>
  <match src="identifier: priceCumulative [65950,65965]" dest="identifier: endsAfter [78052,78061]"/>
  <match src="event: event [79750,79755]" dest="event: event [68825,68830]"/>
  <match src="type_name [88072,88085]" dest="type_name [28915,28928]"/>
  <match src="): ) [99935,99936]" dest="): ) [38497,38498]"/>
  <match src="address: address [55446,55453]" dest="address: address [22536,22543]"/>
  <match src="identifier: incrementApproveFor [103304,103323]" dest="identifier: incrementApproveFor [41866,41885]"/>
  <match src="): ) [91843,91844]" dest="): ) [30407,30408]"/>
  <match src="identifier: initialized [105924,105935]" dest="identifier: initialized [67992,68003]"/>
  <match src="primitive_type [72135,72139]" dest="primitive_type [79528,79532]"/>
  <match src="call_argument [98964,98970]" dest="call_argument [37526,37532]"/>
  <match src=",: , [80391,80392]" dest=",: , [69539,69540]"/>
  <match src=".: . [8716,8717]" dest=".: . [9301,9302]"/>
  <match src="uint256: uint256 [8170,8177]" dest="uint256: uint256 [8755,8762]"/>
  <match src="): ) [10872,10873]" dest="): ) [11457,11458]"/>
  <match src="): ) [35235,35236]" dest="): ) [49816,49817]"/>
  <match src="]: ] [101210,101211]" dest="]: ] [39772,39773]"/>
  <match src="uint256: uint256 [77908,77915]" dest="uint256: uint256 [76993,77000]"/>
  <match src="): ) [91624,91625]" dest="): ) [30188,30189]"/>
  <match src="member_expression [105587,105599]" dest="member_expression [67655,67667]"/>
  <match src="memory: memory [9548,9554]" dest="memory: memory [10133,10139]"/>
  <match src="return_type_definition [8456,8477]" dest="return_type_definition [9041,9062]"/>
  <match src="call_argument [21868,21874]" dest="call_argument [63866,63872]"/>
  <match src="call_argument [30154,30160]" dest="call_argument [44735,44741]"/>
  <match src="state_mutability [92529,92533]" dest="state_mutability [31093,31097]"/>
  <match src="function_body [83814,84003]" dest="function_body [58720,58860]"/>
  <match src="binary_expression [10561,10584]" dest="binary_expression [11146,11169]"/>
  <match src="}: } [8985,8986]" dest="}: } [9570,9571]"/>
  <match src="function: function [103699,103707]" dest="function: function [42261,42269]"/>
  <match src="identifier: candidate [96849,96858]" dest="identifier: candidate [35413,35422]"/>
  <match src="call_expression [81123,81158]" dest="call_expression [60973,60998]"/>
  <match src="identifier: _state [102454,102460]" dest="identifier: _state [41016,41022]"/>
  <match src="(: ( [104115,104116]" dest="(: ( [42677,42678]"/>
  <match src="call_argument [52185,52191]" dest="call_argument [63729,63735]"/>
  <match src="return: return [47436,47442]" dest="return: return [16593,16599]"/>
  <match src="update_expression [38505,38508]" dest="update_expression [53086,53089]"/>
  <match src="return: return [98328,98334]" dest="return: return [36890,36896]"/>
  <match src="primitive_type [38031,38036]" dest="primitive_type [52612,52617]"/>
  <match src="identifier: expiration [102433,102443]" dest="identifier: expiration [40995,41005]"/>
  <match src=",: , [33390,33391]" dest=",: , [47971,47972]"/>
  <match src="state_mutability [10523,10527]" dest="state_mutability [11108,11112]"/>
  <match src=",: , [80518,80519]" dest=",: , [70147,70148]"/>
  <match src="inheritance_specifier [105152,105159]" dest="inheritance_specifier [67220,67227]"/>
  <match src="visibility [37010,37017]" dest="visibility [51591,51598]"/>
  <match src="): ) [7081,7082]" dest="): ) [7666,7667]"/>
  <match src="(: ( [92977,92978]" dest="(: ( [31541,31542]"/>
  <match src="expression_statement [82354,82443]" dest="expression_statement [77760,77793]"/>
  <match src="assembly_statement [86006,86047]" dest="assembly_statement [72812,72853]"/>
  <match src="visibility [53821,53829]" dest="visibility [20911,20919]"/>
  <match src="identifier: reason [31899,31905]" dest="identifier: reason [46480,46486]"/>
  <match src="return: return [45645,45651]" dest="return: return [14802,14808]"/>
  <match src="(: ( [65684,65685]" dest="(: ( [66519,66520]"/>
  <match src="{: { [7841,7842]" dest="{: { [8426,8427]"/>
  <match src="]: ] [103654,103655]" dest="]: ] [42216,42217]"/>
  <match src=",: , [67190,67191]" dest=",: , [65833,65834]"/>
  <match src="identifier: sender [79521,79527]" dest="identifier: sender [62645,62651]"/>
  <match src="(: ( [82655,82656]" dest="(: ( [58302,58303]"/>
  <match src=".: . [103633,103634]" dest=".: . [42195,42196]"/>
  <match src="{: { [47866,47867]" dest="{: { [17023,17024]"/>
  <match src="type_name [65643,65655]" dest="type_name [19457,19469]"/>
  <match src="return_type_definition [94653,94670]" dest="return_type_definition [33217,33234]"/>
  <match src="visibility [50852,50858]" dest="visibility [26011,26017]"/>
  <match src="primitive_type [101072,101079]" dest="primitive_type [39634,39641]"/>
  <match src="primitive_type [54463,54467]" dest="primitive_type [21553,21557]"/>
  <match src="identifier: Decimal [47744,47751]" dest="identifier: Decimal [16901,16908]"/>
  <match src="parameter [96807,96811]" dest="parameter [35371,35375]"/>
  <match src="identifier: msg [12521,12524]" dest="identifier: msg [63611,63614]"/>
  <match src="visibility [13884,13892]" dest="visibility [23675,23683]"/>
  <match src="revert: revert [34405,34411]" dest="revert: revert [48986,48992]"/>
  <match src="parameter [55046,55050]" dest="parameter [22136,22140]"/>
  <match src="parameter [54136,54145]" dest="parameter [21226,21235]"/>
  <match src="(: ( [76815,76816]" dest="(: ( [60471,60472]"/>
  <match src=".: . [8084,8085]" dest=".: . [8669,8670]"/>
  <match src="return_statement [5294,5339]" dest="return_statement [5873,5918]"/>
  <match src="call_argument [49999,50003]" dest="call_argument [61896,61900]"/>
  <match src="identifier: candidate [103606,103615]" dest="identifier: candidate [42168,42177]"/>
  <match src="internal: internal [5928,5936]" dest="internal: internal [6507,6515]"/>
  <match src="&quot;: &quot; [80615,80616]" dest="&quot;: &quot; [69775,69776]"/>
  <match src="call_argument [38081,38086]" dest="call_argument [52662,52667]"/>
  <match src="): ) [84508,84509]" dest="): ) [76979,76980]"/>
  <match src="visibility [1476,1484]" dest="visibility [2055,2063]"/>
  <match src="type_name [4449,4455]" dest="type_name [5028,5034]"/>
  <match src="string [80581,80616]" dest="string [69738,69776]"/>
  <match src="identifier: a [1918,1919]" dest="identifier: a [2497,2498]"/>
  <match src="variable_declaration [35658,35672]" dest="variable_declaration [50239,50253]"/>
  <match src="identifier: self [8777,8781]" dest="identifier: self [9362,9366]"/>
  <match src="comment: // 10,000 USDC [44122,44136]" dest="comment: // 10,000 USDC [13279,13293]"/>
  <match src=".: . [81256,81257]" dest=".: . [70021,70022]"/>
  <match src="identifier: totalCoupons [92836,92848]" dest="identifier: totalCoupons [31400,31412]"/>
  <match src="visibility [99129,99137]" dest="visibility [37691,37699]"/>
  <match src="return: return [92892,92898]" dest="return: return [31456,31462]"/>
  <match src="state_mutability [10672,10676]" dest="state_mutability [11257,11261]"/>
  <match src="identifier: input [36047,36052]" dest="identifier: input [50628,50633]"/>
  <match src="): ) [80979,80980]" dest="): ) [79452,79453]"/>
  <match src="primitive_type [80152,80159]" dest="primitive_type [69328,69335]"/>
  <match src="member_expression [101172,101187]" dest="member_expression [39734,39749]"/>
  <match src="expression_statement [100930,100990]" dest="expression_statement [39492,39552]"/>
  <match src="): ) [36833,36834]" dest="): ) [51414,51415]"/>
  <match src="binary_expression [4595,4600]" dest="binary_expression [5174,5179]"/>
  <match src="]: ] [102478,102479]" dest="]: ] [41040,41041]"/>
  <match src="function_body [92235,92283]" dest="function_body [30799,30847]"/>
  <match src="identifier: payloadA [30703,30711]" dest="identifier: payloadA [45284,45292]"/>
  <match src=".: . [30484,30485]" dest=".: . [45065,45066]"/>
  <match src="identifier: file [32843,32847]" dest="identifier: file [47424,47428]"/>
  <match src=".: . [100936,100937]" dest=".: . [39498,39499]"/>
  <match src="member_expression [103418,103458]" dest="member_expression [41980,42020]"/>
  <match src="(: ( [102098,102099]" dest="(: ( [40660,40661]"/>
  <match src="function: function [92499,92507]" dest="function: function [31063,31071]"/>
  <match src="visibility [80448,80456]" dest="visibility [69596,69604]"/>
  <match src="identifier: DOMAIN_SEPARATOR [53862,53878]" dest="identifier: DOMAIN_SEPARATOR [20952,20968]"/>
  <match src="identifier: currentLock [104329,104340]" dest="identifier: currentLock [42891,42902]"/>
  <match src="comment: // ', ' [29601,29608]" dest="comment: // ', ' [44182,44189]"/>
  <match src="primitive_type [89852,89856]" dest="primitive_type [74485,74489]"/>
  <match src="function: function [62942,62950]" dest="function: function [26801,26809]"/>
  <match src="false [98086,98091]" dest="false [36648,36653]"/>
  <match src="member_expression [101381,101395]" dest="member_expression [39943,39957]"/>
  <match src=",: , [53098,53099]" dest=",: , [20188,20189]"/>
  <match src="uint256: uint256 [76559,76566]" dest="uint256: uint256 [58255,58262]"/>
  <match src=".: . [101370,101371]" dest=".: . [39932,39933]"/>
  <match src="&lt;=: &lt;= [95786,95788]" dest="&lt;=: &lt;= [34350,34352]"/>
  <match src="bytes: bytes [37229,37234]" dest="bytes: bytes [51810,51815]"/>
  <match src="identifier: reason [9608,9614]" dest="identifier: reason [10193,10199]"/>
  <match src="public: public [92522,92528]" dest="public: public [31086,31092]"/>
  <match src="call_argument [100510,100516]" dest="call_argument [39072,39078]"/>
  <match src="using_directive [91194,91225]" dest="using_directive [29758,29789]"/>
  <match src="identifier: b [8089,8090]" dest="identifier: b [8674,8675]"/>
  <match src="function: function [47116,47124]" dest="function: function [16273,16281]"/>
  <match src="): ) [36831,36832]" dest="): ) [51412,51413]"/>
  <match src="{: { [95634,95635]" dest="{: { [34198,34199]"/>
  <match src="identifier: getPoolExitLockupEpochs [47125,47148]" dest="identifier: getPoolExitLockupEpochs [16282,16305]"/>
  <match src="): ) [102282,102283]" dest="): ) [40844,40845]"/>
  <match src="return_statement [47314,47339]" dest="return_statement [16471,16496]"/>
  <match src="uint256: uint256 [7969,7976]" dest="uint256: uint256 [8554,8561]"/>
  <match src="public: public [92414,92420]" dest="public: public [30978,30984]"/>
  <match src="parameter [5951,5958]" dest="parameter [6530,6537]"/>
  <match src="identifier: to [54505,54507]" dest="identifier: to [21595,21597]"/>
  <match src="primitive_type [98062,98066]" dest="primitive_type [36624,36628]"/>
  <match src="identifier: msg [81624,81627]" dest="identifier: msg [71286,71289]"/>
  <match src="call_expression [33821,34108]" dest="call_expression [48402,48689]"/>
  <match src="): ) [94738,94739]" dest="): ) [33302,33303]"/>
  <match src="call_argument [99921,99927]" dest="call_argument [38483,38489]"/>
  <match src="address: address [103727,103734]" dest="address: address [42289,42296]"/>
  <match src="primitive_type [85513,85517]" dest="primitive_type [72319,72323]"/>
  <match src="call_expression [76903,76938]" dest="call_expression [60770,60801]"/>
  <match src="): ) [36581,36582]" dest="): ) [51162,51163]"/>
  <match src="uint256: uint256 [80009,80016]" dest="uint256: uint256 [76143,76150]"/>
  <match src="parameter [100382,100396]" dest="parameter [38944,38958]"/>
  <match src="binary_expression [102672,102703]" dest="binary_expression [41234,41265]"/>
  <match src="identifier: candidate [104508,104517]" dest="identifier: candidate [43070,43079]"/>
  <match src="call_argument [38222,38224]" dest="call_argument [52803,52805]"/>
  <match src="type_name [54100,54104]" dest="type_name [21190,21194]"/>
  <match src="public: public [94392,94398]" dest="public: public [32956,32962]"/>
  <match src="): ) [47832,47833]" dest="): ) [16989,16990]"/>
  <match src="(: ( [8914,8915]" dest="(: ( [9499,9500]"/>
  <match src="type_name [93296,93303]" dest="type_name [31860,31867]"/>
  <match src="function_definition [54809,54918]" dest="function_definition [21899,22008]"/>
  <match src="number_literal: 2 [37605,37606]" dest="number_literal: 2 [52186,52187]"/>
  <match src="memory: memory [98883,98889]" dest="memory: memory [37445,37451]"/>
  <match src=",: , [80074,80075]" dest=",: , [76201,76202]"/>
  <match src="): ) [82342,82343]" dest="): ) [62252,62253]"/>
  <match src="(: ( [82917,82918]" dest="(: ( [78141,78142]"/>
  <match src="]: ] [37301,37302]" dest="]: ] [51882,51883]"/>
  <match src="call_argument [98668,98674]" dest="call_argument [37230,37236]"/>
  <match src="variable_declaration_statement [36260,36275]" dest="variable_declaration_statement [50841,50856]"/>
  <match src="function_definition [53456,53519]" dest="function_definition [20546,20609]"/>
  <match src="): ) [62927,62928]" dest="): ) [26786,26787]"/>
  <match src="identifier: that [65187,65191]" dest="identifier: that [79251,79255]"/>
  <match src="primitive_type [5889,5896]" dest="primitive_type [6468,6475]"/>
  <match src="}: } [46731,46732]" dest="}: } [15888,15889]"/>
  <match src="event_paramater [54255,54277]" dest="event_paramater [21345,21367]"/>
  <match src="parameter [31542,31551]" dest="parameter [46123,46132]"/>
  <match src="identifier: stringify [37953,37962]" dest="identifier: stringify [52534,52543]"/>
  <match src="string: string [91436,91442]" dest="string: string [30000,30006]"/>
  <match src="type_name [102981,102988]" dest="type_name [41543,41550]"/>
  <match src="identifier: account [86037,86044]" dest="identifier: account [72843,72850]"/>
  <match src="variable_declaration_statement [97100,97135]" dest="variable_declaration_statement [35664,35699]"/>
  <match src="]: ] [100227,100228]" dest="]: ] [38789,38790]"/>
  <match src="): ) [94669,94670]" dest="): ) [33233,33234]"/>
  <match src="): ) [80910,80911]" dest="): ) [70621,70622]"/>
  <match src="call_argument [83348,83358]" dest="call_argument [62745,62755]"/>
  <match src="array_access [37339,37348]" dest="array_access [51920,51929]"/>
  <match src="call_argument [26884,26917]" dest="call_argument [76609,76638]"/>
  <match src="primitive_type [79790,79797]" dest="primitive_type [68865,68872]"/>
  <match src="parameter [23642,23656]" dest="parameter [62900,62914]"/>
  <match src="view: view [91990,91994]" dest="view: view [30554,30558]"/>
  <match src="pure: pure [33720,33724]" dest="pure: pure [48301,48305]"/>
  <match src="type_cast_expression [37310,37327]" dest="type_cast_expression [51891,51908]"/>
  <match src="false: false [98086,98091]" dest="false: false [36648,36653]"/>
  <match src="}: } [101430,101431]" dest="}: } [39992,39993]"/>
  <match src="call_expression [7432,7460]" dest="call_expression [8017,8045]"/>
  <match src="(: ( [1954,1955]" dest="(: ( [2533,2534]"/>
  <match src="(: ( [2455,2456]" dest="(: ( [3034,3035]"/>
  <match src="primitive_type [94092,94099]" dest="primitive_type [32656,32663]"/>
  <match src="identifier: value [80574,80579]" dest="identifier: value [69731,69736]"/>
  <match src="variable_declaration [36232,36241]" dest="variable_declaration [50813,50822]"/>
  <match src="address: address [96068,96075]" dest="address: address [34632,34639]"/>
  <match src="call_argument [21817,21823]" dest="call_argument [54733,54739]"/>
  <match src="type_name [96656,96663]" dest="type_name [35220,35227]"/>
  <match src="visibility [44847,44854]" dest="visibility [14004,14011]"/>
  <match src="variable_declaration_statement [38572,38594]" dest="variable_declaration_statement [53153,53175]"/>
  <match src="primitive_type [97882,97889]" dest="primitive_type [36444,36451]"/>
  <match src="&quot;: &quot; [83983,83984]" dest="&quot;: &quot; [58205,58206]"/>
  <match src="emit: emit [80951,80955]" dest="emit: emit [79419,79423]"/>
  <match src="variable_declaration_statement [37585,37607]" dest="variable_declaration_statement [52166,52188]"/>
  <match src="): ) [10170,10171]" dest="): ) [10755,10756]"/>
  <match src=".: . [103078,103079]" dest=".: . [41640,41641]"/>
  <match src="(: ( [32664,32665]" dest="(: ( [47245,47246]"/>
  <match src=",: , [23786,23787]" dest=",: , [62965,62966]"/>
  <match src="bool: bool [13543,13547]" dest="bool: bool [23334,23338]"/>
  <match src="type_name [47174,47181]" dest="type_name [16331,16338]"/>
  <match src="parameter [65643,65662]" dest="parameter [19457,19486]"/>
  <match src="if: if [33741,33743]" dest="if: if [48322,48324]"/>
  <match src="memory: memory [99287,99293]" dest="memory: memory [37849,37855]"/>
  <match src="member_expression [102238,102251]" dest="member_expression [40800,40813]"/>
  <match src="identifier: sender [12525,12531]" dest="identifier: sender [63615,63621]"/>
  <match src="call_argument [45795,45909]" dest="call_argument [14952,15066]"/>
  <match src="): ) [7459,7460]" dest="): ) [8044,8045]"/>
  <match src="identifier: from [97898,97902]" dest="identifier: from [36460,36464]"/>
  <match src="identifier: totalRewardedWithPhantom [81096,81120]" dest="identifier: couponsForEpoch [60955,60970]"/>
  <match src="parameter [80433,80446]" dest="parameter [69581,69594]"/>
  <match src="(: ( [10399,10400]" dest="(: ( [10984,10985]"/>
  <match src="struct_member [87997,88013]" dest="struct_member [28840,28856]"/>
  <match src="function_definition [65600,65849]" dest="function_definition [66255,66607]"/>
  <match src="parameter [3765,3774]" dest="parameter [4344,4353]"/>
  <match src="identifier: Constants [94599,94608]" dest="identifier: Constants [33163,33172]"/>
  <match src="primitive_type [79729,79736]" dest="primitive_type [68804,68811]"/>
  <match src="type_name [45157,45164]" dest="type_name [14314,14321]"/>
  <match src="(: ( [72051,72052]" dest="(: ( [58083,58084]"/>
  <match src="expression_statement [103072,103117]" dest="expression_statement [41634,41679]"/>
  <match src="{: { [68238,68239]" dest="{: { [61652,61653]"/>
  <match src="type_name [30921,30928]" dest="type_name [45502,45509]"/>
  <match src="identifier: payloadA [31314,31322]" dest="identifier: payloadA [45895,45903]"/>
  <match src="parameter [53969,53976]" dest="parameter [21059,21066]"/>
  <match src="variable_declaration [38482,38491]" dest="variable_declaration [53063,53072]"/>
  <match src="(: ( [105842,105843]" dest="(: ( [67910,67911]"/>
  <match src="identifier: value [53724,53729]" dest="identifier: value [20814,20819]"/>
  <match src="indexed: indexed [79773,79780]" dest="indexed: indexed [68848,68855]"/>
  <match src=".: . [49124,49125]" dest=".: . [54880,54881]"/>
  <match src="primitive_type [38482,38489]" dest="primitive_type [53063,53070]"/>
  <match src="(: ( [77814,77815]" dest="(: ( [57746,57747]"/>
  <match src="identifier: a [3773,3774]" dest="identifier: a [4352,4353]"/>
  <match src="): ) [81657,81658]" dest="): ) [71328,71329]"/>
  <match src="identifier: reason [33966,33972]" dest="identifier: reason [48547,48553]"/>
  <match src="bytes: bytes [37203,37208]" dest="bytes: bytes [51784,51789]"/>
  <match src="identifier: _state [100536,100542]" dest="identifier: _state [39098,39104]"/>
  <match src="type_name [67381,67388]" dest="type_name [70485,70492]"/>
  <match src="&lt;: &lt; [9020,9021]" dest="&lt;: &lt; [9605,9606]"/>
  <match src="return: return [92779,92785]" dest="return: return [31343,31349]"/>
  <match src="return: return [3268,3274]" dest="return: return [3847,3853]"/>
  <match src="=: = [29732,29733]" dest="=: = [44313,44314]"/>
  <match src="identifier: _state [99884,99890]" dest="identifier: _state [38446,38452]"/>
  <match src="primitive_type [29980,29986]" dest="primitive_type [44561,44567]"/>
  <match src="identifier: result [37339,37345]" dest="identifier: result [51920,51926]"/>
  <match src="type_name [87157,87164]" dest="type_name [28000,28007]"/>
  <match src="return_type_definition [62968,63003]" dest="return_type_definition [26827,26862]"/>
  <match src="member_expression [83348,83358]" dest="member_expression [62745,62755]"/>
  <match src="): ) [46732,46733]" dest="): ) [15889,15890]"/>
  <match src="identifier: payloadA [32891,32899]" dest="identifier: payloadA [47472,47480]"/>
  <match src="identifier: EpochStrategy [94443,94456]" dest="identifier: EpochStrategy [33007,33020]"/>
  <match src="identifier: must [32131,32135]" dest="identifier: must [46712,46716]"/>
  <match src="identifier: candidate [96624,96633]" dest="identifier: candidate [35188,35197]"/>
  <match src="(: ( [45740,45741]" dest="(: ( [14897,14898]"/>
  <match src="identifier: sender [80675,80681]" dest="identifier: sender [69808,69814]"/>
  <match src="call_expression [84249,84358]" dest="call_expression [76343,76457]"/>
  <match src="function_body [32274,32783]" dest="function_body [46855,47364]"/>
  <match src="parameter [24905,24919]" dest="parameter [18200,18214]"/>
  <match src="identifier: self [10218,10222]" dest="identifier: self [10803,10807]"/>
  <match src="type_name [93585,93592]" dest="type_name [32149,32156]"/>
  <match src=",: , [10497,10498]" dest=",: , [11082,11083]"/>
  <match src="primitive_type [30337,30344]" dest="primitive_type [44918,44925]"/>
  <match src="function_definition [55352,55387]" dest="function_definition [22442,22477]"/>
  <match src="primitive_type [36984,36991]" dest="primitive_type [51565,51572]"/>
  <match src="{: { [45795,45796]" dest="{: { [14952,14953]"/>
  <match src="type_name [10648,10652]" dest="type_name [11233,11237]"/>
  <match src="identifier: D256 [65651,65655]" dest="identifier: D256 [19465,19469]"/>
  <match src="type_name [7121,7125]" dest="type_name [7706,7710]"/>
  <match src="identifier: epochs [101292,101298]" dest="identifier: epochs [39854,39860]"/>
  <match src="(: ( [47525,47526]" dest="(: ( [16682,16683]"/>
  <match src="private: private [17434,17441]" dest="private: private [59052,59059]"/>
  <match src=",: , [82298,82299]" dest=",: , [62238,62239]"/>
  <match src="if: if [32285,32287]" dest="if: if [46866,46868]"/>
  <match src="member_expression [101544,101576]" dest="member_expression [40106,40138]"/>
  <match src="{: { [92552,92553]" dest="{: { [31116,31117]"/>
  <match src="expression_statement [101356,101424]" dest="expression_statement [39918,39986]"/>
  <match src="uint256: uint256 [2826,2833]" dest="uint256: uint256 [3405,3412]"/>
  <match src="type_name [67107,67119]" dest="type_name [66297,66309]"/>
  <match src="(: ( [80784,80785]" dest="(: ( [69653,69654]"/>
  <match src="}: } [84002,84003]" dest="}: } [58859,58860]"/>
  <match src="array_access [99884,99908]" dest="array_access [38446,38470]"/>
  <match src="call_expression [80825,80911]" dest="call_expression [70578,70622]"/>
  <match src="external: external [53298,53306]" dest="external: external [20388,20396]"/>
  <match src="string_literal [3219,3254]" dest="string_literal [3798,3833]"/>
  <match src="type_name [51995,52002]" dest="type_name [54836,54843]"/>
  <match src="event_paramater [53125,53135]" dest="event_paramater [20215,20225]"/>
  <match src="identifier: coupons [101263,101270]" dest="identifier: coupons [39825,39832]"/>
  <match src="member_expression [102391,102430]" dest="member_expression [40953,40992]"/>
  <match src="return: return [92246,92252]" dest="return: return [30810,30816]"/>
  <match src="return_statement [102720,102727]" dest="return_statement [41282,41289]"/>
  <match src="identifier: account [24949,24956]" dest="identifier: account [55177,55184]"/>
  <match src="call_argument [30739,30745]" dest="call_argument [45320,45326]"/>
  <match src="if_statement [34379,34948]" dest="if_statement [48960,49529]"/>
  <match src="type_name [91180,91187]" dest="type_name [29744,29751]"/>
  <match src="identifier: _state [88252,88258]" dest="identifier: _state [29095,29101]"/>
  <match src="return: return [8053,8059]" dest="return: return [8638,8644]"/>
  <match src="address: address [98242,98249]" dest="address: address [36804,36811]"/>
  <match src="call_expression [93957,93964]" dest="call_expression [32521,32528]"/>
  <match src="function_definition [37944,38923]" dest="function_definition [52525,53504]"/>
  <match src="identifier: epochs [102845,102851]" dest="identifier: epochs [41407,41413]"/>
  <match src="parenthesized_expression [31706,32075]" dest="parenthesized_expression [46287,46656]"/>
  <match src="binary_expression [104319,104340]" dest="binary_expression [42881,42902]"/>
  <match src="external: external [13525,13533]" dest="external: external [23316,23324]"/>
  <match src="returns: returns [13534,13541]" dest="returns: returns [23325,23332]"/>
  <match src="): ) [90261,90262]" dest="): ) [74894,74895]"/>
  <match src="call_argument [80322,80327]" dest="call_argument [69497,69502]"/>
  <match src="parameter [92226,92233]" dest="parameter [30790,30797]"/>
  <match src="-: - [38819,38820]" dest="-: - [53400,53401]"/>
  <match src="?: ? [11640,11641]" dest="?: ? [12225,12226]"/>
  <match src="string [80872,80910]" dest="string [78991,79005]"/>
  <match src="member_expression [92355,92370]" dest="member_expression [30919,30934]"/>
  <match src="library: library [6773,6780]" dest="library: library [7358,7365]"/>
  <match src="&quot;: &quot; [82880,82881]" dest="&quot;: &quot; [78839,78840]"/>
  <match src="primitive_type [87732,87739]" dest="primitive_type [28575,28582]"/>
  <match src="primitive_type [11324,11331]" dest="primitive_type [11909,11916]"/>
  <match src="visibility [89782,89790]" dest="visibility [74415,74423]"/>
  <match src="=: = [29637,29638]" dest="=: = [44218,44219]"/>
  <match src=",: , [104072,104073]" dest=",: , [42634,42635]"/>
  <match src="string_literal [84490,84498]" dest="string_literal [76962,76969]"/>
  <match src="): ) [27179,27180]" dest="): ) [77465,77466]"/>
  <match src="identifier: candidate [103332,103341]" dest="identifier: candidate [41894,41903]"/>
  <match src="if_statement [33001,33570]" dest="if_statement [47582,48151]"/>
  <match src="event_paramater [53180,53198]" dest="event_paramater [20270,20288]"/>
  <match src="identifier: b [9942,9943]" dest="identifier: b [10527,10528]"/>
  <match src="type_name [86789,86796]" dest="type_name [27632,27639]"/>
  <match src="primitive_type [96520,96527]" dest="primitive_type [35084,35091]"/>
  <match src="call_argument [1563,1592]" dest="call_argument [2142,2171]"/>
  <match src=",: , [15524,15525]" dest=",: , [25315,25316]"/>
  <match src="type_name [70086,70093]" dest="type_name [64730,64737]"/>
  <match src="type_name [98560,98567]" dest="type_name [37122,37129]"/>
  <match src="event_definition [79690,79744]" dest="event_definition [68765,68819]"/>
  <match src="function: function [53761,53769]" dest="function: function [20851,20859]"/>
  <match src="type_name [47051,47058]" dest="type_name [16208,16215]"/>
  <match src="array_access [103229,103257]" dest="array_access [41791,41819]"/>
  <match src="): ) [99213,99214]" dest="): ) [37775,37776]"/>
  <match src="expression_statement [80537,80618]" dest="expression_statement [69694,69778]"/>
  <match src="identifier: epochTime [94380,94389]" dest="identifier: epochTime [32944,32953]"/>
  <match src="call_argument [32587,32595]" dest="call_argument [47168,47176]"/>
  <match src="function_definition [47496,47640]" dest="function_definition [16653,16797]"/>
  <match src="uint256: uint256 [70111,70118]" dest="uint256: uint256 [64811,64818]"/>
  <match src="call_expression [33449,33468]" dest="call_expression [48030,48049]"/>
  <match src="uint256: uint256 [2871,2878]" dest="uint256: uint256 [3450,3457]"/>
  <match src="identifier: PERMIT_TYPEHASH [53928,53943]" dest="identifier: PERMIT_TYPEHASH [21018,21033]"/>
  <match src="call_argument [90290,90347]" dest="call_argument [74923,74980]"/>
  <match src="primitive_type [45984,45991]" dest="primitive_type [15141,15148]"/>
  <match src="(: ( [94543,94544]" dest="(: ( [33107,33108]"/>
  <match src="=: = [83096,83097]" dest="=: = [61071,61072]"/>
  <match src="variable_declaration [83060,83076]" dest="variable_declaration [61010,61032]"/>
  <match src="identifier: burn [50831,50835]" dest="identifier: burn [25990,25994]"/>
  <match src="uint: uint [55156,55160]" dest="uint: uint [22246,22250]"/>
  <match src="parameter [5889,5898]" dest="parameter [6468,6477]"/>
  <match src="yul_identifier [35824,35830]" dest="yul_identifier [50405,50411]"/>
  <match src=",: , [54145,54146]" dest=",: , [21235,21236]"/>
  <match src="primitive_type [4500,4507]" dest="primitive_type [5079,5086]"/>
  <match src="string [50018,50032]" dest="string [55237,55281]"/>
  <match src="external: external [98044,98052]" dest="external: external [36606,36614]"/>
  <match src="contract_declaration [88216,88262]" dest="contract_declaration [29059,29105]"/>
  <match src="identifier: account [28106,28113]" dest="identifier: account [54827,54834]"/>
  <match src="): ) [9299,9300]" dest="): ) [9884,9885]"/>
  <match src="): ) [10806,10807]" dest="): ) [11391,11392]"/>
  <match src="address: address [93258,93265]" dest="address: address [31822,31829]"/>
  <match src="parameter [1910,1919]" dest="parameter [2489,2498]"/>
  <match src="(: ( [21430,21431]" dest="(: ( [63177,63178]"/>
  <match src="binary_expression [35366,35371]" dest="binary_expression [49947,49952]"/>
  <match src="(: ( [99017,99018]" dest="(: ( [37579,37580]"/>
  <match src="call_argument [8089,8100]" dest="call_argument [8674,8685]"/>
  <match src="function_definition [63010,63058]" dest="function_definition [26869,26917]"/>
  <match src="function: function [9520,9528]" dest="function: function [10105,10113]"/>
  <match src="byte: byte [39210,39214]" dest="byte: byte [53791,53795]"/>
  <match src="uint256: uint256 [81169,81176]" dest="uint256: uint256 [61142,61149]"/>
  <match src="variable_declaration_statement [38190,38226]" dest="variable_declaration_statement [52771,52807]"/>
  <match src=".: . [103454,103455]" dest=".: . [42016,42017]"/>
  <match src="identifier: z [37739,37740]" dest="identifier: z [52320,52321]"/>
  <match src="(: ( [95435,95436]" dest="(: ( [33999,34000]"/>
  <match src="comment: // ============ Constants ============ [29321,29359]" dest="comment: // ============ Constants ============ [43902,43940]"/>
  <match src=".: . [81282,81283]" dest=".: . [70007,70008]"/>
  <match src="): ) [99394,99395]" dest="): ) [37956,37957]"/>
  <match src="{: { [97089,97090]" dest="{: { [35653,35654]"/>
  <match src="identifier: coupons [102412,102419]" dest="identifier: coupons [40974,40981]"/>
  <match src="uint: uint [54979,54983]" dest="uint: uint [22069,22073]"/>
  <match src="): ) [30767,30768]" dest="): ) [45348,45349]"/>
  <match src="identifier: compareTo [10561,10570]" dest="identifier: compareTo [11146,11155]"/>
  <match src="constant: constant [79659,79667]" dest="constant: constant [68731,68739]"/>
  <match src=".: . [94347,94348]" dest=".: . [32911,32912]"/>
  <match src="}: } [90536,90537]" dest="}: } [75169,75170]"/>
  <match src="): ) [36437,36438]" dest="): ) [51018,51019]"/>
  <match src="}: } [9957,9958]" dest="}: } [10542,10543]"/>
  <match src="parameter [98028,98042]" dest="parameter [36590,36604]"/>
  <match src="primitive_type [22196,22203]" dest="primitive_type [58696,58703]"/>
  <match src="identifier: offset [45810,45816]" dest="identifier: offset [14967,14973]"/>
  <match src="(: ( [27622,27623]" dest="(: ( [60182,60183]"/>
  <match src="member_expression [30481,30497]" dest="member_expression [45062,45078]"/>
  <match src="): ) [37376,37377]" dest="): ) [51957,51958]"/>
  <match src="}: } [46740,46741]" dest="}: } [15897,15898]"/>
  <match src="byte: byte [39110,39114]" dest="byte: byte [53691,53695]"/>
  <match src=".: . [100873,100874]" dest=".: . [39435,39436]"/>
  <match src="(: ( [8023,8024]" dest="(: ( [8608,8609]"/>
  <match src="type_name [30289,30296]" dest="type_name [44870,44877]"/>
  <match src="type_name [53444,53448]" dest="type_name [20534,20538]"/>
  <match src="state_mutability [92745,92749]" dest="state_mutability [31309,31313]"/>
  <match src="block_statement [33012,33570]" dest="block_statement [47593,48151]"/>
  <match src="[: [ [100455,100456]" dest="[: [ [39017,39018]"/>
  <match src="identifier: strategy [94793,94801]" dest="identifier: strategy [33357,33365]"/>
  <match src="call_argument [23004,23040]" dest="call_argument [55450,55494]"/>
  <match src="parameter [34288,34304]" dest="parameter [48869,48885]"/>
  <match src="type_name [98141,98148]" dest="type_name [36703,36710]"/>
  <match src="}: } [32775,32776]" dest="}: } [47356,47357]"/>
  <match src="user_defined_type [9660,9664]" dest="user_defined_type [10245,10249]"/>
  <match src="uint256: uint256 [95720,95727]" dest="uint256: uint256 [34284,34291]"/>
  <match src="constant: constant [44922,44930]" dest="constant: constant [14079,14087]"/>
  <match src=".: . [98471,98472]" dest=".: . [37033,37034]"/>
  <match src="memory: memory [9575,9581]" dest="memory: memory [10160,10166]"/>
  <match src="type_name [55455,55462]" dest="type_name [22545,22552]"/>
  <match src="(: ( [96718,96719]" dest="(: ( [35282,35283]"/>
  <match src="parameter [11232,11249]" dest="parameter [11817,11834]"/>
  <match src="): ) [91528,91529]" dest="): ) [30092,30093]"/>
  <match src="identifier: value [80683,80688]" dest="identifier: value [69816,69821]"/>
  <match src="expression_statement [100824,100920]" dest="expression_statement [39386,39482]"/>
  <match src="call_expression [81784,81811]" dest="call_expression [70512,70539]"/>
  <match src="address: address [96204,96211]" dest="address: address [34768,34775]"/>
  <match src="type_name [54979,54983]" dest="type_name [22069,22073]"/>
  <match src="): ) [8267,8268]" dest="): ) [8852,8853]"/>
  <match src="identifier: accounts [100211,100219]" dest="identifier: accounts [38773,38781]"/>
  <match src="primitive_type [95028,95035]" dest="primitive_type [33592,33599]"/>
  <match src="return_type_definition [8647,8668]" dest="return_type_definition [9232,9253]"/>
  <match src="type_name [54112,54116]" dest="type_name [21202,21206]"/>
  <match src="uint256: uint256 [24905,24912]" dest="uint256: uint256 [18200,18207]"/>
  <match src="identifier: _state [98940,98946]" dest="identifier: _state [37502,37508]"/>
  <match src="[: [ [38286,38287]" dest="[: [ [52867,52868]"/>
  <match src="function: function [55058,55066]" dest="function: function [22148,22156]"/>
  <match src=",: , [103186,103187]" dest=",: , [41748,41749]"/>
  <match src="type_name [1499,1506]" dest="type_name [2078,2085]"/>
  <match src="(: ( [13906,13907]" dest="(: ( [23697,23698]"/>
  <match src="constant: constant [44497,44505]" dest="constant: constant [13654,13662]"/>
  <match src="(: ( [81201,81202]" dest="(: ( [69979,69980]"/>
  <match src="type_name [46106,46113]" dest="type_name [15263,15270]"/>
  <match src="primitive_type [86894,86901]" dest="primitive_type [27737,27744]"/>
  <match src="identifier: stringifyTruncated [30052,30070]" dest="identifier: stringifyTruncated [44633,44651]"/>
  <match src="): ) [35830,35831]" dest="): ) [50411,50412]"/>
  <match src="function_body [36116,36947]" dest="function_body [50697,51528]"/>
  <match src="identifier: period [44355,44361]" dest="identifier: period [13512,13518]"/>
  <match src="(: ( [96655,96656]" dest="(: ( [35219,35220]"/>
  <match src="type_name [83130,83137]" dest="type_name [58500,58507]"/>
  <match src="(: ( [102009,102010]" dest="(: ( [40571,40572]"/>
  <match src=".: . [103994,103995]" dest=".: . [42556,42557]"/>
  <match src="member_expression [95510,95538]" dest="member_expression [34074,34102]"/>
  <match src=",: , [53717,53718]" dest=",: , [20807,20808]"/>
  <match src="returns: returns [7814,7821]" dest="returns: returns [8399,8406]"/>
  <match src="identifier: errorMessage [4463,4475]" dest="identifier: errorMessage [5042,5054]"/>
  <match src="function_body [100429,100609]" dest="function_body [38991,39171]"/>
  <match src="call_argument [10865,10869]" dest="call_argument [11450,11454]"/>
  <match src="=: = [101379,101380]" dest="=: = [39941,39942]"/>
  <match src="call_argument [84447,84456]" dest="call_argument [76873,76928]"/>
  <match src="pure: pure [7102,7106]" dest="pure: pure [7687,7691]"/>
  <match src="(: ( [53838,53839]" dest="(: ( [20928,20929]"/>
  <match src="parameter [53839,53843]" dest="parameter [20929,20933]"/>
  <match src="primitive_type [87836,87843]" dest="primitive_type [28679,28686]"/>
  <match src="primitive_type [53809,53813]" dest="primitive_type [20899,20903]"/>
  <match src="member_expression [102838,102851]" dest="member_expression [41400,41413]"/>
  <match src="user_defined_type [87707,87714]" dest="user_defined_type [28550,28557]"/>
  <match src="emit: emit [100025,100029]" dest="emit: emit [38587,38591]"/>
  <match src="function: function [98832,98840]" dest="function: function [37394,37402]"/>
  <match src="identifier: totalBonded [92400,92411]" dest="identifier: totalBonded [30964,30975]"/>
  <match src="call_expression [103627,103683]" dest="call_expression [42189,42245]"/>
  <match src="identifier: Unbond [82487,82493]" dest="identifier: Unbond [70798,70804]"/>
  <match src=".: . [99890,99891]" dest=".: . [38452,38453]"/>
  <match src="identifier: epoch [95215,95220]" dest="identifier: epoch [33779,33784]"/>
  <match src="type_name [47705,47717]" dest="type_name [16862,16874]"/>
  <match src="identifier: file [32427,32431]" dest="identifier: file [47008,47012]"/>
  <match src="identifier: amount [22996,23002]" dest="identifier: amount [55442,55448]"/>
  <match src="address: address [15503,15510]" dest="address: address [25294,25301]"/>
  <match src="identifier: require [21583,21590]" dest="identifier: require [63353,63360]"/>
  <match src="expression_statement [35522,35526]" dest="expression_statement [50103,50107]"/>
  <match src="identifier: D256 [7157,7161]" dest="identifier: D256 [7742,7746]"/>
  <match src="string_literal [81538,81573]" dest="string_literal [70250,70288]"/>
  <match src="type_name [73061,73068]" dest="type_name [62133,62140]"/>
  <match src="identifier: amount [100912,100918]" dest="identifier: amount [39474,39480]"/>
  <match src="primitive_type [91964,91971]" dest="primitive_type [30528,30535]"/>
  <match src=",: , [52453,52454]" dest=",: , [60300,60301]"/>
  <match src="{: { [1508,1509]" dest="{: { [2087,2088]"/>
  <match src="identifier: fluidUntil [93993,94003]" dest="identifier: fluidUntil [32557,32567]"/>
  <match src="function: function [7919,7927]" dest="function: function [8504,8512]"/>
  <match src="identifier: b [7529,7530]" dest="identifier: b [8114,8115]"/>
  <match src="identifier: _state [99642,99648]" dest="identifier: _state [38204,38210]"/>
  <match src="): ) [92736,92737]" dest="): ) [31300,31301]"/>
  <match src="{: { [80209,80210]" dest="{: { [69383,69384]"/>
  <match src="returns: returns [5265,5272]" dest="returns: returns [5844,5851]"/>
  <match src="external: external [81705,81713]" dest="external: external [70402,70410]"/>
  <match src="identifier: amount [24958,24964]" dest="identifier: amount [55186,55192]"/>
  <match src="): ) [93489,93490]" dest="): ) [32053,32054]"/>
  <match src="call_argument [5979,5985]" dest="call_argument [6558,6564]"/>
  <match src="(: ( [83405,83406]" dest="(: ( [63047,63048]"/>
  <match src="comment: // populate the result with &quot;0x&quot; [38238,38270]" dest="comment: // populate the result with &quot;0x&quot; [52819,52851]"/>
  <match src="uint8: uint8 [38297,38302]" dest="uint8: uint8 [52878,52883]"/>
  <match src="type_name [101457,101464]" dest="type_name [40019,40026]"/>
  <match src="enum_declaration [87355,87427]" dest="enum_declaration [28198,28270]"/>
  <match src="array_access [95510,95530]" dest="array_access [34074,34094]"/>
  <match src="): ) [55462,55463]" dest="): ) [22552,22553]"/>
  <match src="uint256: uint256 [45157,45164]" dest="uint256: uint256 [14314,14321]"/>
  <match src="): ) [100418,100419]" dest="): ) [38980,38981]"/>
  <match src="return: return [91767,91773]" dest="return: return [30331,30337]"/>
  <match src="expression_statement [36338,36346]" dest="expression_statement [50919,50927]"/>
  <match src="type_name [100365,100372]" dest="type_name [38927,38934]"/>
  <match src="): ) [10095,10096]" dest="): ) [10680,10681]"/>
  <match src="primitive_type [95625,95632]" dest="primitive_type [34189,34196]"/>
  <match src="address: address [80253,80260]" dest="address: address [69428,69435]"/>
  <match src="identifier: amount [75381,75387]" dest="identifier: amount [55229,55235]"/>
  <match src="return_statement [7150,7176]" dest="return_statement [7735,7761]"/>
  <match src="(: ( [101039,101040]" dest="(: ( [39601,39602]"/>
  <match src="return: return [92455,92461]" dest="return: return [31019,31025]"/>
  <match src="uint256: uint256 [5229,5236]" dest="uint256: uint256 [5808,5815]"/>
  <match src="primitive_type [30452,30458]" dest="primitive_type [45033,45039]"/>
  <match src=",: , [52283,52284]" dest=",: , [63735,63736]"/>
  <match src="user_defined_type [45741,45754]" dest="user_defined_type [14898,14911]"/>
  <match src="identifier: candidates [96554,96564]" dest="identifier: candidates [35118,35128]"/>
  <match src="visibility [99302,99310]" dest="visibility [37864,37872]"/>
  <match src="call_argument [38297,38314]" dest="call_argument [52878,52895]"/>
  <match src="visibility [44489,44496]" dest="visibility [13646,13653]"/>
  <match src="internal: internal [102371,102379]" dest="internal: internal [40933,40941]"/>
  <match src="type_name [9570,9574]" dest="type_name [10155,10159]"/>
  <match src="identifier: Transfer [15257,15265]" dest="identifier: Transfer [25048,25056]"/>
  <match src="uint256: uint256 [96382,96389]" dest="uint256: uint256 [34946,34953]"/>
  <match src="&quot;: &quot; [21616,21617]" dest="&quot;: &quot; [63386,63387]"/>
  <match src="identifier: value [15316,15321]" dest="identifier: value [25107,25112]"/>
  <match src="returns: returns [8247,8254]" dest="returns: returns [8832,8839]"/>
  <match src=",: , [10724,10725]" dest=",: , [11309,11310]"/>
  <match src="function_definition [91690,91814]" dest="function_definition [30254,30378]"/>
  <match src="call_argument [67273,67287]" dest="call_argument [65871,65880]"/>
  <match src="identifier: burnFrom [50874,50882]" dest="identifier: burnFrom [26033,26041]"/>
  <match src="identifier: amount [22204,22210]" dest="identifier: amount [58704,58710]"/>
  <match src="internal: internal [101675,101683]" dest="internal: internal [40237,40245]"/>
  <match src="{: { [105299,105300]" dest="{: { [67367,67368]"/>
  <match src="member_expression [82950,82960]" dest="member_expression [76380,76390]"/>
  <match src="identifier: epoch [87981,87986]" dest="identifier: epoch [28824,28829]"/>
  <match src="string: string [100398,100404]" dest="string: string [38960,38966]"/>
  <match src="identifier: _state [95510,95516]" dest="identifier: _state [34074,34080]"/>
  <match src="member_expression [99350,99379]" dest="member_expression [37912,37941]"/>
  <match src="identifier: sub [99376,99379]" dest="identifier: sub [37938,37941]"/>
  <match src="uint256: uint256 [13234,13241]" dest="uint256: uint256 [23025,23032]"/>
  <match src="&quot;: &quot; [82405,82406]" dest="&quot;: &quot; [78410,78411]"/>
  <match src=".: . [100830,100831]" dest=".: . [39392,39393]"/>
  <match src="returns: returns [96939,96946]" dest="returns: returns [35503,35510]"/>
  <match src="primitive_type [54112,54116]" dest="primitive_type [21202,21206]"/>
  <match src="member_expression [99618,99632]" dest="member_expression [38180,38194]"/>
  <match src="primitive_type [21466,21473]" dest="primitive_type [63228,63235]"/>
  <match src="primitive_type [54550,54557]" dest="primitive_type [21640,21647]"/>
  <match src="identifier: amount [21868,21874]" dest="identifier: amount [63866,63872]"/>
  <match src="(: ( [32288,32289]" dest="(: ( [46869,46870]"/>
  <match src="call_argument [104074,104080]" dest="call_argument [42636,42642]"/>
  <match src="call_argument [81800,81810]" dest="call_argument [70528,70538]"/>
  <match src="parameter [39013,39017]" dest="parameter [53594,53598]"/>
  <match src="(: ( [45599,45600]" dest="(: ( [14756,14757]"/>
  <match src="}: } [49211,49212]" dest="}: } [55072,55073]"/>
  <match src="event_paramater [54279,54291]" dest="event_paramater [21369,21381]"/>
  <match src="parameter [8410,8419]" dest="parameter [8995,9004]"/>
  <match src="uint256: uint256 [97924,97931]" dest="uint256: uint256 [36486,36493]"/>
  <match src="identifier: _state [92676,92682]" dest="identifier: _state [31240,31246]"/>
  <match src="identifier: account [105290,105297]" dest="identifier: account [67358,67365]"/>
  <match src="call_struct_argument [9270,9300]" dest="call_struct_argument [9855,9885]"/>
  <match src="&quot;: &quot; [68389,68390]" dest="&quot;: &quot; [70748,70749]"/>
  <match src="parameter [96767,96784]" dest="parameter [35331,35348]"/>
  <match src="call_expression [8515,8532]" dest="call_expression [9100,9117]"/>
  <match src="type_name [9543,9547]" dest="type_name [10128,10132]"/>
  <match src="uint256: uint256 [5878,5885]" dest="uint256: uint256 [6457,6464]"/>
  <match src="identifier: stringify [34033,34042]" dest="identifier: stringify [48614,48623]"/>
  <match src="public: public [96087,96093]" dest="public: public [34651,34657]"/>
  <match src="return_type_definition [55147,55171]" dest="return_type_definition [22237,22261]"/>
  <match src="): ) [50974,50975]" dest="): ) [26133,26134]"/>
  <match src="parameter [22196,22210]" dest="parameter [58696,58710]"/>
  <match src="address: address [32194,32201]" dest="address: address [46775,46782]"/>
  <match src="function_body [91875,91922]" dest="function_body [30439,30486]"/>
  <match src="identifier: that [30254,30258]" dest="identifier: that [44835,44839]"/>
  <match src="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [85090,85447]" dest="comment: /**      * Returns whether the target address is a contract      * @dev This function will return false if invoked during the constructor of a contract,      * as the code is not actually created until after the constructor finishes.      * @param account address of the account to check      * @return whether the target address is a contract      */ [71896,72253]"/>
  <match src=",: , [99712,99713]" dest=",: , [38274,38275]"/>
  <match src="public: public [96361,96367]" dest="public: public [34925,34931]"/>
  <match src="function: function [54753,54761]" dest="function: function [21843,21851]"/>
  <match src="identifier: incrementBalanceOfCoupons [100626,100651]" dest="identifier: incrementBalanceOfCoupons [39188,39213]"/>
  <match src="visibility [96223,96229]" dest="visibility [34787,34793]"/>
  <match src="): ) [4475,4476]" dest="): ) [5054,5055]"/>
  <match src="for_statement [38477,38890]" dest="for_statement [53058,53471]"/>
  <match src=".: . [95997,95998]" dest=".: . [34561,34562]"/>
  <match src="type_name [47404,47416]" dest="type_name [16561,16573]"/>
  <match src="unary_expression [31016,31021]" dest="unary_expression [45597,45602]"/>
  <match src="identifier: Permission [106586,106596]" dest="identifier: Permission [75795,75805]"/>
  <match src="private: private [45010,45017]" dest="private: private [14167,14174]"/>
  <match src="]: ] [93209,93210]" dest="]: ] [31773,31774]"/>
  <match src="function_definition [102299,102516]" dest="function_definition [40861,41078]"/>
  <match src="visibility [55023,55031]" dest="visibility [22113,22121]"/>
  <match src="(: ( [82169,82170]" dest="(: ( [71083,71084]"/>
  <match src="identifier: epoch [95728,95733]" dest="identifier: epoch [34292,34297]"/>
  <match src="parameter [53259,53272]" dest="parameter [20349,20362]"/>
  <match src="identifier: incrementTotalDebt [98708,98726]" dest="identifier: incrementTotalDebt [37270,37288]"/>
  <match src="identifier: initialized [97001,97012]" dest="identifier: initialized [35565,35576]"/>
  <match src="identifier: D256 [9464,9468]" dest="identifier: D256 [10049,10053]"/>
  <match src="expression_statement [99149,99215]" dest="expression_statement [37711,37777]"/>
  <match src=",: , [32183,32184]" dest=",: , [46764,46765]"/>
  <match src="member_expression [101285,101313]" dest="member_expression [39847,39875]"/>
  <match src="identifier: accounts [101137,101145]" dest="identifier: accounts [39699,39707]"/>
  <match src="address: address [54083,54090]" dest="address: address [21173,21180]"/>
  <match src="identifier: amount [101843,101849]" dest="identifier: amount [40405,40411]"/>
  <match src="identifier: file [31570,31574]" dest="identifier: file [46151,46155]"/>
  <match src="call_expression [7873,7900]" dest="call_expression [8458,8485]"/>
  <match src="enum_value: Fluid [86728,86733]" dest="enum_value: Fluid [27571,27576]"/>
  <match src="(: ( [13233,13234]" dest="(: ( [23024,23025]"/>
  <match src="identifier: owner [13860,13865]" dest="identifier: owner [23651,23656]"/>
  <match src="identifier: expiration [87195,87205]" dest="identifier: expiration [28038,28048]"/>
  <match src="visibility [96361,96367]" dest="visibility [34925,34931]"/>
  <match src=",: , [54426,54427]" dest=",: , [21516,21517]"/>
  <match src="identifier: epoch [94279,94284]" dest="identifier: epoch [32843,32848]"/>
  <match src="visibility [24168,24176]" dest="visibility [17968,17976]"/>
  <match src="call_argument [100594,100600]" dest="call_argument [39156,39162]"/>
  <match src="member_expression [100440,100471]" dest="member_expression [39002,39033]"/>
  <match src="uint: uint [55270,55274]" dest="uint: uint [22360,22364]"/>
  <match src="{: { [51867,51868]" dest="{: { [54622,54623]"/>
  <match src="pure: pure [46797,46801]" dest="pure: pure [15954,15958]"/>
  <match src=".: . [100574,100575]" dest=".: . [39136,39137]"/>
  <match src="type_name [7823,7827]" dest="type_name [8408,8412]"/>
  <match src="(: ( [91708,91709]" dest="(: ( [30272,30273]"/>
  <match src="identifier: _state [101130,101136]" dest="identifier: _state [39692,39698]"/>
  <match src="(: ( [29961,29962]" dest="(: ( [44542,44543]"/>
  <match src="): ) [97937,97938]" dest="): ) [36499,36500]"/>
  <match src="function_body [89791,90056]" dest="function_body [74424,74689]"/>
  <match src=".: . [99336,99337]" dest=".: . [37898,37899]"/>
  <match src="&quot;: &quot; [5311,5312]" dest="&quot;: &quot; [5890,5891]"/>
  <match src="address: address [14602,14609]" dest="address: address [24393,24400]"/>
  <match src="identifier: totalStaged [83888,83899]" dest="identifier: totalStaged [58112,58123]"/>
  <match src="address: address [72044,72051]" dest="address: address [58076,58083]"/>
  <match src="expression_statement [57733,57785]" dest="expression_statement [71189,71262]"/>
  <match src="identifier: sender [54202,54208]" dest="identifier: sender [21292,21298]"/>
  <match src="parameter [19292,19306]" dest="parameter [59036,59050]"/>
  <match src="call_argument [39215,39249]" dest="call_argument [53796,53830]"/>
  <match src="new_expression [35982,35991]" dest="new_expression [50563,50572]"/>
  <match src="string: string [5900,5906]" dest="string: string [6479,6485]"/>
  <match src="call_expression [80220,80227]" dest="call_expression [69394,69402]"/>
  <match src="identifier: D256 [7576,7580]" dest="identifier: D256 [8161,8165]"/>
  <match src="struct: struct [87944,87950]" dest="struct: struct [28787,28793]"/>
  <match src="primitive_type [90236,90243]" dest="primitive_type [74869,74876]"/>
  <match src="identifier: candidates [103995,104005]" dest="identifier: candidates [42557,42567]"/>
  <match src="type_name [70164,70171]" dest="type_name [64643,64650]"/>
  <match src="{: { [99517,99518]" dest="{: { [38079,38080]"/>
  <match src="]: ] [101517,101518]" dest="]: ] [40079,40080]"/>
  <match src="struct_member [87157,87177]" dest="struct_member [28000,28020]"/>
  <match src="member_expression [103588,103605]" dest="member_expression [42150,42167]"/>
  <match src="identifier: Decimal [91212,91219]" dest="identifier: Decimal [29776,29783]"/>
  <match src="revert_statement [34405,34937]" dest="revert_statement [48986,49518]"/>
  <match src="function: function [91930,91938]" dest="function: function [30494,30502]"/>
  <match src=",: , [1919,1920]" dest=",: , [2498,2499]"/>
  <match src="function: function [92083,92091]" dest="function: function [30647,30655]"/>
  <match src="identifier: input [36244,36249]" dest="identifier: input [50825,50830]"/>
  <match src="primitive_type [103930,103937]" dest="primitive_type [42492,42499]"/>
  <match src="): ) [13547,13548]" dest="): ) [23338,23339]"/>
  <match src=",: , [80863,80864]" dest=",: , [70613,70614]"/>
  <match src="identifier: outstandingCouponsForEpoch [102604,102630]" dest="identifier: outstandingCouponsForEpoch [41166,41192]"/>
  <match src="identifier: State [91148,91153]" dest="identifier: State [29712,29717]"/>
  <match src="function: function [5216,5224]" dest="function: function [5795,5803]"/>
  <match src="member_expression [99149,99174]" dest="member_expression [37711,37736]"/>
  <match src="(: ( [96067,96068]" dest="(: ( [34631,34632]"/>
  <match src="identifier: bonded [87819,87825]" dest="identifier: bonded [28662,28668]"/>
  <match src="(: ( [7203,7204]" dest="(: ( [7788,7789]"/>
  <match src="identifier: reserve1 [54881,54889]" dest="identifier: reserve1 [21971,21979]"/>
  <match src="address: address [79704,79711]" dest="address: address [68779,68786]"/>
  <match src="call_argument [50190,50195]" dest="call_argument [70189,70194]"/>
  <match src="(: ( [73034,73035]" dest="(: ( [65423,65424]"/>
  <match src="contract: contract [79347,79355]" dest="contract: contract [68633,68641]"/>
  <match src="memory: memory [46503,46509]" dest="memory: memory [15660,15666]"/>
  <match src="(: ( [63023,63024]" dest="(: ( [26882,26883]"/>
  <match src="primitive_type [99475,99482]" dest="primitive_type [38037,38044]"/>
  <match src="visibility [32250,32258]" dest="visibility [46831,46839]"/>
  <match src="function: function [34169,34177]" dest="function: function [48750,48758]"/>
  <match src="pure: pure [2442,2446]" dest="pure: pure [3021,3025]"/>
  <match src="comment: // populate the least-significant character [38610,38653]" dest="comment: // populate the least-significant character [53191,53234]"/>
  <match src="identifier: value [8079,8084]" dest="identifier: value [8664,8669]"/>
  <match src="external: external [55138,55146]" dest="external: external [22228,22236]"/>
  <match src="user_defined_type [10206,10210]" dest="user_defined_type [10791,10795]"/>
  <match src="&quot;: &quot; [105899,105900]" dest="&quot;: &quot; [67967,67968]"/>
  <match src="): ) [76897,76898]" dest="): ) [60764,60765]"/>
  <match src="number_literal: 0 [35992,35993]" dest="number_literal: 0 [50573,50574]"/>
  <match src="): ) [82006,82007]" dest="): ) [77030,77031]"/>
  <match src="): ) [52497,52498]" dest="): ) [60358,60359]"/>
  <match src="identifier: redeemable [87869,87879]" dest="identifier: redeemable [28712,28722]"/>
  <match src="=: = [37883,37884]" dest="=: = [52464,52465]"/>
  <match src="parameter [21431,21445]" dest="parameter [63178,63192]"/>
  <match src="[: [ [100794,100795]" dest="[: [ [39356,39357]"/>
  <match src=",: , [55314,55315]" dest=",: , [22404,22405]"/>
  <match src="struct_declaration [87435,87624]" dest="struct_declaration [28278,28467]"/>
  <match src="external: external [53236,53244]" dest="external: external [20326,20334]"/>
  <match src="): ) [45761,45762]" dest="): ) [14918,14919]"/>
  <match src=",: , [86717,86718]" dest=",: , [27560,27561]"/>
  <match src="visibility [43875,43882]" dest="visibility [13032,13039]"/>
  <match src="return: return [96965,96971]" dest="return: return [35529,35535]"/>
  <match src="number_literal: 1e20 [44884,44888]" dest="number_literal: 1e20 [14041,14045]"/>
  <match src="): ) [81941,81942]" dest="): ) [79229,79230]"/>
  <match src="parameter [53599,53603]" dest="parameter [20689,20693]"/>
  <match src="): ) [51832,51833]" dest="): ) [54611,54612]"/>
  <match src="identifier: Require [29304,29311]" dest="identifier: Require [43885,43892]"/>
  <match src="identifier: owner [101711,101716]" dest="identifier: owner [40273,40278]"/>
  <match src="call_argument [22404,22410]" dest="call_argument [58834,58840]"/>
  <match src="parameter [96480,96497]" dest="parameter [35044,35061]"/>
  <match src="primitive_type [78368,78375]" dest="primitive_type [77883,77890]"/>
  <match src="identifier: mint [78279,78283]" dest="identifier: mint [59080,59084]"/>
  <match src="parameter [92122,92129]" dest="parameter [30686,30693]"/>
  <match src="variable_declaration [81955,81975]" dest="variable_declaration [60732,60755]"/>
  <match src="state_mutability [96368,96372]" dest="state_mutability [34932,34936]"/>
  <match src="identifier: balance [99184,99191]" dest="identifier: balance [37746,37753]"/>
  <match src="identifier: amount [18653,18659]" dest="identifier: amount [58896,58902]"/>
  <match src="identifier: that [32111,32115]" dest="identifier: that [46692,46696]"/>
  <match src="{: { [46667,46668]" dest="{: { [15824,15825]"/>
  <match src=",: , [22901,22902]" dest=",: , [62651,62652]"/>
  <match src="call_struct_argument [7439,7457]" dest="call_struct_argument [8024,8042]"/>
  <match src="block_statement [8888,8929]" dest="block_statement [9473,9514]"/>
  <match src="memory: memory [99814,99820]" dest="memory: memory [38376,38382]"/>
  <match src="&quot;: &quot; [64430,64431]" dest="&quot;: &quot; [59894,59895]"/>
  <match src="member_expression [100720,100752]" dest="member_expression [39282,39314]"/>
  <match src="uint256: uint256 [1465,1472]" dest="uint256: uint256 [2044,2051]"/>
  <match src="identifier: accounts [101964,101972]" dest="identifier: accounts [40526,40534]"/>
  <match src="visibility [12463,12471]" dest="visibility [54613,54621]"/>
  <match src="call_expression [9710,9741]" dest="call_expression [10295,10326]"/>
  <match src="string [91584,91590]" dest="string [30148,30154]"/>
  <match src="identifier: accounts [93700,93708]" dest="identifier: accounts [32264,32272]"/>
  <match src="bytes32: bytes32 [30896,30903]" dest="bytes32: bytes32 [45477,45484]"/>
  <match src="call_struct_argument [8299,8341]" dest="call_struct_argument [8884,8926]"/>
  <match src="identifier: amount [101746,101752]" dest="identifier: amount [40308,40314]"/>
  <match src="&quot;: &quot; [80909,80910]" dest="&quot;: &quot; [79004,79005]"/>
  <match src="(: ( [15067,15068]" dest="(: ( [24858,24859]"/>
  <match src="function: function [22804,22812]" dest="function: function [55325,55333]"/>
  <match src="address: address [87732,87739]" dest="address: address [28575,28582]"/>
  <match src="}: } [51929,51930]" dest="}: } [54785,54786]"/>
  <match src="pure: pure [53955,53959]" dest="pure: pure [21045,21049]"/>
  <match src="address: address [21447,21454]" dest="address: address [63194,63201]"/>
  <match src="primitive_type [45625,45632]" dest="primitive_type [14782,14789]"/>
  <match src="function_definition [96461,96590]" dest="function_definition [35025,35154]"/>
  <match src="member_expression [99618,99639]" dest="member_expression [38180,38201]"/>
  <match src="variable_declaration [104241,104256]" dest="variable_declaration [42803,42818]"/>
  <match src="type_name [36554,36561]" dest="type_name [51135,51142]"/>
  <match src="parameter [103343,103357]" dest="parameter [41905,41919]"/>
  <match src="identifier: D256 [10793,10797]" dest="identifier: D256 [11378,11382]"/>
  <match src="call_expression [105786,105911]" dest="call_expression [67854,67979]"/>
  <match src="member_expression [102454,102501]" dest="member_expression [41016,41063]"/>
  <match src="identifier: pair [52487,52491]" dest="identifier: spender [60426,60433]"/>
  <match src="comment: /* Market */ [45083,45095]" dest="comment: /* Market */ [14240,14252]"/>
  <match src="visibility [25090,25097]" dest="visibility [65600,65607]"/>
  <match src="function_body [91451,91504]" dest="function_body [30015,30068]"/>
  <match src="call_argument [80808,80813]" dest="call_argument [69677,69682]"/>
  <match src="type_name [33629,33636]" dest="type_name [48210,48217]"/>
  <match src="call_argument [104066,104072]" dest="call_argument [42628,42634]"/>
  <match src="contract_body [85083,86083]" dest="contract_body [71889,72889]"/>
  <match src="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [1630,1891]" dest="comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [2209,2470]"/>
  <match src="memory: memory [47564,47570]" dest="memory: memory [16721,16727]"/>
  <match src="member_expression [100170,100185]" dest="member_expression [38732,38747]"/>
  <match src="type_name [54794,54801]" dest="type_name [21884,21891]"/>
  <match src="call_argument [80865,80870]" dest="call_argument [71134,71139]"/>
  <match src="type_alias [97838,97846]" dest="type_alias [36400,36408]"/>
  <match src=".: . [99364,99365]" dest=".: . [37926,37927]"/>
  <match src="identifier: redeemable [99365,99375]" dest="identifier: redeemable [37927,37937]"/>
  <match src="event_paramater [52493,52497]" dest="event_paramater [60322,60343]"/>
  <match src="identifier: i [9011,9012]" dest="identifier: i [9596,9597]"/>
  <match src="identifier: outstandingCouponsForEpoch [102672,102698]" dest="identifier: outstandingCouponsForEpoch [41234,41260]"/>
  <match src="yul_path [90508,90525]" dest="yul_path [75141,75158]"/>
  <match src="(: ( [47831,47832]" dest="(: ( [16988,16989]"/>
  <match src="(: ( [7395,7396]" dest="(: ( [7980,7981]"/>
  <match src="struct_member [87187,87206]" dest="struct_member [28030,28049]"/>
  <match src="type_name [8024,8028]" dest="type_name [8609,8613]"/>
  <match src="primitive_type [17389,17396]" dest="primitive_type [59839,59846]"/>
  <match src="parenthesized_expression [29961,30218]" dest="parenthesized_expression [44542,44799]"/>
  <match src=".: . [101305,101306]" dest=".: . [39867,39868]"/>
  <match src="primitive_type [37203,37208]" dest="primitive_type [51784,51789]"/>
  <match src="primitive_type [80109,80116]" dest="primitive_type [76037,76044]"/>
  <match src="uint256: uint256 [104241,104248]" dest="uint256: uint256 [42803,42810]"/>
  <match src="primitive_type [98124,98131]" dest="primitive_type [36686,36693]"/>
  <match src="array_access [102838,102858]" dest="array_access [41400,41420]"/>
  <match src="primitive_type [78384,78391]" dest="primitive_type [78703,78710]"/>
  <match src="parameter [94145,94152]" dest="parameter [32709,32716]"/>
  <match src=",: , [15286,15287]" dest=",: , [25077,25078]"/>
  <match src="identifier: value [81652,81657]" dest="identifier: value [71323,71328]"/>
  <match src="call_expression [8089,8100]" dest="call_expression [8674,8685]"/>
  <match src="event_definition [54175,54238]" dest="event_definition [21265,21328]"/>
  <match src="number_literal: 0 [35370,35371]" dest="number_literal: 0 [49951,49952]"/>
  <match src="visibility [92851,92857]" dest="visibility [31415,31421]"/>
  <match src="call_expression [46264,46306]" dest="call_expression [15421,15463]"/>
  <match src="identifier: approve [14594,14601]" dest="identifier: approve [24385,24392]"/>
  <match src="(: ( [80467,80468]" dest="(: ( [70428,70429]"/>
  <match src="return_type_definition [5265,5282]" dest="return_type_definition [5844,5861]"/>
  <match src="contract: contract [87329,87337]" dest="contract: contract [28172,28180]"/>
  <match src="): ) [101577,101578]" dest="): ) [40139,40140]"/>
  <match src="): ) [10404,10405]" dest="): ) [10989,10990]"/>
  <match src="parameter [9998,10014]" dest="parameter [10583,10599]"/>
  <match src="uint: uint [53444,53448]" dest="uint: uint [20534,20538]"/>
  <match src="uint256: uint256 [80091,80098]" dest="uint256: uint256 [80593,80600]"/>
  <match src="type_name [54000,54007]" dest="type_name [21090,21097]"/>
  <match src="(: ( [30542,30543]" dest="(: ( [45123,45124]"/>
  <match src="member_expression [82610,82620]" dest="member_expression [69894,69904]"/>
  <match src="[: [ [101187,101188]" dest="[: [ [39749,39750]"/>
  <match src="type_name [53100,53107]" dest="type_name [20190,20197]"/>
  <match src=",: , [89986,89987]" dest=",: , [74619,74620]"/>
  <match src="view: view [94399,94403]" dest="view: view [32963,32967]"/>
  <match src="comment: // 33% [44662,44668]" dest="comment: // 33% [13819,13825]"/>
  <match src="call_argument [37848,37865]" dest="call_argument [52429,52446]"/>
  <match src="variable_declaration [66724,66734]" dest="variable_declaration [66357,66367]"/>
  <match src="member_expression [93835,93850]" dest="member_expression [32399,32414]"/>
  <match src="returns: returns [7387,7394]" dest="returns: returns [7972,7979]"/>
  <match src="(: ( [46541,46542]" dest="(: ( [15698,15699]"/>
  <match src="identifier: b [7646,7647]" dest="identifier: b [8231,8232]"/>
  <match src="parameter [55287,55302]" dest="parameter [22377,22392]"/>
  <match src=",: , [32432,32433]" dest=",: , [47013,47014]"/>
  <match src="{: { [10268,10269]" dest="{: { [10853,10854]"/>
  <match src="call_argument [80671,80681]" dest="call_argument [69804,69814]"/>
  <match src="assignment_expression [104490,104537]" dest="assignment_expression [43052,43099]"/>
  <match src="unary_expression [29933,29938]" dest="unary_expression [44514,44519]"/>
  <match src="view: view [94648,94652]" dest="view: view [33212,33216]"/>
  <match src="function: function [2370,2378]" dest="function: function [2949,2957]"/>
  <match src="): ) [8340,8341]" dest="): ) [8925,8926]"/>
  <match src="pure: pure [35094,35098]" dest="pure: pure [49675,49679]"/>
  <match src="identifier: _state [100282,100288]" dest="identifier: _state [38844,38850]"/>
  <match src="(: ( [10629,10630]" dest="(: ( [11214,11215]"/>
  <match src="): ) [23785,23786]" dest="): ) [62964,62965]"/>
  <match src="variable_declaration [3171,3180]" dest="variable_declaration [3750,3759]"/>
  <match src="): ) [21757,21758]" dest="): ) [55829,55830]"/>
  <match src="): ) [54983,54984]" dest="): ) [22073,22074]"/>
  <match src="(: ( [81995,81996]" dest="(: ( [77019,77020]"/>
  <match src="(: ( [96107,96108]" dest="(: ( [34671,34672]"/>
  <match src="state_mutability [63035,63039]" dest="state_mutability [26894,26898]"/>
  <match src="primitive_type [89866,89871]" dest="primitive_type [74499,74504]"/>
  <match src="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [14667,14971]" dest="comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [24458,24762]"/>
  <match src="identifier: sender [80191,80197]" dest="identifier: sender [76324,76330]"/>
  <match src=".: . [99163,99164]" dest=".: . [37725,37726]"/>
  <match src="type_name [24739,24746]" dest="type_name [17946,17953]"/>
  <match src="member_expression [99563,99578]" dest="member_expression [38125,38140]"/>
  <match src="=: = [44882,44883]" dest="=: = [14039,14040]"/>
  <match src="visibility [98044,98052]" dest="visibility [36606,36614]"/>
  <match src="comment: /**      * Global      */ [98356,98383]" dest="comment: /**      * Global      */ [36918,36945]"/>
  <match src="): ) [72079,72080]" dest="): ) [58125,58126]"/>
  <match src="identifier: Decimal [46225,46232]" dest="identifier: Decimal [15382,15389]"/>
  <match src="call_argument [78210,78214]" dest="call_argument [77733,77742]"/>
  <match src="{: { [10125,10126]" dest="{: { [10710,10711]"/>
  <match src="identifier: redeemable [99337,99347]" dest="identifier: redeemable [37899,37909]"/>
  <match src="event_paramater [15503,15524]" dest="event_paramater [25294,25315]"/>
  <match src="identifier: encodePacked [33825,33837]" dest="identifier: encodePacked [48406,48418]"/>
  <match src="function: function [92291,92299]" dest="function: function [30855,30863]"/>
  <match src="type_name [35113,35118]" dest="type_name [49694,49699]"/>
  <match src="return: return [10554,10560]" dest="return: return [11139,11145]"/>
  <match src="string_literal [91584,91590]" dest="string_literal [30148,30154]"/>
  <match src="function_definition [46994,47108]" dest="function_definition [16151,16265]"/>
  <match src="number_literal: 41 [37687,37689]" dest="number_literal: 41 [52268,52270]"/>
  <match src="assignment_expression [102748,102827]" dest="assignment_expression [41310,41389]"/>
  <match src=".: . [100303,100304]" dest=".: . [38865,38866]"/>
  <match src="comment: // for each byte (starting from the lowest byte), populate the result with two characters [37391,37480]" dest="comment: // for each byte (starting from the lowest byte), populate the result with two characters [51972,52061]"/>
  <match src="call_expression [7859,7903]" dest="call_expression [8444,8488]"/>
  <match src="call_expression [52241,52329]" dest="call_expression [63703,63796]"/>
  <match src=".: . [101178,101179]" dest=".: . [39740,39741]"/>
  <match src="identifier: period [94767,94773]" dest="identifier: period [33331,33337]"/>
  <match src="member_expression [101285,101325]" dest="member_expression [39847,39887]"/>
  <match src="function: function [91399,91407]" dest="function: function [29963,29971]"/>
  <match src="uint256: uint256 [2383,2390]" dest="uint256: uint256 [2962,2969]"/>
  <match src="&gt;=: &gt;= [93965,93967]" dest="&gt;=: &gt;= [32529,32531]"/>
  <match src="}: } [86756,86757]" dest="}: } [27599,27600]"/>
  <match src="!=: != [21601,21603]" dest="!=: != [63371,63373]"/>
  <match src="function_body [8274,8352]" dest="function_body [8859,8937]"/>
  <match src="identifier: candidates [103386,103396]" dest="identifier: candidates [41948,41958]"/>
  <match src="=: = [37223,37224]" dest="=: = [51804,51805]"/>
  <match src="uint256: uint256 [96520,96527]" dest="uint256: uint256 [35084,35091]"/>
  <match src=".: . [102795,102796]" dest=".: . [41357,41358]"/>
  <match src="identifier: updatePrice [66575,66586]" dest="identifier: oracleCapture [64906,64919]"/>
  <match src="identifier: redeemable [92801,92811]" dest="identifier: redeemable [31365,31375]"/>
  <match src="identifier: Decimal [65643,65650]" dest="identifier: Decimal [19457,19464]"/>
  <match src=".: . [99202,99203]" dest=".: . [37764,37765]"/>
  <match src="identifier: balance [100265,100272]" dest="identifier: balance [38827,38834]"/>
  <match src="type_cast_expression [78284,78297]" dest="type_cast_expression [59085,59098]"/>
  <match src="call_expression [50056,50152]" dest="call_expression [54968,55038]"/>
  <match src="identifier: value [8711,8716]" dest="identifier: value [9296,9301]"/>
  <match src="primitive_type [35658,35665]" dest="primitive_type [50239,50246]"/>
  <match src="(: ( [23764,23765]" dest="(: ( [62943,62944]"/>
  <match src="parameter [98421,98435]" dest="parameter [36983,36997]"/>
  <match src="): ) [76937,76938]" dest="): ) [60800,60801]"/>
  <match src="call_expression [34502,34526]" dest="call_expression [49083,49107]"/>
  <match src="): ) [55170,55171]" dest="): ) [22260,22261]"/>
  <match src="return_type_definition [53830,53844]" dest="return_type_definition [20920,20934]"/>
  <match src="{: { [101119,101120]" dest="{: { [39681,39682]"/>
  <match src="primitive_type [104172,104179]" dest="primitive_type [42734,42741]"/>
  <match src="uint256: uint256 [77697,77704]" dest="uint256: uint256 [61778,61785]"/>
  <match src="identifier: file [34221,34225]" dest="identifier: file [48802,48806]"/>
  <match src="identifier: shift [37834,37839]" dest="identifier: shift [52415,52420]"/>
  <match src="uint256: uint256 [69798,69805]" dest="uint256: uint256 [64605,64612]"/>
  <match src=",: , [98574,98575]" dest=",: , [37136,37137]"/>
  <match src="{: { [35639,35640]" dest="{: { [50220,50221]"/>
  <match src="identifier: mul [7890,7893]" dest="identifier: mul [8475,8478]"/>
  <match src="expression_statement [82905,83047]" dest="expression_statement [78129,78232]"/>
  <match src="comment: /* Governance */ [44534,44550]" dest="comment: /* Governance */ [13691,13707]"/>
  <match src="identifier: account [100660,100667]" dest="identifier: account [39222,39229]"/>
  <match src="boolean_literal [98199,98204]" dest="boolean_literal [36761,36766]"/>
  <match src="function: function [104430,104438]" dest="function: function [42992,43000]"/>
  <match src="(: ( [27858,27859]" dest="(: ( [77265,77266]"/>
  <match src="function_definition [9975,10182]" dest="function_definition [10560,10767]"/>
  <match src="identifier: statusOf [105614,105622]" dest="identifier: statusOf [67682,67690]"/>
  <match src="identifier: b [10236,10237]" dest="identifier: b [10821,10822]"/>
  <match src="call_expression [107002,107010]" dest="call_expression [66371,66379]"/>
  <match src="): ) [63024,63025]" dest="): ) [26883,26884]"/>
  <match src="call_argument [24300,24338]" dest="call_argument [62058,62075]"/>
  <match src="(: ( [23609,23610]" dest="(: ( [62882,62883]"/>
  <match src="identifier: D256 [11463,11467]" dest="identifier: D256 [12048,12052]"/>
  <match src=".: . [92682,92683]" dest=".: . [31246,31247]"/>
  <match src="indexed: indexed [27682,27689]" dest="indexed: indexed [60070,60077]"/>
  <match src="{: { [49078,49079]" dest="{: { [54861,54862]"/>
  <match src="string [23004,23040]" dest="string [55450,55494]"/>
  <match src="): ) [103465,103466]" dest="): ) [42027,42028]"/>
  <match src="visibility [96087,96093]" dest="visibility [34651,34657]"/>
  <match src="[: [ [101298,101299]" dest="[: [ [39860,39861]"/>
  <match src="event_definition [79941,80031]" dest="event_definition [68886,68977]"/>
  <match src="member_expression [9478,9488]" dest="member_expression [10063,10073]"/>
  <match src="return: return [65801,65807]" dest="return: return [66543,66549]"/>
  <match src="identifier: BOOTSTRAPPING_PERIOD [43822,43842]" dest="identifier: BOOTSTRAPPING_PERIOD [12979,12999]"/>
  <match src="type_name [15034,15041]" dest="type_name [24825,24832]"/>
  <match src="identifier: value [79737,79742]" dest="identifier: value [68812,68817]"/>
  <match src="function: function [97991,97999]" dest="function: function [36553,36561]"/>
  <match src="): ) [7650,7651]" dest="): ) [8235,8236]"/>
  <match src="{: { [47603,47604]" dest="{: { [16760,16761]"/>
  <match src="type_name [87051,87058]" dest="type_name [27894,27901]"/>
  <match src="{: { [91654,91655]" dest="{: { [30218,30219]"/>
  <match src="): ) [33010,33011]" dest="): ) [47591,47592]"/>
  <match src="{: { [92235,92236]" dest="{: { [30799,30800]"/>
  <match src="identifier: sub [1906,1909]" dest="identifier: sub [2485,2488]"/>
  <match src="&quot;: &quot; [27178,27179]" dest="&quot;: &quot; [77464,77465]"/>
  <match src="member_expression [96547,96564]" dest="member_expression [35111,35128]"/>
  <match src="type_name [88106,88137]" dest="type_name [28949,28980]"/>
  <match src="): ) [68204,68205]" dest="): ) [61620,61621]"/>
  <match src="number_literal: 2 [10876,10877]" dest="number_literal: 2 [11461,11462]"/>
  <match src="identifier: initialize [55435,55445]" dest="identifier: initialize [22525,22535]"/>
  <match src="private: private [35081,35088]" dest="private: private [49662,49669]"/>
  <match src="identifier: errorMessage [2492,2504]" dest="identifier: errorMessage [3071,3083]"/>
  <match src="string: string [33792,33798]" dest="string: string [48373,48379]"/>
  <match src="uint256: uint256 [7521,7528]" dest="uint256: uint256 [8106,8113]"/>
  <match src="call_expression [47590,47632]" dest="call_expression [16747,16789]"/>
  <match src="identifier: add [73031,73034]" dest="identifier: asUint256 [65414,65423]"/>
  <match src="(: ( [94723,94724]" dest="(: ( [33287,33288]"/>
  <match src="identifier: to [53196,53198]" dest="identifier: to [20286,20288]"/>
  <match src="(: ( [31731,31732]" dest="(: ( [46312,46313]"/>
  <match src="view: view [94131,94135]" dest="view: view [32695,32699]"/>
  <match src="=: = [45144,45145]" dest="=: = [14301,14302]"/>
  <match src="call_argument [34585,34611]" dest="call_argument [49166,49192]"/>
  <match src="returns: returns [46367,46374]" dest="returns: returns [15524,15531]"/>
  <match src="visibility [54832,54840]" dest="visibility [21922,21930]"/>
  <match src=".: . [101979,101980]" dest=".: . [40541,40542]"/>
  <match src="returns: returns [8456,8463]" dest="returns: returns [9041,9048]"/>
  <match src="struct_member [87274,87289]" dest="struct_member [28117,28132]"/>
  <match src="uint256: uint256 [92435,92442]" dest="uint256: uint256 [30999,31006]"/>
  <match src="user_defined_type [64337,64344]" dest="user_defined_type [64493,64504]"/>
  <match src="(: ( [94757,94758]" dest="(: ( [33321,33322]"/>
  <match src="contract_body [12951,15569]" dest="contract_body [22742,25360]"/>
  <match src="]: ] [103615,103616]" dest="]: ] [42177,42178]"/>
  <match src="}: } [35931,35932]" dest="}: } [50512,50513]"/>
  <match src="string [82307,82342]" dest="string [78557,78571]"/>
  <match src="type_name [9810,9814]" dest="type_name [10395,10399]"/>
  <match src="(: ( [101329,101330]" dest="(: ( [39891,39892]"/>
  <match src="identifier: initialized [104519,104530]" dest="identifier: initialized [43081,43092]"/>
  <match src="call_argument [78284,78297]" dest="call_argument [59085,59098]"/>
  <match src="primitive_type [37229,37234]" dest="primitive_type [51810,51815]"/>
  <match src="function_definition [90209,90544]" dest="function_definition [74842,75177]"/>
  <match src=",: , [32847,32848]" dest=",: , [47428,47429]"/>
  <match src="call_argument [33381,33389]" dest="call_argument [47962,47970]"/>
  <match src="member_expression [95055,95095]" dest="member_expression [33619,33659]"/>
  <match src="identifier: value [81417,81422]" dest="identifier: value [70741,70746]"/>
  <match src="): ) [8531,8532]" dest="): ) [9116,9117]"/>
  <match src="call_argument [102010,102016]" dest="call_argument [40572,40578]"/>
  <match src="(: ( [95956,95957]" dest="(: ( [34520,34521]"/>
  <match src="(: ( [29932,29933]" dest="(: ( [44513,44514]"/>
  <match src="identifier: a [5305,5306]" dest="identifier: a [5884,5885]"/>
  <match src="call_expression [82354,82442]" dest="call_expression [77760,77792]"/>
  <match src="call_argument [22342,22348]" dest="call_argument [58791,58797]"/>
  <match src="parameter [98560,98574]" dest="parameter [37122,37136]"/>
  <match src="struct_declaration [44266,44369]" dest="struct_declaration [13423,13526]"/>
  <match src="visibility [67719,67726]" dest="visibility [66027,66034]"/>
  <match src="(: ( [31015,31016]" dest="(: ( [45596,45597]"/>
  <match src="&amp;: &amp; [38695,38696]" dest="&amp;: &amp; [53276,53277]"/>
  <match src="constant: constant [45257,45265]" dest="constant: constant [14414,14422]"/>
  <match src="state_mutability [45727,45731]" dest="state_mutability [14884,14888]"/>
  <match src="type_name [10686,10690]" dest="type_name [11271,11275]"/>
  <match src="identifier: sender [52185,52191]" dest="identifier: sender [63729,63735]"/>
  <match src="=: = [36531,36532]" dest="=: = [51112,51113]"/>
  <match src="state_mutability [53371,53375]" dest="state_mutability [20461,20465]"/>
  <match src="identifier: staged [100297,100303]" dest="identifier: staged [38859,38865]"/>
  <match src="{: { [104161,104162]" dest="{: { [42723,42724]"/>
  <match src="}: } [3158,3159]" dest="}: } [3737,3738]"/>
  <match src="}: } [23929,23930]" dest="}: } [63144,63145]"/>
  <match src="is: is [17344,17346]" dest="is: is [59791,59793]"/>
  <match src="member_expression [47443,47455]" dest="member_expression [16600,16612]"/>
  <match src="parameter [47051,47058]" dest="parameter [16208,16215]"/>
  <match src="type_name [54628,54632]" dest="type_name [21718,21722]"/>
  <match src="binary_expression [49839,49857]" dest="binary_expression [61997,62024]"/>
  <match src="memory: memory [10653,10659]" dest="memory: memory [11238,11244]"/>
  <match src="identifier: SUPPLY_CHANGE_DIVISOR [45266,45287]" dest="identifier: SUPPLY_CHANGE_DIVISOR [14423,14444]"/>
  <match src="identifier: balance [99047,99054]" dest="identifier: balance [37609,37616]"/>
  <match src="identifier: sender [80472,80478]" dest="identifier: sender [70433,70439]"/>
  <match src="{: { [9446,9447]" dest="{: { [10031,10032]"/>
  <match src="(: ( [53320,53321]" dest="(: ( [20410,20411]"/>
  <match src="return_type_definition [53376,53391]" dest="return_type_definition [20466,20481]"/>
  <match src="identifier: j [36292,36293]" dest="identifier: j [50873,50874]"/>
  <match src="identifier: to [55312,55314]" dest="identifier: to [22402,22404]"/>
  <match src="): ) [81744,81745]" dest="): ) [70973,70974]"/>
  <match src="/=: /= [36340,36342]" dest="/=: /= [50921,50923]"/>
  <match src="parameter [94092,94105]" dest="parameter [32656,32669]"/>
  <match src="state_mutability [96934,96938]" dest="state_mutability [35498,35502]"/>
  <match src="view: view [91633,91637]" dest="view: view [30197,30201]"/>
  <match src="address: address [54000,54007]" dest="address: address [21090,21097]"/>
  <match src=",: , [30862,30863]" dest=",: , [45443,45444]"/>
  <match src="number_literal: 0 [86071,86072]" dest="number_literal: 0 [72877,72878]"/>
  <match src="): ) [101673,101674]" dest="): ) [40235,40236]"/>
  <match src="(: ( [85472,85473]" dest="(: ( [72278,72279]"/>
  <match src="): ) [34141,34142]" dest="): ) [48722,48723]"/>
  <match src="public: public [92628,92634]" dest="public: public [31192,31198]"/>
  <match src="type_name [30873,30880]" dest="type_name [45454,45461]"/>
  <match src="visibility [68206,68214]" dest="visibility [62916,62924]"/>
  <match src="call_argument [100982,100988]" dest="call_argument [39544,39550]"/>
  <match src=",: , [2490,2491]" dest=",: , [3069,3070]"/>
  <match src="primitive_type [100134,100141]" dest="primitive_type [38696,38703]"/>
  <match src="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [15082,15245]" dest="comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [24873,25036]"/>
  <match src=",: , [1990,1991]" dest=",: , [2569,2570]"/>
  <match src="parameter [21466,21480]" dest="parameter [63228,63242]"/>
  <match src="(: ( [11366,11367]" dest="(: ( [11951,11952]"/>
  <match src="call_argument [10157,10161]" dest="call_argument [10742,10746]"/>
  <match src="memory: memory [91558,91564]" dest="memory: memory [30122,30128]"/>
  <match src="(: ( [93803,93804]" dest="(: ( [32367,32368]"/>
  <match src="external: external [53421,53429]" dest="external: external [20511,20519]"/>
  <match src=".: . [82383,82384]" dest=".: . [77773,77774]"/>
  <match src="): ) [96633,96634]" dest="): ) [35197,35198]"/>
  <match src="(: ( [52104,52105]" dest="(: ( [63651,63652]"/>
  <match src="&quot;: &quot; [22295,22296]" dest="&quot;: &quot; [62602,62603]"/>
  <match src="true [104533,104537]" dest="true [43095,43099]"/>
  <match src="yul_identifier [90508,90525]" dest="yul_identifier [75141,75158]"/>
  <match src="array_access [101957,102005]" dest="array_access [40519,40567]"/>
  <match src="type_cast_expression [89988,90002]" dest="type_cast_expression [74621,74635]"/>
  <match src="call_expression [35213,35236]" dest="call_expression [49794,49817]"/>
  <match src="call_struct_argument [8699,8723]" dest="call_struct_argument [9284,9308]"/>
  <match src="type_name [93121,93128]" dest="type_name [31685,31692]"/>
  <match src="): ) [92656,92657]" dest="): ) [31220,31221]"/>
  <match src="type_name [2456,2463]" dest="type_name [3035,3042]"/>
  <match src="primitive_type [43797,43804]" dest="primitive_type [12954,12961]"/>
  <match src="(: ( [34758,34759]" dest="(: ( [49339,49340]"/>
  <match src="call_expression [105828,105844]" dest="call_expression [67896,67912]"/>
  <match src="primitive_type [98560,98567]" dest="primitive_type [37122,37129]"/>
  <match src="): ) [8858,8859]" dest="): ) [9443,9444]"/>
  <match src="return: return [3139,3145]" dest="return: return [3718,3724]"/>
  <match src="return_type_definition [46802,46819]" dest="return_type_definition [15959,15976]"/>
  <match src="state_mutability [13893,13897]" dest="state_mutability [23684,23688]"/>
  <match src="pragma_value:  ABIEncoderV2 [1166,1179]" dest="pragma_value:  ABIEncoderV2 [1168,1181]"/>
  <match src="returns: returns [11315,11322]" dest="returns: returns [11900,11907]"/>
  <match src="(: ( [3115,3116]" dest="(: ( [3694,3695]"/>
  <match src="(: ( [49197,49198]" dest="(: ( [54910,54911]"/>
  <match src="member_expression [83825,83837]" dest="member_expression [58030,58042]"/>
  <match src="call_argument [80974,80979]" dest="call_argument [70349,70354]"/>
  <match src="parameter [1454,1463]" dest="parameter [2033,2042]"/>
  <match src="): ) [80688,80689]" dest="): ) [69821,69822]"/>
  <match src="=: = [36564,36565]" dest="=: = [51145,51146]"/>
  <match src="member_expression [99642,99667]" dest="member_expression [38204,38229]"/>
  <match src="type_name [92759,92766]" dest="type_name [31323,31330]"/>
  <match src="function_body [24928,24973]" dest="function_body [55148,55317]"/>
  <match src="[: [ [95547,95548]" dest="[: [ [34111,34112]"/>
  <match src="identifier: div [11378,11381]" dest="identifier: div [11963,11966]"/>
  <match src=",: , [89864,89865]" dest=",: , [74497,74498]"/>
  <match src="event_paramater [52455,52477]" dest="event_paramater [60302,60320]"/>
  <match src="uint256: uint256 [29413,29420]" dest="uint256: uint256 [43994,44001]"/>
  <match src="member_expression [8706,8716]" dest="member_expression [9291,9301]"/>
  <match src="): ) [98596,98597]" dest="): ) [37158,37159]"/>
  <match src="identifier: i [95459,95460]" dest="identifier: i [34023,34024]"/>
  <match src="): ) [10375,10376]" dest="): ) [10960,10961]"/>
  <match src="identifier: account [93202,93209]" dest="identifier: account [31766,31773]"/>
  <match src="): ) [38508,38509]" dest="): ) [53089,53090]"/>
  <match src=".: . [101362,101363]" dest=".: . [39924,39925]"/>
  <match src="parameter [95138,95151]" dest="parameter [33702,33715]"/>
  <match src="identifier: outstandingCouponsForEpoch [102800,102826]" dest="identifier: outstandingCouponsForEpoch [41362,41388]"/>
  <match src="for: for [97847,97850]" dest="for: for [36409,36412]"/>
  <match src="primitive_type [97851,97858]" dest="primitive_type [36413,36420]"/>
  <match src="identifier: epoch [95524,95529]" dest="identifier: epoch [34088,34093]"/>
  <match src="address: address [27623,27630]" dest="address: address [60183,60190]"/>
  <match src="return: return [96540,96546]" dest="return: return [35104,35110]"/>
  <match src="uint256: uint256 [38073,38080]" dest="uint256: uint256 [52654,52661]"/>
  <match src="primitive_type [2871,2878]" dest="primitive_type [3450,3457]"/>
  <match src="primitive_type [100684,100691]" dest="primitive_type [39246,39253]"/>
  <match src="(: ( [55445,55446]" dest="(: ( [22535,22536]"/>
  <match src="identifier: expiring [102488,102496]" dest="identifier: expiring [41050,41058]"/>
  <match src="): ) [85517,85518]" dest="): ) [72323,72324]"/>
  <match src="uint256: uint256 [44425,44432]" dest="uint256: uint256 [13582,13589]"/>
  <match src="type_name [11065,11072]" dest="type_name [11650,11657]"/>
  <match src="member_expression [47744,47756]" dest="member_expression [16901,16913]"/>
  <match src="member_expression [68310,68322]" dest="member_expression [78864,78876]"/>
  <match src="member_expression [94724,94738]" dest="member_expression [33288,33302]"/>
  <match src="): ) [95005,95006]" dest="): ) [33569,33570]"/>
  <match src="address: address [21520,21527]" dest="address: address [63282,63289]"/>
  <match src="public: public [71227,71233]" dest="public: public [80651,80657]"/>
  <match src="state_variable_declaration [88238,88259]" dest="state_variable_declaration [29081,29102]"/>
  <match src="(: ( [99599,99600]" dest="(: ( [38161,38162]"/>
  <match src="array_access [104026,104054]" dest="array_access [42588,42616]"/>
  <match src="internal: internal [10514,10522]" dest="internal: internal [11099,11107]"/>
  <match src=".: . [46497,46498]" dest=".: . [15654,15655]"/>
  <match src="primitive_type [2456,2463]" dest="primitive_type [3035,3042]"/>
  <match src="returns: returns [7567,7574]" dest="returns: returns [8152,8159]"/>
  <match src="return_statement [92892,92922]" dest="return_statement [31456,31486]"/>
  <match src="(: ( [103323,103324]" dest="(: ( [41885,41886]"/>
  <match src="call_expression [34033,34052]" dest="call_expression [48614,48633]"/>
  <match src="identifier: votes [96020,96025]" dest="identifier: votes [34584,34589]"/>
  <match src="primitive_type [46376,46383]" dest="primitive_type [15533,15540]"/>
  <match src="identifier: length [35824,35830]" dest="identifier: length [50405,50411]"/>
  <match src="type_name [8170,8177]" dest="type_name [8755,8762]"/>
  <match src="pragma_directive [1147,1180]" dest="pragma_directive [1149,1182]"/>
  <match src="uint256: uint256 [17500,17507]" dest="uint256: uint256 [17918,17925]"/>
  <match src="member_expression [102144,102168]" dest="member_expression [40706,40730]"/>
  <match src="return_statement [10113,10175]" dest="return_statement [10698,10760]"/>
  <match src="call_expression [33207,33233]" dest="call_expression [47788,47814]"/>
  <match src="[: [ [103435,103436]" dest="[: [ [41997,41998]"/>
  <match src="member_expression [96972,96989]" dest="member_expression [35536,35553]"/>
  <match src=".: . [95229,95230]" dest=".: . [33793,33794]"/>
  <match src="view: view [54724,54728]" dest="view: view [21814,21818]"/>
  <match src="expression_statement [101695,101753]" dest="expression_statement [40257,40315]"/>
  <match src="(: ( [47704,47705]" dest="(: ( [16861,16862]"/>
  <match src="visibility [92738,92744]" dest="visibility [31302,31308]"/>
  <match src="=: = [102631,102632]" dest="=: = [41193,41194]"/>
  <match src="visibility [98743,98751]" dest="visibility [37305,37313]"/>
  <match src="state_variable_declaration [45241,45296]" dest="state_variable_declaration [14398,14453]"/>
  <match src="visibility [102576,102584]" dest="visibility [41138,41146]"/>
  <match src="member_expression [102121,102133]" dest="member_expression [40683,40695]"/>
  <match src="[: [ [38815,38816]" dest="[: [ [53396,53397]"/>
  <match src="): ) [11482,11483]" dest="): ) [12067,12068]"/>
  <match src="function_definition [8742,9110]" dest="function_definition [9327,9695]"/>
  <match src="function_definition [36955,37936]" dest="function_definition [51536,52517]"/>
  <match src="): ) [102507,102508]" dest="): ) [41069,41070]"/>
  <match src="type_name [27674,27681]" dest="type_name [60062,60069]"/>
  <match src="&quot;: &quot; [27883,27884]" dest="&quot;: &quot; [77285,77286]"/>
  <match src="uint256: uint256 [50836,50843]" dest="uint256: uint256 [25995,26002]"/>
  <match src="visibility [7790,7798]" dest="visibility [8375,8383]"/>
  <match src="(: ( [98963,98964]" dest="(: ( [37525,37526]"/>
  <match src="member_expression [99563,99599]" dest="member_expression [38125,38161]"/>
  <match src="identifier: recipient [52062,52071]" dest="identifier: recipient [63569,63578]"/>
  <match src="parameter [29844,29856]" dest="parameter [44425,44437]"/>
  <match src="contract_body [1203,6034]" dest="contract_body [1782,6613]"/>
  <match src="&quot;: &quot; [82721,82722]" dest="&quot;: &quot; [58368,58369]"/>
  <match src="type_name [87216,87225]" dest="type_name [28059,28068]"/>
  <match src="identifier: sub [104062,104065]" dest="identifier: sub [42624,42627]"/>
  <match src="function: function [46436,46444]" dest="function: function [15593,15601]"/>
  <match src="identifier: State [87442,87447]" dest="identifier: State [28285,28290]"/>
  <match src="string_literal [105689,105711]" dest="string_literal [67757,67779]"/>
  <match src="identifier: balanceOfBonded [93242,93257]" dest="identifier: balanceOfBonded [31806,31821]"/>
  <match src="call_expression [84059,84189]" dest="call_expression [77922,78031]"/>
  <match src="member_expression [103988,104005]" dest="member_expression [42550,42567]"/>
  <match src="identifier: payloadB [34759,34767]" dest="identifier: payloadB [49340,49348]"/>
  <match src=".: . [73575,73576]" dest=".: . [78912,78913]"/>
  <match src="): ) [31905,31906]" dest="): ) [46486,46487]"/>
  <match src=",: , [5306,5307]" dest=",: , [5885,5886]"/>
  <match src="}: } [86082,86083]" dest="}: } [72888,72889]"/>
  <match src="identifier: _state [98763,98769]" dest="identifier: _state [37325,37331]"/>
  <match src="identifier: approve [103656,103663]" dest="identifier: approve [42218,42225]"/>
  <match src="identifier: amount [21474,21480]" dest="identifier: amount [63236,63242]"/>
  <match src="identifier: candidate [104268,104277]" dest="identifier: candidate [42830,42839]"/>
  <match src="type_name [5229,5236]" dest="type_name [5808,5815]"/>
  <match src="primitive_type [67166,67173]" dest="primitive_type [65817,65824]"/>
  <match src="return: return [47071,47077]" dest="return: return [16228,16234]"/>
  <match src="}: } [45917,45918]" dest="}: } [15074,15075]"/>
  <match src="member_expression [99040,99059]" dest="member_expression [37602,37621]"/>
  <match src="identifier: COMMA [32623,32628]" dest="identifier: COMMA [47204,47209]"/>
  <match src="type_name [9168,9172]" dest="type_name [9753,9757]"/>
  <match src="call_argument [72063,72079]" dest="call_argument [58112,58125]"/>
  <match src="identifier: amount [24913,24919]" dest="identifier: amount [18208,18214]"/>
  <match src="uint256: uint256 [24739,24746]" dest="uint256: uint256 [17946,17953]"/>
  <match src="internal: internal [46202,46210]" dest="internal: internal [15359,15367]"/>
  <match src="parameter [53385,53390]" dest="parameter [20475,20480]"/>
  <match src=",: , [52111,52112]" dest=",: , [63658,63659]"/>
  <match src="identifier: reason [99388,99394]" dest="identifier: reason [37950,37956]"/>
  <match src="view: view [96793,96797]" dest="view: view [35357,35361]"/>
  <match src="uint256: uint256 [32910,32917]" dest="uint256: uint256 [47491,47498]"/>
  <match src="identifier: DAO_EXIT_LOCKUP_EPOCHS [44931,44953]" dest="identifier: DAO_EXIT_LOCKUP_EPOCHS [14088,14110]"/>
  <match src="function: function [46994,47002]" dest="function: function [16151,16159]"/>
  <match src="}: } [87241,87242]" dest="}: } [28084,28085]"/>
  <match src="visibility [92414,92420]" dest="visibility [30978,30984]"/>
  <match src=".: . [82092,82093]" dest=".: . [70558,70559]"/>
  <match src="call_expression [80341,80355]" dest="call_expression [55843,55857]"/>
  <match src="identifier: Provide [80043,80050]" dest="identifier: Commit [76171,76177]"/>
  <match src="identifier: epoch [102344,102349]" dest="identifier: epoch [40906,40911]"/>
  <match src="): ) [54236,54237]" dest="): ) [21326,21327]"/>
  <match src="call_argument [52054,52060]" dest="call_argument [63471,63477]"/>
  <match src="(: ( [100981,100982]" dest="(: ( [39543,39544]"/>
  <match src="primitive_type [89988,89994]" dest="primitive_type [74621,74627]"/>
  <match src="&quot;: &quot; [82440,82441]" dest="&quot;: &quot; [78427,78428]"/>
  <match src="using_directive [71036,71063]" dest="using_directive [54468,54495]"/>
  <match src="type_name [94662,94669]" dest="type_name [33226,33233]"/>
  <match src="identifier: value [79928,79933]" dest="identifier: value [69044,69049]"/>
  <match src="call_argument [24958,24964]" dest="call_argument [55186,55192]"/>
  <match src="type_name [1519,1526]" dest="type_name [2098,2105]"/>
  <match src="identifier: add [101540,101543]" dest="identifier: add [40102,40105]"/>
  <match src="identifier: balance [92906,92913]" dest="identifier: balance [31470,31477]"/>
  <match src="contract: contract [91128,91136]" dest="contract: contract [29692,29700]"/>
  <match src="visibility [27718,27725]" dest="visibility [58271,58278]"/>
  <match src="identifier: result [38203,38209]" dest="identifier: result [52784,52790]"/>
  <match src="identifier: balanceOf [72034,72043]" dest="identifier: balanceOf [58066,58075]"/>
  <match src="identifier: amount [22404,22410]" dest="identifier: amount [58834,58840]"/>
  <match src="parameter [10400,10404]" dest="parameter [10985,10989]"/>
  <match src="type_name [69902,69909]" dest="type_name [68952,68959]"/>
  <match src="call_argument [21612,21613]" dest="call_argument [63382,63383]"/>
  <match src="}: } [52341,52342]" dest="}: } [63807,63808]"/>
  <match src="assignment_expression [38868,38878]" dest="assignment_expression [53449,53459]"/>
  <match src="type_name [70139,70146]" dest="type_name [64768,64775]"/>
  <match src="): ) [101578,101579]" dest="): ) [40140,40141]"/>
  <match src="): ) [95460,95461]" dest="): ) [34024,34025]"/>
  <match src=",: , [34611,34612]" dest=",: , [49192,49193]"/>
  <match src="memory: memory [8029,8035]" dest="memory: memory [8614,8620]"/>
  <match src="identifier: strategy [94758,94766]" dest="identifier: strategy [33322,33330]"/>
  <match src="uint256: uint256 [91866,91873]" dest="uint256: uint256 [30430,30437]"/>
  <match src="): ) [8616,8617]" dest="): ) [9201,9202]"/>
  <match src="&quot;: &quot; [26884,26885]" dest="&quot;: &quot; [76609,76610]"/>
  <match src="public: public [50916,50922]" dest="public: public [26075,26081]"/>
  <match src="): ) [8103,8104]" dest="): ) [8688,8689]"/>
  <match src="type_name [86840,86867]" dest="type_name [27683,27710]"/>
  <match src="return_type_definition [54729,54746]" dest="return_type_definition [21819,21836]"/>
  <match src=",: , [54548,54549]" dest=",: , [21638,21639]"/>
  <match src="parameter [53707,53717]" dest="parameter [20797,20807]"/>
  <match src="call_expression [83825,83995]" dest="call_expression [58030,58217]"/>
  <match src="primitive_type [98242,98249]" dest="primitive_type [36804,36811]"/>
  <match src="): ) [54830,54831]" dest="): ) [21920,21921]"/>
  <match src="memory: memory [10089,10095]" dest="memory: memory [10674,10680]"/>
  <match src=".: . [103826,103827]" dest=".: . [42388,42389]"/>
  <match src="): ) [103866,103867]" dest="): ) [42428,42429]"/>
  <match src="visibility [44682,44689]" dest="visibility [13839,13846]"/>
  <match src="function_definition [24870,24973]" dest="function_definition [55081,55317]"/>
  <match src="identifier: b [9582,9583]" dest="identifier: b [10167,10168]"/>
  <match src="(: ( [103059,103060]" dest="(: ( [41621,41622]"/>
  <match src="}: } [91921,91922]" dest="}: } [30485,30486]"/>
  <match src="identifier: FILE [105670,105674]" dest="identifier: FILE [67738,67742]"/>
  <match src="returns: returns [54619,54626]" dest="returns: returns [21709,21716]"/>
  <match src="type_name [21431,21438]" dest="type_name [63178,63185]"/>
  <match src="call_argument [33417,33422]" dest="call_argument [47998,48003]"/>
  <match src="}: } [92490,92491]" dest="}: } [31054,31055]"/>
  <match src="visibility [81025,81033]" dest="visibility [69867,69875]"/>
  <match src="primitive_type [45374,45381]" dest="primitive_type [14531,14538]"/>
  <match src="number_literal: 24e18 [45290,45295]" dest="number_literal: 24e18 [14447,14452]"/>
  <match src="{: { [101882,101883]" dest="{: { [40444,40445]"/>
  <match src="function_definition [102187,102291]" dest="function_definition [40749,40853]"/>
  <match src="parameter [90236,90261]" dest="parameter [74869,74894]"/>
  <match src="}: } [67685,67686]" dest="}: } [65976,65977]"/>
  <match src=".: . [102754,102755]" dest=".: . [41316,41317]"/>
  <match src="}: } [80696,80697]" dest="}: } [69829,69830]"/>
  <match src="member_expression [8074,8084]" dest="member_expression [8659,8669]"/>
  <match src="address: address [101040,101047]" dest="address: address [39602,39609]"/>
  <match src="expression_statement [82199,82253]" dest="expression_statement [62264,62323]"/>
  <match src="internal: internal [101474,101482]" dest="internal: internal [40036,40044]"/>
  <match src="primitive_type [22836,22843]" dest="primitive_type [55349,55356]"/>
  <match src="internal: internal [7088,7096]" dest="internal: internal [7673,7681]"/>
  <match src="state_mutability [10386,10390]" dest="state_mutability [10971,10975]"/>
  <match src="address: address [27980,27987]" dest="address: address [55106,55113]"/>
  <match src="member_expression [94030,94044]" dest="member_expression [32594,32608]"/>
  <match src="uint256: uint256 [3765,3772]" dest="uint256: uint256 [4344,4351]"/>
  <match src="visibility [96927,96933]" dest="visibility [35491,35497]"/>
  <match src="primitive_type [8792,8799]" dest="primitive_type [9377,9384]"/>
  <match src="string_literal [57391,57428]" dest="string_literal [71141,71177]"/>
  <match src="(: ( [36130,36131]" dest="(: ( [50711,50712]"/>
  <match src="type_name [101040,101047]" dest="type_name [39602,39609]"/>
  <match src="parameter [31585,31599]" dest="parameter [46166,46180]"/>
  <match src="[: [ [104005,104006]" dest="[: [ [42567,42568]"/>
  <match src=".: . [66554,66555]" dest=".: . [64885,64886]"/>
  <match src=".: . [8519,8520]" dest=".: . [9104,9105]"/>
  <match src="call_argument [32365,32730]" dest="call_argument [46946,47311]"/>
  <match src="): ) [1962,1963]" dest="): ) [2541,2542]"/>
  <match src="identifier: nonces [53993,53999]" dest="identifier: nonces [21083,21089]"/>
  <match src="identifier: require [89971,89978]" dest="identifier: require [74604,74611]"/>
  <match src="&quot;: &quot; [21532,21533]" dest="&quot;: &quot; [63294,63295]"/>
  <match src="internal: internal [33706,33714]" dest="internal: internal [48287,48295]"/>
  <match src="type_name [54550,54557]" dest="type_name [21640,21647]"/>
  <match src=".: . [95381,95382]" dest=".: . [33945,33946]"/>
  <match src="member_expression [102391,102419]" dest="member_expression [40953,40981]"/>
  <match src="call_argument [30626,30632]" dest="call_argument [45207,45213]"/>
  <match src="identifier: Require [68310,68317]" dest="identifier: Require [78864,78871]"/>
  <match src="identifier: sender [80566,80572]" dest="identifier: sender [69723,69729]"/>
  <match src="interface: interface [53030,53039]" dest="interface: interface [20120,20129]"/>
  <match src="visibility [93138,93144]" dest="visibility [31702,31708]"/>
  <match src=".: . [72033,72034]" dest=".: . [58065,58066]"/>
  <match src="identifier: div [11103,11106]" dest="identifier: div [11688,11691]"/>
  <match src="identifier: isNominated [96755,96766]" dest="identifier: isNominated [35319,35330]"/>
  <match src="internal: internal [75223,75231]" dest="internal: internal [55576,55584]"/>
  <match src="type_name [33609,33613]" dest="type_name [48190,48194]"/>
  <match src="memory: memory [8579,8585]" dest="memory: memory [9164,9170]"/>
  <match src="state_mutability [92421,92425]" dest="state_mutability [30985,30989]"/>
  <match src=".: . [98624,98625]" dest=".: . [37186,37187]"/>
  <match src="{: { [10692,10693]" dest="{: { [11277,11278]"/>
  <match src="}: } [105466,105467]" dest="}: } [67534,67535]"/>
  <match src="identifier: Pool [79356,79360]" dest="identifier: Bonding [68642,68649]"/>
  <match src="for: for [71051,71054]" dest="for: for [54483,54486]"/>
  <match src="state_mutability [32980,32984]" dest="state_mutability [47561,47565]"/>
  <match src=".: . [103848,103849]" dest=".: . [42410,42411]"/>
  <match src="pure: pure [47037,47041]" dest="pure: pure [16194,16198]"/>
  <match src="}: } [2032,2033]" dest="}: } [2611,2612]"/>
  <match src="primitive_type [95917,95924]" dest="primitive_type [34481,34488]"/>
  <match src=",: , [54478,54479]" dest=",: , [21568,21569]"/>
  <match src="call_argument [80581,80616]" dest="call_argument [69738,69776]"/>
  <match src="uint256: uint256 [95451,95458]" dest="uint256: uint256 [34015,34022]"/>
  <match src="): ) [37003,37004]" dest="): ) [51584,51585]"/>
  <match src="identifier: Decimal [91200,91207]" dest="identifier: Decimal [29764,29771]"/>
  <match src="identifier: payloadA [32202,32210]" dest="identifier: payloadA [46783,46791]"/>
  <match src="string [1563,1592]" dest="string [2142,2171]"/>
  <match src="library_declaration [85047,86083]" dest="library_declaration [71853,72889]"/>
  <match src="address: address [13490,13497]" dest="address: address [23281,23288]"/>
  <match src="(: ( [7616,7617]" dest="(: ( [8201,8202]"/>
  <match src="}: } [91813,91814]" dest="}: } [30377,30378]"/>
  <match src="identifier: stringifyTruncated [30135,30153]" dest="identifier: stringifyTruncated [44716,44734]"/>
  <match src="parameter [78368,78382]" dest="parameter [77883,77900]"/>
  <match src="member_expression [103820,103859]" dest="member_expression [42382,42421]"/>
  <match src="): ) [102216,102217]" dest="): ) [40778,40779]"/>
  <match src="user_defined_type [89001,89006]" dest="user_defined_type [73634,73639]"/>
  <match src=".: . [82912,82913]" dest=".: . [78136,78137]"/>
  <match src="uint: uint [54628,54632]" dest="uint: uint [21718,21722]"/>
  <match src="type_name [43976,43983]" dest="type_name [13133,13140]"/>
  <match src="identifier: mul [93450,93453]" dest="identifier: mul [32014,32017]"/>
  <match src="string [84166,84178]" dest="string [78005,78020]"/>
  <match src="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [4767,5210]" dest="comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [5346,5789]"/>
  <match src="call_argument [8965,8986]" dest="call_argument [9550,9571]"/>
  <match src="uint256: uint256 [87508,87515]" dest="uint256: uint256 [28351,28358]"/>
  <match src="if_statement [35619,35921]" dest="if_statement [50200,50502]"/>
  <match src="string: string [101088,101094]" dest="string: string [39650,39656]"/>
  <match src="return: return [93179,93185]" dest="return: return [31743,31749]"/>
  <match src="(: ( [47455,47456]" dest="(: ( [16612,16613]"/>
  <match src="uint256: uint256 [6985,6992]" dest="uint256: uint256 [7570,7577]"/>
  <match src="identifier: amount [51826,51832]" dest="identifier: amount [54605,54611]"/>
  <match src="state_mutability [54841,54845]" dest="state_mutability [21931,21935]"/>
  <match src="expression_statement [68310,68410]" dest="expression_statement [70710,70781]"/>
  <match src="call_argument [10726,10727]" dest="call_argument [11311,11312]"/>
  <match src="type_cast_expression [52130,52141]" dest="type_cast_expression [63675,63686]"/>
  <match src="function: function [92391,92399]" dest="function: function [30955,30963]"/>
  <match src="identifier: D256 [10909,10913]" dest="identifier: D256 [11494,11498]"/>
  <match src="primitive_type [32221,32228]" dest="primitive_type [46802,46809]"/>
  <match src="return: return [35892,35898]" dest="return: return [50473,50479]"/>
  <match src="): ) [13914,13915]" dest="): ) [23705,23706]"/>
  <match src=",: , [33422,33423]" dest=",: , [48003,48004]"/>
  <match src="}: } [86079,86080]" dest="}: } [72885,72886]"/>
  <match src="type_name [1921,1928]" dest="type_name [2500,2507]"/>
  <match src="identifier: stringify [36964,36973]" dest="identifier: stringify [51545,51554]"/>
  <match src="uint256: uint256 [87861,87868]" dest="uint256: uint256 [28704,28711]"/>
  <match src=".: . [99855,99856]" dest=".: . [38417,38418]"/>
  <match src="event_paramater [53158,53178]" dest="event_paramater [20248,20268]"/>
  <match src="): ) [100698,100699]" dest="): ) [39260,39261]"/>
  <match src="identifier: Require [81822,81829]" dest="identifier: Require [79029,79036]"/>
  <match src="state_variable_declaration [45308,45361]" dest="state_variable_declaration [14465,14518]"/>
  <match src=".: . [9482,9483]" dest=".: . [10067,10068]"/>
  <match src="number_literal: 66e16 [44727,44732]" dest="number_literal: 66e16 [13884,13889]"/>
  <match src="(: ( [83837,83838]" dest="(: ( [58042,58043]"/>
  <match src="(: ( [82949,82950]" dest="(: ( [76379,76380]"/>
  <match src="source_file [0,107449]" dest="source_file [0,81122]"/>
  <match src="type_name [64391,64398]" dest="type_name [59855,59862]"/>
  <match src="internal: internal [28436,28444]" dest="internal: internal [54852,54860]"/>
  <match src="(: ( [83899,83900]" dest="(: ( [58123,58124]"/>
  <match src="(: ( [94307,94308]" dest="(: ( [32871,32872]"/>
  <match src="variable_declaration_statement [93316,93352]" dest="variable_declaration_statement [31880,31916]"/>
  <match src="(: ( [78283,78284]" dest="(: ( [59084,59085]"/>
  <match src="call_argument [9734,9740]" dest="call_argument [10319,10325]"/>
  <match src="state_mutability [46211,46215]" dest="state_mutability [15368,15372]"/>
  <match src="(: ( [35349,35350]" dest="(: ( [49930,49931]"/>
  <match src="function: function [102187,102195]" dest="function: function [40749,40757]"/>
  <match src="primitive_type [39215,39220]" dest="primitive_type [53796,53801]"/>
  <match src="identifier: Candidate [95957,95966]" dest="identifier: Candidate [34521,34530]"/>
  <match src="type_name [55126,55133]" dest="type_name [22216,22223]"/>
  <match src="identifier: Status [105643,105649]" dest="identifier: Status [67711,67717]"/>
  <match src="internal: internal [46467,46475]" dest="internal: internal [15624,15632]"/>
  <match src="private: private [43875,43882]" dest="private: private [13032,13039]"/>
  <match src="parameter [11207,11221]" dest="parameter [11792,11806]"/>
  <match src="): ) [37521,37522]" dest="): ) [52102,52103]"/>
  <match src="function: function [81674,81682]" dest="function: function [70371,70379]"/>
  <match src=",: , [84151,84152]" dest=",: , [77990,77991]"/>
  <match src="): ) [33542,33543]" dest="): ) [48123,48124]"/>
  <match src="parameter [7741,7757]" dest="parameter [8326,8342]"/>
  <match src="parameter [99774,99789]" dest="parameter [38336,38351]"/>
  <match src="visibility [92101,92107]" dest="visibility [30665,30671]"/>
  <match src="visibility [53490,53498]" dest="visibility [20580,20588]"/>
  <match src="return_statement [1606,1615]" dest="return_statement [2185,2194]"/>
  <match src="struct_member [86970,86990]" dest="struct_member [27813,27833]"/>
  <match src="function_definition [50929,50998]" dest="function_definition [26088,26157]"/>
  <match src="call_argument [104293,104302]" dest="call_argument [42855,42864]"/>
  <match src="return_statement [95503,95551]" dest="return_statement [34067,34115]"/>
  <match src="{: { [91566,91567]" dest="{: { [30130,30131]"/>
  <match src="internal: internal [29894,29902]" dest="internal: internal [44475,44483]"/>
  <match src="primitive_type [92004,92011]" dest="primitive_type [30568,30575]"/>
  <match src="primitive_type [74673,74680]" dest="primitive_type [55123,55130]"/>
  <match src="return_type_definition [54970,54984]" dest="return_type_definition [22060,22074]"/>
  <match src="primitive_type [64569,64576]" dest="primitive_type [76095,76102]"/>
  <match src="type_name [93258,93265]" dest="type_name [31822,31829]"/>
  <match src="identifier: accounts [88087,88095]" dest="identifier: accounts [28930,28938]"/>
  <match src="private: private [38981,38988]" dest="private: private [53562,53569]"/>
  <match src="sstore: sstore [90495,90501]" dest="sstore: sstore [75128,75134]"/>
  <match src="identifier: msg [82380,82383]" dest="identifier: msg [77770,77773]"/>
  <match src="identifier: reserve0 [54863,54871]" dest="identifier: reserve0 [21953,21961]"/>
  <match src="call_argument [56418,56419]" dest="call_argument [78114,78115]"/>
  <match src="bytes: bytes [36097,36102]" dest="bytes: bytes [50678,50683]"/>
  <match src="view: view [96368,96372]" dest="view: view [34932,34936]"/>
  <match src="user_defined_type [106586,106596]" dest="user_defined_type [75795,75805]"/>
  <match src="parameter [101851,101871]" dest="parameter [40413,40433]"/>
  <match src="struct_declaration [87760,87936]" dest="struct_declaration [28603,28779]"/>
  <match src="call_argument [81883,81887]" dest="call_argument [79174,79178]"/>
  <match src="array_access [101893,101915]" dest="array_access [40455,40477]"/>
  <match src="identifier: outstanding [100896,100907]" dest="identifier: outstanding [39458,39469]"/>
  <match src="identifier: FILE [82702,82706]" dest="identifier: FILE [58349,58353]"/>
  <match src="(: ( [21611,21612]" dest="(: ( [63381,63382]"/>
  <match src="contract_declaration [97790,104548]" dest="contract_declaration [36352,43110]"/>
  <match src=".: . [100977,100978]" dest=".: . [39539,39540]"/>
  <match src="(: ( [30458,30459]" dest="(: ( [45039,45040]"/>
  <match src="}: } [37902,37903]" dest="}: } [52483,52484]"/>
  <match src="address: address [55304,55311]" dest="address: address [22394,22401]"/>
  <match src="comment: /* DAO */ [44824,44833]" dest="comment: /* DAO */ [13981,13990]"/>
  <match src=",: , [97902,97903]" dest=",: , [36464,36465]"/>
  <match src="type_cast_expression [39115,39140]" dest="type_cast_expression [53696,53721]"/>
  <match src="(: ( [79822,79823]" dest="(: ( [80567,80568]"/>
  <match src="[: [ [100837,100838]" dest="[: [ [39399,39400]"/>
  <match src="user_defined_type [50808,50814]" dest="user_defined_type [25967,25973]"/>
  <match src="identifier: dollar [77808,77814]" dest="identifier: dollar [57740,57746]"/>
  <match src="external: external [54771,54779]" dest="external: external [21861,21869]"/>
  <match src="(: ( [55097,55098]" dest="(: ( [22187,22188]"/>
  <match src="function_definition [103699,103875]" dest="function_definition [42261,42437]"/>
  <match src="identifier: sender [52105,52111]" dest="identifier: sender [63652,63658]"/>
  <match src="primitive_type [13509,13516]" dest="primitive_type [23300,23307]"/>
  <match src="event_paramater [79880,79903]" dest="event_paramater [68996,69019]"/>
  <match src="(: ( [52276,52277]" dest="(: ( [63728,63729]"/>
  <match src="call_argument [93464,93471]" dest="call_argument [32028,32035]"/>
  <match src="address: address [80051,80058]" dest="address: address [76178,76185]"/>
  <match src="expression_statement [100440,100526]" dest="expression_statement [39002,39088]"/>
  <match src="): ) [92335,92336]" dest="): ) [30899,30900]"/>
  <match src="primitive_type [77697,77704]" dest="primitive_type [61778,61785]"/>
  <match src="contract: contract [87004,87012]" dest="contract: contract [27847,27855]"/>
  <match src="}: } [101586,101587]" dest="}: } [40148,40149]"/>
  <match src="(: ( [100509,100510]" dest="(: ( [39071,39072]"/>
  <match src="primitive_type [27674,27681]" dest="primitive_type [60062,60069]"/>
  <match src="primitive_type [33652,33659]" dest="primitive_type [48233,48240]"/>
  <match src="function: function [85453,85461]" dest="function: function [72259,72267]"/>
  <match src="identifier: self [10974,10978]" dest="identifier: self [11559,11563]"/>
  <match src="parameter [55126,55136]" dest="parameter [22216,22226]"/>
  <match src="identifier: self [8706,8710]" dest="identifier: self [9291,9295]"/>
  <match src="(: ( [36096,36097]" dest="(: ( [50677,50678]"/>
  <match src="array_access [93693,93732]" dest="array_access [32257,32296]"/>
  <match src="uint256: uint256 [11207,11214]" dest="uint256: uint256 [11792,11799]"/>
  <match src="return_statement [39203,39251]" dest="return_statement [53784,53832]"/>
  <match src="identifier: epoch [93726,93731]" dest="identifier: epoch [32290,32295]"/>
  <match src="interface_declaration [12934,15569]" dest="interface_declaration [22725,25360]"/>
  <match src="): ) [2846,2847]" dest="): ) [3425,3426]"/>
  <match src="function: function [32102,32110]" dest="function: function [46683,46691]"/>
  <match src="function_body [90271,90544]" dest="function_body [74904,75177]"/>
  <match src="return: return [46678,46684]" dest="return: return [15835,15841]"/>
  <match src="identifier: _state [101242,101248]" dest="identifier: _state [39804,39810]"/>
  <match src="identifier: value [46699,46704]" dest="identifier: value [15856,15861]"/>
  <match src="function_body [47425,47488]" dest="function_body [16582,16645]"/>
  <match src="type_name [54437,54441]" dest="type_name [21527,21531]"/>
  <match src="type_name [45625,45632]" dest="type_name [14782,14789]"/>
  <match src="string: string [53321,53327]" dest="string: string [20411,20417]"/>
  <match src="parameter [8847,8858]" dest="parameter [9432,9443]"/>
  <match src="call_argument [32623,32628]" dest="call_argument [47204,47209]"/>
  <match src="binary_expression [3207,3212]" dest="binary_expression [3786,3791]"/>
  <match src="parameter [8170,8179]" dest="parameter [8755,8764]"/>
  <match src="): ) [9238,9239]" dest="): ) [9823,9824]"/>
  <match src="array_access [104357,104381]" dest="array_access [42919,42943]"/>
  <match src="call_argument [82932,82970]" dest="call_argument [76370,76395]"/>
  <match src=",: , [82970,82971]" dest=",: , [78175,78176]"/>
  <match src="uint256: uint256 [49320,49327]" dest="uint256: uint256 [55897,55904]"/>
  <match src="returns: returns [95747,95754]" dest="returns: returns [34311,34318]"/>
  <match src="return: return [98192,98198]" dest="return: return [36754,36760]"/>
  <match src="(: ( [82379,82380]" dest="(: ( [77769,77770]"/>
  <match src="identifier: newImplementation [90329,90346]" dest="identifier: newImplementation [74962,74979]"/>
  <match src="): ) [86044,86045]" dest="): ) [72850,72851]"/>
  <match src="identifier: incrementBalanceOfStaged [100092,100116]" dest="identifier: incrementBalanceOfStaged [38654,38678]"/>
  <match src="{: { [46246,46247]" dest="{: { [15403,15404]"/>
  <match src="solidity_version_comparison_operator [1136,1138]" dest="solidity_version_comparison_operator [1138,1140]"/>
  <match src="type_name [29413,29420]" dest="type_name [43994,44001]"/>
  <match src="=: = [37303,37304]" dest="=: = [51884,51885]"/>
  <match src="parameter [94413,94420]" dest="parameter [32977,32984]"/>
  <match src="identifier: balance [99954,99961]" dest="identifier: balance [38516,38523]"/>
  <match src="call_argument [101544,101578]" dest="call_argument [40106,40140]"/>
  <match src="identifier: Setters [105152,105159]" dest="identifier: Setters [67220,67227]"/>
  <match src="function_definition [35017,36002]" dest="function_definition [49598,50583]"/>
  <match src="variable_declaration [65942,65965]" dest="variable_declaration [78044,78061]"/>
  <match src="call_argument [34033,34052]" dest="call_argument [48614,48633]"/>
  <match src="identifier: candidate [96719,96728]" dest="identifier: candidate [35283,35292]"/>
  <match src="member_expression [84420,84432]" dest="member_expression [76846,76858]"/>
  <match src="(: ( [33744,33745]" dest="(: ( [48325,48326]"/>
  <match src="return_statement [45540,45552]" dest="return_statement [14697,14709]"/>
  <match src="variable_declaration_statement [9003,9017]" dest="variable_declaration_statement [9588,9602]"/>
  <match src="return: return [36158,36164]" dest="return: return [50739,50745]"/>
  <match src="parameter [45984,45991]" dest="parameter [15141,15148]"/>
  <match src="): ) [95181,95182]" dest="): ) [33745,33746]"/>
  <match src="): ) [89837,89838]" dest="): ) [74470,74471]"/>
  <match src="state_mutability [4486,4490]" dest="state_mutability [5065,5069]"/>
  <match src="call_expression [100560,100601]" dest="call_expression [39122,39163]"/>
  <match src="bool: bool [96807,96811]" dest="bool: bool [35371,35375]"/>
  <match src="identifier: staged [100551,100557]" dest="identifier: staged [39113,39119]"/>
  <match src="user_defined_type [94433,94456]" dest="user_defined_type [32997,33020]"/>
  <match src="parameter [47857,47864]" dest="parameter [17014,17021]"/>
  <match src="member_expression [78258,78283]" dest="member_expression [59071,59084]"/>
  <match src="modifier_definition [105531,105744]" dest="modifier_definition [67599,67812]"/>
  <match src="uint256: uint256 [99492,99499]" dest="uint256: uint256 [38054,38061]"/>
  <match src="uint32: uint32 [54891,54897]" dest="uint32: uint32 [21981,21987]"/>
  <match src="uint256: uint256 [32221,32228]" dest="uint256: uint256 [46802,46809]"/>
  <match src="user_defined_type [9783,9787]" dest="user_defined_type [10368,10372]"/>
  <match src="{: { [7285,7286]" dest="{: { [7870,7871]"/>
  <match src="identifier: add [7884,7887]" dest="identifier: add [8469,8472]"/>
  <match src="type_name [96908,96915]" dest="type_name [35472,35479]"/>
  <match src="mstore: mstore [35809,35815]" dest="mstore: mstore [50390,50396]"/>
  <match src="parameter [7341,7350]" dest="parameter [7926,7935]"/>
  <match src="function_definition [98530,98691]" dest="function_definition [37092,37253]"/>
  <match src="pure: pure [55677,55681]" dest="pure: pure [17977,17981]"/>
  <match src="return_statement [65801,65831]" dest="return_statement [66543,66564]"/>
  <match src="identifier: timestamp [94939,94948]" dest="identifier: timestamp [33503,33512]"/>
  <match src="): ) [83900,83901]" dest="): ) [58124,58125]"/>
  <match src="{: { [45763,45764]" dest="{: { [14920,14921]"/>
  <match src="member_expression [80671,80681]" dest="member_expression [69804,69814]"/>
  <match src="member_expression [73540,73586]" dest="member_expression [78891,78916]"/>
  <match src="number_literal: 0 [4599,4600]" dest="number_literal: 0 [5178,5179]"/>
  <match src="contract_declaration [87631,88212]" dest="contract_declaration [28474,29055]"/>
  <match src="uint256: uint256 [87890,87897]" dest="uint256: uint256 [28733,28740]"/>
  <match src="visibility [47028,47036]" dest="visibility [16185,16193]"/>
  <match src="primitive_type [18146,18153]" dest="primitive_type [55736,55743]"/>
  <match src="(: ( [53543,53544]" dest="(: ( [20633,20634]"/>
  <match src="(: ( [82511,82512]" dest="(: ( [70822,70823]"/>
  <match src="identifier: result [35623,35629]" dest="identifier: result [50204,50210]"/>
  <match src=",: , [102349,102350]" dest=",: , [40911,40912]"/>
  <match src="identifier: account [93984,93991]" dest="identifier: account [32548,32555]"/>
  <match src="internal: internal [47381,47389]" dest="internal: internal [16538,16546]"/>
  <match src="return_type_definition [77728,77754]" dest="return_type_definition [55925,55960]"/>
  <match src="identifier: expiration [102468,102478]" dest="identifier: expiration [41030,41040]"/>
  <match src="memory: memory [89872,89878]" dest="memory: memory [74505,74511]"/>
  <match src="parameter [14602,14617]" dest="parameter [24393,24408]"/>
  <match src="solidity_version: 0.5.17 [1138,1144]" dest="solidity_version: 0.5.17 [1140,1146]"/>
  <match src="identifier: price [67487,67492]" dest="identifier: price [66350,66355]"/>
  <match src="identifier: sender [80857,80863]" dest="identifier: sender [70607,70613]"/>
  <match src="}: } [46160,46161]" dest="}: } [15317,15318]"/>
  <match src="): ) [53419,53420]" dest="): ) [20509,20510]"/>
  <match src="type_name [75207,75214]" dest="type_name [55560,55567]"/>
  <match src="type_name [66509,66521]" dest="type_name [19749,19761]"/>
  <match src="function_body [31663,32094]" dest="function_body [46244,46675]"/>
  <match src="array_access [95344,95364]" dest="array_access [33908,33928]"/>
  <match src="call_expression [31135,31159]" dest="call_expression [45716,45740]"/>
  <match src="function_body [45763,45918]" dest="function_body [14920,15075]"/>
  <match src="primitive_type [29660,29664]" dest="primitive_type [44241,44245]"/>
  <match src="parameter [95483,95490]" dest="parameter [34047,34054]"/>
  <match src="external: external [83731,83739]" dest="external: external [63244,63252]"/>
  <match src="call_argument [37362,37376]" dest="call_argument [51943,51957]"/>
  <match src="(: ( [53782,53783]" dest="(: ( [20872,20873]"/>
  <match src="array_access [95055,95075]" dest="array_access [33619,33639]"/>
  <match src="emit_statement [82482,82543]" dest="emit_statement [70793,70848]"/>
  <match src="function_body [38050,38923]" dest="function_body [52631,53504]"/>
  <match src="returns: returns [53504,53511]" dest="returns: returns [20594,20601]"/>
  <match src="uint256: uint256 [101072,101079]" dest="uint256: uint256 [39634,39641]"/>
  <match src="return_type_definition [47165,47182]" dest="return_type_definition [16322,16339]"/>
  <match src="): ) [105353,105354]" dest="): ) [67421,67422]"/>
  <match src="variable_declaration [67467,67492]" dest="variable_declaration [66330,66355]"/>
  <match src="identifier: add [81644,81647]" dest="identifier: add [71306,71309]"/>
  <match src="uint256: uint256 [21466,21473]" dest="uint256: uint256 [63228,63235]"/>
  <match src="parameter [53475,53488]" dest="parameter [20565,20578]"/>
  <match src="public: public [95936,95942]" dest="public: public [34500,34506]"/>
  <match src="(: ( [96341,96342]" dest="(: ( [34905,34906]"/>
  <match src="false [65824,65829]" dest="false [79591,79596]"/>
  <match src="type_name [95436,95443]" dest="type_name [34000,34007]"/>
  <match src=".: . [99663,99664]" dest=".: . [38225,38226]"/>
  <match src="!=: != [5981,5983]" dest="!=: != [6560,6562]"/>
  <match src="identifier: candidate [96488,96497]" dest="identifier: candidate [35052,35061]"/>
  <match src="function_body [11338,11402]" dest="function_body [11923,11987]"/>
  <match src="call_expression [27116,27180]" dest="call_expression [77396,77466]"/>
  <match src="call_expression [5301,5338]" dest="call_expression [5880,5917]"/>
  <match src="type_name [47294,47301]" dest="type_name [16451,16458]"/>
  <match src="bool: bool [50992,50996]" dest="bool: bool [26151,26155]"/>
  <match src="identifier: Decimal [67495,67502]" dest="identifier: Decimal [79648,79655]"/>
  <match src="&quot;: &quot; [21570,21571]" dest="&quot;: &quot; [63340,63341]"/>
  <match src="primitive_type [81758,81765]" dest="primitive_type [58417,58424]"/>
  <match src="return_statement [9256,9304]" dest="return_statement [9841,9889]"/>
  <match src="identifier: size [86064,86068]" dest="identifier: size [72870,72874]"/>
  <match src="type_cast_expression [33792,34127]" dest="type_cast_expression [48373,48708]"/>
  <match src="function_body [103577,103691]" dest="function_body [42139,42253]"/>
  <match src="address: address [103324,103331]" dest="address: address [41886,41893]"/>
  <match src="=: = [91278,91279]" dest="=: = [29842,29843]"/>
  <match src="event_paramater [54532,54548]" dest="event_paramater [21622,21638]"/>
  <match src="bytes: bytes [38216,38221]" dest="bytes: bytes [52797,52802]"/>
  <match src="identifier: _state [102748,102754]" dest="identifier: _state [41310,41316]"/>
  <match src="visibility [92957,92963]" dest="visibility [31521,31527]"/>
  <match src="identifier: start [103046,103051]" dest="identifier: start [41608,41613]"/>
  <match src="): ) [10727,10728]" dest="): ) [11312,11313]"/>
  <match src="identifier: coupons [101371,101378]" dest="identifier: coupons [39933,39940]"/>
  <match src=".: . [101325,101326]" dest=".: . [39887,39888]"/>
  <match src="): ) [31400,31401]" dest="): ) [45981,45982]"/>
  <match src="identifier: that [81830,81834]" dest="identifier: that [79037,79041]"/>
  <match src="{: { [33752,33753]" dest="{: { [48333,48334]"/>
  <match src="call_argument [80683,80688]" dest="call_argument [69816,69821]"/>
  <match src="external: external [55409,55417]" dest="external: external [22499,22507]"/>
  <match src="(: ( [99920,99921]" dest="(: ( [38482,38483]"/>
  <match src="identifier: reason [100412,100418]" dest="identifier: reason [38974,38980]"/>
  <match src="member_expression [94172,94187]" dest="member_expression [32736,32751]"/>
  <match src=".: . [50063,50064]" dest=".: . [69127,69128]"/>
  <match src="identifier: _state [96547,96553]" dest="identifier: _state [35111,35117]"/>
  <match src="(: ( [81009,81010]" dest="(: ( [69851,69852]"/>
  <match src="}: } [11657,11658]" dest="}: } [12242,12243]"/>
  <match src="expression_statement [27116,27181]" dest="expression_statement [77396,77467]"/>
  <match src="pure: pure [30991,30995]" dest="pure: pure [45572,45576]"/>
  <match src="]: ] [96436,96437]" dest="]: ] [35000,35001]"/>
  <match src="call_argument [21591,21614]" dest="call_argument [63361,63384]"/>
  <match src="user_defined_type [47404,47416]" dest="user_defined_type [16561,16573]"/>
  <match src="function_definition [10600,10740]" dest="function_definition [11185,11325]"/>
  <match src="member_expression [98940,98963]" dest="member_expression [37502,37525]"/>
  <match src="(: ( [54978,54979]" dest="(: ( [22068,22069]"/>
  <match src="type_name [79704,79711]" dest="type_name [68779,68786]"/>
  <match src="for: for [35345,35348]" dest="for: for [49926,49929]"/>
  <match src="identifier: i [36574,36575]" dest="identifier: i [51155,51156]"/>
  <match src="parameter [95957,95971]" dest="parameter [34521,34535]"/>
  <match src="(: ( [100364,100365]" dest="(: ( [38926,38927]"/>
  <match src="function_definition [97028,97206]" dest="function_definition [35592,35770]"/>
  <match src="call_argument [82833,82837]" dest="call_argument [78806,78810]"/>
  <match src="function_definition [85453,86080]" dest="function_definition [72259,72886]"/>
  <match src="visibility [25145,25152]" dest="visibility [58712,58719]"/>
  <match src="private: private [44385,44392]" dest="private: private [13542,13549]"/>
  <match src="member_expression [99884,99899]" dest="member_expression [38446,38461]"/>
  <match src="): ) [10237,10238]" dest="): ) [10822,10823]"/>
  <match src="identifier: Vote [95967,95971]" dest="identifier: Vote [34531,34535]"/>
  <match src="call_argument [22996,23002]" dest="call_argument [55442,55448]"/>
  <match src=".: . [102127,102128]" dest=".: . [40689,40690]"/>
  <match src="call_argument [31966,31985]" dest="call_argument [46547,46566]"/>
  <match src="(: ( [93463,93464]" dest="(: ( [32027,32028]"/>
  <match src="type_name [79413,79420]" dest="type_name [68699,68706]"/>
  <match src="member_expression [82288,82298]" dest="member_expression [62228,62238]"/>
  <match src="identifier: i [36730,36731]" dest="identifier: i [51311,51312]"/>
  <match src="number_literal: 120 [29507,29510]" dest="number_literal: 120 [44088,44091]"/>
  <match src="{: { [98446,98447]" dest="{: { [37008,37009]"/>
  <match src="function_definition [98391,98522]" dest="function_definition [36953,37084]"/>
  <match src="identifier: totalRedeemable [92720,92735]" dest="identifier: totalRedeemable [31284,31299]"/>
  <match src="internal: internal [102101,102109]" dest="internal: internal [40663,40671]"/>
  <match src="identifier: _state [100474,100480]" dest="identifier: _state [39036,39042]"/>
  <match src="identifier: RPAREN [32012,32018]" dest="identifier: RPAREN [46593,46599]"/>
  <match src="function: function [7191,7199]" dest="function: function [7776,7784]"/>
  <match src="identifier: value [54105,54110]" dest="identifier: value [21195,21200]"/>
  <match src="variable_declaration [67756,67775]" dest="variable_declaration [69950,69965]"/>
  <match src="number_literal: 4 [37890,37891]" dest="number_literal: 4 [52471,52472]"/>
  <match src=",: , [103167,103168]" dest=",: , [41729,41730]"/>
  <match src="member_expression [100474,100505]" dest="member_expression [39036,39067]"/>
  <match src="identifier: from [53174,53178]" dest="identifier: from [20264,20268]"/>
  <match src="uint256: uint256 [95436,95443]" dest="uint256: uint256 [34000,34007]"/>
  <match src="type_name [8190,8196]" dest="type_name [8775,8781]"/>
  <match src="=: = [103818,103819]" dest="=: = [42380,42381]"/>
  <match src="(: ( [100307,100308]" dest="(: ( [38869,38870]"/>
  <match src="type_name [50900,50907]" dest="type_name [26059,26066]"/>
  <match src="type_name [11463,11467]" dest="type_name [12048,12052]"/>
  <match src="address: address [53559,53566]" dest="address: address [20649,20656]"/>
  <match src="bool: bool [85513,85517]" dest="bool: bool [72319,72323]"/>
  <match src="external: external [53490,53498]" dest="external: external [20580,20588]"/>
  <match src="identifier: decrementApproveFor [103491,103510]" dest="identifier: decrementApproveFor [42053,42072]"/>
  <match src="return: return [39203,39209]" dest="return: return [53784,53790]"/>
  <match src="=: = [45417,45418]" dest="=: = [14574,14575]"/>
  <match src="identifier: Coupons [87299,87306]" dest="identifier: Coupons [28142,28149]"/>
  <match src="call_argument [51893,51899]" dest="call_argument [54656,54662]"/>
  <match src="binary_expression [37848,37865]" dest="binary_expression [52429,52446]"/>
  <match src="}: } [99737,99738]" dest="}: } [38299,38300]"/>
  <match src="assignment_expression [99947,100012]" dest="assignment_expression [38509,38574]"/>
  <match src="type_name [98727,98734]" dest="type_name [37289,37296]"/>
  <match src="identifier: that [105794,105798]" dest="identifier: that [67862,67866]"/>
  <match src="(: ( [53706,53707]" dest="(: ( [20796,20797]"/>
  <match src="{: { [96253,96254]" dest="{: { [34817,34818]"/>
  <match src="primitive_type [72865,72872]" dest="primitive_type [65729,65736]"/>
  <match src="call_expression [9696,9744]" dest="call_expression [10281,10329]"/>
  <match src="call_argument [19370,19376]" dest="call_argument [59143,59149]"/>
  <match src="]: ] [96999,97000]" dest="]: ] [35563,35564]"/>
  <match src="identifier: allowanceCoupons [94075,94091]" dest="identifier: allowanceCoupons [32639,32655]"/>
  <match src="identifier: a [6018,6019]" dest="identifier: a [6597,6598]"/>
  <match src="yul_assignment [86017,86045]" dest="yul_assignment [72823,72851]"/>
  <match src="call_argument [80508,80518]" dest="call_argument [70137,70147]"/>
  <match src="memory: memory [66560,66566]" dest="memory: memory [64891,64897]"/>
  <match src="call_argument [30071,30075]" dest="call_argument [44652,44656]"/>
  <match src="identifier: abi [34459,34462]" dest="identifier: abi [49040,49043]"/>
  <match src=".: . [10290,10291]" dest=".: . [10875,10876]"/>
  <match src="parameter [8574,8590]" dest="parameter [9159,9175]"/>
  <match src="identifier: value [82182,82187]" dest="identifier: value [71096,71101]"/>
  <match src="function_body [102227,102291]" dest="function_body [40789,40853]"/>
  <match src="identifier: require [2476,2483]" dest="identifier: require [3055,3062]"/>
  <match src="array_access [35623,35632]" dest="array_access [50204,50213]"/>
  <match src="identifier: recipient [21455,21464]" dest="identifier: recipient [63202,63211]"/>
  <match src="identifier: MinterAdded [27611,27622]" dest="identifier: CouponRedemption [60166,60182]"/>
  <match src="identifier: FOUR_BIT_MASK [29718,29731]" dest="identifier: FOUR_BIT_MASK [44299,44312]"/>
  <match src="identifier: i [37601,37602]" dest="identifier: i [52182,52183]"/>
  <match src="identifier: compareTo [10855,10864]" dest="identifier: compareTo [11440,11449]"/>
  <match src="function: function [45690,45698]" dest="function: function [14847,14855]"/>
  <match src="call_argument [33966,33972]" dest="call_argument [48547,48553]"/>
  <match src=":: : [8072,8073]" dest=":: : [8657,8658]"/>
  <match src="=: = [102268,102269]" dest="=: = [40830,40831]"/>
  <match src="identifier: coupons [101155,101162]" dest="identifier: coupons [39717,39724]"/>
  <match src="call_argument [83878,83882]" dest="call_argument [58784,58788]"/>
  <match src="visibility [92205,92211]" dest="visibility [30769,30775]"/>
  <match src="returns: returns [53376,53383]" dest="returns: returns [20466,20473]"/>
  <match src="primitive_type [52493,52497]" dest="primitive_type [60322,60329]"/>
  <match src="(: ( [83347,83348]" dest="(: ( [62744,62745]"/>
  <match src="function: function [54924,54932]" dest="function: function [22014,22022]"/>
  <match src="): ) [79742,79743]" dest="): ) [68817,68818]"/>
  <match src="}: } [9109,9110]" dest="}: } [9694,9695]"/>
  <match src="parameter [10224,10237]" dest="parameter [10809,10822]"/>
  <match src="identifier: current [87108,87115]" dest="identifier: current [27951,27958]"/>
  <match src="&quot;: &quot; [84497,84498]" dest="&quot;: &quot; [76968,76969]"/>
  <match src="identifier: i [38588,38589]" dest="identifier: i [53169,53170]"/>
  <match src="event: event [53143,53148]" dest="event: event [20233,20238]"/>
  <match src="identifier: ASCII_LOWER_EX [29490,29504]" dest="identifier: ASCII_LOWER_EX [44071,44085]"/>
  <match src=".: . [91899,91900]" dest=".: . [30463,30464]"/>
  <match src="return_type_definition [95948,95972]" dest="return_type_definition [34512,34536]"/>
  <match src="function_body [98752,98824]" dest="function_body [37314,37386]"/>
  <match src="array_access [102454,102479]" dest="array_access [41016,41041]"/>
  <match src="primitive_type [64391,64398]" dest="primitive_type [59855,59862]"/>
  <match src="function_body [29918,30237]" dest="function_body [44499,44818]"/>
  <match src="identifier: mul [11363,11366]" dest="identifier: mul [11948,11951]"/>
  <match src="visibility [47939,47947]" dest="visibility [17096,17104]"/>
  <match src="return: return [10279,10285]" dest="return: return [10864,10870]"/>
  <match src="type_name [98242,98249]" dest="type_name [36804,36811]"/>
  <match src="private: private [67719,67726]" dest="private: private [66027,66034]"/>
  <match src="call_expression [73015,73050]" dest="call_expression [65392,65425]"/>
  <match src="user_defined_type [10025,10029]" dest="user_defined_type [10610,10614]"/>
  <match src="return_type_definition [1946,1963]" dest="return_type_definition [2525,2542]"/>
  <match src="identifier: mul [8526,8529]" dest="identifier: mul [9111,9114]"/>
  <match src="primitive_type [53475,53482]" dest="primitive_type [20565,20572]"/>
  <match src="expression_statement [81587,81602]" dest="expression_statement [55508,55523]"/>
  <match src="type_name [103343,103350]" dest="type_name [41905,41912]"/>
  <match src="array_access [104490,104518]" dest="array_access [43052,43080]"/>
  <match src="{: { [95326,95327]" dest="{: { [33890,33891]"/>
  <match src="variable_declaration_statement [73212,73265]" dest="variable_declaration_statement [62099,62123]"/>
  <match src="): ) [79861,79862]" dest="): ) [80607,80608]"/>
  <match src=",: , [45863,45864]" dest=",: , [15020,15021]"/>
  <match src="call_argument [34521,34525]" dest="call_argument [49102,49106]"/>
  <match src="identifier: newImplementation [89763,89780]" dest="identifier: newImplementation [74396,74413]"/>
  <match src="contract_body [6789,11658]" dest="contract_body [7374,12243]"/>
  <match src="returns: returns [10391,10398]" dest="returns: returns [10976,10983]"/>
  <match src="return: return [95984,95990]" dest="return: return [34548,34554]"/>
  <match src="function_body [47183,47232]" dest="function_body [16340,16389]"/>
  <match src="return_type_definition [53435,53449]" dest="return_type_definition [20525,20539]"/>
  <match src="type_name [5900,5906]" dest="type_name [6479,6485]"/>
  <match src="(: ( [99474,99475]" dest="(: ( [38036,38037]"/>
  <match src="identifier: amount [100982,100988]" dest="identifier: amount [39544,39550]"/>
  <match src="member_expression [99177,99206]" dest="member_expression [37739,37768]"/>
  <match src="(: ( [10774,10775]" dest="(: ( [11359,11360]"/>
  <match src="parameter [13234,13241]" dest="parameter [23025,23032]"/>
  <match src="call_struct_argument [7866,7900]" dest="call_struct_argument [8451,8485]"/>
  <match src="uint256: uint256 [46811,46818]" dest="uint256: uint256 [15968,15975]"/>
  <match src=".: . [30012,30013]" dest=".: . [44593,44594]"/>
  <match src="call_expression [9478,9501]" dest="call_expression [10063,10086]"/>
  <match src="comment: /**      * ERC20 Interface      */ [97947,97983]" dest="comment: /**      * ERC20 Interface      */ [36509,36545]"/>
  <match src="bytes: bytes [36401,36406]" dest="bytes: bytes [50982,50987]"/>
  <match src="comment: /* Bootstrapping */ [43772,43791]" dest="comment: /* Bootstrapping */ [12929,12948]"/>
  <match src="identifier: _state [93693,93699]" dest="identifier: _state [32257,32263]"/>
  <match src="bool: bool [30853,30857]" dest="bool: bool [45434,45438]"/>
  <match src="state_mutability [46632,46636]" dest="state_mutability [15789,15793]"/>
  <match src="expression_statement [21502,21573]" dest="expression_statement [63264,63343]"/>
  <match src="): ) [38363,38364]" dest="): ) [52944,52945]"/>
  <match src="}: } [9301,9302]" dest="}: } [9886,9887]"/>
  <match src="call_argument [24292,24298]" dest="call_argument [18059,18065]"/>
  <match src="expression_statement [98618,98684]" dest="expression_statement [37180,37246]"/>
  <match src="identifier: expiration [95230,95240]" dest="identifier: expiration [33794,33804]"/>
  <match src="type_name [32221,32228]" dest="type_name [46802,46809]"/>
  <match src="(: ( [105322,105323]" dest="(: ( [67390,67391]"/>
  <match src="type_name [2405,2411]" dest="type_name [2984,2990]"/>
  <match src="variable_declaration [4626,4635]" dest="variable_declaration [5205,5214]"/>
  <match src="type_cast_expression [21604,21614]" dest="type_cast_expression [63374,63384]"/>
  <match src="): ) [107304,107305]" dest="): ) [55392,55393]"/>
  <match src=",: , [27142,27143]" dest=",: , [77425,77426]"/>
  <match src="]: ] [101261,101262]" dest="]: ] [39823,39824]"/>
  <match src="type_name [91233,91240]" dest="type_name [29797,29804]"/>
  <match src="(: ( [91948,91949]" dest="(: ( [30512,30513]"/>
  <match src="yul_function_call [90495,90526]" dest="yul_function_call [75128,75159]"/>
  <match src="primitive_type [79643,79650]" dest="primitive_type [68715,68722]"/>
  <match src="call_argument [30481,30768]" dest="call_argument [45062,45349]"/>
  <match src="primitive_type [14602,14609]" dest="primitive_type [24393,24400]"/>
  <match src="type_name [79994,80001]" dest="type_name [68937,68944]"/>
  <match src="identifier: totalRewardedWithPhantom [83138,83162]" dest="identifier: daoAmount [58508,58517]"/>
  <match src="visibility [68107,68115]" dest="visibility [70904,70912]"/>
  <match src="type_name [77737,77744]" dest="type_name [55934,55941]"/>
  <match src="): ) [96784,96785]" dest="): ) [35348,35349]"/>
  <match src="call_expression [83906,83919]" dest="call_expression [58131,58148]"/>
  <match src="function_body [99838,100075]" dest="function_body [38400,38637]"/>
  <match src="(: ( [81286,81287]" dest="(: ( [70011,70012]"/>
  <match src="function_definition [14977,15074]" dest="function_definition [24768,24865]"/>
  <match src="number_literal: 2 [11642,11643]" dest="number_literal: 2 [12227,12228]"/>
  <match src="type_name [74462,74469]" dest="type_name [80453,80460]"/>
  <match src="identifier: approve [103408,103415]" dest="identifier: approve [41970,41977]"/>
  <match src="identifier: Withdraw [79756,79764]" dest="identifier: Withdraw [68831,68839]"/>
  <match src="call_expression [82072,82100]" dest="call_expression [70545,70566]"/>
  <match src="string: string [31725,31731]" dest="string: string [46306,46312]"/>
  <match src="function_body [32990,33577]" dest="function_body [47571,48158]"/>
  <match src="visibility [10808,10816]" dest="visibility [11393,11401]"/>
  <match src="visibility [98598,98606]" dest="visibility [37160,37168]"/>
  <match src="identifier: balance [92577,92584]" dest="identifier: balance [31141,31148]"/>
  <match src="&quot;: &quot; [89957,89958]" dest="&quot;: &quot; [74590,74591]"/>
  <match src="member_expression [101893,101932]" dest="member_expression [40455,40494]"/>
  <match src="identifier: ASCII_ZERO [39129,39139]" dest="identifier: ASCII_ZERO [53710,53720]"/>
  <match src="return_statement [37915,37929]" dest="return_statement [52496,52510]"/>
  <match src="}: } [96589,96590]" dest="}: } [35153,35154]"/>
  <match src="primitive_type [44610,44617]" dest="primitive_type [13767,13774]"/>
  <match src="address: address [31610,31617]" dest="address: address [46191,46198]"/>
  <match src="visibility [103359,103367]" dest="visibility [41921,41929]"/>
  <match src="return_statement [94682,94810]" dest="return_statement [33246,33374]"/>
  <match src="call_struct_argument [7287,7298]" dest="call_struct_argument [7872,7883]"/>
  <match src="call_expression [8292,8344]" dest="call_expression [8877,8929]"/>
  <match src="string_literal [91469,91496]" dest="string_literal [30033,30060]"/>
  <match src=".: . [105594,105595]" dest=".: . [67662,67663]"/>
  <match src="function_body [91756,91814]" dest="function_body [30320,30378]"/>
  <match src="function: function [94270,94278]" dest="function: function [32834,32842]"/>
  <match src="visibility [44385,44392]" dest="visibility [13542,13549]"/>
  <match src="identifier: sub [100582,100585]" dest="identifier: sub [39144,39147]"/>
  <match src="identifier: epoch [94342,94347]" dest="identifier: epoch [32906,32911]"/>
  <match src="parameter [10648,10661]" dest="parameter [11233,11246]"/>
  <match src="(: ( [76896,76897]" dest="(: ( [60763,60764]"/>
  <match src="primitive_type [10686,10690]" dest="primitive_type [11271,11275]"/>
  <match src="member_expression [98481,98495]" dest="member_expression [37043,37057]"/>
  <match src="call_argument [31899,31905]" dest="call_argument [46480,46486]"/>
  <match src="parameter [91949,91962]" dest="parameter [30513,30526]"/>
  <match src="identifier: char [38830,38834]" dest="identifier: char [53411,53415]"/>
  <match src="event: event [89501,89506]" dest="event: event [74134,74139]"/>
  <match src="identifier: self [10720,10724]" dest="identifier: self [11305,11309]"/>
  <match src="uint: uint [53647,53651]" dest="uint: uint [20737,20741]"/>
  <match src="returns: returns [92640,92647]" dest="returns: returns [31204,31211]"/>
  <match src="}: } [10454,10455]" dest="}: } [11039,11040]"/>
  <match src=",: , [5238,5239]" dest=",: , [5817,5818]"/>
  <match src="identifier: z [37706,37707]" dest="identifier: z [52287,52288]"/>
  <match src="{: { [52143,52144]" dest="{: { [63688,63689]"/>
  <match src=".: . [99569,99570]" dest=".: . [38131,38132]"/>
  <match src="primitive_type [9003,9010]" dest="primitive_type [9588,9595]"/>
  <match src="): ) [76831,76832]" dest="): ) [60472,60473]"/>
  <match src="memory: memory [7746,7752]" dest="memory: memory [8331,8337]"/>
  <match src=".: . [11102,11103]" dest=".: . [11687,11688]"/>
  <match src="identifier: to [53715,53717]" dest="identifier: to [20805,20807]"/>
  <match src="): ) [77815,77816]" dest="): ) [57747,57748]"/>
  <match src="): ) [36298,36299]" dest="): ) [50879,50880]"/>
  <match src="returns: returns [8647,8654]" dest="returns: returns [9232,9239]"/>
  <match src="function: function [97028,97036]" dest="function: function [35592,35600]"/>
  <match src="identifier: b [9180,9181]" dest="identifier: b [9765,9766]"/>
  <match src="internal: internal [30366,30374]" dest="internal: internal [44947,44955]"/>
  <match src="identifier: temp [9098,9102]" dest="identifier: temp [9683,9687]"/>
  <match src=".: . [80227,80228]" dest=".: . [69402,69403]"/>
  <match src="struct_declaration [87944,88209]" dest="struct_declaration [28787,29052]"/>
  <match src=".: . [83508,83509]" dest=".: . [78643,78644]"/>
  <match src="): ) [81292,81293]" dest="): ) [70047,70048]"/>
  <match src="member_expression [100170,100201]" dest="member_expression [38732,38763]"/>
  <match src="member_expression [83852,83905]" dest="member_expression [58057,58130]"/>
  <match src="identifier: payloadB [31392,31400]" dest="identifier: payloadB [45973,45981]"/>
  <match src="identifier: amount [99500,99506]" dest="identifier: amount [38062,38068]"/>
  <match src=".: . [92576,92577]" dest=".: . [31140,31141]"/>
  <match src="call_argument [10125,10173]" dest="call_argument [10710,10758]"/>
  <match src="identifier: msg [82610,82613]" dest="identifier: msg [69894,69897]"/>
  <match src="identifier: a [2528,2529]" dest="identifier: a [3107,3108]"/>
  <match src="return_type_definition [13069,13086]" dest="return_type_definition [22860,22877]"/>
  <match src="user_defined_type [10481,10485]" dest="user_defined_type [11066,11070]"/>
  <match src="identifier: reason [98890,98896]" dest="identifier: reason [37452,37458]"/>
  <match src="address: address [54682,54689]" dest="address: address [21772,21779]"/>
  <match src="parameter [46934,46941]" dest="parameter [16091,16098]"/>
  <match src="identifier: oracle [87715,87721]" dest="identifier: oracle [28558,28564]"/>
  <match src="pure: pure [1485,1489]" dest="pure: pure [2064,2068]"/>
  <match src="uint256: uint256 [45984,45991]" dest="uint256: uint256 [15141,15148]"/>
  <match src="=: = [8958,8959]" dest="=: = [9543,9544]"/>
  <match src="identifier: self [9277,9281]" dest="identifier: self [9862,9866]"/>
  <match src="identifier: i [36795,36796]" dest="identifier: i [51376,51377]"/>
  <match src="parameter [4500,4507]" dest="parameter [5079,5086]"/>
  <match src="call_argument [33175,33180]" dest="call_argument [47756,47761]"/>
  <match src="): ) [23745,23746]" dest="): ) [61956,61957]"/>
  <match src="call_argument [80241,80251]" dest="call_argument [69416,69426]"/>
  <match src="identifier: balance [101388,101395]" dest="identifier: balance [39950,39957]"/>
  <match src="call_argument [81734,81744]" dest="call_argument [70963,70973]"/>
  <match src="parameter [62998,63002]" dest="parameter [26857,26861]"/>
  <match src="function_definition [21412,21883]" dest="function_definition [63153,63881]"/>
  <match src="call_expression [33947,33973]" dest="call_expression [48528,48554]"/>
  <match src="member_expression [96271,96288]" dest="member_expression [34835,34852]"/>
  <match src="parameter [5900,5926]" dest="parameter [6479,6505]"/>
  <match src="identifier: add [99203,99206]" dest="identifier: add [37765,37768]"/>
  <match src="call_argument [99380,99386]" dest="call_argument [37942,37948]"/>
  <match src="): ) [30970,30971]" dest="): ) [45551,45552]"/>
  <match src="returns: returns [47042,47049]" dest="returns: returns [16199,16206]"/>
  <match src="number_literal: 0 [37507,37508]" dest="number_literal: 0 [52088,52089]"/>
  <match src="parameter [99807,99827]" dest="parameter [38369,38389]"/>
  <match src="visibility [91626,91632]" dest="visibility [30190,30196]"/>
  <match src="uint256: uint256 [93585,93592]" dest="uint256: uint256 [32149,32156]"/>
  <match src="function: function [99447,99455]" dest="function: function [38009,38017]"/>
  <match src="function_body [7139,7183]" dest="function_body [7724,7768]"/>
  <match src=".: . [101291,101292]" dest=".: . [39853,39854]"/>
  <match src="type_name [44323,44330]" dest="type_name [13480,13487]"/>
  <match src=".: . [98663,98664]" dest=".: . [37225,37226]"/>
  <match src="(: ( [47756,47757]" dest="(: ( [16913,16914]"/>
  <match src="memory: memory [10486,10492]" dest="memory: memory [11071,11077]"/>
  <match src="{: { [96117,96118]" dest="{: { [34681,34682]"/>
  <match src="return: return [7273,7279]" dest="return: return [7858,7864]"/>
  <match src="identifier: totalDebt [93032,93041]" dest="identifier: totalDebt [31596,31605]"/>
  <match src="function_body [96813,96877]" dest="function_body [35377,35441]"/>
  <match src="identifier: D256 [64378,64382]" dest="identifier: D256 [64571,64575]"/>
  <match src="return_type_definition [47395,47424]" dest="return_type_definition [16552,16581]"/>
  <match src=".: . [102156,102157]" dest=".: . [40718,40719]"/>
  <match src=".: . [100550,100551]" dest=".: . [39112,39113]"/>
  <match src="-: - [2530,2531]" dest="-: - [3109,3110]"/>
  <match src="identifier: accounts [99891,99899]" dest="identifier: accounts [38453,38461]"/>
  <match src=".: . [95516,95517]" dest=".: . [34080,34081]"/>
  <match src="primitive_type [98860,98867]" dest="primitive_type [37422,37429]"/>
  <match src="string: string [99807,99813]" dest="string: string [38369,38375]"/>
  <match src="=: = [81976,81977]" dest="=: = [77008,77009]"/>
  <match src=",: , [30301,30302]" dest=",: , [44882,44883]"/>
  <match src="primitive_type [87274,87281]" dest="primitive_type [28117,28124]"/>
  <match src="return_statement [8053,8105]" dest="return_statement [8638,8690]"/>
  <match src="call_expression [11092,11112]" dest="call_expression [11677,11697]"/>
  <match src="event_definition [53062,53137]" dest="event_definition [20152,20227]"/>
  <match src="call_argument [8530,8531]" dest="call_argument [9115,9116]"/>
  <match src="yul_identifier [97183,97187]" dest="yul_identifier [35747,35751]"/>
  <match src="(: ( [86893,86894]" dest="(: ( [27736,27737]"/>
  <match src="expression_statement [21583,21655]" dest="expression_statement [63353,63433]"/>
  <match src="identifier: Require [50056,50063]" dest="identifier: Require [69120,69127]"/>
  <match src="identifier: mul [8323,8326]" dest="identifier: mul [8908,8911]"/>
  <match src=".: . [100844,100845]" dest=".: . [39406,39407]"/>
  <match src="call_expression [82772,82892]" dest="call_expression [78742,78851]"/>
  <match src="identifier: balance [98464,98471]" dest="identifier: balance [37026,37033]"/>
  <match src="assignment_expression [38809,38853]" dest="assignment_expression [53390,53434]"/>
  <match src="primitive_type [29473,29480]" dest="primitive_type [44054,44061]"/>
  <match src="identifier: _state [93835,93841]" dest="identifier: _state [32399,32405]"/>
  <match src="(: ( [47679,47680]" dest="(: ( [16836,16837]"/>
  <match src="): ) [7898,7899]" dest="): ) [8483,8484]"/>
  <match src="parameter [98860,98874]" dest="parameter [37422,37436]"/>
  <match src="function: function [83782,83790]" dest="function: function [58677,58685]"/>
  <match src="string: string [33052,33058]" dest="string: string [47633,47639]"/>
  <match src=",: , [9358,9359]" dest=",: , [9943,9944]"/>
  <match src="uint256: uint256 [35350,35357]" dest="uint256: uint256 [49931,49938]"/>
  <match src="identifier: reason [30320,30326]" dest="identifier: reason [44901,44907]"/>
  <match src="function_definition [92083,92179]" dest="function_definition [30647,30743]"/>
  <match src="identifier: outstanding [87165,87176]" dest="identifier: outstanding [28008,28019]"/>
  <match src="parameter [10950,10954]" dest="parameter [11535,11539]"/>
  <match src="view: view [95160,95164]" dest="view: view [33724,33728]"/>
  <match src="function_definition [46880,46986]" dest="function_definition [16037,16143]"/>
  <match src="indexed: indexed [79712,79719]" dest="indexed: indexed [68787,68794]"/>
  <match src=".: . [100505,100506]" dest=".: . [39067,39068]"/>
  <match src=",: , [90347,90348]" dest=",: , [74980,74981]"/>
  <match src="type_name [101642,101649]" dest="type_name [40204,40211]"/>
  <match src="return_type_definition [39004,39018]" dest="return_type_definition [53585,53599]"/>
  <match src="}: } [36356,36357]" dest="}: } [50937,50938]"/>
  <match src="function_body [21491,21883]" dest="function_body [63253,63881]"/>
  <match src="parameter [10362,10375]" dest="parameter [10947,10960]"/>
  <match src="type_name [31542,31546]" dest="type_name [46123,46127]"/>
  <match src="{: { [6789,6790]" dest="{: { [7374,7375]"/>
  <match src="identifier: reject [103811,103817]" dest="identifier: reject [42373,42379]"/>
  <match src="identifier: a [5237,5238]" dest="identifier: a [5816,5817]"/>
  <match src="identifier: SafeMath [71042,71050]" dest="identifier: SafeMath [54474,54482]"/>
  <match src="(: ( [31236,31237]" dest="(: ( [45817,45818]"/>
  <match src="uint256: uint256 [81010,81017]" dest="uint256: uint256 [69852,69859]"/>
  <match src="): ) [3254,3255]" dest="): ) [3833,3834]"/>
  <match src="address: address [53475,53482]" dest="address: address [20565,20572]"/>
  <match src="primitive_type [52455,52462]" dest="primitive_type [60302,60309]"/>
  <match src="string [3219,3254]" dest="string [3798,3833]"/>
  <match src="type_name [54255,54262]" dest="type_name [21345,21352]"/>
  <match src="returns: returns [54785,54792]" dest="returns: returns [21875,21882]"/>
  <match src="byte: byte [36800,36804]" dest="byte: byte [51381,51385]"/>
  <match src="assignment_expression [99322,99395]" dest="assignment_expression [37884,37957]"/>
  <match src="{: { [93641,93642]" dest="{: { [32205,32206]"/>
  <match src="event_definition [89501,89548]" dest="event_definition [74134,74181]"/>
  <match src="identifier: account [99714,99721]" dest="identifier: account [38276,38283]"/>
  <match src="identifier: State [88131,88136]" dest="identifier: State [28974,28979]"/>
  <match src="identifier: value [7866,7871]" dest="identifier: value [8451,8456]"/>
  <match src="return_statement [10967,10990]" dest="return_statement [11552,11575]"/>
  <match src="pure: pure [40747,40751]" dest="pure: pure [19826,19830]"/>
  <match src="member_expression [33821,33837]" dest="member_expression [48402,48418]"/>
  <match src="identifier: IDollar [50797,50804]" dest="identifier: IDollar [25956,25963]"/>
  <match src=",: , [54871,54872]" dest=",: , [21961,21962]"/>
  <match src="): ) [55050,55051]" dest="): ) [22140,22141]"/>
  <match src="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [16152,17327]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [17169,17750]"/>
  <match src="yul_path [35816,35822]" dest="yul_path [50397,50403]"/>
  <match src="type_name [94433,94456]" dest="type_name [32997,33020]"/>
  <match src="identifier: _ [105735,105736]" dest="identifier: _ [67803,67804]"/>
  <match src="): ) [46818,46819]" dest="): ) [15975,15976]"/>
  <match src="): ) [82110,82111]" dest="): ) [70566,70567]"/>
  <match src="call_argument [82950,82960]" dest="call_argument [76380,76390]"/>
  <match src="primitive_type [79848,79855]" dest="primitive_type [60435,60442]"/>
  <match src="return: return [39103,39109]" dest="return: return [53684,53690]"/>
  <match src=",: , [94105,94106]" dest=",: , [32669,32670]"/>
  <match src="identifier: candidates [103236,103246]" dest="identifier: candidates [41798,41808]"/>
  <match src="visibility [91241,91248]" dest="visibility [29805,29812]"/>
  <match src="): ) [95602,95603]" dest="): ) [34166,34167]"/>
  <match src="(: ( [30258,30259]" dest="(: ( [44839,44840]"/>
  <match src="identifier: vote [103275,103279]" dest="identifier: vote [41837,41841]"/>
  <match src="identifier: reject [103849,103855]" dest="identifier: reject [42411,42417]"/>
  <match src="array_access [95201,95221]" dest="array_access [33765,33785]"/>
  <match src=",: , [103744,103745]" dest=",: , [42306,42307]"/>
  <match src="external: external [13884,13892]" dest="external: external [23675,23683]"/>
  <match src="identifier: incrementBalanceOfPhantom [83380,83405]" dest="identifier: updateAllowanceCoupons [63025,63047]"/>
  <match src="call_expression [101532,101539]" dest="call_expression [40094,40101]"/>
  <match src="(: ( [96519,96520]" dest="(: ( [35083,35084]"/>
  <match src="user_defined_type [7121,7125]" dest="user_defined_type [7706,7710]"/>
  <match src="identifier: _state [103418,103424]" dest="identifier: _state [41980,41986]"/>
  <match src="): ) [47181,47182]" dest="): ) [16338,16339]"/>
  <match src="identifier: that [33594,33598]" dest="identifier: that [48175,48179]"/>
  <match src="type_name [98124,98131]" dest="type_name [36686,36693]"/>
  <match src="primitive_type [94906,94913]" dest="primitive_type [33470,33477]"/>
  <match src="[: [ [96989,96990]" dest="[: [ [35553,35554]"/>
  <match src="identifier: candidate [96916,96925]" dest="identifier: candidate [35480,35489]"/>
  <match src="private: private [91241,91248]" dest="private: private [29805,29812]"/>
  <match src="function: function [55426,55434]" dest="function: function [22516,22524]"/>
  <match src="type_name [95281,95288]" dest="type_name [33845,33852]"/>
  <match src="function: function [30829,30837]" dest="function: function [45410,45418]"/>
  <match src="primitive_type [100669,100676]" dest="primitive_type [39231,39238]"/>
  <match src="function_definition [53984,54044]" dest="function_definition [21074,21134]"/>
  <match src="expression_statement [80630,80645]" dest="expression_statement [55684,55699]"/>
  <match src="if: if [3112,3114]" dest="if: if [3691,3693]"/>
  <match src="identifier: GOVERNANCE_QUORUM [44635,44652]" dest="identifier: GOVERNANCE_QUORUM [13792,13809]"/>
  <match src="identifier: Balance [87997,88004]" dest="identifier: Balance [28840,28847]"/>
  <match src="contract: contract [86664,86672]" dest="contract: contract [27507,27515]"/>
  <match src="function_definition [71952,72088]" dest="function_definition [57987,58225]"/>
  <match src="returns: returns [7112,7119]" dest="returns: returns [7697,7704]"/>
  <match src="return_type_definition [68220,68237]" dest="return_type_definition [61634,61651]"/>
  <match src="array_access [103627,103655]" dest="array_access [42189,42217]"/>
  <match src="identifier: IOracle [92226,92233]" dest="identifier: IOracle [30790,30797]"/>
  <match src="(: ( [9492,9493]" dest="(: ( [10077,10078]"/>
  <match src="primitive_type [102336,102343]" dest="primitive_type [40898,40905]"/>
  <match src="primitive_type [6815,6822]" dest="primitive_type [7400,7407]"/>
  <match src="bool: bool [32815,32819]" dest="bool: bool [47396,47400]"/>
  <match src="type_cast_expression [36800,36834]" dest="type_cast_expression [51381,51415]"/>
  <match src="function_body [10837,10885]" dest="function_body [11422,11470]"/>
  <match src="call_expression [30481,30768]" dest="call_expression [45062,45349]"/>
  <match src="if_statement [93831,93938]" dest="if_statement [32395,32502]"/>
  <match src="{: { [21491,21492]" dest="{: { [63253,63254]"/>
  <match src="external: external [55378,55386]" dest="external: external [22468,22476]"/>
  <match src="primitive_type [21447,21454]" dest="primitive_type [63194,63201]"/>
  <match src="type_name [2394,2401]" dest="type_name [2973,2980]"/>
  <match src="identifier: sub [102006,102009]" dest="identifier: sub [40568,40571]"/>
  <match src=",: , [54125,54126]" dest=",: , [21215,21216]"/>
  <match src="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [24355,24567]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [25364,25945]"/>
  <match src="&lt;: &lt; [10874,10875]" dest="&lt;: &lt; [11459,11460]"/>
  <match src=".: . [99328,99329]" dest=".: . [37890,37891]"/>
  <match src="identifier: reason [100594,100600]" dest="identifier: reason [39156,39162]"/>
  <match src="type_name [87534,87541]" dest="type_name [28377,28384]"/>
  <match src="array_access [38326,38335]" dest="array_access [52907,52916]"/>
  <match src="identifier: add [76899,76902]" dest="identifier: add [60766,60769]"/>
  <match src="primitive_type [44323,44330]" dest="primitive_type [13480,13487]"/>
  <match src="internal: internal [9194,9202]" dest="internal: internal [9779,9787]"/>
  <match src="view: view [92858,92862]" dest="view: view [31422,31426]"/>
  <match src="type_name [80091,80098]" dest="type_name [80593,80600]"/>
  <match src="(: ( [79764,79765]" dest="(: ( [68839,68840]"/>
  <match src="string_literal [65272,65291]" dest="string_literal [79348,79362]"/>
  <match src="view: view [95469,95473]" dest="view: view [34033,34037]"/>
  <match src="type_name [50960,50967]" dest="type_name [26119,26126]"/>
  <match src="}: } [103874,103875]" dest="}: } [42436,42437]"/>
  <match src="function_definition [102075,102179]" dest="function_definition [40637,40741]"/>
  <match src="if: if [104315,104317]" dest="if: if [42877,42879]"/>
  <match src="(: ( [29813,29814]" dest="(: ( [44394,44395]"/>
  <match src="private: private [65885,65892]" dest="private: private [79506,79513]"/>
  <match src="memory: memory [103553,103559]" dest="memory: memory [42115,42121]"/>
  <match src="identifier: must [29829,29833]" dest="identifier: must [44410,44414]"/>
  <match src="bool: bool [30269,30273]" dest="bool: bool [44850,44854]"/>
  <match src="(: ( [5978,5979]" dest="(: ( [6557,6558]"/>
  <match src="return_statement [3830,3877]" dest="return_statement [4409,4456]"/>
  <match src="uint256: uint256 [99264,99271]" dest="uint256: uint256 [37826,37833]"/>
  <match src="function_body [103368,103474]" dest="function_body [41930,42036]"/>
  <match src="type_name [24905,24912]" dest="type_name [18200,18207]"/>
  <match src="is: is [88998,89000]" dest="is: is [73631,73633]"/>
  <match src="ternary_expression [11622,11647]" dest="ternary_expression [12207,12232]"/>
  <match src="(: ( [32115,32116]" dest="(: ( [46696,46697]"/>
  <match src="identifier: fluidUntil [101519,101529]" dest="identifier: fluidUntil [40081,40091]"/>
  <match src="comment: // 24 epochs fluid [45057,45075]" dest="comment: // 24 epochs fluid [14214,14232]"/>
  <match src="type_name [92004,92011]" dest="type_name [30568,30575]"/>
  <match src="(: ( [31770,31771]" dest="(: ( [46351,46352]"/>
  <match src=".: . [84427,84428]" dest=".: . [76853,76854]"/>
  <match src="primitive_type [81010,81017]" dest="primitive_type [69852,69859]"/>
  <match src="identifier: Epoch [87968,87973]" dest="identifier: Epoch [28811,28816]"/>
  <match src="if: if [39072,39074]" dest="if: if [53653,53655]"/>
  <match src="identifier: that [31527,31531]" dest="identifier: that [46108,46112]"/>
  <match src="state_mutability [9641,9645]" dest="state_mutability [10226,10230]"/>
  <match src="identifier: b [5897,5898]" dest="identifier: b [6476,6477]"/>
  <match src="view: view [54780,54784]" dest="view: view [21870,21874]"/>
  <match src="[: [ [101162,101163]" dest="[: [ [39724,39725]"/>
  <match src=".: . [80511,80512]" dest=".: . [70140,70141]"/>
  <match src="identifier: from [8910,8914]" dest="identifier: from [9495,9499]"/>
  <match src="=&gt;: =&gt; [86902,86904]" dest="=&gt;: =&gt; [27745,27747]"/>
  <match src="identifier: ASCII_LOWER_EX [37362,37376]" dest="identifier: ASCII_LOWER_EX [51943,51957]"/>
  <match src="expression_statement [65179,65302]" dest="expression_statement [79243,79374]"/>
  <match src="primitive_type [87508,87515]" dest="primitive_type [28351,28358]"/>
  <match src="]: ] [36796,36797]" dest="]: ] [51377,51378]"/>
  <match src="): ) [53390,53391]" dest="): ) [20480,20481]"/>
  <match src="): ) [53334,53335]" dest="): ) [20424,20425]"/>
  <match src="function_definition [80415,80697]" dest="function_definition [69563,69830]"/>
  <match src="parameter [10025,10038]" dest="parameter [10610,10623]"/>
  <match src="visibility [30977,30985]" dest="visibility [45558,45566]"/>
  <match src=",: , [32210,32211]" dest=",: , [46791,46792]"/>
  <match src="identifier: decrementBalanceOfStaged [100340,100364]" dest="identifier: decrementBalanceOfStaged [38902,38926]"/>
  <match src="identifier: a [3183,3184]" dest="identifier: a [3762,3763]"/>
  <match src="}: } [86999,87000]" dest="}: } [27842,27843]"/>
  <match src="array_access [100204,100228]" dest="array_access [38766,38790]"/>
  <match src=",: , [34768,34769]" dest=",: , [49349,49350]"/>
  <match src=".: . [100944,100945]" dest=".: . [39506,39507]"/>
  <match src="identifier: value [9483,9488]" dest="identifier: value [10068,10073]"/>
  <match src="): ) [81074,81075]" dest="): ) [69936,69937]"/>
  <match src="call_expression [68310,68409]" dest="call_expression [70710,70780]"/>
  <match src="parameter [54979,54983]" dest="parameter [22069,22073]"/>
  <match src="pure: pure [32264,32268]" dest="pure: pure [46845,46849]"/>
  <match src="(: ( [9267,9268]" dest="(: ( [9852,9853]"/>
  <match src="function_body [98317,98348]" dest="function_body [36879,36910]"/>
  <match src="call_argument [20851,20890]" dest="call_argument [69202,69223]"/>
  <match src="identifier: payloadB [33381,33389]" dest="identifier: payloadB [47962,47970]"/>
  <match src="call_expression [9905,9959]" dest="call_expression [10490,10544]"/>
  <match src="call_argument [10163,10170]" dest="call_argument [10748,10755]"/>
  <match src="): ) [5337,5338]" dest="): ) [5916,5917]"/>
  <match src="emit_statement [99688,99731]" dest="emit_statement [38250,38293]"/>
  <match src="parameter [30269,30278]" dest="parameter [44850,44859]"/>
  <match src="}: } [7173,7174]" dest="}: } [7758,7759]"/>
  <match src="function: function [103132,103140]" dest="function: function [41694,41702]"/>
  <match src="visibility [96635,96641]" dest="visibility [35199,35205]"/>
  <match src="binary_expression [73540,73566]" dest="binary_expression [78891,78912]"/>
  <match src="(: ( [21708,21709]" dest="(: ( [55790,55791]"/>
  <match src="identifier: spender [91972,91979]" dest="identifier: spender [30536,30543]"/>
  <match src="returns: returns [92863,92870]" dest="returns: returns [31427,31434]"/>
  <match src="visibility [92307,92313]" dest="visibility [30871,30877]"/>
  <match src=",: , [53645,53646]" dest=",: , [20735,20736]"/>
  <match src="type_name [101057,101064]" dest="type_name [39619,39626]"/>
  <match src="): ) [102826,102827]" dest="): ) [41388,41389]"/>
  <match src="identifier: balance [91900,91907]" dest="identifier: balance [30464,30471]"/>
  <match src="identifier: amount [100586,100592]" dest="identifier: amount [39148,39154]"/>
  <match src="(: ( [83803,83804]" dest="(: ( [58695,58696]"/>
  <match src="identifier: success [89857,89864]" dest="identifier: success [74490,74497]"/>
  <match src="call_argument [101330,101336]" dest="call_argument [39892,39898]"/>
  <match src="identifier: shift [37692,37697]" dest="identifier: shift [52273,52278]"/>
  <match src="primitive_type [100048,100055]" dest="primitive_type [38610,38617]"/>
  <match src="function: function [102937,102945]" dest="function: function [41499,41507]"/>
  <match src="identifier: _state [103782,103788]" dest="identifier: _state [42344,42350]"/>
  <match src="identifier: sender [54271,54277]" dest="identifier: sender [21361,21367]"/>
  <match src="call_argument [33495,33501]" dest="call_argument [48076,48082]"/>
  <match src="identifier: candidate [103090,103099]" dest="identifier: candidate [41652,41661]"/>
  <match src="view: view [96934,96938]" dest="view: view [35498,35502]"/>
  <match src="identifier: coupons [95222,95229]" dest="identifier: coupons [33786,33793]"/>
  <match src="identifier: reason [100005,100011]" dest="identifier: reason [38567,38573]"/>
  <match src="identifier: recipient [21591,21600]" dest="identifier: recipient [63361,63370]"/>
  <match src="=: = [38210,38211]" dest="=: = [52791,52792]"/>
  <match src="view: view [91422,91426]" dest="view: view [29986,29990]"/>
  <match src="[: [ [95068,95069]" dest="[: [ [33632,33633]"/>
  <match src="}: } [82549,82550]" dest="}: } [70854,70855]"/>
  <match src=",: , [100132,100133]" dest=",: , [38694,38695]"/>
  <match src="{: { [103218,103219]" dest="{: { [41780,41781]"/>
  <match src="primitive_type [55287,55291]" dest="primitive_type [22377,22381]"/>
  <match src="memory: memory [67120,67126]" dest="memory: memory [66310,66316]"/>
  <match src="variable_declaration_statement [67467,67564]" dest="variable_declaration_statement [66329,66390]"/>
  <match src="(: ( [8372,8373]" dest="(: ( [8957,8958]"/>
  <match src="parameter [91964,91979]" dest="parameter [30528,30543]"/>
  <match src="comment: // return ASCII letter (a-f) [39165,39193]" dest="comment: // return ASCII letter (a-f) [53746,53774]"/>
  <match src="boolean_literal [98086,98091]" dest="boolean_literal [36648,36653]"/>
  <match src="view: view [54841,54845]" dest="view: view [21931,21935]"/>
  <match src="): ) [55335,55336]" dest="): ) [22425,22426]"/>
  <match src="identifier: add [100304,100307]" dest="identifier: add [38866,38869]"/>
  <match src="private: private [43984,43991]" dest="private: private [13141,13148]"/>
  <match src="visibility [75223,75231]" dest="visibility [55576,55584]"/>
  <match src="identifier: value [9727,9732]" dest="identifier: value [10312,10317]"/>
  <match src="}: } [9511,9512]" dest="}: } [10096,10097]"/>
  <match src="identifier: accounts [104364,104372]" dest="identifier: accounts [42926,42934]"/>
  <match src=".: . [81829,81830]" dest=".: . [79036,79037]"/>
  <match src="uint256: uint256 [8601,8608]" dest="uint256: uint256 [9186,9193]"/>
  <match src="internal: internal [47528,47536]" dest="internal: internal [16685,16693]"/>
  <match src="call_argument [33081,33524]" dest="call_argument [47662,48105]"/>
  <match src="identifier: Decimal [65809,65816]" dest="identifier: Decimal [66550,66557]"/>
  <match src="{: { [1964,1965]" dest="{: { [2543,2544]"/>
  <match src="identifier: add [9288,9291]" dest="identifier: add [9873,9876]"/>
  <match src="member_expression [104194,104230]" dest="member_expression [42756,42792]"/>
  <match src="identifier: accounts [100727,100735]" dest="identifier: accounts [39289,39297]"/>
  <match src="[: [ [36794,36795]" dest="[: [ [51375,51376]"/>
  <match src="member_expression [93436,93453]" dest="member_expression [32000,32017]"/>
  <match src="parameter [10793,10806]" dest="parameter [11378,11391]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [3292,3746]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [3871,4325]"/>
  <match src="call_expression [5971,6000]" dest="call_expression [6550,6579]"/>
  <match src="): ) [84188,84189]" dest="): ) [78030,78031]"/>
  <match src="state_mutability [8828,8832]" dest="state_mutability [9413,9417]"/>
  <match src=".: . [65650,65651]" dest=".: . [19464,19465]"/>
  <match src="parameter [9543,9559]" dest="parameter [10128,10144]"/>
  <match src="comment: // '0' [29401,29407]" dest="comment: // '0' [43982,43988]"/>
  <match src="primitive_type [13490,13497]" dest="primitive_type [23281,23288]"/>
  <match src="(: ( [31898,31899]" dest="(: ( [46479,46480]"/>
  <match src="}: } [88211,88212]" dest="}: } [29054,29055]"/>
  <match src="primitive_type [67736,67743]" dest="primitive_type [61818,61825]"/>
  <match src="primitive_type [101088,101094]" dest="primitive_type [39650,39656]"/>
  <match src="{: { [33012,33013]" dest="{: { [47593,47594]"/>
  <match src="type_name [13490,13497]" dest="type_name [23281,23288]"/>
  <match src="identifier: _state [102144,102150]" dest="identifier: _state [40706,40712]"/>
  <match src="call_argument [94793,94808]" dest="call_argument [33357,33372]"/>
  <match src="struct_member [86789,86804]" dest="struct_member [27632,27647]"/>
  <match src="binary_expression [37706,37723]" dest="binary_expression [52287,52304]"/>
  <match src="{: { [32990,32991]" dest="{: { [47571,47572]"/>
  <match src="call_argument [31382,31401]" dest="call_argument [45963,45982]"/>
  <match src=".: . [8322,8323]" dest=".: . [8907,8908]"/>
  <match src="identifier: self [9555,9559]" dest="identifier: self [10140,10144]"/>
  <match src="user_defined_type [10084,10088]" dest="user_defined_type [10669,10673]"/>
  <match src=",: , [101070,101071]" dest=",: , [39632,39633]"/>
  <match src="return_statement [46126,46154]" dest="return_statement [15283,15311]"/>
  <match src="): ) [32294,32295]" dest="): ) [46875,46876]"/>
  <match src="bytes32: bytes32 [29844,29851]" dest="bytes32: bytes32 [44425,44432]"/>
  <match src="function_body [98607,98691]" dest="function_body [37169,37253]"/>
  <match src="identifier: ORACLE_POOL_RATIO [47884,47901]" dest="identifier: ORACLE_POOL_RATIO [17041,17058]"/>
  <match src="type_name [88238,88251]" dest="type_name [29081,29094]"/>
  <match src="identifier: candidate [96076,96085]" dest="identifier: candidate [34640,34649]"/>
  <match src="state_mutability [10065,10069]" dest="state_mutability [10650,10654]"/>
  <match src="): ) [98896,98897]" dest="): ) [37458,37459]"/>
  <match src="call_argument [100806,100812]" dest="call_argument [39368,39374]"/>
  <match src="call_argument [80310,80320]" dest="call_argument [69485,69495]"/>
  <match src=",: , [99789,99790]" dest=",: , [38351,38352]"/>
  <match src="contract: contract [64318,64326]" dest="contract: contract [64471,64479]"/>
  <match src="identifier: Require [83825,83832]" dest="identifier: Require [58030,58037]"/>
  <match src="identifier: self [10921,10925]" dest="identifier: self [11506,11510]"/>
  <match src=":: : [10132,10133]" dest=":: : [10717,10718]"/>
  <match src="): ) [95490,95491]" dest="): ) [34054,34055]"/>
  <match src="identifier: reason [8204,8210]" dest="identifier: reason [8789,8795]"/>
  <match src="bool: bool [96948,96952]" dest="bool: bool [35512,35516]"/>
  <match src=":: : [9275,9276]" dest=":: : [9860,9861]"/>
  <match src="{: { [9678,9679]" dest="{: { [10263,10264]"/>
  <match src="return_type_definition [92863,92880]" dest="return_type_definition [31427,31444]"/>
  <match src="uint256: uint256 [73061,73068]" dest="uint256: uint256 [62133,62140]"/>
  <match src="]: ] [103847,103848]" dest="]: ] [42409,42410]"/>
  <match src="(: ( [33837,33838]" dest="(: ( [48418,48419]"/>
  <match src="identifier: GOVERNANCE_SUPER_MAJORITY [46706,46731]" dest="identifier: GOVERNANCE_SUPER_MAJORITY [15863,15888]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [85949,85996]" dest="comment: // solhint-disable-next-line no-inline-assembly [72755,72802]"/>
  <match src="parameter [9783,9799]" dest="parameter [10368,10384]"/>
  <match src="constant: constant [43992,44000]" dest="constant: constant [13149,13157]"/>
  <match src="primitive_type [82050,82057]" dest="primitive_type [61196,61203]"/>
  <match src="primitive_type [35986,35991]" dest="primitive_type [50567,50572]"/>
  <match src="): ) [67562,67563]" dest="): ) [66388,66389]"/>
  <match src="variable_declaration_statement [67139,67289]" dest="variable_declaration_statement [65793,65882]"/>
  <match src="identifier: newUniv2 [80117,80125]" dest="identifier: period [76045,76051]"/>
  <match src="type_name [64438,64445]" dest="type_name [75962,75969]"/>
  <match src="call_expression [72887,72900]" dest="call_expression [58094,58107]"/>
  <match src="address: address [100365,100372]" dest="address: address [38927,38934]"/>
  <match src="(: ( [97051,97052]" dest="(: ( [35615,35616]"/>
  <match src="type_name [32169,32176]" dest="type_name [46750,46757]"/>
  <match src="): ) [9187,9188]" dest="): ) [9772,9773]"/>
  <match src="identifier: value [11563,11568]" dest="identifier: value [12148,12153]"/>
  <match src="call_argument [82380,82390]" dest="call_argument [77770,77780]"/>
  <match src="uint256: uint256 [102351,102358]" dest="uint256: uint256 [40913,40920]"/>
  <match src="identifier: Account [105635,105642]" dest="identifier: Account [67703,67710]"/>
  <match src="!=: != [23773,23775]" dest="!=: != [62952,62954]"/>
  <match src="(: ( [33882,33883]" dest="(: ( [48463,48464]"/>
  <match src="(: ( [80151,80152]" dest="(: ( [69327,69328]"/>
  <match src="identifier: amount [22342,22348]" dest="identifier: amount [58791,58797]"/>
  <match src="constant: constant [29421,29429]" dest="constant: constant [44002,44010]"/>
  <match src="parameter [32910,32926]" dest="parameter [47491,47507]"/>
  <match src="identifier: account [85481,85488]" dest="identifier: account [72287,72294]"/>
  <match src="type_name [53180,53187]" dest="type_name [20270,20277]"/>
  <match src="): ) [53819,53820]" dest="): ) [20909,20910]"/>
  <match src="call_argument [82799,82818]" dest="call_argument [78769,78791]"/>
  <match src="identifier: sender [82231,82237]" dest="identifier: sender [62294,62300]"/>
  <match src="call_argument [83406,83416]" dest="call_argument [63048,63058]"/>
  <match src="call_expression [52095,52126]" dest="call_expression [63635,63671]"/>
  <match src="{: { [92013,92014]" dest="{: { [30577,30578]"/>
  <match src="): ) [38086,38087]" dest="): ) [52667,52668]"/>
  <match src="memory: memory [53328,53334]" dest="memory: memory [20418,20424]"/>
  <match src="uint8: uint8 [37356,37361]" dest="uint8: uint8 [51937,51942]"/>
  <match src="identifier: initializeCouponsExpiration [102308,102335]" dest="identifier: initializeCouponsExpiration [40870,40897]"/>
  <match src="visibility [81705,81713]" dest="visibility [70402,70410]"/>
  <match src="number_literal: 32 [38501,38503]" dest="number_literal: 32 [53082,53084]"/>
  <match src="[: [ [101204,101205]" dest="[: [ [39766,39767]"/>
  <match src="): ) [46351,46352]" dest="): ) [15508,15509]"/>
  <match src="comment: // ============ Library Functions ============ [29746,29792]" dest="comment: // ============ Library Functions ============ [44327,44373]"/>
  <match src="identifier: self [7873,7877]" dest="identifier: self [8458,8462]"/>
  <match src="identifier: couponAllowances [86914,86930]" dest="identifier: couponAllowances [27757,27773]"/>
  <match src="identifier: snapshotTotalBonded [102196,102215]" dest="identifier: snapshotTotalBonded [40758,40777]"/>
  <match src="state_variable_declaration [43797,43848]" dest="state_variable_declaration [12954,13005]"/>
  <match src="type_name [30312,30319]" dest="type_name [44893,44900]"/>
  <match src="return_type_definition [53960,53977]" dest="return_type_definition [21050,21067]"/>
  <match src="function: function [13833,13841]" dest="function: function [23624,23632]"/>
  <match src="primitive_type [33629,33636]" dest="primitive_type [48210,48217]"/>
  <match src="uint256: uint256 [14619,14626]" dest="uint256: uint256 [24410,24417]"/>
  <match src="contract: contract [88977,88985]" dest="contract: contract [73610,73618]"/>
  <match src="string: string [4449,4455]" dest="string: string [5028,5034]"/>
  <match src="(: ( [54829,54830]" dest="(: ( [21919,21920]"/>
  <match src="memory: memory [9232,9238]" dest="memory: memory [9817,9823]"/>
  <match src="uint256: uint256 [87075,87082]" dest="uint256: uint256 [27918,27925]"/>
  <match src="): ) [81573,81574]" dest="): ) [70288,70289]"/>
  <match src="binary_expression [21510,21530]" dest="binary_expression [63272,63292]"/>
  <match src="uint256: uint256 [47051,47058]" dest="uint256: uint256 [16208,16215]"/>
  <match src="identifier: balanceCheck [83465,83477]" dest="identifier: balanceCheck [58647,58659]"/>
  <match src="identifier: self [8074,8078]" dest="identifier: self [8659,8663]"/>
  <match src="enum: enum [87355,87359]" dest="enum: enum [28198,28202]"/>
  <match src=",: , [101833,101834]" dest=",: , [40395,40396]"/>
  <match src="identifier: amount [24203,24209]" dest="identifier: amount [63486,63492]"/>
  <match src="address: address [98258,98265]" dest="address: address [36820,36827]"/>
  <match src="parameter [55098,55102]" dest="parameter [22188,22192]"/>
  <match src="type_name [67736,67743]" dest="type_name [61818,61825]"/>
  <match src="primitive_type [49033,49040]" dest="primitive_type [59927,59934]"/>
  <match src="(: ( [95719,95720]" dest="(: ( [34283,34284]"/>
  <match src="indexed: indexed [54315,54322]" dest="indexed: indexed [21405,21412]"/>
  <match src="(: ( [9659,9660]" dest="(: ( [10244,10245]"/>
  <match src="call_argument [99997,100003]" dest="call_argument [38559,38565]"/>
  <match src="identifier: getBootstrappingPrice [46178,46199]" dest="identifier: getBootstrappingPrice [15335,15356]"/>
  <match src="(: ( [54037,54038]" dest="(: ( [21127,21128]"/>
  <match src="{: { [87263,87264]" dest="{: { [28106,28107]"/>
  <match src="identifier: decrementAllowanceCoupons [101777,101802]" dest="identifier: decrementAllowanceCoupons [40339,40364]"/>
  <match src="call_argument [80962,80972]" dest="call_argument [79431,79441]"/>
  <match src="type_name [4500,4507]" dest="type_name [5079,5086]"/>
  <match src="call_argument [37706,37723]" dest="call_argument [52287,52304]"/>
  <match src="member_expression [11561,11568]" dest="member_expression [12146,12153]"/>
  <match src="member_expression [100867,100880]" dest="member_expression [39429,39442]"/>
  <match src="identifier: temp [9056,9060]" dest="identifier: temp [9641,9645]"/>
  <match src="): ) [47058,47059]" dest="): ) [16215,16216]"/>
  <match src="identifier: bonded [98496,98502]" dest="identifier: bonded [37058,37064]"/>
  <match src="primitive_type [54794,54801]" dest="primitive_type [21884,21891]"/>
  <match src="++: ++ [38506,38508]" dest="++: ++ [53087,53089]"/>
  <match src="identifier: lockedUntil [93860,93871]" dest="identifier: lockedUntil [32424,32435]"/>
  <match src="call_argument [82518,82519]" dest="call_argument [70829,70830]"/>
  <match src="visibility [7543,7551]" dest="visibility [8128,8136]"/>
  <match src="}: } [7649,7650]" dest="}: } [8234,8235]"/>
  <match src=".: . [100498,100499]" dest=".: . [39060,39061]"/>
  <match src="identifier: couponAllowances [101916,101932]" dest="identifier: couponAllowances [40478,40494]"/>
  <match src="uint256: uint256 [32937,32944]" dest="uint256: uint256 [47518,47525]"/>
  <match src="type_name [10084,10088]" dest="type_name [10669,10673]"/>
  <match src="identifier: payloadA [32587,32595]" dest="identifier: payloadA [47168,47176]"/>
  <match src="parameter [95028,95035]" dest="parameter [33592,33599]"/>
  <match src="): ) [13085,13086]" dest="): ) [22876,22877]"/>
  <match src="): ) [89546,89547]" dest="): ) [74179,74180]"/>
  <match src="member_expression [82506,82517]" dest="member_expression [70817,70828]"/>
  <match src="type_name [76007,76014]" dest="type_name [61606,61613]"/>
  <match src="}: } [84533,84534]" dest="}: } [71339,71340]"/>
  <match src="state_mutability [54780,54784]" dest="state_mutability [21870,21874]"/>
  <match src="): ) [82099,82100]" dest="): ) [70565,70566]"/>
  <match src="}: } [105743,105744]" dest="}: } [67811,67812]"/>
  <match src="primitive_type [97100,97107]" dest="primitive_type [35664,35671]"/>
  <match src="mapping: mapping [88155,88162]" dest="mapping: mapping [28998,29005]"/>
  <match src="state_mutability [31653,31657]" dest="state_mutability [46234,46238]"/>
  <match src="): ) [105843,105844]" dest="): ) [67911,67912]"/>
  <match src="identifier: reject [87542,87548]" dest="identifier: reject [28385,28391]"/>
  <match src="function_body [92552,92599]" dest="function_body [31116,31163]"/>
  <match src="private: private [44847,44854]" dest="private: private [14004,14011]"/>
  <match src="string [22903,22938]" dest="string [62680,62717]"/>
  <match src="): ) [93026,93027]" dest="): ) [31590,31591]"/>
  <match src="uint: uint [53719,53723]" dest="uint: uint [20809,20813]"/>
  <match src="string: string [53259,53265]" dest="string: string [20349,20355]"/>
  <match src="(: ( [92411,92412]" dest="(: ( [30975,30976]"/>
  <match src="visibility [62929,62935]" dest="visibility [26788,26794]"/>
  <match src="(: ( [54531,54532]" dest="(: ( [21621,21622]"/>
  <match src="return_statement [46522,46570]" dest="return_statement [15679,15727]"/>
  <match src="type_name [54279,54283]" dest="type_name [21369,21373]"/>
  <match src="identifier: sub [9489,9492]" dest="identifier: sub [10074,10077]"/>
  <match src="identifier: result [38326,38332]" dest="identifier: result [52907,52913]"/>
  <match src="parameter [32937,32953]" dest="parameter [47518,47534]"/>
  <match src="expression_statement [100536,100602]" dest="expression_statement [39098,39164]"/>
  <match src=".: . [94013,94014]" dest=".: . [32577,32578]"/>
  <match src="{: { [99138,99139]" dest="{: { [37700,37701]"/>
  <match src="function_definition [47917,48005]" dest="function_definition [17074,17162]"/>
  <match src="type_name [31585,31592]" dest="type_name [46166,46173]"/>
  <match src="identifier: Status [94038,94044]" dest="identifier: Status [32602,32608]"/>
  <match src="=: = [99969,99970]" dest="=: = [38531,38532]"/>
  <match src="return_type_definition [92750,92767]" dest="return_type_definition [31314,31331]"/>
  <match src="if: if [93605,93607]" dest="if: if [32169,32171]"/>
  <match src="call_argument [11382,11393]" dest="call_argument [11967,11978]"/>
  <match src="function_definition [97991,98099]" dest="function_definition [36553,36661]"/>
  <match src="(: ( [68322,68323]" dest="(: ( [70728,70729]"/>
  <match src=",: , [11452,11453]" dest=",: , [12037,12038]"/>
  <match src="member_expression [92786,92811]" dest="member_expression [31350,31375]"/>
  <match src="(: ( [1453,1454]" dest="(: ( [2032,2033]"/>
  <match src="type_name [86886,86913]" dest="type_name [27729,27756]"/>
  <match src="identifier: coupons [102788,102795]" dest="identifier: coupons [41350,41357]"/>
  <match src="parameter [27980,27995]" dest="parameter [55106,55121]"/>
  <match src="=: = [29505,29506]" dest="=: = [44086,44087]"/>
  <match src="function: function [63010,63018]" dest="function: function [26869,26877]"/>
  <match src=",: , [31853,31854]" dest=",: , [46434,46435]"/>
  <match src="private: private [11489,11496]" dest="private: private [12074,12081]"/>
  <match src="primitive_type [1910,1917]" dest="primitive_type [2489,2496]"/>
  <match src="(: ( [46489,46490]" dest="(: ( [15646,15647]"/>
  <match src="struct_member [86886,86931]" dest="struct_member [27729,27774]"/>
  <match src="identifier: owner [101973,101978]" dest="identifier: owner [40535,40540]"/>
  <match src="event_paramater [15308,15321]" dest="event_paramater [25099,25112]"/>
  <match src="parameter [18146,18160]" dest="parameter [55736,55750]"/>
  <match src="identifier: lastReserve [67764,67775]" dest="identifier: balance [69958,69965]"/>
  <match src="identifier: amount [19457,19463]" dest="identifier: amount [18071,18077]"/>
  <match src="identifier: value [11552,11557]" dest="identifier: value [12137,12142]"/>
  <match src="identifier: result [35816,35822]" dest="identifier: result [50397,50403]"/>
  <match src="function_body [98068,98099]" dest="function_body [36630,36661]"/>
  <match src="identifier: epochs [95062,95068]" dest="identifier: epochs [33626,33632]"/>
  <match src="!: ! [105813,105814]" dest="!: ! [67881,67882]"/>
  <match src="return_type_definition [53740,53754]" dest="return_type_definition [20830,20844]"/>
  <match src="(: ( [91527,91528]" dest="(: ( [30091,30092]"/>
  <match src="uint256: uint256 [94308,94315]" dest="uint256: uint256 [32872,32879]"/>
  <match src="address: address [53630,53637]" dest="address: address [20720,20727]"/>
  <match src="call_argument [38349,38363]" dest="call_argument [52930,52944]"/>
  <match src="type_name [46225,46237]" dest="type_name [15382,15394]"/>
  <match src="function: function [13472,13480]" dest="function: function [23263,23271]"/>
  <match src="binary_expression [3207,3217]" dest="binary_expression [3786,3796]"/>
  <match src="type_name [76559,76566]" dest="type_name [58255,58262]"/>
  <match src="view: view [91852,91856]" dest="view: view [30416,30420]"/>
  <match src="identifier: offset [44306,44312]" dest="identifier: offset [13463,13469]"/>
  <match src=",: , [30666,30667]" dest=",: , [45247,45248]"/>
  <match src="returns: returns [96647,96654]" dest="returns: returns [35211,35218]"/>
  <match src="parameter [100134,100148]" dest="parameter [38696,38710]"/>
  <match src="private: private [89246,89253]" dest="private: private [73879,73886]"/>
  <match src="identifier: that [34178,34182]" dest="identifier: that [48759,48763]"/>
  <match src="identifier: FILE [82985,82989]" dest="identifier: FILE [78190,78194]"/>
  <match src=",: , [1987,1988]" dest=",: , [2566,2567]"/>
  <match src="string_literal [27883,27933]" dest="string_literal [77285,77314]"/>
  <match src="call_argument [23788,23824]" dest="call_argument [62967,63011]"/>
  <match src="identifier: encodeWithSignature [89924,89943]" dest="identifier: encodeWithSignature [74557,74576]"/>
  <match src="[: [ [93850,93851]" dest="[: [ [32414,32415]"/>
  <match src="identifier: epoch [102852,102857]" dest="identifier: epoch [41414,41419]"/>
  <match src="): ) [9388,9389]" dest="): ) [9973,9974]"/>
  <match src=".: . [47411,47412]" dest=".: . [16568,16569]"/>
  <match src="): ) [95324,95325]" dest="): ) [33888,33889]"/>
  <match src="state_mutability [45506,45510]" dest="state_mutability [14663,14667]"/>
  <match src="(: ( [80432,80433]" dest="(: ( [69580,69581]"/>
  <match src="binary_expression [6018,6023]" dest="binary_expression [6597,6602]"/>
  <match src="call_argument [84166,84178]" dest="call_argument [78005,78020]"/>
  <match src="call_argument [10720,10724]" dest="call_argument [11305,11309]"/>
  <match src="identifier: file [30071,30075]" dest="identifier: file [44652,44656]"/>
  <match src="pure: pure [45506,45510]" dest="pure: pure [14663,14667]"/>
  <match src="variable_declaration_statement [89851,89961]" dest="variable_declaration_statement [74484,74594]"/>
  <match src="internal: internal [10239,10247]" dest="internal: internal [10824,10832]"/>
  <match src="identifier: amount [98507,98513]" dest="identifier: amount [37069,37075]"/>
  <match src="uint256: uint256 [2837,2844]" dest="uint256: uint256 [3416,3423]"/>
  <match src="solidity_pragma_token [1128,1144]" dest="solidity_pragma_token [1130,1146]"/>
  <match src="function: function [94371,94379]" dest="function: function [32935,32943]"/>
  <match src="identifier: sender [82954,82960]" dest="identifier: sender [76384,76390]"/>
  <match src="identifier: IERC20 [17356,17362]" dest="identifier: Curve [59807,59812]"/>
  <match src="return_type_definition [55089,55103]" dest="return_type_definition [22179,22193]"/>
  <match src="external: external [54956,54964]" dest="external: external [22046,22054]"/>
  <match src="identifier: that [83833,83837]" dest="identifier: that [58038,58042]"/>
  <match src="state_mutability [7557,7561]" dest="state_mutability [8142,8146]"/>
  <match src="=: = [38828,38829]" dest="=: = [53409,53410]"/>
  <match src="visibility [34344,34352]" dest="visibility [48925,48933]"/>
  <match src="call_expression [105587,105722]" dest="call_expression [67655,67790]"/>
  <match src="): ) [100066,100067]" dest="): ) [38628,38629]"/>
  <match src="identifier: i [38490,38491]" dest="identifier: i [53071,53072]"/>
  <match src="member_expression [99849,99881]" dest="member_expression [38411,38443]"/>
  <match src="identifier: slot [90432,90436]" dest="identifier: slot [75065,75069]"/>
  <match src="identifier: D256 [46272,46276]" dest="identifier: D256 [15429,15433]"/>
  <match src="uint8: uint8 [39215,39220]" dest="uint8: uint8 [53796,53801]"/>
  <match src="(: ( [83877,83878]" dest="(: ( [58783,58784]"/>
  <match src="identifier: abi [35213,35216]" dest="identifier: abi [49794,49797]"/>
  <match src="identifier: approve [98116,98123]" dest="identifier: approve [36678,36685]"/>
  <match src="identifier: _state [96409,96415]" dest="identifier: _state [34973,34979]"/>
  <match src="type_name [31562,31569]" dest="type_name [46143,46150]"/>
  <match src=".: . [80786,80787]" dest=".: . [69655,69656]"/>
  <match src="call_expression [82506,82520]" dest="call_expression [70817,70831]"/>
  <match src=",: , [79727,79728]" dest=",: , [68802,68803]"/>
  <match src="pure: pure [7225,7229]" dest="pure: pure [7810,7814]"/>
  <match src="): ) [89576,89577]" dest="): ) [74209,74210]"/>
  <match src="visibility [90263,90270]" dest="visibility [74896,74903]"/>
  <match src="yul_identifier [86017,86021]" dest="yul_identifier [72823,72827]"/>
  <match src="identifier: State [106579,106584]" dest="identifier: State [80385,80390]"/>
  <match src=".: . [94719,94720]" dest=".: . [33283,33284]"/>
  <match src="(: ( [31391,31392]" dest="(: ( [45972,45973]"/>
  <match src="pure: pure [9850,9854]" dest="pure: pure [10435,10439]"/>
  <match src="call_expression [104259,104278]" dest="call_expression [42821,42840]"/>
  <match src="function: function [96746,96754]" dest="function: function [35310,35318]"/>
  <match src="identifier: debt [98778,98782]" dest="identifier: debt [37340,37344]"/>
  <match src="is: is [97807,97809]" dest="is: is [36369,36371]"/>
  <match src="struct_member [87534,87549]" dest="struct_member [28377,28392]"/>
  <match src="parameter [98876,98896]" dest="parameter [37438,37458]"/>
  <match src="): ) [65617,65618]" dest="): ) [66278,66279]"/>
  <match src="visibility [4477,4485]" dest="visibility [5056,5064]"/>
  <match src="identifier: _state [103072,103078]" dest="identifier: _state [41634,41640]"/>
  <match src="identifier: withdraw [80424,80432]" dest="identifier: withdraw [69572,69580]"/>
  <match src="=&gt;: =&gt; [87575,87577]" dest="=&gt;: =&gt; [28418,28420]"/>
  <match src="(: ( [22995,22996]" dest="(: ( [55441,55442]"/>
  <match src="identifier: balance [99588,99595]" dest="identifier: balance [38150,38157]"/>
  <match src="user_defined_type [93804,93818]" dest="user_defined_type [32368,32382]"/>
  <match src="visibility [85490,85498]" dest="visibility [72296,72304]"/>
  <match src="identifier: stringify [33449,33458]" dest="identifier: stringify [48030,48039]"/>
  <match src="primitive_type [50943,50950]" dest="primitive_type [26102,26109]"/>
  <match src="visibility [55337,55345]" dest="visibility [22427,22435]"/>
  <match src="(: ( [35229,35230]" dest="(: ( [49810,49811]"/>
  <match src="identifier: accounts [91781,91789]" dest="identifier: accounts [30345,30353]"/>
  <match src="member_expression [10286,10296]" dest="member_expression [10871,10881]"/>
  <match src="identifier: amount [23650,23656]" dest="identifier: amount [62908,62914]"/>
  <match src="revert_statement [33767,34143]" dest="revert_statement [48348,48724]"/>
  <match src="identifier: spender [50181,50188]" dest="identifier: spender [63060,63067]"/>
  <match src="identifier: D256 [9342,9346]" dest="identifier: D256 [9927,9931]"/>
  <match src="identifier: epochs [95208,95214]" dest="identifier: epochs [33772,33778]"/>
  <match src="comment: // 24 [45297,45302]" dest="comment: // 24 [14454,14459]"/>
  <match src=".: . [100744,100745]" dest=".: . [39306,39307]"/>
  <match src="identifier: decimals [91615,91623]" dest="identifier: decimals [30179,30187]"/>
  <match src="identifier: newImplementation [89820,89837]" dest="identifier: newImplementation [74453,74470]"/>
  <match src="uint256: uint256 [19992,19999]" dest="uint256: uint256 [18172,18179]"/>
  <match src="identifier: result [38280,38286]" dest="identifier: result [52861,52867]"/>
  <match src="boolean_literal [98335,98340]" dest="boolean_literal [36897,36902]"/>
  <match src="identifier: msg [79517,79520]" dest="identifier: msg [62641,62644]"/>
  <match src="): ) [37865,37866]" dest="): ) [52446,52447]"/>
  <match src="call_expression [80778,80814]" dest="call_expression [69647,69683]"/>
  <match src=".: . [96837,96838]" dest=".: . [35401,35402]"/>
  <match src="type_name [45002,45009]" dest="type_name [14159,14166]"/>
  <match src="visibility [10927,10935]" dest="visibility [11512,11520]"/>
  <match src="visibility [47271,47279]" dest="visibility [16428,16436]"/>
  <match src="uint256: uint256 [81690,81697]" dest="uint256: uint256 [70889,70896]"/>
  <match src="identifier: Require [82905,82912]" dest="identifier: Require [78129,78136]"/>
  <match src="identifier: bonded [92477,92483]" dest="identifier: bonded [31041,31047]"/>
  <match src="return_type_definition [13898,13915]" dest="return_type_definition [23689,23706]"/>
  <match src="member_expression [7873,7887]" dest="member_expression [8458,8472]"/>
  <match src="identifier: newImplementation [90244,90261]" dest="identifier: newImplementation [74877,74894]"/>
  <match src="==: == [10297,10299]" dest="==: == [10882,10884]"/>
  <match src="identifier: candidates [103827,103837]" dest="identifier: candidates [42389,42399]"/>
  <match src="identifier: payloadB [34296,34304]" dest="identifier: payloadB [48877,48885]"/>
  <match src="member_expression [95201,95214]" dest="member_expression [33765,33778]"/>
  <match src="if_statement [31012,31503]" dest="if_statement [45593,46084]"/>
  <match src=",: , [81634,81635]" dest=",: , [71296,71297]"/>
  <match src="type_name [98860,98867]" dest="type_name [37422,37429]"/>
  <match src="&quot;: &quot; [81572,81573]" dest="&quot;: &quot; [70287,70288]"/>
  <match src="call_expression [99642,99675]" dest="call_expression [38204,38237]"/>
  <match src="visibility [104470,104478]" dest="visibility [43032,43040]"/>
  <match src="): ) [93639,93640]" dest="): ) [32203,32204]"/>
  <match src="internal: internal [47834,47842]" dest="internal: internal [16991,16999]"/>
  <match src="binary_expression [9018,9023]" dest="binary_expression [9603,9608]"/>
  <match src="(: ( [39114,39115]" dest="(: ( [53695,53696]"/>
  <match src="address: address [51801,51808]" dest="address: address [54580,54587]"/>
  <match src="member_expression [96683,96708]" dest="member_expression [35247,35272]"/>
  <match src="member_expression [102773,102795]" dest="member_expression [41335,41357]"/>
  <match src="comment: // 'a' - 10 [29456,29467]" dest="comment: // 'a' - 10 [44037,44048]"/>
  <match src="call_argument [33449,33468]" dest="call_argument [48030,48049]"/>
  <match src="type_name [13194,13201]" dest="type_name [22985,22992]"/>
  <match src="identifier: z [38730,38731]" dest="identifier: z [53311,53312]"/>
  <match src="): ) [80197,80198]" dest="): ) [76330,76331]"/>
  <match src="primitive_type [27623,27630]" dest="primitive_type [60183,60190]"/>
  <match src="identifier: sender [82093,82099]" dest="identifier: sender [70559,70565]"/>
  <match src="identifier: balanceOfBonded [81766,81781]" dest="identifier: poolAmount [58425,58435]"/>
  <match src="(: ( [100038,100039]" dest="(: ( [38600,38601]"/>
  <match src="[: [ [103263,103264]" dest="[: [ [41825,41826]"/>
  <match src="identifier: blockTimestampLast [54898,54916]" dest="identifier: blockTimestampLast [21988,22006]"/>
  <match src="member_expression [94335,94355]" dest="member_expression [32899,32919]"/>
  <match src="function_definition [92391,92491]" dest="function_definition [30955,31055]"/>
  <match src="function_definition [3752,3884]" dest="function_definition [4331,4463]"/>
  <match src="!: ! [31678,31679]" dest="!: ! [46259,46260]"/>
  <match src="uint256: uint256 [44377,44384]" dest="uint256: uint256 [13534,13541]"/>
  <match src="function_body [35132,36002]" dest="function_body [49713,50583]"/>
  <match src="type_name [10362,10366]" dest="type_name [10947,10951]"/>
  <match src="identifier: price [66567,66572]" dest="identifier: price [64898,64903]"/>
  <match src="function_definition [36010,36947]" dest="function_definition [50591,51528]"/>
  <match src="): ) [46509,46510]" dest="): ) [15666,15667]"/>
  <match src="type_name [54463,54467]" dest="type_name [21553,21557]"/>
  <match src="uint256: uint256 [94145,94152]" dest="uint256: uint256 [32709,32716]"/>
  <match src="=: = [37349,37350]" dest="=: = [51930,51931]"/>
  <match src="expression_statement [38726,38737]" dest="expression_statement [53307,53318]"/>
  <match src="string: string [101851,101857]" dest="string: string [40413,40419]"/>
  <match src="identifier: coupons [100787,100794]" dest="identifier: coupons [39349,39356]"/>
  <match src=":: : [7444,7445]" dest=":: : [8029,8030]"/>
  <match src="&quot;: &quot; [105433,105434]" dest="&quot;: &quot; [67501,67502]"/>
  <match src="comment: /**  * @title Roles  * @dev Library for managing addresses assigned to a Role.  */ [26539,26624]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [26924,27505]"/>
  <match src="call_argument [2492,2504]" dest="call_argument [3071,3083]"/>
  <match src="}: } [8351,8352]" dest="}: } [8936,8937]"/>
  <match src="(: ( [46645,46646]" dest="(: ( [15802,15803]"/>
  <match src="call_argument [30052,30076]" dest="call_argument [44633,44657]"/>
  <match src="}: } [86996,86997]" dest="}: } [27839,27840]"/>
  <match src="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [2891,2970]" dest="comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [3470,3549]"/>
  <match src="identifier: b [10871,10872]" dest="identifier: b [11456,11457]"/>
  <match src="identifier: file [31154,31158]" dest="identifier: file [45735,45739]"/>
  <match src=".: . [104218,104219]" dest=".: . [42780,42781]"/>
  <match src="parameter [53544,53557]" dest="parameter [20634,20647]"/>
  <match src="member_expression [93905,93919]" dest="member_expression [32469,32483]"/>
  <match src="): ) [102657,102658]" dest="): ) [41219,41220]"/>
  <match src="): ) [8725,8726]" dest="): ) [9310,9311]"/>
  <match src="call_expression [83852,83859]" dest="call_expression [58762,58770]"/>
  <match src="external: external [63026,63034]" dest="external: external [26885,26893]"/>
  <match src="state_mutability [37023,37027]" dest="state_mutability [51604,51608]"/>
  <match src="(: ( [105281,105282]" dest="(: ( [67349,67350]"/>
  <match src="function: function [33585,33593]" dest="function: function [48166,48174]"/>
  <match src="type_name [34236,34243]" dest="type_name [48817,48824]"/>
  <match src="identifier: _state [102391,102397]" dest="identifier: _state [40953,40959]"/>
  <match src="function: function [46749,46757]" dest="function: function [15906,15914]"/>
  <match src="primitive_type [66599,66606]" dest="primitive_type [70987,70994]"/>
  <match src="identifier: lessUsdc [80099,80107]" dest="identifier: amount [80601,80607]"/>
  <match src="identifier: reason [30154,30160]" dest="identifier: reason [44735,44741]"/>
  <match src="uint: uint [55222,55226]" dest="uint: uint [22312,22316]"/>
  <match src="identifier: stringifyTruncated [31880,31898]" dest="identifier: stringifyTruncated [46461,46479]"/>
  <match src="returns: returns [62968,62975]" dest="returns: returns [26827,26834]"/>
  <match src="identifier: capture [65609,65616]" dest="identifier: oracleCapture [66264,66277]"/>
  <match src="call_expression [83296,83309]" dest="call_expression [71034,71047]"/>
  <match src="(: ( [34520,34521]" dest="(: ( [49101,49102]"/>
  <match src="identifier: accounts [100769,100777]" dest="identifier: accounts [39331,39339]"/>
  <match src="): ) [46465,46466]" dest="): ) [15622,15623]"/>
  <match src="{: { [103006,103007]" dest="{: { [41568,41569]"/>
  <match src="uint256: uint256 [86789,86796]" dest="uint256: uint256 [27632,27639]"/>
  <match src="function: function [37944,37952]" dest="function: function [52525,52533]"/>
  <match src="memory: memory [35119,35125]" dest="memory: memory [49700,49706]"/>
  <match src="identifier: sender [80385,80391]" dest="identifier: sender [69533,69539]"/>
  <match src=":: : [8704,8705]" dest=":: : [9289,9290]"/>
  <match src="expression_statement [101494,101580]" dest="expression_statement [40056,40142]"/>
  <match src="comment: // Solidity only automatically asserts when dividing by 0 [4520,4577]" dest="comment: // Solidity only automatically asserts when dividing by 0 [5099,5156]"/>
  <match src="identifier: USDC [45547,45551]" dest="identifier: USDC [14704,14708]"/>
  <match src="(: ( [7730,7731]" dest="(: ( [8315,8316]"/>
  <match src="memory: memory [8946,8952]" dest="memory: memory [9531,9537]"/>
  <match src=".: . [92800,92801]" dest=".: . [31364,31365]"/>
  <match src="): ) [83309,83310]" dest="): ) [71047,71048]"/>
  <match src="identifier: _state [100440,100446]" dest="identifier: _state [39002,39008]"/>
  <match src="type_name [18146,18153]" dest="type_name [55736,55743]"/>
  <match src="number_literal: 0 [8885,8886]" dest="number_literal: 0 [9470,9471]"/>
  <match src="type_name [103946,103952]" dest="type_name [42508,42514]"/>
  <match src="call_expression [102252,102259]" dest="call_expression [40814,40821]"/>
  <match src="function_body [65670,65849]" dest="function_body [66318,66607]"/>
  <match src="identifier: expiring [95373,95381]" dest="identifier: expiring [33937,33945]"/>
  <match src="identifier: IERC20 [12944,12950]" dest="identifier: IERC20 [22735,22741]"/>
  <match src="uint8: uint8 [38343,38348]" dest="uint8: uint8 [52924,52929]"/>
  <match src="type_name [21447,21454]" dest="type_name [63194,63201]"/>
  <match src="): ) [32431,32432]" dest="): ) [47012,47013]"/>
  <match src="identifier: amount [19370,19376]" dest="identifier: amount [59143,59149]"/>
  <match src="identifier: length [35666,35672]" dest="identifier: length [50247,50253]"/>
  <match src="function: function [13175,13183]" dest="function: function [22966,22974]"/>
  <match src="): ) [7456,7457]" dest="): ) [8041,8042]"/>
  <match src="type_name [95756,95760]" dest="type_name [34320,34324]"/>
  <match src="primitive_type [80091,80098]" dest="primitive_type [80593,80600]"/>
  <match src="event_paramater [80009,80029]" dest="event_paramater [76143,76157]"/>
  <match src="address: address [102962,102969]" dest="address: address [41524,41531]"/>
  <match src="): ) [72057,72058]" dest="): ) [58089,58090]"/>
  <match src="event_paramater [27674,27697]" dest="event_paramater [60062,60085]"/>
  <match src="visibility [44564,44571]" dest="visibility [13721,13728]"/>
  <match src="type_name [45241,45248]" dest="type_name [14398,14405]"/>
  <match src="): ) [93592,93593]" dest="): ) [32156,32157]"/>
  <match src="call_argument [8697,8725]" dest="call_argument [9282,9310]"/>
  <match src="member_expression [98457,98471]" dest="member_expression [37019,37033]"/>
  <match src="): ) [54513,54514]" dest="): ) [21603,21604]"/>
  <match src="): ) [8534,8535]" dest="): ) [9119,9120]"/>
  <match src="identifier: balance [101363,101370]" dest="identifier: balance [39925,39932]"/>
  <match src="(: ( [107303,107304]" dest="(: ( [55391,55392]"/>
  <match src="call_expression [8060,8104]" dest="call_expression [8645,8689]"/>
  <match src="function: function [36955,36963]" dest="function: function [51536,51544]"/>
  <match src="(: ( [105772,105773]" dest="(: ( [67840,67841]"/>
  <match src="number_literal: 1e6 [44213,44216]" dest="number_literal: 1e6 [13370,13373]"/>
  <match src=",: , [5985,5986]" dest=",: , [6564,6565]"/>
  <match src="comment: /* Bonding */ [44144,44157]" dest="comment: /* Bonding */ [13301,13314]"/>
  <match src="): ) [82682,82683]" dest="): ) [58329,58330]"/>
  <match src=".: . [98487,98488]" dest=".: . [37049,37050]"/>
  <match src="identifier: staged [100195,100201]" dest="identifier: staged [38757,38763]"/>
  <match src="identifier: FILE [49999,50003]" dest="identifier: FILE [61896,61900]"/>
  <match src="contract: contract [88216,88224]" dest="contract: contract [29059,29067]"/>
  <match src="identifier: D256 [7942,7946]" dest="identifier: D256 [8527,8531]"/>
  <match src="(: ( [104267,104268]" dest="(: ( [42829,42830]"/>
  <match src="(: ( [54185,54186]" dest="(: ( [21275,21276]"/>
  <match src="function_definition [103295,103474]" dest="function_definition [41857,42036]"/>
  <match src="function_body [46246,46314]" dest="function_body [15403,15471]"/>
  <match src="identifier: sub [101212,101215]" dest="identifier: sub [39774,39777]"/>
  <match src="member_expression [11632,11639]" dest="member_expression [12217,12224]"/>
  <match src="identifier: BASE [9951,9955]" dest="identifier: BASE [10536,10540]"/>
  <match src="identifier: CHAIN_ID [43740,43748]" dest="identifier: CHAIN_ID [12897,12905]"/>
  <match src="): ) [31475,31476]" dest="): ) [46056,46057]"/>
  <match src="identifier: sub [72059,72062]" dest="identifier: add [58108,58111]"/>
  <match src="identifier: Constants [94474,94483]" dest="identifier: Constants [33038,33047]"/>
  <match src="primitive_type [55098,55102]" dest="primitive_type [22188,22192]"/>
  <match src=",: , [10869,10870]" dest=",: , [11454,11455]"/>
  <match src="visibility [44914,44921]" dest="visibility [14071,14078]"/>
  <match src="return_statement [92563,92592]" dest="return_statement [31127,31156]"/>
  <match src="call_expression [37225,37238]" dest="call_expression [51806,51819]"/>
  <match src="): ) [104303,104304]" dest="): ) [42865,42866]"/>
  <match src="state_variable_declaration [44839,44889]" dest="state_variable_declaration [13996,14046]"/>
  <match src="(: ( [100239,100240]" dest="(: ( [38801,38802]"/>
  <match src="visibility [53362,53370]" dest="visibility [20452,20460]"/>
  <match src=".: . [11623,11624]" dest=".: . [12208,12209]"/>
  <match src="identifier: Frozen [94021,94027]" dest="identifier: Frozen [32585,32591]"/>
  <match src="member_expression [95201,95240]" dest="member_expression [33765,33804]"/>
  <match src="struct: struct [44266,44272]" dest="struct: struct [13423,13429]"/>
  <match src="identifier: candidate [96775,96784]" dest="identifier: candidate [35339,35348]"/>
  <match src="type_name [91964,91971]" dest="type_name [30528,30535]"/>
  <match src="call_argument [99710,99711]" dest="call_argument [38272,38273]"/>
  <match src="{: { [3819,3820]" dest="{: { [4398,4399]"/>
  <match src="identifier: amount [99997,100003]" dest="identifier: amount [38559,38565]"/>
  <match src="visibility [5251,5259]" dest="visibility [5830,5838]"/>
  <match src=",: , [65238,65239]" dest=",: , [79314,79315]"/>
  <match src="primitive_type [64671,64678]" dest="primitive_type [80521,80528]"/>
  <match src="function_body [34368,34955]" dest="function_body [48949,49536]"/>
  <match src="call_expression [7612,7651]" dest="call_expression [8197,8236]"/>
  <match src="parameter [10499,10512]" dest="parameter [11084,11097]"/>
  <match src="identifier: must [31679,31683]" dest="identifier: must [46260,46264]"/>
  <match src="): ) [54954,54955]" dest="): ) [22044,22045]"/>
  <match src="call_expression [83852,83920]" dest="call_expression [58057,58149]"/>
  <match src="return_type_definition [13534,13548]" dest="return_type_definition [23325,23339]"/>
  <match src="identifier: recordVote [103141,103151]" dest="identifier: recordVote [41703,41713]"/>
  <match src="}: } [99070,99071]" dest="}: } [37632,37633]"/>
  <match src="primitive_type [24739,24746]" dest="primitive_type [17946,17953]"/>
  <match src="user_defined_type [62977,62989]" dest="user_defined_type [26836,26848]"/>
  <match src=",: , [9559,9560]" dest=",: , [10144,10145]"/>
  <match src="identifier: addedValue [20000,20010]" dest="identifier: totalDebt [18180,18189]"/>
  <match src="identifier: self [10356,10360]" dest="identifier: self [10941,10945]"/>
  <match src="string [23788,23824]" dest="string [62967,63011]"/>
  <match src="identifier: incrementRejectFor [103708,103726]" dest="identifier: incrementRejectFor [42270,42288]"/>
  <match src="return_type_definition [67727,67744]" dest="return_type_definition [61809,61826]"/>
  <match src="parameter [9369,9382]" dest="parameter [9954,9967]"/>
  <match src="member_expression [94758,94773]" dest="member_expression [33322,33337]"/>
  <match src="primitive_type [80433,80440]" dest="primitive_type [69581,69588]"/>
  <match src="): ) [94390,94391]" dest="): ) [32954,32955]"/>
  <match src="uint256: uint256 [43715,43722]" dest="uint256: uint256 [12872,12879]"/>
  <match src="identifier: value [80268,80273]" dest="identifier: value [69443,69448]"/>
  <match src="uint256: uint256 [79790,79797]" dest="uint256: uint256 [68865,68872]"/>
  <match src="call_argument [34681,34689]" dest="call_argument [49262,49270]"/>
  <match src="identifier: decrementBalanceOfCoupons [101014,101039]" dest="identifier: decrementBalanceOfCoupons [39576,39601]"/>
  <match src="identifier: epoch [93628,93633]" dest="identifier: epoch [32192,32197]"/>
  <match src="): ) [14633,14634]" dest="): ) [24424,24425]"/>
  <match src="parameter [9570,9583]" dest="parameter [10155,10168]"/>
  <match src="call_argument [49190,49203]" dest="call_argument [54903,54916]"/>
  <match src="assignment_expression [100930,100989]" dest="assignment_expression [39492,39551]"/>
  <match src="block_statement [35375,35932]" dest="block_statement [49956,50513]"/>
  <match src="(: ( [1909,1910]" dest="(: ( [2488,2489]"/>
  <match src=",: , [5309,5310]" dest=",: , [5888,5889]"/>
  <match src="}: } [100996,100997]" dest="}: } [39558,39559]"/>
  <match src="function_body [2880,3284]" dest="function_body [3459,3863]"/>
  <match src="(: ( [9427,9428]" dest="(: ( [10012,10013]"/>
  <match src="(: ( [38834,38835]" dest="(: ( [53415,53416]"/>
  <match src="parameter [30289,30301]" dest="parameter [44870,44882]"/>
  <match src="identifier: stringifyTruncated [34502,34520]" dest="identifier: stringifyTruncated [49083,49101]"/>
  <match src="{: { [8965,8966]" dest="{: { [9550,9551]"/>
  <match src="identifier: bootstrappingAt [95704,95719]" dest="identifier: bootstrappingAt [34268,34283]"/>
  <match src="call_argument [83296,83309]" dest="call_argument [71034,71047]"/>
  <match src="parameter [77737,77744]" dest="parameter [55934,55941]"/>
  <match src="using: using [91194,91199]" dest="using: using [29758,29763]"/>
  <match src="identifier: D256 [9869,9873]" dest="identifier: D256 [10454,10458]"/>
  <match src="return: return [9689,9695]" dest="return: return [10274,10280]"/>
  <match src=".: . [102397,102398]" dest=".: . [40959,40960]"/>
  <match src="call_argument [33915,33920]" dest="call_argument [48496,48501]"/>
  <match src="identifier: FOUR_BIT_MASK [37710,37723]" dest="identifier: FOUR_BIT_MASK [52291,52304]"/>
  <match src="primitive_type [9594,9600]" dest="primitive_type [10179,10185]"/>
  <match src="type_name [9369,9373]" dest="type_name [9954,9958]"/>
  <match src="call_expression [104259,104304]" dest="call_expression [42821,42866]"/>
  <match src="modifier_invocation [80744,80766]" dest="modifier_invocation [70913,70942]"/>
  <match src="identifier: candidates [95998,96008]" dest="identifier: candidates [34562,34572]"/>
  <match src="primitive_type [5229,5236]" dest="primitive_type [5808,5815]"/>
  <match src="returns: returns [95948,95955]" dest="returns: returns [34512,34519]"/>
  <match src="external: external [98157,98165]" dest="external: external [36719,36727]"/>
  <match src="identifier: stringify [34749,34758]" dest="identifier: stringify [49330,49339]"/>
  <match src=".: . [98924,98925]" dest=".: . [37486,37487]"/>
  <match src="identifier: account [100373,100380]" dest="identifier: account [38935,38942]"/>
  <match src=",: , [2403,2404]" dest=",: , [2982,2983]"/>
  <match src=".: . [101196,101197]" dest=".: . [39758,39759]"/>
  <match src="identifier: token0 [54706,54712]" dest="identifier: token0 [21796,21802]"/>
  <match src="(: ( [80936,80937]" dest="(: ( [59175,59176]"/>
  <match src="{: { [32296,32297]" dest="{: { [46877,46878]"/>
  <match src="primitive_type [68229,68236]" dest="primitive_type [61643,61650]"/>
  <match src="): ) [95035,95036]" dest="): ) [33599,33600]"/>
  <match src="expression_statement [36315,36324]" dest="expression_statement [50896,50905]"/>
  <match src="(: ( [89919,89920]" dest="(: ( [74552,74553]"/>
  <match src="call_argument [82702,82706]" dest="call_argument [58349,58353]"/>
  <match src="return: return [93686,93692]" dest="return: return [32250,32256]"/>
  <match src="state_mutability [95303,95307]" dest="state_mutability [33867,33871]"/>
  <match src="identifier: payloadB [32229,32237]" dest="identifier: payloadB [46810,46818]"/>
  <match src="pure: pure [45727,45731]" dest="pure: pure [14884,14888]"/>
  <match src="call_argument [33303,33311]" dest="call_argument [47884,47892]"/>
  <match src="(: ( [95316,95317]" dest="(: ( [33880,33881]"/>
  <match src="identifier: initializer [105761,105772]" dest="identifier: initializer [67829,67840]"/>
  <match src="string_literal [89944,89958]" dest="string_literal [74577,74591]"/>
  <match src="identifier: FILE [84319,84323]" dest="identifier: FILE [76410,76414]"/>
  <match src="bool: bool [89852,89856]" dest="bool: bool [74485,74489]"/>
  <match src=",: , [55302,55303]" dest=",: , [22392,22393]"/>
  <match src="expression_statement [81725,81746]" dest="expression_statement [70954,70975]"/>
  <match src="variable_declaration [83222,83250]" dest="variable_declaration [57099,57116]"/>
  <match src="type_name [29524,29530]" dest="type_name [44105,44111]"/>
  <match src="member_expression [81405,81415]" dest="member_expression [70729,70739]"/>
  <match src="identifier: D256 [9369,9373]" dest="identifier: D256 [9954,9958]"/>
  <match src="binary_expression [23686,23705]" dest="binary_expression [61865,61881]"/>
  <match src="member_expression [99642,99663]" dest="member_expression [38204,38225]"/>
  <match src="=: = [93336,93337]" dest="=: = [31900,31901]"/>
  <match src="call_argument [32655,32674]" dest="call_argument [47236,47255]"/>
  <match src="array_access [96271,96299]" dest="array_access [34835,34863]"/>
  <match src="(: ( [7575,7576]" dest="(: ( [8160,8161]"/>
  <match src="(: ( [100055,100056]" dest="(: ( [38617,38618]"/>
  <match src="primitive_type [87483,87490]" dest="primitive_type [28326,28333]"/>
  <match src="call_argument [96709,96729]" dest="call_argument [35273,35293]"/>
  <match src="type_name [8256,8260]" dest="type_name [8841,8845]"/>
  <match src="call_argument [38693,38710]" dest="call_argument [53274,53291]"/>
  <match src="identifier: Permission [106854,106864]" dest="identifier: Permission [68662,68672]"/>
  <match src="call_expression [33081,33524]" dest="call_expression [47662,48105]"/>
  <match src="array_access [96547,96575]" dest="array_access [35111,35139]"/>
  <match src="identifier: accounts [100177,100185]" dest="identifier: accounts [38739,38747]"/>
  <match src="(: ( [105950,105951]" dest="(: ( [68018,68019]"/>
  <match src="type_name [92122,92129]" dest="type_name [30686,30693]"/>
  <match src="identifier: amount [22457,22463]" dest="identifier: amount [63130,63136]"/>
  <match src="binary_expression [21591,21614]" dest="binary_expression [63361,63384]"/>
  <match src="): ) [83918,83919]" dest="): ) [58147,58148]"/>
  <match src="identifier: unbond [81683,81689]" dest="identifier: unbond [70380,70386]"/>
  <match src="call_argument [89820,89837]" dest="call_argument [74453,74470]"/>
  <match src="expression_statement [81055,81076]" dest="expression_statement [69917,69938]"/>
  <match src="identifier: owner [101635,101640]" dest="identifier: owner [40197,40202]"/>
  <match src="&quot;: &quot; [84338,84339]" dest="&quot;: &quot; [76429,76430]"/>
  <match src="&quot;: &quot; [26916,26917]" dest="&quot;: &quot; [76637,76638]"/>
  <match src="): ) [53911,53912]" dest="): ) [21001,21002]"/>
  <match src="identifier: payloadC [34323,34331]" dest="identifier: payloadC [48904,48912]"/>
  <match src="parameter [103188,103207]" dest="parameter [41750,41769]"/>
  <match src="identifier: approve [103447,103454]" dest="identifier: approve [42009,42016]"/>
  <match src="): ) [102369,102370]" dest="): ) [40931,40932]"/>
  <match src="]: ] [99872,99873]" dest="]: ] [38434,38435]"/>
  <match src="if: if [33001,33003]" dest="if: if [47582,47584]"/>
  <match src="public: public [93564,93570]" dest="public: public [32128,32134]"/>
  <match src="call_argument [84338,84347]" dest="call_argument [76429,76446]"/>
  <match src="function: function [8551,8559]" dest="function: function [9136,9144]"/>
  <match src="type_name [37495,37502]" dest="type_name [52076,52083]"/>
  <match src="type_name [99807,99813]" dest="type_name [38369,38375]"/>
  <match src="emit: emit [81614,81618]" dest="emit: emit [71274,71278]"/>
  <match src=".: . [9943,9944]" dest=".: . [10528,10529]"/>
  <match src="): ) [8916,8917]" dest="): ) [9501,9502]"/>
  <match src="user_defined_type [10224,10228]" dest="user_defined_type [10809,10813]"/>
  <match src="array_access [103820,103848]" dest="array_access [42382,42410]"/>
  <match src="external: external [83616,83624]" dest="external: external [62515,62523]"/>
  <match src="call_argument [24949,24956]" dest="call_argument [55177,55184]"/>
  <match src=",: , [32628,32629]" dest=",: , [47209,47210]"/>
  <match src="type_name [87890,87897]" dest="type_name [28733,28740]"/>
  <match src="function_definition [67067,67686]" dest="function_definition [65553,65977]"/>
  <match src="member_expression [98763,98782]" dest="member_expression [37325,37344]"/>
  <match src="type_name [81690,81697]" dest="type_name [70889,70896]"/>
  <match src="(: ( [9909,9910]" dest="(: ( [10494,10495]"/>
  <match src="call_argument [11367,11376]" dest="call_argument [11952,11961]"/>
  <match src="identifier: candidate [96565,96574]" dest="identifier: candidate [35129,35138]"/>
  <match src="(: ( [92098,92099]" dest="(: ( [30662,30663]"/>
  <match src="!: ! [33005,33006]" dest="!: ! [47586,47587]"/>
  <match src="binary_expression [2528,2533]" dest="binary_expression [3107,3112]"/>
  <match src="[: [ [104209,104210]" dest="[: [ [42771,42772]"/>
  <match src="primitive_type [87100,87107]" dest="primitive_type [27943,27950]"/>
  <match src="identifier: candidate [104459,104468]" dest="identifier: candidate [43021,43030]"/>
  <match src="identifier: self [7753,7757]" dest="identifier: self [8338,8342]"/>
  <match src="function_body [5960,6031]" dest="function_body [6539,6610]"/>
  <match src="primitive_type [50992,50996]" dest="primitive_type [26151,26155]"/>
  <match src="parameter [55236,55248]" dest="parameter [22326,22338]"/>
  <match src="struct: struct [6962,6968]" dest="struct: struct [7547,7553]"/>
  <match src="event_paramater [80091,80107]" dest="event_paramater [80593,80607]"/>
  <match src="primitive_type [38292,38296]" dest="primitive_type [52873,52877]"/>
  <match src="visibility [13525,13533]" dest="visibility [23316,23324]"/>
  <match src="primitive_type [3776,3783]" dest="primitive_type [4355,4362]"/>
  <match src="primitive_type [54979,54983]" dest="primitive_type [22069,22073]"/>
  <match src="function_definition [95404,95558]" dest="function_definition [33968,34122]"/>
  <match src="function: function [53689,53697]" dest="function: function [20779,20787]"/>
  <match src="type_name [9428,9432]" dest="type_name [10013,10017]"/>
  <match src="identifier: Require [84249,84256]" dest="identifier: Require [76343,76350]"/>
  <match src="type_name [9660,9664]" dest="type_name [10245,10249]"/>
  <match src="): ) [103682,103683]" dest="): ) [42244,42245]"/>
  <match src="identifier: add [98805,98808]" dest="identifier: add [37367,37370]"/>
  <match src="type_name [53513,53517]" dest="type_name [20603,20607]"/>
  <match src="modifier_invocation [80199,80208]" dest="modifier_invocation [69352,69382]"/>
  <match src="call_argument [27144,27179]" dest="call_argument [77435,77465]"/>
  <match src="member_expression [80220,80240]" dest="member_expression [69394,69415]"/>
  <match src="identifier: value [10291,10296]" dest="identifier: value [10876,10881]"/>
  <match src="string_literal [82405,82441]" dest="string_literal [78410,78428]"/>
  <match src="call_argument [68389,68398]" dest="call_argument [70748,70779]"/>
  <match src="function_definition [55256,55346]" dest="function_definition [22346,22436]"/>
  <match src="while: while [36285,36290]" dest="while: while [50866,50871]"/>
  <match src="}: } [102889,102890]" dest="}: } [41451,41452]"/>
  <match src="view: view [13064,13068]" dest="view: view [22855,22859]"/>
  <match src="function_definition [47648,47796]" dest="function_definition [16805,16953]"/>
  <match src="private: private [44618,44625]" dest="private: private [13775,13782]"/>
  <match src="): ) [52141,52142]" dest="): ) [63686,63687]"/>
  <match src="identifier: IMPLEMENTATION_SLOT [90439,90458]" dest="identifier: IMPLEMENTATION_SLOT [75072,75091]"/>
  <match src="member_expression [9710,9724]" dest="member_expression [10295,10309]"/>
  <match src="member_expression [98940,98959]" dest="member_expression [37502,37521]"/>
  <match src="): ) [35637,35638]" dest="): ) [50218,50219]"/>
  <match src="identifier: permit [54061,54067]" dest="identifier: permit [21151,21157]"/>
  <match src="identifier: div [4423,4426]" dest="identifier: div [5002,5005]"/>
  <match src="call_expression [80491,80526]" dest="call_expression [70118,70157]"/>
  <match src="identifier: Oracle [64327,64333]" dest="identifier: Regulator [64480,64489]"/>
  <match src="modifier_invocation [80457,80479]" dest="modifier_invocation [70411,70440]"/>
  <match src="binary_expression [38816,38826]" dest="binary_expression [53397,53407]"/>
  <match src="user_defined_type [10362,10366]" dest="user_defined_type [10947,10951]"/>
  <match src="user_defined_type [91148,91153]" dest="user_defined_type [29712,29717]"/>
  <match src="state_variable_declaration [43867,43921]" dest="state_variable_declaration [13024,13078]"/>
  <match src=".: . [81643,81644]" dest=".: . [71305,71306]"/>
  <match src="memory: memory [94623,94629]" dest="memory: memory [33187,33193]"/>
  <match src="using_directive [64352,64383]" dest="using_directive [64545,64576]"/>
  <match src="(: ( [81599,81600]" dest="(: ( [55520,55521]"/>
  <match src="view: view [95943,95947]" dest="view: view [34507,34511]"/>
  <match src="): ) [80813,80814]" dest="): ) [69682,69683]"/>
  <match src="function_definition [54991,55052]" dest="function_definition [22081,22142]"/>
  <match src="): ) [33147,33148]" dest="): ) [47728,47729]"/>
  <match src="number_literal: 1 [8915,8916]" dest="number_literal: 1 [9500,9501]"/>
  <match src=".: . [92164,92165]" dest=".: . [30728,30729]"/>
  <match src="primitive_type [44347,44354]" dest="primitive_type [13504,13511]"/>
  <match src="primitive_type [47174,47181]" dest="primitive_type [16331,16338]"/>
  <match src="identifier: reason [31237,31243]" dest="identifier: reason [45818,45824]"/>
  <match src="): ) [32729,32730]" dest="): ) [47310,47311]"/>
  <match src="}: } [36001,36002]" dest="}: } [50582,50583]"/>
  <match src="identifier: candidates [96278,96288]" dest="identifier: candidates [34842,34852]"/>
  <match src="returns: returns [95308,95315]" dest="returns: returns [33872,33879]"/>
  <match src="struct_member [87682,87697]" dest="struct_member [28525,28540]"/>
  <match src="function: function [91822,91830]" dest="function: function [30386,30394]"/>
  <match src="call_argument [21857,21866]" dest="call_argument [63848,63857]"/>
  <match src="): ) [52328,52329]" dest="): ) [63795,63796]"/>
  <match src="type_name [8847,8851]" dest="type_name [9432,9436]"/>
  <match src="state_mutability [11502,11506]" dest="state_mutability [12087,12091]"/>
  <match src="state_mutability [54614,54618]" dest="state_mutability [21704,21708]"/>
  <match src="call_argument [3219,3254]" dest="call_argument [3798,3833]"/>
  <match src="user_defined_type [103188,103202]" dest="user_defined_type [41750,41764]"/>
  <match src="(: ( [13542,13543]" dest="(: ( [23333,23334]"/>
  <match src="call_argument [80562,80572]" dest="call_argument [69719,69729]"/>
  <match src="user_defined_type [17347,17354]" dest="user_defined_type [59794,59805]"/>
  <match src="]: ] [93731,93732]" dest="]: ] [32295,32296]"/>
  <match src="parameter [4438,4447]" dest="parameter [5017,5026]"/>
  <match src="function_definition [99230,99403]" dest="function_definition [37792,37965]"/>
  <match src="identifier: pool [92300,92304]" dest="identifier: pool [30864,30868]"/>
  <match src="variable_declaration [83130,83162]" dest="variable_declaration [58500,58517]"/>
  <match src="{: { [46115,46116]" dest="{: { [15272,15273]"/>
  <match src="(: ( [57740,57741]" dest="(: ( [71207,71208]"/>
  <match src="call_expression [78258,78278]" dest="call_expression [59071,59079]"/>
  <match src="assignment_expression [102391,102443]" dest="assignment_expression [40953,41005]"/>
  <match src="[: [ [100777,100778]" dest="[: [ [39339,39340]"/>
  <match src="primitive_type [44163,44170]" dest="primitive_type [13320,13327]"/>
  <match src=",: , [9940,9941]" dest=",: , [10525,10526]"/>
  <match src="(: ( [55155,55156]" dest="(: ( [22245,22246]"/>
  <match src=".: . [94483,94484]" dest=".: . [33047,33048]"/>
  <match src="return_type_definition [54673,54690]" dest="return_type_definition [21763,21780]"/>
  <match src="event: event [79690,79695]" dest="event: event [68765,68770]"/>
  <match src="identifier: _state [95201,95207]" dest="identifier: _state [33765,33771]"/>
  <match src="primitive_type [45101,45108]" dest="primitive_type [14258,14265]"/>
  <match src="visibility [45316,45323]" dest="visibility [14473,14480]"/>
  <match src="user_defined_type [9810,9814]" dest="user_defined_type [10395,10399]"/>
  <match src="identifier: debt [99055,99059]" dest="identifier: debt [37617,37621]"/>
  <match src="revert: revert [31700,31706]" dest="revert: revert [46281,46287]"/>
  <match src="member_expression [8515,8525]" dest="member_expression [9100,9110]"/>
  <match src="return: return [94926,94932]" dest="return: return [33490,33496]"/>
  <match src=",: , [81868,81869]" dest=",: , [79159,79160]"/>
  <match src=",: , [33920,33921]" dest=",: , [48501,48502]"/>
  <match src="enum_value: Locked [86744,86750]" dest="enum_value: Locked [27587,27593]"/>
  <match src="memory: memory [9173,9179]" dest="memory: memory [9758,9764]"/>
  <match src="identifier: expiringCouponsAtIndex [95413,95435]" dest="identifier: expiringCouponsAtIndex [33977,33999]"/>
  <match src="call_argument [81143,81157]" dest="call_argument [60992,60997]"/>
  <match src="identifier: coupons [102763,102770]" dest="identifier: coupons [41325,41332]"/>
  <match src="primitive_type [32815,32819]" dest="primitive_type [47396,47400]"/>
  <match src="): ) [11376,11377]" dest="): ) [11961,11962]"/>
  <match src=",: , [32550,32551]" dest=",: , [47131,47132]"/>
  <match src="function: function [46322,46330]" dest="function: function [15479,15487]"/>
  <match src="member_expression [80508,80518]" dest="member_expression [70137,70147]"/>
  <match src="call_argument [94758,94773]" dest="call_argument [33322,33337]"/>
  <match src="expression_statement [80924,80939]" dest="expression_statement [59163,59178]"/>
  <match src="call_argument [9725,9732]" dest="call_argument [10310,10317]"/>
  <match src="function_body [76842,76947]" dest="function_body [60483,60874]"/>
  <match src="type_name [29660,29664]" dest="type_name [44241,44245]"/>
  <match src="identifier: ratio [7485,7490]" dest="identifier: ratio [8070,8075]"/>
  <match src="): ) [54013,54014]" dest="): ) [21103,21104]"/>
  <match src="visibility [47381,47389]" dest="visibility [16538,16546]"/>
  <match src="returns: returns [53740,53747]" dest="returns: returns [20830,20837]"/>
  <match src="uint256: uint256 [86941,86948]" dest="uint256: uint256 [27784,27791]"/>
  <match src="internal: internal [45961,45969]" dest="internal: internal [15118,15126]"/>
  <match src="identifier: msg [78198,78201]" dest="identifier: msg [77721,77724]"/>
  <match src="call_expression [66575,66588]" dest="call_expression [64906,64921]"/>
  <match src="call_argument [101216,101222]" dest="call_argument [39778,39784]"/>
  <match src="}: } [30820,30821]" dest="}: } [45401,45402]"/>
  <match src="{: { [95762,95763]" dest="{: { [34326,34327]"/>
  <match src="function_definition [54753,54803]" dest="function_definition [21843,21893]"/>
  <match src="function: function [11410,11418]" dest="function: function [11995,12003]"/>
  <match src="return_type_definition [7387,7408]" dest="return_type_definition [7972,7993]"/>
  <match src="identifier: stringifyTruncated [30607,30625]" dest="identifier: stringifyTruncated [45188,45206]"/>
  <match src="&quot;: &quot; [91584,91585]" dest="&quot;: &quot; [30148,30149]"/>
  <match src="internal: internal [103568,103576]" dest="internal: internal [42130,42138]"/>
  <match src="primitive_type [103324,103331]" dest="primitive_type [41886,41893]"/>
  <match src=".: . [101539,101540]" dest=".: . [40101,40102]"/>
  <match src="user_defined_type [92122,92129]" dest="user_defined_type [30686,30693]"/>
  <match src="call_argument [3844,3845]" dest="call_argument [4423,4424]"/>
  <match src="pure: pure [46632,46636]" dest="pure: pure [15789,15793]"/>
  <match src="{: { [31685,31686]" dest="{: { [46266,46267]"/>
  <match src="(: ( [45519,45520]" dest="(: ( [14676,14677]"/>
  <match src="(: ( [54854,54855]" dest="(: ( [21944,21945]"/>
  <match src="type_name [13543,13547]" dest="type_name [23334,23338]"/>
  <match src="identifier: chainId [40677,40684]" dest="identifier: epoch [63221,63226]"/>
  <match src="address: address [105559,105566]" dest="address: address [67627,67634]"/>
  <match src="=: = [100202,100203]" dest="=: = [38764,38765]"/>
  <match src="expression_statement [27851,27935]" dest="expression_statement [77247,77316]"/>
  <match src="call_argument [100039,100046]" dest="call_argument [38601,38608]"/>
  <match src="(: ( [67106,67107]" dest="(: ( [66296,66297]"/>
  <match src="identifier: b [2532,2533]" dest="identifier: b [3111,3112]"/>
  <match src="event: event [52413,52418]" dest="event: event [60259,60264]"/>
  <match src="identifier: candidate [103177,103186]" dest="identifier: candidate [41739,41748]"/>
  <match src="identifier: this [80261,80265]" dest="identifier: this [69436,69440]"/>
  <match src="(: ( [94703,94704]" dest="(: ( [33267,33268]"/>
  <match src="^:  ^ [1136,1138]" dest="^:  ^ [1138,1140]"/>
  <match src="returns: returns [95616,95623]" dest="returns: returns [34180,34187]"/>
  <match src="public: public [95296,95302]" dest="public: public [33860,33866]"/>
  <match src="type_name [53200,53204]" dest="type_name [20290,20294]"/>
  <match src="binary_expression [10424,10447]" dest="binary_expression [11009,11032]"/>
  <match src="visibility [44618,44625]" dest="visibility [13775,13782]"/>
  <match src="state_variable_declaration [43976,44060]" dest="state_variable_declaration [13133,13217]"/>
  <match src=".: . [100288,100289]" dest=".: . [38850,38851]"/>
  <match src=".: . [78201,78202]" dest=".: . [77724,77725]"/>
  <match src="function_definition [29800,30237]" dest="function_definition [44381,44818]"/>
  <match src="(: ( [82104,82105]" dest="(: ( [70544,70545]"/>
  <match src="identifier: add [103856,103859]" dest="identifier: add [42418,42421]"/>
  <match src="call_expression [4587,4615]" dest="call_expression [5166,5194]"/>
  <match src="external: external [54158,54166]" dest="external: external [21248,21256]"/>
  <match src="): ) [90410,90411]" dest="): ) [75043,75044]"/>
  <match src="primitive_type [23776,23783]" dest="primitive_type [62955,62962]"/>
  <match src="): ) [101538,101539]" dest="): ) [40100,40101]"/>
  <match src="]: ] [103044,103045]" dest="]: ] [41606,41607]"/>
  <match src="identifier: eliminateOutstandingCoupons [102533,102560]" dest="identifier: eliminateOutstandingCoupons [41095,41122]"/>
  <match src="parameter [1465,1474]" dest="parameter [2044,2053]"/>
  <match src="]: ] [101195,101196]" dest="]: ] [39757,39758]"/>
  <match src="member_expression [10974,10984]" dest="member_expression [11559,11569]"/>
  <match src="uint256: uint256 [47962,47969]" dest="uint256: uint256 [17119,17126]"/>
  <match src="member_expression [92570,92584]" dest="member_expression [31134,31148]"/>
  <match src="identifier: Require [65179,65186]" dest="identifier: Require [79243,79250]"/>
  <match src="(: ( [7243,7244]" dest="(: ( [7828,7829]"/>
  <match src="binary_expression [6901,6907]" dest="binary_expression [7486,7492]"/>
  <match src="modifier_definition [105752,105975]" dest="modifier_definition [67820,68043]"/>
  <match src="visibility [55378,55386]" dest="visibility [22468,22476]"/>
  <match src="!=: != [36294,36296]" dest="!=: != [50875,50877]"/>
  <match src="(: ( [80754,80755]" dest="(: ( [70930,70931]"/>
  <match src="return_statement [10703,10733]" dest="return_statement [11288,11318]"/>
  <match src="identifier: newClaimable [82529,82541]" dest="identifier: staged [70840,70846]"/>
  <match src=",: , [101640,101641]" dest=",: , [40202,40203]"/>
  <match src="call_argument [31271,31277]" dest="call_argument [45852,45858]"/>
  <match src="assignment_expression [37339,37378]" dest="assignment_expression [51920,51959]"/>
  <match src="call_struct_argument [8067,8101]" dest="call_struct_argument [8652,8686]"/>
  <match src="event_definition [52413,52499]" dest="event_definition [60259,60360]"/>
  <match src="identifier: self [8586,8590]" dest="identifier: self [9171,9175]"/>
  <match src="identifier: self [10286,10290]" dest="identifier: self [10871,10875]"/>
  <match src=".: . [49941,49942]" dest=".: . [61845,61846]"/>
  <match src="return_statement [95194,95241]" dest="return_statement [33758,33805]"/>
  <match src="(: ( [50991,50992]" dest="(: ( [26150,26151]"/>
  <match src="{: { [37061,37062]" dest="{: { [51642,51643]"/>
  <match src="parameter [2837,2846]" dest="parameter [3416,3425]"/>
  <match src="parameter [98141,98155]" dest="parameter [36703,36717]"/>
  <match src="&quot;: &quot; [36165,36166]" dest="&quot;: &quot; [50746,50747]"/>
  <match src="parameter [11439,11452]" dest="parameter [12024,12037]"/>
  <match src="type_name [79643,79650]" dest="type_name [68715,68722]"/>
  <match src="primitive_type [17676,17683]" dest="primitive_type [17991,17998]"/>
  <match src="is: is [105149,105151]" dest="is: is [67217,67219]"/>
  <match src=",: , [31821,31822]" dest=",: , [46402,46403]"/>
  <match src="identifier: file [29852,29856]" dest="identifier: file [44433,44437]"/>
  <match src="call_expression [90282,90411]" dest="call_expression [74915,75044]"/>
  <match src="identifier: Bond [81619,81623]" dest="identifier: Unbond [71279,71285]"/>
  <match src="memory: memory [36103,36109]" dest="memory: memory [50684,50690]"/>
  <match src="call_argument [57758,57783]" dest="call_argument [71229,71260]"/>
  <match src="identifier: IDollar [92122,92129]" dest="identifier: IDollar [30686,30693]"/>
  <match src="primitive_type [55192,55199]" dest="primitive_type [22282,22289]"/>
  <match src="address: address [79954,79961]" dest="address: address [68897,68904]"/>
  <match src="}: } [9966,9967]" dest="}: } [10551,10552]"/>
  <match src="type_name [98028,98035]" dest="type_name [36590,36597]"/>
  <match src="identifier: c [1527,1528]" dest="identifier: c [2106,2107]"/>
  <match src="identifier: pair [78210,78214]" dest="identifier: candidate [77733,77742]"/>
  <match src="primitive_type [105282,105289]" dest="primitive_type [67350,67357]"/>
  <match src="identifier: Vote [87360,87364]" dest="identifier: Vote [28203,28207]"/>
  <match src="}: } [3883,3884]" dest="}: } [4462,4463]"/>
  <match src="string_literal [1992,2024]" dest="string_literal [2571,2603]"/>
  <match src="!: ! [31016,31017]" dest="!: ! [45597,45598]"/>
  <match src="type_cast_expression [38073,38087]" dest="type_cast_expression [52654,52668]"/>
  <match src="comment: // determine the length of the input by finding the location of the last non-zero byte [35249,35335]" dest="comment: // determine the length of the input by finding the location of the last non-zero byte [49830,49916]"/>
  <match src="return_type_definition [46481,46510]" dest="return_type_definition [15638,15667]"/>
  <match src="call_argument [105936,105952]" dest="call_argument [68004,68020]"/>
  <match src="(: ( [93031,93032]" dest="(: ( [31595,31596]"/>
  <match src="(: ( [34436,34437]" dest="(: ( [49017,49018]"/>
  <match src="identifier: value [9495,9500]" dest="identifier: value [10080,10085]"/>
  <match src="&quot;: &quot; [65272,65273]" dest="&quot;: &quot; [79348,79349]"/>
  <match src=":=: := [86022,86024]" dest=":=: := [72828,72830]"/>
  <match src="inheritance_specifier [91148,91153]" dest="inheritance_specifier [29712,29717]"/>
  <match src="identifier: account [28155,28162]" dest="identifier: account [54894,54901]"/>
  <match src="member_expression [102144,102156]" dest="member_expression [40706,40718]"/>
  <match src="member_expression [8706,8720]" dest="member_expression [9291,9305]"/>
  <match src=".: . [103100,103101]" dest=".: . [41662,41663]"/>
  <match src="type_alias [74449,74457]" dest="type_alias [80440,80448]"/>
  <match src="type_name [43867,43874]" dest="type_name [13024,13031]"/>
  <match src="visibility [82590,82598]" dest="visibility [77902,77910]"/>
  <match src="): ) [89885,89886]" dest="): ) [74518,74519]"/>
  <match src="member_expression [93957,94003]" dest="member_expression [32521,32567]"/>
  <match src="function_body [47971,48005]" dest="function_body [17128,17162]"/>
  <match src="string_literal [50018,50032]" dest="string_literal [55237,55281]"/>
  <match src="type_name [98277,98284]" dest="type_name [36839,36846]"/>
  <match src="(: ( [98310,98311]" dest="(: ( [36872,36873]"/>
  <match src="address: address [103911,103918]" dest="address: address [42473,42480]"/>
  <match src="}: } [7458,7459]" dest="}: } [8043,8044]"/>
  <match src="}: } [11119,11120]" dest="}: } [11704,11705]"/>
  <match src="internal: internal [8432,8440]" dest="internal: internal [9017,9025]"/>
  <match src=",: , [21855,21856]" dest=",: , [63846,63847]"/>
  <match src="identifier: result [35899,35905]" dest="identifier: result [50480,50486]"/>
  <match src="parameter [103546,103566]" dest="parameter [42108,42128]"/>
  <match src=",: , [103928,103929]" dest=",: , [42490,42491]"/>
  <match src="identifier: skim [55361,55365]" dest="identifier: skim [22451,22455]"/>
  <match src="uint256: uint256 [40669,40676]" dest="uint256: uint256 [63213,63220]"/>
  <match src="primitive_type [11232,11239]" dest="primitive_type [11817,11824]"/>
  <match src="identifier: ORACLE_POOL_RATIO [45399,45416]" dest="identifier: ORACLE_POOL_RATIO [14556,14573]"/>
  <match src="internal: internal [24168,24176]" dest="internal: internal [17968,17976]"/>
  <match src="returns: returns [98166,98173]" dest="returns: returns [36728,36735]"/>
  <match src="identifier: _ [68422,68423]" dest="identifier: _ [81110,81111]"/>
  <match src="identifier: accounts [99570,99578]" dest="identifier: accounts [38132,38140]"/>
  <match src="(: ( [46620,46621]" dest="(: ( [15777,15778]"/>
  <match src="}: } [47795,47796]" dest="}: } [16952,16953]"/>
  <match src="): ) [13523,13524]" dest="): ) [23314,23315]"/>
  <match src="primitive_type [49190,49197]" dest="primitive_type [54903,54910]"/>
  <match src="string [82721,82748]" dest="string [58368,58393]"/>
  <match src="bytes32: bytes32 [32146,32153]" dest="bytes32: bytes32 [46727,46734]"/>
  <match src="(: ( [55365,55366]" dest="(: ( [22455,22456]"/>
  <match src="identifier: value [80160,80165]" dest="identifier: value [69336,69341]"/>
  <match src="): ) [9620,9621]" dest="): ) [10205,10206]"/>
  <match src="uint256: uint256 [98277,98284]" dest="uint256: uint256 [36839,36846]"/>
  <match src="internal: internal [99829,99837]" dest="internal: internal [38391,38399]"/>
  <match src="identifier: input [36131,36136]" dest="identifier: input [50712,50717]"/>
  <match src="unary_expression [32289,32294]" dest="unary_expression [46870,46875]"/>
  <match src="identifier: _state [95055,95061]" dest="identifier: _state [33619,33625]"/>
  <match src="identifier: IOracle [87707,87714]" dest="identifier: IOracle [28550,28557]"/>
  <match src="array_access [96831,96859]" dest="array_access [35395,35423]"/>
  <match src="bytes32: bytes32 [97100,97107]" dest="bytes32: bytes32 [35664,35671]"/>
  <match src="number_literal: 0 [10583,10584]" dest="number_literal: 0 [11168,11169]"/>
  <match src="identifier: account [13202,13209]" dest="identifier: account [22993,23000]"/>
  <match src="function_body [72007,72088]" dest="function_body [58019,58225]"/>
  <match src="assignment_expression [100440,100525]" dest="assignment_expression [39002,39087]"/>
  <match src="member_expression [82380,82390]" dest="member_expression [77770,77780]"/>
  <match src="internal: internal [30977,30985]" dest="internal: internal [45558,45566]"/>
  <match src="primitive_type [7969,7976]" dest="primitive_type [8554,8561]"/>
  <match src="(: ( [55191,55192]" dest="(: ( [22281,22282]"/>
  <match src="function: function [76798,76806]" dest="function: function [60458,60466]"/>
  <match src="variable_declaration_statement [104172,104231]" dest="variable_declaration_statement [42734,42793]"/>
  <match src="internal: internal [47028,47036]" dest="internal: internal [16185,16193]"/>
  <match src="primitive_type [91233,91240]" dest="primitive_type [29797,29804]"/>
  <match src="(: ( [106987,106988]" dest="(: ( [54639,54640]"/>
  <match src=".: . [101717,101718]" dest=".: . [40279,40280]"/>
  <match src="=: = [105199,105200]" dest="=: = [67267,67268]"/>
  <match src="parameter [96244,96251]" dest="parameter [34808,34815]"/>
  <match src="=: = [67215,67216]" dest="=: = [65854,65855]"/>
  <match src="array_access [93186,93210]" dest="array_access [31750,31774]"/>
  <match src="function_body [96954,97020]" dest="function_body [35518,35584]"/>
  <match src="type_name [17538,17545]" dest="type_name [80483,80490]"/>
  <match src="number_literal: 0 [100056,100057]" dest="number_literal: 0 [38618,38619]"/>
  <match src=",: , [31599,31600]" dest=",: , [46180,46181]"/>
  <match src="identifier: transferFrom [98229,98241]" dest="identifier: transferFrom [36791,36803]"/>
  <match src="internal: internal [98437,98445]" dest="internal: internal [36999,37007]"/>
  <match src="function_definition [55426,55473]" dest="function_definition [22516,22563]"/>
  <match src=",: , [82504,82505]" dest=",: , [70815,70816]"/>
  <match src="block_statement [31023,31503]" dest="block_statement [45604,46084]"/>
  <match src="primitive_type [96068,96075]" dest="primitive_type [34632,34639]"/>
  <match src="parameter [103946,103966]" dest="parameter [42508,42528]"/>
  <match src="): ) [15321,15322]" dest="): ) [25112,25113]"/>
  <match src="identifier: b [8418,8419]" dest="identifier: b [9003,9004]"/>
  <match src="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [3892,4408]" dest="comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [4471,4987]"/>
  <match src="): ) [90525,90526]" dest="): ) [75158,75159]"/>
  <match src="bytes: bytes [35986,35991]" dest="bytes: bytes [50567,50572]"/>
  <match src="(: ( [93365,93366]" dest="(: ( [31929,31930]"/>
  <match src="member_expression [31092,31108]" dest="member_expression [45673,45689]"/>
  <match src="identifier: EPOCH_START [44450,44461]" dest="identifier: EPOCH_START [13607,13618]"/>
  <match src="member_expression [95991,96008]" dest="member_expression [34555,34572]"/>
  <match src="visibility [43805,43812]" dest="visibility [12962,12969]"/>
  <match src="call_argument [99702,99712]" dest="call_argument [38264,38274]"/>
  <match src="pure: pure [53245,53249]" dest="pure: pure [20335,20339]"/>
  <match src="string_literal [27144,27179]" dest="string_literal [77435,77465]"/>
  <match src="return_statement [45645,45675]" dest="return_statement [14802,14832]"/>
  <match src=".: . [96299,96300]" dest=".: . [34863,34864]"/>
  <match src="number_literal: 0 [3146,3147]" dest="number_literal: 0 [3725,3726]"/>
  <match src="identifier: outstanding [95084,95095]" dest="identifier: outstanding [33648,33659]"/>
  <match src="identifier: input [37092,37097]" dest="identifier: input [51673,51678]"/>
  <match src="identifier: epoch [100838,100843]" dest="identifier: epoch [39400,39405]"/>
  <match src="type_name [67166,67173]" dest="type_name [65817,65824]"/>
  <match src="struct_member [86814,86830]" dest="struct_member [27657,27673]"/>
  <match src="): ) [93472,93473]" dest="): ) [32036,32037]"/>
  <match src="identifier: one [7200,7203]" dest="identifier: one [7785,7788]"/>
  <match src="[: [ [99578,99579]" dest="[: [ [38140,38141]"/>
  <match src="identifier: approve [96438,96445]" dest="identifier: approve [35002,35009]"/>
  <match src="identifier: payloadA [34043,34051]" dest="identifier: payloadA [48624,48632]"/>
  <match src="identifier: reject [104055,104061]" dest="identifier: reject [42617,42623]"/>
  <match src="call_argument [31933,31939]" dest="call_argument [46514,46520]"/>
  <match src="{: { [45634,45635]" dest="{: { [14791,14792]"/>
  <match src="function_definition [55178,55250]" dest="function_definition [22268,22340]"/>
  <match src="identifier: file [32154,32158]" dest="identifier: file [46735,46739]"/>
  <match src="primitive_type [32835,32842]" dest="primitive_type [47416,47423]"/>
  <match src="event: event [79811,79816]" dest="event: event [80546,80551]"/>
  <match src="identifier: newImplementation [89889,89906]" dest="identifier: newImplementation [74522,74539]"/>
  <match src="identifier: must [29934,29938]" dest="identifier: must [44515,44519]"/>
  <match src="pure: pure [9409,9413]" dest="pure: pure [9994,9998]"/>
  <match src="call_expression [100474,100525]" dest="call_expression [39036,39087]"/>
  <match src="primitive_type [75207,75214]" dest="primitive_type [55560,55567]"/>
  <match src="public: public [91530,91536]" dest="public: public [30094,30100]"/>
  <match src="identifier: Deposit [79696,79703]" dest="identifier: Deposit [68771,68778]"/>
  <match src="(: ( [91412,91413]" dest="(: ( [29976,29977]"/>
  <match src="&quot;: &quot; [105201,105202]" dest="&quot;: &quot; [67269,67270]"/>
  <match src="call_expression [104283,104303]" dest="call_expression [42845,42865]"/>
  <match src="identifier: outstandingCoupons [93609,93627]" dest="identifier: outstandingCoupons [32173,32191]"/>
  <match src="primitive_type [81088,81095]" dest="primitive_type [60947,60954]"/>
  <match src="(: ( [51883,51884]" dest="(: ( [54646,54647]"/>
  <match src="type_name [49296,49303]" dest="type_name [70387,70394]"/>
  <match src="internal: internal [102218,102226]" dest="internal: internal [40780,40788]"/>
  <match src="member_expression [72025,72043]" dest="member_expression [58057,58075]"/>
  <match src="function_definition [7476,7659]" dest="function_definition [8061,8244]"/>
  <match src="(: ( [101537,101538]" dest="(: ( [40099,40100]"/>
  <match src="parameter [95436,95449]" dest="parameter [34000,34013]"/>
  <match src="internal: internal [10377,10385]" dest="internal: internal [10962,10970]"/>
  <match src="public: public [92101,92107]" dest="public: public [30665,30671]"/>
  <match src="type_name [2383,2390]" dest="type_name [2962,2969]"/>
  <match src="parameter [95317,95324]" dest="parameter [33881,33888]"/>
  <match src="visibility [47682,47690]" dest="visibility [16839,16847]"/>
  <match src="view: view [94892,94896]" dest="view: view [33456,33460]"/>
  <match src="identifier: b [2845,2846]" dest="identifier: b [3424,3425]"/>
  <match src="[: [ [99543,99544]" dest="[: [ [38105,38106]"/>
  <match src="): ) [98179,98180]" dest="): ) [36741,36742]"/>
  <match src="uint256: uint256 [17425,17432]" dest="uint256: uint256 [17888,17895]"/>
  <match src="call_argument [32577,32596]" dest="call_argument [47158,47177]"/>
  <match src=",: , [34225,34226]" dest=",: , [48806,48807]"/>
  <match src="expression_statement [101893,102026]" dest="expression_statement [40455,40588]"/>
  <match src="identifier: Require [82772,82779]" dest="identifier: Require [78742,78749]"/>
  <match src="(: ( [91646,91647]" dest="(: ( [30210,30211]"/>
  <match src="type_name [71055,71062]" dest="type_name [54487,54494]"/>
  <match src="identifier: approveFor [96331,96341]" dest="identifier: approveFor [34895,34905]"/>
  <match src="expression_statement [105735,105737]" dest="expression_statement [67803,67805]"/>
  <match src="member_expression [92676,92695]" dest="member_expression [31240,31259]"/>
  <match src="type_name [79823,79830]" dest="type_name [80568,80575]"/>
  <match src="private: private [36065,36072]" dest="private: private [50646,50653]"/>
  <match src="call_argument [21532,21571]" dest="call_argument [63294,63341]"/>
  <match src="function_body [103977,104089]" dest="function_body [42539,42651]"/>
  <match src="identifier: div [83292,83295]" dest="identifier: div [71030,71033]"/>
  <match src="{: { [65753,65754]" dest="{: { [66528,66529]"/>
  <match src="type_name [32883,32890]" dest="type_name [47464,47471]"/>
  <match src="function: function [92607,92615]" dest="function: function [31171,31179]"/>
  <match src="primitive_type [29844,29851]" dest="primitive_type [44425,44432]"/>
  <match src="type_name [52431,52438]" dest="type_name [60280,60287]"/>
  <match src="): ) [8425,8426]" dest="): ) [9010,9011]"/>
  <match src="function: function [46049,46057]" dest="function: function [15206,15214]"/>
  <match src="return_type_definition [54029,54043]" dest="return_type_definition [21119,21133]"/>
  <match src="call_expression [30135,30161]" dest="call_expression [44716,44742]"/>
  <match src="binary_expression [39221,39248]" dest="binary_expression [53802,53829]"/>
  <match src="identifier: sender [83352,83358]" dest="identifier: sender [62749,62755]"/>
  <match src="function_body [46115,46161]" dest="function_body [15272,15318]"/>
  <match src="call_expression [72025,72033]" dest="call_expression [58057,58065]"/>
  <match src="call_argument [100005,100011]" dest="call_argument [38567,38573]"/>
  <match src="member_expression [105635,105649]" dest="member_expression [67703,67717]"/>
  <match src="uint256: uint256 [44163,44170]" dest="uint256: uint256 [13320,13327]"/>
  <match src="call_argument [33207,33233]" dest="call_argument [47788,47814]"/>
  <match src="call_argument [84147,84151]" dest="call_argument [77986,77990]"/>
  <match src="}: } [88261,88262]" dest="}: } [29104,29105]"/>
  <match src="struct_member [44298,44313]" dest="struct_member [13455,13470]"/>
  <match src="): ) [96728,96729]" dest="): ) [35292,35293]"/>
  <match src=".: . [94178,94179]" dest=".: . [32742,32743]"/>
  <match src="parameter [46106,46113]" dest="parameter [15263,15270]"/>
  <match src="identifier: pool [92371,92375]" dest="identifier: pool [30935,30939]"/>
  <match src="member_expression [80468,80478]" dest="member_expression [70429,70439]"/>
  <match src="call_argument [34837,34845]" dest="call_argument [49418,49426]"/>
  <match src="internal: internal [7211,7219]" dest="internal: internal [7796,7804]"/>
  <match src="member_expression [80187,80197]" dest="member_expression [76320,76330]"/>
  <match src="returns: returns [47542,47549]" dest="returns: returns [16699,16706]"/>
  <match src="type_name [53125,53129]" dest="type_name [20215,20219]"/>
  <match src=".: . [64377,64378]" dest=".: . [64570,64571]"/>
  <match src="user_defined_type [17356,17362]" dest="user_defined_type [59807,59812]"/>
  <match src="constant: constant [29709,29717]" dest="constant: constant [44290,44298]"/>
  <match src="{: { [34390,34391]" dest="{: { [48971,48972]"/>
  <match src="yul_path [86037,86044]" dest="yul_path [72843,72850]"/>
  <match src="if_statement [3112,3159]" dest="if_statement [3691,3738]"/>
  <match src="): ) [84357,84358]" dest="): ) [76456,76457]"/>
  <match src="(: ( [78197,78198]" dest="(: ( [77720,77721]"/>
  <match src="identifier: D256 [8656,8660]" dest="identifier: D256 [9241,9245]"/>
  <match src=",: , [33148,33149]" dest=",: , [47729,47730]"/>
  <match src="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [89360,89495]" dest="comment: /**      * @dev Emitted when the implementation is upgraded.      * @param implementation Address of the new implementation.      */ [73993,74128]"/>
  <match src="struct_declaration [6962,7006]" dest="struct_declaration [7547,7591]"/>
  <match src="pure: pure [47537,47541]" dest="pure: pure [16694,16698]"/>
  <match src="private: private [83806,83813]" dest="private: private [58011,58018]"/>
  <match src="): ) [30547,30548]" dest="): ) [45128,45129]"/>
  <match src="returns: returns [38022,38029]" dest="returns: returns [52603,52610]"/>
  <match src="member_expression [99322,99347]" dest="member_expression [37884,37909]"/>
  <match src="block_statement [39088,39153]" dest="block_statement [53669,53734]"/>
  <match src="): ) [47787,47788]" dest="): ) [16944,16945]"/>
  <match src="identifier: reason [99929,99935]" dest="identifier: reason [38491,38497]"/>
  <match src="(: ( [98667,98668]" dest="(: ( [37229,37230]"/>
  <match src="identifier: Balance [87767,87774]" dest="identifier: Balance [28610,28617]"/>
  <match src="): ) [24919,24920]" dest="): ) [55137,55138]"/>
  <match src="primitive_type [29701,29708]" dest="primitive_type [44282,44289]"/>
  <match src="uint256: uint256 [93159,93166]" dest="uint256: uint256 [31723,31730]"/>
  <match src="identifier: D256 [9227,9231]" dest="identifier: D256 [9812,9816]"/>
  <match src="): ) [99729,99730]" dest="): ) [38291,38292]"/>
  <match src="(: ( [36824,36825]" dest="(: ( [51405,51406]"/>
  <match src="type_name [10630,10634]" dest="type_name [11215,11219]"/>
  <match src="primitive_type [90424,90431]" dest="primitive_type [75057,75064]"/>
  <match src="(: ( [53258,53259]" dest="(: ( [20348,20349]"/>
  <match src="return_statement [95337,95389]" dest="return_statement [33901,33953]"/>
  <match src="private: private [94640,94647]" dest="private: private [33204,33211]"/>
  <match src="identifier: result [37680,37686]" dest="identifier: result [52261,52267]"/>
  <match src="type_name [44425,44432]" dest="type_name [13582,13589]"/>
  <match src="function_body [47726,47796]" dest="function_body [16883,16953]"/>
  <match src="identifier: D256 [7612,7616]" dest="identifier: D256 [8197,8201]"/>
  <match src="): ) [105773,105774]" dest="): ) [67841,67842]"/>
  <match src="): ) [83994,83995]" dest="): ) [58216,58217]"/>
  <match src="if_statement [102669,102738]" dest="if_statement [41231,41300]"/>
  <match src="variable_declaration [67166,67190]" dest="variable_declaration [65817,65833]"/>
  <match src="identifier: sender [80314,80320]" dest="identifier: sender [69489,69495]"/>
  <match src="(: ( [32342,32343]" dest="(: ( [46923,46924]"/>
  <match src="identifier: balance [98649,98656]" dest="identifier: balance [37211,37218]"/>
  <match src="primitive_type [13543,13547]" dest="primitive_type [23334,23338]"/>
  <match src="(: ( [81733,81734]" dest="(: ( [70962,70963]"/>
  <match src="{: { [95037,95038]" dest="{: { [33601,33602]"/>
  <match src="identifier: debt [92691,92695]" dest="identifier: debt [31255,31259]"/>
  <match src="call_argument [8327,8331]" dest="call_argument [8912,8916]"/>
  <match src="identifier: allowance [91939,91948]" dest="identifier: allowance [30503,30512]"/>
  <match src="(: ( [88162,88163]" dest="(: ( [29005,29006]"/>
  <match src="type_name [103930,103937]" dest="type_name [42492,42499]"/>
  <match src="address: address [85473,85480]" dest="address: address [72279,72286]"/>
  <match src="identifier: expiring [95539,95547]" dest="identifier: expiring [34103,34111]"/>
  <match src="expression_statement [105924,105954]" dest="expression_statement [67992,68022]"/>
  <match src="yul_path [86017,86021]" dest="yul_path [72823,72827]"/>
  <match src="identifier: oracle [107002,107008]" dest="identifier: oracle [66371,66377]"/>
  <match src="return_statement [8685,8727]" dest="return_statement [9270,9312]"/>
  <match src="identifier: length [95382,95388]" dest="identifier: length [33946,33952]"/>
  <match src="type_name [7942,7946]" dest="type_name [8527,8531]"/>
  <match src="identifier: staged [100575,100581]" dest="identifier: staged [39137,39143]"/>
  <match src="identifier: _state [104490,104496]" dest="identifier: _state [43052,43058]"/>
  <match src="identifier: candidate [104044,104053]" dest="identifier: candidate [42606,42615]"/>
  <match src="identifier: amount [18230,18236]" dest="identifier: amount [55615,55621]"/>
  <match src="identifier: Coupons [87138,87145]" dest="identifier: Coupons [27981,27988]"/>
  <match src="identifier: start [96164,96169]" dest="identifier: start [34728,34733]"/>
  <match src="uint112: uint112 [54855,54862]" dest="uint112: uint112 [21945,21952]"/>
  <match src="{: { [46511,46512]" dest="{: { [15668,15669]"/>
  <match src="): ) [34337,34338]" dest="): ) [48918,48919]"/>
  <match src="pure: pure [53371,53375]" dest="pure: pure [20461,20465]"/>
  <match src="identifier: Decimal [46529,46536]" dest="identifier: Decimal [15686,15693]"/>
  <match src="return_type_definition [15059,15073]" dest="return_type_definition [24850,24864]"/>
  <match src="visibility [103209,103217]" dest="visibility [41771,41779]"/>
  <match src="): ) [104340,104341]" dest="): ) [42902,42903]"/>
  <match src="parameter [9428,9439]" dest="parameter [10013,10024]"/>
  <match src="revert_statement [33027,33559]" dest="revert_statement [47608,48140]"/>
  <match src="type_name [100382,100389]" dest="type_name [38944,38951]"/>
  <match src="call_argument [81417,81422]" dest="call_argument [70741,70746]"/>
  <match src="identifier: payloadA [30929,30937]" dest="identifier: payloadA [45510,45518]"/>
  <match src="call_expression [81587,81601]" dest="call_expression [55508,55522]"/>
  <match src="member_expression [104490,104507]" dest="member_expression [43052,43069]"/>
  <match src="expression_statement [49089,49205]" dest="expression_statement [54872,54926]"/>
  <match src="primitive_type [31063,31069]" dest="primitive_type [45644,45650]"/>
  <match src="call_argument [94724,94738]" dest="call_argument [33288,33302]"/>
  <match src="uint256: uint256 [70139,70146]" dest="uint256: uint256 [64768,64775]"/>
  <match src="array_access [99528,99552]" dest="array_access [38090,38114]"/>
  <match src="member_expression [99149,99163]" dest="member_expression [37711,37725]"/>
  <match src=".: . [100542,100543]" dest=".: . [39104,39105]"/>
  <match src="identifier: encodePacked [34463,34475]" dest="identifier: encodePacked [49044,49056]"/>
  <match src="): ) [92626,92627]" dest="): ) [31190,31191]"/>
  <match src="type_name [72865,72872]" dest="type_name [65729,65736]"/>
  <match src="identifier: start [96860,96865]" dest="identifier: start [35424,35429]"/>
  <match src="type_name [67467,67479]" dest="type_name [66330,66342]"/>
  <match src="{: { [47456,47457]" dest="{: { [16613,16614]"/>
  <match src="{: { [92337,92338]" dest="{: { [30901,30902]"/>
  <match src="call_struct_argument [46278,46304]" dest="call_struct_argument [15435,15461]"/>
  <match src="{: { [47726,47727]" dest="{: { [16883,16884]"/>
  <match src="uint256: uint256 [5889,5896]" dest="uint256: uint256 [6468,6475]"/>
  <match src="): ) [81023,81024]" dest="): ) [69865,69866]"/>
  <match src="call_argument [34459,34902]" dest="call_argument [49040,49483]"/>
  <match src="return_type_definition [10822,10836]" dest="return_type_definition [11407,11421]"/>
  <match src="return: return [95503,95509]" dest="return: return [34067,34073]"/>
  <match src="call_expression [83852,83884]" dest="call_expression [58762,58798]"/>
  <match src="pure: pure [10936,10940]" dest="pure: pure [11521,11525]"/>
  <match src="(: ( [52430,52431]" dest="(: ( [60279,60280]"/>
  <match src="identifier: owner [91957,91962]" dest="identifier: owner [30521,30526]"/>
  <match src=".: . [99375,99376]" dest=".: . [37937,37938]"/>
  <match src="number_literal: 18 [91672,91674]" dest="number_literal: 18 [30236,30238]"/>
  <match src="variable_declaration [37495,37504]" dest="variable_declaration [52076,52085]"/>
  <match src="identifier: add [104279,104282]" dest="identifier: add [42841,42844]"/>
  <match src="uint256: uint256 [94413,94420]" dest="uint256: uint256 [32977,32984]"/>
  <match src="event_paramater [54354,54376]" dest="event_paramater [21444,21466]"/>
  <match src="return: return [68249,68255]" dest="return: return [61663,61669]"/>
  <match src="call_expression [32655,32674]" dest="call_expression [47236,47255]"/>
  <match src="): ) [81649,81650]" dest="): ) [71311,71312]"/>
  <match src="call_argument [34873,34879]" dest="call_argument [49454,49460]"/>
  <match src="}: } [65848,65849]" dest="}: } [66606,66607]"/>
  <match src="primitive_type [55270,55274]" dest="primitive_type [22360,22364]"/>
  <match src="type_name [34193,34197]" dest="type_name [48774,48778]"/>
  <match src="): ) [96811,96812]" dest="): ) [35375,35376]"/>
  <match src="member_expression [49812,49824]" dest="member_expression [61970,61982]"/>
  <match src="type_name [53719,53723]" dest="type_name [20809,20813]"/>
  <match src="call_expression [101172,101231]" dest="call_expression [39734,39793]"/>
  <match src="identifier: a [4638,4639]" dest="identifier: a [5217,5218]"/>
  <match src="return_statement [7852,7904]" dest="return_statement [8437,8489]"/>
  <match src="{: { [101684,101685]" dest="{: { [40246,40247]"/>
  <match src="string_literal [22263,22296]" dest="string_literal [62574,62603]"/>
  <match src="identifier: value [9471,9476]" dest="identifier: value [10056,10061]"/>
  <match src="expression_statement [103988,104082]" dest="expression_statement [42550,42644]"/>
  <match src="variable_declaration [81758,81781]" dest="variable_declaration [58417,58435]"/>
  <match src=",: , [105655,105656]" dest=",: , [67723,67724]"/>
  <match src="primitive_type [50960,50967]" dest="primitive_type [26119,26126]"/>
  <match src="identifier: that [32800,32804]" dest="identifier: that [47381,47385]"/>
  <match src="internal: internal [10927,10935]" dest="internal: internal [11512,11520]"/>
  <match src="primitive_type [87600,87604]" dest="primitive_type [28443,28447]"/>
  <match src="type_name [98062,98066]" dest="type_name [36624,36628]"/>
  <match src="(: ( [54602,54603]" dest="(: ( [21692,21693]"/>
  <match src="identifier: SafeMath [79400,79408]" dest="identifier: SafeMath [68686,68694]"/>
  <match src="type_name [19992,19999]" dest="type_name [18172,18179]"/>
  <match src="user_defined_type [87968,87980]" dest="user_defined_type [28811,28823]"/>
  <match src="parameter [53677,53681]" dest="parameter [20767,20771]"/>
  <match src="): ) [10954,10955]" dest="): ) [11539,11540]"/>
  <match src="(: ( [95137,95138]" dest="(: ( [33701,33702]"/>
  <match src="parameter [35113,35125]" dest="parameter [49694,49706]"/>
  <match src="indexed: indexed [15296,15303]" dest="indexed: indexed [25087,25094]"/>
  <match src="uint256: uint256 [83222,83229]" dest="uint256: uint256 [57099,57106]"/>
  <match src="type_name [9869,9873]" dest="type_name [10454,10458]"/>
  <match src="string_literal [50132,50141]" dest="string_literal [54995,55037]"/>
  <match src="type_name [53599,53603]" dest="type_name [20689,20693]"/>
  <match src="parameter [34315,34331]" dest="parameter [48896,48912]"/>
  <match src="identifier: totalStaged [92508,92519]" dest="identifier: totalStaged [31072,31083]"/>
  <match src="bytes32: bytes32 [30289,30296]" dest="bytes32: bytes32 [44870,44877]"/>
  <match src="}: } [5345,5346]" dest="}: } [5924,5925]"/>
  <match src="state_variable_declaration [44906,44959]" dest="state_variable_declaration [14063,14116]"/>
  <match src="member_expression [103379,103415]" dest="member_expression [41941,41977]"/>
  <match src="expression_statement [104490,104538]" dest="expression_statement [43052,43100]"/>
  <match src="function: function [10463,10471]" dest="function: function [11048,11056]"/>
  <match src="returns: returns [53668,53675]" dest="returns: returns [20758,20765]"/>
  <match src="user_defined_type [9227,9231]" dest="user_defined_type [9812,9816]"/>
  <match src="]: ] [100843,100844]" dest="]: ] [39405,39406]"/>
  <match src="private: private [45249,45256]" dest="private: private [14406,14413]"/>
  <match src="number_literal: 340e16 [43914,43920]" dest="number_literal: 340e16 [13071,13077]"/>
  <match src="): ) [13241,13242]" dest="): ) [23032,23033]"/>
  <match src="primitive_type [96948,96952]" dest="primitive_type [35512,35516]"/>
  <match src="primitive_type [43867,43874]" dest="primitive_type [13024,13031]"/>
  <match src="public: public [97054,97060]" dest="public: public [35618,35624]"/>
  <match src="user_defined_type [105152,105159]" dest="user_defined_type [67220,67227]"/>
  <match src="identifier: add [82514,82517]" dest="identifier: add [70825,70828]"/>
  <match src="}: } [65841,65842]" dest="}: } [66574,66575]"/>
  <match src="state_mutability [5260,5264]" dest="state_mutability [5839,5843]"/>
  <match src="primitive_type [86970,86977]" dest="primitive_type [27813,27820]"/>
  <match src="string: string [8190,8196]" dest="string: string [8775,8781]"/>
  <match src="uint256: uint256 [23642,23649]" dest="uint256: uint256 [62900,62907]"/>
  <match src="number_literal: 10 [36902,36904]" dest="number_literal: 10 [51483,51485]"/>
  <match src="member_expression [104357,104393]" dest="member_expression [42919,42955]"/>
  <match src="string [19465,19507]" dest="string [70662,70698]"/>
  <match src="member_expression [49934,49946]" dest="member_expression [61838,61850]"/>
  <match src="primitive_type [38216,38221]" dest="primitive_type [52797,52802]"/>
  <match src="identifier: balance [99874,99881]" dest="identifier: balance [38436,38443]"/>
  <match src="(: ( [10864,10865]" dest="(: ( [11449,11450]"/>
  <match src="identifier: account [93774,93781]" dest="identifier: account [32338,32345]"/>
  <match src="identifier: denominator [11382,11393]" dest="identifier: denominator [11967,11978]"/>
  <match src="type_name [98175,98179]" dest="type_name [36737,36741]"/>
  <match src="): ) [23040,23041]" dest="): ) [55494,55495]"/>
  <match src="function: function [101768,101776]" dest="function: function [40330,40338]"/>
  <match src="parameter [96520,96527]" dest="parameter [35084,35091]"/>
  <match src="yul_path [97169,97173]" dest="yul_path [35733,35737]"/>
  <match src="identifier: dollar [92165,92171]" dest="identifier: dollar [30729,30735]"/>
  <match src="identifier: account [50891,50898]" dest="identifier: account [26050,26057]"/>
  <match src="binary_expression [86064,86072]" dest="binary_expression [72870,72878]"/>
  <match src="user_defined_type [10630,10634]" dest="user_defined_type [11215,11219]"/>
  <match src="identifier: account [100039,100046]" dest="identifier: account [38601,38608]"/>
  <match src="primitive_type [101627,101634]" dest="primitive_type [40189,40196]"/>
  <match src="[: [ [101734,101735]" dest="[: [ [40296,40297]"/>
  <match src="}: } [96041,96042]" dest="}: } [34605,34606]"/>
  <match src="}: } [35920,35921]" dest="}: } [50501,50502]"/>
  <match src=",: , [62996,62997]" dest=",: , [26855,26856]"/>
  <match src="): ) [30801,30802]" dest="): ) [45382,45383]"/>
  <match src="function_definition [103132,103287]" dest="function_definition [41694,41849]"/>
  <match src="=: = [35360,35361]" dest="=: = [49941,49942]"/>
  <match src="visibility [76833,76841]" dest="visibility [60474,60482]"/>
  <match src="}: } [46567,46568]" dest="}: } [15724,15725]"/>
  <match src="): ) [80765,80766]" dest="): ) [70941,70942]"/>
  <match src=".: . [47751,47752]" dest=".: . [16908,16909]"/>
  <match src="call_argument [24203,24209]" dest="call_argument [63486,63492]"/>
  <match src="call_argument [31135,31159]" dest="call_argument [45716,45740]"/>
  <match src="identifier: staged [100229,100235]" dest="identifier: staged [38791,38797]"/>
  <match src="type_name [99113,99120]" dest="type_name [37675,37682]"/>
  <match src="uint256: uint256 [87913,87920]" dest="uint256: uint256 [28756,28763]"/>
  <match src="revert: revert [33767,33773]" dest="revert: revert [48348,48354]"/>
  <match src="): ) [93273,93274]" dest="): ) [31837,31838]"/>
  <match src="number_literal: 40 [37829,37831]" dest="number_literal: 40 [52410,52412]"/>
  <match src="private: private [79651,79658]" dest="private: private [68723,68730]"/>
  <match src="user_defined_type [9168,9172]" dest="user_defined_type [9753,9757]"/>
  <match src="bool: bool [53749,53753]" dest="bool: bool [20839,20843]"/>
  <match src="expression_statement [100720,100814]" dest="expression_statement [39282,39376]"/>
  <match src="type_name [32937,32944]" dest="type_name [47518,47525]"/>
  <match src="identifier: lastReserve [66607,66618]" dest="identifier: balance [70995,71002]"/>
  <match src="call_argument [34749,34768]" dest="call_argument [49330,49349]"/>
  <match src="return_statement [47737,47789]" dest="return_statement [16894,16946]"/>
  <match src="number_literal: 0 [21612,21613]" dest="number_literal: 0 [63382,63383]"/>
  <match src="string_literal [80872,80910]" dest="string_literal [78991,79005]"/>
  <match src="function_definition [51787,51930]" dest="function_definition [54557,54786]"/>
  <match src="number_literal: 4 [37748,37749]" dest="number_literal: 4 [52329,52330]"/>
  <match src="identifier: b [10374,10375]" dest="identifier: b [10959,10960]"/>
  <match src="&quot;: &quot; [84166,84167]" dest="&quot;: &quot; [78005,78006]"/>
  <match src="&quot;: &quot; [79675,79676]" dest="&quot;: &quot; [68747,68748]"/>
  <match src="(: ( [2483,2484]" dest="(: ( [3062,3063]"/>
  <match src="identifier: balanceOf [53465,53474]" dest="identifier: balanceOf [20555,20564]"/>
  <match src="primitive_type [55304,55311]" dest="primitive_type [22394,22401]"/>
  <match src="identifier: file [31816,31820]" dest="identifier: file [46397,46401]"/>
  <match src="identifier: msg [82227,82230]" dest="identifier: msg [62290,62293]"/>
  <match src="]: ] [87224,87225]" dest="]: ] [28067,28068]"/>
  <match src="assignment_expression [103782,103867]" dest="assignment_expression [42344,42429]"/>
  <match src="bytes32: bytes32 [32858,32865]" dest="bytes32: bytes32 [47439,47446]"/>
  <match src="type_name [102351,102358]" dest="type_name [40913,40920]"/>
  <match src="{: { [87448,87449]" dest="{: { [28291,28292]"/>
  <match src="(: ( [13193,13194]" dest="(: ( [22984,22985]"/>
  <match src="identifier: spender [98132,98139]" dest="identifier: spender [36694,36701]"/>
  <match src="view: view [95611,95615]" dest="view: view [34175,34179]"/>
  <match src="(: ( [45715,45716]" dest="(: ( [14872,14873]"/>
  <match src="identifier: value [80865,80870]" dest="identifier: value [71134,71139]"/>
  <match src="function_body [95973,96042]" dest="function_body [34537,34606]"/>
  <match src="pure: pure [46920,46924]" dest="pure: pure [16077,16081]"/>
  <match src="call_argument [34795,34800]" dest="call_argument [49376,49381]"/>
  <match src="identifier: D256 [8143,8147]" dest="identifier: D256 [8728,8732]"/>
  <match src="(: ( [47378,47379]" dest="(: ( [16535,16536]"/>
  <match src=".: . [102005,102006]" dest=".: . [40567,40568]"/>
  <match src="address: address [50883,50890]" dest="address: address [26042,26049]"/>
  <match src="identifier: z [38868,38869]" dest="identifier: z [53449,53450]"/>
  <match src="(: ( [5950,5951]" dest="(: ( [6529,6530]"/>
  <match src="assignment_expression [103229,103279]" dest="assignment_expression [41791,41841]"/>
  <match src="expression_statement [102838,102883]" dest="expression_statement [41400,41445]"/>
  <match src="type_name [8143,8147]" dest="type_name [8728,8732]"/>
  <match src="array_access [37680,37698]" dest="array_access [52261,52279]"/>
  <match src="(: ( [33773,33774]" dest="(: ( [48354,48355]"/>
  <match src="identifier: mul [8091,8094]" dest="identifier: mul [8676,8679]"/>
  <match src="call_argument [30524,30548]" dest="call_argument [45105,45129]"/>
  <match src="call_argument [100060,100066]" dest="call_argument [38622,38628]"/>
  <match src="identifier: balanceOf [91699,91708]" dest="identifier: balanceOf [30263,30272]"/>
  <match src="): ) [7407,7408]" dest="): ) [7992,7993]"/>
  <match src="}: } [9502,9503]" dest="}: } [10087,10088]"/>
  <match src="[: [ [101996,101997]" dest="[: [ [40558,40559]"/>
  <match src="member_expression [73015,73034]" dest="member_expression [65392,65423]"/>
  <match src="call_expression [98642,98683]" dest="call_expression [37204,37245]"/>
  <match src="(: ( [89978,89979]" dest="(: ( [74611,74612]"/>
  <match src="}: } [8102,8103]" dest="}: } [8687,8688]"/>
  <match src="type_name [102962,102969]" dest="type_name [41524,41531]"/>
  <match src="parameter [46811,46818]" dest="parameter [15968,15975]"/>
  <match src="{: { [3124,3125]" dest="{: { [3703,3704]"/>
  <match src="string_literal [84338,84347]" dest="string_literal [76429,76446]"/>
  <match src="identifier: newImplementation [90030,90047]" dest="identifier: newImplementation [74663,74680]"/>
  <match src="member_expression [99947,99961]" dest="member_expression [38509,38523]"/>
  <match src="[: [ [96848,96849]" dest="[: [ [35412,35413]"/>
  <match src="returns: returns [98053,98060]" dest="returns: returns [36615,36622]"/>
  <match src="primitive_type [97075,97082]" dest="primitive_type [35639,35646]"/>
  <match src="visibility [67090,67097]" dest="visibility [66280,66287]"/>
  <match src="): ) [81365,81366]" dest="): ) [70105,70106]"/>
  <match src="identifier: balanceOfPhantom [73220,73236]" dest="identifier: epoch [62107,62112]"/>
  <match src="identifier: Upgraded [90021,90029]" dest="identifier: Upgraded [74654,74662]"/>
  <match src="primitive_type [97924,97931]" dest="primitive_type [36486,36493]"/>
  <match src="function_definition [68187,68272]" dest="function_definition [61583,61745]"/>
  <match src="type_name [87997,88004]" dest="type_name [28840,28847]"/>
  <match src="number_literal: 0 [93638,93639]" dest="number_literal: 0 [32202,32203]"/>
  <match src="state_mutability [36078,36082]" dest="state_mutability [50659,50663]"/>
  <match src="): ) [92233,92234]" dest="): ) [30797,30798]"/>
  <match src="if_statement [65681,65842]" dest="if_statement [66516,66575]"/>
  <match src="identifier: must [30406,30410]" dest="identifier: must [44987,44991]"/>
  <match src="return_type_definition [53504,53518]" dest="return_type_definition [20594,20608]"/>
  <match src="memory: memory [37209,37215]" dest="memory: memory [51790,51796]"/>
  <match src="type_name [53904,53911]" dest="type_name [20994,21001]"/>
  <match src="): ) [31490,31491]" dest="): ) [46071,46072]"/>
  <match src="primitive_type [33677,33684]" dest="primitive_type [48258,48265]"/>
  <match src=",: , [34052,34053]" dest=",: , [48633,48634]"/>
  <match src="comment: /**      * @dev Returns the amount of tokens in existence.      */ [12958,13026]" dest="comment: /**      * @dev Returns the amount of tokens in existence.      */ [22749,22817]"/>
  <match src="string_literal [64423,64431]" dest="string_literal [59887,59895]"/>
  <match src="user_defined_type [8765,8769]" dest="user_defined_type [9350,9354]"/>
  <match src="call_argument [22457,22463]" dest="call_argument [63130,63136]"/>
  <match src="{: { [5283,5284]" dest="{: { [5862,5863]"/>
  <match src="): ) [53517,53518]" dest="): ) [20607,20608]"/>
  <match src="expression_statement [99322,99396]" dest="expression_statement [37884,37958]"/>
  <match src="[: [ [96025,96026]" dest="[: [ [34589,34590]"/>
  <match src="view: view [91537,91541]" dest="view: view [30101,30105]"/>
  <match src="identifier: token1 [54762,54768]" dest="identifier: token1 [21852,21858]"/>
  <match src="function_body [80480,80697]" dest="function_body [69636,69830]"/>
  <match src="call_expression [10710,10728]" dest="call_expression [11295,11313]"/>
  <match src="member_expression [103017,103051]" dest="member_expression [41579,41613]"/>
  <match src="(: ( [33965,33966]" dest="(: ( [48546,48547]"/>
  <match src="comment: /* Regulator */ [45220,45235]" dest="comment: /* Regulator */ [14377,14392]"/>
  <match src="==: == [36137,36139]" dest="==: == [50718,50720]"/>
  <match src="parameter [98576,98596]" dest="parameter [37138,37158]"/>
  <match src="primitive_type [96908,96915]" dest="primitive_type [35472,35479]"/>
  <match src="): ) [7834,7835]" dest="): ) [8419,8420]"/>
  <match src="return_type_definition [10528,10542]" dest="return_type_definition [11113,11127]"/>
  <match src="memory: memory [8770,8776]" dest="memory: memory [9355,9361]"/>
  <match src="}: } [95102,95103]" dest="}: } [33666,33667]"/>
  <match src="member_expression [82170,82180]" dest="member_expression [71084,71094]"/>
  <match src="return_type_definition [53668,53682]" dest="return_type_definition [20758,20772]"/>
  <match src="}: } [68433,68434]" dest="}: } [66609,66610]"/>
  <match src="if_statement [52091,52342]" dest="if_statement [63607,63808]"/>
  <match src="identifier: D256 [10206,10210]" dest="identifier: D256 [10791,10795]"/>
  <match src="binary_expression [10855,10877]" dest="binary_expression [11440,11462]"/>
  <match src="identifier: D256 [10120,10124]" dest="identifier: D256 [10705,10709]"/>
  <match src="): ) [53135,53136]" dest="): ) [20225,20226]"/>
  <match src="type_name [53647,53651]" dest="type_name [20737,20741]"/>
  <match src="identifier: bonded [95673,95679]" dest="identifier: bonded [34237,34243]"/>
  <match src="string [84490,84498]" dest="string [76962,76969]"/>
  <match src="): ) [27646,27647]" dest="): ) [60251,60252]"/>
  <match src="identifier: recipient [15023,15032]" dest="identifier: recipient [24814,24823]"/>
  <match src="): ) [81157,81158]" dest="): ) [60997,60998]"/>
  <match src="identifier: provider [92260,92268]" dest="identifier: provider [30824,30832]"/>
  <match src="--: -- [35523,35525]" dest="--: -- [50104,50106]"/>
  <match src="identifier: reason [33226,33232]" dest="identifier: reason [47807,47813]"/>
  <match src=".: . [100581,100582]" dest=".: . [39143,39144]"/>
  <match src="state_mutability [53585,53589]" dest="state_mutability [20675,20679]"/>
  <match src="call_argument [33143,33147]" dest="call_argument [47724,47728]"/>
  <match src="): ) [34901,34902]" dest="): ) [49482,49483]"/>
  <match src="uint256: uint256 [87459,87466]" dest="uint256: uint256 [28302,28309]"/>
  <match src=".: . [101518,101519]" dest=".: . [40080,40081]"/>
  <match src="type_name [87600,87604]" dest="type_name [28443,28447]"/>
  <match src="comment: // allocate the string [36369,36391]" dest="comment: // allocate the string [50950,50972]"/>
  <match src=",: , [23913,23914]" dest=",: , [63128,63129]"/>
  <match src="identifier: D256 [8692,8696]" dest="identifier: D256 [9277,9281]"/>
  <match src="return_type_definition [10253,10267]" dest="return_type_definition [10838,10852]"/>
  <match src="address: address [28098,28105]" dest="address: address [54819,54826]"/>
  <match src="parameter [96656,96663]" dest="parameter [35220,35227]"/>
  <match src="function: function [4414,4422]" dest="function: function [4993,5001]"/>
  <match src="return_type_definition [45732,45762]" dest="return_type_definition [14889,14919]"/>
  <match src="primitive_type [19992,19999]" dest="primitive_type [18172,18179]"/>
  <match src="(: ( [8720,8721]" dest="(: ( [9305,9306]"/>
  <match src="return_statement [11349,11395]" dest="return_statement [11934,11980]"/>
  <match src="function_body [47866,47909]" dest="function_body [17023,17066]"/>
  <match src="address: address [100117,100124]" dest="address: address [38679,38686]"/>
  <match src="return_statement [91577,91591]" dest="return_statement [30141,30155]"/>
  <match src="visibility [36065,36072]" dest="visibility [50646,50653]"/>
  <match src="uint: uint [54293,54297]" dest="uint: uint [21383,21387]"/>
  <match src="visibility [64446,64453]" dest="visibility [65285,65292]"/>
  <match src="return_type_definition [95616,95633]" dest="return_type_definition [34180,34197]"/>
  <match src="identifier: Getters [97817,97824]" dest="identifier: Getters [36379,36386]"/>
  <match src="identifier: FILE [79668,79672]" dest="identifier: FILE [68740,68744]"/>
  <match src="primitive_type [53969,53976]" dest="primitive_type [21059,21066]"/>
  <match src="member_expression [93186,93217]" dest="member_expression [31750,31781]"/>
  <match src="primitive_type [2826,2833]" dest="primitive_type [3405,3412]"/>
  <match src="uint256: uint256 [47294,47301]" dest="uint256: uint256 [16451,16458]"/>
  <match src="identifier: BASE [11107,11111]" dest="identifier: BASE [11692,11696]"/>
  <match src="private: private [45316,45323]" dest="private: private [14473,14480]"/>
  <match src="call_expression [38830,38853]" dest="call_expression [53411,53434]"/>
  <match src="[: [ [100489,100490]" dest="[: [ [39051,39052]"/>
  <match src="identifier: c [2553,2554]" dest="identifier: c [3132,3133]"/>
  <match src="identifier: amount [100060,100066]" dest="identifier: amount [38622,38628]"/>
  <match src="parameter [11260,11279]" dest="parameter [11845,11864]"/>
  <match src="uint256: uint256 [96656,96663]" dest="uint256: uint256 [35220,35227]"/>
  <match src="): ) [35125,35126]" dest="): ) [49706,49707]"/>
  <match src="function_definition [92827,92929]" dest="function_definition [31391,31493]"/>
  <match src="identifier: sender [83410,83416]" dest="identifier: sender [63052,63058]"/>
  <match src="visibility [10663,10671]" dest="visibility [11248,11256]"/>
  <match src="=: = [102142,102143]" dest="=: = [40704,40705]"/>
  <match src="pure: pure [34358,34362]" dest="pure: pure [48939,48943]"/>
  <match src="identifier: mul [81283,81286]" dest="identifier: mul [70008,70011]"/>
  <match src="): ) [8100,8101]" dest="): ) [8685,8686]"/>
  <match src="member_expression [93005,93031]" dest="member_expression [31569,31595]"/>
  <match src="[: [ [94211,94212]" dest="[: [ [32775,32776]"/>
  <match src="comment: /**      * Account      */ [93060,93088]" dest="comment: /**      * Account      */ [31624,31652]"/>
  <match src="user_defined_type [8656,8660]" dest="user_defined_type [9241,9245]"/>
  <match src="call_argument [10871,10872]" dest="call_argument [11456,11457]"/>
  <match src="event_definition [53143,53212]" dest="event_definition [20233,20302]"/>
  <match src="visibility [45497,45505]" dest="visibility [14654,14662]"/>
  <match src="}: } [55475,55476]" dest="}: } [22565,22566]"/>
  <match src="uint8: uint8 [91647,91652]" dest="uint8: uint8 [30211,30216]"/>
  <match src="parameter [46225,46244]" dest="parameter [15382,15401]"/>
  <match src="return: return [10967,10973]" dest="return: return [11552,11558]"/>
  <match src="call_argument [33293,33312]" dest="call_argument [47874,47893]"/>
  <match src="parameter [36097,36109]" dest="parameter [50678,50690]"/>
  <match src="identifier: epoch [101299,101304]" dest="identifier: epoch [39861,39866]"/>
  <match src="revert: revert [31038,31044]" dest="revert: revert [45619,45625]"/>
  <match src="external: external [54659,54667]" dest="external: external [21749,21757]"/>
  <match src="primitive_type [69823,69830]" dest="primitive_type [64753,64760]"/>
  <match src="=: = [38728,38729]" dest="=: = [53309,53310]"/>
  <match src="identifier: amount [52003,52009]" dest="identifier: amount [54844,54850]"/>
  <match src="type_name [79790,79797]" dest="type_name [68865,68872]"/>
  <match src="identifier: _state [98785,98791]" dest="identifier: _state [37347,37353]"/>
  <match src="identifier: epoch [73540,73545]" dest="identifier: epoch [78905,78910]"/>
  <match src="call_expression [32577,32596]" dest="call_expression [47158,47177]"/>
  <match src="[: [ [95665,95666]" dest="[: [ [34229,34230]"/>
  <match src="identifier: Global [87033,87039]" dest="identifier: Global [27876,27882]"/>
  <match src="): ) [100246,100247]" dest="): ) [38808,38809]"/>
  <match src="): ) [73263,73264]" dest="): ) [62121,62122]"/>
  <match src="identifier: D256 [9905,9909]" dest="identifier: D256 [10490,10494]"/>
  <match src="=: = [44415,44416]" dest="=: = [13572,13573]"/>
  <match src="member_expression [98618,98632]" dest="member_expression [37180,37194]"/>
  <match src="binary_expression [35675,35680]" dest="binary_expression [50256,50261]"/>
  <match src="visibility [8223,8231]" dest="visibility [8808,8816]"/>
  <match src="+: + [36822,36823]" dest="+: + [51403,51404]"/>
  <match src="]: ] [95220,95221]" dest="]: ] [33784,33785]"/>
  <match src=",: , [30580,30581]" dest=",: , [45161,45162]"/>
  <match src="call_expression [38212,38225]" dest="call_expression [52793,52806]"/>
  <match src="function: function [8742,8750]" dest="function: function [9327,9335]"/>
  <match src="identifier: decrementBalanceOfStaged [80537,80561]" dest="identifier: decrementBalanceOfStaged [69694,69718]"/>
  <match src="call_argument [84319,84323]" dest="call_argument [76410,76414]"/>
  <match src="state_mutability [92212,92216]" dest="state_mutability [30776,30780]"/>
  <match src="call_expression [81494,81574]" dest="call_expression [70206,70289]"/>
  <match src="type_name [102596,102603]" dest="type_name [41158,41165]"/>
  <match src="visibility [53946,53954]" dest="visibility [21036,21044]"/>
  <match src="{: { [103577,103578]" dest="{: { [42139,42140]"/>
  <match src="{: { [8697,8698]" dest="{: { [9282,9283]"/>
  <match src="(: ( [104282,104283]" dest="(: ( [42844,42845]"/>
  <match src="parameter [11463,11476]" dest="parameter [12048,12061]"/>
  <match src="type_name [101835,101842]" dest="type_name [40397,40404]"/>
  <match src="external: external [68206,68214]" dest="external: external [62916,62924]"/>
  <match src="function_body [100709,100997]" dest="function_body [39271,39559]"/>
  <match src="(: ( [4594,4595]" dest="(: ( [5173,5174]"/>
  <match src=",: , [14617,14618]" dest=",: , [24408,24409]"/>
  <match src="parameter [51818,51832]" dest="parameter [54597,54611]"/>
  <match src="identifier: char [38688,38692]" dest="identifier: char [53269,53273]"/>
  <match src="struct_member [87100,87116]" dest="struct_member [27943,27959]"/>
  <match src="comment: // each byte takes two characters [38525,38558]" dest="comment: // each byte takes two characters [53106,53139]"/>
  <match src="{: { [62905,62906]" dest="{: { [26764,26765]"/>
  <match src="identifier: lessUsdc [83068,83076]" dest="identifier: lessRedeemable [61018,61032]"/>
  <match src="internal: internal [45602,45610]" dest="internal: internal [14759,14767]"/>
  <match src=",: , [33266,33267]" dest=",: , [47847,47848]"/>
  <match src="type_name [94413,94420]" dest="type_name [32977,32984]"/>
  <match src="identifier: D256 [10224,10228]" dest="identifier: D256 [10809,10813]"/>
  <match src="visibility [93275,93281]" dest="visibility [31839,31845]"/>
  <match src="assignment_expression [99528,99607]" dest="assignment_expression [38090,38169]"/>
  <match src="function: function [54697,54705]" dest="function: function [21787,21795]"/>
  <match src="identifier: z [38726,38727]" dest="identifier: z [53307,53308]"/>
  <match src="type_name [29473,29480]" dest="type_name [44054,44061]"/>
  <match src="}: } [39260,39261]" dest="}: } [53841,53842]"/>
  <match src="call_argument [81636,81650]" dest="call_argument [71298,71312]"/>
  <match src="call_expression [36421,36438]" dest="call_expression [51002,51019]"/>
  <match src="identifier: Decimal [46646,46653]" dest="identifier: Decimal [15803,15810]"/>
  <match src="identifier: name [91408,91412]" dest="identifier: name [29972,29976]"/>
  <match src="function_definition [10463,10592]" dest="function_definition [11048,11177]"/>
  <match src=",: , [27881,27882]" dest=",: , [77275,77276]"/>
  <match src="event: event [97867,97872]" dest="event: event [36429,36434]"/>
  <match src="visibility [63026,63034]" dest="visibility [26885,26893]"/>
  <match src="state_mutability [55032,55036]" dest="state_mutability [22122,22126]"/>
  <match src="memory: memory [7126,7132]" dest="memory: memory [7711,7717]"/>
  <match src=".: . [91780,91781]" dest=".: . [30344,30345]"/>
  <match src="(: ( [55125,55126]" dest="(: ( [22215,22216]"/>
  <match src="(: ( [21848,21849]" dest="(: ( [63839,63840]"/>
  <match src="type_cast_expression [100048,100058]" dest="type_cast_expression [38610,38620]"/>
  <match src="state_mutability [38012,38016]" dest="state_mutability [52593,52597]"/>
  <match src="function_definition [99746,100075]" dest="function_definition [38308,38637]"/>
  <match src="type_name [34288,34295]" dest="type_name [48869,48876]"/>
  <match src="}: } [76946,76947]" dest="}: } [60873,60874]"/>
  <match src="): ) [36058,36059]" dest="): ) [50639,50640]"/>
  <match src="identifier: amount [99799,99805]" dest="identifier: amount [38361,38367]"/>
  <match src="uint8: uint8 [37310,37315]" dest="uint8: uint8 [51891,51896]"/>
  <match src="{: { [7437,7438]" dest="{: { [8022,8023]"/>
  <match src="member_expression [104490,104530]" dest="member_expression [43052,43092]"/>
  <match src="(: ( [96243,96244]" dest="(: ( [34807,34808]"/>
  <match src="{: { [86015,86016]" dest="{: { [72821,72822]"/>
  <match src="internal: internal [85490,85498]" dest="internal: internal [72296,72304]"/>
  <match src="external: external [53659,53667]" dest="external: external [20749,20757]"/>
  <match src="(: ( [53748,53749]" dest="(: ( [20838,20839]"/>
  <match src="(: ( [36291,36292]" dest="(: ( [50872,50873]"/>
  <match src="emit_statement [80657,80690]" dest="emit_statement [69790,69823]"/>
  <match src="primitive_type [7341,7348]" dest="primitive_type [7926,7933]"/>
  <match src="parameter [10831,10835]" dest="parameter [11416,11420]"/>
  <match src="type_name [87861,87868]" dest="type_name [28704,28711]"/>
  <match src="function_body [23667,23930]" dest="function_body [62925,63145]"/>
  <match src="identifier: balanceOfBonded [73143,73158]" dest="identifier: balanceOf [79662,79671]"/>
  <match src="call_argument [102502,102507]" dest="call_argument [41064,41069]"/>
  <match src="type_name [88125,88136]" dest="type_name [28968,28979]"/>
  <match src="identifier: value [47758,47763]" dest="identifier: value [16915,16920]"/>
  <match src="identifier: msg [80796,80799]" dest="identifier: msg [69665,69668]"/>
  <match src="string [5311,5337]" dest="string [5890,5916]"/>
  <match src="return_statement [46954,46979]" dest="return_statement [16111,16136]"/>
  <match src=",: , [54222,54223]" dest=",: , [21312,21313]"/>
  <match src="visibility [105177,105184]" dest="visibility [67245,67252]"/>
  <match src="internal: internal [98743,98751]" dest="internal: internal [37305,37313]"/>
  <match src="identifier: amount0 [54215,54222]" dest="identifier: amount0 [21305,21312]"/>
  <match src="type_name [34213,34220]" dest="type_name [48794,48801]"/>
  <match src="identifier: LPAREN [34638,34644]" dest="identifier: LPAREN [49219,49225]"/>
  <match src="): ) [103207,103208]" dest="): ) [41769,41770]"/>
  <match src=",: , [30108,30109]" dest=",: , [44689,44690]"/>
  <match src="(: ( [37309,37310]" dest="(: ( [51890,51891]"/>
  <match src="type_name [44298,44305]" dest="type_name [13455,13462]"/>
  <match src="function_definition [13833,13916]" dest="function_definition [23624,23707]"/>
  <match src="identifier: price1Cumulative [67174,67190]" dest="identifier: lessDebt [65825,65833]"/>
  <match src="identifier: epochs [102461,102467]" dest="identifier: epochs [41023,41029]"/>
  <match src="): ) [47724,47725]" dest="): ) [16881,16882]"/>
  <match src="identifier: couponsExpiration [95120,95137]" dest="identifier: couponsExpiration [33684,33701]"/>
  <match src="return_statement [7273,7302]" dest="return_statement [7858,7887]"/>
  <match src="call_expression [45781,45910]" dest="call_expression [14938,15067]"/>
  <match src="(: ( [46276,46277]" dest="(: ( [15433,15434]"/>
  <match src="uint256: uint256 [87836,87843]" dest="uint256: uint256 [28679,28686]"/>
  <match src="identifier: State [88184,88189]" dest="identifier: State [29027,29032]"/>
  <match src="parameter [47551,47570]" dest="parameter [16708,16727]"/>
  <match src="function_definition [13472,13549]" dest="function_definition [23263,23340]"/>
  <match src="type_name [103511,103518]" dest="type_name [42073,42080]"/>
  <match src="identifier: Require [49812,49819]" dest="identifier: Require [61970,61977]"/>
  <match src="array_access [104194,104218]" dest="array_access [42756,42780]"/>
  <match src="parameter [2383,2392]" dest="parameter [2962,2971]"/>
  <match src="primitive_type [100398,100404]" dest="primitive_type [38960,38966]"/>
  <match src="[: [ [87223,87224]" dest="[: [ [28066,28067]"/>
  <match src="function: function [82558,82566]" dest="function: function [58233,58241]"/>
  <match src="identifier: univ2 [83852,83857]" dest="identifier: dollar [58762,58768]"/>
  <match src="primitive_type [54000,54007]" dest="primitive_type [21090,21097]"/>
  <match src="primitive_type [88114,88121]" dest="primitive_type [28957,28964]"/>
  <match src="}: } [11401,11402]" dest="}: } [11986,11987]"/>
  <match src="call_argument [65206,65238]" dest="call_argument [79270,79314]"/>
  <match src="type_name [87187,87194]" dest="type_name [28030,28037]"/>
  <match src="identifier: token0 [52447,52453]" dest="identifier: from [60296,60300]"/>
  <match src="constant: constant [89254,89262]" dest="constant: constant [73887,73895]"/>
  <match src="identifier: data [55331,55335]" dest="identifier: data [22421,22425]"/>
  <match src="identifier: isZero [10902,10908]" dest="identifier: isZero [11487,11493]"/>
  <match src="[: [ [96152,96153]" dest="[: [ [34716,34717]"/>
  <match src="identifier: epochs [88138,88144]" dest="identifier: epochs [28981,28987]"/>
  <match src="}: } [104421,104422]" dest="}: } [42983,42984]"/>
  <match src="}: } [38889,38890]" dest="}: } [53470,53471]"/>
  <match src="expression_statement [103229,103280]" dest="expression_statement [41791,41842]"/>
  <match src="parameter [94599,94638]" dest="parameter [33163,33202]"/>
  <match src="identifier: this [83878,83882]" dest="identifier: this [58784,58788]"/>
  <match src="type_name [93804,93818]" dest="type_name [32368,32382]"/>
  <match src="binary_expression [38730,38736]" dest="binary_expression [53311,53317]"/>
  <match src=",: , [103544,103545]" dest=",: , [42106,42107]"/>
  <match src="}: } [46427,46428]" dest="}: } [15584,15585]"/>
  <match src="member_expression [103072,103107]" dest="member_expression [41634,41669]"/>
  <match src="external: external [14635,14643]" dest="external: external [24426,24434]"/>
  <match src="primitive_type [36260,36267]" dest="primitive_type [50841,50848]"/>
  <match src="member_expression [47590,47602]" dest="member_expression [16747,16759]"/>
  <match src="]: ] [102004,102005]" dest="]: ] [40566,40567]"/>
  <match src="=: = [100760,100761]" dest="=: = [39322,39323]"/>
  <match src="call_expression [8306,8341]" dest="call_expression [8891,8926]"/>
  <match src="type_cast_expression [31063,31476]" dest="type_cast_expression [45644,46057]"/>
  <match src="function_body [94422,94560]" dest="function_body [32986,33124]"/>
  <match src="call_expression [38688,38711]" dest="call_expression [53269,53292]"/>
  <match src="primitive_type [93258,93265]" dest="primitive_type [31822,31829]"/>
  <match src="event_definition [97867,97939]" dest="event_definition [36429,36501]"/>
  <match src="return_type_definition [98053,98067]" dest="return_type_definition [36615,36629]"/>
  <match src="identifier: file [33143,33147]" dest="identifier: file [47724,47728]"/>
  <match src="{: { [50815,50816]" dest="{: { [25974,25975]"/>
  <match src="identifier: amount0 [55227,55234]" dest="identifier: amount0 [22317,22324]"/>
  <match src=",: , [23705,23706]" dest=",: , [61881,61882]"/>
  <match src="private: private [44489,44496]" dest="private: private [13646,13653]"/>
  <match src="type_name [54136,54143]" dest="type_name [21226,21233]"/>
  <match src="visibility [54715,54723]" dest="visibility [21805,21813]"/>
  <match src="return: return [95773,95779]" dest="return: return [34337,34343]"/>
  <match src="comment: // reverse-for-loops with unsigned integer [36598,36640]" dest="comment: // reverse-for-loops with unsigned integer [51179,51221]"/>
  <match src=",: , [98970,98971]" dest=",: , [37532,37533]"/>
  <match src="): ) [104302,104303]" dest="): ) [42864,42865]"/>
  <match src=",: , [100682,100683]" dest=",: , [39244,39245]"/>
  <match src="assignment_expression [102121,102171]" dest="assignment_expression [40683,40733]"/>
  <match src="=: = [9050,9051]" dest="=: = [9635,9636]"/>
  <match src="primitive_type [86814,86821]" dest="primitive_type [27657,27664]"/>
  <match src="(: ( [38944,38945]" dest="(: ( [53525,53526]"/>
  <match src="parameter [91866,91873]" dest="parameter [30430,30437]"/>
  <match src="identifier: reason [9734,9740]" dest="identifier: reason [10319,10325]"/>
  <match src="(: ( [95588,95589]" dest="(: ( [34152,34153]"/>
  <match src="(: ( [9724,9725]" dest="(: ( [10309,10310]"/>
  <match src="primitive_type [37973,37980]" dest="primitive_type [52554,52561]"/>
  <match src="uint256: uint256 [95483,95490]" dest="uint256: uint256 [34047,34054]"/>
  <match src="}: } [46985,46986]" dest="}: } [16142,16143]"/>
  <match src="type_name [53259,53265]" dest="type_name [20349,20355]"/>
  <match src="): ) [39249,39250]" dest="): ) [53830,53831]"/>
  <match src="expression_statement [37822,37867]" dest="expression_statement [52403,52448]"/>
  <match src="function_definition [5865,6031]" dest="function_definition [6444,6610]"/>
  <match src="address: address [23625,23632]" dest="address: address [62883,62890]"/>
  <match src="(: ( [81689,81690]" dest="(: ( [70386,70387]"/>
  <match src="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [88887,88975]" dest="comment: /**  * Based off of, and designed to interface with, openzeppelin/upgrades package  */ [73520,73608]"/>
  <match src="uint256: uint256 [13078,13085]" dest="uint256: uint256 [22869,22876]"/>
  <match src="return: return [36928,36934]" dest="return: return [51509,51515]"/>
  <match src="uint: uint [54437,54441]" dest="uint: uint [21527,21531]"/>
  <match src="): ) [5281,5282]" dest="): ) [5860,5861]"/>
  <match src="type_name [27980,27987]" dest="type_name [55106,55113]"/>
  <match src="bytes32: bytes32 [53969,53976]" dest="bytes32: bytes32 [21059,21066]"/>
  <match src="type_name [101803,101810]" dest="type_name [40365,40372]"/>
  <match src="internal: internal [10808,10816]" dest="internal: internal [11393,11401]"/>
  <match src="parameter [10344,10360]" dest="parameter [10929,10945]"/>
  <match src="(: ( [80225,80226]" dest="(: ( [69400,69401]"/>
  <match src="): ) [36832,36833]" dest="): ) [51413,51414]"/>
  <match src="(: ( [27123,27124]" dest="(: ( [77415,77416]"/>
  <match src="(: ( [32426,32427]" dest="(: ( [47007,47008]"/>
  <match src="): ) [105952,105953]" dest="): ) [68020,68021]"/>
  <match src="returns: returns [15059,15066]" dest="returns: returns [24850,24857]"/>
  <match src="call_argument [4602,4614]" dest="call_argument [5181,5193]"/>
  <match src="type_name [32910,32917]" dest="type_name [47491,47498]"/>
  <match src="identifier: balanceCheck [81587,81599]" dest="identifier: balanceCheck [55508,55520]"/>
  <match src="identifier: candidate [96990,96999]" dest="identifier: candidate [35554,35563]"/>
  <match src="state_mutability [91633,91637]" dest="state_mutability [30197,30201]"/>
  <match src="uint256: uint256 [101659,101666]" dest="uint256: uint256 [40221,40228]"/>
  <match src="call_argument [38835,38852]" dest="call_argument [53416,53433]"/>
  <match src="parameter [104451,104468]" dest="parameter [43013,43030]"/>
  <match src="parameter [54000,54013]" dest="parameter [21090,21103]"/>
  <match src="(: ( [105345,105346]" dest="(: ( [67413,67414]"/>
  <match src="identifier: amount1 [55241,55248]" dest="identifier: amount1 [22331,22338]"/>
  <match src="visibility [77719,77727]" dest="visibility [55916,55924]"/>
  <match src="function_body [96117,96177]" dest="function_body [34681,34741]"/>
  <match src="&quot;: &quot; [105212,105213]" dest="&quot;: &quot; [67280,67281]"/>
  <match src="identifier: balance [100289,100296]" dest="identifier: balance [38851,38858]"/>
  <match src="identifier: stringify [31382,31391]" dest="identifier: stringify [45963,45972]"/>
  <match src="call_argument [5305,5306]" dest="call_argument [5884,5885]"/>
  <match src="(: ( [38221,38222]" dest="(: ( [52802,52803]"/>
  <match src="call_argument [80796,80806]" dest="call_argument [69665,69675]"/>
  <match src=".: . [100235,100236]" dest=".: . [38797,38798]"/>
  <match src="address: address [91964,91971]" dest="address: address [30528,30535]"/>
  <match src="function_definition [9520,9752]" dest="function_definition [10105,10337]"/>
  <match src=",: , [82520,82521]" dest=",: , [70831,70832]"/>
  <match src=".: . [93811,93812]" dest=".: . [32375,32376]"/>
  <match src="identifier: EpochStrategy [94609,94622]" dest="identifier: EpochStrategy [33173,33186]"/>
  <match src="): ) [97187,97188]" dest="): ) [35751,35752]"/>
  <match src="{: { [9910,9911]" dest="{: { [10495,10496]"/>
  <match src="type_name [64771,64778]" dest="type_name [76014,76021]"/>
  <match src="type_name [30337,30344]" dest="type_name [44918,44925]"/>
  <match src="{: { [8888,8889]" dest="{: { [9473,9474]"/>
  <match src="function_definition [98832,98987]" dest="function_definition [37394,37549]"/>
  <match src="}: } [68271,68272]" dest="}: } [61744,61745]"/>
  <match src="internal: internal [46353,46361]" dest="internal: internal [15510,15518]"/>
  <match src="returns: returns [45511,45518]" dest="returns: returns [14668,14675]"/>
  <match src="address: address [89755,89762]" dest="address: address [74388,74395]"/>
  <match src="function_definition [10748,10885]" dest="function_definition [11333,11470]"/>
  <match src="identifier: _state [93968,93974]" dest="identifier: _state [32532,32538]"/>
  <match src="{: { [95492,95493]" dest="{: { [34056,34057]"/>
  <match src="identifier: Epoch [88125,88130]" dest="identifier: Epoch [28968,28973]"/>
  <match src="function_definition [5216,5346]" dest="function_definition [5795,5925]"/>
  <match src="array_access [93693,93717]" dest="array_access [32257,32281]"/>
  <match src=",: , [82989,82990]" dest=",: , [78194,78195]"/>
  <match src="(: ( [7330,7331]" dest="(: ( [7915,7916]"/>
  <match src="type_name [94308,94315]" dest="type_name [32872,32879]"/>
  <match src="uint256: uint256 [86814,86821]" dest="uint256: uint256 [27657,27664]"/>
  <match src="type_name [7741,7745]" dest="type_name [8326,8330]"/>
  <match src="call_expression [93005,93044]" dest="call_expression [31569,31608]"/>
  <match src="&quot;: &quot; [84177,84178]" dest="&quot;: &quot; [78019,78020]"/>
  <match src="contract_body [97825,104548]" dest="contract_body [36387,43110]"/>
  <match src="visibility [101675,101683]" dest="visibility [40237,40245]"/>
  <match src="member_expression [98763,98777]" dest="member_expression [37325,37339]"/>
  <match src="function: function [24870,24878]" dest="function: function [55081,55089]"/>
  <match src="identifier: _state [99040,99046]" dest="identifier: _state [37602,37608]"/>
  <match src="(: ( [7931,7932]" dest="(: ( [8516,8517]"/>
  <match src="return: return [95645,95651]" dest="return: return [34209,34215]"/>
  <match src="): ) [49202,49203]" dest="): ) [54915,54916]"/>
  <match src="{: { [7594,7595]" dest="{: { [8179,8180]"/>
  <match src="string: string [29980,29986]" dest="string: string [44561,44567]"/>
  <match src="return_type_definition [94897,94914]" dest="return_type_definition [33461,33478]"/>
  <match src="uint256: uint256 [80076,80083]" dest="uint256: uint256 [60345,60352]"/>
  <match src=".: . [80799,80800]" dest=".: . [69668,69669]"/>
  <match src="identifier: sender [78202,78208]" dest="identifier: sender [77725,77731]"/>
  <match src="type_name [79979,79986]" dest="type_name [68922,68929]"/>
  <match src="call_argument [80520,80525]" dest="call_argument [70149,70156]"/>
  <match src="): ) [72032,72033]" dest="): ) [58064,58065]"/>
  <match src="uint256: uint256 [72865,72872]" dest="uint256: uint256 [65729,65736]"/>
  <match src="return_statement [96264,96307]" dest="return_statement [34828,34871]"/>
  <match src="identifier: amount1 [54298,54305]" dest="identifier: amount1 [21388,21395]"/>
  <match src="primitive_type [37310,37315]" dest="primitive_type [51891,51896]"/>
  <match src="*: * [38590,38591]" dest="*: * [53171,53172]"/>
  <match src="primitive_type [103911,103918]" dest="primitive_type [42473,42480]"/>
  <match src="type_name [105169,105176]" dest="type_name [67237,67244]"/>
  <match src="primitive_type [53513,53517]" dest="primitive_type [20603,20607]"/>
  <match src="parameter [7823,7834]" dest="parameter [8408,8419]"/>
  <match src="identifier: _state [91774,91780]" dest="identifier: _state [30338,30344]"/>
  <match src="identifier: account [93540,93547]" dest="identifier: account [32104,32111]"/>
  <match src="primitive_type [46811,46818]" dest="primitive_type [15968,15975]"/>
  <match src="address: address [13852,13859]" dest="address: address [23643,23650]"/>
  <match src="return: return [93898,93904]" dest="return: return [32462,32468]"/>
  <match src="(: ( [8320,8321]" dest="(: ( [8905,8906]"/>
  <match src="variable_declaration [37585,37598]" dest="variable_declaration [52166,52179]"/>
  <match src=".: . [99873,99874]" dest=".: . [38435,38436]"/>
  <match src=".: . [87973,87974]" dest=".: . [28816,28817]"/>
  <match src="=: = [36798,36799]" dest="=: = [51379,51380]"/>
  <match src="identifier: reason [102018,102024]" dest="identifier: reason [40580,40586]"/>
  <match src="return_type_definition [54785,54802]" dest="return_type_definition [21875,21892]"/>
  <match src="call_argument [2484,2490]" dest="call_argument [3063,3069]"/>
  <match src=".: . [103197,103198]" dest=".: . [41759,41760]"/>
  <match src="return_type_definition [92217,92234]" dest="return_type_definition [30781,30798]"/>
  <match src="private: private [90263,90270]" dest="private: private [74896,74903]"/>
  <match src="uint256: uint256 [2394,2401]" dest="uint256: uint256 [2973,2980]"/>
  <match src="return_statement [6011,6024]" dest="return_statement [6590,6603]"/>
  <match src="member_expression [81996,82006]" dest="member_expression [77020,77030]"/>
  <match src="identifier: candidate [103247,103256]" dest="identifier: candidate [41809,41818]"/>
  <match src="member_expression [104026,104061]" dest="member_expression [42588,42623]"/>
  <match src="call_argument [90349,90410]" dest="call_argument [74982,75043]"/>
  <match src="primitive_type [85530,85537]" dest="primitive_type [72336,72343]"/>
  <match src="identifier: RPAREN [30739,30745]" dest="identifier: RPAREN [45320,45326]"/>
  <match src="type_name [87707,87714]" dest="type_name [28550,28557]"/>
  <match src="type_cast_expression [99702,99712]" dest="type_cast_expression [38264,38274]"/>
  <match src="]: ] [99551,99552]" dest="]: ] [38113,38114]"/>
  <match src="visibility [45109,45116]" dest="visibility [14266,14273]"/>
  <match src="identifier: DEBT_RATIO_CAP [47464,47478]" dest="identifier: DEBT_RATIO_CAP [16621,16635]"/>
  <match src="call_expression [34671,34690]" dest="call_expression [49252,49271]"/>
  <match src="identifier: placeLock [104106,104115]" dest="identifier: placeLock [42668,42677]"/>
  <match src="): ) [1930,1931]" dest="): ) [2509,2510]"/>
  <match src="address: address [105282,105289]" dest="address: address [67350,67357]"/>
  <match src="type_name [32146,32153]" dest="type_name [46727,46734]"/>
  <match src="type_name [93159,93166]" dest="type_name [31723,31730]"/>
  <match src="number_literal: 1 [52139,52140]" dest="number_literal: 1 [63684,63685]"/>
  <match src="identifier: stringifyTruncated [33947,33965]" dest="identifier: stringifyTruncated [48528,48546]"/>
  <match src="&amp;: &amp; [37708,37709]" dest="&amp;: &amp; [52289,52290]"/>
  <match src="(: ( [24948,24949]" dest="(: ( [55176,55177]"/>
  <match src="{: { [64345,64346]" dest="{: { [64505,64506]"/>
  <match src="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [51005,51580]" dest="comment: /*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [63888,64469]"/>
  <match src="uint256: uint256 [29367,29374]" dest="uint256: uint256 [43948,43955]"/>
  <match src="private: private [44171,44178]" dest="private: private [13328,13335]"/>
  <match src="assignment_expression [103072,103116]" dest="assignment_expression [41634,41678]"/>
  <match src="type_name [7501,7508]" dest="type_name [8086,8093]"/>
  <match src="member_expression [104026,104065]" dest="member_expression [42588,42627]"/>
  <match src="(: ( [33380,33381]" dest="(: ( [47961,47962]"/>
  <match src="event_paramater [97882,97902]" dest="event_paramater [36444,36464]"/>
  <match src="identifier: Candidate [88174,88183]" dest="identifier: Candidate [29017,29026]"/>
  <match src="}: } [87122,87123]" dest="}: } [27965,27966]"/>
  <match src="identifier: sender [52054,52060]" dest="identifier: sender [63471,63477]"/>
  <match src="string [57758,57783]" dest="string [71229,71260]"/>
  <match src="function_body [45529,45559]" dest="function_body [14686,14716]"/>
  <match src="}: } [36179,36180]" dest="}: } [50760,50761]"/>
  <match src="function_body [92013,92040]" dest="function_body [30577,30604]"/>
  <match src="): ) [1506,1507]" dest="): ) [2085,2086]"/>
  <match src="struct_declaration [87655,87752]" dest="struct_declaration [28498,28595]"/>
  <match src="(: ( [104292,104293]" dest="(: ( [42854,42855]"/>
  <match src="}: } [101759,101760]" dest="}: } [40321,40322]"/>
  <match src="primitive_type [69876,69883]" dest="primitive_type [69051,69058]"/>
  <match src=".: . [67474,67475]" dest=".: . [66337,66338]"/>
  <match src="returns: returns [94653,94660]" dest="returns: returns [33217,33224]"/>
  <match src="): ) [94881,94882]" dest="): ) [33445,33446]"/>
  <match src="state_variable_declaration [29701,29738]" dest="state_variable_declaration [44282,44319]"/>
  <match src=".: . [100264,100265]" dest=".: . [38826,38827]"/>
  <match src="identifier: State [86772,86777]" dest="identifier: State [27615,27620]"/>
  <match src="identifier: GOVERNANCE_EMERGENCY_DELAY [44771,44797]" dest="identifier: GOVERNANCE_EMERGENCY_DELAY [13928,13954]"/>
  <match src="identifier: b [11475,11476]" dest="identifier: b [12060,12061]"/>
  <match src="binary_expression [96831,96869]" dest="binary_expression [35395,35433]"/>
  <match src="memory: memory [4456,4462]" dest="memory: memory [5035,5041]"/>
  <match src="if: if [93362,93364]" dest="if: if [31926,31928]"/>
  <match src="binary_expression [95780,95823]" dest="binary_expression [34344,34387]"/>
  <match src="address: address [36984,36991]" dest="address: address [51565,51572]"/>
  <match src="returns: returns [8838,8845]" dest="returns: returns [9423,9430]"/>
  <match src="using: using [71036,71041]" dest="using: using [54468,54473]"/>
  <match src="identifier: COMMA [34795,34800]" dest="identifier: COMMA [49376,49381]"/>
  <match src="view: view [92212,92216]" dest="view: view [30776,30780]"/>
  <match src="if: if [52091,52093]" dest="if: if [63607,63609]"/>
  <match src="): ) [93633,93634]" dest="): ) [32197,32198]"/>
  <match src="identifier: abi [89920,89923]" dest="identifier: abi [74553,74556]"/>
  <match src="struct_member [87483,87498]" dest="struct_member [28326,28341]"/>
  <match src="identifier: that [49820,49824]" dest="identifier: that [61978,61982]"/>
  <match src="type_name [8765,8769]" dest="type_name [9350,9354]"/>
  <match src=",: , [103528,103529]" dest=",: , [42090,42091]"/>
  <match src="type_name [44556,44563]" dest="type_name [13713,13720]"/>
  <match src=".: . [46692,46693]" dest=".: . [15849,15850]"/>
  <match src="(: ( [92519,92520]" dest="(: ( [31083,31084]"/>
  <match src="identifier: compareTo [10424,10433]" dest="identifier: compareTo [11009,11018]"/>
  <match src="number_literal: 0 [96868,96869]" dest="number_literal: 0 [35432,35433]"/>
  <match src="function_definition [23592,23930]" dest="function_definition [62859,63145]"/>
  <match src="identifier: _state [103229,103235]" dest="identifier: _state [41791,41797]"/>
  <match src="uint112: uint112 [54873,54880]" dest="uint112: uint112 [21963,21970]"/>
  <match src="]: ] [96162,96163]" dest="]: ] [34726,34727]"/>
  <match src="event: event [53062,53067]" dest="event: event [20152,20157]"/>
  <match src="return: return [9091,9097]" dest="return: return [9676,9682]"/>
  <match src="identifier: getDebtRatioCap [47363,47378]" dest="identifier: getDebtRatioCap [16520,16535]"/>
  <match src="returns: returns [55089,55096]" dest="returns: returns [22179,22186]"/>
  <match src="call_argument [7637,7638]" dest="call_argument [8222,8223]"/>
  <match src="{: { [8865,8866]" dest="{: { [9450,9451]"/>
  <match src="visibility [102218,102226]" dest="visibility [40780,40788]"/>
  <match src="): ) [47301,47302]" dest="): ) [16458,16459]"/>
  <match src="): ) [63056,63057]" dest="): ) [26915,26916]"/>
  <match src="}: } [47630,47631]" dest="}: } [16787,16788]"/>
  <match src="type_name [51818,51825]" dest="type_name [54597,54604]"/>
  <match src="member_expression [92899,92913]" dest="member_expression [31463,31477]"/>
  <match src="bytes32: bytes32 [34236,34243]" dest="bytes32: bytes32 [48817,48824]"/>
  <match src="block_statement [36583,36916]" dest="block_statement [51164,51497]"/>
  <match src="function: function [46880,46888]" dest="function: function [16037,16045]"/>
  <match src="memory: memory [53266,53272]" dest="memory: memory [20356,20362]"/>
  <match src="identifier: amount [52277,52283]" dest="identifier: amount [63749,63755]"/>
  <match src=".: . [101701,101702]" dest=".: . [40263,40264]"/>
  <match src="}: } [47231,47232]" dest="}: } [16388,16389]"/>
  <match src=",: , [49876,49877]" dest=",: , [62043,62044]"/>
  <match src="identifier: bstr [36414,36418]" dest="identifier: bstr [50995,50999]"/>
  <match src="primitive_type [79920,79927]" dest="primitive_type [69036,69043]"/>
  <match src="{: { [98752,98753]" dest="{: { [37314,37315]"/>
  <match src="call_argument [105394,105398]" dest="call_argument [67462,67466]"/>
  <match src="call_argument [83505,83515]" dest="call_argument [78640,78650]"/>
  <match src="identifier: amount [76567,76573]" dest="identifier: amount [58263,58269]"/>
  <match src="return_type_definition [91542,91565]" dest="return_type_definition [30106,30129]"/>
  <match src="parameter [54682,54689]" dest="parameter [21772,21779]"/>
  <match src="member_expression [103588,103624]" dest="member_expression [42150,42186]"/>
  <match src="parameter [91709,91724]" dest="parameter [30273,30288]"/>
  <match src="(: ( [9868,9869]" dest="(: ( [10453,10454]"/>
  <match src="identifier: Unbond [79947,79953]" dest="identifier: Bond [68892,68896]"/>
  <match src="parameter [51801,51816]" dest="parameter [54580,54595]"/>
  <match src="identifier: mint [51796,51800]" dest="identifier: mintToAccount [54566,54579]"/>
  <match src=",: , [83358,83359]" dest=",: , [62755,62756]"/>
  <match src="&gt;: &gt; [104327,104328]" dest="&gt;: &gt; [42889,42890]"/>
  <match src="uint256: uint256 [95589,95596]" dest="uint256: uint256 [34153,34160]"/>
  <match src="identifier: D256 [7396,7400]" dest="identifier: D256 [7981,7985]"/>
  <match src="parameter [13490,13507]" dest="parameter [23281,23298]"/>
  <match src="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [6038,6651]" dest="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [1188,1763]"/>
  <match src="primitive_type [103343,103350]" dest="primitive_type [41905,41912]"/>
  <match src="memory: memory [7947,7953]" dest="memory: memory [8532,8538]"/>
  <match src="call_expression [82455,82469]" dest="call_expression [55295,55309]"/>
  <match src="call_argument [100586,100592]" dest="call_argument [39148,39154]"/>
  <match src="type_name [6877,6884]" dest="type_name [7462,7469]"/>
  <match src="type_name [38955,38962]" dest="type_name [53536,53543]"/>
  <match src="): ) [83804,83805]" dest="): ) [58710,58711]"/>
  <match src="member_expression [11550,11557]" dest="member_expression [12135,12142]"/>
  <match src="identifier: lockedUntil [104382,104393]" dest="identifier: lockedUntil [42944,42955]"/>
  <match src="uint256: uint256 [8792,8799]" dest="uint256: uint256 [9377,9384]"/>
  <match src="call_expression [31966,31985]" dest="call_expression [46547,46566]"/>
  <match src=",: , [3845,3846]" dest=",: , [4424,4425]"/>
  <match src="primitive_type [45157,45164]" dest="primitive_type [14314,14321]"/>
  <match src="string [21616,21653]" dest="string [63386,63431]"/>
  <match src="type_name [29844,29851]" dest="type_name [44425,44432]"/>
  <match src="): ) [81202,81203]" dest="): ) [69980,69981]"/>
  <match src="identifier: usdcAmount [78216,78226]" dest="identifier: vote [77744,77748]"/>
  <match src="): ) [39139,39140]" dest="): ) [53720,53721]"/>
  <match src="member_expression [89920,89943]" dest="member_expression [74553,74576]"/>
  <match src="state_mutability [30991,30995]" dest="state_mutability [45572,45576]"/>
  <match src="number_literal: 0 [23784,23785]" dest="number_literal: 0 [62963,62964]"/>
  <match src="(: ( [62976,62977]" dest="(: ( [26835,26836]"/>
  <match src="(: ( [79879,79880]" dest="(: ( [68995,68996]"/>
  <match src="}: } [39257,39258]" dest="}: } [53838,53839]"/>
  <match src="call_argument [104268,104277]" dest="call_argument [42830,42839]"/>
  <match src="}: } [46040,46041]" dest="}: } [15197,15198]"/>
  <match src="uint256: uint256 [103343,103350]" dest="uint256: uint256 [41905,41912]"/>
  <match src="member_expression [92149,92171]" dest="member_expression [30713,30735]"/>
  <match src="call_argument [23784,23785]" dest="call_argument [62963,62964]"/>
  <match src="identifier: balanceOfRewarded [81978,81995]" dest="identifier: balanceOf [77010,77019]"/>
  <match src="identifier: IOracle [64337,64344]" dest="identifier: Comptroller [64493,64504]"/>
  <match src="identifier: i [37518,37519]" dest="identifier: i [52099,52100]"/>
  <match src="): ) [93881,93882]" dest="): ) [32445,32446]"/>
  <match src="parameter [31562,31574]" dest="parameter [46143,46155]"/>
  <match src=".: . [103855,103856]" dest=".: . [42417,42418]"/>
  <match src="call_argument [22903,22938]" dest="call_argument [62680,62717]"/>
  <match src="returns: returns [3801,3808]" dest="returns: returns [4380,4387]"/>
  <match src="bytes32: bytes32 [33629,33636]" dest="bytes32: bytes32 [48210,48217]"/>
  <match src="): ) [99127,99128]" dest="): ) [37689,37690]"/>
  <match src="): ) [91754,91755]" dest="): ) [30318,30319]"/>
  <match src="call_expression [94689,94739]" dest="call_expression [33253,33303]"/>
  <match src="(: ( [30702,30703]" dest="(: ( [45283,45284]"/>
  <match src="primitive_type [99264,99271]" dest="primitive_type [37826,37833]"/>
  <match src="member_expression [94689,94757]" dest="member_expression [33253,33321]"/>
  <match src="call_argument [78148,78160]" dest="call_argument [62240,62252]"/>
  <match src="binary_expression [11622,11639]" dest="binary_expression [12207,12224]"/>
  <match src="}: } [7308,7309]" dest="}: } [7893,7894]"/>
  <match src="): ) [104468,104469]" dest="): ) [43030,43031]"/>
  <match src="identifier: approve [103617,103624]" dest="identifier: approve [42179,42186]"/>
  <match src="identifier: add [96705,96708]" dest="identifier: add [35269,35272]"/>
  <match src="visibility [14635,14643]" dest="visibility [24426,24434]"/>
  <match src="call_argument [82852,82881]" dest="call_argument [78825,78840]"/>
  <match src="identifier: period [103110,103116]" dest="identifier: period [41672,41678]"/>
  <match src="state_variable_declaration [44163,44217]" dest="state_variable_declaration [13320,13374]"/>
  <match src="(: ( [46464,46465]" dest="(: ( [15621,15622]"/>
  <match src=",: , [54134,54135]" dest=",: , [21224,21225]"/>
  <match src="member_expression [80962,80972]" dest="member_expression [79431,79441]"/>
  <match src="identifier: value [49304,49309]" dest="identifier: value [70395,70400]"/>
  <match src="identifier: sub [103664,103667]" dest="identifier: sub [42226,42229]"/>
  <match src="function: function [47917,47925]" dest="function: function [17074,17082]"/>
  <match src="call_argument [31186,31191]" dest="call_argument [45767,45772]"/>
  <match src="identifier: sub [98664,98667]" dest="identifier: sub [37226,37229]"/>
  <match src="if_statement [31674,32087]" dest="if_statement [46255,46668]"/>
  <match src="identifier: account [93851,93858]" dest="identifier: account [32415,32422]"/>
  <match src="identifier: owner [101811,101816]" dest="identifier: owner [40373,40378]"/>
  <match src="): ) [11072,11073]" dest="): ) [11657,11658]"/>
  <match src="identifier: epoch [95780,95785]" dest="identifier: epoch [34344,34349]"/>
  <match src="=: = [101942,101943]" dest="=: = [40504,40505]"/>
  <match src="event_paramater [79765,79788]" dest="event_paramater [68840,68863]"/>
  <match src="parameter [92328,92335]" dest="parameter [30892,30899]"/>
  <match src="identifier: a [2834,2835]" dest="identifier: a [3413,3414]"/>
  <match src="): ) [15564,15565]" dest="): ) [25355,25356]"/>
  <match src="identifier: b [8530,8531]" dest="identifier: b [9115,9116]"/>
  <match src="type_name [33652,33659]" dest="type_name [48233,48240]"/>
  <match src="(: ( [8696,8697]" dest="(: ( [9281,9282]"/>
  <match src="identifier: value [9294,9299]" dest="identifier: value [9879,9884]"/>
  <match src="uint256: uint256 [96244,96251]" dest="uint256: uint256 [34808,34815]"/>
  <match src="call_argument [34553,34558]" dest="call_argument [49134,49139]"/>
  <match src="identifier: unfreeze [76807,76815]" dest="identifier: step [60467,60471]"/>
  <match src="primitive_type [14999,15006]" dest="primitive_type [24790,24797]"/>
  <match src="bool: bool [10262,10266]" dest="bool: bool [10847,10851]"/>
  <match src="identifier: totalBonded [72873,72884]" dest="identifier: newSupply [65737,65746]"/>
  <match src="type_name [37203,37208]" dest="type_name [51784,51789]"/>
  <match src="member_expression [100824,100852]" dest="member_expression [39386,39414]"/>
  <match src="if_statement [36127,36180]" dest="if_statement [50708,50761]"/>
  <match src="parameter [10481,10497]" dest="parameter [11066,11082]"/>
  <match src="if: if [30401,30403]" dest="if: if [44982,44984]"/>
  <match src="visibility [46788,46796]" dest="visibility [15945,15953]"/>
  <match src="primitive_type [35113,35118]" dest="primitive_type [49694,49699]"/>
  <match src=".: . [7883,7884]" dest=".: . [8468,8469]"/>
  <match src="(: ( [8464,8465]" dest="(: ( [9049,9050]"/>
  <match src="type_alias [91200,91207]" dest="type_alias [29764,29771]"/>
  <match src="function: function [102524,102532]" dest="function: function [41086,41094]"/>
  <match src="string: string [91551,91557]" dest="string: string [30115,30121]"/>
  <match src="call_argument [81287,81292]" dest="call_argument [70012,70047]"/>
  <match src="function_definition [81674,82550]" dest="function_definition [70371,70855]"/>
  <match src="{: { [90271,90272]" dest="{: { [74904,74905]"/>
  <match src=",: , [2392,2393]" dest=",: , [2971,2972]"/>
  <match src="bytes2: bytes2 [29614,29620]" dest="bytes2: bytes2 [44195,44201]"/>
  <match src="(: ( [92758,92759]" dest="(: ( [31322,31323]"/>
  <match src="[: [ [93708,93709]" dest="[: [ [32272,32273]"/>
  <match src="(: ( [37041,37042]" dest="(: ( [51622,51623]"/>
  <match src="=: = [37599,37600]" dest="=: = [52180,52181]"/>
  <match src="(: ( [105622,105623]" dest="(: ( [67690,67691]"/>
  <match src="parameter [32146,32158]" dest="parameter [46727,46739]"/>
  <match src="=: = [73013,73014]" dest="=: = [65390,65391]"/>
  <match src="type_name [53544,53551]" dest="type_name [20634,20641]"/>
  <match src="identifier: D256 [10084,10088]" dest="identifier: D256 [10669,10673]"/>
  <match src="string_literal [80581,80616]" dest="string_literal [69738,69776]"/>
  <match src="=: = [38492,38493]" dest="=: = [53073,53074]"/>
  <match src="internal: internal [34344,34352]" dest="internal: internal [48925,48933]"/>
  <match src="type_name [17676,17683]" dest="type_name [17991,17998]"/>
  <match src="function: function [32791,32799]" dest="function: function [47372,47380]"/>
  <match src="function_body [103771,103875]" dest="function_body [42333,42437]"/>
  <match src="}: } [46313,46314]" dest="}: } [15470,15471]"/>
  <match src="identifier: candidates [103634,103644]" dest="identifier: candidates [42196,42206]"/>
  <match src=",: , [95915,95916]" dest=",: , [34479,34480]"/>
  <match src="contract_body [53055,55476]" dest="contract_body [20145,22566]"/>
  <match src="address: address [104133,104140]" dest="address: address [42695,42702]"/>
  <match src="identifier: msg [83505,83508]" dest="identifier: msg [78640,78643]"/>
  <match src="type_name [97851,97858]" dest="type_name [36413,36420]"/>
  <match src="private: private [27718,27725]" dest="private: private [58271,58278]"/>
  <match src="visibility [43723,43730]" dest="visibility [12880,12887]"/>
  <match src=",: , [91962,91963]" dest=",: , [30526,30527]"/>
  <match src="identifier: SafeMath [91167,91175]" dest="identifier: SafeMath [29731,29739]"/>
  <match src="type_name [10499,10503]" dest="type_name [11084,11088]"/>
  <match src="string [90349,90410]" dest="string [74982,75043]"/>
  <match src="identifier: balance [98792,98799]" dest="identifier: balance [37354,37361]"/>
  <match src="public: public [93783,93789]" dest="public: public [32347,32353]"/>
  <match src="(: ( [55045,55046]" dest="(: ( [22135,22136]"/>
  <match src="&quot;: &quot; [23004,23005]" dest="&quot;: &quot; [55450,55451]"/>
  <match src="return_type_definition [11315,11332]" dest="return_type_definition [11900,11917]"/>
  <match src="string [105413,105434]" dest="string [67481,67502]"/>
  <match src="{: { [105775,105776]" dest="{: { [67843,67844]"/>
  <match src="call_argument [36805,36833]" dest="call_argument [51386,51414]"/>
  <match src="constant: constant [44572,44580]" dest="constant: constant [13729,13737]"/>
  <match src="identifier: encodePacked [35217,35229]" dest="identifier: encodePacked [49798,49810]"/>
  <match src="comment: // (targeting 10% inflation) [43922,43950]" dest="comment: // (targeting 10% inflation) [13079,13107]"/>
  <match src="function_definition [47354,47488]" dest="function_definition [16511,16645]"/>
  <match src="(: ( [39220,39221]" dest="(: ( [53801,53802]"/>
  <match src="identifier: _burn [22813,22818]" dest="identifier: burnRedeemable [55334,55348]"/>
  <match src="assignment_expression [37680,37724]" dest="assignment_expression [52261,52305]"/>
  <match src="return_statement [91767,91807]" dest="return_statement [30331,30371]"/>
  <match src="): ) [34920,34921]" dest="): ) [49501,49502]"/>
  <match src="member_expression [100762,100805]" dest="member_expression [39324,39367]"/>
  <match src="return_statement [2546,2555]" dest="return_statement [3125,3134]"/>
  <match src="primitive_type [53544,53551]" dest="primitive_type [20634,20641]"/>
  <match src="identifier: current [102134,102141]" dest="identifier: current [40696,40703]"/>
  <match src="return_type_definition [92640,92657]" dest="return_type_definition [31204,31221]"/>
  <match src="type_name [68229,68236]" dest="type_name [61643,61650]"/>
  <match src="uint256: uint256 [81758,81765]" dest="uint256: uint256 [58417,58424]"/>
  <match src="member_expression [78198,78208]" dest="member_expression [77721,77731]"/>
  <match src="type_name [35055,35062]" dest="type_name [49636,49643]"/>
  <match src="identifier: owner [15519,15524]" dest="identifier: owner [25310,25315]"/>
  <match src=",: , [101414,101415]" dest=",: , [39976,39977]"/>
  <match src="primitive_type [32169,32176]" dest="primitive_type [46750,46757]"/>
  <match src="return: return [37915,37921]" dest="return: return [52496,52502]"/>
  <match src="return_statement [95645,95680]" dest="return_statement [34209,34244]"/>
  <match src="(: ( [10685,10686]" dest="(: ( [11270,11271]"/>
  <match src="parameter [101057,101070]" dest="parameter [39619,39632]"/>
  <match src="): ) [47026,47027]" dest="): ) [16183,16184]"/>
  <match src="uint8: uint8 [39115,39120]" dest="uint8: uint8 [53696,53701]"/>
  <match src="identifier: epoch [101256,101261]" dest="identifier: epoch [39818,39823]"/>
  <match src=":: : [46704,46705]" dest=":: : [15861,15862]"/>
  <match src="uint256: uint256 [3776,3783]" dest="uint256: uint256 [4355,4362]"/>
  <match src="internal: internal [100150,100158]" dest="internal: internal [38712,38720]"/>
  <match src="): ) [11568,11569]" dest="): ) [12153,12154]"/>
  <match src="return: return [2546,2552]" dest="return: return [3125,3131]"/>
  <match src="primitive_type [30921,30928]" dest="primitive_type [45502,45509]"/>
  <match src="(: ( [92871,92872]" dest="(: ( [31435,31436]"/>
  <match src="bytes32: bytes32 [89238,89245]" dest="bytes32: bytes32 [73871,73878]"/>
  <match src="address: address [72249,72256]" dest="address: address [79489,79496]"/>
  <match src="uint256: uint256 [104172,104179]" dest="uint256: uint256 [42734,42741]"/>
  <match src="): ) [21529,21530]" dest="): ) [63291,63292]"/>
  <match src=".: . [33084,33085]" dest=".: . [47665,47666]"/>
  <match src="user_defined_type [11024,11028]" dest="user_defined_type [11609,11613]"/>
  <match src="assignment_expression [98763,98816]" dest="assignment_expression [37325,37378]"/>
  <match src="parameter [94906,94913]" dest="parameter [33470,33477]"/>
  <match src="identifier: b [9822,9823]" dest="identifier: b [10407,10408]"/>
  <match src="function_body [80209,80407]" dest="function_body [69383,69555]"/>
  <match src="array_access [103379,103407]" dest="array_access [41941,41969]"/>
  <match src="member_expression [100560,100585]" dest="member_expression [39122,39147]"/>
  <match src="state_variable_declaration [44481,44526]" dest="state_variable_declaration [13638,13683]"/>
  <match src="type_name [53969,53976]" dest="type_name [21059,21066]"/>
  <match src="function_body [92987,93052]" dest="function_body [31551,31616]"/>
  <match src="parameter [104116,104131]" dest="parameter [42678,42693]"/>
  <match src="identifier: spender [23906,23913]" dest="identifier: spender [63121,63128]"/>
  <match src="block_statement [29940,30230]" dest="block_statement [44521,44811]"/>
  <match src="identifier: unfreeze [81055,81063]" dest="identifier: unfreeze [69917,69925]"/>
  <match src=".: . [101211,101212]" dest=".: . [39773,39774]"/>
  <match src="=: = [104257,104258]" dest="=: = [42819,42820]"/>
  <match src="address: address [95917,95924]" dest="address: address [34481,34488]"/>
  <match src="public: public [50976,50982]" dest="public: public [26135,26141]"/>
  <match src="identifier: balance [102755,102762]" dest="identifier: balance [41317,41324]"/>
  <match src="return_statement [92669,92696]" dest="return_statement [31233,31260]"/>
  <match src="identifier: a [1986,1987]" dest="identifier: a [2565,2566]"/>
  <match src="function: function [38931,38939]" dest="function: function [53512,53520]"/>
  <match src="{: { [36583,36584]" dest="{: { [51164,51165]"/>
  <match src="return_statement [4743,4752]" dest="return_statement [5322,5331]"/>
  <match src=".: . [104032,104033]" dest=".: . [42594,42595]"/>
  <match src="contract_body [79387,84534]" dest="contract_body [68673,71340]"/>
  <match src="external: external [82590,82598]" dest="external: external [77902,77910]"/>
  <match src="inheritance_specifier [17356,17362]" dest="inheritance_specifier [59807,59812]"/>
  <match src="type_cast_expression [23776,23786]" dest="type_cast_expression [62955,62965]"/>
  <match src="(: ( [1985,1986]" dest="(: ( [2564,2565]"/>
  <match src="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [91280,91346]" dest="number_literal: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc [29844,29910]"/>
  <match src="number_literal: 0 [102881,102882]" dest="number_literal: 0 [41443,41444]"/>
  <match src="identifier: _state [104194,104200]" dest="identifier: _state [42756,42762]"/>
  <match src="parameter [32883,32899]" dest="parameter [47464,47480]"/>
  <match src="member_expression [91893,91907]" dest="member_expression [30457,30471]"/>
  <match src="indexed: indexed [15274,15281]" dest="indexed: indexed [25065,25072]"/>
  <match src="identifier: amount1 [54229,54236]" dest="identifier: amount1 [21319,21326]"/>
  <match src="state_mutability [1485,1489]" dest="state_mutability [2064,2068]"/>
  <match src="function: function [5865,5873]" dest="function: function [6444,6452]"/>
  <match src="binary_expression [52095,52141]" dest="binary_expression [63635,63686]"/>
  <match src="): ) [10044,10045]" dest="): ) [10629,10630]"/>
  <match src="identifier: div [93474,93477]" dest="identifier: div [32038,32041]"/>
  <match src="parameter [53749,53753]" dest="parameter [20839,20843]"/>
  <match src="parameter [15068,15072]" dest="parameter [24859,24863]"/>
  <match src="identifier: value [80441,80446]" dest="identifier: value [69589,69594]"/>
  <match src="type_name [52479,52486]" dest="type_name [60410,60417]"/>
  <match src="parameter [95917,95934]" dest="parameter [34481,34498]"/>
  <match src="(: ( [53598,53599]" dest="(: ( [20688,20689]"/>
  <match src="event_paramater [79905,79918]" dest="event_paramater [69021,69034]"/>
  <match src="member_expression [82227,82237]" dest="member_expression [62290,62300]"/>
  <match src="inheritance_specifier [106854,106864]" dest="inheritance_specifier [68662,68672]"/>
  <match src="identifier: epoch [100795,100800]" dest="identifier: epoch [39357,39362]"/>
  <match src="array_access [99849,99873]" dest="array_access [38411,38435]"/>
  <match src="type_name [91747,91754]" dest="type_name [30311,30318]"/>
  <match src="type_name [6815,6822]" dest="type_name [7400,7407]"/>
  <match src="primitive_type [29413,29420]" dest="primitive_type [43994,44001]"/>
  <match src="call_argument [5308,5309]" dest="call_argument [5887,5888]"/>
  <match src="parameter [103930,103944]" dest="parameter [42492,42506]"/>
  <match src="primitive_type [99492,99499]" dest="primitive_type [38054,38061]"/>
  <match src="type_name [79920,79927]" dest="type_name [69036,69043]"/>
  <match src="identifier: votes [103258,103263]" dest="identifier: votes [41820,41825]"/>
  <match src="{: { [93594,93595]" dest="{: { [32158,32159]"/>
  <match src="function_definition [94066,94228]" dest="function_definition [32630,32792]"/>
  <match src="member_expression [9478,9492]" dest="member_expression [10063,10077]"/>
  <match src="uint256: uint256 [44610,44617]" dest="uint256: uint256 [13767,13774]"/>
  <match src="indexed: indexed [79962,79969]" dest="indexed: indexed [68905,68912]"/>
  <match src="}: } [31502,31503]" dest="}: } [46083,46084]"/>
  <match src="primitive_type [11521,11528]" dest="primitive_type [12106,12113]"/>
  <match src="identifier: a [3211,3212]" dest="identifier: a [3790,3791]"/>
  <match src="identifier: block [59133,59138]" dest="identifier: block [80840,80845]"/>
  <match src="(: ( [78272,78273]" dest="(: ( [59077,59078]"/>
  <match src="}: } [87426,87427]" dest="}: } [28269,28270]"/>
  <match src="(: ( [96615,96616]" dest="(: ( [35179,35180]"/>
  <match src="bool: bool [72135,72139]" dest="bool: bool [79528,79532]"/>
  <match src="type_name [66547,66559]" dest="type_name [64878,64890]"/>
  <match src="]: ] [102857,102858]" dest="]: ] [41419,41420]"/>
  <match src=".: . [105365,105366]" dest=".: . [67433,67434]"/>
  <match src="binary_expression [39076,39086]" dest="binary_expression [53657,53667]"/>
  <match src="assignment_expression [100720,100813]" dest="assignment_expression [39282,39375]"/>
  <match src="(: ( [8296,8297]" dest="(: ( [8881,8882]"/>
  <match src="call_argument [52062,52071]" dest="call_argument [63569,63578]"/>
  <match src="{: { [31663,31664]" dest="{: { [46244,46245]"/>
  <match src="array_access [93835,93859]" dest="array_access [32399,32423]"/>
  <match src="type_cast_expression [34430,34921]" dest="type_cast_expression [49011,49502]"/>
  <match src="[: [ [104507,104508]" dest="[: [ [43069,43070]"/>
  <match src="memory: memory [101858,101864]" dest="memory: memory [40420,40426]"/>
  <match src="(: ( [4426,4427]" dest="(: ( [5005,5006]"/>
  <match src="{: { [7162,7163]" dest="{: { [7747,7748]"/>
  <match src="assembly: assembly [90471,90479]" dest="assembly: assembly [75104,75112]"/>
  <match src="parameter [29867,29881]" dest="parameter [44448,44462]"/>
  <match src="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [2570,2807]" dest="comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [3149,3386]"/>
  <match src="external: external [80448,80456]" dest="external: external [69596,69604]"/>
  <match src=",: , [54376,54377]" dest=",: , [21466,21467]"/>
  <match src="call_expression [47443,47480]" dest="call_expression [16600,16637]"/>
  <match src="): ) [80265,80266]" dest="): ) [69440,69441]"/>
  <match src="(: ( [23783,23784]" dest="(: ( [62962,62963]"/>
  <match src="(: ( [35112,35113]" dest="(: ( [49693,49694]"/>
  <match src=".: . [95658,95659]" dest=".: . [34222,34223]"/>
  <match src="return: return [1606,1612]" dest="return: return [2185,2191]"/>
  <match src="uint256: uint256 [70164,70171]" dest="uint256: uint256 [64643,64650]"/>
  <match src="}: } [34954,34955]" dest="}: } [49535,49536]"/>
  <match src="primitive_type [7501,7508]" dest="primitive_type [8086,8093]"/>
  <match src=",: , [53557,53558]" dest=",: , [20647,20648]"/>
  <match src="): ) [93818,93819]" dest="): ) [32382,32383]"/>
  <match src="type_name [55366,55373]" dest="type_name [22456,22463]"/>
  <match src="return_statement [36928,36940]" dest="return_statement [51509,51521]"/>
  <match src="): ) [30711,30712]" dest="): ) [45292,45293]"/>
  <match src="yul_identifier [97169,97173]" dest="yul_identifier [35733,35737]"/>
  <match src="primitive_type [54873,54880]" dest="primitive_type [21963,21970]"/>
  <match src="(: ( [94144,94145]" dest="(: ( [32708,32709]"/>
  <match src="parameter [92978,92985]" dest="parameter [31542,31549]"/>
  <match src="type_name [66599,66606]" dest="type_name [70987,70994]"/>
  <match src="identifier: self [10787,10791]" dest="identifier: self [11372,11376]"/>
  <match src="identifier: redeemable [99164,99174]" dest="identifier: redeemable [37726,37736]"/>
  <match src="): ) [78277,78278]" dest="): ) [59078,59079]"/>
  <match src="call_argument [34671,34690]" dest="call_argument [49252,49271]"/>
  <match src="=: = [90437,90438]" dest="=: = [75070,75071]"/>
  <match src="uint256: uint256 [46376,46383]" dest="uint256: uint256 [15533,15540]"/>
  <match src="parameter [18645,18659]" dest="parameter [58888,58902]"/>
  <match src="public: public [91845,91851]" dest="public: public [30409,30415]"/>
  <match src="private: private [45109,45116]" dest="private: private [14266,14273]"/>
  <match src="parameter [13867,13882]" dest="parameter [23658,23673]"/>
  <match src="identifier: input [36533,36538]" dest="identifier: input [51114,51119]"/>
  <match src="identifier: Transfer [100030,100038]" dest="identifier: Transfer [38592,38600]"/>
  <match src="call_argument [37092,37097]" dest="call_argument [51673,51678]"/>
  <match src="member_expression [100867,100895]" dest="member_expression [39429,39457]"/>
  <match src=".: . [93210,93211]" dest=".: . [31774,31775]"/>
  <match src="member_expression [95789,95821]" dest="member_expression [34353,34385]"/>
  <match src=",: , [32926,32927]" dest=",: , [47507,47508]"/>
  <match src="return: return [92348,92354]" dest="return: return [30912,30918]"/>
  <match src="function_definition [96598,96738]" dest="function_definition [35162,35302]"/>
  <match src="): ) [15072,15073]" dest="): ) [24863,24864]"/>
  <match src="{: { [79387,79388]" dest="{: { [68673,68674]"/>
  <match src="return: return [95048,95054]" dest="return: return [33612,33618]"/>
  <match src="(: ( [11428,11429]" dest="(: ( [12013,12014]"/>
  <match src="(: ( [38302,38303]" dest="(: ( [52883,52884]"/>
  <match src="call_argument [30103,30108]" dest="call_argument [44684,44689]"/>
  <match src="function_definition [94857,94956]" dest="function_definition [33421,33520]"/>
  <match src="returns: returns [46097,46104]" dest="returns: returns [15254,15261]"/>
  <match src="visibility [13211,13219]" dest="visibility [23002,23010]"/>
  <match src="assignment_expression [103588,103683]" dest="assignment_expression [42150,42245]"/>
  <match src="(: ( [47856,47857]" dest="(: ( [17013,17014]"/>
  <match src="primitive_type [92435,92442]" dest="primitive_type [30999,31006]"/>
  <match src="): ) [82187,82188]" dest="): ) [71101,71102]"/>
  <match src="]: ] [95074,95075]" dest="]: ] [33638,33639]"/>
  <match src="bytes32: bytes32 [30873,30880]" dest="bytes32: bytes32 [45454,45461]"/>
  <match src="expression_statement [23052,23092]" dest="expression_statement [55385,55407]"/>
  <match src="call_argument [52285,52328]" dest="call_argument [63757,63795]"/>
  <match src="identifier: _state [99322,99328]" dest="identifier: _state [37884,37890]"/>
  <match src="identifier: value [7878,7883]" dest="identifier: value [8463,8468]"/>
  <match src=",: , [45830,45831]" dest=",: , [14987,14988]"/>
  <match src="return_type_definition [55037,55051]" dest="return_type_definition [22127,22141]"/>
  <match src="identifier: greaterThanOrEqualTo [10609,10629]" dest="identifier: greaterThanOrEqualTo [11194,11214]"/>
  <match src="{: { [23667,23668]" dest="{: { [62925,62926]"/>
  <match src="returns: returns [93795,93802]" dest="returns: returns [32359,32366]"/>
  <match src="]: ] [96018,96019]" dest="]: ] [34582,34583]"/>
  <match src="type_cast_expression [21520,21530]" dest="type_cast_expression [63282,63292]"/>
  <match src="function_body [91654,91682]" dest="function_body [30218,30246]"/>
  <match src="identifier: account [93709,93716]" dest="identifier: account [32273,32280]"/>
  <match src="variable_declaration_statement [85530,85543]" dest="variable_declaration_statement [72336,72349]"/>
  <match src="string_literal [105879,105900]" dest="string_literal [67947,67968]"/>
  <match src="memory: memory [9601,9607]" dest="memory: memory [10186,10192]"/>
  <match src="identifier: a [7446,7447]" dest="identifier: a [8031,8032]"/>
  <match src="pure: pure [11502,11506]" dest="pure: pure [12087,12091]"/>
  <match src="(: ( [104065,104066]" dest="(: ( [42627,42628]"/>
  <match src="parameter [10630,10646]" dest="parameter [11215,11231]"/>
  <match src="return_statement [92142,92172]" dest="return_statement [30706,30736]"/>
  <match src="identifier: _state [94335,94341]" dest="identifier: _state [32899,32905]"/>
  <match src="): ) [11285,11286]" dest="): ) [11870,11871]"/>
  <match src="string [89944,89958]" dest="string [74577,74591]"/>
  <match src="type_cast_expression [80253,80266]" dest="type_cast_expression [69428,69441]"/>
  <match src="type_name [96520,96527]" dest="type_name [35084,35091]"/>
  <match src="variable_declaration [73061,73097]" dest="variable_declaration [62133,62153]"/>
  <match src="identifier: COMMA [33417,33422]" dest="identifier: COMMA [47998,48003]"/>
  <match src="pure: pure [5937,5941]" dest="pure: pure [6516,6520]"/>
  <match src="return_type_definition [7112,7133]" dest="return_type_definition [7697,7718]"/>
  <match src="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [29148,29294]" dest="comment: /**  * @title Require  * @author dYdX  *  * Stringifies parameters to pretty-print revert messages. Costs more gas than regular require()  */ [43729,43875]"/>
  <match src="return_statement [47982,47998]" dest="return_statement [17139,17155]"/>
  <match src="primitive_type [98028,98035]" dest="primitive_type [36590,36597]"/>
  <match src="call_expression [102144,102171]" dest="call_expression [40706,40733]"/>
  <match src="identifier: msg [82288,82291]" dest="identifier: msg [62228,62231]"/>
  <match src="function_definition [46169,46314]" dest="function_definition [15326,15471]"/>
  <match src="identifier: sender [82384,82390]" dest="identifier: sender [77774,77780]"/>
  <match src="): ) [88189,88190]" dest="): ) [29032,29033]"/>
  <match src="identifier: slot [97108,97112]" dest="identifier: slot [35672,35676]"/>
  <match src="identifier: input [38963,38968]" dest="identifier: input [53544,53549]"/>
  <match src="++: ++ [9026,9028]" dest="++: ++ [9611,9613]"/>
  <match src="): ) [95632,95633]" dest="): ) [34196,34197]"/>
  <match src="(: ( [93025,93026]" dest="(: ( [31589,31590]"/>
  <match src="}: } [46871,46872]" dest="}: } [16028,16029]"/>
  <match src="call_argument [8506,8534]" dest="call_argument [9091,9119]"/>
  <match src="identifier: add [100908,100911]" dest="identifier: add [39470,39473]"/>
  <match src="identifier: ASCII_RELATIVE_ZERO [39229,39248]" dest="identifier: ASCII_RELATIVE_ZERO [53810,53829]"/>
  <match src="type_name [104133,104140]" dest="type_name [42695,42702]"/>
  <match src=",: , [49857,49858]" dest=",: , [62024,62025]"/>
  <match src="binary_expression [82932,82970]" dest="binary_expression [76370,76395]"/>
  <match src="identifier: amount [75313,75319]" dest="identifier: amount [18479,18485]"/>
  <match src="identifier: totalBonded [93436,93447]" dest="identifier: totalBonded [32000,32011]"/>
  <match src="uint256: uint256 [79729,79736]" dest="uint256: uint256 [68804,68811]"/>
  <match src="identifier: D256 [9570,9574]" dest="identifier: D256 [10155,10159]"/>
  <match src="call_argument [99600,99606]" dest="call_argument [38162,38168]"/>
  <match src="]: ] [101304,101305]" dest="]: ] [39866,39867]"/>
  <match src="string: string [98876,98882]" dest="string: string [37438,37444]"/>
  <match src="returns: returns [17667,17674]" dest="returns: returns [17982,17989]"/>
  <match src="): ) [30359,30360]" dest="): ) [44940,44941]"/>
  <match src="function_body [7594,7659]" dest="function_body [8179,8244]"/>
  <match src="visibility [9194,9202]" dest="visibility [9779,9787]"/>
  <match src="binary_expression [65206,65238]" dest="binary_expression [79270,79314]"/>
  <match src="(: ( [35991,35992]" dest="(: ( [50572,50573]"/>
  <match src="primitive_type [1519,1526]" dest="primitive_type [2098,2105]"/>
  <match src="function_body [8865,9110]" dest="function_body [9450,9695]"/>
  <match src="): ) [98435,98436]" dest="): ) [36997,36998]"/>
  <match src="member_expression [100762,100794]" dest="member_expression [39324,39356]"/>
  <match src="function: function [92937,92945]" dest="function: function [31501,31509]"/>
  <match src="primitive_type [94413,94420]" dest="primitive_type [32977,32984]"/>
  <match src="identifier: amount1Out [55292,55302]" dest="identifier: amount1Out [22382,22392]"/>
  <match src="parenthesized_expression [31044,31491]" dest="parenthesized_expression [45625,46072]"/>
  <match src=".: . [83409,83410]" dest=".: . [63051,63052]"/>
  <match src=",: , [99278,99279]" dest=",: , [37840,37841]"/>
  <match src="identifier: implementation [105828,105842]" dest="identifier: implementation [67896,67910]"/>
  <match src="member_expression [93957,94050]" dest="member_expression [32521,32614]"/>
  <match src="{: { [104479,104480]" dest="{: { [43041,43042]"/>
  <match src="function: function [93748,93756]" dest="function: function [32312,32320]"/>
  <match src="function: function [95256,95264]" dest="function: function [33820,33828]"/>
  <match src="{: { [7262,7263]" dest="{: { [7847,7848]"/>
  <match src="identifier: Transfer [21840,21848]" dest="identifier: CouponTransfer [63825,63839]"/>
  <match src="type_name [8792,8799]" dest="type_name [9377,9384]"/>
  <match src=".: . [100768,100769]" dest=".: . [39330,39331]"/>
  <match src="(: ( [81641,81642]" dest="(: ( [71303,71304]"/>
  <match src="call_argument [19457,19463]" dest="call_argument [18071,18077]"/>
  <match src="]: ] [37347,37348]" dest="]: ] [51928,51929]"/>
  <match src="call_expression [89971,90003]" dest="call_expression [74604,74636]"/>
  <match src="identifier: SafeMath [17376,17384]" dest="identifier: SafeMath [59826,59834]"/>
  <match src="block_statement [93384,93419]" dest="block_statement [31948,31983]"/>
  <match src="function: function [91512,91520]" dest="function: function [30076,30084]"/>
  <match src="): ) [83449,83450]" dest="): ) [63075,63076]"/>
  <match src="call_argument [30009,30184]" dest="call_argument [44590,44765]"/>
  <match src="identifier: that [105318,105322]" dest="identifier: that [67386,67390]"/>
  <match src="primitive_type [38343,38348]" dest="primitive_type [52924,52929]"/>
  <match src=",: , [51891,51892]" dest=",: , [54654,54655]"/>
  <match src="call_argument [44016,44058]" dest="call_argument [13173,13215]"/>
  <match src="): ) [35373,35374]" dest="): ) [49954,49955]"/>
  <match src="(: ( [7080,7081]" dest="(: ( [7665,7666]"/>
  <match src="number_literal: 24 [43845,43847]" dest="number_literal: 24 [13002,13004]"/>
  <match src="{: { [47303,47304]" dest="{: { [16460,16461]"/>
  <match src="=: = [4636,4637]" dest="=: = [5215,5216]"/>
  <match src=".: . [95207,95208]" dest=".: . [33771,33772]"/>
  <match src="identifier: coupons [86868,86875]" dest="identifier: coupons [27711,27718]"/>
  <match src="array_access [103017,103045]" dest="array_access [41579,41607]"/>
  <match src="for: for [74458,74461]" dest="for: for [80449,80452]"/>
  <match src="(: ( [97074,97075]" dest="(: ( [35638,35639]"/>
  <match src="string_literal [68389,68398]" dest="string_literal [70748,70779]"/>
  <match src=".: . [99908,99909]" dest=".: . [38470,38471]"/>
  <match src="call_argument [36811,36832]" dest="call_argument [51392,51413]"/>
  <match src="array_access [101494,101518]" dest="array_access [40056,40080]"/>
  <match src="}: } [100322,100323]" dest="}: } [38884,38885]"/>
  <match src="identifier: sender [80800,80806]" dest="identifier: sender [69669,69675]"/>
  <match src="returns: returns [92750,92757]" dest="returns: returns [31314,31321]"/>
  <match src="(: ( [46224,46225]" dest="(: ( [15381,15382]"/>
  <match src="return_type_definition [10941,10955]" dest="return_type_definition [11526,11540]"/>
  <match src="string_literal [23788,23824]" dest="string_literal [62967,63011]"/>
  <match src="{: { [2880,2881]" dest="{: { [3459,3460]"/>
  <match src="&quot;: &quot; [105689,105690]" dest="&quot;: &quot; [67757,67758]"/>
  <match src="parameter [81690,81703]" dest="parameter [70889,70902]"/>
  <match src="(: ( [102651,102652]" dest="(: ( [41213,41214]"/>
  <match src="primitive_type [37351,37355]" dest="primitive_type [51932,51936]"/>
  <match src="type_name [97924,97931]" dest="type_name [36486,36493]"/>
  <match src="type_name [98311,98315]" dest="type_name [36873,36877]"/>
  <match src="uint256: uint256 [6815,6822]" dest="uint256: uint256 [7400,7407]"/>
  <match src="(: ( [87566,87567]" dest="(: ( [28409,28410]"/>
  <match src="): ) [95733,95734]" dest="): ) [34297,34298]"/>
  <match src="member_expression [9725,9732]" dest="member_expression [10310,10317]"/>
  <match src="}: } [72087,72088]" dest="}: } [58224,58225]"/>
  <match src="block_statement [93883,93938]" dest="block_statement [32447,32502]"/>
  <match src="identifier: msg [81064,81067]" dest="identifier: msg [69926,69929]"/>
  <match src="identifier: blockTimestamp [67199,67213]" dest="identifier: newBonded [65843,65852]"/>
  <match src="identifier: amount [99272,99278]" dest="identifier: amount [37834,37840]"/>
  <match src="identifier: accounts [99856,99864]" dest="identifier: accounts [38418,38426]"/>
  <match src="identifier: D256 [46537,46541]" dest="identifier: D256 [15694,15698]"/>
  <match src="uint256: uint256 [92649,92656]" dest="uint256: uint256 [31213,31220]"/>
  <match src="uint256: uint256 [13509,13516]" dest="uint256: uint256 [23300,23307]"/>
  <match src=".: . [11096,11097]" dest=".: . [11681,11682]"/>
  <match src="type_name [91949,91956]" dest="type_name [30513,30520]"/>
  <match src="return_statement [95048,95096]" dest="return_statement [33612,33660]"/>
  <match src="): ) [31243,31244]" dest="): ) [45824,45825]"/>
  <match src="identifier: file [33883,33887]" dest="identifier: file [48464,48468]"/>
  <match src="primitive_type [54354,54361]" dest="primitive_type [21444,21451]"/>
  <match src="parameter [8383,8399]" dest="parameter [8968,8984]"/>
  <match src=",: , [9949,9950]" dest=",: , [10534,10535]"/>
  <match src="call_argument [21528,21529]" dest="call_argument [63290,63291]"/>
  <match src="identifier: D256 [47598,47602]" dest="identifier: D256 [16755,16759]"/>
  <match src=",: , [34690,34691]" dest=",: , [49271,49272]"/>
  <match src="primitive_type [37356,37361]" dest="primitive_type [51937,51942]"/>
  <match src="identifier: debt [98933,98937]" dest="identifier: debt [37495,37499]"/>
  <match src="type_name [13852,13859]" dest="type_name [23643,23650]"/>
  <match src="type_name [81955,81962]" dest="type_name [60732,60739]"/>
  <match src="(: ( [93158,93159]" dest="(: ( [31722,31723]"/>
  <match src="user_defined_type [67467,67479]" dest="user_defined_type [66330,66342]"/>
  <match src="): ) [51899,51900]" dest="): ) [54662,54663]"/>
  <match src="identifier: amount [100510,100516]" dest="identifier: amount [39072,39078]"/>
  <match src="call_expression [73540,73547]" dest="call_expression [78905,78912]"/>
  <match src="(: ( [73028,73029]" dest="(: ( [65401,65402]"/>
  <match src="assignment_expression [103017,103061]" dest="assignment_expression [41579,41623]"/>
  <match src="identifier: Global [87974,87980]" dest="identifier: Global [28817,28823]"/>
  <match src="uint256: uint256 [87786,87793]" dest="uint256: uint256 [28629,28636]"/>
  <match src="call_expression [80924,80938]" dest="call_expression [59163,59177]"/>
  <match src="primitive_type [87567,87574]" dest="primitive_type [28410,28417]"/>
  <match src="primitive_type [77746,77753]" dest="primitive_type [55943,55950]"/>
  <match src="primitive_type [52479,52486]" dest="primitive_type [60410,60417]"/>
  <match src="{: { [99838,99839]" dest="{: { [38400,38401]"/>
  <match src="): ) [98066,98067]" dest="): ) [36628,36629]"/>
  <match src=",: , [103341,103342]" dest=",: , [41903,41904]"/>
  <match src="type_name [100684,100691]" dest="type_name [39246,39253]"/>
  <match src="string_literal [26884,26917]" dest="string_literal [76609,76638]"/>
  <match src="identifier: i [35366,35367]" dest="identifier: i [49947,49948]"/>
  <match src="identifier: payloadA [30345,30353]" dest="identifier: payloadA [44926,44934]"/>
  <match src=".: . [32368,32369]" dest=".: . [46949,46950]"/>
  <match src="returns: returns [72126,72133]" dest="returns: returns [79519,79526]"/>
  <match src=".: . [82513,82514]" dest=".: . [70824,70825]"/>
  <match src=".: . [104061,104062]" dest=".: . [42623,42624]"/>
  <match src="identifier: amount1In [54417,54426]" dest="identifier: amount1In [21507,21516]"/>
  <match src="identifier: a [11622,11623]" dest="identifier: a [12207,12208]"/>
  <match src="): ) [105844,105845]" dest="): ) [67912,67913]"/>
  <match src="&gt;: &gt; [36576,36577]" dest="&gt;: &gt; [51157,51158]"/>
  <match src="uint256: uint256 [67381,67388]" dest="uint256: uint256 [70485,70492]"/>
  <match src="type_name [99791,99798]" dest="type_name [38353,38360]"/>
  <match src="primitive_type [54136,54143]" dest="primitive_type [21226,21233]"/>
  <match src="): ) [82251,82252]" dest="): ) [62321,62322]"/>
  <match src="(: ( [92542,92543]" dest="(: ( [31106,31107]"/>
  <match src="pure: pure [47948,47952]" dest="pure: pure [17105,17109]"/>
  <match src="identifier: D256 [8060,8064]" dest="identifier: D256 [8645,8649]"/>
  <match src="uint256: uint256 [44298,44305]" dest="uint256: uint256 [13455,13462]"/>
  <match src="member_expression [81800,81810]" dest="member_expression [70528,70538]"/>
  <match src="type_cast_expression [37356,37377]" dest="type_cast_expression [51937,51958]"/>
  <match src="uint256: uint256 [9003,9010]" dest="uint256: uint256 [9588,9595]"/>
  <match src="parameter [33609,33618]" dest="parameter [48190,48199]"/>
  <match src="expression_statement [37339,37379]" dest="expression_statement [51920,51960]"/>
  <match src="identifier: Setters [97799,97806]" dest="identifier: Setters [36361,36368]"/>
  <match src="identifier: epoch [102128,102133]" dest="identifier: epoch [40690,40695]"/>
  <match src="returns: returns [47848,47855]" dest="returns: returns [17005,17012]"/>
  <match src="variable_declaration_statement [83222,83311]" dest="variable_declaration_statement [70987,71049]"/>
  <match src="call_expression [96709,96729]" dest="call_expression [35273,35293]"/>
  <match src="&quot;: &quot; [57782,57783]" dest="&quot;: &quot; [71259,71260]"/>
  <match src="): ) [82441,82442]" dest="): ) [77791,77792]"/>
  <match src="view: view [93145,93149]" dest="view: view [31709,31713]"/>
  <match src="parameter [55222,55234]" dest="parameter [22312,22324]"/>
  <match src="primitive_type [80009,80016]" dest="primitive_type [76143,76150]"/>
  <match src="struct_member [88023,88041]" dest="struct_member [28866,28884]"/>
  <match src="function_body [96529,96590]" dest="function_body [35093,35154]"/>
  <match src="type_name [78368,78375]" dest="type_name [77883,77890]"/>
  <match src="identifier: expiration [102359,102369]" dest="identifier: expiration [40921,40931]"/>
  <match src="parameter [54855,54871]" dest="parameter [21945,21961]"/>
  <match src="primitive_type [89755,89762]" dest="primitive_type [74388,74395]"/>
  <match src="call_struct_argument [47758,47786]" dest="call_struct_argument [16915,16943]"/>
  <match src="identifier: amount [24793,24799]" dest="identifier: amount [54950,54956]"/>
  <match src="type_name [103188,103202]" dest="type_name [41750,41764]"/>
  <match src="=: = [45288,45289]" dest="=: = [14445,14446]"/>
  <match src="type_name [5951,5958]" dest="type_name [6530,6537]"/>
  <match src="=: = [9013,9014]" dest="=: = [9598,9599]"/>
  <match src="uint256: uint256 [11324,11331]" dest="uint256: uint256 [11909,11916]"/>
  <match src="event_paramater [54293,54305]" dest="event_paramater [21383,21395]"/>
  <match src="identifier: mul [9052,9055]" dest="identifier: mul [9637,9640]"/>
  <match src="external: external [55204,55212]" dest="external: external [22294,22302]"/>
  <match src="(: ( [84071,84072]" dest="(: ( [77934,77935]"/>
  <match src=",: , [8179,8180]" dest=",: , [8764,8765]"/>
  <match src="identifier: D256 [10344,10348]" dest="identifier: D256 [10929,10933]"/>
  <match src="user_defined_type [7942,7946]" dest="user_defined_type [8527,8531]"/>
  <match src="visibility [89578,89584]" dest="visibility [74211,74217]"/>
  <match src="return: return [93950,93956]" dest="return: return [32514,32520]"/>
  <match src="type_name [9141,9145]" dest="type_name [9726,9730]"/>
  <match src=",: , [80251,80252]" dest=",: , [69426,69427]"/>
  <match src="call_argument [39121,39139]" dest="call_argument [53702,53720]"/>
  <match src="(: ( [90235,90236]" dest="(: ( [74868,74869]"/>
  <match src="call_expression [107297,107305]" dest="call_expression [55385,55393]"/>
  <match src="identifier: COLON [33915,33920]" dest="identifier: COLON [48496,48501]"/>
  <match src=",: , [3217,3218]" dest=",: , [3796,3797]"/>
  <match src="): ) [8667,8668]" dest="): ) [9252,9253]"/>
  <match src="(: ( [80380,80381]" dest="(: ( [69528,69529]"/>
  <match src="): ) [9740,9741]" dest="): ) [10325,10326]"/>
  <match src="pure: pure [53307,53311]" dest="pure: pure [20397,20401]"/>
  <match src="function: function [53456,53464]" dest="function: function [20546,20554]"/>
  <match src="identifier: OpenZeppelinUpgradesAddress [90290,90317]" dest="identifier: OpenZeppelinUpgradesAddress [74923,74950]"/>
  <match src="type_name [93316,93323]" dest="type_name [31880,31887]"/>
  <match src="call_argument [18726,18732]" dest="call_argument [59100,59106]"/>
  <match src="(: ( [9532,9533]" dest="(: ( [10117,10118]"/>
  <match src="parameter [54794,54801]" dest="parameter [21884,21891]"/>
  <match src="call_expression [82905,83046]" dest="call_expression [78129,78231]"/>
  <match src=",: , [7638,7639]" dest=",: , [8223,8224]"/>
  <match src=",: , [84323,84324]" dest=",: , [76414,76415]"/>
  <match src="primitive_type [91551,91557]" dest="primitive_type [30115,30121]"/>
  <match src="view: view [54024,54028]" dest="view: view [21114,21118]"/>
  <match src="primitive_type [105169,105176]" dest="primitive_type [67237,67244]"/>
  <match src="identifier: setDebtToZero [99004,99017]" dest="identifier: setDebtToZero [37566,37579]"/>
  <match src="): ) [94501,94502]" dest="): ) [33065,33066]"/>
  <match src="call_expression [51878,51900]" dest="call_expression [54633,54663]"/>
  <match src="parameter [7969,7978]" dest="parameter [8554,8563]"/>
  <match src="assembly_statement [97145,97199]" dest="assembly_statement [35709,35763]"/>
  <match src="&quot;: &quot; [1563,1564]" dest="&quot;: &quot; [2142,2143]"/>
  <match src="type_name [80051,80058]" dest="type_name [76178,76185]"/>
  <match src="pure: pure [10386,10390]" dest="pure: pure [10971,10975]"/>
  <match src=".: . [95538,95539]" dest=".: . [34102,34103]"/>
  <match src="memory: memory [7249,7255]" dest="memory: memory [7834,7840]"/>
  <match src="constant: constant [29481,29489]" dest="constant: constant [44062,44070]"/>
  <match src=",: , [8399,8400]" dest=",: , [8984,8985]"/>
  <match src="enum_value: UNDECIDED [87376,87385]" dest="enum_value: UNDECIDED [28219,28228]"/>
  <match src="uint256: uint256 [69851,69858]" dest="uint256: uint256 [64628,64635]"/>
  <match src="identifier: account [104373,104380]" dest="identifier: account [42935,42942]"/>
  <match src="variable_declaration_statement [72980,73051]" dest="variable_declaration_statement [65374,65426]"/>
  <match src=",: , [34846,34847]" dest=",: , [49427,49428]"/>
  <match src="visibility [44433,44440]" dest="visibility [13590,13597]"/>
  <match src="call_argument [57391,57428]" dest="call_argument [71141,71177]"/>
  <match src="identifier: b [10805,10806]" dest="identifier: b [11390,11391]"/>
  <match src="return_type_definition [93576,93593]" dest="return_type_definition [32140,32157]"/>
  <match src="): ) [5249,5250]" dest="): ) [5828,5829]"/>
  <match src="identifier: reason [29875,29881]" dest="identifier: reason [44456,44462]"/>
  <match src="(: ( [53968,53969]" dest="(: ( [21058,21059]"/>
  <match src="state_mutability [3796,3800]" dest="state_mutability [4375,4379]"/>
  <match src="visibility [53731,53739]" dest="visibility [20821,20829]"/>
  <match src="identifier: BASE [7640,7644]" dest="identifier: BASE [8225,8229]"/>
  <match src="(: ( [11323,11324]" dest="(: ( [11908,11909]"/>
  <match src="}: } [47908,47909]" dest="}: } [17065,17066]"/>
  <match src="}: } [91681,91682]" dest="}: } [30245,30246]"/>
  <match src="uint256: uint256 [44556,44563]" dest="uint256: uint256 [13713,13720]"/>
  <match src="(: ( [62958,62959]" dest="(: ( [26817,26818]"/>
  <match src="=: = [103052,103053]" dest="=: = [41614,41615]"/>
  <match src="identifier: _state [99971,99977]" dest="identifier: _state [38533,38539]"/>
  <match src="array_access [95510,95550]" dest="array_access [34074,34114]"/>
  <match src="public: public [91726,91732]" dest="public: public [30290,30296]"/>
  <match src="pure: pure [47843,47847]" dest="pure: pure [17000,17004]"/>
  <match src="call_expression [30052,30076]" dest="call_expression [44633,44657]"/>
  <match src="(: ( [8879,8880]" dest="(: ( [9464,9465]"/>
  <match src="uint256: uint256 [88114,88121]" dest="uint256: uint256 [28957,28964]"/>
  <match src="primitive_type [100382,100389]" dest="primitive_type [38944,38951]"/>
  <match src="comment: /* Oracle */ [43958,43970]" dest="comment: /* Oracle */ [13115,13127]"/>
  <match src="uint256: uint256 [52130,52137]" dest="uint256: uint256 [63675,63682]"/>
  <match src="identifier: result [37922,37928]" dest="identifier: result [52503,52509]"/>
  <match src="identifier: Transfer [99693,99701]" dest="identifier: Transfer [38255,38263]"/>
  <match src="view: view [93790,93794]" dest="view: view [32354,32358]"/>
  <match src="identifier: msg [82494,82497]" dest="identifier: msg [70805,70808]"/>
  <match src="&lt;: &lt; [38499,38500]" dest="&lt;: &lt; [53080,53081]"/>
  <match src="call_argument [7162,7174]" dest="call_argument [7747,7759]"/>
  <match src="identifier: burn [55187,55191]" dest="identifier: burn [22277,22281]"/>
  <match src="variable_declaration [67381,67404]" dest="variable_declaration [70485,70499]"/>
  <match src="identifier: reason [34244,34250]" dest="identifier: reason [48825,48831]"/>
  <match src="{: { [8297,8298]" dest="{: { [8882,8883]"/>
  <match src="}: } [9742,9743]" dest="}: } [10327,10328]"/>
  <match src="identifier: RPAREN [34079,34085]" dest="identifier: RPAREN [48660,48666]"/>
  <match src="return_statement [94165,94221]" dest="return_statement [32729,32785]"/>
  <match src="call_argument [102018,102024]" dest="call_argument [40580,40586]"/>
  <match src="{: { [92881,92882]" dest="{: { [31445,31446]"/>
  <match src="parameter [4427,4436]" dest="parameter [5006,5015]"/>
  <match src="[: [ [38673,38674]" dest="[: [ [53254,53255]"/>
  <match src="): ) [38852,38853]" dest="): ) [53433,53434]"/>
  <match src="visibility [1932,1940]" dest="visibility [2511,2519]"/>
  <match src="{: { [87957,87958]" dest="{: { [28800,28801]"/>
  <match src="type_name [17500,17507]" dest="type_name [17918,17925]"/>
  <match src=".: . [100194,100195]" dest=".: . [38756,38757]"/>
  <match src="return_statement [92348,92376]" dest="return_statement [30912,30940]"/>
  <match src="type_name [36984,36991]" dest="type_name [51565,51572]"/>
  <match src="identifier: amount [24747,24753]" dest="identifier: amount [17954,17960]"/>
  <match src="call_expression [81247,81293]" dest="call_expression [70002,70048]"/>
  <match src="variable_declaration_statement [104241,104305]" dest="variable_declaration_statement [42803,42867]"/>
  <match src="primitive_type [54279,54283]" dest="primitive_type [21369,21373]"/>
  <match src="primitive_type [53783,53790]" dest="primitive_type [20873,20880]"/>
  <match src="]: ] [104517,104518]" dest="]: ] [43079,43080]"/>
  <match src="member_expression [94474,94500]" dest="member_expression [33038,33064]"/>
  <match src="function_body [95492,95558]" dest="function_body [34056,34122]"/>
  <match src="type_name [99475,99482]" dest="type_name [38037,38044]"/>
  <match src="assignment_expression [100536,100601]" dest="assignment_expression [39098,39163]"/>
  <match src="identifier: newClaimable [81963,81975]" dest="identifier: expirationEpoch [60740,60755]"/>
  <match src="(: ( [38481,38482]" dest="(: ( [53062,53063]"/>
  <match src="type_alias [91167,91175]" dest="type_alias [29731,29739]"/>
  <match src="parameter [31610,31626]" dest="parameter [46191,46207]"/>
  <match src="function: function [29800,29808]" dest="function: function [44381,44389]"/>
  <match src="parameter [50900,50914]" dest="parameter [26059,26073]"/>
  <match src="return_statement [46004,46034]" dest="return_statement [15161,15191]"/>
  <match src="returns: returns [10822,10829]" dest="returns: returns [11407,11414]"/>
  <match src="identifier: Require [84059,84066]" dest="identifier: Require [77922,77929]"/>
  <match src="(: ( [33798,33799]" dest="(: ( [48379,48380]"/>
  <match src="=: = [44954,44955]" dest="=: = [14111,14112]"/>
  <match src="type_name [96480,96487]" dest="type_name [35044,35051]"/>
  <match src="identifier: reject [96576,96582]" dest="identifier: reject [35140,35146]"/>
  <match src="call_argument [33821,34108]" dest="call_argument [48402,48689]"/>
  <match src="member_expression [92253,92268]" dest="member_expression [30817,30832]"/>
  <match src="member_expression [100955,100981]" dest="member_expression [39517,39543]"/>
  <match src="uint256: uint256 [44066,44073]" dest="uint256: uint256 [13223,13230]"/>
  <match src="type_name [36425,36430]" dest="type_name [51006,51011]"/>
  <match src="return: return [46004,46010]" dest="return: return [15161,15167]"/>
  <match src="external: external [55075,55083]" dest="external: external [22165,22173]"/>
  <match src="): ) [46383,46384]" dest="): ) [15540,15541]"/>
  <match src="visibility [74530,74538]" dest="visibility [64858,64866]"/>
  <match src="identifier: account [100125,100132]" dest="identifier: account [38687,38694]"/>
  <match src="call_argument [47603,47631]" dest="call_argument [16760,16788]"/>
  <match src="identifier: CHAIN_ID [47989,47997]" dest="identifier: CHAIN_ID [17146,17154]"/>
  <match src="variable_declaration [102596,102630]" dest="variable_declaration [41158,41192]"/>
  <match src="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [3031,3102]" dest="comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [3610,3681]"/>
  <match src="identifier: z [37848,37849]" dest="identifier: z [52429,52430]"/>
  <match src="bool: bool [62998,63002]" dest="bool: bool [26857,26861]"/>
  <match src="address: address [63687,63694]" dest="address: address [76252,76259]"/>
  <match src="identifier: getGovernanceQuorum [46445,46464]" dest="identifier: getGovernanceQuorum [15602,15621]"/>
  <match src="identifier: spender [94212,94219]" dest="identifier: spender [32776,32783]"/>
  <match src="identifier: impl [97169,97173]" dest="identifier: impl [35733,35737]"/>
  <match src=".: . [46232,46233]" dest=".: . [15389,15390]"/>
  <match src="identifier: value [50190,50195]" dest="identifier: value [70189,70194]"/>
  <match src="memory: memory [9815,9821]" dest="memory: memory [10400,10406]"/>
  <match src="{: { [11338,11339]" dest="{: { [11923,11924]"/>
  <match src="uint256: uint256 [30948,30955]" dest="uint256: uint256 [45529,45536]"/>
  <match src="address: address [14999,15006]" dest="address: address [24790,24797]"/>
  <match src=",: , [83515,83516]" dest=",: , [78650,78651]"/>
  <match src="member_expression [99177,99191]" dest="member_expression [37739,37753]"/>
  <match src="member_expression [84059,84071]" dest="member_expression [77922,77934]"/>
  <match src="address: address [101818,101825]" dest="address: address [40380,40387]"/>
  <match src="return: return [46831,46837]" dest="return: return [15988,15994]"/>
  <match src="block_statement [93641,93676]" dest="block_statement [32205,32240]"/>
  <match src="type_name [14653,14657]" dest="type_name [24444,24448]"/>
  <match src="identifier: Withdraw [80662,80670]" dest="identifier: Withdraw [69795,69803]"/>
  <match src="parameter [68229,68236]" dest="parameter [61643,61650]"/>
  <match src="=: = [81188,81189]" dest="=: = [69966,69967]"/>
  <match src="member_expression [96135,96152]" dest="member_expression [34699,34716]"/>
  <match src="=: = [89887,89888]" dest="=: = [74520,74521]"/>
  <match src="): ) [7902,7903]" dest="): ) [8487,8488]"/>
</matches>
<actions>
  <move-tree tree="library_declaration [1186,6034]" parent="source_file [0,81122]" at="4"/>
  <move-tree tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [11662,12170]" parent="source_file [0,81122]" at="5"/>
  <move-tree tree="library_declaration [43673,48008]" parent="source_file [0,81122]" at="12"/>
  <move-tree tree="interface_declaration [53030,55476]" parent="source_file [0,81122]" at="14"/>
  <move-tree tree="comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [12779,12932]" parent="source_file [0,81122]" at="14"/>
  <move-tree tree="interface_declaration [12934,15569]" parent="source_file [0,81122]" at="14"/>
  <move-tree tree="contract_declaration [50788,51001]" parent="source_file [0,81122]" at="17"/>
  <move-tree tree="contract_declaration [62888,63061]" parent="source_file [0,81122]" at="20"/>
  <move-tree tree="contract_declaration [86664,87000]" parent="source_file [0,81122]" at="23"/>
  <move-tree tree="contract_declaration [87004,87325]" parent="source_file [0,81122]" at="24"/>
  <move-tree tree="contract_declaration [87329,87627]" parent="source_file [0,81122]" at="25"/>
  <move-tree tree="contract_declaration [87631,88212]" parent="source_file [0,81122]" at="26"/>
  <move-tree tree="contract_declaration [88216,88262]" parent="source_file [0,81122]" at="27"/>
  <move-tree tree="comment: /*     Copyright 2019 ZeroEx Intl.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [39265,39873]" parent="source_file [0,81122]" at="28"/>
  <move-tree tree="contract_declaration [91128,97209]" parent="source_file [0,81122]" at="29"/>
  <move-tree tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [43096,43671]" parent="source_file [0,81122]" at="30"/>
  <move-tree tree="contract_declaration [97790,104548]" parent="source_file [0,81122]" at="31"/>
  <move-tree tree="contract_declaration [17329,24351]" parent="source_file [0,81122]" at="40"/>
  <move-tree tree="contract_declaration [64318,68434]" parent="source_file [0,81122]" at="42"/>
  <move-tree tree="contract_declaration [105129,105978]" parent="source_file [0,81122]" at="46"/>
  <move-tree tree="comment: // a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format)) [55979,56081]" parent="source_file [0,81122]" at="73"/>
  <move-tree tree="comment: // library with helper methods for oracles that are concerned with computing average prices [58769,58860]" parent="source_file [0,81122]" at="77"/>
  <move-tree tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [62311,62886]" parent="source_file [0,81122]" at="77"/>
  <update-node tree="comment: /*     Copyright 2019 dYdX Trading Inc.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [6038,6651]" label="/**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */"/>
  <update-node tree="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [11662,12170]" label="/*     Copyright 2019 dYdX Trading Inc.           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [15573,16148]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /**  * @dev Implementation of the {IERC20} interface.  *  * This implementation is agnostic to the way tokens are created. This means  * that a supply mechanism has to be added in a derived contract using {_mint}.  * For a generic mechanism see {ERC20Mintable}.  *  * TIP: For a detailed writeup see our guide  * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How  * to implement supply mechanisms].  *  * We have followed general OpenZeppelin guidelines: functions revert instead  * of returning `false` on failure. This behavior is nonetheless conventional  * and does not conflict with the expectations of ERC20 applications.  *  * Additionally, an {Approval} event is emitted on calls to {transferFrom}.  * This allows applications to reconstruct the allowance for all accounts just  * by listening to said events. Other implementations of the EIP may not emit  * these events, as it isn't required by the specification.  *  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}  * functions have been added to mitigate the well-known issues around setting  * allowances. See {IERC20-approve}.  */ [16152,17327]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <insert-node tree="contract_declaration [17752,20116]" parent="source_file [0,81122]" at="11"/>
  <update-node tree="comment: /**  * @dev Extension of {ERC20} that allows token holders to destroy both their own  * tokens and those that they have an allowance for, in a way that can be  * recognized off-chain (via event analysis).  */ [24355,24567]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /**  * @dev Optional functions from the ERC20 standard.  */ [24980,25041]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /**  * @title Roles  * @dev Library for managing addresses assigned to a Role.  */ [26539,26624]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /*     Copyright 2019 ZeroEx Intl.      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [39265,39873]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [43096,43671]" label="/*     Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [48012,48587]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <insert-node tree="contract_declaration [54429,59188]" parent="source_file [0,81122]" at="33"/>
  <update-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [50211,50786]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [51005,51580]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: // computes square roots using the babylonian method [55480,55532]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: // https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method [55534,55618]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: // a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format)) [55979,56081]" label="/*     Copyright 2018-2019 zOS Global Limited           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <update-node tree="comment: // library with helper methods for oracles that are concerned with computing average prices [58769,58860]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <insert-node tree="contract_declaration [75767,79771]" parent="source_file [0,81122]" at="48"/>
  <update-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [62311,62886]" label="/*           Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */"/>
  <insert-node tree="contract_declaration [80358,81122]" parent="source_file [0,81122]" at="50"/>
  <insert-node tree="contract: contract [17752,17760]" parent="contract_declaration [17752,20116]" at="0"/>
  <insert-node tree="identifier: Curve [17761,17766]" parent="contract_declaration [17752,20116]" at="1"/>
  <insert-node tree="contract_body [17767,20116]" parent="contract_declaration [17752,20116]" at="2"/>
  <insert-node tree="contract: contract [54429,54437]" parent="contract_declaration [54429,59188]" at="0"/>
  <insert-node tree="identifier: Comptroller [54438,54449]" parent="contract_declaration [54429,59188]" at="1"/>
  <insert-node tree="is: is [54450,54452]" parent="contract_declaration [54429,59188]" at="2"/>
  <insert-tree tree="inheritance_specifier [54453,54460]" parent="contract_declaration [54429,59188]" at="3"/>
  <insert-node tree="contract_body [54461,59188]" parent="contract_declaration [54429,59188]" at="4"/>
  <update-node tree="identifier: ERC20 [17338,17343]" label="Market"/>
  <move-tree tree="function_definition [21412,21883]" parent="contract_body [59813,63884]" at="28"/>
  <update-node tree="identifier: Oracle [64327,64333]" label="Regulator"/>
  <move-tree tree="function_definition [65600,65849]" parent="contract_body [64505,66610]" at="18"/>
  <update-node tree="identifier: Pool [79356,79360]" label="Bonding"/>
  <move-tree tree="inheritance_specifier [106854,106864]" parent="contract_declaration [68633,71340]" at="5"/>
  <move-tree tree="event_definition [79869,79935]" parent="contract_body [68673,71340]" at="8"/>
  <insert-node tree="contract: contract [75767,75775]" parent="contract_declaration [75767,79771]" at="0"/>
  <insert-node tree="identifier: Govern [75776,75782]" parent="contract_declaration [75767,79771]" at="1"/>
  <insert-node tree="is: is [75783,75785]" parent="contract_declaration [75767,79771]" at="2"/>
  <insert-tree tree="inheritance_specifier [75786,75793]" parent="contract_declaration [75767,79771]" at="3"/>
  <insert-node tree=",: , [75793,75794]" parent="contract_declaration [75767,79771]" at="4"/>
  <move-tree tree="inheritance_specifier [106586,106596]" parent="contract_declaration [75767,79771]" at="5"/>
  <insert-node tree=",: , [75805,75806]" parent="contract_declaration [75767,79771]" at="6"/>
  <move-tree tree="inheritance_specifier [106598,106609]" parent="contract_declaration [75767,79771]" at="7"/>
  <insert-node tree="contract_body [75819,79771]" parent="contract_declaration [75767,79771]" at="8"/>
  <insert-node tree="contract: contract [80358,80366]" parent="contract_declaration [80358,81122]" at="0"/>
  <insert-node tree="identifier: Implementation [80367,80381]" parent="contract_declaration [80358,81122]" at="1"/>
  <insert-node tree="is: is [80382,80384]" parent="contract_declaration [80358,81122]" at="2"/>
  <move-tree tree="inheritance_specifier [106579,106584]" parent="contract_declaration [80358,81122]" at="3"/>
  <insert-node tree=",: , [80390,80391]" parent="contract_declaration [80358,81122]" at="4"/>
  <insert-tree tree="inheritance_specifier [80392,80399]" parent="contract_declaration [80358,81122]" at="5"/>
  <insert-node tree=",: , [80399,80400]" parent="contract_declaration [80358,81122]" at="6"/>
  <insert-tree tree="inheritance_specifier [80401,80407]" parent="contract_declaration [80358,81122]" at="7"/>
  <insert-node tree=",: , [80407,80408]" parent="contract_declaration [80358,81122]" at="8"/>
  <insert-tree tree="inheritance_specifier [80409,80418]" parent="contract_declaration [80358,81122]" at="9"/>
  <insert-node tree=",: , [80418,80419]" parent="contract_declaration [80358,81122]" at="10"/>
  <insert-tree tree="inheritance_specifier [80420,80426]" parent="contract_declaration [80358,81122]" at="11"/>
  <insert-node tree="contract_body [80427,81122]" parent="contract_declaration [80358,81122]" at="12"/>
  <insert-node tree="{: { [17767,17768]" parent="contract_body [17767,20116]" at="0"/>
  <insert-tree tree="using_directive [17774,17801]" parent="contract_body [17767,20116]" at="1"/>
  <insert-tree tree="using_directive [17807,17838]" parent="contract_body [17767,20116]" at="2"/>
  <insert-node tree="function_definition [17846,18098]" parent="contract_body [17767,20116]" at="3"/>
  <insert-node tree="function_definition [18106,19409]" parent="contract_body [17767,20116]" at="4"/>
  <insert-node tree="comment: // 1/(3(1-R)^2)-1/3 [19417,19436]" parent="contract_body [17767,20116]" at="5"/>
  <insert-node tree="function_definition [19442,19683]" parent="contract_body [17767,20116]" at="6"/>
  <insert-node tree="comment: // 1/(3(1-R)(1-R'))-1/3 [19691,19714]" parent="contract_body [17767,20116]" at="7"/>
  <insert-node tree="function_definition [19720,20113]" parent="contract_body [17767,20116]" at="8"/>
  <insert-node tree="}: } [20115,20116]" parent="contract_body [17767,20116]" at="9"/>
  <insert-node tree="{: { [54461,54462]" parent="contract_body [54461,59188]" at="0"/>
  <move-tree tree="using_directive [71036,71063]" parent="contract_body [54461,59188]" at="1"/>
  <insert-tree tree="state_variable_declaration [54503,54549]" parent="contract_body [54461,59188]" at="2"/>
  <move-tree tree="function_definition [51787,51930]" parent="contract_body [54461,59188]" at="3"/>
  <insert-node tree="function_definition [54794,55073]" parent="contract_body [54461,59188]" at="4"/>
  <move-tree tree="function_definition [24870,24973]" parent="contract_body [54461,59188]" at="5"/>
  <move-tree tree="function_definition [22804,23152]" parent="contract_body [54461,59188]" at="6"/>
  <insert-node tree="function_definition [55538,55706]" parent="contract_body [54461,59188]" at="7"/>
  <insert-node tree="function_definition [55714,55865]" parent="contract_body [54461,59188]" at="8"/>
  <insert-node tree="function_definition [55873,57615]" parent="contract_body [54461,59188]" at="9"/>
  <insert-node tree="function_definition [57623,57979]" parent="contract_body [54461,59188]" at="10"/>
  <move-tree tree="function_definition [71952,72088]" parent="contract_body [54461,59188]" at="11"/>
  <move-tree tree="function_definition [82558,83551]" parent="contract_body [54461,59188]" at="12"/>
  <move-tree tree="function_definition [83782,84003]" parent="contract_body [54461,59188]" at="13"/>
  <insert-node tree="function_definition [58868,59002]" parent="contract_body [54461,59188]" at="14"/>
  <insert-node tree="function_definition [59010,59185]" parent="contract_body [54461,59188]" at="15"/>
  <insert-node tree="}: } [59187,59188]" parent="contract_body [54461,59188]" at="16"/>
  <move-tree tree="state_variable_declaration [64391,64432]" parent="contract_body [59813,63884]" at="2"/>
  <insert-node tree="event_definition [59904,60035]" parent="contract_body [59813,63884]" at="3"/>
  <insert-node tree="event_definition [60041,60154]" parent="contract_body [59813,63884]" at="4"/>
  <move-tree tree="event_definition [27605,27648]" parent="contract_body [59813,63884]" at="5"/>
  <move-tree tree="event_definition [52413,52499]" parent="contract_body [59813,63884]" at="6"/>
  <move-tree tree=",: , [52491,52492]" parent="event_definition [60259,60360]" at="9"/>
  <insert-node tree="event_definition [60366,60450]" parent="contract_body [59813,63884]" at="7"/>
  <move-tree tree="function_definition [76798,76947]" parent="contract_body [59813,63884]" at="8"/>
  <insert-node tree="function_definition [60882,61575]" parent="contract_body [59813,63884]" at="9"/>
  <move-tree tree="function_definition [68187,68272]" parent="contract_body [59813,63884]" at="10"/>
  <insert-node tree="function_definition [61753,62441]" parent="contract_body [59813,63884]" at="11"/>
  <insert-node tree="function_definition [62449,62851]" parent="contract_body [59813,63884]" at="12"/>
  <move-tree tree=",: , [23623,23624]" parent="function_definition [62859,63145]" at="5"/>
  <insert-tree tree="using_directive [64512,64539]" parent="contract_body [64505,66610]" at="1"/>
  <insert-node tree="event_definition [64584,64703]" parent="contract_body [64505,66610]" at="3"/>
  <insert-node tree="event_definition [64709,64785]" parent="contract_body [64505,66610]" at="4"/>
  <insert-node tree="event_definition [64791,64834]" parent="contract_body [64505,66610]" at="5"/>
  <insert-node tree="function_definition [64842,65228]" parent="contract_body [64505,66610]" at="6"/>
  <insert-node tree="function_definition [65236,65545]" parent="contract_body [64505,66610]" at="7"/>
  <insert-node tree="function_definition [65985,66247]" parent="contract_body [64505,66610]" at="9"/>
  <insert-node tree="function_definition [69084,69303]" parent="contract_body [68673,71340]" at="7"/>
  <insert-node tree="function_definition [70863,71337]" parent="contract_body [68673,71340]" at="12"/>
  <insert-node tree="{: { [75819,75820]" parent="contract_body [75819,79771]" at="0"/>
  <insert-tree tree="using_directive [75826,75853]" parent="contract_body [75819,79771]" at="1"/>
  <insert-tree tree="using_directive [75859,75890]" parent="contract_body [75819,79771]" at="2"/>
  <insert-tree tree="state_variable_declaration [75898,75939]" parent="contract_body [75819,79771]" at="3"/>
  <insert-node tree="event_definition [75947,76053]" parent="contract_body [75819,79771]" at="4"/>
  <insert-node tree="event_definition [76059,76159]" parent="contract_body [75819,79771]" at="5"/>
  <move-tree tree="event_definition [80037,80127]" parent="contract_body [75819,79771]" at="6"/>
  <insert-node tree="function_definition [76238,77859]" parent="contract_body [75819,79771]" at="7"/>
  <insert-node tree="function_definition [77867,78670]" parent="contract_body [75819,79771]" at="8"/>
  <insert-node tree="function_definition [78678,79461]" parent="contract_body [75819,79771]" at="9"/>
  <insert-node tree="function_definition [79469,79768]" parent="contract_body [75819,79771]" at="10"/>
  <insert-node tree="}: } [79770,79771]" parent="contract_body [75819,79771]" at="11"/>
  <insert-node tree="{: { [80427,80428]" parent="contract_body [80427,81122]" at="0"/>
  <move-tree tree="using_directive [74443,74470]" parent="contract_body [80427,81122]" at="1"/>
  <insert-node tree="event_definition [80469,80540]" parent="contract_body [80427,81122]" at="2"/>
  <move-tree tree="event_definition [79811,79863]" parent="contract_body [80427,81122]" at="3"/>
  <insert-node tree="function_definition [80617,80666]" parent="contract_body [80427,81122]" at="4"/>
  <insert-node tree="function_definition [80674,80864]" parent="contract_body [80427,81122]" at="5"/>
  <insert-node tree="modifier_definition [80872,81119]" parent="contract_body [80427,81122]" at="6"/>
  <insert-node tree="}: } [81121,81122]" parent="contract_body [80427,81122]" at="7"/>
  <insert-node tree="function: function [17846,17854]" parent="function_definition [17846,18098]" at="0"/>
  <insert-node tree="identifier: calculateCouponPremium [17855,17877]" parent="function_definition [17846,18098]" at="1"/>
  <insert-node tree="(: ( [17877,17878]" parent="function_definition [17846,18098]" at="2"/>
  <insert-node tree="parameter [17888,17907]" parent="function_definition [17846,18098]" at="3"/>
  <insert-node tree=",: , [17907,17908]" parent="function_definition [17846,18098]" at="4"/>
  <insert-node tree="parameter [17918,17935]" parent="function_definition [17846,18098]" at="5"/>
  <insert-node tree=",: , [17935,17936]" parent="function_definition [17846,18098]" at="6"/>
  <move-tree tree="parameter [24739,24753]" parent="function_definition [17846,18098]" at="7"/>
  <insert-node tree="): ) [17966,17967]" parent="function_definition [17846,18098]" at="8"/>
  <move-tree tree="visibility [24168,24176]" parent="function_definition [17846,18098]" at="9"/>
  <move-tree tree="state_mutability [55677,55681]" parent="function_definition [17846,18098]" at="10"/>
  <move-tree tree="return_type_definition [17667,17684]" parent="function_definition [17846,18098]" at="11"/>
  <insert-node tree="function_body [18000,18098]" parent="function_definition [17846,18098]" at="12"/>
  <insert-node tree="function: function [18106,18114]" parent="function_definition [18106,19409]" at="0"/>
  <insert-node tree="identifier: effectivePremium [18115,18131]" parent="function_definition [18106,19409]" at="1"/>
  <insert-node tree="(: ( [18131,18132]" parent="function_definition [18106,19409]" at="2"/>
  <move-tree tree="parameter [20705,20728]" parent="function_definition [18106,19409]" at="3"/>
  <insert-node tree=",: , [18161,18162]" parent="function_definition [18106,19409]" at="4"/>
  <move-tree tree="parameter [19992,20010]" parent="function_definition [18106,19409]" at="5"/>
  <insert-node tree=",: , [18189,18190]" parent="function_definition [18106,19409]" at="6"/>
  <move-tree tree="parameter [24905,24919]" parent="function_definition [18106,19409]" at="7"/>
  <insert-node tree="): ) [18220,18221]" parent="function_definition [18106,19409]" at="8"/>
  <move-tree tree="visibility [17510,17517]" parent="function_definition [18106,19409]" at="9"/>
  <move-tree tree="state_mutability [56573,56577]" parent="function_definition [18106,19409]" at="10"/>
  <insert-tree tree="return_type_definition [18235,18264]" parent="function_definition [18106,19409]" at="11"/>
  <insert-node tree="function_body [18265,19409]" parent="function_definition [18106,19409]" at="12"/>
  <insert-node tree="function: function [19442,19450]" parent="function_definition [19442,19683]" at="0"/>
  <insert-node tree="identifier: curve [19451,19456]" parent="function_definition [19442,19683]" at="1"/>
  <insert-node tree="(: ( [19456,19457]" parent="function_definition [19442,19683]" at="2"/>
  <move-tree tree="parameter [65643,65662]" parent="function_definition [19442,19683]" at="3"/>
  <insert-node tree="): ) [19486,19487]" parent="function_definition [19442,19683]" at="4"/>
  <move-tree tree="visibility [17546,17553]" parent="function_definition [19442,19683]" at="5"/>
  <move-tree tree="state_mutability [42287,42291]" parent="function_definition [19442,19683]" at="6"/>
  <insert-tree tree="return_type_definition [19501,19530]" parent="function_definition [19442,19683]" at="7"/>
  <insert-tree tree="function_body [19531,19683]" parent="function_definition [19442,19683]" at="8"/>
  <insert-node tree="function: function [19720,19728]" parent="function_definition [19720,20113]" at="0"/>
  <insert-node tree="identifier: curveMean [19729,19738]" parent="function_definition [19720,20113]" at="1"/>
  <insert-node tree="(: ( [19738,19739]" parent="function_definition [19720,20113]" at="2"/>
  <move-tree tree="parameter [66509,66528]" parent="function_definition [19720,20113]" at="3"/>
  <insert-node tree=",: , [19774,19775]" parent="function_definition [19720,20113]" at="4"/>
  <insert-tree tree="parameter [19785,19810]" parent="function_definition [19720,20113]" at="5"/>
  <insert-node tree="): ) [19816,19817]" parent="function_definition [19720,20113]" at="6"/>
  <move-tree tree="visibility [66492,66499]" parent="function_definition [19720,20113]" at="7"/>
  <move-tree tree="state_mutability [40747,40751]" parent="function_definition [19720,20113]" at="8"/>
  <insert-tree tree="return_type_definition [19831,19860]" parent="function_definition [19720,20113]" at="9"/>
  <insert-tree tree="function_body [19861,20113]" parent="function_definition [19720,20113]" at="10"/>
  <update-node tree="identifier: mint [51796,51800]" label="mintToAccount"/>
  <move-tree tree="visibility [12463,12471]" parent="function_definition [54557,54786]" at="7"/>
  <insert-node tree="function: function [54794,54802]" parent="function_definition [54794,55073]" at="0"/>
  <insert-node tree="identifier: burnFromAccount [54803,54818]" parent="function_definition [54794,55073]" at="1"/>
  <insert-node tree="(: ( [54818,54819]" parent="function_definition [54794,55073]" at="2"/>
  <move-tree tree="parameter [28098,28113]" parent="function_definition [54794,55073]" at="3"/>
  <insert-node tree=",: , [54834,54835]" parent="function_definition [54794,55073]" at="4"/>
  <move-tree tree="parameter [51995,52009]" parent="function_definition [54794,55073]" at="5"/>
  <insert-node tree="): ) [54850,54851]" parent="function_definition [54794,55073]" at="6"/>
  <move-tree tree="visibility [28436,28444]" parent="function_definition [54794,55073]" at="7"/>
  <move-tree tree="function_body [49078,49212]" parent="function_definition [54794,55073]" at="8"/>
  <update-node tree="identifier: burnFrom [24879,24887]" label="redeemToAccount"/>
  <move-tree tree="parameter [27980,27995]" parent="function_definition [55081,55317]" at="3"/>
  <move-tree tree="parameter [74673,74687]" parent="function_definition [55081,55317]" at="6"/>
  <move-tree tree="visibility [74689,74697]" parent="function_definition [55081,55317]" at="8"/>
  <update-node tree="identifier: _burn [22813,22818]" label="burnRedeemable"/>
  <move-tree tree="expression_statement [22952,23042]" parent="function_body [55374,55530]" at="3"/>
  <insert-node tree="function: function [55538,55546]" parent="function_definition [55538,55706]" at="0"/>
  <insert-node tree="identifier: increaseDebt [55547,55559]" parent="function_definition [55538,55706]" at="1"/>
  <insert-node tree="(: ( [55559,55560]" parent="function_definition [55538,55706]" at="2"/>
  <move-tree tree="parameter [75207,75221]" parent="function_definition [55538,55706]" at="3"/>
  <insert-node tree="): ) [55574,55575]" parent="function_definition [55538,55706]" at="4"/>
  <move-tree tree="visibility [75223,75231]" parent="function_definition [55538,55706]" at="5"/>
  <insert-node tree="function_body [55585,55706]" parent="function_definition [55538,55706]" at="6"/>
  <insert-node tree="function: function [55714,55722]" parent="function_definition [55714,55865]" at="0"/>
  <insert-node tree="identifier: decreaseDebt [55723,55735]" parent="function_definition [55714,55865]" at="1"/>
  <insert-node tree="(: ( [55735,55736]" parent="function_definition [55714,55865]" at="2"/>
  <move-tree tree="parameter [18146,18160]" parent="function_definition [55714,55865]" at="3"/>
  <insert-node tree="): ) [55750,55751]" parent="function_definition [55714,55865]" at="4"/>
  <move-tree tree="visibility [21482,21490]" parent="function_definition [55714,55865]" at="5"/>
  <insert-node tree="function_body [55761,55865]" parent="function_definition [55714,55865]" at="6"/>
  <insert-node tree="function: function [55873,55881]" parent="function_definition [55873,57615]" at="0"/>
  <insert-node tree="identifier: increaseSupply [55882,55896]" parent="function_definition [55873,57615]" at="1"/>
  <insert-node tree="(: ( [55896,55897]" parent="function_definition [55873,57615]" at="2"/>
  <move-tree tree="parameter [49320,49336]" parent="function_definition [55873,57615]" at="3"/>
  <insert-node tree="): ) [55914,55915]" parent="function_definition [55873,57615]" at="4"/>
  <move-tree tree="visibility [77719,77727]" parent="function_definition [55873,57615]" at="5"/>
  <move-tree tree="return_type_definition [77728,77754]" parent="function_definition [55873,57615]" at="6"/>
  <insert-node tree="function_body [55961,57615]" parent="function_definition [55873,57615]" at="7"/>
  <insert-node tree="function: function [57623,57631]" parent="function_definition [57623,57979]" at="0"/>
  <insert-node tree="identifier: resetDebt [57632,57641]" parent="function_definition [57623,57979]" at="1"/>
  <insert-node tree="(: ( [57641,57642]" parent="function_definition [57623,57979]" at="2"/>
  <insert-tree tree="parameter [57642,57677]" parent="function_definition [57623,57979]" at="3"/>
  <insert-node tree="): ) [57677,57678]" parent="function_definition [57623,57979]" at="4"/>
  <move-tree tree="visibility [28303,28311]" parent="function_definition [57623,57979]" at="5"/>
  <insert-node tree="function_body [57688,57979]" parent="function_definition [57623,57979]" at="6"/>
  <update-node tree="identifier: totalRewarded [71961,71974]" label="balanceCheck"/>
  <move-tree tree="visibility [83806,83813]" parent="function_definition [57987,58225]" at="4"/>
  <update-node tree="identifier: provide [82567,82574]" label="mintToBonded"/>
  <move-tree tree="parameter [76559,76573]" parent="function_definition [58233,58669]" at="3"/>
  <move-tree tree="visibility [27718,27725]" parent="function_definition [58233,58669]" at="6"/>
  <update-node tree="identifier: balanceCheck [83791,83803]" label="mintToDAO"/>
  <move-tree tree="parameter [22196,22210]" parent="function_definition [58677,58860]" at="3"/>
  <move-tree tree="visibility [25145,25152]" parent="function_definition [58677,58860]" at="5"/>
  <insert-node tree="function: function [58868,58876]" parent="function_definition [58868,59002]" at="0"/>
  <insert-node tree="identifier: mintToPool [58877,58887]" parent="function_definition [58868,59002]" at="1"/>
  <insert-node tree="(: ( [58887,58888]" parent="function_definition [58868,59002]" at="2"/>
  <move-tree tree="parameter [18645,18659]" parent="function_definition [58868,59002]" at="3"/>
  <insert-node tree="): ) [58902,58903]" parent="function_definition [58868,59002]" at="4"/>
  <move-tree tree="visibility [25117,25124]" parent="function_definition [58868,59002]" at="5"/>
  <insert-node tree="function_body [58912,59002]" parent="function_definition [58868,59002]" at="6"/>
  <insert-node tree="function: function [59010,59018]" parent="function_definition [59010,59185]" at="0"/>
  <insert-node tree="identifier: mintToRedeemable [59019,59035]" parent="function_definition [59010,59185]" at="1"/>
  <insert-node tree="(: ( [59035,59036]" parent="function_definition [59010,59185]" at="2"/>
  <move-tree tree="parameter [19292,19306]" parent="function_definition [59010,59185]" at="3"/>
  <insert-node tree="): ) [59050,59051]" parent="function_definition [59010,59185]" at="4"/>
  <move-tree tree="visibility [17434,17441]" parent="function_definition [59010,59185]" at="5"/>
  <insert-node tree="function_body [59060,59185]" parent="function_definition [59010,59185]" at="6"/>
  <update-node tree="identifier: Context [17347,17354]" label="Comptroller"/>
  <update-node tree="identifier: IERC20 [17356,17362]" label="Curve"/>
  <insert-node tree="event: event [59904,59909]" parent="event_definition [59904,60035]" at="0"/>
  <insert-node tree="identifier: CouponExpiration [59910,59926]" parent="event_definition [59904,60035]" at="1"/>
  <insert-node tree="(: ( [59926,59927]" parent="event_definition [59904,60035]" at="2"/>
  <insert-node tree="event_paramater [59927,59948]" parent="event_definition [59904,60035]" at="3"/>
  <insert-node tree=",: , [59948,59949]" parent="event_definition [59904,60035]" at="4"/>
  <insert-tree tree="event_paramater [59950,59972]" parent="event_definition [59904,60035]" at="5"/>
  <insert-node tree=",: , [59972,59973]" parent="event_definition [59904,60035]" at="6"/>
  <insert-tree tree="event_paramater [59974,59996]" parent="event_definition [59904,60035]" at="7"/>
  <insert-node tree=",: , [59996,59997]" parent="event_definition [59904,60035]" at="8"/>
  <insert-tree tree="event_paramater [59998,60014]" parent="event_definition [59904,60035]" at="9"/>
  <insert-node tree=",: , [60014,60015]" parent="event_definition [59904,60035]" at="10"/>
  <insert-tree tree="event_paramater [60016,60033]" parent="event_definition [59904,60035]" at="11"/>
  <insert-node tree="): ) [60033,60034]" parent="event_definition [59904,60035]" at="12"/>
  <insert-node tree="event: event [60041,60046]" parent="event_definition [60041,60154]" at="0"/>
  <insert-node tree="identifier: CouponPurchase [60047,60061]" parent="event_definition [60041,60154]" at="1"/>
  <insert-node tree="(: ( [60061,60062]" parent="event_definition [60041,60154]" at="2"/>
  <move-tree tree="event_paramater [27674,27697]" parent="event_definition [60041,60154]" at="3"/>
  <insert-node tree=",: , [60085,60086]" parent="event_definition [60041,60154]" at="4"/>
  <insert-tree tree="event_paramater [60087,60108]" parent="event_definition [60041,60154]" at="5"/>
  <insert-node tree=",: , [60108,60109]" parent="event_definition [60041,60154]" at="6"/>
  <insert-tree tree="event_paramater [60110,60130]" parent="event_definition [60041,60154]" at="7"/>
  <insert-node tree=",: , [60130,60131]" parent="event_definition [60041,60154]" at="8"/>
  <insert-tree tree="event_paramater [60132,60152]" parent="event_definition [60041,60154]" at="9"/>
  <insert-node tree="): ) [60152,60153]" parent="event_definition [60041,60154]" at="10"/>
  <update-node tree="identifier: MinterAdded [27611,27622]" label="CouponRedemption"/>
  <insert-node tree=",: , [60206,60207]" parent="event_definition [60160,60253]" at="4"/>
  <insert-tree tree="event_paramater [60208,60229]" parent="event_definition [60160,60253]" at="5"/>
  <insert-node tree=",: , [60229,60230]" parent="event_definition [60160,60253]" at="6"/>
  <insert-tree tree="event_paramater [60231,60251]" parent="event_definition [60160,60253]" at="7"/>
  <update-node tree="identifier: PairCreated [52419,52430]" label="CouponTransfer"/>
  <move-tree tree="event_paramater [80076,80089]" parent="event_definition [60259,60360]" at="10"/>
  <insert-node tree="event: event [60366,60371]" parent="event_definition [60366,60450]" at="0"/>
  <insert-node tree="identifier: CouponApproval [60372,60386]" parent="event_definition [60366,60450]" at="1"/>
  <insert-node tree="(: ( [60386,60387]" parent="event_definition [60366,60450]" at="2"/>
  <insert-node tree="event_paramater [60387,60408]" parent="event_definition [60366,60450]" at="3"/>
  <insert-node tree=",: , [60408,60409]" parent="event_definition [60366,60450]" at="4"/>
  <move-tree tree="event_paramater [52479,52491]" parent="event_definition [60366,60450]" at="5"/>
  <insert-node tree=",: , [60433,60434]" parent="event_definition [60366,60450]" at="6"/>
  <move-tree tree="event_paramater [79848,79861]" parent="event_definition [60366,60450]" at="7"/>
  <insert-node tree="): ) [60448,60449]" parent="event_definition [60366,60450]" at="8"/>
  <update-node tree="identifier: unfreeze [76807,76815]" label="step"/>
  <insert-node tree="function: function [60882,60890]" parent="function_definition [60882,61575]" at="0"/>
  <insert-node tree="identifier: expireCouponsForEpoch [60891,60912]" parent="function_definition [60882,61575]" at="1"/>
  <insert-node tree="(: ( [60912,60913]" parent="function_definition [60882,61575]" at="2"/>
  <insert-tree tree="parameter [60913,60926]" parent="function_definition [60882,61575]" at="3"/>
  <insert-node tree="): ) [60926,60927]" parent="function_definition [60882,61575]" at="4"/>
  <move-tree tree="visibility [48921,48928]" parent="function_definition [60882,61575]" at="5"/>
  <insert-node tree="function_body [60936,61575]" parent="function_definition [60882,61575]" at="6"/>
  <update-node tree="identifier: reserve [68196,68203]" label="couponPremium"/>
  <move-tree tree="parameter [76007,76021]" parent="function_definition [61583,61745]" at="3"/>
  <move-tree tree="visibility [52011,52017]" parent="function_definition [61583,61745]" at="5"/>
  <insert-node tree="function: function [61753,61761]" parent="function_definition [61753,62441]" at="0"/>
  <insert-node tree="identifier: purchaseCoupons [61762,61777]" parent="function_definition [61753,62441]" at="1"/>
  <insert-node tree="(: ( [61777,61778]" parent="function_definition [61753,62441]" at="2"/>
  <move-tree tree="parameter [77697,77717]" parent="function_definition [61753,62441]" at="3"/>
  <insert-node tree="): ) [61798,61799]" parent="function_definition [61753,62441]" at="4"/>
  <move-tree tree="visibility [49402,49410]" parent="function_definition [61753,62441]" at="5"/>
  <move-tree tree="return_type_definition [67727,67744]" parent="function_definition [61753,62441]" at="6"/>
  <insert-node tree="function_body [61827,62441]" parent="function_definition [61753,62441]" at="7"/>
  <insert-node tree="function: function [62449,62457]" parent="function_definition [62449,62851]" at="0"/>
  <insert-node tree="identifier: redeemCoupons [62458,62471]" parent="function_definition [62449,62851]" at="1"/>
  <insert-node tree="(: ( [62471,62472]" parent="function_definition [62449,62851]" at="2"/>
  <insert-tree tree="parameter [62472,62491]" parent="function_definition [62449,62851]" at="3"/>
  <insert-node tree=",: , [62491,62492]" parent="function_definition [62449,62851]" at="4"/>
  <insert-tree tree="parameter [62493,62513]" parent="function_definition [62449,62851]" at="5"/>
  <insert-node tree="): ) [62513,62514]" parent="function_definition [62449,62851]" at="6"/>
  <move-tree tree="visibility [83616,83624]" parent="function_definition [62449,62851]" at="7"/>
  <insert-node tree="function_body [62524,62851]" parent="function_definition [62449,62851]" at="8"/>
  <update-node tree="identifier: _approve [23601,23609]" label="approveCoupons"/>
  <move-tree tree="visibility [68206,68214]" parent="function_definition [62859,63145]" at="9"/>
  <update-node tree="identifier: _transfer [21421,21430]" label="transferCoupons"/>
  <move-tree tree="parameter [40669,40684]" parent="function_definition [63153,63881]" at="7"/>
  <insert-node tree=",: , [63226,63227]" parent="function_definition [63153,63881]" at="8"/>
  <move-tree tree="visibility [83731,83739]" parent="function_definition [63153,63881]" at="11"/>
  <update-node tree="identifier: IOracle [64337,64344]" label="Comptroller"/>
  <insert-node tree="event: event [64584,64589]" parent="event_definition [64584,64703]" at="0"/>
  <insert-node tree="identifier: SupplyIncrease [64590,64604]" parent="event_definition [64584,64703]" at="1"/>
  <insert-node tree="(: ( [64604,64605]" parent="event_definition [64584,64703]" at="2"/>
  <insert-node tree="event_paramater [64605,64626]" parent="event_definition [64584,64703]" at="3"/>
  <insert-node tree=",: , [64626,64627]" parent="event_definition [64584,64703]" at="4"/>
  <insert-node tree="event_paramater [64628,64641]" parent="event_definition [64584,64703]" at="5"/>
  <insert-node tree=",: , [64641,64642]" parent="event_definition [64584,64703]" at="6"/>
  <insert-node tree="event_paramater [64643,64664]" parent="event_definition [64584,64703]" at="7"/>
  <insert-node tree=",: , [64664,64665]" parent="event_definition [64584,64703]" at="8"/>
  <insert-tree tree="event_paramater [64666,64682]" parent="event_definition [64584,64703]" at="9"/>
  <insert-node tree=",: , [64682,64683]" parent="event_definition [64584,64703]" at="10"/>
  <insert-tree tree="event_paramater [64684,64701]" parent="event_definition [64584,64703]" at="11"/>
  <insert-node tree="): ) [64701,64702]" parent="event_definition [64584,64703]" at="12"/>
  <insert-node tree="event: event [64709,64714]" parent="event_definition [64709,64785]" at="0"/>
  <insert-node tree="identifier: SupplyDecrease [64715,64729]" parent="event_definition [64709,64785]" at="1"/>
  <insert-node tree="(: ( [64729,64730]" parent="event_definition [64709,64785]" at="2"/>
  <insert-node tree="event_paramater [64730,64751]" parent="event_definition [64709,64785]" at="3"/>
  <insert-node tree=",: , [64751,64752]" parent="event_definition [64709,64785]" at="4"/>
  <insert-node tree="event_paramater [64753,64766]" parent="event_definition [64709,64785]" at="5"/>
  <insert-node tree=",: , [64766,64767]" parent="event_definition [64709,64785]" at="6"/>
  <insert-node tree="event_paramater [64768,64783]" parent="event_definition [64709,64785]" at="7"/>
  <insert-node tree="): ) [64783,64784]" parent="event_definition [64709,64785]" at="8"/>
  <insert-node tree="event: event [64791,64796]" parent="event_definition [64791,64834]" at="0"/>
  <insert-node tree="identifier: SupplyNeutral [64797,64810]" parent="event_definition [64791,64834]" at="1"/>
  <insert-node tree="(: ( [64810,64811]" parent="event_definition [64791,64834]" at="2"/>
  <insert-node tree="event_paramater [64811,64832]" parent="event_definition [64791,64834]" at="3"/>
  <insert-node tree="): ) [64832,64833]" parent="event_definition [64791,64834]" at="4"/>
  <insert-node tree="function: function [64842,64850]" parent="function_definition [64842,65228]" at="0"/>
  <insert-node tree="identifier: step [64851,64855]" parent="function_definition [64842,65228]" at="1"/>
  <insert-node tree="(: ( [64855,64856]" parent="function_definition [64842,65228]" at="2"/>
  <insert-node tree="): ) [64856,64857]" parent="function_definition [64842,65228]" at="3"/>
  <move-tree tree="visibility [74530,74538]" parent="function_definition [64842,65228]" at="4"/>
  <insert-node tree="function_body [64867,65228]" parent="function_definition [64842,65228]" at="5"/>
  <insert-node tree="function: function [65236,65244]" parent="function_definition [65236,65545]" at="0"/>
  <insert-node tree="identifier: shrinkSupply [65245,65257]" parent="function_definition [65236,65545]" at="1"/>
  <insert-node tree="(: ( [65257,65258]" parent="function_definition [65236,65545]" at="2"/>
  <insert-tree tree="parameter [65258,65283]" parent="function_definition [65236,65545]" at="3"/>
  <insert-node tree="): ) [65283,65284]" parent="function_definition [65236,65545]" at="4"/>
  <move-tree tree="visibility [64446,64453]" parent="function_definition [65236,65545]" at="5"/>
  <insert-node tree="function_body [65293,65545]" parent="function_definition [65236,65545]" at="6"/>
  <update-node tree="identifier: updatePrice [67076,67087]" label="growSupply"/>
  <insert-tree tree="parameter [65573,65598]" parent="function_definition [65553,65977]" at="3"/>
  <move-tree tree="visibility [25090,25097]" parent="function_definition [65553,65977]" at="5"/>
  <insert-node tree="function: function [65985,65993]" parent="function_definition [65985,66247]" at="0"/>
  <insert-node tree="identifier: limit [65994,65999]" parent="function_definition [65985,66247]" at="1"/>
  <insert-node tree="(: ( [65999,66000]" parent="function_definition [65985,66247]" at="2"/>
  <insert-tree tree="parameter [66000,66025]" parent="function_definition [65985,66247]" at="3"/>
  <insert-node tree="): ) [66025,66026]" parent="function_definition [65985,66247]" at="4"/>
  <move-tree tree="visibility [67719,67726]" parent="function_definition [65985,66247]" at="5"/>
  <move-tree tree="state_mutability [63714,63718]" parent="function_definition [65985,66247]" at="6"/>
  <insert-tree tree="return_type_definition [66040,66069]" parent="function_definition [65985,66247]" at="7"/>
  <insert-tree tree="function_body [66070,66247]" parent="function_definition [65985,66247]" at="8"/>
  <update-node tree="identifier: capture [65609,65616]" label="oracleCapture"/>
  <move-tree tree="visibility [67090,67097]" parent="function_definition [66255,66607]" at="4"/>
  <move-tree tree="return_type_definition [67098,67127]" parent="function_definition [66255,66607]" at="5"/>
  <update-node tree="identifier: PoolSetters [79364,79375]" label="Setters"/>
  <update-node tree="identifier: Unbond [79947,79953]" label="Bond"/>
  <insert-node tree="event_paramater [68952,68975]" parent="event_definition [68886,68977]" at="9"/>
  <update-node tree="identifier: Bond [79875,79879]" label="Unbond"/>
  <insert-node tree=",: , [69049,69050]" parent="event_definition [68983,69076]" at="8"/>
  <insert-node tree="event_paramater [69051,69074]" parent="event_definition [68983,69076]" at="9"/>
  <insert-node tree="function: function [69084,69092]" parent="function_definition [69084,69303]" at="0"/>
  <insert-node tree="identifier: step [69093,69097]" parent="function_definition [69084,69303]" at="1"/>
  <insert-node tree="(: ( [69097,69098]" parent="function_definition [69084,69303]" at="2"/>
  <insert-node tree="): ) [69098,69099]" parent="function_definition [69084,69303]" at="3"/>
  <move-tree tree="visibility [67999,68007]" parent="function_definition [69084,69303]" at="4"/>
  <insert-node tree="function_body [69109,69303]" parent="function_definition [69084,69303]" at="5"/>
  <insert-tree tree="modifier_invocation [69605,69635]" parent="function_definition [69563,69830]" at="6"/>
  <move-tree tree="parameter [49296,49309]" parent="function_definition [70371,70855]" at="3"/>
  <move-tree tree="modifier_invocation [80457,80479]" parent="function_definition [70371,70855]" at="7"/>
  <insert-node tree="function: function [70863,70871]" parent="function_definition [70863,71337]" at="0"/>
  <insert-node tree="identifier: unbondUnderlying [70872,70888]" parent="function_definition [70863,71337]" at="1"/>
  <insert-node tree="(: ( [70888,70889]" parent="function_definition [70863,71337]" at="2"/>
  <move-tree tree="parameter [81690,81703]" parent="function_definition [70863,71337]" at="3"/>
  <insert-node tree="): ) [70902,70903]" parent="function_definition [70863,71337]" at="4"/>
  <move-tree tree="visibility [68107,68115]" parent="function_definition [70863,71337]" at="5"/>
  <move-tree tree="modifier_invocation [80744,80766]" parent="function_definition [70863,71337]" at="6"/>
  <insert-node tree="function_body [70943,71337]" parent="function_definition [70863,71337]" at="7"/>
  <insert-node tree="event: event [75947,75952]" parent="event_definition [75947,76053]" at="0"/>
  <insert-node tree="identifier: Proposal [75953,75961]" parent="event_definition [75947,76053]" at="1"/>
  <insert-node tree="(: ( [75961,75962]" parent="event_definition [75947,76053]" at="2"/>
  <insert-node tree="event_paramater [75962,75987]" parent="event_definition [75947,76053]" at="3"/>
  <insert-node tree=",: , [75987,75988]" parent="event_definition [75947,76053]" at="4"/>
  <insert-tree tree="event_paramater [75989,76012]" parent="event_definition [75947,76053]" at="5"/>
  <insert-node tree=",: , [76012,76013]" parent="event_definition [75947,76053]" at="6"/>
  <insert-node tree="event_paramater [76014,76035]" parent="event_definition [75947,76053]" at="7"/>
  <insert-node tree=",: , [76035,76036]" parent="event_definition [75947,76053]" at="8"/>
  <move-tree tree="event_paramater [80109,80125]" parent="event_definition [75947,76053]" at="9"/>
  <insert-node tree="): ) [76051,76052]" parent="event_definition [75947,76053]" at="10"/>
  <insert-node tree="event: event [76059,76064]" parent="event_definition [76059,76159]" at="0"/>
  <insert-node tree="identifier: Vote [76065,76069]" parent="event_definition [76059,76159]" at="1"/>
  <insert-node tree="(: ( [76069,76070]" parent="event_definition [76059,76159]" at="2"/>
  <insert-tree tree="event_paramater [76070,76093]" parent="event_definition [76059,76159]" at="3"/>
  <insert-node tree=",: , [76093,76094]" parent="event_definition [76059,76159]" at="4"/>
  <insert-node tree="event_paramater [76095,76120]" parent="event_definition [76059,76159]" at="5"/>
  <insert-node tree=",: , [76120,76121]" parent="event_definition [76059,76159]" at="6"/>
  <insert-tree tree="event_paramater [76122,76141]" parent="event_definition [76059,76159]" at="7"/>
  <insert-node tree=",: , [76141,76142]" parent="event_definition [76059,76159]" at="8"/>
  <move-tree tree="event_paramater [80009,80029]" parent="event_definition [76059,76159]" at="9"/>
  <insert-node tree="): ) [76157,76158]" parent="event_definition [76059,76159]" at="10"/>
  <update-node tree="identifier: Provide [80043,80050]" label="Commit"/>
  <insert-node tree="event_paramater [76203,76228]" parent="event_definition [76165,76230]" at="5"/>
  <insert-node tree="function: function [76238,76246]" parent="function_definition [76238,77859]" at="0"/>
  <insert-node tree="identifier: vote [76247,76251]" parent="function_definition [76238,77859]" at="1"/>
  <insert-node tree="(: ( [76251,76252]" parent="function_definition [76238,77859]" at="2"/>
  <move-tree tree="parameter [63687,63703]" parent="function_definition [76238,77859]" at="3"/>
  <insert-node tree=",: , [76269,76270]" parent="function_definition [76238,77859]" at="4"/>
  <insert-tree tree="parameter [76271,76290]" parent="function_definition [76238,77859]" at="5"/>
  <insert-node tree="): ) [76290,76291]" parent="function_definition [76238,77859]" at="6"/>
  <move-tree tree="visibility [63705,63713]" parent="function_definition [76238,77859]" at="7"/>
  <move-tree tree="modifier_invocation [80176,80198]" parent="function_definition [76238,77859]" at="8"/>
  <insert-node tree="function_body [76332,77859]" parent="function_definition [76238,77859]" at="9"/>
  <insert-node tree="function: function [77867,77875]" parent="function_definition [77867,78670]" at="0"/>
  <insert-node tree="identifier: commit [77876,77882]" parent="function_definition [77867,78670]" at="1"/>
  <insert-node tree="(: ( [77882,77883]" parent="function_definition [77867,78670]" at="2"/>
  <move-tree tree="parameter [78368,78382]" parent="function_definition [77867,78670]" at="3"/>
  <insert-node tree="): ) [77900,77901]" parent="function_definition [77867,78670]" at="4"/>
  <move-tree tree="visibility [82590,82598]" parent="function_definition [77867,78670]" at="5"/>
  <insert-node tree="function_body [77911,78670]" parent="function_definition [77867,78670]" at="6"/>
  <insert-node tree="function: function [78678,78686]" parent="function_definition [78678,79461]" at="0"/>
  <insert-node tree="identifier: emergencyCommit [78687,78702]" parent="function_definition [78678,79461]" at="1"/>
  <insert-node tree="(: ( [78702,78703]" parent="function_definition [78678,79461]" at="2"/>
  <move-tree tree="parameter [78384,78398]" parent="function_definition [78678,79461]" at="3"/>
  <insert-node tree="): ) [78720,78721]" parent="function_definition [78678,79461]" at="4"/>
  <move-tree tree="visibility [80735,80743]" parent="function_definition [78678,79461]" at="5"/>
  <insert-node tree="function_body [78731,79461]" parent="function_definition [78678,79461]" at="6"/>
  <insert-node tree="function: function [79469,79477]" parent="function_definition [79469,79768]" at="0"/>
  <insert-node tree="identifier: canPropose [79478,79488]" parent="function_definition [79469,79768]" at="1"/>
  <insert-node tree="(: ( [79488,79489]" parent="function_definition [79469,79768]" at="2"/>
  <move-tree tree="parameter [72249,72264]" parent="function_definition [79469,79768]" at="3"/>
  <insert-node tree="): ) [79504,79505]" parent="function_definition [79469,79768]" at="4"/>
  <move-tree tree="visibility [65885,65892]" parent="function_definition [79469,79768]" at="5"/>
  <move-tree tree="state_mutability [72121,72125]" parent="function_definition [79469,79768]" at="6"/>
  <move-tree tree="return_type_definition [72126,72140]" parent="function_definition [79469,79768]" at="7"/>
  <insert-node tree="function_body [79534,79768]" parent="function_definition [79469,79768]" at="8"/>
  <insert-node tree="event: event [80469,80474]" parent="event_definition [80469,80540]" at="0"/>
  <insert-node tree="identifier: Advance [80475,80482]" parent="event_definition [80469,80540]" at="1"/>
  <insert-node tree="(: ( [80482,80483]" parent="event_definition [80469,80540]" at="2"/>
  <insert-node tree="event_paramater [80483,80504]" parent="event_definition [80469,80540]" at="3"/>
  <insert-node tree=",: , [80504,80505]" parent="event_definition [80469,80540]" at="4"/>
  <insert-node tree="event_paramater [80506,80519]" parent="event_definition [80469,80540]" at="5"/>
  <insert-node tree=",: , [80519,80520]" parent="event_definition [80469,80540]" at="6"/>
  <insert-node tree="event_paramater [80521,80538]" parent="event_definition [80469,80540]" at="7"/>
  <insert-node tree="): ) [80538,80539]" parent="event_definition [80469,80540]" at="8"/>
  <update-node tree="identifier: Claim [79817,79822]" label="Incentivization"/>
  <move-tree tree="event_paramater [80091,80107]" parent="event_definition [80546,80609]" at="5"/>
  <insert-node tree="function: function [80617,80625]" parent="function_definition [80617,80666]" at="0"/>
  <insert-node tree="identifier: initialize [80626,80636]" parent="function_definition [80617,80666]" at="1"/>
  <insert-node tree="(: ( [80636,80637]" parent="function_definition [80617,80666]" at="2"/>
  <insert-node tree="): ) [80637,80638]" parent="function_definition [80617,80666]" at="3"/>
  <move-tree tree="modifier_invocation [106639,106650]" parent="function_definition [80617,80666]" at="4"/>
  <move-tree tree="visibility [71227,71233]" parent="function_definition [80617,80666]" at="5"/>
  <move-tree tree="function_body [51776,51779]" parent="function_definition [80617,80666]" at="6"/>
  <insert-node tree="function: function [80674,80682]" parent="function_definition [80674,80864]" at="0"/>
  <insert-node tree="identifier: advance [80683,80690]" parent="function_definition [80674,80864]" at="1"/>
  <insert-node tree="(: ( [80690,80691]" parent="function_definition [80674,80864]" at="2"/>
  <insert-node tree="): ) [80691,80692]" parent="function_definition [80674,80864]" at="3"/>
  <move-tree tree="visibility [69053,69061]" parent="function_definition [80674,80864]" at="4"/>
  <insert-tree tree="modifier_invocation [80702,80714]" parent="function_definition [80674,80864]" at="5"/>
  <insert-node tree="function_body [80715,80864]" parent="function_definition [80674,80864]" at="6"/>
  <insert-node tree="modifier: modifier [80872,80880]" parent="modifier_definition [80872,81119]" at="0"/>
  <insert-node tree="identifier: incentivized [80881,80893]" parent="modifier_definition [80872,81119]" at="1"/>
  <insert-node tree="function_body [80894,81119]" parent="modifier_definition [80872,81119]" at="2"/>
  <move-tree tree="type_name [17425,17432]" parent="parameter [17888,17907]" at="0"/>
  <insert-node tree="identifier: totalSupply [17896,17907]" parent="parameter [17888,17907]" at="1"/>
  <move-tree tree="type_name [17500,17507]" parent="parameter [17918,17935]" at="0"/>
  <insert-node tree="identifier: totalDebt [17926,17935]" parent="parameter [17918,17935]" at="1"/>
  <insert-node tree="{: { [18000,18001]" parent="function_body [18000,18098]" at="0"/>
  <insert-node tree="return_statement [18011,18091]" parent="function_body [18000,18098]" at="1"/>
  <insert-node tree="}: } [18097,18098]" parent="function_body [18000,18098]" at="2"/>
  <update-node tree="identifier: subtractedValue [20713,20728]" label="totalSupply"/>
  <update-node tree="identifier: addedValue [20000,20010]" label="totalDebt"/>
  <insert-node tree="{: { [18265,18266]" parent="function_body [18265,19409]" at="0"/>
  <insert-tree tree="variable_declaration_statement [18276,18346]" parent="function_body [18265,19409]" at="1"/>
  <insert-tree tree="variable_declaration_statement [18356,18426]" parent="function_body [18265,19409]" at="2"/>
  <insert-node tree="variable_declaration_statement [18438,18487]" parent="function_body [18265,19409]" at="3"/>
  <insert-node tree="variable_declaration_statement [18497,18542]" parent="function_body [18265,19409]" at="4"/>
  <insert-tree tree="variable_declaration_statement [18552,18631]" parent="function_body [18265,19409]" at="5"/>
  <insert-tree tree="if_statement [18643,19348]" parent="function_body [18265,19409]" at="6"/>
  <insert-tree tree="return_statement [19360,19402]" parent="function_body [18265,19409]" at="7"/>
  <insert-node tree="}: } [19408,19409]" parent="function_body [18265,19409]" at="8"/>
  <insert-node tree="identifier: debtRatio [19477,19486]" parent="parameter [19457,19486]" at="2"/>
  <insert-node tree="identifier: lower [19769,19774]" parent="parameter [19749,19774]" at="2"/>
  <insert-node tree="if_statement [54674,54752]" parent="function_body [54622,54786]" at="2"/>
  <insert-tree tree="expression_statement [54764,54779]" parent="function_body [54622,54786]" at="3"/>
  <insert-node tree="expression_statement [54936,54958]" parent="function_body [54861,55073]" at="2"/>
  <move-tree tree="expression_statement [50056,50153]" parent="function_body [54861,55073]" at="3"/>
  <insert-tree tree="expression_statement [55051,55066]" parent="function_body [54861,55073]" at="4"/>
  <insert-node tree="expression_statement [55204,55283]" parent="function_body [55148,55317]" at="2"/>
  <move-tree tree="expression_statement [82455,82470]" parent="function_body [55148,55317]" at="3"/>
  <move-tree tree="expression_statement [81587,81602]" parent="function_body [55374,55530]" at="4"/>
  <insert-node tree="{: { [55585,55586]" parent="function_body [55585,55706]" at="0"/>
  <insert-node tree="expression_statement [55596,55623]" parent="function_body [55585,55706]" at="1"/>
  <insert-tree tree="expression_statement [55633,55672]" parent="function_body [55585,55706]" at="2"/>
  <move-tree tree="expression_statement [80630,80645]" parent="function_body [55585,55706]" at="3"/>
  <insert-node tree="}: } [55705,55706]" parent="function_body [55585,55706]" at="4"/>
  <insert-node tree="{: { [55761,55762]" parent="function_body [55761,55865]" at="0"/>
  <move-tree tree="expression_statement [21667,21759]" parent="function_body [55761,55865]" at="1"/>
  <move-tree tree="expression_statement [80341,80356]" parent="function_body [55761,55865]" at="2"/>
  <insert-node tree="}: } [55864,55865]" parent="function_body [55761,55865]" at="3"/>
  <update-node tree="identifier: deadline [49328,49336]" label="newSupply"/>
  <insert-node tree=",: , [55950,55951]" parent="return_type_definition [55925,55960]" at="5"/>
  <insert-tree tree="parameter [55952,55959]" parent="return_type_definition [55925,55960]" at="6"/>
  <insert-node tree="{: { [55961,55962]" parent="function_body [55961,57615]" at="0"/>
  <insert-tree tree="variable_declaration_statement [55972,56046]" parent="function_body [55961,57615]" at="1"/>
  <insert-node tree="comment: // 1. True up redeemable pool [56058,56087]" parent="function_body [55961,57615]" at="2"/>
  <insert-tree tree="variable_declaration_statement [56097,56141]" parent="function_body [55961,57615]" at="3"/>
  <insert-tree tree="variable_declaration_statement [56151,56189]" parent="function_body [55961,57615]" at="4"/>
  <insert-tree tree="if_statement [56199,57059]" parent="function_body [55961,57615]" at="5"/>
  <insert-node tree="comment: // 2. Eliminate debt [57069,57089]" parent="function_body [55961,57615]" at="6"/>
  <insert-node tree="variable_declaration_statement [57099,57131]" parent="function_body [55961,57615]" at="7"/>
  <insert-tree tree="if_statement [57141,57349]" parent="function_body [55961,57615]" at="8"/>
  <insert-node tree="comment: // 3. Payout to bonded [57361,57383]" parent="function_body [55961,57615]" at="9"/>
  <insert-tree tree="if_statement [57393,57457]" parent="function_body [55961,57615]" at="10"/>
  <insert-tree tree="if_statement [57467,57536]" parent="function_body [55961,57615]" at="11"/>
  <insert-tree tree="return_statement [57548,57608]" parent="function_body [55961,57615]" at="12"/>
  <insert-node tree="}: } [57614,57615]" parent="function_body [55961,57615]" at="13"/>
  <insert-node tree="{: { [57688,57689]" parent="function_body [57688,57979]" at="0"/>
  <insert-node tree="variable_declaration_statement [57699,57776]" parent="function_body [57688,57979]" at="1"/>
  <insert-tree tree="variable_declaration_statement [57786,57820]" parent="function_body [57688,57979]" at="2"/>
  <insert-tree tree="if_statement [57832,57972]" parent="function_body [57688,57979]" at="3"/>
  <insert-node tree="}: } [57978,57979]" parent="function_body [57688,57979]" at="4"/>
  <move-tree tree="expression_statement [83825,83996]" parent="function_body [58019,58225]" at="1"/>
  <insert-node tree="variable_declaration_statement [58417,58490]" parent="function_body [58279,58669]" at="2"/>
  <insert-node tree="variable_declaration_statement [58500,58569]" parent="function_body [58279,58669]" at="3"/>
  <insert-tree tree="expression_statement [58581,58604]" parent="function_body [58279,58669]" at="4"/>
  <insert-tree tree="expression_statement [58614,58635]" parent="function_body [58279,58669]" at="5"/>
  <insert-node tree="if_statement [58731,58853]" parent="function_body [58720,58860]" at="1"/>
  <insert-node tree="{: { [58912,58913]" parent="function_body [58912,59002]" at="0"/>
  <insert-node tree="if_statement [58923,58995]" parent="function_body [58912,59002]" at="1"/>
  <insert-node tree="}: } [59001,59002]" parent="function_body [58912,59002]" at="2"/>
  <insert-node tree="{: { [59060,59061]" parent="function_body [59060,59185]" at="0"/>
  <insert-node tree="expression_statement [59071,59108]" parent="function_body [59060,59185]" at="1"/>
  <insert-node tree="expression_statement [59118,59151]" parent="function_body [59060,59185]" at="2"/>
  <move-tree tree="expression_statement [80924,80939]" parent="function_body [59060,59185]" at="3"/>
  <insert-node tree="}: } [59184,59185]" parent="function_body [59060,59185]" at="4"/>
  <move-tree tree="type_name [49033,49040]" parent="event_paramater [59927,59948]" at="0"/>
  <insert-node tree="indexed: indexed [59935,59942]" parent="event_paramater [59927,59948]" at="1"/>
  <insert-node tree="identifier: epoch [59943,59948]" parent="event_paramater [59927,59948]" at="2"/>
  <update-node tree="identifier: token0 [52447,52453]" label="from"/>
  <update-node tree="identifier: token1 [52471,52477]" label="to"/>
  <insert-node tree="indexed: indexed [60330,60337]" parent="event_paramater [60322,60343]" at="1"/>
  <insert-node tree="identifier: epoch [60338,60343]" parent="event_paramater [60322,60343]" at="2"/>
  <move-tree tree="type_name [77572,77579]" parent="event_paramater [60387,60408]" at="0"/>
  <insert-node tree="indexed: indexed [60395,60402]" parent="event_paramater [60387,60408]" at="1"/>
  <insert-node tree="identifier: owner [60403,60408]" parent="event_paramater [60387,60408]" at="2"/>
  <insert-node tree="indexed: indexed [60418,60425]" parent="event_paramater [60410,60433]" at="1"/>
  <update-node tree="identifier: pair [52487,52491]" label="spender"/>
  <insert-node tree="comment: // Expire prior coupons [60494,60517]" parent="function_body [60483,60874]" at="1"/>
  <insert-tree tree="for_statement [60527,60666]" parent="function_body [60483,60874]" at="2"/>
  <insert-node tree="comment: // Record expiry for current epoch's coupons [60678,60722]" parent="function_body [60483,60874]" at="3"/>
  <insert-node tree="variable_declaration_statement [60732,60803]" parent="function_body [60483,60874]" at="4"/>
  <insert-node tree="{: { [60936,60937]" parent="function_body [60936,61575]" at="0"/>
  <move-tree tree="variable_declaration_statement [81088,81159]" parent="function_body [60936,61575]" at="1"/>
  <move-tree tree="variable_declaration_statement [83059,83118]" parent="function_body [60936,61575]" at="2"/>
  <insert-tree tree="expression_statement [61095,61130]" parent="function_body [60936,61575]" at="3"/>
  <insert-node tree="variable_declaration_statement [61142,61186]" parent="function_body [60936,61575]" at="4"/>
  <insert-node tree="variable_declaration_statement [61196,61234]" parent="function_body [60936,61575]" at="5"/>
  <insert-tree tree="if_statement [61244,61473]" parent="function_body [60936,61575]" at="6"/>
  <insert-tree tree="emit_statement [61485,61568]" parent="function_body [60936,61575]" at="7"/>
  <insert-node tree="}: } [61574,61575]" parent="function_body [60936,61575]" at="8"/>
  <insert-node tree="{: { [61827,61828]" parent="function_body [61827,62441]" at="0"/>
  <move-tree tree="expression_statement [23678,23747]" parent="function_body [61827,62441]" at="1"/>
  <move-tree tree="expression_statement [49812,49922]" parent="function_body [61827,62441]" at="2"/>
  <move-tree tree="variable_declaration_statement [73212,73265]" parent="function_body [61827,62441]" at="3"/>
  <insert-node tree="variable_declaration_statement [62133,62202]" parent="function_body [61827,62441]" at="4"/>
  <move-tree tree="expression_statement [82263,82344]" parent="function_body [61827,62441]" at="5"/>
  <move-tree tree="expression_statement [82199,82253]" parent="function_body [61827,62441]" at="6"/>
  <insert-tree tree="emit_statement [62335,62402]" parent="function_body [61827,62441]" at="7"/>
  <insert-tree tree="return_statement [62414,62434]" parent="function_body [61827,62441]" at="8"/>
  <insert-node tree="}: } [62440,62441]" parent="function_body [61827,62441]" at="9"/>
  <insert-node tree="{: { [62524,62525]" parent="function_body [62524,62851]" at="0"/>
  <insert-node tree="expression_statement [62535,62605]" parent="function_body [62524,62851]" at="1"/>
  <move-tree tree="expression_statement [22872,22940]" parent="function_body [62524,62851]" at="2"/>
  <move-tree tree="expression_statement [83323,83370]" parent="function_body [62524,62851]" at="3"/>
  <insert-tree tree="emit_statement [62783,62844]" parent="function_body [62524,62851]" at="4"/>
  <insert-node tree="}: } [62850,62851]" parent="function_body [62524,62851]" at="5"/>
  <update-node tree="identifier: chainId [40677,40684]" label="epoch"/>
  <insert-node tree="expression_statement [63445,63533]" parent="function_body [63253,63881]" at="3"/>
  <insert-node tree="expression_statement [63543,63595]" parent="function_body [63253,63881]" at="4"/>
  <move-tree tree="if_statement [52091,52342]" parent="function_body [63253,63881]" at="5"/>
  <move-tree tree="type_name [69798,69805]" parent="event_paramater [64605,64626]" at="0"/>
  <insert-node tree="indexed: indexed [64613,64620]" parent="event_paramater [64605,64626]" at="1"/>
  <insert-node tree="identifier: epoch [64621,64626]" parent="event_paramater [64605,64626]" at="2"/>
  <move-tree tree="type_name [69851,69858]" parent="event_paramater [64628,64641]" at="0"/>
  <insert-node tree="identifier: price [64636,64641]" parent="event_paramater [64628,64641]" at="1"/>
  <move-tree tree="type_name [70164,70171]" parent="event_paramater [64643,64664]" at="0"/>
  <insert-node tree="identifier: newRedeemable [64651,64664]" parent="event_paramater [64643,64664]" at="1"/>
  <move-tree tree="type_name [70086,70093]" parent="event_paramater [64730,64751]" at="0"/>
  <insert-node tree="indexed: indexed [64738,64745]" parent="event_paramater [64730,64751]" at="1"/>
  <insert-node tree="identifier: epoch [64746,64751]" parent="event_paramater [64730,64751]" at="2"/>
  <move-tree tree="type_name [69823,69830]" parent="event_paramater [64753,64766]" at="0"/>
  <insert-node tree="identifier: price [64761,64766]" parent="event_paramater [64753,64766]" at="1"/>
  <move-tree tree="type_name [70139,70146]" parent="event_paramater [64768,64783]" at="0"/>
  <insert-node tree="identifier: newDebt [64776,64783]" parent="event_paramater [64768,64783]" at="1"/>
  <move-tree tree="type_name [70111,70118]" parent="event_paramater [64811,64832]" at="0"/>
  <insert-node tree="indexed: indexed [64819,64826]" parent="event_paramater [64811,64832]" at="1"/>
  <insert-node tree="identifier: epoch [64827,64832]" parent="event_paramater [64811,64832]" at="2"/>
  <insert-node tree="{: { [64867,64868]" parent="function_body [64867,65228]" at="0"/>
  <move-tree tree="variable_declaration_statement [66547,66589]" parent="function_body [64867,65228]" at="1"/>
  <insert-tree tree="if_statement [64934,65067]" parent="function_body [64867,65228]" at="2"/>
  <insert-tree tree="if_statement [65079,65181]" parent="function_body [64867,65228]" at="3"/>
  <insert-tree tree="emit_statement [65193,65221]" parent="function_body [64867,65228]" at="4"/>
  <insert-node tree="}: } [65227,65228]" parent="function_body [64867,65228]" at="5"/>
  <insert-node tree="{: { [65293,65294]" parent="function_body [65293,65545]" at="0"/>
  <insert-tree tree="variable_declaration_statement [65304,65364]" parent="function_body [65293,65545]" at="1"/>
  <move-tree tree="variable_declaration_statement [72980,73051]" parent="function_body [65293,65545]" at="2"/>
  <insert-tree tree="expression_statement [65436,65458]" parent="function_body [65293,65545]" at="3"/>
  <insert-tree tree="emit_statement [65470,65521]" parent="function_body [65293,65545]" at="4"/>
  <insert-tree tree="return_statement [65531,65538]" parent="function_body [65293,65545]" at="5"/>
  <insert-node tree="}: } [65544,65545]" parent="function_body [65293,65545]" at="6"/>
  <insert-tree tree="variable_declaration_statement [65619,65719]" parent="function_body [65608,65977]" at="1"/>
  <insert-node tree="variable_declaration_statement [65729,65783]" parent="function_body [65608,65977]" at="2"/>
  <insert-tree tree="emit_statement [65892,65970]" parent="function_body [65608,65977]" at="4"/>
  <move-tree tree="variable_declaration_statement [67467,67564]" parent="function_body [66318,66607]" at="1"/>
  <insert-tree tree="if_statement [66402,66506]" parent="function_body [66318,66607]" at="2"/>
  <insert-tree tree="return_statement [66587,66600]" parent="function_body [66318,66607]" at="4"/>
  <move-tree tree="type_name [69902,69909]" parent="event_paramater [68952,68975]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [68960,68975]" parent="event_paramater [68952,68975]" at="1"/>
  <move-tree tree="type_name [69876,69883]" parent="event_paramater [69051,69074]" at="0"/>
  <insert-node tree="identifier: valueUnderlying [69059,69074]" parent="event_paramater [69051,69074]" at="1"/>
  <insert-node tree="{: { [69109,69110]" parent="function_body [69109,69303]" at="0"/>
  <insert-node tree="expression_statement [69120,69235]" parent="function_body [69109,69303]" at="1"/>
  <insert-tree tree="expression_statement [69247,69269]" parent="function_body [69109,69303]" at="2"/>
  <insert-tree tree="expression_statement [69279,69296]" parent="function_body [69109,69303]" at="3"/>
  <insert-node tree="}: } [69302,69303]" parent="function_body [69109,69303]" at="4"/>
  <update-node tree="identifier: notPaused [80199,80208]" label="onlyFrozenOrLocked"/>
  <insert-node tree="(: ( [69370,69371]" parent="modifier_invocation [69352,69382]" at="1"/>
  <insert-tree tree="call_argument [69371,69381]" parent="modifier_invocation [69352,69382]" at="2"/>
  <insert-node tree="): ) [69381,69382]" parent="modifier_invocation [69352,69382]" at="3"/>
  <move-tree tree="expression_statement [80778,80815]" parent="function_body [69636,69830]" at="1"/>
  <update-node tree="identifier: notPaused [81034,81043]" label="onlyFrozenOrFluid"/>
  <insert-node tree="(: ( [69893,69894]" parent="modifier_invocation [69876,69905]" at="1"/>
  <move-tree tree="call_argument [82610,82620]" parent="modifier_invocation [69876,69905]" at="2"/>
  <insert-node tree="): ) [69904,69905]" parent="modifier_invocation [69876,69905]" at="3"/>
  <move-tree tree="expression_statement [80491,80527]" parent="function_body [69906,70363]" at="3"/>
  <insert-node tree="expression_statement [70168,70196]" parent="function_body [69906,70363]" at="4"/>
  <insert-node tree="emit_statement [70302,70356]" parent="function_body [69906,70363]" at="6"/>
  <update-node tree="identifier: onlyFrozen [80457,80467]" label="onlyFrozenOrFluid"/>
  <insert-tree tree="expression_statement [70452,70473]" parent="function_body [70441,70855]" at="1"/>
  <move-tree tree="expression_statement [80825,80912]" parent="function_body [70441,70855]" at="4"/>
  <insert-node tree="expression_statement [70633,70700]" parent="function_body [70441,70855]" at="4"/>
  <move-tree tree="expression_statement [68310,68410]" parent="function_body [70441,70855]" at="6"/>
  <update-node tree="identifier: onlyFrozen [80744,80754]" label="onlyFrozenOrFluid"/>
  <insert-node tree="{: { [70943,70944]" parent="function_body [70943,71337]" at="0"/>
  <move-tree tree="expression_statement [81725,81746]" parent="function_body [70943,71337]" at="1"/>
  <move-tree tree="variable_declaration_statement [83222,83311]" parent="function_body [70943,71337]" at="2"/>
  <move-tree tree="expression_statement [82145,82189]" parent="function_body [70943,71337]" at="3"/>
  <insert-node tree="expression_statement [71113,71179]" parent="function_body [70943,71337]" at="4"/>
  <move-tree tree="expression_statement [57733,57785]" parent="function_body [70943,71337]" at="5"/>
  <move-tree tree="emit_statement [81614,81659]" parent="function_body [70943,71337]" at="6"/>
  <insert-node tree="}: } [71336,71337]" parent="function_body [70943,71337]" at="7"/>
  <move-tree tree="type_name [64438,64445]" parent="event_paramater [75962,75987]" at="0"/>
  <insert-node tree="indexed: indexed [75970,75977]" parent="event_paramater [75962,75987]" at="1"/>
  <insert-node tree="identifier: candidate [75978,75987]" parent="event_paramater [75962,75987]" at="2"/>
  <move-tree tree="type_name [64771,64778]" parent="event_paramater [76014,76035]" at="0"/>
  <insert-node tree="indexed: indexed [76022,76029]" parent="event_paramater [76014,76035]" at="1"/>
  <insert-node tree="identifier: start [76030,76035]" parent="event_paramater [76014,76035]" at="2"/>
  <update-node tree="identifier: newUniv2 [80117,80125]" label="period"/>
  <move-tree tree="type_name [64569,64576]" parent="event_paramater [76095,76120]" at="0"/>
  <insert-node tree="indexed: indexed [76103,76110]" parent="event_paramater [76095,76120]" at="1"/>
  <insert-node tree="identifier: candidate [76111,76120]" parent="event_paramater [76095,76120]" at="2"/>
  <update-node tree="identifier: newClaimable [80017,80029]" label="bonded"/>
  <move-tree tree="type_name [64541,64548]" parent="event_paramater [76203,76228]" at="0"/>
  <insert-node tree="indexed: indexed [76211,76218]" parent="event_paramater [76203,76228]" at="1"/>
  <insert-node tree="identifier: candidate [76219,76228]" parent="event_paramater [76203,76228]" at="2"/>
  <update-node tree="identifier: _account [63695,63703]" label="candidate"/>
  <update-node tree="identifier: onlyFrozen [80176,80186]" label="onlyFrozenOrLocked"/>
  <insert-node tree="{: { [76332,76333]" parent="function_body [76332,77859]" at="0"/>
  <move-tree tree="expression_statement [84249,84359]" parent="function_body [76332,77859]" at="1"/>
  <insert-node tree="if_statement [76470,76834]" parent="function_body [76332,77859]" at="2"/>
  <move-tree tree="expression_statement [84420,84510]" parent="function_body [76332,77859]" at="3"/>
  <move-tree tree="variable_declaration_statement [81955,82040]" parent="function_body [76332,77859]" at="4"/>
  <insert-tree tree="variable_declaration_statement [77042,77108]" parent="function_body [76332,77859]" at="5"/>
  <insert-tree tree="if_statement [77118,77177]" parent="function_body [76332,77859]" at="6"/>
  <insert-node tree="if_statement [77189,77327]" parent="function_body [76332,77859]" at="7"/>
  <insert-node tree="if_statement [77337,77478]" parent="function_body [76332,77859]" at="8"/>
  <insert-tree tree="if_statement [77488,77587]" parent="function_body [76332,77859]" at="9"/>
  <insert-tree tree="if_statement [77597,77698]" parent="function_body [76332,77859]" at="10"/>
  <move-tree tree="expression_statement [78172,78228]" parent="function_body [76332,77859]" at="11"/>
  <move-tree tree="expression_statement [82354,82443]" parent="function_body [76332,77859]" at="12"/>
  <insert-tree tree="emit_statement [77805,77852]" parent="function_body [76332,77859]" at="13"/>
  <insert-node tree="}: } [77858,77859]" parent="function_body [76332,77859]" at="14"/>
  <update-node tree="identifier: tokenA [78376,78382]" label="candidate"/>
  <insert-node tree="{: { [77911,77912]" parent="function_body [77911,78670]" at="0"/>
  <move-tree tree="expression_statement [84059,84190]" parent="function_body [77911,78670]" at="1"/>
  <insert-node tree="variable_declaration_statement [78044,78117]" parent="function_body [77911,78670]" at="2"/>
  <move-tree tree="expression_statement [82905,83047]" parent="function_body [77911,78670]" at="3"/>
  <insert-node tree="expression_statement [78244,78440]" parent="function_body [77911,78670]" at="4"/>
  <insert-node tree="expression_statement [78452,78583]" parent="function_body [77911,78670]" at="5"/>
  <insert-tree tree="expression_statement [78595,78616]" parent="function_body [77911,78670]" at="6"/>
  <move-tree tree="emit_statement [83492,83544]" parent="function_body [77911,78670]" at="7"/>
  <insert-node tree="}: } [78669,78670]" parent="function_body [77911,78670]" at="8"/>
  <update-node tree="identifier: tokenB [78392,78398]" label="candidate"/>
  <insert-node tree="{: { [78731,78732]" parent="function_body [78731,79461]" at="0"/>
  <move-tree tree="expression_statement [82772,82893]" parent="function_body [78731,79461]" at="1"/>
  <insert-node tree="expression_statement [78864,79017]" parent="function_body [78731,79461]" at="2"/>
  <move-tree tree="expression_statement [81822,81943]" parent="function_body [78731,79461]" at="3"/>
  <move-tree tree="expression_statement [65179,65302]" parent="function_body [78731,79461]" at="4"/>
  <insert-tree tree="expression_statement [79386,79407]" parent="function_body [78731,79461]" at="5"/>
  <move-tree tree="emit_statement [80951,80981]" parent="function_body [78731,79461]" at="6"/>
  <insert-node tree="}: } [79460,79461]" parent="function_body [78731,79461]" at="7"/>
  <insert-node tree="{: { [79534,79535]" parent="function_body [79534,79768]" at="0"/>
  <insert-node tree="if_statement [79545,79608]" parent="function_body [79534,79768]" at="1"/>
  <move-tree tree="variable_declaration_statement [73061,73200]" parent="function_body [79534,79768]" at="2"/>
  <insert-tree tree="return_statement [79707,79755]" parent="function_body [79534,79768]" at="3"/>
  <insert-node tree="comment: // 1% [79756,79761]" parent="function_body [79534,79768]" at="4"/>
  <insert-node tree="}: } [79767,79768]" parent="function_body [79534,79768]" at="5"/>
  <move-tree tree="type_name [17538,17545]" parent="event_paramater [80483,80504]" at="0"/>
  <insert-node tree="indexed: indexed [80491,80498]" parent="event_paramater [80483,80504]" at="1"/>
  <insert-node tree="identifier: epoch [80499,80504]" parent="event_paramater [80483,80504]" at="2"/>
  <move-tree tree="type_name [64701,64708]" parent="event_paramater [80506,80519]" at="0"/>
  <insert-node tree="identifier: block [80514,80519]" parent="event_paramater [80506,80519]" at="1"/>
  <move-tree tree="type_name [64671,64678]" parent="event_paramater [80521,80538]" at="0"/>
  <insert-node tree="identifier: timestamp [80529,80538]" parent="event_paramater [80521,80538]" at="1"/>
  <update-node tree="identifier: lessUsdc [80099,80107]" label="amount"/>
  <insert-node tree="{: { [80715,80716]" parent="function_body [80715,80864]" at="0"/>
  <insert-tree tree="expression_statement [80726,80741]" parent="function_body [80715,80864]" at="1"/>
  <insert-tree tree="expression_statement [80751,80768]" parent="function_body [80715,80864]" at="2"/>
  <insert-tree tree="expression_statement [80778,80792]" parent="function_body [80715,80864]" at="3"/>
  <insert-node tree="emit_statement [80804,80857]" parent="function_body [80715,80864]" at="4"/>
  <insert-node tree="}: } [80863,80864]" parent="function_body [80715,80864]" at="5"/>
  <insert-node tree="{: { [80894,80895]" parent="function_body [80894,81119]" at="0"/>
  <insert-node tree="comment: // Mint advance reward to sender [80905,80937]" parent="function_body [80894,81119]" at="1"/>
  <insert-tree tree="variable_declaration_statement [80947,80999]" parent="function_body [80894,81119]" at="2"/>
  <insert-tree tree="expression_statement [81009,81046]" parent="function_body [80894,81119]" at="3"/>
  <insert-tree tree="emit_statement [81056,81100]" parent="function_body [80894,81119]" at="4"/>
  <move-tree tree="expression_statement [68422,68424]" parent="function_body [80894,81119]" at="5"/>
  <insert-node tree="}: } [81118,81119]" parent="function_body [80894,81119]" at="6"/>
  <insert-node tree="return: return [18011,18017]" parent="return_statement [18011,18091]" at="0"/>
  <insert-node tree="call_expression [18018,18090]" parent="return_statement [18011,18091]" at="1"/>
  <insert-tree tree="variable_declaration [18438,18460]" parent="variable_declaration_statement [18438,18487]" at="0"/>
  <insert-node tree="=: = [18461,18462]" parent="variable_declaration_statement [18438,18487]" at="1"/>
  <insert-node tree="call_expression [18463,18486]" parent="variable_declaration_statement [18438,18487]" at="2"/>
  <insert-tree tree="variable_declaration [18497,18517]" parent="variable_declaration_statement [18497,18542]" at="0"/>
  <insert-node tree="=: = [18518,18519]" parent="variable_declaration_statement [18497,18542]" at="1"/>
  <insert-node tree="call_expression [18520,18541]" parent="variable_declaration_statement [18497,18542]" at="2"/>
  <insert-node tree="if: if [54674,54676]" parent="if_statement [54674,54752]" at="0"/>
  <insert-node tree="(: ( [54677,54678]" parent="if_statement [54674,54752]" at="1"/>
  <insert-tree tree="unary_expression [54678,54703]" parent="if_statement [54674,54752]" at="2"/>
  <insert-node tree="): ) [54703,54704]" parent="if_statement [54674,54752]" at="3"/>
  <insert-node tree="block_statement [54705,54752]" parent="if_statement [54674,54752]" at="4"/>
  <move-tree tree="call_expression [49115,49204]" parent="expression_statement [54872,54926]" at="0"/>
  <move-tree tree=",: , [49164,49165]" parent="call_expression [54872,54925]" at="8"/>
  <insert-node tree="call_expression [54936,54957]" parent="expression_statement [54936,54958]" at="0"/>
  <insert-node tree="call_expression [55204,55282]" parent="expression_statement [55204,55283]" at="0"/>
  <insert-node tree="call_expression [55385,55406]" parent="expression_statement [55385,55407]" at="0"/>
  <move-tree tree="call_expression [22973,23041]" parent="expression_statement [55417,55496]" at="0"/>
  <insert-node tree="call_expression [55596,55622]" parent="expression_statement [55596,55623]" at="0"/>
  <move-tree tree="call_expression [21687,21758]" parent="expression_statement [55772,55831]" at="0"/>
  <move-tree tree="variable_declaration [83222,83250]" parent="variable_declaration_statement [57099,57131]" at="0"/>
  <insert-node tree="=: = [57117,57118]" parent="variable_declaration_statement [57099,57131]" at="1"/>
  <insert-tree tree="call_expression [57119,57130]" parent="variable_declaration_statement [57099,57131]" at="2"/>
  <insert-tree tree="variable_declaration [57699,57717]" parent="variable_declaration_statement [57699,57776]" at="0"/>
  <insert-node tree="=: = [57718,57719]" parent="variable_declaration_statement [57699,57776]" at="1"/>
  <insert-node tree="call_expression [57720,57775]" parent="variable_declaration_statement [57699,57776]" at="2"/>
  <move-tree tree="variable_declaration [81758,81781]" parent="variable_declaration_statement [58417,58490]" at="0"/>
  <insert-node tree="=: = [58436,58437]" parent="variable_declaration_statement [58417,58490]" at="1"/>
  <insert-tree tree="call_expression [58438,58489]" parent="variable_declaration_statement [58417,58490]" at="2"/>
  <move-tree tree="variable_declaration [83130,83162]" parent="variable_declaration_statement [58500,58569]" at="0"/>
  <insert-node tree="=: = [58518,58519]" parent="variable_declaration_statement [58500,58569]" at="1"/>
  <insert-tree tree="ternary_expression [58520,58568]" parent="variable_declaration_statement [58500,58569]" at="2"/>
  <insert-node tree="if: if [58731,58733]" parent="if_statement [58731,58853]" at="0"/>
  <insert-node tree="(: ( [58734,58735]" parent="if_statement [58731,58853]" at="1"/>
  <insert-tree tree="binary_expression [58735,58745]" parent="if_statement [58731,58853]" at="2"/>
  <insert-node tree="): ) [58745,58746]" parent="if_statement [58731,58853]" at="3"/>
  <insert-node tree="block_statement [58747,58853]" parent="if_statement [58731,58853]" at="4"/>
  <insert-node tree="if: if [58923,58925]" parent="if_statement [58923,58995]" at="0"/>
  <insert-node tree="(: ( [58926,58927]" parent="if_statement [58923,58995]" at="1"/>
  <insert-tree tree="binary_expression [58927,58937]" parent="if_statement [58923,58995]" at="2"/>
  <insert-node tree="): ) [58937,58938]" parent="if_statement [58923,58995]" at="3"/>
  <insert-node tree="block_statement [58939,58995]" parent="if_statement [58923,58995]" at="4"/>
  <move-tree tree="call_expression [78258,78298]" parent="expression_statement [59071,59108]" at="0"/>
  <insert-node tree="call_expression [59118,59150]" parent="expression_statement [59118,59151]" at="0"/>
  <move-tree tree="variable_declaration [81955,81975]" parent="variable_declaration_statement [60732,60803]" at="0"/>
  <insert-node tree="=: = [60756,60757]" parent="variable_declaration_statement [60732,60803]" at="1"/>
  <move-tree tree="call_expression [76891,76939]" parent="variable_declaration_statement [60732,60803]" at="2"/>
  <insert-tree tree="call_expression [60813,60866]" parent="expression_statement [60813,60867]" at="0"/>
  <insert-tree tree="tuple_expression [61073,61082]" parent="variable_declaration_statement [61009,61083]" at="2"/>
  <move-tree tree="variable_declaration [81169,81187]" parent="variable_declaration_statement [61142,61186]" at="0"/>
  <insert-node tree="=: = [61166,61167]" parent="variable_declaration_statement [61142,61186]" at="1"/>
  <insert-tree tree="call_expression [61168,61185]" parent="variable_declaration_statement [61142,61186]" at="2"/>
  <move-tree tree="variable_declaration [82050,82069]" parent="variable_declaration_statement [61196,61234]" at="0"/>
  <insert-node tree="=: = [61217,61218]" parent="variable_declaration_statement [61196,61234]" at="1"/>
  <insert-tree tree="call_expression [61219,61233]" parent="variable_declaration_statement [61196,61234]" at="2"/>
  <insert-node tree="call_expression [61670,61737]" parent="return_statement [61663,61738]" at="1"/>
  <move-tree tree="variable_declaration [73061,73097]" parent="variable_declaration_statement [62133,62202]" at="0"/>
  <insert-node tree="=: = [62154,62155]" parent="variable_declaration_statement [62133,62202]" at="1"/>
  <insert-node tree="call_expression [62156,62201]" parent="variable_declaration_statement [62133,62202]" at="2"/>
  <insert-node tree="call_expression [62535,62604]" parent="expression_statement [62535,62605]" at="0"/>
  <move-tree tree="call_expression [83380,83450]" parent="expression_statement [63025,63077]" at="0"/>
  <update-node tree="identifier: Approval [23890,23898]" label="CouponApproval"/>
  <insert-tree tree="call_argument [63109,63119]" parent="emit_statement [63089,63138]" at="3"/>
  <move-tree tree="call_argument [22457,22463]" parent="emit_statement [63089,63138]" at="8"/>
  <insert-node tree="call_expression [63445,63532]" parent="expression_statement [63445,63533]" at="0"/>
  <insert-node tree="call_expression [63543,63594]" parent="expression_statement [63543,63595]" at="0"/>
  <insert-node tree="binary_expression [63611,63686]" parent="if_statement [63607,63808]" at="2"/>
  <update-node tree="identifier: Transfer [21840,21848]" label="CouponTransfer"/>
  <insert-tree tree="call_argument [63859,63864]" parent="emit_statement [63820,63874]" at="7"/>
  <insert-node tree=",: , [63864,63865]" parent="emit_statement [63820,63874]" at="8"/>
  <move-tree tree="variable_declaration [72865,72884]" parent="variable_declaration_statement [65729,65783]" at="0"/>
  <insert-node tree="=: = [65747,65748]" parent="variable_declaration_statement [65729,65783]" at="1"/>
  <insert-tree tree="call_expression [65749,65782]" parent="variable_declaration_statement [65729,65783]" at="2"/>
  <insert-node tree="variable_declaration_tuple [66329,66368]" parent="variable_declaration_statement [66329,66390]" at="0"/>
  <insert-tree tree="unary_expression [66520,66526]" parent="if_statement [66516,66575]" at="2"/>
  <insert-node tree="call_expression [69120,69234]" parent="expression_statement [69120,69235]" at="0"/>
  <move-tree tree="variable_declaration [67756,67775]" parent="variable_declaration_statement [69950,70108]" at="0"/>
  <insert-node tree="call_expression [70168,70195]" parent="expression_statement [70168,70196]" at="0"/>
  <insert-node tree="emit: emit [70302,70306]" parent="emit_statement [70302,70356]" at="0"/>
  <insert-node tree="identifier: Bond [70307,70311]" parent="emit_statement [70302,70356]" at="1"/>
  <insert-node tree="(: ( [70311,70312]" parent="emit_statement [70302,70356]" at="2"/>
  <insert-tree tree="call_argument [70312,70322]" parent="emit_statement [70302,70356]" at="3"/>
  <insert-node tree=",: , [70322,70323]" parent="emit_statement [70302,70356]" at="4"/>
  <insert-tree tree="call_argument [70324,70338]" parent="emit_statement [70302,70356]" at="5"/>
  <insert-node tree=",: , [70338,70339]" parent="emit_statement [70302,70356]" at="6"/>
  <insert-tree tree="call_argument [70340,70347]" parent="emit_statement [70302,70356]" at="7"/>
  <insert-node tree=",: , [70347,70348]" parent="emit_statement [70302,70356]" at="8"/>
  <move-tree tree="call_argument [80974,80979]" parent="emit_statement [70302,70356]" at="9"/>
  <insert-node tree="): ) [70354,70355]" parent="emit_statement [70302,70356]" at="10"/>
  <move-tree tree="variable_declaration [67381,67404]" parent="variable_declaration_statement [70485,70568]" at="0"/>
  <move-tree tree="call_expression [82072,82111]" parent="variable_declaration_statement [70485,70568]" at="2"/>
  <insert-node tree="call_expression [70633,70699]" parent="expression_statement [70633,70700]" at="0"/>
  <move-tree tree="variable_declaration [66599,66618]" parent="variable_declaration_statement [70987,71049]" at="0"/>
  <insert-node tree="call_expression [71113,71178]" parent="expression_statement [71113,71179]" at="0"/>
  <move-tree tree="call_argument [57741,57756]" parent="call_expression [71189,71261]" at="3"/>
  <update-node tree="identifier: Bond [81619,81623]" label="Unbond"/>
  <insert-tree tree="call_argument [71314,71321]" parent="emit_statement [71274,71330]" at="7"/>
  <insert-node tree=",: , [71321,71322]" parent="emit_statement [71274,71330]" at="8"/>
  <insert-node tree="if: if [76470,76472]" parent="if_statement [76470,76834]" at="0"/>
  <insert-node tree="(: ( [76473,76474]" parent="if_statement [76470,76834]" at="1"/>
  <insert-tree tree="unary_expression [76474,76497]" parent="if_statement [76470,76834]" at="2"/>
  <insert-node tree="): ) [76497,76498]" parent="if_statement [76470,76834]" at="3"/>
  <insert-node tree="block_statement [76499,76834]" parent="if_statement [76470,76834]" at="4"/>
  <move-tree tree="variable_declaration [77908,77926]" parent="variable_declaration_statement [76993,77032]" at="0"/>
  <move-tree tree="call_expression [81978,82007]" parent="variable_declaration_statement [76993,77032]" at="2"/>
  <insert-node tree="if: if [77189,77191]" parent="if_statement [77189,77327]" at="0"/>
  <insert-node tree="(: ( [77192,77193]" parent="if_statement [77189,77327]" at="1"/>
  <insert-tree tree="member_expression [77193,77230]" parent="if_statement [77189,77327]" at="2"/>
  <insert-node tree="): ) [77230,77231]" parent="if_statement [77189,77327]" at="3"/>
  <insert-node tree="block_statement [77232,77327]" parent="if_statement [77189,77327]" at="4"/>
  <insert-node tree="if: if [77337,77339]" parent="if_statement [77337,77478]" at="0"/>
  <insert-node tree="(: ( [77340,77341]" parent="if_statement [77337,77478]" at="1"/>
  <insert-tree tree="member_expression [77341,77379]" parent="if_statement [77337,77478]" at="2"/>
  <insert-node tree="): ) [77379,77380]" parent="if_statement [77337,77478]" at="3"/>
  <insert-node tree="block_statement [77381,77478]" parent="if_statement [77337,77478]" at="4"/>
  <move-tree tree="variable_declaration [65942,65965]" parent="variable_declaration_statement [78044,78117]" at="0"/>
  <insert-node tree="=: = [78062,78063]" parent="variable_declaration_statement [78044,78117]" at="1"/>
  <insert-node tree="call_expression [78064,78116]" parent="variable_declaration_statement [78044,78117]" at="2"/>
  <insert-node tree="call_expression [78244,78439]" parent="expression_statement [78244,78440]" at="0"/>
  <insert-node tree="call_expression [78452,78582]" parent="expression_statement [78452,78583]" at="0"/>
  <update-node tree="identifier: Provide [83497,83504]" label="Commit"/>
  <insert-node tree="call_expression [78864,79016]" parent="expression_statement [78864,79017]" at="0"/>
  <update-node tree="identifier: Claim [80956,80961]" label="Commit"/>
  <insert-tree tree="call_argument [79443,79452]" parent="emit_statement [79419,79454]" at="5"/>
  <insert-node tree="if: if [79545,79547]" parent="if_statement [79545,79608]" at="0"/>
  <insert-node tree="(: ( [79548,79549]" parent="if_statement [79545,79608]" at="1"/>
  <insert-tree tree="binary_expression [79549,79567]" parent="if_statement [79545,79608]" at="2"/>
  <insert-node tree="): ) [79567,79568]" parent="if_statement [79545,79608]" at="3"/>
  <insert-node tree="block_statement [79569,79608]" parent="if_statement [79545,79608]" at="4"/>
  <insert-tree tree="variable_declaration [79620,79645]" parent="variable_declaration_statement [79620,79697]" at="0"/>
  <move-tree tree="call_expression [73100,73168]" parent="variable_declaration_statement [79620,79697]" at="2"/>
  <insert-node tree="emit: emit [80804,80808]" parent="emit_statement [80804,80857]" at="0"/>
  <insert-node tree="identifier: Advance [80809,80816]" parent="emit_statement [80804,80857]" at="1"/>
  <insert-node tree="(: ( [80816,80817]" parent="emit_statement [80804,80857]" at="2"/>
  <insert-tree tree="call_argument [80817,80824]" parent="emit_statement [80804,80857]" at="3"/>
  <insert-node tree=",: , [80824,80825]" parent="emit_statement [80804,80857]" at="4"/>
  <insert-tree tree="call_argument [80826,80838]" parent="emit_statement [80804,80857]" at="5"/>
  <insert-node tree=",: , [80838,80839]" parent="emit_statement [80804,80857]" at="6"/>
  <move-tree tree="call_argument [59133,59158]" parent="emit_statement [80804,80857]" at="7"/>
  <insert-node tree="): ) [80855,80856]" parent="emit_statement [80804,80857]" at="8"/>
  <insert-node tree="member_expression [18018,18088]" parent="call_expression [18018,18090]" at="0"/>
  <insert-node tree="(: ( [18088,18089]" parent="call_expression [18018,18090]" at="1"/>
  <insert-node tree="): ) [18089,18090]" parent="call_expression [18018,18090]" at="2"/>
  <insert-tree tree="member_expression [18463,18478]" parent="call_expression [18463,18486]" at="0"/>
  <insert-node tree="(: ( [18478,18479]" parent="call_expression [18463,18486]" at="1"/>
  <move-tree tree="call_argument [75313,75319]" parent="call_expression [18463,18486]" at="2"/>
  <insert-node tree="): ) [18485,18486]" parent="call_expression [18463,18486]" at="3"/>
  <insert-tree tree="member_expression [18520,18533]" parent="call_expression [18520,18541]" at="0"/>
  <insert-node tree="(: ( [18533,18534]" parent="call_expression [18520,18541]" at="1"/>
  <move-tree tree="call_argument [75930,75936]" parent="call_expression [18520,18541]" at="2"/>
  <insert-node tree="): ) [18540,18541]" parent="call_expression [18520,18541]" at="3"/>
  <insert-node tree="member_expression [54633,54646]" parent="call_expression [54633,54663]" at="0"/>
  <insert-node tree="{: { [54705,54706]" parent="block_statement [54705,54752]" at="0"/>
  <insert-node tree="expression_statement [54720,54741]" parent="block_statement [54705,54752]" at="1"/>
  <insert-node tree="}: } [54751,54752]" parent="block_statement [54705,54752]" at="2"/>
  <move-tree tree="identifier: LibEIP712 [49115,49124]" parent="member_expression [54872,54893]" at="1"/>
  <move-tree tree="call_argument [28155,28162]" parent="call_expression [54872,54925]" at="2"/>
  <move-tree tree="call_argument [52073,52079]" parent="call_expression [54872,54925]" at="10"/>
  <insert-tree tree="member_expression [54936,54949]" parent="call_expression [54936,54957]" at="0"/>
  <insert-node tree="(: ( [54949,54950]" parent="call_expression [54936,54957]" at="1"/>
  <move-tree tree="call_argument [24793,24799]" parent="call_expression [54936,54957]" at="2"/>
  <insert-node tree="): ) [54956,54957]" parent="call_expression [54936,54957]" at="3"/>
  <insert-node tree="identifier: decrementTotalDebt [54968,54986]" parent="call_expression [54968,55038]" at="0"/>
  <move-tree tree="call_argument [74779,74785]" parent="call_expression [54968,55038]" at="3"/>
  <insert-tree tree="member_expression [55159,55176]" parent="call_expression [55159,55193]" at="0"/>
  <insert-node tree="identifier: decrementTotalRedeemable [55204,55228]" parent="call_expression [55204,55282]" at="0"/>
  <insert-node tree="(: ( [55228,55229]" parent="call_expression [55204,55282]" at="1"/>
  <move-tree tree="call_argument [75381,75387]" parent="call_expression [55204,55282]" at="2"/>
  <insert-node tree=",: , [55235,55236]" parent="call_expression [55204,55282]" at="3"/>
  <move-tree tree="call_argument [50018,50032]" parent="call_expression [55204,55282]" at="4"/>
  <insert-node tree="): ) [55281,55282]" parent="call_expression [55204,55282]" at="5"/>
  <insert-node tree="member_expression [55385,55398]" parent="call_expression [55385,55406]" at="0"/>
  <insert-node tree="(: ( [55398,55399]" parent="call_expression [55385,55406]" at="1"/>
  <move-tree tree="call_argument [74847,74853]" parent="call_expression [55385,55406]" at="2"/>
  <insert-node tree="): ) [55405,55406]" parent="call_expression [55385,55406]" at="3"/>
  <insert-node tree="identifier: decrementTotalRedeemable [55417,55441]" parent="call_expression [55417,55495]" at="0"/>
  <insert-node tree="identifier: incrementTotalDebt [55596,55614]" parent="call_expression [55596,55622]" at="0"/>
  <insert-node tree="(: ( [55614,55615]" parent="call_expression [55596,55622]" at="1"/>
  <move-tree tree="call_argument [18230,18236]" parent="call_expression [55596,55622]" at="2"/>
  <insert-node tree="): ) [55621,55622]" parent="call_expression [55596,55622]" at="3"/>
  <insert-node tree="identifier: decrementTotalDebt [55772,55790]" parent="call_expression [55772,55830]" at="0"/>
  <update-node tree="identifier: newPhantomFromBonded [83230,83250]" label="totalDebt"/>
  <insert-node tree="member_expression [57720,57773]" parent="call_expression [57720,57775]" at="0"/>
  <insert-node tree="(: ( [57773,57774]" parent="call_expression [57720,57775]" at="1"/>
  <insert-node tree="): ) [57774,57775]" parent="call_expression [57720,57775]" at="2"/>
  <update-node tree="identifier: balanceOfBonded [81766,81781]" label="poolAmount"/>
  <update-node tree="identifier: totalRewardedWithPhantom [83138,83162]" label="daoAmount"/>
  <insert-node tree="{: { [58747,58748]" parent="block_statement [58747,58853]" at="0"/>
  <insert-node tree="expression_statement [58762,58799]" parent="block_statement [58747,58853]" at="1"/>
  <insert-node tree="expression_statement [58813,58842]" parent="block_statement [58747,58853]" at="2"/>
  <insert-node tree="}: } [58852,58853]" parent="block_statement [58747,58853]" at="3"/>
  <insert-node tree="{: { [58939,58940]" parent="block_statement [58939,58995]" at="0"/>
  <insert-node tree="expression_statement [58954,58984]" parent="block_statement [58939,58995]" at="1"/>
  <insert-node tree="}: } [58994,58995]" parent="block_statement [58939,58995]" at="2"/>
  <insert-node tree=",: , [59098,59099]" parent="call_expression [59071,59107]" at="3"/>
  <move-tree tree="call_argument [18726,18732]" parent="call_expression [59071,59107]" at="4"/>
  <insert-node tree="identifier: incrementTotalRedeemable [59118,59142]" parent="call_expression [59118,59150]" at="0"/>
  <insert-node tree="(: ( [59142,59143]" parent="call_expression [59118,59150]" at="1"/>
  <move-tree tree="call_argument [19370,19376]" parent="call_expression [59118,59150]" at="2"/>
  <insert-node tree="): ) [59149,59150]" parent="call_expression [59118,59150]" at="3"/>
  <insert-node tree="uint256: uint256 [60322,60329]" parent="primitive_type [60322,60329]" at="0"/>
  <update-node tree="identifier: newClaimable [81963,81975]" label="expirationEpoch"/>
  <update-node tree="identifier: totalRewardedWithPhantom [81096,81120]" label="couponsForEpoch"/>
  <insert-node tree="identifier: outstandingCoupons [60973,60991]" parent="call_expression [60973,60998]" at="0"/>
  <insert-tree tree="variable_declaration [61034,61050]" parent="variable_declaration_tuple [61009,61070]" at="3"/>
  <insert-node tree=",: , [61050,61051]" parent="variable_declaration_tuple [61009,61070]" at="4"/>
  <insert-tree tree="variable_declaration [61052,61069]" parent="variable_declaration_tuple [61009,61070]" at="5"/>
  <update-node tree="identifier: newPhantom [81177,81187]" label="totalRedeemable"/>
  <update-node tree="identifier: lessPhantom [82058,82069]" label="totalCoupons"/>
  <insert-node tree="identifier: calculateCouponPremium [61670,61692]" parent="call_expression [61670,61737]" at="0"/>
  <insert-node tree="(: ( [61692,61693]" parent="call_expression [61670,61737]" at="1"/>
  <insert-tree tree="call_argument [61693,61715]" parent="call_expression [61670,61737]" at="2"/>
  <insert-node tree=",: , [61715,61716]" parent="call_expression [61670,61737]" at="3"/>
  <insert-tree tree="call_argument [61717,61728]" parent="call_expression [61670,61737]" at="4"/>
  <insert-node tree=",: , [61728,61729]" parent="call_expression [61670,61737]" at="5"/>
  <move-tree tree="call_argument [75049,75055]" parent="call_expression [61670,61737]" at="6"/>
  <insert-node tree="): ) [61736,61737]" parent="call_expression [61670,61737]" at="7"/>
  <move-tree tree="member_expression [49934,49946]" parent="call_expression [61838,61957]" at="0"/>
  <move-tree tree="call_argument [49999,50003]" parent="call_expression [61838,61957]" at="5"/>
  <insert-node tree=",: , [61900,61901]" parent="call_expression [61838,61957]" at="5"/>
  <move-tree tree="call_argument [24300,24338]" parent="call_expression [61970,62086]" at="6"/>
  <update-node tree="identifier: balanceOfPhantom [73220,73236]" label="epoch"/>
  <update-node tree="identifier: balanceOfPhantom [73239,73255]" label="epoch"/>
  <update-node tree="identifier: balanceOfRewardedWithPhantom [73069,73097]" label="couponAmount"/>
  <insert-tree tree="member_expression [62156,62172]" parent="call_expression [62156,62201]" at="0"/>
  <insert-node tree="(: ( [62172,62173]" parent="call_expression [62156,62201]" at="1"/>
  <insert-node tree="call_argument [62173,62200]" parent="call_expression [62156,62201]" at="2"/>
  <insert-node tree="): ) [62200,62201]" parent="call_expression [62156,62201]" at="3"/>
  <update-node tree="identifier: decrementBalanceOfBonded [82263,82287]" label="burnFromAccount"/>
  <move-tree tree="call_argument [78148,78160]" parent="call_expression [62212,62253]" at="4"/>
  <update-node tree="identifier: incrementBalanceOfClaimable [82199,82226]" label="incrementBalanceOfCoupons"/>
  <insert-node tree=",: , [62307,62308]" parent="call_expression [62264,62322]" at="5"/>
  <insert-tree tree="call_argument [62309,62321]" parent="call_expression [62264,62322]" at="6"/>
  <insert-node tree="identifier: require [62535,62542]" parent="call_expression [62535,62604]" at="0"/>
  <insert-node tree="(: ( [62542,62543]" parent="call_expression [62535,62604]" at="1"/>
  <insert-tree tree="call_argument [62543,62572]" parent="call_expression [62535,62604]" at="2"/>
  <insert-node tree=",: , [62572,62573]" parent="call_expression [62535,62604]" at="3"/>
  <move-tree tree="call_argument [22263,22296]" parent="call_expression [62535,62604]" at="4"/>
  <insert-node tree="): ) [62603,62604]" parent="call_expression [62535,62604]" at="5"/>
  <update-node tree="identifier: require [22872,22879]" label="decrementBalanceOfCoupons"/>
  <move-tree tree="call_argument [79517,79527]" parent="call_expression [62615,62718]" at="2"/>
  <insert-tree tree="call_argument [62653,62664]" parent="call_expression [62615,62718]" at="4"/>
  <insert-node tree=",: , [62664,62665]" parent="call_expression [62615,62718]" at="5"/>
  <insert-tree tree="call_argument [62666,62678]" parent="call_expression [62615,62718]" at="6"/>
  <insert-node tree=",: , [62678,62679]" parent="call_expression [62615,62718]" at="7"/>
  <update-node tree="identifier: incrementBalanceOfBonded [83323,83347]" label="redeemToAccount"/>
  <update-node tree="identifier: incrementBalanceOfPhantom [83380,83405]" label="updateAllowanceCoupons"/>
  <move-tree tree="call_argument [50181,50188]" parent="call_expression [63025,63076]" at="4"/>
  <insert-node tree=",: , [63067,63068]" parent="call_expression [63025,63076]" at="5"/>
  <move-tree tree="call_argument [75125,75131]" parent="call_expression [63025,63076]" at="6"/>
  <insert-node tree="identifier: decrementBalanceOfCoupons [63445,63470]" parent="call_expression [63445,63532]" at="0"/>
  <insert-node tree="(: ( [63470,63471]" parent="call_expression [63445,63532]" at="1"/>
  <move-tree tree="call_argument [52054,52060]" parent="call_expression [63445,63532]" at="2"/>
  <insert-node tree=",: , [63477,63478]" parent="call_expression [63445,63532]" at="3"/>
  <insert-tree tree="call_argument [63479,63484]" parent="call_expression [63445,63532]" at="4"/>
  <insert-node tree=",: , [63484,63485]" parent="call_expression [63445,63532]" at="5"/>
  <move-tree tree="call_argument [24203,24209]" parent="call_expression [63445,63532]" at="6"/>
  <insert-node tree=",: , [63492,63493]" parent="call_expression [63445,63532]" at="7"/>
  <move-tree tree="call_argument [49891,49910]" parent="call_expression [63445,63532]" at="8"/>
  <insert-node tree="): ) [63531,63532]" parent="call_expression [63445,63532]" at="9"/>
  <insert-node tree="identifier: incrementBalanceOfCoupons [63543,63568]" parent="call_expression [63543,63594]" at="0"/>
  <insert-node tree="(: ( [63568,63569]" parent="call_expression [63543,63594]" at="1"/>
  <move-tree tree="call_argument [52062,52071]" parent="call_expression [63543,63594]" at="2"/>
  <insert-node tree=",: , [63578,63579]" parent="call_expression [63543,63594]" at="3"/>
  <insert-tree tree="call_argument [63580,63585]" parent="call_expression [63543,63594]" at="4"/>
  <insert-node tree=",: , [63585,63586]" parent="call_expression [63543,63594]" at="5"/>
  <move-tree tree="call_argument [75659,75665]" parent="call_expression [63543,63594]" at="6"/>
  <insert-node tree="): ) [63593,63594]" parent="call_expression [63543,63594]" at="7"/>
  <insert-node tree="binary_expression [63611,63631]" parent="binary_expression [63611,63686]" at="0"/>
  <insert-node tree="&amp;&amp;: &amp;&amp; [63632,63634]" parent="binary_expression [63611,63686]" at="1"/>
  <move-tree tree="binary_expression [52095,52141]" parent="binary_expression [63611,63686]" at="2"/>
  <update-node tree="identifier: updatePrice [66575,66586]" label="oracleCapture"/>
  <update-node tree="identifier: totalRewardedWithPhantom [72988,73012]" label="newDebt"/>
  <update-node tree="identifier: totalBonded [72873,72884]" label="newSupply"/>
  <insert-node tree="identifier: increaseSupply [65856,65870]" parent="call_expression [65856,65881]" at="0"/>
  <insert-node tree="(: ( [66329,66330]" parent="variable_declaration_tuple [66329,66368]" at="0"/>
  <move-tree tree="variable_declaration [67467,67492]" parent="variable_declaration_tuple [66329,66368]" at="1"/>
  <insert-node tree=",: , [66355,66356]" parent="variable_declaration_tuple [66329,66368]" at="2"/>
  <move-tree tree="variable_declaration [66724,66734]" parent="variable_declaration_tuple [66329,66368]" at="3"/>
  <insert-node tree="): ) [66367,66368]" parent="variable_declaration_tuple [66329,66368]" at="4"/>
  <move-tree tree="member_expression [107002,107016]" parent="call_expression [66371,66389]" at="0"/>
  <move-tree tree="member_expression [50056,50068]" parent="call_expression [69120,69234]" at="0"/>
  <insert-node tree="(: ( [69132,69133]" parent="call_expression [69120,69234]" at="1"/>
  <insert-tree tree="call_argument [69147,69168]" parent="call_expression [69120,69234]" at="2"/>
  <insert-node tree=",: , [69168,69169]" parent="call_expression [69120,69234]" at="3"/>
  <move-tree tree="call_argument [50113,50117]" parent="call_expression [69120,69234]" at="4"/>
  <insert-node tree=",: , [69187,69188]" parent="call_expression [69120,69234]" at="5"/>
  <move-tree tree="call_argument [20851,20890]" parent="call_expression [69120,69234]" at="6"/>
  <insert-node tree="): ) [69233,69234]" parent="call_expression [69120,69234]" at="7"/>
  <update-node tree="identifier: lastReserve [67764,67775]" label="balance"/>
  <insert-node tree="identifier: incrementBalanceOf [70118,70136]" parent="call_expression [70118,70157]" at="0"/>
  <insert-node tree="identifier: incrementTotalBonded [70168,70188]" parent="call_expression [70168,70195]" at="0"/>
  <insert-node tree="(: ( [70188,70189]" parent="call_expression [70168,70195]" at="1"/>
  <move-tree tree="call_argument [50190,50195]" parent="call_expression [70168,70195]" at="2"/>
  <insert-node tree="): ) [70194,70195]" parent="call_expression [70168,70195]" at="3"/>
  <update-node tree="identifier: priceCumulative [67389,67404]" label="staged"/>
  <update-node tree="identifier: decrementBalanceOfClaimable [80825,80852]" label="incrementBalanceOfStaged"/>
  <insert-tree tree="call_argument [70615,70621]" parent="call_expression [70578,70622]" at="4"/>
  <insert-node tree="identifier: decrementTotalBonded [70633,70653]" parent="call_expression [70633,70699]" at="0"/>
  <insert-node tree="(: ( [70653,70654]" parent="call_expression [70633,70699]" at="1"/>
  <insert-tree tree="call_argument [70654,70660]" parent="call_expression [70633,70699]" at="2"/>
  <insert-node tree=",: , [70660,70661]" parent="call_expression [70633,70699]" at="3"/>
  <move-tree tree="call_argument [19465,19507]" parent="call_expression [70633,70699]" at="4"/>
  <insert-node tree="): ) [70698,70699]" parent="call_expression [70633,70699]" at="5"/>
  <insert-node tree="identifier: decrementBalanceOf [70710,70728]" parent="call_expression [70710,70780]" at="0"/>
  <move-tree tree="call_argument [81405,81415]" parent="call_expression [70710,70780]" at="3"/>
  <move-tree tree="call_argument [81417,81422]" parent="call_expression [70710,70780]" at="6"/>
  <update-node tree="identifier: newClaimable [82529,82541]" label="staged"/>
  <update-node tree="identifier: lastReserve [66607,66618]" label="balance"/>
  <insert-node tree="identifier: decrementTotalBonded [71113,71133]" parent="call_expression [71113,71178]" at="0"/>
  <insert-node tree="(: ( [71133,71134]" parent="call_expression [71113,71178]" at="1"/>
  <move-tree tree="call_argument [80865,80870]" parent="call_expression [71113,71178]" at="2"/>
  <insert-node tree=",: , [71139,71140]" parent="call_expression [71113,71178]" at="3"/>
  <move-tree tree="call_argument [57391,57428]" parent="call_expression [71113,71178]" at="4"/>
  <insert-node tree="): ) [71177,71178]" parent="call_expression [71113,71178]" at="5"/>
  <update-node tree="identifier: require [57733,57740]" label="decrementBalanceOf"/>
  <move-tree tree="call_argument [81460,81470]" parent="call_expression [71189,71261]" at="2"/>
  <insert-node tree=",: , [71227,71228]" parent="call_expression [71189,71261]" at="5"/>
  <move-tree tree="call_argument [82932,82970]" parent="call_expression [76343,76457]" at="2"/>
  <insert-node tree="{: { [76499,76500]" parent="block_statement [76499,76834]" at="0"/>
  <insert-node tree="expression_statement [76514,76654]" parent="block_statement [76499,76834]" at="1"/>
  <insert-tree tree="expression_statement [76670,76730]" parent="block_statement [76499,76834]" at="2"/>
  <insert-tree tree="emit_statement [76744,76823]" parent="block_statement [76499,76834]" at="3"/>
  <insert-node tree="}: } [76833,76834]" parent="block_statement [76499,76834]" at="4"/>
  <update-node tree="identifier: usdcAmount [77916,77926]" label="bonded"/>
  <update-node tree="identifier: balanceOfRewarded [81978,81995]" label="balanceOf"/>
  <insert-node tree="{: { [77232,77233]" parent="block_statement [77232,77327]" at="0"/>
  <move-tree tree="expression_statement [27851,27935]" parent="block_statement [77232,77327]" at="1"/>
  <insert-node tree="}: } [77326,77327]" parent="block_statement [77232,77327]" at="2"/>
  <insert-node tree="{: { [77381,77382]" parent="block_statement [77381,77478]" at="0"/>
  <move-tree tree="expression_statement [27116,27181]" parent="block_statement [77381,77478]" at="1"/>
  <insert-node tree="}: } [77477,77478]" parent="block_statement [77381,77478]" at="2"/>
  <insert-node tree="identifier: recordVote [77710,77720]" parent="call_expression [77710,77749]" at="0"/>
  <update-node tree="identifier: decrementBalanceOfPhantom [82354,82379]" label="placeLock"/>
  <update-node tree="identifier: priceCumulative [65950,65965]" label="endsAfter"/>
  <insert-tree tree="member_expression [78064,78113]" parent="call_expression [78064,78116]" at="0"/>
  <insert-node tree="(: ( [78113,78114]" parent="call_expression [78064,78116]" at="1"/>
  <move-tree tree="call_argument [56418,56419]" parent="call_expression [78064,78116]" at="2"/>
  <insert-node tree="): ) [78115,78116]" parent="call_expression [78064,78116]" at="3"/>
  <insert-tree tree="call_argument [78156,78175]" parent="call_expression [78129,78231]" at="2"/>
  <insert-tree tree="member_expression [78244,78256]" parent="call_expression [78244,78439]" at="0"/>
  <insert-node tree="(: ( [78256,78257]" parent="call_expression [78244,78439]" at="1"/>
  <insert-tree tree="call_argument [78271,78376]" parent="call_expression [78244,78439]" at="2"/>
  <insert-node tree=",: , [78376,78377]" parent="call_expression [78244,78439]" at="3"/>
  <insert-tree tree="call_argument [78391,78395]" parent="call_expression [78244,78439]" at="4"/>
  <insert-node tree=",: , [78395,78396]" parent="call_expression [78244,78439]" at="5"/>
  <move-tree tree="call_argument [82405,82441]" parent="call_expression [78244,78439]" at="6"/>
  <insert-node tree="): ) [78438,78439]" parent="call_expression [78244,78439]" at="7"/>
  <insert-tree tree="member_expression [78452,78464]" parent="call_expression [78452,78582]" at="0"/>
  <insert-node tree="(: ( [78464,78465]" parent="call_expression [78452,78582]" at="1"/>
  <insert-tree tree="call_argument [78479,78523]" parent="call_expression [78452,78582]" at="2"/>
  <insert-node tree=",: , [78523,78524]" parent="call_expression [78452,78582]" at="3"/>
  <insert-tree tree="call_argument [78538,78542]" parent="call_expression [78452,78582]" at="4"/>
  <insert-node tree=",: , [78542,78543]" parent="call_expression [78452,78582]" at="5"/>
  <move-tree tree="call_argument [82307,82342]" parent="call_expression [78452,78582]" at="6"/>
  <insert-node tree="): ) [78581,78582]" parent="call_expression [78452,78582]" at="7"/>
  <update-node tree="identifier: value [83517,83522]" label="candidate"/>
  <move-tree tree="member_expression [68310,68322]" parent="call_expression [78864,79016]" at="0"/>
  <insert-node tree="(: ( [78876,78877]" parent="call_expression [78864,79016]" at="1"/>
  <insert-node tree="call_argument [78891,78957]" parent="call_expression [78864,79016]" at="2"/>
  <insert-node tree=",: , [78957,78958]" parent="call_expression [78864,79016]" at="3"/>
  <move-tree tree="call_argument [68370,68374]" parent="call_expression [78864,79016]" at="4"/>
  <insert-node tree=",: , [78976,78977]" parent="call_expression [78864,79016]" at="5"/>
  <move-tree tree="call_argument [80872,80910]" parent="call_expression [78864,79016]" at="6"/>
  <insert-node tree="): ) [79015,79016]" parent="call_expression [78864,79016]" at="7"/>
  <insert-node tree="{: { [79569,79570]" parent="block_statement [79569,79608]" at="0"/>
  <insert-node tree="return_statement [79584,79597]" parent="block_statement [79569,79608]" at="1"/>
  <insert-node tree="}: } [79607,79608]" parent="block_statement [79569,79608]" at="2"/>
  <move-tree tree="member_expression [67495,67508]" parent="call_expression [79648,79696]" at="0"/>
  <insert-node tree=",: , [79680,79681]" parent="call_expression [79648,79696]" at="3"/>
  <insert-tree tree="call_argument [79682,79695]" parent="call_expression [79648,79696]" at="4"/>
  <move-tree tree="member_expression [59133,59148]" parent="call_argument [80840,80855]" at="0"/>
  <insert-node tree="call_expression [18018,18078]" parent="member_expression [18018,18088]" at="0"/>
  <insert-node tree=".: . [18078,18079]" parent="member_expression [18018,18088]" at="1"/>
  <insert-node tree="identifier: asUint256 [18079,18088]" parent="member_expression [18018,18088]" at="2"/>
  <move-tree tree="call_expression [106981,106989]" parent="member_expression [54633,54646]" at="0"/>
  <insert-node tree=".: . [54641,54642]" parent="member_expression [54633,54646]" at="1"/>
  <insert-node tree="identifier: mint [54642,54646]" parent="member_expression [54633,54646]" at="2"/>
  <insert-node tree="call_expression [54720,54740]" parent="expression_statement [54720,54741]" at="0"/>
  <insert-tree tree="call_expression [54872,54880]" parent="member_expression [54872,54893]" at="0"/>
  <update-node tree="identifier: LibEIP712 [49115,49124]" label="transferFrom"/>
  <move-tree tree="call_expression [107297,107305]" parent="member_expression [55385,55398]" at="0"/>
  <insert-node tree=".: . [55393,55394]" parent="member_expression [55385,55398]" at="1"/>
  <insert-node tree="identifier: burn [55394,55398]" parent="member_expression [55385,55398]" at="2"/>
  <insert-node tree="call_expression [57720,57763]" parent="member_expression [57720,57773]" at="0"/>
  <insert-node tree=".: . [57763,57764]" parent="member_expression [57720,57773]" at="1"/>
  <insert-node tree="identifier: asUint256 [57764,57773]" parent="member_expression [57720,57773]" at="2"/>
  <move-tree tree="call_expression [83852,83884]" parent="expression_statement [58762,58799]" at="0"/>
  <insert-node tree="call_expression [58813,58841]" parent="expression_statement [58813,58842]" at="0"/>
  <insert-node tree="call_expression [58954,58983]" parent="expression_statement [58954,58984]" at="0"/>
  <insert-node tree="identifier: epoch [60992,60997]" parent="call_argument [60992,60997]" at="0"/>
  <update-node tree="identifier: lessUsdc [83068,83076]" label="lessRedeemable"/>
  <insert-node tree="call_expression [62173,62200]" parent="call_argument [62173,62200]" at="0"/>
  <update-node tree="identifier: newClaimable [82239,82251]" label="epoch"/>
  <update-node tree="identifier: newUniv2 [83360,83368]" label="couponAmount"/>
  <move-tree tree="member_expression [12521,12531]" parent="binary_expression [63611,63631]" at="0"/>
  <insert-node tree="!=: != [63622,63624]" parent="binary_expression [63611,63631]" at="1"/>
  <insert-node tree="identifier: sender [63625,63631]" parent="binary_expression [63611,63631]" at="2"/>
  <move-tree tree="call_expression [52241,52329]" parent="expression_statement [63703,63797]" at="0"/>
  <move-tree tree="call_argument [52277,52283]" parent="call_expression [63703,63796]" at="3"/>
  <update-node tree="identifier: add [73031,73034]" label="asUint256"/>
  <update-node tree="identifier: price0Cumulative [67148,67164]" label="newRedeemable"/>
  <update-node tree="identifier: price1Cumulative [67174,67190]" label="lessDebt"/>
  <move-tree tree="type_name [83078,83085]" parent="variable_declaration [65835,65852]" at="0"/>
  <update-node tree="identifier: blockTimestamp [67199,67213]" label="newBonded"/>
  <insert-node tree="identifier: newSupply [65871,65880]" parent="call_argument [65871,65880]" at="0"/>
  <update-node tree="identifier: setup [107011,107016]" label="capture"/>
  <move-tree tree="call_expression [65809,65822]" parent="return_statement [66543,66564]" at="1"/>
  <move-tree tree="ternary_expression [81224,81297]" parent="member_expression [69968,70092]" at="0"/>
  <update-node tree="identifier: value [80520,80525]" label="balance"/>
  <insert-node tree="call_expression [70502,70540]" parent="member_expression [70502,70544]" at="0"/>
  <update-node tree="identifier: mul [82101,82104]" label="div"/>
  <move-tree tree="call_expression [82072,82100]" parent="call_argument [70545,70566]" at="0"/>
  <insert-node tree="identifier: balance [71220,71227]" parent="call_argument [71220,71227]" at="0"/>
  <insert-node tree="call_expression [76514,76653]" parent="expression_statement [76514,76654]" at="0"/>
  <insert-tree tree="call_expression [76873,76928]" parent="call_argument [76873,76928]" at="0"/>
  <update-node tree="identifier: pair [78210,78214]" label="candidate"/>
  <update-node tree="identifier: usdcAmount [78216,78226]" label="vote"/>
  <update-node tree="identifier: lessPhantom [82392,82403]" label="candidate"/>
  <insert-tree tree="call_expression [77949,77971]" parent="call_argument [77949,77971]" at="0"/>
  <insert-tree tree="call_expression [78769,78791]" parent="call_argument [78769,78791]" at="0"/>
  <insert-node tree="call_expression [78891,78957]" parent="call_argument [78891,78957]" at="0"/>
  <insert-tree tree="call_expression [79056,79159]" parent="call_argument [79056,79159]" at="0"/>
  <insert-node tree="return: return [79584,79590]" parent="return_statement [79584,79597]" at="0"/>
  <move-tree tree="boolean_literal [65824,65829]" parent="return_statement [79584,79597]" at="1"/>
  <insert-node tree="member_expression [18018,18070]" parent="call_expression [18018,18078]" at="0"/>
  <insert-node tree="(: ( [18070,18071]" parent="call_expression [18018,18078]" at="1"/>
  <move-tree tree="call_argument [19457,19463]" parent="call_expression [18018,18078]" at="2"/>
  <insert-node tree="): ) [18077,18078]" parent="call_expression [18018,18078]" at="3"/>
  <insert-node tree="identifier: increaseDebt [54720,54732]" parent="call_expression [54720,54740]" at="0"/>
  <insert-node tree="(: ( [54732,54733]" parent="call_expression [54720,54740]" at="1"/>
  <move-tree tree="call_argument [21817,21823]" parent="call_expression [54720,54740]" at="2"/>
  <insert-node tree="): ) [54739,54740]" parent="call_expression [54720,54740]" at="3"/>
  <insert-tree tree="member_expression [57720,57739]" parent="call_expression [57720,57763]" at="0"/>
  <insert-node tree="(: ( [57739,57740]" parent="call_expression [57720,57763]" at="1"/>
  <move-tree tree="call_argument [77808,77816]" parent="call_expression [57720,57763]" at="2"/>
  <insert-node tree="): ) [57762,57763]" parent="call_expression [57720,57763]" at="3"/>
  <insert-node tree=",: , [58789,58790]" parent="call_expression [58762,58798]" at="3"/>
  <move-tree tree="call_argument [22342,22348]" parent="call_expression [58762,58798]" at="4"/>
  <insert-node tree="identifier: incrementTotalBonded [58813,58833]" parent="call_expression [58813,58841]" at="0"/>
  <insert-node tree="(: ( [58833,58834]" parent="call_expression [58813,58841]" at="1"/>
  <move-tree tree="call_argument [22404,22410]" parent="call_expression [58813,58841]" at="2"/>
  <insert-node tree="): ) [58840,58841]" parent="call_expression [58813,58841]" at="3"/>
  <insert-tree tree="member_expression [58954,58967]" parent="call_expression [58954,58983]" at="0"/>
  <insert-node tree="(: ( [58967,58968]" parent="call_expression [58954,58983]" at="1"/>
  <insert-tree tree="call_argument [58968,58974]" parent="call_expression [58954,58983]" at="2"/>
  <insert-node tree=",: , [58974,58975]" parent="call_expression [58954,58983]" at="3"/>
  <move-tree tree="call_argument [23084,23090]" parent="call_expression [58954,58983]" at="4"/>
  <insert-node tree="): ) [58982,58983]" parent="call_expression [58954,58983]" at="5"/>
  <update-node tree="identifier: IUniswapV2Pair [78258,78272]" label="dollar"/>
  <update-node tree="identifier: owner [23686,23691]" label="dollarAmount"/>
  <insert-node tree="&gt;: &gt; [61878,61879]" parent="binary_expression [61865,61881]" at="1"/>
  <insert-node tree="number_literal: 0 [61880,61881]" parent="binary_expression [61865,61881]" at="2"/>
  <insert-tree tree="call_expression [61997,62008]" parent="binary_expression [61997,62024]" at="0"/>
  <insert-node tree="&gt;=: &gt;= [62009,62011]" parent="binary_expression [61997,62024]" at="1"/>
  <update-node tree="identifier: recovered [49839,49848]" label="dollarAmount"/>
  <insert-node tree="identifier: couponPremium [62173,62186]" parent="call_expression [62173,62200]" at="0"/>
  <insert-node tree="(: ( [62186,62187]" parent="call_expression [62173,62200]" at="1"/>
  <move-tree tree="call_argument [78030,78042]" parent="call_expression [62173,62200]" at="2"/>
  <insert-node tree="): ) [62199,62200]" parent="call_expression [62173,62200]" at="3"/>
  <update-node tree="identifier: allowance [52095,52104]" label="allowanceCoupons"/>
  <insert-node tree="identifier: decrementAllowanceCoupons [63703,63728]" parent="call_expression [63703,63796]" at="0"/>
  <move-tree tree="call_argument [52185,52191]" parent="call_expression [63703,63796]" at="3"/>
  <insert-tree tree="call_argument [63737,63747]" parent="call_expression [63703,63796]" at="4"/>
  <insert-node tree=",: , [63747,63748]" parent="call_expression [63703,63796]" at="5"/>
  <insert-node tree=",: , [63755,63756]" parent="call_expression [63703,63796]" at="7"/>
  <insert-tree tree="member_expression [65392,65401]" parent="call_expression [65392,65413]" at="0"/>
  <insert-tree tree="call_argument [65402,65412]" parent="call_expression [65392,65413]" at="2"/>
  <update-node tree="identifier: univ2 [80220,80225]" label="dollar"/>
  <move-tree tree="binary_expression [81190,81208]" parent="ternary_expression [69968,70088]" at="0"/>
  <insert-tree tree="call_expression [70064,70088]" parent="ternary_expression [69968,70088]" at="4"/>
  <insert-tree tree="member_expression [70502,70511]" parent="call_expression [70502,70540]" at="0"/>
  <insert-node tree="(: ( [70511,70512]" parent="call_expression [70502,70540]" at="1"/>
  <insert-node tree="call_argument [70512,70539]" parent="call_expression [70502,70540]" at="2"/>
  <insert-node tree="): ) [70539,70540]" parent="call_expression [70502,70540]" at="3"/>
  <update-node tree="identifier: balanceOfPhantom [82072,82088]" label="balanceOf"/>
  <insert-node tree="&gt;: &gt; [76392,76393]" parent="binary_expression [76370,76395]" at="1"/>
  <insert-node tree="number_literal: 0 [76394,76395]" parent="binary_expression [76370,76395]" at="2"/>
  <insert-tree tree="member_expression [76514,76526]" parent="call_expression [76514,76653]" at="0"/>
  <insert-node tree="(: ( [76526,76527]" parent="call_expression [76514,76653]" at="1"/>
  <insert-tree tree="call_argument [76545,76567]" parent="call_expression [76514,76653]" at="2"/>
  <insert-node tree=",: , [76567,76568]" parent="call_expression [76514,76653]" at="3"/>
  <insert-tree tree="call_argument [76586,76590]" parent="call_expression [76514,76653]" at="4"/>
  <insert-node tree=",: , [76590,76591]" parent="call_expression [76514,76653]" at="5"/>
  <move-tree tree="call_argument [26884,26917]" parent="call_expression [76514,76653]" at="6"/>
  <insert-node tree="): ) [76652,76653]" parent="call_expression [76514,76653]" at="7"/>
  <update-node tree="identifier: require [27851,27858]" label="decrementRejectFor"/>
  <insert-tree tree="call_argument [77266,77275]" parent="call_expression [77247,77315]" at="2"/>
  <insert-tree tree="call_argument [77277,77283]" parent="call_expression [77247,77315]" at="4"/>
  <insert-node tree=",: , [77283,77284]" parent="call_expression [77247,77315]" at="5"/>
  <update-node tree="identifier: require [27116,27123]" label="decrementApproveFor"/>
  <insert-tree tree="call_argument [77416,77425]" parent="call_expression [77396,77466]" at="2"/>
  <insert-tree tree="call_argument [77427,77433]" parent="call_expression [77396,77466]" at="4"/>
  <insert-node tree=",: , [77433,77434]" parent="call_expression [77396,77466]" at="5"/>
  <move-tree tree="member_expression [73540,73586]" parent="call_expression [78891,78957]" at="0"/>
  <insert-node tree="(: ( [78916,78917]" parent="call_expression [78891,78957]" at="1"/>
  <insert-tree tree="call_argument [78917,78956]" parent="call_expression [78891,78957]" at="2"/>
  <insert-node tree="): ) [78956,78957]" parent="call_expression [78891,78957]" at="3"/>
  <insert-tree tree="call_expression [79270,79291]" parent="binary_expression [79270,79314]" at="0"/>
  <insert-node tree="&gt;: &gt; [79292,79293]" parent="binary_expression [79270,79314]" at="1"/>
  <insert-tree tree="call_expression [79294,79314]" parent="binary_expression [79270,79314]" at="2"/>
  <update-node tree="identifier: balanceOfBonded [73143,73158]" label="balanceOf"/>
  <insert-node tree="call_expression [18018,18066]" parent="member_expression [18018,18070]" at="0"/>
  <insert-node tree=".: . [18066,18067]" parent="member_expression [18018,18070]" at="1"/>
  <insert-node tree="identifier: mul [18067,18070]" parent="member_expression [18018,18070]" at="2"/>
  <insert-node tree="call_expression [57740,57762]" parent="call_argument [57740,57762]" at="0"/>
  <move-tree tree="call_expression [72025,72080]" parent="member_expression [58057,58130]" at="0"/>
  <update-node tree="identifier: balanceOf [83860,83869]" label="mint"/>
  <update-node tree="identifier: getPoolExitLockupEpochs [76913,76936]" label="getCouponExpiration"/>
  <insert-tree tree="member_expression [63660,63670]" parent="call_argument [63660,63670]" at="0"/>
  <move-tree tree="call_expression [81784,81811]" parent="call_argument [70512,70539]" at="0"/>
  <update-node tree="identifier: totalRewardedWithPhantom [83253,83277]" label="value"/>
  <insert-tree tree="call_expression [71015,71028]" parent="call_argument [71015,71028]" at="0"/>
  <update-node tree="identifier: balanceOfRewarded [82932,82949]" label="balanceOf"/>
  <move-tree tree="binary_expression [73540,73566]" parent="member_expression [78891,78916]" at="0"/>
  <update-node tree="identifier: fluidUntil [73576,73586]" label="add"/>
  <insert-node tree="identifier: effectivePremium [18018,18034]" parent="call_expression [18018,18066]" at="0"/>
  <insert-node tree="(: ( [18034,18035]" parent="call_expression [18018,18066]" at="1"/>
  <insert-tree tree="call_argument [18035,18046]" parent="call_expression [18018,18066]" at="2"/>
  <insert-node tree=",: , [18046,18047]" parent="call_expression [18018,18066]" at="3"/>
  <insert-tree tree="call_argument [18048,18057]" parent="call_expression [18018,18066]" at="4"/>
  <insert-node tree=",: , [18057,18058]" parent="call_expression [18018,18066]" at="5"/>
  <move-tree tree="call_argument [24292,24298]" parent="call_expression [18018,18066]" at="6"/>
  <insert-node tree="): ) [18065,18066]" parent="call_expression [18018,18066]" at="7"/>
  <insert-node tree="member_expression [57740,57760]" parent="call_expression [57740,57762]" at="0"/>
  <insert-node tree="(: ( [57760,57761]" parent="call_expression [57740,57762]" at="1"/>
  <insert-node tree="): ) [57761,57762]" parent="call_expression [57740,57762]" at="2"/>
  <update-node tree="identifier: totalBonded [83906,83917]" label="totalRedeemable"/>
  <update-node tree="identifier: univ2 [83852,83857]" label="dollar"/>
  <insert-node tree="identifier: value [70002,70007]" parent="member_expression [70002,70011]" at="0"/>
  <move-tree tree="call_expression [81247,81282]" parent="call_argument [70012,70047]" at="0"/>
  <insert-tree tree="call_expression [78891,78902]" parent="binary_expression [78891,78912]" at="0"/>
  <insert-node tree="&gt;: &gt; [78903,78904]" parent="binary_expression [78891,78912]" at="1"/>
  <move-tree tree="call_expression [77808,77816]" parent="member_expression [57740,57760]" at="0"/>
  <insert-node tree=".: . [57748,57749]" parent="member_expression [57740,57760]" at="1"/>
  <insert-node tree="identifier: totalSupply [57749,57760]" parent="member_expression [57740,57760]" at="2"/>
  <insert-node tree="binary_expression [58057,58107]" parent="member_expression [58057,58111]" at="0"/>
  <update-node tree="identifier: sub [72059,72062]" label="add"/>
  <move-tree tree="call_expression [83888,83901]" parent="call_argument [58112,58125]" at="0"/>
  <move-tree tree="call_expression [72025,72058]" parent="binary_expression [58057,58107]" at="0"/>
  <insert-node tree="&gt;=: &gt;= [58091,58093]" parent="binary_expression [58057,58107]" at="1"/>
  <move-tree tree="call_expression [72887,72900]" parent="binary_expression [58057,58107]" at="2"/>
  <delete-node tree="contract: contract [12172,12180]"/>
  <delete-node tree="identifier: Context [12181,12188]"/>
  <delete-node tree="{: { [12189,12190]"/>
  <delete-node tree="comment: // Empty internal constructor, to prevent people from mistakenly deploying [12196,12270]"/>
  <delete-node tree="comment: // an instance of this contract, which should be used via inheritance. [12276,12346]"/>
  <delete-tree tree="constructor_definition [12352,12379]"/>
  <delete-node tree="comment: // solhint-disable-previous-line no-empty-blocks [12385,12433]"/>
  <delete-node tree="function: function [12441,12449]"/>
  <delete-node tree="identifier: _msgSender [12450,12460]"/>
  <delete-node tree="(: ( [12460,12461]"/>
  <delete-node tree="): ) [12461,12462]"/>
  <delete-tree tree="state_mutability [12472,12476]"/>
  <delete-tree tree="return_type_definition [12477,12502]"/>
  <delete-node tree="{: { [12503,12504]"/>
  <delete-node tree="return: return [12514,12520]"/>
  <delete-node tree="return_statement [12514,12532]"/>
  <delete-node tree="}: } [12538,12539]"/>
  <delete-node tree="function_body [12503,12539]"/>
  <delete-node tree="function_definition [12441,12539]"/>
  <delete-tree tree="function_definition [12547,12772]"/>
  <delete-node tree="}: } [12774,12775]"/>
  <delete-node tree="contract_body [12189,12775]"/>
  <delete-node tree="contract_declaration [12172,12775]"/>
  <delete-node tree="contract: contract [24569,24577]"/>
  <delete-node tree="identifier: ERC20Burnable [24578,24591]"/>
  <delete-node tree="is: is [24592,24594]"/>
  <delete-tree tree="inheritance_specifier [24595,24602]"/>
  <delete-node tree=",: , [24602,24603]"/>
  <delete-tree tree="inheritance_specifier [24604,24609]"/>
  <delete-node tree="{: { [24610,24611]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from the caller.      *      * See {ERC20-_burn}.      */ [24617,24719]"/>
  <delete-node tree="function: function [24725,24733]"/>
  <delete-node tree="identifier: burn [24734,24738]"/>
  <delete-node tree="(: ( [24738,24739]"/>
  <delete-node tree="): ) [24753,24754]"/>
  <delete-tree tree="visibility [24755,24761]"/>
  <delete-node tree="{: { [24762,24763]"/>
  <delete-node tree="identifier: _burn [24773,24778]"/>
  <delete-node tree="(: ( [24778,24779]"/>
  <delete-tree tree="call_argument [24779,24791]"/>
  <delete-node tree=",: , [24791,24792]"/>
  <delete-node tree="): ) [24799,24800]"/>
  <delete-node tree="call_expression [24773,24800]"/>
  <delete-node tree="expression_statement [24773,24801]"/>
  <delete-node tree="}: } [24807,24808]"/>
  <delete-node tree="function_body [24762,24808]"/>
  <delete-node tree="function_definition [24725,24808]"/>
  <delete-node tree="comment: /**      * @dev See {ERC20-_burnFrom}.      */ [24816,24864]"/>
  <delete-node tree="}: } [24975,24976]"/>
  <delete-node tree="contract_body [24610,24976]"/>
  <delete-node tree="contract_declaration [24569,24976]"/>
  <delete-node tree="contract: contract [25043,25051]"/>
  <delete-node tree="identifier: ERC20Detailed [25052,25065]"/>
  <delete-node tree="is: is [25066,25068]"/>
  <delete-tree tree="inheritance_specifier [25069,25075]"/>
  <delete-node tree="{: { [25076,25077]"/>
  <delete-tree tree="type_name [25083,25089]"/>
  <delete-node tree="identifier: _name [25098,25103]"/>
  <delete-node tree="state_variable_declaration [25083,25104]"/>
  <delete-tree tree="type_name [25110,25116]"/>
  <delete-node tree="identifier: _symbol [25125,25132]"/>
  <delete-node tree="state_variable_declaration [25110,25133]"/>
  <delete-tree tree="type_name [25139,25144]"/>
  <delete-node tree="identifier: _decimals [25153,25162]"/>
  <delete-node tree="state_variable_declaration [25139,25163]"/>
  <delete-node tree="comment: /**      * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of      * these values are immutable: they can only be set once during      * construction.      */ [25171,25354]"/>
  <delete-tree tree="constructor_definition [25360,25527]"/>
  <delete-node tree="comment: /**      * @dev Returns the name of the token.      */ [25535,25591]"/>
  <delete-tree tree="function_definition [25597,25680]"/>
  <delete-node tree="comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [25688,25793]"/>
  <delete-tree tree="function_definition [25799,25886]"/>
  <delete-node tree="comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [25894,26443]"/>
  <delete-tree tree="function_definition [26449,26532]"/>
  <delete-node tree="}: } [26534,26535]"/>
  <delete-node tree="contract_body [25076,26535]"/>
  <delete-node tree="contract_declaration [25043,26535]"/>
  <delete-node tree="library: library [26626,26633]"/>
  <delete-node tree="identifier: Roles [26634,26639]"/>
  <delete-node tree="{: { [26640,26641]"/>
  <delete-tree tree="struct_declaration [26647,26710]"/>
  <delete-node tree="comment: /**      * @dev Give an account access to this role.      */ [26718,26780]"/>
  <delete-node tree="function: function [26786,26794]"/>
  <delete-node tree="identifier: add [26795,26798]"/>
  <delete-node tree="(: ( [26798,26799]"/>
  <delete-tree tree="parameter [26799,26816]"/>
  <delete-node tree=",: , [26816,26817]"/>
  <delete-tree tree="parameter [26818,26833]"/>
  <delete-node tree="): ) [26833,26834]"/>
  <delete-tree tree="visibility [26835,26843]"/>
  <delete-node tree="{: { [26844,26845]"/>
  <delete-node tree="identifier: require [26855,26862]"/>
  <delete-node tree="(: ( [26862,26863]"/>
  <delete-tree tree="call_argument [26863,26882]"/>
  <delete-node tree=",: , [26882,26883]"/>
  <delete-node tree="): ) [26917,26918]"/>
  <delete-node tree="call_expression [26855,26918]"/>
  <delete-node tree="expression_statement [26855,26919]"/>
  <delete-tree tree="expression_statement [26929,26957]"/>
  <delete-node tree="}: } [26963,26964]"/>
  <delete-node tree="function_body [26844,26964]"/>
  <delete-node tree="function_definition [26786,26964]"/>
  <delete-node tree="comment: /**      * @dev Remove an account's access to this role.      */ [26972,27038]"/>
  <delete-node tree="function: function [27044,27052]"/>
  <delete-node tree="identifier: remove [27053,27059]"/>
  <delete-node tree="(: ( [27059,27060]"/>
  <delete-tree tree="parameter [27060,27077]"/>
  <delete-node tree=",: , [27077,27078]"/>
  <delete-tree tree="parameter [27079,27094]"/>
  <delete-node tree="): ) [27094,27095]"/>
  <delete-tree tree="visibility [27096,27104]"/>
  <delete-node tree="{: { [27105,27106]"/>
  <delete-tree tree="expression_statement [27191,27220]"/>
  <delete-node tree="}: } [27226,27227]"/>
  <delete-node tree="function_body [27105,27227]"/>
  <delete-node tree="function_definition [27044,27227]"/>
  <delete-node tree="comment: /**      * @dev Check if an account has this role.      * @return bool      */ [27235,27316]"/>
  <delete-tree tree="function_definition [27322,27525]"/>
  <delete-node tree="}: } [27527,27528]"/>
  <delete-node tree="contract_body [26640,27528]"/>
  <delete-node tree="library_declaration [26626,27528]"/>
  <delete-node tree="contract: contract [27532,27540]"/>
  <delete-node tree="identifier: MinterRole [27541,27551]"/>
  <delete-node tree="is: is [27552,27554]"/>
  <delete-tree tree="inheritance_specifier [27555,27562]"/>
  <delete-node tree="{: { [27563,27564]"/>
  <delete-tree tree="using_directive [27570,27597]"/>
  <delete-node tree="event: event [27654,27659]"/>
  <delete-node tree="identifier: MinterRemoved [27660,27673]"/>
  <delete-node tree="(: ( [27673,27674]"/>
  <delete-node tree="): ) [27697,27698]"/>
  <delete-node tree="event_definition [27654,27699]"/>
  <delete-tree tree="type_name [27707,27717]"/>
  <delete-node tree="identifier: _minters [27726,27734]"/>
  <delete-node tree="state_variable_declaration [27707,27735]"/>
  <delete-tree tree="constructor_definition [27743,27810]"/>
  <delete-node tree="modifier: modifier [27818,27826]"/>
  <delete-node tree="identifier: onlyMinter [27827,27837]"/>
  <delete-node tree="(: ( [27837,27838]"/>
  <delete-node tree="): ) [27838,27839]"/>
  <delete-node tree="{: { [27840,27841]"/>
  <delete-tree tree="expression_statement [27945,27947]"/>
  <delete-node tree="}: } [27953,27954]"/>
  <delete-node tree="function_body [27840,27954]"/>
  <delete-node tree="modifier_definition [27818,27954]"/>
  <delete-node tree="function: function [27962,27970]"/>
  <delete-node tree="identifier: isMinter [27971,27979]"/>
  <delete-node tree="(: ( [27979,27980]"/>
  <delete-node tree="): ) [27995,27996]"/>
  <delete-tree tree="visibility [27997,28003]"/>
  <delete-tree tree="state_mutability [28004,28008]"/>
  <delete-tree tree="return_type_definition [28009,28023]"/>
  <delete-tree tree="function_body [28024,28071]"/>
  <delete-node tree="function_definition [27962,28071]"/>
  <delete-node tree="function: function [28079,28087]"/>
  <delete-node tree="identifier: addMinter [28088,28097]"/>
  <delete-node tree="(: ( [28097,28098]"/>
  <delete-node tree="): ) [28113,28114]"/>
  <delete-tree tree="visibility [28115,28121]"/>
  <delete-tree tree="modifier_invocation [28122,28132]"/>
  <delete-node tree="{: { [28133,28134]"/>
  <delete-node tree="identifier: _addMinter [28144,28154]"/>
  <delete-node tree="(: ( [28154,28155]"/>
  <delete-node tree="): ) [28162,28163]"/>
  <delete-node tree="call_expression [28144,28163]"/>
  <delete-node tree="expression_statement [28144,28164]"/>
  <delete-node tree="}: } [28170,28171]"/>
  <delete-node tree="function_body [28133,28171]"/>
  <delete-node tree="function_definition [28079,28171]"/>
  <delete-tree tree="function_definition [28179,28258]"/>
  <delete-node tree="function: function [28266,28274]"/>
  <delete-node tree="identifier: _addMinter [28275,28285]"/>
  <delete-node tree="(: ( [28285,28286]"/>
  <delete-tree tree="parameter [28286,28301]"/>
  <delete-node tree="): ) [28301,28302]"/>
  <delete-tree tree="function_body [28312,28388]"/>
  <delete-node tree="function_definition [28266,28388]"/>
  <delete-node tree="function: function [28396,28404]"/>
  <delete-node tree="identifier: _removeMinter [28405,28418]"/>
  <delete-node tree="(: ( [28418,28419]"/>
  <delete-tree tree="parameter [28419,28434]"/>
  <delete-node tree="): ) [28434,28435]"/>
  <delete-tree tree="function_body [28445,28526]"/>
  <delete-node tree="function_definition [28396,28526]"/>
  <delete-node tree="}: } [28528,28529]"/>
  <delete-node tree="contract_body [27563,28529]"/>
  <delete-node tree="contract_declaration [27532,28529]"/>
  <delete-node tree="library: library [39875,39882]"/>
  <delete-node tree="identifier: LibEIP712 [39883,39892]"/>
  <delete-node tree="{: { [39893,39894]"/>
  <delete-node tree="comment: // Hash of the EIP712 Domain Separator Schema [39902,39947]"/>
  <delete-node tree="comment: // keccak256(abi.encodePacked( [39953,39983]"/>
  <delete-node tree="comment: //     &quot;EIP712Domain(&quot;, [39989,40012]"/>
  <delete-node tree="comment: //     &quot;string name,&quot;, [40018,40040]"/>
  <delete-node tree="comment: //     &quot;string version,&quot;, [40046,40071]"/>
  <delete-node tree="comment: //     &quot;uint256 chainId,&quot;, [40077,40103]"/>
  <delete-node tree="comment: //     &quot;address verifyingContract&quot;, [40109,40144]"/>
  <delete-node tree="comment: //     &quot;)&quot; [40150,40160]"/>
  <delete-node tree="comment: // )) [40166,40171]"/>
  <delete-tree tree="state_variable_declaration [40177,40309]"/>
  <delete-node tree="comment: /// @dev Calculates a EIP712 domain separator. [40317,40363]"/>
  <delete-node tree="comment: /// @param name The EIP712 domain name. [40369,40408]"/>
  <delete-node tree="comment: /// @param version The EIP712 domain version. [40414,40459]"/>
  <delete-node tree="comment: /// @param verifyingContract The EIP712 verifying contract. [40465,40524]"/>
  <delete-node tree="comment: /// @return EIP712 domain separator. [40530,40566]"/>
  <delete-node tree="function: function [40572,40580]"/>
  <delete-node tree="identifier: hashEIP712Domain [40581,40597]"/>
  <delete-node tree="(: ( [40597,40598]"/>
  <delete-tree tree="parameter [40608,40626]"/>
  <delete-node tree=",: , [40626,40627]"/>
  <delete-tree tree="parameter [40637,40658]"/>
  <delete-node tree=",: , [40658,40659]"/>
  <delete-node tree=",: , [40684,40685]"/>
  <delete-tree tree="parameter [40695,40720]"/>
  <delete-node tree="): ) [40726,40727]"/>
  <delete-tree tree="visibility [40733,40741]"/>
  <delete-tree tree="return_type_definition [40757,40781]"/>
  <delete-tree tree="function_body [40787,41847]"/>
  <delete-node tree="function_definition [40572,41847]"/>
  <delete-node tree="comment: /// @dev Calculates EIP712 encoding for a hash struct with a given domain hash. [41855,41934]"/>
  <delete-node tree="comment: /// @param eip712DomainHash Hash of the domain domain separator data, computed [41940,42018]"/>
  <delete-node tree="comment: ///                         with getDomainHash(). [42024,42073]"/>
  <delete-node tree="comment: /// @param hashStruct The EIP712 hash struct. [42079,42124]"/>
  <delete-node tree="comment: /// @return EIP712 hash applied to the given EIP712 Domain. [42130,42189]"/>
  <delete-node tree="function: function [42195,42203]"/>
  <delete-node tree="identifier: hashEIP712Message [42204,42221]"/>
  <delete-node tree="(: ( [42221,42222]"/>
  <delete-tree tree="parameter [42222,42246]"/>
  <delete-node tree=",: , [42246,42247]"/>
  <delete-tree tree="parameter [42248,42266]"/>
  <delete-node tree="): ) [42266,42267]"/>
  <delete-tree tree="visibility [42273,42281]"/>
  <delete-tree tree="return_type_definition [42297,42321]"/>
  <delete-tree tree="function_body [42327,43089]"/>
  <delete-node tree="function_definition [42195,43089]"/>
  <delete-node tree="}: } [43091,43092]"/>
  <delete-node tree="contract_body [39893,43092]"/>
  <delete-node tree="library_declaration [39875,43092]"/>
  <delete-tree tree="visibility [51834,51840]"/>
  <delete-tree tree="modifier_invocation [51841,51851]"/>
  <delete-tree tree="return_type_definition [51852,51866]"/>
  <delete-node tree="identifier: _mint [51878,51883]"/>
  <delete-tree tree="return_statement [51911,51923]"/>
  <delete-node tree="identifier: hashEIP712Domain [49125,49141]"/>
  <delete-tree tree="call_argument [49142,49148]"/>
  <delete-tree tree="call_argument [49150,49164]"/>
  <delete-tree tree="call_argument [49166,49188]"/>
  <delete-node tree=",: , [49188,49189]"/>
  <delete-node tree="identifier: EIP712_DOMAIN_SEPARATOR [49089,49112]"/>
  <delete-node tree="=: = [49113,49114]"/>
  <delete-node tree="assignment_expression [49089,49204]"/>
  <delete-tree tree="call_argument [50083,50098]"/>
  <delete-node tree=",: , [50117,50118]"/>
  <delete-tree tree="parameter [24888,24903]"/>
  <delete-tree tree="visibility [24921,24927]"/>
  <delete-node tree="identifier: _burnFrom [24939,24948]"/>
  <delete-tree tree="parameter [22819,22834]"/>
  <delete-node tree=",: , [22834,22835]"/>
  <delete-node tree="identifier: _totalSupply [23052,23064]"/>
  <delete-node tree="=: = [23065,23066]"/>
  <delete-tree tree="member_expression [23067,23083]"/>
  <delete-node tree="(: ( [23083,23084]"/>
  <delete-node tree="): ) [23090,23091]"/>
  <delete-node tree="call_expression [23067,23091]"/>
  <delete-node tree="assignment_expression [23052,23091]"/>
  <delete-tree tree="member_expression [22973,22995]"/>
  <delete-tree tree="array_access [22952,22970]"/>
  <delete-node tree="=: = [22971,22972]"/>
  <delete-node tree="assignment_expression [22952,23041]"/>
  <delete-tree tree="emit_statement [23102,23145]"/>
  <delete-tree tree="member_expression [21687,21708]"/>
  <delete-tree tree="array_access [21667,21684]"/>
  <delete-node tree="=: = [21685,21686]"/>
  <delete-node tree="assignment_expression [21667,21758]"/>
  <delete-tree tree="visibility [71977,71983]"/>
  <delete-tree tree="state_mutability [71984,71988]"/>
  <delete-tree tree="return_type_definition [71989,72006]"/>
  <delete-tree tree="call_expression [72063,72079]"/>
  <delete-node tree="&gt;=: &gt;= [83885,83887]"/>
  <delete-node tree="binary_expression [83852,83901]"/>
  <delete-node tree="return: return [72018,72024]"/>
  <delete-node tree="return_statement [72018,72081]"/>
  <delete-tree tree="parameter [82575,82588]"/>
  <delete-node tree="identifier: onlyFrozen [82599,82609]"/>
  <delete-node tree="(: ( [82609,82610]"/>
  <delete-node tree="): ) [82620,82621]"/>
  <delete-node tree="modifier_invocation [82599,82621]"/>
  <delete-tree tree="modifier_invocation [82622,82631]"/>
  <delete-node tree="=: = [83163,83164]"/>
  <delete-tree tree="call_expression [83165,83211]"/>
  <delete-node tree="variable_declaration_statement [83130,83212]"/>
  <delete-node tree="expression_statement [83380,83451]"/>
  <delete-tree tree="call_argument [78273,78277]"/>
  <delete-node tree="contract: contract [48589,48597]"/>
  <delete-node tree="identifier: Permittable [48598,48609]"/>
  <delete-node tree="is: is [48610,48612]"/>
  <delete-tree tree="inheritance_specifier [48613,48626]"/>
  <delete-node tree=",: , [48626,48627]"/>
  <delete-tree tree="inheritance_specifier [48628,48633]"/>
  <delete-node tree="{: { [48634,48635]"/>
  <delete-tree tree="state_variable_declaration [48641,48679]"/>
  <delete-node tree="comment: // keccak256(&quot;Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)&quot;); [48687,48786]"/>
  <delete-tree tree="state_variable_declaration [48792,48908]"/>
  <delete-tree tree="type_name [48914,48920]"/>
  <delete-node tree="constant: constant [48929,48937]"/>
  <delete-node tree="identifier: EIP712_VERSION [48938,48952]"/>
  <delete-node tree="=: = [48953,48954]"/>
  <delete-tree tree="string_literal [48955,48958]"/>
  <delete-node tree="state_variable_declaration [48914,48959]"/>
  <delete-tree tree="state_variable_declaration [48967,49006]"/>
  <delete-node tree="mapping: mapping [49014,49021]"/>
  <delete-node tree="(: ( [49021,49022]"/>
  <delete-tree tree="primitive_type [49022,49029]"/>
  <delete-node tree="=&gt;: =&gt; [49030,49032]"/>
  <delete-node tree="): ) [49040,49041]"/>
  <delete-node tree="type_name [49014,49041]"/>
  <delete-node tree="identifier: nonces [49042,49048]"/>
  <delete-node tree="state_variable_declaration [49014,49049]"/>
  <delete-node tree="constructor: constructor [49057,49068]"/>
  <delete-node tree="(: ( [49068,49069]"/>
  <delete-node tree="): ) [49069,49070]"/>
  <delete-node tree="public: public [49071,49077]"/>
  <delete-node tree="constructor_definition [49057,49212]"/>
  <delete-node tree="function: function [49220,49228]"/>
  <delete-node tree="identifier: permit [49229,49235]"/>
  <delete-node tree="(: ( [49235,49236]"/>
  <delete-tree tree="parameter [49246,49259]"/>
  <delete-node tree=",: , [49259,49260]"/>
  <delete-tree tree="parameter [49270,49285]"/>
  <delete-node tree=",: , [49285,49286]"/>
  <delete-node tree=",: , [49309,49310]"/>
  <delete-node tree=",: , [49336,49337]"/>
  <delete-tree tree="parameter [49347,49354]"/>
  <delete-node tree=",: , [49354,49355]"/>
  <delete-tree tree="parameter [49365,49374]"/>
  <delete-node tree=",: , [49374,49375]"/>
  <delete-tree tree="parameter [49385,49394]"/>
  <delete-node tree="): ) [49400,49401]"/>
  <delete-node tree="{: { [49411,49412]"/>
  <delete-tree tree="variable_declaration_statement [49422,49743]"/>
  <delete-tree tree="variable_declaration_statement [49755,49802]"/>
  <delete-node tree="(: ( [49946,49947]"/>
  <delete-tree tree="call_argument [49961,49984]"/>
  <delete-node tree=",: , [49984,49985]"/>
  <delete-node tree=",: , [50003,50004]"/>
  <delete-node tree="): ) [50042,50043]"/>
  <delete-node tree="call_expression [49934,50043]"/>
  <delete-node tree="expression_statement [49934,50044]"/>
  <delete-node tree="identifier: _approve [50165,50173]"/>
  <delete-node tree="(: ( [50173,50174]"/>
  <delete-tree tree="call_argument [50174,50179]"/>
  <delete-node tree=",: , [50179,50180]"/>
  <delete-node tree=",: , [50188,50189]"/>
  <delete-node tree="): ) [50195,50196]"/>
  <delete-node tree="call_expression [50165,50196]"/>
  <delete-node tree="expression_statement [50165,50197]"/>
  <delete-node tree="}: } [50203,50204]"/>
  <delete-node tree="function_body [49411,50204]"/>
  <delete-node tree="function_definition [49220,50204]"/>
  <delete-node tree="}: } [50206,50207]"/>
  <delete-node tree="contract_body [48634,50207]"/>
  <delete-node tree="contract_declaration [48589,50207]"/>
  <delete-node tree="uint: uint [52493,52497]"/>
  <delete-tree tree="parameter [76816,76831]"/>
  <delete-tree tree="member_expression [76853,76888]"/>
  <delete-node tree="=: = [76889,76890]"/>
  <delete-node tree="assignment_expression [76853,76939]"/>
  <delete-tree tree="member_expression [81123,81142]"/>
  <delete-tree tree="call_expression [81143,81157]"/>
  <delete-node tree="identifier: newUniv2 [83086,83094]"/>
  <delete-node tree="variable_declaration [83078,83094]"/>
  <delete-tree tree="call_expression [83098,83117]"/>
  <delete-node tree="identifier: _reserve [68256,68264]"/>
  <delete-node tree="identifier: require [23678,23685]"/>
  <delete-node tree="!=: != [23692,23694]"/>
  <delete-tree tree="type_cast_expression [23695,23705]"/>
  <delete-node tree="==: == [49849,49851]"/>
  <delete-node tree="identifier: owner [49852,49857]"/>
  <delete-tree tree="call_argument [73256,73263]"/>
  <delete-tree tree="call_argument [82300,82305]"/>
  <delete-node tree=",: , [82305,82306]"/>
  <delete-tree tree="call_argument [22880,22901]"/>
  <delete-node tree="mapping: mapping [17405,17412]"/>
  <delete-node tree="(: ( [17413,17414]"/>
  <delete-tree tree="primitive_type [17414,17421]"/>
  <delete-node tree="=&gt;: =&gt; [17422,17424]"/>
  <delete-node tree="): ) [17432,17433]"/>
  <delete-node tree="type_name [17405,17433]"/>
  <delete-node tree="identifier: _balances [17442,17451]"/>
  <delete-node tree="state_variable_declaration [17405,17452]"/>
  <delete-node tree="mapping: mapping [17460,17467]"/>
  <delete-node tree="(: ( [17468,17469]"/>
  <delete-tree tree="primitive_type [17469,17476]"/>
  <delete-node tree="=&gt;: =&gt; [17477,17479]"/>
  <delete-node tree="mapping: mapping [17480,17487]"/>
  <delete-node tree="(: ( [17488,17489]"/>
  <delete-tree tree="primitive_type [17489,17496]"/>
  <delete-node tree="=&gt;: =&gt; [17497,17499]"/>
  <delete-node tree="): ) [17507,17508]"/>
  <delete-node tree="type_name [17480,17508]"/>
  <delete-node tree="): ) [17508,17509]"/>
  <delete-node tree="type_name [17460,17509]"/>
  <delete-node tree="identifier: _allowances [17518,17529]"/>
  <delete-node tree="state_variable_declaration [17460,17530]"/>
  <delete-node tree="identifier: _totalSupply [17554,17566]"/>
  <delete-node tree="state_variable_declaration [17538,17567]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-totalSupply}.      */ [17575,17626]"/>
  <delete-node tree="function: function [17632,17640]"/>
  <delete-node tree="identifier: totalSupply [17641,17652]"/>
  <delete-node tree="(: ( [17652,17653]"/>
  <delete-node tree="): ) [17653,17654]"/>
  <delete-tree tree="visibility [17655,17661]"/>
  <delete-tree tree="state_mutability [17662,17666]"/>
  <delete-tree tree="function_body [17685,17723]"/>
  <delete-node tree="function_definition [17632,17723]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-balanceOf}.      */ [17731,17780]"/>
  <delete-tree tree="function_definition [17786,17896]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [17904,18103]"/>
  <delete-node tree="function: function [18109,18117]"/>
  <delete-node tree="identifier: transfer [18118,18126]"/>
  <delete-node tree="(: ( [18126,18127]"/>
  <delete-tree tree="parameter [18127,18144]"/>
  <delete-node tree=",: , [18144,18145]"/>
  <delete-node tree="): ) [18160,18161]"/>
  <delete-tree tree="visibility [18162,18168]"/>
  <delete-tree tree="return_type_definition [18169,18183]"/>
  <delete-node tree="{: { [18184,18185]"/>
  <delete-node tree="identifier: _transfer [18195,18204]"/>
  <delete-node tree="(: ( [18204,18205]"/>
  <delete-tree tree="call_argument [18205,18217]"/>
  <delete-node tree=",: , [18217,18218]"/>
  <delete-tree tree="call_argument [18219,18228]"/>
  <delete-node tree=",: , [18228,18229]"/>
  <delete-node tree="): ) [18236,18237]"/>
  <delete-node tree="call_expression [18195,18237]"/>
  <delete-node tree="expression_statement [18195,18238]"/>
  <delete-tree tree="return_statement [18248,18260]"/>
  <delete-node tree="}: } [18266,18267]"/>
  <delete-node tree="function_body [18184,18267]"/>
  <delete-node tree="function_definition [18109,18267]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-allowance}.      */ [18275,18324]"/>
  <delete-tree tree="function_definition [18330,18464]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [18472,18605]"/>
  <delete-node tree="function: function [18611,18619]"/>
  <delete-node tree="identifier: approve [18620,18627]"/>
  <delete-node tree="(: ( [18627,18628]"/>
  <delete-tree tree="parameter [18628,18643]"/>
  <delete-node tree=",: , [18643,18644]"/>
  <delete-node tree="): ) [18659,18660]"/>
  <delete-tree tree="visibility [18661,18667]"/>
  <delete-tree tree="return_type_definition [18668,18682]"/>
  <delete-node tree="{: { [18683,18684]"/>
  <delete-node tree="identifier: _approve [18694,18702]"/>
  <delete-node tree="(: ( [18702,18703]"/>
  <delete-tree tree="call_argument [18703,18715]"/>
  <delete-node tree=",: , [18715,18716]"/>
  <delete-tree tree="call_argument [18717,18724]"/>
  <delete-node tree=",: , [18724,18725]"/>
  <delete-node tree="): ) [18732,18733]"/>
  <delete-node tree="call_expression [18694,18733]"/>
  <delete-node tree="expression_statement [18694,18734]"/>
  <delete-tree tree="return_statement [18744,18756]"/>
  <delete-node tree="}: } [18762,18763]"/>
  <delete-node tree="function_body [18683,18763]"/>
  <delete-node tree="function_definition [18611,18763]"/>
  <delete-node tree="comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for `sender`'s tokens of at least      * `amount`.      */ [18771,19229]"/>
  <delete-node tree="function: function [19235,19243]"/>
  <delete-node tree="identifier: transferFrom [19244,19256]"/>
  <delete-node tree="(: ( [19256,19257]"/>
  <delete-tree tree="parameter [19257,19271]"/>
  <delete-node tree=",: , [19271,19272]"/>
  <delete-tree tree="parameter [19273,19290]"/>
  <delete-node tree=",: , [19290,19291]"/>
  <delete-node tree="): ) [19306,19307]"/>
  <delete-tree tree="visibility [19308,19314]"/>
  <delete-tree tree="return_type_definition [19315,19329]"/>
  <delete-node tree="{: { [19330,19331]"/>
  <delete-node tree="identifier: _transfer [19341,19350]"/>
  <delete-node tree="(: ( [19350,19351]"/>
  <delete-tree tree="call_argument [19351,19357]"/>
  <delete-node tree=",: , [19357,19358]"/>
  <delete-tree tree="call_argument [19359,19368]"/>
  <delete-node tree=",: , [19368,19369]"/>
  <delete-node tree="): ) [19376,19377]"/>
  <delete-node tree="call_expression [19341,19377]"/>
  <delete-node tree="expression_statement [19341,19378]"/>
  <delete-node tree="identifier: _approve [19388,19396]"/>
  <delete-node tree="(: ( [19396,19397]"/>
  <delete-tree tree="call_argument [19397,19403]"/>
  <delete-node tree=",: , [19403,19404]"/>
  <delete-tree tree="call_argument [19405,19417]"/>
  <delete-node tree=",: , [19417,19418]"/>
  <delete-tree tree="member_expression [19419,19456]"/>
  <delete-node tree="(: ( [19456,19457]"/>
  <delete-node tree=",: , [19463,19464]"/>
  <delete-node tree="): ) [19507,19508]"/>
  <delete-node tree="call_expression [19419,19508]"/>
  <delete-node tree="call_argument [19419,19508]"/>
  <delete-node tree="): ) [19508,19509]"/>
  <delete-node tree="call_expression [19388,19509]"/>
  <delete-node tree="expression_statement [19388,19510]"/>
  <delete-tree tree="return_statement [19520,19532]"/>
  <delete-node tree="}: } [19538,19539]"/>
  <delete-node tree="function_body [19330,19539]"/>
  <delete-node tree="function_definition [19235,19539]"/>
  <delete-node tree="comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [19547,19942]"/>
  <delete-node tree="function: function [19948,19956]"/>
  <delete-node tree="identifier: increaseAllowance [19957,19974]"/>
  <delete-node tree="(: ( [19974,19975]"/>
  <delete-tree tree="parameter [19975,19990]"/>
  <delete-node tree=",: , [19990,19991]"/>
  <delete-node tree="): ) [20010,20011]"/>
  <delete-tree tree="visibility [20012,20018]"/>
  <delete-tree tree="return_type_definition [20019,20033]"/>
  <delete-tree tree="function_body [20034,20158]"/>
  <delete-node tree="function_definition [19948,20158]"/>
  <delete-node tree="comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [20166,20655]"/>
  <delete-node tree="function: function [20661,20669]"/>
  <delete-node tree="identifier: decreaseAllowance [20670,20687]"/>
  <delete-node tree="(: ( [20687,20688]"/>
  <delete-tree tree="parameter [20688,20703]"/>
  <delete-node tree=",: , [20703,20704]"/>
  <delete-node tree="): ) [20728,20729]"/>
  <delete-tree tree="visibility [20730,20736]"/>
  <delete-tree tree="return_type_definition [20737,20751]"/>
  <delete-node tree="{: { [20752,20753]"/>
  <delete-node tree="identifier: _approve [20763,20771]"/>
  <delete-node tree="(: ( [20771,20772]"/>
  <delete-tree tree="call_argument [20772,20784]"/>
  <delete-node tree=",: , [20784,20785]"/>
  <delete-tree tree="call_argument [20786,20793]"/>
  <delete-node tree=",: , [20793,20794]"/>
  <delete-tree tree="member_expression [20795,20833]"/>
  <delete-node tree="(: ( [20833,20834]"/>
  <delete-tree tree="call_argument [20834,20849]"/>
  <delete-node tree=",: , [20849,20850]"/>
  <delete-node tree="): ) [20890,20891]"/>
  <delete-node tree="call_expression [20795,20891]"/>
  <delete-node tree="call_argument [20795,20891]"/>
  <delete-node tree="): ) [20891,20892]"/>
  <delete-node tree="call_expression [20763,20892]"/>
  <delete-node tree="expression_statement [20763,20893]"/>
  <delete-tree tree="return_statement [20903,20915]"/>
  <delete-node tree="}: } [20921,20922]"/>
  <delete-node tree="function_body [20752,20922]"/>
  <delete-node tree="function_definition [20661,20922]"/>
  <delete-node tree="comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [20930,21406]"/>
  <delete-node tree="comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [21891,22158]"/>
  <delete-node tree="function: function [22164,22172]"/>
  <delete-node tree="identifier: _mint [22173,22178]"/>
  <delete-node tree="(: ( [22178,22179]"/>
  <delete-tree tree="parameter [22179,22194]"/>
  <delete-node tree=",: , [22194,22195]"/>
  <delete-node tree="): ) [22210,22211]"/>
  <delete-tree tree="visibility [22212,22220]"/>
  <delete-node tree="{: { [22221,22222]"/>
  <delete-node tree="identifier: require [22232,22239]"/>
  <delete-node tree="(: ( [22239,22240]"/>
  <delete-tree tree="call_argument [22240,22261]"/>
  <delete-node tree=",: , [22261,22262]"/>
  <delete-node tree="): ) [22296,22297]"/>
  <delete-node tree="call_expression [22232,22297]"/>
  <delete-node tree="expression_statement [22232,22298]"/>
  <delete-node tree="identifier: _totalSupply [22310,22322]"/>
  <delete-node tree="=: = [22323,22324]"/>
  <delete-tree tree="member_expression [22325,22341]"/>
  <delete-node tree="(: ( [22341,22342]"/>
  <delete-node tree="): ) [22348,22349]"/>
  <delete-node tree="call_expression [22325,22349]"/>
  <delete-node tree="assignment_expression [22310,22349]"/>
  <delete-node tree="expression_statement [22310,22350]"/>
  <delete-tree tree="array_access [22360,22378]"/>
  <delete-node tree="=: = [22379,22380]"/>
  <delete-tree tree="member_expression [22381,22403]"/>
  <delete-node tree="(: ( [22403,22404]"/>
  <delete-node tree="): ) [22410,22411]"/>
  <delete-node tree="call_expression [22381,22411]"/>
  <delete-node tree="assignment_expression [22360,22411]"/>
  <delete-node tree="expression_statement [22360,22412]"/>
  <delete-node tree="emit: emit [22422,22426]"/>
  <delete-node tree="identifier: Transfer [22427,22435]"/>
  <delete-node tree="(: ( [22435,22436]"/>
  <delete-tree tree="call_argument [22436,22446]"/>
  <delete-node tree=",: , [22446,22447]"/>
  <delete-tree tree="call_argument [22448,22455]"/>
  <delete-node tree=",: , [22455,22456]"/>
  <delete-node tree="): ) [22463,22464]"/>
  <delete-node tree="emit_statement [22422,22465]"/>
  <delete-node tree="}: } [22471,22472]"/>
  <delete-node tree="function_body [22221,22472]"/>
  <delete-node tree="function_definition [22164,22472]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [22480,22798]"/>
  <delete-node tree="comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [23160,23586]"/>
  <delete-tree tree="parameter [23610,23623]"/>
  <delete-node tree=",: , [23640,23641]"/>
  <delete-tree tree="visibility [23658,23666]"/>
  <delete-tree tree="call_argument [83418,83449]"/>
  <delete-tree tree="assignment_expression [23838,23874]"/>
  <delete-tree tree="call_argument [23899,23904]"/>
  <delete-tree tree="call_argument [23915,23921]"/>
  <delete-tree tree="call_expression [52113,52125]"/>
  <delete-tree tree="member_expression [52241,52276]"/>
  <delete-node tree="identifier: _approve [52158,52166]"/>
  <delete-node tree="(: ( [52166,52167]"/>
  <delete-node tree=",: , [52191,52192]"/>
  <delete-tree tree="call_argument [52210,52222]"/>
  <delete-node tree=",: , [52222,52223]"/>
  <delete-node tree="call_argument [52241,52329]"/>
  <delete-node tree="): ) [52329,52330]"/>
  <delete-node tree="call_expression [52158,52330]"/>
  <delete-tree tree="array_access [21769,21789]"/>
  <delete-node tree="=: = [21790,21791]"/>
  <delete-tree tree="member_expression [21792,21816]"/>
  <delete-node tree="(: ( [21816,21817]"/>
  <delete-node tree="): ) [21823,21824]"/>
  <delete-node tree="call_expression [21792,21824]"/>
  <delete-node tree="assignment_expression [21769,21824]"/>
  <delete-node tree="expression_statement [21769,21825]"/>
  <delete-node tree="comment: /**      * @dev Destroys `amount` tokens from `account`.`amount` is then deducted      * from the caller's allowance.      *      * See {_burn} and {_approve}.      */ [23938,24110]"/>
  <delete-node tree="function: function [24116,24124]"/>
  <delete-node tree="identifier: _burnFrom [24125,24134]"/>
  <delete-node tree="(: ( [24134,24135]"/>
  <delete-tree tree="parameter [24135,24150]"/>
  <delete-node tree=",: , [24150,24151]"/>
  <delete-tree tree="parameter [24152,24166]"/>
  <delete-node tree="): ) [24166,24167]"/>
  <delete-node tree="{: { [24177,24178]"/>
  <delete-node tree="identifier: _burn [24188,24193]"/>
  <delete-node tree="(: ( [24193,24194]"/>
  <delete-tree tree="call_argument [24194,24201]"/>
  <delete-node tree=",: , [24201,24202]"/>
  <delete-node tree="): ) [24209,24210]"/>
  <delete-node tree="call_expression [24188,24210]"/>
  <delete-node tree="expression_statement [24188,24211]"/>
  <delete-node tree="identifier: _approve [24221,24229]"/>
  <delete-node tree="(: ( [24229,24230]"/>
  <delete-tree tree="call_argument [24230,24237]"/>
  <delete-node tree=",: , [24237,24238]"/>
  <delete-tree tree="call_argument [24239,24251]"/>
  <delete-node tree=",: , [24251,24252]"/>
  <delete-tree tree="member_expression [24253,24291]"/>
  <delete-node tree="(: ( [24291,24292]"/>
  <delete-node tree=",: , [24298,24299]"/>
  <delete-node tree="): ) [24338,24339]"/>
  <delete-node tree="call_expression [24253,24339]"/>
  <delete-node tree="call_argument [24253,24339]"/>
  <delete-node tree="): ) [24339,24340]"/>
  <delete-node tree="call_expression [24221,24340]"/>
  <delete-node tree="expression_statement [24221,24341]"/>
  <delete-node tree="}: } [24347,24348]"/>
  <delete-node tree="function_body [24177,24348]"/>
  <delete-node tree="function_definition [24116,24348]"/>
  <delete-node tree="identifier: totalRewarded [73015,73028]"/>
  <delete-tree tree="call_argument [73035,73049]"/>
  <delete-node tree="constant: constant [64454,64462]"/>
  <delete-node tree="identifier: UNISWAP_FACTORY [64463,64478]"/>
  <delete-node tree="=: = [64479,64480]"/>
  <delete-tree tree="type_cast_expression [64481,64532]"/>
  <delete-node tree="state_variable_declaration [64438,64533]"/>
  <delete-tree tree="visibility [64549,64557]"/>
  <delete-node tree="identifier: _dao [64558,64562]"/>
  <delete-node tree="state_variable_declaration [64541,64563]"/>
  <delete-tree tree="visibility [64577,64585]"/>
  <delete-node tree="identifier: _dollar [64586,64593]"/>
  <delete-node tree="state_variable_declaration [64569,64594]"/>
  <delete-tree tree="state_variable_declaration [64602,64629]"/>
  <delete-tree tree="state_variable_declaration [64635,64665]"/>
  <delete-tree tree="visibility [64679,64687]"/>
  <delete-node tree="identifier: _index [64688,64694]"/>
  <delete-node tree="state_variable_declaration [64671,64695]"/>
  <delete-tree tree="visibility [64709,64717]"/>
  <delete-node tree="identifier: _cumulative [64718,64729]"/>
  <delete-node tree="state_variable_declaration [64701,64730]"/>
  <delete-tree tree="state_variable_declaration [64736,64763]"/>
  <delete-tree tree="visibility [64779,64787]"/>
  <delete-node tree="identifier: _reserve [64788,64796]"/>
  <delete-node tree="state_variable_declaration [64771,64797]"/>
  <delete-tree tree="constructor_definition [64805,64904]"/>
  <delete-node tree="function: function [64912,64920]"/>
  <delete-node tree="identifier: setup [64921,64926]"/>
  <delete-node tree="(: ( [64926,64927]"/>
  <delete-node tree="): ) [64927,64928]"/>
  <delete-tree tree="visibility [64929,64935]"/>
  <delete-tree tree="modifier_invocation [64936,64943]"/>
  <delete-node tree="{: { [64944,64945]"/>
  <delete-tree tree="expression_statement [64955,65042]"/>
  <delete-tree tree="variable_declaration_statement [65054,65122]"/>
  <delete-tree tree="expression_statement [65132,65167]"/>
  <delete-node tree="}: } [65308,65309]"/>
  <delete-node tree="function_body [64944,65309]"/>
  <delete-node tree="function_definition [64912,65309]"/>
  <delete-node tree="comment: /**      * Trades/Liquidity: (1) Initializes reserve and blockTimestampLast (can calculate a price)      *                   (2) Has non-zero cumulative prices      *      * Steps: (1) Captures a reference blockTimestampLast      *        (2) First reported value      */ [65317,65594]"/>
  <delete-node tree="function: function [65857,65865]"/>
  <delete-node tree="identifier: initializeOracle [65866,65882]"/>
  <delete-node tree="(: ( [65882,65883]"/>
  <delete-node tree="): ) [65883,65884]"/>
  <delete-node tree="{: { [65893,65894]"/>
  <delete-tree tree="variable_declaration_statement [65904,65932]"/>
  <delete-node tree="=: = [65966,65967]"/>
  <delete-tree tree="ternary_expression [65968,66065]"/>
  <delete-node tree="variable_declaration_statement [65942,66066]"/>
  <delete-tree tree="variable_declaration_statement [66076,66161]"/>
  <delete-tree tree="if_statement [66171,66453]"/>
  <delete-node tree="}: } [66459,66460]"/>
  <delete-node tree="function_body [65893,66460]"/>
  <delete-node tree="function_definition [65857,66460]"/>
  <delete-node tree="function: function [66468,66476]"/>
  <delete-node tree="identifier: updateOracle [66477,66489]"/>
  <delete-node tree="(: ( [66489,66490]"/>
  <delete-node tree="): ) [66490,66491]"/>
  <delete-node tree="returns: returns [66500,66507]"/>
  <delete-node tree="(: ( [66508,66509]"/>
  <delete-node tree=",: , [66528,66529]"/>
  <delete-tree tree="parameter [66530,66534]"/>
  <delete-node tree="): ) [66534,66535]"/>
  <delete-node tree="return_type_definition [66500,66535]"/>
  <delete-node tree="{: { [66536,66537]"/>
  <delete-node tree="=: = [66619,66620]"/>
  <delete-tree tree="call_expression [66621,66636]"/>
  <delete-node tree="variable_declaration_statement [66599,66637]"/>
  <delete-tree tree="variable_declaration_statement [66647,66712]"/>
  <delete-node tree="=: = [66735,66736]"/>
  <delete-tree tree="boolean_literal [66737,66741]"/>
  <delete-node tree="variable_declaration_statement [66724,66742]"/>
  <delete-tree tree="if_statement [66752,66847]"/>
  <delete-tree tree="if_statement [66857,66949]"/>
  <delete-tree tree="if_statement [66959,67018]"/>
  <delete-tree tree="return_statement [67030,67052]"/>
  <delete-node tree="}: } [67058,67059]"/>
  <delete-node tree="function_body [66536,67059]"/>
  <delete-node tree="function_definition [66468,67059]"/>
  <delete-tree tree="type_name [67192,67198]"/>
  <delete-tree tree="member_expression [67226,67272]"/>
  <delete-tree tree="type_cast_expression [67273,67287]"/>
  <delete-tree tree="variable_declaration_statement [67299,67348]"/>
  <delete-node tree="comment: // overflow is desired [67349,67371]"/>
  <delete-node tree="=: = [67405,67406]"/>
  <delete-tree tree="ternary_expression [67407,67456]"/>
  <delete-node tree="variable_declaration_statement [67381,67457]"/>
  <delete-tree tree="expression_statement [67576,67604]"/>
  <delete-tree tree="expression_statement [67614,67644]"/>
  <delete-tree tree="return_statement [67656,67679]"/>
  <delete-tree tree="visibility [65619,65625]"/>
  <delete-tree tree="modifier_invocation [65626,65633]"/>
  <delete-node tree="returns: returns [65634,65641]"/>
  <delete-node tree="(: ( [65642,65643]"/>
  <delete-node tree=",: , [65662,65663]"/>
  <delete-tree tree="parameter [65664,65668]"/>
  <delete-node tree="): ) [65668,65669]"/>
  <delete-node tree="return_type_definition [65634,65669]"/>
  <delete-tree tree="call_argument [67509,67554]"/>
  <delete-node tree=",: , [67554,67555]"/>
  <delete-tree tree="call_argument [67556,67562]"/>
  <delete-node tree="identifier: _initialized [65685,65697]"/>
  <delete-tree tree="block_statement [65699,65747]"/>
  <delete-node tree="else: else [65748,65752]"/>
  <delete-tree tree="expression_statement [65768,65787]"/>
  <delete-node tree="(: ( [65808,65809]"/>
  <delete-node tree=",: , [65822,65823]"/>
  <delete-node tree="): ) [65829,65830]"/>
  <delete-node tree="tuple_expression [65808,65830]"/>
  <delete-node tree="function: function [67694,67702]"/>
  <delete-node tree="identifier: updateReserve [67703,67716]"/>
  <delete-node tree="(: ( [67716,67717]"/>
  <delete-node tree="): ) [67717,67718]"/>
  <delete-node tree="{: { [67745,67746]"/>
  <delete-node tree="=: = [67776,67777]"/>
  <delete-node tree="identifier: _reserve [67778,67786]"/>
  <delete-node tree="variable_declaration_statement [67756,67787]"/>
  <delete-tree tree="variable_declaration_statement [67797,67857]"/>
  <delete-tree tree="expression_statement [67867,67912]"/>
  <delete-node tree="comment: // get counter's reserve [67913,67937]"/>
  <delete-tree tree="return_statement [67949,67968]"/>
  <delete-node tree="}: } [67974,67975]"/>
  <delete-node tree="function_body [67745,67975]"/>
  <delete-node tree="function_definition [67694,67975]"/>
  <delete-node tree="function: function [67983,67991]"/>
  <delete-node tree="identifier: usdc [67992,67996]"/>
  <delete-node tree="(: ( [67996,67997]"/>
  <delete-node tree="): ) [67997,67998]"/>
  <delete-tree tree="state_mutability [68008,68012]"/>
  <delete-tree tree="return_type_definition [68013,68030]"/>
  <delete-tree tree="function_body [68031,68083]"/>
  <delete-node tree="function_definition [67983,68083]"/>
  <delete-node tree="function: function [68091,68099]"/>
  <delete-node tree="identifier: pair [68100,68104]"/>
  <delete-node tree="(: ( [68104,68105]"/>
  <delete-node tree="): ) [68105,68106]"/>
  <delete-tree tree="state_mutability [68116,68120]"/>
  <delete-tree tree="return_type_definition [68121,68138]"/>
  <delete-tree tree="function_body [68139,68179]"/>
  <delete-node tree="function_definition [68091,68179]"/>
  <delete-node tree="modifier: modifier [68280,68288]"/>
  <delete-node tree="identifier: onlyDao [68289,68296]"/>
  <delete-node tree="(: ( [68296,68297]"/>
  <delete-node tree="): ) [68297,68298]"/>
  <delete-node tree="{: { [68299,68300]"/>
  <delete-node tree="}: } [68430,68431]"/>
  <delete-node tree="function_body [68299,68431]"/>
  <delete-node tree="modifier_definition [68280,68431]"/>
  <delete-node tree="contract: contract [51582,51590]"/>
  <delete-node tree="identifier: Dollar [51591,51597]"/>
  <delete-node tree="is: is [51598,51600]"/>
  <delete-tree tree="inheritance_specifier [51601,51608]"/>
  <delete-node tree=",: , [51608,51609]"/>
  <delete-tree tree="inheritance_specifier [51610,51620]"/>
  <delete-node tree=",: , [51620,51621]"/>
  <delete-tree tree="inheritance_specifier [51622,51635]"/>
  <delete-node tree=",: , [51635,51636]"/>
  <delete-tree tree="inheritance_specifier [51637,51648]"/>
  <delete-node tree=",: , [51648,51649]"/>
  <delete-tree tree="inheritance_specifier [51650,51663]"/>
  <delete-node tree="{: { [51664,51665]"/>
  <delete-node tree="constructor: constructor [51673,51684]"/>
  <delete-node tree="(: ( [51684,51685]"/>
  <delete-node tree="): ) [51685,51686]"/>
  <delete-tree tree="modifier_invocation [51692,51739]"/>
  <delete-tree tree="modifier_invocation [51745,51758]"/>
  <delete-node tree="public: public [51764,51770]"/>
  <delete-node tree="constructor_definition [51673,51779]"/>
  <delete-node tree="function: function [51938,51946]"/>
  <delete-node tree="identifier: transferFrom [51947,51959]"/>
  <delete-node tree="(: ( [51959,51960]"/>
  <delete-tree tree="parameter [51960,51974]"/>
  <delete-node tree=",: , [51974,51975]"/>
  <delete-tree tree="parameter [51976,51993]"/>
  <delete-node tree=",: , [51993,51994]"/>
  <delete-node tree="): ) [52009,52010]"/>
  <delete-tree tree="return_type_definition [52018,52032]"/>
  <delete-node tree="{: { [52033,52034]"/>
  <delete-node tree="identifier: _transfer [52044,52053]"/>
  <delete-node tree="(: ( [52053,52054]"/>
  <delete-node tree=",: , [52060,52061]"/>
  <delete-node tree=",: , [52071,52072]"/>
  <delete-node tree="): ) [52079,52080]"/>
  <delete-node tree="call_expression [52044,52080]"/>
  <delete-node tree="expression_statement [52044,52081]"/>
  <delete-tree tree="return_statement [52352,52364]"/>
  <delete-node tree="}: } [52370,52371]"/>
  <delete-node tree="function_body [52033,52371]"/>
  <delete-node tree="function_definition [51938,52371]"/>
  <delete-node tree="}: } [52373,52374]"/>
  <delete-node tree="contract_body [51664,52374]"/>
  <delete-node tree="contract_declaration [51582,52374]"/>
  <delete-node tree="interface: interface [52378,52387]"/>
  <delete-node tree="identifier: IUniswapV2Factory [52388,52405]"/>
  <delete-node tree="{: { [52406,52407]"/>
  <delete-tree tree="function_definition [52507,52556]"/>
  <delete-tree tree="function_definition [52562,52617]"/>
  <delete-tree tree="function_definition [52625,52711]"/>
  <delete-tree tree="function_definition [52717,52778]"/>
  <delete-tree tree="function_definition [52784,52839]"/>
  <delete-tree tree="function_definition [52847,52931]"/>
  <delete-tree tree="function_definition [52939,52975]"/>
  <delete-tree tree="function_definition [52981,53023]"/>
  <delete-node tree="}: } [53025,53026]"/>
  <delete-node tree="contract_body [52406,53026]"/>
  <delete-node tree="interface_declaration [52378,53026]"/>
  <delete-node tree="library: library [55620,55627]"/>
  <delete-node tree="identifier: Babylonian [55628,55638]"/>
  <delete-node tree="{: { [55639,55640]"/>
  <delete-node tree="function: function [55646,55654]"/>
  <delete-node tree="identifier: sqrt [55655,55659]"/>
  <delete-node tree="(: ( [55659,55660]"/>
  <delete-tree tree="parameter [55660,55666]"/>
  <delete-node tree="): ) [55666,55667]"/>
  <delete-tree tree="visibility [55668,55676]"/>
  <delete-tree tree="return_type_definition [55682,55698]"/>
  <delete-tree tree="function_body [55699,55972]"/>
  <delete-node tree="function_definition [55646,55972]"/>
  <delete-node tree="}: } [55974,55975]"/>
  <delete-node tree="contract_body [55639,55975]"/>
  <delete-node tree="library_declaration [55620,55975]"/>
  <delete-node tree="library: library [56083,56090]"/>
  <delete-node tree="identifier: FixedPoint [56091,56101]"/>
  <delete-node tree="{: { [56102,56103]"/>
  <delete-node tree="comment: // range: [0, 2**112 - 1] [56109,56134]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [56140,56165]"/>
  <delete-tree tree="struct_declaration [56171,56217]"/>
  <delete-node tree="comment: // range: [0, 2**144 - 1] [56225,56250]"/>
  <delete-node tree="comment: // resolution: 1 / 2**112 [56256,56281]"/>
  <delete-tree tree="struct_declaration [56287,56330]"/>
  <delete-tree tree="state_variable_declaration [56338,56378]"/>
  <delete-tree tree="type_name [56384,56388]"/>
  <delete-tree tree="visibility [56389,56396]"/>
  <delete-node tree="constant: constant [56397,56405]"/>
  <delete-node tree="identifier: Q112 [56406,56410]"/>
  <delete-node tree="=: = [56411,56412]"/>
  <delete-tree tree="primitive_type [56413,56417]"/>
  <delete-node tree="(: ( [56417,56418]"/>
  <delete-node tree="): ) [56419,56420]"/>
  <delete-node tree="type_cast_expression [56413,56420]"/>
  <delete-node tree="&lt;&lt;: &lt;&lt; [56421,56423]"/>
  <delete-node tree="identifier: RESOLUTION [56424,56434]"/>
  <delete-node tree="binary_expression [56413,56434]"/>
  <delete-node tree="state_variable_declaration [56384,56435]"/>
  <delete-tree tree="state_variable_declaration [56441,56489]"/>
  <delete-node tree="comment: // encode a uint112 as a UQ112x112 [56497,56531]"/>
  <delete-node tree="function: function [56537,56545]"/>
  <delete-node tree="identifier: encode [56546,56552]"/>
  <delete-node tree="(: ( [56552,56553]"/>
  <delete-tree tree="parameter [56553,56562]"/>
  <delete-node tree="): ) [56562,56563]"/>
  <delete-tree tree="visibility [56564,56572]"/>
  <delete-tree tree="return_type_definition [56578,56604]"/>
  <delete-tree tree="function_body [56605,56666]"/>
  <delete-node tree="function_definition [56537,56666]"/>
  <delete-node tree="comment: // encodes a uint144 as a UQ144x112 [56674,56709]"/>
  <delete-tree tree="function_definition [56715,56847]"/>
  <delete-node tree="comment: // divide a UQ112x112 by a uint112, returning a UQ112x112 [56855,56912]"/>
  <delete-tree tree="function_definition [56918,57116]"/>
  <delete-node tree="comment: // multiply a UQ112x112 by a uint, returning a UQ144x112 [57124,57180]"/>
  <delete-node tree="comment: // reverts on overflow [57186,57208]"/>
  <delete-node tree="function: function [57214,57222]"/>
  <delete-node tree="identifier: mul [57223,57226]"/>
  <delete-node tree="(: ( [57226,57227]"/>
  <delete-tree tree="parameter [57227,57248]"/>
  <delete-node tree=",: , [57248,57249]"/>
  <delete-tree tree="parameter [57250,57256]"/>
  <delete-node tree="): ) [57256,57257]"/>
  <delete-tree tree="visibility [57258,57266]"/>
  <delete-tree tree="state_mutability [57267,57271]"/>
  <delete-tree tree="return_type_definition [57272,57298]"/>
  <delete-node tree="{: { [57299,57300]"/>
  <delete-tree tree="variable_declaration_statement [57310,57317]"/>
  <delete-node tree="identifier: require [57327,57334]"/>
  <delete-node tree="(: ( [57334,57335]"/>
  <delete-tree tree="call_argument [57335,57389]"/>
  <delete-node tree=",: , [57389,57390]"/>
  <delete-node tree="): ) [57428,57429]"/>
  <delete-node tree="call_expression [57327,57429]"/>
  <delete-node tree="expression_statement [57327,57430]"/>
  <delete-tree tree="return_statement [57440,57460]"/>
  <delete-node tree="}: } [57466,57467]"/>
  <delete-node tree="function_body [57299,57467]"/>
  <delete-node tree="function_definition [57214,57467]"/>
  <delete-node tree="comment: // returns a UQ112x112 which represents the ratio of the numerator to the denominator [57475,57560]"/>
  <delete-node tree="comment: // equivalent to encode(numerator).div(denominator) [57566,57617]"/>
  <delete-node tree="function: function [57623,57631]"/>
  <delete-node tree="identifier: fraction [57632,57640]"/>
  <delete-node tree="(: ( [57640,57641]"/>
  <delete-tree tree="parameter [57641,57658]"/>
  <delete-node tree=",: , [57658,57659]"/>
  <delete-tree tree="parameter [57660,57679]"/>
  <delete-node tree="): ) [57679,57680]"/>
  <delete-tree tree="visibility [57681,57689]"/>
  <delete-tree tree="state_mutability [57690,57694]"/>
  <delete-tree tree="return_type_definition [57695,57721]"/>
  <delete-node tree="{: { [57722,57723]"/>
  <delete-tree tree="return_statement [57795,57862]"/>
  <delete-node tree="}: } [57868,57869]"/>
  <delete-node tree="function_body [57722,57869]"/>
  <delete-node tree="function_definition [57623,57869]"/>
  <delete-node tree="comment: // decode a UQ112x112 into a uint112 by truncating after the radix point [57877,57949]"/>
  <delete-tree tree="function_definition [57955,58082]"/>
  <delete-node tree="comment: // decode a UQ144x112 into a uint144 by truncating after the radix point [58090,58162]"/>
  <delete-tree tree="function_definition [58168,58298]"/>
  <delete-node tree="comment: // take the reciprocal of a UQ112x112 [58306,58343]"/>
  <delete-tree tree="function_definition [58349,58556]"/>
  <delete-node tree="comment: // square root of a UQ112x112 [58564,58593]"/>
  <delete-tree tree="function_definition [58599,58762]"/>
  <delete-node tree="}: } [58764,58765]"/>
  <delete-node tree="contract_body [56102,58765]"/>
  <delete-node tree="library_declaration [56083,58765]"/>
  <delete-node tree="library: library [58862,58869]"/>
  <delete-node tree="identifier: UniswapV2OracleLibrary [58870,58892]"/>
  <delete-node tree="{: { [58893,58894]"/>
  <delete-tree tree="using_directive [58900,58923]"/>
  <delete-node tree="comment: // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1] [58931,59038]"/>
  <delete-node tree="function: function [59044,59052]"/>
  <delete-node tree="identifier: currentBlockTimestamp [59053,59074]"/>
  <delete-node tree="(: ( [59074,59075]"/>
  <delete-node tree="): ) [59075,59076]"/>
  <delete-tree tree="visibility [59077,59085]"/>
  <delete-tree tree="state_mutability [59086,59090]"/>
  <delete-tree tree="return_type_definition [59091,59107]"/>
  <delete-node tree="{: { [59108,59109]"/>
  <delete-node tree="return: return [59119,59125]"/>
  <delete-tree tree="primitive_type [59126,59132]"/>
  <delete-node tree="(: ( [59132,59133]"/>
  <delete-node tree="): ) [59158,59159]"/>
  <delete-node tree="type_cast_expression [59126,59159]"/>
  <delete-node tree="return_statement [59119,59160]"/>
  <delete-node tree="}: } [59166,59167]"/>
  <delete-node tree="function_body [59108,59167]"/>
  <delete-node tree="function_definition [59044,59167]"/>
  <delete-node tree="comment: // produces the cumulative price using counterfactuals to save gas and avoid a call to sync. [59175,59267]"/>
  <delete-tree tree="function_definition [59273,60330]"/>
  <delete-node tree="}: } [60332,60333]"/>
  <delete-node tree="contract_body [58893,60333]"/>
  <delete-node tree="library_declaration [58862,60333]"/>
  <delete-tree tree="library_declaration [60337,62307]"/>
  <delete-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [63065,63640]"/>
  <delete-node tree="contract: contract [63642,63650]"/>
  <delete-node tree="identifier: IUSDC [63651,63656]"/>
  <delete-node tree="{: { [63657,63658]"/>
  <delete-node tree="function: function [63664,63672]"/>
  <delete-node tree="identifier: isBlacklisted [63673,63686]"/>
  <delete-node tree="(: ( [63686,63687]"/>
  <delete-node tree="): ) [63703,63704]"/>
  <delete-tree tree="return_type_definition [63719,63733]"/>
  <delete-node tree="function_definition [63664,63734]"/>
  <delete-node tree="}: } [63736,63737]"/>
  <delete-node tree="contract_body [63657,63737]"/>
  <delete-node tree="contract_declaration [63642,63737]"/>
  <delete-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [63741,64316]"/>
  <delete-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [68438,69013]"/>
  <delete-node tree="contract: contract [69015,69023]"/>
  <delete-node tree="identifier: IDAO [69024,69028]"/>
  <delete-node tree="{: { [69029,69030]"/>
  <delete-node tree="function: function [69036,69044]"/>
  <delete-node tree="identifier: epoch [69045,69050]"/>
  <delete-node tree="(: ( [69050,69051]"/>
  <delete-node tree="): ) [69051,69052]"/>
  <delete-tree tree="state_mutability [69062,69066]"/>
  <delete-tree tree="return_type_definition [69067,69084]"/>
  <delete-node tree="function_definition [69036,69085]"/>
  <delete-node tree="}: } [69087,69088]"/>
  <delete-node tree="contract_body [69029,69088]"/>
  <delete-node tree="contract_declaration [69015,69088]"/>
  <delete-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [69092,69667]"/>
  <delete-node tree="contract: contract [69669,69677]"/>
  <delete-node tree="identifier: PoolAccount [69678,69689]"/>
  <delete-node tree="{: { [69690,69691]"/>
  <delete-tree tree="enum_declaration [69697,69766]"/>
  <delete-node tree="struct: struct [69774,69780]"/>
  <delete-node tree="identifier: State [69781,69786]"/>
  <delete-node tree="{: { [69787,69788]"/>
  <delete-node tree="identifier: staged [69806,69812]"/>
  <delete-node tree="struct_member [69798,69813]"/>
  <delete-node tree="identifier: claimable [69831,69840]"/>
  <delete-node tree="struct_member [69823,69841]"/>
  <delete-node tree="identifier: bonded [69859,69865]"/>
  <delete-node tree="struct_member [69851,69866]"/>
  <delete-node tree="identifier: phantom [69884,69891]"/>
  <delete-node tree="struct_member [69876,69892]"/>
  <delete-node tree="identifier: fluidUntil [69910,69920]"/>
  <delete-node tree="struct_member [69902,69921]"/>
  <delete-node tree="}: } [69927,69928]"/>
  <delete-node tree="struct_declaration [69774,69928]"/>
  <delete-node tree="}: } [69930,69931]"/>
  <delete-node tree="contract_body [69690,69931]"/>
  <delete-node tree="contract_declaration [69669,69931]"/>
  <delete-node tree="contract: contract [69935,69943]"/>
  <delete-node tree="identifier: PoolStorage [69944,69955]"/>
  <delete-node tree="{: { [69956,69957]"/>
  <delete-tree tree="struct_declaration [69963,70054]"/>
  <delete-node tree="struct: struct [70060,70066]"/>
  <delete-node tree="identifier: Balance [70067,70074]"/>
  <delete-node tree="{: { [70075,70076]"/>
  <delete-node tree="identifier: staged [70094,70100]"/>
  <delete-node tree="struct_member [70086,70101]"/>
  <delete-node tree="identifier: claimable [70119,70128]"/>
  <delete-node tree="struct_member [70111,70129]"/>
  <delete-node tree="identifier: bonded [70147,70153]"/>
  <delete-node tree="struct_member [70139,70154]"/>
  <delete-node tree="identifier: phantom [70172,70179]"/>
  <delete-node tree="struct_member [70164,70180]"/>
  <delete-node tree="}: } [70186,70187]"/>
  <delete-node tree="struct_declaration [70060,70187]"/>
  <delete-tree tree="struct_declaration [70195,70353]"/>
  <delete-node tree="}: } [70355,70356]"/>
  <delete-node tree="contract_body [69956,70356]"/>
  <delete-node tree="contract_declaration [69935,70356]"/>
  <delete-tree tree="contract_declaration [70360,70414]"/>
  <delete-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [70418,70993]"/>
  <delete-node tree="contract: contract [70995,71003]"/>
  <delete-node tree="identifier: PoolGetters [71004,71015]"/>
  <delete-node tree="is: is [71016,71018]"/>
  <delete-tree tree="inheritance_specifier [71019,71028]"/>
  <delete-node tree="{: { [71029,71030]"/>
  <delete-node tree="comment: /**      * Global      */ [71071,71098]"/>
  <delete-tree tree="function_definition [71106,71204]"/>
  <delete-node tree="function: function [71212,71220]"/>
  <delete-node tree="identifier: dao [71221,71224]"/>
  <delete-node tree="(: ( [71224,71225]"/>
  <delete-node tree="): ) [71225,71226]"/>
  <delete-tree tree="state_mutability [71234,71238]"/>
  <delete-tree tree="return_type_definition [71239,71253]"/>
  <delete-tree tree="function_body [71254,71299]"/>
  <delete-node tree="function_definition [71212,71299]"/>
  <delete-tree tree="function_definition [71307,71403]"/>
  <delete-tree tree="function_definition [71411,71504]"/>
  <delete-tree tree="function_definition [71512,71612]"/>
  <delete-tree tree="function_definition [71620,71720]"/>
  <delete-tree tree="function_definition [71728,71834]"/>
  <delete-tree tree="function_definition [71842,71944]"/>
  <delete-node tree="function: function [72096,72104]"/>
  <delete-node tree="identifier: paused [72105,72111]"/>
  <delete-node tree="(: ( [72111,72112]"/>
  <delete-node tree="): ) [72112,72113]"/>
  <delete-tree tree="visibility [72114,72120]"/>
  <delete-tree tree="function_body [72141,72180]"/>
  <delete-node tree="function_definition [72096,72180]"/>
  <delete-node tree="comment: /**      * Account      */ [72188,72216]"/>
  <delete-node tree="function: function [72224,72232]"/>
  <delete-node tree="identifier: balanceOfStaged [72233,72248]"/>
  <delete-node tree="(: ( [72248,72249]"/>
  <delete-node tree="): ) [72264,72265]"/>
  <delete-tree tree="visibility [72266,72272]"/>
  <delete-tree tree="state_mutability [72273,72277]"/>
  <delete-tree tree="return_type_definition [72278,72295]"/>
  <delete-tree tree="function_body [72296,72353]"/>
  <delete-node tree="function_definition [72224,72353]"/>
  <delete-tree tree="function_definition [72361,72496]"/>
  <delete-tree tree="function_definition [72504,72633]"/>
  <delete-tree tree="function_definition [72641,72772]"/>
  <delete-node tree="function: function [72780,72788]"/>
  <delete-node tree="identifier: balanceOfRewarded [72789,72806]"/>
  <delete-node tree="(: ( [72806,72807]"/>
  <delete-tree tree="parameter [72807,72822]"/>
  <delete-node tree="): ) [72822,72823]"/>
  <delete-tree tree="visibility [72824,72830]"/>
  <delete-tree tree="state_mutability [72831,72835]"/>
  <delete-tree tree="return_type_definition [72836,72853]"/>
  <delete-node tree="{: { [72854,72855]"/>
  <delete-node tree="=: = [72885,72886]"/>
  <delete-node tree="variable_declaration_statement [72865,72901]"/>
  <delete-tree tree="if_statement [72911,72968]"/>
  <delete-tree tree="if_statement [73275,73412]"/>
  <delete-tree tree="return_statement [73422,73431]"/>
  <delete-node tree="}: } [73437,73438]"/>
  <delete-node tree="function_body [72854,73438]"/>
  <delete-node tree="function_definition [72780,73438]"/>
  <delete-node tree="function: function [73446,73454]"/>
  <delete-node tree="identifier: statusOf [73455,73463]"/>
  <delete-node tree="(: ( [73463,73464]"/>
  <delete-tree tree="parameter [73464,73479]"/>
  <delete-node tree="): ) [73479,73480]"/>
  <delete-tree tree="visibility [73481,73487]"/>
  <delete-tree tree="state_mutability [73488,73492]"/>
  <delete-tree tree="return_type_definition [73493,73521]"/>
  <delete-node tree="{: { [73522,73523]"/>
  <delete-node tree="return: return [73533,73539]"/>
  <delete-node tree="?: ? [73587,73588]"/>
  <delete-tree tree="member_expression [73602,73627]"/>
  <delete-node tree=":: : [73628,73629]"/>
  <delete-tree tree="member_expression [73643,73661]"/>
  <delete-node tree="ternary_expression [73540,73661]"/>
  <delete-node tree=".: . [73661,73662]"/>
  <delete-node tree="identifier: Fluid [73662,73667]"/>
  <delete-node tree="member_expression [73540,73667]"/>
  <delete-node tree="return_statement [73533,73668]"/>
  <delete-node tree="}: } [73674,73675]"/>
  <delete-node tree="function_body [73522,73675]"/>
  <delete-node tree="function_definition [73446,73675]"/>
  <delete-node tree="comment: /**      * Epoch      */ [73683,73709]"/>
  <delete-tree tree="function_definition [73717,73805]"/>
  <delete-node tree="}: } [73807,73808]"/>
  <delete-node tree="contract_body [71029,73808]"/>
  <delete-node tree="contract_declaration [70995,73808]"/>
  <delete-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [73812,74387]"/>
  <delete-node tree="contract: contract [74389,74397]"/>
  <delete-node tree="identifier: PoolSetters [74398,74409]"/>
  <delete-node tree="is: is [74410,74412]"/>
  <delete-tree tree="inheritance_specifier [74413,74422]"/>
  <delete-node tree=",: , [74422,74423]"/>
  <delete-tree tree="inheritance_specifier [74424,74435]"/>
  <delete-node tree="{: { [74436,74437]"/>
  <delete-node tree="comment: /**      * Global      */ [74478,74505]"/>
  <delete-node tree="function: function [74513,74521]"/>
  <delete-node tree="identifier: pause [74522,74527]"/>
  <delete-node tree="(: ( [74527,74528]"/>
  <delete-node tree="): ) [74528,74529]"/>
  <delete-tree tree="function_body [74539,74578]"/>
  <delete-node tree="function_definition [74513,74578]"/>
  <delete-node tree="comment: /**      * Account      */ [74586,74614]"/>
  <delete-node tree="function: function [74622,74630]"/>
  <delete-node tree="identifier: incrementBalanceOfBonded [74631,74655]"/>
  <delete-node tree="(: ( [74655,74656]"/>
  <delete-tree tree="parameter [74656,74671]"/>
  <delete-node tree=",: , [74671,74672]"/>
  <delete-node tree="): ) [74687,74688]"/>
  <delete-node tree="{: { [74698,74699]"/>
  <delete-tree tree="member_expression [74709,74740]"/>
  <delete-node tree="=: = [74741,74742]"/>
  <delete-tree tree="member_expression [74743,74778]"/>
  <delete-node tree="(: ( [74778,74779]"/>
  <delete-node tree="): ) [74785,74786]"/>
  <delete-node tree="call_expression [74743,74786]"/>
  <delete-node tree="assignment_expression [74709,74786]"/>
  <delete-node tree="expression_statement [74709,74787]"/>
  <delete-tree tree="member_expression [74797,74818]"/>
  <delete-node tree="=: = [74819,74820]"/>
  <delete-tree tree="member_expression [74821,74846]"/>
  <delete-node tree="(: ( [74846,74847]"/>
  <delete-node tree="): ) [74853,74854]"/>
  <delete-node tree="call_expression [74821,74854]"/>
  <delete-node tree="assignment_expression [74797,74854]"/>
  <delete-node tree="expression_statement [74797,74855]"/>
  <delete-node tree="}: } [74861,74862]"/>
  <delete-node tree="function_body [74698,74862]"/>
  <delete-node tree="function_definition [74622,74862]"/>
  <delete-node tree="function: function [74870,74878]"/>
  <delete-node tree="identifier: decrementBalanceOfBonded [74879,74903]"/>
  <delete-node tree="(: ( [74903,74904]"/>
  <delete-tree tree="parameter [74904,74919]"/>
  <delete-node tree=",: , [74919,74920]"/>
  <delete-tree tree="parameter [74921,74935]"/>
  <delete-node tree=",: , [74935,74936]"/>
  <delete-tree tree="parameter [74937,74957]"/>
  <delete-node tree="): ) [74957,74958]"/>
  <delete-tree tree="visibility [74959,74967]"/>
  <delete-node tree="{: { [74968,74969]"/>
  <delete-tree tree="member_expression [74979,75010]"/>
  <delete-node tree="=: = [75011,75012]"/>
  <delete-tree tree="member_expression [75013,75048]"/>
  <delete-node tree="(: ( [75048,75049]"/>
  <delete-node tree=",: , [75055,75056]"/>
  <delete-tree tree="call_argument [75057,75063]"/>
  <delete-node tree="): ) [75063,75064]"/>
  <delete-node tree="call_expression [75013,75064]"/>
  <delete-node tree="assignment_expression [74979,75064]"/>
  <delete-node tree="expression_statement [74979,75065]"/>
  <delete-tree tree="member_expression [75075,75096]"/>
  <delete-node tree="=: = [75097,75098]"/>
  <delete-tree tree="member_expression [75099,75124]"/>
  <delete-node tree="(: ( [75124,75125]"/>
  <delete-node tree=",: , [75131,75132]"/>
  <delete-tree tree="call_argument [75133,75139]"/>
  <delete-node tree="): ) [75139,75140]"/>
  <delete-node tree="call_expression [75099,75140]"/>
  <delete-node tree="assignment_expression [75075,75140]"/>
  <delete-node tree="expression_statement [75075,75141]"/>
  <delete-node tree="}: } [75147,75148]"/>
  <delete-node tree="function_body [74968,75148]"/>
  <delete-node tree="function_definition [74870,75148]"/>
  <delete-node tree="function: function [75156,75164]"/>
  <delete-node tree="identifier: incrementBalanceOfStaged [75165,75189]"/>
  <delete-node tree="(: ( [75189,75190]"/>
  <delete-tree tree="parameter [75190,75205]"/>
  <delete-node tree=",: , [75205,75206]"/>
  <delete-node tree="): ) [75221,75222]"/>
  <delete-node tree="{: { [75232,75233]"/>
  <delete-tree tree="member_expression [75243,75274]"/>
  <delete-node tree="=: = [75275,75276]"/>
  <delete-tree tree="member_expression [75277,75312]"/>
  <delete-node tree="(: ( [75312,75313]"/>
  <delete-node tree="): ) [75319,75320]"/>
  <delete-node tree="call_expression [75277,75320]"/>
  <delete-node tree="assignment_expression [75243,75320]"/>
  <delete-node tree="expression_statement [75243,75321]"/>
  <delete-tree tree="member_expression [75331,75352]"/>
  <delete-node tree="=: = [75353,75354]"/>
  <delete-tree tree="member_expression [75355,75380]"/>
  <delete-node tree="(: ( [75380,75381]"/>
  <delete-node tree="): ) [75387,75388]"/>
  <delete-node tree="call_expression [75355,75388]"/>
  <delete-node tree="assignment_expression [75331,75388]"/>
  <delete-node tree="expression_statement [75331,75389]"/>
  <delete-node tree="}: } [75395,75396]"/>
  <delete-node tree="function_body [75232,75396]"/>
  <delete-node tree="function_definition [75156,75396]"/>
  <delete-node tree="function: function [75404,75412]"/>
  <delete-node tree="identifier: decrementBalanceOfStaged [75413,75437]"/>
  <delete-node tree="(: ( [75437,75438]"/>
  <delete-tree tree="parameter [75438,75453]"/>
  <delete-node tree=",: , [75453,75454]"/>
  <delete-tree tree="parameter [75455,75469]"/>
  <delete-node tree=",: , [75469,75470]"/>
  <delete-tree tree="parameter [75471,75491]"/>
  <delete-node tree="): ) [75491,75492]"/>
  <delete-tree tree="visibility [75493,75501]"/>
  <delete-node tree="{: { [75502,75503]"/>
  <delete-tree tree="expression_statement [75513,75599]"/>
  <delete-tree tree="member_expression [75609,75630]"/>
  <delete-node tree="=: = [75631,75632]"/>
  <delete-tree tree="member_expression [75633,75658]"/>
  <delete-node tree="(: ( [75658,75659]"/>
  <delete-node tree=",: , [75665,75666]"/>
  <delete-tree tree="call_argument [75667,75673]"/>
  <delete-node tree="): ) [75673,75674]"/>
  <delete-node tree="call_expression [75633,75674]"/>
  <delete-node tree="assignment_expression [75609,75674]"/>
  <delete-node tree="expression_statement [75609,75675]"/>
  <delete-node tree="}: } [75681,75682]"/>
  <delete-node tree="function_body [75502,75682]"/>
  <delete-node tree="function_definition [75404,75682]"/>
  <delete-node tree="function: function [75690,75698]"/>
  <delete-node tree="identifier: incrementBalanceOfClaimable [75699,75726]"/>
  <delete-node tree="(: ( [75726,75727]"/>
  <delete-tree tree="parameter [75727,75742]"/>
  <delete-node tree=",: , [75742,75743]"/>
  <delete-tree tree="parameter [75744,75758]"/>
  <delete-node tree="): ) [75758,75759]"/>
  <delete-tree tree="visibility [75760,75768]"/>
  <delete-node tree="{: { [75769,75770]"/>
  <delete-tree tree="expression_statement [75780,75864]"/>
  <delete-tree tree="member_expression [75874,75898]"/>
  <delete-node tree="=: = [75899,75900]"/>
  <delete-tree tree="member_expression [75901,75929]"/>
  <delete-node tree="(: ( [75929,75930]"/>
  <delete-node tree="): ) [75936,75937]"/>
  <delete-node tree="call_expression [75901,75937]"/>
  <delete-node tree="assignment_expression [75874,75937]"/>
  <delete-node tree="expression_statement [75874,75938]"/>
  <delete-node tree="}: } [75944,75945]"/>
  <delete-node tree="function_body [75769,75945]"/>
  <delete-node tree="function_definition [75690,75945]"/>
  <delete-node tree="function: function [75953,75961]"/>
  <delete-node tree="identifier: decrementBalanceOfClaimable [75962,75989]"/>
  <delete-node tree="(: ( [75989,75990]"/>
  <delete-tree tree="parameter [75990,76005]"/>
  <delete-node tree=",: , [76005,76006]"/>
  <delete-node tree=",: , [76021,76022]"/>
  <delete-tree tree="parameter [76023,76043]"/>
  <delete-node tree="): ) [76043,76044]"/>
  <delete-tree tree="visibility [76045,76053]"/>
  <delete-tree tree="function_body [76054,76246]"/>
  <delete-node tree="function_definition [75953,76246]"/>
  <delete-tree tree="function_definition [76254,76499]"/>
  <delete-node tree="function: function [76507,76515]"/>
  <delete-node tree="identifier: decrementBalanceOfPhantom [76516,76541]"/>
  <delete-node tree="(: ( [76541,76542]"/>
  <delete-tree tree="parameter [76542,76557]"/>
  <delete-node tree=",: , [76557,76558]"/>
  <delete-node tree=",: , [76573,76574]"/>
  <delete-tree tree="parameter [76575,76595]"/>
  <delete-node tree="): ) [76595,76596]"/>
  <delete-tree tree="visibility [76597,76605]"/>
  <delete-tree tree="function_body [76606,76790]"/>
  <delete-node tree="function_definition [76507,76790]"/>
  <delete-node tree="}: } [76949,76950]"/>
  <delete-node tree="contract_body [74436,76950]"/>
  <delete-node tree="contract_declaration [74389,76950]"/>
  <delete-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [76954,77529]"/>
  <delete-node tree="contract: contract [77531,77539]"/>
  <delete-node tree="identifier: Liquidity [77540,77549]"/>
  <delete-node tree="is: is [77550,77552]"/>
  <delete-tree tree="inheritance_specifier [77553,77564]"/>
  <delete-node tree="{: { [77565,77566]"/>
  <delete-tree tree="visibility [77580,77587]"/>
  <delete-node tree="constant: constant [77588,77596]"/>
  <delete-node tree="identifier: UNISWAP_FACTORY [77597,77612]"/>
  <delete-node tree="=: = [77613,77614]"/>
  <delete-tree tree="type_cast_expression [77615,77666]"/>
  <delete-node tree="state_variable_declaration [77572,77667]"/>
  <delete-node tree="function: function [77675,77683]"/>
  <delete-node tree="identifier: addLiquidity [77684,77696]"/>
  <delete-node tree="(: ( [77696,77697]"/>
  <delete-node tree="): ) [77717,77718]"/>
  <delete-node tree="{: { [77755,77756]"/>
  <delete-tree tree="variable_declaration_tuple [77766,77796]"/>
  <delete-node tree="=: = [77797,77798]"/>
  <delete-node tree="(: ( [77799,77800]"/>
  <delete-tree tree="primitive_type [77800,77807]"/>
  <delete-node tree="(: ( [77807,77808]"/>
  <delete-node tree="): ) [77816,77817]"/>
  <delete-node tree="type_cast_expression [77800,77817]"/>
  <delete-node tree=",: , [77817,77818]"/>
  <delete-tree tree="call_expression [77819,77825]"/>
  <delete-node tree="): ) [77825,77826]"/>
  <delete-node tree="tuple_expression [77799,77826]"/>
  <delete-node tree="variable_declaration_statement [77766,77827]"/>
  <delete-tree tree="variable_declaration_statement [77837,77896]"/>
  <delete-node tree="=: = [77927,77928]"/>
  <delete-tree tree="parenthesized_expression [77929,77961]"/>
  <delete-node tree="?: ? [77962,77963]"/>
  <delete-node tree="identifier: dollarAmount [77978,77990]"/>
  <delete-node tree=":: : [77991,77992]"/>
  <delete-tree tree="member_expression [78007,78029]"/>
  <delete-node tree="(: ( [78029,78030]"/>
  <delete-node tree=",: , [78042,78043]"/>
  <delete-tree tree="call_argument [78044,78052]"/>
  <delete-node tree=",: , [78052,78053]"/>
  <delete-tree tree="call_argument [78054,78062]"/>
  <delete-node tree="): ) [78062,78063]"/>
  <delete-node tree="call_expression [78007,78063]"/>
  <delete-node tree="ternary_expression [77929,78063]"/>
  <delete-node tree="variable_declaration_statement [77908,78064]"/>
  <delete-tree tree="variable_declaration_statement [78076,78108]"/>
  <delete-tree tree="member_expression [78118,78141]"/>
  <delete-node tree="(: ( [78141,78142]"/>
  <delete-tree tree="call_argument [78142,78146]"/>
  <delete-node tree=",: , [78146,78147]"/>
  <delete-node tree="): ) [78160,78161]"/>
  <delete-node tree="call_expression [78118,78161]"/>
  <delete-node tree="expression_statement [78118,78162]"/>
  <delete-node tree="return: return [78238,78244]"/>
  <delete-node tree="(: ( [78245,78246]"/>
  <delete-node tree="identifier: usdcAmount [78246,78256]"/>
  <delete-node tree=",: , [78256,78257]"/>
  <delete-node tree="): ) [78298,78299]"/>
  <delete-node tree="tuple_expression [78245,78299]"/>
  <delete-node tree="return_statement [78238,78300]"/>
  <delete-node tree="}: } [78306,78307]"/>
  <delete-node tree="function_body [77755,78307]"/>
  <delete-node tree="function_definition [77675,78307]"/>
  <delete-node tree="comment: // overridable for testing [78315,78341]"/>
  <delete-node tree="function: function [78347,78355]"/>
  <delete-node tree="identifier: getReserves [78356,78367]"/>
  <delete-node tree="(: ( [78367,78368]"/>
  <delete-node tree=",: , [78382,78383]"/>
  <delete-node tree="): ) [78398,78399]"/>
  <delete-tree tree="visibility [78400,78408]"/>
  <delete-tree tree="state_mutability [78409,78413]"/>
  <delete-tree tree="return_type_definition [78414,78452]"/>
  <delete-tree tree="function_body [78453,78763]"/>
  <delete-node tree="function_definition [78347,78763]"/>
  <delete-node tree="}: } [78765,78766]"/>
  <delete-node tree="contract_body [77565,78766]"/>
  <delete-node tree="contract_declaration [77531,78766]"/>
  <delete-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [78770,79345]"/>
  <delete-tree tree="inheritance_specifier [79377,79386]"/>
  <delete-node tree="constructor: constructor [79429,79440]"/>
  <delete-node tree="(: ( [79440,79441]"/>
  <delete-tree tree="parameter [79441,79455]"/>
  <delete-node tree=",: , [79455,79456]"/>
  <delete-tree tree="parameter [79457,79470]"/>
  <delete-node tree="): ) [79470,79471]"/>
  <delete-node tree="public: public [79472,79478]"/>
  <delete-node tree="{: { [79479,79480]"/>
  <delete-tree tree="member_expression [79490,79509]"/>
  <delete-node tree="=: = [79510,79511]"/>
  <delete-node tree="identifier: IDAO [79512,79516]"/>
  <delete-node tree="(: ( [79516,79517]"/>
  <delete-node tree="): ) [79527,79528]"/>
  <delete-node tree="call_expression [79512,79528]"/>
  <delete-node tree="assignment_expression [79490,79528]"/>
  <delete-node tree="expression_statement [79490,79529]"/>
  <delete-tree tree="expression_statement [79539,79580]"/>
  <delete-tree tree="expression_statement [79590,79628]"/>
  <delete-node tree="}: } [79634,79635]"/>
  <delete-node tree="function_body [79479,79635]"/>
  <delete-node tree="constructor_definition [79429,79635]"/>
  <delete-node tree="function: function [80705,80713]"/>
  <delete-node tree="identifier: claim [80714,80719]"/>
  <delete-node tree="(: ( [80719,80720]"/>
  <delete-tree tree="parameter [80720,80733]"/>
  <delete-node tree="): ) [80733,80734]"/>
  <delete-node tree="{: { [80767,80768]"/>
  <delete-node tree="}: } [80987,80988]"/>
  <delete-node tree="function_body [80767,80988]"/>
  <delete-node tree="function_definition [80705,80988]"/>
  <delete-tree tree="binary_expression [81224,81244]"/>
  <delete-node tree="identifier: value [81287,81292]"/>
  <delete-node tree="number_literal: 0 [81296,81297]"/>
  <delete-node tree="?: ? [81209,81210]"/>
  <delete-node tree=":: : [81298,81299]"/>
  <delete-tree tree="call_expression [81313,81348]"/>
  <delete-node tree="ternary_expression [81190,81348]"/>
  <delete-tree tree="member_expression [80491,80507]"/>
  <delete-node tree="identifier: incrementBalanceOfBonded [81380,81404]"/>
  <delete-node tree="(: ( [81404,81405]"/>
  <delete-node tree=",: , [81415,81416]"/>
  <delete-node tree="): ) [81422,81423]"/>
  <delete-node tree="call_expression [81380,81423]"/>
  <delete-node tree="expression_statement [81380,81424]"/>
  <delete-node tree="identifier: incrementBalanceOfPhantom [81434,81459]"/>
  <delete-node tree="(: ( [81459,81460]"/>
  <delete-node tree=",: , [81470,81471]"/>
  <delete-tree tree="call_argument [81472,81482]"/>
  <delete-node tree="): ) [81482,81483]"/>
  <delete-node tree="call_expression [81434,81483]"/>
  <delete-node tree="expression_statement [81434,81484]"/>
  <delete-node tree="identifier: value [82105,82110]"/>
  <delete-node tree=",: , [80870,80871]"/>
  <delete-tree tree="call_argument [68337,68355]"/>
  <delete-node tree="=: = [82070,82071]"/>
  <delete-node tree=".: . [82111,82112]"/>
  <delete-node tree="identifier: div [82112,82115]"/>
  <delete-node tree="member_expression [82072,82115]"/>
  <delete-node tree="(: ( [82115,82116]"/>
  <delete-tree tree="call_argument [82116,82131]"/>
  <delete-node tree="): ) [82131,82132]"/>
  <delete-node tree="call_expression [82072,82132]"/>
  <delete-node tree="variable_declaration_statement [82050,82133]"/>
  <delete-node tree="identifier: newUniv2 [83282,83290]"/>
  <delete-tree tree="binary_expression [57741,57756]"/>
  <delete-node tree="function: function [83559,83567]"/>
  <delete-node tree="identifier: emergencyWithdraw [83568,83585]"/>
  <delete-node tree="(: ( [83585,83586]"/>
  <delete-tree tree="parameter [83586,83599]"/>
  <delete-node tree=",: , [83599,83600]"/>
  <delete-tree tree="parameter [83601,83614]"/>
  <delete-node tree="): ) [83614,83615]"/>
  <delete-tree tree="modifier_invocation [83625,83632]"/>
  <delete-tree tree="function_body [83633,83697]"/>
  <delete-node tree="function_definition [83559,83697]"/>
  <delete-node tree="function: function [83705,83713]"/>
  <delete-node tree="identifier: emergencyPause [83714,83728]"/>
  <delete-node tree="(: ( [83728,83729]"/>
  <delete-node tree="): ) [83729,83730]"/>
  <delete-tree tree="modifier_invocation [83740,83747]"/>
  <delete-tree tree="function_body [83748,83774]"/>
  <delete-node tree="function_definition [83705,83774]"/>
  <delete-node tree="modifier: modifier [84011,84019]"/>
  <delete-node tree="identifier: onlyFrozen [84020,84030]"/>
  <delete-node tree="(: ( [84030,84031]"/>
  <delete-tree tree="parameter [84031,84046]"/>
  <delete-node tree="): ) [84046,84047]"/>
  <delete-node tree="{: { [84048,84049]"/>
  <delete-tree tree="expression_statement [84202,84204]"/>
  <delete-node tree="}: } [84210,84211]"/>
  <delete-node tree="function_body [84048,84211]"/>
  <delete-node tree="modifier_definition [84011,84211]"/>
  <delete-node tree="modifier: modifier [84219,84227]"/>
  <delete-node tree="identifier: onlyDao [84228,84235]"/>
  <delete-node tree="(: ( [84235,84236]"/>
  <delete-node tree="): ) [84236,84237]"/>
  <delete-node tree="{: { [84238,84239]"/>
  <delete-tree tree="expression_statement [84371,84373]"/>
  <delete-node tree="}: } [84379,84380]"/>
  <delete-node tree="function_body [84238,84380]"/>
  <delete-node tree="modifier_definition [84219,84380]"/>
  <delete-node tree="modifier: modifier [84388,84396]"/>
  <delete-node tree="identifier: notPaused [84397,84406]"/>
  <delete-node tree="(: ( [84406,84407]"/>
  <delete-node tree="): ) [84407,84408]"/>
  <delete-node tree="{: { [84409,84410]"/>
  <delete-tree tree="expression_statement [84522,84524]"/>
  <delete-node tree="}: } [84530,84531]"/>
  <delete-node tree="function_body [84409,84531]"/>
  <delete-node tree="modifier_definition [84388,84531]"/>
  <delete-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [86087,86662]"/>
  <delete-node tree="comment: /*     Copyright 2018-2019 zOS Global Limited      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [88266,88885]"/>
  <delete-node tree=",: , [80089,80090]"/>
  <delete-node tree=",: , [80107,80108]"/>
  <delete-node tree="&gt;=: &gt;= [82962,82964]"/>
  <delete-node tree="identifier: value [82965,82970]"/>
  <delete-tree tree="call_argument [84276,84304]"/>
  <delete-tree tree="unary_expression [84447,84456]"/>
  <delete-node tree=".: . [82007,82008]"/>
  <delete-node tree="identifier: mul [82008,82011]"/>
  <delete-node tree="member_expression [81978,82011]"/>
  <delete-node tree="(: ( [82011,82012]"/>
  <delete-tree tree="call_argument [82012,82017]"/>
  <delete-node tree="): ) [82017,82018]"/>
  <delete-node tree="call_expression [81978,82018]"/>
  <delete-node tree=".: . [82018,82019]"/>
  <delete-node tree="identifier: div [82019,82022]"/>
  <delete-node tree="member_expression [81978,82022]"/>
  <delete-node tree="(: ( [82022,82023]"/>
  <delete-tree tree="call_argument [82023,82038]"/>
  <delete-node tree="): ) [82038,82039]"/>
  <delete-node tree="call_expression [81978,82039]"/>
  <delete-tree tree="call_argument [27859,27881]"/>
  <delete-tree tree="call_argument [27124,27142]"/>
  <delete-tree tree="member_expression [78172,78197]"/>
  <delete-node tree=",: , [82403,82404]"/>
  <delete-tree tree="member_expression [84086,84132]"/>
  <delete-node tree=",: , [83522,83523]"/>
  <delete-tree tree="call_argument [83524,83532]"/>
  <delete-node tree=",: , [83532,83533]"/>
  <delete-tree tree="call_argument [83534,83542]"/>
  <delete-tree tree="binary_expression [82799,82818]"/>
  <delete-node tree="&gt;=: &gt;= [73548,73550]"/>
  <delete-tree tree="member_expression [73551,73566]"/>
  <delete-node tree="[: [ [73566,73567]"/>
  <delete-node tree="identifier: account [73567,73574]"/>
  <delete-node tree="]: ] [73574,73575]"/>
  <delete-node tree="array_access [73540,73575]"/>
  <delete-tree tree="binary_expression [81849,81868]"/>
  <delete-tree tree="binary_expression [65206,65217]"/>
  <delete-node tree="||: || [65218,65220]"/>
  <delete-tree tree="binary_expression [65221,65238]"/>
  <delete-tree tree="member_expression [73100,73142]"/>
  <delete-node tree=".: . [73182,73183]"/>
  <delete-node tree="identifier: div [73183,73186]"/>
  <delete-node tree="member_expression [73100,73186]"/>
  <delete-node tree="(: ( [73186,73187]"/>
  <delete-tree tree="call_argument [73187,73198]"/>
  <delete-node tree="): ) [73198,73199]"/>
  <delete-node tree="call_expression [73100,73199]"/>
  <delete-node tree="%: % [59149,59150]"/>
  <delete-tree tree="binary_expression [59151,59158]"/>
  <delete-node tree="binary_expression [59133,59158]"/>
  <delete-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [90551,91126]"/>
  <delete-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [97213,97788]"/>
  <delete-node tree="comment: /*      Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [104552,105127]"/>
  <delete-node tree="comment: /*     Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     you may not use this file except in compliance with the License.     You may obtain a copy of the License at      http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License. */ [105982,106555]"/>
  <delete-node tree="contract: contract [106557,106565]"/>
  <delete-node tree="identifier: Deployer1 [106566,106575]"/>
  <delete-node tree="is: is [106576,106578]"/>
  <delete-node tree=",: , [106584,106585]"/>
  <delete-node tree=",: , [106596,106597]"/>
  <delete-node tree="{: { [106610,106611]"/>
  <delete-node tree="function: function [106617,106625]"/>
  <delete-node tree="identifier: initialize [106626,106636]"/>
  <delete-node tree="(: ( [106636,106637]"/>
  <delete-node tree="): ) [106637,106638]"/>
  <delete-tree tree="visibility [106651,106657]"/>
  <delete-tree tree="function_body [106658,106714]"/>
  <delete-node tree="function_definition [106617,106714]"/>
  <delete-tree tree="function_definition [106722,106818]"/>
  <delete-node tree="}: } [106820,106821]"/>
  <delete-node tree="contract_body [106610,106821]"/>
  <delete-node tree="contract_declaration [106557,106821]"/>
  <delete-node tree="contract: contract [106825,106833]"/>
  <delete-node tree="identifier: Deployer2 [106834,106843]"/>
  <delete-node tree="is: is [106844,106846]"/>
  <delete-tree tree="inheritance_specifier [106847,106852]"/>
  <delete-node tree=",: , [106852,106853]"/>
  <delete-node tree=",: , [106864,106865]"/>
  <delete-tree tree="inheritance_specifier [106866,106877]"/>
  <delete-node tree="{: { [106878,106879]"/>
  <delete-node tree="function: function [106885,106893]"/>
  <delete-node tree="identifier: initialize [106894,106904]"/>
  <delete-node tree="(: ( [106904,106905]"/>
  <delete-node tree="): ) [106905,106906]"/>
  <delete-tree tree="modifier_invocation [106907,106918]"/>
  <delete-tree tree="visibility [106919,106925]"/>
  <delete-node tree="{: { [106926,106927]"/>
  <delete-tree tree="member_expression [106937,106959]"/>
  <delete-node tree="=: = [106960,106961]"/>
  <delete-tree tree="new_expression [106962,106972]"/>
  <delete-node tree="(: ( [106972,106973]"/>
  <delete-tree tree="primitive_type [106973,106980]"/>
  <delete-node tree="(: ( [106980,106981]"/>
  <delete-node tree="call_argument [106981,106989]"/>
  <delete-node tree="): ) [106989,106990]"/>
  <delete-node tree="type_cast_expression [106973,106990]"/>
  <delete-node tree="call_argument [106973,106990]"/>
  <delete-node tree="): ) [106990,106991]"/>
  <delete-node tree="call_expression [106962,106991]"/>
  <delete-node tree="assignment_expression [106937,106991]"/>
  <delete-node tree="expression_statement [106937,106992]"/>
  <delete-node tree="(: ( [107016,107017]"/>
  <delete-node tree="): ) [107017,107018]"/>
  <delete-node tree="call_expression [107002,107018]"/>
  <delete-node tree="expression_statement [107002,107019]"/>
  <delete-node tree="}: } [107025,107026]"/>
  <delete-node tree="function_body [106926,107026]"/>
  <delete-node tree="function_definition [106885,107026]"/>
  <delete-tree tree="function_definition [107034,107130]"/>
  <delete-node tree="}: } [107132,107133]"/>
  <delete-node tree="contract_body [106878,107133]"/>
  <delete-node tree="contract_declaration [106825,107133]"/>
  <delete-node tree="contract: contract [107137,107145]"/>
  <delete-node tree="identifier: Deployer3 [107146,107155]"/>
  <delete-node tree="is: is [107156,107158]"/>
  <delete-tree tree="inheritance_specifier [107159,107164]"/>
  <delete-node tree=",: , [107164,107165]"/>
  <delete-tree tree="inheritance_specifier [107166,107176]"/>
  <delete-node tree=",: , [107176,107177]"/>
  <delete-tree tree="inheritance_specifier [107178,107189]"/>
  <delete-node tree="{: { [107190,107191]"/>
  <delete-node tree="function: function [107197,107205]"/>
  <delete-node tree="identifier: initialize [107206,107216]"/>
  <delete-node tree="(: ( [107216,107217]"/>
  <delete-node tree="): ) [107217,107218]"/>
  <delete-tree tree="modifier_invocation [107219,107230]"/>
  <delete-tree tree="visibility [107231,107237]"/>
  <delete-node tree="{: { [107238,107239]"/>
  <delete-tree tree="member_expression [107249,107269]"/>
  <delete-node tree="=: = [107270,107271]"/>
  <delete-tree tree="primitive_type [107272,107279]"/>
  <delete-node tree="(: ( [107279,107280]"/>
  <delete-tree tree="new_expression [107280,107288]"/>
  <delete-node tree="(: ( [107288,107289]"/>
  <delete-tree tree="primitive_type [107289,107296]"/>
  <delete-node tree="(: ( [107296,107297]"/>
  <delete-node tree="call_argument [107297,107305]"/>
  <delete-node tree="): ) [107305,107306]"/>
  <delete-node tree="type_cast_expression [107289,107306]"/>
  <delete-node tree="call_argument [107289,107306]"/>
  <delete-node tree=",: , [107306,107307]"/>
  <delete-tree tree="call_argument [107308,107332]"/>
  <delete-node tree="): ) [107332,107333]"/>
  <delete-node tree="call_expression [107280,107333]"/>
  <delete-node tree="call_argument [107280,107333]"/>
  <delete-node tree="): ) [107333,107334]"/>
  <delete-node tree="type_cast_expression [107272,107334]"/>
  <delete-node tree="assignment_expression [107249,107334]"/>
  <delete-node tree="expression_statement [107249,107335]"/>
  <delete-node tree="}: } [107341,107342]"/>
  <delete-node tree="function_body [107238,107342]"/>
  <delete-node tree="function_definition [107197,107342]"/>
  <delete-tree tree="function_definition [107350,107446]"/>
  <delete-node tree="}: } [107448,107449]"/>
  <delete-node tree="contract_body [107190,107449]"/>
  <delete-node tree="contract_declaration [107137,107449]"/>
</actions>
