{
  "matches": [
    {
      "src": "identifier: this [21552,21556]",
      "dest": "identifier: this [21552,21556]"
    },
    {
      "src": "): ) [7728,7729]",
      "dest": "): ) [7728,7729]"
    },
    {
      "src": "primitive_type [2072,2079]",
      "dest": "primitive_type [2072,2079]"
    },
    {
      "src": "string [23229,23263]",
      "dest": "string [23229,23263]"
    },
    {
      "src": "private: private [15982,15989]",
      "dest": "private: private [15982,15989]"
    },
    {
      "src": "expression_statement [13240,13312]",
      "dest": "expression_statement [13240,13312]"
    },
    {
      "src": "comment: /**      * @dev Destroys `amount` tokens from `account`.`amount` is then deducted      * from the caller's allowance.      *      * See {_burn} and {_approve}.      */ [15531,15698]",
      "dest": "comment: /**      * @dev Destroys `amount` tokens from `account`.`amount` is then deducted      * from the caller's allowance.      *      * See {_burn} and {_approve}.      */ [15531,15698]"
    },
    {
      "src": "binary_expression [6356,6361]",
      "dest": "binary_expression [6356,6361]"
    },
    {
      "src": "call_argument [6356,6366]",
      "dest": "call_argument [6356,6366]"
    },
    {
      "src": "type_name [22435,22441]",
      "dest": "type_name [22435,22441]"
    },
    {
      "src": "identifier: _shares [26586,26593]",
      "dest": "identifier: _shares [26474,26481]"
    },
    {
      "src": "string [20213,20215]",
      "dest": "string [20213,20215]"
    },
    {
      "src": "identifier: subtractedValue [12511,12526]",
      "dest": "identifier: subtractedValue [12511,12526]"
    },
    {
      "src": ",: , [20635,20636]",
      "dest": ",: , [20635,20636]"
    },
    {
      "src": "primitive_type [13837,13844]",
      "dest": "primitive_type [13837,13844]"
    },
    {
      "src": "call_expression [23002,23029]",
      "dest": "call_expression [23002,23029]"
    },
    {
      "src": "bool: bool [617,621]",
      "dest": "bool: bool [617,621]"
    },
    {
      "src": "call_argument [20534,20557]",
      "dest": "call_argument [20534,20557]"
    },
    {
      "src": "expression_statement [23656,23675]",
      "dest": "expression_statement [23656,23675]"
    },
    {
      "src": "parameter [17340,17345]",
      "dest": "parameter [17340,17345]"
    },
    {
      "src": "identifier: SafeERC20 [20323,20332]",
      "dest": "identifier: SafeERC20 [20323,20332]"
    },
    {
      "src": "uint256: uint256 [8968,8975]",
      "dest": "uint256: uint256 [8968,8975]"
    },
    {
      "src": "): ) [1706,1707]",
      "dest": "): ) [1706,1707]"
    },
    {
      "src": "): ) [6918,6919]",
      "dest": "): ) [6918,6919]"
    },
    {
      "src": "return_statement [6415,6424]",
      "dest": "return_statement [6415,6424]"
    },
    {
      "src": "number_literal: 18 [25971,25973]",
      "dest": "number_literal: 18 [25842,25844]"
    },
    {
      "src": "): ) [292,293]",
      "dest": "): ) [292,293]"
    },
    {
      "src": "address: address [15295,15302]",
      "dest": "address: address [15295,15302]"
    },
    {
      "src": "uint256: uint256 [6029,6036]",
      "dest": "uint256: uint256 [6029,6036]"
    },
    {
      "src": "string: string [16704,16710]",
      "dest": "string: string [16704,16710]"
    },
    {
      "src": "parameter [24675,24679]",
      "dest": "parameter [24675,24679]"
    },
    {
      "src": "identifier: require [20226,20233]",
      "dest": "identifier: require [20226,20233]"
    },
    {
      "src": "user_defined_type [25469,25475]",
      "dest": "user_defined_type [25469,25475]"
    },
    {
      "src": "{: { [12430,12431]",
      "dest": "{: { [12430,12431]"
    },
    {
      "src": "address: address [20623,20630]",
      "dest": "address: address [20623,20630]"
    },
    {
      "src": "<: < [23998,23999]",
      "dest": "<: < [23998,23999]"
    },
    {
      "src": "event_paramater [2575,2588]",
      "dest": "event_paramater [2575,2588]"
    },
    {
      "src": "(: ( [27204,27205]",
      "dest": "(: ( [26867,26868]"
    },
    {
      "src": "parameter [20826,20841]",
      "dest": "parameter [20826,20841]"
    },
    {
      "src": "expression_statement [15774,15797]",
      "dest": "expression_statement [15774,15797]"
    },
    {
      "src": "identifier: Context [3103,3110]",
      "dest": "identifier: Context [3103,3110]"
    },
    {
      "src": "type_name [5579,5585]",
      "dest": "type_name [5579,5585]"
    },
    {
      "src": "identifier: dusd [25538,25542]",
      "dest": "identifier: dusd [25538,25542]"
    },
    {
      "src": "identifier: msg [26306,26309]",
      "dest": "identifier: msg [26207,26210]"
    },
    {
      "src": "): ) [23645,23646]",
      "dest": "): ) [23645,23646]"
    },
    {
      "src": "public: public [11023,11029]",
      "dest": "public: public [11023,11029]"
    },
    {
      "src": "binary_expression [6356,6366]",
      "dest": "binary_expression [6356,6366]"
    },
    {
      "src": "identifier: totalSupply [129,140]",
      "dest": "identifier: totalSupply [129,140]"
    },
    {
      "src": "identifier: add [13467,13470]",
      "dest": "identifier: add [13467,13470]"
    },
    {
      "src": "identifier: sender [26310,26316]",
      "dest": "identifier: sender [26211,26217]"
    },
    {
      "src": "identifier: totalSupply [26894,26905]",
      "dest": "identifier: totalSupply [26743,26754]"
    },
    {
      "src": "identifier: amount [14041,14047]",
      "dest": "identifier: amount [14041,14047]"
    },
    {
      "src": "sload: sload [24512,24517]",
      "dest": "sload: sload [24512,24517]"
    },
    {
      "src": "variable_declaration [26033,26043]",
      "dest": "variable_declaration [25934,25944]"
    },
    {
      "src": "type_name [27108,27112]",
      "dest": "type_name [26997,27001]"
    },
    {
      "src": ",: , [16296,16297]",
      "dest": ",: , [16296,16297]"
    },
    {
      "src": "(: ( [10444,10445]",
      "dest": "(: ( [10444,10445]"
    },
    {
      "src": "identifier: spender [10190,10197]",
      "dest": "identifier: spender [10190,10197]"
    },
    {
      "src": "(: ( [5629,5630]",
      "dest": "(: ( [5629,5630]"
    },
    {
      "src": "is: is [9126,9128]",
      "dest": "is: is [9126,9128]"
    },
    {
      "src": "type_name [9170,9177]",
      "dest": "type_name [9170,9177]"
    },
    {
      "src": "identifier: b [9099,9100]",
      "dest": "identifier: b [9099,9100]"
    },
    {
      "src": "primitive_type [9606,9613]",
      "dest": "primitive_type [9606,9613]"
    },
    {
      "src": "): ) [26411,26412]",
      "dest": "): ) [26269,26270]"
    },
    {
      "src": "identifier: token [21528,21533]",
      "dest": "identifier: token [21528,21533]"
    },
    {
      "src": "(: ( [24282,24283]",
      "dest": "(: ( [24282,24283]"
    },
    {
      "src": "uint: uint [23959,23963]",
      "dest": "uint: uint [23959,23963]"
    },
    {
      "src": "binary_expression [14501,14522]",
      "dest": "binary_expression [14501,14522]"
    },
    {
      "src": "return_type_definition [157,174]",
      "dest": "return_type_definition [157,174]"
    },
    {
      "src": "number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [18411,18477]",
      "dest": "number_literal: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 [18411,18477]"
    },
    {
      "src": "function_definition [5544,5731]",
      "dest": "function_definition [5544,5731]"
    },
    {
      "src": "(: ( [9567,9568]",
      "dest": "(: ( [9567,9568]"
    },
    {
      "src": "constructor_definition [24231,24301]",
      "dest": "constructor_definition [24231,24301]"
    },
    {
      "src": "identifier: require [4750,4757]",
      "dest": "identifier: require [4750,4757]"
    },
    {
      "src": "identifier: sender [13352,13358]",
      "dest": "identifier: sender [13352,13358]"
    },
    {
      "src": "]: ] [12496,12497]",
      "dest": "]: ] [12496,12497]"
    },
    {
      "src": "(: ( [20503,20504]",
      "dest": "(: ( [20503,20504]"
    },
    {
      "src": "primitive_type [25584,25588]",
      "dest": "primitive_type [25584,25588]"
    },
    {
      "src": "type_name [6943,6950]",
      "dest": "type_name [6943,6950]"
    },
    {
      "src": "uint256: uint256 [9446,9453]",
      "dest": "uint256: uint256 [9446,9453]"
    },
    {
      "src": "{: { [27166,27167]",
      "dest": "{: { [27036,27037]"
    },
    {
      "src": "view: view [3488,3492]",
      "dest": "view: view [3488,3492]"
    },
    {
      "src": "identifier: _approve [15806,15814]",
      "dest": "identifier: _approve [15806,15814]"
    },
    {
      "src": "number_literal: 0 [26911,26912]",
      "dest": "number_literal: 0 [26760,26761]"
    },
    {
      "src": "identifier: totalSupply [26525,26536]",
      "dest": "identifier: totalSupply [26413,26424]"
    },
    {
      "src": "bytes32: bytes32 [18363,18370]",
      "dest": "bytes32: bytes32 [18363,18370]"
    },
    {
      "src": "call_expression [11750,11762]",
      "dest": "call_expression [11750,11762]"
    },
    {
      "src": "uint256: uint256 [7739,7746]",
      "dest": "uint256: uint256 [7739,7746]"
    },
    {
      "src": "identifier: spender [11764,11771]",
      "dest": "identifier: spender [11764,11771]"
    },
    {
      "src": "address: address [10972,10979]",
      "dest": "address: address [10972,10979]"
    },
    {
      "src": "): ) [27272,27273]",
      "dest": "): ) [26873,26874]"
    },
    {
      "src": "visibility [7593,7601]",
      "dest": "visibility [7593,7601]"
    },
    {
      "src": ",: , [2548,2549]",
      "dest": ",: , [2548,2549]"
    },
    {
      "src": "type_name [16029,16034]",
      "dest": "type_name [16029,16034]"
    },
    {
      "src": "||: || [21168,21170]",
      "dest": "||: || [21168,21170]"
    },
    {
      "src": "identifier: _mint [26300,26305]",
      "dest": "identifier: _mint [26201,26206]"
    },
    {
      "src": "type_name [26132,26136]",
      "dest": "type_name [26033,26037]"
    },
    {
      "src": "state_mutability [3388,3392]",
      "dest": "state_mutability [3388,3392]"
    },
    {
      "src": "primitive_type [2318,2325]",
      "dest": "primitive_type [2318,2325]"
    },
    {
      "src": "=: = [14683,14684]",
      "dest": "=: = [14683,14684]"
    },
    {
      "src": "address: address [564,571]",
      "dest": "address: address [564,571]"
    },
    {
      "src": "comment: // Return data is optional [23304,23330]",
      "dest": "comment: // Return data is optional [23304,23330]"
    },
    {
      "src": "if_statement [6266,6311]",
      "dest": "if_statement [6266,6311]"
    },
    {
      "src": "[: [ [11784,11785]",
      "dest": "[: [ [11784,11785]"
    },
    {
      "src": "call_expression [10425,10464]",
      "dest": "call_expression [10425,10464]"
    },
    {
      "src": "identifier: sub [15873,15876]",
      "dest": "identifier: sub [15873,15876]"
    },
    {
      "src": "user_defined_type [21440,21446]",
      "dest": "user_defined_type [21440,21446]"
    },
    {
      "src": "identifier: mul [26251,26254]",
      "dest": "identifier: mul [26152,26155]"
    },
    {
      "src": "event_definition [2512,2590]",
      "dest": "event_definition [2512,2590]"
    },
    {
      "src": "type_name [16704,16710]",
      "dest": "type_name [16704,16710]"
    },
    {
      "src": "address: address [13106,13113]",
      "dest": "address: address [13106,13113]"
    },
    {
      "src": "parameter [8336,8345]",
      "dest": "parameter [8336,8345]"
    },
    {
      "src": "}: } [23503,23504]",
      "dest": "}: } [23503,23504]"
    },
    {
      "src": "(: ( [9422,9423]",
      "dest": "(: ( [9422,9423]"
    },
    {
      "src": "parameter [10107,10122]",
      "dest": "parameter [10107,10122]"
    },
    {
      "src": "identifier: a [5565,5566]",
      "dest": "identifier: a [5565,5566]"
    },
    {
      "src": "identifier: value [21156,21161]",
      "dest": "identifier: value [21156,21161]"
    },
    {
      "src": "call_argument [10457,10463]",
      "dest": "call_argument [10457,10463]"
    },
    {
      "src": "expression_statement [16353,16370]",
      "dest": "expression_statement [16353,16370]"
    },
    {
      "src": "identifier: _balances [14592,14601]",
      "dest": "identifier: _balances [14592,14601]"
    },
    {
      "src": "function_body [6952,7015]",
      "dest": "function_body [6952,7015]"
    },
    {
      "src": "identifier: spender [10115,10122]",
      "dest": "identifier: spender [10115,10122]"
    },
    {
      "src": "identifier: require [15278,15285]",
      "dest": "identifier: require [15278,15285]"
    },
    {
      "src": "identifier: ERC20Detailed [25429,25442]",
      "dest": "identifier: ERC20Detailed [25429,25442]"
    },
    {
      "src": "identifier: callOptionalReturn [21307,21325]",
      "dest": "identifier: callOptionalReturn [21307,21325]"
    },
    {
      "src": "function_definition [14426,14768]",
      "dest": "function_definition [14426,14768]"
    },
    {
      "src": "return: return [6415,6421]",
      "dest": "return: return [6415,6421]"
    },
    {
      "src": "call_argument [23440,23484]",
      "dest": "call_argument [23440,23484]"
    },
    {
      "src": "function_body [26422,26682]",
      "dest": "function_body [26280,26531]"
    },
    {
      "src": "type_name [18105,18109]",
      "dest": "type_name [18105,18109]"
    },
    {
      "src": "): ) [24526,24527]",
      "dest": "): ) [24526,24527]"
    },
    {
      "src": "emit: emit [15481,15485]",
      "dest": "emit: emit [15481,15485]"
    },
    {
      "src": "binary_expression [15364,15385]",
      "dest": "binary_expression [15364,15385]"
    },
    {
      "src": "function_definition [24940,25251]",
      "dest": "function_definition [24940,25251]"
    },
    {
      "src": "(: ( [25215,25216]",
      "dest": "(: ( [25215,25216]"
    },
    {
      "src": "(: ( [20212,20213]",
      "dest": "(: ( [20212,20213]"
    },
    {
      "src": "): ) [25301,25302]",
      "dest": "): ) [25301,25302]"
    },
    {
      "src": "visibility [22468,22475]",
      "dest": "visibility [22468,22475]"
    },
    {
      "src": "assignment_expression [16331,16343]",
      "dest": "assignment_expression [16331,16343]"
    },
    {
      "src": "number_literal: 0 [13899,13900]",
      "dest": "number_literal: 0 [13899,13900]"
    },
    {
      "src": "assignment_expression [26187,26203]",
      "dest": "assignment_expression [26088,26104]"
    },
    {
      "src": "parameter [617,621]",
      "dest": "parameter [617,621]"
    },
    {
      "src": "visibility [23969,23977]",
      "dest": "visibility [23969,23977]"
    },
    {
      "src": "}: } [15524,15525]",
      "dest": "}: } [15524,15525]"
    },
    {
      "src": "call_expression [21588,21684]",
      "dest": "call_expression [21588,21684]"
    },
    {
      "src": ",: , [20707,20708]",
      "dest": ",: , [20707,20708]"
    },
    {
      "src": "call_argument [14072,14082]",
      "dest": "call_argument [14072,14082]"
    },
    {
      "src": "=: = [23175,23176]",
      "dest": "=: = [23175,23176]"
    },
    {
      "src": "assignment_expression [23656,23674]",
      "dest": "assignment_expression [23656,23674]"
    },
    {
      "src": "): ) [14099,14100]",
      "dest": "): ) [14099,14100]"
    },
    {
      "src": "identifier: msg [3666,3669]",
      "dest": "identifier: msg [3666,3669]"
    },
    {
      "src": ",: , [7552,7553]",
      "dest": ",: , [7552,7553]"
    },
    {
      "src": "): ) [26906,26907]",
      "dest": "): ) [26755,26756]"
    },
    {
      "src": "primitive_type [20843,20850]",
      "dest": "primitive_type [20843,20850]"
    },
    {
      "src": "return_statement [23906,23921]",
      "dest": "return_statement [23906,23921]"
    },
    {
      "src": "primitive_type [3402,3417]",
      "dest": "primitive_type [3402,3417]"
    },
    {
      "src": "visibility [13141,13149]",
      "dest": "visibility [13141,13149]"
    },
    {
      "src": ",: , [12526,12527]",
      "dest": ",: , [12526,12527]"
    },
    {
      "src": "(: ( [25894,25895]",
      "dest": "(: ( [25767,25768]"
    },
    {
      "src": "(: ( [1650,1651]",
      "dest": "(: ( [1650,1651]"
    },
    {
      "src": "yul_identifier [25216,25224]",
      "dest": "yul_identifier [25216,25224]"
    },
    {
      "src": ".: . [20737,20738]",
      "dest": ".: . [20737,20738]"
    },
    {
      "src": "): ) [2110,2111]",
      "dest": "): ) [2110,2111]"
    },
    {
      "src": "identifier: value [21389,21394]",
      "dest": "identifier: value [21389,21394]"
    },
    {
      "src": "type_name [23850,23854]",
      "dest": "type_name [23850,23854]"
    },
    {
      "src": "call_argument [25128,25136]",
      "dest": "call_argument [25128,25136]"
    },
    {
      "src": "return_type_definition [308,325]",
      "dest": "return_type_definition [308,325]"
    },
    {
      "src": "): ) [15517,15518]",
      "dest": "): ) [15517,15518]"
    },
    {
      "src": "returns: returns [26865,26872]",
      "dest": "returns: returns [26714,26721]"
    },
    {
      "src": "identifier: _redeemFactor [27304,27317]",
      "dest": "identifier: _redeemFactor [27067,27080]"
    },
    {
      "src": "state_variable_declaration [9184,9231]",
      "dest": "state_variable_declaration [9184,9231]"
    },
    {
      "src": "state_mutability [23837,23841]",
      "dest": "state_mutability [23837,23841]"
    },
    {
      "src": "type_name [5144,5151]",
      "dest": "type_name [5144,5151]"
    },
    {
      "src": "assignment_expression [27433,27461]",
      "dest": "assignment_expression [27162,27190]"
    },
    {
      "src": "identifier: shares [26318,26324]",
      "dest": "identifier: shares [26219,26225]"
    },
    {
      "src": "type_name [8968,8975]",
      "dest": "type_name [8968,8975]"
    },
    {
      "src": "inheritance_specifier [25422,25427]",
      "dest": "inheritance_specifier [25422,25427]"
    },
    {
      "src": "type_name [26756,26760]",
      "dest": "type_name [26605,26609]"
    },
    {
      "src": "type_name [4704,4711]",
      "dest": "type_name [4704,4711]"
    },
    {
      "src": ",: , [14091,14092]",
      "dest": ",: , [14091,14092]"
    },
    {
      "src": "identifier: ERC20Detailed [15945,15958]",
      "dest": "identifier: ERC20Detailed [15945,15958]"
    },
    {
      "src": "type_name [2550,2557]",
      "dest": "type_name [2550,2557]"
    },
    {
      "src": "identifier: sender [26091,26097]",
      "dest": "identifier: sender [25992,25998]"
    },
    {
      "src": "returns: returns [6020,6027]",
      "dest": "returns: returns [6020,6027]"
    },
    {
      "src": "parameter [16276,16296]",
      "dest": "parameter [16276,16296]"
    },
    {
      "src": "identifier: shares [26234,26240]",
      "dest": "identifier: shares [26135,26141]"
    },
    {
      "src": "view: view [958,962]",
      "dest": "view: view [958,962]"
    },
    {
      "src": "): ) [4711,4712]",
      "dest": "): ) [4711,4712]"
    },
    {
      "src": "): ) [11729,11730]",
      "dest": "): ) [11729,11730]"
    },
    {
      "src": "function_definition [1634,1708]",
      "dest": "function_definition [1634,1708]"
    },
    {
      "src": "type_name [9897,9904]",
      "dest": "type_name [9897,9904]"
    },
    {
      "src": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following       * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [17474,18040]",
      "dest": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following       * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [17474,18040]"
    },
    {
      "src": ",: , [16274,16275]",
      "dest": ",: , [16274,16275]"
    },
    {
      "src": "(: ( [971,972]",
      "dest": "(: ( [971,972]"
    },
    {
      "src": "identifier: _msgSender [3366,3376]",
      "dest": "identifier: _msgSender [3366,3376]"
    },
    {
      "src": "identifier: decimals [16391,16399]",
      "dest": "identifier: decimals [16391,16399]"
    },
    {
      "src": "return_type_definition [10136,10153]",
      "dest": "return_type_definition [10136,10153]"
    },
    {
      "src": "state_mutability [5130,5134]",
      "dest": "state_mutability [5130,5134]"
    },
    {
      "src": "=: = [26044,26045]",
      "dest": "=: = [25945,25946]"
    },
    {
      "src": "(: ( [23196,23197]",
      "dest": "(: ( [23196,23197]"
    },
    {
      "src": "return: return [11834,11840]",
      "dest": "return: return [11834,11840]"
    },
    {
      "src": "): ) [4679,4680]",
      "dest": "): ) [4679,4680]"
    },
    {
      "src": "function_body [17347,17380]",
      "dest": "function_body [17347,17380]"
    },
    {
      "src": "(: ( [13470,13471]",
      "dest": "(: ( [13470,13471]"
    },
    {
      "src": "(: ( [15494,15495]",
      "dest": "(: ( [15494,15495]"
    },
    {
      "src": "variable_declaration [21793,21813]",
      "dest": "variable_declaration [21793,21813]"
    },
    {
      "src": "{: { [24488,24489]",
      "dest": "{: { [24488,24489]"
    },
    {
      "src": "function_body [11045,11250]",
      "dest": "function_body [11045,11250]"
    },
    {
      "src": "uint: uint [23850,23854]",
      "dest": "uint: uint [23850,23854]"
    },
    {
      "src": ",: , [13271,13272]",
      "dest": ",: , [13271,13272]"
    },
    {
      "src": "variable_declaration_statement [4723,4741]",
      "dest": "variable_declaration_statement [4723,4741]"
    },
    {
      "src": "): ) [13187,13188]",
      "dest": "): ) [13187,13188]"
    },
    {
      "src": "identifier: sender [24713,24719]",
      "dest": "identifier: sender [24713,24719]"
    },
    {
      "src": "primitive_type [18883,18890]",
      "dest": "primitive_type [18883,18890]"
    },
    {
      "src": "primitive_type [16256,16262]",
      "dest": "primitive_type [16256,16262]"
    },
    {
      "src": "identifier: token [20616,20621]",
      "dest": "identifier: token [20616,20621]"
    },
    {
      "src": "function_body [7625,7868]",
      "dest": "function_body [7625,7868]"
    },
    {
      "src": "!=: != [15292,15294]",
      "dest": "!=: != [15292,15294]"
    },
    {
      "src": "(: ( [13819,13820]",
      "dest": "(: ( [13819,13820]"
    },
    {
      "src": "primitive_type [10972,10979]",
      "dest": "primitive_type [10972,10979]"
    },
    {
      "src": "): ) [13986,13987]",
      "dest": "): ) [13986,13987]"
    },
    {
      "src": "comment: // solhint-disable-previous-line no-empty-blocks [3303,3351]",
      "dest": "comment: // solhint-disable-previous-line no-empty-blocks [3303,3351]"
    },
    {
      "src": "function_body [16321,16406]",
      "dest": "function_body [16321,16406]"
    },
    {
      "src": "string [8406,8432]",
      "dest": "string [8406,8432]"
    },
    {
      "src": "type_name [9606,9613]",
      "dest": "type_name [9606,9613]"
    },
    {
      "src": "assembly_statement [18543,18588]",
      "dest": "assembly_statement [18543,18588]"
    },
    {
      "src": "comment: // solhint-disable-next-line max-line-length [21094,21138]",
      "dest": "comment: // solhint-disable-next-line max-line-length [21094,21138]"
    },
    {
      "src": "(: ( [16507,16508]",
      "dest": "(: ( [16507,16508]"
    },
    {
      "src": "/: / [6358,6359]",
      "dest": "/: / [6358,6359]"
    },
    {
      "src": "address: address [932,939]",
      "dest": "address: address [932,939]"
    },
    {
      "src": "}: } [17381,17382]",
      "dest": "}: } [17381,17382]"
    },
    {
      "src": "parameter [13820,13835]",
      "dest": "parameter [13820,13835]"
    },
    {
      "src": "bytes: bytes [3502,3507]",
      "dest": "bytes: bytes [3502,3507]"
    },
    {
      "src": "memory: memory [16711,16717]",
      "dest": "memory: memory [16711,16717]"
    },
    {
      "src": "identifier: spender [21994,22001]",
      "dest": "identifier: spender [21994,22001]"
    },
    {
      "src": "\": \" [20068,20069]",
      "dest": "\": \" [20068,20069]"
    },
    {
      "src": "}: } [10014,10015]",
      "dest": "}: } [10014,10015]"
    },
    {
      "src": "identifier: abi [21947,21950]",
      "dest": "identifier: abi [21947,21950]"
    },
    {
      "src": "return_statement [11834,11846]",
      "dest": "return_statement [11834,11846]"
    },
    {
      "src": "): ) [25234,25235]",
      "dest": "): ) [25234,25235]"
    },
    {
      "src": "identifier: sender [13168,13174]",
      "dest": "identifier: sender [13168,13174]"
    },
    {
      "src": "call_argument [23874,23880]",
      "dest": "call_argument [23874,23880]"
    },
    {
      "src": "call_expression [27176,27273]",
      "dest": "call_expression [26842,26874]"
    },
    {
      "src": "return: return [10164,10170]",
      "dest": "return: return [10164,10170]"
    },
    {
      "src": "binary_expression [26894,26912]",
      "dest": "binary_expression [26743,26761]"
    },
    {
      "src": "!=: != [25022,25024]",
      "dest": "!=: != [25022,25024]"
    },
    {
      "src": "using_directive [20339,20366]",
      "dest": "using_directive [20339,20366]"
    },
    {
      "src": "contract_declaration [25374,27470]",
      "dest": "contract_declaration [25374,27199]"
    },
    {
      "src": "uint256: uint256 [21759,21766]",
      "dest": "uint256: uint256 [21759,21766]"
    },
    {
      "src": "): ) [11823,11824]",
      "dest": "): ) [11823,11824]"
    },
    {
      "src": "): ) [5212,5213]",
      "dest": "): ) [5212,5213]"
    },
    {
      "src": "function_definition [15703,15932]",
      "dest": "function_definition [15703,15932]"
    },
    {
      "src": "identifier: getStore [23811,23819]",
      "dest": "identifier: getStore [23811,23819]"
    },
    {
      "src": "primitive_type [26794,26801]",
      "dest": "primitive_type [26643,26650]"
    },
    {
      "src": "string [13190,13229]",
      "dest": "string [13190,13229]"
    },
    {
      "src": "type_name [9030,9037]",
      "dest": "type_name [9030,9037]"
    },
    {
      "src": "parameter [23820,23826]",
      "dest": "parameter [23820,23826]"
    },
    {
      "src": "parameter [26874,26878]",
      "dest": "parameter [26723,26727]"
    },
    {
      "src": "visibility [6006,6014]",
      "dest": "visibility [6006,6014]"
    },
    {
      "src": "using_directive [9151,9178]",
      "dest": "using_directive [9151,9178]"
    },
    {
      "src": "return_statement [9088,9101]",
      "dest": "return_statement [9088,9101]"
    },
    {
      "src": "): ) [10391,10392]",
      "dest": "): ) [10391,10392]"
    },
    {
      "src": "binary_expression [18632,18647]",
      "dest": "binary_expression [18632,18647]"
    },
    {
      "src": "}: } [20310,20311]",
      "dest": "}: } [20310,20311]"
    },
    {
      "src": "emit_statement [15481,15519]",
      "dest": "emit_statement [15481,15519]"
    },
    {
      "src": ",: , [20509,20510]",
      "dest": ",: , [20509,20510]"
    },
    {
      "src": "identifier: _allowances [10171,10182]",
      "dest": "identifier: _allowances [10171,10182]"
    },
    {
      "src": "call_argument [14754,14760]",
      "dest": "call_argument [14754,14760]"
    },
    {
      "src": "type_name [6321,6328]",
      "dest": "type_name [6321,6328]"
    },
    {
      "src": "function_definition [21697,22024]",
      "dest": "function_definition [21697,22024]"
    },
    {
      "src": "call_argument [26794,26807]",
      "dest": "call_argument [26643,26656]"
    },
    {
      "src": "identifier: to [20447,20449]",
      "dest": "identifier: to [20447,20449]"
    },
    {
      "src": "(: ( [20034,20035]",
      "dest": "(: ( [20034,20035]"
    },
    {
      "src": "identifier: c [7860,7861]",
      "dest": "identifier: c [7860,7861]"
    },
    {
      "src": "function_body [15268,15525]",
      "dest": "function_body [15268,15525]"
    },
    {
      "src": "type_name [21728,21734]",
      "dest": "type_name [21728,21734]"
    },
    {
      "src": "external: external [599,607]",
      "dest": "external: external [599,607]"
    },
    {
      "src": "identifier: recipient [2061,2070]",
      "dest": "identifier: recipient [2061,2070]"
    },
    {
      "src": "\": \" [20213,20214]",
      "dest": "\": \" [20213,20214]"
    },
    {
      "src": "): ) [23854,23855]",
      "dest": "): ) [23854,23855]"
    },
    {
      "src": "): ) [9583,9584]",
      "dest": "): ) [9583,9584]"
    },
    {
      "src": "call_argument [11132,11221]",
      "dest": "call_argument [11132,11221]"
    },
    {
      "src": "address: address [2296,2303]",
      "dest": "address: address [2296,2303]"
    },
    {
      "src": "call_argument [20761,20765]",
      "dest": "call_argument [20761,20765]"
    },
    {
      "src": "(: ( [9877,9878]",
      "dest": "(: ( [9877,9878]"
    },
    {
      "src": "call_argument [14702,14708]",
      "dest": "call_argument [14702,14708]"
    },
    {
      "src": "(: ( [21543,21544]",
      "dest": "(: ( [21543,21544]"
    },
    {
      "src": "primitive_type [13125,13132]",
      "dest": "primitive_type [13125,13132]"
    },
    {
      "src": "type_name [24675,24679]",
      "dest": "type_name [24675,24679]"
    },
    {
      "src": "call_argument [13269,13270]",
      "dest": "call_argument [13269,13270]"
    },
    {
      "src": "call_expression [26046,26055]",
      "dest": "call_expression [25947,25956]"
    },
    {
      "src": "): ) [23300,23301]",
      "dest": "): ) [23300,23301]"
    },
    {
      "src": "identifier: a [4667,4668]",
      "dest": "identifier: a [4667,4668]"
    },
    {
      "src": "solidity_version:  0.5.17 [15,22]",
      "dest": "solidity_version:  0.5.17 [15,22]"
    },
    {
      "src": "(: ( [12510,12511]",
      "dest": "(: ( [12510,12511]"
    },
    {
      "src": "call_argument [26634,26635]",
      "dest": "call_argument [26522,26523]"
    },
    {
      "src": "(: ( [20165,20166]",
      "dest": "(: ( [20165,20166]"
    },
    {
      "src": ",: , [5566,5567]",
      "dest": ",: , [5566,5567]"
    },
    {
      "src": "primitive_type [15226,15233]",
      "dest": "primitive_type [15226,15233]"
    },
    {
      "src": "call_argument [11750,11762]",
      "dest": "call_argument [11750,11762]"
    },
    {
      "src": "type_name [5568,5575]",
      "dest": "type_name [5568,5575]"
    },
    {
      "src": "comment: // benefit is lost if 'b' is also tested. [6136,6177]",
      "dest": "comment: // benefit is lost if 'b' is also tested. [6136,6177]"
    },
    {
      "src": "variable_declaration_statement [7739,7757]",
      "dest": "variable_declaration_statement [7739,7757]"
    },
    {
      "src": "identifier: selector [21984,21992]",
      "dest": "identifier: selector [21984,21992]"
    },
    {
      "src": "): ) [17345,17346]",
      "dest": "): ) [17345,17346]"
    },
    {
      "src": "{: { [3295,3296]",
      "dest": "{: { [3295,3296]"
    },
    {
      "src": "identifier: approve [21643,21650]",
      "dest": "identifier: approve [21643,21650]"
    },
    {
      "src": "parameter [7616,7623]",
      "dest": "parameter [7616,7623]"
    },
    {
      "src": ",: , [21557,21558]",
      "dest": ",: , [21557,21558]"
    },
    {
      "src": "return_type_definition [18914,18939]",
      "dest": "return_type_definition [18914,18939]"
    },
    {
      "src": ".: . [21975,21976]",
      "dest": ".: . [21975,21976]"
    },
    {
      "src": "==: == [21162,21164]",
      "dest": "==: == [21162,21164]"
    },
    {
      "src": "type_cast_expression [21832,21845]",
      "dest": "type_cast_expression [21832,21845]"
    },
    {
      "src": "(: ( [12423,12424]",
      "dest": "(: ( [12423,12424]"
    },
    {
      "src": "address: address [2037,2044]",
      "dest": "address: address [2037,2044]"
    },
    {
      "src": "call_argument [13190,13229]",
      "dest": "call_argument [13190,13229]"
    },
    {
      "src": "returns: returns [23842,23849]",
      "dest": "returns: returns [23842,23849]"
    },
    {
      "src": "): ) [10413,10414]",
      "dest": "): ) [10413,10414]"
    },
    {
      "src": "identifier: errorMessage [8993,9005]",
      "dest": "identifier: errorMessage [8993,9005]"
    },
    {
      "src": "state_mutability [958,962]",
      "dest": "state_mutability [958,962]"
    },
    {
      "src": "identifier: token [21637,21642]",
      "dest": "identifier: token [21637,21642]"
    },
    {
      "src": "call_argument [15877,15883]",
      "dest": "call_argument [15877,15883]"
    },
    {
      "src": "}: } [27010,27011]",
      "dest": "}: } [26936,26937]"
    },
    {
      "src": "(: ( [24967,24968]",
      "dest": "(: ( [24967,24968]"
    },
    {
      "src": "parameter [13125,13139]",
      "dest": "parameter [13125,13139]"
    },
    {
      "src": "call_argument [26543,26556]",
      "dest": "call_argument [26431,26444]"
    },
    {
      "src": "bool: bool [10409,10413]",
      "dest": "bool: bool [10409,10413]"
    },
    {
      "src": ".: . [26985,26986]",
      "dest": ".: . [26888,26889]"
    },
    {
      "src": "primitive_type [20451,20458]",
      "dest": "primitive_type [20451,20458]"
    },
    {
      "src": "parameter [21454,21469]",
      "dest": "parameter [21454,21469]"
    },
    {
      "src": "contract_body [43,2592]",
      "dest": "contract_body [43,2592]"
    },
    {
      "src": "function_definition [18864,18989]",
      "dest": "function_definition [18864,18989]"
    },
    {
      "src": "call_argument [23624,23645]",
      "dest": "call_argument [23624,23645]"
    },
    {
      "src": "identifier: abi [20709,20712]",
      "dest": "identifier: abi [20709,20712]"
    },
    {
      "src": "string [23624,23645]",
      "dest": "string [23624,23645]"
    },
    {
      "src": "function: function [13071,13079]",
      "dest": "function: function [13071,13079]"
    },
    {
      "src": "primitive_type [7739,7746]",
      "dest": "primitive_type [7739,7746]"
    },
    {
      "src": "function: function [24827,24835]",
      "dest": "function: function [24827,24835]"
    },
    {
      "src": "identifier: require [13872,13879]",
      "dest": "identifier: require [13872,13879]"
    },
    {
      "src": "identifier: to [20559,20561]",
      "dest": "identifier: to [20559,20561]"
    },
    {
      "src": "yul_function_call [25209,25235]",
      "dest": "yul_function_call [25209,25235]"
    },
    {
      "src": "identifier: _name [15990,15995]",
      "dest": "identifier: _name [15990,15995]"
    },
    {
      "src": "bool: bool [23136,23140]",
      "dest": "bool: bool [23136,23140]"
    },
    {
      "src": "call_argument [26990,27003]",
      "dest": "call_argument [26916,26929]"
    },
    {
      "src": "contract_body [9145,15934]",
      "dest": "contract_body [9145,15934]"
    },
    {
      "src": "identifier: accountHash [18617,18628]",
      "dest": "identifier: accountHash [18617,18628]"
    },
    {
      "src": "identifier: spender [11799,11806]",
      "dest": "identifier: spender [11799,11806]"
    },
    {
      "src": "true: true [11239,11243]",
      "dest": "true: true [11239,11243]"
    },
    {
      "src": "number_literal: 0 [25033,25034]",
      "dest": "number_literal: 0 [25033,25034]"
    },
    {
      "src": "uint256: uint256 [4659,4666]",
      "dest": "uint256: uint256 [4659,4666]"
    },
    {
      "src": "identifier: mod [8953,8956]",
      "dest": "identifier: mod [8953,8956]"
    },
    {
      "src": "call_argument [11110,11116]",
      "dest": "call_argument [11110,11116]"
    },
    {
      "src": ",: , [11762,11763]",
      "dest": ",: , [11762,11763]"
    },
    {
      "src": "call_argument [13980,13986]",
      "dest": "call_argument [13980,13986]"
    },
    {
      "src": "call_argument [21970,21992]",
      "dest": "call_argument [21970,21992]"
    },
    {
      "src": "parameter [11689,11707]",
      "dest": "parameter [11689,11707]"
    },
    {
      "src": "expression_statement [23212,23265]",
      "dest": "expression_statement [23212,23265]"
    },
    {
      "src": "=: = [4733,4734]",
      "dest": "=: = [4733,4734]"
    },
    {
      "src": "internal: internal [21774,21782]",
      "dest": "internal: internal [21774,21782]"
    },
    {
      "src": "[: [ [10182,10183]",
      "dest": "[: [ [10182,10183]"
    },
    {
      "src": "call_argument [25119,25126]",
      "dest": "call_argument [25119,25126]"
    },
    {
      "src": "primitive_type [2527,2534]",
      "dest": "primitive_type [2527,2534]"
    },
    {
      "src": "comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      */ [24732,24822]",
      "dest": "comment: /**      * @dev Transfers ownership of the contract to a new account (`newOwner`).      */ [24732,24822]"
    },
    {
      "src": "call_argument [9969,9978]",
      "dest": "call_argument [9969,9978]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [7874,8307]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [7874,8307]"
    },
    {
      "src": ",: , [10455,10456]",
      "dest": ",: , [10455,10456]"
    },
    {
      "src": "bool: bool [20166,20170]",
      "dest": "bool: bool [20166,20170]"
    },
    {
      "src": "identifier: errorMessage [5593,5605]",
      "dest": "identifier: errorMessage [5593,5605]"
    },
    {
      "src": "identifier: value [20657,20662]",
      "dest": "identifier: value [20657,20662]"
    },
    {
      "src": "call_expression [15278,15346]",
      "dest": "call_expression [15278,15346]"
    },
    {
      "src": ",: , [6977,6978]",
      "dest": ",: , [6977,6978]"
    },
    {
      "src": "type_name [14458,14465]",
      "dest": "type_name [14458,14465]"
    },
    {
      "src": "[: [ [10189,10190]",
      "dest": "[: [ [10189,10190]"
    },
    {
      "src": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      *      * _Available since v2.4.0._      */ [18995,19941]",
      "dest": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      *      * _Available since v2.4.0._      */ [18995,19941]"
    },
    {
      "src": "call_expression [21816,21855]",
      "dest": "call_expression [21816,21855]"
    },
    {
      "src": "return: return [23906,23912]",
      "dest": "return: return [23906,23912]"
    },
    {
      "src": "): ) [6950,6951]",
      "dest": "): ) [6950,6951]"
    },
    {
      "src": "string_literal [13273,13310]",
      "dest": "string_literal [13273,13310]"
    },
    {
      "src": "(: ( [20608,20609]",
      "dest": "(: ( [20608,20609]"
    },
    {
      "src": "call_argument [4758,4764]",
      "dest": "call_argument [4758,4764]"
    },
    {
      "src": "identifier: recipient [572,581]",
      "dest": "identifier: recipient [572,581]"
    },
    {
      "src": "function_definition [13071,13535]",
      "dest": "function_definition [13071,13535]"
    },
    {
      "src": "parameter [21742,21757]",
      "dest": "parameter [21742,21757]"
    },
    {
      "src": "uint256: uint256 [2338,2345]",
      "dest": "uint256: uint256 [2338,2345]"
    },
    {
      "src": "type_name [20843,20850]",
      "dest": "type_name [20843,20850]"
    },
    {
      "src": "function: function [20583,20591]",
      "dest": "function: function [20583,20591]"
    },
    {
      "src": "identifier: balanceOf [267,276]",
      "dest": "identifier: balanceOf [267,276]"
    },
    {
      "src": "{: { [3419,3420]",
      "dest": "{: { [3419,3420]"
    },
    {
      "src": "(: ( [26493,26494]",
      "dest": "(: ( [26381,26382]"
    },
    {
      "src": ",: , [13508,13509]",
      "dest": ",: , [13508,13509]"
    },
    {
      "src": "yul_path [25216,25224]",
      "dest": "yul_path [25216,25224]"
    },
    {
      "src": "private: private [9321,9328]",
      "dest": "private: private [9321,9328]"
    },
    {
      "src": "primitive_type [25333,25340]",
      "dest": "primitive_type [25333,25340]"
    },
    {
      "src": "identifier: msg [24709,24712]",
      "dest": "identifier: msg [24709,24712]"
    },
    {
      "src": "function_definition [5971,6430]",
      "dest": "function_definition [5971,6430]"
    },
    {
      "src": ".: . [26520,26521]",
      "dest": ".: . [26408,26409]"
    },
    {
      "src": "call_expression [6348,6404]",
      "dest": "call_expression [6348,6404]"
    },
    {
      "src": "identifier: amount [13133,13139]",
      "dest": "identifier: amount [13133,13139]"
    },
    {
      "src": "type_cast_expression [20035,20048]",
      "dest": "type_cast_expression [20035,20048]"
    },
    {
      "src": "type_name [15226,15233]",
      "dest": "type_name [15226,15233]"
    },
    {
      "src": "pure: pure [4690,4694]",
      "dest": "pure: pure [4690,4694]"
    },
    {
      "src": "return: return [8389,8395]",
      "dest": "return: return [8389,8395]"
    },
    {
      "src": ".: . [26309,26310]",
      "dest": ".: . [26210,26211]"
    },
    {
      "src": "variable_declaration [6321,6330]",
      "dest": "variable_declaration [6321,6330]"
    },
    {
      "src": "comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [3532,3650]",
      "dest": "comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [3532,3650]"
    },
    {
      "src": "): ) [21577,21578]",
      "dest": "): ) [21577,21578]"
    },
    {
      "src": "identifier: require [23602,23609]",
      "dest": "identifier: require [23602,23609]"
    },
    {
      "src": "type_name [9313,9320]",
      "dest": "type_name [9313,9320]"
    },
    {
      "src": "(: ( [916,917]",
      "dest": "(: ( [916,917]"
    },
    {
      "src": "(: ( [20233,20234]",
      "dest": "(: ( [20233,20234]"
    },
    {
      "src": "): ) [25368,25369]",
      "dest": "): ) [25368,25369]"
    },
    {
      "src": "): ) [23015,23016]",
      "dest": "): ) [23015,23016]"
    },
    {
      "src": "call_expression [20027,20100]",
      "dest": "call_expression [20027,20100]"
    },
    {
      "src": "parameter [2053,2070]",
      "dest": "parameter [2053,2070]"
    },
    {
      "src": "expression_statement [26300,26326]",
      "dest": "expression_statement [26201,26227]"
    },
    {
      "src": "{: { [24570,24571]",
      "dest": "{: { [24570,24571]"
    },
    {
      "src": "call_expression [11101,11222]",
      "dest": "call_expression [11101,11222]"
    },
    {
      "src": "member_expression [20035,20056]",
      "dest": "member_expression [20035,20056]"
    },
    {
      "src": "return_statement [5163,5214]",
      "dest": "return_statement [5163,5214]"
    },
    {
      "src": "constructor_definition [16243,16406]",
      "dest": "constructor_definition [16243,16406]"
    },
    {
      "src": "call_argument [21832,21845]",
      "dest": "call_argument [21832,21845]"
    },
    {
      "src": "}: } [3297,3298]",
      "dest": "}: } [3297,3298]"
    },
    {
      "src": "identifier: Transfer [2287,2295]",
      "dest": "identifier: Transfer [2287,2295]"
    },
    {
      "src": "true: true [12586,12590]",
      "dest": "true: true [12586,12590]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [1714,2010]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from `sender` to `recipient` using the      * allowance mechanism. `amount` is then deducted from the caller's      * allowance.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [1714,2010]"
    },
    {
      "src": "return_type_definition [9437,9454]",
      "dest": "return_type_definition [9437,9454]"
    },
    {
      "src": "(: ( [23219,23220]",
      "dest": "(: ( [23219,23220]"
    },
    {
      "src": "member_expression [26622,26632]",
      "dest": "member_expression [26510,26520]"
    },
    {
      "src": "identifier: owner [24698,24703]",
      "dest": "identifier: owner [24698,24703]"
    },
    {
      "src": "primitive_type [11689,11696]",
      "dest": "primitive_type [11689,11696]"
    },
    {
      "src": "uint256: uint256 [5144,5151]",
      "dest": "uint256: uint256 [5144,5151]"
    },
    {
      "src": "type_name [6909,6916]",
      "dest": "type_name [6909,6916]"
    },
    {
      "src": "visibility [3479,3487]",
      "dest": "visibility [3479,3487]"
    },
    {
      "src": "primitive_type [15295,15302]",
      "dest": "primitive_type [15295,15302]"
    },
    {
      "src": "external: external [26014,26022]",
      "dest": "external: external [25885,25893]"
    },
    {
      "src": "identifier: add [13976,13979]",
      "dest": "identifier: add [13976,13979]"
    },
    {
      "src": "uint: uint [23951,23955]",
      "dest": "uint: uint [23951,23955]"
    },
    {
      "src": "modifier_invocation [25920,25974]",
      "dest": "modifier_invocation [25793,25845]"
    },
    {
      "src": "]: ] [12505,12506]",
      "dest": "]: ] [12505,12506]"
    },
    {
      "src": "(: ( [10971,10972]",
      "dest": "(: ( [10971,10972]"
    },
    {
      "src": "uint: uint [26432,26436]",
      "dest": "uint: uint [26320,26324]"
    },
    {
      "src": "parameter [23951,23957]",
      "dest": "parameter [23951,23957]"
    },
    {
      "src": "identifier: Address [20377,20384]",
      "dest": "identifier: Address [20377,20384]"
    },
    {
      "src": "internal: internal [7593,7601]",
      "dest": "internal: internal [7593,7601]"
    },
    {
      "src": "state_mutability [10131,10135]",
      "dest": "state_mutability [10131,10135]"
    },
    {
      "src": "public: public [11709,11715]",
      "dest": "public: public [11709,11715]"
    },
    {
      "src": "parameter [20812,20824]",
      "dest": "parameter [20812,20824]"
    },
    {
      "src": "\": \" [6979,6980]",
      "dest": "\": \" [6979,6980]"
    },
    {
      "src": "identifier: value [2583,2588]",
      "dest": "identifier: value [2583,2588]"
    },
    {
      "src": "bool: bool [23535,23539]",
      "dest": "bool: bool [23535,23539]"
    },
    {
      "src": "identifier: approve [1643,1650]",
      "dest": "identifier: approve [1643,1650]"
    },
    {
      "src": "emit_statement [14719,14762]",
      "dest": "emit_statement [14719,14762]"
    },
    {
      "src": ">=: >= [20057,20059]",
      "dest": ">=: >= [20057,20059]"
    },
    {
      "src": "return_type_definition [12415,12429]",
      "dest": "return_type_definition [12415,12429]"
    },
    {
      "src": "view: view [25351,25355]",
      "dest": "view: view [25351,25355]"
    },
    {
      "src": "{: { [23529,23530]",
      "dest": "{: { [23529,23530]"
    },
    {
      "src": "state_variable_declaration [24080,24135]",
      "dest": "state_variable_declaration [24080,24135]"
    },
    {
      "src": "identifier: _allowances [11132,11143]",
      "dest": "identifier: _allowances [11132,11143]"
    },
    {
      "src": "(: ( [10359,10360]",
      "dest": "(: ( [10359,10360]"
    },
    {
      "src": "assembly: assembly [18543,18551]",
      "dest": "assembly: assembly [18543,18551]"
    },
    {
      "src": "(: ( [11671,11672]",
      "dest": "(: ( [11671,11672]"
    },
    {
      "src": "address: address [24168,24175]",
      "dest": "address: address [24168,24175]"
    },
    {
      "src": "=: = [23668,23669]",
      "dest": "=: = [23668,23669]"
    },
    {
      "src": "public: public [9425,9431]",
      "dest": "public: public [9425,9431]"
    },
    {
      "src": "address: address [24414,24421]",
      "dest": "address: address [24414,24421]"
    },
    {
      "src": "identifier: amount [15877,15883]",
      "dest": "identifier: amount [15877,15883]"
    },
    {
      "src": "public: public [25561,25567]",
      "dest": "public: public [25561,25567]"
    },
    {
      "src": "parameter [9606,9613]",
      "dest": "parameter [9606,9613]"
    },
    {
      "src": ".: . [21821,21822]",
      "dest": ".: . [21821,21822]"
    },
    {
      "src": "function_definition [19946,20311]",
      "dest": "function_definition [19946,20311]"
    },
    {
      "src": "): ) [13477,13478]",
      "dest": "): ) [13477,13478]"
    },
    {
      "src": "type_name [26399,26403]",
      "dest": "type_name [26257,26261]"
    },
    {
      "src": "identifier: token [21326,21331]",
      "dest": "identifier: token [21326,21331]"
    },
    {
      "src": "comment: /**     * @dev Since this is a proxy, the values set in the ERC20Detailed constructor are not actually set in the main contract.     */ [25742,25877]",
      "dest": "comment: /**     * @dev Since this is a proxy, the values set in the ERC20Detailed constructor are not actually set in the main contract.     */ [25615,25750]"
    },
    {
      "src": "return_statement [18597,18649]",
      "dest": "return_statement [18597,18649]"
    },
    {
      "src": "identifier: a [6333,6334]",
      "dest": "identifier: a [6333,6334]"
    },
    {
      "src": "primitive_type [17340,17345]",
      "dest": "primitive_type [17340,17345]"
    },
    {
      "src": "public: public [26735,26741]",
      "dest": "public: public [26584,26590]"
    },
    {
      "src": "identifier: _balances [9221,9230]",
      "dest": "identifier: _balances [9221,9230]"
    },
    {
      "src": "variable_declaration [23136,23148]",
      "dest": "variable_declaration [23136,23148]"
    },
    {
      "src": "expression_statement [24028,24042]",
      "dest": "expression_statement [24028,24042]"
    },
    {
      "src": "identifier: OWNER_SLOT [24097,24107]",
      "dest": "identifier: OWNER_SLOT [24097,24107]"
    },
    {
      "src": "else: else [26215,26219]",
      "dest": "else: else [26116,26120]"
    },
    {
      "src": "identifier: amount [13521,13527]",
      "dest": "identifier: amount [13521,13527]"
    },
    {
      "src": "): ) [26111,26112]",
      "dest": "): ) [26012,26013]"
    },
    {
      "src": ",: , [5178,5179]",
      "dest": ",: , [5178,5179]"
    },
    {
      "src": "return_type_definition [17331,17346]",
      "dest": "return_type_definition [17331,17346]"
    },
    {
      "src": "identifier: redeemFactor [25596,25608]",
      "dest": "identifier: redeemFactor [25596,25608]"
    },
    {
      "src": "identifier: owner [925,930]",
      "dest": "identifier: owner [925,930]"
    },
    {
      "src": "assignment_expression [24028,24041]",
      "dest": "assignment_expression [24028,24041]"
    },
    {
      "src": "identifier: from [20631,20635]",
      "dest": "identifier: from [20631,20635]"
    },
    {
      "src": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [5737,5966]",
      "dest": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      * - Multiplication cannot overflow.      */ [5737,5966]"
    },
    {
      "src": "parameter [20439,20449]",
      "dest": "parameter [20439,20449]"
    },
    {
      "src": ",: , [23957,23958]",
      "dest": ",: , [23957,23958]"
    },
    {
      "src": "): ) [11707,11708]",
      "dest": "): ) [11707,11708]"
    },
    {
      "src": "call_argument [14524,14559]",
      "dest": "call_argument [14524,14559]"
    },
    {
      "src": "{: { [5153,5154]",
      "dest": "{: { [5153,5154]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-allowance}.      */ [10021,10068]",
      "dest": "comment: /**      * @dev See {IERC20-allowance}.      */ [10021,10068]"
    },
    {
      "src": "function_body [16523,16552]",
      "dest": "function_body [16523,16552]"
    },
    {
      "src": "call_expression [26990,27003]",
      "dest": "call_expression [26916,26929]"
    },
    {
      "src": "member_expression [20184,20198]",
      "dest": "member_expression [20184,20198]"
    },
    {
      "src": "(: ( [24674,24675]",
      "dest": "(: ( [24674,24675]"
    },
    {
      "src": "(: ( [6942,6943]",
      "dest": "(: ( [6942,6943]"
    },
    {
      "src": "type_cast_expression [21544,21557]",
      "dest": "type_cast_expression [21544,21557]"
    },
    {
      "src": "visibility [24654,24660]",
      "dest": "visibility [24654,24660]"
    },
    {
      "src": "(: ( [7708,7709]",
      "dest": "(: ( [7708,7709]"
    },
    {
      "src": "): ) [18647,18648]",
      "dest": "): ) [18647,18648]"
    },
    {
      "src": "identifier: b [8976,8977]",
      "dest": "identifier: b [8976,8977]"
    },
    {
      "src": "identifier: Initializable [25407,25420]",
      "dest": "identifier: Initializable [25407,25420]"
    },
    {
      "src": "): ) [27131,27132]",
      "dest": "): ) [27015,27016]"
    },
    {
      "src": "bool: bool [1702,1706]",
      "dest": "bool: bool [1702,1706]"
    },
    {
      "src": "identifier: codehash [18554,18562]",
      "dest": "identifier: codehash [18554,18562]"
    },
    {
      "src": "identifier: selector [21651,21659]",
      "dest": "identifier: selector [21651,21659]"
    },
    {
      "src": "internal: internal [4681,4689]",
      "dest": "internal: internal [4681,4689]"
    },
    {
      "src": "{: { [7625,7626]",
      "dest": "{: { [7625,7626]"
    },
    {
      "src": "=: = [27446,27447]",
      "dest": "=: = [27175,27176]"
    },
    {
      "src": "internal: internal [23828,23836]",
      "dest": "internal: internal [23828,23836]"
    },
    {
      "src": "identifier: Transfer [13493,13501]",
      "dest": "identifier: Transfer [13493,13501]"
    },
    {
      "src": "parameter [20637,20647]",
      "dest": "parameter [20637,20647]"
    },
    {
      "src": "bytes32: bytes32 [25147,25154]",
      "dest": "bytes32: bytes32 [25147,25154]"
    },
    {
      "src": "]: ] [11164,11165]",
      "dest": "]: ] [11164,11165]"
    },
    {
      "src": "number_literal: 0 [14080,14081]",
      "dest": "number_literal: 0 [14080,14081]"
    },
    {
      "src": "call_expression [24110,24134]",
      "dest": "call_expression [24110,24134]"
    },
    {
      "src": "call_argument [20702,20707]",
      "dest": "call_argument [20702,20707]"
    },
    {
      "src": "comment: // safeApprove should only be called when setting an initial allowance, [20877,20948]",
      "dest": "comment: // safeApprove should only be called when setting an initial allowance, [20877,20948]"
    },
    {
      "src": "state_mutability [26860,26864]",
      "dest": "state_mutability [26709,26713]"
    },
    {
      "src": "call_argument [11084,11090]",
      "dest": "call_argument [11084,11090]"
    },
    {
      "src": ".: . [20548,20549]",
      "dest": ".: . [20548,20549]"
    },
    {
      "src": "}: } [25976,25977]",
      "dest": "}: } [25847,25848]"
    },
    {
      "src": "(: ( [26448,26449]",
      "dest": "(: ( [26336,26337]"
    },
    {
      "src": "==: == [26908,26910]",
      "dest": "==: == [26757,26759]"
    },
    {
      "src": "identifier: IERC20 [9138,9144]",
      "dest": "identifier: IERC20 [9138,9144]"
    },
    {
      "src": "\": \" [23882,23883]",
      "dest": "\": \" [23882,23883]"
    },
    {
      "src": "return_type_definition [3393,3418]",
      "dest": "return_type_definition [3393,3418]"
    },
    {
      "src": "string_literal [25037,25082]",
      "dest": "string_literal [25037,25082]"
    },
    {
      "src": "expression_statement [11055,11092]",
      "dest": "expression_statement [11055,11092]"
    },
    {
      "src": "primitive_type [23951,23955]",
      "dest": "primitive_type [23951,23955]"
    },
    {
      "src": ",: , [15836,15837]",
      "dest": ",: , [15836,15837]"
    },
    {
      "src": "uint160: uint160 [18965,18972]",
      "dest": "uint160: uint160 [18965,18972]"
    },
    {
      "src": "): ) [26279,26280]",
      "dest": "): ) [26180,26181]"
    },
    {
      "src": "{: { [18111,18112]",
      "dest": "{: { [18111,18112]"
    },
    {
      "src": "member_expression [26779,26793]",
      "dest": "member_expression [26628,26642]"
    },
    {
      "src": "}: } [9490,9491]",
      "dest": "}: } [9490,9491]"
    },
    {
      "src": "comment: //  2. The call itself is made, and success asserted [22784,22836]",
      "dest": "comment: //  2. The call itself is made, and success asserted [22784,22836]"
    },
    {
      "src": "primitive_type [9266,9273]",
      "dest": "primitive_type [9266,9273]"
    },
    {
      "src": "identifier: allowance [21178,21187]",
      "dest": "identifier: allowance [21178,21187]"
    },
    {
      "src": "(: ( [23609,23610]",
      "dest": "(: ( [23609,23610]"
    },
    {
      "src": "uint8: uint8 [16029,16034]",
      "dest": "uint8: uint8 [16029,16034]"
    },
    {
      "src": "member_expression [21333,21355]",
      "dest": "member_expression [21333,21355]"
    },
    {
      "src": "returns: returns [3393,3400]",
      "dest": "returns: returns [3393,3400]"
    },
    {
      "src": "identifier: _balances [13342,13351]",
      "dest": "identifier: _balances [13342,13351]"
    },
    {
      "src": "string_literal [6979,7007]",
      "dest": "string_literal [6979,7007]"
    },
    {
      "src": "type_name [11689,11696]",
      "dest": "type_name [11689,11696]"
    },
    {
      "src": "parameter [9446,9453]",
      "dest": "parameter [9446,9453]"
    },
    {
      "src": "identifier: IERC20 [25524,25530]",
      "dest": "identifier: IERC20 [25524,25530]"
    },
    {
      "src": ".: . [21369,21370]",
      "dest": ".: . [21369,21370]"
    },
    {
      "src": "\": \" [13309,13310]",
      "dest": "\": \" [13309,13310]"
    },
    {
      "src": "identifier: IERC20 [20609,20615]",
      "dest": "identifier: IERC20 [20609,20615]"
    },
    {
      "src": "identifier: this [26107,26111]",
      "dest": "identifier: this [26008,26012]"
    },
    {
      "src": "(: ( [21636,21637]",
      "dest": "(: ( [21636,21637]"
    },
    {
      "src": "(: ( [23407,23408]",
      "dest": "(: ( [23407,23408]"
    },
    {
      "src": "identifier: to [2334,2336]",
      "dest": "identifier: to [2334,2336]"
    },
    {
      "src": "primitive_type [10107,10114]",
      "dest": "primitive_type [10107,10114]"
    },
    {
      "src": "call_argument [21840,21844]",
      "dest": "call_argument [21840,21844]"
    },
    {
      "src": "identifier: this [26802,26806]",
      "dest": "identifier: this [26651,26655]"
    },
    {
      "src": "uint256: uint256 [9313,9320]",
      "dest": "uint256: uint256 [9313,9320]"
    },
    {
      "src": "identifier: require [25005,25012]",
      "dest": "identifier: require [25005,25012]"
    },
    {
      "src": "function_body [4713,4822]",
      "dest": "function_body [4713,4822]"
    },
    {
      "src": "function_body [26023,26375]",
      "dest": "function_body [25894,26233]"
    },
    {
      "src": ",: , [930,931]",
      "dest": ",: , [930,931]"
    },
    {
      "src": "uint256: uint256 [11689,11696]",
      "dest": "uint256: uint256 [11689,11696]"
    },
    {
      "src": "=: = [26194,26195]",
      "dest": "=: = [26095,26096]"
    },
    {
      "src": "): ) [141,142]",
      "dest": "): ) [141,142]"
    },
    {
      "src": "address: address [23177,23184]",
      "dest": "address: address [23177,23184]"
    },
    {
      "src": "visibility [5121,5129]",
      "dest": "visibility [5121,5129]"
    },
    {
      "src": "function: function [15193,15201]",
      "dest": "function: function [15193,15201]"
    },
    {
      "src": "type_name [23959,23963]",
      "dest": "type_name [23959,23963]"
    },
    {
      "src": "-: - [5702,5703]",
      "dest": "-: - [5702,5703]"
    },
    {
      "src": "contract_body [3111,3683]",
      "dest": "contract_body [3111,3683]"
    },
    {
      "src": "function: function [23933,23941]",
      "dest": "function: function [23933,23941]"
    },
    {
      "src": "): ) [24223,24224]",
      "dest": "): ) [24223,24224]"
    },
    {
      "src": "user_defined_type [9129,9136]",
      "dest": "user_defined_type [9129,9136]"
    },
    {
      "src": "call_expression [14592,14660]",
      "dest": "call_expression [14592,14660]"
    },
    {
      "src": "return: return [18950,18956]",
      "dest": "return: return [18950,18956]"
    },
    {
      "src": "call_expression [13446,13478]",
      "dest": "call_expression [13446,13478]"
    },
    {
      "src": "}: } [16551,16552]",
      "dest": "}: } [16551,16552]"
    },
    {
      "src": "parameter [11725,11729]",
      "dest": "parameter [11725,11729]"
    },
    {
      "src": "private: private [16008,16015]",
      "dest": "private: private [16008,16015]"
    },
    {
      "src": "call_argument [15303,15304]",
      "dest": "call_argument [15303,15304]"
    },
    {
      "src": "uint: uint [26132,26136]",
      "dest": "uint: uint [26033,26037]"
    },
    {
      "src": "): ) [12495,12496]",
      "dest": "): ) [12495,12496]"
    },
    {
      "src": "identifier: recipient [11073,11082]",
      "dest": "identifier: recipient [11073,11082]"
    },
    {
      "src": "parameter [317,324]",
      "dest": "parameter [317,324]"
    },
    {
      "src": "indexed: indexed [2535,2542]",
      "dest": "indexed: indexed [2535,2542]"
    },
    {
      "src": "yul_path [18554,18562]",
      "dest": "yul_path [18554,18562]"
    },
    {
      "src": "number_literal: 0x0 [18644,18647]",
      "dest": "number_literal: 0x0 [18644,18647]"
    },
    {
      "src": ",: , [12470,12471]",
      "dest": ",: , [12470,12471]"
    },
    {
      "src": "state_variable_declaration [16029,16053]",
      "dest": "state_variable_declaration [16029,16053]"
    },
    {
      "src": "}: } [27469,27470]",
      "dest": "}: } [27198,27199]"
    },
    {
      "src": "identifier: abi [21614,21617]",
      "dest": "identifier: abi [21614,21617]"
    },
    {
      "src": "/: / [7753,7754]",
      "dest": "/: / [7753,7754]"
    },
    {
      "src": "call_argument [20771,20776]",
      "dest": "call_argument [20771,20776]"
    },
    {
      "src": "variable_declaration_statement [25147,25177]",
      "dest": "variable_declaration_statement [25147,25177]"
    },
    {
      "src": "(: ( [18964,18965]",
      "dest": "(: ( [18964,18965]"
    },
    {
      "src": "string [12528,12567]",
      "dest": "string [12528,12567]"
    },
    {
      "src": "comment: /**      * @dev Returns the address of the current owner.      */ [24307,24372]",
      "dest": "comment: /**      * @dev Returns the address of the current owner.      */ [24307,24372]"
    },
    {
      "src": "identifier: add [11808,11811]",
      "dest": "identifier: add [11808,11811]"
    },
    {
      "src": "visibility [25561,25567]",
      "dest": "visibility [25561,25567]"
    },
    {
      "src": "): ) [20777,20778]",
      "dest": "): ) [20777,20778]"
    },
    {
      "src": "parameter [15211,15224]",
      "dest": "parameter [15211,15224]"
    },
    {
      "src": "function_definition [10073,10205]",
      "dest": "function_definition [10073,10205]"
    },
    {
      "src": "type_name [2296,2303]",
      "dest": "type_name [2296,2303]"
    },
    {
      "src": "call_expression [20184,20212]",
      "dest": "call_expression [20184,20212]"
    },
    {
      "src": "returns: returns [6934,6941]",
      "dest": "returns: returns [6934,6941]"
    },
    {
      "src": "identifier: _gap [23791,23795]",
      "dest": "identifier: _gap [23791,23795]"
    },
    {
      "src": "function: function [26381,26389]",
      "dest": "function: function [26239,26247]"
    },
    {
      "src": "visibility [16683,16689]",
      "dest": "visibility [16683,16689]"
    },
    {
      "src": "string [23882,23895]",
      "dest": "string [23882,23895]"
    },
    {
      "src": "): ) [621,622]",
      "dest": "): ) [621,622]"
    },
    {
      "src": "): ) [16681,16682]",
      "dest": "): ) [16681,16682]"
    },
    {
      "src": "parameter [1668,1682]",
      "dest": "parameter [1668,1682]"
    },
    {
      "src": "type_name [25147,25154]",
      "dest": "type_name [25147,25154]"
    },
    {
      "src": "visibility [4681,4689]",
      "dest": "visibility [4681,4689]"
    },
    {
      "src": "state_variable_declaration [16001,16024]",
      "dest": "state_variable_declaration [16001,16024]"
    },
    {
      "src": "primitive_type [5579,5585]",
      "dest": "primitive_type [5579,5585]"
    },
    {
      "src": "identifier: token [20432,20437]",
      "dest": "identifier: token [20432,20437]"
    },
    {
      "src": "function_definition [4646,4822]",
      "dest": "function_definition [4646,4822]"
    },
    {
      "src": "public: public [9585,9591]",
      "dest": "public: public [9585,9591]"
    },
    {
      "src": "): ) [20211,20212]",
      "dest": "): ) [20211,20212]"
    },
    {
      "src": "member_expression [20709,20731]",
      "dest": "member_expression [20709,20731]"
    },
    {
      "src": "return_type_definition [23842,23855]",
      "dest": "return_type_definition [23842,23855]"
    },
    {
      "src": "): ) [14521,14522]",
      "dest": "): ) [14521,14522]"
    },
    {
      "src": "call_argument [14742,14752]",
      "dest": "call_argument [14742,14752]"
    },
    {
      "src": "=: = [6331,6332]",
      "dest": "=: = [6331,6332]"
    },
    {
      "src": "function: function [5544,5552]",
      "dest": "function: function [5544,5552]"
    },
    {
      "src": "type_name [917,924]",
      "dest": "type_name [917,924]"
    },
    {
      "src": "function: function [3459,3467]",
      "dest": "function: function [3459,3467]"
    },
    {
      "src": "identifier: abi [21333,21336]",
      "dest": "identifier: abi [21333,21336]"
    },
    {
      "src": "): ) [24017,24018]",
      "dest": "): ) [24017,24018]"
    },
    {
      "src": "parameter [26000,26012]",
      "dest": "parameter [25871,25883]"
    },
    {
      "src": "parameter [7565,7591]",
      "dest": "parameter [7565,7591]"
    },
    {
      "src": "}: } [24542,24543]",
      "dest": "}: } [24542,24543]"
    },
    {
      "src": "(: ( [9056,9057]",
      "dest": "(: ( [9056,9057]"
    },
    {
      "src": "internal: internal [24986,24994]",
      "dest": "internal: internal [24986,24994]"
    },
    {
      "src": "constructor: constructor [25882,25893]",
      "dest": "constructor: constructor [25755,25766]"
    },
    {
      "src": "expression_statement [26604,26637]",
      "dest": "expression_statement [26492,26525]"
    },
    {
      "src": "call_argument [21231,21287]",
      "dest": "call_argument [21231,21287]"
    },
    {
      "src": "identifier: approve [21976,21983]",
      "dest": "identifier: approve [21976,21983]"
    },
    {
      "src": "identifier: amount [10457,10463]",
      "dest": "identifier: amount [10457,10463]"
    },
    {
      "src": "call_argument [18965,18981]",
      "dest": "call_argument [18965,18981]"
    },
    {
      "src": "binary_expression [4758,4764]",
      "dest": "binary_expression [4758,4764]"
    },
    {
      "src": "identifier: shares [26187,26193]",
      "dest": "identifier: shares [26088,26094]"
    },
    {
      "src": "identifier: r [26437,26438]",
      "dest": "identifier: r [26325,26326]"
    },
    {
      "src": "function: function [6885,6893]",
      "dest": "function: function [6885,6893]"
    },
    {
      "src": "member_expression [3436,3446]",
      "dest": "member_expression [3436,3446]"
    },
    {
      "src": "variable_declaration [24440,24456]",
      "dest": "variable_declaration [24440,24456]"
    },
    {
      "src": "identifier: onlyOwner [24879,24888]",
      "dest": "identifier: onlyOwner [24879,24888]"
    },
    {
      "src": "!=: != [18641,18643]",
      "dest": "!=: != [18641,18643]"
    },
    {
      "src": "identifier: a [23918,23919]",
      "dest": "identifier: a [23918,23919]"
    },
    {
      "src": "function: function [21409,21417]",
      "dest": "function: function [21409,21417]"
    },
    {
      "src": "(: ( [616,617]",
      "dest": "(: ( [616,617]"
    },
    {
      "src": "(: ( [9029,9030]",
      "dest": "(: ( [9029,9030]"
    },
    {
      "src": ".: . [26069,26070]",
      "dest": ".: . [25970,25971]"
    },
    {
      "src": "member_expression [26243,26254]",
      "dest": "member_expression [26144,26155]"
    },
    {
      "src": "primitive_type [10092,10099]",
      "dest": "primitive_type [10092,10099]"
    },
    {
      "src": "string [4766,4795]",
      "dest": "string [4766,4795]"
    },
    {
      "src": "call_argument [14501,14522]",
      "dest": "call_argument [14501,14522]"
    },
    {
      "src": "\": \" [14558,14559]",
      "dest": "\": \" [14558,14559]"
    },
    {
      "src": "identifier: a [8965,8966]",
      "dest": "identifier: a [8965,8966]"
    },
    {
      "src": "(: ( [26273,26274]",
      "dest": "(: ( [26174,26175]"
    },
    {
      "src": "(: ( [11811,11812]",
      "dest": "(: ( [11811,11812]"
    },
    {
      "src": "identifier: safeTransferFrom [26070,26086]",
      "dest": "identifier: safeTransferFrom [25971,25987]"
    },
    {
      "src": "identifier: IERC20 [25469,25475]",
      "dest": "identifier: IERC20 [25469,25475]"
    },
    {
      "src": "identifier: spender [12498,12505]",
      "dest": "identifier: spender [12498,12505]"
    },
    {
      "src": "returns: returns [10136,10143]",
      "dest": "returns: returns [10136,10143]"
    },
    {
      "src": "parameter [20609,20621]",
      "dest": "parameter [20609,20621]"
    },
    {
      "src": "identifier: IERC20 [21440,21446]",
      "dest": "identifier: IERC20 [21440,21446]"
    },
    {
      "src": "identifier: b [6337,6338]",
      "dest": "identifier: b [6337,6338]"
    },
    {
      "src": "parameter [2072,2086]",
      "dest": "parameter [2072,2086]"
    },
    {
      "src": "yul_identifier [25226,25234]",
      "dest": "yul_identifier [25226,25234]"
    },
    {
      "src": "variable_declaration [18363,18379]",
      "dest": "variable_declaration [18363,18379]"
    },
    {
      "src": "returns: returns [24666,24673]",
      "dest": "returns: returns [24666,24673]"
    },
    {
      "src": "parameter [27108,27126]",
      "dest": "parameter [26997,27015]"
    },
    {
      "src": "identifier: token [21816,21821]",
      "dest": "identifier: token [21816,21821]"
    },
    {
      "src": "}: } [21402,21403]",
      "dest": "}: } [21402,21403]"
    },
    {
      "src": "string [6979,7007]",
      "dest": "string [6979,7007]"
    },
    {
      "src": "parameter [8957,8966]",
      "dest": "parameter [8957,8966]"
    },
    {
      "src": "identifier: require [15356,15363]",
      "dest": "identifier: require [15356,15363]"
    },
    {
      "src": "identifier: owner [24386,24391]",
      "dest": "identifier: owner [24386,24391]"
    },
    {
      "src": "primitive_type [24968,24975]",
      "dest": "primitive_type [24968,24975]"
    },
    {
      "src": "): ) [20662,20663]",
      "dest": "): ) [20662,20663]"
    },
    {
      "src": "identifier: data [22462,22466]",
      "dest": "identifier: data [22462,22466]"
    },
    {
      "src": "binary_expression [13880,13901]",
      "dest": "binary_expression [13880,13901]"
    },
    {
      "src": "type_name [11672,11679]",
      "dest": "type_name [11672,11679]"
    },
    {
      "src": "identifier: subtractedValue [12391,12406]",
      "dest": "identifier: subtractedValue [12391,12406]"
    },
    {
      "src": "boolean_literal [12586,12590]",
      "dest": "boolean_literal [12586,12590]"
    },
    {
      "src": "(: ( [20533,20534]",
      "dest": "(: ( [20533,20534]"
    },
    {
      "src": "return_statement [17357,17374]",
      "dest": "return_statement [17357,17374]"
    },
    {
      "src": "primitive_type [24414,24421]",
      "dest": "primitive_type [24414,24421]"
    },
    {
      "src": "identifier: _symbol [16736,16743]",
      "dest": "identifier: _symbol [16736,16743]"
    },
    {
      "src": "variable_declaration_statement [24440,24470]",
      "dest": "variable_declaration_statement [24440,24470]"
    },
    {
      "src": "{: { [6952,6953]",
      "dest": "{: { [6952,6953]"
    },
    {
      "src": ",: , [5993,5994]",
      "dest": ",: , [5993,5994]"
    },
    {
      "src": "primitive_type [27197,27204]",
      "dest": "primitive_type [26860,26867]"
    },
    {
      "src": "{: { [10415,10416]",
      "dest": "{: { [10415,10416]"
    },
    {
      "src": "parameter [6943,6950]",
      "dest": "parameter [6943,6950]"
    },
    {
      "src": "function_definition [25284,25312]",
      "dest": "function_definition [25284,25312]"
    },
    {
      "src": "(: ( [26732,26733]",
      "dest": "(: ( [26581,26582]"
    },
    {
      "src": "call_argument [15383,15384]",
      "dest": "call_argument [15383,15384]"
    },
    {
      "src": "(: ( [5143,5144]",
      "dest": "(: ( [5143,5144]"
    },
    {
      "src": "function_definition [10950,11250]",
      "dest": "function_definition [10950,11250]"
    },
    {
      "src": "uint256: uint256 [15739,15746]",
      "dest": "uint256: uint256 [15739,15746]"
    },
    {
      "src": "identifier: recipient [13456,13465]",
      "dest": "identifier: recipient [13456,13465]"
    },
    {
      "src": "(: ( [14500,14501]",
      "dest": "(: ( [14500,14501]"
    },
    {
      "src": "function: function [19946,19954]",
      "dest": "function: function [19946,19954]"
    },
    {
      "src": "identifier: b [7755,7756]",
      "dest": "identifier: b [7755,7756]"
    },
    {
      "src": "string [6368,6403]",
      "dest": "string [6368,6403]"
    },
    {
      "src": "call_expression [11773,11823]",
      "dest": "call_expression [11773,11823]"
    },
    {
      "src": "parameter [9030,9037]",
      "dest": "parameter [9030,9037]"
    },
    {
      "src": "call_argument [23010,23015]",
      "dest": "call_argument [23010,23015]"
    },
    {
      "src": "array_access [15435,15462]",
      "dest": "array_access [15435,15462]"
    },
    {
      "src": "): ) [25895,25896]",
      "dest": "): ) [25768,25769]"
    },
    {
      "src": "public: public [10393,10399]",
      "dest": "public: public [10393,10399]"
    },
    {
      "src": "internal: internal [20008,20016]",
      "dest": "internal: internal [20008,20016]"
    },
    {
      "src": "string_literal [23624,23645]",
      "dest": "string_literal [23624,23645]"
    },
    {
      "src": "parameter [21471,21484]",
      "dest": "parameter [21471,21484]"
    },
    {
      "src": "function_body [14483,14768]",
      "dest": "function_body [14483,14768]"
    },
    {
      "src": "call_expression [21947,22016]",
      "dest": "call_expression [21947,22016]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for `sender`'s tokens of at least      * `amount`.      */ [10498,10945]",
      "dest": "comment: /**      * @dev See {IERC20-transferFrom}.      *      * Emits an {Approval} event indicating the updated allowance. This is not      * required by the EIP. See the note at the beginning of {ERC20};      *      * Requirements:      * - `sender` and `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      * - the caller must have allowance for `sender`'s tokens of at least      * `amount`.      */ [10498,10945]"
    },
    {
      "src": "): ) [12428,12429]",
      "dest": "): ) [12428,12429]"
    },
    {
      "src": "identifier: require [14493,14500]",
      "dest": "identifier: require [14493,14500]"
    },
    {
      "src": "yul_identifier [18554,18562]",
      "dest": "yul_identifier [18554,18562]"
    },
    {
      "src": "identifier: _burn [14435,14440]",
      "dest": "identifier: _burn [14435,14440]"
    },
    {
      "src": "[: [ [23778,23779]",
      "dest": "[: [ [23778,23779]"
    },
    {
      "src": "]: ] [23919,23920]",
      "dest": "]: ] [23919,23920]"
    },
    {
      "src": "function_definition [3459,3681]",
      "dest": "function_definition [3459,3681]"
    },
    {
      "src": "binary_expression [5700,5705]",
      "dest": "binary_expression [5700,5705]"
    },
    {
      "src": "interface_declaration [25255,25372]",
      "dest": "interface_declaration [25255,25372]"
    },
    {
      "src": "identifier: totalSupply [26255,26266]",
      "dest": "identifier: totalSupply [26156,26167]"
    },
    {
      "src": "comment: // solhint-disable-next-line max-line-length [23343,23387]",
      "dest": "comment: // solhint-disable-next-line max-line-length [23343,23387]"
    },
    {
      "src": "identifier: a [6360,6361]",
      "dest": "identifier: a [6360,6361]"
    },
    {
      "src": "binary_expression [6333,6338]",
      "dest": "binary_expression [6333,6338]"
    },
    {
      "src": "identifier: success [23141,23148]",
      "dest": "identifier: success [23141,23148]"
    },
    {
      "src": "\": \" [5180,5181]",
      "dest": "\": \" [5180,5181]"
    },
    {
      "src": "internal: internal [9007,9015]",
      "dest": "internal: internal [9007,9015]"
    },
    {
      "src": "identifier: sub [5170,5173]",
      "dest": "identifier: sub [5170,5173]"
    },
    {
      "src": "function_definition [258,326]",
      "dest": "function_definition [258,326]"
    },
    {
      "src": ".: . [26269,26270]",
      "dest": ".: . [26170,26171]"
    },
    {
      "src": "function_definition [20403,20577]",
      "dest": "function_definition [20403,20577]"
    },
    {
      "src": "function: function [22407,22415]",
      "dest": "function: function [22407,22415]"
    },
    {
      "src": "]: ] [10188,10189]",
      "dest": "]: ] [10188,10189]"
    },
    {
      "src": "member_expression [21356,21369]",
      "dest": "member_expression [21356,21369]"
    },
    {
      "src": "): ) [23064,23065]",
      "dest": "): ) [23064,23065]"
    },
    {
      "src": "call_expression [24698,24705]",
      "dest": "call_expression [24698,24705]"
    },
    {
      "src": "type_name [23820,23824]",
      "dest": "type_name [23820,23824]"
    },
    {
      "src": "(: ( [16255,16256]",
      "dest": "(: ( [16255,16256]"
    },
    {
      "src": "visibility [26413,26421]",
      "dest": "visibility [26271,26279]"
    },
    {
      "src": "uint256: uint256 [19992,19999]",
      "dest": "uint256: uint256 [19992,19999]"
    },
    {
      "src": "identifier: spender [12374,12381]",
      "dest": "identifier: spender [12374,12381]"
    },
    {
      "src": "primitive_type [6321,6328]",
      "dest": "primitive_type [6321,6328]"
    },
    {
      "src": "function: function [24635,24643]",
      "dest": "function: function [24635,24643]"
    },
    {
      "src": ".: . [14036,14037]",
      "dest": ".: . [14036,14037]"
    },
    {
      "src": "parameter [15739,15753]",
      "dest": "parameter [15739,15753]"
    },
    {
      "src": "uint256: uint256 [166,173]",
      "dest": "uint256: uint256 [166,173]"
    },
    {
      "src": "}: } [3680,3681]",
      "dest": "}: } [3680,3681]"
    },
    {
      "src": "primitive_type [8968,8975]",
      "dest": "primitive_type [8968,8975]"
    },
    {
      "src": "uint: uint [26033,26037]",
      "dest": "uint: uint [25934,25938]"
    },
    {
      "src": "identifier: _shares [26468,26475]",
      "dest": "identifier: _shares [26356,26363]"
    },
    {
      "src": "parameter [564,581]",
      "dest": "parameter [564,581]"
    },
    {
      "src": ".: . [20048,20049]",
      "dest": ".: . [20048,20049]"
    },
    {
      "src": "member_expression [23408,23418]",
      "dest": "member_expression [23408,23418]"
    },
    {
      "src": "parameter [5099,5108]",
      "dest": "parameter [5099,5108]"
    },
    {
      "src": "true: true [23670,23674]",
      "dest": "true: true [23670,23674]"
    },
    {
      "src": "identifier: _decimals [17364,17373]",
      "dest": "identifier: _decimals [17364,17373]"
    },
    {
      "src": ".: . [26975,26976]",
      "dest": ".: . [26837,26838]"
    },
    {
      "src": "type_name [2527,2534]",
      "dest": "type_name [2527,2534]"
    },
    {
      "src": "member_expression [21947,21969]",
      "dest": "member_expression [21947,21969]"
    },
    {
      "src": "function: function [9860,9868]",
      "dest": "function: function [9860,9868]"
    },
    {
      "src": "private: private [23783,23790]",
      "dest": "private: private [23783,23790]"
    },
    {
      "src": "parameter [9897,9911]",
      "dest": "parameter [9897,9911]"
    },
    {
      "src": ",: , [14456,14457]",
      "dest": ",: , [14456,14457]"
    },
    {
      "src": "uint256: uint256 [5568,5575]",
      "dest": "uint256: uint256 [5568,5575]"
    },
    {
      "src": "\": \" [20302,20303]",
      "dest": "\": \" [20302,20303]"
    },
    {
      "src": "identifier: _burnFrom [15712,15721]",
      "dest": "identifier: _burnFrom [15712,15721]"
    },
    {
      "src": "visibility [26735,26741]",
      "dest": "visibility [26584,26590]"
    },
    {
      "src": "return_type_definition [16499,16522]",
      "dest": "return_type_definition [16499,16522]"
    },
    {
      "src": "return_type_definition [11030,11044]",
      "dest": "return_type_definition [11030,11044]"
    },
    {
      "src": "returns: returns [5135,5142]",
      "dest": "returns: returns [5135,5142]"
    },
    {
      "src": "contract_declaration [9111,15934]",
      "dest": "contract_declaration [9111,15934]"
    },
    {
      "src": "string [15387,15423]",
      "dest": "string [15387,15423]"
    },
    {
      "src": "function: function [15703,15711]",
      "dest": "function: function [15703,15711]"
    },
    {
      "src": ".: . [26625,26626]",
      "dest": ".: . [26513,26514]"
    },
    {
      "src": ",: , [4764,4765]",
      "dest": ",: , [4764,4765]"
    },
    {
      "src": "string [15885,15923]",
      "dest": "string [15885,15923]"
    },
    {
      "src": "call_argument [13248,13271]",
      "dest": "call_argument [13248,13271]"
    },
    {
      "src": "primitive_type [917,924]",
      "dest": "primitive_type [917,924]"
    },
    {
      "src": "(: ( [23027,23028]",
      "dest": "(: ( [23027,23028]"
    },
    {
      "src": ",: , [21757,21758]",
      "dest": ",: , [21757,21758]"
    },
    {
      "src": "type_name [972,979]",
      "dest": "type_name [972,979]"
    },
    {
      "src": "call_argument [21552,21556]",
      "dest": "call_argument [21552,21556]"
    },
    {
      "src": "identifier: _approve [15202,15210]",
      "dest": "identifier: _approve [15202,15210]"
    },
    {
      "src": "identifier: recipient [13114,13123]",
      "dest": "identifier: recipient [13114,13123]"
    },
    {
      "src": "identifier: _totalSupply [13948,13960]",
      "dest": "identifier: _totalSupply [13948,13960]"
    },
    {
      "src": "call_expression [8396,8433]",
      "dest": "call_expression [8396,8433]"
    },
    {
      "src": "parameter [10972,10986]",
      "dest": "parameter [10972,10986]"
    },
    {
      "src": "primitive_type [9204,9211]",
      "dest": "primitive_type [9204,9211]"
    },
    {
      "src": "function_body [6038,6430]",
      "dest": "function_body [6038,6430]"
    },
    {
      "src": "parameter [917,930]",
      "dest": "parameter [917,930]"
    },
    {
      "src": "=: = [25510,25511]",
      "dest": "=: = [25510,25511]"
    },
    {
      "src": "primitive_type [10409,10413]",
      "dest": "primitive_type [10409,10413]"
    },
    {
      "src": "): ) [9986,9987]",
      "dest": "): ) [9986,9987]"
    },
    {
      "src": "call_expression [14018,14048]",
      "dest": "call_expression [14018,14048]"
    },
    {
      "src": "state_mutability [24401,24405]",
      "dest": "state_mutability [24401,24405]"
    },
    {
      "src": "identifier: initialized [23656,23667]",
      "dest": "identifier: initialized [23656,23667]"
    },
    {
      "src": "identifier: spender [11680,11687]",
      "dest": "identifier: spender [11680,11687]"
    },
    {
      "src": "state_variable_declaration [25548,25579]",
      "dest": "state_variable_declaration [25548,25579]"
    },
    {
      "src": "): ) [11163,11164]",
      "dest": "): ) [11163,11164]"
    },
    {
      "src": "parameter [13106,13123]",
      "dest": "parameter [13106,13123]"
    },
    {
      "src": "state_mutability [7602,7606]",
      "dest": "state_mutability [7602,7606]"
    },
    {
      "src": "identifier: amount [20205,20211]",
      "dest": "identifier: amount [20205,20211]"
    },
    {
      "src": "parameter [18105,18109]",
      "dest": "parameter [18105,18109]"
    },
    {
      "src": "identifier: _gap [23913,23917]",
      "dest": "identifier: _gap [23913,23917]"
    },
    {
      "src": "): ) [173,174]",
      "dest": "): ) [173,174]"
    },
    {
      "src": "bytes32: bytes32 [24080,24087]",
      "dest": "bytes32: bytes32 [24080,24087]"
    },
    {
      "src": "primitive_type [1702,1706]",
      "dest": "primitive_type [1702,1706]"
    },
    {
      "src": "parameter [277,292]",
      "dest": "parameter [277,292]"
    },
    {
      "src": "{: { [9615,9616]",
      "dest": "{: { [9615,9616]"
    },
    {
      "src": "yul_assignment [24502,24527]",
      "dest": "yul_assignment [24502,24527]"
    },
    {
      "src": "call_argument [14750,14751]",
      "dest": "call_argument [14750,14751]"
    },
    {
      "src": "bytes32: bytes32 [24440,24447]",
      "dest": "bytes32: bytes32 [24440,24447]"
    },
    {
      "src": "return_statement [6292,6301]",
      "dest": "return_statement [6292,6301]"
    },
    {
      "src": "expression_statement [13423,13479]",
      "dest": "expression_statement [13423,13479]"
    },
    {
      "src": "): ) [27003,27004]",
      "dest": "): ) [26897,26898]"
    },
    {
      "src": "identifier: div [26270,26273]",
      "dest": "identifier: div [26171,26174]"
    },
    {
      "src": "identifier: name [16270,16274]",
      "dest": "identifier: name [16270,16274]"
    },
    {
      "src": "identifier: encodeWithSelector [20713,20731]",
      "dest": "identifier: encodeWithSelector [20713,20731]"
    },
    {
      "src": "internal: internal [13141,13149]",
      "dest": "internal: internal [13141,13149]"
    },
    {
      "src": ",: , [5663,5664]",
      "dest": ",: , [5663,5664]"
    },
    {
      "src": "contract_declaration [23506,24050]",
      "dest": "contract_declaration [23506,24050]"
    },
    {
      "src": "identifier: spender [2566,2573]",
      "dest": "identifier: spender [2566,2573]"
    },
    {
      "src": "parameter [15243,15257]",
      "dest": "parameter [15243,15257]"
    },
    {
      "src": "primitive_type [20649,20656]",
      "dest": "primitive_type [20649,20656]"
    },
    {
      "src": "binary_expression [21156,21166]",
      "dest": "binary_expression [21156,21166]"
    },
    {
      "src": "member_expression [23002,23027]",
      "dest": "member_expression [23002,23027]"
    },
    {
      "src": "returns: returns [12415,12422]",
      "dest": "returns: returns [12415,12422]"
    },
    {
      "src": "identifier: mod [8396,8399]",
      "dest": "identifier: mod [8396,8399]"
    },
    {
      "src": "type_name [5110,5117]",
      "dest": "type_name [5110,5117]"
    },
    {
      "src": "user_defined_type [25524,25530]",
      "dest": "user_defined_type [25524,25530]"
    },
    {
      "src": "contract_declaration [3094,3683]",
      "dest": "contract_declaration [3094,3683]"
    },
    {
      "src": ".: . [21650,21651]",
      "dest": ".: . [21650,21651]"
    },
    {
      "src": "identifier: require [6348,6355]",
      "dest": "identifier: require [6348,6355]"
    },
    {
      "src": "type_alias [25455,25464]",
      "dest": "type_alias [25455,25464]"
    },
    {
      "src": ",: , [20647,20648]",
      "dest": ",: , [20647,20648]"
    },
    {
      "src": "): ) [26012,26013]",
      "dest": "): ) [25883,25884]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-call-value [20111,20156]",
      "dest": "comment: // solhint-disable-next-line avoid-call-value [20111,20156]"
    },
    {
      "src": "]: ] [13338,13339]",
      "dest": "]: ] [13338,13339]"
    },
    {
      "src": "constructor: constructor [16243,16254]",
      "dest": "constructor: constructor [16243,16254]"
    },
    {
      "src": "primitive_type [10360,10367]",
      "dest": "primitive_type [10360,10367]"
    },
    {
      "src": "identifier: IERC20 [22435,22441]",
      "dest": "identifier: IERC20 [22435,22441]"
    },
    {
      "src": "identifier: callOptionalReturn [21588,21606]",
      "dest": "identifier: callOptionalReturn [21588,21606]"
    },
    {
      "src": "member_expression [26966,26979]",
      "dest": "member_expression [26815,26841]"
    },
    {
      "src": "(: ( [9928,9929]",
      "dest": "(: ( [9928,9929]"
    },
    {
      "src": "identifier: callOptionalReturn [20683,20701]",
      "dest": "identifier: callOptionalReturn [20683,20701]"
    },
    {
      "src": "): ) [5119,5120]",
      "dest": "): ) [5119,5120]"
    },
    {
      "src": ".: . [3439,3440]",
      "dest": ".: . [3439,3440]"
    },
    {
      "src": "(: ( [25363,25364]",
      "dest": "(: ( [25363,25364]"
    },
    {
      "src": "identifier: Transfer [14724,14732]",
      "dest": "identifier: Transfer [14724,14732]"
    },
    {
      "src": "): ) [23484,23485]",
      "dest": "): ) [23484,23485]"
    },
    {
      "src": "yul_evm_builtin [24512,24517]",
      "dest": "yul_evm_builtin [24512,24517]"
    },
    {
      "src": "string_literal [21231,21287]",
      "dest": "string_literal [21231,21287]"
    },
    {
      "src": "address: address [26794,26801]",
      "dest": "address: address [26643,26650]"
    },
    {
      "src": "address: address [2527,2534]",
      "dest": "address: address [2527,2534]"
    },
    {
      "src": "}: } [5730,5731]",
      "dest": "}: } [5730,5731]"
    },
    {
      "src": "call_expression [26441,26558]",
      "dest": "call_expression [26329,26446]"
    },
    {
      "src": "block_statement [26914,26950]",
      "dest": "block_statement [26763,26799]"
    },
    {
      "src": "[: [ [11143,11144]",
      "dest": "[: [ [11143,11144]"
    },
    {
      "src": "): ) [18980,18981]",
      "dest": "): ) [18980,18981]"
    },
    {
      "src": "emit_statement [13488,13529]",
      "dest": "emit_statement [13488,13529]"
    },
    {
      "src": "for: for [9166,9169]",
      "dest": "for: for [9166,9169]"
    },
    {
      "src": "returns: returns [25356,25363]",
      "dest": "returns: returns [25356,25363]"
    },
    {
      "src": "function: function [9549,9557]",
      "dest": "function: function [9549,9557]"
    },
    {
      "src": "member_expression [14018,14040]",
      "dest": "member_expression [14018,14040]"
    },
    {
      "src": "): ) [22466,22467]",
      "dest": "): ) [22466,22467]"
    },
    {
      "src": "primitive_type [22449,22454]",
      "dest": "primitive_type [22449,22454]"
    },
    {
      "src": "array_access [13423,13443]",
      "dest": "array_access [13423,13443]"
    },
    {
      "src": "=: = [20182,20183]",
      "dest": "=: = [20182,20183]"
    },
    {
      "src": "identifier: _msgSender [11152,11162]",
      "dest": "identifier: _msgSender [11152,11162]"
    },
    {
      "src": ",: , [25126,25127]",
      "dest": ",: , [25126,25127]"
    },
    {
      "src": "call_argument [26574,26584]",
      "dest": "call_argument [26462,26472]"
    },
    {
      "src": "primitive_type [21832,21839]",
      "dest": "primitive_type [21832,21839]"
    },
    {
      "src": "if_statement [23275,23496]",
      "dest": "if_statement [23275,23496]"
    },
    {
      "src": "identifier: isContract [23017,23027]",
      "dest": "identifier: isContract [23017,23027]"
    },
    {
      "src": "memory: memory [16515,16521]",
      "dest": "memory: memory [16515,16521]"
    },
    {
      "src": "\": \" [7006,7007]",
      "dest": "\": \" [7006,7007]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [8446,8939]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * Reverts with custom message when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [8446,8939]"
    },
    {
      "src": "): ) [21296,21297]",
      "dest": "): ) [21296,21297]"
    },
    {
      "src": "(: ( [21831,21832]",
      "dest": "(: ( [21831,21832]"
    },
    {
      "src": "(: ( [13879,13880]",
      "dest": "(: ( [13879,13880]"
    },
    {
      "src": "(: ( [23184,23185]",
      "dest": "(: ( [23184,23185]"
    },
    {
      "src": "string [21867,21910]",
      "dest": "string [21867,21910]"
    },
    {
      "src": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [2118,2276]",
      "dest": "comment: /**      * @dev Emitted when `value` tokens are moved from one account (`from`) to      * another (`to`).      *      * Note that `value` may be zero.      */ [2118,2276]"
    },
    {
      "src": "call_argument [10434,10446]",
      "dest": "call_argument [10434,10446]"
    },
    {
      "src": "array_access [14571,14589]",
      "dest": "array_access [14571,14589]"
    },
    {
      "src": "comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [18121,18201]",
      "dest": "comment: // According to EIP-1052, 0x0 is the value returned for not-yet created accounts [18121,18201]"
    },
    {
      "src": "event_paramater [2338,2351]",
      "dest": "event_paramater [2338,2351]"
    },
    {
      "src": "visibility [949,957]",
      "dest": "visibility [949,957]"
    },
    {
      "src": "identifier: callOptionalReturn [20485,20503]",
      "dest": "identifier: callOptionalReturn [20485,20503]"
    },
    {
      "src": ",: , [21945,21946]",
      "dest": ",: , [21945,21946]"
    },
    {
      "src": "parameter [25364,25368]",
      "dest": "parameter [25364,25368]"
    },
    {
      "src": "(: ( [6269,6270]",
      "dest": "(: ( [6269,6270]"
    },
    {
      "src": "\": \" [13935,13936]",
      "dest": "\": \" [13935,13936]"
    },
    {
      "src": "returns: returns [16499,16506]",
      "dest": "returns: returns [16499,16506]"
    },
    {
      "src": "function_body [5153,5220]",
      "dest": "function_body [5153,5220]"
    },
    {
      "src": "identifier: token [21735,21740]",
      "dest": "identifier: token [21735,21740]"
    },
    {
      "src": "call_argument [13168,13188]",
      "dest": "call_argument [13168,13188]"
    },
    {
      "src": "type_name [10988,10995]",
      "dest": "type_name [10988,10995]"
    },
    {
      "src": "identifier: setStore [23942,23950]",
      "dest": "identifier: setStore [23942,23950]"
    },
    {
      "src": "primitive_type [9313,9320]",
      "dest": "primitive_type [9313,9320]"
    },
    {
      "src": "call_argument [27348,27379]",
      "dest": "call_argument [27111,27142]"
    },
    {
      "src": "using_directive [20371,20397]",
      "dest": "using_directive [20371,20397]"
    },
    {
      "src": "=: = [14016,14017]",
      "dest": "=: = [14016,14017]"
    },
    {
      "src": "type_name [5984,5991]",
      "dest": "type_name [5984,5991]"
    },
    {
      "src": "}: } [24300,24301]",
      "dest": "}: } [24300,24301]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [9663,9855]",
      "dest": "comment: /**      * @dev See {IERC20-transfer}.      *      * Requirements:      *      * - `recipient` cannot be the zero address.      * - the caller must have a balance of at least `amount`.      */ [9663,9855]"
    },
    {
      "src": "identifier: a [4735,4736]",
      "dest": "identifier: a [4735,4736]"
    },
    {
      "src": "): ) [3477,3478]",
      "dest": "): ) [3477,3478]"
    },
    {
      "src": "): ) [3284,3285]",
      "dest": "): ) [3284,3285]"
    },
    {
      "src": "): ) [15924,15925]",
      "dest": "): ) [15924,15925]"
    },
    {
      "src": ",: , [10986,10987]",
      "dest": ",: , [10986,10987]"
    },
    {
      "src": "string_literal [6368,6403]",
      "dest": "string_literal [6368,6403]"
    },
    {
      "src": "primitive_type [20035,20042]",
      "dest": "primitive_type [20035,20042]"
    },
    {
      "src": "call_argument [24599,24610]",
      "dest": "call_argument [24599,24610]"
    },
    {
      "src": "return: return [6292,6298]",
      "dest": "return: return [6292,6298]"
    },
    {
      "src": "function_definition [22407,23502]",
      "dest": "function_definition [22407,23502]"
    },
    {
      "src": "uint256: uint256 [21505,21512]",
      "dest": "uint256: uint256 [21505,21512]"
    },
    {
      "src": "): ) [21200,21201]",
      "dest": "): ) [21200,21201]"
    },
    {
      "src": "identifier: encodeWithSelector [21951,21969]",
      "dest": "identifier: encodeWithSelector [21951,21969]"
    },
    {
      "src": "identifier: account [13880,13887]",
      "dest": "identifier: account [13880,13887]"
    },
    {
      "src": "(: ( [23135,23136]",
      "dest": "(: ( [23135,23136]"
    },
    {
      "src": "number_literal: 1e18 [26980,26984]",
      "dest": "number_literal: 1e18 [26893,26897]"
    },
    {
      "src": "identifier: a [23956,23957]",
      "dest": "identifier: a [23956,23957]"
    },
    {
      "src": "comment: // A Solidity high level call has three parts: [22648,22694]",
      "dest": "comment: // A Solidity high level call has three parts: [22648,22694]"
    },
    {
      "src": "uint256: uint256 [6943,6950]",
      "dest": "uint256: uint256 [6943,6950]"
    },
    {
      "src": "call_argument [14615,14621]",
      "dest": "call_argument [14615,14621]"
    },
    {
      "src": "call_argument [6979,7007]",
      "dest": "call_argument [6979,7007]"
    },
    {
      "src": "type_name [13837,13844]",
      "dest": "type_name [13837,13844]"
    },
    {
      "src": "type_name [25524,25530]",
      "dest": "type_name [25524,25530]"
    },
    {
      "src": "): ) [26267,26268]",
      "dest": "): ) [26168,26169]"
    },
    {
      "src": "): ) [25125,25126]",
      "dest": "): ) [25125,25126]"
    },
    {
      "src": "memory: memory [3508,3514]",
      "dest": "memory: memory [3508,3514]"
    },
    {
      "src": "identifier: mul [26976,26979]",
      "dest": "identifier: add [26838,26841]"
    },
    {
      "src": "identifier: amount [10385,10391]",
      "dest": "identifier: amount [10385,10391]"
    },
    {
      "src": "primitive_type [23850,23854]",
      "dest": "primitive_type [23850,23854]"
    },
    {
      "src": "member_expression [21970,21983]",
      "dest": "member_expression [21970,21983]"
    },
    {
      "src": "call_argument [25013,25035]",
      "dest": "call_argument [25013,25035]"
    },
    {
      "src": "type_name [21454,21461]",
      "dest": "type_name [21454,21461]"
    },
    {
      "src": ".: . [20712,20713]",
      "dest": ".: . [20712,20713]"
    },
    {
      "src": "identifier: _balances [14571,14580]",
      "dest": "identifier: _balances [14571,14580]"
    },
    {
      "src": "): ) [13229,13230]",
      "dest": "): ) [13229,13230]"
    },
    {
      "src": "parameter [23850,23854]",
      "dest": "parameter [23850,23854]"
    },
    {
      "src": ",: , [20765,20766]",
      "dest": ",: , [20765,20766]"
    },
    {
      "src": "return: return [17357,17363]",
      "dest": "return: return [17357,17363]"
    },
    {
      "src": "parameter [20623,20635]",
      "dest": "parameter [20623,20635]"
    },
    {
      "src": "(: ( [16484,16485]",
      "dest": "(: ( [16484,16485]"
    },
    {
      "src": "{: { [25278,25279]",
      "dest": "{: { [25278,25279]"
    },
    {
      "src": "identifier: transfer [9869,9877]",
      "dest": "identifier: transfer [9869,9877]"
    },
    {
      "src": "return_type_definition [11716,11730]",
      "dest": "return_type_definition [11716,11730]"
    },
    {
      "src": "): ) [6403,6404]",
      "dest": "): ) [6403,6404]"
    },
    {
      "src": "identifier: _amount [26196,26203]",
      "dest": "identifier: _amount [26097,26104]"
    },
    {
      "src": "call_argument [12528,12567]",
      "dest": "call_argument [12528,12567]"
    },
    {
      "src": ",: , [15822,15823]",
      "dest": ",: , [15822,15823]"
    },
    {
      "src": "string_literal [15885,15923]",
      "dest": "string_literal [15885,15923]"
    },
    {
      "src": "): ) [20856,20857]",
      "dest": "): ) [20856,20857]"
    },
    {
      "src": "(: ( [4757,4758]",
      "dest": "(: ( [4757,4758]"
    },
    {
      "src": "\": \" [12528,12529]",
      "dest": "\": \" [12528,12529]"
    },
    {
      "src": "member_expression [26966,26989]",
      "dest": "member_expression [26815,26892]"
    },
    {
      "src": "address: address [14742,14749]",
      "dest": "address: address [14742,14749]"
    },
    {
      "src": "function_body [22476,23502]",
      "dest": "function_body [22476,23502]"
    },
    {
      "src": "primitive_type [21544,21551]",
      "dest": "primitive_type [21544,21551]"
    },
    {
      "src": "]: ] [13465,13466]",
      "dest": "]: ] [13465,13466]"
    },
    {
      "src": "call_expression [23988,24018]",
      "dest": "call_expression [23988,24018]"
    },
    {
      "src": ",: , [26584,26585]",
      "dest": ",: , [26472,26473]"
    },
    {
      "src": "call_argument [15824,15836]",
      "dest": "call_argument [15824,15836]"
    },
    {
      "src": ",: , [21659,21660]",
      "dest": ",: , [21659,21660]"
    },
    {
      "src": ",: , [20178,20179]",
      "dest": ",: , [20178,20179]"
    },
    {
      "src": "): ) [26806,26807]",
      "dest": "): ) [26655,26656]"
    },
    {
      "src": "function: function [898,906]",
      "dest": "function: function [898,906]"
    },
    {
      "src": "\": \" [24609,24610]",
      "dest": "\": \" [24609,24610]"
    },
    {
      "src": "identifier: data [23197,23201]",
      "dest": "identifier: data [23197,23201]"
    },
    {
      "src": "function: function [3357,3365]",
      "dest": "function: function [3357,3365]"
    },
    {
      "src": "member_expression [26574,26584]",
      "dest": "member_expression [26462,26472]"
    },
    {
      "src": "member_expression [13963,13979]",
      "dest": "member_expression [13963,13979]"
    },
    {
      "src": "state_mutability [16690,16694]",
      "dest": "state_mutability [16690,16694]"
    },
    {
      "src": "identifier: _shares [26404,26411]",
      "dest": "identifier: _shares [26262,26269]"
    },
    {
      "src": "identifier: newOwner [24862,24870]",
      "dest": "identifier: newOwner [24862,24870]"
    },
    {
      "src": "primitive_type [5995,6002]",
      "dest": "primitive_type [5995,6002]"
    },
    {
      "src": "expression_statement [20485,20571]",
      "dest": "expression_statement [20485,20571]"
    },
    {
      "src": "): ) [12567,12568]",
      "dest": "): ) [12567,12568]"
    },
    {
      "src": "identifier: recipient [9969,9978]",
      "dest": "identifier: recipient [9969,9978]"
    },
    {
      "src": "variable_declaration_statement [26132,26148]",
      "dest": "variable_declaration_statement [26033,26049]"
    },
    {
      "src": "primitive_type [11672,11679]",
      "dest": "primitive_type [11672,11679]"
    },
    {
      "src": "true: true [10481,10485]",
      "dest": "true: true [10481,10485]"
    },
    {
      "src": ",: , [26632,26633]",
      "dest": ",: , [26520,26521]"
    },
    {
      "src": "identifier: _msgSender [15859,15869]",
      "dest": "identifier: _msgSender [15859,15869]"
    },
    {
      "src": "call_argument [15387,15423]",
      "dest": "call_argument [15387,15423]"
    },
    {
      "src": "expression_statement [20683,20779]",
      "dest": "expression_statement [20683,20779]"
    },
    {
      "src": "call_expression [21816,21911]",
      "dest": "call_expression [21816,21911]"
    },
    {
      "src": "state_variable_declaration [9313,9342]",
      "dest": "state_variable_declaration [9313,9342]"
    },
    {
      "src": "return_type_definition [6934,6951]",
      "dest": "return_type_definition [6934,6951]"
    },
    {
      "src": "(: ( [563,564]",
      "dest": "(: ( [563,564]"
    },
    {
      "src": "call_expression [12449,12461]",
      "dest": "call_expression [12449,12461]"
    },
    {
      "src": "{: { [17468,17469]",
      "dest": "{: { [17468,17469]"
    },
    {
      "src": "(: ( [165,166]",
      "dest": "(: ( [165,166]"
    },
    {
      "src": "return_statement [16729,16744]",
      "dest": "return_statement [16729,16744]"
    },
    {
      "src": "comment: //  3. The return value is decoded, which in turn checks the size of the returned data. [22845,22932]",
      "dest": "comment: //  3. The return value is decoded, which in turn checks the size of the returned data. [22845,22932]"
    },
    {
      "src": "primitive_type [19965,19980]",
      "dest": "primitive_type [19965,19980]"
    },
    {
      "src": "type_name [25333,25340]",
      "dest": "type_name [25333,25340]"
    },
    {
      "src": "visibility [9287,9294]",
      "dest": "visibility [9287,9294]"
    },
    {
      "src": "(: ( [14071,14072]",
      "dest": "(: ( [14071,14072]"
    },
    {
      "src": "identifier: owner [2543,2548]",
      "dest": "identifier: owner [2543,2548]"
    },
    {
      "src": "uint: uint [25482,25486]",
      "dest": "uint: uint [25482,25486]"
    },
    {
      "src": "call_argument [20563,20568]",
      "dest": "call_argument [20563,20568]"
    },
    {
      "src": "identifier: _ [23684,23685]",
      "dest": "identifier: _ [23684,23685]"
    },
    {
      "src": "true [10004,10008]",
      "dest": "true [10004,10008]"
    },
    {
      "src": "identifier: token [20534,20539]",
      "dest": "identifier: token [20534,20539]"
    },
    {
      "src": "{: { [9935,9936]",
      "dest": "{: { [9935,9936]"
    },
    {
      "src": "event: event [2281,2286]",
      "dest": "event: event [2281,2286]"
    },
    {
      "src": "(: ( [26536,26537]",
      "dest": "(: ( [26424,26425]"
    },
    {
      "src": "(: ( [21939,21940]",
      "dest": "(: ( [21939,21940]"
    },
    {
      "src": "block_statement [26173,26214]",
      "dest": "block_statement [26074,26115]"
    },
    {
      "src": "identifier: account [9642,9649]",
      "dest": "identifier: account [9642,9649]"
    },
    {
      "src": "): ) [11221,11222]",
      "dest": "): ) [11221,11222]"
    },
    {
      "src": "type_name [25584,25588]",
      "dest": "type_name [25584,25588]"
    },
    {
      "src": "identifier: require [23988,23995]",
      "dest": "identifier: require [23988,23995]"
    },
    {
      "src": "function_body [18111,18655]",
      "dest": "function_body [18111,18655]"
    },
    {
      "src": "expression_statement [25005,25084]",
      "dest": "expression_statement [25005,25084]"
    },
    {
      "src": "identifier: require [20027,20034]",
      "dest": "identifier: require [20027,20034]"
    },
    {
      "src": "): ) [15795,15796]",
      "dest": "): ) [15795,15796]"
    },
    {
      "src": "function_definition [25983,26375]",
      "dest": "function_definition [25854,26233]"
    },
    {
      "src": "assignment_expression [13997,14048]",
      "dest": "assignment_expression [13997,14048]"
    },
    {
      "src": "type_name [20623,20630]",
      "dest": "type_name [20623,20630]"
    },
    {
      "src": "expression_statement [26568,26595]",
      "dest": "expression_statement [26456,26483]"
    },
    {
      "src": "return_statement [18950,18983]",
      "dest": "return_statement [18950,18983]"
    },
    {
      "src": "primitive_type [9929,9933]",
      "dest": "primitive_type [9929,9933]"
    },
    {
      "src": "function_definition [16665,16750]",
      "dest": "function_definition [16665,16750]"
    },
    {
      "src": "]: ] [15452,15453]",
      "dest": "]: ] [15452,15453]"
    },
    {
      "src": "yul_path [25226,25234]",
      "dest": "yul_path [25226,25234]"
    },
    {
      "src": "returns: returns [7607,7614]",
      "dest": "returns: returns [7607,7614]"
    },
    {
      "src": "string_literal [13372,13412]",
      "dest": "string_literal [13372,13412]"
    },
    {
      "src": "{: { [20475,20476]",
      "dest": "{: { [20475,20476]"
    },
    {
      "src": "uint256: uint256 [8370,8377]",
      "dest": "uint256: uint256 [8370,8377]"
    },
    {
      "src": "address: address [18883,18890]",
      "dest": "address: address [18883,18890]"
    },
    {
      "src": "array_access [15435,15453]",
      "dest": "array_access [15435,15453]"
    },
    {
      "src": "identifier: spender [21847,21854]",
      "dest": "identifier: spender [21847,21854]"
    },
    {
      "src": "pure: pure [5616,5620]",
      "dest": "pure: pure [5616,5620]"
    },
    {
      "src": "): ) [24704,24705]",
      "dest": "): ) [24704,24705]"
    },
    {
      "src": "type_name [24968,24975]",
      "dest": "type_name [24968,24975]"
    },
    {
      "src": "): ) [21556,21557]",
      "dest": "): ) [21556,21557]"
    },
    {
      "src": "primitive_type [23771,23778]",
      "dest": "primitive_type [23771,23778]"
    },
    {
      "src": "identifier: OwnableProxy [25393,25405]",
      "dest": "identifier: OwnableProxy [25393,25405]"
    },
    {
      "src": "visibility [143,151]",
      "dest": "visibility [143,151]"
    },
    {
      "src": "function_body [27166,27468]",
      "dest": "function_body [27036,27197]"
    },
    {
      "src": "identifier: allowance [21534,21543]",
      "dest": "identifier: allowance [21534,21543]"
    },
    {
      "src": "uint256: uint256 [23771,23778]",
      "dest": "uint256: uint256 [23771,23778]"
    },
    {
      "src": "{: { [22476,22477]",
      "dest": "{: { [22476,22477]"
    },
    {
      "src": ",: , [11687,11688]",
      "dest": ",: , [11687,11688]"
    },
    {
      "src": "binary_expression [18605,18647]",
      "dest": "binary_expression [18605,18647]"
    },
    {
      "src": "array_access [11773,11798]",
      "dest": "array_access [11773,11798]"
    },
    {
      "src": "primitive_type [12366,12373]",
      "dest": "primitive_type [12366,12373]"
    },
    {
      "src": "public: public [17319,17325]",
      "dest": "public: public [17319,17325]"
    },
    {
      "src": "uint: uint [26874,26878]",
      "dest": "uint: uint [26723,26727]"
    },
    {
      "src": "boolean_literal [11239,11243]",
      "dest": "boolean_literal [11239,11243]"
    },
    {
      "src": "assignment_expression [13423,13478]",
      "dest": "assignment_expression [13423,13478]"
    },
    {
      "src": "identifier: owner [15286,15291]",
      "dest": "identifier: owner [15286,15291]"
    },
    {
      "src": "): ) [14047,14048]",
      "dest": "): ) [14047,14048]"
    },
    {
      "src": "}: } [26290,26291]",
      "dest": "}: } [26191,26192]"
    },
    {
      "src": "identifier: amount [15251,15257]",
      "dest": "identifier: amount [15251,15257]"
    },
    {
      "src": "}: } [25371,25372]",
      "dest": "}: } [25371,25372]"
    },
    {
      "src": "parameter [8968,8977]",
      "dest": "parameter [8968,8977]"
    },
    {
      "src": ",: , [20841,20842]",
      "dest": ",: , [20841,20842]"
    },
    {
      "src": "function_definition [9860,10015]",
      "dest": "function_definition [9860,10015]"
    },
    {
      "src": "): ) [21683,21684]",
      "dest": "): ) [21683,21684]"
    },
    {
      "src": ",: , [8404,8405]",
      "dest": ",: , [8404,8405]"
    },
    {
      "src": "{: { [26880,26881]",
      "dest": "{: { [26729,26730]"
    },
    {
      "src": "type_name [20649,20656]",
      "dest": "type_name [20649,20656]"
    },
    {
      "src": "return_type_definition [608,622]",
      "dest": "return_type_definition [608,622]"
    },
    {
      "src": "string [13903,13936]",
      "dest": "string [13903,13936]"
    },
    {
      "src": "call_argument [15885,15923]",
      "dest": "call_argument [15885,15923]"
    },
    {
      "src": "uint256: uint256 [4670,4677]",
      "dest": "uint256: uint256 [4670,4677]"
    },
    {
      "src": "): ) [26054,26055]",
      "dest": "): ) [25955,25956]"
    },
    {
      "src": "string: string [5579,5585]",
      "dest": "string: string [5579,5585]"
    },
    {
      "src": "parameter [13837,13851]",
      "dest": "parameter [13837,13851]"
    },
    {
      "src": "parameter [10145,10152]",
      "dest": "parameter [10145,10152]"
    },
    {
      "src": "call_argument [20767,20769]",
      "dest": "call_argument [20767,20769]"
    },
    {
      "src": "address: address [13261,13268]",
      "dest": "address: address [13261,13268]"
    },
    {
      "src": "{: { [24889,24890]",
      "dest": "{: { [24889,24890]"
    },
    {
      "src": "member_expression [23177,23196]",
      "dest": "member_expression [23177,23196]"
    },
    {
      "src": "variable_declaration [20166,20178]",
      "dest": "variable_declaration [20166,20178]"
    },
    {
      "src": "return: return [9997,10003]",
      "dest": "return: return [9997,10003]"
    },
    {
      "src": "call_expression [24264,24294]",
      "dest": "call_expression [24264,24294]"
    },
    {
      "src": "identifier: _symbol [16353,16360]",
      "dest": "identifier: _symbol [16353,16360]"
    },
    {
      "src": "(: ( [26893,26894]",
      "dest": "(: ( [26742,26743]"
    },
    {
      "src": "comment: // for accounts without code, i.e. `keccak256('')` [18304,18354]",
      "dest": "comment: // for accounts without code, i.e. `keccak256('')` [18304,18354]"
    },
    {
      "src": "primitive_type [15975,15981]",
      "dest": "primitive_type [15975,15981]"
    },
    {
      "src": "(: ( [15363,15364]",
      "dest": "(: ( [15363,15364]"
    },
    {
      "src": "identifier: totalSupply [9411,9422]",
      "dest": "identifier: totalSupply [9411,9422]"
    },
    {
      "src": "event_paramater [24199,24223]",
      "dest": "event_paramater [24199,24223]"
    },
    {
      "src": "expression_statement [6348,6405]",
      "dest": "expression_statement [6348,6405]"
    },
    {
      "src": "identifier: sender [10980,10986]",
      "dest": "identifier: sender [10980,10986]"
    },
    {
      "src": "call_argument [26099,26112]",
      "dest": "call_argument [26000,26013]"
    },
    {
      "src": "function: function [26821,26829]",
      "dest": "function: function [26670,26678]"
    },
    {
      "src": "{: { [11045,11046]",
      "dest": "{: { [11045,11046]"
    },
    {
      "src": "returns: returns [11716,11723]",
      "dest": "returns: returns [11716,11723]"
    },
    {
      "src": "type_cast_expression [14742,14752]",
      "dest": "type_cast_expression [14742,14752]"
    },
    {
      "src": "expression_statement [23602,23647]",
      "dest": "expression_statement [23602,23647]"
    },
    {
      "src": "primitive_type [16704,16710]",
      "dest": "primitive_type [16704,16710]"
    },
    {
      "src": "identifier: spender [21462,21469]",
      "dest": "identifier: spender [21462,21469]"
    },
    {
      "src": ",: , [20066,20067]",
      "dest": ",: , [20066,20067]"
    },
    {
      "src": "uint256: uint256 [583,590]",
      "dest": "uint256: uint256 [583,590]"
    },
    {
      "src": ".: . [20198,20199]",
      "dest": ".: . [20198,20199]"
    },
    {
      "src": "(: ( [23431,23432]",
      "dest": "(: ( [23431,23432]"
    },
    {
      "src": "call_argument [21544,21557]",
      "dest": "call_argument [21544,21557]"
    },
    {
      "src": "(: ( [14614,14615]",
      "dest": "(: ( [14614,14615]"
    },
    {
      "src": "identifier: from [20761,20765]",
      "dest": "identifier: from [20761,20765]"
    },
    {
      "src": "\": \" [25081,25082]",
      "dest": "\": \" [25081,25082]"
    },
    {
      "src": "function_definition [21409,21691]",
      "dest": "function_definition [21409,21691]"
    },
    {
      "src": "primitive_type [23959,23963]",
      "dest": "primitive_type [23959,23963]"
    },
    {
      "src": "!=: != [14509,14511]",
      "dest": "!=: != [14509,14511]"
    },
    {
      "src": "primitive_type [25025,25032]",
      "dest": "primitive_type [25025,25032]"
    },
    {
      "src": "visibility [3379,3387]",
      "dest": "visibility [3379,3387]"
    },
    {
      "src": "}: } [23501,23502]",
      "dest": "}: } [23501,23502]"
    },
    {
      "src": "number_literal: 0 [15303,15304]",
      "dest": "number_literal: 0 [15303,15304]"
    },
    {
      "src": "return_statement [3659,3675]",
      "dest": "return_statement [3659,3675]"
    },
    {
      "src": "call_argument [21333,21395]",
      "dest": "call_argument [21333,21395]"
    },
    {
      "src": "(: ( [3376,3377]",
      "dest": "(: ( [3376,3377]"
    },
    {
      "src": "(: ( [15302,15303]",
      "dest": "(: ( [15302,15303]"
    },
    {
      "src": "primitive_type [13106,13113]",
      "dest": "primitive_type [13106,13113]"
    },
    {
      "src": "call_argument [13899,13900]",
      "dest": "call_argument [13899,13900]"
    },
    {
      "src": "parameter [15226,15241]",
      "dest": "parameter [15226,15241]"
    },
    {
      "src": "visibility [24872,24878]",
      "dest": "visibility [24872,24878]"
    },
    {
      "src": "type_name [564,571]",
      "dest": "type_name [564,571]"
    },
    {
      "src": "call_argument [21940,21945]",
      "dest": "call_argument [21940,21945]"
    },
    {
      "src": "identifier: require [23866,23873]",
      "dest": "identifier: require [23866,23873]"
    },
    {
      "src": "parameter [5568,5577]",
      "dest": "parameter [5568,5577]"
    },
    {
      "src": "identifier: recipient [20184,20193]",
      "dest": "identifier: recipient [20184,20193]"
    },
    {
      "src": "type_name [24414,24421]",
      "dest": "type_name [24414,24421]"
    },
    {
      "src": "function_body [10154,10205]",
      "dest": "function_body [10154,10205]"
    },
    {
      "src": "type_name [2338,2345]",
      "dest": "type_name [2338,2345]"
    },
    {
      "src": "visibility [25531,25537]",
      "dest": "visibility [25531,25537]"
    },
    {
      "src": "parenthesized_expression [21155,21167]",
      "dest": "parenthesized_expression [21155,21167]"
    },
    {
      "src": ",: , [8401,8402]",
      "dest": ",: , [8401,8402]"
    },
    {
      "src": "visibility [294,302]",
      "dest": "visibility [294,302]"
    },
    {
      "src": "identifier: amount [15511,15517]",
      "dest": "identifier: amount [15511,15517]"
    },
    {
      "src": "\": \" [20214,20215]",
      "dest": "\": \" [20214,20215]"
    },
    {
      "src": "primitive_type [4659,4666]",
      "dest": "primitive_type [4659,4666]"
    },
    {
      "src": ",: , [11176,11177]",
      "dest": ",: , [11176,11177]"
    },
    {
      "src": "}: } [15931,15932]",
      "dest": "}: } [15931,15932]"
    },
    {
      "src": "uint: uint [26756,26760]",
      "dest": "uint: uint [26605,26609]"
    },
    {
      "src": "type_name [2575,2582]",
      "dest": "type_name [2575,2582]"
    },
    {
      "src": "address: address [15211,15218]",
      "dest": "address: address [15211,15218]"
    },
    {
      "src": "\": \" [23440,23441]",
      "dest": "\": \" [23440,23441]"
    },
    {
      "src": "pragma: pragma [0,6]",
      "dest": "pragma: pragma [0,6]"
    },
    {
      "src": "identifier: value [2346,2351]",
      "dest": "identifier: value [2346,2351]"
    },
    {
      "src": "parameter [8370,8377]",
      "dest": "parameter [8370,8377]"
    },
    {
      "src": "identifier: safeIncreaseAllowance [21418,21439]",
      "dest": "identifier: safeIncreaseAllowance [21418,21439]"
    },
    {
      "src": "view: view [9592,9596]",
      "dest": "view: view [9592,9596]"
    },
    {
      "src": "if: if [23275,23277]",
      "dest": "if: if [23275,23277]"
    },
    {
      "src": "call_argument [20068,20099]",
      "dest": "call_argument [20068,20099]"
    },
    {
      "src": "identifier: amount [13364,13370]",
      "dest": "identifier: amount [13364,13370]"
    },
    {
      "src": "comment: // solhint-disable-next-line no-inline-assembly [18487,18534]",
      "dest": "comment: // solhint-disable-next-line no-inline-assembly [18487,18534]"
    },
    {
      "src": "function: function [5086,5094]",
      "dest": "function: function [5086,5094]"
    },
    {
      "src": "primitive_type [26756,26760]",
      "dest": "primitive_type [26605,26609]"
    },
    {
      "src": "primitive_type [7554,7561]",
      "dest": "primitive_type [7554,7561]"
    },
    {
      "src": "type_name [7554,7561]",
      "dest": "type_name [7554,7561]"
    },
    {
      "src": "identifier: sender [13502,13508]",
      "dest": "identifier: sender [13502,13508]"
    },
    {
      "src": "call_argument [23408,23438]",
      "dest": "call_argument [23408,23438]"
    },
    {
      "src": "call_expression [5170,5213]",
      "dest": "call_expression [5170,5213]"
    },
    {
      "src": "return_statement [8389,8434]",
      "dest": "return_statement [8389,8434]"
    },
    {
      "src": "(: ( [21195,21196]",
      "dest": "(: ( [21195,21196]"
    },
    {
      "src": "call_expression [21614,21683]",
      "dest": "call_expression [21614,21683]"
    },
    {
      "src": "returns: returns [10400,10407]",
      "dest": "returns: returns [10400,10407]"
    },
    {
      "src": "function_definition [25317,25370]",
      "dest": "function_definition [25317,25370]"
    },
    {
      "src": "parameter [7554,7563]",
      "dest": "parameter [7554,7563]"
    },
    {
      "src": "}: } [24933,24934]",
      "dest": "}: } [24933,24934]"
    },
    {
      "src": "call_argument [26318,26324]",
      "dest": "call_argument [26219,26225]"
    },
    {
      "src": "\": \" [14524,14525]",
      "dest": "\": \" [14524,14525]"
    },
    {
      "src": "library_declaration [20315,23504]",
      "dest": "library_declaration [20315,23504]"
    },
    {
      "src": "\": \" [15922,15923]",
      "dest": "\": \" [15922,15923]"
    },
    {
      "src": "call_expression [21921,22017]",
      "dest": "call_expression [21921,22017]"
    },
    {
      "src": "]: ] [14014,14015]",
      "dest": "]: ] [14014,14015]"
    },
    {
      "src": "public: public [25905,25911]",
      "dest": "public: public [25778,25784]"
    },
    {
      "src": "internal: internal [18082,18090]",
      "dest": "internal: internal [18082,18090]"
    },
    {
      "src": "function_definition [8312,8440]",
      "dest": "function_definition [8312,8440]"
    },
    {
      "src": "number_literal: 1e18 [26935,26939]",
      "dest": "number_literal: 1e18 [26784,26788]"
    },
    {
      "src": "type_name [25482,25486]",
      "dest": "type_name [25482,25486]"
    },
    {
      "src": "type_name [932,939]",
      "dest": "type_name [932,939]"
    },
    {
      "src": "primitive_type [20637,20644]",
      "dest": "primitive_type [20637,20644]"
    },
    {
      "src": "identifier: account [18073,18080]",
      "dest": "identifier: account [18073,18080]"
    },
    {
      "src": "identifier: amount [2080,2086]",
      "dest": "identifier: amount [2080,2086]"
    },
    {
      "src": ",: , [20561,20562]",
      "dest": ",: , [20561,20562]"
    },
    {
      "src": "identifier: account [14501,14508]",
      "dest": "identifier: account [14501,14508]"
    },
    {
      "src": "identifier: decode [23412,23418]",
      "dest": "identifier: decode [23412,23418]"
    },
    {
      "src": "number_literal: 0 [21215,21216]",
      "dest": "number_literal: 0 [21215,21216]"
    },
    {
      "src": "identifier: token [21356,21361]",
      "dest": "identifier: token [21356,21361]"
    },
    {
      "src": "\": \" [13273,13274]",
      "dest": "\": \" [13273,13274]"
    },
    {
      "src": "{: { [13862,13863]",
      "dest": "{: { [13862,13863]"
    },
    {
      "src": "identifier: account [14733,14740]",
      "dest": "identifier: account [14733,14740]"
    },
    {
      "src": "(: ( [23278,23279]",
      "dest": "(: ( [23278,23279]"
    },
    {
      "src": "identifier: _balances [13446,13455]",
      "dest": "identifier: _balances [13446,13455]"
    },
    {
      "src": "identifier: newOwner [24918,24926]",
      "dest": "identifier: newOwner [24918,24926]"
    },
    {
      "src": "primitive_type [14458,14465]",
      "dest": "primitive_type [14458,14465]"
    },
    {
      "src": "expression_statement [12440,12570]",
      "dest": "expression_statement [12440,12570]"
    },
    {
      "src": "): ) [14751,14752]",
      "dest": "): ) [14751,14752]"
    },
    {
      "src": "event: event [24141,24146]",
      "dest": "event: event [24141,24146]"
    },
    {
      "src": "(: ( [15382,15383]",
      "dest": "(: ( [15382,15383]"
    },
    {
      "src": "): ) [18898,18899]",
      "dest": "): ) [18898,18899]"
    },
    {
      "src": "primitive_type [564,571]",
      "dest": "primitive_type [564,571]"
    },
    {
      "src": "user_defined_type [9138,9144]",
      "dest": "user_defined_type [9138,9144]"
    },
    {
      "src": "member_expression [14685,14701]",
      "dest": "member_expression [14685,14701]"
    },
    {
      "src": "address: address [13820,13827]",
      "dest": "address: address [13820,13827]"
    },
    {
      "src": ".: . [26577,26578]",
      "dest": ".: . [26465,26466]"
    },
    {
      "src": "): ) [15384,15385]",
      "dest": "): ) [15384,15385]"
    },
    {
      "src": "{: { [15764,15765]",
      "dest": "{: { [15764,15765]"
    },
    {
      "src": "{: { [20673,20674]",
      "dest": "{: { [20673,20674]"
    },
    {
      "src": "identifier: _msgSender [9955,9965]",
      "dest": "identifier: _msgSender [9955,9965]"
    },
    {
      "src": "): ) [24610,24611]",
      "dest": "): ) [24610,24611]"
    },
    {
      "src": "type_name [23951,23955]",
      "dest": "type_name [23951,23955]"
    },
    {
      "src": "identifier: account [15850,15857]",
      "dest": "identifier: account [15850,15857]"
    },
    {
      "src": "): ) [18080,18081]",
      "dest": "): ) [18080,18081]"
    },
    {
      "src": "bool: bool [11039,11043]",
      "dest": "bool: bool [11039,11043]"
    },
    {
      "src": "bool: bool [9929,9933]",
      "dest": "bool: bool [9929,9933]"
    },
    {
      "src": ",: , [14752,14753]",
      "dest": ",: , [14752,14753]"
    },
    {
      "src": "type_name [26000,26004]",
      "dest": "type_name [25871,25875]"
    },
    {
      "src": "call_expression [20226,20304]",
      "dest": "call_expression [20226,20304]"
    },
    {
      "src": "visibility [20858,20866]",
      "dest": "visibility [20858,20866]"
    },
    {
      "src": "type_name [277,284]",
      "dest": "type_name [277,284]"
    },
    {
      "src": "identifier: require [27283,27290]",
      "dest": "identifier: require [27046,27053]"
    },
    {
      "src": "(: ( [8324,8325]",
      "dest": "(: ( [8324,8325]"
    },
    {
      "src": "visibility [26853,26859]",
      "dest": "visibility [26702,26708]"
    },
    {
      "src": "identifier: _transferOwnership [24949,24967]",
      "dest": "identifier: _transferOwnership [24949,24967]"
    },
    {
      "src": "public: public [24654,24660]",
      "dest": "public: public [24654,24660]"
    },
    {
      "src": "): ) [26974,26975]",
      "dest": "): ) [26823,26824]"
    },
    {
      "src": "identifier: encodeWithSelector [21618,21636]",
      "dest": "identifier: encodeWithSelector [21618,21636]"
    },
    {
      "src": "call_expression [12472,12568]",
      "dest": "call_expression [12472,12568]"
    },
    {
      "src": "function_body [23978,24048]",
      "dest": "function_body [23978,24048]"
    },
    {
      "src": "call_argument [21203,21210]",
      "dest": "call_argument [21203,21210]"
    },
    {
      "src": "type_name [21793,21800]",
      "dest": "type_name [21793,21800]"
    },
    {
      "src": "call_argument [14080,14081]",
      "dest": "call_argument [14080,14081]"
    },
    {
      "src": "function: function [9402,9410]",
      "dest": "function: function [9402,9410]"
    },
    {
      "src": "call_argument [23197,23201]",
      "dest": "call_argument [23197,23201]"
    },
    {
      "src": "): ) [21772,21773]",
      "dest": "): ) [21772,21773]"
    },
    {
      "src": "call_expression [14685,14709]",
      "dest": "call_expression [14685,14709]"
    },
    {
      "src": "external: external [949,957]",
      "dest": "external: external [949,957]"
    },
    {
      "src": "call_argument [24283,24293]",
      "dest": "call_argument [24283,24293]"
    },
    {
      "src": "parameter [11007,11021]",
      "dest": "parameter [11007,11021]"
    },
    {
      "src": "assembly: assembly [25186,25194]",
      "dest": "assembly: assembly [25186,25194]"
    },
    {
      "src": "type_alias [20377,20384]",
      "dest": "type_alias [20377,20384]"
    },
    {
      "src": "call_expression [26966,26985]",
      "dest": "call_expression [26815,26875]"
    },
    {
      "src": "parameter [20649,20662]",
      "dest": "parameter [20649,20662]"
    },
    {
      "src": "array_access [11132,11165]",
      "dest": "array_access [11132,11165]"
    },
    {
      "src": "parameter [21728,21740]",
      "dest": "parameter [21728,21740]"
    },
    {
      "src": "identifier: c [4758,4759]",
      "dest": "identifier: c [4758,4759]"
    },
    {
      "src": "identifier: _decimals [16043,16052]",
      "dest": "identifier: _decimals [16043,16052]"
    },
    {
      "src": "number_literal: 10000 [25512,25517]",
      "dest": "number_literal: 10000 [25512,25517]"
    },
    {
      "src": "member_expression [21614,21636]",
      "dest": "member_expression [21614,21636]"
    },
    {
      "src": "(: ( [18577,18578]",
      "dest": "(: ( [18577,18578]"
    },
    {
      "src": "{: { [6038,6039]",
      "dest": "{: { [6038,6039]"
    },
    {
      "src": "identifier: controller [25568,25578]",
      "dest": "identifier: controller [25568,25578]"
    },
    {
      "src": "number_literal: 0 [15383,15384]",
      "dest": "number_literal: 0 [15383,15384]"
    },
    {
      "src": "(: ( [26524,26525]",
      "dest": "(: ( [26412,26413]"
    },
    {
      "src": "function_body [25975,25977]",
      "dest": "function_body [25846,25848]"
    },
    {
      "src": "pure: pure [9016,9020]",
      "dest": "pure: pure [9016,9020]"
    },
    {
      "src": "parameter [4704,4711]",
      "dest": "parameter [4704,4711]"
    },
    {
      "src": "event_definition [24141,24225]",
      "dest": "event_definition [24141,24225]"
    },
    {
      "src": "user_defined_type [22435,22441]",
      "dest": "user_defined_type [22435,22441]"
    },
    {
      "src": ",: , [23438,23439]",
      "dest": ",: , [23438,23439]"
    },
    {
      "src": "identifier: _controller [27205,27216]",
      "dest": "identifier: this [26868,26872]"
    },
    {
      "src": "library: library [20315,20322]",
      "dest": "library: library [20315,20322]"
    },
    {
      "src": "identifier: value [20459,20464]",
      "dest": "identifier: value [20459,20464]"
    },
    {
      "src": "identifier: recipient [13510,13519]",
      "dest": "identifier: recipient [13510,13519]"
    },
    {
      "src": "visibility [13853,13861]",
      "dest": "visibility [13853,13861]"
    },
    {
      "src": "assembly: assembly [24479,24487]",
      "dest": "assembly: assembly [24479,24487]"
    },
    {
      "src": "expression_statement [13948,13988]",
      "dest": "expression_statement [13948,13988]"
    },
    {
      "src": "identifier: totalSupply [26990,27001]",
      "dest": "identifier: totalSupply [26916,26927]"
    },
    {
      "src": "identifier: abi [23408,23411]",
      "dest": "identifier: abi [23408,23411]"
    },
    {
      "src": "function: function [8944,8952]",
      "dest": "function: function [8944,8952]"
    },
    {
      "src": "comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [14113,14421]",
      "dest": "comment: /**      * @dev Destroys `amount` tokens from `account`, reducing the      * total supply.      *      * Emits a {Transfer} event with `to` set to the zero address.      *      * Requirements      *      * - `account` cannot be the zero address.      * - `account` must have at least `amount` tokens.      */ [14113,14421]"
    },
    {
      "src": "(: ( [27001,27002]",
      "dest": "(: ( [26927,26928]"
    },
    {
      "src": ",: , [6366,6367]",
      "dest": ",: , [6366,6367]"
    },
    {
      "src": "call_expression [23602,23646]",
      "dest": "call_expression [23602,23646]"
    },
    {
      "src": "number_literal: 0 [26170,26171]",
      "dest": "number_literal: 0 [26071,26072]"
    },
    {
      "src": "identifier: _approve [11101,11109]",
      "dest": "identifier: _approve [11101,11109]"
    },
    {
      "src": "primitive_type [16029,16034]",
      "dest": "primitive_type [16029,16034]"
    },
    {
      "src": "(: ( [25300,25301]",
      "dest": "(: ( [25300,25301]"
    },
    {
      "src": "primitive_type [26132,26136]",
      "dest": "primitive_type [26033,26037]"
    },
    {
      "src": "identifier: add [14037,14040]",
      "dest": "identifier: add [14037,14040]"
    },
    {
      "src": "member_expression [21816,21831]",
      "dest": "member_expression [21816,21831]"
    },
    {
      "src": ",: , [5108,5109]",
      "dest": ",: , [5108,5109]"
    },
    {
      "src": "call_argument [15815,15822]",
      "dest": "call_argument [15815,15822]"
    },
    {
      "src": "type_name [26033,26037]",
      "dest": "type_name [25934,25938]"
    },
    {
      "src": "member_expression [20534,20548]",
      "dest": "member_expression [20534,20548]"
    },
    {
      "src": "): ) [23263,23264]",
      "dest": "): ) [23263,23264]"
    },
    {
      "src": "(: ( [20811,20812]",
      "dest": "(: ( [20811,20812]"
    },
    {
      "src": "identifier: symbol [16674,16680]",
      "dest": "identifier: symbol [16674,16680]"
    },
    {
      "src": "(: ( [27290,27291]",
      "dest": "(: ( [27053,27054]"
    },
    {
      "src": ":=: := [18563,18565]",
      "dest": ":=: := [18563,18565]"
    },
    {
      "src": "call_argument [26274,26279]",
      "dest": "call_argument [26175,26180]"
    },
    {
      "src": "primitive_type [2106,2110]",
      "dest": "primitive_type [2106,2110]"
    },
    {
      "src": "): ) [23895,23896]",
      "dest": "): ) [23895,23896]"
    },
    {
      "src": "identifier: getPricePerFullShare [26830,26850]",
      "dest": "identifier: getPricePerFullShare [26679,26699]"
    },
    {
      "src": "identifier: SafeMath [4409,4417]",
      "dest": "identifier: SafeMath [4409,4417]"
    },
    {
      "src": "function_definition [23802,23927]",
      "dest": "function_definition [23802,23927]"
    },
    {
      "src": "call_expression [20485,20570]",
      "dest": "call_expression [20485,20570]"
    },
    {
      "src": "function_body [21495,21691]",
      "dest": "function_body [21495,21691]"
    },
    {
      "src": "(: ( [13167,13168]",
      "dest": "(: ( [13167,13168]"
    },
    {
      "src": "array_access [12472,12506]",
      "dest": "array_access [12472,12506]"
    },
    {
      "src": "return: return [9625,9631]",
      "dest": "return: return [9625,9631]"
    },
    {
      "src": "]: ] [13358,13359]",
      "dest": "]: ] [13358,13359]"
    },
    {
      "src": "=: = [24036,24037]",
      "dest": "=: = [24036,24037]"
    },
    {
      "src": "uint256: uint256 [972,979]",
      "dest": "uint256: uint256 [972,979]"
    },
    {
      "src": ">=: >= [4760,4762]",
      "dest": ">=: >= [4760,4762]"
    },
    {
      "src": "call_expression [12484,12496]",
      "dest": "call_expression [12484,12496]"
    },
    {
      "src": "uint256: uint256 [9170,9177]",
      "dest": "uint256: uint256 [9170,9177]"
    },
    {
      "src": "(: ( [16703,16704]",
      "dest": "(: ( [16703,16704]"
    },
    {
      "src": "identifier: approve [21362,21369]",
      "dest": "identifier: approve [21362,21369]"
    },
    {
      "src": "primitive_type [26399,26403]",
      "dest": "primitive_type [26257,26261]"
    },
    {
      "src": "\": \" [13411,13412]",
      "dest": "\": \" [13411,13412]"
    },
    {
      "src": "comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [22486,22594]",
      "dest": "comment: // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since [22486,22594]"
    },
    {
      "src": "primitive_type [21742,21749]",
      "dest": "primitive_type [21742,21749]"
    },
    {
      "src": "%: % [9097,9098]",
      "dest": "%: % [9097,9098]"
    },
    {
      "src": "expression_statement [16331,16344]",
      "dest": "expression_statement [16331,16344]"
    },
    {
      "src": "identifier: token [20732,20737]",
      "dest": "identifier: token [20732,20737]"
    },
    {
      "src": "string_literal [23882,23895]",
      "dest": "string_literal [23882,23895]"
    },
    {
      "src": "primitive_type [9277,9284]",
      "dest": "primitive_type [9277,9284]"
    },
    {
      "src": "identifier: c [4731,4732]",
      "dest": "identifier: c [4731,4732]"
    },
    {
      "src": "state_mutability [26742,26746]",
      "dest": "state_mutability [26591,26595]"
    },
    {
      "src": "bool: bool [12424,12428]",
      "dest": "bool: bool [12424,12428]"
    },
    {
      "src": "type_name [12366,12373]",
      "dest": "type_name [12366,12373]"
    },
    {
      "src": "): ) [24652,24653]",
      "dest": "): ) [24652,24653]"
    },
    {
      "src": "identifier: _balances [9632,9641]",
      "dest": "identifier: _balances [9632,9641]"
    },
    {
      "src": "\": \" [15422,15423]",
      "dest": "\": \" [15422,15423]"
    },
    {
      "src": "identifier: sub [21856,21859]",
      "dest": "identifier: sub [21856,21859]"
    },
    {
      "src": "uint256: uint256 [9204,9211]",
      "dest": "uint256: uint256 [9204,9211]"
    },
    {
      "src": "parameter [5984,5993]",
      "dest": "parameter [5984,5993]"
    },
    {
      "src": ".: . [26463,26464]",
      "dest": ".: . [26351,26352]"
    },
    {
      "src": "parameter [24968,24984]",
      "dest": "parameter [24968,24984]"
    },
    {
      "src": "}: } [27467,27468]",
      "dest": "}: } [27196,27197]"
    },
    {
      "src": "call_argument [14041,14047]",
      "dest": "call_argument [14041,14047]"
    },
    {
      "src": "(: ( [6972,6973]",
      "dest": "(: ( [6972,6973]"
    },
    {
      "src": "member_expression [26065,26086]",
      "dest": "member_expression [25966,25987]"
    },
    {
      "src": "member_expression [13446,13470]",
      "dest": "member_expression [13446,13470]"
    },
    {
      "src": "identifier: sub [14611,14614]",
      "dest": "identifier: sub [14611,14614]"
    },
    {
      "src": "binary_expression [27304,27334]",
      "dest": "binary_expression [27067,27097]"
    },
    {
      "src": "identifier: b [4678,4679]",
      "dest": "identifier: b [4678,4679]"
    },
    {
      "src": "type_name [16001,16007]",
      "dest": "type_name [16001,16007]"
    },
    {
      "src": "call_expression [23400,23485]",
      "dest": "call_expression [23400,23485]"
    },
    {
      "src": "returns: returns [2097,2104]",
      "dest": "returns: returns [2097,2104]"
    },
    {
      "src": "function: function [27046,27054]",
      "dest": "function: function [26972,26980]"
    },
    {
      "src": "primitive_type [20389,20396]",
      "dest": "primitive_type [20389,20396]"
    },
    {
      "src": "identifier: _name [16540,16545]",
      "dest": "identifier: _name [16540,16545]"
    },
    {
      "src": "identifier: SafeERC20 [25455,25464]",
      "dest": "identifier: SafeERC20 [25455,25464]"
    },
    {
      "src": "call_expression [26525,26538]",
      "dest": "call_expression [26413,26426]"
    },
    {
      "src": "function_definition [24635,24726]",
      "dest": "function_definition [24635,24726]"
    },
    {
      "src": "identifier: a [5662,5663]",
      "dest": "identifier: a [5662,5663]"
    },
    {
      "src": "type_name [9878,9885]",
      "dest": "type_name [9878,9885]"
    },
    {
      "src": "(: ( [3501,3502]",
      "dest": "(: ( [3501,3502]"
    },
    {
      "src": "identifier: token [21607,21612]",
      "dest": "identifier: token [21607,21612]"
    },
    {
      "src": "\": \" [25934,25935]",
      "dest": "\": \" [25807,25808]"
    },
    {
      "src": "visibility [10124,10130]",
      "dest": "visibility [10124,10130]"
    },
    {
      "src": "identifier: FEE_PRECISION [25496,25509]",
      "dest": "identifier: FEE_PRECISION [25496,25509]"
    },
    {
      "src": "comment: /**      * @dev Returns the name of the token.      */ [16412,16466]",
      "dest": "comment: /**      * @dev Returns the name of the token.      */ [16412,16466]"
    },
    {
      "src": ">: > [7711,7712]",
      "dest": ">: > [7711,7712]"
    },
    {
      "src": "): ) [21166,21167]",
      "dest": "): ) [21166,21167]"
    },
    {
      "src": "external: external [25342,25350]",
      "dest": "external: external [25342,25350]"
    },
    {
      "src": "(: ( [22434,22435]",
      "dest": "(: ( [22434,22435]"
    },
    {
      "src": "]: ] [23781,23782]",
      "dest": "]: ] [23781,23782]"
    },
    {
      "src": "number_literal: 20 [24000,24002]",
      "dest": "number_literal: 20 [24000,24002]"
    },
    {
      "src": "identifier: _balances [14018,14027]",
      "dest": "identifier: _balances [14018,14027]"
    },
    {
      "src": "(: ( [12365,12366]",
      "dest": "(: ( [12365,12366]"
    },
    {
      "src": "call_argument [15838,15924]",
      "dest": "call_argument [15838,15924]"
    },
    {
      "src": "public: public [9913,9919]",
      "dest": "public: public [9913,9919]"
    },
    {
      "src": "(: ( [10408,10409]",
      "dest": "(: ( [10408,10409]"
    },
    {
      "src": "function: function [16665,16673]",
      "dest": "function: function [16665,16673]"
    },
    {
      "src": "internal: internal [23969,23977]",
      "dest": "internal: internal [23969,23977]"
    },
    {
      "src": "function_definition [9549,9657]",
      "dest": "function_definition [9549,9657]"
    },
    {
      "src": ",: , [8334,8335]",
      "dest": ",: , [8334,8335]"
    },
    {
      "src": "identifier: _totalSupply [14685,14697]",
      "dest": "identifier: _totalSupply [14685,14697]"
    },
    {
      "src": "identifier: val [24038,24041]",
      "dest": "identifier: val [24038,24041]"
    },
    {
      "src": "primitive_type [16298,16303]",
      "dest": "primitive_type [16298,16303]"
    },
    {
      "src": "identifier: dusd [26065,26069]",
      "dest": "identifier: dusd [25966,25970]"
    },
    {
      "src": "\": \" [25037,25038]",
      "dest": "\": \" [25037,25038]"
    },
    {
      "src": "function_body [11731,11852]",
      "dest": "function_body [11731,11852]"
    },
    {
      "src": "primitive_type [14441,14448]",
      "dest": "primitive_type [14441,14448]"
    },
    {
      "src": "emit: emit [25093,25097]",
      "dest": "emit: emit [25093,25097]"
    },
    {
      "src": "identifier: require [22994,23001]",
      "dest": "identifier: require [22994,23001]"
    },
    {
      "src": "*: * [6335,6336]",
      "dest": "*: * [6335,6336]"
    },
    {
      "src": "): ) [23436,23437]",
      "dest": "): ) [23436,23437]"
    },
    {
      "src": "identifier: a [23874,23875]",
      "dest": "identifier: a [23874,23875]"
    },
    {
      "src": "primitive_type [2550,2557]",
      "dest": "primitive_type [2550,2557]"
    },
    {
      "src": "expression_statement [24264,24295]",
      "dest": "expression_statement [24264,24295]"
    },
    {
      "src": "identifier: spender [940,947]",
      "dest": "identifier: spender [940,947]"
    },
    {
      "src": "\": \" [15344,15345]",
      "dest": "\": \" [15344,15345]"
    },
    {
      "src": "primitive_type [5110,5117]",
      "dest": "primitive_type [5110,5117]"
    },
    {
      "src": "pragma_directive [0,23]",
      "dest": "pragma_directive [0,23]"
    },
    {
      "src": "type_name [20358,20365]",
      "dest": "type_name [20358,20365]"
    },
    {
      "src": "=>: => [9254,9256]",
      "dest": "=>: => [9254,9256]"
    },
    {
      "src": "identifier: _transferOwnership [24899,24917]",
      "dest": "identifier: _transferOwnership [24899,24917]"
    },
    {
      "src": "type_name [23771,23782]",
      "dest": "type_name [23771,23782]"
    },
    {
      "src": "identifier: selector [20751,20759]",
      "dest": "identifier: selector [20751,20759]"
    },
    {
      "src": "comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [16756,17294]",
      "dest": "comment: /**      * @dev Returns the number of decimals used to get its user representation.      * For example, if `decimals` equals `2`, a balance of `505` tokens should      * be displayed to a user as `5,05` (`505 / 10 ** 2`).      *      * Tokens usually opt for a value of 18, imitating the relationship between      * Ether and Wei.      *      * NOTE: This information is only used for _display_ purposes: it in      * no way affects any of the arithmetic of the contract, including      * {IERC20-balanceOf} and {IERC20-transfer}.      */ [16756,17294]"
    },
    {
      "src": "identifier: IERC20 [21728,21734]",
      "dest": "identifier: IERC20 [21728,21734]"
    },
    {
      "src": "primitive_type [23535,23539]",
      "dest": "primitive_type [23535,23539]"
    },
    {
      "src": "identifier: Initializable [23515,23528]",
      "dest": "identifier: Initializable [23515,23528]"
    },
    {
      "src": "\": \" [15387,15388]",
      "dest": "\": \" [15387,15388]"
    },
    {
      "src": "address: address [14441,14448]",
      "dest": "address: address [14441,14448]"
    },
    {
      "src": "uint: uint [26000,26004]",
      "dest": "uint: uint [25871,25875]"
    },
    {
      "src": "parameter [583,597]",
      "dest": "parameter [583,597]"
    },
    {
      "src": "function_definition [120,175]",
      "dest": "function_definition [120,175]"
    },
    {
      "src": "string [5180,5212]",
      "dest": "string [5180,5212]"
    },
    {
      "src": "return_statement [26959,27005]",
      "dest": "return_statement [26808,26931]"
    },
    {
      "src": "type_name [13106,13113]",
      "dest": "type_name [13106,13113]"
    },
    {
      "src": "(: ( [6897,6898]",
      "dest": "(: ( [6897,6898]"
    },
    {
      "src": "identifier: position [24518,24526]",
      "dest": "identifier: position [24518,24526]"
    },
    {
      "src": "[: [ [15858,15859]",
      "dest": "[: [ [15858,15859]"
    },
    {
      "src": "visibility [16487,16493]",
      "dest": "visibility [16487,16493]"
    },
    {
      "src": "return: return [7853,7859]",
      "dest": "return: return [7853,7859]"
    },
    {
      "src": "identifier: isOwner [24588,24595]",
      "dest": "identifier: isOwner [24588,24595]"
    },
    {
      "src": "call_argument [20559,20561]",
      "dest": "call_argument [20559,20561]"
    },
    {
      "src": "member_expression [21637,21650]",
      "dest": "member_expression [21637,21650]"
    },
    {
      "src": "pure: pure [8356,8360]",
      "dest": "pure: pure [8356,8360]"
    },
    {
      "src": "(: ( [21727,21728]",
      "dest": "(: ( [21727,21728]"
    },
    {
      "src": "type_cast_expression [13261,13271]",
      "dest": "type_cast_expression [13261,13271]"
    },
    {
      "src": "if_statement [26157,26291]",
      "dest": "if_statement [26058,26192]"
    },
    {
      "src": "primitive_type [27108,27112]",
      "dest": "primitive_type [26997,27001]"
    },
    {
      "src": "{: { [11731,11732]",
      "dest": "{: { [11731,11732]"
    },
    {
      "src": "identifier: token [20702,20707]",
      "dest": "identifier: token [20702,20707]"
    },
    {
      "src": "primitive_type [8957,8964]",
      "dest": "primitive_type [8957,8964]"
    },
    {
      "src": "parameter [1651,1666]",
      "dest": "parameter [1651,1666]"
    },
    {
      "src": "function_definition [23933,24048]",
      "dest": "function_definition [23933,24048]"
    },
    {
      "src": "uint256: uint256 [7543,7550]",
      "dest": "uint256: uint256 [7543,7550]"
    },
    {
      "src": ",: , [23029,23030]",
      "dest": ",: , [23029,23030]"
    },
    {
      "src": "identifier: safeTransfer [20412,20424]",
      "dest": "identifier: safeTransfer [20412,20424]"
    },
    {
      "src": "}: } [26949,26950]",
      "dest": "}: } [26798,26799]"
    },
    {
      "src": "): ) [9911,9912]",
      "dest": "): ) [9911,9912]"
    },
    {
      "src": "expression_statement [5649,5679]",
      "dest": "expression_statement [5649,5679]"
    },
    {
      "src": "call_argument [21380,21387]",
      "dest": "call_argument [21380,21387]"
    },
    {
      "src": "call_argument [25033,25034]",
      "dest": "call_argument [25033,25034]"
    },
    {
      "src": "{: { [21783,21784]",
      "dest": "{: { [21783,21784]"
    },
    {
      "src": "assignment_expression [14571,14660]",
      "dest": "assignment_expression [14571,14660]"
    },
    {
      "src": "(: ( [21839,21840]",
      "dest": "(: ( [21839,21840]"
    },
    {
      "src": "expression_statement [26065,26123]",
      "dest": "expression_statement [25966,26024]"
    },
    {
      "src": "state_mutability [6015,6019]",
      "dest": "state_mutability [6015,6019]"
    },
    {
      "src": ",: , [15305,15306]",
      "dest": ",: , [15305,15306]"
    },
    {
      "src": "identifier: safeDecreaseAllowance [21706,21727]",
      "dest": "identifier: safeDecreaseAllowance [21706,21727]"
    },
    {
      "src": "identifier: value [20771,20776]",
      "dest": "identifier: value [20771,20776]"
    },
    {
      "src": "type_name [3402,3417]",
      "dest": "type_name [3402,3417]"
    },
    {
      "src": "type_cast_expression [13891,13901]",
      "dest": "type_cast_expression [13891,13901]"
    },
    {
      "src": ",: , [10105,10106]",
      "dest": ",: , [10105,10106]"
    },
    {
      "src": "member_expression [13342,13363]",
      "dest": "member_expression [13342,13363]"
    },
    {
      "src": "identifier: earned [25326,25332]",
      "dest": "identifier: earned [25326,25332]"
    },
    {
      "src": "identifier: to [20767,20769]",
      "dest": "identifier: to [20767,20769]"
    },
    {
      "src": "): ) [22015,22016]",
      "dest": "): ) [22015,22016]"
    },
    {
      "src": "(: ( [18604,18605]",
      "dest": "(: ( [18604,18605]"
    },
    {
      "src": "primitive_type [972,979]",
      "dest": "primitive_type [972,979]"
    },
    {
      "src": "=: = [13961,13962]",
      "dest": "=: = [13961,13962]"
    },
    {
      "src": "binary_expression [5657,5663]",
      "dest": "binary_expression [5657,5663]"
    },
    {
      "src": "call_argument [26087,26097]",
      "dest": "call_argument [25988,25998]"
    },
    {
      "src": ".: . [26250,26251]",
      "dest": ".: . [26151,26152]"
    },
    {
      "src": "function_body [26880,27011]",
      "dest": "function_body [26729,26937]"
    },
    {
      "src": "}: } [13534,13535]",
      "dest": "}: } [13534,13535]"
    },
    {
      "src": "comment: /* ##### View ##### */ [26688,26710]",
      "dest": "comment: /* ##### View ##### */ [26537,26559]"
    },
    {
      "src": "primitive_type [21759,21766]",
      "dest": "primitive_type [21759,21766]"
    },
    {
      "src": "string [14623,14659]",
      "dest": "string [14623,14659]"
    },
    {
      "src": "): ) [25034,25035]",
      "dest": "): ) [25034,25035]"
    },
    {
      "src": "variable_declaration [26132,26143]",
      "dest": "variable_declaration [26033,26044]"
    },
    {
      "src": "state_mutability [25351,25355]",
      "dest": "state_mutability [25351,25355]"
    },
    {
      "src": "pure: pure [5130,5134]",
      "dest": "pure: pure [5130,5134]"
    },
    {
      "src": "[: [ [11151,11152]",
      "dest": "[: [ [11151,11152]"
    },
    {
      "src": "{: { [24074,24075]",
      "dest": "{: { [24074,24075]"
    },
    {
      "src": "type_name [2072,2079]",
      "dest": "type_name [2072,2079]"
    },
    {
      "src": "(: ( [10433,10434]",
      "dest": "(: ( [10433,10434]"
    },
    {
      "src": "external: external [2088,2096]",
      "dest": "external: external [2088,2096]"
    },
    {
      "src": "call_argument [23031,23064]",
      "dest": "call_argument [23031,23064]"
    },
    {
      "src": "identifier: setParams [27055,27064]",
      "dest": "identifier: setRedeemFactor [26981,26996]"
    },
    {
      "src": "identifier: sender [13332,13338]",
      "dest": "identifier: sender [13332,13338]"
    },
    {
      "src": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [3685,3835]",
      "dest": "comment: /**  * @dev Interface of the ERC20 standard as defined in the EIP. Does not include  * the optional functions; to access them see {ERC20Detailed}.  */ [3685,3835]"
    },
    {
      "src": "identifier: allowance [10082,10091]",
      "dest": "identifier: allowance [10082,10091]"
    },
    {
      "src": "return_statement [10474,10486]",
      "dest": "return_statement [10474,10486]"
    },
    {
      "src": "call_argument [13186,13187]",
      "dest": "call_argument [13186,13187]"
    },
    {
      "src": "(: ( [2105,2106]",
      "dest": "(: ( [2105,2106]"
    },
    {
      "src": "yul_identifier [24502,24508]",
      "dest": "yul_identifier [24502,24508]"
    },
    {
      "src": "binary_expression [23874,23880]",
      "dest": "binary_expression [23874,23880]"
    },
    {
      "src": "assignment_expression [16379,16399]",
      "dest": "assignment_expression [16379,16399]"
    },
    {
      "src": "library_declaration [17452,20313]",
      "dest": "library_declaration [17452,20313]"
    },
    {
      "src": "identifier: shares [26137,26143]",
      "dest": "identifier: shares [26038,26044]"
    },
    {
      "src": "number_literal: 0 [13269,13270]",
      "dest": "number_literal: 0 [13269,13270]"
    },
    {
      "src": "expression_statement [11741,11825]",
      "dest": "expression_statement [11741,11825]"
    },
    {
      "src": "}: } [26374,26375]",
      "dest": "}: } [26232,26233]"
    },
    {
      "src": "primitive_type [10377,10384]",
      "dest": "primitive_type [10377,10384]"
    },
    {
      "src": "block_statement [6278,6311]",
      "dest": "block_statement [6278,6311]"
    },
    {
      "src": "\": \" [25956,25957]",
      "dest": "\": \" [25829,25830]"
    },
    {
      "src": "library: library [17452,17459]",
      "dest": "library: library [17452,17459]"
    },
    {
      "src": "parameter [9568,9583]",
      "dest": "parameter [9568,9583]"
    },
    {
      "src": "identifier: c [5696,5697]",
      "dest": "identifier: c [5696,5697]"
    },
    {
      "src": "identifier: amount [14615,14621]",
      "dest": "identifier: amount [14615,14621]"
    },
    {
      "src": "call_expression [15774,15796]",
      "dest": "call_expression [15774,15796]"
    },
    {
      "src": "parameter [16298,16312]",
      "dest": "parameter [16298,16312]"
    },
    {
      "src": "internal: internal [5121,5129]",
      "dest": "internal: internal [5121,5129]"
    },
    {
      "src": "): ) [11129,11130]",
      "dest": "): ) [11129,11130]"
    },
    {
      "src": "identifier: div [6894,6897]",
      "dest": "identifier: div [6894,6897]"
    },
    {
      "src": "call_argument [26622,26632]",
      "dest": "call_argument [26510,26520]"
    },
    {
      "src": "(: ( [15721,15722]",
      "dest": "(: ( [15721,15722]"
    },
    {
      "src": "type_name [24168,24175]",
      "dest": "type_name [24168,24175]"
    },
    {
      "src": "(: ( [11038,11039]",
      "dest": "(: ( [11038,11039]"
    },
    {
      "src": "type_name [24440,24447]",
      "dest": "type_name [24440,24447]"
    },
    {
      "src": "address: address [20439,20446]",
      "dest": "address: address [20439,20446]"
    },
    {
      "src": "): ) [27388,27389]",
      "dest": "): ) [27151,27152]"
    },
    {
      "src": "type_name [20609,20615]",
      "dest": "type_name [20609,20615]"
    },
    {
      "src": "type_name [9568,9575]",
      "dest": "type_name [9568,9575]"
    },
    {
      "src": "library_declaration [4401,9109]",
      "dest": "library_declaration [4401,9109]"
    },
    {
      "src": "identifier: withdraw [26390,26398]",
      "dest": "identifier: withdraw [26248,26256]"
    },
    {
      "src": "identifier: sendValue [19955,19964]",
      "dest": "identifier: sendValue [19955,19964]"
    },
    {
      "src": "call_argument [25971,25973]",
      "dest": "call_argument [25842,25844]"
    },
    {
      "src": "): ) [21682,21683]",
      "dest": "): ) [21682,21683]"
    },
    {
      "src": "call_argument [15307,15345]",
      "dest": "call_argument [15307,15345]"
    },
    {
      "src": "(: ( [24595,24596]",
      "dest": "(: ( [24595,24596]"
    },
    {
      "src": "identifier: success [23220,23227]",
      "dest": "identifier: success [23220,23227]"
    },
    {
      "src": "if_statement [26890,26950]",
      "dest": "if_statement [26739,26799]"
    },
    {
      "src": "): ) [21216,21217]",
      "dest": "): ) [21216,21217]"
    },
    {
      "src": "call_argument [11065,11071]",
      "dest": "call_argument [11065,11071]"
    },
    {
      "src": "call_argument [7716,7728]",
      "dest": "call_argument [7716,7728]"
    },
    {
      "src": "function_body [26762,26815]",
      "dest": "function_body [26611,26664]"
    },
    {
      "src": "call_expression [6969,7008]",
      "dest": "call_expression [6969,7008]"
    },
    {
      "src": "call_argument [12511,12526]",
      "dest": "call_argument [12511,12526]"
    },
    {
      "src": "]: ] [10197,10198]",
      "dest": "]: ] [10197,10198]"
    },
    {
      "src": "contract: contract [25374,25382]",
      "dest": "contract: contract [25374,25382]"
    },
    {
      "src": "user_defined_type [25393,25405]",
      "dest": "user_defined_type [25393,25405]"
    },
    {
      "src": "call_argument [21389,21394]",
      "dest": "call_argument [21389,21394]"
    },
    {
      "src": "): ) [13527,13528]",
      "dest": "): ) [13527,13528]"
    },
    {
      "src": "call_expression [26441,26476]",
      "dest": "call_expression [26329,26364]"
    },
    {
      "src": "call_argument [21947,22016]",
      "dest": "call_argument [21947,22016]"
    },
    {
      "src": "call_expression [12440,12569]",
      "dest": "call_expression [12440,12569]"
    },
    {
      "src": "member_expression [14592,14614]",
      "dest": "member_expression [14592,14614]"
    },
    {
      "src": "call_expression [13240,13311]",
      "dest": "call_expression [13240,13311]"
    },
    {
      "src": "): ) [26268,26269]",
      "dest": "): ) [26169,26170]"
    },
    {
      "src": "primitive_type [12383,12390]",
      "dest": "primitive_type [12383,12390]"
    },
    {
      "src": "call_argument [13880,13901]",
      "dest": "call_argument [13880,13901]"
    },
    {
      "src": "=: = [16361,16362]",
      "dest": "=: = [16361,16362]"
    },
    {
      "src": "type_name [13090,13097]",
      "dest": "type_name [13090,13097]"
    },
    {
      "src": "state_mutability [18091,18095]",
      "dest": "state_mutability [18091,18095]"
    },
    {
      "src": "binary_expression [25013,25035]",
      "dest": "binary_expression [25013,25035]"
    },
    {
      "src": "identifier: require [21147,21154]",
      "dest": "identifier: require [21147,21154]"
    },
    {
      "src": "primitive_type [14072,14079]",
      "dest": "primitive_type [14072,14079]"
    },
    {
      "src": "]: ] [11797,11798]",
      "dest": "]: ] [11797,11798]"
    },
    {
      "src": "primitive_type [2296,2303]",
      "dest": "primitive_type [2296,2303]"
    },
    {
      "src": "(: ( [13898,13899]",
      "dest": "(: ( [13898,13899]"
    },
    {
      "src": "primitive_type [583,590]",
      "dest": "primitive_type [583,590]"
    },
    {
      "src": "): ) [26121,26122]",
      "dest": "): ) [26022,26023]"
    },
    {
      "src": "identifier: b [5576,5577]",
      "dest": "identifier: b [5576,5577]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [6436,6880]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      */ [6436,6880]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [49,115]",
      "dest": "comment: /**      * @dev Returns the amount of tokens in existence.      */ [49,115]"
    },
    {
      "src": "contract_body [24074,25253]",
      "dest": "contract_body [24074,25253]"
    },
    {
      "src": "modifier: modifier [23566,23574]",
      "dest": "modifier: modifier [23566,23574]"
    },
    {
      "src": "call_expression [23866,23896]",
      "dest": "call_expression [23866,23896]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [4828,5081]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      */ [4828,5081]"
    },
    {
      "src": "identifier: previousOwner [24184,24197]",
      "dest": "identifier: previousOwner [24184,24197]"
    },
    {
      "src": "call_argument [8406,8432]",
      "dest": "call_argument [8406,8432]"
    },
    {
      "src": "identifier: _allowances [12472,12483]",
      "dest": "identifier: _allowances [12472,12483]"
    },
    {
      "src": "(: ( [140,141]",
      "dest": "(: ( [140,141]"
    },
    {
      "src": "(: ( [16680,16681]",
      "dest": "(: ( [16680,16681]"
    },
    {
      "src": "function_definition [11645,11852]",
      "dest": "function_definition [11645,11852]"
    },
    {
      "src": "identifier: amount [15465,15471]",
      "dest": "identifier: amount [15465,15471]"
    },
    {
      "src": "function: function [120,128]",
      "dest": "function: function [120,128]"
    },
    {
      "src": "identifier: spender [10368,10375]",
      "dest": "identifier: spender [10368,10375]"
    },
    {
      "src": "(: ( [26755,26756]",
      "dest": "(: ( [26604,26605]"
    },
    {
      "src": "internal: internal [20664,20672]",
      "dest": "internal: internal [20664,20672]"
    },
    {
      "src": "address: address [10092,10099]",
      "dest": "address: address [10092,10099]"
    },
    {
      "src": "identifier: Approval [15486,15494]",
      "dest": "identifier: Approval [15486,15494]"
    },
    {
      "src": "type_name [7616,7623]",
      "dest": "type_name [7616,7623]"
    },
    {
      "src": "): ) [26557,26558]",
      "dest": "): ) [26445,26446]"
    },
    {
      "src": "type_name [15739,15746]",
      "dest": "type_name [15739,15746]"
    },
    {
      "src": "variable_declaration_tuple [20165,20181]",
      "dest": "variable_declaration_tuple [20165,20181]"
    },
    {
      "src": "call_argument [26255,26268]",
      "dest": "call_argument [26156,26169]"
    },
    {
      "src": "identifier: mul [5980,5983]",
      "dest": "identifier: mul [5980,5983]"
    },
    {
      "src": "uint256: uint256 [9897,9904]",
      "dest": "uint256: uint256 [9897,9904]"
    },
    {
      "src": "type_name [7543,7550]",
      "dest": "type_name [7543,7550]"
    },
    {
      "src": "type_name [26432,26436]",
      "dest": "type_name [26320,26324]"
    },
    {
      "src": "identifier: a [5174,5175]",
      "dest": "identifier: a [5174,5175]"
    },
    {
      "src": "): ) [21210,21211]",
      "dest": "): ) [21210,21211]"
    },
    {
      "src": "view: view [24401,24405]",
      "dest": "view: view [24401,24405]"
    },
    {
      "src": "bytes: bytes [22449,22454]",
      "dest": "bytes: bytes [22449,22454]"
    },
    {
      "src": ",: , [15737,15738]",
      "dest": ",: , [15737,15738]"
    },
    {
      "src": "variable_declaration [25147,25163]",
      "dest": "variable_declaration [25147,25163]"
    },
    {
      "src": "call_expression [9945,9987]",
      "dest": "call_expression [9945,9987]"
    },
    {
      "src": "returns: returns [4695,4702]",
      "dest": "returns: returns [4695,4702]"
    },
    {
      "src": "string: string [8979,8985]",
      "dest": "string: string [8979,8985]"
    },
    {
      "src": "!=: != [13258,13260]",
      "dest": "!=: != [13258,13260]"
    },
    {
      "src": "primitive_type [5557,5564]",
      "dest": "primitive_type [5557,5564]"
    },
    {
      "src": "(: ( [26106,26107]",
      "dest": "(: ( [26007,26008]"
    },
    {
      "src": "expression_statement [9049,9079]",
      "dest": "expression_statement [9049,9079]"
    },
    {
      "src": "uint256: uint256 [5099,5106]",
      "dest": "uint256: uint256 [5099,5106]"
    },
    {
      "src": "yul_path [24502,24508]",
      "dest": "yul_path [24502,24508]"
    },
    {
      "src": "parameter [21440,21452]",
      "dest": "parameter [21440,21452]"
    },
    {
      "src": ".: . [20539,20540]",
      "dest": ".: . [20539,20540]"
    },
    {
      "src": "public: public [25531,25537]",
      "dest": "public: public [25531,25537]"
    },
    {
      "src": "emit_statement [14058,14101]",
      "dest": "emit_statement [14058,14101]"
    },
    {
      "src": "using: using [9151,9156]",
      "dest": "using: using [9151,9156]"
    },
    {
      "src": "}: } [12596,12597]",
      "dest": "}: } [12596,12597]"
    },
    {
      "src": "function_definition [898,981]",
      "dest": "function_definition [898,981]"
    },
    {
      "src": "variable_declaration_statement [21793,21912]",
      "dest": "variable_declaration_statement [21793,21912]"
    },
    {
      "src": "primitive_type [26874,26878]",
      "dest": "primitive_type [26723,26727]"
    },
    {
      "src": "primitive_type [10988,10995]",
      "dest": "primitive_type [10988,10995]"
    },
    {
      "src": "): ) [9211,9212]",
      "dest": "): ) [9211,9212]"
    },
    {
      "src": "comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [12603,13066]",
      "dest": "comment: /**      * @dev Moves tokens `amount` from `sender` to `recipient`.      *      * This is internal function is equivalent to {transfer}, and can be used to      * e.g. implement automatic token fees, slashing mechanisms, etc.      *      * Emits a {Transfer} event.      *      * Requirements:      *      * - `sender` cannot be the zero address.      * - `recipient` cannot be the zero address.      * - `sender` must have a balance of at least `amount`.      */ [12603,13066]"
    },
    {
      "src": "(: ( [2295,2296]",
      "dest": "(: ( [2295,2296]"
    },
    {
      "src": "call_argument [24120,24133]",
      "dest": "call_argument [24120,24133]"
    },
    {
      "src": "address: address [26099,26106]",
      "dest": "address: address [26000,26007]"
    },
    {
      "src": "uint256: uint256 [6321,6328]",
      "dest": "uint256: uint256 [6321,6328]"
    },
    {
      "src": "identifier: amount [20060,20066]",
      "dest": "identifier: amount [20060,20066]"
    },
    {
      "src": ",: , [24197,24198]",
      "dest": ",: , [24197,24198]"
    },
    {
      "src": "(: ( [24651,24652]",
      "dest": "(: ( [24651,24652]"
    },
    {
      "src": "parameter [3502,3514]",
      "dest": "parameter [3502,3514]"
    },
    {
      "src": "visibility [8347,8355]",
      "dest": "visibility [8347,8355]"
    },
    {
      "src": "primitive_type [26432,26436]",
      "dest": "primitive_type [26320,26324]"
    },
    {
      "src": "return_statement [6962,7009]",
      "dest": "return_statement [6962,7009]"
    },
    {
      "src": "type_name [20425,20431]",
      "dest": "type_name [20425,20431]"
    },
    {
      "src": "): ) [24133,24134]",
      "dest": "): ) [24133,24134]"
    },
    {
      "src": "visibility [25303,25311]",
      "dest": "visibility [25303,25311]"
    },
    {
      "src": "type_name [11007,11014]",
      "dest": "type_name [11007,11014]"
    },
    {
      "src": "is: is [25390,25392]",
      "dest": "is: is [25390,25392]"
    },
    {
      "src": "{: { [23592,23593]",
      "dest": "{: { [23592,23593]"
    },
    {
      "src": "): ) [24428,24429]",
      "dest": "): ) [24428,24429]"
    },
    {
      "src": "yul_function_call [24512,24527]",
      "dest": "yul_function_call [24512,24527]"
    },
    {
      "src": "type_name [8336,8343]",
      "dest": "type_name [8336,8343]"
    },
    {
      "src": "primitive_type [1668,1675]",
      "dest": "primitive_type [1668,1675]"
    },
    {
      "src": "member_expression [21816,21859]",
      "dest": "member_expression [21816,21859]"
    },
    {
      "src": ",: , [21740,21741]",
      "dest": ",: , [21740,21741]"
    },
    {
      "src": "source_file [0,27470]",
      "dest": "source_file [0,27199]"
    },
    {
      "src": "address: address [277,284]",
      "dest": "address: address [277,284]"
    },
    {
      "src": "call_argument [20035,20066]",
      "dest": "call_argument [20035,20066]"
    },
    {
      "src": "uint256: uint256 [7616,7623]",
      "dest": "uint256: uint256 [7616,7623]"
    },
    {
      "src": "returns: returns [608,615]",
      "dest": "returns: returns [608,615]"
    },
    {
      "src": "view: view [16494,16498]",
      "dest": "view: view [16494,16498]"
    },
    {
      "src": "}: } [14767,14768]",
      "dest": "}: } [14767,14768]"
    },
    {
      "src": "(: ( [24119,24120]",
      "dest": "(: ( [24119,24120]"
    },
    {
      "src": "call_argument [9057,9063]",
      "dest": "call_argument [9057,9063]"
    },
    {
      "src": "address: address [21544,21551]",
      "dest": "address: address [21544,21551]"
    },
    {
      "src": "contract_body [20333,23504]",
      "dest": "contract_body [20333,23504]"
    },
    {
      "src": "internal: internal [18900,18908]",
      "dest": "internal: internal [18900,18908]"
    },
    {
      "src": "internal: internal [15755,15763]",
      "dest": "internal: internal [15755,15763]"
    },
    {
      "src": "type_name [4659,4666]",
      "dest": "type_name [4659,4666]"
    },
    {
      "src": ",: , [2336,2337]",
      "dest": ",: , [2336,2337]"
    },
    {
      "src": "boolean_literal [10004,10008]",
      "dest": "boolean_literal [10004,10008]"
    },
    {
      "src": "}: } [15933,15934]",
      "dest": "}: } [15933,15934]"
    },
    {
      "src": ".: . [21617,21618]",
      "dest": ".: . [21617,21618]"
    },
    {
      "src": "function: function [18864,18872]",
      "dest": "function: function [18864,18872]"
    },
    {
      "src": "comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [16558,16660]",
      "dest": "comment: /**      * @dev Returns the symbol of the token, usually a shorter version of the      * name.      */ [16558,16660]"
    },
    {
      "src": "visibility [9913,9919]",
      "dest": "visibility [9913,9919]"
    },
    {
      "src": "): ) [16312,16313]",
      "dest": "): ) [16312,16313]"
    },
    {
      "src": "[: [ [15453,15454]",
      "dest": "[: [ [15453,15454]"
    },
    {
      "src": "identifier: spender [10448,10455]",
      "dest": "identifier: spender [10448,10455]"
    },
    {
      "src": "call_expression [24899,24927]",
      "dest": "call_expression [24899,24927]"
    },
    {
      "src": "uint256: uint256 [9030,9037]",
      "dest": "uint256: uint256 [9030,9037]"
    },
    {
      "src": ",: , [21387,21388]",
      "dest": ",: , [21387,21388]"
    },
    {
      "src": "type_name [18389,18396]",
      "dest": "type_name [18389,18396]"
    },
    {
      "src": "state_mutability [303,307]",
      "dest": "state_mutability [303,307]"
    },
    {
      "src": "comment: // we're implementing it ourselves. [22603,22638]",
      "dest": "comment: // we're implementing it ourselves. [22603,22638]"
    },
    {
      "src": "!=: != [13888,13890]",
      "dest": "!=: != [13888,13890]"
    },
    {
      "src": "(: ( [14732,14733]",
      "dest": "(: ( [14732,14733]"
    },
    {
      "src": "=: = [23552,23553]",
      "dest": "=: = [23552,23553]"
    },
    {
      "src": "identifier: account [18973,18980]",
      "dest": "identifier: account [18973,18980]"
    },
    {
      "src": "identifier: require [7701,7708]",
      "dest": "identifier: require [7701,7708]"
    },
    {
      "src": "return_type_definition [25356,25369]",
      "dest": "return_type_definition [25356,25369]"
    },
    {
      "src": "uint8: uint8 [16298,16303]",
      "dest": "uint8: uint8 [16298,16303]"
    },
    {
      "src": "type_name [166,173]",
      "dest": "type_name [166,173]"
    },
    {
      "src": "!=: != [18614,18616]",
      "dest": "!=: != [18614,18616]"
    },
    {
      "src": "address: address [25333,25340]",
      "dest": "address: address [25333,25340]"
    },
    {
      "src": "=>: => [9201,9203]",
      "dest": "=>: => [9201,9203]"
    },
    {
      "src": "<=: <= [5659,5661]",
      "dest": "<=: <= [5659,5661]"
    },
    {
      "src": "address: address [24968,24975]",
      "dest": "address: address [24968,24975]"
    },
    {
      "src": "\": \" [13228,13229]",
      "dest": "\": \" [13228,13229]"
    },
    {
      "src": "call_argument [13510,13519]",
      "dest": "call_argument [13510,13519]"
    },
    {
      "src": "type_cast_expression [15375,15385]",
      "dest": "type_cast_expression [15375,15385]"
    },
    {
      "src": "identifier: owner [15447,15452]",
      "dest": "identifier: owner [15447,15452]"
    },
    {
      "src": "(: ( [24517,24518]",
      "dest": "(: ( [24517,24518]"
    },
    {
      "src": "interface: interface [25255,25264]",
      "dest": "interface: interface [25255,25264]"
    },
    {
      "src": "{: { [4418,4419]",
      "dest": "{: { [4418,4419]"
    },
    {
      "src": "identifier: balance [26046,26053]",
      "dest": "identifier: balance [25947,25954]"
    },
    {
      "src": "identifier: b [5657,5658]",
      "dest": "identifier: b [5657,5658]"
    },
    {
      "src": "memory: memory [7572,7578]",
      "dest": "memory: memory [7572,7578]"
    },
    {
      "src": "function_body [20867,21403]",
      "dest": "function_body [20867,21403]"
    },
    {
      "src": "(: ( [18882,18883]",
      "dest": "(: ( [18882,18883]"
    },
    {
      "src": "bytes: bytes [23150,23155]",
      "dest": "bytes: bytes [23150,23155]"
    },
    {
      "src": "uint256: uint256 [21793,21800]",
      "dest": "uint256: uint256 [21793,21800]"
    },
    {
      "src": "(: ( [11749,11750]",
      "dest": "(: ( [11749,11750]"
    },
    {
      "src": "number_literal: 0 [14520,14521]",
      "dest": "number_literal: 0 [14520,14521]"
    },
    {
      "src": "uint256: uint256 [5995,6002]",
      "dest": "uint256: uint256 [5995,6002]"
    },
    {
      "src": "function: function [7530,7538]",
      "dest": "function: function [7530,7538]"
    },
    {
      "src": "identifier: _symbol [16016,16023]",
      "dest": "identifier: _symbol [16016,16023]"
    },
    {
      "src": "array_access [11773,11807]",
      "dest": "array_access [11773,11807]"
    },
    {
      "src": "): ) [17317,17318]",
      "dest": "): ) [17317,17318]"
    },
    {
      "src": ",: , [20449,20450]",
      "dest": ",: , [20449,20450]"
    },
    {
      "src": "\": \" [11219,11220]",
      "dest": "\": \" [11219,11220]"
    },
    {
      "src": "private: private [22468,22475]",
      "dest": "private: private [22468,22475]"
    },
    {
      "src": "): ) [6004,6005]",
      "dest": "): ) [6004,6005]"
    },
    {
      "src": "}: } [11249,11250]",
      "dest": "}: } [11249,11250]"
    },
    {
      "src": "visibility [15259,15267]",
      "dest": "visibility [15259,15267]"
    },
    {
      "src": "expression_statement [14670,14710]",
      "dest": "expression_statement [14670,14710]"
    },
    {
      "src": "identifier: recipient [13248,13257]",
      "dest": "identifier: recipient [13248,13257]"
    },
    {
      "src": "primitive_type [24080,24087]",
      "dest": "primitive_type [24080,24087]"
    },
    {
      "src": "identifier: c [6356,6357]",
      "dest": "identifier: c [6356,6357]"
    },
    {
      "src": "identifier: balance [20049,20056]",
      "dest": "identifier: balance [20049,20056]"
    },
    {
      "src": "using: using [25449,25454]",
      "dest": "using: using [25449,25454]"
    },
    {
      "src": "comment: //  1. The target address is checked to verify it contains contract code [22703,22775]",
      "dest": "comment: //  1. The target address is checked to verify it contains contract code [22703,22775]"
    },
    {
      "src": "): ) [14559,14560]",
      "dest": "): ) [14559,14560]"
    },
    {
      "src": "[: [ [15849,15850]",
      "dest": "[: [ [15849,15850]"
    },
    {
      "src": "identifier: val [23964,23967]",
      "dest": "identifier: val [23964,23967]"
    },
    {
      "src": "(: ( [25124,25125]",
      "dest": "(: ( [25124,25125]"
    },
    {
      "src": "identifier: a [9095,9096]",
      "dest": "identifier: a [9095,9096]"
    },
    {
      "src": "internal: internal [3379,3387]",
      "dest": "internal: internal [3379,3387]"
    },
    {
      "src": "identifier: _msgSender [10434,10444]",
      "dest": "identifier: _msgSender [10434,10444]"
    },
    {
      "src": "identifier: addedValue [11697,11707]",
      "dest": "identifier: addedValue [11697,11707]"
    },
    {
      "src": "(: ( [25012,25013]",
      "dest": "(: ( [25012,25013]"
    },
    {
      "src": "uint256: uint256 [2575,2582]",
      "dest": "uint256: uint256 [2575,2582]"
    },
    {
      "src": "function: function [16471,16479]",
      "dest": "function: function [16471,16479]"
    },
    {
      "src": "function_definition [17299,17380]",
      "dest": "function_definition [17299,17380]"
    },
    {
      "src": "): ) [26593,26594]",
      "dest": "): ) [26481,26482]"
    },
    {
      "src": "(: ( [9265,9266]",
      "dest": "(: ( [9265,9266]"
    },
    {
      "src": "public: public [25589,25595]",
      "dest": "public: public [25589,25595]"
    },
    {
      "src": "call_argument [20243,20303]",
      "dest": "call_argument [20243,20303]"
    },
    {
      "src": "}: } [17379,17380]",
      "dest": "}: } [17379,17380]"
    },
    {
      "src": "internal: internal [6006,6014]",
      "dest": "internal: internal [6006,6014]"
    },
    {
      "src": "call_argument [25934,25957]",
      "dest": "call_argument [25807,25830]"
    },
    {
      "src": "): ) [16521,16522]",
      "dest": "): ) [16521,16522]"
    },
    {
      "src": ",: , [2070,2071]",
      "dest": ",: , [2070,2071]"
    },
    {
      "src": "type_name [23136,23140]",
      "dest": "type_name [23136,23140]"
    },
    {
      "src": "variable_declaration [23150,23173]",
      "dest": "variable_declaration [23150,23173]"
    },
    {
      "src": "(: ( [23589,23590]",
      "dest": "(: ( [23589,23590]"
    },
    {
      "src": "call_expression [9049,9078]",
      "dest": "call_expression [9049,9078]"
    },
    {
      "src": "private: private [16035,16042]",
      "dest": "private: private [16035,16042]"
    },
    {
      "src": "}: } [3682,3683]",
      "dest": "}: } [3682,3683]"
    },
    {
      "src": "visibility [15982,15989]",
      "dest": "visibility [15982,15989]"
    },
    {
      "src": ",: , [22447,22448]",
      "dest": ",: , [22447,22448]"
    },
    {
      "src": "]: ] [15871,15872]",
      "dest": "]: ] [15871,15872]"
    },
    {
      "src": "yul_assignment [18554,18586]",
      "dest": "yul_assignment [18554,18586]"
    },
    {
      "src": "): ) [22016,22017]",
      "dest": "): ) [22016,22017]"
    },
    {
      "src": "): ) [9423,9424]",
      "dest": "): ) [9423,9424]"
    },
    {
      "src": "\": \" [21867,21868]",
      "dest": "\": \" [21867,21868]"
    },
    {
      "src": "identifier: ERC20 [9120,9125]",
      "dest": "identifier: ERC20 [9120,9125]"
    },
    {
      "src": ".: . [13975,13976]",
      "dest": ".: . [13975,13976]"
    },
    {
      "src": ".: . [14610,14611]",
      "dest": ".: . [14610,14611]"
    },
    {
      "src": ",: , [20769,20770]",
      "dest": ",: , [20769,20770]"
    },
    {
      "src": "type_name [23150,23155]",
      "dest": "type_name [23150,23155]"
    },
    {
      "src": "parameter [7543,7552]",
      "dest": "parameter [7543,7552]"
    },
    {
      "src": "call_expression [26966,26975]",
      "dest": "call_expression [26815,26824]"
    },
    {
      "src": "(: ( [24413,24414]",
      "dest": "(: ( [24413,24414]"
    },
    {
      "src": "call_argument [26107,26111]",
      "dest": "call_argument [26008,26012]"
    },
    {
      "src": "primitive_type [1651,1658]",
      "dest": "primitive_type [1651,1658]"
    },
    {
      "src": "): ) [25340,25341]",
      "dest": "): ) [25340,25341]"
    },
    {
      "src": "identifier: call [23192,23196]",
      "dest": "identifier: call [23192,23196]"
    },
    {
      "src": "{: { [18552,18553]",
      "dest": "{: { [18552,18553]"
    },
    {
      "src": "for: for [20385,20388]",
      "dest": "for: for [20385,20388]"
    },
    {
      "src": "member_expression [3666,3674]",
      "dest": "member_expression [3666,3674]"
    },
    {
      "src": "primitive_type [16001,16007]",
      "dest": "primitive_type [16001,16007]"
    },
    {
      "src": "public: public [16683,16689]",
      "dest": "public: public [16683,16689]"
    },
    {
      "src": "primitive_type [26033,26037]",
      "dest": "primitive_type [25934,25938]"
    },
    {
      "src": "primitive_type [20358,20365]",
      "dest": "primitive_type [20358,20365]"
    },
    {
      "src": "identifier: account [14581,14588]",
      "dest": "identifier: account [14581,14588]"
    },
    {
      "src": "call_argument [26525,26557]",
      "dest": "call_argument [26413,26445]"
    },
    {
      "src": "\": \" [4766,4767]",
      "dest": "\": \" [4766,4767]"
    },
    {
      "src": "parameter [18923,18938]",
      "dest": "parameter [18923,18938]"
    },
    {
      "src": "contract_body [25278,25372]",
      "dest": "contract_body [25278,25372]"
    },
    {
      "src": "call_argument [11773,11823]",
      "dest": "call_argument [11773,11823]"
    },
    {
      "src": "(: ( [276,277]",
      "dest": "(: ( [276,277]"
    },
    {
      "src": "function_body [24995,25251]",
      "dest": "function_body [24995,25251]"
    },
    {
      "src": "\": \" [21909,21910]",
      "dest": "\": \" [21909,21910]"
    },
    {
      "src": ",: , [24002,24003]",
      "dest": ",: , [24002,24003]"
    },
    {
      "src": "{: { [18940,18941]",
      "dest": "{: { [18940,18941]"
    },
    {
      "src": "return: return [6962,6968]",
      "dest": "return: return [6962,6968]"
    },
    {
      "src": "yul_path [24518,24526]",
      "dest": "yul_path [24518,24526]"
    },
    {
      "src": "): ) [20215,20216]",
      "dest": "): ) [20215,20216]"
    },
    {
      "src": "identifier: newOwner [25013,25021]",
      "dest": "identifier: newOwner [25013,25021]"
    },
    {
      "src": "(: ( [12459,12460]",
      "dest": "(: ( [12459,12460]"
    },
    {
      "src": "(: ( [26305,26306]",
      "dest": "(: ( [26206,26207]"
    },
    {
      "src": "event_paramater [2527,2548]",
      "dest": "event_paramater [2527,2548]"
    },
    {
      "src": "primitive_type [13820,13827]",
      "dest": "primitive_type [13820,13827]"
    },
    {
      "src": "library: library [4401,4408]",
      "dest": "library: library [4401,4408]"
    },
    {
      "src": "primitive_type [18363,18370]",
      "dest": "primitive_type [18363,18370]"
    },
    {
      "src": "parameter [18883,18898]",
      "dest": "parameter [18883,18898]"
    },
    {
      "src": "identifier: sender [11065,11071]",
      "dest": "identifier: sender [11065,11071]"
    },
    {
      "src": "identifier: SafeMath [9157,9165]",
      "dest": "identifier: SafeMath [9157,9165]"
    },
    {
      "src": "returns: returns [157,164]",
      "dest": "returns: returns [157,164]"
    },
    {
      "src": "string_literal [15307,15345]",
      "dest": "string_literal [15307,15345]"
    },
    {
      "src": "(: ( [25933,25934]",
      "dest": "(: ( [25806,25807]"
    },
    {
      "src": "identifier: _allowances [15435,15446]",
      "dest": "identifier: _allowances [15435,15446]"
    },
    {
      "src": "address: address [24199,24206]",
      "dest": "address: address [24199,24206]"
    },
    {
      "src": "primitive_type [8979,8985]",
      "dest": "primitive_type [8979,8985]"
    },
    {
      "src": "call_argument [21559,21566]",
      "dest": "call_argument [21559,21566]"
    },
    {
      "src": "string [13273,13310]",
      "dest": "string [13273,13310]"
    },
    {
      "src": "binary_expression [26161,26171]",
      "dest": "binary_expression [26062,26072]"
    },
    {
      "src": "{: { [16719,16720]",
      "dest": "{: { [16719,16720]"
    },
    {
      "src": "identifier: sub [5553,5556]",
      "dest": "identifier: sub [5553,5556]"
    },
    {
      "src": "identifier: account [14007,14014]",
      "dest": "identifier: account [14007,14014]"
    },
    {
      "src": "function_body [9455,9491]",
      "dest": "function_body [9455,9491]"
    },
    {
      "src": "address: address [11672,11679]",
      "dest": "address: address [11672,11679]"
    },
    {
      "src": "type_name [11725,11729]",
      "dest": "type_name [11725,11729]"
    },
    {
      "src": "public: public [12408,12414]",
      "dest": "public: public [12408,12414]"
    },
    {
      "src": "comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [13541,13800]",
      "dest": "comment: /** @dev Creates `amount` tokens and assigns them to `account`, increasing      * the total supply.      *      * Emits a {Transfer} event with `from` set to the zero address.      *      * Requirements      *      * - `to` cannot be the zero address.      */ [13541,13800]"
    },
    {
      "src": ",: , [11771,11772]",
      "dest": ",: , [11771,11772]"
    },
    {
      "src": "primitive_type [13261,13268]",
      "dest": "primitive_type [13261,13268]"
    },
    {
      "src": ",: , [7563,7564]",
      "dest": ",: , [7563,7564]"
    },
    {
      "src": "call_argument [13471,13477]",
      "dest": "call_argument [13471,13477]"
    },
    {
      "src": "parameter [14441,14456]",
      "dest": "parameter [14441,14456]"
    },
    {
      "src": "identifier: amount [15747,15753]",
      "dest": "identifier: amount [15747,15753]"
    },
    {
      "src": "identifier: value [21860,21865]",
      "dest": "identifier: value [21860,21865]"
    },
    {
      "src": "identifier: account [13828,13835]",
      "dest": "identifier: account [13828,13835]"
    },
    {
      "src": "pure: pure [6929,6933]",
      "dest": "pure: pure [6929,6933]"
    },
    {
      "src": "(: ( [23995,23996]",
      "dest": "(: ( [23995,23996]"
    },
    {
      "src": "return_type_definition [26865,26879]",
      "dest": "return_type_definition [26714,26728]"
    },
    {
      "src": "(: ( [26467,26468]",
      "dest": "(: ( [26355,26356]"
    },
    {
      "src": "indexed: indexed [24207,24214]",
      "dest": "indexed: indexed [24207,24214]"
    },
    {
      "src": ",: , [14740,14741]",
      "dest": ",: , [14740,14741]"
    },
    {
      "src": "call_argument [25959,25969]",
      "dest": "call_argument [25832,25840]"
    },
    {
      "src": "type_name [25364,25368]",
      "dest": "type_name [25364,25368]"
    },
    {
      "src": "function_body [21783,22024]",
      "dest": "function_body [21783,22024]"
    },
    {
      "src": "=: = [18409,18410]",
      "dest": "=: = [18409,18410]"
    },
    {
      "src": "function_body [24681,24726]",
      "dest": "function_body [24681,24726]"
    },
    {
      "src": "binary_expression [13168,13188]",
      "dest": "binary_expression [13168,13188]"
    },
    {
      "src": "}: } [24047,24048]",
      "dest": "}: } [24047,24048]"
    },
    {
      "src": "): ) [26733,26734]",
      "dest": "): ) [26582,26583]"
    },
    {
      "src": "): ) [23826,23827]",
      "dest": "): ) [23826,23827]"
    },
    {
      "src": "\": \" [13372,13373]",
      "dest": "\": \" [13372,13373]"
    },
    {
      "src": "identifier: b [5177,5178]",
      "dest": "identifier: b [5177,5178]"
    },
    {
      "src": "type_name [20812,20818]",
      "dest": "type_name [20812,20818]"
    },
    {
      "src": "returns: returns [17331,17338]",
      "dest": "returns: returns [17331,17338]"
    },
    {
      "src": "=: = [13444,13445]",
      "dest": "=: = [13444,13445]"
    },
    {
      "src": "\": \" [15885,15886]",
      "dest": "\": \" [15885,15886]"
    },
    {
      "src": ",: , [14621,14622]",
      "dest": ",: , [14621,14622]"
    },
    {
      "src": "call_argument [13372,13412]",
      "dest": "call_argument [13372,13412]"
    },
    {
      "src": "payable: payable [19973,19980]",
      "dest": "payable: payable [19973,19980]"
    },
    {
      "src": "(: ( [26266,26267]",
      "dest": "(: ( [26167,26168]"
    },
    {
      "src": "identifier: _redeemFactor [27448,27461]",
      "dest": "identifier: _redeemFactor [27177,27190]"
    },
    {
      "src": "visibility [21774,21782]",
      "dest": "visibility [21774,21782]"
    },
    {
      "src": "(: ( [21571,21572]",
      "dest": "(: ( [21571,21572]"
    },
    {
      "src": "primitive_type [25482,25486]",
      "dest": "primitive_type [25482,25486]"
    },
    {
      "src": "uint256: uint256 [8325,8332]",
      "dest": "uint256: uint256 [8325,8332]"
    },
    {
      "src": "identifier: transfer [555,563]",
      "dest": "identifier: transfer [555,563]"
    },
    {
      "src": "): ) [13310,13311]",
      "dest": "): ) [13310,13311]"
    },
    {
      "src": "address: address [2053,2060]",
      "dest": "address: address [2053,2060]"
    },
    {
      "src": "contract: contract [24052,24060]",
      "dest": "contract: contract [24052,24060]"
    },
    {
      "src": "(: ( [24853,24854]",
      "dest": "(: ( [24853,24854]"
    },
    {
      "src": "identifier: mul [26490,26493]",
      "dest": "identifier: mul [26378,26381]"
    },
    {
      "src": "type_name [22449,22454]",
      "dest": "type_name [22449,22454]"
    },
    {
      "src": "): ) [14081,14082]",
      "dest": "): ) [14081,14082]"
    },
    {
      "src": "(: ( [24242,24243]",
      "dest": "(: ( [24242,24243]"
    },
    {
      "src": "(: ( [24567,24568]",
      "dest": "(: ( [24567,24568]"
    },
    {
      "src": "identifier: transfer [20540,20548]",
      "dest": "identifier: transfer [20540,20548]"
    },
    {
      "src": "return: return [9465,9471]",
      "dest": "return: return [9465,9471]"
    },
    {
      "src": "(: ( [7615,7616]",
      "dest": "(: ( [7615,7616]"
    },
    {
      "src": "identifier: newAllowance [21513,21525]",
      "dest": "identifier: newAllowance [21513,21525]"
    },
    {
      "src": "type_name [16508,16514]",
      "dest": "type_name [16508,16514]"
    },
    {
      "src": ",: , [26097,26098]",
      "dest": ",: , [25998,25999]"
    },
    {
      "src": "{: { [17347,17348]",
      "dest": "{: { [17347,17348]"
    },
    {
      "src": "identifier: amount [11170,11176]",
      "dest": "identifier: amount [11170,11176]"
    },
    {
      "src": "identifier: sub [14698,14701]",
      "dest": "identifier: sub [14698,14701]"
    },
    {
      "src": "return: return [12579,12585]",
      "dest": "return: return [12579,12585]"
    },
    {
      "src": "primitive_type [25147,25154]",
      "dest": "primitive_type [25147,25154]"
    },
    {
      "src": "primitive_type [9897,9904]",
      "dest": "primitive_type [9897,9904]"
    },
    {
      "src": "identifier: token [21447,21452]",
      "dest": "identifier: token [21447,21452]"
    },
    {
      "src": "function_definition [20583,20785]",
      "dest": "function_definition [20583,20785]"
    },
    {
      "src": "]: ] [14588,14589]",
      "dest": "]: ] [14588,14589]"
    },
    {
      "src": "return: return [5163,5169]",
      "dest": "return: return [5163,5169]"
    },
    {
      "src": ".: . [24286,24287]",
      "dest": ".: . [24286,24287]"
    },
    {
      "src": "identifier: balanceOf [26784,26793]",
      "dest": "identifier: balanceOf [26633,26642]"
    },
    {
      "src": "type_name [10972,10979]",
      "dest": "type_name [10972,10979]"
    },
    {
      "src": "expression_statement [14493,14561]",
      "dest": "expression_statement [14493,14561]"
    },
    {
      "src": "type_alias [9157,9165]",
      "dest": "type_alias [9157,9165]"
    },
    {
      "src": "variable_declaration [5688,5697]",
      "dest": "variable_declaration [5688,5697]"
    },
    {
      "src": "function: function [25317,25325]",
      "dest": "function: function [25317,25325]"
    },
    {
      "src": "primitive_type [2037,2044]",
      "dest": "primitive_type [2037,2044]"
    },
    {
      "src": "(: ( [25332,25333]",
      "dest": "(: ( [25332,25333]"
    },
    {
      "src": "(: ( [25118,25119]",
      "dest": "(: ( [25118,25119]"
    },
    {
      "src": "visibility [9585,9591]",
      "dest": "visibility [9585,9591]"
    },
    {
      "src": "primitive_type [932,939]",
      "dest": "primitive_type [932,939]"
    },
    {
      "src": "call_argument [21867,21910]",
      "dest": "call_argument [21867,21910]"
    },
    {
      "src": "primitive_type [166,173]",
      "dest": "primitive_type [166,173]"
    },
    {
      "src": "member_expression [26087,26097]",
      "dest": "member_expression [25988,25998]"
    },
    {
      "src": "constructor_definition [25882,25977]",
      "dest": "constructor_definition [25755,25848]"
    },
    {
      "src": "member_expression [20732,20759]",
      "dest": "member_expression [20732,20759]"
    },
    {
      "src": "address: address [21454,21461]",
      "dest": "address: address [21454,21461]"
    },
    {
      "src": "}: } [7867,7868]",
      "dest": "}: } [7867,7868]"
    },
    {
      "src": "true [11239,11243]",
      "dest": "true [11239,11243]"
    },
    {
      "src": "string: string [16001,16007]",
      "dest": "string: string [16001,16007]"
    },
    {
      "src": "}: } [18654,18655]",
      "dest": "}: } [18654,18655]"
    },
    {
      "src": ",: , [11071,11072]",
      "dest": ",: , [11071,11072]"
    },
    {
      "src": "call_argument [18973,18980]",
      "dest": "call_argument [18973,18980]"
    },
    {
      "src": "state_mutability [4690,4694]",
      "dest": "state_mutability [4690,4694]"
    },
    {
      "src": "\": \" [6402,6403]",
      "dest": "\": \" [6402,6403]"
    },
    {
      "src": "using_directive [25449,25476]",
      "dest": "using_directive [25449,25476]"
    },
    {
      "src": "identifier: FEE_PRECISION [26543,26556]",
      "dest": "identifier: FEE_PRECISION [26431,26444]"
    },
    {
      "src": "call_expression [11152,11164]",
      "dest": "call_expression [11152,11164]"
    },
    {
      "src": "primitive_type [13891,13898]",
      "dest": "primitive_type [13891,13898]"
    },
    {
      "src": "(: ( [18064,18065]",
      "dest": "(: ( [18064,18065]"
    },
    {
      "src": ",: , [15385,15386]",
      "dest": ",: , [15385,15386]"
    },
    {
      "src": "{: { [24995,24996]",
      "dest": "{: { [24995,24996]"
    },
    {
      "src": "member_expression [12472,12510]",
      "dest": "member_expression [12472,12510]"
    },
    {
      "src": "identifier: decimals [16304,16312]",
      "dest": "identifier: decimals [16304,16312]"
    },
    {
      "src": "identifier: add [21568,21571]",
      "dest": "identifier: add [21568,21571]"
    },
    {
      "src": "type_name [15722,15729]",
      "dest": "type_name [15722,15729]"
    },
    {
      "src": "==: == [6362,6364]",
      "dest": "==: == [6362,6364]"
    },
    {
      "src": "identifier: data [3670,3674]",
      "dest": "identifier: data [3670,3674]"
    },
    {
      "src": "memory: memory [5586,5592]",
      "dest": "memory: memory [5586,5592]"
    },
    {
      "src": ",: , [15509,15510]",
      "dest": ",: , [15509,15510]"
    },
    {
      "src": "visibility [9213,9220]",
      "dest": "visibility [9213,9220]"
    },
    {
      "src": "identifier: a [6973,6974]",
      "dest": "identifier: a [6973,6974]"
    },
    {
      "src": "address: address [20035,20042]",
      "dest": "address: address [20035,20042]"
    },
    {
      "src": "member_expression [24283,24293]",
      "dest": "member_expression [24283,24293]"
    },
    {
      "src": "): ) [324,325]",
      "dest": "): ) [324,325]"
    },
    {
      "src": "state_mutability [6929,6933]",
      "dest": "state_mutability [6929,6933]"
    },
    {
      "src": "uint256: uint256 [20649,20656]",
      "dest": "uint256: uint256 [20649,20656]"
    },
    {
      "src": "primitive_type [16508,16514]",
      "dest": "primitive_type [16508,16514]"
    },
    {
      "src": ".: . [12506,12507]",
      "dest": ".: . [12506,12507]"
    },
    {
      "src": "string_literal [23440,23484]",
      "dest": "string_literal [23440,23484]"
    },
    {
      "src": "call_argument [23882,23895]",
      "dest": "call_argument [23882,23895]"
    },
    {
      "src": "): ) [24568,24569]",
      "dest": "): ) [24568,24569]"
    },
    {
      "src": "string_literal [21867,21910]",
      "dest": "string_literal [21867,21910]"
    },
    {
      "src": "function_body [3419,3453]",
      "dest": "function_body [3419,3453]"
    },
    {
      "src": "variable_declaration_statement [6321,6339]",
      "dest": "variable_declaration_statement [6321,6339]"
    },
    {
      "src": "type_name [7565,7571]",
      "dest": "type_name [7565,7571]"
    },
    {
      "src": "user_defined_type [25429,25442]",
      "dest": "user_defined_type [25429,25442]"
    },
    {
      "src": "): ) [26635,26636]",
      "dest": "): ) [26523,26524]"
    },
    {
      "src": "(: ( [26979,26980]",
      "dest": "(: ( [26841,26842]"
    },
    {
      "src": "public: public [24394,24400]",
      "dest": "public: public [24394,24400]"
    },
    {
      "src": ".: . [21983,21984]",
      "dest": ".: . [21983,21984]"
    },
    {
      "src": "call_expression [11741,11824]",
      "dest": "call_expression [11741,11824]"
    },
    {
      "src": "expression_statement [21307,21397]",
      "dest": "expression_statement [21307,21397]"
    },
    {
      "src": "}: } [18988,18989]",
      "dest": "}: } [18988,18989]"
    },
    {
      "src": "identifier: amount [1676,1682]",
      "dest": "identifier: amount [1676,1682]"
    },
    {
      "src": "member_expression [11773,11811]",
      "dest": "member_expression [11773,11811]"
    },
    {
      "src": "for: for [25465,25468]",
      "dest": "for: for [25465,25468]"
    },
    {
      "src": "solidity: solidity [7,15]",
      "dest": "solidity: solidity [7,15]"
    },
    {
      "src": "identifier: _msgData [3468,3476]",
      "dest": "identifier: _msgData [3468,3476]"
    },
    {
      "src": "function: function [25983,25991]",
      "dest": "function: function [25854,25862]"
    },
    {
      "src": "identifier: redeemFactor [27433,27445]",
      "dest": "identifier: redeemFactor [27162,27174]"
    },
    {
      "src": "member_expression [20184,20204]",
      "dest": "member_expression [20184,20204]"
    },
    {
      "src": "internal: internal [3286,3294]",
      "dest": "internal: internal [3286,3294]"
    },
    {
      "src": "identifier: ERC20Detailed [25920,25933]",
      "dest": "identifier: ERC20Detailed [25793,25806]"
    },
    {
      "src": "(: ( [9192,9193]",
      "dest": "(: ( [9192,9193]"
    },
    {
      "src": "identifier: _approve [12440,12448]",
      "dest": "identifier: _approve [12440,12448]"
    },
    {
      "src": "return_type_definition [1693,1707]",
      "dest": "return_type_definition [1693,1707]"
    },
    {
      "src": "<=: <= [27318,27320]",
      "dest": "<=: <= [27081,27083]"
    },
    {
      "src": "=: = [15463,15464]",
      "dest": "=: = [15463,15464]"
    },
    {
      "src": "returns: returns [9597,9604]",
      "dest": "returns: returns [9597,9604]"
    },
    {
      "src": "address: address [15722,15729]",
      "dest": "address: address [15722,15729]"
    },
    {
      "src": "identifier: owner [25119,25124]",
      "dest": "identifier: owner [25119,25124]"
    },
    {
      "src": "(: ( [26850,26851]",
      "dest": "(: ( [26699,26700]"
    },
    {
      "src": "variable_declaration_statement [23135,23203]",
      "dest": "variable_declaration_statement [23135,23203]"
    },
    {
      "src": "call_argument [26980,26984]",
      "dest": "call_argument [26893,26897]"
    },
    {
      "src": ".: . [23289,23290]",
      "dest": ".: . [23289,23290]"
    },
    {
      "src": "address: address [10107,10114]",
      "dest": "address: address [10107,10114]"
    },
    {
      "src": "(: ( [11064,11065]",
      "dest": "(: ( [11064,11065]"
    },
    {
      "src": "call_argument [5180,5212]",
      "dest": "call_argument [5180,5212]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-balanceOf}.      */ [9497,9544]",
      "dest": "comment: /**      * @dev See {IERC20-balanceOf}.      */ [9497,9544]"
    },
    {
      "src": "identifier: b [4739,4740]",
      "dest": "identifier: b [4739,4740]"
    },
    {
      "src": "): ) [18109,18110]",
      "dest": "): ) [18109,18110]"
    },
    {
      "src": ",: , [21217,21218]",
      "dest": ",: , [21217,21218]"
    },
    {
      "src": ",: , [13835,13836]",
      "dest": ",: , [13835,13836]"
    },
    {
      "src": "binary_expression [23279,23300]",
      "dest": "binary_expression [23279,23300]"
    },
    {
      "src": "call_argument [7709,7714]",
      "dest": "call_argument [7709,7714]"
    },
    {
      "src": "identifier: _totalSupply [9329,9341]",
      "dest": "identifier: _totalSupply [9329,9341]"
    },
    {
      "src": "parameter [972,979]",
      "dest": "parameter [972,979]"
    },
    {
      "src": "call_expression [23212,23264]",
      "dest": "call_expression [23212,23264]"
    },
    {
      "src": "parameter [15722,15737]",
      "dest": "parameter [15722,15737]"
    },
    {
      "src": "identifier: _owner [24502,24508]",
      "dest": "identifier: _owner [24502,24508]"
    },
    {
      "src": "}: } [26681,26682]",
      "dest": "}: } [26530,26531]"
    },
    {
      "src": "call_expression [11055,11091]",
      "dest": "call_expression [11055,11091]"
    },
    {
      "src": "identifier: accountHash [18397,18408]",
      "dest": "identifier: accountHash [18397,18408]"
    },
    {
      "src": "address: address [9246,9253]",
      "dest": "address: address [9246,9253]"
    },
    {
      "src": "return: return [11232,11238]",
      "dest": "return: return [11232,11238]"
    },
    {
      "src": "): ) [10122,10123]",
      "dest": "): ) [10122,10123]"
    },
    {
      "src": "type_name [317,324]",
      "dest": "type_name [317,324]"
    },
    {
      "src": "=: = [26241,26242]",
      "dest": "=: = [26142,26143]"
    },
    {
      "src": "identifier: IERC20 [15962,15968]",
      "dest": "identifier: IERC20 [15962,15968]"
    },
    {
      "src": "identifier: recipient [19981,19990]",
      "dest": "identifier: recipient [19981,19990]"
    },
    {
      "src": "comment: // Reserved storage space to allow for layout changes in the future. [23698,23766]",
      "dest": "comment: // Reserved storage space to allow for layout changes in the future. [23698,23766]"
    },
    {
      "src": "identifier: _ [24621,24622]",
      "dest": "identifier: _ [24621,24622]"
    },
    {
      "src": "inheritance_specifier [25429,25442]",
      "dest": "inheritance_specifier [25429,25442]"
    },
    {
      "src": "public: public [26853,26859]",
      "dest": "public: public [26702,26708]"
    },
    {
      "src": "contract_declaration [15936,17382]",
      "dest": "contract_declaration [15936,17382]"
    },
    {
      "src": "(: ( [10144,10145]",
      "dest": "(: ( [10144,10145]"
    },
    {
      "src": "): ) [13900,13901]",
      "dest": "): ) [13900,13901]"
    },
    {
      "src": "}: } [10491,10492]",
      "dest": "}: } [10491,10492]"
    },
    {
      "src": "return: return [18597,18603]",
      "dest": "return: return [18597,18603]"
    },
    {
      "src": "returns: returns [8361,8368]",
      "dest": "returns: returns [8361,8368]"
    },
    {
      "src": "type_name [10107,10114]",
      "dest": "type_name [10107,10114]"
    },
    {
      "src": "{: { [3111,3112]",
      "dest": "{: { [3111,3112]"
    },
    {
      "src": "{: { [10154,10155]",
      "dest": "{: { [10154,10155]"
    },
    {
      "src": "\": \" [23229,23230]",
      "dest": "\": \" [23229,23230]"
    },
    {
      "src": "identifier: account [9576,9583]",
      "dest": "identifier: account [9576,9583]"
    },
    {
      "src": "returns: returns [9920,9927]",
      "dest": "returns: returns [9920,9927]"
    },
    {
      "src": "identifier: value [20199,20204]",
      "dest": "identifier: value [20199,20204]"
    },
    {
      "src": "identifier: safeTransfer [26609,26621]",
      "dest": "identifier: safeTransfer [26497,26509]"
    },
    {
      "src": "call_argument [11170,11176]",
      "dest": "call_argument [11170,11176]"
    },
    {
      "src": "identifier: owner [10183,10188]",
      "dest": "identifier: owner [10183,10188]"
    },
    {
      "src": "address: address [20389,20396]",
      "dest": "address: address [20389,20396]"
    },
    {
      "src": "call_expression [15806,15925]",
      "dest": "call_expression [15806,15925]"
    },
    {
      "src": "call_expression [25119,25126]",
      "dest": "call_expression [25119,25126]"
    },
    {
      "src": "[: [ [23917,23918]",
      "dest": "[: [ [23917,23918]"
    },
    {
      "src": "array_access [15838,15872]",
      "dest": "array_access [15838,15872]"
    },
    {
      "src": "): ) [20180,20181]",
      "dest": "): ) [20180,20181]"
    },
    {
      "src": "): ) [21395,21396]",
      "dest": "): ) [21395,21396]"
    },
    {
      "src": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [332,541]",
      "dest": "comment: /**      * @dev Moves `amount` tokens from the caller's account to `recipient`.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * Emits a {Transfer} event.      */ [332,541]"
    },
    {
      "src": "type_cast_expression [27197,27217]",
      "dest": "type_cast_expression [26860,26873]"
    },
    {
      "src": "primitive_type [20166,20170]",
      "dest": "primitive_type [20166,20170]"
    },
    {
      "src": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [2359,2507]",
      "dest": "comment: /**      * @dev Emitted when the allowance of a `spender` for an `owner` is set by      * a call to {approve}. `value` is the new allowance.      */ [2359,2507]"
    },
    {
      "src": "string_literal [8406,8432]",
      "dest": "string_literal [8406,8432]"
    },
    {
      "src": "): ) [8345,8346]",
      "dest": "): ) [8345,8346]"
    },
    {
      "src": "): ) [20006,20007]",
      "dest": "): ) [20006,20007]"
    },
    {
      "src": "primitive_type [21471,21478]",
      "dest": "primitive_type [21471,21478]"
    },
    {
      "src": "returns: returns [963,970]",
      "dest": "returns: returns [963,970]"
    },
    {
      "src": "): ) [7623,7624]",
      "dest": "): ) [7623,7624]"
    },
    {
      "src": "function: function [8312,8320]",
      "dest": "function: function [8312,8320]"
    },
    {
      "src": "modifier_invocation [27152,27161]",
      "dest": "modifier_invocation [27026,27035]"
    },
    {
      "src": "parameter [8979,9005]",
      "dest": "parameter [8979,9005]"
    },
    {
      "src": "user_defined_type [21728,21734]",
      "dest": "user_defined_type [21728,21734]"
    },
    {
      "src": "}: } [6310,6311]",
      "dest": "}: } [6310,6311]"
    },
    {
      "src": "string [24599,24610]",
      "dest": "string [24599,24610]"
    },
    {
      "src": "uint256: uint256 [20843,20850]",
      "dest": "uint256: uint256 [20843,20850]"
    },
    {
      "src": "): ) [5605,5606]",
      "dest": "): ) [5605,5606]"
    },
    {
      "src": "identifier: keccak256 [24110,24119]",
      "dest": "identifier: keccak256 [24110,24119]"
    },
    {
      "src": "primitive_type [4704,4711]",
      "dest": "primitive_type [4704,4711]"
    },
    {
      "src": "identifier: _mint [13814,13819]",
      "dest": "identifier: _mint [13814,13819]"
    },
    {
      "src": "identifier: b [6976,6977]",
      "dest": "identifier: b [6976,6977]"
    },
    {
      "src": "internal: internal [3479,3487]",
      "dest": "internal: internal [3479,3487]"
    },
    {
      "src": "identifier: allowance [21822,21831]",
      "dest": "identifier: allowance [21822,21831]"
    },
    {
      "src": "type_name [583,590]",
      "dest": "type_name [583,590]"
    },
    {
      "src": "primitive_type [2575,2582]",
      "dest": "primitive_type [2575,2582]"
    },
    {
      "src": "visibility [17319,17325]",
      "dest": "visibility [17319,17325]"
    },
    {
      "src": "parameter [1702,1706]",
      "dest": "parameter [1702,1706]"
    },
    {
      "src": "identifier: msg [24283,24286]",
      "dest": "identifier: msg [24283,24286]"
    },
    {
      "src": "uint256: uint256 [20451,20458]",
      "dest": "uint256: uint256 [20451,20458]"
    },
    {
      "src": "(: ( [13268,13269]",
      "dest": "(: ( [13268,13269]"
    },
    {
      "src": "identifier: from [2312,2316]",
      "dest": "identifier: from [2312,2316]"
    },
    {
      "src": "parameter [12383,12406]",
      "dest": "parameter [12383,12406]"
    },
    {
      "src": "identifier: encodeWithSelector [20515,20533]",
      "dest": "identifier: encodeWithSelector [20515,20533]"
    },
    {
      "src": "identifier: _redeemFactor [27113,27126]",
      "dest": "identifier: _redeemFactor [27002,27015]"
    },
    {
      "src": "[: [ [12483,12484]",
      "dest": "[: [ [12483,12484]"
    },
    {
      "src": "(: ( [15834,15835]",
      "dest": "(: ( [15834,15835]"
    },
    {
      "src": "parameter [24854,24870]",
      "dest": "parameter [24854,24870]"
    },
    {
      "src": "call_argument [5665,5677]",
      "dest": "call_argument [5665,5677]"
    },
    {
      "src": "return_statement [26928,26940]",
      "dest": "return_statement [26777,26789]"
    },
    {
      "src": "(: ( [9605,9606]",
      "dest": "(: ( [9605,9606]"
    },
    {
      "src": "identifier: _transferOwnership [24264,24282]",
      "dest": "identifier: _transferOwnership [24264,24282]"
    },
    {
      "src": "yul_function_call [18566,18586]",
      "dest": "yul_function_call [18566,18586]"
    },
    {
      "src": "(: ( [8956,8957]",
      "dest": "(: ( [8956,8957]"
    },
    {
      "src": "if: if [6266,6268]",
      "dest": "if: if [6266,6268]"
    },
    {
      "src": "contract_declaration [24052,25253]",
      "dest": "contract_declaration [24052,25253]"
    },
    {
      "src": ".: . [21177,21178]",
      "dest": ".: . [21177,21178]"
    },
    {
      "src": "identifier: spender [21750,21757]",
      "dest": "identifier: spender [21750,21757]"
    },
    {
      "src": "identifier: value [21572,21577]",
      "dest": "identifier: value [21572,21577]"
    },
    {
      "src": "string [23440,23484]",
      "dest": "string [23440,23484]"
    },
    {
      "src": "type_name [20826,20833]",
      "dest": "type_name [20826,20833]"
    },
    {
      "src": "uint: uint [23820,23824]",
      "dest": "uint: uint [23820,23824]"
    },
    {
      "src": "address: address [1651,1658]",
      "dest": "address: address [1651,1658]"
    },
    {
      "src": "identifier: token [22442,22447]",
      "dest": "identifier: token [22442,22447]"
    },
    {
      "src": "array_access [14592,14610]",
      "dest": "array_access [14592,14610]"
    },
    {
      "src": "identifier: sub [11166,11169]",
      "dest": "identifier: sub [11166,11169]"
    },
    {
      "src": "returns: returns [308,315]",
      "dest": "returns: returns [308,315]"
    },
    {
      "src": "primitive_type [23432,23436]",
      "dest": "primitive_type [23432,23436]"
    },
    {
      "src": "primitive_type [8336,8343]",
      "dest": "primitive_type [8336,8343]"
    },
    {
      "src": ".: . [15872,15873]",
      "dest": ".: . [15872,15873]"
    },
    {
      "src": "identifier: a [7551,7552]",
      "dest": "identifier: a [7551,7552]"
    },
    {
      "src": "address: address [15226,15233]",
      "dest": "address: address [15226,15233]"
    },
    {
      "src": "primitive_type [2053,2060]",
      "dest": "primitive_type [2053,2060]"
    },
    {
      "src": "primitive_type [15243,15250]",
      "dest": "primitive_type [15243,15250]"
    },
    {
      "src": "call_argument [23610,23622]",
      "dest": "call_argument [23610,23622]"
    },
    {
      "src": "(: ( [23950,23951]",
      "dest": "(: ( [23950,23951]"
    },
    {
      "src": "identifier: sub [13360,13363]",
      "dest": "identifier: sub [13360,13363]"
    },
    {
      "src": "emit_statement [25093,25138]",
      "dest": "emit_statement [25093,25138]"
    },
    {
      "src": "string_literal [20213,20215]",
      "dest": "string_literal [20213,20215]"
    },
    {
      "src": "): ) [12460,12461]",
      "dest": "): ) [12460,12461]"
    },
    {
      "src": ",: , [21992,21993]",
      "dest": ",: , [21992,21993]"
    },
    {
      "src": "call_argument [23229,23263]",
      "dest": "call_argument [23229,23263]"
    },
    {
      "src": "return: return [10474,10480]",
      "dest": "return: return [10474,10480]"
    },
    {
      "src": "identifier: _balances [13423,13432]",
      "dest": "identifier: _balances [13423,13432]"
    },
    {
      "src": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [3837,4400]",
      "dest": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations with added overflow  * checks.  *  * Arithmetic operations in Solidity wrap on overflow. This can easily result  * in bugs, because programmers usually assume that an overflow raises an  * error, which is the standard behavior in high level programming languages.  * `SafeMath` restores this intuition by reverting the transaction when an  * operation overflows.  *  * Using this library instead of the unchecked operations eliminates an entire  * class of bugs, so it's recommended to use it always.  */ [3837,4400]"
    },
    {
      "src": "number_literal: 0 [23299,23300]",
      "dest": "number_literal: 0 [23299,23300]"
    },
    {
      "src": "true: true [10004,10008]",
      "dest": "true: true [10004,10008]"
    },
    {
      "src": "member_expression [20534,20557]",
      "dest": "member_expression [20534,20557]"
    },
    {
      "src": "identifier: initialized [23611,23622]",
      "dest": "identifier: initialized [23611,23622]"
    },
    {
      "src": "function: function [10073,10081]",
      "dest": "function: function [10073,10081]"
    },
    {
      "src": "}: } [9108,9109]",
      "dest": "}: } [9108,9109]"
    },
    {
      "src": "\": \" [4794,4795]",
      "dest": "\": \" [4794,4795]"
    },
    {
      "src": "): ) [21844,21845]",
      "dest": "): ) [21844,21845]"
    },
    {
      "src": "primitive_type [21793,21800]",
      "dest": "primitive_type [21793,21800]"
    },
    {
      "src": "identifier: toPayable [18873,18882]",
      "dest": "identifier: toPayable [18873,18882]"
    },
    {
      "src": "): ) [12568,12569]",
      "dest": "): ) [12568,12569]"
    },
    {
      "src": "call_argument [13502,13508]",
      "dest": "call_argument [13502,13508]"
    },
    {
      "src": "type_cast_expression [25025,25035]",
      "dest": "type_cast_expression [25025,25035]"
    },
    {
      "src": "identifier: require [9049,9056]",
      "dest": "identifier: require [9049,9056]"
    },
    {
      "src": "type_name [8370,8377]",
      "dest": "type_name [8370,8377]"
    },
    {
      "src": "primitive_type [5568,5575]",
      "dest": "primitive_type [5568,5575]"
    },
    {
      "src": "primitive_type [19992,19999]",
      "dest": "primitive_type [19992,19999]"
    },
    {
      "src": "view: view [3388,3392]",
      "dest": "view: view [3388,3392]"
    },
    {
      "src": "identifier: errorMessage [7579,7591]",
      "dest": "identifier: errorMessage [7579,7591]"
    },
    {
      "src": "call_argument [15495,15500]",
      "dest": "call_argument [15495,15500]"
    },
    {
      "src": "expression_statement [15278,15347]",
      "dest": "expression_statement [15278,15347]"
    },
    {
      "src": "type_cast_expression [15295,15305]",
      "dest": "type_cast_expression [15295,15305]"
    },
    {
      "src": "expression_statement [23684,23686]",
      "dest": "expression_statement [23684,23686]"
    },
    {
      "src": "type_name [16256,16262]",
      "dest": "type_name [16256,16262]"
    },
    {
      "src": "identifier: a [5992,5993]",
      "dest": "identifier: a [5992,5993]"
    },
    {
      "src": "{: { [8379,8380]",
      "dest": "{: { [8379,8380]"
    },
    {
      "src": "internal: internal [21486,21494]",
      "dest": "internal: internal [21486,21494]"
    },
    {
      "src": "returns: returns [9437,9444]",
      "dest": "returns: returns [9437,9444]"
    },
    {
      "src": "{: { [23302,23303]",
      "dest": "{: { [23302,23303]"
    },
    {
      "src": "identifier: sub [5095,5098]",
      "dest": "identifier: sub [5095,5098]"
    },
    {
      "src": "indexed: indexed [24176,24183]",
      "dest": "indexed: indexed [24176,24183]"
    },
    {
      "src": "\": \" [20098,20099]",
      "dest": "\": \" [20098,20099]"
    },
    {
      "src": "+: + [4737,4738]",
      "dest": "+: + [4737,4738]"
    },
    {
      "src": "(: ( [8399,8400]",
      "dest": "(: ( [8399,8400]"
    },
    {
      "src": ",: , [13188,13189]",
      "dest": ",: , [13188,13189]"
    },
    {
      "src": "{: { [23856,23857]",
      "dest": "{: { [23856,23857]"
    },
    {
      "src": "assignment_expression [16353,16369]",
      "dest": "assignment_expression [16353,16369]"
    },
    {
      "src": "identifier: IERC20 [36,42]",
      "dest": "identifier: IERC20 [36,42]"
    },
    {
      "src": "type_name [21471,21478]",
      "dest": "type_name [21471,21478]"
    },
    {
      "src": "variable_declaration [4723,4732]",
      "dest": "variable_declaration [4723,4732]"
    },
    {
      "src": "primitive_type [5984,5991]",
      "dest": "primitive_type [5984,5991]"
    },
    {
      "src": "identifier: _msgSender [12484,12494]",
      "dest": "identifier: _msgSender [12484,12494]"
    },
    {
      "src": ".: . [26090,26091]",
      "dest": ".: . [25991,25992]"
    },
    {
      "src": "bool: bool [23432,23436]",
      "dest": "bool: bool [23432,23436]"
    },
    {
      "src": "(: ( [23849,23850]",
      "dest": "(: ( [23849,23850]"
    },
    {
      "src": "identifier: OwnableProxy [24061,24073]",
      "dest": "identifier: OwnableProxy [24061,24073]"
    },
    {
      "src": "(: ( [26398,26399]",
      "dest": "(: ( [26256,26257]"
    },
    {
      "src": "=: = [21814,21815]",
      "dest": "=: = [21814,21815]"
    },
    {
      "src": "function: function [26716,26724]",
      "dest": "function: function [26565,26573]"
    },
    {
      "src": "\": \" [23894,23895]",
      "dest": "\": \" [23894,23895]"
    },
    {
      "src": "visibility [16008,16015]",
      "dest": "visibility [16008,16015]"
    },
    {
      "src": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [4424,4641]",
      "dest": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      * - Addition cannot overflow.      */ [4424,4641]"
    },
    {
      "src": "uint256: uint256 [7554,7561]",
      "dest": "uint256: uint256 [7554,7561]"
    },
    {
      "src": ",: , [8977,8978]",
      "dest": ",: , [8977,8978]"
    },
    {
      "src": ",: , [1666,1667]",
      "dest": ",: , [1666,1667]"
    },
    {
      "src": "(: ( [21154,21155]",
      "dest": "(: ( [21154,21155]"
    },
    {
      "src": "): ) [11090,11091]",
      "dest": "): ) [11090,11091]"
    },
    {
      "src": "}: } [24725,24726]",
      "dest": "}: } [24725,24726]"
    },
    {
      "src": "parameter [4659,4668]",
      "dest": "parameter [4659,4668]"
    },
    {
      "src": "identifier: recipient [13433,13442]",
      "dest": "identifier: recipient [13433,13442]"
    },
    {
      "src": "identifier: _allowances [15838,15849]",
      "dest": "identifier: _allowances [15838,15849]"
    },
    {
      "src": "): ) [11822,11823]",
      "dest": "): ) [11822,11823]"
    },
    {
      "src": "function_definition [24377,24543]",
      "dest": "function_definition [24377,24543]"
    },
    {
      "src": "return: return [9088,9094]",
      "dest": "return: return [9088,9094]"
    },
    {
      "src": ",: , [23227,23228]",
      "dest": ",: , [23227,23228]"
    },
    {
      "src": "identifier: this [3526,3530]",
      "dest": "identifier: this [3526,3530]"
    },
    {
      "src": "identifier: _burn [15774,15779]",
      "dest": "identifier: _burn [15774,15779]"
    },
    {
      "src": "(: ( [5656,5657]",
      "dest": "(: ( [5656,5657]"
    },
    {
      "src": "uint256: uint256 [5984,5991]",
      "dest": "uint256: uint256 [5984,5991]"
    },
    {
      "src": "): ) [11796,11797]",
      "dest": "): ) [11796,11797]"
    },
    {
      "src": ",: , [6974,6975]",
      "dest": ",: , [6974,6975]"
    },
    {
      "src": "address: address [2318,2325]",
      "dest": "address: address [2318,2325]"
    },
    {
      "src": "(: ( [21187,21188]",
      "dest": "(: ( [21187,21188]"
    },
    {
      "src": "binary_expression [13248,13271]",
      "dest": "binary_expression [13248,13271]"
    },
    {
      "src": "yul_evm_builtin [25209,25215]",
      "dest": "yul_evm_builtin [25209,25215]"
    },
    {
      "src": ",: , [20557,20558]",
      "dest": ",: , [20557,20558]"
    },
    {
      "src": "return_type_definition [9920,9934]",
      "dest": "return_type_definition [9920,9934]"
    },
    {
      "src": "type_name [26874,26878]",
      "dest": "type_name [26723,26727]"
    },
    {
      "src": "return_statement [3429,3447]",
      "dest": "return_statement [3429,3447]"
    },
    {
      "src": "uint256: uint256 [10145,10152]",
      "dest": "uint256: uint256 [10145,10152]"
    },
    {
      "src": "constant: constant [24088,24096]",
      "dest": "constant: constant [24088,24096]"
    },
    {
      "src": ",: , [13104,13105]",
      "dest": ",: , [13104,13105]"
    },
    {
      "src": "!=: != [15372,15374]",
      "dest": "!=: != [15372,15374]"
    },
    {
      "src": "function_body [15764,15932]",
      "dest": "function_body [15764,15932]"
    },
    {
      "src": "event_paramater [2550,2573]",
      "dest": "event_paramater [2550,2573]"
    },
    {
      "src": "call_expression [21147,21297]",
      "dest": "call_expression [21147,21297]"
    },
    {
      "src": "pure: pure [7602,7606]",
      "dest": "pure: pure [7602,7606]"
    },
    {
      "src": "identifier: IComptroller [25548,25560]",
      "dest": "identifier: IComptroller [25548,25560]"
    },
    {
      "src": "function_definition [7530,7868]",
      "dest": "function_definition [7530,7868]"
    },
    {
      "src": "(: ( [26542,26543]",
      "dest": "(: ( [26430,26431]"
    },
    {
      "src": "function: function [20791,20799]",
      "dest": "function: function [20791,20799]"
    },
    {
      "src": ".: . [11807,11808]",
      "dest": ".: . [11807,11808]"
    },
    {
      "src": "): ) [7591,7592]",
      "dest": "): ) [7591,7592]"
    },
    {
      "src": ",: , [15787,15788]",
      "dest": ",: , [15787,15788]"
    },
    {
      "src": "primitive_type [277,284]",
      "dest": "primitive_type [277,284]"
    },
    {
      "src": "primitive_type [18389,18396]",
      "dest": "primitive_type [18389,18396]"
    },
    {
      "src": "expression_statement [4750,4797]",
      "dest": "expression_statement [4750,4797]"
    },
    {
      "src": "(: ( [2036,2037]",
      "dest": "(: ( [2036,2037]"
    },
    {
      "src": "return_statement [26772,26809]",
      "dest": "return_statement [26621,26658]"
    },
    {
      "src": "function_definition [18045,18655]",
      "dest": "function_definition [18045,18655]"
    },
    {
      "src": "state_mutability [9016,9020]",
      "dest": "state_mutability [9016,9020]"
    },
    {
      "src": "primitive_type [11007,11014]",
      "dest": "primitive_type [11007,11014]"
    },
    {
      "src": "uint256: uint256 [8957,8964]",
      "dest": "uint256: uint256 [8957,8964]"
    },
    {
      "src": "assignment_expression [13322,13413]",
      "dest": "assignment_expression [13322,13413]"
    },
    {
      "src": "visibility [2088,2096]",
      "dest": "visibility [2088,2096]"
    },
    {
      "src": ".: . [21361,21362]",
      "dest": ".: . [21361,21362]"
    },
    {
      "src": "parameter [932,947]",
      "dest": "parameter [932,947]"
    },
    {
      "src": ",: , [25405,25406]",
      "dest": ",: , [25405,25406]"
    },
    {
      "src": "parameter [6909,6918]",
      "dest": "parameter [6909,6918]"
    },
    {
      "src": "parenthesized_expression [18604,18648]",
      "dest": "parenthesized_expression [18604,18648]"
    },
    {
      "src": "identifier: approve [10352,10359]",
      "dest": "identifier: approve [10352,10359]"
    },
    {
      "src": "function_body [23856,23927]",
      "dest": "function_body [23856,23927]"
    },
    {
      "src": "return_statement [4807,4816]",
      "dest": "return_statement [4807,4816]"
    },
    {
      "src": "{: { [13150,13151]",
      "dest": "{: { [13150,13151]"
    },
    {
      "src": "identifier: add [4655,4658]",
      "dest": "identifier: add [4655,4658]"
    },
    {
      "src": "function_definition [12339,12597]",
      "dest": "function_definition [12339,12597]"
    },
    {
      "src": "identifier: success [20234,20241]",
      "dest": "identifier: success [20234,20241]"
    },
    {
      "src": "external: external [1684,1692]",
      "dest": "external: external [1684,1692]"
    },
    {
      "src": "identifier: account [15730,15737]",
      "dest": "identifier: account [15730,15737]"
    },
    {
      "src": "string [27348,27379]",
      "dest": "string [27111,27142]"
    },
    {
      "src": "expression_statement [20027,20101]",
      "dest": "expression_statement [20027,20101]"
    },
    {
      "src": "type_name [9929,9933]",
      "dest": "type_name [9929,9933]"
    },
    {
      "src": "primitive_type [24440,24447]",
      "dest": "primitive_type [24440,24447]"
    },
    {
      "src": "identifier: b [8344,8345]",
      "dest": "identifier: b [8344,8345]"
    },
    {
      "src": "(: ( [21439,21440]",
      "dest": "(: ( [21439,21440]"
    },
    {
      "src": "{: { [24430,24431]",
      "dest": "{: { [24430,24431]"
    },
    {
      "src": "return: return [26928,26934]",
      "dest": "return: return [26777,26783]"
    },
    {
      "src": "address: address [15375,15382]",
      "dest": "address: address [15375,15382]"
    },
    {
      "src": "(: ( [18104,18105]",
      "dest": "(: ( [18104,18105]"
    },
    {
      "src": "\": \" [14658,14659]",
      "dest": "\": \" [14658,14659]"
    },
    {
      "src": "parameter [5557,5566]",
      "dest": "parameter [5557,5566]"
    },
    {
      "src": "type_name [13125,13132]",
      "dest": "type_name [13125,13132]"
    },
    {
      "src": "identifier: amount [11015,11021]",
      "dest": "identifier: amount [11015,11021]"
    },
    {
      "src": "return_statement [16533,16546]",
      "dest": "return_statement [16533,16546]"
    },
    {
      "src": "(: ( [21859,21860]",
      "dest": "(: ( [21859,21860]"
    },
    {
      "src": "inheritance_specifier [9129,9136]",
      "dest": "inheritance_specifier [9129,9136]"
    },
    {
      "src": "returns: returns [3493,3500]",
      "dest": "returns: returns [3493,3500]"
    },
    {
      "src": "call_argument [15286,15305]",
      "dest": "call_argument [15286,15305]"
    },
    {
      "src": ",: , [12381,12382]",
      "dest": ",: , [12381,12382]"
    },
    {
      "src": "visibility [9321,9328]",
      "dest": "visibility [9321,9328]"
    },
    {
      "src": "string [23031,23064]",
      "dest": "string [23031,23064]"
    },
    {
      "src": "[: [ [12497,12498]",
      "dest": "[: [ [12497,12498]"
    },
    {
      "src": "visibility [20664,20672]",
      "dest": "visibility [20664,20672]"
    },
    {
      "src": "string: string [7565,7571]",
      "dest": "string: string [7565,7571]"
    },
    {
      "src": "string_literal [14623,14659]",
      "dest": "string_literal [14623,14659]"
    },
    {
      "src": "call_argument [21670,21682]",
      "dest": "call_argument [21670,21682]"
    },
    {
      "src": "): ) [25136,25137]",
      "dest": "): ) [25136,25137]"
    },
    {
      "src": "return_type_definition [9597,9614]",
      "dest": "return_type_definition [9597,9614]"
    },
    {
      "src": "function: function [17299,17307]",
      "dest": "function: function [17299,17307]"
    },
    {
      "src": "identifier: balanceOf [9558,9567]",
      "dest": "identifier: balanceOf [9558,9567]"
    },
    {
      "src": "return_type_definition [24406,24429]",
      "dest": "return_type_definition [24406,24429]"
    },
    {
      "src": "=: = [24457,24458]",
      "dest": "=: = [24457,24458]"
    },
    {
      "src": "assembly_statement [25186,25245]",
      "dest": "assembly_statement [25186,25245]"
    },
    {
      "src": ".: . [20514,20515]",
      "dest": ".: . [20514,20515]"
    },
    {
      "src": "array_access [13342,13359]",
      "dest": "array_access [13342,13359]"
    },
    {
      "src": "expression_statement [15806,15926]",
      "dest": "expression_statement [15806,15926]"
    },
    {
      "src": "identifier: errorMessage [7716,7728]",
      "dest": "identifier: errorMessage [7716,7728]"
    },
    {
      "src": "(: ( [26989,26990]",
      "dest": "(: ( [26892,26893]"
    },
    {
      "src": "type_name [1651,1658]",
      "dest": "type_name [1651,1658]"
    },
    {
      "src": ",: , [26316,26317]",
      "dest": ",: , [26217,26218]"
    },
    {
      "src": "type_name [9257,9285]",
      "dest": "type_name [9257,9285]"
    },
    {
      "src": "returns: returns [5621,5628]",
      "dest": "returns: returns [5621,5628]"
    },
    {
      "src": "): ) [24870,24871]",
      "dest": "): ) [24870,24871]"
    },
    {
      "src": "}: } [25244,25245]",
      "dest": "}: } [25244,25245]"
    },
    {
      "src": "string_literal [24004,24017]",
      "dest": "string_literal [24004,24017]"
    },
    {
      "src": "uint256: uint256 [14458,14465]",
      "dest": "uint256: uint256 [14458,14465]"
    },
    {
      "src": "function: function [23802,23810]",
      "dest": "function: function [23802,23810]"
    },
    {
      "src": "member_expression [20511,20533]",
      "dest": "member_expression [20511,20533]"
    },
    {
      "src": "function: function [10950,10958]",
      "dest": "function: function [10950,10958]"
    },
    {
      "src": "): ) [23173,23174]",
      "dest": "): ) [23173,23174]"
    },
    {
      "src": "identifier: _transfer [11055,11064]",
      "dest": "identifier: _transfer [11055,11064]"
    },
    {
      "src": "state_variable_declaration [25524,25543]",
      "dest": "state_variable_declaration [25524,25543]"
    },
    {
      "src": "identifier: a [24033,24034]",
      "dest": "identifier: a [24033,24034]"
    },
    {
      "src": "type_name [16298,16303]",
      "dest": "type_name [16298,16303]"
    },
    {
      "src": "function: function [18045,18053]",
      "dest": "function: function [18045,18053]"
    },
    {
      "src": "type_name [2037,2044]",
      "dest": "type_name [2037,2044]"
    },
    {
      "src": "]: ] [15461,15462]",
      "dest": "]: ] [15461,15462]"
    },
    {
      "src": "state_mutability [18909,18913]",
      "dest": "state_mutability [18909,18913]"
    },
    {
      "src": "return_statement [10164,10199]",
      "dest": "return_statement [10164,10199]"
    },
    {
      "src": "state_mutability [17326,17330]",
      "dest": "state_mutability [17326,17330]"
    },
    {
      "src": "address: address [9878,9885]",
      "dest": "address: address [9878,9885]"
    },
    {
      "src": ",: , [12461,12462]",
      "dest": ",: , [12461,12462]"
    },
    {
      "src": "primitive_type [23820,23824]",
      "dest": "primitive_type [23820,23824]"
    },
    {
      "src": ",: , [20241,20242]",
      "dest": ",: , [20241,20242]"
    },
    {
      "src": "string: string [15975,15981]",
      "dest": "string: string [15975,15981]"
    },
    {
      "src": "visibility [11023,11029]",
      "dest": "visibility [11023,11029]"
    },
    {
      "src": "identifier: success [20171,20178]",
      "dest": "identifier: success [20171,20178]"
    },
    {
      "src": "boolean_literal [23554,23559]",
      "dest": "boolean_literal [23554,23559]"
    },
    {
      "src": "{: { [25975,25976]",
      "dest": "{: { [25846,25847]"
    },
    {
      "src": "}: } [18587,18588]",
      "dest": "}: } [18587,18588]"
    },
    {
      "src": "(: ( [14079,14080]",
      "dest": "(: ( [14079,14080]"
    },
    {
      "src": "{: { [24681,24682]",
      "dest": "{: { [24681,24682]"
    },
    {
      "src": ".: . [14697,14698]",
      "dest": ".: . [14697,14698]"
    },
    {
      "src": "identifier: value [21767,21772]",
      "dest": "identifier: value [21767,21772]"
    },
    {
      "src": "identifier: spender [21559,21566]",
      "dest": "identifier: spender [21559,21566]"
    },
    {
      "src": "if: if [26157,26159]",
      "dest": "if: if [26058,26060]"
    },
    {
      "src": "(: ( [5098,5099]",
      "dest": "(: ( [5098,5099]"
    },
    {
      "src": "variable_declaration [18389,18408]",
      "dest": "variable_declaration [18389,18408]"
    },
    {
      "src": "call_expression [7701,7729]",
      "dest": "call_expression [7701,7729]"
    },
    {
      "src": "identifier: msg [26622,26625]",
      "dest": "identifier: msg [26510,26513]"
    },
    {
      "src": "primitive_type [24675,24679]",
      "dest": "primitive_type [24675,24679]"
    },
    {
      "src": "identifier: symbol [16363,16369]",
      "dest": "identifier: symbol [16363,16369]"
    },
    {
      "src": "array_access [11132,11151]",
      "dest": "array_access [11132,11151]"
    },
    {
      "src": "): ) [27216,27217]",
      "dest": "): ) [26872,26873]"
    },
    {
      "src": "\": \" [8406,8407]",
      "dest": "\": \" [8406,8407]"
    },
    {
      "src": "boolean_literal [11841,11845]",
      "dest": "boolean_literal [11841,11845]"
    },
    {
      "src": "): ) [7007,7008]",
      "dest": "): ) [7007,7008]"
    },
    {
      "src": "identifier: _name [16331,16336]",
      "dest": "identifier: _name [16331,16336]"
    },
    {
      "src": "(: ( [23873,23874]",
      "dest": "(: ( [23873,23874]"
    },
    {
      "src": ",: , [21865,21866]",
      "dest": ",: , [21865,21866]"
    },
    {
      "src": "==: == [26167,26169]",
      "dest": "==: == [26068,26070]"
    },
    {
      "src": "address: address [21742,21749]",
      "dest": "address: address [21742,21749]"
    },
    {
      "src": "identifier: _pool [26038,26043]",
      "dest": "identifier: _pool [25939,25944]"
    },
    {
      "src": "return_type_definition [16695,16718]",
      "dest": "return_type_definition [16695,16718]"
    },
    {
      "src": "\": \" [6368,6369]",
      "dest": "\": \" [6368,6369]"
    },
    {
      "src": "variable_declaration [7739,7748]",
      "dest": "variable_declaration [7739,7748]"
    },
    {
      "src": "parameter [9878,9895]",
      "dest": "parameter [9878,9895]"
    },
    {
      "src": "binary_expression [18605,18628]",
      "dest": "binary_expression [18605,18628]"
    },
    {
      "src": "call_argument [21188,21201]",
      "dest": "call_argument [21188,21201]"
    },
    {
      "src": "): ) [12406,12407]",
      "dest": "): ) [12406,12407]"
    },
    {
      "src": "): ) [21910,21911]",
      "dest": "): ) [21910,21911]"
    },
    {
      "src": "type_name [9204,9211]",
      "dest": "type_name [9204,9211]"
    },
    {
      "src": "type_name [21505,21512]",
      "dest": "type_name [21505,21512]"
    },
    {
      "src": "[: [ [13331,13332]",
      "dest": "[: [ [13331,13332]"
    },
    {
      "src": "call_argument [11118,11130]",
      "dest": "call_argument [11118,11130]"
    },
    {
      "src": "call_expression [13160,13230]",
      "dest": "call_expression [13160,13230]"
    },
    {
      "src": "call_expression [22994,23065]",
      "dest": "call_expression [22994,23065]"
    },
    {
      "src": "state_mutability [9432,9436]",
      "dest": "state_mutability [9432,9436]"
    },
    {
      "src": ",: , [9063,9064]",
      "dest": ",: , [9063,9064]"
    },
    {
      "src": "variable_declaration_statement [5688,5706]",
      "dest": "variable_declaration_statement [5688,5706]"
    },
    {
      "src": "parameter [2106,2110]",
      "dest": "parameter [2106,2110]"
    },
    {
      "src": "call_expression [26243,26280]",
      "dest": "call_expression [26144,26181]"
    },
    {
      "src": "visibility [5607,5615]",
      "dest": "visibility [5607,5615]"
    },
    {
      "src": "member_expression [20732,20750]",
      "dest": "member_expression [20732,20750]"
    },
    {
      "src": "): ) [25973,25974]",
      "dest": "): ) [25844,25845]"
    },
    {
      "src": "call_argument [4766,4795]",
      "dest": "call_argument [4766,4795]"
    },
    {
      "src": "type_cast_expression [26794,26807]",
      "dest": "type_cast_expression [26643,26656]"
    },
    {
      "src": "parameter [6898,6907]",
      "dest": "parameter [6898,6907]"
    },
    {
      "src": "identifier: _pool [26274,26279]",
      "dest": "identifier: _pool [26175,26180]"
    },
    {
      "src": "identifier: dusd [26779,26783]",
      "dest": "identifier: dusd [26628,26632]"
    },
    {
      "src": "string_literal [13190,13229]",
      "dest": "string_literal [13190,13229]"
    },
    {
      "src": "identifier: OwnershipTransferred [25098,25118]",
      "dest": "identifier: OwnershipTransferred [25098,25118]"
    },
    {
      "src": "call_argument [10448,10455]",
      "dest": "call_argument [10448,10455]"
    },
    {
      "src": "type_name [6029,6036]",
      "dest": "type_name [6029,6036]"
    },
    {
      "src": "): ) [20776,20777]",
      "dest": "): ) [20776,20777]"
    },
    {
      "src": "number_literal: 0 [9062,9063]",
      "dest": "number_literal: 0 [9062,9063]"
    },
    {
      "src": "primitive_type [5688,5695]",
      "dest": "primitive_type [5688,5695]"
    },
    {
      "src": "parenthesized_expression [21171,21217]",
      "dest": "parenthesized_expression [21171,21217]"
    },
    {
      "src": "identifier: to [20645,20647]",
      "dest": "identifier: to [20645,20647]"
    },
    {
      "src": "true: true [11841,11845]",
      "dest": "true: true [11841,11845]"
    },
    {
      "src": ".: . [21950,21951]",
      "dest": ".: . [21950,21951]"
    },
    {
      "src": "}: } [9106,9107]",
      "dest": "}: } [9106,9107]"
    },
    {
      "src": "identifier: sender [11144,11150]",
      "dest": "identifier: sender [11144,11150]"
    },
    {
      "src": "function: function [11645,11653]",
      "dest": "function: function [11645,11653]"
    },
    {
      "src": "(: ( [9245,9246]",
      "dest": "(: ( [9245,9246]"
    },
    {
      "src": "identifier: token [20504,20509]",
      "dest": "identifier: token [20504,20509]"
    },
    {
      "src": "comment: // or when resetting it to zero. To increase and decrease it, use [20957,21022]",
      "dest": "comment: // or when resetting it to zero. To increase and decrease it, use [20957,21022]"
    },
    {
      "src": "visibility [18900,18908]",
      "dest": "visibility [18900,18908]"
    },
    {
      "src": "block_statement [23302,23496]",
      "dest": "block_statement [23302,23496]"
    },
    {
      "src": "(: ( [26573,26574]",
      "dest": "(: ( [26461,26462]"
    },
    {
      "src": "identifier: require [5649,5656]",
      "dest": "identifier: require [5649,5656]"
    },
    {
      "src": "member_expression [26441,26493]",
      "dest": "member_expression [26329,26381]"
    },
    {
      "src": "number_literal: 0 [6299,6300]",
      "dest": "number_literal: 0 [6299,6300]"
    },
    {
      "src": "expression_statement [26187,26204]",
      "dest": "expression_statement [26088,26105]"
    },
    {
      "src": "identifier: SafeMath [20345,20353]",
      "dest": "identifier: SafeMath [20345,20353]"
    },
    {
      "src": "): ) [20568,20569]",
      "dest": "): ) [20568,20569]"
    },
    {
      "src": "member_expression [21356,21378]",
      "dest": "member_expression [21356,21378]"
    },
    {
      "src": "): ) [6036,6037]",
      "dest": "): ) [6036,6037]"
    },
    {
      "src": "(: ( [13185,13186]",
      "dest": "(: ( [13185,13186]"
    },
    {
      "src": "call_argument [20709,20777]",
      "dest": "call_argument [20709,20777]"
    },
    {
      "src": "primitive_type [23002,23009]",
      "dest": "primitive_type [23002,23009]"
    },
    {
      "src": "parameter [21759,21772]",
      "dest": "parameter [21759,21772]"
    },
    {
      "src": "identifier: sender [13098,13104]",
      "dest": "identifier: sender [13098,13104]"
    },
    {
      "src": "identifier: newOwner [25128,25136]",
      "dest": "identifier: newOwner [25128,25136]"
    },
    {
      "src": "visibility [23783,23790]",
      "dest": "visibility [23783,23790]"
    },
    {
      "src": "primitive_type [6909,6916]",
      "dest": "primitive_type [6909,6916]"
    },
    {
      "src": "function_body [10415,10492]",
      "dest": "function_body [10415,10492]"
    },
    {
      "src": "type_cast_expression [18965,18981]",
      "dest": "type_cast_expression [18965,18981]"
    },
    {
      "src": "function_body [5639,5731]",
      "dest": "function_body [5639,5731]"
    },
    {
      "src": "\": \" [5211,5212]",
      "dest": "\": \" [5211,5212]"
    },
    {
      "src": "contract: contract [23506,23514]",
      "dest": "contract: contract [23506,23514]"
    },
    {
      "src": "identifier: transferFrom [2024,2036]",
      "dest": "identifier: transferFrom [2024,2036]"
    },
    {
      "src": ",: , [21668,21669]",
      "dest": ",: , [21668,21669]"
    },
    {
      "src": "type_name [19965,19980]",
      "dest": "type_name [19965,19980]"
    },
    {
      "src": "call_argument [20511,20569]",
      "dest": "call_argument [20511,20569]"
    },
    {
      "src": "member_expression [21528,21571]",
      "dest": "member_expression [21528,21571]"
    },
    {
      "src": "identifier: _owner [24422,24428]",
      "dest": "identifier: _owner [24422,24428]"
    },
    {
      "src": "return: return [3429,3435]",
      "dest": "return: return [3429,3435]"
    },
    {
      "src": "type_name [23771,23778]",
      "dest": "type_name [23771,23778]"
    },
    {
      "src": "}: } [3452,3453]",
      "dest": "}: } [3452,3453]"
    },
    {
      "src": "identifier: _amount [26005,26012]",
      "dest": "identifier: _amount [25876,25883]"
    },
    {
      "src": "[: [ [13351,13352]",
      "dest": "[: [ [13351,13352]"
    },
    {
      "src": "call_argument [21994,22001]",
      "dest": "call_argument [21994,22001]"
    },
    {
      "src": "call_argument [24918,24926]",
      "dest": "call_argument [24918,24926]"
    },
    {
      "src": "primitive_type [6029,6036]",
      "dest": "primitive_type [6029,6036]"
    },
    {
      "src": "expression_statement [13997,14049]",
      "dest": "expression_statement [13997,14049]"
    },
    {
      "src": "expression_statement [22994,23066]",
      "dest": "expression_statement [22994,23066]"
    },
    {
      "src": "primitive_type [9446,9453]",
      "dest": "primitive_type [9446,9453]"
    },
    {
      "src": "function_body [23592,23692]",
      "dest": "function_body [23592,23692]"
    },
    {
      "src": "}: } [24628,24629]",
      "dest": "}: } [24628,24629]"
    },
    {
      "src": "if: if [26890,26892]",
      "dest": "if: if [26739,26741]"
    },
    {
      "src": "): ) [21566,21567]",
      "dest": "): ) [21566,21567]"
    },
    {
      "src": "string [20068,20099]",
      "dest": "string [20068,20099]"
    },
    {
      "src": "primitive_type [8325,8332]",
      "dest": "primitive_type [8325,8332]"
    },
    {
      "src": "parenthesized_expression [23431,23437]",
      "dest": "parenthesized_expression [23431,23437]"
    },
    {
      "src": "uint256: uint256 [11007,11014]",
      "dest": "uint256: uint256 [11007,11014]"
    },
    {
      "src": "visibility [599,607]",
      "dest": "visibility [599,607]"
    },
    {
      "src": "identifier: amount [14466,14472]",
      "dest": "identifier: amount [14466,14472]"
    },
    {
      "src": "address: address [24854,24861]",
      "dest": "address: address [24854,24861]"
    },
    {
      "src": "call_expression [5649,5678]",
      "dest": "call_expression [5649,5678]"
    },
    {
      "src": "call_argument [8400,8401]",
      "dest": "call_argument [8400,8401]"
    },
    {
      "src": "assignment_expression [26234,26280]",
      "dest": "assignment_expression [26135,26181]"
    },
    {
      "src": "identifier: _decimals [16379,16388]",
      "dest": "identifier: _decimals [16379,16388]"
    },
    {
      "src": "binary_expression [7709,7714]",
      "dest": "binary_expression [7709,7714]"
    },
    {
      "src": "(: ( [23819,23820]",
      "dest": "(: ( [23819,23820]"
    },
    {
      "src": "}: } [20576,20577]",
      "dest": "}: } [20576,20577]"
    },
    {
      "src": "primitive_type [18065,18072]",
      "dest": "primitive_type [18065,18072]"
    },
    {
      "src": "identifier: token [23010,23015]",
      "dest": "identifier: token [23010,23015]"
    },
    {
      "src": "identifier: token [21970,21975]",
      "dest": "identifier: token [21970,21975]"
    },
    {
      "src": "variable_declaration_tuple [23135,23174]",
      "dest": "variable_declaration_tuple [23135,23174]"
    },
    {
      "src": "identifier: account [15815,15822]",
      "dest": "identifier: account [15815,15822]"
    },
    {
      "src": "function_body [24889,24934]",
      "dest": "function_body [24889,24934]"
    },
    {
      "src": "function_body [20673,20785]",
      "dest": "function_body [20673,20785]"
    },
    {
      "src": "identifier: account [14602,14609]",
      "dest": "identifier: account [14602,14609]"
    },
    {
      "src": "identifier: a [8400,8401]",
      "dest": "identifier: a [8400,8401]"
    },
    {
      "src": "identifier: spender [15364,15371]",
      "dest": "identifier: spender [15364,15371]"
    },
    {
      "src": "identifier: c [7747,7748]",
      "dest": "identifier: c [7747,7748]"
    },
    {
      "src": "function_definition [9402,9491]",
      "dest": "function_definition [9402,9491]"
    },
    {
      "src": "): ) [16717,16718]",
      "dest": "): ) [16717,16718]"
    },
    {
      "src": "): ) [9966,9967]",
      "dest": "): ) [9966,9967]"
    },
    {
      "src": "parameter [18065,18080]",
      "dest": "parameter [18065,18080]"
    },
    {
      "src": "primitive_type [5144,5151]",
      "dest": "primitive_type [5144,5151]"
    },
    {
      "src": "(: ( [21969,21970]",
      "dest": "(: ( [21969,21970]"
    },
    {
      "src": "identifier: c [6329,6330]",
      "dest": "identifier: c [6329,6330]"
    },
    {
      "src": "): ) [23590,23591]",
      "dest": "): ) [23590,23591]"
    },
    {
      "src": ",: , [21469,21470]",
      "dest": ",: , [21469,21470]"
    },
    {
      "src": "type_name [8979,8985]",
      "dest": "type_name [8979,8985]"
    },
    {
      "src": "call_argument [11812,11822]",
      "dest": "call_argument [11812,11822]"
    },
    {
      "src": "\": \" [8431,8432]",
      "dest": "\": \" [8431,8432]"
    },
    {
      "src": "public: public [16314,16320]",
      "dest": "public: public [16314,16320]"
    },
    {
      "src": "identifier: b [7709,7710]",
      "dest": "identifier: b [7709,7710]"
    },
    {
      "src": "string [25959,25969]",
      "dest": "string [25832,25840]"
    },
    {
      "src": "!=: != [13175,13177]",
      "dest": "!=: != [13175,13177]"
    },
    {
      "src": ".: . [20750,20751]",
      "dest": ".: . [20750,20751]"
    },
    {
      "src": "expression_statement [9945,9988]",
      "dest": "expression_statement [9945,9988]"
    },
    {
      "src": "identifier: spender [12463,12470]",
      "dest": "identifier: spender [12463,12470]"
    },
    {
      "src": "type_cast_expression [23002,23016]",
      "dest": "type_cast_expression [23002,23016]"
    },
    {
      "src": "function_body [12430,12597]",
      "dest": "function_body [12430,12597]"
    },
    {
      "src": "call_expression [21528,21578]",
      "dest": "call_expression [21528,21578]"
    },
    {
      "src": ".: . [13466,13467]",
      "dest": ".: . [13466,13467]"
    },
    {
      "src": "identifier: newAllowance [21670,21682]",
      "dest": "identifier: newAllowance [21670,21682]"
    },
    {
      "src": "string_literal [20243,20303]",
      "dest": "string_literal [20243,20303]"
    },
    {
      "src": "(: ( [23009,23010]",
      "dest": "(: ( [23009,23010]"
    },
    {
      "src": "address: address [14512,14519]",
      "dest": "address: address [14512,14519]"
    },
    {
      "src": "(: ( [13979,13980]",
      "dest": "(: ( [13979,13980]"
    },
    {
      "src": "call_argument [14733,14740]",
      "dest": "call_argument [14733,14740]"
    },
    {
      "src": "identifier: require [13240,13247]",
      "dest": "identifier: require [13240,13247]"
    },
    {
      "src": "}: } [16405,16406]",
      "dest": "}: } [16405,16406]"
    },
    {
      "src": "comment: // solhint-disable-next-line avoid-low-level-calls [23076,23126]",
      "dest": "comment: // solhint-disable-next-line avoid-low-level-calls [23076,23126]"
    },
    {
      "src": "call_argument [14084,14091]",
      "dest": "call_argument [14084,14091]"
    },
    {
      "src": ",: , [15224,15225]",
      "dest": ",: , [15224,15225]"
    },
    {
      "src": "visibility [24394,24400]",
      "dest": "visibility [24394,24400]"
    },
    {
      "src": "=: = [26439,26440]",
      "dest": "=: = [26327,26328]"
    },
    {
      "src": "primitive_type [9030,9037]",
      "dest": "primitive_type [9030,9037]"
    },
    {
      "src": "primitive_type [9246,9253]",
      "dest": "primitive_type [9246,9253]"
    },
    {
      "src": "visibility [11709,11715]",
      "dest": "visibility [11709,11715]"
    },
    {
      "src": "assembly_statement [24479,24537]",
      "dest": "assembly_statement [24479,24537]"
    },
    {
      "src": "number_literal: 0 [7713,7714]",
      "dest": "number_literal: 0 [7713,7714]"
    },
    {
      "src": "parameter [26756,26760]",
      "dest": "parameter [26605,26609]"
    },
    {
      "src": "internal: internal [20858,20866]",
      "dest": "internal: internal [20858,20866]"
    },
    {
      "src": "visibility [24986,24994]",
      "dest": "visibility [24986,24994]"
    },
    {
      "src": ",: , [2051,2052]",
      "dest": ",: , [2051,2052]"
    },
    {
      "src": ".: . [24712,24713]",
      "dest": ".: . [24712,24713]"
    },
    {
      "src": "public: public [16487,16493]",
      "dest": "public: public [16487,16493]"
    },
    {
      "src": "primitive_type [4723,4730]",
      "dest": "primitive_type [4723,4730]"
    },
    {
      "src": "comment: // solhint-disable-next-line max-line-length [22941,22985]",
      "dest": "comment: // solhint-disable-next-line max-line-length [22941,22985]"
    },
    {
      "src": "call_expression [26966,27004]",
      "dest": "call_expression [26815,26898]"
    },
    {
      "src": "type_name [17340,17345]",
      "dest": "type_name [17340,17345]"
    },
    {
      "src": "): ) [24293,24294]",
      "dest": "): ) [24293,24294]"
    },
    {
      "src": ",: , [4668,4669]",
      "dest": ",: , [4668,4669]"
    },
    {
      "src": "call_argument [26494,26506]",
      "dest": "call_argument [26382,26394]"
    },
    {
      "src": "}: } [26814,26815]",
      "dest": "}: } [26663,26664]"
    },
    {
      "src": "parameter [10377,10391]",
      "dest": "parameter [10377,10391]"
    },
    {
      "src": "address: address [25025,25032]",
      "dest": "address: address [25025,25032]"
    },
    {
      "src": "call_expression [27283,27389]",
      "dest": "call_expression [27046,27152]"
    },
    {
      "src": "primitive_type [3502,3507]",
      "dest": "primitive_type [3502,3507]"
    },
    {
      "src": "modifier_invocation [24879,24888]",
      "dest": "modifier_invocation [24879,24888]"
    },
    {
      "src": "(: ( [11109,11110]",
      "dest": "(: ( [11109,11110]"
    },
    {
      "src": "identifier: Approval [2518,2526]",
      "dest": "identifier: Approval [2518,2526]"
    },
    {
      "src": "{: { [3516,3517]",
      "dest": "{: { [3516,3517]"
    },
    {
      "src": "member_expression [21970,21992]",
      "dest": "member_expression [21970,21992]"
    },
    {
      "src": "identifier: account [14084,14091]",
      "dest": "identifier: account [14084,14091]"
    },
    {
      "src": "): ) [11220,11221]",
      "dest": "): ) [11220,11221]"
    },
    {
      "src": "identifier: IComptroller [25265,25277]",
      "dest": "identifier: IComptroller [25265,25277]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [5226,5539]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      * - Subtraction cannot overflow.      *      * _Available since v2.4.0._      */ [5226,5539]"
    },
    {
      "src": "uint256: uint256 [5688,5695]",
      "dest": "uint256: uint256 [5688,5695]"
    },
    {
      "src": "function_definition [10343,10492]",
      "dest": "function_definition [10343,10492]"
    },
    {
      "src": "identifier: sender [2045,2051]",
      "dest": "identifier: sender [2045,2051]"
    },
    {
      "src": "(: ( [25999,26000]",
      "dest": "(: ( [25870,25871]"
    },
    {
      "src": "(: ( [19964,19965]",
      "dest": "(: ( [19964,19965]"
    },
    {
      "src": "parameter [8325,8334]",
      "dest": "parameter [8325,8334]"
    },
    {
      "src": "}: } [23691,23692]",
      "dest": "}: } [23691,23692]"
    },
    {
      "src": "==: == [6272,6274]",
      "dest": "==: == [6272,6274]"
    },
    {
      "src": "binary_expression [23996,24002]",
      "dest": "binary_expression [23996,24002]"
    },
    {
      "src": "function_body [9615,9657]",
      "dest": "function_body [9615,9657]"
    },
    {
      "src": ",: , [11005,11006]",
      "dest": ",: , [11005,11006]"
    },
    {
      "src": "(: ( [15779,15780]",
      "dest": "(: ( [15779,15780]"
    },
    {
      "src": "(: ( [26793,26794]",
      "dest": "(: ( [26642,26643]"
    },
    {
      "src": "\": \" [25968,25969]",
      "dest": "\": \" [25839,25840]"
    },
    {
      "src": "type_name [24854,24861]",
      "dest": "type_name [24854,24861]"
    },
    {
      "src": "!: ! [23610,23611]",
      "dest": "!: ! [23610,23611]"
    },
    {
      "src": "primitive_type [15722,15729]",
      "dest": "primitive_type [15722,15729]"
    },
    {
      "src": "{: { [26422,26423]",
      "dest": "{: { [26280,26281]"
    },
    {
      "src": "call_expression [15356,15424]",
      "dest": "call_expression [15356,15424]"
    },
    {
      "src": "parameter [16508,16521]",
      "dest": "parameter [16508,16521]"
    },
    {
      "src": "call_argument [20043,20047]",
      "dest": "call_argument [20043,20047]"
    },
    {
      "src": "identifier: require [24580,24587]",
      "dest": "identifier: require [24580,24587]"
    },
    {
      "src": "): ) [20569,20570]",
      "dest": "): ) [20569,20570]"
    },
    {
      "src": "string [11178,11220]",
      "dest": "string [11178,11220]"
    },
    {
      "src": "\": \" [24120,24121]",
      "dest": "\": \" [24120,24121]"
    },
    {
      "src": "): ) [947,948]",
      "dest": "): ) [947,948]"
    },
    {
      "src": "\": \" [24004,24005]",
      "dest": "\": \" [24004,24005]"
    },
    {
      "src": "binary_expression [7751,7756]",
      "dest": "binary_expression [7751,7756]"
    },
    {
      "src": "): ) [23028,23029]",
      "dest": "): ) [23028,23029]"
    },
    {
      "src": "yul_path [18578,18585]",
      "dest": "yul_path [18578,18585]"
    },
    {
      "src": "state_mutability [8356,8360]",
      "dest": "state_mutability [8356,8360]"
    },
    {
      "src": ",: , [8966,8967]",
      "dest": ",: , [8966,8967]"
    },
    {
      "src": "uint256: uint256 [9277,9284]",
      "dest": "uint256: uint256 [9277,9284]"
    },
    {
      "src": "call_expression [13963,13987]",
      "dest": "call_expression [13963,13987]"
    },
    {
      "src": "identifier: _pool [26161,26166]",
      "dest": "identifier: _pool [26062,26067]"
    },
    {
      "src": "boolean_literal [10481,10485]",
      "dest": "boolean_literal [10481,10485]"
    },
    {
      "src": "identifier: codehash [18605,18613]",
      "dest": "identifier: codehash [18605,18613]"
    },
    {
      "src": "identifier: amount [13845,13851]",
      "dest": "identifier: amount [13845,13851]"
    },
    {
      "src": "identifier: spender [21661,21668]",
      "dest": "identifier: spender [21661,21668]"
    },
    {
      "src": "identifier: token [20819,20824]",
      "dest": "identifier: token [20819,20824]"
    },
    {
      "src": ",: , [21331,21332]",
      "dest": ",: , [21331,21332]"
    },
    {
      "src": "bytes32: bytes32 [18389,18396]",
      "dest": "bytes32: bytes32 [18389,18396]"
    },
    {
      "src": "event_paramater [2296,2316]",
      "dest": "event_paramater [2296,2316]"
    },
    {
      "src": "identifier: a [4763,4764]",
      "dest": "identifier: a [4763,4764]"
    },
    {
      "src": "identifier: amount [11084,11090]",
      "dest": "identifier: amount [11084,11090]"
    },
    {
      "src": "return_type_definition [9021,9038]",
      "dest": "return_type_definition [9021,9038]"
    },
    {
      "src": "=: = [26144,26145]",
      "dest": "=: = [26045,26046]"
    },
    {
      "src": "(: ( [3283,3284]",
      "dest": "(: ( [3283,3284]"
    },
    {
      "src": "assignment_expression [14670,14709]",
      "dest": "assignment_expression [14670,14709]"
    },
    {
      "src": "identifier: Address [17460,17467]",
      "dest": "identifier: Address [17460,17467]"
    },
    {
      "src": "member_expression [26243,26273]",
      "dest": "member_expression [26144,26174]"
    },
    {
      "src": "(: ( [15210,15211]",
      "dest": "(: ( [15210,15211]"
    },
    {
      "src": "expression_statement [21588,21685]",
      "dest": "expression_statement [21588,21685]"
    },
    {
      "src": "function_definition [24827,24934]",
      "dest": "function_definition [24827,24934]"
    },
    {
      "src": "\": \" [27378,27379]",
      "dest": "\": \" [27141,27142]"
    },
    {
      "src": ",: , [22001,22002]",
      "dest": ",: , [22001,22002]"
    },
    {
      "src": "string_literal [23031,23064]",
      "dest": "string_literal [23031,23064]"
    },
    {
      "src": "emit: emit [14058,14062]",
      "dest": "emit: emit [14058,14062]"
    },
    {
      "src": "uint256: uint256 [20358,20365]",
      "dest": "uint256: uint256 [20358,20365]"
    },
    {
      "src": "identifier: a [6270,6271]",
      "dest": "identifier: a [6270,6271]"
    },
    {
      "src": ".: . [23411,23412]",
      "dest": ".: . [23411,23412]"
    },
    {
      "src": "type_name [10360,10367]",
      "dest": "type_name [10360,10367]"
    },
    {
      "src": "identifier: b [6003,6004]",
      "dest": "identifier: b [6003,6004]"
    },
    {
      "src": "identifier: encodeWithSelector [21337,21355]",
      "dest": "identifier: encodeWithSelector [21337,21355]"
    },
    {
      "src": "returns: returns [18096,18103]",
      "dest": "returns: returns [18096,18103]"
    },
    {
      "src": ",: , [23148,23149]",
      "dest": ",: , [23148,23149]"
    },
    {
      "src": "uint: uint [25584,25588]",
      "dest": "uint: uint [25584,25588]"
    },
    {
      "src": "(: ( [24703,24704]",
      "dest": "(: ( [24703,24704]"
    },
    {
      "src": "type_name [5688,5695]",
      "dest": "type_name [5688,5695]"
    },
    {
      "src": "): ) [2086,2087]",
      "dest": "): ) [2086,2087]"
    },
    {
      "src": "identifier: transferFrom [10959,10971]",
      "dest": "identifier: transferFrom [10959,10971]"
    },
    {
      "src": "return_statement [11232,11244]",
      "dest": "return_statement [11232,11244]"
    },
    {
      "src": "true [23670,23674]",
      "dest": "true [23670,23674]"
    },
    {
      "src": "number_literal: 0 [26146,26147]",
      "dest": "number_literal: 0 [26047,26048]"
    },
    {
      "src": "visibility [20466,20474]",
      "dest": "visibility [20466,20474]"
    },
    {
      "src": "array_access [13322,13339]",
      "dest": "array_access [13322,13339]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-totalSupply}.      */ [9348,9397]",
      "dest": "comment: /**      * @dev See {IERC20-totalSupply}.      */ [9348,9397]"
    },
    {
      "src": "type_cast_expression [14072,14082]",
      "dest": "type_cast_expression [14072,14082]"
    },
    {
      "src": "contract_body [23529,24050]",
      "dest": "contract_body [23529,24050]"
    },
    {
      "src": "(: ( [5173,5174]",
      "dest": "(: ( [5173,5174]"
    },
    {
      "src": "identifier: msg [3436,3439]",
      "dest": "identifier: msg [3436,3439]"
    },
    {
      "src": "call_argument [5177,5178]",
      "dest": "call_argument [5177,5178]"
    },
    {
      "src": "call_argument [6973,6974]",
      "dest": "call_argument [6973,6974]"
    },
    {
      "src": "visibility [16035,16042]",
      "dest": "visibility [16035,16042]"
    },
    {
      "src": ".: . [21567,21568]",
      "dest": ".: . [21567,21568]"
    },
    {
      "src": "view: view [26742,26746]",
      "dest": "view: view [26591,26595]"
    },
    {
      "src": "primitive_type [11725,11729]",
      "dest": "primitive_type [11725,11729]"
    },
    {
      "src": "internal: internal [14474,14482]",
      "dest": "internal: internal [14474,14482]"
    },
    {
      "src": "function_body [9039,9107]",
      "dest": "function_body [9039,9107]"
    },
    {
      "src": ",: , [15883,15884]",
      "dest": ",: , [15883,15884]"
    },
    {
      "src": "\": \" [12566,12567]",
      "dest": "\": \" [12566,12567]"
    },
    {
      "src": "identifier: _approve [11741,11749]",
      "dest": "identifier: _approve [11741,11749]"
    },
    {
      "src": "(: ( [24917,24918]",
      "dest": "(: ( [24917,24918]"
    },
    {
      "src": "primitive_type [15739,15746]",
      "dest": "primitive_type [15739,15746]"
    },
    {
      "src": "{: { [20867,20868]",
      "dest": "{: { [20867,20868]"
    },
    {
      "src": "identifier: amount [9905,9911]",
      "dest": "identifier: amount [9905,9911]"
    },
    {
      "src": "): ) [5677,5678]",
      "dest": "): ) [5677,5678]"
    },
    {
      "src": "comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [10211,10338]",
      "dest": "comment: /**      * @dev See {IERC20-approve}.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [10211,10338]"
    },
    {
      "src": "array_access [13997,14015]",
      "dest": "array_access [13997,14015]"
    },
    {
      "src": "): ) [9613,9614]",
      "dest": "): ) [9613,9614]"
    },
    {
      "src": "): ) [26171,26172]",
      "dest": "): ) [26072,26073]"
    },
    {
      "src": "): ) [16485,16486]",
      "dest": "): ) [16485,16486]"
    },
    {
      "src": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [6186,6257]",
      "dest": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [6186,6257]"
    },
    {
      "src": "identifier: newOwner [24215,24223]",
      "dest": "identifier: newOwner [24215,24223]"
    },
    {
      "src": "primitive_type [25364,25368]",
      "dest": "primitive_type [25364,25368]"
    },
    {
      "src": "{: { [16523,16524]",
      "dest": "{: { [16523,16524]"
    },
    {
      "src": ".: . [21533,21534]",
      "dest": ".: . [21533,21534]"
    },
    {
      "src": "string: string [16276,16282]",
      "dest": "string: string [16276,16282]"
    },
    {
      "src": "(: ( [12448,12449]",
      "dest": "(: ( [12448,12449]"
    },
    {
      "src": ".: . [26783,26784]",
      "dest": ".: . [26632,26633]"
    },
    {
      "src": "(: ( [9965,9966]",
      "dest": "(: ( [9965,9966]"
    },
    {
      "src": "): ) [9285,9286]",
      "dest": "): ) [9285,9286]"
    },
    {
      "src": "address: address [917,924]",
      "dest": "address: address [917,924]"
    },
    {
      "src": "array_access [23913,23920]",
      "dest": "array_access [23913,23920]"
    },
    {
      "src": "identifier: div [7539,7542]",
      "dest": "identifier: div [7539,7542]"
    },
    {
      "src": "address: address [13090,13097]",
      "dest": "address: address [13090,13097]"
    },
    {
      "src": "uint256: uint256 [15243,15250]",
      "dest": "uint256: uint256 [15243,15250]"
    },
    {
      "src": ",: , [5577,5578]",
      "dest": ",: , [5577,5578]"
    },
    {
      "src": "function_definition [27046,27468]",
      "dest": "function_definition [26972,27197]"
    },
    {
      "src": "identifier: abi [20511,20514]",
      "dest": "identifier: abi [20511,20514]"
    },
    {
      "src": "string [25934,25957]",
      "dest": "string [25807,25830]"
    },
    {
      "src": "parameter [22449,22466]",
      "dest": "parameter [22449,22466]"
    },
    {
      "src": "function_body [24430,24543]",
      "dest": "function_body [24430,24543]"
    },
    {
      "src": "type_name [13820,13827]",
      "dest": "type_name [13820,13827]"
    },
    {
      "src": "string_literal [24599,24610]",
      "dest": "string_literal [24599,24610]"
    },
    {
      "src": "payable: payable [3410,3417]",
      "dest": "payable: payable [3410,3417]"
    },
    {
      "src": "variable_declaration_statement [26432,26559]",
      "dest": "variable_declaration_statement [26320,26447]"
    },
    {
      "src": "): ) [15923,15924]",
      "dest": "): ) [15923,15924]"
    },
    {
      "src": "boolean_literal [23670,23674]",
      "dest": "boolean_literal [23670,23674]"
    },
    {
      "src": "mapping: mapping [9237,9244]",
      "dest": "mapping: mapping [9237,9244]"
    },
    {
      "src": "\": \" [13190,13191]",
      "dest": "\": \" [13190,13191]"
    },
    {
      "src": "identifier: a [6906,6907]",
      "dest": "identifier: a [6906,6907]"
    },
    {
      "src": "event_paramater [2318,2336]",
      "dest": "event_paramater [2318,2336]"
    },
    {
      "src": "identifier: allowance [907,916]",
      "dest": "identifier: allowance [907,916]"
    },
    {
      "src": "true [10481,10485]",
      "dest": "true [10481,10485]"
    },
    {
      "src": "=: = [13340,13341]",
      "dest": "=: = [13340,13341]"
    },
    {
      "src": "}: } [24049,24050]",
      "dest": "}: } [24049,24050]"
    },
    {
      "src": "external: external [25303,25311]",
      "dest": "external: external [25303,25311]"
    },
    {
      "src": "[: [ [14006,14007]",
      "dest": "[: [ [14006,14007]"
    },
    {
      "src": "string [20243,20303]",
      "dest": "string [20243,20303]"
    },
    {
      "src": "binary_expression [20035,20066]",
      "dest": "binary_expression [20035,20066]"
    },
    {
      "src": "public: public [10124,10130]",
      "dest": "public: public [10124,10130]"
    },
    {
      "src": "parameter [3402,3417]",
      "dest": "parameter [3402,3417]"
    },
    {
      "src": "primitive_type [24199,24206]",
      "dest": "primitive_type [24199,24206]"
    },
    {
      "src": "call_expression [15838,15924]",
      "dest": "call_expression [15838,15924]"
    },
    {
      "src": "uint256: uint256 [5557,5564]",
      "dest": "uint256: uint256 [5557,5564]"
    },
    {
      "src": "(: ( [26160,26161]",
      "dest": "(: ( [26061,26062]"
    },
    {
      "src": "\": \" [11178,11179]",
      "dest": "\": \" [11178,11179]"
    },
    {
      "src": ".: . [21336,21337]",
      "dest": ".: . [21336,21337]"
    },
    {
      "src": "(: ( [11724,11725]",
      "dest": "(: ( [11724,11725]"
    },
    {
      "src": ".: . [26489,26490]",
      "dest": ".: . [26377,26378]"
    },
    {
      "src": "primitive_type [18957,18964]",
      "dest": "primitive_type [18957,18964]"
    },
    {
      "src": "): ) [20047,20048]",
      "dest": "): ) [20047,20048]"
    },
    {
      "src": "identifier: _msgSender [11118,11128]",
      "dest": "identifier: _msgSender [11118,11128]"
    },
    {
      "src": "): ) [9453,9454]",
      "dest": "): ) [9453,9454]"
    },
    {
      "src": "identifier: selector [21370,21378]",
      "dest": "identifier: selector [21370,21378]"
    },
    {
      "src": "}: } [21690,21691]",
      "dest": "}: } [21690,21691]"
    },
    {
      "src": "number_literal: 20 [23779,23781]",
      "dest": "number_literal: 20 [23779,23781]"
    },
    {
      "src": "solidity_pragma_token [7,22]",
      "dest": "solidity_pragma_token [7,22]"
    },
    {
      "src": "identifier: newAllowance [22003,22015]",
      "dest": "identifier: newAllowance [22003,22015]"
    },
    {
      "src": "identifier: balance [26441,26448]",
      "dest": "identifier: balance [26329,26336]"
    },
    {
      "src": "return: return [16533,16539]",
      "dest": "return: return [16533,16539]"
    },
    {
      "src": "identifier: c [6422,6423]",
      "dest": "identifier: c [6422,6423]"
    },
    {
      "src": "identifier: increaseAllowance [11654,11671]",
      "dest": "identifier: increaseAllowance [11654,11671]"
    },
    {
      "src": "return_type_definition [8361,8378]",
      "dest": "return_type_definition [8361,8378]"
    },
    {
      "src": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [11858,12334]",
      "dest": "comment: /**      * @dev Atomically decreases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      * - `spender` must have allowance for the caller of at least      * `subtractedValue`.      */ [11858,12334]"
    },
    {
      "src": "array_access [15838,15858]",
      "dest": "array_access [15838,15858]"
    },
    {
      "src": "binary_expression [4735,4740]",
      "dest": "binary_expression [4735,4740]"
    },
    {
      "src": "member_expression [21637,21659]",
      "dest": "member_expression [21637,21659]"
    },
    {
      "src": "call_argument [5657,5663]",
      "dest": "call_argument [5657,5663]"
    },
    {
      "src": "function_body [20475,20577]",
      "dest": "function_body [20475,20577]"
    },
    {
      "src": "type_name [11039,11043]",
      "dest": "type_name [11039,11043]"
    },
    {
      "src": "parameter [25333,25340]",
      "dest": "parameter [25333,25340]"
    },
    {
      "src": "return: return [24691,24697]",
      "dest": "return: return [24691,24697]"
    },
    {
      "src": ",: , [10375,10376]",
      "dest": ",: , [10375,10376]"
    },
    {
      "src": "member_expression [24709,24719]",
      "dest": "member_expression [24709,24719]"
    },
    {
      "src": ",: , [9895,9896]",
      "dest": ",: , [9895,9896]"
    },
    {
      "src": "call_argument [12463,12470]",
      "dest": "call_argument [12463,12470]"
    },
    {
      "src": "identifier: a [5107,5108]",
      "dest": "identifier: a [5107,5108]"
    },
    {
      "src": "expression_statement [15435,15472]",
      "dest": "expression_statement [15435,15472]"
    },
    {
      "src": "return_type_definition [18096,18110]",
      "dest": "return_type_definition [18096,18110]"
    },
    {
      "src": ".: . [26608,26609]",
      "dest": ".: . [26496,26497]"
    },
    {
      "src": "[: [ [14601,14602]",
      "dest": "[: [ [14601,14602]"
    },
    {
      "src": "emit: emit [14719,14723]",
      "dest": "emit: emit [14719,14723]"
    },
    {
      "src": "function: function [21697,21705]",
      "dest": "function: function [21697,21705]"
    },
    {
      "src": "external: external [143,151]",
      "dest": "external: external [143,151]"
    },
    {
      "src": "): ) [26475,26476]",
      "dest": "): ) [26363,26364]"
    },
    {
      "src": ".: . [20193,20194]",
      "dest": ".: . [20193,20194]"
    },
    {
      "src": "return_type_definition [2097,2111]",
      "dest": "return_type_definition [2097,2111]"
    },
    {
      "src": "call_argument [9955,9967]",
      "dest": "call_argument [9955,9967]"
    },
    {
      "src": "call_argument [21356,21378]",
      "dest": "call_argument [21356,21378]"
    },
    {
      "src": "}: } [4821,4822]",
      "dest": "}: } [4821,4822]"
    },
    {
      "src": "function_definition [8944,9107]",
      "dest": "function_definition [8944,9107]"
    },
    {
      "src": "identifier: OwnershipTransferred [24147,24167]",
      "dest": "identifier: OwnershipTransferred [24147,24167]"
    },
    {
      "src": "): ) [23437,23438]",
      "dest": "): ) [23437,23438]"
    },
    {
      "src": "inheritance_specifier [9138,9144]",
      "dest": "inheritance_specifier [9138,9144]"
    },
    {
      "src": "identifier: div [26521,26524]",
      "dest": "identifier: div [26409,26412]"
    },
    {
      "src": "==: == [24706,24708]",
      "dest": "==: == [24706,24708]"
    },
    {
      "src": "type_name [1702,1706]",
      "dest": "type_name [1702,1706]"
    },
    {
      "src": "call_expression [26243,26269]",
      "dest": "call_expression [26144,26170]"
    },
    {
      "src": "): ) [20303,20304]",
      "dest": "): ) [20303,20304]"
    },
    {
      "src": "member_expression [11132,11169]",
      "dest": "member_expression [11132,11169]"
    },
    {
      "src": "{: { [9455,9456]",
      "dest": "{: { [9455,9456]"
    },
    {
      "src": "}: } [25250,25251]",
      "dest": "}: } [25250,25251]"
    },
    {
      "src": "{: { [4713,4714]",
      "dest": "{: { [4713,4714]"
    },
    {
      "src": "member_expression [21172,21187]",
      "dest": "member_expression [21172,21187]"
    },
    {
      "src": "parameter [10092,10105]",
      "dest": "parameter [10092,10105]"
    },
    {
      "src": "type_name [5099,5106]",
      "dest": "type_name [5099,5106]"
    },
    {
      "src": "identifier: sender [11110,11116]",
      "dest": "identifier: sender [11110,11116]"
    },
    {
      "src": "address: address [20826,20833]",
      "dest": "address: address [20826,20833]"
    },
    {
      "src": "primitive_type [21505,21512]",
      "dest": "primitive_type [21505,21512]"
    },
    {
      "src": "return_type_definition [24666,24680]",
      "dest": "return_type_definition [24666,24680]"
    },
    {
      "src": "(: ( [13247,13248]",
      "dest": "(: ( [13247,13248]"
    },
    {
      "src": "): ) [979,980]",
      "dest": "): ) [979,980]"
    },
    {
      "src": "string [14524,14559]",
      "dest": "string [14524,14559]"
    },
    {
      "src": "identifier: OWNER_SLOT [24459,24469]",
      "dest": "identifier: OWNER_SLOT [24459,24469]"
    },
    {
      "src": "(: ( [21551,21552]",
      "dest": "(: ( [21551,21552]"
    },
    {
      "src": "function_definition [15193,15525]",
      "dest": "function_definition [15193,15525]"
    },
    {
      "src": "view: view [24661,24665]",
      "dest": "view: view [24661,24665]"
    },
    {
      "src": "identifier: newOwner [25226,25234]",
      "dest": "identifier: newOwner [25226,25234]"
    },
    {
      "src": "is: is [15959,15961]",
      "dest": "is: is [15959,15961]"
    },
    {
      "src": "type_name [9446,9453]",
      "dest": "type_name [9446,9453]"
    },
    {
      "src": "call_expression [11118,11130]",
      "dest": "call_expression [11118,11130]"
    },
    {
      "src": "expression_statement [20226,20305]",
      "dest": "expression_statement [20226,20305]"
    },
    {
      "src": "memory: memory [22455,22461]",
      "dest": "memory: memory [22455,22461]"
    },
    {
      "src": "type_name [3502,3507]",
      "dest": "type_name [3502,3507]"
    },
    {
      "src": "identifier: sender [26578,26584]",
      "dest": "identifier: sender [26466,26472]"
    },
    {
      "src": "inheritance_specifier [25393,25405]",
      "dest": "inheritance_specifier [25393,25405]"
    },
    {
      "src": "type_cast_expression [21188,21201]",
      "dest": "type_cast_expression [21188,21201]"
    },
    {
      "src": "returns: returns [1693,1700]",
      "dest": "returns: returns [1693,1700]"
    },
    {
      "src": "parameter [20451,20464]",
      "dest": "parameter [20451,20464]"
    },
    {
      "src": "function_definition [26381,26682]",
      "dest": "function_definition [26239,26531]"
    },
    {
      "src": "type_name [7739,7746]",
      "dest": "type_name [7739,7746]"
    },
    {
      "src": "(: ( [21355,21356]",
      "dest": "(: ( [21355,21356]"
    },
    {
      "src": "identifier: _amount [26114,26121]",
      "dest": "identifier: _amount [26015,26022]"
    },
    {
      "src": "state_variable_declaration [15975,15996]",
      "dest": "state_variable_declaration [15975,15996]"
    },
    {
      "src": "identifier: this [21840,21844]",
      "dest": "identifier: this [21840,21844]"
    },
    {
      "src": "type_name [15243,15250]",
      "dest": "type_name [15243,15250]"
    },
    {
      "src": ",: , [13370,13371]",
      "dest": ",: , [13370,13371]"
    },
    {
      "src": "(: ( [5556,5557]",
      "dest": "(: ( [5556,5557]"
    },
    {
      "src": "identifier: position [25155,25163]",
      "dest": "identifier: position [25155,25163]"
    },
    {
      "src": "identifier: returndata [23279,23289]",
      "dest": "identifier: returndata [23279,23289]"
    },
    {
      "src": "internal: internal [15259,15267]",
      "dest": "internal: internal [15259,15267]"
    },
    {
      "src": "(: ( [26254,26255]",
      "dest": "(: ( [26155,26156]"
    },
    {
      "src": "call_expression [24588,24597]",
      "dest": "call_expression [24588,24597]"
    },
    {
      "src": "view: view [26860,26864]",
      "dest": "view: view [26709,26713]"
    },
    {
      "src": "internal: internal [24245,24253]",
      "dest": "internal: internal [24245,24253]"
    },
    {
      "src": "string_literal [20068,20099]",
      "dest": "string_literal [20068,20099]"
    },
    {
      "src": "identifier: spender [15502,15509]",
      "dest": "identifier: spender [15502,15509]"
    },
    {
      "src": "function: function [10343,10351]",
      "dest": "function: function [10343,10351]"
    },
    {
      "src": "string_literal [25934,25957]",
      "dest": "string_literal [25807,25830]"
    },
    {
      "src": "array_access [12472,12497]",
      "dest": "array_access [12472,12497]"
    },
    {
      "src": "call_expression [26779,26808]",
      "dest": "call_expression [26628,26657]"
    },
    {
      "src": "): ) [21484,21485]",
      "dest": "): ) [21484,21485]"
    },
    {
      "src": "=: = [16389,16390]",
      "dest": "=: = [16389,16390]"
    },
    {
      "src": "call_expression [21333,21395]",
      "dest": "call_expression [21333,21395]"
    },
    {
      "src": "address: address [21188,21195]",
      "dest": "address: address [21188,21195]"
    },
    {
      "src": "primitive_type [5099,5106]",
      "dest": "primitive_type [5099,5106]"
    },
    {
      "src": "primitive_type [10145,10152]",
      "dest": "primitive_type [10145,10152]"
    },
    {
      "src": "returns: returns [18914,18921]",
      "dest": "returns: returns [18914,18921]"
    },
    {
      "src": "parameter [5110,5119]",
      "dest": "parameter [5110,5119]"
    },
    {
      "src": "identifier: _allowances [11773,11784]",
      "dest": "identifier: _allowances [11773,11784]"
    },
    {
      "src": "member_expression [23279,23296]",
      "dest": "member_expression [23279,23296]"
    },
    {
      "src": "address: address [9266,9273]",
      "dest": "address: address [9266,9273]"
    },
    {
      "src": "primitive_type [15375,15382]",
      "dest": "primitive_type [15375,15382]"
    },
    {
      "src": "primitive_type [7565,7571]",
      "dest": "primitive_type [7565,7571]"
    },
    {
      "src": "function: function [14426,14434]",
      "dest": "function: function [14426,14434]"
    },
    {
      "src": "}: } [20784,20785]",
      "dest": "}: } [20784,20785]"
    },
    {
      "src": "assignment_expression [13948,13987]",
      "dest": "assignment_expression [13948,13987]"
    },
    {
      "src": "\": \" [20243,20244]",
      "dest": "\": \" [20243,20244]"
    },
    {
      "src": "state_mutability [3488,3492]",
      "dest": "state_mutability [3488,3492]"
    },
    {
      "src": "function_body [16719,16750]",
      "dest": "function_body [16719,16750]"
    },
    {
      "src": "member_expression [21528,21543]",
      "dest": "member_expression [21528,21543]"
    },
    {
      "src": "): ) [15870,15871]",
      "dest": "): ) [15870,15871]"
    },
    {
      "src": "): ) [9005,9006]",
      "dest": "): ) [9005,9006]"
    },
    {
      "src": "call_expression [26568,26594]",
      "dest": "call_expression [26456,26482]"
    },
    {
      "src": "primitive_type [13178,13185]",
      "dest": "primitive_type [13178,13185]"
    },
    {
      "src": "(: ( [14040,14041]",
      "dest": "(: ( [14040,14041]"
    },
    {
      "src": "call_argument [20234,20241]",
      "dest": "call_argument [20234,20241]"
    },
    {
      "src": "call_argument [26586,26593]",
      "dest": "call_argument [26474,26481]"
    },
    {
      "src": "member_expression [26441,26467]",
      "dest": "member_expression [26329,26355]"
    },
    {
      "src": "visibility [25342,25350]",
      "dest": "visibility [25342,25350]"
    },
    {
      "src": "call_argument [23431,23437]",
      "dest": "call_argument [23431,23437]"
    },
    {
      "src": "return_statement [12579,12591]",
      "dest": "return_statement [12579,12591]"
    },
    {
      "src": "state_mutability [5616,5620]",
      "dest": "state_mutability [5616,5620]"
    },
    {
      "src": "identifier: owner [15495,15500]",
      "dest": "identifier: owner [15495,15500]"
    },
    {
      "src": "visibility [1684,1692]",
      "dest": "visibility [1684,1692]"
    },
    {
      "src": "(: ( [20042,20043]",
      "dest": "(: ( [20042,20043]"
    },
    {
      "src": "primitive_type [5630,5637]",
      "dest": "primitive_type [5630,5637]"
    },
    {
      "src": ".: . [13359,13360]",
      "dest": ".: . [13359,13360]"
    },
    {
      "src": "block_statement [26220,26291]",
      "dest": "block_statement [26121,26192]"
    },
    {
      "src": "expression_statement [27433,27462]",
      "dest": "expression_statement [27162,27191]"
    },
    {
      "src": "): ) [18585,18586]",
      "dest": "): ) [18585,18586]"
    },
    {
      "src": "identifier: div [26986,26989]",
      "dest": "identifier: mul [26889,26892]"
    },
    {
      "src": "comment: // Empty internal constructor, to prevent people from mistakenly deploying [3117,3191]",
      "dest": "comment: // Empty internal constructor, to prevent people from mistakenly deploying [3117,3191]"
    },
    {
      "src": ",: , [27334,27335]",
      "dest": ",: , [27097,27098]"
    },
    {
      "src": "visibility [12408,12414]",
      "dest": "visibility [12408,12414]"
    },
    {
      "src": "string [24120,24133]",
      "dest": "string [24120,24133]"
    },
    {
      "src": "contract_body [25443,27470]",
      "dest": "contract_body [25443,27199]"
    },
    {
      "src": "identifier: transferOwnership [24836,24853]",
      "dest": "identifier: transferOwnership [24836,24853]"
    },
    {
      "src": "primitive_type [16276,16282]",
      "dest": "primitive_type [16276,16282]"
    },
    {
      "src": "]: ] [15857,15858]",
      "dest": "]: ] [15857,15858]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [7021,7525]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers. Reverts with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      * - The divisor cannot be zero.      *      * _Available since v2.4.0._      */ [7021,7525]"
    },
    {
      "src": "identifier: newOwner [24976,24984]",
      "dest": "identifier: newOwner [24976,24984]"
    },
    {
      "src": "parameter [12366,12381]",
      "dest": "parameter [12366,12381]"
    },
    {
      "src": "type_name [15211,15218]",
      "dest": "type_name [15211,15218]"
    },
    {
      "src": "memory: memory [16263,16269]",
      "dest": "memory: memory [16263,16269]"
    },
    {
      "src": "call_argument [14520,14521]",
      "dest": "call_argument [14520,14521]"
    },
    {
      "src": "\": \" [23624,23625]",
      "dest": "\": \" [23624,23625]"
    },
    {
      "src": "{: { [25195,25196]",
      "dest": "{: { [25195,25196]"
    },
    {
      "src": "function_body [3295,3298]",
      "dest": "function_body [3295,3298]"
    },
    {
      "src": "identifier: callOptionalReturn [21921,21939]",
      "dest": "identifier: callOptionalReturn [21921,21939]"
    },
    {
      "src": "identifier: balance [26725,26732]",
      "dest": "identifier: balance [26574,26581]"
    },
    {
      "src": "}: } [23495,23496]",
      "dest": "}: } [23495,23496]"
    },
    {
      "src": "}: } [5219,5220]",
      "dest": "}: } [5219,5220]"
    },
    {
      "src": "call_argument [15364,15385]",
      "dest": "call_argument [15364,15385]"
    },
    {
      "src": "expression_statement [7701,7730]",
      "dest": "expression_statement [7701,7730]"
    },
    {
      "src": "call_argument [21847,21854]",
      "dest": "call_argument [21847,21854]"
    },
    {
      "src": "call_argument [27304,27334]",
      "dest": "call_argument [27067,27097]"
    },
    {
      "src": "primitive_type [9170,9177]",
      "dest": "primitive_type [9170,9177]"
    },
    {
      "src": "view: view [10131,10135]",
      "dest": "view: view [10131,10135]"
    },
    {
      "src": "(: ( [14519,14520]",
      "dest": "(: ( [14519,14520]"
    },
    {
      "src": "expression_statement [15356,15425]",
      "dest": "expression_statement [15356,15425]"
    },
    {
      "src": "call_expression [4750,4796]",
      "dest": "call_expression [4750,4796]"
    },
    {
      "src": ",: , [23429,23430]",
      "dest": ",: , [23429,23430]"
    },
    {
      "src": "type_name [20439,20446]",
      "dest": "type_name [20439,20446]"
    },
    {
      "src": "primitive_type [23136,23140]",
      "dest": "primitive_type [23136,23140]"
    },
    {
      "src": "function_definition [16471,16552]",
      "dest": "function_definition [16471,16552]"
    },
    {
      "src": "call_argument [26306,26316]",
      "dest": "call_argument [26207,26217]"
    },
    {
      "src": "parameter [5630,5637]",
      "dest": "parameter [5630,5637]"
    },
    {
      "src": "public: public [24872,24878]",
      "dest": "public: public [24872,24878]"
    },
    {
      "src": "type_name [4670,4677]",
      "dest": "type_name [4670,4677]"
    },
    {
      "src": "{: { [24254,24255]",
      "dest": "{: { [24254,24255]"
    },
    {
      "src": "call_argument [9065,9077]",
      "dest": "call_argument [9065,9077]"
    },
    {
      "src": "type_name [2106,2110]",
      "dest": "type_name [2106,2110]"
    },
    {
      "src": "call_expression [10434,10446]",
      "dest": "call_expression [10434,10446]"
    },
    {
      "src": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [181,253]",
      "dest": "comment: /**      * @dev Returns the amount of tokens owned by `account`.      */ [181,253]"
    },
    {
      "src": "function: function [2015,2023]",
      "dest": "function: function [2015,2023]"
    },
    {
      "src": "identifier: amount [15789,15795]",
      "dest": "identifier: amount [15789,15795]"
    },
    {
      "src": "identifier: deposit [25992,25999]",
      "dest": "identifier: deposit [25863,25870]"
    },
    {
      "src": "=: = [7749,7750]",
      "dest": "=: = [7749,7750]"
    },
    {
      "src": "(: ( [27064,27065]",
      "dest": "(: ( [26996,26997]"
    },
    {
      "src": "): ) [24926,24927]",
      "dest": "): ) [24926,24927]"
    },
    {
      "src": "function_body [3516,3681]",
      "dest": "function_body [3516,3681]"
    },
    {
      "src": "true [12586,12590]",
      "dest": "true [12586,12590]"
    },
    {
      "src": "\": \" [23262,23263]",
      "dest": "\": \" [23262,23263]"
    },
    {
      "src": "string_literal [11178,11220]",
      "dest": "string_literal [11178,11220]"
    },
    {
      "src": "}: } [22023,22024]",
      "dest": "}: } [22023,22024]"
    },
    {
      "src": "(: ( [2526,2527]",
      "dest": "(: ( [2526,2527]"
    },
    {
      "src": ",: , [20437,20438]",
      "dest": ",: , [20437,20438]"
    },
    {
      "src": "visibility [6920,6928]",
      "dest": "visibility [6920,6928]"
    },
    {
      "src": "}: } [23926,23927]",
      "dest": "}: } [23926,23927]"
    },
    {
      "src": "identifier: onlyOwner [27152,27161]",
      "dest": "identifier: onlyOwner [27026,27035]"
    },
    {
      "src": "primitive_type [26000,26004]",
      "dest": "primitive_type [25871,25875]"
    },
    {
      "src": "): ) [18981,18982]",
      "dest": "): ) [18981,18982]"
    },
    {
      "src": "call_expression [26441,26450]",
      "dest": "call_expression [26329,26338]"
    },
    {
      "src": "): ) [26984,26985]",
      "dest": "): ) [26874,26875]"
    },
    {
      "src": "variable_declaration [21505,21525]",
      "dest": "variable_declaration [21505,21525]"
    },
    {
      "src": "string [24004,24017]",
      "dest": "string [24004,24017]"
    },
    {
      "src": "call_argument [21661,21668]",
      "dest": "call_argument [21661,21668]"
    },
    {
      "src": "identifier: b [5118,5119]",
      "dest": "identifier: b [5118,5119]"
    },
    {
      "src": ",: , [15500,15501]",
      "dest": ",: , [15500,15501]"
    },
    {
      "src": "): ) [15753,15754]",
      "dest": "): ) [15753,15754]"
    },
    {
      "src": "parameter [23959,23967]",
      "dest": "parameter [23959,23967]"
    },
    {
      "src": "parameter [166,173]",
      "dest": "parameter [166,173]"
    },
    {
      "src": "constructor: constructor [3271,3282]",
      "dest": "constructor: constructor [3271,3282]"
    },
    {
      "src": "): ) [27002,27003]",
      "dest": "): ) [26928,26929]"
    },
    {
      "src": "member_expression [26306,26316]",
      "dest": "member_expression [26207,26217]"
    },
    {
      "src": "view: view [303,307]",
      "dest": "view: view [303,307]"
    },
    {
      "src": "(: ( [20701,20702]",
      "dest": "(: ( [20701,20702]"
    },
    {
      "src": "string_literal [23229,23263]",
      "dest": "string_literal [23229,23263]"
    },
    {
      "src": "address: address [18065,18072]",
      "dest": "address: address [18065,18072]"
    },
    {
      "src": "): ) [3417,3418]",
      "dest": "): ) [3417,3418]"
    },
    {
      "src": "call_expression [23177,23202]",
      "dest": "call_expression [23177,23202]"
    },
    {
      "src": "expression_statement [24899,24928]",
      "dest": "expression_statement [24899,24928]"
    },
    {
      "src": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [11256,11640]",
      "dest": "comment: /**      * @dev Atomically increases the allowance granted to `spender` by the caller.      *      * This is an alternative to {approve} that can be used as a mitigation for      * problems described in {IERC20-approve}.      *      * Emits an {Approval} event indicating the updated allowance.      *      * Requirements:      *      * - `spender` cannot be the zero address.      */ [11256,11640]"
    },
    {
      "src": "{: { [25443,25444]",
      "dest": "{: { [25443,25444]"
    },
    {
      "src": "call_argument [26802,26806]",
      "dest": "call_argument [26651,26655]"
    },
    {
      "src": "using: using [20339,20344]",
      "dest": "using: using [20339,20344]"
    },
    {
      "src": "type_name [8325,8332]",
      "dest": "type_name [8325,8332]"
    },
    {
      "src": "number_literal: 0 [14750,14751]",
      "dest": "number_literal: 0 [14750,14751]"
    },
    {
      "src": "identifier: account [18578,18585]",
      "dest": "identifier: account [18578,18585]"
    },
    {
      "src": "): ) [2351,2352]",
      "dest": "): ) [2351,2352]"
    },
    {
      "src": "call_argument [13273,13310]",
      "dest": "call_argument [13273,13310]"
    },
    {
      "src": "identifier: notInitialized [23575,23589]",
      "dest": "identifier: notInitialized [23575,23589]"
    },
    {
      "src": "): ) [26760,26761]",
      "dest": "): ) [26609,26610]"
    },
    {
      "src": "primitive_type [20826,20833]",
      "dest": "primitive_type [20826,20833]"
    },
    {
      "src": "emit: emit [13488,13492]",
      "dest": "emit: emit [13488,13492]"
    },
    {
      "src": "): ) [15304,15305]",
      "dest": "): ) [15304,15305]"
    },
    {
      "src": "returns: returns [9021,9028]",
      "dest": "returns: returns [9021,9028]"
    },
    {
      "src": ".: . [23191,23192]",
      "dest": ".: . [23191,23192]"
    },
    {
      "src": "state_variable_declaration [25584,25609]",
      "dest": "state_variable_declaration [25584,25609]"
    },
    {
      "src": "uint256: uint256 [12383,12390]",
      "dest": "uint256: uint256 [12383,12390]"
    },
    {
      "src": "primitive_type [18965,18972]",
      "dest": "primitive_type [18965,18972]"
    },
    {
      "src": "}: } [7014,7015]",
      "dest": "}: } [7014,7015]"
    },
    {
      "src": "(: ( [21171,21172]",
      "dest": "(: ( [21171,21172]"
    },
    {
      "src": "return: return [4807,4813]",
      "dest": "return: return [4807,4813]"
    },
    {
      "src": "string [25037,25082]",
      "dest": "string [25037,25082]"
    },
    {
      "src": "(: ( [316,317]",
      "dest": "(: ( [316,317]"
    },
    {
      "src": "primitive_type [6898,6905]",
      "dest": "primitive_type [6898,6905]"
    },
    {
      "src": "address: address [27197,27204]",
      "dest": "address: address [26860,26867]"
    },
    {
      "src": "=: = [25164,25165]",
      "dest": "=: = [25164,25165]"
    },
    {
      "src": "contract_body [4418,9109]",
      "dest": "contract_body [4418,9109]"
    },
    {
      "src": "identifier: OWNER_SLOT [25166,25176]",
      "dest": "identifier: OWNER_SLOT [25166,25176]"
    },
    {
      "src": "string: string [16508,16514]",
      "dest": "string: string [16508,16514]"
    },
    {
      "src": "identifier: _gap [24028,24032]",
      "dest": "identifier: _gap [24028,24032]"
    },
    {
      "src": "return_statement [9625,9651]",
      "dest": "return_statement [9625,9651]"
    },
    {
      "src": "binary_expression [21155,21217]",
      "dest": "binary_expression [21155,21217]"
    },
    {
      "src": "identifier: amount [14093,14099]",
      "dest": "identifier: amount [14093,14099]"
    },
    {
      "src": "): ) [9284,9285]",
      "dest": "): ) [9284,9285]"
    },
    {
      "src": "function_definition [6885,7015]",
      "dest": "function_definition [6885,7015]"
    },
    {
      "src": "(: ( [11128,11129]",
      "dest": "(: ( [11128,11129]"
    },
    {
      "src": "(: ( [25032,25033]",
      "dest": "(: ( [25032,25033]"
    },
    {
      "src": "expression_statement [23988,24019]",
      "dest": "expression_statement [23988,24019]"
    },
    {
      "src": "string_literal [4766,4795]",
      "dest": "string_literal [4766,4795]"
    },
    {
      "src": "identifier: b [6917,6918]",
      "dest": "identifier: b [6917,6918]"
    },
    {
      "src": "type_cast_expression [23177,23191]",
      "dest": "type_cast_expression [23177,23191]"
    },
    {
      "src": "(: ( [26905,26906]",
      "dest": "(: ( [26754,26755]"
    },
    {
      "src": "identifier: div [6969,6972]",
      "dest": "identifier: div [6969,6972]"
    },
    {
      "src": "type_name [20389,20396]",
      "dest": "type_name [20389,20396]"
    },
    {
      "src": "identifier: _amount [26243,26250]",
      "dest": "identifier: _amount [26144,26151]"
    },
    {
      "src": "expression_statement [26234,26281]",
      "dest": "expression_statement [26135,26182]"
    },
    {
      "src": "\": \" [23483,23484]",
      "dest": "\": \" [23483,23484]"
    },
    {
      "src": ",: , [9967,9968]",
      "dest": ",: , [9967,9968]"
    },
    {
      "src": ":=: := [24509,24511]",
      "dest": ":=: := [24509,24511]"
    },
    {
      "src": "identifier: spender [15234,15241]",
      "dest": "identifier: spender [15234,15241]"
    },
    {
      "src": "): ) [26324,26325]",
      "dest": "): ) [26225,26226]"
    },
    {
      "src": "variable_declaration_statement [21505,21579]",
      "dest": "variable_declaration_statement [21505,21579]"
    },
    {
      "src": "(: ( [15869,15870]",
      "dest": "(: ( [15869,15870]"
    },
    {
      "src": "string_literal [24120,24133]",
      "dest": "string_literal [24120,24133]"
    },
    {
      "src": "uint256: uint256 [2072,2079]",
      "dest": "uint256: uint256 [2072,2079]"
    },
    {
      "src": "view: view [18091,18095]",
      "dest": "view: view [18091,18095]"
    },
    {
      "src": "identifier: mul [26464,26467]",
      "dest": "identifier: mul [26352,26355]"
    },
    {
      "src": ",: , [9978,9979]",
      "dest": ",: , [9978,9979]"
    },
    {
      "src": "(: ( [8369,8370]",
      "dest": "(: ( [8369,8370]"
    },
    {
      "src": "string_literal [12528,12567]",
      "dest": "string_literal [12528,12567]"
    },
    {
      "src": "call_argument [26114,26121]",
      "dest": "call_argument [26015,26022]"
    },
    {
      "src": "==: == [21212,21214]",
      "dest": "==: == [21212,21214]"
    },
    {
      "src": "): ) [13412,13413]",
      "dest": "): ) [13412,13413]"
    },
    {
      "src": "[: [ [13432,13433]",
      "dest": "[: [ [13432,13433]"
    },
    {
      "src": "primitive_type [15211,15218]",
      "dest": "primitive_type [15211,15218]"
    },
    {
      "src": "type_name [12383,12390]",
      "dest": "type_name [12383,12390]"
    },
    {
      "src": "binary_expression [21172,21216]",
      "dest": "binary_expression [21172,21216]"
    },
    {
      "src": "\": \" [23031,23032]",
      "dest": "\": \" [23031,23032]"
    },
    {
      "src": ",: , [11130,11131]",
      "dest": ",: , [11130,11131]"
    },
    {
      "src": "function_body [24570,24629]",
      "dest": "function_body [24570,24629]"
    },
    {
      "src": "contract: contract [15936,15944]",
      "dest": "contract: contract [15936,15944]"
    },
    {
      "src": "\": \" [21286,21287]",
      "dest": "\": \" [21286,21287]"
    },
    {
      "src": "returns: returns [16695,16702]",
      "dest": "returns: returns [16695,16702]"
    },
    {
      "src": ",: , [21845,21846]",
      "dest": ",: , [21845,21846]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [14774,15188]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.      *      * This is internal function is equivalent to `approve`, and can be used to      * e.g. set automatic allowances for certain subsystems, etc.      *      * Emits an {Approval} event.      *      * Requirements:      *      * - `owner` cannot be the zero address.      * - `spender` cannot be the zero address.      */ [14774,15188]"
    },
    {
      "src": "modifier: modifier [24549,24557]",
      "dest": "modifier: modifier [24549,24557]"
    },
    {
      "src": "return: return [3659,3665]",
      "dest": "return: return [3659,3665]"
    },
    {
      "src": "{: { [26762,26763]",
      "dest": "{: { [26611,26612]"
    },
    {
      "src": "primitive_type [21454,21461]",
      "dest": "primitive_type [21454,21461]"
    },
    {
      "src": "return_statement [5716,5725]",
      "dest": "return_statement [5716,5725]"
    },
    {
      "src": ",: , [25427,25428]",
      "dest": ",: , [25427,25428]"
    },
    {
      "src": "parameter [20843,20856]",
      "dest": "parameter [20843,20856]"
    },
    {
      "src": "function: function [24940,24948]",
      "dest": "function: function [24940,24948]"
    },
    {
      "src": "inheritance_specifier [25407,25420]",
      "dest": "inheritance_specifier [25407,25420]"
    },
    {
      "src": ",: , [13901,13902]",
      "dest": ",: , [13901,13902]"
    },
    {
      "src": "call_argument [20504,20509]",
      "dest": "call_argument [20504,20509]"
    },
    {
      "src": ",: , [14522,14523]",
      "dest": ",: , [14522,14523]"
    },
    {
      "src": "user_defined_type [20609,20615]",
      "dest": "user_defined_type [20609,20615]"
    },
    {
      "src": ",: , [14082,14083]",
      "dest": ",: , [14082,14083]"
    },
    {
      "src": "call_expression [26065,26122]",
      "dest": "call_expression [25966,26023]"
    },
    {
      "src": "number_literal: 0 [13186,13187]",
      "dest": "number_literal: 0 [13186,13187]"
    },
    {
      "src": "function: function [25284,25292]",
      "dest": "function: function [25284,25292]"
    },
    {
      "src": "identifier: require [23400,23407]",
      "dest": "identifier: require [23400,23407]"
    },
    {
      "src": "identifier: c [5723,5724]",
      "dest": "identifier: c [5723,5724]"
    },
    {
      "src": "view: view [17326,17330]",
      "dest": "view: view [17326,17330]"
    },
    {
      "src": "(: ( [18922,18923]",
      "dest": "(: ( [18922,18923]"
    },
    {
      "src": "state_mutability [9592,9596]",
      "dest": "state_mutability [9592,9596]"
    },
    {
      "src": "type_name [18883,18890]",
      "dest": "type_name [18883,18890]"
    },
    {
      "src": "{: { [23978,23979]",
      "dest": "{: { [23978,23979]"
    },
    {
      "src": "number_literal: 20 [23878,23880]",
      "dest": "number_literal: 20 [23878,23880]"
    },
    {
      "src": "{: { [21495,21496]",
      "dest": "{: { [21495,21496]"
    },
    {
      "src": "identifier: a [23825,23826]",
      "dest": "identifier: a [23825,23826]"
    },
    {
      "src": "call_expression [21172,21211]",
      "dest": "call_expression [21172,21211]"
    },
    {
      "src": "bool: bool [11725,11729]",
      "dest": "bool: bool [11725,11729]"
    },
    {
      "src": "address: address [9193,9200]",
      "dest": "address: address [9193,9200]"
    },
    {
      "src": "type_name [14441,14448]",
      "dest": "type_name [14441,14448]"
    },
    {
      "src": "expression_statement [23400,23486]",
      "dest": "expression_statement [23400,23486]"
    },
    {
      "src": "contract_body [15969,17382]",
      "dest": "contract_body [15969,17382]"
    },
    {
      "src": "identifier: name [16339,16343]",
      "dest": "identifier: name [16339,16343]"
    },
    {
      "src": "address: address [2550,2557]",
      "dest": "address: address [2550,2557]"
    },
    {
      "src": "[: [ [9641,9642]",
      "dest": "[: [ [9641,9642]"
    },
    {
      "src": "uint256: uint256 [5630,5637]",
      "dest": "uint256: uint256 [5630,5637]"
    },
    {
      "src": "\": \" [24016,24017]",
      "dest": "\": \" [24016,24017]"
    },
    {
      "src": "type_name [15975,15981]",
      "dest": "type_name [15975,15981]"
    },
    {
      "src": "identifier: symbol [16290,16296]",
      "dest": "identifier: symbol [16290,16296]"
    },
    {
      "src": "identifier: _msgSender [11785,11795]",
      "dest": "identifier: _msgSender [11785,11795]"
    },
    {
      "src": "=: = [21526,21527]",
      "dest": "=: = [21526,21527]"
    },
    {
      "src": "call_expression [11785,11797]",
      "dest": "call_expression [11785,11797]"
    },
    {
      "src": "identifier: errorMessage [5665,5677]",
      "dest": "identifier: errorMessage [5665,5677]"
    },
    {
      "src": "external: external [27135,27143]",
      "dest": "external: external [27017,27025]"
    },
    {
      "src": "type_cast_expression [26099,26112]",
      "dest": "type_cast_expression [26000,26013]"
    },
    {
      "src": "member_expression [26525,26542]",
      "dest": "member_expression [26413,26430]"
    },
    {
      "src": "(: ( [21606,21607]",
      "dest": "(: ( [21606,21607]"
    },
    {
      "src": "): ) [23967,23968]",
      "dest": "): ) [23967,23968]"
    },
    {
      "src": "type_name [9184,9212]",
      "dest": "type_name [9184,9212]"
    },
    {
      "src": "identifier: Transfer [14063,14071]",
      "dest": "identifier: Transfer [14063,14071]"
    },
    {
      "src": "identifier: isContract [18054,18064]",
      "dest": "identifier: isContract [18054,18064]"
    },
    {
      "src": "parameter [19992,20006]",
      "dest": "parameter [19992,20006]"
    },
    {
      "src": "internal: internal [20466,20474]",
      "dest": "internal: internal [20466,20474]"
    },
    {
      "src": "identifier: owner [10100,10105]",
      "dest": "identifier: owner [10100,10105]"
    },
    {
      "src": "type_name [5630,5637]",
      "dest": "type_name [5630,5637]"
    },
    {
      "src": "return_statement [9465,9485]",
      "dest": "return_statement [9465,9485]"
    },
    {
      "src": "primitive_type [317,324]",
      "dest": "primitive_type [317,324]"
    },
    {
      "src": "call_expression [15824,15836]",
      "dest": "call_expression [15824,15836]"
    },
    {
      "src": "internal: internal [5607,5615]",
      "dest": "internal: internal [5607,5615]"
    },
    {
      "src": "{: { [26173,26174]",
      "dest": "{: { [26074,26075]"
    },
    {
      "src": ".: . [23016,23017]",
      "dest": ".: . [23016,23017]"
    },
    {
      "src": "(: ( [1701,1702]",
      "dest": "(: ( [1701,1702]"
    },
    {
      "src": "string_literal [27348,27379]",
      "dest": "string_literal [27111,27142]"
    },
    {
      "src": "yul_identifier [24518,24526]",
      "dest": "yul_identifier [24518,24526]"
    },
    {
      "src": "call_expression [13342,13413]",
      "dest": "call_expression [13342,13413]"
    },
    {
      "src": "\": \" [14623,14624]",
      "dest": "\": \" [14623,14624]"
    },
    {
      "src": "(: ( [24587,24588]",
      "dest": "(: ( [24587,24588]"
    },
    {
      "src": "contract_body [17468,20313]",
      "dest": "contract_body [17468,20313]"
    },
    {
      "src": "type_name [12424,12428]",
      "dest": "type_name [12424,12428]"
    },
    {
      "src": "expression_statement [13160,13231]",
      "dest": "expression_statement [13160,13231]"
    },
    {
      "src": "call_argument [27197,27231]",
      "dest": "call_argument [26860,26873]"
    },
    {
      "src": "]: ] [11806,11807]",
      "dest": "]: ] [11806,11807]"
    },
    {
      "src": "string: string [16256,16262]",
      "dest": "string: string [16256,16262]"
    },
    {
      "src": ",: , [20621,20622]",
      "dest": ",: , [20621,20622]"
    },
    {
      "src": "function_definition [26716,26815]",
      "dest": "function_definition [26565,26664]"
    },
    {
      "src": "identifier: this [21196,21200]",
      "dest": "identifier: this [21196,21200]"
    },
    {
      "src": "unary_expression [23610,23622]",
      "dest": "unary_expression [23610,23622]"
    },
    {
      "src": "primitive_type [26099,26106]",
      "dest": "primitive_type [26000,26007]"
    },
    {
      "src": "function: function [4646,4654]",
      "dest": "function: function [4646,4654]"
    },
    {
      "src": "function_body [18940,18989]",
      "dest": "function_body [18940,18989]"
    },
    {
      "src": "function: function [24377,24385]",
      "dest": "function: function [24377,24385]"
    },
    {
      "src": "yul_evm_builtin [18566,18577]",
      "dest": "yul_evm_builtin [18566,18577]"
    },
    {
      "src": "=: = [5698,5699]",
      "dest": "=: = [5698,5699]"
    },
    {
      "src": "\": \" [27348,27349]",
      "dest": "\": \" [27111,27112]"
    },
    {
      "src": "): ) [24596,24597]",
      "dest": "): ) [24596,24597]"
    },
    {
      "src": "): ) [14708,14709]",
      "dest": "): ) [14708,14709]"
    },
    {
      "src": "variable_declaration [26432,26438]",
      "dest": "variable_declaration [26320,26326]"
    },
    {
      "src": "(: ( [23001,23002]",
      "dest": "(: ( [23001,23002]"
    },
    {
      "src": "{: { [5639,5640]",
      "dest": "{: { [5639,5640]"
    },
    {
      "src": "parameter [13090,13104]",
      "dest": "parameter [13090,13104]"
    },
    {
      "src": "uint256: uint256 [13125,13132]",
      "dest": "uint256: uint256 [13125,13132]"
    },
    {
      "src": "return_type_definition [26747,26761]",
      "dest": "return_type_definition [26596,26610]"
    },
    {
      "src": "variable_declaration_statement [20165,20217]",
      "dest": "variable_declaration_statement [20165,20217]"
    },
    {
      "src": ".: . [21855,21856]",
      "dest": ".: . [21855,21856]"
    },
    {
      "src": "]: ] [11150,11151]",
      "dest": "]: ] [11150,11151]"
    },
    {
      "src": "identifier: a [23996,23997]",
      "dest": "identifier: a [23996,23997]"
    },
    {
      "src": "type_name [24080,24087]",
      "dest": "type_name [24080,24087]"
    },
    {
      "src": "): ) [18938,18939]",
      "dest": "): ) [18938,18939]"
    },
    {
      "src": "type_name [21742,21749]",
      "dest": "type_name [21742,21749]"
    },
    {
      "src": "primitive_type [24854,24861]",
      "dest": "primitive_type [24854,24861]"
    },
    {
      "src": "call_argument [15780,15787]",
      "dest": "call_argument [15780,15787]"
    },
    {
      "src": "): ) [26537,26538]",
      "dest": "): ) [26425,26426]"
    },
    {
      "src": "expression_statement [27283,27390]",
      "dest": "expression_statement [27046,27153]"
    },
    {
      "src": "parameter [11672,11687]",
      "dest": "parameter [11672,11687]"
    },
    {
      "src": "comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [21031,21085]",
      "dest": "comment: // 'safeIncreaseAllowance' and 'safeDecreaseAllowance' [21031,21085]"
    },
    {
      "src": "identifier: token [23185,23190]",
      "dest": "identifier: token [23185,23190]"
    },
    {
      "src": "call_expression [20184,20216]",
      "dest": "call_expression [20184,20216]"
    },
    {
      "src": "identifier: safeApprove [20800,20811]",
      "dest": "identifier: safeApprove [20800,20811]"
    },
    {
      "src": ".: . [11165,11166]",
      "dest": ".: . [11165,11166]"
    },
    {
      "src": "): ) [11761,11762]",
      "dest": "): ) [11761,11762]"
    },
    {
      "src": "type_name [10092,10099]",
      "dest": "type_name [10092,10099]"
    },
    {
      "src": "returns: returns [24406,24413]",
      "dest": "returns: returns [24406,24413]"
    },
    {
      "src": "=: = [14590,14591]",
      "dest": "=: = [14590,14591]"
    },
    {
      "src": ",: , [24597,24598]",
      "dest": ",: , [24597,24598]"
    },
    {
      "src": "identifier: _burn [26568,26573]",
      "dest": "identifier: _burn [26456,26461]"
    },
    {
      "src": "identifier: spender [21380,21387]",
      "dest": "identifier: spender [21380,21387]"
    },
    {
      "src": "identifier: ERC20 [25422,25427]",
      "dest": "identifier: ERC20 [25422,25427]"
    },
    {
      "src": "identifier: mul [26539,26542]",
      "dest": "identifier: mul [26427,26430]"
    },
    {
      "src": "{: { [26023,26024]",
      "dest": "{: { [25894,25895]"
    },
    {
      "src": "using: using [20371,20376]",
      "dest": "using: using [20371,20376]"
    },
    {
      "src": "call_argument [9980,9986]",
      "dest": "call_argument [9980,9986]"
    },
    {
      "src": "call_expression [26441,26507]",
      "dest": "call_expression [26329,26395]"
    },
    {
      "src": "(: ( [14440,14441]",
      "dest": "(: ( [14440,14441]"
    },
    {
      "src": "call_argument [23185,23190]",
      "dest": "call_argument [23185,23190]"
    },
    {
      "src": "identifier: length [23290,23296]",
      "dest": "identifier: length [23290,23296]"
    },
    {
      "src": "expression_statement [11101,11223]",
      "dest": "expression_statement [11101,11223]"
    },
    {
      "src": ",: , [25957,25958]",
      "dest": ",: , [25830,25831]"
    },
    {
      "src": "contract: contract [9111,9119]",
      "dest": "contract: contract [9111,9119]"
    },
    {
      "src": "(: ( [13501,13502]",
      "dest": "(: ( [13501,13502]"
    },
    {
      "src": "identifier: owner [15219,15224]",
      "dest": "identifier: owner [15219,15224]"
    },
    {
      "src": "address: address [14072,14079]",
      "dest": "address: address [14072,14079]"
    },
    {
      "src": "call_expression [26604,26636]",
      "dest": "call_expression [26492,26524]"
    },
    {
      "src": "(: ( [20424,20425]",
      "dest": "(: ( [20424,20425]"
    },
    {
      "src": "call_argument [24004,24017]",
      "dest": "call_argument [24004,24017]"
    },
    {
      "src": "): ) [26851,26852]",
      "dest": "): ) [26700,26701]"
    },
    {
      "src": "identifier: spender [1659,1666]",
      "dest": "identifier: spender [1659,1666]"
    },
    {
      "src": "primitive_type [13090,13097]",
      "dest": "primitive_type [13090,13097]"
    },
    {
      "src": "primitive_type [20439,20446]",
      "dest": "primitive_type [20439,20446]"
    },
    {
      "src": "comment: // an instance of this contract, which should be used via inheritance. [3196,3266]",
      "dest": "comment: // an instance of this contract, which should be used via inheritance. [3196,3266]"
    },
    {
      "src": "call_expression [23408,23438]",
      "dest": "call_expression [23408,23438]"
    },
    {
      "src": "type_name [16276,16282]",
      "dest": "type_name [16276,16282]"
    },
    {
      "src": "(: ( [26621,26622]",
      "dest": "(: ( [26509,26510]"
    },
    {
      "src": "identifier: sender [3440,3446]",
      "dest": "identifier: sender [3440,3446]"
    },
    {
      "src": "assignment_expression [15435,15471]",
      "dest": "assignment_expression [15435,15471]"
    },
    {
      "src": "(: ( [10091,10092]",
      "dest": "(: ( [10091,10092]"
    },
    {
      "src": "identifier: account [18891,18898]",
      "dest": "identifier: account [18891,18898]"
    },
    {
      "src": ".: . [3669,3670]",
      "dest": ".: . [3669,3670]"
    },
    {
      "src": "(: ( [23418,23419]",
      "dest": "(: ( [23418,23419]"
    },
    {
      "src": "): ) [15345,15346]",
      "dest": "): ) [15345,15346]"
    },
    {
      "src": "identifier: this [20043,20047]",
      "dest": "identifier: this [20043,20047]"
    },
    {
      "src": "primitive_type [24168,24175]",
      "dest": "primitive_type [24168,24175]"
    },
    {
      "src": ",: , [10446,10447]",
      "dest": ",: , [10446,10447]"
    },
    {
      "src": "primitive_type [18105,18109]",
      "dest": "primitive_type [18105,18109]"
    },
    {
      "src": "{: { [43,44]",
      "dest": "{: { [43,44]"
    },
    {
      "src": "(: ( [17339,17340]",
      "dest": "(: ( [17339,17340]"
    },
    {
      "src": "(: ( [14701,14702]",
      "dest": "(: ( [14701,14702]"
    },
    {
      "src": "uint256: uint256 [4704,4711]",
      "dest": "uint256: uint256 [4704,4711]"
    },
    {
      "src": "address: address [10988,10995]",
      "dest": "address: address [10988,10995]"
    },
    {
      "src": "identifier: amount [13471,13477]",
      "dest": "identifier: amount [13471,13477]"
    },
    {
      "src": "primitive_type [617,621]",
      "dest": "primitive_type [617,621]"
    },
    {
      "src": "bool: bool [2106,2110]",
      "dest": "bool: bool [2106,2110]"
    },
    {
      "src": "parameter [10409,10413]",
      "dest": "parameter [10409,10413]"
    },
    {
      "src": "call_expression [25005,25083]",
      "dest": "call_expression [25005,25083]"
    },
    {
      "src": "type_name [9277,9284]",
      "dest": "type_name [9277,9284]"
    },
    {
      "src": "(: ( [3476,3477]",
      "dest": "(: ( [3476,3477]"
    },
    {
      "src": "comment: /* ##### Admin ##### */ [27017,27040]",
      "dest": "comment: /* ##### Admin ##### */ [26943,26966]"
    },
    {
      "src": ",: , [5175,5176]",
      "dest": ",: , [5175,5176]"
    },
    {
      "src": "primitive_type [9193,9200]",
      "dest": "primitive_type [9193,9200]"
    },
    {
      "src": ",: , [11082,11083]",
      "dest": ",: , [11082,11083]"
    },
    {
      "src": "internal: internal [13853,13861]",
      "dest": "internal: internal [13853,13861]"
    },
    {
      "src": "call_argument [23220,23227]",
      "dest": "call_argument [23220,23227]"
    },
    {
      "src": "identifier: safeTransferFrom [20592,20608]",
      "dest": "identifier: safeTransferFrom [20592,20608]"
    },
    {
      "src": "call_argument [11073,11082]",
      "dest": "call_argument [11073,11082]"
    },
    {
      "src": "identifier: require [23212,23219]",
      "dest": "identifier: require [23212,23219]"
    },
    {
      "src": "(: ( [12494,12495]",
      "dest": "(: ( [12494,12495]"
    },
    {
      "src": "type_name [6898,6905]",
      "dest": "type_name [6898,6905]"
    },
    {
      "src": "variable_declaration_statement [18363,18380]",
      "dest": "variable_declaration_statement [18363,18380]"
    },
    {
      "src": "call_expression [26300,26325]",
      "dest": "call_expression [26201,26226]"
    },
    {
      "src": "(: ( [15285,15286]",
      "dest": "(: ( [15285,15286]"
    },
    {
      "src": "binary_expression [9057,9063]",
      "dest": "binary_expression [9057,9063]"
    },
    {
      "src": "): ) [9037,9038]",
      "dest": "): ) [9037,9038]"
    },
    {
      "src": "uint256: uint256 [317,324]",
      "dest": "uint256: uint256 [317,324]"
    },
    {
      "src": ",: , [20759,20760]",
      "dest": ",: , [20759,20760]"
    },
    {
      "src": "address: address [18923,18930]",
      "dest": "address: address [18923,18930]"
    },
    {
      "src": "\": \" [23063,23064]",
      "dest": "\": \" [23063,23064]"
    },
    {
      "src": "(: ( [24167,24168]",
      "dest": "(: ( [24167,24168]"
    },
    {
      "src": "primitive_type [18923,18938]",
      "dest": "primitive_type [18923,18938]"
    },
    {
      "src": "(: ( [26053,26054]",
      "dest": "(: ( [25954,25955]"
    },
    {
      "src": ",: , [7714,7715]",
      "dest": ",: , [7714,7715]"
    },
    {
      "src": "call_argument [14623,14659]",
      "dest": "call_argument [14623,14659]"
    },
    {
      "src": "parameter [19965,19990]",
      "dest": "parameter [19965,19990]"
    },
    {
      "src": "primitive_type [7616,7623]",
      "dest": "primitive_type [7616,7623]"
    },
    {
      "src": "return: return [26772,26778]",
      "dest": "return: return [26621,26627]"
    },
    {
      "src": "): ) [8377,8378]",
      "dest": "): ) [8377,8378]"
    },
    {
      "src": "}: } [26213,26214]",
      "dest": "}: } [26114,26115]"
    },
    {
      "src": "uint256: uint256 [1668,1675]",
      "dest": "uint256: uint256 [1668,1675]"
    },
    {
      "src": "{: { [15969,15970]",
      "dest": "{: { [15969,15970]"
    },
    {
      "src": "): ) [14472,14473]",
      "dest": "): ) [14472,14473]"
    },
    {
      "src": "identifier: errorMessage [9065,9077]",
      "dest": "identifier: errorMessage [9065,9077]"
    },
    {
      "src": "event_paramater [24168,24197]",
      "dest": "event_paramater [24168,24197]"
    },
    {
      "src": "identifier: isOwner [24644,24651]",
      "dest": "identifier: isOwner [24644,24651]"
    },
    {
      "src": "identifier: selector [20549,20557]",
      "dest": "identifier: selector [20549,20557]"
    },
    {
      "src": "type_name [18065,18072]",
      "dest": "type_name [18065,18072]"
    },
    {
      "src": "number_literal: 0 [21165,21166]",
      "dest": "number_literal: 0 [21165,21166]"
    },
    {
      "src": "primitive_type [14512,14519]",
      "dest": "primitive_type [14512,14519]"
    },
    {
      "src": "(: ( [26873,26874]",
      "dest": "(: ( [26722,26723]"
    },
    {
      "src": "): ) [26506,26507]",
      "dest": "): ) [26394,26395]"
    },
    {
      "src": "type_name [24199,24206]",
      "dest": "type_name [24199,24206]"
    },
    {
      "src": "primitive_type [8370,8377]",
      "dest": "primitive_type [8370,8377]"
    },
    {
      "src": "expression_statement [24580,24612]",
      "dest": "expression_statement [24580,24612]"
    },
    {
      "src": "identifier: onlyOwner [24558,24567]",
      "dest": "identifier: onlyOwner [24558,24567]"
    },
    {
      "src": "identifier: _msgSender [12449,12459]",
      "dest": "identifier: _msgSender [12449,12459]"
    },
    {
      "src": "uint256: uint256 [13837,13844]",
      "dest": "uint256: uint256 [13837,13844]"
    },
    {
      "src": "): ) [24243,24244]",
      "dest": "): ) [24243,24244]"
    },
    {
      "src": ",: , [23622,23623]",
      "dest": ",: , [23622,23623]"
    },
    {
      "src": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [6048,6127]",
      "dest": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [6048,6127]"
    },
    {
      "src": "binary_expression [24698,24719]",
      "dest": "binary_expression [24698,24719]"
    },
    {
      "src": "\": \" [24132,24133]",
      "dest": "\": \" [24132,24133]"
    },
    {
      "src": "address: address [12366,12373]",
      "dest": "address: address [12366,12373]"
    },
    {
      "src": "(: ( [11760,11761]",
      "dest": "(: ( [11760,11761]"
    },
    {
      "src": "bool: bool [24675,24679]",
      "dest": "bool: bool [24675,24679]"
    },
    {
      "src": ",: , [25969,25970]",
      "dest": ",: , [25840,25841]"
    },
    {
      "src": "identifier: msg [26574,26577]",
      "dest": "identifier: msg [26462,26465]"
    },
    {
      "src": "): ) [23190,23191]",
      "dest": "): ) [23190,23191]"
    },
    {
      "src": "): ) [14659,14660]",
      "dest": "): ) [14659,14660]"
    },
    {
      "src": "{: { [26914,26915]",
      "dest": "{: { [26763,26764]"
    },
    {
      "src": ",: , [25224,25225]",
      "dest": ",: , [25224,25225]"
    },
    {
      "src": "call_argument [23002,23029]",
      "dest": "call_argument [23002,23029]"
    },
    {
      "src": "(: ( [9954,9955]",
      "dest": "(: ( [9954,9955]"
    },
    {
      "src": "primitive_type [14742,14749]",
      "dest": "primitive_type [14742,14749]"
    },
    {
      "src": "identifier: token [21940,21945]",
      "dest": "identifier: token [21940,21945]"
    },
    {
      "src": "uint256: uint256 [4723,4730]",
      "dest": "uint256: uint256 [4723,4730]"
    },
    {
      "src": "[: [ [14027,14028]",
      "dest": "[: [ [14027,14028]"
    },
    {
      "src": "identifier: returndata [23419,23429]",
      "dest": "identifier: returndata [23419,23429]"
    },
    {
      "src": "): ) [24984,24985]",
      "dest": "): ) [24984,24985]"
    },
    {
      "src": "identifier: sender [26626,26632]",
      "dest": "identifier: sender [26514,26520]"
    },
    {
      "src": "expression_statement [21921,22018]",
      "dest": "expression_statement [21921,22018]"
    },
    {
      "src": "function: function [258,266]",
      "dest": "function: function [258,266]"
    },
    {
      "src": ",: , [21612,21613]",
      "dest": ",: , [21612,21613]"
    },
    {
      "src": "array_access [14018,14036]",
      "dest": "array_access [14018,14036]"
    },
    {
      "src": "{: { [9145,9146]",
      "dest": "{: { [9145,9146]"
    },
    {
      "src": "type_cast_expression [13178,13188]",
      "dest": "type_cast_expression [13178,13188]"
    },
    {
      "src": "call_argument [13364,13370]",
      "dest": "call_argument [13364,13370]"
    },
    {
      "src": "): ) [15257,15258]",
      "dest": "): ) [15257,15258]"
    },
    {
      "src": "memory: memory [23156,23162]",
      "dest": "memory: memory [23156,23162]"
    },
    {
      "src": "identifier: value [20563,20568]",
      "dest": "identifier: value [20563,20568]"
    },
    {
      "src": ",: , [13123,13124]",
      "dest": ",: , [13123,13124]"
    },
    {
      "src": "address: address [18957,18964]",
      "dest": "address: address [18957,18964]"
    },
    {
      "src": "visibility [21486,21494]",
      "dest": "visibility [21486,21494]"
    },
    {
      "src": "visibility [10393,10399]",
      "dest": "visibility [10393,10399]"
    },
    {
      "src": "): ) [26556,26557]",
      "dest": "): ) [26444,26445]"
    },
    {
      "src": "call_argument [14093,14099]",
      "dest": "call_argument [14093,14099]"
    },
    {
      "src": "call_argument [15511,15517]",
      "dest": "call_argument [15511,15517]"
    },
    {
      "src": "user_defined_type [20425,20431]",
      "dest": "user_defined_type [20425,20431]"
    },
    {
      "src": "identifier: IERC20 [20425,20431]",
      "dest": "identifier: IERC20 [20425,20431]"
    },
    {
      "src": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [7766,7843]",
      "dest": "comment: // assert(a == b * c + a % b); // There is no case in which this doesn't hold [7766,7843]"
    },
    {
      "src": "identifier: initialized [23540,23551]",
      "dest": "identifier: initialized [23540,23551]"
    },
    {
      "src": "memory: memory [16283,16289]",
      "dest": "memory: memory [16283,16289]"
    },
    {
      "src": "variable_declaration_statement [26033,26056]",
      "dest": "variable_declaration_statement [25934,25957]"
    },
    {
      "src": "(: ( [26973,26974]",
      "dest": "(: ( [26822,26823]"
    },
    {
      "src": "identifier: amount [14702,14708]",
      "dest": "identifier: amount [14702,14708]"
    },
    {
      "src": "identifier: _msgSender [15824,15834]",
      "dest": "identifier: _msgSender [15824,15834]"
    },
    {
      "src": "parameter [11039,11043]",
      "dest": "parameter [11039,11043]"
    },
    {
      "src": "(: ( [27183,27184]",
      "dest": "(: ( [26859,26860]"
    },
    {
      "src": "return_type_definition [10400,10414]",
      "dest": "return_type_definition [10400,10414]"
    },
    {
      "src": "function_body [13862,14107]",
      "dest": "function_body [13862,14107]"
    },
    {
      "src": ",: , [21452,21453]",
      "dest": ",: , [21452,21453]"
    },
    {
      "src": "): ) [6276,6277]",
      "dest": "): ) [6276,6277]"
    },
    {
      "src": "visibility [23828,23836]",
      "dest": "visibility [23828,23836]"
    },
    {
      "src": "parameter [26399,26411]",
      "dest": "parameter [26257,26269]"
    },
    {
      "src": ",: , [9136,9137]",
      "dest": ",: , [9136,9137]"
    },
    {
      "src": "identifier: account [14028,14035]",
      "dest": "identifier: account [14028,14035]"
    },
    {
      "src": "uint256: uint256 [8336,8343]",
      "dest": "uint256: uint256 [8336,8343]"
    },
    {
      "src": "type_name [5995,6002]",
      "dest": "type_name [5995,6002]"
    },
    {
      "src": "array_access [24028,24035]",
      "dest": "array_access [24028,24035]"
    },
    {
      "src": "call_argument [24588,24597]",
      "dest": "call_argument [24588,24597]"
    },
    {
      "src": "primitive_type [12424,12428]",
      "dest": "primitive_type [12424,12428]"
    },
    {
      "src": "identifier: b [5704,5705]",
      "dest": "identifier: b [5704,5705]"
    },
    {
      "src": ".: . [26538,26539]",
      "dest": ".: . [26426,26427]"
    },
    {
      "src": "type_alias [20345,20353]",
      "dest": "type_alias [20345,20353]"
    },
    {
      "src": "address: address [19965,19972]",
      "dest": "address: address [19965,19972]"
    },
    {
      "src": "parameter [22435,22447]",
      "dest": "parameter [22435,22447]"
    },
    {
      "src": "internal: internal [6920,6928]",
      "dest": "internal: internal [6920,6928]"
    },
    {
      "src": "{: { [14483,14484]",
      "dest": "{: { [14483,14484]"
    },
    {
      "src": ",: , [21201,21202]",
      "dest": ",: , [21201,21202]"
    },
    {
      "src": "return_type_definition [6020,6037]",
      "dest": "return_type_definition [6020,6037]"
    },
    {
      "src": "}: } [2591,2592]",
      "dest": "}: } [2591,2592]"
    },
    {
      "src": "expression_statement [21147,21298]",
      "dest": "expression_statement [21147,21298]"
    },
    {
      "src": "}: } [10204,10205]",
      "dest": "}: } [10204,10205]"
    },
    {
      "src": "identifier: amount [13980,13986]",
      "dest": "identifier: amount [13980,13986]"
    },
    {
      "src": "string_literal [25959,25969]",
      "dest": "string_literal [25832,25840]"
    },
    {
      "src": "[: [ [11798,11799]",
      "dest": "[: [ [11798,11799]"
    },
    {
      "src": "function: function [20403,20411]",
      "dest": "function: function [20403,20411]"
    },
    {
      "src": "type_name [4723,4730]",
      "dest": "type_name [4723,4730]"
    },
    {
      "src": "return: return [5716,5722]",
      "dest": "return: return [5716,5722]"
    },
    {
      "src": "modifier_definition [23566,23692]",
      "dest": "modifier_definition [23566,23692]"
    },
    {
      "src": "=: = [24108,24109]",
      "dest": "=: = [24108,24109]"
    },
    {
      "src": "external: external [294,302]",
      "dest": "external: external [294,302]"
    },
    {
      "src": "}: } [14106,14107]",
      "dest": "}: } [14106,14107]"
    },
    {
      "src": "private: private [9287,9294]",
      "dest": "private: private [9287,9294]"
    },
    {
      "src": "identifier: recipient [9886,9895]",
      "dest": "identifier: recipient [9886,9895]"
    },
    {
      "src": "visibility [9007,9015]",
      "dest": "visibility [9007,9015]"
    },
    {
      "src": "): ) [8432,8433]",
      "dest": "): ) [8432,8433]"
    },
    {
      "src": "{: { [20017,20018]",
      "dest": "{: { [20017,20018]"
    },
    {
      "src": "type_name [18363,18370]",
      "dest": "type_name [18363,18370]"
    },
    {
      "src": "visibility [9425,9431]",
      "dest": "visibility [9425,9431]"
    },
    {
      "src": "(: ( [5983,5984]",
      "dest": "(: ( [5983,5984]"
    },
    {
      "src": "identifier: _transfer [13080,13089]",
      "dest": "identifier: _transfer [13080,13089]"
    },
    {
      "src": "false [23554,23559]",
      "dest": "false [23554,23559]"
    },
    {
      "src": "comment: /**      * @dev Converts an `address` into `address payable`. Note that this is      * simply a type cast: the actual underlying value is not changed.      *      * _Available since v2.4.0._      */ [18661,18859]",
      "dest": "comment: /**      * @dev Converts an `address` into `address payable`. Note that this is      * simply a type cast: the actual underlying value is not changed.      *      * _Available since v2.4.0._      */ [18661,18859]"
    },
    {
      "src": "call_argument [13521,13527]",
      "dest": "call_argument [13521,13527]"
    },
    {
      "src": "function: function [1634,1642]",
      "dest": "function: function [1634,1642]"
    },
    {
      "src": "payable: payable [18931,18938]",
      "dest": "payable: payable [18931,18938]"
    },
    {
      "src": "memory: memory [8986,8992]",
      "dest": "memory: memory [8986,8992]"
    },
    {
      "src": "call_expression [20709,20777]",
      "dest": "call_expression [20709,20777]"
    },
    {
      "src": "external: external [26413,26421]",
      "dest": "external: external [26271,26279]"
    },
    {
      "src": "view: view [9432,9436]",
      "dest": "view: view [9432,9436]"
    },
    {
      "src": "primitive_type [23177,23184]",
      "dest": "primitive_type [23177,23184]"
    },
    {
      "src": "returns: returns [11030,11037]",
      "dest": "returns: returns [11030,11037]"
    },
    {
      "src": "): ) [26912,26913]",
      "dest": "): ) [26761,26762]"
    },
    {
      "src": "expression_statement [24621,24623]",
      "dest": "expression_statement [24621,24623]"
    },
    {
      "src": "parameter [4670,4679]",
      "dest": "parameter [4670,4679]"
    },
    {
      "src": "): ) [13851,13852]",
      "dest": "): ) [13851,13852]"
    },
    {
      "src": "uint: uint [27108,27112]",
      "dest": "uint: uint [26997,27001]"
    },
    {
      "src": "call_argument [5174,5175]",
      "dest": "call_argument [5174,5175]"
    },
    {
      "src": "call_argument [21196,21200]",
      "dest": "call_argument [21196,21200]"
    },
    {
      "src": "identifier: callOptionalReturn [22416,22434]",
      "dest": "identifier: callOptionalReturn [22416,22434]"
    },
    {
      "src": "address: address [9568,9575]",
      "dest": "address: address [9568,9575]"
    },
    {
      "src": "identifier: FEE_PRECISION [27321,27334]",
      "dest": "identifier: FEE_PRECISION [27084,27097]"
    },
    {
      "src": "(: ( [21155,21156]",
      "dest": "(: ( [21155,21156]"
    },
    {
      "src": "(: ( [15876,15877]",
      "dest": "(: ( [15876,15877]"
    },
    {
      "src": "string_literal [5180,5212]",
      "dest": "string_literal [5180,5212]"
    },
    {
      "src": ",: , [13519,13520]",
      "dest": ",: , [13519,13520]"
    },
    {
      "src": "user_defined_type [15962,15968]",
      "dest": "user_defined_type [15962,15968]"
    },
    {
      "src": "): ) [5637,5638]",
      "dest": "): ) [5637,5638]"
    },
    {
      "src": "return_type_definition [7607,7624]",
      "dest": "return_type_definition [7607,7624]"
    },
    {
      "src": "state_mutability [16494,16498]",
      "dest": "state_mutability [16494,16498]"
    },
    {
      "src": "[: [ [24032,24033]",
      "dest": "[: [ [24032,24033]"
    },
    {
      "src": "\": \" [15307,15308]",
      "dest": "\": \" [15307,15308]"
    },
    {
      "src": "identifier: redeemFactor [26494,26506]",
      "dest": "identifier: redeemFactor [26382,26394]"
    },
    {
      "src": "call_expression [15859,15871]",
      "dest": "call_expression [15859,15871]"
    },
    {
      "src": "}: } [16749,16750]",
      "dest": "}: } [16749,16750]"
    },
    {
      "src": "[: [ [15446,15447]",
      "dest": "[: [ [15446,15447]"
    },
    {
      "src": "parameter [10360,10375]",
      "dest": "parameter [10360,10375]"
    },
    {
      "src": "identifier: decreaseAllowance [12348,12365]",
      "dest": "identifier: decreaseAllowance [12348,12365]"
    },
    {
      "src": "identifier: ibDUSD [25383,25389]",
      "dest": "identifier: ibDUSD [25383,25389]"
    },
    {
      "src": "array_access [10171,10189]",
      "dest": "array_access [10171,10189]"
    },
    {
      "src": "uint256: uint256 [5110,5117]",
      "dest": "uint256: uint256 [5110,5117]"
    },
    {
      "src": "identifier: _balances [13997,14006]",
      "dest": "identifier: _balances [13997,14006]"
    },
    {
      "src": "identifier: account [15780,15787]",
      "dest": "identifier: account [15780,15787]"
    },
    {
      "src": "identifier: account [14449,14456]",
      "dest": "identifier: account [14449,14456]"
    },
    {
      "src": "yul_identifier [18578,18585]",
      "dest": "yul_identifier [18578,18585]"
    },
    {
      "src": "type_name [2053,2060]",
      "dest": "type_name [2053,2060]"
    },
    {
      "src": "internal: internal [8347,8355]",
      "dest": "internal: internal [8347,8355]"
    },
    {
      "src": "identifier: _totalSupply [9472,9484]",
      "dest": "identifier: _totalSupply [9472,9484]"
    },
    {
      "src": "(: ( [24391,24392]",
      "dest": "(: ( [24391,24392]"
    },
    {
      "src": "(: ( [17316,17317]",
      "dest": "(: ( [17316,17317]"
    },
    {
      "src": "identifier: _balances [13322,13331]",
      "dest": "identifier: _balances [13322,13331]"
    },
    {
      "src": "state_variable_declaration [25482,25518]",
      "dest": "state_variable_declaration [25482,25518]"
    },
    {
      "src": "call_argument [12449,12461]",
      "dest": "call_argument [12449,12461]"
    },
    {
      "src": "): ) [14760,14761]",
      "dest": "): ) [14760,14761]"
    },
    {
      "src": "type_name [617,621]",
      "dest": "type_name [617,621]"
    },
    {
      "src": "number_literal: 0 [6275,6276]",
      "dest": "number_literal: 0 [6275,6276]"
    },
    {
      "src": "identifier: transferFrom [20738,20750]",
      "dest": "identifier: transferFrom [20738,20750]"
    },
    {
      "src": "expression_statement [23866,23897]",
      "dest": "expression_statement [23866,23897]"
    },
    {
      "src": "identifier: dusd [26604,26608]",
      "dest": "identifier: dusd [26492,26496]"
    },
    {
      "src": "identifier: call [20194,20198]",
      "dest": "identifier: call [20194,20198]"
    },
    {
      "src": "binary_expression [9095,9100]",
      "dest": "binary_expression [9095,9100]"
    },
    {
      "src": "member_expression [26604,26621]",
      "dest": "member_expression [26492,26509]"
    },
    {
      "src": "type_name [21440,21446]",
      "dest": "type_name [21440,21446]"
    },
    {
      "src": "\": \" [24599,24600]",
      "dest": "\": \" [24599,24600]"
    },
    {
      "src": "): ) [25082,25083]",
      "dest": "): ) [25082,25083]"
    },
    {
      "src": "type_name [2318,2325]",
      "dest": "type_name [2318,2325]"
    },
    {
      "src": "identifier: newAllowance [21801,21813]",
      "dest": "identifier: newAllowance [21801,21813]"
    },
    {
      "src": ",: , [15241,15242]",
      "dest": ",: , [15241,15242]"
    },
    {
      "src": "\": \" [13903,13904]",
      "dest": "\": \" [13903,13904]"
    },
    {
      "src": "{: { [16321,16322]",
      "dest": "{: { [16321,16322]"
    },
    {
      "src": "call_argument [20732,20759]",
      "dest": "call_argument [20732,20759]"
    },
    {
      "src": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [987,1629]",
      "dest": "comment: /**      * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.      *      * Returns a boolean value indicating whether the operation succeeded.      *      * IMPORTANT: Beware that changing an allowance with this method brings the risk      * that someone may use both the old and the new allowance by unfortunate      * transaction ordering. One possible solution to mitigate this race      * condition is to first reduce the spender's allowance to 0 and set the      * desired value afterwards:      * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      *      * Emits an {Approval} event.      */ [987,1629]"
    },
    {
      "src": "identifier: r [26634,26635]",
      "dest": "identifier: r [26522,26523]"
    },
    {
      "src": "parameter [10988,11005]",
      "dest": "parameter [10988,11005]"
    },
    {
      "src": "identifier: a [7751,7752]",
      "dest": "identifier: a [7751,7752]"
    },
    {
      "src": "): ) [13139,13140]",
      "dest": "): ) [13139,13140]"
    },
    {
      "src": "identifier: b [7562,7563]",
      "dest": "identifier: b [7562,7563]"
    },
    {
      "src": "parameter [9929,9933]",
      "dest": "parameter [9929,9933]"
    },
    {
      "src": "primitive_type [4670,4677]",
      "dest": "primitive_type [4670,4677]"
    },
    {
      "src": "user_defined_type [25422,25427]",
      "dest": "user_defined_type [25422,25427]"
    },
    {
      "src": "(: ( [15814,15815]",
      "dest": "(: ( [15814,15815]"
    },
    {
      "src": "): ) [26449,26450]",
      "dest": "): ) [26337,26338]"
    },
    {
      "src": "pure: pure [18909,18913]",
      "dest": "pure: pure [18909,18913]"
    },
    {
      "src": "visibility [14474,14482]",
      "dest": "visibility [14474,14482]"
    },
    {
      "src": "(: ( [14749,14750]",
      "dest": "(: ( [14749,14750]"
    },
    {
      "src": "indexed: indexed [2326,2333]",
      "dest": "indexed: indexed [2326,2333]"
    },
    {
      "src": "identifier: name [16480,16484]",
      "dest": "identifier: name [16480,16484]"
    },
    {
      "src": "&&: && [18629,18631]",
      "dest": "&&: && [18629,18631]"
    },
    {
      "src": "expression_statement [3526,3531]",
      "dest": "expression_statement [3526,3531]"
    },
    {
      "src": "parameter [5579,5605]",
      "dest": "parameter [5579,5605]"
    },
    {
      "src": "constructor: constructor [24231,24242]",
      "dest": "constructor: constructor [24231,24242]"
    },
    {
      "src": "identifier: mod [8321,8324]",
      "dest": "identifier: mod [8321,8324]"
    },
    {
      "src": "\": \" [25959,25960]",
      "dest": "\": \" [25832,25833]"
    },
    {
      "src": "call_expression [21528,21567]",
      "dest": "call_expression [21528,21567]"
    },
    {
      "src": "): ) [26878,26879]",
      "dest": "): ) [26727,26728]"
    },
    {
      "src": "type_name [23535,23539]",
      "dest": "type_name [23535,23539]"
    },
    {
      "src": "(: ( [11169,11170]",
      "dest": "(: ( [11169,11170]"
    },
    {
      "src": "mapping: mapping [9184,9191]",
      "dest": "mapping: mapping [9184,9191]"
    },
    {
      "src": "uint256: uint256 [6909,6916]",
      "dest": "uint256: uint256 [6909,6916]"
    },
    {
      "src": "call_argument [21326,21331]",
      "dest": "call_argument [21326,21331]"
    },
    {
      "src": "call_argument [15789,15795]",
      "dest": "call_argument [15789,15795]"
    },
    {
      "src": "identifier: position [25216,25224]",
      "dest": "identifier: position [25216,25224]"
    },
    {
      "src": "comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [18210,18295]",
      "dest": "comment: // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned [18210,18295]"
    },
    {
      "src": ",: , [2316,2317]",
      "dest": ",: , [2316,2317]"
    },
    {
      "src": "call_argument [23996,24002]",
      "dest": "call_argument [23996,24002]"
    },
    {
      "src": "return_type_definition [5135,5152]",
      "dest": "return_type_definition [5135,5152]"
    },
    {
      "src": "event: event [2512,2517]",
      "dest": "event: event [2512,2517]"
    },
    {
      "src": "identifier: amount [9980,9986]",
      "dest": "identifier: amount [9980,9986]"
    },
    {
      "src": "string [13372,13412]",
      "dest": "string [13372,13412]"
    },
    {
      "src": ",: , [6907,6908]",
      "dest": ",: , [6907,6908]"
    },
    {
      "src": "primitive_type [2338,2345]",
      "dest": "primitive_type [2338,2345]"
    },
    {
      "src": "(: ( [26801,26802]",
      "dest": "(: ( [26650,26651]"
    },
    {
      "src": "]: ] [9649,9650]",
      "dest": "]: ] [9649,9650]"
    },
    {
      "src": "expression_statement [13322,13414]",
      "dest": "expression_statement [13322,13414]"
    },
    {
      "src": "address: address [13891,13898]",
      "dest": "address: address [13891,13898]"
    },
    {
      "src": "(: ( [20731,20732]",
      "dest": "(: ( [20731,20732]"
    },
    {
      "src": ",: , [21378,21379]",
      "dest": ",: , [21378,21379]"
    },
    {
      "src": "): ) [597,598]",
      "dest": "): ) [597,598]"
    },
    {
      "src": "view: view [23837,23841]",
      "dest": "view: view [23837,23841]"
    },
    {
      "src": "type_name [10377,10384]",
      "dest": "type_name [10377,10384]"
    },
    {
      "src": "function_body [13150,13535]",
      "dest": "function_body [13150,13535]"
    },
    {
      "src": "[: [ [13455,13456]",
      "dest": "[: [ [13455,13456]"
    },
    {
      "src": "}: } [11851,11852]",
      "dest": "}: } [11851,11852]"
    },
    {
      "src": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [2594,3093]",
      "dest": "comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [2594,3093]"
    },
    {
      "src": "parameter [20425,20437]",
      "dest": "parameter [20425,20437]"
    },
    {
      "src": "identifier: amount [20000,20006]",
      "dest": "identifier: amount [20000,20006]"
    },
    {
      "src": "function_body [24254,24301]",
      "dest": "function_body [24254,24301]"
    },
    {
      "src": "array_access [13446,13466]",
      "dest": "array_access [13446,13466]"
    },
    {
      "src": "function_definition [13805,14107]",
      "dest": "function_definition [13805,14107]"
    },
    {
      "src": "call_argument [27205,27216]",
      "dest": "call_argument [26868,26872]"
    },
    {
      "src": "visibility [15755,15763]",
      "dest": "visibility [15755,15763]"
    },
    {
      "src": ",: , [26112,26113]",
      "dest": ",: , [26013,26014]"
    },
    {
      "src": "identifier: a [8333,8334]",
      "dest": "identifier: a [8333,8334]"
    },
    {
      "src": "type_name [1668,1675]",
      "dest": "type_name [1668,1675]"
    },
    {
      "src": "modifier_definition [24549,24629]",
      "dest": "modifier_definition [24549,24629]"
    },
    {
      "src": "type_name [25469,25475]",
      "dest": "type_name [25469,25475]"
    },
    {
      "src": "string_literal [15387,15423]",
      "dest": "string_literal [15387,15423]"
    },
    {
      "src": "identifier: spender [21203,21210]",
      "dest": "identifier: spender [21203,21210]"
    },
    {
      "src": "address: address [13178,13185]",
      "dest": "address: address [13178,13185]"
    },
    {
      "src": "member_expression [15838,15876]",
      "dest": "member_expression [15838,15876]"
    },
    {
      "src": "extcodehash: extcodehash [18566,18577]",
      "dest": "extcodehash: extcodehash [18566,18577]"
    },
    {
      "src": "return_type_definition [4695,4712]",
      "dest": "return_type_definition [4695,4712]"
    },
    {
      "src": "identifier: recipient [10996,11005]",
      "dest": "identifier: recipient [10996,11005]"
    },
    {
      "src": "identifier: c [4814,4815]",
      "dest": "identifier: c [4814,4815]"
    },
    {
      "src": "call_argument [20205,20211]",
      "dest": "call_argument [20205,20211]"
    },
    {
      "src": "identifier: harvest [25293,25300]",
      "dest": "identifier: harvest [25293,25300]"
    },
    {
      "src": "type_name [19992,19999]",
      "dest": "type_name [19992,19999]"
    },
    {
      "src": "comment: // Solidity only automatically asserts when dividing by 0 [7635,7692]",
      "dest": "comment: // Solidity only automatically asserts when dividing by 0 [7635,7692]"
    },
    {
      "src": "): ) [15835,15836]",
      "dest": "): ) [15835,15836]"
    },
    {
      "src": "address: address [20637,20644]",
      "dest": "address: address [20637,20644]"
    },
    {
      "src": "interface_declaration [26,2592]",
      "dest": "interface_declaration [26,2592]"
    },
    {
      "src": "identifier: value [20851,20856]",
      "dest": "identifier: value [20851,20856]"
    },
    {
      "src": "identifier: spender [20834,20841]",
      "dest": "identifier: spender [20834,20841]"
    },
    {
      "src": "returns: returns [26747,26754]",
      "dest": "returns: returns [26596,26603]"
    },
    {
      "src": "uint256: uint256 [21471,21478]",
      "dest": "uint256: uint256 [21471,21478]"
    },
    {
      "src": "type_cast_expression [18957,18982]",
      "dest": "type_cast_expression [18957,18982]"
    },
    {
      "src": "string [21231,21287]",
      "dest": "string [21231,21287]"
    },
    {
      "src": "state_mutability [24661,24665]",
      "dest": "state_mutability [24661,24665]"
    },
    {
      "src": "identifier: spender [15454,15461]",
      "dest": "identifier: spender [15454,15461]"
    },
    {
      "src": "view: view [152,156]",
      "dest": "view: view [152,156]"
    },
    {
      "src": "expression_statement [16379,16400]",
      "dest": "expression_statement [16379,16400]"
    },
    {
      "src": "{: { [20333,20334]",
      "dest": "{: { [20333,20334]"
    },
    {
      "src": "uint: uint [26399,26403]",
      "dest": "uint: uint [26257,26261]"
    },
    {
      "src": "call_argument [15502,15509]",
      "dest": "call_argument [15502,15509]"
    },
    {
      "src": "): ) [1682,1683]",
      "dest": "): ) [1682,1683]"
    },
    {
      "src": "return: return [16729,16735]",
      "dest": "return: return [16729,16735]"
    },
    {
      "src": "expression_statement [13872,13938]",
      "dest": "expression_statement [13872,13938]"
    },
    {
      "src": "return_type_definition [3493,3515]",
      "dest": "return_type_definition [3493,3515]"
    },
    {
      "src": "): ) [15423,15424]",
      "dest": "): ) [15423,15424]"
    },
    {
      "src": "primitive_type [11039,11043]",
      "dest": "primitive_type [11039,11043]"
    },
    {
      "src": "}: } [25252,25253]",
      "dest": "}: } [25252,25253]"
    },
    {
      "src": "return_type_definition [963,980]",
      "dest": "return_type_definition [963,980]"
    },
    {
      "src": "identifier: _approve [10425,10433]",
      "dest": "identifier: _approve [10425,10433]"
    },
    {
      "src": "=>: => [9274,9276]",
      "dest": "=>: => [9274,9276]"
    },
    {
      "src": "(: ( [11795,11796]",
      "dest": "(: ( [11795,11796]"
    },
    {
      "src": "(: ( [13363,13364]",
      "dest": "(: ( [13363,13364]"
    },
    {
      "src": "): ) [26807,26808]",
      "dest": "): ) [26656,26657]"
    },
    {
      "src": ".: . [21642,21643]",
      "dest": ".: . [21642,21643]"
    },
    {
      "src": "]: ] [14035,14036]",
      "dest": "]: ] [14035,14036]"
    },
    {
      "src": "}: } [8439,8440]",
      "dest": "}: } [8439,8440]"
    },
    {
      "src": "(: ( [6355,6356]",
      "dest": "(: ( [6355,6356]"
    },
    {
      "src": "): ) [3514,3515]",
      "dest": "): ) [3514,3515]"
    },
    {
      "src": ">: > [23297,23298]",
      "dest": ">: > [23297,23298]"
    },
    {
      "src": "): ) [21394,21395]",
      "dest": "): ) [21394,21395]"
    },
    {
      "src": "parameter [16256,16274]",
      "dest": "parameter [16256,16274]"
    },
    {
      "src": "function: function [12339,12347]",
      "dest": "function: function [12339,12347]"
    },
    {
      "src": "parameter [16704,16717]",
      "dest": "parameter [16704,16717]"
    },
    {
      "src": "array_access [9632,9650]",
      "dest": "array_access [9632,9650]"
    },
    {
      "src": "type_name [20166,20170]",
      "dest": "type_name [20166,20170]"
    },
    {
      "src": "bool: bool [18105,18109]",
      "dest": "bool: bool [18105,18109]"
    },
    {
      "src": "identifier: returndata [23163,23173]",
      "dest": "identifier: returndata [23163,23173]"
    },
    {
      "src": "call_argument [21572,21577]",
      "dest": "call_argument [21572,21577]"
    },
    {
      "src": "identifier: codehash [18371,18379]",
      "dest": "identifier: codehash [18371,18379]"
    },
    {
      "src": "}: } [6429,6430]",
      "dest": "}: } [6429,6430]"
    },
    {
      "src": "variable_declaration_statement [18389,18478]",
      "dest": "variable_declaration_statement [18389,18478]"
    },
    {
      "src": "): ) [5151,5152]",
      "dest": "): ) [5151,5152]"
    },
    {
      "src": ",: , [23880,23881]",
      "dest": ",: , [23880,23881]"
    },
    {
      "src": "type_name [18923,18938]",
      "dest": "type_name [18923,18938]"
    },
    {
      "src": "function_definition [546,623]",
      "dest": "function_definition [546,623]"
    },
    {
      "src": "]: ] [14609,14610]",
      "dest": "]: ] [14609,14610]"
    },
    {
      "src": "constructor_definition [3271,3298]",
      "dest": "constructor_definition [3271,3298]"
    },
    {
      "src": "address: address [3402,3409]",
      "dest": "address: address [3402,3409]"
    },
    {
      "src": "call_argument [21614,21683]",
      "dest": "call_argument [21614,21683]"
    },
    {
      "src": "uint8: uint8 [17340,17345]",
      "dest": "uint8: uint8 [17340,17345]"
    },
    {
      "src": "call_expression [24580,24611]",
      "dest": "call_expression [24580,24611]"
    },
    {
      "src": "primitive_type [21188,21195]",
      "dest": "primitive_type [21188,21195]"
    },
    {
      "src": "): ) [10463,10464]",
      "dest": "): ) [10463,10464]"
    },
    {
      "src": "(: ( [18972,18973]",
      "dest": "(: ( [18972,18973]"
    },
    {
      "src": "(: ( [7542,7543]",
      "dest": "(: ( [7542,7543]"
    },
    {
      "src": "identifier: b [8403,8404]",
      "dest": "identifier: b [8403,8404]"
    },
    {
      "src": "call_argument [6976,6977]",
      "dest": "call_argument [6976,6977]"
    },
    {
      "src": "): ) [24679,24680]",
      "dest": "): ) [24679,24680]"
    },
    {
      "src": "(: ( [4658,4659]",
      "dest": "(: ( [4658,4659]"
    },
    {
      "src": "function_definition [3357,3453]",
      "dest": "function_definition [3357,3453]"
    },
    {
      "src": "\": \" [23644,23645]",
      "dest": "\": \" [23644,23645]"
    },
    {
      "src": "<: < [23876,23877]",
      "dest": "<: < [23876,23877]"
    },
    {
      "src": "call_expression [20511,20569]",
      "dest": "call_expression [20511,20569]"
    },
    {
      "src": "call_expression [26894,26907]",
      "dest": "call_expression [26743,26756]"
    },
    {
      "src": "(: ( [13089,13090]",
      "dest": "(: ( [13089,13090]"
    },
    {
      "src": "pure: pure [6015,6019]",
      "dest": "pure: pure [6015,6019]"
    },
    {
      "src": "indexed: indexed [2558,2565]",
      "dest": "indexed: indexed [2558,2565]"
    },
    {
      "src": "parameter [12424,12428]",
      "dest": "parameter [12424,12428]"
    },
    {
      "src": "user_defined_type [25548,25560]",
      "dest": "user_defined_type [25548,25560]"
    },
    {
      "src": "function_body [20017,20311]",
      "dest": "function_body [20017,20311]"
    },
    {
      "src": "function: function [5971,5979]",
      "dest": "function: function [5971,5979]"
    },
    {
      "src": "comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [22030,22402]",
      "dest": "comment: /**      * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement      * on the return value: the return value is optional (but if data is returned, it must not be false).      * @param token The token targeted by the call.      * @param data The call data (encoded using abi.encode or one of its variants).      */ [22030,22402]"
    },
    {
      "src": "private: private [9213,9220]",
      "dest": "private: private [9213,9220]"
    },
    {
      "src": "): ) [11021,11022]",
      "dest": "): ) [11021,11022]"
    },
    {
      "src": "primitive_type [7543,7550]",
      "dest": "primitive_type [7543,7550]"
    },
    {
      "src": "uint256: uint256 [9606,9613]",
      "dest": "uint256: uint256 [9606,9613]"
    },
    {
      "src": "interface: interface [26,35]",
      "dest": "interface: interface [26,35]"
    },
    {
      "src": "view: view [16690,16694]",
      "dest": "view: view [16690,16694]"
    },
    {
      "src": "): ) [20099,20100]",
      "dest": "): ) [20099,20100]"
    },
    {
      "src": "call_argument [13903,13936]",
      "dest": "call_argument [13903,13936]"
    },
    {
      "src": "function_definition [2015,2112]",
      "dest": "function_definition [2015,2112]"
    },
    {
      "src": "address: address [21832,21839]",
      "dest": "address: address [21832,21839]"
    },
    {
      "src": "identifier: account [285,292]",
      "dest": "identifier: account [285,292]"
    },
    {
      "src": "): ) [24392,24393]",
      "dest": "): ) [24392,24393]"
    },
    {
      "src": "uint256: uint256 [10377,10384]",
      "dest": "uint256: uint256 [10377,10384]"
    },
    {
      "src": "call_expression [20683,20778]",
      "dest": "call_expression [20683,20778]"
    },
    {
      "src": "identifier: _allowances [9295,9306]",
      "dest": "identifier: _allowances [9295,9306]"
    },
    {
      "src": "visibility [20008,20016]",
      "dest": "visibility [20008,20016]"
    },
    {
      "src": "}: } [9656,9657]",
      "dest": "}: } [9656,9657]"
    },
    {
      "src": "]: ] [13442,13443]",
      "dest": "]: ] [13442,13443]"
    },
    {
      "src": "identifier: a [5700,5701]",
      "dest": "identifier: a [5700,5701]"
    },
    {
      "src": "{: { [9039,9040]",
      "dest": "{: { [9039,9040]"
    },
    {
      "src": "]: ] [24034,24035]",
      "dest": "]: ] [24034,24035]"
    },
    {
      "src": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [629,893]",
      "dest": "comment: /**      * @dev Returns the remaining number of tokens that `spender` will be      * allowed to spend on behalf of `owner` through {transferFrom}. This is      * zero by default.      *      * This value changes when {approve} or {transferFrom} are called.      */ [629,893]"
    },
    {
      "src": "uint: uint [25364,25368]",
      "dest": "uint: uint [25364,25368]"
    },
    {
      "src": "{: { [15268,15269]",
      "dest": "{: { [15268,15269]"
    },
    {
      "src": "type_name [25548,25560]",
      "dest": "type_name [25548,25560]"
    },
    {
      "src": ",: , [25420,25421]",
      "dest": ",: , [25420,25421]"
    },
    {
      "src": "call_argument [22003,22015]",
      "dest": "call_argument [22003,22015]"
    },
    {
      "src": "event_definition [2281,2353]",
      "dest": "event_definition [2281,2353]"
    },
    {
      "src": "call_argument [25037,25082]",
      "dest": "call_argument [25037,25082]"
    },
    {
      "src": "user_defined_type [20812,20818]",
      "dest": "user_defined_type [20812,20818]"
    },
    {
      "src": "call_argument [12472,12568]",
      "dest": "call_argument [12472,12568]"
    },
    {
      "src": "identifier: msg [26087,26090]",
      "dest": "identifier: msg [25988,25991]"
    },
    {
      "src": "): ) [4795,4796]",
      "dest": "): ) [4795,4796]"
    },
    {
      "src": "state_variable_declaration [23771,23796]",
      "dest": "state_variable_declaration [23771,23796]"
    },
    {
      "src": "type_name [9237,9286]",
      "dest": "type_name [9237,9286]"
    },
    {
      "src": "identifier: position [24448,24456]",
      "dest": "identifier: position [24448,24456]"
    },
    {
      "src": "call_argument [11178,11220]",
      "dest": "call_argument [11178,11220]"
    },
    {
      "src": ",: , [25035,25036]",
      "dest": ",: , [25035,25036]"
    },
    {
      "src": "type_name [20637,20644]",
      "dest": "type_name [20637,20644]"
    },
    {
      "src": "expression_statement [14571,14661]",
      "dest": "expression_statement [14571,14661]"
    },
    {
      "src": "=: = [16337,16338]",
      "dest": "=: = [16337,16338]"
    },
    {
      "src": ",: , [19990,19991]",
      "dest": ",: , [19990,19991]"
    },
    {
      "src": "type_name [8957,8964]",
      "dest": "type_name [8957,8964]"
    },
    {
      "src": "identifier: require [13160,13167]",
      "dest": "identifier: require [13160,13167]"
    },
    {
      "src": "\": \" [21231,21232]",
      "dest": "\": \" [21231,21232]"
    },
    {
      "src": "address: address [10360,10367]",
      "dest": "address: address [10360,10367]"
    },
    {
      "src": "return_statement [9997,10009]",
      "dest": "return_statement [9997,10009]"
    },
    {
      "src": "): ) [2588,2589]",
      "dest": "): ) [2588,2589]"
    },
    {
      "src": "): ) [21854,21855]",
      "dest": "): ) [21854,21855]"
    },
    {
      "src": "parameter [5995,6004]",
      "dest": "parameter [5995,6004]"
    },
    {
      "src": "indexed: indexed [2304,2311]",
      "dest": "indexed: indexed [2304,2311]"
    },
    {
      "src": "primitive_type [9568,9575]",
      "dest": "primitive_type [9568,9575]"
    },
    {
      "src": "identifier: sub [12507,12510]",
      "dest": "identifier: sub [12507,12510]"
    },
    {
      "src": "identifier: _msgSender [11750,11760]",
      "dest": "identifier: _msgSender [11750,11760]"
    },
    {
      "src": "state_variable_declaration [9237,9307]",
      "dest": "state_variable_declaration [9237,9307]"
    },
    {
      "src": "parameter [14458,14472]",
      "dest": "parameter [14458,14472]"
    },
    {
      "src": "array_access [10171,10198]",
      "dest": "array_access [10171,10198]"
    },
    {
      "src": "): ) [11043,11044]",
      "dest": "): ) [11043,11044]"
    },
    {
      "src": "identifier: b [6365,6366]",
      "dest": "identifier: b [6365,6366]"
    },
    {
      "src": "call_argument [21607,21612]",
      "dest": "call_argument [21607,21612]"
    },
    {
      "src": "type_name [10145,10152]",
      "dest": "type_name [10145,10152]"
    },
    {
      "src": "visibility [25589,25595]",
      "dest": "visibility [25589,25595]"
    },
    {
      "src": "return: return [26959,26965]",
      "dest": "return: return [26808,26814]"
    },
    {
      "src": "type_cast_expression [14512,14522]",
      "dest": "type_cast_expression [14512,14522]"
    },
    {
      "src": "): ) [13936,13937]",
      "dest": "): ) [13936,13937]"
    },
    {
      "src": "call_argument [20213,20215]",
      "dest": "call_argument [20213,20215]"
    },
    {
      "src": "return_statement [7853,7862]",
      "dest": "return_statement [7853,7862]"
    },
    {
      "src": "call_argument [11764,11771]",
      "dest": "call_argument [11764,11771]"
    },
    {
      "src": "parameter [5144,5151]",
      "dest": "parameter [5144,5151]"
    },
    {
      "src": "identifier: _transfer [9945,9954]",
      "dest": "identifier: _transfer [9945,9954]"
    },
    {
      "src": "(: ( [3401,3402]",
      "dest": "(: ( [3401,3402]"
    },
    {
      "src": "true [11841,11845]",
      "dest": "true [11841,11845]"
    },
    {
      "src": "type_name [21759,21766]",
      "dest": "type_name [21759,21766]"
    },
    {
      "src": "): ) [10152,10153]",
      "dest": "): ) [10152,10153]"
    },
    {
      "src": "string [15307,15345]",
      "dest": "string [15307,15345]"
    },
    {
      "src": "call_argument [6368,6403]",
      "dest": "call_argument [6368,6403]"
    },
    {
      "src": "): ) [20464,20465]",
      "dest": "): ) [20464,20465]"
    },
    {
      "src": "uint256: uint256 [6898,6905]",
      "dest": "uint256: uint256 [6898,6905]"
    },
    {
      "src": "{: { [26220,26221]",
      "dest": "{: { [26121,26122]"
    },
    {
      "src": "identifier: amount [591,597]",
      "dest": "identifier: amount [591,597]"
    },
    {
      "src": "for: for [20354,20357]",
      "dest": "for: for [20354,20357]"
    },
    {
      "src": "identifier: addedValue [11812,11822]",
      "dest": "identifier: addedValue [11812,11822]"
    },
    {
      "src": "primitive_type [6943,6950]",
      "dest": "primitive_type [6943,6950]"
    },
    {
      "src": "mapping: mapping [9257,9264]",
      "dest": "mapping: mapping [9257,9264]"
    },
    {
      "src": "identifier: token [21172,21177]",
      "dest": "identifier: token [21172,21177]"
    },
    {
      "src": "identifier: codehash [18632,18640]",
      "dest": "identifier: codehash [18632,18640]"
    },
    {
      "src": "): ) [9077,9078]",
      "dest": "): ) [9077,9078]"
    },
    {
      "src": "primitive_type [9878,9885]",
      "dest": "primitive_type [9878,9885]"
    },
    {
      "src": "[: [ [14580,14581]",
      "dest": "[: [ [14580,14581]"
    },
    {
      "src": "return_type_definition [5621,5638]",
      "dest": "return_type_definition [5621,5638]"
    },
    {
      "src": "identifier: _totalSupply [14670,14682]",
      "dest": "identifier: _totalSupply [14670,14682]"
    },
    {
      "src": "identifier: b [9057,9058]",
      "dest": "identifier: b [9057,9058]"
    },
    {
      "src": ",: , [581,582]",
      "dest": ",: , [581,582]"
    },
    {
      "src": "): ) [9933,9934]",
      "dest": "): ) [9933,9934]"
    },
    {
      "src": "expression_statement [10425,10465]",
      "dest": "expression_statement [10425,10465]"
    },
    {
      "src": "function_body [8379,8440]",
      "dest": "function_body [8379,8440]"
    },
    {
      "src": "type_name [20451,20458]",
      "dest": "type_name [20451,20458]"
    },
    {
      "src": "): ) [13270,13271]",
      "dest": "): ) [13270,13271]"
    },
    {
      "src": "type_name [5557,5564]",
      "dest": "type_name [5557,5564]"
    },
    {
      "src": "address: address [23002,23009]",
      "dest": "address: address [23002,23009]"
    },
    {
      "src": "function_body [9935,10015]",
      "dest": "function_body [9935,10015]"
    },
    {
      "src": "call_expression [26255,26268]",
      "dest": "call_expression [26156,26169]"
    },
    {
      "src": "call_expression [14493,14560]",
      "dest": "call_expression [14493,14560]"
    },
    {
      "src": "}: } [20312,20313]",
      "dest": "}: } [20312,20313]"
    },
    {
      "src": "binary_expression [6270,6276]",
      "dest": "binary_expression [6270,6276]"
    },
    {
      "src": "call_argument [26468,26475]",
      "dest": "call_argument [26356,26363]"
    },
    {
      "src": "parameter [24414,24428]",
      "dest": "parameter [24414,24428]"
    },
    {
      "src": "function_definition [5086,5220]",
      "dest": "function_definition [5086,5220]"
    },
    {
      "src": "primitive_type [23150,23155]",
      "dest": "primitive_type [23150,23155]"
    },
    {
      "src": "identifier: _totalSupply [13963,13975]",
      "dest": "identifier: _totalSupply [13963,13975]"
    },
    {
      "src": "{: { [6278,6279]",
      "dest": "{: { [6278,6279]"
    },
    {
      "src": "sstore: sstore [25209,25215]",
      "dest": "sstore: sstore [25209,25215]"
    },
    {
      "src": "call_expression [26525,26557]",
      "dest": "call_expression [26413,26445]"
    },
    {
      "src": "call_argument [21637,21659]",
      "dest": "call_argument [21637,21659]"
    },
    {
      "src": "): ) [3377,3378]",
      "dest": "): ) [3377,3378]"
    },
    {
      "src": "): ) [23201,23202]",
      "dest": "): ) [23201,23202]"
    },
    {
      "src": "call_expression [13872,13937]",
      "dest": "call_expression [13872,13937]"
    },
    {
      "src": "state_mutability [152,156]",
      "dest": "state_mutability [152,156]"
    },
    {
      "src": "parameter [6029,6036]",
      "dest": "parameter [6029,6036]"
    },
    {
      "src": "call_argument [21860,21865]",
      "dest": "call_argument [21860,21865]"
    },
    {
      "src": "comment: /**  * @dev Collection of functions related to the address type  */ [17384,17451]",
      "dest": "comment: /**  * @dev Collection of functions related to the address type  */ [17384,17451]"
    },
    {
      "src": "(: ( [20204,20205]",
      "dest": "(: ( [20204,20205]"
    },
    {
      "src": "type_name [10409,10413]",
      "dest": "type_name [10409,10413]"
    },
    {
      "src": "(: ( [4703,4704]",
      "dest": "(: ( [4703,4704]"
    },
    {
      "src": "!=: != [9059,9061]",
      "dest": "!=: != [9059,9061]"
    },
    {
      "src": "function_definition [26821,27011]",
      "dest": "function_definition [26670,26937]"
    },
    {
      "src": "identifier: IERC20 [20812,20818]",
      "dest": "identifier: IERC20 [20812,20818]"
    },
    {
      "src": "inheritance_specifier [15962,15968]",
      "dest": "inheritance_specifier [15962,15968]"
    },
    {
      "src": "(: ( [9445,9446]",
      "dest": "(: ( [9445,9446]"
    },
    {
      "src": "call_expression [9955,9967]",
      "dest": "call_expression [9955,9967]"
    },
    {
      "src": "string_literal [13903,13936]",
      "dest": "string_literal [13903,13936]"
    },
    {
      "src": "}: } [24536,24537]",
      "dest": "}: } [24536,24537]"
    },
    {
      "src": "visibility [18082,18090]",
      "dest": "visibility [18082,18090]"
    },
    {
      "src": "call_expression [21307,21396]",
      "dest": "call_expression [21307,21396]"
    },
    {
      "src": "(: ( [6028,6029]",
      "dest": "(: ( [6028,6029]"
    },
    {
      "src": "primitive_type [20623,20630]",
      "dest": "primitive_type [20623,20630]"
    },
    {
      "src": "call_expression [11132,11221]",
      "dest": "call_expression [11132,11221]"
    },
    {
      "src": "user_defined_type [25407,25420]",
      "dest": "user_defined_type [25407,25420]"
    },
    {
      "src": "(: ( [21325,21326]",
      "dest": "(: ( [21325,21326]"
    },
    {
      "src": "identifier: amount [14754,14760]",
      "dest": "identifier: amount [14754,14760]"
    },
    {
      "src": "visibility [27135,27143]",
      "dest": "visibility [27017,27025]"
    },
    {
      "src": "(: ( [26086,26087]",
      "dest": "(: ( [25987,25988]"
    },
    {
      "src": "false: false [23554,23559]",
      "dest": "false: false [23554,23559]"
    },
    {
      "src": "function_definition [20791,21403]",
      "dest": "function_definition [20791,21403]"
    },
    {
      "src": "identifier: value [21479,21484]",
      "dest": "identifier: value [21479,21484]"
    },
    {
      "src": "member_expression [26441,26524]",
      "dest": "member_expression [26329,26412]"
    },
    {
      "src": "visibility [26014,26022]",
      "dest": "visibility [25885,25893]"
    },
    {
      "src": "return_statement [24691,24720]",
      "dest": "return_statement [24691,24720]"
    },
    {
      "src": ",: , [2573,2574]",
      "dest": ",: , [2573,2574]"
    },
    {
      "src": "contract: contract [3094,3102]",
      "dest": "contract: contract [3094,3102]"
    },
    {
      "src": "): ) [10445,10446]",
      "dest": "): ) [10445,10446]"
    },
    {
      "src": "identifier: decimals [17308,17316]",
      "dest": "identifier: decimals [17308,17316]"
    },
    {
      "src": "identifier: sender [24287,24293]",
      "dest": "identifier: sender [24287,24293]"
    },
    {
      "src": "call_argument [8403,8404]",
      "dest": "call_argument [8403,8404]"
    },
    {
      "src": "(: ( [11162,11163]",
      "dest": "(: ( [11162,11163]"
    },
    {
      "src": "identifier: balance [26966,26973]",
      "dest": "identifier: balance [26815,26822]"
    },
    {
      "src": "state_variable_declaration [23535,23560]",
      "dest": "state_variable_declaration [23535,23560]"
    },
    {
      "src": "call_argument [23419,23429]",
      "dest": "call_argument [23419,23429]"
    },
    {
      "src": "call_argument [21155,21217]",
      "dest": "call_argument [21155,21217]"
    },
    {
      "src": "parameter [2037,2051]",
      "dest": "parameter [2037,2051]"
    },
    {
      "src": "comment: /**      * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of      * these values are immutable: they can only be set once during      * construction.      */ [16059,16238]",
      "dest": "comment: /**      * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of      * these values are immutable: they can only be set once during      * construction.      */ [16059,16238]"
    },
    {
      "src": "constant: constant [25487,25495]",
      "dest": "constant: constant [25487,25495]"
    },
    {
      "src": "function: function [13805,13813]",
      "dest": "function: function [13805,13813]"
    },
    {
      "src": ",: , [11116,11117]",
      "dest": ",: , [11116,11117]"
    },
    {
      "src": "string_literal [14524,14559]",
      "dest": "string_literal [14524,14559]"
    },
    {
      "src": ",: , [20824,20825]",
      "dest": ",: , [20824,20825]"
    },
    {
      "src": "identifier: Context [9129,9136]",
      "dest": "identifier: Context [9129,9136]"
    },
    {
      "src": "binary_expression [15286,15305]",
      "dest": "binary_expression [15286,15305]"
    },
    {
      "src": "function: function [546,554]",
      "dest": "function: function [546,554]"
    }
  ],
  "actions": [
    {
      "action": "update-node",
      "tree": "identifier: setParams [27055,27064]",
      "label": "setRedeemFactor"
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [25904,25925]",
      "parent": "function_body [25894,26233]",
      "at": 1
    },
    {
      "action": "insert-tree",
      "tree": "expression_statement [26290,26311]",
      "parent": "function_body [26280,26531]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "call_expression [26815,26930]",
      "parent": "return_statement [26808,26931]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "member_expression [26815,26915]",
      "parent": "call_expression [26815,26930]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [26915,26916]",
      "parent": "call_expression [26815,26930]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "call_argument [26990,27003]",
      "parent": "call_expression [26815,26930]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [26929,26930]",
      "parent": "call_expression [26815,26930]",
      "at": 3
    },
    {
      "action": "move-tree",
      "tree": "call_expression [26966,27004]",
      "parent": "member_expression [26815,26915]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": ".: . [26911,26912]",
      "parent": "member_expression [26815,26915]",
      "at": 1
    },
    {
      "action": "insert-node",
      "tree": "identifier: div [26912,26915]",
      "parent": "member_expression [26815,26915]",
      "at": 2
    },
    {
      "action": "move-tree",
      "tree": "call_argument [26980,26984]",
      "parent": "call_expression [26815,26898]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "identifier: div [26986,26989]",
      "label": "mul"
    },
    {
      "action": "insert-node",
      "tree": "call_argument [26842,26874]",
      "parent": "call_expression [26815,26875]",
      "at": 2
    },
    {
      "action": "update-node",
      "tree": "identifier: mul [26976,26979]",
      "label": "add"
    },
    {
      "action": "move-tree",
      "tree": "call_expression [27176,27273]",
      "parent": "call_argument [26842,26874]",
      "at": 0
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [26842,26859]",
      "parent": "call_expression [26842,26874]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "type_cast_expression [27197,27217]",
      "parent": "call_argument [26860,26873]",
      "at": 0
    },
    {
      "action": "update-node",
      "tree": "identifier: _controller [27205,27216]",
      "label": "this"
    },
    {
      "action": "delete-tree",
      "tree": "event_definition [25615,25672]"
    },
    {
      "action": "delete-tree",
      "tree": "event_definition [25677,25736]"
    },
    {
      "action": "delete-tree",
      "tree": "emit_statement [26335,26369]"
    },
    {
      "action": "delete-tree",
      "tree": "emit_statement [26646,26676]"
    },
    {
      "action": "delete-node",
      "tree": "identifier: require [27176,27183]"
    },
    {
      "action": "delete-node",
      "tree": "!=: != [27218,27220]"
    },
    {
      "action": "delete-tree",
      "tree": "type_cast_expression [27221,27231]"
    },
    {
      "action": "delete-node",
      "tree": "binary_expression [27197,27231]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [27231,27232]"
    },
    {
      "action": "delete-tree",
      "tree": "call_argument [27245,27263]"
    },
    {
      "action": "delete-tree",
      "tree": "parameter [27074,27098]"
    },
    {
      "action": "delete-node",
      "tree": ",: , [27098,27099]"
    },
    {
      "action": "delete-node",
      "tree": "expression_statement [27176,27274]"
    },
    {
      "action": "delete-tree",
      "tree": "expression_statement [27399,27424]"
    }
  ]
}