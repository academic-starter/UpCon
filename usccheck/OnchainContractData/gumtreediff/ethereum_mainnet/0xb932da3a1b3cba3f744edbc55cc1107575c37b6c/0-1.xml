<?xml version="1.0" ?>
<matches>
  <match src="identifier: add [27078,27081]" dest="identifier: add [26944,26947]"/>
  <match src="comment: /*      * @param item RLP encoded list in bytes      */ [28868,28925]" dest="comment: /*      * @param item RLP encoded list in bytes      */ [28734,28791]"/>
  <match src=",: , [31820,31821]" dest=",: , [31686,31687]"/>
  <match src="identifier: isList [30905,30911]" dest="identifier: isList [30771,30777]"/>
  <match src="return: return [23185,23191]" dest="return: return [23051,23057]"/>
  <match src="binary_expression [5694,5720]" dest="binary_expression [5661,5687]"/>
  <match src="bytes: bytes [15045,15050]" dest="bytes: bytes [14979,14984]"/>
  <match src="struct_member [9145,9156]" dest="struct_member [9112,9123]"/>
  <match src="yul_evm_builtin [34616,34619]" dest="yul_evm_builtin [34482,34485]"/>
  <match src="variable_declaration_statement [13113,13168]" dest="variable_declaration_statement [13047,13102]"/>
  <match src=".: . [51286,51287]" dest=".: . [51442,51443]"/>
  <match src="}: } [47043,47044]" dest="}: } [47127,47128]"/>
  <match src="visibility [43171,43179]" dest="visibility [42970,42978]"/>
  <match src="): ) [25849,25850]" dest="): ) [25715,25716]"/>
  <match src="comment: // by event `TransferWithMetadata` during burning [54394,54443]" dest="comment: // by event `TransferWithMetadata` during burning [54628,54677]"/>
  <match src="identifier: RLPItem [28947,28954]" dest="identifier: RLPItem [28813,28820]"/>
  <match src="primitive_type [21942,21949]" dest="primitive_type [21808,21815]"/>
  <match src="user_defined_type [7660,7670]" dest="user_defined_type [7627,7637]"/>
  <match src="): ) [6871,6872]" dest="): ) [6838,6839]"/>
  <match src="user_defined_type [5861,5864]" dest="user_defined_type [5828,5831]"/>
  <match src="is: is [21271,21273]" dest="is: is [21137,21139]"/>
  <match src="&quot;: &quot; [5757,5758]" dest="&quot;: &quot; [5724,5725]"/>
  <match src="call_argument [27770,27797]" dest="call_argument [27635,27662]"/>
  <match src="=: = [29603,29604]" dest="=: = [29469,29470]"/>
  <match src="function_definition [5599,5803]" dest="function_definition [5566,5770]"/>
  <match src="(: ( [41920,41921]" dest="(: ( [41718,41719]"/>
  <match src="memory: memory [28955,28961]" dest="memory: memory [28821,28827]"/>
  <match src="bytes32: bytes32 [21920,21927]" dest="bytes32: bytes32 [21786,21793]"/>
  <match src="internal: internal [32192,32200]" dest="internal: internal [32058,32066]"/>
  <match src="identifier: errorMessage [17668,17680]" dest="identifier: errorMessage [17602,17614]"/>
  <match src="call_expression [17909,17934]" dest="call_expression [17843,17868]"/>
  <match src="type_name [23865,23872]" dest="type_name [23731,23738]"/>
  <match src="identifier: mask [36105,36109]" dest="identifier: mask [35971,35975]"/>
  <match src="expression_statement [15632,15714]" dest="expression_statement [15566,15648]"/>
  <match src="{: { [34465,34466]" dest="{: { [34331,34332]"/>
  <match src="call_argument [8092,8124]" dest="call_argument [8059,8091]"/>
  <match src="call_argument [49056,49065]" dest="call_argument [49140,49149]"/>
  <match src="parameter [30183,30202]" dest="parameter [30049,30068]"/>
  <match src="&gt;=:  &gt;= [37371,37374]" dest="&gt;=:  &gt;= [37171,37174]"/>
  <match src="type_name [47500,47506]" dest="type_name [47584,47590]"/>
  <match src="&quot;: &quot; [15711,15712]" dest="&quot;: &quot; [15645,15646]"/>
  <match src="bytes: bytes [30254,30259]" dest="bytes: bytes [30120,30125]"/>
  <match src="identifier: from [39235,39239]" dest="identifier: from [39033,39037]"/>
  <match src="indexed: indexed [46772,46779]" dest="indexed: indexed [46570,46577]"/>
  <match src=",: , [41030,41031]" dest=",: , [40828,40829]"/>
  <match src="function: function [9871,9879]" dest="function: function [9838,9846]"/>
  <match src="member_expression [5694,5712]" dest="member_expression [5661,5679]"/>
  <match src="): ) [53822,53823]" dest="): ) [54056,54057]"/>
  <match src="yul_evm_builtin [34196,34199]" dest="yul_evm_builtin [34062,34065]"/>
  <match src="type_name [18135,18140]" dest="type_name [18069,18074]"/>
  <match src="type_name [15527,15532]" dest="type_name [15461,15466]"/>
  <match src="identifier: _roles [26888,26894]" dest="identifier: _roles [26754,26760]"/>
  <match src="function_definition [9341,9472]" dest="function_definition [9308,9439]"/>
  <match src="block_statement [34465,34786]" dest="block_statement [34331,34652]"/>
  <match src="type_cast_expression [48715,48728]" dest="type_cast_expression [48799,48812]"/>
  <match src=",: , [48058,48059]" dest=",: , [48142,48143]"/>
  <match src=":=: := [33704,33706]" dest=":=: := [33570,33572]"/>
  <match src="primitive_type [38054,38061]" dest="primitive_type [37852,37859]"/>
  <match src="identifier: _values [2343,2350]" dest="identifier: _values [2310,2317]"/>
  <match src="new: new [30306,30309]" dest="new: new [30172,30175]"/>
  <match src="assembly_statement [33674,33740]" dest="assembly_statement [33540,33606]"/>
  <match src="call_expression [54026,54053]" dest="call_expression [54260,54287]"/>
  <match src="): ) [3348,3349]" dest="): ) [3315,3316]"/>
  <match src="member_expression [52760,52770]" dest="member_expression [52916,52926]"/>
  <match src="call_argument [9062,9072]" dest="call_argument [9029,9039]"/>
  <match src="parameter [25776,25791]" dest="parameter [25642,25657]"/>
  <match src="call_argument [27139,27151]" dest="call_argument [27005,27017]"/>
  <match src="(: ( [50979,50980]" dest="(: ( [51063,51064]"/>
  <match src="call_argument [51268,51295]" dest="call_argument [51424,51451]"/>
  <match src="call_expression [30595,30607]" dest="call_expression [30461,30473]"/>
  <match src="identifier: result [32704,32710]" dest="identifier: result [32570,32576]"/>
  <match src="parameter [43456,43471]" dest="parameter [43255,43270]"/>
  <match src="): ) [8052,8053]" dest="): ) [8019,8020]"/>
  <match src="return: return [11909,11915]" dest="return: return [11843,11849]"/>
  <match src="identifier: depositor [44300,44309]" dest="identifier: depositor [44098,44107]"/>
  <match src="identifier: logRLPList [50899,50909]" dest="identifier: logRLPList [50983,50993]"/>
  <match src="call_argument [50694,50695]" dest="call_argument [50778,50779]"/>
  <match src="): ) [50863,50864]" dest="): ) [50947,50948]"/>
  <match src="number_literal: 0xf871896b17e9cb7a64941c62c188a4f5c621b86800e3d15452ece01ce56073df [46137,46203]" dest="number_literal: 0xf871896b17e9cb7a64941c62c188a4f5c621b86800e3d15452ece01ce56073df [45935,46001]"/>
  <match src="binary_expression [35133,35229]" dest="binary_expression [34999,35095]"/>
  <match src="return_statement [10652,10691]" dest="return_statement [10619,10658]"/>
  <match src="type_name [24564,24571]" dest="type_name [24430,24437]"/>
  <match src="primitive_type [32215,32220]" dest="primitive_type [32081,32086]"/>
  <match src="member_expression [4264,4275]" dest="member_expression [4231,4242]"/>
  <match src="comment: // Check if token exists or not [52230,52261]" dest="comment: // Check if token exists or not [52386,52417]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol [0,65]" dest="comment: // File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol [0,65]"/>
  <match src="memory: memory [16287,16293]" dest="memory: memory [16221,16227]"/>
  <match src="type_name [23851,23858]" dest="type_name [23717,23724]"/>
  <match src="(: ( [15639,15640]" dest="(: ( [15573,15574]"/>
  <match src="function: function [44262,44270]" dest="function: function [44060,44068]"/>
  <match src="public: public [46291,46297]" dest="public: public [46089,46095]"/>
  <match src="number_literal: 0x00 [21579,21583]" dest="number_literal: 0x00 [21445,21449]"/>
  <match src="expression_statement [31910,31975]" dest="expression_statement [31776,31841]"/>
  <match src="identifier: value [9457,9462]" dest="identifier: value [9424,9429]"/>
  <match src="comment: // @return entire rlp item byte length [33501,33539]" dest="comment: // @return entire rlp item byte length [33367,33405]"/>
  <match src="}: } [37255,37256]" dest="}: } [37088,37089]"/>
  <match src="memory: memory [28555,28561]" dest="memory: memory [28421,28427]"/>
  <match src="identifier: data [15540,15544]" dest="identifier: data [15474,15478]"/>
  <match src="bytes32: bytes32 [8345,8352]" dest="bytes32: bytes32 [8312,8319]"/>
  <match src="function_body [28639,28860]" dest="function_body [28505,28726]"/>
  <match src="address: address [47370,47377]" dest="address: address [47454,47461]"/>
  <match src="call_argument [17339,17343]" dest="call_argument [17273,17277]"/>
  <match src="): ) [9463,9464]" dest="): ) [9430,9431]"/>
  <match src=".: . [49533,49534]" dest=".: . [49617,49618]"/>
  <match src=",: , [6473,6474]" dest=",: , [6440,6441]"/>
  <match src="identifier: Bytes32Set [6374,6384]" dest="identifier: Bytes32Set [6341,6351]"/>
  <match src=",: , [17977,17978]" dest=",: , [17911,17912]"/>
  <match src="identifier: role [26807,26811]" dest="identifier: role [26673,26677]"/>
  <match src="yul_path [18633,18648]" dest="yul_path [18567,18582]"/>
  <match src="]: ] [27265,27266]" dest="]: ] [27131,27132]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [18446,18493]" dest="comment: // solhint-disable-next-line no-inline-assembly [18380,18427]"/>
  <match src="uint256: uint256 [48343,48350]" dest="uint256: uint256 [48427,48434]"/>
  <match src="identifier: memPtr [33209,33215]" dest="identifier: memPtr [33075,33081]"/>
  <match src="call_argument [16753,16791]" dest="call_argument [16687,16725]"/>
  <match src="return_type_definition [17691,17713]" dest="return_type_definition [17625,17647]"/>
  <match src="&quot;: &quot; [30757,30758]" dest="&quot;: &quot; [30623,30624]"/>
  <match src="identifier: byte0 [33658,33663]" dest="identifier: byte0 [33524,33529]"/>
  <match src="visibility [6632,6640]" dest="visibility [6599,6607]"/>
  <match src=",: , [47413,47414]" dest=",: , [47497,47498]"/>
  <match src="returns: returns [23156,23163]" dest="returns: returns [23022,23029]"/>
  <match src="): ) [48521,48522]" dest="): ) [48605,48606]"/>
  <match src="(: ( [33720,33721]" dest="(: ( [33586,33587]"/>
  <match src="identifier: item [32866,32870]" dest="identifier: item [32732,32736]"/>
  <match src="(: ( [53701,53702]" dest="(: ( [53935,53936]"/>
  <match src="binary_expression [32651,32671]" dest="binary_expression [32517,32537]"/>
  <match src="(: ( [50919,50920]" dest="(: ( [51003,51004]"/>
  <match src="identifier: memPtr [29363,29369]" dest="identifier: memPtr [29229,29235]"/>
  <match src="): ) [30573,30574]" dest="): ) [30439,30440]"/>
  <match src="number_literal: 20 [46638,46640]" dest="number_literal: 20 [46436,46438]"/>
  <match src="yul_function_call [31526,31548]" dest="yul_function_call [31392,31414]"/>
  <match src="if: if [3538,3540]" dest="if: if [3505,3507]"/>
  <match src="(: ( [35027,35028]" dest="(: ( [34893,34894]"/>
  <match src="memory: memory [17706,17712]" dest="memory: memory [17640,17646]"/>
  <match src="view: view [37233,37237]" dest="view: view [37066,37070]"/>
  <match src="(: ( [32850,32851]" dest="(: ( [32716,32717]"/>
  <match src="{: { [18689,18690]" dest="{: { [18623,18624]"/>
  <match src="return_statement [3050,3062]" dest="return_statement [3017,3029]"/>
  <match src="+=: += [35980,35982]" dest="+=: += [35846,35848]"/>
  <match src="parameter [22820,22835]" dest="parameter [22686,22701]"/>
  <match src="call_expression [28824,28852]" dest="call_expression [28690,28718]"/>
  <match src="primitive_type [41014,41021]" dest="primitive_type [40812,40819]"/>
  <match src="identifier: depositData [48112,48123]" dest="identifier: depositData [48196,48207]"/>
  <match src="return_statement [8065,8126]" dest="return_statement [8032,8093]"/>
  <match src="[: [ [51773,51774]" dest="[: [ [51929,51930]"/>
  <match src="memory: memory [17284,17290]" dest="memory: memory [17218,17224]"/>
  <match src="function_definition [24531,24758]" dest="function_definition [24397,24624]"/>
  <match src="type_name [2333,2340]" dest="type_name [2300,2307]"/>
  <match src="): ) [19456,19457]" dest="): ) [19357,19358]"/>
  <match src="solidity_version: 0.8.0 [10819,10824]" dest="solidity_version: 0.8.0 [10753,10758]"/>
  <match src="(: ( [22805,22806]" dest="(: ( [22671,22672]"/>
  <match src="primitive_type [15029,15036]" dest="primitive_type [14963,14970]"/>
  <match src="identifier: AddressSet [7660,7670]" dest="identifier: AddressSet [7627,7637]"/>
  <match src="type_name [46951,46958]" dest="type_name [46749,46756]"/>
  <match src="identifier: len [32682,32685]" dest="identifier: len [32548,32551]"/>
  <match src="call_expression [29052,29101]" dest="call_expression [28918,28967]"/>
  <match src=",: , [29298,29299]" dest=",: , [29164,29165]"/>
  <match src="identifier: _inner [6160,6166]" dest="identifier: _inner [6127,6133]"/>
  <match src="address: address [12957,12964]" dest="address: address [12891,12898]"/>
  <match src="if_statement [52847,54906]" dest="if_statement [53081,55212]"/>
  <match src="string [25135,25185]" dest="string [25001,25051]"/>
  <match src=".: . [47563,47564]" dest=".: . [47647,47648]"/>
  <match src="type_name [7991,8001]" dest="type_name [7958,7968]"/>
  <match src="type_name [49458,49465]" dest="type_name [49542,49549]"/>
  <match src="=: = [46636,46637]" dest="=: = [46434,46435]"/>
  <match src="identifier: currPtr [33361,33368]" dest="identifier: currPtr [33227,33234]"/>
  <match src=".: . [25108,25109]" dest=".: . [24974,24975]"/>
  <match src="): ) [16750,16751]" dest="): ) [16684,16685]"/>
  <match src="): ) [33426,33427]" dest="): ) [33292,33293]"/>
  <match src="function_definition [26532,26644]" dest="function_definition [26398,26510]"/>
  <match src="call_argument [24647,24659]" dest="call_argument [24513,24525]"/>
  <match src="memory: memory [30290,30296]" dest="memory: memory [30156,30162]"/>
  <match src="identifier: len [30978,30981]" dest="identifier: len [30844,30847]"/>
  <match src="type_cast_expression [7766,7789]" dest="type_cast_expression [7733,7756]"/>
  <match src="expression_statement [33353,33428]" dest="expression_statement [33219,33294]"/>
  <match src="identifier: item [32651,32655]" dest="identifier: item [32517,32521]"/>
  <match src=",: , [48873,48874]" dest=",: , [48957,48958]"/>
  <match src="identifier: _grantRole [26611,26621]" dest="identifier: _grantRole [26477,26487]"/>
  <match src="(: ( [24211,24212]" dest="(: ( [24077,24078]"/>
  <match src="type_name [45508,45513]" dest="type_name [45306,45311]"/>
  <match src="identifier: logData [51974,51981]" dest="identifier: logData [52130,52137]"/>
  <match src="bool: bool [16866,16870]" dest="bool: bool [16800,16804]"/>
  <match src="primitive_type [32382,32389]" dest="primitive_type [32248,32255]"/>
  <match src="identifier: RLPItem [29155,29162]" dest="identifier: RLPItem [29021,29028]"/>
  <match src=".: . [4642,4643]" dest=".: . [4609,4610]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [16018,16189]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [15952,16123]"/>
  <match src="call_argument [45191,45198]" dest="call_argument [44990,44997]"/>
  <match src="identifier: success [16966,16973]" dest="identifier: success [16900,16907]"/>
  <match src="call_argument [2851,2856]" dest="call_argument [2818,2823]"/>
  <match src="): ) [48727,48728]" dest="): ) [48811,48812]"/>
  <match src="primitive_type [15872,15877]" dest="primitive_type [15806,15811]"/>
  <match src="&lt;: &lt; [34375,34376]" dest="&lt;: &lt; [34241,34242]"/>
  <match src=".: . [27077,27078]" dest=".: . [26943,26944]"/>
  <match src="function_body [24221,24269]" dest="function_body [24087,24135]"/>
  <match src="identifier: memPtr [32419,32425]" dest="identifier: memPtr [32285,32291]"/>
  <match src="): ) [25901,25902]" dest="): ) [25767,25768]"/>
  <match src="identifier: STRING_SHORT_START [33873,33891]" dest="identifier: STRING_SHORT_START [33739,33757]"/>
  <match src="}: } [26974,26975]" dest="}: } [26840,26841]"/>
  <match src="identifier: _values [5233,5240]" dest="identifier: _values [5200,5207]"/>
  <match src="member_expression [47531,47563]" dest="member_expression [47615,47647]"/>
  <match src=",: , [30399,30400]" dest=",: , [30265,30266]"/>
  <match src="visibility [10609,10617]" dest="visibility [10576,10584]"/>
  <match src="call_argument [54222,54232]" dest="call_argument [54456,54466]"/>
  <match src="identifier: RLPItem [30183,30190]" dest="identifier: RLPItem [30049,30056]"/>
  <match src="(: ( [36269,36270]" dest="(: ( [36135,36136]"/>
  <match src="(: ( [11569,11570]" dest="(: ( [11503,11504]"/>
  <match src="comment: // we'll mint it here, on L1, during [52662,52698]" dest="comment: // we'll mint it here, on L1, during [52818,52854]"/>
  <match src="bytes32: bytes32 [9449,9456]" dest="bytes32: bytes32 [9416,9423]"/>
  <match src="(: ( [34081,34082]" dest="(: ( [33947,33948]"/>
  <match src="&quot;: &quot; [29300,29301]" dest="&quot;: &quot; [29166,29167]"/>
  <match src="identifier: logTopicRLPList [53676,53691]" dest="identifier: logTopicRLPList [53910,53925]"/>
  <match src="primitive_type [33604,33611]" dest="primitive_type [33470,33477]"/>
  <match src="): ) [10688,10689]" dest="): ) [10655,10656]"/>
  <match src="comment: // Delete the slot where the moved value was stored [4574,4625]" dest="comment: // Delete the slot where the moved value was stored [4541,4592]"/>
  <match src="): ) [13166,13167]" dest="): ) [13100,13101]"/>
  <match src=",: , [22287,22288]" dest=",: , [22153,22154]"/>
  <match src="type_name [3367,3371]" dest="type_name [3334,3338]"/>
  <match src="public: public [25793,25799]" dest="public: public [25659,25665]"/>
  <match src="identifier: item [33135,33139]" dest="identifier: item [33001,33005]"/>
  <match src="address: address [9007,9014]" dest="address: address [8974,8981]"/>
  <match src="event: event [22224,22229]" dest="event: event [22090,22095]"/>
  <match src="member_expression [9437,9447]" dest="member_expression [9404,9414]"/>
  <match src="type_name [41964,41969]" dest="type_name [41762,41767]"/>
  <match src="struct_declaration [2277,2533]" dest="struct_declaration [2244,2500]"/>
  <match src="type_name [33117,33124]" dest="type_name [32983,32990]"/>
  <match src="number_literal: 1 [32043,32044]" dest="number_literal: 1 [31909,31910]"/>
  <match src="type_name [873,880]" dest="type_name [873,880]"/>
  <match src="identifier: STRING_LONG_START [35355,35372]" dest="identifier: STRING_LONG_START [35221,35238]"/>
  <match src="yul_path [31504,31510]" dest="yul_path [31370,31376]"/>
  <match src="(: ( [22241,22242]" dest="(: ( [22107,22108]"/>
  <match src="expression_statement [29501,29531]" dest="expression_statement [29367,29397]"/>
  <match src="user_defined_type [30183,30190]" dest="user_defined_type [30049,30056]"/>
  <match src="identifier: _verifyCallResult [16948,16965]" dest="identifier: _verifyCallResult [16882,16899]"/>
  <match src="{: { [52925,52926]" dest="{: { [53159,53160]"/>
  <match src="[: [ [53691,53692]" dest="[: [ [53925,53926]"/>
  <match src="(: ( [6816,6817]" dest="(: ( [6783,6784]"/>
  <match src="primitive_type [48300,48307]" dest="primitive_type [48384,48391]"/>
  <match src="function_body [30885,31608]" dest="function_body [30751,31474]"/>
  <match src="}: } [34458,34459]" dest="}: } [34324,34325]"/>
  <match src="sub: sub [33999,34002]" dest="sub: sub [33865,33868]"/>
  <match src="(: ( [13185,13186]" dest="(: ( [13119,13120]"/>
  <match src="member_expression [54550,54560]" dest="member_expression [54784,54794]"/>
  <match src="address: address [50520,50527]" dest="address: address [50604,50611]"/>
  <match src=",: , [18631,18632]" dest=",: , [18565,18566]"/>
  <match src="member_expression [2834,2845]" dest="member_expression [2801,2812]"/>
  <match src="assembly: assembly [35861,35869]" dest="assembly: assembly [35727,35735]"/>
  <match src="function: function [18020,18028]" dest="function: function [17954,17962]"/>
  <match src="identifier: AccessControlMixin [45430,45448]" dest="identifier: AccessControlMixin [45228,45246]"/>
  <match src=",: , [30917,30918]" dest=",: , [30783,30784]"/>
  <match src="uint256: uint256 [9910,9917]" dest="uint256: uint256 [9877,9884]"/>
  <match src="identifier: value [7782,7787]" dest="identifier: value [7749,7754]"/>
  <match src="): ) [14080,14081]" dest="): ) [14014,14015]"/>
  <match src="type_name [50814,50829]" dest="type_name [50898,50913]"/>
  <match src="(: ( [54570,54571]" dest="(: ( [54804,54805]"/>
  <match src=",: , [15525,15526]" dest=",: , [15459,15460]"/>
  <match src="external: external [47455,47463]" dest="external: external [47539,47547]"/>
  <match src="call_argument [8353,8376]" dest="call_argument [8320,8343]"/>
  <match src="variable_declaration [53941,53962]" dest="variable_declaration [54175,54196]"/>
  <match src="parameter [10163,10170]" dest="parameter [10130,10137]"/>
  <match src="user_defined_type [50814,50829]" dest="user_defined_type [50898,50913]"/>
  <match src="true: true [4777,4781]" dest="true: true [4744,4748]"/>
  <match src="primitive_type [17700,17705]" dest="primitive_type [17634,17639]"/>
  <match src="call_argument [17331,17337]" dest="call_argument [17265,17271]"/>
  <match src=".: . [31771,31772]" dest=".: . [31637,31638]"/>
  <match src="parameter [9664,9683]" dest="parameter [9631,9650]"/>
  <match src="identifier: at [7271,7273]" dest="identifier: at [7238,7240]"/>
  <match src="visibility [8984,8992]" dest="visibility [8951,8959]"/>
  <match src="identifier: item [32186,32190]" dest="identifier: item [32052,32056]"/>
  <match src="memory: memory [19607,19613]" dest="memory: memory [19508,19514]"/>
  <match src="return_type_definition [7327,7344]" dest="return_type_definition [7294,7311]"/>
  <match src="function_body [10641,10698]" dest="function_body [10608,10665]"/>
  <match src="(: ( [52858,52859]" dest="(: ( [53092,53093]"/>
  <match src="call_argument [52533,52540]" dest="call_argument [52689,52696]"/>
  <match src="call_argument [13195,13255]" dest="call_argument [13129,13189]"/>
  <match src="returns: returns [41286,41293]" dest="returns: returns [41084,41091]"/>
  <match src="=: = [13130,13131]" dest="=: = [13064,13065]"/>
  <match src=".: . [13141,13142]" dest=".: . [13075,13076]"/>
  <match src="if_statement [33911,34786]" dest="if_statement [33777,34652]"/>
  <match src="comment: /**      * @dev Returns the account approved for `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [40425,40570]" dest="comment: /**      * @dev Returns the account approved for `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [40223,40368]"/>
  <match src="primitive_type [8353,8360]" dest="primitive_type [8320,8327]"/>
  <match src="primitive_type [48007,48014]" dest="primitive_type [48091,48098]"/>
  <match src="identifier: memPtr [31322,31328]" dest="identifier: memPtr [31188,31194]"/>
  <match src="state_variable_declaration [45600,45706]" dest="state_variable_declaration [45398,45504]"/>
  <match src=",: , [17343,17344]" dest=",: , [17277,17278]"/>
  <match src="block_statement [51171,51237]" dest="block_statement [51255,51321]"/>
  <match src="): ) [54280,54281]" dest="): ) [54514,54515]"/>
  <match src="member_expression [50238,50260]" dest="member_expression [50322,50344]"/>
  <match src="variable_declaration_statement [29155,29202]" dest="variable_declaration_statement [29021,29068]"/>
  <match src="return_statement [35736,35743]" dest="return_statement [35602,35609]"/>
  <match src="call_expression [8562,8581]" dest="call_expression [8529,8548]"/>
  <match src="primitive_type [9408,9412]" dest="primitive_type [9375,9379]"/>
  <match src="yul_evm_builtin [18566,18571]" dest="yul_evm_builtin [18500,18505]"/>
  <match src="array_access [51268,51286]" dest="array_access [51424,51442]"/>
  <match src="variable_declaration_statement [36097,36139]" dest="variable_declaration_statement [35963,36005]"/>
  <match src="(: ( [7773,7774]" dest="(: ( [7740,7741]"/>
  <match src="call_argument [17345,17386]" dest="call_argument [17279,17320]"/>
  <match src="solidity_pragma_token [28133,28147]" dest="solidity_pragma_token [27998,28013]"/>
  <match src="if_statement [33752,34786]" dest="if_statement [33618,34652]"/>
  <match src="identifier: members [27070,27077]" dest="identifier: members [26936,26943]"/>
  <match src="call_argument [54626,54636]" dest="call_argument [54860,54870]"/>
  <match src="visibility [46608,46614]" dest="visibility [46406,46412]"/>
  <match src="primitive_type [26813,26820]" dest="primitive_type [26679,26686]"/>
  <match src="exp: exp [34635,34638]" dest="exp: exp [34501,34504]"/>
  <match src="identifier: IMintableERC721 [52083,52098]" dest="identifier: IMintableERC721 [52239,52254]"/>
  <match src="pragma_directive [45065,45087]" dest="pragma_directive [44863,44886]"/>
  <match src="type_name [15858,15862]" dest="type_name [15792,15796]"/>
  <match src="solidity_version: 0.6.0 [122,127]" dest="solidity_version: 0.6.0 [122,127]"/>
  <match src="primitive_type [30254,30259]" dest="primitive_type [30120,30125]"/>
  <match src="identifier: _revokeRole [25915,25926]" dest="identifier: _revokeRole [25781,25792]"/>
  <match src="call_expression [45183,45217]" dest="call_expression [44982,45016]"/>
  <match src="type_name [22858,22862]" dest="type_name [22724,22728]"/>
  <match src="): ) [51220,51221]" dest="): ) [51304,51305]"/>
  <match src="assignment_expression [26933,26967]" dest="assignment_expression [26799,26833]"/>
  <match src="yul_evm_builtin [34620,34625]" dest="yul_evm_builtin [34486,34491]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [4853,4925]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [4820,4892]"/>
  <match src="identifier: target [15743,15749]" dest="identifier: target [15677,15683]"/>
  <match src="): ) [17933,17934]" dest="): ) [17867,17868]"/>
  <match src="): ) [34241,34242]" dest="): ) [34107,34108]"/>
  <match src="type_name [5612,5615]" dest="type_name [5579,5582]"/>
  <match src="member_expression [6463,6473]" dest="member_expression [6430,6440]"/>
  <match src="identifier: _payloadOffset [31195,31209]" dest="identifier: _payloadOffset [31061,31075]"/>
  <match src="(: ( [34647,34648]" dest="(: ( [34513,34514]"/>
  <match src="parameter [2725,2740]" dest="parameter [2692,2707]"/>
  <match src="expression_statement [25915,25942]" dest="expression_statement [25781,25808]"/>
  <match src=",: , [16973,16974]" dest=",: , [16907,16908]"/>
  <match src="bytes32: bytes32 [6398,6405]" dest="bytes32: bytes32 [6365,6372]"/>
  <match src="]: ] [48884,48885]" dest="]: ] [48968,48969]"/>
  <match src="bool: bool [38080,38084]" dest="bool: bool [37878,37882]"/>
  <match src="]: ] [54496,54497]" dest="]: ] [54730,54731]"/>
  <match src="{: { [23174,23175]" dest="{: { [23040,23041]"/>
  <match src="(: ( [2496,2497]" dest="(: ( [2463,2464]"/>
  <match src="type_name [28177,28182]" dest="type_name [28043,28048]"/>
  <match src="uint256: uint256 [28423,28430]" dest="uint256: uint256 [28289,28296]"/>
  <match src=",: , [34008,34009]" dest=",: , [33874,33875]"/>
  <match src="(: ( [32214,32215]" dest="(: ( [32080,32081]"/>
  <match src="identifier: returndata [16893,16903]" dest="identifier: returndata [16827,16837]"/>
  <match src="type_name [8969,8976]" dest="type_name [8936,8943]"/>
  <match src="identifier: getApproved [40585,40596]" dest="identifier: getApproved [40383,40394]"/>
  <match src="(: ( [32527,32528]" dest="(: ( [32393,32394]"/>
  <match src="identifier: at [23949,23951]" dest="identifier: at [23815,23817]"/>
  <match src="identifier: target [16907,16913]" dest="identifier: target [16841,16847]"/>
  <match src="comment: // [51584,51586]" dest="comment: // [51740,51742]"/>
  <match src="identifier: memPtr [34082,34088]" dest="identifier: memPtr [33948,33954]"/>
  <match src="type_cast_expression [53773,53809]" dest="type_cast_expression [54007,54043]"/>
  <match src="string_literal [17753,17793]" dest="string_literal [17687,17727]"/>
  <match src="function_definition [7647,7799]" dest="function_definition [7614,7766]"/>
  <match src="): ) [47444,47445]" dest="): ) [47528,47529]"/>
  <match src="yul_path [31388,31394]" dest="yul_path [31254,31260]"/>
  <match src="parameter [32215,32227]" dest="parameter [32081,32093]"/>
  <match src="identifier: add [7656,7659]" dest="identifier: add [7623,7626]"/>
  <match src="=: = [31054,31055]" dest="=: = [30920,30921]"/>
  <match src="identifier: _inner [6467,6473]" dest="identifier: _inner [6434,6440]"/>
  <match src="identifier: item [33164,33168]" dest="identifier: item [33030,33034]"/>
  <match src="function_definition [17195,17395]" dest="function_definition [17129,17329]"/>
  <match src="identifier: item [30436,30440]" dest="identifier: item [30302,30306]"/>
  <match src="visibility [6841,6849]" dest="visibility [6808,6816]"/>
  <match src="variable_declaration [50520,50538]" dest="variable_declaration [50604,50622]"/>
  <match src="identifier: logRLPList [51893,51903]" dest="identifier: logRLPList [52049,52059]"/>
  <match src="indexed: indexed [21928,21935]" dest="indexed: indexed [21794,21801]"/>
  <match src="yul_path [18572,18582]" dest="yul_path [18506,18516]"/>
  <match src="yul_function_call [18566,18583]" dest="yul_function_call [18500,18517]"/>
  <match src="(: ( [43495,43496]" dest="(: ( [43294,43295]"/>
  <match src="variable_declaration [4244,4261]" dest="variable_declaration [4211,4228]"/>
  <match src="memory: memory [16656,16662]" dest="memory: memory [16590,16596]"/>
  <match src="identifier: RLPItem [29789,29796]" dest="identifier: RLPItem [29655,29662]"/>
  <match src=",: , [40389,40390]" dest=",: , [40187,40188]"/>
  <match src="function_body [15111,15224]" dest="function_body [15045,15158]"/>
  <match src="member_expression [29401,29412]" dest="member_expression [29267,29278]"/>
  <match src="parameter [27003,27015]" dest="parameter [26869,26881]"/>
  <match src="solidity_version: 0.8.0 [19911,19916]" dest="solidity_version: 0.8.0 [18784,18789]"/>
  <match src="constant: constant [46298,46306]" dest="constant: constant [46096,46104]"/>
  <match src="identifier: getRoleMember [23837,23850]" dest="identifier: getRoleMember [23703,23716]"/>
  <match src="(: ( [8534,8535]" dest="(: ( [8501,8502]"/>
  <match src="string: string [27568,27574]" dest="string: string [27433,27439]"/>
  <match src="primitive_type [17619,17626]" dest="primitive_type [17553,17560]"/>
  <match src="yul_function_call [35902,35912]" dest="yul_function_call [35768,35778]"/>
  <match src="function_body [16295,16394]" dest="function_body [16229,16328]"/>
  <match src="external: external [44416,44424]" dest="external: external [44214,44222]"/>
  <match src="(: ( [33914,33915]" dest="(: ( [33780,33781]"/>
  <match src="primitive_type [46951,46958]" dest="primitive_type [46749,46756]"/>
  <match src="calldata: calldata [41970,41978]" dest="calldata: calldata [41768,41776]"/>
  <match src="user_defined_type [7991,8001]" dest="user_defined_type [7958,7968]"/>
  <match src="(: ( [23219,23220]" dest="(: ( [23085,23086]"/>
  <match src="call_argument [54647,54655]" dest="call_argument [54881,54889]"/>
  <match src="(: ( [44905,44906]" dest="(: ( [44703,44704]"/>
  <match src="identifier: Bytes32Set [6070,6080]" dest="identifier: Bytes32Set [6037,6047]"/>
  <match src="parameter [887,902]" dest="parameter [887,902]"/>
  <match src="binary_expression [3542,3557]" dest="binary_expression [3509,3524]"/>
  <match src="call_argument [16332,16338]" dest="call_argument [16266,16272]"/>
  <match src=".: . [4267,4268]" dest=".: . [4234,4235]"/>
  <match src="type_name [15029,15036]" dest="type_name [14963,14970]"/>
  <match src="function: function [14998,15006]" dest="function: function [14932,14940]"/>
  <match src="address: address [38206,38213]" dest="address: address [38004,38011]"/>
  <match src="bytes32: bytes32 [24212,24219]" dest="bytes32: bytes32 [24078,24085]"/>
  <match src="constructor: constructor [47021,47032]" dest="constructor: constructor [47105,47116]"/>
  <match src="interface: interface [297,306]" dest="interface: interface [297,306]"/>
  <match src="type_name [38206,38213]" dest="type_name [38004,38011]"/>
  <match src="event: event [46649,46654]" dest="event: event [46447,46452]"/>
  <match src="(: ( [15150,15151]" dest="(: ( [15084,15085]"/>
  <match src="identifier: srcpart [36344,36351]" dest="identifier: srcpart [36210,36217]"/>
  <match src="solidity_version:  0.6.6 [42073,42079]" dest="solidity_version:  0.6.12 [41871,41878]"/>
  <match src="=: = [46135,46136]" dest="=: = [45933,45934]"/>
  <match src="identifier: account [27282,27289]" dest="identifier: account [27148,27155]"/>
  <match src="returns: returns [10623,10630]" dest="returns: returns [10590,10597]"/>
  <match src="): ) [5178,5179]" dest="): ) [5145,5146]"/>
  <match src="expression_statement [54615,54657]" dest="expression_statement [54849,54891]"/>
  <match src="user_defined_type [32851,32858]" dest="user_defined_type [32717,32724]"/>
  <match src="type_name [25776,25783]" dest="type_name [25642,25649]"/>
  <match src="identifier: require [5686,5693]" dest="identifier: require [5653,5660]"/>
  <match src="for: for [35803,35806]" dest="for: for [35669,35672]"/>
  <match src="event_paramater [46722,46753]" dest="event_paramater [46520,46551]"/>
  <match src="parameter [39832,39844]" dest="parameter [39630,39642]"/>
  <match src="{: { [54691,54692]" dest="{: { [54997,54998]"/>
  <match src="variable_declaration [33650,33663]" dest="variable_declaration [33516,33529]"/>
  <match src="{: { [31723,31724]" dest="{: { [31589,31590]"/>
  <match src="primitive_type [3957,3964]" dest="primitive_type [3924,3931]"/>
  <match src="): ) [45000,45001]" dest="): ) [44798,44799]"/>
  <match src="identifier: set [6689,6692]" dest="identifier: set [6656,6659]"/>
  <match src="parameter [44320,44343]" dest="parameter [44118,44141]"/>
  <match src="returns: returns [5657,5664]" dest="returns: returns [5624,5631]"/>
  <match src="type_name [23165,23172]" dest="type_name [23031,23038]"/>
  <match src="primitive_type [28224,28229]" dest="primitive_type [28090,28095]"/>
  <match src="(: ( [40378,40379]" dest="(: ( [40176,40177]"/>
  <match src="struct_member [7451,7462]" dest="struct_member [7418,7429]"/>
  <match src="}: } [18754,18755]" dest="}: } [18688,18689]"/>
  <match src="identifier: item [31113,31117]" dest="identifier: item [30979,30983]"/>
  <match src="=: = [36110,36111]" dest="=: = [35976,35977]"/>
  <match src="visibility [28977,28985]" dest="visibility [28843,28851]"/>
  <match src="): ) [17712,17713]" dest="): ) [17646,17647]"/>
  <match src="number_literal: 0 [35733,35734]" dest="number_literal: 0 [35599,35600]"/>
  <match src="identifier: len [30459,30462]" dest="identifier: len [30325,30328]"/>
  <match src="user_defined_type [29185,29192]" dest="user_defined_type [29051,29058]"/>
  <match src="return_statement [18188,18206]" dest="return_statement [18122,18140]"/>
  <match src="for_statement [35803,36004]" dest="for_statement [35669,35870]"/>
  <match src="(: ( [34747,34748]" dest="(: ( [34613,34614]"/>
  <match src="comment: // Delete the index for the deleted slot [4673,4713]" dest="comment: // Delete the index for the deleted slot [4640,4680]"/>
  <match src="type_name [17635,17640]" dest="type_name [17569,17574]"/>
  <match src="identifier: call [13142,13146]" dest="identifier: call [13076,13080]"/>
  <match src="bool: bool [2774,2778]" dest="bool: bool [2741,2745]"/>
  <match src="[: [ [50215,50216]" dest="[: [ [50299,50300]"/>
  <match src="address: address [41239,41246]" dest="address: address [41037,41044]"/>
  <match src="call_argument [9050,9081]" dest="call_argument [9017,9048]"/>
  <match src="state_variable_declaration [45913,46025]" dest="state_variable_declaration [45711,45823]"/>
  <match src="return_statement [9735,9778]" dest="return_statement [9702,9745]"/>
  <match src="primitive_type [33089,33096]" dest="primitive_type [32955,32962]"/>
  <match src="comment: // shfit to the correct location if neccesary [31411,31456]" dest="comment: // shfit to the correct location if neccesary [31277,31322]"/>
  <match src="uint8: uint8 [28177,28182]" dest="uint8: uint8 [28043,28048]"/>
  <match src="call_argument [50854,50863]" dest="call_argument [50938,50947]"/>
  <match src="{: { [32580,32581]" dest="{: { [32446,32447]"/>
  <match src="pragma: pragma [27430,27436]" dest="pragma: pragma [27296,27302]"/>
  <match src="view: view [16686,16690]" dest="view: view [16620,16624]"/>
  <match src="==: == [31809,31811]" dest="==: == [31675,31677]"/>
  <match src="identifier: _length [10190,10197]" dest="identifier: _length [10157,10164]"/>
  <match src="returns: returns [8039,8046]" dest="returns: returns [8006,8013]"/>
  <match src="identifier: length [8481,8487]" dest="identifier: length [8448,8454]"/>
  <match src="returns: returns [40628,40635]" dest="returns: returns [40426,40433]"/>
  <match src="(: ( [37246,37247]" dest="(: ( [37079,37080]"/>
  <match src="}: } [32145,32146]" dest="}: } [32011,32012]"/>
  <match src="storage: storage [6385,6392]" dest="storage: storage [6352,6359]"/>
  <match src="type_name [30338,30345]" dest="type_name [30204,30211]"/>
  <match src="yul_identifier [33988,33995]" dest="yul_identifier [33854,33861]"/>
  <match src="expression_statement [28650,28710]" dest="expression_statement [28516,28576]"/>
  <match src="indexed: indexed [22272,22279]" dest="indexed: indexed [22138,22145]"/>
  <match src=",: , [31533,31534]" dest=",: , [31399,31400]"/>
  <match src="call_argument [7367,7377]" dest="call_argument [7334,7344]"/>
  <match src=",: , [24562,24563]" dest=",: , [24428,24429]"/>
  <match src="string [25852,25901]" dest="string [25718,25767]"/>
  <match src="variable_declaration [52131,52140]" dest="variable_declaration [52287,52296]"/>
  <match src="}: } [13162,13163]" dest="}: } [13096,13097]"/>
  <match src=",: , [43127,43128]" dest=",: , [42926,42927]"/>
  <match src="return: return [7356,7362]" dest="return: return [7323,7329]"/>
  <match src="identifier: target [16332,16338]" dest="identifier: target [16266,16272]"/>
  <match src="address: address [24564,24571]" dest="address: address [24430,24437]"/>
  <match src="identifier: memPtr [34068,34074]" dest="identifier: memPtr [33934,33940]"/>
  <match src="): ) [50252,50253]" dest="): ) [50336,50337]"/>
  <match src="&lt;: &lt; [35139,35140]" dest="&lt;: &lt; [35005,35006]"/>
  <match src="contract_body [42121,43505]" dest="contract_body [41920,43304]"/>
  <match src="identifier: approved [38085,38093]" dest="identifier: approved [37883,37891]"/>
  <match src="&gt;=: &gt;= [15662,15664]" dest="&gt;=: &gt;= [15596,15598]"/>
  <match src="internal: internal [19458,19466]" dest="internal: internal [19359,19367]"/>
  <match src="primitive_type [45913,45920]" dest="primitive_type [45711,45718]"/>
  <match src="(: ( [32170,32171]" dest="(: ( [32036,32037]"/>
  <match src="{: { [27603,27604]" dest="{: { [27468,27469]"/>
  <match src="call_expression [22882,22920]" dest="call_expression [22748,22786]"/>
  <match src="comment: // Emitting event that single token is getting locked in predicate [48369,48435]" dest="comment: // Emitting event that single token is getting locked in predicate [48453,48519]"/>
  <match src="parameter [14047,14061]" dest="parameter [13981,13995]"/>
  <match src="identifier: tokenId [38437,38444]" dest="identifier: tokenId [38235,38242]"/>
  <match src="primitive_type [35656,35663]" dest="primitive_type [35522,35529]"/>
  <match src="primitive_type [12913,12920]" dest="primitive_type [12847,12854]"/>
  <match src="memory: memory [15568,15574]" dest="memory: memory [15502,15508]"/>
  <match src="identifier: RoleAdminChanged [21903,21919]" dest="identifier: RoleAdminChanged [21769,21785]"/>
  <match src="function_body [5675,5803]" dest="function_body [5642,5770]"/>
  <match src="exp: exp [31526,31529]" dest="exp: exp [31392,31395]"/>
  <match src=",: , [48340,48341]" dest=",: , [48424,48425]"/>
  <match src="comment: // [52279,52281]" dest="comment: // [52435,52437]"/>
  <match src="(: ( [23900,23901]" dest="(: ( [23766,23767]"/>
  <match src="(: ( [27650,27651]" dest="(: ( [27515,27516]"/>
  <match src="identifier: balance [12971,12978]" dest="identifier: balance [12905,12912]"/>
  <match src="false [30026,30031]" dest="false [29892,29897]"/>
  <match src="): ) [48351,48352]" dest="): ) [48435,48436]"/>
  <match src="visibility [26832,26840]" dest="visibility [26698,26706]"/>
  <match src="call_argument [14151,14155]" dest="call_argument [14085,14089]"/>
  <match src="identifier: value [4747,4752]" dest="identifier: value [4714,4719]"/>
  <match src="(: ( [11529,11530]" dest="(: ( [11463,11464]"/>
  <match src="yul_path [11869,11873]" dest="yul_path [11803,11807]"/>
  <match src="address: address [30779,30786]" dest="address: address [30645,30652]"/>
  <match src="call_argument [29565,29572]" dest="call_argument [29431,29438]"/>
  <match src="block_statement [52159,52828]" dest="block_statement [52315,52984]"/>
  <match src="identifier: _setupContractId [27551,27567]" dest="identifier: _setupContractId [27416,27432]"/>
  <match src="identifier: MANAGER_ROLE [47234,47246]" dest="identifier: MANAGER_ROLE [47318,47330]"/>
  <match src="call_argument [52859,52886]" dest="call_argument [53093,53120]"/>
  <match src="call_argument [8108,8122]" dest="call_argument [8075,8089]"/>
  <match src="comment: // to this predicate address [49411,49439]" dest="comment: // to this predicate address [49495,49523]"/>
  <match src="function_definition [39201,39279]" dest="function_definition [38999,39077]"/>
  <match src="type_name [41295,41299]" dest="type_name [41093,41097]"/>
  <match src="=: = [32259,32260]" dest="=: = [32125,32126]"/>
  <match src="call_expression [29181,29201]" dest="call_expression [29047,29067]"/>
  <match src="identifier: result [32616,32622]" dest="identifier: result [32482,32488]"/>
  <match src="string [13195,13255]" dest="string [13129,13189]"/>
  <match src="binary_expression [29605,29621]" dest="binary_expression [29471,29487]"/>
  <match src="call_argument [28675,28708]" dest="call_argument [28541,28574]"/>
  <match src="comment: // topic2 is to address [50698,50721]" dest="comment: // topic2 is to address [50782,50805]"/>
  <match src="if: if [29989,29991]" dest="if: if [29855,29857]"/>
  <match src="override_specifier [48158,48166]" dest="override_specifier [48242,48250]"/>
  <match src="state_variable_declaration [46086,46204]" dest="state_variable_declaration [45884,46002]"/>
  <match src="function_definition [23828,23966]" dest="function_definition [23694,23832]"/>
  <match src="comment: /**      * @dev Emitted when `tokenId` token is transferred from `from` to `to`.      */ [37500,37590]" dest="comment: /**      * @dev Emitted when `tokenId` token is transferred from `from` to `to`.      */ [37298,37388]"/>
  <match src="&quot;: &quot; [15782,15783]" dest="&quot;: &quot; [15716,15717]"/>
  <match src="identifier: role [25211,25215]" dest="identifier: role [25077,25081]"/>
  <match src="yul_evm_builtin [33999,34002]" dest="yul_evm_builtin [33865,33868]"/>
  <match src="extcodesize: extcodesize [11877,11888]" dest="extcodesize: extcodesize [11811,11822]"/>
  <match src="call_expression [30586,30647]" dest="call_expression [30452,30513]"/>
  <match src="bool: bool [6431,6435]" dest="bool: bool [6398,6402]"/>
  <match src="type_name [39227,39234]" dest="type_name [39025,39032]"/>
  <match src="variable_declaration [3485,3503]" dest="variable_declaration [3452,3470]"/>
  <match src="identifier: mint [42461,42465]" dest="identifier: mint [42260,42264]"/>
  <match src="return_statement [35339,35382]" dest="return_statement [35205,35248]"/>
  <match src="type_name [53647,53654]" dest="type_name [53881,53888]"/>
  <match src="binary_expression [35176,35228]" dest="binary_expression [35042,35094]"/>
  <match src="(: ( [33360,33361]" dest="(: ( [33226,33227]"/>
  <match src="variable_declaration [3957,3974]" dest="variable_declaration [3924,3941]"/>
  <match src="function_definition [47334,47580]" dest="function_definition [47418,47664]"/>
  <match src="memory: memory [32859,32865]" dest="memory: memory [32725,32731]"/>
  <match src=",: , [51981,51982]" dest=",: , [52137,52138]"/>
  <match src="parameter [41014,41030]" dest="parameter [40812,40828]"/>
  <match src="type_name [54526,54531]" dest="type_name [54760,54765]"/>
  <match src="parameter [8969,8982]" dest="parameter [8936,8949]"/>
  <match src="uint256: uint256 [3485,3492]" dest="uint256: uint256 [3452,3459]"/>
  <match src="bytes: bytes [17700,17705]" dest="bytes: bytes [17634,17639]"/>
  <match src="(: ( [12964,12965]" dest="(: ( [12898,12899]"/>
  <match src="): ) [33260,33261]" dest="): ) [33126,33127]"/>
  <match src="identifier: account [25933,25940]" dest="identifier: account [25799,25806]"/>
  <match src="identifier: metaData [54647,54655]" dest="identifier: metaData [54881,54889]"/>
  <match src="identifier: LockedMintableERC721Batch [46837,46862]" dest="identifier: LockedMintableERC721Batch [46635,46660]"/>
  <match src="type_name [32894,32901]" dest="type_name [32760,32767]"/>
  <match src="member_expression [19767,19775]" dest="member_expression [19668,19676]"/>
  <match src="internal: internal [28577,28585]" dest="internal: internal [28443,28451]"/>
  <match src="user_defined_type [53941,53956]" dest="user_defined_type [54175,54190]"/>
  <match src="identifier: IERC165 [36809,36816]" dest="identifier: IERC165 [36642,36649]"/>
  <match src="): ) [34913,34914]" dest="): ) [34779,34780]"/>
  <match src="identifier: value [10002,10007]" dest="identifier: value [9969,9974]"/>
  <match src="return_type_definition [8039,8053]" dest="return_type_definition [8006,8020]"/>
  <match src="{: { [24596,24597]" dest="{: { [24462,24463]"/>
  <match src="type_name [29212,29219]" dest="type_name [29078,29085]"/>
  <match src="): ) [35035,35036]" dest="): ) [34901,34902]"/>
  <match src="member_expression [50549,50574]" dest="member_expression [50633,50658]"/>
  <match src="identifier: result [30297,30303]" dest="identifier: result [30163,30169]"/>
  <match src="identifier: data [16252,16256]" dest="identifier: data [16186,16190]"/>
  <match src="comment: /**  * @dev Required interface of an ERC721 compliant contract.  */ [37393,37462]" dest="comment: /**  * @dev Required interface of an ERC721 compliant contract.  */ [37191,37260]"/>
  <match src="variable_declaration_statement [52059,52110]" dest="variable_declaration_statement [52215,52266]"/>
  <match src="parameter [6127,6131]" dest="parameter [6094,6098]"/>
  <match src="yul_function_call [18605,18649]" dest="yul_function_call [18539,18583]"/>
  <match src="string_literal [15672,15712]" dest="string_literal [15606,15646]"/>
  <match src="parameter [11530,11545]" dest="parameter [11464,11479]"/>
  <match src="bool: bool [43496,43500]" dest="bool: bool [43295,43299]"/>
  <match src=",: , [14149,14150]" dest=",: , [14083,14084]"/>
  <match src="update_expression [29481,29484]" dest="update_expression [29347,29350]"/>
  <match src="internal: internal [26583,26591]" dest="internal: internal [26449,26457]"/>
  <match src="comment: // File: @openzeppelin/contracts/token/ERC721/IERC721.sol [37260,37317]" dest="comment: // File: @openzeppelin/contracts/token/ERC721/IERC721.sol [37093,37150]"/>
  <match src="primitive_type [26566,26573]" dest="primitive_type [26432,26439]"/>
  <match src="(: ( [47499,47500]" dest="(: ( [47583,47584]"/>
  <match src="number_literal: 1 [36137,36138]" dest="number_literal: 1 [36003,36004]"/>
  <match src="}: } [32717,32718]" dest="}: } [32583,32584]"/>
  <match src="identifier: set [8256,8259]" dest="identifier: set [8223,8226]"/>
  <match src="yul_path [36208,36212]" dest="yul_path [36074,36078]"/>
  <match src="number_literal: 1 [4529,4530]" dest="number_literal: 1 [4496,4497]"/>
  <match src="state_mutability [16267,16271]" dest="state_mutability [16201,16205]"/>
  <match src="primitive_type [8048,8052]" dest="primitive_type [8015,8019]"/>
  <match src="solidity_version: 0.6.0 [36493,36498]" dest="solidity_version: 0.6.0 [36326,36331]"/>
  <match src="(: ( [5162,5163]" dest="(: ( [5129,5130]"/>
  <match src="address: address [8015,8022]" dest="address: address [7982,7989]"/>
  <match src="identifier: length [49473,49479]" dest="identifier: length [49557,49563]"/>
  <match src="primitive_type [31178,31185]" dest="primitive_type [31044,31051]"/>
  <match src="type_name [32439,32446]" dest="type_name [32305,32312]"/>
  <match src="identifier: AddressSet [21419,21429]" dest="identifier: AddressSet [21285,21295]"/>
  <match src="}: } [11931,11932]" dest="}: } [11865,11866]"/>
  <match src="bytes32: bytes32 [27003,27010]" dest="bytes32: bytes32 [26869,26876]"/>
  <match src="): ) [22005,22006]" dest="): ) [21871,21872]"/>
  <match src="): ) [50478,50479]" dest="): ) [50562,50563]"/>
  <match src="binary_expression [51260,51324]" dest="binary_expression [51416,51480]"/>
  <match src="primitive_type [25037,25044]" dest="primitive_type [24903,24910]"/>
  <match src="library_declaration [10900,18765]" dest="library_declaration [10834,18699]"/>
  <match src="array_access [3506,3525]" dest="array_access [3473,3492]"/>
  <match src="uint256: uint256 [29424,29431]" dest="uint256: uint256 [29290,29297]"/>
  <match src="identifier: functionStaticCall [16595,16613]" dest="identifier: functionStaticCall [16529,16547]"/>
  <match src="member_expression [16907,16924]" dest="member_expression [16841,16858]"/>
  <match src="type_name [33604,33611]" dest="type_name [33470,33477]"/>
  <match src="return_type_definition [19480,19505]" dest="return_type_definition [19381,19406]"/>
  <match src="parameter [3318,3333]" dest="parameter [3285,3300]"/>
  <match src=".: . [53694,53695]" dest=".: . [53928,53929]"/>
  <match src="member_expression [17909,17928]" dest="member_expression [17843,17862]"/>
  <match src="(: ( [50476,50477]" dest="(: ( [50560,50561]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/Address.sol [10705,10755]" dest="comment: // File: @openzeppelin/contracts/utils/Address.sol [10672,10722]"/>
  <match src="type_name [31300,31307]" dest="type_name [31166,31173]"/>
  <match src="identifier: src [35908,35911]" dest="identifier: src [35774,35777]"/>
  <match src="function_body [7723,7799]" dest="function_body [7690,7766]"/>
  <match src="member_expression [48851,48861]" dest="member_expression [48935,48945]"/>
  <match src="binary_expression [32304,32326]" dest="binary_expression [32170,32192]"/>
  <match src="parameter [16649,16675]" dest="parameter [16583,16609]"/>
  <match src="block_statement [50990,51165]" dest="block_statement [51074,51249]"/>
  <match src="type_name [40597,40604]" dest="type_name [40395,40402]"/>
  <match src="call_expression [51963,51995]" dest="call_expression [52119,52151]"/>
  <match src="identifier: numItems [29130,29138]" dest="identifier: numItems [28996,29004]"/>
  <match src="yul_path [34748,34755]" dest="yul_path [34614,34621]"/>
  <match src="type_name [27510,27516]" dest="type_name [27375,27381]"/>
  <match src="variable_declaration_statement [3957,4000]" dest="variable_declaration_statement [3924,3967]"/>
  <match src="&quot;: &quot; [47161,47162]" dest="&quot;: &quot; [47245,47246]"/>
  <match src="(: ( [30182,30183]" dest="(: ( [30048,30049]"/>
  <match src="): ) [10170,10171]" dest="): ) [10137,10138]"/>
  <match src="call_argument [15989,16001]" dest="call_argument [15923,15935]"/>
  <match src="(: ( [29957,29958]" dest="(: ( [29823,29824]"/>
  <match src="{: { [3559,3560]" dest="{: { [3526,3527]"/>
  <match src="new: new [29181,29184]" dest="new: new [29047,29050]"/>
  <match src="type_cast_expression [8353,8376]" dest="type_cast_expression [8320,8343]"/>
  <match src="false [45135,45140]" dest="false [44934,44939]"/>
  <match src="&quot;: &quot; [24662,24663]" dest="&quot;: &quot; [24528,24529]"/>
  <match src="}: } [54922,54923]" dest="}: } [55228,55229]"/>
  <match src="identifier: RoleData [21501,21509]" dest="identifier: RoleData [21367,21375]"/>
  <match src="(: ( [31387,31388]" dest="(: ( [31253,31254]"/>
  <match src="parameter [47424,47438]" dest="parameter [47508,47522]"/>
  <match src="user_defined_type [9145,9148]" dest="user_defined_type [9112,9115]"/>
  <match src="parameter [33604,33611]" dest="parameter [33470,33477]"/>
  <match src="solidity_version_comparison_operator [37379,37381]" dest="solidity_version_comparison_operator [37179,37181]"/>
  <match src="type_name [46600,46607]" dest="type_name [46398,46405]"/>
  <match src="string_literal [13195,13255]" dest="string_literal [13129,13189]"/>
  <match src="call_argument [51054,51067]" dest="call_argument [51138,51151]"/>
  <match src="member_expression [30973,30981]" dest="member_expression [30839,30847]"/>
  <match src="uint256: uint256 [8100,8107]" dest="uint256: uint256 [8067,8074]"/>
  <match src="{: { [33262,33263]" dest="{: { [33128,33129]"/>
  <match src="type_name [32522,32527]" dest="type_name [32388,32393]"/>
  <match src=",: , [27782,27783]" dest=",: , [27647,27648]"/>
  <match src="primitive_type [45748,45755]" dest="primitive_type [45546,45553]"/>
  <match src="primitive_type [9994,10001]" dest="primitive_type [9961,9968]"/>
  <match src="identifier: this [52464,52468]" dest="identifier: this [52620,52624]"/>
  <match src="(: ( [31067,31068]" dest="(: ( [30933,30934]"/>
  <match src="identifier: _itemLength [29511,29522]" dest="identifier: _itemLength [29377,29388]"/>
  <match src="yul_decimal_number: 256 [34219,34222]" dest="yul_decimal_number: 256 [34085,34088]"/>
  <match src="): ) [31221,31222]" dest="): ) [31087,31088]"/>
  <match src="identifier: _values [4268,4275]" dest="identifier: _values [4235,4242]"/>
  <match src=".: . [21326,21327]" dest=".: . [21192,21193]"/>
  <match src="storage: storage [8248,8255]" dest="storage: storage [8215,8222]"/>
  <match src="}: } [28804,28805]" dest="}: } [28670,28671]"/>
  <match src="}: } [23965,23966]" dest="}: } [23831,23832]"/>
  <match src="identifier: set [5777,5780]" dest="identifier: set [5744,5747]"/>
  <match src="array_access [24623,24635]" dest="array_access [24489,24501]"/>
  <match src="indexed: indexed [37834,37841]" dest="indexed: indexed [37632,37639]"/>
  <match src="variable_declaration [31300,31314]" dest="variable_declaration [31166,31180]"/>
  <match src="function_body [50187,54923]" dest="function_body [50271,55229]"/>
  <match src="(: ( [52098,52099]" dest="(: ( [52254,52255]"/>
  <match src=",: , [8013,8014]" dest=",: , [7980,7981]"/>
  <match src="number_literal: 0xb8 [28259,28263]" dest="number_literal: 0xb8 [28125,28129]"/>
  <match src="identifier: toUint [51287,51293]" dest="identifier: toUint [51443,51449]"/>
  <match src="identifier: item [29290,29294]" dest="identifier: item [29156,29160]"/>
  <match src="parameter [14100,14112]" dest="parameter [14034,14046]"/>
  <match src="call_argument [53781,53808]" dest="call_argument [54015,54042]"/>
  <match src="returns: returns [8290,8297]" dest="returns: returns [8257,8264]"/>
  <match src="primitive_type [16630,16635]" dest="primitive_type [16564,16569]"/>
  <match src="array_access [4381,4407]" dest="array_access [4348,4374]"/>
  <match src="type_name [21942,21949]" dest="type_name [21808,21815]"/>
  <match src="}: } [34819,34820]" dest="}: } [34685,34686]"/>
  <match src="identifier: byte0 [29993,29998]" dest="identifier: byte0 [29859,29864]"/>
  <match src="assignment_expression [2995,3035]" dest="assignment_expression [2962,3002]"/>
  <match src="visibility [47455,47463]" dest="visibility [47539,47547]"/>
  <match src="(: ( [8332,8333]" dest="(: ( [8299,8300]"/>
  <match src="solidity: solidity [111,119]" dest="solidity: solidity [111,119]"/>
  <match src="identifier: _msgSender [25120,25130]" dest="identifier: _msgSender [24986,24996]"/>
  <match src=",: , [902,903]" dest=",: , [902,903]"/>
  <match src="type_name [14100,14105]" dest="type_name [14034,14039]"/>
  <match src="call_expression [15632,15713]" dest="call_expression [15566,15647]"/>
  <match src="comment: // topics [50342,50351]" dest="comment: // topics [50426,50435]"/>
  <match src="if: if [2791,2793]" dest="if: if [2758,2760]"/>
  <match src="expression_statement [5686,5760]" dest="expression_statement [5653,5727]"/>
  <match src="primitive_type [42466,42473]" dest="primitive_type [42265,42272]"/>
  <match src="identifier: depositor [48475,48484]" dest="identifier: depositor [48559,48568]"/>
  <match src="type_name [32171,32178]" dest="type_name [32037,32044]"/>
  <match src=",: , [48086,48087]" dest=",: , [48170,48171]"/>
  <match src="call_argument [54255,54262]" dest="call_argument [54489,54496]"/>
  <match src="state_mutability [6850,6854]" dest="state_mutability [6817,6821]"/>
  <match src=",: , [27661,27662]" dest=",: , [27526,27527]"/>
  <match src="comment: // RLP encoded tokenId list [51829,51856]" dest="comment: // RLP encoded tokenId list [51985,52012]"/>
  <match src="type_name [46283,46290]" dest="type_name [46081,46088]"/>
  <match src="string [30609,30646]" dest="string [30475,30512]"/>
  <match src="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [10025,10097]" dest="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [9992,10064]"/>
  <match src="identifier: offset [31186,31192]" dest="identifier: offset [31052,31058]"/>
  <match src="identifier: item [33204,33208]" dest="identifier: item [33070,33074]"/>
  <match src="yul_function_call [34196,34242]" dest="yul_function_call [34062,34108]"/>
  <match src="identifier: item [31685,31689]" dest="identifier: item [31551,31555]"/>
  <match src="identifier: memPtr [33140,33146]" dest="identifier: memPtr [33006,33012]"/>
  <match src="return: return [16306,16312]" dest="return: return [16240,16246]"/>
  <match src="add: add [30391,30394]" dest="add: add [30257,30260]"/>
  <match src="parameter [33566,33580]" dest="parameter [33432,33446]"/>
  <match src="call_argument [53821,53822]" dest="call_argument [54055,54056]"/>
  <match src="=: = [28211,28212]" dest="=: = [28077,28078]"/>
  <match src="parameter [34937,34944]" dest="parameter [34803,34810]"/>
  <match src="[: [ [29025,29026]" dest="[: [ [28891,28892]"/>
  <match src="return_statement [30019,30032]" dest="return_statement [29885,29898]"/>
  <match src="expression_statement [51190,51222]" dest="expression_statement [51274,51306]"/>
  <match src="bool: bool [29833,29837]" dest="bool: bool [29699,29703]"/>
  <match src="identifier: set [6089,6092]" dest="identifier: set [6056,6059]"/>
  <match src="type_name [5202,5209]" dest="type_name [5169,5176]"/>
  <match src="(: ( [6069,6070]" dest="(: ( [6036,6037]"/>
  <match src=",: , [15062,15063]" dest=",: , [14996,14997]"/>
  <match src="view: view [23887,23891]" dest="view: view [23753,23757]"/>
  <match src="member_expression [4639,4650]" dest="member_expression [4606,4617]"/>
  <match src="): ) [8510,8511]" dest="): ) [8477,8478]"/>
  <match src=",: , [17880,17881]" dest=",: , [17814,17815]"/>
  <match src="primitive_type [28423,28430]" dest="primitive_type [28289,28296]"/>
  <match src="primitive_type [51260,51267]" dest="primitive_type [51416,51423]"/>
  <match src="uint256: uint256 [29212,29219]" dest="uint256: uint256 [29078,29085]"/>
  <match src="uint256: uint256 [32012,32019]" dest="uint256: uint256 [31878,31885]"/>
  <match src="identifier: tokenIds [49095,49103]" dest="identifier: tokenIds [49179,49187]"/>
  <match src="return: return [9735,9741]" dest="return: return [9702,9708]"/>
  <match src="return_statement [32125,32139]" dest="return_statement [31991,32005]"/>
  <match src="visibility [21511,21518]" dest="visibility [21377,21384]"/>
  <match src="uint256: uint256 [35656,35663]" dest="uint256: uint256 [35522,35529]"/>
  <match src="function_definition [6575,6715]" dest="function_definition [6542,6682]"/>
  <match src="expression_statement [45240,45254]" dest="expression_statement [45039,45053]"/>
  <match src="variable_declaration [54526,54547]" dest="variable_declaration [54760,54781]"/>
  <match src="function: function [7262,7270]" dest="function: function [7229,7237]"/>
  <match src="call_argument [13164,13166]" dest="call_argument [13098,13100]"/>
  <match src="(: ( [35725,35726]" dest="(: ( [35591,35592]"/>
  <match src="}: } [34358,34359]" dest="}: } [34224,34225]"/>
  <match src="member_expression [27634,27650]" dest="member_expression [27499,27515]"/>
  <match src=",: , [22818,22819]" dest=",: , [22684,22685]"/>
  <match src="comment: // # of bytes the actual length is [34016,34050]" dest="comment: // # of bytes the actual length is [33882,33916]"/>
  <match src="address: address [41254,41261]" dest="address: address [41052,41059]"/>
  <match src="event_paramater [46800,46815]" dest="event_paramater [46598,46613]"/>
  <match src="(: ( [35175,35176]" dest="(: ( [35041,35042]"/>
  <match src="parameter [7717,7721]" dest="parameter [7684,7688]"/>
  <match src="parameter [8015,8028]" dest="parameter [7982,7995]"/>
  <match src="call_expression [25088,25133]" dest="call_expression [24954,24999]"/>
  <match src="return: return [17303,17309]" dest="return: return [17237,17243]"/>
  <match src="event_definition [22608,22697]" dest="event_definition [22474,22563]"/>
  <match src="function_body [8305,8386]" dest="function_body [8272,8353]"/>
  <match src="uint8: uint8 [28315,28320]" dest="uint8: uint8 [28181,28186]"/>
  <match src="type_name [48823,48832]" dest="type_name [48907,48916]"/>
  <match src=",: , [54636,54637]" dest=",: , [54870,54871]"/>
  <match src="variable_declaration [31734,31752]" dest="variable_declaration [31600,31618]"/>
  <match src="yul_evm_builtin [31382,31387]" dest="yul_evm_builtin [31248,31253]"/>
  <match src="is: is [45410,45412]" dest="is: is [45208,45210]"/>
  <match src="uint256: uint256 [28445,28452]" dest="uint256: uint256 [28311,28318]"/>
  <match src="call_argument [29195,29200]" dest="call_argument [29061,29066]"/>
  <match src="identifier: IMintableERC721 [53965,53980]" dest="identifier: IMintableERC721 [54199,54214]"/>
  <match src=".: . [6902,6903]" dest=".: . [6869,6870]"/>
  <match src=",: , [25035,25036]" dest=",: , [24901,24902]"/>
  <match src="=&gt;: =&gt; [2505,2507]" dest="=&gt;: =&gt; [2472,2474]"/>
  <match src="): ) [31870,31871]" dest="): ) [31736,31737]"/>
  <match src="{: { [28412,28413]" dest="{: { [28278,28279]"/>
  <match src="function: function [26776,26784]" dest="function: function [26642,26650]"/>
  <match src="visibility [50129,50135]" dest="visibility [50213,50219]"/>
  <match src="(: ( [7745,7746]" dest="(: ( [7712,7713]"/>
  <match src="(: ( [41238,41239]" dest="(: ( [41036,41037]"/>
  <match src="(: ( [16865,16866]" dest="(: ( [16799,16800]"/>
  <match src="primitive_type [44382,44387]" dest="primitive_type [44180,44185]"/>
  <match src="return_statement [30474,30488]" dest="return_statement [30340,30354]"/>
  <match src="identifier: role [27778,27782]" dest="identifier: role [27643,27647]"/>
  <match src="(: ( [28548,28549]" dest="(: ( [28414,28415]"/>
  <match src="function_body [16714,17008]" dest="function_body [16648,16942]"/>
  <match src="type_name [22242,22249]" dest="type_name [22108,22115]"/>
  <match src="uint256: uint256 [6864,6871]" dest="uint256: uint256 [6831,6838]"/>
  <match src="primitive_type [46800,46807]" dest="primitive_type [46598,46605]"/>
  <match src="(: ( [24614,24615]" dest="(: ( [24480,24481]"/>
  <match src="(: ( [9717,9718]" dest="(: ( [9684,9685]"/>
  <match src="yul_assignment [31504,31549]" dest="yul_assignment [31370,31415]"/>
  <match src="): ) [14614,14615]" dest="): ) [14548,14549]"/>
  <match src="(: ( [33163,33164]" dest="(: ( [33029,33030]"/>
  <match src="string_literal [49287,49333]" dest="string_literal [49371,49417]"/>
  <match src="type_name [7684,7691]" dest="type_name [7651,7658]"/>
  <match src="variable_declaration_tuple [16865,16904]" dest="variable_declaration_tuple [16799,16838]"/>
  <match src=",: , [34650,34651]" dest=",: , [34516,34517]"/>
  <match src="not: not [36204,36207]" dest="not: not [36070,36073]"/>
  <match src="array_access [29545,29554]" dest="array_access [29411,29420]"/>
  <match src="visibility [27594,27602]" dest="visibility [27459,27467]"/>
  <match src="=: = [46340,46341]" dest="=: = [46138,46139]"/>
  <match src="): ) [7721,7722]" dest="): ) [7688,7689]"/>
  <match src=".: . [15905,15906]" dest=".: . [15839,15840]"/>
  <match src="struct_member [28445,28460]" dest="struct_member [28311,28326]"/>
  <match src="identifier: WORD_SIZE [36118,36127]" dest="identifier: WORD_SIZE [35984,35993]"/>
  <match src="bytes32: bytes32 [21977,21984]" dest="bytes32: bytes32 [21843,21850]"/>
  <match src="call_expression [49507,49533]" dest="call_expression [49591,49617]"/>
  <match src="returns: returns [18127,18134]" dest="returns: returns [18061,18068]"/>
  <match src="}: } [27852,27853]" dest="}: } [27717,27718]"/>
  <match src="): ) [13255,13256]" dest="): ) [13189,13190]"/>
  <match src="identifier: rootToken [46780,46789]" dest="identifier: rootToken [46578,46587]"/>
  <match src="parameter [15097,15109]" dest="parameter [15031,15043]"/>
  <match src="identifier: toUint [51777,51783]" dest="identifier: toUint [51933,51939]"/>
  <match src=",: , [17652,17653]" dest=",: , [17586,17587]"/>
  <match src="(: ( [27056,27057]" dest="(: ( [26922,26923]"/>
  <match src="yul_path [31518,31524]" dest="yul_path [31384,31390]"/>
  <match src="type_cast_expression [50646,50682]" dest="type_cast_expression [50730,50766]"/>
  <match src="identifier: RLPReader [28160,28169]" dest="identifier: RLPReader [28026,28035]"/>
  <match src=",: , [17989,17990]" dest=",: , [17923,17924]"/>
  <match src=".: . [50282,50283]" dest=".: . [50366,50367]"/>
  <match src="for_statement [49453,49607]" dest="for_statement [49537,49691]"/>
  <match src="identifier: require [30965,30972]" dest="identifier: require [30831,30838]"/>
  <match src=",: , [48024,48025]" dest=",: , [48108,48109]"/>
  <match src="visibility [46291,46297]" dest="visibility [46089,46095]"/>
  <match src="identifier: items [29474,29479]" dest="identifier: items [29340,29345]"/>
  <match src="identifier: _at [5608,5611]" dest="identifier: _at [5575,5578]"/>
  <match src="identifier: depositor [46702,46711]" dest="identifier: depositor [46500,46509]"/>
  <match src="memory: memory [48833,48839]" dest="memory: memory [48917,48923]"/>
  <match src="bool: bool [13114,13118]" dest="bool: bool [13048,13052]"/>
  <match src="type_name [47072,47079]" dest="type_name [47156,47163]"/>
  <match src="return_type_definition [32885,32902]" dest="return_type_definition [32751,32768]"/>
  <match src="identifier: set [6393,6396]" dest="identifier: set [6360,6363]"/>
  <match src="(: ( [53754,53755]" dest="(: ( [53988,53989]"/>
  <match src="identifier: role [22889,22893]" dest="identifier: role [22755,22759]"/>
  <match src="type_name [46722,46729]" dest="type_name [46520,46527]"/>
  <match src="string [28675,28708]" dest="string [28541,28574]"/>
  <match src=",: , [34755,34756]" dest=",: , [34621,34622]"/>
  <match src="mload: mload [35022,35027]" dest="mload: mload [34888,34893]"/>
  <match src="storage: storage [8002,8009]" dest="storage: storage [7969,7976]"/>
  <match src="(: ( [52884,52885]" dest="(: ( [53118,53119]"/>
  <match src=".: . [30458,30459]" dest=".: . [30324,30325]"/>
  <match src="identifier: _length [8562,8569]" dest="identifier: _length [8529,8536]"/>
  <match src="identifier: this [48723,48727]" dest="identifier: this [48807,48811]"/>
  <match src="function: function [43101,43109]" dest="function: function [42900,42908]"/>
  <match src="}: } [51164,51165]" dest="}: } [51248,51249]"/>
  <match src="identifier: value [15072,15077]" dest="identifier: value [15006,15011]"/>
  <match src="(: ( [36324,36325]" dest="(: ( [36190,36191]"/>
  <match src="identifier: _contains [8323,8332]" dest="identifier: _contains [8290,8299]"/>
  <match src="type_name [32382,32389]" dest="type_name [32248,32255]"/>
  <match src="yul_decimal_number: 32 [31539,31541]" dest="yul_decimal_number: 32 [31405,31407]"/>
  <match src="}: } [33492,33493]" dest="}: } [33358,33359]"/>
  <match src="pragma_directive [37356,37387]" dest="pragma_directive [37156,37187]"/>
  <match src="visibility [2757,2764]" dest="visibility [2724,2731]"/>
  <match src="identifier: _remove [9742,9749]" dest="identifier: _remove [9709,9716]"/>
  <match src="call_argument [15672,15712]" dest="call_argument [15606,15646]"/>
  <match src="): ) [24711,24712]" dest="): ) [24577,24578]"/>
  <match src="primitive_type [43496,43500]" dest="primitive_type [43295,43299]"/>
  <match src="memory: memory [15613,15619]" dest="memory: memory [15547,15553]"/>
  <match src="identifier: len [28431,28434]" dest="identifier: len [28297,28300]"/>
  <match src=":=: := [31511,31513]" dest=":=: := [31377,31379]"/>
  <match src="uint256: uint256 [41947,41954]" dest="uint256: uint256 [41745,41752]"/>
  <match src="(: ( [47359,47360]" dest="(: ( [47443,47444]"/>
  <match src="yul_function_call [34635,34661]" dest="yul_function_call [34501,34527]"/>
  <match src="constant: constant [28365,28373]" dest="constant: constant [28231,28239]"/>
  <match src="call_expression [48660,48686]" dest="call_expression [48744,48770]"/>
  <match src="primitive_type [41964,41969]" dest="primitive_type [41762,41767]"/>
  <match src="yul_decimal_number: 32 [31481,31483]" dest="yul_decimal_number: 32 [31347,31349]"/>
  <match src=".: . [32277,32278]" dest=".: . [32143,32144]"/>
  <match src="identifier: ApprovalForAll [38016,38030]" dest="identifier: ApprovalForAll [37814,37828]"/>
  <match src="+: + [4527,4528]" dest="+: + [4494,4495]"/>
  <match src="primitive_type [44941,44948]" dest="primitive_type [44739,44746]"/>
  <match src="primitive_type [31734,31741]" dest="primitive_type [31600,31607]"/>
  <match src="parameter [26552,26564]" dest="parameter [26418,26430]"/>
  <match src="(: ( [38468,38469]" dest="(: ( [38266,38267]"/>
  <match src="bytes32: bytes32 [22242,22249]" dest="bytes32: bytes32 [22108,22115]"/>
  <match src=",: , [46898,46899]" dest=",: , [46696,46697]"/>
  <match src="yul_path [34206,34212]" dest="yul_path [34072,34078]"/>
  <match src="visibility [44416,44424]" dest="visibility [44214,44222]"/>
  <match src="identifier: _values [2838,2845]" dest="identifier: _values [2805,2812]"/>
  <match src="member_expression [9750,9760]" dest="member_expression [9717,9727]"/>
  <match src="call_argument [53981,53990]" dest="call_argument [54215,54224]"/>
  <match src="identifier: set [3506,3509]" dest="identifier: set [3473,3476]"/>
  <match src="indexed: indexed [38062,38069]" dest="indexed: indexed [37860,37867]"/>
  <match src="identifier: errorMessage [16663,16675]" dest="identifier: errorMessage [16597,16609]"/>
  <match src="identifier: _itemLength [32261,32272]" dest="identifier: _itemLength [32127,32138]"/>
  <match src="primitive_type [44292,44299]" dest="primitive_type [44090,44097]"/>
  <match src="&lt;:  &lt; [18881,18883]" dest="&lt;:  &lt; [19777,19779]"/>
  <match src="(: ( [51259,51260]" dest="(: ( [51415,51416]"/>
  <match src="): ) [32101,32102]" dest="): ) [31967,31968]"/>
  <match src="identifier: src [35642,35645]" dest="identifier: src [35508,35511]"/>
  <match src="=: = [53963,53964]" dest="=: = [54197,54198]"/>
  <match src="function_definition [16586,17008]" dest="function_definition [16520,16942]"/>
  <match src="]: ] [3524,3525]" dest="]: ] [3491,3492]"/>
  <match src="return: return [32697,32703]" dest="return: return [32563,32569]"/>
  <match src="yul_path [35908,35911]" dest="yul_path [35774,35777]"/>
  <match src="identifier: initializer [47097,47108]" dest="identifier: initializer [47181,47192]"/>
  <match src="variable_declaration_statement [32240,32286]" dest="variable_declaration_statement [32106,32152]"/>
  <match src="): ) [26635,26636]" dest="): ) [26501,26502]"/>
  <match src="bytes: bytes [30310,30315]" dest="bytes: bytes [30176,30181]"/>
  <match src="): ) [34014,34015]" dest="): ) [33880,33881]"/>
  <match src="identifier: set [2737,2740]" dest="identifier: set [2704,2707]"/>
  <match src="identifier: data [15058,15062]" dest="identifier: data [14992,14996]"/>
  <match src="bool: bool [22858,22862]" dest="bool: bool [22724,22728]"/>
  <match src="{: { [27092,27093]" dest="{: { [26958,26959]"/>
  <match src="identifier: rootToken [48676,48685]" dest="identifier: rootToken [48760,48769]"/>
  <match src="primitive_type [41239,41246]" dest="primitive_type [41037,41044]"/>
  <match src="return_statement [47524,47573]" dest="return_statement [47608,47657]"/>
  <match src="bool: bool [6127,6131]" dest="bool: bool [6094,6098]"/>
  <match src="identifier: toBytes [51907,51914]" dest="identifier: toBytes [52063,52070]"/>
  <match src="primitive_type [50443,50450]" dest="primitive_type [50527,50534]"/>
  <match src="uint8: uint8 [28359,28364]" dest="uint8: uint8 [28225,28230]"/>
  <match src="return: return [32125,32131]" dest="return: return [31991,31997]"/>
  <match src="primitive_type [8345,8352]" dest="primitive_type [8312,8319]"/>
  <match src="expression_statement [25819,25903]" dest="expression_statement [25685,25769]"/>
  <match src="): ) [27351,27352]" dest="): ) [27217,27218]"/>
  <match src="}: } [35046,35047]" dest="}: } [34912,34913]"/>
  <match src="type_name [29185,29194]" dest="type_name [29051,29060]"/>
  <match src="): ) [23220,23221]" dest="): ) [23086,23087]"/>
  <match src="expression_statement [54141,54282]" dest="expression_statement [54375,54516]"/>
  <match src="call_expression [50238,50253]" dest="call_expression [50322,50337]"/>
  <match src="primitive_type [31714,31721]" dest="primitive_type [31580,31587]"/>
  <match src="string_literal [47137,47162]" dest="string_literal [47221,47246]"/>
  <match src="(: ( [14584,14585]" dest="(: ( [14518,14519]"/>
  <match src="(: ( [4654,4655]" dest="(: ( [4621,4622]"/>
  <match src="identifier: value [8023,8028]" dest="identifier: value [7990,7995]"/>
  <match src="string_literal [54849,54893]" dest="string_literal [55155,55199]"/>
  <match src="constant: constant [28276,28284]" dest="constant: constant [28142,28150]"/>
  <match src="member_expression [51758,51783]" dest="member_expression [51914,51939]"/>
  <match src="): ) [53808,53809]" dest="): ) [54042,54043]"/>
  <match src="identifier: EnumerableSet [1807,1820]" dest="identifier: EnumerableSet [1774,1787]"/>
  <match src="return_type_definition [5193,5210]" dest="return_type_definition [5160,5177]"/>
  <match src="function_definition [42452,42506]" dest="function_definition [42251,42305]"/>
  <match src="&lt;: &lt; [33921,33922]" dest="&lt;: &lt; [33787,33788]"/>
  <match src="primitive_type [4244,4251]" dest="primitive_type [4211,4218]"/>
  <match src="expression_statement [45183,45218]" dest="expression_statement [44982,45017]"/>
  <match src="call_expression [53676,53703]" dest="call_expression [53910,53937]"/>
  <match src="return_type_definition [19592,19614]" dest="return_type_definition [19493,19515]"/>
  <match src="call_argument [16346,16385]" dest="call_argument [16280,16319]"/>
  <match src="[: [ [29192,29193]" dest="[: [ [29058,29059]"/>
  <match src="identifier: listLength [32304,32314]" dest="identifier: listLength [32170,32180]"/>
  <match src="primitive_type [47406,47413]" dest="primitive_type [47490,47497]"/>
  <match src="bytes: bytes [16239,16244]" dest="bytes: bytes [16173,16178]"/>
  <match src=",: , [5720,5721]" dest=",: , [5687,5688]"/>
  <match src="yul_function_call [30391,30408]" dest="yul_function_call [30257,30274]"/>
  <match src="identifier: logTopicRLPList [51758,51773]" dest="identifier: logTopicRLPList [51914,51929]"/>
  <match src="uint256: uint256 [37653,37660]" dest="uint256: uint256 [37451,37458]"/>
  <match src="(: ( [35807,35808]" dest="(: ( [35673,35674]"/>
  <match src="string_literal [25135,25185]" dest="string_literal [25001,25051]"/>
  <match src="private: private [5644,5651]" dest="private: private [5611,5618]"/>
  <match src="}: } [25232,25233]" dest="}: } [25098,25099]"/>
  <match src="call_argument [15968,15975]" dest="call_argument [15902,15909]"/>
  <match src="parameter [23851,23863]" dest="parameter [23717,23729]"/>
  <match src="variable_declaration [29114,29127]" dest="variable_declaration [28980,28993]"/>
  <match src="{: { [33941,33942]" dest="{: { [33807,33808]"/>
  <match src="user_defined_type [6070,6080]" dest="user_defined_type [6037,6047]"/>
  <match src=".: . [27069,27070]" dest=".: . [26935,26936]"/>
  <match src="]: ] [2341,2342]" dest="]: ] [2308,2309]"/>
  <match src="parameter [27214,27229]" dest="parameter [27080,27095]"/>
  <match src="solidity_version: 0.8.0 [37381,37386]" dest="solidity_version: 0.8.0 [37181,37186]"/>
  <match src="): ) [15749,15750]" dest="): ) [15683,15684]"/>
  <match src="(: ( [6126,6127]" dest="(: ( [6093,6094]"/>
  <match src="memory: memory [29797,29803]" dest="memory: memory [29663,29669]"/>
  <match src="(: ( [17277,17278]" dest="(: ( [17211,17212]"/>
  <match src="comment: /**  * @dev Interface of the ERC165 standard, as defined in the  * https://eips.ethereum.org/EIPS/eip-165[EIP].  *  * Implementers can declare support of contract interfaces, which can then be  * queried by others ({ERC165Checker}).  *  * For an implementation, see {ERC165}.  */ [36510,36797]" dest="comment: /**  * @dev Interface of the ERC165 standard, as defined in the  * https://eips.ethereum.org/EIPS/eip-165[EIP].  *  * Implementers can declare support of contract interfaces, which can then be  * queried by others ({ERC165Checker}).  *  * For an implementation, see {ERC165}.  */ [36343,36630]"/>
  <match src="}: } [48751,48752]" dest="}: } [48835,48836]"/>
  <match src="(: ( [34526,34527]" dest="(: ( [34392,34393]"/>
  <match src="number_literal: 1 [51774,51775]" dest="number_literal: 1 [51930,51931]"/>
  <match src="uint256: uint256 [33604,33611]" dest="uint256: uint256 [33470,33477]"/>
  <match src="primitive_type [7766,7773]" dest="primitive_type [7733,7740]"/>
  <match src="expression_statement [30896,30955]" dest="expression_statement [30762,30821]"/>
  <match src="type_name [48300,48307]" dest="type_name [48384,48391]"/>
  <match src="call_argument [8369,8374]" dest="call_argument [8336,8341]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [17016,17189]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [16950,17123]"/>
  <match src="call_argument [7766,7789]" dest="call_argument [7733,7756]"/>
  <match src="&quot;: &quot; [29074,29075]" dest="&quot;: &quot; [28940,28941]"/>
  <match src="variable_declaration_statement [33624,33640]" dest="variable_declaration_statement [33490,33506]"/>
  <match src=",: , [41933,41934]" dest=",: , [41731,41732]"/>
  <match src="}: } [18764,18765]" dest="}: } [18698,18699]"/>
  <match src=".: . [33208,33209]" dest=".: . [33074,33075]"/>
  <match src=",: , [8259,8260]" dest=",: , [8226,8227]"/>
  <match src="identifier: item [31812,31816]" dest="identifier: item [31678,31682]"/>
  <match src="user_defined_type [28618,28625]" dest="user_defined_type [28484,28491]"/>
  <match src="primitive_type [8535,8542]" dest="primitive_type [8502,8509]"/>
  <match src="identifier: set [4264,4267]" dest="identifier: set [4231,4234]"/>
  <match src=",: , [54568,54569]" dest=",: , [54802,54803]"/>
  <match src="call_expression [32399,32426]" dest="call_expression [32265,32292]"/>
  <match src="comment: /**      * @dev Returns `true` if `account` has been granted `role`.      */ [22705,22783]" dest="comment: /**      * @dev Returns `true` if `account` has been granted `role`.      */ [22571,22649]"/>
  <match src="type_name [21501,21509]" dest="type_name [21367,21375]"/>
  <match src="(: ( [54098,54099]" dest="(: ( [54332,54333]"/>
  <match src="(: ( [9947,9948]" dest="(: ( [9914,9915]"/>
  <match src="expression_statement [49469,49480]" dest="expression_statement [49553,49564]"/>
  <match src="state_variable_declaration [21481,21526]" dest="state_variable_declaration [21347,21392]"/>
  <match src="uint256: uint256 [887,894]" dest="uint256: uint256 [887,894]"/>
  <match src=",: , [47203,47204]" dest=",: , [47287,47288]"/>
  <match src="solidity_version_comparison_operator [36498,36500]" dest="solidity_version_comparison_operator [36331,36333]"/>
  <match src="call_expression [47174,47212]" dest="call_expression [47258,47296]"/>
  <match src="-: - [32462,32463]" dest="-: - [32328,32329]"/>
  <match src="visibility [15589,15597]" dest="visibility [15523,15531]"/>
  <match src=",: , [38052,38053]" dest=",: , [37850,37851]"/>
  <match src="}: } [27363,27364]" dest="}: } [27229,27230]"/>
  <match src="uint256: uint256 [48823,48830]" dest="uint256: uint256 [48907,48914]"/>
  <match src="): ) [5209,5210]" dest="): ) [5176,5177]"/>
  <match src="primitive_type [29850,29855]" dest="primitive_type [29716,29721]"/>
  <match src="yul_decimal_number: 32 [34228,34230]" dest="yul_decimal_number: 32 [34094,34096]"/>
  <match src="state_variable_declaration [28315,28353]" dest="state_variable_declaration [28181,28219]"/>
  <match src="memory: memory [29165,29171]" dest="memory: memory [29031,29037]"/>
  <match src="function_definition [30503,30808]" dest="function_definition [30369,30674]"/>
  <match src=",: , [34642,34643]" dest=",: , [34508,34509]"/>
  <match src="identifier: depositor [46889,46898]" dest="identifier: depositor [46687,46696]"/>
  <match src="visibility [40408,40416]" dest="visibility [40206,40214]"/>
  <match src="returns: returns [29824,29831]" dest="returns: returns [29690,29697]"/>
  <match src="expression_statement [27748,27834]" dest="expression_statement [27613,27699]"/>
  <match src="solidity_pragma_token [37363,37386]" dest="solidity_pragma_token [37163,37186]"/>
  <match src="identifier: to [41943,41945]" dest="identifier: to [41741,41743]"/>
  <match src="&quot;: &quot; [30919,30920]" dest="&quot;: &quot; [30785,30786]"/>
  <match src="contract_body [27503,27856]" dest="contract_body [27368,27721]"/>
  <match src="&quot;: &quot; [45200,45201]" dest="&quot;: &quot; [44999,45000]"/>
  <match src="identifier: data [41979,41983]" dest="identifier: data [41777,41781]"/>
  <match src="(: ( [3317,3318]" dest="(: ( [3284,3285]"/>
  <match src="function_definition [6057,6182]" dest="function_definition [6024,6149]"/>
  <match src="}: } [19782,19783]" dest="}: } [19683,19684]"/>
  <match src="library_declaration [1799,10701]" dest="library_declaration [1766,10668]"/>
  <match src="storage: storage [10581,10588]" dest="storage: storage [10548,10555]"/>
  <match src="type_name [43115,43122]" dest="type_name [42914,42921]"/>
  <match src="identifier: isContract [16733,16743]" dest="identifier: isContract [16667,16677]"/>
  <match src="returns: returns [15598,15605]" dest="returns: returns [15532,15539]"/>
  <match src="(: ( [48722,48723]" dest="(: ( [48806,48807]"/>
  <match src="return: return [19760,19766]" dest="return: return [19661,19667]"/>
  <match src=",: , [16237,16238]" dest=",: , [16171,16172]"/>
  <match src="contract: contract [19412,19420]" dest="contract: contract [19313,19321]"/>
  <match src="parameter [8237,8259]" dest="parameter [8204,8226]"/>
  <match src="function_body [18149,18762]" dest="function_body [18083,18696]"/>
  <match src="): ) [36351,36352]" dest="): ) [36217,36218]"/>
  <match src="parameter [16614,16628]" dest="parameter [16548,16562]"/>
  <match src="bytes32: bytes32 [26813,26820]" dest="bytes32: bytes32 [26679,26686]"/>
  <match src="(: ( [51267,51268]" dest="(: ( [51423,51424]"/>
  <match src="): ) [53702,53703]" dest="): ) [53936,53937]"/>
  <match src="member_expression [8080,8090]" dest="member_expression [8047,8057]"/>
  <match src=",: , [36202,36203]" dest=",: , [36068,36069]"/>
  <match src="): ) [35034,35035]" dest="): ) [34900,34901]"/>
  <match src="uint256: uint256 [2508,2515]" dest="uint256: uint256 [2475,2482]"/>
  <match src="): ) [35734,35735]" dest="): ) [35600,35601]"/>
  <match src="function_body [34946,35445]" dest="function_body [34812,35311]"/>
  <match src="primitive_type [29355,29362]" dest="primitive_type [29221,29228]"/>
  <match src="): ) [35432,35433]" dest="): ) [35298,35299]"/>
  <match src="unary_expression [30594,30607]" dest="unary_expression [30460,30473]"/>
  <match src="else: else [48753,48757]" dest="else: else [48837,48841]"/>
  <match src="identifier: WORD_SIZE [28374,28383]" dest="identifier: WORD_SIZE [28240,28249]"/>
  <match src="return_type_definition [23892,23909]" dest="return_type_definition [23758,23775]"/>
  <match src="return: return [10183,10189]" dest="return: return [10150,10156]"/>
  <match src="primitive_type [22242,22249]" dest="primitive_type [22108,22115]"/>
  <match src="identifier: logTopicRLPList [51268,51283]" dest="identifier: logTopicRLPList [51424,51439]"/>
  <match src="primitive_type [48097,48102]" dest="primitive_type [48181,48186]"/>
  <match src="identifier: endPtr [33195,33201]" dest="identifier: endPtr [33061,33067]"/>
  <match src="yul_identifier [28769,28775]" dest="yul_identifier [28635,28641]"/>
  <match src="comment: /**      * @dev Emitted when `account` is granted `role`.      *      * `sender` is the account that originated the contract call, an admin role      * bearer except when using {_setupRole}.      */ [22015,22218]" dest="comment: /**      * @dev Emitted when `account` is granted `role`.      *      * `sender` is the account that originated the contract call, an admin role      * bearer except when using {_setupRole}.      */ [21881,22084]"/>
  <match src="): ) [4980,4981]" dest="): ) [4947,4948]"/>
  <match src="primitive_type [46909,46916]" dest="primitive_type [46707,46714]"/>
  <match src="bytes: bytes [28549,28554]" dest="bytes: bytes [28415,28420]"/>
  <match src="returns: returns [7708,7715]" dest="returns: returns [7675,7682]"/>
  <match src="): ) [31483,31484]" dest="): ) [31349,31350]"/>
  <match src="binary_expression [30973,30987]" dest="binary_expression [30839,30853]"/>
  <match src="primitive_type [10632,10639]" dest="primitive_type [10599,10606]"/>
  <match src="): ) [32284,32285]" dest="): ) [32150,32151]"/>
  <match src="identifier: byte0 [34527,34532]" dest="identifier: byte0 [34393,34398]"/>
  <match src="call_expression [30896,30954]" dest="call_expression [30762,30820]"/>
  <match src="visibility [17682,17690]" dest="visibility [17616,17624]"/>
  <match src="private: private [18114,18121]" dest="private: private [18048,18055]"/>
  <match src="solidity_version_comparison_operator [10817,10819]" dest="solidity_version_comparison_operator [10751,10753]"/>
  <match src="returns: returns [31705,31712]" dest="returns: returns [31571,31578]"/>
  <match src=".: . [8336,8337]" dest=".: . [8303,8304]"/>
  <match src="call_expression [54615,54656]" dest="call_expression [54849,54890]"/>
  <match src="uint160: uint160 [9042,9049]" dest="uint160: uint160 [9009,9016]"/>
  <match src="external: external [40408,40416]" dest="external: external [40206,40214]"/>
  <match src="{: { [19506,19507]" dest="{: { [19407,19408]"/>
  <match src="internal: internal [26832,26840]" dest="internal: internal [26698,26706]"/>
  <match src="identifier: token [51009,51014]" dest="identifier: token [51093,51098]"/>
  <match src="variable_declaration_statement [16865,16931]" dest="variable_declaration_statement [16799,16865]"/>
  <match src="): ) [37222,37223]" dest="): ) [37055,37056]"/>
  <match src="yul_path [33721,33727]" dest="yul_path [33587,33593]"/>
  <match src="identifier: target [17744,17750]" dest="identifier: target [17678,17684]"/>
  <match src="return_statement [31587,31601]" dest="return_statement [31453,31467]"/>
  <match src="{: { [52159,52160]" dest="{: { [52315,52316]"/>
  <match src="parameter [41239,41252]" dest="parameter [41037,41050]"/>
  <match src="{: { [10641,10642]" dest="{: { [10608,10609]"/>
  <match src="state_mutability [24198,24202]" dest="state_mutability [24064,24068]"/>
  <match src="): ) [52885,52886]" dest="): ) [53119,53120]"/>
  <match src="]: ] [51992,51993]" dest="]: ] [52148,52149]"/>
  <match src="identifier: _remove [3310,3317]" dest="identifier: _remove [3277,3284]"/>
  <match src="primitive_type [16614,16621]" dest="primitive_type [16548,16555]"/>
  <match src="function_body [9954,10017]" dest="function_body [9921,9984]"/>
  <match src="): ) [51295,51296]" dest="): ) [51451,51452]"/>
  <match src="block_statement [18173,18217]" dest="block_statement [18107,18151]"/>
  <match src="identifier: EnumerableSet [21405,21418]" dest="identifier: EnumerableSet [21271,21284]"/>
  <match src="identifier: target [15519,15525]" dest="identifier: target [15453,15459]"/>
  <match src="if: if [35059,35061]" dest="if: if [34925,34927]"/>
  <match src="type_name [40391,40398]" dest="type_name [40189,40196]"/>
  <match src="yul_function_call [31535,31547]" dest="yul_function_call [31401,31413]"/>
  <match src="call_expression [5686,5759]" dest="call_expression [5653,5726]"/>
  <match src="return: return [14123,14129]" dest="return: return [14057,14063]"/>
  <match src="call_argument [52771,52781]" dest="call_argument [52927,52937]"/>
  <match src="variable_declaration [32382,32396]" dest="variable_declaration [32248,32262]"/>
  <match src="function_definition [9648,9785]" dest="function_definition [9615,9752]"/>
  <match src="identifier: offset [32390,32396]" dest="identifier: offset [32256,32262]"/>
  <match src="yul_identifier [36208,36212]" dest="yul_identifier [36074,36078]"/>
  <match src=",: , [16647,16648]" dest=",: , [16581,16582]"/>
  <match src="uint256: uint256 [49209,49216]" dest="uint256: uint256 [49293,49300]"/>
  <match src="identifier: AddressSet [7429,7439]" dest="identifier: AddressSet [7396,7406]"/>
  <match src="primitive_type [9762,9769]" dest="primitive_type [9729,9736]"/>
  <match src="function: function [25003,25011]" dest="function: function [24869,24877]"/>
  <match src="call_expression [25819,25902]" dest="call_expression [25685,25768]"/>
  <match src="): ) [35844,35845]" dest="): ) [35710,35711]"/>
  <match src="comment: // right shifting to the correct length [34663,34702]" dest="comment: // right shifting to the correct length [34529,34568]"/>
  <match src="type_cast_expression [12957,12970]" dest="type_cast_expression [12891,12904]"/>
  <match src="type_name [47424,47429]" dest="type_name [47508,47513]"/>
  <match src="+: + [31329,31330]" dest="+: + [31195,31196]"/>
  <match src=":=: := [29941,29943]" dest=":=: := [29807,29809]"/>
  <match src=",: , [37651,37652]" dest=",: , [37449,37450]"/>
  <match src="function_body [45172,45261]" dest="function_body [44971,45060]"/>
  <match src="yul_function_call [36264,36275]" dest="yul_function_call [36130,36141]"/>
  <match src="virtual: virtual [24588,24595]" dest="virtual: virtual [24454,24461]"/>
  <match src="expression_statement [47120,47164]" dest="expression_statement [47204,47248]"/>
  <match src=".: . [27266,27267]" dest=".: . [27132,27133]"/>
  <match src="identifier: MANAGER_ROLE [48181,48193]" dest="identifier: MANAGER_ROLE [48265,48277]"/>
  <match src="yul_identifier [34557,34563]" dest="yul_identifier [34423,34429]"/>
  <match src="bool: bool [8048,8052]" dest="bool: bool [8015,8019]"/>
  <match src="returns: returns [24203,24210]" dest="returns: returns [24069,24076]"/>
  <match src="yul_path [32079,32085]" dest="yul_path [31945,31951]"/>
  <match src="(: ( [31766,31767]" dest="(: ( [31632,31633]"/>
  <match src="): ) [51294,51295]" dest="): ) [51450,51451]"/>
  <match src="primitive_type [22289,22296]" dest="primitive_type [22155,22162]"/>
  <match src="visibility [25793,25799]" dest="visibility [25659,25665]"/>
  <match src="identifier: token [51190,51195]" dest="identifier: token [51274,51279]"/>
  <match src="uint256: uint256 [48300,48307]" dest="uint256: uint256 [48384,48391]"/>
  <match src="call_argument [30594,30607]" dest="call_argument [30460,30473]"/>
  <match src="}: } [24268,24269]" dest="}: } [24134,24135]"/>
  <match src="(: ( [47233,47234]" dest="(: ( [47317,47318]"/>
  <match src="call_expression [51009,51149]" dest="call_expression [51093,51233]"/>
  <match src="function_body [29041,29666]" dest="function_body [28907,29532]"/>
  <match src="yul_path [30401,30407]" dest="yul_path [30267,30273]"/>
  <match src="member_expression [48318,48328]" dest="member_expression [48402,48412]"/>
  <match src="primitive_type [51870,51875]" dest="primitive_type [52026,52031]"/>
  <match src="function_definition [39810,39884]" dest="function_definition [39608,39682]"/>
  <match src="identifier: role [23199,23203]" dest="identifier: role [23065,23069]"/>
  <match src="&quot;: &quot; [31163,31164]" dest="&quot;: &quot; [31029,31030]"/>
  <match src="function_definition [4931,5060]" dest="function_definition [4898,5027]"/>
  <match src=":=: := [28776,28778]" dest=":=: := [28642,28644]"/>
  <match src="address: address [16223,16230]" dest="address: address [16157,16164]"/>
  <match src="call_argument [48329,48340]" dest="call_argument [48413,48424]"/>
  <match src="(: ( [48875,48876]" dest="(: ( [48959,48960]"/>
  <match src="identifier: _roles [22882,22888]" dest="identifier: _roles [22748,22754]"/>
  <match src="variable_declaration [36097,36109]" dest="variable_declaration [35963,35975]"/>
  <match src="function_definition [28530,28860]" dest="function_definition [28396,28726]"/>
  <match src="(: ( [48861,48862]" dest="(: ( [48945,48946]"/>
  <match src="array_access [26888,26900]" dest="array_access [26754,26766]"/>
  <match src="identifier: set [2806,2809]" dest="identifier: set [2773,2776]"/>
  <match src="is: is [37482,37484]" dest="is: is [37280,37282]"/>
  <match src="primitive_type [40391,40398]" dest="primitive_type [40189,40196]"/>
  <match src="public: public [50129,50135]" dest="public: public [50213,50219]"/>
  <match src="(: ( [18046,18047]" dest="(: ( [17980,17981]"/>
  <match src="identifier: tokenId [48514,48521]" dest="identifier: tokenId [48598,48605]"/>
  <match src="(: ( [14046,14047]" dest="(: ( [13980,13981]"/>
  <match src="{: { [6661,6662]" dest="{: { [6628,6629]"/>
  <match src="yul_evm_builtin [33707,33711]" dest="yul_evm_builtin [33573,33577]"/>
  <match src="block_statement [35846,36004]" dest="block_statement [35712,35870]"/>
  <match src="&quot;: &quot; [31972,31973]" dest="&quot;: &quot; [31838,31839]"/>
  <match src="block_statement [48758,49620]" dest="block_statement [48842,49704]"/>
  <match src="identifier: account [22664,22671]" dest="identifier: account [22530,22537]"/>
  <match src="type_name [33566,33573]" dest="type_name [33432,33439]"/>
  <match src="identifier: value [6168,6173]" dest="identifier: value [6135,6140]"/>
  <match src="member_expression [31767,31778]" dest="member_expression [31633,31644]"/>
  <match src="type_name [23901,23908]" dest="type_name [23767,23774]"/>
  <match src="visibility [9700,9708]" dest="visibility [9667,9675]"/>
  <match src="memory: memory [17247,17253]" dest="memory: memory [17181,17187]"/>
  <match src="type_name [17619,17626]" dest="type_name [17553,17560]"/>
  <match src="identifier: require [31790,31797]" dest="identifier: require [31656,31663]"/>
  <match src=",: , [6166,6167]" dest=",: , [6133,6134]"/>
  <match src="string_literal [30723,30758]" dest="string_literal [30589,30624]"/>
  <match src="identifier: functionCall [14034,14046]" dest="identifier: functionCall [13968,13980]"/>
  <match src="): ) [18727,18728]" dest="): ) [18661,18662]"/>
  <match src="memory: memory [15103,15109]" dest="memory: memory [15037,15043]"/>
  <match src="type_name [51729,51736]" dest="type_name [51885,51892]"/>
  <match src="uint256: uint256 [32382,32389]" dest="uint256: uint256 [32248,32255]"/>
  <match src="(: ( [53820,53821]" dest="(: ( [54054,54055]"/>
  <match src="parameter [34899,34913]" dest="parameter [34765,34779]"/>
  <match src="binary_expression [31798,31820]" dest="binary_expression [31664,31686]"/>
  <match src="primitive_type [46086,46093]" dest="primitive_type [45884,45891]"/>
  <match src="byte: byte [35014,35018]" dest="byte: byte [34880,34884]"/>
  <match src="comment: // File: contracts/root/RootToken/IMintableERC721.sol [42001,42054]" dest="comment: // File: contracts/root/RootToken/IMintableERC721.sol [41799,41852]"/>
  <match src="internal: internal [15589,15597]" dest="internal: internal [15523,15531]"/>
  <match src=":=: := [35011,35013]" dest=":=: := [34877,34879]"/>
  <match src="[: [ [52874,52875]" dest="[: [ [53108,53109]"/>
  <match src="call_expression [10190,10209]" dest="call_expression [10157,10176]"/>
  <match src="variable_declaration_statement [52131,52141]" dest="variable_declaration_statement [52287,52297]"/>
  <match src="(: ( [47071,47072]" dest="(: ( [47155,47156]"/>
  <match src="comment: // keccak256(&quot;Transfer(address,address,uint256)&quot;) [45858,45907]" dest="comment: // keccak256(&quot;Transfer(address,address,uint256)&quot;) [45656,45705]"/>
  <match src="solidity_version: 0.8.0 [36500,36505]" dest="solidity_version: 0.8.0 [36333,36338]"/>
  <match src="string_literal [28675,28708]" dest="string_literal [28541,28574]"/>
  <match src=":=: := [34075,34077]" dest=":=: := [33941,33943]"/>
  <match src=",: , [32671,32672]" dest=",: , [32537,32538]"/>
  <match src=".: . [3509,3510]" dest=".: . [3476,3477]"/>
  <match src="(: ( [18134,18135]" dest="(: ( [18068,18069]"/>
  <match src="visibility [45921,45927]" dest="visibility [45719,45725]"/>
  <match src="internal: internal [8030,8038]" dest="internal: internal [7997,8005]"/>
  <match src="(: ( [28657,28658]" dest="(: ( [28523,28524]"/>
  <match src="identifier: memPtr [29880,29886]" dest="identifier: memPtr [29746,29752]"/>
  <match src="binary_expression [30707,30721]" dest="binary_expression [30573,30587]"/>
  <match src="yul_function_call [35014,35036]" dest="yul_function_call [34880,34902]"/>
  <match src="identifier: i [49466,49467]" dest="identifier: i [49550,49551]"/>
  <match src="address: address [44941,44948]" dest="address: address [44739,44746]"/>
  <match src="(: ( [9061,9062]" dest="(: ( [9028,9029]"/>
  <match src="bytes4: bytes4 [47500,47506]" dest="bytes4: bytes4 [47584,47590]"/>
  <match src="type_name [3335,3342]" dest="type_name [3302,3309]"/>
  <match src="internal: internal [27594,27602]" dest="internal: internal [27459,27467]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [9480,9642]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [9447,9609]"/>
  <match src="identifier: index [10602,10607]" dest="identifier: index [10569,10574]"/>
  <match src="call_argument [22912,22919]" dest="call_argument [22778,22785]"/>
  <match src="&quot;: &quot; [14157,14158]" dest="&quot;: &quot; [14091,14092]"/>
  <match src="identifier: require [25080,25087]" dest="identifier: require [24946,24953]"/>
  <match src="parameter [42466,42478]" dest="parameter [42265,42277]"/>
  <match src=",: , [6615,6616]" dest=",: , [6582,6583]"/>
  <match src="yul_path [11889,11896]" dest="yul_path [11823,11830]"/>
  <match src="function_body [31723,32146]" dest="function_body [31589,32012]"/>
  <match src="block_statement [27092,27164]" dest="block_statement [26958,27030]"/>
  <match src="identifier: AddressSet [8488,8498]" dest="identifier: AddressSet [8455,8465]"/>
  <match src="address: address [22289,22296]" dest="address: address [22155,22162]"/>
  <match src="member_expression [54099,54111]" dest="member_expression [54333,54345]"/>
  <match src="yul_evm_builtin [34567,34570]" dest="yul_evm_builtin [34433,34436]"/>
  <match src="(: ( [15967,15968]" dest="(: ( [15901,15902]"/>
  <match src="identifier: WITHDRAW_BATCH_EVENT_SIG [51300,51324]" dest="identifier: WITHDRAW_BATCH_EVENT_SIG [51456,51480]"/>
  <match src="yul_function_call [18612,18631]" dest="yul_function_call [18546,18565]"/>
  <match src="function: function [47334,47342]" dest="function: function [47418,47426]"/>
  <match src="variable_declaration [16880,16903]" dest="variable_declaration [16814,16837]"/>
  <match src="identifier: len [31241,31244]" dest="identifier: len [31107,31110]"/>
  <match src="=: = [27625,27626]" dest="=: = [27490,27491]"/>
  <match src="identifier: log [50109,50112]" dest="identifier: log [50193,50196]"/>
  <match src="yul_evm_builtin [28779,28782]" dest="yul_evm_builtin [28645,28648]"/>
  <match src="identifier: renounceRole [25749,25761]" dest="identifier: renounceRole [25615,25627]"/>
  <match src="identifier: value [13148,13153]" dest="identifier: value [13082,13087]"/>
  <match src="return_type_definition [11561,11575]" dest="return_type_definition [11495,11509]"/>
  <match src="identifier: exitTokens [44895,44905]" dest="identifier: exitTokens [44693,44703]"/>
  <match src="): ) [30407,30408]" dest="): ) [30273,30274]"/>
  <match src=".: . [31117,31118]" dest=".: . [30983,30984]"/>
  <match src="[: [ [4275,4276]" dest="[: [ [4242,4243]"/>
  <match src="variable_declaration [52010,52024]" dest="variable_declaration [52166,52180]"/>
  <match src="if: if [33911,33913]" dest="if: if [33777,33779]"/>
  <match src=",: , [17751,17752]" dest=",: , [17685,17686]"/>
  <match src="&amp;&amp;: &amp;&amp; [35202,35204]" dest="&amp;&amp;: &amp;&amp; [35068,35070]"/>
  <match src="member_expression [51009,51031]" dest="member_expression [51093,51115]"/>
  <match src="number_literal: 0x80 [28213,28217]" dest="number_literal: 0x80 [28079,28083]"/>
  <match src="update_expression [52154,52157]" dest="update_expression [52310,52313]"/>
  <match src="identifier: value [15665,15670]" dest="identifier: value [15599,15604]"/>
  <match src="(: ( [31713,31714]" dest="(: ( [31579,31580]"/>
  <match src="call_argument [17970,17977]" dest="call_argument [17904,17911]"/>
  <match src="solidity_version:  0.6.6 [43587,43593]" dest="solidity_version:  0.6.12 [43386,43393]"/>
  <match src="primitive_type [14531,14536]" dest="primitive_type [14465,14470]"/>
  <match src="yul_path [34626,34632]" dest="yul_path [34492,34498]"/>
  <match src="identifier: AccessControl [21257,21270]" dest="identifier: AccessControl [21123,21136]"/>
  <match src="]: ] [26899,26900]" dest="]: ] [26765,26766]"/>
  <match src="member_expression [27254,27281]" dest="member_expression [27120,27147]"/>
  <match src="struct_member [21448,21466]" dest="struct_member [21314,21332]"/>
  <match src="state_mutability [33590,33594]" dest="state_mutability [33456,33460]"/>
  <match src="uint256: uint256 [8969,8976]" dest="uint256: uint256 [8936,8943]"/>
  <match src="comment: /**      * @dev Revokes `role` from `account`.      *      * If `account` had been granted `role`, emits a {RoleRevoked} event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [24766,24997]" dest="comment: /**      * @dev Revokes `role` from `account`.      *      * If `account` had been granted `role`, emits a {RoleRevoked} event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [24632,24863]"/>
  <match src="expression_statement [31790,31872]" dest="expression_statement [31656,31738]"/>
  <match src="contract_body [45481,54926]" dest="contract_body [45279,55232]"/>
  <match src="): ) [8376,8377]" dest="): ) [8343,8344]"/>
  <match src="member_expression [29290,29298]" dest="member_expression [29156,29164]"/>
  <match src="): ) [47162,47163]" dest="): ) [47246,47247]"/>
  <match src="call_expression [54484,54507]" dest="call_expression [54718,54741]"/>
  <match src="yul_identifier [34308,34315]" dest="yul_identifier [34174,34181]"/>
  <match src="primitive_type [43456,43463]" dest="primitive_type [43255,43262]"/>
  <match src="identifier: sendValue [12876,12885]" dest="identifier: sendValue [12810,12819]"/>
  <match src="): ) [6839,6840]" dest="): ) [6806,6807]"/>
  <match src="identifier: supportsInterface [37186,37203]" dest="identifier: supportsInterface [37019,37036]"/>
  <match src="visibility [37224,37232]" dest="visibility [37057,37065]"/>
  <match src="return_type_definition [37238,37252]" dest="return_type_definition [37071,37085]"/>
  <match src="identifier: errorMessage [18715,18727]" dest="identifier: errorMessage [18649,18661]"/>
  <match src="{: { [7440,7441]" dest="{: { [7407,7408]"/>
  <match src="identifier: contains [8228,8236]" dest="identifier: contains [8195,8203]"/>
  <match src="type_name [54461,54466]" dest="type_name [54695,54700]"/>
  <match src="identifier: data [17929,17933]" dest="identifier: data [17863,17867]"/>
  <match src="[: [ [4499,4500]" dest="[: [ [4466,4467]"/>
  <match src="type_cast_expression [50541,50577]" dest="type_cast_expression [50625,50661]"/>
  <match src="call_argument [30989,31021]" dest="call_argument [30855,30887]"/>
  <match src=".: . [32322,32323]" dest=".: . [32188,32189]"/>
  <match src="comment: // For that check below `else if` block [51674,51713]" dest="comment: // For that check below `else if` block [51830,51869]"/>
  <match src="(: ( [47032,47033]" dest="(: ( [47116,47117]"/>
  <match src="&quot;: &quot; [14188,14189]" dest="&quot;: &quot; [14122,14123]"/>
  <match src="identifier: mask [36208,36212]" dest="identifier: mask [36074,36078]"/>
  <match src="type_name [16866,16870]" dest="type_name [16800,16804]"/>
  <match src="type_name [2488,2516]" dest="type_name [2455,2483]"/>
  <match src="binary_expression [35176,35201]" dest="binary_expression [35042,35067]"/>
  <match src="returns: returns [934,941]" dest="returns: returns [934,941]"/>
  <match src="parameter [7991,8013]" dest="parameter [7958,7980]"/>
  <match src="type_name [48069,48076]" dest="type_name [48153,48160]"/>
  <match src="call_expression [30787,30799]" dest="call_expression [30653,30665]"/>
  <match src="div: div [34196,34199]" dest="div: div [34062,34065]"/>
  <match src="!=: != [3553,3555]" dest="!=: != [3520,3522]"/>
  <match src="bytes: bytes [15097,15102]" dest="bytes: bytes [15031,15036]"/>
  <match src="type_cast_expression [52851,52887]" dest="type_cast_expression [53085,53121]"/>
  <match src="contract_declaration [19403,19786]" dest="contract_declaration [19304,19687]"/>
  <match src="function_body [48200,49629]" dest="function_body [48284,49713]"/>
  <match src="yul_evm_builtin [36318,36324]" dest="yul_evm_builtin [36184,36190]"/>
  <match src="type_name [24212,24219]" dest="type_name [24078,24085]"/>
  <match src="call_expression [31056,31080]" dest="call_expression [30922,30946]"/>
  <match src="identifier: toUint [50568,50574]" dest="identifier: toUint [50652,50658]"/>
  <match src="mapping: mapping [21481,21488]" dest="mapping: mapping [21347,21354]"/>
  <match src="call_argument [9058,9080]" dest="call_argument [9025,9047]"/>
  <match src="internal: internal [10609,10617]" dest="internal: internal [10576,10584]"/>
  <match src="visibility [33582,33589]" dest="visibility [33448,33455]"/>
  <match src="bytes: bytes [50096,50101]" dest="bytes: bytes [50180,50185]"/>
  <match src="identifier: role [24736,24740]" dest="identifier: role [24602,24606]"/>
  <match src="(: ( [34002,34003]" dest="(: ( [33868,33869]"/>
  <match src="}: } [3072,3073]" dest="}: } [3039,3040]"/>
  <match src="identifier: set [8570,8573]" dest="identifier: set [8537,8540]"/>
  <match src="identifier: logRLPList [50318,50328]" dest="identifier: logRLPList [50402,50412]"/>
  <match src="(: ( [36333,36334]" dest="(: ( [36199,36200]"/>
  <match src="(: ( [32272,32273]" dest="(: ( [32138,32139]"/>
  <match src="identifier: depositReceiver [48043,48058]" dest="identifier: depositReceiver [48127,48142]"/>
  <match src="identifier: dataLen [34605,34612]" dest="identifier: dataLen [34471,34478]"/>
  <match src="type_name [7336,7343]" dest="type_name [7303,7310]"/>
  <match src="binary_expression [28658,28673]" dest="binary_expression [28524,28539]"/>
  <match src="constant: constant [46615,46623]" dest="constant: constant [46413,46421]"/>
  <match src="type_name [25762,25769]" dest="type_name [25628,25635]"/>
  <match src="function_definition [15480,16010]" dest="function_definition [15414,15944]"/>
  <match src="primitive_type [21977,21984]" dest="primitive_type [21843,21850]"/>
  <match src="mload: mload [33715,33720]" dest="mload: mload [33581,33586]"/>
  <match src="variable_declaration_statement [4244,4287]" dest="variable_declaration_statement [4211,4254]"/>
  <match src="yul_path [36344,36351]" dest="yul_path [36210,36217]"/>
  <match src="view: view [5188,5192]" dest="view: view [5155,5159]"/>
  <match src="call_argument [33380,33426]" dest="call_argument [33246,33292]"/>
  <match src="parameter [16281,16293]" dest="parameter [16215,16227]"/>
  <match src="bytes32: bytes32 [6094,6101]" dest="bytes32: bytes32 [6061,6068]"/>
  <match src="returns: returns [14091,14098]" dest="returns: returns [14025,14032]"/>
  <match src="call_expression [33149,33176]" dest="call_expression [33015,33042]"/>
  <match src="): ) [24219,24220]" dest="): ) [24085,24086]"/>
  <match src="type_name [52010,52017]" dest="type_name [52166,52173]"/>
  <match src="}: } [14197,14198]" dest="}: } [14131,14132]"/>
  <match src="member_expression [33218,33226]" dest="member_expression [33084,33092]"/>
  <match src="indexed: indexed [37641,37648]" dest="indexed: indexed [37439,37446]"/>
  <match src="address: address [41935,41942]" dest="address: address [41733,41740]"/>
  <match src="parameter [27200,27212]" dest="parameter [27066,27078]"/>
  <match src="primitive_type [22626,22633]" dest="primitive_type [22492,22499]"/>
  <match src="primitive_type [9034,9041]" dest="primitive_type [9001,9008]"/>
  <match src="identifier: account [24742,24749]" dest="identifier: account [24608,24615]"/>
  <match src="identifier: require [32296,32303]" dest="identifier: require [32162,32169]"/>
  <match src="&quot;: &quot; [16346,16347]" dest="&quot;: &quot; [16280,16281]"/>
  <match src="parameter [41295,41299]" dest="parameter [41093,41097]"/>
  <match src="function: function [31648,31656]" dest="function: function [31514,31522]"/>
  <match src="): ) [53990,53991]" dest="): ) [54224,54225]"/>
  <match src="returns: returns [22849,22856]" dest="returns: returns [22715,22722]"/>
  <match src="function_definition [27179,27371]" dest="function_definition [27045,27237]"/>
  <match src="solidity_pragma_token [111,134]" dest="solidity_pragma_token [111,134]"/>
  <match src="primitive_type [14485,14491]" dest="primitive_type [14419,14425]"/>
  <match src="(: ( [2724,2725]" dest="(: ( [2691,2692]"/>
  <match src="type_name [46873,46880]" dest="type_name [46671,46678]"/>
  <match src="parameter [15607,15619]" dest="parameter [15541,15553]"/>
  <match src="bytes32: bytes32 [21448,21455]" dest="bytes32: bytes32 [21314,21321]"/>
  <match src="primitive_type [21920,21927]" dest="primitive_type [21786,21793]"/>
  <match src="expression_statement [24725,24751]" dest="expression_statement [24591,24617]"/>
  <match src="member_expression [52027,52042]" dest="member_expression [52183,52198]"/>
  <match src="identifier: length [18320,18326]" dest="identifier: length [18254,18260]"/>
  <match src="return_statement [6448,6482]" dest="return_statement [6415,6449]"/>
  <match src="identifier: _at [9058,9061]" dest="identifier: _at [9025,9028]"/>
  <match src="identifier: value [9770,9775]" dest="identifier: value [9737,9742]"/>
  <match src="{: { [19429,19430]" dest="{: { [19330,19331]"/>
  <match src="identifier: initialize [47061,47071]" dest="identifier: initialize [47145,47155]"/>
  <match src="return: return [8065,8071]" dest="return: return [8032,8038]"/>
  <match src="uint256: uint256 [40597,40604]" dest="uint256: uint256 [40395,40402]"/>
  <match src="identifier: tokenId [51213,51220]" dest="identifier: tokenId [51297,51304]"/>
  <match src="memory: memory [30260,30266]" dest="memory: memory [30126,30132]"/>
  <match src="visibility [48140,48148]" dest="visibility [48224,48232]"/>
  <match src="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [24277,24525]" dest="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event.      *      * Requirements:      *      * - the caller must have ``role``'s admin role.      */ [24143,24391]"/>
  <match src="comment: // File: @openzeppelin/contracts/introspection/IERC165.sol [36378,36436]" dest="comment: // File: @openzeppelin/contracts/introspection/IERC165.sol [36244,36302]"/>
  <match src="identifier: item [30794,30798]" dest="identifier: item [30660,30664]"/>
  <match src="): ) [8121,8122]" dest="): ) [8088,8089]"/>
  <match src="): ) [22835,22836]" dest="): ) [22701,22702]"/>
  <match src="member_expression [31247,31255]" dest="member_expression [31113,31121]"/>
  <match src="(: ( [14099,14100]" dest="(: ( [14033,14034]"/>
  <match src="yul_identifier [30401,30407]" dest="yul_identifier [30267,30273]"/>
  <match src="(: ( [17969,17970]" dest="(: ( [17903,17904]"/>
  <match src="(: ( [34199,34200]" dest="(: ( [34065,34066]"/>
  <match src="parameter [30832,30851]" dest="parameter [30698,30717]"/>
  <match src="member_expression [49507,49550]" dest="member_expression [49591,49634]"/>
  <match src="identifier: toUint [50673,50679]" dest="identifier: toUint [50757,50763]"/>
  <match src="{: { [5675,5676]" dest="{: { [5642,5643]"/>
  <match src="(: ( [23850,23851]" dest="(: ( [23716,23717]"/>
  <match src="): ) [7788,7789]" dest="): ) [7755,7756]"/>
  <match src="yul_evm_builtin [31514,31517]" dest="yul_evm_builtin [31380,31383]"/>
  <match src="comment: // data length [32472,32486]" dest="comment: // data length [32338,32352]"/>
  <match src="): ) [15712,15713]" dest="): ) [15646,15647]"/>
  <match src="yul_path [34571,34577]" dest="yul_path [34437,34443]"/>
  <match src="internal: internal [7699,7707]" dest="internal: internal [7666,7674]"/>
  <match src=",: , [15170,15171]" dest=",: , [15104,15105]"/>
  <match src="(: ( [7366,7367]" dest="(: ( [7333,7334]"/>
  <match src="memory: memory [16636,16642]" dest="memory: memory [16570,16576]"/>
  <match src="event_paramater [37852,37875]" dest="event_paramater [37650,37673]"/>
  <match src="++: ++ [33447,33449]" dest="++: ++ [33313,33315]"/>
  <match src="primitive_type [43146,43151]" dest="primitive_type [42945,42950]"/>
  <match src="function: function [29773,29781]" dest="function: function [29639,29647]"/>
  <match src="primitive_type [15561,15567]" dest="primitive_type [15495,15501]"/>
  <match src="if: if [52357,52359]" dest="if: if [52513,52515]"/>
  <match src="false: false [3101,3106]" dest="false: false [3068,3073]"/>
  <match src="(: ( [34218,34219]" dest="(: ( [34084,34085]"/>
  <match src="function: function [23102,23110]" dest="function: function [22968,22976]"/>
  <match src="=: = [50539,50540]" dest="=: = [50623,50624]"/>
  <match src="parameter [39227,39239]" dest="parameter [39025,39037]"/>
  <match src="(: ( [48342,48343]" dest="(: ( [48426,48427]"/>
  <match src="identifier: _values [5781,5788]" dest="identifier: _values [5748,5755]"/>
  <match src="): ) [38259,38260]" dest="): ) [38057,38058]"/>
  <match src=",: , [36275,36276]" dest=",: , [36141,36142]"/>
  <match src="type_cast_expression [51054,51067]" dest="type_cast_expression [51138,51151]"/>
  <match src="): ) [30916,30917]" dest="): ) [30782,30783]"/>
  <match src="call_argument [27663,27691]" dest="call_argument [27528,27556]"/>
  <match src="uint256: uint256 [10594,10601]" dest="uint256: uint256 [10561,10568]"/>
  <match src="primitive_type [6655,6659]" dest="primitive_type [6622,6626]"/>
  <match src="visibility [41985,41993]" dest="visibility [41783,41791]"/>
  <match src="memory: memory [54532,54538]" dest="memory: memory [54766,54772]"/>
  <match src="(: ( [22625,22626]" dest="(: ( [22491,22492]"/>
  <match src="(: ( [30521,30522]" dest="(: ( [30387,30388]"/>
  <match src="identifier: _contains [2796,2805]" dest="identifier: _contains [2763,2772]"/>
  <match src="bytes32: bytes32 [24550,24557]" dest="bytes32: bytes32 [24416,24423]"/>
  <match src="}: } [30418,30419]" dest="}: } [30284,30285]"/>
  <match src=",: , [24660,24661]" dest=",: , [24526,24527]"/>
  <match src="identifier: data [16643,16647]" dest="identifier: data [16577,16581]"/>
  <match src="address: address [15640,15647]" dest="address: address [15574,15581]"/>
  <match src="type_name [43456,43463]" dest="type_name [43255,43262]"/>
  <match src="indexed: indexed [22656,22663]" dest="indexed: indexed [22522,22529]"/>
  <match src="return_type_definition [6855,6872]" dest="return_type_definition [6822,6839]"/>
  <match src="struct_expression [13132,13163]" dest="struct_expression [13066,13097]"/>
  <match src=".: . [30711,30712]" dest=".: . [30577,30578]"/>
  <match src="yul_assignment [34720,34760]" dest="yul_assignment [34586,34626]"/>
  <match src="identifier: set [6156,6159]" dest="identifier: set [6123,6126]"/>
  <match src="yul_identifier [34082,34088]" dest="yul_identifier [33948,33954]"/>
  <match src="identifier: withdrawer [51737,51747]" dest="identifier: withdrawer [51893,51903]"/>
  <match src="): ) [30606,30607]" dest="): ) [30472,30473]"/>
  <match src=",: , [15559,15560]" dest=",: , [15493,15494]"/>
  <match src="): ) [45216,45217]" dest="): ) [45015,45016]"/>
  <match src="(: ( [8569,8570]" dest="(: ( [8536,8537]"/>
  <match src="identifier: _indexes [3510,3518]" dest="identifier: _indexes [3477,3485]"/>
  <match src="(: ( [25210,25211]" dest="(: ( [25076,25077]"/>
  <match src="identifier: data [17254,17258]" dest="identifier: data [17188,17192]"/>
  <match src="primitive_type [16223,16230]" dest="primitive_type [16157,16164]"/>
  <match src="(: ( [50693,50694]" dest="(: ( [50777,50778]"/>
  <match src="}: } [30060,30061]" dest="}: } [29926,29927]"/>
  <match src="&lt;=: &lt;= [49271,49273]" dest="&lt;=: &lt;= [49355,49357]"/>
  <match src="(: ( [53980,53981]" dest="(: ( [54214,54215]"/>
  <match src="call_argument [33361,33378]" dest="call_argument [33227,33244]"/>
  <match src="parameter [27723,27735]" dest="parameter [27588,27600]"/>
  <match src="call_argument [31210,31221]" dest="call_argument [31076,31087]"/>
  <match src="number_literal: 1 [35248,35249]" dest="number_literal: 1 [35114,35115]"/>
  <match src="yul_assignment [29935,29966]" dest="yul_assignment [29801,29832]"/>
  <match src="solidity_pragma_token [10801,10824]" dest="solidity_pragma_token [10735,10758]"/>
  <match src="string [31934,31973]" dest="string [31800,31839]"/>
  <match src="address: address [9034,9041]" dest="address: address [9001,9008]"/>
  <match src="identifier: role [27064,27068]" dest="identifier: role [26930,26934]"/>
  <match src="{: { [17714,17715]" dest="{: { [17648,17649]"/>
  <match src="): ) [31548,31549]" dest="): ) [31414,31415]"/>
  <match src="primitive_type [32439,32446]" dest="primitive_type [32305,32312]"/>
  <match src="function: function [23828,23836]" dest="function: function [23694,23702]"/>
  <match src="): ) [28793,28794]" dest="): ) [28659,28660]"/>
  <match src="expression_statement [4639,4657]" dest="expression_statement [4606,4624]"/>
  <match src="identifier: _revertMsg [27812,27822]" dest="identifier: _revertMsg [27677,27687]"/>
  <match src="&quot;: &quot; [49332,49333]" dest="&quot;: &quot; [49416,49417]"/>
  <match src="function_body [26600,26644]" dest="function_body [26466,26510]"/>
  <match src="): ) [30462,30463]" dest="): ) [30328,30329]"/>
  <match src=",: , [45198,45199]" dest=",: , [44997,44998]"/>
  <match src="identifier: to [39854,39856]" dest="identifier: to [39652,39654]"/>
  <match src="[: [ [23198,23199]" dest="[: [ [23064,23065]"/>
  <match src="private: private [32872,32879]" dest="private: private [32738,32745]"/>
  <match src=".: . [30440,30441]" dest=".: . [30306,30307]"/>
  <match src="): ) [27290,27291]" dest="): ) [27156,27157]"/>
  <match src="yul_path [28783,28787]" dest="yul_path [28649,28653]"/>
  <match src="identifier: _revokeRole [25199,25210]" dest="identifier: _revokeRole [25065,25076]"/>
  <match src="address: address [39241,39248]" dest="address: address [39039,39046]"/>
  <match src="yul_function_call [32606,32623]" dest="yul_function_call [32472,32489]"/>
  <match src="identifier: toList [28940,28946]" dest="identifier: toList [28806,28812]"/>
  <match src="primitive_type [52131,52138]" dest="primitive_type [52287,52294]"/>
  <match src="return_statement [24232,24262]" dest="return_statement [24098,24128]"/>
  <match src="solidity_pragma_token [45072,45086]" dest="solidity_pragma_token [44870,44885]"/>
  <match src="call_argument [30449,30452]" dest="call_argument [30315,30318]"/>
  <match src="identifier: index [5637,5642]" dest="identifier: index [5604,5609]"/>
  <match src="primitive_type [32545,32552]" dest="primitive_type [32411,32418]"/>
  <match src="(: ( [19600,19601]" dest="(: ( [19501,19502]"/>
  <match src="identifier: value [9918,9923]" dest="identifier: value [9885,9890]"/>
  <match src="parameter [25037,25052]" dest="parameter [24903,24918]"/>
  <match src="identifier: onERC721Received [47343,47359]" dest="identifier: onERC721Received [47427,47443]"/>
  <match src="(: ( [16280,16281]" dest="(: ( [16214,16215]"/>
  <match src="binary_expression [32029,32044]" dest="binary_expression [31895,31910]"/>
  <match src="comment: // All indexes are 1-based [4532,4558]" dest="comment: // All indexes are 1-based [4499,4525]"/>
  <match src=".: . [5780,5781]" dest=".: . [5747,5748]"/>
  <match src="identifier: memPtr [30441,30447]" dest="identifier: memPtr [30307,30313]"/>
  <match src="type_name [904,909]" dest="type_name [904,909]"/>
  <match src="&quot;: &quot; [13195,13196]" dest="&quot;: &quot; [13129,13130]"/>
  <match src="identifier: target [14458,14464]" dest="identifier: target [14392,14398]"/>
  <match src="): ) [27150,27151]" dest="): ) [27016,27017]"/>
  <match src="bool: bool [9718,9722]" dest="bool: bool [9685,9689]"/>
  <match src="(: ( [9769,9770]" dest="(: ( [9736,9737]"/>
  <match src="(: ( [15731,15732]" dest="(: ( [15665,15666]"/>
  <match src="&quot;: &quot; [54849,54850]" dest="&quot;: &quot; [55155,55156]"/>
  <match src="identifier: set [9905,9908]" dest="identifier: set [9872,9875]"/>
  <match src="type_name [19489,19504]" dest="type_name [19390,19405]"/>
  <match src="identifier: _remove [6455,6462]" dest="identifier: _remove [6422,6429]"/>
  <match src="identifier: add [9350,9353]" dest="identifier: add [9317,9320]"/>
  <match src="private: private [33582,33589]" dest="private: private [33448,33455]"/>
  <match src=",: , [22262,22263]" dest=",: , [22128,22129]"/>
  <match src="memory: memory [29028,29034]" dest="memory: memory [28894,28900]"/>
  <match src="identifier: toUint [30825,30831]" dest="identifier: toUint [30691,30697]"/>
  <match src="identifier: require [16725,16732]" dest="identifier: require [16659,16666]"/>
  <match src="type_name [30876,30883]" dest="type_name [30742,30749]"/>
  <match src="pure: pure [33590,33594]" dest="pure: pure [33456,33460]"/>
  <match src="yul_evm_builtin [31535,31538]" dest="yul_evm_builtin [31401,31404]"/>
  <match src="address: address [22648,22655]" dest="address: address [22514,22521]"/>
  <match src="visibility [25054,25060]" dest="visibility [24920,24926]"/>
  <match src="type_name [37852,37859]" dest="type_name [37650,37657]"/>
  <match src="call_argument [47234,47246]" dest="call_argument [47318,47330]"/>
  <match src="identifier: require [53747,53754]" dest="identifier: require [53981,53988]"/>
  <match src="emit: emit [27107,27111]" dest="emit: emit [26973,26977]"/>
  <match src="): ) [18582,18583]" dest="): ) [18516,18517]"/>
  <match src="storage: storage [9897,9904]" dest="storage: storage [9864,9871]"/>
  <match src="function_definition [30163,30495]" dest="function_definition [30029,30361]"/>
  <match src="}: } [34347,34348]" dest="}: } [34213,34214]"/>
  <match src="comment: /**      * @notice check if token already exists, return true if it does exist      * @dev this check will be used by the predicate to determine if the token needs to be minted or transfered      * @param tokenId tokenId being checked      */ [43188,43434]" dest="comment: /**      * @notice check if token already exists, return true if it does exist      * @dev this check will be used by the predicate to determine if the token needs to be minted or transfered      * @param tokenId tokenId being checked      */ [42987,43233]"/>
  <match src="member_expression [51190,51200]" dest="member_expression [51274,51284]"/>
  <match src="(: ( [32413,32414]" dest="(: ( [32279,32280]"/>
  <match src="yul_path [33698,33703]" dest="yul_path [33564,33569]"/>
  <match src="binary_expression [31099,31121]" dest="binary_expression [30965,30987]"/>
  <match src=".: . [54104,54105]" dest=".: . [54338,54339]"/>
  <match src="identifier: safeTransferFrom [49534,49550]" dest="identifier: safeTransferFrom [49618,49634]"/>
  <match src="type_name [31178,31185]" dest="type_name [31044,31051]"/>
  <match src="if_statement [34365,34786]" dest="if_statement [34231,34652]"/>
  <match src="string_literal [14157,14189]" dest="string_literal [14091,14123]"/>
  <match src="array_access [5777,5795]" dest="array_access [5744,5762]"/>
  <match src=",: , [28843,28844]" dest=",: , [28709,28710]"/>
  <match src="identifier: byte0 [33915,33920]" dest="identifier: byte0 [33781,33786]"/>
  <match src="yul_path [36198,36201]" dest="yul_path [36064,36067]"/>
  <match src="yul_evm_builtin [18605,18611]" dest="yul_evm_builtin [18539,18545]"/>
  <match src="identifier: index [7379,7384]" dest="identifier: index [7346,7351]"/>
  <match src="comment: // Emitting event that a set of ERC721 tokens are getting lockec [48904,48968]" dest="comment: // Emitting event that a set of ERC721 tokens are getting lockec [48988,49052]"/>
  <match src="=: = [4408,4409]" dest="=: = [4375,4376]"/>
  <match src="): ) [27796,27797]" dest="): ) [27661,27662]"/>
  <match src="parameter [12886,12911]" dest="parameter [12820,12845]"/>
  <match src=",: , [51100,51101]" dest=",: , [51184,51185]"/>
  <match src="return_type_definition [16272,16294]" dest="return_type_definition [16206,16228]"/>
  <match src="identifier: length [10112,10118]" dest="identifier: length [10079,10085]"/>
  <match src=",: , [25931,25932]" dest=",: , [25797,25798]"/>
  <match src="parameter [50068,50085]" dest="parameter [50152,50169]"/>
  <match src="visibility [27517,27524]" dest="visibility [27382,27389]"/>
  <match src="[: [ [50564,50565]" dest="[: [ [50648,50649]"/>
  <match src="identifier: value [6406,6411]" dest="identifier: value [6373,6378]"/>
  <match src="identifier: success [17873,17880]" dest="identifier: success [17807,17814]"/>
  <match src="type_name [47388,47395]" dest="type_name [47472,47479]"/>
  <match src="event_paramater [46951,46976]" dest="event_paramater [46749,46774]"/>
  <match src="address: address [14047,14054]" dest="address: address [13981,13988]"/>
  <match src="type_name [44354,44361]" dest="type_name [44152,44159]"/>
  <match src="primitive_type [10659,10666]" dest="primitive_type [10626,10633]"/>
  <match src="): ) [34758,34759]" dest="): ) [34624,34625]"/>
  <match src="(: ( [53806,53807]" dest="(: ( [54040,54041]"/>
  <match src="call_argument [6156,6166]" dest="call_argument [6123,6133]"/>
  <match src="variable_declaration [17868,17880]" dest="variable_declaration [17802,17814]"/>
  <match src="identifier: lastIndex [3965,3974]" dest="identifier: lastIndex [3932,3941]"/>
  <match src="bool: bool [41032,41036]" dest="bool: bool [40830,40834]"/>
  <match src="variable_declaration_statement [3485,3526]" dest="variable_declaration_statement [3452,3493]"/>
  <match src="identifier: _length [6891,6898]" dest="identifier: _length [6858,6865]"/>
  <match src="primitive_type [26552,26559]" dest="primitive_type [26418,26425]"/>
  <match src="parameter [23865,23878]" dest="parameter [23731,23744]"/>
  <match src="memory: memory [54467,54473]" dest="memory: memory [54701,54707]"/>
  <match src="visibility [12929,12937]" dest="visibility [12863,12871]"/>
  <match src="identifier: _msgSender [19445,19455]" dest="identifier: _msgSender [19346,19356]"/>
  <match src="uint256: uint256 [23865,23872]" dest="uint256: uint256 [23731,23738]"/>
  <match src="): ) [54052,54053]" dest="): ) [54286,54287]"/>
  <match src="storage: storage [7285,7292]" dest="storage: storage [7252,7259]"/>
  <match src=".: . [4490,4491]" dest=".: . [4457,4458]"/>
  <match src="identifier: require [31091,31098]" dest="identifier: require [30957,30964]"/>
  <match src="&quot;: &quot; [15672,15673]" dest="&quot;: &quot; [15606,15607]"/>
  <match src="(: ( [9663,9664]" dest="(: ( [9630,9631]"/>
  <match src="{: { [10916,10917]" dest="{: { [10850,10851]"/>
  <match src="identifier: item [30537,30541]" dest="identifier: item [30403,30407]"/>
  <match src="{: { [21282,21283]" dest="{: { [21148,21149]"/>
  <match src="type_name [28423,28430]" dest="type_name [28289,28296]"/>
  <match src="returns: returns [2765,2772]" dest="returns: returns [2732,2739]"/>
  <match src="type_name [24550,24557]" dest="type_name [24416,24423]"/>
  <match src=":: : [15917,15918]" dest=":: : [15851,15852]"/>
  <match src="identifier: tokenId [52533,52540]" dest="identifier: tokenId [52689,52696]"/>
  <match src="yul_decimal_number: 0 [33712,33713]" dest="yul_decimal_number: 0 [33578,33579]"/>
  <match src="(: ( [14142,14143]" dest="(: ( [14076,14077]"/>
  <match src="identifier: abi [51963,51966]" dest="identifier: abi [52119,52122]"/>
  <match src="{: { [10172,10173]" dest="{: { [10139,10140]"/>
  <match src="call_expression [27339,27351]" dest="call_expression [27205,27217]"/>
  <match src="(: ( [6654,6655]" dest="(: ( [6621,6622]"/>
  <match src="identifier: memPtr [33721,33727]" dest="identifier: memPtr [33587,33593]"/>
  <match src="comment: // File: contracts/lib/RLPReader.sol [27860,27896]" dest="comment: // File: contracts/lib/RLPReader.sol [27725,27761]"/>
  <match src="expression_statement [13178,13257]" dest="expression_statement [13112,13191]"/>
  <match src="call_argument [49551,49560]" dest="call_argument [49635,49644]"/>
  <match src="identifier: isContract [11519,11529]" dest="identifier: isContract [11453,11463]"/>
  <match src="member_expression [32318,32326]" dest="member_expression [32184,32192]"/>
  <match src=",: , [6092,6093]" dest=",: , [6059,6060]"/>
  <match src="variable_declaration_statement [50273,50341]" dest="variable_declaration_statement [50357,50425]"/>
  <match src="): ) [2515,2516]" dest="): ) [2482,2483]"/>
  <match src="function_definition [19436,19542]" dest="function_definition [19337,19443]"/>
  <match src="view: view [8521,8525]" dest="view: view [8488,8492]"/>
  <match src="view: view [38230,38234]" dest="view: view [38028,38032]"/>
  <match src=",: , [52781,52782]" dest=",: , [52937,52938]"/>
  <match src="block_statement [52384,52583]" dest="block_statement [52540,52739]"/>
  <match src="returns: returns [8526,8533]" dest="returns: returns [8493,8500]"/>
  <match src="(: ( [42465,42466]" dest="(: ( [42264,42265]"/>
  <match src="struct: struct [7422,7428]" dest="struct: struct [7389,7395]"/>
  <match src="call_argument [27634,27692]" dest="call_argument [27499,27557]"/>
  <match src="state_variable_declaration [27510,27536]" dest="state_variable_declaration [27375,27401]"/>
  <match src="return: return [35736,35742]" dest="return: return [35602,35608]"/>
  <match src="visibility [6413,6421]" dest="visibility [6380,6388]"/>
  <match src="identifier: toUint [50470,50476]" dest="identifier: toUint [50554,50560]"/>
  <match src="comment: /**      * @notice called by predicate contract to mint tokens while withdrawing      * @dev Should be callable only by MintableERC721Predicate      * Make sure minting is done only by this function      * @param user user address for whom token is being minted      * @param tokenId tokenId being minted      */ [42128,42446]" dest="comment: /**      * @notice called by predicate contract to mint tokens while withdrawing      * @dev Should be callable only by MintableERC721Predicate      * Make sure minting is done only by this function      * @param user user address for whom token is being minted      * @param tokenId tokenId being minted      */ [41927,42245]"/>
  <match src="true: true [45249,45253]" dest="true: true [45048,45052]"/>
  <match src="return_type_definition [30245,30267]" dest="return_type_definition [30111,30133]"/>
  <match src="return_statement [16306,16387]" dest="return_statement [16240,16321]"/>
  <match src="primitive_type [54526,54531]" dest="primitive_type [54760,54765]"/>
  <match src="variable_declaration_statement [3904,3943]" dest="variable_declaration_statement [3871,3910]"/>
  <match src="type_name [48035,48042]" dest="type_name [48119,48126]"/>
  <match src="bytes32: bytes32 [27200,27207]" dest="bytes32: bytes32 [27066,27073]"/>
  <match src="(: ( [50450,50451]" dest="(: ( [50534,50535]"/>
  <match src="call_expression [50654,50681]" dest="call_expression [50738,50765]"/>
  <match src="identifier: byte0 [35346,35351]" dest="identifier: byte0 [35212,35217]"/>
  <match src="identifier: tokenId [52783,52790]" dest="identifier: tokenId [52939,52946]"/>
  <match src="yul_function_call [36192,36202]" dest="yul_function_call [36058,36068]"/>
  <match src="identifier: decode [54554,54560]" dest="identifier: decode [54788,54794]"/>
  <match src="user_defined_type [10119,10126]" dest="user_defined_type [10086,10093]"/>
  <match src="call_expression [50238,50262]" dest="call_expression [50322,50346]"/>
  <match src="}: } [54671,54672]" dest="}: } [54905,54906]"/>
  <match src="identifier: result [32132,32138]" dest="identifier: result [31998,32004]"/>
  <match src="parameter [7274,7296]" dest="parameter [7241,7263]"/>
  <match src="identifier: mint [54621,54625]" dest="identifier: mint [54855,54859]"/>
  <match src="parameter [16239,16256]" dest="parameter [16173,16190]"/>
  <match src="primitive_type [22858,22862]" dest="primitive_type [22724,22728]"/>
  <match src="]: ] [51942,51943]" dest="]: ] [52098,52099]"/>
  <match src="function_body [32903,33493]" dest="function_body [32769,33359]"/>
  <match src="identifier: set [7367,7370]" dest="identifier: set [7334,7337]"/>
  <match src="]: ] [26944,26945]" dest="]: ] [26810,26811]"/>
  <match src="primitive_type [6431,6435]" dest="primitive_type [6398,6402]"/>
  <match src="identifier: require [27748,27755]" dest="identifier: require [27613,27620]"/>
  <match src="uint256: uint256 [31734,31741]" dest="uint256: uint256 [31600,31607]"/>
  <match src="identifier: data [19771,19775]" dest="identifier: data [19672,19676]"/>
  <match src="}: } [9162,9163]" dest="}: } [9129,9130]"/>
  <match src="visibility [40614,40622]" dest="visibility [40412,40420]"/>
  <match src="call_argument [52464,52468]" dest="call_argument [52620,52624]"/>
  <match src="return_statement [19760,19776]" dest="return_statement [19661,19677]"/>
  <match src="return: return [24232,24238]" dest="return: return [24098,24104]"/>
  <match src="): ) [25131,25132]" dest="): ) [24997,24998]"/>
  <match src="array_access [5028,5047]" dest="array_access [4995,5014]"/>
  <match src="indexed: indexed [22297,22304]" dest="indexed: indexed [22163,22170]"/>
  <match src="solidity_version: 0.6.2 [10812,10817]" dest="solidity_version: 0.6.2 [10746,10751]"/>
  <match src="parameter [43496,43500]" dest="parameter [43295,43299]"/>
  <match src="identifier: from [41929,41933]" dest="identifier: from [41727,41731]"/>
  <match src="identifier: item [30707,30711]" dest="identifier: item [30573,30577]"/>
  <match src="): ) [40653,40654]" dest="): ) [40451,40452]"/>
  <match src="address: address [44354,44361]" dest="address: address [44152,44159]"/>
  <match src="[: [ [50909,50910]" dest="[: [ [50993,50994]"/>
  <match src="): ) [3557,3558]" dest="): ) [3524,3525]"/>
  <match src="identifier: require [12949,12956]" dest="identifier: require [12883,12890]"/>
  <match src="pragma_directive [42058,42080]" dest="pragma_directive [41856,41879]"/>
  <match src="block_statement [29486,29633]" dest="block_statement [29352,29499]"/>
  <match src="function_body [12938,13264]" dest="function_body [12872,13198]"/>
  <match src="parameter [6374,6396]" dest="parameter [6341,6363]"/>
  <match src="identifier: rootToken [52099,52108]" dest="identifier: rootToken [52255,52264]"/>
  <match src="member_expression [9062,9072]" dest="member_expression [9029,9039]"/>
  <match src="type_name [30183,30190]" dest="type_name [30049,30056]"/>
  <match src="identifier: memPtr [29605,29611]" dest="identifier: memPtr [29471,29477]"/>
  <match src="else: else [33806,33810]" dest="else: else [33672,33676]"/>
  <match src="member_expression [29372,29383]" dest="member_expression [29238,29249]"/>
  <match src="parameter [2742,2755]" dest="parameter [2709,2722]"/>
  <match src="constructor_definition [47021,47044]" dest="constructor_definition [47105,47128]"/>
  <match src="return_statement [5222,5248]" dest="return_statement [5189,5215]"/>
  <match src="=: = [49224,49225]" dest="=: = [49308,49309]"/>
  <match src="type_name [38031,38038]" dest="type_name [37829,37836]"/>
  <match src="parameter [32894,32901]" dest="parameter [32760,32767]"/>
  <match src="bytes32: bytes32 [9762,9769]" dest="bytes32: bytes32 [9729,9736]"/>
  <match src="address: address [41014,41021]" dest="address: address [40812,40819]"/>
  <match src="function_body [17714,18012]" dest="function_body [17648,17946]"/>
  <match src="identifier: index [8977,8982]" dest="identifier: index [8944,8949]"/>
  <match src="block_statement [27292,27364]" dest="block_statement [27158,27230]"/>
  <match src="return_type_definition [8998,9015]" dest="return_type_definition [8965,8982]"/>
  <match src="identifier: len [35828,35831]" dest="identifier: len [35694,35697]"/>
  <match src="bytes: bytes [15607,15612]" dest="bytes: bytes [15541,15546]"/>
  <match src="): ) [18171,18172]" dest="): ) [18105,18106]"/>
  <match src="event_paramater [21942,21975]" dest="event_paramater [21808,21841]"/>
  <match src="parameter [16700,16712]" dest="parameter [16634,16646]"/>
  <match src="external: external [48140,48148]" dest="external: external [48224,48232]"/>
  <match src="function_body [8054,8133]" dest="function_body [8021,8100]"/>
  <match src="address: address [46873,46880]" dest="address: address [46671,46678]"/>
  <match src="variable_declaration_statement [48823,48888]" dest="variable_declaration_statement [48907,48972]"/>
  <match src="=: = [3015,3016]" dest="=: = [2982,2983]"/>
  <match src="uint256: uint256 [28720,28727]" dest="uint256: uint256 [28586,28593]"/>
  <match src="call_argument [52374,52381]" dest="call_argument [52530,52537]"/>
  <match src="call_argument [23952,23957]" dest="call_argument [23818,23823]"/>
  <match src="identifier: account [11538,11545]" dest="identifier: account [11472,11479]"/>
  <match src="identifier: from [39840,39844]" dest="identifier: from [39638,39642]"/>
  <match src="type_name [22626,22633]" dest="type_name [22492,22499]"/>
  <match src="return_statement [19517,19535]" dest="return_statement [19418,19436]"/>
  <match src="identifier: EnumerableSet [21295,21308]" dest="identifier: EnumerableSet [21161,21174]"/>
  <match src="function_body [22864,22928]" dest="function_body [22730,22794]"/>
  <match src="&quot;: &quot; [28707,28708]" dest="&quot;: &quot; [28573,28574]"/>
  <match src="identifier: LIST_SHORT_START [33923,33939]" dest="identifier: LIST_SHORT_START [33789,33805]"/>
  <match src="member_expression [15640,15661]" dest="member_expression [15574,15595]"/>
  <match src="**: ** [36115,36117]" dest="**: ** [35981,35983]"/>
  <match src="member_expression [5229,5247]" dest="member_expression [5196,5214]"/>
  <match src="call_argument [52456,52469]" dest="call_argument [52612,52625]"/>
  <match src=",: , [14483,14484]" dest=",: , [14417,14418]"/>
  <match src="add: add [32606,32609]" dest="add: add [32472,32475]"/>
  <match src="(: ( [9006,9007]" dest="(: ( [8973,8974]"/>
  <match src="function: function [26532,26540]" dest="function: function [26398,26406]"/>
  <match src="contract_body [10916,18765]" dest="contract_body [10850,18699]"/>
  <match src="}: } [7392,7393]" dest="}: } [7359,7360]"/>
  <match src="identifier: set [7293,7296]" dest="identifier: set [7260,7263]"/>
  <match src="visibility [47088,47096]" dest="visibility [47172,47180]"/>
  <match src="revert: revert [18605,18611]" dest="revert: revert [18539,18545]"/>
  <match src="yul_function_call [34215,34241]" dest="yul_function_call [34081,34107]"/>
  <match src="parameter [48007,48024]" dest="parameter [48091,48108]"/>
  <match src="}: } [32633,32634]" dest="}: } [32499,32500]"/>
  <match src="||: || [35159,35161]" dest="||: || [35025,35027]"/>
  <match src="member_expression [23928,23948]" dest="member_expression [23794,23814]"/>
  <match src="internal: internal [17682,17690]" dest="internal: internal [17616,17624]"/>
  <match src="): ) [25185,25186]" dest="): ) [25051,25052]"/>
  <match src="function: function [16195,16203]" dest="function: function [16129,16137]"/>
  <match src="external: external [45002,45010]" dest="external: external [44800,44808]"/>
  <match src=",: , [47246,47247]" dest=",: , [47330,47331]"/>
  <match src="variable_declaration [54461,54481]" dest="variable_declaration [54695,54715]"/>
  <match src="primitive_type [9685,9692]" dest="primitive_type [9652,9659]"/>
  <match src="identifier: target [14143,14149]" dest="identifier: target [14077,14083]"/>
  <match src=",: , [28787,28788]" dest=",: , [28653,28654]"/>
  <match src="identifier: role [27011,27015]" dest="identifier: role [26877,26881]"/>
  <match src="comment: /**      * @notice Validates log signature, from and to address      * then checks if token already exists on root chain      * if token exits then transfers it to withdrawer      * if token doesn't exit then it is minted      * callable only by manager      * @param rootToken Token which gets withdrawn      * @param log Valid ERC721 burn log from child chain      */ [49637,50014]" dest="comment: /**      * @notice Validates log signature, from and to address      * then checks if token already exists on root chain      * if token exits then transfers it to withdrawer      * if token doesn't exit then it is minted      * callable only by manager      * @param rootToken Token which gets withdrawn      * @param log Valid ERC721 burn log from child chain      */ [49721,50098]"/>
  <match src="identifier: STRING_LONG_START [35141,35158]" dest="identifier: STRING_LONG_START [35007,35024]"/>
  <match src="primitive_type [17278,17283]" dest="primitive_type [17212,17217]"/>
  <match src="): ) [45170,45171]" dest="): ) [44969,44970]"/>
  <match src="type_name [29114,29121]" dest="type_name [28980,28987]"/>
  <match src="identifier: set [2834,2837]" dest="identifier: set [2801,2804]"/>
  <match src="identifier: role [25031,25035]" dest="identifier: role [24897,24901]"/>
  <match src="): ) [27151,27152]" dest="): ) [27017,27018]"/>
  <match src="member_expression [4381,4392]" dest="member_expression [4348,4359]"/>
  <match src="identifier: byte0 [35404,35409]" dest="identifier: byte0 [35270,35275]"/>
  <match src="comment: // @note This doesn't allow transfer of metadata cross chain [51600,51660]" dest="comment: // @note This doesn't allow transfer of metadata cross chain [51756,51816]"/>
  <match src="call_argument [54638,54645]" dest="call_argument [54872,54879]"/>
  <match src="and: and [36188,36191]" dest="and: and [36054,36057]"/>
  <match src="variable_declaration_statement [32012,32045]" dest="variable_declaration_statement [31878,31911]"/>
  <match src="number_literal: 1 [35431,35432]" dest="number_literal: 1 [35297,35298]"/>
  <match src="!: ! [2795,2796]" dest="!: ! [2762,2763]"/>
  <match src="): ) [28851,28852]" dest="): ) [28717,28718]"/>
  <match src="parameter [6094,6107]" dest="parameter [6061,6074]"/>
  <match src="identifier: UintSet [10573,10580]" dest="identifier: UintSet [10540,10547]"/>
  <match src="(: ( [49457,49458]" dest="(: ( [49541,49542]"/>
  <match src="identifier: approve [40371,40378]" dest="identifier: approve [40169,40176]"/>
  <match src="new_expression [30306,30315]" dest="new_expression [30172,30181]"/>
  <match src="expression_statement [19626,19631]" dest="expression_statement [19527,19532]"/>
  <match src="variable_declaration [29872,29886]" dest="variable_declaration [29738,29752]"/>
  <match src="identifier: listLength [32248,32258]" dest="identifier: listLength [32114,32124]"/>
  <match src="returns: returns [37238,37245]" dest="returns: returns [37071,37078]"/>
  <match src="&lt;: &lt; [35069,35070]" dest="&lt;: &lt; [34935,34936]"/>
  <match src="parameter [38429,38444]" dest="parameter [38227,38242]"/>
  <match src=",: , [45463,45464]" dest=",: , [45261,45262]"/>
  <match src="call_expression [25199,25225]" dest="call_expression [25065,25091]"/>
  <match src="type_name [10573,10580]" dest="type_name [10540,10547]"/>
  <match src="identifier: count [33097,33102]" dest="identifier: count [32963,32968]"/>
  <match src="primitive_type [9910,9917]" dest="primitive_type [9877,9884]"/>
  <match src="solidity_version_comparison_operator [37371,37374]" dest="solidity_version_comparison_operator [37171,37174]"/>
  <match src="identifier: toAddress [30512,30521]" dest="identifier: toAddress [30378,30387]"/>
  <match src="returns: returns [28609,28616]" dest="returns: returns [28475,28482]"/>
  <match src="yul_function_call [34620,34633]" dest="yul_function_call [34486,34499]"/>
  <match src="type_name [14063,14068]" dest="type_name [13997,14002]"/>
  <match src="}: } [9471,9472]" dest="}: } [9438,9439]"/>
  <match src="indexed: indexed [46730,46737]" dest="indexed: indexed [46528,46535]"/>
  <match src="primitive_type [39241,39248]" dest="primitive_type [39039,39046]"/>
  <match src="comment: // simply transferred to withdrawer address. And in that case, [53160,53222]" dest="comment: // simply transferred to withdrawer address. And in that case, [53394,53456]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [6190,6352]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [6157,6319]"/>
  <match src="call_expression [14563,14615]" dest="call_expression [14497,14549]"/>
  <match src="identifier: BATCH_LIMIT [49274,49285]" dest="identifier: BATCH_LIMIT [49358,49369]"/>
  <match src="type_name [46800,46807]" dest="type_name [46598,46605]"/>
  <match src="call_argument [17979,17989]" dest="call_argument [17913,17923]"/>
  <match src="(: ( [45169,45170]" dest="(: ( [44968,44969]"/>
  <match src="boolean_literal [45135,45140]" dest="boolean_literal [44934,44939]"/>
  <match src="calldata: calldata [44975,44983]" dest="calldata: calldata [44773,44781]"/>
  <match src="event_paramater [38031,38052]" dest="event_paramater [37829,37850]"/>
  <match src="): ) [29580,29581]" dest="): ) [29446,29447]"/>
  <match src="primitive_type [27510,27516]" dest="primitive_type [27375,27381]"/>
  <match src="identifier: destPtr [32595,32602]" dest="identifier: destPtr [32461,32468]"/>
  <match src="yul_function_call [31514,31549]" dest="yul_function_call [31380,31415]"/>
  <match src="identifier: currPtr [33287,33294]" dest="identifier: currPtr [33153,33160]"/>
  <match src="bytes32: bytes32 [24177,24184]" dest="bytes32: bytes32 [24043,24050]"/>
  <match src="}: } [8385,8386]" dest="}: } [8352,8353]"/>
  <match src="(: ( [10631,10632]" dest="(: ( [10598,10599]"/>
  <match src="identifier: rootToken [49084,49093]" dest="identifier: rootToken [49168,49177]"/>
  <match src="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [11940,12861]" dest="comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [11874,12795]"/>
  <match src="call_argument [48676,48685]" dest="call_argument [48760,48769]"/>
  <match src="(: ( [35118,35119]" dest="(: ( [34984,34985]"/>
  <match src="function_definition [47977,49629]" dest="function_definition [48061,49713]"/>
  <match src="identifier: index [9074,9079]" dest="identifier: index [9041,9046]"/>
  <match src="expression_statement [33277,33318]" dest="expression_statement [33143,33184]"/>
  <match src="event_paramater [38054,38078]" dest="event_paramater [37852,37876]"/>
  <match src=".: . [53799,53800]" dest=".: . [54033,54034]"/>
  <match src="): ) [2856,2857]" dest="): ) [2823,2824]"/>
  <match src="(: ( [12956,12957]" dest="(: ( [12890,12891]"/>
  <match src="string [12990,13021]" dest="string [12924,12955]"/>
  <match src="yul_identifier [34232,34239]" dest="yul_identifier [34098,34105]"/>
  <match src=",: , [49575,49576]" dest=",: , [49659,49660]"/>
  <match src="&quot;: &quot; [17385,17386]" dest="&quot;: &quot; [17319,17320]"/>
  <match src="function_definition [14025,14198]" dest="function_definition [13959,14132]"/>
  <match src="identifier: AddressSet [8945,8955]" dest="identifier: AddressSet [8912,8922]"/>
  <match src="internal: internal [9700,9708]" dest="internal: internal [9667,9675]"/>
  <match src="uint256: uint256 [51934,51941]" dest="uint256: uint256 [52090,52097]"/>
  <match src="contract_declaration [45091,45264]" dest="contract_declaration [44890,45063]"/>
  <match src="call_argument [27324,27328]" dest="call_argument [27190,27194]"/>
  <match src="(: ( [34205,34206]" dest="(: ( [34071,34072]"/>
  <match src="type_name [46686,46693]" dest="type_name [46484,46491]"/>
  <match src="{: { [50187,50188]" dest="{: { [50271,50272]"/>
  <match src="identifier: errorMessage [14602,14614]" dest="identifier: errorMessage [14536,14548]"/>
  <match src="(: ( [18308,18309]" dest="(: ( [18242,18243]"/>
  <match src="let: let [34601,34604]" dest="let: let [34467,34470]"/>
  <match src="expression_statement [4727,4754]" dest="expression_statement [4694,4721]"/>
  <match src="): ) [26921,26922]" dest="): ) [26787,26788]"/>
  <match src="]: ] [5046,5047]" dest="]: ] [5013,5014]"/>
  <match src="number_literal: 21 [30719,30721]" dest="number_literal: 21 [30585,30587]"/>
  <match src="comment: /**      * @dev Returns the admin role that controls `role`. See {grantRole} and      * {revokeRole}.      *      * To change a role's admin, use {_setRoleAdmin}.      */ [23974,24149]" dest="comment: /**      * @dev Returns the admin role that controls `role`. See {grantRole} and      * {revokeRole}.      *      * To change a role's admin, use {_setRoleAdmin}.      */ [23840,24015]"/>
  <match src="type_name [16223,16230]" dest="type_name [16157,16164]"/>
  <match src="primitive_type [47370,47377]" dest="primitive_type [47454,47461]"/>
  <match src="comment: // These many tokens are attempted to be deposited [49121,49171]" dest="comment: // These many tokens are attempted to be deposited [49205,49255]"/>
  <match src="parameter [24564,24579]" dest="parameter [24430,24445]"/>
  <match src="type_name [32012,32019]" dest="type_name [31878,31885]"/>
  <match src="solidity_version:  0.6.6 [45080,45086]" dest="solidity_version:  0.6.12 [44878,44885]"/>
  <match src="pure: pure [28595,28599]" dest="pure: pure [28461,28465]"/>
  <match src="type_name [6593,6603]" dest="type_name [6560,6570]"/>
  <match src="mload: mload [34620,34625]" dest="mload: mload [34486,34491]"/>
  <match src="string_literal [45200,45216]" dest="string_literal [44999,45015]"/>
  <match src="primitive_type [35634,35641]" dest="primitive_type [35500,35507]"/>
  <match src="identifier: destPtr [32553,32560]" dest="identifier: destPtr [32419,32426]"/>
  <match src="string [5722,5758]" dest="string [5689,5725]"/>
  <match src="): ) [51959,51960]" dest="): ) [52115,52116]"/>
  <match src="identifier: _at [10667,10670]" dest="identifier: _at [10634,10637]"/>
  <match src="identifier: rootToken [50854,50863]" dest="identifier: rootToken [50938,50947]"/>
  <match src="function_definition [33545,34820]" dest="function_definition [33411,34686]"/>
  <match src="comment: // Locking a set a ERC721 token(s) [48773,48807]" dest="comment: // Locking a set a ERC721 token(s) [48857,48891]"/>
  <match src="variable_declaration_statement [51870,51917]" dest="variable_declaration_statement [52026,52073]"/>
  <match src="primitive_type [24564,24571]" dest="primitive_type [24430,24437]"/>
  <match src="identifier: STRING_LONG_START [28239,28256]" dest="identifier: STRING_LONG_START [28105,28122]"/>
  <match src="pragma_directive [18858,18889]" dest="pragma_directive [19754,19785]"/>
  <match src="string [17345,17386]" dest="string [17279,17320]"/>
  <match src="return_type_definition [38235,38260]" dest="return_type_definition [38033,38058]"/>
  <match src="solidity: solidity [42065,42073]" dest="solidity: solidity [41863,41871]"/>
  <match src="comment: /**      * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}      * by `operator` from `from`, this function is called.      *      * It must return its Solidity selector to confirm the token transfer.      * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.      *      * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.      */ [330,823]" dest="comment: /**      * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}      * by `operator` from `from`, this function is called.      *      * It must return its Solidity selector to confirm the token transfer.      * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.      *      * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.      */ [330,823]"/>
  <match src=",: , [27137,27138]" dest=",: , [27003,27004]"/>
  <match src="expression_statement [35810,35827]" dest="expression_statement [35676,35693]"/>
  <match src="&lt;: &lt; [29472,29473]" dest="&lt;: &lt; [29338,29339]"/>
  <match src="): ) [21509,21510]" dest="): ) [21375,21376]"/>
  <match src="comment: // retrieve the bytes [36283,36304]" dest="comment: // retrieve the bytes [36149,36170]"/>
  <match src="identifier: dataLen [34308,34315]" dest="identifier: dataLen [34174,34181]"/>
  <match src=",: , [9683,9684]" dest=",: , [9650,9651]"/>
  <match src="parameter [47388,47395]" dest="parameter [47472,47479]"/>
  <match src="identifier: target [17331,17337]" dest="identifier: target [17265,17271]"/>
  <match src="(: ( [25022,25023]" dest="(: ( [24888,24889]"/>
  <match src="function: function [47052,47060]" dest="function: function [47136,47144]"/>
  <match src=",: , [31121,31122]" dest=",: , [30987,30988]"/>
  <match src="binary_expression [50443,50501]" dest="binary_expression [50527,50585]"/>
  <match src="primitive_type [15858,15862]" dest="primitive_type [15792,15796]"/>
  <match src="member_expression [50899,50919]" dest="member_expression [50983,51003]"/>
  <match src="identifier: memPtr [29958,29964]" dest="identifier: memPtr [29824,29830]"/>
  <match src="identifier: item [29804,29808]" dest="identifier: item [29670,29674]"/>
  <match src="div: div [31514,31517]" dest="div: div [31380,31383]"/>
  <match src="type_name [46417,46424]" dest="type_name [46215,46222]"/>
  <match src="solidity_pragma_token [27437,27451]" dest="solidity_pragma_token [27303,27318]"/>
  <match src="primitive_type [34937,34944]" dest="primitive_type [34803,34810]"/>
  <match src="primitive_type [39846,39853]" dest="primitive_type [39644,39651]"/>
  <match src="state_mutability [38230,38234]" dest="state_mutability [38028,38032]"/>
  <match src="identifier: dataLen [29565,29572]" dest="identifier: dataLen [29431,29438]"/>
  <match src="event_paramater [46686,46711]" dest="event_paramater [46484,46509]"/>
  <match src="parameter [35656,35668]" dest="parameter [35522,35534]"/>
  <match src="state_variable_declaration [28177,28218]" dest="state_variable_declaration [28043,28084]"/>
  <match src="internal: internal [31691,31699]" dest="internal: internal [31557,31565]"/>
  <match src="call_expression [13132,13167]" dest="call_expression [13066,13101]"/>
  <match src="variable_declaration [33624,33639]" dest="variable_declaration [33490,33505]"/>
  <match src="return: return [17945,17951]" dest="return: return [17879,17885]"/>
  <match src="string [29074,29100]" dest="string [28940,28966]"/>
  <match src=",: , [45448,45449]" dest=",: , [45246,45247]"/>
  <match src="binary_expression [31247,31264]" dest="binary_expression [31113,31130]"/>
  <match src="{: { [52384,52385]" dest="{: { [52540,52541]"/>
  <match src="type_cast_expression [9050,9081]" dest="type_cast_expression [9017,9048]"/>
  <match src="expression_statement [29545,29582]" dest="expression_statement [29411,29448]"/>
  <match src="identifier: tokenId [50980,50987]" dest="identifier: tokenId [51064,51071]"/>
  <match src="memory: memory [14472,14478]" dest="memory: memory [14406,14412]"/>
  <match src="member_expression [32414,32425]" dest="member_expression [32280,32291]"/>
  <match src="identifier: value [3343,3348]" dest="identifier: value [3310,3315]"/>
  <match src="(: ( [33755,33756]" dest="(: ( [33621,33622]"/>
  <match src="array_access [50451,50469]" dest="array_access [50535,50553]"/>
  <match src="variable_declaration [29355,29369]" dest="variable_declaration [29221,29235]"/>
  <match src="type_name [29850,29855]" dest="type_name [29716,29721]"/>
  <match src="identifier: role [23138,23142]" dest="identifier: role [23004,23008]"/>
  <match src="type_name [855,862]" dest="type_name [855,862]"/>
  <match src="==: == [50480,50482]" dest="==: == [50564,50566]"/>
  <match src="yul_decimal_number: 0 [29949,29950]" dest="yul_decimal_number: 0 [29815,29816]"/>
  <match src="struct_expression [15899,15926]" dest="struct_expression [15833,15860]"/>
  <match src="call_expression [53747,53924]" dest="call_expression [53981,54158]"/>
  <match src="parameter [44969,44994]" dest="parameter [44767,44792]"/>
  <match src="identifier: memPtr [35028,35034]" dest="identifier: memPtr [34894,34900]"/>
  <match src="identifier: set [3330,3333]" dest="identifier: set [3297,3300]"/>
  <match src="type_name [48097,48102]" dest="type_name [48181,48186]"/>
  <match src="state_mutability [19579,19583]" dest="state_mutability [19480,19484]"/>
  <match src="library_declaration [28152,36374]" dest="library_declaration [28018,36240]"/>
  <match src="yul_path [36270,36274]" dest="yul_path [36136,36140]"/>
  <match src="return: return [3050,3056]" dest="return: return [3017,3023]"/>
  <match src="return_statement [9425,9465]" dest="return_statement [9392,9432]"/>
  <match src="): ) [9412,9413]" dest="): ) [9379,9380]"/>
  <match src="view: view [11556,11560]" dest="view: view [11490,11494]"/>
  <match src="primitive_type [14063,14068]" dest="primitive_type [13997,14002]"/>
  <match src="{: { [48200,48201]" dest="{: { [48284,48285]"/>
  <match src="identifier: role [22814,22818]" dest="identifier: role [22680,22684]"/>
  <match src="return: return [3094,3100]" dest="return: return [3061,3067]"/>
  <match src="state_mutability [8521,8525]" dest="state_mutability [8488,8492]"/>
  <match src="function: function [19550,19558]" dest="function: function [19451,19459]"/>
  <match src="): ) [7697,7698]" dest="): ) [7664,7665]"/>
  <match src="primitive_type [38244,38251]" dest="primitive_type [38042,38049]"/>
  <match src="parameter [10573,10592]" dest="parameter [10540,10559]"/>
  <match src="string_literal [12990,13021]" dest="string_literal [12924,12955]"/>
  <match src="comment: // constructor execution. [11741,11766]" dest="comment: // constructor execution. [11675,11700]"/>
  <match src="yul_evm_builtin [36192,36197]" dest="yul_evm_builtin [36058,36063]"/>
  <match src="return_statement [15943,16003]" dest="return_statement [15877,15937]"/>
  <match src="call_expression [47120,47163]" dest="call_expression [47204,47247]"/>
  <match src="type_name [16700,16705]" dest="type_name [16634,16639]"/>
  <match src="primitive_type [17241,17246]" dest="primitive_type [17175,17180]"/>
  <match src=".: . [23940,23941]" dest=".: . [23806,23807]"/>
  <match src="): ) [6659,6660]" dest="): ) [6626,6627]"/>
  <match src="identifier: _payloadOffset [29386,29400]" dest="identifier: _payloadOffset [29252,29266]"/>
  <match src="if: if [48253,48255]" dest="if: if [48337,48339]"/>
  <match src="identifier: WITHDRAW_EVENT_SIG [50483,50501]" dest="identifier: WITHDRAW_EVENT_SIG [50567,50585]"/>
  <match src="identifier: remove [9657,9663]" dest="identifier: remove [9624,9630]"/>
  <match src="parameter [47370,47377]" dest="parameter [47454,47461]"/>
  <match src="address: address [46951,46958]" dest="address: address [46749,46756]"/>
  <match src="+=: += [35948,35950]" dest="+=: += [35814,35816]"/>
  <match src="primitive_type [43115,43122]" dest="primitive_type [42914,42921]"/>
  <match src="variable_declaration [49209,49223]" dest="variable_declaration [49293,49307]"/>
  <match src="memory: memory [15051,15057]" dest="memory: memory [14985,14991]"/>
  <match src="identifier: set [8010,8013]" dest="identifier: set [7977,7980]"/>
  <match src="type_name [11570,11574]" dest="type_name [11504,11508]"/>
  <match src="identifier: adminRole [25109,25118]" dest="identifier: adminRole [24975,24984]"/>
  <match src="call_expression [28650,28709]" dest="call_expression [28516,28575]"/>
  <match src="&quot;: &quot; [13020,13021]" dest="&quot;: &quot; [12954,12955]"/>
  <match src="assignment_expression [45240,45253]" dest="assignment_expression [45039,45052]"/>
  <match src="&quot;: &quot; [15214,15215]" dest="&quot;: &quot; [15148,15149]"/>
  <match src="identifier: returndata [18074,18084]" dest="identifier: returndata [18008,18018]"/>
  <match src="type_name [51934,51941]" dest="type_name [52090,52097]"/>
  <match src="(: ( [34625,34626]" dest="(: ( [34491,34492]"/>
  <match src="binary_expression [31918,31932]" dest="binary_expression [31784,31798]"/>
  <match src="identifier: length [6810,6816]" dest="identifier: length [6777,6783]"/>
  <match src="&quot;: &quot; [49287,49288]" dest="&quot;: &quot; [49371,49372]"/>
  <match src="internal: internal [6413,6421]" dest="internal: internal [6380,6388]"/>
  <match src="storage: storage [6604,6611]" dest="storage: storage [6571,6578]"/>
  <match src="identifier: LockedMintableERC721 [46655,46675]" dest="identifier: LockedMintableERC721 [46453,46473]"/>
  <match src="identifier: account [22280,22287]" dest="identifier: account [22146,22153]"/>
  <match src="(: ( [37802,37803]" dest="(: ( [37600,37601]"/>
  <match src="=: = [52081,52082]" dest="=: = [52237,52238]"/>
  <match src="return_statement [6884,6911]" dest="return_statement [6851,6878]"/>
  <match src="parenthesized_expression [18714,18728]" dest="parenthesized_expression [18648,18662]"/>
  <match src="primitive_type [48823,48830]" dest="primitive_type [48907,48914]"/>
  <match src="yul_function_call [36260,36282]" dest="yul_function_call [36126,36148]"/>
  <match src="view: view [5652,5656]" dest="view: view [5619,5623]"/>
  <match src="comment: /**      * @notice Deposit tokens into pos portal      * @dev When `depositor` deposits tokens into pos portal, tokens get locked into predicate contract.      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on side chain      * @param rootToken Token which gets deposited      * @param depositData Extra data for deposit (amount for ERC20, token id for ERC721 etc.) [ABI encoded]      */ [43778,44256]" dest="comment: /**      * @notice Deposit tokens into pos portal      * @dev When `depositor` deposits tokens into pos portal, tokens get locked into predicate contract.      * @param depositor Address who wants to deposit tokens      * @param depositReceiver Address (address) who wants to receive tokens on side chain      * @param rootToken Token which gets deposited      * @param depositData Extra data for deposit (amount for ERC20, token id for ERC721 etc.) [ABI encoded]      */ [43576,44054]"/>
  <match src="let: let [36173,36176]" dest="let: let [36039,36042]"/>
  <match src="): ) [41299,41300]" dest="): ) [41097,41098]"/>
  <match src="primitive_type [50050,50057]" dest="primitive_type [50134,50141]"/>
  <match src="address: address [46909,46916]" dest="address: address [46707,46714]"/>
  <match src="type_name [4967,4974]" dest="type_name [4934,4941]"/>
  <match src="member_expression [3977,3988]" dest="member_expression [3944,3955]"/>
  <match src="type_name [17882,17887]" dest="type_name [17816,17821]"/>
  <match src="bytes32: bytes32 [23130,23137]" dest="bytes32: bytes32 [22996,23003]"/>
  <match src="): ) [54655,54656]" dest="): ) [54889,54890]"/>
  <match src="struct: struct [9119,9125]" dest="struct: struct [9086,9092]"/>
  <match src="comment: // SPDX-License-Identifier: MIT [69,100]" dest="comment: // SPDX-License-Identifier: MIT [69,100]"/>
  <match src="identifier: account [11889,11896]" dest="identifier: account [11823,11830]"/>
  <match src="call_expression [50899,50921]" dest="call_expression [50983,51005]"/>
  <match src="primitive_type [32522,32527]" dest="primitive_type [32388,32393]"/>
  <match src="primitive_type [18047,18051]" dest="primitive_type [17981,17985]"/>
  <match src="user_defined_type [45450,45463]" dest="user_defined_type [45248,45261]"/>
  <match src="primitive_type [30566,30573]" dest="primitive_type [30432,30439]"/>
  <match src="==: == [50683,50685]" dest="==: == [50767,50769]"/>
  <match src=".: . [5031,5032]" dest=".: . [4998,4999]"/>
  <match src="primitive_type [15546,15553]" dest="primitive_type [15480,15487]"/>
  <match src="parenthesized_expression [48875,48886]" dest="parenthesized_expression [48959,48970]"/>
  <match src="[: [ [51283,51284]" dest="[: [ [51439,51440]"/>
  <match src=".: . [9985,9986]" dest=".: . [9952,9953]"/>
  <match src="{: { [48758,48759]" dest="{: { [48842,48843]"/>
  <match src="primitive_type [45508,45513]" dest="primitive_type [45306,45311]"/>
  <match src="(: ( [26551,26552]" dest="(: ( [26417,26418]"/>
  <match src="assignment_expression [29545,29581]" dest="assignment_expression [29411,29447]"/>
  <match src="solidity_version_comparison_operator [119,122]" dest="solidity_version_comparison_operator [119,122]"/>
  <match src="-: - [36135,36136]" dest="-: - [36001,36002]"/>
  <match src="array_access [22882,22894]" dest="array_access [22748,22760]"/>
  <match src="returns: returns [33595,33602]" dest="returns: returns [33461,33468]"/>
  <match src="bytes: bytes [41964,41969]" dest="bytes: bytes [41762,41767]"/>
  <match src="identifier: item [33218,33222]" dest="identifier: item [33084,33088]"/>
  <match src="yul_evm_builtin [34078,34081]" dest="yul_evm_builtin [33944,33947]"/>
  <match src="contract_body [19429,19786]" dest="contract_body [19330,19687]"/>
  <match src="primitive_type [18061,18066]" dest="primitive_type [17995,18000]"/>
  <match src="identifier: tokenId [43137,43144]" dest="identifier: tokenId [42936,42943]"/>
  <match src="[: [ [54494,54495]" dest="[: [ [54728,54729]"/>
  <match src="identifier: metaData [54539,54547]" dest="identifier: metaData [54773,54781]"/>
  <match src="call_argument [32304,32326]" dest="call_argument [32170,32192]"/>
  <match src="add: add [34317,34320]" dest="add: add [34183,34186]"/>
  <match src="identifier: mint [52766,52770]" dest="identifier: mint [52922,52926]"/>
  <match src="identifier: toUint [30787,30793]" dest="identifier: toUint [30653,30659]"/>
  <match src="primitive_type [29872,29879]" dest="primitive_type [29738,29745]"/>
  <match src="identifier: lockTokens [44271,44281]" dest="identifier: lockTokens [44069,44079]"/>
  <match src="yul_identifier [31476,31479]" dest="yul_identifier [31342,31345]"/>
  <match src="call_argument [12990,13021]" dest="call_argument [12924,12955]"/>
  <match src="yul_path [34557,34563]" dest="yul_path [34423,34429]"/>
  <match src="&lt;:  &lt; [37379,37381]" dest="&lt;:  &lt; [37179,37181]"/>
  <match src="): ) [28966,28967]" dest="): ) [28832,28833]"/>
  <match src="identifier: memPtr [29596,29602]" dest="identifier: memPtr [29462,29468]"/>
  <match src="number_literal: 33 [30985,30987]" dest="number_literal: 33 [30851,30853]"/>
  <match src="{: { [33613,33614]" dest="{: { [33479,33480]"/>
  <match src="identifier: toUint [54045,54051]" dest="identifier: toUint [54279,54285]"/>
  <match src=",: , [32326,32327]" dest=",: , [32192,32193]"/>
  <match src="primitive_type [54186,54193]" dest="primitive_type [54420,54427]"/>
  <match src=".: . [32457,32458]" dest=".: . [32323,32324]"/>
  <match src="public: public [24581,24587]" dest="public: public [24447,24453]"/>
  <match src="identifier: itemLen [33784,33791]" dest="identifier: itemLen [33650,33657]"/>
  <match src="variable_declaration [29850,29861]" dest="variable_declaration [29716,29727]"/>
  <match src="visibility [41272,41280]" dest="visibility [41070,41078]"/>
  <match src="call_expression [16725,16792]" dest="call_expression [16659,16726]"/>
  <match src="}: } [7468,7469]" dest="}: } [7435,7436]"/>
  <match src="): ) [7343,7344]" dest="): ) [7310,7311]"/>
  <match src="type_name [50273,50290]" dest="type_name [50357,50374]"/>
  <match src="returns: returns [17269,17276]" dest="returns: returns [17203,17210]"/>
  <match src=".: . [50567,50568]" dest=".: . [50651,50652]"/>
  <match src="): ) [34212,34213]" dest="): ) [34078,34079]"/>
  <match src="(: ( [54560,54561]" dest="(: ( [54794,54795]"/>
  <match src="identifier: recipient [12902,12911]" dest="identifier: recipient [12836,12845]"/>
  <match src="if_statement [29989,30032]" dest="if_statement [29855,29898]"/>
  <match src="pure: pure [35706,35710]" dest="pure: pure [35572,35576]"/>
  <match src="identifier: require [30586,30593]" dest="identifier: require [30452,30459]"/>
  <match src="(: ( [50167,50168]" dest="(: ( [50251,50252]"/>
  <match src="solidity_pragma_token [45346,45360]" dest="solidity_pragma_token [45145,45160]"/>
  <match src="identifier: _msgSender [27339,27349]" dest="identifier: _msgSender [27205,27215]"/>
  <match src="primitive_type [7684,7691]" dest="primitive_type [7651,7658]"/>
  <match src="(: ( [8352,8353]" dest="(: ( [8319,8320]"/>
  <match src="parameter [15511,15525]" dest="parameter [15445,15459]"/>
  <match src="{: { [18173,18174]" dest="{: { [18107,18108]"/>
  <match src="identifier: tokenId [54638,54645]" dest="identifier: tokenId [54872,54879]"/>
  <match src=".: . [54553,54554]" dest=".: . [54787,54788]"/>
  <match src="user_defined_type [3318,3321]" dest="user_defined_type [3285,3288]"/>
  <match src=",: , [34230,34231]" dest=",: , [34096,34097]"/>
  <match src=",: , [39251,39252]" dest=",: , [39049,39050]"/>
  <match src="(: ( [16965,16966]" dest="(: ( [16899,16900]"/>
  <match src="address: address [17225,17232]" dest="address: address [17159,17166]"/>
  <match src="expression_statement [4487,4531]" dest="expression_statement [4454,4498]"/>
  <match src="member_expression [23192,23212]" dest="member_expression [23058,23078]"/>
  <match src="else: else [54298,54302]" dest="else: else [54532,54536]"/>
  <match src="==: == [51297,51299]" dest="==: == [51453,51455]"/>
  <match src=",: , [44958,44959]" dest=",: , [44756,44757]"/>
  <match src="identifier: tokenId [54255,54262]" dest="identifier: tokenId [54489,54496]"/>
  <match src="{: { [35870,35871]" dest="{: { [35736,35737]"/>
  <match src="parameter [17241,17258]" dest="parameter [17175,17192]"/>
  <match src="-: - [3996,3997]" dest="-: - [3963,3964]"/>
  <match src="yul_identifier [34206,34212]" dest="yul_identifier [34072,34078]"/>
  <match src="returns: returns [5193,5200]" dest="returns: returns [5160,5167]"/>
  <match src="identifier: functionCallWithValue [15007,15028]" dest="identifier: functionCallWithValue [14941,14962]"/>
  <match src="(: ( [45190,45191]" dest="(: ( [44989,44990]"/>
  <match src="): ) [50576,50577]" dest="): ) [50660,50661]"/>
  <match src="type_name [52059,52074]" dest="type_name [52215,52230]"/>
  <match src="parameter [28549,28566]" dest="parameter [28415,28432]"/>
  <match src="number_literal: 0 [33105,33106]" dest="number_literal: 0 [32971,32972]"/>
  <match src="comment: // This modifies the order of the array, as noted in {at}. [3830,3888]" dest="comment: // This modifies the order of the array, as noted in {at}. [3797,3855]"/>
  <match src="type_name [31714,31721]" dest="type_name [31580,31587]"/>
  <match src="emit: emit [26860,26864]" dest="emit: emit [26726,26730]"/>
  <match src="string [30919,30953]" dest="string [30785,30819]"/>
  <match src="identifier: account [27082,27089]" dest="identifier: account [26948,26955]"/>
  <match src="{: { [5010,5011]" dest="{: { [4977,4978]"/>
  <match src="false: false [30026,30031]" dest="false: false [29892,29897]"/>
  <match src="(: ( [5201,5202]" dest="(: ( [5168,5169]"/>
  <match src="internal: internal [8512,8520]" dest="internal: internal [8479,8487]"/>
  <match src="{: { [19615,19616]" dest="{: { [19516,19517]"/>
  <match src=".: . [52035,52036]" dest=".: . [52191,52192]"/>
  <match src="(: ( [50260,50261]" dest="(: ( [50344,50345]"/>
  <match src="state_mutability [30231,30235]" dest="state_mutability [30097,30101]"/>
  <match src=".: . [8573,8574]" dest=".: . [8540,8541]"/>
  <match src="identifier: role [25770,25774]" dest="identifier: role [25636,25640]"/>
  <match src=",: , [12911,12912]" dest=",: , [12845,12846]"/>
  <match src="identifier: _msgSender [27139,27149]" dest="identifier: _msgSender [27005,27015]"/>
  <match src="identifier: target [15899,15905]" dest="identifier: target [15833,15839]"/>
  <match src="private: private [27034,27041]" dest="private: private [26900,26907]"/>
  <match src="primitive_type [32894,32901]" dest="primitive_type [32760,32767]"/>
  <match src=",: , [37824,37825]" dest=",: , [37622,37623]"/>
  <match src="}: } [10216,10217]" dest="}: } [10183,10184]"/>
  <match src="function: function [40362,40370]" dest="function: function [40160,40168]"/>
  <match src="member_expression [2995,3007]" dest="member_expression [2962,2974]"/>
  <match src="binary_expression [53773,53823]" dest="binary_expression [54007,54057]"/>
  <match src="function_definition [38412,38484]" dest="function_definition [38210,38282]"/>
  <match src="pragma_directive [27430,27452]" dest="pragma_directive [27296,27319]"/>
  <match src=",: , [6396,6397]" dest=",: , [6363,6364]"/>
  <match src=".: . [15653,15654]" dest=".: . [15587,15588]"/>
  <match src="variable_declaration [49458,49467]" dest="variable_declaration [49542,49551]"/>
  <match src="identifier: len [29295,29298]" dest="identifier: len [29161,29164]"/>
  <match src="primitive_type [3367,3371]" dest="primitive_type [3334,3338]"/>
  <match src="user_defined_type [6374,6384]" dest="user_defined_type [6341,6351]"/>
  <match src="external: external [39875,39883]" dest="external: external [39673,39681]"/>
  <match src="}: } [54296,54297]" dest="}: } [54530,54531]"/>
  <match src="else: else [35110,35114]" dest="else: else [34976,34980]"/>
  <match src="identifier: byteLen [34512,34519]" dest="identifier: byteLen [34378,34385]"/>
  <match src="identifier: operator [863,871]" dest="identifier: operator [863,871]"/>
  <match src="=: = [4262,4263]" dest="=: = [4229,4230]"/>
  <match src="identifier: tokenId [39261,39268]" dest="identifier: tokenId [39059,39066]"/>
  <match src="&gt;=:  &gt;= [119,122]" dest="&gt;=:  &gt;= [119,122]"/>
  <match src="call_argument [30787,30799]" dest="call_argument [30653,30665]"/>
  <match src="address: address [52456,52463]" dest="address: address [52612,52619]"/>
  <match src="identifier: byte0 [34965,34970]" dest="identifier: byte0 [34831,34836]"/>
  <match src="=: = [52196,52197]" dest="=: = [52352,52353]"/>
  <match src="identifier: _inner [6903,6909]" dest="identifier: _inner [6870,6876]"/>
  <match src="type_name [39832,39839]" dest="type_name [39630,39637]"/>
  <match src="expression_statement [51009,51150]" dest="expression_statement [51093,51234]"/>
  <match src="block_statement [18332,18683]" dest="block_statement [18266,18617]"/>
  <match src="function: function [10103,10111]" dest="function: function [10070,10078]"/>
  <match src="primitive_type [15045,15050]" dest="primitive_type [14979,14984]"/>
  <match src="primitive_type [23851,23858]" dest="primitive_type [23717,23724]"/>
  <match src="type_name [38244,38251]" dest="type_name [38042,38049]"/>
  <match src="number_literal: 3 [54042,54043]" dest="number_literal: 3 [54276,54277]"/>
  <match src="binary_expression [29372,29413]" dest="binary_expression [29238,29279]"/>
  <match src="=: = [16905,16906]" dest="=: = [16839,16840]"/>
  <match src="): ) [31973,31974]" dest="): ) [31839,31840]"/>
  <match src="return: return [35241,35247]" dest="return: return [35107,35113]"/>
  <match src="identifier: destpart [36248,36256]" dest="identifier: destpart [36114,36122]"/>
  <match src="bytes32: bytes32 [21490,21497]" dest="bytes32: bytes32 [21356,21363]"/>
  <match src="identifier: _values [4385,4392]" dest="identifier: _values [4352,4359]"/>
  <match src=",: , [48484,48485]" dest=",: , [48568,48569]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [9793,9865]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [9760,9832]"/>
  <match src="comment: // To delete an element from the _values array in O(1), we swap the element to delete with the last one in [3612,3718]" dest="comment: // To delete an element from the _values array in O(1), we swap the element to delete with the last one in [3579,3685]"/>
  <match src="identifier: success [18052,18059]" dest="identifier: success [17986,17993]"/>
  <match src="binary_expression [36112,36134]" dest="binary_expression [35978,36000]"/>
  <match src="primitive_type [41921,41928]" dest="primitive_type [41719,41726]"/>
  <match src="): ) [39873,39874]" dest="): ) [39671,39672]"/>
  <match src="): ) [54893,54894]" dest="): ) [55199,55200]"/>
  <match src="(: ( [9888,9889]" dest="(: ( [9855,9856]"/>
  <match src="identifier: size [11916,11920]" dest="identifier: size [11850,11854]"/>
  <match src="type_name [14450,14457]" dest="type_name [14384,14391]"/>
  <match src="): ) [26581,26582]" dest="): ) [26447,26448]"/>
  <match src="==: == [35730,35732]" dest="==: == [35596,35598]"/>
  <match src="(: ( [22857,22858]" dest="(: ( [22723,22724]"/>
  <match src="constant: constant [46101,46109]" dest="constant: constant [45899,45907]"/>
  <match src="): ) [25224,25225]" dest="): ) [25090,25091]"/>
  <match src="function: function [34875,34883]" dest="function: function [34741,34749]"/>
  <match src=",: , [9908,9909]" dest=",: , [9875,9876]"/>
  <match src="address: address [41921,41928]" dest="address: address [41719,41726]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [8596,8927]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [8563,8894]"/>
  <match src="identifier: _msgData [19559,19567]" dest="identifier: _msgData [19460,19468]"/>
  <match src="): ) [34580,34581]" dest="): ) [34446,34447]"/>
  <match src="yul_evm_builtin [35022,35027]" dest="yul_evm_builtin [34888,34893]"/>
  <match src="]: ] [50216,50217]" dest="]: ] [50300,50301]"/>
  <match src="boolean_literal [4821,4826]" dest="boolean_literal [4788,4793]"/>
  <match src="): ) [9388,9389]" dest="): ) [9355,9356]"/>
  <match src="if: if [52847,52849]" dest="if: if [53081,53083]"/>
  <match src="binary_expression [33135,33176]" dest="binary_expression [33001,33042]"/>
  <match src="div: div [34616,34619]" dest="div: div [34482,34485]"/>
  <match src="(: ( [50442,50443]" dest="(: ( [50526,50527]"/>
  <match src="(: ( [24735,24736]" dest="(: ( [24601,24602]"/>
  <match src="call_argument [27330,27337]" dest="call_argument [27196,27203]"/>
  <match src="parameter [42480,42495]" dest="parameter [42279,42294]"/>
  <match src="identifier: byte0 [29935,29940]" dest="identifier: byte0 [29801,29806]"/>
  <match src="view: view [23151,23155]" dest="view: view [23017,23021]"/>
  <match src="}: } [18761,18762]" dest="}: } [18695,18696]"/>
  <match src="member_expression [25096,25118]" dest="member_expression [24962,24984]"/>
  <match src="): ) [17386,17387]" dest="): ) [17320,17321]"/>
  <match src="primitive_type [44916,44923]" dest="primitive_type [44714,44721]"/>
  <match src="constant: constant [45615,45623]" dest="constant: constant [45413,45421]"/>
  <match src="(: ( [6373,6374]" dest="(: ( [6340,6341]"/>
  <match src="call_argument [25217,25224]" dest="call_argument [25083,25090]"/>
  <match src="member_expression [18309,18326]" dest="member_expression [18243,18260]"/>
  <match src="call_argument [49264,49285]" dest="call_argument [49348,49369]"/>
  <match src="type_name [44969,44974]" dest="type_name [44767,44772]"/>
  <match src="string_literal [30919,30953]" dest="string_literal [30785,30819]"/>
  <match src="private: private [4982,4989]" dest="private: private [4949,4956]"/>
  <match src="return_statement [7734,7792]" dest="return_statement [7701,7759]"/>
  <match src="type_name [9685,9692]" dest="type_name [9652,9659]"/>
  <match src="using_directive [45488,45514]" dest="using_directive [45286,45312]"/>
  <match src="(: ( [8115,8116]" dest="(: ( [8082,8083]"/>
  <match src="]: ] [22893,22894]" dest="]: ] [22759,22760]"/>
  <match src="return_statement [9027,9084]" dest="return_statement [8994,9051]"/>
  <match src="emit: emit [49025,49029]" dest="emit: emit [49109,49113]"/>
  <match src="return: return [34798,34804]" dest="return: return [34664,34670]"/>
  <match src="return: return [33473,33479]" dest="return: return [33339,33345]"/>
  <match src="(: ( [25926,25927]" dest="(: ( [25792,25793]"/>
  <match src="call_argument [7746,7756]" dest="call_argument [7713,7723]"/>
  <match src="type_cast_expression [50443,50479]" dest="type_cast_expression [50527,50563]"/>
  <match src="identifier: item [30847,30851]" dest="identifier: item [30713,30717]"/>
  <match src="&quot;: &quot; [12990,12991]" dest="&quot;: &quot; [12924,12925]"/>
  <match src="primitive_type [37247,37251]" dest="primitive_type [37080,37084]"/>
  <match src="): ) [41983,41984]" dest="): ) [41781,41782]"/>
  <match src="bytes32: bytes32 [46417,46424]" dest="bytes32: bytes32 [46215,46222]"/>
  <match src="call_argument [30436,30447]" dest="call_argument [30302,30313]"/>
  <match src="yul_evm_builtin [35902,35907]" dest="yul_evm_builtin [35768,35773]"/>
  <match src="type_name [21313,21337]" dest="type_name [21179,21203]"/>
  <match src=",: , [34328,34329]" dest=",: , [34194,34195]"/>
  <match src="type_name [29018,29025]" dest="type_name [28884,28891]"/>
  <match src="): ) [35228,35229]" dest="): ) [35094,35095]"/>
  <match src="call_argument [31068,31079]" dest="call_argument [30934,30945]"/>
  <match src="type_name [37204,37210]" dest="type_name [37037,37043]"/>
  <match src="for_statement [29450,29633]" dest="for_statement [29316,29499]"/>
  <match src="return_type_definition [40628,40654]" dest="return_type_definition [40426,40452]"/>
  <match src="variable_declaration [28720,28734]" dest="variable_declaration [28586,28600]"/>
  <match src="(: ( [30435,30436]" dest="(: ( [30301,30302]"/>
  <match src="member_expression [27057,27081]" dest="member_expression [26923,26947]"/>
  <match src="call_argument [33309,33316]" dest="call_argument [33175,33182]"/>
  <match src="identifier: item [29372,29376]" dest="identifier: item [29238,29242]"/>
  <match src="): ) [27229,27230]" dest="): ) [27095,27096]"/>
  <match src="type_name [33624,33631]" dest="type_name [33490,33497]"/>
  <match src="assignment_expression [4487,4530]" dest="assignment_expression [4454,4497]"/>
  <match src="return: return [35091,35097]" dest="return: return [34957,34963]"/>
  <match src="struct_member [2333,2351]" dest="struct_member [2300,2318]"/>
  <match src="identifier: length [3029,3035]" dest="identifier: length [2996,3002]"/>
  <match src="parameter [6817,6839]" dest="parameter [6784,6806]"/>
  <match src="call_expression [48851,48887]" dest="call_expression [48935,48971]"/>
  <match src="call_expression [24607,24712]" dest="call_expression [24473,24578]"/>
  <match src="identifier: LIST_SHORT_START [28285,28301]" dest="identifier: LIST_SHORT_START [28151,28167]"/>
  <match src="): ) [6131,6132]" dest="): ) [6098,6099]"/>
  <match src="call_argument [7782,7787]" dest="call_argument [7749,7754]"/>
  <match src="identifier: memPtr [34626,34632]" dest="identifier: memPtr [34492,34498]"/>
  <match src="yul_identifier [34626,34632]" dest="yul_identifier [34492,34498]"/>
  <match src="parameter [18135,18147]" dest="parameter [18069,18081]"/>
  <match src="identifier: to [37649,37651]" dest="identifier: to [37447,37449]"/>
  <match src="if: if [33752,33754]" dest="if: if [33618,33620]"/>
  <match src="emit_statement [27307,27353]" dest="emit_statement [27173,27219]"/>
  <match src="call_argument [47205,47211]" dest="call_argument [47289,47295]"/>
  <match src=".: . [23204,23205]" dest=".: . [23070,23071]"/>
  <match src="comment: /*  * @author Hamdi Allam hamdi.allam97@gmail.com  * Please reach out with any questions or concerns  * https://github.com/hamdiallam/Solidity-RLP/blob/e681e25a376dbd5426b509380bc03446f05d0f97/contracts/RLPReader.sol  */ [27900,28124]" dest="comment: /*  * @author Hamdi Allam hamdi.allam97@gmail.com  * Please reach out with any questions or concerns  * https://github.com/hamdiallam/Solidity-RLP/blob/e681e25a376dbd5426b509380bc03446f05d0f97/contracts/RLPReader.sol  */ [27765,27989]"/>
  <match src="): ) [47086,47087]" dest="): ) [47170,47171]"/>
  <match src="identifier: set [6463,6466]" dest="identifier: set [6430,6433]"/>
  <match src="type_name [48007,48014]" dest="type_name [48091,48098]"/>
  <match src="address: address [39227,39234]" dest="address: address [39025,39032]"/>
  <match src="call_argument [26888,26910]" dest="call_argument [26754,26776]"/>
  <match src="expression_statement [34409,34448]" dest="expression_statement [34275,34314]"/>
  <match src="address: address [22264,22271]" dest="address: address [22130,22137]"/>
  <match src=".: . [19770,19771]" dest=".: . [19671,19672]"/>
  <match src=":=: := [34728,34730]" dest=":=: := [34594,34596]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [16402,16580]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [16336,16514]"/>
  <match src="return_statement [9965,10010]" dest="return_statement [9932,9977]"/>
  <match src="number_literal: 0 [14599,14600]" dest="number_literal: 0 [14533,14534]"/>
  <match src="pragma_directive [10794,10825]" dest="pragma_directive [10728,10759]"/>
  <match src="visibility [7313,7321]" dest="visibility [7280,7288]"/>
  <match src=",: , [13193,13194]" dest=",: , [13127,13128]"/>
  <match src="identifier: value [5041,5046]" dest="identifier: value [5008,5013]"/>
  <match src="using: using [45520,45525]" dest="using: using [45318,45323]"/>
  <match src="primitive_type [4967,4974]" dest="primitive_type [4934,4941]"/>
  <match src="yul_assignment [30384,30408]" dest="yul_assignment [30250,30274]"/>
  <match src="identifier: members [21430,21437]" dest="identifier: members [21296,21303]"/>
  <match src="type_name [14531,14536]" dest="type_name [14465,14470]"/>
  <match src="primitive_type [24550,24557]" dest="primitive_type [24416,24423]"/>
  <match src="[: [ [5788,5789]" dest="[: [ [5755,5756]"/>
  <match src="member_expression [8333,8343]" dest="member_expression [8300,8310]"/>
  <match src="interface_declaration [297,954]" dest="interface_declaration [297,954]"/>
  <match src="(: ( [31538,31539]" dest="(: ( [31404,31405]"/>
  <match src="): ) [29341,29342]" dest="): ) [29207,29208]"/>
  <match src="expression_statement [30586,30648]" dest="expression_statement [30452,30514]"/>
  <match src="}: } [5254,5255]" dest="}: } [5221,5222]"/>
  <match src="{: { [15111,15112]" dest="{: { [15045,15046]"/>
  <match src="): ) [7311,7312]" dest="): ) [7278,7279]"/>
  <match src=",: , [46753,46754]" dest=",: , [46551,46552]"/>
  <match src="array_access [51984,51993]" dest="array_access [52140,52149]"/>
  <match src="override: override [48158,48166]" dest="override: override [48242,48250]"/>
  <match src="comment: // File: contracts/common/Initializable.sol [45018,45061]" dest="comment: // File: contracts/common/Initializable.sol [44816,44859]"/>
  <match src="state_mutability [30862,30866]" dest="state_mutability [30728,30732]"/>
  <match src="): ) [30883,30884]" dest="): ) [30749,30750]"/>
  <match src=":=: := [18563,18565]" dest=":=: := [18497,18499]"/>
  <match src=",: , [39239,39240]" dest=",: , [39037,39038]"/>
  <match src="bytes32: bytes32 [7336,7343]" dest="bytes32: bytes32 [7303,7310]"/>
  <match src="comment: // right shifting to get the len [34243,34275]" dest="comment: // right shifting to get the len [34109,34141]"/>
  <match src="+: + [35378,35379]" dest="+: + [35244,35245]"/>
  <match src="call_expression [53965,53991]" dest="call_expression [54199,54225]"/>
  <match src="internal: internal [30853,30861]" dest="internal: internal [30719,30727]"/>
  <match src="external: external [41985,41993]" dest="external: external [41783,41791]"/>
  <match src="user_defined_type [8237,8247]" dest="user_defined_type [8204,8214]"/>
  <match src="yul_identifier [32616,32622]" dest="yul_identifier [32482,32488]"/>
  <match src="identifier: IMintableERC721 [48660,48675]" dest="identifier: IMintableERC721 [48744,48759]"/>
  <match src="identifier: _inner [9754,9760]" dest="identifier: _inner [9721,9727]"/>
  <match src="bool: bool [7717,7721]" dest="bool: bool [7684,7688]"/>
  <match src="yul_evm_builtin [34304,34307]" dest="yul_evm_builtin [34170,34173]"/>
  <match src="type_name [37803,37810]" dest="type_name [37601,37608]"/>
  <match src="{: { [5850,5851]" dest="{: { [5817,5818]"/>
  <match src="comment: // keccak256(&quot;MintableERC721&quot;) [45712,45742]" dest="comment: // keccak256(&quot;MintableERC721&quot;) [45510,45540]"/>
  <match src="identifier: copy [35619,35623]" dest="identifier: copy [35485,35489]"/>
  <match src="type_alias [21350,21357]" dest="type_alias [21216,21223]"/>
  <match src="): ) [48129,48130]" dest="): ) [48213,48214]"/>
  <match src="bool: bool [45121,45125]" dest="bool: bool [44920,44924]"/>
  <match src="function_body [7345,7393]" dest="function_body [7312,7360]"/>
  <match src="call_argument [31767,31778]" dest="call_argument [31633,31644]"/>
  <match src="bytes: bytes [904,909]" dest="bytes: bytes [904,909]"/>
  <match src="type_name [50273,50292]" dest="type_name [50357,50376]"/>
  <match src="&lt;=: &lt;= [30982,30984]" dest="&lt;=: &lt;= [30848,30850]"/>
  <match src="variable_declaration_statement [31233,31265]" dest="variable_declaration_statement [31099,31131]"/>
  <match src="identifier: adminRole [26912,26921]" dest="identifier: adminRole [26778,26787]"/>
  <match src="type_name [29018,29027]" dest="type_name [28884,28893]"/>
  <match src="{: { [34946,34947]" dest="{: { [34812,34813]"/>
  <match src="{: { [31357,31358]" dest="{: { [31223,31224]"/>
  <match src="string: string [15561,15567]" dest="string: string [15495,15501]"/>
  <match src="uint256: uint256 [32545,32552]" dest="uint256: uint256 [32411,32418]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [5262,5593]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [5229,5560]"/>
  <match src="primitive_type [943,949]" dest="primitive_type [943,949]"/>
  <match src=",: , [34222,34223]" dest=",: , [34088,34089]"/>
  <match src="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [18893,19401]" dest="comment: /*  * @dev Provides information about the current execution context, including the  * sender of the transaction and its data. While these are generally available  * via msg.sender and msg.data, they should not be accessed in such a direct  * manner, since when dealing with GSN meta-transactions the account sending and  * paying for execution may not be the actual sender (as far as an application  * is concerned).  *  * This contract is only required for intermediate, library-like contracts.  */ [18794,19302]"/>
  <match src=",: , [44930,44931]" dest=",: , [44728,44729]"/>
  <match src="primitive_type [52180,52187]" dest="primitive_type [52336,52343]"/>
  <match src="visibility [38221,38229]" dest="visibility [38019,38027]"/>
  <match src="primitive_type [17654,17660]" dest="primitive_type [17588,17594]"/>
  <match src="struct_declaration [7422,7469]" dest="struct_declaration [7389,7436]"/>
  <match src="): ) [48350,48351]" dest="): ) [48434,48435]"/>
  <match src="comment: // If it's a simple batch exit, where a set of [51364,51410]" dest="comment: // If it's a simple batch exit, where a set of [51520,51566]"/>
  <match src="address: address [15511,15518]" dest="address: address [15445,15452]"/>
  <match src="assembly_statement [35861,35928]" dest="assembly_statement [35727,35794]"/>
  <match src="primitive_type [6617,6624]" dest="primitive_type [6584,6591]"/>
  <match src="block_statement [54122,54297]" dest="block_statement [54356,54531]"/>
  <match src="): ) [9722,9723]" dest="): ) [9689,9690]"/>
  <match src="=: = [52025,52026]" dest="=: = [52181,52182]"/>
  <match src="variable_declaration [33089,33102]" dest="variable_declaration [32955,32968]"/>
  <match src="): ) [5008,5009]" dest="): ) [4975,4976]"/>
  <match src="identifier: index [23952,23957]" dest="identifier: index [23818,23823]"/>
  <match src="identifier: token [52361,52366]" dest="identifier: token [52517,52522]"/>
  <match src="call_expression [7741,7791]" dest="call_expression [7708,7758]"/>
  <match src="yul_hex_number: 0x20 [32610,32614]" dest="yul_hex_number: 0x20 [32476,32480]"/>
  <match src="identifier: data [15159,15163]" dest="identifier: data [15093,15097]"/>
  <match src="yul_identifier [35005,35010]" dest="yul_identifier [34871,34876]"/>
  <match src="(: ( [27199,27200]" dest="(: ( [27065,27066]"/>
  <match src="member_expression [52361,52373]" dest="member_expression [52517,52529]"/>
  <match src="memory: memory [50293,50299]" dest="memory: memory [50377,50383]"/>
  <match src=",: , [33713,33714]" dest=",: , [33579,33580]"/>
  <match src="number_literal: 1 [53692,53693]" dest="number_literal: 1 [53926,53927]"/>
  <match src="yul_identifier [34003,34008]" dest="yul_identifier [33869,33874]"/>
  <match src="comment: // bytes32 values. [1981,1999]" dest="comment: // bytes32 values. [1948,1966]"/>
  <match src="function_definition [41895,41994]" dest="function_definition [41693,41792]"/>
  <match src="identifier: _values [4643,4650]" dest="identifier: _values [4610,4617]"/>
  <match src="modifier_invocation [47097,47108]" dest="modifier_invocation [47181,47192]"/>
  <match src="identifier: metaData [43161,43169]" dest="identifier: metaData [42960,42968]"/>
  <match src="let: let [34181,34184]" dest="let: let [34047,34050]"/>
  <match src="call_argument [14593,14597]" dest="call_argument [14527,14531]"/>
  <match src="identifier: value [2811,2816]" dest="identifier: value [2778,2783]"/>
  <match src="visibility [14513,14521]" dest="visibility [14447,14455]"/>
  <match src="identifier: _msgSender [24647,24657]" dest="identifier: _msgSender [24513,24523]"/>
  <match src=",: , [49065,49066]" dest=",: , [49149,49150]"/>
  <match src="type_name [26799,26806]" dest="type_name [26665,26672]"/>
  <match src="parenthesized_expression [36117,36134]" dest="parenthesized_expression [35983,36000]"/>
  <match src="call_expression [30905,30917]" dest="call_expression [30771,30783]"/>
  <match src="function_body [47513,47580]" dest="function_body [47597,47664]"/>
  <match src="&quot;: &quot; [50781,50782]" dest="&quot;: &quot; [50865,50866]"/>
  <match src="(: ( [26798,26799]" dest="(: ( [26664,26665]"/>
  <match src="returns: returns [19592,19599]" dest="returns: returns [19493,19500]"/>
  <match src="yul_if_statement [31470,31564]" dest="yul_if_statement [31336,31430]"/>
  <match src="identifier: item [30198,30202]" dest="identifier: item [30064,30068]"/>
  <match src=":=: := [30388,30390]" dest=":=: := [30254,30256]"/>
  <match src="identifier: members [27267,27274]" dest="identifier: members [27133,27140]"/>
  <match src="variable_declaration_statement [17867,17935]" dest="variable_declaration_statement [17801,17869]"/>
  <match src="if_statement [54095,54672]" dest="if_statement [54329,54906]"/>
  <match src="identifier: mask [36277,36281]" dest="identifier: mask [36143,36147]"/>
  <match src="(: ( [7273,7274]" dest="(: ( [7240,7241]"/>
  <match src="): ) [31689,31690]" dest="): ) [31555,31556]"/>
  <match src="=: = [50836,50837]" dest="=: = [50920,50921]"/>
  <match src="comment: // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs [4016,4122]" dest="comment: // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs [3983,4089]"/>
  <match src="identifier: offset [32665,32671]" dest="identifier: offset [32531,32537]"/>
  <match src="call_argument [24742,24749]" dest="call_argument [24608,24615]"/>
  <match src="[: [ [52206,52207]" dest="[: [ [52362,52363]"/>
  <match src=".: . [29405,29406]" dest=".: . [29271,29272]"/>
  <match src="): ) [13021,13022]" dest="): ) [12955,12956]"/>
  <match src="string [14157,14189]" dest="string [14091,14123]"/>
  <match src="parameter [9685,9698]" dest="parameter [9652,9665]"/>
  <match src="solidity_version_comparison_operator [10809,10812]" dest="solidity_version_comparison_operator [10743,10746]"/>
  <match src="number_literal: 32 [28386,28388]" dest="number_literal: 32 [28252,28254]"/>
  <match src="identifier: returndata_size [18547,18562]" dest="identifier: returndata_size [18481,18496]"/>
  <match src="uint256: uint256 [49458,49465]" dest="uint256: uint256 [49542,49549]"/>
  <match src="}: } [5059,5060]" dest="}: } [5026,5027]"/>
  <match src="parameter [6617,6630]" dest="parameter [6584,6597]"/>
  <match src="comment: /// @title Token predicate interface for all pos portal predicates [43600,43666]" dest="comment: /// @title Token predicate interface for all pos portal predicates [43398,43464]"/>
  <match src="function_body [27239,27371]" dest="function_body [27105,27237]"/>
  <match src="identifier: role [27261,27265]" dest="identifier: role [27127,27131]"/>
  <match src="event_paramater [22242,22262]" dest="event_paramater [22108,22128]"/>
  <match src="view: view [43482,43486]" dest="view: view [43281,43285]"/>
  <match src="identifier: toUint [53800,53806]" dest="identifier: toUint [54034,54040]"/>
  <match src="): ) [29071,29072]" dest="): ) [28937,28938]"/>
  <match src="identifier: safeTransferFrom [52413,52429]" dest="identifier: safeTransferFrom [52569,52585]"/>
  <match src="type_name [943,949]" dest="type_name [943,949]"/>
  <match src="identifier: tokenId [48308,48315]" dest="identifier: tokenId [48392,48399]"/>
  <match src="yul_evm_builtin [32089,32094]" dest="yul_evm_builtin [31955,31960]"/>
  <match src="yul_identifier [34512,34519]" dest="yul_identifier [34378,34385]"/>
  <match src="visibility [27231,27238]" dest="visibility [27097,27104]"/>
  <match src="bytes32: bytes32 [2333,2340]" dest="bytes32: bytes32 [2300,2307]"/>
  <match src="identifier: safeTransferFrom [48687,48703]" dest="identifier: safeTransferFrom [48771,48787]"/>
  <match src=".: . [22894,22895]" dest=".: . [22760,22761]"/>
  <match src="variable_declaration_statement [50881,50922]" dest="variable_declaration_statement [50965,51006]"/>
  <match src="solidity: solidity [36482,36490]" dest="solidity: solidity [36315,36323]"/>
  <match src="): ) [52108,52109]" dest="): ) [52264,52265]"/>
  <match src="block_statement [33941,34359]" dest="block_statement [33807,34225]"/>
  <match src="type_name [46764,46771]" dest="type_name [46562,46569]"/>
  <match src="identifier: index [10683,10688]" dest="identifier: index [10650,10655]"/>
  <match src="type_cast_expression [8100,8123]" dest="type_cast_expression [8067,8090]"/>
  <match src="(: ( [49263,49264]" dest="(: ( [49347,49348]"/>
  <match src="string_literal [32328,32370]" dest="string_literal [32194,32236]"/>
  <match src="binary_expression [35205,35228]" dest="binary_expression [35071,35094]"/>
  <match src="return_type_definition [33595,33612]" dest="return_type_definition [33461,33478]"/>
  <match src="type_name [6655,6659]" dest="type_name [6622,6626]"/>
  <match src="parameter [44292,44309]" dest="parameter [44090,44107]"/>
  <match src="if: if [35265,35267]" dest="if: if [35131,35133]"/>
  <match src="}: } [15925,15926]" dest="}: } [15859,15860]"/>
  <match src="primitive_type [50096,50101]" dest="primitive_type [50180,50185]"/>
  <match src="{: { [54303,54304]" dest="{: { [54537,54538]"/>
  <match src="call_argument [32528,32531]" dest="call_argument [32394,32397]"/>
  <match src="type_name [12913,12920]" dest="type_name [12847,12854]"/>
  <match src="if_statement [35115,35438]" dest="if_statement [34981,35304]"/>
  <match src="]: ] [4285,4286]" dest="]: ] [4252,4253]"/>
  <match src="identifier: account [25045,25052]" dest="identifier: account [24911,24918]"/>
  <match src="(: ( [8368,8369]" dest="(: ( [8335,8336]"/>
  <match src=",: , [30452,30453]" dest=",: , [30318,30319]"/>
  <match src="address: address [37633,37640]" dest="address: address [37431,37438]"/>
  <match src="address: address [39846,39853]" dest="address: address [39644,39651]"/>
  <match src="memory: memory [30191,30197]" dest="memory: memory [30057,30063]"/>
  <match src="identifier: currPtr [33277,33284]" dest="identifier: currPtr [33143,33150]"/>
  <match src="parameter [904,923]" dest="parameter [904,923]"/>
  <match src="solidity_version_comparison_operator [19901,19904]" dest="solidity_version_comparison_operator [18774,18777]"/>
  <match src="address: address [14450,14457]" dest="address: address [14384,14391]"/>
  <match src="): ) [51066,51067]" dest="): ) [51150,51151]"/>
  <match src="identifier: push [2846,2850]" dest="identifier: push [2813,2817]"/>
  <match src=",: , [51211,51212]" dest=",: , [51295,51296]"/>
  <match src="identifier: _owner [47248,47254]" dest="identifier: _owner [47332,47338]"/>
  <match src="visibility [26583,26591]" dest="visibility [26449,26457]"/>
  <match src="yul_identifier [29958,29964]" dest="yul_identifier [29824,29830]"/>
  <match src="identifier: balance [38252,38259]" dest="identifier: balance [38050,38057]"/>
  <match src="yul_identifier [34321,34328]" dest="yul_identifier [34187,34194]"/>
  <match src="uint256: uint256 [31178,31185]" dest="uint256: uint256 [31044,31051]"/>
  <match src="visibility [16677,16685]" dest="visibility [16611,16619]"/>
  <match src="identifier: i [52207,52208]" dest="identifier: i [52363,52364]"/>
  <match src="&quot;: &quot; [54892,54893]" dest="&quot;: &quot; [55198,55199]"/>
  <match src="call_expression [27139,27151]" dest="call_expression [27005,27017]"/>
  <match src="string [53866,53909]" dest="string [54100,54143]"/>
  <match src="type_name [21362,21369]" dest="type_name [21228,21235]"/>
  <match src="comment: // topic1 is from address [51788,51813]" dest="comment: // topic1 is from address [51944,51969]"/>
  <match src="yul_function_call [35022,35035]" dest="yul_function_call [34888,34901]"/>
  <match src="identifier: items [29122,29127]" dest="identifier: items [28988,28993]"/>
  <match src="!=: != [5048,5050]" dest="!=: != [5015,5017]"/>
  <match src="identifier: isList [30595,30601]" dest="identifier: isList [30461,30467]"/>
  <match src="identifier: item [28832,28836]" dest="identifier: item [28698,28702]"/>
  <match src=",: , [34088,34089]" dest=",: , [33954,33955]"/>
  <match src="(: ( [29244,29245]" dest="(: ( [29110,29111]"/>
  <match src="member_expression [33135,33146]" dest="member_expression [33001,33012]"/>
  <match src="parameter [10594,10607]" dest="parameter [10561,10574]"/>
  <match src="call_expression [27634,27692]" dest="call_expression [27499,27557]"/>
  <match src="identifier: IMintableERC721 [52059,52074]" dest="identifier: IMintableERC721 [52215,52230]"/>
  <match src="identifier: _indexes [4738,4746]" dest="identifier: _indexes [4705,4713]"/>
  <match src="==: == [52888,52890]" dest="==: == [53122,53124]"/>
  <match src="member_expression [51963,51973]" dest="member_expression [52119,52129]"/>
  <match src="{: { [12938,12939]" dest="{: { [12872,12873]"/>
  <match src="identifier: _payloadOffset [33149,33163]" dest="identifier: _payloadOffset [33015,33029]"/>
  <match src="primitive_type [29833,29837]" dest="primitive_type [29699,29703]"/>
  <match src="comment: // Iteratively trying to transfer ERC721 token [49351,49397]" dest="comment: // Iteratively trying to transfer ERC721 token [49435,49481]"/>
  <match src="comment: // proof of event signature `TransferWithMetadata(address,address,uint256,bytes)` [53550,53631]" dest="comment: // proof of event signature `TransferWithMetadata(address,address,uint256,bytes)` [53784,53865]"/>
  <match src="lt: lt [31473,31475]" dest="lt: lt [31339,31341]"/>
  <match src=",: , [31479,31480]" dest=",: , [31345,31346]"/>
  <match src="type_name [45600,45607]" dest="type_name [45398,45405]"/>
  <match src="[: [ [5040,5041]" dest="[: [ [5007,5008]"/>
  <match src="(: ( [8236,8237]" dest="(: ( [8203,8204]"/>
  <match src="user_defined_type [5612,5615]" dest="user_defined_type [5579,5582]"/>
  <match src="(: ( [48256,48257]" dest="(: ( [48340,48341]"/>
  <match src="primitive_type [22264,22271]" dest="primitive_type [22130,22137]"/>
  <match src="function: function [27179,27187]" dest="function: function [27045,27053]"/>
  <match src="type_name [37611,37618]" dest="type_name [37409,37416]"/>
  <match src="identifier: LockedMintableERC721 [48454,48474]" dest="identifier: LockedMintableERC721 [48538,48558]"/>
  <match src="function: function [42452,42460]" dest="function: function [42251,42259]"/>
  <match src="=: = [54482,54483]" dest="=: = [54716,54717]"/>
  <match src="identifier: memPtr [29574,29580]" dest="identifier: memPtr [29440,29446]"/>
  <match src="pragma: pragma [42058,42064]" dest="pragma: pragma [41856,41862]"/>
  <match src="array_access [52859,52877]" dest="array_access [53093,53111]"/>
  <match src="): ) [51915,51916]" dest="): ) [52071,52072]"/>
  <match src="identifier: AddressSet [7991,8001]" dest="identifier: AddressSet [7958,7968]"/>
  <match src="call_expression [6151,6174]" dest="call_expression [6118,6141]"/>
  <match src=",: , [9447,9448]" dest=",: , [9414,9415]"/>
  <match src="array_access [50318,50331]" dest="array_access [50402,50415]"/>
  <match src="type_name [4950,4953]" dest="type_name [4917,4920]"/>
  <match src="type_name [14485,14491]" dest="type_name [14419,14425]"/>
  <match src="uint256: uint256 [34899,34906]" dest="uint256: uint256 [34765,34772]"/>
  <match src="}: } [18216,18217]" dest="}: } [18150,18151]"/>
  <match src="yul_path [31476,31479]" dest="yul_path [31342,31345]"/>
  <match src="string_literal [15752,15783]" dest="string_literal [15686,15717]"/>
  <match src=",: , [7682,7683]" dest=",: , [7649,7650]"/>
  <match src="(: ( [36207,36208]" dest="(: ( [36073,36074]"/>
  <match src="identifier: functionDelegateCall [17310,17330]" dest="identifier: functionDelegateCall [17244,17264]"/>
  <match src="uint256: uint256 [32240,32247]" dest="uint256: uint256 [32106,32113]"/>
  <match src=",: , [48728,48729]" dest=",: , [48812,48813]"/>
  <match src="comment: // Bytes32Set [5811,5824]" dest="comment: // Bytes32Set [5778,5791]"/>
  <match src="indexed: indexed [37661,37668]" dest="indexed: indexed [37459,37466]"/>
  <match src="(: ( [34734,34735]" dest="(: ( [34600,34601]"/>
  <match src="identifier: _revertMsg [27614,27624]" dest="identifier: _revertMsg [27479,27489]"/>
  <match src="return_type_definition [15088,15110]" dest="return_type_definition [15022,15044]"/>
  <match src="+: + [33216,33217]" dest="+: + [33082,33083]"/>
  <match src="): ) [8123,8124]" dest="): ) [8090,8091]"/>
  <match src="revert: revert [54842,54848]" dest="revert: revert [55148,55154]"/>
  <match src="yul_identifier [32095,32101]" dest="yul_identifier [31961,31967]"/>
  <match src="identifier: depositReceiver [48486,48501]" dest="identifier: depositReceiver [48570,48585]"/>
  <match src="return_statement [16941,17001]" dest="return_statement [16875,16935]"/>
  <match src="(: ( [24622,24623]" dest="(: ( [24488,24489]"/>
  <match src="(: ( [51061,51062]" dest="(: ( [51145,51146]"/>
  <match src="member_expression [52407,52429]" dest="member_expression [52563,52585]"/>
  <match src="member_expression [54141,54163]" dest="member_expression [54375,54397]"/>
  <match src="): ) [29965,29966]" dest="): ) [29831,29832]"/>
  <match src="string_literal [29074,29100]" dest="string_literal [28940,28966]"/>
  <match src=",: , [14597,14598]" dest=",: , [14531,14532]"/>
  <match src="primitive_type [30310,30315]" dest="primitive_type [30176,30181]"/>
  <match src="primitive_type [54461,54466]" dest="primitive_type [54695,54700]"/>
  <match src="parameter [8488,8510]" dest="parameter [8455,8477]"/>
  <match src="): ) [38219,38220]" dest="): ) [38017,38018]"/>
  <match src="array_access [50549,50567]" dest="array_access [50633,50651]"/>
  <match src="}: } [35444,35445]" dest="}: } [35310,35311]"/>
  <match src="identifier: WORD_SIZE [35817,35826]" dest="identifier: WORD_SIZE [35683,35692]"/>
  <match src="call_expression [52407,52563]" dest="call_expression [52563,52719]"/>
  <match src="call_expression [25080,25186]" dest="call_expression [24946,25052]"/>
  <match src="call_argument [25927,25931]" dest="call_argument [25793,25797]"/>
  <match src="(: ( [15857,15858]" dest="(: ( [15791,15792]"/>
  <match src="bytes32: bytes32 [21942,21949]" dest="bytes32: bytes32 [21808,21815]"/>
  <match src="yul_decimal_number: 32 [18616,18618]" dest="yul_decimal_number: 32 [18550,18552]"/>
  <match src="call_argument [10198,10208]" dest="call_argument [10165,10175]"/>
  <match src="(: ( [50251,50252]" dest="(: ( [50335,50336]"/>
  <match src="return_statement [5770,5796]" dest="return_statement [5737,5763]"/>
  <match src="user_defined_type [28947,28954]" dest="user_defined_type [28813,28820]"/>
  <match src="call_expression [51268,51295]" dest="call_expression [51424,51451]"/>
  <match src="comment: // repetition as possible, we write it in terms of a generic Set type with [1901,1975]" dest="comment: // repetition as possible, we write it in terms of a generic Set type with [1868,1942]"/>
  <match src="type_name [31987,31994]" dest="type_name [31853,31860]"/>
  <match src="uint256: uint256 [52010,52017]" dest="uint256: uint256 [52166,52173]"/>
  <match src="): ) [16929,16930]" dest="): ) [16863,16864]"/>
  <match src="=: = [31193,31194]" dest="=: = [31059,31060]"/>
  <match src="type_name [4244,4251]" dest="type_name [4211,4218]"/>
  <match src="parameter [41921,41933]" dest="parameter [41719,41731]"/>
  <match src="-: - [33871,33872]" dest="-: - [33737,33738]"/>
  <match src="identifier: copy [30431,30435]" dest="identifier: copy [30297,30301]"/>
  <match src="yul_function_call [33707,33729]" dest="yul_function_call [33573,33595]"/>
  <match src="expression_statement [45228,45230]" dest="expression_statement [45027,45029]"/>
  <match src="call_argument [29139,29143]" dest="call_argument [29005,29009]"/>
  <match src="(: ( [31797,31798]" dest="(: ( [31663,31664]"/>
  <match src=",: , [35020,35021]" dest=",: , [34886,34887]"/>
  <match src="(: ( [50966,50967]" dest="(: ( [51050,51051]"/>
  <match src="identifier: RLPItem [29557,29564]" dest="identifier: RLPItem [29423,29430]"/>
  <match src="identifier: grantRole [24540,24549]" dest="identifier: grantRole [24406,24415]"/>
  <match src="identifier: logRLPList [50225,50235]" dest="identifier: logRLPList [50309,50319]"/>
  <match src="inheritance_specifier [45450,45463]" dest="inheritance_specifier [45248,45261]"/>
  <match src="&lt;:  &lt; [19909,19911]" dest="&lt;:  &lt; [18782,18784]"/>
  <match src="identifier: data [17339,17343]" dest="identifier: data [17273,17277]"/>
  <match src="(: ( [2850,2851]" dest="(: ( [2817,2818]"/>
  <match src="expression_statement [35944,35961]" dest="expression_statement [35810,35827]"/>
  <match src="primitive_type [54571,54576]" dest="primitive_type [54805,54810]"/>
  <match src="): ) [50988,50989]" dest="): ) [51072,51073]"/>
  <match src="yul_evm_builtin [36264,36269]" dest="yul_evm_builtin [36130,36135]"/>
  <match src="primitive_type [2497,2504]" dest="primitive_type [2464,2471]"/>
  <match src="]: ] [4406,4407]" dest="]: ] [4373,4374]"/>
  <match src="yul_evm_builtin [34317,34320]" dest="yul_evm_builtin [34183,34186]"/>
  <match src="call_argument [52099,52108]" dest="call_argument [52255,52264]"/>
  <match src="[: [ [29551,29552]" dest="[: [ [29417,29418]"/>
  <match src="function_definition [37177,37253]" dest="function_definition [37010,37086]"/>
  <match src="): ) [29200,29201]" dest="): ) [29066,29067]"/>
  <match src="event_paramater [22264,22287]" dest="event_paramater [22130,22153]"/>
  <match src="(: ( [29832,29833]" dest="(: ( [29698,29699]"/>
  <match src="identifier: require [13178,13185]" dest="identifier: require [13112,13119]"/>
  <match src="): ) [9080,9081]" dest="): ) [9047,9048]"/>
  <match src="primitive_type [2742,2749]" dest="primitive_type [2709,2716]"/>
  <match src="uint256: uint256 [8535,8542]" dest="uint256: uint256 [8502,8509]"/>
  <match src="return_type_definition [8290,8304]" dest="return_type_definition [8257,8271]"/>
  <match src="member_expression [50238,50251]" dest="member_expression [50322,50335]"/>
  <match src="identifier: _itemLength [31056,31067]" dest="identifier: _itemLength [30922,30933]"/>
  <match src="-: - [36128,36129]" dest="-: - [35994,35995]"/>
  <match src="primitive_type [2774,2778]" dest="primitive_type [2741,2745]"/>
  <match src="call_argument [27082,27089]" dest="call_argument [26948,26955]"/>
  <match src=".: . [3988,3989]" dest=".: . [3955,3956]"/>
  <match src="identifier: data [14593,14597]" dest="identifier: data [14527,14531]"/>
  <match src="internal: internal [15079,15087]" dest="internal: internal [15013,15021]"/>
  <match src="}: } [15223,15224]" dest="}: } [15157,15158]"/>
  <match src="bytes: bytes [47424,47429]" dest="bytes: bytes [47508,47513]"/>
  <match src="identifier: role [22642,22646]" dest="identifier: role [22508,22512]"/>
  <match src="=: = [32027,32028]" dest="=: = [31893,31894]"/>
  <match src="call_expression [15129,15216]" dest="call_expression [15063,15150]"/>
  <match src="visibility [28577,28585]" dest="visibility [28443,28451]"/>
  <match src="uint256: uint256 [30876,30883]" dest="uint256: uint256 [30742,30749]"/>
  <match src="identifier: size [11786,11790]" dest="identifier: size [11720,11724]"/>
  <match src="type_cast_expression [54186,54199]" dest="type_cast_expression [54420,54433]"/>
  <match src="pure: pure [29819,29823]" dest="pure: pure [29685,29689]"/>
  <match src="call_expression [54550,54578]" dest="call_expression [54784,54812]"/>
  <match src="inheritance_specifier [45413,45428]" dest="inheritance_specifier [45211,45226]"/>
  <match src="bool: bool [41295,41299]" dest="bool: bool [41093,41097]"/>
  <match src="identifier: isContract [15732,15742]" dest="identifier: isContract [15666,15676]"/>
  <match src="(: ( [51757,51758]" dest="(: ( [51913,51914]"/>
  <match src="comment: /**      * @notice accepts safe ERC721 transfer      */ [47271,47328]" dest="comment: /**      * @notice accepts safe ERC721 transfer      */ [47355,47412]"/>
  <match src="return: return [9965,9971]" dest="return: return [9932,9938]"/>
  <match src="): ) [17793,17794]" dest="): ) [17727,17728]"/>
  <match src="identifier: require [31910,31917]" dest="identifier: require [31776,31783]"/>
  <match src="identifier: RoleGranted [22230,22241]" dest="identifier: RoleGranted [22096,22107]"/>
  <match src="identifier: Set [9145,9148]" dest="identifier: Set [9112,9115]"/>
  <match src="user_defined_type [50273,50290]" dest="user_defined_type [50357,50374]"/>
  <match src="bytes: bytes [19601,19606]" dest="bytes: bytes [19502,19507]"/>
  <match src="call_argument [47248,47254]" dest="call_argument [47332,47338]"/>
  <match src="type_cast_expression [27627,27693]" dest="type_cast_expression [27492,27558]"/>
  <match src="return_type_definition [22849,22863]" dest="return_type_definition [22715,22729]"/>
  <match src="[: [ [24245,24246]" dest="[: [ [24111,24112]"/>
  <match src=",: , [39856,39857]" dest=",: , [39654,39655]"/>
  <match src="identifier: memPtr [31308,31314]" dest="identifier: memPtr [31174,31180]"/>
  <match src="call_argument [14157,14189]" dest="call_argument [14091,14123]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/Context.sol [18769,18819]" dest="comment: // File: @openzeppelin/contracts/utils/Context.sol [18703,18753]"/>
  <match src="function_body [30575,30808]" dest="function_body [30441,30674]"/>
  <match src="identifier: role [27324,27328]" dest="identifier: role [27190,27194]"/>
  <match src="variable_declaration [33117,33132]" dest="variable_declaration [32983,32998]"/>
  <match src="return: return [4814,4820]" dest="return: return [4781,4787]"/>
  <match src=".: . [32033,32034]" dest=".: . [31899,31900]"/>
  <match src="memory: memory [32221,32227]" dest="memory: memory [32087,32093]"/>
  <match src="primitive_type [41947,41954]" dest="primitive_type [41745,41752]"/>
  <match src="returns: returns [32206,32213]" dest="returns: returns [32072,32079]"/>
  <match src="string: string [27627,27633]" dest="string: string [27492,27498]"/>
  <match src="-: - [31256,31257]" dest="-: - [31122,31123]"/>
  <match src="return: return [30474,30480]" dest="return: return [30340,30346]"/>
  <match src="call_argument [25852,25901]" dest="call_argument [25718,25767]"/>
  <match src="{: { [35846,35847]" dest="{: { [35712,35713]"/>
  <match src="identifier: withdrawer [53655,53665]" dest="identifier: withdrawer [53889,53899]"/>
  <match src="primitive_type [37653,37660]" dest="primitive_type [37451,37458]"/>
  <match src="using_directive [21289,21338]" dest="using_directive [21155,21204]"/>
  <match src="parameter [14485,14511]" dest="parameter [14419,14445]"/>
  <match src="type_name [21448,21455]" dest="type_name [21314,21321]"/>
  <match src="type_cast_expression [53813,53823]" dest="type_cast_expression [54047,54057]"/>
  <match src="identifier: _itemLength [33297,33308]" dest="identifier: _itemLength [33163,33174]"/>
  <match src="number_literal: 33 [31930,31932]" dest="number_literal: 33 [31796,31798]"/>
  <match src="using: using [21289,21294]" dest="using: using [21155,21160]"/>
  <match src="(: ( [34320,34321]" dest="(: ( [34186,34187]"/>
  <match src="identifier: lastvalue [4500,4509]" dest="identifier: lastvalue [4467,4476]"/>
  <match src="type_name [39253,39260]" dest="type_name [39051,39058]"/>
  <match src="]: ] [29553,29554]" dest="]: ] [29419,29420]"/>
  <match src="contract_declaration [21239,27374]" dest="contract_declaration [21105,27240]"/>
  <match src="): ) [8374,8375]" dest="): ) [8341,8342]"/>
  <match src="type_name [10163,10170]" dest="type_name [10130,10137]"/>
  <match src="call_expression [53781,53808]" dest="call_expression [54015,54042]"/>
  <match src="identifier: remove [6367,6373]" dest="identifier: remove [6334,6340]"/>
  <match src="identifier: depositReceiver [46925,46940]" dest="identifier: depositReceiver [46723,46738]"/>
  <match src="(: ( [29138,29139]" dest="(: ( [29004,29005]"/>
  <match src="identifier: set [9437,9440]" dest="identifier: set [9404,9407]"/>
  <match src="binary_expression [36118,36133]" dest="binary_expression [35984,35999]"/>
  <match src="type_name [2774,2778]" dest="type_name [2741,2745]"/>
  <match src="type_name [8488,8498]" dest="type_name [8455,8465]"/>
  <match src="struct_declaration [28397,28467]" dest="struct_declaration [28263,28333]"/>
  <match src="member_expression [6899,6909]" dest="member_expression [6866,6876]"/>
  <match src="type_name [27568,27574]" dest="type_name [27433,27439]"/>
  <match src="): ) [33939,33940]" dest="): ) [33805,33806]"/>
  <match src="struct_member [28423,28435]" dest="struct_member [28289,28301]"/>
  <match src="}: } [32112,32113]" dest="}: } [31978,31979]"/>
  <match src="variable_declaration_statement [29872,29901]" dest="variable_declaration_statement [29738,29767]"/>
  <match src="type_name [16630,16635]" dest="type_name [16564,16569]"/>
  <match src="variable_declaration_statement [51933,51996]" dest="variable_declaration_statement [52089,52152]"/>
  <match src="call_argument [8570,8580]" dest="call_argument [8537,8547]"/>
  <match src="returns: returns [4995,5002]" dest="returns: returns [4962,4969]"/>
  <match src="primitive_type [8261,8268]" dest="primitive_type [8228,8235]"/>
  <match src="primitive_type [47072,47079]" dest="primitive_type [47156,47163]"/>
  <match src="identifier: contractId [27651,27661]" dest="identifier: contractId [27516,27526]"/>
  <match src="function_definition [18020,18762]" dest="function_definition [17954,18696]"/>
  <match src="identifier: memPtr [34557,34563]" dest="identifier: memPtr [34423,34429]"/>
  <match src="event_paramater [46764,46789]" dest="event_paramater [46562,46587]"/>
  <match src="&quot;: &quot; [30645,30646]" dest="&quot;: &quot; [30511,30512]"/>
  <match src=",: , [18618,18619]" dest=",: , [18552,18553]"/>
  <match src="+: + [29384,29385]" dest="+: + [29250,29251]"/>
  <match src=":: : [13153,13154]" dest=":: : [13087,13088]"/>
  <match src="number_literal: 32 [48279,48281]" dest="number_literal: 32 [48363,48365]"/>
  <match src="identifier: logTopicRLPList [50549,50564]" dest="identifier: logTopicRLPList [50633,50648]"/>
  <match src="type_name [15045,15050]" dest="type_name [14979,14984]"/>
  <match src="view: view [8993,8997]" dest="view: view [8960,8964]"/>
  <match src="}: } [953,954]" dest="}: } [953,954]"/>
  <match src="(: ( [7659,7660]" dest="(: ( [7626,7627]"/>
  <match src="comment: // exiting from L2 [52720,52738]" dest="comment: // exiting from L2 [52876,52894]"/>
  <match src="(: ( [37203,37204]" dest="(: ( [37036,37037]"/>
  <match src="}: } [4792,4793]" dest="}: } [4759,4760]"/>
  <match src="identifier: logRLPList [54484,54494]" dest="identifier: logRLPList [54718,54728]"/>
  <match src="parameter [47406,47413]" dest="parameter [47490,47497]"/>
  <match src="parameter [6431,6435]" dest="parameter [6398,6402]"/>
  <match src=",: , [25850,25851]" dest=",: , [25716,25717]"/>
  <match src="memory: memory [18067,18073]" dest="memory: memory [18001,18007]"/>
  <match src="call_expression [47223,47255]" dest="call_expression [47307,47339]"/>
  <match src="address: address [19489,19496]" dest="address: address [19390,19397]"/>
  <match src="parameter [17635,17652]" dest="parameter [17569,17586]"/>
  <match src="call_argument [30707,30721]" dest="call_argument [30573,30587]"/>
  <match src="virtual: virtual [25061,25068]" dest="virtual: virtual [24927,24934]"/>
  <match src="(: ( [8487,8488]" dest="(: ( [8454,8455]"/>
  <match src="]: ] [29163,29164]" dest="]: ] [29029,29030]"/>
  <match src="parameter [47500,47506]" dest="parameter [47584,47590]"/>
  <match src=".: . [33139,33140]" dest=".: . [33005,33006]"/>
  <match src="=: = [3926,3927]" dest="=: = [3893,3894]"/>
  <match src="internal: internal [7313,7321]" dest="internal: internal [7280,7288]"/>
  <match src="identifier: UintSet [9664,9671]" dest="identifier: UintSet [9631,9638]"/>
  <match src="variable_declaration [31275,31289]" dest="variable_declaration [31141,31155]"/>
  <match src="return: return [30019,30025]" dest="return: return [29885,29891]"/>
  <match src="identifier: _owner [47205,47211]" dest="identifier: _owner [47289,47295]"/>
  <match src="): ) [30851,30852]" dest="): ) [30717,30718]"/>
  <match src="identifier: byte0 [33756,33761]" dest="identifier: byte0 [33622,33627]"/>
  <match src="): ) [53923,53924]" dest="): ) [54157,54158]"/>
  <match src="type_name [44916,44923]" dest="type_name [44714,44721]"/>
  <match src="modifier: modifier [27709,27717]" dest="modifier: modifier [27574,27582]"/>
  <match src="identifier: staticcall [16914,16924]" dest="identifier: staticcall [16848,16858]"/>
  <match src="primitive_type [48876,48883]" dest="primitive_type [48960,48967]"/>
  <match src="primitive_type [18086,18092]" dest="primitive_type [18020,18026]"/>
  <match src="comment: // The easiest way to bubble the revert reason is using memory via assembly [18351,18426]" dest="comment: // The easiest way to bubble the revert reason is using memory via assembly [18285,18360]"/>
  <match src="identifier: Set [5861,5864]" dest="identifier: Set [5828,5831]"/>
  <match src="type_name [8015,8022]" dest="type_name [7982,7989]"/>
  <match src="type_name [16880,16885]" dest="type_name [16814,16819]"/>
  <match src="function_definition [26776,26975]" dest="function_definition [26642,26841]"/>
  <match src="call_argument [8100,8123]" dest="call_argument [8067,8090]"/>
  <match src="using_directive [21344,21370]" dest="using_directive [21210,21236]"/>
  <match src="storage: storage [2729,2736]" dest="storage: storage [2696,2703]"/>
  <match src="uint256: uint256 [32439,32446]" dest="uint256: uint256 [32305,32312]"/>
  <match src="block_statement [34394,34459]" dest="block_statement [34260,34325]"/>
  <match src="identifier: toDeleteIndex [4513,4526]" dest="identifier: toDeleteIndex [4480,4493]"/>
  <match src="type_name [8048,8052]" dest="type_name [8015,8019]"/>
  <match src="identifier: token [52075,52080]" dest="identifier: token [52231,52236]"/>
  <match src="address: address [50686,50693]" dest="address: address [50770,50777]"/>
  <match src="state_mutability [38455,38459]" dest="state_mutability [38253,38257]"/>
  <match src="call_expression [30965,31022]" dest="call_expression [30831,30888]"/>
  <match src="bytes: bytes [44382,44387]" dest="bytes: bytes [44180,44185]"/>
  <match src="identifier: byte0 [35005,35010]" dest="identifier: byte0 [34871,34876]"/>
  <match src="struct: struct [2277,2283]" dest="struct: struct [2244,2250]"/>
  <match src="(: ( [43114,43115]" dest="(: ( [42913,42914]"/>
  <match src="(: ( [29992,29993]" dest="(: ( [29858,29859]"/>
  <match src="state_mutability [43482,43486]" dest="state_mutability [43281,43285]"/>
  <match src="call_expression [16733,16751]" dest="call_expression [16667,16685]"/>
  <match src="identifier: _roles [25096,25102]" dest="identifier: _roles [24962,24968]"/>
  <match src="yul_path [34321,34328]" dest="yul_path [34187,34194]"/>
  <match src="): ) [41270,41271]" dest="): ) [41068,41069]"/>
  <match src="variable_declaration [17882,17905]" dest="variable_declaration [17816,17839]"/>
  <match src="function: function [9341,9349]" dest="function: function [9308,9316]"/>
  <match src="yul_evm_builtin [36204,36207]" dest="yul_evm_builtin [36070,36073]"/>
  <match src="&lt;: &lt; [35211,35212]" dest="&lt;: &lt; [35077,35078]"/>
  <match src="{: { [29920,29921]" dest="{: { [29786,29787]"/>
  <match src="identifier: memPtr [32095,32101]" dest="identifier: memPtr [31961,31967]"/>
  <match src="solidity_version_comparison_operator [1068,1071]" dest="solidity_version_comparison_operator [1035,1038]"/>
  <match src="+: + [34444,34445]" dest="+: + [34310,34311]"/>
  <match src="identifier: exists [54105,54111]" dest="identifier: exists [54339,54345]"/>
  <match src="(: ( [54163,54164]" dest="(: ( [54397,54398]"/>
  <match src="): ) [36352,36353]" dest="): ) [36218,36219]"/>
  <match src="uint256: uint256 [33566,33573]" dest="uint256: uint256 [33432,33439]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [6925,7256]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [6892,7223]"/>
  <match src="return_statement [28817,28853]" dest="return_statement [28683,28719]"/>
  <match src="identifier: MintableERC721Predicate [45386,45409]" dest="identifier: MintableERC721Predicate [45184,45207]"/>
  <match src="(: ( [30706,30707]" dest="(: ( [30572,30573]"/>
  <match src="(: ( [35623,35624]" dest="(: ( [35489,35490]"/>
  <match src="parameter [14063,14080]" dest="parameter [13997,14014]"/>
  <match src="{: { [28170,28171]" dest="{: { [28036,28037]"/>
  <match src="(: ( [34619,34620]" dest="(: ( [34485,34486]"/>
  <match src="&gt;=:  &gt;= [36490,36493]" dest="&gt;=:  &gt;= [36323,36326]"/>
  <match src="{: { [30369,30370]" dest="{: { [30235,30236]"/>
  <match src="[: [ [49585,49586]" dest="[: [ [49669,49670]"/>
  <match src="block_statement [52925,54685]" dest="block_statement [53159,54991]"/>
  <match src="identifier: RLPItem [29185,29192]" dest="identifier: RLPItem [29051,29058]"/>
  <match src="[: [ [4392,4393]" dest="[: [ [4359,4360]"/>
  <match src=",: , [22646,22647]" dest=",: , [22512,22513]"/>
  <match src="call_argument [53866,53909]" dest="call_argument [54100,54143]"/>
  <match src="): ) [29484,29485]" dest="): ) [29350,29351]"/>
  <match src="]: ] [5794,5795]" dest="]: ] [5761,5762]"/>
  <match src="): ) [16256,16257]" dest="): ) [16190,16191]"/>
  <match src="identifier: returndata [17895,17905]" dest="identifier: returndata [17829,17839]"/>
  <match src="call_argument [54561,54568]" dest="call_argument [54795,54802]"/>
  <match src="primitive_type [15097,15102]" dest="primitive_type [15031,15036]"/>
  <match src="returns: returns [38460,38467]" dest="returns: returns [38258,38265]"/>
  <match src="identifier: _setupRole [47174,47184]" dest="identifier: _setupRole [47258,47268]"/>
  <match src="function: function [17589,17597]" dest="function: function [17523,17531]"/>
  <match src="identifier: LIST_SHORT_START [30001,30017]" dest="identifier: LIST_SHORT_START [29867,29883]"/>
  <match src="identifier: item [32453,32457]" dest="identifier: item [32319,32323]"/>
  <match src="primitive_type [8108,8115]" dest="primitive_type [8075,8082]"/>
  <match src="call_expression [31790,31871]" dest="call_expression [31656,31737]"/>
  <match src="function_body [2780,3125]" dest="function_body [2747,3092]"/>
  <match src="=: = [31315,31316]" dest="=: = [31181,31182]"/>
  <match src="(: ( [51293,51294]" dest="(: ( [51449,51450]"/>
  <match src="member_expression [5777,5788]" dest="member_expression [5744,5755]"/>
  <match src="bytes: bytes [44969,44974]" dest="bytes: bytes [44767,44772]"/>
  <match src="variable_declaration_statement [54461,54508]" dest="variable_declaration_statement [54695,54742]"/>
  <match src="}: } [34774,34775]" dest="}: } [34640,34641]"/>
  <match src="(: ( [8079,8080]" dest="(: ( [8046,8047]"/>
  <match src="call_argument [27778,27782]" dest="call_argument [27643,27647]"/>
  <match src="assignment_expression [4381,4419]" dest="assignment_expression [4348,4386]"/>
  <match src="yul_identifier [36177,36184]" dest="yul_identifier [36043,36050]"/>
  <match src="return_type_definition [30867,30884]" dest="return_type_definition [30733,30750]"/>
  <match src="type_name [5861,5864]" dest="type_name [5828,5831]"/>
  <match src="visibility [14082,14090]" dest="visibility [14016,14024]"/>
  <match src="type_name [50050,50057]" dest="type_name [50134,50141]"/>
  <match src="variable_declaration [29455,29464]" dest="variable_declaration [29321,29330]"/>
  <match src="string_literal [25852,25901]" dest="string_literal [25718,25767]"/>
  <match src="yul_path [36334,36342]" dest="yul_path [36200,36208]"/>
  <match src="identifier: role [26560,26564]" dest="identifier: role [26426,26430]"/>
  <match src="identifier: IMintableERC721 [42094,42109]" dest="identifier: IMintableERC721 [41893,41908]"/>
  <match src="identifier: _approved [41037,41046]" dest="identifier: _approved [40835,40844]"/>
  <match src="call_argument [53676,53703]" dest="call_argument [53910,53937]"/>
  <match src="address: address [21362,21369]" dest="address: address [21228,21235]"/>
  <match src="{: { [45114,45115]" dest="{: { [44913,44914]"/>
  <match src="identifier: byteLen [34232,34239]" dest="identifier: byteLen [34098,34105]"/>
  <match src="return_type_definition [10154,10171]" dest="return_type_definition [10121,10138]"/>
  <match src="identifier: value [8269,8274]" dest="identifier: value [8236,8241]"/>
  <match src="): ) [32622,32623]" dest="): ) [32488,32489]"/>
  <match src="variable_declaration [13114,13126]" dest="variable_declaration [13048,13060]"/>
  <match src="call_argument [54194,54198]" dest="call_argument [54428,54432]"/>
  <match src="): ) [32685,32686]" dest="): ) [32551,32552]"/>
  <match src="(: ( [16924,16925]" dest="(: ( [16858,16859]"/>
  <match src="type_name [21534,21541]" dest="type_name [21400,21407]"/>
  <match src="identifier: account [26574,26581]" dest="identifier: account [26440,26447]"/>
  <match src="revert: revert [18708,18714]" dest="revert: revert [18642,18648]"/>
  <match src="primitive_type [52456,52463]" dest="primitive_type [52612,52619]"/>
  <match src="address: address [26566,26573]" dest="address: address [26432,26439]"/>
  <match src="identifier: set [9680,9683]" dest="identifier: set [9647,9650]"/>
  <match src="address: address [25037,25044]" dest="address: address [24903,24910]"/>
  <match src="call_expression [25120,25132]" dest="call_expression [24986,24998]"/>
  <match src="primitive_type [29424,29431]" dest="primitive_type [29290,29297]"/>
  <match src="member_expression [54484,54505]" dest="member_expression [54718,54739]"/>
  <match src="(: ( [23164,23165]" dest="(: ( [23030,23031]"/>
  <match src="parameter [30876,30883]" dest="parameter [30742,30749]"/>
  <match src="identifier: errorMessage [17991,18003]" dest="identifier: errorMessage [17925,17937]"/>
  <match src="identifier: set [9062,9065]" dest="identifier: set [9029,9032]"/>
  <match src="identifier: copy [32646,32650]" dest="identifier: copy [32512,32516]"/>
  <match src="let: let [34508,34511]" dest="let: let [34374,34377]"/>
  <match src=",: , [15987,15988]" dest=",: , [15921,15922]"/>
  <match src="identifier: contains [22903,22911]" dest="identifier: contains [22769,22777]"/>
  <match src=",: , [33378,33379]" dest=",: , [33244,33245]"/>
  <match src="}: } [27373,27374]" dest="}: } [27239,27240]"/>
  <match src="identifier: role [21936,21940]" dest="identifier: role [21802,21806]"/>
  <match src="binary_expression [33815,33840]" dest="binary_expression [33681,33706]"/>
  <match src="}: } [34785,34786]" dest="}: } [34651,34652]"/>
  <match src="identifier: item [30912,30916]" dest="identifier: item [30778,30782]"/>
  <match src="call_argument [49577,49588]" dest="call_argument [49661,49672]"/>
  <match src="yul_identifier [11869,11873]" dest="yul_identifier [11803,11807]"/>
  <match src="call_argument [54186,54199]" dest="call_argument [54420,54433]"/>
  <match src="(: ( [33565,33566]" dest="(: ( [33431,33432]"/>
  <match src="(: ( [44281,44282]" dest="(: ( [44079,44080]"/>
  <match src="identifier: item [31068,31072]" dest="identifier: item [30934,30938]"/>
  <match src="{: { [51326,51327]" dest="{: { [51482,51483]"/>
  <match src="yul_assignment [32079,32102]" dest="yul_assignment [31945,31968]"/>
  <match src="yul_evm_builtin [36331,36333]" dest="yul_evm_builtin [36197,36199]"/>
  <match src="contract: contract [45091,45099]" dest="contract: contract [44890,44898]"/>
  <match src="type_name [18086,18092]" dest="type_name [18020,18026]"/>
  <match src="{: { [47042,47043]" dest="{: { [47126,47127]"/>
  <match src="identifier: IERC721Receiver [307,322]" dest="identifier: IERC721Receiver [307,322]"/>
  <match src="pragma: pragma [104,110]" dest="pragma: pragma [104,110]"/>
  <match src="binary_expression [35404,35433]" dest="binary_expression [35270,35299]"/>
  <match src="binary_expression [35355,35376]" dest="binary_expression [35221,35242]"/>
  <match src="identifier: item [29139,29143]" dest="identifier: item [29005,29009]"/>
  <match src="uint256: uint256 [42480,42487]" dest="uint256: uint256 [42279,42286]"/>
  <match src=",: , [25215,25216]" dest=",: , [25081,25082]"/>
  <match src="identifier: set [7746,7749]" dest="identifier: set [7713,7716]"/>
  <match src="identifier: to [39249,39251]" dest="identifier: to [39047,39049]"/>
  <match src="identifier: listLength [29220,29230]" dest="identifier: listLength [29086,29096]"/>
  <match src="call_argument [29060,29072]" dest="call_argument [28926,28938]"/>
  <match src="identifier: errorMessage [15989,16001]" dest="identifier: errorMessage [15923,15935]"/>
  <match src="primitive_type [11570,11574]" dest="primitive_type [11504,11508]"/>
  <match src="call_argument [54112,54119]" dest="call_argument [54346,54353]"/>
  <match src="{: { [30885,30886]" dest="{: { [30751,30752]"/>
  <match src="bytes: bytes [32496,32501]" dest="bytes: bytes [32362,32367]"/>
  <match src="user_defined_type [10573,10580]" dest="user_defined_type [10540,10547]"/>
  <match src="uint256: uint256 [48876,48883]" dest="uint256: uint256 [48960,48967]"/>
  <match src="identifier: token [52407,52412]" dest="identifier: token [52563,52568]"/>
  <match src="identifier: logData [51883,51890]" dest="identifier: logData [52039,52046]"/>
  <match src=",: , [23863,23864]" dest=",: , [23729,23730]"/>
  <match src="{: { [9724,9725]" dest="{: { [9691,9692]"/>
  <match src="type_name [53941,53956]" dest="type_name [54175,54190]"/>
  <match src=",: , [45428,45429]" dest=",: , [45226,45227]"/>
  <match src="uint256: uint256 [46800,46807]" dest="uint256: uint256 [46598,46605]"/>
  <match src="member_expression [31210,31221]" dest="member_expression [31076,31087]"/>
  <match src="variable_declaration_statement [53647,53705]" dest="variable_declaration_statement [53881,53939]"/>
  <match src="memory: memory [16245,16251]" dest="memory: memory [16179,16185]"/>
  <match src=".: . [21418,21419]" dest=".: . [21284,21285]"/>
  <match src="identifier: item [31317,31321]" dest="identifier: item [31183,31187]"/>
  <match src="call_expression [14130,14190]" dest="call_expression [14064,14124]"/>
  <match src="{: { [8054,8055]" dest="{: { [8021,8022]"/>
  <match src=",: , [30987,30988]" dest=",: , [30853,30854]"/>
  <match src=".: . [30977,30978]" dest=".: . [30843,30844]"/>
  <match src="comment: /**      * @notice called by predicate contract to mint tokens while withdrawing with metadata from L2      * @dev Should be callable only by MintableERC721Predicate      * Make sure minting is only done either by this function/ 👆      * @param user user address for whom token is being minted      * @param tokenId tokenId being minted      * @param metaData Associated token metadata, to be decoded &amp; set using `setTokenMetadata`      *      * Note : If you're interested in taking token metadata from L2 to L1 during exit, you must      * implement this method      */ [42514,43095]" dest="comment: /**      * @notice called by predicate contract to mint tokens while withdrawing with metadata from L2      * @dev Should be callable only by MintableERC721Predicate      * Make sure minting is only done either by this function/ 👆      * @param user user address for whom token is being minted      * @param tokenId tokenId being minted      * @param metaData Associated token metadata, to be decoded &amp; set using `setTokenMetadata`      *      * Note : If you're interested in taking token metadata from L2 to L1 during exit, you must      * implement this method      */ [42313,42894]"/>
  <match src="}: } [29632,29633]" dest="}: } [29498,29499]"/>
  <match src="private: private [35698,35705]" dest="private: private [35564,35571]"/>
  <match src="function_definition [32833,33493]" dest="function_definition [32699,33359]"/>
  <match src=",: , [34315,34316]" dest=",: , [34181,34182]"/>
  <match src="return_type_definition [4995,5009]" dest="return_type_definition [4962,4976]"/>
  <match src="identifier: isList [29782,29788]" dest="identifier: isList [29648,29654]"/>
  <match src=".: . [31214,31215]" dest=".: . [31080,31081]"/>
  <match src="(: ( [13113,13114]" dest="(: ( [13047,13048]"/>
  <match src="event_definition [46649,46823]" dest="event_definition [46447,46621]"/>
  <match src="[: [ [51991,51992]" dest="[: [ [52147,52148]"/>
  <match src="identifier: mint [51196,51200]" dest="identifier: mint [51280,51284]"/>
  <match src="function: function [12867,12875]" dest="function: function [12801,12809]"/>
  <match src="identifier: amount [13155,13161]" dest="identifier: amount [13089,13095]"/>
  <match src="number_literal: 0 [50467,50468]" dest="number_literal: 0 [50551,50552]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [2541,2705]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [2508,2672]"/>
  <match src="type_name [9664,9671]" dest="type_name [9631,9638]"/>
  <match src="identifier: _roles [27254,27260]" dest="identifier: _roles [27120,27126]"/>
  <match src="identifier: _itemLength [33554,33565]" dest="identifier: _itemLength [33420,33431]"/>
  <match src="type_name [8237,8247]" dest="type_name [8204,8214]"/>
  <match src="parenthesized_expression [51983,51994]" dest="parenthesized_expression [52139,52150]"/>
  <match src="comment: // @returns raw rlp encoding in bytes [30120,30157]" dest="comment: // @returns raw rlp encoding in bytes [29986,30023]"/>
  <match src="function_definition [11510,11932]" dest="function_definition [11444,11866]"/>
  <match src="parameter [14450,14464]" dest="parameter [14384,14398]"/>
  <match src="=: = [29509,29510]" dest="=: = [29375,29376]"/>
  <match src="yul_identifier [36248,36256]" dest="yul_identifier [36114,36122]"/>
  <match src="return: return [31587,31593]" dest="return: return [31453,31459]"/>
  <match src="type_name [34957,34964]" dest="type_name [34823,34830]"/>
  <match src="primitive_type [3485,3492]" dest="primitive_type [3452,3459]"/>
  <match src="(: ( [29194,29195]" dest="(: ( [29060,29061]"/>
  <match src="identifier: success [13119,13126]" dest="identifier: success [13053,13060]"/>
  <match src="identifier: encodePacked [27638,27650]" dest="identifier: encodePacked [27503,27515]"/>
  <match src="return: return [8555,8561]" dest="return: return [8522,8528]"/>
  <match src="): ) [29964,29965]" dest="): ) [29830,29831]"/>
  <match src="memory: memory [51876,51882]" dest="memory: memory [52032,52038]"/>
  <match src="primitive_type [29212,29219]" dest="primitive_type [29078,29085]"/>
  <match src="): ) [9952,9953]" dest="): ) [9919,9920]"/>
  <match src="identifier: RLPItem [50283,50290]" dest="identifier: RLPItem [50367,50374]"/>
  <match src="-: - [35429,35430]" dest="-: - [35295,35296]"/>
  <match src="&gt;=: &gt;= [35182,35184]" dest="&gt;=: &gt;= [35048,35050]"/>
  <match src="parameter [9889,9908]" dest="parameter [9856,9875]"/>
  <match src="call_expression [33297,33317]" dest="call_expression [33163,33183]"/>
  <match src="yul_function_call [28779,28794]" dest="yul_function_call [28645,28660]"/>
  <match src="primitive_type [14450,14457]" dest="primitive_type [14384,14391]"/>
  <match src="parameter [15064,15077]" dest="parameter [14998,15011]"/>
  <match src="}: } [2532,2533]" dest="}: } [2499,2500]"/>
  <match src="): ) [37251,37252]" dest="): ) [37084,37085]"/>
  <match src="yul_identifier [36198,36201]" dest="yul_identifier [36064,36067]"/>
  <match src="add: add [34567,34570]" dest="add: add [34433,34436]"/>
  <match src="returns: returns [9709,9716]" dest="returns: returns [9676,9683]"/>
  <match src="comment: // construction, since the code is only stored at the end of the [11667,11731]" dest="comment: // construction, since the code is only stored at the end of the [11601,11665]"/>
  <match src="return_type_definition [3358,3372]" dest="return_type_definition [3325,3339]"/>
  <match src="): ) [18330,18331]" dest="): ) [18264,18265]"/>
  <match src="block_statement [33262,33461]" dest="block_statement [33128,33327]"/>
  <match src="identifier: rootToken [53981,53990]" dest="identifier: rootToken [54215,54224]"/>
  <match src="identifier: returndata [15977,15987]" dest="identifier: returndata [15911,15921]"/>
  <match src="mstore: mstore [35889,35895]" dest="mstore: mstore [35755,35761]"/>
  <match src="visibility [34915,34922]" dest="visibility [34781,34788]"/>
  <match src="call_argument [25088,25133]" dest="call_argument [24954,24999]"/>
  <match src="): ) [16712,16713]" dest="): ) [16646,16647]"/>
  <match src="identifier: _inner [9066,9072]" dest="identifier: _inner [9033,9039]"/>
  <match src="internal: internal [28977,28985]" dest="internal: internal [28843,28851]"/>
  <match src="member_expression [9982,9992]" dest="member_expression [9949,9959]"/>
  <match src="(: ( [17330,17331]" dest="(: ( [17264,17265]"/>
  <match src="=: = [33202,33203]" dest="=: = [33068,33069]"/>
  <match src="let: let [18543,18546]" dest="let: let [18477,18480]"/>
  <match src="uint8: uint8 [28224,28229]" dest="uint8: uint8 [28090,28095]"/>
  <match src="call_argument [31934,31973]" dest="call_argument [31800,31839]"/>
  <match src="identifier: require [28650,28657]" dest="identifier: require [28516,28523]"/>
  <match src="): ) [48281,48282]" dest="): ) [48365,48366]"/>
  <match src="member_expression [8570,8580]" dest="member_expression [8537,8547]"/>
  <match src="call_argument [49084,49093]" dest="call_argument [49168,49177]"/>
  <match src="(: ( [36197,36198]" dest="(: ( [36063,36064]"/>
  <match src="identifier: _indexes [2517,2525]" dest="identifier: _indexes [2484,2492]"/>
  <match src="function_body [19615,19783]" dest="function_body [19516,19684]"/>
  <match src="call_expression [27748,27833]" dest="call_expression [27613,27698]"/>
  <match src="identifier: RLPReader [50198,50207]" dest="identifier: RLPReader [50282,50291]"/>
  <match src="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [10923,11504]" dest="comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      */ [10857,11438]"/>
  <match src="): ) [18003,18004]" dest="): ) [17937,17938]"/>
  <match src="solidity_version:  0.6.6 [28141,28147]" dest="solidity_version:  0.6.12 [28006,28013]"/>
  <match src="variable_declaration_statement [33187,33227]" dest="variable_declaration_statement [33053,33093]"/>
  <match src="&quot;: &quot; [15752,15753]" dest="&quot;: &quot; [15686,15687]"/>
  <match src="string_literal [31934,31973]" dest="string_literal [31800,31839]"/>
  <match src="comment: // @return number of bytes until the data [34828,34869]" dest="comment: // @return number of bytes until the data [34694,34735]"/>
  <match src="call_argument [12965,12969]" dest="call_argument [12899,12903]"/>
  <match src="=: = [29887,29888]" dest="=: = [29753,29754]"/>
  <match src="): ) [50180,50181]" dest="): ) [50264,50265]"/>
  <match src="function: function [30816,30824]" dest="function: function [30682,30690]"/>
  <match src="): ) [15109,15110]" dest="): ) [15043,15044]"/>
  <match src="bytes32: bytes32 [8092,8099]" dest="bytes32: bytes32 [8059,8066]"/>
  <match src="}: } [10016,10017]" dest="}: } [9983,9984]"/>
  <match src="constant: constant [45928,45936]" dest="constant: constant [45726,45734]"/>
  <match src="): ) [26830,26831]" dest="): ) [26696,26697]"/>
  <match src="identifier: RLPReader [45526,45535]" dest="identifier: RLPReader [45324,45333]"/>
  <match src="call_expression [25838,25850]" dest="call_expression [25704,25716]"/>
  <match src="call_argument [48514,48521]" dest="call_argument [48598,48605]"/>
  <match src="function: function [10561,10569]" dest="function: function [10528,10536]"/>
  <match src="identifier: inited [45192,45198]" dest="identifier: inited [44991,44997]"/>
  <match src="): ) [9698,9699]" dest="): ) [9665,9666]"/>
  <match src="number_literal: 1 [35375,35376]" dest="number_literal: 1 [35241,35242]"/>
  <match src="&gt;=: &gt;= [35814,35816]" dest="&gt;=: &gt;= [35680,35682]"/>
  <match src="call_expression [2834,2857]" dest="call_expression [2801,2824]"/>
  <match src=",: , [27797,27798]" dest=",: , [27662,27663]"/>
  <match src="): ) [50575,50576]" dest="): ) [50659,50660]"/>
  <match src="if_statement [27250,27364]" dest="if_statement [27116,27230]"/>
  <match src="new_expression [32518,32527]" dest="new_expression [32384,32393]"/>
  <match src="comment: /**      * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.      */ [37885,38004]" dest="comment: /**      * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.      */ [37683,37802]"/>
  <match src="&quot;: &quot; [30952,30953]" dest="&quot;: &quot; [30818,30819]"/>
  <match src="memory: memory [17641,17647]" dest="memory: memory [17575,17581]"/>
  <match src=".: . [4737,4738]" dest=".: . [4704,4705]"/>
  <match src="mload: mload [31382,31387]" dest="mload: mload [31248,31253]"/>
  <match src="identifier: byte0 [33865,33870]" dest="identifier: byte0 [33731,33736]"/>
  <match src="add: add [18612,18615]" dest="add: add [18546,18549]"/>
  <match src="function_definition [17589,18012]" dest="function_definition [17523,17946]"/>
  <match src="): ) [9014,9015]" dest="): ) [8981,8982]"/>
  <match src="): ) [43471,43472]" dest="): ) [43270,43271]"/>
  <match src="identifier: result [29652,29658]" dest="identifier: result [29518,29524]"/>
  <match src="identifier: account [26628,26635]" dest="identifier: account [26494,26501]"/>
  <match src="parenthesized_expression [35412,35433]" dest="parenthesized_expression [35278,35299]"/>
  <match src="assembly: assembly [33956,33964]" dest="assembly: assembly [33822,33830]"/>
  <match src="interface: interface [42084,42093]" dest="interface: interface [41883,41892]"/>
  <match src="yul_identifier [34571,34577]" dest="yul_identifier [34437,34443]"/>
  <match src="call_expression [6455,6481]" dest="call_expression [6422,6448]"/>
  <match src="call_expression [33353,33427]" dest="call_expression [33219,33293]"/>
  <match src="for: for [45504,45507]" dest="for: for [45302,45305]"/>
  <match src="parameter [35679,35690]" dest="parameter [35545,35556]"/>
  <match src="): ) [6411,6412]" dest="): ) [6378,6379]"/>
  <match src="identifier: _contains [6679,6688]" dest="identifier: _contains [6646,6655]"/>
  <match src="comment: // underlying Set. [2150,2168]" dest="comment: // underlying Set. [2117,2135]"/>
  <match src="{: { [29486,29487]" dest="{: { [29352,29353]"/>
  <match src="call_argument [51974,51981]" dest="call_argument [52130,52137]"/>
  <match src="call_expression [27770,27797]" dest="call_expression [27635,27662]"/>
  <match src="state_mutability [7322,7326]" dest="state_mutability [7289,7293]"/>
  <match src="address: address [51729,51736]" dest="address: address [51885,51892]"/>
  <match src="yul_variable_declaration [33984,34015]" dest="yul_variable_declaration [33850,33881]"/>
  <match src="parameter [43146,43169]" dest="parameter [42945,42968]"/>
  <match src="primitive_type [46873,46880]" dest="primitive_type [46671,46678]"/>
  <match src="external: external [40614,40622]" dest="external: external [40412,40420]"/>
  <match src="primitive_type [9007,9014]" dest="primitive_type [8974,8981]"/>
  <match src="function_definition [26983,27171]" dest="function_definition [26849,27037]"/>
  <match src="(: ( [27349,27350]" dest="(: ( [27215,27216]"/>
  <match src="primitive_type [48035,48042]" dest="primitive_type [48119,48126]"/>
  <match src="solidity_version_comparison_operator [36490,36493]" dest="solidity_version_comparison_operator [36323,36326]"/>
  <match src="returns: returns [17691,17698]" dest="returns: returns [17625,17632]"/>
  <match src="=: = [28302,28303]" dest="=: = [28168,28169]"/>
  <match src="identifier: len [32458,32461]" dest="identifier: len [32324,32327]"/>
  <match src="}: } [52810,52811]" dest="}: } [52966,52967]"/>
  <match src="call_argument [50646,50696]" dest="call_argument [50730,50780]"/>
  <match src="call_expression [10667,10689]" dest="call_expression [10634,10656]"/>
  <match src="expression_statement [32646,32687]" dest="expression_statement [32512,32553]"/>
  <match src="comment: /**      * @dev Returns true if this contract implements the interface defined by      * `interfaceId`. See the corresponding      * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]      * to learn more about how these ids are created.      *      * This function call must use less than 30 000 gas.      */ [36824,37171]" dest="comment: /**      * @dev Returns true if this contract implements the interface defined by      * `interfaceId`. See the corresponding      * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]      * to learn more about how these ids are created.      *      * This function call must use less than 30 000 gas.      */ [36657,37004]"/>
  <match src="(: ( [36263,36264]" dest="(: ( [36129,36130]"/>
  <match src=".: . [31072,31073]" dest=".: . [30938,30939]"/>
  <match src="expression_statement [2995,3036]" dest="expression_statement [2962,3003]"/>
  <match src="returns: returns [47491,47498]" dest="returns: returns [47575,47582]"/>
  <match src="type_name [15546,15553]" dest="type_name [15480,15487]"/>
  <match src="public: public [46094,46100]" dest="public: public [45892,45898]"/>
  <match src="yul_path [18620,18630]" dest="yul_path [18554,18564]"/>
  <match src="): ) [34332,34333]" dest="): ) [34198,34199]"/>
  <match src="identifier: rootToken [44949,44958]" dest="identifier: rootToken [44747,44756]"/>
  <match src=".: . [12970,12971]" dest=".: . [12904,12905]"/>
  <match src="primitive_type [48343,48350]" dest="primitive_type [48427,48434]"/>
  <match src="): ) [2817,2818]" dest="): ) [2784,2785]"/>
  <match src="parameter [50050,50057]" dest="parameter [50134,50141]"/>
  <match src="identifier: MANAGER_ROLE [50168,50180]" dest="identifier: MANAGER_ROLE [50252,50264]"/>
  <match src="virtual: virtual [19472,19479]" dest="virtual: virtual [19373,19380]"/>
  <match src="identifier: value [9693,9698]" dest="identifier: value [9660,9665]"/>
  <match src="binary_expression [34419,34443]" dest="binary_expression [34285,34309]"/>
  <match src="yul_identifier [36277,36281]" dest="yul_identifier [36143,36147]"/>
  <match src="function: function [27542,27550]" dest="function: function [27407,27415]"/>
  <match src="parameter [8535,8542]" dest="parameter [8502,8509]"/>
  <match src="returns: returns [10154,10161]" dest="returns: returns [10121,10128]"/>
  <match src="function: function [38412,38420]" dest="function: function [38210,38218]"/>
  <match src="): ) [34661,34662]" dest="): ) [34527,34528]"/>
  <match src="binary_expression [31317,31337]" dest="binary_expression [31183,31203]"/>
  <match src="expression_statement [52760,52792]" dest="expression_statement [52916,52948]"/>
  <match src="call_argument [28845,28851]" dest="call_argument [28711,28717]"/>
  <match src="comment: /// @notice Abstract interface that defines methods for custom predicates [43668,43741]" dest="comment: /// @notice Abstract interface that defines methods for custom predicates [43466,43539]"/>
  <match src="pragma: pragma [45065,45071]" dest="pragma: pragma [44863,44869]"/>
  <match src="comment: /*      * @param src Pointer to source      * @param dest Pointer to destination      * @param len Amount of memory to copy from the source      */ [35453,35604]" dest="comment: /*      * @param src Pointer to source      * @param dest Pointer to destination      * @param len Amount of memory to copy from the source      */ [35319,35470]"/>
  <match src="(: ( [31209,31210]" dest="(: ( [31075,31076]"/>
  <match src="yul_identifier [33698,33703]" dest="yul_identifier [33564,33569]"/>
  <match src="{: { [21394,21395]" dest="{: { [21260,21261]"/>
  <match src="function: function [6575,6583]" dest="function: function [6542,6550]"/>
  <match src="identifier: require [25819,25826]" dest="identifier: require [25685,25692]"/>
  <match src="member_expression [7367,7377]" dest="member_expression [7334,7344]"/>
  <match src="uint256: uint256 [33117,33124]" dest="uint256: uint256 [32983,32990]"/>
  <match src="primitive_type [48069,48076]" dest="primitive_type [48153,48160]"/>
  <match src="function_body [14545,14623]" dest="function_body [14479,14557]"/>
  <match src="&quot;: &quot; [24710,24711]" dest="&quot;: &quot; [24576,24577]"/>
  <match src="identifier: _verifyCallResult [15950,15967]" dest="identifier: _verifyCallResult [15884,15901]"/>
  <match src="external: external [41272,41280]" dest="external: external [41070,41078]"/>
  <match src="yul_evm_builtin [36188,36191]" dest="yul_evm_builtin [36054,36057]"/>
  <match src="identifier: selector [47564,47572]" dest="identifier: selector [47648,47656]"/>
  <match src="private: private [2757,2764]" dest="private: private [2724,2731]"/>
  <match src="variable_declaration [31233,31244]" dest="variable_declaration [31099,31110]"/>
  <match src=".: . [50331,50332]" dest=".: . [50415,50416]"/>
  <match src="primitive_type [53813,53820]" dest="primitive_type [54047,54054]"/>
  <match src="bytes4: bytes4 [943,949]" dest="bytes4: bytes4 [943,949]"/>
  <match src="type_name [41014,41021]" dest="type_name [40812,40819]"/>
  <match src="user_defined_type [21274,21281]" dest="user_defined_type [21140,21147]"/>
  <match src="uint256: uint256 [5629,5636]" dest="uint256: uint256 [5596,5603]"/>
  <match src="identifier: _inner [7750,7756]" dest="identifier: _inner [7717,7723]"/>
  <match src="&quot;: &quot; [15172,15173]" dest="&quot;: &quot; [15106,15107]"/>
  <match src="primitive_type [25762,25769]" dest="primitive_type [25628,25635]"/>
  <match src="view: view [6641,6645]" dest="view: view [6608,6612]"/>
  <match src=",: , [37850,37851]" dest=",: , [37648,37649]"/>
  <match src="comment: // in this predicate contract [48982,49011]" dest="comment: // in this predicate contract [49066,49095]"/>
  <match src="yul_variable_declaration [34601,34662]" dest="yul_variable_declaration [34467,34528]"/>
  <match src="type_cast_expression [8108,8122]" dest="type_cast_expression [8075,8089]"/>
  <match src="user_defined_type [21405,21429]" dest="user_defined_type [21271,21295]"/>
  <match src="}: } [16009,16010]" dest="}: } [15943,15944]"/>
  <match src="user_defined_type [8945,8955]" dest="user_defined_type [8912,8922]"/>
  <match src="identifier: require [29268,29275]" dest="identifier: require [29134,29141]"/>
  <match src="else: else [52842,52846]" dest="else: else [53076,53080]"/>
  <match src="&gt;=:  &gt;= [18873,18876]" dest="&gt;=:  &gt;= [19769,19772]"/>
  <match src="call_argument [8345,8377]" dest="call_argument [8312,8344]"/>
  <match src="uint256: uint256 [35679,35686]" dest="uint256: uint256 [35545,35552]"/>
  <match src="): ) [54576,54577]" dest="): ) [54810,54811]"/>
  <match src="function: function [11510,11518]" dest="function: function [11444,11452]"/>
  <match src="assembly: assembly [11858,11866]" dest="assembly: assembly [11792,11800]"/>
  <match src="type_name [26552,26559]" dest="type_name [26418,26425]"/>
  <match src="number_literal: 1 [50329,50330]" dest="number_literal: 1 [50413,50414]"/>
  <match src=",: , [25774,25775]" dest=",: , [25640,25641]"/>
  <match src="): ) [34660,34661]" dest="): ) [34526,34527]"/>
  <match src="type_name [14047,14054]" dest="type_name [13981,13988]"/>
  <match src="type_name [27214,27221]" dest="type_name [27080,27087]"/>
  <match src="identifier: IERC721Receiver [45465,45480]" dest="identifier: IERC721Receiver [45263,45278]"/>
  <match src="): ) [50796,50797]" dest="): ) [50880,50881]"/>
  <match src="identifier: RLPReader [50273,50282]" dest="identifier: RLPReader [50357,50366]"/>
  <match src="primitive_type [28445,28452]" dest="primitive_type [28311,28318]"/>
  <match src="}: } [45263,45264]" dest="}: } [45062,45063]"/>
  <match src="type_name [2742,2749]" dest="type_name [2709,2716]"/>
  <match src="member_expression [32273,32284]" dest="member_expression [32139,32150]"/>
  <match src="number_literal: 1 [3998,3999]" dest="number_literal: 1 [3965,3966]"/>
  <match src="parameter [30522,30541]" dest="parameter [30388,30407]"/>
  <match src="user_defined_type [5163,5166]" dest="user_defined_type [5130,5133]"/>
  <match src="address: address [50050,50057]" dest="address: address [50134,50141]"/>
  <match src="identifier: set [6899,6902]" dest="identifier: set [6866,6869]"/>
  <match src="user_defined_type [6817,6827]" dest="user_defined_type [6784,6794]"/>
  <match src="let: let [36244,36247]" dest="let: let [36110,36113]"/>
  <match src="call_argument [17733,17751]" dest="call_argument [17667,17685]"/>
  <match src="type_name [21920,21927]" dest="type_name [21786,21793]"/>
  <match src="parameter [22806,22818]" dest="parameter [22672,22684]"/>
  <match src="=: = [45247,45248]" dest="=: = [45046,45047]"/>
  <match src="else: else [18218,18222]" dest="else: else [18152,18156]"/>
  <match src="identifier: _inner [7371,7377]" dest="identifier: _inner [7338,7344]"/>
  <match src="interface: interface [37464,37473]" dest="interface: interface [37262,37271]"/>
  <match src="event_paramater [46873,46898]" dest="event_paramater [46671,46696]"/>
  <match src="(: ( [6898,6899]" dest="(: ( [6865,6866]"/>
  <match src="): ) [2755,2756]" dest="): ) [2722,2723]"/>
  <match src="unary_expression [2795,2817]" dest="unary_expression [2762,2784]"/>
  <match src="identifier: rootToken [48077,48086]" dest="identifier: rootToken [48161,48170]"/>
  <match src="primitive_type [16649,16655]" dest="primitive_type [16583,16589]"/>
  <match src="}: } [25948,25949]" dest="}: } [25814,25815]"/>
  <match src="call_argument [29574,29580]" dest="call_argument [29440,29446]"/>
  <match src="pure: pure [30552,30556]" dest="pure: pure [30418,30422]"/>
  <match src="identifier: toDeleteIndex [3912,3925]" dest="identifier: toDeleteIndex [3879,3892]"/>
  <match src="type_name [15511,15518]" dest="type_name [15445,15452]"/>
  <match src="member_expression [4734,4746]" dest="member_expression [4701,4713]"/>
  <match src="function: function [41213,41221]" dest="function: function [41011,41019]"/>
  <match src="call_argument [26622,26626]" dest="call_argument [26488,26492]"/>
  <match src="identifier: account [25827,25834]" dest="identifier: account [25693,25700]"/>
  <match src="string [54849,54893]" dest="string [55155,55199]"/>
  <match src="): ) [30646,30647]" dest="): ) [30512,30513]"/>
  <match src="identifier: depositor [49551,49560]" dest="identifier: depositor [49635,49644]"/>
  <match src="pragma: pragma [28126,28132]" dest="pragma: pragma [27991,27997]"/>
  <match src="(: ( [51200,51201]" dest="(: ( [51284,51285]"/>
  <match src="yul_assignment [28769,28794]" dest="yul_assignment [28635,28660]"/>
  <match src="=: = [31245,31246]" dest="=: = [31111,31112]"/>
  <match src="binary_expression [52142,52152]" dest="binary_expression [52298,52308]"/>
  <match src="): ) [19504,19505]" dest="): ) [19405,19406]"/>
  <match src="uint256: uint256 [50881,50888]" dest="uint256: uint256 [50965,50972]"/>
  <match src="visibility [46425,46431]" dest="visibility [46223,46229]"/>
  <match src="function_definition [32154,32718]" dest="function_definition [32020,32584]"/>
  <match src="expression_statement [47174,47213]" dest="expression_statement [47258,47297]"/>
  <match src="call_expression [27057,27090]" dest="call_expression [26923,26956]"/>
  <match src=",: , [43144,43145]" dest=",: , [42943,42944]"/>
  <match src="parameter [37204,37222]" dest="parameter [37037,37055]"/>
  <match src="type_name [45913,45920]" dest="type_name [45711,45718]"/>
  <match src="identifier: byte0 [35205,35210]" dest="identifier: byte0 [35071,35076]"/>
  <match src="parameter [6655,6659]" dest="parameter [6622,6626]"/>
  <match src="identifier: from [881,885]" dest="identifier: from [881,885]"/>
  <match src=".: . [32418,32419]" dest=".: . [32284,32285]"/>
  <match src="identifier: item [31918,31922]" dest="identifier: item [31784,31788]"/>
  <match src="call_argument [15172,15215]" dest="call_argument [15106,15149]"/>
  <match src="state_variable_declaration [28359,28389]" dest="state_variable_declaration [28225,28255]"/>
  <match src="primitive_type [5629,5636]" dest="primitive_type [5596,5603]"/>
  <match src="augmented_assignment_expression [35944,35960]" dest="augmented_assignment_expression [35810,35826]"/>
  <match src="assembly: assembly [32055,32063]" dest="assembly: assembly [31921,31929]"/>
  <match src="comment: /**      * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.      */ [37686,37782]" dest="comment: /**      * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.      */ [37484,37580]"/>
  <match src="call_argument [29401,29412]" dest="call_argument [29267,29278]"/>
  <match src="(: ( [7335,7336]" dest="(: ( [7302,7303]"/>
  <match src="type_name [17278,17283]" dest="type_name [17212,17217]"/>
  <match src="call_expression [26611,26636]" dest="call_expression [26477,26502]"/>
  <match src="identifier: require [49256,49263]" dest="identifier: require [49340,49347]"/>
  <match src="): ) [17750,17751]" dest="): ) [17684,17685]"/>
  <match src="{: { [18223,18224]" dest="{: { [18157,18158]"/>
  <match src="}: } [6488,6489]" dest="}: } [6455,6456]"/>
  <match src="identifier: safeTransferFrom [41904,41920]" dest="identifier: safeTransferFrom [41702,41718]"/>
  <match src="primitive_type [21534,21541]" dest="primitive_type [21400,21407]"/>
  <match src="}: } [6181,6182]" dest="}: } [6148,6149]"/>
  <match src="binary_expression [3928,3942]" dest="binary_expression [3895,3909]"/>
  <match src="string [15752,15783]" dest="string [15686,15717]"/>
  <match src="visibility [42497,42505]" dest="visibility [42296,42304]"/>
  <match src=",: , [17633,17634]" dest=",: , [17567,17568]"/>
  <match src="identifier: item [30602,30606]" dest="identifier: item [30468,30472]"/>
  <match src="member_expression [15899,15910]" dest="member_expression [15833,15844]"/>
  <match src="identifier: value [9383,9388]" dest="identifier: value [9350,9355]"/>
  <match src="expression_statement [12949,13023]" dest="expression_statement [12883,12957]"/>
  <match src="bytes: bytes [17278,17283]" dest="bytes: bytes [17212,17217]"/>
  <match src="identifier: withdrawer [51090,51100]" dest="identifier: withdrawer [51174,51184]"/>
  <match src="function_definition [24155,24269]" dest="function_definition [24021,24135]"/>
  <match src="string [45200,45216]" dest="string [44999,45015]"/>
  <match src="user_defined_type [31670,31677]" dest="user_defined_type [31536,31543]"/>
  <match src=".: . [33168,33169]" dest=".: . [33034,33035]"/>
  <match src="user_defined_type [4950,4953]" dest="user_defined_type [4917,4920]"/>
  <match src="type_name [30522,30529]" dest="type_name [30388,30395]"/>
  <match src="return_type_definition [934,950]" dest="return_type_definition [934,950]"/>
  <match src="visibility [31691,31699]" dest="visibility [31557,31565]"/>
  <match src="(: ( [33711,33712]" dest="(: ( [33577,33578]"/>
  <match src="new: new [32518,32521]" dest="new: new [32384,32387]"/>
  <match src="identifier: set [6612,6615]" dest="identifier: set [6579,6582]"/>
  <match src="identifier: require [45183,45190]" dest="identifier: require [44982,44989]"/>
  <match src="type_cast_expression [52456,52469]" dest="type_cast_expression [52612,52625]"/>
  <match src="internal: internal [19570,19578]" dest="internal: internal [19471,19479]"/>
  <match src="): ) [27735,27736]" dest="): ) [27600,27601]"/>
  <match src="identifier: onERC721Received [838,854]" dest="identifier: onERC721Received [838,854]"/>
  <match src="uint256: uint256 [12913,12920]" dest="uint256: uint256 [12847,12854]"/>
  <match src="function_definition [34875,35445]" dest="function_definition [34741,35311]"/>
  <match src="block_statement [18223,18755]" dest="block_statement [18157,18689]"/>
  <match src="event: event [46831,46836]" dest="event: event [46629,46634]"/>
  <match src="struct_member [5861,5872]" dest="struct_member [5828,5839]"/>
  <match src="identifier: memPtr [32020,32026]" dest="identifier: memPtr [31886,31892]"/>
  <match src="user_defined_type [8488,8498]" dest="user_defined_type [8455,8465]"/>
  <match src="binary_expression [33244,33260]" dest="binary_expression [33110,33126]"/>
  <match src="): ) [51148,51149]" dest="): ) [51232,51233]"/>
  <match src="{: { [30273,30274]" dest="{: { [30139,30140]"/>
  <match src="primitive_type [40379,40386]" dest="primitive_type [40177,40184]"/>
  <match src="binary_expression [33756,33782]" dest="binary_expression [33622,33648]"/>
  <match src=".: . [8083,8084]" dest=".: . [8050,8051]"/>
  <match src="visibility [39270,39278]" dest="visibility [39068,39076]"/>
  <match src="call_expression [4639,4656]" dest="call_expression [4606,4623]"/>
  <match src="struct_declaration [5832,5879]" dest="struct_declaration [5799,5846]"/>
  <match src="identifier: contractId [27582,27592]" dest="identifier: contractId [27447,27457]"/>
  <match src="identifier: ITokenPredicate [43753,43768]" dest="identifier: ITokenPredicate [43551,43566]"/>
  <match src="{: { [26849,26850]" dest="{: { [26715,26716]"/>
  <match src="): ) [12969,12970]" dest="): ) [12903,12904]"/>
  <match src="call_argument [51090,51100]" dest="call_argument [51174,51184]"/>
  <match src=".: . [45549,45550]" dest=".: . [45347,45348]"/>
  <match src="identifier: role [27208,27212]" dest="identifier: role [27074,27078]"/>
  <match src="): ) [28708,28709]" dest="): ) [28574,28575]"/>
  <match src="parameter [23130,23142]" dest="parameter [22996,23008]"/>
  <match src="return_type_definition [43487,43501]" dest="return_type_definition [43286,43300]"/>
  <match src="identifier: memPtr [32034,32040]" dest="identifier: memPtr [31900,31906]"/>
  <match src="): ) [949,950]" dest="): ) [949,950]"/>
  <match src="variable_declaration [52059,52080]" dest="variable_declaration [52215,52236]"/>
  <match src="comment: // looking like `WithdrawnBatch(address indexed user, uint256[] tokenIds);` [51495,51570]" dest="comment: // looking like `WithdrawnBatch(address indexed user, uint256[] tokenIds);` [51651,51726]"/>
  <match src="yul_function_call [34224,34240]" dest="yul_function_call [34090,34106]"/>
  <match src="add: add [34744,34747]" dest="add: add [34610,34613]"/>
  <match src="primitive_type [49562,49569]" dest="primitive_type [49646,49653]"/>
  <match src="identifier: data [14151,14155]" dest="identifier: data [14085,14089]"/>
  <match src="indexed: indexed [21985,21992]" dest="indexed: indexed [21851,21858]"/>
  <match src="identifier: sender [22689,22695]" dest="identifier: sender [22555,22561]"/>
  <match src="array_access [51758,51776]" dest="array_access [51914,51932]"/>
  <match src="for: for [45536,45539]" dest="for: for [45334,45337]"/>
  <match src="{: { [15621,15622]" dest="{: { [15555,15556]"/>
  <match src="=: = [45637,45638]" dest="=: = [45435,45436]"/>
  <match src="yul_identifier [34185,34192]" dest="yul_identifier [34051,34058]"/>
  <match src="number_literal: 2 [54495,54496]" dest="number_literal: 2 [54729,54730]"/>
  <match src="address: address [46686,46693]" dest="address: address [46484,46491]"/>
  <match src="identifier: item [29889,29893]" dest="identifier: item [29755,29759]"/>
  <match src="=: = [28384,28385]" dest="=: = [28250,28251]"/>
  <match src="identifier: toDeleteIndex [4393,4406]" dest="identifier: toDeleteIndex [4360,4373]"/>
  <match src="call_argument [27812,27822]" dest="call_argument [27677,27687]"/>
  <match src="state_mutability [35706,35710]" dest="state_mutability [35572,35576]"/>
  <match src="(: ( [6430,6431]" dest="(: ( [6397,6398]"/>
  <match src="yul_function_call [34744,34759]" dest="yul_function_call [34610,34625]"/>
  <match src="call_argument [27651,27661]" dest="call_argument [27516,27526]"/>
  <match src="interface_declaration [37464,41997]" dest="interface_declaration [37262,41795]"/>
  <match src="address: address [48007,48014]" dest="address: address [48091,48098]"/>
  <match src="call_expression [49256,49334]" dest="call_expression [49340,49418]"/>
  <match src="uint256: uint256 [10163,10170]" dest="uint256: uint256 [10130,10137]"/>
  <match src=",: , [2740,2741]" dest=",: , [2707,2708]"/>
  <match src="for: for [21309,21312]" dest="for: for [21175,21178]"/>
  <match src="address: address [40379,40386]" dest="address: address [40177,40184]"/>
  <match src="function_definition [10103,10217]" dest="function_definition [10070,10184]"/>
  <match src="yul_function_call [29952,29965]" dest="yul_function_call [29818,29831]"/>
  <match src="variable_declaration_statement [50814,50865]" dest="variable_declaration_statement [50898,50949]"/>
  <match src="for_statement [52126,52828]" dest="for_statement [52282,52984]"/>
  <match src="comment: // If you've called `withdrawWithMetadata`, you should submit [53475,53536]" dest="comment: // If you've called `withdrawWithMetadata`, you should submit [53709,53770]"/>
  <match src="identifier: i [29481,29482]" dest="identifier: i [29347,29348]"/>
  <match src="=: = [32397,32398]" dest="=: = [32263,32264]"/>
  <match src="expression_statement [17725,17795]" dest="expression_statement [17659,17729]"/>
  <match src="return: return [10652,10658]" dest="return: return [10619,10625]"/>
  <match src="identifier: _setupContractId [47120,47136]" dest="identifier: _setupContractId [47204,47220]"/>
  <match src="pragma: pragma [37356,37362]" dest="pragma: pragma [37156,37162]"/>
  <match src="visibility [9390,9398]" dest="visibility [9357,9365]"/>
  <match src="storage: storage [10127,10134]" dest="storage: storage [10094,10101]"/>
  <match src="inheritance_specifier [42113,42120]" dest="inheritance_specifier [41912,41919]"/>
  <match src="visibility [23144,23150]" dest="visibility [23010,23016]"/>
  <match src="state_mutability [32880,32884]" dest="state_mutability [32746,32750]"/>
  <match src="visibility [29810,29818]" dest="visibility [29676,29684]"/>
  <match src=",: , [46976,46977]" dest=",: , [46774,46775]"/>
  <match src="bytes: bytes [17635,17640]" dest="bytes: bytes [17569,17574]"/>
  <match src="type_name [38054,38061]" dest="type_name [37852,37859]"/>
  <match src="}: } [54684,54685]" dest="}: } [54990,54991]"/>
  <match src="(: ( [10001,10002]" dest="(: ( [9968,9969]"/>
  <match src="(: ( [25087,25088]" dest="(: ( [24953,24954]"/>
  <match src="return_statement [30772,30801]" dest="return_statement [30638,30667]"/>
  <match src="bytes: bytes [18061,18066]" dest="bytes: bytes [17995,18000]"/>
  <match src="[: [ [2340,2341]" dest="[: [ [2307,2308]"/>
  <match src="call_expression [51893,51916]" dest="call_expression [52049,52072]"/>
  <match src="yul_function_call [33999,34015]" dest="yul_function_call [33865,33881]"/>
  <match src="identifier: logTopicRLPList [54026,54041]" dest="identifier: logTopicRLPList [54260,54275]"/>
  <match src="call_argument [5694,5720]" dest="call_argument [5661,5687]"/>
  <match src="primitive_type [16866,16870]" dest="primitive_type [16800,16804]"/>
  <match src="array_access [23928,23940]" dest="array_access [23794,23806]"/>
  <match src="address: address [48035,48042]" dest="address: address [48119,48126]"/>
  <match src="returns: returns [29009,29016]" dest="returns: returns [28875,28882]"/>
  <match src="call_argument [52496,52506]" dest="call_argument [52652,52662]"/>
  <match src="solidity_version_comparison_operator [127,129]" dest="solidity_version_comparison_operator [127,129]"/>
  <match src="pragma_directive [36475,36506]" dest="pragma_directive [36308,36339]"/>
  <match src="parameter [9354,9373]" dest="parameter [9321,9340]"/>
  <match src="}: } [10697,10698]" dest="}: } [10664,10665]"/>
  <match src="function_body [23910,23966]" dest="function_body [23776,23832]"/>
  <match src="and: and [36260,36263]" dest="and: and [36126,36129]"/>
  <match src="(: ( [33603,33604]" dest="(: ( [33469,33470]"/>
  <match src="yul_identifier [35028,35034]" dest="yul_identifier [34894,34900]"/>
  <match src="bool: bool [9948,9952]" dest="bool: bool [9915,9919]"/>
  <match src="identifier: setApprovalForAll [40996,41013]" dest="identifier: setApprovalForAll [40794,40811]"/>
  <match src="identifier: returndata [16975,16985]" dest="identifier: returndata [16909,16919]"/>
  <match src="[: [ [24629,24630]" dest="[: [ [24495,24496]"/>
  <match src="type_name [21481,21510]" dest="type_name [21347,21376]"/>
  <match src="uint256: uint256 [9685,9692]" dest="uint256: uint256 [9652,9659]"/>
  <match src="return_statement [35091,35100]" dest="return_statement [34957,34966]"/>
  <match src="identifier: ptr [30346,30349]" dest="identifier: ptr [30212,30215]"/>
  <match src="}: } [7798,7799]" dest="}: } [7765,7766]"/>
  <match src=",: , [36342,36343]" dest=",: , [36208,36209]"/>
  <match src="}: } [3117,3118]" dest="}: } [3084,3085]"/>
  <match src="assembly_statement [28745,28805]" dest="assembly_statement [28611,28671]"/>
  <match src="virtual: virtual [19584,19591]" dest="virtual: virtual [19485,19492]"/>
  <match src="type_name [35634,35641]" dest="type_name [35500,35507]"/>
  <match src="identifier: _add [6151,6155]" dest="identifier: _add [6118,6122]"/>
  <match src="boolean_literal [3057,3061]" dest="boolean_literal [3024,3028]"/>
  <match src="state_mutability [22844,22848]" dest="state_mutability [22710,22714]"/>
  <match src="state_mutability [10618,10622]" dest="state_mutability [10585,10589]"/>
  <match src="comment: // the array, and then remove the last element (sometimes called as 'swap and pop'). [3732,3816]" dest="comment: // the array, and then remove the last element (sometimes called as 'swap and pop'). [3699,3783]"/>
  <match src="parameter [7660,7682]" dest="parameter [7627,7649]"/>
  <match src="): ) [7789,7790]" dest="): ) [7756,7757]"/>
  <match src="comment: // keccak256(&quot;MANAGER_ROLE&quot;) [45566,45594]" dest="comment: // keccak256(&quot;MANAGER_ROLE&quot;) [45364,45392]"/>
  <match src="parameter [15527,15544]" dest="parameter [15461,15478]"/>
  <match src="&quot;: &quot; [47137,47138]" dest="&quot;: &quot; [47221,47222]"/>
  <match src="}: } [30494,30495]" dest="}: } [30360,30361]"/>
  <match src="call_argument [16966,16973]" dest="call_argument [16900,16907]"/>
  <match src=",: , [29950,29951]" dest=",: , [29816,29817]"/>
  <match src="binary_expression [35726,35734]" dest="binary_expression [35592,35600]"/>
  <match src="parameter [11570,11574]" dest="parameter [11504,11508]"/>
  <match src="identifier: toUint [52878,52884]" dest="identifier: toUint [53112,53118]"/>
  <match src="type_name [34937,34944]" dest="type_name [34803,34810]"/>
  <match src="member_expression [6156,6166]" dest="member_expression [6123,6133]"/>
  <match src=".: . [52765,52766]" dest=".: . [52921,52922]"/>
  <match src="[: [ [48830,48831]" dest="[: [ [48914,48915]"/>
  <match src="user_defined_type [21313,21337]" dest="user_defined_type [21179,21203]"/>
  <match src="variable_declaration_statement [32496,32533]" dest="variable_declaration_statement [32362,32399]"/>
  <match src="comment: // topic3 is tokenId field [50923,50949]" dest="comment: // topic3 is tokenId field [51007,51033]"/>
  <match src="parameter [40637,40653]" dest="parameter [40435,40451]"/>
  <match src="}: } [47262,47263]" dest="}: } [47346,47347]"/>
  <match src="): ) [8580,8581]" dest="): ) [8547,8548]"/>
  <match src=".: . [2837,2838]" dest=".: . [2804,2805]"/>
  <match src="identifier: rootToken [49523,49532]" dest="identifier: rootToken [49607,49616]"/>
  <match src="bytes32: bytes32 [45748,45755]" dest="bytes32: bytes32 [45546,45553]"/>
  <match src="(: ( [19567,19568]" dest="(: ( [19468,19469]"/>
  <match src="parameter [44916,44930]" dest="parameter [44714,44728]"/>
  <match src="call_argument [27784,27796]" dest="call_argument [27649,27661]"/>
  <match src="identifier: tokenId [39866,39873]" dest="identifier: tokenId [39664,39671]"/>
  <match src="address: address [40637,40644]" dest="address: address [40435,40442]"/>
  <match src="}: } [24757,24758]" dest="}: } [24623,24624]"/>
  <match src="unary_expression [45191,45198]" dest="unary_expression [44990,44997]"/>
  <match src="call_expression [52859,52886]" dest="call_expression [53093,53120]"/>
  <match src="identifier: _length [5155,5162]" dest="identifier: _length [5122,5129]"/>
  <match src="identifier: memPtr [33574,33580]" dest="identifier: memPtr [33440,33446]"/>
  <match src="call_argument [8116,8121]" dest="call_argument [8083,8088]"/>
  <match src="member_expression [10198,10208]" dest="member_expression [10165,10175]"/>
  <match src="comment: /**      * @dev Emitted when `account` is revoked `role`.      *      * `sender` is the account that originated the contract call:      *   - if using `revokeRole`, it is the admin role bearer      *   - if using `renounceRole`, it is the role bearer (i.e. `account`)      */ [22321,22602]" dest="comment: /**      * @dev Emitted when `account` is revoked `role`.      *      * `sender` is the account that originated the contract call:      *   - if using `revokeRole`, it is the admin role bearer      *   - if using `renounceRole`, it is the role bearer (i.e. `account`)      */ [22187,22468]"/>
  <match src=",: , [29572,29573]" dest=",: , [29438,29439]"/>
  <match src="address: address [22820,22827]" dest="address: address [22686,22693]"/>
  <match src="): ) [27090,27091]" dest="): ) [26956,26957]"/>
  <match src="): ) [51994,51995]" dest="): ) [52150,52151]"/>
  <match src="): ) [3371,3372]" dest="): ) [3338,3339]"/>
  <match src=",: , [27337,27338]" dest=",: , [27203,27204]"/>
  <match src="): ) [14112,14113]" dest="): ) [14046,14047]"/>
  <match src="identifier: account [27222,27229]" dest="identifier: account [27088,27095]"/>
  <match src="identifier: depositData [48329,48340]" dest="identifier: depositData [48413,48424]"/>
  <match src="comment: /**       * @dev Safely transfers `tokenId` token from `from` to `to`.       *       * Requirements:       *       * - `from` cannot be the zero address.       * - `to` cannot be the zero address.       * - `tokenId` token must exist and be owned by `from`.       * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.       * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.       *       * Emits a {Transfer} event.       */ [41309,41889]" dest="comment: /**       * @dev Safely transfers `tokenId` token from `from` to `to`.       *       * Requirements:       *       * - `from` cannot be the zero address.       * - `to` cannot be the zero address.       * - `tokenId` token must exist and be owned by `from`.       * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.       * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.       *       * Emits a {Transfer} event.       */ [41107,41687]"/>
  <match src="primitive_type [46417,46424]" dest="primitive_type [46215,46222]"/>
  <match src="uint256: uint256 [33089,33096]" dest="uint256: uint256 [32955,32962]"/>
  <match src="primitive_type [34899,34906]" dest="primitive_type [34765,34772]"/>
  <match src="call_expression [31091,31165]" dest="call_expression [30957,31031]"/>
  <match src="identifier: _inner [9149,9155]" dest="identifier: _inner [9116,9122]"/>
  <match src="variable_declaration [50198,50235]" dest="variable_declaration [50282,50319]"/>
  <match src="yul_decimal_number: 1 [34330,34331]" dest="yul_decimal_number: 1 [34196,34197]"/>
  <match src="primitive_type [38031,38038]" dest="primitive_type [37829,37836]"/>
  <match src=",: , [53823,53824]" dest=",: , [54057,54058]"/>
  <match src="type_name [28720,28727]" dest="type_name [28586,28593]"/>
  <match src=",: , [34742,34743]" dest=",: , [34608,34609]"/>
  <match src="visibility [35698,35705]" dest="visibility [35564,35571]"/>
  <match src="view: view [6850,6854]" dest="view: view [6817,6821]"/>
  <match src="identifier: target [14055,14061]" dest="identifier: target [13989,13995]"/>
  <match src="+: + [32041,32042]" dest="+: + [31907,31908]"/>
  <match src=".: . [54620,54621]" dest=".: . [54854,54855]"/>
  <match src=",: , [15157,15158]" dest=",: , [15091,15092]"/>
  <match src="identifier: errorMessage [18100,18112]" dest="identifier: errorMessage [18034,18046]"/>
  <match src="bytes32: bytes32 [46283,46290]" dest="bytes32: bytes32 [46081,46088]"/>
  <match src="primitive_type [5202,5209]" dest="primitive_type [5169,5176]"/>
  <match src="(: ( [17699,17700]" dest="(: ( [17633,17634]"/>
  <match src="primitive_type [39253,39260]" dest="primitive_type [39051,39058]"/>
  <match src="abstract: abstract [21239,21247]" dest="abstract: abstract [21105,21113]"/>
  <match src="return_type_definition [38460,38483]" dest="return_type_definition [38258,38281]"/>
  <match src="identifier: memPtr [29523,29529]" dest="identifier: memPtr [29389,29395]"/>
  <match src="array_access [26933,26945]" dest="array_access [26799,26811]"/>
  <match src="): ) [30266,30267]" dest="): ) [30132,30133]"/>
  <match src=".: . [30320,30321]" dest=".: . [30186,30187]"/>
  <match src="expression_statement [29052,29102]" dest="expression_statement [28918,28968]"/>
  <match src="memory: memory [32179,32185]" dest="memory: memory [32045,32051]"/>
  <match src="): ) [49574,49575]" dest="): ) [49658,49659]"/>
  <match src="identifier: RLPItem [50208,50215]" dest="identifier: RLPItem [50292,50299]"/>
  <match src="binary_expression [15640,15670]" dest="binary_expression [15574,15604]"/>
  <match src="view: view [9934,9938]" dest="view: view [9901,9905]"/>
  <match src="identifier: WORD_SIZE [35983,35992]" dest="identifier: WORD_SIZE [35849,35858]"/>
  <match src="uint256: uint256 [8353,8360]" dest="uint256: uint256 [8320,8327]"/>
  <match src="identifier: contains [6584,6592]" dest="identifier: contains [6551,6559]"/>
  <match src="type_name [28359,28364]" dest="type_name [28225,28230]"/>
  <match src="type_name [25023,25030]" dest="type_name [24889,24896]"/>
  <match src="identifier: set [4639,4642]" dest="identifier: set [4606,4609]"/>
  <match src="state_mutability [23887,23891]" dest="state_mutability [23753,23757]"/>
  <match src="comment: // Attempting to exit with some event signature from L2, which is [54706,54771]" dest="comment: // Attempting to exit with some event signature from L2, which is [55012,55077]"/>
  <match src="member_expression [23192,23219]" dest="member_expression [23058,23085]"/>
  <match src="): ) [34759,34760]" dest="): ) [34625,34626]"/>
  <match src="identifier: destPtr [32673,32680]" dest="identifier: destPtr [32539,32546]"/>
  <match src="primitive_type [27723,27730]" dest="primitive_type [27588,27595]"/>
  <match src=",: , [30607,30608]" dest=",: , [30473,30474]"/>
  <match src="parameter [44382,44408]" dest="parameter [44180,44206]"/>
  <match src="function_body [47109,47263]" dest="function_body [47193,47347]"/>
  <match src="variable_declaration [29212,29230]" dest="variable_declaration [29078,29096]"/>
  <match src=",: , [31932,31933]" dest=",: , [31798,31799]"/>
  <match src="view: view [7322,7326]" dest="view: view [7289,7293]"/>
  <match src="yul_path [34527,34532]" dest="yul_path [34393,34398]"/>
  <match src="parameter [943,949]" dest="parameter [943,949]"/>
  <match src="solidity_version:  0.6.6 [27445,27451]" dest="solidity_version:  0.6.12 [27311,27318]"/>
  <match src="comment: // topic3 is tokenId field [54055,54081]" dest="comment: // topic3 is tokenId field [54289,54315]"/>
  <match src="address: address [873,880]" dest="address: address [873,880]"/>
  <match src="false [4821,4826]" dest="false [4788,4793]"/>
  <match src="type_cast_expression [10659,10690]" dest="type_cast_expression [10626,10657]"/>
  <match src=",: , [5627,5628]" dest=",: , [5594,5595]"/>
  <match src="primitive_type [887,894]" dest="primitive_type [887,894]"/>
  <match src="visibility [30213,30221]" dest="visibility [30079,30087]"/>
  <match src="call_argument [29074,29100]" dest="call_argument [28940,28966]"/>
  <match src="+: + [29612,29613]" dest="+: + [29478,29479]"/>
  <match src="assignment_expression [34409,34447]" dest="assignment_expression [34275,34313]"/>
  <match src="): ) [5642,5643]" dest="): ) [5609,5610]"/>
  <match src="address: address [37803,37810]" dest="address: address [37601,37608]"/>
  <match src="identifier: value [15919,15924]" dest="identifier: value [15853,15858]"/>
  <match src="): ) [22919,22920]" dest="): ) [22785,22786]"/>
  <match src="yul_assignment [32595,32623]" dest="yul_assignment [32461,32489]"/>
  <match src="call_argument [51062,51066]" dest="call_argument [51146,51150]"/>
  <match src="yul_identifier [31518,31524]" dest="yul_identifier [31384,31390]"/>
  <match src="identifier: IERC165 [37485,37492]" dest="identifier: IERC165 [37283,37290]"/>
  <match src=",: , [9992,9993]" dest=",: , [9959,9960]"/>
  <match src="identifier: MANAGER_ROLE [45624,45636]" dest="identifier: MANAGER_ROLE [45422,45434]"/>
  <match src="&quot;: &quot; [31020,31021]" dest="&quot;: &quot; [30886,30887]"/>
  <match src="=: = [50236,50237]" dest="=: = [50320,50321]"/>
  <match src="): ) [50501,50502]" dest="): ) [50585,50586]"/>
  <match src="internal: internal [12929,12937]" dest="internal: internal [12863,12871]"/>
  <match src="member_expression [29245,29256]" dest="member_expression [29111,29122]"/>
  <match src="yul_function_call [31473,31484]" dest="yul_function_call [31339,31350]"/>
  <match src="identifier: _inner [8337,8343]" dest="identifier: _inner [8304,8310]"/>
  <match src="(: ( [54111,54112]" dest="(: ( [54345,54346]"/>
  <match src="&quot;: &quot; [13165,13166]" dest="&quot;: &quot; [13099,13100]"/>
  <match src="uint256: uint256 [29455,29462]" dest="uint256: uint256 [29321,29328]"/>
  <match src="): ) [31079,31080]" dest="): ) [30945,30946]"/>
  <match src="struct_declaration [9119,9163]" dest="struct_declaration [9086,9130]"/>
  <match src="type_name [50520,50527]" dest="type_name [50604,50611]"/>
  <match src="function_definition [44262,44425]" dest="function_definition [44060,44223]"/>
  <match src="): ) [51785,51786]" dest="): ) [51941,51942]"/>
  <match src=".: . [5240,5241]" dest=".: . [5207,5208]"/>
  <match src="identifier: msg [19767,19770]" dest="identifier: msg [19668,19671]"/>
  <match src="parameter [10632,10639]" dest="parameter [10599,10606]"/>
  <match src="variable_declaration [15872,15895]" dest="variable_declaration [15806,15829]"/>
  <match src="uint256: uint256 [29355,29362]" dest="uint256: uint256 [29221,29228]"/>
  <match src="indexed: indexed [46959,46966]" dest="indexed: indexed [46757,46764]"/>
  <match src="identifier: result [30481,30487]" dest="identifier: result [30347,30353]"/>
  <match src="primitive_type [14100,14105]" dest="primitive_type [14034,14039]"/>
  <match src=".: . [27637,27638]" dest=".: . [27502,27503]"/>
  <match src=",: , [7377,7378]" dest=",: , [7344,7345]"/>
  <match src=",: , [31541,31542]" dest=",: , [31407,31408]"/>
  <match src="identifier: target [15151,15157]" dest="identifier: target [15085,15091]"/>
  <match src="): ) [15895,15896]" dest="): ) [15829,15830]"/>
  <match src="): ) [34239,34240]" dest="): ) [34105,34106]"/>
  <match src="identifier: TRANSFER_WITH_METADATA_EVENT_SIG [52891,52923]" dest="identifier: TRANSFER_WITH_METADATA_EVENT_SIG [53125,53157]"/>
  <match src="}: } [6714,6715]" dest="}: } [6681,6682]"/>
  <match src="state_mutability [9934,9938]" dest="state_mutability [9901,9905]"/>
  <match src="parameter [873,885]" dest="parameter [873,885]"/>
  <match src="interface_declaration [36799,37256]" dest="interface_declaration [36632,37089]"/>
  <match src="call_expression [15950,16002]" dest="call_expression [15884,15936]"/>
  <match src="(: ( [54193,54194]" dest="(: ( [54427,54428]"/>
  <match src="yul_decimal_number: 1 [34579,34580]" dest="yul_decimal_number: 1 [34445,34446]"/>
  <match src="identifier: account [24572,24579]" dest="identifier: account [24438,24445]"/>
  <match src="return_statement [10183,10210]" dest="return_statement [10150,10177]"/>
  <match src="uint256: uint256 [29114,29121]" dest="uint256: uint256 [28980,28987]"/>
  <match src="): ) [39268,39269]" dest="): ) [39066,39067]"/>
  <match src="identifier: _setupRole [47223,47233]" dest="identifier: _setupRole [47307,47317]"/>
  <match src="): ) [52562,52563]" dest="): ) [52718,52719]"/>
  <match src="identifier: ownerOf [38421,38428]" dest="identifier: ownerOf [38219,38226]"/>
  <match src="[: [ [50328,50329]" dest="[: [ [50412,50413]"/>
  <match src="call_argument [6463,6473]" dest="call_argument [6430,6440]"/>
  <match src="identifier: this [19626,19630]" dest="identifier: this [19527,19531]"/>
  <match src="identifier: toRlpItem [28539,28548]" dest="identifier: toRlpItem [28405,28414]"/>
  <match src="member_expression [5694,5705]" dest="member_expression [5661,5672]"/>
  <match src="identifier: result [29545,29551]" dest="identifier: result [29411,29417]"/>
  <match src="]: ] [51905,51906]" dest="]: ] [52061,52062]"/>
  <match src="identifier: result [31504,31510]" dest="identifier: result [31370,31376]"/>
  <match src="yul_decimal_number: 256 [34639,34642]" dest="yul_decimal_number: 256 [34505,34508]"/>
  <match src="comment: // [53002,53004]" dest="comment: // [53236,53238]"/>
  <match src="identifier: item [30973,30977]" dest="identifier: item [30839,30843]"/>
  <match src="comment: // left over bytes. Mask is used to remove unwanted bytes from the word [36016,36087]" dest="comment: // left over bytes. Mask is used to remove unwanted bytes from the word [35882,35953]"/>
  <match src="identifier: srcpart [36177,36184]" dest="identifier: srcpart [36043,36050]"/>
  <match src="identifier: decode [51967,51973]" dest="identifier: decode [52123,52129]"/>
  <match src=".: . [22902,22903]" dest=".: . [22768,22769]"/>
  <match src="comment: /**      * @notice Lock ERC721 token(s) for deposit, callable only by manager      * @param depositor Address who wants to deposit token      * @param depositReceiver Address (address) who wants to receive token on child chain      * @param rootToken Token which gets deposited      * @param depositData ABI encoded tokenId(s). It's possible to deposit batch of tokens.      */ [47588,47971]" dest="comment: /**      * @notice Lock ERC721 token(s) for deposit, callable only by manager      * @param depositor Address who wants to deposit token      * @param depositReceiver Address (address) who wants to receive token on child chain      * @param rootToken Token which gets deposited      * @param depositData ABI encoded tokenId(s). It's possible to deposit batch of tokens.      */ [47672,48055]"/>
  <match src="(: ( [3366,3367]" dest="(: ( [3333,3334]"/>
  <match src="identifier: functionStaticCall [16313,16331]" dest="identifier: functionStaticCall [16247,16265]"/>
  <match src="parameter [14531,14543]" dest="parameter [14465,14477]"/>
  <match src="function_definition [38187,38261]" dest="function_definition [37985,38059]"/>
  <match src="type_name [2333,2342]" dest="type_name [2300,2309]"/>
  <match src="identifier: set [9750,9753]" dest="identifier: set [9717,9720]"/>
  <match src="&quot;: &quot; [16384,16385]" dest="&quot;: &quot; [16318,16319]"/>
  <match src="yul_identifier [18633,18648]" dest="yul_identifier [18567,18582]"/>
  <match src="primitive_type [21448,21455]" dest="primitive_type [21314,21321]"/>
  <match src=".: . [50672,50673]" dest=".: . [50756,50757]"/>
  <match src="returns: returns [11561,11568]" dest="returns: returns [11495,11502]"/>
  <match src="solidity_version: 0.8.0 [18883,18888]" dest="solidity_version: 0.8.0 [19779,19784]"/>
  <match src="identifier: i [29463,29464]" dest="identifier: i [29329,29330]"/>
  <match src="identifier: len [31118,31121]" dest="identifier: len [30984,30987]"/>
  <match src="member_expression [31113,31121]" dest="member_expression [30979,30987]"/>
  <match src="comment: // one byte prefix [31882,31900]" dest="comment: // one byte prefix [31748,31766]"/>
  <match src="return: return [16941,16947]" dest="return: return [16875,16881]"/>
  <match src="type_name [37826,37833]" dest="type_name [37624,37631]"/>
  <match src="returns: returns [30245,30252]" dest="returns: returns [30111,30118]"/>
  <match src="call_argument [8361,8375]" dest="call_argument [8328,8342]"/>
  <match src="visibility [23880,23886]" dest="visibility [23746,23752]"/>
  <match src="comment: // If it's a simple exit ( with out metadata coming from L2 to L1 ) [50363,50430]" dest="comment: // If it's a simple exit ( with out metadata coming from L2 to L1 ) [50447,50514]"/>
  <match src="identifier: Set [4950,4953]" dest="identifier: Set [4917,4920]"/>
  <match src="primitive_type [37803,37810]" dest="primitive_type [37601,37608]"/>
  <match src=".: . [17915,17916]" dest=".: . [17849,17850]"/>
  <match src="type_name [7660,7670]" dest="type_name [7627,7637]"/>
  <match src="call_argument [24736,24740]" dest="call_argument [24602,24606]"/>
  <match src="returns: returns [43487,43494]" dest="returns: returns [43286,43293]"/>
  <match src="uint256: uint256 [29872,29879]" dest="uint256: uint256 [29738,29745]"/>
  <match src="+: + [32663,32664]" dest="+: + [32529,32530]"/>
  <match src="type_cast_expression [49562,49575]" dest="type_cast_expression [49646,49659]"/>
  <match src="assembly_statement [34480,34775]" dest="assembly_statement [34346,34641]"/>
  <match src="identifier: UintSet [9889,9896]" dest="identifier: UintSet [9856,9863]"/>
  <match src="=: = [54548,54549]" dest="=: = [54782,54783]"/>
  <match src="primitive_type [15640,15647]" dest="primitive_type [15574,15581]"/>
  <match src="identifier: role [23935,23939]" dest="identifier: role [23801,23805]"/>
  <match src="member_expression [54026,54051]" dest="member_expression [54260,54285]"/>
  <match src="solidity: solidity [28133,28141]" dest="solidity: solidity [27998,28006]"/>
  <match src="primitive_type [17882,17887]" dest="primitive_type [17816,17821]"/>
  <match src="(: ( [32650,32651]" dest="(: ( [32516,32517]"/>
  <match src="state_mutability [4990,4994]" dest="state_mutability [4957,4961]"/>
  <match src="identifier: _add [9432,9436]" dest="identifier: _add [9399,9403]"/>
  <match src="view: view [40623,40627]" dest="view: view [40421,40425]"/>
  <match src="identifier: _ [45228,45229]" dest="identifier: _ [45027,45028]"/>
  <match src="identifier: token [50967,50972]" dest="identifier: token [51051,51056]"/>
  <match src="=: = [33285,33286]" dest="=: = [33151,33152]"/>
  <match src="identifier: set [3017,3020]" dest="identifier: set [2984,2987]"/>
  <match src="call_argument [14585,14591]" dest="call_argument [14519,14525]"/>
  <match src="}: } [27855,27856]" dest="}: } [27720,27721]"/>
  <match src="yul_evm_builtin [29944,29948]" dest="yul_evm_builtin [29810,29814]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [17403,17583]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a delegate call.      *      * _Available since v3.4._      */ [17337,17517]"/>
  <match src="primitive_type [7336,7343]" dest="primitive_type [7303,7310]"/>
  <match src=",: , [47377,47378]" dest=",: , [47461,47462]"/>
  <match src="identifier: LIST_LONG_START [34377,34392]" dest="identifier: LIST_LONG_START [34243,34258]"/>
  <match src="identifier: Set [2725,2728]" dest="identifier: Set [2692,2695]"/>
  <match src="contract_body [37493,41997]" dest="contract_body [37291,41795]"/>
  <match src="returns: returns [9399,9406]" dest="returns: returns [9366,9373]"/>
  <match src="block_statement [4799,4838]" dest="block_statement [4766,4805]"/>
  <match src="if_statement [27053,27164]" dest="if_statement [26919,27030]"/>
  <match src="primitive_type [9050,9057]" dest="primitive_type [9017,9024]"/>
  <match src="identifier: _revertMsg [27525,27535]" dest="identifier: _revertMsg [27390,27400]"/>
  <match src="member_expression [53781,53806]" dest="member_expression [54015,54040]"/>
  <match src="primitive_type [50646,50653]" dest="primitive_type [50730,50737]"/>
  <match src="yul_evm_builtin [34644,34647]" dest="yul_evm_builtin [34510,34513]"/>
  <match src="is: is [42110,42112]" dest="is: is [41909,41911]"/>
  <match src="parameter [6070,6092]" dest="parameter [6037,6059]"/>
  <match src="comment: /*      * @param item RLP encoded bytes      */ [28475,28524]" dest="comment: /*      * @param item RLP encoded bytes      */ [28341,28390]"/>
  <match src="identifier: STRING_SHORT_START [35071,35089]" dest="identifier: STRING_SHORT_START [34937,34955]"/>
  <match src="call_argument [9449,9463]" dest="call_argument [9416,9430]"/>
  <match src="address: address [38031,38038]" dest="address: address [37829,37836]"/>
  <match src="identifier: RLPItem [28404,28411]" dest="identifier: RLPItem [28270,28277]"/>
  <match src="returns: returns [16272,16279]" dest="returns: returns [16206,16213]"/>
  <match src="primitive_type [9718,9722]" dest="primitive_type [9685,9689]"/>
  <match src="primitive_type [12957,12964]" dest="primitive_type [12891,12898]"/>
  <match src="call_expression [2796,2817]" dest="call_expression [2763,2784]"/>
  <match src=",: , [49285,49286]" dest=",: , [49369,49370]"/>
  <match src="call_expression [17952,18004]" dest="call_expression [17886,17938]"/>
  <match src="type_name [29455,29462]" dest="type_name [29321,29328]"/>
  <match src="yul_evm_builtin [34200,34205]" dest="yul_evm_builtin [34066,34071]"/>
  <match src="public: public [23144,23150]" dest="public: public [23010,23016]"/>
  <match src=".: . [9440,9441]" dest=".: . [9407,9408]"/>
  <match src="function_definition [23102,23229]" dest="function_definition [22968,23095]"/>
  <match src="identifier: sender [22305,22311]" dest="identifier: sender [22171,22177]"/>
  <match src="identifier: Set [5612,5615]" dest="identifier: Set [5579,5582]"/>
  <match src="(: ( [10572,10573]" dest="(: ( [10539,10540]"/>
  <match src=",: , [44343,44344]" dest=",: , [44141,44142]"/>
  <match src=",: , [38078,38079]" dest=",: , [37876,37877]"/>
  <match src="type_name [8299,8303]" dest="type_name [8266,8270]"/>
  <match src="): ) [32370,32371]" dest="): ) [32236,32237]"/>
  <match src=",: , [46789,46790]" dest=",: , [46587,46588]"/>
  <match src="[: [ [51941,51942]" dest="[: [ [52097,52098]"/>
  <match src="&quot;: &quot; [32328,32329]" dest="&quot;: &quot; [32194,32195]"/>
  <match src="primitive_type [25776,25783]" dest="primitive_type [25642,25649]"/>
  <match src="comment: /**      * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`      *      * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite      * {RoleAdminChanged} not being emitted signaling this.      *      * _Available since v3.1._      */ [21592,21891]" dest="comment: /**      * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`      *      * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite      * {RoleAdminChanged} not being emitted signaling this.      *      * _Available since v3.1._      */ [21458,21757]"/>
  <match src="}: } [4844,4845]" dest="}: } [4811,4812]"/>
  <match src="identifier: valueIndex [3493,3503]" dest="identifier: valueIndex [3460,3470]"/>
  <match src="): ) [52790,52791]" dest="): ) [52946,52947]"/>
  <match src="uint256: uint256 [30338,30345]" dest="uint256: uint256 [30204,30211]"/>
  <match src=".: . [51195,51196]" dest=".: . [51279,51280]"/>
  <match src="): ) [50681,50682]" dest="): ) [50765,50766]"/>
  <match src="(: ( [43455,43456]" dest="(: ( [43254,43255]"/>
  <match src="type_name [50096,50101]" dest="type_name [50180,50185]"/>
  <match src="storage: storage [6081,6088]" dest="storage: storage [6048,6055]"/>
  <match src="call_expression [50838,50864]" dest="call_expression [50922,50948]"/>
  <match src="bool: bool [15858,15862]" dest="bool: bool [15792,15796]"/>
  <match src="assembly: assembly [18511,18519]" dest="assembly: assembly [18445,18453]"/>
  <match src="block_statement [54303,54672]" dest="block_statement [54537,54906]"/>
  <match src="): ) [5758,5759]" dest="): ) [5725,5726]"/>
  <match src="(: ( [47136,47137]" dest="(: ( [47220,47221]"/>
  <match src="comment: // means a value is not in the set. [2443,2478]" dest="comment: // means a value is not in the set. [2410,2445]"/>
  <match src="user_defined_type [45465,45480]" dest="user_defined_type [45263,45278]"/>
  <match src="identifier: call [15906,15910]" dest="identifier: call [15840,15844]"/>
  <match src="(: ( [48180,48181]" dest="(: ( [48264,48265]"/>
  <match src="identifier: AddressSet [8237,8247]" dest="identifier: AddressSet [8204,8214]"/>
  <match src="string_literal [29300,29341]" dest="string_literal [29166,29207]"/>
  <match src="state_mutability [30552,30556]" dest="state_mutability [30418,30422]"/>
  <match src="primitive_type [37611,37618]" dest="primitive_type [37409,37416]"/>
  <match src="primitive_type [47500,47506]" dest="primitive_type [47584,47590]"/>
  <match src="(: ( [30315,30316]" dest="(: ( [30181,30182]"/>
  <match src="[: [ [22888,22889]" dest="[: [ [22754,22755]"/>
  <match src="parameter [41935,41945]" dest="parameter [41733,41743]"/>
  <match src="{: { [16295,16296]" dest="{: { [16229,16230]"/>
  <match src="primitive_type [33117,33124]" dest="primitive_type [32983,32990]"/>
  <match src="=: = [29179,29180]" dest="=: = [29045,29046]"/>
  <match src="assembly: assembly [29911,29919]" dest="assembly: assembly [29777,29785]"/>
  <match src="parameter [39846,39856]" dest="parameter [39644,39654]"/>
  <match src="bytes: bytes [15527,15532]" dest="bytes: bytes [15461,15466]"/>
  <match src="return_type_definition [17269,17291]" dest="return_type_definition [17203,17225]"/>
  <match src="primitive_type [855,862]" dest="primitive_type [855,862]"/>
  <match src="-: - [34425,34426]" dest="-: - [34291,34292]"/>
  <match src="uint256: uint256 [33650,33657]" dest="uint256: uint256 [33516,33523]"/>
  <match src="identifier: data [15927,15931]" dest="identifier: data [15861,15865]"/>
  <match src="call_expression [24725,24750]" dest="call_expression [24591,24616]"/>
  <match src="parameter [14466,14483]" dest="parameter [14400,14417]"/>
  <match src="indexed: indexed [46881,46888]" dest="indexed: indexed [46679,46686]"/>
  <match src="(: ( [29066,29067]" dest="(: ( [28932,28933]"/>
  <match src="[: [ [25102,25103]" dest="[: [ [24968,24969]"/>
  <match src="primitive_type [12886,12901]" dest="primitive_type [12820,12835]"/>
  <match src="primitive_type [2333,2340]" dest="primitive_type [2300,2307]"/>
  <match src="solidity_pragma_token [1060,1083]" dest="solidity_pragma_token [1027,1050]"/>
  <match src="call_argument [16975,16985]" dest="call_argument [16909,16919]"/>
  <match src="&quot;: &quot; [31822,31823]" dest="&quot;: &quot; [31688,31689]"/>
  <match src="call_argument [10667,10689]" dest="call_argument [10634,10656]"/>
  <match src="}: } [31574,31575]" dest="}: } [31440,31441]"/>
  <match src=",: , [34532,34533]" dest=",: , [34398,34399]"/>
  <match src="identifier: itemLen [34805,34812]" dest="identifier: itemLen [34671,34678]"/>
  <match src="contract_body [36817,37256]" dest="contract_body [36650,37089]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [14206,14422]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [14140,14356]"/>
  <match src="identifier: amount [12982,12988]" dest="identifier: amount [12916,12922]"/>
  <match src="call_argument [15151,15157]" dest="call_argument [15085,15091]"/>
  <match src="yul_evm_builtin [34744,34747]" dest="yul_evm_builtin [34610,34613]"/>
  <match src="): ) [10208,10209]" dest="): ) [10175,10176]"/>
  <match src="memory: memory [31678,31684]" dest="memory: memory [31544,31550]"/>
  <match src="uint256: uint256 [23165,23172]" dest="uint256: uint256 [23031,23038]"/>
  <match src="identifier: WITHDRAW_BATCH_EVENT_SIG [46110,46134]" dest="identifier: WITHDRAW_BATCH_EVENT_SIG [45908,45932]"/>
  <match src="primitive_type [38429,38436]" dest="primitive_type [38227,38234]"/>
  <match src="call_argument [7758,7790]" dest="call_argument [7725,7757]"/>
  <match src="identifier: require [33353,33360]" dest="identifier: require [33219,33226]"/>
  <match src="): ) [30541,30542]" dest="): ) [30407,30408]"/>
  <match src="]: ] [54043,54044]" dest="]: ] [54277,54278]"/>
  <match src="primitive_type [46722,46729]" dest="primitive_type [46520,46527]"/>
  <match src="identifier: RLPItem [31670,31677]" dest="identifier: RLPItem [31536,31543]"/>
  <match src="): ) [31164,31165]" dest="): ) [31030,31031]"/>
  <match src=".: . [23948,23949]" dest=".: . [23814,23815]"/>
  <match src="call_argument [29276,29298]" dest="call_argument [29142,29164]"/>
  <match src="yul_variable_declaration [36173,36214]" dest="yul_variable_declaration [36039,36080]"/>
  <match src="&quot;: &quot; [29099,29100]" dest="&quot;: &quot; [28965,28966]"/>
  <match src="primitive_type [6864,6871]" dest="primitive_type [6831,6838]"/>
  <match src="member_expression [3977,3995]" dest="member_expression [3944,3962]"/>
  <match src=",: , [41945,41946]" dest=",: , [41743,41744]"/>
  <match src="{: { [14114,14115]" dest="{: { [14048,14049]"/>
  <match src="call_expression [51190,51221]" dest="call_expression [51274,51305]"/>
  <match src="): ) [37875,37876]" dest="): ) [37673,37674]"/>
  <match src=",: , [15975,15976]" dest=",: , [15909,15910]"/>
  <match src="bytes4: bytes4 [37204,37210]" dest="bytes4: bytes4 [37037,37043]"/>
  <match src="}: } [19541,19542]" dest="}: } [19442,19443]"/>
  <match src="constant: constant [28183,28191]" dest="constant: constant [28049,28057]"/>
  <match src="visibility [8276,8284]" dest="visibility [8243,8251]"/>
  <match src="contract_body [323,954]" dest="contract_body [323,954]"/>
  <match src="parameter [18047,18059]" dest="parameter [17981,17993]"/>
  <match src="return_type_definition [32206,32228]" dest="return_type_definition [32072,32094]"/>
  <match src="indexed: indexed [22634,22641]" dest="indexed: indexed [22500,22507]"/>
  <match src=".: . [3980,3981]" dest=".: . [3947,3948]"/>
  <match src="uint256: uint256 [32894,32901]" dest="uint256: uint256 [32760,32767]"/>
  <match src="expression_statement [27844,27846]" dest="expression_statement [27709,27711]"/>
  <match src="(: ( [30972,30973]" dest="(: ( [30838,30839]"/>
  <match src="function: function [32154,32162]" dest="function: function [32020,32028]"/>
  <match src="bool: bool [11570,11574]" dest="bool: bool [11504,11508]"/>
  <match src="parameter [16630,16647]" dest="parameter [16564,16581]"/>
  <match src="uint256: uint256 [34957,34964]" dest="uint256: uint256 [34823,34830]"/>
  <match src="function_body [10172,10217]" dest="function_body [10139,10184]"/>
  <match src="expression_statement [29596,29622]" dest="expression_statement [29462,29488]"/>
  <match src=",: , [30447,30448]" dest=",: , [30313,30314]"/>
  <match src="storage: storage [9362,9369]" dest="storage: storage [9329,9336]"/>
  <match src="address: address [44916,44923]" dest="address: address [44714,44721]"/>
  <match src="number_literal: 0 [28672,28673]" dest="number_literal: 0 [28538,28539]"/>
  <match src="variable_declaration [53647,53665]" dest="variable_declaration [53881,53899]"/>
  <match src="public: public [23880,23886]" dest="public: public [23746,23752]"/>
  <match src=".: . [10201,10202]" dest=".: . [10168,10169]"/>
  <match src="type_name [13114,13118]" dest="type_name [13048,13052]"/>
  <match src="number_literal: 1 [3941,3942]" dest="number_literal: 1 [3908,3909]"/>
  <match src="identifier: result [30401,30407]" dest="identifier: result [30267,30273]"/>
  <match src="primitive_type [45121,45125]" dest="primitive_type [44920,44924]"/>
  <match src="call_expression [29511,29530]" dest="call_expression [29377,29396]"/>
  <match src="type_name [9889,9896]" dest="type_name [9856,9863]"/>
  <match src="return_type_definition [18127,18148]" dest="return_type_definition [18061,18082]"/>
  <match src="uint256: uint256 [7766,7773]" dest="uint256: uint256 [7733,7740]"/>
  <match src=",: , [48512,48513]" dest=",: , [48596,48597]"/>
  <match src="}: } [51249,51250]" dest="}: } [51405,51406]"/>
  <match src="identifier: length [3989,3995]" dest="identifier: length [3956,3962]"/>
  <match src="modifier_definition [27709,27853]" dest="modifier_definition [27574,27718]"/>
  <match src="return_type_definition [6422,6436]" dest="return_type_definition [6389,6403]"/>
  <match src="variable_declaration_statement [48300,48353]" dest="variable_declaration_statement [48384,48437]"/>
  <match src="parameter [9408,9412]" dest="parameter [9375,9379]"/>
  <match src="identifier: mint [43110,43114]" dest="identifier: mint [42909,42913]"/>
  <match src="identifier: tokenId [46808,46815]" dest="identifier: tokenId [46606,46613]"/>
  <match src="identifier: item [28562,28566]" dest="identifier: item [28428,28432]"/>
  <match src="): ) [16385,16386]" dest="): ) [16319,16320]"/>
  <match src="yul_path [29958,29964]" dest="yul_path [29824,29830]"/>
  <match src="identifier: errorMessage [16987,16999]" dest="identifier: errorMessage [16921,16933]"/>
  <match src="identifier: byte0 [35133,35138]" dest="identifier: byte0 [34999,35004]"/>
  <match src="identifier: value [15165,15170]" dest="identifier: value [15099,15104]"/>
  <match src="call_argument [15159,15163]" dest="call_argument [15093,15097]"/>
  <match src="{: { [27503,27504]" dest="{: { [27368,27369]"/>
  <match src=".: . [5697,5698]" dest=".: . [5664,5665]"/>
  <match src="(: ( [29400,29401]" dest="(: ( [29266,29267]"/>
  <match src="expression_statement [31091,31166]" dest="expression_statement [30957,31032]"/>
  <match src="parameter [48069,48086]" dest="parameter [48153,48170]"/>
  <match src="visibility [10140,10148]" dest="visibility [10107,10115]"/>
  <match src="identifier: AccessControl [27489,27502]" dest="identifier: AccessControl [27354,27367]"/>
  <match src="parameter [27568,27592]" dest="parameter [27433,27457]"/>
  <match src="parameter [22858,22862]" dest="parameter [22724,22728]"/>
  <match src="parameter [39858,39873]" dest="parameter [39656,39671]"/>
  <match src="true [3057,3061]" dest="true [3024,3028]"/>
  <match src="comment: // released when attempted to be unlocked [48605,48646]" dest="comment: // released when attempted to be unlocked [48689,48730]"/>
  <match src="{: { [13146,13147]" dest="{: { [13080,13081]"/>
  <match src="identifier: item [32029,32033]" dest="identifier: item [31895,31899]"/>
  <match src="identifier: RoleRevoked [22614,22625]" dest="identifier: RoleRevoked [22480,22491]"/>
  <match src="identifier: index [23873,23878]" dest="identifier: index [23739,23744]"/>
  <match src=".: . [2998,2999]" dest=".: . [2965,2966]"/>
  <match src="yul_assignment [33698,33729]" dest="yul_assignment [33564,33595]"/>
  <match src="(: ( [29059,29060]" dest="(: ( [28925,28926]"/>
  <match src="call_argument [29523,29529]" dest="call_argument [29389,29395]"/>
  <match src="member_expression [33164,33175]" dest="member_expression [33030,33041]"/>
  <match src="return: return [7734,7740]" dest="return: return [7701,7707]"/>
  <match src="block_statement [18689,18744]" dest="block_statement [18623,18678]"/>
  <match src="type_name [29355,29362]" dest="type_name [29221,29228]"/>
  <match src="(: ( [29788,29789]" dest="(: ( [29654,29655]"/>
  <match src="type_name [52131,52138]" dest="type_name [52287,52294]"/>
  <match src=",: , [30721,30722]" dest=",: , [30587,30588]"/>
  <match src=".: . [54044,54045]" dest=".: . [54278,54279]"/>
  <match src=":=: := [34564,34566]" dest=":=: := [34430,34432]"/>
  <match src="identifier: _add [7741,7745]" dest="identifier: _add [7708,7712]"/>
  <match src="binary_expression [52851,52923]" dest="binary_expression [53085,53157]"/>
  <match src="return: return [5222,5228]" dest="return: return [5189,5195]"/>
  <match src="call_argument [9074,9079]" dest="call_argument [9041,9046]"/>
  <match src="event_paramater [22673,22695]" dest="event_paramater [22539,22561]"/>
  <match src="&lt;: &lt; [35275,35276]" dest="&lt;: &lt; [35141,35142]"/>
  <match src="identifier: len [36130,36133]" dest="identifier: len [35996,35999]"/>
  <match src="[: [ [26939,26940]" dest="[: [ [26805,26806]"/>
  <match src="inheritance_specifier [21274,21281]" dest="inheritance_specifier [21140,21147]"/>
  <match src="identifier: _grantRole [26992,27002]" dest="identifier: _grantRole [26858,26868]"/>
  <match src="visibility [925,933]" dest="visibility [925,933]"/>
  <match src="state_mutability [8993,8997]" dest="state_mutability [8960,8964]"/>
  <match src="variable_declaration_statement [29114,29145]" dest="variable_declaration_statement [28980,29011]"/>
  <match src="(: ( [5665,5666]" dest="(: ( [5632,5633]"/>
  <match src="}: } [19785,19786]" dest="}: } [19686,19687]"/>
  <match src="): ) [9462,9463]" dest="): ) [9429,9430]"/>
  <match src="parameter [6593,6615]" dest="parameter [6560,6582]"/>
  <match src="add: add [34731,34734]" dest="add: add [34597,34600]"/>
  <match src="identifier: tokenIds [49226,49234]" dest="identifier: tokenIds [49310,49318]"/>
  <match src="identifier: data [16925,16929]" dest="identifier: data [16859,16863]"/>
  <match src="pure: pure [30231,30235]" dest="pure: pure [30097,30101]"/>
  <match src="): ) [31546,31547]" dest="): ) [31412,31413]"/>
  <match src="solidity_version_comparison_operator [18873,18876]" dest="solidity_version_comparison_operator [19769,19772]"/>
  <match src="]: ] [50468,50469]" dest="]: ] [50552,50553]"/>
  <match src="if: if [18160,18162]" dest="if: if [18094,18096]"/>
  <match src="string_literal [16753,16791]" dest="string_literal [16687,16725]"/>
  <match src="identifier: data [16340,16344]" dest="identifier: data [16274,16278]"/>
  <match src="bytes32: bytes32 [51260,51267]" dest="bytes32: bytes32 [51416,51423]"/>
  <match src="string [31822,31870]" dest="string [31688,31736]"/>
  <match src="identifier: memPtr [29250,29256]" dest="identifier: memPtr [29116,29122]"/>
  <match src="primitive_type [3904,3911]" dest="primitive_type [3871,3878]"/>
  <match src="event_definition [37788,37877]" dest="event_definition [37586,37675]"/>
  <match src=",: , [51067,51068]" dest=",: , [51151,51152]"/>
  <match src="primitive_type [53773,53780]" dest="primitive_type [54007,54014]"/>
  <match src="type_name [22820,22827]" dest="type_name [22686,22693]"/>
  <match src=".: . [26945,26946]" dest=".: . [26811,26812]"/>
  <match src="solidity: solidity [37363,37371]" dest="solidity: solidity [37163,37171]"/>
  <match src="identifier: operator [41022,41030]" dest="identifier: operator [40820,40828]"/>
  <match src="): ) [28566,28567]" dest="): ) [28432,28433]"/>
  <match src="calldata: calldata [44388,44396]" dest="calldata: calldata [44186,44194]"/>
  <match src="type_name [37653,37660]" dest="type_name [37451,37458]"/>
  <match src="yul_function_call [31382,31395]" dest="yul_function_call [31248,31261]"/>
  <match src="if: if [34365,34367]" dest="if: if [34231,34233]"/>
  <match src="yul_path [35896,35900]" dest="yul_path [35762,35766]"/>
  <match src="(: ( [50574,50575]" dest="(: ( [50658,50659]"/>
  <match src="comment: // it's lot better to exit with `Transfer(address,address,uint256)` [53236,53303]" dest="comment: // it's lot better to exit with `Transfer(address,address,uint256)` [53470,53537]"/>
  <match src="yul_path [34082,34088]" dest="yul_path [33948,33954]"/>
  <match src="update_expression [49481,49484]" dest="update_expression [49565,49568]"/>
  <match src=".: . [51776,51777]" dest=".: . [51932,51933]"/>
  <match src="function: function [4931,4939]" dest="function: function [4898,4906]"/>
  <match src="binary_expression [50646,50696]" dest="binary_expression [50730,50780]"/>
  <match src="(: ( [25095,25096]" dest="(: ( [24961,24962]"/>
  <match src="comment: // This method relies on extcodesize, which returns 0 for contracts in [11587,11657]" dest="comment: // This method relies on extcodesize, which returns 0 for contracts in [11521,11591]"/>
  <match src="(: ( [9436,9437]" dest="(: ( [9403,9404]"/>
  <match src="primitive_type [46600,46607]" dest="primitive_type [46398,46405]"/>
  <match src="expression_statement [25199,25226]" dest="expression_statement [25065,25092]"/>
  <match src="call_argument [48723,48727]" dest="call_argument [48807,48811]"/>
  <match src="uint256: uint256 [31233,31240]" dest="uint256: uint256 [31099,31106]"/>
  <match src="return: return [35397,35403]" dest="return: return [35263,35269]"/>
  <match src="(: ( [27567,27568]" dest="(: ( [27432,27433]"/>
  <match src="state_mutability [34923,34927]" dest="state_mutability [34789,34793]"/>
  <match src="identifier: decode [48855,48861]" dest="identifier: decode [48939,48945]"/>
  <match src="parameter [25762,25774]" dest="parameter [25628,25640]"/>
  <match src="primitive_type [16880,16885]" dest="primitive_type [16814,16819]"/>
  <match src="function: function [30503,30511]" dest="function: function [30369,30377]"/>
  <match src="identifier: toList [50332,50338]" dest="identifier: toList [50416,50422]"/>
  <match src="bytes32: bytes32 [7758,7765]" dest="bytes32: bytes32 [7725,7732]"/>
  <match src="yul_assignment [34293,34333]" dest="yul_assignment [34159,34199]"/>
  <match src="view: view [16267,16271]" dest="view: view [16201,16205]"/>
  <match src=",: , [16338,16339]" dest=",: , [16272,16273]"/>
  <match src="call_argument [6899,6909]" dest="call_argument [6866,6876]"/>
  <match src=".: . [48686,48687]" dest=".: . [48770,48771]"/>
  <match src="expression_statement [52407,52564]" dest="expression_statement [52563,52720]"/>
  <match src="(: ( [52850,52851]" dest="(: ( [53084,53085]"/>
  <match src="string [13164,13166]" dest="string [13098,13100]"/>
  <match src="identifier: logTopicRLPList [50654,50669]" dest="identifier: logTopicRLPList [50738,50753]"/>
  <match src="call_expression [50549,50576]" dest="call_expression [50633,50660]"/>
  <match src="identifier: memPtr [28453,28459]" dest="identifier: memPtr [28319,28325]"/>
  <match src="binary_expression [35346,35377]" dest="binary_expression [35212,35243]"/>
  <match src="}: } [43504,43505]" dest="}: } [43303,43304]"/>
  <match src="return_statement [3094,3107]" dest="return_statement [3061,3074]"/>
  <match src="address: address [23901,23908]" dest="address: address [23767,23774]"/>
  <match src="solidity_version: 0.6.0 [19904,19909]" dest="solidity_version: 0.6.0 [18777,18782]"/>
  <match src="(: ( [40596,40597]" dest="(: ( [40394,40395]"/>
  <match src="binary_expression [35269,35293]" dest="binary_expression [35135,35159]"/>
  <match src="(: ( [29017,29018]" dest="(: ( [28883,28884]"/>
  <match src="type_name [3904,3911]" dest="type_name [3871,3878]"/>
  <match src="primitive_type [26799,26806]" dest="primitive_type [26665,26672]"/>
  <match src="variable_declaration [52180,52195]" dest="variable_declaration [52336,52351]"/>
  <match src="yul_hex_number: 0xf7 [34534,34538]" dest="yul_hex_number: 0xf7 [34400,34404]"/>
  <match src="identifier: role [22258,22262]" dest="identifier: role [22124,22128]"/>
  <match src="primitive_type [39227,39234]" dest="primitive_type [39025,39032]"/>
  <match src="(: ( [51983,51984]" dest="(: ( [52139,52140]"/>
  <match src="if_statement [18305,18744]" dest="if_statement [18239,18678]"/>
  <match src="user_defined_type [6593,6603]" dest="user_defined_type [6560,6570]"/>
  <match src="(: ( [15028,15029]" dest="(: ( [14962,14963]"/>
  <match src="emit: emit [27307,27311]" dest="emit: emit [27173,27177]"/>
  <match src="parameter [4967,4980]" dest="parameter [4934,4947]"/>
  <match src="binary_expression [29993,30017]" dest="binary_expression [29859,29883]"/>
  <match src="returns: returns [6118,6125]" dest="returns: returns [6085,6092]"/>
  <match src=".: . [54497,54498]" dest=".: . [54731,54732]"/>
  <match src=",: , [42478,42479]" dest=",: , [42277,42278]"/>
  <match src="type_name [35656,35663]" dest="type_name [35522,35529]"/>
  <match src="identifier: item [28962,28966]" dest="identifier: item [28828,28832]"/>
  <match src="else: else [54686,54690]" dest="else: else [54992,54996]"/>
  <match src="=: = [29128,29129]" dest="=: = [28994,28995]"/>
  <match src="(: ( [9057,9058]" dest="(: ( [9024,9025]"/>
  <match src="identifier: initializer [45158,45169]" dest="identifier: initializer [44957,44968]"/>
  <match src="number_literal: 0xd4392723c111fcb98b073fe55873efb447bcd23cd3e49ec9ea2581930cd01ddc [45785,45851]" dest="number_literal: 0xd4392723c111fcb98b073fe55873efb447bcd23cd3e49ec9ea2581930cd01ddc [45583,45649]"/>
  <match src=".: . [26900,26901]" dest=".: . [26766,26767]"/>
  <match src=",: , [27128,27129]" dest=",: , [26994,26995]"/>
  <match src="uint256: uint256 [11778,11785]" dest="uint256: uint256 [11712,11719]"/>
  <match src="address: address [38054,38061]" dest="address: address [37852,37859]"/>
  <match src="identifier: target [14585,14591]" dest="identifier: target [14519,14525]"/>
  <match src="identifier: dataLen [34185,34192]" dest="identifier: dataLen [34051,34058]"/>
  <match src="identifier: token [50830,50835]" dest="identifier: token [50914,50919]"/>
  <match src="(: ( [30793,30794]" dest="(: ( [30659,30660]"/>
  <match src="return_type_definition [9399,9413]" dest="return_type_definition [9366,9380]"/>
  <match src="function_body [27042,27171]" dest="function_body [26908,27037]"/>
  <match src="assignment_expression [33784,33795]" dest="assignment_expression [33650,33661]"/>
  <match src="string [17753,17793]" dest="string [17687,17727]"/>
  <match src=",: , [49560,49561]" dest=",: , [49644,49645]"/>
  <match src=".: . [29294,29295]" dest=".: . [29160,29161]"/>
  <match src="parameter [41947,41962]" dest="parameter [41745,41760]"/>
  <match src="address: address [12886,12893]" dest="address: address [12820,12827]"/>
  <match src="yul_hex_number: 0x20 [30395,30399]" dest="yul_hex_number: 0x20 [30261,30265]"/>
  <match src="identifier: _ [27844,27845]" dest="identifier: _ [27709,27710]"/>
  <match src="sub: sub [31535,31538]" dest="sub: sub [31401,31404]"/>
  <match src="call_expression [50620,50797]" dest="call_expression [50704,50881]"/>
  <match src="identifier: RLPReader [45540,45549]" dest="identifier: RLPReader [45338,45347]"/>
  <match src="(: ( [27794,27795]" dest="(: ( [27659,27660]"/>
  <match src="parameter [24177,24189]" dest="parameter [24043,24055]"/>
  <match src="): ) [14543,14544]" dest="): ) [14477,14478]"/>
  <match src="&quot;: &quot; [33425,33426]" dest="&quot;: &quot; [33291,33292]"/>
  <match src="function_definition [29773,30061]" dest="function_definition [29639,29927]"/>
  <match src="identifier: memPtr [31772,31778]" dest="identifier: memPtr [31638,31644]"/>
  <match src="=: = [33863,33864]" dest="=: = [33729,33730]"/>
  <match src="{: { [14545,14546]" dest="{: { [14479,14480]"/>
  <match src="memory: memory [17661,17667]" dest="memory: memory [17595,17601]"/>
  <match src="identifier: role [27124,27128]" dest="identifier: role [26990,26994]"/>
  <match src="call_argument [24615,24660]" dest="call_argument [24481,24526]"/>
  <match src="parameter [40379,40389]" dest="parameter [40177,40187]"/>
  <match src="identifier: adminRole [21456,21465]" dest="identifier: adminRole [21322,21331]"/>
  <match src="event_paramater [37803,37824]" dest="event_paramater [37601,37622]"/>
  <match src="type_name [27200,27207]" dest="type_name [27066,27073]"/>
  <match src="returns: returns [38235,38242]" dest="returns: returns [38033,38040]"/>
  <match src="call_argument [53773,53823]" dest="call_argument [54007,54057]"/>
  <match src=".: . [4650,4651]" dest=".: . [4617,4618]"/>
  <match src="identifier: at [10570,10572]" dest="identifier: at [10537,10539]"/>
  <match src="identifier: Bytes32Set [5839,5849]" dest="identifier: Bytes32Set [5806,5816]"/>
  <match src="yul_identifier [36270,36274]" dest="yul_identifier [36136,36140]"/>
  <match src="): ) [54577,54578]" dest="): ) [54811,54812]"/>
  <match src="identifier: getRoleAdmin [24164,24176]" dest="identifier: getRoleAdmin [24030,24042]"/>
  <match src="(: ( [15926,15927]" dest="(: ( [15860,15861]"/>
  <match src="identifier: role [27731,27735]" dest="identifier: role [27596,27600]"/>
  <match src="storage: storage [9672,9679]" dest="storage: storage [9639,9646]"/>
  <match src="bytes: bytes [14466,14471]" dest="bytes: bytes [14400,14405]"/>
  <match src="}: } [36373,36374]" dest="}: } [36239,36240]"/>
  <match src="visibility [8030,8038]" dest="visibility [7997,8005]"/>
  <match src="solidity_version_comparison_operator [1076,1078]" dest="solidity_version_comparison_operator [1043,1045]"/>
  <match src="if: if [18305,18307]" dest="if: if [18239,18241]"/>
  <match src=",: , [46940,46941]" dest=",: , [46738,46739]"/>
  <match src="primitive_type [6127,6131]" dest="primitive_type [6094,6098]"/>
  <match src="{: { [27239,27240]" dest="{: { [27105,27106]"/>
  <match src="): ) [27795,27796]" dest="): ) [27660,27661]"/>
  <match src="primitive_type [54008,54015]" dest="primitive_type [54242,54249]"/>
  <match src="]: ] [51285,51286]" dest="]: ] [51441,51442]"/>
  <match src="-=: -= [35832,35834]" dest="-=: -= [35698,35700]"/>
  <match src="binary_expression [33204,33226]" dest="binary_expression [33070,33092]"/>
  <match src="): ) [40406,40407]" dest="): ) [40204,40205]"/>
  <match src="identifier: operator [41262,41270]" dest="identifier: operator [41060,41068]"/>
  <match src="identifier: len [31543,31546]" dest="identifier: len [31409,31412]"/>
  <match src="public: public [45921,45927]" dest="public: public [45719,45725]"/>
  <match src="identifier: memPtr [28728,28734]" dest="identifier: memPtr [28594,28600]"/>
  <match src="solidity: solidity [43579,43587]" dest="solidity: solidity [43378,43386]"/>
  <match src="call_expression [54141,54281]" dest="call_expression [54375,54515]"/>
  <match src="): ) [11896,11897]" dest="): ) [11830,11831]"/>
  <match src="bytes32: bytes32 [22626,22633]" dest="bytes32: bytes32 [22492,22499]"/>
  <match src="identifier: set [7679,7682]" dest="identifier: set [7646,7649]"/>
  <match src="): ) [25791,25792]" dest="): ) [25657,25658]"/>
  <match src="): ) [33840,33841]" dest="): ) [33706,33707]"/>
  <match src="identifier: adminRole [24636,24645]" dest="identifier: adminRole [24502,24511]"/>
  <match src="call_argument [48475,48484]" dest="call_argument [48559,48568]"/>
  <match src="function: function [9648,9656]" dest="function: function [9615,9623]"/>
  <match src="internal: internal [30213,30221]" dest="internal: internal [30079,30087]"/>
  <match src="identifier: dataLen [34735,34742]" dest="identifier: dataLen [34601,34608]"/>
  <match src="identifier: success [17970,17977]" dest="identifier: success [17904,17911]"/>
  <match src="type_name [32851,32858]" dest="type_name [32717,32724]"/>
  <match src="type_name [21405,21429]" dest="type_name [21271,21295]"/>
  <match src="member_expression [3017,3035]" dest="member_expression [2984,3002]"/>
  <match src="function: function [24531,24539]" dest="function: function [24397,24405]"/>
  <match src="function_definition [12867,13264]" dest="function_definition [12801,13198]"/>
  <match src="visibility [24581,24587]" dest="visibility [24447,24453]"/>
  <match src="struct: struct [28397,28403]" dest="struct: struct [28263,28269]"/>
  <match src="): ) [41046,41047]" dest="): ) [40844,40845]"/>
  <match src="(: ( [854,855]" dest="(: ( [854,855]"/>
  <match src="identifier: result [32509,32515]" dest="identifier: result [32375,32381]"/>
  <match src="): ) [35239,35240]" dest="): ) [35105,35106]"/>
  <match src="comment: // If token was minted on L2 [52612,52640]" dest="comment: // If token was minted on L2 [52768,52796]"/>
  <match src=",: , [39844,39845]" dest=",: , [39642,39643]"/>
  <match src="pragma: pragma [19886,19892]" dest="pragma: pragma [18759,18765]"/>
  <match src="(: ( [8107,8108]" dest="(: ( [8074,8075]"/>
  <match src="type_name [8261,8268]" dest="type_name [8228,8235]"/>
  <match src="return_type_definition [23156,23173]" dest="return_type_definition [23022,23039]"/>
  <match src="identifier: DEFAULT_ADMIN_ROLE [47185,47203]" dest="identifier: DEFAULT_ADMIN_ROLE [47269,47287]"/>
  <match src="identifier: members [23205,23212]" dest="identifier: members [23071,23078]"/>
  <match src="variable_declaration_statement [52180,52210]" dest="variable_declaration_statement [52336,52366]"/>
  <match src="variable_declaration [48300,48315]" dest="variable_declaration [48384,48399]"/>
  <match src="type_cast_expression [15640,15653]" dest="type_cast_expression [15574,15587]"/>
  <match src="uint256: uint256 [39253,39260]" dest="uint256: uint256 [39051,39058]"/>
  <match src="{: { [24221,24222]" dest="{: { [24087,24088]"/>
  <match src="type_name [38429,38436]" dest="type_name [38227,38234]"/>
  <match src="&gt;=:  &gt;= [1068,1071]" dest="&gt;=:  &gt;= [1035,1038]"/>
  <match src="function_definition [47052,47263]" dest="function_definition [47136,47347]"/>
  <match src="identifier: set [5175,5178]" dest="identifier: set [5142,5145]"/>
  <match src="function_body [25069,25233]" dest="function_body [24935,25099]"/>
  <match src="[: [ [27063,27064]" dest="[: [ [26929,26930]"/>
  <match src="): ) [9775,9776]" dest="): ) [9742,9743]"/>
  <match src="parameter [8048,8052]" dest="parameter [8015,8019]"/>
  <match src="identifier: memPtr [34206,34212]" dest="identifier: memPtr [34072,34078]"/>
  <match src="type_name [15064,15071]" dest="type_name [14998,15005]"/>
  <match src="): ) [4655,4656]" dest="): ) [4622,4623]"/>
  <match src="false [3101,3106]" dest="false [3068,3073]"/>
  <match src="state_variable_declaration [21534,21584]" dest="state_variable_declaration [21400,21450]"/>
  <match src=",: , [36329,36330]" dest=",: , [36195,36196]"/>
  <match src="event_definition [21897,22007]" dest="event_definition [21763,21873]"/>
  <match src="): ) [35912,35913]" dest="): ) [35778,35779]"/>
  <match src="]: ] [49587,49588]" dest="]: ] [49671,49672]"/>
  <match src="binary_expression [33865,33891]" dest="binary_expression [33731,33757]"/>
  <match src="identifier: add [6066,6069]" dest="identifier: add [6033,6036]"/>
  <match src="identifier: sender [44924,44930]" dest="identifier: sender [44722,44728]"/>
  <match src="function_body [6873,6918]" dest="function_body [6840,6885]"/>
  <match src="type_name [9718,9722]" dest="type_name [9685,9689]"/>
  <match src="type_name [15872,15877]" dest="type_name [15806,15811]"/>
  <match src="call_argument [14599,14600]" dest="call_argument [14533,14534]"/>
  <match src="]: ] [23203,23204]" dest="]: ] [23069,23070]"/>
  <match src="identifier: _setupRole [26541,26551]" dest="identifier: _setupRole [26407,26417]"/>
  <match src="function: function [829,837]" dest="function: function [829,837]"/>
  <match src="variable_declaration_statement [52010,52043]" dest="variable_declaration_statement [52166,52199]"/>
  <match src="returns: returns [6422,6429]" dest="returns: returns [6389,6396]"/>
  <match src="memory: memory [15878,15884]" dest="memory: memory [15812,15818]"/>
  <match src=",: , [7756,7757]" dest=",: , [7723,7724]"/>
  <match src="emit_statement [48449,48523]" dest="emit_statement [48533,48607]"/>
  <match src="(: ( [11888,11889]" dest="(: ( [11822,11823]"/>
  <match src="type_name [46987,46994]" dest="type_name [46785,46792]"/>
  <match src="primitive_type [17225,17232]" dest="primitive_type [17159,17166]"/>
  <match src="user_defined_type [21501,21509]" dest="user_defined_type [21367,21375]"/>
  <match src="comment: /**      * @dev Returns the number of accounts that have `role`. Can be used      * together with {getRoleMember} to enumerate all bearers of a role.      */ [22936,23096]" dest="comment: /**      * @dev Returns the number of accounts that have `role`. Can be used      * together with {getRoleMember} to enumerate all bearers of a role.      */ [22802,22962]"/>
  <match src="address: address [42466,42473]" dest="address: address [42265,42272]"/>
  <match src="type_name [28947,28954]" dest="type_name [28813,28820]"/>
  <match src="(: ( [34368,34369]" dest="(: ( [34234,34235]"/>
  <match src="comment: // The value is stored at length-1, but we add 1 to all indexes [2872,2935]" dest="comment: // The value is stored at length-1, but we add 1 to all indexes [2839,2902]"/>
  <match src="number_literal: 2 [50670,50671]" dest="number_literal: 2 [50754,50755]"/>
  <match src="else: else [34460,34464]" dest="else: else [34326,34330]"/>
  <match src="bytes32: bytes32 [23851,23858]" dest="bytes32: bytes32 [23717,23724]"/>
  <match src="identifier: value [2750,2755]" dest="identifier: value [2717,2722]"/>
  <match src="memory: memory [14537,14543]" dest="memory: memory [14471,14477]"/>
  <match src="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [13272,14019]" dest="comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain`call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [13206,13953]"/>
  <match src="&quot;: &quot; [30609,30610]" dest="&quot;: &quot; [30475,30476]"/>
  <match src="memory: memory [15533,15539]" dest="memory: memory [15467,15473]"/>
  <match src="identifier: _inner [10675,10681]" dest="identifier: _inner [10642,10648]"/>
  <match src="identifier: remove [7984,7990]" dest="identifier: remove [7951,7957]"/>
  <match src="{: { [54122,54123]" dest="{: { [54356,54357]"/>
  <match src="type_name [8535,8542]" dest="type_name [8502,8509]"/>
  <match src="function_body [23174,23229]" dest="function_body [23040,23095]"/>
  <match src="parameter [35634,35645]" dest="parameter [35500,35511]"/>
  <match src="): ) [34392,34393]" dest="): ) [34258,34259]"/>
  <match src="identifier: set [8333,8336]" dest="identifier: set [8300,8303]"/>
  <match src="{: { [43769,43770]" dest="{: { [43567,43568]"/>
  <match src="if: if [33811,33813]" dest="if: if [33677,33679]"/>
  <match src="): ) [27692,27693]" dest="): ) [27557,27558]"/>
  <match src="identifier: _itemLength [29233,29244]" dest="identifier: _itemLength [29099,29110]"/>
  <match src="call_expression [29233,29257]" dest="call_expression [29099,29123]"/>
  <match src="): ) [25132,25133]" dest="): ) [24998,24999]"/>
  <match src="type_name [7451,7454]" dest="type_name [7418,7421]"/>
  <match src="identifier: returndata [18309,18319]" dest="identifier: returndata [18243,18253]"/>
  <match src="solidity: solidity [18865,18873]" dest="solidity: solidity [19761,19769]"/>
  <match src="binary_expression [25827,25850]" dest="binary_expression [25693,25716]"/>
  <match src="identifier: abi [54550,54553]" dest="identifier: abi [54784,54787]"/>
  <match src="identifier: result [31995,32001]" dest="identifier: result [31861,31867]"/>
  <match src="pragma_directive [28126,28148]" dest="pragma_directive [27991,28014]"/>
  <match src="}: } [18682,18683]" dest="}: } [18616,18617]"/>
  <match src="override_specifier [47473,47481]" dest="override_specifier [47557,47565]"/>
  <match src=",: , [871,872]" dest=",: , [871,872]"/>
  <match src="comment: // topic1 is from address [50579,50604]" dest="comment: // topic1 is from address [50663,50688]"/>
  <match src="identifier: this [49570,49574]" dest="identifier: this [49654,49658]"/>
  <match src="identifier: _values [3981,3988]" dest="identifier: _values [3948,3955]"/>
  <match src="parenthesized_expression [54570,54577]" dest="parenthesized_expression [54804,54811]"/>
  <match src="type_name [9910,9917]" dest="type_name [9877,9884]"/>
  <match src="comment: /**      * @dev Returns the number of tokens in ``owner``'s account.      */ [38103,38181]" dest="comment: /**      * @dev Returns the number of tokens in ``owner``'s account.      */ [37901,37979]"/>
  <match src="identifier: interfaceId [37211,37222]" dest="identifier: interfaceId [37044,37055]"/>
  <match src="identifier: logTopicRLPList [50451,50466]" dest="identifier: logTopicRLPList [50535,50550]"/>
  <match src="): ) [25940,25941]" dest="): ) [25806,25807]"/>
  <match src="(: ( [16331,16332]" dest="(: ( [16265,16266]"/>
  <match src="(: ( [10162,10163]" dest="(: ( [10129,10130]"/>
  <match src="function: function [19436,19444]" dest="function: function [19337,19345]"/>
  <match src="call_argument [31798,31820]" dest="call_argument [31664,31686]"/>
  <match src="interface: interface [43743,43752]" dest="interface: interface [43541,43550]"/>
  <match src="primitive_type [22820,22827]" dest="primitive_type [22686,22693]"/>
  <match src="identifier: data [919,923]" dest="identifier: data [919,923]"/>
  <match src="==: == [48276,48278]" dest="==: == [48360,48362]"/>
  <match src="+: + [35434,35435]" dest="+: + [35300,35301]"/>
  <match src="(: ( [46862,46863]" dest="(: ( [46660,46661]"/>
  <match src="}: } [9784,9785]" dest="}: } [9751,9752]"/>
  <match src="exp: exp [34215,34218]" dest="exp: exp [34081,34084]"/>
  <match src="[: [ [46994,46995]" dest="[: [ [46792,46793]"/>
  <match src="comment: /**      * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.      *      * See {setApprovalForAll}      */ [41065,41207]" dest="comment: /**      * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.      *      * See {setApprovalForAll}      */ [40863,41005]"/>
  <match src="call_argument [32673,32680]" dest="call_argument [32539,32546]"/>
  <match src="parenthesized_expression [35175,35229]" dest="parenthesized_expression [35041,35095]"/>
  <match src="comment: // being explicit [35308,35325]" dest="comment: // being explicit [35174,35191]"/>
  <match src="returns: returns [19480,19487]" dest="returns: returns [19381,19388]"/>
  <match src="library: library [1799,1806]" dest="library: library [1766,1773]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [6497,6569]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [6464,6536]"/>
  <match src="user_defined_type [27489,27502]" dest="user_defined_type [27354,27367]"/>
  <match src="type_cast_expression [9762,9776]" dest="type_cast_expression [9729,9743]"/>
  <match src="identifier: memPtr [32278,32284]" dest="identifier: memPtr [32144,32150]"/>
  <match src="pragma_directive [104,135]" dest="pragma_directive [104,135]"/>
  <match src="state_variable_declaration [28224,28264]" dest="state_variable_declaration [28090,28130]"/>
  <match src="call_argument [15752,15783]" dest="call_argument [15686,15717]"/>
  <match src="primitive_type [41032,41036]" dest="primitive_type [40830,40834]"/>
  <match src="function_definition [35610,36371]" dest="function_definition [35476,36237]"/>
  <match src="identifier: balance [15654,15661]" dest="identifier: balance [15588,15595]"/>
  <match src="using_directive [45520,45558]" dest="using_directive [45318,45356]"/>
  <match src="user_defined_type [42113,42120]" dest="user_defined_type [41912,41919]"/>
  <match src="bytes: bytes [48097,48102]" dest="bytes: bytes [48181,48186]"/>
  <match src="function: function [6057,6065]" dest="function: function [6024,6032]"/>
  <match src="function: function [7975,7983]" dest="function: function [7942,7950]"/>
  <match src="call_argument [9762,9776]" dest="call_argument [9729,9743]"/>
  <match src="(: ( [27281,27282]" dest="(: ( [27147,27148]"/>
  <match src="visibility [43473,43481]" dest="visibility [43272,43280]"/>
  <match src="solidity: solidity [10801,10809]" dest="solidity: solidity [10735,10743]"/>
  <match src="identifier: byte0 [33698,33703]" dest="identifier: byte0 [33564,33569]"/>
  <match src="type_name [3485,3492]" dest="type_name [3452,3459]"/>
  <match src="&lt;:  &lt; [10817,10819]" dest="&lt;:  &lt; [10751,10753]"/>
  <match src="storage: storage [4954,4961]" dest="storage: storage [4921,4928]"/>
  <match src="type_name [44941,44948]" dest="type_name [44739,44746]"/>
  <match src="yul_identifier [36344,36351]" dest="yul_identifier [36210,36217]"/>
  <match src="event_definition [38010,38095]" dest="event_definition [37808,37893]"/>
  <match src="identifier: dest [35975,35979]" dest="identifier: dest [35841,35845]"/>
  <match src="type_cast_expression [53668,53704]" dest="type_cast_expression [53902,53938]"/>
  <match src=".: . [3028,3029]" dest=".: . [2995,2996]"/>
  <match src="primitive_type [7758,7765]" dest="primitive_type [7725,7732]"/>
  <match src="{: { [52589,52590]" dest="{: { [52745,52746]"/>
  <match src="return_type_definition [8526,8543]" dest="return_type_definition [8493,8510]"/>
  <match src="): ) [15077,15078]" dest="): ) [15011,15012]"/>
  <match src="bytes32: bytes32 [5666,5673]" dest="bytes32: bytes32 [5633,5640]"/>
  <match src="type_name [22289,22296]" dest="type_name [22155,22162]"/>
  <match src="{: { [4799,4800]" dest="{: { [4766,4767]"/>
  <match src="parameter [31670,31689]" dest="parameter [31536,31555]"/>
  <match src="{: { [42121,42122]" dest="{: { [41920,41921]"/>
  <match src="mstore: mstore [36318,36324]" dest="mstore: mstore [36184,36190]"/>
  <match src="else: else [18684,18688]" dest="else: else [18618,18622]"/>
  <match src="function_body [26849,26975]" dest="function_body [26715,26841]"/>
  <match src="visibility [30853,30861]" dest="visibility [30719,30727]"/>
  <match src="): ) [49588,49589]" dest="): ) [49672,49673]"/>
  <match src="identifier: _roles [27057,27063]" dest="identifier: _roles [26923,26929]"/>
  <match src="string [15172,15215]" dest="string [15106,15149]"/>
  <match src="identifier: adminRole [26821,26830]" dest="identifier: adminRole [26687,26696]"/>
  <match src="identifier: RLPItem [28824,28831]" dest="identifier: RLPItem [28690,28697]"/>
  <match src="function_definition [6358,6489]" dest="function_definition [6325,6456]"/>
  <match src="parameter [7298,7311]" dest="parameter [7265,7278]"/>
  <match src=",: , [14464,14465]" dest=",: , [14398,14399]"/>
  <match src="return_statement [14556,14616]" dest="return_statement [14490,14550]"/>
  <match src="primitive_type [15064,15071]" dest="primitive_type [14998,15005]"/>
  <match src="(: ( [9407,9408]" dest="(: ( [9374,9375]"/>
  <match src="true: true [3057,3061]" dest="true: true [3024,3028]"/>
  <match src="type_name [30284,30289]" dest="type_name [30150,30155]"/>
  <match src="function: function [35610,35618]" dest="function: function [35476,35484]"/>
  <match src="bool: bool [3367,3371]" dest="bool: bool [3334,3338]"/>
  <match src="function: function [22789,22797]" dest="function: function [22655,22663]"/>
  <match src="(: ( [52429,52430]" dest="(: ( [52585,52586]"/>
  <match src="): ) [54506,54507]" dest="): ) [54740,54741]"/>
  <match src="comment: // limit batching of tokens due to gas limit restrictions [46537,46594]" dest="comment: // limit batching of tokens due to gas limit restrictions [46335,46392]"/>
  <match src="call_expression [24647,24659]" dest="call_expression [24513,24525]"/>
  <match src="}: } [27163,27164]" dest="}: } [27029,27030]"/>
  <match src="array_access [54026,54044]" dest="array_access [54260,54278]"/>
  <match src="): ) [52923,52924]" dest="): ) [53157,53158]"/>
  <match src="): ) [35293,35294]" dest="): ) [35159,35160]"/>
  <match src="{: { [30575,30576]" dest="{: { [30441,30442]"/>
  <match src="function_definition [7262,7393]" dest="function_definition [7229,7360]"/>
  <match src="(: ( [53780,53781]" dest="(: ( [54014,54015]"/>
  <match src="]: ] [23939,23940]" dest="]: ] [23805,23806]"/>
  <match src="(: ( [18571,18572]" dest="(: ( [18505,18506]"/>
  <match src="(: ( [6863,6864]" dest="(: ( [6830,6831]"/>
  <match src="comment: // If does, transfer token to withdrawer [52299,52339]" dest="comment: // If does, transfer token to withdrawer [52455,52495]"/>
  <match src="return: return [19517,19523]" dest="return: return [19418,19424]"/>
  <match src="identifier: tokenId [41955,41962]" dest="identifier: tokenId [41753,41760]"/>
  <match src="identifier: hasRole [25088,25095]" dest="identifier: hasRole [24954,24961]"/>
  <match src="variable_declaration_statement [54526,54579]" dest="variable_declaration_statement [54760,54813]"/>
  <match src="): ) [32227,32228]" dest="): ) [32093,32094]"/>
  <match src="byte: byte [33707,33711]" dest="byte: byte [33573,33577]"/>
  <match src="binary_expression [35063,35089]" dest="binary_expression [34929,34955]"/>
  <match src="(: ( [33308,33309]" dest="(: ( [33174,33175]"/>
  <match src="parameter [24550,24562]" dest="parameter [24416,24428]"/>
  <match src="identifier: byte0 [34369,34374]" dest="identifier: byte0 [34235,34240]"/>
  <match src="bytes: bytes [32522,32527]" dest="bytes: bytes [32388,32393]"/>
  <match src="=: = [34417,34418]" dest="=: = [34283,34284]"/>
  <match src="type_name [6127,6131]" dest="type_name [6094,6098]"/>
  <match src="yul_identifier [34652,34659]" dest="yul_identifier [34518,34525]"/>
  <match src="variable_declaration_statement [32382,32427]" dest="variable_declaration_statement [32248,32293]"/>
  <match src="visibility [46094,46100]" dest="visibility [45892,45898]"/>
  <match src="comment: // Transferring token to this address, which will be [48539,48591]" dest="comment: // Transferring token to this address, which will be [48623,48675]"/>
  <match src="&lt;: &lt; [33252,33253]" dest="&lt;: &lt; [33118,33119]"/>
  <match src="type_name [43146,43151]" dest="type_name [42945,42950]"/>
  <match src=".: . [32655,32656]" dest=".: . [32521,32522]"/>
  <match src="parameter [38469,38482]" dest="parameter [38267,38280]"/>
  <match src="]: ] [48831,48832]" dest="]: ] [48915,48916]"/>
  <match src="): ) [36212,36213]" dest="): ) [36078,36079]"/>
  <match src="member_expression [2834,2850]" dest="member_expression [2801,2817]"/>
  <match src="identifier: size [11869,11873]" dest="identifier: size [11803,11807]"/>
  <match src="identifier: i [52142,52143]" dest="identifier: i [52298,52299]"/>
  <match src="call_expression [24615,24660]" dest="call_expression [24481,24526]"/>
  <match src=",: , [27212,27213]" dest=",: , [27078,27079]"/>
  <match src="comment: // implementations (such as AddressSet) are just wrappers around the [2076,2144]" dest="comment: // implementations (such as AddressSet) are just wrappers around the [2043,2111]"/>
  <match src="else: else [33906,33910]" dest="else: else [33772,33776]"/>
  <match src="primitive_type [27568,27574]" dest="primitive_type [27433,27439]"/>
  <match src="external: external [37224,37232]" dest="external: external [37057,37065]"/>
  <match src="call_argument [5722,5758]" dest="call_argument [5689,5725]"/>
  <match src="call_argument [31822,31870]" dest="call_argument [31688,31736]"/>
  <match src="comment: // keccak256(&quot;TransferWithMetadata(address,address,uint256,bytes)&quot;) [46210,46277]" dest="comment: // keccak256(&quot;TransferWithMetadata(address,address,uint256,bytes)&quot;) [46008,46075]"/>
  <match src="yul_identifier [18572,18582]" dest="yul_identifier [18506,18516]"/>
  <match src="type_name [14466,14471]" dest="type_name [14400,14405]"/>
  <match src="comment: // add `isList` check if `item` is expected to be passsed without a check from calling function [32914,33009]" dest="comment: // add `isList` check if `item` is expected to be passsed without a check from calling function [32780,32875]"/>
  <match src="function: function [7647,7655]" dest="function: function [7614,7622]"/>
  <match src="call_argument [27124,27128]" dest="call_argument [26990,26994]"/>
  <match src="type_name [16614,16621]" dest="type_name [16548,16555]"/>
  <match src="identifier: returndata [18195,18205]" dest="identifier: returndata [18129,18139]"/>
  <match src="type_name [37247,37251]" dest="type_name [37080,37084]"/>
  <match src="&lt;:  &lt; [1076,1078]" dest="&lt;:  &lt; [1043,1045]"/>
  <match src="function: function [5146,5154]" dest="function: function [5113,5121]"/>
  <match src="{: { [8544,8545]" dest="{: { [8511,8512]"/>
  <match src="identifier: _values [5698,5705]" dest="identifier: _values [5665,5672]"/>
  <match src="constant: constant [28230,28238]" dest="constant: constant [28096,28104]"/>
  <match src="): ) [5673,5674]" dest="): ) [5640,5641]"/>
  <match src="{: { [34394,34395]" dest="{: { [34260,34261]"/>
  <match src="boolean_literal [4777,4781]" dest="boolean_literal [4744,4748]"/>
  <match src="return_type_definition [29824,29838]" dest="return_type_definition [29690,29704]"/>
  <match src="string [27663,27691]" dest="string [27528,27556]"/>
  <match src="unary_expression [4727,4746]" dest="unary_expression [4694,4713]"/>
  <match src="array_access [25096,25108]" dest="array_access [24962,24974]"/>
  <match src="call_expression [8323,8378]" dest="call_expression [8290,8345]"/>
  <match src="memory: memory [51944,51950]" dest="memory: memory [52100,52106]"/>
  <match src="type_name [42480,42487]" dest="type_name [42279,42286]"/>
  <match src="uint256: uint256 [46987,46994]" dest="uint256: uint256 [46785,46792]"/>
  <match src="primitive_type [38469,38476]" dest="primitive_type [38267,38274]"/>
  <match src="function_body [35711,36371]" dest="function_body [35577,36237]"/>
  <match src="parameter [5666,5673]" dest="parameter [5633,5640]"/>
  <match src="call_expression [29130,29144]" dest="call_expression [28996,29010]"/>
  <match src="(: ( [36191,36192]" dest="(: ( [36057,36058]"/>
  <match src="comment: /**      * @dev Returns the owner of the `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [38269,38406]" dest="comment: /**      * @dev Returns the owner of the `tokenId` token.      *      * Requirements:      *      * - `tokenId` must exist.      */ [38067,38204]"/>
  <match src="(: ( [33814,33815]" dest="(: ( [33680,33681]"/>
  <match src="): ) [27350,27351]" dest="): ) [27216,27217]"/>
  <match src="(: ( [8360,8361]" dest="(: ( [8327,8328]"/>
  <match src="uint256: uint256 [34937,34944]" dest="uint256: uint256 [34803,34810]"/>
  <match src="=: = [45783,45784]" dest="=: = [45581,45582]"/>
  <match src="identifier: functionCallWithValue [15489,15510]" dest="identifier: functionCallWithValue [15423,15444]"/>
  <match src="identifier: hasRole [22798,22805]" dest="identifier: hasRole [22664,22671]"/>
  <match src="variable_declaration_statement [33089,33107]" dest="variable_declaration_statement [32955,32973]"/>
  <match src="variable_declaration [51870,51890]" dest="variable_declaration [52026,52046]"/>
  <match src="augmented_assignment_expression [35828,35844]" dest="augmented_assignment_expression [35694,35710]"/>
  <match src="array_access [4487,4510]" dest="array_access [4454,4477]"/>
  <match src=".: . [50241,50242]" dest=".: . [50325,50326]"/>
  <match src="storage: storage [3322,3329]" dest="storage: storage [3289,3296]"/>
  <match src="primitive_type [33566,33573]" dest="primitive_type [33432,33439]"/>
  <match src="primitive_type [51729,51736]" dest="primitive_type [51885,51892]"/>
  <match src="identifier: listLength [29276,29286]" dest="identifier: listLength [29142,29152]"/>
  <match src="(: ( [32303,32304]" dest="(: ( [32169,32170]"/>
  <match src="yul_function_call [36318,36353]" dest="yul_function_call [36184,36219]"/>
  <match src="type_name [8945,8955]" dest="type_name [8912,8922]"/>
  <match src="storage: storage [8956,8963]" dest="storage: storage [8923,8930]"/>
  <match src="): ) [51324,51325]" dest="): ) [51480,51481]"/>
  <match src="(: ( [4949,4950]" dest="(: ( [4916,4917]"/>
  <match src="block_statement [3079,3118]" dest="block_statement [3046,3085]"/>
  <match src="member_expression [4639,4654]" dest="member_expression [4606,4621]"/>
  <match src="=: = [33103,33104]" dest="=: = [32969,32970]"/>
  <match src="]: ] [50291,50292]" dest="]: ] [50375,50376]"/>
  <match src="identifier: approved [37842,37850]" dest="identifier: approved [37640,37648]"/>
  <match src="call_argument [10671,10681]" dest="call_argument [10638,10648]"/>
  <match src="{: { [9954,9955]" dest="{: { [9921,9922]"/>
  <match src="function_body [29839,30061]" dest="function_body [29705,29927]"/>
  <match src="comment: // Move the last value to the index where the value to delete is [4303,4367]" dest="comment: // Move the last value to the index where the value to delete is [4270,4334]"/>
  <match src=",: , [16751,16752]" dest=",: , [16685,16686]"/>
  <match src="call_expression [9972,10009]" dest="call_expression [9939,9976]"/>
  <match src="override_specifier [50145,50153]" dest="override_specifier [50229,50237]"/>
  <match src="primitive_type [24212,24219]" dest="primitive_type [24078,24085]"/>
  <match src="expression_statement [30699,30760]" dest="expression_statement [30565,30626]"/>
  <match src=".: . [6692,6693]" dest=".: . [6659,6660]"/>
  <match src="address: address [17619,17626]" dest="address: address [17553,17560]"/>
  <match src="yul_identifier [34605,34612]" dest="yul_identifier [34471,34478]"/>
  <match src="identifier: adminRole [26958,26967]" dest="identifier: adminRole [26824,26833]"/>
  <match src="type_name [15607,15612]" dest="type_name [15541,15546]"/>
  <match src="return: return [9027,9033]" dest="return: return [8994,9000]"/>
  <match src="storage: storage [7671,7678]" dest="storage: storage [7638,7645]"/>
  <match src="string_literal [15172,15215]" dest="string_literal [15106,15149]"/>
  <match src="call_argument [24662,24711]" dest="call_argument [24528,24577]"/>
  <match src="let: let [33984,33987]" dest="let: let [33850,33853]"/>
  <match src="augmented_assignment_expression [35975,35992]" dest="augmented_assignment_expression [35841,35858]"/>
  <match src="comment: // To implement this library for multiple types with as little code [1828,1895]" dest="comment: // To implement this library for multiple types with as little code [1795,1862]"/>
  <match src="&quot;: &quot; [31123,31124]" dest="&quot;: &quot; [30989,30990]"/>
  <match src="indexed: indexed [46694,46701]" dest="indexed: indexed [46492,46499]"/>
  <match src="(: ( [16699,16700]" dest="(: ( [16633,16634]"/>
  <match src="expression_statement [29470,29480]" dest="expression_statement [29336,29346]"/>
  <match src="emit_statement [26860,26923]" dest="emit_statement [26726,26789]"/>
  <match src="identifier: RoleGranted [27112,27123]" dest="identifier: RoleGranted [26978,26989]"/>
  <match src="array_access [53676,53694]" dest="array_access [53910,53928]"/>
  <match src="primitive_type [41254,41261]" dest="primitive_type [41052,41059]"/>
  <match src=".: . [51966,51967]" dest=".: . [52122,52123]"/>
  <match src="): ) [32870,32871]" dest="): ) [32736,32737]"/>
  <match src="visibility [5644,5651]" dest="visibility [5611,5618]"/>
  <match src="memory: memory [16886,16892]" dest="memory: memory [16820,16826]"/>
  <match src="type_name [27003,27010]" dest="type_name [26869,26876]"/>
  <match src="(: ( [52770,52771]" dest="(: ( [52926,52927]"/>
  <match src="return: return [15122,15128]" dest="return: return [15056,15062]"/>
  <match src="identifier: set [5028,5031]" dest="identifier: set [4995,4998]"/>
  <match src="if_statement [3538,4838]" dest="if_statement [3505,4805]"/>
  <match src="type_name [9375,9382]" dest="type_name [9342,9349]"/>
  <match src="): ) [32190,32191]" dest="): ) [32056,32057]"/>
  <match src="struct_declaration [21378,21473]" dest="struct_declaration [21244,21339]"/>
  <match src="uint256: uint256 [52180,52187]" dest="uint256: uint256 [52336,52343]"/>
  <match src="identifier: _inner [6693,6699]" dest="identifier: _inner [6660,6666]"/>
  <match src="]: ] [4509,4510]" dest="]: ] [4476,4477]"/>
  <match src="(: ( [28946,28947]" dest="(: ( [28812,28813]"/>
  <match src="address: address [39832,39839]" dest="address: address [39630,39637]"/>
  <match src="function_body [8544,8589]" dest="function_body [8511,8556]"/>
  <match src="(: ( [5693,5694]" dest="(: ( [5660,5661]"/>
  <match src="identifier: lockTokens [47986,47996]" dest="identifier: lockTokens [48070,48080]"/>
  <match src="&quot;: &quot; [50739,50740]" dest="&quot;: &quot; [50823,50824]"/>
  <match src="identifier: revokeRole [25012,25022]" dest="identifier: revokeRole [24878,24888]"/>
  <match src="identifier: tokenId [48730,48737]" dest="identifier: tokenId [48814,48821]"/>
  <match src="identifier: itemLen [34720,34727]" dest="identifier: itemLen [34586,34593]"/>
  <match src=",: , [13126,13127]" dest=",: , [13060,13061]"/>
  <match src="else: else [34360,34364]" dest="else: else [34226,34230]"/>
  <match src=",: , [24740,24741]" dest=",: , [24606,24607]"/>
  <match src="): ) [31021,31022]" dest="): ) [30887,30888]"/>
  <match src="identifier: set [8507,8510]" dest="identifier: set [8474,8477]"/>
  <match src="variable_declaration [50881,50896]" dest="variable_declaration [50965,50980]"/>
  <match src="=: = [53666,53667]" dest="=: = [53900,53901]"/>
  <match src="return_statement [33473,33486]" dest="return_statement [33339,33352]"/>
  <match src="yul_evm_builtin [35889,35895]" dest="yul_evm_builtin [35755,35761]"/>
  <match src="type_name [41935,41942]" dest="type_name [41733,41740]"/>
  <match src="true [30049,30053]" dest="true [29915,29919]"/>
  <match src="{: { [2780,2781]" dest="{: { [2747,2748]"/>
  <match src=",: , [27328,27329]" dest=",: , [27194,27195]"/>
  <match src="identifier: RoleRevoked [27312,27323]" dest="identifier: RoleRevoked [27178,27189]"/>
  <match src="call_expression [50451,50478]" dest="call_expression [50535,50562]"/>
  <match src="identifier: hasRole [27770,27777]" dest="identifier: hasRole [27635,27642]"/>
  <match src="identifier: require [50620,50627]" dest="identifier: require [50704,50711]"/>
  <match src="return_type_definition [31705,31722]" dest="return_type_definition [31571,31588]"/>
  <match src="bytes32: bytes32 [3335,3342]" dest="bytes32: bytes32 [3302,3309]"/>
  <match src="call_argument [51758,51785]" dest="call_argument [51914,51941]"/>
  <match src=".: . [27274,27275]" dest=".: . [27140,27141]"/>
  <match src="identifier: byte0 [34419,34424]" dest="identifier: byte0 [34285,34290]"/>
  <match src="identifier: len [32323,32326]" dest="identifier: len [32189,32192]"/>
  <match src="storage: storage [5167,5174]" dest="storage: storage [5134,5141]"/>
  <match src="identifier: isApprovedForAll [41222,41238]" dest="identifier: isApprovedForAll [41020,41036]"/>
  <match src="parameter [15546,15559]" dest="parameter [15480,15493]"/>
  <match src="return_type_definition [41286,41300]" dest="return_type_definition [41084,41098]"/>
  <match src="internal: internal [8984,8992]" dest="internal: internal [8951,8959]"/>
  <match src="identifier: len [32528,32531]" dest="identifier: len [32394,32397]"/>
  <match src="identifier: EnumerableSet [21313,21326]" dest="identifier: EnumerableSet [21179,21192]"/>
  <match src="expression_statement [27614,27694]" dest="expression_statement [27479,27559]"/>
  <match src="comment: // skip over an item [33319,33339]" dest="comment: // skip over an item [33185,33205]"/>
  <match src="bytes32: bytes32 [25023,25030]" dest="bytes32: bytes32 [24889,24896]"/>
  <match src="(: ( [38205,38206]" dest="(: ( [38003,38004]"/>
  <match src="identifier: item [29245,29249]" dest="identifier: item [29111,29115]"/>
  <match src="[: [ [29162,29163]" dest="[: [ [29028,29029]"/>
  <match src="call_expression [30699,30759]" dest="call_expression [30565,30625]"/>
  <match src="primitive_type [27627,27633]" dest="primitive_type [27492,27498]"/>
  <match src="): ) [27089,27090]" dest="): ) [26955,26956]"/>
  <match src="(: ( [23951,23952]" dest="(: ( [23817,23818]"/>
  <match src="function: function [39810,39818]" dest="function: function [39608,39616]"/>
  <match src="identifier: length [49235,49241]" dest="identifier: length [49319,49325]"/>
  <match src="type_name [28445,28452]" dest="type_name [28311,28318]"/>
  <match src="yul_function_call [11877,11897]" dest="yul_function_call [11811,11831]"/>
  <match src="identifier: newAdminRole [21993,22005]" dest="identifier: newAdminRole [21859,21871]"/>
  <match src=",: , [21975,21976]" dest=",: , [21841,21842]"/>
  <match src="{: { [33683,33684]" dest="{: { [33549,33550]"/>
  <match src="storage: storage [6828,6835]" dest="storage: storage [6795,6802]"/>
  <match src="primitive_type [39832,39839]" dest="primitive_type [39630,39637]"/>
  <match src="parameter [18061,18084]" dest="parameter [17995,18018]"/>
  <match src="}: } [49606,49607]" dest="}: } [49690,49691]"/>
  <match src="returns: returns [3358,3365]" dest="returns: returns [3325,3332]"/>
  <match src="identifier: currPtr [33309,33316]" dest="identifier: currPtr [33175,33182]"/>
  <match src="solidity_version: 0.6.2 [37374,37379]" dest="solidity_version: 0.6.2 [37174,37179]"/>
  <match src="function_body [24596,24758]" dest="function_body [24462,24624]"/>
  <match src="identifier: _values [3021,3028]" dest="identifier: _values [2988,2995]"/>
  <match src="identifier: safeTransferFrom [39210,39226]" dest="identifier: safeTransferFrom [39008,39024]"/>
  <match src="assembly_statement [11858,11899]" dest="assembly_statement [11792,11833]"/>
  <match src="identifier: result [31283,31289]" dest="identifier: result [31149,31155]"/>
  <match src="): ) [52886,52887]" dest="): ) [53120,53121]"/>
  <match src="array_access [50654,50672]" dest="array_access [50738,50756]"/>
  <match src=",: , [16878,16879]" dest=",: , [16812,16813]"/>
  <match src="identifier: depositor [48015,48024]" dest="identifier: depositor [48099,48108]"/>
  <match src="variable_declaration [33187,33201]" dest="variable_declaration [33053,33067]"/>
  <match src="type_name [17868,17872]" dest="type_name [17802,17806]"/>
  <match src="&quot;: &quot; [25135,25136]" dest="&quot;: &quot; [25001,25002]"/>
  <match src="(: ( [49522,49523]" dest="(: ( [49606,49607]"/>
  <match src="sub: sub [34523,34526]" dest="sub: sub [34389,34392]"/>
  <match src="payable: payable [19497,19504]" dest="payable: payable [19398,19405]"/>
  <match src="identifier: set [5624,5627]" dest="identifier: set [5591,5594]"/>
  <match src="comment: // Minting with metadata received from L2 i.e. emitted [54322,54376]" dest="comment: // Minting with metadata received from L2 i.e. emitted [54556,54610]"/>
  <match src="yul_hex_number: 0xb7 [34010,34014]" dest="yul_hex_number: 0xb7 [33876,33880]"/>
  <match src="identifier: target [15037,15043]" dest="identifier: target [14971,14977]"/>
  <match src="yul_function_call [33715,33728]" dest="yul_function_call [33581,33594]"/>
  <match src="(: ( [14449,14450]" dest="(: ( [14383,14384]"/>
  <match src="call_argument [32682,32685]" dest="call_argument [32548,32551]"/>
  <match src="): ) [50261,50262]" dest="): ) [50345,50346]"/>
  <match src="internal: internal [29810,29818]" dest="internal: internal [29676,29684]"/>
  <match src="identifier: toRlpItem [50242,50251]" dest="identifier: toRlpItem [50326,50335]"/>
  <match src="yul_path [34308,34315]" dest="yul_path [34174,34181]"/>
  <match src="!: ! [45191,45192]" dest="!: ! [44990,44991]"/>
  <match src="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event. Note that unlike {grantRole}, this function doesn't perform any      * checks on the calling account.      *      * [WARNING]      * ====      * This function should only be called from the constructor when setting      * up the initial roles for the system.      *      * Using this function in any other way is effectively circumventing the admin      * system imposed by {AccessControl}.      * ====      */ [25957,26526]" dest="comment: /**      * @dev Grants `role` to `account`.      *      * If `account` had not been already granted `role`, emits a {RoleGranted}      * event. Note that unlike {grantRole}, this function doesn't perform any      * checks on the calling account.      *      * [WARNING]      * ====      * This function should only be called from the constructor when setting      * up the initial roles for the system.      *      * Using this function in any other way is effectively circumventing the admin      * system imposed by {AccessControl}.      * ====      */ [25823,26392]"/>
  <match src="identifier: data [17648,17652]" dest="identifier: data [17582,17586]"/>
  <match src=".: . [50469,50470]" dest=".: . [50553,50554]"/>
  <match src="identifier: logTopicRLPList [50300,50315]" dest="identifier: logTopicRLPList [50384,50399]"/>
  <match src="solidity: solidity [45072,45080]" dest="solidity: solidity [44870,44878]"/>
  <match src="): ) [33782,33783]" dest="): ) [33648,33649]"/>
  <match src="event_paramater [37653,37676]" dest="event_paramater [37451,37474]"/>
  <match src="identifier: memPtr [31215,31221]" dest="identifier: memPtr [31081,31087]"/>
  <match src="): ) [33727,33728]" dest="): ) [33593,33594]"/>
  <match src="member_expression [47531,47572]" dest="member_expression [47615,47656]"/>
  <match src="yul_evm_builtin [11877,11888]" dest="yul_evm_builtin [11811,11822]"/>
  <match src="type_name [22264,22271]" dest="type_name [22130,22137]"/>
  <match src="mload: mload [36264,36269]" dest="mload: mload [36130,36135]"/>
  <match src="external: external [925,933]" dest="external: external [925,933]"/>
  <match src="identifier: memPtr [32656,32662]" dest="identifier: memPtr [32522,32528]"/>
  <match src="yul_identifier [34735,34742]" dest="yul_identifier [34601,34608]"/>
  <match src="}: } [10700,10701]" dest="}: } [10667,10668]"/>
  <match src="identifier: byteLen [33988,33995]" dest="identifier: byteLen [33854,33861]"/>
  <match src="(: ( [8047,8048]" dest="(: ( [8014,8015]"/>
  <match src="&lt;:  &lt; [36498,36500]" dest="&lt;:  &lt; [36331,36333]"/>
  <match src="comment: /**      * @dev Sets `adminRole` as ``role``'s admin role.      *      * Emits a {RoleAdminChanged} event.      */ [26652,26770]" dest="comment: /**      * @dev Sets `adminRole` as ``role``'s admin role.      *      * Emits a {RoleAdminChanged} event.      */ [26518,26636]"/>
  <match src="address: address [30566,30573]" dest="address: address [30432,30439]"/>
  <match src="type_name [31233,31240]" dest="type_name [31099,31106]"/>
  <match src=",: , [15670,15671]" dest=",: , [15604,15605]"/>
  <match src="(: ( [24549,24550]" dest="(: ( [24415,24416]"/>
  <match src="identifier: dest [36325,36329]" dest="identifier: dest [36191,36195]"/>
  <match src="library: library [10900,10907]" dest="library: library [10834,10841]"/>
  <match src="return_statement [8316,8379]" dest="return_statement [8283,8346]"/>
  <match src="primitive_type [50881,50888]" dest="primitive_type [50965,50972]"/>
  <match src="variable_declaration_statement [51729,51787]" dest="variable_declaration_statement [51885,51943]"/>
  <match src="identifier: role [26622,26626]" dest="identifier: role [26488,26492]"/>
  <match src=".: . [29376,29377]" dest=".: . [29242,29243]"/>
  <match src="assignment_expression [29596,29621]" dest="assignment_expression [29462,29487]"/>
  <match src="yul_decimal_number: 32 [34648,34650]" dest="yul_decimal_number: 32 [34514,34516]"/>
  <match src="contract: contract [45377,45385]" dest="contract: contract [45175,45183]"/>
  <match src="yul_path [34652,34659]" dest="yul_path [34518,34525]"/>
  <match src=":=: := [31379,31381]" dest=":=: := [31245,31247]"/>
  <match src="identifier: itemLen [33632,33639]" dest="identifier: itemLen [33498,33505]"/>
  <match src="string: string [18086,18092]" dest="string: string [18020,18026]"/>
  <match src="&quot;: &quot; [5722,5723]" dest="&quot;: &quot; [5689,5690]"/>
  <match src="parameter [41032,41046]" dest="parameter [40830,40844]"/>
  <match src="type_name [28618,28625]" dest="type_name [28484,28491]"/>
  <match src="&quot;: &quot; [16790,16791]" dest="&quot;: &quot; [16724,16725]"/>
  <match src="yul_identifier [28783,28787]" dest="yul_identifier [28649,28653]"/>
  <match src="expression_statement [33784,33796]" dest="expression_statement [33650,33662]"/>
  <match src="variable_declaration [50273,50315]" dest="variable_declaration [50357,50399]"/>
  <match src="call_argument [30723,30758]" dest="call_argument [30589,30624]"/>
  <match src="view: view [19579,19583]" dest="view: view [19480,19484]"/>
  <match src="function_body [30273,30495]" dest="function_body [30139,30361]"/>
  <match src="]: ] [50330,50331]" dest="]: ] [50414,50415]"/>
  <match src="): ) [47033,47034]" dest="): ) [47117,47118]"/>
  <match src="assembly: assembly [30360,30368]" dest="assembly: assembly [30226,30234]"/>
  <match src="call_argument [8080,8090]" dest="call_argument [8047,8057]"/>
  <match src="primitive_type [42480,42487]" dest="primitive_type [42279,42286]"/>
  <match src="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [8394,8466]" dest="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [8361,8433]"/>
  <match src="identifier: isList [29060,29066]" dest="identifier: isList [28926,28932]"/>
  <match src="update_expression [33442,33449]" dest="update_expression [33308,33315]"/>
  <match src=",: , [8967,8968]" dest=",: , [8934,8935]"/>
  <match src="mload: mload [35902,35907]" dest="mload: mload [35768,35773]"/>
  <match src="visibility [21542,21548]" dest="visibility [21408,21414]"/>
  <match src="yul_path [30384,30387]" dest="yul_path [30250,30253]"/>
  <match src="function_definition [22789,22928]" dest="function_definition [22655,22794]"/>
  <match src="primitive_type [39858,39865]" dest="primitive_type [39656,39663]"/>
  <match src=",: , [21940,21941]" dest=",: , [21806,21807]"/>
  <match src="string [16753,16791]" dest="string [16687,16725]"/>
  <match src="=&gt;: =&gt; [21498,21500]" dest="=&gt;: =&gt; [21364,21366]"/>
  <match src="): ) [24658,24659]" dest="): ) [24524,24525]"/>
  <match src="primitive_type [38206,38213]" dest="primitive_type [38004,38011]"/>
  <match src="call_argument [25211,25215]" dest="call_argument [25077,25081]"/>
  <match src="): ) [47506,47507]" dest="): ) [47590,47591]"/>
  <match src="): ) [29256,29257]" dest="): ) [29122,29123]"/>
  <match src="type_name [31670,31677]" dest="type_name [31536,31543]"/>
  <match src="identifier: i [49586,49587]" dest="identifier: i [49670,49671]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [3133,3295]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [3100,3262]"/>
  <match src="member_expression [12957,12978]" dest="member_expression [12891,12912]"/>
  <match src="}: } [51236,51237]" dest="}: } [51320,51321]"/>
  <match src="add: add [34304,34307]" dest="add: add [34170,34173]"/>
  <match src="==: == [25835,25837]" dest="==: == [25701,25703]"/>
  <match src="(: ( [29948,29949]" dest="(: ( [29814,29815]"/>
  <match src="identifier: BATCH_LIMIT [46624,46635]" dest="identifier: BATCH_LIMIT [46422,46433]"/>
  <match src="array_access [53781,53799]" dest="array_access [54015,54033]"/>
  <match src="member_expression [49226,49241]" dest="member_expression [49310,49325]"/>
  <match src="): ) [38093,38094]" dest="): ) [37891,37892]"/>
  <match src="primitive_type [34957,34964]" dest="primitive_type [34823,34830]"/>
  <match src="view: view [10618,10622]" dest="view: view [10585,10589]"/>
  <match src="view: view [38455,38459]" dest="view: view [38253,38257]"/>
  <match src="primitive_type [35679,35686]" dest="primitive_type [35545,35552]"/>
  <match src="return_type_definition [9939,9953]" dest="return_type_definition [9906,9920]"/>
  <match src="if: if [50440,50442]" dest="if: if [50524,50526]"/>
  <match src="function: function [28530,28538]" dest="function: function [28396,28404]"/>
  <match src="primitive_type [48715,48722]" dest="primitive_type [48799,48806]"/>
  <match src="type_name [27017,27024]" dest="type_name [26883,26890]"/>
  <match src="comment: // i.e. calling `withdraw` method on L2 contract [53317,53365]" dest="comment: // i.e. calling `withdraw` method on L2 contract [53551,53599]"/>
  <match src="}: } [30807,30808]" dest="}: } [30673,30674]"/>
  <match src="address: address [7684,7691]" dest="address: address [7651,7658]"/>
  <match src="if_statement [50963,51237]" dest="if_statement [51047,51321]"/>
  <match src="inheritance_specifier [45465,45480]" dest="inheritance_specifier [45263,45278]"/>
  <match src="memory: memory [14069,14075]" dest="memory: memory [14003,14009]"/>
  <match src="expression_statement [26933,26968]" dest="expression_statement [26799,26834]"/>
  <match src="identifier: require [15632,15639]" dest="identifier: require [15566,15573]"/>
  <match src="parameter [19489,19504]" dest="parameter [19390,19405]"/>
  <match src="visibility [30543,30551]" dest="visibility [30409,30417]"/>
  <match src="type_name [50068,50075]" dest="type_name [50152,50159]"/>
  <match src="string [50739,50782]" dest="string [50823,50866]"/>
  <match src="uint256: uint256 [31035,31042]" dest="uint256: uint256 [30901,30908]"/>
  <match src="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [19632,19750]" dest="comment: // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 [19533,19651]"/>
  <match src="): ) [32425,32426]" dest="): ) [32291,32292]"/>
  <match src="variable_declaration [11778,11790]" dest="variable_declaration [11712,11724]"/>
  <match src="): ) [50680,50681]" dest="): ) [50764,50765]"/>
  <match src="type_name [6398,6405]" dest="type_name [6365,6372]"/>
  <match src="): ) [9082,9083]" dest="): ) [9049,9050]"/>
  <match src=",: , [54199,54200]" dest=",: , [54433,54434]"/>
  <match src="function_body [32229,32718]" dest="function_body [32095,32584]"/>
  <match src="call_argument [15165,15170]" dest="call_argument [15099,15104]"/>
  <match src="visibility [3350,3357]" dest="visibility [3317,3324]"/>
  <match src="else: else [51251,51255]" dest="else: else [51407,51411]"/>
  <match src="call_expression [6679,6707]" dest="call_expression [6646,6674]"/>
  <match src="-: - [35373,35374]" dest="-: - [35239,35240]"/>
  <match src="number_literal: 1 [34446,34447]" dest="number_literal: 1 [34312,34313]"/>
  <match src="identifier: account [27130,27137]" dest="identifier: account [26996,27003]"/>
  <match src="primitive_type [47388,47395]" dest="primitive_type [47472,47479]"/>
  <match src=":=: := [34193,34195]" dest=":=: := [34059,34061]"/>
  <match src="identifier: STRING_SHORT_START [28192,28210]" dest="identifier: STRING_SHORT_START [28058,28076]"/>
  <match src=",: , [15870,15871]" dest=",: , [15804,15805]"/>
  <match src="identifier: _grantRole [24725,24735]" dest="identifier: _grantRole [24591,24601]"/>
  <match src="call_expression [29268,29342]" dest="call_expression [29134,29208]"/>
  <match src="return_statement [8555,8582]" dest="return_statement [8522,8549]"/>
  <match src="view: view [19467,19471]" dest="view: view [19368,19372]"/>
  <match src="variable_declaration_statement [33117,33177]" dest="variable_declaration_statement [32983,33043]"/>
  <match src="(: ( [7716,7717]" dest="(: ( [7683,7684]"/>
  <match src="): ) [11574,11575]" dest="): ) [11508,11509]"/>
  <match src="user_defined_type [29155,29162]" dest="user_defined_type [29021,29028]"/>
  <match src="identifier: itemLen [33855,33862]" dest="identifier: itemLen [33721,33728]"/>
  <match src="else: else [35260,35264]" dest="else: else [35126,35130]"/>
  <match src="function_definition [27542,27701]" dest="function_definition [27407,27566]"/>
  <match src="else: else [3074,3078]" dest="else: else [3041,3045]"/>
  <match src="identifier: RLPItem [29018,29025]" dest="identifier: RLPItem [28884,28891]"/>
  <match src="identifier: operator [40645,40653]" dest="identifier: operator [40443,40451]"/>
  <match src="user_defined_type [30832,30839]" dest="user_defined_type [30698,30705]"/>
  <match src="identifier: _verifyCallResult [17952,17969]" dest="identifier: _verifyCallResult [17886,17903]"/>
  <match src="=: = [51961,51962]" dest="=: = [52117,52118]"/>
  <match src="(: ( [51783,51784]" dest="(: ( [51939,51940]"/>
  <match src="yul_path [31543,31546]" dest="yul_path [31409,31412]"/>
  <match src="number_literal: 0 [11923,11924]" dest="number_literal: 0 [11857,11858]"/>
  <match src="!: ! [30594,30595]" dest="!: ! [30460,30461]"/>
  <match src="type_name [6864,6871]" dest="type_name [6831,6838]"/>
  <match src="identifier: success [13186,13193]" dest="identifier: success [13120,13127]"/>
  <match src="function_definition [6801,6918]" dest="function_definition [6768,6885]"/>
  <match src="function_definition [9871,10017]" dest="function_definition [9838,9984]"/>
  <match src="true [45249,45253]" dest="true [45048,45052]"/>
  <match src="(: ( [18714,18715]" dest="(: ( [18648,18649]"/>
  <match src="(: ( [54051,54052]" dest="(: ( [54285,54286]"/>
  <match src="=: = [50316,50317]" dest="=: = [50400,50401]"/>
  <match src="identifier: valueIndex [3928,3938]" dest="identifier: valueIndex [3895,3905]"/>
  <match src="primitive_type [17635,17640]" dest="primitive_type [17569,17574]"/>
  <match src="address: address [44292,44299]" dest="address: address [44090,44097]"/>
  <match src="type_name [45748,45755]" dest="type_name [45546,45553]"/>
  <match src="identifier: set [4962,4965]" dest="identifier: set [4929,4932]"/>
  <match src="type_name [15097,15102]" dest="type_name [15031,15036]"/>
  <match src="yul_assignment [34557,34581]" dest="yul_assignment [34423,34447]"/>
  <match src="(: ( [26881,26882]" dest="(: ( [26747,26748]"/>
  <match src="member_expression [28832,28843]" dest="member_expression [28698,28709]"/>
  <match src="variable_declaration [32439,32450]" dest="variable_declaration [32305,32316]"/>
  <match src=":=: := [32603,32605]" dest=":=: := [32469,32471]"/>
  <match src="pragma_directive [19886,19917]" dest="pragma_directive [18759,18790]"/>
  <match src="solidity_version_comparison_operator [18881,18883]" dest="solidity_version_comparison_operator [19777,19779]"/>
  <match src="solidity_pragma_token [43579,43593]" dest="solidity_pragma_token [43378,43393]"/>
  <match src="call_expression [23928,23958]" dest="call_expression [23794,23824]"/>
  <match src=",: , [48501,48502]" dest=",: , [48585,48586]"/>
  <match src="return_type_definition [2765,2779]" dest="return_type_definition [2732,2746]"/>
  <match src="identifier: target [17909,17915]" dest="identifier: target [17843,17849]"/>
  <match src="solidity_version: 0.8.0 [129,134]" dest="solidity_version: 0.8.0 [129,134]"/>
  <match src="identifier: UintSet [9354,9361]" dest="identifier: UintSet [9321,9328]"/>
  <match src="type_name [21977,21984]" dest="type_name [21843,21850]"/>
  <match src="yul_identifier [35896,35900]" dest="yul_identifier [35762,35766]"/>
  <match src="bytes32: bytes32 [45600,45607]" dest="bytes32: bytes32 [45398,45405]"/>
  <match src="number_literal: 2 [51904,51905]" dest="number_literal: 2 [52060,52061]"/>
  <match src="call_argument [25827,25850]" dest="call_argument [25693,25716]"/>
  <match src="function: function [17195,17203]" dest="function: function [17129,17137]"/>
  <match src="call_argument [14602,14614]" dest="call_argument [14536,14548]"/>
  <match src="): ) [38482,38483]" dest="): ) [38280,38281]"/>
  <match src="): ) [27289,27290]" dest="): ) [27155,27156]"/>
  <match src="): ) [16791,16792]" dest="): ) [16725,16726]"/>
  <match src="call_argument [30454,30462]" dest="call_argument [30320,30328]"/>
  <match src="call_expression [32261,32285]" dest="call_expression [32127,32151]"/>
  <match src="identifier: src [35944,35947]" dest="identifier: src [35810,35813]"/>
  <match src="type_name [46987,46996]" dest="type_name [46785,46794]"/>
  <match src="function_body [27603,27701]" dest="function_body [27468,27566]"/>
  <match src="event_paramater [37633,37651]" dest="event_paramater [37431,37449]"/>
  <match src="&lt;:  &lt; [127,129]" dest="&lt;:  &lt; [127,129]"/>
  <match src="address: address [855,862]" dest="address: address [855,862]"/>
  <match src="array_access [2995,3014]" dest="array_access [2962,2981]"/>
  <match src="}: } [36370,36371]" dest="}: } [36236,36237]"/>
  <match src="): ) [16293,16294]" dest="): ) [16227,16228]"/>
  <match src="type_name [40637,40644]" dest="type_name [40435,40442]"/>
  <match src=",: , [54645,54646]" dest=",: , [54879,54880]"/>
  <match src="yul_identifier [34527,34532]" dest="yul_identifier [34393,34398]"/>
  <match src="identifier: memPtr [34571,34577]" dest="identifier: memPtr [34437,34443]"/>
  <match src="event_paramater [22289,22311]" dest="event_paramater [22155,22177]"/>
  <match src="=: = [17907,17908]" dest="=: = [17841,17842]"/>
  <match src=",: , [52506,52507]" dest=",: , [52662,52663]"/>
  <match src="visibility [32872,32879]" dest="visibility [32738,32745]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [17807,17857]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [17741,17791]"/>
  <match src="(: ( [7781,7782]" dest="(: ( [7748,7749]"/>
  <match src="): ) [53703,53704]" dest="): ) [53937,53938]"/>
  <match src="}: } [35927,35928]" dest="}: } [35793,35794]"/>
  <match src="(: ( [27722,27723]" dest="(: ( [27587,27588]"/>
  <match src="parameter [39253,39268]" dest="parameter [39051,39066]"/>
  <match src="): ) [29143,29144]" dest="): ) [29009,29010]"/>
  <match src="identifier: only [50163,50167]" dest="identifier: only [50247,50251]"/>
  <match src="string [15672,15712]" dest="string [15606,15646]"/>
  <match src="(: ( [34570,34571]" dest="(: ( [34436,34437]"/>
  <match src=",: , [24645,24646]" dest=",: , [24511,24512]"/>
  <match src="): ) [6706,6707]" dest="): ) [6673,6674]"/>
  <match src="variable_declaration [3904,3925]" dest="variable_declaration [3871,3892]"/>
  <match src="type_cast_expression [9042,9082]" dest="type_cast_expression [9009,9049]"/>
  <match src=",: , [47395,47396]" dest=",: , [47479,47480]"/>
  <match src="(: ( [52373,52374]" dest="(: ( [52529,52530]"/>
  <match src="solidity_version: 0.6.0 [18876,18881]" dest="solidity_version: 0.6.0 [19772,19777]"/>
  <match src="return: return [22875,22881]" dest="return: return [22741,22747]"/>
  <match src="identifier: IMintableERC721 [53941,53956]" dest="identifier: IMintableERC721 [54175,54190]"/>
  <match src="memory: memory [17888,17894]" dest="memory: memory [17822,17828]"/>
  <match src=",: , [15750,15751]" dest=",: , [15684,15685]"/>
  <match src="variable_declaration_tuple [15857,15896]" dest="variable_declaration_tuple [15791,15830]"/>
  <match src="contract_declaration [27458,27856]" dest="contract_declaration [27323,27721]"/>
  <match src="internal: internal [16258,16266]" dest="internal: internal [16192,16200]"/>
  <match src="yul_identifier [30384,30387]" dest="yul_identifier [30250,30253]"/>
  <match src="address: address [48715,48722]" dest="address: address [48799,48806]"/>
  <match src="binary_expression [35133,35158]" dest="binary_expression [34999,35024]"/>
  <match src="comment: // Update the index for the moved value [4434,4473]" dest="comment: // Update the index for the moved value [4401,4440]"/>
  <match src="address: address [11530,11537]" dest="address: address [11464,11471]"/>
  <match src="identifier: tokenId [40605,40612]" dest="identifier: tokenId [40403,40410]"/>
  <match src="&quot;: &quot; [53866,53867]" dest="&quot;: &quot; [54100,54101]"/>
  <match src="call_argument [6168,6173]" dest="call_argument [6135,6140]"/>
  <match src="{: { [50503,50504]" dest="{: { [50587,50588]"/>
  <match src="array_access [4727,4753]" dest="array_access [4694,4720]"/>
  <match src="member_expression [6689,6699]" dest="member_expression [6656,6666]"/>
  <match src="): ) [31394,31395]" dest="): ) [31260,31261]"/>
  <match src="call_argument [30316,30324]" dest="call_argument [30182,30190]"/>
  <match src="state_mutability [28995,28999]" dest="state_mutability [28861,28865]"/>
  <match src="function: function [16586,16594]" dest="function: function [16520,16528]"/>
  <match src="return: return [18188,18194]" dest="return: return [18122,18128]"/>
  <match src="yul_function_call [34644,34660]" dest="yul_function_call [34510,34526]"/>
  <match src="(: ( [29454,29455]" dest="(: ( [29320,29321]"/>
  <match src="contract_declaration [45377,54926]" dest="contract_declaration [45175,55232]"/>
  <match src=".: . [54146,54147]" dest=".: . [54380,54381]"/>
  <match src="expression_statement [24607,24713]" dest="expression_statement [24473,24579]"/>
  <match src="primitive_type [14466,14471]" dest="primitive_type [14400,14405]"/>
  <match src="identifier: Bytes32Set [6593,6603]" dest="identifier: Bytes32Set [6560,6570]"/>
  <match src="identifier: value [15554,15559]" dest="identifier: value [15488,15493]"/>
  <match src="type_name [30310,30315]" dest="type_name [30176,30181]"/>
  <match src="identifier: _roles [21519,21525]" dest="identifier: _roles [21385,21391]"/>
  <match src="contract: contract [21248,21256]" dest="contract: contract [21114,21122]"/>
  <match src="return_statement [23185,23222]" dest="return_statement [23051,23088]"/>
  <match src="): ) [29837,29838]" dest="): ) [29703,29704]"/>
  <match src=",: , [2809,2810]" dest=",: , [2776,2777]"/>
  <match src="expression_statement [47223,47256]" dest="expression_statement [47307,47340]"/>
  <match src="(: ( [18163,18164]" dest="(: ( [18097,18098]"/>
  <match src="call_argument [17929,17933]" dest="call_argument [17863,17867]"/>
  <match src="primitive_type [18135,18140]" dest="primitive_type [18069,18074]"/>
  <match src="parameter [2774,2778]" dest="parameter [2741,2745]"/>
  <match src="): ) [52381,52382]" dest="): ) [52537,52538]"/>
  <match src="(: ( [28782,28783]" dest="(: ( [28648,28649]"/>
  <match src="): ) [11545,11546]" dest="): ) [11479,11480]"/>
  <match src="if: if [51256,51258]" dest="if: if [51412,51414]"/>
  <match src="(: ( [15742,15743]" dest="(: ( [15676,15677]"/>
  <match src="): ) [35376,35377]" dest="): ) [35242,35243]"/>
  <match src="identifier: offset [32464,32470]" dest="identifier: offset [32330,32336]"/>
  <match src="comment: // The Set implementation uses private functions, and user-facing [2005,2070]" dest="comment: // The Set implementation uses private functions, and user-facing [1972,2037]"/>
  <match src="call_argument [48503,48512]" dest="call_argument [48587,48596]"/>
  <match src="call_argument [15927,15931]" dest="call_argument [15861,15865]"/>
  <match src="event_paramater [22648,22671]" dest="event_paramater [22514,22537]"/>
  <match src="[: [ [27260,27261]" dest="[: [ [27126,27127]"/>
  <match src="expression_statement [50620,50798]" dest="expression_statement [50704,50882]"/>
  <match src="pure: pure [31700,31704]" dest="pure: pure [31566,31570]"/>
  <match src="event_definition [37596,37678]" dest="event_definition [37394,37476]"/>
  <match src="identifier: owner [37819,37824]" dest="identifier: owner [37617,37622]"/>
  <match src=",: , [32680,32681]" dest=",: , [32546,32547]"/>
  <match src="(: ( [48328,48329]" dest="(: ( [48412,48413]"/>
  <match src=",: , [25118,25119]" dest=",: , [24984,24985]"/>
  <match src="call_argument [49570,49574]" dest="call_argument [49654,49658]"/>
  <match src="parameter [15561,15587]" dest="parameter [15495,15521]"/>
  <match src="uint256: uint256 [36097,36104]" dest="uint256: uint256 [35963,35970]"/>
  <match src="call_expression [15899,15932]" dest="call_expression [15833,15866]"/>
  <match src="primitive_type [30338,30345]" dest="primitive_type [30204,30211]"/>
  <match src="yul_block [31485,31564]" dest="yul_block [31351,31430]"/>
  <match src="yul_decimal_number: 1 [34757,34758]" dest="yul_decimal_number: 1 [34623,34624]"/>
  <match src="primitive_type [3335,3342]" dest="primitive_type [3302,3309]"/>
  <match src="call_expression [8072,8125]" dest="call_expression [8039,8092]"/>
  <match src="memory: memory [32502,32508]" dest="memory: memory [32368,32374]"/>
  <match src="): ) [34240,34241]" dest="): ) [34106,34107]"/>
  <match src="identifier: TOKEN_TYPE [45772,45782]" dest="identifier: TOKEN_TYPE [45570,45580]"/>
  <match src="): ) [18648,18649]" dest="): ) [18582,18583]"/>
  <match src="primitive_type [28177,28182]" dest="primitive_type [28043,28048]"/>
  <match src="(: ( [22911,22912]" dest="(: ( [22777,22778]"/>
  <match src="primitive_type [37852,37859]" dest="primitive_type [37650,37657]"/>
  <match src="primitive_type [15607,15612]" dest="primitive_type [15541,15546]"/>
  <match src="parameter [30254,30266]" dest="parameter [30120,30132]"/>
  <match src="): ) [36274,36275]" dest="): ) [36140,36141]"/>
  <match src="(: ( [5611,5612]" dest="(: ( [5578,5579]"/>
  <match src="returns: returns [16691,16698]" dest="returns: returns [16625,16632]"/>
  <match src="yul_identifier [18547,18562]" dest="yul_identifier [18481,18496]"/>
  <match src="returns: returns [23892,23899]" dest="returns: returns [23758,23765]"/>
  <match src="): ) [6909,6910]" dest="): ) [6876,6877]"/>
  <match src="++: ++ [52155,52157]" dest="++: ++ [52311,52313]"/>
  <match src="function_definition [43440,43502]" dest="function_definition [43239,43301]"/>
  <match src="=: = [29370,29371]" dest="=: = [29236,29237]"/>
  <match src="binary_expression [3977,3999]" dest="binary_expression [3944,3966]"/>
  <match src="identifier: getRoleMemberCount [23111,23129]" dest="identifier: getRoleMemberCount [22977,22995]"/>
  <match src="=: = [45956,45957]" dest="=: = [45754,45755]"/>
  <match src="visibility [16258,16266]" dest="visibility [16192,16200]"/>
  <match src="): ) [48886,48887]" dest="): ) [48970,48971]"/>
  <match src="+: + [33147,33148]" dest="+: + [33013,33014]"/>
  <match src="comment: // keccak256(&quot;WithdrawnBatch(address,uint256[])&quot;) [46031,46080]" dest="comment: // keccak256(&quot;WithdrawnBatch(address,uint256[])&quot;) [45829,45878]"/>
  <match src="address: address [27017,27024]" dest="address: address [26883,26890]"/>
  <match src="): ) [9079,9080]" dest="): ) [9046,9047]"/>
  <match src="): ) [24749,24750]" dest="): ) [24615,24616]"/>
  <match src="call_argument [45200,45216]" dest="call_argument [44999,45015]"/>
  <match src="call_argument [31123,31164]" dest="call_argument [30989,31030]"/>
  <match src="call_argument [48715,48728]" dest="call_argument [48799,48812]"/>
  <match src="&quot;: &quot; [17345,17346]" dest="&quot;: &quot; [17279,17280]"/>
  <match src="(: ( [10670,10671]" dest="(: ( [10637,10638]"/>
  <match src="): ) [15783,15784]" dest="): ) [15717,15718]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [15797,15847]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [15731,15781]"/>
  <match src="&gt;: &gt; [5713,5714]" dest="&gt;: &gt; [5680,5681]"/>
  <match src="&quot;: &quot; [25184,25185]" dest="&quot;: &quot; [25050,25051]"/>
  <match src="yul_variable_declaration [36244,36282]" dest="yul_variable_declaration [36110,36148]"/>
  <match src="{: { [3079,3080]" dest="{: { [3046,3047]"/>
  <match src="add: add [28779,28782]" dest="add: add [28645,28648]"/>
  <match src="=: = [21577,21578]" dest="=: = [21443,21444]"/>
  <match src="uint256: uint256 [33624,33631]" dest="uint256: uint256 [33490,33497]"/>
  <match src="emit_statement [49025,49105]" dest="emit_statement [49109,49189]"/>
  <match src="comment: // Note: If your token is only minted in L2, you can exit [53018,53075]" dest="comment: // Note: If your token is only minted in L2, you can exit [53252,53309]"/>
  <match src="return_statement [11909,11925]" dest="return_statement [11843,11859]"/>
  <match src="(: ( [25826,25827]" dest="(: ( [25692,25693]"/>
  <match src="identifier: _owner [47080,47086]" dest="identifier: _owner [47164,47170]"/>
  <match src="private: private [3350,3357]" dest="private: private [3317,3324]"/>
  <match src="primitive_type [46283,46290]" dest="primitive_type [46081,46088]"/>
  <match src="variable_declaration [32240,32258]" dest="variable_declaration [32106,32124]"/>
  <match src="type_name [41239,41246]" dest="type_name [41037,41044]"/>
  <match src="identifier: tokenId [50889,50896]" dest="identifier: tokenId [50973,50980]"/>
  <match src="comment: // If this is NFT exit with metadata i.e. URI 👆 [52941,52991]" dest="comment: // If this is NFT exit with metadata i.e. URI 👆 [53175,53225]"/>
  <match src="visibility [45756,45762]" dest="visibility [45554,45560]"/>
  <match src="type_name [22806,22813]" dest="type_name [22672,22679]"/>
  <match src="call_argument [8333,8343]" dest="call_argument [8300,8310]"/>
  <match src="{: { [7723,7724]" dest="{: { [7690,7691]"/>
  <match src="solidity_version: 0.6.0 [1071,1076]" dest="solidity_version: 0.6.0 [1038,1043]"/>
  <match src="new_expression [29181,29194]" dest="new_expression [29047,29060]"/>
  <match src="using: using [21344,21349]" dest="using: using [21210,21215]"/>
  <match src="function_body [19506,19542]" dest="function_body [19407,19443]"/>
  <match src="yul_evm_builtin [34224,34227]" dest="yul_evm_builtin [34090,34093]"/>
  <match src="identifier: safeTransferFrom [51015,51031]" dest="identifier: safeTransferFrom [51099,51115]"/>
  <match src="number_literal: 2 [50910,50911]" dest="number_literal: 2 [50994,50995]"/>
  <match src="comment: // zero out src [36215,36230]" dest="comment: // zero out src [36081,36096]"/>
  <match src="bytes32: bytes32 [2497,2504]" dest="bytes32: bytes32 [2464,2471]"/>
  <match src="identifier: item [30454,30458]" dest="identifier: item [30320,30324]"/>
  <match src="identifier: value [8116,8121]" dest="identifier: value [8083,8088]"/>
  <match src="): ) [49484,49485]" dest="): ) [49568,49569]"/>
  <match src="{: { [28754,28755]" dest="{: { [28620,28621]"/>
  <match src="call_argument [50451,50478]" dest="call_argument [50535,50562]"/>
  <match src="identifier: lastIndex [4276,4285]" dest="identifier: lastIndex [4243,4252]"/>
  <match src="{: { [32064,32065]" dest="{: { [31930,31931]"/>
  <match src="call_expression [17725,17794]" dest="call_expression [17659,17728]"/>
  <match src="function: function [8933,8941]" dest="function: function [8900,8908]"/>
  <match src="pragma_directive [1053,1084]" dest="pragma_directive [1020,1051]"/>
  <match src="identifier: errorMessage [15575,15587]" dest="identifier: errorMessage [15509,15521]"/>
  <match src="function_definition [16195,16394]" dest="function_definition [16129,16328]"/>
  <match src="variable_declaration_statement [11778,11791]" dest="variable_declaration_statement [11712,11725]"/>
  <match src="member_expression [13132,13146]" dest="member_expression [13066,13080]"/>
  <match src="function_definition [7975,8133]" dest="function_definition [7942,8100]"/>
  <match src="call_argument [15743,15749]" dest="call_argument [15677,15683]"/>
  <match src="primitive_type [31300,31307]" dest="primitive_type [31166,31173]"/>
  <match src="(: ( [38243,38244]" dest="(: ( [38041,38042]"/>
  <match src=":=: := [32086,32088]" dest=":=: := [31952,31954]"/>
  <match src="): ) [8542,8543]" dest="): ) [8509,8510]"/>
  <match src="identifier: i [52154,52155]" dest="identifier: i [52310,52311]"/>
  <match src="yul_function_call [34078,34092]" dest="yul_function_call [33944,33958]"/>
  <match src="identifier: account [25217,25224]" dest="identifier: account [25083,25090]"/>
  <match src="identifier: isContract [17733,17743]" dest="identifier: isContract [17667,17677]"/>
  <match src="binary_expression [33865,33895]" dest="binary_expression [33731,33761]"/>
  <match src="(: ( [2794,2795]" dest="(: ( [2761,2762]"/>
  <match src="identifier: AddressSet [21327,21337]" dest="identifier: AddressSet [21193,21203]"/>
  <match src="comment: // [53459,53461]" dest="comment: // [53693,53695]"/>
  <match src="primitive_type [51934,51941]" dest="primitive_type [52090,52097]"/>
  <match src="}: } [54925,54926]" dest="}: } [55231,55232]"/>
  <match src="private: private [21511,21518]" dest="private: private [21377,21384]"/>
  <match src="false: false [45135,45140]" dest="false: false [44934,44939]"/>
  <match src="{: { [323,324]" dest="{: { [323,324]"/>
  <match src="-: - [3939,3940]" dest="-: - [3906,3907]"/>
  <match src="]: ] [27068,27069]" dest="]: ] [26934,26935]"/>
  <match src=".: . [51906,51907]" dest=".: . [52062,52063]"/>
  <match src="type_name [33650,33657]" dest="type_name [33516,33523]"/>
  <match src="modifier_invocation [50163,50181]" dest="modifier_invocation [50247,50265]"/>
  <match src="identifier: account [25784,25791]" dest="identifier: account [25650,25657]"/>
  <match src="external: external [41048,41056]" dest="external: external [40846,40854]"/>
  <match src="): ) [15619,15620]" dest="): ) [15553,15554]"/>
  <match src="type_name [54008,54015]" dest="type_name [54242,54249]"/>
  <match src="type_name [17700,17705]" dest="type_name [17634,17639]"/>
  <match src="member_expression [5028,5040]" dest="member_expression [4995,5007]"/>
  <match src="call_argument [32328,32370]" dest="call_argument [32194,32236]"/>
  <match src="struct_field_assignment [13148,13161]" dest="struct_field_assignment [13082,13095]"/>
  <match src="primitive_type [50068,50075]" dest="primitive_type [50152,50159]"/>
  <match src="identifier: itemLength [31742,31752]" dest="identifier: itemLength [31608,31618]"/>
  <match src="&gt;=:  &gt;= [19901,19904]" dest="&gt;=:  &gt;= [18774,18777]"/>
  <match src="): ) [27832,27833]" dest="): ) [27697,27698]"/>
  <match src="identifier: abi [48851,48854]" dest="identifier: abi [48935,48938]"/>
  <match src="identifier: result [31518,31524]" dest="identifier: result [31384,31390]"/>
  <match src="yul_evm_builtin [34215,34218]" dest="yul_evm_builtin [34081,34084]"/>
  <match src="internal: internal [14082,14090]" dest="internal: internal [14016,14024]"/>
  <match src="identifier: item [32318,32322]" dest="identifier: item [32184,32188]"/>
  <match src=".: . [2845,2846]" dest=".: . [2812,2813]"/>
  <match src="comment: // Look for revert reason and bubble it up if present [18238,18291]" dest="comment: // Look for revert reason and bubble it up if present [18172,18225]"/>
  <match src="): ) [12927,12928]" dest="): ) [12861,12862]"/>
  <match src="variable_declaration_statement [49458,49468]" dest="variable_declaration_statement [49542,49552]"/>
  <match src="primitive_type [7717,7721]" dest="primitive_type [7684,7688]"/>
  <match src="comment: // topic0 is event sig [51328,51350]" dest="comment: // topic0 is event sig [51484,51506]"/>
  <match src="type_cast_expression [8092,8124]" dest="type_cast_expression [8059,8091]"/>
  <match src="identifier: UintSet [10119,10126]" dest="identifier: UintSet [10086,10093]"/>
  <match src="): ) [40612,40613]" dest="): ) [40410,40411]"/>
  <match src="event_paramater [46909,46940]" dest="event_paramater [46707,46738]"/>
  <match src="(: ( [27149,27150]" dest="(: ( [27015,27016]"/>
  <match src="public: public [21542,21548]" dest="public: public [21408,21414]"/>
  <match src="): ) [6630,6631]" dest="): ) [6597,6598]"/>
  <match src="state_mutability [11556,11560]" dest="state_mutability [11490,11494]"/>
  <match src="primitive_type [2508,2515]" dest="primitive_type [2475,2482]"/>
  <match src="call_expression [52361,52382]" dest="call_expression [52517,52538]"/>
  <match src="type_name [30832,30839]" dest="type_name [30698,30705]"/>
  <match src="parameter [38206,38219]" dest="parameter [38004,38017]"/>
  <match src="uint256: uint256 [9375,9382]" dest="uint256: uint256 [9342,9349]"/>
  <match src="assembly_statement [32055,32113]" dest="assembly_statement [31921,31979]"/>
  <match src="type_name [31275,31282]" dest="type_name [31141,31148]"/>
  <match src="}: } [36363,36364]" dest="}: } [36229,36230]"/>
  <match src="number_literal: 0 [52875,52876]" dest="number_literal: 0 [53109,53110]"/>
  <match src="mload: mload [29952,29957]" dest="mload: mload [29818,29823]"/>
  <match src="parameter [47072,47086]" dest="parameter [47156,47170]"/>
  <match src="): ) [31778,31779]" dest="): ) [31644,31645]"/>
  <match src="primitive_type [23901,23908]" dest="primitive_type [23767,23774]"/>
  <match src="=: = [4511,4512]" dest="=: = [4478,4479]"/>
  <match src="type_name [39241,39248]" dest="type_name [39039,39046]"/>
  <match src="variable_declaration_tuple [51933,51960]" dest="variable_declaration_tuple [52089,52116]"/>
  <match src="type_name [45540,45557]" dest="type_name [45338,45355]"/>
  <match src="identifier: remove [27275,27281]" dest="identifier: remove [27141,27147]"/>
  <match src="member_expression [32453,32461]" dest="member_expression [32319,32327]"/>
  <match src="{: { [7345,7346]" dest="{: { [7312,7313]"/>
  <match src="(: ( [21919,21920]" dest="(: ( [21785,21786]"/>
  <match src="): ) [49532,49533]" dest="): ) [49616,49617]"/>
  <match src="assembly: assembly [33674,33682]" dest="assembly: assembly [33540,33548]"/>
  <match src="identifier: require [30699,30706]" dest="identifier: require [30565,30572]"/>
  <match src="string [30989,31021]" dest="string [30855,30887]"/>
  <match src="identifier: depositReceiver [44328,44343]" dest="identifier: depositReceiver [44126,44141]"/>
  <match src="return: return [4770,4776]" dest="return: return [4737,4743]"/>
  <match src="member_expression [23928,23951]" dest="member_expression [23794,23817]"/>
  <match src="assembly: assembly [28745,28753]" dest="assembly: assembly [28611,28619]"/>
  <match src="bytes: bytes [14063,14068]" dest="bytes: bytes [13997,14002]"/>
  <match src="for: for [29450,29453]" dest="for: for [29316,29319]"/>
  <match src="identifier: memPtr [34907,34913]" dest="identifier: memPtr [34773,34779]"/>
  <match src="identifier: tokenId [54016,54023]" dest="identifier: tokenId [54250,54257]"/>
  <match src="parameter [9007,9014]" dest="parameter [8974,8981]"/>
  <match src="identifier: currPtr [33125,33132]" dest="identifier: currPtr [32991,32998]"/>
  <match src="call_expression [17733,17751]" dest="call_expression [17667,17685]"/>
  <match src="identifier: tokenIds [48840,48848]" dest="identifier: tokenIds [48924,48932]"/>
  <match src="primitive_type [8969,8976]" dest="primitive_type [8936,8943]"/>
  <match src="function: function [15480,15488]" dest="function: function [15414,15422]"/>
  <match src="(: ( [6592,6593]" dest="(: ( [6559,6560]"/>
  <match src="function: function [32833,32841]" dest="function: function [32699,32707]"/>
  <match src="pure: pure [32880,32884]" dest="pure: pure [32746,32750]"/>
  <match src="): ) [923,924]" dest="): ) [923,924]"/>
  <match src="identifier: tokenIds [52198,52206]" dest="identifier: tokenIds [52354,52362]"/>
  <match src="string [29300,29341]" dest="string [29166,29207]"/>
  <match src="{: { [22864,22865]" dest="{: { [22730,22731]"/>
  <match src="identifier: len [31476,31479]" dest="identifier: len [31342,31345]"/>
  <match src="parameter [40391,40406]" dest="parameter [40189,40204]"/>
  <match src="comment: /**  * @dev Collection of functions related to the address type  */ [10829,10898]" dest="comment: /**  * @dev Collection of functions related to the address type  */ [10763,10832]"/>
  <match src="&quot;: &quot; [29340,29341]" dest="&quot;: &quot; [29206,29207]"/>
  <match src="type_name [46086,46093]" dest="type_name [45884,45891]"/>
  <match src="bytes32: bytes32 [46086,46093]" dest="bytes32: bytes32 [45884,45891]"/>
  <match src="&quot;: &quot; [27690,27691]" dest="&quot;: &quot; [27555,27556]"/>
  <match src="call_expression [17310,17387]" dest="call_expression [17244,17321]"/>
  <match src="(: ( [9981,9982]" dest="(: ( [9948,9949]"/>
  <match src="primitive_type [8015,8022]" dest="primitive_type [7982,7989]"/>
  <match src="expression_statement [52142,52153]" dest="expression_statement [52298,52309]"/>
  <match src="member_expression [50967,50979]" dest="member_expression [51051,51063]"/>
  <match src="public: public [47035,47041]" dest="public: public [47119,47125]"/>
  <match src="(: ( [49550,49551]" dest="(: ( [49634,49635]"/>
  <match src="): ) [23878,23879]" dest="): ) [23744,23745]"/>
  <match src="identifier: toBytes [32163,32170]" dest="identifier: toBytes [32029,32036]"/>
  <match src="bool: bool [5004,5008]" dest="bool: bool [4971,4975]"/>
  <match src="state_mutability [37233,37237]" dest="state_mutability [37066,37070]"/>
  <match src="identifier: onERC721Received [47547,47563]" dest="identifier: onERC721Received [47631,47647]"/>
  <match src="function: function [40576,40584]" dest="function: function [40374,40382]"/>
  <match src="call_argument [31918,31932]" dest="call_argument [31784,31798]"/>
  <match src="identifier: data [14076,14080]" dest="identifier: data [14010,14014]"/>
  <match src="member_expression [5229,5240]" dest="member_expression [5196,5207]"/>
  <match src="visibility [9925,9933]" dest="visibility [9892,9900]"/>
  <match src="call_argument [33164,33175]" dest="call_argument [33030,33041]"/>
  <match src="primitive_type [16281,16286]" dest="primitive_type [16215,16220]"/>
  <match src="(: ( [41013,41014]" dest="(: ( [40811,40812]"/>
  <match src="identifier: _inner [9986,9992]" dest="identifier: _inner [9953,9959]"/>
  <match src="primitive_type [28270,28275]" dest="primitive_type [28136,28141]"/>
  <match src="return: return [5021,5027]" dest="return: return [4988,4994]"/>
  <match src="bytes: bytes [14100,14105]" dest="bytes: bytes [14034,14039]"/>
  <match src="parameter [8299,8303]" dest="parameter [8266,8270]"/>
  <match src="identifier: token [54141,54146]" dest="identifier: token [54375,54380]"/>
  <match src="yul_evm_builtin [34731,34734]" dest="yul_evm_builtin [34597,34600]"/>
  <match src="indexed: indexed [21950,21957]" dest="indexed: indexed [21816,21823]"/>
  <match src="function: function [44886,44894]" dest="function: function [44684,44692]"/>
  <match src="virtual: virtual [25800,25807]" dest="virtual: virtual [25666,25673]"/>
  <match src="member_expression [10671,10681]" dest="member_expression [10638,10648]"/>
  <match src=".: . [10674,10675]" dest=".: . [10641,10642]"/>
  <match src="identifier: TRANSFER_WITH_METADATA_EVENT_SIG [46307,46339]" dest="identifier: TRANSFER_WITH_METADATA_EVENT_SIG [46105,46137]"/>
  <match src="binary_expression [34419,34447]" dest="binary_expression [34285,34313]"/>
  <match src="number_literal: 0 [18329,18330]" dest="number_literal: 0 [18263,18264]"/>
  <match src="type_name [25037,25044]" dest="type_name [24903,24910]"/>
  <match src="return_type_definition [9709,9723]" dest="return_type_definition [9676,9690]"/>
  <match src=".: . [52877,52878]" dest=".: . [53111,53112]"/>
  <match src="address: address [50068,50075]" dest="address: address [50152,50159]"/>
  <match src="contract_body [43769,45014]" dest="contract_body [43567,44812]"/>
  <match src="type_name [16239,16244]" dest="type_name [16173,16178]"/>
  <match src="address: address [50541,50548]" dest="address: address [50625,50632]"/>
  <match src="member_expression [48660,48703]" dest="member_expression [48744,48787]"/>
  <match src="storage: storage [8499,8506]" dest="storage: storage [8466,8473]"/>
  <match src="contract_body [1821,10701]" dest="contract_body [1788,10668]"/>
  <match src="view: view [41281,41285]" dest="view: view [41079,41083]"/>
  <match src="primitive_type [27003,27010]" dest="primitive_type [26869,26876]"/>
  <match src="identifier: memPtr [31388,31394]" dest="identifier: memPtr [31254,31260]"/>
  <match src="variable_declaration_statement [32439,32471]" dest="variable_declaration_statement [32305,32337]"/>
  <match src="identifier: value [3519,3524]" dest="identifier: value [3486,3491]"/>
  <match src="public: public [24191,24197]" dest="public: public [24057,24063]"/>
  <match src="): ) [7787,7788]" dest="): ) [7754,7755]"/>
  <match src="call_argument [30912,30916]" dest="call_argument [30778,30782]"/>
  <match src="(: ( [27123,27124]" dest="(: ( [26989,26990]"/>
  <match src="member_expression [22882,22902]" dest="member_expression [22748,22768]"/>
  <match src="primitive_type [40637,40644]" dest="primitive_type [40435,40442]"/>
  <match src="call_argument [25120,25132]" dest="call_argument [24986,24998]"/>
  <match src="string: string [14485,14491]" dest="string: string [14419,14425]"/>
  <match src="call_argument [25096,25118]" dest="call_argument [24962,24984]"/>
  <match src="): ) [46821,46822]" dest="): ) [46619,46620]"/>
  <match src="(: ( [24176,24177]" dest="(: ( [24042,24043]"/>
  <match src="variable_declaration_statement [34957,34971]" dest="variable_declaration_statement [34823,34837]"/>
  <match src="): ) [10138,10139]" dest="): ) [10105,10106]"/>
  <match src="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [5068,5140]" dest="comment: /**      * @dev Returns the number of values on the set. O(1).      */ [5035,5107]"/>
  <match src="string_literal [33380,33426]" dest="string_literal [33246,33292]"/>
  <match src="public: public [25054,25060]" dest="public: public [24920,24926]"/>
  <match src="bytes32: bytes32 [2742,2749]" dest="bytes32: bytes32 [2709,2716]"/>
  <match src="return_statement [15122,15217]" dest="return_statement [15056,15151]"/>
  <match src="): ) [16001,16002]" dest="): ) [15935,15936]"/>
  <match src="member_expression [28658,28669]" dest="member_expression [28524,28535]"/>
  <match src="identifier: depositor [48704,48713]" dest="identifier: depositor [48788,48797]"/>
  <match src="user_defined_type [52059,52074]" dest="user_defined_type [52215,52230]"/>
  <match src="address: address [54186,54193]" dest="address: address [54420,54427]"/>
  <match src="call_argument [48486,48501]" dest="call_argument [48570,48585]"/>
  <match src="member_expression [31918,31926]" dest="member_expression [31784,31792]"/>
  <match src="true: true [30049,30053]" dest="true: true [29915,29919]"/>
  <match src="identifier: dest [35664,35668]" dest="identifier: dest [35530,35534]"/>
  <match src="(: ( [14530,14531]" dest="(: ( [14464,14465]"/>
  <match src="identifier: account [27330,27337]" dest="identifier: account [27196,27203]"/>
  <match src=",: , [49082,49083]" dest=",: , [49166,49167]"/>
  <match src="): ) [15215,15216]" dest="): ) [15149,15150]"/>
  <match src="returns: returns [30557,30564]" dest="returns: returns [30423,30430]"/>
  <match src="type_name [6094,6101]" dest="type_name [6061,6068]"/>
  <match src="pragma: pragma [1053,1059]" dest="pragma: pragma [1020,1026]"/>
  <match src="identifier: success [15863,15870]" dest="identifier: success [15797,15804]"/>
  <match src="]: ] [50566,50567]" dest="]: ] [50650,50651]"/>
  <match src="): ) [30758,30759]" dest="): ) [30624,30625]"/>
  <match src="function: function [39201,39209]" dest="function: function [38999,39007]"/>
  <match src="call_argument [24623,24645]" dest="call_argument [24489,24511]"/>
  <match src="&quot;: &quot; [27663,27664]" dest="&quot;: &quot; [27528,27529]"/>
  <match src="[: [ [50466,50467]" dest="[: [ [50550,50551]"/>
  <match src="pragma: pragma [10794,10800]" dest="pragma: pragma [10728,10734]"/>
  <match src="indexed: indexed [22681,22688]" dest="indexed: indexed [22547,22554]"/>
  <match src="primitive_type [41295,41299]" dest="primitive_type [41093,41097]"/>
  <match src="call_argument [49562,49575]" dest="call_argument [49646,49659]"/>
  <match src="assembly: assembly [34480,34488]" dest="assembly: assembly [34346,34354]"/>
  <match src="return: return [8316,8322]" dest="return: return [8283,8289]"/>
  <match src="(: ( [35018,35019]" dest="(: ( [34884,34885]"/>
  <match src="]: ] [50911,50912]" dest="]: ] [50995,50996]"/>
  <match src="primitive_type [22806,22813]" dest="primitive_type [22672,22679]"/>
  <match src="identifier: itemLength [31798,31808]" dest="identifier: itemLength [31664,31674]"/>
  <match src="boolean_literal [3101,3106]" dest="boolean_literal [3068,3073]"/>
  <match src="type_name [51934,51943]" dest="type_name [52090,52099]"/>
  <match src="interface_declaration [42084,43505]" dest="interface_declaration [41883,43304]"/>
  <match src="parameter [4950,4965]" dest="parameter [4917,4932]"/>
  <match src="comment: // We read and store the value's index to prevent multiple reads from the same storage slot [3384,3475]" dest="comment: // We read and store the value's index to prevent multiple reads from the same storage slot [3351,3442]"/>
  <match src="binary_expression [12957,12988]" dest="binary_expression [12891,12922]"/>
  <match src="uint160: uint160 [7774,7781]" dest="uint160: uint160 [7741,7748]"/>
  <match src="comment: // Locking single ERC721 token [48213,48243]" dest="comment: // Locking single ERC721 token [48297,48327]"/>
  <match src="block_statement [48283,48752]" dest="block_statement [48367,48836]"/>
  <match src="function: function [50020,50028]" dest="function: function [50104,50112]"/>
  <match src="function: function [6801,6809]" dest="function: function [6768,6776]"/>
  <match src="(: ( [26621,26622]" dest="(: ( [26487,26488]"/>
  <match src="{: { [37493,37494]" dest="{: { [37291,37292]"/>
  <match src="): ) [51784,51785]" dest="): ) [51940,51941]"/>
  <match src="variable_declaration_statement [31035,31081]" dest="variable_declaration_statement [30901,30947]"/>
  <match src="comment: /**      * @dev Transfers `tokenId` token from `from` to `to`.      *      * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must be owned by `from`.      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.      *      * Emits a {Transfer} event.      */ [39287,39804]" dest="comment: /**      * @dev Transfers `tokenId` token from `from` to `to`.      *      * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must be owned by `from`.      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.      *      * Emits a {Transfer} event.      */ [39085,39602]"/>
  <match src=".: . [23212,23213]" dest=".: . [23078,23079]"/>
  <match src="member_expression [24239,24261]" dest="member_expression [24105,24127]"/>
  <match src="function_definition [25740,25949]" dest="function_definition [25606,25815]"/>
  <match src=",: , [3333,3334]" dest=",: , [3300,3301]"/>
  <match src="bytes32: bytes32 [27723,27730]" dest="bytes32: bytes32 [27588,27595]"/>
  <match src="): ) [22311,22312]" dest="): ) [22177,22178]"/>
  <match src="(: ( [35895,35896]" dest="(: ( [35761,35762]"/>
  <match src="bool: bool [8299,8303]" dest="bool: bool [8266,8270]"/>
  <match src="type_name [887,894]" dest="type_name [887,894]"/>
  <match src="private: private [5180,5187]" dest="private: private [5147,5154]"/>
  <match src="(: ( [32609,32610]" dest="(: ( [32475,32476]"/>
  <match src="type_name [27723,27730]" dest="type_name [27588,27595]"/>
  <match src="{: { [29839,29840]" dest="{: { [29705,29706]"/>
  <match src="identifier: rootToken [48503,48512]" dest="identifier: rootToken [48587,48596]"/>
  <match src="identifier: set [4734,4737]" dest="identifier: set [4701,4704]"/>
  <match src="call_expression [30431,30463]" dest="call_expression [30297,30329]"/>
  <match src="identifier: item [31210,31214]" dest="identifier: item [31076,31080]"/>
  <match src="): ) [24659,24660]" dest="): ) [24525,24526]"/>
  <match src="variable_declaration_statement [29212,29258]" dest="variable_declaration_statement [29078,29124]"/>
  <match src="parameter [37247,37251]" dest="parameter [37080,37084]"/>
  <match src="call_argument [9750,9760]" dest="call_argument [9717,9727]"/>
  <match src="if_statement [51256,54906]" dest="if_statement [51412,55212]"/>
  <match src="==: == [31110,31112]" dest="==: == [30976,30978]"/>
  <match src="false: false [4821,4826]" dest="false: false [4788,4793]"/>
  <match src="(: ( [39226,39227]" dest="(: ( [39024,39025]"/>
  <match src="call_argument [14143,14149]" dest="call_argument [14077,14083]"/>
  <match src="function_body [9016,9091]" dest="function_body [8983,9058]"/>
  <match src="call_argument [30794,30798]" dest="call_argument [30660,30664]"/>
  <match src="member_expression [48257,48275]" dest="member_expression [48341,48359]"/>
  <match src="}: } [33460,33461]" dest="}: } [33326,33327]"/>
  <match src="block_statement [50503,51250]" dest="block_statement [50587,51406]"/>
  <match src="member_expression [30316,30324]" dest="member_expression [30182,30190]"/>
  <match src="comment: // Storage of set values [2299,2323]" dest="comment: // Storage of set values [2266,2290]"/>
  <match src="call_expression [52760,52791]" dest="call_expression [52916,52947]"/>
  <match src="function: function [28931,28939]" dest="function: function [28797,28805]"/>
  <match src="call_argument [48181,48193]" dest="call_argument [48265,48277]"/>
  <match src="identifier: role [24246,24250]" dest="identifier: role [24112,24116]"/>
  <match src="bytes: bytes [54571,54576]" dest="bytes: bytes [54805,54810]"/>
  <match src="type_name [5666,5673]" dest="type_name [5633,5640]"/>
  <match src="identifier: item [32273,32277]" dest="identifier: item [32139,32143]"/>
  <match src="identifier: _msgSender [27784,27794]" dest="identifier: _msgSender [27649,27659]"/>
  <match src="identifier: tokenId [54112,54119]" dest="identifier: tokenId [54346,54353]"/>
  <match src="identifier: WORD_SIZE [35835,35844]" dest="identifier: WORD_SIZE [35701,35710]"/>
  <match src="primitive_type [9042,9049]" dest="primitive_type [9009,9016]"/>
  <match src="identifier: owner [38477,38482]" dest="identifier: owner [38275,38280]"/>
  <match src="type_name [9408,9412]" dest="type_name [9375,9379]"/>
  <match src="): ) [30324,30325]" dest="): ) [30190,30191]"/>
  <match src="identifier: len [32447,32450]" dest="identifier: len [32313,32316]"/>
  <match src="type_name [31035,31042]" dest="type_name [30901,30908]"/>
  <match src="&quot;: &quot; [33380,33381]" dest="&quot;: &quot; [33246,33247]"/>
  <match src="(: ( [16732,16733]" dest="(: ( [16666,16667]"/>
  <match src="{: { [18332,18333]" dest="{: { [18266,18267]"/>
  <match src="type_cast_expression [51750,51786]" dest="type_cast_expression [51906,51942]"/>
  <match src="internal: internal [6632,6640]" dest="internal: internal [6599,6607]"/>
  <match src="source_file [0,54926]" dest="source_file [0,55232]"/>
  <match src="): ) [47254,47255]" dest="): ) [47338,47339]"/>
  <match src="bytes: bytes [54461,54466]" dest="bytes: bytes [54695,54700]"/>
  <match src="type_name [7298,7305]" dest="type_name [7265,7272]"/>
  <match src="pure: pure [32201,32205]" dest="pure: pure [32067,32071]"/>
  <match src="array_access [24239,24251]" dest="array_access [24105,24117]"/>
  <match src="number_literal: 1 [35380,35381]" dest="number_literal: 1 [35246,35247]"/>
  <match src="call_expression [51758,51785]" dest="call_expression [51914,51941]"/>
  <match src="call_argument [9770,9775]" dest="call_argument [9737,9742]"/>
  <match src="{: { [33965,33966]" dest="{: { [33831,33832]"/>
  <match src="identifier: memPtr [31073,31079]" dest="identifier: memPtr [30939,30945]"/>
  <match src="function: function [2711,2719]" dest="function: function [2678,2686]"/>
  <match src="bytes: bytes [16630,16635]" dest="bytes: bytes [16564,16569]"/>
  <match src="primitive_type [37826,37833]" dest="primitive_type [37624,37631]"/>
  <match src="variable_declaration_statement [49209,49242]" dest="variable_declaration_statement [49293,49326]"/>
  <match src="&lt;: &lt; [52144,52145]" dest="&lt;: &lt; [52300,52301]"/>
  <match src="variable_declaration_statement [28720,28735]" dest="variable_declaration_statement [28586,28601]"/>
  <match src="): ) [37676,37677]" dest="): ) [37474,37475]"/>
  <match src="identifier: this [54194,54198]" dest="identifier: this [54428,54432]"/>
  <match src="return: return [47524,47530]" dest="return: return [47608,47614]"/>
  <match src="number_literal: 0 [35098,35099]" dest="number_literal: 0 [34964,34965]"/>
  <match src="yul_path [32595,32602]" dest="yul_path [32461,32468]"/>
  <match src="call_expression [23192,23221]" dest="call_expression [23058,23087]"/>
  <match src="comment: /**      * @dev Returns one of the accounts that have `role`. `index` must be a      * value between 0 and {getRoleMemberCount}, non-inclusive.      *      * Role bearers are not sorted in any particular way, and their ordering may      * change at any point.      *      * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure      * you perform all queries on the same block. See the following      * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]      * for more information.      */ [23237,23822]" dest="comment: /**      * @dev Returns one of the accounts that have `role`. `index` must be a      * value between 0 and {getRoleMemberCount}, non-inclusive.      *      * Role bearers are not sorted in any particular way, and their ordering may      * change at any point.      *      * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure      * you perform all queries on the same block. See the following      * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]      * for more information.      */ [23103,23688]"/>
  <match src="memory: memory [27575,27581]" dest="memory: memory [27440,27446]"/>
  <match src="uint256: uint256 [35634,35641]" dest="uint256: uint256 [35500,35507]"/>
  <match src="string_literal [27663,27691]" dest="string_literal [27528,27556]"/>
  <match src="variable_declaration [29155,29178]" dest="variable_declaration [29021,29044]"/>
  <match src="identifier: token [53957,53962]" dest="identifier: token [54191,54196]"/>
  <match src="yul_identifier [34293,34300]" dest="yul_identifier [34159,34166]"/>
  <match src="identifier: Address [10908,10915]" dest="identifier: Address [10842,10849]"/>
  <match src="(: ( [35268,35269]" dest="(: ( [35134,35135]"/>
  <match src="contract: contract [27458,27466]" dest="contract: contract [27323,27331]"/>
  <match src="function: function [47977,47985]" dest="function: function [48061,48069]"/>
  <match src="identifier: token [54615,54620]" dest="identifier: token [54849,54854]"/>
  <match src="]: ] [50671,50672]" dest="]: ] [50755,50756]"/>
  <match src="identifier: delegatecall [17916,17928]" dest="identifier: delegatecall [17850,17862]"/>
  <match src="uint256: uint256 [38429,38436]" dest="uint256: uint256 [38227,38234]"/>
  <match src="bytes32: bytes32 [22806,22813]" dest="bytes32: bytes32 [22672,22679]"/>
  <match src=",: , [18059,18060]" dest=",: , [17993,17994]"/>
  <match src="variable_declaration [31178,31192]" dest="variable_declaration [31044,31058]"/>
  <match src="call_argument [9457,9462]" dest="call_argument [9424,9429]"/>
  <match src="binary_expression [5028,5052]" dest="binary_expression [4995,5019]"/>
  <match src="assembly_statement [32571,32634]" dest="assembly_statement [32437,32500]"/>
  <match src="calldata: calldata [43152,43160]" dest="calldata: calldata [42951,42959]"/>
  <match src="state_variable_declaration [46417,46529]" dest="state_variable_declaration [46215,46327]"/>
  <match src="): ) [9776,9777]" dest="): ) [9743,9744]"/>
  <match src="parenthesized_expression [35354,35377]" dest="parenthesized_expression [35220,35243]"/>
  <match src="uint256: uint256 [43456,43463]" dest="uint256: uint256 [43255,43262]"/>
  <match src="(: ( [30253,30254]" dest="(: ( [30119,30120]"/>
  <match src="}: } [21472,21473]" dest="}: } [21338,21339]"/>
  <match src="function_body [5211,5255]" dest="function_body [5178,5222]"/>
  <match src="return_type_definition [30557,30574]" dest="return_type_definition [30423,30440]"/>
  <match src="[: [ [3518,3519]" dest="[: [ [3485,3486]"/>
  <match src="return: return [6144,6150]" dest="return: return [6111,6117]"/>
  <match src="identifier: length [49264,49270]" dest="identifier: length [49348,49354]"/>
  <match src="identifier: amount [12921,12927]" dest="identifier: amount [12855,12861]"/>
  <match src="parameter [17278,17290]" dest="parameter [17212,17224]"/>
  <match src="state_variable_declaration [28270,28309]" dest="state_variable_declaration [28136,28175]"/>
  <match src="yul_evm_builtin [33715,33720]" dest="yul_evm_builtin [33581,33586]"/>
  <match src="member_expression [19524,19534]" dest="member_expression [19425,19435]"/>
  <match src=".: . [16913,16914]" dest=".: . [16847,16848]"/>
  <match src="): ) [22695,22696]" dest="): ) [22561,22562]"/>
  <match src="indexed: indexed [46917,46924]" dest="indexed: indexed [46715,46722]"/>
  <match src="(: ( [53675,53676]" dest="(: ( [53909,53910]"/>
  <match src="primitive_type [32012,32019]" dest="primitive_type [31878,31885]"/>
  <match src="yul_identifier [31388,31394]" dest="yul_identifier [31254,31260]"/>
  <match src="primitive_type [31233,31240]" dest="primitive_type [31099,31106]"/>
  <match src="identifier: set [5694,5697]" dest="identifier: set [5661,5664]"/>
  <match src="call_expression [32646,32686]" dest="call_expression [32512,32552]"/>
  <match src="primitive_type [44969,44974]" dest="primitive_type [44767,44772]"/>
  <match src="state_mutability [18122,18126]" dest="state_mutability [18056,18060]"/>
  <match src="address: address [50646,50653]" dest="address: address [50730,50737]"/>
  <match src="visibility [18114,18121]" dest="visibility [18048,18055]"/>
  <match src="visibility [19570,19578]" dest="visibility [19471,19479]"/>
  <match src="struct_field_assignment [15912,15924]" dest="struct_field_assignment [15846,15858]"/>
  <match src="variable_declaration_statement [30338,30350]" dest="variable_declaration_statement [30204,30216]"/>
  <match src="override: override [50145,50153]" dest="override: override [50229,50237]"/>
  <match src="parameter [7336,7343]" dest="parameter [7303,7310]"/>
  <match src=":=: := [36185,36187]" dest=":=: := [36051,36053]"/>
  <match src="expression_statement [2834,2858]" dest="expression_statement [2801,2825]"/>
  <match src="identifier: _payloadOffset [32399,32413]" dest="identifier: _payloadOffset [32265,32279]"/>
  <match src="): ) [36201,36202]" dest="): ) [36067,36068]"/>
  <match src=",: , [14061,14062]" dest=",: , [13995,13996]"/>
  <match src="number_literal: 0 [51284,51285]" dest="number_literal: 0 [51440,51441]"/>
  <match src="call_expression [32296,32371]" dest="call_expression [32162,32237]"/>
  <match src="member_expression [24623,24645]" dest="member_expression [24489,24511]"/>
  <match src="parameter [855,871]" dest="parameter [855,871]"/>
  <match src="primitive_type [25023,25030]" dest="primitive_type [24889,24896]"/>
  <match src=".: . [29893,29894]" dest=".: . [29759,29760]"/>
  <match src="identifier: dataLen [29501,29508]" dest="identifier: dataLen [29367,29374]"/>
  <match src="primitive_type [28549,28554]" dest="primitive_type [28415,28420]"/>
  <match src="expression_statement [33855,33896]" dest="expression_statement [33721,33762]"/>
  <match src="parameter [44354,44371]" dest="parameter [44152,44169]"/>
  <match src="binary_expression [34369,34392]" dest="binary_expression [34235,34258]"/>
  <match src="(: ( [27777,27778]" dest="(: ( [27642,27643]"/>
  <match src="call_expression [16313,16386]" dest="call_expression [16247,16320]"/>
  <match src="parameter [9948,9952]" dest="parameter [9915,9919]"/>
  <match src="user_defined_type [45540,45557]" dest="user_defined_type [45338,45355]"/>
  <match src="(: ( [6155,6156]" dest="(: ( [6122,6123]"/>
  <match src="variable_declaration_statement [31275,31290]" dest="variable_declaration_statement [31141,31156]"/>
  <match src="(: ( [27253,27254]" dest="(: ( [27119,27120]"/>
  <match src="parameter [27017,27032]" dest="parameter [26883,26898]"/>
  <match src="identifier: inited [45126,45132]" dest="identifier: inited [44925,44931]"/>
  <match src="yul_function_call [34523,34539]" dest="yul_function_call [34389,34405]"/>
  <match src="comment: /**      * @dev Revokes `role` from the calling account.      *      * Roles are often managed via {grantRole} and {revokeRole}: this function's      * purpose is to provide a mechanism for accounts to lose their privileges      * if they are compromised (such as when a trusted device is misplaced).      *      * If the calling account had been granted `role`, emits a {RoleRevoked}      * event.      *      * Requirements:      *      * - the caller must be `account`.      */ [25241,25734]" dest="comment: /**      * @dev Revokes `role` from the calling account.      *      * Roles are often managed via {grantRole} and {revokeRole}: this function's      * purpose is to provide a mechanism for accounts to lose their privileges      * if they are compromised (such as when a trusted device is misplaced).      *      * If the calling account had been granted `role`, emits a {RoleRevoked}      * event.      *      * Requirements:      *      * - the caller must be `account`.      */ [25107,25600]"/>
  <match src="type_name [41921,41928]" dest="type_name [41719,41726]"/>
  <match src="{: { [26600,26601]" dest="{: { [26466,26467]"/>
  <match src="(: ( [9049,9050]" dest="(: ( [9016,9017]"/>
  <match src="event_paramater [21977,22005]" dest="event_paramater [21843,21871]"/>
  <match src="event: event [21897,21902]" dest="event: event [21763,21768]"/>
  <match src="comment: // @return indicator whether encoded payload is a list. negate this function call for isData. [29674,29767]" dest="comment: // @return indicator whether encoded payload is a list. negate this function call for isData. [29540,29633]"/>
  <match src="identifier: item [31247,31251]" dest="identifier: item [31113,31117]"/>
  <match src="identifier: success [16871,16878]" dest="identifier: success [16805,16812]"/>
  <match src="): ) [17905,17906]" dest="): ) [17839,17840]"/>
  <match src="call_argument [47137,47162]" dest="call_argument [47221,47246]"/>
  <match src="type_name [10632,10639]" dest="type_name [10599,10606]"/>
  <match src="type_name [29424,29431]" dest="type_name [29290,29297]"/>
  <match src="type_name [51870,51875]" dest="type_name [52026,52031]"/>
  <match src="}: } [8588,8589]" dest="}: } [8555,8556]"/>
  <match src="returns: returns [15088,15095]" dest="returns: returns [15022,15029]"/>
  <match src="state_mutability [32201,32205]" dest="state_mutability [32067,32071]"/>
  <match src="identifier: memPtr [33169,33175]" dest="identifier: memPtr [33035,33041]"/>
  <match src="&quot;: &quot; [17792,17793]" dest="&quot;: &quot; [17726,17727]"/>
  <match src="address: address [46764,46771]" dest="address: address [46562,46569]"/>
  <match src="&quot;: &quot; [16753,16754]" dest="&quot;: &quot; [16687,16688]"/>
  <match src="primitive_type [8092,8099]" dest="primitive_type [8059,8066]"/>
  <match src="type_name [24177,24184]" dest="type_name [24043,24050]"/>
  <match src="function: function [30163,30171]" dest="function: function [30029,30037]"/>
  <match src="member_expression [54615,54625]" dest="member_expression [54849,54859]"/>
  <match src="member_expression [33204,33215]" dest="member_expression [33070,33081]"/>
  <match src="number_literal: 0xf8 [28348,28352]" dest="number_literal: 0xf8 [28214,28218]"/>
  <match src="&quot;: &quot; [13164,13165]" dest="&quot;: &quot; [13098,13099]"/>
  <match src="identifier: recipient [13132,13141]" dest="identifier: recipient [13066,13075]"/>
  <match src="(: ( [40636,40637]" dest="(: ( [40434,40435]"/>
  <match src="): ) [23957,23958]" dest="): ) [23823,23824]"/>
  <match src="}: } [18011,18012]" dest="}: } [17945,17946]"/>
  <match src="): ) [30202,30203]" dest="): ) [30068,30069]"/>
  <match src="type_name [36097,36104]" dest="type_name [35963,35970]"/>
  <match src="yul_path [34293,34300]" dest="yul_path [34159,34166]"/>
  <match src="virtual: virtual [26841,26848]" dest="virtual: virtual [26707,26714]"/>
  <match src="call_argument [17991,18003]" dest="call_argument [17925,17937]"/>
  <match src="identifier: valueIndex [3542,3552]" dest="identifier: valueIndex [3509,3519]"/>
  <match src="identifier: only [48176,48180]" dest="identifier: only [48260,48264]"/>
  <match src="call_argument [17744,17750]" dest="call_argument [17678,17684]"/>
  <match src="address: address [46722,46729]" dest="address: address [46520,46527]"/>
  <match src="type_name [10119,10126]" dest="type_name [10086,10093]"/>
  <match src="==: == [53810,53812]" dest="==: == [54044,54046]"/>
  <match src="}: } [27170,27171]" dest="}: } [27036,27037]"/>
  <match src="(: ( [35354,35355]" dest="(: ( [35220,35221]"/>
  <match src="sub: sub [34224,34227]" dest="sub: sub [34090,34093]"/>
  <match src="identifier: target [16622,16628]" dest="identifier: target [16556,16562]"/>
  <match src="): ) [16903,16904]" dest="): ) [16837,16838]"/>
  <match src="identifier: data [14479,14483]" dest="identifier: data [14413,14417]"/>
  <match src="call_expression [6891,6910]" dest="call_expression [6858,6877]"/>
  <match src="calldata: calldata [910,918]" dest="calldata: calldata [910,918]"/>
  <match src=".: . [28836,28837]" dest=".: . [28702,28703]"/>
  <match src="variable_declaration_statement [31734,31780]" dest="variable_declaration_statement [31600,31646]"/>
  <match src="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [8141,8213]" dest="comment: /**      * @dev Returns true if the value is in the set. O(1).      */ [8108,8180]"/>
  <match src="return_statement [4814,4827]" dest="return_statement [4781,4794]"/>
  <match src="identifier: adminRole [24252,24261]" dest="identifier: adminRole [24118,24127]"/>
  <match src="expression_statement [32296,32372]" dest="expression_statement [32162,32238]"/>
  <match src="parameter [28618,28632]" dest="parameter [28484,28498]"/>
  <match src="identifier: byte0 [34003,34008]" dest="identifier: byte0 [33869,33874]"/>
  <match src="type_name [9354,9361]" dest="type_name [9321,9328]"/>
  <match src="identifier: result [31372,31378]" dest="identifier: result [31238,31244]"/>
  <match src="identifier: Set [3318,3321]" dest="identifier: Set [3285,3288]"/>
  <match src="): ) [24579,24580]" dest="): ) [24445,24446]"/>
  <match src="identifier: Context [21274,21281]" dest="identifier: Context [21140,21147]"/>
  <match src="identifier: operator [38070,38078]" dest="identifier: operator [37868,37876]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [5887,6051]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [5854,6018]"/>
  <match src="identifier: set [8080,8083]" dest="identifier: set [8047,8050]"/>
  <match src="yul_identifier [34748,34755]" dest="yul_identifier [34614,34621]"/>
  <match src="identifier: LIST_LONG_START [28330,28345]" dest="identifier: LIST_LONG_START [28196,28211]"/>
  <match src="inheritance_specifier [37485,37492]" dest="inheritance_specifier [37283,37290]"/>
  <match src="type_name [47406,47413]" dest="type_name [47490,47497]"/>
  <match src="identifier: errorMessage [14499,14511]" dest="identifier: errorMessage [14433,14445]"/>
  <match src="function_definition [25003,25233]" dest="function_definition [24869,25099]"/>
  <match src="primitive_type [28720,28727]" dest="primitive_type [28586,28593]"/>
  <match src="identifier: _contains [9972,9981]" dest="identifier: _contains [9939,9948]"/>
  <match src="): ) [8122,8123]" dest="): ) [8089,8090]"/>
  <match src="call_argument [12957,12988]" dest="call_argument [12891,12922]"/>
  <match src=".: . [7749,7750]" dest=".: . [7716,7717]"/>
  <match src="[: [ [4746,4747]" dest="[: [ [4713,4714]"/>
  <match src="identifier: account [27025,27032]" dest="identifier: account [26891,26898]"/>
  <match src="{: { [49486,49487]" dest="{: { [49570,49571]"/>
  <match src="identifier: _itemLength [31755,31766]" dest="identifier: _itemLength [31621,31632]"/>
  <match src="): ) [50118,50119]" dest="): ) [50202,50203]"/>
  <match src="identifier: len [35687,35690]" dest="identifier: len [35553,35556]"/>
  <match src="{: { [8305,8306]" dest="{: { [8272,8273]"/>
  <match src="identifier: returndata [15885,15895]" dest="identifier: returndata [15819,15829]"/>
  <match src="): ) [27691,27692]" dest="): ) [27556,27557]"/>
  <match src="return_type_definition [15598,15620]" dest="return_type_definition [15532,15554]"/>
  <match src="call_expression [9058,9080]" dest="call_expression [9025,9047]"/>
  <match src="(: ( [2805,2806]" dest="(: ( [2772,2773]"/>
  <match src="return: return [28817,28823]" dest="return: return [28683,28689]"/>
  <match src="bytes32: bytes32 [6617,6624]" dest="bytes32: bytes32 [6584,6591]"/>
  <match src="visibility [11547,11555]" dest="visibility [11481,11489]"/>
  <match src="): ) [32901,32902]" dest="): ) [32767,32768]"/>
  <match src="external: external [43171,43179]" dest="external: external [42970,42978]"/>
  <match src="call_argument [29300,29341]" dest="call_argument [29166,29207]"/>
  <match src="(: ( [34638,34639]" dest="(: ( [34504,34505]"/>
  <match src="primitive_type [6398,6405]" dest="primitive_type [6365,6372]"/>
  <match src="return_statement [14123,14191]" dest="return_statement [14057,14125]"/>
  <match src="identifier: len [30321,30324]" dest="identifier: len [30187,30190]"/>
  <match src="(: ( [51914,51915]" dest="(: ( [52070,52071]"/>
  <match src="primitive_type [21490,21497]" dest="primitive_type [21356,21363]"/>
  <match src="identifier: Initializable [45100,45113]" dest="identifier: Initializable [44899,44912]"/>
  <match src="identifier: Transfer [37602,37610]" dest="identifier: Transfer [37400,37408]"/>
  <match src="type_name [29155,29164]" dest="type_name [29021,29030]"/>
  <match src="primitive_type [53647,53654]" dest="primitive_type [53881,53888]"/>
  <match src="(: ( [50548,50549]" dest="(: ( [50632,50633]"/>
  <match src="bytes: bytes [16700,16705]" dest="bytes: bytes [16634,16639]"/>
  <match src="return_type_definition [10623,10640]" dest="return_type_definition [10590,10607]"/>
  <match src="(: ( [27081,27082]" dest="(: ( [26947,26948]"/>
  <match src="yul_evm_builtin [29952,29957]" dest="yul_evm_builtin [29818,29823]"/>
  <match src="): ) [30798,30799]" dest="): ) [30664,30665]"/>
  <match src="}: } [9090,9091]" dest="}: } [9057,9058]"/>
  <match src="memory: memory [14106,14112]" dest="memory: memory [14040,14046]"/>
  <match src="function_definition [40362,40417]" dest="function_definition [40160,40215]"/>
  <match src="identifier: RLPReader [45494,45503]" dest="identifier: RLPReader [45292,45301]"/>
  <match src="}: } [23228,23229]" dest="}: } [23094,23095]"/>
  <match src="return: return [35339,35345]" dest="return: return [35205,35211]"/>
  <match src="identifier: itemLen [34293,34300]" dest="identifier: itemLen [34159,34166]"/>
  <match src="identifier: ITokenPredicate [45413,45428]" dest="identifier: ITokenPredicate [45211,45226]"/>
  <match src="type_name [29872,29879]" dest="type_name [29738,29745]"/>
  <match src="{: { [27042,27043]" dest="{: { [26908,26909]"/>
  <match src="): ) [50477,50478]" dest="): ) [50561,50562]"/>
  <match src="yul_function_call [36188,36214]" dest="yul_function_call [36054,36080]"/>
  <match src="type_name [3957,3964]" dest="type_name [3924,3931]"/>
  <match src="&quot;: &quot; [45215,45216]" dest="&quot;: &quot; [45014,45015]"/>
  <match src=",: , [52469,52470]" dest=",: , [52625,52626]"/>
  <match src="): ) [47211,47212]" dest="): ) [47295,47296]"/>
  <match src="): ) [18147,18148]" dest="): ) [18081,18082]"/>
  <match src="state_mutability [19467,19471]" dest="state_mutability [19368,19372]"/>
  <match src="variable_declaration_statement [50520,50578]" dest="variable_declaration_statement [50604,50662]"/>
  <match src="identifier: set [8964,8967]" dest="identifier: set [8931,8934]"/>
  <match src="type_name [9007,9014]" dest="type_name [8974,8981]"/>
  <match src="&quot;: &quot; [13254,13255]" dest="&quot;: &quot; [13188,13189]"/>
  <match src="boolean_literal [30049,30053]" dest="boolean_literal [29915,29919]"/>
  <match src="(: ( [37610,37611]" dest="(: ( [37408,37409]"/>
  <match src="{: { [34990,34991]" dest="{: { [34856,34857]"/>
  <match src="solidity: solidity [27437,27445]" dest="solidity: solidity [27303,27311]"/>
  <match src="call_argument [9042,9082]" dest="call_argument [9009,9049]"/>
  <match src="identifier: tokenId [40399,40406]" dest="identifier: tokenId [40197,40204]"/>
  <match src="type_cast_expression [8361,8375]" dest="type_cast_expression [8328,8342]"/>
  <match src="comment: // skip over the first byte [34093,34120]" dest="comment: // skip over the first byte [33959,33986]"/>
  <match src="identifier: functionStaticCall [16204,16222]" dest="identifier: functionStaticCall [16138,16156]"/>
  <match src=".: . [5705,5706]" dest=".: . [5672,5673]"/>
  <match src="type_name [2725,2728]" dest="type_name [2692,2695]"/>
  <match src="(: ( [9749,9750]" dest="(: ( [9716,9717]"/>
  <match src="parameter [32851,32870]" dest="parameter [32717,32736]"/>
  <match src=",: , [4965,4966]" dest=",: , [4932,4933]"/>
  <match src="): ) [6107,6108]" dest="): ) [6074,6075]"/>
  <match src=",: , [29072,29073]" dest=",: , [28938,28939]"/>
  <match src="}: } [5878,5879]" dest="}: } [5845,5846]"/>
  <match src="string_literal [17345,17386]" dest="string_literal [17279,17320]"/>
  <match src="}: } [29665,29666]" dest="}: } [29531,29532]"/>
  <match src="identifier: value [15912,15917]" dest="identifier: value [15846,15851]"/>
  <match src="comment: /**      * @dev Gives permission to `to` to transfer `tokenId` token to another account.      * The approval is cleared when the token is transferred.      *      * Only a single account can be approved at a time, so approving the zero address clears previous approvals.      *      * Requirements:      *      * - The caller must own the token or be an approved operator.      * - `tokenId` must exist.      *      * Emits an {Approval} event.      */ [39892,40356]" dest="comment: /**      * @dev Gives permission to `to` to transfer `tokenId` token to another account.      * The approval is cleared when the token is transferred.      *      * Only a single account can be approved at a time, so approving the zero address clears previous approvals.      *      * Requirements:      *      * - The caller must own the token or be an approved operator.      * - `tokenId` must exist.      *      * Emits an {Approval} event.      */ [39690,40154]"/>
  <match src="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [7807,7969]" dest="comment: /**      * @dev Removes a value from a set. O(1).      *      * Returns true if the value was removed from the set, that is if it was      * present.      */ [7774,7936]"/>
  <match src="): ) [8375,8376]" dest="): ) [8342,8343]"/>
  <match src=",: , [15043,15044]" dest=",: , [14977,14978]"/>
  <match src="return_type_definition [5657,5674]" dest="return_type_definition [5624,5641]"/>
  <match src="function: function [6358,6366]" dest="function: function [6325,6333]"/>
  <match src="identifier: len [33223,33226]" dest="identifier: len [33089,33092]"/>
  <match src="!: ! [30904,30905]" dest="!: ! [30770,30771]"/>
  <match src="bytes: bytes [51870,51875]" dest="bytes: bytes [52026,52031]"/>
  <match src="comment: /**  * @title ERC721 token receiver interface  * @dev Interface for any contract that wants to support safeTransfers  * from ERC721 asset contracts.  */ [139,295]" dest="comment: /**  * @title ERC721 token receiver interface  * @dev Interface for any contract that wants to support safeTransfers  * from ERC721 asset contracts.  */ [139,295]"/>
  <match src="event_definition [22224,22313]" dest="event_definition [22090,22179]"/>
  <match src="yul_assignment [31372,31395]" dest="yul_assignment [31238,31261]"/>
  <match src="function_body [15621,16010]" dest="function_body [15555,15944]"/>
  <match src="variable_declaration [15858,15870]" dest="variable_declaration [15792,15804]"/>
  <match src="identifier: memPtr [29406,29412]" dest="identifier: memPtr [29272,29278]"/>
  <match src="identifier: log [50238,50241]" dest="identifier: log [50322,50325]"/>
  <match src="binary_expression [33915,33939]" dest="binary_expression [33781,33805]"/>
  <match src="internal: internal [16677,16685]" dest="internal: internal [16611,16619]"/>
  <match src="identifier: tokenId [52188,52195]" dest="identifier: tokenId [52344,52351]"/>
  <match src="identifier: tokenId [42488,42495]" dest="identifier: tokenId [42287,42294]"/>
  <match src="bytes: bytes [15872,15877]" dest="bytes: bytes [15806,15811]"/>
  <match src="): ) [35911,35912]" dest="): ) [35777,35778]"/>
  <match src="bytes32: bytes32 [21534,21541]" dest="bytes32: bytes32 [21400,21407]"/>
  <match src="parenthesized_expression [54848,54894]" dest="parenthesized_expression [55154,55200]"/>
  <match src="identifier: toUint [50913,50919]" dest="identifier: toUint [50997,51003]"/>
  <match src="function_definition [14428,14623]" dest="function_definition [14362,14557]"/>
  <match src="memory: memory [50218,50224]" dest="memory: memory [50302,50308]"/>
  <match src="): ) [8377,8378]" dest="): ) [8344,8345]"/>
  <match src="state_variable_declaration [46600,46641]" dest="state_variable_declaration [46398,46439]"/>
  <match src="{: { [36158,36159]" dest="{: { [36024,36025]"/>
  <match src="function: function [37177,37185]" dest="function: function [37010,37018]"/>
  <match src="member_expression [50654,50679]" dest="member_expression [50738,50763]"/>
  <match src="parameter [24212,24219]" dest="parameter [24078,24085]"/>
  <match src="): ) [18112,18113]" dest="): ) [18046,18047]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls [16805,16855]" dest="comment: // solhint-disable-next-line avoid-low-level-calls [16739,16789]"/>
  <match src="function_definition [14998,15224]" dest="function_definition [14932,15158]"/>
  <match src="return_type_definition [16691,16713]" dest="return_type_definition [16625,16647]"/>
  <match src="): ) [29034,29035]" dest="): ) [28900,28901]"/>
  <match src="}: } [3124,3125]" dest="}: } [3091,3092]"/>
  <match src="function_body [9724,9785]" dest="function_body [9691,9752]"/>
  <match src="]: ] [4752,4753]" dest="]: ] [4719,4720]"/>
  <match src="identifier: lastvalue [4252,4261]" dest="identifier: lastvalue [4219,4228]"/>
  <match src="inheritance_specifier [27489,27502]" dest="inheritance_specifier [27354,27367]"/>
  <match src="call_argument [13186,13193]" dest="call_argument [13120,13127]"/>
  <match src="): ) [34944,34945]" dest="): ) [34810,34811]"/>
  <match src="primitive_type [28315,28320]" dest="primitive_type [28181,28186]"/>
  <match src="(: ( [51031,51032]" dest="(: ( [51115,51116]"/>
  <match src="identifier: value [2851,2856]" dest="identifier: value [2818,2823]"/>
  <match src="}: } [14622,14623]" dest="}: } [14556,14557]"/>
  <match src="pure: pure [30862,30866]" dest="pure: pure [30728,30732]"/>
  <match src="): ) [6435,6436]" dest="): ) [6402,6403]"/>
  <match src="type_name [32215,32220]" dest="type_name [32081,32086]"/>
  <match src="identifier: require [29052,29059]" dest="identifier: require [28918,28925]"/>
  <match src="indexed: indexed [37811,37818]" dest="indexed: indexed [37609,37616]"/>
  <match src="call_argument [9437,9447]" dest="call_argument [9404,9414]"/>
  <match src="parameter [44941,44958]" dest="parameter [44739,44756]"/>
  <match src="bool: bool [18047,18051]" dest="bool: bool [17981,17985]"/>
  <match src="view: view [22844,22848]" dest="view: view [22710,22714]"/>
  <match src="if: if [35115,35117]" dest="if: if [34981,34983]"/>
  <match src="returns: returns [32885,32892]" dest="returns: returns [32751,32758]"/>
  <match src="internal: internal [8276,8284]" dest="internal: internal [8243,8251]"/>
  <match src="state_mutability [29819,29823]" dest="state_mutability [29685,29689]"/>
  <match src="): ) [35696,35697]" dest="): ) [35562,35563]"/>
  <match src="modifier_invocation [48176,48194]" dest="modifier_invocation [48260,48278]"/>
  <match src="identifier: i [29552,29553]" dest="identifier: i [29418,29419]"/>
  <match src="identifier: currPtr [33244,33251]" dest="identifier: currPtr [33110,33117]"/>
  <match src="identifier: length [52018,52024]" dest="identifier: length [52174,52180]"/>
  <match src="call_expression [15724,15784]" dest="call_expression [15658,15718]"/>
  <match src="uint256: uint256 [43129,43136]" dest="uint256: uint256 [42928,42935]"/>
  <match src="comment: // File: contracts/common/AccessControlMixin.sol [27378,27426]" dest="comment: // File: contracts/common/AccessControlMixin.sol [27244,27292]"/>
  <match src="(: ( [16613,16614]" dest="(: ( [16547,16548]"/>
  <match src="call_argument [2806,2809]" dest="call_argument [2773,2776]"/>
  <match src="type_cast_expression [9449,9463]" dest="type_cast_expression [9416,9430]"/>
  <match src="variable_declaration_statement [31300,31338]" dest="variable_declaration_statement [31166,31204]"/>
  <match src="call_argument [32414,32425]" dest="call_argument [32280,32291]"/>
  <match src="): ) [19568,19569]" dest="): ) [19469,19470]"/>
  <match src="identifier: withdrawer [50528,50538]" dest="identifier: withdrawer [50612,50622]"/>
  <match src="return_statement [35241,35250]" dest="return_statement [35107,35116]"/>
  <match src="(: ( [942,943]" dest="(: ( [942,943]"/>
  <match src="identifier: _roles [26933,26939]" dest="identifier: _roles [26799,26805]"/>
  <match src="state_variable_declaration [45121,45141]" dest="state_variable_declaration [44920,44940]"/>
  <match src="pure: pure [28995,28999]" dest="pure: pure [28861,28865]"/>
  <match src="function: function [26983,26991]" dest="function: function [26849,26857]"/>
  <match src="identifier: depositData [48257,48268]" dest="identifier: depositData [48341,48352]"/>
  <match src="}: } [45013,45014]" dest="}: } [44811,44812]"/>
  <match src="parameter [48035,48058]" dest="parameter [48119,48142]"/>
  <match src="}: } [47579,47580]" dest="}: } [47663,47664]"/>
  <match src=",: , [22671,22672]" dest=",: , [22537,22538]"/>
  <match src="pragma_directive [43572,43594]" dest="pragma_directive [43371,43394]"/>
  <match src="(: ( [35907,35908]" dest="(: ( [35773,35774]"/>
  <match src="emit_statement [27107,27153]" dest="emit_statement [26973,27019]"/>
  <match src="call_argument [31099,31121]" dest="call_argument [30965,30987]"/>
  <match src="}: } [11898,11899]" dest="}: } [11832,11833]"/>
  <match src="type_cast_expression [51260,51296]" dest="type_cast_expression [51416,51452]"/>
  <match src="type_name [45121,45125]" dest="type_name [44920,44924]"/>
  <match src="==: == [29287,29289]" dest="==: == [29153,29155]"/>
  <match src="binary_expression [18309,18330]" dest="binary_expression [18243,18264]"/>
  <match src=",: , [35900,35901]" dest=",: , [35766,35767]"/>
  <match src="{: { [27292,27293]" dest="{: { [27158,27159]"/>
  <match src="function: function [38187,38195]" dest="function: function [37985,37993]"/>
  <match src="]: ] [46995,46996]" dest="]: ] [46793,46794]"/>
  <match src="returns: returns [6646,6653]" dest="returns: returns [6613,6620]"/>
  <match src="identifier: hasRole [24615,24622]" dest="identifier: hasRole [24481,24488]"/>
  <match src="if_statement [35722,35743]" dest="if_statement [35588,35609]"/>
  <match src="string_literal [30609,30646]" dest="string_literal [30475,30512]"/>
  <match src="(: ( [33243,33244]" dest="(: ( [33109,33110]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [9171,9335]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [9138,9302]"/>
  <match src="type_name [29155,29162]" dest="type_name [29021,29028]"/>
  <match src="{: { [50990,50991]" dest="{: { [51074,51075]"/>
  <match src=".: . [50253,50254]" dest=".: . [50337,50338]"/>
  <match src="primitive_type [46987,46994]" dest="primitive_type [46785,46792]"/>
  <match src="array_access [51893,51906]" dest="array_access [52049,52062]"/>
  <match src="comment: // File: @openzeppelin/contracts/access/AccessControl.sol [19790,19847]" dest="comment: // File: @openzeppelin/contracts/access/AccessControl.sol [19691,19748]"/>
  <match src="return: return [23921,23927]" dest="return: return [23787,23793]"/>
  <match src="primitive_type [9375,9382]" dest="primitive_type [9342,9349]"/>
  <match src="call_expression [15732,15750]" dest="call_expression [15666,15684]"/>
  <match src="identifier: success [18164,18171]" dest="identifier: success [18098,18105]"/>
  <match src=":=: := [34613,34615]" dest=":=: := [34479,34481]"/>
  <match src="return_type_definition [6118,6132]" dest="return_type_definition [6085,6099]"/>
  <match src="identifier: owner [41247,41252]" dest="identifier: owner [41045,41050]"/>
  <match src="(: ( [46675,46676]" dest="(: ( [46473,46474]"/>
  <match src="identifier: RLPItem [45550,45557]" dest="identifier: RLPItem [45348,45355]"/>
  <match src="{: { [48283,48284]" dest="{: { [48367,48368]"/>
  <match src="identifier: members [23941,23948]" dest="identifier: members [23807,23814]"/>
  <match src="identifier: length [49217,49223]" dest="identifier: length [49301,49307]"/>
  <match src="{: { [28639,28640]" dest="{: { [28505,28506]"/>
  <match src="private: private [27231,27238]" dest="private: private [27097,27104]"/>
  <match src="call_argument [28658,28673]" dest="call_argument [28524,28539]"/>
  <match src="parameter [29018,29034]" dest="parameter [28884,28900]"/>
  <match src="call_argument [15648,15652]" dest="call_argument [15582,15586]"/>
  <match src="if: if [27053,27055]" dest="if: if [26919,26921]"/>
  <match src="identifier: set [10589,10592]" dest="identifier: set [10556,10559]"/>
  <match src="type_name [30254,30259]" dest="type_name [30120,30125]"/>
  <match src="primitive_type [22648,22655]" dest="primitive_type [22514,22521]"/>
  <match src="identifier: tokenId [37669,37676]" dest="identifier: tokenId [37467,37474]"/>
  <match src="}: } [29976,29977]" dest="}: } [29842,29843]"/>
  <match src="identifier: byte0 [35176,35181]" dest="identifier: byte0 [35042,35047]"/>
  <match src="): ) [29808,29809]" dest="): ) [29674,29675]"/>
  <match src="internal: internal [6841,6849]" dest="internal: internal [6808,6816]"/>
  <match src="contract_body [21282,27374]" dest="contract_body [21148,27240]"/>
  <match src="storage: storage [5616,5623]" dest="storage: storage [5583,5590]"/>
  <match src="assignment_expression [33855,33895]" dest="assignment_expression [33721,33761]"/>
  <match src="while_statement [33237,33461]" dest="while_statement [33103,33327]"/>
  <match src="number_literal: 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef [45958,46024]" dest="number_literal: 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef [45756,45822]"/>
  <match src="member_expression [7746,7756]" dest="member_expression [7713,7723]"/>
  <match src="): ) [29412,29413]" dest="): ) [29278,29279]"/>
  <match src="identifier: item [30316,30320]" dest="identifier: item [30182,30186]"/>
  <match src="&quot;: &quot; [17753,17754]" dest="&quot;: &quot; [17687,17688]"/>
  <match src="identifier: target [17627,17633]" dest="identifier: target [17561,17567]"/>
  <match src=".: . [31922,31923]" dest=".: . [31788,31789]"/>
  <match src="(: ( [27633,27634]" dest="(: ( [27498,27499]"/>
  <match src="state_mutability [6641,6645]" dest="state_mutability [6608,6612]"/>
  <match src="assembly_statement [30360,30419]" dest="assembly_statement [30226,30285]"/>
  <match src=".: . [6159,6160]" dest=".: . [6126,6127]"/>
  <match src="primitive_type [13114,13118]" dest="primitive_type [13048,13052]"/>
  <match src="&quot;: &quot; [30989,30990]" dest="&quot;: &quot; [30855,30856]"/>
  <match src="user_defined_type [7451,7454]" dest="user_defined_type [7418,7421]"/>
  <match src="): ) [8028,8029]" dest="): ) [7995,7996]"/>
  <match src="call_argument [16340,16344]" dest="call_argument [16274,16278]"/>
  <match src="return_type_definition [29009,29035]" dest="return_type_definition [28875,28901]"/>
  <match src="}: } [36003,36004]" dest="}: } [35869,35870]"/>
  <match src="parameter [26813,26830]" dest="parameter [26679,26696]"/>
  <match src="function_body [47042,47044]" dest="function_body [47126,47128]"/>
  <match src="primitive_type [37633,37640]" dest="primitive_type [37431,37438]"/>
  <match src="parameter [41254,41270]" dest="parameter [41052,41068]"/>
  <match src="uint256: uint256 [38244,38251]" dest="uint256: uint256 [38042,38049]"/>
  <match src="{: { [27737,27738]" dest="{: { [27602,27603]"/>
  <match src="function_body [25808,25949]" dest="function_body [25674,25815]"/>
  <match src="user_defined_type [37485,37492]" dest="user_defined_type [37283,37290]"/>
  <match src="member_expression [51893,51914]" dest="member_expression [52049,52070]"/>
  <match src="if_statement [18160,18755]" dest="if_statement [18094,18689]"/>
  <match src="event_paramater [21920,21940]" dest="event_paramater [21786,21806]"/>
  <match src="add: add [34078,34081]" dest="add: add [33944,33947]"/>
  <match src=",: , [17239,17240]" dest=",: , [17173,17174]"/>
  <match src="call_expression [25915,25941]" dest="call_expression [25781,25807]"/>
  <match src="calldata: calldata [48103,48111]" dest="calldata: calldata [48187,48195]"/>
  <match src="member_expression [31068,31079]" dest="member_expression [30934,30945]"/>
  <match src="identifier: _setRoleAdmin [26785,26798]" dest="identifier: _setRoleAdmin [26651,26664]"/>
  <match src="}: } [17007,17008]" dest="}: } [16941,16942]"/>
  <match src="{: { [34489,34490]" dest="{: { [34355,34356]"/>
  <match src="{: { [45172,45173]" dest="{: { [44971,44972]"/>
  <match src=",: , [44371,44372]" dest=",: , [44169,44170]"/>
  <match src="{: { [17292,17293]" dest="{: { [17226,17227]"/>
  <match src="identifier: adminRole [26901,26910]" dest="identifier: adminRole [26767,26776]"/>
  <match src="member_expression [53676,53701]" dest="member_expression [53910,53935]"/>
  <match src="identifier: set [4381,4384]" dest="identifier: set [4348,4351]"/>
  <match src="identifier: from [37627,37631]" dest="identifier: from [37425,37429]"/>
  <match src="-: - [35352,35353]" dest="-: - [35218,35219]"/>
  <match src=":=: := [11874,11876]" dest=":=: := [11808,11810]"/>
  <match src="[: [ [51903,51904]" dest="[: [ [52059,52060]"/>
  <match src="(: ( [17743,17744]" dest="(: ( [17677,17678]"/>
  <match src=",: , [7296,7297]" dest=",: , [7263,7264]"/>
  <match src="return_statement [6672,6708]" dest="return_statement [6639,6675]"/>
  <match src="call_argument [49287,49333]" dest="call_argument [49371,49417]"/>
  <match src="identifier: _contains [4940,4949]" dest="identifier: _contains [4907,4916]"/>
  <match src="returns: returns [30867,30874]" dest="returns: returns [30733,30740]"/>
  <match src="type_name [6374,6384]" dest="type_name [6341,6351]"/>
  <match src="comment: /**  * @dev Contract module that allows children to implement role-based access  * control mechanisms.  *  * Roles are referred to by their `bytes32` identifier. These should be exposed  * in the external API and be unique. The best way to achieve this is by  * using `public constant` hash digests:  *  * ```  * bytes32 public constant MY_ROLE = keccak256(&quot;MY_ROLE&quot;);  * ```  *  * Roles can be used to represent a set of permissions. To restrict access to a  * function call, use {hasRole}:  *  * ```  * function foo() public {  *     require(hasRole(MY_ROLE, msg.sender));  *     ...  * }  * ```  *  * Roles can be granted and revoked dynamically via the {grantRole} and  * {revokeRole} functions. Each role has an associated admin role, and only  * accounts that have a role's admin role can call {grantRole} and {revokeRole}.  *  * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means  * that only accounts with this role will be able to grant or revoke other  * roles. More complex role relationships can be created by using  * {_setRoleAdmin}.  *  * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to  * grant and revoke this role. Extra precautions should be taken to secure  * accounts that have been granted it.  */ [19927,21237]" dest="comment: /**  * @dev Contract module that allows children to implement role-based access  * control mechanisms.  *  * Roles are referred to by their `bytes32` identifier. These should be exposed  * in the external API and be unique. The best way to achieve this is by  * using `public constant` hash digests:  *  * ```  * bytes32 public constant MY_ROLE = keccak256(&quot;MY_ROLE&quot;);  * ```  *  * Roles can be used to represent a set of permissions. To restrict access to a  * function call, use {hasRole}:  *  * ```  * function foo() public {  *     require(hasRole(MY_ROLE, msg.sender));  *     ...  * }  * ```  *  * Roles can be granted and revoked dynamically via the {grantRole} and  * {revokeRole} functions. Each role has an associated admin role, and only  * accounts that have a role's admin role can call {grantRole} and {revokeRole}.  *  * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means  * that only accounts with this role will be able to grant or revoke other  * roles. More complex role relationships can be created by using  * {_setRoleAdmin}.  *  * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to  * grant and revoke this role. Extra precautions should be taken to secure  * accounts that have been granted it.  */ [19793,21103]"/>
  <match src="call_argument [48862,48873]" dest="call_argument [48946,48957]"/>
  <match src="identifier: rootToken [50076,50085]" dest="identifier: rootToken [50160,50169]"/>
  <match src="mload: mload [18566,18571]" dest="mload: mload [18500,18505]"/>
  <match src=".: . [33222,33223]" dest=".: . [33088,33089]"/>
  <match src="identifier: logData [54561,54568]" dest="identifier: logData [54795,54802]"/>
  <match src=",: , [9072,9073]" dest=",: , [9039,9040]"/>
  <match src="parameter [5202,5209]" dest="parameter [5169,5176]"/>
  <match src="call_argument [6689,6699]" dest="call_argument [6656,6666]"/>
  <match src="=: = [28257,28258]" dest="=: = [28123,28124]"/>
  <match src="return: return [30042,30048]" dest="return: return [29908,29914]"/>
  <match src="call_expression [27784,27796]" dest="call_expression [27649,27661]"/>
  <match src="identifier: RLPItem [30832,30839]" dest="identifier: RLPItem [30698,30705]"/>
  <match src="identifier: tokenIds [52027,52035]" dest="identifier: tokenIds [52183,52191]"/>
  <match src="return_type_definition [24203,24220]" dest="return_type_definition [24069,24086]"/>
  <match src="identifier: tokenIds [51951,51959]" dest="identifier: tokenIds [52107,52115]"/>
  <match src="): ) [34091,34092]" dest="): ) [33957,33958]"/>
  <match src="): ) [30799,30800]" dest="): ) [30665,30666]"/>
  <match src="identifier: dataLen [29614,29621]" dest="identifier: dataLen [29480,29487]"/>
  <match src="bytes32: bytes32 [4244,4251]" dest="bytes32: bytes32 [4211,4218]"/>
  <match src=",: , [6699,6700]" dest=",: , [6666,6667]"/>
  <match src="type_cast_expression [7774,7788]" dest="type_cast_expression [7741,7755]"/>
  <match src="(: ( [27755,27756]" dest="(: ( [27620,27621]"/>
  <match src="yul_evm_builtin [30391,30394]" dest="yul_evm_builtin [30257,30260]"/>
  <match src="parameter [50096,50112]" dest="parameter [50180,50196]"/>
  <match src="identifier: length [28663,28669]" dest="identifier: length [28529,28535]"/>
  <match src="function_body [14114,14198]" dest="function_body [14048,14132]"/>
  <match src="(: ( [7765,7766]" dest="(: ( [7732,7733]"/>
  <match src="parameter [15045,15062]" dest="parameter [14979,14996]"/>
  <match src="revert_statement [18708,18729]" dest="revert_statement [18642,18663]"/>
  <match src="type_name [16649,16655]" dest="type_name [16583,16589]"/>
  <match src="bool: bool [9408,9412]" dest="bool: bool [9375,9379]"/>
  <match src="(: ( [7990,7991]" dest="(: ( [7957,7958]"/>
  <match src="block_statement [3559,4793]" dest="block_statement [3526,4760]"/>
  <match src="): ) [6173,6174]" dest="): ) [6140,6141]"/>
  <match src="{: { [6873,6874]" dest="{: { [6840,6841]"/>
  <match src=",: , [41252,41253]" dest=",: , [41050,41051]"/>
  <match src="binary_expression [48257,48281]" dest="binary_expression [48341,48365]"/>
  <match src="uint256: uint256 [31300,31307]" dest="uint256: uint256 [31166,31173]"/>
  <match src="returns: returns [7327,7334]" dest="returns: returns [7294,7301]"/>
  <match src="variable_declaration [32496,32515]" dest="variable_declaration [32362,32381]"/>
  <match src="variable_declaration_tuple [17867,17906]" dest="variable_declaration_tuple [17801,17840]"/>
  <match src="=: = [30304,30305]" dest="=: = [30170,30171]"/>
  <match src="visibility [6109,6117]" dest="visibility [6076,6084]"/>
  <match src="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [10224,10555]" dest="comment: /**     * @dev Returns the value stored at position `index` in the set. O(1).     *     * Note that there are no guarantees on the ordering of values inside the     * array, and it may change when more values are added or removed.     *     * Requirements:     *     * - `index` must be strictly less than {length}.     */ [10191,10522]"/>
  <match src="identifier: role [24630,24634]" dest="identifier: role [24496,24500]"/>
  <match src="primitive_type [51750,51757]" dest="primitive_type [51906,51913]"/>
  <match src="member_expression [31317,31328]" dest="member_expression [31183,31194]"/>
  <match src="uint8: uint8 [28270,28275]" dest="uint8: uint8 [28136,28141]"/>
  <match src="string [30723,30758]" dest="string [30589,30624]"/>
  <match src="(: ( [50627,50628]" dest="(: ( [50711,50712]"/>
  <match src="identifier: Approval [37794,37802]" dest="identifier: Approval [37592,37600]"/>
  <match src="identifier: LIST_SHORT_START [34427,34443]" dest="identifier: LIST_SHORT_START [34293,34309]"/>
  <match src="identifier: STRING_LONG_START [33823,33840]" dest="identifier: STRING_LONG_START [33689,33706]"/>
  <match src="identifier: require [24607,24614]" dest="identifier: require [24473,24480]"/>
  <match src="yul_identifier [34720,34727]" dest="yul_identifier [34586,34593]"/>
  <match src="primitive_type [21362,21369]" dest="primitive_type [21228,21235]"/>
  <match src="identifier: RLPItem [28618,28625]" dest="identifier: RLPItem [28484,28491]"/>
  <match src="): ) [2816,2817]" dest="): ) [2783,2784]"/>
  <match src="identifier: _roles [24239,24245]" dest="identifier: _roles [24105,24111]"/>
  <match src="{: { [29041,29042]" dest="{: { [28907,28908]"/>
  <match src="number_literal: 0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08 [45639,45705]" dest="number_literal: 0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08 [45437,45503]"/>
  <match src="string_literal [31123,31164]" dest="string_literal [30989,31030]"/>
  <match src="return_statement [6144,6175]" dest="return_statement [6111,6142]"/>
  <match src="address: address [53668,53675]" dest="address: address [53902,53909]"/>
  <match src="parameter [3335,3348]" dest="parameter [3302,3315]"/>
  <match src="primitive_type [23165,23172]" dest="primitive_type [23031,23038]"/>
  <match src="identifier: this [12965,12969]" dest="identifier: this [12899,12903]"/>
  <match src="variable_declaration_statement [53941,53992]" dest="variable_declaration_statement [54175,54226]"/>
  <match src="returns: returns [6855,6862]" dest="returns: returns [6822,6829]"/>
  <match src=",: , [16985,16986]" dest=",: , [16919,16920]"/>
  <match src="primitive_type [23130,23137]" dest="primitive_type [22996,23003]"/>
  <match src="identifier: length [52036,52042]" dest="identifier: length [52192,52198]"/>
  <match src="yul_decimal_number: 1 [34090,34091]" dest="yul_decimal_number: 1 [33956,33957]"/>
  <match src="identifier: _inner [10202,10208]" dest="identifier: _inner [10169,10175]"/>
  <match src="private: private [27517,27524]" dest="private: private [27382,27389]"/>
  <match src="struct: struct [5832,5838]" dest="struct: struct [5799,5805]"/>
  <match src="function: function [14025,14033]" dest="function: function [13959,13967]"/>
  <match src="yul_function_call [34731,34760]" dest="yul_function_call [34597,34626]"/>
  <match src="identifier: this [51062,51066]" dest="identifier: this [51146,51150]"/>
  <match src="type_name [2508,2515]" dest="type_name [2475,2482]"/>
  <match src="type_name [18047,18051]" dest="type_name [17981,17985]"/>
  <match src="identifier: role [23859,23863]" dest="identifier: role [23725,23729]"/>
  <match src="function_definition [50020,54923]" dest="function_definition [50104,55229]"/>
  <match src="(: ( [30786,30787]" dest="(: ( [30652,30653]"/>
  <match src="call_argument [7774,7788]" dest="call_argument [7741,7755]"/>
  <match src="internal: internal [30543,30551]" dest="internal: internal [30409,30417]"/>
  <match src="type_name [44292,44299]" dest="type_name [44090,44097]"/>
  <match src="(: ( [50039,50040]" dest="(: ( [50123,50124]"/>
  <match src="pragma: pragma [43572,43578]" dest="pragma: pragma [43371,43377]"/>
  <match src="member_expression [29889,29900]" dest="member_expression [29755,29766]"/>
  <match src="type_name [39858,39865]" dest="type_name [39656,39663]"/>
  <match src="interface: interface [36799,36808]" dest="interface: interface [36632,36641]"/>
  <match src="contract_body [28170,36374]" dest="contract_body [28036,36240]"/>
  <match src="comment: /**      * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients      * are aware of the ERC721 protocol to prevent tokens from being forever locked.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must exist and be owned by `from`.      * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [38492,39195]" dest="comment: /**      * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients      * are aware of the ERC721 protocol to prevent tokens from being forever locked.      *      * Requirements:      *      * - `from` cannot be the zero address.      * - `to` cannot be the zero address.      * - `tokenId` token must exist and be owned by `from`.      * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.      *      * Emits a {Transfer} event.      */ [38290,38993]"/>
  <match src="return_type_definition [6646,6660]" dest="return_type_definition [6613,6627]"/>
  <match src="yul_function_call [34616,34662]" dest="yul_function_call [34482,34528]"/>
  <match src="type_cast_expression [30779,30800]" dest="type_cast_expression [30645,30666]"/>
  <match src=",: , [18084,18085]" dest=",: , [18018,18019]"/>
  <match src="primitive_type [873,880]" dest="primitive_type [873,880]"/>
  <match src="uint256: uint256 [15546,15553]" dest="uint256: uint256 [15480,15487]"/>
  <match src="variable_declaration_statement [29850,29862]" dest="variable_declaration_statement [29716,29728]"/>
  <match src="identifier: tokenId [895,902]" dest="identifier: tokenId [895,902]"/>
  <match src="call_argument [16925,16929]" dest="call_argument [16859,16863]"/>
  <match src="number_literal: 0xf94915c6d1fd521cee85359239227480c7e8776d7caf1fc3bacad5c269b66a14 [46342,46408]" dest="number_literal: 0xf94915c6d1fd521cee85359239227480c7e8776d7caf1fc3bacad5c269b66a14 [46140,46206]"/>
  <match src="comment: /**      * @dev Approve or remove `operator` as an operator for the caller.      * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.      *      * Requirements:      *      * - The `operator` cannot be the caller.      *      * Emits an {ApprovalForAll} event.      */ [40663,40981]" dest="comment: /**      * @dev Approve or remove `operator` as an operator for the caller.      * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.      *      * Requirements:      *      * - The `operator` cannot be the caller.      *      * Emits an {ApprovalForAll} event.      */ [40461,40779]"/>
  <match src="function_definition [43101,43180]" dest="function_definition [42900,42979]"/>
  <match src="call_argument [9994,10008]" dest="call_argument [9961,9975]"/>
  <match src="internal: internal [11547,11555]" dest="internal: internal [11481,11489]"/>
  <match src="(: ( [10118,10119]" dest="(: ( [10085,10086]"/>
  <match src="type_name [41032,41036]" dest="type_name [40830,40834]"/>
  <match src="address: address [25776,25783]" dest="address: address [25642,25649]"/>
  <match src="=: = [28346,28347]" dest="=: = [28212,28213]"/>
  <match src="boolean_literal [30026,30031]" dest="boolean_literal [29892,29897]"/>
  <match src="internal: internal [10140,10148]" dest="internal: internal [10107,10115]"/>
  <match src="parameter [23901,23908]" dest="parameter [23767,23774]"/>
  <match src="identifier: set [10198,10201]" dest="identifier: set [10165,10168]"/>
  <match src="identifier: item [32414,32418]" dest="identifier: item [32280,32284]"/>
  <match src="yul_assignment [11869,11897]" dest="yul_assignment [11803,11831]"/>
  <match src="identifier: rootToken [44362,44371]" dest="identifier: rootToken [44160,44169]"/>
  <match src="boolean_literal [45249,45253]" dest="boolean_literal [45048,45052]"/>
  <match src="identifier: Context [19421,19428]" dest="identifier: Context [19322,19329]"/>
  <match src="yul_evm_builtin [34635,34638]" dest="yul_evm_builtin [34501,34504]"/>
  <match src="call_argument [52783,52790]" dest="call_argument [52939,52946]"/>
  <match src="=: = [29231,29232]" dest="=: = [29097,29098]"/>
  <match src="solidity_pragma_token [42065,42079]" dest="solidity_pragma_token [41863,41878]"/>
  <match src="return_statement [17303,17388]" dest="return_statement [17237,17322]"/>
  <match src="comment: // File: @openzeppelin/contracts/utils/EnumerableSet.sol [958,1014]" dest="comment: // File: @openzeppelin/contracts/utils/EnumerableSet.sol [958,1014]"/>
  <match src="{: { [31485,31486]" dest="{: { [31351,31352]"/>
  <match src="public: public [45608,45614]" dest="public: public [45406,45412]"/>
  <match src="primitive_type [51054,51061]" dest="primitive_type [51138,51145]"/>
  <match src="identifier: _msgSender [25838,25848]" dest="identifier: _msgSender [25704,25714]"/>
  <match src="(: ( [6462,6463]" dest="(: ( [6429,6430]"/>
  <match src="(: ( [9041,9042]" dest="(: ( [9008,9009]"/>
  <match src="&gt;=:  &gt;= [10809,10812]" dest="&gt;=:  &gt;= [10743,10746]"/>
  <match src="identifier: length [28837,28843]" dest="identifier: length [28703,28709]"/>
  <match src="(: ( [8099,8100]" dest="(: ( [8066,8067]"/>
  <match src="primitive_type [14047,14054]" dest="primitive_type [13981,13988]"/>
  <match src="(: ( [19488,19489]" dest="(: ( [19389,19390]"/>
  <match src="assembly_statement [34981,35047]" dest="assembly_statement [34847,34913]"/>
  <match src="comment: // enforces 32 byte length [31616,31642]" dest="comment: // enforces 32 byte length [31482,31508]"/>
  <match src="internal: internal [17260,17268]" dest="internal: internal [17194,17202]"/>
  <match src="identifier: byteLen [34652,34659]" dest="identifier: byteLen [34518,34525]"/>
  <match src="{: { [16714,16715]" dest="{: { [16648,16649]"/>
  <match src="else: else [35392,35396]" dest="else: else [35258,35262]"/>
  <match src="bytes: bytes [45508,45513]" dest="bytes: bytes [45306,45311]"/>
  <match src="parameter [32171,32190]" dest="parameter [32037,32056]"/>
  <match src="yul_identifier [11889,11896]" dest="yul_identifier [11823,11830]"/>
  <match src="type_name [29833,29837]" dest="type_name [29699,29703]"/>
  <match src="number_literal: 256 [36112,36115]" dest="number_literal: 256 [35978,35981]"/>
  <match src="pragma: pragma [45339,45345]" dest="pragma: pragma [45138,45144]"/>
  <match src="identifier: logTopicRLPList [52859,52874]" dest="identifier: logTopicRLPList [53093,53108]"/>
  <match src="return: return [29645,29651]" dest="return: return [29511,29517]"/>
  <match src=".: . [7370,7371]" dest=".: . [7337,7338]"/>
  <match src="identifier: depositor [49056,49065]" dest="identifier: depositor [49140,49149]"/>
  <match src="bytes: bytes [14531,14536]" dest="bytes: bytes [14465,14470]"/>
  <match src="): ) [10639,10640]" dest="): ) [10606,10607]"/>
  <match src="parameter [15029,15043]" dest="parameter [14963,14977]"/>
  <match src="}: } [26643,26644]" dest="}: } [26509,26510]"/>
  <match src="identifier: target [16231,16237]" dest="identifier: target [16165,16171]"/>
  <match src="identifier: exists [50973,50979]" dest="identifier: exists [51057,51063]"/>
  <match src="identifier: IERC721Receiver [47531,47546]" dest="identifier: IERC721Receiver [47615,47630]"/>
  <match src="identifier: itemLength [31043,31053]" dest="identifier: itemLength [30909,30919]"/>
  <match src="identifier: RLPItem [32171,32178]" dest="identifier: RLPItem [32037,32044]"/>
  <match src="block_statement [52589,52811]" dest="block_statement [52745,52967]"/>
  <match src="): ) [8124,8125]" dest="): ) [8091,8092]"/>
  <match src=".: . [31251,31252]" dest=".: . [31117,31118]"/>
  <match src="type_name [6431,6435]" dest="type_name [6398,6402]"/>
  <match src="identifier: returndata [18572,18582]" dest="identifier: returndata [18506,18516]"/>
  <match src="type_name [52180,52187]" dest="type_name [52336,52343]"/>
  <match src="comment: // it with metadata. But if it was minted on L1, it'll be [53089,53146]" dest="comment: // it with metadata. But if it was minted on L1, it'll be [53323,53380]"/>
  <match src="): ) [34538,34539]" dest="): ) [34404,34405]"/>
  <match src="): ) [13128,13129]" dest="): ) [13062,13063]"/>
  <match src="yul_path [34232,34239]" dest="yul_path [34098,34105]"/>
  <match src="): ) [50695,50696]" dest="): ) [50779,50780]"/>
  <match src="function_body [9414,9472]" dest="function_body [9381,9439]"/>
  <match src="variable_declaration_statement [54008,54054]" dest="variable_declaration_statement [54242,54288]"/>
  <match src="external: external [39270,39278]" dest="external: external [39068,39076]"/>
  <match src="call_argument [2811,2816]" dest="call_argument [2778,2783]"/>
  <match src="function: function [8219,8227]" dest="function: function [8186,8194]"/>
  <match src="if_statement [48253,49620]" dest="if_statement [48337,49704]"/>
  <match src="): ) [31547,31548]" dest="): ) [31413,31414]"/>
  <match src="event_definition [46831,47013]" dest="event_definition [46629,46811]"/>
  <match src="identifier: dataLen [29432,29439]" dest="identifier: dataLen [29298,29305]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [14631,14992]" dest="comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [14565,14926]"/>
  <match src="type_name [16281,16286]" dest="type_name [16215,16220]"/>
  <match src="&lt;: &lt; [49471,49472]" dest="&lt;: &lt; [49555,49556]"/>
  <match src="type_name [43129,43136]" dest="type_name [42928,42935]"/>
  <match src="comment: // File: contracts/root/TokenPredicates/MintableERC721Predicate.sol [45268,45335]" dest="comment: // File: contracts/root/TokenPredicates/MintableERC721Predicate.sol [45067,45134]"/>
  <match src="string_literal [5722,5758]" dest="string_literal [5689,5725]"/>
  <match src="if_statement [35265,35438]" dest="if_statement [35131,35304]"/>
  <match src="bytes32: bytes32 [25762,25769]" dest="bytes32: bytes32 [25628,25635]"/>
  <match src="number_literal: 0xc0 [28304,28308]" dest="number_literal: 0xc0 [28170,28174]"/>
  <match src="primitive_type [31035,31042]" dest="primitive_type [30901,30908]"/>
  <match src="(: ( [34936,34937]" dest="(: ( [34802,34803]"/>
  <match src="(: ( [17224,17225]" dest="(: ( [17158,17159]"/>
  <match src="=: = [26956,26957]" dest="=: = [26822,26823]"/>
  <match src="(: ( [19455,19456]" dest="(: ( [19356,19357]"/>
  <match src="address: address [38469,38476]" dest="address: address [38267,38274]"/>
  <match src="yul_path [29935,29940]" dest="yul_path [29801,29806]"/>
  <match src="yul_path [32095,32101]" dest="yul_path [31961,31967]"/>
  <match src="state_mutability [8285,8289]" dest="state_mutability [8252,8256]"/>
  <match src="call_expression [32518,32532]" dest="call_expression [32384,32398]"/>
  <match src="external: external [47088,47096]" dest="external: external [47172,47180]"/>
  <match src="number_literal: 1 [33794,33795]" dest="number_literal: 1 [33660,33661]"/>
  <match src="private: private [34915,34922]" dest="private: private [34781,34788]"/>
  <match src="array_access [23192,23204]" dest="array_access [23058,23070]"/>
  <match src="identifier: returndata_size [18633,18648]" dest="identifier: returndata_size [18567,18582]"/>
  <match src="state_variable_declaration [45748,45852]" dest="state_variable_declaration [45546,45650]"/>
  <match src="yul_path [36277,36281]" dest="yul_path [36143,36147]"/>
  <match src="expression_statement [4381,4420]" dest="expression_statement [4348,4387]"/>
  <match src="(: ( [28831,28832]" dest="(: ( [28697,28698]"/>
  <match src="array_access [50899,50912]" dest="array_access [50983,50996]"/>
  <match src="parameter [9375,9388]" dest="parameter [9342,9355]"/>
  <match src="(: ( [29522,29523]" dest="(: ( [29388,29389]"/>
  <match src="[: [ [48883,48884]" dest="[: [ [48967,48968]"/>
  <match src="{: { [51171,51172]" dest="{: { [51255,51256]"/>
  <match src=",: , [25133,25134]" dest=",: , [24999,25000]"/>
  <match src="number_literal: 0 [5051,5052]" dest="number_literal: 0 [5018,5019]"/>
  <match src="identifier: count [33480,33485]" dest="identifier: count [33346,33351]"/>
  <match src="address: address [53813,53820]" dest="address: address [54047,54054]"/>
  <match src="(: ( [31098,31099]" dest="(: ( [30964,30965]"/>
  <match src="yul_evm_builtin [31526,31529]" dest="yul_evm_builtin [31392,31395]"/>
  <match src="string_literal [24662,24711]" dest="string_literal [24528,24577]"/>
  <match src="parameter [28947,28966]" dest="parameter [28813,28832]"/>
  <match src="return_statement [30042,30054]" dest="return_statement [29908,29920]"/>
  <match src="call_expression [31755,31779]" dest="call_expression [31621,31645]"/>
  <match src="identifier: returndata [18620,18630]" dest="identifier: returndata [18554,18564]"/>
  <match src="bytes32: bytes32 [26552,26559]" dest="bytes32: bytes32 [26418,26425]"/>
  <match src="(: ( [34307,34308]" dest="(: ( [34173,34174]"/>
  <match src="mload: mload [32089,32094]" dest="mload: mload [31955,31960]"/>
  <match src="function_body [5010,5060]" dest="function_body [4977,5027]"/>
  <match src="event: event [22608,22613]" dest="event: event [22474,22479]"/>
  <match src="function_definition [2711,3125]" dest="function_definition [2678,3092]"/>
  <match src="state_mutability [5652,5656]" dest="state_mutability [5619,5623]"/>
  <match src="visibility [41048,41056]" dest="visibility [40846,40854]"/>
  <match src="return_statement [17945,18005]" dest="return_statement [17879,17939]"/>
  <match src="function: function [5599,5607]" dest="function: function [5566,5574]"/>
  <match src="parenthesized_expression [48342,48351]" dest="parenthesized_expression [48426,48435]"/>
  <match src="identifier: role [24558,24562]" dest="identifier: role [24424,24428]"/>
  <match src=",: , [34633,34634]" dest=",: , [34499,34500]"/>
  <match src="member_expression [30454,30462]" dest="member_expression [30320,30328]"/>
  <match src="string [32328,32370]" dest="string [32194,32236]"/>
  <match src="yul_path [36325,36329]" dest="yul_path [36191,36195]"/>
  <match src="call_argument [25933,25940]" dest="call_argument [25799,25806]"/>
  <match src="): ) [42495,42496]" dest="): ) [42294,42295]"/>
  <match src="type_name [5004,5008]" dest="type_name [4971,4975]"/>
  <match src="call_expression [13178,13256]" dest="call_expression [13112,13190]"/>
  <match src="true [4777,4781]" dest="true [4744,4748]"/>
  <match src="identifier: previousAdminRole [21958,21975]" dest="identifier: previousAdminRole [21824,21841]"/>
  <match src="function_definition [3301,4845]" dest="function_definition [3268,4812]"/>
  <match src="string [33380,33426]" dest="string [33246,33292]"/>
  <match src="}: } [13263,13264]" dest="}: } [13197,13198]"/>
  <match src="(: ( [17618,17619]" dest="(: ( [17552,17553]"/>
  <match src="identifier: value [3008,3013]" dest="identifier: value [2975,2980]"/>
  <match src="call_argument [49067,49082]" dest="call_argument [49151,49166]"/>
  <match src="type_name [35679,35686]" dest="type_name [35545,35552]"/>
  <match src="(: ( [27002,27003]" dest="(: ( [26868,26869]"/>
  <match src="identifier: RoleData [21385,21393]" dest="identifier: RoleData [21251,21259]"/>
  <match src="): ) [10607,10608]" dest="): ) [10574,10575]"/>
  <match src="address: address [47388,47395]" dest="address: address [47472,47479]"/>
  <match src="return_type_definition [7708,7722]" dest="return_type_definition [7675,7689]"/>
  <match src="parameter [29789,29808]" dest="parameter [29655,29674]"/>
  <match src="type_name [19601,19606]" dest="type_name [19502,19507]"/>
  <match src="identifier: set [9370,9373]" dest="identifier: set [9337,9340]"/>
  <match src="uint256: uint256 [39858,39865]" dest="uint256: uint256 [39656,39663]"/>
  <match src="primitive_type [33650,33657]" dest="primitive_type [33516,33523]"/>
  <match src="primitive_type [49209,49216]" dest="primitive_type [49293,49300]"/>
  <match src="string: string [17654,17660]" dest="string: string [17588,17594]"/>
  <match src="(: ( [50338,50339]" dest="(: ( [50422,50423]"/>
  <match src="primitive_type [10594,10601]" dest="primitive_type [10561,10568]"/>
  <match src=",: , [885,886]" dest=",: , [885,886]"/>
  <match src="visibility [45002,45010]" dest="visibility [44800,44808]"/>
  <match src="primitive_type [50541,50548]" dest="primitive_type [50625,50632]"/>
  <match src=",: , [37631,37632]" dest=",: , [37429,37430]"/>
  <match src="}: } [16393,16394]" dest="}: } [16327,16328]"/>
  <match src="call_argument [16987,16999]" dest="call_argument [16921,16933]"/>
  <match src="pragma: pragma [18858,18864]" dest="pragma: pragma [19754,19760]"/>
  <match src="(: ( [31669,31670]" dest="(: ( [31535,31536]"/>
  <match src="identifier: Set [2284,2287]" dest="identifier: Set [2251,2254]"/>
  <match src="function_definition [8472,8589]" dest="function_definition [8439,8556]"/>
  <match src="yul_identifier [29935,29940]" dest="yul_identifier [29801,29806]"/>
  <match src="type_name [26813,26820]" dest="type_name [26679,26686]"/>
  <match src="primitive_type [15511,15518]" dest="primitive_type [15445,15452]"/>
  <match src="call_argument [6701,6706]" dest="call_argument [6668,6673]"/>
  <match src="): ) [8274,8275]" dest="): ) [8241,8242]"/>
  <match src="(: ( [47996,47997]" dest="(: ( [48080,48081]"/>
  <match src="function_body [6437,6489]" dest="function_body [6404,6456]"/>
  <match src="variable_declaration [51934,51959]" dest="variable_declaration [52090,52115]"/>
  <match src="primitive_type [19489,19504]" dest="primitive_type [19390,19405]"/>
  <match src="string_literal [31822,31870]" dest="string_literal [31688,31736]"/>
  <match src="identifier: only [27718,27722]" dest="identifier: only [27583,27587]"/>
  <match src="address: address [43115,43122]" dest="address: address [42914,42921]"/>
  <match src="identifier: value [6701,6706]" dest="identifier: value [6668,6673]"/>
  <match src="assignment_expression [27614,27693]" dest="assignment_expression [27479,27558]"/>
  <match src="primitive_type [32240,32247]" dest="primitive_type [32106,32113]"/>
  <match src="}: } [27700,27701]" dest="}: } [27565,27566]"/>
  <match src="call_argument [6475,6480]" dest="call_argument [6442,6447]"/>
  <match src="yul_assignment [35005,35036]" dest="yul_assignment [34871,34902]"/>
  <match src="user_defined_type [29018,29025]" dest="user_defined_type [28884,28891]"/>
  <match src="=: = [31753,31754]" dest="=: = [31619,31620]"/>
  <match src="primitive_type [5666,5673]" dest="primitive_type [5633,5640]"/>
  <match src="}: } [49619,49620]" dest="}: } [49703,49704]"/>
  <match src="comment: // AddressSet [7401,7414]" dest="comment: // AddressSet [7368,7381]"/>
  <match src="return: return [6884,6890]" dest="return: return [6851,6857]"/>
  <match src="string [24662,24711]" dest="string [24528,24577]"/>
  <match src="identifier: offset [31331,31337]" dest="identifier: offset [31197,31203]"/>
  <match src="yul_variable_declaration [34181,34242]" dest="yul_variable_declaration [34047,34108]"/>
  <match src="type_name [6817,6827]" dest="type_name [6784,6794]"/>
  <match src="{: { [6437,6438]" dest="{: { [6404,6405]"/>
  <match src="(: ( [49055,49056]" dest="(: ( [49139,49140]"/>
  <match src="(: ( [12885,12886]" dest="(: ( [12819,12820]"/>
  <match src="(: ( [31917,31918]" dest="(: ( [31783,31784]"/>
  <match src="uint256: uint256 [15064,15071]" dest="uint256: uint256 [14998,15005]"/>
  <match src="(: ( [17867,17868]" dest="(: ( [17801,17802]"/>
  <match src="type_name [50198,50215]" dest="type_name [50282,50299]"/>
  <match src="for: for [21358,21361]" dest="for: for [21224,21227]"/>
  <match src="(: ( [30394,30395]" dest="(: ( [30260,30261]"/>
  <match src=",: , [44309,44310]" dest=",: , [44107,44108]"/>
  <match src="identifier: RLPItem [32851,32858]" dest="identifier: RLPItem [32717,32724]"/>
  <match src="bytes: bytes [43146,43151]" dest="bytes: bytes [42945,42950]"/>
  <match src="variable_declaration [30338,30349]" dest="variable_declaration [30204,30215]"/>
  <match src="call_argument [30973,30987]" dest="call_argument [30839,30853]"/>
  <match src="return_type_definition [47491,47507]" dest="return_type_definition [47575,47591]"/>
  <match src="primitive_type [28359,28364]" dest="primitive_type [28225,28230]"/>
  <match src="{: { [47513,47514]" dest="{: { [47597,47598]"/>
  <match src="return: return [6448,6454]" dest="return: return [6415,6421]"/>
  <match src="bytes: bytes [16281,16286]" dest="bytes: bytes [16215,16220]"/>
  <match src="array_access [54484,54497]" dest="array_access [54718,54731]"/>
  <match src="parameter [30566,30573]" dest="parameter [30432,30439]"/>
  <match src="{: { [1821,1822]" dest="{: { [1788,1789]"/>
  <match src="type_name [17241,17246]" dest="type_name [17175,17180]"/>
  <match src="uint256: uint256 [3904,3911]" dest="uint256: uint256 [3871,3878]"/>
  <match src="type_name [34899,34906]" dest="type_name [34765,34772]"/>
  <match src="(: ( [30875,30876]" dest="(: ( [30741,30742]"/>
  <match src="}: } [17394,17395]" dest="}: } [17328,17329]"/>
  <match src="uint256: uint256 [37852,37859]" dest="uint256: uint256 [37650,37657]"/>
  <match src="solidity_pragma_token [36482,36505]" dest="solidity_pragma_token [36315,36338]"/>
  <match src="identifier: toList [50254,50260]" dest="identifier: toList [50338,50344]"/>
  <match src="visibility [22837,22843]" dest="visibility [22703,22709]"/>
  <match src="identifier: result [31594,31600]" dest="identifier: result [31460,31466]"/>
  <match src="call_argument [26882,26886]" dest="call_argument [26748,26752]"/>
  <match src="call_argument [27130,27137]" dest="call_argument [26996,27003]"/>
  <match src="call_expression [50318,50340]" dest="call_expression [50402,50424]"/>
  <match src=".: . [24635,24636]" dest=".: . [24501,24502]"/>
  <match src="number_literal: 1 [50565,50566]" dest="number_literal: 1 [50649,50650]"/>
  <match src="(: ( [16743,16744]" dest="(: ( [16677,16678]"/>
  <match src="function_definition [30816,31608]" dest="function_definition [30682,31474]"/>
  <match src="type_name [42466,42473]" dest="type_name [42265,42272]"/>
  <match src="solidity_pragma_token [18865,18888]" dest="solidity_pragma_token [19761,19784]"/>
  <match src="else: else [4794,4798]" dest="else: else [4761,4765]"/>
  <match src="number_literal: 1 [33894,33895]" dest="number_literal: 1 [33760,33761]"/>
  <match src="state_mutability [16686,16690]" dest="state_mutability [16620,16624]"/>
  <match src=",: , [35668,35669]" dest=",: , [35534,35535]"/>
  <match src="identifier: value [7692,7697]" dest="identifier: value [7659,7664]"/>
  <match src="type_name [5629,5636]" dest="type_name [5596,5603]"/>
  <match src="identifier: _inner [8084,8090]" dest="identifier: _inner [8051,8057]"/>
  <match src="): ) [48193,48194]" dest="): ) [48277,48278]"/>
  <match src="(: ( [30565,30566]" dest="(: ( [30431,30432]"/>
  <match src="uint256: uint256 [47406,47413]" dest="uint256: uint256 [47490,47497]"/>
  <match src="return_type_definition [14522,14544]" dest="return_type_definition [14456,14478]"/>
  <match src="type_name [47370,47377]" dest="type_name [47454,47461]"/>
  <match src="identifier: _inner [7455,7461]" dest="identifier: _inner [7422,7428]"/>
  <match src="call_argument [9982,9992]" dest="call_argument [9949,9959]"/>
  <match src="call_argument [50168,50180]" dest="call_argument [50252,50264]"/>
  <match src="event_paramater [37826,37850]" dest="event_paramater [37624,37648]"/>
  <match src="(: ( [30831,30832]" dest="(: ( [30697,30698]"/>
  <match src="array_access [48876,48885]" dest="array_access [48960,48969]"/>
  <match src="binary_expression [49469,49479]" dest="binary_expression [49553,49563]"/>
  <match src="user_defined_type [2725,2728]" dest="user_defined_type [2692,2695]"/>
  <match src="identifier: len [35810,35813]" dest="identifier: len [35676,35679]"/>
  <match src="library: library [28152,28159]" dest="library: library [28018,28025]"/>
  <match src="yul_function_call [34567,34581]" dest="yul_function_call [34433,34447]"/>
  <match src="): ) [6480,6481]" dest="): ) [6447,6448]"/>
  <match src="parameter [6864,6871]" dest="parameter [6831,6838]"/>
  <match src="}: } [27370,27371]" dest="}: } [27236,27237]"/>
  <match src=",: , [14591,14592]" dest=",: , [14525,14526]"/>
  <match src="function_definition [8219,8386]" dest="function_definition [8186,8353]"/>
  <match src="comment: /*      * Private Helpers      */ [32726,32761]" dest="comment: /*      * Private Helpers      */ [32592,32627]"/>
  <match src="&quot;: &quot; [25900,25901]" dest="&quot;: &quot; [25766,25767]"/>
  <match src="memory: memory [50102,50108]" dest="memory: memory [50186,50192]"/>
  <match src="}: } [6917,6918]" dest="}: } [6884,6885]"/>
  <match src="(: ( [15096,15097]" dest="(: ( [15030,15031]"/>
  <match src="==: == [32315,32317]" dest="==: == [32181,32183]"/>
  <match src="variable_declaration [34957,34970]" dest="variable_declaration [34823,34836]"/>
  <match src="view: view [8285,8289]" dest="view: view [8252,8256]"/>
  <match src="(: ( [49569,49570]" dest="(: ( [49653,49654]"/>
  <match src="call_argument [30904,30917]" dest="call_argument [30770,30783]"/>
  <match src="parameter [5629,5642]" dest="parameter [5596,5609]"/>
  <match src="indexed: indexed [38039,38046]" dest="indexed: indexed [37837,37844]"/>
  <match src="=: = [29555,29556]" dest="=: = [29421,29422]"/>
  <match src="(: ( [30593,30594]" dest="(: ( [30459,30460]"/>
  <match src="=: = [32516,32517]" dest="=: = [32382,32383]"/>
  <match src="identifier: token [52760,52765]" dest="identifier: token [52916,52921]"/>
  <match src="{: { [5211,5212]" dest="{: { [5178,5179]"/>
  <match src="state_mutability [10149,10153]" dest="state_mutability [10116,10120]"/>
  <match src=",: , [26886,26887]" dest=",: , [26752,26753]"/>
  <match src="identifier: tokenId [43464,43471]" dest="identifier: tokenId [43263,43270]"/>
  <match src="call_argument [15640,15670]" dest="call_argument [15574,15604]"/>
  <match src="parameter [38244,38259]" dest="parameter [38042,38057]"/>
  <match src="(: ( [24657,24658]" dest="(: ( [24523,24524]"/>
  <match src="): ) [18630,18631]" dest="): ) [18564,18565]"/>
  <match src="parameter [7684,7697]" dest="parameter [7651,7664]"/>
  <match src="type_alias [45494,45503]" dest="type_alias [45292,45301]"/>
  <match src="primitive_type [19601,19606]" dest="primitive_type [19502,19507]"/>
  <match src="variable_declaration_statement [50198,50263]" dest="variable_declaration_statement [50282,50347]"/>
  <match src="return_statement [7356,7386]" dest="return_statement [7323,7353]"/>
  <match src="(: ( [15510,15511]" dest="(: ( [15444,15445]"/>
  <match src="byte: byte [29944,29948]" dest="byte: byte [29810,29814]"/>
  <match src="delete: delete [4727,4733]" dest="delete: delete [4694,4700]"/>
  <match src="member_expression [51268,51293]" dest="member_expression [51424,51449]"/>
  <match src="assembly: assembly [31348,31356]" dest="assembly: assembly [31214,31222]"/>
  <match src="identifier: value [6102,6107]" dest="identifier: value [6069,6074]"/>
  <match src="(: ( [25761,25762]" dest="(: ( [25627,25628]"/>
  <match src="call_argument [30609,30646]" dest="call_argument [30475,30512]"/>
  <match src="identifier: set [9982,9985]" dest="identifier: set [9949,9952]"/>
  <match src="user_defined_type [30522,30529]" dest="user_defined_type [30388,30395]"/>
  <match src="(: ( [51933,51934]" dest="(: ( [52089,52090]"/>
  <match src="user_defined_type [7274,7284]" dest="user_defined_type [7241,7251]"/>
  <match src="type_name [28549,28554]" dest="type_name [28415,28420]"/>
  <match src="or: or [36331,36333]" dest="or: or [36197,36199]"/>
  <match src="struct_member [21405,21438]" dest="struct_member [21271,21304]"/>
  <match src="binary_expression [29276,29298]" dest="binary_expression [29142,29164]"/>
  <match src="number_literal: 0 [50694,50695]" dest="number_literal: 0 [50778,50779]"/>
  <match src="call_argument [10002,10007]" dest="call_argument [9969,9974]"/>
  <match src="): ) [36213,36214]" dest="): ) [36079,36080]"/>
  <match src="identifier: items [29195,29200]" dest="identifier: items [29061,29066]"/>
  <match src="): ) [52157,52158]" dest="): ) [52313,52314]"/>
  <match src="if: if [27250,27252]" dest="if: if [27116,27118]"/>
  <match src=",: , [27015,27016]" dest=",: , [26881,26882]"/>
  <match src="address: address [22673,22680]" dest="address: address [22539,22546]"/>
  <match src="indexed: indexed [37860,37867]" dest="indexed: indexed [37658,37665]"/>
  <match src="yul_function_call [29944,29966]" dest="yul_function_call [29810,29832]"/>
  <match src="parameter [17619,17633]" dest="parameter [17553,17567]"/>
  <match src="parameter [17225,17239]" dest="parameter [17159,17173]"/>
  <match src="identifier: RoleAdminChanged [26865,26881]" dest="identifier: RoleAdminChanged [26731,26747]"/>
  <match src="member_expression [52859,52884]" dest="member_expression [53093,53118]"/>
  <match src=",: , [8343,8344]" dest=",: , [8310,8311]"/>
  <match src="identifier: require [17725,17732]" dest="identifier: require [17659,17666]"/>
  <match src="memory: memory [28626,28632]" dest="memory: memory [28492,28498]"/>
  <match src="identifier: length [48269,48275]" dest="identifier: length [48353,48359]"/>
  <match src="type_name [46909,46916]" dest="type_name [46707,46714]"/>
  <match src="if_statement [50440,54906]" dest="if_statement [50524,55212]"/>
  <match src="primitive_type [22673,22680]" dest="primitive_type [22539,22546]"/>
  <match src="virtual: virtual [26592,26599]" dest="virtual: virtual [26458,26465]"/>
  <match src="expression_statement [25080,25187]" dest="expression_statement [24946,25053]"/>
  <match src="identifier: Address [21350,21357]" dest="identifier: Address [21216,21223]"/>
  <match src="(: ( [9456,9457]" dest="(: ( [9423,9424]"/>
  <match src="visibility [39875,39883]" dest="visibility [39673,39681]"/>
  <match src="=: = [51891,51892]" dest="=: = [52047,52048]"/>
  <match src="(: ( [36117,36118]" dest="(: ( [35983,35984]"/>
  <match src="comment: // copy as many word sizes as possible [35755,35793]" dest="comment: // copy as many word sizes as possible [35621,35659]"/>
  <match src="identifier: numItems [32842,32850]" dest="identifier: numItems [32708,32716]"/>
  <match src="{: { [9016,9017]" dest="{: { [8983,8984]"/>
  <match src="public: public [22837,22843]" dest="public: public [22703,22709]"/>
  <match src="(: ( [29564,29565]" dest="(: ( [29430,29431]"/>
  <match src="identifier: STRING_SHORT_START [33764,33782]" dest="identifier: STRING_SHORT_START [33630,33648]"/>
  <match src="type_name [3318,3321]" dest="type_name [3285,3288]"/>
  <match src="}: } [4837,4838]" dest="}: } [4804,4805]"/>
  <match src="}: } [8132,8133]" dest="}: } [8099,8100]"/>
  <match src="identifier: logRLPList [44984,44994]" dest="identifier: logRLPList [44782,44792]"/>
  <match src="): ) [33580,33581]" dest="): ) [33446,33447]"/>
  <match src="&gt;: &gt; [11921,11922]" dest="&gt;: &gt; [11855,11856]"/>
  <match src="call_argument [32651,32671]" dest="call_argument [32517,32537]"/>
  <match src="): ) [10008,10009]" dest="): ) [9975,9976]"/>
  <match src="address: address [53647,53654]" dest="address: address [53881,53888]"/>
  <match src="): ) [30017,30018]" dest="): ) [29883,29884]"/>
  <match src="&gt;: &gt; [28670,28671]" dest="&gt;: &gt; [28536,28537]"/>
  <match src="yul_identifier [32595,32602]" dest="yul_identifier [32461,32468]"/>
  <match src="identifier: tokenId [37868,37875]" dest="identifier: tokenId [37666,37673]"/>
  <match src="type_name [7717,7721]" dest="type_name [7684,7688]"/>
  <match src="function_body [11576,11932]" dest="function_body [11510,11866]"/>
  <match src="comment: // topic2 is to address [53825,53848]" dest="comment: // topic2 is to address [54059,54082]"/>
  <match src="variable_declaration_statement [29455,29469]" dest="variable_declaration_statement [29321,29335]"/>
  <match src="identifier: itemLen [34409,34416]" dest="identifier: itemLen [34275,34282]"/>
  <match src="visibility [32192,32200]" dest="visibility [32058,32066]"/>
  <match src="{: { [36817,36818]" dest="{: { [36650,36651]"/>
  <match src="uint256: uint256 [31714,31721]" dest="uint256: uint256 [31580,31587]"/>
  <match src="bool: bool [6655,6659]" dest="bool: bool [6622,6626]"/>
  <match src="address: address [49562,49569]" dest="address: address [49646,49653]"/>
  <match src="view: view [24198,24202]" dest="view: view [24064,24068]"/>
  <match src="return_statement [5021,5053]" dest="return_statement [4988,5020]"/>
  <match src="parameter [26799,26811]" dest="parameter [26665,26677]"/>
  <match src="uint256: uint256 [46600,46607]" dest="uint256: uint256 [46398,46405]"/>
  <match src="call_argument [51213,51220]" dest="call_argument [51297,51304]"/>
  <match src="&gt;=: &gt;= [12979,12981]" dest="&gt;=: &gt;= [12913,12915]"/>
  <match src="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [13035,13103]" dest="comment: // solhint-disable-next-line avoid-low-level-calls, avoid-call-value [12969,13037]"/>
  <match src="call_expression [48318,48352]" dest="call_expression [48402,48436]"/>
  <match src="yul_identifier [36325,36329]" dest="yul_identifier [36191,36195]"/>
  <match src=",: , [9760,9761]" dest=",: , [9727,9728]"/>
  <match src="identifier: _indexes [4491,4499]" dest="identifier: _indexes [4458,4466]"/>
  <match src="=: = [32451,32452]" dest="=: = [32317,32318]"/>
  <match src="address: address [27214,27221]" dest="address: address [27080,27087]"/>
  <match src="identifier: abi [48318,48321]" dest="identifier: abi [48402,48405]"/>
  <match src="identifier: contains [9880,9888]" dest="identifier: contains [9847,9855]"/>
  <match src="type_name [12886,12901]" dest="type_name [12820,12835]"/>
  <match src="(: ( [16222,16223]" dest="(: ( [16156,16157]"/>
  <match src="primitive_type [30284,30289]" dest="primitive_type [30150,30155]"/>
  <match src="identifier: set [6836,6839]" dest="identifier: set [6803,6806]"/>
  <match src=",: , [12988,12989]" dest=",: , [12922,12923]"/>
  <match src="primitive_type [16700,16705]" dest="primitive_type [16634,16639]"/>
  <match src=",: , [32614,32615]" dest=",: , [32480,32481]"/>
  <match src="identifier: ptr [30384,30387]" dest="identifier: ptr [30250,30253]"/>
  <match src="primitive_type [44354,44361]" dest="primitive_type [44152,44159]"/>
  <match src="type_cast_expression [50686,50696]" dest="type_cast_expression [50770,50780]"/>
  <match src="identifier: _inner [8574,8580]" dest="identifier: _inner [8541,8547]"/>
  <match src="(: ( [17928,17929]" dest="(: ( [17862,17863]"/>
  <match src="variable_declaration_statement [29424,29440]" dest="variable_declaration_statement [29290,29306]"/>
  <match src=".: . [3020,3021]" dest=".: . [2987,2988]"/>
  <match src="=: = [48849,48850]" dest="=: = [48933,48934]"/>
  <match src="contract_body [45114,45264]" dest="contract_body [44913,45063]"/>
  <match src="identifier: account [22912,22919]" dest="identifier: account [22778,22785]"/>
  <match src="address: address [53773,53780]" dest="address: address [54007,54014]"/>
  <match src="): ) [54120,54121]" dest="): ) [54354,54355]"/>
  <match src="bytes: bytes [17241,17246]" dest="bytes: bytes [17175,17180]"/>
  <match src="uint8: uint8 [29850,29855]" dest="uint8: uint8 [29716,29721]"/>
  <match src="call_expression [12949,13022]" dest="call_expression [12883,12956]"/>
  <match src="string_literal [13164,13166]" dest="string_literal [13098,13100]"/>
  <match src="primitive_type [29455,29462]" dest="primitive_type [29321,29328]"/>
  <match src="call_argument [48342,48351]" dest="call_argument [48426,48435]"/>
  <match src="member_expression [4487,4499]" dest="member_expression [4454,4466]"/>
  <match src="type_name [32496,32501]" dest="type_name [32362,32367]"/>
  <match src="(: ( [54505,54506]" dest="(: ( [54739,54740]"/>
  <match src="++: ++ [29482,29484]" dest="++: ++ [29348,29350]"/>
  <match src="string_literal [16346,16385]" dest="string_literal [16280,16319]"/>
  <match src="identifier: depositData [44397,44408]" dest="identifier: depositData [44195,44206]"/>
  <match src="function_body [33613,34820]" dest="function_body [33479,34686]"/>
  <match src="identifier: AccessControlMixin [27467,27485]" dest="identifier: AccessControlMixin [27332,27350]"/>
  <match src="(: ( [54625,54626]" dest="(: ( [54859,54860]"/>
  <match src="primitive_type [36097,36104]" dest="primitive_type [35963,35970]"/>
  <match src="parameter [16223,16237]" dest="parameter [16157,16171]"/>
  <match src="identifier: TRANSFER_EVENT_SIG [45937,45955]" dest="identifier: TRANSFER_EVENT_SIG [45735,45753]"/>
  <match src="if: if [31470,31472]" dest="if: if [31336,31338]"/>
  <match src="(: ( [48703,48704]" dest="(: ( [48787,48788]"/>
  <match src="comment: /** RLPItem conversions into data types **/ [30069,30112]" dest="comment: /** RLPItem conversions into data types **/ [29935,29978]"/>
  <match src="bytes: bytes [30284,30289]" dest="bytes: bytes [30150,30155]"/>
  <match src="comment: // 1 byte for the length prefix [30658,30689]" dest="comment: // 1 byte for the length prefix [30524,30555]"/>
  <match src="yul_path [28769,28775]" dest="yul_path [28635,28641]"/>
  <match src=".: . [6466,6467]" dest=".: . [6433,6434]"/>
  <match src="identifier: returndata [17979,17989]" dest="identifier: returndata [17913,17923]"/>
  <match src="}: } [45260,45261]" dest="}: } [45059,45060]"/>
  <match src="modifier: modifier [45149,45157]" dest="modifier: modifier [44948,44956]"/>
  <match src="identifier: logTopicRLPList [53781,53796]" dest="identifier: logTopicRLPList [54015,54030]"/>
  <match src="): ) [49103,49104]" dest="): ) [49187,49188]"/>
  <match src="parameter [43115,43127]" dest="parameter [42914,42926]"/>
  <match src=".: . [24251,24252]" dest=".: . [24117,24118]"/>
  <match src="yul_function_call [36331,36352]" dest="yul_function_call [36197,36218]"/>
  <match src="type_name [22673,22680]" dest="type_name [22539,22546]"/>
  <match src="primitive_type [8299,8303]" dest="primitive_type [8266,8270]"/>
  <match src="address: address [37826,37833]" dest="address: address [37624,37631]"/>
  <match src="primitive_type [51984,51991]" dest="primitive_type [52140,52147]"/>
  <match src="identifier: success [15968,15975]" dest="identifier: success [15902,15909]"/>
  <match src="parameter [12913,12927]" dest="parameter [12847,12861]"/>
  <match src="identifier: RLPItem [30522,30529]" dest="identifier: RLPItem [30388,30395]"/>
  <match src=",: , [31524,31525]" dest=",: , [31390,31391]"/>
  <match src="identifier: length [23213,23219]" dest="identifier: length [23079,23085]"/>
  <match src="]: ] [52208,52209]" dest="]: ] [52364,52365]"/>
  <match src="}: } [52840,52841]" dest="}: } [53074,53075]"/>
  <match src="primitive_type [40597,40604]" dest="primitive_type [40395,40402]"/>
  <match src="variable_declaration [32545,32560]" dest="variable_declaration [32411,32426]"/>
  <match src="emit: emit [48449,48453]" dest="emit: emit [48533,48537]"/>
  <match src="==: == [30716,30718]" dest="==: == [30582,30584]"/>
  <match src="type_name [40379,40386]" dest="type_name [40177,40184]"/>
  <match src=".: . [28662,28663]" dest=".: . [28528,28529]"/>
  <match src="identifier: set [4487,4490]" dest="identifier: set [4454,4457]"/>
  <match src="function_definition [28931,29666]" dest="function_definition [28797,29532]"/>
  <match src="binary_expression [35404,35437]" dest="binary_expression [35270,35303]"/>
  <match src="): ) [16999,17000]" dest="): ) [16933,16934]"/>
  <match src="=: = [51748,51749]" dest="=: = [51904,51905]"/>
  <match src="(: ( [30911,30912]" dest="(: ( [30777,30778]"/>
  <match src="type_name [50198,50217]" dest="type_name [50282,50301]"/>
  <match src="string [47137,47162]" dest="string [47221,47246]"/>
  <match src="type_name [38469,38476]" dest="type_name [38267,38274]"/>
  <match src="&quot;: &quot; [31934,31935]" dest="&quot;: &quot; [31800,31801]"/>
  <match src="binary_expression [36112,36138]" dest="binary_expression [35978,36004]"/>
  <match src="(: ( [28617,28618]" dest="(: ( [28483,28484]"/>
  <match src="solidity_version_comparison_operator [19909,19911]" dest="solidity_version_comparison_operator [18782,18784]"/>
  <match src="state_mutability [31700,31704]" dest="state_mutability [31566,31570]"/>
  <match src="solidity: solidity [1060,1068]" dest="solidity: solidity [1027,1035]"/>
  <match src="identifier: value [4975,4980]" dest="identifier: value [4942,4947]"/>
  <match src="unary_expression [30904,30917]" dest="unary_expression [30770,30783]"/>
  <match src="binary_expression [35810,35826]" dest="binary_expression [35676,35692]"/>
  <match src="type_name [29185,29192]" dest="type_name [29051,29058]"/>
  <match src="): ) [34331,34332]" dest="): ) [34197,34198]"/>
  <match src="identifier: require [15724,15731]" dest="identifier: require [15658,15665]"/>
  <match src="identifier: LIST_LONG_START [35213,35228]" dest="identifier: LIST_LONG_START [35079,35094]"/>
  <match src="bytes: bytes [16880,16885]" dest="bytes: bytes [16814,16819]"/>
  <match src="identifier: functionCall [14437,14449]" dest="identifier: functionCall [14371,14383]"/>
  <match src="return_type_definition [28609,28633]" dest="return_type_definition [28475,28499]"/>
  <match src="identifier: token [54099,54104]" dest="identifier: token [54333,54338]"/>
  <match src="{: { [6133,6134]" dest="{: { [6100,6101]"/>
  <match src="address: address [16614,16621]" dest="address: address [16548,16555]"/>
  <match src="+: + [33295,33296]" dest="+: + [33161,33162]"/>
  <match src="(: ( [8944,8945]" dest="(: ( [8911,8912]"/>
  <match src="bytes32: bytes32 [50443,50450]" dest="bytes32: bytes32 [50527,50534]"/>
  <match src="yul_identifier [34068,34074]" dest="yul_identifier [33934,33940]"/>
  <match src="solidity_pragma_token [19893,19916]" dest="solidity_pragma_token [18766,18789]"/>
  <match src="{: { [2288,2289]" dest="{: { [2255,2256]"/>
  <match src="call_argument [25135,25185]" dest="call_argument [25001,25051]"/>
  <match src="expression_statement [30431,30464]" dest="expression_statement [30297,30330]"/>
  <match src="): ) [14189,14190]" dest="): ) [14123,14124]"/>
  <match src="number_literal: 0 [53821,53822]" dest="number_literal: 0 [54055,54056]"/>
  <match src="type_name [44320,44327]" dest="type_name [44118,44125]"/>
  <match src="state_mutability [40623,40627]" dest="state_mutability [40421,40425]"/>
  <match src="array_access [4264,4286]" dest="array_access [4231,4253]"/>
  <match src="event: event [37596,37601]" dest="event: event [37394,37399]"/>
  <match src="identifier: decode [48322,48328]" dest="identifier: decode [48406,48412]"/>
  <match src="solidity: solidity [45346,45354]" dest="solidity: solidity [45145,45153]"/>
  <match src="view: view [4990,4994]" dest="view: view [4957,4961]"/>
  <match src="identifier: _indexes [2999,3007]" dest="identifier: _indexes [2966,2974]"/>
  <match src="bytes: bytes [18135,18140]" dest="bytes: bytes [18069,18074]"/>
  <match src="call_expression [49507,49589]" dest="call_expression [49591,49673]"/>
  <match src="): ) [48685,48686]" dest="): ) [48769,48770]"/>
  <match src="[: [ [50669,50670]" dest="[: [ [50753,50754]"/>
  <match src="}: } [31607,31608]" dest="}: } [31473,31474]"/>
  <match src="]: ] [53798,53799]" dest="]: ] [54032,54033]"/>
  <match src="identifier: role [26895,26899]" dest="identifier: role [26761,26765]"/>
  <match src="expression_statement [49256,49335]" dest="expression_statement [49340,49419]"/>
  <match src="identifier: value [6475,6480]" dest="identifier: value [6442,6447]"/>
  <match src="event_paramater [46987,47005]" dest="event_paramater [46785,46803]"/>
  <match src="memory: memory [30840,30846]" dest="memory: memory [30706,30712]"/>
  <match src="primitive_type [17868,17872]" dest="primitive_type [17802,17806]"/>
  <match src="call_expression [29386,29413]" dest="call_expression [29252,29279]"/>
  <match src="expression_statement [49507,49590]" dest="expression_statement [49591,49674]"/>
  <match src="identifier: i [29470,29471]" dest="identifier: i [29336,29337]"/>
  <match src="]: ] [52876,52877]" dest="]: ] [53110,53111]"/>
  <match src="return: return [15943,15949]" dest="return: return [15877,15883]"/>
  <match src="type_name [15561,15567]" dest="type_name [15495,15501]"/>
  <match src="memory: memory [18093,18099]" dest="memory: memory [18027,18033]"/>
  <match src="type_name [31734,31741]" dest="type_name [31600,31607]"/>
  <match src=",: , [35645,35646]" dest=",: , [35511,35512]"/>
  <match src="identifier: to [40387,40389]" dest="identifier: to [40185,40187]"/>
  <match src="identifier: IMintableERC721 [50814,50829]" dest="identifier: IMintableERC721 [50898,50913]"/>
  <match src="): ) [38444,38445]" dest="): ) [38242,38243]"/>
  <match src="): ) [31721,31722]" dest="): ) [31587,31588]"/>
  <match src="identifier: UintSet [9126,9133]" dest="identifier: UintSet [9093,9100]"/>
  <match src="return: return [9425,9431]" dest="return: return [9392,9398]"/>
  <match src="address: address [37611,37618]" dest="address: address [37409,37416]"/>
  <match src="variable_declaration_statement [15857,15933]" dest="variable_declaration_statement [15791,15867]"/>
  <match src=".: . [52366,52367]" dest=".: . [52522,52523]"/>
  <match src="+: + [33892,33893]" dest="+: + [33758,33759]"/>
  <match src=",: , [49093,49094]" dest=",: , [49177,49178]"/>
  <match src="identifier: sender [19528,19534]" dest="identifier: sender [19429,19435]"/>
  <match src="type_name [30566,30573]" dest="type_name [30432,30439]"/>
  <match src="variable_declaration [31987,32001]" dest="variable_declaration [31853,31867]"/>
  <match src="revert_statement [54842,54895]" dest="revert_statement [55148,55201]"/>
  <match src="yul_identifier [31504,31510]" dest="yul_identifier [31370,31376]"/>
  <match src="call_argument [50654,50681]" dest="call_argument [50738,50765]"/>
  <match src="type_alias [21295,21308]" dest="type_alias [21161,21174]"/>
  <match src="if_statement [2791,3118]" dest="if_statement [2758,3085]"/>
  <match src="member_expression [22882,22911]" dest="member_expression [22748,22777]"/>
  <match src="type_name [6617,6624]" dest="type_name [6584,6591]"/>
  <match src="(: ( [48474,48475]" dest="(: ( [48558,48559]"/>
  <match src="]: ] [51775,51776]" dest="]: ] [51931,51932]"/>
  <match src="call_argument [30602,30606]" dest="call_argument [30468,30472]"/>
  <match src="{: { [9414,9415]" dest="{: { [9381,9382]"/>
  <match src="comment: // solhint-disable-next-line no-inline-assembly [11801,11848]" dest="comment: // solhint-disable-next-line no-inline-assembly [11735,11782]"/>
  <match src="identifier: _inner [9441,9447]" dest="identifier: _inner [9408,9414]"/>
  <match src="function_definition [44886,45011]" dest="function_definition [44684,44809]"/>
  <match src="identifier: result [32079,32085]" dest="identifier: result [31945,31951]"/>
  <match src="): ) [7384,7385]" dest="): ) [7351,7352]"/>
  <match src="): ) [47011,47012]" dest="): ) [46809,46810]"/>
  <match src="}: } [31563,31564]" dest="}: } [31429,31430]"/>
  <match src="identifier: transferFrom [39819,39831]" dest="identifier: transferFrom [39617,39629]"/>
  <match src="]: ] [29026,29027]" dest="]: ] [28892,28893]"/>
  <match src="member_expression [27057,27077]" dest="member_expression [26923,26943]"/>
  <match src="++: ++ [49482,49484]" dest="++: ++ [49566,49568]"/>
  <match src="uint160: uint160 [8361,8368]" dest="uint160: uint160 [8328,8335]"/>
  <match src="function_body [6133,6182]" dest="function_body [6100,6149]"/>
  <match src="is: is [27486,27488]" dest="is: is [27351,27353]"/>
  <match src=".: . [50207,50208]" dest=".: . [50291,50292]"/>
  <match src="primitive_type [53668,53675]" dest="primitive_type [53902,53909]"/>
  <match src="number_literal: 0 [3556,3557]" dest="number_literal: 0 [3523,3524]"/>
  <match src="binary_expression [33361,33378]" dest="binary_expression [33227,33244]"/>
  <match src="binary_expression [49264,49285]" dest="binary_expression [49348,49369]"/>
  <match src=":=: := [34520,34522]" dest=":=: := [34386,34388]"/>
  <match src="identifier: target [16744,16750]" dest="identifier: target [16678,16684]"/>
  <match src="user_defined_type [9354,9361]" dest="user_defined_type [9321,9328]"/>
  <match src="type_name [43496,43500]" dest="type_name [43295,43299]"/>
  <match src="type_cast_expression [9994,10008]" dest="type_cast_expression [9961,9975]"/>
  <match src="payable: payable [12894,12901]" dest="payable: payable [12828,12835]"/>
  <match src="type_name [23130,23137]" dest="type_name [22996,23003]"/>
  <match src="pragma_directive [45339,45361]" dest="pragma_directive [45138,45161]"/>
  <match src=".: . [50912,50913]" dest=".: . [50996,50997]"/>
  <match src="identifier: owner [38047,38052]" dest="identifier: owner [37845,37850]"/>
  <match src="parameter [8945,8967]" dest="parameter [8912,8934]"/>
  <match src="type_name [17225,17232]" dest="type_name [17159,17166]"/>
  <match src="identifier: account [22828,22835]" dest="identifier: account [22694,22701]"/>
  <match src="}: } [22927,22928]" dest="}: } [22793,22794]"/>
  <match src="binary_expression [32453,32470]" dest="binary_expression [32319,32336]"/>
  <match src="(: ( [29275,29276]" dest="(: ( [29141,29142]"/>
  <match src=",: , [26811,26812]" dest=",: , [26677,26678]"/>
  <match src="uint256: uint256 [54008,54015]" dest="uint256: uint256 [54242,54249]"/>
  <match src="bytes: bytes [32215,32220]" dest="bytes: bytes [32081,32086]"/>
  <match src="member_expression [50318,50338]" dest="member_expression [50402,50422]"/>
  <match src="assignment_expression [29501,29530]" dest="assignment_expression [29367,29396]"/>
  <match src="parameter [17654,17680]" dest="parameter [17588,17614]"/>
  <match src="primitive_type [15527,15532]" dest="primitive_type [15461,15466]"/>
  <match src="identifier: len [31252,31255]" dest="identifier: len [31118,31121]"/>
  <match src="identifier: withdrawer [54222,54232]" dest="identifier: withdrawer [54456,54466]"/>
  <match src=",: , [34213,34214]" dest=",: , [34079,34080]"/>
  <match src="primitive_type [6094,6101]" dest="primitive_type [6061,6068]"/>
  <match src="{: { [18520,18521]" dest="{: { [18454,18455]"/>
  <match src="primitive_type [30779,30786]" dest="primitive_type [30645,30652]"/>
  <match src="call_expression [31910,31974]" dest="call_expression [31776,31840]"/>
  <match src="yul_function_call [34200,34213]" dest="yul_function_call [34066,34079]"/>
  <match src="(: ( [8298,8299]" dest="(: ( [8265,8266]"/>
  <match src="&lt;: &lt; [29999,30000]" dest="&lt;: &lt; [29865,29866]"/>
  <match src="=: = [50897,50898]" dest="=: = [50981,50982]"/>
  <match src="parameter [48097,48123]" dest="parameter [48181,48207]"/>
  <match src="member_expression [30707,30715]" dest="member_expression [30573,30581]"/>
  <match src="(: ( [50653,50654]" dest="(: ( [50737,50738]"/>
  <match src="identifier: _roles [24623,24629]" dest="identifier: _roles [24489,24495]"/>
  <match src="comment: // File: contracts/root/TokenPredicates/ITokenPredicate.sol [43509,43568]" dest="comment: // File: contracts/root/TokenPredicates/ITokenPredicate.sol [43308,43367]"/>
  <match src="binary_expression [11916,11924]" dest="binary_expression [11850,11858]"/>
  <match src="identifier: len [31923,31926]" dest="identifier: len [31789,31792]"/>
  <match src="member_expression [3506,3518]" dest="member_expression [3473,3485]"/>
  <match src="comment: // event signature proof, which is defined under first `if` clause [53379,53445]" dest="comment: // event signature proof, which is defined under first `if` clause [53613,53679]"/>
  <match src="return_statement [23921,23959]" dest="return_statement [23787,23825]"/>
  <match src="yul_decimal_number: 0 [35019,35020]" dest="yul_decimal_number: 0 [34885,34886]"/>
  <match src="call_argument [26912,26921]" dest="call_argument [26778,26787]"/>
  <match src="{: { [25808,25809]" dest="{: { [25674,25675]"/>
  <match src="=: = [3504,3505]" dest="=: = [3471,3472]"/>
  <match src="yul_path [34068,34074]" dest="yul_path [33934,33940]"/>
  <match src="identifier: offset [31258,31264]" dest="identifier: offset [31124,31130]"/>
  <match src="parameter [3367,3371]" dest="parameter [3334,3338]"/>
  <match src="identifier: result [29172,29178]" dest="identifier: result [29038,29044]"/>
  <match src="): ) [17258,17259]" dest="): ) [17192,17193]"/>
  <match src="identifier: tokenId [52374,52381]" dest="identifier: tokenId [52530,52537]"/>
  <match src="yul_evm_builtin [36260,36263]" dest="yul_evm_builtin [36126,36129]"/>
  <match src="function_body [6661,6715]" dest="function_body [6628,6682]"/>
  <match src="): ) [23908,23909]" dest="): ) [23774,23775]"/>
  <match src=",: , [14155,14156]" dest=",: , [14089,14090]"/>
  <match src="{: { [3373,3374]" dest="{: { [3340,3341]"/>
  <match src="identifier: role [25927,25931]" dest="identifier: role [25793,25797]"/>
  <match src="call_expression [16907,16930]" dest="call_expression [16841,16864]"/>
  <match src="string_literal [50739,50782]" dest="string_literal [50823,50866]"/>
  <match src="primitive_type [11778,11785]" dest="primitive_type [11712,11719]"/>
  <match src="solidity_version: 0.8.0 [1078,1083]" dest="solidity_version: 0.8.0 [1045,1050]"/>
  <match src="primitive_type [11530,11537]" dest="primitive_type [11464,11471]"/>
  <match src="parameter [43129,43144]" dest="parameter [42928,42943]"/>
  <match src="type_name [32545,32552]" dest="type_name [32411,32418]"/>
  <match src="identifier: balanceOf [38196,38205]" dest="identifier: balanceOf [37994,38003]"/>
  <match src="primitive_type [29114,29121]" dest="primitive_type [28980,28987]"/>
  <match src="variable_declaration_statement [33650,33664]" dest="variable_declaration_statement [33516,33530]"/>
  <match src="type_name [29789,29796]" dest="type_name [29655,29662]"/>
  <match src="call_expression [31195,31222]" dest="call_expression [31061,31088]"/>
  <match src="yul_evm_builtin [31473,31475]" dest="yul_evm_builtin [31339,31341]"/>
  <match src="type_name [5163,5166]" dest="type_name [5130,5133]"/>
  <match src="): ) [50920,50921]" dest="): ) [51004,51005]"/>
  <match src="expression_statement [15724,15785]" dest="expression_statement [15658,15719]"/>
  <match src="for: for [52126,52129]" dest="for: for [52282,52285]"/>
  <match src="type_cast_expression [9034,9083]" dest="type_cast_expression [9001,9050]"/>
  <match src="parameter [26566,26581]" dest="parameter [26432,26447]"/>
  <match src="yul_identifier [31372,31378]" dest="yul_identifier [31238,31244]"/>
  <match src="yul_path [32616,32622]" dest="yul_path [32482,32488]"/>
  <match src="return_type_definition [14091,14113]" dest="return_type_definition [14025,14047]"/>
  <match src="): ) [2778,2779]" dest="): ) [2745,2746]"/>
  <match src="visibility [8512,8520]" dest="visibility [8479,8487]"/>
  <match src="identifier: Set [5163,5166]" dest="identifier: Set [5130,5133]"/>
  <match src="): ) [44414,44415]" dest="): ) [44212,44213]"/>
  <match src="identifier: _remove [8072,8079]" dest="identifier: _remove [8039,8046]"/>
  <match src="(: ( [9353,9354]" dest="(: ( [9320,9321]"/>
  <match src="): ) [7790,7791]" dest="): ) [7757,7758]"/>
  <match src="external: external [38221,38229]" dest="external: external [38019,38027]"/>
  <match src="call_argument [32273,32284]" dest="call_argument [32139,32150]"/>
  <match src="call_argument [30919,30953]" dest="call_argument [30785,30819]"/>
  <match src="memory: memory [18141,18147]" dest="memory: memory [18075,18081]"/>
  <match src="identifier: require [30896,30903]" dest="identifier: require [30762,30769]"/>
  <match src="primitive_type [31987,31994]" dest="primitive_type [31853,31860]"/>
  <match src="type_name [22648,22655]" dest="type_name [22514,22521]"/>
  <match src="(: ( [32893,32894]" dest="(: ( [32759,32760]"/>
  <match src="(: ( [5003,5004]" dest="(: ( [4970,4971]"/>
  <match src="primitive_type [8100,8107]" dest="primitive_type [8067,8074]"/>
  <match src="identifier: _indexes [5032,5040]" dest="identifier: _indexes [4999,5007]"/>
  <match src="primitive_type [9948,9952]" dest="primitive_type [9915,9919]"/>
  <match src="): ) [17290,17291]" dest="): ) [17224,17225]"/>
  <match src="identifier: length [52146,52152]" dest="identifier: length [52302,52308]"/>
  <match src="variable_declaration_statement [32545,32561]" dest="variable_declaration_statement [32411,32427]"/>
  <match src="uint256: uint256 [10659,10666]" dest="uint256: uint256 [10626,10633]"/>
  <match src="): ) [54119,54120]" dest="): ) [54353,54354]"/>
  <match src=".: . [9753,9754]" dest=".: . [9720,9721]"/>
  <match src="assembly: assembly [34981,34989]" dest="assembly: assembly [34847,34855]"/>
  <match src="identifier: _verifyCallResult [18029,18046]" dest="identifier: _verifyCallResult [17963,17980]"/>
  <match src="visibility [17260,17268]" dest="visibility [17194,17202]"/>
  <match src="user_defined_type [9889,9896]" dest="user_defined_type [9856,9863]"/>
  <match src="(: ( [32094,32095]" dest="(: ( [31960,31961]"/>
  <match src="function_definition [41213,41301]" dest="function_definition [41011,41099]"/>
  <match src="): ) [8982,8983]" dest="): ) [8949,8950]"/>
  <match src="): ) [24189,24190]" dest="): ) [24055,24056]"/>
  <match src="identifier: toUintStrict [31657,31669]" dest="identifier: toUintStrict [31523,31535]"/>
  <match src="function_body [3373,4845]" dest="function_body [3340,4812]"/>
  <match src="parameter [41964,41983]" dest="parameter [41762,41781]"/>
  <match src="call_argument [50549,50576]" dest="call_argument [50633,50660]"/>
  <match src="(: ( [47184,47185]" dest="(: ( [47268,47269]"/>
  <match src="primitive_type [37204,37210]" dest="primitive_type [37037,37043]"/>
  <match src="bytes32: bytes32 [4967,4974]" dest="bytes32: bytes32 [4934,4941]"/>
  <match src=",: , [9373,9374]" dest=",: , [9340,9341]"/>
  <match src="if_statement [52357,52811]" dest="if_statement [52513,52967]"/>
  <match src="primitive_type [9449,9456]" dest="primitive_type [9416,9423]"/>
  <match src="expression_statement [30965,31023]" dest="expression_statement [30831,30889]"/>
  <match src="assembly: assembly [32571,32579]" dest="assembly: assembly [32437,32445]"/>
  <match src="constant: constant [21549,21557]" dest="constant: constant [21415,21423]"/>
  <match src="=: = [29465,29466]" dest="=: = [29331,29332]"/>
  <match src="return_type_definition [34928,34945]" dest="return_type_definition [34794,34811]"/>
  <match src="return: return [14556,14562]" dest="return: return [14490,14496]"/>
  <match src="memory: memory [30530,30536]" dest="memory: memory [30396,30402]"/>
  <match src="): ) [17680,17681]" dest="): ) [17614,17615]"/>
  <match src="identifier: Set [7451,7454]" dest="identifier: Set [7418,7421]"/>
  <match src="identifier: functionCall [14130,14142]" dest="identifier: functionCall [14064,14076]"/>
  <match src=".: . [47546,47547]" dest=".: . [47630,47631]"/>
  <match src="&quot;: &quot; [32369,32370]" dest="&quot;: &quot; [32235,32236]"/>
  <match src="comment: // Equivalent to contains(set, value) [3561,3598]" dest="comment: // Equivalent to contains(set, value) [3528,3565]"/>
  <match src="binary_expression [33287,33317]" dest="binary_expression [33153,33183]"/>
  <match src="]: ] [29193,29194]" dest="]: ] [29059,29060]"/>
  <match src="yul_variable_declaration [34508,34539]" dest="yul_variable_declaration [34374,34405]"/>
  <match src="{: { [45481,45482]" dest="{: { [45279,45280]"/>
  <match src="function_definition [5146,5255]" dest="function_definition [5113,5222]"/>
  <match src="event_paramater [38080,38093]" dest="event_paramater [37878,37891]"/>
  <match src="]: ] [25107,25108]" dest="]: ] [24973,24974]"/>
  <match src="call_expression [27254,27290]" dest="call_expression [27120,27156]"/>
  <match src="primitive_type [5004,5008]" dest="primitive_type [4971,4975]"/>
  <match src="call_argument [49095,49103]" dest="call_argument [49179,49187]"/>
  <match src="parameter [10119,10138]" dest="parameter [10086,10105]"/>
  <match src="): ) [23172,23173]" dest="): ) [23038,23039]"/>
  <match src="assembly_statement [18511,18668]" dest="assembly_statement [18445,18602]"/>
  <match src="(: ( [34898,34899]" dest="(: ( [34764,34765]"/>
  <match src="yul_path [34735,34742]" dest="yul_path [34601,34608]"/>
  <match src="calldata: calldata [47430,47438]" dest="calldata: calldata [47514,47522]"/>
  <match src="): ) [30953,30954]" dest="): ) [30819,30820]"/>
  <match src="identifier: msg [19524,19527]" dest="identifier: msg [19425,19428]"/>
  <match src=",: , [8090,8091]" dest=",: , [8057,8058]"/>
  <match src=",: , [54232,54233]" dest=",: , [54466,54467]"/>
  <match src="): ) [15931,15932]" dest="): ) [15865,15866]"/>
  <match src="pure: pure [34923,34927]" dest="pure: pure [34789,34793]"/>
  <match src="type_name [28315,28320]" dest="type_name [28181,28186]"/>
  <match src="identifier: LIST_LONG_START [35413,35428]" dest="identifier: LIST_LONG_START [35279,35294]"/>
  <match src="comment: // require(isList(item), &quot;RLPReader: NUM_ITEMS_NOT_LIST&quot;); [33019,33077]" dest="comment: // require(isList(item), &quot;RLPReader: NUM_ITEMS_NOT_LIST&quot;); [32885,32943]"/>
  <match src="modifier_definition [45149,45261]" dest="modifier_definition [44948,45060]"/>
  <match src="primitive_type [8361,8368]" dest="primitive_type [8328,8335]"/>
  <match src="public: public [45756,45762]" dest="public: public [45554,45560]"/>
  <match src="call_argument [10683,10688]" dest="call_argument [10650,10655]"/>
  <match src="yul_identifier [35908,35911]" dest="yul_identifier [35774,35777]"/>
  <match src="else: else [52584,52588]" dest="else: else [52740,52744]"/>
  <match src="identifier: target [17233,17239]" dest="identifier: target [17167,17173]"/>
  <match src="expression_statement [53747,53925]" dest="expression_statement [53981,54159]"/>
  <match src="identifier: byteLen [34321,34328]" dest="identifier: byteLen [34187,34194]"/>
  <match src=",: , [16628,16629]" dest=",: , [16562,16563]"/>
  <match src="yul_identifier [31543,31546]" dest="yul_identifier [31409,31412]"/>
  <match src="): ) [32531,32532]" dest="): ) [32397,32398]"/>
  <match src="): ) [16675,16676]" dest="): ) [16609,16610]"/>
  <match src="}: } [33739,33740]" dest="}: } [33605,33606]"/>
  <match src="identifier: dest [36270,36274]" dest="identifier: dest [36136,36140]"/>
  <match src="block_statement [49486,49607]" dest="block_statement [49570,49691]"/>
  <match src="comment: // @return number of payload items inside an encoded list. [32769,32827]" dest="comment: // @return number of payload items inside an encoded list. [32635,32693]"/>
  <match src="yul_function_call [36204,36213]" dest="yul_function_call [36070,36079]"/>
  <match src="type_name [9145,9148]" dest="type_name [9112,9115]"/>
  <match src="): ) [25052,25053]" dest="): ) [24918,24919]"/>
  <match src="number_literal: 0x67b714876402c93362735688659e2283b4a37fb21bab24bc759ca759ae851fd8 [46462,46528]" dest="number_literal: 0x67b714876402c93362735688659e2283b4a37fb21bab24bc759ca759ae851fd8 [46260,46326]"/>
  <match src="comment: // topic1 is from address [53706,53731]" dest="comment: // topic1 is from address [53940,53965]"/>
  <match src="memory: memory [14492,14498]" dest="memory: memory [14426,14432]"/>
  <match src="(: ( [31517,31518]" dest="(: ( [31383,31384]"/>
  <match src="member_expression [31812,31820]" dest="member_expression [31678,31686]"/>
  <match src="[: [ [26894,26895]" dest="[: [ [26760,26761]"/>
  <match src="}: } [28859,28860]" dest="}: } [28725,28726]"/>
  <match src="yul_identifier [33721,33727]" dest="yul_identifier [33587,33593]"/>
  <match src="parameter [25023,25035]" dest="parameter [24889,24901]"/>
  <match src="comment: /**      * @notice Validates and processes exit while withdraw process      * @dev Validates exit log emitted on sidechain. Reverts if validation fails.      * @dev Processes withdraw based on custom logic. Example: transfer ERC20/ERC721, mint ERC721 if mintable withdraw      * @param sender Address      * @param rootToken Token which gets withdrawn      * @param logRLPList Valid sidechain log for data like amount, token id etc.      */ [44433,44880]" dest="comment: /**      * @notice Validates and processes exit while withdraw process      * @dev Validates exit log emitted on sidechain. Reverts if validation fails.      * @dev Processes withdraw based on custom logic. Example: transfer ERC20/ERC721, mint ERC721 if mintable withdraw      * @param sender Address      * @param rootToken Token which gets withdrawn      * @param logRLPList Valid sidechain log for data like amount, token id etc.      */ [44231,44678]"/>
  <match src="assembly: assembly [36149,36157]" dest="assembly: assembly [36015,36023]"/>
  <match src="identifier: _revokeRole [27188,27199]" dest="identifier: _revokeRole [27054,27065]"/>
  <match src="identifier: depositData [48862,48873]" dest="identifier: depositData [48946,48957]"/>
  <match src="bytes: bytes [17882,17887]" dest="bytes: bytes [17816,17821]"/>
  <match src="bytes32: bytes32 [9994,10001]" dest="bytes32: bytes32 [9961,9968]"/>
  <match src="comment: /**  * @dev Library for managing  * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive  * types.  *  * Sets have the following properties:  *  * - Elements are added, removed, and checked for existence in constant time  * (O(1)).  * - Elements are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableSet for EnumerableSet.AddressSet;  *  *     // Declare a set state variable  *     EnumerableSet.AddressSet private mySet;  * }  * ```  *  * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)  * and `uint256` (`UintSet`) are supported.  */ [1088,1797]" dest="comment: /**  * @dev Library for managing  * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive  * types.  *  * Sets have the following properties:  *  * - Elements are added, removed, and checked for existence in constant time  * (O(1)).  * - Elements are enumerated in O(n). No guarantees are made on the ordering.  *  * ```  * contract Example {  *     // Add the library methods  *     using EnumerableSet for EnumerableSet.AddressSet;  *  *     // Declare a set state variable  *     EnumerableSet.AddressSet private mySet;  * }  * ```  *  * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)  * and `uint256` (`UintSet`) are supported.  */ [1055,1764]"/>
  <match src="internal: internal [9390,9398]" dest="internal: internal [9357,9365]"/>
  <match src="for: for [49453,49456]" dest="for: for [49537,49540]"/>
  <match src="yul_path [35028,35034]" dest="yul_path [34894,34900]"/>
  <match src=",: , [26910,26911]" dest=",: , [26776,26777]"/>
  <match src="interface_declaration [43743,45014]" dest="interface_declaration [43541,44812]"/>
  <match src=".: . [50972,50973]" dest=".: . [51056,51057]"/>
  <match src="returns: returns [34928,34935]" dest="returns: returns [34794,34801]"/>
  <match src="primitive_type [27214,27221]" dest="primitive_type [27080,27087]"/>
  <match src="call_argument [26628,26635]" dest="call_argument [26494,26501]"/>
  <match src="[: [ [53796,53797]" dest="[: [ [54030,54031]"/>
  <match src="return_statement [32697,32711]" dest="return_statement [32563,32577]"/>
  <match src="{: { [23910,23911]" dest="{: { [23776,23777]"/>
  <match src="(: ( [18611,18612]" dest="(: ( [18545,18546]"/>
  <match src="identifier: set [3977,3980]" dest="identifier: set [3944,3947]"/>
  <match src="binary_expression [29470,29479]" dest="binary_expression [29336,29345]"/>
  <match src="function_definition [19550,19783]" dest="function_definition [19451,19684]"/>
  <match src="primitive_type [52010,52017]" dest="primitive_type [52166,52173]"/>
  <match src="identifier: _payloadOffset [34884,34898]" dest="identifier: _payloadOffset [34750,34764]"/>
  <match src="): ) [54198,54199]" dest="): ) [54432,54433]"/>
  <match src=",: , [10681,10682]" dest=",: , [10648,10649]"/>
  <match src="type_name [11778,11785]" dest="type_name [11712,11719]"/>
  <match src="(: ( [30903,30904]" dest="(: ( [30769,30770]"/>
  <match src="primitive_type [50686,50693]" dest="primitive_type [50770,50777]"/>
  <match src="call_argument [50739,50782]" dest="call_argument [50823,50866]"/>
  <match src="variable_declaration [54008,54023]" dest="variable_declaration [54242,54257]"/>
  <match src="pragma: pragma [36475,36481]" dest="pragma: pragma [36308,36314]"/>
  <match src="uint256: uint256 [33187,33194]" dest="uint256: uint256 [33053,33060]"/>
  <match src="identifier: functionCallWithValue [15129,15150]" dest="identifier: functionCallWithValue [15063,15084]"/>
  <match src="type_name [49209,49216]" dest="type_name [49293,49300]"/>
  <match src=".: . [18319,18320]" dest=".: . [18253,18254]"/>
  <match src="function: function [24155,24163]" dest="function: function [24021,24029]"/>
  <match src="identifier: index [5789,5794]" dest="identifier: index [5756,5761]"/>
  <match src="(: ( [35062,35063]" dest="(: ( [34928,34929]"/>
  <match src="}: } [52827,52828]" dest="}: } [52983,52984]"/>
  <match src="primitive_type [7298,7305]" dest="primitive_type [7265,7272]"/>
  <match src="type_name [7274,7284]" dest="type_name [7241,7251]"/>
  <match src="yul_function_call [34317,34332]" dest="yul_function_call [34183,34198]"/>
  <match src="(: ( [35412,35413]" dest="(: ( [35278,35279]"/>
  <match src="mload: mload [34200,34205]" dest="mload: mload [34066,34071]"/>
  <match src="block_statement [51326,52841]" dest="block_statement [51482,53075]"/>
  <match src="identifier: endPtr [33372,33378]" dest="identifier: endPtr [33238,33244]"/>
  <match src="=: = [54024,54025]" dest="=: = [54258,54259]"/>
  <match src="): ) [23142,23143]" dest="): ) [23008,23009]"/>
  <match src="comment: // UintSet [9101,9111]" dest="comment: // UintSet [9068,9078]"/>
  <match src="parameter [8261,8274]" dest="parameter [8228,8241]"/>
  <match src="): ) [33316,33317]" dest="): ) [33182,33183]"/>
  <match src="identifier: ptr [30449,30452]" dest="identifier: ptr [30315,30318]"/>
  <match src="): ) [53807,53808]" dest="): ) [54041,54042]"/>
  <match src="&quot;: &quot; [30723,30724]" dest="&quot;: &quot; [30589,30590]"/>
  <match src="array_access [52198,52209]" dest="array_access [52354,52365]"/>
  <match src="): ) [22862,22863]" dest="): ) [22728,22729]"/>
  <match src="yul_path [35005,35010]" dest="yul_path [34871,34876]"/>
  <match src="primitive_type [49458,49465]" dest="primitive_type [49542,49549]"/>
  <match src="state_variable_declaration [46283,46409]" dest="state_variable_declaration [46081,46207]"/>
  <match src="number_literal: 2 [53797,53798]" dest="number_literal: 2 [54031,54032]"/>
  <match src="(: ( [17732,17733]" dest="(: ( [17666,17667]"/>
  <match src="return_statement [29645,29659]" dest="return_statement [29511,29525]"/>
  <match src="yul_evm_builtin [34523,34526]" dest="yul_evm_builtin [34389,34392]"/>
  <match src="type_name [17654,17660]" dest="type_name [17588,17594]"/>
  <match src="type_name [37633,37640]" dest="type_name [37431,37438]"/>
  <match src="return: return [6672,6678]" dest="return: return [6639,6645]"/>
  <match src="call_argument [50980,50987]" dest="call_argument [51064,51071]"/>
  <match src="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [7477,7641]" dest="comment: /**      * @dev Add a value to a set. O(1).      *      * Returns true if the value was added to the set, that is if it was not      * already present.      */ [7444,7608]"/>
  <match src="call_expression [29060,29072]" dest="call_expression [28926,28938]"/>
  <match src="parameter [5612,5627]" dest="parameter [5579,5594]"/>
  <match src=",: , [14600,14601]" dest=",: , [14534,14535]"/>
  <match src="primitive_type [47424,47429]" dest="primitive_type [47508,47513]"/>
  <match src=",: , [50057,50058]" dest=",: , [50141,50142]"/>
  <match src="uint256: uint256 [9050,9057]" dest="uint256: uint256 [9017,9024]"/>
  <match src="function_definition [829,951]" dest="function_definition [829,951]"/>
  <match src="): ) [43169,43170]" dest="): ) [42968,42969]"/>
  <match src="identifier: src [36198,36201]" dest="identifier: src [36064,36067]"/>
  <match src="abstract: abstract [19403,19411]" dest="abstract: abstract [19304,19312]"/>
  <match src="identifier: _add [2720,2724]" dest="identifier: _add [2687,2691]"/>
  <match src=",: , [41962,41963]" dest=",: , [41760,41761]"/>
  <match src="constant: constant [46432,46440]" dest="constant: constant [46230,46238]"/>
  <match src="[: [ [50290,50291]" dest="[: [ [50374,50375]"/>
  <match src="(: ( [10666,10667]" dest="(: ( [10633,10634]"/>
  <match src="return_statement [22875,22921]" dest="return_statement [22741,22787]"/>
  <match src="returns: returns [14522,14529]" dest="returns: returns [14456,14463]"/>
  <match src="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [15232,15474]" dest="comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [15166,15408]"/>
  <match src="identifier: set [2995,2998]" dest="identifier: set [2962,2965]"/>
  <match src="comment: // in bytes32. [2255,2269]" dest="comment: // in bytes32. [2222,2236]"/>
  <match src="visibility [45608,45614]" dest="visibility [45406,45412]"/>
  <match src="identifier: item [28783,28787]" dest="identifier: item [28649,28653]"/>
  <match src="uint256: uint256 [51984,51991]" dest="uint256: uint256 [52140,52147]"/>
  <match src=",: , [50696,50697]" dest=",: , [50780,50781]"/>
  <match src="): ) [33728,33729]" dest="): ) [33594,33595]"/>
  <match src="identifier: byteLen [34748,34755]" dest="identifier: byteLen [34614,34621]"/>
  <match src="=: = [48316,48317]" dest="=: = [48400,48401]"/>
  <match src="]: ] [53693,53694]" dest="]: ] [53927,53928]"/>
  <match src="(: ( [2773,2774]" dest="(: ( [2740,2741]"/>
  <match src="}: } [52582,52583]" dest="}: } [52738,52739]"/>
  <match src="identifier: IERC721 [42113,42120]" dest="identifier: IERC721 [41912,41919]"/>
  <match src="else: else [51166,51170]" dest="else: else [51250,51254]"/>
  <match src="comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [4136,4228]" dest="comment: // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement. [4103,4195]"/>
  <match src=":=: := [33996,33998]" dest=":=: := [33862,33864]"/>
  <match src="call_argument [16744,16750]" dest="call_argument [16678,16684]"/>
  <match src="while: while [33237,33242]" dest="while: while [33103,33108]"/>
  <match src="[: [ [23934,23935]" dest="[: [ [23800,23801]"/>
  <match src="member_expression [26888,26910]" dest="member_expression [26754,26776]"/>
  <match src="primitive_type [38080,38084]" dest="primitive_type [37878,37882]"/>
  <match src="identifier: role [26940,26944]" dest="identifier: role [26806,26810]"/>
  <match src="call_expression [48660,48738]" dest="call_expression [48744,48822]"/>
  <match src="expression_statement [29268,29343]" dest="expression_statement [29134,29209]"/>
  <match src="string [16346,16385]" dest="string [16280,16319]"/>
  <match src="call_argument [15977,15987]" dest="call_argument [15911,15921]"/>
  <match src="identifier: len [31817,31820]" dest="identifier: len [31683,31686]"/>
  <match src="call_argument [48730,48737]" dest="call_argument [48814,48821]"/>
  <match src="string_literal [53866,53909]" dest="string_literal [54100,54143]"/>
  <match src="variable_declaration [30284,30303]" dest="variable_declaration [30150,30169]"/>
  <match src="call_expression [54099,54120]" dest="call_expression [54333,54354]"/>
  <match src="yul_path [31372,31378]" dest="yul_path [31238,31244]"/>
  <match src="comment: /* 32 byte word size */ [34140,34163]" dest="comment: /* 32 byte word size */ [34006,34029]"/>
  <match src="type_name [28224,28229]" dest="type_name [28090,28095]"/>
  <match src=",: , [26626,26627]" dest=",: , [26492,26493]"/>
  <match src="yul_identifier [36334,36342]" dest="yul_identifier [36200,36208]"/>
  <match src="expression_statement [48660,48739]" dest="expression_statement [48744,48823]"/>
  <match src="string_literal [30989,31021]" dest="string_literal [30855,30887]"/>
  <match src="): ) [10689,10690]" dest="): ) [10656,10657]"/>
  <match src="member_expression [32651,32662]" dest="member_expression [32517,32528]"/>
  <match src="event: event [37788,37793]" dest="event: event [37586,37591]"/>
  <match src="comment: // by user [49185,49195]" dest="comment: // by user [49269,49279]"/>
  <match src="(: ( [23129,23130]" dest="(: ( [22995,22996]"/>
  <match src="member_expression [50451,50476]" dest="member_expression [50535,50560]"/>
  <match src="call_argument [51983,51994]" dest="call_argument [52139,52150]"/>
  <match src="state_mutability [28595,28599]" dest="state_mutability [28461,28465]"/>
  <match src="parameter [17700,17712]" dest="parameter [17634,17646]"/>
  <match src="identifier: set [10135,10138]" dest="identifier: set [10102,10105]"/>
  <match src="(: ( [50679,50680]" dest="(: ( [50763,50764]"/>
  <match src="identifier: toBytes [54498,54505]" dest="identifier: toBytes [54732,54739]"/>
  <match src="identifier: count [33442,33447]" dest="identifier: count [33308,33313]"/>
  <match src="uint256: uint256 [5202,5209]" dest="uint256: uint256 [5169,5176]"/>
  <match src="==: == [31927,31929]" dest="==: == [31793,31795]"/>
  <match src="type_name [38080,38084]" dest="type_name [37878,37882]"/>
  <match src="user_defined_type [50198,50215]" dest="user_defined_type [50282,50299]"/>
  <match src="identifier: user [43123,43127]" dest="identifier: user [42922,42926]"/>
  <match src="(: ( [50853,50854]" dest="(: ( [50937,50938]"/>
  <match src="parameter [5163,5178]" dest="parameter [5130,5145]"/>
  <match src="primitive_type [27200,27207]" dest="primitive_type [27066,27073]"/>
  <match src="(: ( [39831,39832]" dest="(: ( [39629,39630]"/>
  <match src="type_cast_expression [8345,8377]" dest="type_cast_expression [8312,8344]"/>
  <match src="identifier: IMintableERC721 [50838,50853]" dest="identifier: IMintableERC721 [50922,50937]"/>
  <match src="public: public [46425,46431]" dest="public: public [46223,46229]"/>
  <match src="member_expression [26933,26955]" dest="member_expression [26799,26821]"/>
  <match src="primitive_type [45600,45607]" dest="primitive_type [45398,45405]"/>
  <match src="identifier: _inner [5865,5871]" dest="identifier: _inner [5832,5838]"/>
  <match src="comment: // Position of the value in the `values` array, plus 1 because index 0 [2363,2433]" dest="comment: // Position of the value in the `values` array, plus 1 because index 0 [2330,2400]"/>
  <match src=".: . [5232,5233]" dest=".: . [5199,5200]"/>
  <match src="]: ] [24250,24251]" dest="]: ] [24116,24117]"/>
  <match src="(: ( [41294,41295]" dest="(: ( [41092,41093]"/>
  <match src="(: ( [31529,31530]" dest="(: ( [31395,31396]"/>
  <match src="type_name [33187,33194]" dest="type_name [33053,33060]"/>
  <match src="identifier: members [22895,22902]" dest="identifier: members [22761,22768]"/>
  <match src="{: { [32903,32904]" dest="{: { [32769,32770]"/>
  <match src="): ) [14511,14512]" dest="): ) [14445,14446]"/>
  <match src="[: [ [54041,54042]" dest="[: [ [54275,54276]"/>
  <match src="(: ( [52130,52131]" dest="(: ( [52286,52287]"/>
  <match src="array_access [27254,27266]" dest="array_access [27120,27132]"/>
  <match src="): ) [52382,52383]" dest="): ) [52538,52539]"/>
  <match src="call_argument [7379,7384]" dest="call_argument [7346,7351]"/>
  <match src=".: . [49234,49235]" dest=".: . [49318,49319]"/>
  <match src=":=: := [36257,36259]" dest=":=: := [36123,36125]"/>
  <match src="identifier: rootToken [46967,46976]" dest="identifier: rootToken [46765,46774]"/>
  <match src="): ) [27032,27033]" dest="): ) [26898,26899]"/>
  <match src="]: ] [3013,3014]" dest="]: ] [2980,2981]"/>
  <match src="{: { [18149,18150]" dest="{: { [18083,18084]"/>
  <match src="identifier: len [35726,35729]" dest="identifier: len [35592,35595]"/>
  <match src="identifier: byte0 [35063,35068]" dest="identifier: byte0 [34929,34934]"/>
  <match src="(: ( [10197,10198]" dest="(: ( [10164,10165]"/>
  <match src="): ) [49333,49334]" dest="): ) [49417,49418]"/>
  <match src="state_mutability [5188,5192]" dest="state_mutability [5155,5159]"/>
  <match src="identifier: toRlpBytes [30172,30182]" dest="identifier: toRlpBytes [30038,30048]"/>
  <match src="using: using [45488,45493]" dest="using: using [45286,45291]"/>
  <match src="identifier: item [28658,28662]" dest="identifier: item [28524,28528]"/>
  <match src="binary_expression [35346,35381]" dest="binary_expression [35212,35247]"/>
  <match src="variable_declaration [29424,29439]" dest="variable_declaration [29290,29305]"/>
  <match src="binary_expression [35413,35432]" dest="binary_expression [35279,35298]"/>
  <match src="identifier: depositReceiver [49067,49082]" dest="identifier: depositReceiver [49151,49166]"/>
  <match src="visibility [27034,27041]" dest="visibility [26900,26907]"/>
  <match src="(: ( [38030,38031]" dest="(: ( [37828,37829]"/>
  <match src="assembly_statement [33956,34348]" dest="assembly_statement [33822,34214]"/>
  <match src="call_argument [51123,51130]" dest="call_argument [51207,51214]"/>
  <match src="parameter [29833,29837]" dest="parameter [29699,29703]"/>
  <match src=".: . [48268,48269]" dest=".: . [48352,48353]"/>
  <match src="string [31123,31164]" dest="string [30989,31030]"/>
  <match src=",: , [15544,15545]" dest=",: , [15478,15479]"/>
  <match src="): ) [52468,52469]" dest="): ) [52624,52625]"/>
  <match src="bytes32: bytes32 [52851,52858]" dest="bytes32: bytes32 [53085,53092]"/>
  <match src="call_argument [29245,29256]" dest="call_argument [29111,29122]"/>
  <match src="(: ( [15647,15648]" dest="(: ( [15581,15582]"/>
  <match src="primitive_type [52851,52858]" dest="primitive_type [53085,53092]"/>
  <match src=",: , [10592,10593]" dest=",: , [10559,10560]"/>
  <match src="mload: mload [36192,36197]" dest="mload: mload [36058,36063]"/>
  <match src="identifier: i [49469,49470]" dest="identifier: i [49553,49554]"/>
  <match src="call_argument [27282,27289]" dest="call_argument [27148,27155]"/>
  <match src="bytes32: bytes32 [26799,26806]" dest="bytes32: bytes32 [26665,26672]"/>
  <match src="call_argument [27339,27351]" dest="call_argument [27205,27217]"/>
  <match src="): ) [29529,29530]" dest="): ) [29395,29396]"/>
  <match src="function: function [14428,14436]" dest="function: function [14362,14370]"/>
  <match src="assembly_statement [29911,29977]" dest="assembly_statement [29777,29843]"/>
  <match src="address: address [51054,51061]" dest="address: address [51138,51145]"/>
  <match src="state_mutability [23151,23155]" dest="state_mutability [23017,23021]"/>
  <match src="parameter [9718,9722]" dest="parameter [9685,9689]"/>
  <match src="primitive_type [23865,23872]" dest="primitive_type [23731,23738]"/>
  <match src="(: ( [38428,38429]" dest="(: ( [38226,38227]"/>
  <match src="variable_declaration [50814,50835]" dest="variable_declaration [50898,50919]"/>
  <match src="): ) [50339,50340]" dest="): ) [50423,50424]"/>
  <match src="return_statement [4770,4782]" dest="return_statement [4737,4749]"/>
  <match src="variable_declaration_statement [31178,31223]" dest="variable_declaration_statement [31044,31089]"/>
  <match src="identifier: depositReceiver [46738,46753]" dest="identifier: depositReceiver [46536,46551]"/>
  <match src="parameter [5004,5008]" dest="parameter [4971,4975]"/>
  <match src="parameter [6398,6411]" dest="parameter [6365,6378]"/>
  <match src="identifier: item [31767,31771]" dest="identifier: item [31633,31637]"/>
  <match src="uint160: uint160 [8108,8115]" dest="uint160: uint160 [8075,8082]"/>
  <match src="primitive_type [33624,33631]" dest="primitive_type [33490,33497]"/>
  <match src="}: } [18743,18744]" dest="}: } [18677,18678]"/>
  <match src="yul_evm_builtin [32606,32609]" dest="yul_evm_builtin [32472,32475]"/>
  <match src="identifier: value [8369,8374]" dest="identifier: value [8336,8341]"/>
  <match src="): ) [29100,29101]" dest="): ) [28966,28967]"/>
  <match src="yul_function_call [32089,32102]" dest="yul_function_call [31955,31968]"/>
  <match src="{: { [2819,2820]" dest="{: { [2786,2787]"/>
  <match src="binary_expression [4513,4530]" dest="binary_expression [4480,4497]"/>
  <match src="}: } [49628,49629]" dest="}: } [49712,49713]"/>
  <match src="{: { [25069,25070]" dest="{: { [24935,24936]"/>
  <match src="identifier: i [52139,52140]" dest="identifier: i [52295,52296]"/>
  <match src="type_alias [45526,45535]" dest="type_alias [45324,45333]"/>
  <match src="}: } [28466,28467]" dest="}: } [28332,28333]"/>
  <match src="function: function [40987,40995]" dest="function: function [40785,40793]"/>
  <match src="function: function [43440,43448]" dest="function: function [43239,43247]"/>
  <match src="function: function [33545,33553]" dest="function: function [33411,33419]"/>
  <match src="yul_path [34003,34008]" dest="yul_path [33869,33874]"/>
  <match src="comment: // ERC721s were burnt in child chain with event signature [51424,51481]" dest="comment: // ERC721s were burnt in child chain with event signature [51580,51637]"/>
  <match src="variable_declaration_statement [30284,30326]" dest="variable_declaration_statement [30150,30192]"/>
  <match src="primitive_type [7774,7781]" dest="primitive_type [7741,7748]"/>
  <match src="): ) [34659,34660]" dest="): ) [34525,34526]"/>
  <match src="function_definition [31648,32146]" dest="function_definition [31514,32012]"/>
  <match src="(: ( [30601,30602]" dest="(: ( [30467,30468]"/>
  <match src="address: address [48069,48076]" dest="address: address [48153,48160]"/>
  <match src="(: ( [27323,27324]" dest="(: ( [27189,27190]"/>
  <match src="&quot;: &quot; [53908,53909]" dest="&quot;: &quot; [54142,54143]"/>
  <match src="type_name [48823,48830]" dest="type_name [48907,48914]"/>
  <match src="identifier: set [10671,10674]" dest="identifier: set [10638,10641]"/>
  <match src="indexed: indexed [37619,37626]" dest="indexed: indexed [37417,37424]"/>
  <match src="identifier: tokenIds [49577,49585]" dest="identifier: tokenIds [49661,49669]"/>
  <match src="function: function [8472,8480]" dest="function: function [8439,8447]"/>
  <match src="identifier: functionCallWithValue [14563,14584]" dest="identifier: functionCallWithValue [14497,14518]"/>
  <match src="): ) [43500,43501]" dest="): ) [43299,43300]"/>
  <match src="): ) [9923,9924]" dest="): ) [9890,9891]"/>
  <match src="identifier: endPtr [33254,33260]" dest="identifier: endPtr [33120,33126]"/>
  <match src="user_defined_type [32171,32178]" dest="user_defined_type [32037,32044]"/>
  <match src="return_statement [35397,35438]" dest="return_statement [35263,35304]"/>
  <match src="yul_assignment [34068,34092]" dest="yul_assignment [33934,33958]"/>
  <match src="identifier: withdrawer [52496,52506]" dest="identifier: withdrawer [52652,52662]"/>
  <match src="uint256: uint256 [31987,31994]" dest="uint256: uint256 [31853,31860]"/>
  <match src="yul_evm_builtin [18612,18615]" dest="yul_evm_builtin [18546,18549]"/>
  <match src="identifier: role [24185,24189]" dest="identifier: role [24051,24055]"/>
  <match src="uint256: uint256 [40391,40398]" dest="uint256: uint256 [40189,40196]"/>
  <match src="member_expression [32029,32040]" dest="member_expression [31895,31906]"/>
  <match src="indexed: indexed [22250,22257]" dest="indexed: indexed [22116,22123]"/>
  <match src="call_expression [30306,30325]" dest="call_expression [30172,30191]"/>
  <match src=":=: := [34301,34303]" dest=":=: := [34167,34169]"/>
  <match src="returns: returns [8998,9005]" dest="returns: returns [8965,8972]"/>
  <match src="function_body [27737,27853]" dest="function_body [27602,27718]"/>
  <match src="identifier: byte0 [35269,35274]" dest="identifier: byte0 [35135,35140]"/>
  <match src="(: ( [21489,21490]" dest="(: ( [21355,21356]"/>
  <match src=",: , [17337,17338]" dest=",: , [17271,17272]"/>
  <match src="function_definition [10561,10698]" dest="function_definition [10528,10665]"/>
  <match src="identifier: memPtr [29377,29383]" dest="identifier: memPtr [29243,29249]"/>
  <match src="type_name [41254,41261]" dest="type_name [41052,41059]"/>
  <match src=".: . [48854,48855]" dest=".: . [48938,48939]"/>
  <match src="primitive_type [46686,46693]" dest="primitive_type [46484,46491]"/>
  <match src="primitive_type [30876,30883]" dest="primitive_type [30742,30749]"/>
  <match src="user_defined_type [9664,9671]" dest="user_defined_type [9631,9638]"/>
  <match src="internal: internal [14513,14521]" dest="internal: internal [14447,14455]"/>
  <match src="): ) [51993,51994]" dest="): ) [52149,52150]"/>
  <match src="identifier: _at [7363,7366]" dest="identifier: _at [7330,7333]"/>
  <match src="type_name [50881,50888]" dest="type_name [50965,50972]"/>
  <match src="array_access [27057,27069]" dest="array_access [26923,26935]"/>
  <match src="pure: pure [18122,18126]" dest="pure: pure [18056,18060]"/>
  <match src="type_name [41947,41954]" dest="type_name [41745,41752]"/>
  <match src="): ) [48737,48738]" dest="): ) [48821,48822]"/>
  <match src="identifier: memPtr [28769,28775]" dest="identifier: memPtr [28635,28641]"/>
  <match src="struct: struct [21378,21384]" dest="struct: struct [21244,21250]"/>
  <match src="identifier: LockedMintableERC721Batch [49030,49055]" dest="identifier: LockedMintableERC721Batch [49114,49139]"/>
  <match src="function: function [25740,25748]" dest="function: function [25606,25614]"/>
  <match src="parameter [40597,40612]" dest="parameter [40395,40410]"/>
  <match src="if_statement [35059,35438]" dest="if_statement [34925,35304]"/>
  <match src="primitive_type [33187,33194]" dest="primitive_type [33053,33060]"/>
  <match src="(: ( [48675,48676]" dest="(: ( [48759,48760]"/>
  <match src="=: = [45133,45134]" dest="=: = [44932,44933]"/>
  <match src="&quot;: &quot; [25852,25853]" dest="&quot;: &quot; [25718,25719]"/>
  <match src="call_argument [48875,48886]" dest="call_argument [48959,48970]"/>
  <match src="identifier: len [30712,30715]" dest="identifier: len [30578,30581]"/>
  <match src="identifier: IERC721 [37474,37481]" dest="identifier: IERC721 [37272,37279]"/>
  <match src="type_cast_expression [7758,7790]" dest="type_cast_expression [7725,7757]"/>
  <match src="identifier: withdrawer [54626,54636]" dest="identifier: withdrawer [54860,54870]"/>
  <match src="}: } [18667,18668]" dest="}: } [18601,18602]"/>
  <match src="expression_statement [16725,16793]" dest="expression_statement [16659,16727]"/>
  <match src="(: ( [52463,52464]" dest="(: ( [52619,52620]"/>
  <match src="{: { [35711,35712]" dest="{: { [35577,35578]"/>
  <match src="type_name [28270,28275]" dest="type_name [28136,28141]"/>
  <match src=".: . [48321,48322]" dest=".: . [48405,48406]"/>
  <match src="{: { [15910,15911]" dest="{: { [15844,15845]"/>
  <match src="identifier: adminRole [26946,26955]" dest="identifier: adminRole [26812,26821]"/>
  <match src="external: external [42497,42505]" dest="external: external [42296,42304]"/>
  <match src="primitive_type [904,909]" dest="primitive_type [904,909]"/>
  <match src="identifier: value [6625,6630]" dest="identifier: value [6592,6597]"/>
  <match src="user_defined_type [29789,29796]" dest="user_defined_type [29655,29662]"/>
  <match src="primitive_type [10163,10170]" dest="primitive_type [10130,10137]"/>
  <match src="identifier: Initializable [45450,45463]" dest="identifier: Initializable [45248,45261]"/>
  <match src="(: ( [25848,25849]" dest="(: ( [25714,25715]"/>
  <match src="identifier: LIST_SHORT_START [35185,35201]" dest="identifier: LIST_SHORT_START [35051,35067]"/>
  <match src="yul_variable_declaration [18543,18583]" dest="yul_variable_declaration [18477,18517]"/>
  <match src="uint256: uint256 [3957,3964]" dest="uint256: uint256 [3924,3931]"/>
  <match src="identifier: memPtr [29894,29900]" dest="identifier: memPtr [29760,29766]"/>
  <match src=".: . [51014,51015]" dest=".: . [51098,51099]"/>
  <match src="parameter [31714,31721]" dest="parameter [31580,31587]"/>
  <match src="identifier: IMintableERC721 [49507,49522]" dest="identifier: IMintableERC721 [49591,49606]"/>
  <match src="identifier: _roles [23192,23198]" dest="identifier: _roles [23058,23064]"/>
  <match src="expression_statement [35975,35993]" dest="expression_statement [35841,35859]"/>
  <match src=",: , [28673,28674]" dest=",: , [28539,28540]"/>
  <match src="=: = [46460,46461]" dest="=: = [46258,46259]"/>
  <match src="yul_identifier [32079,32085]" dest="yul_identifier [31945,31951]"/>
  <match src="variable_declaration [32012,32026]" dest="variable_declaration [31878,31892]"/>
  <match src="identifier: destpart [36334,36342]" dest="identifier: destpart [36200,36208]"/>
  <match src="): ) [50987,50988]" dest="): ) [51071,51072]"/>
  <match src="number_literal: 1 [35436,35437]" dest="number_literal: 1 [35302,35303]"/>
  <match src="&lt;=: &lt;= [33369,33371]" dest="&lt;=: &lt;= [33235,33237]"/>
  <match src=".: . [29249,29250]" dest=".: . [29115,29116]"/>
  <match src="address: address [47072,47079]" dest="address: address [47156,47163]"/>
  <match src="primitive_type [41935,41942]" dest="primitive_type [41733,41740]"/>
  <match src=".: . [9065,9066]" dest=".: . [9032,9033]"/>
  <match src="): ) [15587,15588]" dest="): ) [15521,15522]"/>
  <match src=".: . [31816,31817]" dest=".: . [31682,31683]"/>
  <match src="identifier: withdrawer [52771,52781]" dest="identifier: withdrawer [52927,52937]"/>
  <match src="=: = [33133,33134]" dest="=: = [32999,33000]"/>
  <match src="identifier: functionDelegateCall [17204,17224]" dest="identifier: functionDelegateCall [17138,17158]"/>
  <match src="): ) [33611,33612]" dest="): ) [33477,33478]"/>
  <match src="string: string [27510,27516]" dest="string: string [27375,27381]"/>
  <match src="identifier: safeTransferFrom [54147,54163]" dest="identifier: safeTransferFrom [54381,54397]"/>
  <match src="solidity: solidity [19893,19901]" dest="solidity: solidity [18766,18774]"/>
  <match src="return: return [30772,30778]" dest="return: return [30638,30644]"/>
  <match src="external: external [38446,38454]" dest="external: external [38244,38252]"/>
  <match src="user_defined_type [45430,45448]" dest="user_defined_type [45228,45246]"/>
  <match src="address: address [44320,44327]" dest="address: address [44118,44125]"/>
  <match src="): ) [10007,10008]" dest="): ) [9974,9975]"/>
  <match src=",: , [34577,34578]" dest=",: , [34443,34444]"/>
  <match src="identifier: memPtr [28845,28851]" dest="identifier: memPtr [28711,28717]"/>
  <match src="(: ( [51973,51974]" dest="(: ( [52129,52130]"/>
  <match src="(: ( [54848,54849]" dest="(: ( [55154,55155]"/>
  <match src="member_expression [27254,27274]" dest="member_expression [27120,27140]"/>
  <match src="parameter [39241,39251]" dest="parameter [39039,39049]"/>
  <match src="type_name [44382,44387]" dest="type_name [44180,44185]"/>
  <match src="variable_declaration_statement [29355,29414]" dest="variable_declaration_statement [29221,29280]"/>
  <match src="call_argument [15732,15750]" dest="call_argument [15666,15684]"/>
  <match src="block_statement [2819,3073]" dest="block_statement [2786,3040]"/>
  <match src="function_definition [8933,9091]" dest="function_definition [8900,9058]"/>
  <match src="call_expression [50967,50988]" dest="call_expression [51051,51072]"/>
  <match src="(: ( [52360,52361]" dest="(: ( [52516,52517]"/>
  <match src="identifier: exists [43449,43455]" dest="identifier: exists [43248,43254]"/>
  <match src="identifier: Bytes32Set [6817,6827]" dest="identifier: Bytes32Set [6784,6794]"/>
  <match src="): ) [36281,36282]" dest="): ) [36147,36148]"/>
  <match src="view: view [10149,10153]" dest="view: view [10116,10120]"/>
  <match src=",: , [48713,48714]" dest=",: , [48797,48798]"/>
  <match src="identifier: at [8942,8944]" dest="identifier: at [8909,8911]"/>
  <match src="event: event [38010,38015]" dest="event: event [37808,37813]"/>
  <match src="visibility [19458,19466]" dest="visibility [19359,19367]"/>
  <match src="parameter [9910,9923]" dest="parameter [9877,9890]"/>
  <match src="inheritance_specifier [45430,45448]" dest="inheritance_specifier [45228,45246]"/>
  <match src="variable_declaration [31035,31053]" dest="variable_declaration [30901,30919]"/>
  <match src="identifier: dest [35896,35900]" dest="identifier: dest [35762,35766]"/>
  <match src="{: { [11576,11577]" dest="{: { [11510,11511]"/>
  <match src="visibility [24191,24197]" dest="visibility [24057,24063]"/>
  <match src="): ) [35089,35090]" dest="): ) [34955,34956]"/>
  <match src="return: return [5770,5776]" dest="return: return [5737,5743]"/>
  <match src="}: } [41996,41997]" dest="}: } [41794,41795]"/>
  <match src="identifier: pop [4651,4654]" dest="identifier: pop [4618,4621]"/>
  <match src="): ) [27592,27593]" dest="): ) [27457,27458]"/>
  <match src="-: - [35410,35411]" dest="-: - [35276,35277]"/>
  <match src="variable_declaration [48823,48848]" dest="variable_declaration [48907,48932]"/>
  <match src="call_argument [54570,54577]" dest="call_argument [54804,54811]"/>
  <match src="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [6723,6795]" dest="comment: /**      * @dev Returns the number of values in the set. O(1).      */ [6690,6762]"/>
  <match src="primitive_type [16239,16244]" dest="primitive_type [16173,16178]"/>
  <match src="identifier: DEFAULT_ADMIN_ROLE [21558,21576]" dest="identifier: DEFAULT_ADMIN_ROLE [21424,21442]"/>
  <match src="address: address [15029,15036]" dest="address: address [14963,14970]"/>
  <match src="identifier: item [29067,29071]" dest="identifier: item [28933,28937]"/>
  <match src="comment: // This means that we can only create new EnumerableSets for types that fit [2174,2249]" dest="comment: // This means that we can only create new EnumerableSets for types that fit [2141,2216]"/>
  <match src="internal: internal [6109,6117]" dest="internal: internal [6076,6084]"/>
  <match src="primitive_type [32496,32501]" dest="primitive_type [32362,32367]"/>
  <match src="identifier: set [5229,5232]" dest="identifier: set [5196,5199]"/>
  <match src="(: ( [13163,13164]" dest="(: ( [13097,13098]"/>
  <match src="(: ( [18615,18616]" dest="(: ( [18549,18550]"/>
  <match src="function: function [41895,41903]" dest="function: function [41693,41701]"/>
  <match src=".: . [19527,19528]" dest=".: . [19428,19429]"/>
  <match src="number_literal: 0 [29467,29468]" dest="number_literal: 0 [29333,29334]"/>
  <match src="): ) [15652,15653]" dest="): ) [15586,15587]"/>
  <match src="identifier: withdrawer [51201,51211]" dest="identifier: withdrawer [51285,51295]"/>
  <match src="identifier: i [49481,49482]" dest="identifier: i [49565,49566]"/>
  <match src="external: external [43473,43481]" dest="external: external [43272,43280]"/>
  <match src="assembly_statement [36149,36364]" dest="assembly_statement [36015,36230]"/>
  <match src="visibility [5180,5187]" dest="visibility [5147,5154]"/>
  <match src="yul_identifier [18620,18630]" dest="yul_identifier [18554,18564]"/>
  <match src="=: = [33792,33793]" dest="=: = [33658,33659]"/>
  <match src="bytes: bytes [54526,54531]" dest="bytes: bytes [54760,54765]"/>
  <match src="identifier: inited [45240,45246]" dest="identifier: inited [45039,45045]"/>
  <match src="yul_hex_number: 0x20 [28789,28793]" dest="yul_hex_number: 0x20 [28655,28659]"/>
  <match src="): ) [34632,34633]" dest="): ) [34498,34499]"/>
  <match src="address: address [51750,51757]" dest="address: address [51906,51913]"/>
  <match src="type_name [32240,32247]" dest="type_name [32106,32113]"/>
  <match src="yul_function_call [35889,35913]" dest="yul_function_call [35755,35779]"/>
  <match src="block_statement [54691,54906]" dest="block_statement [54997,55212]"/>
  <match src="type_name [26566,26573]" dest="type_name [26432,26439]"/>
  <match src="variable_declaration [16866,16878]" dest="variable_declaration [16800,16812]"/>
  <match src="assignment_expression [33277,33317]" dest="assignment_expression [33143,33183]"/>
  <match src="event_paramater [22626,22646]" dest="event_paramater [22492,22512]"/>
  <match src="call_argument [17753,17793]" dest="call_argument [17687,17727]"/>
  <match src="function_definition [40987,41057]" dest="function_definition [40785,40855]"/>
  <match src="call_expression [9432,9464]" dest="call_expression [9399,9431]"/>
  <match src="call_expression [52083,52109]" dest="call_expression [52239,52265]"/>
  <match src="(: ( [25130,25131]" dest="(: ( [24996,24997]"/>
  <match src="if_statement [33811,34786]" dest="if_statement [33677,34652]"/>
  <match src="type_name [11530,11537]" dest="type_name [11464,11471]"/>
  <match src="variable_declaration_tuple [13113,13129]" dest="variable_declaration_tuple [13047,13063]"/>
  <match src="if: if [35722,35724]" dest="if: if [35588,35590]"/>
  <match src="identifier: Bytes32Set [7274,7284]" dest="identifier: Bytes32Set [7241,7251]"/>
  <match src="identifier: tokenId [51123,51130]" dest="identifier: tokenId [51207,51214]"/>
  <match src="identifier: this [15648,15652]" dest="identifier: this [15582,15586]"/>
  <match src="call_argument [16733,16751]" dest="call_argument [16667,16685]"/>
  <match src="function_definition [40576,40655]" dest="function_definition [40374,40453]"/>
  <match src="call_expression [9742,9777]" dest="call_expression [9709,9744]"/>
  <match src="event_paramater [37611,37631]" dest="event_paramater [37409,37429]"/>
  <match src="primitive_type [44320,44327]" dest="primitive_type [44118,44125]"/>
  <match src="call_expression [29557,29581]" dest="call_expression [29423,29447]"/>
  <match src=".: . [31321,31322]" dest=".: . [31187,31188]"/>
  <match src=".: . [4384,4385]" dest=".: . [4351,4352]"/>
  <match src="visibility [7699,7707]" dest="visibility [7666,7674]"/>
  <match src="&quot;: &quot; [31869,31870]" dest="&quot;: &quot; [31735,31736]"/>
  <match src="&lt;: &lt; [33821,33822]" dest="&lt;: &lt; [33687,33688]"/>
  <match src="visibility [15079,15087]" dest="visibility [15013,15021]"/>
  <match src="comment: // not ( yet ) supported by L1 exit manager [54785,54828]" dest="comment: // not ( yet ) supported by L1 exit manager [55091,55134]"/>
  <match src="if: if [54095,54097]" dest="if: if [54329,54331]"/>
  <match src="type_name [18061,18066]" dest="type_name [17995,18000]"/>
  <match src=",: , [26564,26565]" dest=",: , [26430,26431]"/>
  <match src="}: } [54905,54906]" dest="}: } [55211,55212]"/>
  <match src="variable_declaration [51729,51747]" dest="variable_declaration [51885,51903]"/>
  <match src="memory: memory [16706,16712]" dest="memory: memory [16640,16646]"/>
  <match src="{: { [11867,11868]" dest="{: { [11801,11802]"/>
  <match src="primitive_type [27017,27024]" dest="primitive_type [26883,26890]"/>
  <match src="&gt;: &gt; [18327,18328]" dest="&gt;: &gt; [18261,18262]"/>
  <match src="constant: constant [45763,45771]" dest="constant: constant [45561,45569]"/>
  <match src="{: { [32229,32230]" dest="{: { [32095,32096]"/>
  <match src="call_argument [29067,29071]" dest="call_argument [28933,28937]"/>
  <match src="member_expression [30436,30447]" dest="member_expression [30302,30313]"/>
  <match src="call_argument [48704,48713]" dest="call_argument [48788,48797]"/>
  <match src="type_name [10594,10601]" dest="type_name [10561,10568]"/>
  <match src="): ) [33175,33176]" dest="): ) [33041,33042]"/>
  <match src="string: string [16649,16655]" dest="string: string [16583,16589]"/>
  <match src="type_name [39846,39853]" dest="type_name [39644,39651]"/>
  <match src="function: function [3301,3309]" dest="function: function [3268,3276]"/>
  <match src="identifier: byte0 [33815,33820]" dest="identifier: byte0 [33681,33686]"/>
  <match src="identifier: length [5706,5712]" dest="identifier: length [5673,5679]"/>
  <match src="identifier: itemLength [31099,31109]" dest="identifier: itemLength [30965,30975]"/>
  <match src="&lt;: &lt; [33762,33763]" dest="&lt;: &lt; [33628,33629]"/>
  <match src="uint256: uint256 [10632,10639]" dest="uint256: uint256 [10599,10606]"/>
  <match src="primitive_type [24177,24184]" dest="primitive_type [24043,24050]"/>
  <match src="bool: bool [37247,37251]" dest="bool: bool [37080,37084]"/>
  <match src="]: ] [24634,24635]" dest="]: ] [24500,24501]"/>
  <match src="primitive_type [50520,50527]" dest="primitive_type [50604,50611]"/>
  <match src=",: , [50085,50086]" dest=",: , [50169,50170]"/>
  <match src="identifier: exitTokens [50029,50039]" dest="identifier: exitTokens [50113,50123]"/>
  <match src="override: override [47473,47481]" dest="override: override [47557,47565]"/>
  <match src="identifier: role [26882,26886]" dest="identifier: role [26748,26752]"/>
  <match src="identifier: index [5715,5720]" dest="identifier: index [5682,5687]"/>
  <match src="returns: returns [9939,9946]" dest="returns: returns [9906,9913]"/>
  <match src="}: } [5802,5803]" dest="}: } [5769,5770]"/>
  <match src="(: ( [3541,3542]" dest="(: ( [3508,3509]"/>
  <match src="address: address [8261,8268]" dest="address: address [8228,8235]"/>
  <match src="[: [ [3007,3008]" dest="[: [ [2974,2975]"/>
  <match src="solidity_version:  0.6.6 [45354,45360]" dest="solidity_version:  0.6.12 [45153,45160]"/>
  <match src="call_argument [51201,51211]" dest="call_argument [51285,51295]"/>
  <match src="type_name [6070,6080]" dest="type_name [6037,6047]"/>
  <match src="identifier: LIST_SHORT_START [35277,35293]" dest="identifier: LIST_SHORT_START [35143,35159]"/>
  <match src="identifier: tokenIds [46997,47005]" dest="identifier: tokenIds [46795,46803]"/>
  <match src="assembly_statement [31348,31575]" dest="assembly_statement [31214,31441]"/>
  <match src="visibility [4982,4989]" dest="visibility [4949,4956]"/>
  <match src="uint256: uint256 [7298,7305]" dest="uint256: uint256 [7265,7272]"/>
  <match src="identifier: logData [54474,54481]" dest="identifier: logData [54708,54715]"/>
  <match src="(: ( [6688,6689]" dest="(: ( [6655,6656]"/>
  <match src="struct_member [2488,2526]" dest="struct_member [2455,2493]"/>
  <match src="uint256: uint256 [52131,52138]" dest="uint256: uint256 [52287,52294]"/>
  <match src="identifier: toUint [53695,53701]" dest="identifier: toUint [53929,53935]"/>
  <match src=",: , [15163,15164]" dest=",: , [15097,15098]"/>
  <match src="): ) [19613,19614]" dest="): ) [19514,19515]"/>
  <match src="member_expression [3017,3028]" dest="member_expression [2984,2995]"/>
  <match src="): ) [8303,8304]" dest="): ) [8270,8271]"/>
  <match src="): ) [36133,36134]" dest="): ) [35999,36000]"/>
  <match src="constant: constant [28321,28329]" dest="constant: constant [28187,28195]"/>
  <match src="identifier: lastvalue [4410,4419]" dest="identifier: lastvalue [4377,4386]"/>
  <match src="string [49287,49333]" dest="string [49371,49417]"/>
  <match src="variable_declaration_statement [31987,32002]" dest="variable_declaration_statement [31853,31868]"/>
  <match src="primitive_type [46764,46771]" dest="primitive_type [46562,46569]"/>
  <match src="): ) [9081,9082]" dest="): ) [9048,9049]"/>
  <match src="identifier: user [42474,42478]" dest="identifier: user [42273,42277]"/>
  <match src="&quot;: &quot; [28675,28676]" dest="&quot;: &quot; [28541,28542]"/>
  <match src="mapping: mapping [2488,2495]" dest="mapping: mapping [2455,2462]"/>
  <match src="internal: internal [9925,9933]" dest="internal: internal [9892,9900]"/>
  <match src="identifier: exists [52367,52373]" dest="identifier: exists [52523,52529]"/>
  <match src="expression_statement [26611,26637]" dest="expression_statement [26477,26503]"/>
  <match src="call_expression [16948,17000]" dest="call_expression [16882,16934]"/>
  <match src=".: . [52412,52413]" dest=".: . [52568,52569]"/>
  <match src="call_argument [28832,28843]" dest="call_argument [28698,28709]"/>
  <match src="identifier: length [5241,5247]" dest="identifier: length [5208,5214]"/>
  <match src="bool: bool [17868,17872]" dest="bool: bool [17802,17806]"/>
  <match src="yul_function_call [34304,34333]" dest="yul_function_call [34170,34199]"/>
  <match src=",: , [16344,16345]" dest=",: , [16278,16279]"/>
  <match src="if: if [50963,50965]" dest="if: if [51047,51049]"/>
  <match src=",: , [46711,46712]" dest=",: , [46509,46510]"/>
  <match src="yul_path [34720,34727]" dest="yul_path [34586,34593]"/>
  <match src="identifier: WORD_SIZE [35951,35960]" dest="identifier: WORD_SIZE [35817,35826]"/>
  <match src="yul_decimal_number: 256 [31530,31533]" dest="yul_decimal_number: 256 [31396,31399]"/>
  <match src="=: = [3975,3976]" dest="=: = [3942,3943]"/>
  <match src="identifier: index [7306,7311]" dest="identifier: index [7273,7278]"/>
  <match src="identifier: WITHDRAW_EVENT_SIG [46441,46459]" dest="identifier: WITHDRAW_EVENT_SIG [46239,46257]"/>
  <match src="(: ( [31475,31476]" dest="(: ( [31341,31342]"/>
  <match src="{: { [47109,47110]" dest="{: { [47193,47194]"/>
  <match src="identifier: _roles [23928,23934]" dest="identifier: _roles [23794,23800]"/>
  <match src="state_mutability [41281,41285]" dest="state_mutability [41079,41083]"/>
  <match src="return_statement [34798,34813]" dest="return_statement [34664,34679]"/>
  <match src="yul_evm_builtin [35014,35018]" dest="yul_evm_builtin [34880,34884]"/>
  <match src="identifier: functionDelegateCall [17598,17618]" dest="identifier: functionDelegateCall [17532,17552]"/>
  <match src="visibility [38446,38454]" dest="visibility [38244,38252]"/>
  <match src="expression_statement [33442,33450]" dest="expression_statement [33308,33316]"/>
  <match src="): ) [48885,48886]" dest="): ) [48969,48970]"/>
  <match src="call_argument [49523,49532]" dest="call_argument [49607,49616]"/>
  <match src="parameter [19601,19613]" dest="parameter [19502,19514]"/>
  <match src="=: = [15897,15898]" dest="=: = [15831,15832]"/>
  <match src="parameter [18086,18112]" dest="parameter [18020,18046]"/>
  <match src="sub: sub [34644,34647]" dest="sub: sub [34510,34513]"/>
  <match src="array_access [49577,49588]" dest="array_access [49661,49672]"/>
  <match src="identifier: byte0 [29856,29861]" dest="identifier: byte0 [29722,29727]"/>
  <match src="): ) [28632,28633]" dest="): ) [28498,28499]"/>
  <match src="{: { [9134,9135]" dest="{: { [9101,9102]"/>
  <match src="public: public [46608,46614]" dest="public: public [46406,46412]"/>
  <match src="primitive_type [31275,31282]" dest="primitive_type [31141,31148]"/>
  <match src="user_defined_type [45413,45428]" dest="user_defined_type [45211,45226]"/>
  <match src="uint256: uint256 [31275,31282]" dest="uint256: uint256 [31141,31148]"/>
  <match src="identifier: owner [38214,38219]" dest="identifier: owner [38012,38017]"/>
  <match src="identifier: abi [27634,27637]" dest="identifier: abi [27499,27502]"/>
  <match src="type_name [33089,33096]" dest="type_name [32955,32962]"/>
  <match src="function_body [17292,17395]" dest="function_body [17226,17329]"/>
  <match src="identifier: role [25103,25107]" dest="identifier: role [24969,24973]"/>
  <match src="(: ( [34227,34228]" dest="(: ( [34093,34094]"/>
  <match src="call_argument [47185,47203]" dest="call_argument [47269,47287]"/>
  <match src="call_expression [7363,7385]" dest="call_expression [7330,7352]"/>
  <match src="type_name [9948,9952]" dest="type_name [9915,9919]"/>
  <match src="identifier: item [29401,29405]" dest="identifier: item [29267,29271]"/>
  <match src="(: ( [15606,15607]" dest="(: ( [15540,15541]"/>
  <match src="parameter [23165,23172]" dest="parameter [23031,23038]"/>
  <match src="primitive_type [43129,43136]" dest="primitive_type [42928,42935]"/>
  <match src="bytes32: bytes32 [45913,45920]" dest="bytes32: bytes32 [45711,45718]"/>
  <match src="comment: // and use 0 as a sentinel value [2949,2981]" dest="comment: // and use 0 as a sentinel value [2916,2948]"/>
</matches>
<actions>
  <move-tree tree="pragma_directive [19886,19917]" parent="source_file [0,55232]" at="16"/>
  <move-tree tree="pragma_directive [18858,18889]" parent="source_file [0,55232]" at="21"/>
  <update-node tree="solidity_version:  0.6.6 [27445,27451]" label=" 0.6.12"/>
  <update-node tree="solidity_version:  0.6.6 [28141,28147]" label=" 0.6.12"/>
  <update-node tree="solidity_version:  0.6.6 [42073,42079]" label=" 0.6.12"/>
  <update-node tree="solidity_version:  0.6.6 [43587,43593]" label=" 0.6.12"/>
  <update-node tree="solidity_version:  0.6.6 [45080,45086]" label=" 0.6.12"/>
  <update-node tree="solidity_version:  0.6.6 [45354,45360]" label=" 0.6.12"/>
  <insert-tree tree="event_definition [46817,46950]" parent="contract_body [45279,55232]" at="18"/>
  <insert-tree tree="event_definition [46956,47097]" parent="contract_body [45279,55232]" at="19"/>
  <insert-tree tree="emit_statement [51335,51393]" parent="block_statement [50587,51406]" at="8"/>
  <insert-tree tree="emit_statement [52998,53062]" parent="block_statement [51482,53075]" at="16"/>
  <insert-tree tree="emit_statement [54920,54978]" parent="block_statement [53159,54991]" at="19"/>
  <delete-node tree="comment: // SPDX-License-Identifier: MIT [1018,1049]"/>
  <delete-node tree="comment: // SPDX-License-Identifier: MIT [10759,10790]"/>
  <delete-node tree="comment: // SPDX-License-Identifier: MIT [18823,18854]"/>
  <delete-node tree="comment: // SPDX-License-Identifier: MIT [19851,19882]"/>
  <delete-node tree="comment: // SPDX-License-Identifier: MIT [36440,36471]"/>
  <delete-node tree="comment: // SPDX-License-Identifier: MIT [37321,37352]"/>
</actions>
