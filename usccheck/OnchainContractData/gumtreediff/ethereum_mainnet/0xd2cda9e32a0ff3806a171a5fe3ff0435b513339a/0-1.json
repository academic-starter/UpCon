{
  "matches": [
    {
      "src": "member_expression [14502,14517]",
      "dest": "member_expression [14501,14516]"
    },
    {
      "src": "identifier: tokenName [26889,26898]",
      "dest": "identifier: tokenName [26888,26897]"
    },
    {
      "src": "call_expression [7076,7136]",
      "dest": "call_expression [7075,7135]"
    },
    {
      "src": "string [28352,28374]",
      "dest": "string [28351,28373]"
    },
    {
      "src": "}: } [7150,7151]",
      "dest": "}: } [7149,7150]"
    },
    {
      "src": "array_access [28038,28065]",
      "dest": "array_access [28037,28064]"
    },
    {
      "src": "identifier: _revert [7212,7219]",
      "dest": "identifier: _revert [7211,7218]"
    },
    {
      "src": ",: , [23140,23141]",
      "dest": ",: , [23139,23140]"
    },
    {
      "src": "memory: memory [23363,23369]",
      "dest": "memory: memory [23362,23368]"
    },
    {
      "src": "): ) [18483,18484]",
      "dest": "): ) [18482,18483]"
    },
    {
      "src": "parameter [21557,21566]",
      "dest": "parameter [21556,21565]"
    },
    {
      "src": "parameter [25182,25197]",
      "dest": "parameter [25181,25196]"
    },
    {
      "src": "parameter [3544,3558]",
      "dest": "parameter [3543,3557]"
    },
    {
      "src": "type_name [6203,6208]",
      "dest": "type_name [6202,6207]"
    },
    {
      "src": "yul_identifier [22205,22207]",
      "dest": "yul_identifier [22204,22206]"
    },
    {
      "src": "binary_expression [17429,17435]",
      "dest": "binary_expression [17428,17434]"
    },
    {
      "src": "\": \" [26722,26723]",
      "dest": "\": \" [26721,26722]"
    },
    {
      "src": "=: = [16716,16717]",
      "dest": "=: = [16715,16716]"
    },
    {
      "src": "/: / [16743,16744]",
      "dest": "/: / [16742,16743]"
    },
    {
      "src": "visibility [26949,26955]",
      "dest": "visibility [26948,26954]"
    },
    {
      "src": "(: ( [2564,2565]",
      "dest": "(: ( [2563,2564]"
    },
    {
      "src": "identifier: a [16990,16991]",
      "dest": "identifier: a [16989,16990]"
    },
    {
      "src": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [18209,18445]",
      "dest": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [18208,18444]"
    },
    {
      "src": "{: { [28443,28444]",
      "dest": "{: { [28473,28474]"
    },
    {
      "src": "): ) [11770,11771]",
      "dest": "): ) [11769,11770]"
    },
    {
      "src": "number_literal: 0 [4129,4130]",
      "dest": "number_literal: 0 [4128,4129]"
    },
    {
      "src": "memory: memory [22938,22944]",
      "dest": "memory: memory [22937,22943]"
    },
    {
      "src": "augmented_assignment_expression [27734,27760]",
      "dest": "augmented_assignment_expression [27733,27759]"
    },
    {
      "src": "&&: && [11679,11681]",
      "dest": "&&: && [11678,11680]"
    },
    {
      "src": "visibility [25551,25559]",
      "dest": "visibility [25550,25558]"
    },
    {
      "src": "contract: contract [10720,10728]",
      "dest": "contract: contract [10719,10727]"
    },
    {
      "src": "identifier: require [27960,27967]",
      "dest": "identifier: require [27959,27966]"
    },
    {
      "src": "true: true [17127,17131]",
      "dest": "true: true [17126,17130]"
    },
    {
      "src": "member_expression [29743,29751]",
      "dest": "member_expression [29405,29413]"
    },
    {
      "src": ".: . [27611,27612]",
      "dest": ".: . [27610,27611]"
    },
    {
      "src": ",: , [5781,5782]",
      "dest": ",: , [5780,5781]"
    },
    {
      "src": "type_name [16048,16052]",
      "dest": "type_name [16047,16051]"
    },
    {
      "src": "identifier: a [20116,20117]",
      "dest": "identifier: a [20115,20116]"
    },
    {
      "src": "visibility [29932,29940]",
      "dest": "visibility [29594,29602]"
    },
    {
      "src": "boolean_literal [17096,17101]",
      "dest": "boolean_literal [17095,17100]"
    },
    {
      "src": "primitive_type [25478,25482]",
      "dest": "primitive_type [25477,25481]"
    },
    {
      "src": "string [29277,29279]",
      "dest": "string [28939,28941]"
    },
    {
      "src": "identifier: feesCollected [28215,28228]",
      "dest": "identifier: feesCollected [28214,28227]"
    },
    {
      "src": "}: } [1550,1551]",
      "dest": "}: } [1549,1550]"
    },
    {
      "src": "==: == [11766,11768]",
      "dest": "==: == [11765,11767]"
    },
    {
      "src": "contract_body [24992,25762]",
      "dest": "contract_body [24991,25761]"
    },
    {
      "src": "{: { [29837,29838]",
      "dest": "{: { [29499,29500]"
    },
    {
      "src": "identifier: isSpotter [26583,26592]",
      "dest": "identifier: isSpotter [26582,26591]"
    },
    {
      "src": "uint8: uint8 [13165,13170]",
      "dest": "uint8: uint8 [13164,13169]"
    },
    {
      "src": "call_argument [6297,6303]",
      "dest": "call_argument [6296,6302]"
    },
    {
      "src": "(: ( [21701,21702]",
      "dest": "(: ( [21700,21701]"
    },
    {
      "src": "true: true [28515,28519]",
      "dest": "true: true [28545,28549]"
    },
    {
      "src": "\": \" [24374,24375]",
      "dest": "\": \" [24373,24374]"
    },
    {
      "src": "(: ( [27537,27538]",
      "dest": "(: ( [27536,27537]"
    },
    {
      "src": "parameter [4011,4037]",
      "dest": "parameter [4010,4036]"
    },
    {
      "src": "identifier: deposit [27175,27182]",
      "dest": "identifier: deposit [27174,27181]"
    },
    {
      "src": "modifier: modifier [26666,26674]",
      "dest": "modifier: modifier [26665,26673]"
    },
    {
      "src": "): ) [4760,4761]",
      "dest": "): ) [4759,4760]"
    },
    {
      "src": "(: ( [29193,29194]",
      "dest": "(: ( [28855,28856]"
    },
    {
      "src": "public: public [30049,30055]",
      "dest": "public: public [29711,29717]"
    },
    {
      "src": "): ) [25273,25274]",
      "dest": "): ) [25272,25273]"
    },
    {
      "src": "primitive_type [24266,24273]",
      "dest": "primitive_type [24265,24272]"
    },
    {
      "src": "{: { [24152,24153]",
      "dest": "{: { [24151,24152]"
    },
    {
      "src": "=: = [23382,23383]",
      "dest": "=: = [23381,23382]"
    },
    {
      "src": "member_expression [23403,23419]",
      "dest": "member_expression [23402,23418]"
    },
    {
      "src": "return_statement [17468,17489]",
      "dest": "return_statement [17467,17488]"
    },
    {
      "src": "): ) [16769,16770]",
      "dest": "): ) [16768,16769]"
    },
    {
      "src": "primitive_type [17342,17349]",
      "dest": "primitive_type [17341,17348]"
    },
    {
      "src": "primitive_type [16014,16021]",
      "dest": "primitive_type [16013,16020]"
    },
    {
      "src": "(: ( [23836,23837]",
      "dest": "(: ( [23835,23836]"
    },
    {
      "src": "type_name [26934,26946]",
      "dest": "type_name [26933,26945]"
    },
    {
      "src": "true [15817,15821]",
      "dest": "true [15816,15820]"
    },
    {
      "src": "primitive_type [14461,14466]",
      "dest": "primitive_type [14460,14465]"
    },
    {
      "src": "binary_expression [29063,29081]",
      "dest": "binary_expression [28725,28743]"
    },
    {
      "src": "function: function [29788,29796]",
      "dest": "function: function [29450,29458]"
    },
    {
      "src": "identifier: require [5205,5212]",
      "dest": "identifier: require [5204,5211]"
    },
    {
      "src": ">: > [27548,27549]",
      "dest": ">: > [27547,27548]"
    },
    {
      "src": "address: address [26377,26384]",
      "dest": "address: address [26376,26383]"
    },
    {
      "src": "if_statement [28212,28386]",
      "dest": "if_statement [28211,28416]"
    },
    {
      "src": "function_body [23711,23748]",
      "dest": "function_body [23710,23747]"
    },
    {
      "src": "(: ( [29047,29048]",
      "dest": "(: ( [28709,28710]"
    },
    {
      "src": "}: } [15841,15842]",
      "dest": "}: } [15840,15841]"
    },
    {
      "src": "identifier: data [3658,3662]",
      "dest": "identifier: data [3657,3661]"
    },
    {
      "src": "identifier: require [7076,7083]",
      "dest": "identifier: require [7075,7082]"
    },
    {
      "src": "identifier: require [2549,2556]",
      "dest": "identifier: require [2548,2555]"
    },
    {
      "src": ",: , [20117,20118]",
      "dest": ",: , [20116,20117]"
    },
    {
      "src": "false [17096,17101]",
      "dest": "false [17095,17100]"
    },
    {
      "src": "identifier: success [28275,28282]",
      "dest": "identifier: success [28274,28281]"
    },
    {
      "src": "uint256: uint256 [25949,25956]",
      "dest": "uint256: uint256 [25948,25955]"
    },
    {
      "src": "identifier: _initializing [11619,11632]",
      "dest": "identifier: _initializing [11618,11631]"
    },
    {
      "src": "variable_declaration_statement [28269,28323]",
      "dest": "variable_declaration_statement [28268,28322]"
    },
    {
      "src": "returns: returns [7620,7627]",
      "dest": "returns: returns [7619,7626]"
    },
    {
      "src": ",: , [16991,16992]",
      "dest": ",: , [16990,16991]"
    },
    {
      "src": "primitive_type [28418,28425]",
      "dest": "primitive_type [28448,28455]"
    },
    {
      "src": "address: address [26438,26445]",
      "dest": "address: address [26437,26444]"
    },
    {
      "src": "): ) [28254,28255]",
      "dest": "): ) [28253,28254]"
    },
    {
      "src": "external: external [23674,23682]",
      "dest": "external: external [23673,23681]"
    },
    {
      "src": "function_body [28443,28526]",
      "dest": "function_body [28473,28556]"
    },
    {
      "src": "identifier: onlyOwner [29828,29837]",
      "dest": "identifier: onlyOwner [29490,29499]"
    },
    {
      "src": "call_argument [27438,27443]",
      "dest": "call_argument [27437,27442]"
    },
    {
      "src": "}: } [6345,6346]",
      "dest": "}: } [6344,6345]"
    },
    {
      "src": "uint256: uint256 [26234,26241]",
      "dest": "uint256: uint256 [26233,26240]"
    },
    {
      "src": "call_argument [20833,20845]",
      "dest": "call_argument [20832,20844]"
    },
    {
      "src": "function: function [27166,27174]",
      "dest": "function: function [27165,27173]"
    },
    {
      "src": "identifier: index [24797,24802]",
      "dest": "identifier: index [24796,24801]"
    },
    {
      "src": "}: } [24862,24863]",
      "dest": "}: } [24861,24862]"
    },
    {
      "src": "): ) [17453,17454]",
      "dest": "): ) [17452,17453]"
    },
    {
      "src": "primitive_type [25847,25862]",
      "dest": "primitive_type [25846,25861]"
    },
    {
      "src": "call_argument [24334,24354]",
      "dest": "call_argument [24333,24353]"
    },
    {
      "src": "interface_declaration [24976,25762]",
      "dest": "interface_declaration [24975,25761]"
    },
    {
      "src": "return_type_definition [25213,25226]",
      "dest": "return_type_definition [25212,25225]"
    },
    {
      "src": "uint256: uint256 [17382,17389]",
      "dest": "uint256: uint256 [17381,17388]"
    },
    {
      "src": "identifier: _initializing [13331,13344]",
      "dest": "identifier: _initializing [13330,13343]"
    },
    {
      "src": "]: ] [28511,28512]",
      "dest": "]: ] [28541,28542]"
    },
    {
      "src": "): ) [28482,28483]",
      "dest": "): ) [28512,28513]"
    },
    {
      "src": "if: if [27366,27368]",
      "dest": "if: if [27365,27367]"
    },
    {
      "src": ".: . [28122,28123]",
      "dest": ".: . [28121,28122]"
    },
    {
      "src": "struct_field_assignment [5350,5362]",
      "dest": "struct_field_assignment [5349,5361]"
    },
    {
      "src": "expression_statement [27676,27721]",
      "dest": "expression_statement [27675,27720]"
    },
    {
      "src": "expression_statement [23207,23256]",
      "dest": "expression_statement [23206,23255]"
    },
    {
      "src": "identifier: msg [24900,24903]",
      "dest": "identifier: msg [24899,24902]"
    },
    {
      "src": "(: ( [7628,7629]",
      "dest": "(: ( [7627,7628]"
    },
    {
      "src": "pure: pure [17784,17788]",
      "dest": "pure: pure [17783,17787]"
    },
    {
      "src": "): ) [24253,24254]",
      "dest": "): ) [24252,24253]"
    },
    {
      "src": "primitive_type [6758,6764]",
      "dest": "primitive_type [6757,6763]"
    },
    {
      "src": "\": \" [14339,14340]",
      "dest": "\": \" [14338,14339]"
    },
    {
      "src": "identifier: vault [26446,26451]",
      "dest": "identifier: vault [26445,26450]"
    },
    {
      "src": "state_mutability [15673,15677]",
      "dest": "state_mutability [15672,15676]"
    },
    {
      "src": "call_argument [28175,28180]",
      "dest": "call_argument [28174,28179]"
    },
    {
      "src": "type_name [25874,25881]",
      "dest": "type_name [25873,25880]"
    },
    {
      "src": "parameter [25478,25490]",
      "dest": "parameter [25477,25489]"
    },
    {
      "src": "identifier: recipient [2652,2661]",
      "dest": "identifier: recipient [2651,2660]"
    },
    {
      "src": "primitive_type [26294,26301]",
      "dest": "primitive_type [26293,26300]"
    },
    {
      "src": "type_name [23357,23362]",
      "dest": "type_name [23356,23361]"
    },
    {
      "src": "}: } [23635,23636]",
      "dest": "}: } [23634,23635]"
    },
    {
      "src": "primitive_type [24085,24092]",
      "dest": "primitive_type [24084,24091]"
    },
    {
      "src": "comment: /// @solidity memory-safe-assembly [8068,8102]",
      "dest": "comment: /// @solidity memory-safe-assembly [8067,8101]"
    },
    {
      "src": "state_mutability [16371,16375]",
      "dest": "state_mutability [16370,16374]"
    },
    {
      "src": "type_name [25949,25956]",
      "dest": "type_name [25948,25955]"
    },
    {
      "src": "identifier: feesBuffer [27130,27140]",
      "dest": "identifier: feesBuffer [27129,27139]"
    },
    {
      "src": "=: = [13312,13313]",
      "dest": "=: = [13311,13312]"
    },
    {
      "src": "(: ( [24292,24293]",
      "dest": "(: ( [24291,24292]"
    },
    {
      "src": "primitive_type [25323,25330]",
      "dest": "primitive_type [25322,25329]"
    },
    {
      "src": "primitive_type [5297,5301]",
      "dest": "primitive_type [5296,5300]"
    },
    {
      "src": "parameter [24099,24111]",
      "dest": "parameter [24098,24110]"
    },
    {
      "src": "bool: bool [26570,26574]",
      "dest": "bool: bool [26569,26573]"
    },
    {
      "src": "{: { [5739,5740]",
      "dest": "{: { [5738,5739]"
    },
    {
      "src": "identifier: b [20111,20112]",
      "dest": "identifier: b [20110,20111]"
    },
    {
      "src": "call_argument [13691,13704]",
      "dest": "call_argument [13690,13703]"
    },
    {
      "src": "uint256: uint256 [5107,5114]",
      "dest": "uint256: uint256 [5106,5113]"
    },
    {
      "src": ",: , [15651,15652]",
      "dest": ",: , [15650,15651]"
    },
    {
      "src": "pure: pure [20046,20050]",
      "dest": "pure: pure [20045,20049]"
    },
    {
      "src": "function_body [20069,20175]",
      "dest": "function_body [20068,20174]"
    },
    {
      "src": "(: ( [23342,23343]",
      "dest": "(: ( [23341,23342]"
    },
    {
      "src": "identifier: success [29199,29206]",
      "dest": "identifier: success [28861,28868]"
    },
    {
      "src": "): ) [6176,6177]",
      "dest": "): ) [6175,6176]"
    },
    {
      "src": "type_name [6057,6064]",
      "dest": "type_name [6056,6063]"
    },
    {
      "src": "identifier: vault [29399,29404]",
      "dest": "identifier: vault [29061,29066]"
    },
    {
      "src": "array_access [29636,29662]",
      "dest": "array_access [29298,29324]"
    },
    {
      "src": "parameter [29914,29931]",
      "dest": "parameter [29576,29593]"
    },
    {
      "src": "uint: uint [25036,25040]",
      "dest": "uint: uint [25035,25039]"
    },
    {
      "src": "}: } [22254,22255]",
      "dest": "}: } [22253,22254]"
    },
    {
      "src": "identifier: from [25318,25322]",
      "dest": "identifier: from [25317,25321]"
    },
    {
      "src": "memory: memory [4584,4590]",
      "dest": "memory: memory [4583,4589]"
    },
    {
      "src": "=: = [27711,27712]",
      "dest": "=: = [27710,27711]"
    },
    {
      "src": "variable_declaration [6203,6226]",
      "dest": "variable_declaration [6202,6225]"
    },
    {
      "src": "identifier: b [17137,17138]",
      "dest": "identifier: b [17136,17137]"
    },
    {
      "src": "event: event [26363,26368]",
      "dest": "event: event [26362,26367]"
    },
    {
      "src": "identifier: dencrease [25589,25598]",
      "dest": "identifier: dencrease [25588,25597]"
    },
    {
      "src": "block_statement [28255,28386]",
      "dest": "block_statement [28254,28416]"
    },
    {
      "src": "comment: /**      * @dev Returns the highest version that has been initialized. See {reinitializer}.      */ [14541,14640]",
      "dest": "comment: /**      * @dev Returns the highest version that has been initialized. See {reinitializer}.      */ [14540,14639]"
    },
    {
      "src": "=: = [11927,11928]",
      "dest": "=: = [11926,11927]"
    },
    {
      "src": "function: function [16324,16332]",
      "dest": "function: function [16323,16331]"
    },
    {
      "src": "struct_member [26789,26807]",
      "dest": "struct_member [26788,26806]"
    },
    {
      "src": "(: ( [5046,5047]",
      "dest": "(: ( [5045,5046]"
    },
    {
      "src": "call_expression [23060,23197]",
      "dest": "call_expression [23059,23196]"
    },
    {
      "src": "parameter [5107,5120]",
      "dest": "parameter [5106,5119]"
    },
    {
      "src": "}: } [7255,7256]",
      "dest": "}: } [7254,7255]"
    },
    {
      "src": "identifier: IERC20 [27494,27500]",
      "dest": "identifier: IERC20 [27493,27499]"
    },
    {
      "src": "internal: internal [17775,17783]",
      "dest": "internal: internal [17774,17782]"
    },
    {
      "src": "(: ( [13197,13198]",
      "dest": "(: ( [13196,13197]"
    },
    {
      "src": "type_name [16385,16389]",
      "dest": "type_name [16384,16388]"
    },
    {
      "src": "address: address [27379,27386]",
      "dest": "address: address [27378,27385]"
    },
    {
      "src": "primitive_type [26789,26796]",
      "dest": "primitive_type [26788,26795]"
    },
    {
      "src": "(: ( [2681,2682]",
      "dest": "(: ( [2680,2681]"
    },
    {
      "src": "function_definition [20659,20889]",
      "dest": "function_definition [20658,20888]"
    },
    {
      "src": "call_argument [2565,2569]",
      "dest": "call_argument [2564,2568]"
    },
    {
      "src": "uint256: uint256 [18859,18866]",
      "dest": "uint256: uint256 [18858,18865]"
    },
    {
      "src": "primitive_type [16351,16358]",
      "dest": "primitive_type [16350,16357]"
    },
    {
      "src": "identifier: require [27888,27895]",
      "dest": "identifier: require [27887,27894]"
    },
    {
      "src": "[: [ [29649,29650]",
      "dest": "[: [ [29311,29312]"
    },
    {
      "src": "block_statement [11984,12063]",
      "dest": "block_statement [11983,12062]"
    },
    {
      "src": "type_name [26839,26846]",
      "dest": "type_name [26838,26845]"
    },
    {
      "src": "call_argument [28074,28075]",
      "dest": "call_argument [28073,28074]"
    },
    {
      "src": "identifier: require [14315,14322]",
      "dest": "identifier: require [14314,14321]"
    },
    {
      "src": ".: . [29558,29559]",
      "dest": ".: . [29220,29221]"
    },
    {
      "src": "(: ( [26622,26623]",
      "dest": "(: ( [26621,26622]"
    },
    {
      "src": "identifier: b [18195,18196]",
      "dest": "identifier: b [18194,18195]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [17162,17310]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [17161,17309]"
    },
    {
      "src": "identifier: _msgSender [27625,27635]",
      "dest": "identifier: _msgSender [27624,27634]"
    },
    {
      "src": ",: , [6201,6202]",
      "dest": ",: , [6200,6201]"
    },
    {
      "src": "primitive_type [15653,15660]",
      "dest": "primitive_type [15652,15659]"
    },
    {
      "src": "parameter [15687,15691]",
      "dest": "parameter [15686,15690]"
    },
    {
      "src": "{: { [26686,26687]",
      "dest": "{: { [26685,26686]"
    },
    {
      "src": "return_type_definition [17018,17041]",
      "dest": "return_type_definition [17017,17040]"
    },
    {
      "src": "identifier: encodePacked [23407,23419]",
      "dest": "identifier: encodePacked [23406,23418]"
    },
    {
      "src": "identifier: a [16011,16012]",
      "dest": "identifier: a [16010,16011]"
    },
    {
      "src": "identifier: b [15752,15753]",
      "dest": "identifier: b [15751,15752]"
    },
    {
      "src": "primitive_type [17027,17031]",
      "dest": "primitive_type [17026,17030]"
    },
    {
      "src": "call_expression [20103,20132]",
      "dest": "call_expression [20102,20131]"
    },
    {
      "src": "pure: pure [18151,18155]",
      "dest": "pure: pure [18150,18154]"
    },
    {
      "src": "identifier: b [18867,18868]",
      "dest": "identifier: b [18866,18867]"
    },
    {
      "src": "function: function [25654,25662]",
      "dest": "function: function [25653,25661]"
    },
    {
      "src": "uint256: uint256 [17753,17760]",
      "dest": "uint256: uint256 [17752,17759]"
    },
    {
      "src": "): ) [26685,26686]",
      "dest": "): ) [26684,26685]"
    },
    {
      "src": "identifier: feesCollected [28304,28317]",
      "dest": "identifier: feesCollected [28303,28316]"
    },
    {
      "src": "primitive_type [25949,25956]",
      "dest": "primitive_type [25948,25955]"
    },
    {
      "src": "type_name [21595,21601]",
      "dest": "type_name [21594,21600]"
    },
    {
      "src": "memory: memory [5086,5092]",
      "dest": "memory: memory [5085,5091]"
    },
    {
      "src": "returns: returns [25133,25140]",
      "dest": "returns: returns [25132,25139]"
    },
    {
      "src": "function_definition [29995,30155]",
      "dest": "function_definition [29657,29817]"
    },
    {
      "src": "primitive_type [16385,16389]",
      "dest": "primitive_type [16384,16388]"
    },
    {
      "src": ",: , [25260,25261]",
      "dest": ",: , [25259,25260]"
    },
    {
      "src": "tuple_expression [17475,17488]",
      "dest": "tuple_expression [17474,17487]"
    },
    {
      "src": ",: , [27823,27824]",
      "dest": ",: , [27822,27823]"
    },
    {
      "src": "uint256: uint256 [27183,27190]",
      "dest": "uint256: uint256 [27182,27189]"
    },
    {
      "src": "identifier: b [19416,19417]",
      "dest": "identifier: b [19415,19416]"
    },
    {
      "src": "identifier: b [16157,16158]",
      "dest": "identifier: b [16156,16157]"
    },
    {
      "src": "state_mutability [7615,7619]",
      "dest": "state_mutability [7614,7618]"
    },
    {
      "src": "add: add [24786,24789]",
      "dest": "add: add [24785,24788]"
    },
    {
      "src": "uint256: uint256 [18131,18138]",
      "dest": "uint256: uint256 [18130,18137]"
    },
    {
      "src": "{: { [27874,27875]",
      "dest": "{: { [27873,27874]"
    },
    {
      "src": "(: ( [23909,23910]",
      "dest": "(: ( [23908,23909]"
    },
    {
      "src": "type_name [26453,26459]",
      "dest": "type_name [26452,26458]"
    },
    {
      "src": "identifier: to [25258,25260]",
      "dest": "identifier: to [25257,25259]"
    },
    {
      "src": ",: , [27835,27836]",
      "dest": ",: , [27834,27835]"
    },
    {
      "src": "true: true [15817,15821]",
      "dest": "true: true [15816,15820]"
    },
    {
      "src": "}: } [21758,21759]",
      "dest": "}: } [21757,21758]"
    },
    {
      "src": "returns: returns [25349,25356]",
      "dest": "returns: returns [25348,25355]"
    },
    {
      "src": "parameter [24113,24123]",
      "dest": "parameter [24112,24122]"
    },
    {
      "src": "identifier: errorMessage [8294,8306]",
      "dest": "identifier: errorMessage [8293,8305]"
    },
    {
      "src": "=: = [27141,27142]",
      "dest": "=: = [27140,27141]"
    },
    {
      "src": "/: / [17135,17136]",
      "dest": "/: / [17134,17135]"
    },
    {
      "src": "identifier: require [30067,30074]",
      "dest": "identifier: require [29729,29736]"
    },
    {
      "src": "string: string [26471,26477]",
      "dest": "string: string [26470,26476]"
    },
    {
      "src": "address: address [25668,25675]",
      "dest": "address: address [25667,25674]"
    },
    {
      "src": "identifier: nonces [23088,23094]",
      "dest": "identifier: nonces [23087,23093]"
    },
    {
      "src": "primitive_type [1251,1258]",
      "dest": "primitive_type [1250,1257]"
    },
    {
      "src": "parameter [25568,25572]",
      "dest": "parameter [25567,25571]"
    },
    {
      "src": "type_name [4011,4017]",
      "dest": "type_name [4010,4016]"
    },
    {
      "src": "{: { [6178,6179]",
      "dest": "{: { [6177,6178]"
    },
    {
      "src": "): ) [28472,28473]",
      "dest": "): ) [28502,28503]"
    },
    {
      "src": "using_directive [21905,21932]",
      "dest": "using_directive [21904,21931]"
    },
    {
      "src": "call_argument [29172,29173]",
      "dest": "call_argument [28834,28835]"
    },
    {
      "src": "is: is [25804,25806]",
      "dest": "is: is [25803,25805]"
    },
    {
      "src": "identifier: signer [24397,24403]",
      "dest": "identifier: signer [24396,24402]"
    },
    {
      "src": "comment: // File: contracts/lock. [25765,25789]",
      "dest": "comment: // File: contracts/lock. [25764,25788]"
    },
    {
      "src": "return_type_definition [3588,3610]",
      "dest": "return_type_definition [3587,3609]"
    },
    {
      "src": "\": \" [2771,2772]",
      "dest": "\": \" [2770,2771]"
    },
    {
      "src": "string [29322,29332]",
      "dest": "string [28984,28994]"
    },
    {
      "src": "parameter [25250,25260]",
      "dest": "parameter [25249,25259]"
    },
    {
      "src": "): ) [11747,11748]",
      "dest": "): ) [11746,11747]"
    },
    {
      "src": "(: ( [5774,5775]",
      "dest": "(: ( [5773,5774]"
    },
    {
      "src": "identifier: a [20689,20690]",
      "dest": "identifier: a [20688,20689]"
    },
    {
      "src": "identifier: functionCallWithValue [4093,4114]",
      "dest": "identifier: functionCallWithValue [4092,4113]"
    },
    {
      "src": "(: ( [24333,24334]",
      "dest": "(: ( [24332,24333]"
    },
    {
      "src": "{: { [4657,4658]",
      "dest": "{: { [4656,4657]"
    },
    {
      "src": "identifier: a [21743,21744]",
      "dest": "identifier: a [21742,21743]"
    },
    {
      "src": "type_name [25310,25317]",
      "dest": "type_name [25309,25316]"
    },
    {
      "src": "identifier: prefixed [23828,23836]",
      "dest": "identifier: prefixed [23827,23835]"
    },
    {
      "src": ",: , [13238,13239]",
      "dest": ",: , [13237,13238]"
    },
    {
      "src": "address: address [26219,26226]",
      "dest": "address: address [26218,26225]"
    },
    {
      "src": "address: address [25387,25394]",
      "dest": "address: address [25386,25393]"
    },
    {
      "src": ",: , [27807,27808]",
      "dest": ",: , [27806,27807]"
    },
    {
      "src": "function: function [25580,25588]",
      "dest": "function: function [25579,25587]"
    },
    {
      "src": "event_paramater [26343,26356]",
      "dest": "event_paramater [26342,26355]"
    },
    {
      "src": "state_mutability [16034,16038]",
      "dest": "state_mutability [16033,16037]"
    },
    {
      "src": "(: ( [4114,4115]",
      "dest": "(: ( [4113,4114]"
    },
    {
      "src": "variable_declaration_statement [27465,27517]",
      "dest": "variable_declaration_statement [27464,27516]"
    },
    {
      "src": "uint: uint [25478,25482]",
      "dest": "uint: uint [25477,25481]"
    },
    {
      "src": "identifier: symbol [26350,26356]",
      "dest": "identifier: symbol [26349,26355]"
    },
    {
      "src": "function_body [22152,22255]",
      "dest": "function_body [22151,22254]"
    },
    {
      "src": "identifier: isContract [7084,7094]",
      "dest": "identifier: isContract [7083,7093]"
    },
    {
      "src": "parameter [25642,25646]",
      "dest": "parameter [25641,25645]"
    },
    {
      "src": "uint256: uint256 [24028,24035]",
      "dest": "uint256: uint256 [24027,24034]"
    },
    {
      "src": "(: ( [22119,22120]",
      "dest": "(: ( [22118,22119]"
    },
    {
      "src": "type_name [1251,1258]",
      "dest": "type_name [1250,1257]"
    },
    {
      "src": "[: [ [29662,29663]",
      "dest": "[: [ [29324,29325]"
    },
    {
      "src": "(: ( [2702,2703]",
      "dest": "(: ( [2701,2702]"
    },
    {
      "src": "if: if [15767,15769]",
      "dest": "if: if [15766,15768]"
    },
    {
      "src": "primitive_type [25668,25675]",
      "dest": "primitive_type [25667,25674]"
    },
    {
      "src": "uint256: uint256 [17033,17040]",
      "dest": "uint256: uint256 [17032,17039]"
    },
    {
      "src": "returns: returns [24137,24144]",
      "dest": "returns: returns [24136,24143]"
    },
    {
      "src": "assignment_expression [29474,29513]",
      "dest": "assignment_expression [29136,29175]"
    },
    {
      "src": "{: { [10743,10744]",
      "dest": "{: { [10742,10743]"
    },
    {
      "src": "primitive_type [23357,23362]",
      "dest": "primitive_type [23356,23361]"
    },
    {
      "src": "contract_body [25841,30157]",
      "dest": "contract_body [25840,29819]"
    },
    {
      "src": "parameter [1251,1266]",
      "dest": "parameter [1250,1265]"
    },
    {
      "src": "}: } [16810,16811]",
      "dest": "}: } [16809,16810]"
    },
    {
      "src": "primitive_type [6203,6208]",
      "dest": "primitive_type [6202,6207]"
    },
    {
      "src": "binary_expression [17824,17829]",
      "dest": "binary_expression [17823,17828]"
    },
    {
      "src": "uint256: uint256 [21651,21658]",
      "dest": "uint256: uint256 [21650,21657]"
    },
    {
      "src": "function_definition [3522,3707]",
      "dest": "function_definition [3521,3706]"
    },
    {
      "src": "call_expression [26696,26734]",
      "dest": "call_expression [26695,26733]"
    },
    {
      "src": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [16580,16651]",
      "dest": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [16579,16650]"
    },
    {
      "src": ".: . [23397,23398]",
      "dest": ".: . [23396,23397]"
    },
    {
      "src": ".: . [24200,24201]",
      "dest": ".: . [24199,24200]"
    },
    {
      "src": "uint256: uint256 [16351,16358]",
      "dest": "uint256: uint256 [16350,16357]"
    },
    {
      "src": "modifier_definition [26666,26752]",
      "dest": "modifier_definition [26665,26751]"
    },
    {
      "src": "type_name [18165,18172]",
      "dest": "type_name [18164,18171]"
    },
    {
      "src": "memory: memory [6170,6176]",
      "dest": "memory: memory [6169,6175]"
    },
    {
      "src": "bool: bool [16385,16389]",
      "dest": "bool: bool [16384,16388]"
    },
    {
      "src": "identifier: require [11642,11649]",
      "dest": "identifier: require [11641,11648]"
    },
    {
      "src": "type_name [24146,24150]",
      "dest": "type_name [24145,24149]"
    },
    {
      "src": "}: } [5461,5462]",
      "dest": "}: } [5460,5461]"
    },
    {
      "src": "visibility [14888,14896]",
      "dest": "visibility [14887,14895]"
    },
    {
      "src": "type_name [21651,21658]",
      "dest": "type_name [21650,21657]"
    },
    {
      "src": "): ) [16023,16024]",
      "dest": "): ) [16022,16023]"
    },
    {
      "src": "modifier: modifier [11563,11571]",
      "dest": "modifier: modifier [11562,11570]"
    },
    {
      "src": "bytes: bytes [5725,5730]",
      "dest": "bytes: bytes [5724,5729]"
    },
    {
      "src": "returns: returns [14902,14909]",
      "dest": "returns: returns [14901,14908]"
    },
    {
      "src": "]: ] [27702,27703]",
      "dest": "]: ] [27701,27702]"
    },
    {
      "src": "): ) [28023,28024]",
      "dest": "): ) [28022,28023]"
    },
    {
      "src": "): ) [19417,19418]",
      "dest": "): ) [19416,19417]"
    },
    {
      "src": "array_access [23729,23741]",
      "dest": "array_access [23728,23740]"
    },
    {
      "src": "member_expression [24498,24508]",
      "dest": "member_expression [24497,24507]"
    },
    {
      "src": "internal: internal [16362,16370]",
      "dest": "internal: internal [16361,16369]"
    },
    {
      "src": ".: . [7953,7954]",
      "dest": ".: . [7952,7953]"
    },
    {
      "src": "expression_statement [28102,28129]",
      "dest": "expression_statement [28101,28128]"
    },
    {
      "src": "identifier: tokenName [26332,26341]",
      "dest": "identifier: tokenName [26331,26340]"
    },
    {
      "src": "=: = [12012,12013]",
      "dest": "=: = [12011,12012]"
    },
    {
      "src": "identifier: Lock [25799,25803]",
      "dest": "identifier: Lock [25798,25802]"
    },
    {
      "src": "bytes32: bytes32 [23874,23881]",
      "dest": "bytes32: bytes32 [23873,23880]"
    },
    {
      "src": "identifier: data [5364,5368]",
      "dest": "identifier: data [5363,5367]"
    },
    {
      "src": ".: . [14467,14468]",
      "dest": ".: . [14466,14467]"
    },
    {
      "src": "identifier: value [2667,2672]",
      "dest": "identifier: value [2666,2671]"
    },
    {
      "src": "\": \" [29277,29278]",
      "dest": "\": \" [28939,28940]"
    },
    {
      "src": "): ) [3577,3578]",
      "dest": "): ) [3576,3577]"
    },
    {
      "src": "(: ( [30074,30075]",
      "dest": "(: ( [29736,29737]"
    },
    {
      "src": "\": \" [23161,23162]",
      "dest": "\": \" [23160,23161]"
    },
    {
      "src": "payable: payable [27033,27040]",
      "dest": "payable: payable [27032,27039]"
    },
    {
      "src": "primitive_type [2557,2564]",
      "dest": "primitive_type [2556,2563]"
    },
    {
      "src": "identifier: _newOwner [30038,30047]",
      "dest": "identifier: _newOwner [29700,29709]"
    },
    {
      "src": "pragma: pragma [146,152]",
      "dest": "pragma: pragma [145,151]"
    },
    {
      "src": "identifier: b [19993,19994]",
      "dest": "identifier: b [19992,19993]"
    },
    {
      "src": "type_name [26882,26888]",
      "dest": "type_name [26881,26887]"
    },
    {
      "src": "identifier: data [5696,5700]",
      "dest": "identifier: data [5695,5699]"
    },
    {
      "src": "primitive_type [7801,7806]",
      "dest": "primitive_type [7800,7805]"
    },
    {
      "src": "yul_identifier [24797,24802]",
      "dest": "yul_identifier [24796,24801]"
    },
    {
      "src": "primitive_type [22143,22150]",
      "dest": "primitive_type [22142,22149]"
    },
    {
      "src": "(: ( [25567,25568]",
      "dest": "(: ( [25566,25567]"
    },
    {
      "src": "return: return [21736,21742]",
      "dest": "return: return [21735,21741]"
    },
    {
      "src": "function_body [14709,14745]",
      "dest": "function_body [14708,14744]"
    },
    {
      "src": "(: ( [18462,18463]",
      "dest": "(: ( [18461,18462]"
    },
    {
      "src": "parameter [15653,15662]",
      "dest": "parameter [15652,15661]"
    },
    {
      "src": "type: type [14502,14506]",
      "dest": "type: type [14501,14505]"
    },
    {
      "src": "parameter [18859,18868]",
      "dest": "parameter [18858,18867]"
    },
    {
      "src": "if_statement [7653,7772]",
      "dest": "if_statement [7652,7771]"
    },
    {
      "src": "identifier: Transactions [26934,26946]",
      "dest": "identifier: Transactions [26933,26945]"
    },
    {
      "src": "(: ( [22142,22143]",
      "dest": "(: ( [22141,22142]"
    },
    {
      "src": "identifier: version [13314,13321]",
      "dest": "identifier: version [13313,13320]"
    },
    {
      "src": "address: address [26606,26613]",
      "dest": "address: address [26605,26612]"
    },
    {
      "src": "address: address [21968,21975]",
      "dest": "address: address [21967,21974]"
    },
    {
      "src": "identifier: account [1521,1528]",
      "dest": "identifier: account [1520,1527]"
    },
    {
      "src": "primitive_type [26882,26888]",
      "dest": "primitive_type [26881,26887]"
    },
    {
      "src": "identifier: b [16101,16102]",
      "dest": "identifier: b [16100,16101]"
    },
    {
      "src": "}: } [17498,17499]",
      "dest": "}: } [17497,17498]"
    },
    {
      "src": "identifier: feesBuffer [27981,27991]",
      "dest": "identifier: feesBuffer [27980,27990]"
    },
    {
      "src": "type_name [19985,19992]",
      "dest": "type_name [19984,19991]"
    },
    {
      "src": "parameter [25668,25682]",
      "dest": "parameter [25667,25681]"
    },
    {
      "src": "}: } [2779,2780]",
      "dest": "}: } [2778,2779]"
    },
    {
      "src": "}: } [18202,18203]",
      "dest": "}: } [18201,18202]"
    },
    {
      "src": "identifier: chainID [24227,24234]",
      "dest": "identifier: chainID [24226,24233]"
    },
    {
      "src": "identifier: _amount [27816,27823]",
      "dest": "identifier: _amount [27815,27822]"
    },
    {
      "src": "uint8: uint8 [14702,14707]",
      "dest": "uint8: uint8 [14701,14706]"
    },
    {
      "src": "memory: memory [6765,6771]",
      "dest": "memory: memory [6764,6770]"
    },
    {
      "src": "state_mutability [18879,18883]",
      "dest": "state_mutability [18878,18882]"
    },
    {
      "src": "array_access [29409,29444]",
      "dest": "array_access [29071,29106]"
    },
    {
      "src": "{: { [2666,2667]",
      "dest": "{: { [2665,2666]"
    },
    {
      "src": "identifier: a [20867,20868]",
      "dest": "identifier: a [20866,20867]"
    },
    {
      "src": "call_argument [24227,24234]",
      "dest": "call_argument [24226,24233]"
    },
    {
      "src": "identifier: check [26867,26872]",
      "dest": "identifier: check [26866,26871]"
    },
    {
      "src": "identifier: b [15661,15662]",
      "dest": "identifier: b [15660,15661]"
    },
    {
      "src": "function_body [11586,12069]",
      "dest": "function_body [11585,12068]"
    },
    {
      "src": "if: if [14391,14393]",
      "dest": "if: if [14390,14392]"
    },
    {
      "src": "primitive_type [18474,18481]",
      "dest": "primitive_type [18473,18480]"
    },
    {
      "src": "(: ( [27514,27515]",
      "dest": "(: ( [27513,27514]"
    },
    {
      "src": "user_defined_type [25828,25841]",
      "dest": "user_defined_type [25827,25840]"
    },
    {
      "src": "}: } [11943,11944]",
      "dest": "}: } [11942,11943]"
    },
    {
      "src": "expression_statement [7212,7246]",
      "dest": "expression_statement [7211,7245]"
    },
    {
      "src": "(: ( [2633,2634]",
      "dest": "(: ( [2632,2633]"
    },
    {
      "src": "}: } [29347,29348]",
      "dest": "}: } [29009,29010]"
    },
    {
      "src": "(: ( [4544,4545]",
      "dest": "(: ( [4543,4544]"
    },
    {
      "src": "unary_expression [11704,11749]",
      "dest": "unary_expression [11703,11748]"
    },
    {
      "src": ",: , [29618,29619]",
      "dest": ",: , [29280,29281]"
    },
    {
      "src": "type_name [25182,25189]",
      "dest": "type_name [25181,25188]"
    },
    {
      "src": "(: ( [23034,23035]",
      "dest": "(: ( [23033,23034]"
    },
    {
      "src": "identifier: c [15823,15824]",
      "dest": "identifier: c [15822,15823]"
    },
    {
      "src": "(: ( [28318,28319]",
      "dest": "(: ( [28317,28318]"
    },
    {
      "src": "identifier: this [23392,23396]",
      "dest": "identifier: this [23391,23395]"
    },
    {
      "src": "type_name [27183,27190]",
      "dest": "type_name [27182,27189]"
    },
    {
      "src": "identifier: AddressUpgradeable [247,265]",
      "dest": "identifier: AddressUpgradeable [246,264]"
    },
    {
      "src": "visibility [16025,16033]",
      "dest": "visibility [16024,16032]"
    },
    {
      "src": "identifier: index [24592,24597]",
      "dest": "identifier: index [24591,24596]"
    },
    {
      "src": "identifier: x [29488,29489]",
      "dest": "identifier: x [29150,29151]"
    },
    {
      "src": "address: address [24469,24476]",
      "dest": "address: address [24468,24475]"
    },
    {
      "src": "yul_hex_number: 0xffffffffffffffffffffffffffffffffffffffff [24806,24848]",
      "dest": "yul_hex_number: 0xffffffffffffffffffffffffffffffffffffffff [24805,24847]"
    },
    {
      "src": "bool: bool [17376,17380]",
      "dest": "bool: bool [17375,17379]"
    },
    {
      "src": "): ) [4655,4656]",
      "dest": "): ) [4654,4655]"
    },
    {
      "src": "state_mutability [22129,22133]",
      "dest": "state_mutability [22128,22132]"
    },
    {
      "src": "yul_assignment [24766,24849]",
      "dest": "yul_assignment [24765,24848]"
    },
    {
      "src": ",: , [23107,23108]",
      "dest": ",: , [23106,23107]"
    },
    {
      "src": "identifier: collectedFeesThreshold [27064,27086]",
      "dest": "identifier: collectedFeesThreshold [27063,27085]"
    },
    {
      "src": "(: ( [7942,7943]",
      "dest": "(: ( [7941,7942]"
    },
    {
      "src": "contract: contract [21868,21876]",
      "dest": "contract: contract [21867,21875]"
    },
    {
      "src": "identifier: a [15775,15776]",
      "dest": "identifier: a [15774,15775]"
    },
    {
      "src": "primitive_type [24146,24150]",
      "dest": "primitive_type [24145,24149]"
    },
    {
      "src": "emit: emit [29527,29531]",
      "dest": "emit: emit [29189,29193]"
    },
    {
      "src": ".: . [28185,28186]",
      "dest": ".: . [28184,28185]"
    },
    {
      "src": "\": \" [29331,29332]",
      "dest": "\": \" [28993,28994]"
    },
    {
      "src": "identifier: owner [24006,24011]",
      "dest": "identifier: owner [24005,24010]"
    },
    {
      "src": "number_literal: 0 [17452,17453]",
      "dest": "number_literal: 0 [17451,17452]"
    },
    {
      "src": "returns: returns [18884,18891]",
      "dest": "returns: returns [18883,18890]"
    },
    {
      "src": "{: { [16083,16084]",
      "dest": "{: { [16082,16083]"
    },
    {
      "src": "identifier: ecrecover [24283,24292]",
      "dest": "identifier: ecrecover [24282,24291]"
    },
    {
      "src": "=: = [11866,11867]",
      "dest": "=: = [11865,11866]"
    },
    {
      "src": "function_body [5739,5836]",
      "dest": "function_body [5738,5835]"
    },
    {
      "src": "}: } [17155,17156]",
      "dest": "}: } [17154,17155]"
    },
    {
      "src": "internal: internal [5163,5171]",
      "dest": "internal: internal [5162,5170]"
    },
    {
      "src": "function_body [24152,24411]",
      "dest": "function_body [24151,24410]"
    },
    {
      "src": "event_definition [21938,22046]",
      "dest": "event_definition [21937,22045]"
    },
    {
      "src": "): ) [18868,18869]",
      "dest": "): ) [18867,18868]"
    },
    {
      "src": "(: ( [28471,28472]",
      "dest": "(: ( [28501,28502]"
    },
    {
      "src": "internal: internal [18142,18150]",
      "dest": "internal: internal [18141,18149]"
    },
    {
      "src": "(: ( [3596,3597]",
      "dest": "(: ( [3595,3596]"
    },
    {
      "src": "primitive_type [11735,11742]",
      "dest": "primitive_type [11734,11741]"
    },
    {
      "src": "yul_decimal_number: 32 [8210,8212]",
      "dest": "yul_decimal_number: 32 [8209,8211]"
    },
    {
      "src": "assignment_expression [27676,27720]",
      "dest": "assignment_expression [27675,27719]"
    },
    {
      "src": "variable_declaration_tuple [2633,2649]",
      "dest": "variable_declaration_tuple [2632,2648]"
    },
    {
      "src": "bool: bool [14911,14915]",
      "dest": "bool: bool [14910,14914]"
    },
    {
      "src": "identifier: _msgSender [28161,28171]",
      "dest": "identifier: _msgSender [28160,28170]"
    },
    {
      "src": "identifier: require [13190,13197]",
      "dest": "identifier: require [13189,13196]"
    },
    {
      "src": "modifier_invocation [29941,29950]",
      "dest": "modifier_invocation [29603,29612]"
    },
    {
      "src": "call_argument [11735,11748]",
      "dest": "call_argument [11734,11747]"
    },
    {
      "src": "member_expression [27598,27624]",
      "dest": "member_expression [27597,27623]"
    },
    {
      "src": "): ) [27389,27390]",
      "dest": "): ) [27388,27389]"
    },
    {
      "src": "(: ( [17752,17753]",
      "dest": "(: ( [17751,17752]"
    },
    {
      "src": "{: { [20804,20805]",
      "dest": "{: { [20803,20804]"
    },
    {
      "src": "(: ( [4061,4062]",
      "dest": "(: ( [4060,4061]"
    },
    {
      "src": "if: if [7653,7655]",
      "dest": "if: if [7652,7654]"
    },
    {
      "src": "identifier: multipleToken [29636,29649]",
      "dest": "identifier: multipleToken [29298,29311]"
    },
    {
      "src": "number_literal: 0 [6890,6891]",
      "dest": "number_literal: 0 [6889,6890]"
    },
    {
      "src": "/: / [18921,18922]",
      "dest": "/: / [18920,18921]"
    },
    {
      "src": "call_argument [23584,23601]",
      "dest": "call_argument [23583,23600]"
    },
    {
      "src": "return_type_definition [25075,25097]",
      "dest": "return_type_definition [25074,25096]"
    },
    {
      "src": "identifier: Initializable [25828,25841]",
      "dest": "identifier: Initializable [25827,25840]"
    },
    {
      "src": "call_argument [29322,29332]",
      "dest": "call_argument [28984,28994]"
    },
    {
      "src": "event_paramater [26325,26341]",
      "dest": "event_paramater [26324,26340]"
    },
    {
      "src": "(: ( [20825,20826]",
      "dest": "(: ( [20824,20825]"
    },
    {
      "src": "identifier: b [20157,20158]",
      "dest": "identifier: b [20156,20157]"
    },
    {
      "src": "): ) [28434,28435]",
      "dest": "): ) [28464,28465]"
    },
    {
      "src": "identifier: amount [2674,2680]",
      "dest": "identifier: amount [2673,2679]"
    },
    {
      "src": "memory: memory [5689,5695]",
      "dest": "memory: memory [5688,5694]"
    },
    {
      "src": "{: { [17391,17392]",
      "dest": "{: { [17390,17391]"
    },
    {
      "src": "}: } [28525,28526]",
      "dest": "}: } [28555,28556]"
    },
    {
      "src": "=: = [27492,27493]",
      "dest": "=: = [27491,27492]"
    },
    {
      "src": "}: } [14528,14529]",
      "dest": "}: } [14527,14528]"
    },
    {
      "src": ".: . [23574,23575]",
      "dest": ".: . [23573,23574]"
    },
    {
      "src": "identifier: value [27755,27760]",
      "dest": "identifier: value [27754,27759]"
    },
    {
      "src": "visibility [25124,25132]",
      "dest": "visibility [25123,25131]"
    },
    {
      "src": ",: , [22984,22985]",
      "dest": ",: , [22983,22984]"
    },
    {
      "src": "primitive_type [19985,19992]",
      "dest": "primitive_type [19984,19991]"
    },
    {
      "src": "if_statement [16737,16771]",
      "dest": "if_statement [16736,16770]"
    },
    {
      "src": "string_literal [27992,28023]",
      "dest": "string_literal [27991,28022]"
    },
    {
      "src": "(: ( [29218,29219]",
      "dest": "(: ( [28880,28881]"
    },
    {
      "src": "identifier: b [17486,17487]",
      "dest": "identifier: b [17485,17486]"
    },
    {
      "src": "parameter [24469,24483]",
      "dest": "parameter [24468,24482]"
    },
    {
      "src": "(: ( [19396,19397]",
      "dest": "(: ( [19395,19396]"
    },
    {
      "src": "): ) [25225,25226]",
      "dest": "): ) [25224,25225]"
    },
    {
      "src": "primitive_type [21968,21975]",
      "dest": "primitive_type [21967,21974]"
    },
    {
      "src": "): ) [18515,18516]",
      "dest": "): ) [18514,18515]"
    },
    {
      "src": "binary_expression [21743,21748]",
      "dest": "binary_expression [21742,21747]"
    },
    {
      "src": "=: = [28077,28078]",
      "dest": "=: = [28076,28077]"
    },
    {
      "src": "\": \" [2620,2621]",
      "dest": "\": \" [2619,2620]"
    },
    {
      "src": "(: ( [27967,27968]",
      "dest": "(: ( [27966,27967]"
    },
    {
      "src": "type_name [23660,23667]",
      "dest": "type_name [23659,23666]"
    },
    {
      "src": "identifier: getChainID [23109,23119]",
      "dest": "identifier: getChainID [23108,23118]"
    },
    {
      "src": "function: function [28398,28406]",
      "dest": "function: function [28428,28436]"
    },
    {
      "src": "parameter [30022,30047]",
      "dest": "parameter [29684,29709]"
    },
    {
      "src": "bool: bool [16048,16052]",
      "dest": "bool: bool [16047,16051]"
    },
    {
      "src": "comment: // otherwise we already know that it was a contract [7008,7059]",
      "dest": "comment: // otherwise we already know that it was a contract [7007,7058]"
    },
    {
      "src": "==: == [29314,29316]",
      "dest": "==: == [28976,28978]"
    },
    {
      "src": "yul_identifier [24766,24772]",
      "dest": "yul_identifier [24765,24771]"
    },
    {
      "src": "}: } [29989,29990]",
      "dest": "}: } [29651,29652]"
    },
    {
      "src": "call_expression [27431,27444]",
      "dest": "call_expression [27430,27443]"
    },
    {
      "src": "identifier: target [5775,5781]",
      "dest": "identifier: target [5774,5780]"
    },
    {
      "src": "bytes: bytes [4643,4648]",
      "dest": "bytes: bytes [4642,4647]"
    },
    {
      "src": "binary_expression [2557,2588]",
      "dest": "binary_expression [2556,2587]"
    },
    {
      "src": "expression_statement [24326,24377]",
      "dest": "expression_statement [24325,24376]"
    },
    {
      "src": "type_name [20719,20725]",
      "dest": "type_name [20718,20724]"
    },
    {
      "src": "returns: returns [16376,16383]",
      "dest": "returns: returns [16375,16382]"
    },
    {
      "src": "type_name [10992,10996]",
      "dest": "type_name [10991,10995]"
    },
    {
      "src": "identifier: sigS [24107,24111]",
      "dest": "identifier: sigS [24106,24110]"
    },
    {
      "src": "call_argument [30096,30119]",
      "dest": "call_argument [29758,29781]"
    },
    {
      "src": "and: and [24776,24779]",
      "dest": "and: and [24775,24778]"
    },
    {
      "src": "}: } [30156,30157]",
      "dest": "}: } [29818,29819]"
    },
    {
      "src": "modifier: modifier [13142,13150]",
      "dest": "modifier: modifier [13141,13149]"
    },
    {
      "src": "number_literal: 0 [16123,16124]",
      "dest": "number_literal: 0 [16122,16123]"
    },
    {
      "src": "identifier: decimals [25008,25016]",
      "dest": "identifier: decimals [25007,25015]"
    },
    {
      "src": "(: ( [28417,28418]",
      "dest": "(: ( [28447,28448]"
    },
    {
      "src": "call_expression [27888,27946]",
      "dest": "call_expression [27887,27945]"
    },
    {
      "src": "return: return [5379,5385]",
      "dest": "return: return [5378,5384]"
    },
    {
      "src": "member_expression [1521,1540]",
      "dest": "member_expression [1520,1539]"
    },
    {
      "src": "string: string [25083,25089]",
      "dest": "string: string [25082,25088]"
    },
    {
      "src": "tuple_expression [15785,15795]",
      "dest": "tuple_expression [15784,15794]"
    },
    {
      "src": "): ) [15662,15663]",
      "dest": "): ) [15661,15662]"
    },
    {
      "src": "pragma_directive [15092,15115]",
      "dest": "pragma_directive [15091,15114]"
    },
    {
      "src": "type_name [28925,28937]",
      "dest": "type_name [28587,28599]"
    },
    {
      "src": "type_cast_expression [24512,24525]",
      "dest": "type_cast_expression [24511,24524]"
    },
    {
      "src": "yul_path [8171,8181]",
      "dest": "yul_path [8170,8180]"
    },
    {
      "src": "comment: // mapping(address=> mapping(bool=>bool)) public isfraud; [26120,26177]",
      "dest": "comment: // mapping(address=> mapping(bool=>bool)) public isfraud; [26119,26176]"
    },
    {
      "src": "=: = [24176,24177]",
      "dest": "=: = [24175,24176]"
    },
    {
      "src": "): ) [7760,7761]",
      "dest": "): ) [7759,7760]"
    },
    {
      "src": "identifier: feesBuffer [25998,26008]",
      "dest": "identifier: feesBuffer [25997,26007]"
    },
    {
      "src": "identifier: data [24604,24608]",
      "dest": "identifier: data [24603,24607]"
    },
    {
      "src": "): ) [29007,29008]",
      "dest": "): ) [28669,28670]"
    },
    {
      "src": "identifier: getNonce [23651,23659]",
      "dest": "identifier: getNonce [23650,23658]"
    },
    {
      "src": "identifier: i [29134,29135]",
      "dest": "identifier: i [28796,28797]"
    },
    {
      "src": ",: , [16796,16797]",
      "dest": ",: , [16795,16796]"
    },
    {
      "src": "identifier: errorMessage [6772,6784]",
      "dest": "identifier: errorMessage [6771,6783]"
    },
    {
      "src": "function: function [23819,23827]",
      "dest": "function: function [23818,23826]"
    },
    {
      "src": "}: } [8325,8326]",
      "dest": "}: } [8324,8325]"
    },
    {
      "src": "(: ( [21967,21968]",
      "dest": "(: ( [21966,21967]"
    },
    {
      "src": "memory: memory [4018,4024]",
      "dest": "memory: memory [4017,4023]"
    },
    {
      "src": "call_argument [13706,13751]",
      "dest": "call_argument [13705,13750]"
    },
    {
      "src": "identifier: depositer [26797,26806]",
      "dest": "identifier: depositer [26796,26805]"
    },
    {
      "src": "identifier: returndata [7553,7563]",
      "dest": "identifier: returndata [7552,7562]"
    },
    {
      "src": "parameter [20681,20690]",
      "dest": "parameter [20680,20689]"
    },
    {
      "src": "return_type_definition [25560,25573]",
      "dest": "return_type_definition [25559,25572]"
    },
    {
      "src": ",: , [26408,26409]",
      "dest": ",: , [26407,26408]"
    },
    {
      "src": "parameter [21576,21585]",
      "dest": "parameter [21575,21584]"
    },
    {
      "src": "call_argument [23471,23478]",
      "dest": "call_argument [23470,23477]"
    },
    {
      "src": "(: ( [17126,17127]",
      "dest": "(: ( [17125,17126]"
    },
    {
      "src": "block_statement [16410,16811]",
      "dest": "block_statement [16409,16810]"
    },
    {
      "src": "type_name [16014,16021]",
      "dest": "type_name [16013,16020]"
    },
    {
      "src": "payable: payable [23019,23026]",
      "dest": "payable: payable [23018,23025]"
    },
    {
      "src": "calldata: calldata [28940,28948]",
      "dest": "calldata: calldata [28602,28610]"
    },
    {
      "src": "return_statement [20146,20159]",
      "dest": "return_statement [20145,20158]"
    },
    {
      "src": "memory: memory [4068,4074]",
      "dest": "memory: memory [4067,4073]"
    },
    {
      "src": "primitive_type [15687,15691]",
      "dest": "primitive_type [15686,15690]"
    },
    {
      "src": "uint: uint [25537,25541]",
      "dest": "uint: uint [25536,25540]"
    },
    {
      "src": "call_argument [27795,27807]",
      "dest": "call_argument [27794,27806]"
    },
    {
      "src": "): ) [17351,17352]",
      "dest": "): ) [17350,17351]"
    },
    {
      "src": "number_literal: 1 [11769,11770]",
      "dest": "number_literal: 1 [11768,11769]"
    },
    {
      "src": "call_argument [7748,7760]",
      "dest": "call_argument [7747,7759]"
    },
    {
      "src": "type_name [26862,26866]",
      "dest": "type_name [26861,26865]"
    },
    {
      "src": "uint256: uint256 [18893,18900]",
      "dest": "uint256: uint256 [18892,18899]"
    },
    {
      "src": "identifier: version [11144,11151]",
      "dest": "identifier: version [11143,11150]"
    },
    {
      "src": "yul_function_call [24776,24849]",
      "dest": "yul_function_call [24775,24848]"
    },
    {
      "src": "): ) [5225,5226]",
      "dest": "): ) [5224,5225]"
    },
    {
      "src": "identifier: chainID [24036,24043]",
      "dest": "identifier: chainID [24035,24042]"
    },
    {
      "src": "solidity: solidity [153,161]",
      "dest": "solidity: solidity [152,160]"
    },
    {
      "src": "identifier: _amount [25404,25411]",
      "dest": "identifier: _amount [25403,25410]"
    },
    {
      "src": "identifier: tryDiv [16975,16981]",
      "dest": "identifier: tryDiv [16974,16980]"
    },
    {
      "src": "string_literal [29277,29279]",
      "dest": "string_literal [28939,28941]"
    },
    {
      "src": "emit_statement [14485,14519]",
      "dest": "emit_statement [14484,14518]"
    },
    {
      "src": ".: . [29268,29269]",
      "dest": ".: . [28930,28931]"
    },
    {
      "src": "modifier_invocation [29828,29837]",
      "dest": "modifier_invocation [29490,29499]"
    },
    {
      "src": "call_expression [27960,28024]",
      "dest": "call_expression [27959,28023]"
    },
    {
      "src": "visibility [25991,25997]",
      "dest": "visibility [25990,25996]"
    },
    {
      "src": "return_statement [14719,14739]",
      "dest": "return_statement [14718,14738]"
    },
    {
      "src": "primitive_type [17753,17760]",
      "dest": "primitive_type [17752,17759]"
    },
    {
      "src": "returns: returns [18156,18163]",
      "dest": "returns: returns [18155,18162]"
    },
    {
      "src": "visibility [4044,4052]",
      "dest": "visibility [4043,4051]"
    },
    {
      "src": ",: , [11771,11772]",
      "dest": ",: , [11770,11771]"
    },
    {
      "src": "identifier: token [29588,29593]",
      "dest": "identifier: token [29250,29255]"
    },
    {
      "src": "{: { [24527,24528]",
      "dest": "{: { [24526,24527]"
    },
    {
      "src": ",: , [5070,5071]",
      "dest": ",: , [5069,5070]"
    },
    {
      "src": "): ) [28957,28958]",
      "dest": "): ) [28619,28620]"
    },
    {
      "src": "assignment_expression [11913,11933]",
      "dest": "assignment_expression [11912,11932]"
    },
    {
      "src": "identifier: _initialized [13216,13228]",
      "dest": "identifier: _initialized [13215,13227]"
    },
    {
      "src": "): ) [26636,26637]",
      "dest": "): ) [26635,26636]"
    },
    {
      "src": ",: , [8225,8226]",
      "dest": ",: , [8224,8225]"
    },
    {
      "src": "virtual: virtual [24453,24460]",
      "dest": "virtual: virtual [24452,24459]"
    },
    {
      "src": "||: || [11700,11702]",
      "dest": "||: || [11699,11701]"
    },
    {
      "src": "true [17476,17480]",
      "dest": "true [17475,17479]"
    },
    {
      "src": "type_name [7573,7579]",
      "dest": "type_name [7572,7578]"
    },
    {
      "src": "returns: returns [20766,20773]",
      "dest": "returns: returns [20765,20772]"
    },
    {
      "src": "call_argument [23392,23396]",
      "dest": "call_argument [23391,23395]"
    },
    {
      "src": "primitive_type [27200,27207]",
      "dest": "primitive_type [27199,27206]"
    },
    {
      "src": "binary_expression [27370,27389]",
      "dest": "binary_expression [27369,27388]"
    },
    {
      "src": "[: [ [29500,29501]",
      "dest": "[: [ [29162,29163]"
    },
    {
      "src": "public: public [25882,25888]",
      "dest": "public: public [25881,25887]"
    },
    {
      "src": "}: } [24410,24411]",
      "dest": "}: } [24409,24410]"
    },
    {
      "src": "type_name [16391,16398]",
      "dest": "type_name [16390,16397]"
    },
    {
      "src": "identifier: target [6687,6693]",
      "dest": "identifier: target [6686,6692]"
    },
    {
      "src": "identifier: sub [19953,19956]",
      "dest": "identifier: sub [19952,19955]"
    },
    {
      "src": "pure: pure [21637,21641]",
      "dest": "pure: pure [21636,21640]"
    },
    {
      "src": "type_name [23696,23703]",
      "dest": "type_name [23695,23702]"
    },
    {
      "src": "primitive_type [22911,22918]",
      "dest": "primitive_type [22910,22917]"
    },
    {
      "src": "identifier: MetaTransactionExecuted [23526,23549]",
      "dest": "identifier: MetaTransactionExecuted [23525,23548]"
    },
    {
      "src": "assignment_expression [13372,13393]",
      "dest": "assignment_expression [13371,13392]"
    },
    {
      "src": "(: ( [25220,25221]",
      "dest": "(: ( [25219,25220]"
    },
    {
      "src": "\": \" [13750,13751]",
      "dest": "\": \" [13749,13750]"
    },
    {
      "src": "}: } [17835,17836]",
      "dest": "}: } [17834,17835]"
    },
    {
      "src": "identifier: token [27370,27375]",
      "dest": "identifier: token [27369,27374]"
    },
    {
      "src": "pragma_directive [24951,24975]",
      "dest": "pragma_directive [24950,24974]"
    },
    {
      "src": ",: , [3656,3657]",
      "dest": ",: , [3655,3656]"
    },
    {
      "src": "yul_path [24766,24772]",
      "dest": "yul_path [24765,24771]"
    },
    {
      "src": "identifier: user [23668,23672]",
      "dest": "identifier: user [23667,23671]"
    },
    {
      "src": "visibility [14288,14296]",
      "dest": "visibility [14287,14295]"
    },
    {
      "src": "primitive_type [3597,3602]",
      "dest": "primitive_type [3596,3601]"
    },
    {
      "src": "identifier: this [11743,11747]",
      "dest": "identifier: this [11742,11746]"
    },
    {
      "src": "}: } [26927,26928]",
      "dest": "}: } [26926,26927]"
    },
    {
      "src": "number_literal: 5000000000 [27143,27153]",
      "dest": "number_literal: 5000000000 [27142,27152]"
    },
    {
      "src": ".: . [6879,6880]",
      "dest": ".: . [6878,6879]"
    },
    {
      "src": "memory: memory [7833,7839]",
      "dest": "memory: memory [7832,7838]"
    },
    {
      "src": "type_name [7629,7634]",
      "dest": "type_name [7628,7633]"
    },
    {
      "src": "(: ( [14701,14702]",
      "dest": "(: ( [14700,14701]"
    },
    {
      "src": "identifier: userAddress [23214,23225]",
      "dest": "identifier: userAddress [23213,23224]"
    },
    {
      "src": "emit: emit [28143,28147]",
      "dest": "emit: emit [28142,28146]"
    },
    {
      "src": "identifier: sigR [24093,24097]",
      "dest": "identifier: sigR [24092,24096]"
    },
    {
      "src": "{: { [6893,6894]",
      "dest": "{: { [6892,6893]"
    },
    {
      "src": "type_name [21989,22004]",
      "dest": "type_name [21988,22003]"
    },
    {
      "src": "returns: returns [17789,17796]",
      "dest": "returns: returns [17788,17795]"
    },
    {
      "src": "block_statement [21670,21759]",
      "dest": "block_statement [21669,21758]"
    },
    {
      "src": "): ) [23581,23582]",
      "dest": "): ) [23580,23581]"
    },
    {
      "src": "identifier: token [29438,29443]",
      "dest": "identifier: token [29100,29105]"
    },
    {
      "src": "call_expression [27795,27807]",
      "dest": "call_expression [27794,27806]"
    },
    {
      "src": "type_name [7518,7522]",
      "dest": "type_name [7517,7521]"
    },
    {
      "src": "identifier: sender [24766,24772]",
      "dest": "identifier: sender [24765,24771]"
    },
    {
      "src": "number_literal: 0 [7963,7964]",
      "dest": "number_literal: 0 [7962,7963]"
    },
    {
      "src": "binary_expression [27538,27560]",
      "dest": "binary_expression [27537,27559]"
    },
    {
      "src": "payable: payable [27224,27231]",
      "dest": "payable: payable [27223,27230]"
    },
    {
      "src": "identifier: verify [23068,23074]",
      "dest": "identifier: verify [23067,23073]"
    },
    {
      "src": "type_name [25729,25733]",
      "dest": "type_name [25728,25732]"
    },
    {
      "src": "parameter [5667,5681]",
      "dest": "parameter [5666,5680]"
    },
    {
      "src": "(: ( [26200,26201]",
      "dest": "(: ( [26199,26200]"
    },
    {
      "src": "call_argument [21702,21707]",
      "dest": "call_argument [21701,21706]"
    },
    {
      "src": "for: for [29043,29046]",
      "dest": "for: for [28705,28708]"
    },
    {
      "src": "member_expression [23384,23402]",
      "dest": "member_expression [23383,23401]"
    },
    {
      "src": "(: ( [5296,5297]",
      "dest": "(: ( [5295,5296]"
    },
    {
      "src": "return_type_definition [16376,16399]",
      "dest": "return_type_definition [16375,16398]"
    },
    {
      "src": ",: , [3974,3975]",
      "dest": ",: , [3973,3974]"
    },
    {
      "src": "function: function [25429,25437]",
      "dest": "function: function [25428,25436]"
    },
    {
      "src": "identifier: a [18856,18857]",
      "dest": "identifier: a [18855,18856]"
    },
    {
      "src": "internal: internal [17353,17361]",
      "dest": "internal: internal [17352,17360]"
    },
    {
      "src": "address: address [26276,26283]",
      "dest": "address: address [26275,26282]"
    },
    {
      "src": "mload: mload [24780,24785]",
      "dest": "mload: mload [24779,24784]"
    },
    {
      "src": "external: external [25199,25207]",
      "dest": "external: external [25198,25206]"
    },
    {
      "src": "type_name [18463,18470]",
      "dest": "type_name [18462,18469]"
    },
    {
      "src": "(: ( [27182,27183]",
      "dest": "(: ( [27181,27182]"
    },
    {
      "src": "identifier: feeReceiver [25889,25900]",
      "dest": "identifier: feeReceiver [25888,25899]"
    },
    {
      "src": "identifier: data [5783,5787]",
      "dest": "identifier: data [5782,5786]"
    },
    {
      "src": "assignment_expression [28493,28519]",
      "dest": "assignment_expression [28523,28549]"
    },
    {
      "src": "call_expression [2549,2622]",
      "dest": "call_expression [2548,2621]"
    },
    {
      "src": "state_mutability [24448,24452]",
      "dest": "state_mutability [24447,24451]"
    },
    {
      "src": ",: , [27637,27638]",
      "dest": ",: , [27636,27637]"
    },
    {
      "src": "): ) [28191,28192]",
      "dest": "): ) [28190,28191]"
    },
    {
      "src": "parameter [2514,2528]",
      "dest": "parameter [2513,2527]"
    },
    {
      "src": "view: view [25208,25212]",
      "dest": "view: view [25207,25211]"
    },
    {
      "src": "view: view [14688,14692]",
      "dest": "view: view [14687,14691]"
    },
    {
      "src": "visibility [18870,18878]",
      "dest": "visibility [18869,18877]"
    },
    {
      "src": "identifier: owner [30131,30136]",
      "dest": "identifier: owner [29793,29798]"
    },
    {
      "src": "(: ( [29913,29914]",
      "dest": "(: ( [29575,29576]"
    },
    {
      "src": "pure: pure [18494,18498]",
      "dest": "pure: pure [18493,18497]"
    },
    {
      "src": "identifier: Initialized [12038,12049]",
      "dest": "identifier: Initialized [12037,12048]"
    },
    {
      "src": "call_argument [29586,29593]",
      "dest": "call_argument [29248,29255]"
    },
    {
      "src": ".: . [2570,2571]",
      "dest": ".: . [2569,2570]"
    },
    {
      "src": "identifier: i [29083,29084]",
      "dest": "identifier: i [28745,28746]"
    },
    {
      "src": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      *      * [IMPORTANT]      * ====      * You shouldn't rely on `isContract` to protect against flash loan attacks!      *      * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets      * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract      * constructor.      * ====      */ [272,1226]",
      "dest": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      *      * [IMPORTANT]      * ====      * You shouldn't rely on `isContract` to protect against flash loan attacks!      *      * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets      * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract      * constructor.      * ====      */ [271,1225]"
    },
    {
      "src": "number_literal: 1 [12050,12051]",
      "dest": "number_literal: 1 [12049,12050]"
    },
    {
      "src": "address: address [5667,5674]",
      "dest": "address: address [5666,5673]"
    },
    {
      "src": "return_statement [17437,17455]",
      "dest": "return_statement [17436,17454]"
    },
    {
      "src": "): ) [26995,26996]",
      "dest": "): ) [26994,26995]"
    },
    {
      "src": ",: , [24043,24044]",
      "dest": ",: , [24042,24043]"
    },
    {
      "src": ".: . [28082,28083]",
      "dest": ".: . [28081,28082]"
    },
    {
      "src": ",: , [17131,17132]",
      "dest": ",: , [17130,17131]"
    },
    {
      "src": "primitive_type [27183,27190]",
      "dest": "primitive_type [27182,27189]"
    },
    {
      "src": "identifier: from [25459,25463]",
      "dest": "identifier: from [25458,25462]"
    },
    {
      "src": "identifier: feesCollected [27734,27747]",
      "dest": "identifier: feesCollected [27733,27746]"
    },
    {
      "src": "address: address [25451,25458]",
      "dest": "address: address [25450,25457]"
    },
    {
      "src": "<: < [27904,27905]",
      "dest": "<: < [27903,27904]"
    },
    {
      "src": "string: string [26325,26331]",
      "dest": "string: string [26324,26330]"
    },
    {
      "src": "identifier: x [29586,29587]",
      "dest": "identifier: x [29248,29249]"
    },
    {
      "src": "primitive_type [25182,25189]",
      "dest": "primitive_type [25181,25188]"
    },
    {
      "src": "identifier: a [19974,19975]",
      "dest": "identifier: a [19973,19974]"
    },
    {
      "src": ",: , [16766,16767]",
      "dest": ",: , [16765,16766]"
    },
    {
      "src": "primitive_type [11138,11143]",
      "dest": "primitive_type [11137,11142]"
    },
    {
      "src": "[: [ [23735,23736]",
      "dest": "[: [ [23734,23735]"
    },
    {
      "src": "true: true [11929,11933]",
      "dest": "true: true [11928,11932]"
    },
    {
      "src": "call_argument [5221,5225]",
      "dest": "call_argument [5220,5224]"
    },
    {
      "src": "call_argument [5421,5428]",
      "dest": "call_argument [5420,5427]"
    },
    {
      "src": "primitive_type [26219,26226]",
      "dest": "primitive_type [26218,26225]"
    },
    {
      "src": "emit: emit [27775,27779]",
      "dest": "emit: emit [27774,27778]"
    },
    {
      "src": "identifier: tokensName [27418,27428]",
      "dest": "identifier: tokensName [27417,27427]"
    },
    {
      "src": "): ) [13751,13752]",
      "dest": "): ) [13750,13751]"
    },
    {
      "src": "else: else [7193,7197]",
      "dest": "else: else [7192,7196]"
    },
    {
      "src": "(: ( [15641,15642]",
      "dest": "(: ( [15640,15641]"
    },
    {
      "src": "): ) [29207,29208]",
      "dest": "): ) [28869,28870]"
    },
    {
      "src": "type_name [25983,25990]",
      "dest": "type_name [25982,25989]"
    },
    {
      "src": "function: function [7784,7792]",
      "dest": "function: function [7783,7791]"
    },
    {
      "src": "]: ] [29434,29435]",
      "dest": "]: ] [29096,29097]"
    },
    {
      "src": "}: } [20168,20169]",
      "dest": "}: } [20167,20168]"
    },
    {
      "src": "(: ( [13670,13671]",
      "dest": "(: ( [13669,13670]"
    },
    {
      "src": "parameter [22143,22150]",
      "dest": "parameter [22142,22149]"
    },
    {
      "src": "call_argument [24293,24297]",
      "dest": "call_argument [24292,24296]"
    },
    {
      "src": "identifier: vault [29691,29696]",
      "dest": "identifier: vault [29353,29358]"
    },
    {
      "src": "(: ( [19956,19957]",
      "dest": "(: ( [19955,19956]"
    },
    {
      "src": "uint: uint [25642,25646]",
      "dest": "uint: uint [25641,25645]"
    },
    {
      "src": "primitive_type [20719,20725]",
      "dest": "primitive_type [20718,20724]"
    },
    {
      "src": "variable_declaration_statement [27404,27452]",
      "dest": "variable_declaration_statement [27403,27451]"
    },
    {
      "src": "assignment_expression [27025,27054]",
      "dest": "assignment_expression [27024,27053]"
    },
    {
      "src": "member_expression [29153,29160]",
      "dest": "member_expression [28815,28822]"
    },
    {
      "src": "identifier: x [29378,29379]",
      "dest": "identifier: x [29040,29041]"
    },
    {
      "src": "identifier: _initializing [14324,14337]",
      "dest": "identifier: _initializing [14323,14336]"
    },
    {
      "src": "]: ] [27709,27710]",
      "dest": "]: ] [27708,27709]"
    },
    {
      "src": "identifier: functionSignature [24058,24075]",
      "dest": "identifier: functionSignature [24057,24074]"
    },
    {
      "src": "primitive_type [15736,15743]",
      "dest": "primitive_type [15735,15742]"
    },
    {
      "src": "if: if [28212,28214]",
      "dest": "if: if [28211,28213]"
    },
    {
      "src": "call_expression [5205,5286]",
      "dest": "call_expression [5204,5285]"
    },
    {
      "src": "identifier: value [5238,5243]",
      "dest": "identifier: value [5237,5242]"
    },
    {
      "src": "uint256: uint256 [15693,15700]",
      "dest": "uint256: uint256 [15692,15699]"
    },
    {
      "src": "function_definition [1231,1551]",
      "dest": "function_definition [1230,1550]"
    },
    {
      "src": "call_argument [2557,2588]",
      "dest": "call_argument [2556,2587]"
    },
    {
      "src": "type_name [24113,24118]",
      "dest": "type_name [24112,24117]"
    },
    {
      "src": "address: address [11735,11742]",
      "dest": "address: address [11734,11741]"
    },
    {
      "src": "\": \" [14379,14380]",
      "dest": "\": \" [14378,14379]"
    },
    {
      "src": "assignment_expression [28038,28088]",
      "dest": "assignment_expression [28037,28087]"
    },
    {
      "src": "identifier: depositer [29652,29661]",
      "dest": "identifier: depositer [29314,29323]"
    },
    {
      "src": "call_argument [29277,29279]",
      "dest": "call_argument [28939,28941]"
    },
    {
      "src": ",: , [30094,30095]",
      "dest": ",: , [29756,29757]"
    },
    {
      "src": "address: address [25847,25854]",
      "dest": "address: address [25846,25853]"
    },
    {
      "src": "identifier: MetaTransactionExecuted [21944,21967]",
      "dest": "identifier: MetaTransactionExecuted [21943,21966]"
    },
    {
      "src": "unary_expression [14323,14337]",
      "dest": "unary_expression [14322,14336]"
    },
    {
      "src": "expression_statement [27130,27154]",
      "dest": "expression_statement [27129,27153]"
    },
    {
      "src": "identifier: a [16348,16349]",
      "dest": "identifier: a [16347,16348]"
    },
    {
      "src": "identifier: functionStaticCall [6029,6047]",
      "dest": "identifier: functionStaticCall [6028,6046]"
    },
    {
      "src": "block_statement [29088,29776]",
      "dest": "block_statement [28750,29438]"
    },
    {
      "src": "[: [ [29422,29423]",
      "dest": "[: [ [29084,29085]"
    },
    {
      "src": "identifier: symbol [26915,26921]",
      "dest": "identifier: symbol [26914,26920]"
    },
    {
      "src": "type_name [27200,27207]",
      "dest": "type_name [27199,27206]"
    },
    {
      "src": "number_literal: 1 [11868,11869]",
      "dest": "number_literal: 1 [11867,11868]"
    },
    {
      "src": "return: return [22239,22245]",
      "dest": "return: return [22238,22244]"
    },
    {
      "src": "primitive_type [4554,4561]",
      "dest": "primitive_type [4553,4560]"
    },
    {
      "src": "identifier: length [24609,24615]",
      "dest": "identifier: length [24608,24614]"
    },
    {
      "src": "comment: // of the constructor execution. [1472,1504]",
      "dest": "comment: // of the constructor execution. [1471,1503]"
    },
    {
      "src": "primitive_type [26201,26208]",
      "dest": "primitive_type [26200,26207]"
    },
    {
      "src": "string [2590,2621]",
      "dest": "string [2589,2620]"
    },
    {
      "src": "identifier: isTopLevelCall [11664,11678]",
      "dest": "identifier: isTopLevelCall [11663,11677]"
    },
    {
      "src": "primitive_type [25568,25572]",
      "dest": "primitive_type [25567,25571]"
    },
    {
      "src": "[: [ [29133,29134]",
      "dest": "[: [ [28795,28796]"
    },
    {
      "src": "function: function [25507,25515]",
      "dest": "function: function [25506,25514]"
    },
    {
      "src": "binary_expression [29153,29174]",
      "dest": "binary_expression [28815,28836]"
    },
    {
      "src": "(: ( [27051,27052]",
      "dest": "(: ( [27050,27051]"
    },
    {
      "src": "event_definition [26182,26250]",
      "dest": "event_definition [26181,26249]"
    },
    {
      "src": "call_argument [24236,24253]",
      "dest": "call_argument [24235,24252]"
    },
    {
      "src": "(: ( [25035,25036]",
      "dest": "(: ( [25034,25035]"
    },
    {
      "src": "uint256: uint256 [21557,21564]",
      "dest": "uint256: uint256 [21556,21563]"
    },
    {
      "src": "primitive_type [6081,6086]",
      "dest": "primitive_type [6080,6085]"
    },
    {
      "src": "call_argument [24311,24315]",
      "dest": "call_argument [24310,24314]"
    },
    {
      "src": "block_statement [6851,7192]",
      "dest": "block_statement [6850,7191]"
    },
    {
      "src": "identifier: data [6248,6252]",
      "dest": "identifier: data [6247,6251]"
    },
    {
      "src": "identifier: _revert [7728,7735]",
      "dest": "identifier: _revert [7727,7734]"
    },
    {
      "src": "memory: memory [3990,3996]",
      "dest": "memory: memory [3989,3995]"
    },
    {
      "src": "assignment_expression [27064,27107]",
      "dest": "assignment_expression [27063,27106]"
    },
    {
      "src": "identifier: trySub [15996,16002]",
      "dest": "identifier: trySub [15995,16001]"
    },
    {
      "src": "function_definition [16966,17156]",
      "dest": "function_definition [16965,17155]"
    },
    {
      "src": "expression_statement [5205,5287]",
      "dest": "expression_statement [5204,5286]"
    },
    {
      "src": "block_statement [24879,24921]",
      "dest": "block_statement [24878,24920]"
    },
    {
      "src": "bytes32: bytes32 [22972,22979]",
      "dest": "bytes32: bytes32 [22971,22978]"
    },
    {
      "src": "if: if [6838,6840]",
      "dest": "if: if [6837,6839]"
    },
    {
      "src": "visibility [6141,6149]",
      "dest": "visibility [6140,6148]"
    },
    {
      "src": "(: ( [24213,24214]",
      "dest": "(: ( [24212,24213]"
    },
    {
      "src": "meta_type_expression [14410,14421]",
      "dest": "meta_type_expression [14409,14420]"
    },
    {
      "src": "bytes: bytes [5181,5186]",
      "dest": "bytes: bytes [5180,5185]"
    },
    {
      "src": "primitive_type [25642,25646]",
      "dest": "primitive_type [25641,25645]"
    },
    {
      "src": "function: function [22100,22108]",
      "dest": "function: function [22099,22107]"
    },
    {
      "src": ",: , [24309,24310]",
      "dest": ",: , [24308,24309]"
    },
    {
      "src": ">: > [1541,1542]",
      "dest": ">: > [1540,1541]"
    },
    {
      "src": "{: { [5195,5196]",
      "dest": "{: { [5194,5195]"
    },
    {
      "src": "call_argument [7232,7244]",
      "dest": "call_argument [7231,7243]"
    },
    {
      "src": ",: , [5120,5121]",
      "dest": ",: , [5119,5120]"
    },
    {
      "src": "memory: memory [27411,27417]",
      "dest": "memory: memory [27410,27416]"
    },
    {
      "src": "state_variable_declaration [25906,25944]",
      "dest": "state_variable_declaration [25905,25943]"
    },
    {
      "src": "): ) [28321,28322]",
      "dest": "): ) [28320,28321]"
    },
    {
      "src": ",: , [19994,19995]",
      "dest": ",: , [19993,19994]"
    },
    {
      "src": "assignment_expression [23207,23255]",
      "dest": "assignment_expression [23206,23254]"
    },
    {
      "src": "parameter [23035,23047]",
      "dest": "parameter [23034,23046]"
    },
    {
      "src": "parameter [28418,28434]",
      "dest": "parameter [28448,28464]"
    },
    {
      "src": "block_statement [20079,20169]",
      "dest": "block_statement [20078,20168]"
    },
    {
      "src": "expression_statement [27598,27663]",
      "dest": "expression_statement [27597,27662]"
    },
    {
      "src": "identifier: _initializing [11005,11018]",
      "dest": "identifier: _initializing [11004,11017]"
    },
    {
      "src": "assembly: assembly [22182,22190]",
      "dest": "assembly: assembly [22181,22189]"
    },
    {
      "src": "): ) [24150,24151]",
      "dest": "): ) [24149,24150]"
    },
    {
      "src": "function: function [14256,14264]",
      "dest": "function: function [14255,14263]"
    },
    {
      "src": "identifier: sigV [23006,23010]",
      "dest": "identifier: sigV [23005,23009]"
    },
    {
      "src": "identifier: success [29306,29313]",
      "dest": "identifier: success [28968,28975]"
    },
    {
      "src": "type_name [19966,19973]",
      "dest": "type_name [19965,19972]"
    },
    {
      "src": "function: function [25233,25241]",
      "dest": "function: function [25232,25240]"
    },
    {
      "src": "primitive_type [26632,26636]",
      "dest": "primitive_type [26631,26635]"
    },
    {
      "src": "bool: bool [1291,1295]",
      "dest": "bool: bool [1290,1294]"
    },
    {
      "src": "variable_declaration [15736,15745]",
      "dest": "variable_declaration [15735,15744]"
    },
    {
      "src": "parameter [15642,15651]",
      "dest": "parameter [15641,15650]"
    },
    {
      "src": "]: ] [29265,29266]",
      "dest": "]: ] [28927,28928]"
    },
    {
      "src": "library: library [15467,15474]",
      "dest": "library: library [15466,15473]"
    },
    {
      "src": "string_literal [4717,4760]",
      "dest": "string_literal [4716,4759]"
    },
    {
      "src": "identifier: staticcall [6237,6247]",
      "dest": "identifier: staticcall [6236,6246]"
    },
    {
      "src": "\": \" [27561,27562]",
      "dest": "\": \" [27560,27561]"
    },
    {
      "src": "bool: bool [26862,26866]",
      "dest": "bool: bool [26861,26865]"
    },
    {
      "src": "identifier: token [27501,27506]",
      "dest": "identifier: token [27500,27505]"
    },
    {
      "src": "parameter [19985,19994]",
      "dest": "parameter [19984,19993]"
    },
    {
      "src": "expression_statement [30067,30121]",
      "dest": "expression_statement [29729,29783]"
    },
    {
      "src": "): ) [20782,20783]",
      "dest": "): ) [20781,20782]"
    },
    {
      "src": "call_argument [27654,27661]",
      "dest": "call_argument [27653,27660]"
    },
    {
      "src": "): ) [17389,17390]",
      "dest": "): ) [17388,17389]"
    },
    {
      "src": "type_name [26201,26208]",
      "dest": "type_name [26200,26207]"
    },
    {
      "src": "call_expression [23229,23255]",
      "dest": "call_expression [23228,23254]"
    },
    {
      "src": "): ) [25572,25573]",
      "dest": "): ) [25571,25572]"
    },
    {
      "src": "external: external [25625,25633]",
      "dest": "external: external [25624,25632]"
    },
    {
      "src": "visibility [26997,27003]",
      "dest": "visibility [26996,27002]"
    },
    {
      "src": "identifier: msg [28182,28185]",
      "dest": "identifier: msg [28181,28184]"
    },
    {
      "src": "identifier: getChainID [22109,22119]",
      "dest": "identifier: getChainID [22108,22118]"
    },
    {
      "src": "type_name [23874,23881]",
      "dest": "type_name [23873,23880]"
    },
    {
      "src": "identifier: keccak256 [23900,23909]",
      "dest": "identifier: keccak256 [23899,23908]"
    },
    {
      "src": "): ) [5161,5162]",
      "dest": "): ) [5160,5161]"
    },
    {
      "src": ",: , [26451,26452]",
      "dest": ",: , [26450,26451]"
    },
    {
      "src": "type_name [16993,17000]",
      "dest": "type_name [16992,16999]"
    },
    {
      "src": "memory: memory [6209,6215]",
      "dest": "memory: memory [6208,6214]"
    },
    {
      "src": ",: , [21566,21567]",
      "dest": ",: , [21565,21566]"
    },
    {
      "src": "type_name [25387,25394]",
      "dest": "type_name [25386,25393]"
    },
    {
      "src": "): ) [24375,24376]",
      "dest": "): ) [24374,24375]"
    },
    {
      "src": "{: { [25841,25842]",
      "dest": "{: { [25840,25841]"
    },
    {
      "src": "\": \" [28320,28321]",
      "dest": "\": \" [28319,28320]"
    },
    {
      "src": "identifier: symbol [26478,26484]",
      "dest": "identifier: symbol [26477,26483]"
    },
    {
      "src": "bytes: bytes [23357,23362]",
      "dest": "bytes: bytes [23356,23361]"
    },
    {
      "src": "type_name [6108,6114]",
      "dest": "type_name [6107,6113]"
    },
    {
      "src": "bytes: bytes [6203,6208]",
      "dest": "bytes: bytes [6202,6207]"
    },
    {
      "src": "visibility [26639,26645]",
      "dest": "visibility [26638,26644]"
    },
    {
      "src": "expression_statement [28453,28484]",
      "dest": "expression_statement [28483,28514]"
    },
    {
      "src": "primitive_type [30022,30037]",
      "dest": "primitive_type [29684,29699]"
    },
    {
      "src": "primitive_type [20060,20067]",
      "dest": "primitive_type [20059,20066]"
    },
    {
      "src": "primitive_type [18120,18127]",
      "dest": "primitive_type [18119,18126]"
    },
    {
      "src": "state_mutability [6800,6804]",
      "dest": "state_mutability [6799,6803]"
    },
    {
      "src": "identifier: target [3552,3558]",
      "dest": "identifier: target [3551,3557]"
    },
    {
      "src": "identifier: depositedToken [27780,27794]",
      "dest": "identifier: depositedToken [27779,27793]"
    },
    {
      "src": "primitive_type [22986,22993]",
      "dest": "primitive_type [22985,22992]"
    },
    {
      "src": "function: function [15987,15995]",
      "dest": "function: function [15986,15994]"
    },
    {
      "src": "return: return [14927,14933]",
      "dest": "return: return [14926,14932]"
    },
    {
      "src": "(: ( [7656,7657]",
      "dest": "(: ( [7655,7656]"
    },
    {
      "src": "identifier: tokensSymbol [27837,27849]",
      "dest": "identifier: tokensSymbol [27836,27848]"
    },
    {
      "src": "call_argument [14502,14517]",
      "dest": "call_argument [14501,14516]"
    },
    {
      "src": "string: string [26453,26459]",
      "dest": "string: string [26452,26458]"
    },
    {
      "src": "type_name [5667,5674]",
      "dest": "type_name [5666,5673]"
    },
    {
      "src": ".: . [2661,2662]",
      "dest": ".: . [2660,2661]"
    },
    {
      "src": "): ) [16799,16800]",
      "dest": "): ) [16798,16799]"
    },
    {
      "src": "(: ( [18164,18165]",
      "dest": "(: ( [18163,18164]"
    },
    {
      "src": "return_type_definition [4634,4656]",
      "dest": "return_type_definition [4633,4655]"
    },
    {
      "src": "call_expression [24326,24376]",
      "dest": "call_expression [24325,24375]"
    },
    {
      "src": "true: true [16147,16151]",
      "dest": "true: true [16146,16150]"
    },
    {
      "src": "primitive_type [26471,26477]",
      "dest": "primitive_type [26470,26476]"
    },
    {
      "src": "): ) [23451,23452]",
      "dest": "): ) [23450,23451]"
    },
    {
      "src": "internal: internal [7606,7614]",
      "dest": "internal: internal [7605,7613]"
    },
    {
      "src": "emit_statement [27775,27851]",
      "dest": "emit_statement [27774,27850]"
    },
    {
      "src": ",: , [24225,24226]",
      "dest": ",: , [24224,24225]"
    },
    {
      "src": "uint256: uint256 [24013,24020]",
      "dest": "uint256: uint256 [24012,24019]"
    },
    {
      "src": "call_argument [4704,4708]",
      "dest": "call_argument [4703,4707]"
    },
    {
      "src": "user_defined_type [29102,29114]",
      "dest": "user_defined_type [28764,28776]"
    },
    {
      "src": "{: { [24638,24639]",
      "dest": "{: { [24637,24638]"
    },
    {
      "src": "block_statement [24527,24873]",
      "dest": "block_statement [24526,24872]"
    },
    {
      "src": "call_expression [2652,2685]",
      "dest": "call_expression [2651,2684]"
    },
    {
      "src": "return_statement [19461,19474]",
      "dest": "return_statement [19460,19473]"
    },
    {
      "src": "\": \" [27582,27583]",
      "dest": "\": \" [27581,27582]"
    },
    {
      "src": "[: [ [28937,28938]",
      "dest": "[: [ [28599,28600]"
    },
    {
      "src": "call_expression [28287,28322]",
      "dest": "call_expression [28286,28321]"
    },
    {
      "src": "expression_statement [27960,28025]",
      "dest": "expression_statement [27959,28024]"
    },
    {
      "src": "identifier: IERC20 [27598,27604]",
      "dest": "identifier: IERC20 [27597,27603]"
    },
    {
      "src": "bytes32: bytes32 [23837,23844]",
      "dest": "bytes32: bytes32 [23836,23843]"
    },
    {
      "src": "number_literal: 1 [29172,29173]",
      "dest": "number_literal: 1 [28834,28835]"
    },
    {
      "src": ",: , [5440,5441]",
      "dest": ",: , [5439,5440]"
    },
    {
      "src": "identifier: token [29155,29160]",
      "dest": "identifier: token [28817,28822]"
    },
    {
      "src": "primitive_type [20681,20688]",
      "dest": "primitive_type [20680,20687]"
    },
    {
      "src": "primitive_type [26395,26402]",
      "dest": "primitive_type [26394,26401]"
    },
    {
      "src": "function: function [3929,3937]",
      "dest": "function: function [3928,3936]"
    },
    {
      "src": ".: . [29690,29691]",
      "dest": ".: . [29352,29353]"
    },
    {
      "src": "boolean_literal [15786,15791]",
      "dest": "boolean_literal [15785,15790]"
    },
    {
      "src": "address: address [25250,25257]",
      "dest": "address: address [25249,25256]"
    },
    {
      "src": "identifier: _ [11953,11954]",
      "dest": "identifier: _ [11952,11953]"
    },
    {
      "src": "call_argument [2682,2684]",
      "dest": "call_argument [2681,2683]"
    },
    {
      "src": "type_name [17764,17771]",
      "dest": "type_name [17763,17770]"
    },
    {
      "src": ",: , [29671,29672]",
      "dest": ",: , [29333,29334]"
    },
    {
      "src": ",: , [15791,15792]",
      "dest": ",: , [15790,15791]"
    },
    {
      "src": "primitive_type [26325,26331]",
      "dest": "primitive_type [26324,26330]"
    },
    {
      "src": "interface: interface [24976,24985]",
      "dest": "interface: interface [24975,24984]"
    },
    {
      "src": "state_mutability [5711,5715]",
      "dest": "state_mutability [5710,5714]"
    },
    {
      "src": "assignment_expression [11853,11869]",
      "dest": "assignment_expression [11852,11868]"
    },
    {
      "src": "identifier: _initialized [13299,13311]",
      "dest": "identifier: _initialized [13298,13310]"
    },
    {
      "src": "identifier: functionSignature [22945,22962]",
      "dest": "identifier: functionSignature [22944,22961]"
    },
    {
      "src": "member_expression [1521,1533]",
      "dest": "member_expression [1520,1532]"
    },
    {
      "src": "(: ( [16002,16003]",
      "dest": "(: ( [16001,16002]"
    },
    {
      "src": "function_body [27015,27160]",
      "dest": "function_body [27014,27159]"
    },
    {
      "src": ",: , [16121,16122]",
      "dest": ",: , [16120,16121]"
    },
    {
      "src": "{: { [14709,14710]",
      "dest": "{: { [14708,14709]"
    },
    {
      "src": "uint256: uint256 [15736,15743]",
      "dest": "uint256: uint256 [15735,15742]"
    },
    {
      "src": "\": \" [11832,11833]",
      "dest": "\": \" [11831,11832]"
    },
    {
      "src": "): ) [16106,16107]",
      "dest": "): ) [16105,16106]"
    },
    {
      "src": "type_name [18120,18127]",
      "dest": "type_name [18119,18126]"
    },
    {
      "src": "primitive_type [16706,16713]",
      "dest": "primitive_type [16705,16712]"
    },
    {
      "src": "function_definition [15626,15842]",
      "dest": "function_definition [15625,15841]"
    },
    {
      "src": "function: function [29890,29898]",
      "dest": "function: function [29552,29560]"
    },
    {
      "src": "call_expression [3628,3700]",
      "dest": "call_expression [3627,3699]"
    },
    {
      "src": "function_definition [25233,25284]",
      "dest": "function_definition [25232,25283]"
    },
    {
      "src": "(: ( [24186,24187]",
      "dest": "(: ( [24185,24186]"
    },
    {
      "src": ":=: := [22208,22210]",
      "dest": ":=: := [22207,22209]"
    },
    {
      "src": "function_definition [14645,14745]",
      "dest": "function_definition [14644,14744]"
    },
    {
      "src": "string_literal [28319,28321]",
      "dest": "string_literal [28318,28320]"
    },
    {
      "src": "primitive_type [26908,26914]",
      "dest": "primitive_type [26907,26913]"
    },
    {
      "src": "string_literal [23927,23961]",
      "dest": "string_literal [23926,23960]"
    },
    {
      "src": "{: { [11899,11900]",
      "dest": "{: { [11898,11899]"
    },
    {
      "src": "identifier: b [16022,16023]",
      "dest": "identifier: b [16021,16022]"
    },
    {
      "src": "): ) [25741,25742]",
      "dest": "): ) [25740,25741]"
    },
    {
      "src": "type_name [27404,27410]",
      "dest": "type_name [27403,27409]"
    },
    {
      "src": "function_definition [25106,25156]",
      "dest": "function_definition [25105,25155]"
    },
    {
      "src": "identifier: verifyCallResultFromTarget [5386,5412]",
      "dest": "identifier: verifyCallResultFromTarget [5385,5411]"
    },
    {
      "src": "identifier: success [23348,23355]",
      "dest": "identifier: success [23347,23354]"
    },
    {
      "src": "variable_declaration_tuple [29193,29208]",
      "dest": "variable_declaration_tuple [28855,28870]"
    },
    {
      "src": "): ) [13671,13672]",
      "dest": "): ) [13670,13671]"
    },
    {
      "src": "identifier: a [17133,17134]",
      "dest": "identifier: a [17132,17133]"
    },
    {
      "src": "): ) [21658,21659]",
      "dest": "): ) [21657,21658]"
    },
    {
      "src": "call_argument [27041,27053]",
      "dest": "call_argument [27040,27052]"
    },
    {
      "src": "identifier: value [28186,28191]",
      "dest": "identifier: value [28185,28190]"
    },
    {
      "src": "identifier: c [15771,15772]",
      "dest": "identifier: c [15770,15771]"
    },
    {
      "src": "identifier: sub [18116,18119]",
      "dest": "identifier: sub [18115,18118]"
    },
    {
      "src": "memory: memory [20726,20732]",
      "dest": "memory: memory [20725,20731]"
    },
    {
      "src": "primitive_type [24512,24519]",
      "dest": "primitive_type [24511,24518]"
    },
    {
      "src": "identifier: errorMessage [4025,4037]",
      "dest": "identifier: errorMessage [4024,4036]"
    },
    {
      "src": "expression_statement [27064,27108]",
      "dest": "expression_statement [27063,27107]"
    },
    {
      "src": "call_expression [23403,23451]",
      "dest": "call_expression [23402,23450]"
    },
    {
      "src": "): ) [25096,25097]",
      "dest": "): ) [25095,25096]"
    },
    {
      "src": "identifier: nonce [23704,23709]",
      "dest": "identifier: nonce [23703,23708]"
    },
    {
      "src": "identifier: data [4704,4708]",
      "dest": "identifier: data [4703,4707]"
    },
    {
      "src": "identifier: id [22246,22248]",
      "dest": "identifier: id [22245,22247]"
    },
    {
      "src": "): ) [22219,22220]",
      "dest": "): ) [22218,22219]"
    },
    {
      "src": "(: ( [3950,3951]",
      "dest": "(: ( [3949,3950]"
    },
    {
      "src": "true [16684,16688]",
      "dest": "true [16683,16687]"
    },
    {
      "src": "): ) [24524,24525]",
      "dest": "): ) [24523,24524]"
    },
    {
      "src": "binary_expression [6869,6891]",
      "dest": "binary_expression [6868,6890]"
    },
    {
      "src": "identifier: x [29557,29558]",
      "dest": "identifier: x [29219,29220]"
    },
    {
      "src": "identifier: msg [26711,26714]",
      "dest": "identifier: msg [26710,26713]"
    },
    {
      "src": "type_name [17342,17349]",
      "dest": "type_name [17341,17348]"
    },
    {
      "src": "parameter [16340,16349]",
      "dest": "parameter [16339,16348]"
    },
    {
      "src": "primitive_type [7629,7634]",
      "dest": "primitive_type [7628,7633]"
    },
    {
      "src": "address: address [26839,26846]",
      "dest": "address: address [26838,26845]"
    },
    {
      "src": "identifier: userAddress [21976,21987]",
      "dest": "identifier: userAddress [21975,21986]"
    },
    {
      "src": "type_name [17798,17805]",
      "dest": "type_name [17797,17804]"
    },
    {
      "src": "return: return [17088,17094]",
      "dest": "return: return [17087,17093]"
    },
    {
      "src": "call_argument [23148,23152]",
      "dest": "call_argument [23147,23151]"
    },
    {
      "src": "type_name [22986,22993]",
      "dest": "type_name [22985,22992]"
    },
    {
      "src": "primitive_type [25399,25403]",
      "dest": "primitive_type [25398,25402]"
    },
    {
      "src": "uint256: uint256 [16014,16021]",
      "dest": "uint256: uint256 [16013,16020]"
    },
    {
      "src": "comment: //0.01 ether [27109,27121]",
      "dest": "comment: //0.01 ether [27108,27120]"
    },
    {
      "src": "return_statement [16108,16126]",
      "dest": "return_statement [16107,16125]"
    },
    {
      "src": "primitive_type [26438,26445]",
      "dest": "primitive_type [26437,26444]"
    },
    {
      "src": "call_expression [13683,13752]",
      "dest": "call_expression [13682,13751]"
    },
    {
      "src": "type_name [21968,21975]",
      "dest": "type_name [21967,21974]"
    },
    {
      "src": "solidity_version: 0.8.0 [21859,21864]",
      "dest": "solidity_version: 0.8.0 [21858,21863]"
    },
    {
      "src": "parameter [4554,4568]",
      "dest": "parameter [4553,4567]"
    },
    {
      "src": "(: ( [23074,23075]",
      "dest": "(: ( [23073,23074]"
    },
    {
      "src": "(: ( [15686,15687]",
      "dest": "(: ( [15685,15686]"
    },
    {
      "src": "(: ( [22058,22059]",
      "dest": "(: ( [22057,22058]"
    },
    {
      "src": "false: false [16116,16121]",
      "dest": "false: false [16115,16120]"
    },
    {
      "src": "number_literal: 1 [28074,28075]",
      "dest": "number_literal: 1 [28073,28074]"
    },
    {
      "src": "variable_declaration_statement [24266,24317]",
      "dest": "variable_declaration_statement [24265,24316]"
    },
    {
      "src": "binary_expression [15748,15753]",
      "dest": "binary_expression [15747,15752]"
    },
    {
      "src": "string [5245,5285]",
      "dest": "string [5244,5284]"
    },
    {
      "src": "identifier: returndata [7943,7953]",
      "dest": "identifier: returndata [7942,7952]"
    },
    {
      "src": "return_statement [16139,16160]",
      "dest": "return_statement [16138,16159]"
    },
    {
      "src": "assembly: assembly [8115,8123]",
      "dest": "assembly: assembly [8114,8122]"
    },
    {
      "src": "visibility [17353,17361]",
      "dest": "visibility [17352,17360]"
    },
    {
      "src": "(: ( [28160,28161]",
      "dest": "(: ( [28159,28160]"
    },
    {
      "src": ",: , [29725,29726]",
      "dest": ",: , [29387,29388]"
    },
    {
      "src": "return_statement [16676,16693]",
      "dest": "return_statement [16675,16692]"
    },
    {
      "src": "function_body [17042,17156]",
      "dest": "function_body [17041,17155]"
    },
    {
      "src": ",: , [27814,27815]",
      "dest": ",: , [27813,27814]"
    },
    {
      "src": "identifier: success [6842,6849]",
      "dest": "identifier: success [6841,6848]"
    },
    {
      "src": "identifier: returndata [7171,7181]",
      "dest": "identifier: returndata [7170,7180]"
    },
    {
      "src": "!: ! [11618,11619]",
      "dest": "!: ! [11617,11618]"
    },
    {
      "src": "type_name [26294,26301]",
      "dest": "type_name [26293,26300]"
    },
    {
      "src": "yul_variable_declaration [8142,8182]",
      "dest": "yul_variable_declaration [8141,8181]"
    },
    {
      "src": "): ) [8181,8182]",
      "dest": "): ) [8180,8181]"
    },
    {
      "src": "identifier: nonces [22087,22093]",
      "dest": "identifier: nonces [22086,22092]"
    },
    {
      "src": "function: function [25106,25114]",
      "dest": "function: function [25105,25113]"
    },
    {
      "src": "public: public [28436,28442]",
      "dest": "public: public [28466,28472]"
    },
    {
      "src": "type_name [26410,26414]",
      "dest": "type_name [26409,26413]"
    },
    {
      "src": "identifier: value [4613,4618]",
      "dest": "identifier: value [4612,4617]"
    },
    {
      "src": "primitive_type [25387,25394]",
      "dest": "primitive_type [25386,25393]"
    },
    {
      "src": "type_name [14911,14915]",
      "dest": "type_name [14910,14914]"
    },
    {
      "src": "call_expression [2695,2773]",
      "dest": "call_expression [2694,2772]"
    },
    {
      "src": "type_cast_expression [24344,24354]",
      "dest": "type_cast_expression [24343,24353]"
    },
    {
      "src": "identifier: sender [23575,23581]",
      "dest": "identifier: sender [23574,23580]"
    },
    {
      "src": "identifier: _initialized [10877,10889]",
      "dest": "identifier: _initialized [10876,10888]"
    },
    {
      "src": ",: , [4702,4703]",
      "dest": ",: , [4701,4702]"
    },
    {
      "src": "update_expression [29083,29086]",
      "dest": "update_expression [28745,28748]"
    },
    {
      "src": "(: ( [23873,23874]",
      "dest": "(: ( [23872,23873]"
    },
    {
      "src": "member_expression [27431,27449]",
      "dest": "member_expression [27430,27448]"
    },
    {
      "src": "function_body [19451,19480]",
      "dest": "function_body [19450,19479]"
    },
    {
      "src": "identifier: errorMessage [21709,21721]",
      "dest": "identifier: errorMessage [21708,21720]"
    },
    {
      "src": "{: { [18517,18518]",
      "dest": "{: { [18516,18517]"
    },
    {
      "src": "}: } [15835,15836]",
      "dest": "}: } [15834,15835]"
    },
    {
      "src": "(: ( [6813,6814]",
      "dest": "(: ( [6812,6813]"
    },
    {
      "src": "uint256: uint256 [18508,18515]",
      "dest": "uint256: uint256 [18507,18514]"
    },
    {
      "src": "identifier: signer [24334,24340]",
      "dest": "identifier: signer [24333,24339]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [15848,15982]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [15847,15981]"
    },
    {
      "src": "identifier: value [29233,29238]",
      "dest": "identifier: value [28895,28900]"
    },
    {
      "src": "identifier: _amount [25616,25623]",
      "dest": "identifier: _amount [25615,25622]"
    },
    {
      "src": "{: { [7643,7644]",
      "dest": "{: { [7642,7643]"
    },
    {
      "src": "true [17127,17131]",
      "dest": "true [17126,17130]"
    },
    {
      "src": "assembly_statement [22182,22230]",
      "dest": "assembly_statement [22181,22229]"
    },
    {
      "src": "identifier: _initialized [14441,14453]",
      "dest": "identifier: _initialized [14440,14452]"
    },
    {
      "src": "(: ( [13419,13420]",
      "dest": "(: ( [13418,13419]"
    },
    {
      "src": "visibility [22122,22128]",
      "dest": "visibility [22121,22127]"
    },
    {
      "src": "address: address [4554,4561]",
      "dest": "address: address [4553,4560]"
    },
    {
      "src": "state_mutability [23019,23026]",
      "dest": "state_mutability [23018,23025]"
    },
    {
      "src": "parameter [22911,22930]",
      "dest": "parameter [22910,22929]"
    },
    {
      "src": "bytes: bytes [5311,5316]",
      "dest": "bytes: bytes [5310,5315]"
    },
    {
      "src": "identifier: require [28453,28460]",
      "dest": "identifier: require [28483,28490]"
    },
    {
      "src": "call_argument [4129,4130]",
      "dest": "call_argument [4128,4129]"
    },
    {
      "src": "identifier: errorMessage [20119,20131]",
      "dest": "identifier: errorMessage [20118,20130]"
    },
    {
      "src": "member_expression [29557,29568]",
      "dest": "member_expression [29219,29230]"
    },
    {
      "src": "primitive_type [26276,26283]",
      "dest": "primitive_type [26275,26282]"
    },
    {
      "src": "variable_declaration [27465,27491]",
      "dest": "variable_declaration [27464,27490]"
    },
    {
      "src": "identifier: vault [26824,26829]",
      "dest": "identifier: vault [26823,26828]"
    },
    {
      "src": "identifier: abi [24197,24200]",
      "dest": "identifier: abi [24196,24199]"
    },
    {
      "src": "type_name [26438,26445]",
      "dest": "type_name [26437,26444]"
    },
    {
      "src": "return_type_definition [22134,22151]",
      "dest": "return_type_definition [22133,22150]"
    },
    {
      "src": "): ) [29445,29446]",
      "dest": "): ) [29107,29108]"
    },
    {
      "src": "(: ( [14394,14395]",
      "dest": "(: ( [14393,14394]"
    },
    {
      "src": "expression_statement [11953,11955]",
      "dest": "expression_statement [11952,11954]"
    },
    {
      "src": "\": \" [5245,5246]",
      "dest": "\": \" [5244,5245]"
    },
    {
      "src": "(: ( [3543,3544]",
      "dest": "(: ( [3542,3543]"
    },
    {
      "src": "parameter [7540,7563]",
      "dest": "parameter [7539,7562]"
    },
    {
      "src": "false [12014,12019]",
      "dest": "false [12013,12018]"
    },
    {
      "src": "uint: uint [25568,25572]",
      "dest": "uint: uint [25567,25571]"
    },
    {
      "src": "): ) [17040,17041]",
      "dest": "): ) [17039,17040]"
    },
    {
      "src": "&&: && [11750,11752]",
      "dest": "&&: && [11749,11751]"
    },
    {
      "src": "): ) [25361,25362]",
      "dest": "): ) [25360,25361]"
    },
    {
      "src": "uint256: uint256 [16003,16010]",
      "dest": "uint256: uint256 [16002,16009]"
    },
    {
      "src": "returns: returns [25028,25035]",
      "dest": "returns: returns [25027,25034]"
    },
    {
      "src": "comment: /**  * @dev Collection of functions related to the address type  */ [171,238]",
      "dest": "comment: /**  * @dev Collection of functions related to the address type  */ [170,237]"
    },
    {
      "src": "true [16792,16796]",
      "dest": "true [16791,16795]"
    },
    {
      "src": "primitive_type [23874,23881]",
      "dest": "primitive_type [23873,23880]"
    },
    {
      "src": "(: ( [24779,24780]",
      "dest": "(: ( [24778,24779]"
    },
    {
      "src": "=: = [27088,27089]",
      "dest": "=: = [27087,27088]"
    },
    {
      "src": "identifier: this [2565,2569]",
      "dest": "identifier: this [2564,2568]"
    },
    {
      "src": "identifier: verifyCallResultFromTarget [6643,6669]",
      "dest": "identifier: verifyCallResultFromTarget [6642,6668]"
    },
    {
      "src": "type_name [16351,16358]",
      "dest": "type_name [16350,16357]"
    },
    {
      "src": "}: } [7777,7778]",
      "dest": "}: } [7776,7777]"
    },
    {
      "src": "internal: internal [6791,6799]",
      "dest": "internal: internal [6790,6798]"
    },
    {
      "src": "parameter [17376,17380]",
      "dest": "parameter [17375,17379]"
    },
    {
      "src": "unary_expression [13198,13212]",
      "dest": "unary_expression [13197,13211]"
    },
    {
      "src": "identifier: balance [2571,2578]",
      "dest": "identifier: balance [2570,2577]"
    },
    {
      "src": "identifier: _msgSender [28461,28471]",
      "dest": "identifier: _msgSender [28491,28501]"
    },
    {
      "src": "call_argument [5430,5440]",
      "dest": "call_argument [5429,5439]"
    },
    {
      "src": "function_definition [22879,23636]",
      "dest": "function_definition [22878,23635]"
    },
    {
      "src": "(: ( [28460,28461]",
      "dest": "(: ( [28490,28491]"
    },
    {
      "src": "emit: emit [14485,14489]",
      "dest": "emit: emit [14484,14488]"
    },
    {
      "src": "identifier: data [3997,4001]",
      "dest": "identifier: data [3996,4000]"
    },
    {
      "src": "string_literal [26722,26733]",
      "dest": "string_literal [26721,26732]"
    },
    {
      "src": "(: ( [6669,6670]",
      "dest": "(: ( [6668,6669]"
    },
    {
      "src": "identifier: b [18538,18539]",
      "dest": "identifier: b [18537,18538]"
    },
    {
      "src": "uint256: uint256 [18165,18172]",
      "dest": "uint256: uint256 [18164,18171]"
    },
    {
      "src": "return: return [14719,14725]",
      "dest": "return: return [14718,14724]"
    },
    {
      "src": "{: { [21680,21681]",
      "dest": "{: { [21679,21680]"
    },
    {
      "src": "identifier: msg [27751,27754]",
      "dest": "identifier: msg [27750,27753]"
    },
    {
      "src": "identifier: multipleToken [29240,29253]",
      "dest": "identifier: multipleToken [28902,28915]"
    },
    {
      "src": "identifier: userAddress [23095,23106]",
      "dest": "identifier: userAddress [23094,23105]"
    },
    {
      "src": "memory: memory [7580,7586]",
      "dest": "memory: memory [7579,7585]"
    },
    {
      "src": "identifier: b [21747,21748]",
      "dest": "identifier: b [21746,21747]"
    },
    {
      "src": ".: . [26714,26715]",
      "dest": ".: . [26713,26714]"
    },
    {
      "src": "parameter [4643,4655]",
      "dest": "parameter [4642,4654]"
    },
    {
      "src": "parameter [25465,25475]",
      "dest": "parameter [25464,25474]"
    },
    {
      "src": "call_expression [29371,29386]",
      "dest": "call_expression [29033,29048]"
    },
    {
      "src": "event: event [26255,26260]",
      "dest": "event: event [26254,26259]"
    },
    {
      "src": "=: = [11616,11617]",
      "dest": "=: = [11615,11616]"
    },
    {
      "src": "identifier: amount [2582,2588]",
      "dest": "identifier: amount [2581,2587]"
    },
    {
      "src": ",: , [24011,24012]",
      "dest": ",: , [24010,24011]"
    },
    {
      "src": "call_argument [28461,28482]",
      "dest": "call_argument [28491,28512]"
    },
    {
      "src": "identifier: owner [30089,30094]",
      "dest": "identifier: owner [29751,29756]"
    },
    {
      "src": "assembly_statement [24629,24863]",
      "dest": "assembly_statement [24628,24862]"
    },
    {
      "src": "call_argument [24305,24309]",
      "dest": "call_argument [24304,24308]"
    },
    {
      "src": "payable: payable [30030,30037]",
      "dest": "payable: payable [29692,29699]"
    },
    {
      "src": "memory: memory [6731,6737]",
      "dest": "memory: memory [6730,6736]"
    },
    {
      "src": ",: , [6098,6099]",
      "dest": ",: , [6097,6098]"
    },
    {
      "src": "): ) [11897,11898]",
      "dest": "): ) [11896,11897]"
    },
    {
      "src": "identifier: errorMessage [7748,7760]",
      "dest": "identifier: errorMessage [7747,7759]"
    },
    {
      "src": "\": \" [28373,28374]",
      "dest": "\": \" [28372,28373]"
    },
    {
      "src": "primitive_type [21924,21931]",
      "dest": "primitive_type [21923,21930]"
    },
    {
      "src": "identifier: msg [23571,23574]",
      "dest": "identifier: msg [23570,23573]"
    },
    {
      "src": ",: , [27652,27653]",
      "dest": ",: , [27651,27652]"
    },
    {
      "src": "function_body [16400,16817]",
      "dest": "function_body [16399,16816]"
    },
    {
      "src": "parameter [2487,2512]",
      "dest": "parameter [2486,2511]"
    },
    {
      "src": "identifier: _receiver [29922,29931]",
      "dest": "identifier: _receiver [29584,29593]"
    },
    {
      "src": "(: ( [17375,17376]",
      "dest": "(: ( [17374,17375]"
    },
    {
      "src": ",: , [27560,27561]",
      "dest": ",: , [27559,27560]"
    },
    {
      "src": "external: external [25492,25500]",
      "dest": "external: external [25491,25499]"
    },
    {
      "src": "address: address [22911,22918]",
      "dest": "address: address [22910,22917]"
    },
    {
      "src": "external: external [25066,25074]",
      "dest": "external: external [25065,25073]"
    },
    {
      "src": "(: ( [23570,23571]",
      "dest": "(: ( [23569,23570]"
    },
    {
      "src": "identifier: functionCallWithValue [5025,5046]",
      "dest": "identifier: functionCallWithValue [5024,5045]"
    },
    {
      "src": "(: ( [26605,26606]",
      "dest": "(: ( [26604,26605]"
    },
    {
      "src": "}: } [28202,28203]",
      "dest": "}: } [28201,28202]"
    },
    {
      "src": "call_expression [11705,11749]",
      "dest": "call_expression [11704,11748]"
    },
    {
      "src": "(: ( [21547,21548]",
      "dest": "(: ( [21546,21547]"
    },
    {
      "src": "type_name [24028,24035]",
      "dest": "type_name [24027,24034]"
    },
    {
      "src": "<: < [11695,11696]",
      "dest": "<: < [11694,11695]"
    },
    {
      "src": "): ) [23967,23968]",
      "dest": "): ) [23966,23967]"
    },
    {
      "src": "]: ] [28076,28077]",
      "dest": "]: ] [28075,28076]"
    },
    {
      "src": "identifier: errorMessage [20833,20845]",
      "dest": "identifier: errorMessage [20832,20844]"
    },
    {
      "src": "): ) [22077,22078]",
      "dest": "): ) [22076,22077]"
    },
    {
      "src": "{: { [28255,28256]",
      "dest": "{: { [28254,28255]"
    },
    {
      "src": "pure: pure [23860,23864]",
      "dest": "pure: pure [23859,23863]"
    },
    {
      "src": "variable_declaration_statement [24584,24616]",
      "dest": "variable_declaration_statement [24583,24615]"
    },
    {
      "src": "=: = [30137,30138]",
      "dest": "=: = [29799,29800]"
    },
    {
      "src": "binary_expression [15771,15776]",
      "dest": "binary_expression [15770,15775]"
    },
    {
      "src": "): ) [30119,30120]",
      "dest": "): ) [29781,29782]"
    },
    {
      "src": "identifier: x [29436,29437]",
      "dest": "identifier: x [29098,29099]"
    },
    {
      "src": "call_argument [6326,6338]",
      "dest": "call_argument [6325,6337]"
    },
    {
      "src": "identifier: a [18128,18129]",
      "dest": "identifier: a [18127,18128]"
    },
    {
      "src": "return: return [4667,4673]",
      "dest": "return: return [4666,4672]"
    },
    {
      "src": "binary_expression [11753,11770]",
      "dest": "binary_expression [11752,11769]"
    },
    {
      "src": "pure: pure [17362,17366]",
      "dest": "pure: pure [17361,17365]"
    },
    {
      "src": "binary_expression [28461,28482]",
      "dest": "binary_expression [28491,28512]"
    },
    {
      "src": "identifier: b [16722,16723]",
      "dest": "identifier: b [16721,16722]"
    },
    {
      "src": "\": \" [23960,23961]",
      "dest": "\": \" [23959,23960]"
    },
    {
      "src": "(: ( [25450,25451]",
      "dest": "(: ( [25449,25450]"
    },
    {
      "src": "returns: returns [6155,6162]",
      "dest": "returns: returns [6154,6161]"
    },
    {
      "src": ".: . [29651,29652]",
      "dest": ".: . [29313,29314]"
    },
    {
      "src": "bool: bool [15687,15691]",
      "dest": "bool: bool [15686,15690]"
    },
    {
      "src": "internal: internal [18485,18493]",
      "dest": "internal: internal [18484,18492]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers, reverting with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [20181,20654]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers, reverting with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [20180,20653]"
    },
    {
      "src": "\": \" [3698,3699]",
      "dest": "\": \" [3697,3698]"
    },
    {
      "src": "uint256: uint256 [18120,18127]",
      "dest": "uint256: uint256 [18119,18126]"
    },
    {
      "src": "identifier: isTopLevelCall [11601,11615]",
      "dest": "identifier: isTopLevelCall [11600,11614]"
    },
    {
      "src": "type_name [17027,17031]",
      "dest": "type_name [17026,17030]"
    },
    {
      "src": "type_name [7540,7545]",
      "dest": "type_name [7539,7544]"
    },
    {
      "src": "identifier: onlyOwner [29941,29950]",
      "dest": "identifier: onlyOwner [29603,29612]"
    },
    {
      "src": "internal: internal [6141,6149]",
      "dest": "internal: internal [6140,6148]"
    },
    {
      "src": "event_paramater [26438,26451]",
      "dest": "event_paramater [26437,26450]"
    },
    {
      "src": ",: , [22019,22020]",
      "dest": ",: , [22018,22019]"
    },
    {
      "src": "true [29317,29321]",
      "dest": "true [28979,28983]"
    },
    {
      "src": "identifier: multipleToken [29409,29422]",
      "dest": "identifier: multipleToken [29071,29084]"
    },
    {
      "src": "meta_type_expression [14502,14513]",
      "dest": "meta_type_expression [14501,14512]"
    },
    {
      "src": "member_expression [27538,27547]",
      "dest": "member_expression [27537,27546]"
    },
    {
      "src": "): ) [14466,14467]",
      "dest": "): ) [14465,14466]"
    },
    {
      "src": "function: function [22879,22887]",
      "dest": "function: function [22878,22886]"
    },
    {
      "src": "comment: // Load the 32 bytes word from memory with the address on the lower 20 bytes, and mask those. [24656,24749]",
      "dest": "comment: // Load the 32 bytes word from memory with the address on the lower 20 bytes, and mask those. [24655,24748]"
    },
    {
      "src": "return: return [24893,24899]",
      "dest": "return: return [24892,24898]"
    },
    {
      "src": "type_name [1291,1295]",
      "dest": "type_name [1290,1294]"
    },
    {
      "src": "parameter [25537,25549]",
      "dest": "parameter [25536,25548]"
    },
    {
      "src": "call_argument [26704,26721]",
      "dest": "call_argument [26703,26720]"
    },
    {
      "src": "primitive_type [24584,24591]",
      "dest": "primitive_type [24583,24590]"
    },
    {
      "src": "identifier: functionCall [3938,3950]",
      "dest": "identifier: functionCall [3937,3949]"
    },
    {
      "src": "identifier: functionStaticCall [5756,5774]",
      "dest": "identifier: functionStaticCall [5755,5773]"
    },
    {
      "src": "}: } [4767,4768]",
      "dest": "}: } [4766,4767]"
    },
    {
      "src": "comment: // File: basicmetatransaction.sol [21769,21802]",
      "dest": "comment: // File: basicmetatransaction.sol [21768,21801]"
    },
    {
      "src": "(: ( [5724,5725]",
      "dest": "(: ( [5723,5724]"
    },
    {
      "src": "external: external [25124,25132]",
      "dest": "external: external [25123,25131]"
    },
    {
      "src": "{: { [6851,6852]",
      "dest": "{: { [6850,6851]"
    },
    {
      "src": "identifier: a [16668,16669]",
      "dest": "identifier: a [16667,16668]"
    },
    {
      "src": "expression_statement [13190,13290]",
      "dest": "expression_statement [13189,13289]"
    },
    {
      "src": "parameter [23874,23881]",
      "dest": "parameter [23873,23880]"
    },
    {
      "src": "(: ( [14885,14886]",
      "dest": "(: ( [14884,14885]"
    },
    {
      "src": "parameter [18463,18472]",
      "dest": "parameter [18462,18471]"
    },
    {
      "src": "expression_statement [11853,11870]",
      "dest": "expression_statement [11852,11869]"
    },
    {
      "src": "inheritance_specifier [25828,25841]",
      "dest": "inheritance_specifier [25827,25840]"
    },
    {
      "src": "[: [ [27703,27704]",
      "dest": "[: [ [27702,27703]"
    },
    {
      "src": "identifier: a [16745,16746]",
      "dest": "identifier: a [16744,16745]"
    },
    {
      "src": "primitive_type [4605,4612]",
      "dest": "primitive_type [4604,4611]"
    },
    {
      "src": "visibility [6791,6799]",
      "dest": "visibility [6790,6798]"
    },
    {
      "src": "member_expression [30075,30085]",
      "dest": "member_expression [29737,29747]"
    },
    {
      "src": "parameter [27183,27198]",
      "dest": "parameter [27182,27197]"
    },
    {
      "src": ",: , [4127,4128]",
      "dest": ",: , [4126,4127]"
    },
    {
      "src": "solidity_pragma_token [153,168]",
      "dest": "solidity_pragma_token [152,167]"
    },
    {
      "src": "parameter [7629,7641]",
      "dest": "parameter [7628,7640]"
    },
    {
      "src": "uint8: uint8 [24113,24118]",
      "dest": "uint8: uint8 [24112,24117]"
    },
    {
      "src": "false: false [12014,12019]",
      "dest": "false: false [12013,12018]"
    },
    {
      "src": "memory: memory [3566,3572]",
      "dest": "memory: memory [3565,3571]"
    },
    {
      "src": "type_name [20700,20707]",
      "dest": "type_name [20699,20706]"
    },
    {
      "src": "identifier: a [18471,18472]",
      "dest": "identifier: a [18470,18471]"
    },
    {
      "src": "identifier: token [29380,29385]",
      "dest": "identifier: token [29042,29047]"
    },
    {
      "src": "function_definition [28398,28526]",
      "dest": "function_definition [28428,28556]"
    },
    {
      "src": "(: ( [23067,23068]",
      "dest": "(: ( [23066,23067]"
    },
    {
      "src": "identifier: x [29714,29715]",
      "dest": "identifier: x [29376,29377]"
    },
    {
      "src": "identifier: _newOwner [30139,30148]",
      "dest": "identifier: _newOwner [29801,29810]"
    },
    {
      "src": ",: , [24026,24027]",
      "dest": ",: , [24025,24026]"
    },
    {
      "src": "number_literal: 0 [29060,29061]",
      "dest": "number_literal: 0 [28722,28723]"
    },
    {
      "src": "identifier: to [25331,25333]",
      "dest": "identifier: to [25330,25332]"
    },
    {
      "src": "function: function [25163,25171]",
      "dest": "function: function [25162,25170]"
    },
    {
      "src": "(: ( [6047,6048]",
      "dest": "(: ( [6046,6047]"
    },
    {
      "src": "identifier: returnData [23619,23629]",
      "dest": "identifier: returnData [23618,23628]"
    },
    {
      "src": "string_literal [29011,29032]",
      "dest": "string_literal [28673,28694]"
    },
    {
      "src": "binary_expression [24334,24354]",
      "dest": "binary_expression [24333,24353]"
    },
    {
      "src": "type_name [28270,28274]",
      "dest": "type_name [28269,28273]"
    },
    {
      "src": "): ) [24403,24404]",
      "dest": "): ) [24402,24403]"
    },
    {
      "src": "yul_function_call [24780,24804]",
      "dest": "yul_function_call [24779,24803]"
    },
    {
      "src": "identifier: success [5421,5428]",
      "dest": "identifier: success [5420,5427]"
    },
    {
      "src": "function_definition [16324,16817]",
      "dest": "function_definition [16323,16816]"
    },
    {
      "src": "type_name [25478,25482]",
      "dest": "type_name [25477,25481]"
    },
    {
      "src": "identifier: _initialized [14395,14407]",
      "dest": "identifier: _initialized [14394,14406]"
    },
    {
      "src": "call_expression [27690,27702]",
      "dest": "call_expression [27689,27701]"
    },
    {
      "src": "call_argument [7095,7101]",
      "dest": "call_argument [7094,7100]"
    },
    {
      "src": "call_argument [23253,23254]",
      "dest": "call_argument [23252,23253]"
    },
    {
      "src": "return_statement [16784,16801]",
      "dest": "return_statement [16783,16800]"
    },
    {
      "src": "identifier: max [14468,14471]",
      "dest": "identifier: max [14467,14470]"
    },
    {
      "src": "primitive_type [5311,5316]",
      "dest": "primitive_type [5310,5315]"
    },
    {
      "src": "boolean_literal [12014,12019]",
      "dest": "boolean_literal [12013,12018]"
    },
    {
      "src": ".: . [29502,29503]",
      "dest": ".: . [29164,29165]"
    },
    {
      "src": "!: ! [14323,14324]",
      "dest": "!: ! [14322,14323]"
    },
    {
      "src": "call_argument [5213,5243]",
      "dest": "call_argument [5212,5242]"
    },
    {
      "src": "array_access [29474,29500]",
      "dest": "array_access [29136,29162]"
    },
    {
      "src": "identifier: verifyCallResult [7492,7508]",
      "dest": "identifier: verifyCallResult [7491,7507]"
    },
    {
      "src": "function_body [27232,28392]",
      "dest": "function_body [27231,28422]"
    },
    {
      "src": "variable_declaration [23357,23380]",
      "dest": "variable_declaration [23356,23379]"
    },
    {
      "src": ",: , [5787,5788]",
      "dest": ",: , [5786,5787]"
    },
    {
      "src": "call_expression [27494,27516]",
      "dest": "call_expression [27493,27515]"
    },
    {
      "src": "string [13706,13751]",
      "dest": "string [13705,13750]"
    },
    {
      "src": "}: } [21764,21765]",
      "dest": "}: } [21763,21764]"
    },
    {
      "src": "}: } [27159,27160]",
      "dest": "}: } [27158,27159]"
    },
    {
      "src": "call_argument [5783,5787]",
      "dest": "call_argument [5782,5786]"
    },
    {
      "src": "member_expression [2652,2666]",
      "dest": "member_expression [2651,2665]"
    },
    {
      "src": "uint256: uint256 [19985,19992]",
      "dest": "uint256: uint256 [19984,19991]"
    },
    {
      "src": "bytes: bytes [4578,4583]",
      "dest": "bytes: bytes [4577,4582]"
    },
    {
      "src": "bytes: bytes [5683,5688]",
      "dest": "bytes: bytes [5682,5687]"
    },
    {
      "src": "(: ( [29377,29378]",
      "dest": "(: ( [29039,29040]"
    },
    {
      "src": "identifier: _amount [27654,27661]",
      "dest": "identifier: _amount [27653,27660]"
    },
    {
      "src": "function_body [18174,18203]",
      "dest": "function_body [18173,18202]"
    },
    {
      "src": "visibility [22079,22086]",
      "dest": "visibility [22078,22085]"
    },
    {
      "src": "primitive_type [26606,26613]",
      "dest": "primitive_type [26605,26612]"
    },
    {
      "src": "if: if [7939,7941]",
      "dest": "if: if [7938,7940]"
    },
    {
      "src": "visibility [25914,25920]",
      "dest": "visibility [25913,25919]"
    },
    {
      "src": "(: ( [16146,16147]",
      "dest": "(: ( [16145,16146]"
    },
    {
      "src": "type_name [17033,17040]",
      "dest": "type_name [17032,17039]"
    },
    {
      "src": "identifier: txArray [29126,29133]",
      "dest": "identifier: txArray [28788,28795]"
    },
    {
      "src": "type_name [19442,19449]",
      "dest": "type_name [19441,19448]"
    },
    {
      "src": "state_mutability [24132,24136]",
      "dest": "state_mutability [24131,24135]"
    },
    {
      "src": "call_argument [28161,28173]",
      "dest": "call_argument [28160,28172]"
    },
    {
      "src": "expression_statement [13299,13322]",
      "dest": "expression_statement [13298,13321]"
    },
    {
      "src": "identifier: transferFrom [27612,27624]",
      "dest": "identifier: transferFrom [27611,27623]"
    },
    {
      "src": "identifier: success [6194,6201]",
      "dest": "identifier: success [6193,6200]"
    },
    {
      "src": "memory: memory [24547,24553]",
      "dest": "memory: memory [24546,24552]"
    },
    {
      "src": "false [16116,16121]",
      "dest": "false [16115,16120]"
    },
    {
      "src": "parameter [6814,6826]",
      "dest": "parameter [6813,6825]"
    },
    {
      "src": "string: string [21595,21601]",
      "dest": "string: string [21594,21600]"
    },
    {
      "src": "{: { [24992,24993]",
      "dest": "{: { [24991,24992]"
    },
    {
      "src": "parameter [5683,5700]",
      "dest": "parameter [5682,5699]"
    },
    {
      "src": "parameter [17331,17340]",
      "dest": "parameter [17330,17339]"
    },
    {
      "src": "primitive_type [23343,23347]",
      "dest": "primitive_type [23342,23346]"
    },
    {
      "src": "state_mutability [7862,7866]",
      "dest": "state_mutability [7861,7865]"
    },
    {
      "src": "returns: returns [19433,19440]",
      "dest": "returns: returns [19432,19439]"
    },
    {
      "src": "binary_expression [17482,17487]",
      "dest": "binary_expression [17481,17486]"
    },
    {
      "src": "(: ( [28171,28172]",
      "dest": "(: ( [28170,28171]"
    },
    {
      "src": ",: , [14337,14338]",
      "dest": ",: , [14336,14337]"
    },
    {
      "src": "identifier: success [7523,7530]",
      "dest": "identifier: success [7522,7529]"
    },
    {
      "src": "uint256: uint256 [19966,19973]",
      "dest": "uint256: uint256 [19965,19972]"
    },
    {
      "src": "]: ] [23740,23741]",
      "dest": "]: ] [23739,23740]"
    },
    {
      "src": "identifier: sigS [23148,23152]",
      "dest": "identifier: sigS [23147,23151]"
    },
    {
      "src": "string_literal [3667,3699]",
      "dest": "string_literal [3666,3698]"
    },
    {
      "src": "{: { [16420,16421]",
      "dest": "{: { [16419,16420]"
    },
    {
      "src": "primitive_type [21595,21601]",
      "dest": "primitive_type [21594,21600]"
    },
    {
      "src": "returns: returns [4053,4060]",
      "dest": "returns: returns [4052,4059]"
    },
    {
      "src": "]: ] [23225,23226]",
      "dest": "]: ] [23224,23225]"
    },
    {
      "src": "emit_statement [13403,13429]",
      "dest": "emit_statement [13402,13428]"
    },
    {
      "src": "internal: internal [14679,14687]",
      "dest": "internal: internal [14678,14686]"
    },
    {
      "src": "identifier: nonce [24214,24219]",
      "dest": "identifier: nonce [24213,24218]"
    },
    {
      "src": "function: function [19944,19952]",
      "dest": "function: function [19943,19951]"
    },
    {
      "src": "function: function [25050,25058]",
      "dest": "function: function [25049,25057]"
    },
    {
      "src": "call_argument [7084,7102]",
      "dest": "call_argument [7083,7101]"
    },
    {
      "src": ".: . [29398,29399]",
      "dest": ".: . [29060,29061]"
    },
    {
      "src": "returns: returns [15678,15685]",
      "dest": "returns: returns [15677,15684]"
    },
    {
      "src": "(: ( [26684,26685]",
      "dest": "(: ( [26683,26684]"
    },
    {
      "src": ">=: >= [5235,5237]",
      "dest": ">=: >= [5234,5236]"
    },
    {
      "src": "identifier: token [27208,27213]",
      "dest": "identifier: token [27207,27212]"
    },
    {
      "src": "contract_declaration [25790,30157]",
      "dest": "contract_declaration [25789,29819]"
    },
    {
      "src": "return_type_definition [6805,6827]",
      "dest": "return_type_definition [6804,6826]"
    },
    {
      "src": "type_name [18474,18481]",
      "dest": "type_name [18473,18480]"
    },
    {
      "src": "primitive_type [22070,22077]",
      "dest": "primitive_type [22069,22076]"
    },
    {
      "src": "identifier: target [4696,4702]",
      "dest": "identifier: target [4695,4701]"
    },
    {
      "src": "(: ( [27805,27806]",
      "dest": "(: ( [27804,27805]"
    },
    {
      "src": "string_literal [11785,11833]",
      "dest": "string_literal [11784,11832]"
    },
    {
      "src": "[: [ [28051,28052]",
      "dest": "[: [ [28050,28051]"
    },
    {
      "src": "!: ! [11704,11705]",
      "dest": "!: ! [11703,11704]"
    },
    {
      "src": "(: ( [5212,5213]",
      "dest": "(: ( [5211,5212]"
    },
    {
      "src": "identifier: nonces [23229,23235]",
      "dest": "identifier: nonces [23228,23234]"
    },
    {
      "src": "modifier_definition [13645,13770]",
      "dest": "modifier_definition [13644,13769]"
    },
    {
      "src": "identifier: _disableInitializers [14265,14285]",
      "dest": "identifier: _disableInitializers [14264,14284]"
    },
    {
      "src": "type_name [3597,3602]",
      "dest": "type_name [3596,3601]"
    },
    {
      "src": "function_definition [4514,4768]",
      "dest": "function_definition [4513,4767]"
    },
    {
      "src": "}: } [8266,8267]",
      "dest": "}: } [8265,8266]"
    },
    {
      "src": "identifier: target [5413,5419]",
      "dest": "identifier: target [5412,5418]"
    },
    {
      "src": ",: , [23152,23153]",
      "dest": ",: , [23151,23152]"
    },
    {
      "src": "primitive_type [3984,3989]",
      "dest": "primitive_type [3983,3988]"
    },
    {
      "src": "member_expression [29397,29404]",
      "dest": "member_expression [29059,29066]"
    },
    {
      "src": "return_type_definition [5172,5194]",
      "dest": "return_type_definition [5171,5193]"
    },
    {
      "src": "(: ( [18847,18848]",
      "dest": "(: ( [18846,18847]"
    },
    {
      "src": ",: , [27198,27199]",
      "dest": ",: , [27197,27198]"
    },
    {
      "src": "): ) [8306,8307]",
      "dest": "): ) [8305,8306]"
    },
    {
      "src": "boolean_literal [17127,17131]",
      "dest": "boolean_literal [17126,17130]"
    },
    {
      "src": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [1557,2463]",
      "dest": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [1556,2462]"
    },
    {
      "src": "identifier: errorMessage [5442,5454]",
      "dest": "identifier: errorMessage [5441,5453]"
    },
    {
      "src": "array_access [28986,29009]",
      "dest": "array_access [28648,28671]"
    },
    {
      "src": "{: { [16063,16064]",
      "dest": "{: { [16062,16063]"
    },
    {
      "src": "(: ( [7800,7801]",
      "dest": "(: ( [7799,7800]"
    },
    {
      "src": "type_name [6081,6086]",
      "dest": "type_name [6080,6085]"
    },
    {
      "src": "): ) [27661,27662]",
      "dest": "): ) [27660,27661]"
    },
    {
      "src": "(: ( [23391,23392]",
      "dest": "(: ( [23390,23391]"
    },
    {
      "src": ":: : [5355,5356]",
      "dest": ":: : [5354,5355]"
    },
    {
      "src": "bool: bool [7518,7522]",
      "dest": "bool: bool [7517,7521]"
    },
    {
      "src": ",: , [4121,4122]",
      "dest": ",: , [4120,4121]"
    },
    {
      "src": ",: , [26721,26722]",
      "dest": ",: , [26720,26721]"
    },
    {
      "src": "memory: memory [6087,6093]",
      "dest": "memory: memory [6086,6092]"
    },
    {
      "src": "return: return [17468,17474]",
      "dest": "return: return [17467,17473]"
    },
    {
      "src": "(: ( [6296,6297]",
      "dest": "(: ( [6295,6296]"
    },
    {
      "src": "identifier: isTopLevelCall [11883,11897]",
      "dest": "identifier: isTopLevelCall [11882,11896]"
    },
    {
      "src": "member_expression [29689,29696]",
      "dest": "member_expression [29351,29358]"
    },
    {
      "src": "parameter [23998,24011]",
      "dest": "parameter [23997,24010]"
    },
    {
      "src": "[: [ [29253,29254]",
      "dest": "[: [ [28915,28916]"
    },
    {
      "src": "comment: // mapping(address=>bool) public genuineDeposit; [26066,26114]",
      "dest": "comment: // mapping(address=>bool) public genuineDeposit; [26065,26113]"
    },
    {
      "src": "mapping: mapping [26615,26622]",
      "dest": "mapping: mapping [26614,26621]"
    },
    {
      "src": "type_name [16982,16989]",
      "dest": "type_name [16981,16988]"
    },
    {
      "src": "uint256: uint256 [15642,15649]",
      "dest": "uint256: uint256 [15641,15648]"
    },
    {
      "src": "parameter [6725,6748]",
      "dest": "parameter [6724,6747]"
    },
    {
      "src": "boolean_literal [17476,17480]",
      "dest": "boolean_literal [17475,17479]"
    },
    {
      "src": "identifier: owner [24388,24393]",
      "dest": "identifier: owner [24387,24392]"
    },
    {
      "src": "address: address [28418,28425]",
      "dest": "address: address [28448,28455]"
    },
    {
      "src": ",: , [23961,23962]",
      "dest": ",: , [23960,23961]"
    },
    {
      "src": "returns: returns [16039,16046]",
      "dest": "returns: returns [16038,16045]"
    },
    {
      "src": "): ) [5454,5455]",
      "dest": "): ) [5453,5454]"
    },
    {
      "src": "expression_statement [20103,20133]",
      "dest": "expression_statement [20102,20132]"
    },
    {
      "src": "!: ! [13198,13199]",
      "dest": "!: ! [13197,13198]"
    },
    {
      "src": "(: ( [27604,27605]",
      "dest": "(: ( [27603,27604]"
    },
    {
      "src": "type_name [15736,15743]",
      "dest": "type_name [15735,15742]"
    },
    {
      "src": ",: , [18129,18130]",
      "dest": ",: , [18128,18129]"
    },
    {
      "src": "identifier: a [17482,17483]",
      "dest": "identifier: a [17481,17482]"
    },
    {
      "src": "struct_field_assignment [28298,28317]",
      "dest": "struct_field_assignment [28297,28316]"
    },
    {
      "src": "call_argument [29409,29444]",
      "dest": "call_argument [29071,29106]"
    },
    {
      "src": "identifier: _msgSender [27041,27051]",
      "dest": "identifier: _msgSender [27040,27050]"
    },
    {
      "src": "identifier: token [29269,29274]",
      "dest": "identifier: token [28931,28936]"
    },
    {
      "src": "}: } [7707,7708]",
      "dest": "}: } [7706,7707]"
    },
    {
      "src": "returns: returns [14693,14700]",
      "dest": "returns: returns [14692,14699]"
    },
    {
      "src": "primitive_type [29914,29921]",
      "dest": "primitive_type [29576,29583]"
    },
    {
      "src": "primitive_type [2514,2521]",
      "dest": "primitive_type [2513,2520]"
    },
    {
      "src": "identifier: version [13420,13427]",
      "dest": "identifier: version [13419,13426]"
    },
    {
      "src": "): ) [6826,6827]",
      "dest": "): ) [6825,6826]"
    },
    {
      "src": "using: using [21905,21910]",
      "dest": "using: using [21904,21909]"
    },
    {
      "src": "identifier: target [5064,5070]",
      "dest": "identifier: target [5063,5069]"
    },
    {
      "src": "return: return [23612,23618]",
      "dest": "return: return [23611,23617]"
    },
    {
      "src": "): ) [15776,15777]",
      "dest": "): ) [15775,15776]"
    },
    {
      "src": "[: [ [23094,23095]",
      "dest": "[: [ [23093,23094]"
    },
    {
      "src": "function_definition [28900,29782]",
      "dest": "function_definition [28562,29444]"
    },
    {
      "src": "identifier: value [5350,5355]",
      "dest": "identifier: value [5349,5354]"
    },
    {
      "src": "call_argument [27816,27823]",
      "dest": "call_argument [27815,27822]"
    },
    {
      "src": "identifier: i [29063,29064]",
      "dest": "identifier: i [28725,28726]"
    },
    {
      "src": "number_literal: 0 [24352,24353]",
      "dest": "number_literal: 0 [24351,24352]"
    },
    {
      "src": ".: . [29612,29613]",
      "dest": ".: . [29274,29275]"
    },
    {
      "src": "member_expression [28287,28297]",
      "dest": "member_expression [28286,28296]"
    },
    {
      "src": "state_variable_declaration [10992,11019]",
      "dest": "state_variable_declaration [10991,11018]"
    },
    {
      "src": "modifier_invocation [27004,27015]",
      "dest": "modifier_invocation [27003,27014]"
    },
    {
      "src": "string [30096,30119]",
      "dest": "string [29758,29781]"
    },
    {
      "src": "{: { [8124,8125]",
      "dest": "{: { [8123,8124]"
    },
    {
      "src": "function: function [19384,19392]",
      "dest": "function: function [19383,19391]"
    },
    {
      "src": "): ) [11842,11843]",
      "dest": "): ) [11841,11842]"
    },
    {
      "src": "function: function [15626,15634]",
      "dest": "function: function [15625,15633]"
    },
    {
      "src": "identifier: sender [24502,24508]",
      "dest": "identifier: sender [24501,24507]"
    },
    {
      "src": "return_type_definition [14902,14916]",
      "dest": "return_type_definition [14901,14915]"
    },
    {
      "src": "primitive_type [25221,25225]",
      "dest": "primitive_type [25220,25224]"
    },
    {
      "src": "state_variable_declaration [26598,26660]",
      "dest": "state_variable_declaration [26597,26659]"
    },
    {
      "src": "state_mutability [14688,14692]",
      "dest": "state_mutability [14687,14691]"
    },
    {
      "src": "user_defined_type [25807,25827]",
      "dest": "user_defined_type [25806,25826]"
    },
    {
      "src": "identifier: x [29743,29744]",
      "dest": "identifier: x [29405,29406]"
    },
    {
      "src": "bytes: bytes [6081,6086]",
      "dest": "bytes: bytes [6080,6085]"
    },
    {
      "src": "binary_expression [16668,16674]",
      "dest": "binary_expression [16667,16673]"
    },
    {
      "src": "binary_expression [20826,20831]",
      "dest": "binary_expression [20825,20830]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {trySub}.      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [19486,19939]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {trySub}.      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [19485,19938]"
    },
    {
      "src": "call_argument [28986,29009]",
      "dest": "call_argument [28648,28671]"
    },
    {
      "src": "variable_declaration_tuple [28269,28284]",
      "dest": "variable_declaration_tuple [28268,28283]"
    },
    {
      "src": "identifier: id [22205,22207]",
      "dest": "identifier: id [22204,22206]"
    },
    {
      "src": "variable_declaration_tuple [23342,23381]",
      "dest": "variable_declaration_tuple [23341,23380]"
    },
    {
      "src": "identifier: b [18923,18924]",
      "dest": "identifier: b [18922,18923]"
    },
    {
      "src": "abstract: abstract [10711,10719]",
      "dest": "abstract: abstract [10710,10718]"
    },
    {
      "src": "variable_declaration_statement [11596,11633]",
      "dest": "variable_declaration_statement [11595,11632]"
    },
    {
      "src": "(: ( [17475,17476]",
      "dest": "(: ( [17474,17475]"
    },
    {
      "src": "(: ( [7508,7509]",
      "dest": "(: ( [7507,7508]"
    },
    {
      "src": "function: function [18450,18458]",
      "dest": "function: function [18449,18457]"
    },
    {
      "src": "public: public [25991,25997]",
      "dest": "public: public [25990,25996]"
    },
    {
      "src": "type_name [4062,4067]",
      "dest": "type_name [4061,4066]"
    },
    {
      "src": "): ) [4144,4145]",
      "dest": "): ) [4143,4144]"
    },
    {
      "src": "external: external [29932,29940]",
      "dest": "external: external [29594,29602]"
    },
    {
      "src": "(: ( [29171,29172]",
      "dest": "(: ( [28833,28834]"
    },
    {
      "src": "(: ( [16384,16385]",
      "dest": "(: ( [16383,16384]"
    },
    {
      "src": "visibility [4625,4633]",
      "dest": "visibility [4624,4632]"
    },
    {
      "src": ",: , [18857,18858]",
      "dest": ",: , [18856,18857]"
    },
    {
      "src": "member_expression [23229,23252]",
      "dest": "member_expression [23228,23251]"
    },
    {
      "src": "primitive_type [5107,5114]",
      "dest": "primitive_type [5106,5113]"
    },
    {
      "src": "{: { [20069,20070]",
      "dest": "{: { [20068,20069]"
    },
    {
      "src": "type_name [19397,19404]",
      "dest": "type_name [19396,19403]"
    },
    {
      "src": "uint: uint [25729,25733]",
      "dest": "uint: uint [25728,25732]"
    },
    {
      "src": "type_name [24469,24476]",
      "dest": "type_name [24468,24475]"
    },
    {
      "src": "returns: returns [25213,25220]",
      "dest": "returns: returns [25212,25219]"
    },
    {
      "src": "identifier: token [26847,26852]",
      "dest": "identifier: token [26846,26851]"
    },
    {
      "src": "primitive_type [25036,25040]",
      "dest": "primitive_type [25035,25039]"
    },
    {
      "src": "expression_statement [28493,28520]",
      "dest": "expression_statement [28523,28550]"
    },
    {
      "src": "string [4717,4760]",
      "dest": "string [4716,4759]"
    },
    {
      "src": "event: event [21938,21943]",
      "dest": "event: event [21937,21942]"
    },
    {
      "src": "function_definition [6634,7262]",
      "dest": "function_definition [6633,7261]"
    },
    {
      "src": "function_body [30057,30155]",
      "dest": "function_body [29719,29817]"
    },
    {
      "src": "identifier: _initialized [11682,11694]",
      "dest": "identifier: _initialized [11681,11693]"
    },
    {
      "src": ",: , [23146,23147]",
      "dest": ",: , [23145,23146]"
    },
    {
      "src": "modifier_definition [13142,13435]",
      "dest": "modifier_definition [13141,13434]"
    },
    {
      "src": "return_type_definition [25634,25647]",
      "dest": "return_type_definition [25633,25646]"
    },
    {
      "src": "(: ( [18119,18120]",
      "dest": "(: ( [18118,18119]"
    },
    {
      "src": "(: ( [15785,15786]",
      "dest": "(: ( [15784,15785]"
    },
    {
      "src": "type_name [25451,25458]",
      "dest": "type_name [25450,25457]"
    },
    {
      "src": "address: address [28066,28073]",
      "dest": "address: address [28065,28072]"
    },
    {
      "src": "type_name [26816,26823]",
      "dest": "type_name [26815,26822]"
    },
    {
      "src": "unary_expression [11618,11632]",
      "dest": "unary_expression [11617,11631]"
    },
    {
      "src": "identifier: max [14422,14425]",
      "dest": "identifier: max [14421,14424]"
    },
    {
      "src": "expression_statement [2695,2774]",
      "dest": "expression_statement [2694,2773]"
    },
    {
      "src": "identifier: amount [2522,2528]",
      "dest": "identifier: amount [2521,2527]"
    },
    {
      "src": "): ) [23849,23850]",
      "dest": "): ) [23848,23849]"
    },
    {
      "src": "uint: uint [25611,25615]",
      "dest": "uint: uint [25610,25614]"
    },
    {
      "src": "primitive_type [26309,26316]",
      "dest": "primitive_type [26308,26315]"
    },
    {
      "src": ",: , [3662,3663]",
      "dest": ",: , [3661,3662]"
    },
    {
      "src": "{: { [7966,7967]",
      "dest": "{: { [7965,7966]"
    },
    {
      "src": "}: } [27860,27861]",
      "dest": "}: } [27859,27860]"
    },
    {
      "src": "\": \" [7134,7135]",
      "dest": "\": \" [7133,7134]"
    },
    {
      "src": "identifier: div [20668,20671]",
      "dest": "identifier: div [20667,20670]"
    },
    {
      "src": "): ) [16751,16752]",
      "dest": "): ) [16750,16751]"
    },
    {
      "src": "source_file [1,30157]",
      "dest": "source_file [0,29819]"
    },
    {
      "src": "=: = [29870,29871]",
      "dest": "=: = [29532,29533]"
    },
    {
      "src": "function_body [2539,2780]",
      "dest": "function_body [2538,2779]"
    },
    {
      "src": ".: . [23406,23407]",
      "dest": ".: . [23405,23406]"
    },
    {
      "src": "identifier: b [17001,17002]",
      "dest": "identifier: b [17000,17001]"
    },
    {
      "src": "identifier: to [25473,25475]",
      "dest": "identifier: to [25472,25474]"
    },
    {
      "src": "binary_expression [20111,20117]",
      "dest": "binary_expression [20110,20116]"
    },
    {
      "src": "): ) [14286,14287]",
      "dest": "): ) [14285,14286]"
    },
    {
      "src": "tuple_expression [16760,16770]",
      "dest": "tuple_expression [16759,16769]"
    },
    {
      "src": "call_expression [7728,7761]",
      "dest": "call_expression [7727,7760]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [3713,3924]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [3712,3923]"
    },
    {
      "src": "identifier: _fees [29872,29877]",
      "dest": "identifier: _fees [29534,29539]"
    },
    {
      "src": "identifier: executeMetaTransaction [22888,22910]",
      "dest": "identifier: executeMetaTransaction [22887,22909]"
    },
    {
      "src": "visibility [17004,17012]",
      "dest": "visibility [17003,17011]"
    },
    {
      "src": "function_body [14917,14954]",
      "dest": "function_body [14916,14953]"
    },
    {
      "src": "address: address [25310,25317]",
      "dest": "address: address [25309,25316]"
    },
    {
      "src": "): ) [11982,11983]",
      "dest": "): ) [11981,11982]"
    },
    {
      "src": ",: , [23561,23562]",
      "dest": ",: , [23560,23561]"
    },
    {
      "src": "type_name [21576,21583]",
      "dest": "type_name [21575,21582]"
    },
    {
      "src": "identifier: length [1534,1540]",
      "dest": "identifier: length [1533,1539]"
    },
    {
      "src": "parameter [1291,1295]",
      "dest": "parameter [1290,1294]"
    },
    {
      "src": "identifier: x [29267,29268]",
      "dest": "identifier: x [28929,28930]"
    },
    {
      "src": "internal: internal [23851,23859]",
      "dest": "internal: internal [23850,23858]"
    },
    {
      "src": "string: string [6108,6114]",
      "dest": "string: string [6107,6113]"
    },
    {
      "src": "primitive_type [22021,22026]",
      "dest": "primitive_type [22020,22025]"
    },
    {
      "src": "expression_statement [23463,23512]",
      "dest": "expression_statement [23462,23511]"
    },
    {
      "src": "parameter [20775,20782]",
      "dest": "parameter [20774,20781]"
    },
    {
      "src": "array_access [29409,29435]",
      "dest": "array_access [29071,29097]"
    },
    {
      "src": "\": \" [4759,4760]",
      "dest": "\": \" [4758,4759]"
    },
    {
      "src": "parameter [3984,4001]",
      "dest": "parameter [3983,4000]"
    },
    {
      "src": "type_name [5311,5316]",
      "dest": "type_name [5310,5315]"
    },
    {
      "src": "function_definition [27166,28392]",
      "dest": "function_definition [27165,28422]"
    },
    {
      "src": "address: address [25182,25189]",
      "dest": "address: address [25181,25188]"
    },
    {
      "src": "identifier: nonces [23207,23213]",
      "dest": "identifier: nonces [23206,23212]"
    },
    {
      "src": "]: ] [28064,28065]",
      "dest": "]: ] [28063,28064]"
    },
    {
      "src": "identifier: to [25607,25609]",
      "dest": "identifier: to [25606,25608]"
    },
    {
      "src": "): ) [29818,29819]",
      "dest": "): ) [29480,29481]"
    },
    {
      "src": "visibility [10997,11004]",
      "dest": "visibility [10996,11003]"
    },
    {
      "src": "parameter [17027,17031]",
      "dest": "parameter [17026,17030]"
    },
    {
      "src": "function_definition [25429,25501]",
      "dest": "function_definition [25428,25500]"
    },
    {
      "src": "type_name [17382,17389]",
      "dest": "type_name [17381,17388]"
    },
    {
      "src": ",: , [20831,20832]",
      "dest": ",: , [20830,20831]"
    },
    {
      "src": "identifier: depositer [29256,29265]",
      "dest": "identifier: depositer [28918,28927]"
    },
    {
      "src": "function_body [23883,23976]",
      "dest": "function_body [23882,23975]"
    },
    {
      "src": "function_definition [7483,7778]",
      "dest": "function_definition [7482,7777]"
    },
    {
      "src": "(: ( [16740,16741]",
      "dest": "(: ( [16739,16740]"
    },
    {
      "src": ".: . [27444,27445]",
      "dest": ".: . [27443,27444]"
    },
    {
      "src": "(: ( [14676,14677]",
      "dest": "(: ( [14675,14676]"
    },
    {
      "src": "(: ( [18507,18508]",
      "dest": "(: ( [18506,18507]"
    },
    {
      "src": "primitive_type [24099,24106]",
      "dest": "primitive_type [24098,24105]"
    },
    {
      "src": "parameter [25357,25361]",
      "dest": "parameter [25356,25360]"
    },
    {
      "src": "assignment_expression [13331,13351]",
      "dest": "assignment_expression [13330,13350]"
    },
    {
      "src": "type_name [25083,25089]",
      "dest": "type_name [25082,25088]"
    },
    {
      "src": "yul_assignment [22205,22220]",
      "dest": "yul_assignment [22204,22219]"
    },
    {
      "src": "call_argument [4710,4715]",
      "dest": "call_argument [4709,4714]"
    },
    {
      "src": "returns: returns [1282,1289]",
      "dest": "returns: returns [1281,1288]"
    },
    {
      "src": ",: , [6693,6694]",
      "dest": ",: , [6692,6693]"
    },
    {
      "src": "identifier: encodePacked [23914,23926]",
      "dest": "identifier: encodePacked [23913,23925]"
    },
    {
      "src": ",: , [24219,24220]",
      "dest": ",: , [24218,24219]"
    },
    {
      "src": "parameter [25451,25463]",
      "dest": "parameter [25450,25462]"
    },
    {
      "src": "primitive_type [16993,17000]",
      "dest": "primitive_type [16992,16999]"
    },
    {
      "src": "): ) [17002,17003]",
      "dest": "): ) [17001,17002]"
    },
    {
      "src": "uint256: uint256 [23696,23703]",
      "dest": "uint256: uint256 [23695,23702]"
    },
    {
      "src": "identifier: value [5357,5362]",
      "dest": "identifier: value [5356,5361]"
    },
    {
      "src": "): ) [27052,27053]",
      "dest": "): ) [27051,27052]"
    },
    {
      "src": "(: ( [28269,28270]",
      "dest": "(: ( [28268,28269]"
    },
    {
      "src": "function_definition [25290,25363]",
      "dest": "function_definition [25289,25362]"
    },
    {
      "src": "identifier: x [29501,29502]",
      "dest": "identifier: x [29163,29164]"
    },
    {
      "src": "type_name [26615,26637]",
      "dest": "type_name [26614,26636]"
    },
    {
      "src": "(: ( [24789,24790]",
      "dest": "(: ( [24788,24789]"
    },
    {
      "src": "string: string [5130,5136]",
      "dest": "string: string [5129,5135]"
    },
    {
      "src": "=: = [29510,29511]",
      "dest": "=: = [29172,29173]"
    },
    {
      "src": "identifier: b [18139,18140]",
      "dest": "identifier: b [18138,18139]"
    },
    {
      "src": "type_name [22932,22937]",
      "dest": "type_name [22931,22936]"
    },
    {
      "src": "parameter [7518,7530]",
      "dest": "parameter [7517,7529]"
    },
    {
      "src": "comment: // Append userAddress at the end to extract it from calling context [23266,23333]",
      "dest": "comment: // Append userAddress at the end to extract it from calling context [23265,23332]"
    },
    {
      "src": "identifier: burn [25724,25728]",
      "dest": "identifier: burn [25723,25727]"
    },
    {
      "src": "=: = [29058,29059]",
      "dest": "=: = [28720,28721]"
    },
    {
      "src": "binary_expression [16718,16723]",
      "dest": "binary_expression [16717,16722]"
    },
    {
      "src": "call_argument [27809,27814]",
      "dest": "call_argument [27808,27813]"
    },
    {
      "src": "}: } [5835,5836]",
      "dest": "}: } [5834,5835]"
    },
    {
      "src": "uint8: uint8 [10863,10868]",
      "dest": "uint8: uint8 [10862,10867]"
    },
    {
      "src": "\": \" [23509,23510]",
      "dest": "\": \" [23508,23509]"
    },
    {
      "src": "identifier: transfer [29387,29395]",
      "dest": "identifier: transfer [29049,29057]"
    },
    {
      "src": "binary_expression [16741,16746]",
      "dest": "binary_expression [16740,16745]"
    },
    {
      "src": "primitive_type [18463,18470]",
      "dest": "primitive_type [18462,18469]"
    },
    {
      "src": "assignment_expression [11998,12019]",
      "dest": "assignment_expression [11997,12018]"
    },
    {
      "src": "(: ( [25524,25525]",
      "dest": "(: ( [25523,25524]"
    },
    {
      "src": "parameter [14911,14915]",
      "dest": "parameter [14910,14914]"
    },
    {
      "src": "identifier: depositedEth [26188,26200]",
      "dest": "identifier: depositedEth [26187,26199]"
    },
    {
      "src": "identifier: multipleToken [26646,26659]",
      "dest": "identifier: multipleToken [26645,26658]"
    },
    {
      "src": "primitive_type [6108,6114]",
      "dest": "primitive_type [6107,6113]"
    },
    {
      "src": "memory: memory [5137,5143]",
      "dest": "memory: memory [5136,5142]"
    },
    {
      "src": "identifier: returndata [7220,7230]",
      "dest": "identifier: returndata [7219,7229]"
    },
    {
      "src": "): ) [20131,20132]",
      "dest": "): ) [20130,20131]"
    },
    {
      "src": "array_access [27676,27703]",
      "dest": "array_access [27675,27702]"
    },
    {
      "src": "call_expression [27530,27584]",
      "dest": "call_expression [27529,27583]"
    },
    {
      "src": "event_paramater [26276,26293]",
      "dest": "event_paramater [26275,26292]"
    },
    {
      "src": ".: . [28292,28293]",
      "dest": ".: . [28291,28292]"
    },
    {
      "src": "return_statement [7680,7698]",
      "dest": "return_statement [7679,7697]"
    },
    {
      "src": ",: , [26218,26219]",
      "dest": ",: , [26217,26218]"
    },
    {
      "src": "public: public [26576,26582]",
      "dest": "public: public [26575,26581]"
    },
    {
      "src": "uint256: uint256 [17764,17771]",
      "dest": "uint256: uint256 [17763,17770]"
    },
    {
      "src": "struct_expression [2652,2681]",
      "dest": "struct_expression [2651,2680]"
    },
    {
      "src": "): ) [16360,16361]",
      "dest": "): ) [16359,16360]"
    },
    {
      "src": "bool: bool [29194,29198]",
      "dest": "bool: bool [28856,28860]"
    },
    {
      "src": "primitive_type [6725,6730]",
      "dest": "primitive_type [6724,6729]"
    },
    {
      "src": "function: function [25369,25377]",
      "dest": "function: function [25368,25376]"
    },
    {
      "src": "return: return [18527,18533]",
      "dest": "return: return [18526,18532]"
    },
    {
      "src": "member_expression [7943,7960]",
      "dest": "member_expression [7942,7959]"
    },
    {
      "src": "solidity_version: 0.8.1 [163,168]",
      "dest": "solidity_version: 0.8.1 [162,167]"
    },
    {
      "src": "event_paramater [26219,26232]",
      "dest": "event_paramater [26218,26231]"
    },
    {
      "src": ".: . [29227,29228]",
      "dest": ".: . [28889,28890]"
    },
    {
      "src": "binary_expression [11704,11770]",
      "dest": "binary_expression [11703,11769]"
    },
    {
      "src": "primitive_type [14702,14707]",
      "dest": "primitive_type [14701,14706]"
    },
    {
      "src": ",: , [16389,16390]",
      "dest": ",: , [16388,16389]"
    },
    {
      "src": "view: view [14897,14901]",
      "dest": "view: view [14896,14900]"
    },
    {
      "src": "type_name [20060,20067]",
      "dest": "type_name [20059,20066]"
    },
    {
      "src": "primitive_type [3560,3565]",
      "dest": "primitive_type [3559,3564]"
    },
    {
      "src": "]: ] [29670,29671]",
      "dest": "]: ] [29332,29333]"
    },
    {
      "src": "yul_path [24790,24795]",
      "dest": "yul_path [24789,24794]"
    },
    {
      "src": "state_variable_declaration [25983,26009]",
      "dest": "state_variable_declaration [25982,26008]"
    },
    {
      "src": "identifier: _initializing [11913,11926]",
      "dest": "identifier: _initializing [11912,11925]"
    },
    {
      "src": "uint256: uint256 [17342,17349]",
      "dest": "uint256: uint256 [17341,17348]"
    },
    {
      "src": "(: ( [27895,27896]",
      "dest": "(: ( [27894,27895]"
    },
    {
      "src": "{: { [7867,7868]",
      "dest": "{: { [7866,7867]"
    },
    {
      "src": "identifier: sigS [22994,22998]",
      "dest": "identifier: sigS [22993,22997]"
    },
    {
      "src": "event_definition [11120,11153]",
      "dest": "event_definition [11119,11152]"
    },
    {
      "src": "type_name [17753,17760]",
      "dest": "type_name [17752,17759]"
    },
    {
      "src": "struct_declaration [26759,26928]",
      "dest": "struct_declaration [26758,26927]"
    },
    {
      "src": "true [16147,16151]",
      "dest": "true [16146,16150]"
    },
    {
      "src": "): ) [18140,18141]",
      "dest": "): ) [18139,18140]"
    },
    {
      "src": "identifier: abi [23910,23913]",
      "dest": "identifier: abi [23909,23912]"
    },
    {
      "src": "primitive_type [26453,26459]",
      "dest": "primitive_type [26452,26458]"
    },
    {
      "src": "function_body [14305,14535]",
      "dest": "function_body [14304,14534]"
    },
    {
      "src": "member_expression [29488,29499]",
      "dest": "member_expression [29150,29161]"
    },
    {
      "src": "contract_body [21898,24929]",
      "dest": "contract_body [21897,24928]"
    },
    {
      "src": "string_literal [5245,5285]",
      "dest": "string_literal [5244,5284]"
    },
    {
      "src": "event_paramater [21989,22019]",
      "dest": "event_paramater [21988,22018]"
    },
    {
      "src": "): ) [29931,29932]",
      "dest": "): ) [29593,29594]"
    },
    {
      "src": "tuple_expression [16115,16125]",
      "dest": "tuple_expression [16114,16124]"
    },
    {
      "src": "string_literal [5789,5828]",
      "dest": "string_literal [5788,5827]"
    },
    {
      "src": "*: * [18536,18537]",
      "dest": "*: * [18535,18536]"
    },
    {
      "src": "state_mutability [14897,14901]",
      "dest": "state_mutability [14896,14900]"
    },
    {
      "src": "(: ( [12049,12050]",
      "dest": "(: ( [12048,12049]"
    },
    {
      "src": "parameter [18131,18140]",
      "dest": "parameter [18130,18139]"
    },
    {
      "src": "public: public [25957,25963]",
      "dest": "public: public [25956,25962]"
    },
    {
      "src": "primitive_type [27379,27386]",
      "dest": "primitive_type [27378,27385]"
    },
    {
      "src": ",: , [4568,4569]",
      "dest": ",: , [4567,4568]"
    },
    {
      "src": "address: address [25599,25606]",
      "dest": "address: address [25598,25605]"
    },
    {
      "src": "type_name [24085,24092]",
      "dest": "type_name [24084,24091]"
    },
    {
      "src": "number_literal: 0 [17103,17104]",
      "dest": "number_literal: 0 [17102,17103]"
    },
    {
      "src": "call_argument [3650,3656]",
      "dest": "call_argument [3649,3655]"
    },
    {
      "src": "(: ( [25063,25064]",
      "dest": "(: ( [25062,25063]"
    },
    {
      "src": "event_paramater [26471,26484]",
      "dest": "event_paramater [26470,26483]"
    },
    {
      "src": "emit_statement [12033,12053]",
      "dest": "emit_statement [12032,12052]"
    },
    {
      "src": "type_name [22162,22169]",
      "dest": "type_name [22161,22168]"
    },
    {
      "src": "): ) [27849,27850]",
      "dest": "): ) [27848,27849]"
    },
    {
      "src": "returns: returns [4634,4641]",
      "dest": "returns: returns [4633,4640]"
    },
    {
      "src": "identifier: c [16714,16715]",
      "dest": "identifier: c [16713,16714]"
    },
    {
      "src": "identifier: value [28298,28303]",
      "dest": "identifier: value [28297,28302]"
    },
    {
      "src": ".: . [29715,29716]",
      "dest": ".: . [29377,29378]"
    },
    {
      "src": "function: function [21535,21543]",
      "dest": "function: function [21534,21542]"
    },
    {
      "src": "function_body [4076,4152]",
      "dest": "function_body [4075,4151]"
    },
    {
      "src": "struct_member [26816,26830]",
      "dest": "struct_member [26815,26829]"
    },
    {
      "src": "}: } [14955,14956]",
      "dest": "}: } [14954,14955]"
    },
    {
      "src": "call_expression [5338,5369]",
      "dest": "call_expression [5337,5368]"
    },
    {
      "src": ".: . [29489,29490]",
      "dest": ".: . [29151,29152]"
    },
    {
      "src": "identifier: owner [28477,28482]",
      "dest": "identifier: owner [28507,28512]"
    },
    {
      "src": "primitive_type [25083,25089]",
      "dest": "primitive_type [25082,25088]"
    },
    {
      "src": "primitive_type [29805,29812]",
      "dest": "primitive_type [29467,29474]"
    },
    {
      "src": "call_argument [24520,24524]",
      "dest": "call_argument [24519,24523]"
    },
    {
      "src": "type_name [28925,28939]",
      "dest": "type_name [28587,28601]"
    },
    {
      "src": "array_access [28038,28077]",
      "dest": "array_access [28037,28076]"
    },
    {
      "src": "pure: pure [16371,16375]",
      "dest": "pure: pure [16370,16374]"
    },
    {
      "src": "): ) [24255,24256]",
      "dest": "): ) [24254,24255]"
    },
    {
      "src": "(: ( [28062,28063]",
      "dest": "(: ( [28061,28062]"
    },
    {
      "src": "if_statement [17425,17455]",
      "dest": "if_statement [17424,17454]"
    },
    {
      "src": ",: , [22998,22999]",
      "dest": ",: , [22997,22998]"
    },
    {
      "src": "return: return [3621,3627]",
      "dest": "return: return [3620,3626]"
    },
    {
      "src": "(: ( [16047,16048]",
      "dest": "(: ( [16046,16047]"
    },
    {
      "src": "function_body [29950,29990]",
      "dest": "function_body [29612,29652]"
    },
    {
      "src": "type_name [24045,24050]",
      "dest": "type_name [24044,24049]"
    },
    {
      "src": ",: , [24297,24298]",
      "dest": ",: , [24296,24297]"
    },
    {
      "src": ",: , [16349,16350]",
      "dest": ",: , [16348,16349]"
    },
    {
      "src": "): ) [17104,17105]",
      "dest": "): ) [17103,17104]"
    },
    {
      "src": "type_name [26422,26429]",
      "dest": "type_name [26421,26428]"
    },
    {
      "src": "memory: memory [7546,7552]",
      "dest": "memory: memory [7545,7551]"
    },
    {
      "src": "string [2712,2772]",
      "dest": "string [2711,2771]"
    },
    {
      "src": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [17511,17735]",
      "dest": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [17510,17734]"
    },
    {
      "src": "[: [ [28065,28066]",
      "dest": "[: [ [28064,28065]"
    },
    {
      "src": "): ) [29174,29175]",
      "dest": "): ) [28836,28837]"
    },
    {
      "src": "state_mutability [25344,25348]",
      "dest": "state_mutability [25343,25347]"
    },
    {
      "src": "primitive_type [6814,6819]",
      "dest": "primitive_type [6813,6818]"
    },
    {
      "src": "call_argument [20119,20131]",
      "dest": "call_argument [20118,20130]"
    },
    {
      "src": "array_access [28493,28512]",
      "dest": "array_access [28523,28542]"
    },
    {
      "src": "visibility [3579,3587]",
      "dest": "visibility [3578,3586]"
    },
    {
      "src": "boolean_literal [16116,16121]",
      "dest": "boolean_literal [16115,16120]"
    },
    {
      "src": "primitive_type [17331,17338]",
      "dest": "primitive_type [17330,17337]"
    },
    {
      "src": "yul_identifier [24790,24795]",
      "dest": "yul_identifier [24789,24794]"
    },
    {
      "src": "address: address [29914,29921]",
      "dest": "address: address [29576,29583]"
    },
    {
      "src": "string: string [26343,26349]",
      "dest": "string: string [26342,26348]"
    },
    {
      "src": "call_expression [24197,24254]",
      "dest": "call_expression [24196,24253]"
    },
    {
      "src": "{: { [23711,23712]",
      "dest": "{: { [23710,23711]"
    },
    {
      "src": "memory: memory [5317,5323]",
      "dest": "memory: memory [5316,5322]"
    },
    {
      "src": "identifier: target [6297,6303]",
      "dest": "identifier: target [6296,6302]"
    },
    {
      "src": "visibility [25275,25283]",
      "dest": "visibility [25274,25282]"
    },
    {
      "src": "(: ( [24497,24498]",
      "dest": "(: ( [24496,24497]"
    },
    {
      "src": "(: ( [30021,30022]",
      "dest": "(: ( [29683,29684]"
    },
    {
      "src": "identifier: returndata [6216,6226]",
      "dest": "identifier: returndata [6215,6225]"
    },
    {
      "src": "parameter [25729,25741]",
      "dest": "parameter [25728,25740]"
    },
    {
      "src": "): ) [26356,26357]",
      "dest": "): ) [26355,26356]"
    },
    {
      "src": "identifier: _msgSender [28996,29006]",
      "dest": "identifier: _msgSender [28658,28668]"
    },
    {
      "src": "return: return [24380,24386]",
      "dest": "return: return [24379,24385]"
    },
    {
      "src": "identifier: x [29153,29154]",
      "dest": "identifier: x [28815,28816]"
    },
    {
      "src": "modifier_definition [11563,12069]",
      "dest": "modifier_definition [11562,12068]"
    },
    {
      "src": "(: ( [11742,11743]",
      "dest": "(: ( [11741,11742]"
    },
    {
      "src": "expression_statement [23721,23742]",
      "dest": "expression_statement [23720,23741]"
    },
    {
      "src": "identifier: token [29665,29670]",
      "dest": "identifier: token [29327,29332]"
    },
    {
      "src": "type_name [26934,26948]",
      "dest": "type_name [26933,26947]"
    },
    {
      "src": "): ) [8242,8243]",
      "dest": "): ) [8241,8242]"
    },
    {
      "src": "call_argument [29689,29696]",
      "dest": "call_argument [29351,29358]"
    },
    {
      "src": "identifier: _isInitializing [14870,14885]",
      "dest": "identifier: _isInitializing [14869,14884]"
    },
    {
      "src": "string [5789,5828]",
      "dest": "string [5788,5827]"
    },
    {
      "src": "identifier: call [29228,29232]",
      "dest": "identifier: call [28890,28894]"
    },
    {
      "src": "): ) [23120,23121]",
      "dest": "): ) [23119,23120]"
    },
    {
      "src": "modifier: modifier [13645,13653]",
      "dest": "modifier: modifier [13644,13652]"
    },
    {
      "src": "(: ( [24436,24437]",
      "dest": "(: ( [24435,24436]"
    },
    {
      "src": "identifier: errorMessage [21609,21621]",
      "dest": "identifier: errorMessage [21608,21620]"
    },
    {
      "src": "): ) [29764,29765]",
      "dest": "): ) [29426,29427]"
    },
    {
      "src": "address: address [2557,2564]",
      "dest": "address: address [2556,2563]"
    },
    {
      "src": "variable_declaration_statement [24163,24257]",
      "dest": "variable_declaration_statement [24162,24256]"
    },
    {
      "src": "boolean_literal [16684,16688]",
      "dest": "boolean_literal [16683,16687]"
    },
    {
      "src": "identifier: SafeMath [15475,15483]",
      "dest": "identifier: SafeMath [15474,15482]"
    },
    {
      "src": "call_expression [14315,14381]",
      "dest": "call_expression [14314,14380]"
    },
    {
      "src": "assignment_expression [30131,30148]",
      "dest": "assignment_expression [29793,29810]"
    },
    {
      "src": "identifier: depositedToken [26261,26275]",
      "dest": "identifier: depositedToken [26260,26274]"
    },
    {
      "src": "uint256: uint256 [17798,17805]",
      "dest": "uint256: uint256 [17797,17804]"
    },
    {
      "src": "binary_expression [20153,20158]",
      "dest": "binary_expression [20152,20157]"
    },
    {
      "src": "): ) [27053,27054]",
      "dest": "): ) [27052,27053]"
    },
    {
      "src": "): ) [4074,4075]",
      "dest": "): ) [4073,4074]"
    },
    {
      "src": ",: , [17340,17341]",
      "dest": ",: , [17339,17340]"
    },
    {
      "src": "internal: internal [20752,20760]",
      "dest": "internal: internal [20751,20759]"
    },
    {
      "src": "function_definition [22100,22255]",
      "dest": "function_definition [22099,22254]"
    },
    {
      "src": "parameter [7826,7852]",
      "dest": "parameter [7825,7851]"
    },
    {
      "src": "function_definition [2468,2780]",
      "dest": "function_definition [2467,2779]"
    },
    {
      "src": "identifier: collectedFeesThreshold [25921,25943]",
      "dest": "identifier: collectedFeesThreshold [25920,25942]"
    },
    {
      "src": "variable_declaration [5297,5309]",
      "dest": "variable_declaration [5296,5308]"
    },
    {
      "src": "type_name [3544,3551]",
      "dest": "type_name [3543,3550]"
    },
    {
      "src": "(: ( [17428,17429]",
      "dest": "(: ( [17427,17428]"
    },
    {
      "src": "): ) [7604,7605]",
      "dest": "): ) [7603,7604]"
    },
    {
      "src": "false [17445,17450]",
      "dest": "false [17444,17449]"
    },
    {
      "src": "comment: // This method relies on extcodesize/address.code.length, which returns 0 [1307,1380]",
      "dest": "comment: // This method relies on extcodesize/address.code.length, which returns 0 [1306,1379]"
    },
    {
      "src": "type_name [4554,4561]",
      "dest": "type_name [4553,4560]"
    },
    {
      "src": "): ) [25333,25334]",
      "dest": "): ) [25332,25333]"
    },
    {
      "src": "bool: bool [2634,2638]",
      "dest": "bool: bool [2633,2637]"
    },
    {
      "src": "}: } [29460,29461]",
      "dest": "}: } [29122,29123]"
    },
    {
      "src": "function_body [7867,8324]",
      "dest": "function_body [7866,8323]"
    },
    {
      "src": "identifier: b [17828,17829]",
      "dest": "identifier: b [17827,17828]"
    },
    {
      "src": "string [13240,13288]",
      "dest": "string [13239,13287]"
    },
    {
      "src": "type_name [5056,5063]",
      "dest": "type_name [5055,5062]"
    },
    {
      "src": "}: } [24928,24929]",
      "dest": "}: } [24927,24928]"
    },
    {
      "src": "identifier: value [28083,28088]",
      "dest": "identifier: value [28082,28087]"
    },
    {
      "src": "primitive_type [4578,4583]",
      "dest": "primitive_type [4577,4582]"
    },
    {
      "src": "[: [ [27689,27690]",
      "dest": "[: [ [27688,27689]"
    },
    {
      "src": "expression_statement [27530,27585]",
      "dest": "expression_statement [27529,27584]"
    },
    {
      "src": "parameter [28925,28956]",
      "dest": "parameter [28587,28618]"
    },
    {
      "src": ",: , [29009,29010]",
      "dest": ",: , [28671,28672]"
    },
    {
      "src": "visibility [2530,2538]",
      "dest": "visibility [2529,2537]"
    },
    {
      "src": "call_argument [27538,27560]",
      "dest": "call_argument [27537,27559]"
    },
    {
      "src": "primitive_type [25451,25458]",
      "dest": "primitive_type [25450,25457]"
    },
    {
      "src": "private: private [7854,7861]",
      "dest": "private: private [7853,7860]"
    },
    {
      "src": "parameter [19397,19406]",
      "dest": "parameter [19396,19405]"
    },
    {
      "src": "member_expression [24600,24608]",
      "dest": "member_expression [24599,24607]"
    },
    {
      "src": "bytes: bytes [6164,6169]",
      "dest": "bytes: bytes [6163,6168]"
    },
    {
      "src": "-: - [16155,16156]",
      "dest": "-: - [16154,16155]"
    },
    {
      "src": "identifier: require [27530,27537]",
      "dest": "identifier: require [27529,27536]"
    },
    {
      "src": "call_expression [24187,24255]",
      "dest": "call_expression [24186,24254]"
    },
    {
      "src": ",: , [21585,21586]",
      "dest": ",: , [21584,21585]"
    },
    {
      "src": "memory: memory [7635,7641]",
      "dest": "memory: memory [7634,7640]"
    },
    {
      "src": "if: if [11879,11881]",
      "dest": "if: if [11878,11880]"
    },
    {
      "src": ",: , [24075,24076]",
      "dest": ",: , [24074,24075]"
    },
    {
      "src": "function_body [6178,6346]",
      "dest": "function_body [6177,6345]"
    },
    {
      "src": "identifier: require [28336,28343]",
      "dest": "identifier: require [28335,28342]"
    },
    {
      "src": "}: } [20882,20883]",
      "dest": "}: } [20881,20882]"
    },
    {
      "src": "(: ( [6247,6248]",
      "dest": "(: ( [6246,6247]"
    },
    {
      "src": "(: ( [16683,16684]",
      "dest": "(: ( [16682,16683]"
    },
    {
      "src": "identifier: returndata_size [8227,8242]",
      "dest": "identifier: returndata_size [8226,8241]"
    },
    {
      "src": "call_expression [23910,23968]",
      "dest": "call_expression [23909,23967]"
    },
    {
      "src": "identifier: success [28344,28351]",
      "dest": "identifier: success [28343,28350]"
    },
    {
      "src": ",: , [20709,20710]",
      "dest": ",: , [20708,20709]"
    },
    {
      "src": "}: } [13434,13435]",
      "dest": "}: } [13433,13434]"
    },
    {
      "src": "identifier: Transactions [29102,29114]",
      "dest": "identifier: Transactions [28764,28776]"
    },
    {
      "src": "}: } [22229,22230]",
      "dest": "}: } [22228,22229]"
    },
    {
      "src": ".: . [6236,6237]",
      "dest": ".: . [6235,6236]"
    },
    {
      "src": "type_name [16706,16713]",
      "dest": "type_name [16705,16712]"
    },
    {
      "src": "member_expression [29586,29593]",
      "dest": "member_expression [29248,29255]"
    },
    {
      "src": "}: } [23975,23976]",
      "dest": "}: } [23974,23975]"
    },
    {
      "src": "if: if [6865,6867]",
      "dest": "if: if [6864,6866]"
    },
    {
      "src": "function_definition [17315,17505]",
      "dest": "function_definition [17314,17504]"
    },
    {
      "src": "type_name [3560,3565]",
      "dest": "type_name [3559,3564]"
    },
    {
      "src": "return_type_definition [18499,18516]",
      "dest": "return_type_definition [18498,18515]"
    },
    {
      "src": "): ) [7664,7665]",
      "dest": "): ) [7663,7664]"
    },
    {
      "src": "): ) [29173,29174]",
      "dest": "): ) [28835,28836]"
    },
    {
      "src": "string_literal [14339,14380]",
      "dest": "string_literal [14338,14379]"
    },
    {
      "src": "uint256: uint256 [20700,20707]",
      "dest": "uint256: uint256 [20699,20706]"
    },
    {
      "src": "number_literal: 1 [11697,11698]",
      "dest": "number_literal: 1 [11696,11697]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [4774,5011]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [4773,5010]"
    },
    {
      "src": "identifier: call [23398,23402]",
      "dest": "identifier: call [23397,23401]"
    },
    {
      "src": "): ) [2621,2622]",
      "dest": "): ) [2620,2621]"
    },
    {
      "src": "member_expression [27751,27760]",
      "dest": "member_expression [27750,27759]"
    },
    {
      "src": "{: { [21898,21899]",
      "dest": "{: { [21897,21898]"
    },
    {
      "src": "(: ( [26703,26704]",
      "dest": "(: ( [26702,26703]"
    },
    {
      "src": "function: function [25715,25723]",
      "dest": "function: function [25714,25722]"
    },
    {
      "src": "==: == [28474,28476]",
      "dest": "==: == [28504,28506]"
    },
    {
      "src": "primitive_type [24344,24351]",
      "dest": "primitive_type [24343,24350]"
    },
    {
      "src": "parameter [16391,16398]",
      "dest": "parameter [16390,16397]"
    },
    {
      "src": "{: { [15722,15723]",
      "dest": "{: { [15721,15722]"
    },
    {
      "src": "call_expression [23463,23511]",
      "dest": "call_expression [23462,23510]"
    },
    {
      "src": "variable_declaration_statement [2633,2686]",
      "dest": "variable_declaration_statement [2632,2685]"
    },
    {
      "src": "member_expression [28079,28088]",
      "dest": "member_expression [28078,28087]"
    },
    {
      "src": "function_body [28968,29782]",
      "dest": "function_body [28630,29444]"
    },
    {
      "src": "function_definition [29890,29990]",
      "dest": "function_definition [29552,29652]"
    },
    {
      "src": "solidity_pragma_token [8493,8508]",
      "dest": "solidity_pragma_token [8492,8507]"
    },
    {
      "src": "call_argument [29011,29032]",
      "dest": "call_argument [28673,28694]"
    },
    {
      "src": "member_expression [29267,29274]",
      "dest": "member_expression [28929,28936]"
    },
    {
      "src": "identifier: name [27445,27449]",
      "dest": "identifier: name [27444,27448]"
    },
    {
      "src": "parameter [20719,20745]",
      "dest": "parameter [20718,20744]"
    },
    {
      "src": "returns: returns [17018,17025]",
      "dest": "returns: returns [17017,17024]"
    },
    {
      "src": "parameter [18165,18172]",
      "dest": "parameter [18164,18171]"
    },
    {
      "src": "(: ( [11137,11138]",
      "dest": "(: ( [11136,11137]"
    },
    {
      "src": "type_name [26377,26384]",
      "dest": "type_name [26376,26383]"
    },
    {
      "src": "(: ( [28985,28986]",
      "dest": "(: ( [28647,28648]"
    },
    {
      "src": "): ) [25040,25041]",
      "dest": "): ) [25039,25040]"
    },
    {
      "src": "): ) [24353,24354]",
      "dest": "): ) [24352,24353]"
    },
    {
      "src": "function: function [16966,16974]",
      "dest": "function: function [16965,16973]"
    },
    {
      "src": "variable_declaration_statement [16706,16724]",
      "dest": "variable_declaration_statement [16705,16723]"
    },
    {
      "src": "identifier: mintTo [25676,25682]",
      "dest": "identifier: mintTo [25675,25681]"
    },
    {
      "src": "pure: pure [7862,7866]",
      "dest": "pure: pure [7861,7865]"
    },
    {
      "src": ",: , [18472,18473]",
      "dest": ",: , [18471,18472]"
    },
    {
      "src": "{: { [17062,17063]",
      "dest": "{: { [17061,17062]"
    },
    {
      "src": "if_statement [29150,29461]",
      "dest": "if_statement [28812,29123]"
    },
    {
      "src": "variable_declaration_statement [29193,29281]",
      "dest": "variable_declaration_statement [28855,28943]"
    },
    {
      "src": ".: . [27909,27910]",
      "dest": ".: . [27908,27909]"
    },
    {
      "src": "uint256: uint256 [21924,21931]",
      "dest": "uint256: uint256 [21923,21930]"
    },
    {
      "src": "identifier: call [28293,28297]",
      "dest": "identifier: call [28292,28296]"
    },
    {
      "src": "primitive_type [14911,14915]",
      "dest": "primitive_type [14910,14914]"
    },
    {
      "src": "identifier: tryAdd [15635,15641]",
      "dest": "identifier: tryAdd [15634,15640]"
    },
    {
      "src": "identifier: token [27605,27610]",
      "dest": "identifier: token [27604,27609]"
    },
    {
      "src": "identifier: token [27704,27709]",
      "dest": "identifier: token [27703,27708]"
    },
    {
      "src": "parameter [25387,25397]",
      "dest": "parameter [25386,25396]"
    },
    {
      "src": "function: function [5639,5647]",
      "dest": "function: function [5638,5646]"
    },
    {
      "src": "external: external [28959,28967]",
      "dest": "external: external [28621,28629]"
    },
    {
      "src": "solidity_version: 0.8.2 [8503,8508]",
      "dest": "solidity_version: 0.8.2 [8502,8507]"
    },
    {
      "src": "identifier: Initialized [14490,14501]",
      "dest": "identifier: Initialized [14489,14500]"
    },
    {
      "src": "identifier: Initializable [10729,10742]",
      "dest": "identifier: Initializable [10728,10741]"
    },
    {
      "src": "contract_body [15484,21767]",
      "dest": "contract_body [15483,21766]"
    },
    {
      "src": "call_expression [6270,6339]",
      "dest": "call_expression [6269,6338]"
    },
    {
      "src": "identifier: c [15744,15745]",
      "dest": "identifier: c [15743,15744]"
    },
    {
      "src": "identifier: depositedEth [28148,28160]",
      "dest": "identifier: depositedEth [28147,28159]"
    },
    {
      "src": "parameter [24028,24043]",
      "dest": "parameter [24027,24042]"
    },
    {
      "src": "type_name [6814,6819]",
      "dest": "type_name [6813,6818]"
    },
    {
      "src": "return_type_definition [14693,14708]",
      "dest": "return_type_definition [14692,14707]"
    },
    {
      "src": "parameter [20700,20709]",
      "dest": "parameter [20699,20708]"
    },
    {
      "src": "identifier: transferFrom [25438,25450]",
      "dest": "identifier: transferFrom [25437,25449]"
    },
    {
      "src": ".: . [23913,23914]",
      "dest": ".: . [23912,23913]"
    },
    {
      "src": "(: ( [25309,25310]",
      "dest": "(: ( [25308,25309]"
    },
    {
      "src": "(: ( [6163,6164]",
      "dest": "(: ( [6162,6163]"
    },
    {
      "src": "return_statement [17119,17140]",
      "dest": "return_statement [17118,17139]"
    },
    {
      "src": "call_expression [24283,24316]",
      "dest": "call_expression [24282,24315]"
    },
    {
      "src": "): ) [7964,7965]",
      "dest": "): ) [7963,7964]"
    },
    {
      "src": ".: . [29386,29387]",
      "dest": ".: . [29048,29049]"
    },
    {
      "src": "expression_statement [14315,14382]",
      "dest": "expression_statement [14314,14381]"
    },
    {
      "src": "call_argument [27625,27637]",
      "dest": "call_argument [27624,27636]"
    },
    {
      "src": "(: ( [22910,22911]",
      "dest": "(: ( [22909,22910]"
    },
    {
      "src": "identifier: mul [18459,18462]",
      "dest": "identifier: mul [18458,18461]"
    },
    {
      "src": "identifier: target [4562,4568]",
      "dest": "identifier: target [4561,4567]"
    },
    {
      "src": "(: ( [5412,5413]",
      "dest": "(: ( [5411,5412]"
    },
    {
      "src": "memory: memory [25090,25096]",
      "dest": "memory: memory [25089,25095]"
    },
    {
      "src": "function: function [25290,25298]",
      "dest": "function: function [25289,25297]"
    },
    {
      "src": "}: } [29781,29782]",
      "dest": "}: } [29443,29444]"
    },
    {
      "src": "return_statement [18184,18197]",
      "dest": "return_statement [18183,18196]"
    },
    {
      "src": "string_literal [27561,27583]",
      "dest": "string_literal [27560,27582]"
    },
    {
      "src": "assignment_expression [29847,29877]",
      "dest": "assignment_expression [29509,29539]"
    },
    {
      "src": "function: function [26975,26983]",
      "dest": "function: function [26974,26982]"
    },
    {
      "src": "primitive_type [26343,26349]",
      "dest": "primitive_type [26342,26348]"
    },
    {
      "src": "returns: returns [25075,25082]",
      "dest": "returns: returns [25074,25081]"
    },
    {
      "src": "identifier: userAddress [23439,23450]",
      "dest": "identifier: userAddress [23438,23449]"
    },
    {
      "src": "uint256: uint256 [26309,26316]",
      "dest": "uint256: uint256 [26308,26315]"
    },
    {
      "src": "member_expression [29423,29434]",
      "dest": "member_expression [29085,29096]"
    },
    {
      "src": "(: ( [25667,25668]",
      "dest": "(: ( [25666,25667]"
    },
    {
      "src": "identifier: functionCall [3531,3543]",
      "dest": "identifier: functionCall [3530,3542]"
    },
    {
      "src": ",: , [28282,28283]",
      "dest": ",: , [28281,28282]"
    },
    {
      "src": "parameter [4062,4074]",
      "dest": "parameter [4061,4073]"
    },
    {
      "src": "identifier: target [6065,6071]",
      "dest": "identifier: target [6064,6070]"
    },
    {
      "src": "return_type_definition [6155,6177]",
      "dest": "return_type_definition [6154,6176]"
    },
    {
      "src": ",: , [7230,7231]",
      "dest": ",: , [7229,7230]"
    },
    {
      "src": "variable_declaration [29194,29206]",
      "dest": "variable_declaration [28856,28868]"
    },
    {
      "src": "^:  ^ [21857,21859]",
      "dest": "^:  ^ [21856,21858]"
    },
    {
      "src": "visibility [25019,25027]",
      "dest": "visibility [25018,25026]"
    },
    {
      "src": "call_argument [28344,28351]",
      "dest": "call_argument [28343,28350]"
    },
    {
      "src": "(: ( [16791,16792]",
      "dest": "(: ( [16790,16791]"
    },
    {
      "src": "(: ( [20110,20111]",
      "dest": "(: ( [20109,20110]"
    },
    {
      "src": "call_argument [30075,30094]",
      "dest": "call_argument [29737,29756]"
    },
    {
      "src": "&&: && [13213,13215]",
      "dest": "&&: && [13212,13214]"
    },
    {
      "src": "): ) [23047,23048]",
      "dest": "): ) [23046,23047]"
    },
    {
      "src": "identifier: length [7954,7960]",
      "dest": "identifier: length [7953,7959]"
    },
    {
      "src": "identifier: SafeMath [21911,21919]",
      "dest": "identifier: SafeMath [21910,21918]"
    },
    {
      "src": "yul_path [24797,24802]",
      "dest": "yul_path [24796,24801]"
    },
    {
      "src": "(: ( [5220,5221]",
      "dest": "(: ( [5219,5220]"
    },
    {
      "src": "(: ( [15770,15771]",
      "dest": "(: ( [15769,15770]"
    },
    {
      "src": "(: ( [17026,17027]",
      "dest": "(: ( [17025,17026]"
    },
    {
      "src": "state_mutability [25208,25212]",
      "dest": "state_mutability [25207,25211]"
    },
    {
      "src": "return_statement [24893,24911]",
      "dest": "return_statement [24892,24910]"
    },
    {
      "src": "identifier: to [25533,25535]",
      "dest": "identifier: to [25532,25534]"
    },
    {
      "src": "identifier: initializer [11572,11583]",
      "dest": "identifier: initializer [11571,11582]"
    },
    {
      "src": ".: . [24565,24566]",
      "dest": ".: . [24564,24565]"
    },
    {
      "src": "comment: /**      * Main function to be called when user wants to execute meta transaction.      * The actual function to be called should be passed as param with name functionSignature      * Here the basic signature recovery is being used. Signature is expected to be generated using      * personal_sign method.      * @param userAddress Address of user trying to do meta transaction      * @param functionSignature Signature of the actual function to be called via meta transaction      * @param sigR R part of the signature      * @param sigS S part of the signature      * @param sigV V part of the signature      */ [22261,22874]",
      "dest": "comment: /**      * Main function to be called when user wants to execute meta transaction.      * The actual function to be called should be passed as param with name functionSignature      * Here the basic signature recovery is being used. Signature is expected to be generated using      * personal_sign method.      * @param userAddress Address of user trying to do meta transaction      * @param functionSignature Signature of the actual function to be called via meta transaction      * @param sigR R part of the signature      * @param sigS S part of the signature      * @param sigV V part of the signature      */ [22260,22873]"
    },
    {
      "src": "=: = [24598,24599]",
      "dest": "=: = [24597,24598]"
    },
    {
      "src": "type_name [5725,5730]",
      "dest": "type_name [5724,5729]"
    },
    {
      "src": "): ) [16061,16062]",
      "dest": "): ) [16060,16061]"
    },
    {
      "src": "identifier: collectedFeesThreshold [29847,29869]",
      "dest": "identifier: collectedFeesThreshold [29509,29531]"
    },
    {
      "src": "identifier: returndata_size [8146,8161]",
      "dest": "identifier: returndata_size [8145,8160]"
    },
    {
      "src": ".: . [5344,5345]",
      "dest": ".: . [5343,5344]"
    },
    {
      "src": "parameter [3560,3577]",
      "dest": "parameter [3559,3576]"
    },
    {
      "src": "identifier: Transactions [28925,28937]",
      "dest": "identifier: Transactions [28587,28599]"
    },
    {
      "src": "): ) [17435,17436]",
      "dest": "): ) [17434,17435]"
    },
    {
      "src": "type_name [22911,22918]",
      "dest": "type_name [22910,22917]"
    },
    {
      "src": "uint256: uint256 [20060,20067]",
      "dest": "uint256: uint256 [20059,20066]"
    },
    {
      "src": ",: , [5243,5244]",
      "dest": ",: , [5242,5243]"
    },
    {
      "src": ",: , [6715,6716]",
      "dest": ",: , [6714,6715]"
    },
    {
      "src": "comment: // File: try.sol [24932,24948]",
      "dest": "comment: // File: try.sol [24931,24947]"
    },
    {
      "src": "comment: // because it relies on the compiler's built in overflow checks. [15204,15268]",
      "dest": "comment: // because it relies on the compiler's built in overflow checks. [15203,15267]"
    },
    {
      "src": "returns: returns [17367,17374]",
      "dest": "returns: returns [17366,17373]"
    },
    {
      "src": "call_argument [29557,29568]",
      "dest": "call_argument [29219,29230]"
    },
    {
      "src": "state_variable_declaration [26551,26593]",
      "dest": "state_variable_declaration [26550,26592]"
    },
    {
      "src": "comment: /**  * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed  * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an  * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer  * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.  *  * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be  * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in  * case an upgrade adds a module that needs to be initialized.  *  * For example:  *  * [.hljs-theme-light.nopadding]  * ```  * contract MyToken is ERC20Upgradeable {  *     function initialize() initializer public {  *         __ERC20_init(\"MyToken\", \"MTK\");  *     }  * }  * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {  *     function initializeV2() reinitializer(2) public {  *         __ERC20Permit_init(\"MyToken\");  *     }  * }  * ```  *  * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as  * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.  *  * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure  * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.  *  * [CAUTION]  * ====  * Avoid leaving a contract uninitialized.  *  * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation  * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke  * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:  *  * [.hljs-theme-light.nopadding]  * ```  * /// @custom:oz-upgrades-unsafe-allow constructor  * constructor() {  *     _disableInitializers();  * }  * ```  * ====  */ [8512,10710]",
      "dest": "comment: /**  * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed  * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an  * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer  * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.  *  * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be  * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in  * case an upgrade adds a module that needs to be initialized.  *  * For example:  *  * [.hljs-theme-light.nopadding]  * ```  * contract MyToken is ERC20Upgradeable {  *     function initialize() initializer public {  *         __ERC20_init(\"MyToken\", \"MTK\");  *     }  * }  * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {  *     function initializeV2() reinitializer(2) public {  *         __ERC20Permit_init(\"MyToken\");  *     }  * }  * ```  *  * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as  * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.  *  * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure  * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.  *  * [CAUTION]  * ====  * Avoid leaving a contract uninitialized.  *  * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation  * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke  * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:  *  * [.hljs-theme-light.nopadding]  * ```  * /// @custom:oz-upgrades-unsafe-allow constructor  * constructor() {  *     _disableInitializers();  * }  * ```  * ====  */ [8511,10709]"
    },
    {
      "src": "if_statement [27366,28203]",
      "dest": "if_statement [27365,28202]"
    },
    {
      "src": "type_name [24266,24273]",
      "dest": "type_name [24265,24272]"
    },
    {
      "src": ":=: := [24773,24775]",
      "dest": ":=: := [24772,24774]"
    },
    {
      "src": "]: ] [29443,29444]",
      "dest": "]: ] [29105,29106]"
    },
    {
      "src": "): ) [20067,20068]",
      "dest": "): ) [20066,20067]"
    },
    {
      "src": "{: { [17411,17412]",
      "dest": "{: { [17410,17411]"
    },
    {
      "src": "identifier: b [17080,17081]",
      "dest": "identifier: b [17079,17080]"
    },
    {
      "src": "parameter [16048,16052]",
      "dest": "parameter [16047,16051]"
    },
    {
      "src": "function: function [24999,25007]",
      "dest": "function: function [24998,25006]"
    },
    {
      "src": "primitive_type [25357,25361]",
      "dest": "primitive_type [25356,25360]"
    },
    {
      "src": "parameter [25525,25535]",
      "dest": "parameter [25524,25534]"
    },
    {
      "src": "\": \" [26732,26733]",
      "dest": "\": \" [26731,26732]"
    },
    {
      "src": "emit: emit [23521,23525]",
      "dest": "emit: emit [23520,23524]"
    },
    {
      "src": "identifier: returndata [7687,7697]",
      "dest": "identifier: returndata [7686,7696]"
    },
    {
      "src": "return_type_definition [15678,15701]",
      "dest": "return_type_definition [15677,15700]"
    },
    {
      "src": "): ) [25646,25647]",
      "dest": "): ) [25645,25646]"
    },
    {
      "src": "type_name [26570,26574]",
      "dest": "type_name [26569,26573]"
    },
    {
      "src": "type_name [28418,28425]",
      "dest": "type_name [28448,28455]"
    },
    {
      "src": "uint256: uint256 [16391,16398]",
      "dest": "uint256: uint256 [16390,16397]"
    },
    {
      "src": "function_definition [25580,25648]",
      "dest": "function_definition [25579,25647]"
    },
    {
      "src": "parameter [16003,16012]",
      "dest": "parameter [16002,16011]"
    },
    {
      "src": "uint: uint [25399,25403]",
      "dest": "uint: uint [25398,25402]"
    },
    {
      "src": "library_declaration [15467,21767]",
      "dest": "library_declaration [15466,21766]"
    },
    {
      "src": "expression_statement [28038,28089]",
      "dest": "expression_statement [28037,28088]"
    },
    {
      "src": "return_type_definition [23027,23048]",
      "dest": "return_type_definition [23026,23047]"
    },
    {
      "src": "primitive_type [23035,23040]",
      "dest": "primitive_type [23034,23039]"
    },
    {
      "src": ",: , [17031,17032]",
      "dest": ",: , [17030,17031]"
    },
    {
      "src": "type_name [25221,25225]",
      "dest": "type_name [25220,25224]"
    },
    {
      "src": "): ) [27506,27507]",
      "dest": "): ) [27505,27506]"
    },
    {
      "src": "(: ( [25181,25182]",
      "dest": "(: ( [25180,25181]"
    },
    {
      "src": "yul_evm_builtin [22211,22218]",
      "dest": "yul_evm_builtin [22210,22217]"
    },
    {
      "src": "parameter [6758,6784]",
      "dest": "parameter [6757,6783]"
    },
    {
      "src": "primitive_type [22162,22169]",
      "dest": "primitive_type [22161,22168]"
    },
    {
      "src": "function_definition [23642,23748]",
      "dest": "function_definition [23641,23747]"
    },
    {
      "src": "function_body [7643,7778]",
      "dest": "function_body [7642,7777]"
    },
    {
      "src": "primitive_type [22059,22066]",
      "dest": "primitive_type [22058,22065]"
    },
    {
      "src": "): ) [23380,23381]",
      "dest": "): ) [23379,23380]"
    },
    {
      "src": "primitive_type [4643,4648]",
      "dest": "primitive_type [4642,4647]"
    },
    {
      "src": "variable_declaration [5311,5334]",
      "dest": "variable_declaration [5310,5333]"
    },
    {
      "src": "emit: emit [12033,12037]",
      "dest": "emit: emit [12032,12036]"
    },
    {
      "src": "uint256: uint256 [16054,16061]",
      "dest": "uint256: uint256 [16053,16060]"
    },
    {
      "src": "bytes: bytes [23035,23040]",
      "dest": "bytes: bytes [23034,23039]"
    },
    {
      "src": "public: public [26639,26645]",
      "dest": "public: public [26638,26644]"
    },
    {
      "src": "function: function [17315,17323]",
      "dest": "function: function [17314,17322]"
    },
    {
      "src": "(: ( [8170,8171]",
      "dest": "(: ( [8169,8170]"
    },
    {
      "src": "block_statement [8273,8318]",
      "dest": "block_statement [8272,8317]"
    },
    {
      "src": "=: = [29124,29125]",
      "dest": "=: = [28786,28787]"
    },
    {
      "src": "type_name [18508,18515]",
      "dest": "type_name [18507,18514]"
    },
    {
      "src": "parameter [25684,25696]",
      "dest": "parameter [25683,25695]"
    },
    {
      "src": "binary_expression [27896,27928]",
      "dest": "binary_expression [27895,27927]"
    },
    {
      "src": "(: ( [25082,25083]",
      "dest": "(: ( [25081,25082]"
    },
    {
      "src": "array_access [23088,23107]",
      "dest": "array_access [23087,23106]"
    },
    {
      "src": "primitive_type [10992,10996]",
      "dest": "primitive_type [10991,10995]"
    },
    {
      "src": "function_body [18517,18546]",
      "dest": "function_body [18516,18545]"
    },
    {
      "src": "call_expression [27494,27507]",
      "dest": "call_expression [27493,27506]"
    },
    {
      "src": "identifier: account [25190,25197]",
      "dest": "identifier: account [25189,25196]"
    },
    {
      "src": ",: , [25463,25464]",
      "dest": ",: , [25462,25463]"
    },
    {
      "src": "{: { [30057,30058]",
      "dest": "{: { [29719,29720]"
    },
    {
      "src": "visibility [10869,10876]",
      "dest": "visibility [10868,10875]"
    },
    {
      "src": "): ) [5285,5286]",
      "dest": "): ) [5284,5285]"
    },
    {
      "src": "identifier: b [20826,20827]",
      "dest": "identifier: b [20825,20826]"
    },
    {
      "src": "return_type_definition [25028,25041]",
      "dest": "return_type_definition [25027,25040]"
    },
    {
      "src": "else: else [24874,24878]",
      "dest": "else: else [24873,24877]"
    },
    {
      "src": "): ) [16674,16675]",
      "dest": "): ) [16673,16674]"
    },
    {
      "src": "binary_expression [28215,28254]",
      "dest": "binary_expression [28214,28253]"
    },
    {
      "src": "parameter [18120,18129]",
      "dest": "parameter [18119,18128]"
    },
    {
      "src": "call_expression [27598,27611]",
      "dest": "call_expression [27597,27610]"
    },
    {
      "src": "[: [ [29435,29436]",
      "dest": "[: [ [29097,29098]"
    },
    {
      "src": "address: address [22059,22066]",
      "dest": "address: address [22058,22065]"
    },
    {
      "src": "variable_declaration [28270,28282]",
      "dest": "variable_declaration [28269,28281]"
    },
    {
      "src": "return: return [16784,16790]",
      "dest": "return: return [16783,16789]"
    },
    {
      "src": "type_name [29194,29198]",
      "dest": "type_name [28856,28860]"
    },
    {
      "src": "expression_statement [29474,29514]",
      "dest": "expression_statement [29136,29176]"
    },
    {
      "src": "primitive_type [2487,2502]",
      "dest": "primitive_type [2486,2501]"
    },
    {
      "src": "=: = [28513,28514]",
      "dest": "=: = [28543,28544]"
    },
    {
      "src": "member_expression [28182,28191]",
      "dest": "member_expression [28181,28190]"
    },
    {
      "src": "identifier: target [4115,4121]",
      "dest": "identifier: target [4114,4120]"
    },
    {
      "src": "type_name [25611,25615]",
      "dest": "type_name [25610,25614]"
    },
    {
      "src": ",: , [26469,26470]",
      "dest": ",: , [26468,26469]"
    },
    {
      "src": "member_expression [29714,29725]",
      "dest": "member_expression [29376,29387]"
    },
    {
      "src": "return_type_definition [18156,18173]",
      "dest": "return_type_definition [18155,18172]"
    },
    {
      "src": "): ) [24437,24438]",
      "dest": "): ) [24436,24437]"
    },
    {
      "src": "parameter [20004,20030]",
      "dest": "parameter [20003,20029]"
    },
    {
      "src": "call_argument [23403,23451]",
      "dest": "call_argument [23402,23450]"
    },
    {
      "src": "identifier: feesBuffer [27550,27560]",
      "dest": "identifier: feesBuffer [27549,27559]"
    },
    {
      "src": "\": \" [5789,5790]",
      "dest": "\": \" [5788,5789]"
    },
    {
      "src": "state_mutability [6150,6154]",
      "dest": "state_mutability [6149,6153]"
    },
    {
      "src": "\": \" [29031,29032]",
      "dest": "\": \" [28693,28694]"
    },
    {
      "src": "(: ( [14506,14507]",
      "dest": "(: ( [14505,14506]"
    },
    {
      "src": "parameter [3597,3609]",
      "dest": "parameter [3596,3608]"
    },
    {
      "src": "parameter [17342,17351]",
      "dest": "parameter [17341,17350]"
    },
    {
      "src": "visibility [25492,25500]",
      "dest": "visibility [25491,25499]"
    },
    {
      "src": "call_argument [4696,4702]",
      "dest": "call_argument [4695,4701]"
    },
    {
      "src": "block_statement [15712,15836]",
      "dest": "block_statement [15711,15835]"
    },
    {
      "src": "view: view [23683,23687]",
      "dest": "view: view [23682,23686]"
    },
    {
      "src": "}: } [19479,19480]",
      "dest": "}: } [19478,19479]"
    },
    {
      "src": "assembly: assembly [24629,24637]",
      "dest": "assembly: assembly [24628,24636]"
    },
    {
      "src": "(: ( [24785,24786]",
      "dest": "(: ( [24784,24785]"
    },
    {
      "src": "binary_expression [1521,1544]",
      "dest": "binary_expression [1520,1543]"
    },
    {
      "src": "{: { [4076,4077]",
      "dest": "{: { [4075,4076]"
    },
    {
      "src": "}: } [24872,24873]",
      "dest": "}: } [24871,24872]"
    },
    {
      "src": "bytes: bytes [3560,3565]",
      "dest": "bytes: bytes [3559,3564]"
    },
    {
      "src": "call_argument [7104,7135]",
      "dest": "call_argument [7103,7134]"
    },
    {
      "src": "primitive_type [4011,4017]",
      "dest": "primitive_type [4010,4016]"
    },
    {
      "src": "type_name [5130,5136]",
      "dest": "type_name [5129,5135]"
    },
    {
      "src": "): ) [6252,6253]",
      "dest": "): ) [6251,6252]"
    },
    {
      "src": "identifier: tryMul [16333,16339]",
      "dest": "identifier: tryMul [16332,16338]"
    },
    {
      "src": ",: , [25827,25828]",
      "dest": ",: , [25826,25827]"
    },
    {
      "src": "): ) [22044,22045]",
      "dest": "): ) [22043,22044]"
    },
    {
      "src": "call_argument [4123,4127]",
      "dest": "call_argument [4122,4126]"
    },
    {
      "src": "call_expression [28461,28473]",
      "dest": "call_expression [28491,28503]"
    },
    {
      "src": "primitive_type [20775,20782]",
      "dest": "primitive_type [20774,20781]"
    },
    {
      "src": "): ) [29032,29033]",
      "dest": "): ) [28694,28695]"
    },
    {
      "src": ",: , [5419,5420]",
      "dest": ",: , [5418,5419]"
    },
    {
      "src": "identifier: symbol [25115,25121]",
      "dest": "identifier: symbol [25114,25120]"
    },
    {
      "src": "identifier: BasicMetaTransaction [21877,21897]",
      "dest": "identifier: BasicMetaTransaction [21876,21896]"
    },
    {
      "src": "^:  ^ [24966,24968]",
      "dest": "^:  ^ [24965,24967]"
    },
    {
      "src": "call_expression [29298,29333]",
      "dest": "call_expression [28960,28995]"
    },
    {
      "src": "identifier: require [2695,2702]",
      "dest": "identifier: require [2694,2701]"
    },
    {
      "src": "identifier: a [21565,21566]",
      "dest": "identifier: a [21564,21565]"
    },
    {
      "src": "}: } [3706,3707]",
      "dest": "}: } [3705,3706]"
    },
    {
      "src": "identifier: reinitializer [13151,13164]",
      "dest": "identifier: reinitializer [13150,13163]"
    },
    {
      "src": "identifier: _amount [25542,25549]",
      "dest": "identifier: _amount [25541,25548]"
    },
    {
      "src": "identifier: target [3968,3974]",
      "dest": "identifier: target [3967,3973]"
    },
    {
      "src": "pragma: pragma [8486,8492]",
      "dest": "pragma: pragma [8485,8491]"
    },
    {
      "src": "identifier: a [18534,18535]",
      "dest": "identifier: a [18533,18534]"
    },
    {
      "src": "view: view [6800,6804]",
      "dest": "view: view [6799,6803]"
    },
    {
      "src": "identifier: returndata [5324,5334]",
      "dest": "identifier: returndata [5323,5333]"
    },
    {
      "src": "primitive_type [16003,16010]",
      "dest": "primitive_type [16002,16009]"
    },
    {
      "src": "\": \" [3667,3668]",
      "dest": "\": \" [3666,3667]"
    },
    {
      "src": "primitive_type [16391,16398]",
      "dest": "primitive_type [16390,16397]"
    },
    {
      "src": "function_definition [17740,17836]",
      "dest": "function_definition [17739,17835]"
    },
    {
      "src": "=: = [29972,29973]",
      "dest": "=: = [29634,29635]"
    },
    {
      "src": ".: . [14513,14514]",
      "dest": ".: . [14512,14513]"
    },
    {
      "src": "): ) [27651,27652]",
      "dest": "): ) [27650,27651]"
    },
    {
      "src": "type_name [25847,25862]",
      "dest": "type_name [25846,25861]"
    },
    {
      "src": "bytes: bytes [3597,3602]",
      "dest": "bytes: bytes [3596,3601]"
    },
    {
      "src": "\": \" [28022,28023]",
      "dest": "\": \" [28021,28022]"
    },
    {
      "src": "yul_identifier [8214,8224]",
      "dest": "yul_identifier [8213,8223]"
    },
    {
      "src": "identifier: spottingInBatch [28909,28924]",
      "dest": "identifier: spottingInBatch [28571,28586]"
    },
    {
      "src": "block_statement [29352,29461]",
      "dest": "block_statement [29014,29123]"
    },
    {
      "src": ",: , [17380,17381]",
      "dest": ",: , [17379,17380]"
    },
    {
      "src": "block_statement [20794,20883]",
      "dest": "block_statement [20793,20882]"
    },
    {
      "src": "(: ( [22218,22219]",
      "dest": "(: ( [22217,22218]"
    },
    {
      "src": "parameter [5080,5097]",
      "dest": "parameter [5079,5096]"
    },
    {
      "src": "variable_declaration [29048,29057]",
      "dest": "variable_declaration [28710,28719]"
    },
    {
      "src": "member_expression [29211,29232]",
      "dest": "member_expression [28873,28894]"
    },
    {
      "src": "): ) [11698,11699]",
      "dest": "): ) [11697,11698]"
    },
    {
      "src": "(: ( [23695,23696]",
      "dest": "(: ( [23694,23695]"
    },
    {
      "src": "pure: pure [19428,19432]",
      "dest": "pure: pure [19427,19431]"
    },
    {
      "src": "=: = [14454,14455]",
      "dest": "=: = [14453,14454]"
    },
    {
      "src": "parameter [15693,15700]",
      "dest": "parameter [15692,15699]"
    },
    {
      "src": ",: , [25398,25399]",
      "dest": ",: , [25397,25398]"
    },
    {
      "src": "type_name [25568,25572]",
      "dest": "type_name [25567,25571]"
    },
    {
      "src": "bytes: bytes [24541,24546]",
      "dest": "bytes: bytes [24540,24545]"
    },
    {
      "src": "(: ( [5363,5364]",
      "dest": "(: ( [5362,5363]"
    },
    {
      "src": "%: % [17484,17485]",
      "dest": "%: % [17483,17484]"
    },
    {
      "src": "string_literal [2590,2621]",
      "dest": "string_literal [2589,2620]"
    },
    {
      "src": ".: . [29587,29588]",
      "dest": ".: . [29249,29250]"
    },
    {
      "src": "(: ( [16667,16668]",
      "dest": "(: ( [16666,16667]"
    },
    {
      "src": "call_argument [23910,23968]",
      "dest": "call_argument [23909,23967]"
    },
    {
      "src": "): ) [14380,14381]",
      "dest": "): ) [14379,14380]"
    },
    {
      "src": "(: ( [11734,11735]",
      "dest": "(: ( [11733,11734]"
    },
    {
      "src": "variable_declaration_statement [5296,5370]",
      "dest": "variable_declaration_statement [5295,5369]"
    },
    {
      "src": "identifier: txArray [29067,29074]",
      "dest": "identifier: txArray [28729,28736]"
    },
    {
      "src": "address: address [26623,26630]",
      "dest": "address: address [26622,26629]"
    },
    {
      "src": "(: ( [21650,21651]",
      "dest": "(: ( [21649,21650]"
    },
    {
      "src": "(: ( [26376,26377]",
      "dest": "(: ( [26375,26376]"
    },
    {
      "src": "identifier: require [24326,24333]",
      "dest": "identifier: require [24325,24332]"
    },
    {
      "src": "): ) [5193,5194]",
      "dest": "): ) [5192,5193]"
    },
    {
      "src": "(: ( [23402,23403]",
      "dest": "(: ( [23401,23402]"
    },
    {
      "src": "identifier: name [25059,25063]",
      "dest": "identifier: name [25058,25062]"
    },
    {
      "src": "address: address [26294,26301]",
      "dest": "address: address [26293,26300]"
    },
    {
      "src": "}: } [30154,30155]",
      "dest": "}: } [29816,29817]"
    },
    {
      "src": ">=: >= [27978,27980]",
      "dest": ">=: >= [27977,27979]"
    },
    {
      "src": "): ) [25064,25065]",
      "dest": "): ) [25063,25064]"
    },
    {
      "src": "emit_statement [29527,29766]",
      "dest": "emit_statement [29189,29428]"
    },
    {
      "src": "primitive_type [17798,17805]",
      "dest": "primitive_type [17797,17804]"
    },
    {
      "src": "identifier: nonces [23729,23735]",
      "dest": "identifier: nonces [23728,23734]"
    },
    {
      "src": "): ) [27806,27807]",
      "dest": "): ) [27805,27806]"
    },
    {
      "src": "type_name [22051,22078]",
      "dest": "type_name [22050,22077]"
    },
    {
      "src": "string [27561,27583]",
      "dest": "string [27560,27582]"
    },
    {
      "src": "function_definition [18835,18931]",
      "dest": "function_definition [18834,18930]"
    },
    {
      "src": "parameter [25599,25609]",
      "dest": "parameter [25598,25608]"
    },
    {
      "src": "(: ( [11967,11968]",
      "dest": "(: ( [11966,11967]"
    },
    {
      "src": "binary_expression [14395,14421]",
      "dest": "binary_expression [14394,14420]"
    },
    {
      "src": "uint256: uint256 [24584,24591]",
      "dest": "uint256: uint256 [24583,24590]"
    },
    {
      "src": "): ) [25197,25198]",
      "dest": "): ) [25196,25197]"
    },
    {
      "src": "}: } [20174,20175]",
      "dest": "}: } [20173,20174]"
    },
    {
      "src": "visibility [24439,24447]",
      "dest": "visibility [24438,24446]"
    },
    {
      "src": "identifier: a [15748,15749]",
      "dest": "identifier: a [15747,15748]"
    },
    {
      "src": "block_statement [7198,7256]",
      "dest": "block_statement [7197,7255]"
    },
    {
      "src": "identifier: msg [30075,30078]",
      "dest": "identifier: msg [29737,29740]"
    },
    {
      "src": "(: ( [28214,28215]",
      "dest": "(: ( [28213,28214]"
    },
    {
      "src": "identifier: errorMessage [20018,20030]",
      "dest": "identifier: errorMessage [20017,20029]"
    },
    {
      "src": "/: / [20869,20870]",
      "dest": "/: / [20868,20869]"
    },
    {
      "src": "identifier: this [24520,24524]",
      "dest": "identifier: this [24519,24523]"
    },
    {
      "src": "(: ( [17079,17080]",
      "dest": "(: ( [17078,17079]"
    },
    {
      "src": "solidity: solidity [24958,24966]",
      "dest": "solidity: solidity [24957,24965]"
    },
    {
      "src": "parameter [4578,4595]",
      "dest": "parameter [4577,4594]"
    },
    {
      "src": "yul_identifier [8171,8181]",
      "dest": "yul_identifier [8170,8180]"
    },
    {
      "src": "return_type_definition [20051,20068]",
      "dest": "return_type_definition [20050,20067]"
    },
    {
      "src": "identifier: data [6094,6098]",
      "dest": "identifier: data [6093,6097]"
    },
    {
      "src": "member_expression [29436,29443]",
      "dest": "member_expression [29098,29105]"
    },
    {
      "src": "uint256: uint256 [2514,2521]",
      "dest": "uint256: uint256 [2513,2520]"
    },
    {
      "src": "identifier: allowances [25299,25309]",
      "dest": "identifier: allowances [25298,25308]"
    },
    {
      "src": "): ) [14512,14513]",
      "dest": "): ) [14511,14512]"
    },
    {
      "src": "=: = [6228,6229]",
      "dest": "=: = [6227,6228]"
    },
    {
      "src": "parameter [17798,17805]",
      "dest": "parameter [17797,17804]"
    },
    {
      "src": "return: return [16676,16682]",
      "dest": "return: return [16675,16681]"
    },
    {
      "src": "call_argument [27501,27506]",
      "dest": "call_argument [27500,27505]"
    },
    {
      "src": "primitive_type [6189,6193]",
      "dest": "primitive_type [6188,6192]"
    },
    {
      "src": "identifier: require [23463,23470]",
      "dest": "identifier: require [23462,23469]"
    },
    {
      "src": "<: < [29065,29066]",
      "dest": "<: < [28727,28728]"
    },
    {
      "src": "address: address [27639,27646]",
      "dest": "address: address [27638,27645]"
    },
    {
      "src": "identifier: _initialized [11853,11865]",
      "dest": "identifier: _initialized [11852,11864]"
    },
    {
      "src": "parameter [25399,25411]",
      "dest": "parameter [25398,25410]"
    },
    {
      "src": "member_expression [2557,2578]",
      "dest": "member_expression [2556,2577]"
    },
    {
      "src": "(: ( [7094,7095]",
      "dest": "(: ( [7093,7094]"
    },
    {
      "src": "variable_declaration [23343,23355]",
      "dest": "variable_declaration [23342,23354]"
    },
    {
      "src": "state_variable_declaration [26934,26969]",
      "dest": "state_variable_declaration [26933,26968]"
    },
    {
      "src": "payable_conversion_expression [29211,29227]",
      "dest": "payable_conversion_expression [28873,28889]"
    },
    {
      "src": "struct_expression [28287,28318]",
      "dest": "struct_expression [28286,28317]"
    },
    {
      "src": "mapping: mapping [22051,22058]",
      "dest": "mapping: mapping [22050,22057]"
    },
    {
      "src": "): ) [27388,27389]",
      "dest": "): ) [27387,27388]"
    },
    {
      "src": "{: { [7666,7667]",
      "dest": "{: { [7665,7666]"
    },
    {
      "src": "tuple_expression [15816,15825]",
      "dest": "tuple_expression [15815,15824]"
    },
    {
      "src": "visibility [30049,30055]",
      "dest": "visibility [29711,29717]"
    },
    {
      "src": "primitive_type [26862,26866]",
      "dest": "primitive_type [26861,26865]"
    },
    {
      "src": "identifier: _amount [27191,27198]",
      "dest": "identifier: _amount [27190,27197]"
    },
    {
      "src": "type_name [29102,29114]",
      "dest": "type_name [28764,28776]"
    },
    {
      "src": "type_name [22143,22150]",
      "dest": "type_name [22142,22149]"
    },
    {
      "src": "identifier: array [24790,24795]",
      "dest": "identifier: array [24789,24794]"
    },
    {
      "src": "identifier: require [13683,13690]",
      "dest": "identifier: require [13682,13689]"
    },
    {
      "src": "+: + [27916,27917]",
      "dest": "+: + [27915,27916]"
    },
    {
      "src": "{: { [24879,24880]",
      "dest": "{: { [24878,24879]"
    },
    {
      "src": "parameter [19966,19975]",
      "dest": "parameter [19965,19974]"
    },
    {
      "src": "=: = [27429,27430]",
      "dest": "=: = [27428,27429]"
    },
    {
      "src": "yul_evm_builtin [8199,8205]",
      "dest": "yul_evm_builtin [8198,8204]"
    },
    {
      "src": "identifier: a [17339,17340]",
      "dest": "identifier: a [17338,17339]"
    },
    {
      "src": "): ) [21721,21722]",
      "dest": "): ) [21720,21721]"
    },
    {
      "src": "identifier: functionSignature [23420,23437]",
      "dest": "identifier: functionSignature [23419,23436]"
    },
    {
      "src": "function: function [2468,2476]",
      "dest": "function: function [2467,2475]"
    },
    {
      "src": "string_literal [27929,27945]",
      "dest": "string_literal [27928,27944]"
    },
    {
      "src": "primitive_type [6164,6169]",
      "dest": "primitive_type [6163,6168]"
    },
    {
      "src": "variable_declaration_statement [15736,15754]",
      "dest": "variable_declaration_statement [15735,15753]"
    },
    {
      "src": "primitive_type [26410,26414]",
      "dest": "primitive_type [26409,26413]"
    },
    {
      "src": "comment: // Builds a prefixed hash to mimic the behavior of eth_sign. [23754,23814]",
      "dest": "comment: // Builds a prefixed hash to mimic the behavior of eth_sign. [23753,23813]"
    },
    {
      "src": "comment: // CAUTION [15117,15127]",
      "dest": "comment: // CAUTION [15116,15126]"
    },
    {
      "src": "member_expression [6230,6247]",
      "dest": "member_expression [6229,6246]"
    },
    {
      "src": "(: ( [29539,29540]",
      "dest": "(: ( [29201,29202]"
    },
    {
      "src": "function_definition [25715,25752]",
      "dest": "function_definition [25714,25751]"
    },
    {
      "src": "event_paramater [26377,26394]",
      "dest": "event_paramater [26376,26393]"
    },
    {
      "src": "visibility [23012,23018]",
      "dest": "visibility [23011,23017]"
    },
    {
      "src": ",: , [23159,23160]",
      "dest": ",: , [23158,23159]"
    },
    {
      "src": "primitive_type [18508,18515]",
      "dest": "primitive_type [18507,18514]"
    },
    {
      "src": "primitive_type [25611,25615]",
      "dest": "primitive_type [25610,25614]"
    },
    {
      "src": ",: , [24097,24098]",
      "dest": ",: , [24096,24097]"
    },
    {
      "src": "identifier: _msgSender [24426,24436]",
      "dest": "identifier: _msgSender [24425,24435]"
    },
    {
      "src": "): ) [18900,18901]",
      "dest": "): ) [18899,18900]"
    },
    {
      "src": "solidity_version_comparison_operator [8501,8503]",
      "dest": "solidity_version_comparison_operator [8500,8502]"
    },
    {
      "src": "primitive_type [23696,23703]",
      "dest": "primitive_type [23695,23702]"
    },
    {
      "src": "identifier: onlyInitializing [13654,13670]",
      "dest": "identifier: onlyInitializing [13653,13669]"
    },
    {
      "src": "primitive_type [15693,15700]",
      "dest": "primitive_type [15692,15699]"
    },
    {
      "src": "^:  ^ [8501,8503]",
      "dest": "^:  ^ [8500,8502]"
    },
    {
      "src": "pure: pure [15673,15677]",
      "dest": "pure: pure [15672,15676]"
    },
    {
      "src": "identifier: data [4123,4127]",
      "dest": "identifier: data [4122,4126]"
    },
    {
      "src": "call_argument [23154,23158]",
      "dest": "call_argument [23153,23157]"
    },
    {
      "src": "identifier: functionSignature [23584,23601]",
      "dest": "identifier: functionSignature [23583,23600]"
    },
    {
      "src": "call_argument [27837,27849]",
      "dest": "call_argument [27836,27848]"
    },
    {
      "src": "call_argument [23109,23121]",
      "dest": "call_argument [23108,23120]"
    },
    {
      "src": "): ) [6226,6227]",
      "dest": "): ) [6225,6226]"
    },
    {
      "src": "block_statement [29175,29348]",
      "dest": "block_statement [28837,29010]"
    },
    {
      "src": "public: public [26949,26955]",
      "dest": "public: public [26948,26954]"
    },
    {
      "src": "solidity: solidity [21849,21857]",
      "dest": "solidity: solidity [21848,21856]"
    },
    {
      "src": "parameter [25611,25623]",
      "dest": "parameter [25610,25622]"
    },
    {
      "src": "function_definition [24417,24927]",
      "dest": "function_definition [24416,24926]"
    },
    {
      "src": "\": \" [23480,23481]",
      "dest": "\": \" [23479,23480]"
    },
    {
      "src": "type_name [24584,24591]",
      "dest": "type_name [24583,24590]"
    },
    {
      "src": "type_name [24099,24106]",
      "dest": "type_name [24098,24105]"
    },
    {
      "src": "visibility [25625,25633]",
      "dest": "visibility [25624,25632]"
    },
    {
      "src": "call_argument [27639,27652]",
      "dest": "call_argument [27638,27651]"
    },
    {
      "src": "primitive_type [25141,25147]",
      "dest": "primitive_type [25140,25146]"
    },
    {
      "src": "identifier: x [29254,29255]",
      "dest": "identifier: x [28916,28917]"
    },
    {
      "src": "returns: returns [18499,18506]",
      "dest": "returns: returns [18498,18505]"
    },
    {
      "src": "parameter [7801,7824]",
      "dest": "parameter [7800,7823]"
    },
    {
      "src": "==: == [6887,6889]",
      "dest": "==: == [6886,6888]"
    },
    {
      "src": ">=: >= [28229,28231]",
      "dest": ">=: >= [28228,28230]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting with custom message when dividing by zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryMod}.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [20895,21530]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting with custom message when dividing by zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryMod}.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [20894,21529]"
    },
    {
      "src": "primitive_type [24113,24118]",
      "dest": "primitive_type [24112,24117]"
    },
    {
      "src": "identifier: a [17761,17762]",
      "dest": "identifier: a [17760,17761]"
    },
    {
      "src": "identifier: data [4591,4595]",
      "dest": "identifier: data [4590,4594]"
    },
    {
      "src": "solidity_pragma_token [24958,24974]",
      "dest": "solidity_pragma_token [24957,24973]"
    },
    {
      "src": "identifier: sigR [24305,24309]",
      "dest": "identifier: sigR [24304,24308]"
    },
    {
      "src": "bytes32: bytes32 [24085,24092]",
      "dest": "bytes32: bytes32 [24084,24091]"
    },
    {
      "src": "binary_expression [21702,21707]",
      "dest": "binary_expression [21701,21706]"
    },
    {
      "src": "identifier: _amount [25734,25741]",
      "dest": "identifier: _amount [25733,25740]"
    },
    {
      "src": "view: view [24132,24136]",
      "dest": "view: view [24131,24135]"
    },
    {
      "src": "call_argument [23142,23146]",
      "dest": "call_argument [23141,23145]"
    },
    {
      "src": "primitive_type [19442,19449]",
      "dest": "primitive_type [19441,19448]"
    },
    {
      "src": "=: = [23727,23728]",
      "dest": "=: = [23726,23727]"
    },
    {
      "src": "call_argument [23927,23961]",
      "dest": "call_argument [23926,23960]"
    },
    {
      "src": "binary_expression [18191,18196]",
      "dest": "binary_expression [18190,18195]"
    },
    {
      "src": "function: function [29995,30003]",
      "dest": "function: function [29657,29665]"
    },
    {
      "src": "primitive_type [24541,24546]",
      "dest": "primitive_type [24540,24545]"
    },
    {
      "src": "bool: bool [24146,24150]",
      "dest": "bool: bool [24145,24149]"
    },
    {
      "src": "private: private [10997,11004]",
      "dest": "private: private [10996,11003]"
    },
    {
      "src": "): ) [6338,6339]",
      "dest": "): ) [6337,6338]"
    },
    {
      "src": "identifier: spotted [29532,29539]",
      "dest": "identifier: spotted [29194,29201]"
    },
    {
      "src": "primitive_type [6703,6707]",
      "dest": "primitive_type [6702,6706]"
    },
    {
      "src": "}: } [29775,29776]",
      "dest": "}: } [29437,29438]"
    },
    {
      "src": "visibility [25743,25751]",
      "dest": "visibility [25742,25750]"
    },
    {
      "src": "call_argument [14323,14337]",
      "dest": "call_argument [14322,14336]"
    },
    {
      "src": "(: ( [27646,27647]",
      "dest": "(: ( [27645,27646]"
    },
    {
      "src": "expression_statement [30131,30149]",
      "dest": "expression_statement [29793,29811]"
    },
    {
      "src": "string [28319,28321]",
      "dest": "string [28318,28320]"
    },
    {
      "src": "^:  ^ [15107,15109]",
      "dest": "^:  ^ [15106,15108]"
    },
    {
      "src": "comment: /**      * @dev Returns the multiplication of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [16182,16319]",
      "dest": "comment: /**      * @dev Returns the multiplication of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [16181,16318]"
    },
    {
      "src": ",: , [28173,28174]",
      "dest": ",: , [28172,28173]"
    },
    {
      "src": "bool: bool [17027,17031]",
      "dest": "bool: bool [17026,17030]"
    },
    {
      "src": "(: ( [14414,14415]",
      "dest": "(: ( [14413,14414]"
    },
    {
      "src": "identifier: tokensName [27825,27835]",
      "dest": "identifier: tokensName [27824,27834]"
    },
    {
      "src": "primitive_type [16048,16052]",
      "dest": "primitive_type [16047,16051]"
    },
    {
      "src": "uint: uint [26632,26636]",
      "dest": "uint: uint [26631,26635]"
    },
    {
      "src": "(: ( [14910,14911]",
      "dest": "(: ( [14909,14910]"
    },
    {
      "src": "array_access [29240,29275]",
      "dest": "array_access [28902,28937]"
    },
    {
      "src": "call_argument [13198,13238]",
      "dest": "call_argument [13197,13237]"
    },
    {
      "src": "visibility [28959,28967]",
      "dest": "visibility [28621,28629]"
    },
    {
      "src": "return_statement [17817,17830]",
      "dest": "return_statement [17816,17829]"
    },
    {
      "src": "call_expression [4093,4145]",
      "dest": "call_expression [4092,4144]"
    },
    {
      "src": "visibility [18142,18150]",
      "dest": "visibility [18141,18149]"
    },
    {
      "src": "if_statement [6865,7151]",
      "dest": "if_statement [6864,7150]"
    },
    {
      "src": "identifier: IERC20 [27431,27437]",
      "dest": "identifier: IERC20 [27430,27436]"
    },
    {
      "src": "event_paramater [21968,21987]",
      "dest": "event_paramater [21967,21986]"
    },
    {
      "src": "identifier: multipleToken [27676,27689]",
      "dest": "identifier: multipleToken [27675,27688]"
    },
    {
      "src": "function_definition [24999,25042]",
      "dest": "function_definition [24998,25041]"
    },
    {
      "src": ",: , [25536,25537]",
      "dest": ",: , [25535,25536]"
    },
    {
      "src": "function_body [16063,16176]",
      "dest": "function_body [16062,16175]"
    },
    {
      "src": "): ) [20035,20036]",
      "dest": "): ) [20034,20035]"
    },
    {
      "src": "return_type_definition [17367,17390]",
      "dest": "return_type_definition [17366,17389]"
    },
    {
      "src": "\": \" [27944,27945]",
      "dest": "\": \" [27943,27944]"
    },
    {
      "src": "member_expression [29067,29081]",
      "dest": "member_expression [28729,28743]"
    },
    {
      "src": "payable_conversion_expression [27033,27054]",
      "dest": "payable_conversion_expression [27032,27053]"
    },
    {
      "src": "{: { [11586,11587]",
      "dest": "{: { [11585,11586]"
    },
    {
      "src": "identifier: data [3573,3577]",
      "dest": "identifier: data [3572,3576]"
    },
    {
      "src": "identifier: feesCollected [28102,28115]",
      "dest": "identifier: feesCollected [28101,28114]"
    },
    {
      "src": "function_body [1297,1551]",
      "dest": "function_body [1296,1550]"
    },
    {
      "src": "binary_expression [11664,11698]",
      "dest": "binary_expression [11663,11697]"
    },
    {
      "src": "solidity_pragma_token [21849,21864]",
      "dest": "solidity_pragma_token [21848,21863]"
    },
    {
      "src": "internal: internal [2530,2538]",
      "dest": "internal: internal [2529,2537]"
    },
    {
      "src": "primitive_type [6679,6686]",
      "dest": "primitive_type [6678,6685]"
    },
    {
      "src": "{: { [29352,29353]",
      "dest": "{: { [29014,29015]"
    },
    {
      "src": "if_statement [16664,16693]",
      "dest": "if_statement [16663,16692]"
    },
    {
      "src": "): ) [7244,7245]",
      "dest": "): ) [7243,7244]"
    },
    {
      "src": "function_definition [23819,23976]",
      "dest": "function_definition [23818,23975]"
    },
    {
      "src": "expression_statement [29063,29082]",
      "dest": "expression_statement [28725,28744]"
    },
    {
      "src": "if: if [16097,16099]",
      "dest": "if: if [16096,16098]"
    },
    {
      "src": "block_statement [16073,16170]",
      "dest": "block_statement [16072,16169]"
    },
    {
      "src": "expression_statement [13372,13394]",
      "dest": "expression_statement [13371,13393]"
    },
    {
      "src": "return_statement [14927,14948]",
      "dest": "return_statement [14926,14947]"
    },
    {
      "src": "): ) [14517,14518]",
      "dest": "): ) [14516,14517]"
    },
    {
      "src": "type_name [23343,23347]",
      "dest": "type_name [23342,23346]"
    },
    {
      "src": "}: } [28317,28318]",
      "dest": "}: } [28316,28317]"
    },
    {
      "src": "visibility [20037,20045]",
      "dest": "visibility [20036,20044]"
    },
    {
      "src": "solidity_pragma_token [15099,15114]",
      "dest": "solidity_pragma_token [15098,15113]"
    },
    {
      "src": "identifier: version [13171,13178]",
      "dest": "identifier: version [13170,13177]"
    },
    {
      "src": ",: , [26394,26395]",
      "dest": ",: , [26393,26394]"
    },
    {
      "src": ",: , [25610,25611]",
      "dest": ",: , [25609,25610]"
    },
    {
      "src": "visibility [27215,27223]",
      "dest": "visibility [27214,27222]"
    },
    {
      "src": "address: address [26559,26566]",
      "dest": "address: address [26558,26565]"
    },
    {
      "src": "return_statement [15809,15826]",
      "dest": "return_statement [15808,15825]"
    },
    {
      "src": "function_body [6828,7262]",
      "dest": "function_body [6827,7261]"
    },
    {
      "src": "member_expression [27896,27915]",
      "dest": "member_expression [27895,27914]"
    },
    {
      "src": "yul_function_call [22211,22220]",
      "dest": "yul_function_call [22210,22219]"
    },
    {
      "src": "type_name [5297,5301]",
      "dest": "type_name [5296,5300]"
    },
    {
      "src": "variable_declaration [24541,24559]",
      "dest": "variable_declaration [24540,24558]"
    },
    {
      "src": "false [16761,16766]",
      "dest": "false [16760,16765]"
    },
    {
      "src": "(: ( [27635,27636]",
      "dest": "(: ( [27634,27635]"
    },
    {
      "src": "number_literal: 1 [23253,23254]",
      "dest": "number_literal: 1 [23252,23253]"
    },
    {
      "src": "return: return [17817,17823]",
      "dest": "return: return [17816,17822]"
    },
    {
      "src": "type_name [6758,6764]",
      "dest": "type_name [6757,6763]"
    },
    {
      "src": "): ) [5700,5701]",
      "dest": "): ) [5699,5700]"
    },
    {
      "src": "\": \" [27992,27993]",
      "dest": "\": \" [27991,27992]"
    },
    {
      "src": "return_type_definition [5716,5738]",
      "dest": "return_type_definition [5715,5737]"
    },
    {
      "src": "number_literal: 0 [3664,3665]",
      "dest": "number_literal: 0 [3663,3664]"
    },
    {
      "src": "]: ] [29508,29509]",
      "dest": "]: ] [29170,29171]"
    },
    {
      "src": "): ) [17086,17087]",
      "dest": "): ) [17085,17086]"
    },
    {
      "src": "identifier: owner [27025,27030]",
      "dest": "identifier: owner [27024,27029]"
    },
    {
      "src": "address: address [2487,2494]",
      "dest": "address: address [2486,2493]"
    },
    {
      "src": "(: ( [16100,16101]",
      "dest": "(: ( [16099,16100]"
    },
    {
      "src": "identifier: returndata [7736,7746]",
      "dest": "identifier: returndata [7735,7745]"
    },
    {
      "src": "return_type_definition [18884,18901]",
      "dest": "return_type_definition [18883,18900]"
    },
    {
      "src": "uint256: uint256 [22143,22150]",
      "dest": "uint256: uint256 [22142,22149]"
    },
    {
      "src": "call_argument [23123,23140]",
      "dest": "call_argument [23122,23139]"
    },
    {
      "src": "true: true [16684,16688]",
      "dest": "true: true [16683,16687]"
    },
    {
      "src": "+: + [15750,15751]",
      "dest": "+: + [15749,15750]"
    },
    {
      "src": "call_argument [24299,24303]",
      "dest": "call_argument [24298,24302]"
    },
    {
      "src": "identifier: mod [21544,21547]",
      "dest": "identifier: mod [21543,21546]"
    },
    {
      "src": "number_literal: 0 [16768,16769]",
      "dest": "number_literal: 0 [16767,16768]"
    },
    {
      "src": "parameter [3960,3974]",
      "dest": "parameter [3959,3973]"
    },
    {
      "src": "string [23161,23196]",
      "dest": "string [23160,23195]"
    },
    {
      "src": "primitive_type [24028,24035]",
      "dest": "primitive_type [24027,24034]"
    },
    {
      "src": "binary_expression [11682,11698]",
      "dest": "binary_expression [11681,11697]"
    },
    {
      "src": "parameter [24045,24075]",
      "dest": "parameter [24044,24074]"
    },
    {
      "src": "pragma_directive [21842,21865]",
      "dest": "pragma_directive [21841,21864]"
    },
    {
      "src": "]: ] [26947,26948]",
      "dest": "]: ] [26946,26947]"
    },
    {
      "src": "{: { [27015,27016]",
      "dest": "{: { [27014,27015]"
    },
    {
      "src": "address: address [21989,21996]",
      "dest": "address: address [21988,21995]"
    },
    {
      "src": "type_alias [21911,21919]",
      "dest": "type_alias [21910,21918]"
    },
    {
      "src": ",: , [2588,2589]",
      "dest": ",: , [2587,2588]"
    },
    {
      "src": "number_literal: 0 [16673,16674]",
      "dest": "number_literal: 0 [16672,16673]"
    },
    {
      "src": "return_type_definition [4053,4075]",
      "dest": "return_type_definition [4052,4074]"
    },
    {
      "src": "array_access [29474,29509]",
      "dest": "array_access [29136,29171]"
    },
    {
      "src": "(: ( [27369,27370]",
      "dest": "(: ( [27368,27369]"
    },
    {
      "src": "variable_declaration_statement [6188,6254]",
      "dest": "variable_declaration_statement [6187,6253]"
    },
    {
      "src": "}: } [28385,28386]",
      "dest": "}: } [28415,28416]"
    },
    {
      "src": "type_name [16003,16010]",
      "dest": "type_name [16002,16009]"
    },
    {
      "src": "): ) [5737,5738]",
      "dest": "): ) [5736,5737]"
    },
    {
      "src": "(: ( [17095,17096]",
      "dest": "(: ( [17094,17095]"
    },
    {
      "src": "call_argument [5775,5781]",
      "dest": "call_argument [5774,5780]"
    },
    {
      "src": "(: ( [25249,25250]",
      "dest": "(: ( [25248,25249]"
    },
    {
      "src": "parameter [29805,29818]",
      "dest": "parameter [29467,29480]"
    },
    {
      "src": "}: } [28391,28392]",
      "dest": "}: } [28421,28422]"
    },
    {
      "src": ".: . [14421,14422]",
      "dest": ".: . [14420,14421]"
    },
    {
      "src": "visibility [7606,7614]",
      "dest": "visibility [7605,7613]"
    },
    {
      "src": "comment: // The easiest way to bubble the revert reason is using memory via assembly [7980,8055]",
      "dest": "comment: // The easiest way to bubble the revert reason is using memory via assembly [7979,8054]"
    },
    {
      "src": "returns: returns [20051,20058]",
      "dest": "returns: returns [20050,20057]"
    },
    {
      "src": "primitive_type [23660,23667]",
      "dest": "primitive_type [23659,23666]"
    },
    {
      "src": "): ) [23196,23197]",
      "dest": "): ) [23195,23196]"
    },
    {
      "src": "]: ] [29008,29009]",
      "dest": "]: ] [28670,28671]"
    },
    {
      "src": "primitive_type [18165,18172]",
      "dest": "primitive_type [18164,18171]"
    },
    {
      "src": "primitive_type [17033,17040]",
      "dest": "primitive_type [17032,17039]"
    },
    {
      "src": "string_literal [7104,7135]",
      "dest": "string_literal [7103,7134]"
    },
    {
      "src": "): ) [2772,2773]",
      "dest": "): ) [2771,2772]"
    },
    {
      "src": "address: address [25323,25330]",
      "dest": "address: address [25322,25329]"
    },
    {
      "src": "identifier: symbol [27508,27514]",
      "dest": "identifier: symbol [27507,27513]"
    },
    {
      "src": "type: type [14410,14414]",
      "dest": "type: type [14409,14413]"
    },
    {
      "src": "{: { [2539,2540]",
      "dest": "{: { [2538,2539]"
    },
    {
      "src": "): ) [23254,23255]",
      "dest": "): ) [23253,23254]"
    },
    {
      "src": "(: ( [28924,28925]",
      "dest": "(: ( [28586,28587]"
    },
    {
      "src": "function: function [18835,18843]",
      "dest": "function: function [18834,18842]"
    },
    {
      "src": "type_name [21924,21931]",
      "dest": "type_name [21923,21930]"
    },
    {
      "src": "type_name [21557,21564]",
      "dest": "type_name [21556,21563]"
    },
    {
      "src": "expression_statement [7076,7137]",
      "dest": "expression_statement [7075,7136]"
    },
    {
      "src": "visibility [25199,25207]",
      "dest": "visibility [25198,25206]"
    },
    {
      "src": "identifier: b [16750,16751]",
      "dest": "identifier: b [16749,16750]"
    },
    {
      "src": "identifier: _amount [27896,27903]",
      "dest": "identifier: _amount [27895,27902]"
    },
    {
      "src": "\": \" [13240,13241]",
      "dest": "\": \" [13239,13240]"
    },
    {
      "src": "returns: returns [24461,24468]",
      "dest": "returns: returns [24460,24467]"
    },
    {
      "src": "(: ( [26275,26276]",
      "dest": "(: ( [26274,26275]"
    },
    {
      "src": "\": \" [29322,29323]",
      "dest": "\": \" [28984,28985]"
    },
    {
      "src": "(: ( [20059,20060]",
      "dest": "(: ( [20058,20059]"
    },
    {
      "src": "primitive_type [3960,3967]",
      "dest": "primitive_type [3959,3966]"
    },
    {
      "src": "identifier: success [6708,6715]",
      "dest": "identifier: success [6707,6714]"
    },
    {
      "src": "(: ( [1250,1251]",
      "dest": "(: ( [1249,1250]"
    },
    {
      "src": "++: ++ [29084,29086]",
      "dest": "++: ++ [28746,28748]"
    },
    {
      "src": ",: , [23121,23122]",
      "dest": ",: , [23120,23121]"
    },
    {
      "src": ",: , [7746,7747]",
      "dest": ",: , [7745,7746]"
    },
    {
      "src": "identifier: tokensSymbol [27479,27491]",
      "dest": "identifier: tokensSymbol [27478,27490]"
    },
    {
      "src": ",: , [6303,6304]",
      "dest": ",: , [6302,6303]"
    },
    {
      "src": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations.  *  * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler  * now has built in overflow checking.  */ [15270,15466]",
      "dest": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations.  *  * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler  * now has built in overflow checking.  */ [15269,15465]"
    },
    {
      "src": "}: } [24926,24927]",
      "dest": "}: } [24925,24926]"
    },
    {
      "src": "identifier: value [28123,28128]",
      "dest": "identifier: value [28122,28127]"
    },
    {
      "src": "^:  ^ [161,163]",
      "dest": "^:  ^ [160,162]"
    },
    {
      "src": "type_name [15693,15700]",
      "dest": "type_name [15692,15699]"
    },
    {
      "src": "identifier: _initializing [13372,13385]",
      "dest": "identifier: _initializing [13371,13384]"
    },
    {
      "src": ",: , [3558,3559]",
      "dest": ",: , [3557,3558]"
    },
    {
      "src": "call_argument [29636,29671]",
      "dest": "call_argument [29298,29333]"
    },
    {
      "src": "memory: memory [7807,7813]",
      "dest": "memory: memory [7806,7812]"
    },
    {
      "src": "(: ( [11703,11704]",
      "dest": "(: ( [11702,11703]"
    },
    {
      "src": "(: ( [23926,23927]",
      "dest": "(: ( [23925,23926]"
    },
    {
      "src": "identifier: require [26696,26703]",
      "dest": "identifier: require [26695,26702]"
    },
    {
      "src": "block_statement [27390,27861]",
      "dest": "block_statement [27389,27860]"
    },
    {
      "src": "identifier: a [17824,17825]",
      "dest": "identifier: a [17823,17824]"
    },
    {
      "src": "primitive_type [19397,19404]",
      "dest": "primitive_type [19396,19403]"
    },
    {
      "src": "visibility [24125,24131]",
      "dest": "visibility [24124,24130]"
    },
    {
      "src": "]: ] [28938,28939]",
      "dest": "]: ] [28600,28601]"
    },
    {
      "src": "binary_expression [16153,16158]",
      "dest": "binary_expression [16152,16157]"
    },
    {
      "src": "(: ( [18892,18893]",
      "dest": "(: ( [18891,18892]"
    },
    {
      "src": "=: = [2650,2651]",
      "dest": "=: = [2649,2650]"
    },
    {
      "src": "primitive_type [26839,26846]",
      "dest": "primitive_type [26838,26845]"
    },
    {
      "src": "address: address [6057,6064]",
      "dest": "address: address [6056,6063]"
    },
    {
      "src": "identifier: verifyCallResultFromTarget [6270,6296]",
      "dest": "identifier: verifyCallResultFromTarget [6269,6295]"
    },
    {
      "src": "function_definition [26975,27160]",
      "dest": "function_definition [26974,27159]"
    },
    {
      "src": "string_literal [13240,13288]",
      "dest": "string_literal [13239,13287]"
    },
    {
      "src": "binary_expression [20867,20872]",
      "dest": "binary_expression [20866,20871]"
    },
    {
      "src": "}: } [12068,12069]",
      "dest": "}: } [12067,12068]"
    },
    {
      "src": "{: { [266,267]",
      "dest": "{: { [265,266]"
    },
    {
      "src": "bytes: bytes [7540,7545]",
      "dest": "bytes: bytes [7539,7544]"
    },
    {
      "src": "): ) [16691,16692]",
      "dest": "): ) [16690,16691]"
    },
    {
      "src": "call_argument [6314,6324]",
      "dest": "call_argument [6313,6323]"
    },
    {
      "src": "type_name [20004,20010]",
      "dest": "type_name [20003,20009]"
    },
    {
      "src": "call_argument [27605,27610]",
      "dest": "call_argument [27604,27609]"
    },
    {
      "src": "address: address [27200,27207]",
      "dest": "address: address [27199,27206]"
    },
    {
      "src": "}: } [18545,18546]",
      "dest": "}: } [18544,18545]"
    },
    {
      "src": "identifier: returndata [7814,7824]",
      "dest": "identifier: returndata [7813,7823]"
    },
    {
      "src": "identifier: msg [27968,27971]",
      "dest": "identifier: msg [27967,27970]"
    },
    {
      "src": "call_argument [29714,29725]",
      "dest": "call_argument [29376,29387]"
    },
    {
      "src": "assignment_expression [27130,27153]",
      "dest": "assignment_expression [27129,27152]"
    },
    {
      "src": "visibility [21628,21636]",
      "dest": "visibility [21627,21635]"
    },
    {
      "src": ",: , [19975,19976]",
      "dest": ",: , [19974,19975]"
    },
    {
      "src": ",: , [24354,24355]",
      "dest": ",: , [24353,24354]"
    },
    {
      "src": "string [7104,7135]",
      "dest": "string [7103,7134]"
    },
    {
      "src": "): ) [3609,3610]",
      "dest": "): ) [3608,3609]"
    },
    {
      "src": "call_argument [28352,28374]",
      "dest": "call_argument [28351,28373]"
    },
    {
      "src": "parameter [16993,17002]",
      "dest": "parameter [16992,17001]"
    },
    {
      "src": "identifier: _msgSender [28052,28062]",
      "dest": "identifier: _msgSender [28051,28061]"
    },
    {
      "src": "(: ( [14285,14286]",
      "dest": "(: ( [14284,14285]"
    },
    {
      "src": "identifier: _msgSender [27795,27805]",
      "dest": "identifier: _msgSender [27794,27804]"
    },
    {
      "src": "assignment_expression [29960,29983]",
      "dest": "assignment_expression [29622,29645]"
    },
    {
      "src": "identifier: hash [24171,24175]",
      "dest": "identifier: hash [24170,24174]"
    },
    {
      "src": "pragma: pragma [21842,21848]",
      "dest": "pragma: pragma [21841,21847]"
    },
    {
      "src": "string [2682,2684]",
      "dest": "string [2681,2683]"
    },
    {
      "src": "pragma_directive [146,169]",
      "dest": "pragma_directive [145,168]"
    },
    {
      "src": "state_mutability [1277,1281]",
      "dest": "state_mutability [1276,1280]"
    },
    {
      "src": "solidity_version_comparison_operator [21857,21859]",
      "dest": "solidity_version_comparison_operator [21856,21858]"
    },
    {
      "src": "type_name [26789,26796]",
      "dest": "type_name [26788,26795]"
    },
    {
      "src": "): ) [16158,16159]",
      "dest": "): ) [16157,16158]"
    },
    {
      "src": "call_argument [27929,27945]",
      "dest": "call_argument [27928,27944]"
    },
    {
      "src": "identifier: target [6230,6236]",
      "dest": "identifier: target [6229,6235]"
    },
    {
      "src": "): ) [26484,26485]",
      "dest": "): ) [26483,26484]"
    },
    {
      "src": "): ) [7641,7642]",
      "dest": "): ) [7640,7641]"
    },
    {
      "src": "identifier: b [17772,17773]",
      "dest": "identifier: b [17771,17772]"
    },
    {
      "src": "\": \" [23927,23928]",
      "dest": "\": \" [23926,23927]"
    },
    {
      "src": ".: . [29154,29155]",
      "dest": ".: . [28816,28817]"
    },
    {
      "src": "uint256: uint256 [25983,25990]",
      "dest": "uint256: uint256 [25982,25989]"
    },
    {
      "src": "call_argument [14339,14380]",
      "dest": "call_argument [14338,14379]"
    },
    {
      "src": "(: ( [29152,29153]",
      "dest": "(: ( [28814,28815]"
    },
    {
      "src": "solidity_version: 0.8.0 [15109,15114]",
      "dest": "solidity_version: 0.8.0 [15108,15113]"
    },
    {
      "src": "parameter [6081,6098]",
      "dest": "parameter [6080,6097]"
    },
    {
      "src": "member_expression [5338,5349]",
      "dest": "member_expression [5337,5348]"
    },
    {
      "src": "struct_member [26862,26873]",
      "dest": "struct_member [26861,26872]"
    },
    {
      "src": "struct_field_assignment [2667,2680]",
      "dest": "struct_field_assignment [2666,2679]"
    },
    {
      "src": "string_literal [24356,24375]",
      "dest": "string_literal [24355,24374]"
    },
    {
      "src": "visibility [25414,25422]",
      "dest": "visibility [25413,25421]"
    },
    {
      "src": "bytes: bytes [22021,22026]",
      "dest": "bytes: bytes [22020,22025]"
    },
    {
      "src": "call_expression [23384,23452]",
      "dest": "call_expression [23383,23451]"
    },
    {
      "src": "parameter [16054,16061]",
      "dest": "parameter [16053,16060]"
    },
    {
      "src": "): ) [27443,27444]",
      "dest": "): ) [27442,27443]"
    },
    {
      "src": "return: return [5749,5755]",
      "dest": "return: return [5748,5754]"
    },
    {
      "src": "): ) [1295,1296]",
      "dest": "): ) [1294,1295]"
    },
    {
      "src": "call_argument [29743,29751]",
      "dest": "call_argument [29405,29413]"
    },
    {
      "src": ",: , [23582,23583]",
      "dest": ",: , [23581,23582]"
    },
    {
      "src": "comment: // This version of SafeMath should only be used with Solidity 0.8 or later, [15128,15203]",
      "dest": "comment: // This version of SafeMath should only be used with Solidity 0.8 or later, [15127,15202]"
    },
    {
      "src": "type_name [23000,23005]",
      "dest": "type_name [22999,23004]"
    },
    {
      "src": "(: ( [2556,2557]",
      "dest": "(: ( [2555,2556]"
    },
    {
      "src": "parenthesized_expression [8293,8307]",
      "dest": "parenthesized_expression [8292,8306]"
    },
    {
      "src": "{: { [15484,15485]",
      "dest": "{: { [15483,15484]"
    },
    {
      "src": "if_statement [11879,11944]",
      "dest": "if_statement [11878,11943]"
    },
    {
      "src": "=: = [5336,5337]",
      "dest": "=: = [5335,5336]"
    },
    {
      "src": "function_definition [14861,14954]",
      "dest": "function_definition [14860,14953]"
    },
    {
      "src": ",: , [29568,29569]",
      "dest": ",: , [29230,29231]"
    },
    {
      "src": "state_variable_declaration [25847,25869]",
      "dest": "state_variable_declaration [25846,25868]"
    },
    {
      "src": "}: } [23747,23748]",
      "dest": "}: } [23746,23747]"
    },
    {
      "src": "mapping: mapping [26598,26605]",
      "dest": "mapping: mapping [26597,26604]"
    },
    {
      "src": "identifier: token [26227,26232]",
      "dest": "identifier: token [26226,26231]"
    },
    {
      "src": "internal: internal [19419,19427]",
      "dest": "internal: internal [19418,19426]"
    },
    {
      "src": "type_name [25525,25532]",
      "dest": "type_name [25524,25531]"
    },
    {
      "src": "): ) [23709,23710]",
      "dest": "): ) [23708,23709]"
    },
    {
      "src": "memory: memory [29115,29121]",
      "dest": "memory: memory [28777,28783]"
    },
    {
      "src": "type_cast_expression [29164,29174]",
      "dest": "type_cast_expression [28826,28836]"
    },
    {
      "src": "identifier: x [29611,29612]",
      "dest": "identifier: x [29273,29274]"
    },
    {
      "src": "(: ( [11663,11664]",
      "dest": "(: ( [11662,11663]"
    },
    {
      "src": "identifier: target [3650,3656]",
      "dest": "identifier: target [3649,3655]"
    },
    {
      "src": "identifier: errorMessage [6326,6338]",
      "dest": "identifier: errorMessage [6325,6337]"
    },
    {
      "src": "struct_member [26882,26899]",
      "dest": "struct_member [26881,26898]"
    },
    {
      "src": "call_argument [27896,27928]",
      "dest": "call_argument [27895,27927]"
    },
    {
      "src": "identifier: onlyOwner [26675,26684]",
      "dest": "identifier: onlyOwner [26674,26683]"
    },
    {
      "src": "primitive_type [16054,16061]",
      "dest": "primitive_type [16053,16060]"
    },
    {
      "src": "): ) [23510,23511]",
      "dest": "): ) [23509,23510]"
    },
    {
      "src": ",: , [7530,7531]",
      "dest": ",: , [7529,7530]"
    },
    {
      "src": "block_statement [7666,7708]",
      "dest": "block_statement [7665,7707]"
    },
    {
      "src": "identifier: IERC20 [29371,29377]",
      "dest": "identifier: IERC20 [29033,29039]"
    },
    {
      "src": "type_name [26632,26636]",
      "dest": "type_name [26631,26635]"
    },
    {
      "src": "member_expression [29663,29670]",
      "dest": "member_expression [29325,29332]"
    },
    {
      "src": "returns: returns [5172,5179]",
      "dest": "returns: returns [5171,5178]"
    },
    {
      "src": "binary_expression [11663,11771]",
      "dest": "binary_expression [11662,11770]"
    },
    {
      "src": "false: false [16761,16766]",
      "dest": "false: false [16760,16765]"
    },
    {
      "src": ",: , [16151,16152]",
      "dest": ",: , [16150,16151]"
    },
    {
      "src": "identifier: sigS [24311,24315]",
      "dest": "identifier: sigS [24310,24314]"
    },
    {
      "src": "expression_statement [23060,23198]",
      "dest": "expression_statement [23059,23197]"
    },
    {
      "src": "function: function [24417,24425]",
      "dest": "function: function [24416,24424]"
    },
    {
      "src": ".: . [30078,30079]",
      "dest": ".: . [29740,29741]"
    },
    {
      "src": "external: external [25275,25283]",
      "dest": "external: external [25274,25282]"
    },
    {
      "src": "identifier: value [27972,27977]",
      "dest": "identifier: value [27971,27976]"
    },
    {
      "src": "type_name [6164,6169]",
      "dest": "type_name [6163,6168]"
    },
    {
      "src": "return_type_definition [24137,24151]",
      "dest": "return_type_definition [24136,24150]"
    },
    {
      "src": "type_name [25537,25541]",
      "dest": "type_name [25536,25540]"
    },
    {
      "src": "return_statement [23893,23970]",
      "dest": "return_statement [23892,23969]"
    },
    {
      "src": "payable: payable [2495,2502]",
      "dest": "payable: payable [2494,2501]"
    },
    {
      "src": "function_definition [19384,19480]",
      "dest": "function_definition [19383,19479]"
    },
    {
      "src": "(: ( [25641,25642]",
      "dest": "(: ( [25640,25641]"
    },
    {
      "src": "primitive_type [28270,28274]",
      "dest": "primitive_type [28269,28273]"
    },
    {
      "src": "identifier: balanceOf [25172,25181]",
      "dest": "identifier: balanceOf [25171,25180]"
    },
    {
      "src": "\": \" [24356,24357]",
      "dest": "\": \" [24355,24356]"
    },
    {
      "src": "type_name [20681,20688]",
      "dest": "type_name [20680,20687]"
    },
    {
      "src": ",: , [8212,8213]",
      "dest": ",: , [8211,8212]"
    },
    {
      "src": "+: + [17826,17827]",
      "dest": "+: + [17825,17826]"
    },
    {
      "src": "address: address [5056,5063]",
      "dest": "address: address [5055,5062]"
    },
    {
      "src": "identifier: require [29298,29305]",
      "dest": "identifier: require [28960,28967]"
    },
    {
      "src": "tuple_expression [16683,16692]",
      "dest": "tuple_expression [16682,16691]"
    },
    {
      "src": "identifier: spotted [26369,26376]",
      "dest": "identifier: spotted [26368,26375]"
    },
    {
      "src": "}: } [5362,5363]",
      "dest": "}: } [5361,5362]"
    },
    {
      "src": "identifier: symbol [29745,29751]",
      "dest": "identifier: symbol [29407,29413]"
    },
    {
      "src": "library_declaration [239,8326]",
      "dest": "library_declaration [238,8325]"
    },
    {
      "src": "parameter [7573,7599]",
      "dest": "parameter [7572,7598]"
    },
    {
      "src": "string_literal [30096,30119]",
      "dest": "string_literal [29758,29781]"
    },
    {
      "src": "identifier: owner [25863,25868]",
      "dest": "identifier: owner [25862,25867]"
    },
    {
      "src": "type_name [14507,14512]",
      "dest": "type_name [14506,14511]"
    },
    {
      "src": "type_name [30022,30037]",
      "dest": "type_name [29684,29699]"
    },
    {
      "src": "primitive_type [26234,26241]",
      "dest": "primitive_type [26233,26240]"
    },
    {
      "src": "\": \" [29278,29279]",
      "dest": "\": \" [28940,28941]"
    },
    {
      "src": "visibility [25335,25343]",
      "dest": "visibility [25334,25342]"
    },
    {
      "src": "visibility [25882,25888]",
      "dest": "visibility [25881,25887]"
    },
    {
      "src": "==: == [24509,24511]",
      "dest": "==: == [24508,24510]"
    },
    {
      "src": "expression_statement [29847,29878]",
      "dest": "expression_statement [29509,29540]"
    },
    {
      "src": "address: address [1251,1258]",
      "dest": "address: address [1250,1257]"
    },
    {
      "src": "type_name [18893,18900]",
      "dest": "type_name [18892,18899]"
    },
    {
      "src": ",: , [25322,25323]",
      "dest": ",: , [25321,25322]"
    },
    {
      "src": "(: ( [25598,25599]",
      "dest": "(: ( [25597,25598]"
    },
    {
      "src": "struct: struct [26759,26765]",
      "dest": "struct: struct [26758,26764]"
    },
    {
      "src": "comment: // mapping(address => uint256) public amountDeposited; [26492,26546]",
      "dest": "comment: // mapping(address => uint256) public amountDeposited; [26491,26545]"
    },
    {
      "src": "state_variable_declaration [22051,22094]",
      "dest": "state_variable_declaration [22050,22093]"
    },
    {
      "src": "(: ( [7735,7736]",
      "dest": "(: ( [7734,7735]"
    },
    {
      "src": "primitive_type [18848,18855]",
      "dest": "primitive_type [18847,18854]"
    },
    {
      "src": "{: { [14917,14918]",
      "dest": "{: { [14916,14917]"
    },
    {
      "src": "call_expression [30067,30120]",
      "dest": "call_expression [29729,29782]"
    },
    {
      "src": "primitive_type [25465,25472]",
      "dest": "primitive_type [25464,25471]"
    },
    {
      "src": "): ) [23881,23882]",
      "dest": "): ) [23880,23881]"
    },
    {
      "src": "uint256: uint256 [19397,19404]",
      "dest": "uint256: uint256 [19396,19403]"
    },
    {
      "src": "=: = [13386,13387]",
      "dest": "=: = [13385,13386]"
    },
    {
      "src": "identifier: setFees [29797,29804]",
      "dest": "identifier: setFees [29459,29466]"
    },
    {
      "src": ",: , [17101,17102]",
      "dest": ",: , [17100,17101]"
    },
    {
      "src": "return_statement [1514,1545]",
      "dest": "return_statement [1513,1544]"
    },
    {
      "src": "address: address [26395,26402]",
      "dest": "address: address [26394,26401]"
    },
    {
      "src": "=>: => [22067,22069]",
      "dest": "=>: => [22066,22068]"
    },
    {
      "src": "): ) [23450,23451]",
      "dest": "): ) [23449,23450]"
    },
    {
      "src": "expression_statement [14441,14472]",
      "dest": "expression_statement [14440,14471]"
    },
    {
      "src": "return_statement [3621,3701]",
      "dest": "return_statement [3620,3700]"
    },
    {
      "src": "function_body [24485,24927]",
      "dest": "function_body [24484,24926]"
    },
    {
      "src": "\": \" [2683,2684]",
      "dest": "\": \" [2682,2683]"
    },
    {
      "src": "parameter [22932,22962]",
      "dest": "parameter [22931,22961]"
    },
    {
      "src": "(: ( [23659,23660]",
      "dest": "(: ( [23658,23659]"
    },
    {
      "src": "type_cast_expression [28066,28076]",
      "dest": "type_cast_expression [28065,28075]"
    },
    {
      "src": "(: ( [25728,25729]",
      "dest": "(: ( [25727,25728]"
    },
    {
      "src": "parameter [18474,18483]",
      "dest": "parameter [18473,18482]"
    },
    {
      "src": "identifier: isTopLevelCall [11968,11982]",
      "dest": "identifier: isTopLevelCall [11967,11981]"
    },
    {
      "src": "primitive_type [21651,21658]",
      "dest": "primitive_type [21650,21657]"
    },
    {
      "src": "return_type_definition [21642,21659]",
      "dest": "return_type_definition [21641,21658]"
    },
    {
      "src": "identifier: initialize [26984,26994]",
      "dest": "identifier: initialize [26983,26993]"
    },
    {
      "src": "address: address [26789,26796]",
      "dest": "address: address [26788,26795]"
    },
    {
      "src": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain `call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [2786,3517]",
      "dest": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain `call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [2785,3516]"
    },
    {
      "src": "number_literal: 0 [29512,29513]",
      "dest": "number_literal: 0 [29174,29175]"
    },
    {
      "src": "=: = [24281,24282]",
      "dest": "=: = [24280,24281]"
    },
    {
      "src": "variable_declaration [16706,16715]",
      "dest": "variable_declaration [16705,16714]"
    },
    {
      "src": "call_argument [12050,12051]",
      "dest": "call_argument [12049,12050]"
    },
    {
      "src": "else: else [7709,7713]",
      "dest": "else: else [7708,7712]"
    },
    {
      "src": "identifier: add [17749,17752]",
      "dest": "identifier: add [17748,17751]"
    },
    {
      "src": "call_argument [7736,7746]",
      "dest": "call_argument [7735,7745]"
    },
    {
      "src": "}: } [18930,18931]",
      "dest": "}: } [18929,18930]"
    },
    {
      "src": "=: = [13345,13346]",
      "dest": "=: = [13344,13345]"
    },
    {
      "src": "(: ( [20671,20672]",
      "dest": "(: ( [20670,20671]"
    },
    {
      "src": "\": \" [11785,11786]",
      "dest": "\": \" [11784,11785]"
    },
    {
      "src": "): ) [1266,1267]",
      "dest": "): ) [1265,1266]"
    },
    {
      "src": "(: ( [6868,6869]",
      "dest": "(: ( [6867,6868]"
    },
    {
      "src": "): ) [22120,22121]",
      "dest": "): ) [22119,22120]"
    },
    {
      "src": "address: address [24512,24519]",
      "dest": "address: address [24511,24518]"
    },
    {
      "src": "identifier: msg [24600,24603]",
      "dest": "identifier: msg [24599,24602]"
    },
    {
      "src": "string_literal [23480,23510]",
      "dest": "string_literal [23479,23509]"
    },
    {
      "src": "call_expression [11642,11843]",
      "dest": "call_expression [11641,11842]"
    },
    {
      "src": "<: < [13229,13230]",
      "dest": "<: < [13228,13229]"
    },
    {
      "src": "\": \" [23195,23196]",
      "dest": "\": \" [23194,23195]"
    },
    {
      "src": "member_expression [26711,26721]",
      "dest": "member_expression [26710,26720]"
    },
    {
      "src": "visibility [20752,20760]",
      "dest": "visibility [20751,20759]"
    },
    {
      "src": "type_name [10863,10868]",
      "dest": "type_name [10862,10867]"
    },
    {
      "src": "identifier: AddressUpgradeable [11705,11723]",
      "dest": "identifier: AddressUpgradeable [11704,11722]"
    },
    {
      "src": "function_definition [14256,14535]",
      "dest": "function_definition [14255,14534]"
    },
    {
      "src": "parameter [17382,17389]",
      "dest": "parameter [17381,17388]"
    },
    {
      "src": "string_literal [2712,2772]",
      "dest": "string_literal [2711,2771]"
    },
    {
      "src": "boolean_literal [11929,11933]",
      "dest": "boolean_literal [11928,11932]"
    },
    {
      "src": "parameter [22972,22984]",
      "dest": "parameter [22971,22983]"
    },
    {
      "src": "type_name [26325,26331]",
      "dest": "type_name [26324,26330]"
    },
    {
      "src": "internal: internal [15664,15672]",
      "dest": "internal: internal [15663,15671]"
    },
    {
      "src": "identifier: _initializing [14934,14947]",
      "dest": "identifier: _initializing [14933,14946]"
    },
    {
      "src": "): ) [2648,2649]",
      "dest": "): ) [2647,2648]"
    },
    {
      "src": "identifier: depositer [29559,29568]",
      "dest": "identifier: depositer [29221,29230]"
    },
    {
      "src": "uint256: uint256 [16993,17000]",
      "dest": "uint256: uint256 [16992,16999]"
    },
    {
      "src": ",: , [24234,24235]",
      "dest": ",: , [24233,24234]"
    },
    {
      "src": "identifier: _receiver [29974,29983]",
      "dest": "identifier: _receiver [29636,29645]"
    },
    {
      "src": "identifier: _spotter [28426,28434]",
      "dest": "identifier: _spotter [28456,28464]"
    },
    {
      "src": "identifier: returndata [6869,6879]",
      "dest": "identifier: returndata [6868,6878]"
    },
    {
      "src": "member_expression [27968,27977]",
      "dest": "member_expression [27967,27976]"
    },
    {
      "src": "true: true [16792,16796]",
      "dest": "true: true [16791,16795]"
    },
    {
      "src": "comment: /**      * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.      */ [14751,14856]",
      "dest": "comment: /**      * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.      */ [14750,14855]"
    },
    {
      "src": "bytes: bytes [7801,7806]",
      "dest": "bytes: bytes [7800,7805]"
    },
    {
      "src": "(: ( [11649,11650]",
      "dest": "(: ( [11648,11649]"
    },
    {
      "src": "type: type [14456,14460]",
      "dest": "type: type [14455,14459]"
    },
    {
      "src": "address: address [26201,26208]",
      "dest": "address: address [26200,26207]"
    },
    {
      "src": "type_name [25668,25675]",
      "dest": "type_name [25667,25674]"
    },
    {
      "src": "]: ] [29135,29136]",
      "dest": "]: ] [28797,28798]"
    },
    {
      "src": "{: { [27390,27391]",
      "dest": "{: { [27389,27390]"
    },
    {
      "src": "string: string [27404,27410]",
      "dest": "string: string [27403,27409]"
    },
    {
      "src": "call_argument [3658,3662]",
      "dest": "call_argument [3657,3661]"
    },
    {
      "src": "state_mutability [20046,20050]",
      "dest": "state_mutability [20045,20049]"
    },
    {
      "src": "): ) [22150,22151]",
      "dest": "): ) [22149,22150]"
    },
    {
      "src": "call_argument [29397,29404]",
      "dest": "call_argument [29059,29066]"
    },
    {
      "src": "uint256: uint256 [18848,18855]",
      "dest": "uint256: uint256 [18847,18854]"
    },
    {
      "src": "return_statement [4667,4762]",
      "dest": "return_statement [4666,4761]"
    },
    {
      "src": "if: if [17076,17078]",
      "dest": "if: if [17075,17077]"
    },
    {
      "src": ",: , [22930,22931]",
      "dest": ",: , [22929,22930]"
    },
    {
      "src": "-: - [20155,20156]",
      "dest": "-: - [20154,20155]"
    },
    {
      "src": "visibility [23674,23682]",
      "dest": "visibility [23673,23681]"
    },
    {
      "src": "identifier: errorMessage [7587,7599]",
      "dest": "identifier: errorMessage [7586,7598]"
    },
    {
      "src": ".: . [29255,29256]",
      "dest": ".: . [28917,28918]"
    },
    {
      "src": "primitive_type [14507,14512]",
      "dest": "primitive_type [14506,14511]"
    },
    {
      "src": "(: ( [23252,23253]",
      "dest": "(: ( [23251,23252]"
    },
    {
      "src": "call_argument [24356,24375]",
      "dest": "call_argument [24355,24374]"
    },
    {
      "src": "pure: pure [7615,7619]",
      "dest": "pure: pure [7614,7618]"
    },
    {
      "src": "): ) [27701,27702]",
      "dest": "): ) [27700,27701]"
    },
    {
      "src": "(: ( [5180,5181]",
      "dest": "(: ( [5179,5180]"
    },
    {
      "src": "member_expression [29371,29395]",
      "dest": "member_expression [29033,29057]"
    },
    {
      "src": "view: view [25344,25348]",
      "dest": "view: view [25343,25347]"
    },
    {
      "src": "identifier: isContract [11724,11734]",
      "dest": "identifier: isContract [11723,11733]"
    },
    {
      "src": "): ) [17773,17774]",
      "dest": "): ) [17772,17773]"
    },
    {
      "src": "identifier: sigR [22980,22984]",
      "dest": "identifier: sigR [22979,22983]"
    },
    {
      "src": "returns: returns [22134,22141]",
      "dest": "returns: returns [22133,22140]"
    },
    {
      "src": "public: public [23012,23018]",
      "dest": "public: public [23011,23017]"
    },
    {
      "src": "function: function [6634,6642]",
      "dest": "function: function [6633,6641]"
    },
    {
      "src": ".: . [29379,29380]",
      "dest": ".: . [29041,29042]"
    },
    {
      "src": "(: ( [11882,11883]",
      "dest": "(: ( [11881,11882]"
    },
    {
      "src": "identifier: success [5302,5309]",
      "dest": "identifier: success [5301,5308]"
    },
    {
      "src": "return: return [17119,17125]",
      "dest": "return: return [17118,17124]"
    },
    {
      "src": "primitive_type [6057,6064]",
      "dest": "primitive_type [6056,6063]"
    },
    {
      "src": "return_statement [23612,23630]",
      "dest": "return_statement [23611,23629]"
    },
    {
      "src": "identifier: _amount [25483,25490]",
      "dest": "identifier: _amount [25482,25489]"
    },
    {
      "src": "primitive_type [23998,24005]",
      "dest": "primitive_type [23997,24004]"
    },
    {
      "src": "public: public [22122,22128]",
      "dest": "public: public [22121,22127]"
    },
    {
      "src": "<: < [14408,14409]",
      "dest": "<: < [14407,14408]"
    },
    {
      "src": "function: function [1231,1239]",
      "dest": "function: function [1230,1238]"
    },
    {
      "src": "parameter [25310,25322]",
      "dest": "parameter [25309,25321]"
    },
    {
      "src": "inheritance_specifier [25807,25827]",
      "dest": "inheritance_specifier [25806,25826]"
    },
    {
      "src": "{: { [17042,17043]",
      "dest": "{: { [17041,17042]"
    },
    {
      "src": "call_argument [2703,2710]",
      "dest": "call_argument [2702,2709]"
    },
    {
      "src": "identifier: token [26403,26408]",
      "dest": "identifier: token [26402,26407]"
    },
    {
      "src": "expression_statement [11998,12020]",
      "dest": "expression_statement [11997,12019]"
    },
    {
      "src": "): ) [23968,23969]",
      "dest": "): ) [23967,23968]"
    },
    {
      "src": ",: , [2512,2513]",
      "dest": ",: , [2511,2512]"
    },
    {
      "src": "identifier: returndata [8171,8181]",
      "dest": "identifier: returndata [8170,8180]"
    },
    {
      "src": ",: , [22962,22963]",
      "dest": ",: , [22961,22962]"
    },
    {
      "src": "number_literal: 0 [1543,1544]",
      "dest": "number_literal: 0 [1542,1543]"
    },
    {
      "src": "state_mutability [19428,19432]",
      "dest": "state_mutability [19427,19431]"
    },
    {
      "src": ">: > [16103,16104]",
      "dest": ">: > [16102,16103]"
    },
    {
      "src": "meta_type_expression [14456,14467]",
      "dest": "meta_type_expression [14455,14466]"
    },
    {
      "src": ",: , [17450,17451]",
      "dest": ",: , [17449,17450]"
    },
    {
      "src": ",: , [4001,4002]",
      "dest": ",: , [4000,4001]"
    },
    {
      "src": "primitive_type [26570,26574]",
      "dest": "primitive_type [26569,26573]"
    },
    {
      "src": "function: function [14861,14869]",
      "dest": "function: function [14860,14868]"
    },
    {
      "src": "identifier: b [17429,17430]",
      "dest": "identifier: b [17428,17429]"
    },
    {
      "src": "primitive_type [22972,22979]",
      "dest": "primitive_type [22971,22978]"
    },
    {
      "src": "type_cast_expression [5213,5226]",
      "dest": "type_cast_expression [5212,5225]"
    },
    {
      "src": "memory: memory [4649,4655]",
      "dest": "memory: memory [4648,4654]"
    },
    {
      "src": "call_argument [5413,5419]",
      "dest": "call_argument [5412,5418]"
    },
    {
      "src": "primitive_type [3544,3551]",
      "dest": "primitive_type [3543,3550]"
    },
    {
      "src": "(: ( [25356,25357]",
      "dest": "(: ( [25355,25356]"
    },
    {
      "src": "): ) [23010,23011]",
      "dest": "): ) [23009,23010]"
    },
    {
      "src": "primitive_type [5080,5085]",
      "dest": "primitive_type [5079,5084]"
    },
    {
      "src": "primitive_type [5683,5688]",
      "dest": "primitive_type [5682,5687]"
    },
    {
      "src": "variable_declaration [29102,29123]",
      "dest": "variable_declaration [28764,28785]"
    },
    {
      "src": "string: string [20719,20725]",
      "dest": "string: string [20718,20724]"
    },
    {
      "src": "type_name [25906,25913]",
      "dest": "type_name [25905,25912]"
    },
    {
      "src": "primitive_type [26377,26384]",
      "dest": "primitive_type [26376,26383]"
    },
    {
      "src": "string [23480,23510]",
      "dest": "string [23479,23509]"
    },
    {
      "src": "yul_evm_builtin [24776,24779]",
      "dest": "yul_evm_builtin [24775,24778]"
    },
    {
      "src": "address: address [29164,29171]",
      "dest": "address: address [28826,28833]"
    },
    {
      "src": "return_statement [7164,7182]",
      "dest": "return_statement [7163,7181]"
    },
    {
      "src": "parameter [21595,21621]",
      "dest": "parameter [21594,21620]"
    },
    {
      "src": "identifier: _initializing [13199,13212]",
      "dest": "identifier: _initializing [13198,13211]"
    },
    {
      "src": "identifier: depositer [29425,29434]",
      "dest": "identifier: depositer [29087,29096]"
    },
    {
      "src": "call_argument [27992,28023]",
      "dest": "call_argument [27991,28022]"
    },
    {
      "src": "string_literal [29322,29332]",
      "dest": "string_literal [28984,28994]"
    },
    {
      "src": "identifier: transfer [25378,25386]",
      "dest": "identifier: transfer [25377,25385]"
    },
    {
      "src": "primitive_type [16340,16347]",
      "dest": "primitive_type [16339,16346]"
    },
    {
      "src": "identifier: userAddress [22919,22930]",
      "dest": "identifier: userAddress [22918,22929]"
    },
    {
      "src": "primitive_type [25599,25606]",
      "dest": "primitive_type [25598,25605]"
    },
    {
      "src": "external: external [25551,25559]",
      "dest": "external: external [25550,25558]"
    },
    {
      "src": "identifier: length [29075,29081]",
      "dest": "identifier: length [28737,28743]"
    },
    {
      "src": "expression_statement [20818,20847]",
      "dest": "expression_statement [20817,20846]"
    },
    {
      "src": "call_expression [21694,21722]",
      "dest": "call_expression [21693,21721]"
    },
    {
      "src": "(: ( [24196,24197]",
      "dest": "(: ( [24195,24196]"
    },
    {
      "src": "identifier: multipleToken [29474,29487]",
      "dest": "identifier: multipleToken [29136,29149]"
    },
    {
      "src": "function_definition [29788,29884]",
      "dest": "function_definition [29450,29546]"
    },
    {
      "src": "parameter [17033,17040]",
      "dest": "parameter [17032,17039]"
    },
    {
      "src": "): ) [27450,27451]",
      "dest": "): ) [27449,27450]"
    },
    {
      "src": "member_expression [29378,29385]",
      "dest": "member_expression [29040,29047]"
    },
    {
      "src": "primitive_type [24469,24476]",
      "dest": "primitive_type [24468,24475]"
    },
    {
      "src": ",: , [28180,28181]",
      "dest": ",: , [28179,28180]"
    },
    {
      "src": ",: , [26232,26233]",
      "dest": ",: , [26231,26232]"
    },
    {
      "src": "function_definition [25654,25709]",
      "dest": "function_definition [25653,25708]"
    },
    {
      "src": "string: string [27465,27471]",
      "dest": "string: string [27464,27470]"
    },
    {
      "src": "view: view [22129,22133]",
      "dest": "view: view [22128,22132]"
    },
    {
      "src": "identifier: b [18482,18483]",
      "dest": "identifier: b [18481,18482]"
    },
    {
      "src": "bytes: bytes [5080,5085]",
      "dest": "bytes: bytes [5079,5084]"
    },
    {
      "src": "identifier: data [24566,24570]",
      "dest": "identifier: data [24565,24569]"
    },
    {
      "src": "{: { [7714,7715]",
      "dest": "{: { [7713,7714]"
    },
    {
      "src": "external: external [25019,25027]",
      "dest": "external: external [25018,25026]"
    },
    {
      "src": "primitive_type [24163,24170]",
      "dest": "primitive_type [24162,24169]"
    },
    {
      "src": ",: , [27991,27992]",
      "dest": ",: , [27990,27991]"
    },
    {
      "src": "event_paramater [26294,26307]",
      "dest": "event_paramater [26293,26306]"
    },
    {
      "src": "primitive_type [23837,23844]",
      "dest": "primitive_type [23836,23843]"
    },
    {
      "src": "call_argument [24352,24353]",
      "dest": "call_argument [24351,24352]"
    },
    {
      "src": "}: } [7771,7772]",
      "dest": "}: } [7770,7771]"
    },
    {
      "src": "state_mutability [18151,18155]",
      "dest": "state_mutability [18150,18154]"
    },
    {
      "src": "call_argument [6305,6312]",
      "dest": "call_argument [6304,6311]"
    },
    {
      "src": "{: { [17807,17808]",
      "dest": "{: { [17806,17807]"
    },
    {
      "src": "parameter [21651,21658]",
      "dest": "parameter [21650,21657]"
    },
    {
      "src": "uint256: uint256 [18474,18481]",
      "dest": "uint256: uint256 [18473,18480]"
    },
    {
      "src": "expression_statement [29371,29447]",
      "dest": "expression_statement [29033,29109]"
    },
    {
      "src": "call_expression [6230,6253]",
      "dest": "call_expression [6229,6252]"
    },
    {
      "src": "yul_identifier [8146,8161]",
      "dest": "yul_identifier [8145,8160]"
    },
    {
      "src": "type_name [26276,26283]",
      "dest": "type_name [26275,26282]"
    },
    {
      "src": "user_defined_type [26934,26946]",
      "dest": "user_defined_type [26933,26945]"
    },
    {
      "src": "function: function [6020,6028]",
      "dest": "function: function [6019,6027]"
    },
    {
      "src": "identifier: to [25395,25397]",
      "dest": "identifier: to [25394,25396]"
    },
    {
      "src": "identifier: check [26415,26420]",
      "dest": "identifier: check [26414,26419]"
    },
    {
      "src": "identifier: x [29219,29220]",
      "dest": "identifier: x [28881,28882]"
    },
    {
      "src": ".: . [11723,11724]",
      "dest": ".: . [11722,11723]"
    },
    {
      "src": "identifier: owner [28287,28292]",
      "dest": "identifier: owner [28286,28291]"
    },
    {
      "src": "member_expression [24562,24570]",
      "dest": "member_expression [24561,24569]"
    },
    {
      "src": "call_expression [28978,29033]",
      "dest": "call_expression [28640,28695]"
    },
    {
      "src": "identifier: token [27809,27814]",
      "dest": "identifier: token [27808,27813]"
    },
    {
      "src": "bytes32: bytes32 [22986,22993]",
      "dest": "bytes32: bytes32 [22985,22992]"
    },
    {
      "src": "call_argument [23563,23582]",
      "dest": "call_argument [23562,23581]"
    },
    {
      "src": "(: ( [4642,4643]",
      "dest": "(: ( [4641,4642]"
    },
    {
      "src": "bool: bool [26410,26414]",
      "dest": "bool: bool [26409,26413]"
    },
    {
      "src": "identifier: sigV [24299,24303]",
      "dest": "identifier: sigV [24298,24302]"
    },
    {
      "src": "contract_declaration [10711,14956]",
      "dest": "contract_declaration [10710,14955]"
    },
    {
      "src": "call_argument [4132,4144]",
      "dest": "call_argument [4131,4143]"
    },
    {
      "src": "}: } [14744,14745]",
      "dest": "}: } [14743,14744]"
    },
    {
      "src": "): ) [15700,15701]",
      "dest": "): ) [15699,15700]"
    },
    {
      "src": "type_name [13165,13170]",
      "dest": "type_name [13164,13169]"
    },
    {
      "src": "identifier: b [17350,17351]",
      "dest": "identifier: b [17349,17350]"
    },
    {
      "src": "string_literal [13706,13751]",
      "dest": "string_literal [13705,13750]"
    },
    {
      "src": "identifier: msg [28079,28082]",
      "dest": "identifier: msg [28078,28081]"
    },
    {
      "src": "return_type_definition [24461,24484]",
      "dest": "return_type_definition [24460,24483]"
    },
    {
      "src": "identifier: isSpotter [28493,28502]",
      "dest": "identifier: isSpotter [28523,28532]"
    },
    {
      "src": "call_argument [21709,21721]",
      "dest": "call_argument [21708,21720]"
    },
    {
      "src": "call_expression [27041,27053]",
      "dest": "call_expression [27040,27052]"
    },
    {
      "src": "identifier: call [5345,5349]",
      "dest": "identifier: call [5344,5348]"
    },
    {
      "src": "primitive_type [5667,5674]",
      "dest": "primitive_type [5666,5673]"
    },
    {
      "src": "}: } [14534,14535]",
      "dest": "}: } [14533,14534]"
    },
    {
      "src": "mload: mload [8165,8170]",
      "dest": "mload: mload [8164,8169]"
    },
    {
      "src": "): ) [29332,29333]",
      "dest": "): ) [28994,28995]"
    },
    {
      "src": "{: { [22152,22153]",
      "dest": "{: { [22151,22152]"
    },
    {
      "src": "parameter [23000,23010]",
      "dest": "parameter [22999,23009]"
    },
    {
      "src": "function_definition [5016,5462]",
      "dest": "function_definition [5015,5461]"
    },
    {
      "src": "==: == [17431,17433]",
      "dest": "==: == [17430,17432]"
    },
    {
      "src": "private: private [10869,10876]",
      "dest": "private: private [10868,10875]"
    },
    {
      "src": "revert: revert [8199,8205]",
      "dest": "revert: revert [8198,8204]"
    },
    {
      "src": "array_access [23229,23248]",
      "dest": "array_access [23228,23247]"
    },
    {
      "src": "identifier: prefixed [24178,24186]",
      "dest": "identifier: prefixed [24177,24185]"
    },
    {
      "src": "identifier: _ [13762,13763]",
      "dest": "identifier: _ [13761,13762]"
    },
    {
      "src": "): ) [26637,26638]",
      "dest": "): ) [26636,26637]"
    },
    {
      "src": "type_name [23035,23040]",
      "dest": "type_name [23034,23039]"
    },
    {
      "src": "boolean_literal [29317,29321]",
      "dest": "boolean_literal [28979,28983]"
    },
    {
      "src": "type_name [26219,26226]",
      "dest": "type_name [26218,26225]"
    },
    {
      "src": ".: . [29744,29745]",
      "dest": ".: . [29406,29407]"
    },
    {
      "src": "call_expression [28052,28064]",
      "dest": "call_expression [28051,28063]"
    },
    {
      "src": "false [15786,15791]",
      "dest": "false [15785,15790]"
    },
    {
      "src": "state_mutability [27224,27231]",
      "dest": "state_mutability [27223,27230]"
    },
    {
      "src": "): ) [24315,24316]",
      "dest": "): ) [24314,24315]"
    },
    {
      "src": "variable_declaration [24584,24597]",
      "dest": "variable_declaration [24583,24596]"
    },
    {
      "src": "[: [ [28502,28503]",
      "dest": "[: [ [28532,28533]"
    },
    {
      "src": "type_name [11596,11600]",
      "dest": "type_name [11595,11599]"
    },
    {
      "src": "function_body [3611,3707]",
      "dest": "function_body [3610,3706]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [18937,19379]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [18936,19378]"
    },
    {
      "src": "type_name [26234,26241]",
      "dest": "type_name [26233,26240]"
    },
    {
      "src": "): ) [23601,23602]",
      "dest": "): ) [23600,23601]"
    },
    {
      "src": "parameter [5056,5070]",
      "dest": "parameter [5055,5069]"
    },
    {
      "src": ",: , [26341,26342]",
      "dest": ",: , [26340,26341]"
    },
    {
      "src": "variable_declaration [27404,27428]",
      "dest": "variable_declaration [27403,27427]"
    },
    {
      "src": "string: string [26882,26888]",
      "dest": "string: string [26881,26887]"
    },
    {
      "src": "parameter [25221,25225]",
      "dest": "parameter [25220,25224]"
    },
    {
      "src": "uint8: uint8 [14507,14512]",
      "dest": "uint8: uint8 [14506,14511]"
    },
    {
      "src": "primitive_type [21576,21583]",
      "dest": "primitive_type [21575,21582]"
    },
    {
      "src": "yul_function_call [24786,24803]",
      "dest": "yul_function_call [24785,24802]"
    },
    {
      "src": "primitive_type [5181,5186]",
      "dest": "primitive_type [5180,5185]"
    },
    {
      "src": "): ) [6789,6790]",
      "dest": "): ) [6788,6789]"
    },
    {
      "src": ">=: >= [2579,2581]",
      "dest": ">=: >= [2578,2580]"
    },
    {
      "src": "if_statement [15767,15796]",
      "dest": "if_statement [15766,15795]"
    },
    {
      "src": "payable: payable [25855,25862]",
      "dest": "payable: payable [25854,25861]"
    },
    {
      "src": ",: , [24795,24796]",
      "dest": ",: , [24794,24795]"
    },
    {
      "src": "(: ( [29395,29396]",
      "dest": "(: ( [29057,29058]"
    },
    {
      "src": "call_argument [6248,6252]",
      "dest": "call_argument [6247,6251]"
    },
    {
      "src": "string: string [7826,7832]",
      "dest": "string: string [7825,7831]"
    },
    {
      "src": "binary_expression [13216,13238]",
      "dest": "binary_expression [13215,13237]"
    },
    {
      "src": "member_expression [23910,23926]",
      "dest": "member_expression [23909,23925]"
    },
    {
      "src": "type_name [24163,24170]",
      "dest": "type_name [24162,24169]"
    },
    {
      "src": "call_expression [4674,4761]",
      "dest": "call_expression [4673,4760]"
    },
    {
      "src": "address: address [25874,25881]",
      "dest": "address: address [25873,25880]"
    },
    {
      "src": "type_name [23837,23844]",
      "dest": "type_name [23836,23843]"
    },
    {
      "src": "function_definition [18107,18203]",
      "dest": "function_definition [18106,18202]"
    },
    {
      "src": "identifier: mod [19393,19396]",
      "dest": "identifier: mod [19392,19395]"
    },
    {
      "src": "function_definition [25369,25423]",
      "dest": "function_definition [25368,25422]"
    },
    {
      "src": "primitive_type [15642,15649]",
      "dest": "primitive_type [15641,15648]"
    },
    {
      "src": "for_statement [29043,29776]",
      "dest": "for_statement [28705,29438]"
    },
    {
      "src": "(: ( [25121,25122]",
      "dest": "(: ( [25120,25121]"
    },
    {
      "src": "): ) [25412,25413]",
      "dest": "): ) [25411,25412]"
    },
    {
      "src": "visibility [25698,25706]",
      "dest": "visibility [25697,25705]"
    },
    {
      "src": "uint8: uint8 [14461,14466]",
      "dest": "uint8: uint8 [14460,14465]"
    },
    {
      "src": "primitive_type [25261,25265]",
      "dest": "primitive_type [25260,25264]"
    },
    {
      "src": "identifier: sendValue [2477,2486]",
      "dest": "identifier: sendValue [2476,2485]"
    },
    {
      "src": "returns: returns [21642,21649]",
      "dest": "returns: returns [21641,21648]"
    },
    {
      "src": "type_name [23998,24005]",
      "dest": "type_name [23997,24004]"
    },
    {
      "src": "payable: payable [23563,23570]",
      "dest": "payable: payable [23562,23569]"
    },
    {
      "src": "(: ( [27794,27795]",
      "dest": "(: ( [27793,27794]"
    },
    {
      "src": "primitive_type [20004,20010]",
      "dest": "primitive_type [20003,20009]"
    },
    {
      "src": "primitive_type [16982,16989]",
      "dest": "primitive_type [16981,16988]"
    },
    {
      "src": ",: , [2646,2647]",
      "dest": ",: , [2645,2646]"
    },
    {
      "src": "returns: returns [5716,5723]",
      "dest": "returns: returns [5715,5722]"
    },
    {
      "src": "primitive_type [20700,20707]",
      "dest": "primitive_type [20699,20706]"
    },
    {
      "src": "parenthesized_expression [11663,11699]",
      "dest": "parenthesized_expression [11662,11698]"
    },
    {
      "src": "chainid: chainid [22211,22218]",
      "dest": "chainid: chainid [22210,22217]"
    },
    {
      "src": "if: if [29150,29152]",
      "dest": "if: if [28812,28814]"
    },
    {
      "src": "call_argument [4115,4121]",
      "dest": "call_argument [4114,4120]"
    },
    {
      "src": ":: : [29238,29239]",
      "dest": ":: : [28900,28901]"
    },
    {
      "src": "call_argument [27387,27388]",
      "dest": "call_argument [27386,27387]"
    },
    {
      "src": "): ) [15794,15795]",
      "dest": "): ) [15793,15794]"
    },
    {
      "src": "returns: returns [6805,6812]",
      "dest": "returns: returns [6804,6811]"
    },
    {
      "src": ",: , [19406,19407]",
      "dest": ",: , [19405,19406]"
    },
    {
      "src": "parameter [27200,27213]",
      "dest": "parameter [27199,27212]"
    },
    {
      "src": "call_argument [23480,23510]",
      "dest": "call_argument [23479,23509]"
    },
    {
      "src": ",: , [7824,7825]",
      "dest": ",: , [7823,7824]"
    },
    {
      "src": "function: function [3522,3530]",
      "dest": "function: function [3521,3529]"
    },
    {
      "src": "identifier: addSpotter [28407,28417]",
      "dest": "identifier: addSpotter [28437,28447]"
    },
    {
      "src": "member_expression [28119,28128]",
      "dest": "member_expression [28118,28127]"
    },
    {
      "src": "number_literal: 10000000000000000 [27090,27107]",
      "dest": "number_literal: 10000000000000000 [27089,27106]"
    },
    {
      "src": ".: . [27754,27755]",
      "dest": ".: . [27753,27754]"
    },
    {
      "src": ",: , [24303,24304]",
      "dest": ",: , [24302,24303]"
    },
    {
      "src": "identifier: functionCallWithValue [3628,3649]",
      "dest": "identifier: functionCallWithValue [3627,3648]"
    },
    {
      "src": "bytes: bytes [7629,7634]",
      "dest": "bytes: bytes [7628,7633]"
    },
    {
      "src": "(: ( [16339,16340]",
      "dest": "(: ( [16338,16339]"
    },
    {
      "src": "function_definition [25050,25098]",
      "dest": "function_definition [25049,25097]"
    },
    {
      "src": "external: external [29819,29827]",
      "dest": "external: external [29481,29489]"
    },
    {
      "src": "state_mutability [17362,17366]",
      "dest": "state_mutability [17361,17365]"
    },
    {
      "src": "(: ( [4695,4696]",
      "dest": "(: ( [4694,4695]"
    },
    {
      "src": "identifier: a [16718,16719]",
      "dest": "identifier: a [16717,16718]"
    },
    {
      "src": "primitive_type [25684,25688]",
      "dest": "primitive_type [25683,25687]"
    },
    {
      "src": "bytes32: bytes32 [24099,24106]",
      "dest": "bytes32: bytes32 [24098,24105]"
    },
    {
      "src": "type_cast_expression [27379,27389]",
      "dest": "type_cast_expression [27378,27388]"
    },
    {
      "src": ",: , [7102,7103]",
      "dest": ",: , [7101,7102]"
    },
    {
      "src": "identifier: depositer [26385,26394]",
      "dest": "identifier: depositer [26384,26393]"
    },
    {
      "src": "\": \" [29011,29012]",
      "dest": "\": \" [28673,28674]"
    },
    {
      "src": "parameter [6703,6715]",
      "dest": "parameter [6702,6714]"
    },
    {
      "src": "binary_expression [19468,19473]",
      "dest": "binary_expression [19467,19472]"
    },
    {
      "src": "identifier: msg [24562,24565]",
      "dest": "identifier: msg [24561,24564]"
    },
    {
      "src": "expression_statement [13762,13764]",
      "dest": "expression_statement [13761,13763]"
    },
    {
      "src": "yul_evm_builtin [24780,24785]",
      "dest": "yul_evm_builtin [24779,24784]"
    },
    {
      "src": "type_name [16340,16347]",
      "dest": "type_name [16339,16346]"
    },
    {
      "src": "{: { [20784,20785]",
      "dest": "{: { [20783,20784]"
    },
    {
      "src": "if_statement [24495,24921]",
      "dest": "if_statement [24494,24920]"
    },
    {
      "src": "state_mutability [23683,23687]",
      "dest": "state_mutability [23682,23686]"
    },
    {
      "src": "internal: internal [14288,14296]",
      "dest": "internal: internal [14287,14295]"
    },
    {
      "src": "): ) [14886,14887]",
      "dest": "): ) [14885,14886]"
    },
    {
      "src": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [16434,16513]",
      "dest": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [16433,16512]"
    },
    {
      "src": "[: [ [26946,26947]",
      "dest": "[: [ [26945,26946]"
    },
    {
      "src": "variable_declaration [22162,22172]",
      "dest": "variable_declaration [22161,22171]"
    },
    {
      "src": "}: } [8256,8257]",
      "dest": "}: } [8255,8256]"
    },
    {
      "src": "return_type_definition [20766,20783]",
      "dest": "return_type_definition [20765,20782]"
    },
    {
      "src": "external: external [25414,25422]",
      "dest": "external: external [25413,25421]"
    },
    {
      "src": ",: , [26323,26324]",
      "dest": ",: , [26322,26323]"
    },
    {
      "src": "identifier: b [16359,16360]",
      "dest": "identifier: b [16358,16359]"
    },
    {
      "src": ".: . [24603,24604]",
      "dest": ".: . [24602,24603]"
    },
    {
      "src": "identifier: target [7095,7101]",
      "dest": "identifier: target [7094,7100]"
    },
    {
      "src": "(: ( [8209,8210]",
      "dest": "(: ( [8208,8209]"
    },
    {
      "src": "binary_expression [7943,7964]",
      "dest": "binary_expression [7942,7963]"
    },
    {
      "src": "block_statement [6893,7151]",
      "dest": "block_statement [6892,7150]"
    },
    {
      "src": "uint256: uint256 [16706,16713]",
      "dest": "uint256: uint256 [16705,16712]"
    },
    {
      "src": "internal: internal [1268,1276]",
      "dest": "internal: internal [1267,1275]"
    },
    {
      "src": "bool: bool [6703,6707]",
      "dest": "bool: bool [6702,6706]"
    },
    {
      "src": "type_name [14702,14707]",
      "dest": "type_name [14701,14706]"
    },
    {
      "src": "bool: bool [11596,11600]",
      "dest": "bool: bool [11595,11599]"
    },
    {
      "src": "primitive_type [25729,25733]",
      "dest": "primitive_type [25728,25732]"
    },
    {
      "src": "(: ( [24387,24388]",
      "dest": "(: ( [24386,24387]"
    },
    {
      "src": "}: } [7261,7262]",
      "dest": "}: } [7260,7261]"
    },
    {
      "src": "visibility [25066,25074]",
      "dest": "visibility [25065,25073]"
    },
    {
      "src": "call_argument [29306,29321]",
      "dest": "call_argument [28968,28983]"
    },
    {
      "src": "identifier: keccak256 [24187,24196]",
      "dest": "identifier: keccak256 [24186,24195]"
    },
    {
      "src": "type_name [16054,16061]",
      "dest": "type_name [16053,16060]"
    },
    {
      "src": ",: , [29321,29322]",
      "dest": ",: , [28983,28984]"
    },
    {
      "src": "call_expression [23900,23969]",
      "dest": "call_expression [23899,23968]"
    },
    {
      "src": "identifier: recipient [2503,2512]",
      "dest": "identifier: recipient [2502,2511]"
    },
    {
      "src": "==: == [30086,30088]",
      "dest": "==: == [29748,29750]"
    },
    {
      "src": "function: function [17740,17748]",
      "dest": "function: function [17739,17747]"
    },
    {
      "src": "identifier: errorMessage [6122,6134]",
      "dest": "identifier: errorMessage [6121,6133]"
    },
    {
      "src": "}: } [26751,26752]",
      "dest": "}: } [26750,26751]"
    },
    {
      "src": "bool: bool [5297,5301]",
      "dest": "bool: bool [5296,5300]"
    },
    {
      "src": "parameter [19408,19417]",
      "dest": "parameter [19407,19416]"
    },
    {
      "src": "call_expression [5386,5455]",
      "dest": "call_expression [5385,5454]"
    },
    {
      "src": "return: return [16139,16145]",
      "dest": "return: return [16138,16144]"
    },
    {
      "src": "primitive_type [26559,26566]",
      "dest": "primitive_type [26558,26565]"
    },
    {
      "src": "internal: internal [14888,14896]",
      "dest": "internal: internal [14887,14895]"
    },
    {
      "src": "identifier: msg [27538,27541]",
      "dest": "identifier: msg [27537,27540]"
    },
    {
      "src": "type_name [29914,29921]",
      "dest": "type_name [29576,29583]"
    },
    {
      "src": "return: return [15778,15784]",
      "dest": "return: return [15777,15783]"
    },
    {
      "src": "function_body [20784,20889]",
      "dest": "function_body [20783,20888]"
    },
    {
      "src": "): ) [26248,26249]",
      "dest": "): ) [26247,26248]"
    },
    {
      "src": "): ) [28063,28064]",
      "dest": "): ) [28062,28063]"
    },
    {
      "src": "if_statement [7939,8318]",
      "dest": "if_statement [7938,8317]"
    },
    {
      "src": "identifier: verify [23991,23997]",
      "dest": "identifier: verify [23990,23996]"
    },
    {
      "src": "comment: /**      * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.      * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized      * to any version. It is recommended to use this to lock implementation contracts that are designed to be called      * through proxies.      *      * Emits an {Initialized} event the first time it is successfully executed.      */ [13776,14251]",
      "dest": "comment: /**      * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.      * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized      * to any version. It is recommended to use this to lock implementation contracts that are designed to be called      * through proxies.      *      * Emits an {Initialized} event the first time it is successfully executed.      */ [13775,14250]"
    },
    {
      "src": "identifier: isSpotter [28986,28995]",
      "dest": "identifier: isSpotter [28648,28657]"
    },
    {
      "src": "uint256: uint256 [18463,18470]",
      "dest": "uint256: uint256 [18462,18469]"
    },
    {
      "src": "variable_declaration_statement [23342,23453]",
      "dest": "variable_declaration_statement [23341,23452]"
    },
    {
      "src": "address: address [23384,23391]",
      "dest": "address: address [23383,23390]"
    },
    {
      "src": "yul_identifier [8227,8242]",
      "dest": "yul_identifier [8226,8241]"
    },
    {
      "src": "call_argument [20826,20831]",
      "dest": "call_argument [20825,20830]"
    },
    {
      "src": "true: true [29317,29321]",
      "dest": "true: true [28979,28983]"
    },
    {
      "src": "): ) [27945,27946]",
      "dest": "): ) [27944,27945]"
    },
    {
      "src": "string: string [7573,7579]",
      "dest": "string: string [7572,7578]"
    },
    {
      "src": ".: . [24501,24502]",
      "dest": ".: . [24500,24501]"
    },
    {
      "src": "return_type_definition [23688,23710]",
      "dest": "return_type_definition [23687,23709]"
    },
    {
      "src": "identifier: x [29663,29664]",
      "dest": "identifier: x [29325,29326]"
    },
    {
      "src": "external: external [25743,25751]",
      "dest": "external: external [25742,25750]"
    },
    {
      "src": "primitive_type [17376,17380]",
      "dest": "primitive_type [17375,17379]"
    },
    {
      "src": "expression_statement [13361,13363]",
      "dest": "expression_statement [13360,13362]"
    },
    {
      "src": "(: ( [7219,7220]",
      "dest": "(: ( [7218,7219]"
    },
    {
      "src": "bytes: bytes [24045,24050]",
      "dest": "bytes: bytes [24044,24049]"
    },
    {
      "src": "return_statement [16753,16771]",
      "dest": "return_statement [16752,16770]"
    },
    {
      "src": "identifier: sender [24477,24483]",
      "dest": "identifier: sender [24476,24482]"
    },
    {
      "src": "function_body [13180,13435]",
      "dest": "function_body [13179,13434]"
    },
    {
      "src": "assignment_expression [14441,14471]",
      "dest": "assignment_expression [14440,14470]"
    },
    {
      "src": "(: ( [29276,29277]",
      "dest": "(: ( [28938,28939]"
    },
    {
      "src": "): ) [16124,16125]",
      "dest": "): ) [16123,16124]"
    },
    {
      "src": "address: address [3544,3551]",
      "dest": "address: address [3543,3550]"
    },
    {
      "src": "else: else [27870,27874]",
      "dest": "else: else [27869,27873]"
    },
    {
      "src": "identifier: balance [5227,5234]",
      "dest": "identifier: balance [5226,5233]"
    },
    {
      "src": "primitive_type [29164,29171]",
      "dest": "primitive_type [28826,28833]"
    },
    {
      "src": "(: ( [14501,14502]",
      "dest": "(: ( [14500,14501]"
    },
    {
      "src": "(: ( [5666,5667]",
      "dest": "(: ( [5665,5666]"
    },
    {
      "src": "(: ( [17797,17798]",
      "dest": "(: ( [17796,17797]"
    },
    {
      "src": "return: return [17437,17443]",
      "dest": "return: return [17436,17442]"
    },
    {
      "src": "}: } [29275,29276]",
      "dest": "}: } [28937,28938]"
    },
    {
      "src": "]: ] [29661,29662]",
      "dest": "]: ] [29323,29324]"
    },
    {
      "src": "(: ( [25140,25141]",
      "dest": "(: ( [25139,25140]"
    },
    {
      "src": "): ) [23672,23673]",
      "dest": "): ) [23671,23672]"
    },
    {
      "src": "{: { [24485,24486]",
      "dest": "{: { [24484,24485]"
    },
    {
      "src": "return_statement [22239,22249]",
      "dest": "return_statement [22238,22248]"
    },
    {
      "src": ",: , [15821,15822]",
      "dest": ",: , [15820,15821]"
    },
    {
      "src": "(: ( [27449,27450]",
      "dest": "(: ( [27448,27449]"
    },
    {
      "src": "call_argument [26722,26733]",
      "dest": "call_argument [26721,26732]"
    },
    {
      "src": ":: : [28303,28304]",
      "dest": ":: : [28302,28303]"
    },
    {
      "src": "boolean_literal [13388,13393]",
      "dest": "boolean_literal [13387,13392]"
    },
    {
      "src": "string [27929,27945]",
      "dest": "string [27928,27944]"
    },
    {
      "src": "(: ( [11583,11584]",
      "dest": "(: ( [11582,11583]"
    },
    {
      "src": "}: } [8323,8324]",
      "dest": "}: } [8322,8323]"
    },
    {
      "src": "return: return [18184,18190]",
      "dest": "return: return [18183,18189]"
    },
    {
      "src": "}: } [13769,13770]",
      "dest": "}: } [13768,13769]"
    },
    {
      "src": "pure: pure [17013,17017]",
      "dest": "pure: pure [17012,17016]"
    },
    {
      "src": "identifier: _amount [25689,25696]",
      "dest": "identifier: _amount [25688,25695]"
    },
    {
      "src": "): ) [25154,25155]",
      "dest": "): ) [25153,25154]"
    },
    {
      "src": "primitive_type [21989,22004]",
      "dest": "primitive_type [21988,22003]"
    },
    {
      "src": "view: view [5711,5715]",
      "dest": "view: view [5710,5714]"
    },
    {
      "src": "string [3667,3699]",
      "dest": "string [3666,3698]"
    },
    {
      "src": "event_paramater [26201,26218]",
      "dest": "event_paramater [26200,26217]"
    },
    {
      "src": ",: , [29593,29594]",
      "dest": ",: , [29255,29256]"
    },
    {
      "src": "): ) [23158,23159]",
      "dest": "): ) [23157,23158]"
    },
    {
      "src": "primitive_type [5725,5730]",
      "dest": "primitive_type [5724,5729]"
    },
    {
      "src": "identifier: x [29689,29690]",
      "dest": "identifier: x [29351,29352]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol) [15017,15090]",
      "dest": "comment: // OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol) [15016,15089]"
    },
    {
      "src": "expression_statement [27025,27055]",
      "dest": "expression_statement [27024,27054]"
    },
    {
      "src": "(: ( [19441,19442]",
      "dest": "(: ( [19440,19441]"
    },
    {
      "src": "): ) [29226,29227]",
      "dest": "): ) [28888,28889]"
    },
    {
      "src": "binary_expression [17133,17138]",
      "dest": "binary_expression [17132,17137]"
    },
    {
      "src": "struct_member [26839,26853]",
      "dest": "struct_member [26838,26852]"
    },
    {
      "src": "primitive_type [29048,29055]",
      "dest": "primitive_type [28710,28717]"
    },
    {
      "src": "type_name [6189,6193]",
      "dest": "type_name [6188,6192]"
    },
    {
      "src": "bytes32: bytes32 [24163,24170]",
      "dest": "bytes32: bytes32 [24162,24169]"
    },
    {
      "src": "parameter [18893,18900]",
      "dest": "parameter [18892,18899]"
    },
    {
      "src": "primitive_type [18893,18900]",
      "dest": "primitive_type [18892,18899]"
    },
    {
      "src": "): ) [2528,2529]",
      "dest": "): ) [2527,2528]"
    },
    {
      "src": "function: function [20659,20667]",
      "dest": "function: function [20658,20666]"
    },
    {
      "src": "solidity_version_comparison_operator [24966,24968]",
      "dest": "solidity_version_comparison_operator [24965,24967]"
    },
    {
      "src": "state_mutability [21637,21641]",
      "dest": "state_mutability [21636,21640]"
    },
    {
      "src": "uint8: uint8 [14415,14420]",
      "dest": "uint8: uint8 [14414,14419]"
    },
    {
      "src": "return_type_definition [25349,25362]",
      "dest": "return_type_definition [25348,25361]"
    },
    {
      "src": "\": \" [13706,13707]",
      "dest": "\": \" [13705,13706]"
    },
    {
      "src": "false: false [13388,13393]",
      "dest": "false: false [13387,13392]"
    },
    {
      "src": "{: { [16400,16401]",
      "dest": "{: { [16399,16400]"
    },
    {
      "src": "): ) [24123,24124]",
      "dest": "): ) [24122,24123]"
    },
    {
      "src": "member_expression [24900,24910]",
      "dest": "member_expression [24899,24909]"
    },
    {
      "src": "identifier: sigV [23154,23158]",
      "dest": "identifier: sigV [23153,23157]"
    },
    {
      "src": "(: ( [23549,23550]",
      "dest": "(: ( [23548,23549]"
    },
    {
      "src": ",: , [6071,6072]",
      "dest": ",: , [6070,6071]"
    },
    {
      "src": "identifier: b [19472,19473]",
      "dest": "identifier: b [19471,19472]"
    },
    {
      "src": "identifier: value [5115,5120]",
      "dest": "identifier: value [5114,5119]"
    },
    {
      "src": "): ) [12051,12052]",
      "dest": "): ) [12050,12051]"
    },
    {
      "src": "internal: internal [4625,4633]",
      "dest": "internal: internal [4624,4632]"
    },
    {
      "src": "{: { [19451,19452]",
      "dest": "{: { [19450,19451]"
    },
    {
      "src": "(: ( [27437,27438]",
      "dest": "(: ( [27436,27437]"
    },
    {
      "src": "): ) [25490,25491]",
      "dest": "): ) [25489,25490]"
    },
    {
      "src": "type_name [14461,14466]",
      "dest": "type_name [14460,14465]"
    },
    {
      "src": ",: , [6748,6749]",
      "dest": ",: , [6747,6748]"
    },
    {
      "src": "identifier: owner [26704,26709]",
      "dest": "identifier: owner [26703,26708]"
    },
    {
      "src": ",: , [2710,2711]",
      "dest": ",: , [2709,2710]"
    },
    {
      "src": "\": \" [4717,4718]",
      "dest": "\": \" [4716,4717]"
    },
    {
      "src": "string [26722,26733]",
      "dest": "string [26721,26732]"
    },
    {
      "src": "<=: <= [20113,20115]",
      "dest": "<=: <= [20112,20114]"
    },
    {
      "src": "state_mutability [20761,20765]",
      "dest": "state_mutability [20760,20764]"
    },
    {
      "src": "parameter [25083,25096]",
      "dest": "parameter [25082,25095]"
    },
    {
      "src": "identifier: depositer [26209,26218]",
      "dest": "identifier: depositer [26208,26217]"
    },
    {
      "src": "identifier: add [23249,23252]",
      "dest": "identifier: add [23248,23251]"
    },
    {
      "src": "call_argument [2590,2621]",
      "dest": "call_argument [2589,2620]"
    },
    {
      "src": "variable_declaration_tuple [6188,6227]",
      "dest": "variable_declaration_tuple [6187,6226]"
    },
    {
      "src": ",: , [27928,27929]",
      "dest": ",: , [27927,27928]"
    },
    {
      "src": "call_argument [3664,3665]",
      "dest": "call_argument [3663,3664]"
    },
    {
      "src": "}: } [7191,7192]",
      "dest": "}: } [7190,7191]"
    },
    {
      "src": "): ) [18172,18173]",
      "dest": "): ) [18171,18172]"
    },
    {
      "src": "identifier: b [21702,21703]",
      "dest": "identifier: b [21701,21702]"
    },
    {
      "src": "return: return [1514,1520]",
      "dest": "return: return [1513,1519]"
    },
    {
      "src": "expression_statement [28978,29034]",
      "dest": "expression_statement [28640,28696]"
    },
    {
      "src": "uint256: uint256 [15653,15660]",
      "dest": "uint256: uint256 [15652,15659]"
    },
    {
      "src": "else: else [29348,29352]",
      "dest": "else: else [29010,29014]"
    },
    {
      "src": "call_argument [7220,7230]",
      "dest": "call_argument [7219,7229]"
    },
    {
      "src": "type_name [25261,25265]",
      "dest": "type_name [25260,25264]"
    },
    {
      "src": "type_name [6725,6730]",
      "dest": "type_name [6724,6729]"
    },
    {
      "src": "identifier: x [29423,29424]",
      "dest": "identifier: x [29085,29086]"
    },
    {
      "src": "-: - [18193,18194]",
      "dest": "-: - [18192,18193]"
    },
    {
      "src": "(: ( [1290,1291]",
      "dest": "(: ( [1289,1290]"
    },
    {
      "src": "identifier: target [5675,5681]",
      "dest": "identifier: target [5674,5680]"
    },
    {
      "src": "identifier: a [19468,19469]",
      "dest": "identifier: a [19467,19468]"
    },
    {
      "src": "): ) [28374,28375]",
      "dest": "): ) [28373,28374]"
    },
    {
      "src": "primitive_type [25250,25257]",
      "dest": "primitive_type [25249,25256]"
    },
    {
      "src": "identifier: _fees [29813,29818]",
      "dest": "identifier: _fees [29475,29480]"
    },
    {
      "src": "address: address [5213,5220]",
      "dest": "address: address [5212,5219]"
    },
    {
      "src": "identifier: check [29613,29618]",
      "dest": "identifier: check [29275,29280]"
    },
    {
      "src": "return_statement [21736,21749]",
      "dest": "return_statement [21735,21748]"
    },
    {
      "src": "uint256: uint256 [22070,22077]",
      "dest": "uint256: uint256 [22069,22076]"
    },
    {
      "src": "primitive_type [21557,21564]",
      "dest": "primitive_type [21556,21563]"
    },
    {
      "src": "type_name [26471,26477]",
      "dest": "type_name [26470,26476]"
    },
    {
      "src": "identifier: a [19405,19406]",
      "dest": "identifier: a [19404,19405]"
    },
    {
      "src": ",: , [23355,23356]",
      "dest": ",: , [23354,23355]"
    },
    {
      "src": "parameter [6057,6071]",
      "dest": "parameter [6056,6070]"
    },
    {
      "src": "let: let [8142,8145]",
      "dest": "let: let [8141,8144]"
    },
    {
      "src": "identifier: relayerAddress [22005,22019]",
      "dest": "identifier: relayerAddress [22004,22018]"
    },
    {
      "src": "primitive_type [26623,26630]",
      "dest": "primitive_type [26622,26629]"
    },
    {
      "src": "identifier: abi [23403,23406]",
      "dest": "identifier: abi [23402,23405]"
    },
    {
      "src": ",: , [24111,24112]",
      "dest": ",: , [24110,24111]"
    },
    {
      "src": "primitive_type [5213,5220]",
      "dest": "primitive_type [5212,5219]"
    },
    {
      "src": "function_definition [6020,6346]",
      "dest": "function_definition [6019,6345]"
    },
    {
      "src": "solidity_version_comparison_operator [15107,15109]",
      "dest": "solidity_version_comparison_operator [15106,15108]"
    },
    {
      "src": ",: , [16012,16013]",
      "dest": ",: , [16011,16012]"
    },
    {
      "src": "return_statement [17088,17106]",
      "dest": "return_statement [17087,17105]"
    },
    {
      "src": "uint256: uint256 [19442,19449]",
      "dest": "uint256: uint256 [19441,19448]"
    },
    {
      "src": "function_body [15702,15842]",
      "dest": "function_body [15701,15841]"
    },
    {
      "src": ".: . [23248,23249]",
      "dest": ".: . [23247,23248]"
    },
    {
      "src": "): ) [11151,11152]",
      "dest": "): ) [11150,11151]"
    },
    {
      "src": "event_paramater [26234,26248]",
      "dest": "event_paramater [26233,26247]"
    },
    {
      "src": "returns: returns [23027,23034]",
      "dest": "returns: returns [23026,23033]"
    },
    {
      "src": "type_name [25357,25361]",
      "dest": "type_name [25356,25360]"
    },
    {
      "src": "boolean_literal [28515,28519]",
      "dest": "boolean_literal [28545,28549]"
    },
    {
      "src": "{: { [27232,27233]",
      "dest": "{: { [27231,27232]"
    },
    {
      "src": "call_argument [29378,29385]",
      "dest": "call_argument [29040,29047]"
    },
    {
      "src": "identifier: i [29056,29057]",
      "dest": "identifier: i [28718,28719]"
    },
    {
      "src": "primitive_type [28066,28073]",
      "dest": "primitive_type [28065,28072]"
    },
    {
      "src": "variable_declaration [24266,24280]",
      "dest": "variable_declaration [24265,24279]"
    },
    {
      "src": "): ) [27583,27584]",
      "dest": "): ) [27582,27583]"
    },
    {
      "src": "binary_expression [27968,27991]",
      "dest": "binary_expression [27967,27990]"
    },
    {
      "src": ",: , [6324,6325]",
      "dest": ",: , [6323,6324]"
    },
    {
      "src": ">: > [7961,7962]",
      "dest": ">: > [7960,7961]"
    },
    {
      "src": "identifier: transactions [26956,26968]",
      "dest": "identifier: transactions [26955,26967]"
    },
    {
      "src": "visibility [29819,29827]",
      "dest": "visibility [29481,29489]"
    },
    {
      "src": "identifier: x [29397,29398]",
      "dest": "identifier: x [29059,29060]"
    },
    {
      "src": "primitive_type [27465,27471]",
      "dest": "primitive_type [27464,27470]"
    },
    {
      "src": "\": \" [2590,2591]",
      "dest": "\": \" [2589,2590]"
    },
    {
      "src": "identifier: sigR [23142,23146]",
      "dest": "identifier: sigR [23141,23145]"
    },
    {
      "src": "=: = [24560,24561]",
      "dest": "=: = [24559,24560]"
    },
    {
      "src": "uint256: uint256 [22162,22169]",
      "dest": "uint256: uint256 [22161,22168]"
    },
    {
      "src": "): ) [28283,28284]",
      "dest": "): ) [28282,28283]"
    },
    {
      "src": "{: { [28297,28298]",
      "dest": "{: { [28296,28297]"
    },
    {
      "src": "call_argument [28182,28191]",
      "dest": "call_argument [28181,28190]"
    },
    {
      "src": ",: , [26293,26294]",
      "dest": ",: , [26292,26293]"
    },
    {
      "src": ",: , [7563,7564]",
      "dest": ",: , [7562,7563]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol [1,74]",
      "dest": "comment: // File: @openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol [0,73]"
    },
    {
      "src": "uint8: uint8 [11138,11143]",
      "dest": "uint8: uint8 [11137,11142]"
    },
    {
      "src": "(: ( [8293,8294]",
      "dest": "(: ( [8292,8293]"
    },
    {
      "src": "return_type_definition [19433,19450]",
      "dest": "return_type_definition [19432,19449]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol) [8405,8484]",
      "dest": "comment: // OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol) [8404,8483]"
    },
    {
      "src": "pure: pure [20761,20765]",
      "dest": "pure: pure [20760,20764]"
    },
    {
      "src": "pragma: pragma [24951,24957]",
      "dest": "pragma: pragma [24950,24956]"
    },
    {
      "src": "identifier: collectedFeesThreshold [28232,28254]",
      "dest": "identifier: collectedFeesThreshold [28231,28253]"
    },
    {
      "src": "{: { [14427,14428]",
      "dest": "{: { [14426,14427]"
    },
    {
      "src": "identifier: _initialized [14726,14738]",
      "dest": "identifier: _initialized [14725,14737]"
    },
    {
      "src": "(: ( [6188,6189]",
      "dest": "(: ( [6187,6188]"
    },
    {
      "src": "return_statement [6263,6340]",
      "dest": "return_statement [6262,6339]"
    },
    {
      "src": "uint256: uint256 [29805,29812]",
      "dest": "uint256: uint256 [29467,29474]"
    },
    {
      "src": "call_argument [27561,27583]",
      "dest": "call_argument [27560,27582]"
    },
    {
      "src": ",: , [21707,21708]",
      "dest": ",: , [21706,21707]"
    },
    {
      "src": "true [28515,28519]",
      "dest": "true [28545,28549]"
    },
    {
      "src": ",: , [26307,26308]",
      "dest": ",: , [26306,26307]"
    },
    {
      "src": "call_expression [27625,27637]",
      "dest": "call_expression [27624,27636]"
    },
    {
      "src": "identifier: mint [25663,25667]",
      "dest": "identifier: mint [25662,25666]"
    },
    {
      "src": "expression_statement [11913,11934]",
      "dest": "expression_statement [11912,11933]"
    },
    {
      "src": "identifier: functionSignature [23123,23140]",
      "dest": "identifier: functionSignature [23122,23139]"
    },
    {
      "src": "number_literal: 1 [27387,27388]",
      "dest": "number_literal: 1 [27386,27387]"
    },
    {
      "src": "identifier: require [23060,23067]",
      "dest": "identifier: require [23059,23066]"
    },
    {
      "src": "): ) [29385,29386]",
      "dest": "): ) [29047,29048]"
    },
    {
      "src": "member_expression [24600,24615]",
      "dest": "member_expression [24599,24614]"
    },
    {
      "src": "{: { [21660,21661]",
      "dest": "{: { [21659,21660]"
    },
    {
      "src": "type_name [26309,26316]",
      "dest": "type_name [26308,26315]"
    },
    {
      "src": "comment: /**      * @dev Indicates that the contract has been initialized.      * @custom:oz-retyped-from bool      */ [10749,10858]",
      "dest": "comment: /**      * @dev Indicates that the contract has been initialized.      * @custom:oz-retyped-from bool      */ [10748,10857]"
    },
    {
      "src": "call_argument [5442,5454]",
      "dest": "call_argument [5441,5453]"
    },
    {
      "src": "yul_path [8214,8224]",
      "dest": "yul_path [8213,8223]"
    },
    {
      "src": "): ) [19449,19450]",
      "dest": "): ) [19448,19449]"
    },
    {
      "src": "identifier: a [15650,15651]",
      "dest": "identifier: a [15649,15650]"
    },
    {
      "src": "): ) [28172,28173]",
      "dest": "): ) [28171,28172]"
    },
    {
      "src": "returns: returns [3588,3595]",
      "dest": "returns: returns [3587,3594]"
    },
    {
      "src": "memory: memory [21602,21608]",
      "dest": "memory: memory [21601,21607]"
    },
    {
      "src": "return: return [15809,15815]",
      "dest": "return: return [15808,15814]"
    },
    {
      "src": "): ) [13178,13179]",
      "dest": "): ) [13177,13178]"
    },
    {
      "src": "): ) [4042,4043]",
      "dest": "): ) [4041,4042]"
    },
    {
      "src": "call_argument [5789,5828]",
      "dest": "call_argument [5788,5827]"
    },
    {
      "src": "call_argument [23088,23107]",
      "dest": "call_argument [23087,23106]"
    },
    {
      "src": ",: , [16688,16689]",
      "dest": ",: , [16687,16688]"
    },
    {
      "src": "identifier: sender [30079,30085]",
      "dest": "identifier: sender [29741,29747]"
    },
    {
      "src": "comment: // for contracts in construction, since the code is only stored at the end [1389,1463]",
      "dest": "comment: // for contracts in construction, since the code is only stored at the end [1388,1462]"
    },
    {
      "src": "uint256: uint256 [17331,17338]",
      "dest": "uint256: uint256 [17330,17337]"
    },
    {
      "src": "uint256: uint256 [19408,19415]",
      "dest": "uint256: uint256 [19407,19414]"
    },
    {
      "src": "boolean_literal [13347,13351]",
      "dest": "boolean_literal [13346,13350]"
    },
    {
      "src": "member_expression [29501,29508]",
      "dest": "member_expression [29163,29170]"
    },
    {
      "src": "): ) [27636,27637]",
      "dest": "): ) [27635,27636]"
    },
    {
      "src": "call_argument [29611,29618]",
      "dest": "call_argument [29273,29280]"
    },
    {
      "src": "uint256: uint256 [16340,16347]",
      "dest": "uint256: uint256 [16339,16346]"
    },
    {
      "src": "member_expression [29611,29618]",
      "dest": "member_expression [29273,29280]"
    },
    {
      "src": "state_variable_declaration [25874,25901]",
      "dest": "state_variable_declaration [25873,25900]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers, reverting on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator.      *      * Requirements:      *      * - The divisor cannot be zero.      */ [18552,18830]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers, reverting on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator.      *      * Requirements:      *      * - The divisor cannot be zero.      */ [18551,18829]"
    },
    {
      "src": "type_name [25399,25403]",
      "dest": "type_name [25398,25402]"
    },
    {
      "src": "identifier: hash [23845,23849]",
      "dest": "identifier: hash [23844,23848]"
    },
    {
      "src": "): ) [13288,13289]",
      "dest": "): ) [13287,13288]"
    },
    {
      "src": ",: , [5097,5098]",
      "dest": ",: , [5096,5097]"
    },
    {
      "src": "payable_conversion_expression [23563,23582]",
      "dest": "payable_conversion_expression [23562,23581]"
    },
    {
      "src": "if: if [24495,24497]",
      "dest": "if: if [24494,24496]"
    },
    {
      "src": "[: [ [29487,29488]",
      "dest": "[: [ [29149,29150]"
    },
    {
      "src": "): ) [6849,6850]",
      "dest": "): ) [6848,6849]"
    },
    {
      "src": "call_argument [23068,23159]",
      "dest": "call_argument [23067,23158]"
    },
    {
      "src": ",: , [25682,25683]",
      "dest": ",: , [25681,25682]"
    },
    {
      "src": "): ) [15824,15825]",
      "dest": "): ) [15823,15824]"
    },
    {
      "src": "bool: bool [10992,10996]",
      "dest": "bool: bool [10991,10995]"
    },
    {
      "src": "(: ( [8205,8206]",
      "dest": "(: ( [8204,8205]"
    },
    {
      "src": "return_type_definition [16039,16062]",
      "dest": "return_type_definition [16038,16061]"
    },
    {
      "src": "identifier: tokenName [29716,29725]",
      "dest": "identifier: tokenName [29378,29387]"
    },
    {
      "src": "bool: bool [23343,23347]",
      "dest": "bool: bool [23342,23346]"
    },
    {
      "src": "address: address [23998,24005]",
      "dest": "address: address [23997,24004]"
    },
    {
      "src": "call_expression [7212,7245]",
      "dest": "call_expression [7211,7244]"
    },
    {
      "src": "{: { [29175,29176]",
      "dest": "{: { [28837,28838]"
    },
    {
      "src": "visibility [5702,5710]",
      "dest": "visibility [5701,5709]"
    },
    {
      "src": "function_body [26686,26752]",
      "dest": "function_body [26685,26751]"
    },
    {
      "src": "block_statement [14427,14529]",
      "dest": "block_statement [14426,14528]"
    },
    {
      "src": "identifier: returndata [6738,6748]",
      "dest": "identifier: returndata [6737,6747]"
    },
    {
      "src": "comment: // only check isContract if the call was successful and the return data is empty [6911,6991]",
      "dest": "comment: // only check isContract if the call was successful and the return data is empty [6910,6990]"
    },
    {
      "src": "{: { [28968,28969]",
      "dest": "{: { [28630,28631]"
    },
    {
      "src": "function_body [17807,17836]",
      "dest": "function_body [17806,17835]"
    },
    {
      "src": "identifier: multipleToken [28038,28051]",
      "dest": "identifier: multipleToken [28037,28050]"
    },
    {
      "src": "(: ( [6841,6842]",
      "dest": "(: ( [6840,6841]"
    },
    {
      "src": "type_name [20775,20782]",
      "dest": "type_name [20774,20781]"
    },
    {
      "src": "(: ( [26994,26995]",
      "dest": "(: ( [26993,26994]"
    },
    {
      "src": "parameter [24013,24026]",
      "dest": "parameter [24012,24025]"
    },
    {
      "src": "function_definition [7784,8324]",
      "dest": "function_definition [7783,8323]"
    },
    {
      "src": "type_name [17331,17338]",
      "dest": "type_name [17330,17337]"
    },
    {
      "src": "string: string [20004,20010]",
      "dest": "string: string [20003,20009]"
    },
    {
      "src": "): ) [2569,2570]",
      "dest": "): ) [2568,2569]"
    },
    {
      "src": "function_definition [18450,18546]",
      "dest": "function_definition [18449,18545]"
    },
    {
      "src": "comment: /**      * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the      * {initializer} and {reinitializer} modifiers, directly or indirectly.      */ [13441,13640]",
      "dest": "comment: /**      * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the      * {initializer} and {reinitializer} modifiers, directly or indirectly.      */ [13440,13639]"
    },
    {
      "src": "function_definition [3929,4152]",
      "dest": "function_definition [3928,4151]"
    },
    {
      "src": "type_name [3960,3967]",
      "dest": "type_name [3959,3966]"
    },
    {
      "src": ",: , [5681,5682]",
      "dest": ",: , [5680,5681]"
    },
    {
      "src": "{: { [1297,1298]",
      "dest": "{: { [1296,1297]"
    },
    {
      "src": "true [13347,13351]",
      "dest": "true [13346,13350]"
    },
    {
      "src": "primitive_type [23000,23005]",
      "dest": "primitive_type [22999,23004]"
    },
    {
      "src": "binary_expression [24498,24525]",
      "dest": "binary_expression [24497,24524]"
    },
    {
      "src": "payable: payable [29211,29218]",
      "dest": "payable: payable [28873,28880]"
    },
    {
      "src": "return_type_definition [25133,25155]",
      "dest": "return_type_definition [25132,25154]"
    },
    {
      "src": "expression_statement [13683,13753]",
      "dest": "expression_statement [13682,13752]"
    },
    {
      "src": "address: address [25465,25472]",
      "dest": "address: address [25464,25471]"
    },
    {
      "src": "payable: payable [21997,22004]",
      "dest": "payable: payable [21996,22003]"
    },
    {
      "src": "identifier: functionStaticCall [5648,5666]",
      "dest": "identifier: functionStaticCall [5647,5665]"
    },
    {
      "src": "call_expression [7084,7102]",
      "dest": "call_expression [7083,7101]"
    },
    {
      "src": "primitive_type [7573,7579]",
      "dest": "primitive_type [7572,7578]"
    },
    {
      "src": "{: { [6828,6829]",
      "dest": "{: { [6827,6828]"
    },
    {
      "src": "call_expression [29211,29280]",
      "dest": "call_expression [28873,28942]"
    },
    {
      "src": "parameter [16385,16389]",
      "dest": "parameter [16384,16388]"
    },
    {
      "src": "==: == [16670,16672]",
      "dest": "==: == [16669,16671]"
    },
    {
      "src": "member_expression [27494,27514]",
      "dest": "member_expression [27493,27513]"
    },
    {
      "src": ",: , [29696,29697]",
      "dest": ",: , [29358,29359]"
    },
    {
      "src": ":=: := [8162,8164]",
      "dest": ":=: := [8161,8163]"
    },
    {
      "src": "comment: /**      * @dev Returns the addition of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [15490,15621]",
      "dest": "comment: /**      * @dev Returns the addition of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [15489,15620]"
    },
    {
      "src": "): ) [21626,21627]",
      "dest": "): ) [21625,21626]"
    },
    {
      "src": "member_expression [14395,14425]",
      "dest": "member_expression [14394,14424]"
    },
    {
      "src": "identifier: feeReceiver [29960,29971]",
      "dest": "identifier: feeReceiver [29622,29633]"
    },
    {
      "src": "call_expression [13190,13289]",
      "dest": "call_expression [13189,13288]"
    },
    {
      "src": ",: , [29405,29406]",
      "dest": ",: , [29067,29068]"
    },
    {
      "src": "}: } [8317,8318]",
      "dest": "}: } [8316,8317]"
    },
    {
      "src": ",: , [4595,4596]",
      "dest": ",: , [4594,4595]"
    },
    {
      "src": "identifier: a [20153,20154]",
      "dest": "identifier: a [20152,20153]"
    },
    {
      "src": "expression_statement [11642,11844]",
      "dest": "expression_statement [11641,11843]"
    },
    {
      "src": "identifier: this [5221,5225]",
      "dest": "identifier: this [5220,5224]"
    },
    {
      "src": "call_argument [11743,11747]",
      "dest": "call_argument [11742,11746]"
    },
    {
      "src": "type_name [5080,5085]",
      "dest": "type_name [5079,5084]"
    },
    {
      "src": "\": \" [2712,2713]",
      "dest": "\": \" [2711,2712]"
    },
    {
      "src": "parameter [25036,25040]",
      "dest": "parameter [25035,25039]"
    },
    {
      "src": "[: [ [23213,23214]",
      "dest": "[: [ [23212,23213]"
    },
    {
      "src": "primitive_type [25537,25541]",
      "dest": "primitive_type [25536,25540]"
    },
    {
      "src": "identifier: user [23736,23740]",
      "dest": "identifier: user [23735,23739]"
    },
    {
      "src": "event_paramater [26395,26408]",
      "dest": "event_paramater [26394,26407]"
    },
    {
      "src": "): ) [7101,7102]",
      "dest": "): ) [7100,7101]"
    },
    {
      "src": "\": \" [7104,7105]",
      "dest": "\": \" [7103,7104]"
    },
    {
      "src": "type_name [26343,26349]",
      "dest": "type_name [26342,26348]"
    },
    {
      "src": "): ) [14425,14426]",
      "dest": "): ) [14424,14425]"
    },
    {
      "src": "primitive_type [18131,18138]",
      "dest": "primitive_type [18130,18137]"
    },
    {
      "src": "true: true [13347,13351]",
      "dest": "true: true [13346,13350]"
    },
    {
      "src": "yul_evm_builtin [24786,24789]",
      "dest": "yul_evm_builtin [24785,24788]"
    },
    {
      "src": "returns: returns [25634,25641]",
      "dest": "returns: returns [25633,25640]"
    },
    {
      "src": "call_argument [23439,23450]",
      "dest": "call_argument [23438,23449]"
    },
    {
      "src": "primitive_type [5130,5136]",
      "dest": "primitive_type [5129,5135]"
    },
    {
      "src": "comment: // string memory tokensSymbol = IERC20(token).symbol(); [27302,27357]",
      "dest": "comment: // string memory tokensSymbol = IERC20(token).symbol(); [27301,27356]"
    },
    {
      "src": "array_access [23207,23226]",
      "dest": "array_access [23206,23225]"
    },
    {
      "src": "string: string [25141,25147]",
      "dest": "string: string [25140,25146]"
    },
    {
      "src": "type_name [25323,25330]",
      "dest": "type_name [25322,25329]"
    },
    {
      "src": "state_mutability [23860,23864]",
      "dest": "state_mutability [23859,23863]"
    },
    {
      "src": "function_definition [25163,25227]",
      "dest": "function_definition [25162,25226]"
    },
    {
      "src": "identifier: _amount [25266,25273]",
      "dest": "identifier: _amount [25265,25272]"
    },
    {
      "src": "identifier: sender [24904,24910]",
      "dest": "identifier: sender [24903,24909]"
    },
    {
      "src": "member_expression [14456,14471]",
      "dest": "member_expression [14455,14470]"
    },
    {
      "src": "binary_expression [18534,18539]",
      "dest": "binary_expression [18533,18538]"
    },
    {
      "src": ".: . [24903,24904]",
      "dest": ".: . [24902,24903]"
    },
    {
      "src": "false: false [17096,17101]",
      "dest": "false: false [17095,17100]"
    },
    {
      "src": "=>: => [26630,26632]",
      "dest": "=>: => [26629,26631]"
    },
    {
      "src": "number_literal: 0 [20830,20831]",
      "dest": "number_literal: 0 [20829,20830]"
    },
    {
      "src": "function: function [14645,14653]",
      "dest": "function: function [14644,14652]"
    },
    {
      "src": "(: ( [23419,23420]",
      "dest": "(: ( [23418,23419]"
    },
    {
      "src": "function: function [5016,5024]",
      "dest": "function: function [5015,5023]"
    },
    {
      "src": "primitive_type [11596,11600]",
      "dest": "primitive_type [11595,11599]"
    },
    {
      "src": "parameter [24085,24097]",
      "dest": "parameter [24084,24096]"
    },
    {
      "src": "contract_declaration [21868,24929]",
      "dest": "contract_declaration [21867,24928]"
    },
    {
      "src": "identifier: token [26302,26307]",
      "dest": "identifier: token [26301,26306]"
    },
    {
      "src": "): ) [6891,6892]",
      "dest": "): ) [6890,6891]"
    },
    {
      "src": "returns: returns [23688,23695]",
      "dest": "returns: returns [23687,23694]"
    },
    {
      "src": "visibility [26576,26582]",
      "dest": "visibility [26575,26581]"
    },
    {
      "src": "type_cast_expression [27639,27652]",
      "dest": "type_cast_expression [27638,27651]"
    },
    {
      "src": "uint256: uint256 [26422,26429]",
      "dest": "uint256: uint256 [26421,26428]"
    },
    {
      "src": "parameter [6679,6693]",
      "dest": "parameter [6678,6692]"
    },
    {
      "src": "return: return [18912,18918]",
      "dest": "return: return [18911,18917]"
    },
    {
      "src": "type_name [26395,26402]",
      "dest": "type_name [26394,26401]"
    },
    {
      "src": "yul_evm_builtin [8206,8209]",
      "dest": "yul_evm_builtin [8205,8208]"
    },
    {
      "src": "state_mutability [17784,17788]",
      "dest": "state_mutability [17783,17787]"
    },
    {
      "src": "parameter [22986,22998]",
      "dest": "parameter [22985,22997]"
    },
    {
      "src": "internal: internal [20037,20045]",
      "dest": "internal: internal [20036,20044]"
    },
    {
      "src": "\": \" [27929,27930]",
      "dest": "\": \" [27928,27929]"
    },
    {
      "src": "primitive_type [29194,29198]",
      "dest": "primitive_type [28856,28860]"
    },
    {
      "src": "(: ( [3649,3650]",
      "dest": "(: ( [3648,3649]"
    },
    {
      "src": "=>: => [26613,26615]",
      "dest": "=>: => [26612,26614]"
    },
    {
      "src": "struct_expression [5338,5363]",
      "dest": "struct_expression [5337,5362]"
    },
    {
      "src": ".: . [29220,29221]",
      "dest": ".: . [28882,28883]"
    },
    {
      "src": "identifier: code [1529,1533]",
      "dest": "identifier: code [1528,1532]"
    },
    {
      "src": "\": \" [2682,2683]",
      "dest": "\": \" [2681,2682]"
    },
    {
      "src": "primitive_type [26422,26429]",
      "dest": "primitive_type [26421,26428]"
    },
    {
      "src": "contract_body [266,8326]",
      "dest": "contract_body [265,8325]"
    },
    {
      "src": "type_name [25250,25257]",
      "dest": "type_name [25249,25256]"
    },
    {
      "src": "): ) [11748,11749]",
      "dest": "): ) [11747,11748]"
    },
    {
      "src": "%: % [19470,19471]",
      "dest": "%: % [19469,19470]"
    },
    {
      "src": "function_definition [21535,21765]",
      "dest": "function_definition [21534,21764]"
    },
    {
      "src": "identifier: Initialized [13408,13419]",
      "dest": "identifier: Initialized [13407,13418]"
    },
    {
      "src": "visibility [7854,7861]",
      "dest": "visibility [7853,7860]"
    },
    {
      "src": "=: = [28285,28286]",
      "dest": "=: = [28284,28285]"
    },
    {
      "src": "): ) [29086,29087]",
      "dest": "): ) [28748,28749]"
    },
    {
      "src": "{: { [29232,29233]",
      "dest": "{: { [28894,28895]"
    },
    {
      "src": "comment: // benefit is lost if 'b' is also tested. [16526,16567]",
      "dest": "comment: // benefit is lost if 'b' is also tested. [16525,16566]"
    },
    {
      "src": "primitive_type [19966,19973]",
      "dest": "primitive_type [19965,19972]"
    },
    {
      "src": "return_statement [5379,5456]",
      "dest": "return_statement [5378,5455]"
    },
    {
      "src": "identifier: b [20708,20709]",
      "dest": "identifier: b [20707,20708]"
    },
    {
      "src": "primitive_type [22932,22937]",
      "dest": "primitive_type [22931,22936]"
    },
    {
      "src": "primitive_type [2634,2638]",
      "dest": "primitive_type [2633,2637]"
    },
    {
      "src": "{: { [8273,8274]",
      "dest": "{: { [8272,8273]"
    },
    {
      "src": "parameter [18848,18857]",
      "dest": "parameter [18847,18856]"
    },
    {
      "src": ":: : [2672,2673]",
      "dest": ":: : [2671,2672]"
    },
    {
      "src": "(: ( [16981,16982]",
      "dest": "(: ( [16980,16981]"
    },
    {
      "src": "uint256: uint256 [21576,21583]",
      "dest": "uint256: uint256 [21575,21582]"
    },
    {
      "src": "type_name [22021,22026]",
      "dest": "type_name [22020,22025]"
    },
    {
      "src": "(: ( [24519,24520]",
      "dest": "(: ( [24518,24519]"
    },
    {
      "src": "assembly_statement [8115,8257]",
      "dest": "assembly_statement [8114,8256]"
    },
    {
      "src": "user_defined_type [28925,28937]",
      "dest": "user_defined_type [28587,28599]"
    },
    {
      "src": "): ) [14915,14916]",
      "dest": "): ) [14914,14915]"
    },
    {
      "src": "call_expression [29371,29446]",
      "dest": "call_expression [29033,29108]"
    },
    {
      "src": "identifier: success [6305,6312]",
      "dest": "identifier: success [6304,6311]"
    },
    {
      "src": "bytes: bytes [6814,6819]",
      "dest": "bytes: bytes [6813,6818]"
    },
    {
      "src": "{: { [20089,20090]",
      "dest": "{: { [20088,20089]"
    },
    {
      "src": "): ) [20845,20846]",
      "dest": "): ) [20844,20845]"
    },
    {
      "src": "type_name [25599,25606]",
      "dest": "type_name [25598,25605]"
    },
    {
      "src": ".: . [24608,24609]",
      "dest": ".: . [24607,24608]"
    },
    {
      "src": "number_literal: 0 [16690,16691]",
      "dest": "number_literal: 0 [16689,16690]"
    },
    {
      "src": "identifier: version [13231,13238]",
      "dest": "identifier: version [13230,13237]"
    },
    {
      "src": "identifier: userAddress [23075,23086]",
      "dest": "identifier: userAddress [23074,23085]"
    },
    {
      "src": "comment: // string memory tokensName = IERC20(token).name(); [27242,27293]",
      "dest": "comment: // string memory tokensName = IERC20(token).name(); [27241,27292]"
    },
    {
      "src": "type_name [25642,25646]",
      "dest": "type_name [25641,25645]"
    },
    {
      "src": "comment: /**      * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the      * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be      * used to initialize parent contracts.      *      * A reinitializer may be used after the original initialization step. This is essential to configure modules that      * are added through upgrades and that require initialization.      *      * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`      * cannot be nested. If one is invoked in the context of another, execution will revert.      *      * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in      * a contract, executing them in the right order is up to the developer or operator.      *      * WARNING: setting the version to 255 will prevent any future reinitialization.      *      * Emits an {Initialized} event.      */ [12075,13137]",
      "dest": "comment: /**      * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the      * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be      * used to initialize parent contracts.      *      * A reinitializer may be used after the original initialization step. This is essential to configure modules that      * are added through upgrades and that require initialization.      *      * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`      * cannot be nested. If one is invoked in the context of another, execution will revert.      *      * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in      * a contract, executing them in the right order is up to the developer or operator.      *      * WARNING: setting the version to 255 will prevent any future reinitialization.      *      * Emits an {Initialized} event.      */ [12074,13136]"
    },
    {
      "src": "variable_declaration_statement [24541,24571]",
      "dest": "variable_declaration_statement [24540,24570]"
    },
    {
      "src": ",: , [24804,24805]",
      "dest": ",: , [24803,24804]"
    },
    {
      "src": "memory: memory [24051,24057]",
      "dest": "memory: memory [24050,24056]"
    },
    {
      "src": "public: public [26997,27003]",
      "dest": "public: public [26996,27002]"
    },
    {
      "src": "identifier: x [29122,29123]",
      "dest": "identifier: x [28784,28785]"
    },
    {
      "src": "variable_declaration_tuple [5296,5335]",
      "dest": "variable_declaration_tuple [5295,5334]"
    },
    {
      "src": "struct_field_assignment [29233,29275]",
      "dest": "struct_field_assignment [28895,28937]"
    },
    {
      "src": "==: == [26709,26711]",
      "dest": "==: == [26708,26710]"
    },
    {
      "src": "{: { [14305,14306]",
      "dest": "{: { [14304,14305]"
    },
    {
      "src": "parameter [18508,18515]",
      "dest": "parameter [18507,18514]"
    },
    {
      "src": "else: else [8268,8272]",
      "dest": "else: else [8267,8271]"
    },
    {
      "src": "\": \" [28319,28320]",
      "dest": "\": \" [28318,28319]"
    },
    {
      "src": "): ) [7852,7853]",
      "dest": "): ) [7851,7852]"
    },
    {
      "src": "return: return [20860,20866]",
      "dest": "return: return [20859,20865]"
    },
    {
      "src": "identifier: setFeeReceiver [29899,29913]",
      "dest": "identifier: setFeeReceiver [29561,29575]"
    },
    {
      "src": "comment: /**      * @dev Indicates that the contract is in the process of being initialized.      */ [10896,10987]",
      "dest": "comment: /**      * @dev Indicates that the contract is in the process of being initialized.      */ [10895,10986]"
    },
    {
      "src": "type_name [24013,24020]",
      "dest": "type_name [24012,24019]"
    },
    {
      "src": "type_name [7801,7806]",
      "dest": "type_name [7800,7805]"
    },
    {
      "src": "): ) [20750,20751]",
      "dest": "): ) [20749,20750]"
    },
    {
      "src": "parameter [5130,5156]",
      "dest": "parameter [5129,5155]"
    },
    {
      "src": "call_argument [23075,23086]",
      "dest": "call_argument [23074,23085]"
    },
    {
      "src": "): ) [17805,17806]",
      "dest": "): ) [17804,17805]"
    },
    {
      "src": "call_argument [23161,23196]",
      "dest": "call_argument [23160,23195]"
    },
    {
      "src": "(: ( [24468,24469]",
      "dest": "(: ( [24467,24468]"
    },
    {
      "src": "identifier: returnData [23370,23380]",
      "dest": "identifier: returnData [23369,23379]"
    },
    {
      "src": "internal: internal [4044,4052]",
      "dest": "internal: internal [4043,4051]"
    },
    {
      "src": "=: = [27031,27032]",
      "dest": "=: = [27030,27031]"
    },
    {
      "src": "type_name [5683,5688]",
      "dest": "type_name [5682,5687]"
    },
    {
      "src": "): ) [26574,26575]",
      "dest": "): ) [26573,26574]"
    },
    {
      "src": "primitive_type [5056,5063]",
      "dest": "primitive_type [5055,5062]"
    },
    {
      "src": "): ) [26733,26734]",
      "dest": "): ) [26732,26733]"
    },
    {
      "src": "event: event [11120,11125]",
      "dest": "event: event [11119,11124]"
    },
    {
      "src": "primitive_type [26816,26823]",
      "dest": "primitive_type [26815,26822]"
    },
    {
      "src": "binary_expression [27896,27909]",
      "dest": "binary_expression [27895,27908]"
    },
    {
      "src": "identifier: success [2639,2646]",
      "dest": "identifier: success [2638,2645]"
    },
    {
      "src": "primitive_type [17764,17771]",
      "dest": "primitive_type [17763,17770]"
    },
    {
      "src": "function: function [7483,7491]",
      "dest": "function: function [7482,7490]"
    },
    {
      "src": "type_name [26598,26638]",
      "dest": "type_name [26597,26637]"
    },
    {
      "src": "comment: /**      * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,      * `onlyInitializing` functions can be used to initialize parent contracts.      *      * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a      * constructor.      *      * Emits an {Initialized} event.      */ [11159,11558]",
      "dest": "comment: /**      * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,      * `onlyInitializing` functions can be used to initialize parent contracts.      *      * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a      * constructor.      *      * Emits an {Initialized} event.      */ [11158,11557]"
    },
    {
      "src": ">: > [21704,21705]",
      "dest": ">: > [21703,21704]"
    },
    {
      "src": "=: = [23227,23228]",
      "dest": "=: = [23226,23227]"
    },
    {
      "src": "tuple_expression [17095,17105]",
      "dest": "tuple_expression [17094,17104]"
    },
    {
      "src": "\": \" [30118,30119]",
      "dest": "\": \" [29780,29781]"
    },
    {
      "src": "parameter [25261,25273]",
      "dest": "parameter [25260,25272]"
    },
    {
      "src": "identifier: transferOwnership [30004,30021]",
      "dest": "identifier: transferOwnership [29666,29683]"
    },
    {
      "src": "primitive_type [27404,27410]",
      "dest": "primitive_type [27403,27409]"
    },
    {
      "src": "): ) [6139,6140]",
      "dest": "): ) [6138,6139]"
    },
    {
      "src": "primitive_type [24045,24050]",
      "dest": "primitive_type [24044,24049]"
    },
    {
      "src": "(: ( [27500,27501]",
      "dest": "(: ( [27499,27500]"
    },
    {
      "src": "[: [ [23235,23236]",
      "dest": "[: [ [23234,23235]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [5842,6015]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [5841,6014]"
    },
    {
      "src": "(: ( [29006,29007]",
      "dest": "(: ( [28668,28669]"
    },
    {
      "src": "identifier: signer [24274,24280]",
      "dest": "identifier: signer [24273,24279]"
    },
    {
      "src": "block_statement [7966,8267]",
      "dest": "block_statement [7965,8266]"
    },
    {
      "src": "==: == [17082,17084]",
      "dest": "==: == [17081,17083]"
    },
    {
      "src": "}: } [25761,25762]",
      "dest": "}: } [25760,25761]"
    },
    {
      "src": "): ) [27515,27516]",
      "dest": "): ) [27514,27515]"
    },
    {
      "src": "return: return [16108,16114]",
      "dest": "return: return [16107,16113]"
    },
    {
      "src": "): ) [25549,25550]",
      "dest": "): ) [25548,25549]"
    },
    {
      "src": "call_argument [5364,5368]",
      "dest": "call_argument [5363,5367]"
    },
    {
      "src": "address: address [24344,24351]",
      "dest": "address: address [24343,24350]"
    },
    {
      "src": "string: string [4011,4017]",
      "dest": "string: string [4010,4016]"
    },
    {
      "src": "expression_statement [27734,27761]",
      "dest": "expression_statement [27733,27760]"
    },
    {
      "src": "(: ( [28073,28074]",
      "dest": "(: ( [28072,28073]"
    },
    {
      "src": "call_argument [24221,24225]",
      "dest": "call_argument [24220,24224]"
    },
    {
      "src": ".: . [29437,29438]",
      "dest": ".: . [29099,29100]"
    },
    {
      "src": "identifier: userAddress [23550,23561]",
      "dest": "identifier: userAddress [23549,23560]"
    },
    {
      "src": "call_expression [27431,27451]",
      "dest": "call_expression [27430,27450]"
    },
    {
      "src": "struct_member [26908,26922]",
      "dest": "struct_member [26907,26921]"
    },
    {
      "src": ",: , [23437,23438]",
      "dest": ",: , [23436,23437]"
    },
    {
      "src": "view: view [24448,24452]",
      "dest": "view: view [24447,24451]"
    },
    {
      "src": "}: } [4151,4152]",
      "dest": "}: } [4150,4151]"
    },
    {
      "src": "(: ( [23119,23120]",
      "dest": "(: ( [23118,23119]"
    },
    {
      "src": "type_cast_expression [11735,11748]",
      "dest": "type_cast_expression [11734,11747]"
    },
    {
      "src": "type_name [7826,7832]",
      "dest": "type_name [7825,7831]"
    },
    {
      "src": "binary_expression [18919,18924]",
      "dest": "binary_expression [18918,18923]"
    },
    {
      "src": "internal: internal [24439,24447]",
      "dest": "internal: internal [24438,24446]"
    },
    {
      "src": "call_expression [23109,23121]",
      "dest": "call_expression [23108,23120]"
    },
    {
      "src": "expression_statement [2549,2623]",
      "dest": "expression_statement [2548,2622]"
    },
    {
      "src": "identifier: _spotter [28503,28511]",
      "dest": "identifier: _spotter [28533,28541]"
    },
    {
      "src": "identifier: Transactions [26766,26778]",
      "dest": "identifier: Transactions [26765,26777]"
    },
    {
      "src": "return_statement [5749,5830]",
      "dest": "return_statement [5748,5829]"
    },
    {
      "src": "function: function [18107,18115]",
      "dest": "function: function [18106,18114]"
    },
    {
      "src": "primitive_type [27639,27646]",
      "dest": "primitive_type [27638,27645]"
    },
    {
      "src": "identifier: _initializing [11998,12011]",
      "dest": "identifier: _initializing [11997,12010]"
    },
    {
      "src": "type_name [15653,15660]",
      "dest": "type_name [15652,15659]"
    },
    {
      "src": "uint8: uint8 [23000,23005]",
      "dest": "uint8: uint8 [22999,23004]"
    },
    {
      "src": "[: [ [28995,28996]",
      "dest": "[: [ [28657,28658]"
    },
    {
      "src": "call_argument [20111,20117]",
      "dest": "call_argument [20110,20116]"
    },
    {
      "src": "binary_expression [30075,30094]",
      "dest": "binary_expression [29737,29756]"
    },
    {
      "src": "return: return [7164,7170]",
      "dest": "return: return [7163,7169]"
    },
    {
      "src": "): ) [5334,5335]",
      "dest": "): ) [5333,5334]"
    },
    {
      "src": "visibility [19419,19427]",
      "dest": "visibility [19418,19426]"
    },
    {
      "src": "yul_function_call [8165,8182]",
      "dest": "yul_function_call [8164,8181]"
    },
    {
      "src": "internal: internal [21628,21636]",
      "dest": "internal: internal [21627,21635]"
    },
    {
      "src": "(: ( [15816,15817]",
      "dest": "(: ( [15815,15816]"
    },
    {
      "src": "identifier: value [27910,27915]",
      "dest": "identifier: value [27909,27914]"
    },
    {
      "src": "state_mutability [18494,18498]",
      "dest": "state_mutability [18493,18497]"
    },
    {
      "src": "memory: memory [25148,25154]",
      "dest": "memory: memory [25147,25153]"
    },
    {
      "src": "parameter [5181,5193]",
      "dest": "parameter [5180,5192]"
    },
    {
      "src": "call_expression [28996,29008]",
      "dest": "call_expression [28658,28670]"
    },
    {
      "src": "boolean_literal [16761,16766]",
      "dest": "boolean_literal [16760,16765]"
    },
    {
      "src": "pure: pure [18879,18883]",
      "dest": "pure: pure [18878,18882]"
    },
    {
      "src": "[: [ [29266,29267]",
      "dest": "[: [ [28928,28929]"
    },
    {
      "src": "parenthesized_expression [11703,11771]",
      "dest": "parenthesized_expression [11702,11770]"
    },
    {
      "src": "expression_statement [13331,13352]",
      "dest": "expression_statement [13330,13351]"
    },
    {
      "src": "identifier: errorMessage [7840,7852]",
      "dest": "identifier: errorMessage [7839,7851]"
    },
    {
      "src": "member_expression [5213,5234]",
      "dest": "member_expression [5212,5233]"
    },
    {
      "src": "expression_statement [26696,26735]",
      "dest": "expression_statement [26695,26734]"
    },
    {
      "src": "identifier: require [20818,20825]",
      "dest": "identifier: require [20817,20824]"
    },
    {
      "src": "string [29011,29032]",
      "dest": "string [28673,28694]"
    },
    {
      "src": "identifier: amount [26317,26323]",
      "dest": "identifier: amount [26316,26322]"
    },
    {
      "src": "call_argument [29219,29226]",
      "dest": "call_argument [28881,28888]"
    },
    {
      "src": "struct_expression [29211,29276]",
      "dest": "struct_expression [28873,28938]"
    },
    {
      "src": "type_name [2487,2502]",
      "dest": "type_name [2486,2501]"
    },
    {
      "src": ",: , [4130,4131]",
      "dest": ",: , [4129,4130]"
    },
    {
      "src": "type_name [29048,29055]",
      "dest": "type_name [28710,28717]"
    },
    {
      "src": "true: true [17476,17480]",
      "dest": "true: true [17475,17479]"
    },
    {
      "src": "yul_function_call [8206,8225]",
      "dest": "yul_function_call [8205,8224]"
    },
    {
      "src": "binary_expression [29306,29321]",
      "dest": "binary_expression [28968,28983]"
    },
    {
      "src": "identifier: require [28978,28985]",
      "dest": "identifier: require [28640,28647]"
    },
    {
      "src": "primitive_type [1291,1295]",
      "dest": "primitive_type [1290,1294]"
    },
    {
      "src": "false: false [17445,17450]",
      "dest": "false: false [17444,17449]"
    },
    {
      "src": "identifier: initializer [27004,27015]",
      "dest": "identifier: initializer [27003,27014]"
    },
    {
      "src": "): ) [24803,24804]",
      "dest": "): ) [24802,24803]"
    },
    {
      "src": "): ) [29279,29280]",
      "dest": "): ) [28941,28942]"
    },
    {
      "src": "identifier: sender [26715,26721]",
      "dest": "identifier: sender [26714,26720]"
    },
    {
      "src": ",: , [23086,23087]",
      "dest": ",: , [23085,23086]"
    },
    {
      "src": "identifier: target [5338,5344]",
      "dest": "identifier: target [5337,5343]"
    },
    {
      "src": "identifier: x [29650,29651]",
      "dest": "identifier: x [29312,29313]"
    },
    {
      "src": "bytes: bytes [22932,22937]",
      "dest": "bytes: bytes [22931,22936]"
    },
    {
      "src": "function: function [23982,23990]",
      "dest": "function: function [23981,23989]"
    },
    {
      "src": ",: , [5428,5429]",
      "dest": ",: , [5427,5428]"
    },
    {
      "src": "private: private [22079,22086]",
      "dest": "private: private [22078,22085]"
    },
    {
      "src": "identifier: value [4710,4715]",
      "dest": "identifier: value [4709,4714]"
    },
    {
      "src": "]: ] [23247,23248]",
      "dest": "]: ] [23246,23247]"
    },
    {
      "src": "return_type_definition [7620,7642]",
      "dest": "return_type_definition [7619,7641]"
    },
    {
      "src": "): ) [25623,25624]",
      "dest": "): ) [25622,25623]"
    },
    {
      "src": ".: . [29424,29425]",
      "dest": ".: . [29086,29087]"
    },
    {
      "src": "address: address [30022,30029]",
      "dest": "address: address [29684,29691]"
    },
    {
      "src": "type_name [22070,22077]",
      "dest": "type_name [22069,22076]"
    },
    {
      "src": "call_expression [27598,27662]",
      "dest": "call_expression [27597,27661]"
    },
    {
      "src": "): ) [14677,14678]",
      "dest": "): ) [14676,14677]"
    },
    {
      "src": ",: , [4708,4709]",
      "dest": ",: , [4707,4708]"
    },
    {
      "src": "<: < [15773,15774]",
      "dest": "<: < [15772,15773]"
    },
    {
      "src": "): ) [23396,23397]",
      "dest": "): ) [23395,23396]"
    },
    {
      "src": "identifier: success [2703,2710]",
      "dest": "identifier: success [2702,2709]"
    },
    {
      "src": "uint256: uint256 [16982,16989]",
      "dest": "uint256: uint256 [16981,16988]"
    },
    {
      "src": "call_argument [3667,3699]",
      "dest": "call_argument [3666,3698]"
    },
    {
      "src": "parameter [5725,5737]",
      "dest": "parameter [5724,5736]"
    },
    {
      "src": "function_body [23049,23636]",
      "dest": "function_body [23048,23635]"
    },
    {
      "src": "member_expression [11705,11734]",
      "dest": "member_expression [11704,11733]"
    },
    {
      "src": "uint256: uint256 [25906,25913]",
      "dest": "uint256: uint256 [25905,25912]"
    },
    {
      "src": "identifier: call [2662,2666]",
      "dest": "identifier: call [2661,2665]"
    },
    {
      "src": "binary_expression [17080,17086]",
      "dest": "binary_expression [17079,17085]"
    },
    {
      "src": "): ) [14420,14421]",
      "dest": "): ) [14419,14420]"
    },
    {
      "src": "identifier: encodePacked [24201,24213]",
      "dest": "identifier: encodePacked [24200,24212]"
    },
    {
      "src": "identifier: b [20871,20872]",
      "dest": "identifier: b [20870,20871]"
    },
    {
      "src": ",: , [26436,26437]",
      "dest": ",: , [26435,26436]"
    },
    {
      "src": "identifier: data [5093,5097]",
      "dest": "identifier: data [5092,5096]"
    },
    {
      "src": "bool: bool [6189,6193]",
      "dest": "bool: bool [6188,6192]"
    },
    {
      "src": "member_expression [6869,6886]",
      "dest": "member_expression [6868,6885]"
    },
    {
      "src": "event_paramater [11138,11151]",
      "dest": "event_paramater [11137,11150]"
    },
    {
      "src": "bool: bool [28270,28274]",
      "dest": "bool: bool [28269,28273]"
    },
    {
      "src": "type_name [11138,11143]",
      "dest": "type_name [11137,11142]"
    },
    {
      "src": "visibility [16362,16370]",
      "dest": "visibility [16361,16369]"
    },
    {
      "src": "primitive_type [25874,25881]",
      "dest": "primitive_type [25873,25880]"
    },
    {
      "src": "uint: uint [25261,25265]",
      "dest": "uint: uint [25260,25264]"
    },
    {
      "src": "type_name [17376,17380]",
      "dest": "type_name [17375,17379]"
    },
    {
      "src": "external: external [25698,25706]",
      "dest": "external: external [25697,25705]"
    },
    {
      "src": "): ) [5368,5369]",
      "dest": "): ) [5367,5368]"
    },
    {
      "src": "}: } [17149,17150]",
      "dest": "}: } [17148,17149]"
    },
    {
      "src": "if_statement [16097,16126]",
      "dest": "if_statement [16096,16125]"
    },
    {
      "src": "type_name [6679,6686]",
      "dest": "type_name [6678,6685]"
    },
    {
      "src": "parenthesized_expression [24387,24404]",
      "dest": "parenthesized_expression [24386,24403]"
    },
    {
      "src": "identifier: returndata [8214,8224]",
      "dest": "identifier: returndata [8213,8223]"
    },
    {
      "src": "function_body [29837,29884]",
      "dest": "function_body [29499,29546]"
    },
    {
      "src": "call_argument [24214,24219]",
      "dest": "call_argument [24213,24218]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [4158,4509]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [4157,4508]"
    },
    {
      "src": "event_paramater [26422,26436]",
      "dest": "event_paramater [26421,26435]"
    },
    {
      "src": "if_statement [14391,14529]",
      "dest": "if_statement [14390,14528]"
    },
    {
      "src": "type_name [19408,19415]",
      "dest": "type_name [19407,19414]"
    },
    {
      "src": ",: , [28351,28352]",
      "dest": ",: , [28350,28351]"
    },
    {
      "src": "tuple_expression [17126,17139]",
      "dest": "tuple_expression [17125,17138]"
    },
    {
      "src": ",: , [20690,20691]",
      "dest": ",: , [20689,20690]"
    },
    {
      "src": "primitive_type [23384,23391]",
      "dest": "primitive_type [23383,23390]"
    },
    {
      "src": ",: , [4715,4716]",
      "dest": ",: , [4714,4715]"
    },
    {
      "src": "identifier: vault [29221,29226]",
      "dest": "identifier: vault [28883,28888]"
    },
    {
      "src": "visibility [25957,25963]",
      "dest": "visibility [25956,25962]"
    },
    {
      "src": ".: . [1533,1534]",
      "dest": ".: . [1532,1533]"
    },
    {
      "src": "comment: /**      * @dev Returns the division of two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [16823,16961]",
      "dest": "comment: /**      * @dev Returns the division of two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [16822,16960]"
    },
    {
      "src": "return_statement [20860,20873]",
      "dest": "return_statement [20859,20872]"
    },
    {
      "src": "state_variable_declaration [10863,10890]",
      "dest": "state_variable_declaration [10862,10889]"
    },
    {
      "src": "number_literal: 0 [15793,15794]",
      "dest": "number_literal: 0 [15792,15793]"
    },
    {
      "src": "!=: != [16747,16749]",
      "dest": "!=: != [16746,16748]"
    },
    {
      "src": "if: if [16737,16739]",
      "dest": "if: if [16736,16738]"
    },
    {
      "src": "yul_path [22205,22207]",
      "dest": "yul_path [22204,22206]"
    },
    {
      "src": "return: return [19461,19467]",
      "dest": "return: return [19460,19466]"
    },
    {
      "src": "memory: memory [5187,5193]",
      "dest": "memory: memory [5186,5192]"
    },
    {
      "src": "call_argument [13420,13427]",
      "dest": "call_argument [13419,13426]"
    },
    {
      "src": "function_definition [19944,20175]",
      "dest": "function_definition [19943,20174]"
    },
    {
      "src": "): ) [25017,25018]",
      "dest": "): ) [25016,25017]"
    },
    {
      "src": "}: } [29883,29884]",
      "dest": "}: } [29545,29546]"
    },
    {
      "src": "call_argument [13240,13288]",
      "dest": "call_argument [13239,13287]"
    },
    {
      "src": "identifier: amount [26430,26436]",
      "dest": "identifier: amount [26429,26435]"
    },
    {
      "src": "type_name [18848,18855]",
      "dest": "type_name [18847,18854]"
    },
    {
      "src": "primitive_type [18859,18866]",
      "dest": "primitive_type [18858,18865]"
    },
    {
      "src": "variable_declaration [24163,24175]",
      "dest": "variable_declaration [24162,24174]"
    },
    {
      "src": "function_body [4657,4768]",
      "dest": "function_body [4656,4767]"
    },
    {
      "src": "library: library [239,246]",
      "dest": "library: library [238,245]"
    },
    {
      "src": "comment: /**      * @dev Triggered when the contract has been initialized or reinitialized.      */ [11025,11115]",
      "dest": "comment: /**      * @dev Triggered when the contract has been initialized or reinitialized.      */ [11024,11114]"
    },
    {
      "src": "identifier: txArray [28949,28956]",
      "dest": "identifier: txArray [28611,28618]"
    },
    {
      "src": "(: ( [27624,27625]",
      "dest": "(: ( [27623,27624]"
    },
    {
      "src": "state_variable_declaration [25949,25978]",
      "dest": "state_variable_declaration [25948,25977]"
    },
    {
      "src": "type_name [5107,5114]",
      "dest": "type_name [5106,5113]"
    },
    {
      "src": "call_argument [23571,23581]",
      "dest": "call_argument [23570,23580]"
    },
    {
      "src": "return: return [23893,23899]",
      "dest": "return: return [23892,23898]"
    },
    {
      "src": "boolean_literal [16147,16151]",
      "dest": "boolean_literal [16146,16150]"
    },
    {
      "src": "binary_expression [16101,16106]",
      "dest": "binary_expression [16100,16105]"
    },
    {
      "src": "type_name [25684,25688]",
      "dest": "type_name [25683,25687]"
    },
    {
      "src": "function: function [23642,23650]",
      "dest": "function: function [23641,23649]"
    },
    {
      "src": "primitive_type [7518,7522]",
      "dest": "primitive_type [7517,7521]"
    },
    {
      "src": "{: { [26779,26780]",
      "dest": "{: { [26778,26779]"
    },
    {
      "src": "(: ( [26558,26559]",
      "dest": "(: ( [26557,26558]"
    },
    {
      "src": "boolean_literal [17445,17450]",
      "dest": "boolean_literal [17444,17449]"
    },
    {
      "src": "variable_declaration [2634,2646]",
      "dest": "variable_declaration [2633,2645]"
    },
    {
      "src": "tuple_expression [17444,17454]",
      "dest": "tuple_expression [17443,17453]"
    },
    {
      "src": "expression_statement [7728,7762]",
      "dest": "expression_statement [7727,7761]"
    },
    {
      "src": "bytes: bytes [4062,4067]",
      "dest": "bytes: bytes [4061,4066]"
    },
    {
      "src": "expression_statement [27888,27947]",
      "dest": "expression_statement [27887,27946]"
    },
    {
      "src": "=>: => [26567,26569]",
      "dest": "=>: => [26566,26568]"
    },
    {
      "src": "{: { [18902,18903]",
      "dest": "{: { [18901,18902]"
    },
    {
      "src": "true [11929,11933]",
      "dest": "true [11928,11932]"
    },
    {
      "src": "parameter [23660,23672]",
      "dest": "parameter [23659,23671]"
    },
    {
      "src": "call_expression [23068,23159]",
      "dest": "call_expression [23067,23158]"
    },
    {
      "src": "return_statement [24380,24405]",
      "dest": "return_statement [24379,24404]"
    },
    {
      "src": "member_expression [29254,29265]",
      "dest": "member_expression [28916,28927]"
    },
    {
      "src": "identifier: errorMessage [4132,4144]",
      "dest": "identifier: errorMessage [4131,4143]"
    },
    {
      "src": "block_statement [17401,17499]",
      "dest": "block_statement [17400,17498]"
    },
    {
      "src": "visibility [17775,17783]",
      "dest": "visibility [17774,17782]"
    },
    {
      "src": "parameter [16982,16991]",
      "dest": "parameter [16981,16990]"
    },
    {
      "src": "type_name [18859,18866]",
      "dest": "type_name [18858,18865]"
    },
    {
      "src": "): ) [25696,25697]",
      "dest": "): ) [25695,25696]"
    },
    {
      "src": "emit: emit [13403,13407]",
      "dest": "emit: emit [13402,13406]"
    },
    {
      "src": "{: { [22191,22192]",
      "dest": "{: { [22190,22191]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol) [77,144]",
      "dest": "comment: // OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol) [76,143]"
    },
    {
      "src": "identifier: nonce [23721,23726]",
      "dest": "identifier: nonce [23720,23725]"
    },
    {
      "src": "memory: memory [6820,6826]",
      "dest": "memory: memory [6819,6825]"
    },
    {
      "src": "assignment_expression [13299,13321]",
      "dest": "assignment_expression [13298,13320]"
    },
    {
      "src": "string: string [6758,6764]",
      "dest": "string: string [6757,6763]"
    },
    {
      "src": "primitive_type [4062,4067]",
      "dest": "primitive_type [4061,4066]"
    },
    {
      "src": "type_name [25141,25147]",
      "dest": "type_name [25140,25146]"
    },
    {
      "src": "string: string [26908,26914]",
      "dest": "string: string [26907,26913]"
    },
    {
      "src": "identifier: a [18191,18192]",
      "dest": "identifier: a [18190,18191]"
    },
    {
      "src": "(: ( [25386,25387]",
      "dest": "(: ( [25385,25386]"
    },
    {
      "src": "): ) [5828,5829]",
      "dest": "): ) [5827,5828]"
    },
    {
      "src": "call_expression [20818,20846]",
      "dest": "call_expression [20817,20845]"
    },
    {
      "src": "bytes: bytes [6725,6730]",
      "dest": "bytes: bytes [6724,6729]"
    },
    {
      "src": "identifier: c [16798,16799]",
      "dest": "identifier: c [16797,16798]"
    },
    {
      "src": "identifier: increase [25516,25524]",
      "dest": "identifier: increase [25515,25523]"
    },
    {
      "src": "view: view [6150,6154]",
      "dest": "view: view [6149,6153]"
    },
    {
      "src": "call_expression [24178,24256]",
      "dest": "call_expression [24177,24255]"
    },
    {
      "src": "return_type_definition [1282,1296]",
      "dest": "return_type_definition [1281,1295]"
    },
    {
      "src": "expression_statement [29960,29984]",
      "dest": "expression_statement [29622,29646]"
    },
    {
      "src": "solidity: solidity [8493,8501]",
      "dest": "solidity: solidity [8492,8500]"
    },
    {
      "src": "parameter [24146,24150]",
      "dest": "parameter [24145,24149]"
    },
    {
      "src": "identifier: functionCallWithValue [4674,4695]",
      "dest": "identifier: functionCallWithValue [4673,4694]"
    },
    {
      "src": "parameter [17753,17762]",
      "dest": "parameter [17752,17761]"
    },
    {
      "src": ",: , [6312,6313]",
      "dest": ",: , [6311,6312]"
    },
    {
      "src": "identifier: errorMessage [5144,5156]",
      "dest": "identifier: errorMessage [5143,5155]"
    },
    {
      "src": "string [27992,28023]",
      "dest": "string [27991,28022]"
    },
    {
      "src": "string_literal [28352,28374]",
      "dest": "string_literal [28351,28373]"
    },
    {
      "src": "parameter [23696,23709]",
      "dest": "parameter [23695,23708]"
    },
    {
      "src": "{: { [29088,29089]",
      "dest": "{: { [28750,28751]"
    },
    {
      "src": "=: = [15746,15747]",
      "dest": "=: = [15745,15746]"
    },
    {
      "src": "}: } [16169,16170]",
      "dest": "}: } [16168,16169]"
    },
    {
      "src": "yul_function_call [8199,8243]",
      "dest": "yul_function_call [8198,8242]"
    },
    {
      "src": "address: address [25525,25532]",
      "dest": "address: address [25524,25531]"
    },
    {
      "src": "{: { [3611,3612]",
      "dest": "{: { [3610,3611]"
    },
    {
      "src": "(: ( [2486,2487]",
      "dest": "(: ( [2485,2486]"
    },
    {
      "src": "function_definition [5639,5836]",
      "dest": "function_definition [5638,5835]"
    },
    {
      "src": "identifier: _amount [27713,27720]",
      "dest": "identifier: _amount [27712,27719]"
    },
    {
      "src": "{: { [11984,11985]",
      "dest": "{: { [11983,11984]"
    },
    {
      "src": "identifier: _ [26744,26745]",
      "dest": "identifier: _ [26743,26744]"
    },
    {
      "src": "event_paramater [26410,26420]",
      "dest": "event_paramater [26409,26419]"
    },
    {
      "src": "mapping: mapping [26551,26558]",
      "dest": "mapping: mapping [26550,26557]"
    },
    {
      "src": "function_body [18902,18931]",
      "dest": "function_body [18901,18930]"
    },
    {
      "src": "expression_statement [26744,26746]",
      "dest": "expression_statement [26743,26745]"
    },
    {
      "src": "identifier: feesCollected [25964,25977]",
      "dest": "identifier: feesCollected [25963,25976]"
    },
    {
      "src": "string [14339,14380]",
      "dest": "string [14338,14379]"
    },
    {
      "src": "array_access [29240,29266]",
      "dest": "array_access [28902,28928]"
    },
    {
      "src": "identifier: token [29503,29508]",
      "dest": "identifier: token [29165,29170]"
    },
    {
      "src": "identifier: msg [28119,28122]",
      "dest": "identifier: msg [28118,28121]"
    },
    {
      "src": "for: for [21920,21923]",
      "dest": "for: for [21919,21922]"
    },
    {
      "src": "internal: internal [5702,5710]",
      "dest": "internal: internal [5701,5709]"
    },
    {
      "src": "uint256: uint256 [4605,4612]",
      "dest": "uint256: uint256 [4604,4611]"
    },
    {
      "src": "parameter [16351,16360]",
      "dest": "parameter [16350,16359]"
    },
    {
      "src": "primitive_type [25310,25317]",
      "dest": "primitive_type [25309,25316]"
    },
    {
      "src": "primitive_type [7540,7545]",
      "dest": "primitive_type [7539,7544]"
    },
    {
      "src": "if: if [11964,11966]",
      "dest": "if: if [11963,11965]"
    },
    {
      "src": "block_statement [17052,17150]",
      "dest": "block_statement [17051,17149]"
    },
    {
      "src": ",: , [16052,16053]",
      "dest": ",: , [16051,16052]"
    },
    {
      "src": "uint: uint [25684,25688]",
      "dest": "uint: uint [25683,25687]"
    },
    {
      "src": "block_statement [27874,28203]",
      "dest": "block_statement [27873,28202]"
    },
    {
      "src": "): ) [30047,30048]",
      "dest": "): ) [29709,29710]"
    },
    {
      "src": "!=: != [24341,24343]",
      "dest": "!=: != [24340,24342]"
    },
    {
      "src": "identifier: depositer [26284,26293]",
      "dest": "identifier: depositer [26283,26292]"
    },
    {
      "src": "}: } [2680,2681]",
      "dest": "}: } [2679,2680]"
    },
    {
      "src": "call_argument [28319,28321]",
      "dest": "call_argument [28318,28320]"
    },
    {
      "src": "string [23927,23961]",
      "dest": "string [23926,23960]"
    },
    {
      "src": "call_expression [28336,28375]",
      "dest": "call_expression [28335,28374]"
    },
    {
      "src": "comment: /**      * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling      * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.      *      * _Available since v4.8._      */ [6352,6629]",
      "dest": "comment: /**      * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling      * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.      *      * _Available since v4.8._      */ [6351,6628]"
    },
    {
      "src": "(: ( [20774,20775]",
      "dest": "(: ( [20773,20774]"
    },
    {
      "src": "number_literal: 0 [17434,17435]",
      "dest": "number_literal: 0 [17433,17434]"
    },
    {
      "src": "type_name [5181,5186]",
      "dest": "type_name [5180,5185]"
    },
    {
      "src": "identifier: returndata [5430,5440]",
      "dest": "identifier: returndata [5429,5439]"
    },
    {
      "src": "block_statement [7714,7772]",
      "dest": "block_statement [7713,7771]"
    },
    {
      "src": "(: ( [29804,29805]",
      "dest": "(: ( [29466,29467]"
    },
    {
      "src": "emit_statement [28143,28193]",
      "dest": "emit_statement [28142,28192]"
    },
    {
      "src": "uint: uint [25357,25361]",
      "dest": "uint: uint [25356,25360]"
    },
    {
      "src": "{: { [7198,7199]",
      "dest": "{: { [7197,7198]"
    },
    {
      "src": "memory: memory [27472,27478]",
      "dest": "memory: memory [27471,27477]"
    },
    {
      "src": "variable_declaration_statement [29048,29062]",
      "dest": "variable_declaration_statement [28710,28724]"
    },
    {
      "src": "(: ( [14460,14461]",
      "dest": "(: ( [14459,14460]"
    },
    {
      "src": "binary_expression [26704,26721]",
      "dest": "binary_expression [26703,26720]"
    },
    {
      "src": "primitive_type [25906,25913]",
      "dest": "primitive_type [25905,25912]"
    },
    {
      "src": "type_name [24541,24546]",
      "dest": "type_name [24540,24545]"
    },
    {
      "src": "contract: contract [25790,25798]",
      "dest": "contract: contract [25789,25797]"
    },
    {
      "src": "): ) [17487,17488]",
      "dest": "): ) [17486,17487]"
    },
    {
      "src": "call_argument [23420,23437]",
      "dest": "call_argument [23419,23436]"
    },
    {
      "src": "number_literal: 0 [17085,17086]",
      "dest": "number_literal: 0 [17084,17085]"
    },
    {
      "src": ",: , [13704,13705]",
      "dest": ",: , [13703,13704]"
    },
    {
      "src": "identifier: returndata [6314,6324]",
      "dest": "identifier: returndata [6313,6323]"
    },
    {
      "src": "member_expression [29650,29661]",
      "dest": "member_expression [29312,29323]"
    },
    {
      "src": "+=: += [28116,28118]",
      "dest": "+=: += [28115,28117]"
    },
    {
      "src": "identifier: token [28175,28180]",
      "dest": "identifier: token [28174,28179]"
    },
    {
      "src": "primitive_type [24013,24020]",
      "dest": "primitive_type [24012,24019]"
    },
    {
      "src": "): ) [3699,3700]",
      "dest": "): ) [3698,3699]"
    },
    {
      "src": "return: return [7680,7686]",
      "dest": "return: return [7679,7685]"
    },
    {
      "src": "return_statement [18912,18925]",
      "dest": "return_statement [18911,18924]"
    },
    {
      "src": "return_statement [15778,15796]",
      "dest": "return_statement [15777,15795]"
    },
    {
      "src": "call_expression [28161,28173]",
      "dest": "call_expression [28160,28172]"
    },
    {
      "src": "function_body [21660,21765]",
      "dest": "function_body [21659,21764]"
    },
    {
      "src": "return_type_definition [23865,23882]",
      "dest": "return_type_definition [23864,23881]"
    },
    {
      "src": "memory: memory [3603,3609]",
      "dest": "memory: memory [3602,3608]"
    },
    {
      "src": "type_name [4578,4583]",
      "dest": "type_name [4577,4582]"
    },
    {
      "src": "(: ( [17330,17331]",
      "dest": "(: ( [17329,17330]"
    },
    {
      "src": "if_statement [11964,12063]",
      "dest": "if_statement [11963,12062]"
    },
    {
      "src": "virtual: virtual [14297,14304]",
      "dest": "virtual: virtual [14296,14303]"
    },
    {
      "src": "(: ( [27700,27701]",
      "dest": "(: ( [27699,27700]"
    },
    {
      "src": "{: { [18174,18175]",
      "dest": "{: { [18173,18174]"
    },
    {
      "src": "event: event [26182,26187]",
      "dest": "event: event [26181,26186]"
    },
    {
      "src": "parameter [17764,17773]",
      "dest": "parameter [17763,17772]"
    },
    {
      "src": "call_argument [24197,24254]",
      "dest": "call_argument [24196,24253]"
    },
    {
      "src": "string_literal [2682,2684]",
      "dest": "string_literal [2681,2683]"
    },
    {
      "src": "bytes: bytes [3984,3989]",
      "dest": "bytes: bytes [3983,3988]"
    },
    {
      "src": "visibility [1268,1276]",
      "dest": "visibility [1267,1275]"
    },
    {
      "src": "identifier: Initialized [11126,11137]",
      "dest": "identifier: Initialized [11125,11136]"
    },
    {
      "src": "return_type_definition [17789,17806]",
      "dest": "return_type_definition [17788,17805]"
    },
    {
      "src": "uint256: uint256 [29048,29055]",
      "dest": "uint256: uint256 [28710,28717]"
    },
    {
      "src": "type_name [3984,3989]",
      "dest": "type_name [3983,3988]"
    },
    {
      "src": "return_statement [4086,4146]",
      "dest": "return_statement [4085,4145]"
    },
    {
      "src": "event_definition [26255,26358]",
      "dest": "event_definition [26254,26357]"
    },
    {
      "src": "return: return [6263,6269]",
      "dest": "return: return [6262,6268]"
    },
    {
      "src": "if_statement [17076,17106]",
      "dest": "if_statement [17075,17105]"
    },
    {
      "src": "identifier: msg [27906,27909]",
      "dest": "identifier: msg [27905,27908]"
    },
    {
      "src": "type_name [29805,29812]",
      "dest": "type_name [29467,29474]"
    },
    {
      "src": "=: = [29209,29210]",
      "dest": "=: = [28871,28872]"
    },
    {
      "src": "parameter [6108,6134]",
      "dest": "parameter [6107,6133]"
    },
    {
      "src": "): ) [13427,13428]",
      "dest": "): ) [13426,13427]"
    },
    {
      "src": "call_argument [2712,2772]",
      "dest": "call_argument [2711,2771]"
    },
    {
      "src": "parameter [16014,16023]",
      "dest": "parameter [16013,16022]"
    },
    {
      "src": "memory: memory [20011,20017]",
      "dest": "memory: memory [20010,20016]"
    },
    {
      "src": "type_name [6703,6707]",
      "dest": "type_name [6702,6706]"
    },
    {
      "src": "primitive_type [7826,7832]",
      "dest": "primitive_type [7825,7831]"
    },
    {
      "src": "(: ( [24351,24352]",
      "dest": "(: ( [24350,24351]"
    },
    {
      "src": "identifier: a [16105,16106]",
      "dest": "identifier: a [16104,16105]"
    },
    {
      "src": "(: ( [28343,28344]",
      "dest": "(: ( [28342,28343]"
    },
    {
      "src": "public: public [25914,25920]",
      "dest": "public: public [25913,25919]"
    },
    {
      "src": "type_name [25036,25040]",
      "dest": "type_name [25035,25039]"
    },
    {
      "src": "): ) [27213,27214]",
      "dest": "): ) [27212,27213]"
    },
    {
      "src": "address: address [6679,6686]",
      "dest": "address: address [6678,6685]"
    },
    {
      "src": "string [11785,11833]",
      "dest": "string [11784,11832]"
    },
    {
      "src": "}: } [20888,20889]",
      "dest": "}: } [20887,20888]"
    },
    {
      "src": "binary_expression [13198,13238]",
      "dest": "binary_expression [13197,13237]"
    },
    {
      "src": "{: { [13180,13181]",
      "dest": "{: { [13179,13180]"
    },
    {
      "src": "identifier: b [21584,21585]",
      "dest": "identifier: b [21583,21584]"
    },
    {
      "src": "identifier: success [7657,7664]",
      "dest": "identifier: success [7656,7663]"
    },
    {
      "src": "type_name [14415,14420]",
      "dest": "type_name [14414,14419]"
    },
    {
      "src": "return: return [16753,16759]",
      "dest": "return: return [16752,16758]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [17842,18102]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [17841,18101]"
    },
    {
      "src": "function_body [13673,13770]",
      "dest": "function_body [13672,13769]"
    },
    {
      "src": "]: ] [29274,29275]",
      "dest": "]: ] [28936,28937]"
    },
    {
      "src": "parameter [6164,6176]",
      "dest": "parameter [6163,6175]"
    },
    {
      "src": "identifier: value [27542,27547]",
      "dest": "identifier: value [27541,27546]"
    },
    {
      "src": "external: external [25335,25343]",
      "dest": "external: external [25334,25342]"
    },
    {
      "src": "event_paramater [26453,26469]",
      "dest": "event_paramater [26452,26468]"
    },
    {
      "src": "contract_body [10743,14956]",
      "dest": "contract_body [10742,14955]"
    },
    {
      "src": "variable_declaration [6189,6201]",
      "dest": "variable_declaration [6188,6200]"
    },
    {
      "src": "identifier: feesBuffer [27918,27928]",
      "dest": "identifier: feesBuffer [27917,27927]"
    },
    {
      "src": "function_definition [25507,25574]",
      "dest": "function_definition [25506,25573]"
    },
    {
      "src": "function: function [4514,4522]",
      "dest": "function: function [4513,4521]"
    },
    {
      "src": "internal: internal [16025,16033]",
      "dest": "internal: internal [16024,16032]"
    },
    {
      "src": "identifier: token [27438,27443]",
      "dest": "identifier: token [27437,27442]"
    },
    {
      "src": "memory: memory [6115,6121]",
      "dest": "memory: memory [6114,6120]"
    },
    {
      "src": "identifier: tokenName [26460,26469]",
      "dest": "identifier: tokenName [26459,26468]"
    },
    {
      "src": "binary_expression [24388,24403]",
      "dest": "binary_expression [24387,24402]"
    },
    {
      "src": "): ) [8224,8225]",
      "dest": "): ) [8223,8224]"
    },
    {
      "src": ".: . [29664,29665]",
      "dest": ".: . [29326,29327]"
    },
    {
      "src": "yul_evm_builtin [8165,8170]",
      "dest": "yul_evm_builtin [8164,8169]"
    },
    {
      "src": "call_argument [27825,27835]",
      "dest": "call_argument [27824,27834]"
    },
    {
      "src": "event_definition [26363,26486]",
      "dest": "event_definition [26362,26485]"
    },
    {
      "src": "type_name [26908,26914]",
      "dest": "type_name [26907,26913]"
    },
    {
      "src": "): ) [24254,24255]",
      "dest": "): ) [24253,24254]"
    },
    {
      "src": "call_argument [23550,23561]",
      "dest": "call_argument [23549,23560]"
    },
    {
      "src": "}: } [24920,24921]",
      "dest": "}: } [24919,24920]"
    },
    {
      "src": "solidity: solidity [15099,15107]",
      "dest": "solidity: solidity [15098,15106]"
    },
    {
      "src": ",: , [3665,3666]",
      "dest": ",: , [3664,3665]"
    },
    {
      "src": "expression_statement [21694,21723]",
      "dest": "expression_statement [21693,21722]"
    },
    {
      "src": ",: , [17480,17481]",
      "dest": ",: , [17479,17480]"
    },
    {
      "src": "): ) [14707,14708]",
      "dest": "): ) [14706,14707]"
    },
    {
      "src": "call_argument [4717,4760]",
      "dest": "call_argument [4716,4759]"
    },
    {
      "src": "type_name [27465,27471]",
      "dest": "type_name [27464,27470]"
    },
    {
      "src": "string_literal [23161,23196]",
      "dest": "string_literal [23160,23195]"
    },
    {
      "src": "boolean_literal [16792,16796]",
      "dest": "boolean_literal [16791,16795]"
    },
    {
      "src": "(: ( [14322,14323]",
      "dest": "(: ( [14321,14322]"
    },
    {
      "src": "primitive_type [17382,17389]",
      "dest": "primitive_type [17381,17388]"
    },
    {
      "src": "identifier: approve [25242,25249]",
      "dest": "identifier: approve [25241,25248]"
    },
    {
      "src": "view: view [1277,1281]",
      "dest": "view: view [1276,1280]"
    },
    {
      "src": ",: , [25476,25477]",
      "dest": ",: , [25475,25476]"
    },
    {
      "src": "visibility [23851,23859]",
      "dest": "visibility [23850,23858]"
    },
    {
      "src": "yul_path [8227,8242]",
      "dest": "yul_path [8226,8241]"
    },
    {
      "src": "identifier: div [18844,18847]",
      "dest": "identifier: div [18843,18846]"
    },
    {
      "src": "{: { [23049,23050]",
      "dest": "{: { [23048,23049]"
    },
    {
      "src": "identifier: max [14514,14517]",
      "dest": "identifier: max [14513,14516]"
    },
    {
      "src": "uint256: uint256 [20681,20688]",
      "dest": "uint256: uint256 [20680,20687]"
    },
    {
      "src": "call_argument [27647,27651]",
      "dest": "call_argument [27646,27650]"
    },
    {
      "src": ",: , [5309,5310]",
      "dest": ",: , [5308,5309]"
    },
    {
      "src": "number_literal: 0 [21706,21707]",
      "dest": "number_literal: 0 [21705,21706]"
    },
    {
      "src": "(: ( [27386,27387]",
      "dest": "(: ( [27385,27386]"
    },
    {
      "src": "visibility [14679,14687]",
      "dest": "visibility [14678,14686]"
    },
    {
      "src": "(: ( [16760,16761]",
      "dest": "(: ( [16759,16760]"
    },
    {
      "src": "returns: returns [25560,25567]",
      "dest": "returns: returns [25559,25566]"
    },
    {
      "src": "member_expression [29219,29226]",
      "dest": "member_expression [28881,28888]"
    },
    {
      "src": "false [13388,13393]",
      "dest": "false [13387,13392]"
    },
    {
      "src": "identifier: hash [24293,24297]",
      "dest": "identifier: hash [24292,24296]"
    },
    {
      "src": "expression_statement [29298,29334]",
      "dest": "expression_statement [28960,28996]"
    },
    {
      "src": "%: % [21745,21746]",
      "dest": "%: % [21744,21745]"
    },
    {
      "src": "call_argument [11663,11771]",
      "dest": "call_argument [11662,11770]"
    },
    {
      "src": "type_name [2634,2638]",
      "dest": "type_name [2633,2637]"
    },
    {
      "src": "type_name [15687,15691]",
      "dest": "type_name [15686,15690]"
    },
    {
      "src": ".: . [1528,1529]",
      "dest": ".: . [1527,1528]"
    },
    {
      "src": "visibility [28436,28442]",
      "dest": "visibility [28466,28472]"
    },
    {
      "src": "return: return [20146,20152]",
      "dest": "return: return [20145,20151]"
    },
    {
      "src": "identifier: id [22170,22172]",
      "dest": "identifier: id [22169,22171]"
    },
    {
      "src": "(: ( [23470,23471]",
      "dest": "(: ( [23469,23470]"
    },
    {
      "src": "string [24356,24375]",
      "dest": "string [24355,24374]"
    },
    {
      "src": "parameter [20060,20067]",
      "dest": "parameter [20059,20066]"
    },
    {
      "src": "function: function [28900,28908]",
      "dest": "function: function [28562,28570]"
    },
    {
      "src": "function_body [17391,17505]",
      "dest": "function_body [17390,17504]"
    },
    {
      "src": "parameter [23837,23849]",
      "dest": "parameter [23836,23848]"
    },
    {
      "src": ".: . [27507,27508]",
      "dest": ".: . [27506,27507]"
    },
    {
      "src": "expression_statement [28336,28376]",
      "dest": "expression_statement [28335,28375]"
    },
    {
      "src": "type_name [25465,25472]",
      "dest": "type_name [25464,25471]"
    },
    {
      "src": "parameter [19442,19449]",
      "dest": "parameter [19441,19448]"
    },
    {
      "src": "comment: //SPDX-License-Identifier: UNLICENSED [21804,21841]",
      "dest": "comment: //SPDX-License-Identifier: UNLICENSED [21803,21840]"
    },
    {
      "src": "parameter [4605,4618]",
      "dest": "parameter [4604,4617]"
    },
    {
      "src": "): ) [17138,17139]",
      "dest": "): ) [17137,17138]"
    },
    {
      "src": "call_argument [27968,27991]",
      "dest": "call_argument [27967,27990]"
    },
    {
      "src": "identifier: length [6880,6886]",
      "dest": "identifier: length [6879,6885]"
    },
    {
      "src": ",: , [21987,21988]",
      "dest": ",: , [21986,21987]"
    },
    {
      "src": "): ) [27610,27611]",
      "dest": "): ) [27609,27610]"
    },
    {
      "src": "variable_declaration_statement [29102,29137]",
      "dest": "variable_declaration_statement [28764,28799]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol [8328,8402]",
      "dest": "comment: // File: @openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol [8327,8401]"
    },
    {
      "src": "member_expression [24197,24213]",
      "dest": "member_expression [24196,24212]"
    },
    {
      "src": "identifier: BasicMetaTransaction [25807,25827]",
      "dest": "identifier: BasicMetaTransaction [25806,25826]"
    },
    {
      "src": ",: , [15691,15692]",
      "dest": ",: , [15690,15691]"
    },
    {
      "src": "identifier: errorMessage [7232,7244]",
      "dest": "identifier: errorMessage [7231,7243]"
    },
    {
      "src": ",: , [26420,26421]",
      "dest": ",: , [26419,26420]"
    },
    {
      "src": "block_statement [11899,11944]",
      "dest": "block_statement [11898,11943]"
    },
    {
      "src": "member_expression [23571,23581]",
      "dest": "member_expression [23570,23580]"
    },
    {
      "src": "add: add [8206,8209]",
      "dest": "add: add [8205,8208]"
    },
    {
      "src": "function_definition [15987,16176]",
      "dest": "function_definition [15986,16175]"
    },
    {
      "src": "returns: returns [23865,23872]",
      "dest": "returns: returns [23864,23871]"
    },
    {
      "src": "address: address [3960,3967]",
      "dest": "address: address [3959,3966]"
    },
    {
      "src": "+=: += [27748,27750]",
      "dest": "+=: += [27747,27749]"
    },
    {
      "src": "): ) [25122,25123]",
      "dest": "): ) [25121,25122]"
    },
    {
      "src": "*: * [16720,16721]",
      "dest": "*: * [16719,16720]"
    },
    {
      "src": "memory: memory [5731,5737]",
      "dest": "memory: memory [5730,5736]"
    },
    {
      "src": "variable_declaration_statement [22162,22173]",
      "dest": "variable_declaration_statement [22161,22172]"
    },
    {
      "src": "): ) [28075,28076]",
      "dest": "): ) [28074,28075]"
    },
    {
      "src": "]: ] [29499,29500]",
      "dest": "]: ] [29161,29162]"
    },
    {
      "src": "\": \" [28352,28353]",
      "dest": "\": \" [28351,28352]"
    },
    {
      "src": "primitive_type [19408,19415]",
      "dest": "primitive_type [19407,19414]"
    },
    {
      "src": "(: ( [13164,13165]",
      "dest": "(: ( [13163,13164]"
    },
    {
      "src": "type_name [2514,2521]",
      "dest": "type_name [2513,2520]"
    },
    {
      "src": "call_expression [28453,28483]",
      "dest": "call_expression [28483,28513]"
    },
    {
      "src": "type_name [26551,26575]",
      "dest": "type_name [26550,26574]"
    },
    {
      "src": ",: , [23478,23479]",
      "dest": ",: , [23477,23478]"
    },
    {
      "src": "(: ( [7083,7084]",
      "dest": "(: ( [7082,7083]"
    },
    {
      "src": "comment: // Look for revert reason and bubble it up if present [7877,7930]",
      "dest": "comment: // Look for revert reason and bubble it up if present [7876,7929]"
    },
    {
      "src": "==: == [29161,29163]",
      "dest": "==: == [28823,28825]"
    },
    {
      "src": "pragma: pragma [15092,15098]",
      "dest": "pragma: pragma [15091,15097]"
    },
    {
      "src": "identifier: array [24554,24559]",
      "dest": "identifier: array [24553,24558]"
    },
    {
      "src": "identifier: depositer [29490,29499]",
      "dest": "identifier: depositer [29152,29161]"
    },
    {
      "src": "call_argument [11785,11833]",
      "dest": "call_argument [11784,11832]"
    },
    {
      "src": "call_argument [5245,5285]",
      "dest": "call_argument [5244,5284]"
    },
    {
      "src": "boolean_literal [15817,15821]",
      "dest": "boolean_literal [15816,15820]"
    },
    {
      "src": "if: if [16664,16666]",
      "dest": "if: if [16663,16665]"
    },
    {
      "src": "pure: pure [16034,16038]",
      "dest": "pure: pure [16033,16037]"
    },
    {
      "src": "parameter [25323,25333]",
      "dest": "parameter [25322,25332]"
    },
    {
      "src": "): ) [2684,2685]",
      "dest": "): ) [2683,2684]"
    },
    {
      "src": "identifier: c [16741,16742]",
      "dest": "identifier: c [16740,16741]"
    },
    {
      "src": "{: { [13673,13674]",
      "dest": "{: { [13672,13673]"
    },
    {
      "src": "call_argument [24187,24255]",
      "dest": "call_argument [24186,24254]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/utils/math/SafeMath.sol [14958,15014]",
      "dest": "comment: // File: @openzeppelin/contracts/utils/math/SafeMath.sol [14957,15013]"
    },
    {
      "src": "identifier: nonce [24021,24026]",
      "dest": "identifier: nonce [24020,24025]"
    },
    {
      "src": "(: ( [25016,25017]",
      "dest": "(: ( [25015,25016]"
    },
    {
      "src": "event_paramater [22021,22044]",
      "dest": "event_paramater [22020,22043]"
    },
    {
      "src": "augmented_assignment_expression [28102,28128]",
      "dest": "augmented_assignment_expression [28101,28127]"
    },
    {
      "src": "assignment_expression [23721,23741]",
      "dest": "assignment_expression [23720,23740]"
    },
    {
      "src": "type_cast_expression [2557,2570]",
      "dest": "type_cast_expression [2556,2569]"
    },
    {
      "src": "): ) [24802,24803]",
      "dest": "): ) [24801,24802]"
    },
    {
      "src": "identifier: success [23471,23478]",
      "dest": "identifier: success [23470,23477]"
    },
    {
      "src": "visibility [5163,5171]",
      "dest": "visibility [5162,5170]"
    },
    {
      "src": "primitive_type [25983,25990]",
      "dest": "primitive_type [25982,25989]"
    },
    {
      "src": "(: ( [24145,24146]",
      "dest": "(: ( [24144,24145]"
    },
    {
      "src": "==: == [24394,24396]",
      "dest": "==: == [24393,24395]"
    },
    {
      "src": "identifier: _getInitializedVersion [14654,14676]",
      "dest": "identifier: _getInitializedVersion [14653,14675]"
    },
    {
      "src": "identifier: sigV [24119,24123]",
      "dest": "identifier: sigV [24118,24122]"
    },
    {
      "src": "address: address [26816,26823]",
      "dest": "address: address [26815,26822]"
    },
    {
      "src": "binary_expression [5213,5243]",
      "dest": "binary_expression [5212,5242]"
    },
    {
      "src": "comment: /**      * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the      * revert reason or using the provided one.      *      * _Available since v4.3._      */ [7268,7478]",
      "dest": "comment: /**      * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the      * revert reason or using the provided one.      *      * _Available since v4.3._      */ [7267,7477]"
    },
    {
      "src": ",: , [17762,17763]",
      "dest": ",: , [17761,17762]"
    },
    {
      "src": "): ) [4623,4624]",
      "dest": "): ) [4622,4623]"
    },
    {
      "src": "tuple_expression [16791,16800]",
      "dest": "tuple_expression [16790,16799]"
    },
    {
      "src": "): ) [24848,24849]",
      "dest": "): ) [24847,24848]"
    },
    {
      "src": "internal: internal [17004,17012]",
      "dest": "internal: internal [17003,17011]"
    },
    {
      "src": "(: ( [27040,27041]",
      "dest": "(: ( [27039,27040]"
    },
    {
      "src": "type_name [18131,18138]",
      "dest": "type_name [18130,18137]"
    },
    {
      "src": "function_definition [23982,24411]",
      "dest": "function_definition [23981,24410]"
    },
    {
      "src": "external: external [27215,27223]",
      "dest": "external: external [27214,27222]"
    },
    {
      "src": "!=: != [27376,27378]",
      "dest": "!=: != [27375,27377]"
    },
    {
      "src": "if: if [17425,17427]",
      "dest": "if: if [17424,17426]"
    },
    {
      "src": "identifier: account [1259,1266]",
      "dest": "identifier: account [1258,1265]"
    },
    {
      "src": "}: } [14953,14954]",
      "dest": "}: } [14952,14953]"
    },
    {
      "src": "public: public [24125,24131]",
      "dest": "public: public [24124,24130]"
    },
    {
      "src": "\": \" [5827,5828]",
      "dest": "\": \" [5826,5827]"
    },
    {
      "src": "identifier: require [20103,20110]",
      "dest": "identifier: require [20102,20109]"
    },
    {
      "src": "variable_declaration [11596,11615]",
      "dest": "variable_declaration [11595,11614]"
    },
    {
      "src": "identifier: _msgSender [27690,27700]",
      "dest": "identifier: _msgSender [27689,27699]"
    },
    {
      "src": "visibility [18485,18493]",
      "dest": "visibility [18484,18492]"
    },
    {
      "src": "primitive_type [10863,10868]",
      "dest": "primitive_type [10862,10867]"
    },
    {
      "src": "\": \" [30096,30097]",
      "dest": "\": \" [29758,29759]"
    },
    {
      "src": "identifier: isContract [1240,1250]",
      "dest": "identifier: isContract [1239,1249]"
    },
    {
      "src": "emit_statement [23521,23603]",
      "dest": "emit_statement [23520,23602]"
    },
    {
      "src": "identifier: _ [13361,13362]",
      "dest": "identifier: _ [13360,13361]"
    },
    {
      "src": "binary_expression [16741,16751]",
      "dest": "binary_expression [16740,16750]"
    },
    {
      "src": "{: { [23883,23884]",
      "dest": "{: { [23882,23883]"
    },
    {
      "src": "}: } [16175,16176]",
      "dest": "}: } [16174,16175]"
    },
    {
      "src": "\": \" [5284,5285]",
      "dest": "\": \" [5283,5284]"
    },
    {
      "src": "}: } [17504,17505]",
      "dest": "}: } [17503,17504]"
    },
    {
      "src": "return_statement [18527,18540]",
      "dest": "return_statement [18526,18539]"
    },
    {
      "src": "{: { [5349,5350]",
      "dest": "{: { [5348,5349]"
    },
    {
      "src": "visibility [15664,15672]",
      "dest": "visibility [15663,15671]"
    },
    {
      "src": "if_statement [6838,7256]",
      "dest": "if_statement [6837,7255]"
    },
    {
      "src": "array_access [27676,27710]",
      "dest": "array_access [27675,27709]"
    },
    {
      "src": "call_argument [23963,23967]",
      "dest": "call_argument [23962,23966]"
    },
    {
      "src": "identifier: functionSignature [24236,24253]",
      "dest": "identifier: functionSignature [24235,24252]"
    },
    {
      "src": "): ) [11584,11585]",
      "dest": "): ) [11583,11584]"
    },
    {
      "src": "internal: internal [3579,3587]",
      "dest": "internal: internal [3578,3586]"
    },
    {
      "src": "type_name [22972,22979]",
      "dest": "type_name [22971,22978]"
    },
    {
      "src": "identifier: hash [23963,23967]",
      "dest": "identifier: hash [23962,23966]"
    },
    {
      "src": "function_body [5195,5462]",
      "dest": "function_body [5194,5461]"
    },
    {
      "src": "uint256: uint256 [20775,20782]",
      "dest": "uint256: uint256 [20774,20781]"
    },
    {
      "src": "array_access [29126,29136]",
      "dest": "array_access [28788,28798]"
    },
    {
      "src": "memory: memory [23041,23047]",
      "dest": "memory: memory [23040,23046]"
    },
    {
      "src": "type_name [4643,4648]",
      "dest": "type_name [4642,4647]"
    },
    {
      "src": "(: ( [17444,17445]",
      "dest": "(: ( [17443,17444]"
    },
    {
      "src": "array_access [29636,29671]",
      "dest": "array_access [29298,29333]"
    },
    {
      "src": "type_name [15642,15649]",
      "dest": "type_name [15641,15648]"
    },
    {
      "src": ">: > [20828,20829]",
      "dest": ">: > [20827,20828]"
    },
    {
      "src": "parameter [14702,14707]",
      "dest": "parameter [14701,14706]"
    },
    {
      "src": "(: ( [16115,16116]",
      "dest": "(: ( [16114,16115]"
    },
    {
      "src": "}: } [21766,21767]",
      "dest": "}: } [21765,21766]"
    },
    {
      "src": "]: ] [23106,23107]",
      "dest": "]: ] [23105,23106]"
    },
    {
      "src": "comment: // mapping(address=> bool) public fraudDeposit; [26014,26061]",
      "dest": "comment: // mapping(address=> bool) public fraudDeposit; [26013,26060]"
    },
    {
      "src": "solidity_version_comparison_operator [161,163]",
      "dest": "solidity_version_comparison_operator [160,162]"
    },
    {
      "src": "identifier: functionCallWithValue [4523,4544]",
      "dest": "identifier: functionCallWithValue [4522,4543]"
    },
    {
      "src": ".: . [27541,27542]",
      "dest": ".: . [27540,27541]"
    },
    {
      "src": "identifier: functionSignature [22027,22044]",
      "dest": "identifier: functionSignature [22026,22043]"
    },
    {
      "src": "{: { [29950,29951]",
      "dest": "{: { [29612,29613]"
    },
    {
      "src": "identifier: a [16153,16154]",
      "dest": "identifier: a [16152,16153]"
    },
    {
      "src": "revert_statement [8287,8308]",
      "dest": "revert_statement [8286,8307]"
    },
    {
      "src": "identifier: this [24221,24225]",
      "dest": "identifier: this [24220,24224]"
    },
    {
      "src": "parameter [13165,13178]",
      "dest": "parameter [13164,13177]"
    },
    {
      "src": "false: false [15786,15791]",
      "dest": "false: false [15785,15790]"
    },
    {
      "src": "parameter [25141,25154]",
      "dest": "parameter [25140,25153]"
    },
    {
      "src": "address: address [23660,23667]",
      "dest": "address: address [23659,23666]"
    },
    {
      "src": "internal: internal [18870,18878]",
      "dest": "internal: internal [18869,18877]"
    },
    {
      "src": "(: ( [23997,23998]",
      "dest": "(: ( [23996,23997]"
    },
    {
      "src": "type_name [4605,4612]",
      "dest": "type_name [4604,4611]"
    },
    {
      "src": ",: , [29206,29207]",
      "dest": ",: , [28868,28869]"
    },
    {
      "src": "identifier: amount [26242,26248]",
      "dest": "identifier: amount [26241,26247]"
    },
    {
      "src": "(: ( [13690,13691]",
      "dest": "(: ( [13689,13690]"
    },
    {
      "src": "revert: revert [8287,8293]",
      "dest": "revert: revert [8286,8292]"
    },
    {
      "src": "{: { [15702,15703]",
      "dest": "{: { [15701,15702]"
    },
    {
      "src": "tuple_expression [16146,16159]",
      "dest": "tuple_expression [16145,16158]"
    },
    {
      "src": "identifier: _initialized [11753,11765]",
      "dest": "identifier: _initialized [11752,11764]"
    },
    {
      "src": "): ) [7135,7136]",
      "dest": "): ) [7134,7135]"
    },
    {
      "src": "identifier: msg [24498,24501]",
      "dest": "identifier: msg [24497,24500]"
    },
    {
      "src": "}: } [16816,16817]",
      "dest": "}: } [16815,16816]"
    },
    {
      "src": "identifier: _initializing [13691,13704]",
      "dest": "identifier: _initializing [13690,13703]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [5468,5634]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [5467,5633]"
    },
    {
      "src": "identifier: tryMod [17324,17330]",
      "dest": "identifier: tryMod [17323,17329]"
    },
    {
      "src": "}: } [12062,12063]",
      "dest": "}: } [12061,12062]"
    },
    {
      "src": "): ) [16398,16399]",
      "dest": "): ) [16397,16398]"
    },
    {
      "src": "primitive_type [14415,14420]",
      "dest": "primitive_type [14414,14419]"
    },
    {
      "src": "identifier: errorMessage [20733,20745]",
      "dest": "identifier: errorMessage [20732,20744]"
    },
    {
      "src": "(: ( [29305,29306]",
      "dest": "(: ( [28967,28968]"
    },
    {
      "src": "identifier: IERC20 [24986,24992]",
      "dest": "identifier: IERC20 [24985,24991]"
    },
    {
      "src": "identifier: require [21694,21701]",
      "dest": "identifier: require [21693,21700]"
    },
    {
      "src": "address: address [24266,24273]",
      "dest": "address: address [24265,24272]"
    },
    {
      "src": "primitive_type [25525,25532]",
      "dest": "primitive_type [25524,25531]"
    },
    {
      "src": "pragma_directive [8486,8509]",
      "dest": "pragma_directive [8485,8508]"
    },
    {
      "src": ".: . [29074,29075]",
      "dest": ".: . [28736,28737]"
    },
    {
      "src": "identifier: _revert [7793,7800]",
      "dest": "identifier: _revert [7792,7799]"
    },
    {
      "src": "): ) [24525,24526]",
      "dest": "): ) [24524,24525]"
    },
    {
      "src": "identifier: userAddress [23236,23247]",
      "dest": "identifier: userAddress [23235,23246]"
    },
    {
      "src": "identifier: a [18919,18920]",
      "dest": "identifier: a [18918,18919]"
    },
    {
      "src": "\": \" [13287,13288]",
      "dest": "\": \" [13286,13287]"
    },
    {
      "src": "solidity_version: 0.8.18 [24968,24974]",
      "dest": "solidity_version: 0.8.18 [24967,24973]"
    },
    {
      "src": "event_paramater [26309,26323]",
      "dest": "event_paramater [26308,26322]"
    },
    {
      "src": ".: . [27971,27972]",
      "dest": ".: . [27970,27971]"
    },
    {
      "src": "uint: uint [25221,25225]",
      "dest": "uint: uint [25220,25224]"
    },
    {
      "src": "return: return [4086,4092]",
      "dest": "return: return [4085,4091]"
    },
    {
      "src": "state_mutability [17013,17017]",
      "dest": "state_mutability [17012,17016]"
    },
    {
      "src": "): ) [24483,24484]",
      "dest": "): ) [24482,24483]"
    },
    {
      "src": ".: . [5226,5227]",
      "dest": ".: . [5225,5226]"
    },
    {
      "src": "primitive_type [13165,13170]",
      "dest": "primitive_type [13164,13169]"
    },
    {
      "src": "type_cast_expression [23384,23397]",
      "dest": "type_cast_expression [23383,23396]"
    },
    {
      "src": "call_expression [5756,5829]",
      "dest": "call_expression [5755,5828]"
    },
    {
      "src": "identifier: this [27647,27651]",
      "dest": "identifier: this [27646,27650]"
    }
  ],
  "actions": [
    {
      "action": "insert-tree",
      "tree": "expression_statement [28388,28406]",
      "parent": "block_statement [28254,28416]",
      "at": 3
    },
    {
      "action": "delete-node",
      "tree": "comment: // function spotting( [28532,28553]"
    },
    {
      "action": "delete-node",
      "tree": "comment: //     address _depositer, [28558,28584]"
    },
    {
      "action": "delete-node",
      "tree": "comment: //     address _vault, [28589,28611]"
    },
    {
      "action": "delete-node",
      "tree": "comment: //     bool _check [28616,28634]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // ) external { [28639,28654]"
    },
    {
      "action": "delete-node",
      "tree": "comment: //     require(isSpotter[_msgSender]); [28659,28697]"
    },
    {
      "action": "delete-node",
      "tree": "comment: //     token.transfer(_vault, amountDeposited[_depositer]); [28702,28761]"
    },
    {
      "action": "delete-node",
      "tree": "comment: //     emit spotted(_depositer, check, amountDeposited[_depositer], vault); [28766,28841]"
    },
    {
      "action": "delete-node",
      "tree": "comment: //     amountDeposited[_depositer] = 0; [28846,28885]"
    },
    {
      "action": "delete-node",
      "tree": "comment: // } [28890,28894]"
    }
  ]
}