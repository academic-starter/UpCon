{
  "matches": [
    {
      "src": "visibility [26575,26581]",
      "dest": "visibility [26575,26581]"
    },
    {
      "src": "expression_statement [7075,7136]",
      "dest": "expression_statement [7075,7136]"
    },
    {
      "src": "function_definition [29552,29652]",
      "dest": "function_definition [29625,29725]"
    },
    {
      "src": "): ) [7134,7135]",
      "dest": "): ) [7134,7135]"
    },
    {
      "src": "modifier_definition [13141,13434]",
      "dest": "modifier_definition [13141,13434]"
    },
    {
      "src": "<: < [11694,11695]",
      "dest": "<: < [11694,11695]"
    },
    {
      "src": "call_expression [7211,7244]",
      "dest": "call_expression [7211,7244]"
    },
    {
      "src": "identifier: functionSignature [23122,23139]",
      "dest": "identifier: functionSignature [23122,23139]"
    },
    {
      "src": "bytes: bytes [23356,23361]",
      "dest": "bytes: bytes [23356,23361]"
    },
    {
      "src": "identifier: b [18481,18482]",
      "dest": "identifier: b [18481,18482]"
    },
    {
      "src": "(: ( [21546,21547]",
      "dest": "(: ( [21546,21547]"
    },
    {
      "src": "(: ( [3542,3543]",
      "dest": "(: ( [3542,3543]"
    },
    {
      "src": "variable_declaration [6202,6225]",
      "dest": "variable_declaration [6202,6225]"
    },
    {
      "src": "binary_expression [26703,26720]",
      "dest": "binary_expression [26703,26720]"
    },
    {
      "src": "return_statement [14718,14738]",
      "dest": "return_statement [14718,14738]"
    },
    {
      "src": "yul_path [22204,22206]",
      "dest": "yul_path [22204,22206]"
    },
    {
      "src": "(: ( [17427,17428]",
      "dest": "(: ( [17427,17428]"
    },
    {
      "src": "identifier: c [16713,16714]",
      "dest": "identifier: c [16713,16714]"
    },
    {
      "src": "identifier: c [16740,16741]",
      "dest": "identifier: c [16740,16741]"
    },
    {
      "src": "primitive_type [27403,27409]",
      "dest": "primitive_type [27403,27409]"
    },
    {
      "src": "{: { [29612,29613]",
      "dest": "{: { [29685,29686]"
    },
    {
      "src": "type_name [25398,25402]",
      "dest": "type_name [25398,25402]"
    },
    {
      "src": "address: address [2556,2563]",
      "dest": "address: address [2556,2563]"
    },
    {
      "src": "uint256: uint256 [16981,16988]",
      "dest": "uint256: uint256 [16981,16988]"
    },
    {
      "src": "}: } [18201,18202]",
      "dest": "}: } [18201,18202]"
    },
    {
      "src": "identifier: version [13170,13177]",
      "dest": "identifier: version [13170,13177]"
    },
    {
      "src": "call_argument [4128,4129]",
      "dest": "call_argument [4128,4129]"
    },
    {
      "src": "bytes: bytes [22931,22936]",
      "dest": "bytes: bytes [22931,22936]"
    },
    {
      "src": "true [17126,17130]",
      "dest": "true [17126,17130]"
    },
    {
      "src": "visibility [28466,28472]",
      "dest": "visibility [28539,28545]"
    },
    {
      "src": "call_argument [29405,29413]",
      "dest": "call_argument [29478,29486]"
    },
    {
      "src": "identifier: target [5774,5780]",
      "dest": "identifier: target [5774,5780]"
    },
    {
      "src": "parameter [16047,16051]",
      "dest": "parameter [16047,16051]"
    },
    {
      "src": "parameter [14910,14914]",
      "dest": "parameter [14910,14914]"
    },
    {
      "src": "<=: <= [20112,20114]",
      "dest": "<=: <= [20112,20114]"
    },
    {
      "src": "): ) [13177,13178]",
      "dest": "): ) [13177,13178]"
    },
    {
      "src": "primitive_type [26788,26795]",
      "dest": "primitive_type [26788,26795]"
    },
    {
      "src": "(: ( [17094,17095]",
      "dest": "(: ( [17094,17095]"
    },
    {
      "src": "(: ( [27699,27700]",
      "dest": "(: ( [27699,27700]"
    },
    {
      "src": "string_literal [28939,28941]",
      "dest": "string_literal [29012,29014]"
    },
    {
      "src": "): ) [25121,25122]",
      "dest": "): ) [25121,25122]"
    },
    {
      "src": "uint8: uint8 [14506,14511]",
      "dest": "uint8: uint8 [14506,14511]"
    },
    {
      "src": "identifier: call [28292,28296]",
      "dest": "identifier: call [28339,28343]"
    },
    {
      "src": "=: = [27140,27141]",
      "dest": "=: = [27140,27141]"
    },
    {
      "src": "number_literal: 0 [1542,1543]",
      "dest": "number_literal: 0 [1542,1543]"
    },
    {
      "src": "type_name [26394,26401]",
      "dest": "type_name [26394,26401]"
    },
    {
      "src": "type_name [26308,26315]",
      "dest": "type_name [26308,26315]"
    },
    {
      "src": "(: ( [6295,6296]",
      "dest": "(: ( [6295,6296]"
    },
    {
      "src": "identifier: require [21693,21700]",
      "dest": "identifier: require [21693,21700]"
    },
    {
      "src": "address: address [26605,26612]",
      "dest": "address: address [26605,26612]"
    },
    {
      "src": "emit_statement [27774,27850]",
      "dest": "emit_statement [27774,27850]"
    },
    {
      "src": "\": \" [24355,24356]",
      "dest": "\": \" [24355,24356]"
    },
    {
      "src": ",: , [4000,4001]",
      "dest": ",: , [4000,4001]"
    },
    {
      "src": "comment: // mapping(address => uint256) public amountDeposited; [26491,26545]",
      "dest": "comment: // mapping(address => uint256) public amountDeposited; [26491,26545]"
    },
    {
      "src": "identifier: _msgSender [27794,27804]",
      "dest": "identifier: _msgSender [27794,27804]"
    },
    {
      "src": "function: function [26974,26982]",
      "dest": "function: function [26974,26982]"
    },
    {
      "src": "call_expression [27430,27443]",
      "dest": "call_expression [27430,27443]"
    },
    {
      "src": "\": \" [4758,4759]",
      "dest": "\": \" [4758,4759]"
    },
    {
      "src": "variable_declaration_tuple [28855,28870]",
      "dest": "variable_declaration_tuple [28928,28943]"
    },
    {
      "src": "identifier: require [28335,28342]",
      "dest": "identifier: require [28394,28401]"
    },
    {
      "src": "type_name [24265,24272]",
      "dest": "type_name [24265,24272]"
    },
    {
      "src": "function_body [24151,24410]",
      "dest": "function_body [24151,24410]"
    },
    {
      "src": "if: if [27365,27367]",
      "dest": "if: if [27365,27367]"
    },
    {
      "src": "identifier: require [27529,27536]",
      "dest": "identifier: require [27529,27536]"
    },
    {
      "src": "): ) [23379,23380]",
      "dest": "): ) [23379,23380]"
    },
    {
      "src": "call_expression [23402,23450]",
      "dest": "call_expression [23402,23450]"
    },
    {
      "src": "): ) [17452,17453]",
      "dest": "): ) [17452,17453]"
    },
    {
      "src": "): ) [28502,28503]",
      "dest": "): ) [28575,28576]"
    },
    {
      "src": "number_literal: 0 [16767,16768]",
      "dest": "number_literal: 0 [16767,16768]"
    },
    {
      "src": "type_name [17341,17348]",
      "dest": "type_name [17341,17348]"
    },
    {
      "src": "type_name [16013,16020]",
      "dest": "type_name [16013,16020]"
    },
    {
      "src": "identifier: prefixed [23827,23835]",
      "dest": "identifier: prefixed [23827,23835]"
    },
    {
      "src": "visibility [29594,29602]",
      "dest": "visibility [29667,29675]"
    },
    {
      "src": "boolean_literal [15816,15820]",
      "dest": "boolean_literal [15816,15820]"
    },
    {
      "src": "expression_statement [28725,28744]",
      "dest": "expression_statement [28798,28817]"
    },
    {
      "src": "bool: bool [28269,28273]",
      "dest": "bool: bool [28316,28320]"
    },
    {
      "src": "call_expression [5204,5285]",
      "dest": "call_expression [5204,5285]"
    },
    {
      "src": "(: ( [25248,25249]",
      "dest": "(: ( [25248,25249]"
    },
    {
      "src": "call_expression [27493,27506]",
      "dest": "call_expression [27493,27506]"
    },
    {
      "src": "function_definition [26974,27159]",
      "dest": "function_definition [26974,27159]"
    },
    {
      "src": "primitive_type [26421,26428]",
      "dest": "primitive_type [26421,26428]"
    },
    {
      "src": "): ) [23708,23709]",
      "dest": "): ) [23708,23709]"
    },
    {
      "src": "for: for [28705,28708]",
      "dest": "for: for [28778,28781]"
    },
    {
      "src": "}: } [15834,15835]",
      "dest": "}: } [15834,15835]"
    },
    {
      "src": "call_argument [3657,3661]",
      "dest": "call_argument [3657,3661]"
    },
    {
      "src": "call_expression [7075,7135]",
      "dest": "call_expression [7075,7135]"
    },
    {
      "src": "call_expression [2548,2621]",
      "dest": "call_expression [2548,2621]"
    },
    {
      "src": "identifier: a [20115,20116]",
      "dest": "identifier: a [20115,20116]"
    },
    {
      "src": "boolean_literal [17095,17100]",
      "dest": "boolean_literal [17095,17100]"
    },
    {
      "src": "state_mutability [27223,27230]",
      "dest": "state_mutability [27223,27230]"
    },
    {
      "src": "block_statement [28254,28416]",
      "dest": "block_statement [28297,28448]"
    },
    {
      "src": "return_type_definition [7619,7641]",
      "dest": "return_type_definition [7619,7641]"
    },
    {
      "src": "identifier: a [16989,16990]",
      "dest": "identifier: a [16989,16990]"
    },
    {
      "src": "\": \" [27560,27561]",
      "dest": "\": \" [27560,27561]"
    },
    {
      "src": "user_defined_type [26933,26945]",
      "dest": "user_defined_type [26933,26945]"
    },
    {
      "src": "if: if [28211,28213]",
      "dest": "if: if [28268,28270]"
    },
    {
      "src": "visibility [23673,23681]",
      "dest": "visibility [23673,23681]"
    },
    {
      "src": ",: , [26393,26394]",
      "dest": ",: , [26393,26394]"
    },
    {
      "src": "binary_expression [11703,11769]",
      "dest": "binary_expression [11703,11769]"
    },
    {
      "src": "): ) [6337,6338]",
      "dest": "): ) [6337,6338]"
    },
    {
      "src": "visibility [26996,27002]",
      "dest": "visibility [26996,27002]"
    },
    {
      "src": "variable_declaration [28269,28281]",
      "dest": "variable_declaration [28316,28328]"
    },
    {
      "src": "&&: && [11678,11680]",
      "dest": "&&: && [11678,11680]"
    },
    {
      "src": ",: , [20830,20831]",
      "dest": ",: , [20830,20831]"
    },
    {
      "src": "): ) [11746,11747]",
      "dest": "): ) [11746,11747]"
    },
    {
      "src": "comment: // mapping(address=> mapping(bool=>bool)) public isfraud; [26119,26176]",
      "dest": "comment: // mapping(address=> mapping(bool=>bool)) public isfraud; [26119,26176]"
    },
    {
      "src": ">: > [27547,27548]",
      "dest": ">: > [27547,27548]"
    },
    {
      "src": "yul_identifier [24796,24801]",
      "dest": "yul_identifier [24796,24801]"
    },
    {
      "src": "): ) [27582,27583]",
      "dest": "): ) [27582,27583]"
    },
    {
      "src": "unary_expression [11617,11631]",
      "dest": "unary_expression [11617,11631]"
    },
    {
      "src": "): ) [24847,24848]",
      "dest": "): ) [24847,24848]"
    },
    {
      "src": "number_literal: 0 [17451,17452]",
      "dest": "number_literal: 0 [17451,17452]"
    },
    {
      "src": "solidity_version: 0.8.1 [162,167]",
      "dest": "solidity_version: 0.8.1 [162,167]"
    },
    {
      "src": "(: ( [24332,24333]",
      "dest": "(: ( [24332,24333]"
    },
    {
      "src": ",: , [27651,27652]",
      "dest": ",: , [27651,27652]"
    },
    {
      "src": "returns: returns [25348,25355]",
      "dest": "returns: returns [25348,25355]"
    },
    {
      "src": "(: ( [14505,14506]",
      "dest": "(: ( [14505,14506]"
    },
    {
      "src": "primitive_type [17381,17388]",
      "dest": "primitive_type [17381,17388]"
    },
    {
      "src": "identifier: msg [27537,27540]",
      "dest": "identifier: msg [27537,27540]"
    },
    {
      "src": "if_statement [27365,28202]",
      "dest": "if_statement [27365,28202]"
    },
    {
      "src": "{: { [5348,5349]",
      "dest": "{: { [5348,5349]"
    },
    {
      "src": "): ) [23195,23196]",
      "dest": "): ) [23195,23196]"
    },
    {
      "src": "member_expression [24899,24909]",
      "dest": "member_expression [24899,24909]"
    },
    {
      "src": "returns: returns [7619,7626]",
      "dest": "returns: returns [7619,7626]"
    },
    {
      "src": "augmented_assignment_expression [28101,28127]",
      "dest": "augmented_assignment_expression [28101,28127]"
    },
    {
      "src": "state_mutability [17783,17787]",
      "dest": "state_mutability [17783,17787]"
    },
    {
      "src": "identifier: functionSignature [24235,24252]",
      "dest": "identifier: functionSignature [24235,24252]"
    },
    {
      "src": "type_name [6757,6763]",
      "dest": "type_name [6757,6763]"
    },
    {
      "src": "identifier: Transactions [26933,26945]",
      "dest": "identifier: Transactions [26933,26945]"
    },
    {
      "src": "internal: internal [15663,15671]",
      "dest": "internal: internal [15663,15671]"
    },
    {
      "src": "identifier: feesBuffer [25997,26007]",
      "dest": "identifier: feesBuffer [25997,26007]"
    },
    {
      "src": "member_expression [2651,2665]",
      "dest": "member_expression [2651,2665]"
    },
    {
      "src": "type_name [26342,26348]",
      "dest": "type_name [26342,26348]"
    },
    {
      "src": "variable_declaration [23356,23379]",
      "dest": "variable_declaration [23356,23379]"
    },
    {
      "src": "identifier: returnData [23618,23628]",
      "dest": "identifier: returnData [23618,23628]"
    },
    {
      "src": "type_name [24084,24091]",
      "dest": "type_name [24084,24091]"
    },
    {
      "src": "comment: // The easiest way to bubble the revert reason is using memory via assembly [7979,8054]",
      "dest": "comment: // The easiest way to bubble the revert reason is using memory via assembly [7979,8054]"
    },
    {
      "src": "internal: internal [16361,16369]",
      "dest": "internal: internal [16361,16369]"
    },
    {
      "src": "identifier: ecrecover [24282,24291]",
      "dest": "identifier: ecrecover [24282,24291]"
    },
    {
      "src": "type_name [5296,5300]",
      "dest": "type_name [5296,5300]"
    },
    {
      "src": ",: , [24096,24097]",
      "dest": ",: , [24096,24097]"
    },
    {
      "src": "address: address [26293,26300]",
      "dest": "address: address [26293,26300]"
    },
    {
      "src": "): ) [14419,14420]",
      "dest": "): ) [14419,14420]"
    },
    {
      "src": "function_body [5738,5835]",
      "dest": "function_body [5738,5835]"
    },
    {
      "src": "binary_expression [20110,20116]",
      "dest": "binary_expression [20110,20116]"
    },
    {
      "src": "primitive_type [5106,5113]",
      "dest": "primitive_type [5106,5113]"
    },
    {
      "src": "identifier: a [15649,15650]",
      "dest": "identifier: a [15649,15650]"
    },
    {
      "src": "state_mutability [20045,20049]",
      "dest": "state_mutability [20045,20049]"
    },
    {
      "src": "): ) [20066,20067]",
      "dest": "): ) [20066,20067]"
    },
    {
      "src": "variable_declaration_tuple [23341,23380]",
      "dest": "variable_declaration_tuple [23341,23380]"
    },
    {
      "src": "bool: bool [28856,28860]",
      "dest": "bool: bool [28929,28933]"
    },
    {
      "src": "memory: memory [6169,6175]",
      "dest": "memory: memory [6169,6175]"
    },
    {
      "src": "parameter [6056,6070]",
      "dest": "parameter [6056,6070]"
    },
    {
      "src": ".: . [29060,29061]",
      "dest": ".: . [29133,29134]"
    },
    {
      "src": "array_access [29298,29333]",
      "dest": "array_access [29371,29406]"
    },
    {
      "src": "}: } [29651,29652]",
      "dest": "}: } [29724,29725]"
    },
    {
      "src": "identifier: id [22245,22247]",
      "dest": "identifier: id [22245,22247]"
    },
    {
      "src": "bytes: bytes [4577,4582]",
      "dest": "bytes: bytes [4577,4582]"
    },
    {
      "src": "boolean_literal [12013,12018]",
      "dest": "boolean_literal [12013,12018]"
    },
    {
      "src": "member_expression [14394,14424]",
      "dest": "member_expression [14394,14424]"
    },
    {
      "src": ",: , [6200,6201]",
      "dest": ",: , [6200,6201]"
    },
    {
      "src": "/: / [17134,17135]",
      "dest": "/: / [17134,17135]"
    },
    {
      "src": "primitive_type [26409,26413]",
      "dest": "primitive_type [26409,26413]"
    },
    {
      "src": "function_definition [16323,16816]",
      "dest": "function_definition [16323,16816]"
    },
    {
      "src": "function_body [26685,26751]",
      "dest": "function_body [26685,26751]"
    },
    {
      "src": "primitive_type [26861,26865]",
      "dest": "primitive_type [26861,26865]"
    },
    {
      "src": "identifier: functionCallWithValue [5024,5045]",
      "dest": "identifier: functionCallWithValue [5024,5045]"
    },
    {
      "src": "call_expression [13682,13751]",
      "dest": "call_expression [13682,13751]"
    },
    {
      "src": "expression_statement [23059,23197]",
      "dest": "expression_statement [23059,23197]"
    },
    {
      "src": ",: , [5096,5097]",
      "dest": ",: , [5096,5097]"
    },
    {
      "src": "): ) [7243,7244]",
      "dest": "): ) [7243,7244]"
    },
    {
      "src": "\": \" [13286,13287]",
      "dest": "\": \" [13286,13287]"
    },
    {
      "src": "if: if [14390,14392]",
      "dest": "if: if [14390,14392]"
    },
    {
      "src": "visibility [17774,17782]",
      "dest": "visibility [17774,17782]"
    },
    {
      "src": "(: ( [25355,25356]",
      "dest": "(: ( [25355,25356]"
    },
    {
      "src": "(: ( [26993,26994]",
      "dest": "(: ( [26993,26994]"
    },
    {
      "src": "parameter [16384,16388]",
      "dest": "parameter [16384,16388]"
    },
    {
      "src": "identifier: check [26866,26871]",
      "dest": "identifier: check [26866,26871]"
    },
    {
      "src": "}: } [2679,2680]",
      "dest": "}: } [2679,2680]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers, reverting with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [20180,20653]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers, reverting with custom message on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator. Note: this function uses a      * `revert` opcode (which leaves remaining gas untouched) while Solidity      * uses an invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [20180,20653]"
    },
    {
      "src": "(: ( [2563,2564]",
      "dest": "(: ( [2563,2564]"
    },
    {
      "src": "primitive_type [18858,18865]",
      "dest": "primitive_type [18858,18865]"
    },
    {
      "src": "type_name [16350,16357]",
      "dest": "type_name [16350,16357]"
    },
    {
      "src": "(: ( [25727,25728]",
      "dest": "(: ( [25727,25728]"
    },
    {
      "src": "identifier: version [13313,13320]",
      "dest": "identifier: version [13313,13320]"
    },
    {
      "src": "visibility [25274,25282]",
      "dest": "visibility [25274,25282]"
    },
    {
      "src": "identifier: multipleToken [29298,29311]",
      "dest": "identifier: multipleToken [29371,29384]"
    },
    {
      "src": "string: string [26907,26913]",
      "dest": "string: string [26907,26913]"
    },
    {
      "src": "identifier: IERC20 [24985,24991]",
      "dest": "identifier: IERC20 [24985,24991]"
    },
    {
      "src": "identifier: x [29219,29220]",
      "dest": "identifier: x [29292,29293]"
    },
    {
      "src": "primitive_type [26200,26207]",
      "dest": "primitive_type [26200,26207]"
    },
    {
      "src": "-: - [18192,18193]",
      "dest": "-: - [18192,18193]"
    },
    {
      "src": "}: } [17154,17155]",
      "dest": "}: } [17154,17155]"
    },
    {
      "src": "identifier: success [6193,6200]",
      "dest": "identifier: success [6193,6200]"
    },
    {
      "src": "type_name [15652,15659]",
      "dest": "type_name [15652,15659]"
    },
    {
      "src": "(: ( [15685,15686]",
      "dest": "(: ( [15685,15686]"
    },
    {
      "src": "parameter [25683,25695]",
      "dest": "parameter [25683,25695]"
    },
    {
      "src": "pure: pure [17012,17016]",
      "dest": "pure: pure [17012,17016]"
    },
    {
      "src": "identifier: transfer [25377,25385]",
      "dest": "identifier: transfer [25377,25385]"
    },
    {
      "src": ".: . [23405,23406]",
      "dest": ".: . [23405,23406]"
    },
    {
      "src": "uint256: uint256 [16002,16009]",
      "dest": "uint256: uint256 [16002,16009]"
    },
    {
      "src": "public: public [29711,29717]",
      "dest": "public: public [29784,29790]"
    },
    {
      "src": "=: = [28076,28077]",
      "dest": "=: = [28076,28077]"
    },
    {
      "src": "+: + [15749,15750]",
      "dest": "+: + [15749,15750]"
    },
    {
      "src": "type_name [17026,17030]",
      "dest": "type_name [17026,17030]"
    },
    {
      "src": "(: ( [13669,13670]",
      "dest": "(: ( [13669,13670]"
    },
    {
      "src": "expression_statement [20102,20132]",
      "dest": "expression_statement [20102,20132]"
    },
    {
      "src": "state_mutability [18150,18154]",
      "dest": "state_mutability [18150,18154]"
    },
    {
      "src": "uint256: uint256 [18858,18865]",
      "dest": "uint256: uint256 [18858,18865]"
    },
    {
      "src": ",: , [14336,14337]",
      "dest": ",: , [14336,14337]"
    },
    {
      "src": "primitive_type [17752,17759]",
      "dest": "primitive_type [17752,17759]"
    },
    {
      "src": "identifier: _ [13360,13361]",
      "dest": "identifier: _ [13360,13361]"
    },
    {
      "src": "parameter [21594,21620]",
      "dest": "parameter [21594,21620]"
    },
    {
      "src": "bytes: bytes [5079,5084]",
      "dest": "bytes: bytes [5079,5084]"
    },
    {
      "src": "external: external [25624,25632]",
      "dest": "external: external [25624,25632]"
    },
    {
      "src": "modifier_definition [26665,26751]",
      "dest": "modifier_definition [26665,26751]"
    },
    {
      "src": "type_name [16384,16388]",
      "dest": "type_name [16384,16388]"
    },
    {
      "src": "uint8: uint8 [10862,10867]",
      "dest": "uint8: uint8 [10862,10867]"
    },
    {
      "src": "return: return [17467,17473]",
      "dest": "return: return [17467,17473]"
    },
    {
      "src": "identifier: token [27207,27212]",
      "dest": "identifier: token [27207,27212]"
    },
    {
      "src": "uint256: uint256 [19407,19414]",
      "dest": "uint256: uint256 [19407,19414]"
    },
    {
      "src": "-: - [16154,16155]",
      "dest": "-: - [16154,16155]"
    },
    {
      "src": "(: ( [28170,28171]",
      "dest": "(: ( [28170,28171]"
    },
    {
      "src": "internal: internal [7605,7613]",
      "dest": "internal: internal [7605,7613]"
    },
    {
      "src": "yul_evm_builtin [24785,24788]",
      "dest": "yul_evm_builtin [24785,24788]"
    },
    {
      "src": "primitive_type [18130,18137]",
      "dest": "primitive_type [18130,18137]"
    },
    {
      "src": "visibility [25123,25131]",
      "dest": "visibility [25123,25131]"
    },
    {
      "src": "identifier: keccak256 [23899,23908]",
      "dest": "identifier: keccak256 [23899,23908]"
    },
    {
      "src": "call_argument [27560,27582]",
      "dest": "call_argument [27560,27582]"
    },
    {
      "src": "identifier: _initialized [14394,14406]",
      "dest": "identifier: _initialized [14394,14406]"
    },
    {
      "src": "(: ( [25139,25140]",
      "dest": "(: ( [25139,25140]"
    },
    {
      "src": "visibility [26948,26954]",
      "dest": "visibility [26948,26954]"
    },
    {
      "src": "(: ( [28061,28062]",
      "dest": "(: ( [28061,28062]"
    },
    {
      "src": "return_type_definition [14901,14915]",
      "dest": "return_type_definition [14901,14915]"
    },
    {
      "src": "true [15816,15820]",
      "dest": "true [15816,15820]"
    },
    {
      "src": "identifier: b [21746,21747]",
      "dest": "identifier: b [21746,21747]"
    },
    {
      "src": "(: ( [27448,27449]",
      "dest": "(: ( [27448,27449]"
    },
    {
      "src": ",: , [24110,24111]",
      "dest": ",: , [24110,24111]"
    },
    {
      "src": "\": \" [11831,11832]",
      "dest": "\": \" [11831,11832]"
    },
    {
      "src": "(: ( [25034,25035]",
      "dest": "(: ( [25034,25035]"
    },
    {
      "src": "(: ( [8292,8293]",
      "dest": "(: ( [8292,8293]"
    },
    {
      "src": "visibility [25491,25499]",
      "dest": "visibility [25491,25499]"
    },
    {
      "src": "identifier: a [17132,17133]",
      "dest": "identifier: a [17132,17133]"
    },
    {
      "src": "): ) [28074,28075]",
      "dest": "): ) [28074,28075]"
    },
    {
      "src": "): ) [25411,25412]",
      "dest": "): ) [25411,25412]"
    },
    {
      "src": "primitive_type [29576,29583]",
      "dest": "primitive_type [29649,29656]"
    },
    {
      "src": "array_access [23087,23106]",
      "dest": "array_access [23087,23106]"
    },
    {
      "src": "type_name [1250,1257]",
      "dest": "type_name [1250,1257]"
    },
    {
      "src": "function_definition [27165,28422]",
      "dest": "function_definition [27165,28495]"
    },
    {
      "src": "parameter [4010,4036]",
      "dest": "parameter [4010,4036]"
    },
    {
      "src": "function_body [6177,6345]",
      "dest": "function_body [6177,6345]"
    },
    {
      "src": "returns: returns [14692,14699]",
      "dest": "returns: returns [14692,14699]"
    },
    {
      "src": "call_argument [27794,27806]",
      "dest": "call_argument [27794,27806]"
    },
    {
      "src": "{: { [21897,21898]",
      "dest": "{: { [21897,21898]"
    },
    {
      "src": "(: ( [28833,28834]",
      "dest": "(: ( [28906,28907]"
    },
    {
      "src": "contract: contract [25789,25797]",
      "dest": "contract: contract [25789,25797]"
    },
    {
      "src": "==: == [24393,24395]",
      "dest": "==: == [24393,24395]"
    },
    {
      "src": "binary_expression [27537,27559]",
      "dest": "binary_expression [27537,27559]"
    },
    {
      "src": "comment: //SPDX-License-Identifier: UNLICENSED [21803,21840]",
      "dest": "comment: //SPDX-License-Identifier: UNLICENSED [21803,21840]"
    },
    {
      "src": "internal: internal [3578,3586]",
      "dest": "internal: internal [3578,3586]"
    },
    {
      "src": "\": \" [2711,2712]",
      "dest": "\": \" [2711,2712]"
    },
    {
      "src": "string_literal [28984,28994]",
      "dest": "string_literal [29057,29067]"
    },
    {
      "src": "identifier: functionStaticCall [5755,5773]",
      "dest": "identifier: functionStaticCall [5755,5773]"
    },
    {
      "src": "(: ( [27499,27500]",
      "dest": "(: ( [27499,27500]"
    },
    {
      "src": "unary_expression [11703,11748]",
      "dest": "unary_expression [11703,11748]"
    },
    {
      "src": "internal: internal [14678,14686]",
      "dest": "internal: internal [14678,14686]"
    },
    {
      "src": "uint256: uint256 [20680,20687]",
      "dest": "uint256: uint256 [20680,20687]"
    },
    {
      "src": "call_expression [4092,4144]",
      "dest": "call_expression [4092,4144]"
    },
    {
      "src": "identifier: require [24325,24332]",
      "dest": "identifier: require [24325,24332]"
    },
    {
      "src": "function_body [4656,4767]",
      "dest": "function_body [4656,4767]"
    },
    {
      "src": "binary_expression [21742,21747]",
      "dest": "binary_expression [21742,21747]"
    },
    {
      "src": "^:  ^ [8500,8502]",
      "dest": "^:  ^ [8500,8502]"
    },
    {
      "src": "function: function [23818,23826]",
      "dest": "function: function [23818,23826]"
    },
    {
      "src": "parameter [29467,29480]",
      "dest": "parameter [29540,29553]"
    },
    {
      "src": "assignment_expression [29509,29539]",
      "dest": "assignment_expression [29582,29612]"
    },
    {
      "src": "call_argument [29737,29756]",
      "dest": "call_argument [29810,29829]"
    },
    {
      "src": "expression_statement [29729,29783]",
      "dest": "expression_statement [29802,29856]"
    },
    {
      "src": "member_expression [14455,14470]",
      "dest": "member_expression [14455,14470]"
    },
    {
      "src": "identifier: increase [25515,25523]",
      "dest": "identifier: increase [25515,25523]"
    },
    {
      "src": "internal: internal [16024,16032]",
      "dest": "internal: internal [16024,16032]"
    },
    {
      "src": "identifier: functionCallWithValue [4092,4113]",
      "dest": "identifier: functionCallWithValue [4092,4113]"
    },
    {
      "src": "primitive_type [25846,25861]",
      "dest": "primitive_type [25846,25861]"
    },
    {
      "src": "): ) [22149,22150]",
      "dest": "): ) [22149,22150]"
    },
    {
      "src": "call_expression [7083,7101]",
      "dest": "call_expression [7083,7101]"
    },
    {
      "src": "string [27991,28022]",
      "dest": "string [27991,28022]"
    },
    {
      "src": "primitive_type [24027,24034]",
      "dest": "primitive_type [24027,24034]"
    },
    {
      "src": "identifier: getChainID [22108,22118]",
      "dest": "identifier: getChainID [22108,22118]"
    },
    {
      "src": "parameter [1250,1265]",
      "dest": "parameter [1250,1265]"
    },
    {
      "src": "]: ] [29323,29324]",
      "dest": "]: ] [29396,29397]"
    },
    {
      "src": "call_argument [27815,27822]",
      "dest": "call_argument [27815,27822]"
    },
    {
      "src": "identifier: require [2694,2701]",
      "dest": "identifier: require [2694,2701]"
    },
    {
      "src": "if_statement [15766,15795]",
      "dest": "if_statement [15766,15795]"
    },
    {
      "src": "parameter [25598,25608]",
      "dest": "parameter [25598,25608]"
    },
    {
      "src": "parameter [25464,25474]",
      "dest": "parameter [25464,25474]"
    },
    {
      "src": "primitive_type [17032,17039]",
      "dest": "primitive_type [17032,17039]"
    },
    {
      "src": "return_type_definition [24136,24150]",
      "dest": "return_type_definition [24136,24150]"
    },
    {
      "src": "identifier: _newOwner [29801,29810]",
      "dest": "identifier: _newOwner [29874,29883]"
    },
    {
      "src": "expression_statement [29136,29176]",
      "dest": "expression_statement [29209,29249]"
    },
    {
      "src": "type_name [23356,23361]",
      "dest": "type_name [23356,23361]"
    },
    {
      "src": "array_access [28037,28064]",
      "dest": "array_access [28037,28064]"
    },
    {
      "src": "expression_statement [13298,13321]",
      "dest": "expression_statement [13298,13321]"
    },
    {
      "src": "(: ( [1249,1250]",
      "dest": "(: ( [1249,1250]"
    },
    {
      "src": "type_name [14701,14706]",
      "dest": "type_name [14701,14706]"
    },
    {
      "src": "): ) [16798,16799]",
      "dest": "): ) [16798,16799]"
    },
    {
      "src": "type_name [6202,6207]",
      "dest": "type_name [6202,6207]"
    },
    {
      "src": "return: return [17816,17822]",
      "dest": "return: return [17816,17822]"
    },
    {
      "src": "type_name [14414,14419]",
      "dest": "type_name [14414,14419]"
    },
    {
      "src": "primitive_type [21650,21657]",
      "dest": "primitive_type [21650,21657]"
    },
    {
      "src": "function_definition [28562,29444]",
      "dest": "function_definition [28635,29517]"
    },
    {
      "src": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain `call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [2785,3516]",
      "dest": "comment: /**      * @dev Performs a Solidity function call using a low level `call`. A      * plain `call` is an unsafe replacement for a function call: use this      * function instead.      *      * If `target` reverts with a revert reason, it is bubbled up by this      * function (like regular Solidity function calls).      *      * Returns the raw returned data. To convert to the expected return value,      * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].      *      * Requirements:      *      * - `target` must be a contract.      * - calling `target` with `data` must not revert.      *      * _Available since v3.1._      */ [2785,3516]"
    },
    {
      "src": "call_argument [27604,27609]",
      "dest": "call_argument [27604,27609]"
    },
    {
      "src": "comment: // benefit is lost if 'b' is also tested. [16525,16566]",
      "dest": "comment: // benefit is lost if 'b' is also tested. [16525,16566]"
    },
    {
      "src": "primitive_type [27378,27385]",
      "dest": "primitive_type [27378,27385]"
    },
    {
      "src": "): ) [23395,23396]",
      "dest": "): ) [23395,23396]"
    },
    {
      "src": "identifier: abi [24196,24199]",
      "dest": "identifier: abi [24196,24199]"
    },
    {
      "src": "primitive_type [16350,16357]",
      "dest": "primitive_type [16350,16357]"
    },
    {
      "src": "}: } [28201,28202]",
      "dest": "}: } [28201,28202]"
    },
    {
      "src": "parameter [18164,18171]",
      "dest": "parameter [18164,18171]"
    },
    {
      "src": "bytes: bytes [6163,6168]",
      "dest": "bytes: bytes [6163,6168]"
    },
    {
      "src": "primitive_type [16384,16388]",
      "dest": "primitive_type [16384,16388]"
    },
    {
      "src": "primitive_type [25524,25531]",
      "dest": "primitive_type [25524,25531]"
    },
    {
      "src": "(: ( [25449,25450]",
      "dest": "(: ( [25449,25450]"
    },
    {
      "src": "identifier: from [25458,25462]",
      "dest": "identifier: from [25458,25462]"
    },
    {
      "src": "assignment_expression [13371,13392]",
      "dest": "assignment_expression [13371,13392]"
    },
    {
      "src": "parameter [24145,24149]",
      "dest": "parameter [24145,24149]"
    },
    {
      "src": "): ) [5453,5454]",
      "dest": "): ) [5453,5454]"
    },
    {
      "src": "parameter [21650,21657]",
      "dest": "parameter [21650,21657]"
    },
    {
      "src": "identifier: b [16021,16022]",
      "dest": "identifier: b [16021,16022]"
    },
    {
      "src": "\": \" [27581,27582]",
      "dest": "\": \" [27581,27582]"
    },
    {
      "src": "}: } [13433,13434]",
      "dest": "}: } [13433,13434]"
    },
    {
      "src": "identifier: token [27500,27505]",
      "dest": "identifier: token [27500,27505]"
    },
    {
      "src": "primitive_type [5724,5729]",
      "dest": "primitive_type [5724,5729]"
    },
    {
      "src": "identifier: b [19415,19416]",
      "dest": "identifier: b [19415,19416]"
    },
    {
      "src": "=: = [23726,23727]",
      "dest": "=: = [23726,23727]"
    },
    {
      "src": "binary_expression [24497,24524]",
      "dest": "binary_expression [24497,24524]"
    },
    {
      "src": "visibility [16361,16369]",
      "dest": "visibility [16361,16369]"
    },
    {
      "src": "identifier: returndata [7942,7952]",
      "dest": "identifier: returndata [7942,7952]"
    },
    {
      "src": "comment: // File: contracts/lock. [25764,25788]",
      "dest": "comment: // File: contracts/lock. [25764,25788]"
    },
    {
      "src": "primitive_type [23873,23880]",
      "dest": "primitive_type [23873,23880]"
    },
    {
      "src": "call_argument [5363,5367]",
      "dest": "call_argument [5363,5367]"
    },
    {
      "src": "struct_field_assignment [2666,2679]",
      "dest": "struct_field_assignment [2666,2679]"
    },
    {
      "src": "string [28939,28941]",
      "dest": "string [29012,29014]"
    },
    {
      "src": "identifier: data [3572,3576]",
      "dest": "identifier: data [3572,3576]"
    },
    {
      "src": ":: : [28302,28303]",
      "dest": ":: : [28349,28350]"
    },
    {
      "src": "string [23160,23195]",
      "dest": "string [23160,23195]"
    },
    {
      "src": "function: function [29450,29458]",
      "dest": "function: function [29523,29531]"
    },
    {
      "src": "identifier: require [14314,14321]",
      "dest": "identifier: require [14314,14321]"
    },
    {
      "src": "type_cast_expression [2556,2569]",
      "dest": "type_cast_expression [2556,2569]"
    },
    {
      "src": "!: ! [11703,11704]",
      "dest": "!: ! [11703,11704]"
    },
    {
      "src": "primitive_type [25905,25912]",
      "dest": "primitive_type [25905,25912]"
    },
    {
      "src": "uint256: uint256 [19984,19991]",
      "dest": "uint256: uint256 [19984,19991]"
    },
    {
      "src": "primitive_type [26569,26573]",
      "dest": "primitive_type [26569,26573]"
    },
    {
      "src": "memory: memory [5688,5694]",
      "dest": "memory: memory [5688,5694]"
    },
    {
      "src": "): ) [26635,26636]",
      "dest": "): ) [26635,26636]"
    },
    {
      "src": "type_name [7800,7805]",
      "dest": "type_name [7800,7805]"
    },
    {
      "src": "yul_path [24796,24801]",
      "dest": "yul_path [24796,24801]"
    },
    {
      "src": "type_name [22142,22149]",
      "dest": "type_name [22142,22149]"
    },
    {
      "src": "string: string [25140,25146]",
      "dest": "string: string [25140,25146]"
    },
    {
      "src": "(: ( [27536,27537]",
      "dest": "(: ( [27536,27537]"
    },
    {
      "src": "return_statement [21735,21748]",
      "dest": "return_statement [21735,21748]"
    },
    {
      "src": "identifier: mul [18458,18461]",
      "dest": "identifier: mul [18458,18461]"
    },
    {
      "src": ",: , [15650,15651]",
      "dest": ",: , [15650,15651]"
    },
    {
      "src": ",: , [18856,18857]",
      "dest": ",: , [18856,18857]"
    },
    {
      "src": "{: { [7642,7643]",
      "dest": "{: { [7642,7643]"
    },
    {
      "src": "modifier_invocation [29603,29612]",
      "dest": "modifier_invocation [29676,29685]"
    },
    {
      "src": "returns: returns [22133,22140]",
      "dest": "returns: returns [22133,22140]"
    },
    {
      "src": "identifier: depositedEth [26187,26199]",
      "dest": "identifier: depositedEth [26187,26199]"
    },
    {
      "src": "primitive_type [21967,21974]",
      "dest": "primitive_type [21967,21974]"
    },
    {
      "src": "member_expression [1520,1532]",
      "dest": "member_expression [1520,1532]"
    },
    {
      "src": "bool: bool [26569,26573]",
      "dest": "bool: bool [26569,26573]"
    },
    {
      "src": "binary_expression [16100,16105]",
      "dest": "binary_expression [16100,16105]"
    },
    {
      "src": "): ) [17486,17487]",
      "dest": "): ) [17486,17487]"
    },
    {
      "src": "parameter [19984,19993]",
      "dest": "parameter [19984,19993]"
    },
    {
      "src": "state_variable_declaration [10862,10889]",
      "dest": "state_variable_declaration [10862,10889]"
    },
    {
      "src": "): ) [2771,2772]",
      "dest": "): ) [2771,2772]"
    },
    {
      "src": "identifier: require [11641,11648]",
      "dest": "identifier: require [11641,11648]"
    },
    {
      "src": "identifier: b [18194,18195]",
      "dest": "identifier: b [18194,18195]"
    },
    {
      "src": "call_argument [24226,24233]",
      "dest": "call_argument [24226,24233]"
    },
    {
      "src": "string: string [6757,6763]",
      "dest": "string: string [6757,6763]"
    },
    {
      "src": "internal: internal [18869,18877]",
      "dest": "internal: internal [18869,18877]"
    },
    {
      "src": "call_argument [29071,29106]",
      "dest": "call_argument [29144,29179]"
    },
    {
      "src": "identifier: call [2661,2665]",
      "dest": "identifier: call [2661,2665]"
    },
    {
      "src": "binary_expression [20866,20871]",
      "dest": "binary_expression [20866,20871]"
    },
    {
      "src": ",: , [24224,24225]",
      "dest": ",: , [24224,24225]"
    },
    {
      "src": "=>: => [26566,26568]",
      "dest": "=>: => [26566,26568]"
    },
    {
      "src": "uint: uint [25477,25481]",
      "dest": "uint: uint [25477,25481]"
    },
    {
      "src": "uint256: uint256 [15652,15659]",
      "dest": "uint256: uint256 [15652,15659]"
    },
    {
      "src": "type_name [18473,18480]",
      "dest": "type_name [18473,18480]"
    },
    {
      "src": "binary_expression [11663,11697]",
      "dest": "binary_expression [11663,11697]"
    },
    {
      "src": "{: { [7197,7198]",
      "dest": "{: { [7197,7198]"
    },
    {
      "src": "variable_declaration_tuple [2632,2648]",
      "dest": "variable_declaration_tuple [2632,2648]"
    },
    {
      "src": "): ) [28994,28995]",
      "dest": "): ) [29067,29068]"
    },
    {
      "src": "identifier: functionCallWithValue [4522,4543]",
      "dest": "identifier: functionCallWithValue [4522,4543]"
    },
    {
      "src": "identifier: check [29275,29280]",
      "dest": "identifier: check [29348,29353]"
    },
    {
      "src": "returns: returns [23026,23033]",
      "dest": "returns: returns [23026,23033]"
    },
    {
      "src": ",: , [15820,15821]",
      "dest": ",: , [15820,15821]"
    },
    {
      "src": "call_argument [23391,23395]",
      "dest": "call_argument [23391,23395]"
    },
    {
      "src": "primitive_type [27199,27206]",
      "dest": "primitive_type [27199,27206]"
    },
    {
      "src": "library: library [238,245]",
      "dest": "library: library [238,245]"
    },
    {
      "src": "): ) [16022,16023]",
      "dest": "): ) [16022,16023]"
    },
    {
      "src": "uint256: uint256 [24583,24590]",
      "dest": "uint256: uint256 [24583,24590]"
    },
    {
      "src": "unary_expression [13197,13211]",
      "dest": "unary_expression [13197,13211]"
    },
    {
      "src": "member_expression [29150,29161]",
      "dest": "member_expression [29223,29234]"
    },
    {
      "src": "primitive_type [24468,24475]",
      "dest": "primitive_type [24468,24475]"
    },
    {
      "src": ",: , [24803,24804]",
      "dest": ",: , [24803,24804]"
    },
    {
      "src": "primitive_type [17375,17379]",
      "dest": "primitive_type [17375,17379]"
    },
    {
      "src": "memory: memory [4648,4654]",
      "dest": "memory: memory [4648,4654]"
    },
    {
      "src": "public: public [22121,22127]",
      "dest": "public: public [22121,22127]"
    },
    {
      "src": "comment: // Load the 32 bytes word from memory with the address on the lower 20 bytes, and mask those. [24655,24748]",
      "dest": "comment: // Load the 32 bytes word from memory with the address on the lower 20 bytes, and mask those. [24655,24748]"
    },
    {
      "src": "]: ] [23105,23106]",
      "dest": "]: ] [23105,23106]"
    },
    {
      "src": "if: if [7938,7940]",
      "dest": "if: if [7938,7940]"
    },
    {
      "src": "<: < [15772,15773]",
      "dest": "<: < [15772,15773]"
    },
    {
      "src": "type_name [24145,24149]",
      "dest": "type_name [24145,24149]"
    },
    {
      "src": "emit_statement [29189,29428]",
      "dest": "emit_statement [29262,29501]"
    },
    {
      "src": "\": \" [28984,28985]",
      "dest": "\": \" [29057,29058]"
    },
    {
      "src": "type_name [29684,29699]",
      "dest": "type_name [29757,29772]"
    },
    {
      "src": "address: address [23997,24004]",
      "dest": "address: address [23997,24004]"
    },
    {
      "src": ",: , [17449,17450]",
      "dest": ",: , [17449,17450]"
    },
    {
      "src": "type: type [14455,14459]",
      "dest": "type: type [14455,14459]"
    },
    {
      "src": "return_type_definition [18883,18900]",
      "dest": "return_type_definition [18883,18900]"
    },
    {
      "src": "block_statement [16072,16169]",
      "dest": "block_statement [16072,16169]"
    },
    {
      "src": "call_expression [24282,24315]",
      "dest": "call_expression [24282,24315]"
    },
    {
      "src": "identifier: onlyOwner [26674,26683]",
      "dest": "identifier: onlyOwner [26674,26683]"
    },
    {
      "src": "): ) [5736,5737]",
      "dest": "): ) [5736,5737]"
    },
    {
      "src": "}: } [17148,17149]",
      "dest": "}: } [17148,17149]"
    },
    {
      "src": "visibility [5162,5170]",
      "dest": "visibility [5162,5170]"
    },
    {
      "src": "): ) [24149,24150]",
      "dest": "): ) [24149,24150]"
    },
    {
      "src": "function_body [13179,13434]",
      "dest": "function_body [13179,13434]"
    },
    {
      "src": "uint256: uint256 [21923,21930]",
      "dest": "uint256: uint256 [21923,21930]"
    },
    {
      "src": "identifier: b [18866,18867]",
      "dest": "identifier: b [18866,18867]"
    },
    {
      "src": "visibility [18141,18149]",
      "dest": "visibility [18141,18149]"
    },
    {
      "src": "emit_statement [13402,13428]",
      "dest": "emit_statement [13402,13428]"
    },
    {
      "src": "returns: returns [3587,3594]",
      "dest": "returns: returns [3587,3594]"
    },
    {
      "src": "(: ( [8208,8209]",
      "dest": "(: ( [8208,8209]"
    },
    {
      "src": "parameter [25181,25196]",
      "dest": "parameter [25181,25196]"
    },
    {
      "src": "): ) [26684,26685]",
      "dest": "): ) [26684,26685]"
    },
    {
      "src": "==: == [28504,28506]",
      "dest": "==: == [28577,28579]"
    },
    {
      "src": "}: } [28555,28556]",
      "dest": "}: } [28628,28629]"
    },
    {
      "src": "variable_declaration_statement [2632,2685]",
      "dest": "variable_declaration_statement [2632,2685]"
    },
    {
      "src": "identifier: depositer [26796,26805]",
      "dest": "identifier: depositer [26796,26805]"
    },
    {
      "src": "visibility [29711,29717]",
      "dest": "visibility [29784,29790]"
    },
    {
      "src": "identifier: add [17748,17751]",
      "dest": "identifier: add [17748,17751]"
    },
    {
      "src": "block_statement [20793,20882]",
      "dest": "block_statement [20793,20882]"
    },
    {
      "src": "returns: returns [4052,4059]",
      "dest": "returns: returns [4052,4059]"
    },
    {
      "src": "member_expression [27493,27513]",
      "dest": "member_expression [27493,27513]"
    },
    {
      "src": "if_statement [7652,7771]",
      "dest": "if_statement [7652,7771]"
    },
    {
      "src": "array_access [29298,29324]",
      "dest": "array_access [29371,29397]"
    },
    {
      "src": "==: == [6886,6888]",
      "dest": "==: == [6886,6888]"
    },
    {
      "src": "identifier: a [18918,18919]",
      "dest": "identifier: a [18918,18919]"
    },
    {
      "src": ",: , [28179,28180]",
      "dest": ",: , [28179,28180]"
    },
    {
      "src": ",: , [23581,23582]",
      "dest": ",: , [23581,23582]"
    },
    {
      "src": "): ) [14379,14380]",
      "dest": "): ) [14379,14380]"
    },
    {
      "src": ",: , [28983,28984]",
      "dest": ",: , [29056,29057]"
    },
    {
      "src": "external: external [25274,25282]",
      "dest": "external: external [25274,25282]"
    },
    {
      "src": "parameter [27182,27197]",
      "dest": "parameter [27182,27197]"
    },
    {
      "src": "identifier: require [20817,20824]",
      "dest": "identifier: require [20817,20824]"
    },
    {
      "src": "-: - [20154,20155]",
      "dest": "-: - [20154,20155]"
    },
    {
      "src": ":: : [2671,2672]",
      "dest": ":: : [2671,2672]"
    },
    {
      "src": "bytes: bytes [5682,5687]",
      "dest": "bytes: bytes [5682,5687]"
    },
    {
      "src": "function_body [17390,17504]",
      "dest": "function_body [17390,17504]"
    },
    {
      "src": "type_name [10991,10995]",
      "dest": "type_name [10991,10995]"
    },
    {
      "src": "identifier: msg [23570,23573]",
      "dest": "identifier: msg [23570,23573]"
    },
    {
      "src": "expression_statement [13189,13289]",
      "dest": "expression_statement [13189,13289]"
    },
    {
      "src": "call_expression [28483,28513]",
      "dest": "call_expression [28556,28586]"
    },
    {
      "src": "identifier: sigR [22979,22983]",
      "dest": "identifier: sigR [22979,22983]"
    },
    {
      "src": "type_name [19984,19991]",
      "dest": "type_name [19984,19991]"
    },
    {
      "src": "identifier: b [16721,16722]",
      "dest": "identifier: b [16721,16722]"
    },
    {
      "src": "}: } [14954,14955]",
      "dest": "}: } [14954,14955]"
    },
    {
      "src": "(: ( [28490,28491]",
      "dest": "(: ( [28563,28564]"
    },
    {
      "src": "payable: payable [28873,28880]",
      "dest": "payable: payable [28946,28953]"
    },
    {
      "src": "%: % [17483,17484]",
      "dest": "%: % [17483,17484]"
    },
    {
      "src": "call_argument [13705,13750]",
      "dest": "call_argument [13705,13750]"
    },
    {
      "src": "(: ( [24467,24468]",
      "dest": "(: ( [24467,24468]"
    },
    {
      "src": "identifier: mod [19392,19395]",
      "dest": "identifier: mod [19392,19395]"
    },
    {
      "src": "type_name [21967,21974]",
      "dest": "type_name [21967,21974]"
    },
    {
      "src": "uint256: uint256 [18507,18514]",
      "dest": "uint256: uint256 [18507,18514]"
    },
    {
      "src": "return: return [21735,21741]",
      "dest": "return: return [21735,21741]"
    },
    {
      "src": ",: , [25462,25463]",
      "dest": ",: , [25462,25463]"
    },
    {
      "src": "\": \" [2589,2590]",
      "dest": "\": \" [2589,2590]"
    },
    {
      "src": "parameter [23659,23671]",
      "dest": "parameter [23659,23671]"
    },
    {
      "src": "call_expression [23108,23120]",
      "dest": "call_expression [23108,23120]"
    },
    {
      "src": "primitive_type [16047,16051]",
      "dest": "primitive_type [16047,16051]"
    },
    {
      "src": "comment: // only check isContract if the call was successful and the return data is empty [6910,6990]",
      "dest": "comment: // only check isContract if the call was successful and the return data is empty [6910,6990]"
    },
    {
      "src": "identifier: success [28968,28975]",
      "dest": "identifier: success [29041,29048]"
    },
    {
      "src": "yul_path [24765,24771]",
      "dest": "yul_path [24765,24771]"
    },
    {
      "src": "assignment_expression [27675,27719]",
      "dest": "assignment_expression [27675,27719]"
    },
    {
      "src": "address: address [26838,26845]",
      "dest": "address: address [26838,26845]"
    },
    {
      "src": "expression_statement [28101,28128]",
      "dest": "expression_statement [28101,28128]"
    },
    {
      "src": "primitive_type [10862,10867]",
      "dest": "primitive_type [10862,10867]"
    },
    {
      "src": "call_argument [5774,5780]",
      "dest": "call_argument [5774,5780]"
    },
    {
      "src": "primitive_type [4642,4647]",
      "dest": "primitive_type [4642,4647]"
    },
    {
      "src": "primitive_type [28065,28072]",
      "dest": "primitive_type [28065,28072]"
    },
    {
      "src": "identifier: transferFrom [27611,27623]",
      "dest": "identifier: transferFrom [27611,27623]"
    },
    {
      "src": "primitive_type [25728,25732]",
      "dest": "primitive_type [25728,25732]"
    },
    {
      "src": "call_argument [2556,2587]",
      "dest": "call_argument [2556,2587]"
    },
    {
      "src": "): ) [24314,24315]",
      "dest": "): ) [24314,24315]"
    },
    {
      "src": "parameter [20718,20744]",
      "dest": "parameter [20718,20744]"
    },
    {
      "src": "return_type_definition [16375,16398]",
      "dest": "return_type_definition [16375,16398]"
    },
    {
      "src": "bytes32: bytes32 [24098,24105]",
      "dest": "bytes32: bytes32 [24098,24105]"
    },
    {
      "src": "yul_evm_builtin [24775,24778]",
      "dest": "yul_evm_builtin [24775,24778]"
    },
    {
      "src": "&&: && [11749,11751]",
      "dest": "&&: && [11749,11751]"
    },
    {
      "src": ",: , [16120,16121]",
      "dest": ",: , [16120,16121]"
    },
    {
      "src": "return_statement [5378,5455]",
      "dest": "return_statement [5378,5455]"
    },
    {
      "src": ",: , [25475,25476]",
      "dest": ",: , [25475,25476]"
    },
    {
      "src": "binary_expression [1520,1543]",
      "dest": "binary_expression [1520,1543]"
    },
    {
      "src": "return: return [15777,15783]",
      "dest": "return: return [15777,15783]"
    },
    {
      "src": "identifier: b [15660,15661]",
      "dest": "identifier: b [15660,15661]"
    },
    {
      "src": "identifier: owner [25862,25867]",
      "dest": "identifier: owner [25862,25867]"
    },
    {
      "src": "type_name [28587,28601]",
      "dest": "type_name [28660,28674]"
    },
    {
      "src": "{: { [11898,11899]",
      "dest": "{: { [11898,11899]"
    },
    {
      "src": "==: == [24508,24510]",
      "dest": "==: == [24508,24510]"
    },
    {
      "src": "function_definition [25232,25283]",
      "dest": "function_definition [25232,25283]"
    },
    {
      "src": "(: ( [8169,8170]",
      "dest": "(: ( [8169,8170]"
    },
    {
      "src": "comment: // mapping(address=> bool) public fraudDeposit; [26013,26060]",
      "dest": "comment: // mapping(address=> bool) public fraudDeposit; [26013,26060]"
    },
    {
      "src": "identifier: hash [24170,24174]",
      "dest": "identifier: hash [24170,24174]"
    },
    {
      "src": "identifier: errorMessage [7747,7759]",
      "dest": "identifier: errorMessage [7747,7759]"
    },
    {
      "src": "public: public [25956,25962]",
      "dest": "public: public [25956,25962]"
    },
    {
      "src": ".: . [24602,24603]",
      "dest": ".: . [24602,24603]"
    },
    {
      "src": "(: ( [28668,28669]",
      "dest": "(: ( [28741,28742]"
    },
    {
      "src": "function: function [23641,23649]",
      "dest": "function: function [23641,23649]"
    },
    {
      "src": "call_expression [27597,27610]",
      "dest": "call_expression [27597,27610]"
    },
    {
      "src": "[: [ [28795,28796]",
      "dest": "[: [ [28868,28869]"
    },
    {
      "src": "true: true [16791,16795]",
      "dest": "true: true [16791,16795]"
    },
    {
      "src": "memory: memory [6764,6770]",
      "dest": "memory: memory [6764,6770]"
    },
    {
      "src": "\": \" [28351,28352]",
      "dest": "\": \" [28410,28411]"
    },
    {
      "src": "function_definition [23818,23975]",
      "dest": "function_definition [23818,23975]"
    },
    {
      "src": "parameter [25260,25272]",
      "dest": "parameter [25260,25272]"
    },
    {
      "src": "}: } [8322,8323]",
      "dest": "}: } [8322,8323]"
    },
    {
      "src": "=: = [11615,11616]",
      "dest": "=: = [11615,11616]"
    },
    {
      "src": "identifier: MetaTransactionExecuted [21943,21966]",
      "dest": "identifier: MetaTransactionExecuted [21943,21966]"
    },
    {
      "src": "return_type_definition [25559,25572]",
      "dest": "return_type_definition [25559,25572]"
    },
    {
      "src": "type_name [25309,25316]",
      "dest": "type_name [25309,25316]"
    },
    {
      "src": "string: string [4010,4016]",
      "dest": "string: string [4010,4016]"
    },
    {
      "src": "(: ( [27039,27040]",
      "dest": "(: ( [27039,27040]"
    },
    {
      "src": "type_name [26881,26887]",
      "dest": "type_name [26881,26887]"
    },
    {
      "src": "memory: memory [7545,7551]",
      "dest": "memory: memory [7545,7551]"
    },
    {
      "src": "(: ( [20670,20671]",
      "dest": "(: ( [20670,20671]"
    },
    {
      "src": "identifier: vault [26445,26450]",
      "dest": "identifier: vault [26445,26450]"
    },
    {
      "src": ",: , [21565,21566]",
      "dest": ",: , [21565,21566]"
    },
    {
      "src": "(: ( [23469,23470]",
      "dest": "(: ( [23469,23470]"
    },
    {
      "src": "function_definition [25368,25422]",
      "dest": "function_definition [25368,25422]"
    },
    {
      "src": "tuple_expression [17125,17138]",
      "dest": "tuple_expression [17125,17138]"
    },
    {
      "src": "{: { [16399,16400]",
      "dest": "{: { [16399,16400]"
    },
    {
      "src": "parameter [16013,16022]",
      "dest": "parameter [16013,16022]"
    },
    {
      "src": "state_mutability [23018,23025]",
      "dest": "state_mutability [23018,23025]"
    },
    {
      "src": "]: ] [28600,28601]",
      "dest": "]: ] [28673,28674]"
    },
    {
      "src": "): ) [20130,20131]",
      "dest": "): ) [20130,20131]"
    },
    {
      "src": "bytes: bytes [4061,4066]",
      "dest": "bytes: bytes [4061,4066]"
    },
    {
      "src": "function_definition [25653,25708]",
      "dest": "function_definition [25653,25708]"
    },
    {
      "src": "type_name [15686,15690]",
      "dest": "type_name [15686,15690]"
    },
    {
      "src": "returns: returns [25074,25081]",
      "dest": "returns: returns [25074,25081]"
    },
    {
      "src": "external: external [25198,25206]",
      "dest": "external: external [25198,25206]"
    },
    {
      "src": "(: ( [14884,14885]",
      "dest": "(: ( [14884,14885]"
    },
    {
      "src": "call_expression [28335,28374]",
      "dest": "call_expression [28394,28433]"
    },
    {
      "src": "identifier: b [17349,17350]",
      "dest": "identifier: b [17349,17350]"
    },
    {
      "src": ",: , [7745,7746]",
      "dest": ",: , [7745,7746]"
    },
    {
      "src": "(: ( [26557,26558]",
      "dest": "(: ( [26557,26558]"
    },
    {
      "src": "identifier: require [13682,13689]",
      "dest": "identifier: require [13682,13689]"
    },
    {
      "src": "primitive_type [18892,18899]",
      "dest": "primitive_type [18892,18899]"
    },
    {
      "src": "identifier: to [25532,25534]",
      "dest": "identifier: to [25532,25534]"
    },
    {
      "src": "type_name [14910,14914]",
      "dest": "type_name [14910,14914]"
    },
    {
      "src": "+=: += [27747,27749]",
      "dest": "+=: += [27747,27749]"
    },
    {
      "src": "expression_statement [11852,11869]",
      "dest": "expression_statement [11852,11869]"
    },
    {
      "src": ":=: := [24772,24774]",
      "dest": ":=: := [24772,24774]"
    },
    {
      "src": "identifier: this [5220,5224]",
      "dest": "identifier: this [5220,5224]"
    },
    {
      "src": ".: . [26713,26714]",
      "dest": ".: . [26713,26714]"
    },
    {
      "src": "uint256: uint256 [24027,24034]",
      "dest": "uint256: uint256 [24027,24034]"
    },
    {
      "src": "visibility [25913,25919]",
      "dest": "visibility [25913,25919]"
    },
    {
      "src": "struct_declaration [26758,26927]",
      "dest": "struct_declaration [26758,26927]"
    },
    {
      "src": "parameter [25220,25224]",
      "dest": "parameter [25220,25224]"
    },
    {
      "src": "function: function [16965,16973]",
      "dest": "function: function [16965,16973]"
    },
    {
      "src": "call_argument [28939,28941]",
      "dest": "call_argument [29012,29014]"
    },
    {
      "src": "identifier: x [28929,28930]",
      "dest": "identifier: x [29002,29003]"
    },
    {
      "src": "): ) [27650,27651]",
      "dest": "): ) [27650,27651]"
    },
    {
      "src": "identifier: depositer [26384,26393]",
      "dest": "identifier: depositer [26384,26393]"
    },
    {
      "src": "uint256: uint256 [25948,25955]",
      "dest": "uint256: uint256 [25948,25955]"
    },
    {
      "src": "type_name [17752,17759]",
      "dest": "type_name [17752,17759]"
    },
    {
      "src": "return_type_definition [18155,18172]",
      "dest": "return_type_definition [18155,18172]"
    },
    {
      "src": "array_access [28523,28542]",
      "dest": "array_access [28596,28615]"
    },
    {
      "src": "): ) [4041,4042]",
      "dest": "): ) [4041,4042]"
    },
    {
      "src": "type_name [25220,25224]",
      "dest": "type_name [25220,25224]"
    },
    {
      "src": ".: . [29249,29250]",
      "dest": ".: . [29322,29323]"
    },
    {
      "src": "block_statement [24526,24872]",
      "dest": "block_statement [24526,24872]"
    },
    {
      "src": "parameter [25356,25360]",
      "dest": "parameter [25356,25360]"
    },
    {
      "src": "primitive_type [13164,13169]",
      "dest": "primitive_type [13164,13169]"
    },
    {
      "src": "identifier: target [5063,5069]",
      "dest": "identifier: target [5063,5069]"
    },
    {
      "src": "identifier: txArray [28611,28618]",
      "dest": "identifier: txArray [28684,28691]"
    },
    {
      "src": "address: address [26218,26225]",
      "dest": "address: address [26218,26225]"
    },
    {
      "src": "): ) [8223,8224]",
      "dest": "): ) [8223,8224]"
    },
    {
      "src": "view: view [24447,24451]",
      "dest": "view: view [24447,24451]"
    },
    {
      "src": "member_expression [11704,11733]",
      "dest": "member_expression [11704,11733]"
    },
    {
      "src": "expression_statement [28483,28514]",
      "dest": "expression_statement [28556,28587]"
    },
    {
      "src": "boolean_literal [17475,17479]",
      "dest": "boolean_literal [17475,17479]"
    },
    {
      "src": "parameter [7572,7598]",
      "dest": "parameter [7572,7598]"
    },
    {
      "src": "return_type_definition [20765,20782]",
      "dest": "return_type_definition [20765,20782]"
    },
    {
      "src": "uint: uint [25536,25540]",
      "dest": "uint: uint [25536,25540]"
    },
    {
      "src": "): ) [26994,26995]",
      "dest": "): ) [26994,26995]"
    },
    {
      "src": "visibility [25018,25026]",
      "dest": "visibility [25018,25026]"
    },
    {
      "src": "(: ( [23390,23391]",
      "dest": "(: ( [23390,23391]"
    },
    {
      "src": "uint256: uint256 [25982,25989]",
      "dest": "uint256: uint256 [25982,25989]"
    },
    {
      "src": "]: ] [29161,29162]",
      "dest": "]: ] [29234,29235]"
    },
    {
      "src": "): ) [27944,27945]",
      "dest": "): ) [27944,27945]"
    },
    {
      "src": "solidity_version_comparison_operator [24965,24967]",
      "dest": "solidity_version_comparison_operator [24965,24967]"
    },
    {
      "src": "): ) [24402,24403]",
      "dest": "): ) [24402,24403]"
    },
    {
      "src": "parameter [16390,16397]",
      "dest": "parameter [16390,16397]"
    },
    {
      "src": "address: address [6678,6685]",
      "dest": "address: address [6678,6685]"
    },
    {
      "src": "function: function [19943,19951]",
      "dest": "function: function [19943,19951]"
    },
    {
      "src": "function_definition [14255,14534]",
      "dest": "function_definition [14255,14534]"
    },
    {
      "src": "state_mutability [21636,21640]",
      "dest": "state_mutability [21636,21640]"
    },
    {
      "src": "parameter [23695,23708]",
      "dest": "parameter [23695,23708]"
    },
    {
      "src": "internal: internal [14287,14295]",
      "dest": "internal: internal [14287,14295]"
    },
    {
      "src": "type_name [22910,22917]",
      "dest": "type_name [22910,22917]"
    },
    {
      "src": "emit: emit [23520,23524]",
      "dest": "emit: emit [23520,23524]"
    },
    {
      "src": "visibility [14287,14295]",
      "dest": "visibility [14287,14295]"
    },
    {
      "src": "identifier: b [17827,17828]",
      "dest": "identifier: b [17827,17828]"
    },
    {
      "src": "pragma: pragma [8485,8491]",
      "dest": "pragma: pragma [8485,8491]"
    },
    {
      "src": "identifier: target [3649,3655]",
      "dest": "identifier: target [3649,3655]"
    },
    {
      "src": "yul_assignment [24765,24848]",
      "dest": "yul_assignment [24765,24848]"
    },
    {
      "src": "address: address [23659,23666]",
      "dest": "address: address [23659,23666]"
    },
    {
      "src": "mapping: mapping [26597,26604]",
      "dest": "mapping: mapping [26597,26604]"
    },
    {
      "src": "(: ( [25081,25082]",
      "dest": "(: ( [25081,25082]"
    },
    {
      "src": "type_name [3596,3601]",
      "dest": "type_name [3596,3601]"
    },
    {
      "src": "event_paramater [26275,26292]",
      "dest": "event_paramater [26275,26292]"
    },
    {
      "src": "): ) [25645,25646]",
      "dest": "): ) [25645,25646]"
    },
    {
      "src": "identifier: returndata [6868,6878]",
      "dest": "identifier: returndata [6868,6878]"
    },
    {
      "src": "string: string [7825,7831]",
      "dest": "string: string [7825,7831]"
    },
    {
      "src": "parameter [7628,7640]",
      "dest": "parameter [7628,7640]"
    },
    {
      "src": "function_definition [14644,14744]",
      "dest": "function_definition [14644,14744]"
    },
    {
      "src": "[: [ [23212,23213]",
      "dest": "[: [ [23212,23213]"
    },
    {
      "src": "bytes32: bytes32 [24084,24091]",
      "dest": "bytes32: bytes32 [24084,24091]"
    },
    {
      "src": "block_statement [6892,7150]",
      "dest": "block_statement [6892,7150]"
    },
    {
      "src": "event_paramater [21988,22018]",
      "dest": "event_paramater [21988,22018]"
    },
    {
      "src": "return_type_definition [17788,17805]",
      "dest": "return_type_definition [17788,17805]"
    },
    {
      "src": "{: { [21659,21660]",
      "dest": "{: { [21659,21660]"
    },
    {
      "src": "identifier: sender [23574,23580]",
      "dest": "identifier: sender [23574,23580]"
    },
    {
      "src": ".: . [29099,29100]",
      "dest": ".: . [29172,29173]"
    },
    {
      "src": "parameter [7517,7529]",
      "dest": "parameter [7517,7529]"
    },
    {
      "src": "yul_identifier [24765,24771]",
      "dest": "yul_identifier [24765,24771]"
    },
    {
      "src": ">: > [7960,7961]",
      "dest": ">: > [7960,7961]"
    },
    {
      "src": "identifier: token [27808,27813]",
      "dest": "identifier: token [27808,27813]"
    },
    {
      "src": "identifier: collectedFeesThreshold [28231,28253]",
      "dest": "identifier: collectedFeesThreshold [28231,28253]"
    },
    {
      "src": "call_expression [23067,23158]",
      "dest": "call_expression [23067,23158]"
    },
    {
      "src": "(: ( [5665,5666]",
      "dest": "(: ( [5665,5666]"
    },
    {
      "src": "uint256: uint256 [29467,29474]",
      "dest": "uint256: uint256 [29540,29547]"
    },
    {
      "src": "array_access [28037,28076]",
      "dest": "array_access [28037,28076]"
    },
    {
      "src": "(: ( [21700,21701]",
      "dest": "(: ( [21700,21701]"
    },
    {
      "src": "for_statement [28705,29438]",
      "dest": "for_statement [28778,29511]"
    },
    {
      "src": "call_expression [23383,23451]",
      "dest": "call_expression [23383,23451]"
    },
    {
      "src": "(: ( [29466,29467]",
      "dest": "(: ( [29539,29540]"
    },
    {
      "src": "variable_declaration_tuple [5295,5334]",
      "dest": "variable_declaration_tuple [5295,5334]"
    },
    {
      "src": "pure: pure [16370,16374]",
      "dest": "pure: pure [16370,16374]"
    },
    {
      "src": "identifier: to [25257,25259]",
      "dest": "identifier: to [25257,25259]"
    },
    {
      "src": "identifier: target [3967,3973]",
      "dest": "identifier: target [3967,3973]"
    },
    {
      "src": "identifier: msg [27750,27753]",
      "dest": "identifier: msg [27750,27753]"
    },
    {
      "src": "uint256: uint256 [18847,18854]",
      "dest": "uint256: uint256 [18847,18854]"
    },
    {
      "src": "visibility [17352,17360]",
      "dest": "visibility [17352,17360]"
    },
    {
      "src": "primitive_type [26324,26330]",
      "dest": "primitive_type [26324,26330]"
    },
    {
      "src": "yul_evm_builtin [24779,24784]",
      "dest": "yul_evm_builtin [24779,24784]"
    },
    {
      "src": "parameter [18462,18471]",
      "dest": "parameter [18462,18471]"
    },
    {
      "src": "uint: uint [25035,25039]",
      "dest": "uint: uint [25035,25039]"
    },
    {
      "src": "function: function [27165,27173]",
      "dest": "function: function [27165,27173]"
    },
    {
      "src": "^:  ^ [24965,24967]",
      "dest": "^:  ^ [24965,24967]"
    },
    {
      "src": "emit: emit [14484,14488]",
      "dest": "emit: emit [14484,14488]"
    },
    {
      "src": "call_argument [5782,5786]",
      "dest": "call_argument [5782,5786]"
    },
    {
      "src": "expression_statement [2548,2622]",
      "dest": "expression_statement [2548,2622]"
    },
    {
      "src": "internal: internal [24438,24446]",
      "dest": "internal: internal [24438,24446]"
    },
    {
      "src": ",: , [2511,2512]",
      "dest": ",: , [2511,2512]"
    },
    {
      "src": "): ) [18867,18868]",
      "dest": "): ) [18867,18868]"
    },
    {
      "src": "]: ] [27708,27709]",
      "dest": "]: ] [27708,27709]"
    },
    {
      "src": "comment: /**      * @dev Indicates that the contract is in the process of being initialized.      */ [10895,10986]",
      "dest": "comment: /**      * @dev Indicates that the contract is in the process of being initialized.      */ [10895,10986]"
    },
    {
      "src": "identifier: _receiver [29636,29645]",
      "dest": "identifier: _receiver [29709,29718]"
    },
    {
      "src": "public: public [26638,26644]",
      "dest": "public: public [26638,26644]"
    },
    {
      "src": "state_mutability [18493,18497]",
      "dest": "state_mutability [18493,18497]"
    },
    {
      "src": ",: , [29230,29231]",
      "dest": ",: , [29303,29304]"
    },
    {
      "src": "): ) [2568,2569]",
      "dest": "): ) [2568,2569]"
    },
    {
      "src": "update_expression [28745,28748]",
      "dest": "update_expression [28818,28821]"
    },
    {
      "src": "{: { [265,266]",
      "dest": "{: { [265,266]"
    },
    {
      "src": "string [28351,28373]",
      "dest": "string [28410,28432]"
    },
    {
      "src": "primitive_type [5666,5673]",
      "dest": "primitive_type [5666,5673]"
    },
    {
      "src": "): ) [17434,17435]",
      "dest": "): ) [17434,17435]"
    },
    {
      "src": "identifier: chainID [24035,24042]",
      "dest": "identifier: chainID [24035,24042]"
    },
    {
      "src": "true: true [17126,17130]",
      "dest": "true: true [17126,17130]"
    },
    {
      "src": "address: address [27199,27206]",
      "dest": "address: address [27199,27206]"
    },
    {
      "src": "identifier: token [27703,27708]",
      "dest": "identifier: token [27703,27708]"
    },
    {
      "src": "identifier: Initialized [13407,13418]",
      "dest": "identifier: Initialized [13407,13418]"
    },
    {
      "src": "member_expression [29248,29255]",
      "dest": "member_expression [29321,29328]"
    },
    {
      "src": "uint256: uint256 [19965,19972]",
      "dest": "uint256: uint256 [19965,19972]"
    },
    {
      "src": "external: external [27214,27222]",
      "dest": "external: external [27214,27222]"
    },
    {
      "src": "identifier: _msgSender [28051,28061]",
      "dest": "identifier: _msgSender [28051,28061]"
    },
    {
      "src": "false: false [16760,16765]",
      "dest": "false: false [16760,16765]"
    },
    {
      "src": "call_argument [13690,13703]",
      "dest": "call_argument [13690,13703]"
    },
    {
      "src": "identifier: nonces [23728,23734]",
      "dest": "identifier: nonces [23728,23734]"
    },
    {
      "src": "(: ( [5219,5220]",
      "dest": "(: ( [5219,5220]"
    },
    {
      "src": ",: , [5418,5419]",
      "dest": ",: , [5418,5419]"
    },
    {
      "src": "string_literal [26721,26732]",
      "dest": "string_literal [26721,26732]"
    },
    {
      "src": "expression_statement [29509,29540]",
      "dest": "expression_statement [29582,29613]"
    },
    {
      "src": "memory: memory [27410,27416]",
      "dest": "memory: memory [27410,27416]"
    },
    {
      "src": "address: address [25524,25531]",
      "dest": "address: address [25524,25531]"
    },
    {
      "src": "}: } [7190,7191]",
      "dest": "}: } [7190,7191]"
    },
    {
      "src": ".: . [29740,29741]",
      "dest": ".: . [29813,29814]"
    },
    {
      "src": "false [12013,12018]",
      "dest": "false [12013,12018]"
    },
    {
      "src": "identifier: tryAdd [15634,15640]",
      "dest": "identifier: tryAdd [15634,15640]"
    },
    {
      "src": ",: , [28868,28869]",
      "dest": ",: , [28941,28942]"
    },
    {
      "src": "solidity_version: 0.8.18 [24967,24973]",
      "dest": "solidity_version: 0.8.18 [24967,24973]"
    },
    {
      "src": "function_definition [7783,8323]",
      "dest": "function_definition [7783,8323]"
    },
    {
      "src": "identifier: depositer [29087,29096]",
      "dest": "identifier: depositer [29160,29169]"
    },
    {
      "src": "identifier: b [20156,20157]",
      "dest": "identifier: b [20156,20157]"
    },
    {
      "src": "identifier: burn [25723,25727]",
      "dest": "identifier: burn [25723,25727]"
    },
    {
      "src": "call_argument [28491,28512]",
      "dest": "call_argument [28564,28585]"
    },
    {
      "src": "identifier: sender [26714,26720]",
      "dest": "identifier: sender [26714,26720]"
    },
    {
      "src": "(: ( [22141,22142]",
      "dest": "(: ( [22141,22142]"
    },
    {
      "src": "identifier: IERC20 [27493,27499]",
      "dest": "identifier: IERC20 [27493,27499]"
    },
    {
      "src": "string_literal [27928,27944]",
      "dest": "string_literal [27928,27944]"
    },
    {
      "src": "(: ( [24291,24292]",
      "dest": "(: ( [24291,24292]"
    },
    {
      "src": "(: ( [14700,14701]",
      "dest": "(: ( [14700,14701]"
    },
    {
      "src": ".: . [29352,29353]",
      "dest": ".: . [29425,29426]"
    },
    {
      "src": "identifier: sub [19952,19955]",
      "dest": "identifier: sub [19952,19955]"
    },
    {
      "src": "assignment_expression [11997,12018]",
      "dest": "assignment_expression [11997,12018]"
    },
    {
      "src": "type_name [20718,20724]",
      "dest": "type_name [20718,20724]"
    },
    {
      "src": "binary_expression [28815,28836]",
      "dest": "binary_expression [28888,28909]"
    },
    {
      "src": "member_expression [29040,29047]",
      "dest": "member_expression [29113,29120]"
    },
    {
      "src": "identifier: _initializing [11004,11017]",
      "dest": "identifier: _initializing [11004,11017]"
    },
    {
      "src": "\": \" [14378,14379]",
      "dest": "\": \" [14378,14379]"
    },
    {
      "src": "parameter [25610,25622]",
      "dest": "parameter [25610,25622]"
    },
    {
      "src": "memory: memory [24050,24056]",
      "dest": "memory: memory [24050,24056]"
    },
    {
      "src": "type_name [15735,15742]",
      "dest": "type_name [15735,15742]"
    },
    {
      "src": "comment: // string memory tokensName = IERC20(token).name(); [27241,27292]",
      "dest": "comment: // string memory tokensName = IERC20(token).name(); [27241,27292]"
    },
    {
      "src": "expression_statement [5204,5286]",
      "dest": "expression_statement [5204,5286]"
    },
    {
      "src": ">=: >= [5234,5236]",
      "dest": ">=: >= [5234,5236]"
    },
    {
      "src": "primitive_type [15692,15699]",
      "dest": "primitive_type [15692,15699]"
    },
    {
      "src": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      *      * [IMPORTANT]      * ====      * You shouldn't rely on `isContract` to protect against flash loan attacks!      *      * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets      * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract      * constructor.      * ====      */ [271,1225]",
      "dest": "comment: /**      * @dev Returns true if `account` is a contract.      *      * [IMPORTANT]      * ====      * It is unsafe to assume that an address for which this function returns      * false is an externally-owned account (EOA) and not a contract.      *      * Among others, `isContract` will return false for the following      * types of addresses:      *      *  - an externally-owned account      *  - a contract in construction      *  - an address where a contract will be created      *  - an address where a contract lived, but was destroyed      * ====      *      * [IMPORTANT]      * ====      * You shouldn't rely on `isContract` to protect against flash loan attacks!      *      * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets      * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract      * constructor.      * ====      */ [271,1225]"
    },
    {
      "src": "type_name [25610,25614]",
      "dest": "type_name [25610,25614]"
    },
    {
      "src": "number_literal: 5000000000 [27142,27152]",
      "dest": "number_literal: 5000000000 [27142,27152]"
    },
    {
      "src": "(: ( [2555,2556]",
      "dest": "(: ( [2555,2556]"
    },
    {
      "src": "parameter [24112,24122]",
      "dest": "parameter [24112,24122]"
    },
    {
      "src": ".: . [29313,29314]",
      "dest": ".: . [29386,29387]"
    },
    {
      "src": "(: ( [28938,28939]",
      "dest": "(: ( [29011,29012]"
    },
    {
      "src": "string_literal [28318,28320]",
      "dest": "string_literal [28373,28375]"
    },
    {
      "src": "event: event [21937,21942]",
      "dest": "event: event [21937,21942]"
    },
    {
      "src": "uint256: uint256 [16339,16346]",
      "dest": "uint256: uint256 [16339,16346]"
    },
    {
      "src": "(: ( [27966,27967]",
      "dest": "(: ( [27966,27967]"
    },
    {
      "src": "function: function [6019,6027]",
      "dest": "function: function [6019,6027]"
    },
    {
      "src": "): ) [28748,28749]",
      "dest": "): ) [28821,28822]"
    },
    {
      "src": "identifier: multipleToken [29071,29084]",
      "dest": "identifier: multipleToken [29144,29157]"
    },
    {
      "src": "(: ( [26274,26275]",
      "dest": "(: ( [26274,26275]"
    },
    {
      "src": "primitive_type [25982,25989]",
      "dest": "primitive_type [25982,25989]"
    },
    {
      "src": "return_statement [22238,22248]",
      "dest": "return_statement [22238,22248]"
    },
    {
      "src": "type_name [4553,4560]",
      "dest": "type_name [4553,4560]"
    },
    {
      "src": "private: private [10868,10875]",
      "dest": "private: private [10868,10875]"
    },
    {
      "src": ".: . [24607,24608]",
      "dest": ".: . [24607,24608]"
    },
    {
      "src": "comment: // for contracts in construction, since the code is only stored at the end [1388,1462]",
      "dest": "comment: // for contracts in construction, since the code is only stored at the end [1388,1462]"
    },
    {
      "src": "visibility [29481,29489]",
      "dest": "visibility [29554,29562]"
    },
    {
      "src": "string_literal [2589,2620]",
      "dest": "string_literal [2589,2620]"
    },
    {
      "src": "<: < [13228,13229]",
      "dest": "<: < [13228,13229]"
    },
    {
      "src": "identifier: txArray [28788,28795]",
      "dest": "identifier: txArray [28861,28868]"
    },
    {
      "src": "(: ( [28814,28815]",
      "dest": "(: ( [28887,28888]"
    },
    {
      "src": "view: view [25207,25211]",
      "dest": "view: view [25207,25211]"
    },
    {
      "src": "primitive_type [26233,26240]",
      "dest": "primitive_type [26233,26240]"
    },
    {
      "src": ",: , [24233,24234]",
      "dest": ",: , [24233,24234]"
    },
    {
      "src": "member_expression [26710,26720]",
      "dest": "member_expression [26710,26720]"
    },
    {
      "src": "primitive_type [21556,21563]",
      "dest": "primitive_type [21556,21563]"
    },
    {
      "src": "type_name [6080,6085]",
      "dest": "type_name [6080,6085]"
    },
    {
      "src": ",: , [24308,24309]",
      "dest": ",: , [24308,24309]"
    },
    {
      "src": "): ) [6848,6849]",
      "dest": "): ) [6848,6849]"
    },
    {
      "src": "call_argument [6247,6251]",
      "dest": "call_argument [6247,6251]"
    },
    {
      "src": "call_expression [7727,7760]",
      "dest": "call_expression [7727,7760]"
    },
    {
      "src": "bytes: bytes [3983,3988]",
      "dest": "bytes: bytes [3983,3988]"
    },
    {
      "src": "call_expression [11641,11842]",
      "dest": "call_expression [11641,11842]"
    },
    {
      "src": "identifier: _disableInitializers [14264,14284]",
      "dest": "identifier: _disableInitializers [14264,14284]"
    },
    {
      "src": "array_access [27675,27709]",
      "dest": "array_access [27675,27709]"
    },
    {
      "src": "function: function [15986,15994]",
      "dest": "function: function [15986,15994]"
    },
    {
      "src": "comment: /**      * @dev Returns the division of two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [16822,16960]",
      "dest": "comment: /**      * @dev Returns the division of two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [16822,16960]"
    },
    {
      "src": "{: { [5194,5195]",
      "dest": "{: { [5194,5195]"
    },
    {
      "src": "else: else [24873,24877]",
      "dest": "else: else [24873,24877]"
    },
    {
      "src": "primitive_type [22971,22978]",
      "dest": "primitive_type [22971,22978]"
    },
    {
      "src": "if_statement [6837,7255]",
      "dest": "if_statement [6837,7255]"
    },
    {
      "src": "): ) [6138,6139]",
      "dest": "): ) [6138,6139]"
    },
    {
      "src": "parameter [25728,25740]",
      "dest": "parameter [25728,25740]"
    },
    {
      "src": "type_name [25477,25481]",
      "dest": "type_name [25477,25481]"
    },
    {
      "src": "identifier: encodePacked [24200,24212]",
      "dest": "identifier: encodePacked [24200,24212]"
    },
    {
      "src": "primitive_type [5180,5185]",
      "dest": "primitive_type [5180,5185]"
    },
    {
      "src": "function_definition [22099,22254]",
      "dest": "function_definition [22099,22254]"
    },
    {
      "src": "identifier: sigR [24304,24308]",
      "dest": "identifier: sigR [24304,24308]"
    },
    {
      "src": "identifier: length [1533,1539]",
      "dest": "identifier: length [1533,1539]"
    },
    {
      "src": "function_body [5194,5461]",
      "dest": "function_body [5194,5461]"
    },
    {
      "src": ",: , [7229,7230]",
      "dest": ",: , [7229,7230]"
    },
    {
      "src": "identifier: value [5114,5119]",
      "dest": "identifier: value [5114,5119]"
    },
    {
      "src": "identifier: b [19992,19993]",
      "dest": "identifier: b [19992,19993]"
    },
    {
      "src": "expression_statement [23206,23255]",
      "dest": "expression_statement [23206,23255]"
    },
    {
      "src": "comment: /**      * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,      * `onlyInitializing` functions can be used to initialize parent contracts.      *      * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a      * constructor.      *      * Emits an {Initialized} event.      */ [11158,11557]",
      "dest": "comment: /**      * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,      * `onlyInitializing` functions can be used to initialize parent contracts.      *      * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a      * constructor.      *      * Emits an {Initialized} event.      */ [11158,11557]"
    },
    {
      "src": "bool: bool [10991,10995]",
      "dest": "bool: bool [10991,10995]"
    },
    {
      "src": "(: ( [23033,23034]",
      "dest": "(: ( [23033,23034]"
    },
    {
      "src": "(: ( [11662,11663]",
      "dest": "(: ( [11662,11663]"
    },
    {
      "src": "): ) [13750,13751]",
      "dest": "): ) [13750,13751]"
    },
    {
      "src": "{: { [20068,20069]",
      "dest": "{: { [20068,20069]"
    },
    {
      "src": "!: ! [11617,11618]",
      "dest": "!: ! [11617,11618]"
    },
    {
      "src": "assembly_statement [22181,22229]",
      "dest": "assembly_statement [22181,22229]"
    },
    {
      "src": "bool: bool [24145,24149]",
      "dest": "bool: bool [24145,24149]"
    },
    {
      "src": "uint8: uint8 [22999,23004]",
      "dest": "uint8: uint8 [22999,23004]"
    },
    {
      "src": "binary_expression [28968,28983]",
      "dest": "binary_expression [29041,29056]"
    },
    {
      "src": "parameter [19965,19974]",
      "dest": "parameter [19965,19974]"
    },
    {
      "src": "type_name [26218,26225]",
      "dest": "type_name [26218,26225]"
    },
    {
      "src": "primitive_type [1290,1294]",
      "dest": "primitive_type [1290,1294]"
    },
    {
      "src": "variable_declaration_statement [15735,15753]",
      "dest": "variable_declaration_statement [15735,15753]"
    },
    {
      "src": "(: ( [15640,15641]",
      "dest": "(: ( [15640,15641]"
    },
    {
      "src": "identifier: depositer [28918,28927]",
      "dest": "identifier: depositer [28991,29000]"
    },
    {
      "src": "number_literal: 1 [11696,11697]",
      "dest": "number_literal: 1 [11696,11697]"
    },
    {
      "src": "emit: emit [13402,13406]",
      "dest": "emit: emit [13402,13406]"
    },
    {
      "src": "call_argument [4716,4759]",
      "dest": "call_argument [4716,4759]"
    },
    {
      "src": ".: . [6235,6236]",
      "dest": ".: . [6235,6236]"
    },
    {
      "src": "address: address [26558,26565]",
      "dest": "address: address [26558,26565]"
    },
    {
      "src": ",: , [19974,19975]",
      "dest": ",: , [19974,19975]"
    },
    {
      "src": "uint256: uint256 [20774,20781]",
      "dest": "uint256: uint256 [20774,20781]"
    },
    {
      "src": "call_argument [27646,27650]",
      "dest": "call_argument [27646,27650]"
    },
    {
      "src": "\": \" [29758,29759]",
      "dest": "\": \" [29831,29832]"
    },
    {
      "src": "=: = [28543,28544]",
      "dest": "=: = [28616,28617]"
    },
    {
      "src": "uint256: uint256 [17381,17388]",
      "dest": "uint256: uint256 [17381,17388]"
    },
    {
      "src": "): ) [29480,29481]",
      "dest": "): ) [29553,29554]"
    },
    {
      "src": "=: = [23226,23227]",
      "dest": "=: = [23226,23227]"
    },
    {
      "src": "{: { [14708,14709]",
      "dest": "{: { [14708,14709]"
    },
    {
      "src": "string_literal [14338,14379]",
      "dest": "string_literal [14338,14379]"
    },
    {
      "src": "function: function [22099,22107]",
      "dest": "function: function [22099,22107]"
    },
    {
      "src": "parameter [23873,23880]",
      "dest": "parameter [23873,23880]"
    },
    {
      "src": "call_argument [11662,11770]",
      "dest": "call_argument [11662,11770]"
    },
    {
      "src": "call_expression [23899,23968]",
      "dest": "call_expression [23899,23968]"
    },
    {
      "src": "identifier: errorMessage [5143,5155]",
      "dest": "identifier: errorMessage [5143,5155]"
    },
    {
      "src": "[: [ [26945,26946]",
      "dest": "[: [ [26945,26946]"
    },
    {
      "src": "parameter [16992,17001]",
      "dest": "parameter [16992,17001]"
    },
    {
      "src": "bytes: bytes [6202,6207]",
      "dest": "bytes: bytes [6202,6207]"
    },
    {
      "src": "identifier: a [21564,21565]",
      "dest": "identifier: a [21564,21565]"
    },
    {
      "src": "\": \" [24373,24374]",
      "dest": "\": \" [24373,24374]"
    },
    {
      "src": "is: is [25803,25805]",
      "dest": "is: is [25803,25805]"
    },
    {
      "src": "type_name [25536,25540]",
      "dest": "type_name [25536,25540]"
    },
    {
      "src": "address: address [29576,29583]",
      "dest": "address: address [29649,29656]"
    },
    {
      "src": "primitive_type [23356,23361]",
      "dest": "primitive_type [23356,23361]"
    },
    {
      "src": "parameter [6107,6133]",
      "dest": "parameter [6107,6133]"
    },
    {
      "src": "primitive_type [6202,6207]",
      "dest": "primitive_type [6202,6207]"
    },
    {
      "src": "identifier: _ [26743,26744]",
      "dest": "identifier: _ [26743,26744]"
    },
    {
      "src": ",: , [26231,26232]",
      "dest": ",: , [26231,26232]"
    },
    {
      "src": "function: function [24998,25006]",
      "dest": "function: function [24998,25006]"
    },
    {
      "src": "(: ( [27894,27895]",
      "dest": "(: ( [27894,27895]"
    },
    {
      "src": "type_name [20059,20066]",
      "dest": "type_name [20059,20066]"
    },
    {
      "src": "type_name [18119,18126]",
      "dest": "type_name [18119,18126]"
    },
    {
      "src": "internal: internal [6790,6798]",
      "dest": "internal: internal [6790,6798]"
    },
    {
      "src": "identifier: Initializable [10728,10741]",
      "dest": "identifier: Initializable [10728,10741]"
    },
    {
      "src": "address: address [3543,3550]",
      "dest": "address: address [3543,3550]"
    },
    {
      "src": "member_expression [27895,27914]",
      "dest": "member_expression [27895,27914]"
    },
    {
      "src": "type_name [22985,22992]",
      "dest": "type_name [22985,22992]"
    },
    {
      "src": "function_definition [15986,16175]",
      "dest": "function_definition [15986,16175]"
    },
    {
      "src": "if: if [7652,7654]",
      "dest": "if: if [7652,7654]"
    },
    {
      "src": "identifier: transactions [26955,26967]",
      "dest": "identifier: transactions [26955,26967]"
    },
    {
      "src": "parameter [5666,5680]",
      "dest": "parameter [5666,5680]"
    },
    {
      "src": "identifier: recipient [2651,2660]",
      "dest": "identifier: recipient [2651,2660]"
    },
    {
      "src": "identifier: c [16797,16798]",
      "dest": "identifier: c [16797,16798]"
    },
    {
      "src": "returns: returns [18155,18162]",
      "dest": "returns: returns [18155,18162]"
    },
    {
      "src": "internal: internal [4624,4632]",
      "dest": "internal: internal [4624,4632]"
    },
    {
      "src": "expression_statement [24325,24376]",
      "dest": "expression_statement [24325,24376]"
    },
    {
      "src": "true [16146,16150]",
      "dest": "true [16146,16150]"
    },
    {
      "src": "type_name [29576,29583]",
      "dest": "type_name [29649,29656]"
    },
    {
      "src": "): ) [23449,23450]",
      "dest": "): ) [23449,23450]"
    },
    {
      "src": "visibility [7605,7613]",
      "dest": "visibility [7605,7613]"
    },
    {
      "src": "comment: /**      * @dev Returns the highest version that has been initialized. See {reinitializer}.      */ [14540,14639]",
      "dest": "comment: /**      * @dev Returns the highest version that has been initialized. See {reinitializer}.      */ [14540,14639]"
    },
    {
      "src": "identifier: collectedFeesThreshold [27063,27085]",
      "dest": "identifier: collectedFeesThreshold [27063,27085]"
    },
    {
      "src": "identifier: this [24220,24224]",
      "dest": "identifier: this [24220,24224]"
    },
    {
      "src": "primitive_type [24012,24019]",
      "dest": "primitive_type [24012,24019]"
    },
    {
      "src": ",: , [4701,4702]",
      "dest": ",: , [4701,4702]"
    },
    {
      "src": "external: external [25413,25421]",
      "dest": "external: external [25413,25421]"
    },
    {
      "src": "type_name [28764,28776]",
      "dest": "type_name [28837,28849]"
    },
    {
      "src": "assembly: assembly [24628,24636]",
      "dest": "assembly: assembly [24628,24636]"
    },
    {
      "src": "identifier: msg [29737,29740]",
      "dest": "identifier: msg [29810,29813]"
    },
    {
      "src": "): ) [24524,24525]",
      "dest": "): ) [24524,24525]"
    },
    {
      "src": "=: = [2649,2650]",
      "dest": "=: = [2649,2650]"
    },
    {
      "src": "identifier: _initialized [11852,11864]",
      "dest": "identifier: _initialized [11852,11864]"
    },
    {
      "src": "{: { [19450,19451]",
      "dest": "{: { [19450,19451]"
    },
    {
      "src": "identifier: max [14513,14516]",
      "dest": "identifier: max [14513,14516]"
    },
    {
      "src": "identifier: Transactions [28587,28599]",
      "dest": "identifier: Transactions [28660,28672]"
    },
    {
      "src": "primitive_type [23836,23843]",
      "dest": "primitive_type [23836,23843]"
    },
    {
      "src": "call_argument [28834,28835]",
      "dest": "call_argument [28907,28908]"
    },
    {
      "src": "identifier: returndata [5429,5439]",
      "dest": "identifier: returndata [5429,5439]"
    },
    {
      "src": ".: . [28816,28817]",
      "dest": ".: . [28889,28890]"
    },
    {
      "src": "call_argument [26721,26732]",
      "dest": "call_argument [26721,26732]"
    },
    {
      "src": "type_name [20680,20687]",
      "dest": "type_name [20680,20687]"
    },
    {
      "src": "type_name [26437,26444]",
      "dest": "type_name [26437,26444]"
    },
    {
      "src": "function_definition [3928,4151]",
      "dest": "function_definition [3928,4151]"
    },
    {
      "src": "identifier: x [29351,29352]",
      "dest": "identifier: x [29424,29425]"
    },
    {
      "src": "(: ( [15784,15785]",
      "dest": "(: ( [15784,15785]"
    },
    {
      "src": "(: ( [2680,2681]",
      "dest": "(: ( [2680,2681]"
    },
    {
      "src": "parameter [17763,17772]",
      "dest": "parameter [17763,17772]"
    },
    {
      "src": "]: ] [29332,29333]",
      "dest": "]: ] [29405,29406]"
    },
    {
      "src": "payable: payable [29692,29699]",
      "dest": "payable: payable [29765,29772]"
    },
    {
      "src": "false: false [15785,15790]",
      "dest": "false: false [15785,15790]"
    },
    {
      "src": "type_name [27464,27470]",
      "dest": "type_name [27464,27470]"
    },
    {
      "src": "internal: internal [5701,5709]",
      "dest": "internal: internal [5701,5709]"
    },
    {
      "src": "memory: memory [22937,22943]",
      "dest": "memory: memory [22937,22943]"
    },
    {
      "src": "member_expression [1520,1539]",
      "dest": "member_expression [1520,1539]"
    },
    {
      "src": "identifier: trySub [15995,16001]",
      "dest": "identifier: trySub [15995,16001]"
    },
    {
      "src": "identifier: multipleToken [27675,27688]",
      "dest": "identifier: multipleToken [27675,27688]"
    },
    {
      "src": "parameter [13164,13177]",
      "dest": "parameter [13164,13177]"
    },
    {
      "src": "false: false [16115,16120]",
      "dest": "false: false [16115,16120]"
    },
    {
      "src": "type_name [26597,26637]",
      "dest": "type_name [26597,26637]"
    },
    {
      "src": "primitive_type [15735,15742]",
      "dest": "primitive_type [15735,15742]"
    },
    {
      "src": "comment: //0.01 ether [27108,27120]",
      "dest": "comment: //0.01 ether [27108,27120]"
    },
    {
      "src": "(: ( [11648,11649]",
      "dest": "(: ( [11648,11649]"
    },
    {
      "src": "identifier: a [16104,16105]",
      "dest": "identifier: a [16104,16105]"
    },
    {
      "src": "parameter [18119,18128]",
      "dest": "parameter [18119,18128]"
    },
    {
      "src": "function: function [25428,25436]",
      "dest": "function: function [25428,25436]"
    },
    {
      "src": "type_name [16705,16712]",
      "dest": "type_name [16705,16712]"
    },
    {
      "src": "variable_declaration [11595,11614]",
      "dest": "variable_declaration [11595,11614]"
    },
    {
      "src": "comment: /**      * @dev Returns the addition of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [15489,15620]",
      "dest": "comment: /**      * @dev Returns the addition of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [15489,15620]"
    },
    {
      "src": "identifier: feeReceiver [29622,29633]",
      "dest": "identifier: feeReceiver [29695,29706]"
    },
    {
      "src": "return: return [3620,3626]",
      "dest": "return: return [3620,3626]"
    },
    {
      "src": "identifier: prefixed [24177,24185]",
      "dest": "identifier: prefixed [24177,24185]"
    },
    {
      "src": "identifier: id [22204,22206]",
      "dest": "identifier: id [22204,22206]"
    },
    {
      "src": "event: event [26254,26259]",
      "dest": "event: event [26254,26259]"
    },
    {
      "src": "call_argument [23926,23960]",
      "dest": "call_argument [23926,23960]"
    },
    {
      "src": "uint256: uint256 [16013,16020]",
      "dest": "uint256: uint256 [16013,16020]"
    },
    {
      "src": "call_expression [5385,5454]",
      "dest": "call_expression [5385,5454]"
    },
    {
      "src": "identifier: _msgSender [27689,27699]",
      "dest": "identifier: _msgSender [27689,27699]"
    },
    {
      "src": "bool: bool [23342,23346]",
      "dest": "bool: bool [23342,23346]"
    },
    {
      "src": "variable_declaration_statement [28855,28943]",
      "dest": "variable_declaration_statement [28928,29016]"
    },
    {
      "src": "binary_expression [17132,17137]",
      "dest": "binary_expression [17132,17137]"
    },
    {
      "src": "uint256: uint256 [21650,21657]",
      "dest": "uint256: uint256 [21650,21657]"
    },
    {
      "src": "): ) [25039,25040]",
      "dest": "): ) [25039,25040]"
    },
    {
      "src": "binary_expression [15770,15775]",
      "dest": "binary_expression [15770,15775]"
    },
    {
      "src": "function: function [18106,18114]",
      "dest": "function: function [18106,18114]"
    },
    {
      "src": "string: string [20718,20724]",
      "dest": "string: string [20718,20724]"
    },
    {
      "src": "modifier_invocation [27003,27014]",
      "dest": "modifier_invocation [27003,27014]"
    },
    {
      "src": "type_cast_expression [24511,24524]",
      "dest": "type_cast_expression [24511,24524]"
    },
    {
      "src": "memory: memory [4017,4023]",
      "dest": "memory: memory [4017,4023]"
    },
    {
      "src": "call_argument [23402,23450]",
      "dest": "call_argument [23402,23450]"
    },
    {
      "src": "uint256: uint256 [23695,23702]",
      "dest": "uint256: uint256 [23695,23702]"
    },
    {
      "src": "call_argument [4703,4707]",
      "dest": "call_argument [4703,4707]"
    },
    {
      "src": "return: return [22238,22244]",
      "dest": "return: return [22238,22244]"
    },
    {
      "src": "(: ( [22217,22218]",
      "dest": "(: ( [22217,22218]"
    },
    {
      "src": "identifier: functionCall [3937,3949]",
      "dest": "identifier: functionCall [3937,3949]"
    },
    {
      "src": "boolean_literal [16683,16687]",
      "dest": "boolean_literal [16683,16687]"
    },
    {
      "src": "identifier: this [24519,24523]",
      "dest": "identifier: this [24519,24523]"
    },
    {
      "src": "(: ( [6867,6868]",
      "dest": "(: ( [6867,6868]"
    },
    {
      "src": "member_expression [29219,29230]",
      "dest": "member_expression [29292,29303]"
    },
    {
      "src": "expression_statement [14314,14381]",
      "dest": "expression_statement [14314,14381]"
    },
    {
      "src": "parameter [17341,17350]",
      "dest": "parameter [17341,17350]"
    },
    {
      "src": "): ) [13670,13671]",
      "dest": "): ) [13670,13671]"
    },
    {
      "src": "(: ( [16338,16339]",
      "dest": "(: ( [16338,16339]"
    },
    {
      "src": "type_name [7628,7633]",
      "dest": "type_name [7628,7633]"
    },
    {
      "src": "}: } [26926,26927]",
      "dest": "}: } [26926,26927]"
    },
    {
      "src": "==: == [26708,26710]",
      "dest": "==: == [26708,26710]"
    },
    {
      "src": "address: address [21967,21974]",
      "dest": "address: address [21967,21974]"
    },
    {
      "src": "parameter [17797,17804]",
      "dest": "parameter [17797,17804]"
    },
    {
      "src": "binary_expression [11662,11770]",
      "dest": "binary_expression [11662,11770]"
    },
    {
      "src": "return_statement [17087,17105]",
      "dest": "return_statement [17087,17105]"
    },
    {
      "src": ",: , [23145,23146]",
      "dest": ",: , [23145,23146]"
    },
    {
      "src": "returns: returns [25212,25219]",
      "dest": "returns: returns [25212,25219]"
    },
    {
      "src": "parameter [22985,22997]",
      "dest": "parameter [22985,22997]"
    },
    {
      "src": "primitive_type [16013,16020]",
      "dest": "primitive_type [16013,16020]"
    },
    {
      "src": "): ) [16105,16106]",
      "dest": "): ) [16105,16106]"
    },
    {
      "src": "type_name [26933,26945]",
      "dest": "type_name [26933,26945]"
    },
    {
      "src": "event_paramater [21967,21986]",
      "dest": "event_paramater [21967,21986]"
    },
    {
      "src": "^:  ^ [15106,15108]",
      "dest": "^:  ^ [15106,15108]"
    },
    {
      "src": "variable_declaration_statement [11595,11632]",
      "dest": "variable_declaration_statement [11595,11632]"
    },
    {
      "src": "(: ( [4543,4544]",
      "dest": "(: ( [4543,4544]"
    },
    {
      "src": "identifier: verify [23067,23073]",
      "dest": "identifier: verify [23067,23073]"
    },
    {
      "src": "returns: returns [15677,15684]",
      "dest": "returns: returns [15677,15684]"
    },
    {
      "src": "mapping: mapping [22050,22057]",
      "dest": "mapping: mapping [22050,22057]"
    },
    {
      "src": "false [16115,16120]",
      "dest": "false [16115,16120]"
    },
    {
      "src": "): ) [24254,24255]",
      "dest": "): ) [24254,24255]"
    },
    {
      "src": "=: = [15745,15746]",
      "dest": "=: = [15745,15746]"
    },
    {
      "src": "string_literal [5244,5284]",
      "dest": "string_literal [5244,5284]"
    },
    {
      "src": "member_expression [7942,7959]",
      "dest": "member_expression [7942,7959]"
    },
    {
      "src": "): ) [16123,16124]",
      "dest": "): ) [16123,16124]"
    },
    {
      "src": "identifier: _initializing [13690,13703]",
      "dest": "identifier: _initializing [13690,13703]"
    },
    {
      "src": "assembly_statement [8114,8256]",
      "dest": "assembly_statement [8114,8256]"
    },
    {
      "src": "): ) [17350,17351]",
      "dest": "): ) [17350,17351]"
    },
    {
      "src": "identifier: tokenName [29378,29387]",
      "dest": "identifier: tokenName [29451,29460]"
    },
    {
      "src": "): ) [16673,16674]",
      "dest": "): ) [16673,16674]"
    },
    {
      "src": "address: address [25181,25188]",
      "dest": "address: address [25181,25188]"
    },
    {
      "src": "): ) [17039,17040]",
      "dest": "): ) [17039,17040]"
    },
    {
      "src": "(: ( [6840,6841]",
      "dest": "(: ( [6840,6841]"
    },
    {
      "src": "return: return [7163,7169]",
      "dest": "return: return [7163,7169]"
    },
    {
      "src": "event_paramater [26342,26355]",
      "dest": "event_paramater [26342,26355]"
    },
    {
      "src": "{: { [8123,8124]",
      "dest": "{: { [8123,8124]"
    },
    {
      "src": "identifier: returndata [8170,8180]",
      "dest": "identifier: returndata [8170,8180]"
    },
    {
      "src": "private: private [22078,22085]",
      "dest": "private: private [22078,22085]"
    },
    {
      "src": "event_paramater [26452,26468]",
      "dest": "event_paramater [26452,26468]"
    },
    {
      "src": "uint256: uint256 [4604,4611]",
      "dest": "uint256: uint256 [4604,4611]"
    },
    {
      "src": "(: ( [28501,28502]",
      "dest": "(: ( [28574,28575]"
    },
    {
      "src": "expression_statement [26695,26734]",
      "dest": "expression_statement [26695,26734]"
    },
    {
      "src": "expression_statement [2694,2773]",
      "dest": "expression_statement [2694,2773]"
    },
    {
      "src": "!=: != [24340,24342]",
      "dest": "!=: != [24340,24342]"
    },
    {
      "src": ".: . [23573,23574]",
      "dest": ".: . [23573,23574]"
    },
    {
      "src": "(: ( [11136,11137]",
      "dest": "(: ( [11136,11137]"
    },
    {
      "src": "identifier: _amount [25688,25695]",
      "dest": "identifier: _amount [25688,25695]"
    },
    {
      "src": "identifier: target [4695,4701]",
      "dest": "identifier: target [4695,4701]"
    },
    {
      "src": "identifier: length [28737,28743]",
      "dest": "identifier: length [28810,28816]"
    },
    {
      "src": "returns: returns [23864,23871]",
      "dest": "returns: returns [23864,23871]"
    },
    {
      "src": "): ) [19448,19449]",
      "dest": "): ) [19448,19449]"
    },
    {
      "src": "call_argument [21708,21720]",
      "dest": "call_argument [21708,21720]"
    },
    {
      "src": "function_body [18516,18545]",
      "dest": "function_body [18516,18545]"
    },
    {
      "src": "): ) [15823,15824]",
      "dest": "): ) [15823,15824]"
    },
    {
      "src": "string [13705,13750]",
      "dest": "string [13705,13750]"
    },
    {
      "src": "returns: returns [6804,6811]",
      "dest": "returns: returns [6804,6811]"
    },
    {
      "src": "primitive_type [18507,18514]",
      "dest": "primitive_type [18507,18514]"
    },
    {
      "src": "binary_expression [24333,24353]",
      "dest": "binary_expression [24333,24353]"
    },
    {
      "src": "}: } [15840,15841]",
      "dest": "}: } [15840,15841]"
    },
    {
      "src": "(: ( [25219,25220]",
      "dest": "(: ( [25219,25220]"
    },
    {
      "src": "struct_field_assignment [28895,28937]",
      "dest": "struct_field_assignment [28968,29010]"
    },
    {
      "src": "function_body [7642,7777]",
      "dest": "function_body [7642,7777]"
    },
    {
      "src": "boolean_literal [17126,17130]",
      "dest": "boolean_literal [17126,17130]"
    },
    {
      "src": "identifier: id [22169,22171]",
      "dest": "identifier: id [22169,22171]"
    },
    {
      "src": "primitive_type [25035,25039]",
      "dest": "primitive_type [25035,25039]"
    },
    {
      "src": "): ) [22119,22120]",
      "dest": "): ) [22119,22120]"
    },
    {
      "src": "primitive_type [4553,4560]",
      "dest": "primitive_type [4553,4560]"
    },
    {
      "src": "public: public [23011,23017]",
      "dest": "public: public [23011,23017]"
    },
    {
      "src": "(: ( [22909,22910]",
      "dest": "(: ( [22909,22910]"
    },
    {
      "src": "identifier: _initializing [13371,13384]",
      "dest": "identifier: _initializing [13371,13384]"
    },
    {
      "src": "primitive_type [5310,5315]",
      "dest": "primitive_type [5310,5315]"
    },
    {
      "src": "): ) [26636,26637]",
      "dest": "): ) [26636,26637]"
    },
    {
      "src": ",: , [4126,4127]",
      "dest": ",: , [4126,4127]"
    },
    {
      "src": "): ) [28373,28374]",
      "dest": "): ) [28432,28433]"
    },
    {
      "src": "call_argument [20118,20130]",
      "dest": "call_argument [20118,20130]"
    },
    {
      "src": "function_definition [25049,25097]",
      "dest": "function_definition [25049,25097]"
    },
    {
      "src": "call_argument [29219,29230]",
      "dest": "call_argument [29292,29303]"
    },
    {
      "src": "type_name [26324,26330]",
      "dest": "type_name [26324,26330]"
    },
    {
      "src": "type_name [26907,26913]",
      "dest": "type_name [26907,26913]"
    },
    {
      "src": "member_expression [24196,24212]",
      "dest": "member_expression [24196,24212]"
    },
    {
      "src": "type_name [26933,26947]",
      "dest": "type_name [26933,26947]"
    },
    {
      "src": "view: view [22128,22132]",
      "dest": "view: view [22128,22132]"
    },
    {
      "src": "]: ] [29105,29106]",
      "dest": "]: ] [29178,29179]"
    },
    {
      "src": "string [5244,5284]",
      "dest": "string [5244,5284]"
    },
    {
      "src": "{: { [14426,14427]",
      "dest": "{: { [14426,14427]"
    },
    {
      "src": "returns: returns [14901,14908]",
      "dest": "returns: returns [14901,14908]"
    },
    {
      "src": "identifier: functionCall [3530,3542]",
      "dest": "identifier: functionCall [3530,3542]"
    },
    {
      "src": ",: , [7529,7530]",
      "dest": ",: , [7529,7530]"
    },
    {
      "src": "uint256: uint256 [17032,17039]",
      "dest": "uint256: uint256 [17032,17039]"
    },
    {
      "src": "expression_statement [13360,13362]",
      "dest": "expression_statement [13360,13362]"
    },
    {
      "src": "primitive_type [16002,16009]",
      "dest": "primitive_type [16002,16009]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol [0,73]",
      "dest": "comment: // File: @openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol [0,73]"
    },
    {
      "src": "boolean_literal [16791,16795]",
      "dest": "boolean_literal [16791,16795]"
    },
    {
      "src": "type_name [23873,23880]",
      "dest": "type_name [23873,23880]"
    },
    {
      "src": "and: and [24775,24778]",
      "dest": "and: and [24775,24778]"
    },
    {
      "src": "primitive_type [11734,11741]",
      "dest": "primitive_type [11734,11741]"
    },
    {
      "src": "call_argument [2564,2568]",
      "dest": "call_argument [2564,2568]"
    },
    {
      "src": "identifier: isTopLevelCall [11967,11981]",
      "dest": "identifier: isTopLevelCall [11967,11981]"
    },
    {
      "src": "function: function [6633,6641]",
      "dest": "function: function [6633,6641]"
    },
    {
      "src": "parameter [16350,16359]",
      "dest": "parameter [16350,16359]"
    },
    {
      "src": "}: } [7770,7771]",
      "dest": "}: } [7770,7771]"
    },
    {
      "src": "address: address [11734,11741]",
      "dest": "address: address [11734,11741]"
    },
    {
      "src": "visibility [6790,6798]",
      "dest": "visibility [6790,6798]"
    },
    {
      "src": "(: ( [17374,17375]",
      "dest": "(: ( [17374,17375]"
    },
    {
      "src": ".: . [2569,2570]",
      "dest": ".: . [2569,2570]"
    },
    {
      "src": ",: , [5427,5428]",
      "dest": ",: , [5427,5428]"
    },
    {
      "src": "comment: /**      * Main function to be called when user wants to execute meta transaction.      * The actual function to be called should be passed as param with name functionSignature      * Here the basic signature recovery is being used. Signature is expected to be generated using      * personal_sign method.      * @param userAddress Address of user trying to do meta transaction      * @param functionSignature Signature of the actual function to be called via meta transaction      * @param sigR R part of the signature      * @param sigS S part of the signature      * @param sigV V part of the signature      */ [22260,22873]",
      "dest": "comment: /**      * Main function to be called when user wants to execute meta transaction.      * The actual function to be called should be passed as param with name functionSignature      * Here the basic signature recovery is being used. Signature is expected to be generated using      * personal_sign method.      * @param userAddress Address of user trying to do meta transaction      * @param functionSignature Signature of the actual function to be called via meta transaction      * @param sigR R part of the signature      * @param sigS S part of the signature      * @param sigV V part of the signature      */ [22260,22873]"
    },
    {
      "src": "memory: memory [3989,3995]",
      "dest": "memory: memory [3989,3995]"
    },
    {
      "src": "=: = [13311,13312]",
      "dest": "=: = [13311,13312]"
    },
    {
      "src": "identifier: verifyCallResultFromTarget [6642,6668]",
      "dest": "identifier: verifyCallResultFromTarget [6642,6668]"
    },
    {
      "src": "*: * [18535,18536]",
      "dest": "*: * [18535,18536]"
    },
    {
      "src": "primitive_type [18164,18171]",
      "dest": "primitive_type [18164,18171]"
    },
    {
      "src": "block_statement [21669,21758]",
      "dest": "block_statement [21669,21758]"
    },
    {
      "src": "}: } [27859,27860]",
      "dest": "}: } [27859,27860]"
    },
    {
      "src": "array_access [28902,28928]",
      "dest": "array_access [28975,29001]"
    },
    {
      "src": "[: [ [23093,23094]",
      "dest": "[: [ [23093,23094]"
    },
    {
      "src": "string: string [7572,7578]",
      "dest": "string: string [7572,7578]"
    },
    {
      "src": "%: % [21744,21745]",
      "dest": "%: % [21744,21745]"
    },
    {
      "src": "(: ( [4641,4642]",
      "dest": "(: ( [4641,4642]"
    },
    {
      "src": "identifier: _msgSender [27040,27050]",
      "dest": "identifier: _msgSender [27040,27050]"
    },
    {
      "src": "member_expression [29033,29057]",
      "dest": "member_expression [29106,29130]"
    },
    {
      "src": "primitive_type [26308,26315]",
      "dest": "primitive_type [26308,26315]"
    },
    {
      "src": "uint8: uint8 [11137,11142]",
      "dest": "uint8: uint8 [11137,11142]"
    },
    {
      "src": "{: { [13672,13673]",
      "dest": "{: { [13672,13673]"
    },
    {
      "src": ">=: >= [2578,2580]",
      "dest": ">=: >= [2578,2580]"
    },
    {
      "src": "identifier: owner [24005,24010]",
      "dest": "identifier: owner [24005,24010]"
    },
    {
      "src": "(: ( [14321,14322]",
      "dest": "(: ( [14321,14322]"
    },
    {
      "src": "identifier: length [24608,24614]",
      "dest": "identifier: length [24608,24614]"
    },
    {
      "src": "view: view [25343,25347]",
      "dest": "view: view [25343,25347]"
    },
    {
      "src": ",: , [24302,24303]",
      "dest": ",: , [24302,24303]"
    },
    {
      "src": "bytes: bytes [6724,6729]",
      "dest": "bytes: bytes [6724,6729]"
    },
    {
      "src": "identifier: data [6093,6097]",
      "dest": "identifier: data [6093,6097]"
    },
    {
      "src": "call_argument [7747,7759]",
      "dest": "call_argument [7747,7759]"
    },
    {
      "src": "type_name [21923,21930]",
      "dest": "type_name [21923,21930]"
    },
    {
      "src": "member_expression [23570,23580]",
      "dest": "member_expression [23570,23580]"
    },
    {
      "src": "): ) [16397,16398]",
      "dest": "): ) [16397,16398]"
    },
    {
      "src": "(: ( [2485,2486]",
      "dest": "(: ( [2485,2486]"
    },
    {
      "src": ".: . [28121,28122]",
      "dest": ".: . [28121,28122]"
    },
    {
      "src": "struct_member [26788,26806]",
      "dest": "struct_member [26788,26806]"
    },
    {
      "src": "call_argument [28174,28179]",
      "dest": "call_argument [28174,28179]"
    },
    {
      "src": "returns: returns [17366,17373]",
      "dest": "returns: returns [17366,17373]"
    },
    {
      "src": "primitive_type [22910,22917]",
      "dest": "primitive_type [22910,22917]"
    },
    {
      "src": "payable: payable [23562,23569]",
      "dest": "payable: payable [23562,23569]"
    },
    {
      "src": "identifier: tokensSymbol [27836,27848]",
      "dest": "identifier: tokensSymbol [27836,27848]"
    },
    {
      "src": "identifier: _initialized [11681,11693]",
      "dest": "identifier: _initialized [11681,11693]"
    },
    {
      "src": "function: function [5015,5023]",
      "dest": "function: function [5015,5023]"
    },
    {
      "src": "): ) [27052,27053]",
      "dest": "): ) [27052,27053]"
    },
    {
      "src": "identifier: mod [21543,21546]",
      "dest": "identifier: mod [21543,21546]"
    },
    {
      "src": "parameter [24027,24042]",
      "dest": "parameter [24027,24042]"
    },
    {
      "src": "identifier: hash [23962,23966]",
      "dest": "identifier: hash [23962,23966]"
    },
    {
      "src": "identifier: dencrease [25588,25597]",
      "dest": "identifier: dencrease [25588,25597]"
    },
    {
      "src": "call_argument [20832,20844]",
      "dest": "call_argument [20832,20844]"
    },
    {
      "src": "uint256: uint256 [22069,22076]",
      "dest": "uint256: uint256 [22069,22076]"
    },
    {
      "src": "(: ( [28213,28214]",
      "dest": "(: ( [28270,28271]"
    },
    {
      "src": "state_mutability [23859,23863]",
      "dest": "state_mutability [23859,23863]"
    },
    {
      "src": "identifier: data [24565,24569]",
      "dest": "identifier: data [24565,24569]"
    },
    {
      "src": "}: } [27158,27159]",
      "dest": "}: } [27158,27159]"
    },
    {
      "src": "(: ( [15769,15770]",
      "dest": "(: ( [15769,15770]"
    },
    {
      "src": "member_expression [29098,29105]",
      "dest": "member_expression [29171,29178]"
    },
    {
      "src": ",: , [6323,6324]",
      "dest": ",: , [6323,6324]"
    },
    {
      "src": "uint256: uint256 [18119,18126]",
      "dest": "uint256: uint256 [18119,18126]"
    },
    {
      "src": "return_statement [4666,4761]",
      "dest": "return_statement [4666,4761]"
    },
    {
      "src": "primitive_type [14414,14419]",
      "dest": "primitive_type [14414,14419]"
    },
    {
      "src": "state_mutability [17361,17365]",
      "dest": "state_mutability [17361,17365]"
    },
    {
      "src": "*: * [16719,16720]",
      "dest": "*: * [16719,16720]"
    },
    {
      "src": "\": \" [23926,23927]",
      "dest": "\": \" [23926,23927]"
    },
    {
      "src": "return_type_definition [6154,6176]",
      "dest": "return_type_definition [6154,6176]"
    },
    {
      "src": "identifier: x [29312,29313]",
      "dest": "identifier: x [29385,29386]"
    },
    {
      "src": "type_name [11595,11599]",
      "dest": "type_name [11595,11599]"
    },
    {
      "src": "primitive_type [15686,15690]",
      "dest": "primitive_type [15686,15690]"
    },
    {
      "src": "visibility [18484,18492]",
      "dest": "visibility [18484,18492]"
    },
    {
      "src": "function: function [25162,25170]",
      "dest": "function: function [25162,25170]"
    },
    {
      "src": "[: [ [28064,28065]",
      "dest": "[: [ [28064,28065]"
    },
    {
      "src": "}: } [20173,20174]",
      "dest": "}: } [20173,20174]"
    },
    {
      "src": "\": \" [3666,3667]",
      "dest": "\": \" [3666,3667]"
    },
    {
      "src": "): ) [27387,27388]",
      "dest": "): ) [27387,27388]"
    },
    {
      "src": "primitive_type [18119,18126]",
      "dest": "primitive_type [18119,18126]"
    },
    {
      "src": "(: ( [29736,29737]",
      "dest": "(: ( [29809,29810]"
    },
    {
      "src": "true [11928,11932]",
      "dest": "true [11928,11932]"
    },
    {
      "src": "parameter [17026,17030]",
      "dest": "parameter [17026,17030]"
    },
    {
      "src": "parameter [7539,7562]",
      "dest": "parameter [7539,7562]"
    },
    {
      "src": "struct_member [26815,26829]",
      "dest": "struct_member [26815,26829]"
    },
    {
      "src": "visibility [6140,6148]",
      "dest": "visibility [6140,6148]"
    },
    {
      "src": "): ) [26483,26484]",
      "dest": "): ) [26483,26484]"
    },
    {
      "src": "identifier: relayerAddress [22004,22018]",
      "dest": "identifier: relayerAddress [22004,22018]"
    },
    {
      "src": "boolean_literal [28979,28983]",
      "dest": "boolean_literal [29052,29056]"
    },
    {
      "src": "array_access [29071,29097]",
      "dest": "array_access [29144,29170]"
    },
    {
      "src": "visibility [10868,10875]",
      "dest": "visibility [10868,10875]"
    },
    {
      "src": "(: ( [11702,11703]",
      "dest": "(: ( [11702,11703]"
    },
    {
      "src": "unary_expression [14322,14336]",
      "dest": "unary_expression [14322,14336]"
    },
    {
      "src": "function_definition [22878,23635]",
      "dest": "function_definition [22878,23635]"
    },
    {
      "src": ".: . [28184,28185]",
      "dest": ".: . [28184,28185]"
    },
    {
      "src": "parameter [25140,25153]",
      "dest": "parameter [25140,25153]"
    },
    {
      "src": "identifier: onlyInitializing [13653,13669]",
      "dest": "identifier: onlyInitializing [13653,13669]"
    },
    {
      "src": "{: { [24637,24638]",
      "dest": "{: { [24637,24638]"
    },
    {
      "src": "return_statement [24892,24910]",
      "dest": "return_statement [24892,24910]"
    },
    {
      "src": "identifier: _initialized [13215,13227]",
      "dest": "identifier: _initialized [13215,13227]"
    },
    {
      "src": "parameter [1290,1294]",
      "dest": "parameter [1290,1294]"
    },
    {
      "src": "type_name [24583,24590]",
      "dest": "type_name [24583,24590]"
    },
    {
      "src": "function: function [3928,3936]",
      "dest": "function: function [3928,3936]"
    },
    {
      "src": "call_expression [5755,5828]",
      "dest": "call_expression [5755,5828]"
    },
    {
      "src": "): ) [4759,4760]",
      "dest": "): ) [4759,4760]"
    },
    {
      "src": "comment: // because it relies on the compiler's built in overflow checks. [15203,15267]",
      "dest": "comment: // because it relies on the compiler's built in overflow checks. [15203,15267]"
    },
    {
      "src": "returns: returns [5715,5722]",
      "dest": "returns: returns [5715,5722]"
    },
    {
      "src": "address: address [25249,25256]",
      "dest": "address: address [25249,25256]"
    },
    {
      "src": "block_statement [6850,7191]",
      "dest": "block_statement [6850,7191]"
    },
    {
      "src": "binary_expression [16667,16673]",
      "dest": "binary_expression [16667,16673]"
    },
    {
      "src": "(: ( [23872,23873]",
      "dest": "(: ( [23872,23873]"
    },
    {
      "src": "parameter [25524,25534]",
      "dest": "parameter [25524,25534]"
    },
    {
      "src": "contract_declaration [25789,29819]",
      "dest": "contract_declaration [25789,29892]"
    },
    {
      "src": "(: ( [18461,18462]",
      "dest": "(: ( [18461,18462]"
    },
    {
      "src": "identifier: value [27754,27759]",
      "dest": "identifier: value [27754,27759]"
    },
    {
      "src": "number_literal: 0 [28404,28405]",
      "dest": "number_literal: 0 [28477,28478]"
    },
    {
      "src": "/: / [16742,16743]",
      "dest": "/: / [16742,16743]"
    },
    {
      "src": "type_name [4604,4611]",
      "dest": "type_name [4604,4611]"
    },
    {
      "src": "): ) [6788,6789]",
      "dest": "): ) [6788,6789]"
    },
    {
      "src": "solidity_version_comparison_operator [8500,8502]",
      "dest": "solidity_version_comparison_operator [8500,8502]"
    },
    {
      "src": "identifier: data [4122,4126]",
      "dest": "identifier: data [4122,4126]"
    },
    {
      "src": "uint256: uint256 [25905,25912]",
      "dest": "uint256: uint256 [25905,25912]"
    },
    {
      "src": "(: ( [7627,7628]",
      "dest": "(: ( [7627,7628]"
    },
    {
      "src": "}: } [26750,26751]",
      "dest": "}: } [26750,26751]"
    },
    {
      "src": "primitive_type [24112,24117]",
      "dest": "primitive_type [24112,24117]"
    },
    {
      "src": "bytes: bytes [3559,3564]",
      "dest": "bytes: bytes [3559,3564]"
    },
    {
      "src": "parameter [20699,20708]",
      "dest": "parameter [20699,20708]"
    },
    {
      "src": "uint256: uint256 [18462,18469]",
      "dest": "uint256: uint256 [18462,18469]"
    },
    {
      "src": ".: . [29041,29042]",
      "dest": ".: . [29114,29115]"
    },
    {
      "src": "emit: emit [12032,12036]",
      "dest": "emit: emit [12032,12036]"
    },
    {
      "src": "interface_declaration [24975,25761]",
      "dest": "interface_declaration [24975,25761]"
    },
    {
      "src": "identifier: require [23059,23066]",
      "dest": "identifier: require [23059,23066]"
    },
    {
      "src": "member_expression [29376,29387]",
      "dest": "member_expression [29449,29460]"
    },
    {
      "src": "identifier: name [27444,27448]",
      "dest": "identifier: name [27444,27448]"
    },
    {
      "src": "identifier: require [27887,27894]",
      "dest": "identifier: require [27887,27894]"
    },
    {
      "src": "identifier: nonce [24020,24025]",
      "dest": "identifier: nonce [24020,24025]"
    },
    {
      "src": "=: = [28720,28721]",
      "dest": "=: = [28793,28794]"
    },
    {
      "src": "=: = [29799,29800]",
      "dest": "=: = [29872,29873]"
    },
    {
      "src": "identifier: _spotter [28533,28541]",
      "dest": "identifier: _spotter [28606,28614]"
    },
    {
      "src": "identifier: functionStaticCall [6028,6046]",
      "dest": "identifier: functionStaticCall [6028,6046]"
    },
    {
      "src": "return: return [23611,23617]",
      "dest": "return: return [23611,23617]"
    },
    {
      "src": "call_argument [28673,28694]",
      "dest": "call_argument [28746,28767]"
    },
    {
      "src": "call_argument [24333,24353]",
      "dest": "call_argument [24333,24353]"
    },
    {
      "src": "returns: returns [25633,25640]",
      "dest": "returns: returns [25633,25640]"
    },
    {
      "src": "member_expression [27597,27623]",
      "dest": "member_expression [27597,27623]"
    },
    {
      "src": "identifier: signer [24396,24402]",
      "dest": "identifier: signer [24396,24402]"
    },
    {
      "src": "(: ( [24778,24779]",
      "dest": "(: ( [24778,24779]"
    },
    {
      "src": "call_argument [5420,5427]",
      "dest": "call_argument [5420,5427]"
    },
    {
      "src": "comment: /**      * @dev Returns the multiplication of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [16181,16318]",
      "dest": "comment: /**      * @dev Returns the multiplication of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [16181,16318]"
    },
    {
      "src": "=: = [27710,27711]",
      "dest": "=: = [27710,27711]"
    },
    {
      "src": "(: ( [7093,7094]",
      "dest": "(: ( [7093,7094]"
    },
    {
      "src": "return_type_definition [25348,25361]",
      "dest": "return_type_definition [25348,25361]"
    },
    {
      "src": "(: ( [23251,23252]",
      "dest": "(: ( [23251,23252]"
    },
    {
      "src": "): ) [16768,16769]",
      "dest": "): ) [16768,16769]"
    },
    {
      "src": "type_name [5310,5315]",
      "dest": "type_name [5310,5315]"
    },
    {
      "src": "identifier: x [29163,29164]",
      "dest": "identifier: x [29236,29237]"
    },
    {
      "src": "(: ( [5211,5212]",
      "dest": "(: ( [5211,5212]"
    },
    {
      "src": "array_access [29136,29171]",
      "dest": "array_access [29209,29244]"
    },
    {
      "src": "function: function [7482,7490]",
      "dest": "function: function [7482,7490]"
    },
    {
      "src": "}: } [21765,21766]",
      "dest": "}: } [21765,21766]"
    },
    {
      "src": ",: , [23354,23355]",
      "dest": ",: , [23354,23355]"
    },
    {
      "src": "identifier: data [5782,5786]",
      "dest": "identifier: data [5782,5786]"
    },
    {
      "src": "}: } [21757,21758]",
      "dest": "}: } [21757,21758]"
    },
    {
      "src": ",: , [5780,5781]",
      "dest": ",: , [5780,5781]"
    },
    {
      "src": "struct_expression [2651,2680]",
      "dest": "struct_expression [2651,2680]"
    },
    {
      "src": "primitive_type [19984,19991]",
      "dest": "primitive_type [19984,19991]"
    },
    {
      "src": "primitive_type [4577,4582]",
      "dest": "primitive_type [4577,4582]"
    },
    {
      "src": "primitive_type [5682,5687]",
      "dest": "primitive_type [5682,5687]"
    },
    {
      "src": "identifier: IERC20 [29033,29039]",
      "dest": "identifier: IERC20 [29106,29112]"
    },
    {
      "src": "string_literal [13239,13287]",
      "dest": "string_literal [13239,13287]"
    },
    {
      "src": "): ) [18171,18172]",
      "dest": "): ) [18171,18172]"
    },
    {
      "src": "): ) [22076,22077]",
      "dest": "): ) [22076,22077]"
    },
    {
      "src": "event: event [26181,26186]",
      "dest": "event: event [26181,26186]"
    },
    {
      "src": "if_statement [7938,8317]",
      "dest": "if_statement [7938,8317]"
    },
    {
      "src": "public: public [25881,25887]",
      "dest": "public: public [25881,25887]"
    },
    {
      "src": "): ) [13426,13427]",
      "dest": "): ) [13426,13427]"
    },
    {
      "src": "}: } [11942,11943]",
      "dest": "}: } [11942,11943]"
    },
    {
      "src": "tuple_expression [16145,16158]",
      "dest": "tuple_expression [16145,16158]"
    },
    {
      "src": "parameter [17032,17039]",
      "dest": "parameter [17032,17039]"
    },
    {
      "src": "array_access [28788,28798]",
      "dest": "array_access [28861,28871]"
    },
    {
      "src": "parameter [19441,19448]",
      "dest": "parameter [19441,19448]"
    },
    {
      "src": "public: public [24124,24130]",
      "dest": "public: public [24124,24130]"
    },
    {
      "src": "(: ( [26604,26605]",
      "dest": "(: ( [26604,26605]"
    },
    {
      "src": "bool: bool [6188,6192]",
      "dest": "bool: bool [6188,6192]"
    },
    {
      "src": "binary_expression [11681,11697]",
      "dest": "binary_expression [11681,11697]"
    },
    {
      "src": "bytes: bytes [24540,24545]",
      "dest": "bytes: bytes [24540,24545]"
    },
    {
      "src": "boolean_literal [16115,16120]",
      "dest": "boolean_literal [16115,16120]"
    },
    {
      "src": "(: ( [6812,6813]",
      "dest": "(: ( [6812,6813]"
    },
    {
      "src": "primitive_type [21594,21600]",
      "dest": "primitive_type [21594,21600]"
    },
    {
      "src": ",: , [5680,5681]",
      "dest": ",: , [5680,5681]"
    },
    {
      "src": "(: ( [17329,17330]",
      "dest": "(: ( [17329,17330]"
    },
    {
      "src": "type_name [23342,23346]",
      "dest": "type_name [23342,23346]"
    },
    {
      "src": "visibility [26638,26644]",
      "dest": "visibility [26638,26644]"
    },
    {
      "src": "private: private [7853,7860]",
      "dest": "private: private [7853,7860]"
    },
    {
      "src": "return_type_definition [19432,19449]",
      "dest": "return_type_definition [19432,19449]"
    },
    {
      "src": "external: external [25550,25558]",
      "dest": "external: external [25550,25558]"
    },
    {
      "src": ",: , [17479,17480]",
      "dest": ",: , [17479,17480]"
    },
    {
      "src": "bool: bool [7517,7521]",
      "dest": "bool: bool [7517,7521]"
    },
    {
      "src": "primitive_type [19965,19972]",
      "dest": "primitive_type [19965,19972]"
    },
    {
      "src": "identifier: user [23735,23739]",
      "dest": "identifier: user [23735,23739]"
    },
    {
      "src": "call_argument [23147,23151]",
      "dest": "call_argument [23147,23151]"
    },
    {
      "src": "call_argument [3666,3698]",
      "dest": "call_argument [3666,3698]"
    },
    {
      "src": "block_statement [16409,16810]",
      "dest": "block_statement [16409,16810]"
    },
    {
      "src": "type_name [21594,21600]",
      "dest": "type_name [21594,21600]"
    },
    {
      "src": "primitive_type [25082,25088]",
      "dest": "primitive_type [25082,25088]"
    },
    {
      "src": "return_type_definition [4052,4074]",
      "dest": "return_type_definition [4052,4074]"
    },
    {
      "src": "identifier: userAddress [23213,23224]",
      "dest": "identifier: userAddress [23213,23224]"
    },
    {
      "src": "call_argument [24213,24218]",
      "dest": "call_argument [24213,24218]"
    },
    {
      "src": "function_definition [19943,20174]",
      "dest": "function_definition [19943,20174]"
    },
    {
      "src": "type_cast_expression [27638,27651]",
      "dest": "type_cast_expression [27638,27651]"
    },
    {
      "src": "state_variable_declaration [25905,25943]",
      "dest": "state_variable_declaration [25905,25943]"
    },
    {
      "src": "identifier: require [13189,13196]",
      "dest": "identifier: require [13189,13196]"
    },
    {
      "src": "(: ( [7082,7083]",
      "dest": "(: ( [7082,7083]"
    },
    {
      "src": "identifier: x [29059,29060]",
      "dest": "identifier: x [29132,29133]"
    },
    {
      "src": "return_type_definition [15677,15700]",
      "dest": "return_type_definition [15677,15700]"
    },
    {
      "src": "identifier: balance [5226,5233]",
      "dest": "identifier: balance [5226,5233]"
    },
    {
      "src": "visibility [25550,25558]",
      "dest": "visibility [25550,25558]"
    },
    {
      "src": "public: public [25990,25996]",
      "dest": "public: public [25990,25996]"
    },
    {
      "src": "(: ( [29683,29684]",
      "dest": "(: ( [29756,29757]"
    },
    {
      "src": "member_expression [14501,14516]",
      "dest": "member_expression [14501,14516]"
    },
    {
      "src": "contract_declaration [10710,14955]",
      "dest": "contract_declaration [10710,14955]"
    },
    {
      "src": "view: view [6799,6803]",
      "dest": "view: view [6799,6803]"
    },
    {
      "src": "parameter [18473,18482]",
      "dest": "parameter [18473,18482]"
    },
    {
      "src": "type_name [22069,22076]",
      "dest": "type_name [22069,22076]"
    },
    {
      "src": "call_argument [4695,4701]",
      "dest": "call_argument [4695,4701]"
    },
    {
      "src": "type_name [25728,25732]",
      "dest": "type_name [25728,25732]"
    },
    {
      "src": "expression_statement [27024,27054]",
      "dest": "expression_statement [27024,27054]"
    },
    {
      "src": "(: ( [27050,27051]",
      "dest": "(: ( [27050,27051]"
    },
    {
      "src": "type_cast_expression [28065,28075]",
      "dest": "type_cast_expression [28065,28075]"
    },
    {
      "src": "identifier: require [5204,5211]",
      "dest": "identifier: require [5204,5211]"
    },
    {
      "src": "array_access [23228,23247]",
      "dest": "array_access [23228,23247]"
    },
    {
      "src": "parameter [3596,3608]",
      "dest": "parameter [3596,3608]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [4157,4508]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but also transferring `value` wei to `target`.      *      * Requirements:      *      * - the calling contract must have an ETH balance of at least `value`.      * - the called Solidity function must be `payable`.      *      * _Available since v3.1._      */ [4157,4508]"
    },
    {
      "src": "}: } [8255,8256]",
      "dest": "}: } [8255,8256]"
    },
    {
      "src": "call_argument [5412,5418]",
      "dest": "call_argument [5412,5418]"
    },
    {
      "src": "identifier: sigS [23147,23151]",
      "dest": "identifier: sigS [23147,23151]"
    },
    {
      "src": "type_name [3983,3988]",
      "dest": "type_name [3983,3988]"
    },
    {
      "src": "call_argument [29059,29066]",
      "dest": "call_argument [29132,29139]"
    },
    {
      "src": "internal: internal [5162,5170]",
      "dest": "internal: internal [5162,5170]"
    },
    {
      "src": "identifier: div [18843,18846]",
      "dest": "identifier: div [18843,18846]"
    },
    {
      "src": "}: } [28316,28317]",
      "dest": "}: } [28371,28372]"
    },
    {
      "src": "identifier: deposit [27174,27181]",
      "dest": "identifier: deposit [27174,27181]"
    },
    {
      "src": "identifier: errorMessage [8293,8305]",
      "dest": "identifier: errorMessage [8293,8305]"
    },
    {
      "src": "(: ( [17125,17126]",
      "dest": "(: ( [17125,17126]"
    },
    {
      "src": "if: if [11963,11965]",
      "dest": "if: if [11963,11965]"
    },
    {
      "src": "memory: memory [25089,25095]",
      "dest": "memory: memory [25089,25095]"
    },
    {
      "src": "primitive_type [26631,26635]",
      "dest": "primitive_type [26631,26635]"
    },
    {
      "src": "assignment_expression [11852,11868]",
      "dest": "assignment_expression [11852,11868]"
    },
    {
      "src": "}: } [1549,1550]",
      "dest": "}: } [1549,1550]"
    },
    {
      "src": "call_argument [5441,5453]",
      "dest": "call_argument [5441,5453]"
    },
    {
      "src": "call_argument [28648,28671]",
      "dest": "call_argument [28721,28744]"
    },
    {
      "src": "function_body [16062,16175]",
      "dest": "function_body [16062,16175]"
    },
    {
      "src": "identifier: _revert [7792,7799]",
      "dest": "identifier: _revert [7792,7799]"
    },
    {
      "src": "parameter [6080,6097]",
      "dest": "parameter [6080,6097]"
    },
    {
      "src": "address: address [23383,23390]",
      "dest": "address: address [23383,23390]"
    },
    {
      "src": "identifier: value [5349,5354]",
      "dest": "identifier: value [5349,5354]"
    },
    {
      "src": "primitive_type [7517,7521]",
      "dest": "primitive_type [7517,7521]"
    },
    {
      "src": "identifier: target [4114,4120]",
      "dest": "identifier: target [4114,4120]"
    },
    {
      "src": "bytes: bytes [6080,6085]",
      "dest": "bytes: bytes [6080,6085]"
    },
    {
      "src": "return_statement [17467,17488]",
      "dest": "return_statement [17467,17488]"
    },
    {
      "src": "identifier: verifyCallResultFromTarget [6269,6295]",
      "dest": "identifier: verifyCallResultFromTarget [6269,6295]"
    },
    {
      "src": "call_argument [29351,29358]",
      "dest": "call_argument [29424,29431]"
    },
    {
      "src": "(: ( [23996,23997]",
      "dest": "(: ( [23996,23997]"
    },
    {
      "src": "identifier: multipleToken [28902,28915]",
      "dest": "identifier: multipleToken [28975,28988]"
    },
    {
      "src": "{: { [25840,25841]",
      "dest": "{: { [25840,25841]"
    },
    {
      "src": "type_name [26200,26207]",
      "dest": "type_name [26200,26207]"
    },
    {
      "src": "parameter [16981,16990]",
      "dest": "parameter [16981,16990]"
    },
    {
      "src": "==: == [11765,11767]",
      "dest": "==: == [11765,11767]"
    },
    {
      "src": "primitive_type [15641,15648]",
      "dest": "primitive_type [15641,15648]"
    },
    {
      "src": "identifier: owner [28286,28291]",
      "dest": "identifier: owner [28333,28338]"
    },
    {
      "src": ",: , [6714,6715]",
      "dest": ",: , [6714,6715]"
    },
    {
      "src": "(: ( [17474,17475]",
      "dest": "(: ( [17474,17475]"
    },
    {
      "src": "binary_expression [24387,24402]",
      "dest": "binary_expression [24387,24402]"
    },
    {
      "src": "\": \" [23959,23960]",
      "dest": "\": \" [23959,23960]"
    },
    {
      "src": "return_type_definition [16038,16061]",
      "dest": "return_type_definition [16038,16061]"
    },
    {
      "src": "identifier: errorMessage [5441,5453]",
      "dest": "identifier: errorMessage [5441,5453]"
    },
    {
      "src": "identifier: owner [27024,27029]",
      "dest": "identifier: owner [27024,27029]"
    },
    {
      "src": "{: { [20088,20089]",
      "dest": "{: { [20088,20089]"
    },
    {
      "src": "call_expression [27597,27661]",
      "dest": "call_expression [27597,27661]"
    },
    {
      "src": "call_expression [28160,28172]",
      "dest": "call_expression [28160,28172]"
    },
    {
      "src": "primitive_type [25667,25674]",
      "dest": "primitive_type [25667,25674]"
    },
    {
      "src": "variable_declaration [15735,15744]",
      "dest": "variable_declaration [15735,15744]"
    },
    {
      "src": "primitive_type [25220,25224]",
      "dest": "primitive_type [25220,25224]"
    },
    {
      "src": "identifier: a [18127,18128]",
      "dest": "identifier: a [18127,18128]"
    },
    {
      "src": "binary_expression [17481,17486]",
      "dest": "binary_expression [17481,17486]"
    },
    {
      "src": ",: , [29067,29068]",
      "dest": ",: , [29140,29141]"
    },
    {
      "src": ".: . [28930,28931]",
      "dest": ".: . [29003,29004]"
    },
    {
      "src": "identifier: returndata [7686,7696]",
      "dest": "identifier: returndata [7686,7696]"
    },
    {
      "src": "identifier: Transactions [26765,26777]",
      "dest": "identifier: Transactions [26765,26777]"
    },
    {
      "src": "type_name [2513,2520]",
      "dest": "type_name [2513,2520]"
    },
    {
      "src": "memory: memory [6819,6825]",
      "dest": "memory: memory [6819,6825]"
    },
    {
      "src": "using_directive [21904,21931]",
      "dest": "using_directive [21904,21931]"
    },
    {
      "src": "address: address [5055,5062]",
      "dest": "address: address [5055,5062]"
    },
    {
      "src": "return_statement [23611,23629]",
      "dest": "return_statement [23611,23629]"
    },
    {
      "src": "identifier: a [15774,15775]",
      "dest": "identifier: a [15774,15775]"
    },
    {
      "src": "identifier: nonces [23087,23093]",
      "dest": "identifier: nonces [23087,23093]"
    },
    {
      "src": "contract_declaration [21867,24928]",
      "dest": "contract_declaration [21867,24928]"
    },
    {
      "src": "struct_field_assignment [5349,5361]",
      "dest": "struct_field_assignment [5349,5361]"
    },
    {
      "src": "binary_expression [28725,28743]",
      "dest": "binary_expression [28798,28816]"
    },
    {
      "src": "call_argument [24351,24352]",
      "dest": "call_argument [24351,24352]"
    },
    {
      "src": "identifier: x [29273,29274]",
      "dest": "identifier: x [29346,29347]"
    },
    {
      "src": "type_name [10862,10867]",
      "dest": "type_name [10862,10867]"
    },
    {
      "src": "identifier: _ [11952,11953]",
      "dest": "identifier: _ [11952,11953]"
    },
    {
      "src": "primitive_type [25464,25471]",
      "dest": "primitive_type [25464,25471]"
    },
    {
      "src": "(: ( [25120,25121]",
      "dest": "(: ( [25120,25121]"
    },
    {
      "src": "assembly: assembly [8114,8122]",
      "dest": "assembly: assembly [8114,8122]"
    },
    {
      "src": "function_definition [19383,19479]",
      "dest": "function_definition [19383,19479]"
    },
    {
      "src": "function_definition [15625,15841]",
      "dest": "function_definition [15625,15841]"
    },
    {
      "src": ".: . [24500,24501]",
      "dest": ".: . [24500,24501]"
    },
    {
      "src": "=: = [27087,27088]",
      "dest": "=: = [27087,27088]"
    },
    {
      "src": "binary_expression [28214,28253]",
      "dest": "binary_expression [28214,28253]"
    },
    {
      "src": "identifier: _initialized [10876,10888]",
      "dest": "identifier: _initialized [10876,10888]"
    },
    {
      "src": "member_expression [29405,29413]",
      "dest": "member_expression [29478,29486]"
    },
    {
      "src": "\": \" [28372,28373]",
      "dest": "\": \" [28431,28432]"
    },
    {
      "src": "primitive_type [6080,6085]",
      "dest": "primitive_type [6080,6085]"
    },
    {
      "src": "(: ( [16666,16667]",
      "dest": "(: ( [16666,16667]"
    },
    {
      "src": "call_argument [20825,20830]",
      "dest": "call_argument [20825,20830]"
    },
    {
      "src": "function_body [28473,28556]",
      "dest": "function_body [28546,28629]"
    },
    {
      "src": ".: . [14420,14421]",
      "dest": ".: . [14420,14421]"
    },
    {
      "src": "}: } [19478,19479]",
      "dest": "}: } [19478,19479]"
    },
    {
      "src": "(: ( [28647,28648]",
      "dest": "(: ( [28720,28721]"
    },
    {
      "src": "yul_identifier [22204,22206]",
      "dest": "yul_identifier [22204,22206]"
    },
    {
      "src": "variable_declaration_statement [23341,23452]",
      "dest": "variable_declaration_statement [23341,23452]"
    },
    {
      "src": "/: / [18920,18921]",
      "dest": "/: / [18920,18921]"
    },
    {
      "src": "(: ( [27385,27386]",
      "dest": "(: ( [27385,27386]"
    },
    {
      "src": "\": \" [14338,14339]",
      "dest": "\": \" [14338,14339]"
    },
    {
      "src": "tuple_expression [17474,17487]",
      "dest": "tuple_expression [17474,17487]"
    },
    {
      "src": "variable_declaration_statement [28268,28322]",
      "dest": "variable_declaration_statement [28315,28377]"
    },
    {
      "src": "identifier: verifyCallResult [7491,7507]",
      "dest": "identifier: verifyCallResult [7491,7507]"
    },
    {
      "src": "function_definition [18449,18545]",
      "dest": "function_definition [18449,18545]"
    },
    {
      "src": "visibility [25956,25962]",
      "dest": "visibility [25956,25962]"
    },
    {
      "src": "parameter [4061,4073]",
      "dest": "parameter [4061,4073]"
    },
    {
      "src": "identifier: errorMessage [4131,4143]",
      "dest": "identifier: errorMessage [4131,4143]"
    },
    {
      "src": "address: address [26788,26795]",
      "dest": "address: address [26788,26795]"
    },
    {
      "src": "address: address [28826,28833]",
      "dest": "address: address [28899,28906]"
    },
    {
      "src": "returns: returns [16375,16382]",
      "dest": "returns: returns [16375,16382]"
    },
    {
      "src": "): ) [4622,4623]",
      "dest": "): ) [4622,4623]"
    },
    {
      "src": "identifier: a [18855,18856]",
      "dest": "identifier: a [18855,18856]"
    },
    {
      "src": "function_definition [24998,25041]",
      "dest": "function_definition [24998,25041]"
    },
    {
      "src": "primitive_type [25260,25264]",
      "dest": "primitive_type [25260,25264]"
    },
    {
      "src": "function_definition [29450,29546]",
      "dest": "function_definition [29523,29619]"
    },
    {
      "src": "call_expression [23228,23254]",
      "dest": "call_expression [23228,23254]"
    },
    {
      "src": "type_name [5106,5113]",
      "dest": "type_name [5106,5113]"
    },
    {
      "src": "variable_declaration_tuple [28268,28283]",
      "dest": "variable_declaration_tuple [28315,28330]"
    },
    {
      "src": "function_body [20068,20174]",
      "dest": "function_body [20068,20174]"
    },
    {
      "src": "parameter [19396,19405]",
      "dest": "parameter [19396,19405]"
    },
    {
      "src": "if_statement [11963,12062]",
      "dest": "if_statement [11963,12062]"
    },
    {
      "src": "parameter [24468,24482]",
      "dest": "parameter [24468,24482]"
    },
    {
      "src": "type_name [26550,26574]",
      "dest": "type_name [26550,26574]"
    },
    {
      "src": "string_literal [4716,4759]",
      "dest": "string_literal [4716,4759]"
    },
    {
      "src": "event_definition [21937,22045]",
      "dest": "event_definition [21937,22045]"
    },
    {
      "src": "identifier: approve [25241,25248]",
      "dest": "identifier: approve [25241,25248]"
    },
    {
      "src": "comment: /**      * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling      * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.      *      * _Available since v4.8._      */ [6351,6628]",
      "dest": "comment: /**      * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling      * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.      *      * _Available since v4.8._      */ [6351,6628]"
    },
    {
      "src": "identifier: sigR [23141,23145]",
      "dest": "identifier: sigR [23141,23145]"
    },
    {
      "src": "identifier: sub [18115,18118]",
      "dest": "identifier: sub [18115,18118]"
    },
    {
      "src": "tuple_expression [15784,15794]",
      "dest": "tuple_expression [15784,15794]"
    },
    {
      "src": "address: address [25667,25674]",
      "dest": "address: address [25667,25674]"
    },
    {
      "src": "string: string [26881,26887]",
      "dest": "string: string [26881,26887]"
    },
    {
      "src": "identifier: transferOwnership [29666,29683]",
      "dest": "identifier: transferOwnership [29739,29756]"
    },
    {
      "src": "(: ( [13689,13690]",
      "dest": "(: ( [13689,13690]"
    },
    {
      "src": "): ) [2683,2684]",
      "dest": "): ) [2683,2684]"
    },
    {
      "src": "uint256: uint256 [2513,2520]",
      "dest": "uint256: uint256 [2513,2520]"
    },
    {
      "src": "identifier: hash [23844,23848]",
      "dest": "identifier: hash [23844,23848]"
    },
    {
      "src": "pragma_directive [15091,15114]",
      "dest": "pragma_directive [15091,15114]"
    },
    {
      "src": "identifier: data [3657,3661]",
      "dest": "identifier: data [3657,3661]"
    },
    {
      "src": "block_statement [7965,8266]",
      "dest": "block_statement [7965,8266]"
    },
    {
      "src": "): ) [28171,28172]",
      "dest": "): ) [28171,28172]"
    },
    {
      "src": "identifier: _initializing [11912,11925]",
      "dest": "identifier: _initializing [11912,11925]"
    },
    {
      "src": "\": \" [7103,7104]",
      "dest": "\": \" [7103,7104]"
    },
    {
      "src": "function: function [20658,20666]",
      "dest": "function: function [20658,20666]"
    },
    {
      "src": "identifier: b [16749,16750]",
      "dest": "identifier: b [16749,16750]"
    },
    {
      "src": ",: , [26407,26408]",
      "dest": ",: , [26407,26408]"
    },
    {
      "src": "internal: internal [2529,2537]",
      "dest": "internal: internal [2529,2537]"
    },
    {
      "src": "identifier: abi [23402,23405]",
      "dest": "identifier: abi [23402,23405]"
    },
    {
      "src": "uint256: uint256 [16992,16999]",
      "dest": "uint256: uint256 [16992,16999]"
    },
    {
      "src": "call_argument [20110,20116]",
      "dest": "call_argument [20110,20116]"
    },
    {
      "src": "return: return [16752,16758]",
      "dest": "return: return [16752,16758]"
    },
    {
      "src": "expression_statement [7727,7761]",
      "dest": "expression_statement [7727,7761]"
    },
    {
      "src": "call_argument [27040,27052]",
      "dest": "call_argument [27040,27052]"
    },
    {
      "src": "}: } [3705,3706]",
      "dest": "}: } [3705,3706]"
    },
    {
      "src": "event_paramater [26409,26419]",
      "dest": "event_paramater [26409,26419]"
    },
    {
      "src": "function: function [22878,22886]",
      "dest": "function: function [22878,22886]"
    },
    {
      "src": "): ) [17001,17002]",
      "dest": "): ) [17001,17002]"
    },
    {
      "src": "function_definition [25162,25226]",
      "dest": "function_definition [25162,25226]"
    },
    {
      "src": "primitive_type [25450,25457]",
      "dest": "primitive_type [25450,25457]"
    },
    {
      "src": "): ) [11769,11770]",
      "dest": "): ) [11769,11770]"
    },
    {
      "src": "uint: uint [26631,26635]",
      "dest": "uint: uint [26631,26635]"
    },
    {
      "src": "identifier: userAddress [23549,23560]",
      "dest": "identifier: userAddress [23549,23560]"
    },
    {
      "src": "string_literal [29758,29781]",
      "dest": "string_literal [29831,29854]"
    },
    {
      "src": "parameter [21575,21584]",
      "dest": "parameter [21575,21584]"
    },
    {
      "src": ".: . [1532,1533]",
      "dest": ".: . [1532,1533]"
    },
    {
      "src": "(: ( [1289,1290]",
      "dest": "(: ( [1289,1290]"
    },
    {
      "src": "member_expression [28929,28936]",
      "dest": "member_expression [29002,29009]"
    },
    {
      "src": "visibility [23850,23858]",
      "dest": "visibility [23850,23858]"
    },
    {
      "src": "assignment_expression [28388,28405]",
      "dest": "assignment_expression [28461,28478]"
    },
    {
      "src": "primitive_type [6107,6113]",
      "dest": "primitive_type [6107,6113]"
    },
    {
      "src": "type_name [22020,22025]",
      "dest": "type_name [22020,22025]"
    },
    {
      "src": "): ) [23450,23451]",
      "dest": "): ) [23450,23451]"
    },
    {
      "src": "(: ( [20773,20774]",
      "dest": "(: ( [20773,20774]"
    },
    {
      "src": "array_access [29071,29106]",
      "dest": "array_access [29144,29179]"
    },
    {
      "src": "\": \" [4716,4717]",
      "dest": "\": \" [4716,4717]"
    },
    {
      "src": "identifier: to [25606,25608]",
      "dest": "identifier: to [25606,25608]"
    },
    {
      "src": ",: , [3973,3974]",
      "dest": ",: , [3973,3974]"
    },
    {
      "src": "variable_declaration [5310,5333]",
      "dest": "variable_declaration [5310,5333]"
    },
    {
      "src": ",: , [25681,25682]",
      "dest": ",: , [25681,25682]"
    },
    {
      "src": "array_access [23206,23225]",
      "dest": "array_access [23206,23225]"
    },
    {
      "src": "type_name [26376,26383]",
      "dest": "type_name [26376,26383]"
    },
    {
      "src": "(: ( [17025,17026]",
      "dest": "(: ( [17025,17026]"
    },
    {
      "src": "expression_statement [27129,27153]",
      "dest": "expression_statement [27129,27153]"
    },
    {
      "src": "parameter [17381,17388]",
      "dest": "parameter [17381,17388]"
    },
    {
      "src": "number_literal: 0 [20829,20830]",
      "dest": "number_literal: 0 [20829,20830]"
    },
    {
      "src": ".: . [28917,28918]",
      "dest": ".: . [28990,28991]"
    },
    {
      "src": "type_name [25464,25471]",
      "dest": "type_name [25464,25471]"
    },
    {
      "src": "): ) [23880,23881]",
      "dest": "): ) [23880,23881]"
    },
    {
      "src": "comment: /**      * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the      * revert reason or using the provided one.      *      * _Available since v4.3._      */ [7267,7477]",
      "dest": "comment: /**      * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the      * revert reason or using the provided one.      *      * _Available since v4.3._      */ [7267,7477]"
    },
    {
      "src": "if: if [16736,16738]",
      "dest": "if: if [16736,16738]"
    },
    {
      "src": "}: } [25760,25761]",
      "dest": "}: } [25760,25761]"
    },
    {
      "src": "returns: returns [18498,18505]",
      "dest": "returns: returns [18498,18505]"
    },
    {
      "src": "type_name [24098,24105]",
      "dest": "type_name [24098,24105]"
    },
    {
      "src": "primitive_type [25598,25605]",
      "dest": "primitive_type [25598,25605]"
    },
    {
      "src": "assignment_expression [27063,27106]",
      "dest": "assignment_expression [27063,27106]"
    },
    {
      "src": "}: } [28415,28416]",
      "dest": "}: } [28447,28448]"
    },
    {
      "src": "identifier: from [25317,25321]",
      "dest": "identifier: from [25317,25321]"
    },
    {
      "src": "{: { [22190,22191]",
      "dest": "{: { [22190,22191]"
    },
    {
      "src": ",: , [4707,4708]",
      "dest": ",: , [4707,4708]"
    },
    {
      "src": "identifier: feesCollected [27733,27746]",
      "dest": "identifier: feesCollected [27733,27746]"
    },
    {
      "src": "identifier: feesBuffer [27980,27990]",
      "dest": "identifier: feesBuffer [27980,27990]"
    },
    {
      "src": "return_type_definition [1281,1295]",
      "dest": "return_type_definition [1281,1295]"
    },
    {
      "src": "identifier: target [6686,6692]",
      "dest": "identifier: target [6686,6692]"
    },
    {
      "src": ".: . [23912,23913]",
      "dest": ".: . [23912,23913]"
    },
    {
      "src": "identifier: nonce [24213,24218]",
      "dest": "identifier: nonce [24213,24218]"
    },
    {
      "src": "type_name [16992,16999]",
      "dest": "type_name [16992,16999]"
    },
    {
      "src": "identifier: b [17000,17001]",
      "dest": "identifier: b [17000,17001]"
    },
    {
      "src": "primitive_type [23695,23702]",
      "dest": "primitive_type [23695,23702]"
    },
    {
      "src": ":: : [5354,5355]",
      "dest": ":: : [5354,5355]"
    },
    {
      "src": "function: function [25105,25113]",
      "dest": "function: function [25105,25113]"
    },
    {
      "src": ",: , [25609,25610]",
      "dest": ",: , [25609,25610]"
    },
    {
      "src": "member_expression [29163,29170]",
      "dest": "member_expression [29236,29243]"
    },
    {
      "src": "event_paramater [26200,26217]",
      "dest": "event_paramater [26200,26217]"
    },
    {
      "src": "add: add [24785,24788]",
      "dest": "add: add [24785,24788]"
    },
    {
      "src": "primitive_type [5129,5135]",
      "dest": "primitive_type [5129,5135]"
    },
    {
      "src": "]: ] [29170,29171]",
      "dest": "]: ] [29243,29244]"
    },
    {
      "src": "uint256: uint256 [18130,18137]",
      "dest": "uint256: uint256 [18130,18137]"
    },
    {
      "src": "string: string [27464,27470]",
      "dest": "string: string [27464,27470]"
    },
    {
      "src": "parameter [22931,22961]",
      "dest": "parameter [22931,22961]"
    },
    {
      "src": "(: ( [7507,7508]",
      "dest": "(: ( [7507,7508]"
    },
    {
      "src": "): ) [23253,23254]",
      "dest": "): ) [23253,23254]"
    },
    {
      "src": "function_definition [28428,28556]",
      "dest": "function_definition [28501,28629]"
    },
    {
      "src": "identifier: i [28718,28719]",
      "dest": "identifier: i [28791,28792]"
    },
    {
      "src": "member_expression [28286,28296]",
      "dest": "member_expression [28333,28343]"
    },
    {
      "src": "=: = [16715,16716]",
      "dest": "=: = [16715,16716]"
    },
    {
      "src": "): ) [5827,5828]",
      "dest": "): ) [5827,5828]"
    },
    {
      "src": "=>: => [26612,26614]",
      "dest": "=>: => [26612,26614]"
    },
    {
      "src": "\": \" [23479,23480]",
      "dest": "\": \" [23479,23480]"
    },
    {
      "src": ".: . [29048,29049]",
      "dest": ".: . [29121,29122]"
    },
    {
      "src": "binary_expression [16740,16750]",
      "dest": "binary_expression [16740,16750]"
    },
    {
      "src": "type_name [18462,18469]",
      "dest": "type_name [18462,18469]"
    },
    {
      "src": "binary_expression [29737,29756]",
      "dest": "binary_expression [29810,29829]"
    },
    {
      "src": "primitive_type [29467,29474]",
      "dest": "primitive_type [29540,29547]"
    },
    {
      "src": "type_name [26233,26240]",
      "dest": "type_name [26233,26240]"
    },
    {
      "src": "type_name [6107,6113]",
      "dest": "type_name [6107,6113]"
    },
    {
      "src": "contract_body [25840,29819]",
      "dest": "contract_body [25840,29892]"
    },
    {
      "src": "string: string [5129,5135]",
      "dest": "string: string [5129,5135]"
    },
    {
      "src": "call_argument [7219,7229]",
      "dest": "call_argument [7219,7229]"
    },
    {
      "src": "identifier: errorMessage [20118,20130]",
      "dest": "identifier: errorMessage [20118,20130]"
    },
    {
      "src": "payable_conversion_expression [27032,27053]",
      "dest": "payable_conversion_expression [27032,27053]"
    },
    {
      "src": "assignment_expression [11912,11932]",
      "dest": "assignment_expression [11912,11932]"
    },
    {
      "src": "function: function [25579,25587]",
      "dest": "function: function [25579,25587]"
    },
    {
      "src": ",: , [26322,26323]",
      "dest": ",: , [26322,26323]"
    },
    {
      "src": "call_argument [14501,14516]",
      "dest": "call_argument [14501,14516]"
    },
    {
      "src": "{: { [7665,7666]",
      "dest": "{: { [7665,7666]"
    },
    {
      "src": "identifier: onlyOwner [29490,29499]",
      "dest": "identifier: onlyOwner [29563,29572]"
    },
    {
      "src": "event_paramater [26308,26322]",
      "dest": "event_paramater [26308,26322]"
    },
    {
      "src": "primitive_type [17763,17770]",
      "dest": "primitive_type [17763,17770]"
    },
    {
      "src": "call_expression [2651,2684]",
      "dest": "call_expression [2651,2684]"
    },
    {
      "src": "identifier: Initializable [25827,25840]",
      "dest": "identifier: Initializable [25827,25840]"
    },
    {
      "src": "identifier: b [16358,16359]",
      "dest": "identifier: b [16358,16359]"
    },
    {
      "src": "primitive_type [28856,28860]",
      "dest": "primitive_type [28929,28933]"
    },
    {
      "src": "type_name [6724,6729]",
      "dest": "type_name [6724,6729]"
    },
    {
      "src": "string [29758,29781]",
      "dest": "string [29831,29854]"
    },
    {
      "src": "return_statement [18526,18539]",
      "dest": "return_statement [18526,18539]"
    },
    {
      "src": "binary_expression [7942,7963]",
      "dest": "binary_expression [7942,7963]"
    },
    {
      "src": "type_name [27199,27206]",
      "dest": "type_name [27199,27206]"
    },
    {
      "src": "function_body [29499,29546]",
      "dest": "function_body [29572,29619]"
    },
    {
      "src": "): ) [28888,28889]",
      "dest": "): ) [28961,28962]"
    },
    {
      "src": "}: } [29818,29819]",
      "dest": "}: } [29891,29892]"
    },
    {
      "src": "call_argument [28160,28172]",
      "dest": "call_argument [28160,28172]"
    },
    {
      "src": "binary_expression [14394,14420]",
      "dest": "binary_expression [14394,14420]"
    },
    {
      "src": "bool: bool [16384,16388]",
      "dest": "bool: bool [16384,16388]"
    },
    {
      "src": "parameter [20059,20066]",
      "dest": "parameter [20059,20066]"
    },
    {
      "src": "<: < [14407,14408]",
      "dest": "<: < [14407,14408]"
    },
    {
      "src": "type_name [3559,3564]",
      "dest": "type_name [3559,3564]"
    },
    {
      "src": "identifier: token [29327,29332]",
      "dest": "identifier: token [29400,29405]"
    },
    {
      "src": "(: ( [28342,28343]",
      "dest": "(: ( [28401,28402]"
    },
    {
      "src": "(: ( [24788,24789]",
      "dest": "(: ( [24788,24789]"
    },
    {
      "src": "primitive_type [17341,17348]",
      "dest": "primitive_type [17341,17348]"
    },
    {
      "src": "identifier: _amount [27895,27902]",
      "dest": "identifier: _amount [27895,27902]"
    },
    {
      "src": "function_body [7866,8323]",
      "dest": "function_body [7866,8323]"
    },
    {
      "src": "type_name [25450,25457]",
      "dest": "type_name [25450,25457]"
    },
    {
      "src": "bytes32: bytes32 [22985,22992]",
      "dest": "bytes32: bytes32 [22985,22992]"
    },
    {
      "src": "parameter [17752,17761]",
      "dest": "parameter [17752,17761]"
    },
    {
      "src": "identifier: amount [26241,26247]",
      "dest": "identifier: amount [26241,26247]"
    },
    {
      "src": "boolean_literal [16146,16150]",
      "dest": "boolean_literal [16146,16150]"
    },
    {
      "src": "identifier: b [18138,18139]",
      "dest": "identifier: b [18138,18139]"
    },
    {
      "src": "assignment_expression [27024,27053]",
      "dest": "assignment_expression [27024,27053]"
    },
    {
      "src": "member_expression [23909,23925]",
      "dest": "member_expression [23909,23925]"
    },
    {
      "src": "public: public [26948,26954]",
      "dest": "public: public [26948,26954]"
    },
    {
      "src": "[: [ [29149,29150]",
      "dest": "[: [ [29222,29223]"
    },
    {
      "src": "identifier: BasicMetaTransaction [21876,21896]",
      "dest": "identifier: BasicMetaTransaction [21876,21896]"
    },
    {
      "src": "call_argument [5244,5284]",
      "dest": "call_argument [5244,5284]"
    },
    {
      "src": ",: , [21986,21987]",
      "dest": ",: , [21986,21987]"
    },
    {
      "src": "type_name [26788,26795]",
      "dest": "type_name [26788,26795]"
    },
    {
      "src": "return: return [16107,16113]",
      "dest": "return: return [16107,16113]"
    },
    {
      "src": "(: ( [25597,25598]",
      "dest": "(: ( [25597,25598]"
    },
    {
      "src": "call_argument [5788,5827]",
      "dest": "call_argument [5788,5827]"
    },
    {
      "src": "identifier: a [18533,18534]",
      "dest": "identifier: a [18533,18534]"
    },
    {
      "src": "state_variable_declaration [25982,26008]",
      "dest": "state_variable_declaration [25982,26008]"
    },
    {
      "src": "call_argument [27824,27834]",
      "dest": "call_argument [27824,27834]"
    },
    {
      "src": ",: , [18128,18129]",
      "dest": ",: , [18128,18129]"
    },
    {
      "src": "identifier: target [4561,4567]",
      "dest": "identifier: target [4561,4567]"
    },
    {
      "src": "parameter [24084,24096]",
      "dest": "parameter [24084,24096]"
    },
    {
      "src": ",: , [17100,17101]",
      "dest": ",: , [17100,17101]"
    },
    {
      "src": "(: ( [3648,3649]",
      "dest": "(: ( [3648,3649]"
    },
    {
      "src": "(: ( [29575,29576]",
      "dest": "(: ( [29648,29649]"
    },
    {
      "src": "variable_declaration [22161,22171]",
      "dest": "variable_declaration [22161,22171]"
    },
    {
      "src": "return_type_definition [4633,4655]",
      "dest": "return_type_definition [4633,4655]"
    },
    {
      "src": "uint256: uint256 [16705,16712]",
      "dest": "uint256: uint256 [16705,16712]"
    },
    {
      "src": "identifier: x [29376,29377]",
      "dest": "identifier: x [29449,29450]"
    },
    {
      "src": "+: + [27915,27916]",
      "dest": "+: + [27915,27916]"
    },
    {
      "src": "event: event [11119,11124]",
      "dest": "event: event [11119,11124]"
    },
    {
      "src": "uint: uint [25610,25614]",
      "dest": "uint: uint [25610,25614]"
    },
    {
      "src": "struct_expression [28286,28317]",
      "dest": "struct_expression [28333,28372]"
    },
    {
      "src": "function_definition [21534,21764]",
      "dest": "function_definition [21534,21764]"
    },
    {
      "src": "identifier: decimals [25007,25015]",
      "dest": "identifier: decimals [25007,25015]"
    },
    {
      "src": "): ) [25016,25017]",
      "dest": "): ) [25016,25017]"
    },
    {
      "src": "): ) [4073,4074]",
      "dest": "): ) [4073,4074]"
    },
    {
      "src": "primitive_type [26881,26887]",
      "dest": "primitive_type [26881,26887]"
    },
    {
      "src": "=: = [5335,5336]",
      "dest": "=: = [5335,5336]"
    },
    {
      "src": "identifier: x [29150,29151]",
      "dest": "identifier: x [29223,29224]"
    },
    {
      "src": "expression_statement [11997,12019]",
      "dest": "expression_statement [11997,12019]"
    },
    {
      "src": "identifier: spotted [26368,26375]",
      "dest": "identifier: spotted [26368,26375]"
    },
    {
      "src": "(: ( [24518,24519]",
      "dest": "(: ( [24518,24519]"
    },
    {
      "src": "address: address [27638,27645]",
      "dest": "address: address [27638,27645]"
    },
    {
      "src": "parameter [28587,28618]",
      "dest": "parameter [28660,28691]"
    },
    {
      "src": "state_mutability [16370,16374]",
      "dest": "state_mutability [16370,16374]"
    },
    {
      "src": "): ) [24253,24254]",
      "dest": "): ) [24253,24254]"
    },
    {
      "src": "{: { [17410,17411]",
      "dest": "{: { [17410,17411]"
    },
    {
      "src": "identifier: sigS [22993,22997]",
      "dest": "identifier: sigS [22993,22997]"
    },
    {
      "src": "return_statement [3620,3700]",
      "dest": "return_statement [3620,3700]"
    },
    {
      "src": "returns: returns [16038,16045]",
      "dest": "returns: returns [16038,16045]"
    },
    {
      "src": "type_name [26815,26822]",
      "dest": "type_name [26815,26822]"
    },
    {
      "src": "parameter [24044,24074]",
      "dest": "parameter [24044,24074]"
    },
    {
      "src": "identifier: hash [24292,24296]",
      "dest": "identifier: hash [24292,24296]"
    },
    {
      "src": "identifier: a [16347,16348]",
      "dest": "identifier: a [16347,16348]"
    },
    {
      "src": "number_literal: 0 [17102,17103]",
      "dest": "number_literal: 0 [17102,17103]"
    },
    {
      "src": "event_paramater [26470,26483]",
      "dest": "event_paramater [26470,26483]"
    },
    {
      "src": "bytes: bytes [7539,7544]",
      "dest": "bytes: bytes [7539,7544]"
    },
    {
      "src": "(: ( [11966,11967]",
      "dest": "(: ( [11966,11967]"
    },
    {
      "src": "string_literal [2711,2771]",
      "dest": "string_literal [2711,2771]"
    },
    {
      "src": "}: } [17503,17504]",
      "dest": "}: } [17503,17504]"
    },
    {
      "src": "): ) [28835,28836]",
      "dest": "): ) [28908,28909]"
    },
    {
      "src": "(: ( [13163,13164]",
      "dest": "(: ( [13163,13164]"
    },
    {
      "src": "type_name [6813,6818]",
      "dest": "type_name [6813,6818]"
    },
    {
      "src": ",: , [20116,20117]",
      "dest": ",: , [20116,20117]"
    },
    {
      "src": "): ) [3576,3577]",
      "dest": "): ) [3576,3577]"
    },
    {
      "src": "(: ( [16114,16115]",
      "dest": "(: ( [16114,16115]"
    },
    {
      "src": "type_name [17330,17337]",
      "dest": "type_name [17330,17337]"
    },
    {
      "src": "yul_path [24789,24794]",
      "dest": "yul_path [24789,24794]"
    },
    {
      "src": "{: { [26778,26779]",
      "dest": "{: { [26778,26779]"
    },
    {
      "src": "type_name [25846,25861]",
      "dest": "type_name [25846,25861]"
    },
    {
      "src": "call_argument [24196,24253]",
      "dest": "call_argument [24196,24253]"
    },
    {
      "src": "function: function [28428,28436]",
      "dest": "function: function [28501,28509]"
    },
    {
      "src": "string_literal [27991,28022]",
      "dest": "string_literal [27991,28022]"
    },
    {
      "src": "identifier: _amount [27815,27822]",
      "dest": "identifier: _amount [27815,27822]"
    },
    {
      "src": "function_body [23710,23747]",
      "dest": "function_body [23710,23747]"
    },
    {
      "src": "bytes: bytes [5310,5315]",
      "dest": "bytes: bytes [5310,5315]"
    },
    {
      "src": "call_argument [6296,6302]",
      "dest": "call_argument [6296,6302]"
    },
    {
      "src": "address: address [29684,29691]",
      "dest": "address: address [29757,29764]"
    },
    {
      "src": ",: , [11770,11771]",
      "dest": ",: , [11770,11771]"
    },
    {
      "src": "if: if [24494,24496]",
      "dest": "if: if [24494,24496]"
    },
    {
      "src": "memory: memory [6208,6214]",
      "dest": "memory: memory [6208,6214]"
    },
    {
      "src": "address: address [25846,25853]",
      "dest": "address: address [25846,25853]"
    },
    {
      "src": "call_expression [28658,28670]",
      "dest": "call_expression [28731,28743]"
    },
    {
      "src": ",: , [25535,25536]",
      "dest": ",: , [25535,25536]"
    },
    {
      "src": "return_statement [24379,24404]",
      "dest": "return_statement [24379,24404]"
    },
    {
      "src": "member_expression [28815,28822]",
      "dest": "member_expression [28888,28895]"
    },
    {
      "src": "function: function [25714,25722]",
      "dest": "function: function [25714,25722]"
    },
    {
      "src": "{: { [23710,23711]",
      "dest": "{: { [23710,23711]"
    },
    {
      "src": ".: . [29326,29327]",
      "dest": ".: . [29399,29400]"
    },
    {
      "src": "): ) [29593,29594]",
      "dest": "): ) [29666,29667]"
    },
    {
      "src": "call_argument [27653,27660]",
      "dest": "call_argument [27653,27660]"
    },
    {
      "src": "identifier: returndata_size [8226,8241]",
      "dest": "identifier: returndata_size [8226,8241]"
    },
    {
      "src": "): ) [28464,28465]",
      "dest": "): ) [28537,28538]"
    },
    {
      "src": ",: , [29333,29334]",
      "dest": ",: , [29406,29407]"
    },
    {
      "src": "identifier: setFees [29459,29466]",
      "dest": "identifier: setFees [29532,29539]"
    },
    {
      "src": "string_literal [5788,5827]",
      "dest": "string_literal [5788,5827]"
    },
    {
      "src": ".: . [28889,28890]",
      "dest": ".: . [28962,28963]"
    },
    {
      "src": "(: ( [23118,23119]",
      "dest": "(: ( [23118,23119]"
    },
    {
      "src": "expression_statement [27733,27760]",
      "dest": "expression_statement [27733,27760]"
    },
    {
      "src": "primitive_type [26622,26629]",
      "dest": "primitive_type [26622,26629]"
    },
    {
      "src": "): ) [27805,27806]",
      "dest": "): ) [27805,27806]"
    },
    {
      "src": "identifier: owner [29751,29756]",
      "dest": "identifier: owner [29824,29829]"
    },
    {
      "src": "identifier: _msgSender [24425,24435]",
      "dest": "identifier: _msgSender [24425,24435]"
    },
    {
      "src": "memory: memory [21601,21607]",
      "dest": "memory: memory [21601,21607]"
    },
    {
      "src": "(: ( [27436,27437]",
      "dest": "(: ( [27436,27437]"
    },
    {
      "src": "identifier: symbol [29407,29413]",
      "dest": "identifier: symbol [29480,29486]"
    },
    {
      "src": "primitive_type [2556,2563]",
      "dest": "primitive_type [2556,2563]"
    },
    {
      "src": ",: , [13237,13238]",
      "dest": ",: , [13237,13238]"
    },
    {
      "src": "{: { [24151,24152]",
      "dest": "{: { [24151,24152]"
    },
    {
      "src": "(: ( [16682,16683]",
      "dest": "(: ( [16682,16683]"
    },
    {
      "src": "library: library [15466,15473]",
      "dest": "library: library [15466,15473]"
    },
    {
      "src": "uint256: uint256 [26308,26315]",
      "dest": "uint256: uint256 [26308,26315]"
    },
    {
      "src": "primitive_type [17797,17804]",
      "dest": "primitive_type [17797,17804]"
    },
    {
      "src": "return: return [20145,20151]",
      "dest": "return: return [20145,20151]"
    },
    {
      "src": "memory: memory [4067,4073]",
      "dest": "memory: memory [4067,4073]"
    },
    {
      "src": "identifier: a [17338,17339]",
      "dest": "identifier: a [17338,17339]"
    },
    {
      "src": "visibility [20751,20759]",
      "dest": "visibility [20751,20759]"
    },
    {
      "src": "identifier: nonces [22086,22092]",
      "dest": "identifier: nonces [22086,22092]"
    },
    {
      "src": ",: , [7823,7824]",
      "dest": ",: , [7823,7824]"
    },
    {
      "src": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [1556,2462]",
      "dest": "comment: /**      * @dev Replacement for Solidity's `transfer`: sends `amount` wei to      * `recipient`, forwarding all available gas and reverting on errors.      *      * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost      * of certain opcodes, possibly making contracts go over the 2300 gas limit      * imposed by `transfer`, making them unable to receive funds via      * `transfer`. {sendValue} removes this limitation.      *      * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].      *      * IMPORTANT: because control is transferred to `recipient`, care must be      * taken to not create reentrancy vulnerabilities. Consider using      * {ReentrancyGuard} or the      * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].      */ [1556,2462]"
    },
    {
      "src": "type_name [25982,25989]",
      "dest": "type_name [25982,25989]"
    },
    {
      "src": "(: ( [27804,27805]",
      "dest": "(: ( [27804,27805]"
    },
    {
      "src": "(: ( [5295,5296]",
      "dest": "(: ( [5295,5296]"
    },
    {
      "src": "parameter [3543,3557]",
      "dest": "parameter [3543,3557]"
    },
    {
      "src": "if: if [17424,17426]",
      "dest": "if: if [17424,17426]"
    },
    {
      "src": "identifier: errorMessage [7586,7598]",
      "dest": "identifier: errorMessage [7586,7598]"
    },
    {
      "src": "boolean_literal [17444,17449]",
      "dest": "boolean_literal [17444,17449]"
    },
    {
      "src": "{: { [1296,1297]",
      "dest": "{: { [1296,1297]"
    },
    {
      "src": "parameter [4553,4567]",
      "dest": "parameter [4553,4567]"
    },
    {
      "src": "primitive_type [2633,2637]",
      "dest": "primitive_type [2633,2637]"
    },
    {
      "src": "): ) [29107,29108]",
      "dest": "): ) [29180,29181]"
    },
    {
      "src": "pure: pure [7861,7865]",
      "dest": "pure: pure [7861,7865]"
    },
    {
      "src": "+: + [17825,17826]",
      "dest": "+: + [17825,17826]"
    },
    {
      "src": "parameter [5055,5069]",
      "dest": "parameter [5055,5069]"
    },
    {
      "src": "}: } [24925,24926]",
      "dest": "}: } [24925,24926]"
    },
    {
      "src": "type_name [4577,4582]",
      "dest": "type_name [4577,4582]"
    },
    {
      "src": "parameter [25667,25681]",
      "dest": "parameter [25667,25681]"
    },
    {
      "src": "number_literal: 1 [12049,12050]",
      "dest": "number_literal: 1 [12049,12050]"
    },
    {
      "src": "(: ( [28586,28587]",
      "dest": "(: ( [28659,28660]"
    },
    {
      "src": "state_mutability [25343,25347]",
      "dest": "state_mutability [25343,25347]"
    },
    {
      "src": "identifier: _amount [25265,25272]",
      "dest": "identifier: _amount [25265,25272]"
    },
    {
      "src": "]: ] [28670,28671]",
      "dest": "]: ] [28743,28744]"
    },
    {
      "src": "): ) [2527,2528]",
      "dest": "): ) [2527,2528]"
    },
    {
      "src": "visibility [7853,7860]",
      "dest": "visibility [7853,7860]"
    },
    {
      "src": "(: ( [19395,19396]",
      "dest": "(: ( [19395,19396]"
    },
    {
      "src": "member_expression [24599,24614]",
      "dest": "member_expression [24599,24614]"
    },
    {
      "src": "primitive_type [6163,6168]",
      "dest": "primitive_type [6163,6168]"
    },
    {
      "src": "identifier: a [16152,16153]",
      "dest": "identifier: a [16152,16153]"
    },
    {
      "src": "member_expression [27967,27976]",
      "dest": "member_expression [27967,27976]"
    },
    {
      "src": "call_argument [24186,24254]",
      "dest": "call_argument [24186,24254]"
    },
    {
      "src": "identifier: b [21583,21584]",
      "dest": "identifier: b [21583,21584]"
    },
    {
      "src": "bytes: bytes [7628,7633]",
      "dest": "bytes: bytes [7628,7633]"
    },
    {
      "src": "identifier: functionSignature [24057,24074]",
      "dest": "identifier: functionSignature [24057,24074]"
    },
    {
      "src": "): ) [6175,6176]",
      "dest": "): ) [6175,6176]"
    },
    {
      "src": "parameter [25567,25571]",
      "dest": "parameter [25567,25571]"
    },
    {
      "src": "identifier: b [20870,20871]",
      "dest": "identifier: b [20870,20871]"
    },
    {
      "src": "identifier: staticcall [6236,6246]",
      "dest": "identifier: staticcall [6236,6246]"
    },
    {
      "src": "tuple_expression [16682,16691]",
      "dest": "tuple_expression [16682,16691]"
    },
    {
      "src": "yul_identifier [8226,8241]",
      "dest": "yul_identifier [8226,8241]"
    },
    {
      "src": "call_argument [23909,23967]",
      "dest": "call_argument [23909,23967]"
    },
    {
      "src": "identifier: b [20707,20708]",
      "dest": "identifier: b [20707,20708]"
    },
    {
      "src": "user_defined_type [28764,28776]",
      "dest": "user_defined_type [28837,28849]"
    },
    {
      "src": "): ) [22218,22219]",
      "dest": "): ) [22218,22219]"
    },
    {
      "src": "identifier: target [6229,6235]",
      "dest": "identifier: target [6229,6235]"
    },
    {
      "src": "variable_declaration [16705,16714]",
      "dest": "variable_declaration [16705,16714]"
    },
    {
      "src": "call_argument [29248,29255]",
      "dest": "call_argument [29321,29328]"
    },
    {
      "src": "}: } [13768,13769]",
      "dest": "}: } [13768,13769]"
    },
    {
      "src": "): ) [23967,23968]",
      "dest": "): ) [23967,23968]"
    },
    {
      "src": "if_statement [6864,7150]",
      "dest": "if_statement [6864,7150]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [17161,17309]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.      *      * _Available since v3.4._      */ [17161,17309]"
    },
    {
      "src": "call_expression [27689,27701]",
      "dest": "call_expression [27689,27701]"
    },
    {
      "src": "parameter [3559,3576]",
      "dest": "parameter [3559,3576]"
    },
    {
      "src": "primitive_type [25641,25645]",
      "dest": "primitive_type [25641,25645]"
    },
    {
      "src": ",: , [25321,25322]",
      "dest": ",: , [25321,25322]"
    },
    {
      "src": "pure: pure [18493,18497]",
      "dest": "pure: pure [18493,18497]"
    },
    {
      "src": "identifier: success [7656,7663]",
      "dest": "identifier: success [7656,7663]"
    },
    {
      "src": "number_literal: 1 [28834,28835]",
      "dest": "number_literal: 1 [28907,28908]"
    },
    {
      "src": "primitive_type [20699,20706]",
      "dest": "primitive_type [20699,20706]"
    },
    {
      "src": "primitive_type [26605,26612]",
      "dest": "primitive_type [26605,26612]"
    },
    {
      "src": "}: } [4766,4767]",
      "dest": "}: } [4766,4767]"
    },
    {
      "src": ".: . [23396,23397]",
      "dest": ".: . [23396,23397]"
    },
    {
      "src": "\": \" [2619,2620]",
      "dest": "\": \" [2619,2620]"
    },
    {
      "src": "(: ( [27603,27604]",
      "dest": "(: ( [27603,27604]"
    },
    {
      "src": "contract_body [21897,24928]",
      "dest": "contract_body [21897,24928]"
    },
    {
      "src": "(: ( [25062,25063]",
      "dest": "(: ( [25062,25063]"
    },
    {
      "src": "identifier: reinitializer [13150,13163]",
      "dest": "identifier: reinitializer [13150,13163]"
    },
    {
      "src": "expression_statement [11641,11843]",
      "dest": "expression_statement [11641,11843]"
    },
    {
      "src": "type_cast_expression [24343,24353]",
      "dest": "type_cast_expression [24343,24353]"
    },
    {
      "src": ",: , [16388,16389]",
      "dest": ",: , [16388,16389]"
    },
    {
      "src": "block_statement [15711,15835]",
      "dest": "block_statement [15711,15835]"
    },
    {
      "src": "expression_statement [23462,23511]",
      "dest": "expression_statement [23462,23511]"
    },
    {
      "src": "): ) [2620,2621]",
      "dest": "): ) [2620,2621]"
    },
    {
      "src": "external: external [28621,28629]",
      "dest": "external: external [28694,28702]"
    },
    {
      "src": "type_name [25641,25645]",
      "dest": "type_name [25641,25645]"
    },
    {
      "src": "): ) [28062,28063]",
      "dest": "): ) [28062,28063]"
    },
    {
      "src": "type_name [27182,27189]",
      "dest": "type_name [27182,27189]"
    },
    {
      "src": ",: , [28671,28672]",
      "dest": ",: , [28744,28745]"
    },
    {
      "src": "[: [ [28928,28929]",
      "dest": "[: [ [29001,29002]"
    },
    {
      "src": ",: , [20708,20709]",
      "dest": ",: , [20708,20709]"
    },
    {
      "src": "return_type_definition [17017,17040]",
      "dest": "return_type_definition [17017,17040]"
    },
    {
      "src": "external: external [25491,25499]",
      "dest": "external: external [25491,25499]"
    },
    {
      "src": "(: ( [18163,18164]",
      "dest": "(: ( [18163,18164]"
    },
    {
      "src": "return_type_definition [25074,25096]",
      "dest": "return_type_definition [25074,25096]"
    },
    {
      "src": "call_argument [27500,27505]",
      "dest": "call_argument [27500,27505]"
    },
    {
      "src": "event_paramater [26421,26435]",
      "dest": "event_paramater [26421,26435]"
    },
    {
      "src": "identifier: require [28640,28647]",
      "dest": "identifier: require [28713,28720]"
    },
    {
      "src": "number_literal: 0 [24351,24352]",
      "dest": "number_literal: 0 [24351,24352]"
    },
    {
      "src": "function_definition [16965,17155]",
      "dest": "function_definition [16965,17155]"
    },
    {
      "src": "): ) [16690,16691]",
      "dest": "): ) [16690,16691]"
    },
    {
      "src": "state_mutability [7861,7865]",
      "dest": "state_mutability [7861,7865]"
    },
    {
      "src": "identifier: a [18470,18471]",
      "dest": "identifier: a [18470,18471]"
    },
    {
      "src": "block_statement [17051,17149]",
      "dest": "block_statement [17051,17149]"
    },
    {
      "src": "]: ] [28797,28798]",
      "dest": "]: ] [28870,28871]"
    },
    {
      "src": "{: { [28837,28838]",
      "dest": "{: { [28910,28911]"
    },
    {
      "src": "primitive_type [21923,21930]",
      "dest": "primitive_type [21923,21930]"
    },
    {
      "src": "source_file [0,29819]",
      "dest": "source_file [0,29892]"
    },
    {
      "src": "function: function [15625,15633]",
      "dest": "function: function [15625,15633]"
    },
    {
      "src": "function_definition [5638,5835]",
      "dest": "function_definition [5638,5835]"
    },
    {
      "src": "visibility [28621,28629]",
      "dest": "visibility [28694,28702]"
    },
    {
      "src": "type_name [25905,25912]",
      "dest": "type_name [25905,25912]"
    },
    {
      "src": "identifier: SafeMath [15474,15482]",
      "dest": "identifier: SafeMath [15474,15482]"
    },
    {
      "src": "augmented_assignment_expression [27733,27759]",
      "dest": "augmented_assignment_expression [27733,27759]"
    },
    {
      "src": "return: return [6262,6268]",
      "dest": "return: return [6262,6268]"
    },
    {
      "src": "uint256: uint256 [15735,15742]",
      "dest": "uint256: uint256 [15735,15742]"
    },
    {
      "src": ",: , [24025,24026]",
      "dest": ",: , [24025,24026]"
    },
    {
      "src": "parameter [6813,6825]",
      "dest": "parameter [6813,6825]"
    },
    {
      "src": ",: , [20689,20690]",
      "dest": ",: , [20689,20690]"
    },
    {
      "src": "identifier: abi [23909,23912]",
      "dest": "identifier: abi [23909,23912]"
    },
    {
      "src": ">=: >= [27977,27979]",
      "dest": ">=: >= [27977,27979]"
    },
    {
      "src": "returns: returns [6154,6161]",
      "dest": "returns: returns [6154,6161]"
    },
    {
      "src": "): ) [17103,17104]",
      "dest": "): ) [17103,17104]"
    },
    {
      "src": "=: = [24280,24281]",
      "dest": "=: = [24280,24281]"
    },
    {
      "src": "if: if [11878,11880]",
      "dest": "if: if [11878,11880]"
    },
    {
      "src": "number_literal: 0 [7962,7963]",
      "dest": "number_literal: 0 [7962,7963]"
    },
    {
      "src": "): ) [29047,29048]",
      "dest": "): ) [29120,29121]"
    },
    {
      "src": "identifier: executeMetaTransaction [22887,22909]",
      "dest": "identifier: executeMetaTransaction [22887,22909]"
    },
    {
      "src": "function: function [18449,18457]",
      "dest": "function: function [18449,18457]"
    },
    {
      "src": "address: address [4553,4560]",
      "dest": "address: address [4553,4560]"
    },
    {
      "src": "identifier: verifyCallResultFromTarget [5385,5411]",
      "dest": "identifier: verifyCallResultFromTarget [5385,5411]"
    },
    {
      "src": "comment: /**      * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the      * {initializer} and {reinitializer} modifiers, directly or indirectly.      */ [13440,13639]",
      "dest": "comment: /**      * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the      * {initializer} and {reinitializer} modifiers, directly or indirectly.      */ [13440,13639]"
    },
    {
      "src": "}: } [29437,29438]",
      "dest": "}: } [29510,29511]"
    },
    {
      "src": "{: { [18173,18174]",
      "dest": "{: { [18173,18174]"
    },
    {
      "src": "address: address [26394,26401]",
      "dest": "address: address [26394,26401]"
    },
    {
      "src": "library_declaration [15466,21766]",
      "dest": "library_declaration [15466,21766]"
    },
    {
      "src": "call_expression [27430,27450]",
      "dest": "call_expression [27430,27450]"
    },
    {
      "src": "function: function [25049,25057]",
      "dest": "function: function [25049,25057]"
    },
    {
      "src": "call_argument [23438,23449]",
      "dest": "call_argument [23438,23449]"
    },
    {
      "src": "pragma_directive [24950,24974]",
      "dest": "pragma_directive [24950,24974]"
    },
    {
      "src": "[: [ [29084,29085]",
      "dest": "[: [ [29157,29158]"
    },
    {
      "src": "function: function [3521,3529]",
      "dest": "function: function [3521,3529]"
    },
    {
      "src": "(: ( [4060,4061]",
      "dest": "(: ( [4060,4061]"
    },
    {
      "src": "address: address [6056,6063]",
      "dest": "address: address [6056,6063]"
    },
    {
      "src": "view: view [6149,6153]",
      "dest": "view: view [6149,6153]"
    },
    {
      "src": "identifier: returndata [7219,7229]",
      "dest": "identifier: returndata [7219,7229]"
    },
    {
      "src": "(: ( [28855,28856]",
      "dest": "(: ( [28928,28929]"
    },
    {
      "src": "solidity_version_comparison_operator [15106,15108]",
      "dest": "solidity_version_comparison_operator [15106,15108]"
    },
    {
      "src": "tuple_expression [16790,16799]",
      "dest": "tuple_expression [16790,16799]"
    },
    {
      "src": "identifier: require [20102,20109]",
      "dest": "identifier: require [20102,20109]"
    },
    {
      "src": "): ) [25332,25333]",
      "dest": "): ) [25332,25333]"
    },
    {
      "src": "string [27560,27582]",
      "dest": "string [27560,27582]"
    },
    {
      "src": "): ) [14676,14677]",
      "dest": "): ) [14676,14677]"
    },
    {
      "src": "type_name [25322,25329]",
      "dest": "type_name [25322,25329]"
    },
    {
      "src": "member_expression [27750,27759]",
      "dest": "member_expression [27750,27759]"
    },
    {
      "src": "memory: memory [23040,23046]",
      "dest": "memory: memory [23040,23046]"
    },
    {
      "src": ".: . [7952,7953]",
      "dest": ".: . [7952,7953]"
    },
    {
      "src": "type_alias [21910,21918]",
      "dest": "type_alias [21910,21918]"
    },
    {
      "src": ",: , [24794,24795]",
      "dest": ",: , [24794,24795]"
    },
    {
      "src": "address: address [5212,5219]",
      "dest": "address: address [5212,5219]"
    },
    {
      "src": "if: if [15766,15768]",
      "dest": "if: if [15766,15768]"
    },
    {
      "src": "returns: returns [17017,17024]",
      "dest": "returns: returns [17017,17024]"
    },
    {
      "src": "(: ( [27368,27369]",
      "dest": "(: ( [27368,27369]"
    },
    {
      "src": "{: { [24878,24879]",
      "dest": "{: { [24878,24879]"
    },
    {
      "src": "primitive_type [14910,14914]",
      "dest": "primitive_type [14910,14914]"
    },
    {
      "src": "address: address [25309,25316]",
      "dest": "address: address [25309,25316]"
    },
    {
      "src": "): ) [14424,14425]",
      "dest": "): ) [14424,14425]"
    },
    {
      "src": "comment: /**      * @dev Triggered when the contract has been initialized or reinitialized.      */ [11024,11114]",
      "dest": "comment: /**      * @dev Triggered when the contract has been initialized or reinitialized.      */ [11024,11114]"
    },
    {
      "src": "identifier: msg [24561,24564]",
      "dest": "identifier: msg [24561,24564]"
    },
    {
      "src": "}: } [22253,22254]",
      "dest": "}: } [22253,22254]"
    },
    {
      "src": "identifier: index [24591,24596]",
      "dest": "identifier: index [24591,24596]"
    },
    {
      "src": "parameter [5724,5736]",
      "dest": "parameter [5724,5736]"
    },
    {
      "src": "identifier: _amount [27712,27719]",
      "dest": "identifier: _amount [27712,27719]"
    },
    {
      "src": "uint256: uint256 [16053,16060]",
      "dest": "uint256: uint256 [16053,16060]"
    },
    {
      "src": "identifier: token [26402,26407]",
      "dest": "identifier: token [26402,26407]"
    },
    {
      "src": "inheritance_specifier [25827,25840]",
      "dest": "inheritance_specifier [25827,25840]"
    },
    {
      "src": "yul_identifier [8145,8160]",
      "dest": "yul_identifier [8145,8160]"
    },
    {
      "src": "identifier: target [5337,5343]",
      "dest": "identifier: target [5337,5343]"
    },
    {
      "src": ",: , [3557,3558]",
      "dest": ",: , [3557,3558]"
    },
    {
      "src": "user_defined_type [28587,28599]",
      "dest": "user_defined_type [28660,28672]"
    },
    {
      "src": "number_literal: 0 [17433,17434]",
      "dest": "number_literal: 0 [17433,17434]"
    },
    {
      "src": "number_literal: 10000000000000000 [27089,27106]",
      "dest": "number_literal: 10000000000000000 [27089,27106]"
    },
    {
      "src": "solidity_pragma_token [152,167]",
      "dest": "solidity_pragma_token [152,167]"
    },
    {
      "src": "parameter [22910,22929]",
      "dest": "parameter [22910,22929]"
    },
    {
      "src": "primitive_type [20059,20066]",
      "dest": "primitive_type [20059,20066]"
    },
    {
      "src": "identifier: value [5237,5242]",
      "dest": "identifier: value [5237,5242]"
    },
    {
      "src": "identifier: success [6707,6714]",
      "dest": "identifier: success [6707,6714]"
    },
    {
      "src": "comment: // File: basicmetatransaction.sol [21768,21801]",
      "dest": "comment: // File: basicmetatransaction.sol [21768,21801]"
    },
    {
      "src": "comment: // CAUTION [15116,15126]",
      "dest": "comment: // CAUTION [15116,15126]"
    },
    {
      "src": "return_type_definition [17366,17389]",
      "dest": "return_type_definition [17366,17389]"
    },
    {
      "src": "(: ( [29201,29202]",
      "dest": "(: ( [29274,29275]"
    },
    {
      "src": "block_statement [11898,11943]",
      "dest": "block_statement [11898,11943]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol [8327,8401]",
      "dest": "comment: // File: @openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol [8327,8401]"
    },
    {
      "src": "function_body [27231,28422]",
      "dest": "function_body [27231,28495]"
    },
    {
      "src": "primitive_type [25567,25571]",
      "dest": "primitive_type [25567,25571]"
    },
    {
      "src": "variable_declaration [24265,24279]",
      "dest": "variable_declaration [24265,24279]"
    },
    {
      "src": "string: string [25082,25088]",
      "dest": "string: string [25082,25088]"
    },
    {
      "src": "identifier: sender [24765,24771]",
      "dest": "identifier: sender [24765,24771]"
    },
    {
      "src": "identifier: token [29100,29105]",
      "dest": "identifier: token [29173,29178]"
    },
    {
      "src": "uint256: uint256 [20059,20066]",
      "dest": "uint256: uint256 [20059,20066]"
    },
    {
      "src": "block_statement [17400,17498]",
      "dest": "block_statement [17400,17498]"
    },
    {
      "src": "binary_expression [17079,17085]",
      "dest": "binary_expression [17079,17085]"
    },
    {
      "src": "(: ( [16046,16047]",
      "dest": "(: ( [16046,16047]"
    },
    {
      "src": "number_literal: 1 [11867,11868]",
      "dest": "number_literal: 1 [11867,11868]"
    },
    {
      "src": "emit_statement [23520,23602]",
      "dest": "emit_statement [23520,23602]"
    },
    {
      "src": "return: return [7679,7685]",
      "dest": "return: return [7679,7685]"
    },
    {
      "src": "pure: pure [15672,15676]",
      "dest": "pure: pure [15672,15676]"
    },
    {
      "src": "type_name [26293,26300]",
      "dest": "type_name [26293,26300]"
    },
    {
      "src": "primitive_type [16390,16397]",
      "dest": "primitive_type [16390,16397]"
    },
    {
      "src": "view: view [14687,14691]",
      "dest": "view: view [14687,14691]"
    },
    {
      "src": "parenthesized_expression [11702,11770]",
      "dest": "parenthesized_expression [11702,11770]"
    },
    {
      "src": "): ) [25740,25741]",
      "dest": "): ) [25740,25741]"
    },
    {
      "src": "(: ( [16001,16002]",
      "dest": "(: ( [16001,16002]"
    },
    {
      "src": "}: } [29443,29444]",
      "dest": "}: } [29516,29517]"
    },
    {
      "src": "payable: payable [23018,23025]",
      "dest": "payable: payable [23018,23025]"
    },
    {
      "src": "type_name [23034,23039]",
      "dest": "type_name [23034,23039]"
    },
    {
      "src": "identifier: name [25058,25062]",
      "dest": "identifier: name [25058,25062]"
    },
    {
      "src": "bool: bool [17026,17030]",
      "dest": "bool: bool [17026,17030]"
    },
    {
      "src": "yul_function_call [22210,22219]",
      "dest": "yul_function_call [22210,22219]"
    },
    {
      "src": ",: , [6747,6748]",
      "dest": ",: , [6747,6748]"
    },
    {
      "src": "type_name [22161,22168]",
      "dest": "type_name [22161,22168]"
    },
    {
      "src": "}: } [23634,23635]",
      "dest": "}: } [23634,23635]"
    },
    {
      "src": "): ) [7640,7641]",
      "dest": "): ) [7640,7641]"
    },
    {
      "src": "(: ( [22057,22058]",
      "dest": "(: ( [22057,22058]"
    },
    {
      "src": "else: else [27869,27873]",
      "dest": "else: else [27869,27873]"
    },
    {
      "src": "identifier: returnData [23369,23379]",
      "dest": "identifier: returnData [23369,23379]"
    },
    {
      "src": "type_name [4642,4647]",
      "dest": "type_name [4642,4647]"
    },
    {
      "src": ",: , [5308,5309]",
      "dest": ",: , [5308,5309]"
    },
    {
      "src": "primitive_type [16053,16060]",
      "dest": "primitive_type [16053,16060]"
    },
    {
      "src": "primitive_type [23034,23039]",
      "dest": "primitive_type [23034,23039]"
    },
    {
      "src": "event_paramater [26233,26247]",
      "dest": "event_paramater [26233,26247]"
    },
    {
      "src": "function_definition [17314,17504]",
      "dest": "function_definition [17314,17504]"
    },
    {
      "src": "mload: mload [8164,8169]",
      "dest": "mload: mload [8164,8169]"
    },
    {
      "src": "else: else [8267,8271]",
      "dest": "else: else [8267,8271]"
    },
    {
      "src": "identifier: x [28784,28785]",
      "dest": "identifier: x [28857,28858]"
    },
    {
      "src": "parameter [18507,18514]",
      "dest": "parameter [18507,18514]"
    },
    {
      "src": "(: ( [27634,27635]",
      "dest": "(: ( [27634,27635]"
    },
    {
      "src": "uint: uint [25641,25645]",
      "dest": "uint: uint [25641,25645]"
    },
    {
      "src": "block_statement [11983,12062]",
      "dest": "block_statement [11983,12062]"
    },
    {
      "src": "}: } [14952,14953]",
      "dest": "}: } [14952,14953]"
    },
    {
      "src": "call_argument [23087,23106]",
      "dest": "call_argument [23087,23106]"
    },
    {
      "src": "=: = [13385,13386]",
      "dest": "=: = [13385,13386]"
    },
    {
      "src": "): ) [18514,18515]",
      "dest": "): ) [18514,18515]"
    },
    {
      "src": "identifier: msg [28181,28184]",
      "dest": "identifier: msg [28181,28184]"
    },
    {
      "src": "\": \" [5283,5284]",
      "dest": "\": \" [5283,5284]"
    },
    {
      "src": "binary_expression [20825,20830]",
      "dest": "binary_expression [20825,20830]"
    },
    {
      "src": "identifier: max [14467,14470]",
      "dest": "identifier: max [14467,14470]"
    },
    {
      "src": "}: } [24871,24872]",
      "dest": "}: } [24871,24872]"
    },
    {
      "src": "): ) [26732,26733]",
      "dest": "): ) [26732,26733]"
    },
    {
      "src": "number_literal: 0 [16672,16673]",
      "dest": "number_literal: 0 [16672,16673]"
    },
    {
      "src": "(: ( [18118,18119]",
      "dest": "(: ( [18118,18119]"
    },
    {
      "src": "]: ] [29096,29097]",
      "dest": "]: ] [29169,29170]"
    },
    {
      "src": "primitive_type [22058,22065]",
      "dest": "primitive_type [22058,22065]"
    },
    {
      "src": "}: } [12067,12068]",
      "dest": "}: } [12067,12068]"
    },
    {
      "src": "(: ( [11582,11583]",
      "dest": "(: ( [11582,11583]"
    },
    {
      "src": "return_statement [16783,16800]",
      "dest": "return_statement [16783,16800]"
    },
    {
      "src": "identifier: _amount [25482,25489]",
      "dest": "identifier: _amount [25482,25489]"
    },
    {
      "src": "address: address [25450,25457]",
      "dest": "address: address [25450,25457]"
    },
    {
      "src": "variable_declaration [28856,28868]",
      "dest": "variable_declaration [28929,28941]"
    },
    {
      "src": "identifier: msg [28118,28121]",
      "dest": "identifier: msg [28118,28121]"
    },
    {
      "src": "abstract: abstract [10710,10718]",
      "dest": "abstract: abstract [10710,10718]"
    },
    {
      "src": "}: } [29122,29123]",
      "dest": "}: } [29195,29196]"
    },
    {
      "src": "type_name [2486,2501]",
      "dest": "type_name [2486,2501]"
    },
    {
      "src": "call_argument [4114,4120]",
      "dest": "call_argument [4114,4120]"
    },
    {
      "src": "=: = [28402,28403]",
      "dest": "=: = [28475,28476]"
    },
    {
      "src": "identifier: value [27971,27976]",
      "dest": "identifier: value [27971,27976]"
    },
    {
      "src": "identifier: setFeeReceiver [29561,29575]",
      "dest": "identifier: setFeeReceiver [29634,29648]"
    },
    {
      "src": "call_argument [29376,29387]",
      "dest": "call_argument [29449,29460]"
    },
    {
      "src": "pure: pure [18150,18154]",
      "dest": "pure: pure [18150,18154]"
    },
    {
      "src": "+=: += [28115,28117]",
      "dest": "+=: += [28115,28117]"
    },
    {
      "src": "(: ( [24435,24436]",
      "dest": "(: ( [24435,24436]"
    },
    {
      "src": ",: , [19993,19994]",
      "dest": ",: , [19993,19994]"
    },
    {
      "src": "(: ( [23401,23402]",
      "dest": "(: ( [23401,23402]"
    },
    {
      "src": ",: , [27813,27814]",
      "dest": ",: , [27813,27814]"
    },
    {
      "src": "string [5788,5827]",
      "dest": "string [5788,5827]"
    },
    {
      "src": "identifier: _amount [25733,25740]",
      "dest": "identifier: _amount [25733,25740]"
    },
    {
      "src": "internal: internal [6140,6148]",
      "dest": "internal: internal [6140,6148]"
    },
    {
      "src": "\": \" [28673,28674]",
      "dest": "\": \" [28746,28747]"
    },
    {
      "src": "(: ( [3595,3596]",
      "dest": "(: ( [3595,3596]"
    },
    {
      "src": ",: , [17339,17340]",
      "dest": ",: , [17339,17340]"
    },
    {
      "src": "(: ( [12048,12049]",
      "dest": "(: ( [12048,12049]"
    },
    {
      "src": "(: ( [11733,11734]",
      "dest": "(: ( [11733,11734]"
    },
    {
      "src": "): ) [25571,25572]",
      "dest": "): ) [25571,25572]"
    },
    {
      "src": "(: ( [4694,4695]",
      "dest": "(: ( [4694,4695]"
    },
    {
      "src": "expression_statement [27597,27662]",
      "dest": "expression_statement [27597,27662]"
    },
    {
      "src": "{: { [15701,15702]",
      "dest": "{: { [15701,15702]"
    },
    {
      "src": "type_cast_expression [11734,11747]",
      "dest": "type_cast_expression [11734,11747]"
    },
    {
      "src": "state_mutability [23682,23686]",
      "dest": "state_mutability [23682,23686]"
    },
    {
      "src": "identifier: b [19471,19472]",
      "dest": "identifier: b [19471,19472]"
    },
    {
      "src": "assembly_statement [24628,24862]",
      "dest": "assembly_statement [24628,24862]"
    },
    {
      "src": "mload: mload [24779,24784]",
      "dest": "mload: mload [24779,24784]"
    },
    {
      "src": "return: return [1513,1519]",
      "dest": "return: return [1513,1519]"
    },
    {
      "src": "): ) [27442,27443]",
      "dest": "): ) [27442,27443]"
    },
    {
      "src": "function_body [4075,4151]",
      "dest": "function_body [4075,4151]"
    },
    {
      "src": "}: } [24861,24862]",
      "dest": "}: } [24861,24862]"
    },
    {
      "src": "primitive_type [3559,3564]",
      "dest": "primitive_type [3559,3564]"
    },
    {
      "src": "call_expression [28491,28503]",
      "dest": "call_expression [28564,28576]"
    },
    {
      "src": ",: , [7101,7102]",
      "dest": ",: , [7101,7102]"
    },
    {
      "src": "type_name [4010,4016]",
      "dest": "type_name [4010,4016]"
    },
    {
      "src": "parameter [5129,5155]",
      "dest": "parameter [5129,5155]"
    },
    {
      "src": "identifier: data [6247,6251]",
      "dest": "identifier: data [6247,6251]"
    },
    {
      "src": "function: function [16323,16331]",
      "dest": "function: function [16323,16331]"
    },
    {
      "src": "identifier: Lock [25798,25802]",
      "dest": "identifier: Lock [25798,25802]"
    },
    {
      "src": "identifier: functionSignature [22026,22043]",
      "dest": "identifier: functionSignature [22026,22043]"
    },
    {
      "src": ",: , [4120,4121]",
      "dest": ",: , [4120,4121]"
    },
    {
      "src": "view: view [14896,14900]",
      "dest": "view: view [14896,14900]"
    },
    {
      "src": "type_name [20774,20781]",
      "dest": "type_name [20774,20781]"
    },
    {
      "src": "modifier: modifier [11562,11570]",
      "dest": "modifier: modifier [11562,11570]"
    },
    {
      "src": "\": \" [28693,28694]",
      "dest": "\": \" [28766,28767]"
    },
    {
      "src": "call_argument [28181,28190]",
      "dest": "call_argument [28181,28190]"
    },
    {
      "src": "identifier: target [5412,5418]",
      "dest": "identifier: target [5412,5418]"
    },
    {
      "src": "(: ( [28447,28448]",
      "dest": "(: ( [28520,28521]"
    },
    {
      "src": ",: , [25259,25260]",
      "dest": ",: , [25259,25260]"
    },
    {
      "src": "contract: contract [21867,21875]",
      "dest": "contract: contract [21867,21875]"
    },
    {
      "src": "): ) [11896,11897]",
      "dest": "): ) [11896,11897]"
    },
    {
      "src": "binary_expression [27895,27908]",
      "dest": "binary_expression [27895,27908]"
    },
    {
      "src": "expression_statement [28960,28996]",
      "dest": "expression_statement [29033,29069]"
    },
    {
      "src": "call_expression [2694,2772]",
      "dest": "call_expression [2694,2772]"
    },
    {
      "src": "uint256: uint256 [21556,21563]",
      "dest": "uint256: uint256 [21556,21563]"
    },
    {
      "src": "address: address [27378,27385]",
      "dest": "address: address [27378,27385]"
    },
    {
      "src": "external: external [25334,25342]",
      "dest": "external: external [25334,25342]"
    },
    {
      "src": "): ) [3698,3699]",
      "dest": "): ) [3698,3699]"
    },
    {
      "src": "address: address [3959,3966]",
      "dest": "address: address [3959,3966]"
    },
    {
      "src": "\": \" [28319,28320]",
      "dest": "\": \" [28374,28375]"
    },
    {
      "src": "binary_expression [18533,18538]",
      "dest": "binary_expression [18533,18538]"
    },
    {
      "src": "visibility [25334,25342]",
      "dest": "visibility [25334,25342]"
    },
    {
      "src": "state_mutability [6799,6803]",
      "dest": "state_mutability [6799,6803]"
    },
    {
      "src": "memory: memory [5316,5322]",
      "dest": "memory: memory [5316,5322]"
    },
    {
      "src": "primitive_type [25386,25393]",
      "dest": "primitive_type [25386,25393]"
    },
    {
      "src": "type_name [16002,16009]",
      "dest": "type_name [16002,16009]"
    },
    {
      "src": "string [3666,3698]",
      "dest": "string [3666,3698]"
    },
    {
      "src": "type_name [16390,16397]",
      "dest": "type_name [16390,16397]"
    },
    {
      "src": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [17510,17734]",
      "dest": "comment: /**      * @dev Returns the addition of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `+` operator.      *      * Requirements:      *      * - Addition cannot overflow.      */ [17510,17734]"
    },
    {
      "src": "type_name [26838,26845]",
      "dest": "type_name [26838,26845]"
    },
    {
      "src": "): ) [27051,27052]",
      "dest": "): ) [27051,27052]"
    },
    {
      "src": "identifier: _amount [25541,25548]",
      "dest": "identifier: _amount [25541,25548]"
    },
    {
      "src": "primitive_type [27638,27645]",
      "dest": "primitive_type [27638,27645]"
    },
    {
      "src": "=: = [12011,12012]",
      "dest": "=: = [12011,12012]"
    },
    {
      "src": "): ) [25095,25096]",
      "dest": "): ) [25095,25096]"
    },
    {
      "src": "^:  ^ [160,162]",
      "dest": "^:  ^ [160,162]"
    },
    {
      "src": "primitive_type [3596,3601]",
      "dest": "primitive_type [3596,3601]"
    },
    {
      "src": "yul_path [8213,8223]",
      "dest": "yul_path [8213,8223]"
    },
    {
      "src": "function: function [28562,28570]",
      "dest": "function: function [28635,28643]"
    },
    {
      "src": "else: else [29010,29014]",
      "dest": "else: else [29083,29087]"
    },
    {
      "src": "bool: bool [17375,17379]",
      "dest": "bool: bool [17375,17379]"
    },
    {
      "src": "(: ( [14393,14394]",
      "dest": "(: ( [14393,14394]"
    },
    {
      "src": "{: { [20783,20784]",
      "dest": "{: { [20783,20784]"
    },
    {
      "src": "chainid: chainid [22210,22217]",
      "dest": "chainid: chainid [22210,22217]"
    },
    {
      "src": ",: , [5069,5070]",
      "dest": ",: , [5069,5070]"
    },
    {
      "src": "variable_declaration_statement [28710,28724]",
      "dest": "variable_declaration_statement [28783,28797]"
    },
    {
      "src": "struct_expression [28873,28938]",
      "dest": "struct_expression [28946,29011]"
    },
    {
      "src": "returns: returns [23687,23694]",
      "dest": "returns: returns [23687,23694]"
    },
    {
      "src": "state_mutability [19427,19431]",
      "dest": "state_mutability [19427,19431]"
    },
    {
      "src": "]: ] [28541,28542]",
      "dest": "]: ] [28614,28615]"
    },
    {
      "src": ",: , [15690,15691]",
      "dest": ",: , [15690,15691]"
    },
    {
      "src": "return_type_definition [25633,25646]",
      "dest": "return_type_definition [25633,25646]"
    },
    {
      "src": "primitive_type [24540,24545]",
      "dest": "primitive_type [24540,24545]"
    },
    {
      "src": "}: } [5361,5362]",
      "dest": "}: } [5361,5362]"
    },
    {
      "src": "identifier: a [17481,17482]",
      "dest": "identifier: a [17481,17482]"
    },
    {
      "src": "call_argument [2589,2620]",
      "dest": "call_argument [2589,2620]"
    },
    {
      "src": "identifier: x [29248,29249]",
      "dest": "identifier: x [29321,29322]"
    },
    {
      "src": "if: if [16663,16665]",
      "dest": "if: if [16663,16665]"
    },
    {
      "src": "(: ( [23908,23909]",
      "dest": "(: ( [23908,23909]"
    },
    {
      "src": "modifier_definition [13644,13769]",
      "dest": "modifier_definition [13644,13769]"
    },
    {
      "src": "): ) [5284,5285]",
      "dest": "): ) [5284,5285]"
    },
    {
      "src": "member_expression [28729,28743]",
      "dest": "member_expression [28802,28816]"
    },
    {
      "src": "identifier: depositer [26208,26217]",
      "dest": "identifier: depositer [26208,26217]"
    },
    {
      "src": "returns: returns [21641,21648]",
      "dest": "returns: returns [21641,21648]"
    },
    {
      "src": "identifier: check [26414,26419]",
      "dest": "identifier: check [26414,26419]"
    },
    {
      "src": "call_expression [24325,24375]",
      "dest": "call_expression [24325,24375]"
    },
    {
      "src": "memory: memory [5186,5192]",
      "dest": "memory: memory [5186,5192]"
    },
    {
      "src": "identifier: call [23397,23401]",
      "dest": "identifier: call [23397,23401]"
    },
    {
      "src": "primitive_type [26342,26348]",
      "dest": "primitive_type [26342,26348]"
    },
    {
      "src": "number_literal: 0 [29174,29175]",
      "dest": "number_literal: 0 [29247,29248]"
    },
    {
      "src": "type_name [17797,17804]",
      "dest": "type_name [17797,17804]"
    },
    {
      "src": "array_access [23728,23740]",
      "dest": "array_access [23728,23740]"
    },
    {
      "src": "identifier: token [28174,28179]",
      "dest": "identifier: token [28174,28179]"
    },
    {
      "src": "state_variable_declaration [22050,22093]",
      "dest": "state_variable_declaration [22050,22093]"
    },
    {
      "src": "): ) [27388,27389]",
      "dest": "): ) [27388,27389]"
    },
    {
      "src": ".: . [11722,11723]",
      "dest": ".: . [11722,11723]"
    },
    {
      "src": "comment: /**      * @dev Returns the integer division of two unsigned integers, reverting on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator.      *      * Requirements:      *      * - The divisor cannot be zero.      */ [18551,18829]",
      "dest": "comment: /**      * @dev Returns the integer division of two unsigned integers, reverting on      * division by zero. The result is rounded towards zero.      *      * Counterpart to Solidity's `/` operator.      *      * Requirements:      *      * - The divisor cannot be zero.      */ [18551,18829]"
    },
    {
      "src": "identifier: _amount [25615,25622]",
      "dest": "identifier: _amount [25615,25622]"
    },
    {
      "src": "primitive_type [24583,24590]",
      "dest": "primitive_type [24583,24590]"
    },
    {
      "src": "}: } [20167,20168]",
      "dest": "}: } [20167,20168]"
    },
    {
      "src": "): ) [24436,24437]",
      "dest": "): ) [24436,24437]"
    },
    {
      "src": "binary_expression [15747,15752]",
      "dest": "binary_expression [15747,15752]"
    },
    {
      "src": "else: else [7192,7196]",
      "dest": "else: else [7192,7196]"
    },
    {
      "src": "comment: // string memory tokensSymbol = IERC20(token).symbol(); [27301,27356]",
      "dest": "comment: // string memory tokensSymbol = IERC20(token).symbol(); [27301,27356]"
    },
    {
      "src": "memory: memory [20010,20016]",
      "dest": "memory: memory [20010,20016]"
    },
    {
      "src": "identifier: a [20866,20867]",
      "dest": "identifier: a [20866,20867]"
    },
    {
      "src": "call_argument [24519,24523]",
      "dest": "call_argument [24519,24523]"
    },
    {
      "src": "if: if [17075,17077]",
      "dest": "if: if [17075,17077]"
    },
    {
      "src": "parameter [25536,25548]",
      "dest": "parameter [25536,25548]"
    },
    {
      "src": "{: { [24991,24992]",
      "dest": "{: { [24991,24992]"
    },
    {
      "src": "expression_statement [28388,28406]",
      "dest": "expression_statement [28461,28479]"
    },
    {
      "src": ",: , [4567,4568]",
      "dest": ",: , [4567,4568]"
    },
    {
      "src": "yul_path [8170,8180]",
      "dest": "yul_path [8170,8180]"
    },
    {
      "src": "pure: pure [20045,20049]",
      "dest": "pure: pure [20045,20049]"
    },
    {
      "src": "memory: memory [6086,6092]",
      "dest": "memory: memory [6086,6092]"
    },
    {
      "src": "[: [ [29097,29098]",
      "dest": "[: [ [29170,29171]"
    },
    {
      "src": "primitive_type [2513,2520]",
      "dest": "primitive_type [2513,2520]"
    },
    {
      "src": "visibility [10996,11003]",
      "dest": "visibility [10996,11003]"
    },
    {
      "src": "): ) [6225,6226]",
      "dest": "): ) [6225,6226]"
    },
    {
      "src": "(: ( [17796,17797]",
      "dest": "(: ( [17796,17797]"
    },
    {
      "src": "return_statement [16675,16692]",
      "dest": "return_statement [16675,16692]"
    },
    {
      "src": "[: [ [27688,27689]",
      "dest": "[: [ [27688,27689]"
    },
    {
      "src": "type_name [6188,6192]",
      "dest": "type_name [6188,6192]"
    },
    {
      "src": "call_expression [23462,23510]",
      "dest": "call_expression [23462,23510]"
    },
    {
      "src": "=: = [13344,13345]",
      "dest": "=: = [13344,13345]"
    },
    {
      "src": "identifier: i [28725,28726]",
      "dest": "identifier: i [28798,28799]"
    },
    {
      "src": "}: } [14533,14534]",
      "dest": "}: } [14533,14534]"
    },
    {
      "src": "binary_expression [2556,2587]",
      "dest": "binary_expression [2556,2587]"
    },
    {
      "src": "identifier: isContract [7083,7093]",
      "dest": "identifier: isContract [7083,7093]"
    },
    {
      "src": "(: ( [23341,23342]",
      "dest": "(: ( [23341,23342]"
    },
    {
      "src": "call_argument [27624,27636]",
      "dest": "call_argument [27624,27636]"
    },
    {
      "src": "identifier: _initializing [14933,14946]",
      "dest": "identifier: _initializing [14933,14946]"
    },
    {
      "src": "member_expression [28873,28894]",
      "dest": "member_expression [28946,28967]"
    },
    {
      "src": "call_expression [26695,26733]",
      "dest": "call_expression [26695,26733]"
    },
    {
      "src": "type_name [22050,22077]",
      "dest": "type_name [22050,22077]"
    },
    {
      "src": "block_statement [7665,7707]",
      "dest": "block_statement [7665,7707]"
    },
    {
      "src": "return: return [15808,15814]",
      "dest": "return: return [15808,15814]"
    },
    {
      "src": "primitive_type [26558,26565]",
      "dest": "primitive_type [26558,26565]"
    },
    {
      "src": "type_name [25873,25880]",
      "dest": "type_name [25873,25880]"
    },
    {
      "src": "variable_declaration [28764,28785]",
      "dest": "variable_declaration [28837,28858]"
    },
    {
      "src": "): ) [14885,14886]",
      "dest": "): ) [14885,14886]"
    },
    {
      "src": "parameter [22142,22149]",
      "dest": "parameter [22142,22149]"
    },
    {
      "src": "yul_identifier [24789,24794]",
      "dest": "yul_identifier [24789,24794]"
    },
    {
      "src": "comment: /**      * @dev Indicates that the contract has been initialized.      * @custom:oz-retyped-from bool      */ [10748,10857]",
      "dest": "comment: /**      * @dev Indicates that the contract has been initialized.      * @custom:oz-retyped-from bool      */ [10748,10857]"
    },
    {
      "src": "block_statement [24878,24920]",
      "dest": "block_statement [24878,24920]"
    },
    {
      "src": "parameter [25450,25462]",
      "dest": "parameter [25450,25462]"
    },
    {
      "src": "assignment_expression [27129,27152]",
      "dest": "assignment_expression [27129,27152]"
    },
    {
      "src": "primitive_type [14460,14465]",
      "dest": "primitive_type [14460,14465]"
    },
    {
      "src": "(: ( [19955,19956]",
      "dest": "(: ( [19955,19956]"
    },
    {
      "src": "true: true [13346,13350]",
      "dest": "true: true [13346,13350]"
    },
    {
      "src": "yul_function_call [8198,8242]",
      "dest": "yul_function_call [8198,8242]"
    },
    {
      "src": "uint256: uint256 [17330,17337]",
      "dest": "uint256: uint256 [17330,17337]"
    },
    {
      "src": "): ) [14706,14707]",
      "dest": "): ) [14706,14707]"
    },
    {
      "src": "identifier: errorMessage [21708,21720]",
      "dest": "identifier: errorMessage [21708,21720]"
    },
    {
      "src": "uint: uint [25728,25732]",
      "dest": "uint: uint [25728,25732]"
    },
    {
      "src": "call_argument [23419,23436]",
      "dest": "call_argument [23419,23436]"
    },
    {
      "src": "function_definition [2467,2779]",
      "dest": "function_definition [2467,2779]"
    },
    {
      "src": "type_name [25683,25687]",
      "dest": "type_name [25683,25687]"
    },
    {
      "src": "type_name [6163,6168]",
      "dest": "type_name [6163,6168]"
    },
    {
      "src": "{: { [15721,15722]",
      "dest": "{: { [15721,15722]"
    },
    {
      "src": "type_name [26452,26458]",
      "dest": "type_name [26452,26458]"
    },
    {
      "src": "}: } [23746,23747]",
      "dest": "}: } [23746,23747]"
    },
    {
      "src": "comment: // File: @openzeppelin/contracts/utils/math/SafeMath.sol [14957,15013]",
      "dest": "comment: // File: @openzeppelin/contracts/utils/math/SafeMath.sol [14957,15013]"
    },
    {
      "src": "call_expression [6229,6252]",
      "dest": "call_expression [6229,6252]"
    },
    {
      "src": "identifier: spotted [29194,29201]",
      "dest": "identifier: spotted [29267,29274]"
    },
    {
      "src": ",: , [26419,26420]",
      "dest": ",: , [26419,26420]"
    },
    {
      "src": "(: ( [14413,14414]",
      "dest": "(: ( [14413,14414]"
    },
    {
      "src": "): ) [23009,23010]",
      "dest": "): ) [23009,23010]"
    },
    {
      "src": "true: true [28545,28549]",
      "dest": "true: true [28618,28622]"
    },
    {
      "src": "call_argument [13239,13287]",
      "dest": "call_argument [13239,13287]"
    },
    {
      "src": "): ) [23157,23158]",
      "dest": "): ) [23157,23158]"
    },
    {
      "src": "type_name [18507,18514]",
      "dest": "type_name [18507,18514]"
    },
    {
      "src": "identifier: sigR [24092,24096]",
      "dest": "identifier: sigR [24092,24096]"
    },
    {
      "src": "function: function [24416,24424]",
      "dest": "function: function [24416,24424]"
    },
    {
      "src": "): ) [27660,27661]",
      "dest": "): ) [27660,27661]"
    },
    {
      "src": "uint256: uint256 [18892,18899]",
      "dest": "uint256: uint256 [18892,18899]"
    },
    {
      "src": "uint256: uint256 [27182,27189]",
      "dest": "uint256: uint256 [27182,27189]"
    },
    {
      "src": "type_name [23695,23702]",
      "dest": "type_name [23695,23702]"
    },
    {
      "src": "(: ( [25523,25524]",
      "dest": "(: ( [25523,25524]"
    },
    {
      "src": "type_name [15692,15699]",
      "dest": "type_name [15692,15699]"
    },
    {
      "src": "identifier: _amount [27190,27197]",
      "dest": "identifier: _amount [27190,27197]"
    },
    {
      "src": "state_mutability [15672,15676]",
      "dest": "state_mutability [15672,15676]"
    },
    {
      "src": "): ) [11150,11151]",
      "dest": "): ) [11150,11151]"
    },
    {
      "src": "call_argument [4122,4126]",
      "dest": "call_argument [4122,4126]"
    },
    {
      "src": "): ) [27514,27515]",
      "dest": "): ) [27514,27515]"
    },
    {
      "src": "boolean_literal [28545,28549]",
      "dest": "boolean_literal [28618,28622]"
    },
    {
      "src": ",: , [23151,23152]",
      "dest": ",: , [23151,23152]"
    },
    {
      "src": ".: . [27506,27507]",
      "dest": ".: . [27506,27507]"
    },
    {
      "src": "identifier: symbol [25114,25120]",
      "dest": "identifier: symbol [25114,25120]"
    },
    {
      "src": "call_argument [23583,23600]",
      "dest": "call_argument [23583,23600]"
    },
    {
      "src": "): ) [13287,13288]",
      "dest": "): ) [13287,13288]"
    },
    {
      "src": ",: , [23106,23107]",
      "dest": ",: , [23106,23107]"
    },
    {
      "src": "identifier: returndata [6215,6225]",
      "dest": "identifier: returndata [6215,6225]"
    },
    {
      "src": "function_definition [25579,25647]",
      "dest": "function_definition [25579,25647]"
    },
    {
      "src": "call_argument [27537,27559]",
      "dest": "call_argument [27537,27559]"
    },
    {
      "src": "): ) [28836,28837]",
      "dest": "): ) [28909,28910]"
    },
    {
      "src": "expression_statement [29622,29646]",
      "dest": "expression_statement [29695,29719]"
    },
    {
      "src": "solidity_pragma_token [15098,15113]",
      "dest": "solidity_pragma_token [15098,15113]"
    },
    {
      "src": "}: } [24409,24410]",
      "dest": "}: } [24409,24410]"
    },
    {
      "src": "string [23479,23509]",
      "dest": "string [23479,23509]"
    },
    {
      "src": "variable_declaration [24583,24596]",
      "dest": "variable_declaration [24583,24596]"
    },
    {
      "src": "parameter [24098,24110]",
      "dest": "parameter [24098,24110]"
    },
    {
      "src": "identifier: feesCollected [28101,28114]",
      "dest": "identifier: feesCollected [28101,28114]"
    },
    {
      "src": "type_name [25386,25393]",
      "dest": "type_name [25386,25393]"
    },
    {
      "src": "member_expression [28916,28927]",
      "dest": "member_expression [28989,29000]"
    },
    {
      "src": "return_type_definition [18498,18515]",
      "dest": "return_type_definition [18498,18515]"
    },
    {
      "src": "identifier: _initialized [14725,14737]",
      "dest": "identifier: _initialized [14725,14737]"
    },
    {
      "src": "(: ( [7799,7800]",
      "dest": "(: ( [7799,7800]"
    },
    {
      "src": "identifier: length [6879,6885]",
      "dest": "identifier: length [6879,6885]"
    },
    {
      "src": "): ) [25153,25154]",
      "dest": "): ) [25153,25154]"
    },
    {
      "src": "mapping: mapping [26614,26621]",
      "dest": "mapping: mapping [26614,26621]"
    },
    {
      "src": "identifier: feesCollected [28214,28227]",
      "dest": "identifier: feesCollected [28214,28227]"
    },
    {
      "src": "}: } [20887,20888]",
      "dest": "}: } [20887,20888]"
    },
    {
      "src": "identifier: feesBuffer [27549,27559]",
      "dest": "identifier: feesBuffer [27549,27559]"
    },
    {
      "src": "type_name [24112,24117]",
      "dest": "type_name [24112,24117]"
    },
    {
      "src": "pragma_directive [21841,21864]",
      "dest": "pragma_directive [21841,21864]"
    },
    {
      "src": "uint256: uint256 [17752,17759]",
      "dest": "uint256: uint256 [17752,17759]"
    },
    {
      "src": "memory: memory [4583,4589]",
      "dest": "memory: memory [4583,4589]"
    },
    {
      "src": "inheritance_specifier [25806,25826]",
      "dest": "inheritance_specifier [25806,25826]"
    },
    {
      "src": "call_argument [24304,24308]",
      "dest": "call_argument [24304,24308]"
    },
    {
      "src": "(: ( [13196,13197]",
      "dest": "(: ( [13196,13197]"
    },
    {
      "src": "primitive_type [24084,24091]",
      "dest": "primitive_type [24084,24091]"
    },
    {
      "src": "call_argument [21701,21706]",
      "dest": "call_argument [21701,21706]"
    },
    {
      "src": "state_mutability [24131,24135]",
      "dest": "state_mutability [24131,24135]"
    },
    {
      "src": "=: = [14453,14454]",
      "dest": "=: = [14453,14454]"
    },
    {
      "src": ",: , [23139,23140]",
      "dest": ",: , [23139,23140]"
    },
    {
      "src": "type_name [19441,19448]",
      "dest": "type_name [19441,19448]"
    },
    {
      "src": "identifier: nonce [23720,23725]",
      "dest": "identifier: nonce [23720,23725]"
    },
    {
      "src": "(: ( [23925,23926]",
      "dest": "(: ( [23925,23926]"
    },
    {
      "src": "return: return [18183,18189]",
      "dest": "return: return [18183,18189]"
    },
    {
      "src": "identifier: IERC20 [27597,27603]",
      "dest": "identifier: IERC20 [27597,27603]"
    },
    {
      "src": "type_name [24540,24545]",
      "dest": "type_name [24540,24545]"
    },
    {
      "src": "primitive_type [24145,24149]",
      "dest": "primitive_type [24145,24149]"
    },
    {
      "src": "identifier: owner [26703,26708]",
      "dest": "identifier: owner [26703,26708]"
    },
    {
      "src": "identifier: errorMessage [6325,6337]",
      "dest": "identifier: errorMessage [6325,6337]"
    },
    {
      "src": "emit: emit [29189,29193]",
      "dest": "emit: emit [29262,29266]"
    },
    {
      "src": "return_type_definition [25132,25154]",
      "dest": "return_type_definition [25132,25154]"
    },
    {
      "src": "type_name [6702,6706]",
      "dest": "type_name [6702,6706]"
    },
    {
      "src": "): ) [29426,29427]",
      "dest": "): ) [29499,29500]"
    },
    {
      "src": "function: function [25232,25240]",
      "dest": "function: function [25232,25240]"
    },
    {
      "src": "string [14338,14379]",
      "dest": "string [14338,14379]"
    },
    {
      "src": "binary_expression [11752,11769]",
      "dest": "binary_expression [11752,11769]"
    },
    {
      "src": "identifier: to [25394,25396]",
      "dest": "identifier: to [25394,25396]"
    },
    {
      "src": "==: == [29748,29750]",
      "dest": "==: == [29821,29823]"
    },
    {
      "src": "solidity_version_comparison_operator [21856,21858]",
      "dest": "solidity_version_comparison_operator [21856,21858]"
    },
    {
      "src": "}: } [16174,16175]",
      "dest": "}: } [16174,16175]"
    },
    {
      "src": "primitive_type [17026,17030]",
      "dest": "primitive_type [17026,17030]"
    },
    {
      "src": "member_expression [27430,27448]",
      "dest": "member_expression [27430,27448]"
    },
    {
      "src": "type_name [16047,16051]",
      "dest": "type_name [16047,16051]"
    },
    {
      "src": "primitive_type [26218,26225]",
      "dest": "primitive_type [26218,26225]"
    },
    {
      "src": "modifier: modifier [13644,13652]",
      "dest": "modifier: modifier [13644,13652]"
    },
    {
      "src": ":: : [28900,28901]",
      "dest": ":: : [28973,28974]"
    },
    {
      "src": "): ) [28619,28620]",
      "dest": "): ) [28692,28693]"
    },
    {
      "src": "{: { [17806,17807]",
      "dest": "{: { [17806,17807]"
    },
    {
      "src": "primitive_type [27464,27470]",
      "dest": "primitive_type [27464,27470]"
    },
    {
      "src": "=>: => [26629,26631]",
      "dest": "=>: => [26629,26631]"
    },
    {
      "src": "return: return [4085,4091]",
      "dest": "return: return [4085,4091]"
    },
    {
      "src": "): ) [18139,18140]",
      "dest": "): ) [18139,18140]"
    },
    {
      "src": "solidity_version: 0.8.2 [8502,8507]",
      "dest": "solidity_version: 0.8.2 [8502,8507]"
    },
    {
      "src": "{: { [6850,6851]",
      "dest": "{: { [6850,6851]"
    },
    {
      "src": "(: ( [21966,21967]",
      "dest": "(: ( [21966,21967]"
    },
    {
      "src": "variable_declaration_statement [27403,27451]",
      "dest": "variable_declaration_statement [27403,27451]"
    },
    {
      "src": "): ) [25224,25225]",
      "dest": "): ) [25224,25225]"
    },
    {
      "src": "): ) [16060,16061]",
      "dest": "): ) [16060,16061]"
    },
    {
      "src": "identifier: errorMessage [20017,20029]",
      "dest": "identifier: errorMessage [20017,20029]"
    },
    {
      "src": "pure: pure [17361,17365]",
      "dest": "pure: pure [17361,17365]"
    },
    {
      "src": "<: < [28727,28728]",
      "dest": "<: < [28800,28801]"
    },
    {
      "src": "): ) [11747,11748]",
      "dest": "): ) [11747,11748]"
    },
    {
      "src": "memory: memory [3565,3571]",
      "dest": "memory: memory [3565,3571]"
    },
    {
      "src": "number_literal: 1 [11768,11769]",
      "dest": "number_literal: 1 [11768,11769]"
    },
    {
      "src": "!: ! [13197,13198]",
      "dest": "!: ! [13197,13198]"
    },
    {
      "src": "): ) [1294,1295]",
      "dest": "): ) [1294,1295]"
    },
    {
      "src": "pragma: pragma [15091,15097]",
      "dest": "pragma: pragma [15091,15097]"
    },
    {
      "src": "identifier: success [28343,28350]",
      "dest": "identifier: success [28402,28409]"
    },
    {
      "src": "visibility [2529,2537]",
      "dest": "visibility [2529,2537]"
    },
    {
      "src": "type_name [6678,6685]",
      "dest": "type_name [6678,6685]"
    },
    {
      "src": "block_statement [29014,29123]",
      "dest": "block_statement [29087,29196]"
    },
    {
      "src": "identifier: value [28122,28127]",
      "dest": "identifier: value [28122,28127]"
    },
    {
      "src": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [16579,16650]",
      "dest": "comment: // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522 [16579,16650]"
    },
    {
      "src": "identifier: errorMessage [7231,7243]",
      "dest": "identifier: errorMessage [7231,7243]"
    },
    {
      "src": "function_body [27014,27159]",
      "dest": "function_body [27014,27159]"
    },
    {
      "src": "comment: // Builds a prefixed hash to mimic the behavior of eth_sign. [23753,23813]",
      "dest": "comment: // Builds a prefixed hash to mimic the behavior of eth_sign. [23753,23813]"
    },
    {
      "src": "number_literal: 0 [28722,28723]",
      "dest": "number_literal: 0 [28795,28796]"
    },
    {
      "src": "if_statement [16096,16125]",
      "dest": "if_statement [16096,16125]"
    },
    {
      "src": "identifier: value [27909,27914]",
      "dest": "identifier: value [27909,27914]"
    },
    {
      "src": "{: { [16062,16063]",
      "dest": "{: { [16062,16063]"
    },
    {
      "src": "function_body [14708,14744]",
      "dest": "function_body [14708,14744]"
    },
    {
      "src": "variable_declaration [23342,23354]",
      "dest": "variable_declaration [23342,23354]"
    },
    {
      "src": "): ) [20034,20035]",
      "dest": "): ) [20034,20035]"
    },
    {
      "src": "pragma: pragma [21841,21847]",
      "dest": "pragma: pragma [21841,21847]"
    },
    {
      "src": "uint8: uint8 [14460,14465]",
      "dest": "uint8: uint8 [14460,14465]"
    },
    {
      "src": "identifier: amount [26429,26435]",
      "dest": "identifier: amount [26429,26435]"
    },
    {
      "src": ",: , [26292,26293]",
      "dest": ",: , [26292,26293]"
    },
    {
      "src": "): ) [15793,15794]",
      "dest": "): ) [15793,15794]"
    },
    {
      "src": "): ) [6825,6826]",
      "dest": "): ) [6825,6826]"
    },
    {
      "src": ":=: := [22207,22209]",
      "dest": ":=: := [22207,22209]"
    },
    {
      "src": "variable_declaration [5296,5308]",
      "dest": "variable_declaration [5296,5308]"
    },
    {
      "src": "variable_declaration_statement [24540,24570]",
      "dest": "variable_declaration_statement [24540,24570]"
    },
    {
      "src": "boolean_literal [16760,16765]",
      "dest": "boolean_literal [16760,16765]"
    },
    {
      "src": "call_argument [23252,23253]",
      "dest": "call_argument [23252,23253]"
    },
    {
      "src": "return_statement [17816,17829]",
      "dest": "return_statement [17816,17829]"
    },
    {
      "src": "parameter [6757,6783]",
      "dest": "parameter [6757,6783]"
    },
    {
      "src": "visibility [25413,25421]",
      "dest": "visibility [25413,25421]"
    },
    {
      "src": "identifier: data [5695,5699]",
      "dest": "identifier: data [5695,5699]"
    },
    {
      "src": "view: view [5710,5714]",
      "dest": "view: view [5710,5714]"
    },
    {
      "src": "call_argument [3663,3664]",
      "dest": "call_argument [3663,3664]"
    },
    {
      "src": "parameter [25386,25396]",
      "dest": "parameter [25386,25396]"
    },
    {
      "src": "identifier: token [29165,29170]",
      "dest": "identifier: token [29238,29243]"
    },
    {
      "src": "call_argument [13197,13237]",
      "dest": "call_argument [13197,13237]"
    },
    {
      "src": "number_literal: 0 [17084,17085]",
      "dest": "number_literal: 0 [17084,17085]"
    },
    {
      "src": "primitive_type [2486,2501]",
      "dest": "primitive_type [2486,2501]"
    },
    {
      "src": "{: { [13179,13180]",
      "dest": "{: { [13179,13180]"
    },
    {
      "src": "(: ( [14909,14910]",
      "dest": "(: ( [14909,14910]"
    },
    {
      "src": "if: if [16096,16098]",
      "dest": "if: if [16096,16098]"
    },
    {
      "src": "{: { [28296,28297]",
      "dest": "{: { [28343,28344]"
    },
    {
      "src": "call_argument [7735,7745]",
      "dest": "call_argument [7735,7745]"
    },
    {
      "src": "pure: pure [18878,18882]",
      "dest": "pure: pure [18878,18882]"
    },
    {
      "src": "primitive_type [22142,22149]",
      "dest": "primitive_type [22142,22149]"
    },
    {
      "src": ",: , [23120,23121]",
      "dest": ",: , [23120,23121]"
    },
    {
      "src": "true [16683,16687]",
      "dest": "true [16683,16687]"
    },
    {
      "src": "identifier: a [15747,15748]",
      "dest": "identifier: a [15747,15748]"
    },
    {
      "src": ",: , [24296,24297]",
      "dest": ",: , [24296,24297]"
    },
    {
      "src": "function: function [21534,21542]",
      "dest": "function: function [21534,21542]"
    },
    {
      "src": ",: , [16765,16766]",
      "dest": ",: , [16765,16766]"
    },
    {
      "src": "(: ( [3949,3950]",
      "dest": "(: ( [3949,3950]"
    },
    {
      "src": "string_literal [23160,23195]",
      "dest": "string_literal [23160,23195]"
    },
    {
      "src": "type_name [24027,24034]",
      "dest": "type_name [24027,24034]"
    },
    {
      "src": ",: , [24042,24043]",
      "dest": ",: , [24042,24043]"
    },
    {
      "src": "function_body [29612,29652]",
      "dest": "function_body [29685,29725]"
    },
    {
      "src": "primitive_type [21988,22003]",
      "dest": "primitive_type [21988,22003]"
    },
    {
      "src": "using: using [21904,21909]",
      "dest": "using: using [21904,21909]"
    },
    {
      "src": "return_type_definition [25212,25225]",
      "dest": "return_type_definition [25212,25225]"
    },
    {
      "src": "identifier: amount [2581,2587]",
      "dest": "identifier: amount [2581,2587]"
    },
    {
      "src": "==: == [16669,16671]",
      "dest": "==: == [16669,16671]"
    },
    {
      "src": "identifier: feesCollected [28388,28401]",
      "dest": "identifier: feesCollected [28461,28474]"
    },
    {
      "src": "internal: internal [4043,4051]",
      "dest": "internal: internal [4043,4051]"
    },
    {
      "src": "assignment_expression [29136,29175]",
      "dest": "assignment_expression [29209,29248]"
    },
    {
      "src": "function: function [25289,25297]",
      "dest": "function: function [25289,25297]"
    },
    {
      "src": "{: { [6177,6178]",
      "dest": "{: { [6177,6178]"
    },
    {
      "src": "): ) [28253,28254]",
      "dest": "): ) [28296,28297]"
    },
    {
      "src": "parameter [16002,16011]",
      "dest": "parameter [16002,16011]"
    },
    {
      "src": "type_cast_expression [27378,27388]",
      "dest": "type_cast_expression [27378,27388]"
    },
    {
      "src": "memory: memory [5730,5736]",
      "dest": "memory: memory [5730,5736]"
    },
    {
      "src": "tuple_expression [17094,17104]",
      "dest": "tuple_expression [17094,17104]"
    },
    {
      "src": "(: ( [5773,5774]",
      "dest": "(: ( [5773,5774]"
    },
    {
      "src": "): ) [28282,28283]",
      "dest": "): ) [28329,28330]"
    },
    {
      "src": "): ) [29781,29782]",
      "dest": "): ) [29854,29855]"
    },
    {
      "src": "private: private [10996,11003]",
      "dest": "private: private [10996,11003]"
    },
    {
      "src": "): ) [7603,7604]",
      "dest": "): ) [7603,7604]"
    },
    {
      "src": "{: { [7965,7966]",
      "dest": "{: { [7965,7966]"
    },
    {
      "src": "return_type_definition [20050,20067]",
      "dest": "return_type_definition [20050,20067]"
    },
    {
      "src": "type_name [23659,23666]",
      "dest": "type_name [23659,23666]"
    },
    {
      "src": "\": \" [23194,23195]",
      "dest": "\": \" [23194,23195]"
    },
    {
      "src": "): ) [28669,28670]",
      "dest": "): ) [28742,28743]"
    },
    {
      "src": "type_name [18164,18171]",
      "dest": "type_name [18164,18171]"
    },
    {
      "src": "type_name [17032,17039]",
      "dest": "type_name [17032,17039]"
    },
    {
      "src": "): ) [14914,14915]",
      "dest": "): ) [14914,14915]"
    },
    {
      "src": "call_argument [7103,7134]",
      "dest": "call_argument [7103,7134]"
    },
    {
      "src": "\": \" [2770,2771]",
      "dest": "\": \" [2770,2771]"
    },
    {
      "src": "string [11784,11832]",
      "dest": "string [11784,11832]"
    },
    {
      "src": "function_body [2538,2779]",
      "dest": "function_body [2538,2779]"
    },
    {
      "src": "visibility [25624,25632]",
      "dest": "visibility [25624,25632]"
    },
    {
      "src": "number_literal: 1 [23252,23253]",
      "dest": "number_literal: 1 [23252,23253]"
    },
    {
      "src": "modifier: modifier [26665,26673]",
      "dest": "modifier: modifier [26665,26673]"
    },
    {
      "src": "identifier: spottingInBatch [28571,28586]",
      "dest": "identifier: spottingInBatch [28644,28659]"
    },
    {
      "src": "identifier: require [26695,26702]",
      "dest": "identifier: require [26695,26702]"
    },
    {
      "src": "function_definition [18834,18930]",
      "dest": "function_definition [18834,18930]"
    },
    {
      "src": "for: for [21919,21922]",
      "dest": "for: for [21919,21922]"
    },
    {
      "src": "parameter [21556,21565]",
      "dest": "parameter [21556,21565]"
    },
    {
      "src": "): ) [27505,27506]",
      "dest": "): ) [27505,27506]"
    },
    {
      "src": "comment: // otherwise we already know that it was a contract [7007,7058]",
      "dest": "comment: // otherwise we already know that it was a contract [7007,7058]"
    },
    {
      "src": "): ) [11697,11698]",
      "dest": "): ) [11697,11698]"
    },
    {
      "src": "!=: != [16746,16748]",
      "dest": "!=: != [16746,16748]"
    },
    {
      "src": "return_type_definition [24460,24483]",
      "dest": "return_type_definition [24460,24483]"
    },
    {
      "src": "identifier: amount [26316,26322]",
      "dest": "identifier: amount [26316,26322]"
    },
    {
      "src": "string [28984,28994]",
      "dest": "string [29057,29067]"
    },
    {
      "src": "returns: returns [20050,20057]",
      "dest": "returns: returns [20050,20057]"
    },
    {
      "src": "type_name [3959,3966]",
      "dest": "type_name [3959,3966]"
    },
    {
      "src": "bool: bool [6702,6706]",
      "dest": "bool: bool [6702,6706]"
    },
    {
      "src": "identifier: isContract [1239,1249]",
      "dest": "identifier: isContract [1239,1249]"
    },
    {
      "src": "identifier: i [28745,28746]",
      "dest": "identifier: i [28818,28819]"
    },
    {
      "src": "): ) [23119,23120]",
      "dest": "): ) [23119,23120]"
    },
    {
      "src": "identifier: returndata [7735,7745]",
      "dest": "identifier: returndata [7735,7745]"
    },
    {
      "src": "identifier: target [6296,6302]",
      "dest": "identifier: target [6296,6302]"
    },
    {
      "src": "comment: // This version of SafeMath should only be used with Solidity 0.8 or later, [15127,15202]",
      "dest": "comment: // This version of SafeMath should only be used with Solidity 0.8 or later, [15127,15202]"
    },
    {
      "src": "}: } [24919,24920]",
      "dest": "}: } [24919,24920]"
    },
    {
      "src": "identifier: msg [28078,28081]",
      "dest": "identifier: msg [28078,28081]"
    },
    {
      "src": "identifier: collectedFeesThreshold [25920,25942]",
      "dest": "identifier: collectedFeesThreshold [25920,25942]"
    },
    {
      "src": "parameter [15692,15699]",
      "dest": "parameter [15692,15699]"
    },
    {
      "src": "identifier: Initialized [11125,11136]",
      "dest": "identifier: Initialized [11125,11136]"
    },
    {
      "src": "identifier: target [3551,3557]",
      "dest": "identifier: target [3551,3557]"
    },
    {
      "src": ",: , [29280,29281]",
      "dest": ",: , [29353,29354]"
    },
    {
      "src": "bytes: bytes [7800,7805]",
      "dest": "bytes: bytes [7800,7805]"
    },
    {
      "src": "identifier: encodePacked [23913,23925]",
      "dest": "identifier: encodePacked [23913,23925]"
    },
    {
      "src": "identifier: allowances [25298,25308]",
      "dest": "identifier: allowances [25298,25308]"
    },
    {
      "src": "binary_expression [17823,17828]",
      "dest": "binary_expression [17823,17828]"
    },
    {
      "src": "type_name [19396,19403]",
      "dest": "type_name [19396,19403]"
    },
    {
      "src": "): ) [24122,24123]",
      "dest": "): ) [24122,24123]"
    },
    {
      "src": "[: [ [28599,28600]",
      "dest": "[: [ [28672,28673]"
    },
    {
      "src": ",: , [16150,16151]",
      "dest": ",: , [16150,16151]"
    },
    {
      "src": "returns: returns [18883,18890]",
      "dest": "returns: returns [18883,18890]"
    },
    {
      "src": "): ) [2647,2648]",
      "dest": "): ) [2647,2648]"
    },
    {
      "src": "identifier: symbol [26914,26920]",
      "dest": "identifier: symbol [26914,26920]"
    },
    {
      "src": "member_expression [28078,28087]",
      "dest": "member_expression [28078,28087]"
    },
    {
      "src": "(: ( [11741,11742]",
      "dest": "(: ( [11741,11742]"
    },
    {
      "src": "string [13239,13287]",
      "dest": "string [13239,13287]"
    },
    {
      "src": "primitive_type [6056,6063]",
      "dest": "primitive_type [6056,6063]"
    },
    {
      "src": "call_expression [6269,6338]",
      "dest": "call_expression [6269,6338]"
    },
    {
      "src": "string_literal [28351,28373]",
      "dest": "string_literal [28410,28432]"
    },
    {
      "src": "return: return [20859,20865]",
      "dest": "return: return [20859,20865]"
    },
    {
      "src": "if_statement [14390,14528]",
      "dest": "if_statement [14390,14528]"
    },
    {
      "src": "contract_body [265,8325]",
      "dest": "contract_body [265,8325]"
    },
    {
      "src": "primitive_type [7539,7544]",
      "dest": "primitive_type [7539,7544]"
    },
    {
      "src": "number_literal: 0 [16689,16690]",
      "dest": "number_literal: 0 [16689,16690]"
    },
    {
      "src": ",: , [6311,6312]",
      "dest": ",: , [6311,6312]"
    },
    {
      "src": "parameter [20003,20029]",
      "dest": "parameter [20003,20029]"
    },
    {
      "src": "visibility [25990,25996]",
      "dest": "visibility [25990,25996]"
    },
    {
      "src": "identifier: b [18537,18538]",
      "dest": "identifier: b [18537,18538]"
    },
    {
      "src": "memory: memory [7806,7812]",
      "dest": "memory: memory [7806,7812]"
    },
    {
      "src": "solidity_version_comparison_operator [160,162]",
      "dest": "solidity_version_comparison_operator [160,162]"
    },
    {
      "src": ",: , [29358,29359]",
      "dest": ",: , [29431,29432]"
    },
    {
      "src": "primitive_type [25356,25360]",
      "dest": "primitive_type [25356,25360]"
    },
    {
      "src": "): ) [21625,21626]",
      "dest": "): ) [21625,21626]"
    },
    {
      "src": "identifier: a [19973,19974]",
      "dest": "identifier: a [19973,19974]"
    },
    {
      "src": "): ) [24352,24353]",
      "dest": "): ) [24352,24353]"
    },
    {
      "src": "binary_expression [27967,27990]",
      "dest": "binary_expression [27967,27990]"
    },
    {
      "src": "call_argument [26703,26720]",
      "dest": "call_argument [26703,26720]"
    },
    {
      "src": "string_literal [7103,7134]",
      "dest": "string_literal [7103,7134]"
    },
    {
      "src": "memory: memory [3602,3608]",
      "dest": "memory: memory [3602,3608]"
    },
    {
      "src": "identifier: max [14421,14424]",
      "dest": "identifier: max [14421,14424]"
    },
    {
      "src": "state_variable_declaration [26550,26592]",
      "dest": "state_variable_declaration [26550,26592]"
    },
    {
      "src": ",: , [16990,16991]",
      "dest": ",: , [16990,16991]"
    },
    {
      "src": "]: ] [28075,28076]",
      "dest": "]: ] [28075,28076]"
    },
    {
      "src": "identifier: vault [26823,26828]",
      "dest": "identifier: vault [26823,26828]"
    },
    {
      "src": "): ) [25548,25549]",
      "dest": "): ) [25548,25549]"
    },
    {
      "src": "bytes32: bytes32 [24162,24169]",
      "dest": "bytes32: bytes32 [24162,24169]"
    },
    {
      "src": "string_literal [2681,2683]",
      "dest": "string_literal [2681,2683]"
    },
    {
      "src": ".: . [27753,27754]",
      "dest": ".: . [27753,27754]"
    },
    {
      "src": "payable: payable [25854,25861]",
      "dest": "payable: payable [25854,25861]"
    },
    {
      "src": "internal: internal [1267,1275]",
      "dest": "internal: internal [1267,1275]"
    },
    {
      "src": "solidity: solidity [15098,15106]",
      "dest": "solidity: solidity [15098,15106]"
    },
    {
      "src": "bool: bool [26861,26865]",
      "dest": "bool: bool [26861,26865]"
    },
    {
      "src": "identifier: b [16156,16157]",
      "dest": "identifier: b [16156,16157]"
    },
    {
      "src": "identifier: depositedToken [27779,27793]",
      "dest": "identifier: depositedToken [27779,27793]"
    },
    {
      "src": "member_expression [6229,6246]",
      "dest": "member_expression [6229,6246]"
    },
    {
      "src": "type_name [25249,25256]",
      "dest": "type_name [25249,25256]"
    },
    {
      "src": "visibility [25697,25705]",
      "dest": "visibility [25697,25705]"
    },
    {
      "src": "identifier: _receiver [29584,29593]",
      "dest": "identifier: _receiver [29657,29666]"
    },
    {
      "src": "memory: memory [7634,7640]",
      "dest": "memory: memory [7634,7640]"
    },
    {
      "src": "uint256: uint256 [17763,17770]",
      "dest": "uint256: uint256 [17763,17770]"
    },
    {
      "src": "contract_body [10742,14955]",
      "dest": "contract_body [10742,14955]"
    },
    {
      "src": "string [23926,23960]",
      "dest": "string [23926,23960]"
    },
    {
      "src": "identifier: x [28815,28816]",
      "dest": "identifier: x [28888,28889]"
    },
    {
      "src": "primitive_type [25948,25955]",
      "dest": "primitive_type [25948,25955]"
    },
    {
      "src": "if: if [28812,28814]",
      "dest": "if: if [28885,28887]"
    },
    {
      "src": ",: , [27806,27807]",
      "dest": ",: , [27806,27807]"
    },
    {
      "src": "^:  ^ [21856,21858]",
      "dest": "^:  ^ [21856,21858]"
    },
    {
      "src": "{: { [27014,27015]",
      "dest": "{: { [27014,27015]"
    },
    {
      "src": ",: , [27927,27928]",
      "dest": ",: , [27927,27928]"
    },
    {
      "src": ",: , [6070,6071]",
      "dest": ",: , [6070,6071]"
    },
    {
      "src": "function_definition [25105,25155]",
      "dest": "function_definition [25105,25155]"
    },
    {
      "src": "struct_expression [5337,5362]",
      "dest": "struct_expression [5337,5362]"
    },
    {
      "src": "mapping: mapping [26550,26557]",
      "dest": "mapping: mapping [26550,26557]"
    },
    {
      "src": "{: { [2665,2666]",
      "dest": "{: { [2665,2666]"
    },
    {
      "src": "call_argument [24355,24374]",
      "dest": "call_argument [24355,24374]"
    },
    {
      "src": "identifier: tokensSymbol [27478,27490]",
      "dest": "identifier: tokensSymbol [27478,27490]"
    },
    {
      "src": "identifier: msg [27967,27970]",
      "dest": "identifier: msg [27967,27970]"
    },
    {
      "src": "primitive_type [22020,22025]",
      "dest": "primitive_type [22020,22025]"
    },
    {
      "src": "identifier: initializer [11571,11582]",
      "dest": "identifier: initializer [11571,11582]"
    },
    {
      "src": "=: = [23381,23382]",
      "dest": "=: = [23381,23382]"
    },
    {
      "src": ",: , [16051,16052]",
      "dest": ",: , [16051,16052]"
    },
    {
      "src": "\": \" [27991,27992]",
      "dest": "\": \" [27991,27992]"
    },
    {
      "src": "return_statement [5748,5829]",
      "dest": "return_statement [5748,5829]"
    },
    {
      "src": "bool: bool [1290,1294]",
      "dest": "bool: bool [1290,1294]"
    },
    {
      "src": ",: , [29387,29388]",
      "dest": ",: , [29460,29461]"
    },
    {
      "src": "): ) [23580,23581]",
      "dest": "): ) [23580,23581]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol) [15016,15089]",
      "dest": "comment: // OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol) [15016,15089]"
    },
    {
      "src": "number_literal: 1 [28073,28074]",
      "dest": "number_literal: 1 [28073,28074]"
    },
    {
      "src": "parameter [22999,23009]",
      "dest": "parameter [22999,23009]"
    },
    {
      "src": "visibility [25198,25206]",
      "dest": "visibility [25198,25206]"
    },
    {
      "src": "identifier: require [2548,2555]",
      "dest": "identifier: require [2548,2555]"
    },
    {
      "src": "revert: revert [8286,8292]",
      "dest": "revert: revert [8286,8292]"
    },
    {
      "src": "contract_body [15483,21766]",
      "dest": "contract_body [15483,21766]"
    },
    {
      "src": "): ) [5333,5334]",
      "dest": "): ) [5333,5334]"
    },
    {
      "src": "identifier: depositer [29221,29230]",
      "dest": "identifier: depositer [29294,29303]"
    },
    {
      "src": "): ) [14285,14286]",
      "dest": "): ) [14285,14286]"
    },
    {
      "src": "]: ] [23739,23740]",
      "dest": "]: ] [23739,23740]"
    },
    {
      "src": "identifier: collectedFeesThreshold [29509,29531]",
      "dest": "identifier: collectedFeesThreshold [29582,29604]"
    },
    {
      "src": "visibility [19418,19426]",
      "dest": "visibility [19418,19426]"
    },
    {
      "src": "identifier: nonce [23703,23708]",
      "dest": "identifier: nonce [23703,23708]"
    },
    {
      "src": "identifier: Transactions [28764,28776]",
      "dest": "identifier: Transactions [28837,28849]"
    },
    {
      "src": "==: == [28823,28825]",
      "dest": "==: == [28896,28898]"
    },
    {
      "src": "member_expression [29273,29280]",
      "dest": "member_expression [29346,29353]"
    },
    {
      "src": "call_argument [3649,3655]",
      "dest": "call_argument [3649,3655]"
    },
    {
      "src": "call_argument [6325,6337]",
      "dest": "call_argument [6325,6337]"
    },
    {
      "src": "type_name [26569,26573]",
      "dest": "type_name [26569,26573]"
    },
    {
      "src": "type_name [16053,16060]",
      "dest": "type_name [16053,16060]"
    },
    {
      "src": "\": \" [23508,23509]",
      "dest": "\": \" [23508,23509]"
    },
    {
      "src": "identifier: success [7522,7529]",
      "dest": "identifier: success [7522,7529]"
    },
    {
      "src": "call_argument [12049,12050]",
      "dest": "call_argument [12049,12050]"
    },
    {
      "src": "): ) [7663,7664]",
      "dest": "): ) [7663,7664]"
    },
    {
      "src": "call_expression [29033,29048]",
      "dest": "call_expression [29106,29121]"
    },
    {
      "src": "event_paramater [26218,26231]",
      "dest": "event_paramater [26218,26231]"
    },
    {
      "src": "[: [ [29324,29325]",
      "dest": "[: [ [29397,29398]"
    },
    {
      "src": "(: ( [25566,25567]",
      "dest": "(: ( [25566,25567]"
    },
    {
      "src": "return_type_definition [5171,5193]",
      "dest": "return_type_definition [5171,5193]"
    },
    {
      "src": "false [16760,16765]",
      "dest": "false [16760,16765]"
    },
    {
      "src": "identifier: _msgSender [27624,27634]",
      "dest": "identifier: _msgSender [27624,27634]"
    },
    {
      "src": "pragma: pragma [145,151]",
      "dest": "pragma: pragma [145,151]"
    },
    {
      "src": "true: true [16146,16150]",
      "dest": "true: true [16146,16150]"
    },
    {
      "src": "call_argument [24310,24314]",
      "dest": "call_argument [24310,24314]"
    },
    {
      "src": "{: { [23048,23049]",
      "dest": "{: { [23048,23049]"
    },
    {
      "src": "function_definition [24416,24926]",
      "dest": "function_definition [24416,24926]"
    },
    {
      "src": "parameter [6163,6175]",
      "dest": "parameter [6163,6175]"
    },
    {
      "src": "view: view [24131,24135]",
      "dest": "view: view [24131,24135]"
    },
    {
      "src": "{: { [23882,23883]",
      "dest": "{: { [23882,23883]"
    },
    {
      "src": "address: address [2486,2493]",
      "dest": "address: address [2486,2493]"
    },
    {
      "src": "uint: uint [25220,25224]",
      "dest": "uint: uint [25220,25224]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [18936,19378]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting when dividing by zero.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [18936,19378]"
    },
    {
      "src": "address: address [25386,25393]",
      "dest": "address: address [25386,25393]"
    },
    {
      "src": "string [24355,24374]",
      "dest": "string [24355,24374]"
    },
    {
      "src": "parameter [20680,20689]",
      "dest": "parameter [20680,20689]"
    },
    {
      "src": "return_statement [14926,14947]",
      "dest": "return_statement [14926,14947]"
    },
    {
      "src": "yul_decimal_number: 32 [8209,8211]",
      "dest": "yul_decimal_number: 32 [8209,8211]"
    },
    {
      "src": "{: { [28473,28474]",
      "dest": "{: { [28546,28547]"
    },
    {
      "src": "&&: && [13212,13214]",
      "dest": "&&: && [13212,13214]"
    },
    {
      "src": "): ) [28190,28191]",
      "dest": "): ) [28190,28191]"
    },
    {
      "src": "identifier: a [17823,17824]",
      "dest": "identifier: a [17823,17824]"
    },
    {
      "src": "(: ( [26683,26684]",
      "dest": "(: ( [26683,26684]"
    },
    {
      "src": "primitive_type [5055,5062]",
      "dest": "primitive_type [5055,5062]"
    },
    {
      "src": "(: ( [14500,14501]",
      "dest": "(: ( [14500,14501]"
    },
    {
      "src": "call_expression [28960,28995]",
      "dest": "call_expression [29033,29068]"
    },
    {
      "src": "return: return [16675,16681]",
      "dest": "return: return [16675,16681]"
    },
    {
      "src": "bool: bool [26409,26413]",
      "dest": "bool: bool [26409,26413]"
    },
    {
      "src": "(: ( [11881,11882]",
      "dest": "(: ( [11881,11882]"
    },
    {
      "src": "identifier: value [5356,5361]",
      "dest": "identifier: value [5356,5361]"
    },
    {
      "src": ".: . [29406,29407]",
      "dest": ".: . [29479,29480]"
    },
    {
      "src": ",: , [7562,7563]",
      "dest": ",: , [7562,7563]"
    },
    {
      "src": "\": \" [28318,28319]",
      "dest": "\": \" [28373,28374]"
    },
    {
      "src": "block_statement [14426,14528]",
      "dest": "block_statement [14426,14528]"
    },
    {
      "src": "(: ( [28268,28269]",
      "dest": "(: ( [28315,28316]"
    },
    {
      "src": "\": \" [28939,28940]",
      "dest": "\": \" [29012,29013]"
    },
    {
      "src": "solidity: solidity [24957,24965]",
      "dest": "solidity: solidity [24957,24965]"
    },
    {
      "src": "identifier: sender [24501,24507]",
      "dest": "identifier: sender [24501,24507]"
    },
    {
      "src": "primitive_type [26394,26401]",
      "dest": "primitive_type [26394,26401]"
    },
    {
      "src": "primitive_type [1250,1257]",
      "dest": "primitive_type [1250,1257]"
    },
    {
      "src": "parameter [18892,18899]",
      "dest": "parameter [18892,18899]"
    },
    {
      "src": "): ) [28320,28321]",
      "dest": "): ) [28375,28376]"
    },
    {
      "src": "event_paramater [11137,11150]",
      "dest": "event_paramater [11137,11150]"
    },
    {
      "src": "identifier: transferFrom [25437,25449]",
      "dest": "identifier: transferFrom [25437,25449]"
    },
    {
      "src": "identifier: symbol [27507,27513]",
      "dest": "identifier: symbol [27507,27513]"
    },
    {
      "src": "identifier: token [26846,26851]",
      "dest": "identifier: token [26846,26851]"
    },
    {
      "src": "comment: // mapping(address=>bool) public genuineDeposit; [26065,26113]",
      "dest": "comment: // mapping(address=>bool) public genuineDeposit; [26065,26113]"
    },
    {
      "src": "): ) [22043,22044]",
      "dest": "): ) [22043,22044]"
    },
    {
      "src": "identifier: _revert [7727,7734]",
      "dest": "identifier: _revert [7727,7734]"
    },
    {
      "src": "type_name [18847,18854]",
      "dest": "type_name [18847,18854]"
    },
    {
      "src": "identifier: Initialized [14489,14500]",
      "dest": "identifier: Initialized [14489,14500]"
    },
    {
      "src": "true [28545,28549]",
      "dest": "true [28618,28622]"
    },
    {
      "src": "bytes32: bytes32 [23873,23880]",
      "dest": "bytes32: bytes32 [23873,23880]"
    },
    {
      "src": "primitive_type [19396,19403]",
      "dest": "primitive_type [19396,19403]"
    },
    {
      "src": "identifier: success [28274,28281]",
      "dest": "identifier: success [28321,28328]"
    },
    {
      "src": "primitive_type [11137,11142]",
      "dest": "primitive_type [11137,11142]"
    },
    {
      "src": "false: false [17095,17100]",
      "dest": "false: false [17095,17100]"
    },
    {
      "src": "comment: // of the constructor execution. [1471,1503]",
      "dest": "comment: // of the constructor execution. [1471,1503]"
    },
    {
      "src": "primitive_type [26437,26444]",
      "dest": "primitive_type [26437,26444]"
    },
    {
      "src": "address: address [22058,22065]",
      "dest": "address: address [22058,22065]"
    },
    {
      "src": "identifier: userAddress [23438,23449]",
      "dest": "identifier: userAddress [23438,23449]"
    },
    {
      "src": "{: { [3610,3611]",
      "dest": "{: { [3610,3611]"
    },
    {
      "src": "call_argument [27895,27927]",
      "dest": "call_argument [27895,27927]"
    },
    {
      "src": "identifier: isSpotter [28523,28532]",
      "dest": "identifier: isSpotter [28596,28605]"
    },
    {
      "src": "): ) [24482,24483]",
      "dest": "): ) [24482,24483]"
    },
    {
      "src": "\": \" [2681,2682]",
      "dest": "\": \" [2681,2682]"
    },
    {
      "src": ",: , [22929,22930]",
      "dest": ",: , [22929,22930]"
    },
    {
      "src": "identifier: getNonce [23650,23658]",
      "dest": "identifier: getNonce [23650,23658]"
    },
    {
      "src": "type_name [25524,25531]",
      "dest": "type_name [25524,25531]"
    },
    {
      "src": ",: , [18471,18472]",
      "dest": ",: , [18471,18472]"
    },
    {
      "src": "public: public [28466,28472]",
      "dest": "public: public [28539,28545]"
    },
    {
      "src": "type_name [21650,21657]",
      "dest": "type_name [21650,21657]"
    },
    {
      "src": "false: false [12013,12018]",
      "dest": "false: false [12013,12018]"
    },
    {
      "src": "pure: pure [21636,21640]",
      "dest": "pure: pure [21636,21640]"
    },
    {
      "src": "struct_member [26881,26898]",
      "dest": "struct_member [26881,26898]"
    },
    {
      "src": "}: } [2778,2779]",
      "dest": "}: } [2778,2779]"
    },
    {
      "src": "=: = [29172,29173]",
      "dest": "=: = [29245,29246]"
    },
    {
      "src": "variable_declaration [27464,27490]",
      "dest": "variable_declaration [27464,27490]"
    },
    {
      "src": "identifier: signer [24273,24279]",
      "dest": "identifier: signer [24273,24279]"
    },
    {
      "src": "variable_declaration_statement [16705,16723]",
      "dest": "variable_declaration_statement [16705,16723]"
    },
    {
      "src": "meta_type_expression [14409,14420]",
      "dest": "meta_type_expression [14409,14420]"
    },
    {
      "src": "parameter [14701,14706]",
      "dest": "parameter [14701,14706]"
    },
    {
      "src": "primitive_type [29684,29699]",
      "dest": "primitive_type [29757,29772]"
    },
    {
      "src": "}: } [7706,7707]",
      "dest": "}: } [7706,7707]"
    },
    {
      "src": "function: function [17739,17747]",
      "dest": "function: function [17739,17747]"
    },
    {
      "src": "(: ( [7734,7735]",
      "dest": "(: ( [7734,7735]"
    },
    {
      "src": "identifier: b [18922,18923]",
      "dest": "identifier: b [18922,18923]"
    },
    {
      "src": "identifier: div [20667,20670]",
      "dest": "identifier: div [20667,20670]"
    },
    {
      "src": "identifier: account [1258,1265]",
      "dest": "identifier: account [1258,1265]"
    },
    {
      "src": "if: if [6864,6866]",
      "dest": "if: if [6864,6866]"
    },
    {
      "src": "(: ( [22118,22119]",
      "dest": "(: ( [22118,22119]"
    },
    {
      "src": "type_name [13164,13169]",
      "dest": "type_name [13164,13169]"
    },
    {
      "src": "primitive_type [24511,24518]",
      "dest": "primitive_type [24511,24518]"
    },
    {
      "src": "member_expression [24599,24607]",
      "dest": "member_expression [24599,24607]"
    },
    {
      "src": "call_argument [23479,23509]",
      "dest": "call_argument [23479,23509]"
    },
    {
      "src": "\": \" [23160,23161]",
      "dest": "\": \" [23160,23161]"
    },
    {
      "src": "): ) [20749,20750]",
      "dest": "): ) [20749,20750]"
    },
    {
      "src": ",: , [17379,17380]",
      "dest": ",: , [17379,17380]"
    },
    {
      "src": "call_argument [2711,2771]",
      "dest": "call_argument [2711,2771]"
    },
    {
      "src": ",: , [22961,22962]",
      "dest": ",: , [22961,22962]"
    },
    {
      "src": "call_argument [28318,28320]",
      "dest": "call_argument [28373,28375]"
    },
    {
      "src": "]: ] [27701,27702]",
      "dest": "]: ] [27701,27702]"
    },
    {
      "src": "visibility [15663,15671]",
      "dest": "visibility [15663,15671]"
    },
    {
      "src": ",: , [2645,2646]",
      "dest": ",: , [2645,2646]"
    },
    {
      "src": ".: . [29220,29221]",
      "dest": ".: . [29293,29294]"
    },
    {
      "src": "primitive_type [16992,16999]",
      "dest": "primitive_type [16992,16999]"
    },
    {
      "src": "identifier: chainID [24226,24233]",
      "dest": "identifier: chainID [24226,24233]"
    },
    {
      "src": "primitive_type [26838,26845]",
      "dest": "primitive_type [26838,26845]"
    },
    {
      "src": "function_definition [25506,25573]",
      "dest": "function_definition [25506,25573]"
    },
    {
      "src": "member_expression [6868,6885]",
      "dest": "member_expression [6868,6885]"
    },
    {
      "src": "true [16791,16795]",
      "dest": "true [16791,16795]"
    },
    {
      "src": "primitive_type [25536,25540]",
      "dest": "primitive_type [25536,25540]"
    },
    {
      "src": "primitive_type [7800,7805]",
      "dest": "primitive_type [7800,7805]"
    },
    {
      "src": "external: external [29481,29489]",
      "dest": "external: external [29554,29562]"
    },
    {
      "src": "identifier: _msgSender [28160,28170]",
      "dest": "identifier: _msgSender [28160,28170]"
    },
    {
      "src": "payable: payable [27223,27230]",
      "dest": "payable: payable [27223,27230]"
    },
    {
      "src": "identifier: i [28796,28797]",
      "dest": "identifier: i [28869,28870]"
    },
    {
      "src": "identifier: _initializing [13198,13211]",
      "dest": "identifier: _initializing [13198,13211]"
    },
    {
      "src": "): ) [27449,27450]",
      "dest": "): ) [27449,27450]"
    },
    {
      "src": "payable: payable [27032,27039]",
      "dest": "payable: payable [27032,27039]"
    },
    {
      "src": ",: , [3655,3656]",
      "dest": ",: , [3655,3656]"
    },
    {
      "src": "internal: internal [20036,20044]",
      "dest": "internal: internal [20036,20044]"
    },
    {
      "src": "uint256: uint256 [22142,22149]",
      "dest": "uint256: uint256 [22142,22149]"
    },
    {
      "src": "(: ( [29057,29058]",
      "dest": "(: ( [29130,29131]"
    },
    {
      "src": "primitive_type [18847,18854]",
      "dest": "primitive_type [18847,18854]"
    },
    {
      "src": "{: { [4656,4657]",
      "dest": "{: { [4656,4657]"
    },
    {
      "src": "if_statement [17075,17105]",
      "dest": "if_statement [17075,17105]"
    },
    {
      "src": "identifier: userAddress [22918,22929]",
      "dest": "identifier: userAddress [22918,22929]"
    },
    {
      "src": "identifier: a [20152,20153]",
      "dest": "identifier: a [20152,20153]"
    },
    {
      "src": "(: ( [28159,28160]",
      "dest": "(: ( [28159,28160]"
    },
    {
      "src": "): ) [23671,23672]",
      "dest": "): ) [23671,23672]"
    },
    {
      "src": "memory: memory [7579,7585]",
      "dest": "memory: memory [7579,7585]"
    },
    {
      "src": "identifier: x [28916,28917]",
      "dest": "identifier: x [28989,28990]"
    },
    {
      "src": "identifier: owner [29793,29798]",
      "dest": "identifier: owner [29866,29871]"
    },
    {
      "src": "identifier: add [23248,23251]",
      "dest": "identifier: add [23248,23251]"
    },
    {
      "src": ",: , [24353,24354]",
      "dest": ",: , [24353,24354]"
    },
    {
      "src": "state_mutability [7614,7618]",
      "dest": "state_mutability [7614,7618]"
    },
    {
      "src": "identifier: _amount [27653,27660]",
      "dest": "identifier: _amount [27653,27660]"
    },
    {
      "src": "returns: returns [5171,5178]",
      "dest": "returns: returns [5171,5178]"
    },
    {
      "src": "assignment_expression [29793,29810]",
      "dest": "assignment_expression [29866,29883]"
    },
    {
      "src": "call_expression [29033,29108]",
      "dest": "call_expression [29106,29181]"
    },
    {
      "src": "call_expression [29729,29782]",
      "dest": "call_expression [29802,29855]"
    },
    {
      "src": "identifier: b [17771,17772]",
      "dest": "identifier: b [17771,17772]"
    },
    {
      "src": "bytes32: bytes32 [22971,22978]",
      "dest": "bytes32: bytes32 [22971,22978]"
    },
    {
      "src": "return_type_definition [22133,22150]",
      "dest": "return_type_definition [22133,22150]"
    },
    {
      "src": "visibility [23011,23017]",
      "dest": "visibility [23011,23017]"
    },
    {
      "src": "function_definition [6633,7261]",
      "dest": "function_definition [6633,7261]"
    },
    {
      "src": "identifier: x [29040,29041]",
      "dest": "identifier: x [29113,29114]"
    },
    {
      "src": "bool: bool [5296,5300]",
      "dest": "bool: bool [5296,5300]"
    },
    {
      "src": "return_statement [17118,17139]",
      "dest": "return_statement [17118,17139]"
    },
    {
      "src": "type_name [6056,6063]",
      "dest": "type_name [6056,6063]"
    },
    {
      "src": "): ) [23600,23601]",
      "dest": "): ) [23600,23601]"
    },
    {
      "src": "type_name [23997,24004]",
      "dest": "type_name [23997,24004]"
    },
    {
      "src": "binary_expression [13215,13237]",
      "dest": "binary_expression [13215,13237]"
    },
    {
      "src": "visibility [22121,22127]",
      "dest": "visibility [22121,22127]"
    },
    {
      "src": "function_definition [1230,1550]",
      "dest": "function_definition [1230,1550]"
    },
    {
      "src": "function_body [17041,17155]",
      "dest": "function_body [17041,17155]"
    },
    {
      "src": "): ) [28512,28513]",
      "dest": "): ) [28585,28586]"
    },
    {
      "src": "type_name [28448,28455]",
      "dest": "type_name [28521,28528]"
    },
    {
      "src": "(: ( [2701,2702]",
      "dest": "(: ( [2701,2702]"
    },
    {
      "src": "address: address [26437,26444]",
      "dest": "address: address [26437,26444]"
    },
    {
      "src": "): ) [23966,23967]",
      "dest": "): ) [23966,23967]"
    },
    {
      "src": "identifier: recipient [2502,2511]",
      "dest": "identifier: recipient [2502,2511]"
    },
    {
      "src": "yul_identifier [8170,8180]",
      "dest": "yul_identifier [8170,8180]"
    },
    {
      "src": "identifier: functionSignature [22944,22961]",
      "dest": "identifier: functionSignature [22944,22961]"
    },
    {
      "src": ">: > [1540,1541]",
      "dest": ">: > [1540,1541]"
    },
    {
      "src": "internal: internal [19418,19426]",
      "dest": "internal: internal [19418,19426]"
    },
    {
      "src": "identifier: b [16100,16101]",
      "dest": "identifier: b [16100,16101]"
    },
    {
      "src": "uint: uint [25260,25264]",
      "dest": "uint: uint [25260,25264]"
    },
    {
      "src": ",: , [26720,26721]",
      "dest": ",: , [26720,26721]"
    },
    {
      "src": "identifier: value [28297,28302]",
      "dest": "identifier: value [28344,28349]"
    },
    {
      "src": "false: false [17444,17449]",
      "dest": "false: false [17444,17449]"
    },
    {
      "src": "identifier: data [3996,4000]",
      "dest": "identifier: data [3996,4000]"
    },
    {
      "src": "primitive_type [26293,26300]",
      "dest": "primitive_type [26293,26300]"
    },
    {
      "src": "binary_expression [17428,17434]",
      "dest": "binary_expression [17428,17434]"
    },
    {
      "src": "type_name [22971,22978]",
      "dest": "type_name [22971,22978]"
    },
    {
      "src": "member_expression [5212,5233]",
      "dest": "member_expression [5212,5233]"
    },
    {
      "src": "bytes: bytes [4642,4647]",
      "dest": "bytes: bytes [4642,4647]"
    },
    {
      "src": "(: ( [5411,5412]",
      "dest": "(: ( [5411,5412]"
    },
    {
      "src": "type_name [3543,3550]",
      "dest": "type_name [3543,3550]"
    },
    {
      "src": "identifier: sigV [23005,23009]",
      "dest": "identifier: sigV [23005,23009]"
    },
    {
      "src": "type_name [5079,5084]",
      "dest": "type_name [5079,5084]"
    },
    {
      "src": "type_name [5682,5687]",
      "dest": "type_name [5682,5687]"
    },
    {
      "src": "variable_declaration_statement [28764,28799]",
      "dest": "variable_declaration_statement [28837,28872]"
    },
    {
      "src": "primitive_type [20718,20724]",
      "dest": "primitive_type [20718,20724]"
    },
    {
      "src": "primitive_type [25873,25880]",
      "dest": "primitive_type [25873,25880]"
    },
    {
      "src": "type_name [26421,26428]",
      "dest": "type_name [26421,26428]"
    },
    {
      "src": "{: { [11585,11586]",
      "dest": "{: { [11585,11586]"
    },
    {
      "src": "string_literal [23479,23509]",
      "dest": "string_literal [23479,23509]"
    },
    {
      "src": "yul_function_call [24775,24848]",
      "dest": "yul_function_call [24775,24848]"
    },
    {
      "src": "primitive_type [28826,28833]",
      "dest": "primitive_type [28899,28906]"
    },
    {
      "src": "}: } [7149,7150]",
      "dest": "}: } [7149,7150]"
    },
    {
      "src": ",: , [21584,21585]",
      "dest": ",: , [21584,21585]"
    },
    {
      "src": ".: . [29086,29087]",
      "dest": ".: . [29159,29160]"
    },
    {
      "src": "call_argument [28984,28994]",
      "dest": "call_argument [29057,29067]"
    },
    {
      "src": "type_name [16339,16346]",
      "dest": "type_name [16339,16346]"
    },
    {
      "src": "address: address [22910,22917]",
      "dest": "address: address [22910,22917]"
    },
    {
      "src": "=: = [28284,28285]",
      "dest": "=: = [28331,28332]"
    },
    {
      "src": ".: . [28736,28737]",
      "dest": ".: . [28809,28810]"
    },
    {
      "src": "pragma_directive [8485,8508]",
      "dest": "pragma_directive [8485,8508]"
    },
    {
      "src": "{: { [20803,20804]",
      "dest": "{: { [20803,20804]"
    },
    {
      "src": "expression_statement [21693,21722]",
      "dest": "expression_statement [21693,21722]"
    },
    {
      "src": "identifier: keccak256 [24186,24195]",
      "dest": "identifier: keccak256 [24186,24195]"
    },
    {
      "src": "array_access [29136,29162]",
      "dest": "array_access [29209,29235]"
    },
    {
      "src": "type_name [14460,14465]",
      "dest": "type_name [14460,14465]"
    },
    {
      "src": ",: , [25397,25398]",
      "dest": ",: , [25397,25398]"
    },
    {
      "src": "type_name [25667,25674]",
      "dest": "type_name [25667,25674]"
    },
    {
      "src": "): ) [26247,26248]",
      "dest": "): ) [26247,26248]"
    },
    {
      "src": ",: , [17030,17031]",
      "dest": ",: , [17030,17031]"
    },
    {
      "src": "call_argument [29040,29047]",
      "dest": "call_argument [29113,29120]"
    },
    {
      "src": "call_expression [27624,27636]",
      "dest": "call_expression [27624,27636]"
    },
    {
      "src": "type_name [24468,24475]",
      "dest": "type_name [24468,24475]"
    },
    {
      "src": "=: = [29532,29533]",
      "dest": "=: = [29605,29606]"
    },
    {
      "src": "bool: bool [11595,11599]",
      "dest": "bool: bool [11595,11599]"
    },
    {
      "src": "state_mutability [22128,22132]",
      "dest": "state_mutability [22128,22132]"
    },
    {
      "src": "uint256: uint256 [18473,18480]",
      "dest": "uint256: uint256 [18473,18480]"
    },
    {
      "src": "primitive_type [5079,5084]",
      "dest": "primitive_type [5079,5084]"
    },
    {
      "src": ".: . [24564,24565]",
      "dest": ".: . [24564,24565]"
    },
    {
      "src": "block_statement [7713,7771]",
      "dest": "block_statement [7713,7771]"
    },
    {
      "src": "type_name [24162,24169]",
      "dest": "type_name [24162,24169]"
    },
    {
      "src": ",: , [26340,26341]",
      "dest": ",: , [26340,26341]"
    },
    {
      "src": "type_name [23836,23843]",
      "dest": "type_name [23836,23843]"
    },
    {
      "src": "(: ( [24350,24351]",
      "dest": "(: ( [24350,24351]"
    },
    {
      "src": "): ) [7759,7760]",
      "dest": "): ) [7759,7760]"
    },
    {
      "src": "internal: internal [18141,18149]",
      "dest": "internal: internal [18141,18149]"
    },
    {
      "src": ",: , [6302,6303]",
      "dest": ",: , [6302,6303]"
    },
    {
      "src": "function_body [17806,17835]",
      "dest": "function_body [17806,17835]"
    },
    {
      "src": "(: ( [21649,21650]",
      "dest": "(: ( [21649,21650]"
    },
    {
      "src": "address: address [28448,28455]",
      "dest": "address: address [28521,28528]"
    },
    {
      "src": "primitive_type [18473,18480]",
      "dest": "primitive_type [18473,18480]"
    },
    {
      "src": "{: { [29014,29015]",
      "dest": "{: { [29087,29088]"
    },
    {
      "src": "=: = [6227,6228]",
      "dest": "=: = [6227,6228]"
    },
    {
      "src": "<: < [27903,27904]",
      "dest": "<: < [27903,27904]"
    },
    {
      "src": "identifier: _initializing [13330,13343]",
      "dest": "identifier: _initializing [13330,13343]"
    },
    {
      "src": "let: let [8141,8144]",
      "dest": "let: let [8141,8144]"
    },
    {
      "src": "event_paramater [26324,26340]",
      "dest": "event_paramater [26324,26340]"
    },
    {
      "src": "external: external [29594,29602]",
      "dest": "external: external [29667,29675]"
    },
    {
      "src": "function_definition [6019,6345]",
      "dest": "function_definition [6019,6345]"
    },
    {
      "src": "string: string [26452,26458]",
      "dest": "string: string [26452,26458]"
    },
    {
      "src": "member_expression [28881,28888]",
      "dest": "member_expression [28954,28961]"
    },
    {
      "src": "contract: contract [10719,10727]",
      "dest": "contract: contract [10719,10727]"
    },
    {
      "src": "=: = [24559,24560]",
      "dest": "=: = [24559,24560]"
    },
    {
      "src": "expression_statement [28640,28696]",
      "dest": "expression_statement [28713,28769]"
    },
    {
      "src": "returns: returns [25027,25034]",
      "dest": "returns: returns [25027,25034]"
    },
    {
      "src": "primitive_type [22985,22992]",
      "dest": "primitive_type [22985,22992]"
    },
    {
      "src": ",: , [23560,23561]",
      "dest": ",: , [23560,23561]"
    },
    {
      "src": "identifier: owner [28507,28512]",
      "dest": "identifier: owner [28580,28585]"
    },
    {
      "src": "returns: returns [4633,4640]",
      "dest": "returns: returns [4633,4640]"
    },
    {
      "src": "primitive_type [26452,26458]",
      "dest": "primitive_type [26452,26458]"
    },
    {
      "src": "call_argument [24298,24302]",
      "dest": "call_argument [24298,24302]"
    },
    {
      "src": ",: , [4129,4130]",
      "dest": ",: , [4129,4130]"
    },
    {
      "src": "uint256: uint256 [15692,15699]",
      "dest": "uint256: uint256 [15692,15699]"
    },
    {
      "src": "uint256: uint256 [17341,17348]",
      "dest": "uint256: uint256 [17341,17348]"
    },
    {
      "src": "parameter [25309,25321]",
      "dest": "parameter [25309,25321]"
    },
    {
      "src": "virtual: virtual [24452,24459]",
      "dest": "virtual: virtual [24452,24459]"
    },
    {
      "src": "expression_statement [26743,26745]",
      "dest": "expression_statement [26743,26745]"
    },
    {
      "src": ",: , [21706,21707]",
      "dest": ",: , [21706,21707]"
    },
    {
      "src": ".: . [5343,5344]",
      "dest": ".: . [5343,5344]"
    },
    {
      "src": "type_name [5666,5673]",
      "dest": "type_name [5666,5673]"
    },
    {
      "src": "yul_evm_builtin [8164,8169]",
      "dest": "yul_evm_builtin [8164,8169]"
    },
    {
      "src": "\": \" [28993,28994]",
      "dest": "\": \" [29066,29067]"
    },
    {
      "src": "function_definition [25714,25751]",
      "dest": "function_definition [25714,25751]"
    },
    {
      "src": "function_body [22151,22254]",
      "dest": "function_body [22151,22254]"
    },
    {
      "src": ",: , [22997,22998]",
      "dest": ",: , [22997,22998]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [4773,5010]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but      * with `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [4773,5010]"
    },
    {
      "src": "identifier: b [17428,17429]",
      "dest": "identifier: b [17428,17429]"
    },
    {
      "src": "comment: /**      * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.      */ [14750,14855]",
      "dest": "comment: /**      * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.      */ [14750,14855]"
    },
    {
      "src": "yul_evm_builtin [8198,8204]",
      "dest": "yul_evm_builtin [8198,8204]"
    },
    {
      "src": "member_expression [23228,23251]",
      "dest": "member_expression [23228,23251]"
    },
    {
      "src": "call_expression [24177,24255]",
      "dest": "call_expression [24177,24255]"
    },
    {
      "src": "\": \" [28021,28022]",
      "dest": "\": \" [28021,28022]"
    },
    {
      "src": "identifier: token [26226,26231]",
      "dest": "identifier: token [26226,26231]"
    },
    {
      "src": "false: false [13387,13392]",
      "dest": "false: false [13387,13392]"
    },
    {
      "src": "parameter [23034,23046]",
      "dest": "parameter [23034,23046]"
    },
    {
      "src": "state_variable_declaration [26597,26659]",
      "dest": "state_variable_declaration [26597,26659]"
    },
    {
      "src": "==: == [28976,28978]",
      "dest": "==: == [29049,29051]"
    },
    {
      "src": "{: { [29499,29500]",
      "dest": "{: { [29572,29573]"
    },
    {
      "src": "identifier: x [29405,29406]",
      "dest": "identifier: x [29478,29479]"
    },
    {
      "src": "boolean_literal [15785,15790]",
      "dest": "boolean_literal [15785,15790]"
    },
    {
      "src": "identifier: Initialized [12037,12048]",
      "dest": "identifier: Initialized [12037,12048]"
    },
    {
      "src": "identifier: sigS [24310,24314]",
      "dest": "identifier: sigS [24310,24314]"
    },
    {
      "src": "variable_declaration_statement [24583,24615]",
      "dest": "variable_declaration_statement [24583,24615]"
    },
    {
      "src": "): ) [3608,3609]",
      "dest": "): ) [3608,3609]"
    },
    {
      "src": "}: } [18929,18930]",
      "dest": "}: } [18929,18930]"
    },
    {
      "src": "virtual: virtual [14296,14303]",
      "dest": "virtual: virtual [14296,14303]"
    },
    {
      "src": "}: } [29545,29546]",
      "dest": "}: } [29618,29619]"
    },
    {
      "src": "identifier: functionSignature [23583,23600]",
      "dest": "identifier: functionSignature [23583,23600]"
    },
    {
      "src": "(: ( [5045,5046]",
      "dest": "(: ( [5045,5046]"
    },
    {
      "src": "\": \" [29780,29781]",
      "dest": "\": \" [29853,29854]"
    },
    {
      "src": "emit: emit [28142,28146]",
      "dest": "emit: emit [28142,28146]"
    },
    {
      "src": "): ) [26573,26574]",
      "dest": "): ) [26573,26574]"
    },
    {
      "src": "primitive_type [25322,25329]",
      "dest": "primitive_type [25322,25329]"
    },
    {
      "src": "type_name [21575,21582]",
      "dest": "type_name [21575,21582]"
    },
    {
      "src": ".: . [27908,27909]",
      "dest": ".: . [27908,27909]"
    },
    {
      "src": "(: ( [24784,24785]",
      "dest": "(: ( [24784,24785]"
    },
    {
      "src": "type_name [5180,5185]",
      "dest": "type_name [5180,5185]"
    },
    {
      "src": "||: || [11699,11701]",
      "dest": "||: || [11699,11701]"
    },
    {
      "src": "identifier: errorMessage [6771,6783]",
      "dest": "identifier: errorMessage [6771,6783]"
    },
    {
      "src": "identifier: balance [2570,2577]",
      "dest": "identifier: balance [2570,2577]"
    },
    {
      "src": "identifier: b [15751,15752]",
      "dest": "identifier: b [15751,15752]"
    },
    {
      "src": "string [28318,28320]",
      "dest": "string [28373,28375]"
    },
    {
      "src": "identifier: array [24789,24794]",
      "dest": "identifier: array [24789,24794]"
    },
    {
      "src": "identifier: transfer [29049,29057]",
      "dest": "identifier: transfer [29122,29130]"
    },
    {
      "src": "(: ( [6246,6247]",
      "dest": "(: ( [6246,6247]"
    },
    {
      "src": "primitive_type [7825,7831]",
      "dest": "primitive_type [7825,7831]"
    },
    {
      "src": "call_expression [23909,23967]",
      "dest": "call_expression [23909,23967]"
    },
    {
      "src": "variable_declaration [24162,24174]",
      "dest": "variable_declaration [24162,24174]"
    },
    {
      "src": "return: return [4666,4672]",
      "dest": "return: return [4666,4672]"
    },
    {
      "src": "solidity_pragma_token [24957,24973]",
      "dest": "solidity_pragma_token [24957,24973]"
    },
    {
      "src": "parameter [23836,23848]",
      "dest": "parameter [23836,23848]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [17841,18101]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting on      * overflow (when the result is negative).      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [17841,18101]"
    },
    {
      "src": "function: function [19383,19391]",
      "dest": "function: function [19383,19391]"
    },
    {
      "src": "call_argument [14338,14379]",
      "dest": "call_argument [14338,14379]"
    },
    {
      "src": "type_name [15641,15648]",
      "dest": "type_name [15641,15648]"
    },
    {
      "src": "): ) [28694,28695]",
      "dest": "): ) [28767,28768]"
    },
    {
      "src": "\": \" [27943,27944]",
      "dest": "\": \" [27943,27944]"
    },
    {
      "src": "expression_statement [13761,13763]",
      "dest": "expression_statement [13761,13763]"
    },
    {
      "src": "function: function [2467,2475]",
      "dest": "function: function [2467,2475]"
    },
    {
      "src": "state_mutability [14896,14900]",
      "dest": "state_mutability [14896,14900]"
    },
    {
      "src": "return_type_definition [21641,21658]",
      "dest": "return_type_definition [21641,21658]"
    },
    {
      "src": "parameter [23997,24010]",
      "dest": "parameter [23997,24010]"
    },
    {
      "src": "payable_conversion_expression [23562,23581]",
      "dest": "payable_conversion_expression [23562,23581]"
    },
    {
      "src": "type_name [20003,20009]",
      "dest": "type_name [20003,20009]"
    },
    {
      "src": "identifier: value [27541,27546]",
      "dest": "identifier: value [27541,27546]"
    },
    {
      "src": "type_name [16981,16988]",
      "dest": "type_name [16981,16988]"
    },
    {
      "src": "identifier: success [2638,2645]",
      "dest": "identifier: success [2638,2645]"
    },
    {
      "src": "return_type_definition [5715,5737]",
      "dest": "return_type_definition [5715,5737]"
    },
    {
      "src": "type_name [20699,20706]",
      "dest": "type_name [20699,20706]"
    },
    {
      "src": "external: external [25742,25750]",
      "dest": "external: external [25742,25750]"
    },
    {
      "src": "yul_evm_builtin [22210,22217]",
      "dest": "yul_evm_builtin [22210,22217]"
    },
    {
      "src": "(: ( [28317,28318]",
      "dest": "(: ( [28372,28373]"
    },
    {
      "src": "if_statement [28812,29123]",
      "dest": "if_statement [28885,29196]"
    },
    {
      "src": "(: ( [4113,4114]",
      "dest": "(: ( [4113,4114]"
    },
    {
      "src": "identifier: value [28895,28900]",
      "dest": "identifier: value [28968,28973]"
    },
    {
      "src": "number_literal: 0 [15792,15793]",
      "dest": "number_literal: 0 [15792,15793]"
    },
    {
      "src": "identifier: multipleToken [26645,26658]",
      "dest": "identifier: multipleToken [26645,26658]"
    },
    {
      "src": "return_type_definition [6804,6826]",
      "dest": "return_type_definition [6804,6826]"
    },
    {
      "src": "identifier: a [19404,19405]",
      "dest": "identifier: a [19404,19405]"
    },
    {
      "src": ",: , [23477,23478]",
      "dest": ",: , [23477,23478]"
    },
    {
      "src": "identifier: returndata [7813,7823]",
      "dest": "identifier: returndata [7813,7823]"
    },
    {
      "src": "function_definition [3521,3706]",
      "dest": "function_definition [3521,3706]"
    },
    {
      "src": "user_defined_type [25806,25826]",
      "dest": "user_defined_type [25806,25826]"
    },
    {
      "src": "call_argument [11742,11746]",
      "dest": "call_argument [11742,11746]"
    },
    {
      "src": "identifier: sigV [24298,24302]",
      "dest": "identifier: sigV [24298,24302]"
    },
    {
      "src": "call_expression [3627,3699]",
      "dest": "call_expression [3627,3699]"
    },
    {
      "src": "primitive_type [7628,7633]",
      "dest": "primitive_type [7628,7633]"
    },
    {
      "src": "\": \" [26731,26732]",
      "dest": "\": \" [26731,26732]"
    },
    {
      "src": "identifier: tryMul [16332,16338]",
      "dest": "identifier: tryMul [16332,16338]"
    },
    {
      "src": "address: address [26376,26383]",
      "dest": "address: address [26376,26383]"
    },
    {
      "src": "internal: internal [17352,17360]",
      "dest": "internal: internal [17352,17360]"
    },
    {
      "src": "identifier: functionCallWithValue [4673,4694]",
      "dest": "identifier: functionCallWithValue [4673,4694]"
    },
    {
      "src": "string_literal [27560,27582]",
      "dest": "string_literal [27560,27582]"
    },
    {
      "src": "binary_expression [16717,16722]",
      "dest": "binary_expression [16717,16722]"
    },
    {
      "src": "primitive_type [24098,24105]",
      "dest": "primitive_type [24098,24105]"
    },
    {
      "src": "): ) [7100,7101]",
      "dest": "): ) [7100,7101]"
    },
    {
      "src": "uint256: uint256 [26421,26428]",
      "dest": "uint256: uint256 [26421,26428]"
    },
    {
      "src": "true [13346,13350]",
      "dest": "true [13346,13350]"
    },
    {
      "src": "assignment_expression [28523,28549]",
      "dest": "assignment_expression [28596,28622]"
    },
    {
      "src": "identifier: _isInitializing [14869,14884]",
      "dest": "identifier: _isInitializing [14869,14884]"
    },
    {
      "src": "string [28673,28694]",
      "dest": "string [28746,28767]"
    },
    {
      "src": ",: , [6692,6693]",
      "dest": ",: , [6692,6693]"
    },
    {
      "src": "return: return [19460,19466]",
      "dest": "return: return [19460,19466]"
    },
    {
      "src": "member_expression [24561,24569]",
      "dest": "member_expression [24561,24569]"
    },
    {
      "src": "yul_function_call [24779,24803]",
      "dest": "yul_function_call [24779,24803]"
    },
    {
      "src": "parameter [16339,16348]",
      "dest": "parameter [16339,16348]"
    },
    {
      "src": "primitive_type [25249,25256]",
      "dest": "primitive_type [25249,25256]"
    },
    {
      "src": "function_body [20783,20888]",
      "dest": "function_body [20783,20888]"
    },
    {
      "src": "call_expression [27959,28023]",
      "dest": "call_expression [27959,28023]"
    },
    {
      "src": "\": \" [11784,11785]",
      "dest": "\": \" [11784,11785]"
    },
    {
      "src": "{: { [24484,24485]",
      "dest": "{: { [24484,24485]"
    },
    {
      "src": "external: external [23673,23681]",
      "dest": "external: external [23673,23681]"
    },
    {
      "src": "{: { [16419,16420]",
      "dest": "{: { [16419,16420]"
    },
    {
      "src": "type_name [25140,25146]",
      "dest": "type_name [25140,25146]"
    },
    {
      "src": "identifier: onlyOwner [29603,29612]",
      "dest": "identifier: onlyOwner [29676,29685]"
    },
    {
      "src": "variable_declaration_statement [22161,22172]",
      "dest": "variable_declaration_statement [22161,22172]"
    },
    {
      "src": "meta_type_expression [14501,14512]",
      "dest": "meta_type_expression [14501,14512]"
    },
    {
      "src": "): ) [8241,8242]",
      "dest": "): ) [8241,8242]"
    },
    {
      "src": "pure: pure [20760,20764]",
      "dest": "pure: pure [20760,20764]"
    },
    {
      "src": "(: ( [28072,28073]",
      "dest": "(: ( [28072,28073]"
    },
    {
      "src": "state_variable_declaration [25948,25977]",
      "dest": "state_variable_declaration [25948,25977]"
    },
    {
      "src": "uint256: uint256 [16350,16357]",
      "dest": "uint256: uint256 [16350,16357]"
    },
    {
      "src": "uint8: uint8 [13164,13169]",
      "dest": "uint8: uint8 [13164,13169]"
    },
    {
      "src": "identifier: msg [24599,24602]",
      "dest": "identifier: msg [24599,24602]"
    },
    {
      "src": "call_argument [7094,7100]",
      "dest": "call_argument [7094,7100]"
    },
    {
      "src": "add: add [8205,8208]",
      "dest": "add: add [8205,8208]"
    },
    {
      "src": "(: ( [7941,7942]",
      "dest": "(: ( [7941,7942]"
    },
    {
      "src": "): ) [6890,6891]",
      "dest": "): ) [6890,6891]"
    },
    {
      "src": "primitive_type [16705,16712]",
      "dest": "primitive_type [16705,16712]"
    },
    {
      "src": "visibility [1267,1275]",
      "dest": "visibility [1267,1275]"
    },
    {
      "src": "primitive_type [6702,6706]",
      "dest": "primitive_type [6702,6706]"
    },
    {
      "src": "parenthesized_expression [24386,24403]",
      "dest": "parenthesized_expression [24386,24403]"
    },
    {
      "src": "}: } [7254,7255]",
      "dest": "}: } [7254,7255]"
    },
    {
      "src": "(: ( [28967,28968]",
      "dest": "(: ( [29040,29041]"
    },
    {
      "src": "call_expression [24186,24254]",
      "dest": "call_expression [24186,24254]"
    },
    {
      "src": "parameter [16053,16060]",
      "dest": "parameter [16053,16060]"
    },
    {
      "src": "true: true [28979,28983]",
      "dest": "true: true [29052,29056]"
    },
    {
      "src": "return: return [23892,23898]",
      "dest": "return: return [23892,23898]"
    },
    {
      "src": "payable: payable [2494,2501]",
      "dest": "payable: payable [2494,2501]"
    },
    {
      "src": "function: function [25368,25376]",
      "dest": "function: function [25368,25376]"
    },
    {
      "src": "parameter [25398,25410]",
      "dest": "parameter [25398,25410]"
    },
    {
      "src": "[: [ [27702,27703]",
      "dest": "[: [ [27702,27703]"
    },
    {
      "src": "function_definition [17739,17835]",
      "dest": "function_definition [17739,17835]"
    },
    {
      "src": "memory: memory [6114,6120]",
      "dest": "memory: memory [6114,6120]"
    },
    {
      "src": "emit: emit [27774,27778]",
      "dest": "emit: emit [27774,27778]"
    },
    {
      "src": "call_argument [13419,13426]",
      "dest": "call_argument [13419,13426]"
    },
    {
      "src": "primitive_type [5296,5300]",
      "dest": "primitive_type [5296,5300]"
    },
    {
      "src": "): ) [25272,25273]",
      "dest": "): ) [25272,25273]"
    },
    {
      "src": ",: , [19405,19406]",
      "dest": ",: , [19405,19406]"
    },
    {
      "src": "return: return [5378,5384]",
      "dest": "return: return [5378,5384]"
    },
    {
      "src": "return_statement [16138,16159]",
      "dest": "return_statement [16138,16159]"
    },
    {
      "src": "function: function [14860,14868]",
      "dest": "function: function [14860,14868]"
    },
    {
      "src": "identifier: depositer [26283,26292]",
      "dest": "identifier: depositer [26283,26292]"
    },
    {
      "src": "struct: struct [26758,26764]",
      "dest": "struct: struct [26758,26764]"
    },
    {
      "src": "return_statement [15777,15795]",
      "dest": "return_statement [15777,15795]"
    },
    {
      "src": "): ) [20781,20782]",
      "dest": "): ) [20781,20782]"
    },
    {
      "src": "primitive_type [28269,28273]",
      "dest": "primitive_type [28316,28320]"
    },
    {
      "src": "comment: // Look for revert reason and bubble it up if present [7876,7929]",
      "dest": "comment: // Look for revert reason and bubble it up if present [7876,7929]"
    },
    {
      "src": "function: function [23981,23989]",
      "dest": "function: function [23981,23989]"
    },
    {
      "src": "(: ( [25385,25386]",
      "dest": "(: ( [25385,25386]"
    },
    {
      "src": "array_access [28648,28671]",
      "dest": "array_access [28721,28744]"
    },
    {
      "src": "primitive_type [18462,18469]",
      "dest": "primitive_type [18462,18469]"
    },
    {
      "src": "return: return [14718,14724]",
      "dest": "return: return [14718,14724]"
    },
    {
      "src": "comment: // Append userAddress at the end to extract it from calling context [23265,23332]",
      "dest": "comment: // Append userAddress at the end to extract it from calling context [23265,23332]"
    },
    {
      "src": "primitive_type [23383,23390]",
      "dest": "primitive_type [23383,23390]"
    },
    {
      "src": "): ) [14465,14466]",
      "dest": "): ) [14465,14466]"
    },
    {
      "src": "identifier: _ [13761,13762]",
      "dest": "identifier: _ [13761,13762]"
    },
    {
      "src": "yul_path [8226,8241]",
      "dest": "yul_path [8226,8241]"
    },
    {
      "src": "(: ( [20824,20825]",
      "dest": "(: ( [20824,20825]"
    },
    {
      "src": "function: function [25506,25514]",
      "dest": "function: function [25506,25514]"
    },
    {
      "src": "true [28979,28983]",
      "dest": "true [29052,29056]"
    },
    {
      "src": "call_argument [27386,27387]",
      "dest": "call_argument [27386,27387]"
    },
    {
      "src": "state_variable_declaration [25846,25868]",
      "dest": "state_variable_declaration [25846,25868]"
    },
    {
      "src": "primitive_type [7572,7578]",
      "dest": "primitive_type [7572,7578]"
    },
    {
      "src": "identifier: to [25330,25332]",
      "dest": "identifier: to [25330,25332]"
    },
    {
      "src": "identifier: msg [24497,24500]",
      "dest": "identifier: msg [24497,24500]"
    },
    {
      "src": "primitive_type [25477,25481]",
      "dest": "primitive_type [25477,25481]"
    },
    {
      "src": "type_name [14506,14511]",
      "dest": "type_name [14506,14511]"
    },
    {
      "src": "view: view [23682,23686]",
      "dest": "view: view [23682,23686]"
    },
    {
      "src": "member_expression [29325,29332]",
      "dest": "member_expression [29398,29405]"
    },
    {
      "src": "type_name [17375,17379]",
      "dest": "type_name [17375,17379]"
    },
    {
      "src": "expression_statement [28523,28550]",
      "dest": "expression_statement [28596,28623]"
    },
    {
      "src": "\": \" [26721,26722]",
      "dest": "\": \" [26721,26722]"
    },
    {
      "src": "identifier: _revert [7211,7218]",
      "dest": "identifier: _revert [7211,7218]"
    },
    {
      "src": "primitive_type [24044,24049]",
      "dest": "primitive_type [24044,24049]"
    },
    {
      "src": "): ) [16750,16751]",
      "dest": "): ) [16750,16751]"
    },
    {
      "src": ",: , [29756,29757]",
      "dest": ",: , [29829,29830]"
    },
    {
      "src": "address: address [24468,24475]",
      "dest": "address: address [24468,24475]"
    },
    {
      "src": "identifier: _newOwner [29700,29709]",
      "dest": "identifier: _newOwner [29773,29782]"
    },
    {
      "src": "}: } [28937,28938]",
      "dest": "}: } [29010,29011]"
    },
    {
      "src": "number_literal: 0 [16122,16123]",
      "dest": "number_literal: 0 [16122,16123]"
    },
    {
      "src": "primitive_type [3543,3550]",
      "dest": "primitive_type [3543,3550]"
    },
    {
      "src": "call_expression [11704,11748]",
      "dest": "call_expression [11704,11748]"
    },
    {
      "src": "identifier: _getInitializedVersion [14653,14675]",
      "dest": "identifier: _getInitializedVersion [14653,14675]"
    },
    {
      "src": "type_name [25181,25188]",
      "dest": "type_name [25181,25188]"
    },
    {
      "src": ".: . [5225,5226]",
      "dest": ".: . [5225,5226]"
    },
    {
      "src": "type_cast_expression [28826,28836]",
      "dest": "type_cast_expression [28899,28909]"
    },
    {
      "src": "identifier: functionStaticCall [5647,5665]",
      "dest": "identifier: functionStaticCall [5647,5665]"
    },
    {
      "src": "returns: returns [17788,17795]",
      "dest": "returns: returns [17788,17795]"
    },
    {
      "src": "type_name [26631,26635]",
      "dest": "type_name [26631,26635]"
    },
    {
      "src": "return_statement [17436,17454]",
      "dest": "return_statement [17436,17454]"
    },
    {
      "src": "]: ] [28936,28937]",
      "dest": "]: ] [29009,29010]"
    },
    {
      "src": "identifier: depositer [29314,29323]",
      "dest": "identifier: depositer [29387,29396]"
    },
    {
      "src": "binary_expression [27895,27927]",
      "dest": "binary_expression [27895,27927]"
    },
    {
      "src": "identifier: user [23667,23671]",
      "dest": "identifier: user [23667,23671]"
    },
    {
      "src": "function_body [24484,24926]",
      "dest": "function_body [24484,24926]"
    },
    {
      "src": "}: } [22228,22229]",
      "dest": "}: } [22228,22229]"
    },
    {
      "src": "true: true [15816,15820]",
      "dest": "true: true [15816,15820]"
    },
    {
      "src": "identifier: tokensName [27417,27427]",
      "dest": "identifier: tokensName [27417,27427]"
    },
    {
      "src": "}: } [8316,8317]",
      "dest": "}: } [8316,8317]"
    },
    {
      "src": "return_statement [18183,18196]",
      "dest": "return_statement [18183,18196]"
    },
    {
      "src": "boolean_literal [11928,11932]",
      "dest": "boolean_literal [11928,11932]"
    },
    {
      "src": "state_mutability [17012,17016]",
      "dest": "state_mutability [17012,17016]"
    },
    {
      "src": "(: ( [25666,25667]",
      "dest": "(: ( [25666,25667]"
    },
    {
      "src": "type_name [21988,22003]",
      "dest": "type_name [21988,22003]"
    },
    {
      "src": "state_mutability [5710,5714]",
      "dest": "state_mutability [5710,5714]"
    },
    {
      "src": "string_literal [3666,3698]",
      "dest": "string_literal [3666,3698]"
    },
    {
      "src": "identifier: _fees [29475,29480]",
      "dest": "identifier: _fees [29548,29553]"
    },
    {
      "src": "identifier: token [29250,29255]",
      "dest": "identifier: token [29323,29328]"
    },
    {
      "src": "identifier: sigV [23153,23157]",
      "dest": "identifier: sigV [23153,23157]"
    },
    {
      "src": "type_name [5724,5729]",
      "dest": "type_name [5724,5729]"
    },
    {
      "src": "member_expression [29351,29358]",
      "dest": "member_expression [29424,29431]"
    },
    {
      "src": "comment: /**  * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed  * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an  * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer  * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.  *  * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be  * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in  * case an upgrade adds a module that needs to be initialized.  *  * For example:  *  * [.hljs-theme-light.nopadding]  * ```  * contract MyToken is ERC20Upgradeable {  *     function initialize() initializer public {  *         __ERC20_init(\"MyToken\", \"MTK\");  *     }  * }  * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {  *     function initializeV2() reinitializer(2) public {  *         __ERC20Permit_init(\"MyToken\");  *     }  * }  * ```  *  * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as  * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.  *  * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure  * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.  *  * [CAUTION]  * ====  * Avoid leaving a contract uninitialized.  *  * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation  * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke  * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:  *  * [.hljs-theme-light.nopadding]  * ```  * /// @custom:oz-upgrades-unsafe-allow constructor  * constructor() {  *     _disableInitializers();  * }  * ```  * ====  */ [8511,10709]",
      "dest": "comment: /**  * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed  * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an  * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer  * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.  *  * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be  * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in  * case an upgrade adds a module that needs to be initialized.  *  * For example:  *  * [.hljs-theme-light.nopadding]  * ```  * contract MyToken is ERC20Upgradeable {  *     function initialize() initializer public {  *         __ERC20_init(\"MyToken\", \"MTK\");  *     }  * }  * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {  *     function initializeV2() reinitializer(2) public {  *         __ERC20Permit_init(\"MyToken\");  *     }  * }  * ```  *  * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as  * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.  *  * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure  * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.  *  * [CAUTION]  * ====  * Avoid leaving a contract uninitialized.  *  * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation  * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke  * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:  *  * [.hljs-theme-light.nopadding]  * ```  * /// @custom:oz-upgrades-unsafe-allow constructor  * constructor() {  *     _disableInitializers();  * }  * ```  * ====  */ [8511,10709]"
    },
    {
      "src": "returns: returns [19432,19439]",
      "dest": "returns: returns [19432,19439]"
    },
    {
      "src": "identifier: vault [28883,28888]",
      "dest": "identifier: vault [28956,28961]"
    },
    {
      "src": ",: , [17130,17131]",
      "dest": ",: , [17130,17131]"
    },
    {
      "src": "primitive_type [26907,26913]",
      "dest": "primitive_type [26907,26913]"
    },
    {
      "src": "(: ( [25308,25309]",
      "dest": "(: ( [25308,25309]"
    },
    {
      "src": "type_name [28710,28717]",
      "dest": "type_name [28783,28790]"
    },
    {
      "src": "variable_declaration [6188,6200]",
      "dest": "variable_declaration [6188,6200]"
    },
    {
      "src": "primitive_type [24162,24169]",
      "dest": "primitive_type [24162,24169]"
    },
    {
      "src": "(: ( [18891,18892]",
      "dest": "(: ( [18891,18892]"
    },
    {
      "src": "visibility [25742,25750]",
      "dest": "visibility [25742,25750]"
    },
    {
      "src": "type_name [18892,18899]",
      "dest": "type_name [18892,18899]"
    },
    {
      "src": "identifier: amount [2521,2527]",
      "dest": "identifier: amount [2521,2527]"
    },
    {
      "src": "function_definition [20658,20888]",
      "dest": "function_definition [20658,20888]"
    },
    {
      "src": "internal: internal [21627,21635]",
      "dest": "internal: internal [21627,21635]"
    },
    {
      "src": "string_literal [11784,11832]",
      "dest": "string_literal [11784,11832]"
    },
    {
      "src": "function_body [16399,16816]",
      "dest": "function_body [16399,16816]"
    },
    {
      "src": "modifier: modifier [13141,13149]",
      "dest": "modifier: modifier [13141,13149]"
    },
    {
      "src": "identifier: sigV [24118,24122]",
      "dest": "identifier: sigV [24118,24122]"
    },
    {
      "src": "return: return [24892,24898]",
      "dest": "return: return [24892,24898]"
    },
    {
      "src": "}: } [14743,14744]",
      "dest": "}: } [14743,14744]"
    },
    {
      "src": "call_argument [23153,23157]",
      "dest": "call_argument [23153,23157]"
    },
    {
      "src": "identifier: MetaTransactionExecuted [23525,23548]",
      "dest": "identifier: MetaTransactionExecuted [23525,23548]"
    },
    {
      "src": "identifier: multipleToken [28037,28050]",
      "dest": "identifier: multipleToken [28037,28050]"
    },
    {
      "src": "identifier: target [6064,6070]",
      "dest": "identifier: target [6064,6070]"
    },
    {
      "src": "%: % [19469,19470]",
      "dest": "%: % [19469,19470]"
    },
    {
      "src": "uint256: uint256 [5106,5113]",
      "dest": "uint256: uint256 [5106,5113]"
    },
    {
      "src": "visibility [4624,4632]",
      "dest": "visibility [4624,4632]"
    },
    {
      "src": "(: ( [13418,13419]",
      "dest": "(: ( [13418,13419]"
    },
    {
      "src": "function_body [19450,19479]",
      "dest": "function_body [19450,19479]"
    },
    {
      "src": "member_expression [27537,27546]",
      "dest": "member_expression [27537,27546]"
    },
    {
      "src": "identifier: isTopLevelCall [11600,11614]",
      "dest": "identifier: isTopLevelCall [11600,11614]"
    },
    {
      "src": "identifier: returndata [6737,6747]",
      "dest": "identifier: returndata [6737,6747]"
    },
    {
      "src": "identifier: success [2702,2709]",
      "dest": "identifier: success [2702,2709]"
    },
    {
      "src": "string [4716,4759]",
      "dest": "string [4716,4759]"
    },
    {
      "src": "identifier: b [20110,20111]",
      "dest": "identifier: b [20110,20111]"
    },
    {
      "src": "internal: internal [20751,20759]",
      "dest": "internal: internal [20751,20759]"
    },
    {
      "src": "identifier: _initializing [11618,11631]",
      "dest": "identifier: _initializing [11618,11631]"
    },
    {
      "src": "call_argument [11734,11747]",
      "dest": "call_argument [11734,11747]"
    },
    {
      "src": "modifier_invocation [29490,29499]",
      "dest": "modifier_invocation [29563,29572]"
    },
    {
      "src": ".: . [23247,23248]",
      "dest": ".: . [23247,23248]"
    },
    {
      "src": ",: , [2587,2588]",
      "dest": ",: , [2587,2588]"
    },
    {
      "src": "variable_declaration_statement [6187,6253]",
      "dest": "variable_declaration_statement [6187,6253]"
    },
    {
      "src": ",: , [3661,3662]",
      "dest": ",: , [3661,3662]"
    },
    {
      "src": ",: , [13703,13704]",
      "dest": ",: , [13703,13704]"
    },
    {
      "src": "(: ( [26621,26622]",
      "dest": "(: ( [26621,26622]"
    },
    {
      "src": "identifier: returndata [7170,7180]",
      "dest": "identifier: returndata [7170,7180]"
    },
    {
      "src": "uint256: uint256 [18164,18171]",
      "dest": "uint256: uint256 [18164,18171]"
    },
    {
      "src": "binary_expression [21701,21706]",
      "dest": "binary_expression [21701,21706]"
    },
    {
      "src": "uint: uint [25683,25687]",
      "dest": "uint: uint [25683,25687]"
    },
    {
      "src": "return_statement [1513,1544]",
      "dest": "return_statement [1513,1544]"
    },
    {
      "src": "{: { [28630,28631]",
      "dest": "{: { [28703,28704]"
    },
    {
      "src": "primitive_type [15652,15659]",
      "dest": "primitive_type [15652,15659]"
    },
    {
      "src": "identifier: isContract [11723,11733]",
      "dest": "identifier: isContract [11723,11733]"
    },
    {
      "src": "assignment_expression [14440,14470]",
      "dest": "assignment_expression [14440,14470]"
    },
    {
      "src": "address: address [25464,25471]",
      "dest": "address: address [25464,25471]"
    },
    {
      "src": "}: } [29009,29010]",
      "dest": "}: } [29082,29083]"
    },
    {
      "src": "(: ( [7218,7219]",
      "dest": "(: ( [7218,7219]"
    },
    {
      "src": "parameter [6724,6747]",
      "dest": "parameter [6724,6747]"
    },
    {
      "src": "member_expression [29085,29096]",
      "dest": "member_expression [29158,29169]"
    },
    {
      "src": "(: ( [26702,26703]",
      "dest": "(: ( [26702,26703]"
    },
    {
      "src": "identifier: a [18190,18191]",
      "dest": "identifier: a [18190,18191]"
    },
    {
      "src": "returns: returns [1281,1288]",
      "dest": "returns: returns [1281,1288]"
    },
    {
      "src": "address: address [5666,5673]",
      "dest": "address: address [5666,5673]"
    },
    {
      "src": "binary_expression [19467,19472]",
      "dest": "binary_expression [19467,19472]"
    },
    {
      "src": "event_paramater [26376,26393]",
      "dest": "event_paramater [26376,26393]"
    },
    {
      "src": "primitive_type [5212,5219]",
      "dest": "primitive_type [5212,5219]"
    },
    {
      "src": ".: . [29274,29275]",
      "dest": ".: . [29347,29348]"
    },
    {
      "src": "): ) [21720,21721]",
      "dest": "): ) [21720,21721]"
    },
    {
      "src": "primitive_type [22069,22076]",
      "dest": "primitive_type [22069,22076]"
    },
    {
      "src": "type_name [21556,21563]",
      "dest": "type_name [21556,21563]"
    },
    {
      "src": "parameter [29576,29593]",
      "dest": "parameter [29649,29666]"
    },
    {
      "src": "uint256: uint256 [19396,19403]",
      "dest": "uint256: uint256 [19396,19403]"
    },
    {
      "src": "identifier: success [23347,23354]",
      "dest": "identifier: success [23347,23354]"
    },
    {
      "src": "(: ( [6046,6047]",
      "dest": "(: ( [6046,6047]"
    },
    {
      "src": "yul_variable_declaration [8141,8181]",
      "dest": "yul_variable_declaration [8141,8181]"
    },
    {
      "src": "payable: payable [21996,22003]",
      "dest": "payable: payable [21996,22003]"
    },
    {
      "src": "identifier: mintTo [25675,25681]",
      "dest": "identifier: mintTo [25675,25681]"
    },
    {
      "src": "address: address [26200,26207]",
      "dest": "address: address [26200,26207]"
    },
    {
      "src": "member_expression [23402,23418]",
      "dest": "member_expression [23402,23418]"
    },
    {
      "src": "identifier: sigS [24106,24110]",
      "dest": "identifier: sigS [24106,24110]"
    },
    {
      "src": "type_cast_expression [5212,5225]",
      "dest": "type_cast_expression [5212,5225]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [5841,6014]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [5841,6014]"
    },
    {
      "src": "solidity: solidity [21848,21856]",
      "dest": "solidity: solidity [21848,21856]"
    },
    {
      "src": "identifier: a [16010,16011]",
      "dest": "identifier: a [16010,16011]"
    },
    {
      "src": "): ) [17085,17086]",
      "dest": "): ) [17085,17086]"
    },
    {
      "src": "primitive_type [19441,19448]",
      "dest": "primitive_type [19441,19448]"
    },
    {
      "src": "): ) [15699,15700]",
      "dest": "): ) [15699,15700]"
    },
    {
      "src": "]: ] [23246,23247]",
      "dest": "]: ] [23246,23247]"
    },
    {
      "src": "identifier: _fees [29534,29539]",
      "dest": "identifier: _fees [29607,29612]"
    },
    {
      "src": "return_type_definition [23026,23047]",
      "dest": "return_type_definition [23026,23047]"
    },
    {
      "src": "function_body [13672,13769]",
      "dest": "function_body [13672,13769]"
    },
    {
      "src": ",: , [27197,27198]",
      "dest": ",: , [27197,27198]"
    },
    {
      "src": "(: ( [29039,29040]",
      "dest": "(: ( [29112,29113]"
    },
    {
      "src": "uint256: uint256 [28710,28717]",
      "dest": "uint256: uint256 [28783,28790]"
    },
    {
      "src": ".: . [27610,27611]",
      "dest": ".: . [27610,27611]"
    },
    {
      "src": "variable_declaration_statement [24265,24316]",
      "dest": "variable_declaration_statement [24265,24316]"
    },
    {
      "src": "identifier: returndata [6313,6323]",
      "dest": "identifier: returndata [6313,6323]"
    },
    {
      "src": "identifier: length [7953,7959]",
      "dest": "identifier: length [7953,7959]"
    },
    {
      "src": "assignment_expression [29622,29645]",
      "dest": "assignment_expression [29695,29718]"
    },
    {
      "src": "primitive_type [26376,26383]",
      "dest": "primitive_type [26376,26383]"
    },
    {
      "src": "member_expression [29059,29066]",
      "dest": "member_expression [29132,29139]"
    },
    {
      "src": "string [2589,2620]",
      "dest": "string [2589,2620]"
    },
    {
      "src": "identifier: _initialized [14440,14452]",
      "dest": "identifier: _initialized [14440,14452]"
    },
    {
      "src": "call_argument [23141,23145]",
      "dest": "call_argument [23141,23145]"
    },
    {
      "src": "identifier: array [24553,24558]",
      "dest": "identifier: array [24553,24558]"
    },
    {
      "src": "primitive_type [22161,22168]",
      "dest": "primitive_type [22161,22168]"
    },
    {
      "src": "identifier: tokenName [26331,26340]",
      "dest": "identifier: tokenName [26331,26340]"
    },
    {
      "src": "identifier: returndata [7552,7562]",
      "dest": "identifier: returndata [7552,7562]"
    },
    {
      "src": "parenthesized_expression [8292,8306]",
      "dest": "parenthesized_expression [8292,8306]"
    },
    {
      "src": "}: } [14527,14528]",
      "dest": "}: } [14527,14528]"
    },
    {
      "src": "pure: pure [19427,19431]",
      "dest": "pure: pure [19427,19431]"
    },
    {
      "src": "=: = [27030,27031]",
      "dest": "=: = [27030,27031]"
    },
    {
      "src": "comment: /**  * @dev Collection of functions related to the address type  */ [170,237]",
      "dest": "comment: /**  * @dev Collection of functions related to the address type  */ [170,237]"
    },
    {
      "src": "state_mutability [20760,20764]",
      "dest": "state_mutability [20760,20764]"
    },
    {
      "src": "identifier: feesCollected [25963,25976]",
      "dest": "identifier: feesCollected [25963,25976]"
    },
    {
      "src": ">=: >= [28228,28230]",
      "dest": ">=: >= [28228,28230]"
    },
    {
      "src": "variable_declaration [27403,27427]",
      "dest": "variable_declaration [27403,27427]"
    },
    {
      "src": "variable_declaration_tuple [6187,6226]",
      "dest": "variable_declaration_tuple [6187,6226]"
    },
    {
      "src": "): ) [6251,6252]",
      "dest": "): ) [6251,6252]"
    },
    {
      "src": "(: ( [26375,26376]",
      "dest": "(: ( [26375,26376]"
    },
    {
      "src": "expression_statement [27529,27584]",
      "dest": "expression_statement [27529,27584]"
    },
    {
      "src": "number_literal: 0 [21705,21706]",
      "dest": "number_literal: 0 [21705,21706]"
    },
    {
      "src": "identifier: symbol [26349,26355]",
      "dest": "identifier: symbol [26349,26355]"
    },
    {
      "src": "call_argument [23122,23139]",
      "dest": "call_argument [23122,23139]"
    },
    {
      "src": "call_expression [23059,23196]",
      "dest": "call_expression [23059,23196]"
    },
    {
      "src": "identifier: token [29042,29047]",
      "dest": "identifier: token [29115,29120]"
    },
    {
      "src": "=: = [24597,24598]",
      "dest": "=: = [24597,24598]"
    },
    {
      "src": "function_body [21659,21764]",
      "dest": "function_body [21659,21764]"
    },
    {
      "src": "pragma_directive [145,168]",
      "dest": "pragma_directive [145,168]"
    },
    {
      "src": ",: , [5439,5440]",
      "dest": ",: , [5439,5440]"
    },
    {
      "src": "(: ( [27513,27514]",
      "dest": "(: ( [27513,27514]"
    },
    {
      "src": "primitive_type [25181,25188]",
      "dest": "primitive_type [25181,25188]"
    },
    {
      "src": ",: , [8211,8212]",
      "dest": ",: , [8211,8212]"
    },
    {
      "src": "uint256: uint256 [19441,19448]",
      "dest": "uint256: uint256 [19441,19448]"
    },
    {
      "src": "uint256: uint256 [15641,15648]",
      "dest": "uint256: uint256 [15641,15648]"
    },
    {
      "src": "identifier: IERC20 [27430,27436]",
      "dest": "identifier: IERC20 [27430,27436]"
    },
    {
      "src": "return_type_definition [3587,3609]",
      "dest": "return_type_definition [3587,3609]"
    },
    {
      "src": ".: . [27540,27541]",
      "dest": ".: . [27540,27541]"
    },
    {
      "src": "string: string [21594,21600]",
      "dest": "string: string [21594,21600]"
    },
    {
      "src": "return_statement [15808,15825]",
      "dest": "return_statement [15808,15825]"
    },
    {
      "src": "identifier: errorMessage [4024,4036]",
      "dest": "identifier: errorMessage [4024,4036]"
    },
    {
      "src": ",: , [5786,5787]",
      "dest": ",: , [5786,5787]"
    },
    {
      "src": "identifier: version [13230,13237]",
      "dest": "identifier: version [13230,13237]"
    },
    {
      "src": ",: , [23085,23086]",
      "dest": ",: , [23085,23086]"
    },
    {
      "src": "identifier: _initializing [11997,12010]",
      "dest": "identifier: _initializing [11997,12010]"
    },
    {
      "src": "true: true [16683,16687]",
      "dest": "true: true [16683,16687]"
    },
    {
      "src": "comment: // This method relies on extcodesize/address.code.length, which returns 0 [1306,1379]",
      "dest": "comment: // This method relies on extcodesize/address.code.length, which returns 0 [1306,1379]"
    },
    {
      "src": "primitive_type [17330,17337]",
      "dest": "primitive_type [17330,17337]"
    },
    {
      "src": "primitive_type [19407,19414]",
      "dest": "primitive_type [19407,19414]"
    },
    {
      "src": "uint: uint [25567,25571]",
      "dest": "uint: uint [25567,25571]"
    },
    {
      "src": "{: { [10742,10743]",
      "dest": "{: { [10742,10743]"
    },
    {
      "src": "string_literal [13705,13750]",
      "dest": "string_literal [13705,13750]"
    },
    {
      "src": "[: [ [29162,29163]",
      "dest": "[: [ [29235,29236]"
    },
    {
      "src": "(: ( [14675,14676]",
      "dest": "(: ( [14675,14676]"
    },
    {
      "src": ",: , [29255,29256]",
      "dest": ",: , [29328,29329]"
    },
    {
      "src": "function: function [29657,29665]",
      "dest": "function: function [29730,29738]"
    },
    {
      "src": "primitive_type [16339,16346]",
      "dest": "primitive_type [16339,16346]"
    },
    {
      "src": "call_argument [29273,29280]",
      "dest": "call_argument [29346,29353]"
    },
    {
      "src": "solidity_pragma_token [8492,8507]",
      "dest": "solidity_pragma_token [8492,8507]"
    },
    {
      "src": ".: . [27443,27444]",
      "dest": ".: . [27443,27444]"
    },
    {
      "src": "}: } [18544,18545]",
      "dest": "}: } [18544,18545]"
    },
    {
      "src": "call_argument [27928,27944]",
      "dest": "call_argument [27928,27944]"
    },
    {
      "src": "function_definition [25289,25362]",
      "dest": "function_definition [25289,25362]"
    },
    {
      "src": "bytes32: bytes32 [23836,23843]",
      "dest": "bytes32: bytes32 [23836,23843]"
    },
    {
      "src": "identifier: data [5092,5096]",
      "dest": "identifier: data [5092,5096]"
    },
    {
      "src": "call_argument [23562,23581]",
      "dest": "call_argument [23562,23581]"
    },
    {
      "src": "identifier: _initializing [14323,14336]",
      "dest": "identifier: _initializing [14323,14336]"
    },
    {
      "src": "if_statement [24494,24920]",
      "dest": "if_statement [24494,24920]"
    },
    {
      "src": "identifier: multipleToken [29136,29149]",
      "dest": "identifier: multipleToken [29209,29222]"
    },
    {
      "src": "type_name [25598,25605]",
      "dest": "type_name [25598,25605]"
    },
    {
      "src": "state_mutability [14687,14691]",
      "dest": "state_mutability [14687,14691]"
    },
    {
      "src": "identifier: success [6841,6848]",
      "dest": "identifier: success [6841,6848]"
    },
    {
      "src": "type: type [14501,14505]",
      "dest": "type: type [14501,14505]"
    },
    {
      "src": "(: ( [23066,23067]",
      "dest": "(: ( [23066,23067]"
    },
    {
      "src": "identifier: initialize [26983,26993]",
      "dest": "identifier: initialize [26983,26993]"
    },
    {
      "src": "identifier: c [15822,15823]",
      "dest": "identifier: c [15822,15823]"
    },
    {
      "src": "revert: revert [8198,8204]",
      "dest": "revert: revert [8198,8204]"
    },
    {
      "src": "expression_statement [28037,28088]",
      "dest": "expression_statement [28037,28088]"
    },
    {
      "src": "pure: pure [16033,16037]",
      "dest": "pure: pure [16033,16037]"
    },
    {
      "src": "identifier: _amount [25403,25410]",
      "dest": "identifier: _amount [25403,25410]"
    },
    {
      "src": ".: . [29377,29378]",
      "dest": ".: . [29450,29451]"
    },
    {
      "src": "primitive_type [23342,23346]",
      "dest": "primitive_type [23342,23346]"
    },
    {
      "src": "primitive_type [23997,24004]",
      "dest": "primitive_type [23997,24004]"
    },
    {
      "src": "expression_statement [7211,7245]",
      "dest": "expression_statement [7211,7245]"
    },
    {
      "src": "block_statement [28837,29010]",
      "dest": "block_statement [28910,29083]"
    },
    {
      "src": "): ) [5699,5700]",
      "dest": "): ) [5699,5700]"
    },
    {
      "src": "parameter [25249,25259]",
      "dest": "parameter [25249,25259]"
    },
    {
      "src": "memory: memory [6730,6736]",
      "dest": "memory: memory [6730,6736]"
    },
    {
      "src": "{: { [6892,6893]",
      "dest": "{: { [6892,6893]"
    },
    {
      "src": "function_body [28630,29444]",
      "dest": "function_body [28703,29517]"
    },
    {
      "src": "): ) [17804,17805]",
      "dest": "): ) [17804,17805]"
    },
    {
      "src": "if: if [6837,6839]",
      "dest": "if: if [6837,6839]"
    },
    {
      "src": "parameter [20774,20781]",
      "dest": "parameter [20774,20781]"
    },
    {
      "src": ",: , [24010,24011]",
      "dest": ",: , [24010,24011]"
    },
    {
      "src": "}: } [7776,7777]",
      "dest": "}: } [7776,7777]"
    },
    {
      "src": "(: ( [27623,27624]",
      "dest": "(: ( [27623,27624]"
    },
    {
      "src": "parameter [17330,17339]",
      "dest": "parameter [17330,17339]"
    },
    {
      "src": "primitive_type [20003,20009]",
      "dest": "primitive_type [20003,20009]"
    },
    {
      "src": "expression_statement [13682,13752]",
      "dest": "expression_statement [13682,13752]"
    },
    {
      "src": "parameter [27199,27212]",
      "dest": "parameter [27199,27212]"
    },
    {
      "src": "emit_statement [14484,14518]",
      "dest": "emit_statement [14484,14518]"
    },
    {
      "src": "identifier: this [2564,2568]",
      "dest": "identifier: this [2564,2568]"
    },
    {
      "src": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [18208,18444]",
      "dest": "comment: /**      * @dev Returns the multiplication of two unsigned integers, reverting on      * overflow.      *      * Counterpart to Solidity's `*` operator.      *      * Requirements:      *      * - Multiplication cannot overflow.      */ [18208,18444]"
    },
    {
      "src": "identifier: mint [25662,25666]",
      "dest": "identifier: mint [25662,25666]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [3712,3923]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with      * `errorMessage` as a fallback revert reason when `target` reverts.      *      * _Available since v3.1._      */ [3712,3923]"
    },
    {
      "src": "parameter [3959,3973]",
      "dest": "parameter [3959,3973]"
    },
    {
      "src": "identifier: target [5674,5680]",
      "dest": "identifier: target [5674,5680]"
    },
    {
      "src": "function_body [1296,1550]",
      "dest": "function_body [1296,1550]"
    },
    {
      "src": "binary_expression [27369,27388]",
      "dest": "binary_expression [27369,27388]"
    },
    {
      "src": "(: ( [25180,25181]",
      "dest": "(: ( [25180,25181]"
    },
    {
      "src": "type_name [22999,23004]",
      "dest": "type_name [22999,23004]"
    },
    {
      "src": "(: ( [24496,24497]",
      "dest": "(: ( [24496,24497]"
    },
    {
      "src": "payable_conversion_expression [28873,28889]",
      "dest": "payable_conversion_expression [28946,28962]"
    },
    {
      "src": "type_name [25082,25088]",
      "dest": "type_name [25082,25088]"
    },
    {
      "src": "address: address [21988,21995]",
      "dest": "address: address [21988,21995]"
    },
    {
      "src": "function: function [5638,5646]",
      "dest": "function: function [5638,5646]"
    },
    {
      "src": "call_argument [7083,7101]",
      "dest": "call_argument [7083,7101]"
    },
    {
      "src": "type_name [7572,7578]",
      "dest": "type_name [7572,7578]"
    },
    {
      "src": "state_mutability [25207,25211]",
      "dest": "state_mutability [25207,25211]"
    },
    {
      "src": "function_body [6827,7261]",
      "dest": "function_body [6827,7261]"
    },
    {
      "src": "=: = [28871,28872]",
      "dest": "=: = [28944,28945]"
    },
    {
      "src": "(: ( [16383,16384]",
      "dest": "(: ( [16383,16384]"
    },
    {
      "src": "identifier: a [16667,16668]",
      "dest": "identifier: a [16667,16668]"
    },
    {
      "src": "identifier: vault [29353,29358]",
      "dest": "identifier: vault [29426,29431]"
    },
    {
      "src": "identifier: returndata_size [8145,8160]",
      "dest": "identifier: returndata_size [8145,8160]"
    },
    {
      "src": "{: { [15483,15484]",
      "dest": "{: { [15483,15484]"
    },
    {
      "src": "boolean_literal [13387,13392]",
      "dest": "boolean_literal [13387,13392]"
    },
    {
      "src": "identifier: errorMessage [21608,21620]",
      "dest": "identifier: errorMessage [21608,21620]"
    },
    {
      "src": "struct_member [26838,26852]",
      "dest": "struct_member [26838,26852]"
    },
    {
      "src": "identifier: vault [29061,29066]",
      "dest": "identifier: vault [29134,29139]"
    },
    {
      "src": "type_name [26614,26636]",
      "dest": "type_name [26614,26636]"
    },
    {
      "src": "): ) [8305,8306]",
      "dest": "): ) [8305,8306]"
    },
    {
      "src": "identifier: data [4590,4594]",
      "dest": "identifier: data [4590,4594]"
    },
    {
      "src": "binary_expression [20152,20157]",
      "dest": "binary_expression [20152,20157]"
    },
    {
      "src": "call_argument [5220,5224]",
      "dest": "call_argument [5220,5224]"
    },
    {
      "src": "parameter [5079,5096]",
      "dest": "parameter [5079,5096]"
    },
    {
      "src": "address: address [25598,25605]",
      "dest": "address: address [25598,25605]"
    },
    {
      "src": "string [2711,2771]",
      "dest": "string [2711,2771]"
    },
    {
      "src": "identifier: nonces [23206,23212]",
      "dest": "identifier: nonces [23206,23212]"
    },
    {
      "src": "[: [ [23734,23735]",
      "dest": "[: [ [23734,23735]"
    },
    {
      "src": ",: , [26435,26436]",
      "dest": ",: , [26435,26436]"
    },
    {
      "src": "identifier: target [7094,7100]",
      "dest": "identifier: target [7094,7100]"
    },
    {
      "src": "string [7103,7134]",
      "dest": "string [7103,7134]"
    },
    {
      "src": "call_argument [27437,27442]",
      "dest": "call_argument [27437,27442]"
    },
    {
      "src": "identifier: version [13419,13426]",
      "dest": "identifier: version [13419,13426]"
    },
    {
      "src": "type_name [18130,18137]",
      "dest": "type_name [18130,18137]"
    },
    {
      "src": "yul_function_call [24785,24802]",
      "dest": "yul_function_call [24785,24802]"
    },
    {
      "src": "(: ( [14284,14285]",
      "dest": "(: ( [14284,14285]"
    },
    {
      "src": ",: , [23436,23437]",
      "dest": ",: , [23436,23437]"
    },
    {
      "src": "type_name [5129,5135]",
      "dest": "type_name [5129,5135]"
    },
    {
      "src": "assignment_expression [13298,13320]",
      "dest": "assignment_expression [13298,13320]"
    },
    {
      "src": "returns: returns [25132,25139]",
      "dest": "returns: returns [25132,25139]"
    },
    {
      "src": "{: { [27231,27232]",
      "dest": "{: { [27231,27232]"
    },
    {
      "src": "assignment_expression [23206,23254]",
      "dest": "assignment_expression [23206,23254]"
    },
    {
      "src": "member_expression [28118,28127]",
      "dest": "member_expression [28118,28127]"
    },
    {
      "src": "if_statement [28211,28416]",
      "dest": "if_statement [28268,28448]"
    },
    {
      "src": "internal: internal [23850,23858]",
      "dest": "internal: internal [23850,23858]"
    },
    {
      "src": ".: . [24902,24903]",
      "dest": ".: . [24902,24903]"
    },
    {
      "src": "expression_statement [27675,27720]",
      "dest": "expression_statement [27675,27720]"
    },
    {
      "src": "return: return [18526,18532]",
      "dest": "return: return [18526,18532]"
    },
    {
      "src": "identifier: msg [24899,24902]",
      "dest": "identifier: msg [24899,24902]"
    },
    {
      "src": "false [17095,17100]",
      "dest": "false [17095,17100]"
    },
    {
      "src": "{: { [27873,27874]",
      "dest": "{: { [27873,27874]"
    },
    {
      "src": ",: , [26217,26218]",
      "dest": ",: , [26217,26218]"
    },
    {
      "src": "(: ( [25640,25641]",
      "dest": "(: ( [25640,25641]"
    },
    {
      "src": ">: > [20827,20828]",
      "dest": ">: > [20827,20828]"
    },
    {
      "src": "identifier: encodePacked [23406,23418]",
      "dest": "identifier: encodePacked [23406,23418]"
    },
    {
      "src": "): ) [27700,27701]",
      "dest": "): ) [27700,27701]"
    },
    {
      "src": "function_body [14916,14953]",
      "dest": "function_body [14916,14953]"
    },
    {
      "src": "function_definition [5015,5461]",
      "dest": "function_definition [5015,5461]"
    },
    {
      "src": ",: , [24074,24075]",
      "dest": ",: , [24074,24075]"
    },
    {
      "src": "library_declaration [238,8325]",
      "dest": "library_declaration [238,8325]"
    },
    {
      "src": "call_expression [27794,27806]",
      "dest": "call_expression [27794,27806]"
    },
    {
      "src": "uint: uint [25398,25402]",
      "dest": "uint: uint [25398,25402]"
    },
    {
      "src": "string: string [26342,26348]",
      "dest": "string: string [26342,26348]"
    },
    {
      "src": "number_literal: 0 [6889,6890]",
      "dest": "number_literal: 0 [6889,6890]"
    },
    {
      "src": "return_type_definition [23687,23709]",
      "dest": "return_type_definition [23687,23709]"
    },
    {
      "src": ",: , [26306,26307]",
      "dest": ",: , [26306,26307]"
    },
    {
      "src": "type_name [25260,25264]",
      "dest": "type_name [25260,25264]"
    },
    {
      "src": "primitive_type [26470,26476]",
      "dest": "primitive_type [26470,26476]"
    },
    {
      "src": "identifier: to [25472,25474]",
      "dest": "identifier: to [25472,25474]"
    },
    {
      "src": "(: ( [6668,6669]",
      "dest": "(: ( [6668,6669]"
    },
    {
      "src": "variable_declaration_statement [27464,27516]",
      "dest": "variable_declaration_statement [27464,27516]"
    },
    {
      "src": "identifier: token [27604,27609]",
      "dest": "identifier: token [27604,27609]"
    },
    {
      "src": "return_statement [18911,18924]",
      "dest": "return_statement [18911,18924]"
    },
    {
      "src": "event_paramater [26437,26450]",
      "dest": "event_paramater [26437,26450]"
    },
    {
      "src": "yul_function_call [8205,8224]",
      "dest": "yul_function_call [8205,8224]"
    },
    {
      "src": "internal: internal [17774,17782]",
      "dest": "internal: internal [17774,17782]"
    },
    {
      "src": ",: , [22983,22984]",
      "dest": ",: , [22983,22984]"
    },
    {
      "src": ",: , [27559,27560]",
      "dest": ",: , [27559,27560]"
    },
    {
      "src": "visibility [20036,20044]",
      "dest": "visibility [20036,20044]"
    },
    {
      "src": "visibility [25065,25073]",
      "dest": "visibility [25065,25073]"
    },
    {
      "src": "): ) [25695,25696]",
      "dest": "): ) [25695,25696]"
    },
    {
      "src": "return_type_definition [14692,14707]",
      "dest": "return_type_definition [14692,14707]"
    },
    {
      "src": "type_name [28856,28860]",
      "dest": "type_name [28929,28933]"
    },
    {
      "src": "identifier: functionCallWithValue [3627,3648]",
      "dest": "identifier: functionCallWithValue [3627,3648]"
    },
    {
      "src": "(: ( [26199,26200]",
      "dest": "(: ( [26199,26200]"
    },
    {
      "src": "call_expression [5337,5368]",
      "dest": "call_expression [5337,5368]"
    },
    {
      "src": "identifier: x [28881,28882]",
      "dest": "identifier: x [28954,28955]"
    },
    {
      "src": "): ) [14511,14512]",
      "dest": "): ) [14511,14512]"
    },
    {
      "src": "\": \" [13749,13750]",
      "dest": "\": \" [13749,13750]"
    },
    {
      "src": ".: . [1527,1528]",
      "dest": ".: . [1527,1528]"
    },
    {
      "src": "string [2681,2683]",
      "dest": "string [2681,2683]"
    },
    {
      "src": "type_name [26470,26476]",
      "dest": "type_name [26470,26476]"
    },
    {
      "src": "function_definition [25428,25500]",
      "dest": "function_definition [25428,25500]"
    },
    {
      "src": "binary_expression [28491,28512]",
      "dest": "binary_expression [28564,28585]"
    },
    {
      "src": "identifier: AddressUpgradeable [246,264]",
      "dest": "identifier: AddressUpgradeable [246,264]"
    },
    {
      "src": "identifier: a [19467,19468]",
      "dest": "identifier: a [19467,19468]"
    },
    {
      "src": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting with custom message when dividing by zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryMod}.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [20894,21529]",
      "dest": "comment: /**      * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),      * reverting with custom message when dividing by zero.      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {tryMod}.      *      * Counterpart to Solidity's `%` operator. This function uses a `revert`      * opcode (which leaves remaining gas untouched) while Solidity uses an      * invalid opcode to revert (consuming all remaining gas).      *      * Requirements:      *      * - The divisor cannot be zero.      */ [20894,21529]"
    },
    {
      "src": "): ) [7851,7852]",
      "dest": "): ) [7851,7852]"
    },
    {
      "src": "parameter [25641,25645]",
      "dest": "parameter [25641,25645]"
    },
    {
      "src": "function: function [14255,14263]",
      "dest": "function: function [14255,14263]"
    },
    {
      "src": "call_expression [27887,27945]",
      "dest": "call_expression [27887,27945]"
    },
    {
      "src": "++: ++ [28746,28748]",
      "dest": "++: ++ [28819,28821]"
    },
    {
      "src": "(: ( [27793,27794]",
      "dest": "(: ( [27793,27794]"
    },
    {
      "src": "\": \" [13705,13706]",
      "dest": "\": \" [13705,13706]"
    },
    {
      "src": "expression_statement [11952,11954]",
      "dest": "expression_statement [11952,11954]"
    },
    {
      "src": "external: external [25697,25705]",
      "dest": "external: external [25697,25705]"
    },
    {
      "src": "identifier: call [28890,28894]",
      "dest": "identifier: call [28963,28967]"
    },
    {
      "src": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [16433,16512]",
      "dest": "comment: // Gas optimization: this is cheaper than requiring 'a' not being zero, but the [16433,16512]"
    },
    {
      "src": "type_name [19965,19972]",
      "dest": "type_name [19965,19972]"
    },
    {
      "src": "): ) [5367,5368]",
      "dest": "): ) [5367,5368]"
    },
    {
      "src": "uint256: uint256 [20699,20706]",
      "dest": "uint256: uint256 [20699,20706]"
    },
    {
      "src": "identifier: msg [26710,26713]",
      "dest": "identifier: msg [26710,26713]"
    },
    {
      "src": "type_name [22931,22936]",
      "dest": "type_name [22931,22936]"
    },
    {
      "src": "}: } [28421,28422]",
      "dest": "}: } [28494,28495]"
    },
    {
      "src": ".: . [27970,27971]",
      "dest": ".: . [27970,27971]"
    },
    {
      "src": "type_name [2633,2637]",
      "dest": "type_name [2633,2637]"
    },
    {
      "src": "(: ( [27645,27646]",
      "dest": "(: ( [27645,27646]"
    },
    {
      "src": "block_statement [8272,8317]",
      "dest": "block_statement [8272,8317]"
    },
    {
      "src": "memory: memory [25147,25153]",
      "dest": "memory: memory [25147,25153]"
    },
    {
      "src": "(: ( [18846,18847]",
      "dest": "(: ( [18846,18847]"
    },
    {
      "src": "identifier: value [2666,2671]",
      "dest": "identifier: value [2666,2671]"
    },
    {
      "src": "identifier: tryDiv [16974,16980]",
      "dest": "identifier: tryDiv [16974,16980]"
    },
    {
      "src": "primitive_type [21575,21582]",
      "dest": "primitive_type [21575,21582]"
    },
    {
      "src": "event_paramater [22020,22043]",
      "dest": "event_paramater [22020,22043]"
    },
    {
      "src": "address: address [24511,24518]",
      "dest": "address: address [24511,24518]"
    },
    {
      "src": "comment: /// @solidity memory-safe-assembly [8067,8101]",
      "dest": "comment: /// @solidity memory-safe-assembly [8067,8101]"
    },
    {
      "src": "type_name [28587,28599]",
      "dest": "type_name [28660,28672]"
    },
    {
      "src": "identifier: version [11143,11150]",
      "dest": "identifier: version [11143,11150]"
    },
    {
      "src": "expression_statement [29033,29109]",
      "dest": "expression_statement [29106,29182]"
    },
    {
      "src": "call_argument [6304,6311]",
      "dest": "call_argument [6304,6311]"
    },
    {
      "src": "primitive_type [6813,6818]",
      "dest": "primitive_type [6813,6818]"
    },
    {
      "src": "block_statement [20078,20168]",
      "dest": "block_statement [20078,20168]"
    },
    {
      "src": "!=: != [27375,27377]",
      "dest": "!=: != [27375,27377]"
    },
    {
      "src": "identifier: errorMessage [20832,20844]",
      "dest": "identifier: errorMessage [20832,20844]"
    },
    {
      "src": "call_expression [13189,13288]",
      "dest": "call_expression [13189,13288]"
    },
    {
      "src": "identifier: msg [27905,27908]",
      "dest": "identifier: msg [27905,27908]"
    },
    {
      "src": "identifier: data [24603,24607]",
      "dest": "identifier: data [24603,24607]"
    },
    {
      "src": ",: , [16687,16688]",
      "dest": ",: , [16687,16688]"
    },
    {
      "src": "call_argument [23074,23085]",
      "dest": "call_argument [23074,23085]"
    },
    {
      "src": "): ) [27212,27213]",
      "dest": "): ) [27212,27213]"
    },
    {
      "src": "return_type_definition [25027,25040]",
      "dest": "return_type_definition [25027,25040]"
    },
    {
      "src": "primitive_type [10991,10995]",
      "dest": "primitive_type [10991,10995]"
    },
    {
      "src": "identifier: _initialized [11752,11764]",
      "dest": "identifier: _initialized [11752,11764]"
    },
    {
      "src": "{: { [24526,24527]",
      "dest": "{: { [24526,24527]"
    },
    {
      "src": "): ) [24802,24803]",
      "dest": "): ) [24802,24803]"
    },
    {
      "src": "bytes: bytes [24044,24049]",
      "dest": "bytes: bytes [24044,24049]"
    },
    {
      "src": "memory: memory [28777,28783]",
      "dest": "memory: memory [28850,28856]"
    },
    {
      "src": "variable_declaration_statement [5295,5369]",
      "dest": "variable_declaration_statement [5295,5369]"
    },
    {
      "src": "{: { [28894,28895]",
      "dest": "{: { [28967,28968]"
    },
    {
      "src": "(: ( [18506,18507]",
      "dest": "(: ( [18506,18507]"
    },
    {
      "src": "}: } [8265,8266]",
      "dest": "}: } [8265,8266]"
    },
    {
      "src": "): ) [25063,25064]",
      "dest": "): ) [25063,25064]"
    },
    {
      "src": "event_definition [26362,26485]",
      "dest": "event_definition [26362,26485]"
    },
    {
      "src": "identifier: errorMessage [7839,7851]",
      "dest": "identifier: errorMessage [7839,7851]"
    },
    {
      "src": "string: string [27403,27409]",
      "dest": "string: string [27403,27409]"
    },
    {
      "src": "return_statement [20859,20872]",
      "dest": "return_statement [20859,20872]"
    },
    {
      "src": "=: = [29634,29635]",
      "dest": "=: = [29707,29708]"
    },
    {
      "src": "parameter [24012,24025]",
      "dest": "parameter [24012,24025]"
    },
    {
      "src": "parameter [7800,7823]",
      "dest": "parameter [7800,7823]"
    },
    {
      "src": "identifier: errorMessage [20732,20744]",
      "dest": "identifier: errorMessage [20732,20744]"
    },
    {
      "src": "type_name [25356,25360]",
      "dest": "type_name [25356,25360]"
    },
    {
      "src": ",: , [5119,5120]",
      "dest": ",: , [5119,5120]"
    },
    {
      "src": "(: ( [23073,23074]",
      "dest": "(: ( [23073,23074]"
    },
    {
      "src": "uint256: uint256 [17797,17804]",
      "dest": "uint256: uint256 [17797,17804]"
    },
    {
      "src": ",: , [23158,23159]",
      "dest": ",: , [23158,23159]"
    },
    {
      "src": "returns: returns [24460,24467]",
      "dest": "returns: returns [24460,24467]"
    },
    {
      "src": "identifier: addSpotter [28437,28447]",
      "dest": "identifier: addSpotter [28510,28520]"
    },
    {
      "src": "memory: memory [23362,23368]",
      "dest": "memory: memory [23362,23368]"
    },
    {
      "src": "comment: /**      * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the      * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be      * used to initialize parent contracts.      *      * A reinitializer may be used after the original initialization step. This is essential to configure modules that      * are added through upgrades and that require initialization.      *      * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`      * cannot be nested. If one is invoked in the context of another, execution will revert.      *      * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in      * a contract, executing them in the right order is up to the developer or operator.      *      * WARNING: setting the version to 255 will prevent any future reinitialization.      *      * Emits an {Initialized} event.      */ [12074,13136]",
      "dest": "comment: /**      * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the      * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be      * used to initialize parent contracts.      *      * A reinitializer may be used after the original initialization step. This is essential to configure modules that      * are added through upgrades and that require initialization.      *      * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`      * cannot be nested. If one is invoked in the context of another, execution will revert.      *      * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in      * a contract, executing them in the right order is up to the developer or operator.      *      * WARNING: setting the version to 255 will prevent any future reinitialization.      *      * Emits an {Initialized} event.      */ [12074,13136]"
    },
    {
      "src": "visibility [4043,4051]",
      "dest": "visibility [4043,4051]"
    },
    {
      "src": "parameter [5682,5699]",
      "dest": "parameter [5682,5699]"
    },
    {
      "src": "identifier: token [26301,26306]",
      "dest": "identifier: token [26301,26306]"
    },
    {
      "src": "type_name [5055,5062]",
      "dest": "type_name [5055,5062]"
    },
    {
      "src": "parameter [29684,29709]",
      "dest": "parameter [29757,29782]"
    },
    {
      "src": "identifier: tokenName [26888,26897]",
      "dest": "identifier: tokenName [26888,26897]"
    },
    {
      "src": "identifier: require [27959,27966]",
      "dest": "identifier: require [27959,27966]"
    },
    {
      "src": "bool: bool [2633,2637]",
      "dest": "bool: bool [2633,2637]"
    },
    {
      "src": "type_name [17763,17770]",
      "dest": "type_name [17763,17770]"
    },
    {
      "src": "function_definition [7482,7777]",
      "dest": "function_definition [7482,7777]"
    },
    {
      "src": "identifier: value [28082,28087]",
      "dest": "identifier: value [28082,28087]"
    },
    {
      "src": "identifier: b [21701,21702]",
      "dest": "identifier: b [21701,21702]"
    },
    {
      "src": "string [27928,27944]",
      "dest": "string [27928,27944]"
    },
    {
      "src": "]: ] [23224,23225]",
      "dest": "]: ] [23224,23225]"
    },
    {
      "src": "return: return [17087,17093]",
      "dest": "return: return [17087,17093]"
    },
    {
      "src": "identifier: errorMessage [6121,6133]",
      "dest": "identifier: errorMessage [6121,6133]"
    },
    {
      "src": "type_name [24044,24049]",
      "dest": "type_name [24044,24049]"
    },
    {
      "src": "call_argument [27638,27651]",
      "dest": "call_argument [27638,27651]"
    },
    {
      "src": "call_expression [27493,27515]",
      "dest": "call_expression [27493,27515]"
    },
    {
      "src": "identifier: nonces [23228,23234]",
      "dest": "identifier: nonces [23228,23234]"
    },
    {
      "src": "}: } [5834,5835]",
      "dest": "}: } [5834,5835]"
    },
    {
      "src": "identifier: _msgSender [28658,28668]",
      "dest": "identifier: _msgSender [28731,28741]"
    },
    {
      "src": "address: address [24265,24272]",
      "dest": "address: address [24265,24272]"
    },
    {
      "src": "): ) [7963,7964]",
      "dest": "): ) [7963,7964]"
    },
    {
      "src": "identifier: b [17079,17080]",
      "dest": "identifier: b [17079,17080]"
    },
    {
      "src": "return_statement [16107,16125]",
      "dest": "return_statement [16107,16125]"
    },
    {
      "src": "(: ( [5362,5363]",
      "dest": "(: ( [5362,5363]"
    },
    {
      "src": "): ) [14516,14517]",
      "dest": "): ) [14516,14517]"
    },
    {
      "src": "primitive_type [24343,24350]",
      "dest": "primitive_type [24343,24350]"
    },
    {
      "src": "primitive_type [4010,4016]",
      "dest": "primitive_type [4010,4016]"
    },
    {
      "src": ",: , [24218,24219]",
      "dest": ",: , [24218,24219]"
    },
    {
      "src": "identifier: x [29098,29099]",
      "dest": "identifier: x [29171,29172]"
    },
    {
      "src": "call_argument [23549,23560]",
      "dest": "call_argument [23549,23560]"
    },
    {
      "src": "public: public [26575,26581]",
      "dest": "public: public [26575,26581]"
    },
    {
      "src": "external: external [25018,25026]",
      "dest": "external: external [25018,25026]"
    },
    {
      "src": "identifier: balanceOf [25171,25180]",
      "dest": "identifier: balanceOf [25171,25180]"
    },
    {
      "src": "identifier: functionSignature [23419,23436]",
      "dest": "identifier: functionSignature [23419,23436]"
    },
    {
      "src": "state_mutability [24447,24451]",
      "dest": "state_mutability [24447,24451]"
    },
    {
      "src": "): ) [4143,4144]",
      "dest": "): ) [4143,4144]"
    },
    {
      "src": "identifier: getChainID [23108,23118]",
      "dest": "identifier: getChainID [23108,23118]"
    },
    {
      "src": "): ) [29709,29710]",
      "dest": "): ) [29782,29783]"
    },
    {
      "src": "parameter [7825,7851]",
      "dest": "parameter [7825,7851]"
    },
    {
      "src": "return: return [18911,18917]",
      "dest": "return: return [18911,18917]"
    },
    {
      "src": "visibility [24438,24446]",
      "dest": "visibility [24438,24446]"
    },
    {
      "src": "call_argument [23108,23120]",
      "dest": "call_argument [23108,23120]"
    },
    {
      "src": "{: { [2538,2539]",
      "dest": "{: { [2538,2539]"
    },
    {
      "src": "struct_member [26861,26872]",
      "dest": "struct_member [26861,26872]"
    },
    {
      "src": "{: { [5738,5739]",
      "dest": "{: { [5738,5739]"
    },
    {
      "src": "function_definition [18106,18202]",
      "dest": "function_definition [18106,18202]"
    },
    {
      "src": "return: return [14926,14932]",
      "dest": "return: return [14926,14932]"
    },
    {
      "src": "parameter [15652,15661]",
      "dest": "parameter [15652,15661]"
    },
    {
      "src": "primitive_type [22999,23004]",
      "dest": "primitive_type [22999,23004]"
    },
    {
      "src": "identifier: isSpotter [28648,28657]",
      "dest": "identifier: isSpotter [28721,28730]"
    },
    {
      "src": "(: ( [20109,20110]",
      "dest": "(: ( [20109,20110]"
    },
    {
      "src": "return_statement [7163,7181]",
      "dest": "return_statement [7163,7181]"
    },
    {
      "src": "identifier: returndata [5323,5333]",
      "dest": "identifier: returndata [5323,5333]"
    },
    {
      "src": "): ) [19416,19417]",
      "dest": "): ) [19416,19417]"
    },
    {
      "src": ":=: := [8161,8163]",
      "dest": ":=: := [8161,8163]"
    },
    {
      "src": "visibility [21627,21635]",
      "dest": "visibility [21627,21635]"
    },
    {
      "src": "block_statement [27389,27860]",
      "dest": "block_statement [27389,27860]"
    },
    {
      "src": "tuple_expression [15815,15824]",
      "dest": "tuple_expression [15815,15824]"
    },
    {
      "src": "visibility [14678,14686]",
      "dest": "visibility [14678,14686]"
    },
    {
      "src": "internal: internal [18484,18492]",
      "dest": "internal: internal [18484,18492]"
    },
    {
      "src": "(: ( [5179,5180]",
      "dest": "(: ( [5179,5180]"
    },
    {
      "src": "[: [ [28657,28658]",
      "dest": "[: [ [28730,28731]"
    },
    {
      "src": "(: ( [16759,16760]",
      "dest": "(: ( [16759,16760]"
    },
    {
      "src": "state_mutability [18878,18882]",
      "dest": "state_mutability [18878,18882]"
    },
    {
      "src": "]: ] [28927,28928]",
      "dest": "]: ] [29000,29001]"
    },
    {
      "src": "memory: memory [7832,7838]",
      "dest": "memory: memory [7832,7838]"
    },
    {
      "src": "identifier: BasicMetaTransaction [25806,25826]",
      "dest": "identifier: BasicMetaTransaction [25806,25826]"
    },
    {
      "src": "{: { [14916,14917]",
      "dest": "{: { [14916,14917]"
    },
    {
      "src": "binary_expression [5212,5242]",
      "dest": "binary_expression [5212,5242]"
    },
    {
      "src": "call_expression [20817,20845]",
      "dest": "call_expression [20817,20845]"
    },
    {
      "src": "string_literal [28673,28694]",
      "dest": "string_literal [28746,28767]"
    },
    {
      "src": "state_variable_declaration [25873,25900]",
      "dest": "state_variable_declaration [25873,25900]"
    },
    {
      "src": "(: ( [28880,28881]",
      "dest": "(: ( [28953,28954]"
    },
    {
      "src": "call_expression [28873,28942]",
      "dest": "call_expression [28946,29015]"
    },
    {
      "src": "parameter [2486,2511]",
      "dest": "parameter [2486,2511]"
    },
    {
      "src": "number_literal: 0 [4128,4129]",
      "dest": "number_literal: 0 [4128,4129]"
    },
    {
      "src": "variable_declaration [28710,28719]",
      "dest": "variable_declaration [28783,28792]"
    },
    {
      "src": "true [17475,17479]",
      "dest": "true [17475,17479]"
    },
    {
      "src": "identifier: _initialized [13298,13310]",
      "dest": "identifier: _initialized [13298,13310]"
    },
    {
      "src": "[: [ [28532,28533]",
      "dest": "[: [ [28605,28606]"
    },
    {
      "src": "(: ( [8204,8205]",
      "dest": "(: ( [8204,8205]"
    },
    {
      "src": "type_name [11137,11142]",
      "dest": "type_name [11137,11142]"
    },
    {
      "src": "call_argument [28968,28983]",
      "dest": "call_argument [29041,29056]"
    },
    {
      "src": "call_expression [28640,28695]",
      "dest": "call_expression [28713,28768]"
    },
    {
      "src": "contract_body [24991,25761]",
      "dest": "contract_body [24991,25761]"
    },
    {
      "src": "type_name [1290,1294]",
      "dest": "type_name [1290,1294]"
    },
    {
      "src": "false [17444,17449]",
      "dest": "false [17444,17449]"
    },
    {
      "src": "interface: interface [24975,24984]",
      "dest": "interface: interface [24975,24984]"
    },
    {
      "src": "): ) [24801,24802]",
      "dest": "): ) [24801,24802]"
    },
    {
      "src": "\": \" [28940,28941]",
      "dest": "\": \" [29013,29014]"
    },
    {
      "src": "identifier: _spotter [28456,28464]",
      "dest": "identifier: _spotter [28529,28537]"
    },
    {
      "src": "call_argument [29758,29781]",
      "dest": "call_argument [29831,29854]"
    },
    {
      "src": "identifier: userAddress [23074,23085]",
      "dest": "identifier: userAddress [23074,23085]"
    },
    {
      "src": "member_expression [5337,5348]",
      "dest": "member_expression [5337,5348]"
    },
    {
      "src": "identifier: initializer [27003,27014]",
      "dest": "identifier: initializer [27003,27014]"
    },
    {
      "src": "member_expression [29312,29323]",
      "dest": "member_expression [29385,29396]"
    },
    {
      "src": "): ) [11981,11982]",
      "dest": "): ) [11981,11982]"
    },
    {
      "src": "): ) [25360,25361]",
      "dest": "): ) [25360,25361]"
    },
    {
      "src": "primitive_type [22931,22936]",
      "dest": "primitive_type [22931,22936]"
    },
    {
      "src": "function_definition [23981,24410]",
      "dest": "function_definition [23981,24410]"
    },
    {
      "src": "identifier: success [5420,5427]",
      "dest": "identifier: success [5420,5427]"
    },
    {
      "src": "visibility [22078,22085]",
      "dest": "visibility [22078,22085]"
    },
    {
      "src": "call_argument [4709,4714]",
      "dest": "call_argument [4709,4714]"
    },
    {
      "src": "identifier: userAddress [23235,23246]",
      "dest": "identifier: userAddress [23235,23246]"
    },
    {
      "src": "pure: pure [7614,7618]",
      "dest": "pure: pure [7614,7618]"
    },
    {
      "src": "identifier: x [29085,29086]",
      "dest": "identifier: x [29158,29159]"
    },
    {
      "src": ",: , [27636,27637]",
      "dest": ",: , [27636,27637]"
    },
    {
      "src": "=>: => [22066,22068]",
      "dest": "=>: => [22066,22068]"
    },
    {
      "src": "assignment_expression [28037,28087]",
      "dest": "assignment_expression [28037,28087]"
    },
    {
      "src": "identifier: data [4703,4707]",
      "dest": "identifier: data [4703,4707]"
    },
    {
      "src": "identifier: c [15770,15771]",
      "dest": "identifier: c [15770,15771]"
    },
    {
      "src": "call_argument [14322,14336]",
      "dest": "call_argument [14322,14336]"
    },
    {
      "src": "identifier: this [23391,23395]",
      "dest": "identifier: this [23391,23395]"
    },
    {
      "src": "call_argument [2702,2709]",
      "dest": "call_argument [2702,2709]"
    },
    {
      "src": "primitive_type [16981,16988]",
      "dest": "primitive_type [16981,16988]"
    },
    {
      "src": ",: , [3664,3665]",
      "dest": ",: , [3664,3665]"
    },
    {
      "src": "(: ( [5723,5724]",
      "dest": "(: ( [5723,5724]"
    },
    {
      "src": "): ) [23046,23047]",
      "dest": "): ) [23046,23047]"
    },
    {
      "src": "visibility [25881,25887]",
      "dest": "visibility [25881,25887]"
    },
    {
      "src": "): ) [12050,12051]",
      "dest": "): ) [12050,12051]"
    },
    {
      "src": ".: . [2660,2661]",
      "dest": ".: . [2660,2661]"
    },
    {
      "src": "(: ( [17078,17079]",
      "dest": "(: ( [17078,17079]"
    },
    {
      "src": ".: . [24199,24200]",
      "dest": ".: . [24199,24200]"
    },
    {
      "src": "/: / [20868,20869]",
      "dest": "/: / [20868,20869]"
    },
    {
      "src": "state_variable_declaration [10991,11018]",
      "dest": "state_variable_declaration [10991,11018]"
    },
    {
      "src": "identifier: symbol [26477,26483]",
      "dest": "identifier: symbol [26477,26483]"
    },
    {
      "src": "memory: memory [5085,5091]",
      "dest": "memory: memory [5085,5091]"
    },
    {
      "src": "primitive_type [6188,6192]",
      "dest": "primitive_type [6188,6192]"
    },
    {
      "src": "binary_expression [6868,6890]",
      "dest": "binary_expression [6868,6890]"
    },
    {
      "src": "): ) [16359,16360]",
      "dest": "): ) [16359,16360]"
    },
    {
      "src": "parameter [25035,25039]",
      "dest": "parameter [25035,25039]"
    },
    {
      "src": "pragma: pragma [24950,24956]",
      "dest": "pragma: pragma [24950,24956]"
    },
    {
      "src": "parameter [17375,17379]",
      "dest": "parameter [17375,17379]"
    },
    {
      "src": "identifier: require [28483,28490]",
      "dest": "identifier: require [28556,28563]"
    },
    {
      "src": "identifier: data [5363,5367]",
      "dest": "identifier: data [5363,5367]"
    },
    {
      "src": "): ) [17137,17138]",
      "dest": "): ) [17137,17138]"
    },
    {
      "src": "{: { [16082,16083]",
      "dest": "{: { [16082,16083]"
    },
    {
      "src": "parameter [6678,6692]",
      "dest": "parameter [6678,6692]"
    },
    {
      "src": "return: return [24379,24385]",
      "dest": "return: return [24379,24385]"
    },
    {
      "src": "yul_identifier [8213,8223]",
      "dest": "yul_identifier [8213,8223]"
    },
    {
      "src": "event_paramater [26394,26407]",
      "dest": "event_paramater [26394,26407]"
    },
    {
      "src": "(: ( [24212,24213]",
      "dest": "(: ( [24212,24213]"
    },
    {
      "src": "}: } [4150,4151]",
      "dest": "}: } [4150,4151]"
    },
    {
      "src": ",: , [26468,26469]",
      "dest": ",: , [26468,26469]"
    },
    {
      "src": "identifier: AddressUpgradeable [11704,11722]",
      "dest": "identifier: AddressUpgradeable [11704,11722]"
    },
    {
      "src": "parameter [19407,19416]",
      "dest": "parameter [19407,19416]"
    },
    {
      "src": "call_argument [27991,28022]",
      "dest": "call_argument [27991,28022]"
    },
    {
      "src": "event_definition [26254,26357]",
      "dest": "event_definition [26254,26357]"
    },
    {
      "src": "return: return [17118,17124]",
      "dest": "return: return [17118,17124]"
    },
    {
      "src": "identifier: sender [29741,29747]",
      "dest": "identifier: sender [29814,29820]"
    },
    {
      "src": "identifier: a [20688,20689]",
      "dest": "identifier: a [20688,20689]"
    },
    {
      "src": "type_cast_expression [23383,23396]",
      "dest": "type_cast_expression [23383,23396]"
    },
    {
      "src": "identifier: value [4709,4714]",
      "dest": "identifier: value [4709,4714]"
    },
    {
      "src": "solidity: solidity [152,160]",
      "dest": "solidity: solidity [152,160]"
    },
    {
      "src": ".: . [28882,28883]",
      "dest": ".: . [28955,28956]"
    },
    {
      "src": "identifier: code [1528,1532]",
      "dest": "identifier: code [1528,1532]"
    },
    {
      "src": "!: ! [14322,14323]",
      "dest": "!: ! [14322,14323]"
    },
    {
      "src": "}: } [16815,16816]",
      "dest": "}: } [16815,16816]"
    },
    {
      "src": "): ) [20844,20845]",
      "dest": "): ) [20844,20845]"
    },
    {
      "src": ",: , [15790,15791]",
      "dest": ",: , [15790,15791]"
    },
    {
      "src": "identifier: a [16744,16745]",
      "dest": "identifier: a [16744,16745]"
    },
    {
      "src": "if_statement [16736,16770]",
      "dest": "if_statement [16736,16770]"
    },
    {
      "src": "yul_assignment [22204,22219]",
      "dest": "yul_assignment [22204,22219]"
    },
    {
      "src": "return_statement [19460,19473]",
      "dest": "return_statement [19460,19473]"
    },
    {
      "src": "bytes: bytes [5180,5185]",
      "dest": "bytes: bytes [5180,5185]"
    },
    {
      "src": "external: external [25065,25073]",
      "dest": "external: external [25065,25073]"
    },
    {
      "src": "identifier: account [25189,25196]",
      "dest": "identifier: account [25189,25196]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {trySub}.      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [19485,19938]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, reverting with custom message on      * overflow (when the result is negative).      *      * CAUTION: This function is deprecated because it requires allocating memory for the error      * message unnecessarily. For custom revert reasons use {trySub}.      *      * Counterpart to Solidity's `-` operator.      *      * Requirements:      *      * - Subtraction cannot overflow.      */ [19485,19938]"
    },
    {
      "src": "returns: returns [25559,25566]",
      "dest": "returns: returns [25559,25566]"
    },
    {
      "src": "type_name [26409,26413]",
      "dest": "type_name [26409,26413]"
    },
    {
      "src": "string: string [26470,26476]",
      "dest": "string: string [26470,26476]"
    },
    {
      "src": "parameter [18847,18856]",
      "dest": "parameter [18847,18856]"
    },
    {
      "src": "type_name [18858,18865]",
      "dest": "type_name [18858,18865]"
    },
    {
      "src": "variable_declaration_statement [24162,24256]",
      "dest": "variable_declaration_statement [24162,24256]"
    },
    {
      "src": "): ) [4654,4655]",
      "dest": "): ) [4654,4655]"
    },
    {
      "src": "parameter [28448,28464]",
      "dest": "parameter [28521,28537]"
    },
    {
      "src": "parenthesized_expression [11662,11698]",
      "dest": "parenthesized_expression [11662,11698]"
    },
    {
      "src": "}: } [24927,24928]",
      "dest": "}: } [24927,24928]"
    },
    {
      "src": "calldata: calldata [28602,28610]",
      "dest": "calldata: calldata [28675,28683]"
    },
    {
      "src": "solidity: solidity [8492,8500]",
      "dest": "solidity: solidity [8492,8500]"
    },
    {
      "src": "parameter [5106,5119]",
      "dest": "parameter [5106,5119]"
    },
    {
      "src": "(: ( [23569,23570]",
      "dest": "(: ( [23569,23570]"
    },
    {
      "src": "return_statement [23892,23969]",
      "dest": "return_statement [23892,23969]"
    },
    {
      "src": "(: ( [16145,16146]",
      "dest": "(: ( [16145,16146]"
    },
    {
      "src": "(: ( [16099,16100]",
      "dest": "(: ( [16099,16100]"
    },
    {
      "src": "user_defined_type [25827,25840]",
      "dest": "user_defined_type [25827,25840]"
    },
    {
      "src": "{: { [28254,28255]",
      "dest": "{: { [28297,28298]"
    },
    {
      "src": "address: address [28065,28072]",
      "dest": "address: address [28065,28072]"
    },
    {
      "src": "function_definition [23641,23747]",
      "dest": "function_definition [23641,23747]"
    },
    {
      "src": "type_name [7517,7521]",
      "dest": "type_name [7517,7521]"
    },
    {
      "src": "type_name [26861,26865]",
      "dest": "type_name [26861,26865]"
    },
    {
      "src": "address: address [26275,26282]",
      "dest": "address: address [26275,26282]"
    },
    {
      "src": "(: ( [17443,17444]",
      "dest": "(: ( [17443,17444]"
    },
    {
      "src": "(: ( [2632,2633]",
      "dest": "(: ( [2632,2633]"
    },
    {
      "src": "call_argument [11784,11832]",
      "dest": "call_argument [11784,11832]"
    },
    {
      "src": "return: return [17436,17442]",
      "dest": "return: return [17436,17442]"
    },
    {
      "src": "{: { [7713,7714]",
      "dest": "{: { [7713,7714]"
    },
    {
      "src": ".: . [14466,14467]",
      "dest": ".: . [14466,14467]"
    },
    {
      "src": "primitive_type [4061,4066]",
      "dest": "primitive_type [4061,4066]"
    },
    {
      "src": "event_paramater [26293,26306]",
      "dest": "event_paramater [26293,26306]"
    },
    {
      "src": "function_body [18901,18930]",
      "dest": "function_body [18901,18930]"
    },
    {
      "src": "internal: internal [14887,14895]",
      "dest": "internal: internal [14887,14895]"
    },
    {
      "src": "(: ( [23658,23659]",
      "dest": "(: ( [23658,23659]"
    },
    {
      "src": "call_argument [23067,23158]",
      "dest": "call_argument [23067,23158]"
    },
    {
      "src": "): ) [24374,24375]",
      "dest": "): ) [24374,24375]"
    },
    {
      "src": "public: public [26996,27002]",
      "dest": "public: public [26996,27002]"
    },
    {
      "src": "function_body [14304,14534]",
      "dest": "function_body [14304,14534]"
    },
    {
      "src": "[: [ [28915,28916]",
      "dest": "[: [ [28988,28989]"
    },
    {
      "src": "expression_statement [29793,29811]",
      "dest": "expression_statement [29866,29884]"
    },
    {
      "src": "call_argument [4131,4143]",
      "dest": "call_argument [4131,4143]"
    },
    {
      "src": "call_argument [28343,28350]",
      "dest": "call_argument [28402,28409]"
    },
    {
      "src": "{: { [17390,17391]",
      "dest": "{: { [17390,17391]"
    },
    {
      "src": "emit_statement [28142,28192]",
      "dest": "emit_statement [28142,28192]"
    },
    {
      "src": "): ) [17772,17773]",
      "dest": "): ) [17772,17773]"
    },
    {
      "src": "(: ( [16980,16981]",
      "dest": "(: ( [16980,16981]"
    },
    {
      "src": "parameter [18858,18867]",
      "dest": "parameter [18858,18867]"
    },
    {
      "src": "assembly: assembly [22181,22189]",
      "dest": "assembly: assembly [22181,22189]"
    },
    {
      "src": "uint8: uint8 [14701,14706]",
      "dest": "uint8: uint8 [14701,14706]"
    },
    {
      "src": "assignment_expression [23720,23740]",
      "dest": "assignment_expression [23720,23740]"
    },
    {
      "src": "primitive_type [25683,25687]",
      "dest": "primitive_type [25683,25687]"
    },
    {
      "src": "identifier: this [27646,27650]",
      "dest": "identifier: this [27646,27650]"
    },
    {
      "src": "bytes: bytes [6813,6818]",
      "dest": "bytes: bytes [6813,6818]"
    },
    {
      "src": "=: = [11926,11927]",
      "dest": "=: = [11926,11927]"
    },
    {
      "src": "primitive_type [6757,6763]",
      "dest": "primitive_type [6757,6763]"
    },
    {
      "src": "type_name [4061,4066]",
      "dest": "type_name [4061,4066]"
    },
    {
      "src": "identifier: depositedToken [26260,26274]",
      "dest": "identifier: depositedToken [26260,26274]"
    },
    {
      "src": "binary_expression [18190,18195]",
      "dest": "binary_expression [18190,18195]"
    },
    {
      "src": "\": \" [5826,5827]",
      "dest": "\": \" [5826,5827]"
    },
    {
      "src": "expression_statement [20817,20846]",
      "dest": "expression_statement [20817,20846]"
    },
    {
      "src": "primitive_type [6724,6729]",
      "dest": "primitive_type [6724,6729]"
    },
    {
      "src": ",: , [16795,16796]",
      "dest": ",: , [16795,16796]"
    },
    {
      "src": "state_mutability [6149,6153]",
      "dest": "state_mutability [6149,6153]"
    },
    {
      "src": "=: = [24175,24176]",
      "dest": "=: = [24175,24176]"
    },
    {
      "src": "view: view [1276,1280]",
      "dest": "view: view [1276,1280]"
    },
    {
      "src": "address: address [26815,26822]",
      "dest": "address: address [26815,26822]"
    },
    {
      "src": "expression_statement [13371,13393]",
      "dest": "expression_statement [13371,13393]"
    },
    {
      "src": "primitive_type [27182,27189]",
      "dest": "primitive_type [27182,27189]"
    },
    {
      "src": "(: ( [24144,24145]",
      "dest": "(: ( [24144,24145]"
    },
    {
      "src": "call_expression [4673,4760]",
      "dest": "call_expression [4673,4760]"
    },
    {
      "src": "(: ( [17751,17752]",
      "dest": "(: ( [17751,17752]"
    },
    {
      "src": "identifier: success [6304,6311]",
      "dest": "identifier: success [6304,6311]"
    },
    {
      "src": "memory: memory [5136,5142]",
      "dest": "memory: memory [5136,5142]"
    },
    {
      "src": "state_variable_declaration [26933,26968]",
      "dest": "state_variable_declaration [26933,26968]"
    },
    {
      "src": "(: ( [23694,23695]",
      "dest": "(: ( [23694,23695]"
    },
    {
      "src": "block_statement [28750,29438]",
      "dest": "block_statement [28823,29511]"
    },
    {
      "src": "identifier: c [15743,15744]",
      "dest": "identifier: c [15743,15744]"
    },
    {
      "src": "): ) [16157,16158]",
      "dest": "): ) [16157,16158]"
    },
    {
      "src": "): ) [8180,8181]",
      "dest": "): ) [8180,8181]"
    },
    {
      "src": "function_body [3610,3706]",
      "dest": "function_body [3610,3706]"
    },
    {
      "src": "member_expression [29737,29747]",
      "dest": "member_expression [29810,29820]"
    },
    {
      "src": "identifier: isTopLevelCall [11663,11677]",
      "dest": "identifier: isTopLevelCall [11663,11677]"
    },
    {
      "src": "identifier: sendValue [2476,2485]",
      "dest": "identifier: sendValue [2476,2485]"
    },
    {
      "src": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [5467,5633]",
      "dest": "comment: /**      * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],      * but performing a static call.      *      * _Available since v3.3._      */ [5467,5633]"
    },
    {
      "src": "): ) [11583,11584]",
      "dest": "): ) [11583,11584]"
    },
    {
      "src": ",: , [26450,26451]",
      "dest": ",: , [26450,26451]"
    },
    {
      "src": "primitive_type [26275,26282]",
      "dest": "primitive_type [26275,26282]"
    },
    {
      "src": "meta_type_expression [14455,14466]",
      "dest": "meta_type_expression [14455,14466]"
    },
    {
      "src": "): ) [18899,18900]",
      "dest": "): ) [18899,18900]"
    },
    {
      "src": "array_access [28902,28937]",
      "dest": "array_access [28975,29010]"
    },
    {
      "src": ".: . [29164,29165]",
      "dest": ".: . [29237,29238]"
    },
    {
      "src": "identifier: SafeMath [21910,21918]",
      "dest": "identifier: SafeMath [21910,21918]"
    },
    {
      "src": "visibility [5701,5709]",
      "dest": "visibility [5701,5709]"
    },
    {
      "src": "primitive_type [4604,4611]",
      "dest": "primitive_type [4604,4611]"
    },
    {
      "src": ",: , [16348,16349]",
      "dest": ",: , [16348,16349]"
    },
    {
      "src": "type_name [7539,7544]",
      "dest": "type_name [7539,7544]"
    },
    {
      "src": "(: ( [25015,25016]",
      "dest": "(: ( [25015,25016]"
    },
    {
      "src": "{: { [17041,17042]",
      "dest": "{: { [17041,17042]"
    },
    {
      "src": "bool: bool [16047,16051]",
      "dest": "bool: bool [16047,16051]"
    },
    {
      "src": "identifier: signer [24333,24339]",
      "dest": "identifier: signer [24333,24339]"
    },
    {
      "src": "visibility [27214,27222]",
      "dest": "visibility [27214,27222]"
    },
    {
      "src": "string: string [26324,26330]",
      "dest": "string: string [26324,26330]"
    },
    {
      "src": "identifier: amount [2673,2679]",
      "dest": "identifier: amount [2673,2679]"
    },
    {
      "src": "identifier: _msgSender [28491,28501]",
      "dest": "identifier: _msgSender [28564,28574]"
    },
    {
      "src": ",: , [27822,27823]",
      "dest": ",: , [27822,27823]"
    },
    {
      "src": "string_literal [23926,23960]",
      "dest": "string_literal [23926,23960]"
    },
    {
      "src": "event_definition [26181,26249]",
      "dest": "event_definition [26181,26249]"
    },
    {
      "src": "}: } [6344,6345]",
      "dest": "}: } [6344,6345]"
    },
    {
      "src": "returns: returns [20765,20772]",
      "dest": "returns: returns [20765,20772]"
    },
    {
      "src": "==: == [17430,17432]",
      "dest": "==: == [17430,17432]"
    },
    {
      "src": "memory: memory [27471,27477]",
      "dest": "memory: memory [27471,27477]"
    },
    {
      "src": "address: address [25322,25329]",
      "dest": "address: address [25322,25329]"
    },
    {
      "src": "parameter [5180,5192]",
      "dest": "parameter [5180,5192]"
    },
    {
      "src": "call_argument [5429,5439]",
      "dest": "call_argument [5429,5439]"
    },
    {
      "src": "else: else [7708,7712]",
      "dest": "else: else [7708,7712]"
    },
    {
      "src": ",: , [28281,28282]",
      "dest": ",: , [28328,28329]"
    },
    {
      "src": "block_statement [7197,7255]",
      "dest": "block_statement [7197,7255]"
    },
    {
      "src": ".: . [28081,28082]",
      "dest": ".: . [28081,28082]"
    },
    {
      "src": "(: ( [28709,28710]",
      "dest": "(: ( [28782,28783]"
    },
    {
      "src": "expression_statement [14440,14471]",
      "dest": "expression_statement [14440,14471]"
    },
    {
      "src": "): ) [27609,27610]",
      "dest": "): ) [27609,27610]"
    },
    {
      "src": "primitive_type [28448,28455]",
      "dest": "primitive_type [28521,28528]"
    },
    {
      "src": "address: address [25873,25880]",
      "dest": "address: address [25873,25880]"
    },
    {
      "src": "variable_declaration [24540,24558]",
      "dest": "variable_declaration [24540,24558]"
    },
    {
      "src": "comment: // File: try.sol [24931,24947]",
      "dest": "comment: // File: try.sol [24931,24947]"
    },
    {
      "src": "primitive_type [25309,25316]",
      "dest": "primitive_type [25309,25316]"
    },
    {
      "src": "identifier: b [17485,17486]",
      "dest": "identifier: b [17485,17486]"
    },
    {
      "src": "(: ( [23418,23419]",
      "dest": "(: ( [23418,23419]"
    },
    {
      "src": "true: true [11928,11932]",
      "dest": "true: true [11928,11932]"
    },
    {
      "src": "==: == [17081,17083]",
      "dest": "==: == [17081,17083]"
    },
    {
      "src": "call_argument [6313,6323]",
      "dest": "call_argument [6313,6323]"
    },
    {
      "src": "[: [ [29311,29312]",
      "dest": "[: [ [29384,29385]"
    },
    {
      "src": "type_name [24012,24019]",
      "dest": "type_name [24012,24019]"
    },
    {
      "src": "\": \" [3697,3698]",
      "dest": "\": \" [3697,3698]"
    },
    {
      "src": "return_statement [7679,7697]",
      "dest": "return_statement [7679,7697]"
    },
    {
      "src": "{: { [18901,18902]",
      "dest": "{: { [18901,18902]"
    },
    {
      "src": "): ) [15775,15776]",
      "dest": "): ) [15775,15776]"
    },
    {
      "src": "): ) [21657,21658]",
      "dest": "): ) [21657,21658]"
    },
    {
      "src": "pure: pure [23859,23863]",
      "dest": "pure: pure [23859,23863]"
    },
    {
      "src": "bytes: bytes [3596,3601]",
      "dest": "bytes: bytes [3596,3601]"
    },
    {
      "src": "parameter [4577,4594]",
      "dest": "parameter [4577,4594]"
    },
    {
      "src": "identifier: tryMod [17323,17329]",
      "dest": "identifier: tryMod [17323,17329]"
    },
    {
      "src": "function_body [18173,18202]",
      "dest": "function_body [18173,18202]"
    },
    {
      "src": "uint: uint [25356,25360]",
      "dest": "uint: uint [25356,25360]"
    },
    {
      "src": "type_name [29467,29474]",
      "dest": "type_name [29540,29547]"
    },
    {
      "src": ",: , [17761,17762]",
      "dest": ",: , [17761,17762]"
    },
    {
      "src": "(: ( [24195,24196]",
      "dest": "(: ( [24195,24196]"
    },
    {
      "src": "call_argument [2681,2683]",
      "dest": "call_argument [2681,2683]"
    },
    {
      "src": "if_statement [11878,11943]",
      "dest": "if_statement [11878,11943]"
    },
    {
      "src": "primitive_type [3983,3988]",
      "dest": "primitive_type [3983,3988]"
    },
    {
      "src": "): ) [1265,1266]",
      "dest": "): ) [1265,1266]"
    },
    {
      "src": "pure: pure [17783,17787]",
      "dest": "pure: pure [17783,17787]"
    },
    {
      "src": "event_definition [11119,11152]",
      "dest": "event_definition [11119,11152]"
    },
    {
      "src": "primitive_type [28710,28717]",
      "dest": "primitive_type [28783,28790]"
    },
    {
      "src": "parameter [3983,4000]",
      "dest": "parameter [3983,4000]"
    },
    {
      "src": "{: { [4075,4076]",
      "dest": "{: { [4075,4076]"
    },
    {
      "src": "return_statement [6262,6339]",
      "dest": "return_statement [6262,6339]"
    },
    {
      "src": "{: { [17061,17062]",
      "dest": "{: { [17061,17062]"
    },
    {
      "src": "function: function [25653,25661]",
      "dest": "function: function [25653,25661]"
    },
    {
      "src": "event: event [26362,26367]",
      "dest": "event: event [26362,26367]"
    },
    {
      "src": "): ) [28869,28870]",
      "dest": "): ) [28942,28943]"
    },
    {
      "src": "[: [ [28050,28051]",
      "dest": "[: [ [28050,28051]"
    },
    {
      "src": "identifier: feesBuffer [27129,27139]",
      "dest": "identifier: feesBuffer [27129,27139]"
    },
    {
      "src": ",: , [6097,6098]",
      "dest": ",: , [6097,6098]"
    },
    {
      "src": ",: , [2709,2710]",
      "dest": ",: , [2709,2710]"
    },
    {
      "src": ",: , [16011,16012]",
      "dest": ",: , [16011,16012]"
    },
    {
      "src": "string: string [20003,20009]",
      "dest": "string: string [20003,20009]"
    },
    {
      "src": "parameter [6702,6714]",
      "dest": "parameter [6702,6714]"
    },
    {
      "src": "type_name [7825,7831]",
      "dest": "type_name [7825,7831]"
    },
    {
      "src": "address: address [24343,24350]",
      "dest": "address: address [24343,24350]"
    },
    {
      "src": "primitive_type [11595,11599]",
      "dest": "primitive_type [11595,11599]"
    },
    {
      "src": ">: > [16102,16103]",
      "dest": ">: > [16102,16103]"
    },
    {
      "src": "identifier: feeReceiver [25888,25899]",
      "dest": "identifier: feeReceiver [25888,25899]"
    },
    {
      "src": "): ) [11841,11842]",
      "dest": "): ) [11841,11842]"
    },
    {
      "src": "(: ( [27181,27182]",
      "dest": "(: ( [27181,27182]"
    },
    {
      "src": "primitive_type [6678,6685]",
      "dest": "primitive_type [6678,6685]"
    },
    {
      "src": "}: } [20881,20882]",
      "dest": "}: } [20881,20882]"
    },
    {
      "src": "call_expression [28051,28063]",
      "dest": "call_expression [28051,28063]"
    },
    {
      "src": "uint256: uint256 [21575,21582]",
      "dest": "uint256: uint256 [21575,21582]"
    },
    {
      "src": "(: ( [7655,7656]",
      "dest": "(: ( [7655,7656]"
    },
    {
      "src": "return_statement [16752,16770]",
      "dest": "return_statement [16752,16770]"
    },
    {
      "src": "call_expression [14314,14380]",
      "dest": "call_expression [14314,14380]"
    },
    {
      "src": "}: } [17834,17835]",
      "dest": "}: } [17834,17835]"
    },
    {
      "src": "call_argument [27967,27990]",
      "dest": "call_argument [27967,27990]"
    },
    {
      "src": "identifier: token [28931,28936]",
      "dest": "identifier: token [29004,29009]"
    },
    {
      "src": "(: ( [6162,6163]",
      "dest": "(: ( [6162,6163]"
    },
    {
      "src": "]: ] [26946,26947]",
      "dest": "]: ] [26946,26947]"
    },
    {
      "src": "identifier: token [27369,27374]",
      "dest": "identifier: token [27369,27374]"
    },
    {
      "src": "function: function [14644,14652]",
      "dest": "function: function [14644,14652]"
    },
    {
      "src": "call_expression [27040,27052]",
      "dest": "call_expression [27040,27052]"
    },
    {
      "src": "function_definition [29657,29817]",
      "dest": "function_definition [29730,29890]"
    },
    {
      "src": "=: = [27491,27492]",
      "dest": "=: = [27491,27492]"
    },
    {
      "src": ",: , [27990,27991]",
      "dest": ",: , [27990,27991]"
    },
    {
      "src": "(: ( [6187,6188]",
      "dest": "(: ( [6187,6188]"
    },
    {
      "src": "function_definition [4513,4767]",
      "dest": "function_definition [4513,4767]"
    },
    {
      "src": "visibility [16024,16032]",
      "dest": "visibility [16024,16032]"
    },
    {
      "src": "string: string [6107,6113]",
      "dest": "string: string [6107,6113]"
    },
    {
      "src": "expression_statement [27959,28024]",
      "dest": "expression_statement [27959,28024]"
    },
    {
      "src": "}: } [12061,12062]",
      "dest": "}: } [12061,12062]"
    },
    {
      "src": "function: function [29552,29560]",
      "dest": "function: function [29625,29633]"
    },
    {
      "src": "(: ( [24386,24387]",
      "dest": "(: ( [24386,24387]"
    },
    {
      "src": "identifier: returndata [8213,8223]",
      "dest": "identifier: returndata [8213,8223]"
    },
    {
      "src": "identifier: x [29325,29326]",
      "dest": "identifier: x [29398,29399]"
    },
    {
      "src": "yul_function_call [8164,8181]",
      "dest": "yul_function_call [8164,8181]"
    },
    {
      "src": "\": \" [27928,27929]",
      "dest": "\": \" [27928,27929]"
    },
    {
      "src": "uint256: uint256 [26233,26240]",
      "dest": "uint256: uint256 [26233,26240]"
    },
    {
      "src": "type: type [14409,14413]",
      "dest": "type: type [14409,14413]"
    },
    {
      "src": "identifier: isSpotter [26582,26591]",
      "dest": "identifier: isSpotter [26582,26591]"
    },
    {
      "src": "): ) [24252,24253]",
      "dest": "): ) [24252,24253]"
    },
    {
      "src": "address: address [26622,26629]",
      "dest": "address: address [26622,26629]"
    },
    {
      "src": "(: ( [23548,23549]",
      "dest": "(: ( [23548,23549]"
    },
    {
      "src": "identifier: sender [24903,24909]",
      "dest": "identifier: sender [24903,24909]"
    },
    {
      "src": "solidity_pragma_token [21848,21863]",
      "dest": "solidity_pragma_token [21848,21863]"
    },
    {
      "src": "number_literal: 0 [3663,3664]",
      "dest": "number_literal: 0 [3663,3664]"
    },
    {
      "src": "{: { [21679,21680]",
      "dest": "{: { [21679,21680]"
    },
    {
      "src": "true: true [17475,17479]",
      "dest": "true: true [17475,17479]"
    },
    {
      "src": ",: , [4714,4715]",
      "dest": ",: , [4714,4715]"
    },
    {
      "src": "): ) [28022,28023]",
      "dest": "): ) [28022,28023]"
    },
    {
      "src": "binary_expression [13197,13237]",
      "dest": "binary_expression [13197,13237]"
    },
    {
      "src": "call_argument [23160,23195]",
      "dest": "call_argument [23160,23195]"
    },
    {
      "src": "(: ( [16790,16791]",
      "dest": "(: ( [16790,16791]"
    },
    {
      "src": "type_name [17381,17388]",
      "dest": "type_name [17381,17388]"
    },
    {
      "src": "call_argument [27808,27813]",
      "dest": "call_argument [27808,27813]"
    },
    {
      "src": "identifier: token [27437,27442]",
      "dest": "identifier: token [27437,27442]"
    },
    {
      "src": "type_name [25035,25039]",
      "dest": "type_name [25035,25039]"
    },
    {
      "src": "state_mutability [1276,1280]",
      "dest": "state_mutability [1276,1280]"
    },
    {
      "src": "): ) [23848,23849]",
      "dest": "): ) [23848,23849]"
    },
    {
      "src": ",: , [8224,8225]",
      "dest": ",: , [8224,8225]"
    },
    {
      "src": "function: function [18834,18842]",
      "dest": "function: function [18834,18842]"
    },
    {
      "src": "expression_statement [27887,27946]",
      "dest": "expression_statement [27887,27946]"
    },
    {
      "src": "primitive_type [25140,25146]",
      "dest": "primitive_type [25140,25146]"
    },
    {
      "src": "function_body [23048,23635]",
      "dest": "function_body [23048,23635]"
    },
    {
      "src": "): ) [27635,27636]",
      "dest": "): ) [27635,27636]"
    },
    {
      "src": "primitive_type [20680,20687]",
      "dest": "primitive_type [20680,20687]"
    },
    {
      "src": "identifier: success [5301,5308]",
      "dest": "identifier: success [5301,5308]"
    },
    {
      "src": ">: > [21703,21704]",
      "dest": ">: > [21703,21704]"
    },
    {
      "src": "expression_statement [11912,11933]",
      "dest": "expression_statement [11912,11933]"
    },
    {
      "src": "tuple_expression [16759,16769]",
      "dest": "tuple_expression [16759,16769]"
    },
    {
      "src": "call_argument [28881,28888]",
      "dest": "call_argument [28954,28961]"
    },
    {
      "src": "call_argument [24292,24296]",
      "dest": "call_argument [24292,24296]"
    },
    {
      "src": "{: { [26685,26686]",
      "dest": "{: { [26685,26686]"
    },
    {
      "src": "assignment_expression [13330,13350]",
      "dest": "assignment_expression [13330,13350]"
    },
    {
      "src": ",: , [28172,28173]",
      "dest": ",: , [28172,28173]"
    },
    {
      "src": "): ) [28941,28942]",
      "dest": "): ) [29014,29015]"
    },
    {
      "src": "identifier: a [21742,21743]",
      "dest": "identifier: a [21742,21743]"
    },
    {
      "src": "}: } [29816,29817]",
      "dest": "}: } [29889,29890]"
    },
    {
      "src": "variable_declaration [2633,2645]",
      "dest": "variable_declaration [2633,2645]"
    },
    {
      "src": "parameter [15686,15690]",
      "dest": "parameter [15686,15690]"
    },
    {
      "src": "parameter [25477,25489]",
      "dest": "parameter [25477,25489]"
    },
    {
      "src": ".: . [14512,14513]",
      "dest": ".: . [14512,14513]"
    },
    {
      "src": "identifier: account [1520,1527]",
      "dest": "identifier: account [1520,1527]"
    },
    {
      "src": "call_argument [28351,28373]",
      "dest": "call_argument [28410,28432]"
    },
    {
      "src": "return_statement [20145,20158]",
      "dest": "return_statement [20145,20158]"
    },
    {
      "src": "external: external [25123,25131]",
      "dest": "external: external [25123,25131]"
    },
    {
      "src": "uint256: uint256 [22161,22168]",
      "dest": "uint256: uint256 [22161,22168]"
    },
    {
      "src": "identifier: require [23462,23469]",
      "dest": "identifier: require [23462,23469]"
    },
    {
      "src": "string_literal [24355,24374]",
      "dest": "string_literal [24355,24374]"
    },
    {
      "src": "(: ( [20058,20059]",
      "dest": "(: ( [20058,20059]"
    },
    {
      "src": "}: } [8324,8325]",
      "dest": "}: } [8324,8325]"
    },
    {
      "src": "): ) [17388,17389]",
      "dest": "): ) [17388,17389]"
    },
    {
      "src": "(: ( [23835,23836]",
      "dest": "(: ( [23835,23836]"
    },
    {
      "src": "{: { [11983,11984]",
      "dest": "{: { [11983,11984]"
    },
    {
      "src": "(: ( [19440,19441]",
      "dest": "(: ( [19440,19441]"
    },
    {
      "src": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations.  *  * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler  * now has built in overflow checking.  */ [15269,15465]",
      "dest": "comment: /**  * @dev Wrappers over Solidity's arithmetic operations.  *  * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler  * now has built in overflow checking.  */ [15269,15465]"
    },
    {
      "src": ",: , [4594,4595]",
      "dest": ",: , [4594,4595]"
    },
    {
      "src": "identifier: b [17136,17137]",
      "dest": "identifier: b [17136,17137]"
    },
    {
      "src": ".: . [6878,6879]",
      "dest": ".: . [6878,6879]"
    },
    {
      "src": "identifier: userAddress [21975,21986]",
      "dest": "identifier: userAddress [21975,21986]"
    },
    {
      "src": "{: { [28750,28751]",
      "dest": "{: { [28823,28824]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol) [76,143]",
      "dest": "comment: // OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol) [76,143]"
    },
    {
      "src": "call_expression [24196,24253]",
      "dest": "call_expression [24196,24253]"
    },
    {
      "src": "struct_field_assignment [28297,28316]",
      "dest": "struct_field_assignment [28344,28371]"
    },
    {
      "src": "bool: bool [15686,15690]",
      "dest": "bool: bool [15686,15690]"
    },
    {
      "src": "call_expression [27529,27583]",
      "dest": "call_expression [27529,27583]"
    },
    {
      "src": "call_argument [7231,7243]",
      "dest": "call_argument [7231,7243]"
    },
    {
      "src": "identifier: tokenName [26459,26468]",
      "dest": "identifier: tokenName [26459,26468]"
    },
    {
      "src": "call_argument [23570,23580]",
      "dest": "call_argument [23570,23580]"
    },
    {
      "src": "parameter [25082,25095]",
      "dest": "parameter [25082,25095]"
    },
    {
      "src": "yul_evm_builtin [8205,8208]",
      "dest": "yul_evm_builtin [8205,8208]"
    },
    {
      "src": "comment: /**      * @dev Returns the subtraction of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [15847,15981]",
      "dest": "comment: /**      * @dev Returns the subtraction of two unsigned integers, with an overflow flag.      *      * _Available since v3.4._      */ [15847,15981]"
    },
    {
      "src": "primitive_type [25398,25402]",
      "dest": "primitive_type [25398,25402]"
    },
    {
      "src": "return_type_definition [23864,23881]",
      "dest": "return_type_definition [23864,23881]"
    },
    {
      "src": "primitive_type [3959,3966]",
      "dest": "primitive_type [3959,3966]"
    },
    {
      "src": "call_argument [28073,28074]",
      "dest": "call_argument [28073,28074]"
    },
    {
      "src": "visibility [14887,14895]",
      "dest": "visibility [14887,14895]"
    },
    {
      "src": "identifier: a [16717,16718]",
      "dest": "identifier: a [16717,16718]"
    },
    {
      "src": "bytes: bytes [5724,5729]",
      "dest": "bytes: bytes [5724,5729]"
    },
    {
      "src": ",: , [28350,28351]",
      "dest": ",: , [28409,28410]"
    },
    {
      "src": "{: { [22151,22152]",
      "dest": "{: { [22151,22152]"
    },
    {
      "src": "identifier: depositer [29152,29161]",
      "dest": "identifier: depositer [29225,29234]"
    },
    {
      "src": "array_access [27675,27702]",
      "dest": "array_access [27675,27702]"
    },
    {
      "src": "call_expression [28286,28321]",
      "dest": "call_expression [28333,28376]"
    },
    {
      "src": "type_name [19407,19414]",
      "dest": "type_name [19407,19414]"
    },
    {
      "src": "function_definition [14860,14953]",
      "dest": "function_definition [14860,14953]"
    },
    {
      "src": "parameter [2513,2527]",
      "dest": "parameter [2513,2527]"
    },
    {
      "src": "): ) [25622,25623]",
      "dest": "): ) [25622,25623]"
    },
    {
      "src": "type_name [26275,26282]",
      "dest": "type_name [26275,26282]"
    },
    {
      "src": "identifier: success [23470,23477]",
      "dest": "identifier: success [23470,23477]"
    },
    {
      "src": "string [26721,26732]",
      "dest": "string [26721,26732]"
    },
    {
      "src": "identifier: require [7075,7082]",
      "dest": "identifier: require [7075,7082]"
    },
    {
      "src": "{: { [7866,7867]",
      "dest": "{: { [7866,7867]"
    },
    {
      "src": "identifier: token [28817,28822]",
      "dest": "identifier: token [28890,28895]"
    },
    {
      "src": "solidity_version: 0.8.0 [15108,15113]",
      "dest": "solidity_version: 0.8.0 [15108,15113]"
    },
    {
      "src": "memory: memory [24546,24552]",
      "dest": "memory: memory [24546,24552]"
    },
    {
      "src": ".: . [29151,29152]",
      "dest": ".: . [29224,29225]"
    },
    {
      "src": ",: , [5242,5243]",
      "dest": ",: , [5242,5243]"
    },
    {
      "src": "=: = [27428,27429]",
      "dest": "=: = [27428,27429]"
    },
    {
      "src": "(: ( [15815,15816]",
      "dest": "(: ( [15815,15816]"
    },
    {
      "src": "if_statement [16663,16692]",
      "dest": "if_statement [16663,16692]"
    },
    {
      "src": "state_mutability [16033,16037]",
      "dest": "state_mutability [16033,16037]"
    },
    {
      "src": "identifier: isTopLevelCall [11882,11896]",
      "dest": "identifier: isTopLevelCall [11882,11896]"
    },
    {
      "src": "type_name [25567,25571]",
      "dest": "type_name [25567,25571]"
    },
    {
      "src": "\": \" [2682,2683]",
      "dest": "\": \" [2682,2683]"
    },
    {
      "src": "binary_expression [16740,16745]",
      "dest": "binary_expression [16740,16745]"
    },
    {
      "src": "(: ( [24185,24186]",
      "dest": "(: ( [24185,24186]"
    },
    {
      "src": "{: { [29719,29720]",
      "dest": "{: { [29792,29793]"
    },
    {
      "src": "comment: // OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol) [8404,8483]",
      "dest": "comment: // OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol) [8404,8483]"
    },
    {
      "src": "uint256: uint256 [24012,24019]",
      "dest": "uint256: uint256 [24012,24019]"
    },
    {
      "src": "): ) [25196,25197]",
      "dest": "): ) [25196,25197]"
    },
    {
      "src": ",: , [22018,22019]",
      "dest": ",: , [22018,22019]"
    },
    {
      "src": "expression_statement [13330,13351]",
      "dest": "expression_statement [13330,13351]"
    },
    {
      "src": "identifier: depositedEth [28147,28159]",
      "dest": "identifier: depositedEth [28147,28159]"
    },
    {
      "src": "primitive_type [14701,14706]",
      "dest": "primitive_type [14701,14706]"
    },
    {
      "src": "expression_statement [23720,23741]",
      "dest": "expression_statement [23720,23741]"
    },
    {
      "src": "member_expression [2556,2577]",
      "dest": "member_expression [2556,2577]"
    },
    {
      "src": "identifier: index [24796,24801]",
      "dest": "identifier: index [24796,24801]"
    },
    {
      "src": "call_argument [23470,23477]",
      "dest": "call_argument [23470,23477]"
    },
    {
      "src": "): ) [5160,5161]",
      "dest": "): ) [5160,5161]"
    },
    {
      "src": "type_name [25948,25955]",
      "dest": "type_name [25948,25955]"
    },
    {
      "src": "returns: returns [24136,24143]",
      "dest": "returns: returns [24136,24143]"
    },
    {
      "src": "identifier: owner [24387,24392]",
      "dest": "identifier: owner [24387,24392]"
    },
    {
      "src": "\": \" [13239,13240]",
      "dest": "\": \" [13239,13240]"
    },
    {
      "src": "identifier: value [28185,28190]",
      "dest": "identifier: value [28185,28190]"
    },
    {
      "src": "uint8: uint8 [24112,24117]",
      "dest": "uint8: uint8 [24112,24117]"
    },
    {
      "src": "expression_statement [28335,28375]",
      "dest": "expression_statement [28394,28434]"
    },
    {
      "src": "struct_member [26907,26921]",
      "dest": "struct_member [26907,26921]"
    },
    {
      "src": "call_argument [5212,5242]",
      "dest": "call_argument [5212,5242]"
    },
    {
      "src": "}: } [7260,7261]",
      "dest": "}: } [7260,7261]"
    },
    {
      "src": "identifier: a [17760,17761]",
      "dest": "identifier: a [17760,17761]"
    },
    {
      "src": "call_argument [27836,27848]",
      "dest": "call_argument [27836,27848]"
    },
    {
      "src": "identifier: value [4612,4617]",
      "dest": "identifier: value [4612,4617]"
    },
    {
      "src": "return: return [16783,16789]",
      "dest": "return: return [16783,16789]"
    },
    {
      "src": "function_body [11585,12068]",
      "dest": "function_body [11585,12068]"
    },
    {
      "src": "yul_hex_number: 0xffffffffffffffffffffffffffffffffffffffff [24805,24847]",
      "dest": "yul_hex_number: 0xffffffffffffffffffffffffffffffffffffffff [24805,24847]"
    },
    {
      "src": "visibility [17003,17011]",
      "dest": "visibility [17003,17011]"
    },
    {
      "src": "parameter [18130,18139]",
      "dest": "parameter [18130,18139]"
    },
    {
      "src": "}: } [23974,23975]",
      "dest": "}: } [23974,23975]"
    },
    {
      "src": ".: . [28291,28292]",
      "dest": ".: . [28338,28339]"
    },
    {
      "src": "if_statement [17424,17454]",
      "dest": "if_statement [17424,17454]"
    },
    {
      "src": "address: address [1250,1257]",
      "dest": "address: address [1250,1257]"
    },
    {
      "src": "visibility [24124,24130]",
      "dest": "visibility [24124,24130]"
    },
    {
      "src": "\": \" [5788,5789]",
      "dest": "\": \" [5788,5789]"
    },
    {
      "src": "call_expression [20102,20131]",
      "dest": "call_expression [20102,20131]"
    },
    {
      "src": "): ) [27848,27849]",
      "dest": "): ) [27848,27849]"
    },
    {
      "src": "): ) [18482,18483]",
      "dest": "): ) [18482,18483]"
    },
    {
      "src": "function: function [1230,1238]",
      "dest": "function: function [1230,1238]"
    },
    {
      "src": "): ) [23509,23510]",
      "dest": "): ) [23509,23510]"
    },
    {
      "src": "comment: /**      * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.      * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized      * to any version. It is recommended to use this to lock implementation contracts that are designed to be called      * through proxies.      *      * Emits an {Initialized} event the first time it is successfully executed.      */ [13775,14250]",
      "dest": "comment: /**      * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.      * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized      * to any version. It is recommended to use this to lock implementation contracts that are designed to be called      * through proxies.      *      * Emits an {Initialized} event the first time it is successfully executed.      */ [13775,14250]"
    },
    {
      "src": "(: ( [16739,16740]",
      "dest": "(: ( [16739,16740]"
    },
    {
      "src": "function_body [23882,23975]",
      "dest": "function_body [23882,23975]"
    },
    {
      "src": "}: } [16168,16169]",
      "dest": "}: } [16168,16169]"
    },
    {
      "src": "\": \" [5244,5245]",
      "dest": "\": \" [5244,5245]"
    },
    {
      "src": "}: } [17497,17498]",
      "dest": "}: } [17497,17498]"
    },
    {
      "src": "{: { [18516,18517]",
      "dest": "{: { [18516,18517]"
    },
    {
      "src": "identifier: call [5344,5348]",
      "dest": "identifier: call [5344,5348]"
    },
    {
      "src": "): ) [15661,15662]",
      "dest": "): ) [15661,15662]"
    },
    {
      "src": "{: { [6827,6828]",
      "dest": "{: { [6827,6828]"
    },
    {
      "src": ",: , [23960,23961]",
      "dest": ",: , [23960,23961]"
    },
    {
      "src": "call_argument [24235,24252]",
      "dest": "call_argument [24235,24252]"
    },
    {
      "src": "visibility [3578,3586]",
      "dest": "visibility [3578,3586]"
    },
    {
      "src": "identifier: require [29729,29736]",
      "dest": "identifier: require [29802,29809]"
    },
    {
      "src": "parameter [22971,22983]",
      "dest": "parameter [22971,22983]"
    },
    {
      "src": "call_argument [23962,23966]",
      "dest": "call_argument [23962,23966]"
    },
    {
      "src": "): ) [5192,5193]",
      "dest": "): ) [5192,5193]"
    },
    {
      "src": "primitive_type [20774,20781]",
      "dest": "primitive_type [20774,20781]"
    },
    {
      "src": "modifier_definition [11562,12068]",
      "dest": "modifier_definition [11562,12068]"
    },
    {
      "src": "boolean_literal [13346,13350]",
      "dest": "boolean_literal [13346,13350]"
    },
    {
      "src": "=: = [28786,28787]",
      "dest": "=: = [28859,28860]"
    },
    {
      "src": "bool: bool [14910,14914]",
      "dest": "bool: bool [14910,14914]"
    },
    {
      "src": "bytes: bytes [23034,23039]",
      "dest": "bytes: bytes [23034,23039]"
    },
    {
      "src": "parameter [4642,4654]",
      "dest": "parameter [4642,4654]"
    },
    {
      "src": "tuple_expression [17443,17453]",
      "dest": "tuple_expression [17443,17453]"
    },
    {
      "src": "call_argument [29298,29333]",
      "dest": "call_argument [29371,29406]"
    },
    {
      "src": "parameter [15641,15650]",
      "dest": "parameter [15641,15650]"
    },
    {
      "src": "identifier: b [20825,20826]",
      "dest": "identifier: b [20825,20826]"
    },
    {
      "src": "tuple_expression [16114,16124]",
      "dest": "tuple_expression [16114,16124]"
    },
    {
      "src": "}: } [21763,21764]",
      "dest": "}: } [21763,21764]"
    },
    {
      "src": "number_literal: 1 [27386,27387]",
      "dest": "number_literal: 1 [27386,27387]"
    },
    {
      "src": "identifier: feesBuffer [27917,27927]",
      "dest": "identifier: feesBuffer [27917,27927]"
    },
    {
      "src": "=: = [11865,11866]",
      "dest": "=: = [11865,11866]"
    },
    {
      "src": "identifier: userAddress [23094,23105]",
      "dest": "identifier: userAddress [23094,23105]"
    },
    {
      "src": ",: , [25826,25827]",
      "dest": ",: , [25826,25827]"
    },
    {
      "src": "identifier: tokensName [27824,27834]",
      "dest": "identifier: tokensName [27824,27834]"
    },
    {
      "src": "public: public [25913,25919]",
      "dest": "public: public [25913,25919]"
    },
    {
      "src": "emit_statement [12032,12052]",
      "dest": "emit_statement [12032,12052]"
    },
    {
      "src": "function: function [4513,4521]",
      "dest": "function: function [4513,4521]"
    },
    {
      "src": "bytes: bytes [22020,22025]",
      "dest": "bytes: bytes [22020,22025]"
    },
    {
      "src": "parameter [25322,25332]",
      "dest": "parameter [25322,25332]"
    },
    {
      "src": "primitive_type [26815,26822]",
      "dest": "primitive_type [26815,26822]"
    },
    {
      "src": "binary_expression [16152,16157]",
      "dest": "binary_expression [16152,16157]"
    },
    {
      "src": "{: { [8272,8273]",
      "dest": "{: { [8272,8273]"
    },
    {
      "src": "{: { [14304,14305]",
      "dest": "{: { [14304,14305]"
    },
    {
      "src": "call_argument [24220,24224]",
      "dest": "call_argument [24220,24224]"
    },
    {
      "src": "false [15785,15790]",
      "dest": "false [15785,15790]"
    },
    {
      "src": "primitive_type [23659,23666]",
      "dest": "primitive_type [23659,23666]"
    },
    {
      "src": "): ) [25489,25490]",
      "dest": "): ) [25489,25490]"
    },
    {
      "src": "primitive_type [14506,14511]",
      "dest": "primitive_type [14506,14511]"
    },
    {
      "src": "visibility [18869,18877]",
      "dest": "visibility [18869,18877]"
    },
    {
      "src": "{: { [27389,27390]",
      "dest": "{: { [27389,27390]"
    },
    {
      "src": "identifier: verify [23990,23996]",
      "dest": "identifier: verify [23990,23996]"
    },
    {
      "src": "parameter [4604,4617]",
      "dest": "parameter [4604,4617]"
    },
    {
      "src": "identifier: success [28861,28868]",
      "dest": "identifier: success [28934,28941]"
    },
    {
      "src": "type_name [28269,28273]",
      "dest": "type_name [28316,28320]"
    },
    {
      "src": "revert_statement [8286,8307]",
      "dest": "revert_statement [8286,8307]"
    },
    {
      "src": "function_body [15701,15841]",
      "dest": "function_body [15701,15841]"
    },
    {
      "src": "return: return [16138,16144]",
      "dest": "return: return [16138,16144]"
    },
    {
      "src": "\": \" [7133,7134]",
      "dest": "\": \" [7133,7134]"
    },
    {
      "src": "member_expression [24497,24507]",
      "dest": "member_expression [24497,24507]"
    },
    {
      "src": "}: } [16809,16810]",
      "dest": "}: } [16809,16810]"
    },
    {
      "src": "member_expression [28181,28190]",
      "dest": "member_expression [28181,28190]"
    },
    {
      "src": "}: } [5460,5461]",
      "dest": "}: } [5460,5461]"
    },
    {
      "src": "function: function [17314,17322]",
      "dest": "function: function [17314,17322]"
    },
    {
      "src": "uint8: uint8 [14414,14419]",
      "dest": "uint8: uint8 [14414,14419]"
    },
    {
      "src": "solidity_version: 0.8.0 [21858,21863]",
      "dest": "solidity_version: 0.8.0 [21858,21863]"
    },
    {
      "src": "primitive_type [25610,25614]",
      "dest": "primitive_type [25610,25614]"
    },
    {
      "src": "identifier: this [11742,11746]",
      "dest": "identifier: this [11742,11746]"
    },
    {
      "src": "type_name [27403,27409]",
      "dest": "type_name [27403,27409]"
    },
    {
      "src": "function_body [29719,29817]",
      "dest": "function_body [29792,29890]"
    },
    {
      "src": "uint256: uint256 [16390,16397]",
      "dest": "uint256: uint256 [16390,16397]"
    },
    {
      "src": "memory: memory [20725,20731]",
      "dest": "memory: memory [20725,20731]"
    },
    {
      "src": "identifier: require [28960,28967]",
      "dest": "identifier: require [29033,29040]"
    },
    {
      "src": "call_expression [21693,21721]",
      "dest": "call_expression [21693,21721]"
    },
    {
      "src": "primitive_type [24265,24272]",
      "dest": "primitive_type [24265,24272]"
    },
    {
      "src": "identifier: txArray [28729,28736]",
      "dest": "identifier: txArray [28802,28809]"
    },
    {
      "src": "function: function [7783,7791]",
      "dest": "function: function [7783,7791]"
    },
    {
      "src": ",: , [27834,27835]",
      "dest": ",: , [27834,27835]"
    },
    {
      "src": "): ) [24523,24524]",
      "dest": "): ) [24523,24524]"
    },
    {
      "src": "block_statement [27873,28202]",
      "dest": "block_statement [27873,28202]"
    },
    {
      "src": "[: [ [23234,23235]",
      "dest": "[: [ [23234,23235]"
    },
    {
      "src": "binary_expression [18918,18923]",
      "dest": "binary_expression [18918,18923]"
    },
    {
      "src": "): ) [26355,26356]",
      "dest": "): ) [26355,26356]"
    },
    {
      "src": "(: ( [14459,14460]",
      "dest": "(: ( [14459,14460]"
    },
    {
      "src": "expression_statement [27063,27107]",
      "dest": "expression_statement [27063,27107]"
    },
    {
      "src": "return_statement [4085,4145]",
      "dest": "return_statement [4085,4145]"
    },
    {
      "src": "]: ] [28063,28064]",
      "dest": "]: ] [28063,28064]"
    },
    {
      "src": "false [13387,13392]",
      "dest": "false [13387,13392]"
    },
    {
      "src": "internal: internal [17003,17011]",
      "dest": "internal: internal [17003,17011]"
    },
    {
      "src": "identifier: sender [24476,24482]",
      "dest": "identifier: sender [24476,24482]"
    },
    {
      "src": "): ) [5224,5225]",
      "dest": "): ) [5224,5225]"
    },
    {
      "src": "member_expression [23383,23401]",
      "dest": "member_expression [23383,23401]"
    },
    {
      "src": "return: return [5748,5754]",
      "dest": "return: return [5748,5754]"
    }
  ],
  "actions": [
    {
      "action": "insert-node",
      "tree": "if_statement [28211,28489]",
      "parent": "function_body [27231,28495]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "if: if [28211,28213]",
      "parent": "if_statement [28211,28489]",
      "at": 0
    },
    {
      "action": "insert-node",
      "tree": "(: ( [28213,28214]",
      "parent": "if_statement [28211,28489]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "binary_expression [28214,28253]",
      "parent": "if_statement [28211,28489]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "): ) [28253,28254]",
      "parent": "if_statement [28211,28489]",
      "at": 3
    },
    {
      "action": "insert-node",
      "tree": "block_statement [28254,28489]",
      "parent": "if_statement [28211,28489]",
      "at": 4
    },
    {
      "action": "insert-node",
      "tree": "{: { [28254,28255]",
      "parent": "block_statement [28254,28489]",
      "at": 0
    },
    {
      "action": "move-tree",
      "tree": "if_statement [28211,28416]",
      "parent": "block_statement [28254,28489]",
      "at": 1
    },
    {
      "action": "move-tree",
      "tree": "expression_statement [28388,28406]",
      "parent": "block_statement [28254,28489]",
      "at": 2
    },
    {
      "action": "insert-node",
      "tree": "}: } [28488,28489]",
      "parent": "block_statement [28254,28489]",
      "at": 3
    },
    {
      "action": "insert-tree",
      "tree": "binary_expression [28271,28296]",
      "parent": "if_statement [28268,28448]",
      "at": 2
    },
    {
      "action": "insert-tree",
      "tree": "member_expression [28350,28371]",
      "parent": "struct_field_assignment [28344,28371]",
      "at": 2
    },
    {
      "action": "delete-node",
      "tree": "identifier: feesCollected [28303,28316]"
    }
  ]
}